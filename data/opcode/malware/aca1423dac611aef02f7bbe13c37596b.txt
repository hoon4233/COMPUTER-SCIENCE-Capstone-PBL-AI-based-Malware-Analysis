sbb
add
mov
push
imul
mov
sti
push
stos
(bad)
jp
in
jne
xchg
push
cmp
dec
cmp
daa
xchg
cmp
push
test
cmp
jbe
mov
sar
and
xchg
js
jno
retf
cmp
(bad)
scas
pop
and
cmps
mov
aam
push
mul
inc
in
out
push
jno
shl
and
jbe
outs
pop
add
sti
mov
aaa
dec
and
in
inc
in
sub
cs
inc
inc
jp
sbb
dec
push
dec
fwait
mov
movs
lods
in
aad
enter
cmps
ss
test
in
imul
inc
stc
fiadd
test
outs
mov
addr16
movs
call
ror
inc
jmp
mov
loope
pop
cdq
adc
call
xchg
sbb
or
dec
aas
xor
das
mov
inc
or
and
add
sti
sbb
add
mov
mov
pop
test
scas
push
pop
data16
mov
frndint
fnstsw
mov
dec
es
push
ror
add
test
jmp
addr16
idiv
cld
inc
mov
sbb
adc
dec
jb
jp
test
imul
(bad)
pop
je
out
mov
int
mov
sub
shr
dec
cwde
push
in
stos
and
mov
or
das
mov
test
jg
mov
fisttp
in
push
cmps
mov
cvtdq2ps
repz
sbb
inc
outs
mov
lahf
aaa
mov
lds
add
cmps
adc
cmp
imul
adc
adc
pop
sti
push
imul
mov
jecxz
adc
scas
aas
out
cmps
ret
in
dec
sbb
iret
sbb
push
imul
xlat
push
fs
mov
daa
push
xchg
push
sub
add
jle
cmps
aas
outs
scas
and
jbe
icebp
(bad)
aaa
xchg
aaa
mov
cmc
mov
nop
pop
push
outs
dec
(bad)
push
adc
fmul
or
or
fwait
imul
stc
inc
or
jne
ret
daa
call
les
cmc
inc
push
jmp
pop
ja
test
sbb
jb
mov
movsx
icebp
cwde
mov
shr
jns
into
and
sbb
rcr
jmp
cli
sbb
pop
push
(bad)
and
sar
lahf
repz
push
dec
popf
popa
and
inc
and
aas
sbb
dec
jmp
mov
lds
test
mov
fwait
outs
fsubr
xchg
mov
push
outs
call
(bad)
js
sub
jnp
cli
and
dec
(bad)
and
push
push
(bad)
into
push
sub
pop
mov
movs
pop
sub
dec
pop
inc
mov
test
stc
clc
or
jns
int
push
push
loope
sub
(bad)
sbb
pop
(bad)
push
push
ret
mov
jmp
xchg
dec
test
sbb
inc
xlat
dec
push
pop
jle
push
(bad)
ss
dec
outs
call
adc
jg
in
data16
lods
fist
xchg
xchg
es
lahf
or
push
jl
loop
pusha
sub
into
dec
fmul
xchg
or
add
call
inc
fstp
aaa
je
mov
adc
les
retf
sar
cld
mul
add
sahf
sbb
int
hlt
outs
test
dec
fcomip
aas
retf
cmps
push
push
daa
add
sbb
outs
xor
sub
iret
push
mov
outs
jo
or
aaa
adc
fild
jno
iret
(bad)
cld
cmc
jno
mov
mov
inc
mov
shl
stc
dec
dec
fsubp
aam
(bad)
mov
jbe
fiadd
adc
sub
out
aas
repz
sub
lea
loop
call
arpl
popf
pop
fs
dec
sub
add
ss
mov
adc
jle
jmp
(bad)
call
mov
scas
fwait
call
pop
ds
dec
test
sbb
les
fidivr
sbb
and
addr16
mov
or
ins
lock
jbe
cld
push
or
fmul
xor
bound
mov
cmp
jmp
or
test
jo
inc
push
push
mov
and
loop
jecxz
cmp
or
bnd
xor
xlat
mov
sub
int
popf
in
xchg
(bad)
sub
dec
ror
dec
les
out
push
aam
jbe
fstp
addr16
orps
retf
sbb
push
pop
aaa
dec
mov
pop
inc
mov
jg
inc
push
sbb
xor
test
data16
jg
test
mov
pop
adc
call
int3
ret
add
sahf
sbb
fcom
mov
adc
jle
cmps
mov
retf
ins
push
sbb
neg
sub
jne
ins
out
gs
adc
ficomp
ret
sar
ins
fnstsw
dec
loope
add
retf
or
out
test
imul
jecxz
int3
mov
mov
or
data16
out
dec
push
xchg
ja
jno
xor
push
les
stc
cld
xchg
dec
aam
adc
adc
pop
cmps
loop
sbb
ds
cmp
mov
popa
sbb
retf
das
jge
pop
(bad)
stos
retf
inc
fdivr
sub
call
aad
bound
mov
adc
cld
ret
jle
mov
shl
xor
fistp
addr16
sbb
sub
and
or
jo
retf
add
push
mov
add
in
imul
xchg
imul
pop
or
pop
rol
call
mov
mov
repnz
popf
aad
xlat
push
push
sbb
add
mov
mov
sbb
popf
push
ficom
sbb
xor
fld
pop
and
in
mov
enter
out
out
les
mov
(bad)
(bad)
jp
add
pop
pop
jbe
cld
add
pop
sub
jns
jns
xchg
pushf
data16
aad
frstor
dec
xor
std
cmps
cmps
add
rcr
mov
pop
das
and
or
loopne
movs
rol
(bad)
call
retf
push
cwde
mov
dec
das
pop
addr16
sbb
shl
out
mov
sbb
out
pop
dec
ja
jne
fwait
mov
mov
lahf
mov
out
clc
das
push
add
aam
mov
jmp
ja
mov
mov
call
mov
cmp
in
or
cmp
fwait
inc
test
fimul
sub
mov
sbb
outs
(bad)
test
add
xchg
fsubr
sti
(bad)
ins
test
outs
test
push
dec
aam
cmc
fcmovnu
cmp
add
mov
in
and
mov
mov
aaa
test
scas
inc
xchg
lds
je
xchg
jb
out
rcl
pop
nop
mov
sar
adc
mov
pop
dec
sbb
loop
jmp
jne
adc
mov
repnz
cdq
pop
push
inc
dec
aad
dec
add
pop
add
xchg
xchg
mov
je
aaa
stos
hlt
fucomip
mov
daa
arpl
pop
into
push
or
movs
and
jb
dec
(bad)
fmul
mov
(bad)
and
scas
pop
and
out
ret
in
inc
pop
jl
(bad)
stc
or
scas
sti
mov
pop
sbb
xchg
and
and
setae
pop
lahf
jle
js
cmc
jp
cs
lahf
dec
lock
push
mov
xchg
aad
pop
or
js
mov
ja
inc
add
mov
stc
pop
sti
pop
popf
call
shl
int
dec
in
mov
add
inc
dec
jbe
jns
xor
dec
mov
pop
sti
popf
push
stc
adc
stos
test
das
std
(bad)
test
sub
push
push
mov
in
test
pop
push
xor
mov
nop
sbb
imul
ins
adc
add
xor
pusha
mov
push
fist
add
std
imul
ja
mov
push
adc
cld
jne
cli
rcr
cmc
stos
aas
xor
enter
bound
int3
ffreep
sahf
cmp
imul
lock
pop
iret
pop
shl
hlt
aas
xchg
add
push
jmp
loopne
jecxz
test
mov
enter
pop
neg
mov
mov
or
loope
or
daa
or
pop
mov
jno
idiv
lock
in
test
(bad)
sar
dec
jmp
push
pop
mov
leave
fdiv
xchg
push
sbb
mov
sbb
cmps
movs
ins
or
xchg
leave
shl
dec
arpl
push
jge
add
mov
std
rol
add
xchg
cmp
(bad)
call
outs
shl
mul
or
data16
mov
mov
or
retf
(bad)
mov
push
jl
test
mov
mov
xchg
out
in
inc
les
mov
mov
push
mov
pop
in
and
sbb
push
cli
dec
hlt
in
fdiv
iret
out
pusha
dec
cmc
out
add
test
jecxz
mov
xlat
fsub
int3
inc
jne
les
cli
leave
repz
add
mov
(bad)
mov
push
cmp
mov
jg
push
mov
adc
in
sbb
fist
sar
gs
xor
add
xor
push
shl
or
inc
pop
js
pop
(bad)
xchg
ja
pop
mov
mov
push
(bad)
imul
adc
pop
cmp
adc
sti
xchg
or
ins
jg
out
pop
jbe
mov
sbb
std
jo
mov
ret
addr16
test
js
out
push
mov
lahf
mov
fidiv
or
aam
inc
mov
mov
fsubr
enter
sub
adc
xchg
arpl
push
(bad)
fucomip
cmps
cwde
add
mov
je
iret
(bad)
aam
je
dec
ja
pusha
push
adc
sbb
out
inc
data16
in
jae
pop
scas
jno
aas
mov
enter
(bad)
mov
pop
and
rcl
sbb
pop
sub
adc
dec
xor
cwde
lds
and
fisub
test
jg
pop
(bad)
push
adc
jne
call
scas
xchg
es
inc
mov
jno
xor
stos
sbb
lea
pop
push
sub
and
sbb
inc
pusha
jmp
popa
int
add
mov
and
push
push
out
shl
mov
dec
mov
sbb
(bad)
sub
int
mov
ss
jle
push
pavgb
pop
test
shr
mov
jnp
add
mov
lods
push
xor
stc
imul
popf
jmp
pop
icebp
ficom
ret
push
dec
mov
jne
mov
inc
in
pop
sub
jp
out
stos
push
into
ds
push
bound
cmp
add
(bad)
inc
dec
icebp
mov
push
push
mov
enter
push
pop
mov
mov
mov
mov
out
sbb
sbb
ret
sub
movs
fcmovu
shl
ficom
xchg
js
test
pop
addr16
ror
inc
ds
push
aaa
add
pop
pop
loopne
stos
add
sti
mov
mov
lods
or
je
jb
sti
fcomi
out
mov
fisub
scas
fbstp
loope
movs
cmp
imul
jmp
repnz
das
into
(bad)
retf
out
add
rcr
scas
and
mov
test
std
jo
aaa
not
popf
sub
dec
mov
pop
dec
dec
inc
xchg
mov
sub
enter
or
repz
inc
popf
sbb
mov
ret
push
ror
mov
and
std
xchg
and
cmps
jbe
sbb
call
pop
test
cld
imul
adc
daa
fcmovne
or
sub
mov
or
(bad)
jecxz
in
enter
xchg
sub
(bad)
push
mov
mov
jle
lds
jl
mov
pop
sub
xor
or
cld
jnp
cdq
leave
fs
and
stos
std
imul
sahf
rcr
(bad)
imul
inc
loopne
cdq
mov
shl
dec
or
mov
inc
add
hlt
repnz
lods
or
rcl
mov
loopne
in
retf
xor
xchg
pop
test
out
or
mov
mov
fucomp
xor
into
adc
cmp
inc
ja
stos
add
push
ss
mov
ins
and
fcmovnbe
cmp
sbb
inc
xchg
lods
pushw
pop
inc
jmp
movs
push
sub
dec
hlt
in
inc
or
in
js
sub
push
pop
clc
loop
push
lahf
scas
jnp
push
out
in
xchg
push
ret
sar
std
aas
fld
in
inc
mov
and
test
out
arpl
in
jbe
mov
test
jmp
inc
fistp
pop
ficom
out
fist
fwait
jbe
jbe
or
nop
test
aad
setp
or
adc
sub
mov
sub
mov
lods
cmp
push
scas
cli
enter
icebp
jo
rcl
sbb
dec
xchg
push
les
sub
or
ja
aaa
aam
scas
mov
cmp
adc
dec
in
out
inc
push
mov
cdq
stc
and
out
aad
nop
rcr
mov
add
aas
cwde
ret
pop
popf
jbe
adc
jae
pop
mov
mov
sbb
fisubr
jns
add
in
jb
test
pop
sbb
mov
add
cmp
jo
call
sub
cld
xor
rcl
das
out
arpl
or
stos
sub
lods
popf
mov
hlt
dec
into
dec
pop
cmp
mov
in
mov
test
lahf
inc
dec
neg
jg
in
pop
mov
aas
cmp
aad
mov
push
pop
sub
jmp
test
mov
mov
stc
cmp
(bad)
pushf
mov
adc
and
or
das
dec
and
loope
(bad)
fdivr
mov
sbb
ds
test
sub
popa
sbb
lods
sub
jle
inc
cli
xor
xor
mov
dec
out
adc
and
in
add
call
push
enter
push
sbb
push
inc
pop
aad
adc
(bad)
loope
addr16
test
shl
fsub
add
and
mov
xchg
adc
cmp
int3
lods
inc
push
push
jne
dec
sbb
and
inc
in
(bad)
cmp
jbe
test
mov
pop
inc
not
cmps
xor
cmp
jmp
call
ret
fdiv
addr16
inc
mov
jne
sbb
mov
cmp
xor
daa
inc
mov
movs
ds
bound
push
mov
or
pop
xor
mov
pop
mov
sub
pop
jmp
fwait
xchg
scas
mov
stc
mov
call
lods
mov
nop
jle
or
repz
and
pop
cmp
div
test
imul
or
xor
out
pop
clc
cmps
inc
in
mul
fwait
adc
pop
cmp
arpl
sub
mov
jp
mov
pop
cmp
sar
sub
arpl
fisubr
dec
pop
push
pop
popf
xchg
mov
mov
(bad)
cmc
sub
and
lods
(bad)
lahf
sub
xor
lock
mov
pop
bound
and
and
neg
lods
je
mov
mov
xchg
sub
adc
jno
out
xchg
inc
les
xchg
les
or
arpl
xor
lds
hlt
icebp
dec
mov
ss
add
retf
scas
cmp
push
or
imul
mov
cmp
xchg
dec
cld
adc
cmps
xlat
xor
int3
fnstsw
jle
ds
mov
mov
mov
push
push
adc
inc
in
test
call
icebp
(bad)
sti
xor
lods
es
sbb
dec
sbb
fnstenv
mov
aad
and
out
loop
and
in
sbb
not
pop
rcl
mov
daa
cmc
xchg
cmps
enter
or
fild
fucompp
or
int3
xchg
test
inc
loopne
nop
(bad)
push
jnp
inc
and
add
out
sub
test
shl
jp
rcr
mov
(bad)
icebp
cmp
fild
out
icebp
mov
or
pop
lahf
ror
scas
test
fwait
rol
aam
daa
mov
das
xor
jns
inc
adc
stc
add
sub
mov
sub
dec
push
mov
fwait
sub
xchg
mov
test
adc
repz
xchg
int3
inc
lahf
push
xor
enter
stos
mov
stos
ins
outs
retf
or
enter
or
xor
and
xor
sub
fcomp
fs
xor
shl
ret
ss
(bad)
jmp
pop
inc
iret
call
mov
mov
jle
push
sub
xor
imul
popw
loope
ret
loop
xor
jnp
xchg
and
push
inc
shl
cmp
sbb
sbb
xor
pop
mov
test
lahf
pop
jmp
add
jl
xor
push
push
idiv
ss
cmp
data16
loop
and
(bad)
shr
push
rcr
fst
neg
outs
sbb
mov
daa
or
or
enter
sbb
pop
fprem1
adc
jmp
icebp
out
lahf
lock
lods
(bad)
mov
mov
fdivr
in
mov
jmp
or
inc
loop
lods
ret
nop
cmp
out
jne
dec
adc
xchg
retf
clc
fld
outs
jno
mov
mov
repz
imul
outs
push
das
fwait
in
add
jbe
add
and
das
mov
pop
test
std
add
mov
push
rcl
loopne
cmps
pop
jmp
aam
cdq
pop
scas
in
dec
test
aad
and
std
hlt
pop
lock
push
pop
cli
sub
std
jge
mov
mov
pop
ja
lds
loopne
inc
dec
xlat
and
mov
repz
(bad)
fstp
in
enter
xor
(bad)
(bad)
sbb
inc
pop
std
cmps
jmp
adc
pushf
cs
pop
xor
stos
push
hlt
(bad)
and
je
pop
cmp
xchg
adc
jne
jb
push
fidivr
out
loop
jb
sbb
(bad)
lea
cmc
dec
xchg
movs
repnz
shr
xchg
sub
adc
mov
dec
outs
loop
mov
dec
test
dec
pop
std
lds
les
xchg
adc
mov
test
cmp
scas
xchg
test
cmp
mov
fldenv
adc
fwait
mov
call
sahf
push
retf
fimul
jp
mov
push
(bad)
mov
shld
jns
cmp
bound
pop
sub
jae
mov
jecxz
pop
es
gs
pusha
cld
add
sar
daa
int3
cmps
jne
stos
imul
fs
test
xor
xchg
inc
loopne
mov
es
mov
cmp
xchg
mov
cli
repnz
or
inc
daa
sub
mov
addr16
(bad)
cli
(bad)
test
cmp
call
jbe
retf
or
jne
mov
and
adc
or
das
cdq
test
adc
mov
imul
mov
add
lods
push
sbb
mov
into
xchg
data16
sahf
movs
or
xor
daa
aaa
cli
rcr
mov
fwait
mov
fs
mov
in
call
jmp
jmp
pop
out
data16
xchg
cmp
into
mov
imul
and
pusha
pop
movsx
inc
or
push
adc
pushf
clc
xor
mov
sub
movs
mov
mov
clc
aaa
cmp
push
push
push
arpl
clc
jo
adc
fsubr
stos
dec
shl
adc
pop
jge
sbb
push
and
sub
aad
rcl
mov
mov
mov
mov
cld
prefetch
inc
cld
cs
js
jmp
(bad)
lods
shl
cwde
sbb
mov
call
add
jmp
sbb
inc
lock
cmp
daa
dec
jmp
cmc
pop
test
pop
mov
or
retf
js
in
popf
test
loopne
call
xor
repz
jmp
movs
jns
pop
jecxz
mov
dec
sbb
es
imul
sub
adc
pop
xchg
or
cmovnp
popf
mov
dec
jae
adc
mov
add
dec
xlat
stos
sub
in
add
sbb
and
cmp
mov
rcr
add
cmp
loope
bswap
test
outs
push
call
xor
mov
call
loope
inc
lahf
(bad)
mov
fcom
dec
out
jle
stc
inc
sub
xor
lock
lods
inc
sub
sahf
xchg
dec
add
and
mov
icebp
mov
scas
ret
retf
push
mov
xchg
movs
shl
shr
fidiv
xchg
aam
cld
lea
xchg
dec
and
push
jns
pop
or
in
mul
test
or
mov
arpl
push
loop
or
mov
push
ins
cmp
dec
imul
aas
mov
dec
xchg
(bad)
mov
or
out
ret
hlt
xor
jmp
or
add
sar
adc
inc
call
jno
fwait
imul
xor
scas
mov
adc
xchg
add
sbb
adc
jno
xor
loopne
inc
neg
fwait
shl
mov
pop
mov
into
pop
and
pop
or
or
nop
adc
(bad)
aas
sub
push
pop
push
mov
(bad)
sbb
mov
jns
popa
jo
retf
sbb
pop
out
pop
xor
cmp
fcom
cmp
xchg
nop
or
inc
pop
test
add
and
scas
ret
dec
clc
jge
jmp
adc
movs
das
std
jno
inc
adc
xchg
xor
push
pop
xchg
push
sahf
out
test
pop
push
sbb
pop
inc
and
pushf
icebp
inc
cdq
cmp
mov
jg
xor
loope
cmp
dec
ret
es
retf
pop
lds
ja
lahf
fs
sbb
fimul
dec
mov
mov
imul
shr
jmp
mov
and
test
add
mov
mov
jg
and
sub
clc
fnstsw
jb
dec
mov
mov
imul
jge
(bad)
dec
mov
adc
mov
cmp
ins
hlt
mov
mov
cmp
inc
sbb
mov
mov
retf
out
icebp
dec
(bad)
mov
cmp
mov
call
sub
(bad)
loope
fiadd
fs
mov
xchg
cmovg
pop
mov
pop
daa
sbb
int
(bad)
jmp
ret
sub
(bad)
ins
inc
out
dec
imul
xchg
jmp
rcr
xor
xor
loop
mov
pop
jmp
(bad)
fcmove
mov
xchg
xor
sbb
ret
jbe
and
test
shr
aaa
push
inc
push
fs
shl
fbstp
inc
retf
aad
cs
jp
jle
inc
jl
mov
mov
loop
xlat
mov
jo
sub
xor
std
dec
sti
jmp
in
or
add
test
xlat
add
test
ret
push
pusha
or
pop
lahf
lods
sbb
cs
lods
test
push
(bad)
dec
rcr
test
shl
lea
aam
or
ja
or
inc
inc
aad
aam
jae
adc
aad
jl
icebp
or
fldcw
cmp
test
mov
call
mov
cmp
lds
mov
mov
call
stos
inc
push
les
daa
cwde
test
add
cmp
add
loop
pop
retf
fcomp
cmp
xchg
push
pushf
ret
fld
or
aaa
cwde
mov
addr16
je
add
mov
mov
popf
jl
sbb
mov
push
and
sbb
add
test
sbb
xor
jo
sbb
add
cmps
sbb
(bad)
mov
xor
sub
push
mov
xchg
sbb
shl
(bad)
sub
neg
ffree
adc
xchg
and
arpl
mov
adc
jle
movs
push
push
or
retf
aaa
xchg
js
pop
nop
in
push
inc
popa
iret
arpl
int3
pusha
mov
and
shl
aaa
movs
(bad)
push
movs
sti
mov
sub
dec
fs
lods
add
xor
fs
jge
cdq
aam
mov
mov
leave
push
ds
add
cmp
sub
xchg
mov
adc
ja
mov
ror
stc
sub
out
out
push
xor
std
push
popa
aad
scas
ret
lahf
out
jnp
xchg
iret
imul
nop
repnz
std
sub
pusha
(bad)
push
cmps
jnp
loopne
cmp
or
shl
repz
outs
xchg
scas
(bad)
inc
movs
mov
sar
(bad)
mov
hlt
shl
aad
fcmovne
push
sbb
xor
imul
dec
push
dec
dec
gs
push
jmp
hlt
sbb
and
out
sbb
(bad)
xor
sti
pop
pop
push
rcr
outs
cmp
jne
cmp
sub
adc
jge
cwde
fild
or
loopne
or
fsubr
push
cwde
nop
jo
push
adc
or
idiv
int3
push
xchg
push
ins
sub
(bad)
sub
add
iret
mov
cmp
jl
and
stos
test
loopne
jecxz
and
xor
mov
or
cli
(bad)
(bad)
fld
sub
cmc
das
mov
add
sbb
xchg
xchg
pop
jne
dec
cmp
movzx
shr
mov
xor
mov
shr
scas
jno
mov
jne
jns
aam
std
and
cmp
sahf
sub
outs
xchg
or
into
clc
xchg
(bad)
mov
xchg
add
push
mov
dec
enter
cmp
retf
fst
mov
or
adc
push
mov
jmp
or
pop
sub
(bad)
aam
stos
addr16
lea
(bad)
and
aam
jbe
pop
mov
jge
sub
cmps
ja
outs
fstp
cmp
cld
push
or
pop
push
mov
icebp
mov
adc
rcl
je
mov
add
rcr
leave
push
outs
ret
adc
test
mov
push
xor
std
retf
cwde
retf
pop
push
sahf
push
sub
addr16
in
ja
shl
ret
dec
inc
ds
imul
add
mov
sbb
in
in
cs
xchg
ret
pop
jnp
loopne
mov
sub
mov
or
sub
and
(bad)
fcomip
out
pop
xor
sbb
cs
sahf
out
sub
(bad)
or
dec
loope
dec
push
dec
jne
fcomp
call
add
pop
je
mov
inc
mov
nop
fwait
adc
and
loopne
xor
push
push
xchg
xchg
ficom
lock
mov
mov
stos
ins
xchg
inc
test
fdivrp
imul
hlt
mov
push
loopne
sbb
fxch
push
add
jecxz
aaa
jae
sti
test
mov
jmp
enter
xchg
ror
das
cld
pop
cmp
lahf
iret
cmp
test
and
dec
lods
in
adc
bound
fwait
cmc
pop
cwde
fwait
pop
mov
in
das
push
mov
push
int
in
in
adc
push
dec
jo
jbe
es
mov
or
and
lds
ins
jp
xchg
pop
sbb
and
jne
xchg
not
add
push
dec
iret
xchg
mov
ss
jns
pop
xchg
shl
and
aad
push
aas
push
push
mov
std
xchg
adc
sbb
mov
push
(bad)
test
xlat
imul
aas
std
call
and
and
add
sub
jg
mov
mov
jbe
aaa
cwde
sbb
addr16
xlat
and
mov
rcr
and
jae
movs
mov
dec
hlt
mov
or
xchg
or
push
pop
std
retf
jne
int3
js
xchg
sub
inc
cmc
mov
gs
mov
cmp
sbb
sbb
fmul
push
lahf
add
add
xchg
and
into
repz
jb
mov
add
cdq
sar
retf
repnz
ds
pop
aaa
mov
shl
xchg
mov
mov
xor
lds
pop
scas
fdivp
inc
xor
or
cs
ret
sbb
adc
and
inc
in
fwait
jno
out
xchg
cmp
inc
adc
mov
nop
in
fdivr
mov
and
int
mov
bound
push
jmp
fisubr
mov
in
jae
mov
xchg
mov
loopne
int3
stos
push
dec
icebp
repnz
or
mov
jmp
aam
dec
pop
push
mov
or
adc
repnz
leave
adc
mov
jecxz
fnstcw
data16
sbb
sub
loope
cli
jmp
pop
cmp
xor
or
xor
dec
cmp
push
gs
rcl
jmp
inc
pop
cmps
test
popf
sbb
aad
pop
gs
jecxz
sbb
je
(bad)
lahf
xor
sbb
xor
push
xchg
or
push
sbb
pop
test
dec
or
ins
lea
xor
jp
inc
mov
push
scas
xlat
mov
shl
into
inc
xchg
push
arpl
frstor
sbb
fs
jge
pop
imul
jns
pop
inc
clc
push
dec
clc
inc
or
fiadd
mov
jb
icebp
mov
test
xchg
xor
fld
inc
and
jle
test
gs
jno
inc
jp
push
or
jbe
fwait
cmp
or
ficom
cmc
ror
out
cli
jg
sbb
jl
mov
mov
jbe
jle
mov
call
outs
out
mov
rol
push
int3
les
shr
push
mov
add
dec
add
mov
ficom
outs
push
sahf
mov
xchg
cmps
inc
icebp
xchg
inc
sub
(bad)
shl
aas
pop
sub
sub
or
movs
cwde
fmul
jne
and
out
lods
dec
or
and
lahf
adc
pop
(bad)
and
jmp
or
jl
cmp
inc
std
jg
sbb
idiv
jno
cld
jb
and
sahf
add
jb
pop
fwait
ss
pop
icebp
cmc
mul
(bad)
test
adc
sbb
aaa
cmp
xchg
out
cs
lock
rcl
lods
jmp
push
jns
movhlps
push
pshufw
call
retf
dec
push
aam
mov
pop
xchg
adc
jecxz
ds
mov
push
aad
retf
in
repnz
stos
jl
add
and
pop
sub
and
sub
ja
push
adc
xor
cmp
stos
cmp
psrlq
lea
stc
mov
stos
pop
pop
cmc
call
test
xor
mov
push
lods
sbb
xchg
sub
and
mov
pushf
fwait
cmp
pop
mov
push
arpl
leave
cs
mov
push
add
int3
add
rol
lods
inc
xor
aas
lock
rol
adc
and
inc
(bad)
sub
adc
lods
div
aam
in
into
pop
adc
sahf
repz
mov
adc
and
mov
ret
xchg
pop
(bad)
aas
pushf
(bad)
in
jg
mov
inc
pop
cmp
popa
test
scas
rol
push
ins
je
(bad)
jl
loop
sub
(bad)
xor
jg
jg
mov
fdiv
ds
cmp
add
ror
ficomp
jns
sets
into
mov
mov
imul
push
call
push
jge
push
dec
push
ror
es
mov
cs
pop
pop
jmp
vprotw
sbb
mov
cmp
cmp
push
rcr
cld
ins
mov
data16
repnz
pop
push
scas
pop
into
xchg
in
(bad)
xchg
push
xor
mov
shl
movs
mov
mov
jnp
js
mov
push
add
push
mov
xor
test
in
aad
pop
xlat
jp
cld
fisubr
push
lods
xor
leave
cs
jmp
sbb
xor
rcl
sub
xchg
adc
in
test
je
pusha
gs
ja
inc
outs
das
or
popa
xchg
icebp
cs
mov
jle
inc
mov
cwde
jmp
cmp
xlat
scas
and
cld
cdq
ret
sub
adc
bound
(bad)
add
fsubrp
in
test
xchg
push
pop
loope
push
mov
inc
movs
(bad)
(bad)
sub
jns
pop
(bad)
xor
call
cmp
or
pop
mov
(bad)
cmp
mov
or
or
or
shl
push
jne
push
add
es
ja
(bad)
repnz
nop
mov
adc
(bad)
mov
and
test
sbb
cwde
std
sub
cmp
mov
or
xchg
jmp
sub
out
cmp
mov
adc
dec
xchg
dec
dec
pop
movs
push
(bad)
add
iret
lock
ficom
xor
add
enter
xchg
cmps
bnd
push
jns
mov
xchg
clc
mov
cmps
repz
pop
test
std
xor
mov
gs
icebp
retf
add
inc
aam
hlt
out
pusha
xor
rcr
mov
push
mov
inc
or
xor
sbb
std
adc
or
dec
xchg
push
pop
dec
fimul
inc
adc
and
mov
cmps
jno
in
hlt
outs
push
and
ja
cmp
mov
ret
test
sbb
fnsave
out
pop
add
leave
jp
aad
pop
sub
mov
fistp
inc
ja
mov
jp
fs
mov
mov
std
jae
xchg
icebp
loop
and
adc
data16
stc
inc
repz
sahf
jnp
loopne
add
jle
push
cmp
icebp
mov
mov
cld
lock
adc
sbb
repnz
inc
loope
mov
(bad)
neg
sbb
add
fwait
jbe
adc
mov
cmps
cld
call
pusha
inc
int3
inc
stos
pop
stos
mov
out
mov
mov
xor
(bad)
aas
test
push
inc
rcr
fdiv
push
in
fbld
in
dec
ret
or
rol
je
(bad)
dec
sub
gs
repnz
call
ss
std
rcr
sub
or
icebp
aaa
test
jl
mov
call
inc
or
out
or
test
in
mov
imul
push
xor
adc
jl
sub
adc
push
and
loopne
sar
jns
jno
ds
inc
or
push
cmp
aas
push
(bad)
test
inc
pop
in
cmps
xchg
inc
imul
clc
xchg
aaa
xchg
(bad)
push
(bad)
test
mov
cld
xchg
pop
dec
cmps
sbb
jp
lea
cmps
xchg
inc
mov
(bad)
clc
inc
iret
test
outs
fdivrp
mov
cmp
idiv
js
mov
inc
mov
mov
leave
ret
or
dec
dec
sbb
jo
ret
and
popa
hlt
mov
enter
out
enter
pop
pop
ss
lahf
std
cmp
lods
pop
pop
mov
fs
mov
pop
shl
xchg
rcl
mov
mov
jnp
pcmpeqb
cld
jle
out
mov
int
(bad)
inc
cs
push
pusha
sbb
sbb
add
pop
push
pushf
aad
jnp
push
adc
cmp
stos
ins
fmul
mov
mov
jne
ret
xchg
mov
iretw
cmc
inc
jns
aaa
dec
fadd
xor
aaa
scas
pop
xchg
ret
mov
fs
popa
aas
es
fisub
inc
es
dec
or
hlt
out
jbe
stos
into
dec
lahf
mov
xchg
jno
cmp
xchg
addr16
xchg
add
(bad)
pop
shl
or
or
xor
inc
iret
nop
jecxz
add
aad
rcr
ret
mov
inc
data16
xchg
lods
out
sti
sbb
imul
cdq
movs
(bad)
jno
sbb
xor
mov
xchg
outs
jo
jl
popa
aam
xchg
sbb
popa
or
pop
xchg
sbb
in
dec
xor
jae
pushf
or
enter
add
lds
mov
in
(bad)
ss
mov
les
je
call
mov
imul
dec
(bad)
xchg
sar
out
cmps
push
push
call
cmp
sbb
xchg
pop
fisubr
cld
xchg
call
ss
jo
pushf
clc
jne
test
sahf
cmp
(bad)
cmc
push
addr16
mov
dec
xor
mov
pusha
xchg
lds
pop
add
mov
ret
xchg
stc
push
push
adc
and
pushf
repnz
loop
out
shl
les
adc
lds
jo
sbb
pop
idiv
pop
and
dec
aaa
mov
add
add
(bad)
jo
mov
push
jne
or
jnp
lahf
imul
jmp
pop
aas
ficomp
and
and
inc
or
push
jmp
jge
loop
pop
dec
aas
int3
sbb
xchg
ja
fld
inc
sbb
pop
stc
sbb
das
sti
cmp
shl
inc
fwait
push
mov
sbb
inc
pop
xor
scas
(bad)
mov
pop
push
in
aam
shufps
aad
test
cmp
mov
cmc
repnz
push
imul
push
xchg
int
mov
or
dec
nop
call
pop
xchg
icebp
arpl
xchg
test
lahf
pop
imul
(bad)
out
cmc
loopne
adc
inc
push
mov
aam
sbb
and
push
ss
lods
test
pop
or
inc
mov
rcr
es
cwde
out
fwait
int3
mov
imul
nop
xor
xor
sti
call
ins
jle
xchg
mov
xchg
pop
xor
ja
(bad)
test
sub
push
test
push
jnp
inc
sbb
ja
scas
xchg
fst
xchg
xor
in
push
mov
jns
shrd
push
mov
sub
das
es
pop
lea
push
mov
dec
fcomip
xchg
lock
sub
cmp
fs
xchg
or
add
fsubr
jmp
push
pushw
mov
ins
push
push
and
push
mov
xor
and
add
mov
push
add
or
popa
or
lock
cmps
xor
ffree
imul
xor
fcom
xchg
xchg
ror
std
jecxz
aam
das
pusha
jo
mov
pop
lds
outs
push
pop
and
cmp
mov
mov
inc
daa
fstp
cmp
and
addr16
cmp
or
push
stos
lock
add
mov
xor
jle
xchg
in
rcl
pop
push
xchg
cmp
shl
idiv
cmp
sub
xchg
push
or
inc
addr16
inc
add
adc
aaa
mov
jno
sbb
cmp
jmp
(bad)
iret
mov
or
push
mov
rol
mov
and
and
cmp
inc
xchg
es
out
mul
or
sub
das
xor
lock
pop
mov
int3
add
push
test
icebp
or
push
ins
mov
and
test
leave
test
cmp
mov
movs
ja
push
dec
xsave
fdivr
es
mov
fcomp
mov
outs
xlat
(bad)
and
test
addr16
mov
push
dec
mov
stos
cmp
adc
mov
xchg
cmp
inc
push
jb
mov
mov
or
add
sbb
les
mov
stos
pop
retf
jecxz
xchg
ins
or
mov
lods
add
sub
sar
pop
cmps
sub
mov
int3
ss
adc
cld
enter
adc
mov
aas
mov
xchg
jb
xchg
out
add
retf
cs
sbb
inc
retf
std
mov
push
mov
rcl
cmp
out
dec
out
pop
jge
add
lea
sahf
out
es
stos
inc
fmul
jns
std
mov
sbb
retf
sbb
inc
jecxz
cmp
test
scas
(bad)
je
test
lods
pop
call
ficomp
xchg
sbb
stos
xchg
mov
int
fcmovnu
mov
xchg
inc
add
dec
ins
icebp
out
adc
lods
jo
repz
push
fld
fs
pop
xor
mov
sub
rcl
popf
sbb
cs
mov
dec
out
cwde
imul
and
pushf
cwde
dec
shl
or
aam
mov
cmp
xchg
inc
sub
call
jb
mov
mov
sub
lahf
ss
push
scas
sbb
xchg
cmp
push
sub
jbe
push
push
mov
mov
xchg
mov
into
and
(bad)
iret
pop
pop
xchg
repz
movs
loop
adc
push
push
clc
retf
test
stos
(bad)
dec
fdiv
cmp
sbb
aas
fisubr
push
xor
pop
arpl
je
xor
lds
nop
inc
push
mov
push
jae
push
cwde
dec
pop
adc
mov
pop
mov
fdiv
xchg
cld
loope
aas
sbb
dec
pushf
das
push
shl
mov
mov
and
lods
stc
add
pop
push
jg
ds
(bad)
jmp
jle
xchg
xor
iret
pop
(bad)
and
lods
push
xor
sub
addr16
jo
xor
sub
add
je
cmp
adc
ja
pop
ret
ja
add
xchg
jno
sbb
pop
mov
cli
jno
ror
call
mov
pop
leave
jl
clc
push
sbb
inc
push
gs
repnz
(bad)
shl
dec
enter
out
adc
out
push
and
cwde
sub
xchg
das
fldenv
pop
push
popfw
cmp
mov
ss
call
(bad)
jo
mov
and
push
push
cmp
js
jbe
pop
mov
push
shr
idiv
das
rol
push
sub
test
movs
in
or
mov
cmc
test
rol
repz
sub
push
inc
mov
repz
jbe
rol
les
jle
dec
ret
push
mov
es
(bad)
jecxz
lock
xchg
sub
add
xchg
enter
lahf
mov
jno
cmp
push
mov
inc
sahf
in
pushf
pop
outs
popa
rol
ds
je
rol
xchg
xchg
fcmovnu
adc
ins
sbb
scas
sub
mov
push
jge
cmc
push
xor
loope
fs
pop
in
stos
sbb
mov
xchg
test
cmp
pop
cmovbe
out
inc
mov
cli
jp
popa
sti
clc
mov
push
add
dec
xchg
xchg
dec
hlt
enter
jp
mov
outs
jnp
sub
aad
cmp
or
mov
jae
sahf
shr
loop
mov
jnp
cli
mov
call
sub
mov
(bad)
(bad)
data16
push
mov
mov
call
and
call
add
mov
aas
fisttp
lock
fisub
or
mov
out
fadd
mov
std
pop
shl
call
add
jmp
add
push
inc
add
mov
pop
adc
adc
cmp
leave
and
and
shl
or
repz
sub
jecxz
(bad)
scas
or
es
dec
mov
inc
xlat
xchg
mov
das
sub
push
pop
xrelease
out
leave
push
int
pop
cli
outs
fldenv
data16
inc
xchg
dec
retf
cmp
loope
stc
mov
jo
lods
xchg
xchg
shl
sbb
xor
ins
lock
into
fsub
arpl
loop
jmp
loope
repnz
push
mov
(bad)
dec
jnp
gs
daa
mov
adc
mov
add
sub
aam
in
dec
out
cmp
sbb
rol
in
jge
leave
mov
cmp
and
cs
les
fidivr
mov
and
stos
addr16
mov
xchg
jno
call
or
push
mov
retf
aad
jmp
pop
sbb
fwait
iret
xor
(bad)
sbb
and
icebp
push
mov
mov
adc
add
mov
cmc
jb
cli
into
mov
ja
test
mov
sub
call
jmp
and
enter
inc
adc
or
xor
add
ffreep
mov
iret
fdiv
enter
sar
shl
mov
loop
add
jg
gs
jmp
lods
popa
test
ins
std
lds
xchg
push
scas
test
cmp
lahf
je
movs
iret
inc
and
mov
ja
sbb
cs
mov
mov
ins
adc
jb
popf
push
xor
int
mov
cmp
in
add
or
pop
test
mov
jae
out
jns
fdivp
xchg
jmp
xor
popa
sub
mov
pushf
ins
fdivr
mov
mov
repz
pop
stos
lock
sbb
adc
sbb
shr
adc
inc
popa
out
pop
out
fistp
(bad)
outs
jns
movs
cli
aas
xor
ins
fwait
popf
and
sbb
es
sahf
cld
xchg
xor
adc
int3
push
push
dec
mov
pop
or
add
movs
sub
mov
and
inc
pusha
sub
push
push
in
dec
push
outs
sub
pop
enter
(bad)
(bad)
(bad)
out
loop
xchg
push
iret
sub
cmps
test
push
movs
call
xor
lods
fadd
xchg
iret
dec
lea
mov
int
aaa
sbb
dec
mov
jl
fstp
mov
pop
not
xchg
in
cmp
pop
dec
xchg
xchg
push
xor
inc
test
mov
mov
xchg
mov
xchg
xor
xchg
sub
xor
and
aaa
mov
shl
jb
ins
ds
push
sub
mov
es
sar
xchg
mov
iret
call
mov
cld
stos
test
jno
push
mov
pop
retf
cmp
pop
xchg
add
adc
pop
ins
pop
outs
jo
in
neg
daa
push
fild
inc
enter
adc
aam
cdq
clc
sbb
and
gs
mov
aam
jmp
xchg
mov
pop
xor
mov
aas
mov
and
shl
fs
mov
mov
das
sub
cmp
pop
xchg
int
mov
mov
sti
push
jge
push
adc
retf
stos
xchg
xor
push
call
cmps
cld
dec
xchg
jns
or
inc
fld
out
mov
sbb
movs
or
pop
push
adc
fsubp
sub
mov
adc
mov
push
push
mov
iret
mov
fucomip
dec
jecxz
repnz
mov
push
retf
clc
outs
(bad)
into
mov
sbb
clc
pop
adc
repnz
push
jne
fisubr
xor
jb
fs
shl
nop
repnz
and
leave
inc
sub
ficom
comiss
mov
xor
xchg
fnstsw
or
fs
mov
mov
sub
sar
scas
popa
lea
xchg
(bad)
int
cmp
(bad)
jns
rcr
adc
shr
adc
push
xchg
xor
sub
pop
cmp
fld
pop
pop
test
sbb
adc
xor
cmp
xor
shl
cmp
pop
popf
inc
sub
movs
popa
mov
pop
sbb
inc
arpl
inc
adc
and
enter
lahf
push
cmp
es
rcl
daa
aam
or
cmp
dec
add
jb
xchg
push
push
and
popa
fld
stos
ficom
sbb
sub
fistp
pop
pop
(bad)
outs
adc
mov
inc
sbb
enter
scas
push
jnp
out
cmps
test
retf
xchg
aad
and
xor
push
xchg
ins
push
inc
repnz
jo
cmps
sub
jae
(bad)
jle
pop
dec
leave
jmp
test
js
loop
inc
call
dec
repz
xchg
ds
std
push
add
mov
mov
xor
imul
and
push
les
adc
lods
fidivr
jae
lahf
je
jns
pop
sub
jmp
je
out
mov
mov
cdq
jmp
cmp
inc
stos
and
dec
xchg
in
sbb
mov
pop
ret
mov
push
or
jb
xchg
adc
jg
lods
xchg
jae
hlt
ss
cmp
add
stos
(bad)
aad
mov
adc
inc
or
xor
mov
dec
jns
ss
cmp
sar
push
inc
or
xchg
sar
push
nop
js
add
or
jbe
jno
nop
sbb
stc
scas
bound
dec
or
inc
xchg
adc
cmp
and
imul
xchg
retf
mov
aaa
jmp
sbb
popf
jbe
movs
and
push
mov
pop
lods
into
cmp
xchg
add
jl
and
inc
add
movs
stc
or
std
pop
pop
and
lods
dec
leave
mov
inc
jno
fadd
adc
fistp
test
push
jbe
mov
pop
mov
jnp
scas
ins
add
push
(bad)
mov
jmp
pop
addr16
adc
mov
jno
sbb
aas
adc
push
fwait
mov
sbb
or
xchg
sub
dec
mov
push
adc
outs
loope
mov
add
cmp
pop
call
cmps
jle
push
mov
jnp
push
fcomip
scas
xchg
inc
les
jmp
xor
push
out
cmc
jo
icebp
sbb
mov
adc
shl
cmp
leave
cli
push
pop
mul
fs
cli
ror
das
cmp
mov
ins
pop
jg
lock
xchg
retf
repnz
retf
or
out
jo
gs
and
popa
xchg
xor
and
xlat
cdq
push
adc
jae
test
loop
mov
movs
mov
add
cwde
scas
daa
outs
std
cli
and
pop
mov
jmp
aaa
mov
lods
pop
test
jecxz
bts
sub
inc
xor
ret
add
add
rcr
xchg
ja
dec
(bad)
aam
pushf
ret
add
pushf
movs
out
inc
jno
and
push
mov
in
push
inc
push
inc
pop
(bad)
aaa
jb
push
or
inc
sbb
test
jmp
jmp
imul
mov
mov
xor
mov
inc
sti
xor
cmp
push
das
loope
cmps
mov
xchg
std
mov
mov
xchg
lahf
pop
cwde
fild
xlat
mov
outs
jg
sbb
sbb
loop
mov
mov
in
dec
sub
loope
imul
sub
xchg
(bad)
push
fisubr
adc
mov
jp
mov
pop
lods
inc
add
test
and
out
jg
jns
int3
cmp
cli
mov
test
mov
jge
jp
rcl
mov
sahf
mov
xchg
(bad)
mov
cmps
pop
pushf
(bad)
scas
std
jp
test
jge
ins
imul
mov
push
shl
sub
clc
in
test
inc
pop
jmp
mov
cmp
shr
dec
adc
test
inc
cmp
push
bnd
mov
sbb
(bad)
or
pop
into
jbe
ss
inc
adc
scas
jae
sbb
dec
adc
pop
pop
pop
cmp
xor
fist
out
mov
sub
test
idiv
cmp
loop
dec
adc
sbb
outs
pop
pop
out
pop
mov
enter
sahf
jb
xchg
xchg
mov
xor
dec
stos
cli
inc
push
int3
test
mov
popf
cld
xchg
sub
sub
inc
pushf
pop
pop
pop
sar
adc
mov
imul
mov
iret
das
dec
(bad)
sub
mov
int3
hlt
lds
int3
push
test
push
pop
sub
push
xchg
out
dec
inc
fld
mov
lods
jo
add
push
lods
or
dec
mov
mov
loope
jno
jns
inc
jno
pop
fidiv
pop
stos
mov
mov
adc
mov
add
lahf
scas
pop
add
(bad)
arpl
iret
jecxz
inc
cmp
mov
out
scas
shr
scas
call
and
in
jge
add
out
jns
pop
or
not
jnp
push
dec
push
ret
sub
leave
es
cli
jne
xor
stos
inc
inc
adc
in
movs
fwait
out
push
sbb
sub
or
aam
enter
jle
cmp
pusha
and
in
and
imul
retf
test
inc
mov
iret
sub
jae
sbb
dec
cmp
add
call
int3
dec
pop
movs
adc
inc
xor
dec
adc
push
aas
or
push
retf
mov
add
cwde
shl
repnz
and
inc
mov
dec
or
sar
(bad)
mov
shl
cs
dec
rol
xor
mov
sbb
inc
ret
daa
fdivr
pop
cli
or
or
xor
inc
(bad)
sbb
out
in
lock
stos
jns
xor
imul
pop
xor
and
jnp
xor
shr
and
ret
ss
lds
shl
mov
jno
push
dec
and
in
push
inc
xlat
jmp
scas
pusha
mov
pop
inc
mov
adc
adc
and
mov
retf
repnz
and
retf
xchg
mov
add
clc
mov
adc
cmps
test
xor
or
adc
cdq
gs
sbb
movs
push
jmp
sti
div
xor
push
mov
lods
mov
and
mov
call
loop
pop
out
jp
push
xor
rcl
mov
jb
gs
push
push
xor
fadd
les
sub
jge
jmp
push
out
pop
xchg
or
rol
sbb
or
mov
pop
call
into
cmp
push
dec
or
gs
mov
push
mov
bound
mov
lock
xor
dec
cmps
sbb
cmc
cmp
adc
ret
pop
(bad)
(bad)
cwde
inc
mov
mov
push
not
inc
dec
ins
xor
lock
pop
mov
jmp
loope
lock
mov
in
xchg
push
jns
jnp
(bad)
fidivr
addr16
clc
jae
das
sub
sbb
push
add
mov
push
sbb
jbe
push
inc
add
dec
mov
sub
fdivrp
arpl
jecxz
scas
ja
dec
or
and
in
test
int
sbb
xchg
call
aas
leave
sub
leave
shl
mov
jp
cmp
arpl
jmp
xchg
and
pop
ret
js
push
xchg
cmp
repnz
lea
cmps
cli
into
test
pop
int3
mul
xlat
jns
adc
out
jo
les
sti
clc
das
repnz
imul
fst
xlat
jo
popf
imul
ins
cli
and
sahf
pop
add
pop
mov
ins
mov
hlt
sub
pop
arpl
aaa
xchg
jp
pop
test
push
adc
aam
jl
nop
cdq
and
mov
push
adc
sub
popa
mov
mov
adc
xchg
ja
sbb
int3
mov
ret
sbb
gs
outs
fisubr
(bad)
in
cmp
mov
jg
or
(bad)
repnz
or
fld
shl
mov
mov
and
lock
stos
mov
xor
pop
inc
xor
or
sbb
test
jmp
or
retf
mov
mov
push
sbb
gs
push
xchg
out
dec
mov
movs
sbb
push
sbb
pusha
fidiv
xchg
push
pop
fistp
jge
adc
inc
push
pop
cli
mul
repz
jbe
mov
movs
dec
nop
mov
inc
cdq
js
fistp
add
in
out
jp
les
es
ret
fnsave
cmps
jecxz
iret
sbb
mov
and
push
repnz
mov
das
push
pop
js
cld
jo
les
pop
xor
push
cli
push
sar
fwait
test
add
mov
or
ret
mov
sub
pop
ss
push
pop
mov
push
lahf
fnsave
push
retf
mov
cmps
adc
add
out
mov
ja
pop
and
sub
pop
jle
es
daa
xchg
push
mov
movs
shl
xchg
cmp
xchg
jge
pop
cdq
adc
xor
inc
mov
or
dec
push
inc
xor
push
or
(bad)
repz
out
and
rol
cs
aaa
jnp
sub
mov
jb
xchg
std
cld
sbb
xlat
xchg
fstp
and
dec
lods
retf
mov
retf
cmp
mov
inc
loope
call
pop
daa
out
cmp
and
xchg
inc
icebp
xchg
aas
mov
jmp
test
sub
fsubr
sub
add
ins
jle
cli
mov
inc
popf
sbb
ffreep
mov
shl
icebp
cmp
push
(bad)
or
jnp
mov
push
cmc
and
mov
mov
das
push
lock
sub
sbb
xchg
adc
pusha
stos
test
fild
mov
stos
fsubr
xchg
fidivr
sub
cmp
ins
inc
(bad)
shl
retf
inc
xor
push
mov
mov
movs
pop
test
fcomp
push
arpl
in
sbb
mov
bound
lock
ins
and
inc
mov
push
mov
mov
jl
mov
scas
pushf
push
or
arpl
fstp
enter
mov
mov
or
and
mov
shr
push
push
fimul
out
addr16
push
adc
pop
sub
pop
shr
(bad)
aas
push
push
iret
mov
addr16
xor
push
sub
add
icebp
adc
push
ins
ins
jae
push
loopne
jne
int3
test
int
pop
fwait
inc
xor
clc
adc
aad
mov
mov
iret
jl
test
ins
loope
add
movs
push
push
pop
loop
sbb
div
cmp
not
jnp
or
ja
(bad)
xor
mov
jnp
pop
fild
mov
jle
xlat
xor
sub
sahf
jge
mov
inc
jmp
loope
sub
xor
loop
xchg
test
adc
adc
scas
sbb
cmp
test
or
xchg
xor
inc
retf
cmp
mov
mov
sub
mov
cmp
push
movq
dec
mov
jno
inc
inc
mov
or
movs
inc
fld
mov
mov
or
ss
push
adc
(bad)
push
sbb
loopne
fsubr
mov
mov
push
data16
fstp
sbb
xchg
push
and
dec
mov
cli
or
push
mov
mov
or
ds
jne
sar
dec
cs
pop
mov
or
pop
inc
xchg
sub
loop
cmp
mov
jae
xchg
je
js
add
mov
imul
sub
repnz
repz
lods
xchg
div
dec
in
and
std
aam
scas
mov
addr16
sbb
loop
push
hlt
jmp
neg
popf
sub
call
xor
sar
imul
adc
in
adc
jl
rol
mov
outs
xchg
and
ror
dec
out
nop
dec
jae
scas
outs
dec
in
int3
(bad)
call
mov
pushf
mov
and
ja
push
jb
rol
shl
pop
imul
leave
sbb
pop
pop
mul
fwait
push
vmread
and
scas
mov
pushf
cmp
bound
fbstp
jne
repnz
ror
lahf
test
fstp
aam
jp
fsub
movs
pop
aaa
(bad)
sub
jns
push
push
(bad)
in
leave
xlat
cmp
cmps
aam
(bad)
push
push
inc
add
and
mov
in
iret
fdiv
fadd
ins
popf
hlt
sbb
dec
out
mov
ja
pop
jnp
in
or
test
mov
and
adc
vpsubsb
dec
lods
xchg
push
add
test
mov
xchg
lods
inc
ins
mov
pusha
js
lods
xlat
push
adc
aam
jbe
leave
dec
xchg
adc
jmp
mov
push
mov
ja
lock
call
and
pushf
mov
stos
fs
(bad)
out
push
aaa
dec
imul
mov
repz
mov
loope
cmpxchg
cwde
dec
movs
(bad)
lods
movs
mov
outs
pmulhw
sub
cwde
out
sub
mov
shl
cmp
fistp
das
xlat
pop
stos
outs
call
cmc
and
add
adc
(bad)
cmps
cdq
test
fadd
(bad)
pusha
dec
jbe
mov
jl
jg
adc
mov
das
xchg
rcl
imul
sub
(bad)
or
xor
or
mov
cmp
adc
and
repz
push
jmp
sub
mov
or
push
xchg
stos
xchg
imul
and
retf
retf
jecxz
mov
movs
in
or
adc
pop
cmp
push
jmp
adc
icebp
cwde
cmp
aaa
(bad)
or
cmp
(bad)
shl
repnz
lods
out
and
xor
out
pop
repnz
lds
jp
(bad)
aaa
in
mov
arpl
fwait
outs
das
xchg
movs
adc
pop
push
stc
push
cmp
and
mov
fisttp
mov
in
xor
dec
mov
in
int3
xchg
aas
push
mov
dec
push
xor
aam
inc
or
xchg
idiv
sbb
jmp
pop
sub
xor
gs
(bad)
pop
outs
ins
call
int3
push
aad
cli
jl
sbb
mov
adc
pop
mov
out
or
adc
cmps
mov
shl
add
(bad)
mov
mov
sbb
add
cmps
fwait
and
cmp
jbe
xchg
mov
cdq
cld
add
adc
sar
stc
jmp
adc
mov
and
inc
add
(bad)
jecxz
div
mov
sbb
mov
aaa
push
rcr
inc
mov
aam
(bad)
leave
cmps
sbb
js
cs
pop
loop
xchg
pusha
mov
call
dec
or
int
xlat
sar
pop
xchg
mov
push
idiv
fsubr
sbb
mov
sub
inc
mov
mov
cli
ror
sub
jl
adc
mov
enter
mov
movs
div
enter
rcl
mov
sub
push
cs
push
jl
dec
pop
or
(bad)
ret
jbe
and
push
or
sar
mov
gs
jmp
es
dec
mov
imul
or
cmp
inc
mov
jb
popf
sbb
test
ret
fwait
sub
xor
pop
cld
and
mov
(bad)
or
cmp
add
mov
jg
enter
push
scas
mov
dec
xchg
add
fistp
sbb
sar
pop
push
mov
sub
or
xor
xor
push
and
and
outs
pop
pop
rcr
inc
int
sub
imul
cwde
pop
inc
jbe
dec
jae
jo
sbb
es
lods
push
cli
inc
shr
inc
inc
add
into
iret
xor
or
fsubrp
outs
or
loop
aaa
push
jbe
rol
pop
or
and
sub
daa
stc
mov
out
mov
mov
mov
sub
loopne
sub
pop
fwait
and
cld
jns
nop
ret
jg
sahf
rol
sbb
(bad)
jno
inc
mov
enter
call
(bad)
mov
mov
aas
xor
sub
jbe
add
lods
add
lock
push
mov
retf
(bad)
pop
test
popf
sbb
adc
jo
adc
fwait
je
or
inc
sbb
ss
mov
(bad)
jecxz
jns
cmp
mov
mov
(bad)
sbb
cmps
jbe
mov
inc
pusha
gs
pushf
dec
cmp
(bad)
cwde
neg
div
xlat
leave
shl
fidiv
xchg
ss
cmp
push
or
mov
pop
mov
dec
pop
lock
cmp
xlat
fcomp
xchg
and
push
mov
test
adc
ins
xchg
and
shr
rcr
in
mov
xchg
ret
push
fidiv
(bad)
xchg
jmp
xchg
mov
in
js
int
loope
repnz
xchg
fild
(bad)
and
sbb
test
xchg
mov
dec
ins
dec
sti
repz
imul
jge
jmp
leave
mov
xor
mov
out
(bad)
push
repnz
xchg
push
ficomp
mov
mov
arpl
or
aaa
fs
in
push
fwait
pushf
cld
ret
mov
arpl
out
and
jl
pop
test
das
sub
jmp
jb
retf
(bad)
push
push
mov
fwait
sti
cmp
loopne
xchg
add
jge
mov
int3
and
mov
sbb
popa
js
dec
(bad)
shl
mov
iret
sub
out
push
aam
jmp
push
loopne
mov
add
ds
pushf
or
idiv
sub
adc
imul
push
adc
into
mov
test
fs
stc
popa
jmp
std
loopne
mov
pop
les
mov
jle
cmc
mov
mov
xlat
sbb
and
aaa
or
sub
icebp
call
inc
or
test
scas
test
(bad)
cmps
in
pop
(bad)
xchg
out
pusha
or
sbb
ret
dec
(bad)
dec
js
mov
xor
xchg
add
xchg
xchg
mov
icebp
dec
aad
inc
pop
ret
jbe
jecxz
and
push
pop
sbb
push
push
or
push
adc
sbb
cld
mov
retf
xor
push
mov
push
push
psubsw
pushf
add
or
in
stos
add
and
xchg
adc
clc
pop
sti
pop
inc
int
xor
add
and
stos
mul
daa
or
ss
mov
ja
mov
inc
ror
xlat
iret
fmul
int3
mov
jge
push
jl
aad
inc
xlat
sysret
cmp
sbb
out
sbb
sub
enter
popa
(bad)
pop
xchg
(bad)
in
dec
dec
add
out
out
push
fs
test
add
pushf
xchg
adc
pushf
xchg
stos
inc
stc
push
icebp
push
or
pop
lods
mov
cmps
gs
inc
imul
pop
mov
addr16
jle
in
jmp
rcl
dec
or
dec
out
add
ss
mov
dec
mov
ret
aam
and
mov
inc
fs
dec
pop
mov
or
add
xlat
mov
movs
call
cmps
aam
aam
arpl
sahf
inc
fld
jl
push
aas
out
stc
jge
rcl
repnz
or
clc
pop
pop
ins
xchg
ficomp
pop
push
or
ja
outs
shr
or
mov
leave
test
repz
mov
cld
mov
mov
ins
pop
call
pop
(bad)
and
or
add
mov
loope
das
jl
push
mov
add
daa
mov
mov
xor
add
xchg
xchg
and
wbinvd
jle
out
es
pop
mov
scas
in
inc
sti
dec
mov
fld
xchg
or
cmc
push
xor
(bad)
cmps
out
dec
ds
xchg
addr16
jmp
call
jmp
mov
mov
jb
hlt
in
or
daa
ins
dec
loopne
fcmovb
mov
in
or
shl
and
jge
mov
add
xchg
xchg
sbb
inc
jmp
shl
push
cmp
mov
jbe
hlt
push
popf
pop
and
out
mov
push
sbb
pop
leave
cld
das
int
push
fadd
outs
test
in
xchg
js
mov
repnz
mov
cs
jl
pop
ret
mov
stc
cmp
outs
stos
dec
jo
sbb
shr
adc
pop
mov
dec
nop
aaa
cwde
pop
ss
pushf
xor
jnp
outs
push
ja
mov
into
inc
xchg
mov
ucomiss
mov
iret
cmp
mov
mov
(bad)
push
(bad)
call
ficomp
(bad)
push
add
movs
call
adc
mov
ds
pop
aaa
push
jle
in
jge
sahf
popa
jb
stos
jo
and
mov
call
leave
mov
push
and
cmp
ret
inc
js
(bad)
nop
add
mov
cmp
jbe
dec
inc
xor
test
fwait
cmp
or
mov
push
dec
cwde
add
mov
sbb
icebp
out
or
cwde
cmc
(bad)
mov
sbb
xchg
lock
mov
mov
xchg
sub
in
push
fidiv
inc
adc
lahf
test
pushf
and
out
imul
and
pop
(bad)
frstor
out
xchg
or
mov
xchg
dec
inc
fs
and
mov
jge
and
leave
retf
out
gs
xor
(bad)
and
loope
ret
cmp
dec
mov
push
aam
xor
jl
xchg
retf
lods
dec
cs
pop
pop
push
je
or
ror
jae
sbb
sti
rcl
sbb
fisub
push
or
aaa
adc
idiv
rcl
mov
mov
mov
jg
jp
(bad)
mov
xchg
pop
sti
ins
xor
mov
jle
jecxz
(bad)
jmp
push
imul
or
in
fst
sbb
sub
arpl
inc
mov
dec
ins
das
jns
fs
test
sbb
movs
call
sub
push
inc
and
adc
sbb
push
xchg
push
sub
jecxz
stc
loopne
fwait
xor
dec
dec
mov
lock
sub
or
add
jmp
in
sbb
mov
fwait
or
cmp
sbb
dec
mov
scas
and
sbb
inc
jle
xor
data16
stos
inc
int
cmp
mov
mov
sub
xor
xor
stos
loope
adc
xor
xor
pop
je
pop
in
cwde
push
arpl
xchg
lock
mov
or
sub
sub
or
sub
imul
xlat
inc
arpl
retf
sbb
add
lock
inc
es
fnstsw
mov
popf
stos
pop
push
add
imul
and
out
lods
sti
or
cmp
dec
inc
adc
les
xor
dec
aam
or
push
ins
mov
cmc
mov
jne
or
daa
xchg
pop
out
jb
mov
rcr
int3
movs
inc
push
and
aas
inc
xchg
jge
cli
or
sbb
or
sbb
aad
sub
aad
es
fs
xor
addr16
fistp
mov
xchg
shr
std
les
sub
ds
out
ja
adc
test
adc
fiadd
xor
jnp
(bad)
xor
rcr
test
outs
mov
adc
add
mov
in
lods
dec
cmp
push
mov
jge
in
fcmovbe
es
int
add
loop
mov
fwait
js
fadd
mov
xchg
nop
arpl
or
int3
mov
in
aas
not
je
movs
ss
mov
(bad)
mov
push
xchg
mov
leave
jecxz
mov
out
push
mov
sub
pop
xchg
push
out
mov
xchg
out
out
loop
inc
std
jmp
iret
sbb
mov
imul
in
cli
sub
pushf
or
xor
mov
out
add
gs
push
dec
ret
mov
push
cmp
je
fnstenv
mov
add
inc
and
lds
or
xor
fbstp
cs
sbb
xor
shl
dec
and
dec
mov
dec
mov
outs
fcom
xchg
repz
test
gs
bound
sub
(bad)
mov
push
inc
pop
sahf
dec
push
out
pop
jmp
mov
mov
xabort
xchg
out
call
push
lahf
jge
pushf
das
lahf
lods
cmp
inc
lods
dec
lock
je
cmp
xor
in
jnp
loope
in
pop
xor
cmp
xchg
and
jnp
mov
das
stos
retf
cld
jne
cmps
sahf
test
in
push
sub
shr
daa
mov
dec
rcr
sub
ins
inc
test
push
ret
mov
aam
inc
fwait
pusha
jno
mul
ins
push
lods
jno
inc
lods
test
out
mov
push
mov
aas
mov
and
sub
cmp
mov
aad
sub
movs
inc
jb
add
sub
popa
clc
xchg
add
rcr
stc
xchg
or
xchg
cld
retf
(bad)
and
cmps
cdq
jge
(bad)
aad
jle
dec
and
inc
mov
mov
xlat
or
ror
fdivr
pushf
xchg
jb
inc
ss
pop
cmp
in
fs
ja
mov
cli
adc
int
daa
movs
test
cdq
out
lods
adc
and
xchg
sbb
adc
xor
or
sbb
sub
xor
xchg
(bad)
sbb
add
fbld
int
mov
push
out
mov
hlt
sub
call
inc
mov
repnz
jne
or
push
add
jno
mov
cdq
into
fsub
ret
push
cmps
pop
inc
and
jnp
clc
add
jmp
aaa
adc
loope
das
and
mov
xchg
sub
inc
lahf
ficomp
lods
or
mov
jecxz
sbb
and
in
inc
(bad)
cmc
sar
pusha
loope
fistp
test
xor
cmp
lods
adc
sub
lock
pusha
inc
aas
dec
sahf
jns
pop
int3
push
je
mov
or
dec
pushf
in
les
je
test
xor
dec
lea
cmp
push
retf
addr16
fs
(bad)
ins
dec
(bad)
cmp
xchg
inc
dec
push
sbb
pop
mov
call
pop
scas
mov
cmp
std
mov
mov
jns
or
adc
cli
addr16
hlt
loop
out
inc
xchg
mov
push
sahf
hlt
xchg
repz
mov
arpl
push
mov
test
mov
mov
adc
ss
fidiv
sbb
(bad)
jmp
push
push
lods
cmps
movs
ins
fcmovnu
lahf
pop
dec
inc
jl
add
sbb
stc
xor
ds
test
enter
lock
mov
add
lahf
sbb
xchg
jb
sub
mov
xchg
cmp
dec
or
outs
dec
int
add
arpl
cdq
out
call
mov
xchg
jo
push
dec
jle
sti
(bad)
adc
data16
push
cld
int3
push
pop
mov
fnstsw
stos
es
cmp
js
push
mov
cmps
sbb
(bad)
mov
(bad)
mov
fisttp
stos
xlat
xor
add
and
sub
jle
imul
xchg
cmp
cmp
loope
push
cmc
and
jecxz
sar
fcomp
sub
inc
std
cmp
cmp
inc
mov
mov
add
ret
aad
mov
xor
clc
xlat
pop
mov
movs
pop
mov
mov
fnstenv
pop
push
push
cmps
cmp
push
mov
push
xchg
sub
ret
sub
jge
cmc
inc
pushf
pop
mul
out
and
xor
sbb
mov
jl
xor
jmp
call
dec
sub
pop
or
imul
(bad)
call
icebp
in
dec
inc
daa
fsubr
ret
adc
ins
mov
fbld
stos
test
and
cmp
mov
out
add
aaa
mov
adc
scas
xor
aaa
ficom
lea
or
inc
sub
push
enter
jg
cmovs
sbb
inc
ins
sbb
xchg
inc
adc
push
movs
ds
stc
mov
pop
or
mov
jno
push
cmp
(bad)
xor
ins
sub
test
jg
cmp
add
adc
cdq
in
inc
xchg
pop
pop
pop
pop
mov
outs
sub
div
sub
into
dec
ss
xchg
sti
mov
call
jns
imul
pop
sar
aam
sub
push
add
mov
aaa
add
dec
mov
lahf
mov
daa
mov
push
xchg
lods
(bad)
jmp
out
dec
in
daa
adc
inc
popa
mov
loope
into
(bad)
mov
popa
iret
sub
call
sti
(bad)
(bad)
scas
outs
mov
scas
jmp
cmp
out
or
call
int3
dec
pop
into
mov
and
fwait
bound
cmp
add
push
xor
and
add
in
xor
or
loopne
shl
xchg
les
sti
and
mov
push
xor
sub
jle
in
test
das
mov
adc
sbb
adc
(bad)
xor
inc
test
into
mov
or
cmp
jae
push
adc
lods
(bad)
fsubr
mov
outs
out
out
enter
mov
ja
xchg
sbb
dec
mov
xlat
cmp
es
jmp
sar
js
les
jecxz
clc
sub
sub
xchg
and
inc
lea
stc
cld
pop
xchg
ja
push
sbb
retf
pop
leave
int
or
jecxz
ins
mov
cmps
push
jecxz
popf
adc
fsubr
jle
maskmovq
mul
test
xor
pusha
call
adc
jmp
mov
fdiv
pop
mov
(bad)
cmp
repz
cmp
and
and
push
out
dec
sub
inc
cmps
xchg
pop
je
loope
outs
outs
cs
int
pop
bound
push
ja
cs
data16
pop
xor
leave
xchg
fidiv
mov
int
call
in
pop
inc
rcl
mov
inc
cld
rcl
repz
into
into
push
int
or
sbb
pusha
cmp
add
mov
sahf
cld
enter
push
jmp
jp
add
xchg
dec
ficom
mov
inc
maxps
pushf
xchg
fist
mov
push
inc
loope
ds
fistp
pop
std
cmp
mov
addr16
mov
jle
mov
jl
in
(bad)
adc
in
jns
call
pop
push
mov
jmp
sub
outs
test
outs
shl
push
scas
cmp
push
inc
mov
jg
mov
es
xor
xor
inc
jmp
fcmovnu
and
(bad)
js
outs
xor
mov
sbb
es
lods
mov
cdq
or
or
xor
push
inc
popf
js
stos
and
mov
in
xchg
ja
das
jns
bound
es
pop
mov
dec
mov
imul
fwait
jecxz
lods
or
mov
lds
shr
imul
fdivp
add
aad
cmp
(bad)
pop
fmulp
shl
mov
ja
out
push
rcr
pop
mov
int3
cmps
lock
icebp
and
inc
xchg
sub
nop
cmp
push
fs
add
aam
iret
and
pop
sbb
pop
js
ss
out
jp
adc
jmp
outs
mov
les
jmp
(bad)
cmp
in
enter
lea
xchg
clc
movs
dec
arpl
out
push
jg
je
xchg
xchg
lahf
xor
test
ds
das
dec
loope
lea
add
sub
fwait
(bad)
push
aaa
mov
dec
retf
es
aas
out
lock
pop
cmps
out
std
xor
cmps
cmp
clc
sub
ins
adc
push
cmp
and
adc
or
mov
lea
jmp
sbb
xchg
lods
stc
popf
cdq
test
mov
(bad)
sbb
in
xor
retf
inc
xchg
and
pop
push
mov
loope
test
lds
test
xor
out
push
inc
out
pop
push
js
jl
stos
xor
mov
or
mov
mov
neg
pop
pop
stc
fidiv
data16
cmps
loopne
jns
adc
scas
mov
or
(bad)
lea
xor
mov
out
xchg
cmp
jmp
and
cdq
(bad)
sub
ja
inc
lds
hlt
in
sub
fimul
xor
inc
inc
pop
lods
out
ss
loope
in
ins
cli
fcomip
dec
push
stos
or
xchg
push
int3
jne
add
push
push
xor
imul
addr16
or
dec
sub
xchg
mov
adc
iret
add
adc
jae
sub
stc
es
call
popa
mov
mov
and
aas
or
jp
xchg
pop
int
xor
sbb
and
mov
mov
jmp
in
mov
lods
mov
push
push
and
jmp
mov
jne
adc
rol
mov
(bad)
js
scas
cmp
lahf
fsubr
push
add
pop
adc
mov
movs
sbb
mov
js
sbb
retf
dec
(bad)
cmp
cld
repnz
mov
mov
push
or
push
mov
sbb
inc
or
(bad)
loope
push
add
mov
adc
jg
out
mov
jae
inc
daa
jb
pop
rcr
adc
pop
stc
pop
pushf
lds
jb
nop
js
cld
data16
icebp
inc
cdq
stc
jge
or
inc
push
retf
(bad)
aas
adc
mov
mov
scas
jmp
je
fwait
cmp
xlat
jmp
xchg
test
mov
jg
push
add
sbb
stc
dec
xchg
lds
and
dec
dec
jecxz
xor
add
mov
in
push
mov
sbb
mov
sbb
add
cwde
shl
and
mov
dec
out
aam
mov
xor
or
and
sub
scas
stc
std
stc
sub
xor
xchg
push
xor
mov
aas
aaa
and
sbb
fnstsw
jbe
ja
les
lods
int3
xor
mov
nop
xchg
fist
inc
pop
mov
call
xor
outs
inc
out
icebp
icebp
scas
mov
mov
mov
push
mov
xchg
inc
push
pop
xor
or
aaa
sbb
push
push
mov
movs
jl
jge
sub
clc
cmp
stos
adc
mov
dec
jecxz
adc
xchg
mov
mov
jg
cmc
(bad)
xlat
repnz
dec
dec
sub
std
sbb
lahf
jle
popa
cmp
retf
jg
add
add
pop
adc
mov
(bad)
cmp
xchg
cwde
leave
or
add
lock
les
in
xor
lds
adc
mov
cmp
adc
aad
add
or
lds
movs
mul
rol
inc
fisub
rcl
pop
adc
mov
and
mov
repnz
(bad)
div
sbb
pop
mov
adc
cmp
dec
push
cmp
mov
sub
dec
retf
mul
daa
push
fdiv
mov
xor
mov
ret
pop
ss
cmps
sub
ret
xor
adc
jmp
cmp
jp
jmp
pop
pop
je
(bad)
into
aad
add
dec
(bad)
sbb
mov
pop
scas
rol
sbb
push
ret
mov
adc
add
lock
sbb
sbb
jg
sub
mov
pop
add
push
cld
push
push
jl
cwde
ret
dec
lahf
ja
xchg
jecxz
mov
pop
pop
sub
mov
and
jns
jmp
inc
add
enter
movs
push
cmp
xlat
or
sub
add
dec
(bad)
mov
jb
fist
das
cs
cmp
mov
inc
es
(bad)
or
aam
mov
jmp
mov
add
adc
xchg
in
ror
pop
push
and
ret
and
cmp
shr
imul
out
or
pop
mov
push
in
jno
rcr
retf
jmp
je
js
jg
sbb
xchg
sbb
xor
dec
dec
push
push
sbb
scas
(bad)
mov
cmc
test
inc
ret
mov
popf
xchg
cmps
fdiv
adc
les
mov
lods
jmp
data16
cmp
sti
push
jmp
pop
mov
outs
not
xchg
movs
pop
xor
xor
jp
arpl
adc
out
popa
in
retf
xor
dec
scas
adc
jae
or
pop
inc
cmp
sub
out
inc
fild
push
adc
loope
or
in
pop
mov
dec
push
(bad)
(bad)
pop
jae
out
jns
or
stos
dec
adc
sbb
cmps
(bad)
bound
dec
and
or
and
fistp
fwait
nop
cli
sbb
ss
cmp
mov
or
cmc
rcr
ret
pop
loop
pop
sub
rcl
jbe
xor
adc
cmp
icebp
cwde
inc
jmp
jb
or
test
mov
pop
test
shr
ret
pop
into
pop
neg
imul
fsubr
int3
shl
fsub
ins
outs
mov
jg
and
test
std
scas
ins
jmp
das
xchg
dec
mov
sbb
push
cs
es
dec
stos
add
or
lods
sub
xchg
shl
mov
out
imul
mov
or
jnp
leave
(bad)
xor
cdq
push
adc
pop
or
imul
and
popf
in
cmps
ins
adc
adc
(bad)
in
pushf
loop
pop
lahf
rcl
mov
cmp
in
push
fdivr
ja
push
cmp
jle
or
or
mov
mov
std
iret
inc
mov
mov
mov
mov
pop
sub
xchg
jnp
sub
inc
jl
repnz
test
pop
clc
gs
and
push
add
sbb
loop
or
test
das
out
adc
sub
repz
out
push
movs
and
fist
pop
cmp
pop
pop
aas
cli
adc
xor
push
out
sub
push
xchg
cmp
mov
pop
pop
or
lahf
not
jno
or
inc
data16
sahf
pop
ins
push
rcr
mov
(bad)
movs
jmp
loop
pusha
push
rol
pop
fisttp
test
inc
jns
lock
mov
push
repnz
xor
aas
mov
enter
xchg
stos
mov
dec
shl
add
inc
mov
mov
mov
pop
pop
add
adc
sbb
cli
sqrtps
mov
mov
pop
cli
shl
mov
addr16
mov
push
jb
or
mov
das
ins
(bad)
xchg
xchg
adc
push
test
cmps
dec
or
jp
test
inc
das
in
(bad)
jg
in
or
pop
leave
cmp
sti
repz
cwde
sti
push
or
xor
test
sbb
or
cmc
push
xor
mov
sbb
sti
xlat
or
push
repnz
aaa
fadd
sub
cmc
xor
add
lods
sahf
push
ret
inc
outs
mov
pop
fldcw
push
cmp
mov
aas
out
adc
pop
cli
js
add
mov
and
fld
sbb
mov
pusha
test
mov
jo
pusha
es
dec
pop
and
pop
or
jnp
dec
inc
int
ret
aaa
jne
out
jle
sti
stos
xlat
push
mov
add
div
test
movs
or
shl
repnz
call
mov
je
mov
mov
adc
aad
and
mov
add
push
pop
push
repnz
test
(bad)
adc
hlt
int3
xchg
mov
push
jnp
jmp
mov
icebp
aas
sub
cwde
jl
iret
dec
fwait
push
dec
mov
mov
inc
ins
mov
jp
sub
test
(bad)
addr16
(bad)
cmp
inc
push
sub
adc
pop
add
std
jg
push
ret
cmp
scas
jl
sub
add
mov
mov
sbb
dec
es
in
imul
push
fmul
fisttp
push
out
or
arpl
stos
in
out
sbb
or
add
mov
sub
je
add
in
and
sub
mov
clc
jns
jnp
ss
adc
sti
or
pushf
lock
fnstenv
push
dec
or
leave
xor
inc
(bad)
call
ja
push
or
in
(bad)
or
loop
pop
call
and
aas
xchg
loop
retf
out
cmp
shr
mov
pop
retf
aad
dec
imul
pop
xor
imul
arpl
cmp
ins
jo
outs
fucom
cmp
push
cmps
fsubr
call
std
jbe
clc
(bad)
jbe
out
xor
aas
dec
push
jp
jno
ins
push
stos
mov
test
gs
or
jns
fld
(bad)
mov
inc
xor
loope
pop
je
ficomp
sti
bound
lds
out
out
or
mov
in
push
xchg
loop
mov
add
lock
adc
mov
xchg
and
dec
fcom
(bad)
pop
push
pop
mov
mov
push
int3
cwde
(bad)
fiadd
dec
xchg
sahf
xchg
pop
les
sbb
cmp
ror
jmp
jl
aaa
out
pop
arpl
and
adc
test
pop
mov
cmp
push
xor
in
shl
adc
icebp
xchg
adc
and
shl
sbb
mov
pushf
int
lahf
nop
xchg
sub
push
jg
addr16
(bad)
mov
sbb
stos
test
adc
sub
cwde
fsub
mov
push
adc
fdivr
leave
(bad)
int3
fwait
shr
test
xchg
pop
xor
sbb
adc
inc
jp
popa
pushf
pop
push
(bad)
pop
cmc
jnp
shl
mov
sbb
jl
(bad)
mov
fdiv
dec
loope
popa
sub
iret
mov
cmps
out
adc
mov
fwait
call
mov
test
jl
imul
ja
or
mov
mov
sub
mov
adc
inc
icebp
xchg
cmp
push
lock
cs
aas
in
cmps
mov
shr
call
idiv
adc
and
aas
retf
int3
test
loopne
mov
xchg
aad
inc
and
xor
jecxz
add
and
inc
aaa
adc
or
lods
sub
daa
in
pop
mov
(bad)
mov
lahf
enter
mov
scas
pusha
outs
jns
or
inc
cmp
ins
cdq
gs
lods
out
fist
pop
add
or
pop
inc
or
leave
and
and
xor
adc
leave
cmp
mov
icebp
push
adc
enter
xchg
mov
leave
data16
fcmovne
xor
in
bound
pop
adc
fadd
fs
retf
jns
push
mov
sbb
fisub
xchg
sti
stc
mov
cmps
add
push
lahf
pusha
lock
jns
ins
or
pop
jmp
sti
shr
ret
sbb
push
sbb
inc
lahf
dec
(bad)
push
int3
inc
test
(bad)
cmps
ret
sbb
xchg
dec
jecxz
and
shrd
sahf
mov
repz
jno
shr
in
cmp
popa
xor
retf
mov
mov
neg
int3
push
int
retf
cmc
add
add
pop
aam
rcr
or
jno
add
pop
add
shl
inc
adc
dec
fistp
test
push
mov
add
xor
test
into
add
xor
cld
cmp
rol
sar
lahf
push
inc
imul
into
pusha
pop
dec
test
adc
cmps
aad
and
jmp
mov
sbb
sbb
in
cmc
mov
in
mov
cmp
movntps
popf
sbb
popa
add
xchg
je
jno
sub
pushf
xor
and
into
add
nop
ins
cmps
xor
adc
ds
jb
repnz
push
adc
mov
in
aad
leave
inc
lea
sub
xchg
pop
push
sub
mov
add
push
cs
add
loope
sub
loop
pop
cs
jg
mov
cld
popa
scas
pop
fnsave
sbb
lock
jle
sub
or
jno
sti
jle
dec
aas
enter
cli
cdq
loop
in
mov
and
and
stc
sti
popa
push
jge
xchg
std
add
mov
xor
cmps
mov
push
movs
push
fadd
jnp
(bad)
mov
and
add
add
sbb
add
xchg
push
ret
call
mov
mov
or
pop
arpl
mov
mov
push
lock
xor
mov
fnstsw
mov
(bad)
jge
loop
xchg
sti
sbb
xchg
(bad)
fwait
jne
popf
cli
jge
adc
add
movs
push
leave
iret
cmp
add
dec
pushf
dec
pop
shl
push
fadd
mov
xor
lahf
out
ret
mov
jge
data16
nop
mov
xchg
ret
cdq
scas
pop
ror
notrack
sbb
dec
xor
cmp
arpl
lahf
pop
cmp
popa
jae
adc
sar
dec
push
add
lock
sbb
loop
jmp
clc
and
cwde
movs
inc
out
ja
mov
mov
mov
cmc
(bad)
add
sahf
pushf
jecxz
pop
pop
out
arpl
lods
into
sbb
or
push
dec
mov
mov
ret
dec
push
loope
xacquire
data16
mov
enter
mov
adc
js
and
(bad)
pushf
adc
lea
pusha
icebp
call
mov
jg
mov
lea
into
mov
xor
(bad)
mov
add
adc
and
out
out
add
shl
sbb
xchg
pop
cmp
cwde
test
cmpxchg
bound
pop
fs
jecxz
bound
lock
and
jb
cmp
sub
jp
mov
jns
nop
xor
rcl
jb
popa
inc
or
or
cli
or
mov
dec
or
dec
pusha
js
ins
mov
ja
dec
mov
je
sbb
push
test
inc
aaa
scas
cwde
daa
sub
inc
dec
mov
icebp
and
mov
pop
iret
dec
inc
cmps
mov
xor
push
inc
mov
cmp
fs
sub
imul
lods
inc
stc
call
test
scas
jo
add
and
pop
xor
shl
or
dec
div
test
mov
cmp
adc
cs
mov
jnp
sar
jg
adc
pop
int3
mul
xlat
js
addr16
mov
and
ret
mov
push
aad
or
dec
leave
ror
repnz
push
cmps
ins
lods
into
repnz
xchg
stos
test
xchg
jo
or
sbb
dec
dec
ficomp
retf
frstor
add
sbb
mov
repnz
hlt
jecxz
data16
mov
and
clc
jbe
xchg
push
add
retf
jno
cmp
mov
loop
loop
push
xchg
adc
jl
test
pop
fcompp
sbb
jb
or
push
mov
aaa
addr16
jns
shl
pop
dec
out
add
sbb
das
push
dec
mov
or
stc
jp
aad
iret
popa
jo
and
ss
sbb
jecxz
add
pop
xor
jb
sbb
sar
in
mov
or
dec
cmps
movs
fld
or
iret
push
push
sub
pop
aaa
das
xchg
(bad)
sti
out
cmp
or
cmp
int
hlt
imul
and
loope
jbe
xchg
jmp
lods
jb
inc
pushf
pop
mov
inc
sub
jecxz
mov
mov
or
pop
clc
daa
movs
(bad)
adc
int3
rol
pop
xor
push
inc
lods
mov
ins
scas
aad
pusha
push
out
and
xchg
mov
add
bound
or
mov
mov
and
retf
push
movs
cmp
pop
or
hlt
and
inc
call
test
add
or
lods
stc
push
out
in
mov
scas
push
jl
cli
test
outs
mov
aam
pop
cwde
jno
int
sbb
out
jge
daa
imul
sti
pusha
call
sbb
adc
test
rcl
mov
fsub
jmp
jle
jb
xor
mov
popf
or
dec
sbb
pop
in
dec
sbb
xor
ret
(bad)
dec
fwait
dec
push
push
loopne
push
adc
pop
pop
sub
rol
xchg
push
int3
pop
shr
inc
fwait
in
in
icebp
lds
mov
jecxz
mov
cmp
hlt
jb
pop
(bad)
movs
add
fwait
and
repz
(bad)
jbe
stos
ror
inc
sar
sub
fnstenv
inc
hlt
popf
xor
jmp
sbb
icebp
sub
pop
pop
repnz
in
repz
mov
mov
jl
pop
mov
xchg
xor
rcl
test
pop
arpl
jmp
mov
(bad)
stos
dec
addr16
jnp
jmp
cmps
neg
sub
out
add
push
pop
inc
adc
xor
call
popf
mov
xor
xchg
pop
or
test
outs
jmp
mov
xchg
mov
mov
adc
sbb
shl
or
je
push
or
hlt
imul
cmp
js
shl
or
xor
jae
jmp
out
jns
(bad)
sub
dec
add
sub
adc
(bad)
bound
mov
pop
mov
sti
mov
mov
mov
xor
adc
xlat
add
fnstcw
jns
dec
push
jge
sbb
lods
mov
xchg
lock
and
fcom
test
xchg
clc
rcr
mov
dec
ret
inc
pop
sbb
sahf
shl
mov
xor
cld
sbb
cli
cmc
cmps
or
or
jae
xlat
scas
hlt
or
neg
std
add
sub
cld
movs
or
ror
xor
sbb
lods
pop
xchg
xor
cdq
imul
hlt
mov
xchg
jo
or
jg
jmp
(bad)
xlat
and
xchg
jge
pushf
shr
cwde
into
xchg
(bad)
sbb
pop
into
or
mov
dec
sub
(bad)
xchg
(bad)
das
pop
idiv
push
cmp
mov
jo
pusha
xor
jp
test
in
sbb
add
xchg
sti
jbe
(bad)
jmp
mov
pop
mov
imul
jns
loope
or
cmp
pop
mov
mov
inc
arpl
imul
push
and
mov
ss
xchg
int3
push
xor
sub
into
test
xor
(bad)
loopne
into
inc
mov
sbb
xchg
sub
stos
xchg
dec
mov
jnp
outs
retf
in
in
(bad)
lock
add
dec
xchg
pop
add
pop
pop
inc
pop
sti
cld
dec
arpl
test
dec
push
(bad)
jbe
adc
sbb
mov
xchg
sar
sbb
repz
dec
sub
enter
(bad)
(bad)
dec
gs
mov
add
adc
sub
loopne
sub
push
push
or
js
jbe
jmp
sub
nop
pop
sub
inc
(bad)
ret
or
pop
ins
and
jbe
ins
push
mov
sahf
lds
dec
sahf
cmc
(bad)
(bad)
rcl
sbb
mov
test
aas
mov
dec
cmp
cmps
ins
jmp
sbb
es
cmp
mov
push
inc
adc
aas
(bad)
cld
shld
fwait
cmp
cmc
and
test
add
dec
mul
gs
daa
lea
and
sub
xorps
in
push
push
dec
xchg
clc
xchg
mov
aas
sbb
gs
ds
dec
fisub
push
fwait
push
out
cmps
(bad)
div
sbb
sti
push
and
jmp
pop
cmp
psrlw
mov
pop
aad
dec
stc
jg
jns
xlat
mov
jo
bound
xchg
js
mov
sbb
mov
jmp
inc
pop
sbb
xchg
ret
mov
fidiv
xchg
fisttp
movs
out
(bad)
cli
cli
or
sub
mov
cmp
ret
(bad)
xor
movs
(bad)
in
fnstenv
les
movs
sahf
xchg
retf
xchg
ins
cmp
xchg
jnp
pop
les
dec
xchg
ins
xchg
data16
lea
mov
or
icebp
call
xchg
dec
lea
cmp
jmp
call
arpl
xchg
sar
sti
jle
sub
mov
movs
push
pusha
jbe
iret
push
xchg
sub
aam
shl
jbe
xor
out
mov
dec
or
pop
stos
enter
rol
cmps
jb
push
pop
cmp
sbb
push
cmp
in
and
(bad)
lods
fidiv
pop
xor
cmp
movs
xor
lea
(bad)
ins
xor
xchg
aas
dec
out
fcmovb
ss
(bad)
push
and
imul
aas
jge
mov
push
xchg
sahf
sahf
(bad)
sti
call
lods
outs
sub
pop
mov
test
test
lea
imul
sbb
stos
xchg
mov
mov
int
lods
pop
cwde
les
hlt
pop
pop
bound
gs
add
push
jo
hlt
test
outs
ins
std
add
cmps
lea
push
iret
dec
jnp
hlt
movs
outs
std
jb
mov
xchg
cli
xor
les
add
aam
inc
leave
xor
pushf
xor
daa
repnz
mov
inc
xchg
icebp
stos
test
jns
sbb
ja
fstp
scas
cmp
(bad)
hlt
mov
xchg
sbb
inc
ret
cdq
rcl
hlt
pop
leave
adc
mov
mov
pusha
cdq
fisttp
clc
xchg
and
add
cmps
and
inc
jle
add
(bad)
fnstcw
mov
inc
xchg
hlt
push
sar
popa
(bad)
adc
fcomp
inc
jmp
xlat
mov
ins
fstp
jne
or
movs
sti
mov
xor
push
scas
add
or
nop
xchg
cwde
test
push
xchg
fmul
fild
test
in
push
les
mov
pushf
jnp
ss
arpl
sar
ds
mov
adc
jge
mov
clc
rcl
into
and
shr
push
xor
(bad)
sti
push
daa
(bad)
xchg
out
add
mov
cld
fs
ins
sbb
pop
dec
les
icebp
lea
jl
daa
jge
ja
mov
mov
xor
movs
fst
xor
addr16
and
adc
out
dec
push
ret
pop
std
and
fs
fisub
jo
pop
fdivr
xlat
push
mov
jne
stc
mov
das
ins
sbb
pushf
or
movs
ja
pop
cvtps2pd
in
add
push
or
xchg
jge
xchg
fadd
add
push
dec
fidivr
jmp
ins
mov
out
pop
je
jno
or
cmps
fs
(bad)
loope
outs
out
add
ret
pop
jb
hlt
xor
mov
shr
les
in
sbb
jmp
jbe
jns
dec
and
test
es
in
pop
or
push
ins
int3
xchg
das
mov
cmp
inc
adc
inc
test
add
int3
jbe
xchg
inc
rol
out
push
mov
fwait
es
jl
stos
aaa
pop
mov
inc
fwait
loop
scas
mov
jns
in
xor
dec
jmp
aam
pop
pop
cmps
dec
out
fdiv
imul
retf
ss
bound
sbb
retf
pop
xor
stos
ja
inc
ins
push
mov
jge
jle
pop
(bad)
jle
jmp
(bad)
mov
aas
jnp
int
imul
out
xchg
lds
popa
cmps
in
outs
adc
ret
call
pop
std
ja
sbb
and
imul
dec
lods
dec
pop
stos
mov
cmp
inc
jno
add
jecxz
jmp
cmp
add
adc
and
jmp
jae
mov
iret
cmp
loop
aaa
inc
mov
or
jne
sbb
jmp
cmp
stos
pop
cmp
xchg
push
lods
cmc
push
out
dec
loopne
or
ds
pop
movs
rcl
popa
into
loope
pop
mov
push
xchg
and
call
(bad)
popf
push
adc
stos
cmc
test
out
rol
sbb
adc
rol
out
or
jb
pusha
cmp
js
rcr
test
mov
fwait
add
cmc
pop
call
pop
or
add
shl
cmp
bnd
dec
xor
sbb
pop
leave
(bad)
scas
add
inc
retf
inc
ret
out
add
inc
in
dec
add
test
push
dec
rol
mov
adc
adc
sbb
mov
xor
sbb
xchg
jmp
hlt
div
mov
or
pop
add
xor
dec
add
icebp
in
inc
mov
mov
xor
pop
in
lods
arpl
aas
sub
test
mov
ret
fisttp
loope
sbb
xlat
xor
out
or
ins
cli
in
adc
mov
mov
addr16
out
add
cmp
in
rcr
jmp
xchg
push
inc
fdivr
ret
ret
shl
loopne
push
add
lds
outs
outs
pop
ficom
pop
stos
adc
ins
pop
js
mov
ja
ins
cld
rcl
stos
in
pop
cli
lahf
repnz
addr16
mov
sub
loop
cli
xchg
adc
jnp
call
aad
cmp
jmp
iret
xor
fidivr
xchg
aaa
jno
jp
and
lods
jo
ret
jae
pop
fdivr
jp
iret
pop
out
fneni(8087
cs
ret
add
fisubr
shr
das
stos
dec
mov
xchg
cs
nop
inc
sub
(bad)
sbb
jno
mov
fcmovne
mov
mov
pop
mov
scas
in
scas
jle
in
or
and
shr
sub
sbb
jmp
fist
mov
lea
cmps
or
call
add
les
dec
stc
jo
call
jb
sub
push
inc
ins
sbb
mov
xor
dec
mov
push
out
jae
aas
and
and
test
dec
popf
mov
cmp
inc
pushf
xchg
push
loopne
ret
xor
mov
mov
push
shr
push
pop
fiadd
xchg
sub
or
fimul
arpl
jae
mov
jne
xor
movs
mov
cs
inc
neg
hlt
leave
sbb
lods
jecxz
push
xor
cmc
cmp
add
jge
cwde
enter
and
dec
and
repz
push
dec
daa
adc
call
or
mov
push
jmp
repz
sbb
dec
xchg
cmp
hlt
adc
cmp
sbb
dec
scas
(bad)
or
nop
leave
rol
cdq
jmp
mov
fadd
jo
lock
popf
lods
jnp
imul
pop
jns
cmp
aad
mov
or
imul
or
push
xlat
pop
ror
push
ins
aas
lock
fisubr
and
jge
mov
cmps
cmp
lock
and
rcr
loop
mov
mov
xor
jmp
adc
mov
fwait
ja
aad
add
pop
dec
cmps
jns
je
hlt
xchg
scas
fwait
nop
lahf
jle
aaa
cwde
pop
ja
push
cmps
addr16
(bad)
fisttp
mov
repnz
std
xchg
push
mov
push
outs
mov
pop
xchg
pop
xor
dec
pusha
xor
xor
and
repnz
mov
sub
(bad)
fldcw
or
das
mov
pusha
imul
inc
cmps
dec
mov
sub
inc
pop
out
aaa
aam
add
aaa
jns
lods
out
cmovno
cmps
not
add
int
push
push
sbb
int3
into
gs
pusha
push
gs
adc
jg
leave
test
data16
retf
shr
cmp
das
or
in
inc
ja
or
jp
jns
xchg
daa
imul
in
cmp
or
adc
mov
fstp
cs
jl
hlt
dec
xchg
mov
dec
in
xchg
xchg
and
sbb
(bad)
arpl
jno
sbb
dec
imul
jns
shr
popa
dec
or
rcr
cmp
sar
lock
jb
lods
daa
stc
stos
push
push
ja
bound
cmp
ss
jmp
sub
test
out
mov
and
ins
in
out
ds
out
clc
dec
dec
js
ins
aaa
push
jmp
or
test
push
in
into
neg
xor
or
outs
dec
lods
cmc
adc
fadd
out
push
xchg
jnp
sub
mov
push
or
xor
sub
repnz
pop
inc
inc
mov
and
leave
jno
adc
enter
xor
shl
inc
push
dec
cli
and
and
jns
movs
sub
sbb
xor
sub
pop
mov
push
inc
jo
add
out
inc
pop
pop
dec
push
push
pop
mov
call
int
(bad)
(bad)
sbb
ins
push
popa
push
test
mov
aaa
test
push
sub
add
inc
ror
push
mov
(bad)
pop
pop
jmp
enter
dec
bswap
(bad)
aas
cmc
sbb
push
mov
and
loope
outs
jns
(bad)
mov
(bad)
ins
sbb
jbe
das
enter
xchg
mov
ss
xchg
mov
fiadd
leave
fisubr
dec
or
lock
xor
aas
icebp
imul
mov
mov
icebp
jp
(bad)
lods
lds
ror
fwait
stos
aaa
test
mov
das
cmc
pop
pushf
add
mov
pop
lahf
sbb
ret
lahf
sahf
sub
pop
push
xor
push
js
mov
dec
mov
cmp
test
inc
je
dec
or
sahf
movs
lods
pop
pop
dec
das
mov
out
mov
daa
cmp
das
jl
add
ins
pop
pmaxub
ret
mov
or
popa
test
aam
mov
sbb
vpcomub
mul
cmp
movs
cmp
jo
test
pop
push
call
out
sub
mov
sub
sti
sbb
jae
pop
and
mov
lods
fst
rcr
shr
xor
push
mov
cmp
add
jle
les
xor
dec
in
inc
imul
and
sar
inc
mov
enter
call
jmp
sub
push
sar
pop
stc
cmp
push
jbe
sti
retf
scas
jo
loop
mov
fst
lock
out
pop
imul
mov
lea
(bad)
clc
stc
sub
adc
mov
sub
lea
dec
xchg
dec
dec
ja
inc
jp
lds
out
lods
mov
xchg
inc
clc
adc
popf
(bad)
int3
cmp
xchg
jg
push
jp
and
push
aas
ins
mov
in
in
(bad)
rol
lea
mov
mov
leave
and
dec
xchg
or
movs
scas
add
js
sbb
pop
lods
jecxz
cld
and
mov
adc
xchg
add
shl
popa
int3
and
pop
cdq
mov
sbb
outs
mov
es
repnz
pop
hlt
pop
hlt
mov
xor
icebp
retf
jmp
push
aad
stos
cmp
jmp
daa
dec
int
icebp
adc
xlat
push
xchg
stc
mov
and
xchg
in
mov
jo
push
mov
adc
xor
xchg
popf
in
pop
lods
sar
aam
repz
outs
outs
leave
mov
loopne
ss
aas
imul
in
xchg
into
dec
daa
cmp
into
cmps
scas
lods
or
pushf
adc
xchg
jno
test
mov
mov
push
pop
ret
xor
clc
dec
cbw
pusha
arpl
mov
inc
ss
cdq
retf
(bad)
ds
loopne
mov
xor
inc
push
lock
add
mov
std
js
test
sahf
inc
iret
iret
jecxz
push
shl
dec
out
mov
stos
leave
mov
mov
or
mov
jae
(bad)
and
push
jmp
sahf
daa
ins
fcom
cdq
adc
out
mov
pop
stos
pop
pop
out
mov
xchg
add
dec
sti
ja
or
mov
dec
cmp
pusha
clc
imul
dec
sbb
std
imul
ret
ror
pop
dec
daa
mov
add
mov
test
aam
jp
fisttp
ss
enter
inc
or
retf
or
outs
stos
(bad)
mov
shl
inc
pop
and
nop
xor
push
push
mov
mov
sbb
cmp
mov
fbstp
pop
mov
pop
(bad)
pushaw
add
fs
ret
(bad)
cmp
call
add
out
or
test
sbb
add
std
add
add
mov
cmps
leave
in
mov
inc
or
nop
add
(bad)
pop
sbb
mov
loopne
sub
sub
js
sbb
mov
sbb
ins
push
shl
adc
pop
fnstenv
pop
push
mov
add
jmp
jecxz
push
(bad)
sbb
sub
popa
jns
pop
(bad)
imul
inc
mov
xchg
outs
jmp
xchg
out
dec
das
adc
mov
fdivp
div
cmp
add
mov
js
or
xchg
repz
sbb
jae
dec
cmp
lock
stc
loop
stos
in
sbb
adc
mov
mov
inc
inc
aas
test
je
jmp
(bad)
outs
or
ss
icebp
xchg
leave
xchg
enter
pop
and
xor
mov
mov
pop
sub
or
iret
mov
or
retf
imul
shr
outs
xor
cmp
inc
(bad)
xlat
xchg
(bad)
fs
int
data16
fadd
mov
mov
pushf
les
sbb
mov
add
ret
in
mov
pop
bound
addr16
ja
fisttp
(bad)
outs
dec
push
stos
cmp
fs
add
mov
pop
adc
in
mov
fmul
dec
add
sahf
(bad)
mov
jmp
adc
shl
jmp
nop
dec
adc
xor
xchg
sub
mov
mov
ds
das
push
add
cmp
push
icebp
clc
jp
pop
mov
jbe
push
test
cli
mov
aaa
mov
add
ficomp
aas
(bad)
dec
dec
cmp
es
push
dec
add
mov
or
xchg
ret
retf
jg
hlt
inc
sbb
push
add
dec
stos
pop
aaa
out
(bad)
repnz
es
shl
push
inc
jno
imul
fcom
sbb
shr
push
std
imul
pop
mov
(bad)
push
rcr
sbb
mov
int3
rol
pop
jb
movntq
je
dec
ficom
cmps
ins
mov
xchg
cmp
mov
lahf
fistp
sahf
jnp
fistp
jbe
fwait
dec
repnz
fstp
out
jmp
pop
daa
jmp
jl
rcr
ret
js
loope
cwde
loop
cmp
pusha
test
push
push
push
dec
aaa
cmp
adc
mov
cmps
fst
nop
lods
ja
xor
pop
push
nop
dec
test
push
mov
aad
stos
inc
mov
das
jp
jge
inc
jg
repnz
pop
push
mov
jbe
sbb
adc
mov
shl
mov
loope
dec
mov
add
test
or
xor
fistp
jmp
ret
fdiv
push
xchg
out
xchg
pop
mov
mov
ja
cwde
xchg
pop
jp
jmp
les
jnp
aaa
inc
inc
repnz
mov
arpl
push
imul
call
cmp
xchg
dec
xchg
add
push
inc
sbb
aam
dec
xor
enter
lea
or
ja
shl
iret
leave
shr
call
mov
icebp
dec
mov
dec
in
or
jnp
xor
in
(bad)
aas
rcl
test
fwait
or
dec
pop
test
lock
sar
pop
in
xor
nop
inc
mov
sub
ret
rol
scas
fs
pop
cmp
(bad)
pop
arpl
daa
pop
neg
push
std
stos
pop
mov
dec
pop
mov
jmp
push
dec
sub
jg
xor
loop
int
bound
stos
and
add
jae
xor
pushw
(bad)
call
dec
ds
ror
fsub
sahf
ds
cmc
xor
jne
push
mov
popa
fdivrp
in
add
sbb
sahf
stc
xchg
clc
inc
mov
leave
and
sbb
leave
sub
loope
jge
lds
add
ds
popa
push
call
test
mov
pushf
repnz
push
pop
add
in
mov
pop
xchg
rcl
and
sub
xor
pop
sbb
pop
and
popf
jnp
lods
pusha
adc
jmp
and
cmp
addr16
cmc
cdq
adc
out
mov
imul
movs
dec
test
dec
lods
add
test
out
inc
jns
cdq
rcr
hlt
es
dec
das
cmp
mov
mov
lahf
mov
scas
xchg
cmps
jb
sbb
mov
adc
inc
shl
into
cmp
dec
xchg
push
jb
push
or
std
mov
cs
inc
inc
cmp
add
pop
je
pop
ret
xchg
int3
inc
mov
or
inc
xor
mov
pop
push
pusha
jmp
xchg
js
nop
mov
or
pop
adc
outs
je
jbe
or
shl
mov
(bad)
mov
fild
jbe
adc
push
hlt
and
mov
cs
outs
mov
jo
rol
or
mov
jg
cdq
mov
test
fisttp
and
clc
mov
lahf
pusha
pop
push
jmp
in
xchg
fsubr
jne
retf
mov
cmp
and
mov
mov
xlat
and
and
push
out
fdivr
aam
mov
int
fs
adc
out
push
mov
arpl
rcl
repz
mov
lods
mov
xchg
sahf
xor
mov
and
fcom
mov
jbe
cli
jg
ror
xchg
das
inc
out
lahf
call
mov
lods
in
es
push
push
inc
popf
mov
add
jecxz
or
fist
add
js
std
xor
fmul
or
and
push
aad
add
out
out
outs
mov
cmp
ins
outs
scas
jle
inc
jecxz
jge
loope
std
mov
es
stos
addr16
rcr
pushf
retf
dec
les
fcomp
jne
test
cmp
cmp
adc
sbb
scas
adc
xchg
ret
and
mov
dec
out
imul
sub
ret
leave
add
xor
paddsw
(bad)
mov
mov
or
adc
mov
(bad)
mov
(bad)
push
stos
fdiv
sub
inc
aad
movs
shl
push
aaa
xor
mov
mov
movs
pop
cld
lds
sub
push
call
lock
aam
ss
in
fistp
add
add
mov
or
mov
shr
mov
mov
pop
int3
lea
push
sbb
xor
(bad)
xor
dec
xor
mov
std
retf
popf
in
loope
lahf
int3
fs
sub
sbb
in
ss
(bad)
or
and
push
jbe
push
icebp
cmps
mov
push
fdiv
iret
and
push
popa
inc
dec
int3
ins
(bad)
dec
sbb
and
and
mov
dec
inc
mov
in
xor
ror
mov
movs
(bad)
inc
mov
icebp
jmp
into
(bad)
out
jnp
dec
pop
clc
or
add
aaa
push
out
cli
lock
movs
out
mov
or
icebp
or
test
push
adc
sub
stos
jl
and
sar
mov
shl
adc
add
js
gs
loope
and
rcr
test
mov
xor
xlat
xchg
ja
loop
fst
jb
cmps
cli
cmp
pop
ficom
rcl
mov
and
pop
or
(bad)
neg
shr
xor
pop
call
pop
es
add
in
add
xchg
fst
repnz
lods
dec
cmc
mov
mov
cld
retf
pop
xchg
pop
popa
dec
add
jmp
push
mov
das
dec
mov
imul
and
ins
das
sbb
adc
ds
xchg
outs
nop
xlat
mov
cld
sbb
or
loopne
or
sub
inc
add
pop
repnz
dec
addr16
rol
xchg
scas
aad
xor
int
pop
mov
sbb
adc
dec
sbb
test
xor
div
adc
cmc
dec
pop
lods
mov
sbb
cmp
sbb
lea
sbb
out
mov
sub
sbb
sbb
call
xor
daa
ret
aam
sti
pop
call
xlat
inc
push
enter
pushf
ds
not
into
or
push
lea
inc
les
push
data16
jmp
and
sub
push
mov
aam
test
xchg
push
sti
add
mov
imul
imul
mov
scas
mov
sahf
xor
sub
adc
out
push
daa
inc
inc
inc
(bad)
mov
movs
cmp
pop
jmp
cmp
xchg
add
xor
dec
push
mov
or
pusha
fsubr
push
outs
in
lahf
loope
push
mov
and
add
or
pmuludq
adc
shr
push
mov
push
in
mov
add
xchg
dec
cmp
cmp
aaa
cli
sar
cmp
inc
dec
pop
movs
lods
clc
jno
or
test
mov
xchg
(bad)
out
cmp
pop
sahf
cld
jl
idiv
inc
mov
shl
lea
lods
int
xchg
pop
sbb
scas
int3
das
loop
and
sub
or
test
(bad)
outs
xchg
div
jl
mov
xlat
nop
sahf
test
add
movs
cld
call
ret
xchg
data16
sbb
cld
icebp
sub
sub
and
lea
(bad)
xchg
daa
mov
imul
push
mov
mov
jno
clc
fstp
mov
cmp
mov
push
xchg
mov
(bad)
int3
pusha
xchg
xor
xor
jge
inc
jo
mov
pop
lock
lea
add
leave
(bad)
jb
ret
or
add
mov
pop
shr
mov
or
and
or
into
test
jae
sub
movs
jne
jp
cmps
jne
cmc
cs
cmp
fisttp
mov
js
adc
loopne
xor
and
aaa
enter
popa
sbb
and
lock
les
movs
ss
(bad)
hlt
and
int3
and
sub
outs
out
push
mov
dec
adc
cli
cmc
push
mov
fbstp
mov
fwait
dec
inc
or
push
xchg
dec
out
sbb
ins
sub
call
cli
dec
pop
iret
neg
jo
and
test
jmp
lea
jns
push
cmps
adc
xchg
pop
mov
mov
cmps
cli
stos
loop
inc
dec
dec
pushf
aas
xor
sbb
call
lds
(bad)
loop
jge
scas
clc
cmp
fidivr
xor
pop
push
adc
push
mov
push
xor
inc
mov
(bad)
shl
cmp
cmp
out
clc
ds
xchg
stos
nop
inc
pop
pop
xchg
push
(bad)
hlt
aam
xchg
dec
mov
icebp
fbld
mov
push
stos
pop
add
cmp
imul
push
popf
call
xor
aas
mov
xor
sub
cmps
mov
xor
sbb
jno
test
adc
shl
adc
cli
ret
inc
jmp
mov
xlat
dec
je
leave
test
fisttp
fidivr
add
and
push
push
out
jno
mov
aas
push
(bad)
test
and
adc
add
ja
int3
(bad)
sar
sbb
adc
dec
sub
and
sub
push
inc
adc
mov
and
mov
sbb
cmp
xor
(bad)
clc
or
and
fisub
stos
iret
mov
cmp
push
movs
das
stos
mov
sbb
das
or
movs
into
mov
xchg
push
out
lahf
sbb
into
and
xchg
and
lock
dec
push
jg
sbb
test
sahf
in
add
and
xor
mov
sbb
or
push
stos
cmp
sar
jb
loope
jp
xchg
repz
mov
jmp
inc
add
dec
add
mov
je
push
xlat
clc
cmc
add
mov
js
inc
in
rcr
(bad)
mov
dec
jg
and
and
pop
mov
push
pop
jo
ins
or
ror
dec
into
into
sbb
pop
je
sub
shl
ss
out
dec
xchg
(bad)
xor
stos
inc
in
adc
jnp
push
or
and
(bad)
mov
add
push
dec
aad
and
mov
and
pop
fwait
in
cld
xor
dec
data16
test
es
sbb
adc
ficomp
dec
mov
or
mov
test
neg
push
ins
das
cli
call
jle
lock
jmp
pop
out
out
das
repz
nop
mov
xor
out
nop
push
dec
add
xchg
jg
or
imul
dec
push
inc
lahf
frstor
xor
aas
push
jno
dec
mov
xchg
shl
outs
xor
popf
(bad)
fcomi
jns
out
pop
rol
add
scas
xlat
ds
xlat
add
push
(bad)
dec
mov
cmp
outs
cmp
scas
mov
dec
imul
add
jge
les
adc
mov
jo
mov
add
scas
xchg
sar
cwde
jmp
aam
adc
or
push
push
mov
rol
sbb
sti
pop
popf
push
pop
mov
out
xor
retf
aad
pop
test
or
adc
push
add
mov
mov
data16
mov
xchg
das
pop
std
hlt
dec
lods
mov
in
shr
cmc
cmps
stos
jle
out
hlt
shl
jmp
xchg
jmp
ss
out
mov
adc
bound
mov
or
inc
out
js
imul
test
rcl
xor
xchg
push
cmps
or
jmp
jae
adc
inc
jecxz
push
xor
fstp
xor
aas
rol
pop
out
xchg
test
das
jnp
retf
iret
sbb
fnstenv
or
call
dec
and
add
xor
push
sub
int
push
scas
cmps
dec
pop
inc
inc
push
leavew
lahf
inc
test
pushf
cld
(bad)
gs
pushf
xchg
push
int
pop
in
push
imul
int
retf
fmul
adc
xlat
adc
outs
ins
(bad)
pop
xchg
and
fsub
je
adc
(bad)
xchg
(bad)
cwde
int
call
je
cld
arpl
packuswb
scas
sbb
inc
aad
sub
push
out
pop
dec
ret
sbb
dec
adc
mov
mov
xchg
aam
es
aaa
vsubsd
test
and
out
nop
dec
in
lods
idiv
sub
adc
mov
cmp
int
ins
mov
pop
call
xor
xchg
fisttp
inc
pop
inc
ret
das
xchg
enter
or
lahf
es
add
xor
aaa
fisttp
lds
cmps
sar
xchg
pop
cmp
(bad)
call
retf
sub
loop
pop
aam
pop
adc
shl
jmp
(bad)
ffree
mov
cmp
mov
mov
in
push
outs
xor
sub
loopne
push
in
mov
xor
and
sbb
vmaxss
int3
(bad)
mov
xchg
aaa
jg
xor
xchg
in
push
push
and
fld
mov
les
lea
push
mov
not
arpl
push
mov
pop
pop
shl
jecxz
mov
cwde
pop
cwde
add
mov
fdivr
clc
cmp
lds
adc
not
int
push
jo
imul
or
stos
loope
cmps
pop
hlt
test
pop
and
pop
inc
movs
retf
loopne
xlat
push
outs
pop
out
cmp
fadd
adc
cmp
cs
lock
gs
in
inc
xor
jl
mov
xchg
in
retf
fdivr
xchg
popf
retf
mov
jne
xor
add
(bad)
bnd
iret
and
lea
call
pop
xlat
test
and
adc
shl
pop
mov
or
push
xor
mov
jnp
push
int
adc
test
mov
ret
push
push
mov
idiv
movs
aaa
std
daa
xchg
movs
or
mov
loope
push
fs
shl
pop
mov
sbb
dec
xchg
mov
dec
sub
int
loopne
(bad)
(bad)
scas
inc
test
jle
push
cmp
xor
sar
mov
fwait
cmps
and
stos
jp
add
lds
sub
clc
jmp
and
sbb
cmp
(bad)
mov
add
ficomp
xchg
ret
mov
xlat
jno
push
and
in
cmp
push
add
push
shr
sbb
inc
scas
sub
ret
mov
fnstcw
and
cli
js
push
(bad)
out
and
mov
push
xchg
popa
xchg
ror
xchg
shl
ja
jecxz
inc
test
xor
fild
nop
ins
mov
pop
push
adc
jo
out
mov
xor
inc
push
adc
leave
hlt
cli
mov
dec
dec
or
or
mov
sub
jns
inc
sar
jns
jl
mov
mov
mov
pop
cmps
in
sbb
sub
push
push
jecxz
xchg
mov
and
or
aad
mov
cmp
shl
push
into
cld
adc
in
mov
xchg
int
dec
mov
pop
add
jl
xchg
cmps
cmp
mov
mov
push
scas
sahf
dec
loopne
or
int3
and
popf
mov
mov
cmc
imul
out
jae
push
pop
inc
xchg
mov
lock
pop
sahf
imul
addr16
cmp
sub
cmp
add
fwait
lods
xchg
and
rcr
das
adc
in
jb
sub
inc
(bad)
mov
xchg
adc
mov
add
call
cmp
xchg
mov
mov
(bad)
pop
mov
ds
fist
add
xchg
out
push
inc
or
jnp
add
adc
mov
adc
and
into
shl
sub
mov
pop
sub
repnz
cmps
mov
neg
mov
adc
sysenter
cmps
inc
mov
mov
iret
mov
xlat
lea
jae
xchg
mov
fnstenv
out
xor
shl
xchg
rcl
je
test
dec
inc
pop
enter
into
aam
pop
push
cmps
lock
or
stos
dec
adc
xlat
pop
jp
xchg
jle
push
test
pop
rcl
cmp
and
shl
fldpi
ror
lea
jnp
mov
(bad)
inc
sbb
jmp
pop
and
push
cwde
or
or
scas
jle
add
arpl
out
jp
(bad)
out
adc
push
fdiv
push
adc
sub
daa
jb
cmc
pop
in
xchg
sbb
test
js
mov
xor
(bad)
(bad)
dec
test
fsin
xchg
loop
popf
xor
call
mov
mov
retf
mov
pop
pushf
scas
pop
add
(bad)
or
rol
push
dec
(bad)
movs
jne
lea
mov
add
pushf
push
test
xor
push
adc
or
mov
inc
push
mov
scas
dec
jae
jle
(bad)
push
jo
dec
add
mov
lea
shl
fistp
xchg
push
imul
leave
cs
jno
or
xchg
dec
cmp
test
cmp
mov
dec
mov
pop
dec
das
pop
push
cmp
pop
xor
gs
adc
push
in
retf
cld
repnz
loope
mov
shl
mov
xor
jle
push
dec
in
iret
mov
dec
pop
push
jb
aas
inc
(bad)
dec
jmp
test
rol
cwde
cmps
cwde
cmp
int
pop
in
bound
imul
retf
test
add
or
stos
xchg
lods
mov
jae
(bad)
(bad)
mov
in
inc
retf
adc
sub
imul
pushf
mov
mov
pushf
xchg
repz
mov
fstp
push
jne
pop
jg
or
in
lds
mov
cs
bound
in
retf
jmp
cmps
lahf
inc
mov
es
inc
ret
cmp
jae
adc
xor
pop
dec
jbe
ret
(bad)
jne
push
sub
inc
mov
push
add
cmp
cmc
inc
mov
sub
jne
xchg
sbb
mov
mov
in
jge
jne
repnz
fs
sub
das
mov
out
loopne
sbb
out
cmp
(bad)
push
in
cmc
mov
ret
ja
shl
cmps
(bad)
cmp
gs
int
push
jg
jns
push
(bad)
retf
mov
adc
shl
add
xor
popf
xchg
xor
inc
scas
pushf
adc
movs
movs
cmp
xchg
jbe
xor
(bad)
std
ret
lds
out
push
add
dec
xchg
int
jae
aad
xchg
adc
lock
(bad)
lock
dec
int
in
mov
ret
push
cmp
mov
mov
push
xor
push
clc
movs
fcom
dec
aaa
daa
or
sbb
aam
jmp
call
dec
pop
cs
or
sbb
imul
out
ss
sub
and
(bad)
push
add
xchg
or
lods
mov
jb
shr
mov
rcl
lahf
jge
jo
jge
xor
ds
xor
jb
add
mov
xor
(bad)
jg
ds
lahf
jp
mov
repz
rcl
xchg
adc
call
dec
and
or
bnd
rol
dec
xor
mov
inc
xchg
mov
pop
ins
adc
imul
retf
inc
(bad)
or
enter
cs
cmps
cmc
out
js
scas
ins
popa
cwde
daa
cwde
ret
dec
or
or
sbb
push
pop
pop
mov
push
outs
in
jg
fistp
je
pushf
(bad)
aam
cmp
jp
xchg
push
shl
jecxz
cld
call
cld
adc
in
mov
cmp
push
dec
lds
add
stos
inc
xchg
dec
or
das
or
mov
in
imul
or
jbe
fidiv
movs
add
fs
and
push
cdq
pop
pushf
fisub
aad
out
xchg
xchg
sub
mov
add
fdiv
xchg
xor
nop
xchg
or
lods
int
add
lahf
outs
pop
imul
iret
mov
jae
dec
stos
shl
les
test
mov
aad
mov
sub
rcr
cmps
xchg
cmp
aam
dec
xchg
shl
iret
rcl
ins
xchg
retf
xor
mov
jne
icebp
lahf
rcl
inc
in
and
mov
and
sub
loopne
and
mov
scas
and
inc
jge
or
test
daa
or
add
ds
call
push
mov
sub
outs
mov
in
fcmove
fmul
and
into
ins
outs
aaa
in
cmp
mov
jle
fidiv
lods
and
pop
retf
mov
sub
ror
push
dec
add
enter
int3
in
test
jge
xchg
test
pusha
loopne
mov
gs
mov
in
fcom
xchg
sti
mov
xor
mov
rcr
jge
mov
mov
ins
in
add
cs
dec
adc
dec
fnstcw
push
or
mov
dec
sahf
mov
dec
sbb
adc
xor
lods
cli
in
stc
mov
sti
pushf
push
(bad)
imul
repnz
das
pop
ret
test
or
push
jns
in
(bad)
movs
pop
mov
mov
xchg
sub
jns
push
or
mov
out
pop
cmp
cld
adc
adc
scas
ret
mov
icebp
nop
test
ins
inc
or
xor
ror
stc
or
xor
pop
or
rcl
push
ja
lods
sbb
loope
dec
push
scas
cmp
mov
sbb
scas
mov
push
push
adc
idiv
lock
cmp
mov
gs
(bad)
mov
or
not
inc
dec
sbb
mov
jle
call
iret
mov
xchg
out
xchg
xchg
mov
outs
jae
leave
push
add
and
mov
push
dec
pop
or
mov
call
outs
arpl
pop
fdivr
cmps
mov
push
test
jmp
(bad)
xchg
dec
jae
ret
add
clc
cld
and
pop
retf
scas
(bad)
xor
call
in
inc
xor
cmp
les
cmc
push
fcmovu
cmp
(bad)
jmp
push
xor
xor
dec
cmp
popa
not
mov
movs
dec
call
and
xchg
lods
dec
test
mov
inc
cmp
xchg
and
xchg
sbb
mov
jmp
aam
std
mov
xor
shr
adc
(bad)
jg
mov
cli
fwait
int3
mov
(bad)
sub
pop
jmp
mov
fnstenv
jmp
cmp
leave
xor
xchg
test
mov
fidiv
mov
ficomp
in
sub
shr
add
repnz
sub
out
loopne
xor
mov
mov
(bad)
fld
dec
test
push
mov
mov
jmp
cmp
outs
sub
or
out
pop
add
add
js
mov
imul
shl
sahf
outs
add
imul
add
int3
sar
test
mov
inc
js
add
xor
test
retf
sbb
adc
lock
inc
pop
rol
in
pusha
sub
ret
movs
xchg
pop
pop
or
jle
fistp
loopne
sbb
clc
add
outs
add
adc
xchg
enter
and
das
fwait
mov
mov
xchg
test
sub
push
dec
xchg
(bad)
fs
int
adc
arpl
repnz
fdiv
pusha
call
push
adc
lea
fs
or
dec
in
in
fnstsw
and
sbb
add
es
mov
pop
in
or
retf
adc
ficomp
xor
js
ins
rcr
jge
mov
mov
cmc
inc
cmc
sti
popf
leave
aaa
sbb
sbb
and
adc
xor
add
adc
xchg
shl
loopne
aaa
test
dec
cmp
add
and
(bad)
sub
xor
je
push
dec
or
scas
push
dec
(bad)
sbb
adc
popa
sbb
in
mov
das
mov
jnp
jmp
lea
mov
sbb
je
jns
es
mov
push
mov
cmp
nop
loop
pushf
mov
mov
retf
sub
int3
jo
iret
jg
sub
push
jo
ss
mul
lods
scas
call
scas
(bad)
mov
jae
cmc
jne
cmp
xchg
inc
add
or
sahf
xchg
cmps
mov
mov
cli
cmp
xchg
adc
stos
pusha
in
push
loope
lods
int3
test
jo
aas
pop
mov
(bad)
fimul
into
call
scas
lea
movs
pop
out
mov
ins
int3
mov
dec
or
cmc
pop
pop
pop
xchg
mov
push
mov
dec
out
xor
sub
or
sti
and
push
jae
jnp
lock
in
in
inc
gs
xor
stc
sbb
mov
mov
xor
jle
and
popf
nop
shr
xchg
fidivr
or
inc
mov
mov
inc
ja
clc
test
push
ins
cwde
xchg
pop
sahf
(bad)
gs
jno
cmc
adc
add
iret
or
lods
push
sti
aad
and
(bad)
pop
dec
cmp
scas
icebp
ss
adc
sbb
push
aaa
in
in
hlt
xchg
xchg
xor
or
mov
xchg
jne
popa
ret
test
mov
hlt
push
or
in
push
push
jmp
js
mov
(bad)
fwait
jns
mov
push
fadd
dec
sub
sub
test
inc
mov
sub
jecxz
jg
push
and
mov
inc
jbe
push
jmp
lock
shr
and
daa
ficomp
or
mov
loop
xchg
add
pop
fwait
and
push
dec
sar
fsub
xor
ror
fidiv
cmp
dec
cwde
ret
daa
shl
mov
std
pop
sub
test
sub
xor
lods
mov
mov
lea
aad
cwde
fidivr
pop
sbb
mov
add
sti
cmp
mov
in
mov
mov
fstp
jns
out
out
mov
mov
js
pop
push
(bad)
cli
xchg
mov
pop
jmp
in
es
and
pushf
cmp
push
imul
jb
into
dec
and
and
sub
cs
xchg
pop
or
hlt
(bad)
push
sub
ins
mov
pop
sbb
push
out
gs
(bad)
sbb
or
inc
inc
or
push
mov
hlt
pop
test
cmps
mov
dec
sar
(bad)
ja
cld
cdq
ret
mov
(bad)
fimul
cmc
mov
retf
cli
dec
cdq
retf
stos
fucomp
or
in
ret
sbb
sub
push
inc
inc
je
xchg
lock
sbb
cmc
icebp
push
ins
out
(bad)
mov
jg
mov
inc
ins
xor
mov
inc
(bad)
mov
shl
mov
sub
sub
loope
dec
mov
mov
test
out
out
retf
push
fdivr
xor
test
adc
jecxz
mov
cmp
push
rcl
pop
or
xlat
arpl
inc
or
jmp
mov
cdq
test
aad
mov
xchg
cdq
inc
sub
cmps
mov
push
dec
jg
pop
test
add
cmp
inc
sbb
xchg
repz
cmp
out
mov
in
push
pop
mov
scas
rol
fmul
xor
inc
aam
pop
mov
jp
sbb
mov
sbb
mov
pop
scas
stos
(bad)
lods
mov
inc
or
jne
sub
(bad)
dec
lods
iret
dec
push
scas
lods
cld
nop
scas
push
mov
jl
or
mov
cmp
lock
and
mov
in
shl
ffree
mov
dec
aam
inc
xchg
mov
dec
and
lea
mov
dec
in
sti
and
push
jo
in
sahf
or
(bad)
push
pop
loope
stos
clc
(bad)
jmp
xor
fcom
daa
xor
out
cs
mov
mov
les
pop
sub
cmp
push
fdiv
aaa
sub
and
sahf
cli
jge
inc
inc
aaa
xlat
adc
hlt
xor
adc
dec
or
jae
test
ja
das
add
fnstenv
aad
sub
imul
sub
je
cmc
or
pop
addr16
add
jae
mov
mov
inc
call
sbb
in
pop
int
enter
nop
or
sbb
retf
adc
jno
movs
icebp
fwait
jo
imul
mov
data16
ins
idiv
div
add
aaa
scas
sahf
lock
iret
push
pop
and
popf
fdivr
into
sub
popf
xlat
or
stos
cli
inc
add
add
in
cmp
sets
cld
in
fidiv
mov
adc
ffreep
pusha
add
mov
mov
fbld
mov
out
fld
scas
inc
add
pop
dec
test
loope
std
adc
scas
div
push
cmp
mov
add
push
not
mov
stos
jmp
pushf
clc
icebp
add
mov
push
inc
imul
inc
lods
sahf
fild
scas
out
ins
sub
in
je
hlt
adc
scas
ds
clc
lea
call
ret
mov
(bad)
push
dec
xchg
xchg
xor
dec
sub
jl
add
inc
or
or
inc
cmp
mov
div
mov
sbb
rcl
scas
inc
mov
cmp
les
stos
sbb
das
popf
and
inc
mov
push
add
or
adc
imul
sbb
inc
(bad)
std
stc
call
aas
into
jns
arpl
sub
lods
and
les
ret
lahf
dec
cmp
repz
ja
sbb
sub
jnp
mov
sub
add
clc
rcr
jno
fist
or
pusha
cdq
mov
push
jae
cli
dec
ja
mov
iret
fimul
arpl
jb
mov
sbb
sbb
xchg
xchg
scas
adc
popa
punpcklwd
es
sub
jp
(bad)
cmp
push
mov
push
or
setl
xchg
xchg
mov
std
js
lea
dec
mov
adc
mov
xor
sar
push
inc
call
sub
push
mov
jb
ja
adc
cmp
in
hlt
es
mov
popf
push
push
stos
fadd
or
fist
adc
mov
nop
mov
stos
inc
inc
push
pop
call
mov
fs
xchg
iret
push
xor
pop
in
dec
repnz
in
mov
movs
repz
lds
test
aad
mov
mov
push
or
jbe
pop
inc
add
mov
jg
mov
rcl
xchg
jns
add
enter
or
add
xchg
in
leave
je
out
mov
adc
mov
in
neg
xor
mov
inc
fidivr
cwde
es
cmp
sbb
jl
push
mov
(bad)
in
sub
pop
xchg
iret
and
retf
jo
add
dec
repnz
sub
loop
or
or
arpl
jle
jle
iret
pop
adc
sbb
sahf
arpl
iret
ret
pop
addr16
push
mov
icebp
push
fchs
cdq
mov
test
inc
mov
stos
cld
xor
cmps
int3
data16
aad
popf
mov
outs
faddp
dec
jno
add
fs
push
(bad)
ds
inc
lock
icebp
mov
inc
xor
dec
xor
sub
adc
mov
pop
jnp
dec
mov
push
(bad)
sbb
lods
movs
arpl
xor
xor
jae
and
cmps
ins
xchg
inc
push
xchg
cmp
xor
inc
(bad)
xor
add
repnz
xchg
inc
loope
push
add
imul
cmc
cmp
mov
ja
cmp
inc
ret
int
mov
popf
in
xchg
mov
in
data16
add
sti
push
ins
or
popf
ror
scas
inc
sbb
jbe
push
idiv
jmp
mov
sar
in
int3
add
dec
and
in
sub
ja
int
lods
xchg
add
adc
cmp
vpmaxsw
test
test
ja
and
loope
jo
adc
lahf
and
ret
ficom
ret
(bad)
rcl
mov
inc
ficom
rep
jmp
fs
das
dec
int
dec
ret
(bad)
arpl
outs
mov
mov
in
push
sbb
lock
ja
adc
aam
les
ror
jle
mov
dec
cdq
push
adc
push
test
into
pop
push
cmp
(bad)
cmp
popa
retf
sbb
sbb
xor
hlt
and
aam
inc
add
arpl
push
mov
fwait
cwde
mov
push
push
inc
jnp
loope
push
jbe
jp
icebp
xchg
adc
ins
jns
inc
sbb
pushf
sub
es
into
int
adc
inc
dec
cmp
sar
fisub
das
fptan
mov
pop
inc
test
cmp
ds
adc
push
das
aaa
jge
ins
inc
(bad)
cld
lock
add
or
mov
mov
push
sbb
cli
cdq
fdiv
jl
dec
jl
jae
sbb
imul
jmp
or
imul
dec
push
sbb
push
jecxz
xor
sbb
jg
mov
mov
jb
sub
pop
xchg
mov
sbb
ins
jo
xor
fcomi
in
sub
inc
mov
bound
ins
adc
push
mov
stos
dec
fdiv
adc
arpl
mov
add
jae
movs
mov
cmp
and
and
adc
cmp
stos
sub
scas
imul
push
and
mov
xor
test
cli
aam
sbb
xchg
xlat
push
xchg
pusha
lock
pop
movs
push
retf
cmp
and
jl
and
jnp
xchg
pop
jns
push
jp
repz
into
ja
inc
xchg
fst
mov
cmp
call
mov
pop
into
fistp
sub
aas
mov
popa
outs
mov
mov
movs
mov
add
sbb
jnp
push
test
test
jp
adc
xlat
(bad)
or
fadd
inc
mov
stc
xchg
sub
mov
or
inc
ret
test
pop
dec
xchg
cmc
je
retf
icebp
je
xor
mov
pop
jge
mov
aas
xchg
retf
or
adc
loop
and
xchg
mov
sub
lods
outs
inc
adc
test
out
jmp
mov
aam
sub
in
lods
sub
sub
pmaddwd
sub
sbb
mov
pushf
lods
stos
cmp
xor
mov
xchg
and
call
mov
adc
out
and
add
push
(bad)
mov
pop
pusha
call
cdq
mov
pop
mov
fisttp
es
jg
sub
aas
test
push
or
sbb
loopne
push
or
sub
jnp
adc
jae
sub
mov
div
pop
add
call
or
imul
sbb
cli
pop
rcr
push
sbb
nop
sar
xchg
mov
xchg
(bad)
ds
daa
scas
pushf
imul
cmp
mov
xchg
pop
jns
loop
test
fisubr
mov
std
lea
inc
cmp
pop
iret
jns
in
call
ret
bound
jo
ror
das
mov
shl
xor
mov
mov
ins
adc
cmp
out
retf
pop
sbb
sub
add
inc
mov
fpatan
add
std
pop
inc
inc
push
jp
xor
jecxz
test
lds
pop
cs
jecxz
or
das
dec
fs
xchg
jg
movs
inc
sub
pop
cmp
lds
int
cmp
sub
inc
pop
rcl
jae
or
or
push
sub
sbb
cmp
xchg
in
cmp
fsub
jl
push
cmp
(bad)
pop
inc
xchg
stos
jmp
shl
cmp
iret
or
sub
(bad)
aad
mov
xchg
fadd
pop
sbb
push
sbb
inc
sbb
jge
bound
gs
je
sbb
call
cs
addr16
and
or
push
push
jo
loope
push
aam
jb
popa
lea
push
sub
pop
ficomp
sbb
push
sbb
mov
es
sub
out
cmps
inc
xor
mov
jl
add
scas
inc
xor
mov
jl
cmp
in
xchg
mov
pop
push
add
daa
repnz
add
movs
sbb
push
mov
cli
jno
in
call
sbb
pop
dec
in
test
in
jns
ins
mov
and
xchg
and
ror
ret
out
scas
(bad)
clc
push
add
js
mov
popf
sub
stos
aad
push
not
repz
push
mov
sbb
out
pop
call
outs
mov
shl
adc
xchg
push
into
imul
add
pop
xlat
in
fnstcw
xor
out
xor
arpl
std
mov
(bad)
movs
xor
pop
inc
mov
(bad)
icebp
pop
jb
push
les
mov
cmps
scas
fsubrp
adc
push
or
pop
mov
push
push
imul
xor
test
cli
xor
and
jo
xor
(bad)
lock
dec
in
xchg
(bad)
xor
jmp
loope
xor
shl
ret
movs
adc
popf
xor
js
loope
and
icebp
cli
mov
mov
push
sbb
cld
(bad)
in
into
mov
hlt
repz
xlat
in
call
hlt
sub
loope
in
hlt
add
sbb
sub
jno
jge
lds
fcmovne
xor
or
or
arpl
jae
rcr
ret
mov
aaa
xchg
jge
fwait
jmp
fucomi
cmp
adc
jbe
inc
cdq
xor
bound
sub
cmp
ss
mov
pop
mov
add
hlt
das
setge
neg
ss
mov
test
and
inc
push
push
in
(bad)
call
adc
int
ud2
in
mov
not
repz
push
fadd
pop
loopne
lds
idiv
test
sahf
mov
call
add
sbb
popf
fmul
or
js
mov
les
loopne
adc
scas
dec
add
pop
test
inc
icebp
mov
fsubr
xor
sbb
stos
cmps
loopne
data16
push
out
test
pop
xor
and
retf
mov
scas
cmp
xchg
jbe
ret
sahf
ror
adc
retf
int
sbb
sbb
mov
jae
or
sub
adc
leave
aad
clc
or
dec
cmp
add
xor
into
out
je
dec
mov
mov
(bad)
add
ret
test
dec
inc
xor
pop
sbb
pop
cld
adc
cmps
adc
popf
inc
pop
out
(bad)
(bad)
and
add
cmps
mov
outs
stos
ss
ins
xchg
jl
fmul
add
(bad)
lods
pop
out
test
mov
jl
jno
ins
adc
cli
ins
pop
pop
out
std
push
mov
sbb
cli
xor
pop
inc
addr16
sbb
mov
shl
lods
adc
bound
shl
add
push
popf
shl
mov
nop
pop
mov
stc
outs
sbb
mov
dec
jg
(bad)
ja
cmp
xor
and
hlt
out
nop
(bad)
mov
out
pop
xor
or
jp
retf
loop
retf
sub
or
int
sub
mov
in
push
data16
mov
sub
test
sbb
gs
das
push
fmul
es
cwde
cmp
bound
repz
pop
aas
jge
out
jbe
sub
mov
mov
outs
add
jae
mov
gs
call
mov
push
daa
rcl
bound
sbb
test
push
mov
(bad)
rol
sub
or
dec
dec
(bad)
push
mov
dec
shl
clc
pop
lods
xor
repz
fstp
imul
sub
add
xchg
cmp
inc
inc
mov
pop
loop
push
test
mov
xlat
or
lods
push
jecxz
sbb
xchg
movs
in
add
leave
jnp
lock
test
mov
dec
dec
pop
lods
inc
sub
fiadd
pushf
dec
mov
gs
sbb
cmps
jne
push
lock
daa
xchg
test
dec
iret
adc
pop
jg
jge
jno
shl
cwde
jae
loopne
repnz
sub
outs
cmp
ins
push
in
mov
cwde
dec
mov
cs
and
(bad)
jmp
xor
es
test
bound
enter
adc
lahf
in
scas
sbb
mov
dec
popf
xor
test
enter
jns
enter
aad
push
xchg
mov
or
cli
jmp
dec
push
adc
inc
arpl
fst
adc
movs
mov
hlt
or
enter
ret
icebp
dec
add
adc
mov
pop
add
xchg
loop
push
and
loope
and
aam
adc
outs
pop
test
dec
inc
sub
add
mov
or
inc
push
adc
shr
pop
mov
cmp
dec
mov
out
adc
(bad)
and
ins
mov
or
stos
sbb
cs
pusha
jae
test
cmp
mov
fs
xlat
movs
shr
inc
pop
idiv
gs
ficom
bound
sbb
cs
jg
jge
cwde
push
push
sahf
jecxz
adc
add
jmp
ret
shl
dec
mov
popa
inc
adc
sbb
lahf
mov
dec
jae
and
imul
jb
daa
out
addr16
ffree
fcomp
lods
dec
or
shl
sbb
idiv
lahf
retf
pusha
sub
call
in
clc
inc
std
adc
test
out
jge
mov
xchg
add
mov
dec
mov
or
dec
mov
mov
arpl
jb
xchg
and
or
mov
cli
repz
mov
push
das
in
add
pushf
mov
cmp
cld
cmp
arpl
add
fadd
adc
xchg
clc
cmps
stc
pop
cmp
cdq
fadd
pop
and
mov
jno
mov
stos
fs
pushf
aad
clc
jmp
aas
mov
add
pop
jns
stc
mov
jg
fcmovb
push
(bad)
pop
or
inc
loopne
call
or
cld
lods
cmp
xchg
in
out
dec
mov
jmp
mov
or
adc
das
xchg
(bad)
ds
dec
sar
sbb
je
push
adc
push
sub
sbb
out
jp
push
mov
pop
loopne
jo
xor
mov
cmp
mov
in
scas
mov
cwde
cdq
ins
pushf
add
inc
add
ds
mov
dec
ja
jle
sar
jb
xchg
push
adc
add
push
and
nop
sbb
push
mov
out
gs
imul
sbb
mov
ins
and
pop
dec
shl
shl
pop
dec
inc
mov
dec
sbb
jg
sbb
jns
mov
jmp
cmp
rep
and
stc
mov
mov
sub
cmc
(bad)
ss
arpl
mov
inc
mov
or
inc
cmp
aad
shr
add
or
jl
mov
jmp
xchg
loop
imul
enter
les
mov
mov
sar
xchg
xor
(bad)
jmp
pop
(bad)
fild
inc
les
in
arpl
ss
sbb
mov
cmp
out
sub
aam
rcl
xchg
jecxz
ins
std
aaa
aad
sub
das
jmp
xchg
mov
dec
xchg
cmp
xchg
cdq
nop
mov
fs
mov
mov
es
das
sbb
xor
ror
jl
ja
fldz
xsha1
cmps
retf
(bad)
xchg
mov
adc
sar
push
jmp
adc
mov
dec
sbb
ret
inc
aas
and
xor
pop
ret
and
sbb
and
cmp
dec
xchg
scas
push
pop
(bad)
xchg
stos
nop
jb
(bad)
dec
in
add
leave
ror
xchg
into
arpl
(bad)
aaa
int3
int
rol
ins
push
pop
dec
xor
dec
cwde
aaa
jle
add
mov
cmps
mov
mov
rcl
cld
lods
gs
push
xchg
sbb
ret
(bad)
cwde
adc
mov
cmc
xchg
push
push
into
pop
push
stos
pop
lahf
dec
shr
and
jmp
and
xchg
test
pop
(bad)
dec
repz
xor
sbb
jg
fsub
xchg
fwait
test
xor
xchg
clc
gs
and
sub
pop
xchg
fcomp
xchg
mov
hlt
cmp
sbb
clc
jmp
jle
sbb
mov
outs
ds
bound
ror
out
pop
inc
mov
xor
mov
mov
in
fbstp
mov
popf
push
popa
daa
mov
and
mov
jbe
xor
push
push
xor
mov
call
imul
sub
(bad)
in
das
in
popa
movs
dec
aaa
jg
stos
add
hlt
test
and
imul
or
pop
xor
add
lods
mov
pusha
xchg
shl
jb
lods
add
push
sub
dec
adc
ja
mov
xchg
pop
add
mov
(bad)
movs
rcr
or
xor
xchg
jnp
lds
mov
lods
pop
mov
test
in
jne
(bad)
xlat
mov
xchg
jb
push
mov
ss
ret
sub
push
adc
ins
stos
leave
mov
inc
mov
imul
pop
std
adc
inc
dec
xor
stos
push
pop
ret
fisubr
push
out
imul
push
outs
lds
dec
sbb
jmp
inc
iret
mov
pop
add
scas
jne
sbb
push
mov
(bad)
enter
mov
test
out
enter
mov
mov
shl
into
icebp
movs
es
pop
push
mov
movs
jle
xchg
repz
xor
jnp
push
dec
stos
int3
std
data16
ja
adc
rep
retf
rcl
inc
fidivr
stos
popa
jg
jmp
adc
into
std
adc
imul
imul
hlt
jmp
(bad)
lock
arpl
cmp
mov
mov
rcl
xor
dec
pop
test
repz
enter
fisttp
inc
das
fisttp
bound
sub
add
cmc
jmp
gs
js
pop
lods
fsubr
fidiv
fcomp
rol
cld
add
cmp
or
xor
fistp
out
sub
cmps
mov
arpl
cmps
cmc
xchg
push
mov
pop
test
movs
sbb
cmp
xlat
push
int3
jmp
mov
test
dec
loope
xor
push
cmp
xor
xor
inc
shl
les
fnsave
push
js
fsubr
jl
sete
sar
ins
push
xor
lahf
adc
cs
jg
mov
jne
and
or
rcl
mov
sub
dec
fiadd
cmp
pop
jne
es
fnstenv
sbb
mov
inc
xor
hlt
lods
adc
jecxz
sub
dec
loop
std
mov
push
xor
mov
loope
sub
sbb
ins
mov
xor
mov
pop
sar
lea
xor
jo
xor
stc
push
and
pop
push
mov
or
inc
ds
jmp
and
loop
lds
daa
mov
cmps
addr16
mov
pop
xchg
jle
pop
cmp
xchg
test
push
fs
aam
xchg
mov
lea
add
movs
jecxz
shl
or
push
mov
sbb
mov
loop
(bad)
push
xchg
mov
cwde
test
add
inc
xor
test
or
neg
fdiv
mov
stc
pop
test
and
addr16
cld
(bad)
std
pop
push
stos
lods
pusha
bound
mov
adc
xchg
test
out
imul
cli
pushf
outs
and
push
das
bnd
xor
rol
fadd
dec
fstp
mov
xchg
pop
sub
lods
push
scas
jp
cdq
sub
inc
hlt
cmc
dec
fs
gs
out
sub
jg
ret
mov
in
loop
cmp
test
faddp
mov
hlt
(bad)
jns
fmul
jp
mov
sbb
imul
bound
shl
ds
dec
pop
rcl
pop
imul
lea
mov
pop
mov
ror
fs
fst
iret
ret
mov
xor
push
rcr
cwde
mov
mov
pop
or
mov
xchg
sbb
ret
dec
jmp
push
(bad)
imul
mul
in
push
cmp
in
lahf
inc
cmc
jbe
jge
ja
mov
mov
stc
aad
pushf
scas
mov
add
daa
mov
pop
and
sbb
(bad)
push
movs
or
das
repnz
in
aam
ficom
out
dec
lods
adc
sbb
test
inc
cmp
int3
mov
fwait
mov
xor
adc
daa
iret
out
or
imul
dec
mov
aaa
fcmovnb
mov
neg
jnp
in
jl
jg
int3
sbb
scas
loop
mov
inc
sub
enter
xchg
inc
(bad)
out
inc
push
mov
test
aas
movs
mov
aad
push
ins
jmp
sti
pop
retf
in
adc
(bad)
lock
not
sub
fidivr
pop
fdiv
pop
shr
repz
lods
cmp
das
enter
cmps
inc
fnstenv
ja
xchg
movs
lds
push
scas
fwait
add
adc
xchg
mov
stos
push
cmp
rcl
mov
(bad)
fsubr
hlt
cmp
mov
sahf
lods
xchg
push
mov
mov
(bad)
ds
scas
dec
push
retf
sub
and
cmp
adc
cmp
and
dec
xchg
mov
(bad)
js
inc
pop
mov
push
push
mov
in
nop
jae
cld
dec
xchg
xchg
popf
rol
je
sbb
mov
sbb
cwde
stc
jae
clc
sbb
fwait
call
jp
loope
mov
adc
outs
rol
xchg
mov
hlt
mov
add
mov
sbb
(bad)
mov
sbb
jno
push
mov
adc
imul
mov
push
xchg
das
push
fiadd
mov
fisttp
inc
scas
xchg
sbb
jle
cmp
scas
sub
(bad)
icebp
fwait
add
jb
cdq
xchg
mov
fs
(bad)
dec
clc
jae
mov
add
xor
adc
pusha
je
add
and
add
clc
jnp
pop
repnz
fisubr
adc
pop
imul
xchg
int
jb
sub
mov
fisubr
dec
mov
xor
mov
sub
pop
push
nop
dec
inc
inc
jmp
and
jns
add
idiv
fs
xchg
xchg
retf
mov
(bad)
jmp
imul
inc
cmovo
cmps
xor
pushf
sub
adc
dec
mov
(bad)
ins
std
scas
(bad)
pop
mov
cmp
cmp
lods
adc
(bad)
push
xor
mov
cmp
int
pop
scas
(bad)
iret
test
int
jmp
shl
(bad)
push
popf
dec
aaa
dec
movs
lods
pop
retf
daa
sub
mov
sub
out
or
pushf
cmps
push
(bad)
jmp
jg
ss
repz
xor
stos
ret
bound
addr16
cmp
xchg
xchg
outs
cmps
xchg
cli
dec
sub
scas
dec
popf
daa
mov
sahf
out
fbld
imul
pop
test
pop
xchg
(bad)
xor
pop
sub
fsubr
dec
and
fmul
jae
lock
xchg
dec
cmp
jno
mov
mov
jns
mov
xor
and
and
jl
(bad)
test
mov
mov
pop
nop
cdq
xchg
push
ins
jg
jae
mov
xchg
retf
aad
mov
pushf
cmp
lds
and
mov
sub
jmp
and
mov
xor
cli
add
jo
in
sub
cmc
adc
call
sub
mov
movs
sbb
fwait
sbb
mov
sub
sar
jge
jns
test
pop
adc
fsubr
shl
pop
mov
inc
add
mov
pop
xchg
rcl
add
pop
shl
and
inc
xchg
cmp
ins
add
inc
shl
imul
movs
loop
pop
adc
mov
retf
jns
mov
arpl
inc
pop
mov
les
int3
loope
pushw
dec
add
cmc
fwait
adc
and
stos
inc
imul
dec
jmp
mov
into
int3
jmp
cmp
cmc
sub
aas
sbb
dec
and
add
imul
div
adc
pop
jne
test
retf
push
adc
xor
cs
xchg
inc
xchg
test
sbb
ret
jmp
shl
mov
jp
pushf
cwde
call
push
xchg
inc
hlt
std
je
stos
cmp
(bad)
out
int
sbb
push
loop
push
mov
jb
lds
idiv
mov
mov
xchg
(bad)
sub
loopne
cmp
popa
fwait
cmps
in
pop
jmp
dec
push
xchg
iret
mov
xor
sbb
mov
lock
(bad)
imul
ret
fcomp
je
and
mov
add
mov
mov
xor
xor
push
dec
or
and
shl
push
xor
cmp
cmp
mov
cli
fistp
(bad)
xchg
pop
jecxz
and
enter
stc
cmp
sbb
arpl
and
repz
sbb
outs
or
out
jmp
hlt
repnz
int
int
mov
call
pop
std
retf
sti
cld
mov
jge
cmp
outs
or
sbb
mov
lahf
mov
(bad)
popa
mov
sub
fistp
shl
jo
outs
or
cmps
pusha
jge
movs
add
aam
aam
jb
clc
jge
jmp
sub
in
(bad)
call
and
xchg
aad
add
leave
cmp
pop
outs
das
sub
mov
ins
add
push
popa
ret
jo
inc
and
mov
aad
mul
xlat
push
fldcw
adc
adc
clc
and
sbb
icebp
mov
ret
inc
adc
push
jmp
pop
or
shr
cmps
mov
sbb
fild
shr
das
xchg
jmp
or
xchg
test
retf
mov
lods
fisubr
mov
mov
popf
push
add
(bad)
stc
xchg
dec
daa
mov
and
push
stc
push
ins
cli
mov
loope
sahf
jne
movs
out
xchg
mov
pushf
push
dec
mov
sbb
call
xor
mov
retf
add
and
cmp
arpl
dec
enter
xchg
out
aad
sub
sub
mov
add
scas
or
je
xor
sbb
retf
add
inc
std
or
inc
mov
test
pop
jge
push
test
je
jmp
add
mov
out
and
pop
test
jns
lods
push
cmc
add
loope
ja
jns
iret
lods
jno
jnp
fadd
pusha
call
(bad)
out
inc
jb
popa
popa
out
sub
leave
xchg
(bad)
xchg
and
mov
out
inc
test
adc
shl
dec
jmp
mov
call
jge
lds
cmps
dec
lock
inc
xchg
(bad)
inc
pop
jge
loope
or
mov
or
adc
jno
enter
push
mov
pop
push
inc
xor
or
or
loopne
fsub
and
adc
fcomp
jnp
mov
call
xor
pop
cmp
jo
push
pop
mov
rcr
mov
in
(bad)
movs
stos
mov
cwde
inc
popa
add
sub
dec
sar
pop
fs
mov
sahf
xchg
into
fisub
cdq
sbb
mov
ds
in
outs
push
enter
or
daa
jb
mov
nop
out
push
push
int3
sbb
test
mov
cld
popf
sub
xchg
adc
mov
jb
pop
out
imul
push
imul
and
ins
push
pushf
fbld
mov
cmc
pop
mov
call
hlt
add
(bad)
cld
sub
push
in
add
pop
jb
sub
or
xchg
mov
mov
xor
call
xchg
dec
sbb
pop
rcr
enter
aad
sub
retf
cmc
mov
inc
iret
vmovss
cdq
mov
fidivr
cld
rol
inc
adc
dec
xchg
les
xchg
inc
ss
dec
xor
loop
jecxz
mov
sub
mov
cmp
fbld
in
loope
fisub
pop
dec
xor
push
mov
inc
aad
ror
arpl
cmova
push
pop
jo
xchg
and
sub
mov
loope
fisub
xchg
lahf
push
pop
repnz
mov
imul
mov
dec
cs
fistp
add
shr
movs
aam
shr
sub
cmp
je
and
dec
popa
xchg
mov
dec
rcr
scas
data16
sahf
inc
adc
pushf
mov
xchg
cdq
mov
sub
cmp
inc
sbb
cmp
lahf
push
js
(bad)
into
and
mov
bound
fs
and
push
leave
aam
out
rcr
sbb
dec
jb
inc
test
pop
cmc
jb
xor
inc
sub
pop
xchg
mov
enter
sub
xchg
outs
mov
pop
leave
fmulp
scas
shl
cmc
add
pop
mov
add
daa
lds
mov
inc
inc
push
jnp
les
in
push
call
fistp
int
clc
int3
fldln2
xchg
neg
test
pop
lds
mov
clc
lock
mov
jne
jne
dec
outs
mov
add
xchg
lea
movs
(bad)
pop
and
fnstcw
sbb
out
pushf
ror
push
jae
and
cmp
or
or
add
jecxz
ror
cmc
cwde
icebp
or
div
popa
mov
out
and
inc
mov
retf
xor
sbb
scas
hlt
out
sti
test
test
in
les
mov
pop
jns
cmp
shl
inc
nop
out
sbb
and
sub
cld
outs
xor
inc
push
shl
addr16
sti
scas
clc
mov
pop
sbb
mov
cdq
test
xor
int
(bad)
adc
jge
(bad)
xchg
aaa
inc
adc
adc
adc
out
mov
pushf
lds
and
sub
sub
mov
or
sub
out
scas
mov
(bad)
test
lods
and
daa
jl
inc
cld
repnz
in
outs
and
repnz
in
sbb
push
push
cwde
push
lahf
bound
pop
ds
push
(bad)
scas
es
mul
jnp
mov
cmp
xor
cld
imul
out
test
inc
and
test
xor
push
lods
jae
loope
dec
pop
push
mov
push
jp
mov
push
cmc
push
out
or
push
sbb
mov
(bad)
sbb
push
cmp
sub
sub
test
jne
jg
dec
pop
fiadd
call
sbb
mov
dec
inc
mov
retf
adc
inc
nop
fist
sub
push
retf
mov
dec
leave
dec
fstp
mov
xchg
pop
add
sub
xchg
aas
es
add
adc
mov
sbb
cmp
xchg
popf
add
and
push
mul
dec
addr16
pop
vhaddpd
and
inc
inc
clc
sub
into
ror
mov
iret
push
gs
sbb
xchg
repz
sbb
(bad)
call
mov
pop
inc
jno
jmp
out
sub
sbb
adc
pop
inc
mov
aaa
retf
cmp
test
int
out
(bad)
(bad)
adc
stc
mov
or
leave
jge
add
sub
iret
push
stos
dec
adc
jl
or
in
int
int
lock
sub
xor
mov
es
shl
dec
cmp
imul
cmps
sbb
add
cld
and
xchg
cmp
dec
sbb
xchg
pop
sbb
ret
mov
or
pop
jge
pop
je
in
dec
pop
mov
scas
or
or
dec
and
and
out
fild
add
mov
fsubrp
push
xchg
add
call
das
mov
fimul
aam
mov
dec
lods
fst
leave
out
outs
in
mov
imul
cmp
push
push
jmp
aaa
enter
fcomp
(bad)
cmp
mov
or
rol
adc
out
pop
retf
or
pop
aad
pop
call
dec
inc
mov
movs
adc
cmp
pop
mov
or
push
outs
cld
push
add
push
cs
sub
enter
push
xchg
inc
dec
jbe
hlt
pop
cwde
mov
mov
xor
popf
ss
ins
cmp
aas
xchg
ret
fild
cmps
mov
xor
outs
call
in
jno
mov
and
in
dec
loopne
push
mov
sub
mov
xchg
add
mov
cmp
mov
dec
push
xchg
es
mov
js
mov
xchg
cld
mov
and
pop
add
icebp
cmp
aam
mov
pop
cmps
sub
jbe
xor
mov
and
xchg
movs
outs
outs
fsave
in
psllq
fdivr
jmp
pushf
int
mov
loope
retf
sub
in
call
ins
xchg
test
push
xchg
icebp
(bad)
dec
or
cs
adc
push
cmps
out
aad
(bad)
cdq
scas
rcl
mov
ja
fs
les
sub
xor
inc
pop
das
add
jb
mov
retf
(bad)
mov
(bad)
mov
mov
sbb
test
bound
xor
neg
cdq
scas
jp
push
test
das
add
fadd
sbb
jl
lods
cs
mov
cdq
test
call
ficom
mov
addr16
xchg
and
mov
xor
pop
cmp
lods
out
pop
aad
sbb
push
fidivr
xchg
les
inc
push
das
gs
inc
clc
mov
scas
retf
scas
xchg
in
or
pop
jle
add
pop
scas
enter
pop
inc
sub
jle
ss
push
or
(bad)
ret
mov
in
xor
stos
(bad)
jl
int3
vmwrite
popa
jl
or
xor
sar
fisttp
pusha
push
lods
mov
jp
inc
and
push
aas
push
sub
dec
test
outs
outs
sub
sbb
cli
retf
lods
xchg
sub
data16
jmp
or
imul
mov
push
mov
dec
ja
popf
stc
mov
movs
jl
fisubr
adc
outs
cmps
scas
mov
in
in
xchg
jge
out
jg
daa
pushf
mov
enter
push
ret
gs
xchg
mov
dec
out
cmp
(bad)
adc
xchg
nop
xor
ins
xor
mov
aad
and
cmp
test
shl
stc
fisttp
push
mov
fidivr
and
push
mov
jno
les
jmp
retf
sbb
sub
loope
ror
jns
dec
loope
xchg
shl
dec
or
fbstp
sub
(bad)
lods
sbb
int
adc
into
sub
(bad)
inc
arpl
in
out
sbb
sbb
jns
retf
xchg
les
out
out
jg
mov
adc
adc
sahf
xchg
xlat
loop
rol
mov
loope
xlat
cmp
mov
dec
xor
cmps
sbb
sub
fbstp
push
cld
ins
inc
xlat
jmp
push
push
mov
in
dec
mov
xlat
or
stc
add
fist
shl
call
int3
div
mov
mov
mov
xchg
push
cwde
mov
pop
dec
mov
adc
dec
mov
stos
dec
and
xlat
inc
in
pop
xlat
cwde
pop
outs
loopne
and
lods
or
call
mov
sar
mov
xchg
test
or
outs
stos
(bad)
or
cs
push
mov
mov
shl
loop
inc
xchg
sub
pop
jae
inc
(bad)
aad
mov
mov
push
adc
xor
and
es
pop
daa
jno
lea
sub
cld
outs
cmp
outs
mov
jg
pop
pop
fnsave
lods
xchg
pop
int
sub
das
inc
xor
jp
data16
cmp
cdq
jmp
mov
sub
(bad)
or
xor
xor
xchg
and
push
cmp
jno
(bad)
jns
(bad)
cmps
inc
into
jo
jne
ss
sub
daa
or
out
adc
xor
sub
xchg
pop
mov
inc
xchg
imul
xchg
ins
xchg
dec
sbb
add
xchg
push
mov
jmp
loope
adc
fimul
inc
xor
mov
push
inc
aam
mov
jno
movs
lahf
mov
xchg
je
cmps
mov
sbb
push
mov
imul
repz
inc
inc
mov
sub
cmp
inc
rcr
sbb
ja
push
fld
rol
sahf
sub
pop
adc
mov
fist
pop
xchg
js
loopne
lds
aad
lock
dec
cwde
sahf
stos
cmps
jo
icebp
and
and
mov
push
bound
les
push
cmc
test
jmp
js
dec
fs
dec
sub
out
add
push
sub
pop
pushf
sbb
cmps
add
lds
cmp
inc
add
rcr
int
sbb
pop
mov
mov
(bad)
aaa
mov
pop
not
cli
shl
dec
mov
pop
gs
call
xor
mov
mov
dec
mov
jbe
shl
and
pushf
add
es
add
add
mov
push
stc
out
mov
scas
sub
and
mov
or
push
jmp
sbb
test
not
dec
int
test
adc
ret
arpl
outs
arpl
or
sub
mov
int
dec
xor
int3
sti
adc
ins
inc
popf
or
cmc
mov
rol
push
add
mov
mov
jns
loop
fwait
loop
mov
pop
aam
stos
arpl
sub
loopne
mov
clc
lods
xchg
int3
or
fcmovnbe
test
lea
sbb
arpl
test
bound
mov
mov
jecxz
in
xchg
jmp
ror
mov
sub
xor
xchg
or
aas
fldl2t
cmc
push
lods
fiadd
sub
jb
push
mov
loopne
cs
popf
sub
je
mov
add
jmp
dec
imul
sub
loopne
inc
inc
call
inc
fwait
jb
push
mov
sbb
cmp
add
imul
sbb
jecxz
dec
out
movs
xchg
jbe
fisub
daa
into
pop
fisubr
push
pop
stc
push
cmp
scas
dec
test
jl
or
sbb
in
inc
in
aam
mov
test
mov
push
inc
movs
(bad)
fwait
lock
or
cmp
bound
pop
sub
jmp
cmp
add
and
pop
dec
(bad)
mov
jo
xchg
mov
and
push
loope
push
mov
xor
out
sub
jg
aad
sub
lock
fst
inc
mov
sbb
cmps
movs
mov
or
(bad)
dec
les
xor
xor
jl
fs
rcr
sbb
ds
shl
enter
push
push
and
xchg
cmp
aas
nop
(bad)
mov
outs
push
mov
pop
mov
retf
sub
(bad)
sub
and
mov
jecxz
cli
push
in
pop
sti
daa
mov
pop
push
stc
cwde
xlat
xor
jmp
pop
(bad)
push
lahf
dec
cs
in
and
or
enter
pop
push
rol
(bad)
in
loop
clc
call
test
retf
cmp
mov
push
hlt
hlt
mov
fcmovbe
pop
push
push
call
loope
out
popa
push
mov
ficom
(bad)
inc
stos
clc
mov
xor
pop
push
movups
cmps
loopne
pusha
les
dec
in
bound
call
lds
iret
pop
jmp
out
dec
(bad)
push
cs
or
push
out
dec
pop
sub
mov
rcr
push
je
aaa
push
jbe
(bad)
aad
xchg
pushf
adc
sahf
push
or
jae
jg
shl
xchg
sbb
test
cmp
sub
jg
xchg
fidiv
sbb
push
cmp
or
push
aad
leave
scas
pop
sahf
popa
add
jno
push
jmp
cwde
xchg
loopne
in
mov
scas
mov
xchg
lods
jmp
jnp
fwait
(bad)
fsub
aas
mov
(bad)
jle
outs
push
xchg
mov
sbb
scas
xor
xchg
mov
popf
mov
sub
jbe
aas
daa
xor
fs
cmp
jns
pusha
mov
mov
push
cmc
call
mov
pop
(bad)
rol
imul
add
lea
dec
sbb
jle
push
(bad)
xchg
dec
jnp
dec
push
jmp
inc
fcomp
add
loop
repnz
les
add
and
adc
test
add
xchg
data16
adc
jne
sub
or
or
inc
xlat
into
ja
aam
pop
and
sbb
mov
in
xor
pop
dec
dec
mov
adc
lds
(bad)
mov
(bad)
nop
loop
xor
xor
and
jmp
call
xchg
div
mov
jle
xchg
aam
dec
sbb
cmp
leave
inc
or
je
movs
jnp
sar
js
pop
mov
out
jb
repnz
pop
bound
loope
push
lods
movs
imul
push
xor
cmc
and
shr
xor
retf
push
or
adc
shl
and
lods
jg
cmp
lahf
sub
dec
mov
out
pop
ret
into
test
mov
fst
in
retf
add
xlat
cld
call
adc
les
pop
pop
lods
add
push
mov
cmps
mov
push
lods
paddw
icebp
push
cs
xchg
mov
cld
mov
xchg
mov
sub
scas
iret
adc
xchg
idiv
movs
jbe
(bad)
call
nop
mov
test
add
test
pop
xor
test
adc
sbb
jge
ret
aaa
inc
je
in
jmp
and
ss
mov
sub
jge
fiadd
mov
inc
jmp
add
les
jmp
add
adc
pop
mul
retf
(bad)
jb
add
sbb
retf
sbb
std
inc
in
lea
adc
adc
jae
xchg
push
(bad)
fnstenv
inc
enter
repz
xchg
jl
into
scas
test
(bad)
mov
cmp
push
(bad)
rcr
sar
rcl
push
jb
pop
movs
dec
and
push
xor
and
fmul
jg
dec
xchg
mov
sub
cmps
ja
cmc
cmps
pop
(bad)
push
imul
iret
sbb
imul
mov
mov
(bad)
push
xchg
jnp
cmps
and
mov
jg
mov
dec
outs
aaa
jno
and
mov
sbb
aam
div
in
loope
outs
pop
inc
pop
pop
dec
test
arpl
push
sar
retf
popa
dec
sub
rcl
mov
lods
push
add
pop
push
loopne
cmps
imul
cwde
out
cwde
sahf
add
mov
sbb
mov
jne
daa
xchg
mov
sbb
mov
cmp
rcl
outs
je
ret
sbb
push
int3
push
pop
push
dec
fdivr
nop
mov
mov
jb
leave
dec
lods
inc
repz
add
inc
and
out
mov
test
jae
xor
(bad)
pop
adc
clc
jo
xor
or
ja
dec
icebp
pop
inc
xchg
jo
inc
scas
dec
mov
imul
ret
push
mov
ret
leave
pop
popf
(bad)
stos
lahf
push
loop
arpl
(bad)
push
ret
pop
dec
pop
(bad)
icebp
jns
scas
xor
xchg
test
imul
cmps
js
inc
aad
test
or
jbe
push
cld
aad
or
cmps
sbb
es
rcr
mov
leave
adc
clc
pop
adc
mov
push
loope
nop
fst
sub
cmp
aam
and
jge
test
cld
btr
mov
push
or
popa
xchg
cmp
(bad)
inc
and
sub
jecxz
cld
and
adc
jno
inc
in
and
inc
push
addr16
mov
cdq
sar
dec
sub
fdivr
dec
xchg
ret
pop
push
mov
mov
ins
xor
gs
inc
ror
dec
dec
std
mov
mov
lds
sub
jle
jno
dec
dec
rol
cld
sbb
mov
rol
push
xor
and
cmp
jecxz
or
pop
aaa
xchg
not
inc
sbb
push
dec
les
addr16
gs
jnp
inc
call
sbb
or
ret
cmp
xor
or
xchg
jecxz
push
scas
repz
ins
mov
out
icebp
push
sub
cmps
fisubr
cli
int3
xor
pop
shl
ds
dec
and
js
addr16
aas
daa
mov
inc
sbb
enter
test
inc
dec
and
jmp
mov
jmp
aas
sub
ins
loopne
mov
inc
test
mov
out
xchg
test
xchg
mov
ret
jne
inc
sub
push
mov
mov
mov
add
aaa
sbb
(bad)
fmul
fs
xor
mov
dec
xor
inc
jnp
test
loope
rcl
jmp
mov
push
scas
je
and
jmp
or
jmp
mov
mov
xchg
mov
in
inc
rol
jno
shr
lock
sbb
stos
add
in
mov
dec
(bad)
aam
sbb
sbb
xor
stos
sbb
jl
rol
sub
in
fsubr
inc
call
sub
lods
rcr
jle
sub
mov
(bad)
xchg
mov
add
adc
dec
loope
sub
sub
das
dec
jecxz
data16
xchg
dec
outs
push
sub
test
adc
dec
jb
mov
repnz
push
jmp
xor
add
or
bound
pusha
push
push
call
mov
mov
imul
cld
test
stc
int
sub
mov
enter
test
arpl
enter
call
xchg
call
adc
hlt
and
xchg
div
sar
sbb
test
adc
xchg
aaa
fldlg2
pop
pusha
xchg
xchg
adc
push
cld
jecxz
and
xor
inc
cs
retf
shr
jnp
or
pop
mov
adc
scas
dec
js
mov
cmps
pushf
and
xchg
xchg
call
bnd
push
and
ret
dec
mov
xor
inc
or
ror
adc
mov
xchg
mov
mov
imul
push
mov
(bad)
fwait
pop
call
pop
mov
int
adc
repnz
(bad)
push
dec
xor
or
sbb
inc
test
sub
sub
sti
in
mov
popf
push
xor
cdq
add
jbe
cmp
jne
hlt
or
arpl
xchg
mov
imul
bound
cmps
les
push
test
es
mov
addr16
fild
mov
cwde
fs
add
inc
sbb
std
sbb
popa
(bad)
clc
push
pop
not
xlat
cmp
xchg
xchg
jnp
adc
dec
sub
into
mov
stc
jmp
mov
arpl
and
mov
mov
or
inc
mov
mov
mov
and
or
psubusb
mov
(bad)
jp
push
push
adc
retf
mov
gs
fidivr
js
push
pop
or
and
xor
dec
mov
mov
std
mov
xor
int
repnz
repnz
test
jne
jns
fcmovne
jne
push
cmp
mov
stos
lea
add
(bad)
jle
inc
fwait
mov
in
loopne
or
out
and
ins
mov
mov
jmp
mov
pop
push
out
xchg
add
pop
jecxz
sbb
in
lock
pop
dec
dec
jl
jle
dec
and
jp
xor
xchg
(bad)
mov
out
and
and
xchg
movs
mov
fsubr
mov
daa
mov
jo
fiadd
bound
mov
mov
sub
push
mov
(bad)
sbb
gs
xlat
in
fmul
mov
iret
cmp
mov
pop
xor
adc
pop
mov
dec
and
mov
fmul
movs
inc
daa
pusha
ins
retf
repnz
pusha
sti
cmp
dec
mov
into
ror
fisubr
jp
jp
fld
mov
inc
fbld
push
jnp
sub
mov
mov
cmp
mov
(bad)
mov
cli
mov
jnp
or
repnz
add
or
fild
popf
das
and
add
mov
push
and
mov
imul
cmp
cmp
popf
sub
dec
mov
sub
data16
sub
adc
xor
xor
push
push
sub
out
in
inc
scas
dec
sahf
sbb
loopne
cmp
jne
mov
sbb
or
pop
(bad)
(bad)
adc
mov
jb
dec
cmps
mov
sbb
mov
shl
jno
mov
stos
stc
in
push
movs
and
cmp
(bad)
xor
test
aam
mov
xchg
cld
int3
scas
pop
jl
xchg
cmc
sbb
jecxz
inc
ds
xchg
(bad)
sub
mov
xchg
cdq
and
jne
adc
push
pop
gs
mov
(bad)
dec
xchg
xlat
(bad)
fisttp
cdq
fimul
out
mov
mov
in
jge
pop
inc
or
mov
fst
jae
imul
pop
loop
jo
je
cmp
outs
push
cwde
cmp
stos
jmp
(bad)
(bad)
mov
ret
shr
xchg
fiadd
ret
clc
and
and
sbb
adc
pusha
adc
push
mov
fwait
clc
pop
inc
mov
outs
push
mov
xchg
mov
fimul
loope
cwde
mov
aam
imul
cmps
fs
arpl
jb
cmp
cmp
pushf
lods
jns
add
or
dec
add
lea
movs
inc
cdq
mov
sbb
xchg
fmul
(bad)
movs
mov
fisubr
adc
dec
ret
mov
dec
pop
jne
test
jecxz
and
push
jmp
aaa
(bad)
and
pop
clc
mov
xor
cmps
xchg
fistp
ja
jo
lahf
add
pusha
retf
push
xor
icebp
rcr
(bad)
int
addr16
cwde
push
sti
dec
mov
sub
cmp
mov
pop
std
dec
cmovp
(bad)
dec
jo
jp
arpl
xchg
test
dec
std
leave
sysret
(bad)
repz
ins
sub
xor
mov
(bad)
pop
jnp
popf
test
lds
dec
push
xchg
test
scas
fcmovbe
or
push
xor
jg
out
jo
sbb
xor
pop
sub
pop
and
mov
not
outs
add
icebp
je
pushf
cmp
lods
mov
or
shl
mov
or
jle
pop
sbb
mov
dec
std
xchg
mov
iret
xchg
adc
sbb
inc
les
scas
mov
mov
mov
cmps
sub
inc
test
adc
cmp
das
xchg
jnp
sbb
std
(bad)
out
inc
or
aad
jp
popf
aam
leave
movs
push
mov
sub
je
ins
dec
lea
shr
mov
xchg
iret
mov
test
cmps
out
xchg
xchg
pop
inc
dec
sub
mov
aas
adc
inc
jae
xchg
inc
and
xor
movs
xchg
pushf
mov
shl
sbb
jo
movs
and
mov
js
pop
jb
arpl
cmp
ja
fcomp
pop
dec
cmc
push
arpl
dec
les
xchg
mov
or
pop
inc
(bad)
jmp
mov
jp
cld
jecxz
sub
jne
xor
scas
dec
xor
pop
into
clc
lea
shl
mov
xor
dec
int3
adc
jns
jbe
scas
dec
sbb
add
jb
add
mov
cld
jno
in
dec
push
or
(bad)
cli
pop
xor
inc
stc
ret
mov
gs
inc
sbb
mov
jmp
cs
dec
fwait
add
push
push
add
(bad)
div
pop
in
pusha
nop
(bad)
mov
push
mov
add
(bad)
pop
or
sbb
push
shl
mov
cld
hlt
(bad)
out
stos
add
outs
jne
xchg
test
sub
inc
jne
jno
(bad)
jmp
stos
test
gs
repnz
fs
ret
mov
leave
in
lods
xor
icebp
cdq
cs
inc
popa
ror
nop
add
and
out
push
outs
cwde
outs
inc
push
sub
test
int
mov
jmp
mov
gs
sbb
data16
push
cmp
(bad)
sar
retf
lock
pusha
(bad)
lahf
dec
aad
mov
xlat
mov
cmc
outs
inc
add
(bad)
daa
call
popa
dec
mov
lds
daa
int3
xor
loopne
mov
mov
daa
int
mov
push
xor
shl
xor
mov
shl
sub
inc
push
std
pop
mov
fs
mov
js
jg
pop
sbb
popf
aam
cmp
or
out
outs
sub
outs
xchg
movs
cmc
xor
ss
jnp
push
jo
mov
mov
adc
int3
jge
pop
xchg
sbb
cmp
shl
mov
loop
pop
sbb
dec
mov
frstor
(bad)
test
mov
aam
adc
test
fsub
add
mov
and
aad
add
lds
jmp
out
imul
outs
jmp
xchg
aad
push
test
outs
dec
dec
dec
test
adc
push
pusha
(bad)
test
in
aas
rcl
inc
sub
push
xchg
push
and
sbb
sub
(bad)
outs
inc
out
xchg
dec
xchg
mov
or
push
xchg
mov
mov
into
test
push
and
mov
inc
add
stos
rcl
add
mov
test
retf
pop
test
retf
mov
hlt
pop
aas
aas
cmp
sub
pop
mov
jl
cs
and
arpl
loope
popa
mov
je
ins
call
add
dec
push
js
out
lea
js
jnp
push
push
(bad)
stos
imul
int
test
aaa
sub
pop
enter
mov
or
cmp
jmp
push
sbb
test
sbb
addr16
sub
or
add
js
sbb
dec
lods
adc
out
(bad)
sti
cmp
out
(bad)
mov
imul
imul
std
pop
dec
div
out
fidiv
inc
aad
cmp
sub
or
mov
sub
jns
loopne
outs
cs
out
push
mov
or
daa
out
lods
nop
stos
clc
mov
pop
sub
adc
or
movs
pushf
jg
leave
ss
(bad)
call
pop
call
mov
or
pop
xchg
xchg
out
ldmxcsr
xchg
dec
add
mov
cmp
push
push
fdivr
pop
pushf
out
cwde
inc
mov
cmp
sub
xor
es
cmp
faddp
inc
pop
inc
data16
call
push
imul
xor
mov
pop
jb
je
pop
pop
aam
mov
rol
hlt
ret
sub
xor
jbe
loop
fadd
dec
into
das
call
xchg
inc
mov
or
dec
gs
adc
pop
(bad)
int
arpl
mov
pop
in
test
xor
sub
and
lds
xchg
adc
pop
jno
inc
pop
inc
cmp
movs
aad
neg
xchg
idiv
mov
pop
xchg
cmp
repnz
retf
sub
ss
jo
pusha
cmp
cmp
jmp
out
(bad)
mov
xlat
not
pop
cmc
or
xchg
and
aas
xchg
xchg
sbb
(bad)
out
push
mov
cmp
out
push
das
xchg
outs
mov
push
aad
pop
jg
sti
xlat
mov
arpl
aaa
dec
mov
dec
pop
sub
mov
pop
mov
and
sub
ss
in
pop
clc
ja
rcr
je
sbb
sbb
popf
das
in
jge
test
jle
push
adc
repz
jmp
rol
(bad)
popa
pop
dec
repz
adc
shl
loop
pushf
adc
jbe
fmul
mov
adc
jp
pop
lea
out
sub
mov
je
lds
adc
test
(bad)
xchg
movs
mov
movs
movs
adc
or
dec
pop
mov
(bad)
out
and
lods
push
inc
sub
xchg
mov
(bad)
xlat
adc
ins
or
sub
cmp
inc
sub
leave
iret
inc
push
aaa
dec
mov
inc
fmul
movs
and
ror
lods
mov
cmps
jl
out
fisttp
bound
loope
(bad)
cmps
cmc
adc
test
pop
(bad)
lods
pusha
out
imul
stos
mov
mov
lods
ret
sub
dec
imul
fwait
icebp
clc
mov
mov
(bad)
icebp
test
sub
cmps
sbb
xor
pop
sbb
mov
cdq
xabort
lods
enter
add
and
inc
je
cmp
push
or
mov
sbb
dec
xor
adc
jnp
outs
popf
xor
or
shr
outs
out
mov
neg
aam
loopne
call
or
or
ror
ins
mov
call
push
xor
adc
mov
cli
sti
cmp
jmp
aam
imul
mov
add
je
mov
adc
ret
inc
shl
ficom
dec
push
cmp
dec
mov
jbe
pop
ins
sbb
mov
fsub
adc
je
jg
pop
out
ja
cwde
aaa
mov
sub
adc
data16
(bad)
pop
add
mov
pop
fprem
or
jl
and
mov
fsub
xor
(bad)
repz
mov
imul
mov
in
push
jmp
or
add
push
pusha
xchg
imul
xchg
xor
pushf
out
mov
cwde
scas
mov
xchg
push
jge
aaa
js
adc
xor
iret
and
mov
icebp
inc
dec
je
mov
and
ffreep
ins
push
xor
aad
pop
add
sti
cmp
sub
xchg
sbb
outs
fstp
fld
movs
jge
jge
or
sbb
dec
scas
inc
stos
pop
mov
jnp
or
repnz
leave
stos
mov
test
adc
mov
aaa
ficomp
jecxz
xchg
jae
and
adc
aam
mov
jmp
cli
leave
ins
jl
out
hlt
inc
arpl
inc
int3
sbb
sub
das
sub
jb
mov
push
aas
daa
arpl
pop
icebp
pop
xchg
ror
xor
pop
jmp
xchg
out
and
sbb
(bad)
push
sahf
repnz
xchg
mov
leave
ret
movs
mov
inc
arpl
adc
mov
mov
outs
jae
xchg
mov
pop
mov
dec
stc
pop
dec
mov
push
imul
add
fsubr
add
pop
mov
ds
shr
xchg
or
lahf
nop
pop
push
jl
lds
cmp
popw
cmp
out
pusha
cli
ficom
bnd
dec
mov
and
jmp
pop
fnstcw
pop
sbb
cmc
sar
pop
jge
(bad)
adc
sub
pop
cwde
(bad)
out
jl
popa
pop
or
add
call
test
xchg
movs
dec
xchg
pop
enter
enter
jne
lock
dec
xchg
das
pop
bound
add
push
cmp
push
scas
inc
pop
data16
and
mov
jge
xchg
adc
sub
mov
clc
scas
cmp
repnz
mov
pusha
dec
daa
test
ret
and
int
xchg
sti
ret
dec
jmp
scas
cmps
push
fwait
xchg
mov
bnd
das
xchg
test
aad
inc
inc
adc
test
in
push
dec
call
ret
jp
es
jmp
jmp
mov
mov
inc
pop
pop
scas
mov
bnd
xchg
pop
int3
add
and
aaa
out
cmp
push
retf
push
lds
addr16
adc
shl
dec
add
push
out
push
jg
retf
stc
pop
jmp
(bad)
or
les
push
cmp
push
rol
dec
in
movs
fidiv
std
cli
ror
lahf
xlat
mov
and
push
test
out
pop
sbb
outs
jp
pushf
jp
jnp
jnp
test
rcl
lock
and
mov
pusha
pop
cmp
(bad)
ss
or
call
leave
leave
lods
out
aad
sbb
hlt
mov
mov
cmp
mov
(bad)
fcomp
dec
add
fld
pop
adc
ret
sbb
add
add
stc
out
sbb
xor
call
xchg
in
(bad)
in
ja
add
jae
and
nop
test
jae
mov
div
jno
xchg
mov
mov
stc
addr16
(bad)
push
jp
in
in
sub
sti
cmp
sti
adc
mov
stos
pop
(bad)
mov
fs
fldenv
sbb
jno
mov
movs
jno
or
mov
mov
cmps
test
xchg
movs
shl
cld
fwait
into
idiv
mov
push
add
fxch
xor
pop
sub
in
jae
mov
jg
mov
cs
sar
pop
xchg
xlat
add
mov
mov
into
gs
into
into
push
stc
pop
inc
int3
mov
xchg
xor
inc
lods
bound
sahf
and
test
cli
(bad)
gs
push
call
xchg
hlt
cmps
aam
xor
fiadd
enter
in
and
mov
(bad)
stc
test
xchg
ins
xchg
ret
aaa
fs
in
lock
mov
push
nop
pop
outs
adc
enter
xchg
mov
prefetch
or
out
dec
xchg
jns
jmp
jno
sbb
add
push
adc
enter
outs
ss
ror
inc
adc
sub
or
cmps
outs
jl
push
iret
jge
push
(bad)
ja
popa
xor
mov
enter
out
and
cmp
fild
cmps
retf
cmp
pop
xor
add
mov
jmp
shr
jmp
stos
mov
daa
cdq
cdq
xor
ret
jecxz
pop
and
pop
pop
push
or
sub
adc
xor
jg
fstp
mov
call
movs
mov
daa
stos
jbe
jmp
and
lea
stos
int3
adc
mov
jns
pmaxub
retf
mov
stc
mov
push
jne
jbe
ds
inc
lods
adc
dec
xchg
ins
mov
aaa
lahf
stos
xchg
(bad)
icebp
xor
enter
mov
std
test
nop
sub
fsub
sub
movs
loop
cmp
xor
add
adc
imul
fbld
jle
jmp
sub
clc
ret
rcr
lea
int
xor
mov
popf
or
dec
fidivr
mov
(bad)
cld
cli
jge
sub
sti
xchg
push
call
cdq
daa
iret
xchg
adc
call
(bad)
fmulp
enter
sti
sti
stos
push
sahf
cmp
sbb
push
mov
sti
push
or
and
push
xor
sub
sbb
mov
test
sahf
add
mov
push
cmps
int3
jne
nop
dec
scas
cmp
jb
mov
mov
je
push
pusha
pop
or
dec
push
iret
cmp
pop
pop
ret
popa
jbe
or
mov
cli
mov
add
bound
dec
xchg
xchg
aaa
mov
or
cmps
mov
cdq
mov
add
and
out
outs
adc
mov
and
cli
pop
test
mov
push
add
pop
mov
fwait
cld
mov
test
xchg
sub
ss
fisubr
mov
movs
(bad)
mov
xor
cmp
fidivr
fimul
push
or
jp
mov
inc
imul
mov
out
xchg
int
movs
in
sub
cmps
test
and
mov
arpl
sbb
cmps
out
shl
mov
inc
add
mov
icebp
shr
mov
inc
nop
into
sub
icebp
xor
add
int3
push
add
add
jecxz
mov
(bad)
enter
add
add
popf
add
xor
addr16
adc
shl
sub
(bad)
repnz
mov
sbb
xchg
ds
ret
mov
push
ja
outs
rcr
fimul
les
je
out
push
out
(bad)
cwde
push
(bad)
loope
movs
or
stos
adc
or
dec
scas
out
(bad)
xchg
xchg
sub
jl
scas
popa
xchg
jbe
cld
(bad)
lahf
or
lods
sbb
jbe
or
call
adc
mov
outs
fwait
mov
push
dec
xchg
jp
cmps
test
mul
cmp
push
pusha
in
sahf
in
movs
xlat
xchg
cld
ds
jmp
mov
in
movs
fstp
pop
pop
clc
cmp
xlat
fldz
shl
dec
jmp
xor
ins
cli
inc
jecxz
imul
dec
out
cmp
test
lods
arpl
xchg
push
pop
imul
jno
jl
idiv
mov
pop
lods
pop
addr16
inc
push
aam
cmps
idiv
dec
repz
test
retf
jb
push
xor
push
aas
xor
pushf
mov
push
dec
iret
mov
adc
mov
call
xchg
jnp
in
mov
outs
jle
aaa
jb
sbb
data16
xlat
push
icebp
fnstcw
inc
in
add
ins
add
pop
aaa
aad
sar
je
repnz
pusha
mov
xchg
sahf
xchg
or
in
push
jle
sbb
push
aad
lods
and
(bad)
fidiv
pop
and
cwde
lods
push
into
cmp
in
inc
add
(bad)
jne
sbb
mov
adc
imul
jbe
xlat
(bad)
arpl
cmp
fldenv
add
sti
bound
sbb
fstp
sahf
int3
xor
jecxz
push
jg
push
xor
and
xchg
sub
inc
xchg
pop
sub
xor
and
dec
mov
xchg
call
mov
scas
mov
inc
xchg
test
xchg
add
jbe
mov
ret
push
add
push
scas
pop
jge
ret
test
scas
mov
pop
fcmovb
lahf
mov
jns
loopne
pop
popf
lods
push
or
fbld
movs
(bad)
arpl
and
jp
push
jb
dec
ds
dec
mov
xchg
lods
daa
push
icebp
pushf
les
stos
(bad)
xchg
jbe
inc
jmp
in
retf
mov
dec
jmp
cwde
inc
sub
pusha
repnz
sub
jge
lahf
sub
mov
adc
mov
(bad)
scas
jae
(bad)
fadd
in
mov
jbe
pop
adc
clc
jle
jmp
inc
mov
retf
xor
test
clc
iret
or
cmp
sbb
mov
aaa
cmp
retf
or
mov
fiadd
adc
inc
pop
push
(bad)
retf
dec
stos
mov
popa
test
into
xchg
das
and
add
and
hlt
repnz
and
or
mov
icebp
popf
nop
data16
in
dec
loopne
(bad)
std
arpl
inc
repz
inc
dec
xchg
inc
pop
addr16
mov
in
mov
sbb
data16
repnz
sbb
in
push
data16
xchg
js
and
jne
pushf
mov
xor
dec
iret
test
out
call
pusha
inc
call
lahf
icebp
pop
mov
sbb
nop
dec
std
retf
dec
jb
loop
pop
cwde
out
pusha
jno
sub
mov
adc
sti
dec
sub
das
inc
loope
fs
push
add
int
(bad)
xchg
pop
mov
imul
je
enter
fidivr
xlat
bnd
scas
imul
xchg
test
nop
xchg
inc
sbb
cld
xchg
in
fdivr
push
repz
rol
std
cs
arpl
lds
fs
in
ret
dec
jle
adc
xlat
popa
add
push
mov
out
jae
inc
sar
push
loop
push
xchg
outs
lock
ins
cld
mov
cmp
dec
jl
sar
xor
add
push
cmp
out
mov
sub
pushf
shl
repz
and
cmp
xchg
mov
adc
cmp
mov
push
jo
mov
fld
retf
push
push
icebp
or
push
inc
lock
xchg
es
or
push
xlat
jmp
jnp
xchg
adc
out
icebp
scas
jae
inc
dec
inc
js
pop
aam
add
ss
add
rol
or
xchg
sub
push
pop
inc
sahf
cmp
xchg
pop
outs
out
sub
sub
repz
outs
fidiv
mov
mov
or
or
add
rcl
dec
lea
sub
add
pop
mov
xor
push
xor
push
(bad)
addr16
sar
mov
sub
inc
mov
int3
jecxz
jmp
dec
push
adc
cmp
add
or
arpl
push
js
sbb
ffreep
push
and
lock
in
stos
dec
add
js
pop
fwait
push
ja
scas
inc
loope
not
les
pop
xchg
or
gs
test
sbb
mov
repz
cdq
mov
push
sub
add
sbb
sub
ins
fiadd
lahf
inc
or
or
shr
movs
mov
mov
ja
rcr
xlat
pop
inc
sbb
jg
scas
rcl
pop
mov
jp
call
push
test
nop
in
dec
pop
xchg
push
xchg
push
ja
retf
inc
ds
mov
mov
imul
jl
stos
adc
sub
ret
sub
push
add
outs
push
mov
aaa
loopne
or
(bad)
xor
dec
in
sub
leave
iret
fcmovne
test
mov
cmps
(bad)
mov
or
dec
mov
xor
push
loope
fwait
jp
pop
mov
or
jge
pop
mov
sub
xchg
movs
sub
in
jb
(bad)
in
mov
out
(bad)
daa
mov
push
cmp
push
movs
movs
es
adc
sahf
(bad)
into
sbb
das
cmp
shl
es
jb
(bad)
or
mov
scas
adc
mov
mov
mov
test
jmp
fwait
cmp
rcr
jg
xor
mov
jb
nop
mov
mov
xor
mov
push
int3
and
sub
xor
clc
dec
fld
popf
sub
add
or
xchg
loope
and
aam
stos
pop
das
rcl
mov
(bad)
pop
pop
(bad)
mov
bound
xlat
dec
pusha
jg
inc
adc
xor
jns
outs
fimul
pop
sahf
add
add
push
cmp
pop
std
add
sbb
out
xlat
retf
inc
arpl
push
fadd
jns
jl
inc
inc
sar
dec
push
retf
jmp
cld
push
adc
jecxz
xor
ja
cli
(bad)
cmp
dec
sbb
imul
vpcmpeqb
or
in
cmp
inc
(bad)
cmp
inc
sbb
xor
(bad)
imul
dec
mov
repnz
pop
mov
cmc
fidivr
inc
fld
cmp
mov
sub
push
sub
retf
test
adc
or
cld
(bad)
push
mov
retf
mov
or
pop
xor
test
scas
or
mov
jbe
ficom
add
and
loope
mov
mov
hlt
sahf
out
call
repz
cmc
lods
stos
in
mov
(bad)
fisttp
js
hlt
cwde
push
call
adc
jge
mov
inc
mov
lahf
jl
bound
int3
cmc
ret
cwde
push
fisub
pop
adc
(bad)
mov
fwait
scas
outs
mov
ficom
add
jge
mov
fsub
jne
mov
mov
pop
jmp
pop
sub
adc
lahf
pop
push
fcmovb
aaa
xchg
push
outs
sbb
js
sbb
add
fimul
test
addr16
sub
lods
jns
daa
pop
lea
sub
ss
add
(bad)
pop
imul
imul
daa
mov
inc
jne
cld
stc
push
adc
call
add
xor
into
int3
pop
push
cmps
loope
push
dec
outs
jno
or
(bad)
jo
mov
test
add
xchg
adc
mov
lods
lahf
pusha
push
inc
or
leave
in
lods
nop
mov
jp
xchg
shr
imul
cmp
mov
jmp
(bad)
icebp
lea
cmps
mov
jmp
mov
sbb
add
pop
cmc
jl
sub
sub
in
dec
mov
pop
sar
clc
dec
inc
jp
add
mov
sub
xchg
loop
pop
imul
dec
int3
ins
stos
inc
jg
test
fcomi
ss
ins
jmp
pop
pusha
lea
pop
cmc
push
imul
push
push
inc
or
mov
movs
out
int
and
pop
mov
sbb
scas
and
pop
mov
jle
test
or
pop
call
in
test
dec
cld
inc
pop
loopne
aam
adc
test
test
stos
cmp
lds
in
mov
inc
mov
mov
add
sub
sbb
inc
jno
gs
pop
xor
xchg
sbb
stos
add
and
fsubr
into
(bad)
fsub
data16
cmc
pop
mov
clc
mov
pop
mov
push
enter
push
sbb
jae
test
adc
stos
inc
cli
push
out
pop
stc
in
fnsave
ins
loope
(bad)
call
imul
xor
inc
mov
shr
push
fdivr
sbb
and
mov
mov
xchg
jl
(bad)
adc
cmp
cs
pop
bnd
out
and
call
inc
and
sar
sbb
lock
ficomp
mov
pop
jmp
sub
dec
and
cmc
outs
aad
imul
mov
stos
push
pop
gs
or
(bad)
pop
je
(bad)
out
inc
repz
add
popf
jne
mov
jl
jmp
mov
jne
push
pusha
xor
(bad)
pop
es
mov
sub
lock
fnsave
add
mov
xchg
jae
loope
sti
cli
pop
and
movs
nop
xor
or
out
rol
pop
and
xor
xchg
pop
call
sub
dec
jmp
lods
cmps
or
jp
jge
movs
cmp
mov
enter
jge
xchg
cs
mov
mov
test
bound
verr
pop
in
dec
mov
mov
or
jmp
xor
gs
and
and
xor
aam
dec
xchg
dec
sub
mov
mov
addr16
mov
sbb
lahf
sub
jecxz
sbb
jbe
cmc
xchg
cmp
xchg
ret
push
pop
inc
adc
loop
test
jb
xchg
jbe
dec
out
(bad)
fnstenv
mov
addr16
int
and
jno
fcmovnbe
mov
inc
dec
rol
add
jl
sub
fnstenv
fimul
retf
xor
frstor
mov
fadd
jno
test
add
mov
data16
jnp
push
cmp
enter
adc
xor
mov
aam
std
xchg
in
mov
jae
sub
enter
pop
shl
xor
pop
and
and
mov
and
aaa
sbb
or
dec
add
(bad)
adc
es
les
dec
push
and
loop
xor
int
(bad)
or
mov
popf
cmp
out
and
pop
(bad)
ret
data16
ins
jmp
mov
mov
aaa
pushf
lds
daa
fidivr
sti
dec
loope
ins
inc
add
(bad)
out
mov
inc
ss
sub
inc
pop
sub
mov
hlt
xlat
sbb
jno
add
dec
fucomip
add
cmp
dec
fistp
mov
fld
and
jle
jo
enter
cmp
dec
mov
jne
cmp
sub
pop
push
mov
sbb
cmovbe
mov
jp
shr
and
mov
push
xchg
mov
sbb
retf
add
push
stos
cwde
ja
xchg
mov
xlat
shl
fimul
cmp
ins
loopne
stc
add
cmp
cmp
jbe
(bad)
mov
imul
dec
push
loop
add
sbb
pop
out
adc
sahf
mov
fisub
adc
lods
jo
xor
xor
sub
test
cmp
inc
call
or
pop
dec
mov
js
dec
das
rcr
and
out
lea
pop
nop
or
dec
pop
aas
mov
inc
or
cwde
push
cmp
mov
jmp
shl
mov
mov
mov
add
jae
pop
add
inc
pop
or
jmp
adc
xchg
cmps
jns
mov
ins
fwait
mov
int
sub
data16
out
inc
mov
stos
add
jecxz
adc
in
xchg
mov
push
fwait
pop
(bad)
movs
jae
dec
cmp
sub
mov
mov
enter
pop
bound
es
movs
jge
sti
xor
jle
mov
hlt
and
xchg
rcl
fisttp
inc
push
jb
(bad)
push
cwde
clc
in
xchg
scas
int3
ds
sub
mov
mov
ror
sbb
(bad)
outs
mov
mov
(bad)
je
jl
lahf
loope
in
sti
jne
xchg
mov
xchg
jne
test
cmp
daa
adc
jne
add
fmul
mov
xchg
push
xor
mov
sub
ret
push
pop
push
icebp
jb
daa
iret
and
shr
dec
fs
imul
and
push
add
shl
jnp
(bad)
xchg
or
in
inc
lods
sub
pop
adc
mov
mov
mov
and
leave
and
lods
pop
ror
inc
xchg
mov
mov
jo
out
xchg
cmp
mov
(bad)
icebp
jmp
sub
fsub
std
dec
test
test
rol
add
or
or
sti
cmp
aam
push
pop
push
in
xor
pop
icebp
jno
inc
data16
sub
fsubr
sub
mov
xchg
push
xchg
pushf
adc
push
ret
fdiv
dec
fsub
fst
(bad)
int3
pushf
sbb
cli
mov
xchg
in
xchg
(bad)
sbb
push
fstp
xchg
jmp
fadd
mov
(bad)
pop
enter
fcom
mov
pop
mov
popa
and
dec
ss
or
sar
les
pop
(bad)
sbb
cmp
jmp
push
sbb
jnp
cmps
mov
daa
pushf
sbb
loopne
in
inc
pop
rol
push
sbb
push
pushf
add
jb
ins
push
call
aas
jb
lock
cs
cmp
push
add
mov
cmp
mov
mov
dec
jb
aam
jno
ror
push
push
gs
xchg
and
cwde
mov
push
adc
(bad)
mov
outs
je
sti
jne
sbb
ins
ins
mov
div
push
je
adc
cwde
outs
cmc
or
mov
mov
test
adc
push
xor
arpl
adc
jb
cld
xchg
or
ret
rcr
mov
rcl
mov
loop
push
inc
cmc
les
popa
popa
jbe
xchg
jns
(bad)
pop
jle
sti
fimul
clc
and
imul
mov
(bad)
out
push
mov
cld
push
jae
dec
and
and
icebp
xor
sbb
add
xchg
xor
(bad)
cs
aam
scas
(bad)
fistp
xchg
fld
or
adc
loope
cmp
xor
or
(bad)
scas
sub
(bad)
mov
adc
jnp
fs
cmp
pop
test
div
and
jb
in
cmp
dec
mov
or
cmp
sti
(bad)
mov
mov
test
or
js
adc
inc
and
pop
retf
cmp
icebp
out
cli
nop
fstp
in
pop
mov
mov
test
je
ins
and
int
lock
dec
loop
out
inc
or
cwde
xor
inc
xchg
push
inc
sub
xor
inc
fldcw
les
fsub
pusha
sub
dec
dec
add
inc
mov
pop
pop
stos
outs
inc
fdiv
outs
lds
(bad)
fcmovne
cmp
rcr
std
push
and
xor
ja
lock
loope
mov
push
add
pop
into
inc
outs
sar
jb
loop
retf
push
cmps
(bad)
lods
es
leave
xor
mov
pop
shr
clc
mov
push
aaa
imul
sar
(bad)
push
mov
repnz
in
pop
add
fisttp
sub
movs
sub
movs
cmp
mov
imul
jmp
imul
ret
xchg
ins
sbb
icebp
xor
mov
adc
mov
div
push
mov
push
sub
movs
mov
xchg
movs
or
lods
sar
xlat
sub
sti
cmp
bound
mov
outs
lea
cdq
test
scas
cmp
addr16
lds
sbb
outs
dec
cld
mov
mov
xchg
fsubr
mov
ss
stos
test
sub
daa
mov
xchg
movs
stc
dec
ja
adc
fdiv
mov
scas
les
cmove
jns
(bad)
xor
xor
jae
mov
movs
jo
ret
sbb
jmp
pop
inc
jecxz
inc
(bad)
pop
call
mov
out
push
fild
pop
cli
enter
shl
iret
dec
mov
jne
pop
jo
inc
imul
jne
pop
repz
ret
or
sub
jl
xor
(bad)
push
sub
dec
stos
and
push
sbb
(bad)
xchg
adc
add
leave
pop
stos
inc
and
sub
jg
test
iret
lahf
pop
xor
mov
iret
sbb
rcr
pushf
icebp
push
test
shl
sti
and
pop
lea
and
jmp
push
retf
pushf
test
jmp
into
adc
xchg
xchg
je
mov
stc
test
mov
inc
popf
jmp
in
cmp
(bad)
repnz
js
mov
ret
jmp
lds
(bad)
mov
push
repz
or
adc
xchg
(bad)
movs
mov
or
lods
push
sub
or
push
int3
mov
scas
mov
clc
mov
dec
scas
loop
add
(bad)
sar
inc
pop
into
xor
arpl
cmp
call
out
mov
inc
add
pop
inc
and
popf
xlat
(bad)
(bad)
out
mov
inc
sub
jle
imul
xlat
sar
jne
imul
cwde
test
dec
js
lods
loop
test
shr
mov
mov
pop
out
pop
adc
push
fsubr
shr
cmp
mov
or
pop
stos
(bad)
je
inc
or
lods
cmps
push
dec
mov
push
mov
cmc
jne
lods
mov
js
add
xchg
push
mov
add
enter
aam
fwait
push
out
ins
(bad)
mov
dec
jl
add
dec
fidivr
jb
out
test
inc
pop
in
jnp
ins
fnstsw
ins
mov
push
fsubrp
cmp
jb
call
repnz
mov
stos
add
loope
cmps
push
sub
adc
out
jp
test
add
in
imul
loopne
arpl
push
mov
jge
adc
mov
cmp
jne
lahf
push
enter
add
xchg
or
jno
in
pop
rcpps
vxorpd
call
sub
(bad)
dec
mov
inc
push
fbstp
inc
cmc
dec
rol
mov
out
adc
dec
sti
pushf
inc
aam
das
dec
test
fadd
fucompp
dec
sbb
inc
pop
push
stos
jecxz
pop
and
enter
jmp
cmp
mov
daa
mov
dec
jl
sbb
call
and
xchg
mov
ds
cmps
xchg
xchg
retf
or
inc
xchg
inc
mov
sub
pop
push
std
push
sub
in
and
fbld
mov
xchg
lea
mov
stos
call
or
sub
mov
mov
(bad)
xchg
sti
test
push
pop
fs
push
hlt
scas
inc
enter
xchg
sub
pop
aam
adc
repnz
add
test
mov
int
add
jg
mov
ins
push
push
int
icebp
je
imul
add
stos
jge
jmp
pop
dec
ffree
xor
mov
mov
xchg
arpl
ficomp
inc
imul
popa
xchg
dec
sub
dec
cmp
sbb
pop
cmp
pop
cli
jo
cmps
mov
loope
inc
pop
jle
in
adc
mov
mov
mov
mov
popf
out
call
jno
inc
or
jmp
in
fldcw
jmp
call
adc
inc
inc
pop
into
ret
mov
adc
cmp
jae
stc
inc
das
pop
popa
dec
adc
sti
mov
xchg
scas
or
mov
add
push
lock
ins
imul
add
aam
in
sti
pop
fs
rol
push
int
iret
adc
(bad)
mov
sbb
sbb
je
arpl
fild
push
js
push
mov
mov
mov
push
popf
out
jmp
add
popf
cwde
out
push
dec
mov
mov
inc
mov
push
fadd
jmp
popf
sub
test
pop
rol
mov
leave
and
nop
cs
xchg
xor
neg
enter
push
pop
jno
xchg
in
adc
xchg
push
jae
mov
add
sub
pop
rcr
mov
jge
mov
add
pop
sbb
mov
mov
sbb
inc
xchg
xor
retf
shl
ds
lods
push
(bad)
loope
into
and
jmp
sti
pop
and
push
shr
ret
mov
sub
push
jb
sub
leave
mov
loope
popa
xor
pop
xchg
push
mov
jle
call
(bad)
jle
cmp
fwait
and
pop
push
dec
push
lahf
or
adc
xor
and
inc
rcr
mov
fmul
pop
hlt
dec
movs
cwde
imul
shl
cmp
add
int3
sbb
ins
call
sub
dec
jmp
fucom
sti
mov
mov
dec
or
pop
mov
sbb
mov
dec
loop
call
movs
sbb
and
jecxz
(bad)
fnstcw
add
sub
iret
xor
xor
sub
xchg
addr16
mov
mov
loope
xchg
jl
jmp
idiv
adc
gs
and
mov
cmps
add
cld
aas
mov
(bad)
mov
stc
popa
loopne
and
lea
jb
pop
lods
mov
aaa
in
mov
xor
cmp
retf
jmp
dec
and
lds
pop
mov
dec
push
push
popf
shr
imul
pop
stos
mov
inc
add
push
jb
rcl
xor
dec
lea
iret
out
mov
cld
pop
xlat
mov
push
mov
test
popf
movs
test
movs
mov
or
push
inc
inc
adc
data16
adc
push
xor
sbb
dec
sub
cmp
add
popf
aaa
rcr
or
cmps
imul
cmp
cli
sahf
inc
and
add
test
aad
jo
not
aaa
daa
movs
dec
stc
pop
and
pusha
push
outs
sbb
adc
adc
pop
loop
and
mov
inc
cmp
push
or
int
popf
movs
test
out
dec
mov
or
mov
addr16
imul
sti
push
inc
pushf
int
pop
mov
rol
loope
or
les
push
aam
inc
popa
dec
and
and
mov
sub
cmp
std
lods
mov
cmp
test
stc
in
jb
jl
fs
fisubr
arpl
dec
push
pop
push
push
aad
enter
fld
and
arpl
sub
adc
mov
cmp
lock
xor
jecxz
ficom
movs
inc
jg
pop
mov
xor
in
or
sti
adc
fmul
sub
xor
fisttp
cwde
push
data16
je
sbb
outs
(bad)
in
jge
jmp
xchg
lods
loop
jno
arpl
xor
test
ror
push
and
int3
pop
ins
loopne
jmp
in
pop
fst
sbb
stos
mov
leave
jae
xor
add
rol
and
adc
push
gs
sbb
pushf
mov
test
sbb
sti
iret
out
ins
ja
jbe
scas
sbb
dec
xor
pop
or
(bad)
adc
push
pop
cmp
adc
repnz
pop
fsubr
or
jge
or
idiv
and
loop
dec
add
mov
adc
adc
js
jne
stc
movs
mov
mov
mov
jne
cmc
data16
or
jo
jb
mov
sti
int3
jo
stc
sbb
pop
mov
mov
cdq
repz
add
cli
add
out
push
gs
mov
xlat
(bad)
daa
add
sub
popf
stos
dec
dec
sbb
mov
sub
out
adc
jl
adc
addr16
fst
xor
sbb
push
aad
xor
fsubr
cdq
lods
mov
cmp
mov
xlat
adc
push
xchg
mov
imul
pop
lea
in
adc
lods
repnz
and
push
fnstenv
fadd
jbe
sbb
lea
icebp
adc
sub
out
sub
bound
in
mov
or
dec
sete
and
out
push
cmps
out
loope
fs
sahf
call
mov
push
adc
sub
adc
dec
sub
xor
sbb
adc
mov
ficom
jmp
icebp
pop
cmp
adc
xchg
push
xor
rcr
icebp
mov
cdq
add
push
in
add
pop
dec
adc
hlt
adc
xchg
inc
pop
out
ret
jno
addr16
(bad)
jns
shl
adc
jle
das
xchg
sar
loopne
aam
daa
pop
cmp
fs
xchg
inc
dec
push
pop
stc
jecxz
adc
or
or
retf
ret
dec
(bad)
shl
clc
push
stc
sti
mov
sbb
shl
pop
fdiv
mov
cmp
mov
rcr
jl
jnp
enter
push
add
add
pop
ins
mov
inc
out
retf
mov
je
retf
js
scas
cmp
rcr
retf
jne
imul
retf
and
sbb
sar
pop
xor
(bad)
repz
lea
push
xorps
mov
jmp
adc
jb
adc
sbb
imul
inc
retf
inc
shr
dec
or
jmp
dec
push
pushf
inc
imul
mov
test
sub
jne
or
ss
cmp
pop
sbb
clc
mov
or
sub
adc
jns
sahf
jb
int3
and
mov
or
push
pop
mov
imul
test
cmp
fidivr
or
push
pop
push
ins
mov
jb
jo
mov
jl
daa
xchg
sbb
test
fld
or
loopne
xchg
loopne
xor
sub
sti
or
lds
out
lods
mov
out
push
enter
lods
cmps
in
loope
icebp
lldt
push
pop
mov
pop
clc
push
test
and
dec
xchg
xchg
add
mov
push
test
fcmovu
mov
push
ja
cmps
fist
and
or
pop
jb
and
pushf
js
lea
test
xchg
inc
mov
xchg
data16
push
(bad)
fisubr
cmp
push
push
leave
not
movs
cs
call
jo
mov
add
mov
out
sbb
mov
or
ja
mul
popa
test
xor
out
xlat
and
js
nop
mov
xlat
or
sti
maxps
xchg
xchg
add
jno
adc
(bad)
cmp
mov
aaa
(bad)
mov
fwait
sahf
in
ret
adc
add
dec
mov
xchg
mov
and
leave
stc
cld
cmp
cmp
adc
stc
lds
mov
cs
out
in
movs
dec
xor
push
inc
sbb
inc
gs
repnz
sbb
cmp
pop
ja
push
push
cwde
ss
push
sub
pop
mov
inc
ss
push
sbb
scas
xlat
dec
xchg
mov
mov
ja
nop
fsubr
in
mov
xor
mov
adc
pop
cwde
dec
mov
scas
push
push
inc
imul
inc
mov
cmp
(bad)
jle
adc
in
pop
mov
stos
mov
addr16
cmp
jbe
sub
sub
mov
push
(bad)
test
push
cmp
popf
xchg
cmp
jne
cli
ja
outs
cmp
sbb
jl
fs
ds
or
call
pusha
mov
mov
xchg
adc
jle
(bad)
cmps
call
jns
lods
inc
pop
xor
xchg
xchg
stos
fidiv
jle
lods
sbb
scas
fsubr
gs
inc
jb
je
push
pop
fimul
cld
std
mov
pop
jae
bound
jb
gs
lods
ss
(bad)
jnp
cli
inc
pusha
xchg
sbb
das
sbb
sbb
push
sbb
pop
cmp
stos
or
loopne
int3
add
push
loopne
cs
out
or
stos
and
xchg
movs
(bad)
(bad)
add
xor
(bad)
push
cs
es
sub
(bad)
repnz
mov
nop
jbe
jge
adc
cmp
push
push
inc
mov
in
inc
sub
cmp
ffreep
movs
fst
mov
xchg
sahf
mov
call
push
fs
push
xor
in
xlat
and
pop
lds
movs
inc
push
call
pop
jnp
and
fiadd
into
jmp
add
sbb
dec
mov
shl
outs
fnstcw
in
sti
vpcmpgtd
test
or
arpl
and
pop
aad
cdq
into
mov
fnstsw
cmp
inc
out
dec
ins
mov
sbb
dec
loope
jns
jmp
xor
cmps
cld
sti
dec
dec
movs
jp
aas
scas
xor
into
mov
jle
sbb
mov
and
mov
sub
mov
fdiv
std
movs
jl
fisubr
pop
inc
or
movs
mov
cmc
repnz
xchg
(bad)
aam
mov
test
test
mov
xchg
sub
adc
shl
pop
(bad)
or
je
fisubr
mov
dec
xor
mov
aam
test
sahf
push
cmc
imul
rol
mov
dec
sub
sbb
lock
out
les
xchg
xor
dec
add
sbb
aad
pop
push
jmp
aas
inc
xchg
(bad)
or
or
sub
js
ret
aas
xor
retf
imul
in
xchg
lds
pop
xchg
bound
inc
xchg
js
fcmove
int
pop
xchg
push
mov
xor
out
lods
fst
add
cmp
dec
inc
add
jbe
adc
adc
add
std
aad
lods
in
cdq
bound
xchg
jmp
(bad)
rol
lock
inc
pop
test
cmp
pop
jmp
sti
jg
sbb
pop
rcr
jbe
mov
test
cmp
inc
push
dec
inc
or
mov
jecxz
mov
(bad)
pop
enter
inc
pop
pusha
lea
mov
mov
sbb
or
xor
adc
sbb
leave
stos
dec
mov
xchg
scas
push
pusha
(bad)
enter
clc
(bad)
aaa
ffreep
xchg
out
jecxz
add
mov
js
mov
daa
and
xor
fistp
mov
call
pop
mov
pop
sbb
fstp
cli
dec
fbstp
sbb
fimul
add
repnz
push
sub
pop
xor
cmp
sub
and
jb
(bad)
(bad)
ja
jmp
ficomp
add
and
popa
mov
dec
xor
xchg
jge
imul
mov
fnstcw
push
adc
icebp
pop
mov
stos
jae
cmp
icebp
scas
sbb
ins
sub
push
int3
xchg
leave
adc
adc
lds
fisttp
leave
xchg
test
stos
ret
inc
cmp
cmps
mov
push
mov
and
(bad)
data16
jmp
mov
push
mov
out
add
out
mov
mov
push
xchg
shl
into
in
push
test
stos
int3
pushf
mov
add
sub
and
push
fidivr
mov
xor
inc
lock
fwait
adc
mov
sub
adc
call
mov
test
sbb
cli
mov
repz
popf
xor
sub
sub
in
cmp
inc
dec
mov
cdq
aad
add
mov
push
jecxz
inc
scas
mov
cmp
gs
add
out
jbe
xchg
add
pop
pop
fdivr
or
inc
push
jl
mov
and
sbb
xor
sbb
mov
jnp
sbb
call
hlt
icebp
ret
mov
ret
shr
push
jo
test
xor
pop
outs
stos
aaa
xchg
pushf
inc
xchg
test
mov
hlt
(bad)
test
push
add
mov
jae
sahf
pop
std
pop
sub
in
or
neg
mov
jnp
cmp
mov
adc
inc
lods
sbb
jle
int
xor
imul
fidivr
bound
fwait
dec
mul
scas
test
push
jmp
mov
and
mov
inc
mov
test
leave
xchg
cmps
pop
pop
test
call
pushf
mov
loope
lahf
daa
test
stos
push
test
fucom
inc
lods
rcl
shr
mov
xor
add
add
sub
hlt
mov
add
pop
and
cmp
and
inc
and
adc
sub
lds
sub
mov
punpckldq
es
lock
dec
dec
jp
adc
aam
cmp
jns
xor
pop
ret
sbb
int3
sti
add
rcr
fisub
fs
shr
cld
xchg
(bad)
add
mov
es
adc
shr
push
inc
mul
lods
cmc
std
xor
dec
sbb
rol
aaa
adc
pop
push
xchg
aam
in
sub
int
out
sbb
mov
push
rol
rol
mov
xor
cmc
lahf
fs
and
xchg
xchg
or
dec
ror
fist
and
aam
imul
pop
rol
rcr
mov
bound
fdiv
arpl
jge
push
jge
push
rcr
jo
xor
pushf
(bad)
sbb
push
pusha
add
test
jbe
add
mov
sbb
pop
pop
je
push
pop
pop
jae
dec
rcl
xor
das
mov
pop
fwait
sbb
mov
inc
sbb
daa
sbb
add
mov
cdq
or
push
scas
cmp
ret
movs
imul
dec
or
adc
xchg
pop
mov
push
pop
adc
and
cmp
dec
xor
repz
sbb
enter
aam
call
iret
or
xor
cmp
cmp
inc
les
lock
push
inc
out
bound
(bad)
jecxz
ror
dec
outs
pop
or
add
bndldx
stc
rcl
dec
add
ja
pop
gs
jl
xor
test
xor
enter
pop
lock
sbb
jg
mov
mov
or
add
mov
(bad)
loop
nop
leave
cmc
jp
imul
inc
xor
sub
dec
test
imul
cdq
out
sub
ds
cli
sti
loopne
fidivr
inc
add
hlt
mul
(bad)
sub
or
jo
imul
std
jae
mov
retf
mov
leave
cld
add
mov
xor
enter
cmp
cwde
pop
jp
jo
enter
imul
imul
pop
repnz
cwde
adc
scas
movs
mov
pop
mov
add
dec
fbld
inc
jle
dec
sbb
jo
stos
fidivr
out
int
movs
nop
loopne
jle
leave
xchg
xor
mov
repnz
and
cmp
cmp
stc
mov
jp
ss
test
addr16
fidivr
repz
mov
clc
cdq
rol
adc
shl
(bad)
pop
int3
stos
cld
mov
inc
push
stos
sbb
addr16
icebp
fld
or
ds
inc
fstp
jle
mov
in
sbb
jge
scas
adc
mov
cmc
mov
(bad)
call
enter
add
retf
repz
lods
arpl
repnz
outs
dec
push
xor
adc
ror
dec
cli
sar
movs
pop
mov
test
xchg
(bad)
dec
cmp
cmp
cmp
lahf
(bad)
push
add
xchg
mov
and
ja
mov
cs
bound
stos
adc
(bad)
pop
jl
cmp
repz
cs
aaa
xlat
pushf
movs
push
cmp
and
lock
inc
jo
sbb
in
add
jle
and
sbb
dec
lea
stos
sar
xor
cmp
jge
(bad)
loopne
jg
js
out
cwde
movs
adc
or
pop
and
cmp
dec
ins
test
test
sub
popa
(bad)
enter
jno
add
adc
std
add
xor
(bad)
test
and
test
cmp
fwait
jb
xor
sub
call
inc
in
and
and
add
ins
cld
or
mov
and
shl
in
sbb
xchg
imul
mov
sar
fucomip
mov
daa
fsub
add
adc
xchg
mov
stc
fmul
mov
imul
lea
retf
add
loopne
(bad)
ret
or
sti
movs
adc
out
into
lods
xchg
jl
test
xchg
ret
(bad)
aas
pop
gs
sub
test
mov
jp
out
xchg
lods
mov
enter
adc
rcr
and
je
pop
fwait
shl
dec
cmp
popf
fs
cwde
(bad)
xchg
jmp
lahf
jo
xor
dec
xor
sbb
ficom
xchg
xchg
repz
outs
and
sbb
enter
fwait
sbb
es
stc
cld
jmp
and
add
into
pop
and
fcomp
loop
jge
lds
mov
mov
mov
cmps
dec
cmp
sbb
mov
aad
rol
in
xchg
loope
mov
xor
test
cli
mov
loop
(bad)
ror
(bad)
outs
sub
out
xor
push
sbb
sti
in
ds
sar
mov
(bad)
ins
dec
std
inc
or
sbb
inc
push
cmp
push
push
ficom
stos
xor
leave
dec
jmp
cmp
adc
in
add
lods
(bad)
jge
addr16
mov
push
test
bound
inc
jmp
jns
or
fmul
inc
sahf
pop
add
pop
or
(bad)
popa
lods
adc
pop
xor
xor
stos
or
pop
dec
imul
retf
loopne
das
lods
cmc
mov
dec
and
adc
xor
push
sub
cli
mov
add
add
int
cmp
sub
cmp
sbb
xchg
cwde
adc
test
mov
push
xor
add
and
les
mov
call
inc
stc
push
push
imul
inc
loope
adc
xchg
stos
mov
scas
mov
inc
icebp
jecxz
call
or
call
repz
int
jne
cmp
clc
xchg
adc
push
xor
test
add
mov
add
jmp
add
jbe
loop
std
fst
sub
mov
or
add
lods
inc
outs
cmp
cmp
xchg
mov
ret
aam
sub
sub
in
in
out
cmp
and
test
(bad)
adc
(bad)
and
and
xchg
ror
or
fadd
pop
bnd
cli
scas
dec
call
leave
das
out
nop
cmp
std
push
and
mov
mov
xlat
pop
sub
push
jg
inc
push
add
push
cdq
mov
(bad)
stos
shl
aam
repz
sahf
add
xchg
call
and
movs
ins
cmp
cmc
add
mov
in
fisubr
cmp
movs
(bad)
js
inc
sub
stc
mov
out
fnsave
or
int
into
mov
mov
stos
shr
push
xlat
in
inc
pop
icebp
sahf
jbe
xlat
and
lds
gs
mov
aam
jp
mov
push
pop
popa
ins
dec
mov
and
dec
push
in
(bad)
out
retf
mov
ds
mov
out
inc
(bad)
fld
sbb
push
add
addr16
aam
jge
sub
cmc
xchg
xchg
jp
ficomp
fld
test
push
rol
retf
pop
pop
pusha
shr
mov
(bad)
sbb
cmp
add
adc
sbb
je
pop
mov
imul
xchg
out
icebp
pop
sbb
and
loopne
pop
cmp
and
in
movs
mul
jns
addr16
xchg
mov
sub
lea
aas
or
loop
add
sar
adc
movs
or
or
xchg
push
pop
jle
pop
jge
add
cmp
mov
push
inc
mov
mov
stos
xor
mov
call
or
inc
lock
adc
dec
faddp
movs
lods
retf
and
or
xchg
fwait
sbb
pop
outs
mov
push
cmp
xchg
into
std
dec
pop
call
fcmovnu
jecxz
cmp
imul
mov
xor
mov
jg
push
jmp
mov
sbb
inc
sub
dec
neg
jecxz
adc
das
std
pop
mov
leave
adc
popf
dec
cmp
js
dec
jge
fistp
sub
clc
mov
mov
outs
xchg
retf
ror
jl
pop
int
icebp
in
inc
gs
push
test
sbb
mov
xor
jb
shl
arpl
or
pop
call
or
into
icebp
cmp
cmps
clc
and
add
imul
repnz
xor
in
and
mov
js
adc
(bad)
daa
movs
mov
je
or
repnz
jo
call
retf
jnp
shl
adc
push
test
fwait
xchg
sar
adc
mov
imul
into
retf
adc
mov
das
jae
call
cmps
sub
cmps
fldl2t
das
cli
or
stos
xor
jecxz
or
adc
mov
pop
sbb
pop
xor
es
ja
popf
sub
fidiv
lahf
inc
movs
jp
movs
or
jg
and
into
icebp
ja
sub
test
lock
push
pop
and
(bad)
inc
jp
es
out
mov
stc
jns
lods
in
inc
gs
cwde
inc
pop
(bad)
int
push
int
xchg
xchg
(bad)
outs
jg
push
leave
adc
movs
ins
scas
mov
outs
add
iret
cdq
fsubr
or
jns
popa
xlat
scas
jg
cmp
cld
pop
jno
pop
or
inc
iret
xchg
cmp
imul
mov
aas
cmp
outs
aaa
pop
nop
movs
push
aaa
clc
push
scas
in
push
push
cmp
jecxz
sub
movs
jp
jno
add
retf
mov
mov
stc
xchg
lahf
cdq
cmps
push
mov
hlt
and
sub
jge
xchg
ja
inc
sub
push
cmp
movs
jmp
shl
stc
(bad)
mov
jmp
mov
ins
mov
popa
scas
sbb
in
fmul
je
dec
div
enter
sbb
pop
push
xchg
inc
dec
jne
mov
std
cli
push
dec
(bad)
push
mov
das
adc
(bad)
xor
cmp
scas
push
mov
pop
mov
or
out
xor
call
mov
cwde
mov
mov
ret
ret
sti
fwait
mov
imul
scas
mov
xchg
aaa
inc
jne
push
lods
and
adc
dec
call
out
push
pushf
add
sbb
data16
popf
pop
sub
inc
sub
inc
in
ror
pop
loopne
pushf
inc
cmp
(bad)
sbb
pop
mov
cwde
sti
sti
xor
into
stos
or
lods
into
les
(bad)
out
shl
fwait
push
ret
cdq
sbb
mov
stos
mov
pushf
and
dec
or
mov
sbb
mov
call
xor
scas
xchg
sub
(bad)
jg
mov
gs
jg
add
test
ror
ss
cmp
mov
icebp
outs
dec
or
jns
in
dec
in
xchg
mov
or
xchg
hlt
push
call
sbb
mov
cld
je
(bad)
cmc
lea
(bad)
sti
and
push
ficom
ss
icebp
jecxz
mov
sti
dec
stos
xlat
jae
sub
jns
pushf
cld
in
retf
movs
mov
adc
jnp
dec
jmp
daa
push
(bad)
jmp
call
adc
scas
xchg
cmp
xor
cs
repnz
dec
(bad)
clc
or
adc
sbb
pop
mov
jnp
cmc
xlat
mov
imul
cmp
call
sar
cmps
adc
push
gs
adc
pop
adc
add
addr16
fisubr
ret
jge
xchg
mov
out
scas
fist
pop
jp
mov
mov
fmul
and
pop
int
xchg
in
mov
pusha
fbld
inc
xchg
fisttp
enter
shl
and
adc
jno
lds
or
mov
xchg
cmp
lds
inc
cdq
call
xchg
add
addr16
xor
outs
jnp
xor
imul
adc
icebp
pusha
and
in
cmc
sub
push
mov
ss
repnz
enter
or
add
stos
dec
idiv
and
jg
xchg
adc
mov
dec
push
and
mov
daa
jle
out
add
push
mov
(bad)
and
retf
jns
push
cmp
lods
ret
xchg
cdq
outs
test
test
pop
xchg
sub
out
es
fcom
rcr
aaa
xchg
add
loopne
fsub
repnz
add
push
jo
test
mov
mov
retf
sub
pop
pop
pop
inc
mov
mov
addr16
xchg
sti
sbb
jg
dec
fist
repz
mov
add
mov
aam
call
add
push
jmp
pop
and
cs
jae
lods
out
retf
int
popa
ja
adc
jnp
mov
rcl
(bad)
unpcklps
into
pop
sbb
mov
movs
stos
arpl
dec
sbb
int
sbb
ss
sbb
xchg
mov
sbb
cmps
mov
adc
jle
adc
stos
mov
cmp
sub
adc
pushw
cld
or
mov
pop
inc
hlt
in
sbb
fnsave
cld
jle
mov
mov
xor
pop
mov
add
pop
mov
sub
adc
add
sbb
movs
push
(bad)
jmp
sub
adc
push
inc
outs
or
stos
xchg
xchg
test
xchg
mov
cwde
fimul
push
pushf
cmp
inc
nop
sbb
jb
or
les
add
mov
sbb
pop
sub
xor
std
(bad)
nop
jmp
mov
adc
arpl
add
movs
mov
cli
ror
bound
outs
xchg
cld
push
mov
dec
retf
bts
xor
mov
cmp
lahf
clc
call
pop
bound
pop
stos
stc
and
inc
retf
in
push
pop
mov
adc
scas
mov
mov
cmp
cmp
xchg
cmp
mov
mov
ss
pop
dec
add
popa
iret
fcmovne
jo
imul
test
cwde
bnd
cli
xchg
push
sbb
(bad)
sti
mov
in
ds
movs
lods
push
out
pop
adc
ja
fwait
push
pop
nop
das
dec
fistp
dec
push
mov
sar
add
jp
mov
jmp
sbb
jne
xchg
xchg
push
xchg
test
add
mov
test
add
mov
nop
ret
push
mov
(bad)
inc
bound
in
bound
sbb
and
xlat
ficom
jecxz
cmp
xchg
adc
lahf
xchg
add
add
xchg
inc
fistp
push
lods
xchg
adc
jne
scas
lds
cmc
ficomp
and
mov
mov
pop
jecxz
dec
pushf
add
ins
shl
(bad)
and
scas
addr16
retf
popf
jnp
addr16
pushf
imul
jno
and
cdq
std
sub
call
pushf
jge
mov
dec
iret
pop
jbe
adc
or
jae
sar
jl
jns
cdq
stos
data16
pushf
jns
jg
or
inc
jmp
mov
imul
jbe
out
outs
inc
js
int
(bad)
scas
push
fcom
mov
sub
hlt
mov
cmps
push
mov
test
jmp
js
(bad)
dec
xlat
sub
xor
(bad)
jno
fild
nop
or
cmps
ss
(bad)
sub
popf
int3
xchg
jecxz
sti
(bad)
mov
pusha
and
sbb
in
scas
stos
jne
cmp
idiv
(bad)
and
xchg
pop
mov
int3
in
(bad)
push
ds
cs
mov
jge
or
outs
(bad)
(bad)
mov
cmp
mov
jo
sub
sti
push
ds
add
fnstenv
fnstenv
cmp
jmp
pusha
jnp
clc
mov
xchg
adc
cwde
out
fwait
mov
dec
pminsw
(bad)
out
pop
cmp
pmulhuw
mov
stos
jns
outs
jnp
popf
xchg
cmp
out
cmc
ins
pop
xor
dec
pushf
adc
es
pop
fisub
sbb
mov
sub
mov
sub
pop
dec
mov
jmp
jno
adc
ss
lock
cld
int3
jne
and
int3
mov
ror
fwait
add
jl
push
mov
out
xchg
dec
xor
scas
xchg
stos
leave
adc
cwde
dec
(bad)
std
imul
call
inc
inc
sbb
or
das
cmp
mov
xchg
(bad)
dec
ficom
ret
xchg
adc
pop
ret
jb
mov
out
dec
adc
mov
xor
or
jmp
shl
mov
xor
js
clc
pusha
mov
jecxz
dec
mov
inc
inc
iret
pop
inc
ins
mov
stos
mov
inc
test
push
das
sbb
mov
hlt
test
fmul
jmp
aas
loopne
in
cld
cmps
retf
pushf
cmp
mov
push
data16
mov
sub
rcl
imul
sbb
pop
mov
popa
repz
dec
xchg
add
mov
mov
inc
mov
cmp
dec
sbb
mov
cdq
or
loope
xchg
ja
push
pop
sub
cmc
and
icebp
and
push
aaa
or
ret
or
sbb
fcomip
adc
mov
int3
sub
inc
push
pop
pop
or
jb
or
sbb
fdiv
or
loopne
or
dec
pop
std
rcl
js
and
xchg
data16
sub
(bad)
bound
dec
and
sub
shl
push
push
adc
pop
lods
sbb
addr16
mov
mov
pusha
gs
pop
cli
rdpmc
into
jmp
loope
mov
push
mov
aaa
ss
test
jmp
jecxz
xorps
sub
shl
cmp
sub
loop
and
inc
mov
push
in
jmp
cmp
push
int
adc
dec
test
or
pop
or
sbb
int3
fnstcw
test
cmp
fstp
outs
gs
jg
push
cmps
paddq
pop
push
cmps
loope
pushf
dec
cwde
std
daa
jge
das
std
aad
xchg
not
rcl
cmps
rol
scas
adc
not
nop
aaa
jmp
pop
sub
loopne
add
es
cmp
sahf
gs
pop
xchg
les
fwait
cwde
(bad)
jg
aas
lock
xor
or
shl
push
clc
sub
or
mov
fcmovnb
xchg
adc
push
xchg
mov
mov
not
cs
jb
mov
mov
push
jmp
ficomp
mov
push
and
into
mov
gs
cmps
movs
mov
pop
ins
ja
cld
stos
mov
mov
push
cmp
test
pop
push
push
cmps
in
into
ins
xchg
sub
pop
scas
sub
clc
xchg
adc
fldenv
mov
movs
jns
or
cdq
daa
push
jne
xor
inc
push
sbb
xchg
ja
or
lods
pop
and
pushf
jo
retf
sbb
add
cld
addr16
mov
jmp
mov
je
push
jbe
repnz
aas
and
aam
inc
sub
(bad)
(bad)
mov
fs
leave
inc
clc
mov
imul
fcom
cmp
jno
xor
and
inc
popw
xchg
(bad)
fistp
xlat
cwde
(bad)
aam
in
xchg
in
adc
jle
cmp
pop
(bad)
push
fnsave
test
mov
cmp
cwde
jne
mov
push
push
popf
imul
mov
loop
mov
add
adc
fld
lahf
aad
and
fnstcw
xchg
loopne
lea
cld
xchg
cmps
fcmovnb
ins
sub
addr16
mov
outs
mov
pop
adc
popf
call
inc
(bad)
in
(bad)
mov
mov
jno
pop
js
retf
daa
pop
sbb
pop
adc
mov
pop
cmp
stc
jno
dec
mov
push
or
test
or
mov
xor
add
jae
mul
dec
ins
jo
stos
lods
or
mov
outs
popa
push
push
call
scas
jge
fyl2xp1
ins
outs
sbb
fs
push
add
dec
in
jne
lds
mov
push
int3
and
repnz
jle
sbb
(bad)
lods
out
retf
dec
jge
cwde
inc
int3
push
es
shl
xchg
into
aam
push
jmp
add
cmp
mov
out
imul
jo
xchg
call
fwait
cmp
jmp
retf
pop
pop
movs
stc
ds
cmp
ret
hlt
inc
fisttp
pop
cmp
cmp
jg
(bad)
pop
jge
or
cli
pop
clc
retf
mov
mov
je
jl
std
jbe
cwde
enter
and
dec
adc
hlt
inc
sbb
lock
adc
jb
sub
int
inc
adc
ss
jmp
jmp
fsubp
jmp
movs
in
es
mov
aad
cs
mov
in
test
scas
and
add
clc
sbb
push
(bad)
jae
jge
pop
pop
jns
xchg
push
add
cmp
lods
and
mov
in
call
sbb
push
stc
(bad)
pusha
jnp
or
(bad)
inc
hlt
add
xchg
outs
fcmovnu
loope
xchg
and
ins
cmp
fucom
mov
int3
int
add
clc
ins
dec
mov
xchg
repz
dec
adc
loop
lods
adc
sbb
sbb
pop
mov
inc
inc
sbb
mov
lahf
(bad)
xlat
dec
cmp
daa
lods
pop
in
dec
ret
or
xchg
inc
sbb
and
and
jp
mov
enter
jno
inc
adc
imul
add
test
and
or
add
adc
xchg
push
call
mov
popa
stos
jmp
loope
cld
sbb
mov
jl
lahf
sbb
retf
ss
int3
push
sbb
jno
inc
mov
push
sub
stos
aam
jmp
mov
and
sub
add
sub
and
cli
push
jbe
sbb
ffree
ror
stos
out
inc
and
mov
stos
adc
sub
mov
push
mov
jo
cmp
push
and
pop
jnp
sub
les
cli
mov
stos
inc
push
cwde
das
jp
cmp
lea
jae
mov
lahf
xchg
sbb
cmps
mov
pop
add
mov
sub
add
scas
dec
add
retf
dec
xchg
xchg
outs
pop
adc
pop
ret
lock
mov
ret
in
mov
in
inc
clc
lahf
mov
data16
stos
cld
mov
xchg
pop
pusha
test
pushf
xchg
pusha
ret
adc
stos
xor
js
and
xchg
adc
cwde
sti
pop
dec
mov
push
jmp
dec
rcl
cmp
pop
xchg
not
jns
inc
leave
dec
push
cmp
dec
int
in
mov
cmp
adc
mov
ficomp
mov
xor
dec
dec
test
mov
pop
dec
cmp
data16
scas
cmp
ret
movs
hlt
inc
arpl
mov
fldenv
inc
or
jns
outs
clc
jo
inc
xchg
dec
jle
bound
dec
xor
push
inc
jmp
inc
inc
mov
ficomp
icebp
pop
mov
rcl
inc
mov
adc
add
cmp
pop
das
inc
arpl
inc
hlt
mov
pop
mov
jp
pop
xlat
retf
loop
out
push
das
(bad)
xchg
cmp
sub
sti
loope
or
enter
mov
xor
in
loope
inc
std
shr
fisub
std
inc
add
xor
dec
nop
add
push
es
inc
adc
or
mov
enter
ror
outs
fmul
cdq
push
pop
nop
xor
xchg
xchg
loope
jle
fwait
ja
fimul
pop
jge
mul
(bad)
retf
push
add
es
jno
mov
jns
test
or
(bad)
xchg
jne
repz
add
repnz
aam
jnp
in
out
cdq
push
ins
ins
mov
fs
div
mov
stos
(bad)
pop
and
mov
cs
xlat
das
dec
mov
xchg
mov
into
repnz
aas
cmp
enter
or
sub
mov
shl
mov
pop
popf
cli
adc
ror
mov
push
movs
mov
pop
lock
retf
lds
pop
mov
(bad)
xlat
push
jbe
jge
mov
mov
scas
jp
imul
fidivr
std
shl
in
shl
in
mov
sti
mov
pop
adc
fs
sbb
adc
mov
inc
add
or
cli
add
mov
(bad)
aas
inc
mov
leave
mov
pop
cmc
sbb
mov
enter
push
cdq
shr
popa
clc
pop
fcomi
lahf
push
sbb
mov
sub
in
int3
mov
mov
mov
std
fwait
xor
mov
mov
jle
addr16
ins
jle
push
add
out
retf
cmc
out
xchg
in
or
pop
stos
and
push
jmp
inc
jbe
lods
outs
scas
scas
ss
cld
fst
call
xchg
jge
push
je
lock
xchg
push
jne
push
jns
not
aaa
add
adc
mov
inc
adc
ss
iret
xchg
mov
push
push
jmp
into
(bad)
je
dec
and
idiv
jge
jmp
aam
mov
out
ins
push
fcom
das
push
push
cmp
pop
popa
nop
jmp
rcr
ret
bound
or
xchg
mov
pop
imul
jne
pop
lods
jne
fs
sbb
pop
pop
or
xchg
or
jecxz
mov
cmp
dec
test
push
and
out
sbb
push
mov
inc
(bad)
cdq
stos
mov
mov
div
adc
dec
(bad)
jecxz
mov
add
mov
cmp
je
jecxz
push
fcmovb
iret
outs
dec
mov
les
mov
xor
jnp
jbe
pushf
jge
cmp
jo
cdq
xor
jle
pop
test
push
push
jmp
pop
pop
xor
adc
dec
popf
rcl
inc
add
outs
sbb
pop
mov
ret
jp
mov
adc
pop
sti
xchg
iret
(bad)
cmp
push
adc
cdq
popf
xor
add
movs
fist
add
sbb
add
repnz
imul
aaa
inc
clc
xchg
out
inc
mov
sbb
stc
repnz
or
ret
ss
xor
xchg
sbb
out
mov
sbb
adc
div
push
out
xchg
xchg
aas
push
in
jge
xor
fs
mov
iret
add
movs
shl
sbb
sbb
mov
stos
pusha
mov
repz
add
call
add
inc
mov
fdivr
mov
jmp
or
dec
sbb
(bad)
aaa
arpl
aad
das
fs
retf
mov
cmp
lds
xor
xchg
or
pop
scas
cld
ss
add
mov
(bad)
and
neg
inc
inc
xchg
in
sub
stc
mov
lods
jge
cmps
bound
push
pop
mov
xchg
push
cdq
xor
aas
addr16
pop
ficomp
clc
inc
adc
cmp
cmp
in
enter
mov
lods
scas
mov
cmc
mov
dec
cmp
arpl
not
out
stos
pushf
jge
mov
mov
imul
mov
imul
fs
xchg
and
push
adc
call
xor
adc
mov
stos
cmp
dec
push
loopne
mov
lahf
lods
call
xchg
sbb
out
push
inc
mov
jl
push
loop
or
push
mov
push
push
pop
pop
sbb
mov
lods
mov
fadd
push
loope
inc
sbb
mov
sub
pop
aas
mov
xchg
inc
xchg
mov
mov
jbe
jb
mov
lock
bound
cmp
xchg
cmp
shl
mov
lods
xor
cmp
sub
jge
pop
mov
icebp
mov
jle
pop
sub
sbb
pop
cmp
out
adc
in
ins
clc
(bad)
cld
or
movs
cmc
sbb
or
inc
pop
pop
sub
(bad)
(bad)
and
mov
clc
mov
(bad)
out
mov
enter
jmp
ffree
stos
sub
xchg
ret
pop
add
retf
out
stos
sbb
mov
retw
aam
(bad)
imul
mov
int
add
mov
pop
jge
cmp
sub
in
push
pushf
mov
scas
fidiv
movs
adc
adc
neg
dec
lods
push
jo
and
mov
cmp
(bad)
ss
imul
jmp
mov
sub
add
jbe
cmps
aas
in
(bad)
bound
int
movs
mov
jo
call
and
xchg
xchg
sub
mov
aam
lods
mov
stc
inc
out
mov
out
movs
pop
xchg
pop
les
hlt
(bad)
and
xchg
(bad)
sub
repnz
cmp
ret
fwait
jmp
or
and
pop
js
daa
dec
inc
fiadd
jl
mov
test
jbe
add
push
loop
je
pop
sbb
jmp
and
daa
xor
push
jns
sbb
and
sub
outs
(bad)
idiv
mov
pop
cmps
jl
xchg
leave
repnz
cld
and
outs
pop
lds
ds
fild
aaa
dec
mov
inc
dec
push
repnz
or
jge
and
stos
bound
repnz
add
push
cmps
outs
jae
mov
fs
ds
xlat
xchg
shl
movs
in
and
adc
int
xchg
ret
xchg
fbld
inc
jb
aam
repnz
push
cmp
push
hlt
push
jae
dec
nop
js
sbb
jnp
sub
popf
or
dec
cmps
aaa
xchg
in
mov
sub
popf
and
mov
movs
and
and
cmc
adc
push
inc
fwait
(bad)
mov
fistp
cmp
mov
iret
sub
jb
test
out
scas
movs
mov
sbb
loope
inc
mov
xlat
aaa
jbe
mov
mov
sbb
clc
inc
pop
xchg
pop
xchg
in
scas
xchg
inc
test
dec
(bad)
and
push
(bad)
es
mov
sbb
adc
ret
sbb
push
sub
cmp
cmp
adc
stos
call
or
add
repz
daa
mov
add
and
js
dec
lahf
mov
inc
cs
lea
push
and
(bad)
sbb
mov
fisubr
xchg
test
push
push
cld
stos
and
pop
pop
push
bound
and
retf
pop
data16
leave
push
and
fwait
mov
jmp
(bad)
push
das
je
fs
leave
bnd
mul
je
stos
sub
dec
lock
gs
mov
(bad)
push
add
mov
mov
jle
mov
lock
ret
jo
jns
add
bound
les
cld
pop
add
shr
pop
cmp
stos
mov
imul
xchg
or
pop
mov
and
loopne
(bad)
fdivr
test
push
test
push
mov
rcr
and
lods
and
dec
je
bound
pop
jmp
mov
data16
or
lds
dec
jns
inc
mov
in
mov
aad
push
mov
mov
frstor
cmp
pop
test
std
xchg
mov
mov
xor
test
fild
mov
jp
popf
add
je
loop
xchg
lods
push
xchg
ja
dec
adc
shr
out
add
into
enter
jb
mov
icebp
aaa
ret
add
xlat
ror
or
adc
pop
popa
jo
fwait
jne
push
std
xor
fimul
add
call
call
out
ret
loopne
repz
mov
jge
inc
adc
xchg
push
xor
call
ds
sub
push
sub
jb
pop
mov
hlt
cdq
and
out
bound
mov
icebp
dec
div
lods
scas
sar
fbld
jb
out
lods
repz
jle
int
push
fwait
pusha
sti
iret
rol
jns
push
add
test
in
cmp
add
frstor
mov
fidiv
pop
mov
mov
push
in
push
das
rcr
push
mov
and
aad
pop
icebp
jnp
push
sar
inc
lds
call
cmp
pop
xor
ins
mov
retf
and
sar
into
jmp
ins
add
pop
cld
cmc
dec
mov
sub
push
xor
or
repnz
ret
adc
sti
shl
sub
or
popa
mov
sub
jno
xchg
mov
enter
xor
xchg
cmp
or
push
push
pop
mov
into
xchg
repnz
mov
int3
outs
arpl
ins
(bad)
and
add
jmp
sbb
mov
xor
pop
inc
(bad)
popf
mov
push
xchg
lea
pushf
xor
sub
push
ins
mov
mov
mov
loopne
out
jle
mov
jno
cli
inc
sbb
sbb
sbb
dec
xor
cmp
inc
rol
add
(bad)
shl
fcomi
adc
das
inc
repz
rol
mov
mov
push
sub
xor
lds
mov
fidivr
push
fbld
xchg
adc
xchg
sub
out
mov
jmp
dec
push
jle
and
test
ins
leave
les
scas
not
dec
hlt
int
(bad)
icebp
dec
(bad)
xlat
dec
jl
movs
jae
xchg
sbb
ffreep
cmp
push
cdq
mov
icebp
(bad)
push
xchg
mov
daa
sub
adc
push
loopne
sbb
neg
cmp
lahf
call
jmp
jle
xor
xchg
adc
mov
mov
jne
push
jl
mov
pop
clc
adc
sub
push
jno
or
xchg
dec
and
out
or
fnstcw
mov
aad
imul
stc
loop
inc
mov
in
mov
test
add
mov
fwait
mov
data16
cmp
dec
arpl
ins
movs
lds
rcl
fs
mov
jae
push
mov
mov
arpl
(bad)
sahf
push
int3
pop
idiv
ret
inc
xchg
dec
ret
hlt
mov
inc
mov
mov
mov
sbb
push
add
inc
dec
int
ins
add
push
push
sbb
jp
cmps
sub
jns
xchg
imul
xor
aaa
xchg
in
pop
add
mov
jnp
jge
hlt
fidivr
das
or
setb
sar
jnp
ins
inc
(bad)
fstp
arpl
inc
xchg
ror
pusha
jns
pop
mov
jmp
aad
cmp
xchg
jmp
dec
xchg
shl
inc
dec
mov
pop
dec
dec
bound
nop
iret
add
xor
cmp
xchg
cmc
lds
mov
rcl
dec
and
ins
xor
iret
xchg
ss
xor
mov
clc
xchg
cs
arpl
xchg
xchg
(bad)
cmp
jb
into
enter
pop
or
jge
out
adc
jmp
sub
or
stos
jmp
gs
ret
sar
call
or
jmp
fbld
cli
cs
xor
aad
mov
frstor
inc
outs
mov
ins
in
(bad)
lds
cmp
xchg
lods
mov
dec
test
fst
and
jle
xor
sbb
in
loope
loopne
dec
lods
ins
inc
push
inc
into
mov
test
ficomp
int3
ret
push
adc
cmc
cwde
inc
aaa
push
sbb
imul
or
imul
add
mov
dec
or
push
ss
xchg
ds
scas
stos
loopne
fbld
mov
push
jbe
jecxz
xchg
mov
cdq
xchg
pop
call
es
add
mov
inc
add
ss
arpl
jno
push
jl
sub
hlt
stos
mov
adc
inc
arpl
jae
in
int3
lock
mov
mov
mov
push
inc
jmp
xor
fcom
xchg
mov
xchg
push
cli
in
mov
aad
pop
shr
jmp
sbb
fcmovnb
push
jnp
mov
cli
test
jae
popa
fstp
out
in
and
jns
aam
je
sti
test
test
jo
push
xor
xor
scas
mov
loopne
jnp
stos
sbb
call
sub
mov
jl
pop
fstp
mov
inc
les
pop
cmps
icebp
and
cmp
std
add
push
and
xor
and
xor
lods
push
and
xor
inc
or
ret
ror
std
jg
lock
push
jecxz
mov
mov
adc
dec
or
push
sbb
hlt
aas
call
add
pop
dec
push
aam
jg
push
aam
in
pop
cwde
movs
add
aas
xchg
jne
push
sub
fcmovnbe
ins
pop
rol
inc
in
inc
and
and
mov
adc
dec
adc
xor
fild
outs
sub
lahf
fsub
mov
das
add
add
in
dec
call
shr
(bad)
call
jecxz
test
mov
xchg
idiv
sub
lds
frstor
in
sbb
or
stc
hlt
iret
aaa
ins
adc
ficomp
and
sub
mov
add
es
mov
ds
xor
add
or
loopne
adc
inc
pop
mov
movs
and
cmp
popf
mov
add
and
movs
pop
nop
fild
fsubr
or
leave
pop
(bad)
pop
icebp
out
xchg
jmp
xchg
ja
mov
lock
stos
jg
xor
lahf
push
jno
pop
push
ror
jmpw
cmps
neg
(bad)
inc
mov
ror
fadd
mov
xchg
cld
pop
pusha
test
sbb
mov
jmp
call
mov
test
out
jp
add
sbb
jo
jnp
out
out
scas
sbb
pop
cdq
mov
in
add
pop
das
fimul
dec
pusha
jge
mov
out
pop
mov
sar
iret
out
movs
es
jge
or
icebp
fs
pop
cs
shl
rol
(bad)
push
jbe
jb
fld
mov
sar
outs
pop
xchg
push
xor
jmp
(bad)
cmps
ror
push
add
sbb
cld
retf
push
xor
in
fdiv
je
sbb
fild
inc
daa
push
outs
ja
fdivr
pop
mov
shr
add
mov
sbb
push
lock
cld
fstp
inc
fdiv
into
dec
call
jg
test
cmps
loop
addr16
mov
ret
sub
sbb
repz
cdq
movntq
and
mov
add
ret
lods
add
pop
push
jbe
cmp
inc
shl
push
jle
pusha
push
mov
adc
pop
adc
dec
lahf
fiadd
add
ss
ret
or
stos
sar
adc
adc
(bad)
jl
and
mov
arpl
mov
bound
pop
jno
je
imul
movs
inc
push
mov
push
pushfw
inc
aaa
ret
(bad)
retf
adc
aaa
int3
mov
dec
movs
jbe
sbb
inc
cli
shl
out
ss
retf
sbb
scas
xor
and
jbe
jnp
or
add
loopne
sbb
loopne
adc
stos
jmp
sub
jb
xchg
pop
imul
jle
cmps
adc
mov
clc
push
dec
sbb
sub
cmp
and
jno
(bad)
out
inc
cdq
xor
leave
sbb
pop
movs
inc
jb
sbb
pop
and
inc
sbb
sbb
push
aad
aad
mov
mov
popf
es
hlt
call
fcmove
(bad)
data16
xor
and
(bad)
pop
xor
pop
fwait
fs
inc
xor
call
mov
(bad)
and
shr
jl
sti
mov
jno
dec
cwde
ror
ins
xchg
jl
out
add
jmp
mov
fisubr
das
jg
jg
adc
aad
dec
inc
clc
cdq
push
xchg
mov
cmp
xchg
test
int3
cmps
(bad)
fwait
fs
dec
arpl
mov
xor
sbb
pop
(bad)
adc
bound
cmp
out
jmp
mov
mov
aas
not
push
xchg
cmp
push
ret
rol
pop
pop
jo
push
adc
pusha
sahf
xor
sbb
or
xor
enter
dec
inc
mov
arpl
push
test
aad
adc
gs
xor
ds
and
pop
out
and
jecxz
xor
test
stos
mov
push
inc
call
cmp
dec
adc
imul
lods
popa
jecxz
push
cmps
cmp
push
int3
sbb
je
xchg
mov
mov
inc
arpl
std
cmovg
shl
fs
mov
inc
mov
and
ins
aad
jmp
adc
aad
(bad)
(bad)
cmp
xor
xchg
das
dec
jo
jo
mov
(bad)
cmp
call
push
jmp
scas
dec
push
lea
push
aam
sahf
pop
mov
data16
and
cmp
mov
xchg
xor
and
or
(bad)
pop
and
imul
push
and
out
aam
inc
test
jae
jecxz
dec
adc
retf
sub
out
loopne
neg
inc
aad
(bad)
mov
mov
mov
cdq
push
mov
shl
push
icebp
arpl
test
sub
sub
ins
inc
hlt
adc
inc
loop
jl
fwait
push
sub
xrelease
mov
fimul
stos
adc
adc
jle
repnz
push
pusha
aas
aad
cli
sahf
fwait
imul
cmp
ret
pop
test
jne
mov
(bad)
adc
adc
xor
xchg
inc
sbb
sbb
loop
inc
sub
pop
pop
pop
inc
cmps
lahf
lock
scas
mov
outs
scas
aaa
fwait
push
push
addr16
ins
pop
jo
mov
push
aas
mov
mov
sub
cmp
or
xor
xchg
int3
mov
ror
jmp
(bad)
push
adc
cmp
xor
scas
sub
ja
enter
xchg
enter
jecxz
push
add
out
or
pop
je
fs
and
ret
jno
push
pop
fs
jno
arpl
test
popf
jg
sub
ret
sahf
jne
mov
pop
out
rcl
ret
dec
cdq
push
cwde
mov
pop
cmp
(bad)
rcl
add
(bad)
cmp
std
jl
inc
or
add
call
inc
xchg
clc
sub
mov
in
daa
push
fnstsw
pop
rcr
xor
or
jb
cmp
cmps
dec
mov
scas
sub
stos
loop
(bad)
in
inc
inc
jae
repz
push
jne
fs
lods
nop
or
fistp
(bad)
loope
ret
sbb
ds
cmp
das
sub
(bad)
mov
xlat
stos
sub
xchg
add
adc
fyl2x
bnd
pop
les
imul
sbb
or
and
pop
push
pop
gs
mov
outs
movs
lods
mov
cmp
lods
mov
add
ja
mov
jmp
neg
or
xor
push
fdivr
sbb
inc
repz
nop
mov
ret
js
movs
inc
cwde
psubq
sub
(bad)
jecxz
mov
jnp
cmp
add
jb
ficom
movs
iret
and
inc
dec
aam
data16
or
ja
leave
std
push
shl
imul
movs
ficom
neg
pop
rcr
push
pop
sub
(bad)
mov
sbb
lock
add
adc
xchg
jp
clc
xchg
or
mov
jecxz
sub
and
fld
mov
pushf
sahf
push
jecxz
mov
retf
mov
in
test
jg
inc
xor
push
or
xor
add
and
cld
sub
repz
shr
pop
jo
pop
arpl
out
test
mov
mov
enter
jl
jae
sbb
sub
aaa
loop
and
or
mov
icebp
rol
mov
cmps
mov
adc
xor
iret
cmp
add
outs
sub
jae
repz
and
in
mov
jne
push
ret
mov
popa
fcmovu
push
popa
jge
mov
cmp
lock
jle
or
imul
push
mov
push
or
xchg
shl
int
das
ja
into
mov
mov
imul
and
xor
ins
mov
in
sub
(bad)
call
cmp
(bad)
(bad)
push
fbstp
add
fwait
xchg
cs
sti
dec
push
inc
add
mov
(bad)
mov
mov
out
(bad)
(bad)
out
fwait
or
sahf
mov
iret
or
pop
xor
ins
imul
and
movs
mov
adc
icebp
jbe
in
faddp
mov
or
add
fsubr
ss
(bad)
mov
popa
mov
sti
out
div
pop
stos
je
out
mov
call
cld
xchg
push
shl
lods
pop
mov
ss
xchg
jecxz
in
push
fcom
enter
xor
cli
int
add
adc
dec
xchg
and
or
mov
cmp
movs
push
sbb
popa
xor
push
and
or
out
mov
dec
loope
mov
pop
scas
push
call
cmp
jno
call
mov
mov
push
jmp
sub
pop
imul
and
add
push
aas
jo
push
pusha
arpl
jecxz
jmp
test
mov
push
in
cmp
mov
(bad)
pop
dec
sbb
mov
mov
mov
aam
sub
neg
pop
mov
aas
out
aaa
dec
ins
(bad)
out
rol
fcomp
lods
mov
sahf
sbb
sahf
test
dec
jmp
mov
pusha
enter
mov
cmp
jecxz
ret
loope
mov
rep
arpl
pop
imul
sbb
pop
shl
inc
xchg
mov
push
push
adc
pop
outs
sub
addr16
repz
cmp
xchg
mov
pop
dec
dec
inc
out
push
stos
std
mov
add
sub
add
and
cmps
mov
arpl
xor
adc
test
data16
shl
lock
hlt
imul
sbb
mov
scas
cmp
lds
mov
stos
test
pop
in
mov
clc
mov
cmp
arpl
rol
push
add
xchg
test
icebp
jmp
test
and
dec
js
xor
sbb
xchg
push
pop
ret
cmp
mov
xor
sbb
imul
sub
add
(bad)
hlt
test
pushf
cmp
mov
call
xchg
sbb
pop
mov
das
popa
(bad)
jae
sub
jl
ret
in
sbb
adc
out
jmp
lock
push
sbb
mov
(bad)
daa
xor
pop
dec
sbb
fbstp
mov
dec
nop
in
lods
loopne
jle
(bad)
lods
cdq
ret
xlat
div
outs
cmps
mov
clc
mov
pop
pop
movs
mov
mov
loopne
std
mov
sub
sbb
inc
adc
xor
adc
inc
pop
push
jmp
xchg
in
add
adc
inc
adc
das
push
xor
addr16
mov
cmp
push
pop
cmp
push
shl
retf
sub
xor
cmp
rol
sbb
loopne
rol
test
sbb
mov
in
and
enter
ret
cmp
jge
and
mov
dec
add
mov
ds
xor
jne
dec
cmp
clc
cmp
jbe
pushf
push
hlt
or
add
dec
mov
in
mov
(bad)
popf
sbb
add
fidiv
mov
push
ja
xchg
int3
mov
test
push
mov
jle
mov
sub
pusha
ret
idiv
call
inc
or
dec
mov
or
mov
repz
(bad)
cld
mov
jns
xlat
xor
(bad)
sub
pop
sahf
lea
sub
or
cli
dec
aam
push
fwait
in
outs
outs
(bad)
and
mov
enter
js
test
int
lods
les
push
sbb
add
mov
push
nop
xchg
sbb
mov
imul
mov
fldenv
jns
lock
mov
scas
shl
mov
push
outs
repz
push
adc
inc
nop
jns
ja
xor
xchg
addr16
xor
xchg
mov
push
stc
jmp
sbb
sub
inc
shl
jno
xchg
les
int3
fadd
mov
jbe
ss
not
sub
shl
dec
push
sub
movs
xor
mov
add
dec
in
mov
dec
dec
xor
mov
mov
mov
sbb
jnp
(bad)
in
dec
or
(bad)
js
jge
mov
cmp
fild
xor
lods
mov
ja
jns
data16
mov
push
and
popa
mov
mov
nop
out
sbb
xchg
xchg
inc
cmp
jbe
lahf
xchg
sub
test
push
js
pop
mov
cli
xchg
jno
pop
aas
cwde
enter
or
hlt
jo
call
pop
fstp
pop
xchg
and
cld
sub
inc
dec
xor
sti
inc
sbb
jle
jae
push
pushf
jne
pop
mov
outs
call
gs
cmps
dec
mov
dec
fild
movs
imul
mov
rcr
pop
lahf
mov
and
fldenv
idiv
sub
dec
jae
outs
out
dec
xchg
sub
xchg
je
popa
cdq
call
xchg
mov
popa
dec
inc
pusha
or
nop
cmp
push
or
clc
retf
cmp
fucomp
pop
fidiv
mov
jnp
(bad)
aam
aaa
inc
and
daa
mov
test
jno
ds
nop
loop
fldcw
inc
pop
add
enterw
push
jmp
xchg
jp
jae
push
out
and
push
or
xchg
scas
aam
jne
mov
xchg
inc
imul
jo
movs
adc
fcomip
cmp
stc
or
add
jp
adc
ror
jns
ds
(bad)
int
ins
inc
rcr
fldenv
scas
ja
idiv
test
xchg
dec
enter
stc
mov
pop
adc
test
xchg
pop
sub
les
(bad)
or
test
mov
sar
cmpxchg8b
(bad)
leave
cmc
push
arpl
lahf
adc
sar
cmc
dec
lahf
test
and
outs
outs
sub
mov
sub
sbb
jle
(bad)
jo
lock
(bad)
lea
sbb
sbb
dec
outs
add
or
sub
sbb
(bad)
lea
fisttp
push
or
push
mov
xor
mov
fisttp
cmp
js
sbb
push
in
inc
pop
pop
dec
scas
dec
jnp
xchg
jl
lahf
jmp
xchg
pop
inc
jecxz
and
mov
and
clc
div
add
push
cmp
out
cmp
inc
or
jne
jle
jle
mov
push
push
cdq
sub
add
jne
or
push
mov
push
sbb
cmp
add
cmp
sbb
dec
popa
mov
out
ds
fmul
push
xor
sti
addr16
sbb
push
or
mov
out
loope
adc
add
pushf
gs
push
mov
popf
fild
mov
mov
cld
inc
out
mov
mov
stc
push
mov
lahf
cdq
xor
lods
adc
das
dec
popf
add
and
lahf
out
push
fidivr
inc
movs
sub
imul
bndldx
add
sbb
adc
jle
test
adc
pusha
test
ret
lods
xchg
ja
mov
aam
jae
adc
sbb
or
inc
rol
cs
(bad)
xor
loope
leave
mov
in
mov
icebp
jecxz
sbb
add
mov
fisub
loopne
out
cmp
hlt
popa
and
in
and
stc
sbb
mov
cld
dec
mov
push
icebp
adc
dec
ds
cmp
retf
pop
and
in
push
js
cmp
inc
cwde
xchg
cmp
scas
push
add
lods
fcomp
out
cmp
iret
inc
cs
mov
inc
jae
cmp
inc
imul
dec
jl
xor
iret
cmps
pop
pop
outs
mov
mov
mov
mov
or
ret
fidivr
ins
test
cmp
or
std
icebp
js
xor
imul
icebp
cmp
scas
xor
mov
and
push
pop
adc
mov
jno
or
stos
and
ficom
mov
mov
div
test
push
int
push
cmp
jle
inc
(bad)
pusha
(bad)
in
dec
push
sar
sub
scas
dec
mov
sub
rol
mov
pop
xor
sbb
fwait
mov
inc
ins
es
xchg
icebp
add
adc
inc
daa
add
cmp
ds
push
mov
mov
xor
scas
sti
je
popf
xchg
data16
je
xchg
bound
test
dec
fisttp
jb
inc
repz
mov
and
dec
fld
mov
dec
ret
mov
aad
mov
aad
pop
sub
(bad)
mov
(bad)
and
mov
shl
and
or
rol
fst
in
retf
jbe
jno
imul
push
in
and
lods
enter
repz
rcl
das
dec
push
cmp
imul
cmp
shl
sbb
dec
jmp
pop
gs
mov
cmps
mov
(bad)
add
cmps
sar
out
cmp
xchg
mov
enter
mov
fucomi
jbe
xor
hlt
dec
mov
repz
xchg
sar
cmp
and
out
call
retf
loop
xor
sar
je
mov
outs
mov
pextrw
and
mov
popf
shr
xlat
pusha
ret
push
out
adc
cdq
(bad)
shl
mov
movs
loopne
jne
stc
(bad)
loope
adc
loopne
cmps
add
pop
repnz
test
ret
int
ror
in
pushf
fcomp
mov
pop
mov
and
das
push
leave
push
aas
bound
or
jno
jp
jb
push
and
xor
test
xlat
add
mov
pushf
stos
sbb
sub
dec
mov
dec
push
loop
or
and
in
push
jge
add
lahf
out
ja
mov
outs
and
mov
rcr
shl
stc
mov
mov
into
mov
out
icebp
mov
sub
rol
push
outs
xor
xlat
fwait
pop
pop
scas
xor
mov
sbb
and
ins
not
aad
imul
mov
mov
push
pushf
push
test
mov
xor
ins
jecxz
xor
add
mov
rcl
in
stos
arpl
inc
stos
adc
in
cmp
sub
push
not
inc
xor
mov
jno
mov
xchg
out
xchg
mov
pop
mov
jge
jb
xchg
pusha
and
call
adc
daa
shr
mov
or
inc
cld
mov
jge
inc
fxch
adc
popa
dec
int
mov
popa
dec
call
jp
sub
adc
not
loope
adc
add
cmc
inc
fucom
jmp
pop
stos
das
inc
shr
ficom
sbb
shr
push
loopne
mov
mov
aam
stc
sbb
pop
icebp
mov
pusha
(bad)
imul
aaa
rol
sub
mov
in
jns
int
and
sub
mov
push
sub
sub
aaa
call
push
sbb
mov
stos
call
cmp
sar
stos
jbe
sub
dec
xchg
je
hlt
pop
test
mov
test
retf
stos
iret
popf
push
in
mov
mov
jecxz
adc
inc
xor
ds
push
mov
test
and
call
repz
movs
hlt
mov
call
adc
push
sar
shl
icebp
xchg
test
ss
dec
sbb
(bad)
icebp
cld
sbb
sahf
mov
jmp
jmp
xlat
sbb
pop
popf
imul
sbb
inc
out
jb
js
jle
adc
outs
movs
inc
jo
pop
movs
ret
dec
jle
loope
or
pop
test
inc
pushf
cmp
sar
test
jecxz
das
jecxz
pop
test
cmp
lahf
mov
fdiv
xor
mov
call
in
xor
or
jne
mov
scas
repz
jne
inc
int
addr16
sbb
shr
add
rol
inc
xchg
fstp
nop
jnp
sub
shr
or
dec
adc
in
cdq
mov
imul
mov
adc
sub
jae
push
xchg
in
mov
cmp
xchg
popf
out
push
and
sbb
les
je
pop
xor
je
(bad)
cmp
in
into
sub
repnz
add
mov
lods
inc
sub
cmp
mov
xchg
fst
mov
mov
in
jmp
test
scas
cmc
cmp
sar
mov
xlat
(bad)
and
je
push
out
push
std
repz
in
sbb
imul
mov
(bad)
rcr
fwait
xchg
imul
or
dec
adc
dec
ret
mov
sbb
cld
add
aas
sti
adc
xor
mov
test
dec
add
add
xchg
push
or
lea
icebp
inc
rol
pop
ds
(bad)
push
std
shr
test
or
stos
mov
adc
mov
(bad)
bound
mov
fwait
jp
add
jp
pcmpgtw
pop
rol
jmp
cli
add
adc
in
loop
and
sbb
cmp
adc
sahf
lahf
mov
dec
sahf
out
out
movs
xchg
into
std
loopne
xor
or
ficom
pop
fwait
outs
jg
stc
mov
outs
mov
adc
cmp
stos
leave
mov
xlat
addr16
sti
ret
loop
add
(bad)
cdq
cli
into
test
popa
lds
neg
dec
ret
and
jecxz
outs
inc
ins
xor
cdq
xchg
add
sar
fdiv
jnp
dec
sbb
ror
std
aaa
push
pop
in
mov
mov
sahf
push
inc
inc
mov
ins
mov
or
pusha
push
imul
jg
fmul
jmp
call
outs
in
in
repnz
adc
and
call
mov
leave
pop
fnstsw
pop
fldcw
dec
into
addr16
and
scas
(bad)
nop
mov
push
fisttp
test
fbstp
pop
add
adc
arpl
test
add
int3
rol
lods
aam
pop
ror
or
mov
push
in
push
test
xchg
neg
fild
xchg
cmps
jns
xchg
ja
mov
inc
pop
test
(bad)
pop
push
int3
adc
sti
sub
mov
int3
cmp
mov
call
sbb
fwait
clc
neg
sub
not
jl
test
inc
jl
push
adc
dec
mov
nop
adc
into
sbb
xor
mov
mov
ins
mov
dec
ret
or
scas
push
mov
mov
dec
mov
scas
mov
aam
push
mov
xchg
int3
outs
xor
cmp
jns
das
movs
ds
xor
cmc
ja
cmp
in
push
ja
or
mov
jmp
les
mov
mov
xor
mov
adc
dec
mov
push
xor
in
dec
jge
cmp
outs
sbb
cmp
mov
cmp
repnz
lods
ss
pop
leave
les
sub
fidiv
mov
je
jge
movs
dec
js
dec
arpl
fnstsw
fnstcw
push
add
xchg
add
(bad)
in
(bad)
hlt
and
aad
xor
cmp
mov
mov
daa
sbb
mov
mov
sub
shl
push
jg
adc
cmps
ins
cmps
or
fwait
stc
in
sub
int3
call
not
mov
lahf
int
leave
out
test
sbb
and
shr
stos
cli
pcmpeqb
loope
fild
jmp
test
popa
das
in
and
xchg
clc
popf
xchg
sti
(bad)
push
scas
ss
fcomp
or
stc
movs
pushf
xchg
xchg
xor
xor
xchg
daa
shr
mov
mov
mov
sbb
enter
push
jp
mov
pop
jne
sub
jl
adc
sbb
mov
aam
xor
cld
int3
or
fiadd
inc
cmc
jp
cmp
sub
movs
cmps
add
loope
jg
mov
stc
int3
xchg
addr16
fnstsw
jmp
clc
pop
sbb
pop
cmc
sub
xchg
cmp
xor
repz
les
out
fwait
sub
inc
je
or
dec
out
jb
jo
xor
add
stc
lods
and
inc
fs
mov
cmps
jle
out
add
test
das
stos
add
mov
rcl
push
jne
push
adc
loop
adc
cmp
lahf
push
mov
dec
fst
popa
test
int
lds
inc
xor
sub
push
pop
adc
ja
ficom
out
cwde
jb
mov
adc
mov
std
pop
and
push
xchg
les
push
sub
div
bound
sbb
test
pop
pop
sbb
pop
in
imul
test
das
sub
push
fmul
mov
push
test
sahf
xchg
jmp
and
js
dec
adc
adc
jmp
sbb
lods
loopne
and
fwait
xor
out
fwait
xchg
jnp
aad
mov
retf
mov
fld
arpl
or
in
ror
gs
gs
ins
adc
mov
fcomp
xchg
cmp
push
jp
ja
adc
aad
pop
mov
iret
mov
ficomp
sub
mov
adc
gs
xor
xchg
push
cs
pop
mov
pop
mov
sub
(bad)
jns
lods
addr16
iret
(bad)
mov
jb
dec
out
xchg
mov
sbb
push
inc
mov
jmp
and
stc
pop
push
mov
popf
push
loopne
sub
aas
mov
popf
sbb
add
dec
xchg
in
or
jae
and
(bad)
pop
neg
cmps
rcr
icebp
(bad)
ret
lahf
sbb
repz
test
ret
std
mov
xchg
xchg
jb
xor
push
xchg
(bad)
(bad)
cli
shl
jb
or
dec
out
aad
data16
ins
xor
inc
or
fnstsw
and
push
movs
retf
add
mov
add
clc
lock
or
(bad)
cmp
cdq
loopne
pop
fidiv
xchg
sub
aaa
loopne
and
xor
pop
sbb
popf
(bad)
adc
call
pushf
cmps
scas
icebp
inc
xchg
inc
je
ins
out
sub
push
jnp
loop
jne
out
mov
and
ret
mov
or
movs
mov
(bad)
push
data16
icebp
pusha
push
jmp
js
ficomp
cmp
xchg
frstor
push
das
aas
mov
shr
outs
lea
pop
stos
cmc
jne
and
gs
sbb
dec
ds
push
jl
sub
sahf
popf
push
adc
shl
sbb
sbb
push
jns
adc
mov
sbb
jmp
icebp
inc
or
cmp
rcl
push
adc
xchg
in
lahf
push
and
cdq
mov
movs
mov
push
cmp
ret
pop
mov
in
lds
mov
add
or
push
out
push
xor
loopne
xor
ret
push
mov
pop
mov
fadd
or
nop
imul
out
push
pop
dec
aas
jo
add
cmp
jne
aam
mov
addr16
xor
std
pushf
retf
mov
ret
xchg
out
xchg
jo
(bad)
ss
xchg
xor
mov
add
jg
inc
test
sar
or
or
pop
xor
add
jmp
jp
push
js
xchg
mov
outs
rol
adc
mov
push
mov
fnstenv
call
and
outs
xchg
jb
fwait
ret
mov
shl
adc
dec
push
(bad)
mov
mov
mov
jmp
adc
test
pushf
in
mov
pop
dec
adc
xor
mov
and
xchg
int3
sub
push
call
sti
cmc
loope
cmp
cwde
inc
mov
dec
inc
add
cmp
fmul
jl
xchg
pusha
jne
xchg
and
cmps
mov
int3
and
pop
fidivr
fimul
push
cdq
sbb
xchg
lock
fisub
jecxz
and
xchg
scas
int3
data16
leave
(bad)
ret
jmp
xchg
or
jmp
xor
or
adc
inc
(bad)
dec
repnz
inc
mov
ja
xor
retf
mov
scas
xchg
dec
dec
mov
add
call
js
mov
jns
mov
mov
xchg
loopne
and
cs
es
out
test
and
clc
jl
call
adc
dec
outs
pop
dec
shld
data16
mov
fwait
dec
test
and
push
and
sbb
cwde
in
and
xchg
or
push
dec
jns
cmp
loop
pop
addr16
dec
adc
inc
in
xchg
xor
sahf
icebp
push
or
or
jnp
xchg
sub
rol
add
inc
mov
jecxz
cwde
ss
outs
xchg
cmps
xor
js
mov
test
jmp
pop
movs
jle
ret
mov
sub
push
pop
movs
mov
aad
lock
ins
sub
jns
fcom
icebp
(bad)
pusha
jo
adc
loope
or
xor
mov
jae
stc
stc
sbb
jno
jmp
jmp
xchg
jecxz
fsubr
mov
retf
push
add
push
add
push
test
(bad)
out
int3
lods
sar
and
and
stos
clc
imul
scas
xlat
enter
test
scas
adc
test
mov
xor
jle
jmp
adc
jbe
loop
dec
popa
lods
fiadd
out
mov
pop
inc
cmp
jmp
dec
shr
mov
push
jnp
jge
fs
loope
mov
xor
mov
sub
inc
mov
retf
sbb
mov
add
mov
in
sub
mov
rol
adc
cmps
jge
sbb
dec
cld
add
pop
loopne
js
sbb
in
inc
fild
jp
jmp
sbb
das
stos
test
adc
push
jle
popf
dec
jns
dec
ds
shr
adc
loope
test
enter
lahf
adc
daa
mov
mov
ss
or
dec
hlt
sbb
jo
cmp
mov
rol
enter
cmp
stc
pop
int3
or
jmp
jecxz
sbb
test
test
or
push
pop
cwde
xchg
fs
aam
pop
lods
cmp
mov
imul
xor
mov
ret
mov
jecxz
mov
imul
add
jne
pop
inc
jmp
inc
lea
xchg
out
jno
in
jmp
test
ror
mov
sub
pusha
mov
bound
dec
mov
popf
dec
cmp
pop
cdq
sti
cmp
mov
pushf
cmp
call
call
mov
pop
outs
mov
ror
ret
(bad)
aad
js
repnz
pop
ror
mov
je
mov
icebp
ss
push
stc
xchg
xchg
sbb
mov
mov
rcr
xrstor
sti
push
rcr
call
dec
pop
sub
ret
test
cmp
xor
iret
daa
sub
es
fidiv
pop
adc
test
test
sbb
(bad)
outs
retf
push
scas
inc
fs
xchg
inc
push
or
ret
ret
lock
add
add
sbb
mov
jb
mov
add
aas
add
pusha
out
test
add
stos
mov
jne
adc
add
pop
call
xchg
dec
movs
shl
(bad)
add
ja
adc
adc
pop
or
or
and
sub
js
mov
or
push
or
in
xor
gs
fdivp
pop
mov
not
or
(bad)
mov
fsub
push
imul
jbe
xchg
jmp
cmps
inc
mov
pop
daa
push
xor
call
pop
jp
mov
mov
pop
xchg
or
and
xor
mov
iret
rol
into
and
pop
call
jmp
dec
out
test
dec
retf
add
push
aas
bound
jns
xchg
pop
cmps
xchg
pop
clc
popf
aaa
loope
sub
xor
ficomp
xor
movs
(bad)
call
dec
or
rcr
add
ss
ret
jae
fild
sub
mov
or
or
rcr
or
jl
lea
inc
pop
xlat
cs
adc
xchg
add
push
xchg
retf
or
push
pop
adc
(bad)
mov
iret
mov
ja
stos
enter
push
jmp
cmps
xor
clc
stos
(bad)
pop
dec
and
or
cmp
mov
arpl
jne
outs
aas
cld
js
outs
sbb
xor
bound
sbb
or
mov
push
lock
cmp
test
pop
pusha
pop
gs
lds
outs
xchg
icebp
in
pop
dec
das
(bad)
push
call
in
or
out
jecxz
dec
hlt
mov
xor
dec
idiv
mov
push
enter
push
push
mov
cmp
shl
or
mov
inc
(bad)
add
dec
adc
(bad)
(bad)
imul
mov
mov
or
add
sbb
ss
in
sbb
std
fdivr
sub
(bad)
sub
fnstcw
leave
pusha
enter
xor
and
sar
mov
jg
inc
cwde
push
mov
pop
dec
mov
outs
adc
dec
ror
ins
pushf
push
ror
dec
mov
push
dec
sub
push
call
leave
idiv
inc
stos
xchg
std
mov
setne
(bad)
stos
sub
pop
inc
fistp
mov
sbb
dec
sti
loop
int
inc
jbe
in
repnz
out
call
push
enter
aad
int
aad
aad
inc
dec
xchg
sub
cmp
push
movs
dec
mov
hlt
leave
adc
neg
mov
jbe
call
aam
stc
aas
adc
jp
ins
cwde
lea
push
jb
nop
cwde
jmp
add
fs
cli
dec
scas
iret
(bad)
in
in
ins
mov
jge
xor
push
jg
fld
fld
imul
mov
cld
inc
repnz
dec
pop
adc
in
cwde
ins
loopne
jae
xchg
and
mov
push
sub
addr16
call
push
into
enter
repnz
add
adc
cmp
inc
je
mov
adc
jnp
imul
adc
sar
lods
int
jg
enter
jge
lods
jo
stos
mov
sar
jmp
dec
cmp
push
xor
fs
cmps
mov
add
sub
mov
push
lea
xchg
vpmacsdqh
outs
mov
scas
lea
xor
adc
add
in
adc
scas
out
xor
pop
mov
push
inc
pop
mov
pop
rcr
lods
fcom
sub
in
pop
push
popa
aam
movs
in
ror
adc
cmps
add
rol
xchg
dec
lds
xchg
push
push
sub
imul
mov
aam
fstp
out
xchg
push
jno
adc
mov
mov
xchg
mov
mov
rcr
aas
xchg
jbe
jecxz
dec
mov
das
int3
jb
inc
xchg
aaa
xor
(bad)
pop
adc
and
lods
sti
xlat
adc
jae
sbb
lahf
xchg
mov
fdivp
and
push
add
jo
jg
mov
out
jmp
data16
jle
aam
add
fucom
(bad)
jno
cmp
and
pop
jmp
jmp
jle
sbb
dec
in
xchg
xchg
add
or
lds
cmp
pop
cwde
test
loop
xchg
pop
mov
and
sub
mov
les
xlat
push
pop
jecxz
xor
loope
repnz
pop
push
add
ins
cmp
sbb
sub
aad
jmp
dec
push
sub
dec
cdq
rcr
out
and
imul
push
dec
ret
mov
mov
or
fcom
sub
fwait
aaa
pushf
dec
pop
pop
cmp
popa
mov
(bad)
jl
imul
push
xor
pop
sahf
xor
out
les
mov
push
clc
mov
rol
movs
dec
int
push
fs
inc
outs
jl
test
pcmpgtb
mov
or
cmp
jle
adc
inc
xchg
pop
shr
lea
cld
popa
mov
push
es
xchg
nop
cli
xchg
xchg
stc
adc
bound
into
pop
pop
add
sbb
enter
(bad)
lds
fadd
addr16
imul
mov
jmp
movs
mov
movs
daa
cmp
xor
mov
sub
add
push
push
lods
test
test
jmp
xchg
jne
pusha
add
push
icebp
adc
dec
jne
imul
xchg
fld
or
pop
pusha
aas
int3
add
icebp
jg
xchg
mov
popa
scas
das
pop
aad
(bad)
lds
xchg
jne
das
and
js
inc
mov
sub
ja
jnp
test
sbb
sahf
mov
movs
movs
(bad)
imul
and
mov
or
(bad)
out
enter
ret
retf
pop
adc
in
outs
add
test
or
and
ret
enter
imul
mov
rsqrtps
lock
and
aad
or
aad
mov
sub
push
mov
push
dec
xchg
mov
(bad)
mov
inc
fld
cs
ja
stos
aad
and
pop
lock
add
ja
add
push
add
cmps
leave
xor
pop
rcr
pop
lods
mov
cmp
mov
popf
pop
push
mov
push
repnz
push
and
jns
(bad)
(bad)
xor
and
inc
jb
gs
and
mov
mov
pop
cdq
mov
dec
jo
sbb
iret
pop
and
mov
popa
inc
lods
sbb
pop
and
push
and
mov
adc
jmp
inc
inc
cmps
movs
dec
pop
dec
and
hlt
xchg
fwait
adc
test
stos
in
jno
out
inc
jecxz
mov
jnp
fisub
das
or
adc
nop
das
pop
dec
stos
and
repz
mov
xchg
out
cmps
push
mov
cwde
ret
std
inc
clc
add
pop
xchg
push
jae
and
addr16
jg
sub
sub
(bad)
sar
popa
fbstp
dec
std
push
movs
and
div
jnp
xor
push
stos
test
xor
xchg
ja
jle
lahf
jp
(bad)
call
add
inc
adc
cmp
cmp
mov
je
dec
mov
mov
mul
in
dec
push
fbld
into
loop
cmp
sbb
xlat
xchg
mov
into
inc
std
and
scas
xor
inc
pusha
shr
jbe
cmp
(bad)
ins
ds
fild
mov
push
test
icebp
fs
leave
imul
add
loopne
cmp
clc
loope
xor
xlat
jns
(bad)
mov
leave
xor
cwde
push
aam
pushf
jmp
push
leave
daa
dec
ficomp
cdq
jb
inc
sub
test
lahf
pop
push
sub
xchg
dec
pop
push
add
mov
sub
outs
mov
jnp
sub
jge
push
test
retf
pop
and
sub
loope
jmp
retf
mov
popf
adc
add
xchg
imul
(bad)
mov
xchg
adc
mov
mov
popf
jns
jb
enter
jns
dec
(bad)
xchg
mov
int3
xor
int
bnd
loopne
popa
out
hlt
add
dec
dec
test
stos
fld
pop
add
outs
je
mov
pop
inc
xchg
ret
mov
mov
(bad)
gs
ror
(bad)
adc
jl
test
cmp
(bad)
fcom
and
outs
xchg
mov
mov
xor
mov
fcom
scas
mov
cld
xor
out
in
cs
stos
dec
jmp
stc
repz
arpl
adc
mov
aaa
cli
xor
icebp
add
dec
(bad)
sbb
and
inc
test
retf
or
cmp
xchg
ret
xchg
fnstenv
fnstcw
xchg
imul
ds
mul
rol
repz
fidiv
mov
mov
popa
(bad)
js
cmp
pop
stc
and
stos
es
int
enter
jecxz
mov
add
in
mov
pop
and
mov
sbb
fs
iret
cmps
pop
push
sbb
cdq
ins
retf
jp
(bad)
(bad)
das
out
rcl
sub
rdmsr
xor
out
adc
and
or
mov
push
or
cmp
and
leave
aaa
xchg
int3
add
sub
mov
lds
adc
xchg
pop
xchg
sbb
xchg
pop
aas
or
icebp
in
ret
cmp
aam
mov
inc
imul
fwait
xchg
mov
pop
(bad)
mov
push
push
mov
xor
dec
mov
mov
loopne
les
loopne
mov
xchg
out
sub
jmp
jno
(bad)
push
ret
ss
lods
aaa
call
jecxz
push
xor
lea
cmp
adc
mov
fmul
cmp
cmp
xor
lds
int
mov
mov
pop
fsubr
lea
popa
cli
pop
lea
mov
inc
and
push
shl
mov
jbe
js
adc
ins
jno
and
xor
in
cld
add
jecxz
jge
adc
cmp
fnsave
mov
shl
lea
mov
push
pushf
xchg
cmp
cmc
push
jns
pop
sbb
or
pop
push
cmp
mov
lahf
pusha
xor
mov
iret
pop
and
rcl
mov
adc
test
adc
push
xor
sub
sub
loop
out
rcr
ficomp
mov
stc
cmp
add
xchg
popf
or
fimul
inc
add
xchg
pop
and
mov
in
mov
ja
movs
retf
(bad)
pop
push
(bad)
xor
rcl
mov
mov
retf
push
jns
loope
dec
or
int
outs
aad
push
mov
ret
test
jecxz
or
mov
push
cli
jl
ror
fwait
mov
mov
lock
inc
out
pop
cmp
in
dec
pop
cli
jmp
inc
popf
mov
test
cmp
jmp
scas
or
push
call
ins
jae
push
xchg
xlat
sbb
and
push
loop
sub
xchg
aam
mov
int
mov
jmp
retf
jne
loopne
cs
add
stc
jne
xchg
fcom
shl
jmp
jo
out
cmp
push
mov
std
mov
icebp
pop
cwde
pushf
mov
scas
aaa
dec
leave
mov
out
xchg
ret
add
xor
mov
mov
rcr
shl
sub
aaa
pop
jmp
cdq
das
mov
xor
and
inc
mov
pop
jl
(bad)
sub
inc
repz
ss
jnp
(bad)
stc
mov
jb
cmps
(bad)
push
out
hlt
inc
in
repnz
push
scas
fnstsw
(bad)
das
or
mov
addr16
mov
int3
push
inc
mov
jno
push
sub
jmp
loop
shl
arpl
(bad)
adc
repnz
test
jg
es
cli
mov
aaa
aam
jecxz
hlt
pop
test
push
jle
gs
cmp
lahf
not
ss
adc
out
add
xchg
or
pop
int3
scas
push
add
xor
mov
xchg
pop
fmul
fxch
lods
xchg
and
sub
mov
mov
popa
jb
or
fwait
xchg
sub
js
std
ins
repz
xchg
bound
ins
pushf
xor
add
imul
or
adc
jge
jns
in
xchg
fdiv
add
stos
xor
adc
cmp
inc
mov
xchg
fstp
out
mov
lds
cmc
push
bound
adc
retf
mov
xchg
stc
(bad)
sbb
cmp
int3
(bad)
push
addr16
popa
xlat
jae
mov
xor
xchg
retf
(bad)
and
sbb
mov
add
(bad)
mov
sub
loope
out
xchg
xchg
ss
dec
call
mov
pop
rol
xchg
test
xchg
sub
ret
lods
push
bound
pushf
mov
shl
jnp
jo
sahf
(bad)
and
inc
loopne
mov
dec
sbb
inc
imul
sbb
xchg
(bad)
fst
repnz
sbb
inc
mov
scas
add
(bad)
cmps
dec
fs
shl
adc
adc
sbb
mov
xor
xor
fwait
cmp
or
sbb
popa
fild
pop
shl
xchg
jno
cmps
call
xor
retf
push
ret
cld
push
dec
sahf
mov
arpl
movs
cmps
out
outs
arpl
mov
(bad)
push
and
ss
push
(bad)
retf
imul
retf
sbb
daa
stos
push
sahf
std
arpl
dec
sub
add
sub
in
ret
aam
jp
call
and
(bad)
stos
dec
nop
push
ins
movs
mov
dec
inc
clc
shr
jg
push
inc
dec
jb
sbb
sbb
sysret
pop
fwait
mov
mov
(bad)
mov
test
cli
sbb
pop
inc
aam
xor
js
mul
pop
jecxz
xchg
and
cmp
lahf
or
sub
fist
aam
sbb
mov
jo
sub
cmp
xor
jle
xlat
fistp
xor
adc
jp
fdiv
nop
retf
(bad)
push
mov
jle
add
aad
cli
cmp
enter
add
js
sub
push
fild
adc
movs
mov
stos
jno
xchg
pop
stos
jecxz
add
push
push
mov
dec
je
popa
mov
loope
or
sbb
lock
or
in
arpl
dec
cdq
mov
sahf
fs
xchg
mov
cmp
into
movs
pop
mov
in
add
mov
ins
push
pop
lods
adc
sti
mov
sbb
jg
les
lea
in
sub
xchg
aaa
inc
inc
jp
daa
sbb
(bad)
icebp
pop
jmp
xor
mov
pop
mov
add
push
mov
call
mov
add
dec
loop
loopne
outs
aam
dec
xor
jp
pop
shr
je
jmp
dec
data16
retf
imul
rcr
cdq
xor
call
adc
jge
push
mov
addr16
sub
rol
inc
add
and
imul
jno
sub
or
push
and
mov
data16
int3
cmc
push
push
fldenv
outs
xchg
or
aam
inc
adc
in
stos
dec
test
shr
add
jns
ds
mov
imul
push
rcr
xchg
jp
sub
test
cli
popf
das
mov
sbb
les
(bad)
fstp
push
sar
mov
cmp
in
iret
test
ret
xor
or
jmp
out
mov
imul
and
mov
loope
mov
jbe
adc
std
push
outs
in
in
or
jmp
jbe
xor
test
shl
add
mov
pop
jl
mov
je
cmp
or
cmp
mov
icebp
push
(bad)
pop
xor
xchg
mov
cmc
push
bnd
js
sbb
fstp
add
mov
fldenv
fstp
shl
dec
xor
push
or
pop
outs
(bad)
push
push
aad
hlt
nop
or
ja
adc
leave
dec
or
lock
mov
mov
out
jg
retf
call
gs
fwait
mov
rcr
retf
sub
push
pop
mov
ss
xor
push
adc
sbb
mov
mov
sub
xchg
mov
mov
into
jl
data16
in
lds
cmp
mov
fist
mov
cmps
int
jle
add
cmp
mov
(bad)
mov
adc
add
ret
test
mov
mov
jno
or
adc
gs
adc
into
je
bnd
mov
sbb
or
jbe
(bad)
aad
aam
xor
and
jb
inc
dec
push
or
les
int3
iret
jg
dec
pop
xchg
fbld
into
ret
xchg
pop
mov
data16
fbstp
mov
pop
leave
retf
std
mul
add
mov
inc
dec
sbb
mov
push
call
imul
fcmovnu
mov
jmp
inc
sub
ins
pop
fldlg2
aad
mov
xor
mov
data16
xchg
mov
(bad)
cdq
stc
pop
retf
sti
inc
fild
push
(bad)
mov
loopne
push
call
push
sar
shl
mov
pop
inc
mov
call
(bad)
fwait
push
push
inc
xor
and
cld
lods
into
dec
sbb
cld
iret
xchg
fs
pop
mov
mov
fld
mov
pusha
rcr
ins
pop
jmp
push
loopne
lea
aam
mov
xchg
leave
in
push
push
sub
push
repnz
scas
or
jg
enter
(bad)
mov
pop
lds
imul
test
fcomp
and
add
jae
xchg
add
call
mov
sub
cmp
rcl
and
xchg
pop
fst
lods
sbb
xchg
cld
pop
fwait
(bad)
pop
(bad)
sub
aam
push
arpl
jmp
xlat
fld
xchg
scas
jns
es
push
pop
mov
or
retf
repz
mov
mov
shr
int3
xchg
popf
ds
stos
in
aaa
push
cwde
sub
loopne
imul
push
sub
mov
or
cwde
mov
cld
mov
inc
repnz
rcl
sub
(bad)
retf
aad
and
test
dec
aaa
clc
movs
sub
jnp
push
sbb
repnz
stc
and
xchg
jle
adc
xor
jecxz
in
or
in
pushf
mov
inc
push
lds
add
and
and
lock
mov
(bad)
jb
popf
in
push
arpl
hlt
pop
cs
les
dec
push
cdq
lds
outs
repz
cdq
mov
jge
ss
xchg
fs
dec
lods
push
fs
icebp
mov
cs
mov
sbb
rol
dec
inc
adc
sbb
int
xchg
jo
leave
adc
pop
ror
push
cmp
xchg
xchg
mov
pop
dec
jg
scas
imul
cmp
cmc
rol
sbb
cmps
cli
push
cld
repz
cli
(bad)
cmp
addr16
push
xchg
fwait
in
pushf
stc
out
adc
pop
out
fwait
retf
adc
shr
sahf
dec
ja
mov
lods
push
int3
mov
inc
push
adc
jne
xchg
das
lock
ins
(bad)
push
dec
sti
cmps
aaa
(bad)
addr16
sahf
fmul
cmc
cmp
cmp
xlat
inc
das
mov
ja
(bad)
and
shr
and
pop
mov
mov
ror
imul
lahf
dec
lock
xor
sbb
lea
jno
mov
mov
pop
fs
movs
dec
cmp
hlt
pushf
sub
cmp
xchg
sahf
das
pop
xor
xor
mov
iret
neg
mov
xor
push
and
add
dec
mov
dec
push
cmp
cmps
pop
xcrypt-ecb
cmps
(bad)
in
mov
outs
shl
aas
arpl
outs
or
icebp
int3
xchg
inc
neg
ret
dec
and
xor
jp
xchg
fist
jge
ret
bound
shl
xor
pusha
es
jae
int3
mov
sti
(bad)
adc
jmp
push
cmp
or
data16
test
in
lock
sub
sub
scas
add
ins
ret
loope
call
fdivr
stos
pop
into
das
push
pop
cmps
popf
mov
push
test
test
add
inc
in
cmp
sub
test
icebp
lahf
retf
xor
ret
scas
add
repnz
pop
xchg
aaa
fistp
scas
aas
mov
sub
enter
xchg
out
sbb
mov
shl
and
mov
fwait
xchg
push
movs
mov
sti
add
shl
icebp
movs
in
hlt
aad
out
sbb
mov
jecxz
leave
into
mov
sub
pop
cli
in
gs
outs
js
xor
dec
inc
add
push
xor
es
addr16
sub
pop
jne
enter
mov
sbb
aad
mov
sub
adc
or
je
pop
pop
add
sub
sub
push
add
je
mov
sbb
xchg
es
idiv
or
and
scas
or
push
xchg
mov
adc
aas
pop
mov
jle
sub
sbb
sub
pushf
mov
xchg
xchg
sub
gs
and
cli
sub
xor
xchg
push
sub
icebp
push
lea
adc
mov
cmp
(bad)
lods
xlat
xchg
xchg
fcomp
xchg
pop
icebp
jb
xchg
repnz
xchg
dec
xchg
jp
or
fnsave
imul
or
mov
mov
fwait
repz
in
ss
add
ret
and
loope
push
test
in
mov
aas
sub
retf
out
push
pop
mov
(bad)
sbb
ja
cdq
ins
std
fninit
dec
test
sub
xor
xor
(bad)
add
xchg
pop
je
les
dec
into
push
out
aad
and
add
mov
and
sub
push
test
dec
inc
inc
mov
fcmovnb
jmp
xlat
arpl
xlat
out
jbe
jmp
sbb
mov
xor
lods
dec
xchg
and
add
shl
mov
je
xor
push
or
rcr
movs
sub
ret
sbb
cmp
cli
mov
xor
mov
sub
xor
in
ds
inc
and
dec
pop
mov
mov
cs
cdq
out
stc
ret
xchg
fs
imul
fldenv
clc
je
mul
repnz
jge
inc
out
dec
cmp
js
aam
push
test
sub
pusha
cmp
sub
mov
push
in
in
mov
(bad)
daa
xchg
jo
sbb
or
push
or
and
enter
or
push
cdq
sar
sbb
sahf
sbb
mov
addr16
mov
retf
add
bound
les
dec
mov
add
mov
xchg
sahf
and
data16
inc
lock
xchg
sub
sbb
mov
inc
leave
sbb
call
or
and
mov
jle
les
and
sbb
mov
jge
in
repz
dec
scas
rcl
xchg
pop
mov
lea
mov
loop
jb
mov
inc
cdq
(bad)
jge
gs
aas
dec
mov
(bad)
mov
arpl
inc
and
add
add
cmp
leave
ret
sub
or
loop
call
sub
mov
retf
clc
xchg
aas
push
dec
movs
sti
or
sub
jg
nop
mov
xor
cmp
ins
pop
mov
call
push
retf
loopne
xchg
inc
test
xor
cmc
sbb
push
imul
cmp
clc
aad
imul
out
jnp
xchg
push
ror
cmps
imul
inc
test
ja
pop
call
mov
test
or
rcr
ins
xchg
adc
jg
dec
ret
and
into
dec
add
adc
adc
pop
mul
call
or
aad
into
push
push
repz
inc
mov
or
(bad)
je
ins
push
and
adc
enter
or
mov
lock
stc
pop
arpl
out
fiadd
cmp
es
push
sbb
out
add
mov
loop
xchg
add
test
cmp
(bad)
into
inc
in
jl
enter
mov
dec
sbb
xor
xor
mov
inc
shl
leave
cmp
push
pop
jge
int3
repnz
cld
push
lods
inc
jb
inc
int3
cmp
das
nop
add
jle
call
stos
push
cmp
cmp
rcr
retfw
pushf
sub
das
loopne
adc
push
out
and
icebp
inc
mov
ret
inc
push
(bad)
js
xchg
cmp
push
mov
fisubr
push
sub
add
mov
je
cwde
in
add
dec
cmp
cmp
fs
ins
add
mov
bound
imul
in
out
and
in
arpl
popa
adc
ds
inc
mov
daa
das
xor
inc
iret
scas
in
mov
pop
mov
jmp
push
mov
je
stos
or
cmp
dec
lahf
add
or
inc
aam
int
xor
adc
jp
mov
shl
mov
and
push
inc
sbb
out
cdq
ins
cmp
ds
inc
pusha
dec
ja
push
rol
(bad)
mov
xchg
in
loope
inc
iret
les
pop
add
test
sahf
mov
push
ja
sbb
shl
repz
addr16
cmc
stos
pushf
cmp
jle
jmp
repnz
cmps
bnd
push
fcomip
sub
sti
add
rcl
shr
out
adc
in
cmc
cdq
lock
and
inc
fidiv
rcr
rol
sti
cld
scas
sub
sbb
clc
mov
pop
mov
mov
or
pop
aam
(bad)
call
and
lahf
sbb
test
imul
retf
enter
rep
push
sbb
dec
or
iret
lock
pop
addr16
mov
xor
cdq
int3
test
cld
sub
dec
push
aad
add
scas
das
mov
rol
jle
jnp
push
lea
mov
xchg
rcl
or
nop
xor
imul
mov
and
push
pop
shl
out
out
rcl
es
xchg
cmp
mov
sbb
xchg
mov
loopne
dec
gs
jns
sub
or
mov
xlat
jno
xor
inc
sbb
push
mov
sar
mov
adc
push
mov
movs
adc
aam
int3
jmp
adc
(bad)
and
(bad)
clc
bound
pop
and
int3
js
xor
mov
cwde
xor
sub
ja
mov
pop
or
hlt
fldcw
test
pop
mov
cmp
pusha
scas
cdq
test
or
pop
lods
test
int
push
(bad)
ins
push
sbb
das
movs
out
jmp
das
repz
jle
(bad)
arpl
sub
sbb
mov
xchg
jb
and
xor
loopne
shl
jns
bound
icebp
jge
mov
adc
inc
stos
pmovmskb
pop
xor
retf
cwde
pushf
test
icebp
inc
and
jl
jae
js
jnp
pop
sbb
add
nop
sub
sbb
ins
jmp
xchg
mov
jbe
fwait
sub
loope
std
in
push
xchg
loope
cwde
sti
sbb
fisttp
add
pop
jns
add
push
inc
out
adc
cmp
sbb
mov
aam
fnstcw
adc
push
sbb
jae
and
ret
ret
mov
cwde
push
cmp
scas
sbb
shr
push
cwde
adc
jp
pop
(bad)
pop
push
shl
mov
test
pop
sub
in
stos
ds
cwde
jg
adc
xchg
mov
xchg
cmp
mov
frstor
cld
pop
ins
sbb
jbe
ins
(bad)
lock
bound
add
clc
adc
je
mov
inc
std
imul
test
and
jmp
cld
psubusb
mov
std
mov
dec
ret
lods
fisubr
loope
jl
stos
in
jmp
pop
mov
dec
leave
in
fcmovnb
(bad)
rcl
daa
out
ror
mov
dec
movs
adc
mov
test
adc
sub
inc
jno
and
mov
in
hlt
cmp
mov
jae
mov
xchg
mov
rcr
lahf
jae
test
push
ins
pop
lock
cmp
(bad)
pop
mov
test
xor
out
mov
xchg
out
rol
mov
aam
sbb
lea
xor
add
fsubp
jne
cs
addr16
into
and
outs
dec
sbb
xchg
adc
rcl
je
arpl
jnp
jae
cwde
arpl
movs
jns
retf
dec
in
mov
pusha
inc
rol
ins
adc
cmp
push
mov
sar
xchg
jle
and
lods
loop
(bad)
test
xchg
push
int3
sti
std
xlat
inc
out
mov
in
in
call
push
aam
out
es
jns
mov
jmp
ret
ins
data16
inc
jge
mov
sahf
ret
es
xor
and
es
mov
pop
push
rcl
or
lds
xchg
ja
fcmovnu
scas
push
jns
loop
bound
mul
xor
add
push
int3
icebp
pop
and
jne
or
es
and
ins
push
and
fwait
adc
aaa
ja
or
mov
dec
adc
add
movs
adc
dec
pop
clc
push
xchg
jno
cli
test
in
repnz
mov
xchg
xor
punpcklwd
sbb
cwde
mov
stos
fimul
clc
mov
xor
loop
xchg
pop
cdq
jnp
imul
je
sbb
sbb
mov
scas
jae
sbb
std
xor
(bad)
scas
sub
pop
jnp
arpl
cmp
retf
call
inc
adc
aad
arpl
sub
ins
test
rcr
loop
addr16
xchg
xor
aas
stc
adc
or
cs
jno
or
cmp
dec
push
push
lock
(bad)
int3
lds
ss
jnp
cmp
push
leave
jmp
mov
test
sbb
cdq
jmp
out
jmp
ja
outs
xchg
pop
mov
or
cmp
jg
jnp
mov
mov
ins
cmp
pop
or
push
pop
cli
add
cmp
lahf
jno
xchg
fs
mov
and
mov
jecxz
sahf
jmp
push
in
shl
test
fwait
and
dec
xchg
mov
ins
dec
mov
dec
(bad)
and
in
adc
add
ror
cmp
add
inc
push
push
sti
shr
(bad)
sti
fs
mov
cld
sub
arpl
jne
test
aas
nop
movs
cmp
or
lahf
add
lds
shl
cmps
es
ins
xor
jle
cmp
sbb
xchg
mov
mov
pushf
push
fcom
in
sub
je
cmp
xor
test
dec
and
push
xor
cmp
xchg
push
in
xor
fcom
in
sub
lahf
out
ja
sbb
jge
imul
cmp
popf
punpckhdq
cli
cld
cmp
push
pop
add
retf
cmp
pop
repnz
jae
adc
add
cmp
outs
push
scas
pop
or
fs
mov
fs
(bad)
std
arpl
mov
jne
xor
add
out
mov
sub
adc
ins
mov
fwait
mov
repnz
dec
sub
mov
sub
cmp
dec
retf
test
mov
mov
add
jmp
dec
xor
mov
cmp
scas
cmp
sbb
pop
fisubr
fwait
inc
outs
clc
lock
fiadd
add
jno
inc
pusha
scas
iret
jmp
sbb
add
push
ds
jne
fs
ret
mov
adc
mov
push
jo
cmp
cmp
cli
loope
pop
inc
movs
aad
stos
movs
jl
fisub
clc
add
loop
jbe
jae
lock
jo
out
arpl
ins
pop
loop
cmps
push
inc
adc
loop
jge
outs
cli
shl
mov
stc
and
dec
cmp
xlat
scas
ins
jecxz
fld
jns
movs
out
jp
es
jecxz
sbb
dec
pop
sbb
mov
and
das
mov
std
add
(bad)
jmp
sbb
push
pop
mov
mov
cmps
data16
mov
xlat
push
aam
in
mov
test
pop
fistp
dec
xor
mov
shl
and
or
xchg
sub
std
pushf
std
mov
push
sahf
xor
pop
mov
sub
pop
test
sub
sbb
mov
mov
gs
nop
adc
fcomp
(bad)
in
mov
dec
jno
and
mov
aam
mov
pop
data16
jl
(bad)
scas
pop
pop
jp
sub
inc
cmp
push
lds
xchg
scas
daa
lea
mov
in
pop
or
xchg
xchg
popf
sbb
push
and
jo
mov
push
cmps
push
inc
cwde
ud1
aam
xor
mov
dec
lock
sub
push
and
push
js
or
pop
mov
mov
or
stos
push
aad
mov
add
add
enter
sub
push
xchg
xor
cmps
and
enter
les
fistp
xchg
xchg
lods
hlt
push
pop
int
pop
dec
retf
lock
cmp
scas
sti
(bad)
cli
cmp
in
xchg
add
js
adc
sub
arpl
mov
sub
rcl
aad
retf
lea
mov
or
ret
stos
ds
int3
mov
xchg
mov
xor
fild
stos
pop
ja
pop
jmp
jle
sub
mov
pop
mov
out
pushf
rcr
xor
iret
inc
push
push
(bad)
mov
xchg
sub
mov
ficom
push
mov
sbb
or
enter
jae
pop
xor
adc
lods
mov
mov
stc
call
cld
dec
retf
je
or
mov
in
clc
and
xor
sub
test
(bad)
loopne
icebp
adc
fiadd
pop
push
sub
pop
mov
jecxz
xchg
or
and
dec
sbb
shl
(bad)
mov
dec
mov
push
add
cmp
imul
add
xor
jns
fild
aas
bound
inc
scas
shl
out
imul
in
jmp
push
sbb
test
sbb
xor
xlat
les
jle
and
jae
jbe
add
jae
inc
ret
and
hlt
or
cmp
data16
adc
inc
loopne
dec
cld
mov
out
and
mov
jne
aaa
lock
mov
xor
xor
test
pop
les
inc
jp
xchg
jo
xchg
push
mov
dec
popf
xchg
into
xor
jg
mov
pop
gs
mov
cmp
adc
int
inc
stos
xor
sub
(bad)
mov
xchg
in
xchg
jge
call
sbb
lahf
je
ins
inc
icebp
push
enter
jp
inc
nop
sbb
neg
ins
lock
out
rcr
dec
aas
pop
fwait
and
scas
sub
icebp
jns
xor
test
pop
daa
xor
or
cmp
push
pop
push
mov
mov
jno
inc
sub
fidivr
dec
sbb
je
and
push
xchg
cld
push
fdiv
fs
cli
das
adc
test
gs
inc
adc
outs
rcr
jmp
inc
adc
jno
sar
sub
inc
sbb
xor
jbe
cdq
jmp
div
push
in
xchg
dec
pop
fnstenv
jp
mov
inc
dec
ins
mov
add
ret
xor
adc
sbb
sbb
movs
clc
or
dec
xlat
adc
cmp
mov
sub
cdq
jl
sbb
add
das
push
dec
jnp
adc
inc
and
dec
adc
inc
sub
or
js
scas
jg
mov
mov
mov
(bad)
int3
test
out
dec
dec
add
es
test
imul
leave
fs
mov
(bad)
shr
(bad)
ud1
aad
pop
in
call
repz
mov
ins
jb
call
sbb
dec
xchg
mov
test
frstor
es
loop
jb
adc
bound
sub
inc
pusha
xor
out
dec
cmp
out
jne
adc
dec
(bad)
stos
xchg
shl
pop
lds
inc
cmps
push
jne
or
popa
pop
ror
in
cli
cli
(bad)
int3
leave
sahf
xchg
call
shr
repnz
hlt
fnstsw
ins
inc
xchg
or
jnp
cmp
pop
mov
or
aaa
jbe
jge
mov
adc
pop
imul
xchg
nop
mov
inc
(bad)
int
cmp
test
pushf
scas
jecxz
add
xlat
das
rcl
pop
inc
les
cs
mov
enter
cmp
popf
out
cmps
dec
(bad)
ror
inc
cmp
xchg
mov
das
(bad)
mov
popf
sbb
mov
sahf
mov
or
loope
add
(bad)
cmps
adc
sbb
dec
lahf
xor
cmp
jmp
xlat
inc
jae
leave
sbb
(bad)
neg
pop
clc
sbb
pusha
jb
dec
scas
mov
repnz
xor
mov
js
cmp
inc
mov
sbb
add
jne
mov
cmc
dec
les
push
inc
pop
aaa
xor
mov
cwde
and
jo
daa
outs
sub
mov
sub
sbb
pop
inc
sub
push
in
hlt
pushf
push
add
cmps
clc
push
push
shl
outs
push
retf
add
(bad)
mov
stc
or
inc
aaa
loope
and
das
push
mov
mov
imul
(bad)
pop
jno
retf
or
fwait
icebp
mov
cmps
loopne
gs
jle
lock
scas
bound
mov
inc
aaa
test
xchg
in
pop
cmps
shl
cmp
shr
pop
fdiv
ret
rcl
jo
push
pop
ficomp
dec
jmp
mov
cmp
and
bound
xchg
repz
js
loopne
stos
arpl
jp
inc
add
sbb
sahf
mov
sub
pop
pop
push
fadd
adc
fadd
into
cmc
jbe
add
jmp
outs
cmps
sbb
int3
mov
jmp
hlt
cmp
aam
xor
jmp
retf
or
adc
mov
cmp
pop
push
dec
pop
aam
mov
cdq
nop
fidiv
inc
pop
shr
mov
mov
and
push
mov
jns
hlt
loop
pop
loope
frstor
xor
adc
shr
sar
dec
mov
loop
push
fadd
pop
jle
or
inc
sbb
popa
sub
shl
inc
enter
cmp
xor
test
arpl
sbb
dec
jle
arpl
rcl
xchg
lock
cmp
out
xchg
dec
cld
scas
mov
in
maxps
ins
cmc
push
push
ins
mov
and
sahf
mov
mov
jno
push
les
sbb
lock
inc
mov
adc
cmp
xor
repz
lods
jmp
(bad)
cli
mov
je
sub
dec
xchg
fs
mov
pop
sbb
out
mov
inc
inc
shl
mov
adc
sbb
mov
xor
sar
mov
mov
ret
push
bnd
lods
pop
fadd
scas
jle
xor
push
adc
push
adc
pop
jecxz
out
push
cmp
jbe
sbb
cld
shl
fistp
stc
ja
jbe
xor
cmp
js
scas
lods
je
mov
and
ret
add
jbe
xor
xchg
or
aam
ss
sub
mov
xor
call
arpl
pop
ficom
bound
mov
mov
and
ror
jns
bound
aaa
or
sbb
push
(bad)
fnclex
jle
ret
in
add
mov
leave
jp
mov
inc
mov
cmp
das
ret
stos
mov
add
and
(bad)
jmp
xor
nop
or
mov
jne
mov
xor
jnp
popa
(bad)
gs
dec
jmp
add
adc
mov
out
test
dec
mov
pop
xor
es
xchg
add
or
jbe
mov
xchg
retf
mov
cmps
add
in
pusha
icebp
popa
mov
test
and
shl
mov
add
and
xor
fadd
hlt
cmps
mov
das
pusha
outs
mov
inc
ror
sti
jns
pop
dec
sar
aam
div
xchg
inc
cmps
mov
int3
add
mov
jg
clc
test
cdq
shl
mov
push
scas
das
lods
mov
loopne
push
sub
xchg
xor
dec
mov
cs
push
or
mov
fscale
movs
or
xor
mov
lahf
jecxz
das
push
pop
xchg
xor
stc
and
mov
pop
or
bound
mov
lock
test
mov
mov
jbe
cmps
mov
mov
dec
adc
mov
out
lods
in
(bad)
cmps
push
(bad)
pop
dec
pop
mov
mov
cmovl
jbe
int3
sahf
push
cmp
or
nop
or
mov
nop
pusha
repz
das
mov
nop
push
add
sbb
dec
outs
xchg
dec
pop
pusha
and
les
mov
jnp
and
xor
inc
int3
jle
push
push
mov
jg
jl
ja
dec
jle
leave
inc
arpl
push
mov
mov
push
cld
data16
sti
(bad)
xchg
test
push
xor
push
add
dec
aas
adc
lods
mov
xchg
sbb
sbb
dec
pop
inc
add
das
xchg
js
sbb
(bad)
lock
js
outs
hlt
and
cmp
cwde
fsubr
fidiv
push
mov
or
push
ss
mov
mov
dec
or
mov
xchg
stos
ins
(bad)
mov
push
mul
and
pop
cmp
fnstcw
aaa
lods
lds
ss
ds
xor
pop
and
inc
sub
push
aaa
fwait
lea
pop
jae
cmp
pop
(bad)
cmc
push
daa
shr
test
sahf
xor
sbb
mov
call
sub
shr
xor
daa
dec
pop
add
mov
sbb
dec
test
fs
pop
ins
sub
fdiv
add
jge
mov
scas
cs
into
sub
loope
inc
clc
aaa
sbb
mov
(bad)
xchg
cmp
sar
push
ja
xor
movs
jecxz
addr16
push
push
dec
adc
xor
xor
movs
arpl
outs
ss
dec
loope
inc
pop
or
xchg
adc
sbb
ss
add
pop
push
ja
lods
cmp
imul
sub
(bad)
out
cmp
jns
and
push
pop
sahf
and
inc
pop
sbb
mov
sbb
in
loope
daa
dec
sub
out
mov
leave
sar
fisttp
movs
fldcw
retf
in
cld
cmps
(bad)
(bad)
mov
aas
loop
jg
hlt
sub
scas
push
shr
test
pop
push
in
psllq
dec
mov
(bad)
fstp
loop
sub
mov
js
and
ins
ja
ficomp
test
scas
js
repnz
sbb
and
mov
dec
fnstcw
ins
push
sbb
jmp
call
pop
movs
dec
add
xor
(bad)
fwait
cs
sub
inc
xchg
push
push
retf
ret
lea
adc
cdq
push
cwde
arpl
adc
mov
test
or
pop
and
inc
lds
mov
push
into
dec
xchg
pusha
mov
and
adc
pushf
arpl
fld
add
jbe
in
in
outs
cwde
inc
es
mov
inc
popf
ss
jae
div
jae
jg
and
repz
ss
jmp
sbb
dec
retf
aad
add
(bad)
stc
ins
repz
sbb
pop
int3
jmp
ror
ins
les
repnz
mov
push
test
mov
dec
popa
dec
jl
int3
jne
enter
sub
dec
cli
jno
pop
test
and
(bad)
mov
lahf
loop
mov
push
push
call
push
add
mov
test
push
(bad)
stc
inc
inc
jo
mov
cmp
push
mov
push
mov
or
mov
iret
push
fsubr
leave
sub
into
aaa
inc
pop
push
(bad)
cld
cmps
std
mov
mov
cmp
shl
inc
loopne
and
in
xchg
fwait
inc
mov
jecxz
gs
lahf
rcl
mov
jl
mov
xchg
cwde
idiv
gs
jne
jnp
mov
cs
(bad)
lods
xor
pusha
std
push
arpl
or
mov
(bad)
stos
cmc
outs
imul
push
sar
xchg
fbld
push
xchg
popf
jo
or
cmp
mov
pop
pop
mov
je
sar
cli
pushf
jo
xchg
cmp
not
dec
sub
aas
stos
xchg
iret
and
jge
xor
jl
mov
aam
xor
push
je
iret
push
lods
pop
int
fisub
mov
jg
test
in
jns
mov
inc
aas
mov
cmc
into
and
jns
dec
cmp
mov
xlat
jge
call
mov
fdiv
pop
imul
xor
imul
mov
std
jns
pop
dec
ret
ja
lods
lods
dec
js
loopne
ret
cmp
out
loope
sahf
sahf
(bad)
jbe
jge
jl
mov
cmp
stc
xor
xor
mov
lahf
jle
shl
call
dec
cmp
std
jmp
lahf
ins
test
pop
add
xchg
jmp
sbb
das
pop
inc
fwait
(bad)
cdq
loop
ret
fs
imul
pop
xchg
inc
test
ror
adc
int3
out
pop
jnp
hlt
push
fs
or
ss
ror
pop
push
mov
in
xlat
cld
and
cmps
dec
ror
sub
mov
dec
cmp
ja
js
repnz
mov
dec
pop
mov
dec
push
and
xchg
loope
cmp
xchg
int
movs
mov
ins
mov
retf
ins
ds
repz
or
push
mov
cmp
mov
cmp
imul
or
sbb
sbb
je
pushf
mov
inc
pop
aaa
(bad)
loop
cld
xor
out
loop
push
xchg
mov
pop
mov
fs
xchg
xchg
addr16
cld
sub
jo
outs
push
jno
inc
das
imul
mov
sbb
xchg
movs
fld
push
cmps
adc
into
test
sbb
lds
cmps
sahf
jno
idiv
jbe
sub
mov
xor
loope
xor
sahf
pop
adc
or
xor
outs
stos
sbb
push
in
pop
add
or
int
mov
popa
(bad)
fwait
pushf
js
cmps
out
push
mov
cmp
cmps
or
xchg
cmp
test
cmps
mov
jae
test
inc
aaa
add
(bad)
cwde
lods
cs
mov
data16
pusha
(bad)
push
dec
loopne
sub
xchg
movs
dec
fs
test
push
cld
push
jge
ror
inc
aaa
pushf
outs
jnp
rol
fucom
and
push
inc
xor
scas
mov
add
les
xchg
sbb
xor
out
sbb
imul
jmp
cmps
sub
xchg
mov
adc
aam
test
in
cmps
pop
xchg
ins
pushf
lods
mov
fs
das
jno
fisubr
popf
popa
sub
mov
int
aam
xlat
mov
sbb
aaa
xor
pushf
(bad)
jecxz
jnp
in
mov
mov
xor
inc
mov
xor
sbb
push
int
fcmovbe
mov
(bad)
xchg
popa
repnz
data16
call
fs
push
sub
or
sti
shr
inc
dec
and
xchg
(bad)
push
sub
ficomp
loopne
fwait
outs
sbb
push
xor
adc
mov
outs
outs
fnsave
adc
jge
in
into
jbe
test
mov
test
xchg
inc
pop
cmc
sub
and
ret
xchg
mov
xchg
jg
mov
js
out
jge
push
sbb
pop
mov
adc
jmp
xor
jb
sub
out
ds
xor
pop
cwde
cwde
inc
sbb
dec
dec
jne
dec
xor
out
pop
mov
nop
ins
fld
mov
sub
xor
xor
test
cmp
fsubr
js
ror
or
(bad)
pop
aad
mov
(bad)
(bad)
push
sub
loopne
sbb
add
aas
cmp
xlat
add
daa
shr
aam
(bad)
test
pop
jns
xchg
xor
mov
lock
fwait
jbe
stos
jns
fild
mov
and
inc
in
or
movs
xor
psraw
rcl
movs
dec
enter
and
adc
push
mov
inc
(bad)
jmp
aad
loop
fs
sahf
ja
and
es
nop
push
or
lods
jl
clc
mov
ins
dec
ret
mov
outs
or
aas
jmp
aas
mov
add
xchg
repz
jmp
idiv
add
movaps
stos
sub
jle
sub
test
cmps
(bad)
dec
test
out
jo
push
or
sub
int
inc
mov
mov
jg
jbe
rcl
sub
jecxz
dec
loop
cld
dec
sahf
push
pop
xlat
out
push
jno
push
inc
or
aas
sbb
push
mov
scas
movs
sub
iretw
push
mov
and
pop
stos
push
call
sub
and
mov
sbb
ficom
mov
ret
stos
or
pop
out
sti
dec
sbb
cmp
daa
dec
lods
mov
test
es
xor
or
fimul
aad
fisttp
dec
xor
cmps
in
cmp
pop
and
out
mov
or
or
mov
cli
push
and
add
sbb
movs
jno
popa
dec
mov
cwde
xchg
inc
mov
cs
jge
dec
(bad)
mov
pusha
(bad)
pushf
sbb
lods
fld
pusha
and
xchg
(bad)
pop
add
in
retf
sbb
pop
mov
cli
ss
dec
jecxz
adc
jmp
test
shl
push
pop
mov
inc
dec
sbb
jmp
mov
aaa
in
cs
xchg
jmp
xchg
outs
call
clc
retf
xchg
xchg
into
cmp
cmp
pop
add
arpl
mov
and
imul
adc
mov
cmp
xchg
aad
push
and
lea
outs
xchg
cs
test
shr
add
shl
inc
mov
mov
fs
pop
inc
cmp
fild
push
jle
pushf
loop
jg
call
jmp
jne
add
xchg
shl
push
mov
fisubr
test
mov
push
fsub
lahf
inc
repz
sub
mov
jecxz
pop
outs
inc
adc
pop
ins
fidiv
loop
cmp
pop
dec
loope
shl
xor
in
lds
shr
xchg
push
mov
mov
aas
sub
xor
and
add
daa
int3
mov
and
add
adc
repnz
inc
ja
data16
push
fwait
sub
xor
jmp
popa
repnz
sbb
mov
push
(bad)
jg
inc
stc
das
dec
repz
sbb
add
ret
adc
push
mov
xchg
call
stos
fisub
outs
repz
test
test
inc
push
xor
add
mov
push
icebp
push
and
out
std
fwait
loopne
dec
xor
or
shl
outs
adc
scas
jp
mov
mov
shl
aaa
push
push
mov
or
int
inc
arpl
inc
ja
inc
jo
dec
jmp
xchg
popf
jnp
mov
outs
inc
jno
movs
ret
mov
nop
or
mov
cmp
fs
daa
inc
loope
cmps
cwde
sbb
adc
retf
(bad)
and
mov
and
fisub
imul
and
pop
lea
ins
shl
push
pop
imul
pop
sub
sbb
mov
mov
push
cli
ss
mov
jbe
loopne
sar
adc
lods
dec
sub
xor
das
repz
les
outs
xchg
mov
lea
pop
jne
push
les
pushf
sbb
xchg
loopne
scas
add
sbb
dec
ss
xchg
mov
add
sahf
loopne
jecxz
cmps
jmp
int3
stos
scas
addr16
pop
adc
adc
cld
sbb
and
push
add
retf
push
and
ja
icebp
fsub
and
xor
xchg
add
inc
xchg
inc
dec
inc
ja
mov
outs
and
push
jle
int
adc
or
pushf
lea
jle
aaa
das
mov
and
cmp
ror
add
or
rcl
ins
daa
cmps
mov
daa
imul
call
iret
sbb
repz
dec
rcl
push
sub
jo
cli
jle
ja
call
xor
jnp
clc
and
mov
push
in
stos
jle
mov
cli
cmp
retf
pop
dec
push
sbb
and
cmp
sbb
fsubr
enter
jecxz
movs
adc
pusha
sbb
std
pop
mov
cmps
rcl
adc
stc
inc
sbb
jmp
cmp
test
mov
fadd
xor
ret
scas
cli
pop
xchg
push
clc
dec
add
mov
aaa
les
pushf
jbe
hlt
jo
push
lock
cmps
(bad)
pop
add
fwait
mov
and
mov
adc
or
mov
ja
les
jecxz
or
adc
sub
push
sbb
dec
in
fndisi(8087
push
mov
fwait
sub
iret
out
addr16
inc
sbb
xlat
loopne
fdivr
sbb
hlt
or
mov
xchg
cmp
push
aaa
sbb
dec
leave
ret
sbb
sar
and
and
call
sahf
cmp
jb
or
dec
ins
adc
xor
and
fbld
adc
jge
inc
sub
inc
mov
adc
adc
cmp
lods
push
out
inc
push
ins
fs
mov
jmp
ret
pop
sar
push
mov
cdq
out
fsubr
mov
call
adc
aaa
and
add
mov
out
and
jecxz
xor
pop
shl
add
sub
bound
scas
push
in
adc
rol
sqrtps
test
cmps
sbb
ficomp
mov
jae
xchg
data16
test
iret
pop
test
addr16
mov
sahf
aad
sbb
cwde
push
fisubr
xchg
mov
int
in
xor
mov
ret
xchg
xor
das
push
or
mov
pusha
add
out
add
les
push
out
repnz
mov
aas
pop
scas
std
mov
adc
out
js
jo
test
mov
dec
fcom
and
mov
clc
je
mov
xchg
ret
daa
inc
jg
lods
int3
out
loop
fwait
fwait
jmp
add
push
mov
fnsave
rol
jp
in
in
in
adc
ret
xor
cmp
push
ds
xchg
jl
ss
push
into
adc
jl
xchg
pop
push
mov
mov
cmc
and
sub
and
test
call
xchg
ret
dec
mov
lds
xchg
cmp
push
pop
repz
pop
imul
aas
jmp
inc
mov
cwde
pop
and
mov
mov
sbb
out
or
loopne
mov
mov
psubusw
xchg
jns
add
dec
sub
push
adc
mov
sbb
mov
fimul
xor
fld
cmp
and
mov
cs
and
pop
sbb
adc
mov
jl
fcomp
add
pop
pushf
push
mov
xlat
xchg
pusha
(bad)
sub
loope
jge
loope
outs
test
daa
test
xchg
test
lods
rcr
repnz
out
pop
xor
dec
xchg
dec
mov
push
fstp
in
add
mov
push
pushf
or
or
scas
add
push
leave
sar
(bad)
jmp
cmps
jmp
or
mov
shl
or
icebp
(bad)
mov
es
pop
dec
xchg
gs
in
enter
int3
cs
adc
cmp
inc
sub
bound
mov
arpl
jecxz
xor
repz
scas
mov
mov
push
imul
loop
mov
mov
std
test
push
push
and
add
pop
inc
mov
inc
jb
fstp
mov
int3
fsub
jae
dec
mov
mov
dec
pop
clc
push
mov
mov
or
jno
call
cmc
add
test
push
ficom
xor
repz
jbe
and
jg
jmp
daa
mov
cmc
and
dec
and
sub
lea
(bad)
je
in
js
sbb
in
jae
cmp
pop
ja
sub
je
xchg
add
mov
xor
pusha
or
dec
xor
or
add
aas
popf
and
cld
test
and
gs
inc
mov
pop
push
into
mov
mov
loope
or
mul
push
dec
adc
inc
ja
push
repnz
je
dec
inc
lea
ins
push
mov
xchg
sub
or
in
hlt
test
ins
aad
pop
add
jmp
push
pop
rcl
push
jmp
jmp
cmps
cmp
and
jno
stos
mov
pop
or
inc
arpl
xchg
mov
aaa
cli
mov
lock
jg
xchg
pop
movs
mov
xchg
cmp
popa
jne
dec
adc
xchg
ss
les
sbb
outs
mov
mov
push
test
lods
ret
frndint
mov
imul
and
mov
push
retf
ja
(bad)
rcl
inc
mov
int3
outs
add
rcl
mov
(bad)
cli
xchg
or
cmps
cmc
test
loopne
mov
lds
sbb
outs
scas
movs
leave
jmp
pop
int3
es
in
jo
jnp
popa
scas
mov
fistp
aam
jne
lahf
add
jo
std
or
mov
mov
mov
addr16
jb
aas
mov
sbb
mov
add
ja
jnp
push
outs
mov
inc
inc
cmp
in
int
fisttp
lock
test
xchg
mov
out
adc
(bad)
jnp
mov
sbb
scas
pop
rol
cmp
add
stc
sar
xchg
(bad)
add
scas
mov
arpl
dec
xchg
mov
xor
xchg
icebp
pop
jp
and
sub
or
aas
mov
mov
fsubr
add
pushf
retf
pop
xchg
xchg
push
or
aas
jge
jl
mov
jmp
and
arpl
xor
es
retf
test
call
push
or
jp
out
or
pop
int3
aad
or
bound
pop
rcl
test
sub
inc
mov
into
cmp
add
inc
clc
repnz
and
xor
js
dec
hlt
lds
dec
adc
and
or
mov
pop
jge
test
fimul
sub
and
mov
sbb
repnz
jno
aam
dec
xchg
sbb
loopne
ins
(bad)
in
cld
in
jp
shl
ror
cwde
sub
or
ins
xchg
les
aad
inc
adc
retf
mov
(bad)
jg
or
stc
adc
sbb
fcom
mov
hlt
jmp
cmp
inc
jmp
jb
cmp
sar
pop
xchg
pop
repnz
fisubr
(bad)
repnz
jmp
pop
retf
bound
xor
mov
inc
jo
sbb
pop
xchg
pop
jb
mov
lahf
add
jmp
sub
push
xor
in
jmp
ja
test
xor
into
es
dec
cmp
addr16
push
mov
xchg
enter
or
arpl
ffree
jns
sub
xor
sbb
sbb
push
xor
sbb
cld
mov
je
test
call
dec
dec
fadd
push
or
mov
mov
add
push
clc
ficomp
mov
jmp
adc
xchg
add
xor
cdq
loopne
pop
cmp
les
popa
mov
xchg
inc
jns
and
xchg
sub
shr
iret
cmp
out
push
cdq
pop
aaa
pop
scas
retf
jb
jmp
mov
mov
dec
in
call
push
lock
data16
loope
lock
shr
adc
daa
dec
lods
sti
adc
mov
and
and
jo
rcl
test
add
test
fisub
fcmovnbe
aas
pop
mov
mov
cs
push
xlat
add
mov
mov
dec
mov
sub
or
int
mov
imul
je
in
rcr
mov
mov
pushf
push
call
(bad)
xchg
dec
stos
arpl
pop
out
fstp
mov
fdiv
loopne
push
stos
test
push
xor
jecxz
push
in
or
pop
sbb
cli
lds
push
(bad)
add
imul
ret
dec
xor
leave
mov
loope
daa
movs
pop
ja
scas
outs
int3
mov
fld
cmp
addr16
push
std
push
call
adc
loope
xor
pop
cmc
pop
jmp
loop
mov
into
das
xchg
pop
int
neg
(bad)
imul
push
fs
ret
dec
add
or
mov
sub
mov
jmp
nop
cmpxchg
mov
mov
or
bound
mov
xor
into
push
cs
cmp
pop
ins
push
inc
std
retf
and
pop
mov
pop
in
sbb
lahf
dec
mov
les
adc
adc
call
mov
in
stos
fmul
out
mov
mov
or
jmp
(bad)
sub
jne
and
pop
test
clc
popf
cwde
icebp
(bad)
mov
cmp
shl
jns
jb
jmp
mov
push
test
cmp
sbb
in
int3
mov
sbb
pusha
sbb
out
daa
xchg
jnp
add
shr
jbe
or
aaa
pop
xchg
jle
fld
movs
fimul
jecxz
xchg
pop
mov
jbe
test
cld
out
stc
xchg
clc
or
aad
xlat
sar
inc
pushf
out
and
mov
inc
retf
lock
mov
inc
movs
cmp
inc
mov
pop
sub
jmp
push
out
jmp
cld
jg
dec
int3
add
or
inc
jmp
stos
mov
jb
dec
add
inc
fcom
sub
inc
rcr
cmp
sbb
nop
fwait
test
clc
(bad)
or
rcl
jmp
jmp
stos
jno
or
add
in
pop
jp
and
mov
in
xor
jge
mov
sbb
lods
mov
lods
(bad)
scas
xchg
ss
iret
scas
pop
and
bound
mov
mov
mov
sbb
xchg
sbb
repz
mov
mov
push
call
xchg
mov
shl
dec
sub
dec
jmp
push
and
xor
sar
adc
pop
out
loope
mov
xor
movs
jae
loope
cmp
inc
call
lods
lea
loop
lods
jo
(bad)
sub
push
int
xor
jmp
mov
mov
rol
shl
pop
dec
or
jmp
pop
push
jbe
je
out
xor
cmp
leave
pop
pop
neg
xor
call
(bad)
ret
push
sbb
rcl
in
push
(bad)
push
(bad)
punpckhbw
call
push
adc
pop
rol
(bad)
cmp
xor
out
and
rol
pop
sbb
sub
jbe
sub
(bad)
add
xlat
pop
push
push
push
xchg
add
clc
call
mov
fcmove
and
jb
imul
xchg
push
push
(bad)
mov
sbb
lods
loope
xchg
stos
outs
jae
jmp
jg
gs
stc
(bad)
jne
ficom
push
xchg
jnp
push
cmc
xlat
test
jp
sub
pop
inc
pop
mov
sti
mov
cmp
cld
in
mov
inc
in
mov
jb
mov
push
pop
dec
(bad)
aam
hlt
and
ficomp
and
push
mov
ss
mov
in
jmp
loope
pop
rcl
mov
jmp
xchg
inc
aaa
pop
jmp
jmp
adc
and
fdivr
clc
inc
xchg
test
xchg
enter
cmp
and
xor
inc
popf
mov
mov
or
sbb
sbb
in
or
dec
mov
jno
jo
adc
scas
jecxz
gs
shl
mov
loopne
imul
test
icebp
mov
jle
jbe
sbb
and
and
es
adc
mov
pusha
cmp
or
cmp
inc
adc
pop
push
(bad)
mov
repnz
shl
or
xchg
or
aas
cmp
fld
rol
std
rcr
push
adc
lods
fbstp
and
mov
aad
jno
pop
ins
mov
xor
ret
rcl
pop
mov
xchg
add
outs
inc
pop
jmp
fisubr
daa
add
xchg
out
into
es
xchg
push
out
rcl
in
mov
jnp
repnz
pop
(bad)
sti
aad
adc
shl
movs
loop
out
sub
fwait
mov
cs
setl
adc
fs
xor
or
push
and
cdq
and
xchg
fs
test
or
xchg
ret
sti
bound
add
jmp
inc
xchg
retf
call
pusha
push
dec
sbb
adc
xor
add
aaa
outs
enter
jge
test
aad
repnz
rol
jmp
cli
xor
(bad)
(bad)
out
mov
xchg
xor
ins
scas
pop
cld
test
loopne
mov
and
xchg
inc
mov
adc
push
xor
iret
sahf
test
es
or
mov
sbb
adc
pop
pop
lea
adc
add
lods
dec
jp
jbe
dec
out
push
xchg
es
lods
xor
ret
rcr
push
fild
add
fsub
(bad)
cli
ret
mov
add
mov
push
arpl
add
or
adc
mov
mov
push
shr
jmp
(bad)
scas
add
mov
xchg
ds
aad
fadd
call
lahf
in
out
pushf
outs
pop
sub
mov
jecxz
fimul
pop
push
add
data16
cwde
stos
mov
pop
into
push
mov
fsub
rcl
(bad)
outs
pop
scas
(bad)
or
dec
push
pop
xor
adc
test
rcr
in
add
ret
ins
inc
cmp
add
adc
frstor
in
inc
dec
mov
jbe
push
add
into
mov
sbb
arpl
loopne
or
xor
add
pop
push
push
mov
cmp
shr
cmc
pop
lea
inc
outs
pop
jb
std
mov
cmc
rol
imul
neg
or
dec
push
sti
mov
popa
mov
mov
(bad)
and
push
xchg
stos
hlt
les
ja
je
call
sub
stc
enter
shr
das
pop
jne
popa
mov
cld
lea
xchg
jne
sub
leave
mov
mov
movs
lock
dec
aam
test
push
sub
clc
add
(bad)
fadd
neg
jae
sub
rcr
rcr
hlt
inc
std
sahf
add
(bad)
cmovne
pop
loop
sbb
inc
sub
mov
leave
pusha
ja
es
ss
jmp
aas
or
ins
push
je
ror
(bad)
rep
and
jl
movs
xchg
pop
push
lods
cmp
sub
push
sahf
push
cmp
adc
jno
mov
xor
shl
jae
fs
pop
fcmove
mov
fldenv
scas
pop
cwde
maskmovq
inc
popa
lea
mov
iret
adc
xchg
and
push
jne
cwde
or
jns
dec
lods
mov
ds
xlat
add
scas
ja
inc
cmp
out
cmp
xlat
(bad)
enter
ror
mov
daa
clc
push
ds
mov
or
mov
(bad)
mov
mov
mov
sub
lods
popa
stos
jo
mov
out
leave
fcmovnb
mov
sbb
ja
mov
mov
dec
mov
mov
mov
and
xor
add
aad
inc
xor
test
push
stos
xchg
push
xchg
rol
dec
fcmovnbe
xchg
xchg
mov
sti
fsub
cmp
xor
jmp
fwait
cld
mov
push
movs
cmc
call
xchg
adc
cmps
and
add
adc
adc
pop
mov
mov
repnz
fimul
clc
sub
sub
pop
and
fimul
pop
ins
sbb
push
test
jp
cmp
cmp
sub
cmp
scas
mov
je
(bad)
cld
cmp
push
jmp
push
fist
idiv
push
push
cmps
test
out
les
outs
jmp
sub
xchg
je
pushf
daa
(bad)
stc
sar
dec
test
popa
push
xor
clc
xchg
push
push
inc
mov
(bad)
sub
pop
(bad)
sahf
add
jae
sub
not
rcl
xlat
clc
mov
mov
jl
dec
sub
jnp
xchg
repz
test
cmp
xor
lods
add
ds
int3
dec
(bad)
lock
inc
push
xchg
movs
loop
push
cmp
cmc
jg
(bad)
loop
in
nop
bswap
adc
inc
in
lods
add
dec
or
ret
inc
dec
xchg
jle
xchg
add
sub
iret
sbb
rol
or
jns
shr
mov
add
(bad)
je
adc
lock
aad
sbb
(bad)
(bad)
cmp
ffree
stc
fdivr
adc
jb
rcl
mov
sbb
xor
jae
nop
(bad)
pop
rcr
jne
(bad)
jmp
and
cdq
sbb
push
jp
mov
sub
lahf
neg
cld
jmp
mov
mov
les
mov
add
inc
adc
pushf
mov
jmp
call
es
and
push
mov
and
cmp
(bad)
sbb
ret
test
fldcw
jge
cmp
int
mov
cmp
jbe
xor
retf
inc
sbb
imul
dec
dec
pop
push
ret
push
and
mov
add
mov
outs
fcom
cmp
in
mov
in
sub
add
mov
les
fwait
(bad)
repz
dec
cmp
shl
mov
movs
or
arpl
(bad)
xor
mov
std
dec
push
fbstp
inc
adc
pop
scas
cmp
dec
inc
(bad)
push
retf
mov
push
adc
loope
call
add
dec
adc
lods
jle
or
outs
xchg
sbb
jl
out
pop
xor
lea
inc
shl
ins
mov
xchg
cmp
mov
add
ins
cmp
pop
popa
ss
jle
mov
lahf
jbe
xchg
lods
sub
shl
mov
scas
je
jge
add
mov
cld
mov
(bad)
cmc
mov
sub
jo
cmp
icebp
fdiv
ds
pusha
jbe
jmp
xchg
ss
cmps
(bad)
int3
xor
sahf
inc
push
mov
sub
aaa
xor
pop
in
inc
not
pop
fisttp
clc
jmp
sar
xor
idiv
xor
into
xor
jne
sub
cmps
xchg
add
leave
dec
(bad)
jmp
lahf
pop
mov
ins
inc
arpl
mov
js
jle
sub
cs
fadd
xor
xchg
push
xchg
(bad)
leave
inc
dec
(bad)
sahf
popf
adc
outs
mov
push
sbb
stos
cdq
enter
sub
ficom
outs
xlat
(bad)
adc
inc
in
and
fnstsw
out
jb
inc
in
test
cs
iret
jns
jge
adc
add
pop
hlt
cld
mov
jle
ins
dec
and
(bad)
pop
(bad)
fisttp
fs
fisubr
(bad)
(bad)
rcr
dec
data16
ret
es
dec
hlt
and
mov
xchg
sbb
scas
dec
dec
cmp
cmp
xchg
repz
cmp
fbstp
ja
mov
shl
push
mov
in
ficomp
test
cmp
dec
jge
adc
cld
mov
div
in
(bad)
enter
aas
push
cld
(bad)
pop
add
rol
pop
stos
sub
and
add
push
rcr
dec
cmp
and
jecxz
loop
int
sub
js
loop
inc
inc
xchg
dec
jp
sub
sbb
shl
jnp
cmp
enter
jg
dec
push
mov
fcom
movs
or
icebp
mov
jae
jl
imul
inc
sub
cmp
cwde
and
and
xor
arpl
mov
ss
add
xchg
stc
mov
push
xor
sbb
sub
sbb
dec
leave
daa
mov
pop
out
or
push
inc
pop
int3
cs
xchg
xchg
jecxz
dec
fimul
xor
and
xor
movs
hlt
data16
(bad)
cdq
sbb
out
push
sbb
sbb
adc
add
call
jge
pop
mov
aad
pop
jb
inc
jb
pop
mov
xor
add
add
jmp
pop
ret
fst
shr
popa
add
bnd
in
xchg
mov
nop
or
ins
clc
jmp
adc
mov
mov
test
adc
and
push
inc
adc
push
push
xor
data16
es
es
push
mov
adc
test
mov
movs
cmp
out
pop
popa
or
je
aam
xchg
cli
and
lahf
cmp
cmp
mov
and
cli
and
and
ret
les
mov
and
test
fst
sbb
inc
pop
scas
sub
aad
mov
inc
imul
sub
out
and
dec
inc
push
cmp
push
and
movs
icebp
(bad)
and
push
js
hlt
outs
in
add
ror
jge
mov
dec
je
push
mov
and
cs
jmp
pop
loopne
js
dec
movs
(bad)
cmp
push
ror
inc
jmp
dec
shl
test
push
imul
and
mov
call
outs
pop
add
and
inc
xlat
outs
jns
jb
jmp
fs
repnz
inc
cmp
sbb
dec
adc
cmp
arpl
bound
test
cmp
fdiv
mov
retf
jl
dec
js
js
fwait
sbb
jno
push
cld
retf
sahf
xor
movs
dec
leave
stos
sub
or
push
adc
adc
lods
adc
sbb
dec
xchg
sub
xchg
repnz
push
mov
pop
icebp
es
cmp
nop
xor
cmps
int3
or
pop
or
xor
(bad)
mov
jne
das
mov
inc
cmp
jmp
add
ffree
and
aam
sub
ds
mov
and
dec
stos
imul
popa
adc
clc
fsub
pop
cmp
data16
mov
aaa
sub
xchg
pop
mov
xchg
mov
adc
(bad)
aam
adc
mov
fldln2
ror
and
xor
retf
adc
inc
cdq
in
sbb
cli
or
or
fwait
outs
ins
ds
or
mov
das
test
ins
jb
and
jmp
cmp
addr16
add
sub
aas
adc
jmp
mov
pop
and
push
mov
movs
xor
cs
xchg
test
jl
inc
(bad)
fwait
movs
gs
scas
dec
stos
add
jg
adc
xor
dec
movs
pushf
mov
clc
sar
(bad)
in
mov
sbb
sbb
mov
jb
mov
sbb
inc
add
(bad)
retf
add
pop
jae
cmc
fldenv
adc
jnp
dec
adc
test
jo
mov
stos
jmp
ja
lds
jecxz
push
mov
xchg
ss
mov
ja
loopne
test
mov
frstor
int3
data16
gs
mov
retf
inc
das
jb
xor
pop
cmp
addr16
and
mov
cmp
retf
neg
push
jmp
mov
add
(bad)
adc
jae
aas
shr
jne
xchg
jb
cmp
jmp
mov
and
pop
fistp
mov
sub
and
aam
xchg
test
add
ja
inc
xor
push
leave
pushf
inc
fsub
leave
pop
pusha
mov
fistp
push
adc
or
mov
mov
mov
dec
leave
jno
xchg
sbb
ins
sbb
jbe
jg
scas
out
in
lahf
xchg
ins
jne
in
jl
repnz
mov
lds
sub
pop
inc
jmp
popf
push
retf
push
imul
add
pusha
sbb
aam
push
iret
out
leave
pop
push
push
jmp
dec
xchg
sub
sub
mov
inc
cmps
out
inc
mov
aaa
ins
stos
dec
loope
dec
ins
push
out
mov
cmp
inc
or
mov
jae
and
les
mov
shr
add
imul
add
push
mov
ds
xchg
aas
dec
retf
test
pop
dec
add
(bad)
jns
xchg
xchg
iret
arpl
mov
leave
repz
out
fldenv
jl
ja
jnp
jmp
push
xor
mov
aas
xor
int
into
dec
js
ror
inc
test
inc
jbe
sbb
mov
out
sahf
enter
lods
ja
and
sti
les
mov
rol
jmp
xor
or
lods
jno
pop
jns
(bad)
sub
lds
scas
(bad)
adc
arpl
fnstsw
or
and
mov
out
xchg
sub
aad
shr
jmp
daa
pop
jl
mov
arpl
int
mov
cmps
inc
inc
in
sbb
cmps
dec
out
dec
xor
cld
iret
fwait
sahf
(bad)
cmc
add
or
gs
imul
je
(bad)
dec
(bad)
dec
and
cwde
cld
and
xor
call
xchg
nop
sub
sbb
cmc
stos
fwait
jg
add
mov
je
mov
iret
dec
repnz
ds
adc
cmp
push
jp
call
ror
cmps
add
mov
popa
cmp
push
and
out
js
push
cmp
sbb
cs
cmp
outs
mov
xchg
mov
mov
sbb
loopne
sahf
loopne
xor
lods
push
mov
sahf
(bad)
sbb
mov
push
push
fistp
clc
fiadd
xchg
imul
xor
sbb
mov
call
test
out
sbb
dec
jg
push
rcr
js
xchg
inc
cdq
add
ret
jns
scas
je
xchg
push
jp
jo
mov
rcl
nop
cmp
fistp
inc
cmp
jle
cmps
ds
call
sub
jbe
fcmovb
mov
xor
stos
mov
cmp
repnz
or
push
xchg
popa
xchg
cmp
iret
cmp
rol
fs
(bad)
fisubr
je
dec
push
ins
cmp
xchg
push
int
mov
xor
nop
xchg
pop
mov
xchg
pusha
bound
je
and
lds
cmp
mov
mov
pop
call
in
std
sbb
imul
dec
mov
xor
xchg
inc
jmp
xchg
xchg
xchg
mov
push
inc
lds
bound
sti
sub
sub
outs
pop
enter
pop
jne
or
jg
jno
xor
ss
test
mov
clc
movs
(bad)
mov
mov
cmp
jp
(bad)
xor
test
mov
cmps
jle
or
or
mov
mov
in
push
xor
cmp
imul
dec
push
(bad)
jo
stos
je
mov
and
or
jecxz
jecxz
ds
fadd
inc
mov
push
xchg
and
iret
inc
and
test
push
lahf
jne
adc
or
inc
pop
retf
sbb
cmp
jmp
jle
adc
inc
pop
lea
xchg
test
or
leave
cmp
fs
mov
fxch
out
js
in
mov
mov
sub
test
pop
push
jnp
cmp
jbe
sar
cmp
dec
fisubr
data16
cmps
xor
xchg
lods
pop
pop
aaa
cmp
mov
or
pusha
in
add
idiv
cwde
idiv
scas
xor
popa
xchg
movs
xchg
cmp
push
std
icebp
hlt
out
aam
jmp
add
test
and
aad
mov
dec
pusha
sti
sbb
jge
sar
jecxz
outs
mov
clc
adc
scas
push
hlt
push
xchg
inc
xlat
xchg
test
ret
adc
movs
js
add
add
and
jp
sub
push
jmp
js
or
das
inc
sbb
aad
fcom
jne
dec
cwde
push
adc
nop
test
or
test
or
jl
inc
or
sbb
cmp
add
add
outs
rcl
es
inc
jb
and
stos
xor
outs
aam
xor
add
and
lods
fdivr
push
pop
jl
sub
dec
push
mov
fadd
fld
lock
adc
xor
inc
add
mov
or
clc
inc
std
dec
inc
or
and
jbe
xor
neg
xchg
shl
fmul
aam
mov
xlat
idiv
pushf
pop
out
jge
fisttp
inc
(bad)
mov
lds
push
push
add
sub
rol
cmp
setle
in
jge
sti
adc
xchg
jae
and
dec
leave
(bad)
sbb
or
dec
fdiv
test
and
and
iret
call
nop
ins
les
retf
xor
xchg
aaa
jle
add
xchg
fisttp
shl
rcl
popa
pop
add
sbb
daa
fild
cmp
loope
jge
push
pushf
and
rcl
repz
fs
(bad)
fucom
inc
and
into
push
sbb
or
fidivr
jl
daa
call
adc
pop
shl
push
push
inc
aam
mov
cmps
call
adc
ret
scas
jb
scas
pushf
add
fist
adc
out
aaa
aam
jmp
dec
jl
adc
int3
test
mov
jno
mov
jnp
das
jbe
cmc
pop
retfw
cmp
lock
xor
call
test
inc
retf
push
cmc
ins
xchg
mov
pushf
push
add
push
dec
sub
hlt
xchg
in
dec
cmp
es
loopne
jecxz
lock
sub
xchg
lds
mov
sub
mov
dec
push
jl
fsub
push
outs
pop
inc
and
and
test
mov
jae
cmps
jb
push
jns
lea
aaa
clc
pop
cmp
mov
sub
rol
jbe
js
nop
push
jle
xor
cmp
ficom
fwait
xor
xor
std
lahf
inc
push
push
std
sbb
mov
jno
xchg
shl
jmp
mov
xor
js
dec
aad
lea
jge
enter
cmps
fild
mov
mov
xor
xor
jle
pop
adc
cld
push
je
ficom
dec
cmps
movs
sub
mov
fldenv
sub
adc
jbe
add
ds
outs
mov
cmp
aam
adc
shl
int
mov
dec
push
fstp
sar
mov
jg
pop
sbb
stos
adc
call
and
test
sub
dec
cmp
or
dec
cmp
pushf
mov
jge
sbb
inc
pop
sub
adc
pop
int
test
les
fwait
sub
cs
xor
ins
and
add
add
popf
sub
jecxz
scas
pop
mov
(bad)
pop
fisubr
xor
fyl2x
ficom
clc
mov
stos
jno
mov
mov
xor
pop
outs
xchg
(bad)
fld
fwait
into
and
sbb
add
popa
jb
push
inc
jnp
mov
aaa
call
and
ja
jg
xor
cdq
in
jae
xor
js
leave
daa
mov
mov
and
and
daa
pushf
cmp
jae
cli
xchg
or
pop
ret
push
cmps
cmp
aaa
add
aaa
into
adc
in
sbb
daa
sahf
aad
or
sub
xor
test
cmp
pop
pop
data16
adc
pop
push
dec
frndint
add
retf
xor
popf
xchg
mov
mov
dec
int
mov
mov
xor
mov
xor
cli
repnz
push
jecxz
ins
jo
pusha
dec
aad
xchg
jmp
retf
sbb
jmp
adc
xchg
stc
out
sbb
pop
and
adc
push
push
inc
mov
dec
or
jmp
jo
ret
xor
leave
rcr
mov
jbe
cmp
and
je
jo
pop
dec
mov
pop
add
jp
inc
jecxz
cmp
lea
jne
sbb
(bad)
and
mov
jmp
cmc
mov
inc
cld
lea
dec
mov
mov
jnp
ficom
push
add
dec
xor
inc
and
mov
push
jl
clc
cmps
loope
out
mov
test
add
retf
(bad)
sbb
fdiv
jnp
and
ins
add
cmps
jbe
mov
movs
clc
fidivr
cmps
int3
sahf
add
jmp
mov
dec
test
inc
movs
mov
test
fcmovb
cld
loop
test
loopne
cli
sti
inc
sti
mov
cli
jp
adc
mov
mov
mov
(bad)
jmp
mov
lahf
cli
retf
je
add
dec
sbb
dec
fnsave
iret
pushf
mov
icebp
mov
loopne
mov
jmp
jne
sub
mov
les
and
mov
mov
pcmpgtb
sahf
and
loope
ins
push
mov
imul
jne
mov
jmp
inc
loop
inc
pop
daa
mov
ret
stc
mov
not
ja
and
adc
xchg
or
sbb
out
shl
push
dec
and
in
shr
mov
js
stos
mov
stos
push
sbb
or
cmp
in
cmp
jns
or
js
xor
mov
sbb
xor
xchg
sbb
xor
fwait
pop
scas
or
and
imul
pop
add
ret
push
shl
add
js
(bad)
aas
ins
sti
(bad)
xor
int3
sbb
in
mov
jp
and
and
push
stos
mov
pop
(bad)
pop
mov
pop
jmp
ffree
imul
add
or
ins
sub
loopne
inc
xchg
pop
cmp
adc
out
add
pop
popf
sbb
fldenv
and
push
adc
mov
rcl
hlt
lds
inc
lahf
jno
aaa
cmp
push
and
lds
sbb
scas
add
clc
aam
xchg
arpl
sub
pop
xchg
mov
push
mov
lods
es
xor
cmp
jg
dec
lock
push
mov
jns
push
xlat
fwait
jl
mov
stos
cmp
sti
push
mov
fsub
pop
jle
and
test
stos
outs
leave
test
icebp
out
out
cmp
es
clc
xor
mul
dec
mov
jecxz
sbb
lea
add
(bad)
xchg
sub
cmps
addr16
push
les
mov
push
test
mov
mov
xchg
mov
or
dec
jnp
add
add
int
ja
pusha
iret
mov
push
adc
jge
mov
push
fstp
pop
cdq
xchg
into
pop
push
imul
cli
icebp
pop
sub
pop
cmp
mov
inc
lods
adc
adc
mov
xor
in
std
icebp
jmp
jle
and
push
add
pop
pop
fstp
add
call
mov
inc
fisub
inc
add
lahf
xor
mov
mov
mov
scas
in
xor
cmp
dec
enter
pop
push
in
ret
rol
ja
outs
mov
fbstp
shr
push
push
rol
call
and
and
shl
arpl
iret
ins
stc
push
adc
sbb
(bad)
call
pusha
mov
cmps
(bad)
hlt
add
mov
(bad)
call
mov
sub
mov
int3
mov
lahf
adc
clc
clc
mov
out
call
jge
mov
dec
leave
jmp
mov
inc
std
out
les
test
mov
arpl
(bad)
popf
cmp
jmp
outs
xchg
ss
aas
sbb
mov
(bad)
imul
icebp
(bad)
loopne
xchg
cli
aad
add
pop
mov
js
pop
in
iret
adc
fstp
in
lahf
sar
push
ffree
int
push
je
imul
dec
and
fidiv
ss
nop
jae
ja
push
cmps
push
xor
outs
mov
mov
and
jecxz
jbe
pop
dec
adc
cmps
fs
mov
pop
call
mov
ficomp
xchg
dec
jle
popf
jns
vpmulhuw
mov
out
pop
cmp
xor
inc
das
or
stos
jo
mov
rcl
mov
mov
movs
dec
test
fcomi
adc
pop
mov
int
nop
xor
retf
fbld
pop
mov
rcr
cmc
test
adc
mul
jno
ss
ss
and
sahf
clc
sub
add
je
xchg
pop
retf
hlt
sti
inc
mov
rcl
adc
fcom
into
retf
sub
add
rol
retf
pop
jne
dec
xchg
ror
(bad)
(bad)
into
aas
ins
loope
pop
dec
(bad)
clc
and
sbb
lea
sbb
fbstp
inc
inc
or
cmp
jne
xor
jmp
cmp
cmp
data16
ins
jmp
xor
into
sub
int
arpl
neg
mov
xchg
in
add
or
addr16
je
dec
nop
es
mov
shl
mov
inc
mov
inc
sbb
or
lock
inc
add
movs
or
mov
idiv
imul
popf
out
scas
jl
xchg
stos
mov
lea
outs
jno
call
jns
mov
lods
(bad)
jne
xchg
sub
jmp
je
xchg
loope
dec
call
mov
pop
or
mov
xchg
cs
xchg
xchg
nop
mov
int
out
sub
stc
repnz
jge
add
mov
ins
mov
push
dec
pop
add
inc
cmp
inc
cs
js
mov
aas
jns
add
dec
adc
xor
sub
ror
push
pop
out
scas
xchg
or
inc
mov
sahf
sbb
ret
push
or
jbe
pop
cmp
mov
sub
test
cs
mov
fisubr
push
pop
retf
push
ret
or
pop
and
icebp
dec
dec
sbb
nop
call
(bad)
fist
jno
sbb
icebp
jnp
cmp
jne
mov
dec
ror
test
pushf
dec
pusha
mov
or
jge
mov
sbb
clc
jno
fcmovnb
dec
cmps
rcl
jl
cs
fild
or
loopne
sbb
and
mov
sbb
and
aad
mov
in
jmp
sbb
mov
and
cmp
or
popf
test
mov
xchg
jl
and
jg
add
jnp
out
dec
sbb
xor
mov
mov
mov
dec
jae
(bad)
pop
pop
adc
sub
popa
pusha
inc
jo
dec
jo
xchg
add
mov
movs
mov
call
pop
test
aad
out
stc
outs
frstor
ret
pushf
aad
stos
in
je
cwde
ins
addr16
mul
or
mov
mov
loope
sub
fs
cmp
sahf
popf
jo
sub
lds
sbb
ds
push
sti
sub
fisttp
mov
fmul
imul
dec
daa
push
add
out
pop
dec
inc
inc
cli
shl
aas
pcmpeqd
dec
mov
retf
sahf
pop
loopne
cli
call
fstp
xchg
xchg
popa
mov
in
xchg
jp
xor
shr
pop
shl
sbb
xor
sub
mov
adc
lods
add
mov
and
and
push
jge
mov
(bad)
clc
cmp
mov
shl
shr
sbb
mov
movs
and
fiadd
(bad)
in
popa
and
in
je
in
inc
cld
pop
xlat
call
mov
mov
shl
ins
cmp
pop
fistp
cmp
ret
dec
daa
and
int3
fistp
pop
mov
js
and
das
iret
xchg
add
movs
sbb
and
mov
ds
add
jae
mov
mov
mov
mov
and
mov
or
cld
mov
add
mov
jns
add
push
fadd
inc
dec
dec
adc
or
movs
jb
(bad)
mov
mov
mov
aas
mov
xor
sahf
push
das
sbb
jle
xchg
adc
ficom
arpl
ret
into
sub
es
xor
test
popa
repnz
push
dec
push
mov
test
repz
mov
jmp
test
mov
sub
add
sub
cmp
jmp
ret
out
dec
jle
lock
adc
inc
mov
cmp
retf
gs
rcl
daa
push
test
cdq
dec
call
mov
into
loop
jmp
jmp
add
out
pop
cli
outs
sub
(bad)
inc
rol
pop
(bad)
adc
cmps
jbe
shl
and
sub
mov
scas
fimul
sti
stos
xor
pop
fwait
push
push
sbb
sbb
add
sar
dec
and
jb
add
mov
mov
arpl
dec
and
test
xor
mov
or
mov
mov
in
stos
lock
push
in
add
cmp
fisubr
in
in
dec
das
pop
xchg
es
inc
(bad)
ss
cs
aas
push
lds
lods
push
or
enter
push
push
aam
ss
and
ret
pushf
mov
jmp
jg
dec
push
dec
cmp
push
pop
push
cmp
test
inc
or
fs
das
cs
add
push
cmp
pop
pushf
sbb
fsubr
ror
sub
ja
js
cmp
push
cmp
xor
test
pop
mov
sbb
cmp
pop
sub
fist
pushf
sar
enter
mov
js
in
jecxz
mov
div
bound
je
imul
mov
xchg
add
dec
pop
sbb
mov
inc
mov
jmp
add
adc
xor
pop
or
rcl
jg
dec
push
xchg
es
xor
(bad)
sbb
ret
dec
mov
xor
push
dec
adc
pop
jge
(bad)
loopne
sub
out
add
fbstp
sar
inc
jne
dec
add
and
and
test
xchg
pminsw
popf
(bad)
into
xchg
push
fsubr
fdivrp
mov
scas
out
fisttp
dec
mov
test
cmp
hlt
xchg
mov
push
pop
mov
(bad)
(bad)
pop
push
(bad)
dec
add
dec
hlt
push
sbb
mov
hlt
xor
pop
test
das
aaa
hlt
aad
xchg
repnz
mov
cmc
add
push
cmp
cs
inc
iret
leave
adc
sbb
sub
pusha
mov
jb
jno
xor
enter
lea
dec
fild
aaa
ret
js
push
sub
xchg
or
clc
cdq
ja
aad
jmp
(bad)
sbb
mov
pusha
neg
pop
mov
adc
sbb
ins
std
cmp
push
pop
out
sub
sbb
cmps
inc
je
in
sahf
cmp
mov
xchg
push
inc
jb
cmp
jmp
jbe
dec
call
loopne
arpl
adc
add
add
(bad)
daa
cmp
out
jl
fwait
shr
mov
mov
fbld
fisttp
inc
into
adc
jecxz
cmp
mov
cld
xor
out
cmp
sbb
mov
mov
outs
sbb
mov
(bad)
les
ss
imul
fcom
test
test
and
xchg
retf
mov
lds
jge
add
cmp
sub
mov
jo
imul
mov
cdq
out
dec
test
jmp
jle
enter
push
retf
and
aam
mov
lea
xchg
cmp
cld
test
arpl
mov
xchg
rcl
mov
sbb
fnsave
movs
ret
add
mov
jnp
jg
in
lahf
cmp
cmc
jne
call
dec
pop
inc
out
cmp
mov
repnz
mov
test
pop
pop
pop
add
pop
lea
or
retf
pop
push
pop
pop
repnz
dec
daa
mov
ins
out
ror
push
loopne
push
xchg
inc
div
and
inc
dec
loop
add
jnp
adc
std
mov
inc
cmps
ds
daa
fcom
cli
mov
loope
aaa
(bad)
and
sbb
adc
mov
int3
lock
jg
cmp
add
js
xchg
mov
vmovss
adc
mov
daa
fist
in
mov
in
add
xlat
int3
or
and
(bad)
addr16
push
lods
push
mov
in
xor
rcl
(bad)
retf
jnp
movs
daa
xchg
push
lahf
cmps
push
test
push
mov
jae
sbb
inc
(bad)
adc
out
jbe
outs
pop
loop
adc
mov
xchg
popf
inc
xchg
rcr
inc
arpl
jno
addr16
ins
jne
les
push
(bad)
(bad)
fisttp
push
cmp
fidiv
push
pop
lds
int3
sub
nop
fs
dec
push
in
sub
cmc
sub
cld
mov
and
fs
in
mov
(bad)
adc
arpl
push
adc
outs
lds
cli
leave
aas
mov
jbe
mov
dec
xchg
(bad)
xchg
mov
dec
and
out
shl
xor
mov
and
push
test
stc
in
mov
test
cdq
ret
xchg
daa
ror
jle
add
add
outs
adc
cmp
jl
sub
out
movs
push
and
fsub
aam
sbb
push
jle
mov
into
xor
jmp
mov
xchg
cdq
pop
aam
inc
add
add
sar
and
cmps
ins
and
js
div
and
jmp
(bad)
inc
daa
ss
mov
jne
pop
daa
popf
int
add
xor
push
push
or
cmc
imul
cmp
stc
push
call
dec
push
sahf
xchg
loop
cld
je
fwait
inc
and
cmp
fisttp
test
jmp
ja
and
rol
push
stos
push
imul
inc
mov
mov
lods
aam
adc
imul
(bad)
and
sub
sub
xor
test
add
dec
loopne
jns
std
push
jle
lock
loopne
clc
data16
(bad)
fstp
out
or
cs
ss
cwde
loop
popa
out
jae
int3
xor
sbb
dec
mov
nop
dec
cmc
lds
and
jle
enter
cli
mov
mov
stc
call
enter
enter
popf
adc
pop
loopne
retf
ja
and
arpl
mov
add
mov
jmp
test
(bad)
inc
push
xchg
fiadd
(bad)
jnp
shl
push
mov
ins
ja
pop
xchg
(bad)
xor
sbb
dec
ror
int3
ja
aas
push
pop
add
sbb
hlt
in
sub
sub
test
imul
out
inc
xchg
stc
les
pop
push
xor
arpl
ror
pop
in
jl
(bad)
mov
mov
mov
jbe
stos
cmps
pop
sbb
movs
out
push
ret
jge
jbe
(bad)
ss
jp
mov
add
lods
sub
inc
adc
loopne
mov
scas
call
loopne
mov
aas
(bad)
fxtract
jecxz
push
push
push
jmp
mov
in
addr16
push
out
cli
and
stos
mov
jno
fistp
mov
dec
loope
mov
xchg
fwait
shr
push
hlt
cmp
lock
shr
cmp
lahf
and
jae
stc
dec
xchg
push
cmp
sbb
sub
das
add
in
adc
xlat
mov
mov
cmp
jg
(bad)
or
push
and
in
dec
out
jl
ret
scas
cs
in
sahf
add
mov
cmp
xor
aas
aas
mov
fbstp
mov
fldl2e
retf
jge
sub
pop
add
pop
push
repz
movs
xchg
jle
mov
imul
inc
mov
loop
out
(bad)
imul
or
fld
jge
lock
repz
pop
lahf
cwde
ins
fcmovb
xchg
inc
les
pop
sahf
(bad)
mov
stos
push
lods
cmp
mov
into
push
push
les
sub
or
inc
sub
(bad)
cmovae
out
arpl
(bad)
es
out
movs
jmp
jo
push
pop
(bad)
pop
test
lds
int
outs
sbb
cli
stos
inc
inc
cmp
sbb
dec
jnp
test
retf
(bad)
ret
push
jmp
jmp
std
and
not
js
push
add
test
pop
xchg
cdq
inc
sub
pop
call
sahf
inc
andnps
gs
inc
xor
retf
pop
dec
lock
pop
fsubp
int3
add
nop
inc
push
rcl
jo
jmp
inc
jmp
lds
adc
dec
arpl
fimul
std
mov
and
mov
int
inc
bound
cmp
push
test
repnz
js
push
call
stos
push
mov
inc
mov
or
es
outs
sbb
and
fld
and
test
mov
mov
jo
mov
icebp
xchg
xor
ins
js
cmp
inc
nop
leave
or
ret
or
dec
jnp
jb
mov
mov
pop
aaa
out
cmp
aad
outs
enter
out
jecxz
mov
inc
aaa
(bad)
dec
inc
out
mov
xor
xchg
sub
sub
sbb
into
xor
imul
(bad)
and
(bad)
call
adc
fisubr
cld
leave
dec
lock
je
jns
ja
scas
mov
mov
dec
gs
cmc
xor
and
stos
pushf
sbb
cmp
outs
add
adc
aam
mov
test
div
stc
inc
sub
xchg
dec
bnd
data16
dec
xlat
sub
xchg
sbb
jge
fidiv
pop
aam
sub
xchg
dec
(bad)
adc
sahf
sub
inc
adc
cwde
ins
add
and
xor
dec
out
loope
push
pop
dec
je
inc
dec
sub
fs
nop
in
jp
pop
mov
imul
mov
xor
ror
int3
in
and
or
mov
xchg
mov
mov
or
ja
inc
cmp
arpl
add
xor
(bad)
mov
mov
mov
test
fdivr
(bad)
loope
repz
jge
sbb
retf
and
retf
mov
stc
imul
jb
jo
fisttp
dec
pushf
mov
into
xchg
add
int
push
in
add
xchg
cmps
xchg
(bad)
xchg
out
jbe
cwde
sbb
cmp
dec
sbb
cmp
xor
cdq
dec
les
popa
and
lods
dec
in
mov
jge
(bad)
pop
lea
lock
adc
adc
add
push
push
imul
cmp
sti
std
pop
popf
xchg
push
mov
push
mov
imul
add
ret
mov
cmp
or
pop
add
ret
bound
add
sub
inc
js
jno
scas
or
add
cli
mov
repz
adc
imul
pop
(bad)
mov
cdq
cmp
in
iret
or
jp
push
xor
fisub
xor
push
dec
mov
fwait
je
jb
outs
clc
shl
jns
mov
and
js
cmp
mov
lds
sbb
mov
ja
jle
push
sbb
cmp
stc
add
add
in
xor
mov
push
retf
pop
test
add
sti
gs
cmp
mov
stos
add
(bad)
(bad)
push
outs
out
mov
sub
scas
loopne
in
or
enter
push
and
or
scas
pop
stc
out
push
adc
push
loope
les
mov
es
in
sub
inc
sub
sub
push
(bad)
jo
xor
jge
push
jmp
sbb
jl
fsubrp
adc
sub
into
retf
pop
mov
cmps
sar
sub
(bad)
xchg
cli
stos
cmps
arpl
fistp
popf
sub
sbb
push
or
jl
cmp
add
jo
mov
std
cmps
div
sbb
rcl
jle
mov
nop
cmp
movs
test
mov
mov
add
fld
and
daa
push
mov
jbe
scas
xlat
or
xor
jnp
cmp
push
sti
mov
call
imul
push
sub
xchg
cwde
es
test
sbb
xchg
sub
in
sub
aam
xor
xlat
aas
pop
in
lods
push
bound
cli
jne
idiv
mov
retf
iret
jno
jmp
stc
push
loope
cs
jnp
mov
std
ss
mov
out
jmp
jae
push
bound
mov
mov
retf
fist
xor
movs
lock
jmp
add
mov
mov
adc
inc
mov
mov
dec
and
push
call
nop
jb
adc
sub
jns
adc
xchg
in
inc
sar
mov
cmps
shl
jne
fisubr
sub
imul
ret
adc
out
cmp
sbb
mov
imul
or
mov
cmp
jae
jp
push
cmp
sbb
dec
and
sbb
jns
push
sub
call
movs
mov
inc
stos
sub
leave
push
jecxz
ins
aad
fld
push
ficomp
sbb
jecxz
(bad)
aas
or
cmps
addr16
lds
test
arpl
jp
int
shr
or
xchg
jno
and
adc
out
scas
int3
addr16
pop
and
(bad)
std
mov
adc
cwde
sub
sbb
jl
fcmovb
int
in
cmps
xchg
frndint
(bad)
ret
das
xchg
pop
mov
(bad)
(bad)
xor
rcl
in
out
into
rol
add
mov
test
jb
dec
fistp
ror
imul
push
cmp
repnz
jl
xchg
call
sahf
xor
inc
jo
xchg
aad
xor
cmp
inc
xchg
cmp
dec
retf
(bad)
xor
sbb
scas
shr
cmc
add
or
lods
mov
cmps
sar
je
out
sub
fstp
sahf
push
test
adc
sub
stos
fbld
pop
mov
jmp
push
fidivr
out
inc
je
les
ret
push
jecxz
push
ret
int
dec
mov
push
lods
and
push
mov
js
inc
lahf
js
or
xchg
add
ficomp
and
sub
push
jno
shl
pop
jl
arpl
out
sub
sub
lds
cdq
sub
imul
add
adc
pop
ds
mov
js
inc
fiadd
sbb
mov
(bad)
fdivrp
aam
cmc
xchg
xchg
ror
mov
mov
cdq
mov
nop
cmp
imul
cmp
out
data16
out
popa
scas
jns
sub
(bad)
lahf
scas
and
fsubr
xchg
pop
push
repnz
inc
sbb
or
xchg
push
call
call
ins
jmp
push
sti
cdq
das
pop
adc
xor
dec
xchg
jl
arpl
imul
dec
in
cmp
and
sbb
sub
fsubrp
cmp
sbb
retf
push
adc
ss
and
add
scas
dec
sti
jns
xor
or
lahf
jmp
test
dec
jno
mov
sahf
(bad)
out
dec
test
push
cmp
(bad)
jmp
mov
push
test
xchg
dec
out
inc
sbb
sbb
jmp
inc
push
test
cmp
jbe
imul
dec
inc
pop
pop
mov
cdq
jg
sahf
add
outs
push
popf
fst
out
stos
mov
cli
inc
out
xor
push
rcl
jns
repnz
cmps
jp
pop
xchg
jnp
inc
pop
into
sbb
inc
in
push
mov
push
mov
inc
jbe
pop
mov
mov
shr
test
lea
in
enter
call
fisub
lds
repnz
hlt
add
adc
(bad)
dec
dec
xchg
mov
inc
test
fcomp
stos
mov
add
scas
hlt
mov
sub
mov
mov
ja
clc
es
test
arpl
mov
mov
daa
test
outs
rol
sub
sub
sar
push
mov
push
lods
(bad)
(bad)
movs
not
icebp
push
popa
lea
movs
clc
pop
(bad)
cwde
sbb
xchg
dec
loop
les
ret
out
jecxz
into
aas
movhps
fdiv
lock
rcr
dec
clc
jecxz
sub
(bad)
nop
(bad)
repnz
push
sub
scas
inc
mov
push
pop
bound
cld
jmp
add
mov
cmp
daa
ja
ins
pop
hlt
mov
push
in
mov
cmps
outs
es
cli
sbb
pop
xchg
inc
jne
pop
mov
cs
xchg
retf
and
je
sub
int
mov
push
mov
sbb
pop
rol
jmp
hlt
jl
dec
cmps
mov
ss
ds
arpl
aam
inc
push
or
jmp
or
xchg
in
or
iret
pop
inc
test
push
mov
cmp
test
stc
test
fisubr
mul
mov
sbb
mov
push
dec
fisubr
mov
iret
aaa
pop
fsub
xchg
cmps
leave
in
repnz
push
cmp
mov
das
lods
dec
imul
and
ret
xchg
sahf
or
and
aad
dec
adc
push
push
cmp
pop
cdq
add
sub
(bad)
loope
add
stc
mov
pop
dec
cld
cmp
mov
xchg
cmp
jmp
adc
sub
das
(bad)
gs
push
adc
aas
(bad)
ins
mov
cmp
fadd
in
imul
jecxz
inc
stc
outs
ror
cld
cmp
sbb
cmp
mov
lahf
and
div
lods
retf
enter
pop
cmps
jle
pop
int
rcl
sbb
xchg
push
sub
dec
div
daa
call
adc
aas
popf
popf
and
scas
in
cwde
dec
(bad)
inc
sbb
(bad)
and
icebp
int
in
xchg
hlt
add
mov
rol
popf
ss
and
jge
or
pop
dec
inc
loopne
sar
int3
xchg
sbb
in
repz
inc
pop
push
aam
mov
cmc
fwait
lods
scas
cmc
sti
imul
out
idiv
pop
adc
lea
and
jae
inc
(bad)
inc
pop
mov
pop
leave
push
xor
ins
int
call
imul
push
outs
in
jmp
daa
dec
stos
or
fisubr
dec
outs
mov
(bad)
push
rcr
clc
(bad)
ins
and
or
mov
shr
xchg
scas
loope
mov
scas
xchg
mov
ret
jbe
sub
push
push
cld
inc
fucomp
or
iret
push
fdivr
adc
adc
ficom
inc
jge
and
adc
retf
loop
nop
mov
cmps
shl
loop
div
and
pop
popa
lahf
and
pop
cmps
xchg
push
inc
sti
(bad)
adc
pop
pop
mov
cs
stos
cwde
mov
sub
mov
fadd
mov
xchg
cdq
jmp
(bad)
fadd
(bad)
mov
sub
mov
ins
in
dec
inc
mov
cs
push
fs
add
mov
movs
(bad)
xlat
not
inc
stc
pop
push
loop
xor
dec
jmp
fstp
add
fisttp
pop
cmps
cld
jecxz
mov
xchg
loope
adc
call
std
inc
inc
fucomp
fcom
pop
ins
add
in
out
mov
jge
jb
aas
data16
jmp
daa
call
das
mov
stos
mov
jl
pop
(bad)
cmp
xor
fnstenv
add
fadd
out
dec
xor
imul
(bad)
inc
shr
out
shl
pop
inc
mov
ret
mov
add
call
pop
xor
aam
in
mov
cdq
and
xor
pop
xchg
dec
shld
pop
mov
imul
jp
ror
sahf
sbb
sub
inc
and
test
xchg
pop
inc
retf
addr16
push
jecxz
mov
mov
jnp
jmp
pop
iret
pop
jbe
cli
ja
sbb
xchg
sahf
dec
sti
hlt
(bad)
mov
outs
out
mov
retf
pusha
scas
dec
cmp
or
jge
inc
(bad)
cmps
or
icebp
cmps
mov
jno
aaa
mov
mov
test
lds
fistp
jo
sti
sub
psubq
lock
mov
or
dec
fcom
fimul
mov
and
ins
and
inc
(bad)
fnsave
loop
mov
xchg
mov
hlt
dec
push
mov
xchg
jmp
inc
ja
das
in
neg
xor
pop
data16
adc
ror
out
mov
int3
mul
out
sub
in
and
out
sub
mov
(bad)
xchg
pop
pop
iret
dec
or
icebp
ret
rcl
movs
popa
adc
and
mov
(bad)
int
mov
jmp
sbb
inc
pop
popa
cmps
cwde
add
dec
fbstp
cli
xor
movs
imul
xchg
push
adc
xor
adc
sub
jb
sub
lods
and
sbb
mov
sub
stos
les
add
sub
sub
mov
data16
popw
push
nop
stos
or
aas
mov
loope
stos
call
js
dec
push
sub
sub
sub
adc
mov
addr16
cmp
mov
rcr
dec
js
cdq
mov
sbb
or
push
pop
stos
mov
jmp
and
sbb
ins
sar
cmps
addr16
movs
mov
mov
xor
mov
push
ja
inc
dec
dec
pop
pop
out
(bad)
jecxz
repnz
call
nop
aad
fidiv
mov
xor
push
add
ss
std
and
sahf
outs
fiadd
jp
out
xchg
les
xchg
jmp
inc
jmp
sbb
out
shl
in
cmp
cmp
and
dec
aam
cmp
and
add
mov
leave
jmp
jo
hlt
add
sub
dec
adc
lods
and
imul
retf
xchg
sahf
jne
fidivr
sbb
loopne
rcr
aas
mov
or
dec
rcr
and
loop
dec
push
das
sub
stos
je
push
lods
add
pop
shl
(bad)
mov
stos
sbb
inc
push
xlat
or
dec
pop
fst
ss
xchg
inc
xor
and
mov
cwde
push
and
add
xor
cmp
shr
jbe
pop
je
retf
push
mul
pop
dec
adc
adc
iret
ss
ficomp
(bad)
(bad)
pop
movs
xchg
sbb
jae
(bad)
(bad)
sub
mov
sbb
fist
rcr
mov
hlt
sti
mov
xchg
sub
mov
mov
mov
jecxz
in
cmc
mov
push
retf
xchg
mov
pushf
icebp
push
test
in
pop
or
shl
data16
or
cmp
adc
xchg
sahf
sti
int
xchg
pop
jl
aad
call
mov
retf
xchg
imul
add
sahf
push
loop
out
adc
lahf
int
add
neg
push
jns
jnp
adc
or
fbld
mov
inc
js
sbb
repnz
cmp
outs
pop
aad
daa
ins
xor
mov
jp
rcl
mov
mov
das
hlt
ror
shl
(bad)
mov
sub
sub
fdiv
jge
loopne
lea
adc
add
aaa
test
popa
neg
jns
movs
movs
inc
push
xchg
inc
lock
test
xchg
pop
sbb
xor
mov
imul
enter
fnstcw
test
sub
and
daa
cs
pop
enter
pop
hlt
ja
es
sub
ror
mov
leave
div
lds
jmp
sub
push
inc
pop
popf
inc
ins
xchg
xlat
xor
leave
mov
pop
jae
mov
or
xchg
xor
cdq
es
pop
imul
and
push
cmp
cwde
cmps
jno
clc
jnp
adc
retf
or
xor
fadd
or
add
jbe
call
cmp
in
retf
ret
loopne
or
xchg
cmp
inc
arpl
sbb
call
xchg
cld
enter
xor
jecxz
jbe
mov
scas
lods
push
cmp
adc
push
or
scas
sar
add
(bad)
xor
sub
aas
(bad)
in
push
out
jge
mov
cmps
push
sbb
push
mov
push
or
fs
and
outs
aam
sbb
mov
jo
(bad)
xlat
(bad)
sbb
fnsave
inc
stc
dec
xchg
push
xchg
(bad)
jnp
les
mov
adc
(bad)
js
and
inc
popw
or
fidiv
or
inc
or
js
ror
into
push
xor
ss
mov
inc
fisttp
adc
mov
push
mov
scas
mov
int
jb
rol
or
out
or
sub
cmp
call
mov
and
xchg
sbb
xor
xchg
aad
leave
sbb
scas
stc
cmps
inc
mov
in
ja
dec
lods
xor
sbb
sub
in
movs
cmp
pushf
mov
test
pop
add
imul
sub
aad
sub
pop
push
or
add
addr16
stos
xchg
(bad)
xor
cmp
mov
inc
or
out
in
xor
xor
out
ss
add
ins
xchg
arpl
movs
rcl
fild
int3
inc
fdiv
or
movs
cmc
xor
imul
lods
push
jnp
arpl
pop
push
(bad)
inc
aas
mov
dec
das
adc
fld
test
imul
jmp
xchg
push
out
jnp
pop
aad
gs
retf
dec
xchg
cmp
mov
jge
dec
jo
lods
xor
mov
cmc
push
jns
push
sub
sub
pusha
sub
mov
stos
(bad)
mov
sub
mov
(bad)
fcomp
or
cmp
movs
or
out
xchg
pop
dec
pop
test
fisubr
ins
mov
ja
aas
push
fistp
adc
gs
(bad)
xor
mov
push
jne
pop
into
imul
add
pop
pop
mov
sbb
call
dec
jmp
or
and
jbe
dec
xchg
dec
xor
cmp
aas
aad
cmp
sub
popf
loope
mov
jne
int3
add
xchg
les
rol
xor
lahf
xchg
jbe
into
hlt
and
aad
adc
(bad)
cmp
add
pushf
jbe
shl
sub
or
pop
lods
gs
xchg
mov
mov
mov
add
mov
daa
addr16
xor
mov
loop
mov
push
xchg
outs
test
jmp
mov
xchg
sbb
xchg
pop
cmps
add
shr
cmps
jbe
cmp
cwde
xor
mov
dec
clc
popf
das
dec
enter
mov
in
lea
inc
jnp
jns
daa
adc
in
mov
mov
inc
sbb
or
xchg
cld
out
stc
push
out
xchg
pop
outs
ret
or
sub
jp
(bad)
dec
or
int3
sbb
jno
jp
loop
dec
popf
dec
dec
push
test
jbe
hlt
mov
push
cwde
iret
mov
daa
imul
push
and
xchg
(bad)
aam
rol
ins
dec
xor
aaa
icebp
punpckldq
out
mov
mov
adc
not
jmp
bnd
out
sbb
retf
dec
cmp
inc
inc
ficom
stos
inc
or
rcr
arpl
test
in
arpl
add
out
aad
push
adc
mov
and
xchg
cmc
adc
imul
je
cmp
xchg
adc
xchg
sar
push
inc
sub
and
aaa
jecxz
sbb
mov
and
jle
sar
jae
xor
xchg
inc
mov
push
dec
aad
sbb
cmps
leave
dec
clc
fcomp
xchg
xchg
lahf
retf
add
aas
ret
or
(bad)
(bad)
adc
dec
clc
mov
xchg
stc
aam
movs
sbb
mov
push
(bad)
loope
adc
sbb
sti
xor
ss
pop
push
sub
test
cmp
ficom
stos
ds
adc
jo
mov
ins
rol
and
mov
retf
xchg
or
in
fisubr
and
popa
push
inc
inc
mov
dec
ret
fcomp
shl
and
dec
mov
js
call
sbb
xchg
daa
shr
stos
inc
mov
fnstsw
out
test
pop
fcomp
push
(bad)
in
mov
push
dec
outs
imul
(bad)
(bad)
jmp
mov
sbb
push
pop
xchg
sbb
inc
clc
iret
pop
das
mov
loop
mov
push
jg
stos
(bad)
cmp
mov
push
scas
sbb
mov
ss
cli
mov
push
stc
pop
data16
cmps
ss
xchg
add
inc
inc
sbb
mov
pop
rcl
std
mov
call
scas
mov
inc
inc
jo
sub
aam
dec
mov
fstp
inc
fwait
scas
xchg
aam
cs
fild
retf
and
adc
out
sub
or
inc
cmps
(bad)
stc
out
push
or
mov
shl
sub
or
arpl
push
xchg
and
sbb
and
pop
test
daa
adc
ss
mov
rol
stos
arpl
imul
jl
pop
xchg
adc
test
adc
loop
mul
add
mov
(bad)
icebp
add
nop
xchg
lods
mov
or
test
push
xor
shl
pop
mov
pusha
jle
push
stos
leave
pop
sbb
inc
pop
jl
mov
sti
mov
pop
(bad)
fist
bound
(bad)
loopne
rcl
mov
and
xchg
inc
push
sbb
sub
inc
inc
nop
ds
out
push
fsub
leave
stos
sub
mov
outs
sub
jp
(bad)
hlt
mov
mov
jno
cmps
mov
outs
xor
mov
cmp
inc
iret
rcl
icebp
enter
sbb
jns
std
les
add
xchg
jns
outs
inc
sbb
cld
sub
loopne
stos
dec
(bad)
sub
leave
bound
sub
mov
fstp
xchg
(bad)
push
inc
pop
xor
movs
mov
jmp
lods
out
(bad)
cwde
(bad)
ficom
or
jp
mov
sub
adc
sbb
nop
dec
mov
cwde
(bad)
push
dec
push
ins
mov
mov
mov
retf
dec
sbb
push
sbb
(bad)
mov
fidiv
daa
in
test
in
fcmove
fcmovnu
scas
addr16
mov
out
fst
into
out
add
or
jp
mov
or
retf
inc
push
sbb
shl
dec
(bad)
lock
ja
mov
or
fisttp
xor
test
stos
imul
pusha
inc
mov
cmp
repz
addr16
sbb
mov
sbb
xor
out
mov
adc
cmp
ds
nop
test
sub
add
pop
movs
add
and
cmp
lods
lock
je
gs
mov
xchg
stos
scas
cmc
and
fwait
ss
in
inc
imul
mov
sbb
mov
mov
push
push
add
xchg
je
push
in
std
adc
inc
jbe
mov
dec
push
out
fisttp
shr
in
cs
sbb
sub
in
pop
retf
fcom
cmpxchg
push
jg
or
mov
(bad)
xor
push
ror
xor
ja
xchg
test
fisttp
shr
ret
imul
mov
imul
pop
lock
aad
fs
shl
xchg
scas
push
jp
in
xchg
sbb
xor
push
push
add
mov
scas
or
push
sti
push
aam
inc
push
jge
rcl
mov
ret
nop
push
ins
retf
bound
mov
dec
xchg
xor
jmp
cmp
pop
add
shl
mov
xchg
add
ret
pop
xchg
es
icebp
jecxz
sbb
add
xchg
out
jmp
ret
sub
fwait
cs
(bad)
out
pop
scas
mov
call
pop
out
stos
mov
repz
jmp
sbb
push
sbb
out
nop
in
sub
idiv
dec
je
imul
add
rol
sbb
aam
out
outs
and
pop
test
int3
mov
mov
mov
cmp
cmp
mov
adc
xchg
test
push
test
(bad)
call
xchg
rcr
jb
dec
push
leave
pusha
mov
push
jnp
dec
add
push
dec
scas
xchg
gs
outs
sbb
add
lods
xlat
inc
and
fisttp
fstp
pop
std
inc
pop
pop
ss
test
dec
adc
adc
rcr
leave
mov
aad
cmps
pop
lea
ret
std
in
or
pop
push
out
pop
retf
or
aam
data16
cmp
and
enter
test
fwait
mov
sbb
or
cmps
mov
pop
scas
mov
sbb
mov
add
test
loope
mov
retf
call
xlat
sub
jno
pop
(bad)
lods
aas
mov
xchg
pop
arpl
add
inc
lods
adc
stos
cmc
arpl
jmp
fld
repz
es
adc
push
loopne
(bad)
aas
(bad)
pop
jnp
push
cmp
mov
ins
xchg
add
aam
and
shr
lds
lock
cld
push
stc
cld
popa
stos
and
movs
mov
push
jnp
lea
cli
mov
pop
leave
mov
scas
icebp
ret
dec
test
fstp
cmp
mov
mul
mov
ds
dec
cmp
push
sar
ret
push
out
or
xchg
xchg
push
(bad)
cmps
pop
cmp
inc
push
mov
inc
xchg
xor
adc
mov
mov
test
pop
pushf
sbb
xchg
hlt
fistp
or
pop
jp
add
mov
pop
test
jno
into
mov
jle
(bad)
data16
mov
lahf
jmp
adc
xchg
nop
jmp
or
jne
xchg
in
ins
push
ds
jge
sbb
push
(bad)
sub
mov
and
std
leave
pop
imul
jle
pop
arpl
(bad)
repnz
mov
xlat
not
aaa
and
fiadd
mov
repz
push
mov
inc
cmp
mov
aaa
int
pusha
jmp
lahf
jno
pop
adc
sti
dec
mov
test
and
mov
cmp
lahf
(bad)
outs
mov
mov
pop
retf
pusha
add
jbe
sub
and
jecxz
inc
lea
movs
push
es
aad
call
out
shr
jne
mov
loopne
or
sti
jl
mov
ficomp
add
in
xchg
(bad)
outs
jne
sub
es
stc
mov
pop
push
ins
enter
imul
xchg
pop
je
pusha
not
test
inc
adc
stos
adc
inc
stos
cmp
(bad)
pop
in
pusha
inc
ds
pushf
leave
fdiv
push
fwait
cmp
dec
dec
sahf
in
mov
pop
retf
addr16
xor
cmc
arpl
inc
gs
mov
outs
jmp
mov
or
pusha
cmps
or
mov
adc
ja
mov
imul
inc
inc
xchg
(bad)
jg
jp
inc
mov
fs
outs
add
pop
sub
pop
ret
les
mov
or
aam
xchg
pop
test
jl
xchg
repnz
xchg
ret
mov
mov
fdivr
jl
out
add
pop
add
pop
xlat
push
enter
loopne
(bad)
and
aad
inc
jle
add
aam
aas
or
sub
scas
bound
fimul
std
dec
jecxz
retf
(bad)
lds
fdivr
inc
mov
add
bound
pop
lods
fnstsw
jl
add
cld
sbb
out
jl
sub
out
adc
xor
push
mov
sbb
nop
xor
rcl
inc
(bad)
imul
jmp
stc
mov
mov
mov
adc
cld
xchg
push
jl
add
cmp
xchg
and
out
and
xor
pusha
aaa
sub
icebp
jmp
xor
test
test
dec
lds
xchg
aad
fdivr
xor
xchg
ja
mov
cmps
mov
inc
mov
mov
sbb
fnsave
and
jno
push
adc
fisttp
pop
ret
mov
inc
mov
lahf
pop
es
or
mov
in
sbb
lea
ins
ffree
das
jle
test
dec
xor
call
dec
sti
out
push
nop
fst
xor
jge
sbb
jns
push
jne
cs
rcr
in
jle
ins
sti
fsubr
jno
test
lahf
xor
push
mov
adc
nop
test
fwait
mov
add
inc
push
je
movs
pmulhuw
retf
sub
int3
inc
imul
aad
inc
outs
jb
push
call
aas
outs
jp
fild
adc
pop
add
jl
mov
xchg
idiv
pop
fimul
dec
hlt
cmp
arpl
lds
dec
push
add
icebp
xchg
stos
div
in
cmps
leave
mov
push
adc
(bad)
aam
enter
mov
sbb
mov
add
pop
fimul
(bad)
mov
rol
loopne
xchg
es
imul
mov
mov
sbb
mov
cdq
aam
xchg
popa
nop
mov
cs
ins
jmp
dec
inc
pop
jge
dec
retf
push
loopne
adc
push
es
pop
xchg
inc
mov
(bad)
xor
cdq
jl
pop
cmp
or
into
aam
frstor
sbb
rcr
pop
rcl
aam
jo
imul
push
xchg
imul
call
adc
or
retf
hlt
sub
fild
es
dec
pop
(bad)
pop
mov
mov
mov
add
xchg
(bad)
mov
js
ins
in
std
or
xchg
mov
cmp
push
mov
pop
xor
push
sub
jp
mov
imul
fnstenv
ficom
fcomp
out
dec
jecxz
inc
xchg
cdq
or
jns
xchg
shr
sbb
fidivr
into
(bad)
shr
addr16
dec
dec
and
sti
ret
jp
movs
shl
retf
mov
mov
fild
inc
sub
cs
push
test
jbe
and
pushf
ss
xchg
mov
and
sbb
jmp
cmp
ins
fbstp
mov
stc
sbb
cwde
lds
xlat
pop
(bad)
in
inc
out
sub
mov
xchg
dec
adc
push
pop
xor
cmc
(bad)
and
sbb
mov
jge
sbb
sar
pop
rcr
mov
xor
call
or
stos
xchg
sar
dec
push
jne
or
pop
jp
cmc
dec
(bad)
pop
sbb
scas
in
mov
jb
pop
inc
mov
add
data16
cli
je
sub
jo
scas
adc
in
sahf
test
jne
mov
(bad)
xor
xchg
imul
fcomp
and
add
jmp
movs
mov
or
cld
xor
mov
pop
dec
mov
std
mov
lahf
xor
push
iret
(bad)
test
add
jmp
in
adc
adc
pop
or
cmps
pop
(bad)
and
aaa
xor
xor
inc
pop
mov
imul
arpl
sahf
add
sbb
jmp
jns
sbb
xchg
jne
inc
xchg
or
xchg
pop
in
adc
in
sbb
mov
jbe
inc
(bad)
cwde
movs
inc
cvtps2pd
aaa
test
dec
gs
pop
loope
arpl
dec
scas
mov
enter
or
add
imul
pop
adc
dec
icebp
outs
je
mov
sahf
mov
test
inc
mov
movs
sbb
cmp
ds
ja
hlt
cli
xor
cwde
fimul
mov
mov
jle
and
inc
fmul
cmps
lods
dec
push
daa
lds
mov
push
adc
push
outs
bound
bnd
call
push
pop
movs
push
xchg
jmp
xlat
or
scas
cmps
xchg
dec
aam
inc
mov
xchg
js
test
cmp
add
sbb
sbb
jo
xchg
jle
mov
cwde
in
mov
sbb
out
js
pusha
dec
jge
inc
in
or
in
jmp
push
and
sub
mov
or
mov
mov
sub
mov
add
mov
sub
fidiv
dec
repnz
mov
and
in
popa
test
sbb
adc
push
and
fnstsw
dec
call
add
mov
jmp
aad
daa
rcl
pop
lods
cwde
sub
ins
sub
aas
sbb
sub
daa
sbb
inc
mov
pop
ret
push
out
call
add
mov
pop
sub
inc
sbb
sub
pop
mov
pop
dec
xor
xchg
mov
ret
mov
sbb
mov
jo
neg
pop
dec
or
retf
test
pop
mov
leave
jo
mov
dec
push
xchg
push
dec
(bad)
in
push
sbb
outs
pop
scas
jae
ja
jno
cli
out
out
mov
pop
stc
stc
movs
push
ror
inc
sar
jne
scas
pop
and
into
fmul
pop
jnp
stos
mov
in
shr
aas
dec
(bad)
mov
stos
xor
ret
pop
lods
movs
hlt
js
jne
and
lahf
sub
movs
or
jl
mov
rcr
sub
jmp
lods
add
mov
push
(bad)
cli
pop
mov
jge
ins
je
lea
out
mov
inc
sbb
mov
cmp
add
lahf
cmp
cmp
retf
fcmovne
ins
call
mov
icebp
mov
inc
and
and
sub
enter
repz
pushf
push
jge
jne
mov
stos
fcomp
jne
xchg
adc
aam
sub
mov
sti
xor
mov
dec
mov
inc
test
xchg
jb
mov
adc
ss
(bad)
jmp
dec
jns
loop
pop
cmps
pop
cdq
iret
push
mov
aam
out
or
mov
mov
loop
cli
cs
cmp
mov
iret
iret
mov
aam
int
jns
and
mov
push
fstp
jae
and
mov
(bad)
inc
xchg
mov
or
push
lods
cmc
fidivr
daa
out
add
je
mov
call
mov
inc
or
repnz
pop
bound
jns
stc
mov
movs
pop
bound
xchg
cmp
sbb
push
push
dec
sub
dec
mov
xchg
push
push
dec
rol
xor
addr16
add
outs
jnp
aas
adc
sbb
cmps
jl
mov
mov
dec
call
push
imul
cld
(bad)
jbe
hlt
cmp
stos
repnz
dec
jmp
sub
dec
(bad)
xor
lds
imul
bound
retf
pop
mov
repnz
adc
push
mov
xchg
je
in
(bad)
push
push
pop
sub
bound
push
sbb
lock
call
and
cmp
test
or
pop
pop
nop
xchg
xor
sbb
and
ins
in
and
out
sub
cmp
adc
mov
jo
rcr
(bad)
out
xor
pop
lods
mov
ret
sbb
xchg
(bad)
pop
fdivr
in
xchg
retf
push
outs
inc
idiv
xor
pop
add
xchg
jne
(bad)
pop
jle
push
sbb
sbb
pop
cld
add
rol
mov
les
push
xor
imul
lods
cwde
retf
js
push
push
not
push
dec
mov
fld
cmps
out
sub
stos
sahf
add
sub
repnz
xor
pop
xchg
inc
inc
sub
cdq
daa
call
bswap
sti
add
jb
jae
imul
dec
add
xor
xchg
bound
mov
in
xor
mov
xor
mov
outs
aas
xchg
repz
pop
lods
sbb
jle
stc
aam
lahf
pop
jbe
stos
fsub
and
or
and
add
cmp
inc
js
retf
pop
dec
inc
pop
inc
icebp
fist
mov
enter
les
mov
cwde
pop
imul
test
hlt
jp
jecxz
repz
cmp
mov
out
adc
xor
cmps
sbb
jnp
add
xor
xchg
jg
enter
fnstenv
daa
stos
dec
lds
loopne
loopne
pop
adc
aad
les
js
adc
pop
test
adc
mov
or
mov
rcl
jge
or
fdiv
xlat
nop
or
sub
add
pop
xor
inc
jle
fcom
adc
mov
rol
pop
jne
inc
scas
jp
sub
outs
stos
xor
dec
mov
and
adc
mov
sbb
test
cli
les
inc
rol
jecxz
in
adc
sbb
jle
jmp
mov
loopne
jp
mov
inc
int3
jp
xor
retf
test
int
fnstsw
sbb
pop
or
fstp
adc
js
push
cmp
xchg
(bad)
fcom
daa
call
add
ret
mul
scas
xchg
(bad)
push
fs
test
mov
ss
jne
jnp
dec
inc
cmp
pop
int3
sti
cs
pop
(bad)
cmp
lods
sub
cld
xchg
cs
xor
jnp
sar
adc
repz
test
bnd
xchg
add
xchg
outs
lods
push
mov
pop
test
test
pop
mov
mov
dec
mov
fucomi
aas
jbe
xor
cdq
pop
pop
cld
jl
add
outs
or
pusha
inc
ret
ins
jge
std
push
add
in
bound
mov
mov
cmp
push
adc
mov
bound
adc
shl
outs
mov
and
mov
xchg
stos
lds
xor
pushf
loop
jbe
sahf
call
in
push
push
cmps
call
fwait
retf
(bad)
out
jno
popf
pushf
jg
sbb
pop
fbld
mov
jmp
loopne
push
jle
retf
aaa
or
xor
loop
adc
xlat
imul
mov
mov
adc
(bad)
fldcw
ret
push
xor
fmul
ret
sub
pop
scas
test
push
ins
add
test
push
out
adc
push
mov
push
cmp
push
add
add
inc
scas
xor
jl
pop
enter
movs
(bad)
pushf
das
push
jmp
or
cmc
icebp
pop
sahf
sar
ins
data16
movs
test
mov
call
push
(bad)
test
leave
mov
icebp
lock
test
adc
push
mov
xchg
mov
lods
and
xor
nop
(bad)
fdivr
jmp
pop
test
lods
dec
and
push
push
cmps
add
dec
sub
leave
adc
mov
jmp
adc
jbe
cmp
test
push
icebp
imul
add
mov
or
push
(bad)
(bad)
fnstenv
test
dec
inc
inc
cmp
and
popa
mov
and
cwde
daa
aam
div
data16
loop
xchg
out
out
test
mov
scas
sub
push
out
outs
test
pop
xchg
fs
int
cmp
and
add
and
push
mov
adc
cmp
and
ss
shr
repz
daa
nop
add
mov
mov
add
imul
lahf
mov
cld
int3
xchg
dec
outs
pop
fdiv
mov
jbe
int3
jmp
inc
or
test
aas
adc
pop
sbb
mov
jp
sub
mov
dec
xor
sub
call
mov
cld
mov
dec
xchg
rol
add
sub
mov
pushf
jns
repz
sub
out
shl
jb
jmp
mov
retf
aas
call
adc
jge
jmp
mov
push
mov
rsqrtps
fsubr
mov
mov
in
fcom
mov
(bad)
(bad)
cmps
mov
mov
adc
xor
or
in
jl
fidiv
mov
mov
inc
push
pop
sar
or
in
sub
mov
jp
mov
ins
jne
lods
arpl
stc
ja
dec
fdiv
fimul
xchg
outs
mov
and
dec
pop
movs
rep
pop
pop
push
out
sbb
dec
(bad)
push
ins
aas
out
sbb
ror
(bad)
int3
mov
pop
push
test
jmp
fnstenv
mov
enter
jae
push
clc
jge
jle
or
bound
mov
xchg
(bad)
fsubr
mov
sub
jo
pop
cwde
adc
pop
add
inc
loop
iret
inc
push
and
gs
jmp
xchg
dec
outs
mov
mov
xchg
sti
sbb
jno
loopne
dec
call
in
mov
retf
cld
mov
ror
sbb
jp
push
jp
out
imul
dec
aaa
leave
xlat
shl
nop
punpcklwd
neg
jmp
ds
xor
xchg
xor
jbe
jmp
fld
call
mov
bound
mov
cmp
(bad)
push
sar
jae
ret
mov
cmc
test
mov
push
das
sbb
fwait
cld
add
mov
aad
inc
mov
ds
aas
stos
fwait
loope
icebp
mov
test
scas
sub
mov
push
pusha
mov
jp
mov
jl
call
mov
jb
lods
cmp
cli
jl
sbb
mov
lock
ret
retf
adc
and
test
repnz
loopne
add
aas
ds
mov
lds
xlat
mov
push
scas
sub
xor
leave
and
repnz
fidivr
sbb
in
out
and
in
jmp
and
mov
fistp
mov
call
cdq
icebp
sub
cmps
pop
hlt
fistp
faddp
jmp
push
pop
js
add
inc
push
in
adc
xchg
pop
cmp
jb
mov
jbe
or
cmc
fisttp
pop
test
dec
mov
iret
push
xchg
push
mov
hlt
and
and
sbb
fist
jno
cmp
cmp
adc
repnz
push
and
ror
adc
mov
pop
loop
or
or
sahf
jmp
sbb
inc
(bad)
mov
inc
xchg
lods
lea
xor
mov
lds
jge
and
cmp
mov
sbb
out
sbb
out
jb
cmp
repnz
xchg
pop
cdq
bound
jp
xor
xchg
mov
ret
arpl
outs
add
aaa
js
mov
cmp
mov
xor
mov
mov
pop
add
pop
lods
pusha
add
loopne
sub
adc
in
ins
scas
lock
mov
cmp
repz
into
loope
dec
cs
(bad)
sub
out
push
aaa
imul
or
addr16
pop
add
test
cmp
push
adc
scas
mov
cmp
inc
pop
ss
dec
rep
scas
aas
push
mov
ret
push
stos
and
outs
mov
mov
pushf
pop
mov
mov
repz
sub
aad
sbb
fwait
or
mov
(bad)
fwait
inc
jecxz
in
cmp
sbb
xchg
cmp
imul
xor
add
xchg
xchg
arpl
jle
pop
(bad)
(bad)
(bad)
push
mov
cli
xor
das
inc
xor
call
xchg
popf
clc
jo
or
js
inc
and
mov
hlt
stos
cmc
call
mov
das
dec
fwait
jns
xchg
jae
sar
jae
fwait
jmp
dec
add
dec
jns
xchg
cmp
fcmovbe
mov
mov
pop
clc
push
fdivr
cli
outs
fcmovb
and
push
stos
adc
dec
sub
addr16
xchg
sub
xchg
jle
mov
sub
add
scas
mov
out
jbe
lods
in
aas
imul
mov
pusha
jecxz
xchg
mov
test
pop
mov
(bad)
jmp
not
sub
fprem1
mov
xchg
lock
cmc
push
cmp
ret
mov
cli
mov
inc
ins
jbe
pop
xchg
jecxz
cmp
pop
pusha
mov
loope
lods
mov
cmp
out
jnp
xor
mov
es
xor
sahf
les
jno
outs
mov
mov
inc
arpl
je
dec
pop
arpl
in
mov
cmp
mov
pop
stos
jp
rcl
and
call
inc
xchg
aas
mov
adc
adc
stos
shl
popf
jno
sub
loop
movs
mov
or
cmps
pop
xchg
enter
hlt
add
mov
inc
sahf
adc
fs
loope
add
iret
cmps
enter
sub
and
outs
inc
cmp
sub
mov
jae
mov
inc
add
inc
iret
adc
mov
add
arpl
jge
sti
inc
add
xchg
dec
sar
dec
neg
das
les
ss
in
mov
jecxz
xlat
pop
mov
sub
dec
clc
add
test
adc
cmps
lea
dec
cs
or
cmp
fisttp
mov
dec
mov
cwde
je
push
cmps
and
jmp
cmp
sbb
add
push
pushf
les
jmp
push
sub
xor
mov
xbegin
sbb
in
mov
dec
mov
fucomi
xchg
(bad)
mov
mov
jle
jp
add
dec
xor
mov
pop
or
pop
(bad)
cmp
and
lods
cmp
sub
jle
into
cmp
sar
pop
jmp
pop
mov
inc
in
jne
add
mov
out
test
scas
in
ins
popf
pop
in
rep
bound
imul
dec
test
loop
pop
jmp
jo
std
f2xm1
je
not
cs
sar
lds
ror
out
in
test
call
lods
call
pusha
jno
lds
ficom
mov
fild
sbb
lahf
sbb
dec
inc
pop
repz
mov
pop
jnp
cwde
jecxz
dec
jmp
dec
or
cmp
mov
out
int3
sar
int
dec
pop
or
jg
xchg
xchg
(bad)
inc
mov
into
and
ret
hlt
int3
sub
lea
ficom
push
adc
lahf
stc
jmp
sahf
and
pop
inc
dec
and
mov
xchg
clc
or
cmp
add
pop
jge
bound
das
pop
pop
sar
mov
fistp
push
and
add
std
xor
mov
jp
icebp
add
sub
push
fisub
repnz
fnstenv
loope
arpl
push
dec
aam
or
loopne
or
inc
jae
mov
push
jg
inc
xor
dec
in
add
shl
cmp
mov
sub
xchg
cli
add
mov
es
xor
or
mov
in
sub
push
lds
movs
pushf
int3
cmp
xor
and
imul
adc
and
mov
fcom
pop
jmp
stc
out
jns
lods
icebp
xor
or
ror
cdq
sbb
cdq
pop
loopne
jle
loop
mov
mov
add
call
cmp
mov
cdq
and
pop
xchg
out
aad
mov
aad
mov
ins
cmp
jle
fbstp
adc
jae
push
dec
inc
push
jno
cdq
fistp
sub
push
fadd
or
in
icebp
loop
ret
jbe
ins
lods
cli
push
sub
sub
test
sbb
push
sbb
rol
int
and
push
add
adc
and
(bad)
adc
les
lahf
inc
sub
loop
cmp
inc
addr16
push
ins
mov
mov
sbb
pop
fdiv
jle
enter
pop
imul
mov
mov
loopne
sbb
mov
test
pop
movs
test
shl
push
loop
push
daa
loop
jmp
sbb
jl
int3
pop
aas
cld
call
push
outs
pop
or
shr
pop
loop
mov
push
popf
sbb
jmp
push
es
xchg
mov
ret
sub
mov
fisubr
pcmpeqb
sti
or
std
lahf
push
jge
mov
mov
cmp
sub
mov
mov
stos
jmp
pop
inc
pop
push
(bad)
(bad)
xor
imul
cmc
outs
jp
mov
adc
mov
cmp
sub
stc
mov
jns
cwde
push
mov
fucomip
sbb
push
in
retf
rcl
and
mov
(bad)
jmp
add
cmp
inc
dec
mov
out
mov
dec
mov
sahf
pop
clc
push
add
add
mov
gs
and
retf
dec
ins
(bad)
in
inc
arpl
icebp
cmps
and
push
aad
enter
or
pop
or
push
cmp
inc
and
call
je
and
dec
inc
adc
test
int3
call
es
pop
mov
pop
dec
(bad)
not
push
clc
or
and
addr16
pop
xchg
repnz
and
test
movs
repnz
mov
(bad)
jb
ret
pop
cwde
cli
(bad)
xchg
pop
rcr
idiv
xor
addr16
dec
pop
aas
dec
xlat
sbb
and
int
jecxz
pop
in
stc
pop
or
sbb
sub
(bad)
xor
aaa
adc
js
push
mov
cli
leave
outs
imul
lea
aaa
mov
bound
mov
lock
xor
mov
nop
(bad)
jmp
add
imul
cmp
push
or
mov
aad
jns
hlt
ds
inc
leave
sbb
sbb
daa
cmp
mov
cmc
mov
add
pop
int
push
lods
lods
sub
push
(bad)
repnz
shl
mov
and
pop
jb
adc
cdq
mov
adc
mov
push
mov
cdq
mov
pop
dec
push
fwait
xchg
mov
xor
sub
imul
call
sbb
in
loopne
lods
or
retf
aaa
pushf
fidiv
mov
sti
mov
imul
sbb
mov
mov
test
mov
dec
ins
add
or
mov
and
pop
shr
xlat
mov
inc
or
mov
stos
sbb
ins
sbb
retf
and
stos
xor
aam
hlt
out
outs
loopne
xchg
in
popf
shl
inc
jb
(bad)
xchg
mov
inc
dec
das
bound
mov
xchg
fsubrp
ins
jmp
push
jne
jne
jb
sub
sbb
jne
mov
sub
fiadd
(bad)
lods
pop
ror
jge
sti
jge
pop
inc
es
cmp
and
lds
cdq
jmp
mov
lea
sub
lods
push
add
push
je
cs
lahf
popf
popa
mov
dec
out
sahf
sbb
loope
out
mov
(bad)
inc
sti
mov
dec
fcmovbe
mov
leave
mov
push
jb
gs
pop
sub
call
aad
xor
inc
cs
cmp
sub
fbld
frstor
dec
loope
xchg
in
imul
icebp
adc
(bad)
jnp
(bad)
mov
(bad)
ins
xchg
mov
lods
push
dec
rcr
shr
nop
sub
adc
dec
test
mov
mov
call
jecxz
out
jns
out
rcl
pop
mov
cmp
push
ss
push
aaa
push
retf
shl
int
in
int3
imul
fiadd
repnz
out
cs
sub
shl
inc
cwde
pushf
xchg
jno
add
jl
js
add
push
mov
fbld
test
les
xchg
lods
inc
and
cmp
inc
push
lds
push
sar
inc
dec
cmp
aaa
sbb
mov
stos
dec
sub
pop
mov
pusha
retf
outs
mov
les
pop
cwde
and
push
outs
(bad)
xlat
iret
sti
mov
mov
les
jb
pop
xor
or
(bad)
in
int3
lock
adc
adc
cli
push
test
int
hlt
sysexit
mov
cmp
xor
cmp
outs
loope
add
jge
or
sub
xchg
out
mov
inc
clc
in
inc
dec
jmp
mov
movs
ja
fisttp
js
lods
fucom
or
xor
pop
and
cmp
jge
push
sahf
jmp
rcl
jmp
loopne
add
fucom
loop
jecxz
fisub
pop
sbb
xchg
jle
adc
rol
outs
sub
mov
in
jg
xor
popa
imul
mov
pusha
cmps
push
mov
adc
aam
sbb
and
xchg
repz
add
enter
ret
jmp
mov
jp
mov
mov
sub
rol
mov
push
popa
mov
jns
sbb
mov
les
sbb
pop
(bad)
mov
push
mov
push
mov
inc
adc
xor
(bad)
aam
inc
or
mov
mov
xchg
jns
mov
ret
or
dec
inc
call
popf
sub
mov
sub
jae
or
call
test
sub
sub
dec
push
or
sub
cmp
xor
enter
daa
xchg
xchg
push
imul
stc
ret
movs
mov
or
popf
adc
enter
shl
xchg
les
adc
mov
loope
pop
xchg
out
sbb
pop
fistp
add
or
rcr
sbb
js
loope
(bad)
xlat
jae
scas
inc
retf
sub
or
push
lods
fldenv
ds
out
mov
fldlg2
fdivr
(bad)
lea
les
pop
xchg
mov
retf
adc
xor
aam
in
pop
repz
and
xchg
inc
or
nop
cs
pop
leave
lods
pop
adc
cmpps
mov
into
mov
sbb
xor
mov
aam
ins
mov
inc
push
lock
sub
shl
fisttp
jb
in
sbb
dec
push
sub
mov
push
sbb
(bad)
push
gs
dec
xchg
push
in
push
or
mov
dec
sbb
or
in
lods
adc
ds
mov
pop
dec
sub
dec
jb
inc
imul
xchg
ret
call
mov
mov
xor
pop
pop
jbe
mov
sub
scas
pushf
mov
sti
cmp
fucom
out
mov
(bad)
push
push
and
cmp
loop
xor
std
stos
sub
cmp
inc
ja
cmp
push
lea
retf
stos
lahf
push
pop
add
push
leave
retf
lds
imul
jmp
or
test
cmp
gs
shr
sti
das
(bad)
sub
xchg
cmp
push
cli
push
push
and
es
jbe
xor
and
pop
pop
mov
add
pop
sbb
sub
pop
rol
ret
aad
sbb
retf
(bad)
mov
xor
repnz
or
xchg
and
pop
and
cli
fwait
call
iret
sub
and
xor
mov
(bad)
mov
sbb
pop
sub
in
add
mov
(bad)
sub
mov
dec
sub
sub
push
sub
fwait
adc
mov
dec
(bad)
aad
test
xchg
ins
xor
scas
test
jmp
jp
inc
xchg
std
or
rep
cmp
and
mov
jne
inc
adc
in
cld
xchg
dec
pop
xlat
shl
mov
xchg
xlat
mov
add
mov
retf
mov
stos
bswap
imul
sahf
(bad)
jge
pop
push
jb
(bad)
movups
mov
push
xor
mov
sbb
push
or
pop
test
cmp
pop
pop
inc
mov
jg
mov
ror
lods
push
push
mov
sar
xchg
in
xor
jle
popa
stos
mov
add
cmp
xchg
mov
adc
and
loop
add
push
iret
mov
fld
and
ins
fbld
jne
pop
inc
(bad)
dec
push
hlt
inc
movs
sar
shl
jge
movs
test
imul
loopne
or
loop
lahf
dec
jae
ja
mov
jl
add
movs
xor
cld
popf
aaa
adc
sbb
loope
loop
add
mov
push
cmp
adc
lods
and
lahf
call
dec
test
and
in
aad
mov
popa
xchg
pop
nop
cs
push
dec
mov
outs
and
std
(bad)
fdivr
add
std
pop
movs
in
int
sahf
adc
mov
cmp
push
or
push
jle
push
push
and
and
mov
dec
xor
xchg
ins
add
lahf
retf
mov
jbe
sbb
test
call
movs
imul
scas
push
xor
test
add
test
pop
mov
mov
ds
aaa
stos
aad
push
lds
retf
das
push
cs
jl
out
das
xor
(bad)
stc
xlat
xor
cmp
cmp
icebp
mov
xor
(bad)
adc
mov
sbb
pop
addr16
(bad)
jae
or
fldl2t
stos
cmp
sub
cmp
fisub
in
push
sub
mov
push
pop
mov
cmp
(bad)
dec
xchg
arpl
fdiv
(bad)
pop
xchg
ret
dec
cmp
call
test
pop
sar
pop
cmp
jb
nop
jne
mov
sahf
sub
out
pop
inc
mov
cdq
push
nop
sbb
push
gs
jno
mov
test
(bad)
sub
jbe
push
mov
inc
sub
das
jnp
jg
mov
mov
dec
fwait
push
call
mov
bound
in
mov
cmps
mov
rol
movs
xor
sub
cmp
enter
stos
outs
(bad)
mov
scas
in
jge
sbb
mov
fisubr
xchg
call
setge
sahf
pop
mov
lods
xor
cmps
add
outs
fs
test
(bad)
or
mov
push
pop
xchg
mul
stc
sbb
retf
cmp
sar
cmp
jo
dec
add
mov
ja
je
jns
fcomi
repnz
push
mov
aad
call
enter
nop
pop
repnz
jns
inc
add
cdq
jnp
movs
in
gs
sahf
add
(bad)
(bad)
adc
push
jno
jo
sbb
or
sub
mov
popf
mov
inc
movs
int
mov
xchg
pop
aaa
adc
jne
popa
jb
mov
mov
push
adc
stos
sbb
(bad)
sti
mov
lock
out
xor
jp
inc
inc
ret
clc
adc
sbb
call
mov
out
shl
inc
dec
inc
mov
loope
pop
scas
daa
movs
imul
aas
in
ja
mov
in
out
inc
dec
sbb
in
mov
push
stos
ret
cmc
mov
test
gs
cs
xor
bound
mov
cs
add
xchg
jl
jge
sub
(bad)
push
cmps
fwait
and
push
out
pop
add
fs
gs
rol
mov
call
push
icebp
inc
mov
shr
adc
dec
adc
cmc
sar
leave
mov
push
xchg
xchg
fwait
dec
xchg
pusha
cmc
push
jg
jp
rcr
ja
mov
jbe
mov
out
inc
adc
dec
test
repnz
mov
(bad)
(bad)
call
shr
mov
mov
test
(bad)
push
inc
mov
xchg
sbb
call
mov
fwait
jmp
xchg
out
or
lahf
imul
mov
sub
js
test
arpl
mov
jo
push
in
iret
inc
(bad)
cmp
and
(bad)
cwde
sbb
and
push
and
repz
je
inc
add
dec
or
mov
dec
jle
lock
ret
jo
stos
dec
ja
cmps
add
js
and
jge
ins
mov
pop
add
add
and
shr
ss
test
scas
pop
sub
aam
(bad)
cmp
popf
push
xor
sub
pushf
std
test
movs
mov
sub
push
xchg
sbb
test
mov
add
xchg
mov
and
test
sub
dec
cs
or
inc
or
(bad)
cmp
push
xor
sahf
or
xor
xchg
imul
xchg
in
jp
sub
cmc
cmp
bnd
mov
in
in
xchg
jg
mov
cmps
fcmovne
pop
(bad)
ficomp
cmp
adc
cmps
aas
jle
loop
sti
loop
imul
movs
out
nop
cli
iret
jnp
jle
stos
jo
mov
popf
inc
mov
sub
xchg
in
sbb
pop
sbb
cmp
shr
hlt
dec
adc
ret
aam
sbb
arpl
imul
add
std
iret
sub
js
movs
aam
ins
jecxz
jae
(bad)
lock
jo
ret
mov
mov
pop
(bad)
rcl
cmps
jns
neg
add
dec
daa
fwait
mov
lea
sub
aaa
imul
jg
addr16
jmp
std
add
add
pop
mov
add
mov
sbb
in
mov
mov
push
icebp
ficomp
mov
(bad)
or
lods
mov
xchg
mov
sbb
and
jle
pop
pop
and
adc
or
ds
fbld
mov
sbb
inc
das
scas
leave
ss
cli
and
pop
and
push
(bad)
xor
xchg
jns
mov
in
call
rcr
dec
cli
push
push
ds
lock
jb
mov
orps
(bad)
outs
push
and
push
cwde
dec
xchg
jecxz
aaa
movs
aas
jmp
loop
movs
mov
fist
fdivrp
mov
sbb
repnz
(bad)
xor
xlat
xor
pop
jbe
adc
add
clc
pop
sub
jbe
add
push
ins
cmp
xchg
inc
imul
mov
fadd
pop
inc
les
addr16
stos
(bad)
pause
pop
inc
push
and
pop
jns
idiv
(bad)
stos
sub
mov
and
gs
sbb
mov
push
je
sbb
shl
mov
adc
bound
gs
mov
adc
popf
pop
loopne
inc
pop
test
cmc
sub
jl
dec
sbb
adc
imul
not
fstp
aam
pop
inc
rcr
bound
xor
into
lahf
loop
les
or
xchg
mov
hlt
imul
hlt
mul
cmp
pusha
inc
(bad)
pop
(bad)
in
cmps
call
mov
test
pop
xchg
stos
bound
movs
scas
mov
xchg
jp
pusha
out
fdiv
xchg
add
mov
test
pminsw
loop
(bad)
shr
sti
cmc
xchg
xchg
pop
aad
xchg
mov
push
sti
jno
icebp
movs
aad
mov
fisub
xchg
mov
push
dec
and
mov
or
retf
adc
adc
out
push
ret
adc
(bad)
adc
cmp
fs
inc
inc
push
pop
das
sbb
cmp
xchg
fdivr
jns
pop
shl
jns
mov
and
pop
mov
push
mov
ror
lods
pushf
pop
sub
clc
mov
popf
mov
mov
adc
push
fcomp
js
lods
shl
aas
jecxz
sbb
mov
mov
fimul
inc
out
sbb
push
inc
retf
lods
nop
pop
loop
add
call
jmp
loop
fisttp
pop
mov
pop
in
aad
push
lea
jae
cli
mov
fst
fistp
mov
out
inc
aad
scas
(bad)
fist
ror
lods
sbb
aam
mov
mov
mov
push
vpavgw
and
xchg
xchg
les
into
out
xchg
stos
sti
push
pop
pop
fcmovu
loop
mov
dec
imul
add
stc
and
pusha
xor
lock
in
jbe
int
movs
std
loopne
stc
jmp
cmp
jg
xor
aas
mov
(bad)
stc
dec
(bad)
sub
or
push
jecxz
mov
pop
or
mov
data16
push
adc
or
push
imul
mov
sub
add
mov
mov
test
inc
rcr
ins
add
jo
jg
pop
xchg
out
xor
je
retf
and
clc
push
adc
into
and
outs
imul
lods
sar
aas
loopne
daa
ins
into
test
push
push
test
imul
mov
xlat
xor
inc
mov
jne
push
int3
xor
daa
push
int
xor
push
mov
ja
xor
jecxz
cs
inc
jmp
mov
sub
cmp
add
lods
call
xor
data16
add
mov
inc
fisub
icebp
add
std
sbb
aam
repnz
pop
jmp
icebp
push
push
and
popa
mov
add
retf
cmps
ins
or
sbb
int3
test
pop
push
(bad)
pusha
sub
sbb
loope
(bad)
mov
out
dec
inc
or
aad
mov
jg
push
inc
in
add
cli
daa
dec
(bad)
cs
lea
dec
lods
jb
shr
das
dec
pusha
jmp
dec
in
xchg
lahf
dec
pop
push
dec
mov
mov
sti
and
mov
push
imul
int3
cmp
stc
repz
dec
add
xchg
dec
dec
pusha
es
adc
sbb
pop
xor
lds
xor
lahf
mov
jmp
loope
cdq
mov
int
xchg
mov
stc
std
mov
stc
shr
adc
push
mov
arpl
popf
(bad)
dec
imul
dec
std
jmp
jg
push
jbe
les
fs
and
push
pop
ja
das
out
xchg
pop
sbb
fxam
cmp
ret
ins
loop
dec
xor
std
ret
leave
mov
sahf
add
sub
test
adc
sub
xchg
int3
mov
sub
ror
popa
daa
fnstcw
shr
dec
cli
sbb
ds
push
arpl
(bad)
mov
and
test
xchg
mov
add
repnz
cdq
adc
sub
shr
es
mov
mov
jge
dec
dec
std
inc
lods
lods
scas
or
(bad)
pop
iret
loope
popf
test
mov
push
adc
inc
sbb
sub
enter
jb
aaa
mov
sbb
lahf
mov
inc
sub
inc
mov
mov
dec
cmp
and
add
fst
stc
or
xchg
popf
fisttp
in
(bad)
in
leave
push
inc
add
cwde
xchg
(bad)
add
push
cmp
std
cmp
jg
dec
test
es
aaa
jge
push
pop
imul
mov
inc
outs
jle
not
sub
or
adc
xor
dec
xchg
mov
fwait
sbb
movs
mov
add
add
jbe
pushf
jmp
jmp
call
jl
pop
stc
add
add
pop
xchg
add
aas
aam
xchg
into
loope
mov
or
lds
adc
aam
pop
(bad)
jle
frstor
mov
daa
leave
loopne
push
xchg
dec
fldenv
pop
jp
stc
inc
push
push
xor
rcl
xchg
sbb
je
rol
pop
jg
sub
xchg
loopne
add
xchg
cmp
in
ret
xor
inc
jno
cmp
stc
jge
int
fs
jno
pop
movs
rol
jbe
and
cmp
cmp
mov
mov
(bad)
mov
mov
imul
(bad)
and
mov
fld
xchg
xor
fld
pop
outs
jecxz
adc
or
jmp
inc
call
lahf
int
add
lds
mov
xor
jbe
add
adc
fidiv
ss
lds
mov
push
push
sub
jb
and
lods
or
mov
repnz
cmp
cmp
xor
sti
in
test
push
lahf
shl
call
mov
jmp
xor
sub
mov
sbb
mov
aad
sbb
cmp
xchg
int3
mov
es
xchg
call
scas
mov
sub
pop
ficom
jp
cld
not
xchg
jns
jbe
mov
loope
das
mov
inc
rol
scas
aam
pusha
jmp
(bad)
dec
mov
mov
loopne
mov
cmp
retf
and
push
xor
inc
xchg
mov
add
je
test
mov
fs
in
jbe
in
push
cmp
(bad)
mov
xchg
xor
inc
out
jp
(bad)
sbb
rol
ss
pop
repz
push
cmp
fadd
retf
hlt
aam
or
imul
ds
neg
lea
stos
test
mov
jp
mov
jecxz
dec
mov
out
cmp
xchg
das
add
loopne
ret
xchg
(bad)
push
xor
sub
inc
add
gs
sbb
lea
into
sub
dec
sbb
mov
sbb
pop
ins
repnz
and
add
pop
push
or
mov
fbld
jo
inc
xchg
dec
or
imul
fcom
and
sbb
imul
pop
sbb
or
outs
or
repnz
iret
inc
cwde
jne
push
inc
jl
xor
fist
xor
add
test
mov
out
adc
push
dec
scas
push
shr
push
sub
jae
sbb
push
jg
jg
ins
xchg
loope
mov
lods
add
cld
rcl
int
mov
retf
shl
scas
push
out
add
jno
mov
lahf
popf
adc
sub
mov
out
(bad)
aam
cmps
sbb
jle
fadd
lock
out
scas
ss
out
push
lods
cwde
adc
lds
xor
fsubr
addr16
or
pop
pop
pop
test
mov
ret
xchg
jge
fdiv
push
dec
clc
(bad)
mov
fwait
push
call
or
inc
mov
jl
stos
sub
je
or
push
sub
mov
push
cwde
inc
fisubr
retf
adc
int3
pop
into
dec
pusha
cmp
ror
cs
loope
mov
mov
inc
rcl
cmp
popf
push
jb
mov
add
test
push
pop
adc
and
not
movs
ds
stc
pop
out
jecxz
xchg
mov
outs
jno
shr
ret
cmps
retf
sub
sbb
cmc
xchg
jge
push
adc
dec
mov
cli
mov
into
xor
inc
pop
mov
jg
xchg
or
repnz
or
xor
jp
out
pop
shl
lods
cmp
mov
push
jnp
push
jns
mov
test
cmp
mov
out
jecxz
adc
mov
cmp
aam
ins
fldcw
es
jmp
nop
mov
add
es
mov
mov
sub
jle
(bad)
mov
add
mov
lock
loop
push
jbe
and
ins
int
cmp
mov
cmp
test
cli
scas
rcl
std
push
dec
inc
cmps
inc
jno
sub
fs
mov
retf
push
mov
scas
movs
loop
mul
in
xchg
add
(bad)
(bad)
cmp
aas
lock
add
fimul
mov
mov
push
and
adc
les
fdiv
pop
jnp
xchg
cmps
std
add
sub
adc
ret
inc
mov
pop
push
jae
int
jge
outs
lahf
sbb
test
mov
add
or
mov
ss
xchg
fmul
jp
call
xchg
cld
inc
out
jmp
push
shr
scas
push
adc
adc
rol
push
mov
pop
mov
add
mov
std
cmp
dec
shr
(bad)
test
cld
icebp
movs
retf
fadd
mov
cmp
or
clc
add
ret
(bad)
clc
pop
add
or
pushf
or
sbb
mov
outs
mov
ins
rcl
out
mov
or
push
leave
add
sbb
mov
dec
(bad)
cld
test
jae
inc
inc
aas
fwait
xor
xor
push
adc
add
jbe
cs
mov
or
fldcw
repnz
sbb
imul
mov
and
sbb
adc
cli
xchg
mov
dec
sub
clc
cmp
sub
add
gs
aad
mov
ret
pop
(bad)
fcom
retf
and
xchg
jmp
pop
mov
popf
popf
iret
iret
repnz
and
sar
mov
xor
cmp
mov
es
and
inc
int3
cli
and
lea
lea
rol
leave
mov
dec
and
inc
cmp
cmc
cdq
sub
out
add
out
repz
lock
(bad)
xor
mov
ds
xor
mov
rcl
imul
cdq
dec
out
cmp
(bad)
mov
addr16
pop
mov
xchg
test
lods
mov
aas
fadd
enter
xchg
and
out
sub
pop
xor
in
loope
das
mov
daa
test
daa
into
jmp
shl
sub
push
repnz
js
movs
push
arpl
xchg
adc
adc
lods
imul
out
imul
add
add
cmps
sbb
dec
xchg
cmp
ins
push
or
call
cmp
or
cmp
push
xor
mov
pop
shl
jmp
scas
int3
pop
xor
sub
xor
cli
adc
push
mov
das
push
xchg
add
adc
xor
mov
jbe
ret
lods
sub
ss
(bad)
mov
dec
jp
out
fs
ins
fucomp
sbb
ins
pop
adc
pop
mov
jo
jmp
movs
mov
in
xlat
push
pop
and
inc
mov
outs
mov
ss
sub
pushf
fs
call
bound
add
imul
loope
cmps
pop
stos
add
xlat
dec
jae
add
jge
int
imul
push
add
jbe
outs
xchg
sti
push
test
jmp
or
cmps
outs
jo
retf
fild
fdivr
pusha
mov
ds
mov
cmp
int
cdq
sti
das
mov
pop
in
pop
fs
mov
mov
push
adc
nop
sbb
or
cmc
mov
pop
xchg
in
pop
push
ss
jl
js
jle
mov
es
nop
stos
xchg
or
or
and
shl
pop
pushf
jge
sub
out
cwde
in
pop
rcl
mov
popf
lods
mov
adc
inc
out
mov
in
dec
mov
inc
jle
mov
nop
inc
xchg
bound
clc
gs
ret
dec
repz
out
in
mov
sub
inc
sti
rcl
std
mov
cld
dec
aam
xor
mov
in
xchg
in
pop
ja
fld
cmp
push
aas
gs
xlat
jp
push
shl
mov
jp
test
lock
js
fistp
jge
fs
aad
icebp
cmp
and
fld
mov
cmps
pop
or
push
mov
out
jns
and
xchg
and
in
mov
jne
inc
call
pop
push
fst
sti
loop
in
into
test
pop
xor
outs
sbb
push
hlt
test
and
inc
xchg
daa
ins
push
test
mov
pushf
sar
pop
cmp
cs
fnstsw
mov
inc
dec
fstp
pop
xor
xor
adc
mov
dec
sahf
jae
jnp
sbb
or
inc
and
enter
(bad)
out
retf
icebp
not
xchg
xor
data16
jge
pop
cmp
mul
(bad)
inc
pop
sub
xchg
mov
xchg
nop
stc
pop
push
mov
cmp
stc
loop
adc
sar
or
outs
hlt
(bad)
mov
out
push
mov
jecxz
outs
mov
retf
sti
mov
imul
adc
cmp
push
jecxz
nop
leave
xchg
xchg
shl
sahf
retf
cmp
or
or
imul
inc
fs
aad
add
push
sbb
and
lahf
mov
hlt
xchg
jae
inc
sbb
ds
xchg
mov
cmp
or
jg
loop
xchg
test
lea
inc
pop
pop
dec
xchg
sbb
cs
add
sbb
ss
xchg
stos
push
pushf
ror
scas
aad
repnz
adc
jmp
in
fld
movs
jg
cmp
fist
test
add
sahf
jmp
jge
sub
and
dec
hlt
fldenv
out
and
sbb
adc
daa
dec
popf
loopne
lods
test
push
xchg
xor
aaa
jle
and
xor
pop
adc
cmp
sbb
xchg
jge
aaa
mov
fnop
pop
mov
shr
int
fild
lock
dec
bound
cwde
into
pop
cdq
(bad)
scas
out
repz
hlt
jl
sub
aas
add
mov
push
scas
inc
add
xor
clc
and
rcl
push
or
popf
dec
hlt
daa
jbe
dec
stc
outs
dec
pop
cli
xor
ret
call
xchg
adc
inc
sbb
or
or
fst
inc
outs
sbb
and
and
adc
adc
add
enter
(bad)
ds
stc
inc
repnz
lea
push
sti
fwait
(bad)
adc
mov
or
movs
xor
and
push
fldcw
nop
sbb
ret
push
in
sub
or
pop
cmp
imul
xor
es
sub
or
sbb
or
or
test
mov
scas
je
dec
imul
ins
std
lods
mov
pop
add
mov
(bad)
mov
inc
(bad)
push
dec
sbb
jmp
jb
ret
pop
retf
adc
imul
mov
sbb
cmps
dec
push
(bad)
adc
and
je
(bad)
sbb
mov
add
xor
push
not
mov
fbstp
(bad)
and
lods
clc
mov
fnsave
imul
(bad)
into
cwde
or
movs
and
enter
imul
fwait
adc
mov
mov
mov
dec
ss
mov
xor
retf
cli
ret
cld
jns
retf
sahf
fcomip
sub
push
(bad)
jle
mov
dec
jae
(bad)
push
push
scas
inc
and
fstp
inc
loop
adc
ret
sub
mov
jl
xor
cmc
(bad)
cs
mov
mov
add
xor
imul
loope
cmp
mov
lods
out
mov
add
mov
in
adc
scas
xchg
or
jns
stos
addr16
xchg
aaa
(bad)
fcmovnb
dec
lea
cli
sbb
das
gs
aaa
mov
jl
push
xor
push
or
fstp
add
test
dec
bound
cmp
(bad)
out
nop
in
push
fdivr
jbe
inc
mov
(bad)
popa
test
scas
or
mov
sti
retf
scas
int
in
adc
mov
push
movs
sub
and
push
inc
loopne
mov
dec
push
rcl
sbb
mov
push
cmp
mov
dec
lea
xor
rcl
push
xchg
sbb
imul
jmp
add
lods
inc
pcmpeqb
fs
xchg
loopne
iret
test
ss
ret
shl
or
lds
scas
lahf
or
out
push
add
sub
xchg
pop
pop
ds
daa
jg
js
mov
addr16
xor
jl
fld
fcom
or
(bad)
and
scas
stos
int
mov
add
and
call
pop
adc
cmp
and
push
test
enter
(bad)
mov
int
aas
xor
ins
pusha
mov
pop
(bad)
jmp
and
xor
pop
das
sbb
ins
pop
pushf
push
sbb
test
mov
and
jae
mov
mov
daa
sbb
call
jge
out
inc
out
mov
aam
pop
fild
cmp
mov
sub
loopne
stc
bswap
(bad)
pop
xor
dec
xchg
hlt
jmp
xchg
mov
test
inc
xchg
sbb
xor
mov
cmp
xor
or
out
bound
or
xchg
adc
cwde
sub
int3
mov
push
push
stos
dec
or
push
sbb
outs
mov
mov
sbb
mov
ror
jne
push
xor
aaa
xor
adc
aad
int3
xchg
gs
rcl
xchg
mov
sbb
sti
or
ss
sbb
aas
(bad)
mov
push
call
mov
or
sub
(bad)
in
into
je
dec
imul
add
movs
stos
clc
sbb
or
cli
data16
fwait
rol
cmp
movs
xchg
loope
lea
fbld
lock
and
aam
cld
pop
test
cmps
aam
aas
dec
jbe
mov
mov
ror
mov
xchg
mov
leave
xchg
xor
push
push
sbb
fwait
adc
pop
xchg
(bad)
scas
aaa
sbb
lahf
lock
dec
push
mov
mov
cmp
aas
popf
outs
adc
(bad)
sbb
dec
push
retf
mov
xlat
data16
and
xchg
cmc
xchg
ror
sub
stc
call
out
dec
(bad)
mov
(bad)
adc
mov
sar
sbb
xchg
fadd
(bad)
out
push
ficomp
call
mov
jg
sbb
xor
cs
sbb
pop
sbb
push
xchg
mov
in
inc
inc
dec
dec
mov
pop
cmp
call
and
xor
mov
pop
call
nop
adc
or
xchg
lahf
dec
jno
mov
xor
add
sub
sbb
loope
enter
dec
sbb
mov
loop
nop
inc
enter
fyl2x
pop
fisubr
das
ficomp
mov
jp
fs
xchg
dec
add
loopne
pushw
xlat
mov
jae
(bad)
fimul
js
fld
xor
es
pop
ret
pop
shr
int3
iret
fwait
hlt
std
pop
jmp
mov
xlat
pop
sub
mov
adc
(bad)
xchg
push
fiadd
loopne
(bad)
(bad)
(bad)
in
data16
sub
dec
arpl
push
mov
das
movs
sbb
les
or
cdq
mov
dec
sbb
cdq
pop
ja
stos
stos
jp
mov
sub
cs
and
jmp
call
cmp
mov
lock
ins
and
jo
or
push
add
fdiv
in
push
repz
out
xor
mov
adc
lahf
or
in
sub
test
call
or
lds
call
inc
mov
aas
mov
addr16
lods
aam
sub
std
nop
(bad)
rol
mov
mov
std
jecxz
test
rcr
in
vaddsd
and
test
add
mov
pop
inc
add
loope
cmp
mov
int3
cmp
adc
mov
mov
push
xor
or
jle
inc
xor
mov
aaa
sbb
test
or
sbb
dec
push
inc
fnstcw
in
imul
sar
xor
sub
push
xor
xchg
cmc
in
pushf
dec
mov
cmovb
xor
js
jae
out
push
imul
push
and
pop
and
push
inc
cld
add
shl
shl
out
test
fstp
dec
and
out
and
in
scas
adc
call
push
dec
in
mov
and
mov
sub
into
inc
pop
push
ss
and
(bad)
mov
sub
xchg
sbb
movs
add
je
cmp
fstp
pop
je
cdq
rcr
cmp
aas
aas
jmp
pop
jmp
add
fnstsw
jle
mov
push
mov
add
dec
sub
inc
call
mov
scas
adc
rcl
hlt
inc
popa
fsub
imul
cmp
adc
outs
xchg
push
adc
dec
aas
cmps
fidiv
sub
mov
mov
call
stos
rcl
inc
nop
and
out
pop
out
dec
aaa
jl
retf
ja
pop
add
mov
inc
test
js
cmp
adc
jo
enter
and
(bad)
jmp
sub
and
call
inc
dec
retf
repnz
test
mov
sar
pop
pusha
sub
lods
jbe
fmul
les
jb
mov
push
nop
(bad)
mov
inc
movs
aaa
(bad)
mov
inc
inc
in
jmp
adc
and
sbb
inc
jge
pop
mov
jbe
mul
mov
in
push
out
repnz
fidiv
sub
sahf
xchg
fidivr
mov
lods
mov
cmp
mov
sar
inc
dec
fsubr
mov
imul
xchg
iret
push
mov
aas
mov
push
scas
inc
(bad)
xchg
fwait
rcr
push
push
mov
pop
mov
xor
mov
int3
stc
mov
mov
iret
push
rol
popa
sbb
dec
mov
mov
sub
sbb
cmp
movs
aad
mov
add
jl
sub
add
pop
xchg
ss
test
enter
cmp
popa
pop
test
pop
push
hlt
mov
sbb
cmp
and
gs
pop
nop
pop
outs
and
les
or
mov
and
dec
nop
cmps
inc
sub
mov
ret
sub
xchg
push
or
outs
repz
inc
fisttp
div
add
leave
fidivr
hlt
mov
or
sub
out
jg
stc
push
ffree
cmc
push
add
cdq
dec
jb
mov
sub
inc
push
xchg
jmp
mov
xor
xchg
call
push
ja
push
pop
xor
push
int
add
and
xchg
aas
mov
or
pusha
(bad)
and
mov
(bad)
leave
push
aas
leave
xlat
cld
inc
sbb
mov
mov
inc
sub
inc
sub
mov
mov
push
repnz
or
mov
jns
inc
or
test
xchg
stc
lds
stc
pop
movs
and
pop
shl
cli
int
retf
test
retf
mov
loop
outs
icebp
sbb
nop
fdivr
push
(bad)
push
xchg
test
push
in
sbb
movs
cmp
enter
je
push
sbb
aaa
xchg
cmps
xchg
mov
mov
inc
jne
jle
push
repz
push
cmps
jmp
dec
inc
out
cmp
fstp
fisub
dec
in
inc
jp
cmp
test
sar
inc
cmp
cmp
xor
adc
push
aas
pop
outs
adc
sub
xor
push
xchg
mov
cli
clc
call
sub
popf
loopne
pushf
dec
or
jle
mov
mov
stos
lahf
adc
jmp
add
icebp
inc
mov
loope
cwde
fsub
repnz
fwait
ds
aas
or
mov
jecxz
cli
js
and
cld
adc
int
ret
xchg
sar
push
lea
call
js
inc
in
imul
inc
sbb
cmp
test
cmps
push
push
pop
enter
dec
lock
and
mov
xchg
push
jecxz
in
je
cmps
xor
ds
jnp
or
test
add
fld
jne
jns
push
jmp
pop
addr16
imul
cmps
mov
sahf
sbb
ror
add
sahf
inc
ss
push
pushf
add
int3
xlat
mov
xor
scas
sbb
fmul
dec
and
enter
jmp
sbb
arpl
add
test
imul
jp
dec
pop
mov
addr16
or
fstp
into
sub
push
or
inc
bound
inc
pop
mov
imul
dec
adc
pop
fmul
mov
adc
stc
icebp
add
push
sub
xor
pop
jno
jg
(bad)
xor
or
ja
pusha
out
sub
inc
fisttp
dec
std
ret
lods
cmp
dec
(bad)
call
inc
push
js
shl
xor
sub
(bad)
pop
and
outs
push
cmp
and
ins
mov
pop
mov
sub
cld
or
sahf
add
pop
push
loope
and
cmp
lldt
ret
xchg
or
das
dec
ss
and
xor
clc
mov
push
jecxz
in
sbb
push
popa
add
mov
push
movs
jecxz
add
and
data16
xchg
push
push
dec
stos
stos
cdq
pop
leave
test
inc
daa
stos
inc
aas
icebp
lds
ja
sub
xchg
(bad)
aam
jns
or
xor
daa
push
adc
xchg
push
sbb
push
outs
lahf
mov
jb
push
xchg
mov
push
add
out
mov
sahf
js
arpl
in
cli
icebp
or
ret
(bad)
mov
stos
outs
pop
jmp
mov
mov
stc
mov
mov
cld
mov
loop
ret
jle
xchg
shl
pusha
in
or
in
imul
mov
cmp
popa
push
mov
leave
pop
fild
ins
push
push
add
ret
sub
dec
jmp
push
ret
pop
cmps
lock
in
push
aad
pop
and
jno
nop
call
mov
ja
jge
jle
inc
fisttp
jno
lock
sub
pop
or
std
(bad)
dec
adc
cwde
xchg
mov
adc
aad
xlat
jb
cli
push
out
not
mov
pusha
imul
(bad)
and
out
arpl
jb
rcl
int
jmp
mov
xchg
mov
pop
mov
fwait
mov
inc
mov
jp
push
adc
cmp
fwait
pop
xor
jmp
inc
adc
fdivr
mov
div
mov
movs
fistp
aad
push
jge
icebp
sub
emms
mov
and
pop
mov
ins
lahf
daa
fs
and
push
mov
cmps
pop
mov
loopne
cmp
xor
(bad)
scas
leave
xchg
inc
sbb
add
ins
sti
test
in
jle
jb
cmp
push
sub
aas
inc
cs
icebp
loope
push
xchg
shl
xchg
ja
cmp
mov
imul
mov
lods
pop
jo
lea
jmp
pop
ret
mov
or
pushf
cmps
mov
loop
xchg
cmp
fisttp
(bad)
cmp
ds
xchg
shl
or
sub
loope
pop
(bad)
lods
(bad)
jge
mov
iret
aad
sbb
cmc
mov
mov
(bad)
loop
inc
cs
push
mov
outs
rol
popf
xchg
(bad)
jg
int3
xor
les
imul
fsub
sub
aam
push
cli
pop
aaa
pop
and
clc
pop
jmp
scas
ror
xor
mov
data16
outs
fcomp
mov
cmp
aaa
inc
sbb
test
xor
adc
pop
aaa
movs
sbb
test
lahf
int3
test
xor
ror
inc
mov
and
inc
inc
sahf
inc
sbb
aaa
jns
inc
jns
fmul
dec
ficom
xchg
add
and
aad
and
jnp
pop
mov
mov
xchg
inc
sahf
int
jmp
xchg
xchg
pushf
fld
xchg
sbb
retf
add
fwait
ror
and
ds
movs
in
cmc
ds
xor
add
ins
cdq
out
int
jo
shr
add
cdq
adc
stos
in
xchg
fisub
dec
icebp
fdivr
or
std
les
leave
pop
push
(bad)
add
arpl
jecxz
mov
test
out
sub
push
mov
xor
fisttp
mov
sbb
wrmsr
mov
sbb
(bad)
popa
mov
pop
sbb
out
mov
and
mov
call
xor
xor
jne
movs
dec
int3
cmp
sbb
inc
add
lds
push
adc
shl
popa
in
xchg
lahf
xchg
or
cmp
hlt
inc
fwait
jp
pusha
mov
jl
ins
dec
sub
inc
add
sub
retf
xlat
ins
(bad)
mov
popf
out
and
out
mov
or
(bad)
xchg
or
call
inc
pop
aas
sbb
mov
lea
test
scas
sti
ret
imul
cmp
outs
iret
scas
xchg
jo
rcr
and
inc
xchg
pop
mov
cmp
jnp
jg
push
adc
push
mov
cld
xor
jns
(bad)
clc
nop
cmc
inc
cs
or
add
xchg
jmp
pop
ror
aaa
pop
xchg
mov
pushf
mov
ins
pop
loop
add
in
ds
addr16
aad
pushf
lock
repz
xchg
stos
arpl
(bad)
push
outs
test
retf
icebp
mov
jg
pop
repz
jmp
dec
clc
jnp
jmp
call
repnz
movd
mov
icebp
xchg
and
mov
into
lock
(bad)
idiv
sahf
jmp
xlat
xor
int
sub
jp
je
sub
pop
or
test
inc
jns
mov
movs
cmp
jno
(bad)
jmp
inc
enter
jb
(bad)
pop
xchg
daa
mov
aas
lahf
repnz
popa
jge
sbb
dec
cmp
retf
int
loope
jl
mov
mov
pushf
pop
or
stc
aad
test
xchg
pop
jbe
push
push
inc
cmp
cmp
popf
daa
cmp
dec
ret
pop
scas
pop
cli
and
cmp
mov
xor
xchg
ficom
imul
jmp
test
mov
stc
or
into
jmp
js
pop
cmp
(bad)
jns
inc
in
jno
push
dec
hlt
xor
lock
and
repnz
pop
es
clc
lea
test
inc
mov
loop
repnz
sbb
mov
pop
inc
push
shr
out
popf
aas
fcom
pusha
adc
mov
pop
repnz
fadd
lods
cli
cmps
pop
cld
repnz
into
mov
imul
loopne
(bad)
aas
or
cmp
dec
ret
sub
sar
mov
jno
fild
and
push
push
not
xor
ret
nop
dec
jmp
cmp
loopne
lock
add
xor
dec
mov
out
es
stos
cmp
loope
mov
sbb
repz
aad
jno
rol
pop
mul
pushf
(bad)
xchg
ror
push
std
lock
loopne
push
loop
push
and
fdiv
test
mov
inc
pop
and
out
xchg
sub
ja
enter
xchg
xor
sti
stc
xchg
mov
sub
sub
push
dec
movs
mov
out
(bad)
sub
push
add
addr16
outs
scas
dec
cmp
sahf
cmps
repz
cdq
test
jp
mov
test
inc
and
popf
aaa
repz
add
jnp
jmp
in
stos
mov
shl
cld
jl
pop
xlat
dec
mov
add
push
adc
sub
sar
sub
push
push
adc
mov
stos
loope
sbb
aad
out
ins
dec
cs
mov
inc
daa
xlat
leave
jnp
das
loopne
add
mov
cmp
mov
lods
test
jbe
sbb
fwait
test
mov
into
test
fxch
loope
sti
xor
sub
lock
shl
sub
mov
aas
xchg
mov
jnp
mov
adc
addr16
or
ret
not
mov
std
ins
xchg
lock
cmp
les
add
jmp
jle
mov
lock
loope
in
popf
mov
pop
out
inc
xchg
and
cwde
mov
lea
and
jg
xor
jmp
cmp
jo
adc
push
iret
test
test
bound
test
dec
push
jle
and
jge
in
mov
mov
dec
pop
int
xor
mov
push
outs
fld
int
cmps
cdq
sahf
push
aam
ja
jge
push
pop
push
cmp
adc
sub
in
mov
add
outs
and
push
hlt
xchg
push
bound
push
fs
pop
es
and
es
scas
into
cmps
add
adc
add
cmp
retf
lds
or
push
repz
jmp
imul
sbb
movs
mov
cs
sbb
(bad)
dec
lock
clc
sbb
ror
shl
clc
loop
dec
xor
and
ds
aas
repz
pshufw
ins
add
sbb
cli
addr16
in
push
mov
rcl
mov
aaa
dec
mov
int
stos
dec
adc
jae
pop
cdq
mov
fst
nop
cs
(bad)
test
(bad)
repz
sbb
inc
test
shl
repz
retf
jecxz
or
push
fstp
loopne
mov
dec
repnz
mov
add
adc
lds
mov
jnp
lock
mov
(bad)
aam
pop
xchg
mov
mov
fcom
out
aad
stos
xor
push
ficom
cs
adc
pop
dec
clc
in
outs
xlat
or
clc
adc
in
jle
ja
pop
test
jmp
dec
jp
fisubr
cdq
cld
xchg
shl
jl
mov
loop
mov
push
and
adc
jg
push
das
jmp
add
dec
xor
bound
sub
jns
sti
mul
ret
in
iret
test
call
in
pop
ret
ficom
sbb
out
xor
push
sbb
cmp
sub
mov
arpl
jne
or
mov
(bad)
dec
or
add
dec
jae
dec
addr16
sbb
fisub
aad
stc
out
sub
add
sub
ja
xchg
data16
add
push
and
lea
jl
addr16
pop
dec
add
mov
and
push
mov
push
call
mov
add
fnsave
in
lock
adc
lods
fsub
mov
ficom
sbb
daa
lea
push
pushf
aam
mov
fbld
xchg
mov
mov
clc
xchg
aad
jne
add
push
jne
repz
cwde
and
mov
lock
cmc
push
mov
xlat
test
mov
adc
cli
push
jbe
push
dec
add
movs
pop
dec
leave
into
xchg
stos
jns
add
movs
adc
adc
fisttp
cwde
cmps
fucom
inc
add
mov
push
jne
neg
jno
scas
in
pop
jae
xchg
dec
mov
inc
inc
mov
ss
shl
stos
out
cmp
mov
ds
dec
jl
cmp
fld
repz
imul
lock
and
stos
jmp
xor
inc
retf
scas
and
sahf
sbb
mov
sub
loope
fidiv
icebp
rcl
aam
fdiv
mov
adc
xchg
call
ja
pushf
cmp
popa
pop
fsub
sub
imul
sbb
mov
add
sub
xchg
fld
add
iret
mov
in
ds
ror
jae
loope
test
dec
xor
xchg
push
jbe
inc
cmps
mov
or
mov
bound
mov
test
xchg
jl
add
mov
sbb
mov
or
dec
xor
enter
ins
out
ss
mov
leave
out
mov
pop
or
mov
add
dec
movs
add
and
and
gs
enter
pop
add
xor
cmps
mov
jno
inc
daa
and
cmc
scas
jae
movs
ror
imul
xor
mov
xchg
push
loop
(bad)
adc
sub
imul
dec
fmul
lahf
into
cmps
pop
imul
gs
push
repz
push
mov
push
dec
xchg
(bad)
pop
xchg
sti
fidivr
out
jbe
sbb
and
(bad)
lods
pusha
js
push
add
imul
stos
adc
fisubr
sti
pop
pushf
mov
sub
xchg
or
lds
sub
inc
call
xchg
in
xchg
(bad)
aad
push
loopne
cmp
fist
scas
ss
xlat
push
cmp
sub
imul
mov
shl
ins
sbb
add
push
mov
cmps
push
dec
fbstp
pop
outs
iret
aas
(bad)
inc
jb
pop
xchg
add
adc
aaa
pop
or
cwde
add
fxch
sbb
(bad)
fnstenv
stos
or
pop
pop
mov
idiv
int
test
inc
jnp
aaa
cld
in
sbb
outs
das
xchg
cmp
add
fldcw
idiv
push
not
jae
jbe
gs
(bad)
jl
and
adc
mov
mov
xchg
fisubr
dec
ja
fs
inc
das
mov
pop
out
inc
aad
loopne
loopne
(bad)
frstor
xchg
pop
mov
mov
mov
ficom
mov
fucomp
nop
pusha
imul
outs
stc
xchg
jge
mov
add
adc
pop
test
in
mov
retf
addr16
test
push
cmp
cld
push
lods
jnp
repz
and
push
fucomip
in
cmp
pop
cmc
push
icebp
xor
push
adc
aaa
pop
sbb
jecxz
popa
out
cmp
pop
stc
retf
clc
push
xchg
rcl
mov
add
ins
xor
xchg
movs
daa
or
fist
jae
push
scas
popf
push
mov
push
or
data16
or
fwait
jne
push
js
mov
out
(bad)
pavgw
pop
pop
ror
adc
aaa
out
in
int
arpl
add
xchg
addr16
hlt
mov
pop
dec
imul
xchg
rcr
xchg
retf
(bad)
jp
pusha
adc
cdq
imul
dec
cmps
jl
mov
jl
sbb
in
pop
push
cmp
inc
daa
sub
hlt
mov
lds
aam
sub
mov
popf
bound
aam
int3
push
(bad)
xchg
rcr
sbb
dec
scas
shr
adc
jns
scas
or
xor
xlat
add
jp
cmp
fs
lds
jae
aad
push
call
inc
xchg
bound
(bad)
xchg
out
loope
sbb
dec
cld
frstor
rol
or
mov
and
ret
jmp
mov
in
xor
lds
dec
add
out
sbb
inc
ror
lds
mov
add
sbb
push
fwait
shl
sub
push
push
dec
clc
dec
mov
mov
xchg
mov
jmp
aad
sbb
sbb
repnz
jg
movs
xlat
ins
push
and
loopne
cmp
icebp
xor
mov
out
aam
or
in
rcl
leave
dec
pop
mov
(bad)
iret
cwde
retf
movs
adc
push
bound
and
push
cmp
jle
shr
xor
ret
or
mov
cmps
test
or
jno
sbb
cld
jb
sbb
rol
cmp
pop
xchg
sbb
xchg
loopne
lock
adc
test
scas
ins
mov
js
ror
cmc
pusha
xor
outs
or
mov
pop
mov
adc
test
frndint
pop
rol
and
xchg
mov
push
push
pusha
xor
lock
scas
inc
clc
mov
(bad)
cdq
mov
ja
iret
loop
out
cmps
out
icebp
push
daa
mov
mov
int3
and
icebp
xchg
cmp
cmps
test
or
leave
mov
jg
push
scas
retf
add
inc
mov
bswap
or
scas
jb
sub
sub
or
movs
sbb
mov
push
pop
mov
imul
mov
scas
dec
mov
or
stc
jmp
in
in
or
cmp
mov
fisubr
pop
iret
cmp
xchg
ja
xor
icebp
movs
jo
hlt
jns
jo
pop
mov
out
push
shl
and
stos
das
mov
icebp
jle
cmps
mul
(bad)
ficomp
jne
fs
test
aad
xchg
into
test
int3
call
sbb
inc
mov
cmp
jp
call
push
stc
push
(bad)
aam
enter
push
mov
arpl
call
cmp
lahf
xchg
sub
sub
add
pop
jne
sub
adc
out
pop
(bad)
mov
sbb
xchg
mov
sub
cmp
movs
loop
lods
loop
mov
into
xchg
(bad)
mov
retf
xor
jo
cmp
(bad)
(bad)
jno
xlat
retf
movs
jmp
xchg
es
push
fcmovnu
cmp
daa
pop
out
jmp
outs
sti
retf
xchg
dec
scas
fwait
sbb
(bad)
stc
pushf
popa
push
xlat
inc
xor
aas
push
aas
std
push
xchg
or
inc
mov
xor
xchg
bound
das
xchg
in
xchg
cld
mov
cmps
or
xor
aaa
mov
cs
mov
pop
mov
dec
movs
jg
adc
dec
mov
mov
push
bound
out
cmp
sub
adc
and
dec
pusha
(bad)
stos
iret
push
dec
(bad)
mov
call
mov
xor
fxch
or
xlat
outs
(bad)
movs
or
test
outs
retf
stc
lea
adc
add
mov
sbb
leave
test
jmp
outs
xchg
add
cmps
ins
or
mov
inc
sub
int
jmp
or
cli
adc
fcomp
sbb
ficomp
pop
jge
cmps
mov
adc
adc
sbb
mov
inc
das
out
fimul
fild
jg
xor
js
mov
xchg
pop
jne
push
aad
sub
jns
inc
or
inc
fdiv
mov
pop
(bad)
test
cmp
mov
mov
nop
mov
je
shr
clc
jg
stc
xor
psraw
xchg
dec
imul
loopne
loopne
push
mov
and
dec
push
cld
xchg
int
xor
nop
inc
push
cmp
sub
push
stos
cmp
je
jg
push
inc
dec
pop
dec
in
aam
push
nop
(bad)
cmp
mov
xor
or
mov
ror
jbe
rcr
pop
icebp
mov
scas
dec
lds
xchg
(bad)
sub
pop
jmp
ret
push
iret
rcr
xor
scas
push
mov
shr
shr
repz
(bad)
bswap
lods
add
mov
(bad)
enter
fwait
xor
xor
test
cmc
in
sbb
dec
pop
test
lock
mov
mov
or
ins
jns
mov
cmp
mov
jl
mov
pop
in
out
gs
bound
sub
inc
into
clc
dec
push
test
pop
cdq
jne
xchg
scas
call
adc
imul
nop
mov
cwde
imul
out
loop
sub
das
mov
lods
rcl
inc
std
jmp
pop
jecxz
ja
mov
ret
inc
out
outs
sbb
mov
lock
adc
cmp
xchg
mov
jmp
aam
addr16
xchg
xchg
inc
push
sub
inc
push
loop
das
les
sbb
inc
sub
sub
mov
(bad)
sub
(bad)
sub
mov
push
xor
daa
or
and
arpl
cld
aam
mov
mov
sub
adc
jno
mov
jbe
fld
or
jge
lahf
stos
stc
xor
mov
retf
cmp
ss
mov
pop
push
push
and
xchg
sahf
mov
imul
mov
mov
xor
mov
cmp
pop
std
dec
test
out
mov
call
call
inc
repz
mov
mov
xchg
mov
adc
mov
xchg
or
out
leave
cmp
dec
and
push
xlat
in
mov
popf
(bad)
cli
jnp
cmp
imul
and
jecxz
bound
lock
and
psrlq
mov
pop
sahf
and
mov
inc
jmp
push
enter
mov
stos
(bad)
push
or
loop
sbb
movs
bound
xor
add
and
cmp
jns
(bad)
pinsrw
dec
mov
inc
xor
stos
pusha
xchg
test
cmp
and
int
retf
xor
pop
fsubr
and
and
push
cmp
jg
mov
push
aam
test
scas
inc
js
(bad)
data16
or
mov
fsubr
outs
add
test
icebp
data16
inc
leave
add
mov
sti
inc
lock
xchg
cld
jne
xor
cmp
lock
sti
jne
sbb
fisttp
cmp
xchg
test
xor
xchg
xor
dec
sti
dec
jbe
pop
add
(bad)
fwait
and
dec
cwde
mov
push
rol
in
test
cs
aam
add
mov
sub
outs
daa
or
fmul
inc
(bad)
test
inc
jmp
mov
pusha
sub
mov
jno
pop
cwde
jns
rol
scas
sub
movs
mov
xor
repz
jl
mov
imul
shl
pop
mov
div
lea
ds
xor
data16
(bad)
push
stos
pop
jnp
jnp
mov
popa
push
int3
add
sub
test
cs
mov
push
sub
jg
test
nop
xchg
retf
cmp
adc
popf
movs
or
add
add
not
retf
(bad)
sbb
stos
cmc
rcr
cmp
(bad)
in
fcom
(bad)
push
pusha
mov
je
repnz
jbe
jmp
stos
(bad)
mov
push
mov
push
pop
jns
dec
shr
pop
mov
mov
aad
lods
jecxz
and
push
inc
cld
out
fstp
inc
xor
movs
or
dec
sbb
in
aas
(bad)
push
mov
je
in
xchg
scas
xor
fisttp
fst
add
push
shl
test
fadd
jns
sub
lods
shl
add
adc
pop
add
adc
xchg
push
into
cmp
retf
fnstcw
jnp
fisubr
dec
jle
mov
lods
add
fld
xor
dec
sbb
out
xchg
xbegin
retf
cdq
xchg
mov
ret
fisub
and
xor
xor
cmp
(bad)
inc
out
push
cmp
rol
cmp
stos
fisttp
lods
(bad)
add
(bad)
mov
add
repz
cdq
mov
add
arpl
adc
mov
xor
inc
mov
test
sti
cmc
jnp
test
cmp
pusha
pop
cli
jno
jnp
aaa
cmp
shl
sahf
add
nop
and
dec
push
sbb
add
dec
cmp
mov
mov
inc
ins
add
mov
adc
lods
cs
dec
nop
xsha1
cmps
(bad)
vshufps
dec
add
shl
shl
cmp
xchg
jno
std
mov
fisub
arpl
push
test
test
push
or
xor
fstp
inc
neg
mov
jne
das
push
cmp
pop
ret
fstp
xchg
mov
adc
and
sub
jb
cmp
in
jo
push
fist
mov
gs
xor
sbb
lods
mov
jns
xor
add
xor
add
xchg
and
sub
mov
test
sbb
ds
pop
and
adc
lds
fld
and
push
scas
inc
sbb
adc
mov
jo
outs
(bad)
test
xchg
mov
cmc
and
aas
rol
adc
mov
(bad)
xor
sar
push
cmp
pop
loope
rol
inc
xchg
xchg
test
add
(bad)
mov
xchg
xor
jb
dec
repnz
mov
ror
inc
test
ss
lahf
xchg
hlt
xchg
in
mov
pop
retf
adc
pop
pusha
mov
in
out
ret
mov
ins
out
mov
sub
rcr
ja
cmp
jmp
data16
add
adc
xchg
add
fist
push
push
cdq
icebp
jnp
out
mov
dec
loope
fild
dec
shl
aam
jbe
xchg
jl
sub
loop
iret
in
cmp
dec
push
push
arpl
jne
fld
dec
das
sar
push
xchg
jno
mov
shl
adc
cs
mov
inc
cmp
imul
xchg
and
dec
sub
das
dec
push
clc
loope
mov
shr
pushf
dec
scas
ds
push
sbb
adc
jmp
inc
in
scas
mov
fimul
jns
cli
fs
mov
fdivr
popa
les
pop
push
fwait
inc
fcmovnbe
xchg
and
pop
fs
jno
lds
and
ins
add
push
clc
popa
push
fs
inc
inc
test
mov
aam
test
fdiv
push
lea
imul
fisubr
cwde
js
mov
cmp
nop
loop
dec
shl
mov
fldenv
ss
retf
into
pop
cs
cmc
sar
mov
lods
test
aam
and
mov
jg
jbe
push
mov
gs
test
test
fdivp
pop
shl
scas
in
mov
rol
jae
xchg
dec
mov
jp
dec
cmc
out
push
fmul
ret
mov
sbb
popa
push
loopne
pop
xchg
xchg
mov
jmp
ffreep
popa
lods
and
je
les
std
ss
add
mov
loopne
pop
or
xor
lea
add
dec
inc
dec
in
sbb
(bad)
mov
xor
inc
pusha
mov
add
nop
iret
dec
mov
aaa
pop
push
or
inc
std
sbb
mov
loope
dec
enter
xchg
mov
int3
int3
out
dec
and
add
mov
mov
mov
stc
push
push
fs
cmp
cld
fsubr
ficom
jb
mov
outs
fiadd
int3
adc
clc
pop
and
mov
rcr
test
pop
daa
push
push
and
pop
aaa
mov
into
daa
adc
into
dec
test
fldcw
sub
in
aad
jecxz
jmp
ss
loopne
and
jmp
popa
push
rcl
mov
aaa
inc
ror
imul
sbb
in
lahf
movs
cs
and
fild
out
retf
icebp
int
imul
jno
push
ret
ret
shr
xlat
push
out
pop
dec
pop
and
ret
jp
xchg
sbb
mov
aaa
sbb
loop
aaa
sub
repnz
mov
lds
pop
out
xchg
mov
sub
fisubr
or
shl
(bad)
(bad)
out
xor
mov
outs
popa
in
addr16
je
dec
cmp
inc
cld
cmp
in
sub
movs
(bad)
cld
mov
dec
jle
pop
pop
leave
mov
dec
jae
pop
and
lea
div
add
shl
call
pop
sar
jge
into
repz
pop
jl
jecxz
xor
call
cwde
jb
mov
pop
outs
dec
pop
dec
lds
imul
leave
jbe
inc
jne
push
ja
outs
cli
icebp
in
sti
cwde
push
shl
cmps
jae
in
sbb
pop
stc
stos
pop
mov
mov
mov
and
sbb
dec
nop
mov
enter
mov
cmp
test
nop
aaa
and
jb
adc
adc
xor
movs
outs
call
(bad)
(bad)
out
dec
adc
mul
mov
jge
jnp
movs
xchg
aam
daa
std
(bad)
dec
test
jl
and
xchg
loope
outs
test
mov
fistp
xor
add
sar
mov
jnp
jns
sbb
mov
mov
in
adc
leave
dec
xor
fist
mov
fs
mov
ins
fiadd
push
mov
iret
pop
mov
mov
mov
push
int3
sti
call
test
adc
xchg
xchg
or
push
push
jno
stc
sub
xor
add
clc
xchg
mov
mov
mov
cmp
jecxz
shr
lea
ss
add
push
pop
xchg
in
lahf
or
dec
push
fistp
xor
xchg
mov
movs
fst
es
(bad)
aaa
pop
xchg
js
push
mov
cld
inc
mov
jnp
mov
popa
push
pusha
in
imul
cmp
inc
ss
and
jmp
cmc
jecxz
dec
cmp
iret
inc
fldz
icebp
push
shl
sbb
jmp
imul
adc
jle
loop
pop
mov
mov
mov
les
mov
pop
dec
adc
xor
daa
add
jnp
inc
and
cmps
outs
lea
jl
aaa
sbb
repz
nop
mov
stos
xchg
mov
mov
and
js
sbb
inc
mov
mov
enter
or
(bad)
xor
push
jno
test
or
aas
cdq
out
and
fdiv
mov
or
imul
(bad)
push
sbb
mov
push
aad
(bad)
jno
dec
jns
neg
mov
adc
xchg
inc
(bad)
jge
add
out
mov
push
xchg
and
add
iret
aaa
cmp
out
xchg
test
push
inc
mov
or
adc
ss
out
(bad)
cmp
pop
pop
xchg
data16
stos
mov
aaa
pop
or
jmp
cdq
and
in
pop
mov
dec
rcr
mov
nop
cld
or
jno
rol
jmp
cmp
pop
cmp
jecxz
fldcw
cld
jmp
sub
or
in
xchg
pop
pop
or
hlt
inc
push
repnz
xchg
inc
push
mov
push
test
xor
adc
pop
ss
and
and
je
xchg
arpl
add
sti
sub
adc
or
xor
xchg
cmp
int
dec
not
jbe
adc
test
jmp
add
cmp
mov
jge
scas
jg
adc
enter
shr
add
push
aad
aas
(bad)
adc
dec
les
pop
xor
mov
loop
movs
dec
sbb
out
jnp
ret
mov
call
mov
and
aad
(bad)
gs
jne
jns
sub
hlt
sub
xchg
out
xor
in
jne
pop
ret
and
pop
xchg
add
sbb
mov
(bad)
call
and
ins
xchg
stos
in
test
das
xor
dec
(bad)
(bad)
cmps
leave
add
sub
inc
push
lods
mov
mov
aam
fnsave
jns
fcmovb
call
in
call
pop
inc
jnp
mov
mov
and
in
dec
xchg
mov
inc
cli
aad
dec
in
inc
inc
popa
push
dec
cmp
js
fild
xor
mov
cmps
xchg
jmp
sbb
cdq
and
imul
or
loopne
popf
ins
push
jle
mov
inc
cmp
nop
mov
jl
shl
inc
pop
fadd
xchg
push
int3
mov
xchg
pop
mov
jb
cld
cmc
jg
rcr
dec
sub
push
mov
popa
mov
xchg
out
jno
fstp
lods
and
jg
cmps
lods
cmp
(bad)
sbb
sub
popa
scas
sbb
ss
xor
mov
dec
pop
call
(bad)
repnz
sbb
lds
daa
lahf
cmps
jmp
js
jbe
and
ins
xchg
mov
adc
shl
inc
adc
dec
mov
dec
jno
xchg
inc
fwait
lock
xchg
add
mov
rcr
mov
jecxz
adc
lds
add
loop
ss
enter
and
or
hlt
popf
mov
inc
xor
call
ss
dec
adc
cmc
test
retf
std
pop
push
jmp
mov
cmp
mov
repnz
shr
(bad)
icebp
mov
jecxz
call
or
out
sub
jle
ret
ror
hlt
leave
xchg
mov
jae
ret
dec
or
xchg
pop
pop
aaa
sti
movs
adc
into
adc
and
in
movs
stos
xchg
mov
push
adc
xchg
mov
xor
fldenv
ds
sar
addr16
hlt
hlt
and
or
sbb
push
adc
mov
clc
(bad)
in
xchg
adc
out
pop
xor
pop
loop
mov
xchg
add
xor
sub
xchg
cmp
outs
add
ret
test
adc
enter
xchg
mov
ss
pop
adc
or
adc
out
cdq
mov
nop
leave
into
lods
adc
inc
inc
mov
fnstcw
or
scas
inc
aad
pop
rcl
dec
addr16
mov
arpl
call
addr16
arpl
imul
sbb
cmp
test
adc
xchg
or
dec
adc
or
sbb
dec
and
(bad)
in
imul
imul
repnz
push
gs
frstor
sbb
ja
jmp
add
dec
mov
je
push
loop
dec
retf
add
rcl
mov
xor
mov
bound
scas
stc
aam
aam
jp
outs
or
push
ss
jmp
scas
cmp
(bad)
mov
fwait
imul
cwde
push
cmp
cmp
mov
fs
mov
sbb
mov
loop
in
hlt
mov
mov
retf
sbb
push
rol
jle
std
out
pop
sbb
mov
xchg
or
mov
inc
add
div
ss
pusha
inc
sbb
arpl
sub
cmp
sub
adc
pop
js
cmp
mov
pop
ret
mov
adc
cmps
cmp
jecxz
push
pop
xor
jo
cmp
repnz
arpl
cmp
int3
xchg
pop
adc
cmp
mov
or
sub
xchg
movs
ja
dec
mov
adc
cmp
jno
es
das
movs
rcr
pop
(bad)
arpl
xchg
or
ins
lock
test
pop
fxch
jmp
fs
mov
fmul
jge
xchg
imul
and
jmp
mov
cmp
jmp
arpl
or
push
pop
xchg
and
rcr
xchg
jnp
aaa
sub
sahf
outs
jg
mov
xchg
jbe
wrmsr
and
shr
je
out
cld
in
jo
jmp
aaa
mov
imul
inc
in
xchg
addr16
and
dec
xchg
fs
stc
add
jp
or
mov
jo
repnz
lds
les
push
push
sbb
xchg
cmc
jns
xbegin
dec
aas
pop
add
cmp
or
pop
cmp
adc
loopne
adc
xchg
mov
out
lahf
out
rcr
dec
ret
adc
jns
jmp
or
out
cmp
jg
in
in
mov
sbb
sub
je
jbe
outs
cmps
test
push
icebp
xor
fcmovu
adc
out
add
mov
or
xor
mov
scas
ror
hlt
mov
ret
adc
inc
sub
xor
cwde
and
mov
mov
push
push
cs
loopne
and
rcl
xchg
retf
repz
pushf
xchg
inc
xchg
pop
inc
cmp
sar
push
fild
call
lds
ret
clc
out
inc
ss
rcl
out
cmp
add
add
sti
std
push
lds
dec
or
test
dec
lock
mov
sub
lahf
dec
jp
push
fistp
retf
int3
push
pop
pop
out
dec
pop
pop
pop
mov
stc
inc
nop
lods
xchg
cmp
pushf
sub
mov
and
mov
mov
sbb
cmp
add
lahf
jmp
adc
(bad)
push
jmp
iret
aam
loop
jmp
sbb
sub
stos
xor
aaa
stos
clc
into
push
lock
outs
mov
out
aaa
jns
add
sbb
lds
mov
cmp
sbb
sub
cmp
jbe
enter
mov
ds
jmp
jb
inc
fdiv
mul
mov
mov
push
cmp
outs
xchg
dec
xchg
ss
and
jae
movs
xor
mov
pop
hlt
cmp
shl
out
add
xchg
outs
stos
(bad)
imul
or
bound
sbb
xchg
lds
in
popa
push
ja
mov
lods
jmp
sub
imul
xor
mov
aam
mov
(bad)
add
and
jmp
pushf
mov
(bad)
(bad)
and
push
xor
xor
push
jge
pop
cmp
cmps
out
xchg
and
lock
dec
outs
xor
mov
loop
lds
and
call
ret
dec
loope
xor
jo
in
mov
push
mov
push
push
hlt
push
mov
mov
imul
jmp
dec
fld
pop
pop
out
and
xor
xor
pop
pop
mov
inc
or
adc
mov
mov
jne
mov
xchg
mov
sahf
adc
ret
pop
movs
or
mov
push
or
test
int
cmp
mov
xchg
sbb
pop
mov
out
sub
pusha
out
and
icebp
mov
mov
dec
fnstsw
pop
mov
(bad)
popa
push
cs
jle
inc
ror
adc
jo
fcmovbe
jecxz
sub
sub
cmp
out
das
fcomp
fidivr
cmp
mov
or
leave
mov
int
mov
fdivr
retf
cmp
aaa
jb
sub
jl
aaa
movs
(bad)
push
xor
mov
and
in
xor
mov
call
test
aad
push
and
hlt
sub
pushf
pop
sbb
sbb
fs
dec
(bad)
pop
in
xlat
lods
push
mov
cld
imul
and
mov
mov
xchg
pop
fmul
loope
push
pop
aaa
or
outs
cs
push
ret
sub
cmp
and
add
add
(bad)
mov
xchg
jmp
add
push
in
cmp
and
inc
adc
and
push
call
ja
out
mov
mov
out
das
sub
push
add
js
sub
or
sub
aam
xchg
repz
jp
mov
xchg
pop
push
sahf
mov
push
int3
ret
dec
out
gs
xchg
xor
xchg
push
test
and
add
ss
mov
push
push
out
adc
fwait
lods
emms
(bad)
out
dec
push
dec
add
mov
js
call
mov
stos
fdivr
sahf
mov
jg
js
ins
pop
xchg
nop
out
push
mov
mov
xchg
out
loop
jb
popa
pop
ins
dec
cli
xchg
lds
and
mov
and
shr
int3
mov
fistp
jo
pushf
out
adc
pop
cmps
pop
mov
test
mov
stos
mov
(bad)
cmc
rcl
inc
inc
xchg
movs
inc
repz
stos
add
push
push
cmp
xor
adc
int
retf
mov
mov
push
jmp
outs
aaa
mov
cld
add
pop
push
cmp
and
mov
push
sub
jmp
adc
and
test
mov
loope
mov
sub
mov
ins
push
and
jo
fst
adc
loopne
jle
xchg
fisub
fs
dec
inc
imul
scas
sbb
mov
mov
or
mov
dec
scas
and
pop
pop
jg
adc
jmp
in
add
fimul
cmp
fldcw
mov
cdq
push
jmp
cmp
into
adc
rcr
and
xor
mov
cmps
push
xchg
lods
mov
out
fdivr
test
loope
retf
xchg
pop
retf
sbb
adc
xchg
fidivr
sub
mov
in
loopne
dec
int
outs
mov
(bad)
scas
repz
cli
out
test
and
xor
pop
push
into
ss
(bad)
cmp
adc
jae
inc
imul
xchg
jo
and
stos
cmc
xchg
xchg
push
cs
scas
push
arpl
adc
into
cdq
iret
fisub
call
ror
stos
and
adc
cmp
lods
or
sti
cmp
lahf
jmp
pop
inc
fsubp
(bad)
int
(bad)
ret
or
pop
inc
pop
shr
scas
fbld
push
data16
xor
and
jg
adc
pop
jl
inc
and
cli
stc
or
and
and
mov
push
and
sar
cmps
adc
sbb
scas
jbe
repnz
out
jmp
push
inc
das
xchg
xor
and
add
seto
test
sbb
aam
pop
push
mov
(bad)
sub
pop
aaa
push
jbe
sbb
inc
cmc
(bad)
clc
jmp
sbb
add
adc
sub
inc
cli
ret
jge
loopne
loope
imul
ins
xor
sub
mov
mov
fmul
mov
cmp
imul
inc
jmp
in
or
cld
adc
jnp
ins
fsubr
movlps
lahf
dec
dec
int
and
mov
cmp
push
dec
mov
(bad)
out
cwde
adc
les
out
aad
jnp
jns
cs
mov
dec
ds
push
add
stc
mov
hlt
xor
mov
push
or
call
out
sbb
stos
test
xchg
outs
rcl
mov
push
xor
add
pop
fiadd
or
inc
aam
sub
enter
jecxz
or
push
aaa
stc
adc
sub
rcl
mov
pop
test
aam
mov
pop
repz
fild
xchg
and
hlt
sub
xchg
inc
mov
mov
jle
pop
push
dec
(bad)
sub
sbb
pop
stos
int
stc
(bad)
stos
cdq
push
popf
pop
xchg
push
test
ror
loopne
mov
lods
scas
mov
jl
or
pop
stc
ret
pushf
shr
ret
cmp
mov
xor
add
call
adc
xor
mov
ins
jb
mov
imul
ds
mov
adc
sub
or
pop
(bad)
xchg
adc
sub
shl
ret
cmp
sub
push
push
shr
imul
aam
pop
cmp
int3
popf
nop
push
in
inc
jns
push
adc
sti
(bad)
jae
aam
ret
dec
mov
jge
out
aad
adc
inc
outs
pop
adc
mov
jae
(bad)
adc
pushf
and
sbb
js
jo
xchg
push
lea
add
aad
xlat
inc
aam
es
shl
ret
mov
repnz
cld
inc
imul
and
std
ret
lock
fsubr
movs
jno
outs
adc
pop
lea
outs
daa
cmc
call
adc
xchg
pop
mov
jne
jp
mov
dec
(bad)
not
ss
call
xor
cmp
inc
popf
push
and
or
and
clc
xlat
or
mov
je
sbb
aam
add
mov
in
mov
cmp
in
icebp
(bad)
pop
adc
enter
(bad)
lods
and
hlt
idiv
xchg
pusha
cdq
adc
aad
or
pop
or
pushf
aas
pop
add
jo
cmp
test
add
xor
cdq
aad
inc
or
pop
imul
es
push
push
mov
pop
mov
cmp
in
in
mov
add
adc
int
in
mov
add
cmp
push
iret
rcr
and
xchg
mov
fsubr
mov
ss
fwait
inc
mov
scas
sbb
mov
out
cmp
inc
mov
into
in
or
dec
sub
add
aas
cmp
int3
mov
rcr
adc
ds
mov
arpl
jle
jge
(bad)
cmp
mov
hlt
mov
and
adc
dec
mov
jno
lods
je
add
or
ds
push
mov
dec
bound
arpl
push
push
mov
xchg
cmp
fwait
out
pop
jae
and
in
jle
cmp
cmovp
pushf
jge
mov
pop
inc
sbb
ins
les
dec
cmp
dec
sub
mov
hlt
mov
xor
dec
out
(bad)
sub
xchg
fs
enter
mov
movs
mov
int
jmp
ins
lods
nop
adc
data16
rep
adc
(bad)
lods
adc
call
inc
fidivr
lods
push
(bad)
pusha
jo
sbb
adc
icebp
xchg
mov
sbb
jno
sar
mov
adc
ret
push
mov
add
xor
jno
in
std
dec
cmps
push
in
and
sub
adc
cmp
add
xlat
adc
ja
mov
idiv
cmc
or
xor
sbb
jnp
push
ja
or
stc
sahf
jnp
int
idiv
(bad)
(bad)
aas
lock
push
lock
and
xchg
scas
stos
pushf
cmp
jns
or
(bad)
jae
popf
push
sub
clc
movs
mov
add
add
in
and
imul
hlt
aaa
mov
in
jb
imul
inc
cli
pxor
sbb
sbb
adc
rcr
pop
inc
jnp
jno
dec
push
push
jno
repz
mov
cli
xchg
arpl
and
pop
div
mov
mov
imul
mov
mov
jmp
std
cmp
scas
outs
sar
outs
aam
push
(bad)
mov
xchg
sub
loopne
add
xor
cwde
pop
add
test
adc
xchg
push
test
pop
sti
rsqrtps
and
push
loope
pushf
and
ins
loope
xlat
into
in
popa
xchg
pop
xor
pop
mov
pop
lock
jecxz
mov
adc
mov
clc
push
jae
sub
mov
or
sub
cmp
nop
test
(bad)
mov
jmp
xor
pop
mov
add
and
xor
fisub
mov
xor
jne
xchg
into
int3
inc
mov
push
dec
out
fwait
mov
int
cli
jbe
int3
pop
mov
jg
hlt
sbb
and
repnz
ja
jle
loopne
sbb
inc
jnp
imul
xchg
das
xor
and
mov
fwait
stc
mov
icebp
fild
push
sti
jns
cmp
push
enter
sub
fs
(bad)
arpl
jmp
mov
sub
fidivr
or
jnp
xchg
xchg
ror
hlt
jg
jne
cwde
sahf
ins
push
sbb
fcmovbe
enter
loopne
adc
stos
mov
push
and
add
retf
xchg
mov
test
rcr
xchg
mov
mov
jecxz
mov
xor
pop
ins
lahf
mov
push
fcom
cs
imul
xchg
or
mov
fsub
ror
iret
sub
sub
and
push
dec
and
cmp
or
lods
adc
data16
mov
(bad)
scas
cmp
cdq
bound
push
shl
sub
fcom
push
sti
adc
aad
aad
cld
pop
add
fidivr
jno
ret
jo
rol
adc
mov
pop
mov
cmp
push
mov
shl
xchg
movs
mov
aad
mov
jecxz
cld
push
loopne
mov
clc
fs
or
je
push
or
jbe
xor
ins
les
and
pop
xchg
movs
mov
push
or
push
mov
loopne
or
call
popa
cmp
enter
xor
outs
lods
add
mov
rol
test
jmp
push
push
mov
cld
or
shl
jl
(bad)
(bad)
mov
add
mov
in
popa
pop
jmp
ins
test
pop
pmulhuw
fbstp
je
adc
sub
xlat
not
test
mov
retf
test
mov
jns
inc
xor
mov
dec
sub
dec
dec
jns
in
xchg
pop
sbb
int3
xor
sub
cmp
cmp
int
pop
dec
jecxz
adc
xor
cli
xor
xchg
push
inc
stc
stc
in
cmp
out
movs
and
daa
call
fcom
inc
movs
stc
(bad)
xchg
stos
xchg
xchg
adc
cmp
stos
jo
jmp
mov
mov
cmp
cmp
push
jl
repnz
sbb
gs
add
push
sbb
fiadd
bound
xchg
loope
rol
jnp
mov
mov
pushf
les
out
or
push
jnp
call
xchg
xchg
sub
cli
inc
sub
mov
lock
xchg
out
sbb
cmp
(bad)
push
pop
inc
scas
in
fld
jmp
jmp
aaa
loope
(bad)
(bad)
add
div
xchg
lahf
inc
jo
(bad)
std
arpl
bound
adc
push
in
or
lahf
pop
push
push
outs
out
shl
pop
test
xchg
xchg
cs
inc
jnp
add
dec
sub
adc
push
xchg
lods
jmp
mov
mov
lea
(bad)
sar
lahf
mov
pop
pop
pop
inc
(bad)
adc
push
lods
jne
sar
out
adc
push
cmps
cli
mov
movs
daa
clc
mov
loop
push
rol
aam
lods
mov
je
ret
loop
shr
pop
or
pusha
pushf
push
arpl
in
cmp
sub
add
int
aam
jle
pushf
cdq
pop
sbb
ja
jbe
add
dec
mov
(bad)
je
(bad)
lods
cmps
data16
ss
pop
popf
push
adc
or
mov
adc
(bad)
xor
stos
mov
mov
retf
enter
xor
sbb
movs
push
sbb
icebp
push
cmp
or
jle
loop
xor
dec
in
inc
add
(bad)
dec
cld
hlt
call
xor
ror
xchg
jbe
test
sub
stos
test
xchg
jns
inc
pop
inc
mov
sbb
retf
jle
fadd
jle
mov
push
pop
bnd
popf
mov
jbe
call
adc
shr
movs
cdq
jle
fcmovnbe
jnp
sar
test
jo
mov
jns
ror
push
sbb
push
lock
(bad)
das
enter
pushf
push
mul
adc
(bad)
xor
jo
xor
outs
imul
ja
inc
aad
pop
std
add
cmps
fs
(bad)
jne
std
inc
les
add
mov
add
xchg
in
fst
pop
mov
push
adc
xor
lahf
mov
mov
xchg
lods
xchg
and
sbb
sub
xchg
stos
es
mov
jne
leave
push
sahf
outs
sbb
nop
dec
or
js
and
(bad)
jnp
sub
lea
into
push
push
gs
in
sub
pop
mov
dec
push
jo
inc
or
cmc
xlat
dec
adc
pop
cmp
xchg
repnz
mov
xlat
mov
ja
test
jle
popa
mov
xchg
cld
sbb
fimul
pop
outs
inc
clc
es
sahf
xchg
cmps
push
fild
cmp
fs
shr
js
jb
jmp
out
fnstcw
jae
sbb
rcr
test
sbb
pop
fistp
inc
sub
jecxz
mov
cmp
sbb
push
ret
xor
out
in
test
sub
pop
mov
stos
dec
jge
mov
ffree
add
sub
(bad)
call
mov
lods
arpl
fsubr
xchg
push
or
and
bound
aaa
or
mov
inc
dec
shr
pop
jg
inc
(bad)
neg
clc
mov
or
nop
pop
mov
fwait
jno
into
(bad)
aam
jl
mov
xchg
xchg
scas
or
fisttp
(bad)
fmul
push
or
test
xor
add
adc
test
cld
jb
sbb
mov
adc
call
and
jmp
dec
movs
je
fild
scas
loop
xchg
jmp
xor
or
sub
xchg
std
xor
dec
lahf
xchg
or
fimul
sbb
retf
retf
pusha
ins
mov
sbb
(bad)
jmp
ss
shl
movs
sbb
mov
add
mov
jge
ss
push
int
adc
cmp
sbb
push
repz
imul
cmc
pop
into
mov
mov
in
add
jle
test
je
stos
inc
bound
div
push
lock
adc
jecxz
out
mov
jae
ds
hlt
dec
(bad)
mov
push
in
out
int
mov
aaa
pmullw
aas
dec
push
sahf
ja
data16
imul
inc
(bad)
(bad)
retf
xor
mov
dec
fiadd
push
fmul
push
xchg
or
(bad)
(bad)
push
mov
pop
mov
inc
xor
gs
cwde
not
jmp
(bad)
jns
mov
inc
xor
mov
xlat
jb
add
inc
jo
jae
dec
add
jge
adc
pop
add
cmp
add
xchg
rcl
cld
in
fdivp
stos
loopne
and
ins
lods
and
dec
mov
cdq
aam
sub
xor
das
das
neg
and
arpl
push
dec
mov
add
ins
cmp
(bad)
push
pop
dec
xor
adc
xchg
cld
add
loop
jne
fwait
push
cmp
cli
loope
movs
sbb
js
retf
stos
ror
xor
pop
jbe
mov
add
repz
xchg
push
out
mov
js
ror
stc
xchg
mov
jl
push
ror
sbb
sbb
jp
loopne
add
xor
out
aaa
or
dec
arpl
jno
sbb
ret
div
and
push
sub
ss
gs
pop
out
cmc
lea
ficomp
adc
jbe
aad
xor
les
les
pop
pop
jmp
fild
fild
push
in
mov
push
fist
fsubr
sbb
div
push
imul
sub
mov
retf
ins
add
mov
fs
sub
test
inc
stos
push
fbld
add
cmp
xor
add
cwde
sub
fimul
test
cmps
not
mov
fsubrp
cli
or
lea
add
pushf
es
push
out
and
clc
int
lods
fwait
(bad)
stos
sar
in
sahf
in
repz
repz
pop
ins
movs
or
int3
mov
movs
fstp
pop
push
sub
push
clc
inc
inc
imul
retf
jbe
mov
dec
add
test
(bad)
cmpxchg
mov
dec
pop
pop
int
mov
add
mov
adc
cli
idiv
push
xlat
out
enter
ins
in
or
pop
dec
inc
sbb
mov
call
inc
mov
je
iret
fmul
loop
mov
mov
pop
fdivr
idiv
add
or
cmp
mov
stc
mov
jg
xor
cmps
or
or
push
ins
and
pop
jmp
bound
sbb
popf
repz
jecxz
sub
in
in
loop
jns
push
xchg
test
and
sub
pop
jecxz
lods
sbb
loop
mov
call
out
inc
out
and
or
in
jg
adc
xchg
call
jge
mov
and
push
stos
cmps
xor
into
push
lock
in
xor
xor
jmp
push
fwait
and
add
push
mov
iret
out
mov
sub
cmc
xchg
rcr
fcomp
ret
aas
push
xchg
jle
xor
jmp
cmp
fstp
daa
or
xor
sub
sub
dec
int
mov
(bad)
pop
sbb
(bad)
frstor
into
popf
fdiv
push
and
fdiv
out
jmp
lahf
ss
cmps
sbb
cmp
mov
mov
dec
shl
inc
xor
(bad)
cmp
les
gs
sub
cmp
fistp
inc
lds
pop
in
dec
ss
jp
push
(bad)
xlat
lock
arpl
leave
or
cmp
fidivr
push
popf
mov
enter
cdq
ret
imul
push
and
xchg
sub
push
in
hlt
fnstcw
(bad)
pop
cld
or
mov
popa
mov
cmp
xor
enter
test
repnz
dec
xor
pop
test
inc
push
lea
hlt
int
adc
jne
lds
xchg
jno
cmp
(bad)
mov
sbb
bound
ffreep
push
pop
ss
(bad)
loopne
loope
(bad)
aad
jbe
cmp
lahf
leave
pop
cmps
add
xor
cmp
enter
sbb
and
xor
fcom
adc
out
mov
ja
jns
pop
add
mov
pop
imul
std
in
int3
and
mov
adc
retf
sar
test
push
inc
and
(bad)
iret
and
inc
mov
push
shr
pushf
pop
push
xchg
adc
push
mov
push
into
stc
mov
push
or
outs
xchg
jae
lds
shl
ret
rcl
rcl
jle
mov
ja
cmp
cdq
inc
dec
push
sub
arpl
cli
xlat
mov
and
pusha
shl
shr
adc
xchg
outs
jns
call
xor
jo
and
adc
(bad)
ror
sub
dec
jno
out
outs
(bad)
cmp
mov
cwde
stos
push
or
mov
imul
cmp
cmp
rcpps
scas
lods
pop
es
cmp
syscall
add
aaa
inc
xor
ins
jg
int3
xchg
call
xchg
repz
call
aam
inc
nop
stc
cli
push
dec
pop
rol
(bad)
test
inc
inc
jne
in
sbb
mov
mov
(bad)
mov
push
mov
sbb
aas
loope
cmp
sub
and
imul
jle
add
clc
xchg
int3
out
mov
push
jle
and
xchg
push
adc
jmp
sbb
and
addr16
sbb
sub
pop
retf
add
mov
je
add
ss
test
add
jne
pop
adc
jg
add
scas
gs
mov
aaa
test
mov
dec
ror
jb
adc
aad
loopne
sub
test
xchg
loopne
aad
fld
loope
shl
out
jge
xlat
cmp
mov
jb
xchg
retf
cmp
ds
sbb
iret
xor
jno
jnp
and
mov
sahf
sti
cmp
lods
jns
in
xor
mov
retf
inc
add
xlat
pop
push
ins
stc
dec
ror
pop
loope
and
and
push
jge
push
push
add
inc
push
pop
into
hlt
rcr
js
xchg
(bad)
scas
push
imul
test
or
jno
or
retf
mov
aam
icebp
pop
mov
test
ins
xor
sub
mov
in
outs
xlat
add
add
outs
mov
add
mov
pusha
loop
ja
push
mov
sub
into
mov
sub
clc
xor
mov
xor
push
sbb
pushf
js
and
xor
and
dec
mov
xor
mov
leave
fs
mov
scas
mov
in
pop
adc
xor
jne
pushf
nop
xchg
cmp
or
push
jmp
mov
(bad)
in
fs
and
ficom
aas
hlt
adc
rol
aas
jnp
jnp
dec
dec
mov
sahf
fcom
leave
leave
(bad)
aaa
fild
aaa
fld
sbb
or
(bad)
(bad)
movs
and
ret
xchg
popf
sbb
mov
dec
popf
xor
mov
rcl
jae
in
sub
test
scas
call
fldln2
and
sar
arpl
loope
sbb
test
clc
xchg
cdq
std
mov
cmp
lods
stos
cli
mov
jl
xlat
(bad)
iret
(bad)
jl
mov
addr16
xchg
mov
push
mov
mov
and
pop
add
arpl
(bad)
adc
mov
sub
xchg
mov
adc
icebp
les
push
and
mov
retf
movs
in
loop
les
cmps
clc
iret
and
pop
icebp
mov
cmp
cmp
or
add
fcomp
sbb
ins
cmps
enter
and
or
or
jno
sbb
fstp
aaa
sar
bound
mov
cwde
inc
pop
jne
movs
(bad)
push
mov
jge
jbe
fisubr
adc
sbb
mov
xor
neg
sbb
into
sub
scas
loope
pop
movs
out
xchg
pop
jg
push
mov
lock
cld
push
test
(bad)
pop
xlat
cmps
fidiv
(bad)
in
stc
ficom
adc
inc
mov
cdq
mov
movs
fcmovbe
rcr
mov
jno
sbb
pushf
popa
inc
xor
clc
ror
jmp
xor
jno
mov
mov
sbb
out
loop
mov
xchg
push
push
mov
fs
mov
fisub
repnz
jmp
mov
sahf
nop
push
pop
and
pushf
bound
xchg
popf
push
cmp
sub
mov
pop
sub
stc
cmp
push
nop
ret
xchg
loopne
inc
inc
jle
or
aaa
test
sub
cmc
mov
ror
cmp
pusha
jg
mov
dec
xchg
jbe
jae
(bad)
dec
nop
daa
jl
mov
xor
cmps
fistp
imul
sbb
pop
ds
pop
xchg
dec
in
cmp
out
add
or
pop
xor
mov
mov
dec
sub
retf
add
dec
fs
bound
adc
fwait
xor
js
in
pop
(bad)
xor
les
rcr
add
lods
ins
outs
sbb
jns
dec
shl
fwait
cmp
mov
mov
or
inc
popf
cmp
xor
sbb
add
out
inc
movhlps
mov
cmps
lods
xchg
mov
ficom
shr
jmp
lock
jmp
dec
add
cld
fwait
mov
pushf
xchg
dec
mov
retf
out
xchg
repz
mov
addr16
push
movs
and
mov
mov
jecxz
pop
int3
loop
xchg
jle
xchg
adc
cdq
(bad)
(bad)
dec
mov
fld
cmps
shl
call
and
shl
mov
popa
aam
sbb
jg
xchg
in
call
add
xor
ret
and
sbb
push
pushf
push
aam
xor
test
gs
sub
jp
add
push
cmp
jnp
arpl
ffreep
xchg
imul
mov
push
sub
rol
shl
jp
rol
mov
mov
mov
js
sbb
mov
js
popa
mov
mov
cmp
pop
(bad)
lods
into
(bad)
lods
outs
mov
leave
jne
pop
repz
mov
(bad)
inc
sti
in
xchg
push
ffreep
xor
pop
dec
loope
or
fistp
cmp
mov
fwait
xchg
rcl
icebp
adc
mov
push
test
not
cmp
scas
mov
or
dec
add
lds
das
popa
push
adc
outs
or
pop
mov
mov
add
arpl
mov
sbb
fdivr
icebp
cmp
sbb
fisub
ins
js
pop
mov
mov
iret
mov
outs
bound
movs
aaa
or
xchg
shr
push
lock
call
jecxz
inc
aad
fucomi
adc
push
pushf
cwde
sbb
enter
(bad)
mov
pop
aam
fst
push
nop
loope
outs
and
retf
jns
inc
scas
mov
loope
mov
cmp
jne
mov
daa
scas
mov
out
xchg
je
loop
sub
mov
add
xchg
(bad)
loope
test
cdq
ret
push
pushf
push
repnz
adc
jmp
cmp
pop
mov
scas
push
js
jnp
sbb
std
mov
mov
loopne
mov
xchg
adc
mov
pop
xchg
lds
mov
aaa
xlat
push
or
add
inc
dec
xchg
pushf
inc
call
adc
jmp
xlat
movs
inc
or
inc
pop
xchg
jle
sub
sub
push
(bad)
dec
add
pop
clc
daa
xchg
and
mov
adc
push
stos
mov
(bad)
push
out
ret
fsub
aam
fst
rol
ja
fs
xchg
or
sub
fmul
jle
lds
sbb
sahf
pushf
leave
outs
movs
cmp
mov
scas
ins
dec
adc
xor
fs
pop
in
aas
mov
xor
repz
sub
cli
sahf
stos
sbb
cdq
loop
inc
ret
icebp
pop
xchg
fs
adc
cmp
je
adc
adc
mov
xchg
fsub
fsub
int3
in
(bad)
jns
loop
xchg
shl
dec
jg
(bad)
jmp
push
je
and
out
add
nop
es
in
push
mov
lods
imul
sbb
or
popf
jp
rcl
mov
inc
lds
cmp
mov
sub
adc
sbb
cli
leave
cmc
retf
(bad)
or
(bad)
movs
cmps
mov
xor
pop
lods
add
dec
xor
in
or
xchg
xor
dec
cwde
sbb
pop
leave
sbb
lock
les
loopne
jl
test
jl
push
ficomp
js
sub
sub
sub
in
cmp
scas
xchg
and
mov
cmc
int3
outs
jp
out
adc
dec
or
repz
add
or
(bad)
repz
fcmove
out
add
add
popa
xor
xor
sub
mov
add
jbe
mov
cmps
mov
(bad)
in
out
lods
jnp
out
push
and
sahf
ja
aad
mov
and
adc
dec
jno
jl
retf
mov
ror
rcr
xchg
retf
and
fdiv
mov
sbb
xchg
ja
das
push
ror
mov
les
mov
pop
mov
mov
add
cmp
imul
mov
push
stos
test
adc
test
mov
rol
push
mov
push
xor
call
imul
inc
inc
nop
jp
hlt
retf
in
jb
popf
xor
pushf
(bad)
jmp
fsubr
jnp
fnstenv
push
in
cmp
xchg
push
dec
and
or
xchg
jl
aas
icebp
add
inc
mov
pop
call
cmp
add
repz
inc
sub
leave
ret
cdq
jns
add
shr
mov
jmp
les
xor
pop
cmps
movs
fld
int3
in
cmp
loope
out
pop
repz
push
imul
(bad)
daa
dec
das
lods
xchg
sbb
add
adc
cmps
fild
sti
jle
add
cwde
pop
or
cmps
imul
imul
(bad)
ds
repnz
(bad)
xchg
lea
out
test
push
retf
pop
in
push
adc
push
in
loope
mov
and
fstp
gs
dec
test
daa
and
retf
dec
inc
dec
pop
imul
test
or
jns
leave
xor
iret
dec
lock
push
jb
lea
(bad)
mov
jmp
icebp
xor
dec
fdivr
lea
(bad)
pop
fcom
leave
jns
push
push
or
and
les
and
das
aas
dec
xchg
data16
fxch
push
clc
popf
jns
dec
out
mov
jno
cmps
leave
(bad)
std
cmp
add
add
adc
mov
jmp
jnp
push
mov
push
jb
pop
(bad)
int3
adc
sbb
or
pusha
add
dec
or
loope
test
xchg
int
jp
push
inc
daa
fsubp
popf
push
rcr
repnz
shl
pop
mov
sbb
daa
sbb
les
pop
inc
push
xchg
add
jge
and
xchg
jae
mov
pop
mov
inc
jae
push
mov
imul
pop
js
jecxz
adc
sbb
adc
inc
pop
div
xchg
js
xchg
mov
cmp
pop
movs
adc
call
xchg
or
test
ins
jmp
lods
cmps
inc
add
jecxz
imul
push
loop
fs
retf
pusha
dec
mov
popa
jg
mov
adc
in
fild
mov
dec
mov
add
mov
push
sub
ret
mov
in
lock
mov
and
dec
inc
mov
xchg
std
mov
mov
add
pop
icebp
cmp
inc
sub
dec
clc
dec
add
stos
and
in
adc
stc
xor
out
stc
sub
xchg
fisubr
cld
push
sub
jg
test
fwait
jb
mov
sbb
outs
mov
popf
adc
adc
push
sbb
unpckhps
scas
mov
les
xchg
mov
(bad)
(bad)
icebp
invlpg
das
adc
mov
(bad)
nop
sbb
push
mov
ror
pop
push
dec
aaa
hlt
inc
test
gs
dec
loop
adc
in
mov
xchg
lahf
cwde
fild
popa
xor
push
mov
ret
mov
and
xchg
mov
outs
inc
lahf
cli
mov
push
push
sar
aaa
sub
jnp
dec
push
xchg
xchg
out
cmp
cdq
sub
ins
push
inc
jae
jne
sub
mov
lock
nop
xchg
aad
add
jmp
je
adc
in
push
mov
arpl
mov
out
fist
inc
xor
mov
xchg
imul
jl
ret
in
mov
sbb
repnz
xchg
call
inc
sub
cmp
cmc
push
cmp
cs
push
das
cmp
ins
xchg
addr16
fst
jecxz
daa
jl
pop
mov
cmp
rcl
icebp
xchg
and
pop
cmp
stos
stc
push
in
repnz
push
stos
mov
ins
xchg
hlt
sub
iret
and
add
inc
dec
adc
(bad)
xchg
test
fs
cmp
rcr
or
cli
ss
(bad)
cmps
fstp
dec
and
div
lds
mov
sahf
movs
sahf
mov
stc
push
cmp
test
ror
sahf
pushf
lock
pop
leave
test
in
out
jnp
jns
js
popf
dec
push
mov
pop
retf
mov
sbb
pop
adc
pop
mov
jecxz
pusha
xor
out
pop
not
xchg
leave
mov
(bad)
out
xor
sar
jne
imul
mov
jp
or
push
jo
mov
pop
mov
or
int3
mov
test
repz
jmp
jbe
pop
push
add
mov
(bad)
rcr
ja
and
cwde
(bad)
push
lods
mov
fsubr
jecxz
xchg
je
dec
rcr
(bad)
int
sar
mov
push
fnstsw
jg
mov
xor
scas
sbb
std
push
add
shl
clc
fdivr
xchg
add
cmp
sbb
popa
out
les
push
lea
push
movs
push
mov
push
ret
sbb
push
cmp
xor
nop
push
loopne
sub
inc
inc
fsubr
or
pop
mov
idiv
and
popf
dec
cmp
mov
mov
frstor
stos
adc
je
imul
sar
pop
adc
cmp
adc
mov
and
cld
xor
retf
repnz
cmps
mov
mov
dec
fstp
push
and
mov
adc
js
mov
test
mov
or
and
mov
repnz
cmp
lea
loopne
sahf
pop
dec
popf
mov
xchg
pop
es
imul
inc
ja
(bad)
cld
ror
mul
mov
push
or
push
int3
inc
cmc
or
or
mov
inc
mov
rol
add
mov
adc
lds
aam
outs
jnp
pop
mov
and
mov
xor
pop
push
aaa
hlt
and
mov
pop
ret
adc
push
aam
(bad)
push
movs
test
cmp
imul
adc
lea
mov
pop
xor
mov
jmp
inc
ins
std
inc
jbe
push
add
fdivr
cmp
cmps
cmc
popf
test
cmps
adc
or
addr16
add
pop
add
inc
test
xchg
pusha
je
pop
cmp
lods
adc
push
fld
xchg
push
shl
cmp
in
add
ja
fild
dec
int
ja
loopne
and
adc
lgs
mov
lea
fist
ret
rcr
mov
scas
mov
xor
or
jbe
scas
xchg
gs
retf
fimul
sbb
sub
stos
mov
addr16
rcr
push
sbb
in
add
xor
mov
fdiv
inc
ins
cdq
mov
add
mov
outs
aad
pop
mov
adc
sub
mov
inc
or
jb
pop
sbb
or
fwait
mov
adc
pop
pusha
(bad)
or
ja
cwde
scas
or
lea
les
sbb
shl
pop
jg
mov
fisttp
test
xchg
cmp
sbb
fimul
mov
cld
pusha
jno
jo
xchg
daa
add
add
xor
mov
sbb
add
mov
and
mov
lea
es
pop
cmovns
das
popf
mov
ret
cmc
and
icebp
shl
cmp
xlat
fwait
rcr
mov
add
ficom
test
ds
lds
xchg
imul
popa
and
data16
enter
push
fcom
movs
adc
dec
inc
adc
sub
push
push
push
mov
dec
icebp
lea
mov
pop
adc
or
add
adc
fwait
mov
dec
js
mov
mov
and
mov
mov
sub
retf
test
xor
xlat
mov
cmp
mov
sti
mov
std
jne
fdivr
xor
xchg
inc
adc
sti
data16
adc
call
lds
ret
rcl
sub
maxps
cld
adc
mov
inc
or
cmp
bound
sbb
pushf
cmp
jne
push
test
xchg
cld
mov
imul
sbb
ss
(bad)
test
fdiv
xchg
(bad)
cld
shr
add
cmp
mov
mov
mov
pop
mov
imul
cwde
mov
xchg
cmp
int3
or
mov
or
sub
out
and
jp
(bad)
sub
in
dec
xchg
jmp
dec
mov
pop
ja
mov
cmp
shr
bound
sub
add
lods
push
cmp
in
aas
xor
neg
pop
sbb
das
pop
push
sub
cmc
inc
data16
jbe
out
xchg
jmp
jge
push
mov
mov
loopne
movs
fsub
in
pop
xor
fdiv
add
int3
hlt
pop
inc
cmps
push
jl
cdq
push
push
jae
jno
test
repz
(bad)
jae
int3
pusha
dec
inc
cmp
xchg
out
push
loop
dec
mov
ins
cmp
mov
xchg
stos
pop
int3
push
(bad)
call
xchg
fwait
cmp
xor
push
xor
push
adc
bound
aaa
mov
imul
add
mov
cmc
dec
cwde
test
jl
rcl
sti
add
ret
adc
cwde
jae
mov
int
adc
push
imul
ds
dec
mov
out
mov
push
mov
in
aad
pop
fcom
scas
mov
ss
mov
call
and
mov
mov
mov
out
pushf
pop
jl
fadd
cmp
std
and
pop
pop
je
cmp
pop
xchg
test
mov
push
stc
jecxz
dec
mov
mov
popf
inc
sub
out
xchg
dec
shl
inc
call
and
call
call
add
daa
in
xor
std
mov
jnp
stos
mov
popa
mov
inc
jb
in
loopne
out
push
sub
push
rol
test
jnp
mov
outs
movs
in
dec
push
aas
out
sbb
loop
clc
hlt
ins
mov
mov
mov
(bad)
push
inc
add
(bad)
out
les
cwde
push
xchg
and
pop
mov
mov
adc
sbb
jae
ss
dec
frstor
xchg
inc
push
test
xchg
cmp
adc
popa
add
into
shr
lahf
repz
icebp
jmp
or
loop
test
push
loopne
pop
stos
gs
inc
stos
aaa
mov
pop
frstor
ret
sbb
push
int
(bad)
mov
sahf
adc
xchg
cld
scas
mov
add
mov
lods
call
es
sidtd
not
outs
std
pop
std
jne
idiv
int
sbb
outs
jp
pusha
mov
pop
movs
aaa
cmp
and
popa
cmp
xchg
imul
push
iret
xchg
jmp
adc
int
retf
bound
pushw
sbb
sub
stc
imul
cmps
loopne
sub
inc
and
xchg
ins
mov
xchg
sub
dec
popf
mov
add
push
outs
iret
fst
repnz
sub
int
and
mov
(bad)
mov
clc
fs
cwde
ror
imul
imul
mov
gs
mov
add
or
into
(bad)
lock
push
retf
fidiv
inc
push
pop
inc
xchg
xchg
cmp
frndint
test
mov
or
stos
xor
rol
pop
(bad)
adc
xlat
movs
and
lods
daa
mov
imul
int3
bound
adc
cld
retf
repz
sub
mov
dec
bswap
or
mov
jp
mov
popf
pop
jmp
pop
push
xchg
sbb
add
in
addr16
gs
scas
dec
retf
leave
cmps
outs
mov
repnz
mov
out
pop
sub
clc
sub
pop
test
out
inc
cmp
ins
jmp
mov
mov
(bad)
call
ins
sub
xlat
in
int3
loop
pop
scas
or
ins
mov
cmovns
mov
mov
cmp
mov
and
mov
pop
push
(bad)
jo
inc
sbb
iret
cwde
push
push
rdtsc
std
jmp
outs
jg
dec
ja
hlt
add
adc
sub
lds
cld
cwde
mov
mov
daa
pushf
popf
loope
ja
pop
cmp
outs
outs
jge
rol
fs
push
loopne
jae
mov
mov
int3
jne
inc
mov
cld
hlt
inc
inc
mov
push
inc
inc
add
jmp
xor
call
inc
outs
xor
mov
mov
mov
inc
jns
sbb
mov
(bad)
cmp
push
leave
pushf
shl
ins
outs
call
sbb
ror
repnz
retf
adc
sti
jno
push
or
fs
jmp
sub
fs
movs
adc
mov
popa
mov
lock
or
jae
mov
mov
adc
sub
jne
sar
jl
pop
sub
dec
mov
adc
inc
and
inc
(bad)
xrelease
cmp
push
mov
daa
lea
into
sbb
cmp
das
jbe
mov
imul
xor
into
shl
jo
sti
and
xchg
sbb
(bad)
xor
inc
cs
out
mov
or
pushf
add
mov
xlat
xlat
xor
daa
(bad)
push
xchg
rol
ins
or
cmp
je
call
scas
xchg
arpl
mov
stos
loop
and
dec
adc
sbb
sub
dec
jo
mov
lock
mov
jb
jecxz
jge
(bad)
mov
mov
mov
fucom
push
retf
add
out
outs
lods
jae
sub
add
aam
or
inc
repz
test
shl
aas
leave
lods
xor
(bad)
call
adc
and
mov
mov
ins
push
sbb
xchg
out
xchg
daa
(bad)
iret
jne
push
push
or
push
cmc
nop
(bad)
mov
jg
xchg
xor
cmp
out
fisttp
xchg
test
xchg
stc
in
mov
dec
iret
mov
or
inc
xor
or
(bad)
out
neg
xor
push
ror
mov
sub
mov
arpl
pop
daa
sub
sub
xchg
adc
lock
jnp
or
mov
push
int3
test
pop
in
(bad)
in
pop
popf
jmp
popa
cmp
loop
retf
test
or
add
mov
lods
(bad)
jae
mov
pop
jno
hlt
cmps
mov
cmp
fist
push
pop
(bad)
addr16
dec
xor
or
into
adc
scas
pop
add
ret
icebp
jg
ret
xchg
repz
call
ret
stos
ins
adc
shl
sbb
dec
loopne
mov
leave
xor
pop
fdiv
or
dec
dec
sub
jmp
jnp
or
add
push
jbe
sbb
push
movs
in
jl
mov
jb
and
mov
rol
adc
mov
ds
call
cmp
(bad)
and
adc
add
or
fldenv
not
in
inc
sbb
mov
pop
jmp
ins
popa
ficomp
int
mov
ds
xchg
add
push
rcl
dec
imul
sar
es
jne
loope
mov
fiadd
dec
mov
cmp
sbb
jle
sub
push
int
movs
test
or
pop
jnp
adc
cmp
fxch
add
sub
shl
add
out
fld
dec
fsubr
mov
xchg
push
fidivr
call
pop
lock
js
call
rol
cmp
sar
mov
enter
leave
inc
idiv
fdivr
js
and
cmp
xchg
xchg
push
int
mov
aad
push
iret
jmp
push
sub
iret
sbb
gs
outs
jmp
inc
mov
inc
into
outs
pop
xrelease
xchg
inc
shl
mov
and
ficomp
retf
xchg
fimul
fxch
push
push
mov
sbb
push
xor
xor
cmps
loop
int3
push
jb
or
inc
mov
lods
pop
out
int3
mov
or
inc
cmp
xchg
adc
popa
std
ss
adc
adc
mov
mov
xor
mov
xlat
retf
lds
out
pop
rcl
sahf
push
pusha
sbb
pop
sub
cmp
xchg
inc
jecxz
pop
inc
xchg
pop
dec
jp
add
and
and
sub
popa
test
and
xchg
adc
add
mov
out
mov
(bad)
in
(bad)
(bad)
jg
into
sbb
ret
cmp
into
inc
push
mov
test
outs
mov
cld
pop
cmp
mov
mov
push
push
cs
mov
sub
in
push
adc
jo
sbb
dec
mov
aam
loope
jecxz
pop
mov
pop
push
hlt
cmps
inc
dec
stc
js
or
retf
mov
mov
daa
loop
(bad)
push
test
ss
inc
jge
jae
and
add
je
fild
cmp
cmp
icebp
mov
lock
mov
and
mov
mov
aas
aas
(bad)
jae
xchg
enter
push
sbb
mov
mov
fstp
sub
add
inc
add
inc
sbb
inc
jl
imul
stc
adc
jnp
push
xor
xor
inc
pop
jbe
jl
dec
dec
popf
fistp
icebp
out
pop
and
sbb
(bad)
jmp
pop
adc
in
push
cmps
inc
lea
add
test
mov
int3
sub
mov
and
mov
pop
xchg
xor
jbe
mov
rol
add
xor
push
pop
jmp
ins
fld
push
(bad)
jb
xor
retf
cmovge
or
(bad)
loopne
jecxz
or
mov
test
popa
test
push
leave
dec
add
jmp
shl
xchg
mov
out
pop
or
stos
test
es
mov
sti
je
xor
inc
push
push
lods
mov
jnp
ss
popf
movs
enter
push
add
hlt
cmps
(bad)
cmp
dec
xchg
(bad)
fnstsw
sbb
add
dec
mov
loopne
adc
mov
adc
data16
and
mov
iret
xchg
imul
sti
inc
jle
xchg
cmp
icebp
movs
int3
fmul
mov
rcl
mov
mov
retf
mov
int
sbb
retf
adc
rcl
mov
or
mov
cmp
ret
jmp
ja
add
xacquire
neg
add
loopne
sti
shr
retf
cmp
sbb
mov
test
add
ffreep
sub
adc
cmp
xchg
sub
sbb
in
sub
jecxz
push
shl
xchg
cdq
mov
mov
imul
mov
mov
out
jne
sub
adc
ret
push
jns
mov
arpl
add
or
jg
xchg
fs
xchg
shl
jo
rcl
mov
loope
jp
push
imul
call
pop
lds
sbb
mov
xchg
jle
mov
popf
aad
push
fsub
push
xor
cmp
js
fstp
push
arpl
dec
aaa
loop
mov
fs
sar
pop
jno
aam
rcl
inc
mov
inc
icebp
pop
or
inc
mov
jo
js
mov
xchg
rcl
push
out
(bad)
aad
es
fisttp
adc
loope
push
outs
(bad)
push
icebp
pop
int
and
xchg
pushf
int3
sahf
pop
pop
retf
aaa
xor
int3
in
fmulp
and
dec
les
int
or
stos
add
and
pop
jns
popa
mov
adc
xchg
les
pop
inc
dec
ins
add
and
stc
cmp
scas
xor
jbe
xchg
icebp
push
out
int
add
pop
mov
inc
sbb
inc
inc
in
(bad)
ficom
mov
lea
dec
in
cmp
ja
inc
popa
paddd
cli
add
out
jl
cmp
sub
adc
xor
in
push
cs
les
cmp
xchg
outs
and
cmp
sbb
mov
jmp
movs
ficom
lea
cmp
mov
test
cmc
ja
xchg
arpl
fisttp
sub
pop
loopne
jno
xor
mov
das
ds
adc
push
rcl
inc
xchg
dec
addr16
jo
mov
adc
xchg
in
je
fldcw
dec
ins
cmp
pop
fsubr
out
cld
movs
idiv
rcl
aaa
pop
sbb
or
lods
adc
mov
cs
mov
and
int3
(bad)
rcl
cld
sti
push
inc
push
in
adc
pop
jnp
test
jl
es
(bad)
in
xchg
stos
jns
icebp
mov
rol
ss
retf
and
xlat
cld
sbb
scas
ret
pop
or
popf
or
outs
dec
xor
or
jmp
rcl
jge
mov
dec
aas
dec
fcmovu
adc
(bad)
dec
jl
jbe
fdivr
repnz
repz
std
adc
pop
rcl
fucomip
pop
scas
movs
jle
cmc
jp
aaa
push
les
ins
push
call
cmp
or
stos
mov
mov
fcomip
fld
test
jl
xchg
movs
add
(bad)
mov
call
dec
adc
xchg
mov
loopne
sahf
jg
inc
imul
jae
pop
jl
sbb
xor
test
or
cmp
rcl
js
cs
cmp
mov
adc
fmul
les
in
stos
mov
iret
pop
aam
js
jge
ss
xor
push
outs
dec
loop
cmp
add
add
pop
inc
sbb
mov
cli
xchg
cmps
sbb
cmp
add
or
hlt
pop
test
mov
add
clc
mov
xor
push
aaa
push
fst
jg
ss
hlt
mov
je
mov
iret
sbb
sti
cwde
or
lahf
ins
or
xchg
sub
adc
jb
add
mov
test
inc
fwait
fwait
in
sbb
bound
xchg
adc
jbe
(bad)
lods
mov
add
push
sti
push
dec
cmps
jb
xchg
xchg
rol
nop
out
(bad)
out
bound
and
pushw
pop
loopne
xor
cmp
push
mov
or
test
ret
jge
arpl
nop
or
stc
xor
pop
pop
mov
mov
pop
out
call
xchg
xlat
cmps
pop
cmps
je
sti
fnsave
outs
call
shl
inc
add
dec
mov
sub
pop
scas
sub
(bad)
inc
lds
inc
jnp
int
cmps
add
out
mov
xchg
adc
fadd
loopne
fild
mov
mov
push
imul
mov
jmp
mov
jb
jae
sti
push
cmp
mov
mov
adc
aas
cdq
(bad)
adc
inc
out
and
icebp
xchg
outs
adc
xlat
fcom
xchg
jns
movs
(bad)
mov
fstp
or
pop
xchg
aas
jb
xchg
cmps
ror
mov
scas
jg
cs
movs
mov
pop
lea
and
mov
push
repz
les
or
ret
adc
pop
mov
shl
mov
and
outs
es
push
test
and
sbb
idiv
cli
push
dec
push
cmps
movs
call
cs
adc
imul
rol
cmp
xchg
jbe
imul
sbb
aad
cwde
pop
mov
rol
loope
shr
(bad)
popf
mov
sbb
(bad)
(bad)
dec
sbb
sub
push
xchg
or
scas
jo
adc
test
jge
xor
jp
enter
popa
sub
nop
enter
scas
xor
inc
fucom
adc
pop
addr16
or
loop
mov
cdq
(bad)
or
jne
ds
push
add
push
cli
jl
dec
ret
adc
aad
(bad)
mov
push
sbb
push
jae
add
cmp
dec
and
(bad)
cld
inc
cmc
fs
cmp
(bad)
push
rcr
xchg
loope
bound
mov
pop
nop
ins
mov
mov
inc
addr16
push
pop
std
pop
jo
xchg
xlat
sub
inc
xchg
mov
inc
inc
sbb
cwde
fsubr
loopne
aaa
scas
and
lock
cwde
adc
stos
xchg
inc
adc
mov
das
dec
pop
aaa
enter
mov
sti
test
in
push
pop
sub
scas
dec
daa
mov
je
mov
mov
sub
aad
aam
sti
fs
mov
pop
sub
add
cmc
mov
in
pop
xlat
xor
imul
or
and
rcl
fsubr
adc
jne
and
fwait
sub
sub
retf
adc
or
shr
cmp
(bad)
pop
out
fiadd
lds
sbb
pop
add
sub
push
xor
xor
cmc
movs
popf
xor
stc
imul
sub
jae
and
inc
cs
dec
sar
jne
dec
outs
loopne
mov
lea
mov
ds
pop
or
(bad)
hlt
or
lds
test
xlat
push
bound
out
push
fnstcw
imul
movs
std
jns
jbe
jne
pop
retf
adc
icebp
call
jmp
dec
aas
xor
ret
aad
mov
clc
fsubrp
add
mov
cmps
es
sbb
mov
stos
jnp
jg
and
sahf
and
and
aas
outs
inc
retf
ins
inc
ins
mov
xor
loop
sub
sbb
mov
inc
imul
mov
cmps
nop
add
mov
jns
and
cdq
sbb
jb
mov
loope
dec
xchg
scas
fs
dec
jbe
sub
call
(bad)
or
add
dec
push
fwait
inc
rol
gs
shr
mov
jnp
push
icebp
and
lods
aas
in
inc
loopne
imul
pop
xor
jmp
lods
mov
out
jmp
adc
adc
dec
xchg
fisttp
pop
sahf
es
sbb
dec
mov
pop
inc
push
mov
inc
ficomp
inc
lods
in
rcl
adc
dec
mov
hlt
cli
push
mov
sbb
xor
hlt
loope
stc
mov
adc
dec
push
push
pushf
cmp
ss
xchg
jno
stos
adc
sub
leave
push
adc
mov
es
push
sbb
iret
xor
ficomp
stc
sbb
inc
daa
mov
pop
sbb
das
cmps
std
push
das
jge
dec
out
dec
xchg
inc
cmp
pop
add
inc
jmp
jle
cs
and
xchg
das
push
shl
sub
mov
sbb
mov
inc
(bad)
xchg
arpl
jecxz
xchg
jl
add
pop
add
pop
pop
add
mov
jnp
jecxz
xchg
aad
dec
in
mov
mov
add
adc
movs
jmp
lds
scas
sysret
and
adc
jbe
pop
(bad)
cmc
mov
(bad)
sub
outs
mov
setge
mov
imul
xchg
xchg
dec
lock
cmp
sub
aad
stc
lds
add
xchg
mov
ficomp
push
ss
jo
add
test
sub
into
dec
sub
stc
push
ds
mov
jl
mov
icebp
(bad)
retf
cmp
mov
movs
hlt
ss
push
sbb
dec
mov
inc
jae
cld
mov
(bad)
push
outs
mov
in
sub
test
mov
(bad)
and
pop
jae
xor
mov
or
jno
hlt
movs
ins
js
mov
test
cli
sub
inc
xor
push
(bad)
test
add
fmul
xor
sbb
sbb
pop
pop
mov
xchg
and
daa
or
mul
lods
daa
and
sbb
ds
xor
push
mov
mov
push
xor
cmps
dec
js
dec
outs
ss
cld
pop
icebp
sar
out
cs
mov
mov
and
ja
jae
pusha
bound
les
dec
pop
push
loope
mov
xor
fnstenv
arpl
ffreep
add
movs
lds
ja
mov
clc
jmp
mov
sub
inc
push
fnstcw
(bad)
les
jns
jmp
fnstenv
fisttp
retf
sbb
cmps
dec
push
out
iret
xchg
xor
enter
mov
sahf
das
pop
shl
inc
and
adc
push
repnz
push
mov
not
or
mov
xchg
and
test
lods
add
mov
sbb
xor
or
lahf
stos
sbb
mov
add
fcom
(bad)
in
inc
jbe
and
mov
(bad)
adc
mov
int
cmps
or
dec
inc
arpl
js
int3
mov
xchg
ss
mov
pusha
(bad)
daa
xor
push
loopne
leave
inc
iretw
repz
mov
xchg
sbb
cmps
adc
cmc
mov
mov
iret
mov
leave
sbb
das
jle
xchg
cmp
mov
sub
repz
pop
ss
xchg
or
out
cli
inc
out
fisttp
jmp
adc
inc
inc
call
push
xchg
pushf
aad
scas
or
push
stos
jecxz
push
dec
push
test
lea
test
inc
or
daa
pusha
test
push
aas
dec
cmps
stc
mov
jle
mov
push
aam
int3
dec
pop
or
xchg
iret
sahf
das
xchg
mov
mov
jmp
repz
and
mov
pusha
(bad)
pusha
sbb
inc
dec
out
pusha
mov
sbb
mov
iret
mov
cmc
push
sbb
xlat
pushf
rcr
ret
daa
mov
scas
and
daa
enter
cdq
jae
jo
cwde
push
and
das
(bad)
pmullw
aad
mov
sar
cmps
mov
adc
push
aam
shl
in
mov
mov
dec
adc
sbb
les
stos
imul
mov
jae
push
cli
jg
je
push
mov
cld
aam
push
call
scas
inc
mov
aas
pop
dec
enter
xchg
mov
xchg
lods
add
pop
in
xchg
mov
or
int3
mov
(bad)
retf
sti
mov
and
arpl
addr16
nop
sub
mov
push
or
mov
jno
xlat
mov
dec
inc
add
out
lock
and
aaa
cmp
pusha
jns
inc
rcr
jmp
push
sar
and
mov
jne
gs
xlat
call
repz
ss
and
imul
push
ss
or
loop
inc
mov
ret
stc
pop
sbb
mov
(bad)
enter
pop
ja
stc
add
dec
fwait
dec
outs
test
adc
xlat
pop
and
pop
call
jns
shr
frstor
mov
mov
add
imul
retf
lea
enter
dec
ror
and
retf
or
dec
mov
and
dec
(bad)
fdivr
inc
mov
lods
mov
xor
inc
lods
cdq
loope
inc
push
ja
add
sbb
mov
scas
hlt
mov
idiv
cli
jo
gs
sub
out
or
xchg
outs
sub
lods
jne
imul
sub
xchg
adc
fldcw
adc
or
fisubr
das
xchg
ret
rol
cdq
iret
enter
push
je
imul
sbb
mov
out
or
ins
ds
ins
fnstenv
btc
mov
call
mov
les
mov
(bad)
jg
ror
pop
add
dec
add
std
fwait
(bad)
or
cld
cmp
movs
dec
popf
in
jnp
mov
clc
retf
pusha
xchg
jp
fnsave
adc
mov
and
dec
push
add
(bad)
jge
jecxz
pop
jmp
leave
aam
dec
test
push
into
xchg
adc
lods
or
cdq
add
pop
int
or
bswap
sahf
jns
add
xchg
fistp
(bad)
mov
push
jo
call
pop
jmp
xor
xchg
in
ins
ins
aas
xchg
xor
les
pop
xchg
cwde
xor
outs
sahf
sub
pop
pop
call
jb
or
fdiv
and
mov
and
add
mov
and
inc
lods
pop
fnstenv
mov
adc
or
popf
lock
xlat
push
or
in
stc
mov
xor
imul
retf
jns
imul
mov
mov
pop
lahf
inc
cmp
call
popf
(bad)
xor
mov
jns
mov
sbb
xchg
cmp
mov
fbstp
pop
inc
cdq
xlat
loop
cdq
fidivr
adc
clc
push
mov
inc
pop
and
sbb
sbb
(bad)
pop
xor
mov
sub
cmc
ins
jb
mov
add
mov
data16
push
sub
daa
pop
or
jo
inc
mov
push
popa
call
jmp
icebp
fnstcw
jg
pop
retf
pusha
cmp
inc
or
inc
sahf
dec
imul
outs
sub
pop
popf
test
fst
or
and
popa
mov
jmp
pop
movs
fs
and
sub
sub
fisttp
jl
dec
or
xchg
test
movs
push
dec
sbb
xchg
add
shl
in
out
shr
push
cmp
rol
jge
sub
leave
pop
cdq
mov
ficom
mov
sub
mov
daa
mov
cmp
pop
xor
sbb
out
lods
jge
lea
or
movs
jmp
repnz
xchg
or
mov
mov
pop
je
ret
fbld
mov
jnp
pop
fcom
movs
bound
fsub
mov
mov
sbb
and
mov
push
imul
jl
add
cmp
mov
mov
icebp
dec
lock
into
push
dec
xchg
(bad)
or
addr16
js
pushf
jmp
dec
dec
ficomp
dec
and
nop
jbe
repnz
pop
lea
ret
ficomp
fcomp
cmp
sub
sub
fimul
shl
xchg
(bad)
mov
and
loop
rcl
leave
add
push
adc
(bad)
ret
mov
sbb
and
loope
or
cdq
inc
stos
lods
jne
xchg
dec
in
xor
jae
cmp
bound
mov
inc
dec
jne
data16
test
call
fucomip
jno
les
or
pop
and
in
rep
push
xor
mov
das
mov
push
xchg
hlt
jae
push
(bad)
fsubrp
mov
cmp
or
js
mov
leave
lahf
ins
xor
jge
stos
or
mov
iret
mov
adc
daa
cmp
push
test
ins
sub
in
addr16
mov
dec
sbb
xchg
lock
sub
pop
push
push
mov
push
mov
and
jno
or
lds
jg
xchg
lods
dec
div
sahf
lock
in
pop
rcr
inc
mov
stos
pop
sub
pop
mov
push
inc
shl
(bad)
dec
cmp
mov
cmp
jo
imul
fst
into
pushf
fadd
inc
xchg
jecxz
mov
stos
or
add
iret
xchg
sub
inc
call
sti
add
popf
sbb
sub
push
out
cli
pop
clc
das
xchg
hlt
push
stc
ret
add
gs
adc
(bad)
outs
mov
sbb
or
iret
or
pop
call
into
cmp
sub
mov
xchg
xor
sub
add
(bad)
lahf
imul
xor
retf
imul
imul
cld
xor
das
ss
cmp
in
cmps
dec
ja
cmp
inc
mov
jb
imul
test
(bad)
shl
dec
dec
jg
and
pusha
xchg
call
clc
loop
rol
inc
jno
fwait
cmp
lds
mov
cmp
ins
jmp
ffree
aam
add
mov
fimul
cmps
std
xchg
adc
cmps
sub
and
stc
mul
mov
in
pop
mov
jne
xor
pop
cmp
and
sahf
mov
push
dec
test
(bad)
scas
test
mov
sbb
pusha
xchg
repnz
lods
xor
pop
and
mov
mov
mov
rol
cmp
mov
push
and
test
jg
push
jno
dec
pop
daa
test
out
pop
jno
adc
lock
dec
add
dec
out
xor
mov
push
imul
pop
and
fcomp
rol
ret
jmp
arpl
adc
mov
sbb
adc
mov
or
jge
aas
add
stos
and
push
add
mov
popf
fcomp
ret
retf
mov
shr
jbe
idiv
cmps
lods
mov
pop
sub
push
xchg
in
lds
repz
call
inc
push
mov
inc
pop
or
outs
or
mov
jecxz
dec
jo
sbb
aas
jmp
gs
or
enter
add
(bad)
mov
cmp
jns
or
push
xchg
test
mov
sbb
jle
jmp
in
stc
retf
ret
cli
scas
shr
sti
pop
sbb
mov
or
sbb
pop
xor
loope
sub
retf
dec
and
clc
pop
xchg
ret
sbb
sbb
push
add
stos
jmp
mov
dec
cmps
ins
xchg
pop
mov
fidiv
pop
cmps
push
out
mov
cmp
outs
sub
fldcw
stos
sub
retf
les
stos
out
mov
repz
call
nop
cdq
aam
or
push
add
inc
mov
cmp
dec
push
scas
ins
mov
jge
xchg
ss
xchg
dec
cmp
test
into
mov
pop
dec
es
dec
jp
leave
add
fdiv
movs
scas
pop
and
sbb
mov
mov
movs
in
pushf
sub
pop
pusha
out
je
dec
loop
stos
push
sbb
xchg
jmp
pop
call
sbb
xchg
jb
adc
jne
jmp
mov
cdq
aad
sub
mov
int
mov
std
ins
xchg
dec
add
stos
jns
(bad)
(bad)
pusha
hlt
jp
ret
and
lds
out
push
dec
jmp
rcr
or
mov
mov
mov
cmp
xchg
mov
mov
shl
cmps
repnz
retf
mov
data16
jns
dec
je
outs
mov
leave
leave
pop
xor
lock
push
gs
mov
das
push
out
pop
retf
dec
lds
mov
jae
test
sub
xchg
shl
cmp
cmp
lea
sbb
or
sub
scas
add
ror
les
cmc
sahf
mov
pop
mov
sub
dec
dec
add
cdq
push
scas
in
lods
cmc
dec
mov
fiadd
jmp
sub
hlt
or
out
inc
call
jp
rcr
shr
mov
or
sbb
imul
pop
jo
(bad)
sbb
inc
fsubr
dec
adc
sub
rcr
cdq
addr16
mul
pushf
dec
push
scas
mov
pushf
popf
int3
gs
cs
mov
xor
xor
lods
mov
out
sti
out
pop
cmps
(bad)
inc
movs
jg
and
dec
mov
call
jno
xlat
xor
jecxz
div
mov
jge
fldenv
adc
sbb
mov
outs
arpl
push
scas
pushf
pop
dec
movs
sub
pop
pop
mov
sbb
mov
jge
in
bts
adc
movs
pushf
div
loop
out
loopne
and
aaa
nop
mov
mov
cmp
mov
push
in
xor
pop
fld
sub
repnz
repnz
or
call
cwde
or
rol
mov
xor
and
xchg
int3
mov
dec
mov
pop
iret
cdq
sbb
xchg
call
test
mov
fwait
dec
inc
mov
cmp
ja
dec
mov
dec
cmc
(bad)
pop
daa
jmp
push
push
mov
lods
and
add
addr16
add
jnp
xchg
popf
shl
mov
hlt
push
adc
jmp
pop
pop
pop
xchg
jb
and
xchg
daa
mov
mov
out
rcl
loop
jae
sub
rol
aaa
inc
sub
add
repnz
mov
in
out
imul
rcl
mov
aam
shl
mov
rcr
cmp
movs
inc
push
dec
add
jg
xor
outs
xchg
pop
(bad)
cmp
enter
data16
mov
aaa
sub
and
je
repnz
push
imul
dec
dec
loope
retf
push
sub
inc
mov
sbb
call
imul
mov
push
sar
cmp
stos
adc
cld
sti
push
scas
aad
push
inc
nop
jne
cmp
hlt
fistp
retf
test
shr
push
sbb
or
sar
mov
repnz
jl
push
retf
sub
xor
dec
pop
call
xchg
aad
aad
rcl
outs
mov
pop
and
jae
(bad)
std
(bad)
imul
xor
mov
dec
adc
loope
push
test
or
sbb
loop
xchg
jb
arpl
xor
mov
pop
sbb
cmps
xlat
call
popf
cdq
jmp
dec
rol
fistp
cmp
jnp
shl
sub
push
ss
mov
sbb
imul
mov
mov
jmp
aaa
fwait
add
push
pop
ret
and
push
icebp
icebp
jge
or
into
or
add
repnz
sub
inc
fst
addr16
fwait
aas
mov
xor
dec
mov
int3
les
pop
push
test
cmp
inc
mov
fmul
sub
jmp
xchg
mov
(bad)
std
inc
jg
arpl
aad
jnp
xor
inc
loop
cmp
movs
dec
xchg
mov
mov
imul
or
test
movs
(bad)
inc
sub
mov
int3
push
pusha
lahf
xchg
stos
and
and
fwait
call
jle
jecxz
aaa
hlt
leave
mov
cdq
and
pop
mov
hlt
push
dec
push
cli
inc
ret
add
push
and
cmps
ins
xchg
mov
mov
mov
jns
sti
das
dec
(bad)
inc
mov
xchg
dec
jb
and
lock
aas
movs
pop
dec
ja
(bad)
xchg
(bad)
outs
fidivr
cdq
inc
mov
out
retf
dec
push
ja
and
ins
sub
aad
sbb
retf
jne
push
ret
sub
loop
repnz
cmp
ds
mov
daa
inc
ins
fsincos
jge
add
dec
out
gs
dec
xor
push
add
test
sbb
fldcw
push
mov
clc
sti
sub
lods
jmp
mov
dec
shr
push
idiv
mov
daa
fidiv
add
xchg
xchg
sbb
aam
imul
push
pop
repz
cmp
sbb
call
sub
push
outs
rol
or
dec
arpl
push
sbb
test
pushf
jg
dec
jmp
sbb
test
call
mov
idiv
scas
lods
test
and
mov
mov
shrd
(bad)
mov
sub
fild
int3
and
dec
test
mov
mov
addr16
bnd
push
mov
into
call
dec
sub
inc
mov
mov
hlt
scas
pop
dec
sub
shl
mov
je
ret
cmp
sub
mov
sub
xlat
inc
arpl
fmul
dec
sbb
add
shl
cdq
adc
bound
sbb
sbb
ficom
xor
stc
xor
sbb
jge
lock
xchg
mov
mov
inc
mov
mov
adc
adc
nop
pusha
(bad)
adc
xlat
xor
inc
pop
fmul
(bad)
sti
arpl
sahf
fsubr
test
mov
xchg
fstp
loop
pop
pushf
leave
fstp
shl
aad
pusha
popf
out
aaa
pop
xchg
sub
call
test
pop
repz
push
push
test
out
stos
mov
sbb
push
xor
mov
inc
adc
cld
sub
cmps
xchg
jmp
jecxz
dec
pop
stc
data16
mov
inc
imul
jg
jne
mov
sub
dec
sbb
or
leave
jae
jb
lods
rol
ss
sbb
cli
xchg
fild
lds
dec
je
mov
sbb
mov
jecxz
sbb
shld
mov
je
bound
fdivrp
(bad)
fs
test
jl
push
fistp
cmp
call
(bad)
cli
sar
imul
lea
gs
movs
cmp
add
ins
addr16
lods
lds
cdq
add
lock
mov
mov
cwde
xor
out
dec
aam
aas
retf
cmp
mov
mov
add
pop
pusha
dec
xchg
xchg
daa
in
cs
fld
xchg
popf
adc
dec
jbe
mov
cmps
adc
xadd
jle
cdq
xchg
das
pop
loope
dec
test
push
mov
mov
inc
inc
test
(bad)
push
das
hlt
xchg
adc
in
add
fistp
daa
cmps
loope
jmp
ret
leave
inc
mov
push
pop
(bad)
inc
pop
shl
jmp
mov
neg
cdq
pop
push
stc
xor
js
jg
aam
test
test
dec
sbb
cmp
call
mov
jmp
sub
push
mov
mov
in
test
and
inc
fnsave
(bad)
(bad)
xlat
jg
jnp
(bad)
and
adc
data16
inc
jb
in
inc
loop
xor
leave
stos
sub
mov
(bad)
pop
dec
fyl2xp1
xchg
cmp
ds
and
dec
neg
je
dec
fdivp
je
(bad)
jecxz
stc
inc
xchg
call
jecxz
mov
inc
add
mov
jo
sbb
add
fsub
cmp
mov
sub
add
(bad)
push
pop
frstor
jne
cwde
xchg
dec
lea
jmp
sbb
popf
in
fld
ffree
jmp
mov
jecxz
fadd
lds
push
and
mov
jno
pop
out
(bad)
stos
add
lea
xlat
pop
cs
into
retf
int3
loop
jp
cmp
mov
cmp
push
sbb
mov
mov
repz
cld
lods
adc
jb
mov
or
cmps
loopne
xchg
mov
popa
or
jbe
sbb
fsub
cwde
cli
and
jge
mov
cmp
icebp
test
daa
cli
mov
movs
hlt
xor
fnstenv
in
push
(bad)
sub
ret
adc
xchg
push
xchg
xor
push
push
inc
jns
jle
icebp
xor
fwait
(bad)
scas
mov
add
push
shr
ds
adc
xor
lahf
movs
fild
xchg
mov
inc
jo
cmp
jmp
stos
aad
cmp
daa
inc
jne
mov
test
pop
jno
push
les
cli
rol
xchg
xchg
test
xor
stc
loop
xor
imul
cmp
in
pop
in
sub
push
push
into
sub
retf
mov
out
jb
or
stos
and
cmp
movs
or
and
add
out
adc
adc
mul
xchg
push
mov
jp
and
xchg
scas
fisubr
ss
ret
push
xrelease
bound
fcomp
stos
hlt
fdiv
test
and
repnz
shl
sub
mov
fsub
dec
mov
sti
mov
push
stc
push
jmp
mov
xchg
add
pop
jne
mov
xor
push
inc
cli
fstp
or
repnz
and
xchg
and
sub
push
inc
sbb
cli
fdiv
add
cmp
jb
arpl
in
aas
fbstp
in
icebp
xor
mov
or
cld
in
mov
xchg
push
sub
inc
and
cmp
leave
int3
adc
add
in
push
add
sub
sahf
cs
adc
out
femms
sbb
in
ss
ret
enter
scas
adc
inc
fcmovnbe
aas
scas
shl
ds
je
(bad)
fbstp
mov
sbb
lock
and
addr16
xor
push
ficomp
cwde
pop
xchg
loopne
or
sbb
idiv
pop
xchg
push
pop
sub
into
cmps
jecxz
lahf
sub
dec
pop
push
or
gs
in
mov
aaa
cdq
popa
and
(bad)
out
cmp
test
dec
dec
fbstp
neg
add
mov
sbb
adc
daa
mov
jecxz
mov
mov
ret
lods
xchg
pusha
mov
lods
loopne
pop
fisttp
out
fs
out
cli
cdq
lds
dec
shl
dec
pop
fnstcw
push
dec
sahf
ds
in
sar
lahf
imul
call
dec
rol
rcr
(bad)
sti
dec
(bad)
pop
clc
inc
sbb
add
jb
add
adc
dec
imul
sar
lds
(bad)
std
sbb
pop
mov
mov
test
pop
(bad)
gs
adc
cmp
sti
rcr
cmp
inc
add
movs
jge
and
mov
shl
mov
outs
int
xchg
pusha
stc
into
xchg
jge
fcmovnu
add
mov
cmp
add
shl
retf
xchg
aaa
mov
jmp
sbb
push
pop
xchg
popf
and
adc
cdq
mov
or
mov
pop
add
popf
xchg
lods
xchg
and
popf
(bad)
movs
movs
mul
out
adc
mov
(bad)
mov
call
pop
pop
push
adc
pop
push
inc
pop
sbb
pop
aas
adc
mov
jnp
fwait
pop
pop
xor
(bad)
imul
sub
fstp
and
shl
inc
push
mov
sub
mov
repz
nop
daa
and
mov
aad
stc
dec
adc
fs
out
jp
push
xchg
int
sub
dec
dec
sub
inc
in
jae
cmp
cmps
int
dec
pop
in
ja
out
stos
(bad)
fsubrp
or
test
fdiv
push
icebp
test
or
and
cmp
sbb
or
lods
int
fimul
mov
iret
pop
in
dec
push
idiv
or
popf
xor
(bad)
in
iret
mov
data16
mov
mov
mov
jae
push
add
pop
fist
inc
in
pop
mov
xchg
jno
aam
rcr
inc
sub
addr16
adc
retf
data16
fcomp
push
(bad)
out
or
rol
clc
pop
cmp
push
lahf
jno
sub
fdiv
cmp
pop
lahf
cmp
jecxz
test
test
xchg
add
push
jae
in
mov
aad
rcr
sbb
mov
pop
sar
(bad)
cli
mov
ret
xchg
call
ret
mov
out
mov
std
jae
in
push
in
sub
aas
mov
ds
fcom
stos
xor
pop
call
add
xchg
add
sti
clc
mov
sub
inc
sub
movs
mov
push
cmp
fdivr
call
ss
dec
cmps
jmp
pop
add
ins
fcmovnb
pop
sub
in
into
ror
push
pop
loope
ja
rol
scas
in
popa
dec
iret
mov
mov
test
test
pop
lods
push
loopne
daa
dec
push
test
dec
mov
push
inc
lods
hlt
sbb
int
cmps
pop
adc
jbe
pusha
pop
push
xchg
call
arpl
imul
dec
or
pop
cmp
dec
jbe
mov
or
scas
movs
cwde
call
cs
xlat
retf
push
cmp
mov
or
cmp
mov
dec
mov
adc
xor
sub
xor
mov
and
push
fld
std
(bad)
jle
(bad)
pop
rcr
gs
add
sub
jle
and
fs
not
pop
int3
stc
push
movs
daa
xor
push
push
cdq
push
push
inc
(bad)
bnd
pop
xchg
inc
mov
int
xor
fnstcw
call
jecxz
dec
repnz
cld
add
fstp
les
and
stos
inc
in
stos
fist
xlat
shl
jne
mov
ficomp
cli
jne
pop
jle
in
jne
sbb
ins
cli
or
scas
cmps
popf
clc
add
mov
shl
(bad)
aad
not
(bad)
int
mov
jmp
mov
sbb
pop
fisttp
push
jnp
cld
shr
cmps
dec
and
or
pop
mov
pusha
lea
mov
cmp
imul
pop
sahf
mov
stos
jb
adc
mov
in
push
nop
mov
push
cmp
mov
leave
retf
scas
cmp
arpl
mov
fnsetpm(287
(bad)
jmp
movs
xadd
sar
mov
lds
outs
or
enter
sahf
jg
popa
loopne
neg
aam
fcom
push
pop
stc
jmp
sar
aaa
movs
xlat
push
int3
xor
sar
cmp
or
fmul
fsub
daa
pop
sbb
pop
not
and
es
outs
xchg
sub
ins
jge
mov
inc
out
fisub
inc
pusha
lods
or
and
cmp
in
inc
sbb
enter
cmp
fdiv
xor
lods
jnp
push
sub
fsubr
push
cdq
push
es
or
mov
sub
adc
lods
dec
mov
fs
cld
sbb
jg
jb
inc
loope
mov
daa
adc
fdiv
movups
xchg
cwde
xchg
jg
sub
arpl
fst
cmps
in
sar
mov
dec
loopne
js
outs
ja
pop
mov
inc
lods
std
fwait
sbb
imul
sbb
dec
popf
dec
push
dec
adc
ss
mov
sar
outs
das
fcomp
xchg
add
jecxz
fcomp
xor
sub
in
cmp
push
cmps
mov
outs
sbb
aas
inc
xchg
mov
(bad)
pop
jb
int
jge
and
(bad)
in
sahf
aas
mov
into
pop
sbb
and
jle
pop
mov
lea
push
xor
mov
stos
xor
fcomp
push
iret
pop
in
jmp
sbb
mov
cwde
sysexit
lods
adc
add
mov
cs
aas
mov
mov
and
sub
cmc
adc
sub
mov
push
dec
ins
jg
out
push
arpl
jmp
fdiv
sbb
jl
push
jns
xchg
and
arpl
cs
mov
addr16
es
mov
jmp
in
(bad)
cmp
xlat
pop
icebp
mov
sar
leave
std
cmp
fcomp
das
in
sub
cmp
scas
cmp
jmp
push
aaa
mov
ror
scas
idiv
aad
xor
stc
and
inc
xchg
inc
clc
dec
shl
xlat
inc
xor
sahf
outs
mov
sahf
sti
xchg
in
pop
pushf
add
adc
cwde
mov
lock
das
dec
and
mov
jns
sti
push
int3
imul
loope
push
(bad)
xchg
sub
xchg
cmp
push
jb
fsub
mov
div
std
iret
xchg
add
mov
push
and
mov
jmp
dec
aas
xor
push
sbb
push
push
inc
clc
lock
jne
mov
pop
cvtdq2ps
mov
(bad)
push
fwait
sub
adc
mov
adc
inc
wbinvd
aaa
fwait
iret
mov
scas
enter
jns
jecxz
fucomp
sub
in
test
jg
cmp
stc
addr16
cmps
cmp
mov
(bad)
and
dec
xorps
mov
dec
mov
sbb
je
(bad)
mov
inc
mov
(bad)
sub
xchg
jno
aaa
push
mov
loop
call
movs
ss
cld
out
mov
inc
dec
sub
or
push
arpl
adc
stos
sbb
rcr
(bad)
mov
jge
mov
shr
sbb
fisttp
or
pop
push
xchg
leave
or
or
sub
repz
pop
inc
adc
maskmovq
pop
sub
pop
adc
lods
sahf
loop
je
adc
cmps
jecxz
sbb
bound
out
(bad)
fnstcw
pushf
mov
sub
dec
add
test
sub
add
mov
outs
loopne
add
cvttps2pi
push
ror
and
adc
ins
sbb
sub
std
imul
sub
fdiv
pushf
nop
int
loop
pop
ret
imul
sub
jnp
xor
push
mov
dec
(bad)
adc
push
scas
push
or
adc
mov
test
test
loopne
loopne
jbe
test
imul
inc
xchg
rcl
retf
and
mov
outs
sbb
mov
bound
mov
jge
jmp
xor
int
inc
jg
retf
lods
mov
sub
and
sbb
aam
and
std
jge
mov
inc
icebp
(bad)
(bad)
in
xchg
aaa
fcomi
retf
lock
retf
cdq
fcom
aas
cmps
(bad)
es
bound
cmps
ficomp
call
sbb
sub
(bad)
fdiv
cld
inc
(bad)
les
push
pop
xchg
dec
xchg
jmp
or
cmp
les
and
(bad)
adc
push
fwait
prefetch
xor
cmps
je
cld
ja
mov
sub
mov
push
loopne
and
push
shr
std
mov
pushf
inc
pushf
aad
test
jg
cdq
cwde
cmp
movs
cs
sbb
call
cwde
pop
push
sbb
jnp
ins
lock
mov
lds
iret
sub
dec
lods
or
jl
cmc
add
mov
dec
stos
and
in
mov
retf
jmp
adc
lock
mov
test
scas
xchg
push
mov
cmps
and
xor
je
xor
and
arpl
int3
into
popa
adc
and
or
jg
lahf
outs
xchg
ficomp
sub
call
leave
popa
cld
pop
jg
sbb
ficom
or
xchg
fld
imul
mov
cdq
pop
in
mov
aad
inc
add
ret
jo
repz
mov
mov
scas
add
loope
jb
call
pop
mov
push
test
push
jmp
xor
push
push
dec
fisub
(bad)
adc
add
or
neg
prefetchw
ret
int3
not
adc
add
ss
(bad)
aas
call
stos
int3
leave
test
jo
pop
data16
and
adc
xchg
cmc
add
iret
dec
inc
hlt
or
ds
(bad)
mov
mov
icebp
jecxz
mov
and
in
mov
push
pop
(bad)
(bad)
sub
push
mov
rcl
leave
das
in
mov
dec
repnz
dec
xor
enter
xchg
ds
cmp
mov
xor
add
arpl
icebp
dec
sbb
leave
popa
cmp
aas
shl
fidivr
repnz
dec
add
or
mov
mov
movs
test
test
stc
cmps
adc
lds
loop
xlat
mov
or
add
push
mov
jbe
sub
shr
cmc
adc
test
jle
xor
inc
out
outs
ror
mov
jmp
push
dec
fbld
dec
lods
ins
scas
js
cli
mov
jbe
fcomp
aaa
or
pop
jne
mov
jle
jo
test
push
enter
int3
mov
add
sub
pop
sub
and
mov
stos
xchg
mov
mov
ret
or
lea
push
ret
shl
pop
sub
cdq
test
xchg
push
inc
mov
cmps
sbb
push
movs
push
fwait
out
int3
and
cmp
iret
retf
in
mov
cmps
push
mov
add
cwde
pop
adc
fsubr
jmp
rcl
je
jo
rcr
inc
or
or
setne
les
ret
sub
jl
out
cld
jge
jns
push
mov
mov
mov
ins
addr16
je
ret
adc
sbb
jnp
movs
fs
fisttp
jb
hlt
cmp
xchg
out
xor
xchg
fxch
push
cdq
inc
adc
aam
outs
jge
movs
cmp
repnz
mov
stc
rcl
or
fwait
or
clc
stos
dec
pop
lods
dec
push
mov
js
jge
sbb
retf
repnz
icebp
rcr
push
or
out
or
pop
pop
aas
sahf
sti
mov
xchg
jg
inc
pushf
xor
adc
inc
stos
dec
or
fs
ret
push
ins
xchg
or
mov
mov
mov
ficomp
fiadd
xchg
ins
(bad)
push
test
aam
push
push
ds
stc
mov
and
pop
inc
pop
loope
in
mov
pushf
loop
jmp
sbb
repnz
cmp
sar
push
daa
xchg
sti
push
cli
push
lods
mov
or
sbb
xchg
rcl
mov
or
ds
sub
mov
and
push
jb
dec
dec
mov
ja
call
jmp
inc
mov
pop
or
push
(bad)
ins
cmp
mov
dec
lods
sub
loope
pop
neg
imul
adc
bound
sub
mov
push
pop
shr
outs
and
sbb
mov
data16
into
cmp
loopne
sbb
lahf
and
fadd
and
lea
mov
call
aam
cs
aad
jg
rcr
out
sbb
xor
dec
out
mov
(bad)
fisub
xchg
sub
push
xchg
ins
fdivr
ja
xchg
sar
into
sub
mov
and
dec
ficom
fcmovb
pop
mov
rcl
xchg
dec
cmps
sub
out
add
in
sub
sbb
bound
and
mov
push
push
mov
or
movs
adc
fcmovu
pop
or
mov
and
into
xchg
or
pop
add
xchg
and
jp
stos
mov
pop
aad
jno
push
adc
imul
mov
in
(bad)
xchg
ret
push
mov
lods
mov
arpl
xchg
je
or
fwait
and
div
inc
jns
cmp
adc
sub
sar
or
js
mov
cmps
mov
pop
cdq
add
sbb
jae
pushf
test
dec
jne
lds
out
call
les
ja
push
(bad)
push
push
fucomip
and
loop
mov
sub
pop
dec
inc
addr16
push
call
adc
push
aas
nop
repnz
jae
sbb
cmp
call
btr
dec
(bad)
push
and
adc
shr
mov
sub
mov
mov
mov
ret
pop
sbb
fwait
mov
mov
jg
mov
dec
out
xchg
test
test
repnz
movs
or
out
xor
in
jae
jle
popa
inc
cmp
xchg
mov
pop
inc
in
imul
add
cld
or
icebp
cld
push
(bad)
out
sbb
in
pop
iret
hlt
stos
mov
sub
ret
ds
jmp
sbb
xor
int
daa
sbb
in
clc
add
repz
mov
mov
fsubr
jns
cmp
es
and
adc
inc
inc
and
or
cmps
jbe
mov
movs
mov
mov
or
mov
ja
fistp
inc
(bad)
mov
cmp
jmp
cdq
mov
retf
dec
adc
dec
retf
mov
adc
stos
ret
lahf
movs
xchg
jecxz
into
jnp
movs
add
add
mov
movs
scas
mov
std
fist
lea
sub
aas
adc
mov
mov
mov
sub
mov
cli
cmp
pop
mov
push
pop
ror
sbb
jge
pop
xchg
inc
pop
out
mov
shl
inc
mov
add
test
outs
pop
mov
mov
ret
cmp
jmp
mov
dec
je
push
loope
stos
leave
mov
pop
sub
xchg
addr16
sub
jmp
ffreep
pushf
inc
xchg
adc
aad
jo
jno
(bad)
rcl
jge
out
mov
sbb
int3
add
std
push
mov
loopne
sbb
hlt
popf
jmp
and
push
jae
dec
or
and
mov
pop
rcl
rol
enter
cmp
push
mov
xchg
jmp
clc
inc
dec
mov
imul
mov
retf
in
push
push
mov
out
cmp
push
test
fcom
and
adc
mov
mov
pop
jns
jne
dec
rol
jnp
mov
sub
and
jae
in
push
inc
(bad)
mov
add
sub
jl
fst
and
add
call
pop
cmp
dec
cs
repz
pop
xchg
je
lahf
(bad)
cmp
sub
push
shl
retf
ror
cmp
dec
inc
dec
xchg
mov
push
sub
jnp
loop
inc
mov
rcr
dec
jecxz
nop
iret
iret
ret
or
push
mov
iret
fiadd
cmc
cmp
and
fmul
aaa
fimul
mov
mov
je
jno
scas
cli
popa
int3
or
ret
movs
ja
mov
jecxz
xorps
retf
cwde
xlat
sbb
mov
and
mov
pop
pop
jmp
fdiv
xor
inc
pop
xor
pop
xchg
sbb
retf
push
(bad)
lods
add
loopne
jae
loop
sbb
fstp
fmul
in
rcr
lods
pop
sbb
sub
mov
lods
ss
mov
push
or
ss
push
jg
dec
aas
cmp
mov
out
cmc
arpl
ss
mov
and
shl
movs
inc
(bad)
jecxz
adc
inc
or
and
rep
out
mov
sub
test
loope
jle
jbe
outs
push
out
rcr
jmp
test
mov
js
xor
xchg
xor
or
ins
mov
stos
add
adc
pop
cmp
mov
fidiv
xchg
sbb
sub
fadd
fwait
call
in
adc
fmul
fnstenv
xchg
cmp
cmp
rol
push
lahf
mov
ror
std
push
push
adc
test
test
cmovs
mov
xor
jmp
inc
adc
push
xcrypt-cfb
cmps
movs
aas
mov
cli
outs
sar
into
je
xchg
jb
js
hlt
shr
push
jno
cmps
iret
cmp
loope
and
jge
dec
mov
lahf
es
ret
add
adc
jbe
aam
int3
mov
push
aas
and
leave
mov
rcl
inc
mov
lahf
out
push
xchg
mov
inc
mov
mov
fadd
movs
mov
pop
fnsave
and
adc
lods
xlat
shl
jge
xor
add
inc
sub
inc
jbe
test
mov
scas
faddp
(bad)
dec
and
or
(bad)
push
xchg
test
fcmove
adc
adc
fild
out
mov
xor
loopne
mov
loopne
xchg
dec
test
pop
int3
sub
xchg
inc
xchg
jb
push
mov
mov
adc
push
fld
test
fdivr
xor
fisubr
call
aad
inc
movs
sbb
mov
repz
inc
outs
leave
or
pop
stos
in
mov
sbb
mov
jle
into
ja
out
inc
mov
scas
dec
mov
das
in
test
sti
mov
rcl
sar
stos
sar
pusha
out
ins
push
push
xor
push
out
and
push
outs
and
pop
in
push
mov
movs
in
sbb
xchg
lock
jno
(bad)
or
enter
ins
pop
jmp
sub
cld
fdivr
sbb
aad
jne
adc
mov
cmps
test
and
fld
ficom
pop
clc
mov
clc
adc
ret
aad
ret
jmp
ins
imul
cmp
xor
call
adc
test
lods
(bad)
cmp
enter
cld
in
bound
data16
mov
jno
and
and
(bad)
loope
int3
xlat
jle
pop
adc
adc
outs
stc
mov
mul
jnp
mov
test
jecxz
inc
inc
je
ret
xchg
inc
mov
stos
movs
or
xchg
arpl
aad
mov
mov
xchg
das
inc
push
jnp
(bad)
xchg
outs
xchg
adc
hlt
adc
arpl
xchg
pop
lea
xchg
pop
loop
xchg
mov
sub
(bad)
arpl
or
nop
aaa
je
ds
out
xchg
mov
jb
mov
hlt
fst
stc
out
add
or
sbb
cmps
inc
push
xor
test
xor
ins
les
jne
rcr
sbb
leave
retf
sbb
lahf
mov
loop
mov
mov
add
adc
or
bound
add
push
test
xor
add
mov
mov
inc
sbb
cmp
push
push
and
popa
ja
mov
inc
mov
push
in
push
dec
cwde
mov
cmp
or
pop
imul
jo
mov
shl
push
jb
sahf
push
lods
mov
pop
xchg
dec
pop
xchg
ret
adc
movs
scas
cmps
icebp
stos
les
in
scas
cmp
push
les
test
nop
leave
xlat
and
and
mov
jae
push
sub
and
mov
fimul
jbe
xor
push
mov
push
movs
js
ins
sbb
pop
push
add
xchg
sbb
leave
add
mov
sbb
mov
xlat
(bad)
push
(bad)
mov
pop
xchg
call
sahf
mov
fiadd
sub
cmp
scas
fcmovb
jno
xchg
dec
(bad)
stos
or
inc
sub
iret
daa
sbb
dec
fiadd
loope
pop
repz
mov
in
scas
xchg
fstp
ja
add
movs
lods
ss
bound
xor
stos
xchg
popf
adc
cli
loope
loop
imul
and
fld
pop
cmp
mov
adc
es
mov
jge
sub
jmp
sub
xchg
mov
push
mov
mov
lock
inc
inc
je
jb
int
inc
adc
mov
xor
cmps
push
and
mov
jg
xchg
sub
push
xchg
popf
cmp
cmp
jns
aaa
or
stc
fwait
push
nop
add
fwait
mov
jns
xchg
ss
stc
imul
outs
pop
dec
xchg
sbb
mov
in
in
dec
push
lock
add
fs
rcr
adc
call
fcomp
daa
idiv
sbb
mov
outs
pop
shr
(bad)
shl
mov
movs
jmp
cs
test
jae
xor
jmp
push
sar
xor
pop
mov
jns
loope
repnz
imul
(bad)
ret
mov
das
mov
retf
xchg
aas
mov
mov
mov
inc
jne
or
or
les
dec
mov
enter
out
xor
mov
adc
ffreep
fnstsw
pop
aam
mov
or
jae
sbb
jg
cmps
mov
sbb
cmp
jge
outs
jns
mov
xor
xor
and
lods
mov
mov
and
jno
mov
(bad)
pop
stc
cmp
sub
(bad)
or
push
and
es
fsub
imul
mov
mov
pop
retf
push
leave
jmp
ds
cld
mov
jns
stos
cwde
into
shl
inc
iret
add
dec
jae
mov
sbb
ja
cmp
sub
mov
ins
add
dec
mov
add
sti
int3
dec
push
cli
in
adc
(bad)
sbb
cmp
jmp
cmp
or
(bad)
sbb
sub
inc
jmp
mov
xchg
fisubr
fcomp
xchg
sub
sahf
jmp
shl
xchg
pusha
or
imul
inc
inc
stos
es
call
mov
jecxz
retf
xor
sbb
aaa
dec
ins
cld
test
mov
sahf
mov
sbb
mov
push
outs
inc
xor
push
loope
jecxz
enter
adc
adc
loopne
xor
mov
push
dec
iret
jp
push
(bad)
sbb
bound
and
imul
and
xchg
sub
movs
push
call
inc
cmc
test
cmp
rcl
test
push
sbb
and
pop
jae
cmp
fidivr
mov
dec
xchg
add
sahf
or
test
cmps
pop
(bad)
rcl
mov
jnp
jbe
jmp
or
fsub
je
sbb
dec
pop
add
ja
stc
push
mov
in
(bad)
int
retf
gs
mov
inc
cmp
adc
in
cli
rol
pop
imul
jmp
ja
scas
pop
lds
cmp
les
aaa
inc
lahf
stos
daa
mov
data16
jno
mov
sbb
xchg
sti
pop
push
rol
sahf
cmp
fadd
inc
jne
xor
clc
pop
sub
repz
mov
nop
cmp
hlt
lahf
int
pushf
pop
jg
arpl
push
or
cmp
mov
fild
push
jmp
dec
sub
(bad)
dec
aas
jns
push
ins
push
xchg
ins
dec
cdq
push
(bad)
call
add
jl
aas
fisubr
fs
arpl
bound
retf
fwait
stos
out
(bad)
jl
and
pop
in
jno
lahf
push
rol
jl
jp
ja
mov
(bad)
mov
inc
push
js
adc
fstp
or
pop
lods
in
stos
hlt
sti
std
in
cmp
ret
sbb
into
pop
ja
xor
jmp
add
sub
mov
xchg
jg
push
sar
inc
add
and
pop
xor
ja
outs
fild
lods
ins
jbe
ret
xor
into
(bad)
dec
jbe
les
push
das
in
dec
stc
inc
in
cmc
pop
cmps
push
mov
xchg
and
inc
cmp
lahf
push
pop
cmp
sbb
cmp
inc
fucomp
popa
jne
loope
stc
mov
retf
in
pop
ret
cmp
int3
mov
sub
mov
mov
in
inc
adc
or
(bad)
jge
mov
iret
xchg
(bad)
or
xor
icebp
xchg
hlt
xchg
xchg
mov
fstp
call
pop
mov
adc
out
cmp
mov
inc
mov
push
enter
fwait
mov
(bad)
mov
sbb
lock
pop
cmps
mov
adc
or
hlt
imul
lods
xor
cs
mov
cmp
adc
push
jno
pushf
sub
xor
ins
stos
ins
xor
xchg
iret
push
rol
les
cmps
mov
je
xchg
inc
shr
inc
dec
sbb
bswap
add
repz
jne
test
sub
stos
mov
and
push
mov
jns
mov
sbb
pushf
push
retf
clc
in
leave
pop
test
repz
out
arpl
or
sti
scas
addr16
add
cmp
mov
and
ret
inc
popa
mov
push
inc
repz
adc
add
push
cmc
cmc
cmc
movs
shl
(bad)
mov
mov
xchg
movs
test
xchg
retf
test
inc
test
jo
popf
lahf
addr16
mov
out
test
push
jmp
adc
push
pop
adc
mov
sub
pushf
xor
push
mov
out
cmp
mov
push
sahf
popa
push
(bad)
mov
inc
mov
pop
ins
xlat
push
imul
xchg
enter
fsub
jb
push
pop
mov
mov
xchg
loop
mov
fisubr
cmps
adc
jbe
mov
mov
add
inc
inc
out
cdq
and
dec
pop
ror
jge
hlt
xchg
xlat
gs
loope
sbb
sub
call
push
jl
mov
popa
loopne
lods
les
imul
add
dec
stos
jmp
aaa
in
or
cmp
cli
aas
xchg
scas
dec
pushf
adc
or
mov
mov
mov
mov
add
dec
stos
adc
cmp
sub
mov
cmp
sbb
mov
lods
xchg
mov
ss
cmp
loopne
mov
sub
cmc
xor
outs
clc
or
adc
sbb
je
add
or
push
xchg
and
cmp
cdq
fisub
int
call
stos
or
repz
fstp
push
arpl
iret
sub
fisub
cmp
fmul
idiv
mov
popa
push
ficom
ins
je
sub
add
mov
pop
adc
mov
push
and
cmp
cmp
mov
mov
mov
push
jge
fnclex
scas
dec
div
loop
mov
sbb
call
pop
imul
sbb
cmps
lods
and
(bad)
jmp
sub
cdq
xor
dec
retf
movs
push
xchg
mov
lds
lods
push
mov
int3
retf
push
push
ins
out
test
xchg
xchg
out
push
sub
ret
aaa
xchg
aad
jb
xchg
lahf
dec
int3
pop
not
inc
add
push
mov
sbb
(bad)
dec
and
add
ins
adc
jmp
fwait
cmp
jns
and
dec
stos
fisubr
push
cs
sub
in
or
les
push
cmp
call
and
push
fcom
outs
sbb
cmp
js
cli
ins
rcr
xchg
test
lock
jmp
in
(bad)
mov
repz
mov
jg
jae
(bad)
(bad)
jb
push
hlt
jns
cmp
test
fstp
mov
(bad)
ins
int
fwait
sub
adc
add
cmp
addr16
xor
push
pop
leave
loopne
(bad)
cmp
dec
repnz
pop
lods
adc
add
cmp
leave
hlt
iret
leave
lahf
sbb
stc
push
mov
loopne
in
jle
jmp
add
pop
cmc
and
in
imul
popa
ret
lods
xchg
jg
pop
mov
loop
mov
in
icebp
mov
fucom
aaa
xchg
add
pushf
into
loop
in
inc
(bad)
xchg
into
jge
aad
clc
pop
call
ss
mov
iret
xor
or
xchg
jbe
or
das
mov
jns
pop
in
or
xor
into
pop
cld
sbb
dec
pushf
stos
adc
cmp
fisubr
sbb
jo
fucomip
sub
sub
jno
je
loop
aas
out
bound
xchg
jnp
jge
sbb
add
xor
adc
mov
stos
mov
test
scas
popf
imul
or
mov
enter
xor
push
mov
push
sub
mov
dec
mov
adc
jb
je
add
pop
repnz
jnp
mov
neg
adc
popa
push
sub
sbb
hlt
jge
push
popf
idiv
inc
(bad)
sti
imul
icebp
sbb
cmps
push
jmp
xchg
push
test
push
jnp
cwde
jle
repnz
repnz
out
inc
jecxz
pop
jg
retf
dec
and
repz
add
dec
test
fmul
xchg
adc
mov
dec
stos
mov
xchg
add
xlat
pop
cmp
std
xchg
je
(bad)
aaa
scas
mov
push
or
neg
mov
inc
popf
add
out
in
ret
ins
pop
fst
cmp
psrlw
adc
cmp
inc
ret
out
cmp
(bad)
cmps
movs
cmps
mov
sub
jbe
xor
cmp
xor
scas
ret
inc
sbb
add
ret
mov
loope
int3
inc
add
bound
jnp
(bad)
sbb
add
test
mov
es
popa
push
test
pop
mov
test
repnz
xchg
scas
es
inc
sub
fld
das
mov
dec
xchg
popf
dec
cmp
mov
fcmovne
push
jns
add
(bad)
xchg
jecxz
iret
cmc
cwde
ds
mov
mov
xor
mov
cmc
bound
and
adc
clc
icebp
(bad)
rcl
jmp
sbb
inc
push
cld
nop
rcr
mov
ds
xchg
outs
sbb
dec
inc
cmp
adc
sub
push
call
rol
jg
xor
aaa
push
into
push
sti
call
jns
leave
pop
xchg
sbb
shr
jmp
pop
pushf
and
push
in
mov
mov
cmp
cmp
(bad)
sub
cdq
cmp
shl
jo
sub
mov
in
jno
mov
push
ss
clc
adc
pop
out
adc
movs
and
jmp
(bad)
ds
mov
adc
(bad)
bound
(bad)
bound
pop
stc
and
adc
lea
mov
call
je
in
xchg
call
jge
addr16
push
push
clc
mov
pop
pop
sbb
sub
pop
cwde
mov
mov
hlt
jl
jnp
sub
cld
cmc
popa
mov
ret
sbb
cwde
rcl
add
(bad)
mov
stos
add
dec
jmp
addr16
aas
inc
cdq
pushf
out
(bad)
dec
push
pop
jo
out
aaa
out
mov
mov
outs
std
mov
les
add
fld
pusha
sub
fild
mov
movs
ss
xchg
mov
cmps
ret
in
pop
lods
std
xor
mov
cld
inc
pop
nop
dec
pop
push
jge
mov
mov
jle
inc
aad
out
jp
dec
or
bound
ror
popf
adc
cmp
ins
in
mov
sahf
enter
leave
sbb
pop
mov
sti
shl
mov
mov
cli
pop
outs
aam
leave
out
add
or
cmp
cdq
(bad)
push
push
push
adc
movs
call
and
cmps
xchg
mov
and
pop
sbb
or
or
fcomp
pushf
in
and
dec
xor
pop
or
lds
dec
cmp
mov
pop
inc
loop
imul
out
loopne
lock
pop
imul
ss
adc
inc
or
mov
push
cmc
aaa
add
pop
inc
sub
aad
mov
sub
lods
adc
xchg
xchg
add
sub
sub
out
lods
mov
pop
and
in
jbe
rcr
push
ss
shl
cmp
jp
cmp
hlt
outs
push
xor
add
adc
sub
ret
stos
cmc
push
dec
jle
xor
xchg
stc
xchg
icebp
jne
test
sub
shl
sbb
sub
and
daa
(bad)
or
mov
mov
inc
retf
call
mov
je
sti
dec
lds
inc
adc
enter
adc
in
push
mov
mov
fadd
fucomip
push
(bad)
sbb
mov
inc
and
js
call
push
loop
mov
out
and
mov
sbb
xchg
lahf
inc
mov
paddw
xor
jp
inc
xchg
jmp
daa
jnp
fwait
mov
mov
mov
cmp
popa
jne
jnp
xchg
lahf
popf
inc
out
bnd
dec
sub
fwait
outs
cwde
outs
inc
xchg
or
mov
imul
(bad)
adc
cmc
inc
pop
popa
loope
add
js
imul
hlt
sbb
adc
or
lods
push
rol
add
mov
popa
xor
imul
arpl
shl
psubsb
out
gs
cmp
xchg
mov
inc
mov
shl
loopne
mov
dec
cmc
xchg
fcom
aam
lahf
into
jne
(bad)
fcmovnu
ficomp
inc
xchg
hlt
pop
fisub
push
jne
lahf
movntps
mov
pop
sbb
mov
pop
sub
aad
xchg
int3
mov
mov
call
outs
xchg
dec
in
in
inc
jae
push
scas
push
pop
mov
loope
inc
adc
add
test
(bad)
xor
xor
ret
inc
sbb
xor
sar
sub
gs
adc
jl
daa
cli
out
or
jbe
das
imul
repz
(bad)
fistp
xchg
xor
repz
ret
imul
popf
mov
test
dec
xor
ret
lods
push
sub
rol
pushf
out
push
fild
sbb
sub
ds
mov
add
cmp
es
fptan
outs
mov
xlat
pop
xor
or
std
push
jbe
adc
or
movs
mov
mov
xchg
xor
xlat
push
aam
and
add
sbb
and
sub
pop
push
xlat
pushf
add
cmp
jmp
xor
dec
mov
dec
ret
mov
jo
loop
pop
cld
mov
and
outs
(bad)
fld
dec
or
sub
fs
xor
xor
xor
sbb
cdq
ss
sbb
out
xchg
cmp
out
pop
mov
les
adc
and
cwde
int
sbb
in
les
mov
mov
ds
xchg
xchg
adc
and
push
outs
lahf
gs
mov
pop
pop
push
ja
shr
sbb
in
add
jp
and
add
inc
xor
sti
sub
(bad)
sub
mov
mov
push
lahf
inc
not
test
ss
sbb
jns
lods
nop
dec
jp
xchg
fisub
jns
getsec
test
pop
sbb
adc
int3
mov
sub
outs
jp
jge
mov
or
cmps
pop
cmc
cwde
mov
jecxz
(bad)
out
(bad)
jnp
scas
pop
int3
add
in
aas
repnz
popa
in
dec
mov
cmp
int3
xchg
or
ss
sbb
cmc
(bad)
jne
mov
rol
xchg
mov
mov
or
outs
std
in
xchg
imul
jne
fld
jbe
jbe
in
push
loopne
and
rcl
push
pop
add
inc
test
sar
sub
push
les
data16
or
(bad)
out
push
jo
mov
fistp
imul
xor
dec
cmp
gs
mov
pop
sbb
adc
or
cli
adc
test
fs
enter
(bad)
pop
sub
push
inc
lds
test
mov
xchg
enter
cs
loope
and
add
fild
pop
push
add
xchg
inc
add
and
adc
mov
cs
aam
pushf
hlt
ror
dec
fild
ja
je
mov
or
das
fcomp
mov
test
mov
cmp
aam
rcl
repnz
mov
sti
inc
adc
outs
inc
dec
test
jge
movs
or
sub
sahf
cld
aaa
inc
scas
cmc
xor
sbb
add
adc
inc
fwait
outs
rcl
xchg
cmp
mov
xor
xor
xchg
mov
in
je
js
jb
pop
fsubr
xchg
push
sub
clc
sub
dec
(bad)
fdivr
cmp
jecxz
cmp
mov
xchg
fwait
push
adc
push
call
dec
ss
xchg
test
add
pop
dec
adc
movs
(bad)
aam
mov
add
sub
mov
pop
fdiv
sahf
adc
rol
scas
mov
cmp
pop
cmp
xor
iret
imul
ins
xor
aas
and
int3
(bad)
imul
(bad)
cmp
xchg
xchg
and
add
push
push
pop
sub
cmps
mov
in
sub
ficomp
mov
enter
jae
xchg
cmp
adc
xchg
mov
mov
mov
sub
les
jns
xlat
mov
mov
outs
jecxz
test
cmc
inc
xchg
out
call
dec
jno
scas
xlat
dec
stc
jecxz
js
les
or
mov
test
lods
repnz
loop
imul
gs
jns
ja
lds
mov
and
sti
push
popf
push
pop
out
mov
clc
ret
mov
stos
pop
jnp
sbb
es
cmp
pop
in
and
aas
pop
xlat
ss
lods
cmps
xchg
push
test
push
push
call
(bad)
and
mov
ret
adc
mov
not
inc
cli
jbe
cmp
inc
mov
rcr
mov
sbb
repnz
stc
or
shl
dec
add
hlt
prefetch
or
and
and
movs
ret
ret
jecxz
fdiv
mov
(bad)
std
jmp
push
mov
dec
inc
addr16
aas
(bad)
mov
mov
add
icebp
pop
loop
and
(bad)
(bad)
sub
setne
not
push
(bad)
shr
pushf
std
inc
(bad)
(bad)
jmp
fidiv
cli
jecxz
mov
lds
(bad)
pop
add
popa
jae
out
add
add
or
cmp
std
push
adc
scas
leave
jo
in
cmp
pop
adc
jo
not
adc
sub
mov
jp
retf
cmp
add
aas
cwde
cmp
das
sti
dec
mov
pop
sbb
retf
cli
xchg
adc
das
add
push
lock
icebp
add
jge
inc
jne
(bad)
ins
push
mov
pusha
xchg
scas
(bad)
xor
dec
sub
xchg
adc
add
dec
ja
sbb
in
imul
pop
adc
push
out
and
je
ss
mov
push
xor
add
jb
or
xor
xor
cwde
sahf
push
pop
pop
xchg
xlat
and
pusha
cmp
sub
outs
mov
pop
mov
mov
mov
ss
fimul
vandnpd
sar
mov
push
mov
jl
push
data16
adc
not
mov
mov
hlt
sahf
inc
push
xlat
or
fdivr
jge
scas
sub
sbb
pop
add
jle
(bad)
sub
call
in
add
mov
mov
ins
repnz
xor
xchg
mov
enter
sbb
scas
mov
fstp
and
data16
cmps
xor
mov
and
popa
sub
jg
mov
or
xchg
gs
xchg
push
mov
jp
fild
xchg
in
movs
out
cld
lds
or
pop
sub
cli
fxch
cmp
(bad)
int
and
sbb
hlt
mov
push
mov
xor
dec
popa
fnsave
adc
dec
test
gs
mov
test
push
dec
and
add
mov
(bad)
sar
or
(bad)
adc
pop
mov
cli
mov
lods
cmc
xor
aas
ret
fcom
mov
cmps
jle
mov
loop
mov
lods
les
loop
cdq
push
stos
cmps
mov
in
iret
or
mov
in
dec
and
pop
cmp
dec
adc
std
out
jp
pop
pop
jae
lahf
outs
leave
sub
jb
shr
jno
popa
in
mov
sub
xor
(bad)
sbb
sbb
jae
icebp
aaa
jmp
cmp
popf
push
xchg
ret
in
call
adc
in
or
inc
sbb
popf
jge
xor
daa
repz
repnz
pop
xor
fs
ret
xchg
bound
pushf
and
push
enter
xor
push
mov
in
mov
mov
adc
cmps
sbb
xor
mov
int
mov
jno
(bad)
mov
in
pop
xor
clc
mov
(bad)
and
jae
cmp
adc
js
or
sbb
sbb
jp
ficom
push
clc
aas
cli
and
into
int3
pop
lds
(bad)
leave
sbb
xchg
(bad)
and
test
jmp
fidiv
ror
xchg
mov
sub
xor
addr16
repnz
sub
mov
inc
dec
das
imul
daa
jg
sbb
scas
sbb
and
outs
and
ret
shl
sbb
cmp
scas
int
aad
ffreep
push
mov
xlat
dec
retf
sbb
in
xchg
xor
daa
mov
jle
aad
paddq
outs
fpatan
cmp
in
retf
fsubr
call
adc
sbb
mov
repz
mov
pop
stc
fwait
pop
or
popf
inc
xchg
mov
xor
out
shl
out
rcl
outs
je
test
retf
mov
inc
inc
(bad)
aad
gs
fistp
dec
in
(bad)
js
inc
lods
lods
pop
ins
in
xchg
cs
sub
(bad)
shl
mov
xor
dec
int3
or
out
lds
jbe
mov
stos
(bad)
rcl
iret
fild
mov
loope
inc
inc
cmp
fcomp
jecxz
(bad)
push
mov
data16
sub
shl
cmp
mov
xor
add
push
movs
xor
cli
(bad)
lea
adc
les
fbld
test
pop
sbb
xchg
pop
mov
mov
mov
not
scas
mul
mov
ret
pop
scas
adc
aas
or
add
sub
sbb
dec
fsubr
inc
jnp
cwde
je
and
mov
xchg
popf
cmp
mov
push
push
hlt
mov
leave
shl
mov
jbe
leave
fisttp
push
repnz
push
add
rcl
cpuid
cwde
fs
outs
retf
gs
sub
stos
or
nop
fs
lea
sbb
inc
movs
pusha
push
js
sbb
mov
aam
sbb
xchg
mov
cmp
push
shl
jne
xchg
loopne
push
cmp
inc
or
aad
data16
jl
adc
rol
movs
adc
xlat
aam
in
push
mov
sub
jmp
adc
and
mov
mov
ret
push
std
sub
repnz
call
push
test
xor
stos
xor
stc
jo
mov
jne
repnz
fs
add
loopne
mov
pop
jmp
mov
push
repnz
mov
mov
call
push
bound
inc
xchg
out
jmp
in
mov
cli
cmp
popf
out
xor
fwait
call
mov
std
popf
cmp
fisub
hlt
aaa
lods
mov
push
adc
xchg
bound
or
adc
add
mov
pop
and
mov
mov
pop
sbb
xchg
hlt
xor
gs
lods
loopne
xor
std
cli
popw
adc
xchg
cmp
push
addr16
add
mov
dec
bound
sub
fcomip
sub
mov
cdq
in
and
fs
jmp
das
sahf
(bad)
push
push
adc
test
sub
push
popf
lods
iret
icebp
pop
out
xchg
adc
push
jecxz
add
ins
ror
sub
cmp
mov
pop
jge
shl
mov
mov
xor
dec
sub
jl
xchg
cmps
nop
ins
mov
fst
mov
(bad)
outs
das
hlt
js
test
cmp
je
sub
dec
addr16
(bad)
in
dec
lods
or
dec
out
ins
push
(bad)
(bad)
jno
lahf
imul
xchg
mov
sub
(bad)
push
daa
xchg
dec
jle
ret
pop
test
inc
repz
jb
dec
pop
stc
or
inc
cmp
adc
inc
shl
(bad)
or
iret
or
scas
inc
cld
stc
dec
jp
nop
add
ret
call
or
jp
mov
retf
loopne
std
jp
cmp
(bad)
stos
push
dec
mov
jp
fadd
in
mov
xor
push
jmp
int3
in
in
shr
sbb
arpl
sub
adc
(bad)
daa
fs
or
repnz
inc
imul
repnz
test
mov
repnz
xlat
push
addr16
(bad)
jle
mov
dec
and
mov
in
neg
mov
outs
fld
and
movs
sbb
retf
xchg
and
enter
icebp
add
mov
mov
xchg
adc
jmp
add
out
cmc
xor
imul
pop
cdq
ins
sbb
pop
fiadd
aam
mov
daa
into
jo
jmp
ficom
cmp
(bad)
loopne
gs
push
dec
sbb
dec
push
jns
mov
jp
xor
repnz
or
inc
jl
inc
sbb
pop
pop
pop
sub
(bad)
arpl
jle
leave
sbb
jbe
sar
movs
ins
mov
mov
es
popa
mov
imul
mov
shr
xchg
jecxz
jl
push
rol
and
ins
push
jbe
sub
leave
aas
or
cmp
jns
(bad)
push
dec
inc
inc
add
jne
fadd
xlat
(bad)
stc
push
dec
enter
dec
add
cmps
enter
jns
mov
inc
and
loope
pop
add
cmps
sbb
push
ret
inc
rol
psllq
fbld
push
popf
in
mov
xor
popf
sbb
add
shr
pushf
sub
mov
cmps
mov
push
shr
mov
pop
inc
mov
add
lods
test
retf
(bad)
movs
jp
xchg
mov
adc
shl
stc
xlat
xchg
test
in
cs
fnstenv
push
push
fdiv
jns
xchg
mov
mov
enter
inc
(bad)
push
jno
pushf
mov
js
cmp
add
ret
push
inc
int3
and
ror
xor
mov
sbb
sub
into
and
dec
fidivr
cmp
addr16
mov
cmp
ror
pop
sbb
in
outs
mov
cld
sti
imul
dec
test
stos
xchg
xor
ja
das
mov
adc
fmul
in
jp
dec
addr16
pop
hlt
fisttp
sbb
jb
adc
movs
sub
leave
jbe
pop
mov
fsub
add
mov
mov
push
fwait
and
(bad)
std
jns
js
push
push
jns
sub
and
fprem
jbe
mov
repnz
(bad)
aaa
sbb
xor
xchg
sub
adc
out
aaa
shr
imul
sub
movs
inc
lods
sbb
sbb
add
lahf
push
xchg
leave
xchg
test
rol
retf
dec
push
(bad)
mov
mov
push
pop
dec
loop
sub
pop
ds
stc
aam
and
ss
cmps
push
(bad)
mul
cmc
pop
cdq
or
or
fild
data16
shr
clc
mov
adc
shl
aaa
xchg
adc
xor
or
outs
xchg
loope
pusha
jbe
loopne
cdq
aam
test
xchg
cmp
ror
adc
mov
mov
jae
cmp
lahf
pop
xor
push
js
out
icebp
sti
mov
xlat
(bad)
sub
jbe
dec
std
push
jno
lods
(bad)
jns
leave
out
lock
sbb
mov
mov
int3
cmp
(bad)
(bad)
dec
nop
fldenv
das
push
sbb
mov
sbb
sbb
aaa
cmp
shr
imul
add
or
out
pushf
stos
stos
add
jns
xor
jnp
cmps
movs
out
add
test
add
sti
imul
ror
sbb
mov
loope
fmul
cld
(bad)
and
sti
push
or
jns
or
sub
mov
inc
cs
xchg
in
sbb
ficom
xchg
mov
(bad)
adc
loopne
push
xor
stos
inc
xor
inc
dec
or
aad
inc
fsubr
outs
xor
and
repz
mov
rol
arpl
int
shl
faddp
lock
pop
add
cmp
(bad)
jecxz
push
push
pop
and
inc
or
fcomp
nop
add
pop
and
neg
sahf
lds
push
dec
fisttp
mov
pop
pop
imul
cmc
call
xchg
mov
mov
mov
sbb
mov
dec
mov
and
add
mov
sub
div
cmp
fucomp
call
cmps
fild
or
xchg
or
xchg
shr
fcomp
adc
mov
fsubr
mov
out
sub
add
cmp
loope
dec
scas
fwait
xor
bound
or
stos
jmp
scas
sub
jb
pushf
inc
sbb
sar
adc
div
mov
and
(bad)
mov
adc
int
xor
movs
loopne
pop
rcr
cmp
add
fidiv
stc
cmp
int3
push
dec
lods
xchg
mov
imul
in
stos
cmp
pop
mov
push
mov
pop
jae
adc
push
hlt
pushf
shr
push
mov
pop
mov
arpl
popf
ds
cmp
xor
js
xchg
adc
add
xchg
jae
jmp
sub
mov
lds
sub
repnz
dec
xchg
dec
dec
inc
inc
or
(bad)
jle
repnz
pop
repnz
add
lock
pop
jecxz
ret
inc
daa
or
shr
pop
jb
push
(bad)
out
mov
hlt
test
jl
inc
stos
and
fwait
push
sar
imul
je
dec
cmp
nop
jae
dec
jmp
xor
into
scas
repnz
pop
jl
into
stc
retf
icebp
push
dec
sahf
pop
sub
push
ret
iret
cmp
adc
nop
jg
inc
add
mov
cmp
or
mov
xchg
mov
push
imul
cld
rol
xor
test
fbld
and
test
push
int3
pusha
mov
sub
or
xchg
xor
mov
xchg
call
cwde
gs
aam
add
mov
lds
add
dec
sub
ja
ja
push
popf
stc
xchg
fisttp
inc
sti
mov
int
imul
(bad)
loop
jae
xor
adc
or
gs
stos
add
sub
cmp
jne
jns
stos
push
js
loope
inc
(bad)
cmc
mov
mov
dec
mov
mov
xchg
mov
jg
imul
mov
mov
stc
retf
imul
sub
mov
cwde
hlt
arpl
(bad)
fstp
cs
pusha
pop
and
jl
imul
adc
jns
int3
sbb
add
dec
stos
xor
add
sbb
das
cmps
push
push
push
lods
dec
jmp
xchg
mov
mov
gs
lods
jns
not
pop
das
repz
push
fwait
adc
add
(bad)
call
(bad)
or
aam
das
fs
dec
pop
push
call
stc
xor
adc
pusha
xor
cli
arpl
loope
add
or
cs
pushf
out
(bad)
sar
cld
dec
pop
pop
xchg
sub
inc
shr
sbb
in
mov
ja
test
jno
dec
sar
test
rcr
adc
jne
test
fwait
adc
mov
(bad)
jmp
xchg
pushf
and
mov
mov
imul
sbb
sub
les
or
mov
fbld
xchg
(bad)
pop
ror
jb
and
test
mov
aam
mov
mov
pop
int3
dec
ficomp
int3
xchg
loopne
jmp
popa
aam
(bad)
sbb
jbe
cs
mov
xchg
icebp
iret
xchg
inc
inc
mov
out
inc
data16
push
jmp
mov
add
and
inc
scas
push
shr
out
retf
xchg
lahf
or
pusha
(bad)
icebp
dec
jne
pop
push
lods
lea
imul
mov
and
fiadd
mov
push
test
pop
sub
(bad)
xlat
ret
add
inc
ins
mov
nop
loope
pop
in
ins
lea
push
retf
fild
pop
mov
sti
retf
mov
stc
push
mov
and
cld
cli
bsr
dec
fwait
pop
sub
mov
sub
(bad)
(bad)
mov
mov
and
sub
mov
outs
jnp
gs
and
scas
leave
cmc
or
cmp
push
push
inc
imul
inc
retf
and
rcl
xchg
outs
push
out
mov
rep
fwait
inc
xchg
add
sbb
and
mov
and
push
cmp
jle
xchg
xchg
ja
pop
in
xchg
mov
xor
icebp
sahf
xchg
sub
into
jp
cmc
stos
pop
jae
mov
dec
jge
repz
out
leave
shr
dec
pop
mov
ret
sbb
arpl
push
in
xor
xchg
nop
sbb
jmp
retf
xor
jo
add
pop
xlat
loop
push
jo
jp
cwde
xchg
mov
adc
mov
sahf
cmp
aas
and
add
int
out
mov
sbb
gs
repz
fsubr
scas
adc
jne
inc
(bad)
fnstenv
call
icebp
gs
jg
add
fsub
or
(bad)
in
mov
push
jnp
xchg
movs
sub
dec
ins
pusha
and
fdivr
mov
jle
cmc
pushf
push
jnp
dec
pop
imul
fadd
mov
call
out
out
mov
dec
jns
mov
lea
adc
or
shl
call
scas
pop
imul
push
push
or
bound
adc
mov
aad
js
jnp
xlat
inc
cmps
mov
pop
inc
jbe
movs
jno
(bad)
dec
sbb
mov
push
and
mov
(bad)
aaa
mov
dec
xchg
xchg
pop
test
sbb
mov
repnz
push
xlat
xor
mov
adc
jne
xor
or
mov
stc
cld
jnp
pop
cmp
pusha
mov
aas
les
in
sub
loope
inc
sub
add
pop
rcl
out
scas
inc
xchg
add
mov
pop
sbb
mov
test
adc
mov
loop
dec
xchg
jecxz
jecxz
stos
pop
into
sbb
outs
idiv
fsub
enter
mov
pushf
push
int
push
sbb
ja
retf
xor
or
jne
and
mov
or
add
cdq
fdiv
inc
test
mov
sti
xor
mov
and
popa
test
ins
hlt
loopne
dec
jle
cwde
aam
call
in
cs
ja
inc
lds
push
mov
shl
ret
push
mov
aam
popa
fucomip
cmp
push
dec
lea
sbb
dec
and
xor
ret
xor
push
aad
xchg
adc
mov
sbb
sub
or
xor
cmp
mov
imul
mov
xchg
and
mov
sub
fsubrp
test
jbe
xor
push
adc
pop
pop
div
aad
fcomp
or
jmp
ins
xchg
dec
test
pop
inc
sub
adc
dec
rcr
mov
dec
jbe
xchg
dec
es
cld
pop
fcom
cli
daa
adc
(bad)
push
xchg
mov
sub
ror
std
stos
lahf
xor
or
pushf
ins
out
cmp
call
mov
test
movs
(bad)
push
mov
iret
out
icebp
shl
push
jno
mov
das
pop
and
mov
fwait
int3
push
or
in
push
jle
cmc
les
pop
xor
daa
imul
cmp
mov
mov
ins
je
adc
leave
mov
out
daa
test
or
into
cdq
sub
mov
push
or
cld
adc
jge
or
push
jp
and
mov
ret
inc
sti
inc
loop
pop
mov
xchg
pop
lods
push
push
fimul
nop
push
mov
dec
or
add
stos
test
loop
fs
mov
sub
xchg
cmc
jp
repnz
sbb
push
push
pop
cmps
(bad)
cli
cmp
lahf
sbb
or
mov
cmp
or
fist
sub
mov
push
adc
dec
add
imul
jl
push
leave
xor
push
adc
test
pop
pop
push
push
cdq
shr
shl
out
push
ins
and
pop
and
scas
popa
inc
in
out
(bad)
loop
mov
sbb
adc
adc
or
adc
jo
outs
push
xchg
xor
loop
cld
push
(bad)
js
jmp
cld
dec
xchg
adc
ja
lock
mov
pop
repz
aaa
in
jae
mov
mov
jns
fs
inc
and
jno
pop
sub
xchg
mov
or
inc
jmp
and
mov
out
(bad)
test
adc
stos
popa
push
push
dec
jne
loope
inc
in
inc
mov
ret
mov
leave
or
arpl
fistp
adc
fcmovnu
fs
jnp
cmp
mov
add
fcomp
dec
retf
mov
cmp
xor
cdq
ins
mov
(bad)
lock
mov
jle
adc
jo
loopne
pop
xchg
jle
ja
pushf
xchg
dec
sub
stc
push
jb
or
cmp
xchg
inc
int3
mov
pop
and
xor
pop
xchg
push
pop
and
dec
test
lea
leave
mov
nop
int
ret
fsubr
dec
xchg
xchg
popa
inc
ins
mov
mov
aad
adc
push
mov
or
ins
mov
sub
or
sub
hlt
jae
(bad)
fcmovbe
hlt
dec
ds
fst
imul
cmp
js
pop
repz
in
push
push
test
and
mov
pmaddwd
mov
pop
scas
pop
sbb
adc
outs
jmp
fist
lods
adc
das
test
sub
jle
mov
call
outs
ins
(bad)
lods
scas
sub
std
or
add
cwde
mov
nop
dec
and
div
push
push
dec
sbb
mov
test
xchg
int
cld
fnstsw
(bad)
xor
sti
dec
dec
sbb
ja
outs
inc
rcr
loop
ror
fist
pop
xor
hlt
mov
mov
ror
cli
cmp
jle
lock
leave
pop
ins
addr16
aaa
mov
test
and
lods
jp
or
add
loope
cmp
inc
in
and
dec
xchg
outs
dec
ds
call
mov
pushw
fcmove
inc
sub
inc
pop
dec
sub
inc
jae
mov
push
(bad)
push
mov
bound
lea
adc
jmp
mov
push
mov
sbb
andnps
sub
ret
leave
xchg
popf
push
aam
jbe
sub
and
xchg
push
les
jmp
cmps
adc
std
sbb
push
cmps
cmp
sub
xchg
out
add
clc
test
shl
push
inc
xor
sti
xchg
jne
sbb
xor
sar
das
and
daa
xor
std
or
jo
outs
inc
mov
and
mov
dec
sub
scas
xor
ret
jp
out
iret
inc
mov
mov
leave
adc
mov
inc
hlt
ret
add
sub
scas
push
mov
(bad)
in
add
jno
adc
dec
scas
loop
pop
push
cmp
ret
mov
fnsave
mov
std
and
add
jae
push
xor
std
or
mov
sbb
jae
ins
lds
add
xchg
fst
inc
or
out
mov
int3
arpl
add
cmp
xchg
repz
jge
fbld
inc
fwait
and
cmc
hlt
test
mov
(bad)
enter
mov
stos
fisubr
xchg
inc
int3
scas
fdiv
pop
jle
mov
lock
push
jle
sub
dec
les
(bad)
mov
mov
jae
in
or
or
ror
call
aam
dec
repnz
es
mov
jle
lea
dec
retf
xchg
push
cmp
inc
fdivr
mov
ret
retf
in
push
push
sbb
adc
adc
sub
movs
push
dec
mov
fdiv
std
in
xor
inc
add
stos
stos
pop
adc
xchg
cmp
inc
aad
adc
dec
nop
mov
mov
mov
int
addr16
bound
in
xchg
ficom
push
stos
repnz
lock
jge
outs
in
sbb
mov
std
mov
pop
cmp
adc
ror
dec
lea
lock
mov
xor
add
retf
pop
mov
cwde
(bad)
adc
adc
pop
push
and
test
adc
iret
mov
test
push
xchg
xor
nop
idiv
fadd
xchg
retf
cmc
and
cmps
xor
dec
inc
xor
inc
ins
cmc
or
cwde
int
mov
fsubr
jle
std
daa
mov
outs
push
mov
rol
ret
xchg
sti
cmp
add
retf
loope
jae
sbb
packuswb
dec
mov
test
jmp
jo
loop
movs
lock
addr16
dec
or
xchg
sub
push
dec
pop
dec
cli
cmc
outs
sub
cmps
pop
enter
mov
jb
add
retf
cmp
and
push
sar
mov
in
jbe
mov
ins
inc
lods
out
scas
jp
add
pop
cmp
ja
f2xm1
cmp
or
ss
mov
int
arpl
dec
add
lahf
pop
aaa
stos
mov
pop
mov
daa
jns
test
mov
xchg
inc
xor
(bad)
inc
mov
adc
add
push
mov
add
lahf
icebp
pop
test
cmp
out
push
adc
jae
inc
push
mov
xchg
nop
fisttp
mov
pop
adc
or
daa
xor
cmps
clc
in
adc
mov
cmp
push
ss
gs
push
xchg
xor
imul
adc
cld
lods
jmpw
ret
lods
nop
bound
fdivr
cmp
popa
inc
lods
clc
sahf
add
push
xchg
leave
jge
psubq
xor
pop
ficom
mov
inc
aad
ds
adc
(bad)
in
aad
inc
gs
or
mov
stc
pop
lea
sbb
mov
mov
and
call
xor
fcomi
imul
jae
push
jb
mov
add
lea
or
mov
test
call
jns
dec
stos
cmp
fisttp
push
xor
pmaxub
lock
cmp
aad
push
mov
stos
sub
mov
dec
cli
jb
and
bound
xor
xor
movs
imul
pop
(bad)
add
xchg
dec
mov
adc
ss
pop
adc
es
ficom
adc
lods
dec
iret
hlt
mov
jmp
inc
repz
popf
adc
pop
cmp
sbb
inc
mov
push
inc
add
fidivr
lahf
sbb
xor
mov
mov
and
popa
add
repnz
adc
xchg
imul
and
sub
or
mov
sub
xchg
push
stc
sahf
sub
xor
or
cmp
inc
xor
shl
imul
jbe
mov
jmp
retf
push
sub
pop
in
jno
lahf
cmps
mov
fadd
cmps
xchg
sub
fwait
cmp
cmp
test
push
clc
mov
daa
fsub
nop
and
xor
pop
les
inc
out
test
adc
lds
mov
jge
jae
inc
adc
scas
xchg
aam
repz
inc
retf
add
xor
mov
cs
out
adc
sub
jno
je
repz
(bad)
out
ins
and
or
jg
shl
out
push
sbb
and
and
sub
and
aaa
ret
(bad)
dec
(bad)
pop
or
sbb
or
jmp
jmp
mov
jmp
jnp
in
retf
mov
mov
sbb
test
movs
lods
div
dec
inc
stos
add
arpl
pop
ins
xor
es
or
aas
or
xchg
int3
pop
sbb
ins
cmps
ds
push
jp
and
arpl
sbb
xchg
imul
push
nop
xchg
add
(bad)
repnz
mov
daa
mov
jnp
xor
mov
pop
test
push
test
lods
cmc
adc
pop
push
xor
sub
sbb
adc
inc
imul
push
ins
or
xlat
cmp
test
xor
arpl
mov
adc
js
push
sbb
ins
retf
push
(bad)
pop
sub
xor
xlat
stos
pop
enter
mov
lock
push
ds
sub
mov
xor
test
outs
(bad)
fld
sub
sbb
(bad)
rcr
pop
mov
(bad)
rol
inc
push
mov
sbb
(bad)
mov
sub
test
push
mov
not
or
xlat
(bad)
and
xchg
cld
pop
popa
or
dec
jnp
mov
int
adc
add
iret
in
jne
int3
add
push
xchg
(bad)
xor
jbe
stos
call
jnp
outs
cmp
mov
adc
rcr
xlat
cmps
scas
das
repnz
gs
cmp
(bad)
jmp
loope
or
pop
std
or
mov
cmp
adc
dec
fistp
fwait
cdq
rcl
cmp
mov
idiv
aam
ins
mov
jmp
xchg
les
jmp
jb
call
call
aam
daa
mov
jmp
jnp
or
test
push
js
inc
mov
push
and
in
int3
ffreep
in
bound
aas
dec
sar
xor
ins
nop
sub
das
fs
ja
ins
jp
push
mov
lahf
inc
stos
lds
or
xchg
pop
repnz
and
add
data16
dec
popf
push
cdq
cmp
pop
stos
ja
xor
imul
in
fimul
xchg
imul
ret
jmp
jle
out
les
out
xchg
inc
jecxz
popf
push
dec
mov
nop
dec
jo
xlat
sub
inc
lods
adc
outs
fs
bnd
mov
xor
push
inc
adc
sub
jle
(bad)
pop
cmps
pop
sub
lahf
pop
in
lahf
sbb
or
outs
das
retf
xor
out
sti
fdivr
xor
repz
ss
rcr
mov
mov
mov
pop
adc
push
cmps
pop
fnstcw
int3
sti
cld
jno
jb
jo
imul
test
jbe
enter
int
arpl
cmp
push
pop
mov
call
or
jne
movs
clc
xor
push
in
ror
test
ja
and
dec
sub
push
xchg
ja
jmp
cli
cmp
jne
les
inc
mov
int
push
inc
add
ffree
dec
ins
(bad)
pop
call
dec
ret
int
sbb
jg
dec
mov
push
pop
pushf
inc
xchg
push
and
push
in
dec
data16
fistp
fucom
pop
test
mov
sbb
xchg
(bad)
sub
mov
jo
je
inc
push
adc
mov
mov
push
xor
pop
out
out
jnp
mov
lods
and
sub
inc
and
jo
mov
pop
int3
xchg
arpl
mov
(bad)
xor
mul
fsubr
cmp
cmp
or
out
inc
push
jo
js
in
adc
repz
fadd
and
movs
dec
leave
arpl
retf
neg
movntq
push
popa
fwait
mov
jl
mov
mov
iret
arpl
das
fnsave
sbb
push
push
sbb
retf
sbb
add
cmp
gs
test
xchg
imul
mov
pop
mov
(bad)
mov
ror
fldenv
das
jae
jb
jle
jmp
xor
or
mov
pop
stos
pushf
loop
out
icebp
into
mov
xor
and
mov
fstp
push
cli
out
and
add
(bad)
mov
pop
outs
bound
push
xor
in
movs
dec
(bad)
shl
inc
cli
sahf
lahf
mov
mov
cmp
xchg
test
call
inc
stos
js
(bad)
or
xor
pushf
push
sub
std
dec
mov
mov
gs
(bad)
jno
hlt
sub
repnz
xchg
or
out
add
mov
xchg
xchg
and
mov
xor
pop
push
rcl
mov
mov
xchg
mov
ud1
js
cmc
mov
fcomp
mov
mov
jge
cmps
loopne
inc
push
pop
ret
nop
imul
(bad)
cli
mov
sbb
movs
cli
pop
jmp
mov
sbb
push
sub
(bad)
mov
shr
movs
pushf
pop
sub
daa
retf
aaa
push
dec
movs
(bad)
imul
loopne
cmp
pusha
imul
sbb
enter
pop
push
lods
outs
ficom
xor
(bad)
jle
push
fisub
cmp
sub
mov
mov
mov
add
and
inc
leave
retf
inc
or
aam
jge
xor
loop
fmul
xchg
add
outs
js
ins
iret
xchg
aas
and
gs
repnz
lock
lods
fbstp
jnp
shr
xchg
mov
pop
jg
stos
sub
and
push
xor
inc
int
imul
or
sbb
stos
inc
aam
fmul
add
sti
test
dec
movs
aad
mov
mov
test
aad
mov
(bad)
pop
sahf
push
xor
jp
xchg
bound
mov
ret
adc
outs
test
stos
jecxz
imul
ins
mov
ds
adc
bound
stos
cmps
jp
icebp
fst
fucom
hlt
push
pop
retf
in
outs
fst
std
out
or
pop
lds
sbb
mov
mov
popf
push
cmps
inc
fidivr
cmp
shl
in
xchg
mov
cmp
pop
out
sub
call
and
mov
hlt
sbb
push
ss
adc
in
sahf
xor
dec
or
in
push
mov
xchg
jecxz
pop
ins
mov
dec
cmp
dec
and
pop
xor
je
mov
mov
or
sub
sahf
sub
mov
and
push
mov
sar
pop
in
loope
shl
loop
pushf
in
mov
out
mov
xchg
(bad)
jle
nop
fsub
mov
fwait
or
push
jb
push
(bad)
mov
xchg
cmp
push
mov
cmp
jae
inc
xchg
ret
cwde
add
or
push
sub
xchg
std
jo
cmp
iret
stos
mov
pop
hlt
mov
and
mov
add
dec
adc
jb
pop
mov
jmp
jb
xchg
inc
add
repnz
mov
sbb
mov
sar
xor
imul
test
mov
mov
in
stos
mov
mov
pop
cmp
jno
retf
imul
rcl
push
lock
fsubr
sub
mov
mov
push
xchg
jne
sbb
add
push
pop
(bad)
push
frstor
in
shr
arpl
mov
sbb
rol
bound
icebp
inc
sub
jno
add
adc
lock
pop
push
inc
add
cmp
or
mov
ss
ret
pop
pop
pusha
pop
sub
sbb
push
push
inc
into
or
sbb
fwait
sbb
or
mov
sub
fstp
mov
push
push
sub
loopne
cmp
xor
neg
pop
push
addr16
sbb
dec
sub
xor
sub
aas
inc
sbb
jo
out
fld
mov
xor
jae
jnp
pop
idiv
test
addr16
pop
cwde
xor
xchg
pop
or
or
popf
fistp
add
add
out
jae
push
les
pop
shl
and
repz
int3
push
mov
aam
jle
add
cmps
sub
loope
int
int3
jge
in
leave
loope
jmp
xor
push
fcomp
push
dec
adc
lea
add
repz
shl
(bad)
adc
mov
xor
mov
push
movs
add
xor
inc
pop
add
mov
rol
sbb
inc
cld
std
or
and
xchg
pop
lods
jns
xor
(bad)
mov
push
mov
leave
out
push
es
mov
iret
xchg
sub
pusha
call
sbb
or
mov
loope
js
add
add
mov
jp
push
repz
mov
icebp
sbb
xchg
mov
xchg
or
out
xchg
aam
in
or
or
(bad)
jle
cmp
adc
pop
movs
cmc
mov
loope
sub
inc
jg
hlt
imul
sbb
lods
and
test
cmp
mov
xchg
jo
pusha
pop
xchg
add
das
or
add
sub
jl
or
jae
outs
outs
in
in
loop
cmps
(bad)
(bad)
icebp
push
cld
imul
mov
fs
dec
sbb
call
retf
or
ins
xor
mov
pop
sub
push
sub
ss
setl
je
mov
xor
pop
push
dec
cmps
xchg
cmp
mov
retf
mov
inc
ss
cmp
dec
push
pop
adc
enter
test
jg
pop
outs
(bad)
xchg
adc
mov
sbb
sbb
jmp
ins
jne
sub
enter
scas
ds
sti
ins
mov
add
mov
sbb
sub
out
ror
mov
inc
mov
sub
pop
movs
retf
mov
mov
cmp
es
ss
inc
pop
hlt
call
test
xor
inc
addr16
push
in
cmps
mov
inc
ja
icebp
sub
dec
pusha
mov
in
inc
cmp
dec
in
pop
test
(bad)
ja
lahf
retf
and
in
int
mov
shr
cmp
pop
jns
scas
leave
push
cmp
dec
shr
pop
outs
ret
(bad)
fistp
shl
cmp
sub
xor
or
push
mov
push
xchg
jae
jle
je
push
(bad)
shl
retf
push
inc
movs
fsub
xor
pop
mov
jno
jnp
shr
ret
push
jge
cmps
jne
std
enter
addr16
ins
or
push
outs
mov
jge
cmps
mov
pop
xor
out
jp
inc
stos
and
mov
daa
dec
xchg
or
mov
in
cmp
jo
movs
popa
dec
cmp
fs
aaa
test
pop
fs
jp
xor
test
ror
nop
ret
mov
out
jbe
sti
pop
in
shl
mov
add
sahf
out
cmp
adc
cmp
aaa
sahf
mov
fld
in
sbb
add
lea
ret
out
mov
dec
enter
packsswb
retf
add
push
mov
in
add
fwait
imul
scas
pextrw
jns
or
pop
lahf
aaa
jno
sbb
cmc
inc
ja
dec
lods
std
xchg
sub
mov
fdiv
inc
cmps
push
pop
sbb
and
pop
sbb
push
cmc
xchg
xor
outs
data16
mov
xchg
xchg
rcr
icebp
add
xchg
nop
into
dec
test
movs
mov
loop
mov
ins
and
mov
rcr
and
cmp
push
rcl
jle
jnp
pop
hlt
sbb
aam
pop
dec
lods
in
test
add
mov
inc
mov
shl
nop
cmp
push
sbb
dec
(bad)
(bad)
cmp
push
xchg
enter
pop
sbb
jae
retf
sbb
aad
mov
imul
repnz
cdq
rol
int3
jne
pop
jae
or
(bad)
call
repnz
mov
aad
jbe
les
loop
outs
clc
fbstp
test
loopne
push
je
cmps
add
in
adc
sti
test
adc
aad
(bad)
mov
or
bound
and
shl
sub
pop
jns
and
and
cli
sbb
outs
jmp
pop
xor
sub
adc
scas
in
mov
adc
push
dec
fist
test
pop
pop
and
sbb
push
add
mov
xchg
mov
xor
push
fs
xchg
push
cmp
sar
pop
leave
je
ins
test
popa
adc
mov
mov
add
pop
test
std
jg
call
cmp
jb
daa
loop
mov
fstp
test
es
sar
dec
ins
and
sahf
cmp
rcr
int
and
sbb
jmp
jp
and
mov
mov
sbb
ins
push
push
retw
sbb
dec
jns
arpl
call
push
inc
clc
or
pop
mov
ret
(bad)
push
push
(bad)
cmp
adc
jmp
ins
into
push
mov
add
clc
addr16
mov
std
fiadd
out
mov
sti
inc
or
outs
(bad)
stos
sti
mov
mov
loopne
jmp
(bad)
dec
adc
push
in
push
retf
inc
movs
mov
push
aad
rcr
movs
push
and
pop
repz
cdq
and
pop
inc
in
cmps
cmp
pop
pop
test
or
inc
inc
push
push
jnp
mov
in
sub
sbb
or
ins
sbb
lea
inc
gs
movs
ret
jg
pop
push
and
test
dec
sahf
stc
ds
jnp
es
add
lock
mov
lahf
sbb
repz
and
mov
xchg
out
xchg
cmps
xor
sbb
mov
add
jmp
cmc
sahf
aam
add
xor
or
dec
pop
adc
jmp
rol
sbb
outs
sbb
push
(bad)
adc
push
mov
icebp
ror
sub
push
ret
xor
mov
daa
mov
push
lods
dec
jmp
sahf
js
push
enter
retf
ds
sbb
out
out
loopne
icebp
and
mov
cmp
mov
add
mov
rcl
mov
in
loop
xchg
and
bound
lds
xor
add
and
pusha
aas
xchg
fidivr
adc
fdivp
adc
icebp
xor
cmc
repz
add
or
and
xchg
loope
ins
mov
inc
mov
inc
sbb
and
xlat
jmp
xor
dec
adc
test
pop
adc
pop
in
inc
cdq
xor
imul
imul
addr16
int3
xchg
int3
out
cmps
ret
call
xor
or
dec
scas
sub
test
mov
cs
fstp
mov
push
adc
push
cmp
test
aas
mov
dec
add
and
lahf
pop
in
stos
cwde
popa
cwde
je
fidiv
mov
cwde
out
adc
mov
pop
push
cmps
in
in
ins
dec
and
popa
scas
pop
outs
mov
lea
mov
cmp
push
dec
fisub
rol
mov
cmp
dec
jno
jmp
jmp
cmp
mov
pop
jge
xchg
enter
or
dec
test
fcom
add
push
mov
fdiv
imul
sbb
hlt
inc
push
vpunpckldq
jae
xor
popa
push
sbb
cmp
push
cmp
loopne
clc
mov
not
dec
or
js
cpuid
and
shr
push
xor
daa
jle
inc
cs
test
push
and
inc
dec
add
push
push
popa
imul
aad
icebp
fdiv
mov
xchg
aas
jnp
loopne
inc
xchg
cmp
adc
out
outs
push
add
loopne
shl
cs
sti
add
popa
stos
fild
push
jb
sbb
add
mov
pop
cmp
fistp
mov
jo
scas
call
jne
adc
sbb
enter
mov
and
loope
dec
inc
pop
dec
aad
xor
rcr
adc
lahf
sub
or
mov
scas
push
pop
xchg
stos
lods
(bad)
pop
jmp
pop
ss
push
sti
inc
dec
pop
loopne
dec
mov
push
lds
push
sub
push
add
in
xor
adc
push
enter
je
mov
cmp
xchg
add
daa
push
imul
add
xchg
jne
sahf
dec
jmp
sub
xor
sbb
xor
add
ficom
out
pushw
and
or
loop
dec
add
out
imul
sub
retf
jae
ja
cmp
adc
out
cs
repz
fwait
mov
cmp
mov
out
lods
fnstcw
ret
(bad)
scas
jne
jg
jno
sub
push
inc
icebp
inc
add
out
add
movs
jmp
ins
cmps
mov
cmp
jle
inc
mov
sbb
repnz
mov
je
fiadd
mov
inc
jecxz
shl
cli
cmp
jbe
retf
into
mov
stos
enter
dec
fwait
clc
popf
mov
push
cld
mov
dec
mov
ss
not
mov
das
lods
mov
(bad)
push
jl
ror
dec
adc
call
mov
cmp
push
mov
xor
int3
push
shr
mov
lods
rcl
(bad)
sbb
ins
push
sbb
mov
fs
mov
rol
retf
cwde
outs
in
idiv
xchg
sub
rol
in
xchg
into
sbb
aam
lds
jno
mov
cmps
jmp
lods
imul
or
sbb
jl
cmp
ds
push
stos
fsub
jbe
xor
mov
(bad)
ins
jns
cmp
dec
inc
sahf
cmp
cmp
test
jne
mov
dec
add
jmp
in
push
shl
adc
cmps
addr16
xchg
jb
ins
pop
pop
add
out
jo
hlt
stos
not
sub
and
sbb
inc
pop
push
(bad)
cmp
jno
mov
aam
arpl
add
iret
push
shr
outs
cli
inc
pop
push
popa
pop
xchg
enter
sub
pop
add
in
mov
lods
lods
pop
lods
cmc
inc
cdq
lea
mov
and
cmp
fisubr
jge
or
fdiv
nop
movs
fs
sbb
xor
into
push
pop
dec
ffree
gs
jno
xor
sbb
dec
stos
out
and
psrlw
add
ds
je
sub
jne
in
mov
in
mov
scas
and
aad
add
retf
nop
xchg
mov
lahf
fbstp
dec
bound
sub
sbb
cmp
aad
call
add
leave
jo
xchg
or
push
scas
jp
add
rol
aad
in
mov
test
(bad)
jp
clc
lods
(bad)
or
outs
push
shl
dec
je
pusha
imul
stc
cli
(bad)
jmp
fistp
xlat
imul
sub
enter
inc
data16
rcl
sbb
mov
fsub
fnstenv
mov
bound
into
dec
aad
imul
adc
xor
hlt
out
lea
add
int3
pop
mov
mov
and
inc
mov
iret
fadd
xor
in
out
pop
aad
mov
xchg
add
sub
ret
mov
sub
test
sub
loope
mov
push
pop
dec
in
sbb
sbb
jp
jae
and
jge
(bad)
cmp
cmp
push
aas
lahf
adc
or
mov
push
ficomp
xchg
cmc
clc
mov
sbb
mov
mov
cmp
(bad)
cdq
cdq
mov
push
dec
inc
adc
pop
test
mov
bound
bound
mov
stc
xor
mov
mov
ins
dec
inc
daa
clc
push
inc
add
shr
xor
xchg
mov
(bad)
pusha
push
xor
jnp
imul
jg
test
fdiv
cmp
fisttp
(bad)
jmp
repz
(bad)
mov
or
push
mov
adc
in
inc
in
adc
cmp
adc
mov
shr
xchg
mov
sahf
leave
jbe
sub
out
lods
or
jns
sub
(bad)
stc
lea
xor
inc
xchg
sbb
je
xor
rcl
push
inc
xchg
or
sub
lods
ins
loop
jmp
scas
mov
mov
jbe
add
jecxz
test
xor
nop
jnp
lods
cmps
(bad)
xor
cmp
sahf
inc
mov
int
out
ret
inc
mov
mov
fiadd
jb
pop
mov
mov
lock
or
ror
mov
sti
mov
out
sub
les
jecxz
les
dec
lods
adc
jns
push
es
hlt
aaa
je
in
push
mov
mov
mov
mov
and
mov
pop
test
cmps
and
daa
mov
call
lea
cdq
pop
movs
cmps
cwde
or
pusha
cmp
pop
daa
fwait
sahf
add
les
aam
mov
cdq
mov
jns
test
mov
lods
mov
mov
push
xor
ret
sbb
punpcklwd
cmps
call
in
mov
xchg
fwait
pop
sbb
xchg
adc
in
sub
sub
mov
mov
mov
rcl
push
or
out
outs
sbb
mov
sti
lahf
outs
sbb
and
sub
pop
ins
sbb
pusha
mov
stos
leave
lods
push
lods
ret
scas
ret
cld
jnp
inc
lock
test
lds
xchg
push
fxtract
iret
jmp
rcl
push
pop
mov
arpl
in
add
add
pop
fcmovbe
(bad)
addr16
pop
pop
(bad)
and
add
mov
cmp
xchg
cmc
pop
sti
arpl
xor
stos
gs
pop
ss
pushf
ror
jg
cli
or
loopne
stc
mov
sbb
mov
outs
(bad)
xchg
dec
jle
sbb
sti
or
add
jp
xchg
sub
adc
add
cmp
fdiv
in
lods
jge
dec
jno
nop
cmp
jo
xor
pmuludq
pop
addr16
mov
nop
data16
lods
js
(bad)
loop
(bad)
ficom
(bad)
sub
or
neg
mov
push
xchg
mov
ins
cdq
in
stos
sub
loope
les
dec
inc
lods
mov
sub
mov
test
or
sbb
inc
jb
test
sbb
mov
pusha
aam
xor
jno
fs
and
jmp
frstor
or
movs
xlat
aaa
into
or
xor
mov
ror
mov
inc
pusha
cmp
out
jmp
repnz
pop
jnp
movs
mov
mov
cli
int3
punpcklbw
mov
call
push
jp
fs
pop
gs
sbb
mov
test
gs
jmp
lea
in
push
std
(bad)
aaa
ror
call
sbb
push
cwde
rcl
pop
sbb
in
aas
rol
sub
(bad)
mov
xchg
int3
xchg
sahf
jge
fwait
cwde
push
stos
mov
mov
fwait
lods
mov
scas
add
outs
or
jg
mov
adc
ja
lahf
jns
ds
dec
xchg
scas
sysret
test
iret
jb
xchg
iret
into
cli
push
or
mov
ja
xor
push
jl
push
and
sbb
(bad)
mov
cli
inc
stos
jl
adc
dec
(bad)
loope
mov
adc
es
out
inc
ja
test
and
jno
test
jmp
adc
data16
mov
cmp
pop
inc
xor
inc
inc
cwde
aad
aam
mov
rcr
pusha
idiv
mov
test
mov
mov
mov
(bad)
add
lock
sbb
aaa
vpaddb
mov
jg
xor
push
mov
jnp
ss
fdecstp
or
push
sbb
jp
jb
jnp
mov
pop
cmp
aam
in
jl
xor
sub
sub
mov
cmp
(bad)
rcl
dec
xor
cmp
adc
std
jo
xchg
sub
pop
out
cmp
inc
mov
mov
cli
xor
into
cmps
retf
and
jmp
retf
dec
xor
loop
or
(bad)
jecxz
mov
add
pop
xlat
push
f2xm1
inc
xor
dec
xchg
push
mov
push
pop
addr16
mov
xor
fnstcw
outs
adc
mov
sbb
call
xchg
cmp
int
ins
retf
fnstsw
xchg
dec
das
push
mov
retf
bound
mov
push
js
jp
push
rcl
inc
in
mov
inc
inc
sub
push
into
mov
lahf
scas
outs
push
pop
mov
jle
mov
mov
push
or
inc
adc
loope
xchg
data16
mov
pop
mov
sahf
fmul
and
fisttp
pushf
aad
push
pop
inc
or
sbb
outs
movs
sbb
jl
cmp
out
fidivr
inc
test
loopne
stc
push
xchg
dec
xchg
mov
mov
add
push
arpl
lds
add
push
push
lods
push
inc
inc
pop
push
or
test
js
mov
xchg
fs
push
test
mov
test
dec
bound
add
lods
xchg
cwde
push
shl
test
pop
enter
push
retf
mov
scas
retf
out
cmps
mov
jl
pop
pop
addr16
les
cmp
cmp
and
ret
push
pop
aas
call
int3
lahf
adc
das
add
mov
inc
sub
sbb
cmp
or
arpl
mov
fimul
(bad)
inc
xchg
push
inc
stos
mov
add
ds
push
pop
jnp
cs
sbb
je
inc
fmul
and
cdq
mov
jb
shr
int
rcl
fwait
mov
dec
jno
cmps
fwait
inc
mov
ja
and
nop
jnp
jno
jl
mov
push
std
sbb
int
and
jo
dec
jns
adc
pop
test
dec
fstp
xchg
data16
mov
jbe
retf
and
loopne
(bad)
push
xor
sub
and
and
jbe
ds
in
xchg
cmp
arpl
sub
mov
dec
jb
popf
mov
push
lods
(bad)
ja
or
or
push
adc
pop
mov
add
cli
or
mov
ds
retf
lfs
sbb
cs
cld
jmp
rcl
or
push
retf
ss
stc
sbb
dec
xlat
jmp
stos
ins
pop
sti
stos
lock
xor
jns
stc
pushf
pop
push
cmps
(bad)
jbe
dec
push
and
push
xchg
xchg
mov
jmp
fwait
add
pop
push
jo
dec
outs
(bad)
mov
cmp
pop
retf
mov
rcl
fist
sbb
in
lahf
ja
xchg
cmps
pop
mov
mov
adc
xchg
hlt
cdq
jno
dec
leave
and
pop
fdivr
adc
jae
daa
xchg
ins
add
cmc
ficom
es
push
xor
mov
xchg
bound
xor
jnp
pop
sbb
lock
inc
add
out
mov
fidivr
cmp
outs
and
cmp
dec
pop
mov
xor
and
mov
call
sbb
daa
fiadd
jle
int3
dec
imul
and
ins
cwde
mov
xchg
popa
pop
cmp
(bad)
push
loop
xchg
add
jo
loopne
scas
jp
shl
gs
xchg
add
mov
inc
lds
fstp
push
mov
xchg
je
stos
and
clc
fmul
push
cmp
(bad)
cmp
cmp
fldcw
cmp
xchg
mov
ret
cmps
add
pop
dec
pop
mov
push
pop
repnz
shl
inc
dec
pop
mov
mov
mov
retf
js
fidiv
or
push
cmps
pop
ins
mov
dec
call
in
push
add
lahf
push
push
ss
imul
mov
push
loope
mov
ins
(bad)
inc
xchg
mov
push
inc
cmp
dec
mov
dec
mov
(bad)
(bad)
adc
and
or
mov
int3
fdivp
outs
jne
loope
mov
inc
push
xchg
bnd
fcom
push
jno
out
rol
into
in
add
scas
xchg
into
push
test
repnz
add
aas
loope
push
and
call
or
sub
dec
jecxz
mov
push
mov
push
xchg
stc
shl
cmp
fistp
je
imul
xchg
sahf
sub
sbb
push
push
leave
fild
fimul
ins
mov
xchg
pop
test
imul
std
ja
add
(bad)
pop
push
in
mov
cmp
ret
inc
cmp
add
mov
mov
ficomp
mov
mov
xor
movs
push
int
dec
out
pop
mov
pop
or
scas
mov
push
fisttp
jb
or
xchg
jge
faddp
sub
add
mov
iret
xchg
cmp
lods
fild
push
sbb
inc
dec
push
push
movs
sbb
fwait
inc
mov
cmps
test
pop
popa
lds
push
pusha
in
mov
xchg
sbb
add
mov
ins
cmp
scas
jno
paddusb
scas
inc
adc
sbb
fxch
movs
imul
out
adc
push
ins
in
das
inc
xchg
sbb
iret
(bad)
jmp
inc
(bad)
adc
out
sub
xchg
mov
daa
int
mov
jne
push
retf
ja
ss
rol
inc
xchg
pop
mov
in
fwait
in
sub
and
mov
lods
call
sub
and
scas
lar
iret
or
cli
pop
rol
test
push
or
and
mov
xchg
pushf
imul
push
icebp
add
push
lods
mov
das
test
mov
pop
into
xchg
in
jnp
in
sbb
push
jne
retf
jno
jg
or
arpl
xchg
push
sahf
lock
call
jo
xchg
xchg
mov
xchg
pop
xchg
push
aaa
mov
setp
in
add
push
or
(bad)
outs
fcmovnbe
lods
cmp
xchg
and
and
iret
jp
jp
xchg
leave
mov
xor
adc
into
dec
js
cdq
setle
xchg
fs
fcom
in
mov
sub
jae
repz
pop
add
cmps
inc
fsubr
fcmovnbe
lds
imul
pop
shl
je
cld
cld
(bad)
(bad)
pop
xor
add
outs
mov
ret
ds
sub
adc
movs
pop
int3
jecxz
push
mov
in
inc
dec
mov
ret
sbb
cs
out
pop
xchg
push
jnp
push
jb
cdq
out
jmp
and
out
in
mov
cmp
inc
repnz
(bad)
retf
sar
test
mov
sub
scas
inc
fiadd
ficom
aad
das
xlat
mov
inc
xchg
mul
ss
rcl
rol
mov
sahf
or
sub
push
sbb
sahf
xor
mov
aaa
lahf
movs
call
inc
js
push
out
loopne
xchg
movlps
fs
or
push
loope
mov
and
loop
iret
push
add
adc
add
cli
pushf
dec
iret
mov
mov
mov
js
fldcw
jbe
cmps
mov
out
(bad)
push
arpl
test
test
loop
mov
out
shr
into
nop
sub
sub
add
sbb
mov
in
test
dec
xor
popf
fidiv
cmp
or
ror
loopne
push
stos
movs
popf
cli
inc
outs
mov
test
cld
fisttp
inc
dec
push
mov
mov
inc
jns
dec
push
cmps
pop
nop
jno
pop
or
push
dec
pop
push
sub
lods
mov
bound
movhps
(bad)
lods
and
loope
sub
xchg
jecxz
dec
mov
and
pop
leave
shl
fsubr
mov
pop
mov
pusha
xchg
out
js
and
fmul
mov
inc
out
out
dec
cmps
mov
in
cmps
clc
jmp
push
sub
jmp
aas
and
add
mov
and
jmp
out
xrelease
xchg
cmp
int
leave
pop
fdivr
fs
in
pusha
dec
jb
bnd
neg
sub
out
fld
lds
iret
and
or
sub
int3
push
mov
arpl
aas
das
mov
dec
dec
pop
add
inc
inc
dec
mov
ds
xlat
(bad)
imul
add
xor
add
lock
cmp
sbb
sub
sar
xor
xchg
fdiv
and
iret
push
scas
or
jmp
push
mov
out
add
popa
out
push
sbb
cmp
cmp
repnz
out
push
nop
(bad)
in
dec
gs
mov
fstp
jge
lods
outs
sbb
mov
cmps
mov
push
shr
xchg
icebp
lds
pop
and
and
dec
sbb
mov
ret
pop
cs
xchg
add
xor
lods
dec
js
int
fimul
sbb
lods
sti
jbe
dec
ror
fsub
adc
cmp
test
test
sbb
aaa
ret
sub
leave
and
jno
dec
ja
sbb
push
mov
(bad)
call
inc
out
mov
les
mov
jge
clc
pop
pop
loopne
xchg
or
fisub
push
int
test
sbb
push
inc
out
adc
pop
or
cli
or
jo
pusha
sub
pop
call
fxch
mov
pop
test
or
xchg
fsub
cdq
les
(bad)
cwde
or
cwde
xlat
push
pop
mov
movs
cs
aas
in
pop
sbb
ja
stos
add
push
aas
jecxz
mov
jbe
sub
sbb
cwde
xchg
jle
aaa
outs
inc
push
mov
cli
sbb
cmp
repnz
and
in
sahf
adc
pop
arpl
int3
loopne
imul
mov
cwde
(bad)
jbe
push
jmp
dec
movs
jecxz
and
sar
pop
and
movs
retf
fmul
imul
mov
mov
movs
push
jae
jo
fidivr
mov
sbb
out
cmps
push
push
cmp
out
adc
or
mov
shl
sbb
adc
mov
scas
imul
(bad)
popf
into
adc
sub
ins
cwde
int
sbb
jne
cwde
xchg
adc
cmp
adc
push
out
lods
xor
scas
aam
jl
jmp
mov
and
jnp
sbb
in
and
ja
xor
xor
lods
xor
sub
xor
and
add
ret
cmp
sub
mov
cwde
or
sbb
adc
or
jp
lds
xchg
dec
sbb
push
sbb
dec
call
nop
mov
pusha
and
out
hlt
dec
cmp
cld
mov
(bad)
bound
push
and
mov
adc
adc
inc
mov
lea
lods
ret
and
fidiv
dec
mov
fldenv
int3
jmp
dec
pop
pop
push
retf
dec
lahf
sbb
cmp
out
mov
cmp
(bad)
js
push
jbe
or
loope
dec
stos
cmp
cmps
nop
out
lock
xor
ins
(bad)
jmp
dec
jae
jl
xchg
or
faddp
adc
or
aam
dec
cmp
mov
popa
mov
loope
test
mov
or
addr16
xchg
sub
xchg
fs
xchg
dec
out
outs
xor
or
fadd
popf
dec
and
pop
pop
sub
or
call
in
ja
mov
js
mov
jmp
syscall
or
xchg
push
mov
dec
xor
cwde
fdivr
pop
cli
mov
or
mov
xchg
jne
aad
xor
fadd
icebp
or
mov
into
enter
sbb
jle
ss
cmp
loope
mov
mov
div
repnz
movs
mov
(bad)
jns
sahf
xor
pusha
(bad)
or
lock
lods
aaa
inc
icebp
mov
sbb
pop
js
pop
test
push
jl
inc
lea
push
cld
fs
pop
pop
mov
dec
mov
arpl
dec
push
popa
dec
xchg
aas
std
jg
and
sbb
xor
stos
in
or
xlat
pop
mov
mov
fs
test
cld
test
aam
ins
arpl
mov
pop
inc
pop
retf
add
jmp
mov
retf
test
mov
jg
scas
cmp
mov
push
cmp
or
sti
in
out
aaa
xchg
popa
jno
cdq
pop
fcomp
jns
(bad)
loopne
in
cld
in
xchg
rcr
test
xchg
je
stos
daa
ds
xchg
fdivp
nop
mov
pop
imul
bound
dec
aad
popf
dec
jp
fldcw
mov
xchg
mov
test
pop
je
mov
sub
stos
idiv
adc
aaa
stos
or
std
jge
gs
lahf
aaa
push
lods
ins
jmp
repnz
mov
xchg
not
mov
daa
mov
out
mov
mov
icebp
pop
push
ins
bound
cmps
cmp
push
dec
fadd
fucomip
sub
cli
sub
or
shl
mov
lahf
or
push
cmp
mov
retf
xor
adc
hlt
nop
mov
pop
adc
sbb
add
push
cmp
lods
adc
leave
sub
rol
loope
inc
sub
addr16
popa
and
and
mov
in
inc
arpl
pop
fcomp
in
aam
inc
dec
icebp
dec
jae
out
pop
jmp
div
int3
call
cmp
and
inc
pop
icebp
mov
out
cmp
cmp
mov
pop
or
out
leave
or
xchg
or
dec
(bad)
bound
adc
enter
xchg
out
cwde
or
jns
push
es
push
mov
mov
cdq
mov
mov
test
fcom
pop
push
rcpps
lods
and
ror
jb
mov
adc
test
dec
stc
xor
ret
in
inc
ss
pop
in
scas
inc
dec
mov
fnstsw
sbb
or
call
outs
mov
xor
xor
add
adc
push
mov
(bad)
dec
inc
jge
or
sub
(bad)
adc
mov
and
cmp
in
ret
add
clc
cmp
push
mov
pop
arpl
sub
ret
mov
xor
mov
fdiv
sub
cli
adc
and
outs
cmp
loop
outs
(bad)
int
inc
jo
pop
mov
in
jp
and
add
and
xchg
add
call
mov
pop
retf
push
inc
cmp
xor
mov
jmp
in
cmp
mov
jno
sub
rol
mul
pop
mov
inc
in
xchg
outs
mov
fiadd
pusha
pusha
stc
or
mov
jnp
mov
push
dec
or
aas
fcomi
outs
mov
movs
or
fs
mov
popa
cmps
arpl
add
div
xor
add
mov
jae
cmc
adc
xor
pop
push
or
(bad)
mov
shr
pop
cmc
or
rcl
mov
pop
adc
push
sti
mov
jmp
inc
inc
(bad)
push
adc
rcr
cwde
movs
(bad)
jmp
cmc
dec
push
mov
sar
lea
jecxz
in
mov
call
mov
mov
push
and
out
push
dec
loopne
outs
mov
lock
pop
sbb
dec
xor
mov
cmps
and
and
xor
(bad)
out
cmps
loopne
int
mov
shr
jle
movs
and
ret
or
xor
popf
les
jb
test
xchg
push
pop
pop
aam
push
stos
(bad)
mov
push
mov
pop
fxch
rcl
cwde
test
dec
or
or
dec
mov
cmp
ret
sahf
mov
movs
test
loope
push
jo
jmp
(bad)
fsubr
or
push
push
lock
ins
stc
cmps
lock
jne
push
jns
inc
fwait
mov
mov
js
inc
add
push
dec
in
(bad)
js
mov
sbb
repnz
adc
call
pop
xor
iret
add
xor
repnz
or
xor
push
push
mov
(bad)
imul
cmp
sbb
sbb
jg
mov
iret
jb
(bad)
push
or
mov
mov
add
mov
jmp
loope
pop
pop
jg
xor
pop
sub
jecxz
cmp
(bad)
fldenv
imul
dec
or
sub
mov
imul
sti
push
jl
pop
(bad)
out
sub
ret
(bad)
xchg
lods
dec
push
sbb
sub
sub
arpl
lods
cmp
call
mov
sti
adc
fwait
dec
and
lock
cmps
mov
sbb
das
mov
dec
sub
cmp
dec
mov
nop
gs
test
xor
mov
mov
mov
cmp
lods
(bad)
int
scas
xchg
adc
mov
pop
inc
mov
sar
pop
mov
test
add
test
pop
cld
cdq
push
ins
mov
mov
sub
add
jg
jge
or
in
clc
mov
adc
inc
dec
dec
lods
and
jge
(bad)
fcomp
dec
dec
sub
xchg
fld
mov
loope
inc
enter
jne
jae
repz
clc
mov
push
mov
pop
les
jb
scas
dec
cmc
dec
test
and
sti
inc
aad
fwait
add
or
fcom
mov
mov
out
rcl
or
pop
in
add
ret
mov
inc
sbb
icebp
inc
sbb
rol
aas
cmp
fldenv
fadd
rcl
les
push
jecxz
ins
and
les
cmps
fucomip
push
jl
sahf
call
xor
and
pop
jge
xchg
out
add
out
ins
shr
call
mov
cmp
test
xor
push
in
fcomp
lds
movs
jg
add
xor
test
mov
imul
icebp
pusha
mov
xor
pop
pusha
adc
mov
ds
mov
stc
push
pop
call
sbb
stos
pusha
mov
shl
test
add
test
adc
dec
add
outs
lods
jmp
fs
(bad)
call
imul
es
dec
pushf
neg
nop
sahf
jg
cmp
mov
fcmovnbe
ss
ficomp
push
push
pop
int
dec
inc
or
xlat
sub
jl
scas
sbb
clc
sbb
xchg
xchg
cld
repnz
inc
xchg
leave
sub
bound
mov
into
xor
cmps
mov
sub
jae
test
rol
sub
inc
aaa
jmp
mov
jne
push
push
mov
dec
test
add
or
jae
ret
add
cmp
xchg
mov
jbe
mov
outs
imul
repnz
jmp
pop
out
mov
sbb
retf
dec
stos
std
out
pusha
clc
xchg
stc
aaa
shl
mov
ins
cmp
pop
dec
fstp
lahf
(bad)
lods
sti
lahf
out
jb
dec
je
add
cs
lods
adc
cdq
sbb
into
ins
mov
inc
push
jmp
fdivr
mov
jno
push
cld
pop
cs
fst
jno
sbb
pop
inc
scas
mov
into
mov
pusha
imul
lods
popa
push
loopne
adc
adc
arpl
inc
inc
adc
mov
shl
or
jp
fadd
pop
les
out
in
push
sbb
cwde
aaa
mov
ss
adc
cli
jp
mov
daa
rcr
pop
and
pushf
xchg
pop
inc
ins
clc
dec
dec
add
je
ret
scas
adc
movs
cmc
sub
pop
into
dec
add
(bad)
loop
and
xchg
shl
jno
or
jg
(bad)
or
cwde
mov
loop
mov
mul
repnz
lahf
xor
add
js
sahf
dec
sbb
adc
(bad)
mov
(bad)
mov
mov
dec
jns
loop
aad
push
data16
jg
mov
sbb
pop
jmp
sub
jle
add
sub
dec
pop
es
scas
fadd
add
inc
aaa
(bad)
xor
dec
scas
jae
push
inc
xchg
xchg
mov
ins
ret
sub
inc
aas
push
xchg
cmp
push
mov
iret
fs
push
or
int3
push
shl
or
cmp
std
stc
in
adc
jl
mov
inc
dec
das
bound
sub
and
push
jmp
xor
mov
aaa
push
shl
xchg
xchg
clc
or
fst
mov
and
xor
aaa
addr16
fwait
pop
test
mov
or
fcom
add
jp
in
fdiv
int
shr
daa
add
int3
repnz
mov
push
rcl
scas
inc
test
ror
je
loope
jnp
mov
mov
out
pushf
fwait
jb
pop
push
add
push
jge
loope
outs
mov
out
sub
(bad)
xchg
mov
fnstcw
lods
xchg
push
aas
loopne
iret
fidiv
sbb
cli
push
outs
dec
fs
and
dec
popa
sbb
mov
mov
call
in
daa
or
repz
or
inc
mov
adc
add
add
rcl
call
xchg
xchg
fisttp
jbe
fbld
aam
xchg
aaa
retf
xor
jns
sub
loopne
xchg
jns
mov
rcl
aas
shr
aam
scas
add
pop
and
out
data16
push
jae
jge
fst
or
dec
loopne
or
imul
movs
sbb
les
iret
js
movs
or
xor
cmp
push
rcr
ret
out
stos
stos
sbb
cmc
lods
sbb
ror
in
into
cmp
fdivr
stos
ret
cmp
dec
lods
mov
lea
daa
add
popa
xor
into
inc
sti
inc
pushf
jbe
or
cmp
fwait
in
push
push
sub
push
ror
fidivr
pop
pop
iret
retf
ret
std
xor
dec
push
movs
repz
xlat
or
jmp
mov
stc
movs
div
popf
sbb
jmp
mov
idiv
call
les
rcl
xor
in
adc
jns
mov
inc
not
sub
(bad)
ds
outs
in
cwde
cld
enter
inc
xor
mov
sbb
jp
in
sbb
pushf
push
aas
test
push
repz
clc
pop
aaa
adc
mov
jg
pop
and
or
mov
leave
fldcw
repnz
pop
imul
or
jmp
sub
mov
stos
pop
loop
pop
mov
mov
sub
(bad)
out
pop
out
mov
push
dec
retf
xor
dec
out
leave
in
aaa
int3
ret
mov
adc
in
cli
lds
punpckhbw
aas
(bad)
push
and
sbb
jnp
dec
test
mov
mov
add
test
push
imul
imul
outs
push
push
push
lahf
push
xor
mov
cdq
hlt
push
xor
cwde
js
div
adc
mov
aad
aad
retf
cmp
lahf
sub
dec
adc
mov
fst
enter
cdq
jo
ss
test
mov
aam
and
test
lds
pop
mov
gs
jne
bound
dec
icebp
lock
push
adc
push
call
test
cmps
mov
and
dec
cmc
lock
call
sub
fidivr
inc
pop
test
in
fwait
lahf
add
add
sub
lea
cwde
mov
push
aam
lahf
jmp
rol
ins
jo
add
out
popf
jge
cdq
ret
data16
pop
add
clc
cmp
loop
addr16
mov
mov
mov
sub
ss
test
add
das
aas
push
lea
hlt
push
ins
scas
add
pop
in
and
inc
popf
mov
dec
mov
pushf
cmc
enter
out
pushf
cmp
add
jno
and
push
cmps
out
xchg
and
mov
pop
xor
out
jnp
mov
scas
sub
stos
sar
mov
xlat
popf
pop
inc
enter
mov
hlt
or
sub
xchg
pop
fldcw
loopne
push
enter
cmp
into
div
pop
jp
bound
stos
xlat
cwde
test
dec
mov
pop
ja
mov
div
or
stos
add
mov
mov
sar
mov
mov
mov
add
mov
aad
in
js
adc
shl
ret
mov
ficomp
retf
shl
aas
stc
out
fild
(bad)
aas
das
dec
repnz
xchg
pop
js
push
xchg
push
add
lea
adc
pop
in
mov
push
push
jno
push
out
add
cmp
(bad)
adc
xlat
in
add
fild
mov
mov
inc
movs
mov
jg
adc
scas
test
jecxz
vpextrw
lds
or
xchg
xor
ret
(bad)
arpl
popf
xor
mov
jle
popf
jnp
jl
loope
add
test
jl
or
add
dec
xor
push
in
or
jne
leave
test
inc
dec
sub
neg
pop
clc
cmp
pop
aaa
cmp
test
ja
aas
out
xchg
sar
sub
push
aam
cmp
jb
or
push
inc
fs
dec
std
add
aad
and
out
pop
pop
test
cmp
das
mov
jo
dec
sar
js
lea
pop
jmp
mov
(bad)
popa
out
jmp
xor
push
xor
cmp
fistp
(bad)
xor
and
fld
cmps
stos
inc
xor
stos
das
ror
in
xchg
aam
js
push
and
in
sahf
or
dec
lods
ret
ins
or
xlat
ret
xor
mov
sahf
pop
mov
(bad)
or
movs
inc
lea
dec
(bad)
cmc
in
not
cdq
aas
cmps
aaa
pushf
inc
or
pop
clc
adc
sub
aam
rcr
jl
dec
xchg
(bad)
pop
pop
aaa
or
rcr
daa
pop
outs
in
(bad)
addr16
xor
sub
adc
jl
and
adc
pop
xchg
aam
sub
add
cmps
cdq
pop
call
push
push
and
ret
dec
xchg
rcr
cmp
sub
rcl
rcl
inc
nop
aas
sub
add
fwait
addr16
fld
or
pushf
add
aaa
mov
cmp
cmps
scas
lea
test
jnp
mov
nop
sbb
or
js
cmps
adc
int3
dec
movs
sbb
icebp
push
js
leave
hlt
ret
push
es
mov
in
cmp
inc
mov
push
mov
fwait
push
(bad)
xlat
stos
loop
add
or
add
push
mov
scas
or
xor
js
xor
data16
inc
add
or
mov
sbb
xchg
mov
not
push
retf
(bad)
lock
hlt
in
xchg
inc
pop
enter
aaa
cmc
aaa
xchg
ja
pop
cmp
neg
sub
pop
inc
in
jle
call
xchg
mov
push
push
cmps
jg
cmc
and
(bad)
jmp
les
ret
in
mov
dec
(bad)
or
dec
mul
sbb
pop
adc
sbb
push
mov
jmp
xchg
push
leave
out
outs
(bad)
leave
sbb
pop
xchg
inc
pop
cli
retf
je
out
push
in
or
pop
stos
(bad)
(bad)
xchg
mov
pusha
push
fld
dec
pop
stos
es
stc
push
xor
sbb
ret
in
jno
pop
mov
loop
gs
test
xchg
mov
std
add
fld
movs
mov
pop
neg
add
add
pushf
pop
popa
lods
sub
xor
shl
mov
pushf
call
outs
pop
retf
adc
cwde
sbb
sbb
clc
or
sub
cwde
mov
jg
inc
xchg
add
test
mov
scas
std
xor
fistp
jg
push
sbb
push
icebp
xchg
xor
cwde
mov
and
into
xchg
mov
lods
inc
aam
test
inc
mov
sahf
fistp
sahf
int
leave
jno
inc
xor
out
jbe
icebp
rcl
fist
dec
pop
pop
sub
rcl
in
dec
adc
ins
xor
sbb
and
jge
xchg
ret
js
aaa
push
fld
jmp
(bad)
arpl
pusha
mov
inc
cs
jmp
cmp
je
xor
add
sub
(bad)
adc
ret
popa
out
int
or
inc
pop
test
retf
lock
mov
sub
inc
dec
push
cdq
xchg
jge
add
push
jae
scas
and
pop
in
pop
pushf
es
sub
iret
xor
inc
call
xor
jmp
jecxz
sbb
mov
push
xchg
stc
add
test
js
outs
pop
mov
scas
fwait
add
push
and
mov
daa
pop
pushf
jno
retf
mov
fbld
inc
adc
lea
or
mov
push
add
ins
inc
add
fsubr
inc
sub
fldenv
sub
add
inc
or
cmp
pop
cmp
or
cmp
cmp
pop
out
jecxz
lea
pop
out
movs
in
or
leave
das
test
jmp
xlat
mov
xor
test
std
xchg
push
lods
cmps
xchg
clc
pop
daa
push
pop
lock
cdq
add
xor
cmps
mov
lds
mov
xchg
xchg
xchg
stc
cmp
mov
in
repz
mov
add
sbb
mov
je
pop
leave
jo
retf
outs
es
cs
xchg
(bad)
jg
jne
lods
and
mov
mov
sub
jg
jmp
mov
(bad)
(bad)
dec
ins
or
retf
sbb
jnp
dec
or
mov
push
repnz
xor
jbe
jl
ja
out
out
mov
imul
and
push
mov
adc
jmp
(bad)
xor
xchg
js
lock
mov
mov
test
mov
jne
and
inc
cs
push
cmp
jae
jge
jmp
fdivp
xchg
or
jmp
loope
scas
pop
cmp
sbb
mov
retf
daa
sti
or
cli
hlt
push
sub
inc
mov
pop
pop
or
int3
pop
aad
push
cmp
out
xor
pop
jp
ret
xlat
pop
mov
shr
out
jg
jns
sbb
mov
jno
gs
push
test
jo
inc
dec
iret
dec
xchg
push
icebp
clc
jmp
cmps
dec
nop
xchg
mov
ret
push
and
fcmovb
xchg
push
jmp
outs
mov
add
dec
adc
adc
fs
out
pop
pop
sbb
test
stos
inc
pop
jo
mov
mov
push
enter
and
movs
ret
mov
add
adc
push
call
xchg
bound
pop
pop
nop
imul
mov
imul
or
outs
movs
clc
(bad)
jnp
pop
xchg
(bad)
jmp
leave
movs
xor
popa
xor
adc
clc
jno
rol
arpl
inc
popa
push
icebp
js
add
xlat
push
movs
call
ficomp
mov
jb
aam
dec
movs
mov
jae
hlt
cmovge
xor
in
sbb
inc
and
add
scas
sbb
ins
scas
ja
adc
fcomp
push
scas
cld
scas
ret
jo
aas
(bad)
jecxz
jmp
pop
mov
cli
clc
adc
in
movs
dec
mov
ins
ja
cld
pop
in
into
jmp
fwait
cmp
hlt
outs
pop
mov
mov
jmp
sub
pop
fcomp
sahf
sbb
jbe
jmp
ja
cmp
stc
pop
mov
jns
jg
mov
ds
in
fs
mov
xchg
shl
mov
into
lahf
inc
jne
imul
mov
mov
ret
sbb
jne
and
xchg
xchg
cmp
(bad)
cmps
cli
sub
bound
adc
pop
ja
imul
rol
mov
mov
icebp
icebp
cmp
or
jb
pop
xchg
adc
pop
xor
add
sbb
jecxz
jecxz
mov
inc
ret
dec
sub
lock
jge
jb
xchg
push
inc
das
xor
push
popf
mov
loopne
loope
or
jbe
or
loope
sbb
adc
cwde
cmp
jnp
and
mov
sub
fs
sub
(bad)
jmp
aad
loop
push
fcmovnbe
jns
mov
or
inc
repz
sbb
xor
retf
mov
cmc
ss
ret
(bad)
jg
xor
imul
iret
lock
fs
retf
popa
jle
ficom
mov
jmp
es
push
jmp
or
pop
pop
(bad)
cmp
mul
or
test
out
into
inc
push
push
or
idiv
loopne
(bad)
les
add
jmp
ret
sub
pop
push
sbb
in
pop
ja
cmp
cld
mul
xor
pushf
stos
and
iret
ja
push
adc
sar
adc
aad
xlat
fs
mov
popf
sar
pop
jno
fld
push
or
(bad)
rcl
jno
push
sub
jnp
ret
(bad)
cld
into
fcomp
add
xor
cmp
pusha
or
ins
je
in
cmc
add
cmc
cmp
int
fidivr
stos
pop
push
fmul
pop
sub
jecxz
pusha
in
dec
sahf
or
popa
adc
mov
(bad)
push
sbb
add
hlt
leave
xor
xchg
loope
push
out
cmp
sbb
fiadd
cmp
and
lea
inc
adc
xor
xchg
and
into
out
pop
jo
add
add
mov
xlat
out
xchg
cmp
rcr
xor
jb
mov
push
push
mov
mov
adc
stc
jne
data16
(bad)
sbb
mov
bound
jl
popa
jge
dec
inc
ins
call
fwait
xor
sub
inc
iret
pop
xor
pop
xchg
push
(bad)
out
jno
pop
mov
in
sbb
aad
sbb
and
xor
cmp
xchg
add
sub
mov
or
mov
xchg
outs
outs
std
(bad)
mov
pop
hlt
mov
test
test
(bad)
fs
add
aam
iret
lods
mov
mov
add
mov
daa
into
cs
scas
pop
mov
fdiv
pop
cmp
fwait
jmp
sbb
(bad)
out
les
fs
fyl2x
scas
mov
adc
xor
sete
or
ins
push
and
adc
mov
cmp
cs
movs
pop
adc
xchg
add
xor
fxch
lahf
shr
and
push
jmp
(bad)
mov
dec
int3
stc
dec
sub
or
aam
inc
stos
xchg
test
sub
dec
call
rcl
xchg
mov
mov
pop
mov
dec
pop
dec
fcomp
lods
mov
mov
mov
out
cmp
dec
outs
jge
int
xor
mov
or
jnp
sub
cmps
mov
cmp
adc
push
and
dec
popf
enter
pushf
sbb
cmp
add
sbb
jbe
xor
mov
mov
pop
sbb
mov
mov
lods
mov
sti
into
mov
mov
lahf
inc
mov
pop
xchg
xor
or
or
sub
pmaxsw
std
cdq
arpl
adc
inc
mov
out
div
mov
pop
adc
xor
inc
int
mov
adc
pop
movs
add
mov
push
rcr
push
dec
aas
sub
arpl
dec
dec
mov
mov
gs
int
dec
call
cmp
sub
cmps
mov
in
(bad)
call
jne
cmps
mov
je
fstp
in
ins
sbb
cmp
jp
enter
inc
mov
std
das
jae
pop
retf
jne
xor
test
jae
pushf
xor
addr16
jo
inc
ja
lock
rcr
mov
fwait
mov
add
pop
sub
stos
jns
inc
sub
(bad)
cmp
fnstcw
push
pop
jns
pop
xor
push
push
ret
cmp
push
scas
mov
shr
mov
add
cdq
jnp
jo
dec
iret
pop
xor
sbb
push
dec
push
or
in
pop
and
idiv
inc
pusha
cmp
call
cdq
xor
adc
in
sub
push
xchg
push
sub
xchg
xchg
jecxz
push
mov
shl
test
mov
xor
(bad)
adc
and
inc
ds
sbb
xchg
retf
(bad)
adc
out
lahf
(bad)
fbstp
xor
mov
sbb
mov
inc
cdq
inc
(bad)
mov
xchg
pusha
lahf
jb
bound
inc
ret
and
push
xchg
sbb
ins
xchg
das
repnz
xor
dec
jg
pop
ja
jle
cmp
js
inc
xlat
ins
sub
pop
out
loope
scas
pop
mov
aad
xchg
sub
push
aam
sar
mov
clc
movs
mov
and
or
xor
repnz
ds
mov
movmskps
mov
loopne
adc
aas
push
mov
or
sub
inc
repnz
adc
jne
dec
mov
mov
fsub
pop
jp
mov
ins
js
xchg
and
lods
or
ret
test
ds
adc
xchg
addr16
xchg
or
cmps
out
sub
sbb
push
addr16
dec
sahf
aas
add
movs
movs
popf
pusha
dec
xor
and
mov
(bad)
jne
push
sbb
cli
and
or
stc
jae
adc
lea
fwait
and
lahf
push
test
pop
cld
scas
dec
iret
aam
xlat
leave
stos
push
xchg
adc
or
inc
in
mov
xchg
call
ins
clc
cmp
fcom
in
cmp
push
pop
nop
add
dec
(bad)
cdq
adc
xchg
and
xlat
mov
sbb
leave
pavgb
(bad)
test
mov
xor
addr16
mov
je
push
cli
push
xchg
sbb
xor
mov
std
mov
fs
mov
adc
adc
jmp
cli
mov
jmp
mov
add
xor
jae
and
xchg
ds
mov
imul
test
push
leave
out
xchg
and
add
hlt
loopne
mul
sar
repz
dec
xchg
pop
movs
call
push
pop
ret
test
xor
add
loopne
pop
jge
add
and
push
cld
(bad)
repnz
mov
mov
pusha
pusha
scas
jae
mov
pop
pop
cmps
cs
(bad)
out
xchg
in
pushf
lea
cmp
lahf
js
mov
call
adc
dec
jg
(bad)
daa
xchg
mov
mov
adc
(bad)
(bad)
mov
or
fs
push
cmp
jns
sub
cmp
mov
dec
pop
outs
jns
fcomp
or
add
iret
ds
(bad)
add
out
jge
and
and
add
(bad)
lds
aaa
push
std
mov
sti
and
lea
cld
dec
jnp
ins
add
pop
mov
xor
inc
xlat
jbe
sub
cmps
int3
scas
dec
retf
fwait
ja
es
pusha
pop
or
(bad)
cmps
cmc
mov
scas
ds
and
or
xor
mov
adc
dec
fstp
pop
pushw
gs
xchg
jl
repz
inc
and
lahf
rcr
test
mov
repz
data16
or
push
xchg
cmps
shl
loop
cmp
addr16
out
push
(bad)
sub
push
push
lahf
push
aaa
mov
and
adc
and
cmp
es
sbb
mov
mov
jg
xor
adc
or
cmp
stos
mov
pop
mov
ds
adc
mov
xor
jp
xchg
pushf
or
pop
cmc
imul
cmp
adc
mov
loopne
mov
mov
imul
lods
jbe
add
aaa
cwde
out
or
jecxz
and
fucomp
pop
hlt
jnp
sbb
mov
and
sbb
mov
or
loop
rcl
aad
and
sbb
push
pushf
jl
push
lahf
pop
test
jmp
rol
sbb
inc
push
cli
pop
and
jge
inc
sub
or
fisttp
int3
or
xlat
mov
jp
(bad)
jle
mov
sti
xor
jg
push
in
adc
jmp
pop
jbe
stos
ja
xor
mov
mov
dec
shl
cmp
sti
daa
or
dec
or
cmp
jle
mov
not
sbb
shl
test
aad
ss
dec
cmps
shl
jmp
mov
xchg
test
pushf
js
adc
movs
rol
jmp
inc
mov
push
jmp
arpl
dec
loop
sbb
cmc
sahf
dec
retf
xchg
adc
cmc
ins
jmp
add
cmp
les
nop
mov
cs
dec
stos
mov
enter
xchg
dec
push
aas
mov
ret
and
outs
icebp
jae
mov
hlt
dec
in
loop
xchg
out
add
jge
mov
mov
adc
mov
movs
pop
cmp
ret
retf
sub
mov
or
jbe
xor
repz
lods
cmp
scas
jbe
jle
xor
(bad)
aam
xchg
sub
movlps
clc
(bad)
jl
cmp
jns
cs
je
test
repz
or
dec
sub
test
cmp
or
outs
fwait
adc
neg
or
inc
inc
loopne
les
cmp
out
inc
mov
call
aam
dec
mov
add
pop
xchg
sbb
gs
or
push
mov
outs
push
sbb
fnsave
inc
loope
push
fisub
or
movs
icebp
in
std
dec
aaa
adc
int3
dec
mov
mov
cwde
imul
push
test
in
cdq
sub
xor
out
sbb
(bad)
push
hlt
xchg
mov
push
push
or
lods
sbb
in
cmp
dec
pop
in
and
and
leave
sahf
and
pop
or
sti
repz
jg
mov
repnz
xchg
clc
mov
lods
sahf
sbb
dec
add
sti
idiv
loope
xor
push
cld
dec
repz
cmps
(bad)
int3
mov
xchg
ss
into
(bad)
lahf
stos
ins
pop
ret
fst
(bad)
xor
inc
adc
daa
and
fidiv
adc
adc
fdivr
je
(bad)
sti
fcmovne
push
jmp
lock
jnp
fsubrp
dec
ror
fstp
sar
outs
pop
adc
call
xchg
xchg
inc
sbb
mov
inc
scas
jae
aad
xor
push
xchg
push
out
aam
adc
ins
setg
pop
call
dec
das
and
or
jnp
adc
ret
inc
sbb
pop
js
addr16
xor
sub
adc
aas
outs
scas
inc
aad
jg
call
cli
cmp
push
enter
sub
mov
adc
xchg
icebp
std
dec
sbb
or
lock
and
fcmovne
jae
retf
loope
call
xchg
sub
outs
stc
xchg
pusha
ja
test
nop
fndisi(8087
cmps
mov
lods
es
cmp
dec
pushf
int
jns
scas
(bad)
pop
std
jl
pop
pop
rcl
ror
add
cmp
or
std
shl
mov
and
add
jl
jle
dec
ins
mov
dec
stc
inc
inc
test
and
sbb
dec
mov
int
mov
popa
cld
ror
xchg
push
imul
sbb
stos
fnstsw
mov
or
call
rol
mov
iret
test
outs
test
hlt
add
or
xor
sub
test
sbb
or
or
(bad)
repnz
call
mov
mov
cmp
not
jb
rcl
imul
outs
sbb
out
sar
imul
xchg
jmp
repnz
out
(bad)
mov
popf
jb
out
ins
adc
push
push
rol
das
fmulp
shl
sub
sbb
imul
dec
les
jns
fdivr
cmps
mov
das
adc
test
aam
cmps
jae
lahf
xchg
(bad)
(bad)
call
cmp
in
pop
xor
mov
fld
push
scas
outs
(bad)
dec
adc
inc
movs
idiv
push
push
mov
dec
leave
xchg
fistp
jg
push
sti
or
jge
and
cmp
adc
data16
pop
leave
imul
and
cdq
sbb
in
neg
sbb
push
aad
xor
and
sub
mov
call
bound
(bad)
cld
pop
push
in
inc
shl
pop
repz
mov
jl
pop
add
jl
int
cmps
pop
mov
push
ins
out
and
(bad)
ja
bound
pop
stos
out
popa
daa
xchg
inc
(bad)
mov
(bad)
lods
sahf
sbb
lea
cs
mov
(bad)
out
movs
xchg
inc
fadd
xchg
ins
xchg
cmp
jg
mov
mov
les
mov
fninit
mov
push
scas
mov
mov
repnz
les
jnp
enter
mov
sub
ds
mov
ins
addr16
pop
xchg
(bad)
or
cmp
dec
adc
xchg
sahf
daa
pop
das
cmp
or
pop
dec
mov
ret
out
repz
mov
cmp
outs
fst
pop
nop
jnp
enter
ret
mov
jmp
fdivr
scas
pop
inc
fiadd
xchg
call
sbb
cld
movs
jnp
and
add
cmp
cmp
mov
xor
adc
hlt
nop
or
jge
dec
push
adc
cld
mov
or
call
xchg
sub
mov
rol
jmp
sbb
(bad)
or
dec
or
add
sub
pushf
mov
inc
xchg
(bad)
xchg
lods
test
fld
repz
xor
fisub
vmwrite
popf
ins
dec
cmps
xor
pop
in
pop
adc
dec
push
jne
push
cmp
das
inc
push
scas
or
jle
lods
push
pop
jmp
pop
sub
inc
punpckhbw
cvtpi2ps
jg
mov
shr
(bad)
or
xchg
sub
or
jmp
xchg
and
push
sub
jmp
out
mov
xor
jne
sbb
xchg
xchg
xchg
and
mov
cmp
int
fiadd
je
sub
sti
mov
add
push
lea
push
clc
test
call
jno
fidivr
cmp
mov
sub
mov
(bad)
ds
dec
sahf
shl
(bad)
lods
in
mov
mov
mov
popf
sbb
and
jl
push
push
inc
cmp
out
sub
iret
js
sub
mov
xchg
ins
jbe
daa
pop
cmp
add
aad
into
push
jne
pop
out
sub
sbb
add
retf
shl
in
lds
popa
jl
sub
(bad)
mov
cmps
daa
cmc
jmp
or
aaa
or
cdq
lahf
add
out
shl
fist
mov
add
dec
retf
and
lahf
retf
test
mov
pusha
mov
fimul
add
out
sahf
mov
loope
fwait
(bad)
in
mov
jns
daa
out
ss
dec
fadd
sub
mov
std
push
sub
je
mov
lods
or
mov
mov
inc
mov
sbb
jbe
fwait
xor
out
pop
push
dec
cmc
rcl
test
arpl
and
in
jae
lds
mov
xor
ja
enter
sbb
das
out
iret
mov
dec
(bad)
std
or
push
or
int
mov
ins
xlat
push
pop
mov
les
cld
adc
cdq
(bad)
push
shl
in
aam
test
shl
mov
mov
cmp
mov
dec
jmp
xchg
add
stc
dec
loop
pop
xor
mov
pop
mov
sub
leave
loop
int3
pop
mov
out
mov
js
cmp
inc
idiv
repz
mov
mov
or
pop
fxch
cld
jl
sbb
or
lods
stos
pop
pop
movs
int
cli
mov
pop
add
loope
aam
xchg
push
dec
mov
xor
jmp
jl
fimul
cld
inc
ja
jb
(bad)
ror
fistp
sub
mov
outs
mov
or
mov
xchg
mov
cwde
xchg
fisubr
mov
shl
xchg
push
cmp
jb
cmp
mov
retf
ror
call
xchg
cmp
daa
xchg
std
dec
mov
adc
mov
cmp
sbb
jae
add
add
mov
repz
adc
add
les
inc
cmps
push
xor
loope
mov
xchg
sub
ficomp
movs
xlat
pop
pop
mov
out
movs
movs
jae
xchg
fidiv
or
xchg
and
pmaddwd
mov
pushf
jg
push
jmp
mov
inc
lahf
in
inc
daa
stos
je
sbb
xor
stos
ja
mov
push
pop
or
sub
cs
repnz
mov
(bad)
jno
ret
pop
hlt
ja
push
xor
mov
std
jbe
retf
sbb
inc
imul
pop
adc
mov
xchg
retf
jae
fs
inc
lods
push
cmp
(bad)
fdivr
ficom
fcom
repz
inc
imul
neg
aas
cmps
inc
xchg
rcr
test
or
daa
scas
mov
sbb
inc
jb
jns
push
loop
jp
stos
jo
adc
or
adc
sahf
lods
push
sbb
dec
sub
sub
xchg
imul
cdq
sub
(bad)
push
and
ficom
inc
pop
repnz
pop
mov
jno
lea
push
cmp
add
adc
jne
add
push
lock
and
xchg
jmp
(bad)
fisttp
cwde
push
test
or
adc
ss
retf
pop
iret
pop
test
and
loope
sar
mov
add
lods
out
xchg
mov
and
sub
fimul
leave
stc
sbb
retf
stos
jnp
xor
cmc
jno
pushf
pusha
mov
push
and
push
ss
icebp
mov
fnstsw
out
dec
aam
lods
rol
loope
jecxz
outs
les
aam
movs
retf
jecxz
outs
add
pop
mov
pop
xchg
sbb
pop
sqrtps
ins
cmps
fidiv
or
sub
jbe
xor
cmp
dec
out
pop
adc
imul
add
pop
add
ss
push
and
or
mov
and
jg
repz
jg
fmul
jl
lods
sar
fstp
mov
cmc
pop
fmul
test
mov
jne
mov
mov
sub
outs
xchg
outs
loope
inc
mov
(bad)
and
push
jle
mov
adc
ins
mov
imul
call
out
push
and
dec
ja
dec
fcomp
inc
and
and
pop
leave
cdq
loopne
jmp
int3
mov
pop
push
mov
add
hlt
cwde
pushf
xchg
cmps
push
pop
add
adc
dec
std
repz
aam
adc
data16
dec
jp
ss
pop
lea
mov
dec
dec
or
enter
mov
not
int
sbb
in
cs
iret
xchg
xchg
and
lock
add
dec
std
cmp
retf
mov
or
inc
fs
mov
loopne
sahf
cwde
jo
neg
and
retf
add
test
sbb
data16
test
push
push
xchg
pop
adc
adc
lods
fsubr
xchg
inc
std
lods
call
xchg
mov
scas
popa
ret
inc
ficomp
jmp
cmp
std
shl
into
cmp
inc
mov
sbb
(bad)
fiadd
sbb
test
inc
adc
repnz
adc
outs
cmp
dec
push
dec
mov
fist
jl
popf
sahf
adc
into
lds
fisub
daa
retf
jne
jle
mov
retf
jg
call
jge
jge
pop
jno
jno
dec
ret
ins
ror
or
jg
sub
sbb
push
retf
cmp
jo
out
sahf
dec
pop
sbb
add
inc
enter
push
popa
jbe
dec
adc
dec
stos
jb
(bad)
jge
jmp
add
sub
xor
bound
pop
xchg
jecxz
pop
jo
add
xor
inc
and
nop
pop
pusha
jl
add
cmp
jmp
icebp
sti
jmp
mov
loopne
ret
mov
pop
xor
pop
mov
jle
adc
je
sub
sub
fs
mov
dec
inc
mov
cdq
lahf
fnstenv
and
enter
cmp
jb
push
shl
rol
cmp
ret
sbb
inc
rcr
lods
(bad)
lods
icebp
imul
(bad)
or
jp
pushf
add
push
aaa
ret
sbb
fisub
lahf
xchg
ins
enter
inc
fild
xchg
in
and
jle
jmp
xor
push
mov
inc
push
dec
inc
ss
loope
into
mov
imul
sbb
test
into
cmp
add
xor
in
je
test
cmps
cmp
ret
aam
addr16
jo
add
or
sar
push
retf
out
ret
sbb
jl
test
sub
daa
adc
lock
in
fisub
fidiv
into
popf
outs
adc
dec
ds
sub
jo
aad
(bad)
and
push
mov
add
das
push
(bad)
or
push
or
fcom
pusha
into
jl
bound
xchg
movs
adc
hlt
(bad)
loopne
jecxz
pop
enter
or
xchg
mov
push
repz
xchg
cmp
movs
add
push
sbb
mov
adc
repz
adc
push
dec
lods
test
repnz
test
or
pop
cmp
sbb
test
cmp
push
mov
rcl
pop
(bad)
push
inc
fdiv
xlat
lock
lahf
and
or
add
push
push
or
rcl
jbe
sub
cmp
push
imul
repnz
jle
stos
fistp
mov
jl
popa
sub
mov
(bad)
fbstp
xor
std
dec
mov
icebp
dec
inc
cli
call
inc
lock
fiadd
inc
jo
xlat
hlt
retf
test
mov
nop
cld
fwait
xor
jb
sar
add
pop
or
in
js
sub
cmc
or
lods
xchg
clc
mov
dec
and
xchg
fs
or
test
push
xchg
cmp
add
sub
pop
xchg
(bad)
dec
loope
sub
jecxz
xchg
and
pop
cmc
(bad)
mov
and
int3
add
in
mov
sbb
push
cmps
dec
cdq
mov
mov
xor
cmp
jg
pop
add
sbb
jle
fcmovne
mov
jmp
outs
jle
sub
push
and
ss
jecxz
pop
jl
call
dec
or
sub
cwde
xor
sbb
pop
xor
and
xor
hlt
(bad)
adc
sub
adc
pop
ret
sahf
sbb
push
lods
ret
dec
enter
sbb
outs
stos
add
loope
test
jns
sub
popf
dec
or
retf
test
aaa
sub
fmul
outs
sbb
or
inc
ja
pusha
arpl
adc
adc
loope
jle
test
pop
es
rdmsr
cs
pop
or
sub
mov
push
nop
mov
mov
cmp
neg
mov
mov
mov
test
(bad)
mov
or
sbb
ficom
lods
test
pushf
xchg
(bad)
sub
mov
mov
or
enter
aam
retf
mov
mov
add
adc
js
xchg
sahf
xor
dec
mov
pop
aas
add
mov
call
or
adc
push
add
inc
outs
jbe
popw
loopne
push
int
shr
out
fsubr
call
dec
stos
ret
call
int3
pop
inc
neg
ja
mov
push
xchg
mov
xchg
sbb
push
cli
pushf
xor
mov
mov
add
aad
jne
test
call
add
mov
xor
fs
push
cmp
jmp
xor
stos
jne
adc
(bad)
cmc
cmp
stos
push
mov
mov
jno
dec
or
nop
bound
cmp
leave
sub
cmp
mov
mov
xchg
or
(bad)
sbb
int3
popa
inc
ins
xchg
leave
into
(bad)
inc
cmp
adc
pop
xor
lock
xchg
sar
repnz
sbb
inc
cmp
mov
aaa
add
push
xor
nop
ins
xor
(bad)
(bad)
adc
sbb
mov
div
sub
pop
jbe
mov
js
or
(bad)
push
repz
sbb
mov
or
jnp
jecxz
iret
aaa
cmc
push
cli
sub
pop
in
rcl
mov
push
jg
retf
mov
mov
nop
cwde
sbb
aas
and
mov
lea
inc
inc
dec
mov
retf
not
xor
scas
pop
(bad)
int3
mov
xchg
dec
mov
ds
loop
ficom
loopne
jae
adc
cs
(bad)
sbb
test
sar
or
inc
out
rol
and
xchg
aad
xor
and
mov
xor
(bad)
pop
cmps
mov
pop
ja
push
out
push
out
inc
enter
xlat
xor
icebp
pushf
stos
xchg
cli
ds
push
jmp
ins
or
cmps
shr
ror
adc
rcr
out
out
retf
push
cdq
sbb
gs
inc
popa
lea
pop
(bad)
outs
push
pop
push
push
bound
cmp
pop
fwait
sbb
adc
mov
dec
lock
js
repnz
mov
sbb
data16
mov
daa
add
dec
and
lods
cmp
aas
push
lods
and
test
pop
mov
adc
stos
(bad)
sub
lea
je
imul
jp
inc
(bad)
mov
or
push
fdiv
icebp
mov
xor
popf
test
lods
adc
pop
jo
mov
sub
in
sbb
mov
push
dec
cmps
and
in
ins
in
push
div
das
(bad)
dec
fiadd
and
test
inc
in
or
lock
aaa
sub
in
pushf
mov
enter
nop
cmps
shl
movs
mov
dec
pop
fcmovnb
xchg
add
sub
sti
test
movs
shr
test
adc
outs
cld
jle
mov
pop
ret
ror
jnp
xchg
xchg
loopne
mov
cmps
mov
aam
jl
pop
cmp
retf
inc
scas
and
pop
jmp
add
mov
cmp
sbb
jbe
mov
xor
push
xor
mov
ror
clc
mov
xchg
(bad)
cs
loopne
mov
pop
mov
retf
xor
jae
jae
loop
mov
ins
out
adc
aad
rol
inc
add
dec
shl
aaa
test
rcr
and
test
mov
loope
int3
std
dec
jg
ss
in
shl
xor
pop
repz
jl
mov
pop
test
(bad)
xor
fwait
and
adc
pop
sub
rol
dec
pop
mov
dec
sub
inc
iret
inc
jns
loope
adc
dec
scas
mov
mov
out
mov
jp
fistp
mov
fldcw
add
aas
mov
inc
inc
inc
or
mov
jne
loope
pusha
xor
mov
stos
in
sub
into
addr16
cdq
out
push
xchg
imul
or
pop
scas
jns
cld
push
push
out
sbb
scas
(bad)
and
mov
cmps
out
or
pop
rep
mov
movs
xchg
out
mov
outs
push
fwait
mov
and
in
(bad)
ja
(bad)
jnp
sbb
adc
mov
cld
ja
push
ss
mov
push
sub
dec
aam
cmps
add
cli
or
mov
mov
dec
cmps
fsub
inc
push
dec
inc
int
pusha
sahf
pop
pop
into
lods
fidiv
pop
mov
or
mov
pop
mov
mov
sbb
add
cmps
ins
or
cwde
fwait
sbb
fsub
add
jge
pushf
cmp
test
or
nop
sbb
push
jl
add
les
xlat
test
sbb
mov
sti
sbb
in
push
adc
adc
ins
retf
jmp
ja
jge
adc
jne
daa
xchg
xchg
loop
jnp
imul
clts
dec
shl
push
push
inc
outs
fcom
into
fwait
pushf
pop
inc
xor
aam
and
cwde
scas
mov
das
out
cmp
pop
jns
add
mov
or
cmp
cmp
adc
push
adc
ds
daa
mov
inc
mov
mov
push
mov
add
push
mov
push
je
xchg
pop
out
mov
push
cdq
sbb
inc
sub
mov
inc
call
adc
inc
arpl
stos
sti
es
or
sahf
pop
movd
sub
push
push
mov
in
out
push
push
cmp
cmp
jae
xchg
cdq
xchg
inc
inc
es
test
pop
mov
xchg
mov
sar
and
mov
int
out
fisttp
adc
push
test
adc
pop
sbb
lods
in
inc
jnp
mov
ja
pop
(bad)
mul
data16
aas
dec
xor
push
dec
pushf
ds
pop
mov
add
out
sbb
dec
xor
mov
fcomip
pushf
pop
cld
fdivr
popa
lock
jmp
inc
cli
out
dec
mov
fst
adc
mov
retf
and
(bad)
pop
sbb
pop
enter
das
sbb
or
inc
scas
call
or
in
(bad)
push
imul
gs
cmp
add
bound
pop
mov
push
dec
das
dec
int
sub
fs
and
inc
aas
pop
fld
inc
add
xor
jl
pop
mov
push
js
stc
xchg
mov
pushf
lea
movs
and
or
and
sbb
das
sbb
mov
dec
int
pop
add
dec
aaa
test
sbb
addr16
out
sub
test
sub
arpl
dec
cwde
in
movs
push
sub
(bad)
mov
xor
iret
imul
xor
jle
mov
sub
call
cmc
mov
repnz
and
ret
fbstp
js
lods
repz
mov
pop
ror
jmp
rol
push
lock
or
xchg
mov
loop
push
call
xor
addr16
push
mov
push
jecxz
cdq
push
movs
enter
punpckhbw
pop
js
fnsave
ror
sbb
(bad)
(bad)
xchg
adc
call
jg
enter
shl
ins
jmp
repz
jb
cld
add
std
clc
inc
pop
mov
rol
sub
or
jne
push
fcom
and
clc
outs
retf
xchg
dec
(bad)
adc
inc
jg
or
test
jne
push
jmp
add
sahf
movs
(bad)
cmp
into
jg
jo
imul
sbb
inc
sub
imul
adc
int3
and
pop
mov
clc
push
inc
sbb
out
sbb
add
jo
jne
loopne
or
cwde
mov
dec
adc
int3
and
and
ja
jge
jb
sub
ret
aaa
push
dec
or
and
leave
fimul
rol
mov
mov
xchg
pushf
ins
(bad)
sti
inc
jae
jns
add
fst
loop
xchg
mov
es
ins
push
stos
hlt
je
jb
inc
neg
movs
(bad)
(bad)
inc
xchg
xchg
cmp
fucom
add
rcr
or
iret
dec
mov
sbb
cwde
shl
pop
sub
xchg
outs
stos
out
ins
loop
xchg
retf
mov
fisub
ds
test
xchg
popa
mov
out
xchg
xor
cdq
pushf
sub
nop
mov
iret
js
test
sar
mov
hlt
and
hlt
scas
push
or
sub
sbb
pop
mov
pusha
jnp
dec
or
fwait
hlt
sbb
sti
adc
shl
aad
mov
pop
out
sub
jae
inc
xlat
and
les
pop
pop
sti
leave
stos
or
xchg
cmp
jp
mov
pop
add
sbb
push
(bad)
outs
sub
cmp
xor
inc
test
mov
adc
and
push
add
pop
jmp
test
nop
jb
jecxz
jl
push
jae
(bad)
mov
fisub
cmp
push
jno
movs
leave
mov
gs
cmps
mov
jle
rcl
inc
ret
jecxz
sbb
adc
imul
(bad)
cld
cmp
sbb
lea
mov
mov
inc
mov
stc
inc
mov
cmp
inc
cmps
loopne
hlt
stc
add
daa
movs
jnp
jo
xchg
imul
ins
lea
add
pop
iret
fsubr
out
push
inc
repnz
and
add
push
scas
adc
sub
mov
sbb
pop
push
bound
movs
loop
rcr
outs
and
idiv
enter
nop
leave
sub
fs
jge
js
or
add
pop
mov
dec
xlat
jecxz
pushf
jns
dec
add
adc
push
scas
sub
sbb
cmps
in
jne
sahf
lar
sub
jne
cli
pop
jae
addr16
inc
add
cmps
cmps
mov
cmovo
lea
mov
push
mov
(bad)
fdiv
xchg
mov
leave
jge
or
sub
js
call
repz
mov
push
fucomip
jnp
call
out
adc
hlt
sub
gs
call
pop
add
out
out
pop
jge
mov
(bad)
lods
mov
lods
push
sub
and
loope
dec
ins
fmulp
pop
or
jge
sub
xor
pop
xor
stos
stc
cmp
int
mov
sahf
call
retf
std
push
adc
cmp
pop
icebp
adc
dec
dec
sub
dec
mov
and
arpl
jae
xor
call
rcl
retf
cmp
mov
mov
mov
aam
popf
retf
hlt
add
inc
adc
cs
or
test
loopne
(bad)
pop
mov
rcr
mov
adc
dec
mov
push
shl
in
mov
xor
outs
les
mov
mov
aaa
pop
ror
cmps
mov
push
pop
lea
aaa
aad
pop
cmps
(bad)
fwait
and
stos
or
sub
sub
or
xor
shr
ss
or
mov
sbb
out
sahf
outs
push
repz
sbb
and
xchg
jbe
cmp
jecxz
cmp
inc
arpl
xchg
imul
cmp
jno
mov
pop
dec
push
int3
xor
loop
or
inc
push
lahf
adc
aam
dec
mov
lea
inc
mov
sub
jmp
in
dec
or
mov
jge
mov
sbb
adc
pushf
adc
data16
inc
dec
js
mov
retf
push
loop
push
fcmovnbe
mov
cmp
pop
stos
shl
test
jb
(bad)
xor
inc
fdivr
mov
loope
mov
and
je
mov
std
loope
or
ficom
cdq
dec
or
div
jp
jno
cmp
cmp
pop
arpl
cmp
(bad)
stos
fmulp
mov
call
pushf
jae
inc
dec
int3
mov
mov
sbb
sub
inc
retf
stc
das
sbb
test
daa
sub
mov
adc
imul
cwde
scas
xor
mov
jp
xchg
xor
add
in
dec
pop
sub
int3
shr
(bad)
dec
dec
jle
cmps
inc
mov
shl
push
xor
jecxz
and
(bad)
and
mov
mov
test
mov
scas
or
out
es
pop
mov
xchg
push
and
adc
dec
or
iret
ja
lods
loop
les
call
dec
loope
call
cmp
xor
lock
bound
mov
mov
sbb
add
inc
out
mov
xchg
xchg
out
int
jbe
mov
mov
pop
jo
fnstcw
add
lock
sbb
jo
xor
test
sub
cmp
add
sub
pop
xchg
xchg
daa
lds
adc
imul
cmp
dec
iret
and
mov
out
pop
daa
cmps
mov
or
and
sahf
(bad)
(bad)
rol
push
loopne
(bad)
cs
leave
in
(bad)
and
mov
push
lds
pop
cmp
cmc
outs
sbb
or
call
pop
loop
stos
sub
sub
jmpw
imul
retf
test
jae
sbb
cmp
loope
pop
das
(bad)
and
imul
jle
(bad)
dec
call
shl
into
cwde
les
adc
push
stos
sbb
adc
cmp
es
sti
dec
dec
push
retf
loop
test
repz
pop
fsubrp
or
movs
movs
ja
adc
out
movs
xor
mov
je
inc
aas
push
gs
fist
sub
das
cdq
in
dec
mov
addr16
sahf
cmps
movs
movs
dec
sbb
stos
pop
mov
xchg
mov
aas
cmps
xor
or
mov
pmaxsw
or
lods
add
mov
and
call
cmps
sbb
mov
jns
je
arpl
ss
adc
push
fwait
scas
sahf
and
cdq
loop
sub
jge
push
mov
out
jns
inc
mov
bound
(bad)
int
stos
daa
xchg
rcr
sar
inc
sar
jae
ja
mov
cmc
jns
imul
or
ds
jl
loope
xor
inc
pop
mov
inc
mov
outs
std
ss
scas
std
das
push
(bad)
js
pop
xor
mov
sbb
adc
outs
push
mov
ret
adc
adc
or
in
lahf
(bad)
push
es
fisttp
cmp
sbb
sub
sub
ret
jmp
or
xor
test
fcmovne
or
pop
loop
int3
sbb
mov
sub
dec
sbb
leave
in
lea
xlat
jmp
and
push
add
loope
in
add
imul
mov
aaa
aas
push
fst
add
mov
adc
test
inc
shl
ret
jb
mov
jp
fcom
mov
xchg
cli
cmps
and
or
ror
popa
call
scas
dec
xlat
movs
xchg
cmp
lahf
call
fld
retf
gs
neg
push
and
pop
icebp
pop
mov
jg
push
lods
add
test
ins
xor
xor
std
mov
mov
aaa
retf
and
mov
jo
mov
ins
(bad)
scas
(bad)
fwait
mov
inc
repnz
cmp
repnz
mov
repnz
bnd
dec
add
and
push
xor
adc
sbb
iret
std
mov
sub
retf
pop
mov
mov
addr16
ror
cmps
add
mov
jmp
xchg
test
sub
mov
inc
fdivr
jae
push
out
jle
mov
daa
retf
pushf
pop
xor
ret
adc
dec
adc
push
retf
into
adc
(bad)
js
stos
dec
mov
pop
rol
inc
pop
fcmovnbe
shr
xor
outs
xor
dec
sti
dec
pop
cmp
adc
int3
sbb
sar
mov
gs
mov
push
es
enter
leave
dec
pop
sub
pop
add
(bad)
adc
push
fwait
shr
jge
sbb
fcom
fxch
or
(bad)
xchg
in
or
pop
(bad)
clc
jb
mov
pop
(bad)
cld
cmps
pop
cwde
leave
test
cli
dec
xor
imul
outs
and
(bad)
sbb
mov
lods
(bad)
mov
shr
loopne
nop
clc
jmp
rcl
jp
test
mov
shr
or
dec
ds
cmps
sub
mov
adc
into
ds
mov
js
jns
(bad)
push
(bad)
pop
jb
sub
outs
cs
mov
add
call
lahf
lock
adc
imul
inc
leave
inc
pop
leave
sub
outs
pop
jmp
imul
mov
pop
xorps
inc
ins
xchg
or
inc
ins
shr
daa
add
mov
scas
xchg
push
add
push
lahf
cmc
test
mov
call
daa
mov
test
ret
rcl
mov
push
dec
and
mov
or
xchg
mov
sub
std
test
adc
scas
fmul
ss
mov
test
nop
jge
iret
in
xchg
leave
mov
dec
loope
or
inc
xchg
movs
or
and
jle
xchg
pop
mov
cmp
xchg
cmps
jbe
clc
and
sbb
or
pop
xor
dec
ins
jo
shl
mov
or
dec
dec
pop
adc
repnz
loopne
clc
in
xor
adc
pop
xor
out
push
outs
imul
je
sti
rcl
test
cmp
xchg
js
and
jmp
dec
sbb
(bad)
xchg
inc
gs
(bad)
or
movs
bound
je
fmul
iret
jp
fild
std
and
test
push
fisub
rcl
jg
jmp
adc
or
pop
mov
sbb
xchg
les
loope
mov
rcr
sub
das
adc
or
inc
xchg
cmp
fstp
or
dec
sub
push
shl
push
(bad)
jb
in
or
(bad)
fdivrp
adc
jns
fmul
push
push
mov
scas
movs
adc
aas
out
movs
ror
mov
data16
jns
int3
repnz
xchg
cmp
push
int3
hlt
mov
or
ret
sub
inc
push
bound
jnp
fidiv
frstor
sar
pop
xor
scas
jbe
and
mov
movs
outs
xchg
sar
(bad)
xchg
push
test
imul
in
js
xchg
movs
sub
cwde
xchg
push
ss
lahf
pop
icebp
cwde
xor
pop
mov
test
ret
test
sub
mov
outs
mov
xchg
jecxz
outs
(bad)
sar
pop
bound
call
push
fild
dec
mov
push
mov
jns
pop
imul
repz
in
mov
pusha
push
lahf
dec
daa
lahf
loopne
test
mov
shr
jg
push
call
mov
jle
fnstcw
sub
add
add
jl
jle
fistp
push
mov
fwait
mov
mov
cdq
xchg
jle
in
les
bound
sbb
add
push
mov
push
push
repnz
sbb
cmp
sbb
iret
pop
clc
sbb
sub
cdq
jecxz
ins
xchg
push
js
fstp
ds
std
sub
jbe
push
xor
clc
adc
(bad)
sbb
rcr
xchg
jge
fabs
add
xor
mov
push
repz
movs
or
xchg
jmp
sbb
in
outs
enter
and
push
mov
cmp
mov
iret
fcmovbe
sub
rcr
clc
frstor
lods
pushf
aaa
pop
lock
loop
adc
stos
retf
scas
sbb
pop
mov
add
faddp
mov
rcr
inc
pop
dec
pop
push
pop
jno
and
xor
fnstenv
pop
aaa
popf
cmp
fwait
ret
out
push
sub
scas
push
sbb
inc
push
jge
outs
dec
in
add
xlat
(bad)
mov
jmp
mov
popf
imul
and
xor
dec
lods
fldcw
fist
pusha
xchg
fcmovbe
ins
inc
outs
addr16
out
add
push
stc
stc
loope
xchg
mov
sub
xor
sbb
enter
xlat
adc
push
xor
or
sub
xchg
jb
mov
xor
test
test
xor
sbb
push
inc
mov
imul
in
ret
add
icebp
sbb
jno
sub
outs
push
std
xor
dec
mov
pushf
add
aaa
dec
dec
push
jl
in
mov
popw
repnz
mov
mov
outs
aas
push
cld
mov
cmp
jo
outs
stc
cmps
(bad)
ficom
movs
retf
jae
(bad)
movs
mov
fcmovbe
mov
xchg
daa
xor
pop
hlt
push
stos
or
fincstp
mov
in
pop
fidivr
pop
outs
stos
inc
cmp
mov
inc
xor
lea
(bad)
dec
add
or
push
or
pop
sub
jbe
sub
mov
sub
xchg
les
aad
fidivr
(bad)
mov
jo
jo
sbb
mov
fisttp
fnstenv
scas
mov
inc
sahf
mov
icebp
and
or
mov
jns
dec
or
popw
(bad)
popf
inc
dec
mov
and
pop
test
test
ins
pop
xchg
mov
inc
mov
mov
ins
rcr
hlt
cwde
into
dec
cmc
dec
xor
ds
push
aaa
(bad)
shl
rol
adc
xchg
push
pop
(bad)
jmp
or
retf
jo
push
mov
data16
cwde
xchg
jne
mov
scas
mov
aad
sub
mov
bound
adc
and
(bad)
leave
outs
adc
shr
std
rcl
int3
inc
jno
js
std
fisubr
into
or
gs
hlt
xor
aam
inc
sbb
jne
outs
repz
fstp
jmp
mov
mov
xchg
mov
in
mov
nop
fs
adc
repz
cmp
dec
mov
daa
add
mov
mov
enter
dec
adc
es
pop
popa
pop
lock
sbb
mov
jge
lods
inc
scas
or
imul
jb
imul
jge
push
ret
(bad)
inc
mov
or
int3
and
frstor
js
xor
aam
jno
xor
ins
push
retf
ror
sbb
sub
sub
jecxz
popf
mov
call
pusha
test
push
jne
leave
cmp
call
clc
cs
cmp
cmp
jg
pop
pusha
push
movs
leave
sub
test
outs
jl
ror
dec
outs
adc
mov
pop
adc
out
jae
mov
inc
mov
daa
aaa
jb
pusha
adc
sbb
push
sbb
sbb
out
adc
clc
adc
pop
dec
push
mov
push
dec
movs
mov
jecxz
push
(bad)
or
jae
dec
in
ins
pop
shl
(bad)
push
(bad)
(bad)
jge
pushf
xor
rcl
push
cmp
jns
(bad)
fidivr
daa
fmul
cs
or
sti
sub
or
cmp
sbb
cmp
js
nop
sbb
adc
ja
lock
and
or
(bad)
out
movs
scas
or
scas
mov
pop
sub
ins
cmp
pop
pop
mov
ror
out
cmp
enter
mov
pusha
mov
mov
loop
stos
lock
inc
jae
stos
push
enter
or
jo
xchg
aaa
jno
inc
clc
dec
jno
bswap
push
dec
xor
cdq
sub
out
xor
cmp
outs
push
and
mov
adc
jne
loopne
arpl
pop
and
mov
jecxz
or
cmp
inc
aam
retf
or
movs
dec
das
xchg
xor
add
sbb
add
bound
add
cmc
arpl
js
ja
inc
mov
xchg
retf
mov
outs
or
sbb
hlt
push
popa
int3
push
add
jl
mov
pop
shl
cli
in
loopne
jmp
sahf
pop
ins
fwait
adc
inc
loopne
inc
and
aas
xchg
pushfw
ja
sub
int
jno
inc
cmp
test
call
dec
push
leave
or
pop
arpl
fild
jno
xchg
dec
sub
mov
jbe
adc
mov
mov
push
shl
repnz
ds
(bad)
(bad)
inc
test
fs
inc
jae
cli
jge
jbe
mov
pop
fcmovnbe
(bad)
aaa
retf
rcr
das
xor
add
dec
test
mov
aas
jmp
lods
push
cmps
lahf
mov
cwde
inc
adc
hlt
inc
ss
cmc
adc
fsubr
adc
sub
push
fwait
div
xor
sbb
aas
gs
adc
push
retf
adc
loop
dec
push
cld
movs
adc
data16
out
das
pop
sti
hlt
sub
sub
push
xlat
pop
cmp
sub
(bad)
gs
add
jbe
lods
imul
jmp
sub
xlat
mov
and
cmp
mov
test
xchg
je
and
daa
scas
push
sub
hlt
adc
pushf
mov
mov
adc
and
ins
dec
cmp
pop
or
mov
das
push
mov
jp
mov
leave
and
inc
fdivr
pop
sbb
ins
sub
imul
icebp
cmps
jg
mov
lea
dec
mov
fcmovnu
push
cmp
xchg
dec
stos
(bad)
push
dec
pop
scas
push
pop
xchg
mov
xor
add
aas
(bad)
in
popa
(bad)
(bad)
loop
fisttp
sahf
mov
or
stos
add
add
pop
mov
loopne
ds
add
mov
mov
jo
xor
xchg
sar
fucomi
stos
push
add
bound
les
sbb
xor
mov
enter
imul
(bad)
pusha
add
pop
js
mov
jmp
and
sete
ja
popa
scas
fs
xchg
dec
sub
fucom
scas
mov
push
call
add
fcomp
push
lods
pop
ret
jl
xor
fcom
push
mov
fimul
fdiv
(bad)
shl
and
mov
pop
retf
pop
test
and
mov
popf
mov
jno
rcr
cmc
movs
call
cmps
sbb
(bad)
pop
clc
(bad)
xor
sub
fs
dec
adc
inc
pop
arpl
mov
pop
dec
push
jmp
or
mov
lods
hlt
popf
inc
test
rcr
mov
shl
inc
xor
call
pop
jb
push
mov
das
mov
dec
cmps
mov
cld
adc
add
inc
inc
icebp
in
hlt
cmp
add
ja
aas
movs
mov
jmp
sbb
mov
idiv
cmps
mov
pusha
outs
in
ins
and
fs
pop
enter
lock
(bad)
into
icebp
sub
add
xchg
(bad)
xchg
rcr
loope
and
add
es
dec
std
push
pop
fcmovb
jno
push
div
sbb
ja
mov
dec
(bad)
retf
and
div
ret
mov
ja
cmp
rcr
inc
or
push
inc
adc
xor
cmc
push
cmps
mov
stc
addr16
push
jecxz
jg
push
outs
sub
js
icebp
ins
xchg
jae
or
mov
popf
ret
or
out
pop
fnstsw
ds
dec
add
cdq
rcl
(bad)
cmps
test
jmp
push
add
out
sahf
or
(bad)
cmp
test
sti
mov
iret
(bad)
repnz
push
not
and
(bad)
in
retf
add
(bad)
sub
xchg
mov
sahf
pushf
(bad)
test
call
add
cmps
pop
push
jge
add
xchg
cli
and
adc
fwait
popa
in
lods
fdiv
call
and
pop
dec
xchg
sahf
loop
push
push
test
xor
cwde
bound
or
inc
test
sbb
dec
retf
into
dec
je
fiadd
cdq
fidivr
push
iret
dec
sar
jle
xchg
add
loopne
cmp
enter
dec
pop
dec
push
icebp
mov
pop
and
mov
push
adc
mov
add
subps
int3
cmp
xchg
mov
add
or
mov
or
imul
add
xor
and
jne
movs
or
jp
pop
imul
xor
ss
and
xor
ja
sar
fwait
movs
adc
inc
add
sbb
fist
push
mov
fisubr
jns
leave
add
pop
xchg
or
ficom
xchg
add
mov
data16
mov
inc
lock
xchg
sti
or
add
push
or
(bad)
mov
add
adc
add
(bad)
ror
loopne
inc
daa
and
dec
retf
adc
xchg
xlat
fdiv
std
jle
outs
das
hlt
push
jl
add
in
sbb
lahf
adc
stc
push
and
ret
ret
loop
into
mov
sbb
inc
(bad)
lahf
cmp
sbb
aas
jo
dec
xchg
outs
jp
add
in
sar
daa
shl
ret
and
xchg
jp
jmp
inc
clc
mov
xchg
cld
sbb
sbb
imul
add
xchg
xchg
dec
movs
ret
retf
scas
sti
jns
(bad)
int
out
call
push
sbb
sar
cld
xchg
or
jne
sbb
icebp
mov
ret
jns
outs
sahf
sub
das
cmp
mov
dec
sbb
cld
lods
jecxz
mov
sub
pop
out
sbb
cmp
out
aad
inc
mov
cmp
into
or
stos
push
iret
jns
mov
cld
(bad)
mov
out
loope
push
fcmovnu
hlt
pop
cmp
and
and
outs
div
cmp
fiadd
mov
nop
(bad)
sub
cwde
lahf
outs
adc
lods
adc
push
and
pushf
mov
in
or
popf
test
push
xor
or
pop
push
fdiv
pop
out
or
cmc
(bad)
pop
pusha
pop
loop
adc
mov
movs
iret
ins
bound
mov
cli
mov
and
mov
cmp
inc
cld
stos
ins
pop
scas
mov
cmp
loopne
inc
and
mov
divps
in
cli
xor
fsubr
mov
push
xchg
add
inc
je
and
pop
int
push
in
mov
mov
int3
sub
shl
pusha
mov
cdq
int3
jecxz
jnp
mov
jns
test
adc
and
or
pop
popf
dec
lods
push
(bad)
pop
inc
jno
mov
fst
inc
popf
addr16
dec
ror
mov
repnz
(bad)
and
je
jmp
ret
int
jne
pop
xor
jns
in
xlat
cmp
cs
push
add
scas
iret
and
fsub
or
fisttp
loope
bound
(bad)
ds
mov
push
ja
shl
ret
sar
iret
in
sub
cmp
ficom
ficom
inc
(bad)
jns
jne
add
cmp
sbb
cmps
mov
stc
xchg
(bad)
xchg
ins
in
mov
shl
fs
idiv
ret
mov
loope
div
popa
mov
jp
add
faddp
stos
or
ins
jge
cli
jg
shl
lock
sub
mov
sub
push
mov
aas
sar
jnp
cmp
inc
scas
iret
cmp
scas
rcl
mov
adc
call
dec
in
lods
js
or
pop
cmp
xlat
lahf
jne
pop
in
retf
dec
jns
popa
fmul
(bad)
sub
add
fsubr
adc
or
ja
jmp
sar
js
jl
push
in
sub
stc
div
xchg
and
ins
xchg
add
sbb
test
or
xchg
aas
rol
xchg
pop
loope
add
(bad)
in
das
dec
into
in
call
enter
loop
sar
leavew
adc
outs
adc
jmp
clc
ret
jno
and
sbb
dec
push
push
retf
cmp
mov
mov
pop
data16
mov
xor
fwait
push
mov
and
iret
cmp
jge
aaa
and
push
ins
inc
retf
pop
pop
fadd
sbb
mov
pop
push
jecxz
inc
mov
arpl
mov
adc
loopne
shl
push
or
push
add
ss
bound
(bad)
fsubr
adc
popf
jb
shr
mov
dec
mov
cmps
push
repnz
rol
mov
mov
aad
mov
pop
xchg
fidiv
test
repz
jne
mov
ficomp
jp
cmp
or
ins
xchg
pop
inc
pop
fstp
pop
mov
push
test
lock
out
add
daa
and
repz
pop
(bad)
sbb
scas
mov
mov
imul
cmp
jle
mov
fild
cmp
ret
or
pop
test
sub
test
mov
xor
mov
sar
cli
or
imul
cdq
jecxz
xor
pop
scas
loope
add
jmp
(bad)
sar
jle
add
sbb
(bad)
jne
and
ret
sub
jno
scas
imul
add
adc
scas
sub
mov
(bad)
mov
mov
das
das
aad
sbb
sub
aas
shl
loope
movs
sub
xchg
jne
cwde
cwde
cld
inc
fdiv
lods
pop
jae
pop
arpl
ins
mov
xor
push
dec
mov
(bad)
dec
call
mov
mov
lods
mov
and
loope
xchg
scas
mov
pop
pop
dec
sar
or
inc
inc
aaa
icebp
ret
dec
push
das
xor
push
dec
mul
pop
mov
mov
movs
cwde
jmp
xor
dec
or
mov
jge
inc
mov
mov
xor
out
cwde
and
jo
je
pop
mov
pushf
aaa
jge
repnz
les
(bad)
packuswb
inc
ss
add
jns
cmp
movs
lods
push
dec
cmc
out
add
jmp
icebp
(bad)
aas
aaa
add
dec
rcl
mov
test
or
dec
sbb
xchg
fidivr
sub
loope
call
std
sbb
mov
(bad)
aaa
lods
int
cmc
cmp
sub
dec
outs
or
shl
clc
pop
jl
sub
sub
push
dec
fisttp
das
into
es
test
fwait
xor
clc
dec
jp
jae
(bad)
imul
push
mov
fsub
xor
dec
fstp
cmp
push
xchg
xor
(bad)
imul
cld
cdq
jl
call
ss
cmp
(bad)
(bad)
cmp
loop
gs
lahf
xchg
sbb
out
mov
mov
sbb
mov
or
sub
mov
or
ins
push
lods
pop
inc
movs
xor
push
xchg
inc
movs
data16
mov
popf
push
xchg
xchg
xor
adc
xchg
dec
inc
je
test
jle
ds
cli
aas
add
xchg
in
and
ss
push
push
sbb
mov
loop
add
xchg
mov
cmps
cmc
mov
pusha
imul
xchg
cmp
imul
xor
mov
ja
xchg
or
and
sub
inc
aaa
xchg
and
adc
mov
push
and
push
fucomp
repz
xchg
sahf
xabort
mov
inc
stos
popa
shl
scas
repnz
xchg
scas
gs
fiadd
fldenv
sub
jl
inc
mov
cmp
jge
push
inc
stos
fld
adc
xchg
sbb
add
adc
pop
sbb
popf
das
int3
dec
push
mov
sub
cli
push
test
or
mov
jae
les
(bad)
xor
retf
push
jecxz
pop
lods
call
and
mov
ficom
mov
inc
xor
xchg
jecxz
jne
fild
mov
cmp
sbb
fnsave
xor
adc
jmp
std
mov
and
movs
es
sbb
xchg
and
add
dec
xchg
and
stc
and
pusha
push
mov
mov
repnz
call
or
xor
inc
dec
aad
dec
aaa
dec
ret
push
inc
pop
sahf
jmp
jle
psrlq
test
jns
mov
scas
out
fisubr
cmp
xchg
mov
adc
imul
push
aam
pop
xor
add
jo
lea
(bad)
xlat
jnp
push
fs
cmp
test
push
sub
and
push
add
ror
rol
push
pop
lea
xchg
or
xchg
aam
xor
stos
jmp
sub
adc
mov
sbb
or
and
xchg
scas
add
mov
leave
xchg
in
push
int
jb
repz
push
stos
(bad)
call
fstp
xchg
loope
pop
test
mov
sar
or
mov
mov
cmps
lahf
cmc
popf
fs
mov
adc
dec
add
je
sub
pop
out
int3
ins
dec
pop
add
mov
cwde
fstp
jno
mov
xchg
push
je
pop
push
xlat
xchg
cmp
dec
mov
or
pop
aam
fwait
out
gs
xor
xlat
cmp
cmp
arpl
jne
xchg
inc
arpl
hlt
jp
sub
xchg
fwait
int3
xor
inc
push
das
cvtpi2ps
push
aaa
pop
and
out
test
xor
jae
dec
into
cmp
scas
popa
push
add
add
sub
pop
retf
aaa
ret
sbb
cmp
pop
not
pushf
stc
and
mov
in
imul
call
sbb
sbb
mov
dec
mov
jae
jl
or
lock
xor
rcl
jno
inc
mov
mov
pop
jmp
pushf
stos
push
scas
scas
test
lds
mov
in
idiv
pop
fist
cs
mov
out
xchg
popf
loope
mov
clc
aas
int
xlat
pushf
jne
in
xchg
sbb
scas
xchg
cmp
retf
mov
push
sti
jns
mov
ins
dec
sahf
fld
loopne
or
cmp
mov
cmp
mov
loope
jle
jle
xchg
not
das
xchg
add
adc
(bad)
pop
push
adc
xor
mov
adc
sub
cmp
jp
xor
nop
out
and
sub
(bad)
adc
test
xor
mov
sahf
call
adc
mov
out
xchg
(bad)
cmps
(bad)
ror
jo
cmp
push
cmp
js
xor
xor
leave
xchg
dec
cmp
add
sub
add
pop
popa
fnsave
push
ret
pop
xlat
mov
dec
cmp
jl
adc
cmp
(bad)
mov
scas
out
ds
mov
hlt
sub
sub
xor
mov
cmp
adc
xor
dec
lds
(bad)
shl
mov
jo
jge
push
mov
lods
sbb
mov
push
adc
adc
imul
push
jne
or
cmp
sbb
popf
shr
rcr
ss
aad
test
sub
ds
mov
mov
fisubr
fdiv
cmp
dec
shl
les
movs
sub
jg
lock
pop
dec
ss
mov
mov
pop
test
and
push
add
pop
aas
adc
jmp
retf
fimul
ja
scas
int3
movs
aam
dec
cmps
fidivr
aaa
inc
out
jnp
jbe
idiv
lock
(bad)
xchg
mov
lahf
popa
fld
in
daa
test
mov
jge
clc
xor
jbe
adc
push
jo
or
dec
fidiv
in
in
cs
lock
inc
xor
sub
cld
push
mov
jns
and
shl
stos
mov
sbb
loop
clc
push
jnp
xchg
pop
pop
inc
jbe
out
mov
js
dec
and
mov
lods
dec
jp
lahf
pop
ins
loopne
and
imul
aad
sbb
mov
lock
dec
or
arpl
jecxz
sahf
and
inc
data16
xchg
mov
icebp
mov
adc
rcr
cli
daa
fiadd
repnz
mov
js
mov
pushf
test
loop
shl
arpl
sbb
mov
pop
xchg
mov
int3
add
jns
xchg
lahf
(bad)
rcl
add
mov
pop
cmc
pop
cmc
mov
push
jno
jne
pop
cwde
inc
or
and
cmp
xchg
stos
enter
and
lods
div
int3
inc
rcr
in
push
sar
out
shr
int
xor
outs
mov
jecxz
lea
shl
inc
std
or
das
in
cmp
mov
sbb
jmp
push
leave
push
push
nop
xchg
and
mov
or
dec
xchg
lahf
rol
add
dec
jmp
xchg
push
mov
lods
cld
shl
fs
push
xchg
cdq
aas
mov
xor
lods
nop
dec
add
mov
aas
xor
(bad)
iret
adc
add
fldcw
ins
arpl
xchg
repz
loop
push
sbb
sbb
js
repz
jmp
test
or
xor
pop
jae
movs
std
js
jp
sub
inc
sbb
mov
mov
pop
mov
lea
pop
adc
daa
cmp
and
pop
mov
pop
and
aad
cdq
xor
push
lock
mov
ins
or
call
aaa
ins
loopne
loop
mov
lods
sbb
xor
shl
in
inc
aaa
adc
fdiv
mov
stc
imul
fild
ret
movs
push
dec
jns
stos
(bad)
cmps
cmp
mov
pop
pop
sub
stos
ins
int3
adc
push
fs
push
loop
sub
adc
cmp
out
(bad)
mov
mov
movs
shl
jp
adc
mov
push
cld
xor
xchg
or
pop
cs
jle
mov
iret
test
inc
inc
adc
pusha
push
in
pop
mov
mov
(bad)
jge
icebp
mov
push
push
and
movs
add
mov
mov
push
movs
cmp
mov
cmp
daa
cmps
xlat
(bad)
in
push
mov
cld
inc
jg
push
cmp
imul
pushf
shr
repnz
ins
popf
retf
iret
push
and
xchg
jne
add
lea
mov
iret
call
pmullw
inc
mov
and
fcom
push
cmp
es
mov
(bad)
call
push
iret
jg
shl
mov
test
outs
xchg
data16
pop
sub
mov
cmp
pop
jle
mov
jnp
in
ins
(bad)
(bad)
jae
xchg
in
sub
jbe
imul
iret
and
fisttp
dec
mov
jmp
cmp
fild
je
jl
add
xchg
jmp
mov
ins
xchg
jns
retf
out
dec
push
scas
out
out
mov
mov
sti
cs
dec
jmp
dec
xor
sbb
sub
xor
push
pushf
push
loope
mov
cdq
dec
push
(bad)
icebp
repnz
mov
add
xor
fmul
out
out
retf
push
popf
bound
clc
fld
xchg
or
sub
mov
ror
pop
out
add
lods
xor
aas
cmps
sahf
cmp
inc
or
int3
sahf
test
sub
stos
stc
mov
adc
or
inc
add
cmp
cdq
push
movs
mov
int
cwde
mov
inc
test
xor
ficomp
cmp
cmps
inc
or
jb
pusha
jmp
sbb
inc
ja
sbb
out
ins
push
fimul
sbb
push
or
out
fisttp
push
retf
push
jno
and
mov
int3
enter
call
scas
jae
dec
dec
lds
xor
add
int
pop
add
mov
mov
push
jl
loopne
movs
mov
adc
test
xchg
xor
out
add
test
sub
sbb
sub
(bad)
cmp
out
stc
(bad)
dec
pop
aaa
inc
sub
(bad)
into
mov
mov
adc
fs
test
stos
lea
data16
push
jp
in
packssdw
jbe
xor
pop
fimul
cdq
xchg
es
jbe
sbb
pop
dec
jecxz
inc
(bad)
jge
loopne
mov
ss
test
mov
out
icebp
adc
sub
xor
mov
or
pop
out
jmp
push
fwait
fs
enter
iret
mov
xor
dec
cli
mov
mov
aad
pop
inc
in
pop
mov
test
and
loope
push
call
test
pop
and
call
dec
xchg
inc
mov
fistp
lock
xchg
aad
fcomip
cs
ret
push
adc
push
inc
(bad)
shr
inc
dec
stos
enter
sbb
xor
les
xor
gs
pop
daa
cmp
out
cwde
jle
nop
sub
mov
mov
push
mov
lds
or
iret
ja
ss
push
mov
xchg
dec
sahf
pop
and
cmps
pop
cmp
les
(bad)
stc
loope
jne
cmps
aaa
scas
movs
(bad)
(bad)
fild
test
xchg
aad
mov
add
add
xor
popf
mov
in
mul
mov
mov
xchg
in
nop
sub
inc
cmps
into
push
jecxz
cli
lea
addr16
pushf
or
idiv
xchg
jnp
cs
inc
das
stc
sbb
mov
call
or
sbb
push
loope
adc
enter
fidiv
inc
addr16
sbb
xlat
mov
mov
sbb
pop
std
ss
or
sbb
in
sub
int3
jle
arpl
dec
cmp
nop
jl
push
pop
fadd
js
es
cmps
and
in
pusha
cli
popa
sbb
repnz
add
rcr
jnp
xchg
sar
mov
pop
jge
jae
outs
stos
aam
push
hlt
push
mov
sti
inc
inc
icebp
inc
(bad)
mov
hlt
xchg
jmp
ret
fsincos
add
sbb
cwde
mov
test
fmul
pop
jne
jno
add
(bad)
leave
or
push
aad
jnp
inc
mov
in
mov
and
dec
xor
imul
xchg
add
es
sbb
mov
push
idiv
addr16
outs
lock
jge
into
imul
test
or
cmp
jo
rol
cs
and
jno
dec
inc
sbb
cwde
sub
imul
pop
push
ss
mov
xchg
xor
sub
mov
popa
(bad)
fcom
adc
adc
out
in
int3
mov
mov
add
shl
xor
test
or
pop
cld
test
mov
retf
pop
or
les
cwde
or
inc
xchg
lods
(bad)
xor
mov
add
icebp
push
push
jnp
cs
add
neg
mov
loopne
cmp
sbb
lahf
mov
push
mov
or
mov
adc
test
aas
or
jmp
and
je
pushf
sbb
(bad)
dec
cmp
cmps
int3
fld
mov
pop
xchg
xchg
fcomp
adc
aam
jmp
leave
xlat
rol
leave
sub
add
retf
pop
xor
push
fwait
stc
loop
ret
xchg
jb
ss
jbe
push
mov
push
jp
addr16
stos
test
cs
shufps
cmps
stos
in
or
and
pop
retf
psraw
(bad)
retf
(bad)
sbb
mov
movs
cmp
(bad)
xor
cld
lods
das
and
gs
aas
imul
ja
into
xor
or
ins
mov
rcr
jle
lods
sub
sbb
or
ds
push
pushf
adc
jl
mov
sbb
lock
call
shl
jmp
jg
rcl
dec
std
int3
xor
jmp
mov
ret
fcmovu
shr
inc
stos
test
out
pop
xor
out
cld
adc
pop
mov
and
pop
cwde
and
mov
in
add
xchg
call
or
push
push
push
sub
xor
js
test
and
aaa
and
vpmadcsswd
ret
adc
test
clc
cmps
sub
test
add
jb
bound
or
stos
xchg
outs
into
idiv
test
mov
stos
imul
(bad)
sub
enter
jne
jecxz
add
lds
mov
loop
pop
stos
cmps
adc
fstp
js
sbb
and
test
add
out
mov
aaa
cmp
das
xchg
xchg
jns
sbb
sub
xor
xchg
jp
(bad)
in
jb
dec
jne
loop
xchg
pop
loope
cli
dec
jae
lock
add
test
std
mov
xor
addr16
xor
adc
ret
leave
push
cdq
aas
adc
inc
xchg
xor
mov
jno
mov
loop
arpl
js
cwde
into
or
fucomp
jg
cmp
jno
repnz
cmp
test
test
inc
or
pop
fild
jno
inc
fisub
inc
xor
scas
test
mov
ja
push
push
sub
cmp
popa
outs
iret
(bad)
mov
cmc
jp
jnp
mov
xor
sahf
cmp
jg
sub
test
mov
int
jg
and
scas
dec
xchg
iret
xchg
retf
dec
or
cmp
push
fnstsw
retf
out
mov
fldcw
hlt
(bad)
and
push
jmp
call
lds
sub
sub
lock
(bad)
push
fwait
mov
rcl
jne
add
dec
inc
inc
ret
icebp
not
inc
xchg
sub
and
add
inc
lds
je
lahf
and
sar
xchg
fcom
xchg
movs
bndstx
jb
pop
aas
jmp
inc
leave
outs
sbb
sbb
inc
sub
fild
sahf
and
push
mov
outs
inc
fnstsw
mov
stc
test
idiv
out
xchg
int
pushf
and
mov
mov
xor
or
or
xor
into
mov
not
ins
jo
mov
or
mov
mov
sub
sbb
pop
push
ds
das
jle
fdivr
in
push
scas
out
aaa
fstp
jmp
out
inc
and
sub
push
mov
pop
cmps
xor
inc
or
jle
pop
test
imul
(bad)
call
fld
in
dec
add
and
mov
sti
outs
(bad)
pop
jo
adc
rol
stc
jno
lods
and
dec
cmp
sbb
cmp
mov
mov
jne
add
dec
hlt
jg
adc
mov
jns
push
pop
cmp
(bad)
pop
ja
repz
outs
pop
cmps
push
adc
cmps
jb
push
jecxz
out
pop
xchg
inc
mov
rcr
shl
pop
cmp
arpl
push
dec
jp
sbb
inc
mov
and
jecxz
mov
mov
or
out
sahf
call
fisubr
fwait
cmps
add
movs
cli
or
nop
jge
xor
mov
out
cwde
idiv
call
pop
add
mov
fstp
sub
and
clc
jmp
outs
fstp
push
xchg
(bad)
push
mov
aam
mov
sbb
push
popa
inc
in
sub
es
xchg
scas
loopne
inc
cmp
mov
fidivr
(bad)
push
jns
call
xchg
sbb
sbb
fwait
out
jne
out
sbb
cmp
je
(bad)
mov
arpl
dec
mov
adc
mov
add
or
arpl
sar
xor
sub
inc
push
inc
adc
(bad)
push
add
scas
mov
mov
cmp
fidiv
push
loope
loope
xchg
retf
sar
outs
inc
fistp
movs
mov
push
cmps
dec
sbb
xchg
xor
int
(bad)
adc
or
outs
push
mov
sbb
icebp
bound
fld
(bad)
sub
scas
dec
rol
sti
int
sub
shl
push
cmc
inc
call
mov
(bad)
sbb
mov
fisttp
aad
cmps
inc
(bad)
xor
data16
aam
shl
push
pop
repz
ret
dec
cdq
call
cmc
xor
inc
out
stos
add
sub
adc
dec
call
mov
dec
jecxz
pop
cmp
xor
mov
inc
pop
daa
or
dec
aad
xchg
and
jmp
clc
arpl
cld
aam
xchg
ficomp
cmp
loope
xor
out
in
jb
mov
ficomp
call
loop
inc
jle
hlt
mov
stos
fisub
mov
push
out
xor
push
adc
test
cmp
add
cmp
sub
jbe
pop
jg
sbb
repz
popa
pop
(bad)
jo
dec
sahf
addr16
(bad)
outs
mul
and
clc
sub
in
xchg
xor
scas
sbb
out
sbb
jmp
leave
into
jo
jp
push
hlt
jl
pop
cmp
xchg
shr
loopne
sahf
bound
push
out
fsubr
popa
les
call
add
iret
loopne
adc
pusha
xor
int3
es
fs
sub
mov
push
dec
jge
imul
adc
add
movs
jo
sbb
adc
mov
into
enter
data16
lods
add
jp
into
icebp
dec
out
add
lods
dec
dec
movs
or
adc
js
pusha
lods
pop
mov
mov
test
ret
xchg
push
and
repnz
call
in
movs
dec
or
clc
sbb
or
or
add
or
clc
loopne
pusha
adc
add
lea
sub
bound
adc
mov
jns
ja
dec
or
push
into
mov
popa
push
(bad)
daa
xor
lds
push
xchg
out
in
fiadd
fst
push
data16
mov
mov
ret
adc
mov
xchg
cmp
mov
xchg
pmulhuw
cmp
sti
ja
add
jb
xor
sbb
int3
cs
mov
and
push
pop
and
pop
aad
push
push
pop
cmp
pop
inc
pop
loopne
pop
sbb
xchg
push
ror
loopne
ja
stos
loop
xchg
(bad)
or
sbb
cld
add
out
push
sti
test
inc
or
ds
jmp
mov
out
ins
pushf
js
cmp
jmp
push
test
inc
inc
lahf
fucom
or
cmp
jmp
inc
mov
xor
les
rcr
rcr
fwait
inc
cdq
inc
out
stos
gs
in
cmps
cmp
cmp
cmp
mov
xchg
cmp
mov
leave
and
int3
adc
pushf
dec
pop
cs
jnp
cmps
icebp
mov
sbb
loopne
out
icebp
xor
pop
jge
sub
sub
int3
cwde
movs
cmp
cmp
sbb
inc
pop
push
aam
xchg
sar
cmp
hlt
xchg
js
push
retf
aaa
pop
mov
xor
inc
mov
lods
dec
pop
nop
lods
inc
and
jecxz
scas
shl
cmps
mov
lahf
push
fiadd
cmp
jnp
or
dec
pop
add
add
fsub
hlt
fistp
pop
mov
inc
add
data16
addr16
and
add
scas
push
sbb
scas
xor
jmp
ds
cmps
sub
sub
fisttp
daa
outs
xor
jns
stos
(bad)
stc
adc
jno
aad
ja
jae
cmc
sti
cmp
sbb
call
adc
ss
xor
push
xchg
scas
repz
dec
das
call
dec
test
add
mov
fxch
ins
mov
push
vmwrite
cmps
and
pop
ret
sbb
xlat
ds
(bad)
mov
std
js
add
inc
add
sbb
pop
sbb
mov
xchg
adc
mov
dec
inc
popa
ja
dec
mov
pop
gs
loop
enter
adc
jnp
test
mov
stos
cmp
mov
push
int
dec
and
es
fs
test
adc
and
icebp
mov
ret
hlt
xchg
jmp
daa
jge
sub
lock
test
sub
nop
cdq
movs
and
xchg
push
jo
lahf
scas
xor
mov
(bad)
aas
and
pop
push
sbb
adc
sbb
es
xchg
xchg
test
inc
push
test
push
retf
addr16
jb
adc
sub
sbb
mov
cld
ins
mov
call
repnz
ret
ins
hlt
pop
xor
adc
fcom
mov
jno
dec
imul
jmp
jecxz
mov
addr16
daa
popf
sub
loope
bound
mov
dec
imul
push
or
out
lock
aad
pop
pop
lods
inc
popf
mov
ds
add
ret
(bad)
mov
imul
rcr
addr16
push
and
cli
sti
xchg
push
inc
mov
scas
jbe
sbb
test
mov
xor
out
add
dec
fs
out
aam
in
(bad)
mov
test
rcr
mov
or
inc
shl
inc
jmp
inc
enter
ficomp
xor
and
add
xchg
inc
nop
rcl
cs
adc
adc
and
mov
enter
jne
pusha
xor
les
(bad)
dec
mov
push
es
loope
add
retf
in
or
xchg
dec
mov
sahf
and
sahf
xchg
dec
dec
push
test
adc
xchg
xor
mov
and
fld
jns
inc
xchg
jp
dec
push
inc
lds
mov
es
and
sti
dec
ficom
sti
sub
ja
enter
ret
inc
dec
mov
add
ds
fldenv
hlt
ret
ret
or
mov
shr
in
push
jle
fwait
mov
mov
push
outs
aam
mov
inc
dec
test
outs
sbb
xchg
(bad)
jnp
pop
cmp
xchg
pushf
push
cmp
mov
ret
mov
sar
or
fcmove
xchg
lods
es
pusha
icebp
cmp
mov
xor
mul
push
dec
inc
in
mov
rcr
(bad)
sar
push
sahf
sbb
mov
inc
dec
xchg
gs
test
xchg
add
in
jmp
loopne
mov
les
add
mov
cmc
lods
dec
mov
push
idiv
aam
cmps
(bad)
retf
dec
sar
rcr
clc
dec
out
dec
dec
call
sbb
(bad)
cmp
mov
push
stos
std
adc
push
jb
inc
jne
stc
pop
inc
adc
out
outs
sub
les
fs
retf
mov
(bad)
in
and
retf
mov
and
add
cmp
pop
sub
aam
fild
jecxz
retf
lds
pop
ficom
ret
in
lea
fcomp
aas
cli
and
mov
jb
into
repnz
or
shr
retf
setns
cmp
js
jle
call
loope
ins
and
adc
dec
dec
xor
ds
push
or
inc
sbb
ins
xchg
pop
sbb
lods
scas
cmp
add
inc
pusha
ins
pop
cmp
aas
test
xor
fild
sbb
mov
adc
(bad)
ins
cwde
call
mov
fwait
mov
fcom
lods
sahf
sbb
adc
inc
fild
add
dec
fcomp
sub
mov
inc
dec
ffreep
push
pop
inc
fs
int
jmp
cwde
inc
loope
shl
cli
stos
cwde
mov
(bad)
(bad)
fdivr
push
lock
jge
xchg
cdq
pop
jno
adc
retf
cwde
xchg
add
fs
mov
(bad)
addr16
in
mov
les
xchg
push
jl
pop
retf
xor
adc
loope
push
mov
jmp
mov
mov
inc
jp
sar
adc
stos
pop
fs
fidivr
idiv
sbb
sub
pop
(bad)
xchg
gs
shl
mov
xchg
mov
adc
js
xchg
int3
(bad)
arpl
jmp
retf
mov
jge
xchg
cld
loopne
xchg
inc
shr
and
push
sbb
cmp
jnp
adc
lock
mov
or
inc
mov
add
cld
adc
inc
inc
sbb
mov
mov
sbb
dec
fs
enter
ret
inc
or
sahf
aaa
fiadd
xchg
xor
aas
dec
push
inc
lock
sbb
or
leave
sbb
in
pop
rcl
sub
xchg
aaa
retf
ror
adc
iret
cmps
int
mov
mov
xor
popf
aam
(bad)
cld
adc
test
mov
or
push
pop
arpl
inc
jmp
mov
pop
xlat
mov
xchg
and
cmp
test
mov
inc
inc
or
aaa
sub
sub
loope
pop
test
adc
dec
fptan
pop
mov
sub
minps
jg
adc
mov
rcl
mov
jmp
pop
fsubr
(bad)
sbb
cmp
jge
les
scas
add
mov
sub
in
cmp
push
je
shl
pop
inc
sub
sbb
arpl
push
loop
enter
fmul
in
lahf
je
xchg
imul
lods
inc
in
pop
ret
repnz
aam
mov
xchg
or
and
imul
xchg
and
jge
jmp
mov
not
cmps
cmp
mov
(bad)
jle
cmps
(bad)
fst
movs
scas
xchg
and
xchg
cld
aad
lds
les
mov
jle
sub
clc
sbb
add
jp
sub
add
clc
ja
mov
div
das
jns
retf
or
rcr
(bad)
jmp
shl
in
sbb
push
arpl
fdecstp
nop
push
scas
jmp
xor
jns
call
das
or
adc
add
mov
sub
jp
push
into
pop
cli
mov
mov
mov
movs
mov
mov
inc
pop
cmp
pop
adc
add
jnp
das
push
dec
add
jnp
cmp
mov
xor
mov
popf
inc
xchg
sti
into
call
pop
(bad)
pop
cmp
or
xor
sbb
ins
sub
mov
fmul
daa
ret
sub
mov
dec
adc
loopne
scas
xor
jns
mov
add
sbb
cmp
and
pusha
add
push
or
mov
daa
leave
dec
loop
out
jb
push
cmps
daa
int
sbb
repnz
imul
jns
lods
pop
leave
fidiv
adc
idiv
fs
mov
mov
out
cmp
lds
aas
push
sbb
jno
and
dec
es
xor
ja
adc
fs
pop
push
jp
mov
sub
psraw
add
scas
jbe
outs
mov
out
pop
js
lock
or
or
xchg
sbb
adc
ficomp
pop
sbb
aad
rol
xchg
int
cli
mov
and
out
and
int
inc
add
xor
lods
nop
das
xchg
xchg
retf
mov
cli
inc
jno
adc
aam
test
adc
push
sub
(bad)
xchg
iret
sbb
fidiv
pop
test
fiadd
test
jae
cmc
push
wbinvd
inc
sub
outs
int
es
push
pop
push
jne
cli
lahf
pop
xchg
clc
fwait
mov
cmp
jg
mov
clc
or
push
je
adc
fistp
lea
clc
mov
and
pop
sti
rol
xchg
cmps
xchg
xchg
aad
mul
lods
adc
dec
push
add
mov
xor
xor
je
into
xlat
jl
inc
shl
loopne
xchg
into
push
and
mov
stc
mov
icebp
or
pop
enter
xchg
push
xchg
xor
lea
xchg
sbb
inc
std
mov
jo
imul
jge
loope
mov
outs
ins
cs
aad
mov
adc
xor
js
fsub
xchg
jg
mov
xor
fcomp
mov
ret
pop
mov
mov
aad
push
push
cmp
and
jecxz
add
repnz
outs
xor
adc
ret
mov
pop
cmps
mov
cld
pop
imul
cs
pop
push
aaa
pop
mov
cld
fist
inc
(bad)
movs
ret
repz
rol
loope
xor
cmps
jecxz
daa
mov
out
fisub
test
push
js
inc
inc
stos
movs
std
cs
leave
nop
mov
add
sbb
ret
add
push
dec
leave
rcl
pushf
gs
enter
dec
pop
lahf
ss
push
iret
mov
fsub
lds
and
and
std
fld
aas
fmul
inc
mov
jb
call
push
mov
sbb
mov
jbe
cmp
push
mov
test
pop
je
ret
retf
jp
lods
sahf
(bad)
in
cdq
mov
push
add
xor
test
aam
test
xchg
jle
jbe
adc
cmp
push
je
ja
popa
mov
addr16
mov
std
mov
add
jno
cmc
popa
sub
cli
sbb
popf
mov
sub
sahf
dec
imul
ins
test
sub
pop
nop
arpl
and
cmp
pop
das
inc
add
dec
pop
dec
lea
call
and
test
les
jbe
jg
daa
pusha
test
mov
inc
ret
sbb
mov
jnp
mov
mul
and
(bad)
mov
popf
cmp
in
pop
dec
xchg
mov
jmp
out
dec
xchg
in
pop
and
mov
or
or
xor
rcl
add
mov
jl
out
not
cli
and
fimul
xchg
cmps
add
ficom
and
clc
inc
mov
movs
dec
iret
dec
mov
sub
add
stos
arpl
inc
mov
adc
ret
cmp
sbb
(bad)
movs
or
pusha
mov
dec
inc
loopne
sbb
jge
imul
mov
stc
or
mov
dec
pushf
pusha
pop
xchg
test
dec
stos
enter
pushf
pop
mov
sbb
push
adc
xor
fdivr
test
pop
repnz
xor
aam
mov
cmp
xchg
repz
stc
jo
lahf
add
scas
and
mov
pop
mov
test
stos
mov
mov
stc
inc
(bad)
xchg
xchg
dec
into
mov
push
pop
push
lahf
clc
adc
lock
pop
and
push
jmp
in
pop
and
mov
or
imul
leave
lods
daa
fwait
repz
neg
int3
jge
fild
adc
inc
scas
int3
rcr
cdq
fidiv
jbe
out
mov
lds
inc
mov
jbe
cld
test
pushf
and
addr16
mov
retf
clc
in
outs
stc
fwait
jle
jl
fwait
jl
adc
xor
xor
outs
xor
and
push
jl
mov
idiv
test
es
imul
sub
xor
push
les
repz
movs
jo
cmp
or
fwait
cmp
xor
cmp
push
(bad)
fbld
in
xchg
fcom
mov
xor
mov
add
das
dec
loopne
cld
or
jae
repz
in
lahf
fild
hlt
mov
mov
or
pop
out
mov
loopne
iret
xor
and
pop
js
sub
jmp
int3
pop
cmp
lea
cwde
out
icebp
mov
xor
ret
popf
sbb
pop
mov
add
add
mov
out
jg
imul
call
rcr
mov
(bad)
push
pop
cli
sbb
gs
xor
aas
in
fs
add
ja
clc
add
and
add
add
add
sub
fmul
push
lods
jo
or
xor
sub
pusha
popa
clc
in
xchg
ins
or
xchg
pop
cmp
sbb
retf
add
cmp
sub
mov
jle
mov
mov
dec
push
mov
fsub
lea
jmp
arpl
outs
mov
gs
lods
lock
lds
rcr
and
xchg
inc
cmc
imul
adc
xchg
inc
(bad)
sub
mov
mov
cs
xor
cwde
xchg
sbb
inc
push
cmp
lods
push
gs
xlat
jl
cmp
shl
mov
mov
jne
sub
push
in
cmp
cli
retf
inc
in
ret
xor
jo
pop
retf
ficomp
push
inc
xchg
jg
mov
inc
mov
mov
pusha
popf
nop
aad
fsubp
push
shl
dec
in
mov
jmp
sub
dec
hlt
push
or
jbe
push
jmp
and
rol
ja
idiv
jg
and
mov
xor
push
mov
je
inc
mov
xchg
push
jecxz
(bad)
cmps
lock
mul
and
sub
adc
movs
call
pop
pop
or
dec
lahf
lods
in
jmp
adc
mov
jecxz
outs
cmc
inc
adc
sub
in
call
mov
xor
mov
or
jns
mov
adc
stos
ds
sub
sti
push
add
imul
rsm
jns
cmc
push
push
jbe
adc
nop
adc
movs
adc
pop
lea
pop
jmp
mov
outs
sbb
inc
fist
sbb
nop
(bad)
test
cld
out
test
xchg
retf
jle
push
repnz
out
push
cwde
jmp
push
lock
mov
mov
and
aaa
or
imul
push
xchg
scas
adc
adc
add
ror
or
sub
(bad)
lock
add
push
mov
(bad)
sahf
pop
mov
neg
enter
mov
push
pop
inc
js
sti
pop
adc
push
jmp
add
mov
mov
and
mov
pop
fbstp
push
scas
call
fisttp
cmp
pop
lock
push
stos
add
and
lods
mov
addr16
das
loop
mov
pusha
adc
out
jp
sbb
add
test
dec
je
dec
shl
daa
fnstenv
hlt
cmc
cmp
fcomp
jle
imul
pop
xchg
lods
xchg
sbb
mov
test
sbb
xchg
mov
jnp
or
sbb
sub
push
out
pop
jnp
das
cli
ror
pop
dec
ins
xchg
ret
mov
mov
jb
jmp
in
sub
popf
loopne
nop
repnz
sub
adc
adc
fimul
mov
shr
pop
and
pop
clc
add
mov
xchg
ins
out
cmc
mov
movs
enter
jo
adc
scas
pop
xor
(bad)
cmps
les
jno
sub
fs
fidivr
loopne
xchg
sub
sti
and
sub
cmp
adc
push
dec
xchg
mov
int
loop
xchg
jle
mov
int3
mov
dec
div
loopne
in
clc
adc
fbstp
(bad)
shl
(bad)
fimul
daa
xchg
test
outs
popf
fistp
or
adc
mov
mov
mov
std
in
fdivrp
(bad)
push
dec
cld
je
dec
fbstp
mov
cwde
out
shl
(bad)
xlat
cdq
jg
aaa
ret
loop
push
xchg
push
outs
and
adc
test
push
shr
add
or
inc
adc
xor
lods
adc
cdq
fisubr
push
into
push
retf
js
cmp
popa
cmp
aaa
inc
idiv
test
rcr
ja
fst
jo
and
aam
out
fild
leave
jecxz
or
iret
icebp
mov
add
leave
mov
xchg
into
cmps
inc
mov
xor
int3
rcl
out
fmul
sti
test
sub
mov
push
dec
cmp
push
fcomp
dec
popf
dec
sub
and
jne
leave
push
sbb
cmps
mov
(bad)
adc
sub
cli
pop
adc
int
pop
sbb
hlt
cmp
sar
in
test
inc
mov
stc
iret
jle
(bad)
mov
xchg
xchg
sub
mov
pop
mov
fs
jge
mov
dec
sub
outs
out
test
movs
xchg
adc
inc
mov
jl
jge
xchg
fcomp
mov
test
(bad)
das
xchg
sbb
xchg
or
add
xchg
sbb
pop
sub
outs
stos
xor
ins
pop
loop
sbb
xor
sar
pushf
(bad)
repz
lods
pavgw
pop
xor
fadd
jmp
movs
jae
scas
cmp
pop
in
and
cli
test
sbb
mov
jo
sti
imul
mov
mov
xchg
mov
fld
mov
dec
mov
xor
sub
inc
addr16
int3
aaa
mov
push
in
mov
xchg
adc
mov
mov
sar
lea
mov
mov
cmp
das
lea
(bad)
cmp
aas
jecxz
gs
xor
cs
pop
xor
(bad)
fst
pop
inc
xchg
aad
sti
mov
adc
pop
pop
mov
gs
sbb
stos
sbb
repnz
mov
mov
arpl
rcl
daa
mov
adc
mov
mov
fwait
shl
push
adc
push
bound
aas
mov
addr16
mov
movs
fild
pop
loopne
std
sub
adc
mov
mov
dec
cmp
int3
cmp
sub
dec
sub
test
jle
scas
xchg
mov
mov
mov
mov
sbb
(bad)
fld
daa
sbb
jb
add
jne
and
scas
data16
mov
out
shl
add
xlat
and
pop
xor
adc
arpl
jl
pusha
into
cld
cld
and
inc
sbb
mov
loope
jns
unpckhps
push
aas
sbb
dec
and
jo
sub
mov
(bad)
sbb
and
and
and
jo
add
xor
scas
in
ret
or
pop
cs
cli
pop
aad
imul
lods
xor
(bad)
retf
and
lea
pop
fwait
pop
daa
pop
lea
stc
mov
or
dec
loope
sub
fst
jp
sbb
retf
xor
lds
int
cmp
stos
(bad)
push
sbb
fwait
out
adc
sbb
inc
mov
aad
mov
mov
lods
shl
gs
push
xchg
xchg
pop
xchg
dec
cdq
xchg
jne
adc
fstp
xchg
push
cmc
inc
push
test
je
in
lea
scas
xor
ins
sub
adc
call
xchg
dec
add
dec
popa
inc
imul
sub
pop
mov
jo
mov
cmp
movs
push
outs
clc
sbb
lods
and
std
push
enter
sub
xor
jmp
nop
call
mov
mov
mov
push
xchg
stos
enter
test
(bad)
(bad)
jg
pop
dec
mov
mov
dec
rcr
fbstp
(bad)
mov
lods
int
jg
rcl
into
sbb
ficomp
mov
xor
imul
pusha
ins
mov
lods
pop
mov
pop
jb
jge
inc
jns
pop
cmp
imul
out
js
mov
ror
dec
dec
inc
call
sar
xor
sti
addr16
movs
les
xchg
aam
stos
pop
add
cmc
sbb
arpl
cs
xchg
lods
retf
fld
mov
cmp
add
(bad)
mov
shr
cs
and
test
or
mul
ja
pop
adc
(bad)
iret
xor
daa
jno
cmp
enter
imul
mov
cmp
xchg
fld
call
popf
test
lods
dec
pop
xchg
jge
xor
in
inc
fist
sub
jbe
lahf
inc
sub
inc
ds
or
cmps
push
jmp
lea
cmp
dec
loop
pop
aad
push
lea
movs
js
scas
inc
jp
xchg
test
push
pop
pop
ins
clc
jne
fcomp
xchg
pop
pop
add
int
xchg
(bad)
sbb
pushf
int
push
sbb
mov
(bad)
mov
loop
push
aas
retf
xor
cmc
fild
dec
hlt
rcl
push
mov
lock
pop
sub
test
xor
lods
fcomip
and
das
add
std
outs
add
jb
retf
rcl
pusha
jns
retf
mov
pop
sbb
(bad)
js
and
add
mov
aas
cmc
sbb
fcom
call
cmp
gs
pop
sub
dec
xchg
pop
iret
outs
mov
and
jb
inc
retf
rol
and
std
call
jns
sbb
inc
cmp
push
scas
push
sub
cmps
mov
les
pusha
jmp
xchg
or
fst
lods
jle
pushf
je
arpl
mov
int3
xor
retf
(bad)
inc
sbb
sub
loope
(bad)
jmp
sbb
in
xchg
ret
push
js
in
mov
mov
and
mov
xchg
lds
enter
rcr
clc
int3
sub
xor
std
add
cli
add
inc
ins
(bad)
xchg
push
ror
call
iret
lea
(bad)
out
and
add
jb
sub
dec
jge
push
lahf
mov
xchg
mov
inc
and
test
xchg
add
popf
and
mov
lahf
mov
mov
fcos
sti
punpckhwd
mov
cmp
and
inc
pop
ds
sub
imul
mov
mov
mov
(bad)
inc
test
clc
mov
mov
std
jle
cwde
int
leave
xor
int
sub
pause
jle
add
sub
ret
xor
bound
inc
comiss
std
cdq
fwait
or
pop
dec
push
jno
and
push
aad
test
or
xchg
aam
xchg
cmp
dec
pop
sbb
inc
xchg
mov
xor
(bad)
pop
fwait
leave
popa
xor
mov
xchg
xor
hlt
jle
xchg
fwait
cmp
xchg
pop
and
mov
jl
and
cmp
mov
ins
aaa
fdivr
xor
mov
das
and
lods
mov
xchg
lds
inc
rol
mov
jns
dec
cmps
outs
imul
fs
aaa
in
xchg
pop
inc
dec
push
test
cmp
loop
adc
out
jecxz
mov
xor
xor
sub
sbb
rol
mov
pop
xchg
mov
pop
jns
popa
iret
inc
loop
in
jno
popf
pop
outs
std
mov
imul
sahf
push
sub
ins
jo
clc
ins
push
xor
or
div
es
xlat
lea
sar
add
or
imul
inc
jo
ds
dec
stos
cmp
sbb
dec
shl
mov
gs
jmp
push
retf
fisttp
shr
lahf
mov
fdiv
xchg
aas
loopne
ins
test
sbb
lock
xor
mov
mov
shr
adc
sbb
cmc
mov
adc
pop
or
test
cmps
and
ds
add
sub
sub
xor
ret
push
popa
clc
imul
mov
mov
push
adc
movs
mov
fs
imul
xor
test
xlat
lods
pop
cmp
jnp
or
mov
mov
in
jmp
rcr
mov
inc
pop
aad
push
sbb
fs
cmp
dec
or
jle
cwde
sub
(bad)
inc
clc
hlt
xor
leave
cdq
mov
mov
add
jo
stos
ins
in
mov
cli
mov
cmp
dec
call
pop
pop
mov
ja
jmp
or
ror
xor
(bad)
push
cdq
cmp
int3
and
in
pop
mov
mov
xchg
paddsw
mov
fdivr
jmp
enter
adc
push
rcl
inc
lods
das
fistp
(bad)
pop
daa
bound
pushf
push
jge
aas
and
sbb
xchg
popa
and
mov
out
mov
and
cs
add
add
loopne
(bad)
add
cmp
fstp
dec
jo
aas
jecxz
xchg
ffreep
sbb
mov
loopne
cli
mov
outs
clc
push
clc
sbb
mov
jle
xchg
(bad)
sbb
das
and
add
ret
sub
test
cmp
shufps
xlat
xchg
dec
push
or
push
sbb
adc
arpl
repnz
(bad)
jmp
lds
sar
jge
xor
das
bound
je
cld
push
(bad)
xchg
in
sar
pop
pop
adc
mov
push
adc
pushf
xor
(bad)
movs
push
aas
pop
bnd
movs
mov
cmp
movs
out
dec
cdq
sar
fninit
dec
(bad)
pop
dec
cmp
test
or
push
rcr
fucomp
pop
mov
mov
mov
push
mov
push
jge
popf
push
pop
ds
loope
fist
and
lock
sub
mov
movs
jae
push
jo
lock
mov
outs
in
mov
int
stc
test
cli
adc
and
pop
movs
pop
rcl
or
pop
aad
cli
jne
mov
mov
cmc
arpl
inc
xor
dec
cmp
rol
and
aas
jl
ss
test
jno
pop
shr
mov
scas
jecxz
lahf
push
sbb
push
imul
scas
inc
cmp
lock
add
inc
mov
xchg
popa
sbb
mov
jb
iret
call
inc
clc
mov
pop
dec
std
lds
push
xchg
adc
pusha
jne
mov
out
outs
xchg
test
ja
repz
sub
jge
inc
add
int
mov
rol
cmp
(bad)
mov
sahf
(bad)
mov
fldcw
jl
sbb
adc
or
inc
xchg
inc
mov
jmp
mov
imul
(bad)
push
not
xchg
mov
icebp
cdq
sub
mov
daa
lahf
lahf
data16
repz
pusha
push
inc
jge
add
mov
xchg
inc
and
jg
ss
in
xor
sub
sub
mov
inc
xchg
pop
push
call
lods
dec
xchg
neg
add
xchg
adc
sbb
push
mov
std
fcmovnb
xchg
pop
cli
aam
mov
sbb
call
inc
ret
in
outs
retf
or
into
mov
mov
(bad)
fadd
pop
pop
xor
sub
xchg
fld
call
xor
or
aam
(bad)
xor
pop
test
div
mov
leave
lods
or
inc
pop
out
scas
xchg
xchg
and
fisubr
xchg
(bad)
xchg
xor
xchg
sub
lahf
sub
jge
call
sub
jb
in
inc
push
xor
cmp
gs
mov
sbb
ja
test
hlt
into
idiv
sbb
xchg
adc
inc
mov
in
lds
in
cmc
pop
ja
shl
cmp
jmp
inc
mov
sahf
xchg
cld
jl
fidiv
cmp
(bad)
lahf
retf
ja
xchg
xor
sti
mov
bound
and
jb
rol
jbe
(bad)
jne
fdiv
sub
outs
out
mov
dec
push
xchg
and
fwait
cs
ins
mov
clc
jecxz
or
pop
sub
test
pop
xor
and
(bad)
cdq
jl
dec
lahf
sub
fldcw
inc
sub
cmp
adc
cwde
stos
xor
cli
mov
fwait
inc
div
push
push
xchg
out
aaa
and
pop
lea
jl
cmps
cwde
dec
jo
mov
xor
xchg
(bad)
das
fcomp
mov
push
outs
xlat
out
dec
in
dec
(bad)
ror
dec
outs
scas
scas
sbb
mov
dec
dec
mov
mov
mov
push
adc
scas
fdivr
cwde
sub
stos
jg
lods
daa
or
jmp
fisttp
stc
je
movs
mov
jbe
outs
mov
cmps
ret
lahf
sbb
or
sub
jecxz
mov
fisubr
test
cli
ss
inc
out
add
push
clc
bnd
sub
int
add
pop
add
ror
sub
xlat
mov
push
cmp
jmp
adc
jl
mov
ins
je
sti
das
pop
pop
adc
adc
and
push
dec
addr16
inc
cmp
test
leave
xchg
cmp
ins
dec
push
sub
adc
jb
enter
shr
test
xor
(bad)
adc
adc
push
jg
xchg
push
or
ins
inc
dec
cmps
and
mov
les
popf
and
pop
in
arpl
lea
aas
push
mov
hlt
scas
and
dec
mov
push
pop
push
lods
or
push
dec
jp
fmul
out
in
stos
ds
imul
xchg
jb
and
cs
cld
cld
popf
sbb
mov
mov
mov
lahf
add
pop
pop
lds
daa
and
bound
(bad)
repz
sub
xor
mov
mov
mov
pop
sbb
in
push
je
push
dec
scas
dec
lods
mov
xchg
bound
jle
pop
lds
int
scas
sub
es
cs
sbb
push
adc
scas
imul
and
imul
icebp
push
retf
xchg
test
test
pop
or
jns
push
sub
pop
inc
rol
retf
xor
imul
adc
aam
mov
jae
push
mov
mov
test
pusha
callw
ins
daa
mov
jp
in
jmp
or
mov
xor
clc
loopne
cmp
mov
dec
pop
pop
aaa
icebp
into
lock
push
je
mov
and
or
mov
mov
std
sbb
cmp
jecxz
add
dec
adc
leave
mov
enter
or
adc
cmp
test
xor
xchg
sbb
popa
dec
inc
pop
int3
inc
and
mov
dec
outs
ds
sub
outs
pop
adc
je
jb
test
leave
jns
push
(bad)
mov
inc
(bad)
out
jo
(bad)
movs
xlat
xchg
or
and
(bad)
push
rep
clc
test
ret
jns
sbb
das
cdq
dec
in
div
cs
cmps
jb
pop
int
jmp
fwait
pop
cwde
loopne
add
xlat
loopne
fidiv
jmp
xor
scas
cdq
jbe
dec
pop
xlat
jmp
icebp
pop
(bad)
icebp
push
pop
ror
jmp
inc
repz
mov
nop
push
push
shr
mov
adc
pop
xchg
jnp
(bad)
arpl
push
xor
das
jmp
inc
(bad)
stos
or
enter
call
pop
cld
pop
jbe
popa
push
and
loop
pop
mov
push
cwde
int3
daa
xchg
fyl2xp1
inc
push
pop
cmp
add
xor
and
cmp
xchg
out
retf
push
push
shl
or
pop
mov
adc
jg
mov
js
sahf
dec
in
test
(bad)
jmp
idiv
daa
ret
jae
std
xor
jmp
call
enter
ror
gs
xchg
int
repz
jne
rcl
dec
(bad)
xchg
int
enter
push
stc
(bad)
jge
cli
js
stos
adc
jns
mov
dec
adc
cmp
iret
(bad)
fst
cwde
cmp
dec
xor
les
retf
mov
mov
cmp
iret
xchg
(bad)
xor
sub
mov
cli
imul
xor
adc
push
mov
xchg
dec
iret
jae
ss
push
xor
push
jge
and
add
inc
test
hlt
mov
push
add
les
xchg
shr
rcl
inc
(bad)
movs
pop
mov
pop
daa
xlat
push
add
aaa
lea
adc
xchg
pop
cmp
sub
setb
mov
ins
stc
adc
add
aad
xchg
cmp
dec
sbb
add
pop
cmp
pop
pusha
cmp
dec
adc
cld
add
inc
out
or
aaa
jl
mov
push
mov
arpl
addr16
push
repnz
ret
push
mov
xchg
and
mov
fidivr
retf
shr
xor
lock
das
sub
pop
sub
adc
call
push
sbb
das
div
pop
dec
or
ins
pop
nop
scas
add
inc
mov
adc
popf
jmp
mov
mov
pop
in
stos
fidivr
jb
rcr
xor
cs
mov
and
push
les
inc
pop
lea
into
lods
xchg
jl
out
es
push
mov
rol
xor
int3
xor
adc
hlt
and
fst
mov
daa
aam
repnz
pop
inc
push
lods
shr
mov
or
dec
sub
push
push
dec
out
into
adc
stos
pop
sub
inc
jne
cmp
cwde
ret
je
call
cmp
xchg
jl
push
jb
movs
sar
cmps
imul
dec
mov
jp
ror
dec
gs
jbe
out
mov
hlt
lds
imul
popf
push
or
scas
popa
pop
dec
inc
sar
inc
js
int3
sbb
mov
mov
xchg
aas
repnz
xor
in
sub
(bad)
idiv
out
inc
add
mov
repz
adc
or
sbb
mov
xor
outs
dec
mov
push
or
add
mov
mov
xor
add
or
adc
or
cmp
xchg
jbe
arpl
xchg
leave
mov
fs
in
mov
icebp
inc
xchg
lahf
aam
daa
cmps
test
out
cmp
je
and
adc
stos
sub
lods
or
mov
jns
inc
cmp
dec
ret
shl
and
add
data16
int
js
mov
cmps
(bad)
in
in
add
xor
xor
inc
and
add
mov
dec
pop
ja
push
jnp
xor
add
cmp
das
sub
and
scas
mov
xor
and
ss
int
pop
(bad)
fcmovne
es
xchg
pop
sbb
outs
jg
mov
inc
mov
mov
int
jp
jo
arpl
pop
mov
out
fs
stos
jmp
addr16
or
jae
mov
push
jp
mov
inc
jno
cmp
jo
or
idiv
mov
shl
jmp
mov
call
or
dec
mov
out
mov
xchg
fnstsw
mov
mov
fist
stc
mov
dec
inc
jmp
lods
out
sub
sbb
mov
xor
lea
repz
mov
cmps
mov
fidivr
aas
cmp
mov
inc
xor
pop
movs
mov
iret
push
stos
cmp
sar
xchg
push
pusha
or
push
retf
loope
jno
imul
(bad)
lods
cmp
loop
lods
inc
(bad)
mov
mov
mov
cmp
xchg
cs
into
mov
pop
pop
pop
test
ss
sbb
out
sub
(bad)
jg
sub
jne
add
mov
mov
dec
or
(bad)
call
lods
jns
sub
sbb
push
pusha
xor
sub
push
loopne
adc
and
adc
pop
push
mov
jne
sbb
jbe
nop
rol
pop
mov
mov
das
aas
gs
call
adc
stos
pop
or
push
inc
imul
sahf
fwait
retf
or
stos
inc
pop
les
cli
fsubr
cdq
aas
inc
xchg
pop
je
push
sub
cli
mov
and
test
ret
lods
dec
fisttp
in
jmp
ret
mov
out
cmps
and
pushf
dec
cli
pop
and
cmp
pop
mov
aas
mov
sub
mov
mov
jnp
xchg
xor
push
stos
fisub
adc
mov
mov
test
retf
leave
mov
jae
jecxz
ja
fnstcw
mov
fldcw
nop
jge
push
jnp
(bad)
xchg
mov
inc
gs
adc
inc
imul
inc
hlt
pop
push
cwde
pop
test
dec
push
jp
cdq
dec
jo
movs
ins
push
jae
add
in
sahf
pusha
push
sub
sbb
dec
out
xchg
sahf
add
jo
xlat
lods
std
or
sbb
jb
sbb
je
jnp
cmp
(bad)
movs
xor
mov
inc
xchg
mov
in
movs
mov
(bad)
popa
gs
fld
imul
mov
jge
adc
or
adc
cdq
repz
mov
or
addr16
adc
add
push
inc
push
mov
imul
outs
pop
xchg
push
adc
jne
enter
and
mov
(bad)
pop
cmp
dec
mov
movs
dec
pop
repz
xchg
xchg
dec
(bad)
imul
stos
xchg
push
jae
adc
xor
xchg
xor
add
pop
mov
and
push
outs
mov
xchg
push
pop
adc
in
repz
test
push
and
test
dec
add
sbb
add
fdivr
(bad)
sbb
stos
cmps
je
jl
fisub
push
clc
adc
dec
scas
jne
jg
loope
dec
and
test
add
cmp
pop
or
xor
dec
and
daa
aas
sub
mov
jmp
gs
data16
pop
mov
aas
push
ret
sbb
mov
test
or
lock
push
in
jp
jno
mov
mov
les
jnp
mov
out
jmp
mov
inc
lods
pop
ss
mov
loope
push
xor
std
push
(bad)
pushf
sbb
gs
adc
mov
cld
or
inc
(bad)
out
mov
inc
int
div
sahf
jae
mov
jmp
jmp
jmp
pop
bound
jmp
sub
movs
imul
pop
sub
mov
sbb
push
mov
cmp
add
push
mov
idiv
add
pop
repz
jb
lods
adc
inc
and
les
dec
mov
inc
mov
push
mov
jle
mov
push
fld
popa
rol
mov
std
jbe
outs
(bad)
xchg
loop
push
push
outs
test
add
jo
test
adc
ss
mov
je
shl
mov
cmp
pop
cdq
inc
rcr
std
add
cmp
and
mov
ret
fs
fnstcw
push
arpl
inc
jmp
jbe
jle
test
cmp
adc
mov
push
(bad)
outs
add
fstp
or
idiv
jmp
add
in
mov
jbe
outs
test
xchg
xlat
dec
and
out
jno
mov
sahf
sub
loopne
popa
inc
cmp
ror
shl
enter
shr
push
pop
cmp
jae
dec
sub
mov
cmp
pop
(bad)
mov
pop
lahf
pop
xor
mov
inc
aad
fcmovb
out
ins
outs
mov
pop
mov
mov
push
sbb
mov
or
test
aad
mov
ficomp
addr16
js
sbb
fcomp
(bad)
rcl
idiv
jnp
xchg
int
jl
stos
mov
cmc
dec
inc
jnp
push
xchg
call
call
xor
lods
push
mov
ins
pop
std
push
inc
pop
adc
and
je
sub
call
mov
leave
movs
xor
movs
cmp
or
mov
(bad)
(bad)
cmp
out
test
jns
mov
fprem1
fwait
mov
dec
stc
or
jecxz
jmp
xchg
mov
xchg
or
dec
mov
xchg
in
xchg
lods
mov
aas
add
sbb
mov
adc
(bad)
das
mov
jl
push
popa
xchg
xchg
(bad)
popa
cwde
dec
lea
pop
shl
imul
dec
enter
inc
sub
mov
cli
stos
add
sbb
mov
sub
arpl
out
imul
ins
mov
(bad)
or
cli
mov
inc
cmp
loop
add
xchg
aaa
pusha
xchg
push
(bad)
aas
loopne
pop
inc
aam
xor
popa
jne
inc
dec
ror
push
sbb
loope
or
aas
or
jle
loop
adc
jl
repnz
inc
mov
test
test
cmps
fimul
inc
sbb
(bad)
jge
fst
retf
cmp
arpl
lea
inc
addr16
inc
sti
jmp
out
out
mov
ja
mov
cmp
or
idiv
(bad)
xor
sti
lods
xchg
mov
fwait
ss
ds
cwde
mov
shl
mov
cmp
ss
pop
mov
mov
std
outs
pop
push
out
jmp
call
js
pop
in
cmp
leave
in
fistp
mov
sub
sbb
cmp
movs
loopne
dec
js
loop
add
sbb
cmp
mov
adc
daa
adc
sub
fs
arpl
xchg
lods
ror
scas
pop
mov
or
imul
sub
aam
mov
test
scas
iret
leave
jmp
arpl
add
movs
jno
or
push
pop
mov
inc
pop
mov
mov
lds
mov
mov
cwde
call
aas
mov
jno
dec
add
and
outs
and
inc
repz
rcr
dec
outs
imul
sub
sbb
test
add
sub
stc
lahf
mov
sbb
(bad)
cmp
add
movs
and
xor
out
push
mov
add
or
pop
outs
jp
and
mov
cwde
sub
mov
sub
mov
mov
dec
js
sub
jo
repnz
mov
out
into
leave
test
push
ins
or
dec
and
cdq
fwait
mov
repnz
xor
mov
clc
in
sub
imul
mov
pop
lods
daa
mov
cmc
or
bnd
xlat
sub
mov
clc
xchg
dec
inc
mov
dec
add
repnz
into
in
and
mov
mov
into
das
shl
fisubr
pop
xor
push
mov
jnp
fild
ror
push
test
js
fsubp
cmc
addr16
xchg
rcl
or
out
inc
dec
movs
iret
mov
add
inc
and
std
or
add
cmp
sbb
inc
mov
pop
inc
xor
(bad)
mov
xchg
and
and
popa
fdivr
ffree
cmp
adc
add
xor
and
pushf
cmps
rol
adc
pop
push
xor
je
mov
jae
pop
rcl
xchg
in
jno
dec
out
jns
test
cmps
out
(bad)
cwde
(bad)
adc
js
push
idiv
xchg
jl
icebp
mov
rcl
into
(bad)
mov
sub
adc
leave
pusha
test
shl
scas
enter
shr
push
sbb
and
dec
in
lds
outs
sub
out
push
mov
and
pop
xor
mov
and
xor
dec
xor
scas
push
inc
or
fistp
repnz
aad
fs
mov
out
cdq
push
inc
arpl
ja
sbb
adc
push
mov
das
fidiv
aas
addr16
xlat
xchg
xchg
and
adc
outs
gs
inc
jno
or
mov
sub
out
fcmovne
xor
enter
or
je
es
inc
aad
test
stos
sub
int3
outs
pop
mov
inc
sahf
inc
mov
(bad)
js
cmp
xchg
inc
mov
out
jne
aaa
adc
out
pop
aad
sbb
div
cmp
scas
shl
xchg
loop
pop
sub
aam
fdivr
test
add
mov
pop
push
mov
aaa
and
clc
mov
push
bswap
ins
add
mov
(bad)
xor
je
jo
pop
(bad)
iret
add
ss
cmp
stos
loopne
mov
das
das
fs
outs
or
shl
sbb
sbb
xchg
sub
loopne
in
cmp
mov
ins
sbb
xchg
push
sbb
mov
jnp
shr
pop
dec
jnp
pop
push
inc
mov
adc
jns
(bad)
lock
inc
sbb
push
lock
test
jmp
add
psrlq
arpl
jne
daa
sbb
test
jmp
cmp
xchg
imul
and
fsub
fistp
xor
fadd
mov
lahf
jbe
rcr
int
rcl
push
scas
pushf
push
cmp
icebp
pop
sub
and
pop
adc
xchg
sub
out
and
fs
xchg
pop
test
sbb
leave
mov
(bad)
ds
adc
(bad)
mov
jmp
xor
rcl
push
mov
sbb
jns
(bad)
stc
and
(bad)
cmp
cmc
pop
xchg
push
imul
cmp
rcl
stos
xlat
push
ja
clc
pop
popa
inc
and
mov
movs
lods
jge
lds
pusha
add
jg
cmps
xor
cmps
daa
cmps
add
popf
fwait
mov
mov
sub
pop
jns
dec
push
outs
movs
loope
test
retf
lock
and
daa
mov
and
js
add
mov
jbe
dec
pusha
sahf
je
outs
sbb
test
(bad)
push
das
xchg
and
popa
aas
fwait
ins
dec
mov
in
mov
lea
cmp
or
adc
inc
hlt
jmp
(bad)
movs
push
out
xor
rol
xor
scas
lahf
imul
inc
out
pop
cwde
aam
clc
jae
mov
push
rol
int
inc
add
push
popa
out
retf
lods
repnz
jne
pop
pop
xor
cld
mov
in
adc
and
jl
push
dec
mov
ja
and
jle
add
dec
arpl
ds
cmp
add
cdq
mov
mov
jo
or
jl
mov
inc
cld
cdq
imul
jge
or
push
adc
iret
pop
inc
pop
sub
dec
test
lahf
cmp
jne
mov
mov
out
in
pop
cmp
mul
in
jns
xor
shr
lods
sub
xchg
pop
xchg
push
sub
cmp
adc
and
jge
adc
lods
push
xchg
std
inc
pop
jle
out
mov
dec
push
push
push
mov
jae
shr
push
imul
aam
xchg
out
add
jb
icebp
pop
or
test
mov
aam
mov
add
and
fisttp
retf
push
push
cs
das
icebp
call
test
cmp
push
sahf
push
ja
jmp
call
cmp
and
xor
int
stc
leave
adc
stos
div
mov
dec
or
mov
les
into
inc
pop
movs
adc
mov
cmp
enter
mov
ret
inc
push
lahf
cmp
daa
mov
or
inc
sbb
js
cwde
fwait
sbb
fucomip
punpckhdq
mov
jg
inc
jge
sti
sub
add
xor
data16
push
aam
jg
mov
out
movs
xchg
mov
pop
push
mov
and
retf
cmc
cs
xor
addr16
hlt
popa
dec
sbb
and
scas
jmp
ret
aam
fcomp
je
jp
inc
out
(bad)
mov
(bad)
inc
sub
sub
aam
mov
(bad)
sub
leave
addr16
jae
mov
gs
pusha
mov
dec
add
jne
cmps
out
jns
add
hlt
pop
(bad)
movs
and
int3
mov
jb
xchg
pop
pushf
jle
jbe
mov
mov
inc
stos
(bad)
stos
xchg
xchg
out
dec
test
fsub
push
adc
jge
mov
jnp
loopne
pop
adc
sub
inc
sbb
iret
adc
or
sub
out
iret
div
xor
push
dec
xor
xchg
ja
jne
pcmpgtd
and
rcr
pop
xchg
add
rol
mov
pop
adc
mov
stc
mov
pushf
adc
aad
sub
stos
dec
sbb
btr
in
adc
out
stos
shr
mov
and
movs
ss
and
push
mov
jb
ss
xchg
inc
retf
xchg
aas
sbb
jb
or
test
push
les
mov
inc
aaa
mov
in
dec
mov
dec
dec
iret
xor
cmp
or
and
sti
xchg
daa
dec
cmp
jns
int3
lock
mov
jbe
sbb
fld
jp
aam
cmp
loop
mov
cmp
jmp
or
push
out
sahf
cmp
dec
fcom
sub
pop
mov
sub
daa
xchg
inc
add
jle
sub
loopne
dec
pop
push
inc
jno
movs
push
sar
mov
sar
xor
pop
aam
mov
jnp
pop
and
pushf
mov
lods
inc
xor
and
lea
(bad)
mov
sahf
fnstsw
fild
push
cmp
mov
ror
inc
add
pushf
fs
inc
sub
cli
jge
sub
mov
daa
out
aaa
sbb
xlat
mov
test
ss
and
mov
mov
ror
cmp
and
pusha
bound
call
jnp
sbb
or
and
xor
sub
push
lea
stc
in
mov
inc
mov
rol
bound
iret
repnz
mov
push
xor
mov
xchg
inc
sbb
stc
pop
das
imul
sub
movs
mov
sbb
cmp
mov
ins
sub
jmp
adc
(bad)
fsubr
sahf
push
xchg
fist
ss
or
into
fmul
jmp
push
jbe
mov
mov
xor
addr16
mov
cmp
loopne
or
xchg
out
jbe
lea
xchg
js
mov
inc
ret
mul
inc
cmps
test
lahf
iret
adc
test
adc
out
pop
pop
jmp
clc
ds
xchg
ret
fdivr
cdq
leave
cmp
cmp
call
xor
jp
sub
or
cwde
push
pop
mov
int3
mov
(bad)
in
test
dec
js
cmp
push
lds
sub
sbb
lods
or
in
imul
inc
ds
cwde
std
cmc
push
ret
inc
pop
loope
in
cmp
lds
inc
test
lods
cs
inc
pushf
outs
pop
aas
and
ret
out
gs
add
out
jmp
out
push
rcl
mov
adc
mov
ins
nop
scas
out
xor
xchg
dec
and
jl
std
inc
fidivr
scas
pop
lock
jp
lds
test
lods
arpl
dec
fstp
loope
inc
das
xor
dec
pop
in
push
push
mov
fild
fiadd
call
shl
cmp
mov
add
inc
push
cli
sbb
loope
pop
scas
add
jnp
sbb
retf
push
inc
pop
ins
movs
sub
jecxz
sub
out
mov
lds
cli
xor
inc
idiv
call
ins
fist
pop
mov
jge
call
and
push
loop
xchg
cmp
shr
sbb
pop
jbe
xlat
sub
in
fst
(bad)
in
adc
pusha
data16
clc
sub
mov
push
jmp
push
int3
cmp
dec
dec
daa
les
rol
push
xchg
je
cmp
clc
int
jns
mov
setle
cmovae
iret
mov
jle
pop
es
stc
mov
and
pop
hlt
push
or
cmp
clc
adc
fisttp
fwait
xchg
jmp
mov
push
jge
fdivr
cmp
mov
cmp
push
or
loop
mov
sub
dec
jae
retf
popf
div
and
mov
pusha
cli
adc
push
jne
dec
mov
mov
fwait
xor
inc
lods
sub
adc
push
push
in
mov
cmp
cmp
cli
int3
in
enter
mov
jmp
cld
mov
jae
into
dec
jae
enter
outs
aam
adc
scas
in
mov
adc
stos
mov
push
(bad)
push
imul
ret
imul
sub
push
add
jbe
int3
xchg
adc
repnz
cs
adc
stc
add
enter
pop
and
sbb
shr
mov
call
rcr
aas
repnz
fucomi
or
jns
mov
icebp
mov
ja
sub
and
push
rcl
xchg
(bad)
sbb
out
xchg
jle
in
aam
jle
(bad)
dec
cmp
jno
(bad)
in
xchg
jg
mov
sar
add
sbb
ins
xor
and
jmp
mov
popa
mov
and
iret
lock
and
push
loope
(bad)
cmp
test
cmps
inc
jnp
adc
imul
loop
push
out
cmps
cmp
xchg
leave
sar
sub
inc
xchg
add
ret
leave
outs
test
inc
and
aam
psadbw
push
adc
(bad)
fistp
pop
iret
pushf
sbb
(bad)
neg
dec
mov
dec
adc
aad
mov
rol
sbb
fwait
addr16
push
arpl
imul
and
stos
or
jbe
or
stos
leave
outs
aam
ret
movs
js
data16
pop
mov
fstp
call
lods
lds
and
(bad)
js
cmp
rcl
fstp
ja
dec
cmps
in
test
push
(bad)
out
fiadd
in
and
fsub
mov
jo
rol
sti
cmp
pop
inc
cmp
mov
imul
cmp
and
xor
push
test
push
and
jne
and
pushf
xor
sbb
or
jno
das
inc
xchg
(bad)
pusha
cmp
mov
mov
daa
mov
(bad)
sub
sub
sub
int
sub
mov
cmps
pushf
hlt
aad
clc
(bad)
pop
rol
repnz
push
xchg
or
sbb
sti
popa
mov
cwde
in
das
sub
sti
sbb
mov
push
nop
pop
push
pop
div
cld
nop
cmp
imul
std
sub
xlat
cmps
pop
mov
fidiv
mov
or
mov
jecxz
sub
push
lods
jo
jecxz
je
movs
sub
xor
sbb
in
xchg
(bad)
xor
jp
or
jecxz
sbb
test
inc
xchg
sbb
xchg
lea
dec
sbb
rcl
xor
out
clc
fsub
imul
or
mov
ja
aam
rcr
(bad)
push
mul
xchg
addr16
pop
sbb
clc
jnp
push
ja
cmc
xchg
jmp
lock
cmp
jne
dec
in
loop
movs
jb
sub
mov
fisubr
in
int
pop
jge
mov
mov
out
push
mov
mov
shl
xor
mov
inc
mov
pop
add
enter
out
enter
cmp
shl
mov
or
retf
stos
push
ins
int3
div
mov
lds
lock
xor
xchg
or
retf
pusha
mov
mov
aam
retf
ins
out
scas
lea
and
aad
push
mov
lock
xchg
pop
adc
or
mov
pop
cld
mov
test
xor
shl
xchg
cmp
pop
adc
jg
xlat
cmps
push
repz
mov
xchg
dec
jp
aaa
or
sbb
ret
mov
fldcw
arpl
ja
pop
cmc
int3
or
rcr
and
pusha
pop
pop
sbb
imul
xor
or
mov
fcmovne
ss
aas
push
fiadd
xchg
add
dec
cdq
test
sbb
cmp
(bad)
jb
outs
xchg
xchg
xor
jo
mov
imul
popf
jmp
cmp
cmp
addr16
lds
xor
rol
(bad)
out
ret
jl
cmp
inc
mov
std
sub
mov
mul
arpl
sti
xor
cmp
out
ins
push
pop
or
inc
loop
jmp
adc
loope
dec
fst
pop
adc
inc
(bad)
cmps
cwde
outs
fcom
mov
addr16
pop
movlps
(bad)
aam
dec
pop
sub
mov
mov
mov
and
sbb
rcl
cwde
icebp
inc
pop
sti
retf
enter
stos
test
inc
ret
loope
test
pop
mov
xchg
cld
mov
cmp
jne
mov
sbb
inc
ror
mov
push
adc
cmp
stc
sbb
jo
pop
mov
dec
pop
jmp
out
ins
mov
cld
pop
xor
xor
aaa
inc
xlat
inc
xor
jmp
push
fisubr
ret
push
cmp
and
add
sbb
xor
out
cmp
icebp
dec
les
add
shl
ja
push
adc
out
sahf
je
cmc
add
out
dec
xchg
popf
idiv
rcr
mov
(bad)
push
int
mov
xchg
mov
inc
xchg
dec
inc
adc
or
repz
je
(bad)
mov
xor
outs
push
fs
push
div
jns
jb
push
cmp
lock
push
mov
add
test
leave
dec
(bad)
iret
int
sbb
loope
sub
push
fidivr
test
cmp
loop
out
push
ret
out
cdq
fst
fsubr
test
cli
mov
cmc
pmulhw
jae
mov
lods
sub
gs
push
test
lods
add
test
test
std
das
jne
adc
inc
fdiv
sub
lahf
push
pop
mov
cmps
je
pop
mov
push
sub
xor
sub
loop
(bad)
mov
test
mov
or
dec
test
out
dec
jmp
push
lock
xor
fbld
cmp
jno
sar
add
dec
sub
jne
mov
xor
int3
jge
xchg
mov
icebp
mov
xor
inc
iret
mov
xor
jns
push
or
in
addr16
mov
xchg
pusha
pusha
dec
mov
mov
adc
adc
dec
xchg
cmp
cmp
mov
push
ins
jl
std
jb
push
cmp
imul
push
inc
mov
pop
cs
mov
out
inc
in
retf
jae
add
xor
loopne
mov
sbb
popa
mov
pop
outs
jecxz
dec
loopne
nop
jecxz
adc
dec
sub
(bad)
in
inc
das
fisubr
(bad)
fnsave
loopne
push
scas
loop
adc
mov
pushf
push
and
inc
das
das
adc
push
int3
and
in
icebp
(bad)
and
adc
jo
push
shl
ins
mov
sbb
xchg
std
je
pop
(bad)
sbb
xchg
jnp
xor
pop
ror
shr
out
mov
jno
sbb
xchg
push
cmp
jbe
cmp
call
daa
cmp
sbb
retf
shl
and
fs
mov
xor
dec
js
sti
jo
push
adc
lahf
(bad)
enter
and
inc
jbe
push
jbe
in
xchg
sbb
into
inc
mov
ret
addps
cmp
xchg
mov
adc
jg
in
test
sahf
add
div
adc
mov
xchg
ja
mov
or
into
bound
xchg
add
leave
sar
enter
inc
adc
lahf
test
movs
fdiv
fild
adc
addr16
mov
and
cwde
(bad)
jmp
inc
stos
retf
mov
fldenv
aas
fdivr
lods
xchg
xor
push
inc
fistp
and
push
jmp
stc
and
in
or
add
mov
jbe
adc
js
xor
call
gs
pop
jp
push
xchg
cmp
pop
push
scas
pop
add
or
jp
es
xor
dec
cmc
stos
sub
or
adc
mov
xchg
fadd
or
or
mov
cmp
shl
jecxz
mov
push
rcr
sub
ins
xchg
jns
arpl
xchg
shl
adc
lods
jle
push
jmp
movs
xchg
dec
loop
in
xchg
bound
jl
pop
inc
pop
add
cmps
pop
rcr
jmp
mov
sbb
adc
adc
push
aaa
fmul
test
xor
lds
mov
hlt
jmp
pop
sub
and
aas
sahf
sub
add
dec
aam
cmps
jno
sub
stc
cs
adc
sti
mov
cdq
outs
push
and
arpl
scas
lods
cld
mov
loop
xlat
dec
imul
push
fwait
adc
loope
jmp
sub
repz
push
pop
pop
add
pop
into
xchg
ss
fcomp
jnp
xor
arpl
ret
test
gs
xor
add
aas
xlat
push
jge
out
das
add
outs
mov
mov
push
jmp
and
cld
sbb
mov
gs
rcr
xor
or
imul
mov
pop
adc
out
(bad)
jb
cmps
rcr
mov
mov
inc
xchg
push
add
xor
mov
dec
sub
push
sbb
mov
mov
ret
out
jg
push
bound
pop
inc
pop
fwait
mov
inc
lahf
fsubr
add
xchg
fst
clc
dec
push
ret
fld
adc
inc
mov
xchg
es
mov
sbb
mov
sub
adc
dec
mov
cmps
add
push
mov
jmp
(bad)
popf
cli
cmp
in
cmp
or
mov
icebp
mov
push
das
pop
das
or
push
(bad)
aaa
loop
scas
mov
and
loopne
or
into
mov
adc
xlat
xlat
adc
jp
call
int
push
ror
xchg
into
loope
pop
add
inc
enter
scas
add
sbb
add
pushf
sub
pop
(bad)
pusha
bound
sub
push
or
sub
sub
outs
test
(bad)
(bad)
(bad)
rcr
test
jno
mov
pop
add
aaa
cmp
retf
test
or
mov
bound
pop
repnz
jl
xor
loope
lods
lods
aaa
xchg
xchg
push
cmp
addr16
push
js
hlt
(bad)
mov
mov
leave
in
jo
pop
aad
sbb
mov
mov
inc
test
dec
int3
push
popa
jne
out
and
sub
jecxz
sub
retf
xor
div
or
mov
sbb
mov
movs
mov
(bad)
mov
cmps
out
cmp
cmp
push
mov
xchg
(bad)
jne
retf
mov
ins
lods
test
mov
xor
or
addr16
int
xor
pushf
mov
mov
in
addr16
mov
cmp
xlat
inc
xchg
test
xor
inc
lods
push
aad
mov
test
int
xchg
pop
fld
cmp
pop
nop
fdivr
mov
ror
pop
xor
je
jb
rol
in
mov
add
aas
test
div
movs
mov
pop
and
jo
sub
pop
or
add
lods
pop
mov
and
addr16
repnz
fldcw
mov
and
inc
and
int3
scas
stos
ds
hlt
cmp
dec
cmp
pop
adc
cmp
(bad)
push
rol
retf
(bad)
popa
popa
mov
or
push
sbb
stc
test
xchg
jmp
lea
fbld
(bad)
cdq
mov
imul
lahf
stos
jecxz
shl
sbb
jp
push
fisttp
add
mov
inc
stc
sbb
les
js
push
dec
icebp
and
ja
imul
hlt
out
push
sti
xchg
iret
loope
popf
xchg
xchg
loope
fcos
inc
icebp
jmp
outs
shr
pop
push
sbb
and
dec
xor
jno
sub
or
adc
xchg
xchg
test
stc
movs
leave
ja
xchg
in
dec
mov
in
push
int
ins
(bad)
call
mov
sub
aaa
popf
(bad)
mov
mov
pop
mov
rol
and
sbb
xlat
cmp
ins
bound
stos
pushf
into
xor
cld
ja
inc
test
adc
mov
dec
fsub
push
int
movs
cmc
sti
clc
loop
xor
dec
sub
rcl
mov
inc
push
popw
push
lock
jns
pop
pop
adc
int3
outs
sub
pop
ror
mov
aam
push
(bad)
repnz
jle
cmc
idiv
adc
inc
jns
cmp
mov
je
into
call
movs
adc
test
fstp
mov
retf
pop
mov
fucom
out
sbb
or
add
mov
jno
push
push
mov
or
inc
xlat
push
and
repnz
retf
cmp
imul
pusha
xlat
sbb
(bad)
sbb
dec
in
(bad)
mov
aaa
push
loope
ret
push
xchg
(bad)
xor
movs
and
test
adc
add
xchg
ret
dec
call
inc
call
push
dec
imul
or
or
out
addr16
cmp
ja
mov
ins
jg
lock
cmps
mov
shl
into
lods
mov
and
retf
sub
(bad)
(bad)
pop
test
jno
cmp
leave
push
cmc
stos
into
xor
je
mov
or
and
jbe
inc
popf
shl
fcom
aam
xchg
sub
sub
xor
xor
dec
or
dec
inc
pushf
and
rol
das
rol
sub
out
mov
(bad)
test
stc
jnp
cmp
(bad)
or
xor
cwde
adc
jmp
mov
data16
or
sbb
mov
pop
jnp
in
lds
push
jmp
shr
and
mov
sbb
xor
xor
and
adc
das
shr
gs
xor
stos
movs
retf
dec
stc
add
movs
call
mov
push
mov
out
or
mov
pop
or
in
shl
sub
or
cvtps2pi
or
xchg
mov
mov
sub
cmovl
imul
push
icebp
stos
sbb
retf
sbb
pop
cmps
dec
dec
push
enter
repz
jno
and
lods
scas
neg
mov
int3
add
xchg
repnz
loope
sbb
mov
xchg
stos
pop
cmp
ret
fisttp
inc
ret
cdq
js
xlat
jecxz
push
xchg
mov
sub
es
jmp
lds
mov
or
stos
fist
cs
sbb
fwait
call
mov
cs
int
js
and
xor
lods
adc
sub
jmp
sub
sbb
sub
mov
retf
out
ja
les
jg
cdq
inc
pop
aad
xchg
inc
push
mov
stos
ret
mov
shl
mov
cmp
stos
xchg
popf
xor
mul
sar
push
sar
mov
popf
test
lock
ins
ficom
jnp
les
or
pusha
xor
ror
out
je
cmp
(bad)
push
imul
or
das
pop
cmp
int3
iret
fmul
call
shl
or
imul
or
add
fist
dec
xchg
mov
add
and
lods
dec
repnz
xchg
sub
std
cmc
xchg
add
mov
test
aad
jg
and
fnstsw
jmp
adc
lods
or
pop
lock
in
fsubr
loopne
movs
iret
fcom
lock
dec
icebp
sub
jo
xchg
fisttp
fstp
mov
fsubr
neg
std
test
xchg
adc
nop
loopne
mov
mov
fcomp
add
popf
dec
adc
out
cmp
add
adc
call
pusha
cmp
pop
call
jl
loope
movs
inc
outs
dec
lahf
pop
daa
les
or
aad
test
push
inc
loop
lea
jmp
mov
sub
pop
out
das
adc
pop
xchg
sub
inc
sbb
cmps
sub
fistp
cmp
pcmpeqd
popa
loope
hlt
loopne
dec
push
into
mov
mov
cmp
and
sub
sub
retf
sub
push
mov
or
daa
in
push
or
cmp
sbb
jle
pop
dec
mov
or
es
or
ins
fwait
or
iret
push
(bad)
jmp
or
pop
ja
push
sar
fcom
(bad)
cmp
xor
and
jbe
push
mov
xor
xchg
retf
jecxz
lock
mov
ins
fimul
mov
loop
into
leave
xor
mov
ds
jno
loopne
pop
mov
xor
enter
ins
dec
mov
cmps
push
cmp
adc
test
in
pusha
mov
sbb
shl
sbb
inc
sar
xchg
and
out
int3
outs
xchg
jle
sub
aad
les
pusha
pusha
scas
jge
inc
jae
or
and
add
push
ins
cli
out
xor
popa
dec
pusha
sbb
in
(bad)
mov
jae
sub
jbe
pop
add
ins
in
xchg
dec
pop
lods
or
bound
sahf
inc
or
inc
mov
jno
cli
fcomp
mov
nop
shl
sbb
jno
adc
mov
bound
push
(bad)
out
push
xchg
ror
push
mov
cwde
inc
jmp
add
sbb
imul
mov
les
std
je
js
pop
ret
xor
add
push
std
mov
(bad)
sbb
push
jne
ins
xchg
test
cwde
xor
mov
outs
or
jge
in
loopne
mov
jg
cmp
sub
das
cli
iret
ret
mov
sbb
adc
std
je
movs
jge
add
aad
mov
lea
ss
fdiv
test
imul
inc
jmp
push
push
push
data16
sar
gs
dec
into
daa
push
add
div
xchg
sub
mov
jl
lods
imul
ins
mov
xor
jb
add
jle
aas
jnp
xor
cmp
push
jecxz
aam
inc
outs
in
mov
shl
nop
test
aad
sub
ss
inc
pop
and
lods
cmp
push
or
scas
mov
fwait
in
stos
sbb
or
xor
aaa
add
sub
or
inc
jns
nop
mov
daa
clc
or
add
mov
or
jmp
pusha
pusha
jle
out
push
(bad)
mov
add
vpmaxub
xor
dec
xchg
jae
mov
sbb
aas
in
retf
out
ror
push
ja
ret
xchg
dec
cdq
cmp
cmp
outs
aad
cs
sbb
mov
xchg
inc
dec
add
or
or
inc
dec
mov
gs
into
in
mov
and
inc
fsub
xchg
and
mov
and
cmc
pop
cmps
dec
(bad)
stos
shl
jnp
inc
icebp
cmc
clc
fld1
(bad)
mov
sbb
push
and
inc
adc
cmp
adc
add
or
ss
xor
sar
xchg
cmp
cs
jle
add
ja
mov
int3
push
test
jg
lods
adc
sbb
mov
xchg
mov
inc
mov
lahf
push
jbe
call
xchg
(bad)
pop
adc
mov
xor
add
fucomp
add
inc
hlt
and
sar
test
scas
mov
cmp
or
and
add
push
mov
or
sub
xlat
xor
jmp
inc
cli
or
inc
js
into
ss
dec
push
cmc
jae
popf
adc
in
test
inc
mov
or
fcomp
je
pop
pop
push
loopne
xchg
mov
dec
sub
fidiv
fs
out
inc
mov
xchg
lds
or
arpl
or
lods
mov
push
test
(bad)
push
mov
cmp
add
arpl
sbb
test
pop
es
loope
add
mov
sti
pushf
push
call
stc
push
and
inc
mov
lock
add
cld
out
or
add
mov
jge
jns
js
mov
mov
mov
inc
fisttp
and
xchg
mov
data16
addr16
and
inc
scas
int
test
mov
adc
jge
jge
(bad)
mov
fdivr
jecxz
movs
push
sahf
lods
xor
frstor
addr16
pushf
xor
adc
mov
jns
mov
popf
and
(bad)
push
mov
clc
dec
inc
push
push
sbb
add
fcom
mul
loope
mov
aad
jle
rol
cli
add
or
inc
shl
test
ss
cmp
lock
cmp
scas
mov
and
loope
mov
dec
mov
icebp
fstp
add
fs
stc
xchg
inc
and
pop
add
xor
lds
mul
outs
aad
outs
ret
dec
pop
cdq
test
lods
in
push
test
dec
sbb
fisub
jle
test
xchg
push
pushf
sbb
ja
aam
mov
es
or
(bad)
in
cmp
dec
cmp
mov
jns
pop
dec
fnstsw
movs
stos
add
mov
test
adc
call
sbb
or
push
lock
stos
dec
xor
push
dec
or
aam
clc
mul
icebp
pop
xchg
ret
outs
test
mov
mov
xor
mov
jp
jnp
dec
sti
lea
test
cli
sbb
mov
(bad)
cdq
or
daa
int3
mov
icebp
xchg
sub
add
add
test
retf
pop
xor
adc
add
movs
push
sub
mov
cdq
and
retf
sbb
pop
pop
push
inc
sub
je
int
icebp
push
in
aad
jecxz
pop
mov
nop
inc
pop
jae
mov
or
sbb
pop
mov
pop
lea
or
jecxz
pop
lods
int
jmp
dec
or
dec
jno
add
inc
out
push
mul
(bad)
sub
push
jg
fs
push
mov
inc
sub
add
mov
xchg
dec
xchg
sub
jb
nop
pop
xor
lahf
(bad)
jl
loope
test
cmp
stc
clc
push
mov
xchg
or
sbb
outs
call
dec
pusha
fcmovne
mov
mov
ret
mov
dec
out
sbb
mov
int
pushf
inc
mov
or
leave
push
adc
xor
(bad)
jecxz
hlt
rol
ss
mov
add
lds
and
in
xchg
shr
aaa
stc
xchg
push
jae
test
xchg
test
xchg
xor
mov
jg
or
loopne
cmp
pop
or
and
dec
sbb
dec
ins
aaa
bound
arpl
loopne
jl
rcr
lods
cmps
sbb
dec
nop
into
and
push
rol
int
add
cld
aaa
ins
mov
mov
fs
pop
cmp
pop
or
add
(bad)
cdq
ret
rcr
stos
cs
test
pop
mov
scas
shr
(bad)
dec
out
(bad)
and
loope
jne
(bad)
adc
jmp
push
jbe
cmp
push
sub
push
cmps
adc
xchg
sub
push
(bad)
icebp
mov
push
loopne
sbb
dec
push
push
push
xor
call
sbb
sbb
sub
(bad)
sbb
jl
or
jne
imul
mov
in
mov
cmp
lds
loopne
jle
js
dec
push
jno
mov
(bad)
call
aaa
cmp
mov
dec
out
add
(bad)
ins
and
daa
into
xchg
push
movs
dec
jl
fadd
mov
(bad)
std
cdq
and
mov
sbb
pop
out
retf
cmps
pop
lahf
and
cmpxchg
push
xchg
rol
std
mov
xor
cmp
pop
retf
cmp
jb
fdivr
mov
je
jg
mov
in
jge
scas
pop
push
(bad)
jno
jae
sahf
out
shl
dec
loop
aad
fsubr
sbb
ss
push
sub
and
cmp
cli
pop
mov
clc
in
add
shl
mov
inc
(bad)
mov
dec
pop
(bad)
es
or
xor
fwait
mov
das
and
ins
(bad)
clc
imul
dec
retf
fisub
inc
xchg
add
retf
mov
cmp
out
push
aam
jmp
pop
mov
adc
inc
jmp
mov
aaa
aaa
stos
retf
in
cmp
ss
pop
xor
cli
xor
cmp
fist
jg
loop
push
bound
jnp
outs
lds
cs
movs
outs
adc
xor
and
mul
das
jb
icebp
sub
inc
mov
mov
test
push
push
cli
inc
jnp
and
jno
int3
sbb
jnp
outs
retf
mov
in
(bad)
jns
cmps
add
push
pop
into
add
push
int3
xor
jno
sbb
mov
adc
cmps
jl
in
and
ficomp
out
sbb
jg
and
retf
pop
(bad)
xchg
sbb
inc
jl
mov
xchg
dec
jmp
sub
jg
cld
jg
xor
sbb
and
xchg
loop
rcr
add
test
mov
xlat
lahf
test
cdq
fs
adc
das
xchg
adc
scas
dec
test
dec
(bad)
fidivr
xchg
je
aam
(bad)
(bad)
xchg
dec
out
popf
out
outs
adc
js
out
nop
ins
xor
sti
adc
idiv
inc
sub
ucomiss
dec
gs
pop
leave
pop
jae
xor
mov
mov
int3
sbb
sub
xor
sub
and
jmp
das
pop
pop
pop
retf
push
cmps
add
loop
xchg
mov
mov
sub
aaa
adc
mov
add
call
jle
jmp
test
fimul
add
call
pusha
aad
(bad)
push
ret
pusha
stos
test
je
ins
pop
adc
ins
push
inc
movs
(bad)
adc
push
mov
sti
jb
sti
call
and
in
in
push
pop
xchg
shr
into
daa
cmp
scas
jp
pop
and
pusha
dec
loop
out
jmp
gs
(bad)
repnz
add
sub
fcomi
cmps
arpl
push
fldcw
hlt
jb
and
xchg
out
std
shl
add
mov
sar
pushf
push
lock
jne
fstp
inc
add
push
pop
push
loope
ins
xchg
iret
mov
sbb
mov
outs
jp
je
add
jle
cmc
das
scas
stos
mov
daa
in
movs
cmc
jecxz
scas
fldcw
jb
addr16
pop
ror
shl
fild
inc
out
aam
mov
stos
pushf
es
shr
jl
add
retf
dec
cmp
xor
mov
inc
push
in
pusha
popf
jne
shl
lds
aas
daa
inc
or
inc
iret
and
push
sbb
aam
stos
mov
gs
dec
pop
xchg
fisub
xor
addr16
lods
mov
inc
imul
jae
loop
dec
out
xor
cli
mov
ss
pop
shr
test
add
sbb
push
pop
sub
adc
fild
xchg
mov
fs
ja
scas
cmp
inc
movs
loopne
add
adc
mov
cmp
icebp
mov
shr
xchg
das
outs
pop
pusha
cmp
mov
sbb
jb
add
(bad)
and
xchg
jle
jmp
mov
cwde
movs
gs
dec
ins
mov
mov
ja
xchg
popa
shl
popf
xchg
inc
adc
es
or
outs
jne
dec
adc
mov
mov
fnstenv
and
jmp
and
cld
pop
in
mov
mov
pushf
mov
pusha
out
jmp
mov
jo
loop
or
retf
imul
add
test
xor
data16
dec
push
ja
or
aas
lods
add
add
cmp
sub
mov
push
add
in
push
out
sti
pop
ret
and
shl
repz
arpl
inc
std
in
adc
xchg
jmp
dec
cmc
cmp
outs
sub
dec
mov
pop
lea
and
adc
repnz
inc
pop
fcom
jne
cmp
lds
shl
outs
mov
cmp
xlat
push
sub
mov
les
mov
and
or
movs
or
mov
add
push
(bad)
jp
fidiv
dec
xchg
sub
adc
jge
in
fcom
sub
xchg
jmp
push
imul
test
pop
idiv
out
pop
call
xor
scas
add
add
adc
pop
hlt
pop
cld
(bad)
and
fwait
jmp
jnp
push
mov
jo
addr16
lahf
mov
add
daa
ret
and
daa
test
adc
(bad)
lds
retf
lods
stos
jbe
xor
jl
out
and
fdivr
inc
jmp
movs
xlat
iret
fld
mov
ins
pop
jle
scas
xor
lods
xchg
xchg
sub
xor
cmps
clc
xchg
stos
into
inc
mov
mov
jge
jecxz
mov
inc
dec
mov
adc
jb
sub
pop
dec
inc
cmps
call
and
into
cdq
div
lea
(bad)
pop
and
mov
not
lods
mov
jo
or
mov
xchg
xchg
in
test
xor
lods
popf
and
outs
push
xchg
ret
xor
pop
ds
push
aaa
in
dec
inc
mov
mov
ss
and
cld
add
cmc
fisttp
in
xchg
sub
pop
daa
xchg
jge
cmp
pop
lahf
add
hlt
enter
sbb
aaa
adc
or
jmp
in
retf
pop
dec
xor
push
outs
lods
push
pop
pop
cmps
or
imul
fiadd
mov
cmp
pop
or
out
rcr
fnstsw
jecxz
pushf
dec
xlat
adc
fstp
int
inc
sbb
adc
inc
stos
add
pop
dec
into
adc
sahf
js
rcl
pop
or
xor
push
push
adc
out
jecxz
or
popf
push
push
out
xor
ret
or
mov
test
fmul
push
scas
in
mov
dec
outs
sub
repz
ja
rcl
adc
pop
std
and
inc
loope
fmulp
in
pop
scas
popf
inc
aas
jmp
inc
test
inc
xchg
cdq
loop
shr
movs
pop
pop
mov
or
inc
inc
pop
out
pop
inc
test
repz
push
mov
or
sti
push
sub
daa
fs
push
mov
adc
rcr
int
ret
fnstsw
push
dec
cli
inc
push
pop
dec
(bad)
leave
xchg
pop
enter
adc
jl
jp
les
inc
fisub
mov
sub
push
xchg
js
loopne
ss
movs
into
jb
test
mov
repz
shl
xchg
repnz
mov
inc
xor
cli
out
xor
ins
mov
inc
xchg
ror
and
xchg
sbb
push
or
cmp
pop
imul
inc
mov
xor
adc
add
jo
or
outs
mov
es
adc
mov
sub
bound
mov
mov
inc
mov
ins
div
xchg
rol
arpl
imul
jmp
out
pop
cmp
mov
sbb
xlat
ds
fdivr
pop
movs
mov
(bad)
lahf
cmp
movs
gs
cmc
pop
mov
or
test
mov
pushw
outs
jo
imul
fwait
out
mov
gs
sub
pop
lds
push
ficom
xor
sub
jmp
outs
sbb
sar
mov
or
mov
(bad)
loopne
fistp
jno
xchg
lahf
add
mov
dec
xor
stos
je
stos
jg
sub
xchg
xchg
lods
sbb
data16
xchg
fist
(bad)
rcr
(bad)
fwait
sti
movs
sbb
addr16
jo
loope
sub
cmp
pop
push
aad
sbb
xlat
adc
push
add
icebp
fiadd
aad
icebp
rol
or
adc
gs
cld
rol
xchg
addr16
mov
fwait
enter
(bad)
pop
movs
cli
lock
jecxz
push
shl
cs
push
mov
cli
and
in
call
mov
jno
ret
repz
mov
add
add
ja
add
lds
(bad)
repnz
push
rol
jge
in
pop
cmp
(bad)
std
pop
(bad)
or
mov
mov
mov
mov
pop
mov
xor
jp
push
mov
pop
jo
cdq
pop
lock
loopne
aam
push
push
imul
mov
cld
std
push
hlt
fwait
and
jb
jmp
(bad)
sti
jb
aas
repnz
(bad)
aaa
movs
fbstp
ins
pushf
xchg
and
mov
dec
mov
sbb
movs
lods
gs
sub
rcr
ja
enter
aam
push
cmp
outs
popa
pushf
cmc
push
sbb
ror
out
cmp
adc
lds
shl
movs
jg
icebp
shr
xchg
outs
add
cli
xor
stos
jp
mov
bound
mov
xchg
shl
sbb
mov
(bad)
loope
push
(bad)
pop
mov
out
cwde
ret
imul
shl
clc
inc
add
fs
cmp
mov
enter
out
aas
mov
cmp
and
jb
add
or
gs
gs
cmp
cmp
cmp
or
iret
and
adc
jne
add
cs
idiv
out
add
enter
and
movs
sub
add
and
xor
add
scas
fild
push
scas
pop
cmp
ret
mov
bound
pop
dec
push
ja
fidiv
or
(bad)
les
push
cld
jmp
jmp
shl
xor
xlat
es
mov
(bad)
mov
popa
add
fcomip
test
adc
data16
push
mov
imul
(bad)
dec
mov
pop
ror
stos
add
pop
mov
adc
adc
stos
push
push
out
cmps
xchg
icebp
push
mov
lock
jmp
xor
adc
mov
int
add
cs
rcl
xor
xor
pushf
and
scas
clc
cdq
push
jecxz
das
sub
inc
inc
and
sbb
xor
pop
jmp
in
cdq
scas
retf
cs
(bad)
(bad)
mov
sub
cmp
mov
in
arpl
repnz
sbb
fstp
jp
arpl
clc
jp
inc
sub
pop
pop
cmp
test
dec
shl
int
dec
imul
jmp
and
mov
push
xor
(bad)
(bad)
cmp
enter
inc
mov
test
xchg
jne
xchg
sub
das
ja
pop
adc
rcl
pusha
les
in
pop
je
push
movs
push
pand
outs
(bad)
mov
nop
inc
push
xchg
jg
cmps
inc
clc
ss
cmps
pushf
inc
icebp
push
push
xor
pop
jp
push
fidivr
xor
sti
pop
mov
movs
mov
lahf
inc
fidivr
ja
jmp
cmp
adc
mov
inc
xor
icebp
pop
nop
adc
test
mov
test
xchg
sub
cmp
adc
sub
push
push
aas
fld1
mov
jecxz
cmps
mov
enter
sub
scas
icebp
mov
scas
out
jge
les
sub
push
lods
mov
xor
lahf
cmp
mov
fsubr
lahf
pop
inc
icebp
mov
test
pop
(bad)
pusha
or
jg
and
jae
mov
mov
call
pop
scas
inc
jnp
cmp
dec
in
div
xchg
and
repz
xor
pop
push
jae
mov
(bad)
jp
jge
gs
xchg
das
inc
sub
xchg
mov
inc
gs
cmp
int3
out
ret
mov
mov
adc
jmp
and
pop
adc
loop
cmps
enter
pop
push
mov
fwait
(bad)
push
jne
xchg
outs
cmp
pop
cli
jns
int
aaa
push
inc
xbegin
pop
or
dec
stos
loope
mov
fild
sbb
into
scas
lods
adc
add
inc
pop
rcr
adc
retf
inc
mov
sbb
pop
lods
data16
mov
mov
imul
pop
test
jg
aas
xor
(bad)
xor
sub
xchg
add
fnstcw
pusha
movs
aas
fmul
out
in
mov
and
xor
mov
imul
sub
mov
data16
adc
xor
or
outs
adc
sub
push
in
jns
jo
pop
mov
outs
sbb
xchg
repz
(bad)
adc
leave
mov
loope
std
sbb
mov
leave
repz
xor
aaa
mov
xor
push
mov
add
enter
ret
iret
ror
cli
xor
bound
sub
and
add
cmps
mov
pop
shl
int3
sub
jmp
pop
jge
fnstenv
xor
nop
jbe
mov
push
adc
sub
and
xor
dec
pop
xor
sub
mov
clc
adc
cmp
ja
push
das
sub
inc
add
lock
dec
xor
inc
cmp
rcr
inc
push
sahf
dec
in
push
xchg
cmps
adc
push
cld
test
ins
push
dec
push
(bad)
sar
cmp
vfnmsub231sd
xor
mov
cmp
js
fs
aas
(bad)
aas
mov
cmc
jo
addr16
call
mov
retf
div
addr16
stos
stc
pop
mov
int3
stc
out
loop
loop
push
cdq
je
lods
(bad)
mov
lock
stc
mov
xor
mov
or
and
lods
and
retf
fsub
dec
ss
(bad)
popa
push
sbb
fcom
aaa
push
scas
ror
jne
add
stos
mov
shl
mov
lods
sub
(bad)
inc
jmp
mov
xor
xor
cmps
fwait
stos
mov
les
dec
xchg
adc
mov
mov
add
dec
pop
xchg
jnp
push
mov
xor
fld
add
jno
je
sub
or
(bad)
loope
mov
jo
sub
pop
mov
nop
aas
scas
les
repz
inc
jo
dec
mov
ins
mov
fiadd
popf
xlat
enter
dec
fdivr
xor
mov
or
or
xor
and
jge
cwde
cmp
mov
jb
fcmovnu
out
aam
or
movs
fwait
popa
ja
pop
retf
adc
(bad)
xor
xor
mov
push
jae
pop
mov
jb
mov
mov
push
jmp
bound
js
mov
jmp
ins
out
add
jge
or
or
and
mov
mov
dec
ja
jp
and
stos
sub
ror
mov
outs
cmp
or
div
jno
push
mov
xor
dec
jae
jb
fnsave
xchg
mov
add
(bad)
xor
in
aad
mov
mov
mov
mov
scas
bound
push
cmp
shl
cmp
(bad)
aad
in
mov
inc
sbb
cmps
ror
mov
or
xchg
popf
mov
cs
push
lods
mov
stc
sub
ror
xchg
stos
push
std
in
popf
repz
mov
cld
sbb
das
sbb
pop
sbb
xchg
push
inc
pushf
adc
push
and
aaa
inc
les
pop
in
(bad)
enter
xchg
mov
popf
stos
jne
paddb
clc
repz
add
outs
imul
jo
jbe
dec
xor
fsub
push
outs
push
imul
jo
nop
mov
sub
test
pop
pop
or
shl
inc
js
in
outs
mov
xchg
imul
mov
loop
mov
imul
xchg
mov
imul
sub
lahf
push
xor
push
push
(bad)
sub
mov
push
adc
xchg
daa
add
outs
aad
ret
lea
push
cmp
aaa
test
loop
fstp
cdq
mov
imul
rcr
pop
xchg
repz
push
add
(bad)
cmp
cld
xchg
add
imul
outs
stos
mov
stos
arpl
pop
sbb
jp
adc
out
call
sahf
or
inc
outs
mov
xchg
pop
fiadd
fmul
movs
cmps
push
mov
push
jmp
cmp
adc
cmp
inc
dec
fdiv
or
cmp
sbb
hlt
mov
sub
adc
ja
outs
mov
jmp
jb
lock
daa
dec
rol
shr
inc
idiv
daa
out
add
mov
xlat
jle
daa
sbb
les
ret
scas
fs
imul
ss
test
cmps
std
stc
pop
mov
(bad)
pop
jmp
hlt
test
mov
ret
cdq
pushf
fst
popa
sub
jge
mov
fistp
mov
sub
arpl
cdq
nop
add
mov
jb
ret
pushf
and
sub
popa
cs
xchg
xor
aad
push
lods
xor
xchg
mov
popa
jge
pop
mov
pop
loopne
adc
mov
iret
repnz
fidiv
jecxz
mov
push
and
je
pop
push
mov
mov
inc
mov
data16
or
or
aas
push
jmp
iret
nop
or
mov
add
out
outs
jmp
xor
dec
mov
arpl
pop
push
es
mov
inc
pop
imul
dec
clc
inc
pop
fcmovnb
repnz
jmp
test
ins
hlt
scas
arpl
jns
jne
stc
push
jne
das
xchg
iret
jae
dec
pop
dec
mov
add
pop
shl
mov
cmp
test
aas
es
retf
sbb
icebp
mov
imul
cmc
call
int
adc
mov
clc
xor
es
jmp
movs
popf
push
(bad)
cmp
(bad)
mov
imul
push
xchg
xor
adc
inc
iret
and
dec
adc
scas
xor
cmps
jmp
push
push
(bad)
sbb
popf
inc
js
not
clc
test
mov
cs
sbb
mov
shl
xchg
mov
adc
mov
cdq
jb
mov
cmps
cmp
inc
add
ficom
cmps
pop
jp
mov
cli
jg
lds
lods
sbb
(bad)
dec
mov
cmp
dec
lods
in
push
imul
inc
push
mov
imul
loop
cmp
lahf
cmps
sbb
push
out
push
push
push
ret
std
paddsw
loop
shr
jb
test
xor
jge
dec
inc
les
test
inc
std
mov
mov
xchg
scas
pop
aas
lahf
clc
cdq
retf
fild
add
and
data16
(bad)
sbb
xor
imul
fcom
push
jmp
add
lds
mul
jge
push
mov
jp
aad
or
xchg
mov
stc
mov
ss
cmps
inc
pop
inc
loop
sbb
cmp
in
shl
mov
dec
jne
fidivr
and
sub
ins
imul
in
icebp
(bad)
mov
push
(bad)
xor
call
inc
ja
clc
adc
pop
and
and
cmc
hlt
and
pop
ret
aam
std
dec
pop
push
outs
mov
mov
dec
jge
ins
jecxz
into
test
ins
dec
mov
cmp
fwait
cdq
addr16
packuswb
push
dec
jbe
pop
retf
cmps
ret
xchg
test
cmps
mov
inc
mov
mov
sub
hlt
lahf
sbb
ss
mov
add
push
test
pop
dec
inc
fistp
pop
shl
popa
pop
cmps
sub
(bad)
enter
jge
out
push
mov
mov
or
hlt
ja
lock
sar
retf
mov
mov
popa
stos
scas
mov
mov
rcl
out
bound
shr
inc
movs
outs
xchg
rcr
mov
ficomp
jl
mov
fnclex
repz
(bad)
jecxz
sub
sbb
ror
aaa
xchg
pop
into
hlt
cs
push
(bad)
jbe
sbb
fs
mov
and
xlat
lods
xchg
aad
xor
pop
aam
mov
int
cmps
rcl
sahf
inc
push
adc
pop
les
jmp
imul
in
sub
add
call
stos
cmp
dec
dec
leave
xor
jno
fwait
lock
in
jmp
sbb
mov
retf
jmp
icebp
cmp
inc
xor
jle
sbb
adc
cmp
jae
xchg
adc
ins
mov
mov
div
ins
sub
int
sar
ss
mov
sbb
push
icebp
sub
pop
xor
aad
jl
ja
popaw
jecxz
call
xor
pop
out
pop
xor
retf
(bad)
xchg
rcl
jne
aam
ret
cmp
push
out
sbb
jae
push
cwde
mov
sub
jno
(bad)
cmp
out
cld
nop
sub
fbld
int3
call
pop
lahf
ja
cli
or
inc
jecxz
xor
sahf
icebp
cmp
mov
inc
mov
jg
add
ja
imul
out
and
fiadd
and
push
(bad)
leave
inc
hlt
sub
jo
pop
mov
das
adc
mov
loopne
sbb
xchg
cmp
into
pop
xchg
sbb
pop
xor
sbb
fldenv
adc
test
push
add
in
(bad)
sub
adc
dec
inc
cdq
imul
jmp
cmp
fs
into
popf
mov
pop
in
lods
dec
movs
xchg
pusha
xchg
push
xor
jmp
or
cmp
into
jle
clc
fstp
jnp
dec
fdivr
mov
aaa
jbe
mov
mov
or
xchg
mov
ins
out
jl
jo
and
dec
shl
leave
dec
enter
scas
dec
push
sub
rcr
bound
test
gs
pop
(bad)
clc
mov
xchg
mov
jbe
xor
call
inc
pop
inc
inc
(bad)
xor
push
sti
daa
push
int
cmp
add
push
retf
in
ins
cmp
push
outs
push
iret
push
add
out
repz
sbb
test
test
addr16
jae
mov
push
scas
loopne
in
adc
lods
in
or
xchg
mov
repz
mov
cmc
or
mov
mov
jg
xchg
movs
call
fs
pop
xor
imul
push
inc
add
out
fcomp
mov
lods
or
push
ficomp
add
int
adc
dec
pop
mov
jnp
lds
std
xchg
push
mov
pop
clc
mov
mov
out
and
cmp
addr16
test
sub
outs
loopne
xor
inc
sti
and
shr
cmp
xchg
(bad)
pop
cmp
inc
xchg
cld
jae
or
cmp
xor
mov
in
xlat
dec
push
pop
dec
shl
test
fcomp
mov
inc
pshufw
pop
push
xchg
mov
or
xor
dec
jne
adc
dec
inc
fwait
lods
mov
inc
lods
fbstp
mov
sbb
push
cwde
out
nop
es
inc
xor
cmps
test
and
in
js
dec
stos
das
xchg
inc
into
das
enter
dec
gs
addr16
cs
sbb
sub
sahf
ja
sub
sub
fs
inc
jmp
repnz
xchg
int3
mov
out
cmp
sub
movs
enter
out
and
jmp
adc
js
xor
rol
dec
jecxz
jmp
test
out
mov
push
inc
xchg
bound
pop
icebp
test
sbb
add
sbb
pop
int3
sub
call
pop
and
add
(bad)
jns
shr
retf
in
pop
jp
ret
xor
jb
retf
adc
or
stos
into
pop
jmp
inc
outs
retf
dec
(bad)
out
push
daa
in
and
cmp
dec
loopne
dec
int
inc
repnz
dec
(bad)
jmp
jno
jle
add
jnp
adc
mov
mov
adc
test
mov
movs
cmp
iret
sub
int
lods
or
rcr
xchg
fwait
test
xor
es
push
(bad)
repz
push
sbb
add
jmp
inc
or
loop
add
inc
fdivrp
cmp
nop
mov
inc
mov
sahf
stos
mov
mov
push
out
test
mov
mov
in
ins
mov
std
movs
cmps
mov
sbb
pop
in
mov
out
add
inc
repnz
lahf
repz
hlt
lods
and
repz
mov
sbb
cmovge
into
enter
inc
jp
neg
dec
rcl
lods
dec
adc
pop
les
enter
adc
dec
cs
pop
(bad)
cmc
int
fsub
mov
push
sbb
add
mov
test
push
xor
xor
sbb
ret
fcomp
fistp
nop
les
add
push
jb
imul
cmp
jnp
sahf
mov
out
outs
adc
sub
push
(bad)
loope
push
cwde
sub
and
rcr
in
push
leave
sbb
out
sub
adc
lods
jns
gs
adc
jno
lea
sbb
popf
bswap
fprem
add
dec
xor
mov
dec
scas
outs
adc
leave
mov
and
mov
add
fwait
dec
mov
clc
int3
movs
cmp
xor
in
in
daa
adc
sub
repz
adc
mov
pop
ficomp
xchg
inc
ins
pop
mov
xchg
mov
fdivr
sub
popf
xor
mov
mov
xor
xchg
jae
pop
adc
or
mov
dec
add
cld
bound
xor
cmp
add
enter
pop
es
outs
lods
shl
addr16
aad
mov
xchg
inc
mov
cdq
add
inc
jmp
in
test
adc
push
or
mov
xchg
jmp
dec
push
sub
pop
loop
cmps
cmp
retf
sub
jmp
cs
test
movs
in
in
pusha
data16
mov
inc
jmp
and
popa
cmps
leave
lahf
dec
pop
cmp
pusha
dec
and
jge
mov
iret
call
out
jg
sti
in
jno
idiv
or
push
xchg
mov
mov
sub
loop
or
or
mov
cmc
pop
adc
rol
je
sub
out
add
mov
sbb
icebp
ss
push
adc
or
inc
push
or
movs
stc
mov
cmp
xor
es
mov
stc
ret
call
test
jmp
mov
jbe
fbstp
fld
jbe
cmps
pop
jnp
xlat
add
mov
inc
sar
adc
push
push
adc
push
ror
into
xchg
xor
mov
scas
(bad)
sbb
pop
aad
shr
shr
test
in
or
and
mov
adc
shl
(bad)
adc
into
xchg
adc
mov
xor
inc
sub
pop
(bad)
mov
lds
stos
ret
cli
mov
shr
aaa
setl
dec
push
sbb
sub
imul
jne
add
and
xor
mov
test
mov
mov
cwde
mov
mov
aas
dec
xchg
stos
adc
(bad)
xor
and
leave
clc
ret
xor
jle
or
mov
xor
jp
pop
mov
pop
or
push
push
push
cdq
nop
cmps
jle
mov
pop
sub
pop
xor
sahf
mov
sub
icebp
test
inc
mov
ja
dec
cwde
adc
std
sbb
addr16
sbb
cdq
in
mov
loope
in
je
dec
mov
retf
xchg
ret
cli
je
mov
not
pop
cdq
loope
sbb
jmp
and
inc
pop
test
jbe
or
mov
cdq
out
xor
fild
or
pop
pop
fdivr
xchg
daa
ins
add
dec
fcmovb
add
lahf
out
das
ror
or
sub
fisubr
add
in
das
push
adc
out
call
pop
pop
push
adc
fs
xchg
(bad)
jg
adc
in
xchg
mov
xchg
clc
leave
sbb
bound
dec
jmp
das
inc
mov
aas
mov
mov
mov
jno
mov
cwde
xchg
dec
aad
jns
push
push
jp
fistp
bound
ror
xchg
xchg
push
and
sub
xchg
inc
aaa
cmp
mov
repz
xchg
mov
leave
pop
in
lods
cdq
retf
iret
fdiv
sub
fdivr
pop
repnz
push
outs
outs
lods
inc
adc
mov
out
xor
ret
xor
pop
mov
push
mov
sub
xor
push
cmp
or
fnstsw
icebp
jo
or
in
mov
in
push
and
mov
imul
push
pop
ds
xor
stc
inc
scas
sub
adc
call
sub
push
jne
std
shl
sbb
(bad)
ins
add
jne
sub
iret
pop
jge
out
push
in
(bad)
shr
nop
repz
stc
push
push
jle
mov
rcl
mov
sahf
je
mov
ret
add
test
aaa
in
ror
xchg
aad
pop
sbb
sahf
imul
das
xchg
mov
movs
lds
inc
rol
push
dec
popf
pop
retf
mov
jp
cmp
rcr
out
or
call
xor
push
ror
adc
retf
ds
xchg
pop
leave
add
fdiv
inc
in
dec
repnz
or
movs
pop
std
(bad)
mov
movs
mov
ficomp
popf
push
sbb
pop
sub
or
scas
mov
test
outs
shl
adc
mov
push
jmp
not
imul
repnz
xor
iret
mov
shl
dec
call
inc
idiv
iret
dec
or
sub
enter
mov
xchg
sbb
add
mov
loop
ja
or
push
xlat
or
mov
test
aad
and
rcr
enter
ds
dec
fisub
lods
ins
fsubr
aaa
inc
mov
add
push
jno
sbb
adc
(bad)
out
adc
adc
and
sbb
nop
cmp
jl
dec
fwait
sbb
xchg
or
inc
sbb
push
in
mov
lea
mov
cmp
repz
ja
adc
mov
xchg
or
jmp
sub
jne
popa
inc
mov
jle
and
int
outs
pop
test
fwait
dec
mov
call
cld
adc
lods
popf
adc
and
sbb
aam
xchg
enter
add
std
or
movs
(bad)
push
add
ror
and
ret
test
mov
and
(bad)
jg
cs
je
scas
test
push
icebp
or
imul
out
fcmovnb
mov
frstor
nop
ror
fcom
dec
cmc
cmps
lea
icebp
js
pop
in
ret
push
out
retf
jmp
and
sahf
imul
ror
mov
fwait
rol
inc
scas
cmc
nop
fld
and
ror
loopne
mov
in
sub
das
and
jle
ficom
rcl
fld
push
(bad)
cmp
or
add
pop
push
and
cli
sub
lock
jg
(bad)
push
daa
jnp
xor
pushf
jbe
fwait
jmp
adc
lds
adc
loop
mov
cmps
ins
lock
dec
fld
ret
xrelease
mov
fsubr
jnp
cmp
mov
mov
in
pop
push
sub
push
shr
dec
mov
push
int3
je
icebp
retf
mov
xor
mov
lods
dec
sahf
data16
arpl
js
adc
fist
stos
sti
or
sti
sub
cmps
pop
mov
inc
mov
mov
add
in
mov
xchg
call
sbb
dec
gs
pushf
pop
shl
int3
inc
and
cwde
fadd
shl
pop
(bad)
lods
adc
mov
test
and
jecxz
jbe
adc
ds
(bad)
xchg
pop
dec
fcmove
stc
(bad)
xchg
inc
sbb
movs
in
or
xor
cmc
cmc
dec
stos
xchg
retf
cmp
mov
and
mov
cmc
(bad)
sub
imul
xor
xlat
push
and
inc
(bad)
(bad)
pop
add
push
aad
push
sahf
push
les
and
int3
adc
jmp
loop
jmp
ss
or
test
pop
add
enter
ret
and
mov
mov
sbb
mov
xchg
jae
adc
loope
(bad)
push
ret
or
repz
xchg
js
mov
xchg
lock
cmc
repnz
add
adc
mov
xchg
in
mov
mov
xchg
cmp
cmp
sub
stc
or
and
sbb
jl
adc
sar
fsub
clc
mov
sbb
cmp
dec
jmp
adc
call
add
movs
pop
adc
sub
add
jno
mov
jg
fs
sub
mov
loop
stc
adc
fwait
adc
std
(bad)
or
out
les
stos
nop
xchg
dec
inc
pushf
shl
pop
movs
out
fcmovnbe
cmp
pop
or
imul
int3
or
scas
clc
mov
cmp
xor
(bad)
mov
mov
mov
push
scas
pop
cld
dec
fsub
bound
imul
push
jbe
xchg
mov
gs
sbb
xchg
rep
add
xchg
adc
stos
fdivr
pop
add
ret
add
out
mov
pop
inc
mov
adc
push
iret
push
hlt
mov
fld
sbb
(bad)
out
pop
jno
dec
dec
pop
inc
mov
gs
int3
fmul
adc
outs
aas
(bad)
mov
mov
mov
xchg
and
ret
pop
(bad)
scas
xchg
sbb
and
aas
cmp
xor
ret
push
retf
jle
in
pop
ins
aas
mov
ds
pop
fs
push
inc
mov
adc
lock
cld
cmp
popf
stos
jo
cli
pop
lea
shl
pop
adc
lahf
inc
stc
inc
movs
xchg
fisubr
sbb
cmps
sahf
sub
mov
je
adc
leave
test
je
or
sub
fs
cmp
sahf
test
mov
out
shl
cmp
outs
mov
adc
sbb
imul
or
dec
add
std
stc
or
nop
add
ins
xchg
gs
sub
data16
call
nop
xchg
jmp
cmp
xchg
mov
adc
jmp
pop
mov
sub
rcl
jb
jo
aad
int3
or
cmps
push
push
imul
loopne
mov
pop
arpl
and
jbe
or
jmp
dec
add
pop
loop
push
out
inc
or
mov
in
xchg
stc
add
or
push
aad
jo
out
mov
xchg
add
pop
mov
inc
or
dec
leave
sbb
and
je
icebp
imul
push
jmp
rol
jno
pushf
mov
fdiv
mov
imul
int
mov
enter
pusha
add
push
adc
fdivr
shl
(bad)
pop
(bad)
inc
mov
cmps
mov
dec
sbb
mov
pop
push
cld
sbb
repz
sub
ret
xor
aaa
xchg
inc
pop
jmp
fsub
clc
clc
cmps
sub
mov
adc
arpl
in
cmp
mov
ja
xchg
leave
xlat
push
(bad)
dec
pop
out
mov
into
mov
fcom
jmp
or
sbb
mov
dec
mov
fnstsw
in
int3
lods
pop
shr
aaa
jno
(bad)
pop
push
in
push
xchg
fild
mov
adc
cmps
adc
fwait
sar
and
push
push
je
mov
cwde
repz
sub
mov
sub
push
data16
fs
mov
sbb
jmp
add
rol
or
xor
inc
je
adc
scas
iret
mov
leave
mov
xlat
xor
xor
(bad)
cmps
jno
inc
lods
cdq
dec
xchg
pop
push
imul
jmp
inc
pop
mov
sub
xor
pop
(bad)
cld
cmp
sahf
and
ret
cdq
or
popf
test
push
mov
bound
xchg
rcr
and
dec
pop
xchg
not
push
pushf
xor
mov
pop
mov
bound
loop
xchg
add
sub
in
sub
loop
lock
mov
and
fsubr
and
xchg
stos
ds
iret
in
lock
mov
iret
inc
bound
dec
cli
sub
call
pop
adc
(bad)
push
sbb
aaa
ins
xchg
jno
cld
adc
or
loop
sub
aam
push
lods
repnz
inc
mov
jns
and
xor
mov
sub
test
xor
xor
push
pop
ffreep
mov
arpl
mov
jne
jbe
movs
jge
sahf
movs
stos
inc
mov
neg
rol
cmp
xor
pop
inc
call
fcmovb
pop
shr
jmp
in
sub
pop
push
inc
mov
rol
push
test
dec
mov
inc
add
clc
and
sahf
icebp
add
sub
hlt
fidivr
mov
test
cmp
jmp
inc
push
repz
dec
aaa
and
jmp
xchg
mov
add
ins
ins
pop
imul
mov
je
aad
outs
retf
and
(bad)
in
sar
inc
mov
adc
js
in
repz
jle
push
push
lds
in
xchg
sub
loopne
call
pushf
cwde
scas
mov
(bad)
outs
sbb
mov
outs
outs
outs
loopne
mov
out
push
and
inc
jle
and
dec
ror
sbb
jb
inc
add
mov
adc
mov
in
jmp
mov
pop
icebp
push
movs
jmp
mov
repz
push
nop
test
test
cs
pop
xor
push
add
sbb
xlat
mov
and
or
idiv
sub
scas
lock
fstp
jmp
mov
loop
xor
mov
pop
out
adc
clc
sub
shr
cmps
(bad)
xchg
dec
xlat
adc
xchg
and
mov
mov
call
and
dec
lds
dec
aam
fcom
icebp
test
or
rcl
sbb
mov
sahf
and
jno
mov
int3
repz
mov
outs
xor
popa
pop
sbb
enter
fimul
jns
scas
push
sbb
lock
arpl
mov
das
pop
sub
sub
inc
test
pop
test
xchg
iret
push
test
aas
or
mov
add
sbb
cld
cmc
inc
mov
test
mov
mov
movs
mov
loop
xor
aad
pop
ret
rcl
call
(bad)
mov
dec
arpl
rol
call
scas
xor
mov
push
xor
and
test
mov
inc
and
clc
lahf
scas
adc
movs
sbb
push
mov
std
es
mov
jno
pushw
and
retf
adc
sub
mov
das
pop
pop
cmp
adc
ds
or
sbb
jb
(bad)
(bad)
(bad)
loope
dec
int
mov
rcr
scas
mov
test
in
div
sti
sbb
int3
out
xor
xchg
xchg
fdivr
into
fwait
cs
cmc
cmp
xor
dec
pop
jne
shr
sub
mov
hlt
loop
(bad)
sub
jge
mov
es
mov
cmp
jmp
adc
pop
gs
fs
dec
int3
add
cdq
loopne
xlat
cmp
repz
jne
push
jp
pop
mov
rol
arpl
outs
sub
sub
js
xor
sub
push
mov
iret
xor
mov
cdq
mov
lea
adc
mov
mov
pop
das
cmp
dec
adc
pop
daa
mov
and
retf
pop
mov
cwde
mov
popf
fimul
mov
push
lahf
fs
repnz
aam
(bad)
cli
sub
or
xchg
les
mov
mov
test
sub
cli
call
(bad)
xchg
adc
aaa
cli
mov
sub
repnz
mov
arpl
cs
cld
outs
pushf
shl
or
add
pop
or
cs
clc
mov
sbb
cmps
loop
sbb
jmp
and
jno
(bad)
adc
mov
cmp
push
ins
or
and
dec
or
xor
mov
push
movs
icebp
ss
sbb
sbb
xor
adc
dec
(bad)
ss
out
iret
cmp
ss
sub
out
dec
mul
rol
fs
xor
lods
mov
mov
div
dec
push
mov
push
(bad)
outs
jge
inc
inc
movs
(bad)
rol
xor
pop
inc
adc
ret
jmp
clc
sub
mov
ins
pop
adc
popf
call
cdq
and
mov
pop
add
sahf
pop
inc
retf
push
cmp
or
outs
xchg
jnp
sub
push
popf
retf
sbb
sub
inc
fadd
in
jle
mov
cmps
mov
std
scas
push
lock
and
ins
stos
in
lds
rcr
inc
mov
cwde
mov
or
and
sub
inc
ins
in
xor
xor
mov
xchg
cmp
mov
xor
pop
loopne
and
movs
fild
jg
pop
bound
sbb
inc
xchg
mov
inc
mov
jmp
mov
test
add
ins
or
jecxz
dec
leave
xor
sub
add
enter
sub
fldcw
out
lahf
retf
rcr
sub
mov
leave
or
mov
mov
cmp
sub
or
bound
cmp
ret
and
imul
add
loope
pop
add
ror
jge
aaa
cmp
xchg
xor
inc
jae
jbe
mov
rcl
mov
cmp
sbb
pop
hlt
xchg
inc
and
add
aad
inc
(bad)
das
ins
mov
jns
pop
out
ins
int3
push
or
mov
imul
out
cmp
push
or
sbb
repz
shl
and
mov
pusha
add
cmp
cmps
mov
daa
push
fldcw
fsub
hlt
sbb
sbb
jmp
mov
push
xchg
jns
out
cmc
test
jp
sub
pop
jg
ins
xchg
(bad)
cmps
dec
pop
add
dec
inc
mov
shl
dec
int3
out
push
lds
jg
repz
test
fmul
xchg
jbe
in
call
ds
mov
movs
and
push
and
lods
outs
scas
loop
es
pushf
pop
stc
scas
jae
adc
jb
inc
aad
stos
sub
push
test
bound
pop
mov
sbb
data16
nop
js
das
cmp
sub
into
aas
xchg
mov
aaa
adc
and
out
xchg
jl
or
add
mov
pop
pop
mov
inc
cmp
(bad)
xchg
xlat
mov
je
mov
rcl
mov
mov
and
rcr
test
xor
pop
ins
mov
fistp
fdivp
and
push
sub
ins
pushf
aas
or
pop
cmc
xor
sub
jae
or
dec
adc
lods
pop
popa
ja
pop
lea
fs
test
inc
imul
inc
aam
mov
jecxz
xchg
rol
jle
add
lea
cmps
adc
out
adc
jl
pop
xchg
retf
sub
mov
nop
shr
xor
loopne
mov
lods
fild
pop
adc
lahf
lahf
mov
inc
fs
rcl
(bad)
jmp
rcl
add
cmps
sub
clc
fistp
sbb
scas
scas
push
inc
lds
inc
in
ret
xor
jmp
aaa
sbb
mov
ins
inc
dec
jns
xchg
jecxz
adc
mov
(bad)
repz
push
jmp
mov
adc
add
mov
adc
sub
cmp
mov
push
in
xor
loop
(bad)
mov
xor
dec
mov
sub
loope
inc
sub
loopne
mov
push
aam
push
test
dec
mov
mov
mov
mov
lods
or
call
mov
xor
dec
fidiv
add
lds
in
adc
cli
repnz
popf
mov
and
mov
sub
call
xchg
movs
jno
int
cmp
sub
sub
(bad)
mov
(bad)
mov
sub
xlat
push
sti
adc
dec
test
adc
pop
stc
mov
ss
or
adc
les
cli
dec
sub
push
cmp
jp
in
stos
mov
push
mov
and
lds
pop
dec
mov
adc
inc
iret
sub
dec
dec
mov
pop
pop
fdivr
out
in
dec
dec
pushf
adc
mov
daa
rcr
out
and
or
les
sbb
jl
dec
mov
pop
or
xor
retf
xchg
mov
mov
mov
dec
popf
retf
xor
sbb
sub
cmc
inc
not
cmp
jle
bound
fadd
add
into
dec
xchg
push
lods
push
arpl
dec
les
adc
push
jb
sahf
or
rol
les
mov
sbb
jb
arpl
pusha
ret
(bad)
shr
mov
sti
jae
jns
adc
aam
and
push
stos
cmps
adc
(bad)
xor
pop
mov
and
or
std
dec
cmp
(bad)
movs
mov
shl
out
iret
out
fnstcw
outs
daa
jb
sub
imul
fs
xlat
sbb
mov
push
push
dec
mov
inc
xlat
out
clc
or
or
mov
dec
ja
inc
(bad)
dec
inc
xor
mov
fst
inc
mov
cmp
scas
scas
push
out
mov
out
adc
sub
pop
stc
jae
xor
dec
test
fstp
test
sbb
gs
into
fmul
shl
adc
jmp
fsubp
cmp
add
pop
ret
frstor
clc
mov
in
adc
in
imul
imul
sbb
call
lahf
and
push
jg
xlat
and
adc
icebp
add
(bad)
jne
retf
ins
frstor
enter
push
push
pushf
push
pop
mov
cwde
(bad)
in
pushf
adc
test
mov
inc
add
(bad)
or
cmc
in
xor
aam
ss
xchg
adc
and
adc
sahf
add
add
mov
xor
jnp
stos
sbb
jno
jnp
pop
xor
ret
pop
mov
aam
jns
mov
enter
jmp
mov
push
enter
int3
xchg
mov
adc
dec
jle
push
push
ficomp
(bad)
xchg
sar
(bad)
test
pop
add
pop
sub
xchg
fisttp
in
sbb
add
sar
movs
mov
and
rol
cld
sbb
stc
mov
sub
psllq
jecxz
int
shl
push
mov
stc
cwde
add
and
mov
clc
aad
in
mov
adc
xor
(bad)
data16
pop
mov
push
(bad)
pop
popf
lahf
call
and
jb
cmp
sub
pusha
test
push
xlat
int
inc
pushf
or
in
dec
out
push
and
test
pop
or
(bad)
mov
mov
jge
out
sbb
fcmovnb
pusha
nop
mov
stos
cld
mov
sbb
pop
or
mov
call
imul
pop
dec
sub
cwde
mov
hlt
bound
ret
lahf
mov
add
or
cmp
push
jle
inc
xchg
mov
and
jmp
sub
mov
fcmovbe
test
movs
rcr
or
cmovle
mov
arpl
sub
xchg
mov
mov
push
test
dec
movs
xor
enter
sbb
rcl
mov
inc
and
ret
pop
jle
ds
jo
(bad)
mov
mov
movs
jecxz
mov
or
fldcw
rol
dec
dec
outs
pop
scas
xchg
rcl
add
fisttp
je
xchg
add
sbb
xchg
mov
jo
int3
dec
ror
mov
and
test
fdiv
aam
cmp
pop
rcr
jp
pop
xchg
inc
jbe
inc
jl
sbb
mov
sub
sbb
scas
mov
mov
lods
rcl
movs
push
rol
jecxz
lods
and
inc
xchg
call
sbb
pop
sub
push
sbb
shl
repz
push
dec
pop
movs
and
push
cmc
or
ret
or
jb
xor
xchg
ins
mov
ja
adc
rol
and
and
repz
imul
mov
dec
inc
xchg
inc
repz
jo
jae
ret
mov
jp
sbb
or
dec
cmps
mov
dec
repz
pop
stos
std
jbe
imul
sub
push
imul
outs
ror
jmp
jg
cld
outs
call
pop
test
repnz
addr16
xor
cs
aaa
pop
push
sbb
lods
fmul
dec
out
xadd
je
push
pop
pop
stc
repz
loop
pop
cld
fwait
mov
cmp
inc
data16
jo
adc
push
mov
arpl
rol
popa
stos
inc
inc
scas
stos
sbb
mov
pop
(bad)
jmp
xor
mov
jbe
les
repnz
push
dec
add
lock
sar
(bad)
loopne
ror
mov
sbb
mov
out
adc
jl
add
inc
jp
clc
pop
stos
pop
mov
cld
mov
(bad)
and
sub
or
add
loopne
jge
jle
xchg
aas
mov
fimul
mov
cs
daa
mov
jo
jle
ins
push
xor
push
pushf
push
data16
fdiv
adc
and
sbb
shl
sbb
mul
lods
fcom
jmp
push
pop
fxtract
mov
add
push
cdq
dec
sub
dec
cmp
push
mov
jle
les
pop
neg
mov
jg
(bad)
es
or
xchg
jge
out
add
pushf
in
mov
lock
leave
add
mov
cwde
icebp
std
mov
popf
sub
sub
daa
retf
fs
cmp
pop
mov
mov
mov
jle
in
cs
(bad)
fisttp
aad
mov
mov
mov
clc
nop
cwde
mov
test
cmp
dec
fbld
clc
jle
jge
add
enter
rcr
sbb
es
pop
sub
xchg
fdiv
lds
sbb
push
push
mov
ja
push
jmp
jmp
jl
aam
or
cld
mov
jne
pusha
mov
cmc
xchg
psubusw
xchg
dec
sbb
cli
mov
or
cmp
push
fxtract
lea
sbb
push
leave
inc
mov
or
movs
xor
mov
xchg
clc
bound
sub
jmp
mul
cmps
(bad)
fisttp
rcr
inc
push
imul
cdq
dec
js
mov
push
hlt
fdivr
jae
int3
and
sbb
je
int
mov
jl
mov
push
push
push
aas
pop
sub
jg
mov
call
xlat
sbb
clc
ror
xor
inc
cmc
pushf
dec
(bad)
in
test
add
push
outs
lds
fwait
js
and
data16
inc
sub
lods
xor
sub
stos
retf
push
lods
leave
pop
loope
sti
js
jl
rcl
push
pop
xchg
hlt
movs
mov
fld
or
mov
adc
int
inc
pop
and
jns
lock
fcomp
hlt
mov
adc
pop
and
push
lods
(bad)
aas
sbb
or
repnz
mov
out
ins
dec
stos
jb
(bad)
js
jae
cmc
pop
xchg
sbb
fiadd
imul
call
ficomp
jb
clc
test
loope
jmp
jge
xlat
mov
jle
add
jle
mov
pusha
push
test
fs
inc
pop
dec
je
push
sbb
retf
sub
push
fwait
jmp
push
xchg
xor
xchg
std
movs
or
inc
movs
xchg
rcl
test
mov
(bad)
fistp
adc
jmp
cmps
sahf
jno
bound
mov
pop
loop
iret
push
mov
sti
jb
jp
into
(bad)
jo
pop
test
(bad)
inc
or
call
sub
pop
lods
sar
inc
dec
pushf
xor
push
lock
outs
(bad)
fs
pop
jecxz
shl
sbb
jno
inc
mov
sahf
pop
push
cmp
repnz
jge
mov
and
mov
add
mov
fidivr
scas
xchg
mov
add
add
clc
loop
sti
xchg
retf
xor
cmp
jg
dec
mov
pop
std
imul
mov
sti
dec
in
mul
xchg
inc
push
jge
ins
cld
fdivr
ror
adc
(bad)
sar
loopne
or
arpl
bound
pop
add
in
mov
mov
cmp
mov
aad
(bad)
(bad)
fwait
jecxz
(bad)
es
sti
addr16
mov
inc
loope
adc
bound
jns
and
neg
out
pop
mov
and
jbe
(bad)
shr
ins
stos
aam
test
lahf
push
fistp
mov
inc
movs
and
cdq
(bad)
cld
mov
jmp
inc
ret
inc
jle
stos
iret
pushf
push
mov
jecxz
jb
or
inc
das
das
ins
sub
adc
pusha
pop
cmps
jge
dec
sub
adc
outs
lock
mov
out
scas
inc
enter
jmp
mov
lahf
mov
mov
ss
leave
mov
mov
mov
adc
push
icebp
hlt
ins
cmc
inc
pop
and
xor
sub
push
icebp
pop
dec
xor
mov
and
out
nop
push
rcl
mov
test
ins
mov
inc
cmp
call
mov
and
mov
dec
bound
scas
pop
push
push
pop
jmp
xchg
mov
loope
mov
outs
pop
push
xor
dec
pop
push
pusha
ret
fistp
and
(bad)
aam
lock
mov
xor
mov
(bad)
cmp
jae
vpsrlq
push
lahf
inc
sub
mov
adc
ss
dec
mov
ret
jbe
or
push
sar
movs
jno
sbb
push
cld
add
mov
fbld
ins
pop
fnstsw
sbb
add
jge
lods
sub
mov
xchg
std
jge
sbb
mov
test
in
adc
or
xchg
mov
push
pop
mov
xchg
xchg
sub
mov
sbb
dec
or
pop
mov
jae
push
sbb
inc
or
iret
xchg
out
pop
fnstcw
dec
aad
cli
jp
mov
ds
mov
aas
xchg
scas
jl
call
jmp
mov
repnz
mov
outs
mov
xchg
cmp
inc
aaa
and
fstp
stos
xor
pop
loop
(bad)
mov
cmp
xor
mov
adc
cwde
fsubp
sti
xchg
mov
and
cmp
in
push
xchg
jmp
sub
mov
inc
por
pop
sbb
push
cmp
mov
ror
sti
icebp
add
sbb
bound
fisub
jg
xchg
(bad)
das
mov
scas
xor
scas
cs
iret
pop
pop
leave
ret
push
scas
and
clc
(bad)
(bad)
popf
nop
aas
xor
inc
add
(bad)
mov
mov
shr
mov
mov
movs
jbe
leave
xchg
inc
and
mov
mov
jmp
dec
cmp
cwde
call
aad
(bad)
inc
(bad)
lock
movs
mov
adc
sbb
mov
inc
pop
fnsave
lahf
inc
adc
movs
leave
mov
push
dec
mov
mov
jecxz
arpl
(bad)
cmp
jae
or
xor
add
xlat
add
leave
shr
mov
in
aad
jnp
fwait
cld
hlt
push
mov
push
aas
imul
push
dec
stos
push
ja
xor
loop
push
ret
repz
or
fwait
jbe
int
mov
into
fdiv
mov
daa
stc
les
gs
ss
sbb
fdivrp
dec
dec
dec
int
cmp
push
cmps
out
fidivr
es
pop
jns
scas
xchg
or
push
xchg
hlt
xor
test
sub
cli
mov
xor
or
(bad)
movs
lds
cmp
repz
in
xor
dec
les
es
icebp
push
push
mov
or
arpl
outs
push
inc
data16
mov
sar
(bad)
frstor
mov
mov
outs
sti
cmp
loopne
mov
adc
into
xor
xchg
dec
jne
and
lods
mov
stc
xchg
add
jae
jl
and
mov
fs
sub
mov
push
repz
in
inc
sub
mov
mov
xchg
sbb
iret
sbb
xchg
sub
cmp
outs
icebp
xor
mov
jnp
or
sub
push
mov
daa
cs
jle
sbb
inc
xor
adc
cmp
nop
(bad)
jle
bound
mov
lods
sbb
push
push
out
sub
dec
cmc
or
xor
or
imul
pushf
jmp
or
or
imul
mov
ss
es
push
mov
add
cmp
xchg
scas
icebp
dec
adc
push
sbb
hlt
xor
mov
mov
push
add
fisttp
cs
push
imul
adc
imul
cwde
jnp
stc
mov
aam
mov
sub
int
lods
push
fbstp
repz
(bad)
jne
xchg
(bad)
fiadd
push
es
push
mov
nop
xchg
in
scas
popf
xor
jmp
pop
rol
dec
loop
rcr
adc
push
icebp
cwde
sbb
ins
stc
into
mov
in
pop
adc
pop
in
jmp
js
push
push
and
and
bound
test
cwde
int3
movs
gs
inc
sub
pop
and
out
or
out
in
jg
dec
loop
add
cld
cmp
xor
or
and
rcr
enter
ss
sbb
mov
arpl
xor
movs
sbb
imul
fisub
bound
cmp
push
xchg
cmp
fst
add
jns
cmps
add
into
or
out
pop
pop
enter
dec
add
ins
ffree
mov
cli
adc
outs
sub
sub
frstor
mov
das
xor
xchg
in
sbb
mov
nop
mov
hlt
ret
ficomp
mov
scas
ins
push
cwde
sub
call
mov
jae
xchg
mov
inc
or
adc
mov
out
ins
jo
data16
and
and
imul
movs
sub
mov
ret
jmp
bound
into
mov
cld
arpl
adc
cmps
cmp
sbb
mov
sub
out
xchg
jle
pop
mov
inc
jmp
arpl
xchg
ins
(bad)
dec
lea
mov
sub
sub
dec
jl
xor
jecxz
stos
ins
leave
xchg
aad
mov
xor
ins
aas
repnz
nop
add
xchg
mov
ss
ret
cmps
and
cmps
daa
xchg
test
adc
in
out
mov
cwde
lea
sub
or
mov
inc
xchg
je
jno
mov
cmp
xor
dec
outs
jno
xor
psrad
sub
pusha
push
sub
ins
retf
(bad)
and
movs
mov
adc
es
into
push
dec
mov
cmp
mov
ja
es
enter
push
in
icebp
xor
outs
mov
(bad)
xlat
xchg
push
cmps
mov
jne
ss
mov
mov
out
cmp
scas
push
lds
popf
adc
cmp
fnstsw
aaa
stos
and
xor
cdq
scas
repnz
repnz
cmp
mov
cs
icebp
test
cmps
add
data16
repz
adc
ret
jns
out
loopne
push
ins
nop
jl
cmp
cli
sti
mov
leave
daa
pop
test
pop
or
inc
cmp
aad
mul
cwde
popa
add
push
xchg
icebp
mov
out
pusha
fisub
aad
stc
mov
add
daa
sbb
mov
push
aaa
retf
inc
rcl
push
loop
or
inc
nop
out
jecxz
sub
mov
dec
push
jae
jo
iret
sbb
ins
xchg
data16
jg
and
jge
jle
lods
daa
push
lock
ret
jp
add
shl
mov
push
lods
ins
cli
mov
push
and
mov
jmp
xor
jnp
mov
add
lods
(bad)
fstp
add
mov
(bad)
and
xchg
dec
push
mov
push
add
pop
pop
inc
push
add
dec
cwde
jno
xchg
retf
vsubps
es
leave
scas
psubsw
xchg
push
aad
mov
lds
inc
push
pusha
mov
jo
data16
cmp
pop
pusha
retf
add
retf
mov
cmp
in
dec
shl
xchg
outs
or
cmp
cli
enter
cmc
pop
(bad)
lds
ins
outs
(bad)
imul
gs
pop
sbb
inc
cmp
push
aaa
iret
add
jno
sub
jbe
and
adc
add
inc
retf
(bad)
fadd
arpl
or
adc
add
add
test
out
push
sub
lods
out
popa
sbb
fcom
dec
fwait
jecxz
cmp
aas
xor
push
or
push
outs
ret
(bad)
fld
in
dec
lods
xor
int
addr16
and
mov
add
push
or
sbb
xchg
adc
ret
adc
mov
or
sbb
aas
sbb
js
mov
dec
scas
gs
mov
jl
scas
imul
pop
xor
xchg
ret
pop
js
cmp
xchg
fcomp
icebp
cmp
retf
xchg
cmp
mov
dec
and
cld
mov
daa
shl
xor
outs
cmps
adc
inc
scas
sbb
dec
dec
dec
xchg
adc
(bad)
fld
push
pop
pop
xchg
int
add
xor
cmc
(bad)
aam
es
xor
daa
adc
loop
fmul
mov
add
dec
popa
cmp
sub
push
dec
retf
inc
(bad)
and
(bad)
dec
mov
pop
and
and
repnz
(bad)
push
call
test
cmp
sbb
mov
sahf
aam
test
daa
push
ret
and
and
mov
and
dec
xchg
pop
out
pushf
and
fild
jp
(bad)
scas
mov
ja
mov
sbb
add
sahf
pusha
sbb
xor
jae
and
psllw
out
inc
scas
inc
jns
jae
das
pusha
bound
lock
(bad)
retf
std
xor
dec
sub
and
adc
push
lea
jne
jmp
cmp
aaa
jg
ja
into
cwde
jp
hlt
or
int3
ins
in
inc
in
stos
mov
hlt
jmp
pop
mov
add
cld
scas
mov
bound
pop
add
mov
hlt
xor
leave
mov
push
dec
sub
fucomp
bound
add
fmul
jns
mov
inc
push
imul
cmps
dec
jns
xor
cs
push
inc
fs
xchg
sbb
pop
mov
xchg
out
lahf
add
dec
ds
dec
jnp
hlt
push
in
ins
ins
jno
test
xchg
es
mov
xlat
xor
aaa
pop
sbb
adc
sub
pop
adc
add
cmp
fst
xor
leave
mov
popf
jns
inc
jecxz
xlat
xchg
int3
pop
stos
ins
clc
mov
xchg
jae
std
loope
dec
les
mov
das
jne
daa
mov
jnp
jne
aam
xchg
sub
call
add
inc
in
ds
add
call
test
pop
adc
pushf
cmp
push
enter
adc
sub
mov
sub
lods
ret
push
je
(bad)
jb
jne
sub
inc
je
bound
inc
arpl
ror
retf
mov
mov
lods
inc
dec
pop
cmp
fdivrp
retf
xor
cmp
ins
xor
inc
mov
xor
retf
cmovle
scas
std
mov
jns
test
mov
cmp
push
mov
adc
xchg
repnz
imul
cmp
add
gs
fst
or
xchg
cmp
(bad)
adc
xchg
cmc
clc
add
or
mov
aam
scas
and
xchg
outs
ja
ja
dec
mov
dec
fsubr
and
mov
imul
mov
lds
mov
retf
aas
movs
ret
rcl
popa
ins
and
adc
mov
inc
rcl
xchg
push
cmp
leave
mov
jp
mov
add
xor
xor
cmps
mov
ins
xor
lds
or
aam
adc
xor
adc
(bad)
jnp
popf
jmp
xchg
popf
fwait
es
shl
cmc
push
pop
js
les
mov
add
jns
loope
push
retf
pushf
lahf
sub
retf
jns
add
jg
dec
xlat
sbb
jmp
std
xlat
fimul
jbe
clc
les
pop
adc
push
ret
add
jo
adc
pmaxsw
inc
jle
mov
(bad)
fnsave
jle
push
pop
sub
dec
mov
fild
jecxz
mov
mov
rol
jno
fcmovu
xor
push
fbstp
(bad)
pop
daa
pop
lock
sbb
dec
or
movs
add
jle
popa
mov
push
inc
je
push
xchg
sbb
dec
mov
add
cmp
shl
aam
scas
xor
push
in
pop
cmp
outs
movs
push
clc
push
jecxz
inc
cdq
les
dec
mov
mov
add
cdq
xchg
sub
retf
mov
sub
mov
daa
stc
mov
fs
sub
push
shl
sbb
shr
xor
sbb
int
mov
cdq
xchg
out
xchg
pop
fdiv
jbe
(bad)
mov
adc
cmp
sbb
dec
pusha
cmp
and
jl
stos
cmc
inc
dec
outs
pusha
push
clc
dec
(bad)
jns
mov
jb
ja
xor
mov
rcl
mov
and
xchg
test
jno
leave
mov
adc
in
nop
mov
mov
dec
vandps
mov
lea
sub
je
push
add
shl
cmps
push
rcl
mov
jg
and
push
sti
cmp
call
cli
and
push
cmp
inc
test
das
mov
cmp
retf
loop
in
(bad)
inc
sti
jb
ret
pshufw
loop
icebp
jl
loopne
jb
inc
daa
fdivr
mov
les
stos
push
sbb
mov
iret
dec
sbb
jp
pop
pop
inc
shl
fnstsw
push
xchg
mov
xor
in
leave
loopne
mov
cmp
stos
inc
das
jae
xor
or
iret
fidivr
cmp
push
fld
add
je
fs
outs
push
mov
or
mov
sub
add
adc
mov
pop
cmc
(bad)
(bad)
addr16
imul
jl
ficomp
movs
jnp
data16
push
mov
cmp
cld
pop
jb
add
sub
or
xor
lahf
lahf
out
push
out
fist
sbb
shr
cld
imul
ret
in
sub
into
mov
retf
xor
aam
fcomp
sub
(bad)
stc
mov
out
out
cmc
push
test
fdiv
adc
inc
icebp
push
lahf
in
cmp
sub
ins
scas
repnz
xchg
scas
xor
(bad)
sub
add
inc
xchg
iret
pusha
xchg
push
jb
or
mov
scas
mov
pop
xlat
mov
xor
lea
div
outs
or
inc
hlt
xchg
xadd
mov
add
popa
xor
and
or
and
scas
js
sbb
jns
in
pop
mov
mov
fisubr
pop
mov
fnstcw
sub
pusha
inc
mov
repz
jbe
jp
sbb
push
ss
dec
mov
xor
and
mov
or
test
fdiv
add
mov
push
test
xchg
mov
cmp
add
xor
sbb
add
fst
ss
aas
fmul
mov
adc
cs
movs
jge
xor
mov
loopne
mov
hlt
rcr
cmp
add
xlat
jae
cmp
pop
outs
jp
pop
jp
and
mov
ins
and
pop
mov
mov
popf
ret
shl
mov
scas
push
in
jb
xchg
push
les
lahf
retf
ss
inc
nop
sbb
mov
aaa
fdivr
movs
aad
adc
xchg
aam
jbe
sub
pop
xor
mov
lds
fwait
rcl
xacquire
retf
xchg
add
mov
(bad)
jno
(bad)
sar
jmp
in
inc
out
cmp
jl
jb
out
cmp
jo
xor
mov
std
dec
inc
pop
mov
out
fst
ss
push
mov
ret
or
in
add
gs
xchg
call
sbb
out
outs
jle
mov
aaa
lods
sub
pop
sub
clc
dec
rol
stos
ins
sbb
ret
and
test
mov
shr
enter
push
mov
adc
push
clc
div
and
mov
pop
ret
sbb
adc
imul
cmc
outs
jle
js
add
cmp
daa
inc
aam
or
and
std
shl
fwait
je
cdq
retf
dec
lock
jnp
jge
dec
rcr
loop
mov
jp
(bad)
mov
xor
adc
and
jno
mov
pop
dec
aas
adc
and
sbb
bnd
jg
test
or
jne
xchg
cmps
cmp
call
xchg
inc
imul
lds
pop
rol
addr16
call
in
icebp
in
sub
fdivrp
loop
add
push
inc
dec
jg
es
scas
mov
add
push
dec
test
lods
cs
into
or
jns
and
call
xchg
in
mov
add
jmp
push
(bad)
(bad)
lods
cmps
and
fisttp
into
fimul
hlt
clc
in
adc
pop
sub
aam
fild
fcomi
cmp
inc
inc
push
fxam
push
push
inc
std
int
sar
sbb
xchg
sub
xor
test
bnd
cvtpi2ps
js
push
mov
repnz
fistp
dec
aaa
add
out
ins
xor
push
or
adc
add
aam
aaa
hlt
es
mov
cld
and
test
movs
das
jae
adc
or
js
mov
sub
pop
sbb
std
pop
xlat
add
pusha
adc
cwde
adc
sti
jnp
xchg
or
fsubr
in
fistp
and
cmc
pop
sti
outs
js
mov
test
push
mov
xchg
add
mov
pusha
aas
imul
jle
dec
lods
in
daa
daa
aad
fld
dec
ins
or
xchg
jge
(bad)
fwait
pop
push
add
push
mov
into
pop
jmp
or
mul
jge
sti
loopne
call
and
mov
push
sub
out
jle
sub
pusha
shr
pop
cmps
dec
sbb
shl
or
lods
jnp
(bad)
xor
sub
add
pop
lds
sbb
movs
push
push
(bad)
jle
jg
pusha
mov
in
mov
jmp
rcl
and
jl
pusha
sahf
mov
sbb
fdiv
fadd
or
aas
and
jge
and
mov
mov
xchg
mov
pop
mov
imul
sbb
fwait
dec
jbe
icebp
push
arpl
xchg
(bad)
inc
pop
mov
add
bound
adc
fld
fldcw
add
out
mov
push
push
or
pop
repz
ds
sbb
stos
pop
adc
or
mov
mov
adc
ret
lods
loop
hlt
or
lods
movs
inc
ret
jl
popf
icebp
loop
add
sbb
test
enter
aam
mov
cmc
movs
or
cmp
adc
ret
mov
and
mov
xor
ds
cmp
mov
pop
sti
sbb
ins
pop
enter
sub
mov
scas
fwait
cmp
out
scas
inc
sbb
hlt
call
movs
push
rcl
or
or
ss
stos
jne
sub
div
fsub
stc
or
xchg
je
cld
pop
imul
fst
mov
pop
adc
retf
cmps
jge
sub
add
cmc
out
xchg
jae
cmps
push
mov
or
sub
jne
clc
dec
into
jns
cs
and
cld
xor
rol
or
test
lahf
js
and
cmps
mov
mov
scas
movs
leave
cmp
sub
jns
sub
ror
outs
je
neg
test
and
push
das
outs
nop
fidiv
sub
sar
dec
enter
mov
dec
pop
ins
pop
sbb
pop
add
xchg
fmul
mov
or
jno
push
xchg
pusha
scas
sub
sbb
(bad)
jle
je
lods
cmp
test
dec
fisttp
adc
out
adc
xchg
test
enter
and
sbb
push
test
xchg
and
enter
pushf
inc
lods
add
icebp
into
in
pop
cmp
fnstenv
ret
scas
xchg
jge
inc
aaa
in
pop
push
leave
push
adc
ret
call
jbe
inc
xchg
inc
xchg
ret
or
push
sub
js
cli
hlt
xor
mov
jmp
(bad)
dec
xor
retf
imul
mov
xor
xor
sbb
cli
sub
fdivr
jo
dec
xchg
sub
sahf
jl
cmp
or
cmp
fcom
cmp
or
inc
push
push
push
(bad)
pop
push
aam
ror
push
push
stos
lods
test
sub
arpl
dec
inc
mov
mov
push
jle
mov
fistp
test
and
push
cs
sahf
jbe
fs
inc
mov
gs
xchg
cmc
out
icebp
loopne
mov
push
fist
add
add
push
or
cmp
in
inc
dec
cmp
add
ins
pop
stc
jmp
fbstp
stos
mov
xchg
test
pop
mov
into
push
add
mov
add
cli
sbb
inc
jo
sub
adc
mov
inc
retf
xor
lahf
dec
cmps
and
jmp
push
add
or
jmp
gs
xor
ins
stc
jmp
jbe
xor
sbb
add
cmp
outs
(bad)
xchg
adc
lods
movs
je
sub
xchg
jbe
mov
xor
add
in
mov
xor
lds
ins
lods
and
push
adc
xor
lods
int3
aam
iret
rol
mov
push
rol
or
inc
popa
shl
inc
add
inc
mov
xor
retf
cmp
sub
jns
sbb
inc
jns
mov
push
adc
sbb
cmps
test
xchg
inc
cli
xor
(bad)
scas
push
je
cmp
lea
aad
jns
ja
cmp
xchg
add
repnz
jnp
adc
call
lock
sahf
pop
cmp
nop
push
adc
aad
mov
leave
rcr
pop
cdq
sbb
cdq
maxps
popf
sub
call
lods
pop
les
dec
popf
xor
or
ja
xchg
gs
sub
cmps
add
inc
mov
test
or
add
stos
xlat
mov
inc
sub
and
mov
jns
ins
xor
jns
shl
pop
cmps
mov
(bad)
ins
(bad)
dec
in
pop
(bad)
push
mov
mov
mov
hlt
push
sbb
hlt
add
push
jnp
sub
sbb
popa
rcl
fidiv
lock
mov
cmp
cmp
rcl
push
xchg
xor
lock
jbe
inc
pop
ins
mov
das
sbb
sbb
xchg
or
sbb
lahf
push
xchg
sub
pop
and
sbb
es
add
repz
pusha
push
xor
mov
hlt
dec
jnp
std
shl
xor
xchg
lods
clc
mov
in
inc
in
pop
push
or
and
out
fsub
jb
out
fldenv
inc
loopne
inc
call
xchg
call
cmp
(bad)
out
jae
xchg
add
sbb
scas
int3
add
lock
and
mov
aas
xchg
pop
dec
mov
cmp
mov
jae
push
dec
out
fisttp
add
es
clc
pop
sub
test
fs
retf
and
pop
inc
rcl
sbb
(bad)
sub
inc
ret
jbe
or
xlat
jno
jmp
dec
cmp
(bad)
adc
in
ss
outs
mov
sbb
adc
and
pop
mov
fmul
pop
pop
sub
add
push
cmp
or
xchg
gs
fisubr
inc
int3
push
popf
inc
fucomi
aam
ins
cdq
or
xor
push
xchg
div
pop
fiadd
mov
ror
xchg
lods
pushf
jmp
or
push
sar
xchg
in
push
ins
jns
shl
cmps
ret
xlat
out
jmp
lds
sub
jo
stos
jne
mov
lea
test
pop
cmp
dec
jnp
xor
into
adc
mov
sub
push
or
add
mov
cwde
sbb
int
pop
lea
and
push
das
mov
xor
icebp
popf
inc
out
imul
int3
and
int3
jp
push
push
dec
push
push
or
addr16
outs
pop
xor
test
outs
push
adc
ja
jne
xchg
push
(bad)
dec
popa
fst
cmp
mov
push
cmps
sbb
mov
hlt
mov
sub
jge
sar
xchg
mov
jmp
and
and
rol
or
mov
cmp
dec
push
lods
pop
dec
test
add
shl
sbb
(bad)
mov
ins
xor
fcomi
outs
nop
and
jmp
cld
shr
dec
xor
scas
in
ret
cmps
xchg
aam
sub
mov
fnsave
scas
retf
or
scas
mov
dec
jecxz
mov
cld
mov
xlat
xor
mov
xchg
cmp
mov
jns
push
sub
cwde
pop
rcl
push
pop
loopne
push
mov
ret
fisub
or
(bad)
out
loopne
loopne
jp
cmp
imul
dec
nop
xchg
mov
in
mov
mov
add
mov
xchg
push
scas
imul
loop
repz
push
sub
sbb
jo
clc
xlat
xchg
test
pop
mov
mov
mov
repz
adc
add
add
dec
out
push
mov
sbb
and
out
dec
and
gs
mov
in
sbb
jg
ret
dec
mov
lea
pop
icebp
inc
fst
ins
imul
xchg
xchg
push
outs
inc
mov
mov
rcl
ja
in
shl
mov
add
cld
xlat
imul
sbb
and
rcl
ret
enter
imul
mov
leave
push
xchg
mov
lods
(bad)
mov
mov
jp
dec
ficomp
mov
aas
lock
dec
arpl
xor
mov
jne
leave
sbb
cmp
mov
shl
cmp
fidiv
(bad)
ror
je
psraw
pop
jns
out
sbb
xor
mul
mov
(bad)
aam
ds
pop
mov
add
inc
sar
call
mov
mov
arpl
cmp
rcr
stc
clc
nop
mov
push
das
rcl
movd
jnp
jbe
push
mov
inc
hlt
mov
shr
jmp
sbb
sbb
aaa
jle
ror
mov
and
push
ret
pop
sbb
add
mov
lahf
out
mov
xchg
mov
leave
pop
add
fs
push
dec
ret
fcom
sbb
jp
inc
cmp
clc
pusha
(bad)
mov
mov
stos
loop
out
imul
aam
xchg
push
ficomp
sahf
fisub
stc
in
sbb
inc
jle
inc
in
push
sub
imul
std
mov
out
jle
mov
mov
scas
mov
ja
pushf
add
aam
jmp
xchg
bound
ins
sub
cmp
mov
repz
cmp
mov
ds
cmc
addr16
popf
test
inc
lods
fld
cli
sbb
pop
pushf
jno
mov
loop
inc
push
pop
leave
sub
(bad)
out
div
dec
imul
sbb
sbb
mov
xchg
or
sub
inc
jge
add
sub
test
pop
cmp
cmp
arpl
pop
adc
into
jl
sub
pop
jecxz
mov
pusha
pop
dec
leave
arpl
inc
imul
pop
mov
js
stc
(bad)
clc
in
arpl
jo
and
int3
outs
pop
xor
pusha
pop
mov
das
mov
arpl
add
cmps
cwde
pop
icebp
cs
xlat
cmps
js
jg
arpl
nop
loop
imul
mov
push
cmp
sbb
mov
dec
(bad)
aam
inc
sbb
xchg
push
inc
fucomi
dec
pop
clc
fiadd
inc
test
in
pop
enter
cmp
or
sbb
mov
xchg
inc
pop
add
icebp
dec
mov
xor
xor
add
dec
popa
mov
inc
fidiv
shr
cmp
pop
out
push
push
sbb
pop
sub
rcl
dec
jg
jns
test
jns
mov
pushf
xchg
scas
dec
movs
dec
(bad)
cdq
cmovp
lds
iret
int
fst
loop
adc
shr
gs
jnp
mov
mov
outs
sbb
imul
es
rcr
and
dec
pusha
jmp
mov
pop
mov
pop
fs
push
leave
adc
mov
pop
xchg
into
jle
xor
xchg
test
popf
cmp
js
cmp
push
xchg
adc
sahf
scas
out
xor
mov
hlt
repnz
js
cwde
inc
and
std
sub
ss
jne
xchg
dec
jmp
mov
mov
sub
movs
mov
pop
mov
ja
pop
dec
clc
push
xchg
(bad)
add
mov
icebp
mov
loopne
sub
sbb
shr
rol
sbb
dec
ins
xor
fdiv
loopne
push
pop
push
jl
addr16
fstp
test
arpl
push
xlat
aam
add
mov
jl
pop
aaa
sbb
mov
scas
test
dec
push
push
mov
fcomp
in
dec
xchg
push
dec
add
stos
mov
jne
pop
in
mov
xor
dec
mov
cmps
retf
inc
xchg
imul
call
and
fcmovb
push
ret
aas
retf
sbb
push
dec
cmp
cmp
mov
aam
inc
adc
fsubr
dec
inc
jns
push
jmp
fs
mov
pushf
sbb
in
pop
cmp
xor
inc
xor
adc
mov
mov
pop
adc
mov
sbb
daa
cdq
mov
xchg
push
rcr
jle
jmp
adc
fisubr
daa
mov
mov
bnd
out
push
gs
stc
mov
test
add
js
adc
pop
push
data16
scas
rol
fwait
mov
rol
mov
imul
es
mov
das
sub
inc
cwde
scas
nop
in
(bad)
push
test
or
mov
in
movs
loop
and
and
fdivr
jmp
mov
push
mov
xchg
push
mov
(bad)
jno
rcl
enter
jecxz
add
mov
mov
pop
dec
and
cmps
pushf
popa
mov
ins
pop
xor
xchg
ret
sub
lea
cs
jnp
fidivr
cld
shl
mov
or
jmp
repz
sti
(bad)
mov
cli
in
sbb
xchg
xchg
sbb
sbb
fwait
inc
mov
dec
scas
scas
call
mov
fmul
into
pandn
push
xchg
xchg
cmp
test
mov
jp
cmp
cld
cmc
shr
xchg
jne
mov
cdq
cmps
fsub
ret
shl
or
imul
lock
mov
mov
shl
fadd
aaa
xor
jg
jge
sbb
sbb
inc
add
ins
jg
(bad)
mov
or
dec
xlat
cld
add
int3
or
jbe
jmp
lea
cwde
pop
rcl
adc
push
or
cmp
or
or
or
(bad)
(bad)
sbb
in
add
mov
pop
mov
jle
cmp
test
xor
lock
jg
jl
lock
mov
jb
test
fldenv
out
adc
pop
cs
mul
mov
iret
hlt
imul
inc
dec
dec
jae
push
jg
retf
loope
jmp
pop
(bad)
je
push
out
cmp
les
ret
cmc
jne
sbb
les
pop
mov
mov
pop
dec
xlat
inc
pop
into
sbb
dec
cmps
and
or
jl
jmp
movs
pop
jne
or
adc
mov
sbb
pop
in
mov
clc
ds
lock
sub
ja
mov
lahf
stos
leave
ret
xor
add
jge
dec
inc
pushf
pop
imul
and
pop
inc
mov
gs
shr
loopne
imul
(bad)
jmp
cwde
xchg
jb
xor
and
mov
or
sbb
ret
daa
fs
mov
xor
jb
cmps
and
adc
addr16
inc
mov
sbb
lods
push
adc
xchg
mov
cmp
cdq
or
popa
pop
test
push
jg
cmps
push
test
jnp
loopne
xchg
or
adc
jmp
mov
or
sbb
mov
cmp
push
sub
mov
jmp
inc
mov
stc
cmp
xchg
jnp
ss
or
adc
adc
push
xchg
pop
retf
and
sbb
mov
cwde
scas
mov
mov
inc
cmp
into
sbb
ds
test
dec
pop
and
lods
icebp
cmp
dec
hlt
(bad)
test
jae
das
ss
gs
pop
aad
inc
mov
bound
ss
test
sub
dec
sub
ret
add
fmulp
ins
call
retf
jg
outs
xchg
es
pcmpgtd
aas
cmps
mov
jg
hlt
shr
xor
pop
fmul
push
into
gs
and
lock
xor
xadd
jae
push
cmc
mov
fsin
fstp
cli
xor
in
add
jg
jbe
inc
loopne
ret
mov
sub
int
test
cmp
xor
(bad)
movs
imul
mov
sbb
jp
pop
push
ret
mov
cmps
mov
xchg
das
inc
lds
sub
scas
movs
test
adc
lods
cmp
stos
in
jmp
imul
mov
hlt
ss
jl
xchg
mov
(bad)
call
jecxz
mov
mov
or
mov
mov
pop
in
outs
dec
fucomi
call
or
outs
jmp
dec
jge
mov
sbb
cmps
add
mov
mov
add
xor
xchg
cwde
jns
mov
ror
mov
xchg
stos
mov
jno
sbb
xor
mov
jp
xor
mov
(bad)
jle
sub
les
leave
adc
int3
pusha
or
mov
stos
cwde
mov
dec
jns
xor
lods
xchg
and
pop
int
lahf
mov
jb
mov
or
sub
popf
add
mov
and
outs
ins
mov
jb
jmp
cmp
cmp
xor
imul
ins
cdq
sbb
and
jmp
ss
push
push
inc
push
mov
cmp
push
pushf
add
sbb
inc
outs
out
sub
ret
mov
adc
sbb
arpl
inc
push
push
les
mov
mov
(bad)
cdq
mov
(bad)
in
pop
mov
mov
pop
retf
mov
and
ds
in
outs
jmp
dec
das
or
cld
mov
and
pop
xor
xor
jp
aas
ja
or
leave
shl
aam
inc
pop
add
(bad)
js
je
neg
clc
xchg
js
lods
inc
add
push
stos
cmovne
sub
sub
adc
pop
into
loope
ret
cmps
std
pop
mov
fwait
mov
popf
jg
(bad)
sub
push
pop
idiv
stos
lods
ins
mov
sbb
pushf
pop
inc
popa
xchg
mov
sbb
sbb
dec
sub
cmc
arpl
xlat
mov
xor
jecxz
cmp
cmp
cdq
push
ficomp
push
jmp
adc
inc
xor
es
add
dec
sbb
ss
fcomp
ins
inc
jmp
cld
mov
jmp
sub
inc
das
mov
add
out
js
or
adc
mov
jp
jmp
xor
popf
loopne
or
sahf
push
xchg
inc
or
and
arpl
jp
mov
bound
jb
out
fdiv
out
dec
outs
ins
in
mov
sub
push
pop
and
icebp
mov
ja
call
imul
push
xor
loopne
dec
movhps
xchg
fidivr
cli
adc
add
aaa
out
imul
mov
cmp
out
mov
ror
int
repz
dec
cmp
jno
pop
and
sub
jnp
push
iret
add
mov
(bad)
push
xor
push
mov
mov
aaa
nop
fild
cmps
ror
mov
push
fyl2x
sbb
push
and
sub
xchg
push
lea
les
pcmpgtw
dec
cmp
dec
(bad)
ins
add
pop
cli
ins
ret
sub
adc
jge
imul
xchg
ds
cmp
jmp
xor
sub
cmp
pushf
pop
add
xchg
push
les
scas
and
ret
stc
push
sbb
(bad)
ficomp
mov
ret
inc
dec
push
dec
sub
aaa
mov
(bad)
outs
into
in
fnstcw
push
cld
(bad)
xchg
test
pop
xchg
cmp
movs
stos
jbe
mov
xor
mov
add
add
repnz
(bad)
daa
retf
sbb
mov
test
imul
dec
pusha
sbb
jno
fild
hlt
xchg
adc
xor
adc
ret
in
add
leave
mov
or
ins
mov
sub
popa
ret
int
mov
mov
bound
fist
jl
adc
cmp
jnp
pop
loopne
cld
outs
cli
lods
retf
xchg
(bad)
in
sar
sbb
cmp
jmp
fwait
pop
pop
mov
inc
or
sbb
cs
popa
pop
(bad)
fstp
mov
dec
cld
push
fsubr
inc
jmp
bound
add
lock
lock
dec
aam
cmc
sub
sub
mov
xor
jns
adc
cmp
adc
sti
sub
pop
and
test
into
xchg
(bad)
icebp
fistp
dec
nop
icebp
inc
adc
imul
push
inc
pop
jns
(bad)
stos
cwde
(bad)
push
int3
adc
ror
dec
push
push
mov
shl
mov
or
test
pop
dec
xor
test
or
jmp
test
adc
push
pop
fldenv
hlt
sub
cmp
sub
pushf
aam
jo
xor
jnp
shr
mov
mov
jnp
test
in
push
arpl
aas
hlt
sahf
dec
imul
or
inc
add
inc
repnz
xchg
xor
aas
inc
shl
push
data16
add
pop
jle
enter
fidivr
scas
mov
sub
cdq
xchg
cdq
sbb
ins
mov
mov
jns
pop
and
fldenv
jne
xchg
(bad)
iret
or
sbb
sbb
ins
sar
mov
jp
add
xlat
in
cmp
gs
mov
stc
fmul
and
sbb
and
stc
cmc
sbb
mov
xchg
pop
push
inc
test
data16
adc
ficomp
cdq
inc
mov
xor
pop
xor
jns
push
sub
cmp
addr16
adc
mov
or
sahf
pop
push
xchg
in
xor
loope
(bad)
(bad)
mov
mov
lock
iret
mov
loope
fcomp
adc
jg
dec
mov
test
cli
adc
sub
mov
mov
ins
mov
rcl
mov
inc
dec
mov
mov
xlat
adc
ja
cmp
inc
cwde
pusha
ss
retf
xchg
pop
sub
ret
dec
adc
lea
loope
js
mov
dec
xor
cmp
int
jb
in
mov
lea
mov
in
jecxz
adc
lds
out
and
(bad)
push
push
and
cmp
gs
sub
and
xor
jnp
jnp
jg
push
lods
mov
aas
dec
inc
cmp
out
cwde
aaa
hlt
cld
sar
mov
mov
lea
mov
std
outs
or
pop
cmp
or
push
dec
aad
fld
int
sbb
pop
add
pop
test
inc
and
mov
ret
adc
xchg
mov
inc
(bad)
fdivr
lea
and
sbb
hlt
jbe
sub
inc
sbb
fdiv
jbe
jge
adc
jle
xor
xlat
pushf
cmp
inc
add
jmp
stos
aad
mov
jecxz
test
stc
mov
call
out
mov
mov
push
cmp
(bad)
jp
les
out
(bad)
mov
(bad)
daa
aas
push
and
and
ret
ins
inc
cmp
xchg
sbb
sub
mov
stos
xor
aaa
stc
and
fistp
popa
(bad)
punpckhbw
or
fild
div
mov
nop
aaa
imul
aaa
adc
daa
mov
sti
imul
pusha
lods
cld
cmp
push
push
in
(bad)
(bad)
inc
inc
maxps
icebp
jle
dec
mov
add
das
int
ss
rep
xlat
jp
out
scas
dec
lds
pop
js
(bad)
jle
mov
js
push
cwde
movs
add
xor
ja
sub
fist
push
adc
mov
retf
cmps
jge
mov
pop
fstp
ret
mov
fcmovne
into
inc
test
lahf
mov
or
mov
fsub
icebp
movs
sub
dec
jge
loope
pop
cmp
in
shl
stos
(bad)
addr16
jmp
dec
sbb
test
sbb
mov
add
jg
push
je
xor
enter
imul
or
and
popf
cmp
xor
call
xor
loopne
es
push
arpl
rol
fcmovu
(bad)
pop
in
push
push
or
sbb
cld
adc
div
inc
clc
mov
sahf
and
or
out
test
or
loope
cmp
push
ja
xchg
ficomp
and
clc
mov
cmc
dec
scas
sub
aam
pop
add
jb
push
lahf
jl
sub
aaa
inc
movs
in
je
movs
xor
(bad)
push
sbb
xor
cmp
sbb
cmc
and
adc
jmp
loopne
inc
cmp
mov
cli
je
adc
adc
or
call
mov
pop
sub
or
outs
xlat
ja
in
not
mov
pop
ins
sub
cs
adc
pop
test
loopne
nop
cs
pop
jo
xor
in
test
leave
ds
xchg
xchg
cmp
mov
jmp
xchg
cmp
out
jg
pop
test
je
in
shl
enter
prefetch
push
mov
and
loopne
sar
inc
dec
xor
js
and
and
or
(bad)
mov
jle
sub
jbe
jl
dec
push
frstor
sub
add
mov
and
mov
dec
es
cmp
push
sbb
jl
or
ja
leave
test
cdq
popf
xlat
cmp
ror
push
adc
aaa
mov
lds
test
lds
scas
movs
sar
ss
xlat
and
mov
es
or
adc
and
sbb
(bad)
imul
mov
cwde
mov
add
mov
test
or
in
into
pushf
or
lahf
dec
out
pop
nop
dec
xchg
add
xchg
in
ds
sub
stos
cmps
iret
iret
push
iret
xor
mov
xchg
push
sub
pop
js
mul
cmp
out
data16
es
into
jae
fsubr
inc
push
pop
and
int3
pop
stos
mov
sub
push
ret
call
ss
gs
rol
jno
fbld
je
push
xchg
xchg
inc
jmp
ja
or
icebp
rcr
push
push
and
cmps
popf
dec
clc
fdivr
cmp
dec
bound
fld
cli
jns
fmul
ds
js
je
repz
inc
sbb
or
jns
sbb
daa
xchg
jo
cmp
sbb
iret
out
fsubr
fdiv
sub
sub
(bad)
movs
mov
sbb
sub
mov
xor
cmps
pop
in
stc
jnp
sub
or
add
dec
cdq
and
inc
jno
fimul
cmp
das
pop
leave
sbb
jge
lock
outs
jae
pushf
inc
sbb
stc
sbb
ja
mov
xacquire
sbb
fmulp
adc
push
pop
aad
dec
popa
sbb
jg
ja
dec
clc
pop
mov
dec
cmps
(bad)
test
push
std
mov
mov
or
repz
or
fisub
sti
mov
outs
sub
jmp
jbe
ja
stc
push
leave
add
out
scas
mov
int
sbb
sub
stos
push
sbb
ret
dec
mov
and
pop
dec
das
dec
in
imul
mov
(bad)
or
int3
out
mov
jmp
pop
lods
push
xor
and
cmp
mov
enter
inc
imul
mov
add
cmp
mov
ss
and
sbb
es
mov
and
out
adc
fdecstp
(bad)
mov
ret
fsubr
sub
mov
fcomp
loop
cld
es
pop
mov
imul
pop
leave
adc
mov
mov
pushf
adc
dec
das
out
test
stc
js
mov
pop
scas
sub
add
fucomip
pop
lock
aaa
mov
inc
call
adc
fdivr
sub
ret
xchg
dec
mov
ins
stc
ret
mov
(bad)
aam
jmp
xor
mov
sub
call
adc
lods
jg
dec
or
loopne
mov
jbe
push
movs
repz
(bad)
or
jl
in
pop
sti
pop
pop
push
mov
sub
jo
mov
shl
push
rcl
int
mov
inc
pop
enter
into
push
clc
cdq
enter
jne
inc
gs
into
shr
in
ret
mov
mov
(bad)
movs
inc
push
test
and
sti
shl
ds
sbb
xchg
mov
pop
pop
jbe
movs
mov
in
cld
mov
and
lods
pop
push
rcl
mov
in
jmp
movs
jno
or
cmp
ret
(bad)
popa
popf
mov
or
out
mov
pop
or
outs
pushf
iretw
jne
(bad)
xlat
pusha
mov
pushf
pop
adc
clc
shl
dec
pop
imul
or
ds
pop
lods
mov
mov
or
lds
dec
mov
push
pop
rol
call
mov
and
add
arpl
ins
push
icebp
out
xchg
stos
jle
test
add
retf
push
or
inc
xor
add
mov
inc
pop
jp
fiadd
les
jle
mov
data16
(bad)
jp
mov
push
sbb
push
rol
xchg
push
lods
cld
and
imul
paddd
aas
ror
mov
push
push
mov
loop
clc
mov
lock
jecxz
aam
outs
sub
xchg
sbb
das
movs
std
jae
push
icebp
clc
sub
sub
jnp
ss
mov
ins
shr
nop
mov
mov
and
int3
movs
cmps
xchg
call
mov
mov
dec
xlat
sub
xchg
xchg
je
sbb
lahf
js
cwde
push
jg
mov
xor
and
ret
mov
dec
pop
mov
lea
loopne
push
mov
sub
(bad)
and
jg
(bad)
inc
pop
cmp
sbb
out
fistp
xchg
in
imul
outs
fnop
cmc
lea
xor
push
arpl
imul
loopne
xchg
xchg
dec
test
mov
popa
xor
or
pop
fcomp
push
outs
xchg
les
sbb
enter
cmp
rcr
cmp
sti
xor
call
sbb
jge
jg
xchg
xchg
out
clc
jne
in
jno
cmp
cmp
cmp
sub
popa
out
cmp
inc
xchg
dec
cmps
fprem1
cmp
in
loop
in
or
shr
mov
jl
lods
jae
sbb
and
sub
movs
mov
adc
xchg
mov
xor
xlat
sbb
call
or
or
mov
add
push
mov
cmp
inc
test
mov
cmps
shr
fbld
loopne
adc
adc
(bad)
adc
dec
les
add
xchg
aad
cmp
ficomp
mov
mov
cmp
mov
(bad)
call
call
jmp
cmc
push
cld
xchg
pop
mov
cmp
sub
scas
fnsave
outs
mov
lea
xor
or
and
jg
movs
(bad)
jle
adc
xlat
jge
xor
push
cwde
xchg
or
jp
(bad)
icebp
lods
xlat
mov
push
repz
jnp
mov
jo
fdivr
jbe
loopne
add
enter
adc
cmp
lahf
push
repz
test
(bad)
popa
lahf
dec
xor
retf
sub
scas
push
xchg
jae
mov
or
sub
cld
xchg
jae
(bad)
and
call
xor
sar
cmp
jae
mov
jge
xchg
(bad)
cmp
pop
sbb
sub
cmp
cli
(bad)
xchg
cmp
ret
aas
or
adc
xchg
dec
pop
cmp
mov
pop
sub
mov
jecxz
add
and
add
adc
ret
adc
add
sbb
mov
ins
das
mov
les
ins
cmp
xor
or
inc
sbb
sub
fsubrp
ins
div
sbb
dec
add
cmp
xor
mov
test
test
call
(bad)
push
adc
jae
daa
aaa
cmp
aam
pusha
outs
and
outs
js
retf
cmps
jge
stos
icebp
mov
stc
hlt
or
sbb
push
ins
mov
sbb
xor
push
jbe
or
imul
rcl
loop
mov
sbb
dec
mov
ins
(bad)
cmp
pop
popa
pop
in
or
cmp
pop
popf
mov
enter
icebp
sub
fs
loopne
mov
stos
push
xor
pop
and
cmp
addr16
ja
(bad)
call
enter
add
cmp
shl
mov
and
cmp
push
fcmovbe
and
pcmpgtb
inc
mov
fcom
jmp
shl
leave
adc
sub
and
add
stos
xchg
retf
imul
ja
inc
cmp
out
sbb
inc
nop
push
mov
ret
mov
scas
js
in
stos
xor
xchg
xor
or
inc
sbb
and
dec
mov
jl
in
add
inc
mov
jle
scas
cmc
inc
addr16
inc
cmps
sub
clc
clc
gs
and
pop
shl
rol
mov
jl
imul
cmp
fdivr
push
xchg
aas
mov
mov
xchg
lds
cmp
in
add
jp
jae
nop
mov
cmp
mov
jne
(bad)
mov
xchg
lock
imul
inc
cld
pop
or
xchg
pushw
clc
out
movs
push
xchg
ret
dec
clc
cmp
xor
gs
cdq
push
out
push
jns
add
and
popa
shl
ficom
pop
adc
loop
cmc
loopne
push
push
cmp
cs
(bad)
fst
int
pop
xchg
mov
mov
push
scas
cmp
mov
sar
inc
sub
aaa
xor
xor
xchg
(bad)
imul
and
cmc
xor
jae
dec
xor
xor
es
inc
or
push
push
sub
sub
adc
test
movs
mov
and
outs
xchg
jae
lahf
add
mov
les
xchg
retf
push
inc
(bad)
sub
push
jge
(bad)
adc
out
jns
adc
jmp
ja
jb
shl
xor
repnz
test
push
cmp
cli
dec
clc
nop
out
jae
cli
adc
push
leave
cmp
inc
test
push
adc
lahf
js
(bad)
jle
das
cld
hlt
pusha
rep
or
(bad)
cmp
int3
ds
add
mov
pop
or
jp
test
cmp
xor
or
pop
sub
scas
(bad)
pop
sbb
jbe
add
jl
jmp
lds
dec
jl
push
sti
sbb
je
pop
lods
ret
add
push
ret
sub
pop
bound
popa
sar
ret
or
rcr
data16
les
lds
push
ror
rcr
add
pop
test
add
fs
jecxz
pushf
adc
(bad)
dec
iret
mov
scas
sub
mov
icebp
xor
pushf
ins
mov
push
sub
imul
mov
jle
sub
cmp
js
dec
cli
leave
dec
adc
fs
adc
aad
dec
lods
hlt
push
fwait
in
mov
scas
jne
dec
inc
add
push
jp
jmp
dec
lods
add
and
aam
stos
xlat
call
fsub
inc
pop
jmp
adc
scas
mov
ins
movs
add
dec
cmp
adc
imul
mov
fimul
dec
into
stc
rol
fnsave
mov
cld
jbe
cwde
mov
pusha
mov
ret
or
imul
and
aad
mov
arpl
push
xor
lea
add
out
xor
or
test
sbb
cli
test
icebp
jae
sti
sti
scas
xchg
call
out
test
in
jns
add
sbb
mov
adc
push
or
fwait
cmp
ins
mov
cmp
out
or
fs
sar
add
fcmovu
aam
cdq
out
fbld
inc
jl
fistp
mov
jnp
push
xor
fadd
mov
mov
xor
pop
in
je
sar
test
imul
mov
xchg
cld
lds
xor
push
xchg
add
inc
sub
cmc
lds
mov
cmp
(bad)
test
push
sub
jnp
daa
mov
jecxz
mov
pushf
sub
int3
xor
sbb
adc
rcr
pop
out
adc
sub
mov
inc
inc
or
adc
inc
add
repz
cli
int3
dec
dec
clc
sbb
pop
test
xor
mov
ret
sbb
addr16
repnz
cwde
pop
jmp
sti
movlps
ins
ret
cs
ror
mov
sub
sub
adc
(bad)
sbb
ins
jg
pop
test
adc
mov
ins
aaa
lods
std
mov
stos
push
sbb
adc
(bad)
cmp
or
mov
fsubr
jb
inc
inc
repnz
xchg
xchg
in
shl
add
xchg
test
mov
mov
sub
and
add
loope
push
xor
add
mov
sbb
aaa
loop
(bad)
mov
inc
cs
cmp
cmp
mov
mov
inc
das
xchg
dec
mov
movs
add
call
and
and
add
mov
mov
cmps
ds
fsub
mov
das
add
add
ror
(bad)
loopne
nop
sub
sbb
mov
and
push
std
xchg
dec
fucom
scas
xlat
aad
jae
push
jo
jl
jns
loopne
inc
sbb
pop
inc
xchg
adc
leave
ror
jo
lock
adc
outs
(bad)
xchg
rcl
pop
mov
call
outs
mov
out
mov
out
inc
adc
push
push
into
dec
or
adc
xlat
mov
aam
int3
or
addr16
xor
xor
in
dec
iret
(bad)
stos
movs
or
or
rcl
ror
dec
shr
sbb
push
iret
and
jbe
repz
shl
ins
outs
ins
sbb
lahf
leave
and
xor
pop
mov
hlt
sbb
(bad)
mov
pop
call
inc
test
popf
call
push
(bad)
popf
pop
add
jl
inc
hlt
ins
adc
mov
loope
movs
fcmovnbe
jbe
rol
sbb
daa
mov
aam
jl
adc
xor
add
maxps
and
dec
lods
scas
scas
int
adc
cmp
pop
in
dec
shl
sub
mov
hlt
xchg
sbb
jp
mov
push
out
in
ss
push
test
dec
jmp
pop
mov
cli
cmp
pop
mov
js
dec
or
jbe
pushf
cmp
fldcw
push
xlat
or
jne
cmps
iret
movs
sub
adc
dec
mov
dec
cmp
rcl
int3
and
iret
addr16
nop
push
addr16
mov
mov
das
test
mov
pop
push
shl
dec
shld
sbb
cmp
aad
sbb
in
cmps
cmps
push
xor
cmp
cdq
sub
lods
imul
jno
mov
sub
cwde
jmp
xchg
inc
ret
jae
dec
ja
xlat
cmp
shr
shr
xlat
lea
add
imul
repz
pop
inc
(bad)
mov
inc
(bad)
cmps
jae
xchg
sub
xchg
inc
xchg
xchg
arpl
mulps
cmp
or
pop
mov
pop
icebp
mov
adc
jmp
add
ror
cwde
(bad)
jmp
lds
or
sbb
addr16
add
or
sub
bound
rcl
retf
rcl
mov
push
xchg
fs
dec
mov
scas
dec
outs
mov
add
fimul
mov
xor
fmul
call
dec
adc
ds
mov
cmps
push
mov
push
jge
mov
push
and
outs
icebp
fcomp
mov
movs
mov
int
fwait
sbb
loopne
and
outs
push
aaa
dec
xchg
outs
pop
push
clc
scas
cmps
add
mov
mov
push
pop
repz
call
dec
repz
idiv
in
repz
loop
cmp
imul
pop
cmp
fnstenv
loop
mov
cmp
mov
inc
xor
leave
mov
inc
jo
sti
in
jo
sub
and
fucomip
or
jg
mov
xchg
ret
sub
dec
xchg
push
out
int3
enter
ja
shl
fwait
inc
hlt
mov
pop
xor
xor
inc
jae
xchg
shl
sub
dec
lock
lods
mov
sub
mov
bswap
fwait
cmps
cmps
cld
daa
idiv
les
push
hlt
lods
pop
inc
in
xor
ret
mov
sub
in
test
jne
mov
aaa
fiadd
iret
and
ss
bound
pop
xor
movs
xchg
inc
(bad)
mov
test
ss
pop
dec
cmps
or
dec
xchg
ret
push
ins
inc
scas
icebp
dec
fld
pop
xchg
rcr
mov
xor
push
and
mov
enter
enter
fdivr
aas
in
gs
enter
fnstsw
loope
out
xchg
call
in
cld
out
add
js
rcl
dec
sti
(bad)
jbe
popf
mov
xchg
cwde
mov
xor
add
mov
pop
(bad)
loopne
icebp
jecxz
popa
xchg
lods
dec
xchg
cli
mov
daa
add
stc
scas
fs
jbe
pop
pop
jl
dec
gs
cmp
dec
or
xchg
xchg
cmp
xchg
into
jle
outs
(bad)
mov
enter
retf
es
dec
adc
pop
mov
dec
lods
cmps
mov
mov
je
pop
pop
fstp
mul
sahf
sub
mov
pushf
mov
call
adc
dec
dec
xor
ins
or
ja
retf
cdq
lods
cs
and
inc
loop
and
add
sub
adc
dec
js
ins
(bad)
mov
xchg
push
fistp
or
inc
and
pop
xchg
xor
add
xchg
lock
jno
mov
repz
mov
je
int
mov
lods
cdq
outs
mov
mov
jg
shl
cmps
popf
ds
fs
and
loopne
pop
iret
inc
cmp
fstp
shl
dec
test
int3
jnp
push
sbb
and
dec
pop
dec
xchg
push
fistp
sbb
sub
mov
pusha
loope
sub
in
jle
jp
daa
ins
fdiv
adc
sub
xor
push
cli
pusha
xor
cmp
cdq
jge
popf
jb
inc
or
sub
adc
inc
pop
pop
stos
xchg
or
jbe
xor
dec
and
sbb
outs
shl
fld
xchg
push
pop
iret
mov
mov
cmp
dec
mov
in
daa
dec
fiadd
and
pop
out
jmp
stc
dec
pop
push
sbb
push
pop
pop
jno
ja
in
int3
retf
test
mov
add
cwde
inc
pop
pop
test
inc
or
mov
out
in
push
jne
push
aam
lods
ins
aaa
sub
std
jmp
xchg
xor
fcmovb
call
dec
mov
push
lods
retf
mov
mov
mov
cmp
(bad)
mov
mov
xor
inc
(bad)
mov
aas
scas
std
mov
push
movs
popa
pop
in
dec
push
xor
sub
aaa
xchg
cmp
xor
add
pop
mov
inc
xor
fwait
(bad)
pop
xor
jge
pop
stos
out
ds
mov
adc
jmp
jne
aas
call
push
inc
dec
popf
enter
out
mov
pushf
adc
adc
lods
imul
jns
jbe
retf
sub
ds
dec
cwde
sbb
push
jp
dec
ret
out
scas
jne
jbe
(bad)
retf
push
ret
paddusb
in
fimul
mov
push
adc
lods
mov
inc
(bad)
dec
shr
outs
sbb
mov
iret
(bad)
mov
in
xor
sbb
cmp
cs
imul
fdiv
and
mov
or
jb
ficomp
and
sbb
adc
and
sbb
mov
data16
jnp
jb
dec
adc
pop
popf
xor
aad
dec
hlt
xchg
ja
outs
jge
xchg
dec
(bad)
addr16
mov
fdivr
mov
fldlg2
pop
mov
mov
jle
addr16
fdiv
inc
cmp
mov
pop
mov
aam
sbb
aad
outs
push
test
mov
jae
sbb
addr16
sub
push
in
dec
push
test
loope
lds
push
jbe
adc
xchg
mov
cmps
xchg
es
mov
lock
sbb
and
sub
(bad)
jge
mov
ret
xor
aad
add
je
(bad)
push
(bad)
add
pop
or
call
mov
push
xor
stos
jmp
(bad)
jmp
std
imul
mov
sub
movs
jecxz
call
das
push
and
inc
pushf
push
nop
and
ins
inc
sete
push
fbstp
lods
xchg
add
lds
je
lods
dec
pusha
fst
pusha
out
push
or
mov
in
daa
xor
out
sub
popa
mul
call
push
mov
xor
cmp
xor
sub
pop
out
ror
or
push
xlat
mov
vaddpd
scas
dec
jmp
jbe
push
out
test
cs
mov
shl
mov
fistp
jmp
xor
popa
loopne
mov
xchg
addr16
dec
lods
shl
xlat
dec
imul
sahf
sbb
xor
sbb
cli
dec
xor
imul
cmc
or
outs
mov
and
outs
cli
sar
mov
push
mov
pop
mov
inc
test
pop
pop
pop
xor
lea
xor
mov
das
mov
test
inc
xchg
shr
cmp
mov
xor
mov
push
dec
jns
imul
pop
mov
push
dec
mov
das
inc
push
sbb
dec
arpl
(bad)
mov
push
aaa
add
mov
add
cmp
jecxz
popf
xchg
sub
retf
mov
cmp
add
icebp
scas
in
cld
mov
shl
mov
cmps
not
lock
loope
test
pop
test
fwait
xor
scas
cld
inc
imul
lock
rcl
mov
pop
add
sub
adc
mov
jo
xchg
in
fadd
xchg
test
cmp
imul
daa
stos
xchg
in
lods
pop
and
sbb
movs
jno
dec
and
jmp
add
outs
sbb
in
mov
std
lods
mov
ds
adc
ret
lds
ins
shl
sub
mov
dec
sbb
or
adc
sub
je
jmp
mov
dec
retf
jp
call
lea
cmp
shl
push
sub
inc
call
jg
aam
sbb
cli
ror
ds
in
add
add
(bad)
pop
and
iret
xchg
inc
out
push
(bad)
sbb
push
stos
cmp
repz
jmp
jle
ret
call
jae
and
sbb
sbb
jp
imul
aam
jmp
or
push
push
xor
shl
into
sub
pop
aas
sub
fsubr
jg
rol
loope
or
add
or
sub
jecxz
and
push
cmp
call
dec
and
fadd
push
cmps
or
sub
lahf
ffreep
xchg
outs
mov
dec
cld
adc
lahf
sbb
mov
jl
das
mov
and
xor
daa
lock
sti
jle
cmp
or
xchg
dec
sub
scas
push
mov
fnstsw
dec
fadd
ffree
inc
mov
aam
pop
out
sub
jne
adc
cs
fwait
imul
(bad)
imul
xchg
push
pop
mov
sahf
push
mov
mov
rol
sbb
sbb
(bad)
ins
movs
repnz
mov
mov
jl
pop
(bad)
dec
jmp
mov
nop
and
popf
test
cli
shl
sahf
mov
pushf
scas
xchg
add
xor
sbb
test
loop
(bad)
jmp
xchg
dec
xor
ret
sbb
dec
ficom
in
sbb
test
test
xchg
leave
dec
jno
pop
and
pop
jp
push
cmp
sahf
(bad)
cmc
sbb
daa
xchg
push
pop
mov
ja
jbe
(bad)
les
(bad)
cli
arpl
test
movs
loop
and
ret
push
inc
mov
xchg
jg
mov
sbb
mov
pop
movs
adc
jge
jp
mov
cmp
sub
into
in
cmps
pop
inc
or
data16
fsubr
pop
mov
mov
js
daa
xchg
hlt
jmp
xchg
dec
lds
and
fdivr
xor
adc
jmp
mov
outs
cli
in
sub
mov
ret
aad
add
mov
leave
add
mov
push
shl
fldenv
out
dec
pop
jns
inc
mov
int3
bound
fs
or
jb
imul
fwait
pop
arpl
icebp
ret
les
jmp
jns
push
clc
push
sub
sub
inc
xchg
int3
arpl
add
clc
ret
(bad)
(bad)
pop
fstp
ja
call
and
pop
or
fdivr
push
add
mov
call
adc
lods
pop
movs
aad
ret
mov
mov
cli
movs
nop
mov
sub
mov
and
cmp
clc
gs
push
test
push
sub
mul
out
mov
ss
inc
es
and
es
aam
ret
jbe
xor
int3
data16
mul
push
movs
fndisi(8087
js
or
mov
inc
ds
(bad)
in
push
fscale
mov
or
or
sub
outs
jg
push
jg
call
call
cdq
cmc
push
xor
add
push
xchg
xor
(bad)
sub
pop
pop
push
and
in
xchg
sub
imul
scas
jl
lods
hlt
inc
xchg
int
cmovns
in
lea
mov
add
pushf
stos
inc
out
scas
loopne
pop
or
adc
sub
push
es
(bad)
data16
cmp
stc
pop
lds
jg
dec
into
xchg
push
rcr
fld
imul
mov
inc
jmp
stos
dec
std
mov
pop
call
imul
add
out
jno
pop
mov
arpl
sbb
pushf
and
xor
adc
push
sahf
sbb
mov
fwait
inc
(bad)
cli
out
cli
or
aas
pop
mov
jl
adc
clc
push
push
cvtpi2ps
and
push
das
fild
mov
jo
aam
ret
add
ds
xchg
and
out
pop
xor
dec
sbb
jo
mov
and
cmp
cmp
add
sbb
test
xchg
jne
mov
xor
daa
xchg
sahf
sahf
fcomp
ins
loop
pop
or
sbb
add
mov
jp
xchg
ret
sub
pop
retf
mov
enter
xor
test
call
pushf
xchg
icebp
in
xchg
pop
push
aaa
sub
mov
and
jecxz
cmps
inc
ins
jbe
mov
sbb
mov
ja
mov
pop
(bad)
sahf
into
mov
cmp
cmp
mov
inc
dec
sar
sbb
cmps
mov
ins
cs
and
stos
mov
push
jmp
pop
aaa
push
xchg
outs
push
loope
mov
jp
mov
and
cmp
and
in
lahf
jge
dec
std
fs
cmp
je
jno
jnp
fsub
(bad)
or
mov
into
leave
xchg
mov
les
push
dec
jge
xchg
rcr
sub
push
mov
xor
icebp
cmp
arpl
rcl
cs
scas
jbe
push
xchg
jnp
stos
div
pop
mov
jecxz
sbb
stos
(bad)
in
int
icebp
jg
in
mov
div
aaa
xor
dec
push
mov
sub
jae
dec
add
fdivp
or
dec
jns
inc
adc
and
outs
sub
push
add
imul
fsub
rcr
sti
push
and
sub
stos
mov
popw
shl
jae
inc
aaa
pop
dec
ja
xor
in
mov
and
cmp
mov
jne
push
mov
jno
and
mov
std
or
cmp
inc
sbb
enter
rcr
add
mov
leave
daa
mov
outs
sbb
movs
mov
stos
je
inc
repz
mov
xor
mov
ficom
fnsave
mov
iret
push
adc
leave
cmp
dec
xchg
add
add
mov
clc
sub
out
xchg
cmc
xchg
aam
inc
adc
xchg
sub
clc
xchg
sub
imul
and
xchg
lds
cdq
jbe
(bad)
je
cmp
cmp
stc
out
dec
mov
cmps
dec
inc
sbb
cmp
int
(bad)
mov
test
and
add
pop
xor
sub
aam
sub
sbb
xchg
pop
add
cmp
adc
pop
xchg
addr16
(bad)
movs
in
xchg
mov
retf
jno
fsubr
xchg
int3
and
pop
adc
sub
xchg
and
ds
mov
lds
bound
(bad)
les
pop
in
aam
scas
loope
sbb
jnp
cs
add
cld
out
(bad)
cdq
mov
sbb
jle
mov
mov
adc
and
fisubr
xchg
(bad)
adc
push
xchg
mov
jg
cdq
fist
mov
xor
cmp
imul
add
ja
and
fist
push
fnstsw
imul
out
sub
push
sbb
jg
push
sar
mov
cld
cwde
ret
push
jmp
dec
loop
and
jl
mov
popa
nop
sbb
mov
daa
popa
cmps
push
mov
mov
fisttp
cmp
mov
xchg
rcr
adc
fisttp
loop
adc
and
fadd
sub
push
int
dec
cmp
mov
add
and
cmc
retf
jnp
xlat
mov
push
push
mov
jnp
push
fidiv
jnp
jns
repz
push
jg
sbb
test
nop
add
xor
aas
inc
pxor
test
xchg
inc
mov
jmp
adc
jle
sbb
iret
add
mov
lea
into
lock
lods
add
jl
push
ins
mov
rcr
sub
xor
into
xor
pop
aam
mov
outs
and
test
and
hlt
test
xor
adc
jp
ss
or
and
cmp
in
inc
mov
jns
(bad)
leave
mov
pop
repz
sbb
jg
dec
ror
and
dec
pop
xor
sbb
dec
mov
push
cwde
jae
xchg
push
mov
ins
inc
iret
les
leave
jnp
out
sbb
dec
mov
pop
mov
inc
push
js
mov
imul
and
call
push
cmp
leave
pop
mov
xchg
je
pop
and
mov
jb
mov
sti
mov
iret
mov
sbb
into
ja
mov
jbe
scas
out
push
sub
jbe
cmps
and
jp
xorps
xor
push
sub
xor
mov
loopne
mov
push
hlt
lahf
push
loopne
pop
loope
cwde
mov
mov
(bad)
cmp
loop
push
out
cmps
addr16
enter
out
lds
xor
je
aas
mov
cld
test
push
(bad)
dec
shl
popf
lds
leave
shr
jp
pop
gs
sti
adc
loope
push
mov
inc
push
imul
jae
jno
das
push
call
repnz
inc
mov
mov
std
cwde
mov
push
je
mov
xchg
xor
jb
sub
and
jno
add
jns
lods
es
arpl
mov
cld
mov
lods
xchg
xor
inc
add
cld
mov
cmp
mov
push
loopne
rcl
rcpps
add
stc
scas
inc
nop
jecxz
xchg
int3
stos
mov
or
xor
dec
fstp
pusha
mov
cmp
or
add
xchg
sti
xor
sub
aam
xor
std
mov
push
push
cmp
add
or
cdq
int3
retf
ja
jmp
xlat
push
mov
xor
xchg
repnz
jmp
mov
and
lea
mov
lods
stos
lock
int3
imul
dec
bound
mov
inc
pop
dec
pop
mov
idiv
adc
jmp
inc
outs
js
mov
inc
repz
dec
and
jp
mov
add
in
mov
pop
ret
or
dec
(bad)
fcomp
lock
enter
movs
and
fisub
add
arpl
xor
mov
xor
mov
push
cmps
push
retf
sbb
aam
pushf
(bad)
cwde
ja
dec
js
pop
(bad)
lods
sub
and
mov
mul
pop
mov
jl
push
sbb
xor
mov
adc
add
rcl
jo
or
in
rcl
jg
btr
add
fwait
push
aas
xor
mov
fild
add
push
aas
inc
sub
pop
xor
mov
xor
dec
jns
dec
(bad)
xor
addr16
sub
repnz
xchg
jbe
mov
pop
loop
adc
jl
jo
and
shl
in
shl
add
ins
sub
fmul
pusha
xor
out
mov
int3
rcr
aad
in
stos
sub
test
inc
pop
fs
pop
cmp
jo
or
aam
sub
push
inc
inc
add
loopne
jo
(bad)
popa
or
lods
stos
dec
push
dec
push
hlt
leave
xchg
leave
sub
xor
mov
fsub
dec
mov
sbb
mov
inc
jp
fs
xchg
xor
lahf
(bad)
mov
cmp
xlat
out
(bad)
repnz
rcr
cmc
pusha
mov
dec
jne
mov
dec
loopne
sbb
mov
arpl
xchg
test
push
movs
fwait
or
and
out
ds
push
fsubrp
fwait
gs
sbb
out
loop
js
adc
ja
clc
scas
cmp
dec
xor
pop
mov
xor
shr
mov
into
lock
and
pop
shl
stc
out
repnz
and
(bad)
(bad)
sahf
mov
jl
add
mov
sub
test
push
cmps
dec
inc
dec
pop
(bad)
and
cmp
scas
pop
fisttp
adc
inc
mov
movs
jle
add
mov
jp
ret
lods
xor
test
inc
retf
lds
jae
jecxz
and
push
push
mov
dec
jp
or
fidivr
push
mov
push
jmp
cmps
adc
das
pop
sbb
les
sub
(bad)
mov
cmp
(bad)
jns
ret
pusha
(bad)
shl
sahf
lods
fild
call
lock
xchg
cmp
aam
add
hlt
pop
jmp
(bad)
push
fist
jg
stos
pop
shl
xchg
xchg
cld
out
and
push
jns
sbb
pop
push
imul
push
push
xchg
sub
int3
mov
and
sub
aas
add
mov
fs
mov
aad
push
or
je
inc
dec
cmp
sbb
test
cdq
movs
xchg
shl
fild
mov
imul
scas
retf
mov
xor
mov
push
mov
pusha
jnp
dec
cmc
imul
inc
cmp
cli
das
outs
nop
jmp
int3
in
icebp
pop
imul
mov
repz
repnz
lods
jne
loope
das
xor
jecxz
add
mov
into
dec
push
arpl
dec
xchg
mov
add
push
fisubr
jmp
and
adc
add
and
pushf
and
sti
xor
shr
ss
xor
jmp
dec
ret
mov
adc
jle
push
mov
enter
inc
fild
xlat
or
je
cmp
inc
adc
jl
aas
mov
(bad)
lods
(bad)
cld
rcl
cmps
mov
mov
sub
aaa
ss
sub
fistp
cmp
fst
jge
leave
push
outs
neg
les
jl
fadd
data16
xchg
pop
je
sub
fimul
push
xchg
iret
xor
(bad)
rcl
or
and
mov
mov
adc
outs
mov
je
iretw
jnp
xor
arpl
xor
jae
cmp
xchg
retf
mov
xor
imul
into
push
popf
inc
xchg
inc
pop
adc
adc
mov
jp
imul
not
mov
fidiv
add
aaa
test
dec
out
cld
dec
sub
adc
sbb
lahf
jb
lods
fdivr
out
mov
jl
inc
xchg
jecxz
rol
scas
popf
sbb
or
leave
sub
add
scas
push
xchg
xchg
mov
dec
pop
arpl
popf
xchg
add
movs
jae
mov
movs
mov
outs
cmp
lods
adc
popa
xchg
cmp
not
cmp
push
(bad)
movs
adc
inc
inc
int3
or
nop
outs
stc
call
xlat
adc
dec
cli
push
pop
or
inc
sub
out
dec
push
and
sbb
pop
inc
inc
movs
mov
ficom
clc
dec
inc
loop
pop
cmp
push
inc
jno
(bad)
dec
jns
out
cmp
mov
outs
cmp
fwait
mov
jae
mov
push
or
sti
inc
(bad)
movs
pop
cmps
dec
hlt
push
add
and
mul
add
cmp
inc
idiv
adc
cmp
add
mov
xchg
pop
daa
cld
mov
or
mov
pop
mov
and
out
out
mov
and
jecxz
cld
push
inc
movs
stos
rcl
xchg
or
mov
xor
dec
mov
add
mov
adc
rcl
loopne
cli
dec
test
call
sahf
call
xchg
pushf
mov
ftst
sub
or
jg
pop
or
and
hlt
lock
icebp
cmp
sbb
aam
jp
sbb
mov
add
inc
sbb
xchg
cli
cs
sub
fst
cld
mov
pop
add
and
mov
xchg
cld
cmp
scas
mov
xchg
aaa
mov
(bad)
push
dec
adc
(bad)
xor
and
in
ret
pop
mov
jbe
mov
test
and
xchg
and
daa
mov
lds
xchg
out
cmp
or
mov
test
fstp
(bad)
inc
xchg
cmc
test
xchg
or
test
outs
cmc
aaa
les
sbb
popa
cmp
loop
stc
bound
sar
xor
push
imul
lock
and
popa
bound
fdivr
test
mov
mov
stc
jp
xchg
pop
test
mov
fwait
sub
adc
mov
ja
fldz
jmp
dec
std
gs
clc
je
jmp
(bad)
icebp
jmp
jmp
jo
cmps
dec
dec
sti
out
adc
pop
in
xor
pop
data16
sbb
fs
xchg
sahf
cmp
sub
repz
repz
xchg
mov
mov
test
jg
adc
popf
xchg
jle
jp
inc
pop
jecxz
icebp
es
xchg
jno
jo
jo
inc
aas
add
mov
mov
call
out
jae
(bad)
dec
nop
mov
add
or
hlt
mov
adc
int
fidiv
mov
push
enter
mov
or
or
fmul
mov
push
jmp
loope
repz
pop
inc
pop
sbb
je
(bad)
xchg
repnz
fisub
ss
mov
sub
xor
nop
adc
sub
mov
pop
lods
(bad)
cmp
fst
or
or
jle
pop
mul
jp
(bad)
mov
xor
push
ins
nop
cmps
adc
push
sub
out
outs
dec
(bad)
rol
(bad)
jle
ins
inc
ja
sbb
mov
push
iret
pop
cmp
loope
shl
repz
inc
mov
inc
jae
pop
xor
xor
sub
dec
pop
pushf
xchg
add
adc
dec
push
mov
cmp
mov
arpl
xor
push
gs
js
add
into
pop
adc
hlt
pop
leave
mov
mov
jno
scas
icebp
mul
add
arpl
adc
push
xchg
sbb
test
rcr
shl
xchg
mov
push
jmp
dec
adc
ins
jmp
adc
adc
xchg
cmp
clc
dec
mov
sub
jmp
test
or
jb
movs
cwde
movs
mov
jb
cwde
adc
in
push
sti
ds
enter
test
cld
add
mov
jb
xchg
pop
xchg
je
xor
add
dec
push
mov
cmp
call
xchg
daa
jecxz
lods
lahf
shr
repnz
mov
xchg
sub
xchg
sti
stos
jbe
(bad)
ja
in
mov
shr
push
or
xchg
and
loopne
pop
and
cdq
jns
add
pop
lahf
pusha
jl
retf
push
fldcw
dec
(bad)
pop
repnz
ret
adc
movs
push
aam
addr16
or
push
mov
jns
and
retf
retf
rcr
or
jns
sub
ins
push
loopne
pop
mov
jbe
fwait
pop
(bad)
test
leave
lahf
inc
mov
mov
jl
arpl
add
sbb
test
sti
jbe
loopne
sub
retf
sti
sbb
cld
jns
pop
loop
icebp
ins
jns
jo
mov
fxch
(bad)
imul
sbb
inc
or
je
sti
test
daa
je
das
pop
test
test
mov
mov
mov
push
mov
mov
and
inc
retf
push
xchg
xor
xor
fld
dec
adc
out
push
inc
stos
mov
movs
les
cdq
inc
int
cmc
gs
pop
pop
pop
fmul
add
pop
loopne
stc
cmp
or
pop
jl
jecxz
add
xchg
stos
scas
lods
ret
dec
pop
mov
lods
pop
pop
(bad)
mov
jmp
into
dec
movs
fcmovu
fcom
push
js
enter
clc
pop
ss
xchg
fisttp
add
adc
mov
or
mov
(bad)
jle
sbb
pop
retf
jl
jb
push
jne
inc
daa
ins
inc
xchg
jecxz
mov
or
mov
add
mov
push
cmp
sbb
pop
pop
mov
lea
sbb
shr
je
rol
stc
jp
movd
call
add
cld
repnz
outs
sbb
mov
cmp
inc
push
icebp
leave
mov
add
xor
outs
push
bound
sbb
pusha
lahf
ss
nop
stc
mov
pop
sar
js
xchg
and
or
mov
inc
sbb
inc
cdq
into
jae
cmps
mov
mov
jno
and
sub
inc
jne
out
cmp
or
sub
cmp
pop
out
mov
(bad)
jl
sub
shl
bnd
fnstsw
aam
xlat
mov
push
in
pop
mov
inc
scas
dec
dec
xchg
in
rcl
inc
sub
iret
add
or
xchg
out
dec
adc
xchg
cwde
in
dec
mov
jbe
fld
add
pop
pop
fwait
sbb
xchg
stc
mov
fst
test
iret
ret
outs
adc
popf
lods
cmps
xchg
clc
stos
cdq
and
pop
(bad)
push
adc
fwait
test
rcr
rcr
into
ss
push
jmp
aam
dec
pop
inc
and
mov
fsub
in
icebp
sub
rcl
pop
mov
cs
adc
loope
and
repz
sub
mov
fistp
ret
or
movs
cmps
xchg
xchg
idiv
arpl
mov
bound
jne
mov
ror
(bad)
pop
add
xor
dec
pop
push
pop
repnz
sub
mov
xchg
xchg
imul
loop
imul
js
(bad)
movs
adc
fsub
mov
xchg
add
(bad)
xchg
cs
fnstsw
lock
cmps
ins
cmp
fnstcw
dec
or
xchg
mov
push
and
push
aaa
or
xor
rcl
mov
mov
ss
sahf
icebp
ins
push
xor
pop
sub
or
cli
cld
sahf
add
or
hlt
mov
xor
jnp
jge
pop
js
dec
push
cmp
call
jl
mov
call
and
jmp
(bad)
mov
inc
test
sar
cmc
ja
add
cmp
jg
call
dec
mov
mov
pop
xor
pushf
mov
jb
shl
in
push
ret
ins
retf
inc
jo
imul
sub
and
test
aam
lahf
jmp
in
(bad)
pushf
xor
dec
fstp
sbb
aam
repnz
pop
jbe
das
lock
fsubp
inc
les
xchg
mov
xor
mov
push
sub
hlt
in
pushf
nop
js
jg
(bad)
rcl
outs
add
leave
mov
inc
or
out
fild
retf
pop
int
mov
ror
ins
cmp
loope
sar
test
cmp
retf
cs
adc
out
sbb
scas
adc
out
mov
or
inc
fcom
dec
jae
jb
add
leave
xchg
icebp
jns
in
jnp
pop
and
sub
dec
repnz
stos
xchg
pop
icebp
dec
cmp
xchg
sbb
add
jns
imul
mov
cwde
lock
std
xor
mov
jnp
das
pop
add
in
xchg
mov
retf
mov
xchg
inc
mov
mov
pop
or
call
int
pop
jo
cli
inc
aad
or
mov
or
jnp
popa
gs
aas
dec
jno
repz
ret
push
sbb
push
cli
test
jbe
stc
inc
and
outs
rcl
add
xchg
mov
nop
sar
gs
xor
sti
in
popf
je
and
pusha
sbb
mov
es
xchg
push
xor
(bad)
mov
cmps
bound
push
imul
out
xchg
adc
push
push
xor
push
inc
xchg
adc
jmp
cmps
adc
out
or
mov
add
xchg
add
cmp
in
add
fwait
mov
rep
cmps
nop
(bad)
out
xchg
cld
icebp
sbb
fldpi
sub
loopne
and
push
mov
push
imul
into
cmp
adc
sub
popf
cmc
gs
sbb
movs
mov
push
and
addr16
out
jns
loopne
sub
pop
ror
arpl
pop
es
xchg
and
cmp
call
daa
sbb
(bad)
stos
mov
(bad)
movs
xchg
aad
pushf
xlat
scas
push
shl
aaa
adc
mov
pop
push
mov
jne
imul
ror
(bad)
cmp
mov
dec
adc
push
pop
sahf
mov
or
inc
in
sbb
rol
test
aad
cmc
adc
or
ins
jg
lahf
sub
mov
aas
xchg
fimul
aad
das
and
push
adc
(bad)
mov
(bad)
cmp
inc
hlt
cwde
js
shr
aad
movs
daa
mov
push
int3
int3
jns
inc
fbld
repnz
mov
lahf
pop
push
out
xlat
loop
xchg
cmp
xor
xchg
into
inc
adc
out
ins
cmps
and
or
mov
or
xchg
data16
test
or
add
(bad)
or
xchg
enter
outs
add
sbb
and
js
in
ficom
(bad)
mov
fiadd
retf
imul
cli
add
sub
ins
fs
cwde
add
icebp
and
ret
clc
sbb
dec
(bad)
lock
push
sub
retf
shl
adc
mov
fs
fdiv
mov
popf
add
pop
cs
nop
push
(bad)
mov
cmp
in
xor
stos
pusha
div
adc
mov
aad
push
push
xchg
lea
lahf
ins
or
and
pop
icebp
lds
mov
(bad)
push
xchg
leave
test
clc
jne
jbe
movs
jae
out
add
and
test
sbb
mov
(bad)
jmp
xlat
push
sub
mov
pop
sbb
aas
inc
mov
movs
dec
aam
mov
jnp
lods
and
push
std
push
pop
rcl
push
jo
stos
adc
and
out
xlat
scas
xchg
fist
or
inc
rcr
ja
stc
scas
jbe
xor
les
or
test
ss
xor
(bad)
cmc
and
int
sti
imul
push
leave
mov
(bad)
jae
jne
xchg
fsubr
je
sbb
(bad)
add
jecxz
int3
dec
and
mov
daa
jae
imul
retf
push
add
lds
dec
inc
dec
xor
es
or
and
inc
jmp
bound
std
ret
mov
stos
cmp
pop
rdpmc
inc
pop
xchg
pop
jecxz
std
shl
in
jg
nop
sbb
jmp
mov
xchg
inc
push
and
dec
dec
lods
adc
cmp
mov
clc
vmovdqu
dec
cli
sahf
mov
rol
jne
popa
fwait
or
and
(bad)
push
xchg
imul
add
add
fiadd
in
dec
mov
mov
dec
xor
sbb
mov
pushf
jmp
iret
push
push
loopne
(bad)
nop
jmp
pop
pop
xchg
icebp
je
xor
push
mov
rcr
sbb
mov
movs
popf
dec
(bad)
mov
retf
cmp
inc
pop
mov
adc
aam
cmp
or
out
jb
cmp
dec
mov
add
pop
in
xchg
neg
jg
jmp
xor
xchg
jno
ror
fsub
inc
sbb
jp
pusha
jmp
cwde
and
cmp
imul
call
jmp
inc
sahf
pop
inc
repz
ss
ss
push
mov
sub
dec
pusha
das
sub
aad
repnz
dec
mov
loop
call
adc
mov
push
cwde
pushf
(bad)
jmp
or
cmp
inc
jno
xchg
aas
push
sub
loope
dec
lods
mov
cmp
mov
adc
mov
repz
int
daa
sub
mov
js
mov
push
mov
mov
jmp
retf
add
xor
clc
pop
jns
sub
data16
dec
inc
stos
into
imul
pop
nop
sub
jmp
or
and
sub
cmp
inc
mov
(bad)
cld
test
lahf
imul
mov
in
fidivr
ja
dec
xor
xor
fs
and
loopne
popf
in
sub
xor
call
or
mov
sub
aas
xchg
cmp
aam
popf
ja
mov
jno
push
jmp
(bad)
ss
(bad)
ins
dec
add
xchg
add
dec
mov
dec
stos
adc
enter
aaa
cli
xchg
cmps
mov
scas
mov
inc
sbb
sbb
adc
mov
fwait
ss
icebp
mov
gs
shr
imul
cld
sbb
lahf
mov
(bad)
movq
test
frstor
retf
fsubr
sbb
enter
repz
sbb
gs
into
nop
inc
jge
fs
sahf
sar
adc
add
and
sub
lods
push
jns
mov
cmp
mov
into
and
mov
inc
push
ret
lea
in
call
inc
or
sub
inc
or
sbb
mov
pop
jbe
cmp
int
add
stc
repz
or
dec
fistp
sar
mov
popa
jmp
adc
inc
fisubr
inc
mov
dec
lea
cmp
add
lahf
in
or
sbb
div
popa
sub
sbb
outs
enter
add
and
loope
int3
int
dec
fs
push
into
shl
xchg
repnz
cmps
rol
lea
pushf
in
dec
cmp
or
dec
sub
ficom
pop
mov
sti
mov
repz
mov
xchg
scas
mov
dec
push
loop
push
pop
enter
lock
add
arpl
(bad)
mov
pop
jg
push
jge
mov
jp
push
in
mov
popa
mov
mov
inc
jp
push
out
jmp
push
cmp
outs
int
mov
into
loopne
mov
mov
pop
add
cmc
mov
pop
jne
adc
sbb
mov
jno
sbb
fwait
cmp
nop
cmp
sub
push
and
repnz
cmp
daa
jmp
or
xchg
or
xor
push
pop
cli
ja
rol
or
and
adc
retf
adc
fxch
xor
push
mov
into
jge
add
dec
aad
sti
sub
dec
ja
push
aad
pusha
test
shl
dec
pop
(bad)
and
sub
stos
sti
div
loopne
test
add
sbb
call
push
cmp
mov
outs
mov
inc
shl
pop
fidivr
sub
add
sub
and
pop
cmp
je
fmul
and
xor
sub
xchg
cld
mul
sbb
fisttp
leave
cwde
dec
jns
cmp
bound
pop
xchg
icebp
js
sbb
(bad)
xchg
push
rol
stos
out
push
shr
cmp
repz
mov
aas
imul
and
outs
pop
cmps
test
sub
sub
ins
jo
xlat
push
xor
push
ins
fwait
fs
xchg
cmps
test
ret
xchg
repz
or
or
add
sbb
int3
xor
cmp
lods
xor
xchg
dec
jle
retf
cmps
pop
and
pop
scas
out
jb
repnz
gs
mov
dec
test
rcr
mov
push
xor
into
fxtract
xchg
pop
into
jo
cmp
jmp
(bad)
retf
gs
push
dec
loop
inc
pop
dec
leave
and
lods
ret
add
mov
aaa
fild
jmp
jo
movs
cwde
stos
shr
fnstenv
test
sub
ja
xchg
mov
fstp
jo
lods
jmp
sub
jge
sbb
scas
and
inc
ins
jg
call
sar
ss
xor
loop
sti
in
mov
push
push
sub
repz
jmp
inc
xchg
sbb
inc
fidiv
or
push
dec
enter
cmp
inc
repz
mov
and
sbb
sub
pop
sub
imul
lds
aad
data16
into
(bad)
lahf
pop
add
aad
pusha
pop
fs
ins
mov
or
das
or
mov
push
mov
inc
in
dec
add
aad
test
outs
test
out
aaa
xchg
sub
adc
pop
icebp
jb
in
rol
cmp
adc
fnstsw
and
xchg
and
repnz
xchg
ret
pop
jp
jae
xor
imul
jmp
inc
adc
jmp
xchg
(bad)
dec
cmp
fldcw
ins
mov
sti
(bad)
in
in
retf
push
call
push
fidivr
mov
test
adc
cmp
(bad)
das
or
es
lds
or
lds
mov
push
loope
inc
fadd
fwait
jl
add
pushf
in
cmp
cmps
ror
outs
push
mov
sar
cmp
and
pusha
test
(bad)
imul
stos
je
fsubp
and
push
push
xchg
mov
and
cmps
xchg
push
je
es
push
iret
pop
ds
sub
mov
cli
(bad)
and
dec
gs
cmps
xlat
xchg
aaa
jbe
inc
lods
xor
push
mov
enter
pop
mov
int3
in
mov
test
add
cld
frstor
in
fidiv
mov
and
repnz
pop
inc
adc
pusha
lock
out
out
popa
aam
(bad)
mov
mov
fild
adc
loope
and
xchg
das
xor
push
fsubp
mov
cmp
cmps
push
sbb
rol
sub
dec
adc
cwde
inc
mov
data16
jmp
jae
cmp
add
popf
jb
mov
ficomp
imul
xchg
mov
or
jmp
test
inc
loop
add
ins
cs
cmp
mov
dec
xor
inc
sub
push
fsubr
pop
mov
mov
lea
xor
add
std
fist
repnz
ins
or
ss
dec
(bad)
out
mov
sub
push
mov
inc
and
cli
or
pop
mov
retf
pop
dec
ret
mov
push
ror
jmp
fwait
clc
sub
out
push
xchg
add
adc
mov
call
sbb
push
adc
and
clc
fistp
enter
popa
outs
jno
(bad)
loope
sbb
mov
in
and
push
sub
in
cmps
and
cmps
cmp
out
add
sbb
adc
sbb
jne
cs
je
data16
push
adc
sbb
ror
jle
mov
cmps
xlat
jns
jae
arpl
and
lds
fld
xor
add
test
popa
test
mov
adc
mov
fstp
in
mov
jg
xchg
test
mov
jge
repnz
enter
and
sub
jo
or
add
loop
push
lds
shr
jno
cmp
or
pop
inc
adc
imul
(bad)
or
(bad)
repz
imul
cli
outs
loope
shl
jmp
or
gs
pusha
xchg
push
in
mov
pop
sti
jg
jmp
(bad)
jl
jmp
and
add
or
ins
lods
loope
pushf
scas
ins
je
cmp
ins
out
jge
cli
pop
(bad)
sub
aam
(bad)
jns
ins
repnz
dec
cmps
cdq
in
jno
sbb
sbb
pop
bound
sbb
cdq
adc
into
fistp
mov
adc
mov
out
or
out
in
or
repnz
fiadd
push
in
mov
retf
pop
jnp
std
stos
jge
in
pop
jmp
outs
mov
gs
cmp
ret
sar
xor
xchg
jnp
mov
(bad)
xchg
fwait
inc
in
jne
pop
pop
jns
in
je
ds
push
jmp
movs
cdq
dec
mov
lock
es
in
mov
ja
ret
mov
or
out
ds
or
add
fwait
vpmullw
(bad)
fst
ja
sub
mov
(bad)
add
pop
push
loop
aad
and
pop
sbb
pop
mov
add
out
push
stos
bound
mov
sbb
ret
cdq
pushf
test
lods
out
jmp
and
popa
(bad)
adc
mov
lock
pop
test
repnz
add
(bad)
in
dec
pop
movs
sub
out
scas
fisub
aaa
out
aam
clc
arpl
daa
and
dec
out
xchg
jbe
and
punpckhbw
retf
mov
into
jle
adc
sub
and
stos
fcmovne
shl
push
add
cmc
adc
push
push
(bad)
lea
sbb
xchg
sbb
xchg
ins
scas
rol
repz
push
jg
bound
add
xor
(bad)
in
out
mov
xchg
xchg
cmps
stos
push
movs
cmps
add
scas
int
jg
fxch
xchg
popf
ficom
sub
jg
xor
(bad)
in
repnz
add
test
stos
sub
aam
test
sub
shl
fnstenv
mov
dec
sbb
lods
test
mov
inc
gs
sti
inc
sbb
pop
xor
repnz
add
and
cmp
adc
jl
loop
fxch
rcr
jl
pop
ficom
mov
in
stos
pop
jmp
mov
sub
sti
and
push
pusha
cmps
and
das
dec
dec
sbb
sbb
pop
cmp
pushf
mov
or
mov
imul
mov
sub
cld
and
sbb
loopne
sub
frstor
mov
icebp
and
sbb
outs
add
jecxz
jmp
pop
inc
(bad)
imul
dec
push
retf
cmp
push
ret
adc
shl
inc
sub
cld
sbb
sub
in
and
scas
pop
cmp
xor
fisubr
movs
pop
cs
(bad)
scas
stos
ficom
std
(bad)
push
lock
dec
jl
sub
fdivr
neg
je
mov
popf
sub
pop
std
jl
stc
mov
cwde
add
cmp
stc
mov
ins
clc
add
(bad)
out
ror
push
jp
ret
and
add
sbb
cmp
data16
sbb
(bad)
clc
stc
imul
inc
cwde
loopne
fcmovnbe
out
push
mov
sti
sbb
and
jns
outs
sub
fadd
popf
mov
jne
sar
outs
jge
lods
xchg
mov
xchg
dec
call
cmp
dec
inc
loop
mov
in
std
lods
test
xchg
sbb
or
mov
mov
je
hlt
pop
pop
sti
add
call
imul
lods
dec
xchg
add
inc
icebp
add
push
rcl
push
or
pop
push
rcl
cld
es
pusha
pop
aam
retf
ja
or
cmp
or
sub
call
icebp
adc
sbb
fimul
rcr
dec
xchg
push
lea
repz
cmps
hlt
pop
pop
sbb
mov
pop
xor
test
dec
jmp
sar
fwait
cbw
jne
cld
lods
jmp
jns
inc
add
mov
xor
cmp
(bad)
clc
fldcw
sbb
mov
and
(bad)
fwait
push
jae
enter
push
retf
sti
out
xchg
rcr
in
push
(bad)
rep
pop
addr16
jl
aaa
fist
into
inc
lahf
xchg
enter
add
das
in
mov
jo
stos
daa
rol
sub
imul
outs
xlat
ror
xor
xchg
mov
adc
loop
fadd
pop
test
ret
mov
xchg
push
adc
mov
pop
dec
jmp
lea
xchg
mov
pushf
or
xor
out
test
and
xchg
mov
mov
cmp
gs
je
cmc
rol
dec
aad
xchg
(bad)
xchg
sub
pop
xor
loop
aas
test
movs
loope
enter
xchg
icebp
xchg
gs
push
inc
mov
out
mov
xchg
jl
sub
push
sub
and
mov
aas
fist
pop
dec
stos
or
es
mov
test
pushf
cli
push
sub
pop
sbb
loopne
(bad)
icebp
in
pop
jmp
jb
test
jmp
nop
pop
mov
cmp
mov
xchg
xchg
xchg
adc
stos
inc
test
sbb
inc
je
inc
or
inc
sub
cmps
aaa
call
mov
jmp
sbb
adc
jae
std
ss
fmul
shl
jns
cs
xchg
fnsave
movs
add
loopne
xor
(bad)
fcomp
stos
pop
add
lahf
fdiv
xchg
sbb
push
push
mov
in
jae
jne
stos
or
push
dec
pop
cwde
and
das
std
adc
nop
and
sbb
(bad)
addps
dec
fadd
popa
inc
lods
ins
and
mov
enter
cwde
(bad)
sub
pop
sub
cmp
js
or
mov
dec
pusha
push
or
cli
and
xor
fiadd
sub
inc
adc
loopne
lds
fisub
adc
xor
leave
mov
mov
in
js
dec
rol
psubusb
sub
push
xchg
inc
inc
add
ret
addr16
dec
inc
inc
neg
mov
outs
int
sub
retf
imul
fcomp
iret
jmp
mov
add
sbb
adc
enter
rcl
and
push
mov
ror
push
cmp
adc
mov
not
dec
push
add
ret
(bad)
adc
push
and
ret
pop
icebp
dec
test
push
scas
fidiv
pshufw
clc
cmp
mov
loope
stos
pop
and
leave
fwait
mov
sub
call
mov
xchg
nop
jo
out
cwde
pop
cmp
mov
ja
mov
xor
pushf
pop
fisttp
bound
inc
(bad)
and
cld
adc
inc
loop
cmps
pop
bound
call
adc
imul
jne
xor
inc
cmp
dec
scas
adc
pop
add
push
push
mov
shr
sbb
and
(bad)
test
rcr
adc
push
imul
and
arpl
je
mov
jae
(bad)
aaa
cmp
hlt
adc
hlt
xchg
rol
shl
mov
xor
ret
mov
pop
sub
xchg
imul
or
enter
leave
add
imul
out
retf
adc
adc
xor
xchg
or
std
iret
hlt
pop
xchg
pop
mov
pop
and
stos
mov
(bad)
scas
cmp
ja
sti
loopne
inc
mov
out
add
jne
jp
inc
push
retf
mov
jns
mov
inc
call
fisubr
dec
xchg
(bad)
popf
mov
outs
add
cmc
inc
jmp
out
imul
or
pop
into
inc
shr
dec
or
(bad)
int
leave
ret
lods
xchg
dec
dec
xlat
movs
ds
mov
(bad)
mov
cli
in
cmps
mov
jnp
hlt
pop
pop
and
mov
leave
in
pop
stos
sbb
or
push
ds
out
pop
dec
lea
adc
dec
inc
in
dec
jo
cwde
sub
push
add
add
lods
ja
movs
adc
aad
mov
and
jle
push
sbb
cmp
les
aam
sub
popf
mov
mov
add
fisttp
xor
stc
mov
sub
scas
push
cmp
cmp
icebp
nop
jno
sahf
cwde
aam
in
sbb
hlt
inc
iret
test
fild
inc
mov
cwde
pop
sub
mov
jno
(bad)
mov
dec
dec
mov
pop
xchg
adc
push
fisttp
sbb
popf
dec
jb
int3
sbb
jae
es
popf
mov
rcl
inc
imul
pop
mov
xchg
int3
xchg
jle
inc
sar
sahf
leave
xor
addr16
loop
xchg
mov
fisub
nop
or
cmp
and
in
in
mov
(bad)
lds
push
adc
hlt
jb
addr16
xor
and
fsubr
into
inc
or
cs
inc
cli
pop
sbb
ss
in
sub
fmul
push
(bad)
sbb
jbe
fidivr
mov
add
mov
and
mov
stos
leave
retf
xor
jo
bound
push
out
push
push
enter
fisub
mov
leave
addr16
sbb
retf
xor
cmp
cli
or
mov
mov
stc
retf
add
xor
inc
inc
inc
icebp
jmp
test
dec
adc
jno
inc
pop
pop
add
(bad)
out
cmp
out
jo
or
mov
sub
aaa
std
repz
ds
cdq
cmps
mov
stos
hlt
pop
mov
repnz
fadd
es
cmp
cmp
xchg
jecxz
push
add
xchg
mov
cmp
push
mov
xchg
fcom
push
mov
je
aas
mov
and
pop
aam
call
mov
pop
add
jl
cmp
xchg
mov
mov
sub
inc
push
mov
sub
std
dec
and
push
pop
xchg
ret
mov
mov
pop
sbb
jne
push
fidiv
popf
aam
xor
inc
pop
call
pushf
mov
fidiv
js
dec
mov
push
stos
shr
js
push
mov
pop
mov
out
mov
mov
xor
lods
push
in
jbe
imul
mov
into
enter
into
sbb
adc
mov
jae
mov
lods
mov
add
add
sub
call
popf
xchg
mov
lock
sbb
int
mov
push
add
xchg
xchg
mov
jmp
out
repz
xchg
pop
adc
ds
cmp
push
jle
xchg
adc
pop
add
es
je
add
retf
into
and
jmp
mov
lahf
cdq
into
iret
imul
test
shl
mov
fdivr
xlat
cmp
and
outs
sbb
movs
jmp
adc
add
mov
mov
mov
add
(bad)
pop
or
or
push
aad
fs
mov
scas
pop
push
dec
das
leave
neg
addr16
pop
out
sbb
fsubr
(bad)
pop
pop
data16
jp
and
ss
es
or
and
fstp
sub
jecxz
aaa
mov
push
jae
xchg
pop
dec
mov
xor
or
scas
xor
sub
push
mov
sub
adc
retf
pop
push
sub
pop
outs
add
cmc
mov
mov
or
call
mov
stos
and
pop
cmc
mov
je
rol
movs
sub
lods
xlat
out
push
mov
cmp
test
push
jmp
pop
aam
fnsave
inc
inc
adc
inc
sbb
shr
inc
mov
aaa
or
test
in
dec
jmp
mov
push
adc
mov
rol
mov
fcmove
xchg
retf
retf
dec
and
jbe
imul
das
mov
idiv
aaa
sbb
jp
daa
outs
inc
fwait
xchg
scas
mov
mov
ds
jb
adc
sub
push
idiv
mov
cmp
fnstsw
mov
mov
arpl
dec
test
mov
jbe
pusha
add
ins
fs
xor
sahf
imul
out
adc
repz
cmc
adc
out
jg
fcomp
fdivr
out
and
call
aaa
lea
into
(bad)
pop
mov
xor
lock
pushf
pop
rcl
aaa
test
fisubr
test
outs
iret
xchg
mov
push
iret
mov
xchg
call
inc
inc
ins
pop
cs
sahf
pop
and
mov
jecxz
test
and
adc
in
jp
mov
loopne
shl
aas
pop
fucompp
aad
mov
mov
call
lock
loop
pop
outs
and
ds
push
cmp
sar
cld
dec
xchg
and
sub
lods
cwde
mov
jge
pusha
sbb
rol
inc
xchg
jge
stos
scas
push
mov
lds
pop
fwait
push
jle
in
ins
pop
lds
enter
popf
xor
xchg
pop
mov
adc
or
xchg
adc
sbb
add
fwait
out
sub
jmp
gs
jle
adc
push
das
xchg
mov
push
add
mov
inc
lahf
push
or
cs
in
mov
jns
pop
iret
imul
cmp
or
ds
xchg
inc
mov
pushf
mov
sub
(bad)
dec
call
fiadd
push
arpl
xchg
ss
fcmovu
sahf
aad
mov
mov
push
lahf
dec
jbe
pop
cmps
mov
add
sti
pop
xchg
mov
test
sub
add
aas
pop
add
mov
pop
add
fwait
or
sub
stc
and
sub
(bad)
fwait
pop
mov
gs
sbb
push
xor
in
mov
test
out
aad
jg
mov
jmp
adc
in
mov
cli
iret
or
mov
jns
add
mov
test
cld
xor
(bad)
jae
jb
dec
push
push
adc
mov
mov
lods
mov
dec
pop
fwait
shl
test
(bad)
jmp
pop
lds
cwde
pop
test
jnp
add
pop
jns
pop
dec
mov
lahf
and
push
outs
test
int3
xor
inc
pcmpeqw
xchg
and
pushf
jmp
sbb
xchg
shl
fwait
sbb
xchg
dec
icebp
add
sbb
movs
push
in
push
push
pop
jecxz
popf
xchg
mov
and
inc
pop
and
retf
(bad)
sbb
sbb
inc
cmps
test
inc
jo
sbb
cmc
cs
out
jno
rcl
das
inc
and
pusha
popa
inc
jb
mov
sbb
lahf
push
imul
(bad)
pusha
pop
popf
dec
sbb
sbb
adc
pop
lock
jg
xchg
ret
mov
sbb
add
pop
std
std
fcomp
jmp
imul
or
xchg
adc
inc
dec
xor
dec
dec
mov
rcl
jl
lea
adc
jbe
scas
pushf
loop
add
leave
jmp
cmps
pop
icebp
mov
inc
ret
mov
add
xor
(bad)
cli
bound
add
pop
xor
(bad)
outs
adc
ror
pop
loope
outs
add
retf
fidivr
push
adc
sub
mov
and
sub
fwait
addr16
push
ja
loopne
jge
(bad)
fsubr
outs
jnp
std
add
sbb
aas
mov
dec
fcom
mov
jo
ins
and
dec
mov
pop
xlat
das
push
fnop
push
mul
pop
add
les
ror
nop
cli
ins
adc
mov
pop
jg
mov
std
rcr
jmp
pop
jae
sub
repz
lahf
cli
sub
dec
std
out
enter
call
cmp
out
or
push
in
call
test
stc
inc
pop
mov
jle
mov
pop
shr
xchg
and
stos
imul
xor
push
cmp
xchg
pop
inc
mov
and
xor
sbb
push
cmc
fistp
ja
mov
movs
leave
ror
pushf
mov
xor
in
xchg
pop
test
(bad)
shl
cld
xor
lds
stos
loope
imul
lea
jmp
add
push
shr
sbb
lock
add
xlat
sahf
mov
iret
popf
push
adc
shl
ror
outs
mov
pop
jo
movs
out
mov
cmps
ds
cmps
dec
hlt
retf
fisub
lahf
imul
jg
call
popa
dec
and
aad
int
jecxz
pop
scas
inc
mov
cmps
mov
push
pop
add
dec
push
sub
cmp
and
cdq
loop
pop
dec
and
out
(bad)
pusha
pop
daa
test
jae
popf
stos
inc
and
out
xor
or
mov
inc
push
in
dec
out
pop
lds
call
in
mov
and
add
jmp
xchg
shl
leave
push
mov
sbb
or
(bad)
adc
mov
or
rcl
fninit
cmps
adc
push
scas
ret
ret
popa
out
add
cmps
push
add
adc
pop
(bad)
pop
jge
jl
ds
push
xchg
(bad)
add
int
lock
add
div
cs
add
loop
aaa
mov
sbb
xchg
mul
xor
test
mov
test
adc
mov
sahf
or
mov
xor
xor
or
(bad)
inc
stos
nop
jmp
daa
iret
addr16
gs
(bad)
fwait
icebp
xchg
pop
iret
mov
and
jns
inc
icebp
xor
imul
fld
frstor
mov
xor
repz
mov
push
jge
cmc
and
test
outs
adc
enter
leave
dec
xor
fdiv
pop
mov
mov
aaa
xchg
test
mov
sbb
or
xchg
mov
mov
iret
hlt
lods
push
pop
idiv
mov
mov
or
movs
icebp
sub
(bad)
cdq
fcom
stc
ins
cmp
retf
pop
std
out
stos
lahf
fcom
add
je
jb
or
mov
mov
out
ins
push
and
push
imul
xchg
sbb
int
fadd
push
pop
movs
ins
push
iret
fnstsw
pushf
mov
add
adc
mov
daa
push
xor
jnp
adc
and
pop
cmps
lahf
lods
xchg
push
(bad)
sub
test
lods
cwde
jg
inc
into
xchg
jns
jmp
sbb
ret
popw
and
fsub
mov
jge
rcl
icebp
jo
pop
mov
dec
mov
not
mov
xor
jl
into
xor
cmc
dec
outs
adc
and
and
or
je
jo
mov
div
fst
adc
lds
sbb
and
sub
inc
dec
ss
inc
in
sbb
fsub
adc
xor
mov
pop
dec
adc
in
int3
jmp
add
stc
jle
adc
imul
scas
cmp
aam
or
(bad)
pop
mov
je
(bad)
mov
pop
pop
fs
rcr
xchg
xlat
pop
sub
dec
push
or
outs
inc
sbb
mov
sub
dec
out
sbb
mov
or
cmps
mov
stc
adc
inc
fld
pop
dec
ret
mov
add
dec
loop
das
retf
push
in
shl
lahf
adc
xor
inc
cdq
and
cmp
jmp
cmp
imul
ret
inc
sub
sbb
jecxz
push
cmp
add
ror
adc
iret
add
inc
sbb
mov
sbb
adc
into
inc
ins
push
cs
fild
in
pop
(bad)
out
jns
add
std
mov
aad
add
mov
imul
xchg
les
dec
stc
ja
daa
repz
push
cmps
sub
or
idiv
xchg
jecxz
adc
arpl
xchg
out
cs
std
cmp
out
xor
loop
or
and
fsub
retf
inc
mov
push
add
mov
nop
push
or
xchg
in
sub
mov
in
add
sub
jmp
push
dec
repz
addr16
fild
das
mov
stos
jns
mov
in
mov
sti
mov
mov
inc
cwde
and
mov
fstp
push
pop
(bad)
clc
and
or
sbb
mov
and
xchg
mov
or
cmp
mov
mov
std
rcr
pop
out
fwait
into
xchg
xchg
outs
pop
sbb
jnp
(bad)
jnp
add
aas
cdq
scas
int3
ss
dec
mov
sbb
lds
push
inc
jmp
xlat
mov
std
sar
loop
sub
aaa
(bad)
adc
cs
outs
bound
xchg
inc
(bad)
retf
dec
cmp
and
rcr
mov
sub
mov
icebp
mov
or
xor
fs
(bad)
xor
fdivr
mov
jmp
shl
lods
push
xor
or
icebp
cwde
and
push
mov
test
fs
xchg
shl
(bad)
(bad)
addr16
cmp
ret
pop
add
cmc
ret
(bad)
std
mov
or
mov
pop
div
xchg
sub
clc
cs
dec
adc
jle
scas
add
arpl
movs
jnp
xchg
or
aaa
loopne
loopne
mov
jnp
ds
loop
(bad)
pusha
jp
enter
loopne
aam
mov
or
cwde
cmc
push
jg
inc
test
jbe
popf
jecxz
sbb
pop
fisub
fld
(bad)
out
mov
ss
or
push
loope
daa
xor
repz
ror
fld
shl
inc
add
dec
adc
ja
xor
retf
fistp
std
sbb
jle
pop
jmp
mov
aad
sub
loopne
dec
imul
mov
imul
test
pop
inc
mov
add
xchg
xchg
ins
ret
xchg
pop
pop
push
clc
or
add
stos
stc
inc
clc
mov
fsub
sar
in
test
push
movs
mov
stos
mov
stos
lods
pop
jmp
push
ds
(bad)
mov
enter
add
add
in
pop
aad
jp
into
sahf
or
fdivr
dec
mov
mov
xor
repz
push
inc
sar
adc
hlt
fst
call
aam
aas
inc
add
mov
and
mov
push
pop
cdq
mov
mov
and
xchg
rol
aaa
and
push
mov
shr
add
cwde
jecxz
or
dec
in
cmp
es
aad
xchg
cmps
cs
test
dec
in
and
imul
iret
in
pop
lods
mov
test
add
inc
mov
(bad)
fld
sub
lds
loopne
dec
xchg
rol
dec
jmp
xor
icebp
aad
or
adc
ins
and
pop
out
mov
xchg
mov
test
or
or
sub
pop
in
fild
(bad)
pop
lock
add
add
lahf
xor
xor
or
fwait
sub
aaa
cli
jne
pushf
stc
mov
jecxz
dec
xchg
inc
mov
aad
(bad)
sub
adc
mov
cmp
(bad)
ror
xor
movs
pop
repz
ror
cli
mov
mov
and
sti
inc
cld
in
addr16
mov
ret
sbb
test
or
mov
outs
scas
cmp
jno
xlat
or
jbe
rcr
push
dec
js
in
icebp
push
(bad)
int
add
ret
fsubr
ficomp
pusha
inc
bsf
add
xchg
gs
movs
shl
or
jecxz
gs
mov
cwde
les
cmp
pop
movs
sbb
pop
inc
iret
sar
cmp
xchg
mov
sub
cmp
inc
(bad)
pop
into
or
mov
add
mov
xchg
mov
and
fdivr
leave
ds
fdivr
in
push
push
pop
js
cli
cmc
clc
jnp
mov
xchg
inc
or
inc
rcr
jnp
jg
push
aam
and
fst
inc
mov
loop
retf
div
push
pop
(bad)
ficomp
dec
call
pop
cmc
stos
jo
cmp
aas
gs
adc
mov
mov
push
push
and
outs
pop
pop
xor
stos
push
xchg
stos
mov
aaa
loop
sub
jmp
mov
adc
cs
jo
cmp
sbb
loop
sti
adc
lods
dec
out
adc
imul
fstp
test
mov
in
mov
or
dec
stos
in
(bad)
cmp
xor
dec
int
loop
sub
dec
fprem1
and
popa
dec
jp
jbe
and
pop
mov
add
dec
mov
add
jnp
dec
arpl
outs
leave
xchg
sbb
scas
test
jle
fild
mov
push
add
jbe
xor
mov
out
pop
int
shr
push
pop
or
retf
lods
aad
cli
or
out
xchg
jecxz
lea
ret
cwde
push
xchg
push
inc
mov
push
daa
retf
stos
cmp
arpl
dec
imul
push
jnp
sub
push
jbe
add
shl
push
movs
imul
shl
adc
cmp
das
(bad)
fld
adc
mov
enter
stos
adc
mov
xor
int3
cmp
mov
adc
das
aas
jg
mov
sahf
cmp
xor
cmp
and
movs
sub
pusha
add
ror
aas
fimul
pop
fmul
jo
push
inc
retf
std
pop
dec
retf
mov
jmp
lds
out
dec
mov
cmp
clc
retf
xor
pop
sub
jno
xlat
mov
cld
sar
inc
and
or
pop
stos
add
jp
inc
sub
xchg
ins
call
sub
mov
sbb
mov
sbb
jmp
push
mov
cmps
out
mov
and
dec
dec
popf
es
and
jge
add
cmp
lods
lahf
push
lods
ds
xor
out
push
mov
cli
mov
push
aas
movs
jnp
hlt
cmp
jmp
mov
mov
stos
mov
imul
cmp
es
fwait
and
dec
push
sbb
shl
int3
in
rol
dec
xchg
xlat
or
fild
loope
xor
pusha
mov
jl
add
cmp
push
mov
jle
es
in
xor
xor
push
mov
repz
adc
pop
into
rcl
push
pop
scas
inc
add
pop
jnp
jo
aad
lahf
imul
jmp
xchg
add
and
es
(bad)
in
dec
mov
mov
inc
arpl
lods
dec
fcmovbe
(bad)
inc
sub
xor
int
inc
lock
call
movs
clc
fstp
mov
sbb
out
fsub
push
test
(bad)
pop
into
jp
dec
test
dec
jo
outs
clc
xchg
mov
leave
cmps
or
mov
retf
(bad)
jb
jmp
jmp
jo
jne
pop
mov
ror
popa
push
adc
dec
jb
sahf
iret
daa
les
(bad)
call
jbe
add
jmp
leave
mov
neg
inc
retf
iret
mov
imul
aas
and
adc
adc
hlt
xchg
jle
daa
cmp
mov
popf
jle
lods
js
js
and
mov
ror
mov
das
call
mov
setb
dec
arpl
lods
jg
sahf
frstor
sti
loopne
enter
or
fs
test
les
pusha
xor
xor
dec
sub
push
jge
dec
and
into
adc
(bad)
xor
bound
cdq
(bad)
loop
fcmovnu
and
pop
sub
fbstp
jns
or
add
jmp
cmovae
out
push
lahf
faddp
pop
nop
lds
mov
or
neg
icebp
test
add
jmp
and
cmp
xor
pop
adc
and
retf
les
rcr
ins
loopne
fcom
ins
jne
jnp
shl
push
or
add
das
cmc
jl
out
mov
mov
xor
jg
cwde
out
(bad)
inc
stos
adc
dec
arpl
mov
pop
es
hlt
into
sub
jno
push
ret
mov
pusha
cmp
push
add
push
push
fimul
nop
fcmovnbe
out
mov
add
outs
ret
(bad)
or
push
adc
imul
pop
loop
outs
or
mov
into
stc
fisub
mov
aaa
fld
cs
sbb
into
fbld
push
xor
or
js
mov
add
push
mov
jb
lahf
mov
retf
(bad)
dec
(bad)
je
inc
jae
(bad)
sahf
movs
imul
stos
test
inc
cmps
(bad)
std
push
jne
pop
std
mov
ficomp
xchg
lods
das
add
test
call
inc
cmp
out
mov
fist
pop
pushf
push
mov
leave
cdq
pop
cmp
(bad)
fistp
hlt
clc
movs
(bad)
mov
pop
jo
pop
and
scas
outs
mov
adc
(bad)
hlt
loopne
(bad)
jnp
jnp
push
pop
test
push
mov
cdq
jno
push
jle
sub
sti
movs
fwait
pop
fs
movs
xor
or
pop
(bad)
fst
and
out
in
push
pop
outs
(bad)
dec
push
jae
mov
popa
repnz
mov
xchg
xchg
fld
push
and
lds
pushf
inc
sbb
movs
inc
and
dec
aam
inc
xchg
data16
sbb
(bad)
and
repz
mov
fs
push
xchg
inc
dec
retf
xchg
jbe
add
jg
mov
fwait
das
dec
cld
push
out
bound
mov
push
test
aas
int3
mov
mov
lahf
data16
adc
int
rcr
mov
xchg
out
cld
jo
movs
add
popa
dec
xor
ss
imul
cmp
pop
sar
jmp
pop
clc
lods
mov
and
lock
or
lods
push
xchg
pop
mov
xchg
iret
add
scas
ret
xor
dec
daa
jnp
and
rcl
aas
cli
(bad)
fstp
movs
ja
das
sub
mov
idiv
fucomi
icebp
mov
add
adc
cmp
adc
out
cwde
or
icebp
adc
jmp
sbb
inc
mul
stos
mov
xor
div
sub
sub
retf
mov
sti
in
or
mov
mov
jnp
lods
hlt
into
xlat
jmp
dec
scas
jae
sub
in
icebp
xor
xchg
imul
fild
cmp
push
xor
out
mov
dec
dec
popa
(bad)
in
xor
and
fld
dec
xchg
inc
push
imul
push
cmps
sub
cli
inc
je
adc
data16
sti
mov
jo
inc
inc
add
call
xor
int3
test
out
rol
addr16
in
outs
fwait
sbb
mov
pop
dec
jmp
rcl
push
add
or
shl
rcl
push
in
inc
sbb
icebp
dec
gs
push
sbb
icebp
out
mov
mov
sub
(bad)
cmc
inc
jo
fiadd
jp
inc
cld
push
fwait
dec
xchg
mov
pop
fs
cmps
mov
jmp
push
ret
or
inc
pop
lea
arpl
push
mov
imul
shl
and
fidivr
mov
sub
shl
or
leave
(bad)
stc
rcl
mov
imul
imul
adc
jae
push
loop
in
or
daa
retf
cwde
push
jo
cmp
out
in
push
das
repnz
sbb
cmp
jg
jmp
sub
xchg
loop
mov
pop
add
out
xchg
adc
js
je
pushf
leave
jnp
into
and
mov
int
sbb
mov
or
dec
inc
test
scas
loop
in
xor
add
sahf
xchg
pushf
sbb
mov
xchg
mov
out
shl
test
pop
rcr
sub
out
and
jp
xchg
dec
inc
xchg
popa
cmp
sti
repnz
xor
sahf
inc
fcmovb
out
mov
jge
lea
mul
les
cmps
push
mov
inc
fcom
jmp
leave
(bad)
mov
xor
mov
sub
call
mov
mov
xor
mov
mov
lods
pop
adc
shl
jbe
mov
int3
sub
pop
daa
lds
sti
pop
arpl
or
mov
in
push
loope
or
adc
aam
ins
fs
cmp
call
lods
(bad)
push
xor
loop
in
cmp
pop
jmp
sbb
pop
cmp
cmp
pop
adc
pop
out
inc
scas
sbb
jl
jne
mov
movs
sub
add
mov
dec
and
jnp
add
add
lahf
cdq
in
push
jnp
inc
mov
xchg
test
mov
cli
sbb
pusha
adc
mov
xchg
std
clc
test
add
push
rol
stos
cmp
sbb
pop
pop
dec
pop
pop
push
lea
or
jo
fnstcw
pop
dec
mov
and
and
daa
cmp
push
mov
je
out
jno
xor
in
pop
xchg
int
or
add
mov
add
or
sub
dec
xlat
std
adc
xchg
shr
mov
popa
mov
mov
cmp
fdivrp
xchg
mov
repz
dec
sub
xchg
dec
outs
je
mov
(bad)
adc
pop
or
out
sub
and
shl
aas
stos
hlt
sti
or
test
test
or
in
and
jmp
xlat
mov
cmps
dec
call
in
adc
(bad)
mov
dec
and
adc
add
lahf
mov
retf
or
dec
pop
outs
and
iret
scas
pusha
lods
(bad)
fiadd
push
inc
xchg
inc
test
inc
mov
nop
and
aad
cmps
push
movs
stos
in
loop
inc
js
mov
lods
clc
xchg
test
stc
push
adc
xchg
jle
ins
fs
jae
mov
stos
out
pop
imul
cs
(bad)
adc
push
fidiv
push
push
inc
dec
jg
seto
jne
scas
add
inc
lods
movs
repz
mov
mov
sti
icebp
sahf
mov
or
popf
je
dec
(bad)
repnz
(bad)
data16
xor
ja
je
sub
fs
scas
sub
loop
add
leave
adc
inc
lock
fdiv
pop
push
pop
pop
inc
or
mov
sahf
ror
inc
mov
jns
ins
xchg
and
push
fistp
out
xchg
movs
addr16
dec
(bad)
jbe
imul
dec
clc
mov
jmp
push
mov
jbe
and
cld
sub
cs
cmp
dec
nop
mov
xor
jmp
sar
fs
push
int
dec
mov
mov
repz
in
or
push
add
clc
outs
sbb
mov
xchg
das
and
(bad)
loopne
adc
popf
inc
sbb
xchg
xchg
mov
dec
sub
dec
pop
shl
xor
sub
sub
pop
fs
jle
es
cwde
rcl
stc
mov
call
lahf
sbb
pop
inc
mov
or
lods
add
fwait
popf
xor
fist
adc
push
jge
test
mov
cmp
cwde
fcmovnbe
cmp
(bad)
mov
popf
pop
push
pop
lea
sahf
aaa
jl
dec
inc
jae
dec
pop
int
jge
add
add
mov
push
mov
sbb
scas
mov
pop
addr16
shr
es
outs
dec
or
xchg
imul
(bad)
pop
cwde
lods
sti
jg
(bad)
rcr
fs
ret
loope
rol
scas
mov
shr
xchg
mov
add
imul
jge
in
xor
xchg
les
sbb
pop
retf
scas
adc
inc
(bad)
cmp
test
retf
repz
ss
cs
and
test
inc
sbb
add
xchg
loope
pop
jbe
fisubr
xor
hlt
xchg
sti
cwde
ss
data16
mov
ret
or
repz
idiv
cmp
push
imul
rcr
adc
in
xchg
cmc
push
mov
jecxz
sbb
pop
jno
mov
pop
add
inc
or
jmp
pop
mov
push
push
sub
jg
cmc
jle
push
out
mov
in
and
jb
cmp
cld
sbb
vpmuludq
or
mov
stos
inc
xchg
scas
call
mov
inc
es
repz
pop
cs
push
mov
jl
dec
test
out
pop
lds
pop
clc
add
hlt
push
movs
std
pop
fwait
push
and
xchg
mov
or
jno
or
xor
les
push
enter
add
mov
inc
ss
jmp
cmp
mov
pusha
pushf
or
pop
mov
mov
ins
jnp
and
cmc
pushf
nop
xor
or
icebp
aas
jle
mov
lock
jmp
adc
xchg
push
movs
sbb
(bad)
sub
sti
pop
movs
xchg
mov
mov
push
jnp
or
aaa
lds
sbb
and
into
scas
inc
sbb
ret
inc
sub
jge
int3
jle
vpmacssdqh
inc
adc
sahf
xor
pop
data16
push
xchg
fcom
fst
sbb
inc
fistp
cdq
mov
stos
xor
mov
test
push
cmc
sub
xor
test
cmp
test
mov
cmp
neg
push
sbb
popf
out
xchg
out
fs
cld
gs
rcr
and
mov
sbb
lods
out
or
xor
shl
cdq
dec
pop
clc
test
loop
ins
sbb
test
fcom
rol
std
pop
(bad)
xchg
push
dec
aas
dec
ins
pop
adc
ins
ret
sub
or
dec
adc
mov
sbb
pop
jo
jp
jo
sbb
nop
gs
inc
add
pop
scas
icebp
lahf
xchg
sub
ss
(bad)
mov
ret
jmp
and
inc
xor
ror
mov
mov
mov
pop
inc
xor
xchg
cmps
xchg
and
xchg
xchg
(bad)
cmp
push
sar
ja
ret
pop
mov
add
in
inc
fcmovnb
and
cwde
mov
xchg
dec
test
mov
jns
or
sbb
adc
add
push
scas
scas
test
sbb
cmp
and
fild
test
pop
xor
mov
jnp
push
jg
mov
jle
rcr
pop
dec
int3
setl
cmp
ins
jno
or
add
sbb
cmps
stos
movs
(bad)
test
nop
xor
sub
sti
inc
push
push
dec
jne
mov
mov
ficom
push
xchg
push
call
int
lock
mov
xchg
into
add
push
xor
clc
add
inc
pushf
inc
call
mov
or
movs
and
shr
ret
fxch
scas
sbb
mov
retf
and
pop
cli
push
push
cmp
nop
sbb
sbb
and
sub
icebp
xchg
add
pop
dec
mov
cli
outs
int3
je
jae
jns
or
sub
push
std
xchg
ds
cmp
jns
inc
cmp
into
fsubr
icebp
sbb
sbb
and
(bad)
xchg
add
adc
jmp
lahf
adc
xchg
pop
pop
inc
or
push
mov
arpl
inc
stos
mov
or
jmp
sar
jge
cmps
inc
cli
and
das
and
and
push
pop
cs
dec
popa
das
dec
cmps
popa
fidivr
or
scas
out
movs
mov
out
xor
mov
ficomp
outs
mov
scas
mov
xchg
dec
mov
ror
xchg
les
and
sub
push
adc
push
adc
push
sub
lods
dec
xchg
inc
xor
mov
ret
mov
ja
aad
mov
add
mov
cmp
push
dec
add
cmp
fwait
loopne
dec
cdq
cmps
and
test
shl
sbb
arpl
out
or
shl
jb
mov
movs
pop
pop
push
les
in
mov
lea
imul
cmp
cdq
shl
sub
pop
cmp
lea
push
stos
push
lahf
scas
cmp
lock
stos
inc
sub
(bad)
rcr
sub
out
mov
and
mov
and
sbb
mov
mov
sbb
inc
mov
sbb
dec
es
scas
div
add
sahf
adc
xor
adc
mov
aam
mov
arpl
stos
popf
adc
mov
loop
ins
inc
add
das
inc
dec
mov
bound
bound
test
cmp
adc
pushf
scas
push
std
mov
or
jg
sbb
fist
xor
ret
aaa
xor
hlt
or
xchg
leave
inc
aam
icebp
cli
jge
aaa
scas
jb
jmp
mov
ret
test
adc
adc
ins
(bad)
repnz
in
sbb
(bad)
jmp
cmp
inc
push
mov
jno
push
cmps
ret
mov
pop
jns
mov
loopne
iret
mov
ja
into
and
adc
add
rcr
enter
jmp
sti
push
cmp
jmp
sub
bswap
sub
pop
sub
jecxz
pop
js
sub
(bad)
idiv
mov
not
inc
int3
mov
pop
fnstcw
enter
mov
(bad)
push
shl
adc
(bad)
out
out
aaa
inc
in
lock
out
enter
loope
or
xlat
add
(bad)
mov
sub
fcomp
push
or
cli
jns
cmc
adc
out
loop
pop
shl
mov
xor
or
pushf
xor
gs
inc
shl
cdq
(bad)
push
pop
(bad)
aas
sahf
cmp
out
pop
push
xchg
push
in
xchg
dec
popf
jb
mov
xchg
xor
cli
mov
dec
add
ja
stc
xchg
push
inc
push
shr
nop
xlat
test
sahf
stc
mov
fbstp
cmp
push
xor
mov
repnz
lock
repnz
or
(bad)
es
jmp
aam
scas
dec
lods
fsubr
cmp
fisttp
popf
in
sub
push
(bad)
jge
push
les
vpcmpgtw
daa
cmps
mov
jecxz
pop
xor
and
mov
fdiv
push
aam
jb
(bad)
jl
xchg
pop
mov
mov
scas
inc
int
mov
sub
mul
ret
push
mul
and
or
mov
adc
ret
xor
ss
pop
xor
xchg
aaa
cmp
mov
out
jl
sub
xchg
xor
jmp
add
lahf
dec
adc
mov
push
int3
scas
xchg
cmp
cmp
sbb
adc
call
xchg
out
dec
inc
cmp
and
rol
sbb
(bad)
jmp
ficomp
push
adc
sbb
jle
in
jl
das
cli
fwait
call
js
f2xm1
jbe
pop
loope
call
div
(bad)
retf
pop
jmp
mov
(bad)
test
and
dec
jp
sub
jl
cmp
(bad)
adc
jge
mov
push
mov
xchg
pop
mov
cmps
shr
pop
jmp
iret
cmps
dec
mov
ins
pop
sbb
pop
fld1
movs
sub
ss
sbb
add
jge
sbb
nop
jbe
retf
sub
clc
pop
and
sbb
or
ins
push
pop
mov
enter
jno
les
rol
pop
jmp
and
fist
in
pop
jae
xchg
sub
cmp
add
sbb
mov
push
sbb
inc
push
xchg
mov
je
sbb
cmps
aad
cmp
rcr
ror
(bad)
mov
imul
fisubr
test
xchg
loop
xor
sub
aad
xor
jns
lods
repnz
popa
push
test
xchg
daa
add
cs
mov
add
sub
add
ret
fmulp
add
mov
enter
mov
pop
or
ins
les
(bad)
addr16
out
mov
mov
test
enter
push
rcr
loop
or
rol
out
popa
xor
xchg
add
or
cmc
(bad)
aad
js
lods
out
add
pusha
retf
lods
sub
loop
xchg
cmp
inc
movs
(bad)
pop
cmps
sti
or
xchg
inc
sub
xchg
or
xor
mov
loope
mov
jl
xor
jle
movs
jmp
jecxz
xchg
(bad)
imul
or
icebp
jae
mov
sbb
cs
jmp
fs
add
in
mov
mov
add
(bad)
xchg
gs
in
das
adc
(bad)
mov
sbb
loopne
scas
jnp
call
cmp
push
or
rcr
mov
and
jp
addr16
fcmovne
dec
cmp
ja
icebp
div
div
inc
cmp
mov
movs
sub
mov
mov
test
xchg
add
sbb
push
fist
lods
shl
loope
mov
or
pop
jno
(bad)
sub
ficom
mov
mul
(bad)
mov
cdq
jbe
xor
movs
jecxz
retf
inc
in
pop
popa
(bad)
outs
pop
ret
push
retf
in
out
adc
dec
fst
mov
or
xor
adc
imul
into
or
rcl
ret
push
add
lahf
inc
imul
shr
mov
fadd
inc
cmp
push
clc
jnp
addr16
cli
xchg
cmc
retf
stos
imul
mov
jmp
mov
jecxz
dec
fcom
stos
cmp
pushf
adc
cmp
sahf
mov
shl
leave
xor
cmp
and
pop
rol
out
stos
addr16
(bad)
in
add
(bad)
je
inc
imul
jmp
push
das
sub
push
in
push
scas
dec
ins
mov
loope
mov
int
cmp
in
repz
in
pop
jns
mov
out
ds
gs
xor
mov
(bad)
mov
ss
adc
push
std
mov
ins
cmp
push
je
cdq
movs
pop
mov
xor
les
cmc
inc
jnp
pop
or
imul
mov
gs
pop
leave
clc
sbb
push
daa
repnz
pop
ss
sbb
into
not
imul
push
shr
jno
fimul
mov
sbb
rcl
das
sub
stc
or
or
call
fimul
cli
ret
or
dec
outs
cld
push
daa
iret
or
shl
retf
jl
in
(bad)
scas
inc
pop
(bad)
out
fsubr
xor
mov
ss
mov
arpl
ins
test
xor
adc
mov
mov
pop
cld
inc
mov
lock
push
es
lock
mov
jmp
movs
cmc
and
imul
inc
movs
cld
scas
and
add
ret
idiv
(bad)
xchg
bound
test
in
xchg
adc
sub
(bad)
fisttp
(bad)
lods
add
and
mov
and
lahf
out
push
xlat
xchg
dec
out
adc
outs
jbe
mov
pop
push
jo
mov
jns
push
adc
in
dec
push
xor
or
inc
popf
idiv
dec
inc
hlt
mov
xlat
ins
outs
imul
sub
mov
sahf
test
xor
dec
mov
add
dec
dec
jmp
loopne
pop
dec
push
pop
cld
xchg
push
outs
popa
cmp
sbb
cmp
frstor
jmp
pop
in
inc
sbb
pop
fnstenv
add
xlat
cs
gs
jmp
push
pop
call
in
push
data16
stos
xchg
ins
xor
imul
cld
into
xchg
cld
fdivr
idiv
or
aad
xor
push
aaa
sbb
push
les
pop
or
xchg
sub
cmp
std
mov
(bad)
sbb
mov
mov
into
loop
pusha
sub
push
cmp
fstp
imul
jae
outs
mov
cmc
in
wbinvd
fldcw
rol
push
xchg
pop
retf
loop
mov
dec
call
not
cwde
sub
ins
push
mov
xchg
clc
cmc
dec
or
aas
fstp
(bad)
dec
ret
repz
pop
mov
add
retf
ins
retf
int3
loopne
scas
cwde
enter
in
daa
pop
(bad)
adc
xor
mov
and
and
sahf
jae
cmps
dec
dec
(bad)
lahf
mov
movs
mov
or
add
jae
inc
pushf
sub
cli
int
mov
mov
ins
out
pop
inc
test
cmp
adc
sar
add
sbb
cs
sub
add
cs
mov
mov
popa
inc
push
std
test
inc
sbb
push
or
mov
(bad)
pusha
push
aam
(bad)
out
sub
cmp
xor
rol
lock
xlat
fs
adc
iret
mov
(bad)
sub
out
data16
fisubr
add
fcomp
jbe
xor
pop
retf
aaa
into
iret
(bad)
jl
push
jmp
push
idiv
invd
imul
leave
clc
push
and
push
sbb
push
push
xor
mov
mov
lock
pop
add
mov
mov
dec
cmp
das
adc
int
sar
fimul
stos
frndint
daa
loop
mov
mov
push
je
inc
cmp
mov
jb
mov
xchg
enter
sbb
(bad)
in
and
or
mov
push
mov
jne
pop
push
adc
jbe
sar
sbb
hlt
ja
sub
(bad)
enter
mov
cmps
leave
jg
jle
sar
or
pop
imul
dec
xchg
jbe
push
mov
cli
jmp
(bad)
cmp
mov
push
jne
mov
cld
sbb
clc
inc
popa
jns
adc
mov
mov
loop
cmp
or
call
fs
ins
mul
daa
pop
push
sbb
int
ds
stos
es
adc
cmp
inc
(bad)
mov
ficomp
cmps
jle
out
into
mov
or
loop
dec
arpl
jl
mov
retf
push
mov
jp
imul
mov
mov
js
pop
xchg
mov
add
sbb
sbb
push
add
or
cdq
stos
fcom
and
ds
jmp
ins
retf
push
push
cmc
push
(bad)
movs
fisubr
sbb
or
mov
rcl
cdq
or
sbb
mov
cmp
mov
into
out
inc
in
mov
fnstenv
out
jp
rcr
retf
mov
xor
or
or
mov
cmp
daa
mov
stc
adc
jg
push
in
shl
cmp
int3
sub
scas
add
ret
jo
push
and
sbb
(bad)
fs
icebp
ss
push
cmp
pop
or
mov
pop
fist
mov
pop
mov
outs
stc
xor
sar
mov
loope
jg
fisub
sar
mov
adc
sub
pop
sbb
xchg
pop
sbb
adc
in
mov
pop
loop
dec
das
in
pop
sub
push
inc
js
imul
or
and
cli
in
and
mov
jnp
es
pop
jbe
cmc
in
ja
lss
inc
ret
fs
jmp
adc
leave
cmp
pop
stos
sub
mov
test
jno
imul
dec
dec
shr
lds
pusha
int3
mov
dec
aad
add
test
aam
out
push
jl
lea
nop
retf
jle
cmp
adc
(bad)
add
es
jnp
in
aaa
movs
ins
int3
ins
mov
mov
pop
call
cwde
mov
jb
jb
add
mov
mov
cmp
cwde
sahf
imul
retf
mov
mov
jae
pop
add
(bad)
(bad)
push
test
and
mov
aas
cmp
cmps
xchg
inc
sbb
xchg
lahf
pop
iret
je
dec
stc
jl
ins
or
fnstsw
jae
push
mov
out
xor
and
nop
pop
cs
iret
pushf
cld
pop
mul
in
xlat
mov
repnz
mov
xchg
test
adc
cmp
dec
outs
popf
in
dec
jle
(bad)
pop
jbe
mov
cmp
push
or
(bad)
cwde
push
daa
cmp
push
ja
cwde
retf
adc
outs
inc
jg
xor
mov
jg
and
pusha
aas
jg
fist
or
cmps
int3
xor
jb
fmul
or
data16
sbb
pop
int
mov
jns
js
inc
int3
sbb
or
loopne
fmul
lods
(bad)
imul
adc
test
xchg
xchg
sub
cmp
div
sub
fidiv
pop
cmp
mov
pop
fsubr
aaa
pop
and
mov
adc
fcmovb
push
jecxz
leave
inc
jecxz
es
mov
inc
ins
push
and
test
div
adc
sbb
dec
sbb
pop
jge
scas
xchg
movs
or
cli
push
add
xchg
inc
add
add
sub
xchg
mov
or
cmp
mov
enter
lahf
sub
mov
adc
xchg
ret
sbb
fwait
xor
push
in
(bad)
dec
cmp
mov
cld
push
adc
mov
sub
and
hlt
out
mov
(bad)
test
xor
xlat
mov
mov
sbb
jl
loopne
adc
push
lods
out
sar
ss
mov
mov
js
mov
xchg
das
pop
mov
sahf
push
push
or
add
mov
inc
test
inc
mov
or
js
sar
fstp
push
pop
cmp
dec
push
jne
test
movzx
mov
mov
sbb
and
in
pop
dec
push
lea
les
push
stos
xchg
adc
sbb
push
mov
cmp
std
das
rol
mov
sti
add
push
icebp
sub
aaa
scas
(bad)
(bad)
in
fsubrp
push
mov
mov
jmp
mov
inc
mov
xor
fistp
out
xor
add
mov
xchg
test
out
lods
int
pushf
outs
leave
lock
xor
loope
ins
cmp
aam
jl
outs
sbb
(bad)
mov
xor
cwde
or
adc
out
ret
fstp
sbb
jb
adc
fsub
or
clc
xor
iret
fimul
mul
push
jb
jb
mov
mov
call
push
je
sbb
mov
mov
out
dec
rcr
cwde
sub
add
fist
push
ror
std
call
inc
or
sbb
hlt
inc
movs
fadd
sbb
lds
xor
pusha
loopne
adc
int
shl
bound
or
inc
movs
and
mov
fidiv
cmp
repz
(bad)
inc
scas
in
shl
sub
adc
sti
push
scas
mov
jl
xchg
mov
mov
mov
push
scas
inc
push
cs
aad
sti
xchg
jg
les
add
xor
add
sbb
mov
cmps
retf
xchg
imul
sub
adc
and
dec
(bad)
or
push
int3
add
ret
sar
jecxz
pusha
test
adc
mov
cmps
cdq
frstpm(287
dec
leave
sub
mov
mov
pop
pushf
retf
into
xor
sub
cs
push
push
arpl
jecxz
xor
test
sub
xor
aad
loope
pop
jo
dec
rcr
mov
mov
mov
icebp
clc
mov
push
xor
and
in
mov
pop
(bad)
ss
lock
pop
aad
mov
clc
stos
leave
aad
cmp
ret
inc
int
or
sub
xor
xchg
and
jne
test
jp
cmp
scas
imul
dec
fstp
rcr
push
add
test
fcompp
jl
mov
sar
add
sub
xchg
rcr
jecxz
jo
in
scas
(bad)
xlat
stos
jbe
fmul
(bad)
sahf
jle
test
rcr
clc
sbb
retf
mov
jmp
add
aaa
int
mov
popa
jg
xchg
pop
out
ss
xchg
int3
dec
pop
jg
jno
add
mov
pop
(bad)
arpl
in
jp
inc
scas
call
aad
or
sar
xor
push
ss
aad
jno
retf
fs
or
mov
jae
mov
xchg
xlat
mov
(bad)
fs
test
pusha
ds
xor
data16
lock
adc
add
fdivr
loope
jge
int
inc
jecxz
or
lock
outs
jb
std
hlt
js
les
mov
(bad)
jmp
adc
rcr
inc
mov
dec
or
mov
add
popa
push
pop
gs
ret
pop
out
rcl
nop
scas
pop
jo
add
dec
(bad)
dec
mov
pop
adc
add
push
(bad)
jnp
fucom
xor
or
test
adc
rcl
scas
push
ss
jle
mov
movs
lods
fidiv
pop
push
in
stos
adc
add
mov
movs
mov
icebp
stos
outs
mov
push
daa
fdivr
lods
das
jle
sub
rcr
dec
cmp
bound
sbb
push
jo
outs
les
jo
outs
ds
push
add
cmp
xor
cmp
cmps
cmc
jecxz
jmp
sar
outs
mov
xchg
inc
clts
or
mov
dec
adc
mov
in
xchg
fisub
jge
bswap
mov
push
push
pop
sbb
aaa
test
xchg
and
shl
push
ins
sub
mov
ret
in
leave
pop
pop
pushf
sbb
loop
ins
jmp
and
push
inc
sbb
cld
and
push
pop
cmps
cmc
xor
mov
stos
mov
or
mov
push
inc
xor
outs
hlt
retf
mov
dec
shl
mov
jb
sar
hlt
jnp
mov
mov
retf
iret
fstp
dec
add
dec
sbb
cmp
je
lock
retf
cwde
dec
js
rcl
lods
inc
push
js
test
das
in
xchg
inc
or
and
cdq
mov
ja
call
outs
int
push
or
push
repz
push
jns
adc
lock
ret
push
scas
and
movs
out
push
sbb
mov
pusha
xor
or
popa
addr16
adc
stos
sbb
inc
cs
xchg
clc
out
xchg
ins
mov
push
mov
mov
xor
sub
jae
jg
and
xor
stos
ja
xor
sub
(bad)
retf
pop
cmp
idiv
cmps
inc
(bad)
mov
dec
mov
ret
jmp
aas
std
(bad)
pushf
sbb
lds
ja
sbb
fistp
mov
aam
xor
mov
mov
shl
and
mov
jmp
add
call
jne
push
and
fsub
jae
and
or
xchg
adc
adc
cmp
cmp
cmp
cmp
(bad)
mov
cld
pusha
in
scas
lods
or
scas
pop
sbb
xchg
or
mov
cmp
xor
push
pop
ss
cmps
mov
sub
sbb
sbb
pop
and
gs
adc
jmp
fiadd
xor
or
pop
in
add
jmp
inc
push
push
fsub
mov
fcmovnbe
ret
fsincos
cmc
popa
xchg
bswap
and
and
imul
daa
xor
and
or
mov
cmp
movs
cmp
jb
clc
cmp
add
(bad)
sbb
add
push
mov
xchg
bound
push
enter
mov
fnstcw
popa
aaa
rcl
iret
ins
jmp
push
xchg
enter
dec
jne
mov
mov
out
fabs
ret
jno
(bad)
and
jmp
iret
jae
je
or
jecxz
scas
inc
mov
jle
or
out
mov
into
push
mov
inc
push
inc
push
dec
les
sbb
mov
leave
(bad)
lock
mov
ficomp
dec
js
sbb
ja
fstp
fisttp
retf
stos
out
pop
jne
pop
xchg
fwait
and
pop
lock
xchg
cdq
sahf
(bad)
fcomp
inc
or
pop
push
jp
sub
js
push
neg
sub
bound
push
pop
js
push
pusha
dec
das
sub
outs
dec
in
iret
dec
(bad)
mov
loopne
adc
fild
shl
(bad)
push
push
(bad)
jo
movs
push
adc
cmp
add
or
and
xor
pop
inc
dec
je
(bad)
out
popa
ja
sbb
ja
xor
repnz
jo
fld
mov
leave
sub
fwait
addr16
push
lock
pop
ja
sahf
dec
mov
sbb
sti
outs
push
repz
xchg
cmp
pop
and
sti
sub
xchg
sub
cmc
fsubr
and
xchg
or
add
fadd
outs
shr
(bad)
fmul
push
addr16
dec
out
cli
mov
ins
icebp
arpl
ss
and
jns
clc
gs
(bad)
daa
dec
ficom
jp
inc
arpl
xchg
mov
call
ss
mov
dec
das
clc
mov
mul
sub
ss
adc
mov
jbe
repnz
adc
lahf
jmp
xor
in
retf
xchg
(bad)
xlat
cwde
jae
jb
add
or
ret
in
cs
shl
scas
outs
mov
add
ins
or
mov
and
sar
jbe
loop
fidiv
test
(bad)
mov
and
repz
xchg
mov
mov
or
mov
xchg
mov
pop
es
mov
cld
fistp
adc
push
(bad)
into
adc
mov
(bad)
xchg
mov
std
push
jge
outs
pop
into
pop
fisubr
mov
sbb
mov
in
(bad)
mov
out
pop
push
je
or
jno
pop
je
rol
call
sub
mov
das
jle
icebp
call
hlt
sbb
push
xor
cmp
gs
scas
mov
adc
into
fs
fsub
pop
push
repz
dec
js
push
pop
enter
push
gs
inc
mul
sbb
push
test
jns
inc
retf
daa
xor
inc
in
psubsb
push
in
ret
aas
pop
stos
mov
fld
ror
add
loopne
loopne
fld
cmps
movs
mov
cli
fiadd
push
add
pop
test
push
mov
sub
bound
adc
adc
sbb
pusha
shl
mov
loop
popf
add
xor
jmp
(bad)
adc
test
push
lods
pushf
sub
xor
arpl
xchg
xor
and
stc
jg
daa
pop
mov
push
ficomp
mov
mov
and
push
call
jl
repz
addr16
shr
divps
jo
push
in
xchg
push
jl
push
cmps
hlt
add
outs
xchg
push
sub
mov
push
cmp
clc
adc
std
adc
pop
xor
daa
push
xchg
lds
pop
lahf
movs
xor
in
add
sbb
sbb
out
enter
imul
sub
and
movs
xchg
aaa
das
mov
cld
jge
popa
jecxz
repz
jne
adc
and
and
pop
pop
sti
add
and
or
fisubr
xlat
(bad)
js
ror
pop
std
lods
out
push
jne
pop
sbb
dec
add
(bad)
stc
in
mov
pop
sub
pop
xor
inc
mov
or
std
ja
pop
ja
outs
imul
out
mov
es
mov
adc
cli
sar
adc
jb
xor
je
pop
movs
popa
dec
ins
adc
sti
out
add
retf
push
or
dec
push
into
xor
sbb
mov
jae
mov
push
lods
or
xchg
mov
and
xchg
pop
mov
push
xor
cs
int3
repz
mov
xor
into
aad
call
ins
addr16
sub
fs
cmp
fs
outs
jae
sbb
popa
nop
aam
mov
fwait
inc
dec
cmp
outs
mov
mov
mov
(bad)
ja
movs
addr16
sti
and
lods
clc
mov
inc
in
mov
cmp
gs
out
(bad)
jmp
lea
push
cwde
push
fst
pop
mov
dec
popa
mov
push
push
leave
and
shl
pop
mov
pop
push
mov
test
push
cmp
ret
push
add
lea
sbb
movs
iret
aad
pop
adc
dec
ret
add
mov
repnz
outs
call
(bad)
int3
pop
push
call
jle
and
cmp
mov
xor
imul
je
sbb
jg
xor
mov
dec
jnp
nop
cli
add
pusha
inc
(bad)
into
push
(bad)
jg
or
mov
xor
loop
pop
add
and
push
pop
dec
jne
ret
icebp
call
xchg
lock
std
mov
(bad)
aam
lods
hlt
repz
sahf
pop
in
fdivr
js
stos
scas
mov
test
mov
std
pop
xchg
dec
ds
push
cmp
outs
push
out
xchg
(bad)
adc
cli
pop
xchg
xor
fcomp
es
push
xor
imul
in
add
jp
aas
push
ret
mov
push
lahf
mov
push
jp
sub
and
adc
or
cmp
dec
sub
inc
scas
pop
adc
retf
mov
sbb
or
cmp
movs
inc
fld
mov
cli
fwait
ret
movs
in
popa
and
loope
xchg
xchg
adc
fsubp
je
movs
xchg
adc
xor
cs
push
mov
sbb
adc
sahf
push
xor
xor
jmp
sbb
cmc
and
push
pcmpgtw
mov
popa
das
enter
js
dec
inc
jae
or
stos
cmp
ins
dec
pop
arpl
inc
loop
outs
ds
sti
sbb
mov
and
xor
pop
je
jo
adc
pop
sbb
mov
jp
jmp
test
stos
xor
iret
(bad)
fbstp
mov
add
retf
mov
cwde
or
jg
adc
jmp
cmp
mov
scas
and
dec
cld
sub
mov
fistp
push
loope
imul
popf
in
aam
dec
or
call
pop
mov
mov
mov
aam
leave
ret
push
mov
fisubr
or
push
and
enter
pushf
mov
jno
or
mov
add
jp
lds
mov
(bad)
cmp
sbb
mov
mov
ds
cdq
inc
push
adc
jmp
cmp
hlt
ffree
(bad)
mov
aas
icebp
mov
pop
scas
sbb
js
sub
clc
push
mov
push
mov
and
jmp
pushf
push
ins
push
int3
and
dec
mov
push
(bad)
dec
rcl
in
pop
cmp
xor
mov
cmp
ja
scas
or
adc
inc
sub
mov
fmul
imul
(bad)
xchg
inc
icebp
loop
or
mov
mov
mov
or
call
mov
cmc
and
cs
test
out
add
push
mov
push
arpl
mov
test
test
scas
mov
mov
sbb
and
mov
and
aad
fs
enter
jp
push
and
add
jmp
xor
cli
adc
or
rcr
es
add
loope
div
mov
xchg
dec
inc
push
lds
xchg
jmp
mov
sub
xchg
fsub
push
jne
xor
cmp
mov
lds
cmp
cdq
ins
out
stos
scas
int3
push
xor
pop
push
shr
popf
(bad)
nop
push
jnp
cmp
cmp
mov
in
ds
add
and
jmp
push
fwait
in
cmp
sub
lea
imul
add
sub
scas
jmp
mov
rol
pop
xchg
or
not
aaa
retf
inc
shl
mov
popf
inc
adc
inc
push
cmp
cmp
or
fwait
inc
mov
or
fnstsw
hlt
jle
neg
push
mov
or
xchg
cmp
cld
in
and
xchg
hlt
fld
aad
das
or
out
dec
ret
push
arpl
mov
iret
out
shr
adc
mov
aaa
pop
push
add
cdq
push
and
aaa
sub
pop
sahf
mov
mov
xor
mov
mov
fsubr
not
cdq
xchg
and
push
add
xchg
adc
dec
mov
mov
(bad)
lahf
ds
push
mov
bound
pop
push
aas
test
push
dec
adc
push
dec
cdq
xchg
je
lea
ret
je
mov
jmp
dec
pop
in
mov
pop
imul
nop
mov
das
mov
jl
mov
fst
mov
stos
loopne
xlat
test
push
jnp
pop
ins
ret
rcl
sub
call
addr16
test
push
movs
lods
stos
lds
and
xor
xor
push
mov
ds
iret
sbb
mov
shrd
repz
mov
outs
aaa
dec
ds
sti
and
int3
(bad)
(bad)
mov
sti
cmp
inc
clc
pop
mov
lea
je
ds
call
push
sbb
and
xor
xchg
cwde
test
mov
or
in
mov
or
je
xor
clc
retf
jp
sahf
cmps
mov
lock
cmc
push
mov
scas
loopne
sub
imul
and
stos
adc
pop
push
push
cmps
mov
inc
adc
movs
xchg
mov
call
pop
jmp
inc
inc
jne
add
shl
jae
(bad)
mov
mov
mov
sar
jp
pop
dec
iret
pushf
jae
in
cmp
(bad)
and
lahf
push
enter
sbb
mov
in
xor
repz
fcmovnbe
cdq
mov
outs
movs
jle
xor
out
bound
lods
adc
push
fsincos
(bad)
jae
enter
stos
mov
sahf
mov
add
ins
adc
mov
xchg
int
mov
into
movs
pop
lahf
fwait
sub
sbb
pop
ret
gs
cld
inc
pop
mov
inc
xchg
call
jg
call
pop
popf
push
and
add
mov
pop
xlat
jl
sbb
fld
mov
test
jne
pop
mov
enter
mov
lahf
cmc
mov
xor
fild
in
lods
(bad)
pop
jae
sub
dec
pop
cmp
push
cli
std
inc
movs
xor
xor
aas
push
push
movs
cmp
jmp
mov
repz
jmp
jp
cmp
cmps
cwde
rol
push
test
dec
add
pop
addr16
cli
or
movs
lock
sub
jno
and
inc
xchg
mov
dec
add
dec
call
xchg
arpl
push
hlt
xchg
das
jg
push
jns
pop
inc
adc
xlat
rcl
mov
imul
movs
fidiv
in
mov
(bad)
push
cmp
test
imul
or
test
cmp
mov
icebp
fwait
loopne
push
out
int
jp
jmp
add
sbb
cmps
idiv
into
mov
movs
and
test
jae
mov
inc
mov
xor
popf
test
inc
or
inc
jg
pop
jbe
jecxz
repz
lods
ja
loope
mov
pop
nop
mov
mov
ss
leave
pop
hlt
mov
push
inc
(bad)
arpl
cmp
call
or
hlt
or
out
or
stos
add
sub
mov
(bad)
cdq
test
cmps
lds
mov
push
pop
je
or
ins
ror
in
sub
dec
aad
arpl
div
fs
sub
jmp
cs
(bad)
mov
jmp
mov
iret
in
scas
mov
pop
(bad)
cmp
mov
jbe
idiv
pop
lock
repnz
sahf
add
cmp
and
loope
push
jmp
or
inc
jp
out
sar
icebp
add
pop
movs
adc
fstp
(bad)
jo
or
out
sub
mov
xlat
or
enter
loopne
xchg
cli
xor
cld
add
xlat
pop
mov
mov
ror
out
push
push
dec
jno
jbe
xchg
inc
and
jne
pop
cwde
lea
loopne
fsubrp
xor
xor
inc
mov
jle
add
ss
addr16
loop
xor
jmp
int
popf
ja
push
jmp
pop
mov
dec
jae
daa
push
pushf
jbe
out
push
mov
call
push
xchg
sub
or
cmps
sbb
scas
mov
inc
pop
xor
retf
sbb
mov
mov
cmp
push
adc
mov
call
cli
cmp
inc
stos
xchg
dec
lea
das
sahf
push
mov
inc
repnz
add
or
test
inc
(bad)
mov
xor
and
or
in
dec
mov
xchg
jg
jle
clc
push
fucomip
out
lods
xchg
imul
repnz
xchg
es
(bad)
sub
jg
dec
mov
sub
aam
out
jl
mov
js
sbb
les
adc
xchg
push
jle
mov
push
loopne
lods
retf
js
ins
xchg
mov
test
sbb
mov
mov
retf
dec
dec
mov
aam
jmp
dec
or
sub
loopne
ret
(bad)
push
std
imul
xchg
mov
sub
push
psubusb
sub
mov
lods
int
jge
test
mov
arpl
sbb
jmp
fldcw
mov
add
nop
sub
loop
lods
push
fadd
lock
mov
add
cli
lds
inc
in
mov
sti
(bad)
or
mov
enter
or
scas
js
mov
lock
out
mov
sub
jnp
push
mov
sbb
and
cs
sbb
pop
arpl
cmp
jmp
add
(bad)
cmp
and
jmp
rcl
xor
cld
mov
and
xchg
push
push
cmp
cmp
in
inc
test
jbe
jns
xchg
push
out
mov
jecxz
jle
mov
inc
mov
mov
jmp
cmc
sub
mov
inc
adc
sahf
movntps
sbb
mov
aas
in
xchg
in
pusha
aam
std
xor
lock
mov
(bad)
and
dec
addr16
(bad)
gs
movs
sbb
outs
jmp
je
pop
jae
test
in
pop
retf
std
fdivrp
mov
sahf
sbb
xchg
into
push
arpl
xchg
jge
test
add
test
mov
rcl
adc
mov
mov
(bad)
jb
jmp
and
lea
push
das
dec
lods
push
mov
or
test
(bad)
mov
jb
je
icebp
xor
test
call
push
neg
outs
sub
cwde
fs
repz
in
pop
mov
inc
addr16
fucomi
and
iret
shl
pushf
jg
inc
push
jb
test
ja
xor
and
cmp
dec
xchg
adc
mov
mov
(bad)
out
or
lahf
cmp
stc
call
xchg
mov
push
jecxz
je
out
jmp
ror
pushf
mov
jle
repz
cmp
jno
out
stos
sbb
adc
test
rcr
popa
pop
(bad)
lods
fild
cmps
lods
aas
and
mov
scas
js
leave
jns
dec
push
adc
cwde
or
repnz
xor
inc
test
faddp
add
xchg
xlat
pop
or
or
sub
(bad)
mov
sti
mov
dec
pop
mov
xor
imul
mov
ja
retf
repnz
pop
stc
adc
outs
gs
outs
dec
les
(bad)
mov
push
dec
aas
mov
stos
mov
popa
cld
adc
sbb
pushf
(bad)
xchg
add
cmp
push
aas
hlt
pop
bound
mov
inc
pop
fnstenv
arpl
inc
xor
ret
cld
into
push
leave
xchg
mov
test
inc
xlat
jl
mov
inc
sbb
mov
and
sub
push
lods
fist
mov
and
mov
pusha
js
sub
daa
cli
adc
les
aad
mov
xchg
mov
cmp
cmps
in
aam
xchg
push
lahf
gs
mov
mov
(bad)
push
js
adc
pop
or
jns
or
mov
push
hlt
ins
dec
imul
inc
fucomip
scas
push
lea
shl
xchg
lods
add
adc
fwait
shl
pop
mov
pop
pusha
movs
jge
mov
mov
hlt
sbb
pop
cmps
xchg
popf
loop
cmp
adc
ret
push
(bad)
adc
cmp
sub
lods
sti
dec
retf
mov
jmp
mov
and
cmp
xchg
outs
call
dec
add
and
mov
call
imul
aaa
mov
or
enter
out
xchg
sahf
aam
xchg
les
das
xchg
add
pop
cmp
out
mov
cmp
pop
stos
cs
inc
sub
xchg
inc
es
sub
(bad)
mov
or
cwde
in
es
test
inc
ffreep
repz
leave
adc
les
mov
dec
inc
lods
loope
push
pop
push
(bad)
fnstsw
xchg
xor
ret
iret
xor
push
adc
push
mov
dec
call
xor
out
iret
cmp
dec
cmp
mov
cdq
retf
scas
sbb
pop
cmp
leave
mov
dec
inc
add
sub
lds
sbb
add
jmp
pop
push
push
xor
add
inc
mov
pop
and
retf
push
pop
pop
popa
shl
test
and
inc
(bad)
xchg
xor
leave
in
lds
push
movs
mov
jg
sbb
adc
popa
jno
or
dec
sub
jns
bound
sub
std
ins
or
adc
or
inc
push
lea
imul
or
push
rol
(bad)
aaa
rcl
push
in
xchg
and
ret
mov
push
cmp
call
scas
mov
lahf
aas
or
inc
jg
imul
mov
stos
or
lea
call
sti
jmp
aad
dec
test
jmp
xor
and
aam
mov
outs
xchg
cmp
and
fisubr
aad
push
cli
sub
cs
cdq
sub
or
add
loopne
cmp
call
lds
mov
ret
sbb
test
ret
loopne
icebp
lahf
jmp
rol
ja
ret
aaa
xchg
mov
imul
inc
mov
xor
jbe
loope
lods
jge
jmp
out
scas
aam
mov
outs
fstp
jae
push
out
and
nop
ja
outs
ja
loop
push
mov
(bad)
push
pushf
aam
jnp
add
pop
push
mov
push
add
xchg
mov
push
sub
mov
lea
inc
daa
adc
or
arpl
mov
lea
dec
xor
cmp
jp
out
push
xor
add
xor
fsub
push
adc
dec
pop
add
pop
dec
xchg
popa
mov
ins
int
popf
and
stc
xor
lahf
dec
psllw
mov
jecxz
ss
push
fiadd
inc
arpl
mov
jae
jg
mov
ins
ror
jbe
dec
push
dec
fsubr
push
and
pop
call
cmovle
jae
mov
js
int
(bad)
or
imul
push
cwde
cli
in
inc
sub
fld
int
addr16
sub
je
ss
dec
add
sbb
sti
xchg
stc
shl
jmp
sbb
sahf
icebp
fmul
js
push
retw
fstp
jp
cmp
cmc
sbb
inc
pop
inc
outs
xor
adc
retf
xor
mov
push
xchg
jp
fs
inc
xchg
cli
scas
cmps
pop
retf
add
xor
loopne
lods
ss
iret
pop
ret
add
(bad)
cmp
je
pop
sahf
fcomi
cmp
adc
fist
loop
and
mov
push
aaa
jnp
inc
lods
mov
jbe
ret
pop
xchg
xor
out
xchg
pop
inc
loopne
and
popa
sahf
les
lock
push
xor
and
ret
(bad)
call
js
ins
cmps
mov
lods
jne
aad
pushf
aad
out
mov
adc
(bad)
cmp
mov
pop
adc
xchg
iret
adc
pop
cmps
add
inc
cwde
adc
jle
xchg
fsubp
sbb
xchg
push
test
jno
int
cld
sub
psubsw
jl
mov
jl
pop
adc
sub
mov
pushf
daa
mov
sub
sbb
cmp
xchg
and
mov
aad
mov
push
push
(bad)
call
call
outs
dec
sbb
std
mov
mov
xor
cmp
and
or
inc
dec
fisub
add
ds
adc
jb
adc
pushf
jecxz
out
(bad)
aas
sub
stc
push
adc
pop
(bad)
(bad)
mov
jns
in
pop
outs
dec
fnstsw
push
mov
xchg
mov
jmp
or
(bad)
aas
xor
mov
test
hlt
mov
fidivr
stos
add
jl
adc
inc
pop
xor
call
mov
mov
imul
mov
add
je
and
cdq
(bad)
call
add
dec
cmps
test
stc
retf
cwde
mov
dec
sub
cmps
out
(bad)
sbb
pop
sbb
jl
clc
dec
movs
js
jno
sub
out
repz
lods
cmp
inc
fstp
jo
cmp
fcomp
mov
dec
int
mov
cld
mov
and
push
pop
retf
int3
and
xchg
ins
mov
sub
iret
movs
mov
call
jnp
imul
mov
jmp
pop
pop
xchg
ret
shr
aad
pop
add
in
(bad)
sbb
xor
mov
dec
jmp
xchg
lahf
or
push
out
jns
dec
scas
stos
fadd
add
cld
and
rcl
add
and
test
int3
and
(bad)
pop
or
mov
popa
test
mov
repz
ja
adc
mov
and
pop
inc
in
and
inc
and
aaa
ins
mov
out
mov
adc
scas
jbe
dec
push
cmc
in
pop
imul
stos
aam
push
inc
xchg
lods
cld
test
push
(bad)
in
ror
aaa
jp
ins
jbe
mov
popf
or
xchg
test
gs
stos
fsubr
lock
jo
adc
(bad)
test
mov
aas
idiv
pop
out
mov
gs
sub
pop
pop
adc
shr
ds
movs
pop
push
mov
cmp
ds
inc
push
stos
jmp
xchg
clc
mov
aad
mov
jmp
jmp
leave
jle
pop
mov
push
adc
pop
sub
ss
ja
fs
daa
cli
xor
mov
dec
or
enter
aam
lods
fisubr
into
jb
cwde
sub
jae
mov
mov
mov
js
aaa
pandn
mov
fisubr
nop
ror
or
fcomp
imul
ret
dec
pop
pop
out
jb
sbb
in
pop
in
int
stc
push
popf
gs
test
popf
xchg
js
jg
add
int3
push
mov
xchg
shr
aam
iret
xor
loope
test
cdq
arpl
fld
test
dec
cmp
add
test
and
mov
xor
xor
push
pop
jns
fmul
out
sar
repz
fwait
bound
out
push
pop
pop
shl
xchg
imul
pop
neg
enter
dec
jecxz
rol
inc
and
cmps
rol
cmp
ins
jg
sbb
xchg
mov
push
sahf
cmp
sub
ror
push
push
and
mov
sbb
and
call
xor
or
cld
fstp
ror
js
imul
cdq
add
ja
xor
inc
ja
pushf
inc
lock
sar
es
push
repz
mov
sbb
dec
cmp
adc
vorps
sbb
pop
mov
sub
ret
xchg
push
sub
sar
aaa
div
cmc
fs
jo
mov
icebp
sbb
fnsave
add
xlat
mov
icebp
dec
leave
rcr
xor
in
and
ret
movs
iret
(bad)
rol
cs
or
std
adc
sbb
ins
xchg
repz
cld
enter
fild
out
daa
mov
pop
or
sub
jae
or
shr
pop
add
push
mov
mov
mov
dec
(bad)
push
push
hlt
xchg
jns
leave
jbe
addr16
out
rol
(bad)
adc
jecxz
jecxz
adc
fmul
jecxz
pop
and
js
xor
pop
pop
stos
pop
or
hlt
and
xchg
inc
in
pop
lods
fs
std
add
jl
repnz
adc
push
lods
inc
inc
pushf
cmc
lods
(bad)
in
mov
out
test
inc
add
rol
mov
jbe
cmp
test
ja
cmc
mov
ins
cs
lods
(bad)
fld
sub
retf
aad
std
not
push
retf
fucom
push
sub
lea
cli
ffree
repnz
pop
adc
das
js
mov
adc
adc
pop
xchg
daa
adc
dec
cmp
xor
xor
arpl
std
jo
popa
xor
pop
push
jae
sbb
sub
and
aad
sahf
mov
mov
push
or
mov
retf
lock
pop
xor
scas
xchg
ficomp
mov
gs
dec
push
jae
int
add
inc
jg
cmp
sub
popf
dec
sub
loopne
xchg
sbb
lods
jmp
aam
add
daa
movlps
out
or
movs
fld
dec
add
in
repz
sbb
cmp
inc
jbe
add
retf
(bad)
js
movs
dec
mov
loopne
add
inc
data16
sbb
test
in
jle
add
or
cmp
add
cmps
aas
fwait
idiv
sub
dec
push
mov
lods
arpl
xor
mov
mov
outs
movs
cdq
cmps
int
jb
in
lea
pop
inc
jne
clc
push
jno
(bad)
mov
fiadd
adc
test
jne
push
mov
mov
mov
(bad)
cmc
mul
pop
push
cmps
pusha
loop
shl
daa
mov
mov
ins
inc
call
into
dec
sub
mov
inc
cli
scas
push
xchg
pop
push
cmp
cmovnp
test
jbe
popf
inc
sbb
mov
mov
ror
pop
inc
les
push
pop
mov
pop
int3
clc
icebp
sub
xor
mov
ds
sub
xlat
(bad)
stos
in
adc
fisubr
xor
fcmovne
popa
jl
or
neg
xor
inc
xchg
pop
outs
(bad)
sbb
pop
cld
push
shl
mov
mov
cmps
ins
inc
push
data16
xor
xchg
dec
pop
dec
mov
out
add
das
push
sbb
nop
sub
inc
inc
and
aad
cmps
adc
retf
jno
or
jmp
mov
sbb
pcmpgtd
mov
ins
pop
rcr
(bad)
xchg
and
dec
stos
pop
rol
fild
stc
addr16
in
jno
outs
mov
pop
les
jno
icebp
ins
push
xchg
movs
jmp
mov
aad
jae
outs
stos
nop
adc
dec
dec
sbb
sbb
les
sbb
jle
adc
cdq
push
leave
ds
cmp
inc
dec
nop
xchg
bound
jnp
(bad)
or
gs
ds
scas
mov
xor
loope
add
mov
movs
jl
adc
daa
ja
mul
addr16
xor
sbb
cdq
and
cli
mov
js
jle
xchg
sbb
stos
mov
and
jae
xchg
std
xor
out
sbb
xor
retf
xchg
jmp
mov
rcr
pop
or
pop
cmps
movs
mov
add
xlat
dec
sbb
mov
rcr
sub
cli
sahf
dec
adc
cdq
jp
int
jl
push
and
mov
out
or
cmc
adc
and
inc
repnz
adc
inc
cmp
jae
gs
ss
jbe
mov
fdivr
scas
lea
mov
adc
xchg
pop
jb
or
push
or
aad
dec
mov
lods
mov
add
dec
fidivr
mov
push
xor
jne
fs
rcr
aam
stos
cmp
push
inc
pop
inc
inc
movs
shr
xchg
cmp
mov
push
dec
push
mov
mov
test
jne
mov
adc
repz
and
push
mov
mov
xor
mov
aam
adc
ror
mov
sbb
adc
test
cmp
fld
jmp
repz
ins
jmp
pop
and
adc
fs
inc
outs
jnp
ret
xor
mov
dec
(bad)
jo
and
into
or
loope
mov
popf
in
cli
out
dec
jmp
jmp
ds
stc
dec
dec
cdq
push
in
dec
add
ret
pop
sahf
ds
(bad)
aad
adc
aas
push
(bad)
movs
(bad)
lods
mov
inc
cmp
cmps
cmp
sbb
and
(bad)
loopne
jnp
inc
mov
ins
cmp
fnsave
les
mov
push
cmp
xchg
push
cwde
in
sub
scas
mov
push
icebp
jmp
push
sub
jmp
daa
mov
mov
dec
out
ins
aas
repnz
jb
mov
push
fisttp
sub
repz
mov
push
pop
jae
jge
ror
cdq
sub
cmp
push
cs
lds
inc
pop
inc
xchg
push
(bad)
(bad)
push
lds
cmp
fs
lods
xchg
lds
dec
jo
or
cdq
repnz
mov
and
cmpxchg
jne
pop
(bad)
imul
mov
pop
sbb
aaa
dec
pushf
movhps
mov
sub
imul
mov
push
lods
inc
iret
dec
jnp
stos
dec
es
and
jnp
sub
addr16
aaa
xor
js
push
cmp
lods
xchg
and
sub
sbb
pop
out
add
sub
xlat
and
dec
xor
and
mov
lea
inc
(bad)
and
mov
inc
xchg
mov
inc
jb
(bad)
in
and
jecxz
mov
bound
mov
into
adc
int
adc
shl
push
fcom
xchg
mov
mov
movs
movs
dec
jp
pop
mov
mov
daa
jmp
add
loope
scas
repz
mov
xchg
stc
mov
ja
iret
push
stos
sub
sub
outs
and
movs
lods
out
cmps
xchg
pop
or
ficomp
popa
or
ficom
imul
(bad)
push
jecxz
lock
in
cmp
mov
jmp
or
std
add
out
add
popa
jb
add
mov
mov
sbb
cmp
enter
adc
outs
ret
mov
sbb
pop
ret
ins
or
fdivr
push
mov
sbb
adc
jne
test
test
cmp
popa
cmp
sbb
mov
mov
or
mov
mov
(bad)
push
std
cmps
sti
into
inc
sbb
stos
sbb
in
mov
add
out
adc
push
int3
in
pop
fisttp
repnz
push
cmc
dec
sar
icebp
aam
push
jmp
add
stos
cmps
test
ins
sti
(bad)
cdq
sub
cdq
push
cdq
dec
shl
mov
add
xchg
dec
sbb
or
int3
pop
jb
push
dec
dec
or
frstor
out
cmc
xchg
jge
retf
movs
mov
bnd
out
movs
cld
or
cmps
inc
add
jne
adc
test
xor
retf
push
fist
pusha
arpl
cld
mov
retf
and
inc
pop
shr
sub
sti
cmp
add
sub
sbb
mov
hlt
call
popa
cs
pop
adc
in
inc
or
loope
scas
add
pop
mov
cdq
test
adc
inc
jge
sub
push
and
xchg
stos
or
and
sbb
imul
sbb
mov
scas
add
js
mov
inc
push
xor
xor
loop
(bad)
ins
je
adc
push
sar
add
idiv
dec
and
sub
dec
inc
aas
adc
push
push
mov
inc
retf
imul
pop
cmps
daa
add
sahf
sub
mov
xchg
rcl
mov
call
mov
pop
out
sbb
or
rol
adc
ja
cmp
loop
and
shr
scas
xchg
imul
(bad)
jmp
or
xchg
sub
lock
in
mov
mov
and
ror
jbe
sub
mov
or
xor
loope
xchg
dec
lahf
sahf
scas
mov
jns
and
xor
push
addr16
mov
pop
mov
dec
int
int3
call
nop
xchg
mov
outs
mov
pminub
sbb
or
dec
lock
call
dec
xor
inc
bound
(bad)
sbb
pop
sub
stos
ins
cmp
xchg
mov
es
inc
mov
jno
pop
arpl
fstp
int
lds
mov
cmps
xlat
loope
fiadd
iret
ins
inc
inc
aaa
xchg
arpl
dec
clc
neg
xor
dec
add
cmp
push
scas
dec
jnp
cmp
aad
push
and
(bad)
cmc
mov
mov
daa
mov
mov
jbe
jle
mov
(bad)
fdiv
inc
pop
lods
mov
sub
fisub
inc
and
adc
add
aaa
loope
or
mov
inc
add
push
and
mov
mov
push
cmp
aaa
dec
mov
js
nop
arpl
jb
sub
add
nop
add
ins
pop
std
pop
mov
out
dec
mul
dec
inc
cmp
repz
fs
cmc
cdq
fmul
arpl
push
enter
outs
je
ja
jns
rcl
inc
cli
out
dec
shl
in
jno
ss
aad
xlat
push
push
arpl
jge
iret
pop
ficomp
push
sbb
cmps
jns
mov
push
xchg
(bad)
pop
cmp
std
daa
jge
or
pop
dec
mov
add
into
push
or
sub
mov
test
mov
and
shl
push
jl
or
sti
and
ret
sub
stc
sbb
sub
jae
or
(bad)
pushf
push
jo
pop
cli
sbb
xor
ret
jno
mov
call
mov
mov
scas
(bad)
pop
pop
jmp
ffree
jecxz
test
test
call
pop
mov
inc
push
je
add
movhps
cld
dec
push
in
dec
adc
sbb
pop
and
aas
sahf
dec
cmps
jns
mov
and
out
rcl
push
push
ja
sbb
jns
lods
jo
push
dec
xchg
xchg
adc
mov
inc
sub
jb
cmp
sub
ins
clc
sub
mov
jb
mov
mov
mov
or
lods
fdivrp
test
lea
dec
push
adc
or
loop
mov
std
or
push
inc
ror
sahf
push
adc
mov
inc
(bad)
imul
push
dec
stos
cmc
mov
int
and
add
pop
loopne
or
imul
mov
add
cmc
mov
push
cdq
jecxz
daa
pop
fdiv
jle
inc
loop
jb
mov
or
push
or
and
xor
xor
cwde
into
fbstp
loop
aaa
dec
pop
pop
sbb
cld
nop
shl
iret
mov
aas
jae
je
cld
cwde
dec
fbstp
gs
cmp
movs
fsubr
add
cdq
arpl
push
push
mov
sbb
std
or
dec
mov
mov
jge
shr
add
scas
enter
mov
cli
iret
mov
fmul
push
imul
js
(bad)
cmps
pop
adc
inc
xchg
mov
mov
test
push
pop
fldenv
xor
fucomip
aad
inc
mov
and
daa
adc
lea
mov
pop
stos
jne
ret
xor
add
fst
stos
fs
add
fidiv
dec
cmp
std
sbb
enter
adc
jo
daa
jg
pop
iret
outs
lods
clc
retf
call
pop
enter
or
adc
add
inc
inc
test
shl
ficomp
push
out
xchg
sti
and
cmp
cmp
leave
mov
out
cli
loop
fnstenv
or
aas
fwait
sub
sti
fst
jae
xchg
popa
loope
aaa
iret
mov
push
retf
fldenv
mov
js
mov
pop
push
push
fld
adc
xor
aaa
mov
rcr
stc
scas
cmps
shr
xor
int
leave
enter
mov
mov
fidiv
fwait
in
or
(bad)
aaa
imul
jne
ins
fild
mov
xchg
cmp
pop
mov
sub
mov
outs
jg
inc
adc
push
jg
sar
std
or
leave
int3
push
test
add
inc
rol
setg
je
stos
outs
jmp
out
fdiv
ret
loope
lahf
sbb
jbe
xor
dec
or
inc
dec
xchg
idiv
ins
int
cmp
icebp
iret
call
ins
fidiv
mov
mov
mov
sbb
mov
rcr
sbb
push
dec
mov
fs
xchg
mov
ja
mov
aam
mov
push
aad
sbb
sahf
mov
test
sub
loope
jae
xchg
or
std
xchg
xchg
cmps
xchg
sbb
jno
movs
pop
dec
add
aad
pop
mov
jbe
sub
shl
call
retf
ins
jo
pop
retf
jbe
iret
mov
sbb
fidivr
xchg
fsubrp
dec
mov
inc
or
stos
sbb
add
movs
call
sbb
cmp
cmps
into
xchg
mov
jbe
(bad)
pushf
jnp
mov
call
inc
mov
call
add
addr16
xor
nop
test
or
fcmovbe
arpl
aam
dec
mov
movs
adc
fldenv
inc
callw
push
popa
leave
cmp
icebp
shl
ja
dec
lds
int3
arpl
mov
sub
push
sub
mov
xchg
stos
xor
mov
imul
push
repnz
lahf
cmp
aam
call
push
stos
sub
jl
(bad)
into
mov
mov
sub
hlt
push
adc
arpl
and
jns
xchg
in
fadd
js
scas
add
ror
aam
popf
and
mov
les
xor
ds
dec
pop
cld
cmp
repnz
es
mov
xor
jecxz
push
cdq
lods
mov
retf
imul
mov
and
fs
pop
sub
into
aam
push
adc
adc
or
lods
retf
mov
outs
xor
leave
push
or
push
jg
mov
rol
stos
jecxz
mov
ret
dec
in
dec
out
retf
in
xor
sti
sub
add
cdq
dec
xor
and
mov
(bad)
in
rep
out
dec
xchg
sar
fdivr
inc
shl
std
cmp
xchg
jmp
mul
call
xchg
in
mov
push
jbe
push
(bad)
jl
jg
inc
and
push
mov
icebp
popa
lds
inc
sbb
mov
out
test
dec
out
aas
cmps
mov
jp
pop
test
shl
sbb
ja
mov
xor
repnz
adc
(bad)
daa
fdivr
sbb
loop
jle
fcmovb
mov
sub
jbe
(bad)
aaa
aaa
inc
push
bound
shl
jne
and
call
ss
add
pusha
mov
outs
pop
cmps
shr
jbe
sbb
movs
pop
loope
fsub
sub
rol
in
xchg
mov
and
movs
out
shl
cdq
and
or
sbb
out
enter
stos
mov
and
iret
inc
pop
mov
lds
inc
(bad)
jmp
nop
fild
inc
jne
pop
or
shl
test
or
std
int
xlat
cs
and
or
xchg
in
(bad)
out
mov
ja
dec
loop
hlt
outs
mov
sbb
out
loopne
xchg
in
lds
mov
scas
xor
aas
sub
xchg
lods
dec
xor
ret
sub
cld
stc
inc
xor
mov
inc
cld
sti
adc
jns
xchg
lea
ins
ja
repz
das
xchg
pop
push
aas
movs
outs
stos
dec
jne
xor
inc
xor
xor
sub
and
mov
sub
stos
lea
out
pop
aam
cmp
cmp
dec
and
jmp
push
push
retf
jae
cdq
sub
adc
add
dec
les
jle
jl
xchg
in
and
and
fwait
rcr
loope
(bad)
and
xchg
xchg
push
or
mov
xchg
clc
and
inc
test
inc
sti
fldcw
retf
xor
movs
fwait
repnz
xchg
xor
mov
jge
mov
(bad)
shr
pusha
scas
mov
mov
pop
push
adc
in
mov
mov
in
dec
cmc
xor
cmp
js
or
lahf
inc
rol
js
fcmovnu
xor
jmp
push
ins
stos
int
xchg
fsubr
and
sub
inc
add
adc
mov
inc
dec
jecxz
add
mov
fdivr
inc
(bad)
in
cmps
imul
scas
clc
dec
shr
sbb
test
push
fxch
cmps
out
aas
test
les
sti
(bad)
je
in
and
inc
je
or
jae
cdq
(bad)
outs
or
mov
mov
pusha
push
sub
mov
jo
test
inc
out
mov
xchg
jbe
cmc
in
out
retf
mov
out
push
enter
sar
fcmovne
inc
imul
cmp
mov
jae
retf
xor
or
sbb
mov
or
and
(bad)
out
mov
in
xchg
ds
aaa
or
fisub
into
sub
inc
aas
pop
dec
inc
movs
scas
shr
adc
sbb
sub
xor
mov
pusha
pop
jb
mov
xlat
das
test
out
pop
mov
push
ret
pusha
xor
adc
pop
fcomp
ret
rcl
cmp
arpl
cmps
xor
mov
mov
out
aam
addr16
sbb
pop
mov
scas
jle
jns
popf
mov
mov
jecxz
movs
inc
adc
sar
inc
lea
add
jae
mov
xchg
loop
cmp
cmp
gs
movs
icebp
ins
adc
jmp
sub
(bad)
and
call
add
sbb
hlt
xor
sti
dec
inc
lahf
mov
leave
fdiv
mov
push
and
in
mov
push
mov
push
test
mov
retf
dec
push
jae
dec
adc
xchg
dec
add
aas
or
and
dec
xchg
or
mov
js
stc
shl
imul
pop
fsubr
sbb
in
mov
retf
dec
rcl
push
(bad)
sub
in
mov
test
retf
clc
mov
xchg
mov
xor
leave
clc
jecxz
sub
mov
add
outs
sti
and
shl
movs
cmps
jnp
cmp
and
adc
mov
(bad)
and
cli
fsub
jecxz
(bad)
sub
pop
adc
jne
adc
sbb
int
sbb
loopne
cwde
add
into
(bad)
mov
(bad)
adc
in
pop
jmp
jg
scas
dec
fsincos
or
jbe
std
xor
pop
fwait
ror
sahf
mov
mov
in
call
fst
jecxz
jg
adc
xchg
int3
sub
cmps
mov
push
jmp
mov
fadd
dec
sahf
sub
jmp
cwde
xchg
mov
fdivr
push
fsub
and
sub
int3
mov
add
dec
xor
cmps
dec
aas
ja
sahf
sub
ds
mov
cs
jnp
data16
dec
mov
fidivr
jb
pop
ret
inc
cwde
cwde
adc
push
je
cs
cdq
(bad)
mov
jae
mov
nop
stc
lea
dec
in
pop
adc
ja
pop
cli
repnz
call
(bad)
jb
jnp
out
push
fistp
push
dec
cmp
jne
popa
retf
push
shl
add
jno
movs
xchg
fidiv
scas
int3
repz
fisubr
popa
jae
inc
push
pop
test
mov
xchg
test
hlt
das
adc
retf
out
xchg
and
bound
jmp
and
int3
jge
arpl
and
sbb
inc
outs
xchg
jbe
inc
push
adc
lahf
push
mov
xchg
jmp
mov
test
and
outs
pop
cmps
or
and
xchg
movs
(bad)
pop
test
jae
sbb
fsubr
jmp
jnp
shr
stos
es
mov
sub
sbb
aaa
xor
pop
retf
mov
stos
imul
jno
inc
scas
pop
mov
adc
shl
movs
(bad)
clc
mov
jo
fwait
iret
retf
outs
nop
test
out
and
push
aaa
push
loopne
imul
push
aam
gs
push
jns
loopne
sub
xor
cmp
cdq
dec
or
loop
push
sbb
dec
lea
in
xor
mov
xchg
add
add
les
ss
data16
mov
fistp
lods
call
sahf
lahf
rcr
loopne
xor
(bad)
out
push
mov
mov
fldenv
mov
mov
jmp
loop
fmul
mov
movs
mov
shl
movs
test
imul
mov
aad
pop
xor
inc
pop
ins
mov
cmc
dec
faddp
movs
(bad)
cmp
jmp
shl
adc
out
push
pop
lock
dec
aad
inc
idiv
or
lea
test
xchg
jl
add
sbb
sbb
mov
pop
arpl
inc
mov
mov
retf
or
pop
das
(bad)
jecxz
inc
push
pusha
repnz
(bad)
ss
sbb
push
test
mov
mov
add
add
gs
and
es
std
fwait
or
add
pop
(bad)
xor
in
test
or
inc
stos
(bad)
mov
inc
jge
iret
rcr
imul
sbb
ds
icebp
add
and
jno
(bad)
mov
jecxz
inc
jbe
jae
fwait
inc
jns
icebp
inc
dec
icebp
push
jmp
shl
xchg
iret
jl
sbb
xor
je
enter
mov
jno
push
sbb
pop
retf
xchg
cwde
push
in
test
in
sar
lock
fsubr
xor
or
shr
mov
inc
cmps
mov
inc
ficom
and
lods
rcl
pop
dec
sti
push
sub
rcl
push
leave
cmps
loopne
loope
retf
scas
(bad)
mov
jo
rcl
out
sbb
cmp
pop
jno
repnz
imul
push
inc
pop
daa
and
cmp
daa
in
repz
push
dec
mov
test
pop
popf
es
dec
mov
jo
sti
xchg
loop
js
imul
jle
mov
dec
dec
call
push
dec
xor
mov
imul
scas
sub
sub
jmp
stos
mov
(bad)
xor
and
(bad)
loopne
jmp
mov
xor
popf
jge
jge
dec
adc
bnd
imul
clc
and
fucomi
jo
or
jl
and
cwd
jge
retf
fbstp
popf
jge
fwait
mov
and
mov
neg
sub
inc
ins
dec
add
mov
adc
fild
dec
(bad)
in
xchg
inc
push
dec
(bad)
repnz
(bad)
mov
cmp
int3
mov
sub
jo
pop
lods
or
movs
xor
ja
pop
pop
xchg
aas
(bad)
mov
in
ret
pop
jg
popf
sbb
push
ss
fdiv
lds
push
add
test
add
cwde
ds
pop
or
push
sbb
jb
adc
jmp
sbb
push
dec
jl
mov
jo
test
dec
push
ss
mov
pusha
mov
dec
sbb
pop
ss
xchg
cs
addr16
clc
int
add
pop
dec
push
jecxz
inc
aas
clc
cmp
repnz
cs
leave
fs
sub
fcom
jmp
not
arpl
sar
pop
adc
xor
and
xor
xor
aam
mov
fsubr
(bad)
adc
mov
mov
iret
aam
js
jmp
lea
mov
not
sbb
pop
xor
test
sub
push
dec
xor
repnz
or
mov
sub
pop
sbb
pop
fs
sbb
push
fisub
lahf
push
outs
xchg
mov
in
aaa
sbb
(bad)
cmovno
repnz
push
pop
inc
push
data16
psrad
push
sub
pop
stc
mov
imul
cmc
test
xor
jg
and
mov
adc
ja
cs
jbe
mov
outs
pop
sti
lods
adc
sbb
jae
cmps
mov
stos
in
idiv
mov
icebp
cmp
je
mov
mov
(bad)
outs
pop
adc
pushf
and
mov
push
adc
data16
and
dec
(bad)
outs
(bad)
mov
test
jge
jmp
xor
pop
sub
pop
js
in
mov
icebp
sub
add
inc
test
out
push
add
cwde
stc
stos
pop
lahf
ficom
arpl
mov
mov
cmc
popf
fsubr
cmp
xchg
mov
inc
jecxz
pusha
das
pop
daa
inc
and
(bad)
mov
xchg
pop
jmp
inc
mov
mov
sub
xlat
(bad)
in
jle
or
dec
in
jl
test
xor
and
push
pop
ins
cmp
fs
jp
xchg
or
dec
retf
push
xor
push
sbb
jp
(bad)
pop
imul
or
idiv
cwde
gs
inc
or
inc
inc
cmps
ss
popf
mov
stos
stos
inc
mov
sbb
and
xchg
xlat
mov
pusha
mov
inc
call
ud1
sbb
jo
shl
cld
pop
adc
stc
call
ins
ss
push
sahf
cmps
jae
pusha
pop
xchg
ret
(bad)
in
int
scas
and
lods
pop
rcr
inc
dec
mov
xchg
popa
stos
(bad)
xchg
test
mov
stos
jae
fmul
std
retf
push
sub
mul
sub
inc
and
outs
cmps
lods
sbb
fimul
or
cli
popa
cld
sub
sub
ds
ja
mov
lock
in
push
fdivr
pop
add
or
pop
cdq
xor
cmp
leave
(bad)
loope
fs
add
add
dec
push
mov
stos
mov
in
test
mov
pusha
jp
mov
push
pop
les
movs
int
xlat
sub
xchg
add
in
push
into
inc
imul
pop
inc
push
jae
sbb
loop
mov
vmread
xor
and
daa
xchg
mov
fsub
push
ja
ins
jbe
fist
mov
sbb
jno
in
cld
ret
call
mov
jb
fdiv
mov
add
ja
cwde
mov
ss
rol
retf
js
call
jmp
ror
adc
add
xor
or
mov
sub
inc
push
dec
cli
lods
popf
pop
xor
push
aad
jecxz
fcmovnu
ror
inc
push
mov
pop
xchg
sub
push
adc
mov
dec
push
pop
add
cmp
sbb
dec
loop
sbb
hlt
retf
dec
cmp
pop
push
aad
mov
jmp
movs
and
mov
xor
aam
cmc
mov
(bad)
add
sub
mov
adc
pushf
mov
push
jl
retf
arpl
test
pop
or
dec
pop
loop
fwait
lea
or
mov
fdiv
and
inc
fstp
int3
scas
or
pusha
test
das
enter
or
call
imul
fist
xor
mov
jecxz
cmp
adc
clc
arpl
sar
std
popf
xchg
mov
push
adc
cli
je
(bad)
or
add
out
sbb
ret
repnz
sahf
xor
fcomi
xor
movs
cmp
retf
and
shl
movs
inc
mov
loop
retf
sahf
pop
lea
push
jl
retf
movs
inc
sbb
mov
adc
dec
sbb
test
das
dec
and
and
jae
mov
adc
arpl
in
dec
pop
cdq
cwde
add
jg
fs
jle
add
pop
adc
clc
addr16
mov
fstp
inc
pop
mov
cmp
mov
repz
push
cmps
(bad)
retf
popf
(bad)
xor
xor
mov
jmp
shl
pop
sti
into
pop
fdivr
repz
les
mov
mov
ins
push
daa
sub
sub
(bad)
fsub
rcr
push
scas
cmp
loopne
nop
stos
inc
sub
cwde
jno
mov
push
mov
jb
dec
mov
clc
cmp
ja
in
fwait
mov
icebp
cmp
arpl
(bad)
retf
jg
mov
aad
push
xor
fmul
or
cmp
outs
pusha
dec
pop
xor
dec
and
out
inc
mov
scas
fistp
pextrw
xchg
or
xor
push
shl
test
add
inc
idiv
xor
xchg
sbb
les
jo
(bad)
into
push
mov
sbb
sub
loopne
cdq
mov
pop
loopne
call
fldenv
sub
or
sbb
adc
rcr
inc
xchg
lock
sub
scas
cwde
push
loop
xor
aam
push
xchg
not
pop
jl
sbb
adc
sub
ds
sbb
in
mov
mov
iret
push
cmp
repnz
dec
out
jno
call
xchg
push
fs
cmc
test
or
xlat
test
push
into
cli
inc
popf
cmp
jmp
ret
add
dec
or
sbb
add
(bad)
test
call
xor
sti
cmp
cmc
or
push
adc
inc
or
sub
fmul
xor
mov
xchg
neg
mov
hlt
push
daa
sti
mov
loope
xor
mov
je
(bad)
pop
out
jecxz
das
ret
push
ret
int
and
cld
mov
sbb
mov
add
pop
jmp
jae
mov
jnp
gs
xor
push
dec
daa
xchg
in
and
in
add
mov
fisttp
pop
mov
jl
mov
or
mov
unpckhps
jl
mov
test
into
jbe
xchg
jno
add
push
and
dec
pop
mov
pop
cmps
inc
ret
mov
fwait
addr16
sub
imul
mov
ret
and
pushf
dec
push
jo
test
data16
push
(bad)
in
push
xchg
add
rcl
sti
fisttp
imul
adc
ds
jmp
jae
nop
shl
push
and
hlt
fnstcw
xlat
addr16
push
sub
shl
mov
(bad)
stc
add
cs
dec
jbe
add
dec
mov
lock
xchg
mov
cwde
sahf
sbb
sub
dec
into
retf
je
call
mov
sbb
and
mov
jbe
push
out
ret
adc
aad
out
and
dec
push
sar
sub
cmps
or
loop
add
push
(bad)
rdtsc
jns
fcomp
pop
cli
push
out
fadd
pop
inc
lds
into
loope
inc
mov
or
jl
add
mov
pop
mov
mov
enter
or
xor
ins
sbb
jl
mul
mov
push
dec
or
daa
xchg
adc
xchg
dec
mov
fsub
aaa
cld
dec
sahf
adc
dec
sar
or
mov
and
int
adc
xor
jmp
push
push
push
fs
jp
xchg
fidiv
test
jae
dec
inc
stos
pop
movs
icebp
aas
jecxz
int
push
sti
fcomp
hlt
jbe
cmp
mov
dec
sub
cwde
push
xchg
leave
arpl
aam
cli
int
sub
mov
xchg
test
jmp
cs
inc
inc
jle
scas
sahf
fbld
jmp
lahf
rcl
(bad)
ins
push
loop
dec
push
mov
xchg
push
sbb
mov
pop
es
dec
scas
dec
popa
sub
lock
mov
pusha
aas
gs
jb
jmp
add
or
js
mov
gs
or
addr16
add
adc
(bad)
pop
leave
sbb
inc
and
push
xchg
(bad)
cmps
retf
sub
adc
test
push
mov
loop
dec
cli
cs
push
dec
cmps
jo
(bad)
adc
(bad)
popa
xor
inc
mov
mov
adc
cmp
int
sbb
cmp
jmp
jns
mov
cmp
hlt
aad
mul
push
sub
or
out
mov
mov
adc
jp
adc
retf
and
jae
sahf
aam
in
cmps
sbb
push
scas
xchg
or
sub
dec
outs
dec
scas
jp
or
imul
cs
ret
lds
cld
sub
ja
aam
mov
and
cmp
sub
ficom
test
push
add
idiv
lods
sti
(bad)
fprem1
xchg
ja
xchg
out
pushw
adc
scas
sar
mov
sbb
cdq
into
inc
cmps
lods
mov
out
or
xchg
adc
pushf
lods
sbb
outs
dec
pop
pop
pop
dec
fcom
ds
mov
scas
imul
repnz
inc
mov
dec
je
xchg
mov
inc
(bad)
fdiv
mov
in
in
std
lea
addr16
or
outs
into
nop
mov
je
or
imul
pushf
inc
leave
(bad)
loop
add
movs
imul
xchg
mov
call
sbb
jns
xchg
out
enter
mov
add
mov
sub
cmp
in
(bad)
call
daa
jnp
pop
mov
pop
xchg
(bad)
xor
fdivp
data16
sbb
jns
jno
ins
adc
and
or
and
fiadd
and
div
ds
cli
shl
test
jge
sbb
cmps
adc
ficom
sahf
dec
ficom
xor
push
leave
movs
lds
fdivr
fsub
mov
dec
xor
sub
or
sahf
mov
sar
out
ror
dec
mov
loop
jecxz
pop
fnstenv
(bad)
adc
imul
mov
ja
sahf
pop
mov
or
lds
dec
or
lods
adc
xchg
in
push
ror
cmp
xchg
ret
rol
or
inc
adc
shl
cli
stc
imul
sub
(bad)
test
and
je
mov
and
ins
pop
and
test
out
jmp
neg
call
add
mov
(bad)
xlat
xchg
leave
and
push
dec
repz
cmp
mov
inc
jl
stos
or
out
sub
inc
imul
popa
add
cmps
sub
mov
jmp
xor
leave
in
mov
dec
stc
mov
jbe
cmp
inc
jg
cmps
or
mov
call
fmul
ss
mov
mov
scas
cmp
leave
jl
push
ds
jmp
call
les
stos
sbb
pop
xchg
les
fwait
adc
int3
stos
je
jp
pop
inc
jmp
movs
pminub
mov
mov
mov
stos
popf
mov
cld
adc
inc
test
xor
repnz
push
inc
sbb
icebp
cmps
cmps
dec
int3
sbb
lods
out
pop
xor
or
inc
loopne
jmp
test
xchg
sbb
jmp
mov
adc
push
aas
pop
fstp
or
pop
inc
enter
popf
and
pop
push
jmp
fcomp
mov
aaa
dec
adc
out
inc
or
dec
enter
mov
int
dec
cmp
xchg
imul
fs
stos
push
sbb
or
fild
jmp
mov
pop
sbb
adc
call
dec
popa
cmp
ja
xor
fisubr
repnz
clc
ror
bnd
dec
aad
pop
test
gs
scas
add
xor
shl
pop
adc
mov
cmp
imul
and
lahf
push
mov
ficomp
int3
cmp
jmp
ficom
test
adc
scas
add
mov
mov
add
sub
loope
xchg
pushf
push
or
mov
bound
and
or
mov
adc
add
sub
dec
(bad)
sub
jge
outs
xor
jae
aas
mov
xchg
ins
push
std
repnz
mov
imul
or
sbb
jecxz
inc
aam
push
imul
add
shl
les
mov
fld
jae
lahf
call
aam
in
sub
ret
ins
fsubrp
sbb
sbb
push
dec
sub
sbb
ds
aam
scas
es
retf
sub
(bad)
fdiv
repz
sub
out
or
jnp
xchg
xchg
and
dec
push
mov
shl
xor
xor
int
mov
repz
shr
push
jge
fdivr
and
and
enter
mov
into
mov
mov
jbe
pop
dec
in
ins
outs
jnp
dec
jbe
shr
mov
fidiv
rol
out
push
dec
dec
inc
mov
and
cmp
movs
out
jo
inc
push
push
lock
or
hlt
mov
fbld
je
mov
pop
sbb
jg
dec
das
adc
(bad)
icebp
(bad)
dec
sbb
xchg
(bad)
mov
scas
mov
ds
mov
xchg
sub
adc
(bad)
xchg
sub
in
or
and
ins
inc
and
je
pop
retf
loop
pop
push
ins
xchg
xchg
and
icebp
mov
sub
add
imul
lods
shl
sbb
enter
lea
hlt
cmp
or
int3
xor
or
ret
push
out
mul
push
or
push
xor
fcom
push
push
mov
dec
mov
pop
jecxz
cwde
mov
stc
ins
lahf
enter
js
fistp
pop
pop
and
inc
mov
or
std
inc
stc
imul
lods
stos
cmp
aaa
adc
popf
out
push
pop
xor
cmp
mov
pop
mov
mov
or
inc
loop
mov
cmp
adc
adc
into
in
scas
jl
mov
sbb
push
mov
ins
inc
imul
aam
jp
pop
sub
test
push
fs
pop
push
imul
cmps
and
icebp
shl
dec
out
lods
mov
rcr
cmp
cmc
cmp
in
push
jecxz
outs
ret
pop
cli
cmps
cld
std
hlt
or
dec
lods
sbb
in
pop
ja
fnstsw
cwde
adc
mov
mov
inc
mov
push
add
shr
(bad)
popf
and
cmp
add
iret
int3
movs
sar
jp
les
je
rol
mov
inc
push
sub
mov
or
cmp
and
(bad)
ss
int3
mov
xchg
jg
jo
int
xor
or
mov
jmp
xchg
lds
and
rep
repnz
mov
jns
mov
enter
(bad)
jp
cdq
mov
xchg
stc
fcom
cdq
or
mov
sub
scas
ds
xchg
mov
gs
pop
cdq
xchg
aad
jmp
outs
test
push
das
xlat
call
fs
popa
sub
lods
or
out
aad
inc
sahf
cmp
and
(bad)
shl
jnp
jg
je
add
push
xchg
pop
(bad)
xor
(bad)
imul
jecxz
iret
cwde
xchg
or
pop
out
pusha
pop
xor
je
and
mov
dec
add
stos
dec
sbb
mov
fs
pop
mov
xchg
xor
xchg
lods
sub
pop
pop
mov
and
pop
mul
aad
pop
pop
or
repz
(bad)
aam
mov
cmp
mov
ins
adc
xor
popf
popa
mov
in
cmps
and
popf
test
jbe
push
mov
out
mov
cwde
adc
lea
mov
mov
or
cmps
sub
push
cli
cmps
cmps
test
jge
sbb
call
mov
fisub
cld
repz
fwait
pop
push
adc
dec
rol
push
cwde
and
mov
cmp
add
pop
push
cmc
movs
push
mov
mov
test
pop
les
imul
push
and
outs
lahf
push
push
test
ja
test
sub
push
(bad)
jmp
dec
push
inc
ficom
mov
ror
jecxz
pop
mov
out
mov
(bad)
mov
dec
loopne
and
mov
ins
inc
mov
add
add
ins
sub
adc
mov
stc
clc
and
mov
rol
pushf
inc
rcr
sbb
fst
add
std
add
mov
hlt
(bad)
cdq
push
fwait
xlat
icebp
jbe
call
stc
sar
or
mov
mov
push
adc
mov
add
xchg
sub
das
ja
jo
dec
pop
mov
clc
and
mov
and
mov
push
mov
mov
mov
js
push
xchg
arpl
push
mul
(bad)
stos
xchg
jl
cmp
or
test
out
cmc
aaa
lds
add
dec
adc
adc
es
adc
jl
or
shr
mov
test
xchg
jnp
and
aaa
mov
leave
pop
ret
mov
aad
cmp
dec
jbe
jae
xor
lods
cmp
retf
movs
mov
adc
imul
and
popa
test
mov
inc
popf
inc
xor
sub
pcmpeqd
and
sbb
sub
iret
fisub
dec
dec
mov
out
bswap
int3
xor
shl
nop
push
jnp
xchg
push
aad
adc
or
sub
sar
dec
sub
mov
sbb
jne
popa
hlt
mov
fs
cmc
adc
mov
adc
pop
push
movs
out
popa
retf
ret
mov
or
movs
loopne
mov
mov
cmp
lock
retf
jo
out
xchg
aaa
das
outs
sub
ins
xchg
ja
ffree
imul
sbb
cmp
inc
sub
rcr
rol
popa
jp
(bad)
outs
adc
std
inc
push
jo
mov
inc
daa
lahf
je
jmp
movs
sbb
fwait
adc
and
pop
adc
mov
sti
sub
jecxz
dec
or
repnz
xchg
fimul
jno
popf
fwait
dec
xor
sbb
fdivrp
sbb
scas
push
mov
rcl
outs
inc
dec
lock
sub
pop
jne
xor
call
(bad)
in
das
cmp
out
pop
adc
lea
mov
mov
cmp
in
mov
mov
and
adc
inc
pop
pop
jp
push
fstp
nop
mov
mov
mov
ja
sahf
(bad)
sbb
xchg
or
stos
gs
pop
pushf
jecxz
sub
das
add
call
jl
push
push
pop
clc
push
out
(bad)
jle
push
stos
cmp
outs
pop
sub
ret
adc
enter
jmp
mov
push
jmp
pop
into
outs
mov
add
mov
inc
cmp
aaa
rcr
cli
cmp
dec
(bad)
out
fnstcw
jp
das
xor
inc
jecxz
rcr
push
addr16
(bad)
pushf
aas
sbb
sbb
pop
inc
add
es
mov
lahf
xor
inc
(bad)
popa
addr16
popa
sbb
add
xor
add
lods
retf
jbe
and
dec
lea
dec
add
ror
gs
addr16
int3
mov
mov
ds
jns
jnp
das
or
int
xor
pop
jl
into
pop
add
popf
jnp
test
mov
jae
shr
xor
mov
(bad)
or
dec
je
push
sbb
daa
dec
fadd
cmp
mov
mov
fisttp
add
das
xchg
adc
sbb
movs
(bad)
cwde
push
and
sbb
loopne
out
in
(bad)
push
mov
xor
shl
mov
call
xor
sbb
sub
sbb
cwde
mov
mov
dec
in
push
pop
mov
pushf
cmc
lds
in
mov
sbb
adc
sub
mov
mov
mov
push
or
enter
lock
xchg
add
cmp
xchg
push
and
aaa
fild
cs
xchg
shl
inc
stc
push
mov
lahf
aad
cmp
mov
repz
cmps
mov
inc
nop
(bad)
mov
outs
pop
push
add
cmps
idiv
mov
jmp
retf
scas
leave
sub
jbe
dec
pop
mov
movs
mov
add
xchg
movs
pop
or
inc
std
sub
outs
sbb
std
mov
jg
mov
addr16
cmp
(bad)
adc
dec
inc
in
mov
cld
(bad)
fstp
jmp
mov
cmp
dec
movs
rcl
lock
sub
rcl
xchg
pop
mov
adc
push
xchg
fild
(bad)
jnp
mov
sub
gs
push
xchg
jbe
cmp
popa
add
add
daa
push
push
mov
arpl
jge
mov
pop
push
sub
mov
fistp
mov
aad
mov
aam
ret
rcl
in
dec
aas
fiadd
aam
cmp
cmp
push
jns
cmp
or
cmp
cli
aas
popa
pusha
push
jg
xchg
js
dec
lods
(bad)
cmp
cmp
sub
xchg
inc
jbe
push
jp
mov
(bad)
mov
sbb
sti
clc
mov
popf
cmp
or
xchg
mov
cwde
outs
push
adc
mov
(bad)
cmp
ins
int3
pop
mov
mov
xchg
mov
gs
mov
fiadd
dec
ror
(bad)
mov
mov
jge
push
mov
jbe
xor
fwait
sbb
mov
push
mov
jl
fild
icebp
fist
sbb
sbb
hlt
push
mov
cmp
adc
outs
mov
cmp
or
and
or
je
inc
push
pop
cli
std
pop
or
lods
jp
mov
popf
test
cmp
mov
sti
cmp
xor
pop
das
mov
jl
xor
cdq
pushf
fild
fiadd
aaa
fst
in
xchg
popf
mov
retf
out
shr
or
retf
out
jbe
jnp
stc
shl
outs
mov
clc
jmp
xor
cmc
inc
pop
add
xchg
fdiv
sbb
and
pop
(bad)
ror
add
xlat
imul
cmp
or
int3
pop
je
xor
xor
movs
jns
add
jne
xchg
(bad)
mov
popa
fiadd
retf
aam
test
mov
and
movs
mov
push
sub
mov
gs
cld
dec
or
movs
daa
pop
shr
add
jg
jbe
add
mov
retf
retf
and
and
test
js
xor
mov
pop
js
sti
xlat
push
mov
loop
sbb
andnps
and
push
jnp
ja
xchg
xor
inc
add
sub
pop
das
jmp
fistp
arpl
xor
cli
xor
call
and
or
mov
sbb
sub
mov
sub
retf
mov
sub
push
sub
mov
imul
ficomp
(bad)
aaa
or
inc
ror
sbb
sbb
arpl
movs
push
cmp
popa
call
stos
dec
inc
and
jg
loopne
mov
sub
xor
pop
mov
xor
mov
ss
jae
sti
scas
and
repnz
ja
jns
arpl
ins
add
xlat
pop
xchg
inc
xchg
(bad)
aas
push
std
stos
mov
call
xlat
mov
dec
(bad)
mov
cld
push
push
or
retf
mov
cwde
mov
inc
mov
jmp
jnp
inc
shl
ret
xor
aam
push
loope
repnz
sar
test
jae
loope
jp
xor
fisttp
mov
bound
sbb
add
out
dec
xchg
mov
adc
jle
out
aam
fwait
cld
inc
dec
sahf
int3
adc
ins
sbb
fbstp
mov
adc
xlat
add
sahf
pop
inc
add
es
dec
mov
adc
getsec
push
push
xor
arpl
jge
adc
mov
pusha
aam
or
div
aad
inc
retf
jp
test
imul
ds
jp
jae
test
xchg
fistp
push
xchg
mov
(bad)
retf
push
sahf
ror
js
fadd
cmps
jnp
adc
scas
pusha
shl
in
sub
push
adc
gs
test
pushf
push
in
repnz
add
dec
mov
add
ins
cmc
add
test
iret
fistp
imul
cmp
popf
jae
xchg
jmp
or
fs
xor
in
cmp
xchg
xchg
div
sti
enter
fnstcw
mov
mov
pop
push
ins
cmps
lahf
and
or
mov
add
add
daa
in
test
push
xchg
(bad)
jmp
mov
int
mov
ss
mov
cwde
mov
or
test
and
aaa
pop
mov
add
icebp
add
in
push
mov
jmp
scas
or
aas
sbb
test
sbb
sub
in
or
psubusb
push
xor
in
cmps
pop
lahf
xor
js
cli
add
add
or
ret
test
data16
test
sbb
idiv
pop
iret
stos
fs
loopne
add
arpl
push
and
into
call
xlat
cmp
push
shl
jno
add
ins
stos
pushf
sub
add
mov
inc
aam
mov
xchg
sub
sti
cmp
pop
or
xor
fnstcw
div
mov
jge
push
adc
fs
adc
lods
or
jne
fistp
sub
jmp
popa
lea
ret
dec
into
xchg
ins
and
or
nop
push
jmp
popa
add
pusha
inc
jl
mov
fnstsw
cmp
inc
dec
sbb
jmp
add
lods
imul
push
mov
popf
out
and
pop
add
jge
or
je
std
mov
mov
xchg
jge
push
lds
xchg
cs
push
mov
shl
repnz
xor
dec
sbb
loope
mov
pop
mov
push
inc
xor
pop
div
and
jg
mov
sub
cmp
pop
stc
fwait
bound
and
jbe
mov
dec
lds
jae
rol
aaa
add
mov
inc
or
mov
mov
scas
dec
jg
fucom
js
call
rol
cmp
daa
(bad)
loopne
pop
xchg
cmps
in
jae
add
cmp
fmul
es
jge
pop
mov
xchg
cld
jg
sbb
and
(bad)
mov
rcr
or
push
pushf
aas
xor
hlt
adc
xchg
pop
and
xchg
hlt
fs
nop
sub
mov
sub
das
push
in
dec
sti
xchg
es
mov
sub
loopne
mov
scas
add
in
or
cmp
add
pop
cmc
out
mov
mov
jle
je
pop
mov
mov
mov
xchg
pop
cmps
jae
data16
test
fiadd
vpsubq
inc
pushf
xchg
daa
jge
aas
mov
test
shl
repz
arpl
ds
popa
rcr
mov
ret
call
test
jecxz
xchg
addr16
mov
ds
movs
or
out
sbb
sti
(bad)
inc
inc
cmp
adc
sbb
cmp
imul
aam
mov
pusha
movs
out
fiadd
adc
je
ds
test
imul
ret
test
sbb
mov
inc
ds
push
lods
cmps
add
in
icebp
sub
retf
outs
push
jo
add
inc
icebp
out
out
imul
mov
(bad)
jmp
stos
ret
mov
es
aam
fcomp
repz
in
js
in
daa
xchg
push
sti
loopne
push
mov
and
fxch
movs
and
fadd
hlt
jecxz
into
sti
fbstp
cdq
mov
out
aam
sub
sub
lgdtd
aas
retf
pop
xor
push
jo
imul
rcr
mov
mov
scas
iret
enter
(bad)
(bad)
xchg
out
iret
test
cmp
push
je
sub
adc
mov
leave
mul
pop
pop
sbb
push
sub
aas
in
jnp
(bad)
hlt
mov
rcr
bound
mov
cmp
les
scas
loopne
mov
jb
aam
retf
inc
sar
inc
mov
jmp
push
and
push
inc
xor
lock
scas
daa
and
cmp
ret
dec
(bad)
mov
xor
dec
int
fisttp
addr16
or
retf
int3
mov
(bad)
mov
xor
and
mov
test
repz
call
cdq
lahf
(bad)
jb
inc
in
shl
stc
mov
psrad
movs
add
xchg
cmp
add
mov
(bad)
push
inc
outs
inc
xchg
sbb
gs
mov
pop
pusha
(bad)
push
push
xchg
aaa
fs
xor
push
outs
pop
nop
lods
and
test
mov
mov
shl
hlt
mov
pusha
fistp
enter
in
and
sub
sbb
inc
dec
in
nop
in
push
in
or
and
fdivr
je
cmp
ds
jne
in
(bad)
shl
imul
(bad)
(bad)
sbb
xlat
and
mov
ins
or
iret
mov
in
adc
push
jl
sub
pop
or
add
icebp
test
add
sub
mov
pop
dec
cld
jno
mov
xchg
mov
cmps
mov
lahf
mov
test
ins
stos
das
test
sub
sbb
jo
call
daa
test
xchg
mov
sub
mov
aad
cmp
add
sbb
jns
lds
or
push
aad
dec
cmps
or
call
add
dec
xchg
mov
and
ror
stos
sub
outs
mov
(bad)
loope
xchg
ins
enter
sti
cmp
sub
fisubr
push
xor
xor
clc
mov
std
ret
mov
cs
push
and
xchg
jae
(bad)
mov
mov
clc
jb
mov
fst
and
mov
mov
and
mov
jbe
xlat
imul
pop
int3
mov
sbb
adc
mov
dec
lods
mov
mov
jl
(bad)
les
mov
daa
xchg
movs
cmp
ficom
mov
sar
pop
xor
mov
adc
cmp
and
aaa
or
inc
push
jb
lods
ud1
jecxz
pop
dec
pop
outs
xor
jmp
jno
cmp
xchg
cmps
ss
(bad)
pop
xorps
pushf
and
sti
inc
into
jl
mov
jmp
popf
jp
push
mov
(bad)
adc
out
dec
fnstsw
ins
push
call
dec
cmp
mov
pop
gs
int
inc
jae
lea
or
jle
outs
repz
das
lds
enter
inc
inc
cmp
mov
sbb
jle
lea
lods
ret
pavgw
inc
popf
or
mov
mov
or
add
pop
dec
xchg
icebp
jo
mov
stos
(bad)
adc
mov
test
add
or
into
and
mov
shl
add
mov
adc
sahf
dec
cmp
pop
cmp
sub
add
stc
test
mov
cmc
inc
fucomi
jnp
xor
mov
rcl
jecxz
push
jl
push
push
in
idiv
or
dec
or
es
jecxz
mov
lea
popa
and
dec
jmp
out
sbb
je
or
loop
stc
push
stos
or
fimul
xor
pop
mov
xchg
dec
enter
fnstsw
cmp
mov
idiv
jle
fcom
ja
dec
add
lds
xchg
xor
int
ss
icebp
sub
hlt
popa
repz
sbb
add
cmp
mov
clc
bound
mov
mov
retf
popa
or
xor
sbb
rcl
pushf
lea
sbb
cmp
mov
rol
cmp
mov
mov
jbe
mov
adc
xor
mov
jmp
and
xor
xchg
loopne
loopne
xchg
or
gs
iret
push
pop
ins
ja
and
sbb
pop
retf
dec
imul
jb
cmps
pushf
mov
sbb
or
inc
xor
fidivr
mov
push
in
dec
mov
cmp
test
jg
jne
push
mov
and
xchg
xchg
jmp
add
xor
test
push
mov
and
add
xor
add
sub
out
scas
test
xor
call
fdiv
data16
dec
adc
mov
push
push
mov
sbb
mov
aad
ins
enter
mov
pop
xor
(bad)
xchg
shl
shl
xor
sbb
jecxz
loope
aas
ficomp
or
pop
test
fdivr
xchg
rcl
adc
jns
out
xchg
jecxz
in
and
push
aaa
or
adc
jns
lods
sub
inc
pushf
gs
push
fist
inc
mov
add
inc
pop
sbb
sub
sub
out
xchg
push
pop
xchg
out
sbb
and
adc
jp
xor
dec
cmc
(bad)
call
add
ins
stc
daa
or
in
imul
xor
stos
push
push
popa
data16
les
pop
mov
push
out
inc
xchg
push
mov
and
or
and
gs
push
mov
mov
cmp
and
and
enter
movs
pop
std
call
add
cmp
dec
sbb
jle
sub
std
adc
movs
sbb
adc
scas
xchg
std
cs
cmps
and
xor
xchg
xchg
enter
aad
cli
pop
fnstenv
sub
dec
sub
pop
push
leave
sub
xchg
sub
mov
inc
sub
enter
push
pop
aas
mov
xor
aaa
movs
jg
inc
gs
repz
cli
cmps
push
lock
in
outs
sbb
je
pop
mov
push
sub
dec
ret
in
icebp
test
daa
lock
in
stos
pushf
push
mov
out
icebp
stos
add
pandn
aad
shl
popa
jnp
daa
xor
scas
sbb
je
add
or
lods
test
jns
push
jp
cmp
adc
fs
adc
shl
mov
mov
leave
gs
fdivr
adc
cmp
fdivr
xor
mov
out
loopne
inc
pop
bound
xchg
inc
xchg
inc
adc
jne
jp
fwait
lock
out
push
xor
jno
xchg
retf
data16
and
add
into
es
add
xor
jp
mov
dec
cwde
sbb
cmp
lds
and
jno
mov
push
mov
push
fwait
sbb
xchg
loopne
or
add
je
imul
mov
mov
mov
ins
pop
in
popa
nop
sbb
pop
add
fiadd
mov
sub
jmp
dec
retf
xor
adc
cmp
pop
adc
inc
dec
mov
mov
cld
shl
test
mov
sbb
xor
out
xchg
add
mov
mov
pop
shr
sub
mov
imul
outs
push
div
cdq
aam
xor
and
ret
xchg
out
mul
adc
stc
stos
mov
mov
push
pop
fist
sub
jge
dec
into
ins
ror
pop
pop
sub
aas
rol
add
mov
xchg
adc
leave
iret
add
mov
cmc
in
and
popa
cdq
adc
mov
pop
xor
jmp
inc
mov
xchg
xor
dec
mov
adc
xchg
mov
(bad)
adc
xchg
mov
jmp
test
imul
fsubp
cs
jnp
call
gs
dec
sbb
loope
pop
push
pop
xchg
(bad)
inc
leave
xor
mov
dec
shr
sbb
push
pop
(bad)
fdiv
shr
loop
xchg
adc
add
push
shl
mov
cdq
dec
outs
or
sub
pop
mov
xor
sahf
int3
mov
movs
pushf
shr
nop
into
sub
imul
shl
mov
cmp
(bad)
cmps
retf
cmps
push
test
push
cli
pop
inc
pop
xchg
adc
jl
inc
ret
and
lea
push
xchg
in
and
rcr
jo
fiadd
mov
sub
ja
data16
out
sub
add
ins
mov
addr16
fbld
sub
lods
cmp
sbb
pop
repnz
xchg
cdq
xchg
mov
outs
cmc
iret
pushf
sub
call
cwde
dec
jae
icebp
pop
sub
or
jb
sbb
inc
xchg
(bad)
dec
xchg
test
push
ins
icebp
iret
scas
ss
dec
fdiv
sub
sbb
ror
fwait
mov
mov
mov
mov
daa
xlat
fisubr
mov
aas
pop
nop
repnz
jb
or
or
sub
test
mov
ret
xor
sbb
sub
xor
and
adc
loop
jecxz
mov
arpl
mov
inc
push
out
mov
lds
lea
jecxz
nop
test
inc
push
fld
ficom
rol
mov
jbe
out
fsub
ret
fistp
fwait
jbe
adc
adc
jmp
(bad)
test
mov
ins
xor
inc
pop
outs
jbe
xchg
sub
cmp
fiadd
mov
push
mov
xor
adc
xchg
adc
shl
dec
sti
fisubr
data16
sub
mov
(bad)
add
movs
jns
arpl
cli
arpl
add
cmp
popf
cld
or
jno
or
mov
xchg
shl
sub
pusha
or
xchg
outs
inc
in
xor
(bad)
cmp
mov
sbb
mov
inc
nop
sub
jnp
jmp
push
scas
mov
mov
sar
pop
xlat
pop
inc
cmp
mov
je
test
(bad)
call
addr16
pop
push
dec
sub
stos
jl
nop
push
js
jbe
adc
in
and
hlt
dec
pop
cli
lock
inc
push
gs
mov
test
jb
xor
jge
(bad)
dec
xchg
xchg
outs
push
sbb
cmp
or
mov
out
test
js
loope
dec
shr
ss
or
in
xor
sub
ins
aad
clc
aaa
(bad)
push
xchg
scas
pop
leave
or
add
arpl
fwait
pop
add
das
(bad)
fisub
cmp
rcl
inc
scas
xor
sub
sar
jno
add
xor
push
dec
mov
test
mov
mov
or
or
lahf
dec
scas
jmp
hlt
scas
inc
pop
popa
mov
push
xchg
leave
xchg
test
enter
in
inc
sub
and
in
xchg
mov
sbb
icebp
sbb
call
lahf
popa
jne
scas
push
jno
or
inc
adc
or
in
mov
pop
stc
or
sar
and
xchg
sub
inc
fwait
inc
lods
lods
inc
lods
add
in
test
add
iret
cmp
mov
mov
shl
(bad)
clc
inc
jo
jb
test
jno
add
and
xchg
outs
xlat
sub
test
pusha
push
stos
fsubr
xchg
nop
mov
jp
mov
push
dec
pop
or
lsl
fmul
dec
icebp
test
sar
movs
dec
pop
jp
arpl
movs
je
dec
lock
and
or
lds
rcr
fmul
sti
shr
ret
pop
lahf
(bad)
std
inc
sbb
in
jne
in
movs
jb
neg
mov
push
fdiv
lds
and
cld
jns
lods
cmp
stos
push
xchg
test
les
inc
mov
sbb
and
cmps
test
push
add
clc
dec
mov
enter
push
push
cmp
pop
ret
test
and
in
sub
ror
int
and
adc
sbb
mov
inc
pop
dec
lahf
outs
mov
lahf
push
mov
adc
loope
in
arpl
call
(bad)
loop
retf
or
mov
lds
mov
push
ins
jmp
adc
mov
dec
cmp
inc
push
rol
mov
fidivr
xchg
mov
ret
mov
mov
jns
repz
int
or
fwait
mov
jl
pusha
lahf
fs
and
pop
gs
mov
sub
es
clc
sub
or
or
in
dec
sub
int
and
das
jge
das
ja
jmp
inc
push
pusha
adc
xsha256
cmps
xchg
mov
push
mov
push
inc
(bad)
sub
sti
mov
cmp
cmp
(bad)
aam
iret
fstsw
dec
add
jmp
sbb
movs
dec
popf
shl
jb
in
cmp
jo
push
out
mov
lock
cmp
pop
adc
and
data16
(bad)
cli
pop
shr
aas
mov
mov
fs
sar
xor
and
(bad)
pop
bound
std
push
sbb
adc
xchg
adc
pop
aad
mov
fild
outs
es
lods
sub
out
mov
add
retf
xchg
xor
add
mov
jne
loop
jmp
mov
mov
vpcmpgtd
(bad)
call
or
sbb
cmp
aam
jo
mov
sbb
mov
cmp
cs
stos
cli
sbb
std
and
push
and
cmp
or
or
ins
xor
jp
test
or
xchg
sub
jl
mov
dec
jmp
inc
das
or
(bad)
int
cdq
nop
out
mov
adc
dec
ins
xor
dec
hlt
or
mov
add
retf
cs
jnp
jl
push
inc
mov
loopne
mov
(bad)
repz
ficomp
jae
push
ret
stos
push
icebp
adc
test
aad
lds
call
movs
mov
in
cmp
int3
xchg
lea
in
cs
ret
jl
test
leave
in
inc
jle
sub
ss
shr
mov
jp
push
addr16
imul
rcl
pop
jp
call
dec
push
cmp
sbb
(bad)
lods
dec
mov
idiv
pop
pop
js
sub
fs
stos
mov
push
in
dec
fwait
imul
shr
loopne
in
call
mov
loope
sub
clc
sahf
movs
xchg
das
inc
push
fisttp
mov
xor
mov
retf
or
shl
jno
xchg
lods
popf
sbb
gs
repnz
pop
rcr
dec
clc
push
pop
call
push
aam
into
imul
and
pop
lahf
lods
icebp
adc
stc
mov
(bad)
jle
les
(bad)
mov
adc
push
in
xchg
inc
fld
and
pusha
cld
imul
das
test
and
aaa
mov
aam
call
imul
or
xor
inc
jp
std
sbb
sub
cmp
sahf
arpl
movs
imul
sbb
sub
or
jmp
pop
shl
into
jp
scas
fld
mov
mov
push
pop
jo
jmp
dec
xor
outs
out
or
xlat
call
mov
sbb
imul
out
(bad)
mov
lock
sbb
mov
inc
mov
movs
xor
enter
iret
stos
xchg
jp
add
sti
cmp
or
or
popf
jp
mov
xor
xor
or
pop
sbb
cmp
int
outs
loope
mov
mov
or
sbb
inc
rcr
cdq
adc
loop
and
rcr
jmp
lds
pop
int
cmp
xlat
or
pop
and
les
inc
mov
psubb
je
jns
sbb
adc
hlt
jecxz
std
ret
push
call
cdq
outs
prefetch
or
call
sbb
ss
xor
out
rcl
cld
ins
dec
stc
jmp
jecxz
or
pop
test
xchg
xchg
sub
jl
inc
ss
out
cmp
pop
jmp
dec
mov
dec
popaw
popf
mov
cmp
sbb
ret
inc
sbb
pop
push
scas
or
jg
lods
retf
mov
daa
inc
or
ret
xchg
ret
dec
rol
mov
mov
cdq
push
iret
aam
cmc
mov
pop
pushf
push
pushf
fiadd
xchg
push
(bad)
cli
pop
std
hlt
mov
(bad)
call
push
js
imul
mov
mov
cmp
cmp
ins
sub
and
dec
in
add
mov
gs
dec
jmp
(bad)
mov
sbb
fiadd
pusha
imul
mov
jge
rcr
loop
and
jge
call
adc
or
fstp
pop
cmps
push
sub
pusha
popf
pop
mov
mov
add
pop
and
cli
imul
xor
arpl
sbb
xchg
cmp
call
out
loopne
and
push
sub
add
fisttp
fcom
outs
clc
fldcw
mov
mov
es
and
inc
loopne
aas
int3
push
pop
ds
jns
ds
out
xchg
jle
fistp
add
nop
cld
test
out
cmp
jl
mov
outs
push
addr16
mov
jb
adc
cmp
push
(bad)
(bad)
push
adc
pushf
sub
pop
ja
retf
imul
or
retf
cs
jae
dec
xchg
lea
nop
test
jecxz
jo
in
pop
arpl
lds
sub
out
pop
add
pop
(bad)
mov
fwait
mov
iret
push
aad
ja
in
movs
xchg
mov
scas
(bad)
mov
imul
js
ss
and
adc
mov
sbb
push
retf
fsubr
ret
gs
jg
cdq
cwde
loop
mov
int3
pop
aas
pusha
xchg
movs
adc
ja
shl
and
push
aaa
inc
lods
loop
and
xor
test
dec
mov
imul
add
cld
ficom
rcr
cmps
or
mov
(bad)
xor
pop
pop
push
adc
test
retf
adc
stc
int3
retf
mov
push
stos
rcr
sub
outs
je
lds
out
aas
fcomp
out
cld
cmc
mov
xor
mov
jmp
push
sub
sbb
mov
sub
inc
sub
mov
fld
jmp
enter
add
popf
mov
retf
pop
lods
xor
push
popf
sti
add
mov
jmp
dec
inc
push
adc
sahf
jle
inc
imul
mov
fidivr
movs
cdq
add
pop
pop
cmp
cmp
xchg
sub
xor
les
mov
push
fimul
sar
or
jbe
test
mov
cdq
mov
movs
sbb
addr16
inc
aam
cmp
cs
xchg
mov
push
mov
movs
ret
mov
jne
mov
ret
pop
sbb
rcl
mov
mov
inc
jp
cdq
clc
inc
pop
push
inc
in
add
ss
dec
sub
pushf
rcl
pop
and
mov
gs
cld
popa
cmp
push
dec
mov
cs
lods
psrlw
aam
dec
mov
movs
push
nop
or
jbe
xor
je
mov
add
add
outs
jne
das
sbb
jne
out
jmp
mov
push
or
mov
dec
gs
inc
aam
(bad)
dec
hlt
ins
adc
cld
in
test
push
jge
sti
cmp
xor
popa
and
dec
out
lea
lods
push
jo
fcomp
int3
add
fiadd
mov
popa
fmulp
sbb
xor
pop
cli
xchg
jbe
push
in
sub
adc
iret
jbe
xchg
cmps
mov
retf
aam
mov
xor
push
sti
mov
stos
enter
push
js
xchg
inc
es
repz
push
es
out
bound
aam
daa
data16
mov
xor
lea
sbb
ror
fidiv
mov
repnz
sub
pop
outs
jp
sub
test
out
repz
push
pop
lods
sahf
mov
mov
push
std
mov
adc
out
cld
shl
sub
push
xor
(bad)
retf
addr16
sub
loope
inc
add
in
pop
mov
cdq
fadd
sub
and
movs
arpl
cmps
pop
into
scas
(bad)
mov
jl
adc
or
pop
je
mov
xor
lods
not
js
pusha
aas
mov
movs
rcl
lods
and
dec
rol
scas
mov
add
ret
shr
cmp
rcl
sub
sub
call
pop
dec
mov
nop
iret
mov
push
imul
pop
das
pusha
(bad)
shr
xchg
shl
test
loop
lds
add
pusha
pop
add
mov
lods
mov
lea
arpl
out
sbb
add
movs
jb
or
adc
aam
inc
xchg
pop
add
push
fs
jl
stc
sahf
push
dec
movs
scas
test
jl
mov
cmc
cmp
pushf
(bad)
cmps
ftst
jmp
popf
fnstcw
and
test
xchg
popf
push
call
in
xlat
push
inc
repz
enter
cwde
(bad)
cdq
xor
dec
dec
fdiv
outs
imul
data16
aas
les
mov
mov
bnd
pop
inc
addr16
iret
pop
aad
sahf
out
cwde
add
cwde
imul
inc
xchg
out
sub
jmp
div
push
sub
jp
cmc
cmp
retf
push
(bad)
adc
jmp
arpl
cmp
xchg
sub
sub
or
dec
std
xor
push
jb
push
jnp
xchg
mov
or
jge
pop
or
jmp
imul
and
aam
leave
pop
xlat
ret
push
cmp
sbb
mov
jecxz
scas
in
(bad)
adc
mov
dec
push
outs
inc
shr
jle
push
stc
test
mov
add
leave
and
and
(bad)
sub
test
xor
loop
pop
inc
pop
inc
mov
sar
shl
stos
ds
fcom
jmp
push
or
movsx
retf
lods
jnp
push
xchg
xchg
mov
and
pop
int3
sbb
sub
xor
fist
add
data16
and
sar
stos
stos
fs
ds
cdq
add
or
mov
add
je
mov
push
sbb
or
dec
pop
test
mov
or
or
adc
push
pop
(bad)
js
push
mov
int
cmps
clc
mov
cmc
xchg
and
jmp
jo
inc
(bad)
lahf
jmp
dec
mov
(bad)
adc
fs
(bad)
pop
movs
inc
cmp
mov
scas
ds
inc
loopne
add
and
jp
hlt
cli
popf
lea
sub
dec
pop
(bad)
call
push
pusha
add
fnstcw
jmp
mov
pusha
(bad)
std
jae
xor
hlt
lods
inc
xchg
add
adc
ffreep
sbb
cmp
fs
mov
or
push
imul
xor
jnp
fldenv
(bad)
popf
inc
imul
ficom
lods
mov
ds
xor
into
int
mov
jne
xor
push
push
inc
add
imul
sbb
sar
add
(bad)
call
mov
push
ret
(bad)
loopne
shl
test
xor
mov
pop
xchg
cmp
jbe
imul
mov
xchg
pushf
cmp
repnz
and
pushf
mul
gs
xor
inc
loope
push
icebp
pop
and
iret
das
ss
and
dec
add
push
sbb
ins
lds
xor
or
lods
outs
cli
call
ins
dec
pushf
int3
cmp
lods
and
popf
push
call
dec
inc
jle
jmp
mov
mov
ja
adc
fldenv
stos
call
cmp
mov
xchg
in
jecxz
retf
hlt
xor
popa
(bad)
pop
sbb
mov
(bad)
retf
jle
fidiv
and
lods
add
lods
adc
inc
xor
push
scas
addr16
and
jae
es
cmc
div
gs
pop
sbb
xchg
sub
xlat
int
jns
or
dec
inc
mov
dec
jnp
ja
repnz
xor
iret
sbb
xor
fldenv
adc
ret
in
inc
movs
movs
or
pop
inc
shl
xor
fsub
or
jge
xchg
mov
rep
mov
xchg
inc
int
stc
and
loopne
bound
mov
in
inc
mov
test
cdq
scas
cmp
push
xlat
ficomp
(bad)
dec
loop
outs
idiv
ds
sub
sub
loop
mov
nop
sti
iret
mov
mov
or
and
outs
inc
inc
xchg
push
jbe
ja
test
ja
fwait
sti
(bad)
stos
lea
div
cmc
mov
les
(bad)
jno
shr
iret
inc
xor
jnp
jnp
shl
dec
hlt
inc
pop
lahf
pop
mov
nop
in
pop
sbb
adc
cs
fsub
pushf
pop
shr
dec
jle
push
loopne
add
mov
and
in
rcr
sub
scas
mov
les
xchg
fwait
inc
and
mov
lods
xchg
push
repnz
sbb
xlat
xor
test
add
repnz
xor
cmp
jg
mov
push
out
mov
sti
xor
pop
(bad)
and
pop
lock
cmp
sub
lods
stos
dec
sub
cld
push
hlt
xchg
pop
inc
retf
sti
xor
gs
in
jmp
xor
cmp
movs
ror
mov
pop
xchg
mov
add
xchg
push
mov
out
mov
sub
jbe
mov
loop
shl
inc
ss
mov
mov
pop
xchg
pop
cmp
in
repz
xchg
imul
out
sbb
jg
xchg
xchg
das
mov
push
cmp
jae
mov
push
call
jge
int3
pop
xchg
xchg
cmps
dec
das
cwde
pusha
pop
bound
sub
stc
adc
jne
pop
loop
es
adc
jo
xchg
call
in
enter
sub
loope
stos
adc
rcr
adc
xchg
adc
push
ins
mov
ficomp
out
pop
test
dec
push
bound
mov
sbb
cmp
push
mov
les
adc
ins
inc
pop
fist
loope
lock
cmc
ret
das
mov
test
cmps
shr
jno
or
test
fwait
mov
sbb
sub
fisub
add
mov
inc
sbb
jo
add
xor
lods
mov
test
mov
popf
add
mov
imul
mov
nop
add
mov
adc
mov
popa
imul
in
or
inc
das
push
jmp
xchg
(bad)
popa
dec
add
(bad)
in
mov
mov
adc
mov
mov
xor
cmp
mov
push
jb
mov
fisub
xor
nop
mov
ds
mov
jnp
mov
iret
jbe
in
rol
inc
mov
add
dec
es
and
and
dec
push
in
jmp
inc
ds
imul
or
push
push
cmp
mov
(bad)
fcmovnb
test
push
jmp
call
ret
push
jp
jp
rcr
test
call
mov
into
clc
xchg
sub
aad
mov
xchg
leave
das
dec
pusha
mov
or
mov
pop
jp
and
cmps
stc
lods
out
pop
push
ror
xor
popf
fld
int3
or
(bad)
xor
mov
push
sub
cld
ret
call
mov
and
shr
ror
aaa
rcl
ja
xlat
cmp
ins
or
adc
sub
sahf
arpl
jne
sub
movs
sar
cmps
inc
fwait
sar
out
stos
(bad)
add
stc
movs
in
pop
gs
pushf
gs
cmp
and
std
dec
jo
xor
mov
stc
sub
dec
or
aam
(bad)
sti
fisttp
sub
sub
push
jnp
add
inc
or
mov
aas
add
cli
loop
or
jae
cld
jbe
lds
push
(bad)
jo
lods
jle
sub
dec
mov
call
fcmovnb
adc
lahf
xor
movs
fucomip
cmp
sub
dec
cli
adc
dec
dec
pusha
xor
lock
movs
sar
xlat
sbb
pushf
sahf
mul
adc
add
sbb
jge
cmc
imul
test
xchg
or
cld
xor
out
sub
std
xchg
shr
sub
sub
stos
(bad)
jl
pop
adc
mov
(bad)
sbb
aas
or
and
pop
pop
and
jmp
(bad)
jns
or
sbb
mov
icebp
inc
loopne
jg
js
push
mov
push
je
stos
test
ret
xor
xchg
adc
mov
cwde
es
retf
stos
sub
out
pop
mov
pop
push
ret
call
jecxz
ds
ds
imul
icebp
sbb
and
xchg
hlt
pop
in
add
scas
cmp
mov
inc
sub
into
xor
pop
mov
push
xchg
cmp
repnz
fsub
push
inc
imul
and
sbb
fdivr
sub
out
or
pop
out
add
and
cmp
in
jbe
xor
sbb
and
pop
cmp
arpl
mov
jmp
mov
jb
mov
data16
push
xor
xchg
mov
ja
rcl
mov
into
popa
jno
scas
pop
data16
scas
push
jae
shl
sub
push
loopne
mov
jae
gs
sahf
mov
jns
jno
pop
inc
mov
and
mov
jmp
mov
push
popf
add
shl
sbb
loope
(bad)
fdivr
mov
or
(bad)
sbb
push
jg
mov
mov
add
icebp
and
and
stc
mov
test
mov
ins
loop
fcom
out
je
sub
xor
add
ret
mov
popf
data16
popf
stos
imul
mov
dec
adc
mov
nop
pop
nop
push
sar
in
popa
(bad)
sub
mov
out
repz
inc
(bad)
daa
jmp
test
shl
pop
cmc
xchg
xchg
lea
or
pop
enter
push
fcom
retf
fist
mov
push
psubd
adc
add
mov
punpckldq
push
out
or
push
mov
pop
pop
jle
int
out
push
outs
iret
dec
cmp
mov
addr16
retf
or
lock
(bad)
shr
test
mov
jo
mov
(bad)
mul
sbb
out
arpl
sub
sbb
idiv
imul
cmp
ins
push
sub
inc
sti
int3
gs
stc
icebp
es
xor
or
aas
lahf
mov
sti
jl
lock
jge
jae
jg
inc
or
and
jle
xchg
add
xor
mov
cmps
cmp
outs
fcom
adc
mov
cmp
iret
xchg
jmp
hlt
and
jle
arpl
mov
push
pop
lock
add
repnz
int
imul
cmp
push
jns
xlat
or
ins
std
in
add
scas
xchg
dec
xchg
mov
cmp
rol
mov
fs
icebp
jno
loop
lods
sbb
out
out
gs
test
push
and
jmp
sub
shl
(bad)
cmp
adc
es
shr
dec
ds
or
iret
jp
aad
push
data16
cmp
aas
adc
inc
arpl
mov
mov
movs
pop
sub
in
cmp
dec
(bad)
cmp
push
stos
in
cmp
sbb
mov
sbb
mov
sub
arpl
ss
mov
lock
dec
std
loop
push
cmps
xchg
sub
sub
push
sub
mov
inc
(bad)
sub
or
push
xchg
cmps
je
or
repz
std
mov
rol
dec
cld
or
js
xchg
out
inc
jl
fs
in
loop
aas
call
mov
daa
pop
cmc
(bad)
xor
mov
mov
mov
xchg
push
jmp
lds
fist
test
outs
adc
pop
add
mov
xchg
or
push
jo
outs
push
xor
sub
(bad)
lahf
lahf
idiv
mov
sub
call
call
mov
lahf
rcl
data16
fcom
add
mov
mov
stc
push
cmps
mov
pop
cdq
cmp
push
shr
es
(bad)
call
adc
pop
call
retf
pop
ss
xlat
mov
sub
lock
jmp
mov
loop
mov
or
sbb
gs
cld
(bad)
lods
test
xchg
popf
in
jmp
icebp
ror
or
movmskps
dec
dec
shl
mov
(bad)
add
fs
sbb
pushf
pop
in
mov
pop
(bad)
mov
aaa
hlt
xchg
jmp
repz
push
(bad)
in
and
dec
aam
jge
les
in
es
sub
ficom
leave
and
and
and
mov
dec
xchg
fbstp
jbe
dec
add
and
fisttp
mov
add
and
dec
fucomp
push
in
outs
pushf
movs
or
pop
imul
cdq
es
pushf
aad
into
aad
in
xchg
mov
retf
cmp
mov
mov
inc
mov
cmp
out
ret
imul
lods
jl
das
cmp
push
cmp
xchg
dec
inc
mov
cmp
out
(bad)
hlt
rol
xor
sbb
aaa
xchg
jmp
je
call
cmp
push
int
int3
mov
pop
sahf
sbb
popf
sub
cld
scas
inc
dec
jmp
sti
mov
mov
push
test
pop
shl
pop
pop
mov
xor
aaa
lods
fdiv
mov
jbe
es
fistp
or
mov
stc
cmc
adc
push
push
xor
dec
xchg
mov
fistp
push
sbb
(bad)
repnz
ja
xchg
ja
and
xlat
repnz
nop
ficom
dec
inc
push
xchg
push
dec
pop
mov
jbe
xor
hlt
xor
icebp
jno
ins
push
in
xchg
mov
mov
push
std
pop
idiv
out
es
pop
loopne
movs
jmp
sub
push
dec
dec
arpl
cwde
bound
jle
cli
mov
in
loopne
ins
stos
sbb
arpl
das
mov
rcl
sahf
sti
int
sbb
mov
sbb
not
mov
call
dec
dec
fwait
stos
add
push
(bad)
and
inc
stos
jmp
mov
repnz
jecxz
jecxz
sub
pop
cmp
std
rcr
mov
call
test
mov
cmp
pop
mov
sub
mov
add
fstp
pop
(bad)
mov
pop
push
jle
push
clc
adc
dec
push
call
jno
or
mov
popf
or
jae
mov
inc
add
rol
pop
call
dec
jno
cmps
dec
sub
mov
pop
sbb
enter
imul
xor
or
mov
mov
dec
ret
into
outs
clc
sub
test
jg
dec
(bad)
xor
das
daa
sbb
xchg
or
pop
fs
or
rcl
test
pop
int
pop
(bad)
je
aaa
call
mov
adc
xor
pop
in
pop
js
inc
outs
das
ret
lock
in
enter
mov
jle
adc
lods
cmp
loope
jb
mov
mov
xor
dec
adc
fstp
mov
push
test
inc
imul
aad
push
add
or
dec
xchg
add
adc
inc
add
je
fsubr
aaa
sub
int3
mov
add
sahf
dec
fiadd
inc
adc
mov
leave
or
ret
aas
popa
mov
das
pop
lea
jbe
sub
mov
popa
fdiv
dec
es
sar
mov
jns
into
jge
mov
push
push
xchg
pop
cmc
mov
nop
push
mov
sbb
push
xor
imul
sbb
sbb
bound
retf
enter
mov
test
aad
lea
out
mov
xchg
outs
(bad)
in
(bad)
scas
lods
sub
pushf
call
lods
mov
inc
xor
clc
(bad)
fwait
dec
pop
enter
add
loope
icebp
pop
call
mov
jbe
test
jmp
outs
loope
out
fcom
mov
ret
scas
dec
cmp
sbb
jmp
xchg
inc
int
scas
outs
or
jge
cwde
bound
xor
enter
mov
mov
js
xchg
bound
cmp
push
(bad)
jp
mov
hlt
add
pusha
leave
outs
lds
das
mov
scas
(bad)
cmp
push
push
out
push
enter
inc
inc
arpl
in
cdq
je
add
test
loope
lods
outs
or
inc
call
xor
add
push
push
and
iret
out
jp
std
cld
lods
mov
xchg
push
clc
in
aam
test
stos
sbb
stos
je
sahf
or
xchg
loopne
jnp
mov
das
xchg
push
mov
dec
inc
xor
adc
sub
call
shl
fxch
xchg
cmps
mov
xor
out
rcl
mov
popa
push
mov
inc
rcr
jns
fsub
out
push
nop
(bad)
mov
and
xchg
push
push
test
ror
jl
scas
jp
das
lea
or
mov
test
int3
pop
(bad)
daa
cmc
or
mov
(bad)
loope
mov
xchg
mov
push
in
(bad)
bound
mov
cmps
stos
sar
cmp
sub
ins
sbb
xchg
ror
gs
mov
sub
inc
add
xor
dec
jb
shl
pop
add
jo
ja
xchg
jle
adc
std
data16
mov
sbb
lods
jne
cmps
gs
push
mov
in
dec
scas
test
fmul
fmul
test
(bad)
mov
jge
cmp
stos
stc
rcl
movs
pop
xor
cmp
mov
and
(bad)
shl
shl
mov
sub
pop
loope
push
mov
(bad)
lock
sbb
fild
add
xchg
ret
cmp
mov
pushf
sar
xchg
push
pop
xchg
mov
dec
xor
pop
test
clc
lock
pusha
xchg
(bad)
enter
mov
rcl
push
daa
fs
sub
sbb
sub
in
leave
(bad)
call
add
pop
out
aas
fsub
fimul
icebp
xor
xchg
mov
push
sbb
sbb
xor
icebp
aaa
das
mov
jae
nop
mov
mov
jge
mov
xchg
xlat
inc
cmp
clc
mov
push
dec
xchg
pop
sbb
shr
pcmpgtd
sahf
push
inc
mov
loop
push
cwde
loope
adc
dec
fs
or
scas
add
mov
add
mov
leave
stos
hlt
dec
iret
test
mov
cmp
aad
cwde
mov
mov
ins
sbb
aas
jb
inc
enter
fwait
rcl
out
repnz
push
and
hlt
ds
xchg
or
cwde
xchg
mov
inc
pop
sub
in
mov
dec
push
js
jns
loopne
lods
mov
(bad)
movnti
jge
jo
dec
js
fstp
jo
scas
cmc
and
fwait
stos
add
add
add
mov
inc
mov
and
das
mov
mov
clc
cmp
popa
(bad)
cli
daa
xor
pop
aam
push
sbb
and
(bad)
repnz
int3
lahf
push
repz
sbb
add
push
repz
out
imul
xor
xchg
xor
dec
mov
sbb
and
cmps
ror
xchg
dec
ds
jmp
add
or
adc
inc
int3
mov
out
dec
test
push
xor
pop
ins
in
adc
shl
dec
clc
xor
sub
data16
adc
cmps
ret
clc
and
mov
mov
cmp
stc
loope
or
aaa
retf
jmp
mov
push
xlat
adc
lds
lahf
jne
outs
outs
push
cs
fstp
repz
mov
jae
add
inc
scas
dec
jmp
push
xchg
scas
(bad)
cli
hlt
fldenv
sbb
xor
pop
jmp
inc
sbb
jge
repnz
mov
loope
outs
lock
sub
sub
scas
fxch
lds
sub
mov
add
jge
pop
pop
jnp
dec
mov
xor
rol
sub
out
cs
repz
or
or
sub
cmp
fiadd
mov
fwait
shl
imul
and
mov
push
je
ror
test
outs
clc
adc
inc
xor
out
mov
out
add
out
in
out
sbb
cmp
nop
arpl
jle
das
mov
push
xor
sbb
mov
sub
push
pop
mov
dec
dec
mov
sbb
mov
sbb
imul
int3
sub
mov
(bad)
add
scas
not
xor
imul
ins
cmp
add
shl
sbb
jp
std
pop
push
mov
cmp
xlat
aad
jns
adc
push
mov
cmp
or
mov
jmp
test
imul
sub
cmp
jmp
std
xor
sbb
dec
repnz
mov
add
add
loope
xchg
(bad)
cld
in
cld
fistp
or
mov
ficomp
mov
xchg
xor
add
xor
aas
cmps
sbb
push
dec
mov
je
(bad)
rol
jns
mov
dec
mov
test
cmp
jmp
mov
sub
push
adc
retf
imul
mov
shl
adc
or
mov
iret
xor
mov
jo
pop
js
push
fadd
cmps
retf
or
shl
repnz
shr
mov
adc
ds
pop
inc
xlat
push
xchg
mov
neg
push
iret
retf
sub
push
lods
adc
jo
mov
xchg
outs
jno
cmc
lds
lods
mov
sub
xlat
add
cld
jge
jmp
sub
push
or
mov
xchg
mov
xchg
xchg
pop
(bad)
mov
push
call
mov
bound
in
fisttp
and
fs
(bad)
in
add
pop
jne
cs
pinsrw
mov
ds
ss
push
repz
sbb
cmp
arpl
test
fldenv
call
data16
hlt
mov
and
push
adc
xor
cmp
and
cmp
push
sub
inc
dec
or
dec
cmp
bound
sub
cmc
sub
in
sbb
fsub
inc
and
fmulp
dec
gs
shl
sahf
sub
jno
fmulp
cli
ret
jecxz
adc
sbb
stos
hlt
dec
cmp
mov
sub
mov
inc
hlt
mov
mov
lea
stos
loop
sbb
nop
addr16
packuswb
jg
imul
pop
pop
enter
dec
dec
lds
imul
dec
adc
(bad)
adc
mov
popa
adc
movs
cld
std
jmp
xor
pop
jno
pop
sbb
dec
into
sub
xor
ds
xchg
loopne
aaa
jl
push
mov
cwde
loop
arpl
ror
jnp
sub
imul
aas
fldenv
pop
push
and
mov
add
ss
sub
xchg
jbe
or
mul
xor
dec
inc
ficom
or
lods
push
test
and
rep
ffreep
jmp
(bad)
cmps
xchg
jmp
stos
xor
(bad)
fisttp
cmp
pop
pusha
dec
rcl
into
fwait
cmp
sbb
cmp
or
push
movs
call
neg
sbb
jle
mov
shl
ret
xchg
(bad)
jge
ret
es
das
sub
scas
cwde
js
pop
mov
jbe
cmps
mov
cmp
mov
leave
push
mov
sub
xchg
jno
in
pop
mov
in
xor
mov
adc
cli
cmp
in
xor
inc
jo
retf
cmp
jge
mov
pop
cmps
dec
jl
push
(bad)
out
mov
xchg
dec
push
mov
sahf
push
gs
(bad)
out
xor
dec
sbb
arpl
and
xchg
jae
inc
cmp
loopne
dec
sbb
lock
cs
loopne
jb
in
jb
push
push
xchg
pop
sub
addr16
dec
pop
mov
retf
test
and
int3
mov
cmp
out
push
mov
pop
add
adc
fstp
cld
data16
ret
mov
xor
test
mov
gs
out
pusha
fwait
dec
enter
add
rcr
or
rcr
ds
add
clc
out
adc
cmps
jmp
add
and
clc
add
idiv
enter
loopne
lahf
lea
add
je
fmul
sbb
fild
fxch
(bad)
out
(bad)
jbe
and
scas
fsub
nop
test
xor
frstor
out
jns
pop
test
(bad)
(bad)
push
adc
sub
add
jae
fimul
inc
sbb
pop
pavgw
enter
ins
xchg
les
sbb
test
loopne
addr16
lds
les
cmp
sbb
dec
sbb
stc
(bad)
push
cmp
adc
lds
xlat
dec
and
cmp
mov
xor
punpckhwd
scas
hlt
push
adc
push
mov
dec
xlat
or
stc
mov
sub
xor
cmp
sbb
into
data16
mov
push
xor
popf
(bad)
jge
imul
add
adc
or
pop
scas
add
aas
lods
retf
xchg
mov
in
inc
jmp
jnp
push
lea
daa
and
loop
jmp
(bad)
mov
test
xchg
mov
lea
dec
out
ret
out
mov
jnp
pop
pop
sbb
mov
pop
push
xor
xlat
sub
ret
mov
pop
imul
into
sbb
int
xchg
jmp
xchg
lods
loopne
ror
jl
xor
fnsave
and
xchg
jp
shl
nop
je
inc
jo
daa
cmp
(bad)
scas
xchg
shr
jle
(bad)
cmc
mov
and
cs
imul
mov
mov
push
in
mov
test
scas
mov
sbb
jbe
div
mov
xor
cwde
cmp
mov
test
xor
add
xchg
cdq
xor
(bad)
xor
xor
lea
icebp
daa
(bad)
push
retf
push
fsub
push
inc
mov
xor
out
push
pusha
cmps
stos
in
xchg
sub
push
fsubr
pushf
ret
jbe
in
cmc
add
mov
jns
xchg
sub
pop
loopne
and
out
popa
add
xchg
push
mov
add
mov
aas
enter
inc
pusha
jg
inc
inc
mov
mov
cwde
inc
out
jge
mov
sbb
mov
mov
adc
retf
xor
mov
mov
repz
retf
sbb
inc
xchg
ins
shl
jmp
push
dec
arpl
mov
ins
das
(bad)
jnp
jbe
je
repnz
lock
retf
cdq
dec
inc
(bad)
jle
fs
sub
push
movs
pushf
lods
(bad)
push
mov
loop
stc
retf
mov
jl
pop
fwait
xor
icebp
push
inc
mov
neg
shl
cmps
ja
not
jne
jno
stos
mov
adc
(bad)
sbb
out
cmps
sub
hlt
inc
and
xchg
fsubr
fwait
ins
mov
jp
ja
ja
push
cli
ja
mov
push
adc
aam
addr16
add
push
push
movs
adc
jne
jg
xor
mov
fcomp
jge
fcomp
test
fldcw
or
cld
and
inc
(bad)
retf
dec
nop
ins
cwde
or
das
mov
popf
pop
or
mov
mov
and
(bad)
das
push
mov
pop
mov
push
mov
out
movs
push
movs
sbb
and
loope
push
xlat
scas
test
push
popa
cld
mov
sub
int
or
xchg
clc
or
gs
jb
div
mov
shr
std
ret
outs
call
mov
mov
out
mov
push
adc
add
sub
pusha
jle
(bad)
fsub
cli
or
jl
lods
scas
push
stos
and
in
adc
es
cwde
xor
sbb
mov
leave
mov
mov
jnp
fld
lea
mov
pop
add
cmps
pop
inc
outs
mov
sbb
add
cmp
pop
ret
jbe
test
jp
mov
mov
push
cmp
lea
or
mov
lods
std
jb
sbb
cwde
icebp
(bad)
scas
mov
cld
mov
sub
push
int
add
add
imul
das
adc
mov
mov
imul
fwait
popf
ja
mov
add
pop
xor
cmp
add
(bad)
je
pop
imul
xchg
dec
lahf
xor
xor
int3
ss
mov
call
add
mov
adc
sub
jecxz
mov
icebp
pushf
jns
push
out
stos
sub
(bad)
mov
jae
sbb
pop
inc
loope
fstp
cdq
xchg
in
pop
jnp
sub
mov
cmp
sbb
inc
jle
jecxz
xor
or
jl
xlat
mov
xlat
js
imul
jmp
jge
sbb
cmps
mov
xor
repnz
add
add
add
in
jo
push
bound
es
jmp
xchg
cli
push
test
add
pop
jo
push
push
movs
in
inc
ins
push
mov
aam
ret
ror
jns
push
data16
ja
push
dec
fstp
mov
ins
dec
(bad)
dec
add
xor
addr16
pop
dec
mov
(bad)
jmp
xchg
in
mov
daa
mov
outs
cs
cmps
sub
es
inc
xor
scas
cmp
or
into
iret
jo
mov
push
dec
ss
or
cwde
pop
into
add
cwde
sub
pop
ds
out
icebp
mov
fisubr
icebp
rcr
iret
sbb
push
fwait
mov
enter
test
mov
shl
or
mov
mov
and
outs
xchg
dec
in
into
(bad)
mov
dec
pop
adc
out
outs
mov
test
xchg
leave
sbb
jge
imul
xchg
fidivr
fs
mov
popa
call
and
dec
jle
out
repnz
xor
sub
mov
xor
rcl
fwait
adc
or
into
push
inc
xor
cmps
mov
js
daa
lahf
inc
ds
and
adc
nop
retf
jbe
push
xor
fisubr
ss
loopne
lods
pop
pusha
push
test
jmp
gs
sbb
dec
dec
jge
lds
push
mov
stc
es
mov
xchg
daa
xor
mov
xchg
inc
xor
fidivr
imul
arpl
xchg
sti
cmp
pop
cmc
int3
or
pop
out
add
xchg
inc
xchg
(bad)
aaa
pop
push
or
push
ja
ss
sub
or
mov
pop
add
push
adc
repnz
adc
(bad)
out
retf
add
pusha
add
sub
xlat
das
and
cmp
add
pop
mov
mov
mov
call
adc
xor
ss
mov
shl
mov
out
and
test
popf
fwait
mov
cld
sbb
shl
xchg
shl
sti
cwde
xor
push
or
adc
sti
xchg
inc
(bad)
cmp
push
sar
sahf
stc
and
in
dec
imul
std
jno
dec
ins
popf
and
push
cmp
fst
std
fnstcw
push
call
nop
pusha
sbb
das
inc
inc
mov
push
adc
mov
scas
xor
div
push
js
scas
jb
mov
dec
rcl
xchg
cld
fsubr
add
je
ret
xchg
jl
loope
add
js
sahf
lds
std
(bad)
pop
es
js
int3
hlt
pop
aam
mov
push
pop
mov
push
out
loop
mov
pushf
or
jb
ret
fiadd
push
stc
call
leave
mov
jge
mov
pop
push
lds
or
imul
dec
xchg
cmp
mov
add
imul
dec
cdq
scas
pop
xchg
sar
or
sbb
fbld
leave
scas
fild
sub
jle
outs
jae
adc
in
(bad)
leave
sub
xchg
fidivr
cmps
ror
mov
pop
mov
lods
or
in
fst
inc
xor
sub
dec
sbb
push
and
cld
jp
sub
mov
cmp
fld
imul
inc
mov
mov
mov
sbb
dec
xchg
out
in
xor
xchg
pop
inc
(bad)
fneni(8087
inc
loope
mov
cmp
cli
enter
inc
sbb
in
mov
dec
and
call
test
push
push
outs
aaa
pop
mov
rcr
inc
stos
int3
adc
lds
sbb
gs
mov
clc
cmp
lods
movs
punpckhdq
fsubr
jno
xchg
ja
enter
sub
(bad)
push
add
inc
sti
loop
sbb
adc
push
mov
mov
loop
add
sbb
sbb
cmc
dec
push
sub
scas
push
cs
aad
out
mov
or
mov
mov
add
(bad)
cwde
mov
mov
and
stos
dec
or
adc
call
and
add
xchg
sbb
mov
rol
aam
jp
shl
leave
fs
or
jmp
fcomp
mov
or
fldcw
cdq
push
dec
mov
pop
je
jle
xor
icebp
rcl
mov
pushf
dec
jmp
call
mov
and
das
mov
jl
adc
xchg
test
fsubp
mov
sub
xor
sbb
and
xchg
pcmpeqd
popf
inc
inc
push
xor
dec
xchg
sub
adc
rcl
jecxz
push
mov
push
sbb
dec
data16
mov
push
fisubr
adc
and
ja
push
ss
xor
add
dec
imul
je
(bad)
das
push
cli
dec
int3
xcrypt-ofb
cmps
das
push
stos
adc
cmp
mov
loop
test
popa
xchg
fstp
addr16
dec
and
mov
lahf
pop
pop
movs
add
push
and
popf
lea
xor
fwait
inc
rcl
xor
mov
pop
fcomi
and
(bad)
inc
mov
jg
add
popa
fcomip
iret
ins
scas
cdq
es
jle
mov
and
mov
rcr
mov
pop
mov
push
movs
jo
loope
rcl
or
dec
dec
jne
jno
dec
test
xor
mov
cmp
bound
js
popf
fsub
push
adc
test
dec
add
jne
xchg
hlt
hlt
pop
or
dec
ds
(bad)
xor
xor
xchg
pop
add
cmc
dec
int3
movs
pop
jno
enter
and
aam
cli
and
jge
sub
mov
pusha
mov
test
jecxz
jne
mov
sbb
xlat
es
bound
push
push
pop
(bad)
cmp
je
lods
xchg
(bad)
icebp
fadd
xor
xlat
push
movs
repz
sub
jmp
mov
add
adc
into
cmp
sub
pop
adc
(bad)
hlt
pop
xchg
div
add
and
ret
sub
jns
sbb
push
or
jns
and
bound
xchg
mov
sti
and
cmc
xchg
fdivr
pop
shl
loopne
scas
out
(bad)
fwait
jg
(bad)
in
mov
test
mov
fcmovnb
xchg
inc
xor
stos
mov
ror
(bad)
jp
aad
sub
es
dec
push
or
mov
mov
aam
adc
lds
mov
call
(bad)
and
cld
mov
mov
inc
or
xchg
adc
sbb
cmp
adc
mov
dec
inc
adc
test
stc
fs
mov
cmps
rol
pusha
pusha
scas
adc
or
push
jmp
add
test
push
aas
push
inc
aas
mov
sub
pop
pushf
nop
bnd
sbb
mov
jge
hlt
call
jl
loope
int
sub
pushf
dec
cmc
pushf
int3
cmps
loope
and
aas
sub
repz
jbe
mov
sar
sti
movs
dec
pop
scas
int3
sub
bound
dec
enter
xor
cdq
lods
adc
out
jne
sub
pop
mov
inc
test
cwde
in
shl
push
in
sub
jecxz
leave
call
idiv
push
loopne
xor
shl
adc
cli
push
push
sbb
push
sub
icebp
(bad)
fiadd
loope
xchg
sbb
aam
mov
(bad)
out
pop
lahf
or
add
stos
inc
(bad)
sbb
imul
push
mov
pop
in
pop
(bad)
ds
pusha
js
adc
mov
cmp
xchg
jns
xchg
push
jb
daa
cmps
leave
nop
ret
scas
adc
inc
jl
push
and
sbb
test
adc
sti
movs
sub
jle
lahf
pushf
ds
mov
cs
push
ror
mov
ret
test
or
inc
xor
ja
and
cmps
push
cwde
xchg
push
dec
mov
jecxz
aaa
scas
sub
dec
aaa
out
jmp
loopne
jp
pusha
xlat
adc
fs
jmp
test
add
push
push
push
and
stos
cmps
inc
(bad)
pushf
or
jmp
jbe
in
cs
jo
(bad)
in
dec
inc
mov
mov
mov
push
xor
iret
loope
aam
rol
push
movs
jle
mov
jle
scas
pop
add
mov
sub
pusha
jae
jno
mov
cs
jp
sbb
je
nop
jge
cmovle
lea
push
repnz
mov
enter
hlt
popf
xchg
or
push
xor
cmp
rcl
lahf
mov
shl
cmc
mov
or
popa
test
cld
test
mov
pop
sub
les
dec
call
sbb
push
inc
mov
pop
mov
pop
loope
jmp
xchg
fnstsw
(bad)
icebp
shl
ret
scas
cld
cmp
in
jne
mov
or
xor
jae
pop
and
jg
cmp
data16
in
push
push
jmp
test
xchg
popa
cld
sar
int3
mov
jle
cmp
add
in
dec
fwait
adc
or
movs
adc
gs
test
add
xchg
mov
jecxz
imul
mov
or
sbb
ror
js
or
inc
js
jae
xchg
daa
jno
addr16
shr
icebp
push
hlt
repnz
outs
inc
or
xchg
xor
repz
mov
jl
inc
push
call
and
ror
dec
sub
out
xchg
mov
idiv
movs
jbe
imul
aam
pusha
out
rcr
push
cmp
cmp
cld
sahf
mov
and
and
popa
cmp
jecxz
pop
inc
mov
jno
test
ja
hlt
xor
fld
mov
test
mov
xchg
xchg
inc
push
mov
push
xor
cmc
leave
xor
push
adc
mov
lock
dec
push
(bad)
out
and
je
inc
dec
(bad)
push
(bad)
and
in
or
(bad)
lds
mov
jnp
(bad)
sti
cmp
cwde
cmps
pop
fs
hlt
jno
ins
shl
call
inc
loopne
lds
arpl
push
inc
test
mov
inc
push
jne
inc
add
cs
xchg
mov
popf
push
fwait
dec
sbb
arpl
jnp
cmps
dec
cdq
add
icebp
ins
mov
jnp
adc
push
or
out
jae
add
dec
out
xchg
xchg
mov
push
sub
aam
(bad)
div
fld
pop
add
div
xor
adc
mov
mov
push
pop
ret
or
add
in
fadd
ins
(bad)
fiadd
cmp
mov
jg
fidivr
mov
sub
aaa
aad
test
cmp
in
sub
hlt
dec
repz
test
fs
pop
arpl
retf
xchg
cdq
stos
rcr
inc
dec
xchg
cmc
add
loopne
pop
mov
or
loop
mov
add
jmp
push
mov
or
sbb
xor
jo
cs
ss
lods
xchg
xchg
mov
repz
jns
ja
mov
pop
jecxz
loope
inc
mov
push
ffreep
inc
jmp
mov
test
mov
jae
mov
mov
cwde
dec
sar
add
jge
loopne
cmp
sar
dec
xor
and
push
gs
jle
push
mov
enter
jmp
lea
ins
hlt
jp
xchg
call
sahf
push
inc
jp
jb
shl
sub
sub
mov
jno
nop
xor
fs
cdq
adc
fsubr
cmps
pop
movs
jg
sub
jbe
or
push
stc
sub
in
imul
fwait
bound
sbb
loop
cli
xchg
ja
xor
into
dec
or
adc
push
jp
ficom
sbb
pushf
jle
mov
test
push
and
mov
inc
lock
push
ss
fbstp
out
sbb
sbb
arpl
xchg
sbb
dec
fsubr
sub
gs
mov
dec
add
pop
and
inc
and
xlat
inc
cmp
mov
mov
lods
rcr
in
mov
inc
push
jg
cmps
jnp
gs
jecxz
outs
sub
cwde
cmp
lds
or
sub
inc
dec
mov
inc
in
pop
mov
sbb
xlat
add
mov
xor
push
(bad)
call
test
arpl
jae
nop
call
mov
and
fs
loopne
in
sub
pusha
(bad)
mov
add
(bad)
hlt
repz
sbb
lock
add
jl
ficomp
icebp
add
mov
xor
add
mov
mov
jbe
sbb
mov
inc
std
sti
adc
xchg
fs
data16
cmp
jge
js
mov
pop
pop
dec
xor
xchg
and
leave
inc
mov
push
cmp
cdq
(bad)
or
sbb
sub
cmp
(bad)
mov
adc
jne
jmp
push
js
pop
stos
sub
std
popa
jg
stos
je
mov
pushf
mov
mov
je
retf
scas
sub
cmc
pop
rcl
sbb
push
out
std
add
and
push
nop
sbb
loope
mov
data16
test
xlat
jle
ja
les
cwde
fsubp
iret
stos
hlt
lods
mov
sub
dec
leave
into
repz
add
and
add
xlat
cmp
push
dec
das
or
scas
sub
xchg
cmp
(bad)
mov
movs
or
push
out
lds
sub
lea
xchg
leave
movs
jnp
sub
imul
dec
out
fiadd
cmp
cwde
les
daa
test
bound
add
and
outs
ins
int
xchg
popf
mov
ins
pop
pop
fnstcw
pop
les
ret
mov
idiv
adc
cmp
mov
inc
call
cmp
icebp
ja
nop
ins
sub
loop
mov
cmp
cmp
dec
or
stc
imul
cmp
xchg
sub
sub
popa
(bad)
adc
jmp
aad
pop
cmp
sbb
inc
mul
ret
add
iret
sbb
add
mov
and
jae
jmp
aam
mul
and
das
clc
ss
loop
mov
jmp
mov
sbb
mov
mov
inc
xor
ins
movs
and
loope
mov
daa
fldcw
inc
rcl
sbb
lods
scas
pushf
sbb
out
rol
mov
adc
mov
sbb
mov
inc
cmc
inc
rcr
out
jno
add
jae
lods
stos
ins
sbb
xchg
mov
loopne
mov
rcl
mov
add
xchg
xchg
es
mov
je
(bad)
xchg
fwait
sbb
pop
pop
aas
add
sub
mov
jmp
cmp
jmp
ja
jge
mov
xor
push
lahf
or
or
pop
jl
xor
mov
bound
mov
in
cmp
jmp
sub
ficom
enter
jo
xchg
lahf
leave
or
dec
ins
xor
push
(bad)
arpl
push
push
(bad)
dec
div
or
std
inc
or
stos
(bad)
jnp
stos
inc
cmp
les
add
lahf
mov
cmp
es
mov
arpl
cs
xchg
ins
sub
xor
pop
loope
jmp
cmc
movs
mov
movs
mov
cmp
jecxz
dec
jo
stos
push
jmp
adc
xor
inc
xchg
ror
xchg
push
aaa
hlt
pop
cld
aaa
je
jg
pop
icebp
xchg
(bad)
(bad)
mov
cdq
scas
fcom
or
test
rol
and
mov
frstor
mov
test
pop
ja
cmps
clc
div
inc
popa
cmc
popa
ror
sbb
shl
add
push
mov
adc
cld
fidiv
cmp
nop
mov
popa
cmp
mov
pop
pop
inc
add
rcl
cmps
mov
loopne
imul
mov
stos
push
jne
fldcw
push
pop
or
leave
lods
bound
adc
in
jp
test
les
fs
jbe
inc
xlat
mov
stos
xor
aam
dec
aad
xlat
xor
mov
cmp
mov
iret
test
idiv
ret
dec
repnz
jp
inc
call
add
dec
daa
into
mov
scas
xor
inc
mov
repnz
mov
mov
jmp
sbb
adc
pop
mov
ret
mov
outs
mov
shl
mov
in
dec
xor
pop
lods
ret
imul
mov
sub
repz
or
inc
adc
adc
and
mov
xchg
test
jo
add
std
or
cmp
mov
test
jae
xchg
xchg
out
and
adc
xor
clc
shl
out
xor
call
adc
cwde
je
mov
lock
jg
mov
push
add
sub
rcl
push
sub
cmp
les
fs
imul
sbb
push
retf
dec
js
and
aam
or
mov
lock
push
out
cmp
mov
aam
or
jl
popf
daa
cmps
mov
pop
int
imul
pop
push
adc
mov
and
sbb
dec
mov
inc
imul
int
add
inc
jle
sti
fcom
imul
add
push
jno
stos
or
shl
dec
loope
mov
sbb
ret
cmps
mov
xchg
ret
jp
std
pop
inc
jmp
idiv
mov
xchg
nop
xor
sub
xchg
mov
adc
or
sbb
sbb
ret
inc
jnp
ret
or
push
sub
test
loopne
dec
retf
xor
gs
mov
pop
jg
pusha
pushf
cmp
push
jl
lahf
fsub
inc
in
repnz
in
add
mov
mov
mov
cmc
cld
stos
add
mov
call
mov
adc
loop
lods
xor
dec
mov
mov
int
push
mov
out
repnz
inc
movs
ins
rol
mov
cli
aam
les
xor
imul
xor
adc
lfs
iret
ins
clc
xchg
push
shr
jb
aad
ret
mov
pop
adc
loopne
cld
loop
cld
leave
movs
hlt
jbe
movs
mov
push
imul
jns
xor
pop
test
mov
test
fist
shl
ja
xchg
jp
aaa
mov
jmp
cmps
xchg
outs
out
mov
jecxz
push
add
leave
pop
imul
dec
pop
ret
inc
iret
xor
cmp
pusha
fdiv
sub
push
shr
push
cmp
js
aaa
popf
push
and
mov
popf
sbb
sti
and
mov
cli
inc
dec
popf
jle
pushf
mov
repnz
shl
sbb
mov
cdq
enter
jmp
mov
mov
xchg
jg
mov
ret
test
or
loop
push
test
inc
jge
fldenv
mov
cld
stos
pushf
jl
out
xchg
shl
mov
popf
addr16
adc
scas
and
sub
mov
xchg
pop
pop
add
outs
fiadd
mov
loopne
jns
mov
je
mov
adc
or
adc
adc
les
sbb
(bad)
test
pop
cmp
daa
inc
adc
in
mov
jmp
jle
xor
jbe
mov
push
cwde
cli
push
fisub
adc
sub
sbb
pop
rcr
das
xor
push
cmp
imul
cs
cmp
popf
jno
push
mov
int
mov
mov
adc
popf
mov
mov
out
or
mov
mov
enter
pop
je
(bad)
out
xchg
push
rcr
pushf
popf
aas
push
mov
and
bound
jge
dec
icebp
sbb
xor
xlat
push
rcl
xor
adc
inc
add
sar
retf
out
push
(bad)
and
shl
mov
bound
arpl
scas
and
xchg
idiv
pop
ret
jmp
xor
push
xchg
sub
mov
test
jne
xlat
mov
cmp
cmc
push
sbb
mov
jg
dec
inc
sub
add
clc
popf
retf
xor
out
sbb
idiv
retf
inc
imul
fcom
push
xchg
push
js
sar
adc
scas
mov
ret
dec
pop
fs
movzx
mov
mov
add
loop
pop
or
(bad)
or
(bad)
pop
pushf
mov
bnd
pushf
xchg
bound
fist
cmp
repnz
mov
push
adc
xchg
popa
adc
xchg
test
clc
lea
movs
xor
mov
imul
pop
xor
pop
push
mov
stos
(bad)
cld
lods
xchg
push
daa
loop
adc
cmp
adc
mov
out
pop
gs
push
sub
dec
push
lahf
jl
das
ret
imul
mov
rcl
cmp
and
mov
ss
outs
mov
xor
loopne
add
fdiv
int3
(bad)
loope
xor
loope
push
pop
dec
cmovo
mov
lea
(bad)
ror
and
bound
fst
fcomp
jno
mov
fs
xor
inc
inc
adc
mov
add
popf
push
imul
sub
mov
sbb
(bad)
sub
(bad)
fnstcw
adc
xor
jnp
rcl
(bad)
mov
cld
xchg
repz
mov
rcr
or
pop
sbb
rcr
mov
movs
outs
hlt
push
fnstcw
sbb
cli
fmul
fsubrp
outs
dec
dec
idiv
xchg
test
je
mov
xchg
clc
(bad)
das
dec
ds
jnp
test
cmp
pop
push
sub
adc
cmp
pusha
cmp
push
(bad)
loop
or
pusha
jno
inc
xor
sbb
xchg
je
mov
arpl
dec
xchg
inc
jmp
push
push
inc
inc
je
or
adc
pop
icebp
(bad)
fadd
sub
lea
movs
popf
xchg
(bad)
lds
loope
jnp
push
push
popa
icebp
or
mov
dec
cmp
div
fwait
scas
cmp
sub
icebp
in
dec
cli
dec
inc
pop
test
cmp
fs
add
add
pop
dec
push
mov
mov
lock
mov
stc
mov
int3
jno
dec
aam
cs
cwde
xchg
and
outs
mov
out
jge
out
mov
pop
je
adc
jb
and
loope
cmps
cs
pop
(bad)
(bad)
jp
inc
xor
pop
inc
popa
push
in
iret
sbb
loopne
xchg
pop
inc
iret
xor
push
push
ret
push
test
pop
sub
test
jae
dec
push
mov
inc
pop
lods
cmc
data16
dec
push
and
dec
lahf
inc
xor
push
xor
icebp
popf
in
xchg
in
jae
jp
mov
test
add
xor
pop
ror
neg
ins
fcom
jne
push
inc
retf
movs
or
scas
cmc
sub
test
stos
ror
push
and
cmp
out
and
ins
adc
adc
js
cmp
icebp
scas
(bad)
cmp
or
loop
cmc
int3
frndint
cmp
dec
ds
jl
lods
and
loopne
push
in
jae
mov
repnz
(bad)
mov
sahf
(bad)
cmc
ins
scas
inc
xor
dec
adc
retf
and
shl
or
sbb
or
bound
aam
ins
ror
imul
fcompp
call
aam
push
mov
mov
xor
(bad)
mov
(bad)
shl
sbb
cwde
cdq
jbe
popf
mov
mov
inc
xchg
in
push
jg
je
and
shr
(bad)
lea
pop
xchg
inc
jnp
phsubd
adc
add
push
jg
xor
mov
aam
inc
sti
add
pusha
mov
(bad)
xor
je
mov
mov
pop
xchg
test
xor
(bad)
push
std
in
loopne
cmp
jl
frstor
cli
jnp
dec
mov
xchg
retf
mov
sbb
mov
out
xor
push
push
std
sahf
(bad)
xchg
aaa
mov
xor
loope
pop
lea
mov
xchg
jmp
sbb
jecxz
jmp
sahf
call
mov
fisttp
dec
add
mov
or
mov
push
pop
dec
mov
pop
inc
jle
or
jo
in
test
cmps
call
dec
push
nop
add
mov
rcr
popa
aad
and
mov
push
sub
ins
and
mov
add
hlt
jmp
jno
mov
xchg
in
inc
fsubr
jbe
sti
sbb
cmps
out
jo
movs
add
ror
xchg
ds
jo
jnp
push
mov
jae
in
mov
or
out
xchg
mov
sub
ins
inc
xchg
mov
mov
sub
aam
ss
jno
mov
dec
jne
mov
loope
xor
push
mov
gs
mov
push
call
mov
or
int
jp
mov
mov
cmc
ins
stc
push
sub
pop
retf
cmps
jmp
dec
arpl
call
fnstcw
(bad)
js
jb
push
je
sub
movs
mov
es
jns
mov
pop
push
js
cmc
add
sar
push
add
dec
mov
mov
mov
pop
sbb
(bad)
out
(bad)
jno
ror
test
dec
outs
mov
or
jbe
sub
stos
inc
push
loop
or
dec
stos
pop
ja
icebp
stos
loopne
and
scas
pop
cld
xchg
sbb
mov
mov
push
movs
add
iret
xor
push
mov
sahf
cmps
(bad)
jo
lods
push
sub
sbb
jg
(bad)
and
sti
mov
fimul
popa
out
xchg
xchg
gs
push
div
mov
cmps
cli
cmps
pushf
sbb
ds
pushf
add
popa
into
and
fstp
stos
pmuludq
cdq
inc
shl
jno
test
jmp
sbb
xchg
pop
mov
iret
icebp
stos
(bad)
push
imul
pop
out
or
lods
mov
mov
fidiv
std
and
mov
push
(bad)
fcom
fisub
add
or
shl
add
inc
sub
sbb
pop
sub
or
(bad)
fild
dec
mov
mov
jno
jnp
pop
in
cwde
add
popa
stos
in
stos
mov
inc
sub
add
jl
loopne
push
mov
xor
aas
aad
push
leave
test
or
xchg
push
data16
add
(bad)
mov
xchg
stc
jmp
std
adc
call
ja
les
rcl
jnp
fidivr
and
scas
or
aas
or
es
xor
fisubr
dec
jecxz
push
xlat
ss
int
pop
push
fistp
and
fidiv
xchg
mov
sbb
mov
dec
in
adc
xor
ror
fld
sti
xchg
int
es
mov
cmps
(bad)
mov
adc
jge
in
iret
mov
jae
mov
xchg
(bad)
lods
lahf
popf
jecxz
test
and
mov
push
adc
les
dec
add
cmc
pop
rcl
fmul
push
adc
into
cld
jp
mov
push
sub
mov
fucom
data16
push
mov
cdq
sbb
adc
and
lahf
sbb
popf
dec
add
jge
std
mov
mov
pop
outs
jns
test
(bad)
test
in
popa
or
lea
inc
mov
adc
cmc
sbb
push
push
shr
mov
ffreep
jnp
leave
or
cmp
jb
adc
pop
mov
add
push
jne
add
sub
rcl
leave
inc
les
jmp
xchg
lock
push
int3
sub
xor
cmps
mov
ja
mov
inc
cmp
push
mov
and
(bad)
(bad)
int
in
adc
test
mov
in
xchg
cmps
pop
push
push
imul
or
dec
cmp
push
int3
sub
arpl
cmp
xchg
pop
out
ret
push
test
xchg
lods
outs
cdq
inc
lds
jp
sub
lock
sub
loope
cs
mov
mov
pusha
enter
sub
pop
xor
test
lods
xchg
xor
add
shl
sub
inc
leave
rcr
icebp
sub
adc
dec
push
lahf
rol
mov
sub
aaa
and
fisub
or
shl
sbb
fwait
dec
ins
movs
push
mov
sub
repnz
and
lods
xor
push
out
inc
dec
mov
shr
out
push
fldcw
ret
(bad)
push
xchg
enter
push
or
xchg
jno
ja
sub
jp
stc
inc
push
retf
sar
cwde
or
pop
or
push
xchg
out
mov
scas
pop
lods
xor
int
out
xlat
push
(bad)
(bad)
es
iret
jbe
icebp
inc
xor
sub
addr16
xchg
push
addr16
outs
push
inc
pop
mov
rol
aad
add
shld
shr
add
fld
fist
int
pop
mov
dec
sahf
xor
arpl
push
outs
pop
add
pop
xor
jbe
in
enter
test
sbb
test
fdivr
push
cmps
mov
in
sbb
loope
and
add
push
sbb
pop
dec
icebp
lock
mov
or
retf
cs
sub
jge
repz
aas
cli
cmp
push
dec
outs
test
adc
and
cmp
fidivr
lock
stos
pop
push
aas
cs
sti
xor
addr16
mov
lods
inc
xchg
jl
retf
ja
mov
mov
in
movs
pop
dec
push
sbb
mov
(bad)
cmps
pop
test
jno
mov
jb
inc
jae
xor
loopne
mov
fwait
daa
mov
adc
fsub
pop
shr
imul
pop
js
mov
xchg
dec
mov
dec
dec
arpl
mov
mov
jnp
arpl
test
mov
fild
mov
outs
mov
sahf
call
(bad)
xor
cs
xor
add
add
adc
jp
cmp
push
nop
mov
jle
enter
xchg
cmp
mov
enter
xchg
lea
mov
jp
repz
inc
clc
mov
push
mov
(bad)
into
leave
or
sbb
mov
push
or
lods
les
mov
enter
std
fs
push
pop
jo
das
jecxz
jae
mov
movs
xor
retf
es
xor
hlt
cmp
fdiv
out
adc
mov
inc
jb
(bad)
cmp
test
mov
adc
loope
mov
scas
pop
mov
mov
push
mov
imul
and
in
dec
xchg
movs
in
fs
mov
div
jb
inc
cs
pop
sbb
cmc
(bad)
int3
fdiv
into
in
dec
in
jb
add
pop
inc
inc
jmp
cmc
add
jmp
pop
dec
or
push
mov
inc
inc
pop
scas
test
cli
lock
xchg
and
rol
out
outs
retf
fwait
test
pop
mov
dec
pop
sub
bound
aad
pop
aam
lock
retf
pop
adc
rcr
fld
inc
push
aam
mov
outs
fs
fnstsw
jnp
pop
(bad)
dec
call
add
pop
aam
pop
add
sub
sbb
inc
inc
shl
sbb
sub
jne
fsubr
and
mov
pop
xchg
adc
repz
ds
fdivr
clc
(bad)
pop
cmp
push
push
(bad)
into
push
add
in
sbb
pop
inc
(bad)
sbb
test
outs
push
mov
les
or
dec
aas
jb
mov
shl
lock
pop
ins
ud0
fs
mov
sbb
mov
bound
fmulp
dec
adc
rol
pop
cmp
imul
or
mov
daa
js
mov
iret
jmp
cmps
fwait
xor
mov
out
and
out
pushf
and
cmp
mov
rep
sti
ret
jmp
retf
dec
test
pop
mov
sub
jmp
push
movs
test
add
xor
pushf
and
add
and
jb
inc
push
(bad)
and
packuswb
dec
xchg
pop
mov
adc
or
fs
popa
xchg
je
inc
mov
nop
data16
push
in
(bad)
push
out
fsubr
jns
stos
call
cmp
sbb
in
add
jge
xchg
xor
inc
sub
pushf
scas
jne
shr
(bad)
pushf
dec
pop
pop
shl
sar
(bad)
mov
shl
xor
(bad)
popa
push
xor
sub
push
mov
ss
jmp
sub
rcr
sub
and
mov
add
xchg
mov
sbb
outs
adc
mov
mov
jo
mov
into
sub
add
dec
dec
jecxz
shl
inc
push
push
lods
scas
scas
sti
cmps
aas
popf
popf
stc
in
sub
jg
add
popa
dec
jmp
and
or
cmp
sbb
in
int
(bad)
mov
(bad)
pop
adc
or
ficomp
or
add
push
jge
pop
scas
mov
add
cmp
not
jmp
jae
inc
cmps
icebp
out
bound
cld
inc
inc
ja
pusha
push
lea
jecxz
inc
(bad)
in
xlat
fsubr
or
and
inc
fdivr
jle
jmp
jne
mov
cmps
int3
cmp
pop
(bad)
test
sti
and
pop
(bad)
push
popa
adc
mov
cmp
sub
push
imul
iret
lahf
dec
add
push
ret
jae
sub
or
mov
stos
pop
mov
jbe
xor
adc
int3
and
sbb
inc
xor
outs
aas
cmp
inc
icebp
mov
mov
loop
int
outs
sahf
inc
push
out
cmp
mov
mov
pop
movs
pop
pop
pop
lods
(bad)
cmps
out
scas
add
sahf
sahf
xchg
sub
jnp
jns
cs
sub
or
loopne
jns
(bad)
sbb
cmp
add
mov
xor
add
pop
jmp
test
jl
push
shl
xlat
out
and
test
add
hlt
mov
xor
stos
and
mov
mov
in
sbb
jge
es
mov
repz
pop
jnp
sub
and
adc
mov
push
jbe
mov
jbe
mov
cmp
mov
or
jle
add
std
aaa
ins
and
add
add
pop
adc
sbb
inc
retf
mov
adc
xchg
pushf
sbb
outs
test
stos
(bad)
(bad)
sbb
fiadd
add
xchg
dec
dec
jo
mov
jmp
dec
aad
xchg
dec
das
fsubr
mov
sub
jb
push
jmp
outs
pusha
jmp
push
cmp
xchg
sub
inc
cmp
stos
je
test
add
add
inc
inc
dec
or
push
neg
movs
pop
xchg
fisub
jae
cmps
dec
sbb
mov
fdivr
add
inc
dec
mov
retf
mov
test
jmp
cmp
fsubrp
xchg
push
dec
sbb
adc
mul
ds
inc
add
and
das
hlt
in
or
int3
push
mov
inc
and
std
pusha
or
(bad)
mov
popa
pop
adc
bound
pop
gs
ret
cmps
pminsw
fisubr
cmp
sbb
push
mov
rcl
dec
jge
pop
cmp
(bad)
lock
(bad)
(bad)
fdiv
ror
jl
ds
sub
and
sbb
pushf
rcr
xor
mov
mov
adc
addr16
mov
pop
mov
(bad)
stos
sahf
rol
push
mov
or
popf
jg
retf
push
lahf
add
dec
dec
fst
mov
inc
mov
lods
or
xor
leave
daa
jg
sti
pop
cld
dec
or
mov
mov
mov
jle
add
scas
(bad)
cmp
in
mov
lds
mov
xor
scas
cmps
shr
lods
cmps
cmp
push
stos
cmp
outs
adc
les
js
push
out
cmc
lods
xchg
jmp
jb
pop
or
popa
or
(bad)
jp
(bad)
retf
and
fisubr
add
cli
je
and
push
cwde
clc
cld
mov
inc
and
mov
lock
js
movs
or
dec
sub
mov
jmp
xor
(bad)
stos
or
xchg
cmps
jne
push
xchg
ror
arpl
ins
in
cs
cmp
pop
xchg
das
add
fild
test
rcr
xchg
sub
jg
sbb
sub
in
cmp
ins
inc
(bad)
sub
xor
add
(bad)
in
cmp
mov
popa
jp
icebp
xchg
xlat
mov
hlt
mov
jp
aam
fldcw
dec
sub
mov
les
imul
fadd
in
loopne
push
or
(bad)
pop
mov
push
int
imul
mov
loope
xlat
sub
fwait
add
cld
mov
sbb
jb
cli
pusha
jmp
(bad)
gs
xchg
out
cmp
mov
lds
jae
push
sub
jecxz
pop
adc
and
je
popa
xchg
frstor
jb
call
push
pop
call
jno
in
mov
fsub
push
cwde
and
pop
call
ret
stc
scas
xchg
cs
(bad)
cmp
jmp
xchg
lahf
ret
dec
call
jl
stc
jns
loope
jns
int
neg
sbb
adc
push
les
popa
aas
sub
cmp
retfw
not
jae
pop
outs
sub
out
jle
cld
shr
jecxz
cld
dec
rol
mov
lea
pop
inc
mov
xchg
mov
add
imul
ss
cmp
test
xor
int
or
xor
cmp
pop
fld
pop
xchg
xor
sahf
jmp
pop
push
adc
push
jb
and
add
dec
mov
call
pop
sub
xchg
jge
test
pop
push
(bad)
mov
cmp
into
and
stos
fwait
cs
adc
pop
into
fmul
jo
mov
fs
mov
sub
popa
inc
adc
push
push
jno
inc
push
mov
test
mov
and
pushf
ins
and
mov
das
iret
fcmovnb
and
mov
dec
loopne
mov
jns
sahf
cmp
cmp
aaa
mov
stos
sub
cwde
lods
dec
pop
mov
push
rcr
adc
ja
in
dec
add
inc
aaa
dec
push
outs
sbb
enter
add
cmp
aas
js
jns
xor
cmp
and
pop
add
cmps
mov
cmp
aaa
shl
rol
pop
push
add
xor
adc
out
push
(bad)
clc
sbb
lods
adc
cli
or
js
inc
shr
ss
into
jne
cld
sub
xor
inc
ret
and
mov
and
cmp
or
pop
mov
push
cmp
jns
lock
jmp
xchg
pop
pop
jmp
inc
or
in
push
mov
mov
stos
fadd
cmp
mov
shl
(bad)
cmc
mov
pop
mov
adc
(bad)
mov
pop
(bad)
jp
or
(bad)
cmp
pop
or
out
icebp
cs
xlat
mov
ror
cld
push
sti
shr
js
ror
xor
mov
push
cli
dec
and
xor
push
and
loop
xchg
inc
pop
pop
inc
(bad)
pusha
in
sahf
clc
ss
aad
fcomp
addr16
pop
adc
sbb
call
pop
sub
scas
pop
mov
out
in
and
adc
mov
cmp
fdiv
xor
sub
dec
std
fstp
mov
bound
pop
adc
sub
shr
ja
std
mov
cs
xor
push
pusha
(bad)
stc
push
mov
in
ficomp
les
xor
ins
sbb
in
out
repnz
(bad)
int3
mov
adc
enter
add
mov
and
cmc
mov
shl
mul
mov
push
mov
repnz
adc
shr
sahf
xlat
jno
in
sbb
adc
mov
sub
cmps
push
pop
icebp
retf
cli
popf
xchg
cmps
dec
ret
inc
push
mov
call
or
mov
lods
call
in
outs
or
push
sbb
fwait
push
sub
jbe
mov
mov
test
enter
add
inc
sub
fsubr
mov
push
(bad)
and
push
adc
xor
int
mov
xchg
mov
fs
cmp
and
pop
jbe
pusha
idiv
(bad)
mov
movs
adc
popa
mov
je
out
loope
sub
sub
add
xor
scas
test
hlt
rcr
movs
adc
xor
cs
popf
lods
imul
mov
scas
sbb
repnz
retf
jmp
ret
xor
hlt
sub
jecxz
into
jmp
push
retf
sbb
das
hlt
ds
and
inc
mov
lock
fwait
xchg
push
in
adc
imul
(bad)
pop
mov
xor
iret
sbb
sub
data16
fs
sti
push
jb
retf
ss
cmp
adc
pop
fcmovne
cmps
stos
and
or
lods
test
mov
sub
movs
sub
or
cmp
dec
loop
and
retf
xchg
jg
out
fwait
mov
add
in
xor
or
js
xlat
xor
fabs
or
ror
cmp
cmp
mov
lds
imul
outs
test
popf
addr16
sbb
sbb
call
xor
jns
push
in
add
sbb
mov
add
movs
mov
dec
mov
scas
xor
cmp
mov
xchg
repnz
nop
imul
mov
push
hlt
xchg
es
pop
jmp
mov
pop
xlat
and
inc
or
dec
pop
sub
jbe
jo
je
fdivrp
jnp
xor
adc
fist
inc
fs
sar
fwait
push
adc
sub
hlt
sub
adc
fdiv
sub
add
sub
adc
ins
stos
sahf
mov
push
cmp
inc
sti
ins
mov
pop
sbb
jmp
or
sub
mov
xlat
test
mov
push
addr16
popa
aaa
and
call
jge
sbb
ss
xchg
add
cwde
cwde
adc
pop
cmp
add
sbb
pop
jb
fistp
mov
shr
ja
(bad)
ja
inc
ins
out
or
addr16
retf
dec
retf
cmp
sub
pop
jbe
or
inc
xor
les
out
lds
push
mov
push
fsubr
out
inc
cmp
dec
aaa
popf
sub
xchg
pusha
add
lahf
out
pop
cmp
mov
push
(bad)
mov
cmp
dec
mov
adc
xchg
push
push
push
inc
mov
mov
jmp
daa
jns
cdq
movs
jb
cld
mov
add
add
adc
retf
sahf
push
mov
pmulhw
push
inc
sub
(bad)
inc
ins
jge
xchg
mov
or
shl
inc
gs
and
dec
adc
scas
mov
pop
loop
pop
mov
add
gs
sbb
repz
shl
jp
sub
sub
lods
aaa
xchg
enter
mov
call
mov
(bad)
and
add
mov
and
scas
jno
into
pop
dec
in
or
ins
sti
mov
outs
mov
mov
cmps
ss
jl
or
call
data16
mov
in
ds
fisub
sub
inc
xchg
fiadd
mov
mov
lods
mov
xlat
sbb
cmps
xlat
scas
mov
jge
(bad)
xchg
aas
xor
xor
sbb
repz
pop
mov
sub
push
add
les
lods
(bad)
in
mov
adc
stos
xor
std
rol
and
xchg
mov
nop
icebp
xchg
mov
daa
repz
cmp
jnp
or
jns
or
stos
movs
cmps
aas
and
adc
mov
add
sub
repz
xor
jmp
dec
imul
mov
sub
outs
cld
cmps
sti
mov
jmp
std
jl
loope
fwait
retf
shl
push
(bad)
das
retf
test
pop
gs
cli
pop
cmps
push
inc
(bad)
dec
and
shl
or
cwde
sub
add
repz
fisttp
pop
retf
push
sub
stos
sti
add
mov
mov
and
movs
mov
int
dec
outs
shl
(bad)
gs
push
sahf
test
mov
repz
repz
sub
fcomp
add
(bad)
(bad)
sbb
or
sbb
cmp
xchg
cmps
push
dec
loopne
jae
fistp
stc
int3
adc
xchg
in
mov
sbb
gs
dec
mov
mov
jnp
pop
xchg
pop
lds
and
inc
and
xchg
movs
xor
jg
das
pop
xor
int3
fidivr
stos
in
sbb
sbb
sub
sbb
or
and
lods
mov
pop
shl
and
into
sbb
mov
adc
inc
fldenv
imul
jnp
mov
jmp
or
push
ins
test
jecxz
xor
or
fadd
loopne
inc
and
mov
aad
push
add
aam
ins
mov
cmps
jle
test
mov
cmp
pushf
dec
arpl
push
dec
rcl
inc
sub
fcmovnb
mov
sub
or
push
imul
stos
xchg
fnsave
popa
mov
cld
adc
xchg
call
stos
retf
js
in
and
sbb
adc
sbb
mov
stos
push
xor
or
jnp
test
cmc
stc
dec
and
mov
xor
mov
or
shl
pop
pop
aad
das
repz
push
out
sub
dec
mov
cmp
push
sbb
jns
push
pop
loopne
mov
(bad)
nop
cwde
push
xchg
cmc
icebp
iret
sub
inc
stc
jl
xchg
aam
xchg
dec
fsub
repnz
fbld
jmp
mov
nop
push
inc
mov
out
and
pop
dec
fs
fstp
inc
add
mov
iret
push
test
dec
or
or
int
mov
ret
sahf
xor
xchg
sbb
rol
push
xchg
(bad)
sbb
sub
outs
aas
inc
ds
pop
aam
jnp
lods
xchg
mov
mov
retf
dec
mov
adc
or
cmp
pop
dec
mov
dec
jle
(bad)
scas
mov
pop
xor
shr
cs
push
aas
retf
lds
stos
pop
pop
mov
and
and
fdivr
ss
repnz
adc
lods
mov
lds
in
loop
shl
adc
repnz
daa
mov
jmp
add
mov
icebp
pop
addr16
fidiv
mov
dec
mov
in
scas
jl
xchg
call
(bad)
xchg
adc
fiadd
(bad)
xor
adc
fsubr
bound
call
push
dec
mov
mov
mov
mov
lea
cmp
mov
movs
into
jg
push
movs
mov
inc
(bad)
fst
popa
cmp
ror
dec
shl
cld
repz
inc
sar
(bad)
push
js
dec
cmp
stos
adc
mov
icebp
jnp
mov
scas
pop
mov
cs
cmc
mov
pop
shl
xchg
mov
call
inc
mul
pop
xchg
cmc
aam
inc
adc
or
mov
call
jo
(bad)
cld
es
(bad)
push
test
sub
das
jge
into
sbb
sbb
aas
movs
dec
jmp
sub
inc
cdq
shl
stos
and
push
fild
jge
or
adc
pop
ins
inc
call
js
mov
pop
mov
sub
adc
xchg
call
scas
shl
movs
ficomp
mov
in
aad
fmul
call
repnz
push
dec
outs
sbb
pop
xchg
push
mov
call
sub
add
loop
sub
push
dec
pop
int3
jecxz
mov
mov
js
xchg
cmc
xor
or
cdq
jnp
pusha
les
adc
push
ja
inc
and
xor
ret
xchg
jl
stos
aam
sub
out
outs
test
fsubp
ret
mov
sub
mov
sti
ret
add
inc
fldcw
aad
scas
daa
dec
out
into
popf
paddusb
mov
add
sbb
rcl
xchg
arpl
mov
in
ret
jo
lahf
inc
adc
(bad)
push
sub
adc
cmp
mov
mov
dec
jns
js
jo
scas
and
and
fnstcw
(bad)
xchg
push
jne
movs
jae
adc
mov
xchg
or
out
dec
jo
test
or
pusha
stos
mov
mov
(bad)
daa
jl
clc
(bad)
int
xchg
mov
cmc
mov
mov
dec
and
fstp
loop
cli
xchg
pop
sub
loopne
xchg
push
inc
push
leave
iret
not
jg
lahf
or
cmp
cmp
or
setne
scas
lods
popf
mov
(bad)
jmp
cmps
push
add
jno
dec
pop
inc
jae
outs
addr16
ss
xchg
mov
xchg
dec
cmps
xor
popa
retf
loope
mov
xchg
mov
cmp
leavew
cmp
aad
mov
ds
push
or
or
mov
rep
and
dec
retf
popa
or
mov
loopne
hlt
xchg
or
sub
jle
out
mov
sub
xchg
pop
aad
cs
aam
cmp
hlt
mov
and
or
fbstp
fsubr
das
sbb
dec
sar
sub
sub
movs
jmp
ret
bound
jmp
js
ja
xchg
adc
add
dec
or
jne
fst
stos
mov
jle
pause
ins
ret
xchg
ret
retf
mov
sub
dec
push
jne
fild
xchg
mov
not
into
(bad)
mov
ss
mov
pop
in
ja
pop
and
and
ins
je
jno
retf
loopne
loop
pop
mov
stos
jmp
inc
vpmacssdd
(bad)
enter
mov
cmps
cmp
sahf
fwait
xchg
fldenv
cmp
inc
mov
add
test
arpl
ret
pop
fbstp
aam
push
pop
jno
vmread
scas
mov
mov
ret
pop
cdq
pop
mov
mov
xchg
out
(bad)
lahf
inc
or
out
jmp
sub
cmp
jle
mov
sbb
sahf
add
stos
ja
icebp
dec
fild
js
icebp
loopne
mov
and
setp
xchg
or
loop
xchg
and
xchg
mov
ret
pop
(bad)
ror
dec
shl
xor
or
ds
pop
and
fcomp
inc
jmp
dec
cmc
aas
mov
adc
inc
inc
popf
inc
xor
mov
dec
pop
punpckhwd
fs
dec
les
jbe
and
mov
(bad)
or
xlat
ins
mov
xchg
inc
mov
lahf
leave
loop
xor
ror
dec
jmp
repz
ror
xchg
jmp
push
ins
in
mov
ret
mov
mov
jae
inc
inc
jb
fcomp
test
outs
mov
and
jg
jle
movs
mov
or
sub
(bad)
push
push
push
mov
dec
frndint
sti
inc
clc
(bad)
cmp
fidiv
repnz
ret
iret
sbb
or
xor
imul
ds
pop
(bad)
or
jle
sub
sahf
pop
int3
sub
lods
aaa
int
dec
and
push
(bad)
in
shl
js
dec
jecxz
dec
mov
jg
out
mov
outs
scas
(bad)
dec
out
mov
cmp
push
pop
cmp
lea
clc
mov
add
push
dec
stos
inc
in
mov
cmp
stos
jmp
arpl
int3
jmp
mov
add
cmp
cmp
aam
xor
and
and
es
or
push
je
mov
xor
jg
push
jae
mov
call
test
ss
xor
mov
mov
dec
lahf
daa
in
sti
popa
cmp
aas
xor
test
movs
jp
ss
dec
dec
sbb
fwait
jmp
fnstsw
rcl
out
imul
mov
cs
aas
xor
xlat
sar
jle
test
mov
or
mov
mov
jmp
lea
sahf
dec
adc
adc
push
or
adc
mov
mov
xchg
fcmovne
movs
into
pushf
jo
ror
data16
mov
daa
xlat
ss
cmc
jmp
adc
leave
and
jmp
cmps
test
sub
popa
popa
sub
or
repz
cmp
pop
test
or
push
mov
mov
xor
and
push
fs
add
stos
mov
into
nop
imul
(bad)
ficom
test
loope
sub
sub
imul
test
(bad)
call
xchg
fmul
aas
(bad)
inc
xchg
fwait
retf
mov
inc
(bad)
mov
sbb
sti
outs
(bad)
pop
int3
(bad)
and
dec
xor
jmp
cdq
mov
mov
xchg
or
pop
push
mov
push
push
dec
sub
xlat
push
mov
push
shr
shl
mov
sub
cmp
lods
sahf
nop
and
icebp
mov
sub
arpl
or
pop
inc
and
cmp
or
retf
pusha
inc
mov
dec
fmul
jg
movs
pop
xor
mov
pop
out
fsubr
stos
sub
into
cs
push
mov
jo
dec
push
fdivr
and
mov
mov
adc
sbb
fisttp
and
add
add
push
xor
cmp
shl
(bad)
ret
hlt
adc
ret
into
xchg
fst
mov
or
(bad)
pop
fwait
dec
dec
cmps
(bad)
pusha
out
dec
inc
xchg
push
mov
mov
sbb
movs
or
adc
pop
jge
mov
pusha
imul
jae
xchg
gs
sub
mov
pop
inc
lea
and
inc
sub
test
inc
shl
dec
test
rol
sbb
xor
or
sahf
xor
inc
in
xchg
and
outs
adc
test
call
clc
inc
xchg
or
adc
leave
jg
mov
(bad)
je
out
push
call
inc
xchg
std
push
out
outs
sbb
push
xchg
fs
mov
cli
scas
pop
les
not
xchg
sbb
gs
ja
push
aad
cmps
add
inc
inc
cmp
shl
rol
push
pusha
sub
jb
inc
sub
icebp
pop
int
test
cs
out
jb
dec
inc
xchg
(bad)
repz
or
mov
sbb
clc
sbb
mov
or
jne
adc
jecxz
pusha
push
mov
mov
mov
test
or
sub
lea
add
and
sbb
xor
sbb
sub
shl
ret
sbb
jns
clc
mov
cmc
jb
or
stos
mov
cmp
cmp
jge
push
cmp
push
cmp
cli
jp
xlat
mov
fs
shl
cmp
icebp
(bad)
inc
in
jo
xor
add
arpl
xchg
add
into
in
popa
into
jmp
push
push
mov
push
jmp
push
ficom
mov
out
dec
mov
jbe
mov
fcomp
scas
inc
sbb
enter
cmp
jbe
push
xor
dec
push
and
mov
arpl
cmp
aas
aam
mov
mov
mov
(bad)
sub
xor
out
jmp
iret
mov
pop
push
mov
in
push
add
mov
mov
or
xor
mov
push
pop
pop
mov
mov
fsub
pusha
and
or
xchg
add
ffreep
push
xchg
or
xchg
cwde
fld
fs
xchg
rcr
xor
popa
xchg
pop
mov
cmps
push
or
addr16
sub
mov
cmps
adc
lods
jecxz
mov
jmp
lods
cmp
add
fs
adc
imul
push
push
sbb
inc
add
(bad)
cli
xchg
in
xor
add
js
cmps
xor
or
inc
or
xor
fwait
cmp
jbe
push
mov
test
and
fs
fnstsw
or
pusha
xor
cdq
aam
sbb
repz
pop
mov
and
fsub
inc
ss
mov
xchg
psubsb
adc
ret
test
mov
fcomp
xchg
test
test
and
shl
xchg
imul
and
dec
repnz
push
pop
mov
ficomp
test
iret
inc
clc
outs
add
push
inc
mov
pop
mov
mov
aam
push
jecxz
mov
and
dec
repnz
mov
dec
jecxz
fiadd
ret
loop
or
mov
cwde
(bad)
xchg
xlat
retf
fmul
(bad)
daa
aaa
adc
sahf
cs
sbb
push
sbb
enter
pop
jno
mov
mov
mov
push
jmp
adc
mov
inc
(bad)
idiv
popf
lock
js
inc
inc
outs
loope
clc
dec
xor
mov
cmp
mov
stos
push
inc
xor
adc
stos
imul
inc
shr
ret
js
push
xchg
push
mov
bound
fs
shr
push
ret
sbb
pop
and
test
int3
into
outs
adc
out
test
jg
xchg
adc
mov
push
xchg
mul
xor
movnti
push
push
aam
pop
icebp
cs
rcl
adc
clc
imul
or
inc
and
outs
loopne
fistp
enter
rol
or
aad
cmp
icebp
cmp
mov
das
scas
xor
(bad)
or
pop
ins
sub
mov
jb
cs
sbb
or
(bad)
aad
inc
lock
jo
mov
ror
add
aas
push
push
fwait
popa
xor
xchg
(bad)
hlt
push
push
lea
movs
push
dec
add
sub
and
gs
bound
mov
pop
cld
shl
shr
pop
fdivp
test
mov
mov
lea
jp
rcl
pusha
or
push
jns
xor
test
sub
jle
lock
sbb
push
sub
xchg
cmps
cdq
hlt
dec
jns
(bad)
iret
daa
inc
bound
stc
iret
fild
movs
adc
jae
mov
outs
cmp
js
push
(bad)
and
cmp
add
push
mov
mov
mov
gs
rcr
xlat
and
out
jmp
sub
icebp
jns
pop
std
push
xchg
retf
daa
nop
stos
mov
ret
cmp
sub
shl
add
sbb
or
int3
add
das
adc
stos
sahf
sbb
aas
mov
sahf
cmp
movs
sbb
arpl
push
pop
pop
inc
rcl
test
fbstp
or
pop
sub
and
adc
cmps
sub
shr
loope
dec
lock
or
out
pop
xor
jne
scas
retf
call
dec
imul
or
cmp
(bad)
aam
cmp
gs
and
adc
cmps
inc
movs
inc
jnp
jecxz
pop
movs
xor
adc
adc
mov
fiadd
ins
xor
or
push
jl
imul
cmp
mov
push
pop
mov
dec
or
loop
jecxz
pop
mov
arpl
pushf
ret
or
pusha
in
sti
icebp
inc
sbb
xchg
pop
jnp
pop
in
jg
es
dec
in
or
lods
arpl
mov
sbb
scas
jno
cmp
mov
aam
adc
pop
lds
stos
outs
sti
out
jp
movs
daa
xchg
fmul
xor
enter
out
bound
mov
hlt
das
sahf
inc
push
mov
mov
xor
out
push
test
pop
div
mov
call
scas
idiv
js
cli
push
push
inc
je
pop
jo
out
mov
add
(bad)
mov
mov
je
ins
xchg
sub
aaa
push
mov
adc
psllq
aam
repz
sub
mov
mov
(bad)
ja
cmp
rcl
inc
jecxz
imul
cmp
mov
std
sbb
xchg
in
or
das
adc
or
gs
or
mov
imul
mov
sti
sbb
cmc
adc
je
sub
pop
or
cmp
mov
xchg
out
sub
dec
jmp
shl
in
and
xor
lea
mov
add
(bad)
cmc
in
push
int3
leave
frstor
sub
push
xchg
icebp
jns
xlat
popf
jecxz
cwde
sbb
arpl
push
(bad)
data16
mov
jb
lea
sbb
cmp
dec
lods
or
daa
lds
out
cmps
clc
shr
aad
lahf
xor
and
les
mov
xlat
pop
mov
or
mov
or
push
mov
mov
xchg
and
cmps
pop
test
imul
cmp
retf
test
mov
and
xor
movs
mov
cmp
jle
pop
popa
stos
mul
and
sub
imul
shl
sub
into
and
xor
int3
stos
popa
inc
div
sbb
push
ss
ja
xchg
in
int
mov
fsubr
outs
adc
and
call
gs
jg
cli
mov
out
jg
enter
fwait
cwde
arpl
inc
cmp
xchg
push
xchg
sti
mov
cmp
push
sub
ficomp
je
arpl
test
retf
or
clc
mov
scas
retf
and
add
push
and
cli
lods
jae
sbb
outs
dec
cwde
sbb
inc
loop
mov
or
xlat
test
push
ret
out
or
cmps
pop
aas
jle
in
sbb
sub
pop
add
adc
push
push
cmp
(bad)
mov
shl
inc
(bad)
mov
pop
sbb
ds
ins
fild
lahf
xor
dec
sub
(bad)
(bad)
ja
(bad)
ficomp
push
(bad)
out
push
cmp
push
aad
loope
test
jb
xchg
push
ror
push
inc
pop
mov
push
add
cmps
push
xor
xchg
cmps
add
cmps
cld
pop
add
imul
add
inc
into
(bad)
and
adc
out
inc
in
dec
fldenv
cmp
(bad)
jp
jns
and
sub
pop
(bad)
push
sbb
dec
loope
popa
sub
jl
xchg
mov
mov
adc
data16
and
test
clc
popf
sbb
pushf
mov
xchg
mov
cmp
jnp
xor
and
shl
jl
mov
push
fild
outs
add
lea
push
out
test
call
fdiv
mov
sbb
sub
jmp
(bad)
and
or
push
movs
push
xchg
pop
stos
stos
cmp
or
cs
xchg
cmp
push
outs
mov
and
sbb
in
(bad)
cmp
jmp
cmp
lahf
sbb
jge
rcl
jb
loope
add
jecxz
outs
and
(bad)
mov
dec
and
xchg
fst
mov
jbe
sub
jmp
pminsw
addr16
lock
imul
and
nop
adc
push
adc
ds
ret
mov
sbb
idiv
mov
(bad)
aas
mov
mov
mov
xor
add
jg
bound
xchg
mov
retf
je
jmp
out
sub
push
add
xlat
cmp
inc
xchg
dec
(bad)
xchg
pop
mov
mov
jae
pop
mov
into
mov
(bad)
push
adc
inc
dec
aas
aas
dec
outs
push
ins
nop
std
sbb
fmul
or
xlat
dec
ins
inc
das
pop
shl
mov
jp
icebp
mov
or
add
test
xchg
int
movs
daa
sahf
mov
pop
sbb
(bad)
cmc
mov
adc
add
mov
ror
(bad)
imul
pusha
cmp
xchg
test
mov
sub
sbb
and
mov
mov
sbb
push
mov
fild
jge
shl
jbe
adc
in
shl
inc
inc
mov
gs
popa
push
mov
sub
sbb
es
ja
sub
cmp
test
mov
jecxz
mov
mov
dec
sbb
adc
push
mov
(bad)
and
mov
mov
loope
xchg
jmp
pushf
push
(bad)
lods
push
(bad)
stos
push
in
shr
icebp
dec
enter
pop
ret
pop
stos
or
cmp
push
or
dec
out
pavgw
ins
xchg
sar
stc
fiadd
aam
add
cmp
mov
dec
cwde
shl
adc
inc
cmp
mov
sub
shl
fidiv
sub
loopne
and
jl
shl
mov
jnp
(bad)
xchg
push
scas
int
sub
xlat
leave
sbb
jmp
push
lods
inc
mov
popa
cli
in
xor
mov
jg
sbb
add
fld
jns
mov
adc
push
mov
adc
cmc
or
inc
sub
cmc
test
in
cs
ficomp
xor
sbb
and
fst
add
mov
retf
outs
outs
mov
mov
mov
xchg
dec
jmp
das
mov
fdivr
sub
cdq
iret
adc
mov
adc
sbb
aas
das
mov
mov
cmp
mov
mov
in
out
pop
repz
adc
hlt
movs
jnp
add
imul
dec
loopne
pop
mov
or
out
cmc
or
or
pushf
shl
push
std
cmp
fistp
mov
cmp
int
repz
adc
pop
(bad)
je
(bad)
sub
stos
mov
outs
jns
sbb
mov
aas
push
outs
cmc
push
test
rcl
xchg
cmp
jecxz
sbb
aas
(bad)
or
ror
mov
imul
dec
div
add
and
movs
jle
mov
call
sub
icebp
aam
outs
jns
repnz
add
push
sbb
push
mov
int
push
loope
lock
push
fadd
xchg
jg
mov
(bad)
jl
popf
sbb
mov
cdq
push
arpl
aas
loopne
adc
aam
in
jns
add
dec
push
dec
mov
pop
dec
mov
fs
(bad)
fmul
(bad)
test
stos
out
jg
int
iret
or
dec
fidiv
mov
mov
dec
pop
and
mov
leave
mov
outs
xor
mov
pop
ror
dec
inc
fwait
popf
push
cmp
lock
hlt
stos
cmp
test
xlat
loopne
lock
popf
xor
pop
leave
pop
pop
sub
div
(bad)
retf
mov
jmp
nop
daa
sub
add
arpl
fldcw
rol
cmp
movs
adc
sbb
cdq
gs
iret
fs
(bad)
adc
aam
pop
ins
cmp
popa
mov
lahf
and
enter
es
int
dec
sar
loope
je
add
pop
pop
rcl
xor
adc
addr16
out
stos
xchg
dec
shr
jbe
fwait
stc
aas
cmps
pusha
pop
mov
sub
jbe
mov
es
stos
imul
loope
ss
sar
cs
rol
add
sbb
sbb
fmulp
mov
dec
sub
aad
fwait
pop
lock
mov
mov
mov
and
sbb
or
push
(bad)
aad
ins
mov
retf
mov
ss
cdq
xor
pop
aaa
outs
jge
xor
lds
xchg
or
in
dec
loopne
in
pusha
mov
mov
jno
test
and
push
jno
pop
or
pop
xchg
mov
inc
pusha
movs
jecxz
loope
sti
cmp
movs
cmc
sti
arpl
sbb
and
in
ja
daa
inc
retf
bswap
dec
mov
add
mov
jecxz
xchg
scas
sub
mov
pop
cmp
pop
cld
push
or
int
sbb
xchg
jae
loopne
push
xor
mov
xchg
inc
dec
jge
dec
test
dec
aas
fidivr
in
lods
jp
mov
cld
leave
pop
jmp
xor
dec
nop
mov
mov
mov
es
(bad)
test
mov
jbe
or
(bad)
in
imul
xchg
mov
ins
adc
gs
(bad)
mov
mov
mov
cmp
xchg
mov
ins
std
loope
(bad)
pop
jge
inc
stos
stos
out
pop
es
mov
xor
test
por
mov
adc
pop
stc
pop
mov
inc
pop
fucom
in
aad
pmullw
cmp
ins
jbe
int3
gs
rcl
repnz
dec
push
pop
push
xchg
test
hlt
jg
cmp
(bad)
(bad)
(bad)
dec
mov
cmc
xor
or
adc
push
xchg
pushf
jmp
fidiv
neg
sub
pop
das
inc
pop
mov
xchg
js
in
or
mov
mov
ds
test
sahf
cmp
rol
lds
das
mov
mov
inc
iret
xchg
sti
movs
and
sbb
adc
and
arpl
test
loopne
and
test
mov
(bad)
push
int
xor
add
fdiv
mov
jl
ficom
fist
das
add
cld
xchg
adc
movs
mov
rcr
adc
mov
push
lock
aad
mov
adc
daa
retf
cdq
bound
jp
mov
and
jbe
mov
pop
in
mov
dec
xor
mov
push
stc
cld
xor
jnp
loope
imul
sub
inc
mov
mov
sub
sbb
nop
xor
ret
jae
rcl
std
fbld
cmp
(bad)
pop
daa
jmp
inc
lahf
sbb
mov
xor
inc
shl
and
sbb
and
test
sub
ja
mov
ss
sub
popf
test
sub
call
mov
adc
bound
outs
cld
pop
xchg
vpor
mov
and
out
xchg
pop
mov
push
cwde
xor
and
or
cmp
add
sti
mov
inc
fisttp
in
mov
jnp
fcomi
(bad)
dec
shl
xor
nop
std
scas
and
pushf
push
xor
mov
cmp
bound
iret
in
ret
pop
mov
xor
inc
(bad)
mov
add
outs
inc
shr
imul
sub
shr
xchg
inc
loop
cmp
xor
lods
clc
sbb
out
into
xor
call
mov
imul
pop
pushf
or
je
xchg
aaa
push
retf
fcomp
xor
cmc
xor
stc
cmp
and
jae
mov
psllq
int
jl
out
mov
scas
loope
loop
pushf
(bad)
pop
cwde
(bad)
call
(bad)
lods
mov
popf
mov
dec
(bad)
repnz
add
out
inc
aaa
aad
das
xor
xchg
sub
xor
fcomp
ret
dec
adc
iret
(bad)
sub
je
fldenv
int3
fs
jne
add
push
ja
enter
mov
adc
fwait
scas
gs
int3
imul
imul
popf
xchg
xor
test
lods
pop
lock
fisub
scas
imul
ss
movs
(bad)
push
(bad)
add
leave
inc
test
cmps
dec
sub
pop
mov
fwait
in
cmc
jmp
push
add
cmp
pop
inc
cmp
test
aaa
retf
test
inc
push
sub
jle
aam
add
out
pop
dec
jmp
dec
jo
pop
dec
pop
jae
aas
mov
adc
push
sbb
sahf
or
in
add
in
xor
je
sbb
xchg
sub
add
push
jle
call
inc
ss
gs
in
jno
test
inc
ficom
add
adc
add
out
sbb
push
in
or
mov
cdq
mov
jg
stos
aad
mov
sahf
mov
das
or
test
ins
sbb
int
or
sbb
loopne
mov
int
push
add
ror
push
pop
mov
call
shr
daa
fsub
scas
or
inc
fld
pop
mov
retf
mov
rcr
je
out
inc
aam
aaa
mov
xchg
jp
push
mov
cmp
test
push
jno
les
dec
jae
dec
scas
fs
xchg
mov
pop
aad
inc
inc
mov
dec
dec
ret
or
cmp
in
pop
sbb
in
iret
cmps
ficom
adc
outs
or
jg
mov
sbb
sbb
mov
or
adc
cld
dec
dec
scas
neg
sbb
push
push
push
jge
sahf
add
lods
nop
inc
sub
icebp
int
xchg
cli
mov
mov
pushw
in
mov
and
pop
pushf
shl
or
pop
ins
cmp
movs
xlat
aaa
inc
out
dec
mov
inc
sub
aad
inc
(bad)
ins
test
mov
rol
add
mov
sub
xchg
dec
cmps
lods
daa
and
xor
pop
mov
add
mov
push
sub
and
jbe
cli
in
inc
jecxz
inc
int3
sbb
and
pop
jg
add
rol
enter
ret
arpl
cli
adc
scas
sbb
mov
cld
rcr
fisttp
in
jbe
mov
jmp
jge
and
ins
loop
sbb
push
inc
mov
bound
cmp
inc
sub
jmp
sahf
add
mov
mov
dec
rcl
out
aam
sbb
jge
adc
imul
inc
jbe
imul
call
and
fst
push
sub
xchg
sbb
inc
xchg
jns
call
outs
cmp
and
jp
div
movs
cld
cld
or
imul
or
xor
in
push
add
rcl
lods
xlat
xchg
inc
pushf
sbb
out
push
mov
xor
clc
sub
ret
inc
cmp
call
mov
cmp
sahf
int
mov
retf
cs
sar
popf
dec
mov
mov
mov
xchg
fsubr
pop
hlt
push
cmp
jmp
sub
jmp
add
push
dec
jbe
xchg
cmps
cmps
push
retf
mov
aas
xor
dec
xchg
mov
cmps
retf
xor
push
mov
mov
mov
mov
pop
inc
adc
cld
int3
dec
sar
adc
les
pop
xor
in
sahf
inc
pop
mov
adc
mov
ss
nop
inc
cmp
pop
mov
jno
fdivr
pop
sub
(bad)
cld
leave
test
pop
mov
fbld
sar
dec
mov
fiadd
sar
call
cld
fisub
dec
retf
xchg
cld
dec
or
push
popa
xchg
or
stos
ret
rol
xchg
xor
sbb
pop
loop
pop
and
pop
mov
in
xchg
popa
push
push
outs
and
lea
xor
outs
mov
aaa
jae
stc
and
xchg
call
cmp
push
and
add
mov
lods
jb
inc
push
add
ror
addr16
mov
cmp
ss
adc
inc
mov
or
cld
and
jbe
xlat
pop
(bad)
and
cmp
call
push
or
jae
add
es
nop
pop
in
sbb
sahf
call
push
mov
sahf
or
fist
inc
mov
pop
pusha
ror
scas
or
xor
repz
fstsw
xchg
cmp
jecxz
sub
inc
xor
dec
sbb
and
ja
fisttp
icebp
mov
in
pop
std
ja
and
add
cmp
push
dec
test
inc
popa
pop
cmps
xor
add
cmps
mov
jne
mov
or
out
jp
pop
nop
int
aaa
adc
sub
jae
or
cmp
add
cdq
std
adc
mov
xchg
mov
jge
cmps
jns
test
mov
outs
lock
sbb
cmp
ja
and
sbb
ins
or
repz
fld
cmp
enter
push
mov
mov
data16
int
dec
call
mov
sar
nop
int3
cmp
push
xchg
je
dec
pop
dec
and
std
scas
mov
ss
lahf
sbb
xor
cmp
mov
jb
push
mov
cmc
in
fwait
or
loope
sbb
cmp
mov
fwait
lds
xor
jne
pop
iret
int
shl
push
(bad)
sub
push
and
aas
pusha
movs
cmp
fld
push
and
cmp
mov
movs
imul
rcr
sti
mov
mov
add
mov
out
jecxz
lds
cmp
sub
jmp
cmps
shr
sub
inc
or
mov
xor
rcr
adc
stos
pop
(bad)
test
pop
loop
das
ds
add
add
aam
add
ror
fld
mov
clc
cmp
retf
add
popa
jmp
and
outs
inc
or
(bad)
pop
scas
xor
jp
sub
or
xchg
ror
jae
push
push
out
out
ds
xchg
mov
add
cmp
push
push
adc
loopne
pop
jno
fimul
mov
mov
(bad)
outs
jae
stos
test
or
fisttp
push
dec
je
xor
std
in
sbb
or
mov
mov
mov
lods
jmp
scas
jp
xchg
sub
xor
inc
xchg
icebp
sbb
jo
sub
xchg
jno
stc
lods
add
inc
js
sbb
mov
or
or
mov
cmps
or
xor
xor
cld
inc
add
fcomi
add
mov
mov
jge
mov
lods
pop
in
mov
adc
lahf
xlat
(bad)
imul
mov
mov
jmp
xchg
sub
jg
loop
inc
mov
(bad)
jbe
(bad)
les
sub
sub
loope
xor
(bad)
call
add
das
hlt
xchg
push
leave
inc
fdiv
cmp
and
cld
sahf
mov
jae
dec
sti
xchg
into
in
xchg
lgs
sbb
nop
mov
cmps
inc
sub
or
enter
inc
mov
adc
mov
mov
and
mov
(bad)
cmp
int
add
inc
push
jno
jge
cmp
(bad)
int
mov
dec
add
mov
add
test
es
mov
dec
jns
retf
push
cmps
ja
and
adc
or
ja
push
mov
jp
add
adc
mov
out
(bad)
sti
pushf
xor
jno
push
push
sti
sar
xor
mov
sbb
xchg
sbb
push
mov
jne
xchg
cli
or
dec
jecxz
add
pop
ret
call
stos
(bad)
cmp
nop
lods
stc
test
(bad)
add
dec
imul
inc
dec
int
mov
out
enter
pop
xchg
lds
sub
sub
jae
and
cmp
inc
lock
cmp
loope
inc
sub
cmp
enter
xor
mov
jmp
rcr
xor
xor
jb
and
sahf
mov
add
inc
mov
sbb
ret
jnp
addr16
je
xchg
cmp
push
out
cmp
push
or
jecxz
mov
lods
xchg
inc
out
push
scas
jecxz
pop
ds
push
sti
outs
jae
lods
push
fcom
daa
dec
jnp
sahf
lds
jae
scas
mov
inc
push
adc
aad
stos
and
sub
gs
cmps
std
cmc
(bad)
cld
popf
frstor
stos
retf
hlt
mov
retf
mov
or
adc
mov
xor
pop
mov
sub
retf
push
add
cmp
jmp
(bad)
into
loop
test
mov
(bad)
scas
shr
push
es
les
jmp
jecxz
or
xchg
ins
out
loop
or
push
mov
icebp
imul
outs
leave
mov
clc
xor
imul
int
loopne
or
(bad)
fdiv
jno
(bad)
inc
mov
dec
or
test
dec
pushf
shl
adc
lods
adc
jp
pop
cli
test
out
jmp
test
es
push
ins
es
push
out
xchg
or
call
cmp
xchg
and
xor
xor
(bad)
sub
push
cli
ins
dec
ficomp
pop
mov
xchg
sbb
cmp
xor
and
dec
sar
scas
das
ins
mov
sti
push
or
push
inc
inc
push
push
mov
out
jae
movs
cmp
push
gs
jge
call
xchg
fisub
daa
adc
push
sti
out
mov
pusha
sbb
push
mov
add
pusha
mov
(bad)
and
or
cmp
cmps
lahf
das
mov
clc
jae
dec
imul
and
xor
(bad)
mov
push
pusha
xor
sub
into
nop
jno
mov
fcom
lahf
mov
add
imul
aam
lea
int
cmps
fs
push
sub
lahf
xchg
cdq
and
push
stc
repnz
or
or
mov
jns
mov
out
(bad)
aas
cwde
sahf
ficomp
mov
sub
or
push
push
or
inc
repnz
adc
nop
inc
inc
cmc
mov
call
pop
add
push
xlat
lahf
fisttp
gs
add
fidiv
lods
jne
mov
aaa
pusha
pop
sub
dec
push
ins
sub
iret
dec
pop
in
ins
mov
test
sub
add
out
push
push
in
dec
ins
cld
les
xor
sub
jmp
nop
and
jmp
adc
or
and
or
push
test
cmp
dec
out
inc
push
shl
mov
out
rcr
mov
cmp
lock
or
or
(bad)
(bad)
repz
dec
ds
lods
jle
dec
fcmovnb
cmp
mov
push
imul
jb
and
movs
nop
stos
adc
test
jne
ss
mov
dec
push
out
jle
imul
sbb
scas
adc
adc
pusha
aaa
add
pop
jl
mov
test
out
mov
dec
sub
(bad)
add
xchg
fwait
pusha
and
jecxz
push
enter
mov
rcl
fcom
pop
mov
popa
(bad)
push
outs
pop
lock
sti
pop
out
dec
add
mov
(bad)
je
jecxz
(bad)
jmp
data16
and
in
xchg
stos
mov
and
mov
icebp
mov
cld
push
add
test
xchg
mov
popa
cld
sbb
pop
(bad)
rcr
rcr
in
cwde
or
test
xor
or
dec
jmp
hlt
adc
lahf
push
mov
in
jbe
js
sbb
xchg
mov
mov
std
bound
pusha
push
call
and
sub
cmp
icebp
call
push
int3
sbb
call
mov
aas
add
imul
mov
cmp
xor
inc
mov
mov
test
movhps
sahf
in
ins
clc
or
dec
push
sub
out
push
test
ja
push
cmps
xchg
adc
popa
sar
push
lods
ret
daa
push
in
sub
mov
xor
cmp
adc
ror
jb
rol
sbb
retf
sbb
icebp
inc
cld
sub
pop
popa
mov
ins
arpl
lds
movs
pop
xchg
sahf
sub
and
mov
xlat
aad
hlt
nop
sahf
dec
arpl
or
push
call
pop
test
data16
ja
stos
daa
rol
mov
arpl
(bad)
push
pop
loopne
(bad)
sub
xor
adc
sub
sub
retf
mov
aam
cs
xlat
pushf
push
push
and
push
rol
dec
xchg
xor
jne
fnstenv
xor
cs
lahf
jg
add
and
mov
aam
mov
cmp
inc
mov
(bad)
js
repz
inc
xor
and
inc
sahf
fdiv
int3
aam
adc
jle
stos
mov
out
out
outs
lods
ret
pop
(bad)
in
mov
mov
fbld
inc
mov
dec
mov
es
cmp
ins
pop
(bad)
push
cmp
mov
test
je
aaa
dec
dec
mov
scas
mov
add
dec
call
loope
cdq
inc
cmc
jmp
adc
sbb
out
push
fadd
sti
data16
les
and
test
mov
xchg
mov
push
jne
ret
mov
jmp
cmp
push
push
ficom
aaa
fist
(bad)
arpl
mov
push
cmp
xor
sub
les
rol
pop
movs
mov
adc
les
xor
setp
sahf
mov
cld
ins
call
shl
or
mov
inc
stos
call
in
mov
fiadd
std
and
pop
add
dec
adc
clc
jo
and
cmp
pop
or
ins
dec
xor
inc
test
fldcw
push
cmp
inc
sbb
cmc
call
aad
cmc
pusha
adc
sub
mov
inc
(bad)
and
(bad)
ffree
dec
sbb
jecxz
stc
stos
or
mov
mov
mov
adc
aad
or
or
mov
lahf
and
dec
aaa
in
mov
out
and
dec
cmps
adc
mov
sub
int3
retf
inc
inc
hlt
fisubr
daa
cwde
and
xor
push
sbb
dec
enter
inc
sbb
lahf
cwde
mov
jnp
ret
je
iret
fld
jmp
mov
fistp
sbb
loop
add
loope
pop
(bad)
jmp
jmp
push
setbe
add
push
sbb
inc
scas
sub
jb
cmp
push
push
xchg
jmp
inc
out
cmc
jle
pop
pop
rcr
popa
inc
push
aam
sti
mov
loopne
rcl
div
das
xchg
sub
call
lds
(bad)
and
jl
dec
pop
sub
adc
ins
fnstsw
mov
adc
xor
out
stc
inc
shl
sbb
les
(bad)
iret
dec
push
jmp
adc
jg
movs
mov
sub
fadd
loop
pushf
out
out
lea
xchg
stos
add
dec
mov
loope
(bad)
lods
jmp
jge
scas
movs
or
nop
(bad)
fimul
pusha
mov
(bad)
dec
scas
and
(bad)
inc
(bad)
xchg
data16
cmp
pop
inc
sbb
adc
daa
fwait
(bad)
mov
bound
and
sub
(bad)
les
sti
jl
lahf
sahf
scas
mov
out
aam
call
movs
jecxz
hlt
ss
int
mov
or
(bad)
(bad)
sub
outs
inc
test
and
pop
ret
jg
iret
inc
addr16
cmps
call
pop
adc
pop
(bad)
aaa
push
out
xor
lds
mov
in
add
push
stos
fiadd
gs
add
call
in
cdq
jmp
push
std
mov
sbb
mov
or
push
add
mov
stc
push
inc
mov
(bad)
popf
outs
xor
adc
and
or
mov
dec
sbb
add
ret
lea
aas
xor
fsubp
pop
test
ja
sbb
sub
mov
lock
call
int3
or
jmp
xchg
gs
sub
in
nop
pushf
imul
inc
jmp
jl
push
xchg
out
sub
mov
cmp
add
jmp
ret
push
pushf
cmp
sbb
enter
dec
mov
mul
sbb
mov
fdiv
in
repz
test
out
inc
mov
inc
adc
out
jmp
sub
and
(bad)
cwde
inc
add
adc
add
pusha
sar
mov
mov
pop
push
adc
add
test
sbb
sbb
shr
stos
mov
jecxz
cmp
enter
jns
jbe
add
mul
dec
fwait
mov
int
sbb
and
dec
(bad)
or
push
mov
xchg
xchg
js
xchg
mov
call
inc
pusha
sbb
out
fcom
repz
call
mov
inc
cmp
xchg
jae
dec
out
inc
lods
push
or
jae
in
mov
add
call
scas
in
push
rol
and
mov
call
inc
mov
dec
lock
jmp
rcr
jae
js
scas
adc
or
lds
adc
jbe
jo
lea
fist
js
jecxz
adc
sbb
shl
int3
add
sub
repz
cwde
imul
clc
inc
sbb
dec
pushf
cmps
mov
push
loopne
fdivr
mov
cmps
es
es
cld
or
retf
cmp
ja
imul
ret
cwde
repz
scas
cmp
lods
data16
pusha
jno
cmps
sahf
mov
test
inc
aaa
sbb
fcom
(bad)
mov
cmp
sub
movs
mov
push
jmp
sbb
call
sbb
dec
jns
jnp
aaa
adc
jle
aaa
idiv
cmp
inc
jo
sahf
es
out
and
es
cmp
gs
nop
cmp
jmp
std
(bad)
jmp
mov
push
loop
and
push
fnstenv
pop
test
adc
mov
add
scas
inc
xchg
mov
jns
pextrw
xchg
fimul
cmp
out
xchg
out
xor
mov
retf
xchg
xchg
sti
arpl
mov
xchg
pop
pop
ficom
nop
sub
aas
outs
fs
jnp
rcl
cmp
daa
mov
sub
add
sub
pop
das
hlt
push
aad
adc
fmul
push
mov
das
add
into
inc
add
inc
mov
and
js
outs
ja
test
xchg
push
fiadd
cmp
rcr
mov
cmp
out
adc
mov
xlat
and
jne
pop
movs
fldenv
xchg
inc
push
jle
pop
gs
xlat
fisubr
jb
mov
jp
mov
inc
mov
mov
add
pusha
(bad)
ja
lods
adc
jmp
push
ret
sub
push
in
mov
sbb
inc
push
sbb
mov
loop
add
cdq
call
dec
sbb
clc
push
mov
das
scas
out
popa
sbb
das
xchg
ins
mov
sbb
jp
je
es
push
pop
inc
add
inc
mov
or
cmps
and
std
test
and
lock
ret
dec
and
jmp
mov
clc
push
cmps
jbe
pop
mov
mov
pusha
or
stos
lods
dec
shl
cmpxchg
lods
xor
mov
xchg
aam
scas
and
cmc
pop
fidiv
and
aam
jmp
movs
mov
mov
mov
pop
das
dec
dec
and
xchg
xchg
sub
or
dec
xchg
xchg
aaa
punpcklwd
mov
sub
cmps
bound
pop
test
sub
push
inc
cmps
fist
fild
add
push
sub
and
mov
or
mov
pop
jo
outs
movs
dec
cmps
sub
inc
xchg
cmp
cmp
loop
(bad)
mov
(bad)
adc
inc
push
jno
dec
inc
adc
inc
cmps
mov
jmp
scas
repz
push
iret
jmp
jg
retf
inc
les
adc
cmps
jns
dec
out
dec
popa
mov
(bad)
or
das
mov
mov
and
ror
pop
xor
iret
or
sbb
fs
aas
daa
dec
jl
in
loopne
push
and
push
pusha
xor
mov
inc
cmp
pand
std
pop
mov
shr
or
push
into
scas
jnp
aam
gs
push
shl
sbb
or
mov
pop
(bad)
xor
test
xchg
test
fwait
add
mov
cmc
adc
jmp
sbb
push
(bad)
aas
jae
mov
js
(bad)
mov
fwait
jne
mov
bnd
mov
mov
test
dec
xchg
in
xor
aad
and
or
(bad)
fwait
lock
xor
xchg
test
sbb
jp
repz
adc
mov
hlt
xchg
inc
cmps
(bad)
sub
sub
add
ja
xchg
mov
jne
out
popf
pop
mov
test
inc
rcl
or
pop
pop
cmp
outs
shr
cdq
loope
fist
out
sbb
push
mov
inc
pop
(bad)
and
jb
add
loopne
fisub
mov
(bad)
xchg
xchg
shl
movs
jne
test
push
pop
(bad)
jge
adc
add
mov
add
jge
(bad)
sub
inc
xchg
ror
xchg
mov
and
mov
cmp
test
test
test
in
adc
js
sub
out
lahf
ss
adc
shl
fwait
mov
mov
fsubr
ret
ss
sub
adc
mov
jnp
xor
clc
nop
xor
cmp
popf
rcl
cli
cmp
scas
test
adc
xor
mov
jl
jge
or
aad
adc
push
icebp
xor
sbb
ins
add
dec
or
mov
pop
(bad)
loopne
jb
repz
inc
push
pop
aad
and
sub
inc
out
test
cmp
scas
inc
xor
imul
push
xchg
jno
call
loopne
in
repz
dec
xrelease
xchg
aad
jmp
les
jnp
retf
mov
loope
inc
fist
and
adc
repnz
test
add
mov
dec
pop
dec
movs
arpl
imul
iret
lock
xor
push
mov
push
imul
aad
push
mov
cmp
fbstp
out
js
movs
jmp
out
fsub
fisttp
mov
arpl
or
fild
outs
xchg
push
out
jmp
push
add
scas
sbb
sbb
push
(bad)
xor
jmp
les
imul
pop
mov
js
jp
add
pop
mov
xchg
mov
loopne
ret
cmp
push
push
out
cmp
or
xchg
shl
cmps
push
jae
mov
jbe
mov
mov
jno
sub
gs
in
sbb
xor
repz
test
push
mov
mov
inc
ds
lds
imul
mov
xchg
xchg
jmp
mov
pop
and
xor
mov
jno
or
enter
dec
cld
rol
pop
fisttp
sub
inc
cmp
jge
aad
mov
xor
int
sbb
test
xor
jp
pop
js
sub
mov
int3
push
sbb
fdivr
xchg
lea
mov
jbe
dec
or
mov
jmp
movs
paddq
cmp
xchg
mov
jo
rcr
pop
idiv
das
ffree
sti
bound
test
mov
stc
bound
push
int
loope
into
xor
rol
stc
push
call
call
jmp
js
push
jnp
aaa
out
push
jns
mov
push
xor
dec
aam
cdq
js
pusha
xor
in
pop
dec
dec
xchg
lods
(bad)
ins
cmp
mov
inc
outs
push
xor
adc
mov
xchg
mov
loop
str
arpl
adc
call
int
mov
xor
mov
imul
sub
inc
and
or
sub
mov
cs
dec
xchg
pop
jmp
inc
shl
scas
xor
jl
cmc
mov
adc
mov
inc
adc
dec
loope
xor
push
xchg
dec
inc
xchg
test
es
cmp
dec
and
bnd
je
cmp
shl
adc
sub
and
xor
ins
push
rcr
fild
cmc
mov
jbe
mov
ss
ss
dec
and
mov
and
popf
ds
mov
sub
jecxz
in
jmp
mov
pop
fst
shl
mov
mov
jmp
adc
sbb
fistp
pop
xlat
push
push
jae
dec
mov
push
outs
or
xor
sbb
sbb
aaa
test
pop
and
lock
(bad)
mov
xlat
xor
aad
dec
and
pop
repz
pop
dec
leave
xchg
lock
xor
call
leave
nop
add
(bad)
xlat
inc
test
or
sbb
cmps
push
ror
xchg
outs
or
adc
pop
popf
repz
mov
ficomp
int3
test
dec
outs
dec
mov
imul
cwde
into
icebp
movs
or
xlat
rcr
stc
jg
jle
cmp
mov
xor
fsubr
(bad)
push
sahf
pushf
or
test
sbb
cmp
sub
cdq
rcr
and
pop
add
and
sub
inc
sub
push
in
ret
push
pop
cmc
or
xor
jmp
xor
xor
int3
es
int3
(bad)
retf
dec
cmp
push
addps
retf
xor
cmps
push
mov
mov
fcom
dec
push
fldenv
xchg
push
int3
call
and
shl
cmp
stos
pushf
jecxz
enter
sbb
cmp
mov
sbb
iret
jno
aas
add
js
pop
push
add
lods
imul
ds
popa
dec
popf
sub
xchg
add
or
xchg
sub
lds
bound
ss
xchg
test
(bad)
rcr
xor
xchg
loope
adc
cwde
inc
(bad)
adc
xchg
dec
das
das
inc
jmp
mov
cdq
in
mov
les
nop
fdivr
push
movs
pop
pop
popa
imul
jmp
dec
cdq
jbe
aam
jnp
fwait
mov
pushf
stc
(bad)
mov
popf
(bad)
push
xor
in
and
aas
scas
pusha
icebp
clc
int3
or
xchg
jg
cmp
xchg
je
mov
sub
hlt
mov
lods
inc
sbb
sub
popf
push
(bad)
imul
lods
das
pop
mov
sub
int
std
mov
mov
push
inc
inc
ret
(bad)
mov
stos
shl
sbb
in
or
neg
xor
ss
jno
js
pop
call
int
gs
shr
sub
int3
adc
jb
jl
or
rol
mov
(bad)
xor
add
dec
or
pop
ret
aas
push
sub
jmp
and
push
jmp
sar
hlt
daa
dec
push
loopne
sar
mov
jo
push
pushf
loop
push
stc
add
les
dec
outs
in
sbb
or
lahf
out
mov
clc
les
popf
mov
inc
loop
pushf
mov
dec
lds
mov
xor
push
add
xor
popf
mov
pop
pop
aam
jl
jno
(bad)
cmps
jmp
xchg
mov
and
in
and
data16
cld
adc
scas
bound
fld
cwde
sahf
imul
mov
mov
jbe
je
mov
xor
sar
in
sbb
pop
cmps
jae
rcr
cmps
jbe
add
out
test
add
ror
cmp
sar
fnstenv
add
cwde
jle
mov
push
mov
push
push
ror
xor
mov
sub
pop
and
je
ror
xchg
stos
lods
rcl
cmp
xor
clc
int3
das
or
jmp
sar
sub
xchg
aad
push
mov
sub
and
(bad)
aaa
inc
lds
adc
push
int
popf
mov
mov
mov
ja
bnd
leave
mov
cli
ret
push
inc
lods
mov
adc
xchg
inc
push
add
jb
aad
xor
jo
sub
xor
(bad)
stos
retf
or
rol
std
pop
dec
dec
sub
rdpmc
inc
fs
hlt
inc
jg
rcl
push
mov
into
enter
add
inc
ins
xchg
mov
test
push
test
scas
pop
test
cmp
(bad)
jmp
xchg
or
call
jmp
jb
vmovsd
mov
sbb
mov
hlt
cli
add
push
and
mov
cmp
inc
hlt
sub
cmp
fsub
and
shr
and
and
jg
jp
or
cld
retf
xchg
imul
inc
jbe
cmps
(bad)
mov
mov
jnp
pop
cmp
mov
mov
cmp
inc
add
popf
cmp
sbb
pop
pop
in
loope
or
mov
jp
or
scas
mov
cmps
push
adc
fcmove
sub
icebp
je
add
gs
std
or
gs
mov
test
mov
loope
xor
push
or
cmc
imul
or
pop
data16
inc
push
xor
(bad)
fisttp
fiadd
and
fistp
jb
test
popa
test
cmp
lods
ins
sbb
enter
adc
add
jmp
sub
xor
push
fisttp
sub
mov
xlat
out
or
stc
mov
mov
mov
adc
inc
repnz
cmp
fnstenv
inc
pop
mov
je
sbb
jne
iret
movs
cmp
clc
adc
xor
push
movs
and
jae
daa
das
ficomp
pop
add
sbb
mov
idiv
fwait
mov
cs
adc
das
jns
or
hlt
rcr
adc
iret
jge
and
mov
mov
(bad)
mov
push
jmp
lds
ins
aaa
sbb
cmps
pop
mov
pop
mov
das
test
and
(bad)
rol
lds
and
outs
cmp
stos
push
retf
push
mov
cwde
mov
lock
push
cs
shl
out
push
fwait
jmp
push
sti
xor
popa
and
shr
retf
ficomp
ins
push
mov
cmps
add
test
rcr
and
xor
lods
enter
gs
and
mov
dec
stos
ja
jmp
add
daa
or
fisubr
rol
(bad)
aaa
shl
dec
add
aas
sbb
stc
pop
les
xchg
mov
leave
popa
inc
inc
pop
mov
mov
push
aam
cmp
mov
inc
inc
(bad)
add
ss
fwait
cmps
push
add
mov
sbb
xor
lahf
lea
out
and
shl
nop
shl
pop
cmps
enter
mov
add
mov
mov
movs
sbb
test
fiadd
mov
xchg
mov
sub
ret
pop
rcr
dec
push
scas
daa
pop
scas
jmp
std
push
sbb
mov
lds
icebp
push
inc
call
mov
cs
fcomp
ins
or
out
pop
jl
xlat
fild
outs
imul
jl
mov
mov
push
xor
loope
gs
fisttp
jbe
cmp
xchg
add
or
not
xchg
ret
push
and
xor
dec
fld
mov
mov
dec
cmc
les
js
mov
sbb
in
mov
xchg
or
enter
out
cmps
mov
or
push
xchg
cmp
call
sub
mov
add
(bad)
iret
nop
jae
dec
adc
jg
inc
xor
call
mov
arpl
add
sbb
push
and
sti
inc
jae
sub
push
sub
jmp
or
dec
ins
arpl
ss
xchg
jecxz
adc
mov
cmp
jae
out
vmovaps
rcl
cwde
call
sahf
ja
sub
test
xor
push
inc
xchg
fwait
and
iret
xchg
into
loopne
stos
pop
cs
mov
and
imul
ret
dec
jge
cmp
pop
cld
mov
in
ins
and
mov
bound
aad
mov
push
sti
addr16
push
xor
mul
lods
xor
rol
out
fcmovnbe
cmp
cmc
sub
movs
cmp
mov
popa
ja
xchg
and
mov
pop
mov
ds
jae
xchg
mov
add
out
fs
add
push
int
mov
add
inc
retf
xchg
xor
mov
dec
pop
vmovaps
test
push
push
inc
cmps
loope
cmp
mov
mov
mov
push
das
dec
xor
jecxz
sti
nop
pop
mov
retf
repnz
mov
call
call
cmp
push
mov
sub
dec
imul
mov
mov
bnd
sbb
xchg
push
shl
cs
call
mov
ja
fbstp
and
mov
mov
mov
inc
lods
gs
repz
jae
adc
mov
cli
(bad)
rcl
dec
mov
mov
inc
dec
and
mov
jmp
jmp
(bad)
mov
mov
sub
jmp
or
into
sti
test
dec
push
push
push
dec
aam
jl
bound
xchg
fs
cmc
(bad)
repz
movs
inc
ds
inc
cmc
jbe
jbe
pop
cmp
add
in
sub
push
jno
adc
shl
das
pop
je
mov
(bad)
jl
sub
call
div
aad
inc
sub
scas
aaa
mov
fst
cmps
sub
fmul
cwde
std
dec
xor
int
pop
fcom
sbb
(bad)
or
aad
cmp
sbb
jge
pop
int
lds
xor
sti
repnz
mov
jge
out
mov
pop
or
push
lds
xchg
out
push
dec
sbb
test
push
sub
rol
imul
lahf
mov
adc
scas
mov
fistp
(bad)
cwde
(bad)
jecxz
test
ins
sbb
push
loop
ds
or
sahf
ds
jns
cmps
sub
dec
dec
in
push
(bad)
es
xchg
retf
aas
pop
dec
xchg
or
xchg
and
mov
sub
pop
jo
(bad)
mov
pop
cmp
in
lds
xor
or
les
xchg
mov
cld
test
mov
daa
mov
mov
sbb
mov
dec
sar
adc
push
mov
mov
rcr
mov
test
mov
addr16
mov
popa
push
cmps
sub
jp
mov
and
aaa
scas
adc
sbb
lahf
arpl
adc
cli
pop
stos
push
(bad)
arpl
jp
daa
mov
mul
xchg
leave
sub
clc
int
cmp
std
inc
xchg
in
mov
inc
adc
jg
push
outs
not
scas
test
inc
inc
popa
call
ss
sub
mov
xlat
pop
mov
or
cmp
sub
(bad)
xchg
gs
in
cdq
test
push
lods
ret
dec
or
jecxz
and
lods
adc
mov
mov
sbb
sbb
popa
mov
gs
pop
adc
push
int
gs
or
das
not
sbb
cs
inc
push
stc
xor
mov
pop
lods
pop
jo
sbb
pop
int3
inc
hlt
push
inc
ret
mov
push
(bad)
imul
hlt
or
or
cmps
ret
or
(bad)
sub
pop
outs
mov
jb
fwait
retf
adc
enter
out
aad
test
jmp
sbb
xchg
test
js
shl
cmp
cdq
inc
or
ja
imul
test
pop
dec
and
mov
adc
add
xchg
cli
scas
push
test
jle
imul
cdq
and
or
aaa
jmp
pop
loope
xor
cmp
lods
stos
lahf
iret
mov
fwait
push
or
loop
sti
jp
xchg
add
mov
xlat
inc
mov
dec
xchg
pop
fnstcw
inc
in
fcomp
sbb
and
mov
and
xchg
ja
lea
sub
stos
clc
stc
out
shl
or
sub
mov
fsub
mov
(bad)
scas
outs
inc
and
jae
xchg
cmp
and
xchg
scas
push
sbb
lock
scas
and
push
pop
movs
sub
mov
mov
pop
ins
lock
popf
nop
cmps
jb
cmpps
(bad)
pop
retf
pop
mov
retf
dec
add
lock
ror
cmp
inc
mov
xchg
inc
jle
je
mov
test
mov
(bad)
jle
pop
call
lock
popa
pop
pop
add
out
or
fdivr
mov
sbb
icebp
fcmovnb
xor
sahf
mov
aam
jmp
(bad)
out
xor
add
retf
push
call
out
imul
daa
jnp
(bad)
and
jg
push
inc
scas
aas
inc
lea
mov
mov
ror
repnz
lea
fcom
leave
jecxz
xor
mov
test
into
mov
pop
lahf
scas
ret
mov
cmp
inc
jp
push
pop
inc
and
fdivrp
jns
or
loop
(bad)
mov
ret
and
popa
lods
jp
cmc
iret
arpl
or
push
sbb
sub
inc
pop
aas
add
aad
clc
jns
ja
and
stos
and
icebp
(bad)
jnp
jno
cmp
push
mov
inc
add
sub
je
mov
pop
test
mov
jae
add
add
fdivr
cmp
mov
jle
push
(bad)
dec
pop
mov
cmp
out
mov
mov
push
mov
mov
mov
pop
adc
xchg
and
popa
cld
es
jns
add
repnz
(bad)
js
mov
inc
sub
daa
jle
fisttp
cwde
jle
mov
dec
jmp
cld
add
imul
or
push
add
shl
cmps
(bad)
xor
fs
sub
and
pop
mov
adc
and
inc
push
std
cs
mov
inc
jo
(bad)
dec
test
cmps
call
cmp
(bad)
mov
xchg
mov
pop
and
sub
popf
push
test
in
push
movs
loope
sbb
mov
not
je
cmp
lods
or
aas
mov
adc
inc
xchg
leave
pop
shl
add
lahf
in
jne
mov
dec
add
mov
mov
push
or
test
push
add
push
and
repz
jne
test
xchg
mov
nop
xchg
dec
xchg
pusha
pop
mov
jno
icebp
fidivr
(bad)
sbb
pop
repz
sub
(bad)
div
test
imul
and
sbb
enter
jb
mov
xor
mov
xor
aad
and
and
fs
and
mov
gs
rcr
mov
aas
inc
sub
idiv
nop
nop
outs
xor
jns
push
ins
fstp
retf
icebp
xor
adc
scas
jge
add
push
inc
leave
fnstcw
adc
add
sub
pop
out
and
stc
mov
icebp
jp
add
mov
jmp
jo
lahf
inc
int3
faddp
test
jle
les
jno
push
push
mov
push
adc
cmp
sbb
or
dec
jb
sub
push
dec
test
rcr
sub
mov
sbb
int
xor
sbb
xchg
jle
pop
or
mov
std
pop
push
cwde
sub
fldenv
repz
in
xlat
lods
ja
pushf
test
in
sub
sahf
retf
movs
pop
(bad)
dec
and
(bad)
mov
fcom
pop
xlat
enter
pop
jmp
out
pop
add
pop
xor
mov
jg
hlt
enter
dec
pop
and
arpl
or
retf
ret
sub
push
sti
sub
mov
mov
test
int3
cmp
or
xchg
pop
int
xchg
je
push
cmp
je
fwait
xor
or
rcr
ficomp
and
pcmpeqd
dec
dec
xlat
cmp
inc
cs
fdivr
xchg
mov
xchg
inc
adc
jmp
jnp
pop
sub
lods
ins
sub
mov
dec
push
cmp
leave
dec
aaa
jb
fsub
pop
xor
jbe
xlat
ds
arpl
(bad)
mov
cwde
jne
and
fldenv
or
sbb
push
mov
enter
dec
retf
and
in
fidivr
fs
mov
neg
out
(bad)
cli
aam
int3
retf
mov
rol
inc
sub
dec
xor
fwait
pop
mov
mov
and
mov
loopne
je
sbb
outs
mov
sub
push
test
and
jg
imul
mov
inc
adc
dec
stc
in
or
or
inc
jae
xor
(bad)
retf
xor
loopne
sbb
inc
outs
or
fsubr
sub
mov
test
xor
jmp
adc
pop
bound
mov
sbb
mov
mov
cwde
scas
push
adc
sbb
ins
ins
jmp
sub
popf
retf
(bad)
pop
out
mov
adc
out
push
adc
xor
sbb
push
rcr
add
push
(bad)
call
jmp
data16
aam
popa
bound
add
or
mov
jne
hlt
(bad)
loopne
cmp
loopne
ins
jp
xlat
in
and
jmp
and
cmp
int3
loop
call
jge
inc
or
xchg
sahf
push
repz
or
retf
cmp
fstp
pop
adc
mov
cmp
mov
lock
cmc
mov
clc
or
sti
(bad)
push
jmp
pop
mov
nop
mov
pop
inc
cmp
lods
inc
sbb
in
test
push
push
xchg
xor
fiadd
add
scas
sbb
mov
fsub
ret
imul
repnz
jl
inc
ins
ret
sub
cmc
inc
pop
push
(bad)
aaa
fs
dec
fs
pop
sbb
imul
outs
leave
push
cmps
cmps
inc
fs
je
enter
lods
xchg
mov
fist
cmp
in
call
jl
pop
mov
call
shr
shl
ret
xchg
xchg
mov
jae
push
sahf
nop
xchg
cwde
test
jmp
jmp
popf
jns
fcmovb
dec
loop
mov
mov
aad
mov
(bad)
dec
data16
int
es
shl
xchg
pop
add
lods
test
adc
mov
push
test
add
mov
xchg
jne
popf
sub
add
jbe
push
(bad)
jbe
mov
xor
inc
fdiv
mov
cld
add
mov
inc
and
test
cmps
add
add
mov
popf
ins
lea
cs
mov
mov
frstor
cmp
add
fld
inc
cmp
ret
xor
pop
lock
bt
pop
popf
cmp
adc
mov
add
test
pusha
xchg
pop
idiv
xchg
movs
push
ror
mov
jb
data16
outs
(bad)
xor
loope
xchg
mov
sbb
adc
push
mov
sahf
in
jno
ds
gs
nop
xchg
(bad)
jl
pop
mov
pop
retf
mov
retf
je
test
jnp
mov
aam
(bad)
gs
xchg
push
iret
cmp
aad
outs
enter
arpl
jnp
xor
inc
dec
and
loop
jbe
scas
les
mov
cmp
call
push
add
and
bound
movs
out
jno
sbb
loope
mov
dec
pop
inc
mov
bound
imul
sub
sbb
or
add
push
lods
int
dec
into
push
sahf
xlat
fdiv
mov
cmp
cmp
aas
pop
ror
add
dec
rcr
mov
call
loope
(bad)
es
retf
and
mov
dec
arpl
push
jnp
mov
sbb
stos
mov
jle
push
fnstcw
int3
retf
mov
sbb
imul
pop
sub
arpl
test
and
call
std
loope
xor
inc
and
sbb
pop
jbe
add
jg
test
out
and
pusha
std
pop
fxrstor
test
cmps
jge
push
cwde
(bad)
jmp
inc
in
pushaw
dec
xchg
xchg
imul
fsub
or
xchg
xchg
pushf
cmp
int3
xchg
jmp
xor
les
je
cmp
xchg
loope
js
mov
cdq
cmp
pop
push
xchg
mov
loop
dec
push
hlt
(bad)
in
and
mov
out
sbb
cmp
mov
jecxz
push
xchg
int3
xchg
xchg
mov
or
sub
and
imul
and
ins
jno
or
xor
loope
mov
pop
imul
div
in
push
sub
mov
inc
jge
add
pop
mov
and
and
shl
push
inc
out
push
sub
nop
rcr
or
mov
test
jp
into
jmp
push
add
mov
mov
mov
or
or
sub
push
stos
mov
pop
mov
cld
mov
dec
ret
ficomp
cdq
ins
xchg
je
daa
sub
push
and
stc
sbb
movs
inc
sub
xor
cmps
adc
add
fcom
sbb
push
or
xchg
mov
mov
(bad)
hlt
mov
aam
ret
movs
mov
fidivr
into
scas
and
stc
fnstcw
pusha
pusha
push
inc
ss
pop
neg
xor
ret
mov
aad
push
push
out
lds
sub
sub
(bad)
sahf
das
ins
std
or
sbb
sbb
iret
mov
inc
test
ror
dec
out
in
into
xor
and
adc
dec
mov
dec
out
jb
sbb
sub
dec
mov
xchg
sub
(bad)
adc
cmp
in
cmp
mov
push
mov
or
sbb
dec
cmp
lahf
sub
mov
dec
xchg
inc
pop
push
mov
mov
cdq
xchg
lahf
mov
jg
lock
(bad)
xor
push
sbb
mov
inc
cs
repnz
inc
pop
fsubr
sub
pushf
std
pop
adc
sub
sub
xor
mov
sbb
adc
push
inc
mov
ffree
loop
cli
xor
(bad)
cli
mov
jmp
mov
adc
mov
leave
icebp
sbb
mov
mov
fisttp
xchg
mov
loope
movs
mov
push
lea
jmp
(bad)
jg
int3
sub
data16
xchg
fsubr
repz
shr
js
vmovaps
and
jp
sbb
rcr
cld
cmp
inc
inc
loope
fimul
movs
xor
out
shr
mov
add
sbb
sub
inc
in
add
adc
add
fstp
ja
data16
mov
(bad)
scas
jns
cmp
dec
fcom
sub
mov
or
push
inc
shr
mov
js
dec
mov
or
cdq
fs
std
inc
push
xchg
in
sub
dec
sub
test
outs
push
shl
jnp
daa
mov
push
enter
cdq
push
sub
les
jns
xchg
lods
movs
imul
add
cld
data16
rcr
cdq
std
lds
ja
jmp
stos
sub
ins
sub
mov
dec
cwde
xor
mov
xlat
out
movs
pop
leave
ins
in
and
ret
int3
inc
mov
xchg
cld
add
lods
movs
sti
cmc
sbb
sbb
mov
gs
test
xchg
(bad)
mov
dec
mov
repnz
outs
in
pop
in
in
xor
pop
jge
sub
inc
pop
mov
adc
or
add
retf
fcom
inc
sub
push
push
sbb
mov
or
imul
ss
xor
int3
and
(bad)
xchg
ficom
rcr
gs
jbe
mov
mov
mov
xchg
sub
scas
ja
dec
sbb
push
lock
pop
jle
mov
push
jecxz
add
mov
arpl
xchg
stos
pop
or
or
pushf
fst
xchg
dec
xlat
push
mov
fldl2e
icebp
sub
xor
lock
mov
mov
xchg
(bad)
stc
push
ror
and
cmp
mov
lods
adc
pop
add
cmp
sbb
or
data16
pop
test
adc
jnp
fstp
add
icebp
loop
stos
popf
cs
push
loope
imul
or
add
mov
retf
scas
lock
xor
dec
mov
nop
(bad)
sub
leave
cmps
inc
jmp
(bad)
(bad)
repz
xchg
dec
cld
scas
push
repz
fcom
jp
mov
retf
xchg
test
mov
jle
in
xor
mov
xor
ret
in
mov
and
ret
adc
repz
test
jp
arpl
push
dec
sbb
std
pop
rcr
lods
(bad)
rcl
jbe
(bad)
mov
addr16
add
push
loopne
push
shl
and
lahf
add
into
pop
xor
add
sub
ds
add
pop
cli
or
(bad)
scas
loope
jno
or
pushf
and
jge
mov
inc
mov
mov
ret
cmps
inc
cmp
in
mov
add
mov
mov
stos
(bad)
jmp
nop
mov
not
push
jo
jmp
shr
xchg
scas
adc
and
sbb
fs
(bad)
jmp
stc
popa
sbb
stos
scas
cmp
sbb
je
pop
nop
mov
das
stos
repnz
cwde
hlt
mov
xchg
adc
gs
mov
out
repnz
add
adc
fstp
in
cmps
and
dec
rcl
dec
dec
or
xor
jmp
std
(bad)
jb
jae
or
xchg
(bad)
loopne
retf
mov
and
pop
cdq
fcom
scas
add
lahf
push
and
js
sbb
add
jns
outs
jb
jo
cmp
adc
movs
cmp
not
out
bound
xor
(bad)
jmp
sbb
add
jle
retf
mov
dec
and
ja
mov
cmp
sbb
add
mov
pushf
mov
dec
pop
lods
xchg
add
test
push
in
nop
sahf
ror
xchg
push
fisub
loopne
shr
fwait
inc
outs
mov
icebp
xchg
fdivr
je
jg
sbb
stc
lea
and
das
cmps
dec
test
sbb
imul
movs
push
inc
dec
xchg
rol
ins
aaa
adc
push
test
imul
cmp
push
xor
sbb
xor
add
ja
(bad)
push
sbb
adc
mov
push
lahf
loope
stc
sti
ja
pop
jg
xor
mov
cmp
into
mov
dec
inc
popf
out
xlat
ret
jle
int
mov
add
mov
mov
xchg
push
loopne
bound
call
push
je
cmp
out
sub
fwait
stc
clc
add
or
push
dec
cld
(bad)
icebp
fcos
das
cld
les
cmp
lahf
dec
inc
xchg
ja
pop
ret
cmp
out
jecxz
(bad)
sub
sbb
and
test
jmp
push
xor
inc
sbb
push
dec
movs
inc
adc
pop
icebp
dec
jmp
inc
cmp
xchg
fwait
shl
scas
stc
push
adc
lods
test
bound
in
xchg
push
pop
push
mov
mov
(bad)
test
push
mov
push
push
fnstsw
adc
or
popf
push
jmp
sbb
jns
inc
mov
adc
add
movs
out
adc
adc
push
mov
push
mov
out
add
adc
cdq
mov
shl
out
and
push
xor
(bad)
ror
xchg
sbb
adc
mov
rol
stos
ret
cld
cmp
dec
mov
mov
mov
cmps
sbb
adc
in
push
pop
xor
movs
iret
pusha
jl
mov
add
push
or
je
lods
adc
movs
ret
popf
dec
fnstsw
inc
popa
loope
(bad)
std
sahf
gs
sbb
dec
pushf
sub
shl
arpl
ins
je
fcmovu
adc
mov
mov
dec
leave
jp
mov
shl
adc
fs
fistp
push
mov
pop
sbb
or
dec
leave
mov
push
xchg
stos
jmp
mov
sbb
mov
and
pop
repnz
cmc
popa
pop
lods
pop
mov
inc
jns
cmovp
push
in
neg
popf
cld
ja
push
jo
es
mov
mov
jnp
push
push
int
ja
int
aaa
pop
mov
movs
nop
xchg
mov
cmp
pop
jns
popa
ret
arpl
mov
mov
fstp
div
and
sub
call
pop
mov
pop
adc
add
xlat
aad
xchg
aad
mov
pop
repz
rcl
das
dec
mov
xor
mov
cmp
sub
adc
adc
xor
sub
cmp
sub
mov
call
pusha
pop
loop
ins
sub
inc
push
mov
pop
jg
sub
inc
jp
adc
add
cwde
inc
rol
dec
ins
dec
sub
sbb
outs
test
adc
(bad)
loop
or
mov
xlat
cmc
push
lods
aas
out
out
jnp
cmp
mov
push
inc
push
push
pushf
xor
mov
mov
xor
add
cwde
xchg
cdq
mov
pop
and
mul
cmp
sub
xchg
cmp
test
daa
sbb
jb
pop
imul
mov
out
scas
(bad)
pop
and
lds
sar
pusha
out
movs
push
jl
mov
mov
or
sub
fs
mov
out
leave
js
jno
and
push
fcmove
pop
adc
push
(bad)
ret
inc
adc
jmp
mov
call
test
sbb
sahf
aam
pop
mov
ins
xlat
push
pop
xchg
sub
iret
or
add
and
xchg
imul
dec
xor
fistp
shr
pop
sub
scas
pop
push
mul
sbb
mov
push
push
or
mov
imul
movs
and
jmp
pop
fwait
cli
iret
xor
mov
movs
ja
sub
cwde
data16
adc
outs
int3
lds
mov
inc
pop
sbb
pop
int
test
fst
cmp
lods
in
cdq
test
xchg
xor
mov
adc
xchg
push
lds
pop
(bad)
sbb
xor
and
cwde
pop
(bad)
aam
xchg
mov
dec
imul
push
add
push
leave
lock
iret
scas
stos
jno
add
gs
jbe
mov
and
dec
aas
mov
fnop
imul
push
push
pushf
rcl
push
iret
cmp
aaa
jl
mov
xchg
mov
aas
test
dec
and
jo
mov
inc
movs
icebp
das
add
sbb
jmp
jne
out
int3
(bad)
pop
jbe
mov
mov
cmc
mov
mov
popa
add
inc
int
lea
rcl
jb
sub
aas
fisttp
add
ret
xchg
out
push
cli
out
in
xlat
xor
imul
rcl
stc
sbb
xor
in
inc
outs
xlat
fisttp
add
push
fcom
sbb
mov
in
jp
(bad)
ins
sub
pusha
mov
push
push
movs
retf
jnp
aaa
mov
push
dec
repnz
ret
and
pop
xlat
les
ins
lods
imul
sbb
cmp
les
dec
cmp
sti
cmp
pop
mov
xchg
jb
or
loop
into
mov
fcom
ror
iret
cmp
and
retf
in
add
add
into
loopne
fwait
(bad)
xor
pop
cmp
sub
sbb
dec
mov
es
add
mov
mov
push
sub
call
cmp
out
movs
bound
enter
fbld
jle
pop
jmp
out
cs
jns
dec
jg
mov
mov
repz
jp
cmps
in
fild
fldl2e
fild
retf
jo
bound
sub
or
repnz
fnstenv
movs
push
xchg
pop
lahf
mov
mov
cmp
lds
call
lods
in
jg
out
push
inc
cmp
or
test
push
movs
xchg
(bad)
clc
pop
popf
xlat
jg
xchg
lock
pop
inc
lds
mov
pop
or
pop
sub
mov
push
sub
pop
or
cmps
pop
cmp
pop
mov
adc
cmp
jp
cmp
es
jno
add
pop
arpl
lahf
jle
mov
dec
push
push
repnz
push
neg
lods
test
imul
dec
and
pop
aas
cmps
ror
sub
and
push
fidiv
add
dec
jns
push
xabort
outs
out
mov
and
mov
clc
xor
push
xor
popa
xchg
add
shr
pop
push
cwde
aad
sbb
pop
sti
jae
inc
(bad)
cmp
dec
mov
push
push
pop
and
inc
push
and
adc
cmp
adc
or
test
xor
xor
loop
xchg
repz
repz
movs
ret
mov
lahf
add
sub
push
push
push
inc
xchg
es
test
pop
data16
dec
xor
scas
jmp
push
mov
dec
ss
(bad)
jmp
dec
or
sbb
inc
pop
scas
nop
mov
inc
or
pop
xchg
das
push
jo
or
add
push
pusha
gs
jne
and
lods
jle
mov
call
add
push
mov
shr
(bad)
in
dec
aam
xchg
fisubr
ins
jmp
inc
push
(bad)
repnz
push
sti
retf
mov
add
dec
(bad)
mov
dec
cmp
jmp
dec
dec
xchg
(bad)
bound
sub
pop
in
add
cwde
push
cmp
addr16
cmp
in
inc
jb
fiadd
sub
and
cli
push
dec
shr
pop
jp
add
aaa
dec
mov
xchg
out
imul
or
sub
pusha
rcr
cmp
sahf
mov
xchg
fsubr
jle
jnp
mov
xchg
push
add
sub
div
lea
jnp
cmp
dec
inc
and
jmp
inc
in
aad
gs
call
movs
pushf
lahf
and
(bad)
fsub
xchg
iret
lods
jge
pop
push
pop
cdq
and
and
push
movs
sahf
push
xchg
pop
dec
imul
ret
ja
xor
xchg
inc
rcr
mov
rcl
retf
mov
(bad)
mov
std
hlt
inc
sub
jle
mov
jo
in
jl
xor
pop
jae
push
es
std
out
sub
dec
pop
jno
jmp
hlt
jbe
xor
pop
pop
mov
mov
xor
popf
in
fs
cdq
add
jnp
inc
cmp
xlat
or
ins
pop
add
xchg
and
in
jb
rcl
jnp
add
or
add
and
aam
sub
lahf
cwde
jg
push
mov
cmps
pop
cmp
dec
xor
lods
inc
out
leave
push
push
imul
int
cmp
mov
inc
mov
dec
and
fadd
and
outs
(bad)
iret
stos
push
mov
movs
jne
retf
mov
push
aaa
rep
sahf
dec
mov
fdiv
ret
mov
fsubr
and
cld
(bad)
(bad)
inc
pop
in
dec
mov
in
dec
pop
mov
mov
pop
out
mov
add
sbb
cmp
adc
dec
sbb
sub
xor
mov
imul
stc
push
mov
dec
call
mov
lea
(bad)
dec
push
fcmovu
add
pop
mov
daa
sub
cld
fiadd
aam
shl
ins
lods
test
fmul
mov
aaa
xchg
lods
sub
add
mov
retf
adc
push
dec
mov
fs
or
and
pop
fisubr
cwde
out
adc
scas
jg
test
mov
test
push
add
dec
xchg
cmp
(bad)
pop
dec
data16
sahf
push
push
mov
push
adc
inc
dec
mov
sub
out
cli
ja
mov
mov
mov
retf
fsubr
sbb
sub
mov
cs
mov
xor
ins
sbb
xchg
and
ret
mov
into
out
in
aaa
adc
mov
xor
jle
xchg
or
and
cmps
int
loopne
push
test
jo
mov
das
popa
xchg
loope
push
aas
in
pushf
ds
and
bound
mov
scas
xchg
(bad)
fst
bound
sbb
push
mov
enter
(bad)
mov
into
dec
and
mov
mov
mov
inc
movs
mov
sahf
sub
cmps
push
fimul
add
inc
sub
ins
mov
retf
mov
arpl
inc
outs
jno
mov
push
sub
js
cs
inc
dec
arpl
out
out
push
jge
out
add
scas
mov
shl
add
mov
test
jno
mov
dec
xor
add
cmp
dec
add
jae
(bad)
mov
xchg
loopne
mov
sbb
int
pop
push
jecxz
loop
out
aad
mov
out
(bad)
in
sbb
(bad)
jmp
lds
mov
movs
cld
ja
ds
mov
ins
jl
pop
mov
adc
(bad)
scas
and
cmp
nop
xchg
rol
adc
stos
adc
pop
mov
jns
jle
popa
shl
cmp
mov
cmp
xchg
shr
(bad)
pushf
inc
pop
inc
adc
rol
pop
test
inc
daa
mov
dec
addr16
or
data16
retf
sbb
inc
jbe
push
lahf
or
shl
ror
fcmovne
ror
xchg
dec
call
and
push
cvtpi2ps
cwde
dec
(bad)
xchg
pop
jl
cwde
(bad)
repz
repnz
cli
test
jp
out
imul
(bad)
repnz
iret
(bad)
jmp
fld
xor
mov
push
retf
dec
adc
dec
push
in
pop
retf
clc
lods
add
push
cmps
daa
fisttp
jle
inc
mov
or
xchg
xor
jle
push
add
mov
mov
pop
je
stos
push
jne
addr16
or
nop
dec
adc
xlat
inc
int3
dec
sub
xor
fisttp
inc
ror
rol
sahf
jl
jmp
in
(bad)
scas
push
out
adc
sbb
arpl
sbb
cmp
mov
ret
lods
pop
mov
mov
outs
mov
int
(bad)
jle
xor
retf
stc
stos
mov
mov
sub
pushf
and
push
stc
arpl
cmps
popf
(bad)
loopne
add
sti
sub
shl
and
mov
inc
hlt
test
mov
cmp
fdiv
pop
push
cs
ss
mov
ret
push
shl
retf
addr16
add
xlat
cmp
jl
aas
pop
(bad)
cmp
cwde
jmp
stos
bound
outs
inc
dec
mov
mov
cmps
xor
das
push
sar
push
xor
movs
cmc
mov
test
sbb
push
mov
fnstsw
sbb
jns
movs
cmp
xor
push
mov
js
pop
mov
dec
xor
and
mov
call
mov
push
xchg
repz
hlt
xchg
xchg
cmp
dec
xor
sub
imul
ds
pop
pop
fdiv
mov
cmp
xchg
pop
add
and
gs
ins
cmps
test
pushf
ds
gs
jp
fild
arpl
ret
adc
stc
push
in
mov
sub
jecxz
cwde
sub
scas
call
mov
cmp
mov
sbb
mov
inc
iret
loope
mov
xchg
rcr
imul
jecxz
add
ja
(bad)
lea
stc
mov
lods
outs
ret
pop
arpl
call
mov
cmp
dec
fcompp
xchg
(bad)
rcr
xor
mov
(bad)
cld
add
loop
(bad)
mov
push
shr
(bad)
ficomp
scas
call
cdq
xor
sub
mov
mov
jg
push
push
test
jns
enter
adc
inc
cld
mov
or
lods
and
jmp
dec
retf
rol
mov
push
xor
jecxz
xor
cli
js
mov
rol
push
loope
mov
jmp
into
jg
add
jns
mov
sar
shr
ss
mov
jl
loope
pushf
nop
pusha
mov
gs
xor
fadd
test
lods
aad
cmp
push
cwde
inc
xchg
enter
repz
sbb
push
int3
mov
dec
sbb
call
pop
pop
xchg
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
fcmovu
adc
es
add
pop
in
pushf
test
loopne
sub
jle
iret
add
fldcw
lock
fnstenv
xor
test
stos
jge
cmp
inc
mov
adc
mov
add
pop
xchg
sub
in
and
mov
lahf
mov
aas
aas
stos
xlat
enter
out
jp
sar
jecxz
mov
fisttp
push
xor
test
outs
js
pop
or
repnz
jmp
pop
and
rcr
fnstsw
jp
ret
std
je
mov
imul
retf
xor
push
jp
(bad)
jp
or
xrelease
sub
fs
sub
int
adc
xlat
xchg
inc
xchg
sub
int3
and
ficom
jno
mov
lahf
mov
adc
mov
adc
inc
in
inc
xchg
and
add
repnz
mov
rol
pop
stos
mov
sti
dec
(bad)
aaa
mul
push
pop
in
push
mov
imul
and
xor
out
lds
xchg
pop
stc
mov
cwde
mov
xchg
sbb
cs
sbb
inc
in
movs
(bad)
fisttp
or
jno
sahf
loopne
cdq
mov
cmp
and
pop
push
mov
lea
retf
and
ret
ja
into
xchg
xor
dec
fcom
je
ins
or
push
fmul
enter
push
dec
push
add
pusha
push
enter
les
inc
call
(bad)
fld
(bad)
push
cmps
test
adc
mov
or
rol
sbb
jb
rcr
shl
cmps
mov
push
cld
rcr
fwait
inc
cmp
retf
sahf
inc
xchg
ret
int
and
sbb
push
cli
xor
adc
call
pop
fisubr
ds
lods
mov
cmp
cs
or
fistp
jle
dec
scas
icebp
cli
or
icebp
(bad)
xor
xor
mov
adc
jmp
jmp
inc
jb
out
(bad)
sub
jle
stc
pop
or
scas
push
jo
mov
adc
pop
fld
adc
xor
in
sub
dec
push
cmp
movs
jle
and
jge
add
jl
xor
mov
test
js
les
stc
fwait
iret
sbb
dec
xchg
jmp
jnp
push
in
or
call
jbe
pop
jg
inc
clc
add
fs
mov
fild
sar
cdq
mov
push
pushf
sub
arpl
mov
mov
pop
pusha
fcomp
push
push
outs
(bad)
xchg
pop
dec
stos
sub
inc
mov
and
sbb
mov
and
push
cs
dec
jle
es
inc
cmp
inc
push
cmps
sbb
iret
push
and
xchg
sub
(bad)
mov
lds
pop
cmp
mov
mov
cmp
or
mov
mov
pop
xchg
iret
shl
dec
inc
rcr
mov
imul
mov
(bad)
fsub
pop
movs
in
sub
cli
or
fwait
enter
jmp
push
jns
sti
cs
lods
jnp
(bad)
cmp
pop
jmp
sbb
gs
push
inc
jp
and
adc
loope
mov
cs
cs
ret
mov
pushf
popf
pop
cdq
neg
adc
mov
retf
jno
aas
loop
pop
popf
rcr
popf
dec
lahf
int3
pop
rcr
fistp
cmps
pop
mov
add
sahf
cli
rcr
out
stos
add
test
xchg
nop
jge
xchg
dec
ins
or
pop
cwde
sbb
and
xor
les
icebp
sbb
adc
in
adc
retf
ins
jnp
cdq
mov
push
mov
int
jp
mov
(bad)
into
arpl
mov
push
adc
adc
or
sub
into
(bad)
mov
test
mov
xchg
push
rcr
outs
fisub
jecxz
pop
jmp
or
mov
jne
or
push
jo
test
cmc
jmp
sub
not
mov
loope
mov
loopne
cmp
pop
push
mov
dec
mov
push
rcr
mov
jb
jl
ret
mov
movs
das
sahf
scas
into
clc
dec
cmp
mov
imul
out
imul
ins
pop
push
stos
or
jns
gs
and
idiv
je
xchg
test
jbe
retf
mov
xchg
sub
movs
mov
pop
add
mov
mov
xchg
xlat
adc
(bad)
setge
and
dec
cmp
js
cdq
pop
fs
pop
stc
dec
in
data16
scas
call
(bad)
shr
and
aad
loop
scas
lds
fwait
cli
fsubr
mov
adc
retf
sub
mov
jns
outs
dec
cvtdq2ps
rcr
out
cmc
stos
es
das
loopne
shr
push
(bad)
jae
push
xor
jle
dec
int
stos
push
addr16
fild
adc
pop
ja
sahf
aam
mov
cwde
sbb
dec
xor
retf
lahf
in
in
clc
adc
mov
aaa
pop
adc
(bad)
ds
enter
scas
out
mov
dec
push
and
lahf
mov
mov
test
adc
jl
xchg
xchg
jnp
cmp
stos
ret
xor
cmp
pop
jle
jmp
cs
pop
in
push
adc
mov
mov
mov
mov
js
sub
pusha
inc
pop
add
adc
jp
icebp
sub
and
lock
mov
test
push
ss
outs
pushf
repz
cmp
(bad)
jp
cmps
mov
mov
mov
dec
mov
or
xor
outs
push
in
lahf
out
data16
dec
sub
and
scas
ror
call
push
add
inc
std
or
mov
xchg
mov
cmps
retf
ret
dec
pushf
dec
jle
loop
sahf
mov
mov
(bad)
clc
into
fdivr
dec
push
movs
aas
xchg
retf
hlt
cmp
(bad)
mov
inc
loop
rol
loopne
or
jbe
jle
inc
out
lahf
mov
movaps
cmp
arpl
sti
daa
fcom
jmp
xchg
enter
push
daa
int3
jae
ja
or
cmp
inc
loope
sbb
cmps
sbb
and
ds
retf
inc
imul
jmp
push
mov
inc
ss
and
movs
cwde
(bad)
pop
mov
fistp
rcl
jge
mov
cs
pop
mov
xor
aam
pop
push
ja
mov
jo
ret
ss
add
inc
sub
dec
inc
lods
cmps
retf
sbb
fstp
add
xchg
add
out
inc
xor
lahf
je
xchg
ja
fldenv
add
add
sub
add
shl
shrd
xchg
xor
(bad)
mov
mov
jecxz
inc
adc
retf
out
or
shr
jnp
xchg
and
out
daa
cmps
call
lock
adc
dec
nop
jl
cwde
enter
out
add
cmp
cmp
dec
mov
ror
inc
aam
ds
add
stc
clc
inc
outs
mov
cmps
fwait
bound
gs
and
xor
or
ds
out
out
imul
push
mov
fsub
cs
addr16
jb
xlat
imul
mov
(bad)
ja
push
test
shl
aaa
cld
mov
(bad)
and
or
js
inc
xchg
cmp
cs
ficomp
loop
cmp
arpl
push
lds
jmp
xchg
xchg
mov
outs
daa
(bad)
sbb
jnp
rcl
adc
sbb
daa
mov
arpl
stos
xchg
outs
push
and
scas
dec
pop
push
in
push
or
adc
scas
out
je
ret
mov
xchg
sub
inc
fld
mov
fnstcw
cmp
mov
sahf
mov
xor
out
add
mov
pop
sbb
cmp
div
fmulp
stos
inc
pusha
sub
leave
fidiv
fist
cmp
jmp
lock
dec
aaa
mov
(bad)
out
sub
jmp
cmps
mov
sbb
mov
stos
adc
nop
xchg
ficom
arpl
hlt
push
int
dec
fmul
mov
jge
mov
mov
ins
pop
mov
xchg
out
call
aas
mov
dec
inc
sbb
xor
fsubr
retf
xchg
lock
sub
cdq
push
or
(bad)
aas
icebp
stos
scas
ret
pop
dec
jmp
loopne
cli
aaa
xor
push
lods
sbb
loopne
lods
or
pushf
inc
scas
popa
sbb
xchg
js
mov
xor
movq
sub
cmp
mov
or
jecxz
mov
xchg
and
lods
or
sub
adc
daa
int3
jbe
popa
retf
sahf
sbb
mov
sbb
cld
call
jg
dec
mov
jmp
iret
sbb
and
cwde
nop
mov
lods
xor
mov
xchg
adc
or
rcl
xchg
ja
pop
mov
fnsave
addr16
cdq
pop
push
mov
sbb
and
inc
adc
push
daa
jo
adc
pusha
mov
sbb
(bad)
dec
mov
in
outs
rol
mov
and
mov
movzx
sbb
sub
retf
outs
popf
pusha
sub
inc
pushf
mov
outs
mov
inc
fistp
add
mov
lea
test
aaa
(bad)
pop
xchg
mov
mov
and
pop
lods
pop
sub
ss
adc
pop
mov
sbb
pop
(bad)
sbb
and
popf
test
sbb
dec
xchg
mov
iret
mov
test
ficomp
ret
sub
or
cmp
pop
mov
mov
jp
sbb
jnp
fisttp
enter
shl
pushf
fnstcw
xchg
pop
dec
jmp
cmp
lods
cmc
in
xor
sub
dec
sbb
adc
xchg
jp
stos
xchg
jle
cmp
shr
sub
je
stos
loop
and
or
into
push
fxch
jns
gs
sbb
sti
enter
xor
xlat
mov
aaa
pushf
or
mov
mov
and
sub
jle
add
push
les
jmp
movs
movs
dec
clc
and
xchg
dec
test
int3
into
adc
mov
dec
shl
sub
cmp
pop
jge
mov
sti
adc
test
ret
loope
loop
outs
xor
xchg
(bad)
cmc
and
movs
mov
inc
push
or
cmps
pushf
dec
mov
clc
fstp
in
cmp
idiv
mov
sub
push
or
data16
add
inc
or
xchg
jecxz
in
xor
(bad)
dec
enter
mov
je
out
dec
and
mov
addr16
xlat
imul
jp
mov
repnz
xor
test
popf
mov
push
dec
push
dec
les
and
dec
gs
arpl
aas
jmp
enter
push
mov
pop
mov
xor
mov
pop
and
dec
sahf
call
lahf
mov
in
xchg
jne
inc
inc
lahf
xchg
je
add
xor
iret
add
popf
cld
in
in
sbb
fdivr
sub
shl
push
arpl
add
stos
xchg
cmp
mov
mov
mov
adc
dec
(bad)
jle
pop
test
mov
out
pushf
mov
pushf
mov
hlt
xor
hlt
push
leave
xchg
push
jge
jg
mov
push
push
mov
mov
inc
or
sbb
jmp
jnp
mov
call
cmc
mov
push
loope
(bad)
int
pusha
int
and
out
cwde
stos
ins
cmps
int3
jmp
add
(bad)
push
fwait
mov
test
in
out
call
test
and
xchg
aad
add
add
lea
stos
(bad)
lock
data16
dec
sub
int
sub
jno
ins
mov
mov
hlt
xor
popa
dec
stos
pop
mov
adc
aaa
repz
(bad)
cld
pop
and
cmp
test
iret
add
clc
jno
shr
sbb
shl
and
and
xchg
lds
ret
push
stos
fld
stos
sar
aaa
or
pop
and
push
sbb
add
rcr
leave
xchg
in
sub
xchg
sub
iret
push
repnz
fadd
stos
jno
mov
popa
paddusw
mov
mov
es
pop
int3
push
inc
(bad)
jno
and
sub
(bad)
fnstenv
fistp
scas
movq
sbb
xor
jnp
mov
popf
jmp
fs
(bad)
cmp
mov
push
cmp
rcl
pop
push
jp
add
inc
lock
fcom
aad
xchg
adc
mov
je
jle
mov
mov
sar
push
call
xor
cmc
sub
dec
xchg
xchg
cmps
xor
sbb
out
sgdtd
xor
mov
scas
jns
lods
add
mov
int
inc
repz
mov
pop
mov
out
in
sahf
and
sbb
addr16
aas
test
dec
pushf
out
addr16
dec
mov
jmp
push
imul
movs
aad
mov
and
in
mov
pusha
xlat
js
push
imul
jmp
and
call
fsubr
stos
pop
cmps
and
arpl
imul
mov
aaa
lods
dec
mov
cs
out
xchg
xchg
fstp
fs
mov
data16
xor
fwait
and
ja
jp
outs
fxch
jno
ja
pusha
dec
lea
or
or
push
lods
call
dec
bound
adc
mov
sub
push
rcr
inc
adc
jo
(bad)
mov
scas
fidivr
movs
int
ins
jb
jae
stos
mov
imul
sbb
and
stc
sbb
add
and
mov
mov
and
add
aas
lods
push
sbb
stc
mov
aas
fistp
push
leave
cmps
aam
inc
fdivr
fdivr
call
shr
leave
jae
(bad)
push
shl
xchg
pop
scas
xchg
mov
aad
lods
push
addr16
cld
push
xor
movs
jbe
call
or
pcmpgtw
push
mov
sub
sbb
outs
rol
sbb
adc
inc
addr16
sbb
test
hlt
div
aas
call
sbb
xchg
dec
sahf
fucom
mov
mov
mov
inc
or
not
rcl
cmps
std
int
mov
sub
adc
loop
adc
ins
cmp
(bad)
call
inc
add
repnz
dec
or
mov
xor
dec
imul
xchg
dec
int
sbb
adc
sub
fiadd
fcmovu
lahf
inc
push
or
ins
mov
mov
push
mov
pop
or
repz
loopne
mov
stos
mov
adc
sbb
in
scas
jbe
mov
pop
enter
je
cmps
in
push
fisub
clc
cmps
jne
inc
pop
inc
test
dec
popa
stos
pop
movs
xchg
dec
adc
xor
test
icebp
add
mov
xor
dec
push
push
xlat
pop
je
mov
xchg
lods
xchg
inc
(bad)
movs
std
mov
rcl
or
in
push
xchg
inc
hlt
xchg
xchg
rcr
xchg
sti
pusha
xor
mov
fs
or
cmp
jns
xor
(bad)
repz
in
cli
ret
mov
and
xor
and
mov
in
xor
popa
xchg
adc
inc
cld
and
pusha
and
dec
xchg
xor
mov
dec
xor
lock
xchg
test
sub
push
push
mov
pop
ret
fcmovu
(bad)
sub
jmp
xlat
imul
cs
mov
ins
mov
push
out
mov
push
or
xor
pop
add
mov
rol
sub
rcl
stos
(bad)
shl
test
push
lock
mov
aam
dec
daa
loop
fiadd
es
xlat
shr
inc
(bad)
jmp
je
lahf
adc
mov
je
aam
fidivr
push
add
hlt
lock
nop
popa
mov
lods
call
iret
bound
cs
pop
inc
add
and
adc
add
xchg
add
fldcw
jmp
test
(bad)
push
push
dec
mov
mov
jp
(bad)
repz
or
adc
jle
imul
pusha
call
inc
or
fiadd
int
inc
push
mov
cld
sti
and
xchg
test
xchg
mov
cmps
hlt
mov
add
in
pop
into
aaa
pop
dec
mul
adc
mov
xchg
iret
ds
pop
stc
clc
int3
mov
sub
inc
(bad)
addr16
fnstcw
inc
scas
int3
push
daa
push
leave
test
imul
pushf
fmulp
add
dec
(bad)
inc
mov
sub
bound
sub
jbe
cmp
mov
cmps
sub
sbb
call
movs
push
mov
jae
sahf
icebp
cwde
sbb
std
add
cwde
leave
fild
mov
cmp
push
jbe
and
cdq
sbb
nop
sub
sub
test
sbb
cli
pop
xor
mov
daa
fnsave
sar
mov
fild
jg
mov
mov
das
imul
mov
mov
shr
in
dec
pop
cli
stos
ret
and
mov
fdivrp
pop
pusha
ds
sub
fstp
daa
mov
push
ret
xor
imul
jnp
pop
pop
cmc
or
or
pop
cdq
pop
and
mov
dec
je
(bad)
retf
test
mov
xchg
xchg
push
mov
mov
mov
mov
inc
add
push
mov
sub
pop
push
cs
into
xchg
jl
push
fsubr
rcl
dec
push
mov
or
fcomp
sub
cmp
xchg
movs
arpl
mov
call
and
fimul
aam
ins
inc
cmp
inc
jg
jo
and
ds
mov
(bad)
sbb
inc
sbb
xor
and
mov
sbb
scas
test
xor
adc
push
(bad)
cmp
int3
xchg
or
jmp
outs
jmp
call
sar
pop
cmp
pop
sub
sar
jno
enter
iret
inc
sbb
aaa
add
fisttp
pop
dec
mov
and
jns
pop
xor
push
fidivr
aam
push
cmp
sub
cmp
or
int
popa
mov
sbb
mov
xchg
and
es
jmp
push
adc
add
test
ror
outs
sub
div
loopne
dec
shl
scas
mov
pop
or
xor
sar
mov
sub
adc
aad
push
mov
inc
or
(bad)
sbb
xchg
lods
int3
mov
outs
mov
jnp
xor
cld
addr16
or
inc
daa
outs
(bad)
retf
inc
rcl
adc
pop
sti
popf
mov
pop
aad
xor
repnz
jmp
leave
mov
jb
movs
cmp
inc
inc
sub
jl
inc
ret
popa
std
ret
fistp
out
clc
pop
aam
push
not
fidiv
jbe
pop
cmp
cdq
jge
add
mov
mov
and
pop
push
imul
loopne
mov
adc
popa
sar
add
pop
lock
pusha
mov
fs
and
or
(bad)
shr
or
and
out
cmp
sbb
loope
xlat
(bad)
mov
sbb
inc
repnz
out
(bad)
movs
popa
lea
jle
sbb
jl
out
push
enter
ins
fcmovnbe
leave
stos
mov
int3
add
fist
fisub
lock
ret
jg
(bad)
and
ja
mov
(bad)
loope
mov
xor
test
push
xchg
in
cs
aaa
outs
dec
nop
ja
mov
cli
mov
mov
dec
sbb
add
push
out
pop
xchg
or
pop
aad
jae
mov
inc
xor
test
(bad)
scas
iret
fisttp
jo
jle
sahf
loope
cli
iret
jmp
add
iret
xlat
jnp
xchg
ds
jb
add
or
mov
dec
dec
cmps
sbb
in
mov
mov
call
cdq
xchg
cmp
inc
test
(bad)
mov
dec
sbb
sbb
sbb
ss
nop
xor
push
push
cld
out
push
mov
outs
ins
sub
adc
xor
mov
das
cmp
loopne
mov
ret
stc
dec
out
in
mov
aaa
or
xor
imul
push
jmp
aam
jecxz
frstor
lea
or
pop
mov
sbb
push
push
xchg
fwait
mov
stos
into
popa
adc
sti
mov
loop
xor
sbb
mov
sbb
in
cli
sub
dec
mov
movs
movs
clc
mov
mov
xor
(bad)
add
imul
pop
stos
out
stos
pusha
jnp
enter
loopne
mov
sbb
and
int3
push
(bad)
enter
les
inc
ja
mov
mov
cdq
repz
movs
dec
or
fisubr
fcom
out
jnp
arpl
sbb
inc
xchg
les
adc
fucomp
mov
pop
and
jne
out
adc
adc
enter
mov
cmp
sbb
xchg
fisubr
dec
mov
mov
mov
cmp
cmp
in
push
arpl
push
adc
inc
retf
loop
test
ss
cmp
jge
sub
jno
inc
les
xchg
jl
pop
pop
movs
sahf
mov
mov
lods
mov
mov
inc
(bad)
cmp
test
int3
imul
repnz
sub
cmps
dec
xchg
push
xchg
leave
out
aas
sbb
adc
scas
mov
mov
push
repz
outs
fucom
mov
mov
addr16
fisttp
bound
retf
inc
push
stos
imul
or
cmp
mov
and
sub
in
outs
cmp
repnz
pop
push
dec
push
dec
lds
mov
scas
and
imul
or
adc
mov
cmp
cmp
dec
hlt
xor
cdq
aam
sub
test
mov
adc
dec
mul
add
pop
(bad)
sub
fdivr
stos
fcom
pop
xchg
ror
icebp
inc
jl
mov
mov
bound
inc
lods
jl
inc
mov
mov
lods
in
cmp
rcl
sbb
push
pop
pop
inc
shl
cmps
adc
pop
enter
(bad)
push
out
movs
retf
xchg
arpl
jp
aad
sub
adc
pop
test
div
sub
repz
mov
aas
jb
jecxz
(bad)
ds
push
cli
jbe
xchg
in
lock
cdq
fadd
int3
iret
lds
clc
arpl
lea
mov
adc
jmp
inc
cmp
stos
rol
inc
sub
inc
mov
cld
int3
add
push
(bad)
pop
ja
xchg
(bad)
(bad)
push
mov
push
(bad)
mov
stos
xlat
leave
pop
sub
icebp
fidivr
pop
push
push
inc
rcr
cmp
or
jmp
inc
stc
movd
adc
jb
cwde
dec
test
add
push
xchg
data16
cmp
aaa
jo
xor
out
jg
scas
push
and
inc
stos
pop
inc
data16
jne
add
mov
pop
js
xchg
push
jb
sub
mov
mov
mov
repnz
and
or
add
aaa
sub
push
out
inc
fcom
(bad)
and
dec
scas
ss
sub
jecxz
sub
stc
mov
dec
in
(bad)
cmps
pop
imul
xor
mov
add
daa
dec
mov
mov
mov
fwait
pop
jp
adc
sbb
or
mov
lea
in
pop
inc
enter
(bad)
inc
mov
dec
jge
push
and
cmps
in
mov
(bad)
test
push
push
repnz
fadd
cmp
sti
xchg
jmp
cmp
xchg
hlt
sub
mov
test
push
mov
shl
pushf
iret
outs
inc
movs
adc
lods
(bad)
jb
jno
arpl
sbb
xor
sub
addps
xchg
out
fild
add
and
and
sub
(bad)
stc
pusha
xchg
aam
jp
sub
pushf
loopne
nop
xchg
mov
les
dec
dec
push
pushf
cmp
and
and
push
neg
mov
mov
add
or
or
pop
mov
enter
lds
(bad)
inc
imul
cmp
cmp
adc
push
xor
inc
(bad)
arpl
sub
jbe
ds
sbb
stc
test
adc
sub
lods
add
adc
mov
ins
or
cli
iret
dec
sbb
lods
xor
jecxz
in
arpl
inc
ret
sbb
mov
xchg
rcr
sbb
mov
rcr
jo
sar
xor
(bad)
sti
inc
ja
ret
sub
mov
ret
adc
adc
mov
fstp
scas
xlat
mov
inc
lds
repz
sbb
mov
mov
push
jne
xchg
in
cmps
in
mov
ror
(bad)
sbb
pop
cmp
push
lahf
cmp
cmp
mov
cmp
icebp
mov
mov
push
inc
jle
ror
xchg
sbb
cli
ret
xlat
adc
mov
push
push
fs
adc
lds
or
(bad)
xor
les
sbb
push
mov
inc
iret
mov
in
push
fcom
and
loop
sar
adc
jl
retf
xchg
iret
mov
and
sahf
dec
xor
sub
and
push
sbb
or
ret
loop
sar
fwait
int3
aaa
mov
push
or
shl
inc
pop
push
jae
sti
add
jl
add
mov
xor
and
sbb
ret
inc
lock
jbe
addr16
pop
pop
retf
pop
mov
mov
jmp
outs
repz
pop
mov
dec
mov
sbb
pushf
mov
cmp
in
xor
sbb
xchg
ja
sbb
add
cmp
inc
sub
movs
xor
pop
xor
in
mov
leave
(bad)
out
cdq
add
ins
pop
std
adc
mov
rol
ret
mov
in
pop
add
shl
pop
cmp
mov
mov
(bad)
lock
fstp
aam
push
ins
inc
lods
push
jnp
aad
out
sbb
je
mov
add
(bad)
and
mov
arpl
mov
call
das
fistp
ror
xchg
out
dec
push
pop
dec
pop
dec
fldenv
adc
xchg
cmp
or
sahf
sub
lahf
pop
jae
jno
cdq
nop
ss
jg
int3
leave
call
cli
sbb
pushf
shr
test
test
repz
cld
rcl
test
call
pop
mov
mov
fisub
jecxz
js
adc
or
pop
push
push
cmps
stc
push
xor
sub
fs
add
or
test
mov
inc
(bad)
test
and
fidivr
add
dec
scas
add
push
adc
in
je
addr16
mov
scas
push
call
out
sbb
jmp
xchg
mov
mov
aam
cdq
cmp
dec
xchg
mov
or
mov
adc
pop
dec
and
out
adc
add
xchg
dec
enter
nop
adc
popf
adc
in
loopne
outs
dec
js
or
ins
fcom
iret
xor
sbb
(bad)
dec
adc
jmp
cs
inc
lods
jle
bound
dec
sub
xchg
xor
jae
jmp
es
jo
adc
clc
js
mov
cmps
popa
inc
fild
push
pop
aaa
inc
ins
aaa
das
lahf
sbb
mov
push
jbe
into
scas
sbb
ds
cwde
mov
in
test
add
(bad)
xor
push
imul
iret
add
pop
imul
sbb
xor
mov
movs
lods
cld
xor
aaa
test
lods
inc
cmp
or
or
xchg
mov
mov
das
jecxz
ins
mov
idiv
mov
in
mov
inc
pushf
inc
pop
in
jmp
pushf
dec
mov
sub
jnp
xchg
dec
xor
push
sub
scas
repnz
pop
pop
pop
ins
mov
push
lahf
mov
popa
mov
jg
push
cld
retf
lods
mov
sahf
(bad)
imul
jo
pop
pusha
pop
jle
cmp
outs
mov
jbe
outs
clc
pop
and
xlat
lds
out
cdq
lock
bndldx
xlat
sbb
inc
mov
into
jg
sub
sub
push
xlat
pop
cli
sub
mov
mov
lods
pop
jp
mov
or
and
fwait
aas
test
jle
mov
ror
or
push
outs
sar
nop
cmp
jns
test
push
fdivr
mov
xor
push
sub
sbb
mov
xchg
ss
fwait
stos
test
cmp
add
jecxz
retf
dec
xchg
inc
and
loop
fnsave
jl
psllq
or
shl
push
jge
mov
push
lods
cmp
mov
mov
mov
test
mov
mov
push
cld
fcom
stos
cld
les
ins
pop
push
pop
out
call
adc
sub
call
add
addr16
push
adc
neg
pushf
xor
or
sub
mov
dec
jae
cwde
scas
or
sub
dec
mov
add
sahf
cmps
dec
mov
mov
or
xchg
jno
sub
cmp
aaa
push
add
pop
jae
lods
in
or
add
lds
add
cli
xchg
loop
test
mov
into
stc
add
pop
push
aam
inc
lahf
adc
xchg
xor
jne
in
mov
cdq
xlat
into
jge
fst
sbb
pop
or
mov
jl
fisttp
xor
inc
or
sub
iret
in
xchg
mov
cmps
out
sbb
call
mov
push
pop
pushf
push
jle
aaa
iret
arpl
xchg
cmps
and
xlat
scas
(bad)
jecxz
es
in
das
ror
retf
mov
movs
xor
lds
idiv
mov
pop
mov
add
mov
cmp
rcr
push
adc
mov
pop
out
sti
add
xchg
xor
cld
pushf
call
adc
arpl
xchg
xor
pop
jnp
xchg
fcmovbe
fadd
add
call
ss
cmp
mov
adc
dec
jne
aad
xor
cli
std
outs
xchg
adc
out
cmp
scas
mov
mov
int
sbb
retf
jg
cmp
or
and
jmp
xlat
xchg
(bad)
rcl
add
mov
test
or
cwde
loopne
pop
out
jns
sbb
add
xchg
test
xor
xchg
add
or
outs
jmp
jge
aam
mov
sub
int3
sti
not
cmp
int
sub
push
dec
mov
push
inc
cld
test
inc
push
out
push
pop
xor
mov
inc
(bad)
repnz
or
cmc
fldenv
mov
mov
cld
loope
movs
aas
out
(bad)
xor
movs
loop
xchg
lods
js
jbe
out
mov
adc
fwait
loopne
aad
out
out
jne
jle
pop
add
xchg
or
add
adc
xchg
sub
loop
pop
fld
psadbw
pushf
sub
loope
cs
mov
inc
push
push
jae
je
adc
or
and
loopne
dec
mov
cmps
ror
aaa
sar
repz
sub
and
or
mov
and
test
sar
sub
adc
pop
jmp
cs
rcl
inc
adc
shl
jne
lock
movs
(bad)
fdiv
fs
push
mov
fcom
cli
rcl
mov
pop
and
push
pushf
scas
mov
mov
mov
push
xchg
cli
add
ret
int
sti
pop
icebp
mov
dec
xor
retf
mov
loopne
aaa
push
and
pop
test
or
adc
fbld
in
and
js
fs
aam
scas
ins
mov
leave
stos
sub
cmp
cmc
jbe
movs
adc
jge
jmp
sub
push
and
arpl
inc
push
xlat
in
push
jb
ret
xor
ds
hlt
fsub
test
scas
mov
(bad)
push
mov
push
jg
cmc
jg
aas
daa
mov
pushf
xchg
mov
push
fist
push
in
xchg
jmp
movs
push
fucom
add
test
popf
lods
inc
adc
retf
cmp
push
mov
cmps
movs
xchg
dec
movs
movs
mov
and
lods
enter
loopne
cmp
ja
push
sahf
(bad)
int3
addr16
jb
movs
xchg
das
inc
sub
ret
in
lock
out
push
push
(bad)
lods
xor
push
(bad)
dec
fild
test
test
pushf
fnstcw
xchg
adc
mov
cmp
data16
dec
or
sub
icebp
push
aaa
pop
in
lock
push
jle
push
cmp
jbe
jp
mov
les
fidiv
add
push
(bad)
shl
call
ins
enter
dec
or
pop
iret
push
add
or
ror
test
mov
fimul
(bad)
call
push
jp
imul
out
cmp
retf
shr
sbb
cmp
add
(bad)
fstp
mov
call
adc
(bad)
ror
add
jno
pop
stc
xchg
xchg
mov
ffreep
add
(bad)
add
cmp
jo
pop
push
call
mul
sbb
(bad)
imul
ss
in
pop
dec
jp
dec
pop
push
pop
sahf
dec
bound
cmp
cmp
imul
cmp
outs
ds
in
imul
shl
add
sub
sub
fst
mov
xchg
sub
shl
test
mov
jp
mov
pop
mov
inc
addr16
aas
push
ret
mov
cmp
dec
push
mov
add
xlat
leave
sub
dec
fidiv
inc
and
arpl
add
pop
push
jae
xchg
jno
mov
pop
and
and
ja
cwde
jae
rol
push
mov
lods
sub
and
call
xchg
ret
xchg
pop
xchg
outs
shl
lds
xchg
cdq
cmps
fild
lods
shl
mov
lahf
mov
adc
mov
lea
jl
add
es
xchg
imul
sbb
test
adc
add
in
adc
movs
cli
jecxz
dec
cmp
pand
mov
std
jnp
cdq
icebp
inc
out
xor
popa
loopne
bound
xor
xchg
sub
xlat
lods
inc
mov
mov
adc
mov
add
sbb
xchg
test
xor
adc
jl
je
loope
aad
xlat
enter
cmp
daa
or
pop
loop
gs
xchg
movs
iret
push
(bad)
int
mov
cdq
xchg
xor
add
fistp
fistp
pop
repnz
les
lods
ret
retf
push
dec
jb
inc
bound
mov
lods
dec
scas
xchg
xchg
adc
add
dec
push
fxch
sbb
jmp
jmp
cmc
jnp
mov
fwait
mov
(bad)
cmp
cmp
dec
jne
add
and
enter
jp
stos
arpl
xor
mov
je
sub
icebp
stos
add
push
pop
sbb
sub
inc
dec
mov
or
sti
cmp
pop
call
jle
lahf
in
xor
adc
inc
sbb
popf
cmp
pusha
test
aaa
mov
aaa
cmps
xor
pop
ret
fdiv
push
xchg
add
ins
fbstp
mov
adc
aad
dec
sbb
fs
aas
add
mov
dec
in
in
leave
test
push
shl
cdq
or
mov
ret
dec
inc
popa
scas
stos
pop
sbb
in
push
pop
div
aam
jg
cmp
sbb
test
mov
mov
xchg
repnz
data16
cmp
bswap
cwde
retf
or
xchg
ds
xchg
xor
lock
jmp
dec
cli
ss
jns
add
popf
push
nop
mov
push
inc
inc
clc
dec
pusha
hlt
add
cmp
xchg
adc
cwde
je
loop
out
jae
sbb
mov
mov
jp
bswap
dec
pop
call
dec
sbb
scas
mov
xchg
dec
cld
mov
or
sub
sti
xor
mov
add
frstor
pushf
add
push
mov
dec
dec
xchg
push
jmp
jne
int3
retf
mov
ficomp
mov
push
push
xor
and
pop
mov
sub
imul
(bad)
js
pop
pop
(bad)
rcr
aas
call
scas
shl
mov
imul
push
mov
enter
push
sub
loope
push
jecxz
xchg
pop
(bad)
inc
mov
adc
inc
push
push
std
iret
mov
sub
std
mov
xchg
test
jbe
dec
and
inc
and
mov
mov
adc
test
fiadd
sbb
adc
stos
jmp
dec
enter
or
cmp
adc
add
xchg
jo
and
xchg
mov
xchg
xchg
xchg
out
xchg
sbb
into
mov
in
jo
adc
lods
pop
lds
add
pop
and
jl
add
or
imul
sub
retf
push
sub
sbb
mov
es
adc
jmp
sub
cld
cdq
push
pop
les
jge
popa
push
das
stos
push
cli
call
add
ja
jno
nop
jp
push
out
scas
mov
test
dec
out
clc
jmp
sub
jge
xchg
push
inc
nop
or
shl
das
jb
cli
jp
cmp
mov
dec
rol
in
mov
jns
mov
push
cmp
mov
pop
fidiv
sti
pusha
cmp
pop
xlat
sub
mov
pop
ficom
mov
repz
or
xchg
add
js
pop
sbb
imul
jnp
call
and
sub
cmc
ds
stc
movs
movs
int3
mov
add
dec
push
xor
outs
jmp
sti
fbstp
pop
xor
xchg
popf
dec
(bad)
push
pop
push
fmul
not
mov
mov
dec
rol
ins
mov
in
fld
imul
xchg
jb
(bad)
pop
stos
sbb
mov
nop
(bad)
mov
sub
sub
inc
xchg
cwde
out
xchg
sub
test
sbb
jno
push
pop
jno
xor
adc
adc
mov
popf
lods
outs
ja
pop
inc
mov
outs
(bad)
mov
push
imul
rcl
cmp
das
in
mov
mov
xor
das
pusha
stos
or
mov
cmp
mov
mov
repz
and
enter
in
das
ror
mov
or
jl
aad
adc
mov
test
add
push
sub
mov
jmp
push
jge
pop
(bad)
adc
dec
(bad)
jmp
inc
cs
push
xor
sbb
inc
adc
push
repnz
imul
outs
fwait
push
(bad)
push
jns
and
inc
stos
mov
sbb
lds
push
int
sbb
movs
mov
cli
dec
int
sar
xchg
jb
out
adc
jns
or
xchg
sbb
(bad)
jno
pop
adc
fst
sbb
adc
pusha
or
mov
lock
es
mov
jne
jl
aaa
mov
les
je
mov
mov
imul
pop
and
sub
test
or
pop
ja
imul
inc
cs
lock
sub
popf
ins
fisttp
(bad)
push
in
xchg
int
sbb
cli
int3
(bad)
adc
pop
and
stc
sti
mov
stos
(bad)
mov
push
mov
adc
xchg
xor
mov
fnstsw
mov
add
clc
aas
push
jmp
lock
call
jmp
(bad)
fucomip
and
cdq
push
fs
fwait
xchg
enter
inc
cmps
sub
dec
mov
push
cdq
xchg
pop
inc
adc
jle
aad
or
pop
out
repnz
aam
lahf
sub
scas
pop
pop
xor
push
push
jno
out
aad
mov
out
add
pop
(bad)
add
jecxz
mov
int3
push
ret
xchg
jb
cmp
js
add
gs
daa
and
push
cmp
xor
and
test
and
popa
xchg
jmp
dec
pop
mov
stos
xor
add
stos
sbb
xor
out
lahf
lods
nop
jecxz
xor
adc
(bad)
xchg
sahf
stc
push
sti
adc
pop
lock
push
inc
sar
xlat
cmp
rep
je
pusha
rcr
adc
sub
mov
pusha
stos
test
mov
das
jno
fcmovnu
ja
es
mov
xchg
mov
cdq
mov
and
push
xor
sti
push
scas
call
icebp
bound
pop
mov
jb
(bad)
icebp
xor
(bad)
int3
jnp
cmps
jmp
js
das
cmp
mov
sti
out
(bad)
ret
aad
xchg
mov
sub
inc
inc
push
fld
out
cmc
rcl
xor
xchg
add
push
push
push
mov
adc
adc
push
in
fwait
mov
aas
sbb
pop
shl
push
pop
sub
pusha
lock
inc
inc
movs
aam
and
or
ret
add
inc
jl
mov
jl
fsub
push
push
test
mov
lods
push
cmp
(bad)
inc
mov
jnp
jge
jno
mov
dec
push
sub
xchg
repnz
mov
imul
test
cmc
je
adc
rol
in
xor
sub
mov
fwait
or
jbe
pop
icebp
xchg
xlat
jg
dec
sub
add
inc
movs
mov
bound
sub
fnstenv
mov
cld
ss
pop
adc
xchg
cmps
por
pusha
out
stos
ret
lods
aaa
cmp
push
(bad)
inc
mov
fldcw
pop
icebp
cmp
inc
fwait
mov
ins
das
and
lock
test
cmp
xchg
jp
push
in
(bad)
xchg
mov
test
outs
sub
mov
enter
cld
dec
arpl
and
aaa
pop
scas
les
sbb
sar
mov
ret
add
dec
sub
(bad)
cs
add
jne
loop
(bad)
cld
sbb
add
pop
inc
add
sbb
dec
lock
imul
ins
sbb
repz
aas
adc
xchg
mov
lea
add
mov
fs
or
jne
nop
push
push
das
repnz
ror
dec
ss
pslld
and
cwde
inc
rcl
jnp
sub
lods
jge
js
or
les
es
aam
gs
stos
pushf
test
imul
sbb
or
loop
fs
enter
fdiv
adc
mov
retf
jp
fld
(bad)
out
push
clc
rcl
cmp
xchg
mov
push
ret
pop
xor
pushf
and
or
pop
out
cmp
mov
mov
mov
sar
sub
pusha
fcomp
lea
fs
inc
mov
adc
dec
pop
mov
mov
adc
push
xor
sbb
xchg
and
les
mov
je
pop
mov
jnp
stc
mov
popa
fisubr
xor
xor
sbb
push
sahf
pop
ror
adc
nop
adc
jmp
leave
push
mov
(bad)
mov
imul
fimul
mov
movs
je
adc
inc
out
dec
cdq
pushf
xchg
stos
(bad)
std
aaa
sub
add
pop
xchg
arpl
test
push
jecxz
or
sub
xor
std
cmp
mov
dec
rol
cmc
mov
out
mov
push
push
cwde
and
pop
push
lods
jmp
imul
jae
cmp
pusha
cmp
lods
pop
daa
scas
pop
aad
aaa
outs
push
add
int3
and
test
push
sahf
das
jp
fdivr
and
or
(bad)
jmp
dec
mov
mov
pop
adc
and
jnp
xor
div
jmp
fwait
jl
xchg
xchg
or
pop
imul
lahf
fisttp
outs
sti
pushf
rcl
dec
mov
jmp
jae
mov
shr
xchg
clc
mov
sub
stos
outs
xchg
daa
mov
test
mov
and
mul
mov
inc
ja
retf
fldenv
cmps
pop
imul
xor
in
sbb
shl
movs
lods
dec
ds
cmps
jp
daa
std
test
dec
ror
xor
pop
adc
jbe
fdiv
inc
cmp
shr
aam
ror
fwait
das
push
aas
int3
fiadd
movs
in
mov
fnsetpm(287
push
daa
ja
lods
pop
pusha
dec
fidivr
addr16
xor
fsubr
ss
cmps
mov
mov
push
mov
mov
fisub
push
shl
int
inc
cmp
data16
cli
mov
(bad)
test
cli
sub
mov
mov
inc
sbb
xchg
fs
add
jbe
sub
out
adc
push
xor
push
adc
movs
pop
xchg
jns
(bad)
dec
xchg
mov
aaa
adc
xor
sub
dec
imul
imul
mov
mov
add
int
jno
push
cmps
addr16
fistp
(bad)
mov
sub
mov
inc
stos
test
loop
jnp
neg
adc
cld
mov
pop
add
sar
ret
and
in
mov
lahf
arpl
fcmovnu
daa
fdiv
mov
push
jns
and
xor
sub
xor
mov
in
pop
adc
in
cli
mov
push
or
scas
mov
stos
lods
cmps
jl
mov
pop
mov
shl
retf
es
inc
jns
push
or
outs
lea
xor
xchg
jmp
test
rcr
lods
mov
pop
xor
nop
cmp
shr
add
and
push
sbb
sub
pop
stc
sti
sbb
je
jg
pop
imul
push
jno
les
je
aam
sbb
xor
mov
icebp
sub
adc
cmova
ins
ins
dec
test
cmps
gs
fsubr
(bad)
not
jne
sub
icebp
or
fwait
stos
fs
imul
fild
call
lock
loope
push
ds
rol
push
(bad)
test
cmps
addr16
sub
scas
and
cmp
xor
push
xchg
and
cld
(bad)
xor
gs
mov
cs
mov
jle
xchg
xchg
sub
adc
in
cmps
(bad)
and
xchg
mov
call
cmp
outs
xchg
les
fst
pusha
repz
outs
enter
jge
in
aad
repz
lock
xchg
jns
in
and
sbb
push
enter
and
test
adc
dec
mov
xor
fisubr
adc
test
dec
cmp
in
sbb
(bad)
scas
nop
jb
out
daa
sar
arpl
ret
test
stos
pop
xchg
stc
pushf
es
push
cmp
rcl
lods
popa
sbb
mov
xchg
into
add
xchg
scas
pop
push
sahf
imul
jle
inc
inc
mov
or
out
or
ins
mov
mov
or
aas
pushf
ret
(bad)
and
idiv
cmp
mov
(bad)
jle
jnp
stos
aam
(bad)
in
adc
cmp
icebp
push
js
xor
jmp
int3
adc
aaa
push
aas
mov
adc
loop
push
or
inc
sbb
out
xor
pop
mov
xchg
sti
inc
arpl
idiv
pop
call
pop
or
xor
lahf
(bad)
xchg
mov
aad
mov
mov
aam
cmp
or
sub
sahf
xchg
inc
stos
int
push
fisub
imul
stc
and
add
icebp
xor
pop
sbb
pop
cmp
int
mov
test
push
addr16
stc
out
pop
movs
lods
xchg
es
movs
test
jno
pop
ja
(bad)
jns
inc
sbb
icebp
or
std
scas
int
into
cwde
sub
in
in
stos
push
mov
outs
scas
ficom
or
lock
cmps
cmp
mov
pushf
jle
enter
dec
inc
add
sbb
pop
cs
repz
xor
dec
sub
int
cmp
dec
and
pop
push
mov
fcomp
bound
fiadd
inc
lds
mov
xchg
retf
dec
xor
pop
jmp
mov
dec
sub
std
lods
dec
mov
dec
repz
mov
into
sub
ss
jmp
std
sub
loop
fsubr
mov
pusha
out
pop
iret
mov
mov
xor
adc
and
ret
and
add
pop
cdq
fbstp
ins
adc
ds
test
pop
call
mov
mov
popa
fstp
loop
in
nop
mov
or
add
cwde
scas
xor
popf
push
sti
dec
xchg
xchg
test
retf
cmp
les
sbb
mov
mov
mov
nop
pop
fstp
retf
lds
jle
(bad)
ja
mov
sbb
fadd
fbstp
dec
sbb
push
imul
pop
add
mov
gs
xor
mov
jno
loop
adc
jne
jl
jno
lods
sbb
dec
shl
cmps
dec
lea
out
push
cmps
sub
jl
sbb
and
or
mov
test
cmp
xchg
fidiv
mov
fcmovnbe
gs
fdivr
aas
pop
mov
ins
dec
jno
mov
xchg
adc
and
mov
mov
cmp
inc
ins
lahf
ret
(bad)
cld
jae
mov
outs
test
push
loop
mov
mov
mov
add
add
cmp
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
