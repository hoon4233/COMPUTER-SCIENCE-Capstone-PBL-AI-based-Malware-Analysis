xchg
outs
popa
adc
sub
inc
xchg
jmp
mov
fidivr
popa
hlt
lds
jle
push
test
shl
pop
sti
dec
mov
fsub
sbb
jmp
int
xchg
push
test
xor
jle
ins
jno
ud0
movs
in
popf
cmp
out
lds
adc
(bad)
and
aaa
jne
stos
xor
mov
rol
xcrypt-ofb
cmps
das
jnp
mov
frstor
mov
lods
retf
mov
addr16
in
pop
out
out
es
mov
jmp
jmp
mov
adc
loopne
ss
lods
arpl
mov
fs
and
les
sti
fwait
push
(bad)
add
arpl
ins
pop
push
lods
mov
retf
cld
adc
cmp
dec
sbb
inc
mov
inc
inc
push
gs
fnstsw
sub
test
stc
pop
xor
(bad)
int
mov
fstp
mov
mov
adc
das
mov
adc
ins
div
push
icebp
call
jmp
sar
in
cmp
mov
imul
dec
add
xchg
push
sub
frstor
imul
out
pcmpgtw
(bad)
pushf
jns
mov
scas
in
imul
shl
pop
test
pop
jp
pop
stos
mov
cmp
cmp
pop
xor
(bad)
int3
jecxz
jb
mov
out
ret
test
and
mov
aad
xchg
mov
scas
mov
jmp
sbb
shr
push
or
mov
in
fwait
arpl
ins
xor
mov
mov
shr
pop
imul
mov
jnp
inc
(bad)
pop
popf
mov
add
fisttp
(bad)
xor
sti
in
cwde
add
dec
ret
jns
rcr
cmps
cdq
aas
jae
push
cs
sub
add
imul
mov
pop
cs
cli
test
sub
aam
sbb
sub
ds
fcmovu
in
out
add
jg
push
test
aaa
das
jg
mov
pop
push
mov
not
(bad)
xor
fsubr
(bad)
cli
adc
cwde
call
sub
ret
cmc
jmp
mov
xor
call
sbb
cld
adc
lock
xchg
push
lds
int3
in
out
(bad)
loope
mov
push
mov
and
jae
bsf
call
add
add
xchg
mov
hlt
and
(bad)
push
aam
mov
mov
xor
or
pop
in
xor
mov
(bad)
fiadd
fs
cld
push
sahf
adc
or
fisub
out
imul
dec
lock
cwde
repnz
lea
iret
out
pop
ffree
xor
aaa
jmp
mul
inc
cmp
addr16
or
cmp
or
mov
test
inc
jo
adc
test
int3
push
sub
mov
push
clc
outs
xor
(bad)
leave
jno
xchg
and
aaa
adc
add
arpl
push
ins
imul
and
cmc
pop
scas
out
mov
cmps
dec
mov
mov
mov
sbb
rcr
stos
mov
push
inc
adc
dec
fwait
test
mov
xor
bound
adc
add
mov
mov
pusha
cmps
ja
dec
loopne
pop
outs
arpl
xchg
pop
loopne
mov
scas
or
ret
cmps
sbb
jb
scas
mov
pop
adc
popa
mov
jno
add
mov
rcl
or
clc
shl
and
in
out
clc
pop
js
add
jmp
movs
mov
push
mov
push
leave
jmp
outs
inc
cwde
cmps
call
mov
pop
jecxz
popf
es
je
cmps
xchg
inc
cmp
adc
mov
mov
mov
enter
or
xor
pop
adc
and
sub
adc
adc
adc
and
sbb
adc
sub
sub
adc
push
adc
adc
and
sub
sub
pop
push
loope
adc
mov
push
mov
lea
cwde
lea
call
mov
(bad)
scas
es
inc
fld
jp
fcomip
mov
inc
dec
dec
adc
jnp
pop
cmp
mov
arpl
and
push
inc
pop
push
sub
xchg
fcom
retf
das
inc
jnp
fbstp
neg
in
xor
out
and
lods
push
loopne
gs
jmp
movs
pop
(bad)
dec
jno
mov
cmp
sub
rcl
out
add
jae
xchg
and
pop
xlat
loopne
(bad)
rcl
cmp
(bad)
repnz
xchg
xor
adc
or
rol
rcl
popf
sti
cmps
stos
mov
mov
jecxz
push
lods
loopne
push
cmp
aad
fnsave
mov
xor
mov
and
or
adc
into
rcl
loop
scas
stos
das
sbb
pop
push
in
(bad)
(bad)
sti
mov
js
lods
mov
data16
and
mov
jmp
jl
mov
dec
out
add
lock
mov
aaa
mov
jg
and
mov
mov
and
in
sbb
cwde
sbb
pop
sbb
add
inc
push
or
movs
jb
jo
mov
mov
mov
leave
cmovne
adc
dec
pop
int
mov
lds
adc
dec
(bad)
in
into
repz
js
mov
cmps
cs
lea
sub
fcmovne
movs
call
jge
push
outs
ror
jne
push
mov
out
pusha
xchg
xchg
mov
or
loop
test
xor
cmc
es
stos
mov
mov
sub
call
cmp
clc
mov
add
mov
mov
and
repz
mov
mov
cmc
fdivr
(bad)
ja
xor
fcmovbe
or
fs
outs
test
(bad)
dec
repnz
out
push
inc
sub
movs
repnz
mov
mov
xor
pop
sahf
cmc
fsub
mov
adc
cmp
mov
mov
bound
inc
mov
lds
retf
xchg
mov
mov
cwde
push
mov
stos
clc
cmc
dec
add
and
daa
out
pusha
mov
daa
popf
and
popf
sub
loope
and
fwait
lods
pop
bound
pop
ss
stc
icebp
cli
fidivr
pop
mov
mov
jmp
lahf
cmc
fdiv
sub
sar
push
test
sub
mov
jno
jne
(bad)
mov
out
mul
inc
jne
in
outs
dec
xchg
mov
(bad)
mov
pop
adc
aas
xchg
mov
dec
(bad)
popf
and
dec
inc
das
jno
push
retf
xchg
cmc
test
ja
xor
dec
add
xchg
xchg
mov
daa
adc
inc
inc
add
push
ds
or
repz
cmc
fldenv
repnz
std
lea
fs
mov
ret
jo
jmp
lea
mov
adc
pop
dec
ss
xor
sbb
jge
cdq
in
mov
in
aam
push
enter
fild
adc
test
dec
in
xchg
jno
mov
in
push
int
in
xchg
push
cmps
movs
aam
test
js
test
clc
imul
sbb
je
add
loop
mov
in
icebp
push
imul
cwde
repz
jno
dec
xor
pop
or
aaa
mov
mov
push
sbb
inc
push
js
sub
lods
pand
inc
imul
out
cwde
in
bound
jne
jg
(bad)
std
cmps
dec
mov
adc
jo
and
mov
xchg
and
xchg
pop
shr
fisubr
js
sbb
stos
xchg
mov
add
jmp
mov
cmp
(bad)
push
fld
mov
idiv
mov
pop
xlat
xchg
call
jmp
jge
mov
enter
push
cld
pusha
aaa
cmps
jmp
imul
mov
mov
in
or
push
xchg
movs
jmp
rcl
inc
(bad)
sbb
fs
mov
fld
add
fidiv
xor
jbe
sub
dec
push
gs
outs
cmps
test
out
sbb
xchg
dec
cmp
sub
cmp
mov
or
loopne
sar
stos
es
xlat
out
ficom
mov
outs
fcompp
scas
mov
mov
sbb
outs
mov
mov
or
or
sbb
daa
neg
inc
pop
scas
pusha
pusha
test
cmp
pushf
call
mov
push
movsx
rol
sub
rcl
clc
rcr
lea
pushf
sub
pusha
bt
pushf
mov
push
pop
clc
add
jns
push
cmp
jmp
pop
pop
(bad)
cmp
(bad)
loopne
stos
out
push
push
sub
icebp
xchg
mov
sub
jmp
lahf
push
jno
and
mov
xor
mov
and
in
not
sbb
adc
jae
pop
ss
int
dec
mov
xchg
in
ins
leave
sub
imul
dec
sbb
(bad)
retf
mov
pop
aam
fwait
mov
out
ret
sub
retf
mov
imul
push
jp
jl
or
lods
into
pop
xchg
ins
bnd
mov
aas
mov
sbb
mov
loop
cmp
(bad)
xor
push
xchg
mov
add
bound
xlat
loop
jne
and
xchg
sbb
ja
fidiv
movs
sbb
mov
xchg
jg
sbb
pop
or
daa
pop
in
inc
push
nop
xchg
xchg
pop
dec
cli
pop
mov
mov
cmp
cmp
adc
(bad)
mov
iret
mov
mov
lahf
lahf
jge
push
lea
call
jmp
movaps
and
xchg
jl
nop
pushf
nop
pop
dec
jbe
call
js
or
clc
mov
repnz
sbb
dec
mov
jnp
mov
adc
out
or
out
jno
stc
fwait
rol
pop
(bad)
shl
rcr
push
sti
adc
fdiv
stc
push
and
xchg
xchg
jle
inc
mov
inc
mov
int3
fucom
cmps
dec
lods
adc
outs
test
iret
adc
xchg
add
jbe
jmp
inc
dec
in
add
(bad)
nop
push
rcr
into
outs
ja
push
rol
inc
push
xchg
sub
call
test
mov
pop
mov
dec
ds
mov
xchg
mov
les
ffreep
icebp
inc
inc
mov
hlt
aad
sahf
aad
cmp
cmps
ror
fbstp
bound
out
imul
(bad)
push
ret
xor
test
stc
not
cmp
sbb
pop
or
je
cmc
int3
mov
out
mov
sub
sti
jmp
movs
fisubr
mov
std
xor
imul
test
stos
rcl
lea
(bad)
nop
lahf
mov
jne
movs
pusha
sub
loope
shl
mov
or
data16
fcmovbe
jle
sub
not
sbb
test
push
xor
pusha
cmp
jmp
push
mov
cmc
test
call
int
mov
push
jg
(bad)
or
fwait
test
cmp
mov
or
sbb
mov
or
and
or
ja
in
sbb
imul
xchg
mov
push
aas
mov
adc
xlat
push
cld
fxch
inc
movs
pushf
mov
adc
jl
jle
imul
lods
mov
push
fnstenv
ds
sub
inc
mov
bound
call
sbb
lds
int3
pop
sahf
pop
sub
(bad)
jno
popf
iret
pop
dec
jne
pop
cmp
repnz
inc
add
icebp
jg
iret
(bad)
sub
test
mov
sub
cmc
int
push
cmps
mov
jo
leave
ins
movs
mov
stos
scas
or
push
jg
sbb
adc
aam
mov
add
mov
movs
add
add
addr16
stos
jno
sbb
sbb
mov
cdq
inc
xchg
mov
mov
pop
fs
(bad)
sahf
sub
mov
jecxz
mov
push
js
aam
mov
sahf
xchg
mov
out
stos
ret
and
ror
popf
arpl
int
fist
ins
movs
xchg
int3
mov
lea
mov
loopne
mov
xor
(bad)
push
inc
pop
jmp
call
add
daa
jg
test
shr
ror
and
push
mov
cmp
(bad)
pop
fs
push
scas
retf
add
nop
push
call
pushf
lods
push
mov
punpckhbw
sahf
fiadd
and
aam
adc
(bad)
mov
aaa
mov
cmp
push
jbe
pop
js
ja
stos
jnp
arpl
dec
rol
hlt
repz
pop
cmp
ss
mov
xor
mov
pop
mov
fisttp
add
call
aad
in
or
pop
out
js
inc
mov
rcl
push
daa
sub
xchg
test
jbe
test
push
rcl
push
into
call
(bad)
pop
mov
and
lods
bound
fisubr
push
push
xchg
call
jecxz
cmps
lds
nop
mov
jo
mov
in
push
(bad)
loop
aad
enter
les
loop
mov
pop
add
aas
push
jg
retf
sub
in
(bad)
jmp
push
add
cmps
cmps
push
jl
pop
xor
inc
and
les
add
(bad)
out
cmps
loope
mov
iret
imul
(bad)
stc
mov
jnp
popf
aas
push
cmps
nop
mul
int3
pusha
call
push
call
add
ds
mov
mov
dec
bound
push
loope
xchg
int
scas
adc
cdq
jmp
fcomp
imul
test
pop
inc
call
push
mov
and
or
std
pop
cmps
add
sbb
lds
jae
add
repz
cmc
in
mov
xor
xchg
sbb
add
dec
mov
fisttp
push
ja
inc
mov
jecxz
out
xchg
pop
dec
loope
lods
pop
sar
pop
xchg
push
call
pop
stc
inc
pushf
adc
push
mov
push
pushf
push
ret
add
dec
outs
popa
fs
imul
add
popa
mul
add
gs
cmp
mov
retf
pop
fcomp
cmp
stos
(bad)
stc
mov
mov
in
outs
outs
mov
jno
sbb
cmp
jle
inc
and
mov
fisttp
add
invd
fnsave
or
jge
sub
mov
jp
icebp
jno
dec
scas
test
imul
stos
mov
cwde
imul
loope
mov
ror
or
push
call
mov
xor
and
lods
shl
add
dec
add
dec
arpl
adc
les
lea
add
arpl
hlt
pop
inc
sub
xchg
es
outs
jb
mov
cwd
scas
xor
pop
push
xchg
and
scas
push
xchg
or
dec
pop
retf
push
lds
mov
gs
aaa
sub
or
jmp
add
cli
xchg
shl
mov
add
mov
add
pop
cdq
sbb
cmp
arpl
cmps
dec
lahf
add
mov
leave
ror
lods
fisubr
hlt
enter
pushf
xor
aam
movs
retf
ins
hlt
cmps
push
imul
dec
cmp
mov
pop
jmp
and
xor
xchg
repz
mov
addr16
icebp
sub
pop
inc
adc
aaa
mov
lea
jne
call
stc
repnz
pushf
pusha
pushf
lea
jne
rcr
mov
mov
movsx
pusha
call
pop
xchg
cmp
add
sbb
fist
mov
inc
jns
push
jae
mov
and
fcomp
mov
into
sub
(bad)
mov
pop
std
imul
(bad)
into
ja
outs
pop
lds
xchg
mov
int3
and
imul
les
cs
xor
fcomip
mov
mov
fnstcw
mov
test
pop
movs
and
pop
xor
mov
pop
dec
push
iret
pop
ror
cmp
aas
push
and
xchg
xchg
and
xchg
addr16
sti
push
cmp
mov
jp
xlat
aaa
mov
pop
inc
inc
mov
dec
mov
rcl
sub
dec
aas
shr
cmc
call
rcr
add
mov
ffreep
sub
fsubr
and
mov
and
ss
imul
dec
outs
mov
adc
(bad)
fidiv
fmul
push
pop
sbb
push
inc
ret
jae
sub
mov
cmp
bnd
outs
push
sub
imul
add
dec
popf
pop
ds
jae
xchg
xor
xor
jge
aaa
lds
adc
inc
imul
jl
aam
mov
movs
cld
in
xor
jmp
js
dec
dec
mov
ret
mov
mov
(bad)
push
mov
shl
movs
std
outs
aas
mov
(bad)
sub
adc
mov
mov
mov
sub
es
mov
mov
pushf
mov
jmp
popf
cmp
and
loope
jecxz
adc
xlat
ss
lahf
(bad)
nop
retf
ret
movs
mov
xchg
ins
lods
add
or
outs
shl
not
pop
mov
jecxz
xchg
or
popa
int3
arpl
sub
xor
cld
push
test
gs
mov
xchg
dec
fwait
mov
add
cmp
pop
xchg
in
adc
ret
das
es
out
aad
push
sub
fdiv
in
in
xchg
cmp
cmps
fcom
not
(bad)
mov
mov
movzx
movsx
movzx
mov
pushf
push
pushf
pushf
lea
jmp
xchg
cli
push
and
es
pop
pusha
inc
sbb
sub
les
adc
adc
fsub
push
pop
or
mov
dec
pop
in
loope
jg
mov
pop
sbb
cmps
push
call
push
mov
dec
in
jno
jmp
inc
or
(bad)
shl
sti
sbb
lds
jne
xorps
outs
sbb
cli
mov
dec
cld
ins
lods
sub
mov
xor
mov
int3
les
mov
int
fnstenv
xchg
xor
dec
(bad)
sub
or
add
(bad)
test
std
(bad)
pop
test
push
xor
sbb
(bad)
cld
je
pop
jl
fsubrp
dec
pusha
retf
in
fcmovnb
outs
sbb
mov
xor
repz
data16
daa
or
and
popf
xchg
xchg
test
push
dec
jb
int3
int3
es
rcr
pop
mov
inc
mov
ins
mov
popa
(bad)
mov
push
addr16
sbb
adc
adc
push
and
js
lods
cmps
pop
rol
mov
mov
fs
adc
cmps
jecxz
or
pop
fwait
icebp
xchg
sub
loopne
xchg
scas
jle
daa
add
pop
data16
mov
mov
push
sahf
sbb
mov
je
xor
inc
mov
add
mov
adc
xor
pop
adc
jmp
dec
mov
push
ret
sbb
sbb
adc
arpl
stc
mov
cs
adc
xchg
push
fild
and
xor
enter
mov
lods
push
repnz
icebp
test
push
mov
add
ins
daa
add
ficom
cmps
xor
jae
fidivr
xchg
jp
scas
xchg
js
mov
push
mov
push
stos
jae
gs
cmp
mov
or
jg
and
pop
ins
inc
test
cmp
int
adc
push
jg
mov
repnz
adc
adc
or
leave
movs
jbe
mov
aad
movs
outs
dec
jp
jo
dec
push
jns
dec
xchg
stos
push
retf
sbb
xchg
mov
xchg
fnstsw
mov
xchg
test
xchg
and
jle
sub
mov
mov
scas
mov
inc
pop
and
or
into
push
xor
sub
into
hlt
scas
outs
mov
mov
ror
and
ds
into
cwde
pop
div
lea
into
(bad)
mov
scas
xlat
adc
mov
xchg
lods
nop
lahf
cmp
xchg
pushf
ror
mov
jmp
outs
pop
into
mov
or
(bad)
into
adc
xlat
hlt
stos
add
inc
into
out
cmp
cmps
arpl
popa
sbb
adc
and
imul
xchg
inc
outs
into
sbb
rcr
mov
scas
test
jp
and
into
xchg
and
lea
rol
aam
into
inc
mov
mov
mov
and
dec
mov
into
in
push
adc
fmul
repnz
loope
fbld
fdiv
into
jle
lods
sbb
mov
and
xchg
aad
fsubr
mov
mov
into
xchg
cdq
mov
out
loopne
xchg
into
sub
sbb
into
push
xor
shr
out
loopne
cmp
lahf
js
stos
dec
inc
adc
or
je
mov
into
out
add
xor
or
sub
int3
push
into
mov
or
aam
sbb
cmps
and
into
iret
(bad)
xchg
push
lods
mov
cli
dec
fucompp
jne
inc
xor
pop
mov
neg
outs
cmp
ds
neg
fild
xor
test
jge
outs
into
pop
cmp
fisttp
imul
das
jo
lods
bound
outs
scas
add
gs
or
mov
pop
out
xchg
push
data16
sub
or
add
fisttp
sub
das
mov
mov
loope
mov
scas
and
xor
into
out
adc
mov
dec
fwait
mov
sub
scas
mov
gs
jo
into
xchg
loop
mov
into
fidiv
fld
shl
aas
std
xchg
int
into
cs
repnz
lods
jnp
into
sbb
leave
lahf
imul
add
inc
xor
mov
mov
jle
push
into
je
out
sbb
mov
(bad)
pop
ins
pop
adc
imul
pop
test
sbb
es
ret
(bad)
(bad)
and
mov
into
jmp
push
loopne
jg
or
cld
adc
daa
sbb
into
das
dec
xor
mov
loop
mov
stos
idiv
jmp
jge
jne
xor
ret
or
mov
dec
sub
cmps
into
gs
inc
shl
mov
push
dec
adc
cmc
aad
mov
nop
adc
in
out
sub
xchg
push
dec
loop
leave
mov
into
mov
addr16
sar
sbb
mov
sar
mov
or
inc
jns
out
cmps
ds
push
js
aad
pop
cmp
sbb
fcmove
xchg
add
pusha
popf
sub
xchg
or
sub
inc
sbb
into
mov
add
mov
call
dec
mov
sahf
stos
cmps
mov
cdq
xor
retf
rcr
or
leave
mov
add
les
int
or
mov
mov
inc
mov
fld
jle
in
int
shr
in
adc
fcomp
outs
cs
jne
jl
ror
push
into
jmp
ret
dec
movs
into
xchg
imul
rcl
mov
hlt
xchg
popf
scas
into
mov
add
lahf
test
mov
movs
iret
movs
cdq
mov
mov
mov
shr
into
bound
repnz
into
pop
push
out
xor
out
mov
xchg
test
enter
outs
pop
rol
lods
jno
frstor
pop
add
movs
add
xor
mov
das
mov
test
repz
test
test
dec
mov
xor
lahf
movs
fdivr
xchg
fadd
into
and
sub
into
mov
(bad)
movs
call
mov
cmps
sti
lods
in
push
into
sub
dec
stos
pusha
fisub
into
cld
(bad)
lock
pop
cmp
(bad)
repnz
movs
in
cmp
jo
dec
push
ds
xchg
call
inc
lfs
dec
aam
push
sub
es
xchg
fcomi
pop
inc
inc
into
out
mov
dec
add
scas
retf
popa
pop
ja
mov
into
fidivr
adc
dec
pop
add
mov
into
and
inc
inc
scas
ins
pop
sbb
push
icebp
push
adc
xchg
mov
sub
xchg
mov
leave
add
jnp
arpl
into
inc
jmp
push
into
pop
ja
inc
mov
mov
pop
into
jbe
je
push
cmp
and
sbb
retf
test
jns
cmps
es
sbb
mov
inc
inc
repnz
mov
ss
push
(bad)
fdivr
mov
sysret
or
mov
mov
outs
daa
mov
into
pop
sbb
push
scas
xor
into
push
and
jb
in
retf
dec
out
into
sub
in
into
xchg
jbe
or
mov
ror
ds
add
jo
scas
and
lods
dec
cs
xchg
mov
jae
outs
stc
sub
lods
in
mov
xchg
sub
enter
mov
push
fild
jnp
mov
pop
into
jge
cmps
xor
fwait
cmp
loope
into
cmp
fisttp
fadd
inc
dec
and
jmp
or
lahf
mov
xchg
std
cli
in
inc
out
xor
aad
shl
rcl
or
(bad)
pop
popa
fiadd
into
lahf
stos
enter
xchg
xchg
imul
shl
popf
fisubr
je
mov
bound
lea
inc
xor
scas
jle
ja
pushf
adc
pop
sti
scas
sub
push
loope
fdivp
test
inc
out
daa
mov
inc
std
push
adc
into
fcomip
or
xor
fsubr
dec
sbb
nop
xor
dec
retf
pop
imul
popa
lods
lea
(bad)
xchg
xchg
push
pop
pop
into
out
dec
add
into
sbb
repz
add
jg
dec
out
adc
cmp
push
lods
sbb
mov
daa
into
and
jl
mov
mov
jle
jno
vmread
mov
mov
xchg
add
lods
std
xor
pop
mov
out
(bad)
sti
outs
rcr
jle
sub
mov
mul
sbb
ds
jnp
cmp
mov
test
cmp
(bad)
das
arpl
mov
jns
jge
mov
mov
jbe
into
test
cmps
adc
bt
cmp
enter
into
in
or
sbb
jbe
stc
mov
cmp
push
outs
xor
scas
xchg
mov
xor
fs
je
into
jns
ins
and
std
mov
lahf
add
retf
into
add
and
dec
push
into
rcl
jae
retf
inc
mov
dec
pushf
fbld
cli
add
(bad)
scas
jp
pop
xchg
add
mov
stos
xor
xchg
mov
push
nop
xchg
mov
mov
aaa
xchg
sbb
cmps
inc
jmp
jno
jo
outs
dec
es
mov
dec
ds
lea
inc
inc
and
addr16
ds
lea
inc
inc
es
mov
pop
ds
lea
pop
pop
es
mov
push
ds
lea
push
push
es
mov
sub
sub
es
mov
and
and
es
mov
cmp
cmp
es
mov
xor
xor
es
mov
or
or
es
mov
add
add
es
mov
loope
clc
(bad)
out
imul
pop
lea
push
pusha
lea
inc
push
es
mov
push
adc
daa
lods
inc
movs
mov
fs
pop
imul
xor
call
imul
outs
inc
aam
lea
imul
mov
addr16
adc
fnstcw
mov
pusha
imul
and
jmp
imul
pop
mov
jp
dec
lea
and
es
mov
xchg
dec
dec
das
inc
dec
pop
shl
outs
out
push
and
or
pop
inc
iret
rol
pop
push
inc
or
mov
inc
pop
add
pop
fld
push
dec
jnp
xchg
or
pusha
pop
(bad)
inc
imul
xbegin
mov
pusha
jle
mov
bound
inc
sbb
or
addr16
cmc
or
inc
inc
ret
out
jg
movs
mov
jg
or
mov
pop
pop
lahf
mov
adc
js
or
add
mov
inc
dec
out
jl
hlt
push
ror
mov
inc
cmps
inc
stos
push
sub
dec
mov
mov
js
inc
or
mov
dec
js
imul
hlt
icebp
popf
(bad)
outs
cmp
std
pop
dec
push
mov
ss
lahf
pusha
pop
push
test
add
ja
dec
add
test
inc
xchg
dec
(bad)
out
mov
aad
movs
jns
imul
add
pop
inc
cld
dec
add
dec
xchg
or
aam
pop
es
ret
scas
push
dec
mov
pop
inc
jns
inc
pop
xor
addr16
rcr
mov
mov
mov
mov
arpl
push
jnp
adc
gs
outs
sub
lea
lock
adc
fstp
outs
mov
jl
inc
mov
and
jbe
jns
repnz
imul
jg
mov
imul
or
jns
mov
retf
jl
pop
add
push
mov
xchg
stos
fld
popa
inc
ror
dec
ins
mov
or
cmp
inc
or
pop
and
inc
pop
mov
dec
xchg
ins
pop
inc
sub
pop
jle
mov
call
inc
xor
dec
pushf
jne
sbb
popf
addr16
jp
mov
movs
mov
clc
or
inc
dec
inc
cmps
add
xor
(bad)
mov
sti
inc
pop
mov
pop
ins
jp
inc
sbb
inc
outs
hlt
push
lds
jge
sar
inc
push
push
or
ins
jl
pop
pop
pop
cwde
pop
pop
lea
in
outs
test
or
lods
fisubr
(bad)
pop
das
daa
lahf
pop
movsx
into
dec
sbb
jl
mov
or
cld
xchg
mov
pushf
cmps
mov
inc
retf
mov
mov
stos
xor
jle
gs
outs
daa
xchg
mov
movs
scas
sar
push
mov
(bad)
cs
idiv
les
aas
push
mov
or
cmps
xchg
aas
sub
(bad)
jb
ja
aas
pop
lods
mov
jge
mov
sbb
aas
imul
aas
mov
push
fisubr
mov
lods
mov
sub
imul
out
js
scas
mov
jl
pop
fwait
stos
ss
cmps
cmps
push
cmc
jno
xchg
pop
jge
aas
pop
sahf
and
(bad)
xor
out
daa
cmps
pop
push
mov
das
(bad)
dec
lahf
test
dec
popf
pushf
fwait
dec
xchg
sahf
cmp
xor
adc
(bad)
jmp
call
jecxz
mov
clc
or
xor
int3
into
lahf
mov
mov
jg
mov
mov
mov
mov
mov
mov
cmps
dec
mov
mov
xor
pop
or
(bad)
out
movs
xchg
lea
stos
aas
mov
dec
data16
jbe
dec
and
pop
cmc
std
mov
xchg
dec
xacquire
icebp
mov
mov
mov
jbe
dec
cmps
scas
lea
jge
dec
cdq
mov
in
mov
dec
xchg
stos
lahf
dec
dec
scas
fmul
fwait
call
ret
mov
aas
scas
aaa
adc
adc
jmp
ja
cld
pop
adc
outs
mov
fwait
test
xchg
mov
fld
lahf
fistp
lock
mul
int3
push
or
repnz
es
mov
mov
popf
imul
inc
ja
push
cli
addr16
mov
mov
pushf
ins
lahf
lock
cmc
not
mov
ja
lahf
das
imul
ins
xchg
rcr
or
inc
inc
mov
push
into
sbb
loopne
push
mov
mov
fcomp
popf
jle
pushf
sub
fwait
ins
div
inc
push
dec
xchg
adc
out
xor
(bad)
jl
add
rcr
out
sahf
dec
outs
dec
call
test
lahf
pushf
shr
xchg
test
call
adc
hlt
aaa
lahf
(bad)
sub
pop
pop
shl
jmp
scas
sahf
stos
sub
sti
xchg
ins
scas
adc
sub
add
pop
add
mov
cmp
mov
call
lock
sub
leave
outs
or
stos
mov
push
mov
push
scas
mov
pop
xchg
jmp
and
in
xchg
jg
mov
push
xchg
lds
sahf
cmp
enter
mov
aas
aas
nop
cld
sbb
lods
daa
mov
addr16
div
cmp
xchg
addr16
scas
imul
aas
pop
dec
movs
scas
rcr
sub
mov
sbb
dec
mov
cmps
dec
cmp
inc
mov
test
pusha
push
xsave
mov
xchg
stos
div
sub
scas
scas
in
dec
inc
imul
dec
sub
in
cmp
push
mov
hlt
data16
(bad)
out
pop
sbb
lds
ror
(bad)
jg
dec
pop
ror
dec
aad
xchg
xchg
push
scas
movs
in
xchg
ret
adc
sub
sbb
or
(bad)
and
pop
scas
add
shl
xchg
push
test
adc
adc
into
push
inc
pop
mov
and
fdiv
or
fst
lds
xlat
push
mov
je
fidivr
jl
mov
and
push
call
inc
dec
ss
fs
jle
movs
stc
xchg
(bad)
push
mov
out
scas
arpl
dec
inc
dec
es
add
fst
test
sbb
lock
xor
pop
sbb
or
ins
pop
pop
pop
mov
jg
cmc
fld
jne
xchg
mov
inc
mov
add
rol
dec
ror
adc
inc
inc
dec
xor
dec
add
jmp
jg
cmps
xlat
in
jo
or
mov
out
mov
(bad)
lods
jnp
dec
(bad)
iret
jp
ret
xor
lds
fnstcw
clc
sti
in
pop
mov
xor
lds
in
inc
pop
mov
ret
mov
loope
jmp
sbb
dec
inc
pop
cmc
push
xlat
popa
mov
sar
ret
add
dec
addr16
inc
popa
inc
leave
pop
in
pushf
sub
aas
ficom
das
das
jns
mov
mov
das
cmps
cmps
pop
mov
inc
outs
cmps
cmps
mov
mov
xchg
xchg
imul
xchg
xchg
cdq
(bad)
sahf
cmp
or
mov
pop
in
inc
or
ins
mov
xlat
stos
inc
dec
mov
xor
into
pop
inc
inc
pop
dec
pop
mov
or
pop
jnp
inc
xchg
sub
mov
jns
pop
mov
sub
push
mov
stos
daa
outs
sar
sub
data16
fadd
retf
cmps
rcr
cvtdq2ps
arpl
int
jno
in
les
(bad)
and
xchg
ficom
movs
mov
mov
mov
xchg
pop
scas
movs
fwait
test
mov
push
pop
inc
dec
inc
pop
fiadd
sahf
xchg
bound
out
lock
inc
pop
pop
cwde
dec
pop
push
pop
and
pop
clc
mov
rcr
sbb
fisub
xchg
jl
push
sahf
dec
inc
mov
(bad)
dec
push
or
and
xchg
sub
pop
addr16
mov
dec
xchg
adc
popf
inc
mov
push
xor
inc
mov
xor
fcmove
cwde
fist
cmc
pop
or
ret
shr
dec
shl
sahf
int3
pop
cdq
pop
inc
sbb
dec
inc
xor
inc
addr16
shl
shl
mov
dec
add
call
or
das
aaa
inc
pop
div
lods
inc
pop
inc
inc
add
rol
mov
sbb
push
mov
sub
and
fstp
pop
mov
mov
pop
ja
mov
fs
imul
dec
outs
xor
cmp
xor
inc
inc
fsub
adc
stos
pop
bound
xchg
push
ja
gs
xor
test
cld
test
pop
shl
call
cmp
mov
jge
and
imul
xchg
mov
lahf
popf
sbb
pop
or
jp
mov
push
aam
(bad)
repz
scas
xchg
iret
xchg
fwait
pop
test
xchg
sbb
jge
xchg
sbb
movs
in
push
jns
sub
cwde
sbb
cmps
mov
pop
adc
or
jmp
mul
jb
scas
pop
lods
lahf
ds
nop
dec
lahf
std
ja
mov
mov
mov
stos
pop
dec
or
xchg
(bad)
add
inc
out
shr
adc
xchg
out
push
and
cmp
push
imul
movs
aad
mov
push
jecxz
mov
inc
fisttp
push
scas
adc
and
scas
push
sub
mov
inc
push
xchg
in
repnz
data16
mov
ds
scas
(bad)
popf
pushf
fsubr
rcr
pop
push
dec
cmp
and
add
inc
pusha
ja
mov
mov
rcl
rol
xchg
addr16
rcr
jne
mov
push
mov
or
fisubr
scas
dec
ins
xchg
jae
popaw
xchg
imul
mov
dec
inc
pushf
popf
retf
jb
(bad)
push
fst
ror
push
ret
cs
(bad)
into
addr16
mov
xchg
jmp
mov
jl
adc
pop
dec
xor
jnp
or
imul
cmps
jns
ret
repnz
int
inc
inc
pop
inc
retf
xchg
(bad)
cs
loopne
nop
cld
add
out
lods
sbb
ud0
jmp
call
pushf
shl
pop
fmul
jnp
outs
fisub
test
pop
jl
dec
jne
fwait
test
mov
pop
inc
ja
scas
add
mov
dec
inc
push
xchg
js
mov
stos
ins
or
adc
and
sub
sbb
in
rcl
hlt
out
pop
push
scas
push
or
sbb
std
add
xlat
adc
retf
into
out
sbb
adc
pushf
adc
loopne
sub
sbb
popf
fwait
into
idiv
sbb
into
sbb
push
clc
xchg
fadd
cld
ret
(bad)
jmp
jl
lods
call
mov
push
loopne
adc
aad
mov
(bad)
lock
scas
xchg
cmc
or
sbb
mov
sti
sbb
xor
imul
jae
out
inc
pop
pop
mov
xchg
or
(bad)
rcl
call
mov
loop
lods
adc
mov
out
mov
(bad)
adc
in
(bad)
in
jmp
or
(bad)
fdivr
dec
dec
sub
mov
xor
scas
sti
pop
mov
aam
popf
pop
push
ja
fwait
daa
pushf
imul
xchg
sub
sbb
imul
push
addr16
and
das
jge
pop
fld
push
cmps
mov
call
neg
stc
mov
dec
mov
lahf
inc
cmps
test
scas
adc
adc
cs
icebp
repnz
sbb
(bad)
out
or
stc
scas
sar
hlt
adc
adc
imul
sbb
mov
jmp
sub
outs
pop
jmp
jmp
out
inc
jnp
mov
mov
repnz
loopne
dec
(bad)
add
mov
pop
or
pop
outs
cmp
cmps
or
jno
lea
add
dec
xchg
xchg
push
data16
stc
loop
xchg
sahf
add
inc
(bad)
jbe
add
mov
popa
ins
cwde
fist
xchg
outs
call
mov
xor
mov
test
mov
ins
dec
pushf
test
imul
xchg
outs
sbb
xchg
mov
arpl
aaa
jmp
cmovl
jmp
pop
ret
test
jmp
cwde
or
call
sar
loope
push
pop
add
test
sbb
out
xchg
in
leave
test
stos
out
in
into
adc
(bad)
cmc
cdq
fcom
ret
aad
loop
fadd
jle
sub
mov
adc
imul
loopne
push
outs
adc
std
icebp
adc
scas
jmp
fsubr
mov
in
cmp
test
fmul
pop
aad
loop
mov
test
pop
or
sar
inc
ss
lahf
adc
pop
sbb
sub
in
or
in
repnz
in
retf
mov
bound
jecxz
add
fnstcw
mov
sbb
cmps
ins
mov
fidivr
imul
les
dec
add
bound
lods
aaa
pusha
iret
retf
cmp
cmp
mov
sbb
arpl
movs
daa
jge
mov
inc
dec
test
ins
in
mov
add
mov
inc
dec
fidivr
adc
xor
scas
pop
xor
adc
xchg
repnz
pop
(bad)
or
out
push
fnstsw
jl
adc
jbe
scas
push
jmp
xor
stos
jge
dec
inc
mov
push
arpl
add
pop
lods
mov
pop
xchg
cs
stos
pop
add
test
ja
std
mov
mov
repz
(bad)
jge
fwait
jo
fist
mov
cmps
aas
test
ss
addr16
stos
imul
dec
out
mov
jp
ja
xor
repnz
aaa
test
ins
scas
mov
sbb
scas
arpl
push
arpl
xchg
(bad)
mov
dec
icebp
jge
mov
xchg
vmwrite
lahf
(bad)
popf
cmps
into
mov
(bad)
pop
and
loopne
and
adc
outs
mov
mov
mov
sub
call
into
test
addr16
sub
cmc
mov
cmp
dec
add
inc
mov
mov
out
(bad)
rol
sub
ins
xor
bound
into
fsubrp
jno
cmc
push
jle
into
or
pop
out
std
test
mov
sar
ins
xor
mov
into
inc
dec
(bad)
jb
into
test
dec
or
aad
popa
je
cmps
jo
pop
ror
jp
scas
ins
sbb
mov
clc
es
cmp
mov
mov
fldcw
into
mov
outs
inc
iret
pop
loop
xchg
xchg
push
test
push
into
ret
arpl
ror
cld
js
sbb
mov
out
xchg
(bad)
call
inc
or
in
shl
gs
int
mov
pop
into
jmp
aam
inc
sub
mov
popa
into
scas
repz
or
add
lds
add
pop
mov
pusha
mov
mulps
pop
sti
into
mov
pop
mov
mov
sbb
sbb
dec
or
xlat
enter
push
push
pop
inc
mov
or
bound
cmp
mov
(bad)
lods
in
mov
xor
push
add
mov
dec
cdq
stos
rcl
sub
out
inc
cwde
inc
into
mov
adc
mov
cmp
fcomi
and
stos
xor
scas
scas
inc
mov
icebp
fbstp
int3
in
pop
into
stos
ret
sub
outs
xor
jo
push
cli
fwait
into
xchg
inc
adc
mov
cmovne
and
mov
sbb
adc
into
xchg
and
mov
into
les
je
pop
imul
dec
xchg
enter
add
test
mov
retf
jae
jge
into
out
cs
gs
js
retf
xor
adc
mov
xchg
and
and
fimul
into
cmps
not
daa
loope
mov
movs
mov
mov
into
shl
push
add
shl
clc
addr16
lds
jl
push
or
nop
mov
and
xchg
add
jmp
rcl
xchg
popa
(bad)
dec
cmp
hlt
into
or
movs
enter
mov
jnp
mov
add
add
nop
scas
loope
jp
cld
adc
fidiv
xor
call
jmp
scas
dec
push
imul
jbe
push
dec
mov
mov
(bad)
idiv
or
mov
into
push
pop
js
pushf
ret
into
sub
addr16
icebp
stc
scas
retf
(bad)
aaa
sub
into
in
out
inc
repz
cmp
scas
mov
scas
out
cmc
jmp
into
stos
test
rcl
pop
xrelease
imul
into
lock
mov
das
fdivr
test
mov
rol
fisubr
mov
cmc
mov
mov
pushf
and
nop
inc
pop
push
xor
test
sbb
int3
retf
into
daa
ja
out
fnstenv
dec
into
movs
xor
sti
or
(bad)
mov
xchg
sbb
jno
into
out
movs
outs
js
mov
pusha
into
les
imul
test
imul
fimul
imul
dec
lods
sahf
ja
fmul
or
inc
push
fwait
mov
into
jl
jb
dec
pop
stos
int
cmps
into
xor
push
scas
xchg
push
into
icebp
sbb
jge
into
adc
mov
jne
dec
sub
mov
call
or
mov
(bad)
pop
inc
retf
call
(bad)
and
scas
repz
out
mov
loop
into
xchg
jg
adc
retf
aas
and
in
mov
xchg
mov
fnstcw
mov
or
imul
je
bound
dec
into
push
cld
mov
ins
fcmovne
sbb
sub
xchg
lock
je
(bad)
pop
scas
aad
outs
pop
xor
rcr
lods
cmp
cwde
mov
jno
inc
sbb
into
mov
jne
jnp
retf
adc
cmp
into
clc
adc
aam
mov
into
dec
jg
mov
into
xor
dec
push
cwde
xlat
mov
push
sub
or
into
in
cmc
outs
xchg
dec
into
dec
aaa
movs
xor
push
loope
sbb
inc
enter
lahf
pop
lods
daa
(bad)
xchg
imul
xchg
ins
pop
mov
cmp
scas
enter
mov
das
jbe
push
lea
imul
call
inc
inc
in
stc
ret
mov
inc
lods
vpmuludq
into
(bad)
outs
jg
popf
rcl
aam
jae
je
es
data16
into
test
jo
popa
xchg
or
jle
push
xchg
cmp
into
pusha
adc
fucom
push
sub
push
mov
push
mov
add
fsubrp
shr
clc
mov
ins
into
test
popa
or
mov
pusha
sbb
lea
and
out
push
mov
pop
mov
xchg
cmp
dec
(bad)
push
pop
xor
sbb
in
arpl
stos
or
pop
into
inc
hlt
repz
enter
xchg
push
dec
cli
(bad)
rol
stos
arpl
sbb
retf
scas
mov
shufps
mov
lahf
jp
dec
mov
retf
dec
iret
sub
or
xor
jmp
call
test
arpl
cmp
or
mov
int3
idiv
inc
into
inc
test
ins
push
sbb
shl
mov
mov
cmc
and
into
arpl
dec
outs
xor
add
sbb
(bad)
jo
push
gs
cli
into
sbb
or
xor
in
jecxz
(bad)
into
pop
ss
push
lock
loopne
and
pop
or
into
cmp
mov
dec
and
jb
into
sbb
xchg
int3
out
push
leave
into
cmp
ss
inc
dec
xchg
or
jg
stos
jg
shrd
fxch
retf
mov
sbb
lods
inc
mov
xor
xor
and
jp
retf
fwait
jae
xchg
adc
push
push
outs
ror
sbb
shr
lea
push
loope
or
imul
xor
xor
rol
sti
into
or
rol
jno
into
aaa
(bad)
push
scas
aas
imul
iret
aam
sub
mov
(bad)
push
call
(bad)
fstp
jp
jns
xchg
dec
dec
mov
into
ds
pop
sub
fcomi
fwait
into
dec
push
rol
movs
inc
(bad)
mov
(bad)
retf
into
jmp
ret
outs
aad
inc
rdpmc
repnz
push
into
mov
xor
into
lock
std
(bad)
cs
into
dec
xchg
leave
add
outs
in
dec
adc
aaa
pop
into
jle
fstp
aam
out
mov
push
gs
mov
push
test
sahf
test
cmp
add
xchg
iret
push
or
xor
dec
mov
(bad)
js
retf
mov
das
sub
das
cmp
inc
or
mov
pop
inc
scas
mul
mov
mov
into
inc
outs
jp
sbb
into
xchg
jmp
push
dec
stos
cmp
mov
mov
inc
into
add
push
add
push
fwait
lahf
into
fcom
jno
mov
mov
int
xor
test
jbe
mov
(bad)
into
ja
or
cli
les
into
ror
mov
stos
sbb
rcl
stos
pop
arpl
stos
push
fstp
psubd
je
into
shl
and
mov
into
call
test
push
lea
stos
outs
sbb
and
jmp
inc
pop
nop
sub
dec
(bad)
push
fs
in
je
icebp
pusha
sub
inc
jp
in
dec
or
fcmove
adc
xchg
scas
dec
(bad)
ins
mov
add
sbb
retf
add
inc
mov
outs
mov
into
sar
cld
mov
adc
out
xor
lods
jecxz
dec
nop
ret
dec
adc
lods
into
in
mov
xchg
inc
pop
jbe
test
ss
loop
loop
sub
or
int3
push
into
and
pop
mov
out
(bad)
sbb
into
out
mov
sub
jb
mov
fiadd
sbb
adc
rcl
int3
out
into
dec
mov
into
call
stc
inc
bound
cmps
js
sub
fldcw
sbb
pusha
test
xchg
fidiv
ja
pop
fwait
jg
into
(bad)
hlt
pop
dec
repz
cmps
into
ror
ja
ins
jecxz
pop
sbb
out
dec
xchg
popa
(bad)
call
pop
xchg
loopne
jp
add
into
cmp
pop
dec
into
mov
push
shl
out
rcr
xchg
stc
nop
inc
mov
es
outs
jp
push
pop
mov
mov
into
inc
cmp
jge
cli
inc
into
lds
out
mov
ror
aas
popf
sbb
in
into
jo
lock
test
dec
or
jmp
add
mov
into
mov
cwde
jnp
test
adc
out
adc
scas
outs
and
(bad)
popf
ds
xchg
jmp
sub
cmp
ret
call
into
pop
dec
push
cli
addr16
pushf
(bad)
push
ins
nop
sub
repnz
stos
mov
cld
jg
and
mov
adc
push
and
jecxz
mov
adc
or
lea
jl
sbb
adc
dec
and
add
into
mov
ret
mov
xor
lods
cdq
jmp
adc
data16
or
cs
dec
retf
xor
jb
push
pushf
into
and
push
jne
stos
inc
into
mov
addr16
cmps
xchg
outs
enter
adc
in
outs
inc
fcomp
mov
xor
cdq
call
xor
rcr
pusha
aam
jns
xlat
jne
mov
lods
mov
(bad)
mov
scas
pop
xlat
popa
stc
repnz
into
fadd
mov
fidiv
repnz
pop
into
clc
sub
jbe
xchg
jmp
out
int
call
xor
out
das
xchg
push
into
push
push
adc
jg
sbb
in
scas
pushf
dec
pop
push
cmp
dec
(bad)
(bad)
mov
scas
sahf
xchg
push
ins
pop
dec
lods
sub
test
mov
or
mov
or
or
out
push
jge
fwait
js
int
jno
fiadd
pop
mov
std
or
sub
mov
sub
mov
xchg
pop
xchg
jo
out
into
hlt
iret
inc
add
scas
cmc
mov
jne
pop
imul
into
jg
mov
mov
das
das
dec
fild
sbb
in
fsubr
or
dec
into
div
xchg
jp
(bad)
dec
into
outs
(bad)
jl
in
mov
dec
dec
xor
loope
sub
mov
cmps
aaa
scas
out
mov
js
cmp
lods
push
dec
shl
aad
jg
mov
xor
das
into
and
sub
mov
sahf
aas
jno
sbb
push
xchg
cmp
lods
inc
jae
lahf
nop
maxps
into
leave
ror
xchg
enter
into
xlat
dec
xor
and
sar
xchg
mov
into
int3
push
push
into
fmul
test
add
dec
or
mov
movsx
mov
adc
dec
out
and
into
mov
in
popa
xor
mov
out
leave
into
cmp
lods
pop
stos
into
push
cmp
mov
ds
xor
mov
mov
(bad)
xor
pop
loopne
jg
or
into
add
repz
popa
jl
into
jns
pop
mov
into
sub
push
repz
sub
and
lods
jo
js
xchg
mov
inc
fcomp
out
dec
cs
add
or
or
pop
in
sub
or
cdq
pop
movs
leavew
into
test
xchg
(bad)
scas
into
or
ja
jns
adc
imul
cmps
loope
bts
xchg
sahf
ret
test
lods
or
lods
into
je
popf
jne
dec
shr
scas
fmul
pushf
xchg
push
mov
shl
mov
out
(bad)
mov
pop
or
jae
paddq
into
xchg
or
fxtract
push
vphaddbd
add
xchg
sbb
(bad)
inc
icebp
fldcw
into
xchg
call
shl
imul
mov
sti
shl
dec
mov
add
cli
cmp
mov
mov
adc
lahf
inc
cmps
mov
or
lods
sub
add
dec
push
sub
retf
into
cli
mov
push
push
pop
mov
mov
into
inc
daa
xor
ins
outs
xchg
jmp
jne
movs
sbb
iret
lods
arpl
std
push
xchg
es
xchg
mov
push
sbb
out
lods
pop
into
pop
test
or
xor
and
rol
inc
inc
sahf
icebp
dec
add
jo
pop
div
into
shl
pop
retf
push
mov
push
mov
loope
xor
retf
mov
jmp
inc
jb
std
test
retf
and
fdivr
ss
or
ror
mov
in
je
pop
push
les
stc
sub
jmp
popa
cdq
jmp
jge
mov
mov
into
daa
xor
jg
pop
leave
into
xchg
push
cmps
rol
cs
or
and
push
fmul
into
out
mov
cmp
test
xchg
mov
lahf
sub
inc
repz
mov
test
sub
inc
lahf
cs
pushf
into
outs
and
add
ret
fist
test
inc
mov
pusha
psrlw
retf
sbb
imul
jmp
into
adc
shl
into
cmps
mov
in
adc
into
out
fnstsw
adc
dec
sahf
into
repz
aad
mov
loopne
xchg
daa
les
or
cmps
cmps
adc
sub
(bad)
imul
int3
aaa
adc
into
pop
inc
sub
in
cs
inc
enter
loop
sahf
mov
sub
jge
sbb
xor
jle
mov
ds
into
not
std
fwait
ins
into
data16
repnz
push
cmps
dec
into
jmp
ret
sti
mov
sub
mov
out
cmp
pop
nop
data16
xlat
xor
cmps
cs
mov
sbb
in
pop
mov
out
mov
adc
jp
leave
aad
ret
add
add
xor
rcl
push
movs
rcl
cmp
call
inc
ins
ss
into
sbb
sub
add
pop
arpl
cdq
in
jl
mov
pusha
mov
cwde
fisttp
inc
into
fwait
push
and
ins
jp
dec
lods
mov
xchg
mov
int3
or
push
mov
xor
push
sbb
mov
cwde
outs
test
xor
lahf
out
(bad)
fsubr
mov
outs
dec
aas
dec
cmp
or
in
imul
pop
push
xchg
(bad)
clc
out
into
cmp
(bad)
ds
imul
jnp
lods
mov
pop
out
adc
add
lahf
movs
mov
std
fisttp
retf
into
pop
add
icebp
lods
aas
movs
inc
rcr
(bad)
fsubp
pop
into
jne
aaa
lods
dec
je
ds
push
into
mov
jmp
cmp
add
mov
jge
into
add
cli
jmp
jg
loope
xor
pop
adc
repnz
outs
sbb
pop
call
scas
add
jg
pop
mov
test
mov
push
cdq
dec
pop
xchg
ret
xor
fiadd
mov
cmps
bound
xchg
(bad)
mov
push
sub
mov
and
sbb
jae
rol
mov
xor
push
ss
into
aaa
test
mov
sub
(bad)
sti
mov
inc
xchg
into
xchg
jbe
xchg
mov
push
cmp
xlat
je
test
xchg
push
pop
dec
inc
mov
mov
adc
mov
call
lock
mov
cmp
inc
fsubr
inc
neg
cmc
jp
pop
je
test
mov
into
test
push
xlat
pop
or
jnp
in
into
dec
outs
jns
xor
pusha
or
mov
(bad)
inc
cmps
into
pop
mov
aad
into
inc
mov
jb
shl
aaa
ret
adc
into
mov
jne
into
add
xchg
jle
cmp
(bad)
mov
aas
dec
in
shl
fsubr
into
sbb
push
data16
xchg
mov
mov
call
push
es
pop
jmp
std
pop
lods
sbb
dec
add
add
and
(bad)
xchg
or
dec
and
test
jmp
push
lods
cwde
clc
xor
cmp
push
shr
into
scas
sti
mov
jb
rol
mov
jae
(bad)
shl
jno
test
imul
and
out
jl
xor
dec
pop
int3
into
pushf
mov
jns
xchg
gs
retf
ja
rcl
das
cdq
into
adc
stos
leave
idiv
into
cmp
push
cmc
mov
scas
mov
clc
ret
xor
cmps
dec
sub
into
les
scas
cmp
sub
dec
ins
and
mov
cmp
jb
mov
outs
add
call
xchg
jno
into
cmp
mov
xchg
mov
int
icebp
scas
movs
and
dec
out
(bad)
into
aad
sub
push
xchg
push
ret
(bad)
pusha
int
movs
in
inc
adc
push
shl
lods
cli
fbstp
fs
hlt
into
xchg
sahf
mov
fwait
movs
out
add
and
inc
or
add
rcr
out
in
lods
cld
dec
(bad)
add
clc
into
push
add
sbb
into
bound
shr
pop
scas
adc
mov
push
xor
into
mov
sub
scas
mov
push
(bad)
int3
sub
int
cs
pop
into
xor
add
jecxz
adc
inc
das
into
out
pop
push
aas
ins
in
adc
xchg
cmp
into
inc
fmul
ss
shr
out
mov
popf
jg
pusha
sbb
test
shr
pop
pop
sub
scas
or
mov
mov
and
movs
into
mov
aad
sub
fcmovne
inc
cmp
dec
into
loope
arpl
sub
xlat
xor
nop
sahf
mov
ins
outs
inc
dec
sub
fstp
mov
dec
push
mov
sahf
mov
sub
mov
ror
cmps
cmp
mov
into
push
push
dec
push
jecxz
into
stos
aaa
cmp
test
push
out
ds
cmp
xchg
xchg
test
cmps
xlat
xchg
(bad)
adc
into
loopne
mov
jl
jnp
test
jbe
aam
fxch
cmp
(bad)
push
imul
into
cmps
test
push
and
outs
stc
sbb
into
outs
(bad)
dec
adc
fldcw
aaa
push
into
fisttp
jns
or
into
cs
sub
mov
push
jne
into
ins
xor
rcl
into
cmp
popf
pop
arpl
outs
or
xchg
lods
push
shl
push
inc
(bad)
in
scas
into
jle
stos
sar
xor
iret
xchg
inc
dec
mov
inc
xchg
in
and
push
into
aas
adc
mov
das
fs
pop
xchg
into
imul
xchg
jno
into
jns
push
cmps
aad
mov
dec
xchg
dec
mov
xchg
jbe
into
ret
les
push
add
into
dec
cmps
out
or
xchg
and
dec
lods
mov
lea
add
into
mov
ret
sub
js
into
fwait
inc
lahf
enter
into
pusha
sub
xchg
inc
jae
mov
xor
mov
add
sti
repz
into
cmps
loope
add
popf
mov
pop
in
or
pusha
jmp
and
jns
addr16
dec
into
inc
ret
pop
and
dec
add
popf
pop
push
jae
cdq
leave
call
pop
mov
sub
aas
pop
into
inc
dec
adc
dec
(bad)
mov
mov
push
lock
fisttp
or
dec
popa
fs
pop
shl
mov
into
int
pusha
xchg
scas
dec
into
jo
jnp
in
arpl
leave
and
xchg
into
inc
xor
nop
fmul
dec
enter
mov
dec
adc
out
out
jg
mov
mov
scas
cmps
pop
push
(bad)
cwde
mov
ror
mov
into
ja
push
adc
ds
and
mov
xchg
es
in
into
push
pop
sahf
inc
aam
or
mov
test
mov
lock
scas
or
ja
es
into
ins
mov
stc
lahf
mov
xchg
or
dec
mov
push
or
in
xchg
ja
mov
push
sub
push
mov
shr
cli
xor
jno
mov
(bad)
test
xchg
jno
mov
js
dec
bound
dec
adc
test
ja
cmps
(bad)
movs
adc
cmp
ret
popa
into
sub
mov
mov
iret
xchg
sbb
cld
inc
lods
sub
mov
add
xor
cmps
and
je
mov
test
(bad)
mov
jle
ds
or
mov
pop
sti
adc
sub
push
add
js
lods
gs
xchg
sub
pop
(bad)
mov
jns
int
adc
into
shl
outs
es
mov
sbb
ins
sbb
jle
or
push
std
sar
jmp
mov
mov
into
rcl
dec
cmp
cmp
cmp
jo
clc
mov
jno
or
jecxz
xor
pop
cmp
pop
in
into
jne
fwait
xor
xchg
into
adc
(bad)
popf
mov
mov
in
enter
mov
fcmovnbe
loopne
jge
xchg
test
pop
nop
inc
add
aaa
mul
mov
into
sub
cmps
cld
mov
dec
aad
outs
leave
imul
loop
(bad)
xchg
pop
into
cmp
hlt
lock
das
mov
lds
into
jge
and
test
add
jecxz
mov
pop
(bad)
retf
pop
(bad)
mov
ret
faddp
(bad)
mov
stc
into
mov
mov
push
je
stos
rcl
into
fst
add
cmp
scas
into
dec
pop
idiv
into
arpl
or
shl
add
pop
inc
mov
mov
arpl
mov
lods
inc
dec
and
adc
into
cmp
cdq
cmp
pusha
ror
sub
out
lds
mov
loop
mov
pop
adc
xchg
(bad)
gs
fwait
adc
sti
ds
xchg
fs
cld
js
lods
mov
mov
and
push
(bad)
shl
scas
xchg
out
cs
pop
sbb
jae
push
into
dec
icebp
je
and
mov
out
sub
loopne
jge
imul
fadd
into
inc
hlt
stos
stos
aaa
repnz
inc
mov
mov
xchg
xor
push
scas
mov
dec
icebp
inc
dec
inc
jp
retf
adc
jl
scas
jmp
out
inc
sub
xchg
cmp
hlt
stos
dec
sub
pop
push
into
cmp
inc
in
adc
daa
into
mov
jmp
jmp
dec
jle
out
pop
mov
sbb
or
int
jmp
test
scas
into
movs
jno
mov
into
loope
or
ret
into
inc
addr16
int
dec
xchg
out
sbb
sbb
test
sub
cmc
in
lods
in
(bad)
sti
stc
sub
mov
mov
stos
mov
into
add
or
cmp
push
ret
ror
mov
adc
jae
sbb
or
adc
pop
pop
into
push
ret
out
fstp
into
std
stos
mov
sbb
into
adc
call
mov
jmp
ins
add
pop
and
mul
inc
test
jmp
enter
and
into
call
stos
movs
into
lock
aaa
push
adc
adc
dec
int
rol
idiv
push
sbb
jnp
into
out
mov
push
rcr
cmp
scas
push
dec
xchg
leave
repnz
mov
inc
pushf
cld
xchg
add
inc
dec
xchg
or
push
lock
loope
(bad)
push
out
xchg
xor
into
loopne
mov
mov
ret
call
sub
ds
sahf
fidivr
xchg
adc
push
call
or
adc
mov
outs
xchg
movs
mov
mov
pop
or
icebp
add
xchg
ins
pop
test
cmps
cmp
jmp
into
inc
mov
xor
jecxz
out
in
into
mov
ror
(bad)
cmp
or
je
or
push
pop
cmc
push
xor
add
fdivr
into
fdiv
and
xchg
loope
mov
add
dec
inc
sub
fld
jns
enter
pop
(bad)
adc
ins
inc
jmp
lods
adc
call
mov
ja
or
ret
push
std
mov
jmp
(bad)
aaa
into
ins
in
push
adc
mov
pop
pop
in
into
je
jp
in
data16
cs
cmp
(bad)
aas
loope
xchg
dec
enter
ret
jmp
ror
cmps
inc
add
ins
or
and
fstp
push
into
push
lock
xchg
jae
lods
xchg
xchg
xchg
scas
addr16
and
push
into
(bad)
lds
imul
cmp
and
sti
jnp
into
icebp
jne
cmp
mov
(bad)
aam
push
sbb
and
(bad)
loopne
push
adc
lahf
jne
imul
daa
cli
hlt
jo
and
add
push
retf
(bad)
into
fstp
pop
(bad)
mov
into
add
pop
xchg
sbb
js
inc
add
jns
into
ss
xor
mov
(bad)
into
neg
in
cmps
test
clc
imul
loop
mov
ja
(bad)
shl
jae
xchg
dec
imul
mov
inc
push
sbb
dec
sbb
adc
sub
popa
fwait
sub
addr16
and
jbe
cmps
in
or
fidivr
or
aad
xchg
nop
int
sub
jmp
ins
into
mov
das
mov
adc
or
pop
mov
xchg
popf
and
out
dec
loop
mov
pop
out
adc
cmp
ror
xor
adc
scas
pop
out
test
ficom
dec
mov
sub
lods
aaa
arpl
xchg
inc
pop
xchg
out
jp
mov
cdq
xchg
xchg
cmp
into
lods
cmps
(bad)
xchg
jecxz
into
retf
(bad)
scas
test
mov
xchg
loop
into
xor
xchg
xchg
nop
scas
jns
adc
aad
outs
mov
punpcklbw
mov
les
mov
dec
or
movs
enter
into
ror
xor
mov
pop
out
dec
add
iret
mov
(bad)
mov
neg
into
add
cmc
jle
push
into
inc
addr16
mov
mov
cmc
mov
jo
rcr
inc
mov
inc
clc
into
fidiv
pop
push
into
bound
(bad)
pop
inc
test
test
push
fidivr
nop
mov
rcl
(bad)
jb
mov
adc
mov
or
stc
and
sbb
mov
xor
(bad)
cmp
mov
pop
pop
xchg
(bad)
retf
and
xchg
into
adc
pusha
imul
rcr
cmc
(bad)
into
xlat
repnz
fwait
scas
retf
mov
imul
movs
sbb
in
adc
mov
lahf
jae
in
push
fsubp
xchg
int
jle
std
test
scas
mov
loopne
aam
dec
addps
stc
loope
mov
ds
(bad)
into
cwde
mov
mov
lods
mov
sub
(bad)
or
arpl
into
js
stos
mov
push
mov
outs
dec
mov
pop
add
cmp
mov
inc
or
jnp
jle
cli
shl
push
fistp
mov
cwde
jo
pop
jmp
out
jl
fisub
lock
cmp
into
aaa
or
mov
icebp
lods
lahf
into
popf
or
aam
into
pop
pushf
pop
inc
(bad)
cmp
pop
test
sub
retf
mov
rcl
test
popa
data16
retf
mov
jecxz
fidiv
fdivr
out
ds
cmc
into
pop
cwde
mov
movs
push
mov
cwde
into
pusha
inc
adc
sbb
mov
jl
ds
pop
push
test
push
out
inc
(bad)
sbb
daa
retf
sar
shl
retf
dec
adc
into
repz
sub
dec
push
int3
push
je
pop
inc
into
inc
adc
mov
ja
dec
rcl
mov
mov
and
into
jmp
lds
aas
inc
mov
outs
(bad)
out
mov
mov
xchg
jno
jp
into
mov
outs
(bad)
cdq
outs
jnp
push
cmp
aaa
sub
call
arpl
hlt
stos
dec
into
aas
jecxz
mov
(bad)
xchg
xor
sbb
push
cmp
fnsetpm(287
into
loopne
jae
cld
arpl
lods
scas
and
xchg
out
or
test
fmul
shl
fisttp
cli
call
dec
push
sub
out
fmul
icebp
cs
mov
out
pop
ror
and
and
(bad)
call
jmp
or
pop
and
ja
repz
mov
pop
dec
mov
xchg
sahf
add
pop
cmps
(bad)
push
into
pop
jmp
into
sub
mov
jle
xchg
scas
and
push
push
dec
mov
fisub
outs
mov
mov
out
push
into
enter
fadd
retf
pop
dec
ror
or
jbe
std
aas
inc
xchg
les
mov
(bad)
test
xchg
cmps
mov
jns
scas
inc
dec
sub
nop
sbb
(bad)
call
inc
cmp
outs
into
cmp
scas
xchg
cld
xlat
aam
std
stos
push
iret
into
arpl
dec
jl
(bad)
aas
pop
js
div
cmp
lock
mov
push
dec
mov
mov
call
sbb
and
lods
pop
out
and
sbb
lods
xchg
sub
(bad)
out
jae
ror
inc
imul
mov
mov
into
cmp
pusha
test
sub
lods
outs
xchg
rcl
and
shl
sbb
mov
dec
into
jge
jno
pop
sahf
mov
into
mov
rol
into
shl
div
pop
gs
into
or
dec
cmp
and
or
(bad)
xchg
in
into
rcl
pop
adc
xor
lods
(bad)
xor
inc
xor
in
into
repnz
retf
jne
dec
into
arpl
ficom
(bad)
ror
xor
leave
out
push
mov
outs
inc
add
jecxz
into
jno
loopne
ror
pop
shr
into
rcl
cmp
repz
mov
xor
and
ja
and
and
inc
ret
jmp
push
pop
sub
push
mov
or
movs
iret
sbb
and
cld
adc
ficomp
xor
xchg
popa
mov
dec
fstp
mov
dec
into
sub
in
ins
push
repz
scas
or
(bad)
(bad)
jl
into
icebp
out
push
mov
std
inc
sahf
xor
loope
inc
stos
mov
or
and
test
jle
push
daa
jae
ins
mov
es
outs
mov
inc
add
jae
sahf
movs
clc
das
push
and
into
movs
push
hlt
(bad)
pop
into
gs
pop
mov
cmps
jmp
into
fprem
or
mov
and
adc
fisubr
shr
stos
imul
cld
and
les
test
scas
lds
stos
push
shl
in
scas
into
mov
or
jp
adc
aam
or
xor
test
test
shr
xchg
push
jge
sti
loop
adc
gs
into
jns
inc
je
dec
push
arpl
adc
and
neg
mov
cs
data16
cmps
xchg
xchg
jns
mov
or
mov
hlt
into
push
xchg
xchg
std
sahf
daa
jecxz
cs
into
cmp
jnp
dec
das
fucomp
fcomp
into
push
popa
fucom
adc
scas
in
sub
gs
dec
cmp
dec
mov
in
or
aas
cmc
scas
std
fcmovnb
iret
inc
jno
repnz
xlat
into
jmp
cmps
test
mov
mov
sub
cmp
dec
into
ins
cs
pop
push
call
mov
loopne
sbb
sbb
dec
dec
adc
pop
into
mov
push
mov
fdivp
into
add
(bad)
sar
push
enter
push
xchg
into
je
pop
movs
vcvttss2si
test
in
push
stc
xchg
int
cli
fdivrp
dec
fnstenv
(bad)
mov
test
dec
test
cmp
xor
into
push
adc
cwde
pop
pop
into
sahf
cld
mov
sbb
sub
ror
cmps
push
je
scas
loopne
pop
and
into
test
in
(bad)
mov
sbb
cmp
into
out
add
call
inc
jl
add
adc
cmps
adc
dec
push
dec
stos
stos
repz
cmp
inc
into
(bad)
inc
cmp
cmp
mov
sbb
dec
fld
mov
inc
mov
enter
pop
adc
push
loope
add
outs
popf
jecxz
loop
ficom
into
pop
add
sub
ret
mov
(bad)
jo
jno
into
cs
call
neg
into
rol
imul
sbb
call
jnp
(bad)
int
test
xor
add
mov
out
rcl
pusha
pop
test
outs
jb
adc
shl
(bad)
into
add
fwait
or
mov
mov
out
add
ficom
test
jae
pop
jae
in
cld
dec
jb
scas
imul
add
into
dec
add
into
mov
ror
in
fild
ja
jns
jl
into
mov
sbb
adc
inc
jae
mov
dec
jbe
inc
mov
mov
and
fdiv
(bad)
out
clc
movs
inc
xchg
into
scas
push
jae
enter
pop
jmp
sub
adc
into
jns
test
pop
(bad)
call
test
pop
clc
jl
movs
rcr
iret
gs
cmp
mov
inc
bndldx
ror
test
fiadd
dec
push
or
adc
xchg
inc
jbe
jns
into
pop
mov
pop
clc
into
sub
cmp
cdq
xor
fs
xchg
in
or
and
stos
repnz
push
xor
mov
and
mov
cdq
xchg
loop
or
unpcklps
or
cmp
fs
adc
imul
into
scas
in
xchg
rcl
jmp
push
or
fidivr
cmp
mov
rcr
into
lods
(bad)
in
popf
cli
shl
data16
sbb
or
add
fisttp
(bad)
mov
pop
pusha
(bad)
sti
into
cmps
idiv
mov
fucomi
adc
ins
cld
lea
or
pusha
loop
xchg
daa
push
jbe
xchg
loope
scas
cmp
jmp
(bad)
mov
pop
mov
test
cdq
mov
fidivr
pop
mov
fcomp
movaps
lea
xchg
into
add
mov
aam
cmps
scas
xchg
test
into
hlt
and
xor
inc
das
(bad)
into
fcomp
mov
in
into
sub
ror
imul
pop
jmp
dec
ja
sidtd
jno
in
mov
retf
adc
sbb
dec
cs
sar
and
(bad)
into
loop
sbb
icebp
cli
movs
into
sub
mov
sti
fwait
adc
(bad)
out
lods
jmp
add
ror
sbb
cmc
and
push
into
sub
jmp
xor
out
sub
(bad)
fld
sbb
lods
lods
rcr
pop
jp
pop
and
or
call
pusha
daa
into
lahf
xchg
adc
jnp
loope
mov
push
cmc
xchg
in
dec
and
jns
or
into
push
fmulp
lods
ret
cmp
das
pop
js
xchg
mov
add
pop
test
mov
fisub
lds
or
dec
dec
dec
mov
into
cs
fcom
push
and
jb
xchg
gs
int
test
and
xchg
scas
lea
xor
xchg
mov
call
popa
movs
(bad)
push
fisubr
dec
or
mov
mov
pop
jne
mov
into
loop
movs
sub
(bad)
inc
outs
movs
inc
cmp
xchg
jmp
pop
adc
dec
cmp
std
(bad)
mov
inc
lods
jmp
shr
adc
xor
add
inc
mov
into
xor
mov
in
aad
in
xor
shl
nop
sub
aas
repnz
mov
into
iret
sub
sub
cmp
dec
loopne
sbb
into
jecxz
dec
xchg
xchg
mov
xchg
into
sub
or
fdiv
into
xor
lds
push
xchg
pop
push
jp
into
aas
push
popf
ins
push
sbb
in
lahf
stos
sub
test
jmp
dec
dec
jecxz
popf
sahf
ja
push
into
xor
into
dec
rol
mov
mov
fldenv
stos
mov
scas
mov
sub
pop
cmc
imul
fwait
push
lds
ror
iret
xchg
sub
inc
scas
xor
test
and
jl
std
xor
shl
pusha
hlt
mov
das
xor
or
rol
shr
in
rol
rcl
fwait
push
xchg
add
xchg
jp
pop
into
xchg
das
mov
into
mov
xor
inc
push
loopne
sub
inc
(bad)
(bad)
sbb
sbb
dec
lahf
(bad)
into
dec
cmp
jge
aas
dec
les
scas
pushf
jbe
pop
xchg
mov
into
mov
xlat
and
push
mov
imul
or
jae
outs
mov
inc
frstor
data16
into
nop
dec
adc
push
inc
push
jge
into
loope
in
fst
and
pop
fwait
cmp
jne
or
add
(bad)
fs
mov
outs
xlat
push
xchg
into
xchg
es
jge
push
fimul
inc
fsubp
xlat
pop
iret
into
sbb
bound
outs
sbb
cwde
pop
lods
leave
inc
dec
shr
cmc
and
into
test
adc
into
daa
jmp
sahf
mov
lea
lods
xor
ins
fiadd
jmp
sahf
mov
adc
test
inc
je
push
ret
dec
into
scas
fdivr
push
stos
popf
inc
mov
out
mov
inc
loop
icebp
das
push
jbe
loope
into
mov
fiadd
inc
pop
cmp
or
xchg
jp
cs
push
dec
sbb
lahf
lds
mov
scas
into
pop
jp
ror
into
pop
mov
jecxz
mul
sti
into
push
fucomp
add
add
jp
ja
jl
ror
xchg
fistp
out
mov
aas
sub
xor
into
repz
inc
popa
xor
xchg
into
retf
fwait
js
std
xchg
into
ret
sar
loop
leave
into
(bad)
imul
or
ja
ins
dec
lock
ret
call
and
or
loop
fnstcw
mov
imul
(bad)
mov
cdq
pop
arpl
bound
jo
into
fsub
ss
pop
mov
popa
repnz
add
iret
lahf
xlat
rol
(bad)
jp
mov
fimul
cmp
(bad)
imul
xchg
into
or
int
mov
fisttp
into
mov
mov
into
addr16
test
xor
into
cwde
pop
xchg
aaa
test
cmps
sbb
xchg
scas
fist
lds
into
add
in
xchg
out
cmp
inc
xor
into
mov
mov
enter
pop
inc
mov
call
loop
sub
fsubr
repnz
je
fs
pop
lods
outs
or
dec
sbb
cld
cmc
adc
or
movs
push
pushf
sbb
into
shl
retf
dec
out
je
push
and
add
(bad)
push
or
loop
repnz
cmp
inc
adc
stos
xchg
xchg
ror
and
jg
mov
sub
or
lods
xchg
and
into
push
ret
movs
add
lods
and
lock
(bad)
xor
imul
push
lods
lods
pop
mov
repz
and
xlat
hlt
xchg
jecxz
sti
xchg
mov
lods
and
cmp
repz
push
adc
mov
sub
pop
add
es
jg
mov
into
(bad)
pop
lds
nop
mov
add
into
out
cmp
loope
push
(bad)
into
test
lock
pushf
outs
mov
into
mov
cwde
mov
out
rol
pop
into
mov
inc
out
add
into
jb
xchg
out
adc
ins
stos
add
call
mov
mov
xor
mov
scas
sub
fimul
into
js
cmp
sbb
pop
into
ins
pop
rcr
sub
or
mov
test
pop
inc
mov
cmps
or
push
imul
jae
cmp
mov
xchg
outs
xor
icebp
xor
int3
clc
inc
cmp
mov
(bad)
fild
into
xchg
(bad)
mov
nop
xor
into
sbb
pop
lea
fadd
(bad)
lahf
inc
xor
retf
imul
xchg
fimul
and
(bad)
call
mov
(bad)
into
jge
sub
jnp
adc
lds
inc
sub
pop
adc
into
mov
xchg
sbb
(bad)
adc
outs
shl
sub
jmp
enter
test
and
mov
xchg
dec
adc
shl
addr16
int3
cli
or
test
mov
(bad)
fidivr
into
mov
retf
jbe
into
inc
cmp
in
jp
into
in
test
add
(bad)
int
jnp
pop
adc
xchg
je
into
in
push
sub
into
(bad)
mov
outs
call
jecxz
sbb
sbb
jmp
mov
fisubr
xchg
or
aaa
add
push
mov
push
fucom
lods
inc
adc
(bad)
stc
pop
cdq
mov
add
out
imul
(bad)
dec
pop
shr
jbe
adc
xchg
inc
idiv
into
cwde
jae
add
clc
and
jns
mov
push
gs
push
push
lods
call
ins
(bad)
jg
cmc
into
add
es
push
push
into
jle
dec
stc
out
adc
jge
mov
push
retf
cmc
xor
jecxz
pop
add
into
sti
(bad)
fild
into
cmc
sbb
or
aas
icebp
adc
add
xchg
xor
mov
mov
or
jbe
add
push
jecxz
add
loopne
outs
ficomp
push
sbb
add
rol
inc
jae
cmp
xor
jmp
jecxz
hlt
xchg
das
push
push
rol
idiv
into
out
arpl
dec
in
cmc
jle
ins
pop
xchg
into
add
aam
sbb
into
mov
cmp
mov
bswap
das
fstp
(bad)
into
or
jbe
xchg
jp
xchg
cmp
lds
or
jp
in
retf
enter
into
jb
shr
into
fiadd
je
into
cwde
fsubr
sub
xchg
ss
movq
jp
sti
push
pop
xchg
sub
dec
(bad)
ins
adc
sbb
popa
into
pop
jb
cdq
sub
lea
xor
into
cmp
and
arpl
jecxz
out
mov
lods
pushf
in
fsubr
icebp
retf
push
shl
into
and
jecxz
leave
retf
(bad)
mov
mov
push
fwait
inc
into
or
int3
(bad)
into
sti
ror
es
pop
pop
loope
dec
jns
sbb
loop
inc
pop
adc
aad
stc
sbb
xor
iret
into
push
xlat
fstp
xchg
xor
scas
stos
popa
cs
into
fnclex
sub
mov
rcl
xchg
jp
jb
push
push
out
mov
pop
movs
adc
and
cld
mov
pop
in
out
fidiv
retf
jae
stc
retf
leave
nop
into
shl
pop
ds
scas
ins
add
push
push
sbb
test
and
jmp
push
adc
mov
lds
mov
cwde
into
call
add
mov
and
cmps
xchg
pop
in
dec
test
out
xor
js
mov
and
jmp
pop
cmp
ss
pop
call
mov
mov
movs
xor
bound
stc
sti
dec
in
mov
jl
jmp
fmul
aam
ja
out
clc
push
bound
xchg
sub
lea
into
test
sti
mov
inc
pop
lods
mov
rcr
jecxz
(bad)
dec
rol
inc
inc
test
xchg
int3
cmovg
pop
addr16
pop
into
movs
push
(bad)
cs
mov
addr16
test
out
fmul
rcr
ror
adc
sbb
into
cmp
mov
cmp
int
dec
test
xchg
xchg
in
and
into
fs
pop
mov
out
into
mov
mov
shr
mov
loopne
shl
addr16
repz
rcr
jo
scas
mov
into
push
cli
rol
add
(bad)
leave
xchg
xchg
and
fmul
push
push
nop
ror
(bad)
push
(bad)
or
aad
loopne
jl
jmp
push
lods
xchg
call
xchg
inc
push
mov
jb
add
(bad)
scas
(bad)
mov
lock
pop
(bad)
cmps
inc
sar
fimul
mov
sti
test
jbe
or
jecxz
not
sbb
in
outs
into
imul
dec
out
push
(bad)
into
pop
ret
call
xchg
into
cs
jmp
fs
into
jmp
fwait
loop
into
push
imul
fstp
xchg
cmp
inc
popa
movs
test
mov
or
and
ficomp
or
in
jo
cmp
push
ss
push
mov
sub
es
mov
cmp
arpl
xor
push
xor
cmp
das
aas
or
cmp
call
stos
psubq
cmps
xor
scas
jae
test
push
mov
lea
ins
std
pop
jns
mov
xor
imul
mov
into
js
mov
aad
out
scas
mov
dec
cmp
(bad)
fisub
into
je
sbb
mov
and
mov
mov
push
push
dec
into
sub
xor
mov
popf
ins
into
iret
int3
jae
pop
cmps
mov
push
loopne
outs
sub
fdiv
setb
pop
in
mov
sub
mov
jg
xchg
sahf
inc
adc
mov
dec
iret
lods
into
int3
fcomp
sub
adc
adc
scas
add
jnp
inc
popf
lea
stc
xchg
jmp
into
push
mov
push
cmp
aaa
into
fld
dec
cs
push
and
add
mov
into
test
arpl
ins
push
imul
mov
into
out
rcl
adc
test
out
rol
lahf
cmp
push
into
fwait
jle
(bad)
(bad)
or
pop
scas
sub
das
clc
fcomi
dec
(bad)
and
ds
sub
xor
dec
nop
add
fdiv
mov
ins
push
jmp
ret
lods
into
xlat
js
or
sub
push
xchg
sub
adc
out
xchg
dec
xor
lods
cdq
push
xchg
cmp
xchg
inc
into
mov
scas
dec
shl
cdq
adc
imul
mov
cmp
cmp
mov
pushf
sahf
cmps
inc
enter
into
jae
test
mov
dec
ficom
ins
inc
sub
dec
lock
mov
outs
rcl
lahf
jmp
nop
je
push
sti
ins
push
add
in
cmp
fadd
lahf
into
stos
cs
push
inc
ins
mov
mov
pop
movs
into
pop
lods
hlt
xor
cmp
inc
into
sub
mov
into
sbb
aam
scas
scas
push
jno
add
pop
push
outs
pop
or
jmp
add
pop
pusha
dec
data16
jle
inc
add
aaa
jb
inc
and
adc
cmp
test
loopne
cmovbe
leave
mov
push
xlat
shr
xor
outs
leave
into
cmps
push
arpl
movs
jbe
mov
sub
into
push
call
test
jnp
push
(bad)
jg
jp
outs
into
mov
jge
mov
pop
pusha
pop
jb
inc
int3
enter
cmps
loop
mov
sbb
mov
fisubr
int
sub
repnz
and
into
cmp
outs
mov
inc
push
push
into
fdiv
js
mov
dec
aad
inc
icebp
pop
mov
lea
xchg
mov
scas
lds
repz
ret
stos
cmps
sti
or
int
sbb
out
mov
scas
into
jg
ins
and
into
cld
cli
sahf
jge
retf
into
sbb
pop
mov
dec
jl
mov
push
mov
inc
inc
lods
retf
into
sub
(bad)
movs
and
scas
outs
pop
xor
sar
pop
ficomp
adc
js
fisttp
shr
lods
add
xchg
imul
imul
xchg
in
test
pop
add
lods
rcl
jmp
inc
mov
jbe
adc
int3
sti
jns
add
sub
push
stos
jbe
clc
stos
pop
and
add
pushf
jg
into
sub
xchg
into
loopne
add
jne
fsub
std
cmp
or
inc
push
lock
and
mov
adc
push
dec
sub
je
cmp
loope
pop
cmps
hlt
or
mov
fsubr
ins
mov
js
sub
push
mov
repz
inc
dec
add
out
test
push
inc
into
dec
inc
loop
mov
cmps
retf
test
paddusw
stos
mov
or
ret
into
xchg
push
movs
cmp
pop
jns
into
mov
jmp
rcl
push
sub
mov
xchg
sub
shr
xor
mov
into
dec
das
fild
cld
fdivrp
into
push
add
xor
ja
(bad)
jns
xchg
out
cmp
pop
into
iret
mov
inc
push
fisub
cdq
and
mov
xchg
into
imul
sub
rcl
dec
enter
mov
sbb
nop
jbe
cmp
repz
cmp
addr16
xor
add
add
mov
fsin
cmp
outs
inc
cmp
adc
mov
aaa
into
aam
jb
btc
cmps
into
fucom
xchg
adc
das
movsx
scas
mov
ror
pop
inc
into
push
ror
loopne
jmp
std
xchg
pop
call
mov
arpl
imul
or
in
loop
sub
cs
mov
xchg
or
add
das
mov
inc
mov
mov
sbb
(bad)
push
imul
leave
out
sbb
mov
lods
push
pop
jecxz
into
or
add
out
pop
jecxz
into
jbe
int
rcr
lods
into
adc
xchg
xchg
push
push
inc
xor
jp
imul
mov
sar
mov
(bad)
test
dec
mov
js
div
aaa
xchg
nop
mov
into
inc
mov
pop
or
jge
xchg
sbb
push
and
cdq
mov
lock
mul
xlat
and
rcr
mov
mov
fisubr
mov
aad
outs
inc
repnz
scas
ins
mov
jb
sahf
push
into
mov
or
dec
sub
xor
mov
add
das
cmps
data16
shl
stos
call
push
cmps
or
cmp
mov
push
mov
xchg
into
shl
(bad)
fcomp
rdtsc
mov
xor
lods
mov
pop
mov
js
add
mov
enter
dec
into
fcmovnbe
fwait
sub
(bad)
retf
cmp
sub
fsubr
in
jle
into
add
loopne
imul
dec
cmp
outs
enter
fcomp
mov
loope
loop
xchg
call
das
ret
push
sub
pop
push
fs
fisubr
and
icebp
into
nop
xor
or
test
push
(bad)
ror
lods
call
cmp
add
add
cwde
loopne
add
jne
scas
dec
mov
mov
mov
lock
adc
test
and
jmp
xchg
movs
shl
pop
sahf
into
out
nop
loopne
inc
or
fidivr
dec
rcr
or
push
dec
ret
inc
jl
fsub
arpl
into
xor
xchg
inc
les
inc
adc
hlt
xchg
pop
into
mov
aam
into
dec
imul
into
std
mov
push
adc
rcr
or
(bad)
and
mov
sub
mov
xor
push
mov
sbb
xchg
fisttp
into
ins
call
jmp
dec
arpl
mov
add
sub
icebp
into
adc
ja
rcr
jmp
and
lds
leave
push
div
into
popa
shl
into
xor
inc
push
push
mov
pusha
dec
into
jmp
pop
test
push
loopne
inc
scas
mov
pop
pusha
mov
mov
dec
vmread
push
cmp
jno
shl
pop
nop
into
mov
push
(bad)
stc
in
dec
das
sub
int
scas
addr16
push
pop
push
movs
mov
aas
pop
loop
cmp
mov
bound
cmps
inc
mov
mov
mov
push
jl
dec
jns
mov
into
xchg
mov
clc
into
inc
mov
out
into
adc
rcl
rcr
into
stos
(bad)
aas
(bad)
jle
outs
into
mov
test
shl
jns
mov
xor
mov
ror
inc
enter
in
fldenv
sbb
dec
(bad)
neg
into
adc
adc
in
fwait
or
pop
outs
mov
scas
and
cdq
scas
sahf
stc
cs
or
pop
ja
add
js
daa
outs
stos
add
inc
into
mov
xchg
pop
pop
push
imul
(bad)
jmp
call
push
std
into
adc
(bad)
cmc
sub
shl
sbb
push
ins
pop
sbb
ret
repz
mov
mov
(bad)
mov
into
push
imul
push
xchg
mov
aas
dec
or
xor
ror
push
in
cli
and
pop
enter
mov
pop
(bad)
xlat
leave
mov
dec
into
sub
sub
into
test
lods
dec
addr16
ds
js
sub
sub
or
(bad)
push
enter
in
and
fwait
shl
pop
arpl
mov
loopne
cmp
dec
dec
(bad)
pop
mov
sbb
or
mov
je
jnp
(bad)
loop
cmps
or
adc
sbb
push
push
mov
cmp
push
lock
shr
jb
xchg
inc
fldcw
imul
mov
into
aas
stc
js
sti
sbb
and
pop
pushf
sub
jle
in
gs
ret
pop
mov
test
arpl
into
adc
sub
inc
jle
test
popf
mov
cs
into
fdiv
push
fadd
xchg
cld
lods
test
out
push
adc
repnz
jbe
pop
arpl
inc
fld
pop
stos
mov
out
(bad)
cwde
push
xlat
push
mov
(bad)
(bad)
stc
push
cmp
mov
xlat
ret
btr
lods
or
daa
test
test
scas
mov
movs
fidivr
xchg
sbb
sbb
pop
dec
mov
outs
loop
dec
sub
into
loope
pop
or
push
test
xchg
scas
cmc
cmp
mov
mov
imul
xor
xlat
(bad)
into
fwait
icebp
push
retf
mov
ss
(bad)
xor
jb
cmps
xlat
cdq
nop
mov
cmp
mov
jae
test
(bad)
or
in
arpl
into
mov
sub
jg
add
(bad)
jmp
enter
push
in
xchg
dec
aaa
fcmovnb
icebp
sub
ficomp
pop
into
push
mov
or
cmps
into
mov
xor
mov
jl
into
nop
pop
dec
repz
jecxz
into
cmps
push
out
push
jne
js
mov
and
pop
into
out
(bad)
pop
push
cdq
fild
xchg
push
inc
adc
icebp
retf
pop
fiadd
(bad)
aaa
mov
cmp
into
add
mov
loope
gs
adc
sti
scas
(bad)
xor
repnz
into
pop
fwait
cli
adc
dec
std
aas
into
adc
int
aaa
lods
mov
sbb
mov
out
jne
clc
sub
add
es
(bad)
in
aas
ins
dec
cli
cmp
ds
push
repz
enter
outs
pop
ja
loopne
cmp
push
pop
adc
(bad)
mov
cdq
or
dec
into
mov
(bad)
push
fist
push
into
cmp
fstp
sub
mov
scas
mov
das
jmp
push
add
sub
scas
adc
ffreep
imul
in
sub
retf
and
push
dec
jecxz
mov
call
js
jp
pop
lods
aaa
jne
into
imul
pushf
fadd
imul
nop
push
ins
xor
lods
popf
out
or
jns
(bad)
xor
bswap
lods
nop
mov
adc
arpl
call
into
sahf
repz
or
or
jnp
xor
mov
arpl
lods
add
or
test
adc
push
into
lock
add
mov
xchg
inc
fimul
xchg
hlt
dec
add
shl
into
mov
in
ds
jno
dec
shl
bound
into
pop
movs
loop
in
xor
add
les
mov
mov
fld
into
pop
ficomp
pop
je
adc
lods
adc
cmp
push
mov
jmp
cmp
push
loope
test
std
inc
cmps
xor
push
into
loopne
inc
cmp
notrack
repnz
cmp
xor
clc
dec
int3
fisubr
adc
sbb
addr16
sti
inc
adc
nop
fmul
add
es
fisttp
cmp
leave
cmps
add
mov
cs
mov
scas
mov
pop
mov
and
sti
xchg
out
xchg
adc
in
test
in
test
inc
es
call
ja
mov
push
inc
std
mov
lahf
pop
xchg
into
pop
ret
add
or
pusha
movs
psrlw
xor
inc
mov
stos
sub
(bad)
cmp
ror
cmc
pop
dec
jge
mov
mov
sbb
inc
pop
sub
retf
scas
lds
cmp
not
mov
sub
jns
inc
mov
into
int
push
in
dec
adc
into
push
lods
sub
leave
adc
fs
mov
sahf
inc
dec
repnz
push
stos
test
push
adc
and
add
fdivr
pop
repnz
aad
fdivrp
movs
test
push
mov
scas
push
mov
dec
data16
(bad)
jnp
fucomp
inc
sub
and
imul
mov
out
(bad)
ds
bound
inc
into
or
push
xchg
add
mov
dec
add
cmp
addr16
xor
add
inc
(bad)
push
cld
into
fisttp
jp
sahf
xchg
xchg
into
mov
xchg
add
in
cld
stos
das
mov
dec
xor
fiadd
jmp
jbe
(bad)
and
out
fisttp
jl
or
push
addr16
out
push
jle
mov
push
mov
out
xchg
imul
or
into
repz
loope
xchg
lods
mov
loopne
sbb
in
xor
(bad)
mov
xchg
pop
and
js
dec
add
je
dec
mov
or
arpl
pop
push
arpl
lods
and
fldcw
mov
xchg
scas
fwait
add
(bad)
xor
into
lods
in
pop
fs
fcmovnbe
into
cmp
out
and
out
into
push
sahf
scas
ficom
add
fsubr
inc
mov
sub
movs
ja
repnz
mov
gs
ja
sbb
movs
fst
out
fmul
adc
dec
lock
loope
hlt
(bad)
and
fild
jmp
dec
adc
imul
test
(bad)
out
sbb
jmp
jecxz
pextrw
mov
dec
lods
mov
mov
dec
in
mov
scas
scas
pop
cmp
inc
int
or
mov
dec
xchg
ror
arpl
inc
mov
cmp
movs
mov
js
jnp
fiadd
lods
xor
(bad)
dec
nop
icebp
scas
mov
pop
shl
jmp
(bad)
out
aaa
shr
aam
inc
inc
repz
and
push
sbb
jp
push
lods
movs
add
sub
into
js
daa
cmp
xor
rol
push
mov
jle
mov
aas
inc
pop
clc
into
cwde
(bad)
xor
test
nop
push
out
lods
mov
nop
test
xlat
jle
mov
mov
dec
and
mov
add
add
dec
sbb
into
fidivr
stos
test
jecxz
ss
mov
dec
cdq
ins
mov
into
inc
dec
inc
sbb
popa
outs
lods
into
jnp
xor
bound
into
jbe
aaa
aas
(bad)
cwde
movs
mov
pop
dec
fadd
into
mov
sub
xchg
push
push
into
imul
inc
into
sahf
mov
add
retf
arpl
bound
xchg
and
adc
or
test
jbe
jnp
cmp
retf
push
dec
sti
jp
nop
adc
dec
sbb
loop
mov
xor
into
sub
aad
sbb
ret
faddp
mov
into
sub
jp
xchg
dec
jb
into
pushf
fisubr
mov
mov
xor
inc
push
into
sub
(bad)
cwde
dec
cs
ins
fidivr
inc
into
pop
dec
jge
inc
outs
rcr
out
xchg
imul
shl
sub
push
lods
and
xchg
movs
jge
(bad)
cmp
bound
fsub
stos
into
enter
cmp
dec
jecxz
jl
shr
movs
nop
je
ds
jo
ret
shr
xlat
sbb
mov
jmp
xchg
xchg
pop
dec
inc
jnp
sub
cmps
jne
cmp
mul
into
jge
int
hlt
push
fsubr
xchg
cmp
into
mov
fidivr
into
int
mov
or
jle
push
popa
aaa
adc
movs
mov
or
dec
sub
js
into
lods
int3
popa
shl
out
mov
sbb
daa
stos
mov
into
int3
jae
cmc
cmp
out
sbb
into
push
xchg
fstp
adc
icebp
into
imul
and
push
jno
cmp
lahf
loope
jecxz
call
dec
dec
(bad)
xchg
xor
into
je
jb
and
mov
loopne
jnp
mov
aaa
dec
pop
mov
into
lahf
add
mov
aad
jg
addr16
inc
(bad)
xchg
push
stc
xchg
into
nop
xlat
cmp
sub
rcr
sub
cmps
daa
bnd
ja
stc
into
or
pop
(bad)
dec
into
mov
mov
nop
into
stos
cli
(bad)
int
xor
(bad)
fisttp
push
dec
loopne
bnd
lahf
mov
inc
sub
sbb
and
and
xor
movs
aaa
dec
push
aaa
cmp
es
sti
push
sbb
mov
or
out
out
adc
test
sbb
mov
or
test
cwde
cli
popa
lods
lahf
and
mov
enter
ror
push
into
(bad)
ins
fst
in
mov
sub
and
jg
jne
lea
aaa
stos
into
icebp
ret
outs
push
test
lods
xor
fsubr
xchg
into
dec
je
in
dec
outs
jno
into
lds
ret
popf
and
lock
dec
and
mov
retf
ret
cmp
mov
xor
add
jns
push
mov
mov
ds
cmp
into
mov
pop
inc
in
stos
rcl
xchg
add
mov
(bad)
jge
mov
pop
test
mov
adc
push
xor
jne
xor
int3
gs
xchg
mov
mov
dec
mov
jb
ins
jo
jg
push
dec
sysret
jl
dec
dec
mov
scas
bound
sub
stc
jbe
hlt
in
dec
pop
mov
mov
ja
in
ret
(bad)
lods
xor
mov
pop
jle
ror
out
in
dec
push
jno
sbb
jb
push
into
test
repz
addr16
lock
adc
les
push
cld
iret
sub
mov
mov
out
test
cmp
(bad)
jmp
(bad)
mov
sub
call
stc
and
into
std
les
inc
into
inc
shr
into
fld
mov
xchg
ins
mov
pusha
stc
int
into
inc
xlat
sar
frstor
jnp
mov
fbld
outs
push
inc
xchg
sub
xchg
mov
(bad)
dec
sbb
pop
mov
mov
scas
and
pop
test
into
out
jle
xchg
(bad)
dec
cmp
mov
fsub
das
into
sub
dec
inc
mov
jle
xchg
int3
xor
lea
dec
or
or
and
mov
add
lods
mov
pop
nop
ror
sbb
cwde
mov
test
pop
ins
into
inc
loop
add
test
jge
and
std
push
adc
jmp
les
lods
dec
aaa
xchg
into
(bad)
sbb
sbb
xchg
jl
into
test
add
inc
and
lods
push
fadd
cli
or
cmp
sub
inc
imul
(bad)
jno
aam
int3
inc
mov
mov
mov
shl
aas
loope
xor
mov
fmul
xchg
inc
mov
test
pop
retf
pop
xor
adc
sti
lods
fimul
push
fdivr
iret
or
loopne
into
dec
xchg
add
mov
movs
mov
cmp
into
cmp
xchg
jl
ror
sub
jecxz
jb
imul
and
mov
push
gs
xor
pop
adc
nop
fs
xor
gs
or
and
add
pop
mov
test
sbb
xchg
fiadd
(bad)
jnp
leave
cmovo
pop
xchg
cdq
int3
add
mov
arpl
ins
mov
push
leave
into
push
dec
xchg
nop
mov
push
jmp
scas
retf
cs
into
fild
and
mov
fcomp
xchg
test
scas
cld
pop
into
repz
js
mov
xchg
adc
into
imul
into
(bad)
fisttp
xor
ins
xor
and
push
rol
jle
lds
or
pusha
mov
ror
fs
adc
and
dec
enter
aas
adc
int3
into
push
push
mov
test
repnz
inc
(bad)
scas
leave
sbb
daa
jge
and
xor
movs
add
into
imul
call
dec
jp
dec
or
xor
xchg
(bad)
aam
je
or
mov
jns
scas
mov
pop
sti
jle
movs
lea
pop
into
dec
dec
or
shl
aam
mov
(bad)
cmp
or
clc
(bad)
ja
push
xor
outs
mov
scas
push
add
cwde
les
or
or
xor
pop
add
mov
aam
mov
dec
rcr
call
and
into
xor
pusha
jge
pop
sub
jg
(bad)
int
loop
mov
(bad)
xchg
mul
retf
into
inc
and
in
dec
std
cmc
xchg
imul
add
sub
sbb
sub
push
xor
(bad)
outs
xchg
in
jnp
lock
inc
bound
out
repnz
push
ja
div
dec
into
and
lods
mov
pop
xchg
add
sbb
inc
push
cdq
add
lea
jecxz
out
rcl
into
pop
sbb
fwait
push
mov
jno
xor
xor
out
mov
xchg
or
dec
dec
shr
std
jle
fcomp
loop
iret
frstor
cmp
jbe
into
nop
dec
pop
pop
(bad)
inc
into
pop
push
adc
push
push
cs
sbb
xor
out
fwait
out
fs
mov
mov
mov
les
popf
fiadd
ret
std
push
into
xchg
push
arpl
nop
mov
movs
adc
mov
into
mul
jbe
(bad)
xchg
fucomp
mov
je
scas
jb
and
sub
loop
fst
mov
push
scas
js
inc
sub
ret
into
(bad)
and
ja
fs
pop
fmulp
shr
into
mov
in
or
pop
xchg
mov
cmp
pop
into
aas
xor
into
aam
jge
xor
cmp
mov
or
mov
cmp
mov
lods
mov
in
(bad)
jmp
mov
or
in
sub
cmc
arpl
pop
scas
outs
(bad)
into
clts
push
pop
pop
into
fst
add
mov
scas
push
fld
xchg
push
pop
movs
inc
sub
fidiv
(bad)
xchg
mov
jp
adc
push
(bad)
hlt
jbe
inc
mov
sbb
sahf
into
jb
cmp
fidiv
dec
jg
jns
dec
xor
fyl2xp1
dec
test
ret
in
into
inc
sub
test
push
hlt
outs
lods
pop
and
inc
lock
scas
(bad)
(bad)
add
(bad)
rcl
jg
inc
aaa
into
ror
and
into
mov
movs
test
pop
cmp
inc
out
iret
rcl
into
call
jns
sbb
cmp
std
xor
xchg
es
mov
ins
xor
or
jns
sbb
jbe
mov
cmp
lds
sar
jg
rcr
xlat
inc
cmp
adc
or
ds
shr
shl
pop
retf
push
mov
imul
addr16
mov
xor
shl
popf
fwait
call
sub
lahf
xor
or
cdq
cli
and
and
gs
popa
mov
and
into
jg
mov
sub
(bad)
stos
mov
xchg
(bad)
adc
push
add
pusha
repz
adc
jbe
es
les
(bad)
in
aad
dec
mov
in
push
in
loope
test
jne
xchg
add
or
into
repz
push
xchg
add
into
inc
cmp
daa
pop
cs
dec
ja
in
cmp
pop
mov
jg
sti
enter
xchg
into
push
jne
xchg
jo
into
imul
push
dec
into
add
push
push
cld
mov
repnz
(bad)
into
jb
cmp
movs
jns
ret
dec
popf
cmps
jmp
movs
stc
ficom
sbb
scas
repnz
outs
fmulp
imul
nop
pop
dec
aaa
pop
mov
clc
sub
test
add
xchg
push
js
retf
jge
cmp
fwait
and
mov
lsl
mov
dec
mov
fld
(bad)
mov
inc
push
dec
jae
mov
mov
xor
pop
adc
add
sub
dec
adc
mov
mov
add
mov
cmc
pushf
lods
add
inc
mov
bound
sub
add
outs
pop
inc
into
mov
jge
out
add
fdivr
out
cs
rcl
sbb
add
mov
and
pop
mov
out
xchg
pop
or
lods
jecxz
lea
int3
(bad)
into
push
div
aam
jbe
pushf
cmp
call
inc
sbb
into
dec
pop
(bad)
mov
inc
popa
test
add
out
or
mov
shl
in
or
iret
into
add
(bad)
repz
sti
lods
loope
sbb
addr16
mov
cmps
mov
rol
(bad)
inc
xor
cmps
mov
(bad)
sub
jbe
lds
pop
scas
xor
push
icebp
or
push
or
dec
mov
inc
cmp
mov
into
pushf
aad
jg
and
outs
jmp
inc
arpl
into
(bad)
in
pop
pusha
dec
mov
ss
out
xchg
and
out
push
mov
push
jno
inc
gs
mov
(bad)
sbb
test
sahf
pop
movs
(bad)
into
(bad)
pusha
aaa
test
test
fistp
jno
out
in
cmp
jae
call
and
push
in
xchg
mov
cmp
aaa
pop
inc
adc
movs
mov
cdq
test
sbb
xchg
sbb
daa
push
cmp
enter
rcl
shl
repz
test
mov
inc
cwde
fsub
push
into
mov
pop
mov
jnp
repnz
pushf
lock
test
mov
in
arpl
fild
js
(bad)
outs
into
or
and
jle
imul
into
push
adc
retf
cmp
inc
mov
ret
fbld
cmp
lods
cwde
call
icebp
cs
cmp
cmp
or
xchg
fisttp
sub
xchg
into
(bad)
jnp
add
into
and
jmp
sub
dec
xchg
mov
cmp
pop
or
pushf
jle
pop
outs
out
(bad)
aas
into
cmc
pop
arpl
cmp
loopne
mov
shl
xor
push
imul
adc
mov
sbb
jo
enter
mov
push
into
es
je
(bad)
popf
pop
mov
mov
inc
lods
dec
arpl
nop
mov
out
loope
test
outs
into
mov
adc
mov
movnti
mov
(bad)
jmp
into
aaa
xor
js
into
jns
rcl
ds
test
dec
shl
inc
inc
(bad)
into
sbb
or
adc
xchg
sar
push
iret
(bad)
pop
fild
aaa
loope
into
adc
jecxz
mov
int
cld
mov
into
push
mov
mov
sub
scas
stos
inc
fs
push
cmc
cmp
mov
and
xchg
outs
cmps
push
mov
test
push
into
adc
add
hlt
pusha
xor
sbb
aaa
test
aam
pop
into
xor
add
pop
cmps
sar
cmp
je
jp
movs
xchg
cmp
mov
retf
scas
aas
stc
cwde
push
mov
(bad)
push
push
imul
iret
les
mov
sbb
mov
je
jo
mov
dec
fstp
test
(bad)
dec
into
jno
mov
cwde
stos
rcl
ror
cmps
inc
xchg
(bad)
scas
fst
into
hlt
xlat
repz
sti
lods
sbb
int3
xor
aaa
rcr
pop
xor
and
imul
sbb
dec
into
ins
sub
retf
outs
into
les
mov
jb
mov
mov
(bad)
xchg
pop
push
icebp
mov
test
into
sbb
adc
into
jbe
test
pop
(bad)
into
(bad)
sbb
bound
xchg
fsubr
pop
daa
fdiv
cmp
mov
xchg
inc
dec
and
add
mov
jmp
test
das
es
out
mov
mov
into
inc
out
cwde
sub
lds
popf
into
jl
cmps
jp
sub
xor
jne
mov
lds
into
test
xor
scas
pop
inc
pop
adc
mov
out
cmp
into
(bad)
fld1
retf
jo
test
inc
arpl
mov
dec
add
gs
jle
(bad)
xchg
ss
scas
popa
cmp
sub
cmp
stos
inc
pop
jmp
fidiv
xchg
fwait
into
call
adc
or
cmps
jmp
loope
(bad)
into
mov
adc
xchg
or
pop
gs
mov
into
loopne
mov
dec
int3
ja
lock
test
and
add
scas
cmp
pop
mov
nop
jmp
test
out
or
cmp
outs
sbb
sahf
sbb
jmp
lods
xor
dec
mov
into
pop
fisubr
xor
sub
shl
mov
mov
lea
in
stos
scas
jl
adc
dec
dec
aam
in
inc
stc
into
hlt
push
fidiv
retf
mov
sbb
add
mov
mov
aam
dec
(bad)
loopne
dec
cmps
xchg
into
mov
mov
int3
ss
adc
inc
push
into
or
xchg
retf
jl
pusha
pop
das
shl
cmps
inc
into
adc
into
sahf
ins
cwde
jp
call
inc
mov
mov
frstpm(287
neg
inc
xchg
pop
ror
mov
xor
cwde
repz
into
cdq
adc
int3
shr
into
out
inc
and
xchg
test
imul
mov
stos
into
sbb
mov
push
sub
outs
or
aam
push
ja
in
cmps
js
fdivr
push
test
xchg
icebp
mov
pop
inc
imul
fistp
pop
pop
lock
std
lods
ror
(bad)
jno
(bad)
jmp
ret
mov
enter
cs
or
inc
jae
out
inc
jp
adc
pop
cmp
call
shr
loopne
sub
into
shl
jmp
mov
xchg
dec
scas
lea
test
sbb
mov
std
into
mov
push
scas
outs
sub
mov
adc
aas
cmp
into
inc
and
lods
call
out
std
mov
sub
xchg
push
and
sahf
fdiv
mov
pop
or
dec
jmp
in
into
mov
and
daa
into
pop
xlat
(bad)
mov
xor
pushf
(bad)
push
in
neg
into
sub
sbb
xchg
arpl
mov
pop
push
mov
xor
push
adc
(bad)
imul
jno
mov
add
dec
sbb
mov
into
xchg
loopne
ror
adc
mov
cs
ret
fisub
stc
and
scas
test
dec
or
test
jbe
aad
(bad)
lock
mov
pushf
mov
(bad)
out
ss
cmp
dec
outs
lahf
retf
cmovno
out
cmp
inc
xor
enter
mov
dec
into
jmp
mul
fmul
shr
mov
jecxz
mov
mov
cmp
adc
xor
add
imul
outs
sar
dec
in
into
xor
and
into
rol
mov
int
mov
stos
inc
sbb
(bad)
repz
retf
lahf
xor
retf
xchg
mov
xchg
out
ja
sub
or
mov
lods
pop
lods
xchg
xor
pop
adc
in
outs
sub
cmp
jecxz
hlt
fs
dec
jns
dec
movs
xchg
pop
(bad)
sti
mov
into
inc
push
imul
stos
mov
jns
cld
dec
mov
scas
scas
loopne
xor
into
loope
icebp
nop
and
dec
sahf
sti
push
adc
das
jbe
cmp
fs
mov
pop
jmp
shr
and
cwde
adc
popa
(bad)
cmp
mov
fdivr
into
test
push
or
cmp
lods
push
retf
xchg
pop
ins
dec
aam
dec
or
in
cmps
stos
cmps
pushf
call
out
into
aas
bound
ficom
mov
adc
setg
adc
mov
(bad)
adc
dec
or
loopne
cld
sbb
mov
lds
mov
enter
ret
mov
pop
adc
mov
sti
into
rol
or
xor
fadd
xchg
cli
popa
xor
sub
jo
test
into
push
adc
ret
test
leave
mov
push
jmp
mov
and
rcl
mov
xchg
seta
into
test
lods
into
dec
inc
stos
rol
xchg
sti
pop
scas
sub
pop
cmp
in
out
lods
mov
out
adc
or
fmul
sub
mul
dec
mov
outs
inc
mov
test
or
pop
jmp
xchg
push
fsubr
int3
and
out
jb
into
rcl
(bad)
lahf
jmp
data16
imul
aaa
bound
sbb
into
pop
stos
xchg
push
into
mov
mov
scas
mov
xor
and
add
daa
pop
or
enter
ror
mov
sbb
adc
sub
push
jmp
mov
jbe
push
jge
test
dec
scas
push
loope
psubusb
mov
fisttp
ins
popa
into
les
ret
mov
fstp
inc
sub
sub
push
aaa
push
lods
leave
repz
and
push
(bad)
cli
cs
cdq
mov
sahf
aad
sub
mov
into
adc
xchg
sbb
cmp
push
push
outs
jno
mov
scas
sar
jnp
dec
dec
mov
lea
fdivr
outs
jns
inc
pmulhw
cmp
pop
out
xchg
out
les
(bad)
sbb
movs
into
inc
push
dec
pop
jge
into
mov
xchg
inc
pop
lods
xchg
adc
jnp
scas
fdivr
xor
xor
pushf
cwde
inc
push
pop
xchg
into
and
es
add
into
nop
cmp
aaa
mov
movs
dec
adc
adc
lock
mov
aaa
into
xchg
xchg
addr16
inc
dec
push
jle
xor
push
xchg
cdq
xchg
mov
ss
cmp
add
and
dec
jmp
je
pusha
into
ds
jno
mov
rcr
sahf
add
jmp
(bad)
fld
push
or
(bad)
into
dec
mov
inc
cld
into
push
aad
jb
in
pop
ret
pop
dec
jmp
out
xor
xor
ja
loop
enter
movs
repnz
jmp
cmp
adc
fisubr
xchg
(bad)
hlt
dec
cli
in
inc
into
jns
xlat
sar
xor
into
dec
push
mov
dec
jle
into
xchg
adc
fist
out
adc
ins
or
sbb
(bad)
in
sbb
loope
movs
mov
fisttp
fsubr
fmulp
sub
pusha
cmps
aaa
(bad)
into
mov
shl
scas
retf
aad
cld
xchg
add
ret
into
jle
int3
mov
into
adc
xchg
hlt
or
into
test
das
push
push
xchg
adc
out
outs
add
and
pop
and
out
jle
jo
stos
(bad)
scas
or
loopne
lods
sub
fmulp
(bad)
jp
xor
int
movs
(bad)
xlat
jle
cs
mov
jg
inc
mov
stos
mov
cwde
add
and
repz
xor
mov
cmp
(bad)
pop
call
mov
out
ss
dec
popf
scas
mov
xchg
inc
ins
cwde
(bad)
out
(bad)
lods
pop
pop
mov
inc
clc
jmp
daa
sub
sbb
nop
pop
cmps
xor
test
out
dec
or
pop
xchg
jb
dec
or
outs
loop
mov
xchg
sbb
xchg
mov
push
out
dec
and
movs
mov
mov
push
sub
out
mov
(bad)
hlt
dec
loope
idiv
inc
jmp
mov
xor
pop
into
add
imul
dec
cmp
int
mov
test
push
sahf
into
jb
mov
stos
jmp
popa
lock
into
mov
sti
cmp
shr
into
jecxz
ret
jno
mov
jmp
cwde
test
adc
aad
lds
ss
repnz
cmp
cmc
dec
xchg
jno
pushf
and
jae
push
into
rcr
out
xchg
ret
dec
mov
scas
mov
into
or
adc
inc
das
cmp
cld
dec
mov
mov
add
shl
push
loopne
icebp
cmp
add
sbb
xor
push
xchg
loopne
into
shl
sub
push
push
das
(bad)
inc
ins
cdq
into
lods
mov
cmp
into
xor
enter
push
mov
jo
and
pushf
(bad)
pop
scas
sbb
cmps
cmp
inc
dec
adc
js
adc
int3
mov
shl
xlat
into
not
enter
sub
popf
xchg
mov
rcl
push
ficom
into
xchg
call
into
inc
cmc
scas
pop
retf
inc
into
and
push
or
push
movs
out
fs
in
push
ror
mov
xchg
xor
into
lods
outs
jae
ins
push
xchg
data16
cmp
fs
mov
pop
xor
mov
mov
(bad)
popf
and
and
cmp
mov
and
pop
rcr
into
fisttp
adc
into
popa
lahf
ss
call
into
and
es
into
xor
mov
mov
ret
ins
sub
(bad)
out
cmp
rol
xor
pop
dec
xor
mov
into
mov
fld
xor
aas
dec
outs
test
inc
and
and
mov
cmp
out
mov
rcr
bound
jns
outs
lods
jge
into
icebp
loop
sbb
sbb
mov
int3
jg
enter
mov
add
mov
scas
sbb
adc
xor
add
shl
xor
das
mov
sub
nop
pop
inc
dec
xor
cmp
mov
mov
test
adc
popa
mov
shl
xchg
mov
dec
test
jp
sub
mov
jne
pop
out
or
test
xor
fldcw
test
add
lock
ret
ds
into
cmp
inc
js
ficomp
mov
mov
pminub
test
into
pusha
repnz
jae
stos
mov
xor
sbb
add
jnp
jg
mov
xchg
push
xlat
(bad)
into
ret
ror
or
sub
into
push
ss
xchg
(bad)
fcomp
addr16
jmp
test
push
and
jnp
enter
into
push
xor
mov
into
cwde
dec
scas
cmp
into
push
movs
mov
dec
bound
cmp
mov
das
pop
retf
or
push
(bad)
mov
out
(bad)
xor
(bad)
jne
les
into
fwait
add
push
inc
popa
in
mov
scas
sub
pop
adc
into
and
mov
test
jg
mov
jo
or
sub
out
sub
fldenv
mov
into
jns
mov
jecxz
jne
(bad)
dec
ret
jnp
lods
loopne
inc
inc
inc
rcl
push
call
fild
add
into
push
jle
ss
adc
pop
adc
and
jmp
mov
cmp
push
ins
xrelease
out
stc
dec
fmulp
mov
in
push
into
stos
mov
push
pop
or
fmul
sbb
iret
lods
into
loope
push
pop
movs
imul
cmp
test
mov
mov
lods
jl
xlat
cmps
pop
adc
into
out
mov
mov
js
inc
in
jne
into
mov
mov
cmp
arpl
jmp
into
std
icebp
pop
pushf
cmps
lods
jecxz
fsub
mov
inc
jmp
sub
into
imul
or
sub
dec
daa
mov
aaa
dec
ins
mov
pop
cdq
clc
js
push
xchg
xchg
mov
mov
dec
scas
aas
mov
stos
jmp
mov
fidiv
cmp
ficomp
add
sub
add
xor
into
jp
cmp
aam
and
scas
pop
pushf
scas
jb
in
aas
out
(bad)
test
ror
mov
lods
cmp
out
icebp
jb
mov
test
in
pop
mov
xchg
aas
and
fwait
push
pop
out
xchg
sub
repz
push
pop
xchg
fs
add
and
cdq
dec
mov
into
aad
in
and
lahf
bswap
adc
jmp
inc
sbb
out
into
ja
jecxz
or
stos
mov
mov
xor
shl
push
sbb
lods
inc
pop
in
fbstp
push
into
stos
pop
in
shl
lock
into
popf
mov
pop
mov
mov
jne
vpcmov
fist
fdiv
inc
scas
sub
outs
add
inc
pop
pop
lods
mov
push
dec
(bad)
into
mov
dec
ss
pop
and
push
push
push
clc
or
into
mov
sub
in
es
test
data16
fst
or
inc
test
lahf
loop
cmp
lahf
pop
cli
xor
into
hlt
inc
add
dec
adc
out
push
ja
jb
into
rcr
movs
adc
inc
xchg
cmp
and
or
cwde
imul
mov
ror
add
icebp
mov
sub
jae
pop
outs
repz
into
pop
mov
imul
dec
aam
out
ins
dec
mov
xor
movs
jb
mov
(bad)
scas
fcomp
fldenv
out
mov
pop
shr
mov
out
(bad)
loope
push
inc
dec
dec
mov
inc
(bad)
pop
fsub
aad
mov
mov
outs
(bad)
into
cmp
push
push
jecxz
lods
push
shl
out
fs
into
outs
dec
pushf
int
les
scas
mov
mov
stos
fwait
jmp
sbb
add
test
cld
pop
mov
dec
pop
lods
dec
loope
pop
push
xchg
dec
loop
xchg
into
inc
bound
mov
push
sbb
cmp
mov
into
fldenv
dec
(bad)
in
mov
inc
add
scas
shl
jae
loopne
(bad)
ret
into
call
jne
arpl
and
into
out
cmps
sbb
scas
mov
jle
fadd
(bad)
mov
mov
mov
mov
cmp
or
push
out
mov
fs
push
or
lods
in
mov
imul
pop
push
into
pop
(bad)
cdq
jmp
fisubr
ins
lods
outs
in
stc
into
xor
out
add
retf
mov
dec
out
sbb
js
into
or
imul
es
dec
(bad)
(bad)
xchg
sub
lods
test
push
cmps
and
into
jae
jns
and
iret
popa
lods
aad
xchg
imul
sbb
mov
inc
fwait
into
movs
(bad)
addr16
retf
xor
xchg
push
mov
sbb
cmp
xchg
ds
outs
(bad)
out
hlt
pop
xchg
pop
rol
inc
cli
rol
std
pop
call
push
into
mov
mov
mov
retf
inc
pop
jb
sub
inc
into
loopne
and
mov
pop
add
in
jno
xor
sbb
cmc
and
push
pop
mov
ror
adc
add
sahf
pop
cmp
push
repz
inc
xor
leave
retf
inc
js
xor
aaa
fisubr
call
jecxz
test
xchg
cdq
in
mov
cmp
mov
outs
into
xchg
dec
mov
sbb
fnstcw
sub
dec
xchg
ins
lods
sub
sbb
imul
pop
ja
lods
xchg
jle
je
jmp
ss
nop
pop
jecxz
(bad)
mov
aam
mov
cmc
mov
cmps
gs
and
push
call
mov
and
fdivr
mov
jmp
pop
push
and
in
jecxz
dec
mov
ror
pushf
and
or
je
xchg
mov
sub
jmp
mov
test
out
bound
cmp
inc
xchg
in
xor
mov
mov
outs
dec
mov
dec
idiv
sti
into
ror
stc
mul
push
sbb
dec
adc
es
test
jle
test
xor
repz
adc
mov
sub
xlat
push
into
aad
or
mov
outs
jecxz
sub
add
mov
add
pop
into
jmp
in
mov
sub
jl
inc
sbb
mov
stc
or
into
jns
sub
sub
rol
or
xchg
mov
mov
sbb
into
xor
cmps
add
into
dec
popa
xchg
jb
arpl
jne
scas
sar
ins
pusha
ficomp
hlt
or
add
pop
iret
movs
adc
xor
pop
xchg
xor
into
cmp
into
lahf
inc
xor
test
dec
ds
mov
jo
mov
jecxz
inc
lods
in
dec
inc
inc
outs
mov
outs
out
push
push
not
into
aaa
ret
xor
(bad)
cmp
pop
mov
jl
into
inc
dec
sbb
xor
movs
pop
mov
enter
sub
and
xchg
std
(bad)
and
cmp
fcmovnb
mov
fnstcw
mov
das
aad
add
je
mov
test
and
movups
into
out
push
mov
pop
xchg
outs
pushf
jg
fxch
(bad)
xlat
out
fbstp
lock
dec
pop
pop
stos
popf
test
push
ins
into
leave
xor
retf
pop
sahf
jae
out
into
add
pop
cmc
ds
test
mov
adc
xor
or
sahf
into
out
gs
push
mov
sti
imul
push
mov
pop
push
cmp
mov
test
jg
mov
into
(bad)
scas
stc
dec
ret
mov
xchg
or
cld
into
leave
mov
mov
into
push
les
mov
cmc
push
js
mov
sub
jae
movs
icebp
lods
mov
xchg
push
iret
mov
loope
in
fs
adc
aaa
into
adc
(bad)
lods
and
push
sbb
jecxz
fwait
mov
test
xchg
xor
cmp
push
pop
addr16
mov
mov
call
jb
shr
movs
xor
xor
popf
lea
adc
rcl
iret
into
mov
cmp
into
repnz
mov
bound
(bad)
mov
call
into
adc
(bad)
and
mov
mov
into
les
adc
or
hlt
add
sbb
scas
push
dec
and
push
mov
lock
icebp
push
in
dec
(bad)
mov
cmp
fistp
inc
inc
mov
das
std
hlt
in
or
jle
in
paddsw
cld
inc
into
inc
dec
push
loopne
into
xchg
mov
scas
shl
xor
in
rol
jg
fwait
je
fidiv
das
mov
jno
xchg
jns
into
xchg
sbb
xor
test
push
mov
ret
into
pop
sti
and
dec
sub
into
fbstp
int
cmp
shl
mov
push
sub
movs
fistp
cmp
xchg
push
xchg
xor
test
dec
or
mov
mov
outs
dec
or
jg
inc
into
loope
cdq
adc
into
cld
xchg
inc
test
into
and
test
push
into
ins
iret
pop
sub
cmps
call
enter
(bad)
mov
jge
and
outs
das
ret
pop
fcmove
xlat
sbb
mov
adc
sub
call
cmp
fist
test
mov
xor
pop
sti
retf
into
mov
adc
xchg
stos
pushf
ja
out
add
out
xor
scas
sbb
push
shl
sbb
cmp
(bad)
dec
adc
ss
into
lods
ja
and
or
mov
mov
shl
out
cmc
into
sub
scas
fcom
cmps
das
out
mov
(bad)
xor
in
dec
enter
into
xchg
mov
push
adc
mov
mov
(bad)
ins
jmp
stos
cli
mov
push
fcom
into
mov
mov
dec
into
cs
sub
add
xor
cs
push
pop
jo
into
test
push
pop
cmp
and
mov
je
shl
pop
popa
ret
sub
mov
pop
jge
mov
dec
mov
add
into
xchg
fadd
rep
xchg
fldcw
mov
and
mov
scas
call
stos
ret
mov
jae
int3
mov
fnstsw
pop
into
add
or
sub
test
and
dec
fwait
dec
jle
cmp
sbb
retf
js
pop
(bad)
push
(bad)
in
in
jge
test
mov
xchg
(bad)
pop
lahf
into
ins
loope
sub
cmp
enter
das
jne
scas
jp
adc
inc
retf
cmp
push
push
and
pextrw
ss
or
push
mov
das
mov
jno
scas
data16
cmp
cli
mov
test
fbstp
fimul
into
xor
xor
in
fisubr
retf
cmp
pop
xor
fnstcw
test
movs
outs
pop
adc
out
lods
mov
dec
packsswb
je
popf
into
loopne
fistp
mov
stc
jecxz
mov
into
lods
ja
mov
into
jmp
push
imul
call
cdq
mov
and
lods
arpl
(bad)
dec
pop
add
aaa
push
into
test
cwde
addr16
and
shl
xor
mov
loop
(bad)
sub
mov
das
and
hlt
call
setl
add
repz
or
nop
out
mov
ret
(bad)
(bad)
push
pusha
into
imul
icebp
clc
push
and
xchg
test
into
pop
bound
cmps
into
pop
jecxz
pusha
movs
sbb
or
push
cmp
scas
dec
push
lods
data16
cmc
jnp
dec
int
jmp
mov
or
lds
out
sbb
stos
mov
dec
into
sbb
ins
push
retf
imul
mov
mov
stc
mov
inc
inc
dec
lods
les
fcomp
into
scas
xchg
mov
mov
inc
(bad)
mov
jmp
es
fs
lods
scas
mov
add
jg
and
add
pop
fisttp
and
dec
fist
(bad)
adc
mov
mov
ret
aaa
mov
pusha
push
scas
das
sbb
in
adc
sub
and
sbb
ss
into
jne
fs
cwde
out
inc
into
sub
scas
test
lods
or
lea
in
dec
daa
xor
into
sbb
add
stc
into
mov
arpl
xor
pop
cmps
mov
or
mov
sub
stos
sbb
jmp
mov
movs
cdq
pusha
into
dec
mov
daa
call
pop
fwait
pop
popa
ror
pop
test
loope
mov
dec
pop
dec
hlt
jmp
mov
xchg
jae
mov
ins
popf
gs
test
mov
cmp
in
jecxz
ror
or
mov
into
dec
lods
pusha
mov
into
stos
aas
loopne
add
fdivp
xor
mov
into
in
dec
das
(bad)
cli
rcr
or
lods
aad
sub
and
into
(bad)
fld
or
stos
retf
(bad)
xchg
arpl
push
(bad)
into
sahf
sub
dec
xor
inc
into
sbb
jmp
inc
jg
out
mov
lods
adc
scas
dec
mov
hlt
in
mov
mov
push
add
pop
cmp
mov
nop
movs
add
pop
aad
mov
cdq
push
into
inc
and
xchg
and
xchg
scas
inc
scas
xchg
iret
xlat
(bad)
and
pop
mov
push
pop
call
dec
xor
idiv
cs
test
push
stos
shl
pop
xchg
or
rcl
mov
aaa
cmp
jmp
lods
ret
sar
pop
fnstsw
iret
jge
and
shr
(bad)
popf
neg
xchg
hlt
into
cmp
pop
lds
sbb
into
inc
adc
in
enter
fld
outs
sbb
dec
into
dec
call
xor
or
ud0
inc
xchg
add
add
fwait
push
into
(bad)
pushf
push
jle
jbe
rol
inc
out
xor
pop
add
ret
jl
mov
cli
retf
aaa
sub
daa
scas
sbb
shl
lahf
pop
loope
cdq
into
push
out
cmp
rcl
je
cmp
cli
cli
adc
or
mov
bound
fcmove
ret
scas
xor
inc
inc
mov
mov
jge
and
sbb
repnz
ja
sub
cmp
dec
xchg
icebp
jnp
mov
xor
test
fdivrp
mov
and
js
repnz
mov
xchg
lea
out
into
dec
cmp
jnp
stc
ss
arpl
or
push
into
test
bound
and
pop
mov
or
push
adc
(bad)
xchg
stc
dec
or
sub
mov
lods
mov
sbb
outs
int
pop
or
add
add
test
into
jecxz
out
repnz
js
push
inc
stos
stc
out
add
xchg
push
out
sbb
call
sub
add
mov
dec
and
jae
outs
lods
dec
inc
inc
scas
sbb
xchg
push
into
pop
in
and
add
into
xchg
cmc
xchg
sti
cmp
retf
sub
pop
xchg
push
sbb
out
jbe
dec
fs
into
sub
pusha
test
sbb
sbb
mov
push
or
mov
mov
inc
into
jmp
enter
push
shr
cdq
stos
jl
inc
xchg
ins
lahf
mov
add
lea
xor
xchg
(bad)
loop
out
mov
outs
add
mov
lahf
out
fwait
repnz
aad
mov
jne
loope
ja
rcr
mov
push
test
and
fs
push
sub
push
sub
into
mov
in
xchg
push
test
leave
fimul
arpl
es
and
lahf
dec
mov
in
lds
ficom
pop
into
mov
clc
push
into
stos
movs
inc
imul
leave
push
jbe
pop
sub
sbb
mov
xchg
dec
into
adc
pop
adc
mov
push
(bad)
fwait
mov
popa
adc
into
mov
push
mov
sbb
(bad)
shl
inc
add
mov
inc
retf
shl
arpl
fwait
xchg
inc
mov
sbb
retf
jno
(bad)
adc
(bad)
out
mov
mov
scas
rcr
cmp
cmps
data16
test
jecxz
rcl
inc
fimul
mov
mov
hlt
jae
pop
xchg
stos
adc
mov
push
sub
(bad)
jnp
sahf
aam
xor
cwde
imul
stc
xor
mov
bswap
sub
mov
into
or
add
lahf
pop
jnp
retw
pop
ins
mov
dec
scas
cld
aad
fldcw
mov
(bad)
aas
std
into
enter
sub
lods
pushf
call
daa
cwde
(bad)
scas
(bad)
mov
and
add
mov
sub
cli
jmp
out
sbb
into
and
dec
ja
ror
in
ins
push
jl
push
jne
inc
mov
ficom
imul
mov
ins
loope
jl
(bad)
(bad)
xchg
cmp
add
lds
fisubr
cld
xor
pop
dec
lea
lods
sub
das
mov
adc
sub
pop
stos
into
cmp
sbb
into
inc
pushf
mov
pop
mov
scas
adc
jmp
fsub
sbb
mov
(bad)
pop
sub
or
mov
mov
outs
jge
pop
loop
out
popa
call
into
cmp
pop
mov
into
cmp
sub
fmul
jmp
sub
and
aad
jge
mov
rcl
cmps
in
mov
mov
inc
into
xor
out
test
pop
scas
pop
ror
ins
xchg
inc
mov
cmc
cmp
dec
into
sub
xchg
scas
scas
xchg
loope
push
and
mov
into
inc
push
div
into
adc
es
xchg
jp
into
jecxz
icebp
push
xor
or
xchg
adc
outs
xor
bound
jbe
mov
into
xor
cmp
mov
cmps
mov
nop
add
out
es
leave
into
sub
sub
into
stos
dec
push
jb
cmc
inc
cmps
lods
out
push
dec
jp
dec
add
js
sbb
mov
outs
(bad)
into
hlt
lahf
xor
add
out
xor
out
(bad)
pop
scas
(bad)
push
xor
(bad)
into
jmp
outs
lods
mov
int
outs
pop
aaa
fcom
sahf
xchg
push
pop
clc
sbb
das
jne
pop
pop
pop
jle
fsubr
xchg
sbb
iret
push
and
hlt
(bad)
sbb
into
ret
call
inc
adc
ret
lods
push
xlat
mov
or
or
push
sbb
mov
stos
sbb
jmp
cmp
inc
into
ror
das
pusha
push
add
das
into
or
jo
aaa
push
out
mov
cmp
lods
inc
lods
cmp
call
movs
pop
ficom
into
scas
rol
aam
sub
ret
aaa
out
and
mov
mov
dec
mov
test
call
cmp
into
cwde
sub
mov
mov
dec
jns
gs
inc
into
lods
lods
jecxz
repz
test
scas
lods
add
jl
cmps
scas
int3
sbb
and
into
sub
clc
jecxz
in
addr16
xor
repnz
add
into
mov
xor
into
mov
dec
mov
ja
pop
add
fistp
les
dec
inc
xor
mov
xor
movs
ja
mov
mov
adc
jg
pusha
into
dec
aas
scas
mov
out
xor
xchg
cmp
cmp
inc
into
sub
push
aaa
mov
xchg
mov
ds
ret
into
in
xchg
test
lds
retf
add
(bad)
fisub
fst
into
mov
pop
push
cdq
into
inc
pop
pop
fsubr
jno
into
cmp
movs
cld
mov
jmp
mov
bound
out
mov
pop
out
adc
mov
add
and
or
add
into
jle
(bad)
and
rol
into
inc
jns
call
into
imul
popa
ficomp
dec
mov
jecxz
leave
pop
push
jmp
sbb
add
fisub
popf
push
fldenv
retf
jmp
(bad)
cli
mov
fsubr
cmp
int
ins
push
push
into
pop
xor
shl
sbb
dec
adc
lods
popa
jbe
xchg
sub
daa
(bad)
aad
cmc
dec
fbld
and
out
push
push
mov
cmps
mov
sbb
sti
pushf
or
out
fmul
setge
add
loop
or
push
sub
adc
into
lods
dec
dec
mov
into
xchg
jb
and
cmp
add
sbb
into
inc
fisubr
(bad)
ret
xchg
dec
lods
outs
push
pop
in
push
pop
ins
or
mov
sar
mov
mov
mov
pop
cli
aas
or
inc
into
mov
and
add
aad
inc
into
jmp
aaa
or
or
sti
sar
cmp
mov
adc
mov
push
push
(bad)
jnp
scas
jbe
(bad)
cmp
and
xchg
mov
dec
push
scas
pop
xchg
sbb
into
test
fadd
jl
jnp
movs
mov
pop
push
mov
popa
add
cmp
inc
into
arpl
mov
outs
jl
xchg
into
popf
bnd
push
xor
test
aad
mov
jne
scas
jp
sbb
xchg
pop
pop
cs
leave
(bad)
ds
test
add
sti
stc
scas
sub
cmp
popa
rol
adc
xor
inc
scas
mov
rcl
inc
mov
fcom
sub
repnz
xor
test
movs
and
cmps
fsubr
call
pop
inc
icebp
es
bound
mov
sub
dec
add
popw
into
cld
jmp
into
aaa
adc
ret
or
adc
out
pop
mov
std
dec
jb
(bad)
into
mov
pop
rcr
retf
and
rol
fsub
cmp
std
mov
cld
xlat
dec
rol
imul
cmp
test
sub
call
push
push
into
jbe
cmp
cmp
test
jmp
dec
mov
in
aaa
not
or
repz
shl
into
call
test
mov
data16
jno
into
jl
aas
imul
sbb
cmc
cwde
xor
shl
cmp
xchg
push
adc
jnp
pop
push
jge
mov
jae
ud1
mov
popf
icebp
ins
and
or
jl
in
enter
and
ret
mov
adc
sbb
push
into
adc
adc
ret
into
inc
mov
sbb
scas
xor
mov
lods
cmps
sub
pop
(bad)
stc
pop
pop
into
sub
sub
fdivr
test
or
sub
push
outs
daa
(bad)
mov
and
dec
loop
inc
mov
xor
dec
and
pusha
loope
mov
shl
mov
pop
into
(bad)
hlt
cmp
ss
xchg
call
mov
mov
mov
ret
dec
sbb
cs
adc
nop
popa
fidiv
jns
into
out
retf
inc
(bad)
fdiv
pop
into
lock
adc
into
mov
popa
and
or
daa
je
loope
add
pop
out
cmp
into
test
aaa
addr16
std
les
push
into
aas
or
xor
jb
pop
iret
mov
fldcw
std
sub
(bad)
xor
inc
(bad)
cmc
add
mov
jmp
push
scas
aam
into
adc
sbb
sar
xchg
pop
in
lea
cdq
into
mov
repnz
das
in
mov
mov
enter
xchg
cmp
retf
std
dec
xchg
adc
es
iret
aaa
mov
jg
jbe
mov
adc
mul
inc
mov
inc
lock
vpinsrw
sahf
mov
into
inc
adc
jae
push
and
adc
stos
jl
test
mov
pop
sbb
into
add
popw
mov
xchg
repz
push
add
pop
(bad)
xchg
ret
cmc
ja
mul
ror
xor
dec
ja
push
movs
dec
cmp
xchg
mov
xchg
mov
pushf
and
jp
xchg
sub
ins
pop
pop
imul
jns
in
jg
dec
push
test
xchg
into
hlt
(bad)
or
into
inc
out
mov
lods
sbb
xor
popa
or
inc
(bad)
into
test
sub
sbb
imul
out
aaa
sahf
test
and
ins
jg
mov
cmp
adc
lods
push
cld
retf
bswap
repnz
add
scas
adc
xor
jne
mov
and
xchg
mov
lahf
push
addr16
mov
loop
pop
sub
popf
addr16
fidiv
in
jg
test
sbb
mov
fs
xchg
(bad)
jo
or
sub
addr16
ror
(bad)
jmp
or
sbb
mov
enter
push
mov
dec
inc
dec
cmc
pop
jnp
ins
into
adc
(bad)
sbb
into
sti
ja
dec
push
aad
jmp
hlt
dec
or
stos
adc
mov
hlt
movs
push
jg
dec
into
pop
mov
jnp
aaa
or
and
jne
ins
test
adc
add
mov
aas
push
(bad)
into
daa
xlat
push
dec
mov
bound
sahf
scas
push
into
stos
and
das
adc
inc
dec
xor
and
ins
cld
test
test
and
hlt
into
dec
movs
adc
jae
mov
sbb
icebp
(bad)
xchg
mov
jne
sub
push
hlt
sbb
mov
sub
and
adc
stos
stos
lods
aad
cmp
pop
push
mov
into
das
test
lea
sub
dec
std
adc
ins
das
and
movs
jle
fiadd
push
(bad)
setnp
call
mov
es
repnz
jmp
sbb
mov
je
data16
mov
ins
test
rcr
pcmpgtb
in
pushf
inc
loope
pop
jb
jg
loop
test
icebp
cwde
or
dec
addr16
lahf
stos
mov
in
repnz
pop
push
sub
pop
push
ins
into
stos
lea
sub
xchg
push
pop
pop
into
xor
cmp
into
sbb
mov
arpl
mov
add
ins
xor
or
inc
mov
retf
clc
cmps
aad
rcr
pop
nop
stos
pop
dec
dec
(bad)
mov
pop
jg
pushf
test
push
into
mov
sbb
add
pop
xchg
lods
(bad)
cmp
fcomp
mov
jmp
mov
pop
cli
jne
add
into
xor
cmp
and
jg
ror
jns
jmp
fcomp
mov
dec
sbb
xor
sbb
mov
add
into
jl
mov
sub
cmp
outs
les
out
cmps
cld
test
mov
dec
jle
in
pop
push
bswap
jp
into
cmc
out
rol
in
xor
xchg
xchg
push
fimul
push
sbb
mov
mov
xor
sbb
stos
icebp
pop
cmp
add
dec
pop
sbb
movs
mov
nop
enter
or
into
(bad)
xchg
jbe
in
repz
scas
sub
pusha
cld
jo
into
es
(bad)
or
addr16
dec
arpl
jg
jle
add
into
mov
cmc
lods
mov
out
aaa
cmp
pusha
and
mov
pop
sar
out
push
cmp
xchg
jmp
in
ret
pop
rcr
mov
xor
mov
cmp
into
repnz
adc
xor
push
repz
rol
fimul
fidiv
push
adc
dec
sbb
mov
(bad)
(bad)
xor
cmp
in
add
xchg
xchg
(bad)
cli
into
xlat
jnp
push
in
inc
inc
test
mov
call
cmps
dec
aad
inc
and
scas
(bad)
jb
sbb
into
sub
inc
clc
test
xchg
push
pop
aad
enter
das
fnstenv
jmp
out
xchg
das
push
ja
lods
pop
(bad)
into
call
and
outs
jge
js
cmps
fs
or
loop
inc
popa
movs
cmp
repz
data16
enter
dec
cmp
mov
cmp
and
aam
cld
lods
jo
aaa
xchg
movs
inc
out
xor
scas
push
loop
xlat
jns
int3
(bad)
das
cli
into
int
dec
repnz
loopne
push
(bad)
and
into
es
sub
call
outs
pop
(bad)
aad
fld
sbb
call
mov
inc
cli
into
xor
out
into
outs
and
out
jb
sti
mov
jmp
xchg
arpl
xchg
xor
and
pop
into
inc
mov
xor
into
mov
pop
and
lods
mov
or
jo
fidivr
outs
push
loopne
xchg
inc
scas
movs
sbb
xor
loope
scas
(bad)
mov
add
mul
lods
fs
popa
inc
lea
dec
(bad)
mov
pop
dec
mov
movs
in
mov
repz
jg
adc
inc
repnz
inc
stos
out
into
fnsave
(bad)
jae
xchg
inc
adc
into
xor
cdq
pop
jnp
xchg
mov
dec
dec
gs
cmc
xchg
into
mov
xlat
pusha
xchg
into
ret
imul
xor
in
jecxz
inc
repz
icebp
dec
into
mov
lods
fadd
xchg
test
(bad)
mov
xor
jp
fdivr
mov
dec
repnz
pop
push
(bad)
into
add
iret
mov
fild
gs
imul
ror
xchg
jmp
pop
xchg
mov
jge
pminub
fsub
add
jb
cmp
adc
das
into
fld
xor
jge
cmp
cs
xchg
add
into
mov
add
dec
into
mov
push
ret
jmp
enter
pushf
ror
popa
inc
jne
aaa
fst
sub
jg
add
cdq
movs
mov
inc
shl
arpl
and
imul
add
xor
cwde
push
push
push
xchg
scas
jbe
retf
outs
add
jnp
pop
clc
into
ins
adc
lahf
aas
cmp
inc
popf
aad
lock
aad
fisttp
mov
into
sub
repz
je
push
bound
fisubr
mov
mov
pop
ss
(bad)
or
cld
ficomp
push
movs
daa
cmc
into
test
out
ror
sbb
xchg
mov
xor
into
adc
push
fxch
sbb
inc
or
mov
xchg
mov
std
(bad)
xor
mov
sbb
jnp
in
lods
call
push
aaa
jp
sbb
lahf
cmp
sti
add
jmp
outs
nop
cmp
mov
inc
sub
cmp
jg
push
lea
push
mov
inc
inc
sbb
pusha
ficomp
into
cmps
outs
movs
mov
inc
(bad)
into
leave
inc
sahf
adc
push
xchg
into
adc
fiadd
mov
mov
push
loope
sti
dec
inc
loopne
cmps
int3
pop
stos
lods
scas
mov
(bad)
pushf
and
es
sbb
or
add
scas
push
in
mov
adc
ror
pop
fcom
arpl
dec
xor
and
and
ret
pop
fs
popa
into
lods
(bad)
retf
mov
clc
jne
sbb
jge
test
sub
mov
imul
pop
test
xor
into
lea
(bad)
call
push
xchg
mov
les
movs
aas
sbb
xchg
mov
dec
in
jbe
pop
inc
xor
(bad)
into
push
dec
in
xlat
int3
dec
into
jl
aaa
das
inc
xchg
in
into
(bad)
push
dec
sub
lds
into
and
mov
enter
mov
das
lods
push
or
shl
sbb
(bad)
fsubrp
into
xor
jae
hlt
into
add
cmc
cmp
add
push
int3
sti
mov
enter
dec
or
mov
dec
mov
pusha
iret
dec
rcl
fcomp
into
or
test
scas
mov
dec
imul
into
pop
sbb
xor
mov
jbe
adc
or
pop
das
inc
xchg
pushf
icebp
into
frstor
or
add
into
or
das
in
hlt
pop
or
add
mov
in
jae
inc
cmp
xchg
xor
and
inc
jg
cmc
test
cmp
ret
mov
into
xor
fdiv
pop
in
mov
retf
popf
push
fmulp
or
cmp
cmps
jbe
sbb
inc
xchg
pop
das
fadd
mov
add
adc
adc
sbb
cmp
div
xlat
aaa
les
into
mov
jmp
push
jno
int
(bad)
sar
sti
cmp
fs
rcr
and
call
into
pop
cli
rcl
scas
xchg
adc
mov
pop
into
push
ficomp
dec
mov
pop
add
add
in
aas
or
add
xor
xchg
adc
sub
push
pop
fcmove
outs
xchg
push
out
mov
sub
lea
cmp
mov
push
mov
pop
or
fsubr
in
gs
add
mov
pop
xor
jle
scas
(bad)
idiv
sysenter
stos
into
out
cdq
jnp
sar
jno
inc
inc
or
cmp
mov
or
or
xor
fcomp
pop
sbb
movs
jmp
mov
dec
imul
jmp
pop
pop
push
dec
push
retf
into
mov
idiv
sbb
mov
jle
or
sbb
lea
xchg
and
loopne
xor
pop
mov
ret
push
jl
push
pop
cmc
cs
or
stc
jge
dec
adc
les
into
movs
mul
add
stc
push
into
ror
sbb
stos
xchg
hlt
mov
(bad)
shr
ins
lahf
es
(bad)
into
mov
and
pop
mov
test
das
out
shl
mov
setg
into
sbb
cmp
movaps
cmp
pop
mov
(bad)
adc
into
ja
and
mov
mov
mov
adc
imul
int
push
(bad)
scas
cdq
sub
mov
fdiv
nop
pop
into
dec
sub
mov
pop
into
mov
and
inc
push
mov
into
dec
jp
push
fstp
mov
add
(bad)
ins
inc
jno
jns
xor
clc
fucomip
ret
test
into
and
leave
out
mov
sbb
or
in
in
(bad)
ins
jge
(bad)
out
std
scas
iret
outs
aam
adc
sub
test
add
pop
aad
pop
sub
dec
jg
shr
dec
loop
jg
cmp
into
test
lea
cwde
sbb
mov
jnp
and
and
out
sub
mov
call
into
adc
inc
into
or
or
stos
into
leave
addr16
fucom
add
into
jae
scas
xor
shr
bound
cmp
aas
cld
push
dec
into
sar
popf
out
rcl
mov
retf
stos
into
xchg
xlat
loope
jle
mov
inc
and
add
inc
bswap
and
xor
bound
push
mov
inc
cmp
ror
fcmovnb
sbb
dec
push
xor
pop
mov
sbb
test
jbe
jmp
xchg
push
xchg
push
xor
push
mov
je
adc
movs
in
sub
sub
shr
pop
pushf
push
int
sti
mov
mov
sub
or
mov
lods
xchg
jmp
fs
mov
ror
int
out
mov
cmp
mov
mov
push
mov
into
cmc
and
jl
into
mov
add
movs
call
jbe
std
int
push
and
mov
(bad)
into
xor
mov
lods
push
ss
adc
cmc
jne
stc
jmp
test
jb
ins
mov
mov
retf
mov
pop
into
pop
lds
jns
mov
sub
and
push
xor
cmps
clc
daa
xchg
into
in
jg
cmp
dec
push
add
push
jmp
ret
fcom
mov
push
mov
nop
enter
jmp
inc
sub
or
cmp
outs
mov
push
adc
addr16
out
enter
(bad)
jo
into
retf
les
fmul
push
adc
into
daa
cmp
cmc
ss
call
scas
cmp
(bad)
into
mul
jge
ds
inc
test
jg
lahf
or
repnz
push
fcmovnu
frstor
or
adc
xchg
push
xchg
ret
push
xor
pop
cmp
mov
dec
inc
or
lahf
(bad)
addr16
add
sahf
lods
xor
jnp
xor
scas
push
or
out
aad
sti
xchg
xchg
cmps
or
and
sar
xchg
xor
int
or
jo
push
(bad)
xchg
into
dec
cmp
int
mov
or
sbb
loopne
stos
into
xchg
sbb
ror
dec
out
pop
pop
fs
inc
push
mov
into
daa
mov
ss
and
pop
into
xchg
(bad)
out
test
call
les
sub
mov
cmp
gs
fsubr
mov
cmp
inc
sub
push
in
enter
mov
adc
pop
mov
cmp
into
or
(bad)
lods
jbe
das
adc
fsubr
into
xor
push
cs
mov
cmp
mov
jge
pusha
mov
pop
arpl
and
imul
or
rol
icebp
mov
test
clc
sub
call
or
or
bnd
mov
pop
sbb
mov
jmp
mov
push
or
add
jbe
popf
outs
outs
test
into
inc
lds
mov
cs
out
in
out
cmp
xor
adc
push
stos
test
fwait
into
int3
in
add
shl
(bad)
mov
mov
xor
ins
xchg
ins
xchg
pop
add
out
add
mov
popa
mov
in
hlt
into
mov
ret
xor
pushf
into
push
out
sbb
jnp
arpl
into
xor
pop
or
loopne
into
jbe
add
xlat
adc
fistp
outs
or
pushf
dec
or
imul
fnsave
push
ins
mov
xor
mov
and
xchg
test
pop
bnd
xchg
xchg
in
xchg
dec
pop
imul
or
loop
add
sub
repnz
jns
mov
push
into
gs
push
or
mov
inc
test
lea
push
mov
or
punpcklbw
xor
sub
ja
sbb
add
ror
test
pop
jecxz
sub
cld
aaa
xchg
test
push
add
clc
imul
xor
cmp
lods
cdq
add
data16
cmp
xchg
scas
test
cmp
pop
pop
pop
into
pushf
mov
cmp
in
sbb
push
inc
pop
mov
xchg
mov
push
xor
stos
jbe
add
test
ret
sub
aas
arpl
fwait
int
fisub
jae
call
into
pop
fnstenv
push
inc
dec
rcr
lods
mov
cmc
dec
mov
sbb
pop
loope
inc
push
into
ins
add
jmp
mov
repz
icebp
jge
(bad)
pop
iret
lods
pushf
jne
jmp
pop
dec
scas
add
inc
data16
aad
into
mov
fs
jp
inc
ins
retf
cmp
(bad)
idiv
into
jb
xchg
push
push
ins
cmp
dec
daa
xchg
fist
mov
fmulp
and
loopne
or
add
push
inc
sbb
lods
add
aad
sub
leave
and
scas
inc
fstp
idiv
aad
fld
jmp
es
popa
ror
movsx
mov
es
push
cmp
aad
jb
or
into
mov
into
pop
dec
mov
jmp
xor
jle
adc
movs
inc
into
mul
rol
into
popf
mov
jb
scas
xchg
sub
ror
pop
adc
pop
adc
add
cmp
aam
sbb
into
mov
sti
out
pop
push
jge
pop
int
mov
arpl
mov
(bad)
xchg
iret
into
jns
gs
pushf
jnp
out
test
push
mov
dec
pop
repz
into
mov
and
enter
adc
jecxz
mov
or
pop
into
and
push
(bad)
cmp
shr
into
adc
xchg
xor
sti
push
push
aad
pusha
stos
into
mov
push
pop
adc
mov
mov
sub
xchg
mov
out
jg
inc
fsincos
into
in
dec
or
pop
es
into
push
mov
neg
mov
jae
pop
scas
int3
aaa
jns
jl
mov
pop
mov
nop
fisub
test
outs
(bad)
repz
cmc
imul
ins
sahf
loope
into
mov
neg
into
mov
or
adc
icebp
cwde
sub
into
aad
jb
jg
mov
into
addr16
lahf
cmc
jmp
push
and
mov
ins
pmaxub
into
dec
outs
scas
dec
test
jl
lods
pop
adc
stc
cs
es
pop
push
push
sti
(bad)
fisub
xor
push
pop
mov
add
jg
sub
into
dec
icebp
mov
xchg
cld
mov
fldcw
jp
adc
into
add
jnp
jbe
inc
or
mov
xchg
into
mov
inc
inc
jae
cdq
sbb
xchg
lea
push
repnz
add
mul
push
mov
add
dec
sbb
adc
(bad)
sbb
adc
hlt
iret
je
cmp
mov
jle
add
pop
ins
cmc
stos
lods
stos
sbb
push
scas
fmul
cmp
ss
addr16
repnz
stos
pop
pop
fisttp
inc
into
lahf
je
and
push
shr
test
into
pop
pop
mov
xchg
test
jmp
movs
add
cmc
(bad)
retf
retf
inc
les
jno
mov
inc
mov
ret
cmp
cld
fmul
pop
lods
call
or
add
inc
lods
jnp
pop
cmp
loop
inc
xor
sti
fisttp
into
pop
cmp
outs
(bad)
stos
test
jns
dec
lgs
into
mov
sub
test
into
scas
and
es
add
dec
xor
leave
cs
(bad)
loopne
(bad)
mov
cmps
mov
(bad)
xor
ret
mov
fild
movs
xlat
mov
jmp
cmps
add
or
loope
int3
jae
mov
rcl
pop
enter
into
mov
stos
cmp
sub
into
add
sbb
cs
enter
repnz
imul
adc
push
ss
ins
pop
add
and
repnz
pop
cmp
out
adc
sbb
or
cmc
jno
aas
jae
mov
xor
das
xchg
jne
push
cmp
gs
rcr
pop
imul
dec
stos
pxor
nop
mov
out
or
cs
clc
jnp
test
inc
xor
push
pop
into
jb
pop
xor
mov
ror
pop
pop
inc
fdiv
popf
into
js
ins
ins
ja
mov
out
jecxz
fcom
mov
out
into
jle
fstp
inc
aaa
push
sbb
pop
int3
ror
cmp
imul
pop
and
mov
sahf
cdq
push
(bad)
dec
daa
into
ss
retf
adc
cwde
sahf
cld
fimul
bound
pop
inc
dec
ret
into
pusha
pushf
in
cmp
int
and
into
mov
data16
xor
scas
in
xchg
gs
leave
pusha
test
mov
pop
scas
lods
les
fdivr
into
ror
sub
or
xchg
lods
cs
ror
mov
or
dec
into
inc
test
int
lods
inc
test
leave
adc
out
xor
jne
mov
mov
aad
sar
inc
into
xchg
dec
pop
fcomp
fstp
into
mov
cdq
into
mov
ins
daa
outs
mov
sbb
mov
or
and
dec
pop
sbb
or
pop
scas
pop
std
xchg
(bad)
jecxz
shr
sbb
pop
pop
adc
mov
xchg
xor
test
mov
jnp
test
lods
mov
iret
(bad)
xlat
pop
mov
xor
cmp
xsha1
cmps
mov
xchg
arpl
adc
enter
outs
(bad)
cmp
xor
and
mov
scas
xor
or
ins
into
lods
loope
sub
pop
das
or
adc
lods
adc
sbb
pop
add
mov
popa
into
jg
sbb
loope
jno
dec
pop
dec
and
or
fild
mov
xchg
(bad)
int
fcmove
out
popa
ds
test
cmps
nop
pop
cld
sub
aas
addr16
in
psubusb
test
(bad)
test
dec
jae
pop
cmp
ror
jle
enter
call
xor
mov
popa
into
ss
xchg
push
and
sti
mov
add
xchg
out
js
cmp
imul
imul
xchg
jno
sub
mov
outs
fdiv
stos
cld
int
push
out
(bad)
fmul
push
cmp
setae
repnz
dec
cmp
cmp
aaa
cs
sbb
jle
dec
mov
dec
fcmovne
pop
stc
dec
mov
lods
jg
and
(bad)
into
test
ret
into
ins
cmp
sbb
pop
mov
ds
ret
lods
adc
or
test
(bad)
cdq
in
pop
lahf
jmp
pop
outs
sahf
outs
sbb
sub
into
push
sbb
into
fsubr
loop
loope
cmps
xchg
into
adc
mov
or
(bad)
jmp
mov
into
or
mov
out
test
into
lahf
pop
jl
sub
pop
test
shr
test
(bad)
sbb
scas
outs
push
cs
ror
int
mov
mov
(bad)
xchg
pop
idiv
(bad)
aam
test
into
lahf
js
push
call
nop
pop
jmp
mov
into
mov
xchg
into
imul
jl
push
(bad)
into
push
push
scas
xchg
sti
call
into
fwait
mov
movs
cld
into
adc
add
clc
mov
xchg
scas
xchg
sbb
fwait
xor
cdq
dec
mov
fs
or
daa
aas
pop
into
or
iret
push
xchg
and
into
sti
cli
imul
push
adc
cmp
into
sbb
mov
fwait
movs
call
inc
jb
push
adc
fsub
mov
call
aaa
into
jge
rcr
lahf
jmp
cli
test
mov
call
into
and
mov
lea
fmul
push
xchg
in
into
shr
add
lock
push
lods
in
push
faddp
pusha
jl
sbb
inc
into
xor
stos
cwde
fnstenv
into
lods
test
inc
ret
dec
inc
dec
les
out
xchg
cli
loopne
fwait
cld
sbb
into
push
pop
(bad)
into
xchg
jbe
mov
(bad)
xlat
xchg
rcl
fs
dec
inc
hlt
sbb
arpl
lods
xchg
call
popa
sbb
adc
push
es
shl
test
push
ror
sahf
fild
iret
jmp
mov
push
add
add
add
xchg
fstp
pop
mov
into
in
shl
sub
ja
loopne
push
xchg
jae
into
push
fldl2t
xor
push
pop
mov
pop
sbb
daa
sets
push
mov
(bad)
pop
jmp
add
fadd
icebp
mov
repz
(bad)
ror
jp
jmp
dec
mov
or
shr
pop
test
clc
pop
ins
jmp
daa
push
add
fimul
push
outs
sub
cld
icebp
adc
popa
or
xchg
and
leave
sar
adc
jno
call
into
xchg
out
cmp
sub
lahf
lds
imul
fmulp
pop
enter
jns
adc
movs
dec
scas
es
ror
pop
scas
fcomp
jo
dec
adc
push
or
imul
mov
ja
lods
mov
into
push
ds
je
sahf
ror
adc
xor
out
push
xchg
aaa
adc
xchg
xchg
mov
(bad)
test
and
sahf
loop
mov
neg
outs
pop
fbld
dec
inc
jne
or
and
sub
push
dec
fadd
into
and
add
fcmovne
xchg
in
adc
into
mov
stc
push
fcomip
mov
xchg
fs
dec
les
mov
ss
cmps
outs
xchg
sbb
xchg
lods
sub
mov
pop
push
outs
jle
repz
mov
mov
gs
out
dec
into
ret
pop
mov
inc
adc
in
lea
pusha
mov
dec
push
lods
pop
pushf
jae
ror
ins
(bad)
mov
leave
push
fistp
fmul
sbb
into
(bad)
jno
call
xchg
ins
jmp
add
je
pop
mov
lods
mov
push
fucom
ret
jae
pop
mov
sbb
lock
int3
mov
into
and
movs
mov
inc
out
aaa
xor
jo
mov
lahf
cmp
push
int3
jb
std
and
out
cmp
dec
(bad)
cli
and
fidiv
mov
into
dec
mov
mov
clc
sbb
and
xchg
jb
adc
lock
dec
icebp
hlt
cmp
cmp
adc
jg
or
pop
out
sub
(bad)
mov
cmp
into
stc
sbb
mov
adc
adc
into
push
inc
loop
xor
std
into
enter
movs
mov
sbb
mov
add
dec
mov
cli
xchg
and
arpl
ins
fcmovnu
nop
lods
call
jbe
mov
into
in
add
push
xor
or
aam
mov
jae
lods
jg
das
out
mov
ja
sbb
xchg
jp
loope
and
mov
sub
in
ficom
into
jo
or
push
outs
js
shl
into
call
push
into
imul
into
mov
mov
push
dec
into
dec
inc
jnp
or
push
ror
adc
loope
xchg
stc
cmps
nop
adc
adc
or
cli
idiv
repz
lods
retf
add
jne
sub
in
ins
into
xor
mov
lahf
mov
into
dec
sbb
xchg
and
aas
xor
or
adc
scas
loope
je
imul
mov
sub
das
in
into
pop
push
addr16
daa
mov
outs
sbb
push
dec
mov
xlat
cmp
ret
pop
imul
or
jnp
stos
ss
lahf
push
xchg
in
repz
push
into
retf
push
sbb
cmc
mov
into
and
sub
movs
inc
clc
scas
or
stos
mov
sbb
(bad)
fcmovne
lods
loop
xchg
imul
test
outs
mov
cmps
lods
stos
cmc
repnz
mov
nop
inc
iret
or
test
adc
dec
xchg
dec
dec
push
sbb
mov
push
test
stc
adc
mov
fnsave
in
loopne
shr
into
out
popf
sub
sbb
sbb
fld
sbb
outs
je
push
data16
push
mov
into
xchg
jmp
call
in
and
xchg
jne
mov
inc
push
jnp
and
test
out
fwait
push
xchg
xchg
dec
pushf
test
and
out
sbb
mov
jmp
cmps
xchg
push
cmp
and
and
aas
mov
dec
jns
mov
into
rep
xor
es
out
pop
dec
pop
mov
in
ja
loopne
test
sbb
shl
addr16
div
scas
in
outs
out
mov
loop
(bad)
pushf
dec
test
fsubr
imul
das
jb
dec
into
ja
mov
pop
xchg
xchg
xor
fwait
xchg
lahf
cdq
push
js
scas
daa
je
push
mov
mov
adc
or
cmp
push
pop
loopne
pop
mov
shl
(bad)
mov
mov
fimul
scas
push
xor
mov
pop
addr16
(bad)
outs
sti
push
mov
aam
aaa
imul
movs
into
popf
retf
sbb
push
into
(bad)
fisub
inc
lds
into
leave
rdpmc
push
mov
mov
aad
dec
mov
push
sub
add
xor
mov
cli
into
mov
push
inc
das
(bad)
xchg
and
add
fs
dec
push
add
push
sub
mov
adc
sar
mov
shl
pop
pop
dec
sbb
jg
add
sbb
push
call
lods
pop
xrelease
stos
sub
movs
sub
repz
outs
daa
loop
xchg
pop
test
or
out
mov
ss
out
arpl
loope
sbb
mov
retf
add
sub
fisttp
pop
push
mov
xchg
into
sahf
xor
retf
cli
adc
call
adc
sbb
push
into
stos
movs
jp
dec
ret
lock
add
inc
(bad)
sub
cmc
scas
pop
cmp
xchg
(bad)
lahf
aam
into
add
mov
sub
into
es
mov
loopne
mov
or
xchg
cmp
scas
outs
mov
repz
cmp
fiadd
inc
push
das
nop
pop
je
pop
fsub
adc
scas
inc
into
loope
test
sub
frstor
adc
mov
(bad)
jg
stos
cwde
inc
jae
cmp
mov
ins
into
mov
shr
test
jns
lahf
ret
fidivr
test
xchg
(bad)
xor
movs
fs
enter
mov
pop
in
aam
test
and
ret
jmp
and
call
into
enter
xor
cmp
sar
enter
aas
out
inc
inc
cmp
retf
(bad)
out
into
xor
pop
iret
clc
mov
jmp
push
adc
dec
into
pushf
aam
jle
pop
into
sub
lsl
dec
into
repnz
scas
ficom
stos
repz
nop
mov
into
popf
inc
mov
popa
pop
mov
sbb
mov
mov
clc
movs
mov
scas
sahf
mov
jmp
into
cmp
sub
and
push
data16
push
xor
mov
mov
xchg
dec
adc
lahf
jnp
(bad)
movs
pop
cmp
sahf
mov
scas
cmc
add
in
cld
(bad)
fistp
inc
xchg
into
mov
data16
jnp
and
push
jne
push
xchg
test
ror
ret
aad
fidivr
add
cmp
out
dec
ror
popa
into
repz
ja
inc
add
add
stos
stc
push
bswap
data16
scas
inc
sti
gs
dec
push
mov
push
add
into
imul
fcomp
xor
push
das
pop
push
mov
nop
jb
pop
ja
repz
into
cdq
bound
mov
inc
in
cmps
fisubr
into
cmp
adc
cs
and
scas
sbb
jmp
pop
stos
into
dec
mov
mov
xor
ss
out
fiadd
nop
and
retf
into
sbb
dec
ret
xor
test
ins
push
dec
rcr
and
mov
lods
rcr
mov
into
sbb
shr
adc
retf
or
popf
mov
into
push
pop
pop
xchg
(bad)
data16
into
aam
jno
sub
jg
jae
frstor
outs
adc
mov
shl
fsubp
xchg
movs
push
dec
fwait
cwde
add
lods
xchg
retf
js
sbb
mov
mov
xchg
mov
dec
shl
inc
mov
movs
or
jge
fucomi
pop
dec
lods
add
int3
mov
pop
fwait
and
inc
inc
sbb
(bad)
push
aam
mov
idiv
jmp
test
push
mov
nop
xor
mov
adc
inc
js
fnstenv
fsubr
mov
outs
data16
push
mov
gs
imul
dec
(bad)
mov
fisub
inc
into
add
adc
push
into
xor
inc
add
sti
retf
stos
cmp
movs
dec
dec
and
push
hlt
cli
in
mov
imul
dec
mov
enter
int3
dec
out
int
cmps
sbb
mov
jae
in
in
lods
jge
or
xor
jle
jnp
jl
loop
daa
mov
ins
pop
push
cld
mov
imul
xchg
aas
das
xchg
pop
mov
aaa
lods
loope
jno
into
cmc
rol
sbb
aaa
into
sbb
and
cmc
mov
popa
popf
into
daa
rcl
xchg
dec
and
jg
jle
mov
adc
test
(bad)
fsubr
call
pop
xor
pop
popa
xchg
cli
test
push
xchg
sub
into
fist
fwait
pop
into
iret
mov
repnz
into
pop
sbb
leave
into
cli
cmp
xchg
retf
inc
push
sub
test
xor
iret
cmp
into
loopne
mov
pop
add
xchg
sbb
test
fcom
mov
add
push
dec
push
push
(bad)
scas
mov
mov
into
add
or
adc
adc
inc
xor
mov
and
push
dec
xlat
lds
into
js
movs
test
in
inc
mov
jo
in
fldenv
ror
fwait
or
xchg
sbb
push
fmulp
push
hlt
in
icebp
jmp
cmp
repnz
push
ins
test
xchg
dec
pop
scas
into
sbb
out
lds
clc
into
jnp
cmp
mov
cmp
push
xchg
into
mov
mov
into
out
stc
cmc
xor
rcr
jnp
inc
popf
adc
add
out
arpl
scas
xchg
nop
cs
popa
xchg
push
pop
outs
jb
mov
test
cmp
(bad)
xchg
movs
xchg
out
in
out
mov
into
xor
(bad)
aam
icebp
xchg
aaa
mov
dec
push
(bad)
sar
mov
fs
inc
jl
cmps
in
dec
(bad)
inc
xchg
mov
pop
aam
mov
adc
loopne
ins
xchg
mov
sub
adc
dec
cmps
add
sbb
mov
loopne
cmp
sbb
into
js
mov
mov
push
test
test
sub
cmp
jecxz
into
lock
bswap
sbb
test
jl
lods
lds
dec
xor
dec
maxps
in
push
jmp
bound
emms
fnstsw
sbb
rcl
xchg
popa
inc
sub
mov
pop
into
in
sub
add
aas
test
inc
test
out
cs
psubq
cdq
or
jmp
retf
lods
in
sar
inc
xchg
pop
stc
ror
imul
hlt
into
pop
outs
mov
movs
mov
outs
add
xchg
call
retf
adc
jae
cmp
adc
mov
ins
pushf
jns
in
mov
btc
jne
(bad)
dec
into
or
mov
and
scas
mov
mov
scas
dec
or
out
pop
mov
add
dec
sbb
push
pop
fiadd
stos
adc
in
xchg
xchg
hlt
pop
fucomp
pusha
into
gs
add
jge
mov
jp
sbb
sbb
addr16
mov
mov
scas
nop
inc
dec
sub
mov
push
test
ja
fmul
or
pop
aad
mov
out
add
inc
neg
push
or
mov
into
dec
fwait
aas
push
xor
or
cdq
or
sub
jle
jo
mov
cmps
mov
es
add
retf
mov
lods
jmp
pop
or
inc
dec
gs
xchg
into
dec
adc
imul
int3
into
(bad)
scas
mov
into
sbb
stc
jl
loopne
mov
mov
mov
mov
cmp
into
jbe
push
cmc
sub
xor
sub
adc
or
shr
clc
mov
in
mov
loop
mov
push
jns
into
xchg
test
adc
addr16
mov
xor
(bad)
fucomi
int
fwait
mov
scas
or
daa
sti
(bad)
cli
sub
into
sahf
and
jg
repnz
into
ret
xchg
mov
in
aaa
jno
pop
xlat
mov
xor
cmp
pusha
mov
outs
pop
dec
dec
mov
into
adc
mov
jecxz
add
jae
mov
mov
jo
or
jecxz
adc
pop
dec
into
call
int
pop
push
push
cmp
rcl
xchg
movs
and
ds
mov
add
into
in
jnp
mov
movs
into
test
jns
into
fild
inc
adc
mov
ror
test
mov
add
into
sub
pop
into
mov
sbb
mov
jg
inc
lock
into
mov
dec
or
into
xor
and
mov
test
popf
lahf
int3
loopne
dec
call
pop
out
inc
jo
push
inc
into
sbb
jecxz
into
(bad)
addr16
(bad)
out
aas
inc
push
jle
adc
clc
sahf
(bad)
sbb
into
xlat
daa
add
js
test
xchg
push
aam
outs
lods
jno
mov
lahf
fld
(bad)
fst
pop
fimul
push
lods
pop
push
shl
leave
mov
pop
xor
and
pop
mov
or
in
cmc
jg
jecxz
push
ror
lock
dec
gs
jae
sub
xchg
push
test
bound
dec
into
cmp
dec
sbb
sbb
or
pop
mov
pop
and
jmp
push
push
lods
or
adc
lahf
cli
lods
cmps
or
jg
into
mov
jge
push
into
add
(bad)
retf
xchg
inc
push
or
adc
lods
enter
dec
pop
daa
lods
push
fimul
rcr
in
pushf
loop
inc
cmp
fmulp
nop
jae
sbb
dec
sub
fsubr
shl
test
(bad)
cld
out
sub
inc
add
das
mov
ins
sub
adc
pop
mov
out
inc
cmc
cmps
ins
into
push
fwait
std
outs
xchg
add
adc
mov
test
mov
dec
into
outs
mov
jae
mov
dec
inc
or
add
in
sbb
test
mov
mov
outs
test
packuswb
stos
push
mov
jecxz
mov
(bad)
xchg
fidiv
push
xor
lea
repz
aam
cld
xchg
sbb
stos
outs
sub
push
adc
pusha
stos
xor
loopne
(bad)
push
arpl
out
outs
or
aaa
push
pop
lods
pop
lods
push
mov
inc
test
fldcw
mov
mov
mov
outs
sar
and
pop
pop
or
mov
in
data16
adc
mov
ret
pop
jp
and
jno
mov
jg
sub
inc
xor
scas
into
(bad)
retf
das
popf
test
xchg
jno
xor
sub
jmp
(bad)
cs
dec
mov
push
mov
out
sti
stos
or
dec
dec
sbb
into
ret
mov
bound
and
movs
inc
int
ror
clc
sbb
dec
test
(bad)
mov
fisubr
add
cmp
(bad)
in
push
rol
jns
into
mov
mov
scas
aaa
push
mov
repnz
dec
mov
je
aam
mov
scas
adc
xor
pop
into
cwde
test
cmp
ins
mov
xchg
xor
xchg
into
movs
push
loope
sbb
ds
xor
and
ins
into
mov
enter
aad
test
add
imul
add
into
std
adc
movs
out
xor
loope
mov
into
les
outs
push
fild
movs
inc
loop
inc
xchg
xchg
fs
mov
and
and
jge
in
movs
jno
fist
into
loopne
cwde
dec
jmp
lods
sti
push
xor
into
xor
pop
mov
scas
stc
shl
fmulp
jno
out
jo
push
ret
into
loop
inc
dec
enter
fmul
fs
in
into
sbb
inc
sahf
in
add
mov
add
push
mov
xchg
psubusw
push
into
add
mov
inc
push
xchg
xchg
imul
mov
dec
dec
into
inc
add
jns
xchg
inc
pop
sub
ret
pop
mov
(bad)
cmp
or
mov
push
into
sub
pop
cs
(bad)
scas
(bad)
pusha
pop
es
leave
adc
test
cld
lods
adc
mov
arpl
movs
into
xchg
lock
into
dec
cmps
shl
pop
and
into
sbb
std
ins
lock
adc
int
ficomp
add
outs
or
enter
jno
sbb
movs
test
mov
fld
(bad)
loope
push
mov
or
into
push
neg
mov
push
and
movups
mov
clc
dec
mov
int
xchg
dec
add
in
dec
icebp
outs
shr
retf
jns
and
inc
sbb
xchg
aam
pop
cmp
xor
pop
xor
cwde
xchg
mov
lds
pusha
jo
out
icebp
pop
test
inc
enter
ret
sub
setae
mov
into
add
nop
mov
enter
and
into
add
jg
out
ds
mov
test
dec
or
ins
adc
jne
mov
adc
push
dec
xchg
cs
daa
add
arpl
clc
mov
add
pop
out
jns
fwait
mov
movs
(bad)
jecxz
cmc
into
push
add
sbb
adc
cmps
into
ror
(bad)
push
mov
stos
jmp
out
mov
mov
xchg
into
or
inc
or
pop
push
into
or
lods
out
dec
mov
adc
or
mov
shr
mov
rcl
adc
add
dec
push
jmp
jae
mov
ror
jno
xlat
pop
loope
into
fstp
cdq
into
addr16
add
jo
sub
repnz
mov
out
mov
mul
mov
mov
into
push
retf
setge
mov
sbb
sub
mov
int3
sbb
cmp
aas
cmp
push
and
sti
adc
cmp
inc
pop
or
outs
dec
xchg
jg
push
mov
into
rol
je
pop
into
jge
xchg
jmp
movs
imul
mov
mov
aaa
add
or
and
and
sub
adc
fnsave
into
add
jecxz
scas
outs
fwait
xchg
repz
outs
dec
inc
into
(bad)
or
pop
pop
mov
and
cs
daa
into
loopne
bound
dec
add
mov
cmp
je
cmp
jnp
dec
aam
jae
push
test
hlt
into
cmps
fstp
jbe
jo
fmul
pop
in
sbb
neg
mov
dec
cld
dec
mov
clc
into
shr
xchg
bound
cmp
inc
add
cmps
jle
push
push
aad
jmp
sub
pop
or
outs
sahf
scas
fmul
sbb
sbb
data16
(bad)
fsubrp
cmp
sbb
dec
push
fwait
aas
cmps
into
jmp
xor
pop
imul
dec
les
(bad)
adc
mov
not
call
dec
xor
fsub
clc
mov
mov
sub
xchg
gs
dec
bound
pop
outs
loope
add
movs
fst
into
mov
js
into
mov
jl
mov
std
(bad)
in
outs
add
repnz
in
sbb
into
ret
gs
and
(bad)
into
jecxz
repz
jl
cdq
jmp
or
and
mov
jecxz
xor
test
addr16
mov
mov
xor
fsubr
into
mov
or
pop
(bad)
fs
push
ins
mov
or
fucomp
sbb
pop
mov
out
dec
je
push
rcr
in
mov
push
xor
into
fnstcw
jge
mov
add
mov
repz
and
into
cmps
not
nop
in
sbb
into
outs
mov
inc
dec
mov
jo
rdpmc
stos
dec
push
scas
lods
dec
lods
ins
ds
mov
rsm
mov
lahf
pop
shl
push
sbb
into
jne
xlat
xchg
movs
and
into
jns
dec
add
cmp
lahf
into
je
mov
jge
jo
into
idiv
cmp
mov
mov
mov
and
aas
mov
sub
inc
inc
aaa
es
pop
rcr
ins
cmove
mov
mov
leave
jno
or
adc
jb
xchg
jecxz
sub
(bad)
sbb
cs
jno
popa
scas
and
push
add
(bad)
mov
mov
xchg
into
pop
sub
lods
les
fwait
xor
push
into
mov
enter
inc
sbb
dec
popf
(bad)
pop
inc
(bad)
into
cdq
(bad)
xchg
ins
int
xor
into
mov
out
and
xor
lods
xchg
test
push
sub
into
sub
push
sbb
shl
das
cmp
and
inc
nop
xor
xchg
into
or
mov
mov
xchg
xchg
xchg
fsubr
scas
int
add
mov
imul
test
(bad)
cmp
adc
dec
into
mov
mov
shl
and
pushf
scas
into
mov
inc
fisttp
(bad)
xchg
inc
pop
sub
aaa
mov
pop
dec
cmp
ds
into
sahf
jg
jge
cmp
mov
mov
idiv
xor
ja
mov
punpckhdq
stos
ror
lea
test
sub
jns
fs
push
inc
xchg
xor
into
jne
jns
ss
stc
jnp
push
push
jle
fbstp
xchg
into
gs
sub
mov
fs
pop
je
add
pop
fwait
ins
dec
sti
mov
mov
out
jge
bound
into
repz
cmps
les
sub
dec
out
xchg
cmp
cmp
dec
inc
ss
or
dec
add
in
mov
jge
movzx
push
adc
(bad)
fmul
xor
inc
imul
into
test
mov
ret
adc
xlat
je
(bad)
cmp
jge
test
arpl
and
addr16
pop
push
stos
dec
xor
(bad)
(bad)
out
scas
dec
les
xor
ret
mov
pop
aad
pop
inc
scas
scas
adc
xchg
mov
into
test
lea
test
std
call
dec
test
lds
mov
pop
mov
xor
cmp
into
test
adc
cld
imul
mov
cmp
stos
pusha
dec
jp
jne
test
adc
sbb
in
push
mov
int
jno
into
lods
int3
lds
push
into
shl
shl
in
dec
sub
xor
cmp
jmp
unpckhps
(bad)
jmp
fldcw
(bad)
pusha
std
lods
out
mov
das
out
and
pop
pop
into
ret
and
test
xor
add
loopne
lods
mov
cmc
gs
es
lahf
jmp
or
xchg
mov
mov
dec
mov
loopne
stos
jmp
sub
les
lahf
lahf
out
dec
into
jo
mov
rol
cmp
enter
or
into
xchg
lods
xor
clc
sub
push
jb
movs
pop
jg
fld
in
mov
inc
enter
gs
bound
in
add
dec
pop
fwait
dec
xchg
sahf
jle
std
test
enter
xlat
in
ficom
push
sbb
pavgb
mov
push
ret
outs
cmp
jnp
into
dec
pop
retf
in
mov
movs
xchg
xor
push
es
cwde
scas
sbb
mov
scas
dec
ret
dec
sbb
out
stos
into
icebp
mov
fild
arpl
jns
xchg
cmp
into
icebp
sub
ret
out
mov
into
adc
aam
into
adc
and
xor
ret
aas
test
push
jne
sar
dec
lahf
(bad)
into
mov
in
scas
pop
rcr
pop
and
lock
into
jg
popa
loop
daa
js
mov
outs
mov
pop
mov
sub
pop
jmp
inc
mov
push
(bad)
mov
and
cdq
inc
das
mov
ds
dec
xchg
rol
fs
jp
fucomi
sub
lea
test
cmps
daa
push
pcmpgtw
xchg
sub
and
xor
sti
mov
nop
ror
outs
jg
arpl
and
scas
aam
sbb
mov
(bad)
sub
loope
jle
mov
shr
addr16
jg
mov
sar
leave
shl
test
iret
into
mov
(bad)
(bad)
cmps
push
xchg
mov
scas
cli
inc
pop
out
stos
pop
sar
cmp
int
into
lds
cmp
cmc
aaa
cmp
arpl
sbb
push
gs
bound
mov
xor
mov
ja
imul
sbb
std
jmp
xlat
dec
int
sar
mov
xor
push
(bad)
cmp
mov
into
adc
mov
into
scas
test
pop
xor
fcmove
cmps
aam
lock
jae
xchg
into
push
pop
sub
pop
ror
mov
inc
add
aam
shl
xor
xchg
jl
std
imul
in
outs
imul
int3
into
jg
in
and
cwde
or
fsub
sti
xchg
xor
into
fsubr
addr16
ins
xor
into
or
shr
mov
adc
into
mov
aaa
repnz
jns
cwde
cli
in
push
sbb
xor
je
mov
jno
movs
xor
ror
inc
xor
ror
mov
mov
xchg
or
and
pusha
out
mov
into
je
sti
adc
mov
mov
cwde
ror
cmp
adc
test
pop
es
test
mov
lods
pop
pop
jecxz
sbb
test
fmul
(bad)
adc
mov
sbb
shl
in
dec
(bad)
jle
fcomp
sub
out
or
jmp
cmp
pop
out
add
dec
in
hlt
mov
pop
xchg
xchg
xchg
scas
or
and
inc
mov
push
into
pushf
jo
and
sub
into
cmp
sub
imul
outs
xchg
jg
fcmovne
retf
into
xchg
in
adc
mov
ins
mov
xchg
std
test
iret
movs
pop
add
scas
jae
mov
popf
cmp
mov
jge
aad
jo
sub
mov
mov
push
or
adc
into
movs
in
and
std
sbb
add
jg
jb
mov
fsubr
popf
xor
mov
mov
add
dec
lock
lods
sub
dec
jge
idiv
test
xchg
cmps
jle
xlat
movs
cmp
push
aam
into
std
aad
push
test
jnp
outs
dec
or
sub
sub
inc
lods
fs
sbb
(bad)
rol
aam
push
or
retf
sbb
xchg
or
data16
and
into
cmc
push
(bad)
mov
push
mov
mov
rol
push
xchg
lock
push
ins
jge
retf
(bad)
adc
mov
into
pop
lds
mov
push
jo
inc
xchg
rcr
pusha
sub
fsubr
or
mul
ins
mov
adc
xchg
pop
stos
into
or
jnp
sar
into
cmp
ror
mov
push
icebp
imul
or
out
cmp
call
pop
inc
into
jo
fs
loope
mov
sub
dec
add
into
mov
mov
push
and
test
jmp
inc
scas
jge
sub
sbb
fst
imul
sbb
pop
cwde
into
xchg
inc
jb
mov
pop
lods
mov
jnp
data16
sahf
sbb
adc
into
addr16
xor
cmp
mov
cmc
(bad)
ss
es
pop
mov
dec
sbb
and
adc
sub
std
into
dec
push
jbe
fst
repz
es
push
repnz
lahf
les
into
push
imul
sbb
adc
adc
jmp
lea
inc
lods
fiadd
shl
(bad)
in
mov
sub
dec
add
dec
cs
push
lea
ror
mov
(bad)
xchg
into
or
mov
int3
fnstsw
adc
stos
sbb
push
inc
jp
xor
leave
fld
push
mov
dec
adc
adc
(bad)
retf
in
lods
(bad)
and
std
rcl
mov
ds
pmulhw
fs
cmp
into
loop
ja
sbb
mov
cmps
repnz
ss
push
into
shl
push
mov
in
inc
push
adc
imul
in
outs
or
gs
mov
fbld
sbb
xchg
xchg
mov
cmp
mov
dec
into
gs
out
sub
cmp
pop
bndstx
aad
adc
push
movs
dec
(bad)
dec
bound
xchg
jb
pop
stc
xor
push
or
(bad)
jl
call
cmp
dec
jnp
(bad)
mov
add
das
into
mov
push
out
repz
into
std
pop
test
test
xchg
xor
push
push
and
loop
jno
lods
call
(bad)
xor
jg
mov
ret
arpl
mov
sub
aam
mov
fldpi
(bad)
pop
or
xchg
xchg
cdq
pop
xor
pop
and
push
xchg
lods
cmc
mov
xchg
ret
into
data16
leave
aas
push
rcr
(bad)
sub
into
xchg
bound
inc
repz
jp
mov
imul
into
xlat
pop
or
inc
retf
push
mov
loope
pop
mov
sbb
jmp
ja
ror
inc
jmp
sbb
jmp
sbb
in
mov
out
(bad)
into
ret
jbe
sub
imul
js
test
inc
les
and
ficom
xchg
daa
cmp
pop
sbb
repnz
shl
mov
jb
in
mov
scas
mov
dec
jmp
mov
into
ins
and
jns
icebp
mov
fwait
std
into
sub
sub
addr16
test
scas
rcl
fnstcw
add
into
gs
xor
push
shr
test
inc
jge
adc
das
xchg
xchg
mov
sub
punpcklbw
mov
mov
adc
into
adc
lahf
jns
into
add
xor
push
xchg
stos
dec
scas
out
fdivr
rcl
into
bound
loope
idiv
inc
mov
dec
xchg
mov
push
push
mov
sub
btc
xchg
lods
in
aam
int3
cmc
and
lods
addr16
jae
test
sub
into
pop
pop
mov
(bad)
into
xor
mov
into
shl
loopne
or
mov
jmp
mov
and
in
scas
into
mov
lods
int
add
hlt
pop
leave
jle
push
data16
push
in
fldl2t
xchg
enter
add
setae
fmul
fwait
sub
ss
pop
mov
mov
in
inc
js
scas
xlat
(bad)
sbb
into
in
sub
loop
sbb
into
xchg
xor
cmp
mov
push
xchg
mov
stos
mov
into
xlat
inc
sbb
mov
(bad)
into
hlt
cld
aad
es
into
mov
push
pusha
into
ror
test
adc
call
mov
jecxz
mov
into
clc
add
stos
hlt
mov
gs
inc
test
add
les
out
push
inc
inc
mov
shl
fwait
ja
into
xor
aaa
arpl
pop
adc
pop
std
sbb
mov
daa
jmp
mov
out
aam
into
sti
jmp
(bad)
icebp
scas
popf
repnz
gs
addr16
jb
test
push
(bad)
neg
sbb
into
pop
(bad)
popf
or
loopne
test
add
dec
clc
pop
mov
stc
into
pop
pusha
outs
cmp
cmp
xchg
test
fidivr
lds
mov
pop
out
dec
addr16
cmps
mov
adc
into
sub
pusha
stos
ins
xchg
adc
mov
mov
inc
push
add
rcr
push
aaa
dec
stos
es
mov
sub
movs
aam
cmp
ss
jbe
xor
cmp
movs
cmp
fst
ins
push
push
pop
cmovno
sahf
in
dec
lods
xchg
fnstsw
push
and
mov
movs
add
shl
aam
or
inc
mov
ret
into
loope
in
or
stos
add
sub
inc
xor
pop
aas
mov
xchg
lds
test
dec
add
push
aad
dec
call
out
mov
jp
jge
adc
test
into
pop
or
aad
sbb
mov
cdq
add
push
call
into
adc
pushf
dec
xor
test
mov
mov
and
mov
in
xchg
(bad)
xchg
mov
lods
and
or
in
pop
pop
into
popa
not
jmp
aaa
cmp
mov
push
in
sti
(bad)
into
push
xor
cmp
push
stos
xor
mov
pop
int3
mov
mov
xor
out
into
lods
mov
pop
jb
nop
into
sbb
inc
inc
mov
pop
and
sahf
js
jle
into
push
shl
cld
mov
leave
inc
inc
es
or
sub
mov
inc
lock
into
xchg
pop
mov
cmps
scas
inc
pop
imul
inc
jge
xor
call
into
pop
mov
bound
push
arpl
pop
adc
in
jg
and
outs
cmc
mov
xchg
pop
cmp
push
loopne
ret
les
test
ficomp
mov
fld
add
and
fisttp
mov
iret
into
fimul
mov
into
out
push
adc
inc
jns
into
test
daa
out
repnz
xchg
xor
dec
push
or
lods
dec
jl
xchg
das
std
inc
fldcw
xchg
rsm
inc
test
pop
mov
sbb
fcomp
(bad)
out
mov
vandnps
xchg
shl
scas
dec
xchg
sbb
mov
jp
lods
add
jns
call
iret
out
imul
xchg
(bad)
test
sub
xor
mov
mov
mov
sbb
out
jge
mov
add
mov
retf
iret
imul
pop
cmp
aad
inc
xchg
into
imul
jge
pop
dec
into
movs
mov
cwde
push
ret
out
jg
pop
mov
into
lods
push
dec
xor
in
lods
jmp
and
pop
movs
aaa
addr16
mov
mov
(bad)
enter
ret
mov
mov
xor
popa
leave
xchg
aad
push
in
into
ret
rol
mov
mov
stos
or
dec
adc
jecxz
inc
int
fdivr
leave
not
inc
(bad)
into
push
xchg
jae
test
into
in
cmps
xchg
add
into
xor
into
pop
(bad)
jecxz
popa
fs
shr
aas
cli
sbb
into
lds
inc
push
pop
scas
xor
xchg
xchg
or
mov
in
lods
pop
shl
fcmovne
fld
push
loop
xchg
dec
pop
into
jge
xor
rol
lods
scas
add
aas
out
xor
test
je
scas
test
xchg
pop
shr
inc
into
push
pusha
adc
jb
aam
test
sbb
cmp
or
addr16
inc
repnz
fisttp
test
jmp
fwait
xchg
into
hlt
jmp
daa
inc
mov
adc
into
aaa
add
aam
jae
jb
int3
xchg
in
add
adc
mov
mov
pop
nop
mov
cmp
pop
mov
outs
scas
imul
sti
ja
jl
cmps
into
out
hlt
xor
pop
xor
or
sahf
inc
push
(bad)
cmp
and
jecxz
cmp
sti
adc
sbb
test
pop
cdq
ss
sbb
in
outs
add
sub
push
movs
call
mov
dec
out
fisttp
mov
sbb
xor
xor
fsub
js
dec
push
test
shr
cs
rsm
ja
cmp
into
loope
lods
mov
pop
fldcw
sar
lods
mov
jnp
mov
das
outs
adc
scas
ds
jae
xor
inc
cmp
jb
cmp
cmp
mov
into
fcmovbe
dec
cdq
push
enter
pusha
mov
mov
mov
add
cdq
adc
and
dec
cdq
xchg
inc
sbb
scas
mov
sbb
jg
push
in
mov
into
inc
retf
cdq
(bad)
scas
mov
aam
(bad)
pop
mov
sub
add
fdivr
aas
pop
nop
xor
mov
mov
minps
mov
fcmove
sub
push
inc
inc
sbb
test
aas
cli
jb
mov
test
mov
push
pop
jno
xchg
sbb
inc
lods
fcmovnu
(bad)
into
jns
fsub
es
jb
into
add
mov
jae
push
ror
dec
inc
add
into
sub
lods
push
into
test
jae
(bad)
mov
or
loop
gs
xlat
dec
xchg
cs
dec
fwait
xor
jmp
inc
jne
jns
in
(bad)
mov
nop
jmp
in
outs
inc
fistp
xchg
lods
jle
mov
pop
in
push
jae
into
or
ret
add
mov
ins
fdiv
into
jb
mov
cmp
fld
scas
add
loopne
mov
push
into
mov
hlt
sbb
into
imul
shr
xor
pop
retf
mov
into
sub
xor
test
inc
sbb
adc
aaa
shr
sub
xchg
jle
stc
into
daa
adc
cmp
popa
jno
aaa
cmp
lock
shl
jl
(bad)
dec
adc
lods
or
cdq
les
std
into
fisub
imul
repnz
cmp
into
xor
inc
mov
cmp
retf
mov
push
dec
scas
inc
loopne
mov
and
into
aaa
mov
imul
out
add
push
jo
xchg
jb
or
pop
into
xor
fdiv
lahf
xor
push
cmp
outs
sub
sbb
ret
mov
push
das
pop
adc
(bad)
test
popf
xchg
sbb
mov
scas
(bad)
inc
out
xchg
push
sti
fiadd
daa
mov
in
xchg
and
data16
pop
into
fwait
jb
cmp
mov
mov
movhps
pop
cmps
(bad)
lock
loope
into
pop
push
std
mov
in
xchg
(bad)
outs
dec
pop
sub
dec
icebp
push
into
ins
and
push
into
cdq
adc
lods
cld
(bad)
dec
or
adc
(bad)
adc
xor
mov
movs
and
scas
movs
inc
and
cli
into
scas
das
dec
inc
adc
scas
test
into
push
dec
push
lock
into
sbb
ins
cwde
or
jno
adc
sbb
js
popa
lods
sar
adc
dec
pop
outs
nop
or
into
jecxz
movs
xor
jo
push
pop
sti
xchg
mov
into
mov
dec
into
pop
xor
(bad)
ss
xor
sub
xlat
cmp
or
das
mov
lods
cmps
adc
or
adc
or
xor
movs
sub
stc
xor
into
mov
mov
test
(bad)
es
stc
add
outs
cli
jae
into
jle
loopne
push
add
mov
push
jmp
mov
into
jb
mov
into
test
xchg
das
fxch
fimul
in
frstor
clts
push
mov
lods
ins
jo
cdq
shr
into
xchg
push
mov
test
jnp
xor
jb
shl
jg
lods
retf
sub
mov
or
xchg
in
mov
loopne
dec
dec
in
lods
cli
adc
cmps
push
mov
std
push
jecxz
test
repz
cmc
test
cmps
dec
push
(bad)
out
ins
popa
in
inc
ds
jne
cs
das
stos
test
xchg
and
push
scas
or
mov
movs
shl
stos
rsqrtps
xor
(bad)
jecxz
jmp
mov
adc
lods
(bad)
loop
into
xor
in
clc
pop
xor
add
cmp
js
cdq
jg
pop
xchg
outs
sbb
cmp
xchg
jge
jmp
adc
push
mov
and
pop
mov
lods
movups
jne
mov
cmp
into
jmp
pop
mov
punpckldq
fstp
cmps
lods
xchg
js
xlat
sbb
idiv
and
pusha
mov
jae
mul
jmp
push
les
enter
addr16
mul
into
jne
call
es
cmp
xchg
mov
aad
stos
xor
xchg
lahf
and
mov
packuswb
jmp
inc
pop
fist
xchg
xchg
sub
mov
jg
into
push
aam
xor
dec
popa
mov
cmovne
daa
pop
jae
mov
mov
mov
fsubr
jno
fwait
into
out
add
and
pop
add
inc
adc
into
jmp
mov
bound
dec
mov
lahf
pop
aaa
aad
into
pop
mov
adc
mov
jp
into
xor
jbe
into
jns
pushf
scas
sub
and
pop
in
enter
xchg
push
xor
sub
daa
pop
inc
xchg
add
pop
into
inc
pop
xor
sub
fistp
sub
pop
cli
iret
hlt
(bad)
test
push
out
pop
cmc
data16
fs
enter
into
inc
jmp
out
xchg
lahf
dec
into
mov
mov
pop
call
dec
push
je
mov
jne
and
pop
scas
aaa
jg
retf
mov
sbb
push
(bad)
pop
mov
mov
xchg
into
clc
sub
jge
or
imul
dec
iret
repz
out
mov
xor
mov
iret
mov
lods
xor
or
adc
into
lock
ins
sub
sahf
lods
xchg
inc
lods
nop
jnp
cs
sar
into
dec
push
mov
aam
stos
inc
mov
into
pop
xchg
and
mov
add
loope
jno
add
repnz
test
xchg
mov
(bad)
int3
mov
into
cmps
pop
ja
cdq
jmp
dec
add
mov
stos
in
into
ret
sti
cli
loopne
mov
mov
lods
repz
aas
outs
pop
mov
into
(bad)
ins
popf
xchg
xchg
nop
into
movs
pop
je
jo
and
retf
(bad)
pusha
ins
sbb
bound
and
pop
mov
mov
mov
dec
scas
retf
dec
add
xchg
stos
(bad)
shr
xor
aad
mov
into
pop
daa
jmp
into
(bad)
jno
cmp
and
into
aam
jne
ja
fcomp
icebp
mov
rcl
test
mov
(bad)
icebp
(bad)
out
call
cmps
add
xchg
lods
jle
outs
push
push
or
xchg
mov
xchg
dec
push
inc
ja
les
outs
and
into
dec
popf
adc
and
(bad)
into
cdq
es
jmp
mov
inc
scas
fsub
inc
cli
(bad)
into
stos
fild
xlat
pop
xor
lods
ficom
push
dec
inc
push
das
xor
ja
jg
into
cmp
ss
pop
stos
in
into
pushf
out
or
into
xor
sub
imul
inc
in
mov
mov
imul
xchg
push
fcomp
pop
loopne
mov
mov
inc
push
jmp
fcmovu
jmp
sub
inc
into
lds
push
xor
ret
inc
bound
mov
pmaddwd
test
push
repnz
sahf
xchg
outs
xor
int3
setge
cmp
cli
test
jo
sbb
das
cmc
or
movs
push
addr16
into
int
adc
sbb
test
and
in
fdiv
pop
into
push
inc
addr16
lods
adc
push
xor
into
clc
mov
xor
mov
stc
into
test
mov
out
fsubr
xchg
ror
shl
mov
push
push
push
out
ins
stos
lods
dec
and
cmp
into
movs
sbb
mov
push
hlt
dec
jl
and
je
pop
xchg
js
adc
(bad)
mov
xchg
adc
mov
inc
shr
shl
push
popf
xor
jno
into
adc
push
add
add
mov
mov
into
sub
add
cli
into
stc
test
xchg
into
cmp
retf
push
data16
es
push
into
cmp
jmp
sub
shr
into
dec
(bad)
ja
repnz
fwait
mov
pop
cmp
sbb
sbb
jg
mov
rol
into
hlt
xor
shl
cmp
fisub
mov
fmul
into
adc
mov
mov
test
stos
imul
jnp
jne
pop
sbb
test
iret
fmul
pushf
pop
push
fstp
aas
movs
stos
push
sbb
pop
into
add
sbb
call
out
mov
jns
movs
(bad)
(bad)
jne
dec
bound
push
or
inc
jmp
sbb
sub
mov
test
push
addr16
push
into
cwde
ss
and
cmp
scas
mov
leave
lods
fst
adc
push
mov
sub
mov
(bad)
outs
adc
jbe
add
into
inc
dec
retf
push
cmp
(bad)
jmp
aaa
or
into
and
call
jmp
in
push
sbb
lahf
sahf
cmp
ret
and
loopne
jbe
loope
mov
call
jnp
push
jge
mov
add
stc
ja
into
mov
sub
sub
aaa
xchg
das
push
xor
scas
jle
add
lahf
and
into
in
xor
dec
jg
leave
lods
push
sbb
push
popa
pop
adc
fwait
into
xor
lds
out
popa
add
ds
inc
push
and
aaa
mov
push
add
jg
and
xchg
jae
stos
shl
mov
push
into
sbb
lods
sbb
inc
mov
cli
in
inc
into
push
nop
pop
push
jp
arpl
into
cmp
ror
inc
scas
dec
loope
(bad)
ins
jae
xchg
add
sbb
pop
leave
fcmovb
(bad)
loopne
jnp
jmp
ins
(bad)
rcl
shl
loop
mov
mov
into
hlt
pop
mov
fcmovne
gs
idiv
into
and
lahf
ds
ins
pop
pushf
cmp
pop
ret
cmps
into
push
stos
dec
push
xor
ss
mov
test
mov
push
das
or
sub
loopne
cmp
adc
push
pop
arpl
int3
shr
into
and
jno
aas
mov
into
sbb
add
add
loope
fisttp
mov
add
shl
pop
sbb
pop
adc
dec
add
inc
mov
lgs
ins
cdq
test
popa
lods
clc
mov
mov
push
test
cmp
popf
std
dec
mov
jno
jmp
and
scas
dec
in
test
dec
ins
jmp
fwait
mov
out
pop
(bad)
push
ds
into
sbb
out
sub
and
xchg
cwde
push
stos
mov
out
aas
mov
xchg
adc
jne
jmp
aad
(bad)
cmc
pusha
xor
into
jmp
fwait
xor
pop
not
push
int
imul
outs
(bad)
mov
dec
sub
cmp
jl
push
push
scas
addr16
adc
(bad)
cmp
dec
xor
scas
je
mov
jg
loop
cwde
into
mov
and
cmp
push
mov
inc
mov
push
adc
ins
movs
sbb
sub
mov
push
std
cmp
dec
outs
aaa
mov
into
mov
(bad)
xlat
mov
stc
pop
mov
lar
fistp
das
or
adc
pop
and
stos
lods
sar
mov
dec
xor
(bad)
cmp
sub
pop
fdivp
mov
clc
sub
xchg
xor
in
pop
push
stos
loop
jmp
cmc
jl
out
ret
lods
pop
into
cli
(bad)
mov
mov
mov
in
(bad)
sbb
jbe
jle
das
bound
push
daa
daa
shl
mov
dec
rcr
jmp
into
outs
daa
mov
dec
into
cmps
sbb
xlat
fucomi
add
lods
movs
stc
fild
stos
mov
repnz
or
mov
data16
push
shl
adc
stos
pop
dec
mov
aad
pop
imul
mov
push
mov
je
into
fstp
sub
stc
pop
stos
inc
mov
arpl
(bad)
rcl
cmp
sar
mov
imul
mov
lods
and
in
xchg
inc
ds
pop
pop
jae
cmp
into
sub
mov
fcmove
adc
xchg
fcmovne
push
inc
sti
cli
add
cmc
into
inc
outs
cdq
and
(bad)
stc
jmp
lock
mov
dec
sub
mov
fucomi
ds
inc
test
lods
repnz
mov
add
popf
jg
scas
div
in
shld
sahf
ds
cmp
jmp
into
mov
fs
lods
pusha
ds
xor
enter
daa
aas
cmp
test
into
xor
cs
icebp
ds
repz
shl
xchg
and
inc
pop
pusha
jmp
sub
mov
xchg
and
inc
sub
or
jge
(bad)
mov
or
(bad)
mov
sub
xchg
inc
mov
into
es
imul
push
jl
clc
adc
outs
mov
rcr
pop
ss
arpl
lods
jmp
xchg
push
ror
cld
mov
inc
into
(bad)
lods
mov
and
xor
movs
bound
inc
jge
into
mov
ror
sahf
sub
test
add
dec
icebp
das
push
into
enter
inc
aam
scas
into
push
sub
fsubr
popa
popf
sbb
adc
loope
les
lods
cld
fptan
adc
ror
mov
xchg
or
sub
sbb
and
xchg
test
mov
xor
hlt
fwait
pop
std
into
ins
inc
test
xor
into
inc
out
pop
jno
xor
inc
into
dec
push
dec
loopne
pop
ja
push
jne
nop
sbb
pop
sbb
into
xchg
outs
scas
cmc
inc
loopne
fsubr
mov
scas
cli
cmp
into
mov
lahf
fs
xor
xchg
mov
clc
fnstcw
setle
test
mov
inc
nop
fist
hlt
cmp
xlat
test
mov
pop
cwde
call
loop
jl
xlat
sub
or
jo
push
repz
pop
mov
jl
jmp
and
mov
out
ret
or
shr
mov
pop
jo
inc
ja
data16
cmp
outs
fnstsw
adc
xor
inc
mov
sbb
aas
js
jge
outs
into
ss
pop
mov
sar
fist
es
jg
enter
sbb
cmp
add
into
pop
jg
dec
sub
cmc
dec
sub
add
outs
into
add
retf
je
adc
inc
test
fimul
jmp
call
es
addr16
test
ss
aaa
inc
adc
pop
ja
xchg
les
lods
xor
outs
fsubr
into
lds
(bad)
inc
pop
stos
pop
int3
jmp
adc
mov
rcl
iret
out
fmul
add
add
xchg
into
lods
sbb
out
dec
push
mov
pop
ror
add
mov
xor
xchg
cdq
loop
sbb
pop
and
ins
pop
into
jns
cld
push
ja
mov
pop
ins
inc
push
mov
ss
push
nop
ret
sub
and
dec
aas
pop
fs
leave
aaa
loopne
jns
test
test
enter
jbe
jmp
fcomip
les
je
pop
mov
pushf
movs
into
sbb
xchg
pop
test
or
mov
aam
into
mov
bound
scas
sub
fst
imul
pop
into
aaa
outs
iret
enter
pop
nop
or
xor
jns
push
cdq
xchg
lods
mov
cmp
in
or
scas
aaa
inc
pop
sbb
cs
push
sbb
loope
das
into
and
xchg
lods
dec
push
add
push
or
and
xchg
add
cmp
into
test
jnp
nop
es
push
mov
sbb
xor
cmp
push
xchg
and
mov
jo
push
sbb
or
inc
leave
stos
fidivr
add
dec
mov
repnz
aad
push
jns
adc
cmp
ror
movs
xor
sbb
scas
(bad)
fiadd
(bad)
adc
lods
sub
idiv
pop
iret
out
fadd
das
sub
mov
dec
push
mov
xchg
lods
add
mov
das
mov
dec
mov
and
push
les
out
sbb
adc
(bad)
into
iret
adc
out
sub
into
dec
sub
dec
icebp
jle
inc
into
inc
loopne
jb
pop
test
repz
movs
pop
mov
into
lods
clc
mov
xchg
scas
das
cmp
xchg
test
pop
mov
das
fstp
push
jl
stos
test
psubq
inc
xor
xor
js
pop
pop
into
fwait
in
sahf
loope
xor
pop
cdq
cmps
xchg
dec
cmp
cmp
xchg
es
nop
mov
mov
into
or
cmp
retf
stc
test
shl
dec
into
sti
fidiv
cmp
ror
inc
mov
stos
ss
(bad)
push
test
pop
mov
mov
push
out
pop
(bad)
fild
into
xor
rol
scas
outs
or
push
pop
pop
cmp
ret
test
jnp
stc
pop
fdivrp
sahf
cmps
call
clts
jge
mov
into
mov
dec
movsx
dec
into
(bad)
push
retf
cmp
cmp
mov
pop
jbe
aaa
retf
(bad)
mov
or
aas
cwde
jne
into
sbb
add
or
sub
sub
adc
jb
sbb
mov
data16
js
pop
ss
mov
scas
mov
daa
movs
mov
nop
lods
mov
cvttps2pi
mov
pushf
jge
and
or
cdq
dec
repz
into
pop
lods
out
jmp
shr
mov
mov
mov
stc
outs
idiv
mov
add
into
(bad)
jecxz
or
retf
into
mov
frstor
inc
fmul
adc
sub
push
loope
jp
add
mov
popa
lods
or
jp
cdq
das
mov
and
aam
mov
xchg
data16
stos
mov
punpckldq
inc
or
sub
fistp
into
mov
cmp
into
adc
sbb
movs
loop
retf
nop
ins
xor
ja
push
fsubr
add
movs
test
and
test
into
fwait
test
into
pop
sbb
and
dec
xchg
sub
sub
js
xchg
xchg
nop
cmp
shr
scas
lods
das
iret
arpl
test
call
push
cmps
push
lods
stos
into
out
add
mov
outs
ficomp
cld
in
adc
jmp
xchg
into
pop
scas
mov
test
inc
mov
add
into
cld
inc
or
inc
popf
or
push
mov
push
xor
sub
or
movs
sbb
faddp
inc
mov
ss
enter
cmp
stos
std
scas
cmp
inc
mov
jecxz
lahf
sar
mov
cmp
adc
cmp
ins
sbb
jle
(bad)
es
dec
addr16
sbb
into
mov
jmp
lods
popf
push
sub
cli
push
mov
(bad)
jb
sbb
pop
call
push
and
retf
ret
into
xchg
cld
and
ss
into
inc
adc
out
into
les
mov
cmps
fs
pop
sub
inc
scas
es
push
(bad)
cmp
xor
ficom
inc
cmps
and
(bad)
neg
inc
in
and
adc
jb
mov
sub
or
xor
les
jecxz
icebp
inc
sub
fdiv
outs
jle
call
test
sbb
and
push
dec
das
cli
cmc
push
xor
(bad)
neg
xchg
sub
dec
ror
push
mov
and
repnz
cwde
adc
xchg
in
test
popa
jmp
pop
scas
sbb
lods
xchg
lds
into
in
test
into
fs
and
fcmovne
adc
aaa
ret
jecxz
jno
ss
into
dec
aas
jmp
mov
and
lahf
or
push
js
mov
sub
movs
cmp
mov
dec
arpl
adc
cmp
inc
xor
sub
into
leave
and
lea
xor
sub
jle
dec
jne
int
movs
(bad)
mov
(bad)
jo
push
jmp
rcl
add
mov
into
test
jb
pop
loop
lods
repnz
test
inc
rcl
clc
cmp
jmp
icebp
(bad)
sub
sahf
cmps
lods
(bad)
jg
dec
push
into
loopne
xchg
mov
xchg
into
xlat
adc
push
neg
into
xor
addr16
stos
imul
das
jmp
mov
mov
int
mov
lods
aas
and
push
fnstenv
(bad)
mov
cmp
push
call
shl
and
cmps
mov
call
mov
mov
sti
inc
setae
in
and
fld
adc
push
das
into
dec
repnz
inc
xchg
test
cmp
mov
mov
jp
xchg
into
dec
add
inc
scas
rcr
retf
test
pop
shl
mov
ficomp
jl
xchg
adc
(bad)
pop
pcmpgtb
iret
daa
push
ins
retf
jo
adc
dec
lods
cwde
xchg
inc
std
jmp
and
pop
push
jge
mov
stos
mov
sub
push
xor
jb
retf
push
mov
and
and
out
int
or
ret
inc
xchg
cmp
cli
add
xchg
test
fwait
aam
mov
call
pop
cmp
inc
enter
into
repz
cmp
cmp
xchg
xor
mov
mov
test
cld
lods
add
adc
mov
movs
mov
aas
into
mov
std
lods
xchg
div
xor
cmp
push
ret
push
fidivr
into
shl
sub
gs
or
lods
lea
pop
pop
in
sbb
out
cmc
data16
aad
out
mov
test
not
into
repz
push
push
arpl
out
(bad)
and
sub
mov
cli
imul
fsubr
int3
out
mov
or
mov
into
les
xchg
inc
ins
out
add
mov
into
jl
lds
fs
and
ds
pop
push
mov
cmp
aam
into
jns
(bad)
into
fisubr
push
out
cmp
sub
xchg
sub
inc
test
mov
(bad)
dec
or
in
sub
and
jb
fcom
test
ins
and
ins
adc
xchg
mov
and
jo
xor
ins
leave
int
out
xlat
(bad)
fsubr
sub
outs
or
adc
test
lea
mov
mov
cmp
(bad)
scas
pop
mov
or
dec
into
(bad)
xchg
cmp
jb
sahf
sti
push
xor
into
outs
mov
cmps
sub
addr16
mov
sub
jecxz
loope
repnz
(bad)
and
push
mov
sub
push
sub
ficomp
into
shr
jne
lods
cdq
lods
call
and
mov
into
mov
jo
loop
pop
aaa
out
call
cli
mov
stos
dec
into
push
inc
mov
in
adc
jo
mov
xchg
xchg
out
fadd
push
cmps
sbb
push
fisttp
xor
xor
jo
cmp
jae
icebp
loope
into
out
rcr
push
into
push
and
(bad)
mov
leave
adc
dec
xor
repnz
mov
ror
fwait
or
sar
mov
into
mov
dec
sbb
jmp
cmp
lods
jnp
inc
mov
les
mov
xor
call
outs
aas
sbb
out
popa
aaa
in
arpl
into
mov
jp
xchg
push
imul
sub
pop
jge
push
in
into
xchg
mov
imul
lods
into
mov
pop
out
sub
inc
scas
test
mov
shl
sbb
stos
pop
into
imul
inc
into
fisubr
sub
nop
jl
test
cli
retf
jmp
(bad)
(bad)
or
lods
add
xchg
dec
into
ret
mov
(bad)
pop
mov
fnsave
loop
push
sar
jne
ja
mov
fstp
sbb
iret
sbb
push
xor
sbb
cmps
into
es
in
xchg
inc
test
push
inc
fmul
mov
into
addr16
dec
cmp
into
pop
pusha
out
push
xor
ins
into
prefetch
or
sbb
into
mov
mov
push
xchg
xchg
cmc
dec
and
js
xor
into
daa
out
dec
clc
pop
je
inc
pop
add
ror
jmp
push
sub
fs
(bad)
stos
sub
add
push
bound
call
into
in
sub
xchg
pop
popa
into
jp
and
lods
(bad)
into
dec
jge
lock
mov
je
pusha
xchg
xor
add
pop
test
cmp
sbb
add
into
call
ror
in
jns
xor
test
pop
xlat
inc
data16
lock
dec
int3
push
cmp
aaa
into
push
dec
les
pop
test
loop
jmp
stos
mov
and
or
lock
jge
scas
lods
jae
ret
sbb
test
pop
into
jns
jmp
jbe
fst
popa
xchg
imul
sub
dec
sti
cmp
cdq
pop
mov
cmp
scas
das
inc
jl
sub
je
jnp
jmp
into
aad
retf
lods
call
test
inc
and
sub
lds
data16
imul
(bad)
sub
inc
(bad)
lea
jecxz
into
xor
dec
jae
lods
xchg
cmp
scas
fisttp
pop
mov
scas
movs
mov
jns
leave
add
cmp
or
iret
ret
or
(bad)
(bad)
mov
into
sub
dec
in
mov
scas
mov
das
sbb
push
into
or
jns
ja
push
adc
push
mov
into
add
loopne
jmp
lods
pop
mov
shl
sub
aad
mov
sar
jnp
movs
mov
pop
in
dec
cmp
leave
or
into
sbb
mov
cmp
fsubr
stos
pop
xor
inc
or
mov
je
ror
das
out
fisubr
es
call
jecxz
lahf
stos
mov
scas
fdivr
cmps
sbb
aaa
mov
jge
mov
pop
clc
outs
into
retf
ret
add
mov
loopne
cmp
cld
test
cdq
into
add
es
sbb
ins
dec
arpl
ror
into
pop
jns
xchg
push
xor
lahf
mov
pop
lods
bound
pop
aam
aas
mov
xor
pop
call
mov
std
mov
push
(bad)
into
(bad)
jnp
loope
dec
bound
iret
rol
into
lods
sub
gs
das
into
xchg
call
into
fwait
aas
jne
sub
push
mov
push
test
dec
mov
pop
xor
adc
cmp
rcl
retf
xchg
test
pop
jle
sub
mov
push
into
scas
mov
or
retf
(bad)
(bad)
into
ror
repnz
push
test
sub
es
lods
push
je
mov
sub
out
push
dec
mov
jne
push
xor
repz
fistp
and
lods
add
dec
sbb
pusha
das
scas
sahf
repz
repnz
push
lahf
into
jmp
outs
sbb
mov
jb
or
into
xor
and
aam
int
fldcw
ins
cmps
outs
mov
into
fild
fs
into
out
adc
xor
lods
into
popa
mov
jle
inc
and
into
push
jmp
int
movs
hlt
sub
jg
js
jae
and
into
arpl
imul
cmps
xchg
ja
add
fiadd
mov
sahf
adc
into
mul
rcr
pop
gs
stc
xchg
add
retf
mov
cmp
cld
xor
loopne
into
idiv
inc
aaa
and
xchg
pop
add
shl
aaa
dec
into
jl
dec
stc
inc
loop
nop
into
icebp
xchg
cs
jg
adc
and
into
out
sub
push
ret
xchg
mov
stos
jae
add
mov
outs
movs
cmp
mov
ret
push
add
mov
loope
into
scas
push
dec
or
std
fistp
icebp
into
push
fwait
(bad)
cmps
sub
call
dec
ret
movs
sahf
into
rol
adc
adc
into
int3
adc
sbb
dec
push
dec
pop
and
int
sbb
pop
mov
aas
mov
mov
push
or
cmp
icebp
je
into
dec
jmp
outs
sbb
mov
jmp
ret
into
pop
cdq
adc
or
sahf
xchg
test
les
jg
mov
iret
(bad)
jl
pop
loope
dec
mov
into
test
pop
dec
cmovns
std
xchg
add
into
push
mov
mov
sbb
(bad)
into
sar
out
jo
lds
add
cs
cmp
or
dec
xchg
mov
mov
push
adc
jp
mov
inc
lds
sub
sbb
or
aaa
std
into
in
sbb
cmp
idiv
mov
nop
mov
and
or
pop
mov
cmp
daa
xor
xor
into
dec
pusha
pop
push
xlat
mov
retf
gs
mov
sub
jae
call
out
or
lods
into
ds
push
adc
js
daa
push
push
clc
or
into
lds
or
into
sub
or
out
pop
cdq
jmp
in
mov
shl
inc
hlt
sbb
push
cmps
dec
out
xchg
mov
pop
mov
data16
call
add
mov
(bad)
fsubr
add
push
and
xlat
das
pop
pop
jo
inc
push
pop
into
add
retf
shr
loop
into
iret
lahf
cmp
push
lds
dec
cmp
ins
mov
jb
bound
sub
mov
into
jl
adc
js
into
(bad)
retf
(bad)
scas
mov
cli
pop
push
jnp
mov
imul
pop
xchg
icebp
mov
fsubrp
mov
(bad)
fstp
shr
sbb
xchg
into
sub
ins
loop
add
into
xchg
fldenv
pusha
jno
add
clc
scas
pop
icebp
and
into
pop
pop
dec
or
lea
into
jp
jae
xchg
jne
inc
les
and
add
push
js
cli
cmp
pusha
into
mov
test
cmc
push
xchg
or
sub
retf
jmp
pop
or
ror
das
cld
fild
xlat
push
push
nop
pop
push
shl
sub
sbb
and
jnp
les
into
loope
fwait
jo
test
(bad)
into
inc
pop
sub
mov
sub
push
jg
xor
adc
sub
or
inc
psllw
and
jp
scas
lds
leave
inc
xchg
mov
loop
push
pop
inc
pop
data16
and
movs
out
int
das
loop
add
adc
mov
into
aaa
movs
jno
hlt
test
and
ja
leave
rcl
das
into
mov
test
lods
call
movaps
retf
in
mov
pop
push
rol
lods
mov
rol
movs
test
into
pop
js
dec
inc
sbb
cmp
xlat
inc
jp
test
pop
push
into
out
cmp
pusha
into
sbb
dec
ds
into
dec
mov
in
pop
push
daa
into
retf
add
mov
mov
inc
xchg
sysenter
lea
mov
push
pop
cmc
or
ficom
cmp
repnz
mov
fiadd
mov
xchg
cmps
into
dec
push
sub
xor
add
push
xchg
mov
or
or
mov
xchg
je
dec
adc
sahf
test
mov
ins
mov
into
cmp
jns
and
pop
xchg
je
into
popa
sar
int
xlat
outs
mov
jno
into
dec
ficom
dec
cmp
dec
jae
pop
push
hlt
stos
into
add
or
addr16
inc
add
ret
push
mov
neg
int
add
dec
jge
into
fidiv
test
fwait
mov
push
adc
int3
inc
(bad)
in
fsubr
ror
dec
inc
(bad)
xor
mov
pop
into
jle
xchg
bound
or
inc
lods
fcomp
dec
pop
jecxz
mov
adc
stos
loopne
mov
pop
xlat
int3
into
shr
fcmove
add
push
gs
or
into
test
jl
or
outs
sub
nop
dec
jle
mov
or
movs
pop
mov
jmp
add
xchg
js
aad
inc
sti
les
arpl
mov
shl
lahf
mov
enter
pop
or
jp
mov
aas
pop
xor
into
jge
sti
inc
xchg
rol
out
cmc
imul
lods
sbb
jmp
xchg
cmpxchg
xchg
push
jl
pop
mov
nop
mov
fdiv
pop
pop
ss
or
add
sbb
sub
inc
push
enter
add
aam
repnz
dec
into
pushf
das
in
imul
xchg
int
dec
mov
stc
add
loop
ret
mov
sar
and
in
addr16
in
into
jne
mov
mov
mov
jo
popa
call
add
or
dec
arpl
pop
call
sub
jmp
aas
inc
into
sbb
cwde
xor
dec
leave
iret
aam
inc
pushf
into
mov
pusha
(bad)
jo
out
adc
hlt
push
loopne
sbb
mov
rcl
push
lods
fstp
mov
cwde
mov
(bad)
leave
sub
adc
rcr
mov
(bad)
jecxz
(bad)
mov
das
std
into
xor
(bad)
int
jb
aaa
scas
and
mov
push
mov
dec
aam
(bad)
fcomp
and
pop
xor
dec
mov
into
outs
pop
sbb
test
mov
xor
push
(bad)
sbb
fdivr
mov
cdq
enter
xor
sub
dec
fs
xchg
mov
and
inc
dec
ins
xor
and
aad
adc
addr16
(bad)
mov
ja
xor
dec
sub
stc
and
ss
mov
enter
add
mov
seto
(bad)
cwde
or
(bad)
dec
jmp
pop
sub
sub
into
mov
cmp
into
pop
mov
xchg
pop
pop
add
push
sahf
es
test
mov
jle
xchg
sbb
das
daa
pusha
ret
out
cmp
pusha
pop
xor
pop
adc
iret
push
fdiv
stc
jmp
jl
setle
mov
add
mov
clc
xchg
je
retf
add
dec
rcr
into
push
jae
and
fsub
push
push
mov
outs
ret
jb
into
cmp
inc
xor
push
mov
or
adc
mov
leave
lods
loop
lock
repnz
mov
test
test
leave
fs
and
or
cmp
mov
or
hlt
xchg
mov
icebp
(bad)
jne
inc
sbb
mov
aam
repz
adc
scas
dec
ficom
push
rol
es
in
jmp
mov
add
aad
sbb
out
sti
sub
mov
add
mov
xchg
test
cmp
jae
mov
setbe
(bad)
in
push
dec
adc
dec
cmc
sbb
or
push
jmp
aas
leave
test
cmp
jl
enter
sbb
push
jnp
sub
xchg
or
repz
cmc
sub
sahf
call
push
dec
mov
ds
pop
push
test
mov
mov
or
into
sub
inc
pop
cmp
fwait
mov
mov
mov
sub
sti
cld
mov
lods
sbb
out
gs
idiv
add
mov
dec
inc
jp
jle
dec
jg
dec
es
fldcw
repnz
push
out
lea
push
push
aas
lds
and
mov
xlat
adc
push
sub
and
loopne
sbb
mov
or
and
pop
dec
into
cmp
cmp
xchg
les
lods
add
ficom
xor
or
fbstp
in
jne
dec
and
adc
sub
cmps
fist
mov
cmps
push
cwde
lock
iret
cmp
les
push
into
inc
add
and
jmp
xchg
repnz
mov
shl
dec
ds
inc
lods
cmp
test
dec
and
nop
xor
or
ja
(bad)
in
xor
xlat
fsubr
push
addr16
jne
mov
mov
mov
cmps
mov
mov
int3
and
pop
cmp
rcl
push
loope
push
outs
stos
add
fisttp
xor
or
mov
in
inc
xor
into
mov
adc
sub
lods
push
xchg
jmp
cmp
fdivrp
push
dec
push
(bad)
xchg
and
pushf
frstor
aad
aas
push
ror
lds
xchg
vmaxss
add
jg
fabs
daa
cmc
mov
into
adc
cdq
and
fmul
cmp
cmps
into
sbb
retf
daa
fwait
bound
pushf
movs
cld
or
stos
scas
ja
mov
ss
ficom
in
into
jo
jmp
dec
sbb
ins
mul
scas
mov
ficom
cli
(bad)
pop
sbb
je
push
sbb
fxch
inc
sub
inc
movs
sub
addr16
gs
mov
call
mov
xor
(bad)
(bad)
into
adc
xlat
pusha
dec
pop
(bad)
into
cmc
jnp
cdq
cmps
inc
out
into
repz
fwait
scas
sbb
fild
and
or
push
xchg
xor
sub
(bad)
ja
xchg
into
add
repnz
not
outs
arpl
cmps
fmul
add
test
les
or
(bad)
scas
sub
pop
xor
into
pop
and
cmps
es
iret
add
dec
or
or
scas
cli
inc
jge
sbb
and
ret
aaa
xor
pop
push
xchg
scas
shl
mov
mov
xchg
pop
jb
cs
lock
dec
(bad)
sub
addr16
pusha
movs
mov
sbb
stos
into
sbb
inc
jmp
icebp
mov
xchg
pop
xor
into
call
pop
pop
xchg
scas
jae
bound
mov
jb
das
lds
fdiv
repz
and
mov
(bad)
clc
ds
dec
inc
inc
rcl
fild
iret
jbe
jmp
sti
sar
sahf
push
or
pop
loopne
lods
or
dec
mov
(bad)
pop
xchg
daa
push
xchg
dec
into
cmc
data16
mov
jge
into
gs
push
call
into
push
or
mov
into
call
ins
mov
mov
fucompp
sub
or
pop
pushf
or
mov
fcom
inc
stos
xchg
outs
xchg
jns
cmps
push
ja
fist
pop
xor
cld
jnp
ror
xchg
mov
aad
fdiv
cli
lods
iret
add
out
cmp
xlat
fnsave
ss
sbb
or
out
or
mov
ins
out
push
cmps
leave
mov
push
cld
cmova
cmps
mov
data16
arpl
pop
sbb
les
adc
stc
stos
stos
fidiv
mov
jns
mov
push
jae
(bad)
bound
test
cdq
(bad)
pusha
sbb
mov
dec
pushf
and
and
push
xlat
push
inc
arpl
into
xor
into
ss
add
push
dec
or
retf
push
into
cdq
cmp
adc
mov
push
adc
mov
mov
sbb
call
loopne
push
mov
add
mov
adc
jne
stc
mov
xchg
pop
cdq
ins
outs
movs
in
and
mov
into
push
loopne
test
xchg
lods
xchg
or
in
sti
jge
push
xchg
push
out
pop
aas
mov
pop
daa
bound
dec
cld
lods
fmul
lahf
and
mov
mov
add
retf
shl
shl
into
cmp
cmp
pop
pushf
mov
das
dec
xor
mov
cmp
xchg
adc
sub
retf
mov
sub
cmp
mov
fild
out
(bad)
xchg
data16
loopne
jmp
gs
daa
mov
popf
into
fadd
popa
into
add
les
push
xchg
popa
cmps
movs
fild
mov
xor
(bad)
fs
dec
into
repz
and
(bad)
adc
push
add
leave
push
xor
into
movs
mov
stos
(bad)
into
cmp
inc
hlt
dec
jl
out
xchg
(bad)
into
(bad)
pop
int
pop
adc
lea
lods
pop
cmp
scas
push
sbb
scas
fwait
add
xor
and
lahf
movs
mov
ret
mov
pop
mov
jmp
jbe
nop
push
mov
nop
cmp
retf
mov
dec
and
popf
adc
into
push
mov
xor
into
adc
mov
mov
(bad)
or
xchg
outs
cmp
pop
xor
and
into
sahf
int
jne
xchg
mov
jle
and
inc
(bad)
adc
cwde
ror
jbe
add
je
and
pop
push
mov
into
push
mov
inc
jns
mov
repz
repnz
xor
in
add
push
mov
sub
dec
lods
int3
mov
xlat
into
pop
(bad)
push
adc
ret
mov
or
out
rcr
cli
jp
into
sub
pop
pop
adc
je
xchg
pop
jb
push
test
mov
xchg
and
movs
cwde
out
cmp
into
stos
shl
in
fistp
jmp
mov
jg
into
adc
into
push
mov
inc
ja
xchg
xchg
jle
xchg
adc
jmp
cwde
into
inc
sub
aam
and
(bad)
jmp
ja
fmulp
js
pop
mov
ds
mov
add
mov
adc
into
call
xchg
into
sub
mov
es
add
mov
inc
add
(bad)
fnsave
mov
(bad)
call
retf
pop
cmps
sub
xor
leave
scas
or
gs
mov
jge
je
mov
mov
pop
jae
adc
into
in
ins
and
jge
sub
pop
jno
rcr
into
mov
jo
into
out
retf
stc
jle
test
movs
jne
loope
jg
into
hlt
jbe
outs
mov
movs
into
rol
call
imul
imul
pop
into
inc
dec
lods
scas
pop
cmp
mov
sti
in
ins
je
into
mov
arpl
ficom
add
into
or
sar
mov
mulps
mov
arpl
pop
jmp
cmp
ror
adc
addr16
jnp
xor
lods
push
push
ror
(bad)
jp
push
ins
jmp
sbb
add
adc
cld
dec
pop
dec
out
addr16
mov
icebp
outs
pop
nop
and
cmp
add
shr
push
or
sbb
(bad)
cmp
cld
jae
into
lods
test
jb
out
xchg
fwait
mov
lods
push
inc
into
mov
cs
xchg
ds
fs
aaa
cdq
or
xor
out
into
push
jnp
push
std
ret
rol
push
inc
lods
mov
mov
into
add
xchg
or
jnp
arpl
test
pop
int
int3
and
hlt
cwde
out
ror
add
pop
cmp
lahf
sbb
adc
adc
(bad)
fs
inc
into
xor
mov
fst
dec
xchg
mov
(bad)
or
mov
(bad)
fistp
mov
xor
outs
pushf
in
push
scas
dec
xor
nop
sub
inc
cld
das
xbegin
inc
push
mov
call
outs
out
jns
sub
and
push
xchg
xor
add
test
or
(bad)
pop
ret
ins
jbe
mov
sub
mov
pop
dec
sbb
dec
dec
das
in
push
push
shr
into
les
in
mov
cmp
shl
out
sub
xor
pop
nop
int
mov
push
xor
test
xchg
into
das
mov
into
adc
mov
cmp
into
ja
fnstcw
scas
push
les
push
into
mov
es
add
ins
fcmove
into
retf
fnstsw
stos
(bad)
sub
xchg
sub
inc
movs
inc
pop
cmp
xchg
into
test
sahf
push
jecxz
mov
and
push
repz
xchg
mov
fdiv
and
test
stc
repz
sti
popf
cmp
daa
ins
(bad)
into
sbb
sbb
icebp
pop
cwde
(bad)
jg
sbb
bound
out
add
fimul
jmp
fcmove
ja
lods
mov
loop
stc
jns
rol
in
(bad)
xor
push
call
mov
dec
ins
outs
and
outs
cmp
sub
scas
sbb
rol
mov
into
cs
jbe
movs
ss
mov
bound
mov
push
dec
lods
mov
mov
mov
and
in
fs
test
imul
jg
mov
xchg
add
sub
mov
(bad)
mov
mov
imul
dec
in
add
adc
sti
aas
xchg
jle
jb
loope
les
cmps
es
mov
ror
sbb
mov
fwait
into
jne
mov
pop
aaa
xor
repnz
ins
into
bound
addr16
cmp
loopne
xor
cmp
into
cmc
pmaxub
into
sbb
in
pop
out
loop
fcom
into
xchg
mov
inc
scas
push
in
je
mov
cli
jnp
into
adc
sub
ror
mov
sub
jmp
xchg
packuswb
cmps
loopne
into
movs
sbb
pop
out
ficomp
mov
or
(bad)
mov
xchg
in
lods
jb
jmp
mov
dec
cmps
into
xchg
dec
stos
out
inc
imul
jmp
push
add
call
shr
ror
pop
retf
into
je
sbb
and
and
scas
mov
sbb
fninit
mov
xor
cmp
shl
fs
inc
in
push
push
into
xor
aas
mov
sti
ret
add
into
xchg
call
mov
dec
pop
into
loop
xchg
es
adc
dec
pop
push
or
mov
adc
outs
lods
enter
int
hlt
fs
pop
retf
cmps
jae
into
cli
xor
stos
lds
push
into
ja
jge
sbb
add
into
ret
out
jmp
cdq
fprem1
xor
bound
shr
dec
xchg
movs
adc
mov
(bad)
mov
mov
(bad)
(bad)
mov
add
data16
cmp
cmovnp
and
movs
ja
scas
jg
loopne
pop
lock
div
call
loopne
xor
popa
sbb
mov
addr16
into
pusha
in
mov
daa
cmp
repz
test
add
jmp
cmp
mov
out
dec
into
adc
test
add
cld
cmp
retf
cs
mov
inc
loopne
test
into
sub
sub
shl
stos
int
pushf
imul
inc
xchg
std
lahf
push
into
cdq
(bad)
lea
mov
cmc
ins
mov
xchg
shr
ror
fstp
(bad)
jno
and
test
cmp
xchg
retf
jmp
jmp
leave
into
mov
sti
lahf
cmp
into
ror
pop
pop
icebp
fdivrp
into
inc
inc
outs
jp
mov
clc
into
fucomi
xor
mov
ins
push
xchg
add
movq
clc
mov
imul
into
mov
mov
scas
aas
pushf
xchg
inc
adc
mov
xchg
cmps
inc
stos
fistp
into
xchg
stos
rcl
ins
idiv
lock
std
dec
or
nop
cmps
cli
dec
pop
pushf
into
shl
xchg
push
out
into
int3
(bad)
in
cmps
mov
mov
lods
scas
pop
pushf
inc
add
fsub
dec
lods
fwait
push
test
jl
lods
out
and
ins
into
stos
adc
sub
std
fild
add
daa
aam
pop
sbb
ficom
jns
xchg
out
dec
cwde
nop
xchg
enter
sbb
mov
dec
adc
imul
sub
jnp
sub
inc
push
scas
xchg
int3
fcomip
sub
sbb
push
push
cmps
js
repz
aam
lods
xor
adc
imul
nop
and
out
mov
std
xchg
hlt
pop
push
push
popa
into
mov
lahf
cmp
fisub
or
movs
pop
mov
into
jl
adc
cmp
jmp
xchg
loop
into
mov
mov
pop
into
jecxz
push
xchg
popf
xlat
arpl
into
add
sbb
sti
ss
mov
ret
jmp
push
into
movs
lods
jmp
or
xchg
outs
call
mov
sahf
into
not
sbb
inc
push
imul
jle
inc
xchg
or
movs
pop
jmp
ins
xor
mov
xchg
pandn
sbb
test
mov
pushf
sub
bound
mov
in
into
jo
shr
sbb
shl
sbb
xchg
mov
xchg
sub
pop
stc
dec
(bad)
addr16
pop
ins
into
mov
adc
shl
or
sbb
leave
jg
into
and
es
call
aad
adc
into
arpl
sbb
pusha
stos
push
cmp
bound
popf
into
add
jno
imul
aaa
xor
rol
(bad)
into
inc
mov
shr
mov
out
mov
cmp
mov
aas
shr
xchg
std
inc
out
icebp
mov
fs
push
xor
in
nop
sbb
jns
inc
arpl
xor
jae
into
push
and
jbe
test
cmp
jb
dec
sbb
into
imul
ss
aad
cmps
push
and
into
lods
call
imul
pop
dec
into
push
jmp
xchg
cmp
mov
daa
jo
or
test
es
mov
scas
push
jae
not
mov
cmp
stc
les
into
rol
and
fst
jecxz
test
in
ret
jge
fcomp
add
into
movs
dec
cmc
mov
pop
mov
addr16
lods
xchg
stos
jp
sbb
invlpg
push
ror
int3
es
mov
lea
into
push
scas
repz
je
retf
gs
pop
stc
sub
pop
enter
dec
outs
push
cmp
test
test
or
(bad)
lods
iret
retf
push
cmp
outs
pop
xchg
cmps
add
scas
dec
xchg
lods
stos
and
mov
pmuludq
out
(bad)
outs
in
cmp
into
mov
push
xchg
into
ret
xchg
test
push
push
mov
into
sbb
outs
jmp
into
rcl
or
cli
mul
lahf
inc
(bad)
into
cmp
adc
into
or
push
xor
cdq
mov
je
mov
pop
inc
stos
xchg
popf
and
gs
pop
pusha
pop
rcr
je
mov
add
push
loop
cmp
(bad)
out
cmc
mov
mov
dec
popa
mov
push
test
fcomp
aas
syscall
jo
ja
push
pop
dec
movs
lds
into
and
aad
into
xchg
inc
ss
mov
iret
loopne
xchg
xchg
xor
out
fldln2
xor
into
sbb
(bad)
int
test
mov
mov
shr
into
bound
cmp
ins
sub
into
scas
shl
xchg
stc
out
add
into
sbb
push
adc
jne
loope
cmp
retf
add
or
cwde
into
xchg
int
and
xchg
cld
add
leave
repnz
rcl
into
scas
int
jecxz
out
or
push
cmps
test
je
test
pushf
jmp
ror
cli
mov
mov
call
add
ins
adc
js
into
sbb
xchg
fisub
mov
into
ss
gs
cli
jecxz
scas
pop
cdq
xchg
dec
pop
into
(bad)
loop
sbb
jmp
leave
fs
(bad)
mov
test
mov
out
(bad)
out
jp
ss
fidiv
mov
mov
daa
into
dec
cdq
add
into
aad
fdivr
lea
sub
jo
jmp
cdq
pop
(bad)
fwait
mov
nop
jge
into
ds
(bad)
push
xor
fmulp
arpl
sub
jb
dec
ins
into
mov
mov
cmps
jbe
icebp
mov
dec
loopne
ds
mov
dec
mov
dec
into
mov
xor
into
ret
or
push
jnp
lods
ret
into
mov
gs
mov
mov
pop
stc
mov
and
mov
push
xor
fld
dec
add
mov
mov
(bad)
dec
sbb
cmp
arpl
in
into
or
stos
mov
scas
lds
(bad)
and
mov
aam
inc
inc
jmp
into
pop
cmp
fs
cwde
lods
es
stos
lods
addps
inc
dec
addr16
into
enter
ins
sbb
dec
into
jecxz
ja
shr
mov
test
lock
mov
adc
call
repnz
popf
mov
das
enter
fcom
xchg
cmp
pop
bswap
cmc
cld
pusha
mov
mov
xchg
sti
dec
jmp
push
es
dec
lods
leave
retf
xchg
sbb
sub
pop
add
outs
int
jbe
(bad)
addr16
and
xchg
sub
push
fbld
test
dec
mov
jne
mov
pop
scas
and
imul
inc
into
sub
in
fucomip
(bad)
cli
fadd
mov
stc
add
push
mov
push
mov
(bad)
ss
sub
sbb
jae
sub
inc
imul
out
ss
sub
pop
loopne
mov
fwait
and
into
bound
(bad)
into
mov
mov
xor
aas
mov
into
or
movs
into
adc
test
xor
aaa
nop
div
adc
push
mov
icebp
jp
(bad)
cmp
js
and
fidivr
sub
pop
fs
mov
xor
push
scas
leave
fld
sub
sub
ins
out
sti
pop
xchg
adc
test
outs
mov
push
lods
out
sub
mov
pop
push
adc
std
into
xchg
pop
pusha
xor
dec
fs
into
sbb
ror
(bad)
pop
mov
cmp
out
sub
into
std
or
xor
aad
push
sti
(bad)
stos
jae
(bad)
and
inc
retf
es
into
in
les
mov
sbb
aas
mov
mov
fld
scas
ret
mov
sub
cmps
jo
add
loopne
sbb
or
dec
cmp
hlt
cmps
enter
mov
sub
sub
jg
inc
xchg
inc
xchg
lea
mov
(bad)
add
into
enter
dec
int3
xchg
jle
daa
psrlw
add
sbb
inc
jo
bnd
ret
push
into
lahf
test
dec
push
into
pop
adc
es
(bad)
ror
sti
daa
mov
sub
ss
scas
pop
nop
inc
(bad)
ret
pop
fyl2xp1
scas
pop
mov
sbb
fdivr
dec
test
lahf
ds
mov
mov
adc
xchg
jo
xchg
or
loop
sbb
cmp
sub
jge
add
fld
xlat
jecxz
out
mov
into
mov
not
inc
sbb
aam
pop
lods
push
ss
inc
jb
xlat
fisub
xchg
mov
and
fisub
jp
dec
fwait
cdq
pop
test
(bad)
(bad)
out
retf
push
inc
cs
jecxz
push
or
into
adc
adc
mov
ss
into
cmp
jmp
push
in
mov
pop
jae
sub
push
mov
mov
dec
imul
sub
add
test
xchg
daa
and
mov
clc
out
(bad)
into
dec
or
popf
jle
daa
push
into
push
xor
inc
mov
out
mov
xor
in
dec
into
jb
sub
imul
outs
adc
mov
mov
xor
ss
fdivr
(bad)
into
lock
xchg
data16
inc
test
mov
adc
xlat
sti
scas
rol
repnz
jmp
movs
pop
scas
cmp
sub
lea
ret
pop
add
(bad)
jmp
(bad)
mov
mov
or
adc
cmps
(bad)
mov
mov
into
pop
adc
xlat
rol
into
inc
adc
lds
jmp
mov
sbb
shl
mov
bsf
inc
fnstenv
call
into
movaps
icebp
push
xchg
stos
ins
xchg
xchg
cwde
add
sar
adc
mov
mov
dec
sub
loope
adc
xor
jbe
xchg
in
fisubr
test
mov
sub
mov
jg
test
mov
out
jle
loop
jno
adc
int3
sub
xchg
outs
cmp
jns
jmp
movs
dec
jmp
xchg
inc
cmp
mov
(bad)
jge
jb
inc
and
or
mov
dec
push
cvtps2pd
not
movs
out
retf
call
ror
and
jp
fcmovne
inc
and
push
scas
lods
dec
test
cmp
xor
movs
test
and
pop
mov
fwait
sbb
sub
aam
add
into
out
lahf
inc
add
mov
cmp
ins
push
mov
jmp
out
clc
push
sub
fisttp
pop
mov
mov
in
test
or
into
cmps
sbb
cmp
(bad)
into
lods
aas
stos
fdivr
add
xchg
jno
inc
ror
dec
add
mov
mov
(bad)
(bad)
(bad)
pop
or
out
cmp
daa
mul
push
sbb
dec
mov
stc
movs
fild
add
enter
add
(bad)
ret
out
dec
and
pop
movs
jecxz
into
ret
ja
and
rcr
(bad)
xchg
lods
call
push
mov
push
jmp
sbb
fs
out
hlt
aad
xcrypt-cbc
cmps
xchg
cmps
into
jae
push
xchg
inc
(bad)
into
sub
add
in
mov
icebp
into
cmp
sti
mov
xchg
push
pop
dec
fst
into
and
hlt
fcom
sub
loopne
into
mov
lock
cmps
sahf
xchg
into
outs
stos
jnp
stc
jne
fwait
into
dec
ud2
and
clc
into
addr16
scas
inc
mov
mov
in
xchg
xor
out
pushf
mov
into
pop
sahf
inc
and
sbb
mov
test
xchg
cwde
in
pop
je
retf
repz
neg
shl
sub
nop
movs
iret
xchg
push
xor
call
add
dec
jae
imul
xchg
mov
test
cmps
out
ror
jl
in
daa
std
xchg
imul
xchg
pop
jge
push
xchg
jle
xor
xlat
jg
into
dec
cwde
stos
jo
es
in
arpl
nop
mov
add
xor
cld
adc
sbb
bound
loop
xchg
add
nop
aam
jg
mov
jns
icebp
jecxz
sbb
jnp
jmp
out
test
pop
dec
push
test
mov
in
lahf
pop
fs
sub
xor
xchg
ror
push
pop
dec
out
call
nop
jno
sti
mov
or
inc
sub
mov
shl
test
fimul
scas
into
jp
cmc
popf
fmulp
pop
into
jmp
hlt
adc
mov
jno
in
cmp
shr
mov
xchg
or
aad
xchg
lods
jle
xchg
popa
out
sbb
movs
mov
xchg
rcr
enter
ins
addr16
push
adc
into
mov
bound
into
inc
xchg
ret
fdivr
into
push
and
push
jb
(bad)
inc
sbb
mov
add
retf
stc
fcom
push
dec
into
jae
imul
shr
idiv
lods
mov
mov
into
xor
pop
pop
ins
retf
into
fisub
sbb
dec
xor
add
shr
add
or
add
fucom
jo
mov
xchg
mov
mov
shr
into
cld
movs
jne
mov
movs
into
cvttps2pi
imul
sub
stos
push
mov
in
or
fistp
fisubr
in
pushf
push
cmp
jp
push
jae
push
test
mov
(bad)
xchg
stos
int3
js
dec
jno
(bad)
mov
fs
shr
extrq
jns
sbb
lahf
mov
dec
imul
add
mov
jno
xchg
cmps
ins
ret
icebp
out
lods
xor
jmp
xor
fstp
pop
mov
test
lods
xlat
imul
mov
(bad)
xchg
jl
lahf
ror
sbb
xor
aad
push
call
scas
adc
pop
mov
imul
pop
ins
hlt
xor
into
std
mov
sbb
scas
out
adc
adc
out
pop
in
into
fdiv
and
inc
fs
mov
pop
into
mov
adc
aaa
jmp
pop
jle
lods
dec
repnz
scas
jl
js
scas
out
into
stos
push
xchg
and
or
mov
jg
xchg
fldcw
cmps
pop
xlat
data16
xor
push
jl
mov
ja
stos
sub
popf
mov
pusha
std
push
jle
sub
pushf
mov
sub
outs
push
movs
ja
scas
lods
into
stos
jne
jb
scas
sub
and
cmc
aam
aas
imul
vaddsubpd
add
lods
gs
fstp
ret
in
xchg
ret
es
mov
jge
inc
cmp
mov
cdq
repz
into
pusha
sti
popa
push
(bad)
les
sub
jmp
sub
je
out
daa
(bad)
popf
mov
into
mov
shl
outs
sahf
push
nop
xor
pop
jle
div
mov
das
adc
pop
jp
dec
into
out
mov
repz
sahf
(bad)
in
add
imul
call
dec
mov
mov
(bad)
fs
sub
cmp
(bad)
pop
xchg
into
mov
pop
ret
sahf
scas
stc
loope
add
mov
mov
out
div
xchg
dec
mov
not
dec
lods
pop
lock
dec
nop
test
out
data16
dec
cmp
cmps
cmp
into
add
inc
int3
test
or
arpl
into
leave
push
addr16
test
fs
out
ja
loopne
dec
lea
xchg
xor
(bad)
adc
into
movs
int3
ret
add
jl
pushf
lods
ficom
(bad)
adc
xchg
mov
das
push
movs
test
sbb
(bad)
and
sub
mov
mov
int3
push
scas
push
adc
xor
fmulp
cmp
out
mov
aaa
les
shr
loopne
fwait
outs
dec
or
outs
pop
std
adc
sahf
lahf
test
ds
add
pop
ror
pop
and
sbb
nop
jecxz
outs
add
clc
into
sahf
push
sub
xor
and
sbb
xchg
ja
jmp
pop
pop
mov
into
rcl
test
cmc
dec
push
movs
or
jo
in
push
mov
out
pop
xchg
shl
lods
out
cdq
pop
cmp
into
leave
ins
mov
(bad)
clc
push
fcom
into
test
pop
int
jae
xchg
pop
popa
push
cmps
stos
test
lods
mov
pop
push
inc
or
pop
cmps
int3
pop
push
xor
mov
into
in
sub
mov
lods
out
or
xlat
fcmovbe
sar
addr16
mov
mov
(bad)
push
into
jbe
imul
xor
xor
add
mov
mov
prefetcht1
fldcw
adc
xchg
dec
push
sub
fwait
add
inc
aam
daa
push
test
push
sub
or
and
mov
sbb
mov
test
xchg
mov
rcl
into
jg
movs
mov
stos
mov
xor
sub
pop
into
shl
sbb
into
and
add
jp
in
lods
or
ror
nop
pop
push
dec
gs
mov
into
fild
arpl
xor
and
pop
xchg
data16
sub
jnp
mov
hlt
iret
pop
aam
cmp
add
test
jmp
mov
mov
iret
add
cmp
xchg
in
pop
xor
push
add
into
sahf
fmul
pop
ins
and
into
mov
aas
stos
icebp
mov
xchg
in
sub
or
dec
adc
repz
lahf
leave
fwait
std
dec
mov
pop
xchg
iret
pop
sub
pusha
sub
push
retf
shl
add
dec
inc
into
push
xor
xor
jg
mov
cmp
jne
push
scas
pop
mov
xchg
adc
or
test
pop
scas
mov
into
xor
retf
ficom
xchg
xchg
jg
cs
rcl
cmps
scas
nop
xchg
scas
imul
dec
xchg
adc
popa
movs
loop
xchg
(bad)
mov
prefetcht0
into
fs
mov
into
mov
mov
jle
cld
shr
xchg
inc
rcr
arpl
mov
mov
div
mov
push
retf
(bad)
jecxz
and
cmc
fild
or
sbb
clc
pop
cmp
cwde
je
fisubr
mov
into
lods
(bad)
mov
out
pop
push
into
mov
shr
lea
adc
stc
mov
add
sub
or
mov
xchg
retw
push
or
or
es
inc
imul
add
into
mul
test
fst
sbb
push
imul
xchg
retf
pop
lea
cli
inc
inc
into
add
retf
push
outs
add
dec
aad
loopne
into
fs
jmp
push
out
(bad)
repnz
arpl
pop
push
into
xlat
xchg
lods
mov
in
enter
inc
mov
xchg
jb
rcl
into
ds
jmp
repz
dec
push
jmp
and
inc
xor
shr
aas
dec
mov
in
dec
leave
xchg
sbb
xlat
sbb
fisub
dec
(bad)
jle
push
jb
and
and
cli
out
js
shl
adc
shr
and
xor
dec
mov
neg
ja
call
into
or
repnz
mov
dec
into
fdivr
popf
push
enter
into
aad
retf
shl
ja
into
cmp
sbb
into
ret
fwait
dec
dec
and
lahf
mov
into
xchg
int3
inc
jl
mov
adc
(bad)
pushf
jp
lds
push
into
push
pop
pop
fistp
mov
and
xchg
push
xchg
into
call
adc
loop
test
in
push
imul
pop
dec
inc
adc
into
cmp
jns
repnz
mov
repz
lods
push
add
sbb
xor
or
scas
aam
into
sbb
add
icebp
xlat
into
loope
aaa
cmps
and
in
into
push
sbb
movs
into
mov
rol
(bad)
sbb
jge
pop
mov
int3
mov
xchg
fcmovne
loopne
inc
push
cdq
lods
xor
aas
cmp
push
push
stos
push
fsub
loope
je
(bad)
aam
sti
shl
movs
into
gs
ficom
xor
push
fld
popa
dec
push
aad
push
jnp
cmp
sbb
scas
inc
pop
inc
repnz
lods
mov
xchg
mov
xchg
ret
lock
add
fidivr
outs
repz
jp
into
retf
dec
inc
mov
xchg
add
into
ds
icebp
hlt
mov
lods
vandpd
pop
paddsw
pusha
call
nop
adc
cdq
enter
add
sub
mov
movs
setno
ss
test
xchg
into
out
fucomip
ret
inc
adc
xor
shl
jmp
mov
xchg
dec
in
push
sub
rcl
xchg
rol
movs
loope
or
sbb
jbe
into
retf
mov
(bad)
xlat
into
inc
inc
inc
mov
into
das
aaa
jbe
mov
mov
lock
xlat
push
(bad)
out
dec
test
dec
call
adc
jo
or
xchg
fisubr
stc
sbb
into
lahf
test
jmp
into
fld
pop
dec
scas
mov
mov
aaa
push
fisttp
div
xchg
arpl
lods
fst
aad
sub
sti
push
pop
pop
adc
jmp
jecxz
rcl
test
adc
add
outs
xor
out
les
rcl
xchg
jns
scas
out
pop
mov
iret
sbb
inc
into
xchg
or
mov
sub
pmaddwd
or
into
ret
cld
xchg
pop
inc
not
and
aad
scas
and
imul
mov
inc
into
test
test
into
dec
cmps
mov
(bad)
cs
(bad)
das
mov
push
inc
into
fldl2e
dec
in
jle
adc
into
sub
jno
ja
mov
ds
adc
into
cmove
sbb
scas
sahf
imul
lahf
ja
pop
jg
sbb
(bad)
push
repnz
(bad)
push
outs
mov
add
into
lahf
jecxz
ins
pop
hlt
ja
into
jbe
imul
mov
mov
push
into
je
mov
daa
into
mov
cmps
jp
lods
mov
gs
pop
and
into
or
jmp
retf
into
(bad)
mov
xor
xchg
nop
into
jl
iret
movs
call
ss
jnp
or
in
mov
sbb
cwde
or
pop
inc
scas
fwait
mov
mov
(bad)
addr16
aas
jp
pop
ror
js
xor
inc
xchg
mov
jo
dec
aas
fdivrp
pop
or
sub
cmp
dec
arpl
jnp
add
les
into
movs
xlat
das
jbe
shr
outs
test
retf
ss
mov
dec
pop
push
jns
xchg
into
sub
shr
fisttp
dec
and
out
jbe
into
push
aad
test
xor
popf
into
pop
adc
arpl
fs
adc
jae
jmp
ins
inc
inc
fsubr
cwde
aad
push
dec
xchg
pop
into
xor
or
xchg
sahf
in
ret
shl
sub
into
and
push
sbb
dec
pop
into
adc
ret
mov
ins
into
add
mov
popa
mov
into
loope
or
scas
xchg
sub
into
mov
ja
into
int3
cmp
sbb
jae
jne
test
jb
into
movzx
and
push
fnstenv
lods
mov
(bad)
(bad)
clc
pop
mov
pushf
push
mov
nop
jne
dec
into
cdq
jae
lods
imul
rol
mov
scas
add
jo
(bad)
nop
push
push
into
inc
cmp
mov
and
mov
hlt
retf
mov
cmp
(bad)
mov
fcomp
sbb
dec
mov
popf
xchg
jno
lea
stos
leave
into
in
mov
cmps
gs
mov
jp
dec
cmp
test
mov
dec
mov
stos
xor
mov
movs
in
mov
mov
pop
pop
into
xlat
test
rol
bound
aam
pop
fisubr
retf
mov
pop
clc
into
cmp
jg
mov
pop
pop
mov
push
cmp
sub
jmp
out
into
(bad)
in
fmul
mov
or
das
dec
and
lods
push
fcmove
dec
jmp
scas
(bad)
jae
sahf
scas
arpl
loop
xchg
push
enter
add
inc
ins
or
pop
cli
test
les
pop
add
jno
xchg
fiadd
jl
dec
dec
xor
dec
(bad)
or
pop
push
into
inc
and
pusha
shl
push
into
mov
fld
jmp
lahf
into
mov
rcr
jb
and
in
push
mov
xchg
xchg
seto
stc
xor
mov
into
call
adc
fiadd
in
mov
sti
push
mov
jmp
pop
icebp
jne
js
into
(bad)
test
xchg
mov
push
mov
sbb
add
addr16
mov
out
std
bound
(bad)
jmp
xchg
mul
inc
mov
dec
jg
mov
and
inc
jo
push
into
inc
dec
(bad)
call
inc
call
mov
add
(bad)
out
pop
lods
pop
retf
ss
fxch
loope
inc
add
jo
add
stos
xor
xor
dec
add
into
or
cdq
into
fist
xor
jg
into
inc
call
ins
fisubr
sub
inc
mov
xor
addr16
in
xchg
fs
dec
ficom
into
pushf
aad
sbb
fmul
mov
dec
jb
into
fwait
xlat
add
int
pop
push
into
neg
push
movs
les
dec
into
aas
or
into
xchg
in
mov
or
jno
pop
dec
inc
(bad)
shl
mov
into
out
(bad)
or
adc
mov
(bad)
into
xchg
aaa
cmps
je
xchg
and
into
push
not
psllw
out
into
out
gs
dec
imul
jmp
sti
push
or
js
xchg
cli
mov
into
push
repz
cmps
and
cmp
into
(bad)
inc
ror
xor
test
into
stos
mov
(bad)
sbb
jae
fst
dec
test
(bad)
ss
rol
outs
daa
mov
in
push
cs
cmps
test
sar
into
fwait
stos
imul
inc
push
leave
pop
mov
ret
dec
push
push
(bad)
into
retf
pop
cdq
pop
push
adc
mov
dec
or
jnp
or
inc
mov
popf
int3
push
push
test
into
iret
rcl
in
dec
push
xchg
pop
out
cmp
and
das
mov
mov
mov
into
idiv
push
and
mov
ret
mov
outs
or
xchg
sbb
dec
adc
jmp
mov
int
sbb
cwde
lock
sbb
test
xchg
xchg
xchg
call
xor
ins
imul
shl
lock
jnp
mov
outs
pop
mov
jns
into
xor
push
sbb
aad
into
movs
ret
cmp
cmp
das
sbb
aas
jae
or
mov
ins
jmp
dec
inc
aaa
mov
bswap
cld
sub
rcl
ins
into
(bad)
xor
cmc
lods
(bad)
xlat
ret
out
pop
mov
xchg
and
nop
or
out
inc
into
sar
aas
call
fisttp
mov
jmp
out
push
stos
scas
pop
mov
xor
(bad)
fdiv
or
push
pop
pusha
pop
into
xor
pop
jmp
repz
test
mov
imul
js
pusha
fs
push
lods
ins
bound
mov
mov
jecxz
jnp
setl
inc
sbb
int3
jmp
std
rep
into
cli
add
pusha
stos
neg
pop
mov
les
adc
cmp
and
mov
fimul
test
js
jle
(bad)
enter
cmp
jmp
(bad)
imul
and
repnz
adc
inc
(bad)
test
dec
js
push
retf
into
sub
test
popf
xchg
mov
shl
and
mov
xchg
xchg
out
mov
out
pop
jb
imul
clc
push
mov
scas
popf
call
push
(bad)
dec
xor
icebp
lahf
adc
jge
call
sub
or
xchg
into
mov
pop
pop
shl
fcomp
push
and
and
jl
(bad)
cwde
sub
out
xor
jne
into
xchg
push
or
call
mov
shr
jmp
dec
adc
lods
cmp
outs
(bad)
mov
shr
out
js
sub
(bad)
dec
jno
aas
mov
inc
scas
call
fidivr
into
int3
aad
dec
sub
in
scas
test
mov
inc
dec
xchg
push
stc
fcomp
(bad)
in
mov
aam
adc
adc
ret
fiadd
adc
sbb
and
ds
lods
cmp
dec
clc
jmp
sbb
into
mov
retf
mov
das
dec
outs
mov
sbb
or
leave
test
add
stos
neg
push
in
out
or
outs
je
pop
sub
push
lods
pop
xchg
fimul
jmp
into
ja
outs
mov
into
or
leave
or
cmp
int3
cmp
outs
popf
into
pusha
push
xchg
out
into
test
xor
std
gs
test
sub
inc
into
call
add
xchg
inc
mov
push
lahf
xlat
and
adc
call
(bad)
pop
mov
xor
hlt
dec
scas
xchg
popf
add
aas
fwait
push
and
xchg
inc
pop
into
mov
lods
or
add
and
jge
mov
into
int3
(bad)
xchg
cmc
into
push
(bad)
rol
add
aam
into
vpsubq
sub
jl
into
xor
cmp
mov
aad
lods
cdq
push
inc
mov
into
pop
mov
jl
mov
ret
leave
ds
aad
mov
dec
or
call
shl
inc
(bad)
dec
lds
stc
retf
into
hlt
ror
jecxz
cmp
aaa
into
pop
popf
pop
add
xor
fs
mov
into
or
pop
in
into
jae
dec
lods
xchg
data16
out
dec
mov
into
dec
push
jle
mov
rdtsc
rol
sti
into
sub
ret
lods
rcr
aaa
in
push
into
xchg
push
xlat
and
aad
and
fwait
jns
push
into
out
or
call
lds
cmp
jg
mov
inc
fild
xsave
push
adc
push
jo
pop
and
mov
(bad)
mov
jg
repnz
mov
sti
into
inc
jge
push
retf
push
dec
jne
jmp
cmps
sbb
jae
(bad)
mov
add
loopne
add
rcl
into
ret
push
sub
lods
sahf
cmps
pusha
gs
ror
in
xor
aas
(bad)
jge
sub
outs
(bad)
mov
mov
scas
outs
pop
(bad)
push
xlat
aad
xor
(bad)
xor
inc
aam
outs
xchg
lods
xor
loope
retf
scas
mov
and
sti
mov
stc
push
sub
dec
push
(bad)
out
je
xchg
pop
pushf
arpl
mov
or
shr
aam
test
in
push
out
or
shr
lgs
mov
add
(bad)
into
push
mov
scas
fbstp
es
push
dec
into
inc
popa
pushf
stc
sub
shl
sti
mov
scas
dec
retf
mov
test
sub
pop
into
sbb
sub
xor
fmul
enter
adc
inc
outs
test
test
js
xchg
dec
sbb
add
into
imul
jle
into
cmp
sbb
in
cmp
mov
out
adc
neg
jecxz
or
jle
mov
shl
scas
scas
not
mov
les
inc
and
or
add
mov
popf
jmp
shr
daa
ror
sub
data16
mov
dec
cdq
add
jmp
rcr
dec
jmp
leave
xor
into
aaa
les
xor
enter
mov
add
sub
add
mov
or
and
arpl
xchg
fldenv
push
ins
adc
pop
in
shl
jmp
mov
mov
pop
xchg
pop
ret
sub
mov
into
xchg
fisttp
mov
stc
pop
cmp
scas
adc
fs
aas
and
mov
push
mov
into
loopne
dec
inc
das
into
xchg
bound
xor
or
into
outs
js
scas
adc
hlt
push
into
in
and
mov
addr16
into
push
imul
repnz
push
div
inc
xchg
jne
xor
aad
shr
scas
imul
cdq
dec
sbb
sub
jns
mov
stc
repz
into
jle
sbb
push
into
popa
lea
aam
cmps
mov
popf
pop
inc
mov
les
dec
scas
sbb
jo
xor
enter
add
push
jno
imul
pop
into
gs
sbb
das
pop
in
push
lods
pop
into
mov
push
adc
int
movs
sbb
ror
push
mov
icebp
into
fwait
push
dec
cdq
out
inc
addr16
push
push
enter
pop
cmc
int3
test
mov
cli
sbb
into
push
out
dec
xchg
dec
mov
rol
mov
dec
pop
xor
movs
and
gs
inc
mov
ds
ins
in
and
and
fnstenv
cli
into
repnz
add
retf
push
mov
into
push
test
call
pop
imul
pop
add
stos
inc
out
loope
fidiv
push
pop
push
pop
rol
dec
pop
aaa
stos
into
loopne
mov
lods
out
adc
dec
iret
inc
xchg
push
into
outs
jo
int3
mov
push
cs
outs
lahf
inc
in
dec
stos
xchg
sub
add
dec
add
ins
into
cmp
(bad)
test
jns
popf
imul
lods
rcr
int3
aam
push
ret
sub
outs
or
mov
mov
jge
sbb
(bad)
sbb
inc
sti
mov
add
cmps
jae
into
and
adc
rol
pushf
mov
ror
scas
cmp
retf
push
fcmove
test
adc
pop
jmp
push
into
push
sahf
xor
xor
or
or
or
xor
je
fadd
into
aas
icebp
cmps
push
adc
mov
into
mov
dec
iret
sub
cwde
mov
into
pop
loope
pop
fsubr
cmp
(bad)
add
adc
sub
loopne
into
(bad)
push
push
into
mov
dec
mov
or
cli
into
test
les
mov
jp
jo
mov
inc
xor
(bad)
into
and
dec
sub
(bad)
in
push
sub
cdq
jmp
mov
push
push
out
movs
sar
cmp
jg
fcom
adc
xchg
into
mov
jp
add
nop
pop
je
jae
ins
into
sbb
pop
xlat
dec
xchg
into
xchg
add
or
cmp
mov
adc
cvtps2pi
into
mov
add
test
mov
test
js
pusha
cmps
outs
sbb
mov
es
mov
and
js
or
inc
sub
add
into
inc
push
mov
cmps
cmc
fmulp
cmp
mov
ror
lods
data16
jecxz
fwait
(bad)
cld
add
and
scas
ss
lock
xor
(bad)
inc
mov
pushf
int3
mov
or
fdivr
(bad)
fsubr
mov
(bad)
jp
mov
into
outs
add
daa
retf
mov
xor
dec
mov
mov
out
cmps
sbb
cmp
jae
mov
dec
clc
aas
and
into
stos
jge
test
jns
into
pop
dec
out
jae
aad
sbb
or
and
mov
jmp
mov
push
jg
jp
aas
inc
mov
aaa
mov
out
(bad)
outs
scas
xchg
dec
in
fld
xchg
loop
or
ins
into
popf
ss
fwait
mov
mov
push
jae
arpl
into
add
xchg
xor
mov
fs
lds
(bad)
es
leave
sbb
mov
mov
les
inc
movs
out
test
xchg
ud1
lods
lods
and
out
lds
inc
popa
icebp
aaa
cli
out
test
into
inc
jmp
pop
gs
push
(bad)
daa
(bad)
pop
cmp
into
in
cs
lahf
aas
or
test
test
mov
cmps
mov
into
cdq
mov
or
into
mov
jns
and
loopne
lea
jo
pop
mov
ins
cmp
jnp
jno
or
sbb
iret
test
adc
not
push
in
sbb
pop
out
repnz
jne
push
push
mov
inc
mov
jbe
js
pop
and
test
adc
retf
clc
jne
lea
lods
adc
xchg
into
adc
and
loopne
add
in
out
arpl
xchg
into
div
fsubr
call
fsubr
push
cmp
adc
rol
pop
or
mov
jae
sub
js
sub
pop
pop
repnz
mov
int
repz
dec
rcl
xchg
lea
into
jle
out
lods
aas
in
nop
into
call
ins
mov
into
arpl
data16
loopne
stos
cli
push
rcl
jmp
mov
cmp
je
mov
mov
inc
into
call
mov
and
enter
add
ins
mov
mov
sbb
aad
mov
pop
rcl
into
cmp
jb
mov
into
mov
(bad)
mov
jmp
call
or
push
push
loope
in
cli
out
adc
mov
je
repz
ror
into
(bad)
int3
mov
out
push
nop
xchg
xchg
and
daa
xor
imul
jle
in
mov
into
push
add
je
jbe
mov
adc
les
les
dec
mov
inc
test
mov
adc
scas
xchg
push
out
in
pop
jge
into
sub
pop
ss
push
fcmovne
push
mov
jno
pop
adc
or
or
pop
adc
ja
mov
int3
sar
lods
retf
adc
inc
out
shl
into
es
icebp
retf
cdq
adc
jns
inc
cmps
jmp
mov
jno
sti
ss
jmp
and
ror
imul
mov
lock
xchg
out
push
cdq
fst
retf
lods
sub
sar
jmpw
repnz
mov
scas
mov
or
shr
sbb
mov
aam
cli
aas
nop
popa
fptan
arpl
into
stc
adc
out
inc
jb
dec
xor
popa
xor
into
dec
enter
adc
popf
scas
push
push
add
imul
call
nop
in
ja
pop
sub
aaa
push
cmp
into
adc
mov
pop
into
repz
dec
push
xchg
mov
test
ret
push
das
test
into
(bad)
outs
adc
mov
xor
cli
cwde
push
cmovp
mov
in
cli
into
and
lds
(bad)
aaa
cmp
or
mov
sar
mov
rcl
into
fdiv
in
ficomp
sub
adc
lds
into
inc
jl
inc
pop
cdq
lock
aaa
mov
push
es
ror
out
mov
xor
into
inc
test
rcl
into
jbe
sub
mov
mov
xchg
sub
push
pop
jb
cmc
mov
lahf
dec
mov
mov
outs
xchg
jns
std
mov
mov
dec
ret
inc
aad
push
fs
das
inc
mov
inc
into
dec
fadd
cs
fs
pushf
(bad)
into
retf
mov
into
es
fiadd
dec
lods
xchg
push
cmc
sub
and
and
mov
xor
mov
aaa
dec
mov
xchg
test
pop
and
push
lahf
lds
shr
setp
lock
leave
xor
adc
add
test
test
fisub
scas
inc
xor
or
sahf
dec
mov
xor
xchg
jecxz
push
fmul
neg
es
dec
nop
and
cs
imul
xchg
cmps
into
(bad)
movs
retf
nop
in
dec
into
adc
inc
push
in
sub
push
xor
adc
leave
outs
movs
jg
xchg
call
mov
repnz
mov
into
xchg
push
pop
aas
into
cmc
mov
cs
lods
fld
leave
jge
out
add
cli
mov
inc
pop
movs
lods
mov
xchg
sub
movs
xchg
mov
pop
cld
sub
ficom
call
cmp
out
jae
arpl
call
and
and
mov
xchg
stos
mov
xchg
test
cmc
pop
outs
xor
cwde
dec
mov
fimul
mov
mov
outs
adc
cmp
xchg
xor
mov
mov
into
mov
neg
(bad)
shr
into
out
cmps
mov
sub
inc
jns
into
jb
call
pop
inc
dec
(bad)
loopne
out
push
jae
mov
gs
add
pop
and
push
addr16
or
pushf
or
fucomip
in
into
push
sbb
sub
mov
push
pop
into
test
dec
dec
loopne
call
fucom
mov
adc
mov
xor
sub
fistp
xchg
xchg
scas
pop
xchg
call
fstp
fisub
into
iret
(bad)
xchg
pushf
jmp
mov
sbb
into
and
xchg
push
into
sub
cmp
sbb
(bad)
pop
add
nop
je
int
xchg
mov
mov
sbb
(bad)
(bad)
push
into
xchg
or
dec
pop
into
lods
imul
mov
(bad)
push
scas
mov
inc
data16
push
out
(bad)
stos
fdivr
enter
in
call
sbb
mov
inc
mov
fistp
mov
call
dec
mov
popf
xchg
retf
add
cmp
int
and
push
aaa
test
inc
into
shr
xchg
push
xchg
adc
loopne
fimul
(bad)
push
cli
mov
outs
in
loope
cld
sub
push
lahf
and
xchg
fisub
out
jb
add
je
xchg
test
into
xchg
and
and
adc
into
push
inc
out
jp
data16
(bad)
loopne
xchg
outs
imul
jmp
mov
out
in
ins
jp
test
(bad)
(bad)
test
push
dec
mov
into
xchg
cmps
jle
add
(bad)
mov
into
outs
sbb
ret
es
fistp
pop
sub
and
sbb
and
movs
sub
pop
mov
das
xchg
pop
outs
sub
jbe
rol
sub
xchg
pop
sub
mov
je
mov
pop
sahf
mov
enter
xchg
fmulp
jb
mov
stc
into
aas
or
or
outs
into
or
sub
cmp
sub
icebp
mov
jno
les
pop
inc
cwde
sub
or
push
pop
scas
pop
loopne
(bad)
aam
dec
daa
xor
into
std
lods
xchg
pushf
adc
jp
loope
sub
fcomp
stos
repnz
inc
shl
xor
mov
xchg
adc
icebp
aam
mov
stos
inc
(bad)
jecxz
mov
mov
ins
test
fnstsw
push
out
leave
into
pop
rcl
sti
test
retf
push
(bad)
mov
lea
dec
dec
sbb
add
movs
lahf
cli
aad
into
cwde
call
push
fild
fdiv
shr
jo
ds
test
jmp
cmp
jmp
fdivr
xchg
into
pop
sbb
dec
fs
into
push
add
xchg
push
stos
cmp
imul
pop
add
rol
ds
inc
mov
pop
fs
cmp
into
push
and
sub
mov
into
cmc
std
sahf
popf
mov
xchg
and
stc
test
test
and
push
jno
sub
jle
dec
test
add
pop
pusha
leave
xchg
mov
test
pop
or
mov
out
push
adc
xor
and
lods
out
jg
pushf
ss
aad
mov
add
outs
push
test
and
mov
dec
loopne
mov
out
into
scas
(bad)
nop
mov
sbb
xor
push
pop
pushf
xor
into
loope
mov
push
jmp
cli
popf
sub
dec
push
pop
into
push
es
div
(bad)
into
out
test
sub
cmp
leave
into
push
pop
stc
ins
and
dec
data16
mov
aaa
push
add
test
mov
lods
xor
sbb
push
data16
mov
lods
add
mov
fst
movs
xor
std
das
ret
inc
ret
pop
adc
call
cmp
ins
loope
into
repnz
push
xchg
mov
inc
jns
into
lds
or
into
imul
(bad)
dec
xor
scas
mov
repz
lods
pop
jge
jmp
push
sar
repnz
pop
movs
fcom
push
sub
sar
clc
jb
in
fwait
rol
into
inc
retf
push
int
rol
test
dec
out
inc
mov
aam
fneni(8087
in
cmp
fsubrp
or
stc
xor
push
jne
inc
into
jecxz
mov
loope
arpl
into
mov
mov
outs
hlt
fucomi
push
jl
test
imul
xchg
pushf
push
inc
into
jecxz
out
cmp
es
mov
jno
push
jg
jmp
rcr
cld
outs
outs
mov
push
mov
xor
push
xchg
and
add
fisttp
or
into
xor
ror
xchg
push
stc
xor
add
lods
sub
dec
ret
inc
out
adc
jo
stos
xor
dec
dec
pop
or
sti
dec
cdq
sbb
adc
sbb
es
scas
lea
xchg
daa
mov
into
jns
add
inc
add
repnz
ret
push
aam
inc
into
mov
outs
pop
lods
adc
cmp
mov
sar
ja
dec
stc
(bad)
test
(bad)
bound
into
call
lahf
retf
mov
jle
out
das
shl
sysexit
(bad)
push
movs
nop
sub
cmp
xchg
dec
or
adc
inc
lods
dec
xchg
in
pop
lock
mov
fs
loope
fld
push
outs
into
sub
inc
(bad)
and
add
out
les
lods
(bad)
cmp
scas
ret
xchg
jo
or
imul
and
lahf
(bad)
xor
fisub
or
push
mov
jmp
fwait
push
or
xchg
daa
ror
push
sub
xchg
outs
dec
pause
adc
int
dec
shl
jno
into
(bad)
sub
into
gs
out
arpl
mov
mov
mul
test
inc
sub
cmc
cmp
dec
into
repnz
fdiv
and
or
in
lock
xchg
jno
pop
xor
push
sar
jbe
push
mov
xchg
jge
mul
leave
cmp
add
(bad)
push
test
sub
pop
mov
shr
fadd
sbb
and
repz
into
sbb
pop
pop
into
inc
xchg
cmps
cmp
dec
dec
scas
aad
mov
out
mov
faddp
xchg
push
cdq
into
lahf
aam
mov
sbb
push
lock
push
jmp
push
cmp
dec
(bad)
aas
xchg
jle
into
loopne
cld
rcr
test
sub
jg
sbb
icebp
(bad)
popf
dec
push
loop
dec
push
retf
xchg
sbb
retf
test
jnp
into
and
aad
lods
(bad)
mov
xchg
(bad)
mov
pop
or
int3
div
lds
idiv
adc
(bad)
jge
iret
leave
aam
xchg
(bad)
push
dec
into
daa
sub
(bad)
data16
cli
into
mov
mov
adc
idiv
mov
fimul
loop
arpl
mov
dec
adc
bound
idiv
mov
or
ins
xor
mov
adc
mov
into
jno
cmp
into
push
jl
ret
(bad)
push
mov
lahf
test
xor
mov
jnp
mov
or
mov
pop
ja
js
fwait
push
into
je
out
push
into
mov
test
aas
xchg
push
push
inc
retf
into
cs
shl
int3
(bad)
not
fld1
jnp
xor
jl
into
lahf
inc
cmp
ret
ds
adc
or
mov
dec
adc
out
lds
cmp
fld
sub
xlat
into
xchg
mov
mov
pcmpeqw
dec
call
adc
add
add
enter
test
and
into
cmp
in
cmp
sbb
fwait
or
loope
push
push
(bad)
jno
ffreep
pop
aas
or
cmp
(bad)
pop
inc
out
ret
into
shr
dec
push
add
ja
into
mov
iret
mov
pop
sti
aas
mov
fs
fbld
jb
or
inc
inc
popa
(bad)
push
into
je
sti
adc
xchg
into
inc
outs
or
into
and
js
mov
aam
cmp
add
into
xchg
(bad)
xchg
aaa
inc
mov
dec
scas
fisttp
fcmovnbe
dec
repz
setns
lods
loop
idiv
jns
(bad)
in
push
lods
mov
inc
pop
jg
sbb
emms
xchg
scas
addr16
add
jns
rcl
jno
xchg
and
outs
into
and
mov
into
xchg
push
jb
stos
out
into
mov
fdivr
into
cld
push
sub
(bad)
ins
std
or
cmp
int3
gs
jle
mov
ins
sub
into
repnz
mov
stos
into
je
xor
ds
scas
lock
mov
cmps
outs
cmps
into
cwde
movs
in
inc
add
dec
stos
fadd
adc
hlt
rcr
mov
sar
mov
sub
pop
jmp
shr
jg
repz
into
xlat
sti
cmp
popf
jg
add
into
movs
push
shr
mov
jl
popf
(bad)
(bad)
int3
and
mov
in
push
push
(bad)
in
arpl
xchg
dec
sub
das
push
lods
fstp
scas
fcomip
loop
and
fst
mov
imul
adc
pop
sti
cwde
into
dec
loopne
out
sub
into
inc
push
ins
jb
int3
cmp
mov
and
adc
dec
call
and
lar
stos
stos
lods
cmp
mov
or
mov
pop
or
mov
mov
sbb
ja
sahf
into
cmp
xchg
das
mov
into
in
jmp
and
or
lahf
addr16
ja
jb
sahf
enter
mov
stos
into
xor
sub
mov
outs
pop
dec
adc
rcl
das
cs
sbb
xchg
add
dec
stc
dec
(bad)
daa
ja
aam
jno
retf
xchg
and
test
stc
test
dec
into
shl
into
add
mov
into
(bad)
cmps
or
or
lods
into
xchg
ds
mov
sbb
mov
mov
fst
dec
lods
cmp
xor
out
mov
aaa
mov
mov
call
or
add
xchg
clc
test
push
jae
xor
push
into
push
mov
fidivr
loop
sub
jmp
stos
jmp
ds
dec
jno
jmp
pushf
cmp
xchg
sub
xor
imul
push
mov
into
sub
mov
jecxz
xchg
mov
add
out
jg
rol
(bad)
test
mov
cmovg
ficom
lods
into
mov
popf
mov
and
inc
add
fnstsw
or
jge
jno
push
sbb
into
adc
pushf
mov
xchg
fs
xchg
cdq
lods
xor
outs
dec
mov
jb
mov
sbb
(bad)
inc
retf
adc
into
ins
pop
cld
dec
aas
pop
std
xchg
mov
add
jge
sbb
js
xchg
lods
cmp
cmc
bound
lods
xchg
lahf
into
imul
aad
mov
into
push
call
cmp
das
sbb
daa
into
int
push
fwait
ret
stos
test
in
aaa
jno
icebp
sbb
xchg
and
jmp
adc
pop
pop
into
inc
cmp
stc
nop
popa
out
mov
xchg
test
cdq
das
leave
sub
aas
into
add
jnp
popa
repz
into
sbb
into
push
cmp
cmp
push
mov
into
or
int
add
dec
test
mov
(bad)
into
add
mov
aad
mov
or
or
rcl
add
mov
fbstp
adc
fs
or
mov
movs
fstp
into
xchg
js
inc
push
loop
mov
jmp
std
sbb
dec
loopne
mov
inc
mov
stos
jp
ret
mov
dec
xchg
icebp
mul
dec
xchg
xchg
movups
into
outs
retf
add
cld
fcomp
add
push
mov
adc
inc
xor
xchg
imul
mov
mov
mov
cli
scas
xor
fidiv
cmp
test
into
popf
fist
pop
iret
out
push
into
sahf
or
ftst
ret
sub
ss
into
cmp
hlt
aas
jp
ret
mov
dec
or
addr16
mov
or
lods
stos
gs
imul
mov
aam
into
mov
push
mov
adc
dec
push
jle
mov
and
push
dec
outs
loopne
fld
aas
ret
sti
in
in
(bad)
cmp
daa
cmp
pusha
inc
into
jbe
cmps
or
into
mov
sti
popa
or
xchg
rcr
(bad)
pop
mov
scas
int3
jo
xchg
cwde
mov
repz
pop
xor
rcr
jmp
mov
adc
add
aam
xchg
in
sbb
sbb
push
xor
dec
fdiv
into
out
or
movs
jp
sbb
sar
icebp
adc
into
ds
sub
(bad)
push
xchg
and
popa
pop
sbb
jae
(bad)
xchg
xlat
and
fucomp
movs
cmps
test
mov
ins
imul
test
fmul
icebp
push
add
popf
mov
ret
pop
dec
push
call
ins
mov
push
jbe
mov
leave
mov
adc
into
lahf
je
push
push
push
mov
jns
lods
cmps
ds
test
fisubr
stc
inc
or
loop
pop
psraw
jp
into
xor
movs
push
pop
(bad)
jmp
into
sub
sar
lods
jno
(bad)
and
aad
(bad)
sub
cmp
xor
in
inc
pop
push
push
mov
and
ins
stos
into
jl
out
or
sub
xchg
dec
dec
lahf
ror
xor
into
or
inc
mov
shl
push
mov
sub
ins
mov
inc
into
fstp
jge
mov
mov
sti
lods
xchg
mov
push
loop
scas
ret
aas
sbb
repz
mov
mov
lds
scas
pop
xchg
cmp
imul
ss
jge
jno
xchg
sub
inc
jb
xor
shr
es
out
outs
lods
fbld
(bad)
out
cli
stos
and
and
dec
push
out
ror
icebp
lock
pushf
into
cmps
dec
bound
imul
into
ror
cwde
jnp
cdq
into
push
scas
jmp
fldcw
xor
mov
jns
sub
xor
outs
stc
xchg
jb
sub
jle
dec
loop
or
pushf
loop
or
out
das
into
push
cwde
push
sub
(bad)
mov
push
mov
mov
sahf
jbe
push
in
inc
xchg
push
into
dec
jl
ret
ins
jne
sbb
int
arpl
xor
addr16
fstp
gs
sahf
cmp
into
(bad)
adc
sti
mov
into
and
pop
shr
cwde
and
into
push
push
mov
cwde
inc
lods
ret
icebp
jecxz
in
sar
inc
lock
push
out
lods
mov
movs
hlt
popf
enter
jp
mov
xor
in
loope
add
sub
loopne
push
jl
into
cli
or
pusha
add
lock
rcl
adc
jmp
or
mov
dec
nop
fsubr
add
mov
add
imul
sub
cmp
ror
ffreep
pop
lods
scas
ror
cmps
in
and
inc
das
jmp
les
fucomp
test
addr16
mov
ins
cmp
scas
mov
stos
xor
and
push
or
(bad)
mov
dec
ins
test
add
loope
mov
sub
inc
xor
xchg
dec
lods
or
mov
mov
into
test
shl
out
xchg
into
stos
or
fs
ror
fbld
aaa
sti
into
retf
sbb
or
xchg
xchg
mov
into
int3
mov
xchg
sub
hlt
into
xchg
add
add
cmps
fsub
xor
adc
sub
out
leave
mov
cmp
cmp
scas
and
ret
dec
test
lea
fisttp
or
mov
out
test
push
scas
jecxz
xor
add
pop
ror
into
sbb
lock
into
cmps
lds
fsubr
in
mov
xor
into
jo
shr
lock
pop
mov
mov
mov
cmp
(bad)
add
nop
cs
es
gs
add
xchg
(bad)
adc
jnp
leave
into
push
imul
das
clc
shl
adc
(bad)
push
mov
inc
jmp
je
(bad)
div
out
fsub
sbb
sbb
into
test
mov
loop
and
mov
into
ja
lock
fist
adc
or
mov
into
dec
push
mov
pop
mov
clc
mov
je
in
into
mov
in
ret
mov
nop
int
cmps
jo
leave
pop
cs
mov
movs
pop
stc
mov
inc
mov
mov
and
xchg
arpl
stos
lods
sub
scas
mov
or
adc
into
and
inc
cmp
addr16
pop
test
cs
sahf
lahf
sub
xor
stos
push
adc
imul
mov
pop
(bad)
jbe
fdiv
cmp
pminub
and
pop
jno
scas
jg
lock
pop
lods
ja
add
hlt
pop
outs
mov
into
dec
stc
sbb
dec
jecxz
sub
jle
int3
fcomp
and
out
mov
jge
mov
into
stos
inc
push
jmp
lods
aas
inc
push
into
imul
push
scas
adc
inc
inc
mov
ret
into
pop
pop
cmp
sti
push
lods
mov
(bad)
mov
mov
sub
jnp
sub
mov
into
dec
adc
mov
call
fsub
repz
test
push
fchs
mov
inc
popa
push
pop
fbld
into
sub
lods
(bad)
sahf
mov
ror
shl
into
mul
mov
or
into
sar
ins
and
das
jno
jmp
inc
rcl
into
xchg
inc
in
adc
cdq
into
sub
test
data16
out
xor
sub
mov
jb
in
scas
(bad)
jecxz
dec
out
cld
pop
hlt
ds
scas
ss
pop
stos
into
xor
das
repz
inc
stos
int3
out
shl
adc
pop
pusha
lds
jnp
jg
adc
repz
xchg
inc
xchg
jecxz
xlat
dec
xor
cmp
add
into
mov
or
into
pop
mov
jmp
or
pop
std
inc
scas
inc
lock
cmp
outs
repnz
shl
push
dec
(bad)
mov
into
ss
inc
xor
inc
sub
cmp
jns
push
leave
in
into
push
mov
aaa
ret
into
test
(bad)
xlat
fnstenv
lods
jb
cmp
stos
movs
pop
sbb
fwait
mov
xchg
imul
jle
xchg
pop
ficom
into
add
jne
out
(bad)
adc
sub
mov
shl
xor
or
into
mov
jmp
mov
xchg
sub
(bad)
int3
mov
fwait
mov
ins
test
fmul
or
call
jne
test
push
cmc
movs
cli
push
out
cs
jge
(bad)
and
mov
and
jne
pop
movs
fwait
mov
inc
out
push
arpl
test
adc
into
push
jmp
pop
shl
mov
xchg
pop
arpl
neg
ret
pop
mov
test
fsub
xlat
inc
test
mov
mov
inc
(bad)
iret
arpl
sub
outs
pop
ja
cmp
sbb
cmp
repz
imul
icebp
sti
fadd
mov
xchg
daa
daa
adc
lods
ds
pop
inc
ja
imul
into
pop
mov
adc
into
dec
xchg
xchg
inc
ins
bound
mov
das
xlat
hlt
jb
movs
aam
into
cmp
out
dec
push
pop
into
lods
mov
cmp
push
xchg
into
sbb
add
push
(bad)
jmp
xor
pop
and
into
pop
int3
jmp
cmp
sub
and
fld
xchg
ins
rcr
cs
cmp
adc
call
inc
shl
into
add
mov
je
shr
test
aam
mov
bswap
sub
(bad)
into
mov
sbb
mov
sub
ret
test
push
pop
lods
inc
add
cmp
cs
cld
pop
(bad)
in
repnz
adc
xor
mov
sti
into
mov
and
loop
jae
and
out
movs
lods
fwait
into
jmp
movs
xchg
mov
dec
test
jo
xor
leave
retf
and
movs
lods
fnstsw
jge
pop
add
stos
shl
pop
into
pushf
cmp
add
movs
sti
dec
sub
(bad)
outs
xor
inc
ins
into
dec
call
das
sub
mov
not
dec
into
cmp
loopne
mov
jbe
sar
push
scas
into
iret
clc
cdq
xchg
pop
push
sub
into
xor
and
sub
jns
sub
mov
into
leave
inc
clc
jle
int
sub
cli
aam
dec
shr
out
ret
xchg
aam
test
cli
sbb
aas
in
jns
mov
or
cmpps
pusha
add
add
and
jp
adc
dec
into
mov
push
pop
ror
(bad)
add
xor
ins
sub
sbb
stos
imul
push
test
hlt
mov
lods
add
fld
mov
dec
cld
cmp
in
retf
stos
ins
icebp
std
into
add
xlat
xchg
sub
aaa
push
test
nop
and
pop
jno
repz
retw
scas
pop
leave
dec
fidivr
(bad)
test
adc
outs
add
lods
inc
sub
xchg
in
je
ror
adc
aaa
loop
mov
into
aas
xor
into
hlt
xchg
inc
push
fadd
mov
mov
bswap
mov
mov
data16
sti
test
shr
or
sbb
sahf
out
into
or
xchg
xor
add
into
sbb
push
jmp
cld
not
vandnps
aad
lods
jmp
inc
rcr
mov
mov
shl
mov
cmp
inc
pop
test
mov
push
jo
add
into
sub
xchg
or
xchg
adc
mov
push
into
test
leave
xchg
call
sbb
fs
add
adc
outs
jae
rcl
test
mov
popf
cmp
inc
rcr
into
sbb
dec
mov
test
pop
or
dec
adc
(bad)
retf
into
lea
pop
(bad)
mov
out
xor
test
pop
jl
std
jne
xchg
clc
icebp
mul
mov
jbe
test
dec
mov
adc
xor
shr
pop
cwde
inc
loop
into
sti
jo
add
(bad)
into
test
out
mov
in
xor
mov
ror
sti
(bad)
pop
retf
arpl
mov
mov
or
dec
fcomp
or
sub
dec
lea
btc
xor
ins
jae
js
xchg
sbb
test
or
iret
stos
aas
xchg
jecxz
in
aam
ins
mov
mov
dec
test
mov
aas
icebp
rcr
inc
stc
sbb
pop
sbb
ret
ret
repnz
into
cmp
lock
pop
mov
jge
stos
nop
or
jl
into
aas
mov
mov
test
jbe
into
out
sbb
fs
sbb
mov
push
fimul
popa
lods
jmp
jo
das
mov
cmp
dec
jg
aas
not
sbb
fst
cdq
scas
sar
lahf
lods
xchg
lods
xchg
dec
xor
mov
or
dec
dec
cmp
ficom
or
out
lods
loope
mov
cli
lea
and
mov
aas
iret
mov
jo
(bad)
jl
dec
ins
fisubr
sub
aam
push
sbb
daa
mov
add
out
xchg
xor
pop
aam
cmp
stos
add
in
jmp
lods
add
or
ds
add
test
mov
pop
pop
jne
jb
into
call
mov
pop
xor
mov
xchg
retf
inc
scas
xchg
sbb
into
sub
std
cld
adc
and
das
ss
je
movs
imul
mov
adc
mov
(bad)
sti
scas
jecxz
xchg
loope
mov
repnz
push
add
mov
sti
add
neg
sbb
cs
sub
fnstsw
cdq
retf
into
inc
aaa
or
add
(bad)
into
fs
neg
sub
jae
iret
dec
or
(bad)
and
mov
sub
xor
ror
shr
hlt
and
sbb
sti
imul
into
pop
lods
fidiv
shl
pop
or
adc
mov
ja
data16
jbe
test
lock
and
mov
cmp
dec
(bad)
jne
hlt
dec
xchg
into
push
dec
outs
push
cmp
xchg
into
add
inc
pop
mov
sub
into
mov
cwde
into
push
loop
xor
xchg
into
adc
shl
movs
mov
loope
movs
xor
nop
outs
pop
enter
sub
xor
and
push
aam
or
sbb
lods
mov
fdivr
outs
retf
pop
mov
jbe
out
sar
mov
enter
mov
push
jb
pusha
arpl
into
jmp
xchg
stos
lahf
in
push
or
or
into
mov
stc
mov
lods
sbb
pusha
pop
jp
xchg
into
fisubr
add
xchg
outs
imul
out
ins
nop
fldz
xchg
pop
rol
test
into
add
shr
xchg
scas
jnp
mov
cli
dec
(bad)
into
xchg
mov
rol
cmp
into
push
adc
leave
jae
or
xor
xchg
xor
lahf
xlat
mov
sub
xlat
into
or
sub
aaa
sbb
outs
into
cwde
or
inc
bound
test
push
mov
jo
pop
(bad)
out
push
mov
std
sti
cmp
clc
lods
mov
stc
dec
test
das
scas
add
push
and
into
pop
adc
pop
dec
mov
inc
push
retf
aaa
shl
les
fs
fwait
cmp
cmps
iret
shr
test
getsec
into
sub
(bad)
mov
inc
dec
ds
test
into
jg
(bad)
mov
movs
fmul
daa
pop
into
dec
int3
push
test
push
scas
dec
jp
pop
inc
into
ins
mov
in
hlt
je
into
out
jl
xchg
cld
or
inc
jns
add
int
scas
pop
dec
add
loop
mov
ret
xchg
mov
mov
stos
dec
call
sub
mov
cvttps2pi
jno
(bad)
or
jp
mov
adc
pop
add
fisub
xor
push
imul
jle
in
inc
cdq
fcom
mov
(bad)
fnstcw
div
sbb
fnsave
arpl
jno
xchg
push
scas
mov
jns
aaa
iret
sar
call
adc
dec
xchg
or
cli
mov
mov
je
inc
into
dec
cmp
test
sbb
into
daa
gs
aam
neg
push
cmp
into
push
dec
stos
cdq
shl
jne
jo
add
aad
adc
dec
mov
xchg
lahf
ss
into
and
dec
icebp
pop
mov
std
pop
pop
into
inc
mov
mov
lods
dec
and
xchg
ucomiss
mov
fs
shl
adc
jecxz
retf
out
outs
popa
or
cmp
add
in
into
not
mov
push
jecxz
fmulp
adc
sbb
out
jp
mov
into
retf
push
push
out
cmp
into
jg
iret
mov
nop
stos
jmp
sub
mov
add
int
in
xlat
gs
inc
xchg
xchg
cmc
inc
test
retf
outs
mov
jno
into
inc
shl
jae
push
fstp
into
aas
xchg
add
push
outs
loope
push
std
stos
push
setae
ins
dec
pop
xor
jp
xchg
bswap
mov
movs
sub
mov
mov
push
inc
shr
sahf
rcr
ror
js
retf
cmp
xchg
pop
dec
sub
add
cmp
lahf
loop
data16
jge
movs
and
lods
mov
fs
into
add
jb
ret
cmp
scas
inc
jae
push
stos
mov
mov
inc
dec
call
pop
retf
add
fcom
mov
cli
popa
out
xchg
push
scas
pop
add
call
dec
mov
dec
xor
dec
ins
in
adc
add
into
lods
icebp
fwait
sbb
mov
dec
mov
into
movs
jg
dec
test
stc
pop
into
sub
retf
mov
fcomip
lea
shl
adc
and
in
xor
into
mov
push
inc
pop
xchg
fsub
aam
sbb
jp
mov
xchg
movd
adc
pushf
lods
push
mov
dec
cdq
pop
std
into
xor
and
mov
push
(bad)
pavgw
dec
jnp
push
push
lods
lods
fiadd
std
adc
dec
and
loop
test
test
addr16
dec
icebp
ret
(bad)
mov
jnp
nop
adc
pop
cmp
das
mov
add
xchg
mov
out
xor
and
mov
retf
or
sub
dec
into
jne
test
mov
mov
and
and
hlt
push
int3
into
or
sbb
(bad)
js
imul
ds
ins
inc
jb
clc
mov
stc
mul
inc
mov
lea
je
pop
into
bound
cwde
push
xor
test
cmps
shl
ins
mov
sar
dec
lahf
jnp
jnp
test
scas
add
sub
rcr
dec
mov
jmp
dec
iret
xor
bound
into
(bad)
aad
int
mov
cld
mov
dec
sub
dec
dec
xor
les
cmp
xchg
jmp
pop
and
cmp
into
push
out
jno
adc
into
inc
bound
push
xchg
dec
out
xor
into
mov
test
xorps
mov
inc
inc
jle
fst
pusha
cs
add
inc
xchg
mov
stos
je
out
rcl
jle
retf
adc
xor
cmps
(bad)
pop
lods
jecxz
mov
into
jbe
dec
ret
mov
into
sbb
and
enter
sub
repz
sub
jmp
sbb
mov
lock
into
jne
cmp
cmp
enter
xor
(bad)
(bad)
xchg
inc
nop
xchg
or
imul
lods
ret
or
loope
out
daa
cmp
sub
(bad)
dec
vminpd
push
inc
enter
das
loopne
mov
or
adc
hlt
lods
into
les
pop
or
xor
add
addr16
mov
outs
mov
xchg
add
mov
and
adc
into
sbb
push
or
jg
inc
xchg
mov
aas
dec
mov
adc
fst
test
ss
or
sbb
and
mov
outs
stos
push
push
sub
and
div
push
into
adc
dec
movs
sbb
mov
arpl
add
bnd
sub
into
sar
lds
mov
mov
jmp
into
int3
rol
mov
mov
shl
nop
dec
dec
arpl
scas
or
shr
mov
xchg
adc
mov
gs
movs
daa
jmp
fldcw
loop
into
add
and
and
(bad)
out
or
test
mov
mov
or
into
xchg
xchg
cmp
inc
ins
or
pop
je
mov
adc
stos
pop
fsub
mov
clc
sbb
xor
js
bound
fucomp
push
aad
mov
gs
out
mov
sub
retf
jp
fidiv
sub
into
sub
dec
and
movs
je
cmp
ret
mov
pop
cmps
sub
(bad)
dec
inc
aaa
into
mov
adc
mov
fist
into
dec
cmps
cmp
inc
mov
stc
push
push
push
in
into
xor
jge
movs
ret
jmp
cdq
dec
iret
sub
(bad)
(bad)
in
push
cmp
stc
add
ins
mov
fdivr
leave
aam
fiadd
out
xchg
xor
or
popf
in
jecxz
jnp
pop
lods
push
movs
push
cmps
inc
int
adc
out
test
mov
sbb
lahf
hlt
inc
into
adc
mov
xor
mov
fwait
sbb
mov
mov
push
into
fistp
mov
jg
push
scas
add
and
xchg
lds
ss
std
ds
dec
mov
in
and
mov
sub
fdivr
fxch
and
pop
nop
jno
rol
sub
xlat
enter
into
xchg
add
in
or
dec
outs
mov
sub
(bad)
lock
iret
jg
and
mov
ds
xor
test
cmps
mov
mov
dec
movs
scas
dec
xor
out
add
aam
std
arpl
mov
nop
sub
cli
into
xchg
add
or
into
inc
mov
pop
jmp
ret
or
cmps
(bad)
loop
into
fsubr
inc
and
mov
mov
pop
sub
add
into
mov
jnp
push
cmc
cmps
fcmovne
xchg
mov
fwait
aaa
into
and
movs
das
fs
clc
pop
mov
neg
call
sub
into
pop
or
cmp
xor
xor
gs
push
out
fisttp
outs
aaa
push
cmps
xchg
push
movs
lds
dec
leave
jne
nop
scas
mov
aad
jge
fld
mov
shr
test
outs
jnp
pop
pop
clc
pop
add
xor
into
push
(bad)
push
retf
into
es
in
cmp
jge
pop
fmulp
pop
aas
out
cmp
mov
and
jge
adc
into
jo
mov
out
xchg
in
pop
aas
into
gs
imul
scas
push
lahf
ja
mov
ror
sbb
(bad)
(bad)
aam
push
xchg
xor
sbb
and
add
into
dec
cmp
fst
or
ins
sub
fisub
dec
fst
pop
popa
lods
mov
stc
cmp
pushf
or
sub
outs
push
into
out
lahf
mov
stos
mov
xchg
mov
xor
popa
test
jo
or
test
pop
xchg
push
data16
or
push
and
jmp
das
push
sti
into
test
cmp
shr
mov
out
jae
(bad)
dec
clc
xchg
rcr
xchg
fistp
jle
push
fcmove
mov
movs
lock
cmps
adc
into
je
inc
outs
cmp
and
xor
add
int
ins
jns
mov
jl
sbb
(bad)
mov
scas
push
sbb
jle
(bad)
lahf
cld
or
scas
cli
inc
xchg
mov
inc
lds
into
jmp
adc
test
push
mov
scas
jle
jbe
mov
ror
sbb
sub
pop
repz
push
cld
mov
add
pop
jmp
pop
jg
push
lods
mov
test
adc
add
mov
mov
or
pop
test
lods
into
in
aam
cmp
jmp
jg
loopne
add
je
in
mov
dec
(bad)
jbe
jecxz
inc
sbb
cmps
xchg
pop
pop
call
into
xor
dec
mov
repnz
cmp
cmps
push
gs
loop
push
out
dec
into
sub
lahf
fild
retf
mov
into
cmp
xchg
jnp
lods
retf
mov
mov
pop
and
sub
dec
push
hlt
outs
dec
(bad)
pextrw
cwde
mov
outs
sti
add
outs
and
into
add
xchg
int3
mov
sub
movs
hlt
out
test
and
imul
into
dec
inc
js
test
lds
movs
sbb
(bad)
pop
sub
push
mov
xchg
and
sti
xchg
sbb
or
loop
shr
das
and
gs
mov
xchg
jg
into
xchg
in
adc
into
cmps
clc
sti
add
jo
into
rcl
in
mov
(bad)
mov
xchg
stc
fdivrp
mov
(bad)
scas
mov
call
sbb
adc
das
jo
icebp
mov
into
and
ins
lods
std
mov
inc
sahf
mov
ss
jmp
rol
(bad)
and
lea
dec
je
std
cmps
retf
dec
mov
add
sub
data16
loope
into
(bad)
mov
add
les
js
push
adc
popf
aas
cdq
iret
mov
dec
mov
outs
lock
push
push
sbb
in
ja
imul
into
sub
out
mov
mov
jae
psllq
aad
into
push
arpl
sahf
pop
mov
bound
jle
leave
push
or
js
sub
mov
ins
repz
xor
(bad)
jnp
data16
jge
cmp
cmp
push
fsubr
jne
dec
xchg
dec
add
pushf
jmp
sbb
xchg
aam
and
out
mov
pop
lods
pusha
mov
fimul
ror
sbb
cmp
ins
inc
or
test
sub
fnsave
sbb
call
add
(bad)
iret
mov
test
inc
mov
xchg
(bad)
mov
jnp
sbb
into
mov
stos
mul
inc
scas
cld
into
retf
xlat
mov
cmps
(bad)
push
(bad)
loop
mov
jmp
cmp
cdq
cmps
xor
pop
repnz
and
into
push
inc
inc
mov
stos
push
scas
(bad)
out
jmp
adc
in
(bad)
out
loope
into
fnsave
(bad)
lahf
xor
test
mov
push
mov
popa
lock
fwait
sub
(bad)
dec
(bad)
gs
and
repz
fimul
scas
jmp
movs
retf
ret
ret
loop
dec
into
jmp
add
adc
mov
push
stc
mov
and
pop
push
or
cmp
in
push
pushf
xchg
xor
out
test
pinsrw
jbe
cmp
jae
lods
inc
push
lods
xchg
das
jno
adc
lods
shl
scas
dec
mov
push
add
dec
push
iret
xchg
mov
es
scas
scas
sar
push
sub
(bad)
xchg
into
sub
pop
call
push
mov
dec
into
sub
xchg
inc
cmp
push
push
out
pop
sub
xor
in
setno
xchg
call
movs
not
push
into
push
push
pop
sub
adc
adc
mov
jmp
jae
into
test
ins
push
pop
lods
scas
cmp
pop
aas
push
mov
fcmove
push
xor
into
add
ret
ffreep
into
sub
les
push
ret
xor
push
pop
add
mov
inc
push
mov
fist
into
jg
pop
xchg
addr16
mov
mov
scas
inc
into
and
rol
push
bound
in
fdivr
into
cwde
cmp
lahf
icebp
out
into
xchg
jecxz
cld
lods
std
daa
push
into
add
loope
into
jg
mov
mov
xor
ficomp
xor
into
sub
lahf
mov
clc
push
xchg
addr16
cmc
adc
shr
fadd
or
loope
mov
test
out
repnz
cmps
adc
test
mov
jmp
gs
pop
cdq
jnp
into
(bad)
stos
ins
pop
int
cmp
cmp
xor
pop
retf
pop
(bad)
loopne
int3
cmp
push
into
cmp
into
jge
push
nop
mov
xor
mov
sub
test
adc
sahf
ja
mov
(bad)
lods
jo
repnz
sti
adc
inc
clc
into
mov
dec
imul
fnsave
jge
dec
(bad)
bnd
lods
push
pop
fadd
mov
dec
into
cmc
mov
mov
mov
data16
inc
out
push
call
pop
jmp
test
das
mov
lahf
adc
xchg
test
sub
into
pop
and
mov
or
scas
and
dec
into
fsubr
mov
test
xchg
sub
mov
(bad)
push
into
jmp
cmps
mov
out
push
pop
dec
push
movs
into
dec
stc
out
fisttp
inc
aam
jmp
cdq
cmp
mov
dec
push
aaa
cs
sub
into
push
and
into
test
push
adc
(bad)
movs
dec
mov
xchg
in
mov
into
mov
lods
cdq
repnz
adc
or
inc
mov
ds
add
inc
sbb
nop
xchg
fcom
imul
aad
lahf
mov
and
jae
push
ret
dec
xor
pop
test
fnstcw
stos
cmps
jp
and
xchg
fcomp
dec
shr
adc
sbb
inc
out
mov
or
in
(bad)
jnp
add
arpl
push
into
add
xor
cmp
cmp
ja
xchg
cld
cmp
not
mov
mov
into
add
mov
jns
in
and
out
ret
mov
enter
into
dec
push
sbb
clc
pusha
fwait
lods
xchg
(bad)
and
inc
ja
gs
ins
je
xor
inc
mov
int3
into
sub
adc
xchg
aad
xchg
std
pop
xchg
int
jl
into
jp
and
cmp
mul
ja
je
outs
movs
stos
dec
repz
pop
jnp
test
cmc
into
pop
cmps
mov
into
movs
mov
std
lahf
into
pop
push
and
or
inc
into
aam
sahf
cwde
movs
mov
xor
shr
sub
and
lock
into
pop
inc
jecxz
push
jle
(bad)
mov
call
jne
stos
clc
out
sub
les
dec
adc
jp
xchg
shl
xor
mov
or
not
out
mov
mov
dec
fild
adc
add
scas
inc
pop
and
fstp
cmp
punpckldq
mov
adc
xchg
scas
fist
sub
xor
(bad)
sub
stos
sub
sub
loop
cs
add
xlat
ss
outs
pushf
fmul
xchg
inc
jge
lods
inc
mov
cdq
test
jl
and
add
sbb
push
aad
pop
sub
jne
into
mov
and
xchg
hlt
ret
aad
loop
mov
xlat
jb
jmp
add
shr
jnp
lods
(bad)
std
pop
cli
outs
bound
push
adc
mov
sahf
push
lods
lods
xchg
mov
out
fs
into
xor
hlt
pop
rcl
jb
sbb
imul
dec
enter
fmul
jg
leave
inc
xlat
into
xor
imul
or
movs
mov
dec
mov
xchg
pop
or
fisttp
xchg
inc
xor
mov
aam
outs
into
movs
ins
icebp
jmp
lods
fcom
aaa
mov
movs
dec
mov
xor
retf
into
in
inc
(bad)
mov
mov
out
out
call
mov
add
cwde
into
dec
sub
into
shl
adc
popa
nop
arpl
cli
lods
retf
dec
cmp
lods
je
jo
jl
(bad)
jge
or
arpl
push
jbe
sbb
pop
fstp
or
mov
mov
into
aaa
fbld
mov
and
into
iret
dec
repnz
shl
shr
cwde
mov
scas
inc
clc
into
jmp
pop
dec
into
or
retf
mov
jno
ins
mov
repnz
into
mov
adc
into
cmps
push
mov
into
ss
arpl
xor
imul
push
cmp
sub
into
gs
ins
jge
xchg
sub
cmp
jae
pop
js
ror
stc
in
cmp
dec
inc
jmp
xor
inc
inc
test
pop
inc
addr16
lods
xlat
mov
mov
sub
mov
hlt
dec
(bad)
loope
into
(bad)
popa
lock
mov
cmc
pop
fldcw
push
pushf
mov
sti
into
dec
jb
sub
mov
sbb
sbb
jb
sub
fmul
mov
rol
xchg
popa
cmp
ins
into
loop
xchg
sbb
test
ror
jns
shl
push
out
test
aas
push
sub
loopne
push
jae
push
mov
mov
shr
xchg
cwde
jns
inc
into
sub
cmp
xor
pop
outs
into
loop
stos
bound
push
into
aaa
je
lods
add
jle
into
rcr
sub
sub
sbb
popa
add
dec
bound
test
ret
cld
dec
pop
pop
lods
adc
dec
xchg
mov
mov
mov
test
and
jbe
enter
mov
and
test
ret
lds
sub
sti
cmp
jbe
mov
mov
adc
leave
jle
mov
adc
into
call
dec
scas
adc
out
inc
mov
das
mov
into
inc
dec
idiv
push
inc
mov
in
push
dec
fs
aas
js
rcl
into
bound
sub
stos
pop
mov
cwde
or
pop
pop
out
jns
in
fisttp
inc
(bad)
fadd
add
pop
cmp
aas
dec
xor
add
mov
aam
cld
sbb
aas
leave
inc
pop
or
es
jne
and
fdivrp
into
jae
ins
mov
into
lahf
mov
sub
into
aas
and
pusha
jnp
gs
ss
retf
(bad)
mov
in
nop
dec
lock
cld
mov
test
leave
and
das
pop
ss
pop
push
arpl
sbb
jnp
push
sub
je
pop
jle
jge
mov
int3
sti
or
inc
stos
xchg
sahf
ja
sub
(bad)
cs
sbb
mov
rcr
into
in
out
prefetch
push
into
pop
fist
(bad)
xchg
test
mov
into
push
fdiv
cmc
sub
in
push
ficomp
into
xor
sbb
sti
xchg
data16
sub
sub
pop
into
clc
add
sub
ins
bound
mov
out
pcmpgtw
js
xchg
inc
into
scas
(bad)
out
dec
mov
push
inc
into
hlt
or
lods
imul
xchg
jae
and
inc
mov
mov
das
scas
sub
popa
pop
test
sbb
adc
cli
fisub
outs
test
jb
dec
out
fcmove
out
lock
inc
int
mov
inc
dec
in
mov
repnz
iret
into
mov
pop
out
lea
jae
ins
stos
cmp
sbb
icebp
fisttp
and
mov
call
mov
mov
sti
fnstsw
jle
into
sub
icebp
add
into
add
inc
cmp
fld
gs
dec
iret
into
jnp
jle
jg
sbb
push
aad
(bad)
movs
test
(bad)
dec
daa
cmc
(bad)
xor
xchg
into
arpl
ds
pop
cmp
ss
or
into
fimul
fbld
sar
push
pusha
push
mov
add
fiadd
std
cmp
lods
js
cmp
mov
add
sub
jle
in
jne
dec
pop
setns
je
aad
jmp
loop
sub
into
popa
adc
jns
(bad)
xor
sub
jbe
xchg
or
push
into
xchg
push
jp
pop
aas
push
imul
mov
inc
in
test
jae
in
sbb
xor
into
ficomp
push
xchg
fnstenv
scas
loop
into
mov
pusha
daa
cdq
into
jmp
(bad)
out
inc
mov
mov
push
lods
scas
inc
push
fnsave
xor
jg
std
mov
into
mov
pop
xor
movs
neg
into
adc
xchg
push
(bad)
ror
push
pop
or
lods
inc
xor
mov
mov
dec
mov
dec
dec
jbe
sub
into
stc
jmp
push
fstp
lahf
jmp
mov
not
jns
mov
(bad)
xchg
sbb
adc
jg
pusha
sbb
add
sbb
add
cs
add
retf
rol
push
mov
adc
xchg
dec
or
push
dec
pop
push
cmp
into
out
sbb
das
call
jge
xchg
pop
jp
push
adc
das
loopne
and
jmp
loop
js
jb
sub
jge
jns
pop
hlt
ficomp
pusha
ins
into
xchg
mov
dec
ror
cmp
push
iret
je
mov
ret
push
or
lods
into
mov
popf
into
mov
outs
adc
cli
into
and
pop
jge
and
into
loope
xchg
sub
imul
(bad)
push
shl
cmp
fidiv
ss
jns
loopne
into
mov
xor
push
lods
adc
imul
jnp
and
xchg
stc
jmp
sbb
stos
dec
into
sbb
jne
or
shl
gs
fmul
out
and
push
test
outs
xchg
xchg
mov
add
je
into
ins
or
(bad)
add
pop
mov
adc
mov
bswap
ret
lods
lahf
sub
shl
scas
jns
test
out
mov
imul
jae
into
xchg
xchg
(bad)
div
enter
dec
jo
pop
pop
or
cmp
sbb
or
mov
mov
outs
cld
dec
jb
mov
movs
fwait
cmp
add
pop
cmps
in
jg
lods
fadd
xor
xor
xor
sub
rcr
xor
jo
into
leave
mov
or
loope
dec
jne
into
inc
aad
ja
jmp
push
into
(bad)
cmp
cli
adc
cmp
inc
mov
jmp
rcl
sub
ja
test
adc
(bad)
(bad)
outs
(bad)
out
push
into
inc
cmp
jae
add
lods
test
sbb
cmc
xor
into
sahf
xor
jns
jnp
cdq
into
jle
jo
and
xchg
dec
into
cmp
pop
icebp
ins
mov
dec
aad
mov
sub
mov
mov
pop
and
mov
mov
inc
and
movs
into
cmp
scas
es
dec
sub
ss
xchg
jle
into
arpl
xchg
push
into
aad
cmc
je
repnz
and
sub
pop
daa
into
xchg
cmps
retf
call
xor
jnp
mov
stos
pop
xchg
mov
in
pop
push
out
mov
xor
ror
inc
xchg
mov
into
xchg
test
aam
mov
movlps
or
push
imul
shr
scas
(bad)
jmp
jmp
add
repz
call
push
sub
pop
std
jb
test
into
sub
(bad)
repnz
cwde
xor
dec
cmp
outs
cmp
jae
xchg
and
into
outs
pop
out
xchg
cdq
sub
push
adc
push
addr16
movs
gs
mov
das
imul
in
test
mov
mov
sbb
out
call
ret
inc
jmp
pop
add
push
or
je
enter
xor
ret
paddb
add
sahf
pop
dec
into
xor
pop
sar
icebp
pop
jae
sbb
or
jo
test
add
jmp
xor
int
retf
xor
lods
adc
pusha
loop
pop
neg
fwait
inc
mov
mov
into
add
jp
loope
icebp
fcomp
daa
xchg
xor
movs
and
pop
sbb
mov
xchg
pop
xchg
jb
push
stc
mov
(bad)
arpl
or
into
lahf
mov
push
mov
cmp
pop
sub
pop
movs
push
(bad)
lods
aas
jle
dec
push
bnd
out
mov
dec
sbb
movs
xchg
aad
lods
adc
and
rcl
loope
movs
stc
mov
stos
cmp
into
dec
lds
or
push
into
mov
dec
inc
xor
dec
lods
into
push
pop
shl
call
or
or
movs
xchg
dec
call
adc
cmp
into
hlt
pop
push
pop
mov
into
push
adc
shl
test
mov
dec
(bad)
aam
into
jae
sti
cmc
xchg
pop
addr16
mov
bts
iret
and
outs
cmovp
cmp
and
loop
repnz
into
mov
sbb
mov
into
popa
imul
sub
push
add
jg
xor
sub
into
and
ss
mov
mov
fdivr
pusha
std
sub
mov
and
cmp
vmwrite
into
pop
mov
cdq
cld
cmp
aad
retf
into
and
add
into
xor
in
xchg
or
jle
into
and
lahf
(bad)
popf
sahf
xchg
push
jecxz
lods
lods
adc
das
cmp
int3
scas
outs
adc
or
sub
into
dec
in
jl
scas
or
addr16
test
cmp
ds
test
cmp
xor
scas
daa
dec
mov
sub
jnp
loop
repnz
stos
mov
cli
push
(bad)
scas
jmp
enter
gs
(bad)
sbb
mov
or
mov
pop
add
loope
mov
mov
mov
pop
je
xor
into
dec
mov
push
sub
mov
sbb
into
and
mov
inc
test
cmp
and
push
shr
mov
lods
mov
cmps
aas
pop
push
(bad)
scas
mov
loop
cmp
call
ret
xchg
lock
into
icebp
(bad)
fnstenv
push
(bad)
jecxz
xchg
mov
mov
sbb
in
and
ret
lods
xor
mov
aam
jp
mov
aaa
sub
xor
retf
xchg
test
outs
add
jmp
bswap
mov
stos
mov
lock
jno
inc
cmps
inc
das
sub
and
test
clc
jae
retf
pop
scas
pop
(bad)
scas
dec
cmp
pop
popa
int3
inc
into
xchg
pushf
adc
scas
je
mov
pop
or
aaa
jge
lahf
pop
loope
out
jb
addr16
and
rol
jmp
into
pushf
mov
pop
sub
or
push
xor
jg
jle
scas
scas
mov
js
pop
aad
into
hlt
out
pop
cmc
xor
pop
into
loopne
fsubrp
sub
add
add
pop
mov
scas
push
dec
shl
clc
(bad)
push
dec
cmps
inc
sub
into
add
mov
into
imul
add
fmul
loopne
dec
shl
and
xor
xchg
test
(bad)
push
inc
jl
test
ins
mov
data16
sti
nop
out
cs
cdq
fs
ins
fimul
aam
add
xor
push
jns
je
add
mov
mov
adc
xchg
icebp
lahf
jbe
xor
out
or
bswap
dec
fwait
cmp
aam
mov
add
icebp
mov
js
adc
push
(bad)
fidiv
scas
xchg
dec
outs
dec
cmps
rol
mov
test
xchg
pop
into
pusha
jno
pop
mov
adc
popf
sbb
in
test
ret
jo
daa
sahf
stos
adc
into
inc
dec
stc
push
or
pop
cmp
inc
mov
(bad)
mov
and
into
test
dec
hlt
mov
imul
test
aas
mov
jae
xchg
mov
lods
imul
add
icebp
test
or
add
sub
mov
dec
lods
pop
mov
into
out
fidiv
mov
out
dec
dec
sub
int
out
pop
pop
into
push
push
adc
dec
add
sub
(bad)
repnz
lods
std
aad
enter
call
xchg
and
into
inc
hlt
and
mov
dec
je
fimul
pop
(bad)
lahf
mov
or
mov
imul
int3
into
pop
mov
out
push
sbb
xchg
push
ror
pushf
in
cwde
rcl
stos
loop
out
jecxz
ror
stos
adc
ret
loopne
cmp
mov
pop
int
push
add
in
stc
sbb
and
into
stos
xor
fdivr
into
inc
mov
rol
xchg
mov
das
xchg
call
mov
mov
in
dec
and
mov
std
push
rol
dec
into
sub
and
js
xor
dec
or
out
jo
mov
sub
in
fistp
data16
mov
cs
mov
retf
ds
or
gs
adc
push
inc
mov
add
das
cmp
inc
sbb
int3
mov
jg
push
out
repnz
sar
das
retf
into
adc
or
jno
ds
imul
mov
outs
imul
mov
inc
outs
cmp
mov
into
ror
int
add
mov
hlt
out
retf
cmps
push
into
aad
out
xor
sbb
push
jno
je
neg
and
into
mov
xchg
push
adc
dec
into
push
mov
movs
out
outs
adc
pop
lods
mov
ror
js
push
leave
mov
xchg
dec
sahf
movq
imul
add
jmp
stos
mov
jns
jg
out
xchg
js
aam
test
push
and
mov
add
pop
imul
call
add
xor
mov
ins
stos
sub
mov
or
sti
retf
push
cmc
data16
sti
out
addr16
and
les
mov
popf
out
mov
pusha
fldenv
scas
es
mov
xor
push
popf
cmps
jnp
jg
dec
iret
jmp
test
test
outs
xchg
in
pop
mov
ds
test
shrd
fadd
out
mov
jl
iret
loopne
addr16
lods
es
jg
adc
and
jnp
arpl
mov
cmps
arpl
ins
pop
out
aam
push
push
mov
mov
dec
xchg
aas
fimul
aad
push
push
in
out
stos
add
scas
fisubr
push
jnp
scas
rol
jg
mov
dec
xchg
inc
ror
jp
add
mov
ficom
(bad)
jmp
xchg
and
(bad)
stos
adc
and
mov
mov
jge
cdq
fwait
inc
ret
push
jbe
test
js
aam
inc
sub
xchg
stos
and
stos
inc
mov
and
addr16
test
mov
(bad)
std
or
or
push
push
mov
mov
int
ins
int
call
xchg
xchg
loop
mov
and
mov
call
pop
faddp
clc
jnp
cmp
xchg
sub
push
out
pop
xor
stos
xchg
pop
add
mov
sub
aas
add
js
and
push
or
and
mov
frstor
mov
ja
xor
and
cmp
pop
jecxz
sbb
daa
out
pop
mov
dec
lods
es
mov
outs
push
cmps
push
movs
rol
(bad)
dec
mov
inc
stos
outs
cmp
outs
mov
sub
jmp
cld
jp
std
sub
ret
mov
sub
test
int
dec
addr16
mov
cmp
les
jmp
ja
(bad)
in
ja
sbb
adc
ss
in
fwait
jnp
jae
cmp
ja
les
cs
xchg
cmc
cmc
dec
(bad)
sub
dec
cmp
mov
cmp
push
ss
xchg
addr16
and
movs
or
(bad)
les
and
sub
into
(bad)
xchg
div
int3
pop
retf
adc
outs
push
xchg
mov
mov
push
fisubr
aaa
add
stos
jp
lods
ds
dec
jle
addr16
cmps
rep
fmul
mov
jg
pop
ins
dec
xchg
sub
mov
imul
ret
stc
data16
popf
pop
sub
test
inc
ret
mov
cmps
dec
outs
jmp
stos
pop
aad
ins
(bad)
fidiv
mov
out
out
pop
sub
lds
clc
ds
cwde
jg
aaa
sub
stos
retf
fidiv
and
addr16
or
push
lods
dec
sub
cmp
movs
ja
pop
pusha
(bad)
frstor
mov
mov
pop
or
push
stos
adc
pop
loopne
fisttp
mov
mov
mov
cmc
scas
jnp
mov
xlat
es
ja
push
ret
xchg
and
bound
xchg
cwde
push
sahf
push
inc
movs
mov
outs
outs
popf
test
(bad)
jnp
mov
xor
jp
push
mov
int
fwait
(bad)
test
out
leave
ins
sub
push
cmp
dec
inc
mov
test
pop
imul
xor
outs
xchg
xor
mov
pop
xchg
lahf
imul
ja
inc
or
stos
mov
push
and
adc
sub
mov
ror
ins
std
lods
mov
mov
jns
pop
in
(bad)
in
hlt
test
ds
sti
xchg
or
stc
and
sti
out
xchg
lods
push
icebp
sbb
mov
sahf
in
xchg
test
aam
(bad)
push
stos
jge
enter
movs
test
cld
sub
outs
and
cmps
push
leave
and
jmp
sub
push
jge
jae
jb
fisub
or
mov
mov
sub
cli
and
pop
popf
loopne
cdq
mov
popa
mov
jle
push
cld
push
fwait
aaa
and
in
stos
jno
aaa
adc
rol
pop
std
pop
lahf
fcom
mov
out
sub
add
and
mov
scas
push
mov
iret
sub
seto
out
cmps
fild
fcomp
mov
stos
mov
mov
mov
xchg
loop
mov
cmps
cmps
mov
inc
scas
frstor
popf
sub
and
push
imul
test
in
lods
xchg
push
pop
jo
push
dec
pop
mov
mov
and
xchg
mov
pop
data16
outs
push
pop
int3
ret
mov
xchg
mov
call
or
test
adc
scas
ins
test
xchg
mov
mov
daa
pop
es
adc
sbb
push
je
jo
lods
xchg
pop
shl
pop
mov
into
xor
ret
loop
shr
mov
xlat
push
jo
mov
add
scas
pop
ror
nop
mov
and
lahf
leave
clflush
dec
ret
ret
arpl
out
out
daa
test
push
movs
mov
lods
cli
(bad)
cmps
cvtdq2ps
cld
jg
in
lahf
sbb
fstp
cmps
mov
cmp
mov
adc
out
xchg
repnz
mov
test
and
jo
fild
outs
and
mov
jno
inc
mov
xchg
fistp
scas
jmp
lods
std
int3
pop
inc
retf
dec
ret
int3
jmp
xlat
lods
icebp
mov
add
ds
(bad)
jmp
jnp
stos
jl
std
stc
and
cld
mov
push
loop
xchg
ja
add
fimul
lods
ins
dec
inc
(bad)
arpl
pop
mov
sub
push
std
or
mov
scas
adc
test
imul
addr16
mov
lds
mov
fwait
jo
jmp
jge
mov
popa
mov
mov
test
stos
(bad)
movs
dec
sbb
test
nop
pushf
arpl
add
mov
pop
in
pop
in
inc
in
inc
in
dec
sbb
mov
sbb
ins
xchg
xchg
cmps
cmp
xor
ins
ss
stos
dec
sbb
fnstenv
cmp
inc
arpl
inc
test
pop
scas
pop
push
jnp
jb
inc
jp
fiadd
mov
dec
inc
push
out
popa
and
shl
scas
jnp
sub
movs
sub
in
shl
inc
xchg
jl
rcr
ds
outs
pop
and
and
lahf
test
xchg
ins
fwait
mov
add
loopne
sub
push
add
mov
loope
mov
fild
mov
jg
cld
inc
mov
das
sub
add
stos
aas
xchg
scas
test
xchg
movs
movs
pop
push
jnp
mov
mov
in
pop
mov
push
fidivr
adc
xor
shl
in
jo
ret
in
imul
ja
ss
jl
xchg
dec
pop
pop
bound
xchg
cmp
scas
loope
mov
lahf
pop
arpl
add
repnz
or
gs
cli
and
dec
jl
dec
pop
jl
les
and
sub
sub
mov
int
fstp
pop
cmp
test
(bad)
jmp
mov
jmp
mov
and
inc
mov
aam
scas
sub
das
mov
xchg
cmps
repnz
and
mov
daa
cmps
call
popa
enter
popf
sub
bound
mov
stos
push
bound
les
jnp
movs
xchg
mov
fwait
movs
xchg
(bad)
das
inc
dec
pop
shl
outs
in
mov
dec
pop
jg
inc
dec
fst
nop
jns
test
xchg
dec
push
dec
add
mov
imul
inc
ror
cmp
imul
pop
enter
inc
aaa
inc
jnp
inc
pop
dec
pop
cmovp
push
jg
mov
fisub
push
out
push
les
xor
aaa
xor
mov
stos
cmp
cmps
fisubr
das
jno
call
jb
pmaxsw
mov
jg
outs
mov
lahf
ds
sahf
aas
xchg
dec
outs
adc
das
xchg
imul
fidiv
aas
mov
fst
jbe
inc
push
es
mov
sbb
jmp
shl
mov
mov
lea
push
cmp
mov
dec
sub
in
jae
lds
into
mov
test
stos
mov
inc
mov
fiadd
(bad)
mov
pop
mov
cmp
xlat
and
push
dec
inc
xchg
mov
icebp
lds
push
mov
fs
push
shl
test
push
pop
dec
dec
dec
mov
pushf
movs
popa
mov
xchg
push
add
pushf
mov
push
add
gs
mov
and
mov
mov
sahf
dec
bound
pop
inc
dec
gs
inc
or
ins
jbe
imul
adc
push
push
fmul
dec
cmp
adc
xchg
not
int3
dec
lahf
sahf
popf
xchg
imul
xor
test
out
repz
dec
(bad)
sbb
xchg
sub
mov
push
retf
sbb
xchg
out
sbb
(bad)
ror
adc
xor
sbb
in
out
test
push
sbb
hlt
push
rcr
xchg
jmp
mov
mov
outs
cmps
nop
mov
or
jnp
(bad)
call
mov
push
mov
push
pop
dec
in
pop
outs
and
cli
out
add
sahf
dec
inc
inc
inc
xor
push
pusha
inc
pushf
mov
cmps
fwait
inc
inc
xchg
dec
repz
cwde
ret
out
clc
xchg
aad
ja
inc
enter
jg
sbb
dec
imul
xchg
xor
inc
cmps
ins
mov
push
aad
sets
iret
or
and
stos
jmp
cmps
xlat
ror
jg
das
movs
daa
inc
pop
call
(bad)
in
inc
icebp
mov
fnstenv
enter
or
movs
xchg
jnp
xchg
mov
pop
movs
(bad)
mov
xchg
push
xchg
adc
test
sahf
sbb
inc
fldcw
sub
mov
ins
es
imul
xchg
xchg
(bad)
gs
and
fwait
outs
sahf
imul
loopne
loop
dec
scas
xor
movs
or
movs
xchg
pusha
(bad)
popf
mov
inc
out
das
mov
ror
adc
dec
mov
call
pop
stos
shr
push
stos
sbb
or
pop
adc
lea
inc
adc
jmp
sub
scas
in
in
pop
in
mov
mov
jp
cmps
test
mov
push
fldenv
cmps
(bad)
cmp
test
(bad)
cli
scas
mov
push
or
stc
dec
xchg
clc
imul
lods
dec
rep
loopne
lods
popa
out
mov
retf
enter
cmps
or
mov
dec
mov
mov
lods
cli
test
xchg
lods
call
scas
push
stos
fnsave
cmp
mov
jmp
mov
add
lods
scas
test
jmp
mov
pop
cmc
xchg
push
jbe
jp
lods
std
lea
mov
jnp
xchg
jmp
movsx
lea
imul
(bad)
push
add
pushf
push
cs
mov
mov
cmps
js
stos
icebp
imul
daa
imul
xor
imul
(bad)
in
mov
mov
imul
mov
scas
xchg
sub
daa
xchg
and
cmp
stos
or
and
mov
mov
imul
cmp
and
cmp
cmp
or
cmp
sbb
xchg
cmp
imul
(bad)
cmp
daa
jb
cs
mov
lea
stos
shr
xor
push
daa
mov
in
scas
mov
imul
int3
xor
xor
lods
mov
scas
cmc
or
or
dec
push
scas
sub
or
scas
sbb
scas
jmp
scas
cld
add
push
scas
iret
sbb
sbb
sbb
push
lods
inc
adc
sub
lods
cmp
lods
or
lods
sbb
cdq
dec
paddsw
in
push
es
mov
mov
imul
xor
xlat
mov
scas
cmps
jmp
mov
cs
mov
stos
sub
daa
xchg
out
cmp
imul
(bad)
in
es
mov
mov
imul
mov
imul
(bad)
loopne
sar
lea
jmp
mov
mov
cmp
and
cs
fmul
imul
mov
imul
(bad)
imul
es
mov
mov
imul
daa
scas
hlt
mov
mov
daa
mov
cs
mov
push
mov
jb
fnstsw
out
lds
and
addr16
adc
retf
cmps
ror
cmps
mov
cmps
test
cmps
xchg
lds
ret
cmps
dec
ret
ror
cmp
dec
or
dec
paddusb
fisttp
fimul
(bad)
fmul
(bad)
dec
mov
out
aam
xchg
shl
shl
iret
mov
xor
nop
cmps
adc
imul
ror
pop
jl
scas
pop
dec
pop
sub
fdivrp
push
mov
(bad)
push
adc
idiv
push
lds
sbb
ret
mov
fimul
adc
sub
jae
cli
xor
push
inc
dec
mov
pushf
popf
ins
imul
inc
aaa
lea
out
dec
test
mov
pop
xor
dec
frstpm(287
inc
ja
dec
fmul
inc
adc
mov
std
pop
retf
test
mov
pop
ror
pop
pop
test
(bad)
aam
push
mov
xor
jecxz
pusha
arpl
dec
(bad)
pop
pop
fisttp
sbb
mov
imul
or
sbb
gs
push
scas
test
push
in
test
inc
inc
sub
sub
into
sbb
xlat
push
repnz
into
push
in
cld
sbb
jmp
pop
or
stos
sbb
adc
stos
mov
movs
daa
push
in
(bad)
jmp
xchg
adc
mov
and
stc
out
sar
mov
out
mov
rcl
dec
movs
adc
call
pop
fwait
or
sub
push
or
(bad)
jo
lods
into
sbb
loopne
in
repz
adc
sub
sbb
adc
dec
(bad)
(bad)
mov
lods
sbb
in
or
movs
push
out
cld
(bad)
adc
inc
daa
mov
sbb
cmps
inc
sbb
stos
dec
in
mov
in
rcr
clc
(bad)
call
out
adc
sbb
popf
out
sar
pop
in
hlt
fwait
push
pop
or
repnz
push
ins
jp
mov
push
iret
jmp
or
enter
idiv
sub
xchg
mov
ins
pop
outs
ds
or
outs
movs
test
push
lds
mov
sti
dec
mov
rcr
adc
and
push
(bad)
shl
imul
cmps
das
xchg
movs
sub
(bad)
ficom
xlat
dec
mov
sbb
aas
jo
stos
dec
out
(bad)
fdiv
mov
cli
idiv
in
adc
sub
pop
in
dec
fidivr
adc
mov
adc
or
addr16
(bad)
mov
add
retf
jmp
pop
jnp
mov
inc
test
sahf
in
fimul
push
mov
inc
cmovle
pop
cli
add
enter
mov
ficom
add
xor
into
cld
sar
ret
and
les
retf
adc
pop
popf
xchg
outs
inc
(bad)
push
push
addr16
cmc
lods
loope
stc
adc
data16
mov
push
mul
add
push
add
adc
push
cmp
mov
sti
out
jmp
mov
mov
xchg
pop
xchg
mov
and
mov
xchg
lea
test
dec
jo
inc
dec
pop
adc
scas
dec
pop
outs
pop
xchg
lods
dec
dec
xchg
ins
jg
outs
jbe
loop
jmp
icebp
pop
xchg
hlt
mov
dec
or
pop
out
inc
mov
mov
fwait
xchg
shl
jne
scas
pop
retf
push
push
mov
mov
idiv
pop
cmp
out
adc
mov
xchg
cmps
cdq
mov
dec
and
adc
cli
mov
ret
xor
mov
in
add
adc
ins
mov
push
jg
and
xchg
dec
in
fcom
push
in
dec
jle
arpl
pop
push
xchg
lea
call
int3
fistp
pusha
dec
aas
pop
js
pushf
popf
jo
mov
xchg
sub
mov
mov
sub
mov
lods
dec
or
xchg
mov
dec
scas
cmp
push
lea
mov
(bad)
cmp
(bad)
sahf
sub
jl
movs
add
stos
pushf
cdq
call
ins
aad
fsubr
mov
adc
fidiv
push
pop
ror
jnp
das
sbb
hlt
sbb
sbb
adc
push
not
fs
jo
arpl
out
jge
int3
jnp
mov
push
inc
xor
add
cmp
(bad)
(bad)
popaw
sar
in
inc
jg
(bad)
jno
cmp
xchg
and
repz
mov
imul
pop
int
xchg
lods
pop
or
out
push
push
test
dec
mov
ds
add
xor
adc
mov
lea
pop
test
dec
mov
pushf
fwait
call
ins
ins
imul
(bad)
or
inc
movs
ficom
push
pop
mov
scas
mov
imul
mov
xchg
test
pop
addr16
pop
dec
dec
test
cwde
inc
mov
xchg
outs
xor
fidiv
imul
pop
mov
cmps
fstp
ja
not
test
inc
jb
jbe
js
outs
outs
ss
jae
lea
nop
xor
pop
mov
sahf
mov
movs
jb
and
je
cmc
movs
out
arpl
aas
scas
dec
add
and
mov
movs
xchg
or
xchg
js
push
or
jmp
push
(bad)
inc
(bad)
fistp
mov
xchg
cmp
cwde
popf
das
imul
(bad)
frstor
ins
js
add
scas
cmps
pop
repz
jl
mov
pusha
jle
cmc
jge
sub
dec
lea
dec
ins
aam
hlt
test
jnp
test
je
add
test
outs
loope
imul
mov
sbb
mov
add
ins
cmp
jns
lods
js
add
push
mov
xchg
pop
jg
dec
xor
mov
cmps
push
fldcw
mov
cmps
sub
les
mov
(bad)
cmps
stos
stos
arpl
sub
pusha
add
(bad)
mov
cmps
test
pop
mov
cmps
xchg
cld
mov
mov
mov
adc
inc
dec
cmp
popf
mov
addr16
push
out
sbb
ja
cmp
out
loopne
aas
dec
mov
jge
bound
add
pop
mov
xor
mov
mov
ja
mov
xor
jl
mov
pop
ss
cdq
js
jg
test
mov
dec
sbb
js
popf
push
sbb
cdq
fucom
sub
or
(bad)
cmp
inc
pop
add
out
mov
stos
or
mov
popa
add
xchg
cld
xchg
pop
(bad)
xchg
popf
ret
mov
xchg
dec
js
shl
icebp
int
dec
int3
mov
xchg
outs
add
stos
or
dec
mov
push
mov
cmps
mov
cmps
cwde
test
dec
mov
cmps
ins
test
xchg
cmps
addr16
xchg
mov
call
mov
stos
cmps
cdq
test
sub
cmps
aas
test
fidivr
frstor
cmps
mov
cwde
test
pop
inc
mov
cmps
cmps
loope
mov
aam
or
fwait
rcr
cs
test
mov
dec
bound
cmps
push
test
sub
cmps
sub
test
adc
push
mov
cmps
mov
cwde
test
pop
inc
dec
lds
ins
sbb
cmp
cmp
dec
and
jecxz
dec
daa
push
cmps
push
push
add
ins
loopne
and
xor
xor
inc
or
dec
cmps
mov
(bad)
mov
mov
(bad)
repz
push
pop
jg
mov
or
mov
push
(bad)
mov
xchg
popf
imul
shl
or
push
mov
dec
dec
js
and
outs
mov
movs
mov
pop
mov
mov
dec
mov
(bad)
pop
(bad)
pop
pop
sub
shr
aas
dec
(bad)
pop
(bad)
pop
inc
sub
shr
aas
dec
enter
inc
js
pop
mov
data16
push
ret
jnp
pusha
dec
cmps
pop
xchg
lds
addr16
imul
fnstcw
dec
or
sbb
cmp
mov
mov
ins
bound
xchg
lahf
sub
lea
sub
mov
mov
push
in
movs
das
cmps
loope
pusha
jae
test
arpl
std
mov
retf
addr16
push
cmp
or
dec
retf
dec
xchg
dec
inc
and
mov
dec
(bad)
daa
cmp
jmp
dec
adc
mov
xor
cmps
mov
dec
xor
es
ins
mov
dec
lea
movs
lea
out
push
sub
imul
and
call
imul
pushf
pop
test
cwde
and
bound
cdq
jmp
imul
loope
xchg
gs
mov
or
jae
imul
jge
adc
jb
js
jle
sub
nop
sub
(bad)
addr16
call
sub
add
movs
jnp
(bad)
xchg
out
pop
popf
jnp
test
sub
push
test
push
movs
pushf
ja
je
push
gs
jg
cwde
outs
popa
mov
jo
xor
sub
sub
psubd
bound
outs
mov
xchg
jl
xlat
js
xchg
pusha
add
(bad)
push
adc
jle
fwait
loop
add
push
mov
movs
dec
mov
jg
fnstenv
jl
mov
pop
cmps
inc
scas
pop
ror
mov
mov
and
ins
test
jge
cmps
push
test
imul
push
call
mov
test
outs
mov
mov
sbb
f2xm1
inc
push
gs
cmps
mov
aas
movs
or
mov
test
shr
lock
fldenv
ins
movs
xor
ds
jl
xchg
cmp
or
adc
ins
or
shl
bound
fisub
gs
ja
jne
cmp
scas
mov
sub
xchg
push
xchg
imul
mov
xchg
hlt
mov
and
ins
lods
xor
mov
test
jnp
imul
inc
enter
xchg
mov
pop
gs
mov
sub
jnp
inc
mov
jp
inc
mov
pushf
xor
jp
aas
push
mov
mov
and
sub
ret
data16
mov
cmp
fst
jge
dec
hlt
mov
scas
test
stc
cmp
out
loopne
test
adc
lods
test
push
mov
jns
fs
push
sti
loopne
ds
shl
dec
mov
inc
int
xchg
pop
stos
push
out
inc
shl
mov
neg
adc
mov
mov
sbb
mov
mov
gs
cmps
mov
pop
inc
(bad)
xor
stos
xchg
sar
sahf
cmps
pop
mov
sub
pop
fwait
mov
inc
inc
mov
adc
cmps
shl
mov
cdq
shr
xchg
cmp
inc
ds
pop
ins
dec
cmps
dec
mov
addr16
pop
push
cmps
dec
or
imul
retf
aam
pop
mov
or
out
jns
movs
cmc
push
inc
mov
jg
mov
dec
out
int3
pop
inc
xchg
pop
mov
and
jne
ins
and
mov
les
sbb
fcomp
xchg
fs
mov
mov
inc
or
(bad)
clc
jg
imul
std
pop
dec
and
pop
inc
and
inc
cli
mov
dec
inc
dec
mov
mov
dec
clc
imul
sbb
add
add
dec
inc
mov
inc
push
and
add
call
mov
mov
push
(bad)
fsubr
in
dec
mov
ds
push
mov
or
in
mov
ds
fsubr
in
adc
lahf
fdiv
add
mov
push
xchg
fsubr
jecxz
xor
clc
push
loop
xor
push
loopne
xor
add
mov
bound
lahf
cld
bound
pop
mov
inc
fld
mov
sbb
data16
pop
jnp
mov
mov
sbb
jne
jns
cmp
pop
jnp
inc
xchg
fcmovne
xchg
fcmovne
xchg
fcmovne
xchg
lods
mov
mov
out
mov
aas
xlat
out
retf
mov
pusha
sbb
and
sbb
ins
out
xchg
fistp
aas
addr16
hlt
cli
cli
ficom
aad
push
or
adc
pop
adc
stos
or
sbb
mov
xchg
xchg
xlat
and
xor
out
cmp
xor
mov
loope
mov
or
and
lahf
xchg
out
loope
xchg
pop
(bad)
inc
fcomi
mov
inc
push
ins
fcomp
call
(bad)
xchg
packssdw
dec
nop
inc
test
je
inc
mov
dec
fs
sar
movs
fwait
test
dec
mov
dec
clc
imul
dec
call
imul
lock
push
and
vcvtpd2ps
in
push
cs
call
xchg
movs
imul
call
xchg
popf
enter
cmp
cdq
and
sahf
push
stos
popf
cmps
cdq
sub
mov
ins
mov
dec
dec
in
test
jecxz
xchg
cwde
movs
fwait
test
pop
imul
xchg
cdq
ins
add
add
pushf
mov
cwde
lods
push
lahf
and
dec
movs
sahf
lea
outs
mov
(bad)
adc
inc
aas
sub
imul
xchg
outs
jg
call
ds
movs
fwait
stc
test
xor
mov
movs
test
mov
mov
xchg
push
or
fcomp
popf
push
sub
cwde
and
mov
out
movs
mov
imul
lock
mov
adc
push
aam
cld
imul
and
mov
jge
push
or
stos
nop
lea
mov
push
or
stc
mov
xchg
stos
xchg
jp
xor
push
or
cld
popf
cmp
cwde
push
sub
rol
sub
or
or
aam
pop
xchg
adc
ror
in
mov
xor
iret
cmps
rcr
pop
ja
pushf
popa
(bad)
daa
popf
imul
ins
call
and
pop
imul
adc
aam
add
imul
mov
and
jo
mov
jmp
mov
in
push
sub
cmps
sar
push
pop
xor
nop
in
push
sub
cmps
shl
fs
inc
fs
in
push
sub
mov
push
ins
adc
sub
cmps
xchg
sub
push
sub
mov
out
hlt
add
add
(bad)
mov
lods
ins
stos
xchg
cmps
outs
mov
imul
mov
lea
mov
add
test
cmps
xchg
ins
push
cmc
in
xchg
cmps
mov
push
and
cmps
fdivr
xor
nop
in
push
sub
cmps
sar
xor
nop
call
fdivr
xor
nop
in
push
sub
cmps
sar
xor
nop
call
fdivr
mov
xchg
in
push
sub
cmps
cdq
sub
movs
jge
rol
jo
inc
or
out
push
ins
ror
mov
bound
jb
ins
das
or
dec
and
inc
repnz
adc
add
cmc
fs
pusha
dec
push
add
mov
xchg
sti
inc
push
pop
push
adc
addr16
or
inc
loope
fs
aas
movs
jl
out
ins
pop
sub
cmp
outs
das
sub
fs
jl
xlat
or
ins
mov
mov
adc
push
aad
pop
cmp
fwait
daa
push
xor
cli
sub
and
inc
sub
js
inc
inc
and
popf
ret
jg
and
outs
or
repz
dec
sub
inc
pop
lahf
repnz
pop
sub
shr
push
ds
push
dec
inc
pop
imul
jg
pop
inc
and
dec
dec
ins
fcmovnb
pop
jl
push
add
dec
pop
pop
jo
or
push
sbb
mov
pop
inc
mov
mov
mov
arpl
mov
repnz
pushf
addr16
lea
shl
inc
mov
outs
push
mov
mov
mov
push
jns
and
mov
and
mov
imul
xchg
push
xchg
mov
lds
mov
add
mov
leave
mov
popa
inc
lods
and
ins
push
imul
inc
popa
mov
and
inc
jge
dec
shl
(bad)
icebp
xchg
inc
cmp
dec
or
jnp
and
mul
ins
mov
jp
mov
xchg
and
rcr
(bad)
fcom
xor
popa
add
loop
ins
jp
inc
inc
jno
mov
jmp
push
xor
pop
pop
pop
pop
push
cmps
lahf
dec
mov
dec
adc
into
lock
jge
and
mov
pushf
sub
mov
pushf
scas
mov
mov
ss
mov
bound
cmps
imul
cmps
mov
stos
clc
addr16
mov
cmps
or
scas
push
lahf
imul
push
mov
sahf
adc
and
test
xchg
dec
mov
inc
ds
lea
inc
inc
es
mov
pop
ds
lea
pop
push
es
mov
push
ds
lea
sub
sub
daa
ds
and
aas
ds
cmp
aaa
ds
xor
das
ds
lea
or
pop
ds
lea
add
pop
ds
lea
sbb
pop
ds
lea
adc
(bad)
in
(bad)
in
imul
es
addr16
in
in
jecxz
es
loopne
jmp
ds
(bad)
cld
imul
es
mov
idiv
cmc
xchg
call
jg
jmp
push
cmp
cmps
aad
or
cli
mov
scas
nop
fwait
scas
test
daa
inc
cdq
cs
jbe
scas
mov
lods
cmp
xchg
stos
add
xchg
stos
pusha
xchg
stos
mov
cmps
fbld
adc
fs
cmps
mov
or
pop
ins
mov
push
sub
xchg
scas
test
xchg
xchg
sub
mov
xchg
(bad)
ins
jbe
ins
mov
push
sbb
jmp
aas
addr16
jle
dec
mov
js
scas
mov
or
popa
lods
movs
pusha
stos
imul
jg
xchg
jle
jecxz
jno
mov
mov
jp
add
mov
je
stos
jb
jno
inc
outs
scas
mov
scas
pusha
dec
lods
int3
mov
cmps
dec
lea
add
aad
lods
cmp
imul
out
daa
pop
inc
cmps
cwde
pop
cmps
rcr
adc
sub
cmps
push
mov
(bad)
jmp
retf
scas
add
icebp
push
scas
mov
scas
inc
sub
xor
scas
test
scas
test
scas
(bad)
and
mov
test
and
cmps
mul
cmps
push
aas
cmps
push
cmps
pop
cmp
xchg
cmp
push
sub
inc
cli
mov
jae
mov
scas
not
dec
mov
das
repnz
dec
icebp
dec
xor
fdivr
out
lods
ror
jb
pop
sub
jmp
stos
adc
jl
jle
test
xchg
jbe
mov
mov
or
lods
and
pop
mov
cdq
xchg
lods
lock
xchg
jmp
lahf
outs
in
cmp
into
mov
mov
mov
mov
xor
retf
mov
into
mov
popf
mov
mov
pop
das
movs
mov
mov
pusha
and
test
mov
bound
xchg
and
out
pusha
pop
push
cdq
mov
mov
test
ins
push
mov
xor
pop
mov
enter
nop
cmp
fs
adc
mov
mov
fwait
jo
cs
push
into
cmp
and
inc
mov
xchg
and
xor
in
mov
out
mov
mov
and
pop
push
adc
xchg
pop
sbb
push
lods
xor
aas
cmp
sub
push
scas
enter
imul
pop
mov
pop
(bad)
push
bound
das
mov
test
mov
arpl
scas
or
and
into
push
push
xchg
pop
sbb
sbb
and
test
lods
xchg
jg
aas
aas
imul
mov
pop
xchg
test
into
xchg
inc
mov
pop
mov
mov
xchg
test
test
mov
mov
mov
adc
das
fst
lods
push
pop
xchg
pop
sbb
(bad)
into
popf
dec
add
jne
test
xor
sub
pop
pop
mov
pop
mov
pop
setae
xchg
inc
mov
xchg
inc
aas
into
push
mov
xchg
data16
scas
cmps
mov
fsubr
mov
addr16
arpl
push
sbb
loop
daa
dec
adc
dec
push
sbb
push
scas
xchg
mov
mov
sub
xchg
arpl
iret
push
es
push
mov
lea
into
cwde
dec
mov
jno
xchg
jg
xor
lea
mov
xor
xchg
inc
sbb
cmp
lahf
popa
and
sub
fimul
and
mov
popf
mov
add
inc
into
or
outs
das
in
and
cmps
test
mov
popf
xchg
cmp
push
add
pop
(bad)
or
mov
mov
pop
mov
pop
cmc
xchg
test
loop
pop
test
inc
mov
imul
outs
(bad)
fild
(bad)
scas
sahf
adc
aaa
jg
cmp
arpl
dec
cli
mov
into
pop
pop
loope
xor
je
pop
jmp
into
adc
dec
xchg
addr16
cs
test
mov
lahf
jnp
and
push
jbe
mov
cmp
outs
outs
xor
popa
mov
dec
mov
and
pusha
cmp
xchg
imul
addr16
pushf
test
ins
push
xor
repz
mov
into
mov
sbb
adc
into
push
add
inc
or
inc
or
in
and
ins
pop
sbb
call
xor
into
arpl
pop
test
outs
jb
mov
mov
xchg
addr16
mov
mov
mov
test
fwait
dec
cmp
movs
dec
pop
aas
mov
imul
xchg
pop
xor
scas
ret
mov
sub
xor
icebp
sub
sbb
cs
jo
jmp
addr16
sbb
push
dec
call
jo
test
ror
lea
scas
pop
mov
inc
mov
je
rol
lahf
jo
sahf
movs
dec
mov
cwde
mov
xchg
inc
mov
(bad)
sub
inc
add
sbb
mov
js
test
mov
in
lds
into
lahf
push
or
pmaddwd
loopne
mov
xchg
dec
mov
setno
jns
sbb
xchg
test
and
push
das
xchg
aas
xor
call
(bad)
movs
pop
push
scas
movs
mov
xchg
push
nop
inc
push
cs
add
sbb
cdq
inc
xor
pusha
mov
cmp
cdq
scas
mov
xchg
sbb
int
stc
mov
push
loopne
xor
cmc
push
add
xchg
dec
cmp
lahf
dec
aad
xchg
inc
les
sbb
jp
pop
ucomiss
xor
sub
lea
mov
hlt
push
mov
mov
jae
into
inc
shl
cmps
test
into
pushf
and
jp
xor
or
ss
cmp
push
mov
mov
xchg
mov
(bad)
dec
lea
clc
int3
(bad)
ins
into
push
push
fs
jnp
jne
cwde
xchg
mov
jl
imul
inc
push
xchg
jb
push
sbb
mov
pushf
jle
xchg
jae
std
outs
add
ins
push
sub
inc
sub
jbe
adc
cdq
mov
xchg
lods
aas
mov
pop
(bad)
into
pushf
pop
movs
mov
popf
mov
cmp
mov
jne
(bad)
push
call
cmp
mov
mov
(bad)
ficomp
push
mov
push
mov
and
xchg
dec
cwde
mov
addr16
into
jg
sbb
sbb
xchg
outs
pushf
pusha
and
mov
sub
addr16
popa
scas
into
cdq
dec
mov
popf
mov
into
iret
movs
pop
aad
pop
shr
mov
mov
bound
test
(bad)
jg
xchg
mov
outs
dec
xchg
cs
pop
mov
sahf
into
ret
fcmovnu
sub
mov
adc
push
stos
cmps
sub
mov
scas
int3
mov
mov
dec
mov
aaa
mov
mov
or
shl
and
js
mov
mov
xchg
pop
mov
pop
mov
mov
cmps
sbb
push
cs
(bad)
jne
(bad)
addr16
jg
and
mov
mov
(bad)
push
stc
movs
mov
mov
aas
mov
ja
aam
jmp
xchg
popf
in
dec
jno
out
sub
fisubr
push
rcl
shl
cmc
lock
ret
sahf
enter
mov
sbb
cmp
xchg
addr16
jns
mov
xchg
xchg
scas
pop
in
(bad)
iret
movs
cs
xor
push
test
ins
retf
into
cmp
pop
mov
scas
imul
or
xchg
into
cli
mov
into
test
xchg
mov
scas
sub
rcl
test
sub
(bad)
add
and
test
data16
push
test
mov
mov
mov
cmp
gs
mov
cmc
mov
and
xchg
inc
mov
sbb
fstp
inc
cmp
adc
fcom
push
lods
dec
test
mov
push
fisub
scas
ins
xchg
pushf
mov
(bad)
sbb
and
lods
outs
push
into
test
fmul
std
das
and
(bad)
stos
rol
cld
mul
mov
push
cli
push
aam
sub
pop
pop
aaa
cmps
xor
mov
inc
stc
in
fsubr
jno
mov
dec
add
sahf
std
lods
add
mov
pop
punpckhwd
jae
mov
(bad)
aas
test
xchg
cmp
lea
mov
add
mov
xchg
lahf
aas
jns
js
adc
outs
dec
xchg
inc
dec
dec
ins
xchg
cdq
scas
push
daa
push
aam
jmp
ror
jg
es
movs
inc
(bad)
shr
pusha
popa
xchg
sub
pop
aam
sub
into
xchg
(bad)
sub
int3
iret
sbb
inc
cmp
dec
xlat
into
pop
xchg
jle
xchg
popa
dec
mov
jnp
(bad)
je
popf
jl
sahf
into
js
fwait
jb
mov
jmp
sbb
(bad)
fist
aaa
mov
iret
inc
out
mov
pushf
mov
mov
jns
jmp
xlat
sar
mov
push
pop
std
test
inc
test
dec
stos
xor
arpl
in
jnp
sbb
lds
mov
cmc
test
mov
popf
mov
xchg
into
xchg
jge
push
cwde
dec
cmp
jnp
mov
ss
mov
push
(bad)
shr
(bad)
cmps
pop
push
sub
mov
push
lea
push
iret
pop
sbb
aad
xchg
cld
mov
inc
pop
test
ins
data16
cmp
iret
into
and
shl
cs
mov
and
ret
aas
lahf
mov
and
sahf
outs
xor
test
pop
(bad)
pusha
pop
xchg
loopne
xor
mov
mov
aas
aam
push
push
fdivr
dec
cs
inc
xor
inc
xor
mov
out
scas
aas
repz
lods
fst
rol
(bad)
jno
into
dec
mov
lea
call
stos
loopne
dec
add
into
arpl
xchg
nop
xchg
outs
int3
and
int3
fld
iret
call
ret
mov
(bad)
pop
aas
mov
add
test
(bad)
mov
adc
popf
xchg
jl
das
(bad)
iret
dec
jmp
mov
outs
into
lea
jne
adc
add
xchg
push
xor
mov
sar
into
push
or
mov
mov
inc
mov
aas
in
mov
push
dec
pop
iret
mov
adc
test
nop
test
into
popf
xor
inc
retf
iret
inc
icebp
arpl
mov
enter
out
iret
data16
mov
adc
mov
into
mov
into
cmp
retf
rol
into
loopne
cmc
xlat
xor
iret
dec
pop
das
xchg
nop
adc
aaa
enter
mov
pop
psubw
arpl
movs
icebp
mov
push
fimul
fs
xor
sahf
mov
jmp
push
xlat
mov
jnp
aas
call
mov
iret
mov
or
add
cli
fst
test
sbb
mov
mov
xchg
inc
jg
outs
inc
xor
add
push
or
mov
dec
(bad)
fsubr
push
mov
adc
test
dec
push
mov
outs
sbb
lahf
xchg
jg
(bad)
mov
jae
in
popa
stos
push
fld
rcr
aaa
pop
div
out
jg
retf
cmp
mov
in
xor
enter
es
out
test
xor
lahf
scas
mov
adc
jmp
and
sahf
fwait
xchg
and
pop
adc
stos
(bad)
adc
loop
sub
jl
dec
outs
daa
xchg
xchg
inc
push
mov
mov
mov
mov
imul
xchg
fs
xor
(bad)
outs
les
pop
stc
into
sub
sbb
dec
and
rcl
pop
test
aaa
fs
inc
pop
inc
push
movs
fisub
into
and
ficom
enter
pop
or
lea
push
and
jp
popa
jle
dec
cmp
sub
retf
sbb
push
and
xchg
mov
dec
sbb
bound
js
in
pop
mov
xor
push
sbb
ds
div
(bad)
repnz
int3
les
or
cmp
fcomp
xchg
fcom
out
xchg
ror
push
mov
rep
mov
movs
mov
jo
pushf
lods
and
ds
in
xchg
sahf
out
ins
mov
pop
mov
in
push
and
adc
imul
outs
shld
lock
sbb
adc
scas
cmp
bound
push
pop
mov
and
xchg
jle
(bad)
cs
call
pop
out
repz
lods
mov
aam
test
xchg
daa
lods
add
mov
add
retf
into
je
pop
and
pop
cmp
into
inc
or
add
into
out
inc
push
lahf
call
or
lahf
cdq
xchg
pusha
jne
dec
mov
xor
(bad)
ror
cmp
cld
movs
sub
mov
mov
mov
rcpps
cld
pop
fistp
fisttp
fisttp
mov
in
repnz
mov
into
xchg
push
mov
sbb
outs
pop
xchg
dec
inc
cmp
hlt
mov
push
into
imul
jmp
dec
or
jmp
dec
pop
ins
bound
stos
test
imul
psrlq
pop
fdiv
pop
clc
into
(bad)
jo
loopne
xor
jge
sub
sahf
jno
mov
mov
scas
jp
mov
and
jl
dec
scas
mov
jae
(bad)
fcmovnu
ret
(bad)
outs
imul
loop
loopne
or
bound
aas
inc
push
mov
idiv
into
pushf
or
mov
les
into
cmp
dec
push
cmp
sbb
repz
into
dec
adc
(bad)
loop
fisttp
and
push
(bad)
(bad)
dec
jl
inc
push
jmp
mov
xchg
mov
test
aam
push
mov
rcl
sbb
push
pop
leave
scas
push
dec
lahf
inc
out
stos
push
test
cs
bnd
cdq
xchg
daa
jecxz
(bad)
retf
and
push
addr16
mov
mov
movs
sti
xor
lods
outs
test
pop
out
sbb
cld
sbb
in
into
dec
sbb
fs
bswap
pop
or
nop
jg
dec
mov
sar
ror
dec
clc
cmc
loopne
ret
imul
sar
test
xor
(bad)
jl
loopne
into
push
aaa
xchg
pop
ds
and
lods
ja
pop
cmp
sbb
xchg
jl
jg
jge
mov
bound
pusha
add
pop
into
sahf
lahf
and
int3
pop
push
into
loope
add
push
sbb
std
push
or
jg
dec
into
adc
loop
imul
inc
xor
jmp
inc
push
hlt
leave
(bad)
push
inc
into
xor
retf
cld
int
mov
dec
(bad)
lds
cwde
xchg
sbb
mov
std
mov
dec
pop
into
sub
repnz
scas
stos
cmps
pop
fwait
xchg
mov
pop
mov
adc
inc
into
in
push
hlt
enter
dec
xor
jmp
sbb
pop
mov
in
jnp
push
pop
or
loopne
jmp
jp
inc
pop
std
sub
icebp
xor
out
or
inc
dec
push
cmp
nop
std
int
jno
retf
enter
pop
test
sahf
fs
push
xor
imul
cmp
or
add
pop
adc
aas
ret
test
or
push
scas
out
enter
ret
into
test
fisttp
dec
int
inc
cs
dec
cdq
into
push
ins
popaw
inc
push
out
inc
or
push
and
dec
cs
adc
repnz
das
fisttp
xor
mov
add
cmp
in
pop
cmc
mov
idiv
mov
jg
pop
adc
in
xor
les
in
repz
jmp
mov
ins
jecxz
push
scas
arpl
mov
arpl
or
mov
icebp
bnd
dec
ret
jecxz
xchg
into
push
push
or
adc
out
adc
jge
sbb
icebp
ins
dec
push
inc
pop
xchg
sti
pop
out
mov
cs
into
cmc
pop
or
or
repnz
aas
sbb
push
(bad)
je
push
cmp
and
retf
lds
cli
enter
les
into
(bad)
in
int
inc
ss
mov
(bad)
jecxz
das
mov
xchg
sahf
lods
adc
(bad)
test
inc
out
test
push
mov
jns
xchg
jg
dec
jb
out
push
das
push
push
ds
call
loopne
ja
nop
outs
into
pop
inc
add
add
int3
pop
aas
or
and
clc
dec
xor
pop
add
loope
outs
push
push
and
repnz
ins
call
pop
jecxz
hlt
ins
mov
into
cmp
outs
dec
add
push
dec
add
clc
(bad)
lds
mov
rcr
int
test
mov
add
ja
imul
loop
in
dec
xchg
dec
cmp
adc
psraw
stc
xor
cld
je
and
push
cmps
jg
gs
cwde
out
cmp
hlt
lods
push
cli
ret
fdivp
shl
and
jmp
push
mov
popa
xchg
fiadd
int
icebp
enter
pop
dec
mov
neg
out
mov
retf
push
(bad)
fdiv
pop
rcl
sbb
(bad)
shr
push
outs
xchg
push
xchg
push
xchg
addr16
and
icebp
adc
retf
mov
out
(bad)
ja
mov
push
fcomi
imul
ss
(bad)
fisttp
sub
nop
arpl
loopne
pop
mov
cwde
jae
lock
xor
repnz
adc
jle
aas
mov
outs
push
(bad)
(bad)
cmc
fcmovu
out
push
xlat
enter
div
sbb
int3
mov
mov
xchg
hlt
mov
and
(bad)
aad
rcl
fcmovbe
jmp
fsub
(bad)
ins
fxch
(bad)
in
ret
int
adc
(bad)
jae
lock
and
iret
scas
mov
mov
xchg
push
pop
adc
(bad)
or
hlt
les
mov
or
sub
ret
arpl
jno
call
jle
add
(bad)
div
mov
rcl
fsubr
jmp
push
mov
lahf
cmp
xor
cmc
out
mov
xchg
mov
repz
div
cmp
ins
fmulp
out
and
mov
dec
cmps
or
sub
scas
(bad)
jno
push
push
aas
mov
repz
int
cdq
dec
and
fistp
ins
test
jmp
dec
ds
cmp
sbb
(bad)
push
das
popf
int3
sbb
mov
mov
shl
mov
lods
mov
mov
adc
repnz
add
mov
ror
repz
push
into
cmp
out
mov
nop
mov
into
imul
dec
jecxz
mov
out
jno
add
int
xchg
and
xchg
jecxz
enter
sub
adc
mov
cmp
stos
mov
test
pop
mov
(bad)
mov
repz
adc
scas
cld
mov
fwait
pop
xchg
into
adc
lds
jo
mov
mov
lahf
mov
xchg
mov
fdivr
scas
scas
cmps
(bad)
mov
xchg
ins
mov
sub
fisub
scas
fs
cmps
scas
push
ins
ror
fidivr
test
movsx
mov
push
cmp
xor
jl
ins
cmps
in
das
aam
cmps
mov
out
and
xor
lahf
xchg
mov
lds
rol
jb
mov
mov
lods
ds
jb
mov
lgs
lahf
jno
test
scas
outs
inc
mov
sti
xchg
sahf
fwait
sub
jb
mov
xchg
push
test
lods
jbe
cmp
pop
daa
cmp
test
or
popf
outs
or
mov
mov
mov
mov
imul
adc
add
jg
push
mov
arpl
xchg
loopne
outs
jge
cmp
mov
mov
test
xchg
ins
scas
xchg
pop
mov
dec
xchg
mov
in
(bad)
por
into
adc
dec
add
js
push
retf
cmp
push
push
or
dec
push
mov
xchg
pop
movs
add
inc
or
lods
in
inc
or
aad
popf
jne
cmpxchg
popa
push
lock
and
loope
inc
adc
and
dec
aaa
in
jo
and
mov
lods
aas
outs
arpl
into
jg
or
mov
popf
jns
push
sub
inc
or
mov
mov
push
nop
pop
push
adc
idiv
packssdw
sti
or
push
sbb
mov
into
jbe
mov
test
popf
sbb
mov
inc
mov
fwait
inc
mov
lahf
outs
and
dec
stos
and
xchg
dec
cmp
pushf
dec
into
das
xchg
inc
pop
(bad)
push
jmp
mov
cmovg
inc
into
add
xchg
pop
sbb
xchg
mov
lea
outs
xchg
inc
add
test
push
mov
pop
fistp
mov
xchg
mov
jne
jmp
jg
sahf
jo
cmps
popf
dec
add
mov
into
sbb
cli
test
jmp
sbb
mov
mov
jnp
xchg
into
jp
inc
add
push
mov
or
adc
cmps
xchg
and
out
mov
jge
adc
js
lods
(bad)
pop
sbb
lock
lahf
js
jb
mov
out
push
pop
mov
mov
xchg
pushf
fwait
cdq
into
sbb
pop
in
mov
lea
jne
mov
enter
imul
test
pop
iret
cmps
pusha
add
pushf
js
pop
sbb
pop
test
test
mov
xor
sbb
aas
test
adc
call
xchg
mov
jae
mov
ins
aam
shl
outs
sbb
mov
lods
mov
das
mov
push
iret
test
pop
mov
xchg
pop
mov
addr16
bound
mov
mov
scas
(bad)
push
scas
push
out
mov
popf
mov
lahf
or
add
xchg
adc
xchg
fwait
jmp
dec
loope
sub
out
aad
mov
test
mov
xchg
xchg
or
cwde
icebp
fadd
outs
ja
mov
iret
mov
cmc
aad
mov
mov
mov
lahf
test
sub
mov
popa
mov
sbb
fimul
out
sub
addr16
jle
pop
push
jne
cmp
(bad)
fnstsw
dec
lds
sbb
xchg
jno
fs
scas
or
cmc
movs
jb
sub
xor
mov
cmps
mov
imul
cmp
mov
int3
add
scas
mov
int3
jg
into
iret
(bad)
pop
sub
sahf
scas
outs
je
push
rcr
dec
call
lahf
ins
into
mov
xchg
mov
into
popf
sahf
cs
loop
into
xchg
inc
mov
mov
xchg
push
jae
mov
mov
mov
xchg
push
hlt
mov
imul
in
scas
mov
jg
push
inc
pop
xchg
lahf
add
ds
or
cwde
into
xchg
aam
dec
cs
or
das
inc
loopne
cmps
xchg
movs
mov
mov
mov
imul
pop
add
pop
fwait
stos
or
into
(bad)
fdivr
popa
mov
jae
mov
xor
push
push
cmps
iret
pop
add
into
push
mov
pop
ror
sbb
fnsave
popf
mov
mov
sub
fcom
fidivr
repnz
test
mov
dec
addr16
adc
in
mov
xchg
add
sbb
mov
ror
mov
dec
test
push
cmps
rcr
mov
adc
cmps
cmc
aad
mov
je
push
jecxz
stos
xor
xchg
push
xlat
mov
into
push
sti
ja
aad
xchg
aas
fxch
mov
or
mov
in
in
dec
jb
xchg
mov
dec
imul
push
xchg
mov
aam
test
push
iret
into
inc
sub
aaa
call
xchg
leave
xlat
ins
popf
xchg
(bad)
xchg
xchg
mov
or
(bad)
aad
cdq
nop
mov
sahf
cwde
mov
into
pop
or
or
shr
adc
xchg
pop
and
(bad)
adc
xchg
xchg
movs
adc
mov
mov
xchg
jecxz
xchg
pop
jo
movs
ins
bound
push
ja
xchg
or
js
scas
or
mov
cmp
xchg
mov
jg
adc
test
mov
(bad)
xchg
cdq
stos
push
enter
jp
adc
(bad)
jmp
test
cs
push
pop
cmp
sbb
dec
jge
mov
inc
mov
out
(bad)
add
leave
sahf
ja
dec
mov
outs
lods
mov
mov
xor
(bad)
mov
dec
sbb
rcl
jecxz
inc
mov
push
repnz
cdq
(bad)
pop
and
sbb
cld
retf
push
into
and
or
sbb
sbb
sbb
rol
test
pop
cmc
fbld
lds
jae
stos
or
lea
mov
mov
pop
outs
sbb
and
imul
mov
cmps
adc
adc
add
ret
dec
and
jb
into
repnz
inc
push
in
loop
sti
loope
(bad)
mov
into
add
out
loopne
jnp
xchg
lock
dec
lds
ja
xchg
ss
mov
cwde
test
shr
shrd
cmps
test
lahf
xchg
das
sbb
sbb
inc
or
jae
push
mov
(bad)
pop
jns
cmp
dec
into
fst
aam
pmaddwd
aam
stos
out
shl
dec
inc
call
and
fwait
xchg
popa
xchg
lods
imul
push
fimul
xchg
lock
into
ror
xor
loop
bound
aas
call
mov
cs
and
xchg
jmp
out
sahf
nop
addr16
into
push
dec
cmp
or
stc
xchg
pop
adc
xchg
dec
jg
xchg
into
hlt
xlat
shl
mov
lock
or
bound
unpcklps
add
mov
pop
xor
jle
std
out
(bad)
cmp
cmc
mov
out
into
dec
inc
cmp
lds
out
fisubr
push
popf
addr16
push
sub
mov
out
ror
ret
xor
retf
jmp
test
sub
out
push
pop
aas
aas
push
cmp
into
outs
inc
push
fdivr
scas
(bad)
int3
frstor
neg
mov
(bad)
sti
les
repnz
xchg
xchg
stc
into
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovne
(bad)
test
(bad)
rcl
jge
iret
aas
dec
(bad)
jg
jbe
js
test
enter
xlat
xor
xchg
xor
xlat
(bad)
push
clc
shl
fsubr
cwde
jbe
or
aas
mov
stos
push
and
sub
es
fldcw
stc
fcom
cld
inc
jmp
xor
push
mov
mov
(bad)
stos
ficomp
retf
dec
adc
dec
pop
or
sahf
cs
sbb
scas
(bad)
fcmovnbe
int
xor
adc
pmullw
fcom
fstp
jle
add
(bad)
cmp
mov
scas
iret
ja
movs
cdq
mov
cmp
or
sahf
xchg
iret
scas
(bad)
cli
retf
or
outs
xchg
sbb
into
stos
fwait
xchg
cmp
mov
mov
jb
mov
std
div
cmp
xor
add
call
sahf
in
aad
fsubr
scas
push
or
mov
dec
lods
scas
xchg
sub
mov
mov
cmps
arpl
(bad)
stos
daa
loop
mov
in
mov
pop
lds
dec
nop
dec
mov
mov
xchg
jb
and
mov
into
data16
data16
add
test
sbb
test
push
test
jbe
into
sahf
sub
jo
cmp
jg
push
scas
mov
mov
mov
mov
imul
cwde
xchg
jg
out
or
sub
mov
push
push
test
pop
mov
test
scas
xchg
movs
xchg
jecxz
je
lock
inc
out
mov
mov
mov
xchg
mov
loop
mov
mov
pushf
cwde
nop
scas
lahf
je
icebp
mov
imul
out
(bad)
in
test
and
mov
sub
sahf
jle
mov
mov
mov
mov
cmp
ja
into
xchg
ins
not
shl
jecxz
inc
sbb
inc
faddp
sahf
imul
loope
nop
add
xor
or
cli
out
test
sbb
fisubr
jno
mov
outs
pusha
or
pause
jno
gs
pop
mov
nop
dec
lea
mov
adc
mov
test
movs
mov
mov
mov
ret
(bad)
dec
(bad)
icebp
out
stos
ss
cmc
mov
call
mov
ja
and
stc
test
add
lahf
or
dec
mov
add
cmc
out
out
jne
pop
xchg
repz
lock
retf
loop
into
ja
adc
dec
repnz
test
hlt
lock
lods
pusha
je
cmp
test
jne
jg
jl
je
mov
or
mov
jle
retf
mov
adc
push
scas
inc
xor
lea
adc
dec
cmps
push
stos
dec
adc
(bad)
sar
dec
cmp
test
xchg
dec
retf
fwait
mov
jmp
scas
scas
push
out
adc
adc
pop
cmp
xchg
loopne
sub
movs
scas
in
add
sbb
sbb
mov
dec
inc
mov
daa
popf
lahf
pop
cdq
jns
mov
xor
not
mov
cmps
outs
lods
(bad)
mov
xchg
push
fadd
jl
push
enter
(bad)
leave
cld
jge
sub
mov
stc
fsub
cmc
cld
test
mov
loope
clc
add
shl
rcr
movsx
out
stos
mov
leave
adc
ins
add
in
les
addr16
or
pop
das
mov
mov
lock
mov
das
jmp
stos
sbb
movs
popa
out
std
add
add
clc
mov
cli
in
push
int3
adc
std
icebp
bound
jmp
sti
fdivr
mov
mov
leave
in
cmps
pop
mov
loop
xchg
in
xor
sbb
(bad)
cmc
xchg
out
lods
cld
ret
dec
mov
hlt
pop
sbb
push
out
cld
in
sbb
jg
out
push
popf
xor
bound
scas
ss
jno
in
add
and
fwait
mov
push
scas
stos
xchg
mov
mov
in
pop
popf
sahf
(bad)
mov
daa
jb
scas
(bad)
mov
dec
dec
inc
dec
adc
nop
ficom
popf
jmp
push
push
add
sahf
(bad)
idiv
xchg
push
mov
ins
push
sbb
test
lahf
pop
xchg
test
stos
push
clc
sti
sahf
fadd
jg
mov
cmp
cli
xor
daa
clc
and
dec
sbb
nop
push
ds
daa
pop
cmp
in
push
pop
cmps
sub
ds
and
inc
sub
out
push
inc
xor
push
jp
pushf
push
or
push
jno
push
test
sahf
and
popf
daa
(bad)
ds
mov
addr16
sub
push
mov
je
add
pop
inc
push
sub
inc
daa
xchg
pop
aas
mov
mov
inc
pop
cwde
jmp
cmp
cmps
xchg
bound
jl
sbb
push
movs
lds
dec
or
or
xchg
inc
test
mov
xchg
lock
sbb
mov
inc
push
mov
lock
nop
(bad)
movs
sub
pop
and
push
pushf
mov
mov
mov
leave
pushf
aad
inc
mov
pushf
adc
adc
call
sbb
mov
popf
pop
mov
js
pusha
fs
push
fmul
adc
sahf
std
add
mov
push
mov
lahf
mov
cld
into
imul
loopne
movs
adc
cwde
retf
(bad)
sub
ins
or
cdq
or
leave
xor
jmp
loopne
adc
in
cmp
xor
sub
add
xchg
jmp
push
push
dec
ja
pop
pop
jo
and
mov
xchg
call
in
or
cld
push
pop
push
or
xchg
inc
out
test
mov
(bad)
mov
lahf
cmps
cmps
(bad)
pop
ror
mov
sahf
mov
sub
cli
fst
inc
loope
or
mov
fs
mov
iret
ins
das
fs
cmp
adc
mov
movs
arpl
adc
sub
or
lea
adc
or
jecxz
sbb
in
scas
mov
adc
popf
lods
cmps
sbb
fcomp
pop
mov
fisub
mov
scas
cmp
stos
xchg
int3
adc
sbb
fisub
xchg
sbb
adc
clc
pop
dec
sahf
scas
pop
(bad)
sbb
mov
icebp
emms
mov
out
mov
dec
call
sbb
mov
out
out
in
cld
std
enter
xchg
movs
push
aad
add
in
retf
mov
int
shl
pop
(bad)
jns
mov
das
dec
jmp
push
(bad)
mov
ins
mov
sub
ins
fwait
stos
in
loopne
addr16
hlt
jecxz
dec
push
sbb
es
lfs
adc
or
shl
lods
in
cld
add
push
loopne
sbb
packssdw
pop
mov
fld
cld
in
add
sbb
clc
loop
mov
out
loope
mov
mov
sbb
fisub
mov
in
xchg
fs
pop
sbb
fwait
ins
sahf
lods
movs
clc
add
(bad)
xor
sub
cld
mov
in
aam
lods
cmp
lods
aas
adc
and
and
mov
shr
idiv
add
sbb
adc
adc
aaa
inc
mov
loope
movs
sbb
aas
mov
mov
ins
cmps
cdq
cwde
sbb
sub
fild
das
xchg
lock
push
outs
aaa
jmp
jmp
jnp
push
sti
cmp
or
cmps
add
movs
sbb
mov
into
sbb
in
lds
in
xchg
scas
std
xchg
dec
push
fstp
sbb
cld
sbb
jmp
icebp
xchg
mov
out
push
in
mov
mov
pop
fwait
mov
pop
stc
out
xor
rcl
xchg
adc
imul
enter
movs
pop
add
or
bound
xchg
mov
scas
adc
in
imul
jg
inc
in
mov
sti
shl
iret
xchg
(bad)
mov
add
daa
in
leave
(bad)
mov
mov
pushf
dec
outs
or
dec
(bad)
pop
jecxz
jg
mov
mov
call
(bad)
jmp
cmps
mov
pop
sub
test
test
cmps
mov
push
cmc
push
mov
call
popa
sahf
xor
imul
jmp
inc
cld
adc
neg
xchg
(bad)
adc
push
int3
pop
mov
sub
push
mov
pop
push
add
pushf
xchg
xchg
in
adc
addr16
mov
imul
cli
retf
pinsrw
pop
jge
mov
nop
jns
(bad)
out
(bad)
ss
lea
ins
lahf
and
mov
add
jmp
mov
in
mov
mov
bound
movs
test
push
add
pop
stc
mov
mov
push
cmp
movs
dec
arpl
adc
ret
mov
cdq
xlat
mov
pushf
lahf
xor
imul
jg
movs
sahf
and
outs
dec
fcmovnu
out
icebp
adc
call
in
push
push
es
fwait
push
aad
jmp
repnz
mov
in
hlt
or
mov
clc
mov
lea
mov
outs
xlat
out
sbb
in
jp
mov
scas
das
mov
add
adc
ins
outs
fidiv
not
clc
fidivr
mov
addr16
ins
mov
ret
ficom
sbb
and
in
lods
dec
call
xchg
and
adc
or
pop
pop
xchg
idiv
leave
xor
xchg
sub
aas
sbb
(bad)
mov
and
mov
or
xchg
cld
cli
cmc
or
mov
cdq
loopne
in
cwde
dec
xor
(bad)
and
adc
loop
mov
jmp
or
out
inc
sbb
jg
loopne
shl
rol
push
jg
out
loope
aam
jge
lea
add
pop
int3
(bad)
in
sbb
addr16
mov
adc
jnp
mov
sbb
in
in
sub
mov
dec
xlat
fsubr
movs
popf
hlt
xchg
test
mov
pop
imul
dec
mov
sbb
movs
and
adc
enter
sub
push
mov
loope
pop
mov
out
mov
(bad)
(bad)
jmp
sbb
fild
xchg
mov
sahf
popf
xchg
xchg
cmps
in
jmp
out
(bad)
icebp
inc
mov
movs
lods
out
push
aas
loopne
rol
jns
push
mov
sbb
or
pop
sub
mov
cld
or
div
mov
and
cmps
data16
(bad)
adc
pop
add
mov
adc
and
fisub
sub
cli
push
mov
imul
mov
std
outs
jno
push
dec
cmp
dec
lahf
les
dec
in
ret
mov
push
jbe
xchg
std
rcr
retf
add
(bad)
jmp
neg
mov
in
lock
mov
mov
sbb
scas
mov
addr16
into
xchg
pop
cmp
leave
pop
in
mov
jmp
mov
adc
sub
xchg
dec
call
sbb
pop
cli
push
in
mov
mov
loop
xchg
add
stc
mov
adc
test
je
(bad)
pushf
test
test
stos
shl
shl
fwait
leave
inc
cmp
ss
cmp
loopne
mov
adc
sub
dec
int
int3
dec
mov
and
dec
mov
and
arpl
aaa
sub
push
test
push
in
mov
mov
aas
in
(bad)
(bad)
sar
iret
and
cmps
adc
cmp
sub
pop
sbb
mov
pop
test
rol
mov
sar
cli
pop
aam
jecxz
inc
aaa
dec
pmaxsw
add
inc
xor
ret
or
test
stos
les
push
jecxz
call
jmp
xor
dec
in
sub
adc
(bad)
icebp
sub
iret
mov
or
cmps
imul
xlat
scas
mov
add
xchg
ret
sahf
cmp
mov
(bad)
mov
cmp
mov
popa
mov
mov
mov
les
ins
popa
mov
adc
inc
xchg
mov
fwait
add
fdivrp
or
jb
fld
popf
loopne
mov
cmps
mov
or
add
jle
sub
clc
setge
repz
lods
sbb
or
repz
cmp
mov
sbb
push
push
in
mov
jmp
xchg
or
pop
push
mov
mov
sub
or
mov
mov
(bad)
cmp
sahf
in
std
das
add
fmul
mov
shr
ds
pop
push
stos
shl
(bad)
sbb
mov
stos
cld
mov
icebp
mov
call
dec
in
loop
emms
mov
jae
sbb
or
ins
cmps
xor
scas
ret
(bad)
mov
sub
test
pop
loope
jns
inc
lahf
les
push
cld
in
xchg
adc
adc
jmp
gs
adc
add
push
jmp
or
sub
in
jecxz
call
stos
jne
sbb
aaa
adc
cmp
cmp
das
and
xlat
adc
push
jo
pusha
pop
(bad)
outs
pop
push
pop
pop
xchg
enter
arpl
and
mov
or
fwait
xchg
lahf
or
jge
inc
dec
mov
push
std
sbb
jge
mov
sbb
(bad)
pushf
les
div
adc
call
ja
cwde
jge
mov
push
mov
imul
or
push
xor
inc
ss
push
pushw
cmp
push
mov
(bad)
in
in
sbb
stos
mov
jo
out
in
add
add
mov
in
in
mov
sbb
cmp
mov
pop
sbb
ds
add
sub
pop
scas
cmp
mov
mov
xchg
adc
popf
xchg
dec
mov
test
in
ja
cmps
call
inc
xchg
fwait
mov
shl
gs
sti
xor
fwait
int3
das
aas
mov
cmp
mov
jmp
pushf
dec
test
add
mov
leave
bound
outs
mov
push
inc
jnp
jmp
mov
lods
or
fldcw
mov
mov
lods
mov
push
imul
enter
pusha
mov
sbb
xchg
imul
xor
int3
dec
in
xchg
popf
mov
cmps
jmp
push
(bad)
sub
cli
jne
addr16
into
dec
push
enter
cld
ret
cli
add
cmp
psubw
mov
jo
jmp
mov
jmp
or
in
addr16
push
retf
xor
ss
sbb
js
mov
loope
mov
and
or
bound
adc
aad
(bad)
and
retf
mov
gs
add
push
in
leave
add
lods
push
out
neg
xchg
xchg
mov
or
cmps
adc
pop
mov
cmps
add
daa
std
mov
xchg
pushf
imul
jmp
dec
pop
iret
mov
cmps
mov
or
aas
sbb
mov
push
mov
mov
fistp
repnz
xor
adc
(bad)
repnz
add
imul
inc
(bad)
mov
pop
loope
movs
xor
das
and
or
or
lock
mov
or
in
mov
pop
mov
mov
xor
sub
cmps
mov
in
shr
cmp
movs
popf
cld
cmp
mov
adc
mov
loope
(bad)
cmp
jl
dec
in
repz
lahf
nop
pop
sub
popf
nop
pop
sub
inc
sub
imul
ins
iret
in
push
mov
jnp
in
int3
xchg
mov
in
test
std
adc
mov
mov
xchg
adc
lahf
xchg
push
add
cmc
out
xchg
lock
in
pop
sbb
mov
or
and
xchg
fwait
jo
lea
out
mov
loop
test
xchg
call
sub
jp
in
cli
jmp
popf
xchg
mov
mov
or
imul
mov
pop
xor
mov
sbb
ret
sbb
ror
ins
xchg
clc
mov
fs
jnp
pushf
mov
or
jle
(bad)
popf
fucomp
add
dec
sbb
add
mov
adc
add
popf
add
cwde
mov
loop
mov
xor
push
fsubr
mov
dec
fwait
call
mov
ss
jl
xchg
dec
repnz
dec
fadd
aas
sub
mov
mov
push
xchg
int3
jl
pop
dec
and
imul
in
inc
hlt
ds
inc
into
in
call
jge
mov
jae
ds
fcomp
leave
popa
cmp
(bad)
mov
mov
(bad)
mov
sbb
mov
mov
add
outs
out
or
scas
sbb
adc
stc
(bad)
fwait
push
and
(bad)
aas
sbb
enter
add
dec
fwait
sbb
clc
cmps
sbb
loop
loop
mov
std
inc
add
sub
add
mov
jg
xchg
pop
dec
mov
adc
mov
lahf
sbb
or
mov
out
movs
rcr
xchg
add
(bad)
jmp
xor
xchg
mov
hlt
clc
sti
mov
addr16
outs
out
in
frstpm(287
add
push
adc
sub
xchg
in
jns
add
push
cmp
or
data16
push
cld
mov
jmp
xor
mov
xor
je
dec
sbb
sti
loopne
jl
add
push
sbb
sbb
movs
movs
fnstsw
in
sbb
xor
xchg
movs
call
push
data16
jmp
sub
mov
sbb
loop
inc
add
sbb
sbb
mov
int
popa
aas
(bad)
(bad)
sti
imul
sbb
pop
jecxz
pop
mov
mov
adc
int
xor
addr16
sub
(bad)
jmp
lar
sub
mov
dec
test
sti
stc
enter
jmp
adc
and
mul
sbb
pop
mov
sbb
mov
dec
mov
dec
pop
pop
aas
ds
jg
adc
shl
sub
(bad)
pushf
mov
or
ret
ja
bound
retf
and
adc
push
retf
movs
retf
sbb
mov
or
scas
inc
mov
stos
push
fs
add
adc
adc
sbb
adc
push
xchg
push
mov
jle
xor
xchg
jbe
sub
loopne
imul
push
int3
dec
xchg
xor
cs
out
or
aam
xor
pop
jge
mov
in
cld
mov
xacquire
adc
sbb
jmp
in
mov
call
loopne
mov
mov
scas
mov
push
in
test
cld
inc
pop
and
call
cmps
das
mov
push
mov
sub
int3
jmp
loop
in
jle
sbb
fucom
adc
popf
leave
scas
sbb
out
nop
mov
popa
jge
loope
stc
adc
idiv
mov
scas
out
sti
imul
aam
mov
or
enter
in
or
xor
or
inc
cmp
cwde
adc
fild
in
xchg
push
in
setg
push
mov
xor
dec
mov
push
mov
push
add
in
mov
icebp
cs
mov
sbb
jmp
leave
(bad)
jl
push
out
mov
xchg
and
in
call
sbb
or
cmp
sub
call
jge
sub
test
(bad)
adc
ret
mov
jg
sub
jecxz
pushf
mov
mov
jno
cwde
fcom
popf
(bad)
movs
repnz
mov
sahf
lods
cmps
mov
sub
mov
add
cmp
aad
(bad)
mov
cld
xchg
std
xor
mov
inc
ds
loop
imul
into
loope
out
aad
test
retf
and
fwait
jns
dec
mov
lahf
int
xchg
lahf
push
push
mov
pusha
test
inc
xchg
movs
dec
mov
loop
call
mov
(bad)
into
add
xchg
cmp
adc
retf
mov
and
out
or
jge
jg
mov
push
push
mov
mov
mov
mov
fcomp
sub
adc
mov
les
dec
pop
out
or
mov
je
mov
lahf
(bad)
mov
leave
sti
shl
xchg
lock
adc
test
or
or
lds
out
push
cmp
and
mov
xor
jge
mov
mov
ins
pusha
jl
addr16
scas
mov
jmp
mov
call
xor
cs
(bad)
mov
scas
mov
aas
mov
or
or
sahf
adc
sub
xor
jb
cwde
sub
or
mov
dec
mov
mov
hlt
es
pop
imul
pushw
pop
ret
inc
stos
repz
ins
aas
mov
les
jecxz
push
push
repnz
mov
scas
mov
aas
mov
loope
mov
and
fild
or
test
sti
cld
mov
int
xor
lods
or
adc
jae
adc
xchg
adc
sub
xor
arpl
add
add
push
scas
gs
fld
adc
push
or
call
push
cld
fs
xor
in
jno
sti
les
adc
scas
sbb
in
fsub
mov
adc
aad
or
loop
xchg
pop
jbe
or
shr
gs
outs
mov
addr16
out
in
loop
in
sbb
pop
dec
sbb
mov
adc
inc
mov
nop
jnp
and
or
(bad)
and
popa
fbstp
push
popf
jp
push
or
ja
in
clc
(bad)
adc
cmp
icebp
or
arpl
ins
mov
mov
dec
jmp
(bad)
jg
mov
ins
cmp
addr16
aaa
jecxz
pop
or
enter
imul
inc
or
rol
jmp
push
jecxz
popa
add
lea
or
or
js
xor
or
xchg
ds
and
fst
adc
push
pusha
xchg
jg
sbb
adc
adc
inc
xlat
jp
jne
dec
and
adc
fisttp
add
jmp
idiv
adc
inc
sub
sub
enter
clc
in
mov
jp
mov
pop
jmp
mov
add
test
stos
cld
lods
rcl
xor
mov
pop
dec
push
ror
push
addr16
add
fwait
sbb
push
adc
daa
cmp
cmp
sub
lahf
and
add
add
call
ror
xchg
fadd
mov
push
xchg
cmp
jno
test
xchg
movs
cmp
sub
jl
and
or
sbb
jae
xchg
out
push
mov
adc
jns
sub
sub
call
push
ja
jae
adc
cld
sbb
push
into
call
fsin
inc
std
cdq
xlat
jbe
lea
sbb
(bad)
cld
sbb
sti
jmp
pushf
mov
ins
jns
add
ficomp
adc
and
aad
mov
mov
mov
dec
pop
(bad)
dec
mov
jmp
sbb
fidiv
lock
out
je
xchg
lahf
cmp
les
ja
jge
jmp
pop
sub
pushf
or
shl
jl
cmp
adc
mov
lds
push
jns
lods
and
add
lds
adc
xlat
adc
xchg
pop
xchg
and
stos
jmp
sub
movs
sbb
xlat
mov
cmp
mov
test
xor
mov
push
mov
out
pop
fmul
jmp
dec
test
add
xor
push
lea
btc
addr16
mov
jmp
mov
sbb
jmp
(bad)
jmp
mov
aad
push
add
mov
aam
arpl
sahf
sbb
mov
adc
cmp
lahf
push
inc
arpl
and
and
cld
pop
in
push
aad
sbb
mov
adc
adc
stos
push
sbb
mov
aad
cs
std
stc
mov
mov
repz
cld
pushf
mov
loop
xchg
or
mov
adc
nop
fdiv
enter
xor
bound
loope
movs
arpl
xchg
jo
jb
mov
ins
(bad)
xor
les
imul
outs
sub
mov
fwait
aaa
cmp
dec
pop
or
adc
dec
push
xchg
adc
fldcw
jmp
mov
pop
cmp
addr16
or
int3
push
scas
push
dec
retf
sbb
repnz
aas
and
fwait
aaa
daa
mov
int3
xlat
loop
into
cwde
lahf
imul
out
sub
mov
ss
rcl
test
(bad)
jecxz
jmp
or
mov
arpl
or
les
xchg
mov
pop
jmp
mov
adc
and
sar
out
add
pop
aam
not
fsubp
fisttp
mov
xchg
adc
stc
call
or
cmps
sbb
loop
or
xchg
mov
or
clc
aas
lea
out
mov
leave
inc
stos
push
pushf
movs
scas
and
jne
mov
xchg
es
popf
in
std
xor
pop
icebp
cdq
push
stos
call
mov
xor
mov
popa
sub
cdq
sub
cmp
jmp
sbb
scas
gs
xchg
vpextrw
lds
push
fimul
std
arpl
sub
sub
or
add
push
loopne
imul
movaps
push
push
mov
push
xchg
je
scas
mov
xchg
iret
aas
arpl
ins
loopne
dec
test
out
clc
jbe
pop
adc
jmp
pop
es
fimul
mov
int3
cdq
xchg
test
cdq
js
sub
ins
fldenv
mov
(bad)
in
jmp
cld
call
daa
sti
cmp
sub
inc
cmp
mov
push
sub
mov
xchg
mov
mov
jne
lock
adc
ins
test
retf
inc
xchg
mov
sar
es
pop
mov
es
or
add
fild
fstp
gs
jo
fldcw
fisub
lock
and
scas
(bad)
in
loope
cli
sti
sahf
mov
pop
mov
lods
inc
dec
test
test
mov
xchg
mov
mov
mov
outs
cmp
in
mov
hlt
mov
mov
pop
sub
pushf
ret
or
pandn
xchg
xchg
in
jae
jno
xchg
sbb
inc
cmp
fisub
in
fsubr
and
data16
(bad)
mov
(bad)
mov
lods
sbb
mov
sbb
mov
mov
sbb
in
lods
fisttp
xlat
jecxz
mov
cld
outs
das
sti
hlt
cmp
or
popa
xor
mov
mov
cmp
pop
cmp
mov
ret
or
shr
(bad)
or
(bad)
push
mov
or
jle
or
std
mov
das
(bad)
leave
push
add
leave
int
ins
xchg
popf
cmp
jno
jmp
mov
fld
loopne
(bad)
cmp
or
mov
push
jo
(bad)
cmp
mov
test
call
mov
push
cmp
mov
sbb
or
adc
cmc
ret
mov
fiadd
mov
pushf
rol
pop
imul
(bad)
sahf
fwait
push
jge
xchg
mov
lea
outs
mov
sbb
popf
shr
mov
cld
rol
hlt
daa
and
or
sahf
sbb
adc
dec
scas
imul
push
sub
sub
into
and
call
(bad)
hlt
es
cld
dec
ficomp
loope
xchg
xor
scas
sub
ret
jae
add
xchg
or
cwde
mov
stos
adc
(bad)
in
fld
dec
scas
pmaxsw
call
cmp
dec
push
add
cmp
adc
sub
fisttp
sub
rcr
cmps
jmp
fnsetpm(287
ret
sbb
adc
cmp
mov
jbe
or
iret
sbb
sub
fmul
pop
push
jg
jle
ds
out
nop
sub
retf
jg
mov
mov
aam
mov
pop
(bad)
pop
jae
dec
call
pushf
outs
xor
add
(bad)
push
cli
sbb
das
hlt
sbb
loope
adc
adc
mov
hlt
xchg
sbb
in
xor
adc
scas
or
mov
inc
loope
inc
std
mov
stos
frstor
imul
mov
outs
add
xchg
jg
(bad)
jg
scas
cmp
inc
fadd
jge
fdiv
jl
mov
or
xchg
jns
push
mov
or
sub
xor
mov
pop
add
pusha
fcomp
xchg
jo
outs
icebp
adc
xchg
rol
pop
adc
sbb
fstp
jnp
mov
mov
jmp
jne
out
sub
or
sub
in
repz
imul
into
or
jmp
dec
adc
stc
adc
neg
clc
loopne
pop
out
adc
cmps
jmp
out
test
dec
(bad)
mov
daa
push
int3
sub
rcr
cli
or
loop
pop
ds
test
cwde
xor
and
stos
cmp
xchg
mov
xor
cmp
xchg
in
(bad)
imul
in
call
(bad)
pop
pop
or
repnz
int3
jmp
mov
test
push
mov
add
cli
pop
mov
dec
mov
int
cli
aam
adc
out
adc
sbb
std
jecxz
fdiv
jge
mov
hlt
push
mov
cmps
mov
xor
and
adc
cs
pop
loope
cld
out
mov
fwait
jno
lahf
add
mov
(bad)
cld
or
mov
sbb
ins
add
into
sbb
adc
lds
popa
jo
jnp
mov
inc
imul
outs
sbb
mov
shl
jge
sbb
mov
bound
scas
loopne
or
cwde
or
dec
stos
stos
add
xchg
xchg
jle
xor
jle
push
call
movs
adc
test
ret
call
sti
ins
and
cs
dec
dec
jno
cmp
fiadd
jmp
fcmove
hlt
out
jmp
mov
mov
jmp
(bad)
lock
inc
cdq
call
ror
mov
icebp
inc
mov
(bad)
sbb
jmp
frstor
aad
out
out
mov
add
sbb
in
sbb
js
cld
scas
call
popf
mov
fsubr
pop
rcl
in
xor
or
mov
push
cld
call
out
pop
mov
mov
inc
sbb
pop
fnstenv
inc
jge
push
adc
cmp
cmp
mov
push
aam
mov
ror
rol
cld
sub
in
ret
sbb
outs
xor
in
mov
gs
ins
popa
mov
add
arpl
call
push
add
call
arpl
scas
sbb
unpcklps
outs
mov
xchg
inc
popf
pop
inc
dec
fcomp
jp
mov
shr
(bad)
cmp
popa
das
leave
sahf
test
cdq
mov
jmp
out
stc
stos
hlt
xlat
dec
call
sbb
pop
fld
or
test
pop
pop
sbb
leave
dec
fld
and
xchg
or
rol
std
cld
or
push
cmps
and
pop
call
maskmovq
xchg
out
imul
sbb
daa
sahf
(bad)
(bad)
frstor
push
mul
das
repnz
cmp
push
pop
lahf
les
popf
jp
jns
frstor
mov
push
lds
inc
fst
out
lea
mov
mov
sbb
mov
mov
fld
(bad)
in
or
add
fdivr
xchg
mov
add
(bad)
pop
das
or
push
push
fwait
pusha
jae
jns
adc
sub
jmp
xchg
ins
movs
xchg
pushf
daa
jl
pop
pop
push
sub
xchg
sub
mov
cdq
mov
dec
retf
loop
mov
push
ret
sub
fcomp
fdiv
out
outs
mov
pop
data16
stos
pop
std
jecxz
in
dec
sbb
lea
stos
sbb
loopne
xor
imul
fwait
lea
xchg
add
jns
bswap
sbb
stc
mov
loop
fsubp
outs
sbb
sbb
in
push
test
(bad)
add
jno
jno
lds
shl
lods
ds
bound
jno
jge
mov
pop
mov
sub
mov
mov
in
loop
int3
pop
mov
or
aad
stc
jge
pop
or
jl
(bad)
xor
inc
mov
inc
mov
inc
(bad)
xchg
jnp
push
in
retf
sbb
dec
sbb
test
inc
push
add
mov
fs
push
jg
clc
push
in
jne
jle
add
inc
fidiv
jns
data16
hlt
add
or
and
push
sbb
xchg
lock
mov
in
dec
add
stc
mov
sahf
dec
sbb
and
mov
popa
sub
push
pop
lea
sbb
cmp
cmp
inc
nop
inc
add
push
push
mov
dec
push
test
ss
lahf
cmp
adc
int3
cmp
in
sahf
cwde
stos
rcl
push
mov
(bad)
push
jl
aas
or
cmp
ret
inc
push
mov
adc
cmp
xchg
test
dec
xchg
in
sbb
mov
(bad)
or
outs
mov
test
rol
call
xchg
add
repz
sahf
stos
jle
xchg
cmp
std
cld
repz
xor
arpl
adc
xchg
xchg
test
scas
jae
dec
pop
push
xchg
sbb
adc
pop
cdq
mov
(bad)
push
mov
sub
adc
push
movs
or
sbb
outs
adc
div
xor
(bad)
addr16
loopne
pop
in
cmp
cmps
adc
in
cld
xchg
fild
lahf
mov
leave
add
inc
sahf
fwait
push
aam
jle
adc
pop
jnp
xor
jae
mov
dec
or
stos
mov
pop
outs
xchg
push
or
xor
ret
cld
(bad)
in
sahf
xchg
addr16
or
push
add
add
xchg
mov
test
in
adc
cmps
adc
js
dec
push
push
stc
mov
pop
jge
repz
mov
retf
retf
in
inc
ret
data16
mov
in
jo
fdivr
adc
ins
pusha
popf
fs
les
ret
out
xchg
in
xchg
loopne
pop
mov
sti
fsub
cmps
iret
jmp
(bad)
in
add
adc
test
(bad)
in
push
push
fwait
int3
xor
call
(bad)
cli
mov
fcom
std
add
neg
aaa
xchg
mov
mov
and
cli
daa
mov
retf
call
sti
clc
mov
fst
test
std
std
loope
push
inc
mov
les
hlt
cld
pop
mov
mov
adc
add
jmp
cwde
jmp
addr16
lds
push
pusha
loope
dec
mov
ret
scas
or
mov
gs
and
lea
dec
ret
cmp
mov
jg
jbe
jmp
sbb
movs
sbb
aam
in
or
scas
mov
mov
ins
pop
in
sub
(bad)
mov
clc
hlt
mov
xchg
add
jp
mov
pop
(bad)
daa
es
bound
mov
mov
xchg
mov
mov
pop
test
movs
cmp
or
mov
jo
test
mov
dec
jnp
adc
sbb
popf
inc
mov
popf
add
sbb
sub
add
call
arpl
shl
push
(bad)
pop
ret
pop
lahf
cmp
and
adc
cmps
nop
mov
adc
pcmpeqw
sbb
dec
inc
pop
mov
cmp
mov
mov
dec
mov
jmp
adc
retf
mov
popf
std
imul
jp
dec
cld
add
repz
or
mov
mov
ja
push
dec
xchg
sahf
ror
sbb
xor
push
stos
movs
sub
ins
jmp
ins
jmp
cli
mov
sbb
push
cld
jo
adc
and
pop
aad
mov
xchg
mov
mov
pop
enter
loope
mov
or
add
call
out
iret
add
jle
inc
jb
test
fxch
daa
movs
push
aad
loop
mov
inc
jbe
out
(bad)
adc
scas
and
add
je
sub
das
fwait
mov
sahf
sub
pop
cmp
sub
jo
(bad)
mov
out
jg
add
cmp
jle
add
jnp
xchg
lahf
xchg
sbb
cmp
arpl
retf
cmp
cli
fwait
xchg
sbb
clc
repnz
rcl
sti
add
xor
or
repnz
dec
stos
scas
or
inc
in
pop
jp
or
jmp
inc
inc
cmp
ret
arpl
fstp
inc
in
scas
shl
ret
loopne
push
dec
sub
mov
nop
sahf
or
je
popf
enter
int3
adc
xchg
pushf
adc
mov
xchg
fwait
dec
ins
xchg
loop
aaa
test
in
sub
(bad)
and
lods
sub
sub
dec
inc
(bad)
push
cmp
jns
mov
jb
mov
inc
movs
in
in
clc
in
xlat
xchg
pop
outs
in
sbb
jmp
pop
mov
pop
cmp
ins
sbb
adc
outs
pop
or
add
adc
push
adc
lock
cdq
jecxz
ins
lods
or
dec
test
retf
xchg
jnp
mov
xor
pop
ficom
fwait
and
xchg
pop
sar
pop
out
stc
adc
jnp
xor
loop
cmp
outs
or
imul
dec
xor
sbb
mov
or
shr
adc
mov
nop
add
jle
sub
sub
mov
cld
out
cmps
sub
cmp
mov
jge
cmp
xchg
scas
or
xor
call
adc
ret
xchg
dec
jnp
cwde
mov
mov
pop
test
or
sahf
mov
xlat
inc
js
jg
mov
int3
push
adc
retf
bound
adc
iret
xchg
lods
iret
push
or
xchg
push
mov
pusha
movs
push
mov
mov
jno
sub
stc
ficom
pop
in
addr16
pusha
or
or
call
ror
xchg
mov
mov
(bad)
jns
or
push
add
mov
aam
or
frstor
mov
(bad)
mov
mov
loope
test
mov
popa
cld
mov
add
adc
add
repz
cmp
outs
add
inc
mov
clc
loopne
(bad)
popa
lods
loope
adc
(bad)
jno
cs
fldpi
sbb
ds
dec
lods
sahf
push
xchg
data16
push
fnstenv
addr16
push
sbb
sar
fwait
jne
push
mov
jne
inc
mov
push
fwait
sbb
fwait
and
xlat
dec
sahf
cmp
pop
add
aas
xchg
inc
add
push
xor
sub
arpl
xchg
std
and
es
addr16
repz
sub
sbb
cmps
out
fdiv
out
bound
rcr
rol
call
pop
(bad)
retf
mul
cdq
mov
mov
in
jae
addr16
sbb
adc
repz
push
scas
mov
mov
add
dec
loope
or
mov
cld
lea
lea
pusha
movs
jnp
push
in
aaa
pushf
jecxz
lds
pop
sub
addr16
mov
popf
sub
sar
aaa
(bad)
sbb
les
mov
imul
fidivr
bound
movs
jg
out
mov
push
push
call
add
dec
cmp
ins
cli
add
xchg
jecxz
sub
dec
sbb
adc
or
repnz
aas
stc
ror
jge
fist
push
or
mov
xchg
inc
add
push
sbb
mov
into
xchg
neg
retf
in
sti
pop
lods
pop
out
xor
scas
cld
mov
fs
mov
sbb
fcomip
lahf
adc
loope
sbb
addr16
cdq
xchg
xchg
jnp
bound
sbb
sbb
aad
adc
pop
add
sbb
dec
in
lahf
popa
pop
fxch
xchg
push
cmps
jmp
mov
icebp
add
dec
sbb
jno
mov
add
retf
sub
popaw
jle
popf
ds
ins
push
leave
push
call
lahf
dec
mov
stos
sub
loope
mov
lea
das
mov
or
and
into
adc
sbb
femms
test
scas
dec
enter
cmp
test
mov
and
xor
xchg
mov
mov
dec
sbb
xchg
add
xchg
xchg
or
popf
jnp
jae
cmp
mov
add
in
cmp
and
xchg
inc
and
sbb
cli
(bad)
repz
(bad)
mov
call
fsubr
sbb
les
cmp
or
or
xchg
add
sbb
jno
mov
data16
mov
sbb
xchg
cmp
xchg
sbb
jge
mov
push
mov
sbb
scas
fwait
lods
sbb
std
loop
sar
mov
mov
cld
stos
in
sbb
and
sbb
ret
movs
cli
in
stc
sbb
or
popa
add
lds
ja
fcom
clc
das
jge
cld
(bad)
mov
xor
ror
(bad)
mov
inc
adc
mov
pop
leave
sub
(bad)
daa
movs
in
loop
les
pop
movs
push
add
jne
sub
(bad)
cld
stos
in
retf
fwait
mov
adc
clc
add
mov
cmp
(bad)
(bad)
jl
mov
ss
adc
sti
push
jb
pop
(bad)
cmp
cli
mov
jmp
out
loope
cmps
loop
test
shl
jecxz
jnp
cs
out
(bad)
out
mov
push
mov
call
(bad)
dec
out
icebp
sbb
cmp
(bad)
popf
mov
adc
sahf
jl
mov
sub
jecxz
dec
cs
idiv
jb
lods
sbb
pandn
pop
mov
xchg
loope
cmp
adc
xchg
cmps
pushf
sahf
push
rcr
pop
inc
jno
scas
ins
clc
jl
mov
mov
cli
push
push
ins
fld
pushf
fwait
pop
mov
call
mov
cwde
or
or
sub
sub
and
dec
xchg
cs
fstp
sbb
dec
retf
scas
jnp
out
nop
xlat
dec
fldcw
adc
int
loopne
sahf
pop
dec
sbb
(bad)
sbb
gs
add
fwait
pushf
cmp
xchg
pmulhw
ret
pop
lahf
clc
sbb
adc
mov
cwde
repz
neg
push
aam
sub
adc
pop
je
push
inc
mov
sbb
xchg
movs
or
pushf
cmp
cli
dec
mov
cdq
xor
xchg
outs
mov
int
mov
repz
sbb
xor
and
out
(bad)
jbe
div
fmulp
sbb
or
mov
adc
fimul
mov
(bad)
out
nop
mov
cmp
cmp
test
ins
pop
pop
leave
test
xor
xlat
sub
jns
sbb
jne
pop
data16
out
sbb
shl
push
sub
mov
repnz
stos
mov
jmp
mov
push
in
jge
imul
xor
push
fs
lods
mov
jns
arpl
repnz
mov
loopne
test
dec
lahf
pop
aad
test
push
sub
pop
mov
test
mov
sti
add
ins
fwait
pop
out
iret
mov
arpl
jmp
jne
fstsw
adc
cmps
mov
jl
inc
cmp
adc
and
(bad)
std
mov
xor
inc
ror
retf
mov
stos
ret
xchg
xor
jmp
push
leave
sub
rcl
ins
cmp
adc
pop
jecxz
jbe
or
sbb
or
(bad)
out
mov
addr16
repnz
mov
aas
imul
pop
repz
clc
or
pop
adc
enter
(bad)
std
sbb
je
or
shl
mov
mov
or
int3
lahf
je
out
ins
sahf
xor
out
mov
mov
in
mov
cmc
lods
xchg
nop
test
sbb
mov
imul
push
lahf
adc
cmp
or
pushf
cmp
adc
jmp
ret
cmps
and
adc
and
jmp
jecxz
fcom
mov
gs
mov
loopne
pop
jl
mov
mov
sti
pusha
xchg
mov
jmp
push
into
fstp
shr
adc
in
adc
cld
cli
fstp
jg
mov
div
cld
cmp
sub
popf
imul
mov
sahf
cmc
mov
ret
aas
mov
mov
call
add
jecxz
gs
mov
ins
int3
pusha
sub
ins
mov
xchg
sbb
or
push
jno
sub
pop
addr16
cli
(bad)
mov
pop
push
(bad)
out
sbb
add
test
inc
pop
mov
retf
leave
ins
mov
fnstcw
mov
dec
adc
fisttp
jmp
jns
(bad)
cmps
mov
adc
jge
ins
bound
sub
aad
inc
xor
fisub
add
cmps
cli
add
(bad)
out
xor
gs
mov
cmp
jne
sbb
jo
aas
aad
mov
cwde
clc
cmp
inc
stos
aas
ins
xchg
cli
scas
outs
mov
mov
mov
mov
test
imul
retf
xor
push
(bad)
lds
fistp
pop
popf
jmp
push
in
sub
(bad)
adc
pop
iret
inc
xor
or
ins
or
scas
xlat
je
jle
xchg
leave
sahf
scas
pusha
pop
jl
xchg
jns
xchg
mul
retf
mov
add
out
neg
and
fwait
cwde
ror
sub
mov
data16
jo
retf
ins
call
enter
repnz
push
cmp
int
inc
inc
enter
xor
mov
sub
push
sub
adc
aaa
ret
and
arpl
shr
inc
xchg
mov
maskmovq
test
das
(bad)
sub
xchg
pop
push
nop
clc
jecxz
sub
in
mov
cmp
mov
xchg
xchg
mov
loope
cwde
xor
std
cmp
add
xchg
cmp
sbb
in
shl
aam
sbb
mov
(bad)
xchg
adc
add
jo
das
push
in
pop
fild
add
fist
in
adc
pmulhw
mov
push
ja
cld
shr
sub
popf
mov
pop
sbb
fwait
mov
xor
add
or
mov
xor
popf
push
stos
inc
sbb
cli
adc
ss
test
mov
movs
jmp
mov
add
fistp
test
pop
sbb
enter
mov
xchg
(bad)
mov
lods
out
std
push
loope
out
mov
adc
sbb
popf
xchg
push
stc
cmps
or
sbb
and
test
leave
or
or
cmc
sub
push
jbe
into
je
xchg
es
outs
cmps
push
mov
imul
popf
xchg
sahf
cdq
movs
mov
fwait
lds
ret
scas
inc
fild
call
and
push
popa
out
mov
jecxz
xchg
les
cmp
mov
call
jns
mov
sbb
or
jmp
cmp
mov
mov
loop
rcr
mov
cs
sbb
sar
test
aam
push
(bad)
mov
test
or
call
jge
jno
shl
lahf
add
cmc
fisttp
sub
pop
sbb
fld
fsubr
mov
dec
and
push
pushf
mov
leave
mov
(bad)
or
test
shl
inc
xor
cmc
mov
fwait
xchg
and
out
std
addr16
(bad)
push
cld
(bad)
lock
jo
cmp
jl
add
mov
jge
sbb
lock
outs
push
jecxz
aad
imul
push
idiv
mov
jns
or
(bad)
jg
out
pop
ins
pop
jae
test
in
jecxz
div
add
cmps
(bad)
out
mov
cmp
cmp
loopne
cmp
push
cld
jnp
xchg
retf
fs
hlt
cmp
bound
test
adc
mov
and
mul
xor
fdecstp
in
jmp
add
jecxz
inc
data16
es
aad
jecxz
pop
out
hlt
fstp
inc
push
and
icebp
pop
std
sbb
mov
es
pop
mov
jmp
fimul
call
inc
cdq
pop
adc
lds
sbb
push
cdq
jmp
cmp
(bad)
push
or
jae
es
add
dec
or
enter
sub
jp
cmps
retf
int3
pop
push
push
imul
cld
sbb
fiadd
retfw
cmp
(bad)
fiadd
nop
addr16
ins
or
xchg
fiadd
xchg
fiadd
cwde
mov
(bad)
(bad)
jae
cmps
sbb
mov
loopne
cmp
retf
sub
mul
push
or
stos
mov
out
adc
jae
enter
popf
nop
push
aam
or
outs
gs
cld
or
fcmovb
xchg
push
xchg
inc
pushf
mov
imul
loope
aas
mov
or
pop
pop
mov
in
mov
neg
in
call
aas
ffree
mov
and
or
pushf
adc
(bad)
sbb
mov
and
sbb
repnz
gs
jmp
popf
mov
jmp
ret
xchg
inc
imul
xchg
sbb
push
sub
mov
jg
getsec
int
ja
xchg
cmp
adc
enter
into
mov
xchg
test
dec
push
mov
xor
xchg
retf
out
test
mov
repnz
shl
sub
xlat
mov
icebp
mov
xchg
int3
cmp
push
jge
inc
ror
arpl
lds
xchg
out
push
shl
aad
inc
xor
paddsb
call
xchg
mov
add
xchg
jne
in
jmp
add
call
xor
adc
push
sbb
(bad)
fcom
shl
nop
hlt
xchg
mov
dec
data16
adc
fdiv
mov
jl
push
ror
mov
pushf
sub
xchg
cld
pop
sbb
inc
aam
xchg
(bad)
sti
cdq
jo
inc
inc
fisttp
jmp
or
jmp
in
cld
mov
mov
sbb
movs
bnd
popa
cmp
jmp
nop
js
daa
xchg
pusha
push
xchg
xchg
or
push
inc
mov
pop
xchg
mov
in
dec
movs
in
je
mov
sahf
mov
ins
push
sbb
sbb
bound
xchg
cmp
mul
xchg
sbb
or
dec
sbb
repnz
inc
pop
test
out
push
inc
scas
sub
movs
or
or
or
stos
xor
pop
stos
sub
ficomp
push
mov
mov
fwait
mov
mov
xchg
out
iret
push
inc
(bad)
push
xchg
jp
mov
add
into
out
sbb
mov
(bad)
dec
ficomp
repz
ins
ins
aas
cmp
or
mov
and
loop
fcomp
in
aam
cmp
dec
cmp
loop
cmp
mov
dec
add
mov
ficom
and
mov
fwait
out
stos
ficom
stc
jecxz
popf
mov
shl
add
and
dec
add
or
adc
retf
and
dec
cwde
mov
inc
xor
and
cld
push
into
scas
adc
and
adc
jge
mov
leave
xchg
mov
test
and
scas
mov
cmp
sub
xor
scas
sti
outs
xchg
icebp
test
inc
fldcw
pop
popa
test
sub
leave
jge
cdq
(bad)
mov
cwde
inc
ins
cwde
clc
pop
inc
push
sbb
pop
fisubr
jno
jne
pop
jp
jmp
fwait
rol
cmp
jae
mov
in
retf
xchg
ret
adc
mov
jb
addr16
call
jb
fild
cmovl
mov
std
imul
adc
rcr
out
or
fwait
or
jne
shr
sub
xchg
jo
arpl
icebp
in
sub
mov
or
cmp
jmp
jmp
ds
add
and
test
mov
push
inc
mov
out
adc
(bad)
mov
not
xchg
adc
mov
cwde
jne
mov
xor
fs
push
mov
mov
xlat
lahf
pushf
cdq
or
sahf
cld
rcr
pushf
mov
rcr
(bad)
mov
pop
faddp
mov
loopne
cmp
sar
mov
mov
add
mov
sbb
ins
cdq
cmp
cs
jp
push
jbe
mov
test
push
push
test
in
cmc
jl
jbe
jg
in
or
mov
pop
(bad)
mov
addr16
jecxz
cmp
push
mov
stos
aad
or
lods
cli
sbb
xor
mov
in
out
pop
stc
call
lods
cmps
std
push
imul
in
jl
mov
pop
daa
movs
sti
or
jmp
out
jae
cwde
sbb
jae
push
repnz
inc
ror
push
mov
in
lods
cmp
leave
mov
jne
imul
popa
mov
loopne
out
and
fnstcw
mov
jl
xchg
jno
ret
clc
cmc
sub
pop
data16
xchg
or
sahf
cmp
scas
cmp
sub
dec
xor
in
adc
mov
arpl
sub
leave
mov
mov
and
pushf
xor
jns
inc
adc
mov
sbb
leave
pop
outs
jge
mov
mov
or
xchg
fdivr
pop
emms
sbb
mov
sbb
mov
fdivr
sub
jbe
sbb
xor
pop
lods
mov
push
sahf
mov
cmps
pusha
shl
pop
idiv
push
mov
mov
mov
jg
ret
mov
cmp
loope
inc
out
shl
movs
pmaxsw
fdivr
mov
cmp
cmp
pop
jo
aad
movs
sbb
call
xchg
sub
pushf
in
(bad)
rcl
mov
push
jne
xor
xchg
movs
arpl
mov
popf
sahf
hlt
cmps
mov
jge
sub
loope
pop
jl
popf
mov
jb
add
xlat
push
retf
mov
mov
sbb
or
and
cwde
mov
jle
xor
add
nop
sbb
test
sbb
mov
das
cmps
xchg
push
or
in
cwde
xor
mov
adc
out
mov
push
cmp
stc
or
pop
mov
(bad)
fisttp
sub
dec
mov
xchg
(bad)
in
ins
pop
mov
mov
stos
sbb
jecxz
pop
adc
pcmpeqw
jo
shr
add
add
pop
cmps
mov
sbb
mov
fst
sbb
mov
call
or
ds
mov
jge
lock
add
lahf
aam
cmp
test
test
scas
clc
sti
sbb
xor
cld
push
mov
test
ret
movs
xor
out
lds
and
in
retf
addr16
vdivsd
fadd
shl
shl
ds
adc
cmc
add
shr
mov
call
in
adc
hlt
ret
or
xor
retf
mov
ret
daa
pop
xchg
mov
mov
jp
mov
imul
lods
fucomip
dec
lea
in
pop
stos
mov
jmp
mov
jmp
mov
int3
sti
repz
xchg
ins
cmp
pop
jne
xor
jg
aad
xchg
or
xlat
jnp
(bad)
mov
(bad)
sub
ins
xlat
icebp
mov
mov
shr
inc
lahf
dec
cmc
ret
es
push
add
mov
mov
mov
ins
jmp
std
addr16
cmp
cmps
movs
sbb
pop
inc
imul
mov
outs
arpl
daa
fwait
mov
popf
mov
mov
popf
ret
mov
mov
loop
xchg
push
daa
sbb
fwait
daa
mov
lds
inc
mov
xchg
pop
push
stos
mov
or
mov
mov
cmps
ins
cmc
cwde
push
cwde
mov
sbb
push
mov
cmps
push
aaa
lds
sbb
adc
add
aam
movs
in
sbb
in
fisttp
and
jge
cmp
call
mov
loop
mov
jg
call
(bad)
daa
mov
cmp
imul
mov
mov
aad
es
sub
add
push
mov
popf
jle
xchg
mov
mov
loope
mov
arpl
idiv
add
xchg
fwait
jge
mov
pusha
pushf
or
call
test
lea
mov
mov
in
mov
movs
std
mov
movs
cwde
data16
mov
rol
jecxz
maxps
xchg
es
sbb
ins
mov
out
and
pop
mov
sbb
(bad)
or
sub
retf
xchg
push
fldenv
in
loope
push
mov
aam
push
mov
and
mov
ds
xchg
lea
and
(bad)
jp
mov
xor
jmp
mov
mov
dec
mov
or
xchg
cdq
push
jno
clc
mov
inc
push
push
mov
mov
inc
dec
(bad)
retf
mov
or
cmp
jmp
ret
ins
mov
shl
ins
mov
nop
out
mov
xchg
cmp
mov
cmp
mov
mov
mov
pop
mov
sbb
push
sub
inc
cmps
sub
mov
xchg
cli
lds
push
xchg
std
sbb
(bad)
sti
and
xor
mov
push
pop
adc
sbb
dec
jle
stos
mov
es
dec
pop
adc
or
or
push
sahf
in
fs
mov
push
xchg
mov
xchg
push
add
sbb
jo
arpl
int3
fistp
xlat
sbb
inc
jmp
out
int3
bound
jmp
fsub
(bad)
repnz
pop
adc
(bad)
aam
leave
lea
sbb
retf
and
out
pcmpeqw
(bad)
rcr
mov
cmps
push
mov
call
cdq
pop
jmp
repnz
xchg
dec
add
ja
ins
mov
test
mov
mov
or
sub
shl
sub
pop
mov
mov
sbb
jg
xchg
adc
(bad)
stos
stc
(bad)
pop
add
retf
mov
inc
cmp
push
jb
cld
(bad)
mov
xchg
aas
les
popa
inc
sahf
fcomp
push
fistp
imul
call
mov
mov
xor
mov
aam
rcr
sub
inc
les
sub
(bad)
xchg
cmp
popf
dec
mov
pop
sub
mov
xchg
(bad)
mov
dec
out
in
bound
sbb
jmp
jbe
repz
sar
or
pop
sbb
into
(bad)
push
clc
jecxz
adc
idiv
mov
sahf
adc
fcomp
rcl
nop
xor
cmp
push
mov
cmovnp
neg
fmulp
sbb
xchg
mov
dec
rcl
fld
(bad)
daa
pusha
mov
push
dec
aad
jno
pop
xor
imul
fcom
jmp
(bad)
xor
push
or
cwde
je
iret
xchg
lahf
imul
pusha
(bad)
mov
nop
and
adc
xchg
rcl
xchg
xchg
fwait
sub
dec
lds
std
stc
jmp
wrmsr
(bad)
ins
(bad)
inc
push
cwde
fs
jl
jmp
dec
fcom
je
jmp
cmc
jmp
sub
in
sti
rol
cld
push
cmp
or
pop
sti
cmp
ror
push
pop
mov
stos
sti
cdq
out
(bad)
(bad)
fwait
xchg
in
sbb
cmp
js
jmp
jecxz
xchg
xchg
jp
cmp
(bad)
sbb
add
sar
clc
or
sbb
sub
inc
clc
or
or
or
dec
pop
movs
mov
(bad)
xchg
js
mov
jmp
ret
xchg
push
push
pusha
cmps
imul
mov
les
push
fs
cmps
fidiv
(bad)
sti
mov
jl
dec
outs
mov
mov
mov
push
mov
js
stos
or
sbb
pushf
mov
add
shr
sar
ds
cmp
xchg
inc
and
mov
mov
xor
call
pop
xchg
xchg
fidivr
jle
push
std
je
xlat
out
mov
hlt
cs
repz
je
xor
movs
fwait
pushf
out
fcomp
lock
dec
or
cmp
or
ror
xchg
jb
mov
clc
scas
stc
hlt
pop
xor
xor
inc
clc
mov
mov
pop
xor
pop
sbb
or
icebp
mov
clc
xor
inc
clc
mov
push
or
pop
push
xor
or
xor
jne
data16
adc
lods
fsubr
xor
and
les
(bad)
adc
je
pop
int3
shl
int
xchg
and
add
cmp
sbb
cmp
sti
or
test
sti
push
sbb
and
popa
or
mov
xchg
xor
popa
or
sti
push
xor
les
xchg
xor
or
les
popa
or
push
cmp
cmp
xchg
and
or
lea
xchg
and
cmp
mov
xchg
and
daa
xchg
and
cmp
cmps
popa
or
sub
sub
les
xchg
xor
popa
or
push
push
sbb
push
push
xchg
and
push
fcmovb
xchg
push
xchg
and
or
xor
fdiv
mov
cli
inc
fcomp
dec
xor
shl
push
inc
cli
dec
push
pop
mov
inc
cli
outs
push
jne
cwde
jo
cli
jno
pop
mov
(bad)
js
xor
pop
mov
jge
mov
pop
xor
or
pop
pop
xchg
jp
jle
push
xor
(bad)
out
jne
nop
jle
cli
jg
push
xor
fnsave
cmp
test
mov
ins
shl
pusha
ins
or
pop
sbb
or
fcomp
xchg
mov
fdiv
bound
sbb
popa
or
add
or
popa
or
adc
or
les
lahf
retf
sbb
add
popa
or
test
push
test
popa
or
adc
or
mov
mov
xchg
or
mov
and
sti
push
mov
les
push
xchg
xor
or
test
popa
or
fbld
mov
fcmovb
cmp
cmp
xchg
and
rcl
in
popa
or
movs
xchg
and
add
test
adc
lods
aam
or
adc
test
aad
adc
movs
in
push
int
jp
and
call
shr
call
mov
sbb
push
mov
sbb
and
stc
mov
adc
daa
xor
in
xchg
cwde
sahf
call
call
cwde
ds
mov
ja
jb
pusha
sar
rol
hlt
cmp
jmp
xor
std
inc
jbe
fwait
adc
in
(bad)
adc
aam
pop
test
push
xchg
mov
add
gs
and
out
les
push
or
mov
sti
je
(bad)
mov
add
ds
xchg
cmps
pop
push
jl
push
loopne
mov
add
cld
stc
iret
ret
fwait
inc
add
mov
les
test
mov
mov
mov
mov
cmp
call
mov
repz
add
bound
test
scas
es
test
mov
(bad)
push
sbb
je
in
cmp
loopne
cmp
mov
sbb
nop
or
dec
fwait
push
add
ret
icebp
jge
fwait
and
data16
neg
out
mov
inc
sahf
jno
xor
cmp
int3
cmps
xchg
loopne
jne
movs
jg
cmp
ja
pop
xchg
out
cmp
sti
stos
repz
jae
xchg
call
scas
das
imul
add
loopne
jnp
add
add
inc
sbb
out
les
ins
jecxz
cmp
js
xchg
hlt
lods
fcomp
dec
dec
inc
mov
adc
sub
call
cmc
inc
xor
adc
mov
dec
fldenv
jb
fcom
add
cmps
in
int3
sbb
push
imul
addr16
jg
sahf
js
icebp
xor
pushf
dec
sbb
aad
imul
jno
cmp
jnp
adc
mov
add
pop
add
lea
popa
add
popa
add
(bad)
push
in
pop
sbb
pop
xchg
pushf
aad
stc
pop
test
jl
nop
cdq
call
mov
aam
movs
mov
mov
pop
loope
mov
int3
int3
xchg
mov
(bad)
mov
stos
pusha
stc
fisttp
mov
call
jbe
jmp
xor
push
inc
xchg
cmp
cmps
shl
jle
pop
push
sub
cmp
push
(bad)
out
sub
ret
std
enter
xchg
imul
mov
sub
add
hlt
adc
cli
sub
xor
iret
cdq
pop
cmp
pop
pop
pop
outs
neg
fldenv
popa
clc
mov
(bad)
push
cmp
cmp
out
sti
gs
inc
mov
ins
pop
in
cmc
mov
mov
jns
sbb
jg
sub
pop
cld
sbb
sbb
pop
or
adc
xchg
test
cmp
cs
shr
or
test
rol
xchg
jae
ja
pop
jmp
and
sbb
jle
and
ret
cdq
pop
loop
out
add
pusha
inc
sahf
mov
mov
sti
(bad)
in
or
out
push
pop
xchg
pop
popa
neg
retf
test
add
mov
(bad)
shr
lock
pop
ja
pop
retf
and
arpl
and
(bad)
inc
push
out
jne
pop
jmp
cmps
fcmovnu
cmp
mov
xchg
push
fiadd
retf
das
(bad)
cmc
aas
test
pop
lds
inc
jnp
fwait
cmp
outs
ins
call
dec
in
inc
jae
xchg
jp
inc
mov
fst
outs
fs
cmps
dec
(bad)
mov
or
adc
imul
call
mov
in
jne
daa
or
push
cdq
bound
loope
clc
mov
and
or
mov
std
movs
clc
add
cmp
sbb
xchg
ins
neg
push
jmp
xchg
jge
add
dec
outs
sahf
mov
les
cmp
scas
add
scas
add
or
int3
call
scas
sub
movs
push
jmp
aam
mov
add
sbb
pusha
shr
paddw
fstp
repz
dec
mov
mov
out
out
cmc
xchg
mov
cdq
in
jnp
movs
aas
out
ret
cwde
je
add
lea
sbb
out
clc
adc
dec
in
je
sub
shr
push
imul
mov
hlt
arpl
clc
call
or
pop
mov
adc
adc
cmp
sub
add
js
cmps
(bad)
cld
jp
adc
sahf
aam
(bad)
addr16
test
or
movs
mov
(bad)
or
adc
mul
int3
cli
js
sbb
fdiv
sub
(bad)
out
cmps
adc
(bad)
lock
cmp
mov
cmp
push
lds
push
(bad)
sbb
sbb
and
add
add
clc
pop
or
add
push
fmul
cmp
or
add
fld
test
int3
pop
aam
loop
rcr
add
fild
lock
clc
dec
clc
add
sbb
add
cmp
add
cmp
jo
add
jg
push
test
push
push
jne
jnp
add
jl
repz
sbb
clc
add
add
fs
out
addr16
imul
inc
ins
inc
out
pushf
jne
mov
add
inc
repz
sbb
add
mov
sbb
add
cmps
inc
xor
jne
adc
inc
and
adc
add
or
pop
or
add
cmp
or
cmp
and
xchg
fild
add
jo
pop
jno
inc
cmp
loopne
leave
add
add
fbstp
retf
cmc
popa
aad
adc
adc
sbb
out
mov
lock
repnz
shl
(bad)
mov
mov
jb
pop
iret
out
inc
pop
imul
pop
in
jmp
push
ins
test
shr
fs
aam
or
ficom
retf
push
hlt
fs
cld
(bad)
adc
jecxz
test
inc
sbb
xor
add
xor
aaa
push
or
cld
adc
aad
repz
gs
cld
adc
sbb
xor
or
test
int3
or
inc
addr16
or
add
push
test
mov
pop
mov
gs
mov
gs
test
jno
push
fiadd
push
test
add
cmc
cmp
inc
aam
sbb
retf
(bad)
gs
sbb
hlt
cmp
test
gs
cld
add
lds
push
fsub
(bad)
cld
add
fbstp
nop
add
in
or
out
fdivr
push
or
test
js
sti
inc
jns
jb
jbe
push
jp
cmp
dec
add
mov
dec
mov
adc
rcl
cmp
add
add
hlt
ret
sar
inc
shl
inc
shl
pusha
arpl
jno
aam
cmp
not
loopne
push
jecxz
inc
in
lahf
and
push
cld
push
sti
cmp
jmp
fld
aas
ficom
sbb
dec
mov
jecxz
push
cmp
pusha
fstp
xchg
clc
test
sub
xchg
fistp
ret
adc
mov
push
cmp
xor
xchg
mov
sahf
(bad)
sbb
sbb
xor
in
inc
jne
sbb
mov
cdq
xchg
xchg
imul
adc
arpl
sbb
mov
sbb
mov
leave
xlat
cmp
test
xor
xor
sbb
lock
mov
sbb
leave
je
mov
nop
mov
add
jne
mov
dec
pop
mov
mov
push
mov
sahf
test
je
(bad)
(bad)
mov
fidivr
ds
pop
or
push
sbb
jmp
ins
mov
cwde
fsubr
mov
cld
mov
xor
ss
push
mov
call
mov
cmp
push
push
or
push
jecxz
shl
(bad)
or
movs
int3
pushf
sbb
mov
fild
inc
inc
cmp
leave
lea
xor
lods
aas
adc
cmp
out
mov
mov
int3
jmp
pop
sbb
and
pop
and
out
or
add
leave
fadd
imul
mov
mov
repz
retf
mov
sahf
mov
scas
or
scas
mov
cmp
mov
xchg
push
xor
jne
jg
mov
inc
dec
adc
mov
dec
sbb
adc
pop
mov
mov
daa
call
dec
ret
xchg
cmp
cs
out
dec
hlt
xor
call
enter
mov
aad
in
adc
mov
imul
fdivr
mov
retf
stos
fadd
test
cdq
repz
cmc
nop
xchg
je
mov
sbb
in
jmp
jmp
xchg
xchg
adc
adc
mov
pop
nop
jae
(bad)
mov
in
loop
lea
sbb
adc
cld
sbb
push
inc
add
adc
jmp
mov
ret
scas
ds
retf
adc
sub
ror
push
mov
sub
out
adc
ss
push
or
xchg
adc
adc
xlat
xchg
popa
add
jns
out
(bad)
sti
(bad)
adc
and
jp
mov
leave
mov
sar
xchg
dec
adc
hlt
std
sti
jecxz
(bad)
xchg
fild
(bad)
fisttp
mov
inc
xchg
sbb
leave
iret
or
retf
mov
mov
pusha
out
in
pop
das
ins
push
adc
or
push
cmp
add
fcmove
xor
pop
loope
xlat
out
add
stc
xor
adc
aam
iretw
xchg
inc
mov
inc
hlt
xchg
adc
shl
mov
dec
add
cwde
(bad)
pop
cmp
or
cwde
or
cmc
xchg
cwde
inc
push
cmp
test
retf
imul
je
or
adc
int3
(bad)
sti
fld
push
jb
sbb
test
outs
mov
and
fiadd
cmp
popf
gs
or
scas
int3
inc
std
mov
xchg
cmp
inc
mov
stc
add
inc
mov
mov
call
mov
fwait
leave
je
gs
fisubr
(bad)
dec
xchg
aad
cld
nop
fs
enter
daa
scas
cmp
(bad)
mov
cdq
or
mov
scas
loope
xor
pop
ficom
xchg
(bad)
outs
gs
mov
es
xchg
cld
and
cmp
scas
jecxz
gs
call
inc
xchg
pop
push
push
ror
stos
mov
cmp
add
(bad)
or
(bad)
call
jge
jmp
cli
iret
dec
xchg
outs
jecxz
fwait
rol
dec
cdq
fs
popf
in
jp
es
and
push
gs
inc
fdivr
dec
out
jp
cmc
(bad)
fs
xlat
pop
call
call
fwait
sbb
out
test
loop
sbb
add
mov
or
sbb
adc
icebp
pushf
pop
(bad)
bound
ss
fdivr
sbb
add
enter
out
std
pushf
mov
xor
popa
movs
or
jmp
adc
scas
outs
(bad)
sysret
xchg
ss
mov
sar
or
ret
hlt
mov
cld
mul
xchg
push
(bad)
mov
das
popa
out
inc
jmp
pop
out
mov
push
loope
jg
mul
test
imul
sti
popa
or
js
xlat
aam
ds
lahf
pop
adc
lods
sub
stc
leave
pop
inc
push
iret
cli
test
push
lds
call
mov
shr
fwait
wbinvd
adc
add
inc
xor
mov
hlt
sbb
mov
adc
mov
cmp
mov
xchg
cmp
xlat
sbb
in
inc
mov
test
in
or
mov
mov
sub
mov
cmps
imul
nop
or
pop
and
je
pop
add
outs
mov
pop
jge
movs
out
mov
jmp
test
aad
jns
out
pop
mov
repnz
(bad)
xor
cmp
cwde
xchg
mov
sbb
mov
pop
clc
push
in
adc
mov
aaa
fst
cmps
je
dec
fs
push
xor
movs
shl
popf
push
test
jb
pop
fild
ret
call
hlt
adc
aam
add
xchg
adc
hlt
stos
std
add
xor
push
mov
push
outs
mov
sbb
inc
xlat
xchg
cmps
sub
mov
pop
xor
rol
add
sbb
out
cwde
sbb
xchg
jecxz
and
in
adc
out
aaa
jno
jae
xchg
pop
jne
int
nop
jecxz
push
mov
mov
sbb
arpl
into
jmp
loope
jmp
adc
imul
push
mov
lods
cmp
and
lods
mov
push
mov
pop
mov
adc
cmp
pop
or
push
movs
aaa
(bad)
mov
mov
out
inc
adc
mov
cwde
xchg
(bad)
dec
or
jmp
and
or
loop
cld
hlt
rol
pushf
push
jno
fwait
rol
sub
adc
fcomp
cmp
pop
js
imul
xor
mov
es
jg
push
and
(bad)
neg
cmps
xchg
loope
imul
push
retf
jecxz
sbb
xor
jl
fwait
neg
lods
adc
(bad)
xchg
mov
clc
inc
push
jmp
xchg
jp
xchg
out
add
fwait
enter
mov
mov
xor
xchg
loope
dec
cmp
inc
cmp
pop
int3
adc
cmp
cmp
mov
or
inc
lock
cmp
dec
mov
mov
leave
in
lods
and
cmp
pop
add
fwait
xchg
sub
pop
retf
add
retf
nop
icebp
enter
jno
shl
test
mov
dec
mov
addr16
das
cmp
in
dec
sub
pop
(bad)
retf
mov
out
in
mov
aam
cmp
rol
js
mov
popa
adc
into
mov
pop
push
repz
popa
or
cs
xchg
popf
retf
xchg
lods
mov
and
push
repnz
pushf
gs
sbb
mov
fcomp
(bad)
ja
call
out
mov
xchg
out
and
pop
fldln2
adc
outs
in
sbb
in
loope
in
or
fwait
mov
scas
adc
(bad)
cmp
push
xchg
xchg
stc
(bad)
in
mov
cs
out
(bad)
rol
daa
inc
test
jne
mov
jle
ret
sbb
pusha
mov
jo
add
adc
pop
call
push
mov
dec
mov
push
ja
and
fs
outs
xor
inc
mov
pop
and
fsubr
test
mov
in
leave
push
aad
pop
shl
mov
test
scas
ret
and
jl
mov
call
addr16
sbb
imul
sti
rol
mov
push
loopne
pop
ins
jno
mov
xchg
mov
sbb
cmps
inc
mov
jmp
dec
mov
inc
xor
mov
enter
cmp
dec
hlt
lods
jo
push
jge
in
popf
div
out
jge
mov
fs
xchg
sti
xchg
es
(bad)
cmp
pop
popa
les
sti
lods
mov
xchg
fs
adc
jbe
js
sub
retf
add
mov
mov
jl
push
fdivr
mov
push
fdivr
mov
push
stos
inc
adc
fsubr
or
adc
fld
lea
clc
outs
(bad)
loope
cmp
cld
sbb
pusha
repz
cmp
adc
call
or
imul
jno
popf
movs
pushf
mov
mov
out
push
ins
fldenv
aam
mov
mov
int3
popa
iret
sub
aam
mov
push
sbb
dec
push
mov
div
xchg
sti
mov
dec
pop
leave
mov
lahf
movs
(bad)
xchg
retf
mov
fldenv
popa
xchg
mov
stc
ins
and
mov
mov
outs
pop
xchg
icebp
inc
lds
std
mov
sbb
mov
inc
cmp
dec
test
and
sahf
jmp
js
es
les
mov
movs
dec
mov
mov
pusha
repnz
sbb
fcom
or
and
stos
mov
mov
in
or
dec
retf
mov
cmp
cmp
jmp
cmps
iret
scas
pop
pop
mov
ins
xlat
ins
in
in
jb
test
out
ror
out
sub
mov
xchg
loope
fld
push
ins
call
outs
inc
push
lds
aam
dec
popf
sub
mov
hlt
pop
dec
and
sahf
inc
cmp
sbb
mov
push
shr
pushf
or
cmp
loope
sbb
mov
add
mov
xor
(bad)
loope
adc
retf
mov
clc
imul
pop
cmp
mov
cmps
fs
test
adc
mov
js
mov
call
popf
fld
mov
pop
mov
sahf
ds
lea
jle
and
ret
dec
mov
int
mov
pop
xchg
cmp
test
mov
mov
test
mov
jle
cmps
pushf
sub
lahf
cmps
call
shr
or
push
ins
jg
daa
jge
push
pop
or
or
cmc
inc
adc
mov
out
in
sbb
adc
pop
lea
jno
xor
push
cmps
cwde
movs
imul
fsubr
xchg
in
xchg
xchg
push
lds
in
jl
pop
jge
pop
popf
pop
bound
popf
dec
push
or
mov
xchg
sbb
aaa
push
(bad)
popf
lahf
sub
mov
shr
(bad)
out
pop
mul
push
outs
arpl
out
jmp
mov
mov
lea
ja
bound
mov
adc
idiv
add
push
popa
js
jmp
out
mov
sbb
popa
add
sbb
call
aas
loope
gs
fistp
sub
xchg
push
jle
mov
push
pop
cmp
inc
dec
xor
test
mov
out
fisttp
add
mov
aas
fwait
add
pushf
jmp
popf
push
xchg
and
popf
add
out
imul
push
add
and
jmp
jg
pop
dec
movs
push
pop
test
mov
popa
mov
test
cmps
mov
inc
lea
pop
cmp
mov
sub
in
les
std
sbb
mov
adc
fwait
or
in
aam
(bad)
les
mov
mov
scas
push
push
mov
push
in
imul
inc
lds
push
mov
int3
cdq
sub
das
mov
inc
dec
sub
cmp
cmp
push
cmp
xchg
gs
mov
jle
movs
adc
push
pop
ins
fwait
daa
inc
icebp
imul
js
pushf
xchg
cld
cwde
jle
xchg
(bad)
popf
sub
in
pop
ins
sahf
daa
scas
icebp
popa
mov
lds
(bad)
cmp
cmp
add
jnp
arpl
test
inc
hlt
cmc
aad
inc
adc
retf
into
add
or
(bad)
ror
xchg
aas
stc
outs
cmps
mov
imul
push
adc
lahf
pop
or
add
sub
mov
leave
push
dec
iret
sub
cmc
or
inc
stc
mov
add
jmp
sbb
out
aaa
adc
shl
sub
or
sub
test
jp
cdq
push
cmp
test
adc
jb
cmp
fld
inc
icebp
push
add
inc
fild
lock
rol
push
push
jmp
rol
js
cmp
fdiv
cld
xchg
cmp
sbb
cmp
cmp
ins
ds
jmp
movs
in
(bad)
movs
loopne
and
cmps
aaa
popf
movs
adc
xor
dec
dec
imul
loope
mov
std
inc
das
mov
add
lahf
call
add
dec
icebp
stos
add
shr
jecxz
daa
mov
fdivrp
ja
ror
fild
hlt
clc
add
pop
addr16
sti
aam
(bad)
arpl
mov
add
movs
not
pop
ins
call
lds
add
sbb
fsubp
stc
fwait
cdq
or
fdivr
stc
push
cmp
jp
inc
jg
add
iret
in
fidivr
jmp
cmp
jp
sbb
jno
jmp
sbb
push
sub
cmp
push
push
mov
push
push
mov
push
push
mov
push
push
mov
adc
test
aam
test
icebp
les
in
mov
out
ins
movs
fs
add
or
jmp
out
in
in
cld
and
(bad)
jmp
mov
sbb
jae
cli
in
and
lahf
mov
jge
aad
pop
sar
lahf
ror
(bad)
int3
fistp
cmp
popa
adc
adc
xchg
lahf
lds
sar
lahf
add
and
cld
push
adc
out
dec
addr16
ss
and
es
mov
cmp
cmp
mov
addr16
xor
xor
push
fwait
dec
or
lea
imul
es
mov
add
add
imul
es
sbb
sbb
push
adc
push
pop
jae
shl
clc
cld
iret
int3
imul
push
sbb
push
cmp
cmps
xor
mul
cmps
lods
or
rol
mov
(bad)
js
pop
lea
pop
jns
pextrw
mov
cmp
lea
push
or
lods
lods
scas
sahf
(bad)
in
jecxz
xchg
loop
xchg
outs
push
pop
push
mov
into
(bad)
push
outs
(bad)
pop
mov
scas
addr16
push
lds
mov
shl
mov
call
push
mov
jnp
mov
repz
or
out
test
cld
out
lods
xchg
imul
outs
stos
xchg
xchg
mov
lods
inc
lods
loop
stos
test
pop
cmps
(bad)
retf
mov
movs
test
test
push
movs
leave
loop
mov
mov
fcomi
mov
mov
(bad)
xor
push
mov
push
lods
cmc
inc
stos
cmps
push
push
xor
mov
out
shrd
lods
scas
lea
lock
out
iret
jmp
scas
ins
iret
in
or
and
ins
sbb
dec
lods
ja
adc
push
pop
outs
push
push
mov
outs
test
test
pop
mov
into
cmps
mov
in
mov
mov
mov
mov
je
(bad)
push
xchg
xchg
xchg
ins
imul
push
jnp
jns
js
jbe
dec
dec
dec
dec
into
dec
inc
inc
inc
pop
pop
pop
pop
into
pop
push
push
push
sub
sub
into
sub
es
into
cmp
aaa
ss
or
or
push
add
sbb
xor
push
adc
into
call
cld
sti
cli
into
stc
clc
div
cmc
hlt
int
into
retf
retf
mov
(bad)
fcmovu
fcom
(bad)
xchg
aam
scas
jmp
imul
test
mov
imul
test
test
pop
mov
ins
daa
hlt
test
fidivr
mov
repz
push
cmc
push
jns
hlt
shl
jmp
pop
sub
cs
(bad)
xchg
mov
(bad)
retf
add
pop
mov
sbb
pusha
dec
into
shl
xor
mov
lock
xchg
(bad)
push
add
cmc
and
rol
xchg
mov
std
mov
rcr
aam
call
pop
jle
outs
pop
mov
xchg
scas
out
cld
test
outs
(bad)
jmp
mov
jb
mov
sub
sub
lock
pop
retf
mov
xchg
pop
jl
cvtdq2ps
dec
xlat
(bad)
mov
fldcw
and
or
ret
daa
or
imul
jmp
imul
push
push
(bad)
push
or
addr16
mov
in
cmp
imul
imul
jge
mov
jbe
lds
mov
cmps
adc
es
mov
jmp
gs
je
andnps
addr16
stos
shl
repnz
push
cmps
pop
mov
sbb
and
push
jl
hlt
test
sub
xchg
pop
out
sbb
inc
jmp
repz
dec
inc
cmps
jle
sub
je
inc
fsubrp
xchg
or
int
scas
xor
jno
mov
pop
or
into
out
dec
sar
es
push
mov
add
and
mov
push
scas
push
xchg
(bad)
push
leave
inc
cmp
jae
dec
sub
dec
cmp
into
mov
xchg
mov
inc
sub
rcr
gs
xor
mov
and
mov
pop
enter
inc
jb
inc
lahf
fsubr
inc
mov
mov
repnz
les
jmp
cmc
jne
mov
push
imul
out
jns
int
mov
mov
into
les
inc
jno
test
into
ret
jle
ror
data16
cmp
cs
push
pushf
loopne
(bad)
xchg
mov
ret
cmp
add
enter
xchg
add
ror
mov
jl
jg
and
push
dec
sbb
stos
(bad)
fdivr
jl
push
movs
fpatan
inc
mov
scas
cmp
add
cmps
into
add
sbb
lock
nop
mov
scas
daa
into
dec
push
adc
cmc
test
push
into
mov
or
cld
js
xor
repz
fisubr
lock
neg
inc
into
inc
push
inc
mov
call
jmp
xchg
jo
stos
cmp
add
test
jb
sub
imul
rcr
xchg
mov
mov
retf
push
fisttp
into
mov
mov
les
into
dec
test
and
into
cwde
jne
sbb
adc
cmp
pop
(bad)
sub
cdq
pop
or
stos
jecxz
cmp
dec
inc
into
mov
(bad)
mov
add
pushf
rol
hlt
push
add
sub
mov
test
fdivr
lods
sbb
pop
out
xchg
imul
ja
mov
inc
fs
pop
loopne
pop
add
fisubr
fisubr
push
xchg
xlat
and
cmps
std
fs
sub
add
test
into
hlt
pop
sbb
rcl
dec
call
sbb
loopne
hlt
inc
mov
addr16
leave
inc
ror
call
inc
mov
add
clc
jo
ins
in
xor
fisubr
(bad)
lahf
mov
ret
cwde
mov
sub
enter
out
mov
sbb
jmp
cwde
aas
int3
dec
mov
in
inc
xlat
rcl
add
shr
por
xchg
into
shl
movs
mov
push
inc
test
cmps
inc
das
cmp
lods
in
in
jmp
in
outs
pushf
mov
mov
into
loop
sbb
std
pop
ret
xchg
or
(bad)
adc
loopne
push
jmp
mov
push
into
daa
mov
sbb
inc
test
rol
cld
sub
xlat
cmps
into
mov
xor
and
into
pop
rcr
je
icebp
ins
jmp
mov
fdivr
jecxz
mov
or
out
es
outs
and
std
ret
xor
retf
xor
nop
out
cmp
mov
jmp
test
rcr
fiadd
or
cld
pusha
mov
mov
fstp
mov
mov
xor
mov
mov
or
adc
into
out
jb
cli
push
lds
xchg
add
imul
addr16
retf
inc
pusha
cmc
dec
int
rcr
inc
xlat
adc
stc
and
push
add
ja
sub
or
sub
int
inc
xchg
into
adc
mov
cld
mov
push
push
cmps
sbb
outs
data16
pop
inc
add
(bad)
addr16
ret
jbe
nop
jmp
in
aad
mov
ss
int
(bad)
mov
retf
xchg
push
push
and
lods
mov
adc
fwait
(bad)
pcmpgtd
xchg
lods
retf
or
jmp
ror
xchg
into
mov
jnp
mov
seta
mov
mov
or
jae
outs
scas
scas
and
xchg
retf
and
(bad)
mov
lock
mov
xor
call
mov
mov
sbb
add
repnz
into
cli
dec
add
inc
(bad)
test
or
shl
sub
jae
push
into
es
shl
fs
and
xchg
call
sub
in
sti
mov
rol
jl
push
xchg
lahf
jae
push
retf
xchg
lods
pop
cmps
ror
jns
jns
(bad)
lods
(bad)
and
add
inc
out
ret
push
stc
stc
into
push
jmp
jb
lods
pop
jmp
mov
pop
xlat
sub
pop
sar
xor
in
int3
cmps
into
aas
push
add
into
mov
pop
test
sub
and
mov
push
ja
push
cs
rcl
into
nop
call
into
lods
mov
pop
inc
mov
mov
adc
xchg
lods
or
mov
stos
(bad)
adc
rcl
pand
stc
aad
dec
lods
and
fcmovbe
add
hlt
(bad)
int3
into
enter
and
dec
xchg
outs
(bad)
mov
fs
popa
xchg
add
test
xchg
imul
in
ins
jg
sub
test
xor
fistp
jns
into
sar
sub
scas
popa
rol
sbb
cwde
shr
cs
jecxz
mov
push
scas
jae
sbb
icebp
cwde
pop
retf
into
dec
jns
out
frstor
pushf
inc
xchg
das
lods
stos
lods
cmp
pop
(bad)
sbb
pop
jo
inc
ffree
cmps
pop
clc
inc
jl
lods
mov
ret
enter
jmp
mov
or
arpl
(bad)
into
push
xchg
mov
or
xchg
pop
mov
jmp
div
mov
ins
hlt
test
in
movs
cwde
inc
mov
ret
jne
in
dec
enter
sub
xchg
int3
out
fcom
dec
and
cmp
movs
jmp
lods
out
fdiv
or
test
mov
and
jle
xor
pusha
into
cld
jbe
idiv
into
sbb
enter
push
arpl
(bad)
jo
xchg
outs
add
icebp
into
inc
retf
test
fmulp
int3
xchg
in
mov
jne
into
mov
adc
aad
out
into
inc
retf
fcom
mov
jge
jmp
xor
into
jae
dec
cmp
repz
xchg
or
cmp
ficomp
pop
sbb
pop
mov
mov
lea
and
mov
xor
xor
test
je
rep
gs
frstor
out
fnsave
mov
fisttp
cmps
js
arpl
adc
je
rcr
fucom
into
or
lea
into
in
and
popf
into
fs
xchg
push
mov
mov
dec
nop
lods
cmps
scas
loop
outs
mov
mov
inc
adc
out
aas
mov
sbb
adc
ret
rcr
ret
les
into
addr16
out
inc
jecxz
inc
adc
imul
xchg
outs
inc
adc
adc
push
push
into
fstp
(bad)
jb
sbb
pop
mov
jg
push
mul
popa
pushf
dec
add
dec
sbb
clc
fdiv
dec
mov
fsub
(bad)
je
xchg
cs
dec
mov
das
aas
sub
ficom
cmp
repnz
das
pop
out
(bad)
into
mov
or
loop
lock
add
daa
not
movs
enter
push
fcomp
into
(bad)
es
in
mov
push
mov
jmp
sti
add
adc
mov
sbb
(bad)
fisttp
mov
out
sbb
lock
pop
movs
jg
repnz
call
pop
cmp
add
jg
lods
or
cmc
jmp
cdq
daa
int3
popa
ja
outs
and
push
jl
ficomp
jle
adc
pop
add
retf
enter
leave
imul
sti
ror
(bad)
into
fs
repz
adc
adc
pusha
into
pop
mov
lods
add
cs
xchg
mov
cmp
fcom
sti
add
ror
inc
sub
leave
pop
es
into
mov
mov
loope
cmp
push
loopne
cdq
cmp
inc
fmulp
paddq
push
jno
and
bswap
pop
jp
test
into
(bad)
mov
ret
adc
cmp
addr16
and
dec
ins
(bad)
in
popf
sub
scas
into
pop
push
dec
hlt
xor
adc
int
adc
xchg
cmp
aaa
aas
push
and
es
xchg
xchg
mov
inc
repz
outs
pop
pop
mov
mov
mov
xor
inc
pop
jmp
and
pop
outs
adc
or
nop
xchg
test
lds
xor
lods
jnp
sbb
out
jmp
push
sub
dec
push
mov
into
inc
push
jno
sbb
jmp
test
sbb
into
or
push
mov
push
aam
fcomp
mov
pop
in
in
dec
into
jle
mov
lock
lea
scas
cmp
das
xor
test
sbb
sub
add
out
(bad)
add
pop
out
rcl
mov
bound
rol
jle
mov
push
dec
mov
mov
test
fmul
push
cmp
cld
hlt
int3
xchg
jae
mov
loopne
mov
mov
ja
and
loope
cdq
addr16
test
mov
sbb
pop
into
(bad)
adc
sbb
xor
push
jmp
out
mov
mov
inc
stos
bound
pusha
(bad)
shr
nop
cmc
or
into
fistp
cwde
cmps
pop
cmp
shl
jb
in
lea
adc
xchg
call
and
into
fdiv
mov
pop
sbb
dec
jl
paddusw
into
sub
add
into
fsubr
scas
pop
cmp
add
mov
pavgb
cmp
jmp
fxch
cwde
sub
call
push
pop
into
stc
sbb
mov
cmp
mov
mov
sbb
ja
mov
imul
add
and
mov
das
xchg
sbb
data16
enter
add
mov
pop
or
pop
jae
aas
add
into
sti
fwait
out
cmp
jbe
mov
jecxz
arpl
mov
push
loop
das
xlat
add
jmp
test
cwde
shl
cmp
into
dec
inc
pop
outs
pop
dec
dec
mov
(bad)
xor
ror
in
(bad)
mov
sub
aam
inc
mov
mov
(bad)
int
fnsave
and
xchg
pop
les
loop
push
sub
(bad)
dec
push
adc
pop
or
into
xor
jmp
mov
test
aaa
call
adc
leave
sar
pop
dec
fcom
into
fild
(bad)
data16
mov
push
sbb
jno
lock
xchg
or
pusha
mov
cmp
inc
push
into
push
enter
or
jle
mulps
clc
dec
pop
scas
sbb
pop
sti
nop
or
aaa
rcl
int
pop
(bad)
jo
aam
into
fcom
xchg
mov
xchg
sub
push
push
into
sbb
repz
movs
mov
mov
adc
test
push
lods
mov
(bad)
movs
push
mul
faddp
sub
add
adc
and
scas
repnz
sahf
xchg
into
jmp
mov
inc
loop
dec
mov
hlt
push
sub
inc
lods
push
and
mov
mov
add
cli
mov
cmp
js
ficom
add
or
sbb
int
and
mov
pusha
out
outs
popa
into
movs
and
xor
fdivr
ror
(bad)
xchg
neg
xchg
adc
sbb
xor
push
dec
mov
push
inc
fnsave
push
aas
sub
adc
(bad)
adc
retf
in
cmps
xchg
pop
call
pop
int3
push
mov
push
jnp
(bad)
pop
out
and
jae
sub
sbb
addr16
xor
sti
inc
into
ret
add
dec
ja
popf
shl
test
dec
sbb
or
cs
lods
movs
jb
push
aaa
retf
pop
aam
pop
push
inc
scas
sbb
cmp
popf
inc
nop
pop
cmps
into
jbe
jo
add
lahf
test
or
and
into
sub
mov
mov
out
hlt
js
clc
stos
mov
dec
jle
dec
and
push
jg
mov
stc
test
inc
les
sub
into
jecxz
rcr
add
push
push
les
sub
mov
ret
pop
ds
in
pop
push
dec
stos
psubq
jge
aas
lods
xlat
sub
scas
push
test
punpcklwd
push
and
mov
nop
hlt
and
(bad)
mov
cdq
mov
dec
into
cmp
push
xor
fst
add
sbb
loope
retf
dec
xor
and
into
popa
in
mov
in
test
sbb
adc
pop
xchg
into
add
enter
pop
mov
daa
ret
cmp
mov
mov
mov
inc
enter
ror
inc
cmp
pop
cmp
retf
cmps
stos
mov
(bad)
xchg
inc
test
pop
xor
into
cmp
sbb
cdq
adc
push
add
call
dec
inc
mov
jns
add
lock
lea
inc
jno
dec
mov
cmp
push
rcr
pop
into
adc
xchg
or
or
mov
(bad)
aad
movs
and
xchg
inc
call
push
xor
div
into
jbe
imul
mov
fadd
sub
into
out
(bad)
cmp
xchg
xchg
xor
into
mov
push
or
push
jb
push
or
inc
sub
add
into
adc
add
mov
stos
dec
inc
dec
jbe
mov
test
ret
cli
clc
mov
cwde
push
fadd
dec
sub
jmp
jno
mov
cmp
scas
lds
repz
xlat
mov
out
test
push
xor
outs
mov
into
dec
push
or
jb
repz
and
lods
push
pusha
sahf
pushf
cs
sete
push
xor
jae
and
mov
(bad)
add
dec
fcomp
adc
into
outs
inc
mov
in
xchg
fmul
jns
adc
in
in
(bad)
fild
lock
pop
fmulp
adc
inc
inc
or
movs
hlt
loop
sbb
and
jmp
xchg
cmp
aas
jb
cmp
fsub
sahf
mov
mov
(bad)
xchg
scas
aaa
sti
fxam
mov
dec
into
push
out
rcr
scas
out
cmc
stos
arpl
retf
sete
into
cmp
mov
not
jp
jge
jmp
or
adc
fnstenv
pop
inc
retf
neg
int3
bound
hlt
retf
mov
cmp
mov
or
push
cmp
mov
cld
push
(bad)
adc
mov
and
mov
popa
inc
into
inc
test
out
jne
xchg
mov
cmp
push
mov
xchg
test
add
fdivr
outs
and
dec
into
outs
and
mov
add
out
cmp
xor
test
cmp
cs
into
rcr
jp
inc
push
inc
popf
push
pop
lods
jmp
sub
sti
daa
not
push
into
jp
loopne
inc
lods
adc
into
arpl
out
fst
push
ret
add
xchg
xor
(bad)
into
add
jl
pop
mov
into
xor
lods
jle
nop
inc
sub
lahf
scas
pop
icebp
ja
add
aaa
test
(bad)
xchg
scas
fxtract
lahf
add
leave
ret
jp
pop
sbb
cmp
test
mov
xchg
lods
xchg
or
pop
and
into
mov
dec
xchg
into
jl
aam
and
aaa
mov
fisttp
inc
dec
pop
(bad)
cs
into
pusha
leave
jmp
push
mov
xchg
fbld
into
adc
xchg
jg
into
scas
aas
cmp
repz
leave
into
and
sub
dec
pop
mov
js
(bad)
popf
dec
inc
mov
cdq
into
or
mov
ret
xchg
scas
fisubr
pop
arpl
mov
push
xchg
mov
pop
mov
test
dec
inc
arpl
and
cmps
adc
dec
retf
xor
test
add
popa
int3
rcl
pop
movs
lods
push
xchg
dec
hlt
pop
daa
cmps
cmpxchg8b
(bad)
into
inc
cmp
xor
inc
dec
add
into
mov
or
mov
in
into
jb
jmp
xchg
lods
pop
jmp
into
lock
or
retf
mov
push
xchg
jg
loop
out
ret
mov
push
ret
stos
adc
(bad)
stos
pop
lods
out
cmp
psubsb
mov
out
daa
mov
aas
jmp
lods
pop
call
out
dec
xchg
fimul
dec
into
out
cmp
and
test
into
fwait
out
sbb
or
cmps
mov
not
call
cmp
and
xchg
mov
popa
(bad)
bswap
pop
lahf
das
and
dec
add
mov
inc
cmp
into
stos
push
mov
es
and
mov
push
sub
sbb
adc
test
and
sbb
pop
and
movs
inc
into
inc
add
cmp
add
out
xor
faddp
out
(bad)
push
mov
add
pop
push
dec
leave
into
adc
retf
dec
push
push
and
call
cwde
into
pop
mov
addr16
pop
xchg
ds
or
ret
scas
test
adc
dec
hlt
adc
inc
xor
mov
sub
cmc
idiv
mov
out
pop
aas
movs
mov
mov
jg
sub
loope
scas
push
cld
add
ja
cmp
hlt
pop
cdq
movs
mov
(bad)
outs
mov
into
dec
jbe
sbb
cmps
ja
cmp
ret
sub
dec
aas
cwde
mov
adc
xchg
aas
sbb
sahf
cmp
dec
add
mov
fs
into
pmulhw
cmp
into
or
sbb
mov
(bad)
pop
lock
lods
and
fisttp
mov
retf
xor
add
adc
paddsb
sbb
fst
cs
js
mov
mov
(bad)
fcmovne
jns
cmps
sub
mov
ss
cmp
into
fsubr
dec
stos
into
inc
loope
addr16
fcmovbe
jnp
pushf
mov
cmp
fcomp
xchg
(bad)
mov
dec
xchg
jne
ds
pop
add
and
cmp
mov
xchg
push
pop
cwde
mov
into
test
loop
out
icebp
jmp
into
pmaxub
cs
mov
stos
push
jae
les
outs
aad
mov
stos
imul
xor
int
mov
cmp
and
ins
test
xchg
lods
lock
adc
outs
mov
add
push
clc
inc
or
pop
xor
test
cmps
mov
jle
pop
jge
cmp
mov
rcl
into
mov
fimul
js
into
push
clc
ror
mov
out
adc
hlt
into
cmps
xchg
mov
mov
jae
out
les
loop
xor
lahf
fsub
pop
jmp
addr16
jmp
mov
dec
mov
fidiv
imul
into
fs
adc
rcr
add
icebp
out
test
hlt
into
and
xchg
hlt
retf
dec
cmp
cmp
ins
scas
dec
outs
ja
mov
push
cmp
sub
dec
test
mov
jl
and
mov
dec
cwde
mov
dec
cmp
and
and
xchg
mov
mov
sbb
call
mov
es
sub
not
mov
inc
cmps
(bad)
pusha
mov
mov
xchg
and
sub
xor
and
scas
mov
pop
jmp
(bad)
out
scas
into
pop
call
into
sub
push
mov
lds
fidivr
mov
arpl
cli
dec
fsub
pop
adc
int
loop
and
out
or
mov
retf
and
fidiv
inc
gs
nop
pop
xchg
lock
sbb
daa
xor
stos
loope
adc
into
push
mov
dec
sahf
(bad)
int3
mov
mov
dec
movs
test
xchg
into
jnp
aad
out
xor
test
or
push
(bad)
in
dec
xchg
sbb
xor
sub
push
sbb
sbb
jae
xor
xchg
cmp
inc
mov
sbb
mov
into
ins
sbb
fcom
into
cmp
add
mov
loop
pop
adc
inc
and
ss
cmc
inc
retf
adc
rcl
call
cli
lahf
pop
dec
and
repnz
into
loopne
stc
xor
fwait
dec
into
repz
(bad)
call
lods
mov
scas
je
adc
into
cmp
ins
repnz
popf
into
push
add
fsubr
(bad)
cmc
enter
fisttp
outs
jl
dec
mov
mov
enter
pusha
scas
pop
mov
(bad)
jb
loopne
fld
dec
fdivr
sbb
add
jae
push
dec
sbb
icebp
mov
into
jno
sar
iret
fiadd
test
pop
outs
fld
mov
movs
xchg
and
in
test
dec
das
shr
loop
(bad)
and
retf
cmp
adc
mov
test
sbb
jbe
pop
pop
dec
xor
mov
xchg
into
pushf
imul
push
cmp
or
ret
and
cs
rol
inc
or
sub
retf
cmp
sub
pop
into
or
inc
cli
fcomp
inc
popf
fwait
mov
int
mov
aaa
xor
dec
movs
into
scas
in
sti
xor
pop
scas
into
add
outs
clc
cli
dec
xlat
scas
mov
(bad)
popf
je
mov
adc
into
movs
and
lock
mov
loopne
sub
inc
cmc
into
fldcw
push
mov
fnstsw
jnp
fbstp
sub
mov
add
sub
ror
ffreep
fnstenv
push
xchg
mov
ror
enter
je
arpl
pop
in
neg
popa
sahf
dec
imul
into
inc
xchg
out
sub
jbe
mov
sbb
scas
(bad)
hlt
pushf
xor
or
dec
in
add
shr
inc
dec
and
dec
dec
das
sub
mov
loope
in
inc
xchg
out
sbb
into
outs
push
xchg
les
inc
mov
xchg
xchg
xchg
or
repz
inc
in
ret
in
aam
fidiv
jmp
push
or
lahf
in
retf
into
and
scas
mov
adc
and
daa
enter
sbb
movs
mov
lods
add
aad
jnp
lahf
sub
xchg
scas
inc
dec
mov
cmp
sub
mov
loope
(bad)
mov
sub
pushf
test
push
push
into
repz
and
in
stos
cs
outs
pop
lods
movntq
out
pop
and
fxtract
push
inc
xchg
repz
jle
pop
lea
in
dec
pop
loope
xchg
imul
jo
mov
call
sbb
or
nop
test
into
mov
outs
xchg
movs
into
dec
std
sbb
stos
(bad)
es
retf
scas
add
mov
into
mov
mov
aas
or
jg
fcom
ja
mov
into
daa
push
lock
xlat
jmp
pushf
inc
into
retf
test
and
cli
mov
dec
cmp
je
cmps
out
into
int
stos
push
mov
(bad)
popf
adc
rcr
ins
ret
cmc
test
xor
cmp
inc
scas
dec
xchg
jb
sub
xor
loop
aam
mov
(bad)
xor
imul
add
ins
into
sbb
push
ins
pop
mov
or
push
out
rcr
mov
aaa
div
and
inc
stos
aaa
xchg
ret
jecxz
into
daa
mov
test
pop
(bad)
adc
and
mov
pop
sub
out
push
xlat
add
into
lds
test
mov
pop
test
add
dec
int3
and
fimul
sub
sti
rcl
into
jnp
(bad)
repz
pop
pop
into
and
cdq
add
mov
test
in
stos
cli
into
sbb
int
lods
pop
loope
aas
pop
inc
dec
push
jp
sub
push
mov
nop
out
adc
cwde
outs
jno
or
sbb
xor
jmp
cmp
into
aam
mov
lds
ds
and
fst
mov
push
jbe
movs
ror
jecxz
mov
scas
outs
add
bound
cld
inc
pop
into
push
cmp
xor
mov
add
mov
xchg
data16
mov
push
int3
inc
mov
fst
retf
xchg
jl
pop
cmp
sub
push
and
pop
mov
jmp
mov
es
cmps
enter
scas
(bad)
ins
and
xchg
into
pop
not
jl
imul
lods
popf
add
outs
test
jge
mov
dec
gs
mul
into
jbe
sub
mov
or
aaa
out
jnp
into
cmps
movs
out
mov
dec
or
xor
dec
jg
ds
into
hlt
jle
leave
out
jecxz
test
stos
xchg
into
nop
dec
pusha
aad
xor
push
mov
xlat
jge
jmp
popf
xchg
jmp
xor
jno
adc
dec
mov
add
into
mov
(bad)
xchg
inc
ins
cmp
xchg
imul
pop
sbb
int
aas
dec
dec
cwde
mov
xor
inc
adc
popf
into
pop
test
xchg
jge
or
dec
and
into
sub
pop
test
lock
test
leave
stos
fmul
test
ret
jp
ret
pop
xor
js
pop
xlat
into
ss
aam
out
bound
cmp
(bad)
test
xchg
and
mul
ins
dec
or
test
mov
xor
into
adc
inc
mov
cmps
xor
test
xchg
fcomp
mov
cmp
rcl
push
xor
xor
jo
pop
adc
cmc
(bad)
xor
in
fst
mov
into
mov
xor
mov
dec
sbb
adc
xchg
call
loop
dec
bt
out
sbb
xchg
lds
sub
das
aam
mov
mov
push
inc
dec
adc
pop
call
scas
lods
sub
nop
shl
out
or
lods
cmp
cld
xor
adc
inc
shl
div
out
mov
xor
clc
xor
ret
sahf
push
dec
xchg
hlt
mov
sbb
repnz
cmp
into
xor
addr16
mov
jp
push
inc
and
cld
fucomip
and
fstp
jmp
mov
das
sub
and
ror
aaa
mov
xlat
jne
and
push
pushf
jmp
movs
test
inc
dec
das
mov
ror
mov
cmp
sub
push
pop
(bad)
into
cmp
test
lods
jmp
push
lods
test
mov
jmp
jae
adc
imul
(bad)
out
sbb
jl
aaa
xor
sub
dec
lods
pop
hlt
leave
pop
mov
push
xchg
out
mov
add
inc
hlt
into
xchg
ror
fs
adc
pop
into
sub
or
or
into
inc
mov
inc
mov
das
mov
xor
into
lock
jnp
into
dec
jl
jge
shr
dec
and
mov
mov
jbe
mov
inc
in
adc
xor
mov
jg
aaa
into
lahf
mov
cld
into
push
jecxz
jne
enter
xchg
or
pop
xchg
or
aaa
dec
into
outs
inc
pop
add
xchg
sbb
jmp
dec
repz
dec
sub
movs
pop
pop
pop
pushf
dec
inc
xchg
enter
into
je
ret
and
xchg
cmp
outs
fisubr
push
sbb
pop
inc
push
ror
cmp
cli
cs
mov
pop
pop
hlt
into
repnz
sub
ss
mov
rcl
mov
ds
cmp
into
cwde
xchg
ja
jmp
pop
stos
push
(bad)
cmp
push
xor
aaa
mov
aaa
lods
retf
ins
pop
inc
inc
fst
jecxz
add
(bad)
pop
repz
add
std
les
adc
fisubr
into
mov
mov
mov
test
fiadd
test
sbb
or
push
scas
dec
cmps
mov
push
mov
retf
cmp
jl
ja
(bad)
nop
jmp
add
mov
add
mov
aaa
rcl
into
retf
or
mov
pop
pop
into
shl
rcl
popa
test
add
mov
add
fmul
(bad)
cmp
sub
mov
lods
cmp
push
nop
into
pop
sbb
push
push
mov
mov
in
movs
jle
mov
adc
into
sub
lods
fmul
outs
cmp
rcl
dec
into
mov
push
(bad)
out
xchg
imul
arpl
cdq
or
add
test
push
mov
ret
bnd
jns
mov
mov
and
pop
sahf
ss
push
js
or
idiv
(bad)
into
add
into
sub
retf
stos
push
jns
mov
pop
(bad)
out
cs
mov
push
cmc
dec
test
jbe
popf
fsubrp
aas
test
retf
mov
cmps
out
sub
pop
mov
inc
leave
out
enter
mov
or
stos
pop
stos
into
sub
xor
jae
mov
(bad)
lods
lahf
pop
cmp
into
xchg
loopne
or
xchg
ins
xor
push
fiadd
in
movs
into
sub
mov
repz
dec
mov
cmc
shl
mov
loopne
dec
push
(bad)
mov
into
ins
jb
add
loop
mov
scas
sahf
mov
rcl
jmp
mov
pslld
or
pop
out
add
dec
into
fadd
ja
push
lods
mov
dec
repnz
pop
aaa
hlt
or
arpl
mov
push
adc
out
jns
dec
imul
pushf
addr16
mov
fs
outs
test
movs
retf
out
cwde
pop
cmp
inc
invd
into
enter
and
lods
je
jbe
sbb
(bad)
adc
cmp
stos
xchg
into
aas
mul
pop
sbb
and
cmp
andnps
out
je
sub
xchg
pop
leave
into
pop
mov
adc
enter
jecxz
sahf
cwde
cmp
mov
aad
rcl
mov
pop
ins
cvttps2pi
pop
repnz
or
pop
push
std
in
fnsave
sbb
pop
into
add
jecxz
and
fwait
push
jb
dec
xchg
ror
int3
mov
adc
gs
pop
fwait
mov
out
push
cmp
(bad)
and
leave
mov
or
movs
adc
push
jge
push
pop
add
out
mov
enter
stos
add
pop
mov
dec
sbb
into
lea
mul
ins
enter
mov
leave
in
test
ror
push
sti
mov
popf
lods
mov
or
das
repnz
dec
movs
add
add
out
mov
scas
and
mov
fnstsw
cmovno
out
xchg
dec
fnsave
clc
sub
lahf
in
loope
xlat
mov
retf
mov
dec
popf
dec
pop
data16
outs
jp
scas
mov
dec
loop
shr
pushf
pop
mov
(bad)
jne
movs
or
daa
mov
sub
and
mov
loope
cmc
or
into
retf
test
test
jnp
xchg
test
xor
jbe
out
loopne
mov
popa
into
dec
sbb
mov
into
mov
and
int3
dec
into
xor
xor
push
add
into
(bad)
cdq
jecxz
rcl
mov
daa
sub
cwde
lea
repnz
mov
sbb
in
xchg
into
push
fs
stc
mov
pop
pop
xchg
hlt
std
test
dec
jp
das
or
aas
ds
mov
sbb
cmp
jmp
addr16
push
test
and
fidivr
movs
pop
mov
push
test
sbb
into
and
jbe
xchg
(bad)
mov
dec
xchg
mov
lods
lahf
mov
imul
sub
lock
jge
add
in
dec
out
jns
test
sub
mov
icebp
je
daa
aad
inc
and
into
sbb
js
mov
in
daa
mov
hlt
inc
jbe
push
cmp
add
cmp
jl
out
out
fbstp
xchg
scas
stos
or
div
neg
xchg
cmps
push
inc
adc
push
cmc
sbb
and
push
pop
lock
int3
div
into
or
(bad)
icebp
xor
xor
into
pop
rol
shl
xchg
mov
into
lods
mov
jno
lods
sbb
cmp
sbb
pop
xor
or
out
(bad)
stos
mov
js
mov
pop
aad
jo
add
hlt
adc
fsubr
aas
iret
mov
cvtpi2ps
aas
cdq
into
push
cwde
sbb
sbb
aaa
js
dec
pop
sahf
or
popf
mov
sub
dec
adc
sbb
ror
aaa
sub
into
addr16
movs
std
cmp
into
lock
hlt
or
mov
dec
sub
mov
and
mov
push
jle
mov
into
outs
movs
xor
jb
into
pop
neg
dec
das
out
inc
scas
xchg
ret
mov
dec
leave
into
jns
fnstenv
push
into
inc
data16
int3
mov
push
call
mov
xchg
dec
stos
xchg
mov
adc
xchg
jmp
or
into
std
mov
mov
fild
pushf
mov
je
mov
int
fmul
shl
test
dec
pop
mov
call
scas
dec
mov
pusha
pop
pop
mov
fiadd
call
into
pop
mov
imul
sbb
rol
pop
sub
das
push
lahf
pusha
mov
outs
aad
and
stos
pop
or
(bad)
int
mov
out
test
or
sub
pop
out
int3
outs
jo
mov
mov
movs
xchg
lods
test
bound
dec
outs
mov
scas
mov
into
lock
sbb
aaa
fmul
mov
jmp
in
mov
cmps
mov
xchg
test
and
mov
scas
or
into
dec
sub
mov
stos
icebp
into
pop
sbb
clc
(bad)
pop
in
movs
fsubr
ror
jnp
push
adc
mov
data16
xchg
jne
ror
or
pop
lods
xchg
xchg
into
push
leave
and
adc
icebp
dec
sbb
jne
xchg
into
js
push
jecxz
retf
pop
pop
into
out
out
mov
imul
ins
pmulhw
int3
sub
sbb
into
sbb
out
ins
cmps
int3
cli
inc
into
add
int
xchg
shr
enter
mov
cld
test
ds
sub
int
pop
jbe
call
in
into
jne
cmp
call
ins
inc
xchg
jae
int3
out
mov
dec
mov
into
xor
and
and
popf
mov
mov
repz
imul
sbb
dec
sar
sbb
mov
dec
into
cwde
lahf
aad
and
into
xchg
cmp
push
inc
lds
mov
mov
daa
sbb
or
into
in
xor
fisttp
call
sub
or
sbb
into
sub
mov
jp
rcr
push
and
fcmovne
push
imul
outs
sub
into
ds
xor
jge
jbe
fidiv
push
or
mov
pop
lea
cwde
xor
ins
inc
xor
movs
push
pop
add
mov
xchg
imul
into
fcom
cmp
movs
retf
into
retf
mov
mov
clc
sub
int3
inc
dec
popf
mov
aas
mov
mov
pop
jmp
add
into
dec
xchg
sbb
es
aas
xchg
shr
add
ds
push
sbb
jl
mov
inc
sahf
ret
into
and
sbb
cmps
cmp
jmp
gs
sbb
into
stos
scas
jo
mov
mov
sub
(bad)
les
xchg
mov
mov
inc
cmp
mov
std
sub
mov
into
inc
out
jecxz
ds
retf
pop
xchg
(bad)
fwait
into
in
ins
arpl
std
icebp
jp
lods
adc
cdq
pop
jns
ficom
add
into
push
jno
pop
add
mov
aad
dec
pop
add
add
rol
or
pop
stos
scas
inc
inc
push
daa
(bad)
jmp
outs
into
cmp
mov
push
sahf
mov
sub
dec
and
mov
stos
stos
fld
dec
ror
sub
js
cmp
jg
call
neg
test
scas
scas
sub
(bad)
cmps
popf
add
into
inc
or
mov
mov
out
stos
xor
xor
mov
test
dec
into
das
in
out
add
lock
scas
cwde
cmp
repnz
mov
outs
into
cmp
mov
inc
aas
test
ins
fmul
sbb
jae
cmp
test
inc
mov
jp
into
pop
xor
retf
out
fiadd
adc
mov
lods
push
dec
inc
inc
cmps
cmp
pop
ret
mov
jo
enter
mov
(bad)
cmc
pop
and
or
cmp
fwait
jle
into
mov
stos
mov
popf
pop
test
jg
into
dec
cs
ja
mov
movs
data16
js
and
mov
mov
outs
ins
in
mov
es
into
inc
ror
jo
mov
test
bound
jl
bnd
scas
xor
sub
inc
or
inc
imul
outs
aaa
cli
test
std
ror
mov
mov
xor
(bad)
jg
and
out
mov
push
repnz
inc
fisubr
xchg
seto
jnp
stos
sub
cmp
test
mov
or
and
mov
loopne
add
inc
xchg
mov
fsubrp
mov
aas
popf
push
ror
dec
daa
add
and
aad
(bad)
push
(bad)
mov
retf
scas
aam
pop
sbb
and
into
ja
dec
push
jl
dec
(bad)
mov
pop
fsub
loopne
(bad)
movs
into
cmp
mov
mov
ins
into
dec
imul
adc
neg
sbb
sbb
ror
(bad)
and
fidivr
xchg
pusha
sbb
xchg
mov
into
and
repnz
lahf
or
outs
mov
scas
and
pop
lods
add
mov
inc
nop
xor
into
mov
test
out
push
sub
dec
out
into
mov
xchg
or
into
xor
add
xor
pushf
test
pop
into
in
cmps
add
and
add
addr16
repz
push
into
movs
je
mov
into
das
push
jnp
into
mov
xor
cs
mov
fst
dec
jo
xchg
ret
fsub
mov
mov
out
or
arpl
retf
pop
into
test
jne
shl
aaa
jb
mov
xchg
retf
imul
ficom
pop
aas
xchg
into
cmp
in
and
(bad)
dec
fimul
mov
hlt
ja
std
into
push
out
cmp
cmp
lods
mov
arpl
push
(bad)
ss
into
pop
cmp
and
into
pop
repz
mov
mov
cmp
cmp
inc
std
lock
test
fisubr
ins
fimul
icebp
sbb
into
retf
test
xchg
pop
aad
dec
loopne
into
ds
loope
cmp
into
pop
sub
fucom
add
mov
into
mov
rol
cs
sbb
scas
dec
test
dec
icebp
sub
pusha
mov
imul
loope
pop
push
dec
fadd
stc
into
outs
sbb
(bad)
ds
into
push
xchg
aas
in
mov
repnz
mov
or
retf
fstp
and
push
mov
cmp
fmul
pop
scas
mov
pop
or
sbb
ret
fsubr
into
pop
dec
retf
jmp
dec
or
outs
outs
mov
sbb
into
cmp
add
popf
les
cmps
aam
into
out
fsub
into
fiadd
data16
pusha
xor
cmp
hlt
into
rcl
les
push
dec
sbb
or
xor
mov
loop
or
dec
into
cmc
sub
add
into
scas
cmps
adc
xor
mov
push
ja
inc
into
cld
push
fidiv
inc
loopne
sbb
into
loope
and
scas
cmp
jbe
add
test
cmps
jl
mov
not
add
movs
dec
sub
dec
or
scas
inc
or
mov
sub
sbb
dec
sbb
push
mov
mov
jg
sbb
and
jp
xchg
bound
sub
imul
lods
sbb
cmp
mov
repz
into
std
inc
shl
ins
push
dec
mov
mov
jp
add
cmp
ja
movs
ins
loope
push
sub
movs
jmp
xor
jmp
sbb
inc
dec
adc
mov
addr16
inc
cdq
adc
mov
push
jge
pop
fsub
es
pop
mov
into
inc
push
sti
pop
lods
xchg
mov
rol
pop
or
lods
xor
ja
out
xlat
sar
into
xchg
pop
cmps
jmp
dec
call
xchg
into
jbe
mov
lock
or
inc
aaa
xor
dec
mov
bswap
xchg
into
repz
gs
or
in
and
jmp
push
inc
adc
jecxz
movs
(bad)
inc
in
aam
into
shl
inc
lods
stos
mov
dec
mov
ror
add
pusha
aaa
into
push
ret
sub
and
add
(bad)
idiv
mov
hlt
cmp
cmp
xor
(bad)
into
cdq
ds
mov
mov
(bad)
lods
pop
scas
dec
pushf
in
jecxz
mov
inc
fisub
shr
adc
inc
in
test
into
(bad)
jle
dec
pop
test
sub
je
jecxz
jo
into
jno
push
xchg
add
imul
cdq
jmp
into
mov
inc
add
into
je
xlat
jne
xchg
inc
daa
std
cmp
xor
int
pusha
jmp
into
(bad)
sar
test
mov
push
fmul
dec
adc
bound
inc
out
into
inc
push
mov
lock
dec
js
aas
in
cmp
stos
popf
out
test
mov
fwait
pop
cmp
test
mov
dec
or
into
movs
dec
or
mov
lock
cli
mov
ror
push
sbb
into
shr
and
daa
movs
jmp
mov
push
xor
into
fisubr
push
xchg
ret
(bad)
mul
lods
stos
push
inc
leave
sub
xor
test
inc
dec
lods
sub
adc
inc
jns
push
mov
ja
push
xlat
scas
adc
or
popa
cld
mov
mov
cmps
jae
push
into
and
loop
dec
cmp
into
cdq
pop
jmp
push
pop
cmps
popf
mov
stos
fist
cmps
into
mov
les
vmread
or
sbb
fsubr
xchg
dec
pushf
xor
ins
mov
inc
dec
lods
pop
or
jge
std
jmp
daa
stc
push
scas
mov
cmps
jmp
jns
cwde
loop
retf
mov
push
std
pop
add
sbb
rcr
into
sahf
in
mov
mov
or
fadd
rcr
mov
and
push
cld
fs
jle
out
sbb
mov
aas
jecxz
fbld
add
pop
jbe
data16
push
scas
sahf
push
nop
into
cwde
jecxz
pop
cmps
mov
aam
pop
rcr
cmp
jmp
jg
cs
into
cmp
addr16
adc
scas
mov
je
cmp
(bad)
icebp
sub
add
movs
lea
or
loope
sub
mov
jg
sbb
xchg
mov
push
aad
sub
jle
lea
cmps
call
into
call
rol
add
aas
mov
pop
pop
mov
into
xor
xlat
inc
jb
mov
jle
arpl
icebp
sbb
into
pusha
xchg
ret
aaa
and
mov
out
mov
out
xor
pop
nop
sub
into
pop
pop
sub
lods
adc
jle
sbb
aaa
movs
mov
loope
call
mov
movs
push
int3
dec
mov
sbb
jns
dec
mov
into
cdq
and
cmp
out
adc
out
sahf
mov
fs
jmp
aaa
aad
mov
leave
fsubp
push
(bad)
js
xchg
into
data16
outs
xchg
movs
push
(bad)
nop
or
jle
sbb
jmp
sbb
lea
pop
daa
lods
cmc
movs
mov
lods
pop
int
xor
add
nop
inc
inc
mov
in
adc
mov
mov
into
lahf
dec
jg
mov
out
jae
sbb
shl
stos
add
mov
sub
cld
and
inc
pop
pop
scas
inc
lods
pop
loope
ds
ins
psubusw
fild
xor
into
mov
retf
mov
into
popa
fisttp
inc
into
ds
or
adc
mov
xchg
retf
xchg
fs
dec
scas
sub
ins
into
fdivr
mov
dec
into
scas
scas
jae
daa
xchg
movaps
push
(bad)
lds
imul
cli
arpl
jb
aas
scas
adc
mov
in
outs
test
repz
mov
mov
xor
sub
cmp
leave
xchg
and
ss
adc
stos
mov
push
or
fidivr
loope
mov
mov
into
cdq
in
aaa
retf
lods
xchg
push
add
jns
sub
repnz
pop
pop
scas
jae
jmp
mov
outs
cmps
lahf
in
stos
into
movs
jecxz
cdq
cld
xchg
sbb
or
push
jge
pop
into
ret
outs
pushf
sub
lods
mov
stos
jle
loop
ret
sar
mov
jne
fild
into
cs
adc
mov
call
sub
into
pop
pop
mov
inc
pop
scas
ret
aad
fld
stc
lods
ins
mov
imul
jge
sahf
sbb
repz
cmp
fstp
mov
cmp
xchg
retf
scas
shl
pushf
pusha
xlat
movs
and
test
adc
js
cld
sub
inc
int3
(bad)
into
inc
das
jmp
or
adc
mov
xor
out
cmp
outs
push
fstp
adc
sbb
lahf
sub
sub
dec
xchg
mov
inc
stos
js
into
fnsave
mov
push
mov
push
into
retf
int
sub
cmp
retf
push
sbb
adc
mov
into
xchg
aaa
adc
fs
into
dec
es
(bad)
xor
call
xor
fmulp
retf
adc
pop
dec
mov
(bad)
fwait
test
sbb
dec
aas
cmc
(bad)
in
repz
lea
pop
xor
std
lods
daa
into
or
xor
and
into
mov
into
mov
cld
je
mov
sbb
adc
into
and
xchg
popa
cmps
pop
hlt
les
lahf
loope
into
pop
ret
xor
mov
mov
into
sub
stos
and
push
ror
cmp
inc
scas
rcr
sub
cmps
mov
pop
push
shl
jmp
fadd
bound
into
mov
cmps
mov
xor
mov
dec
out
into
jg
scas
mov
into
mov
mov
arpl
push
into
sar
ja
shl
test
mov
inc
jge
aas
or
jae
pop
repz
popa
sti
adc
into
mov
xor
push
mov
xchg
lods
add
scas
mov
into
retf
jge
call
lods
dec
and
into
jo
loopne
mov
inc
xor
outs
into
daa
arpl
dec
and
cmp
mov
pop
in
add
repnz
sti
jbe
pop
push
popf
cmp
mov
jmp
add
(bad)
dec
into
xor
test
xchg
into
sbb
or
xchg
and
icebp
sub
mov
mov
test
into
add
inc
inc
mov
push
into
or
jmp
cmp
pusha
xchg
sub
call
scas
jl
and
cdq
adc
out
nop
inc
sub
daa
sub
popf
cmps
lods
repnz
add
adc
fcmovnbe
pop
into
mov
je
xor
ds
(bad)
cmp
push
out
mov
fcomp
push
mov
xchg
out
and
lods
out
push
jge
shl
jmp
repz
mov
daa
mov
mov
mov
out
pop
sti
xchg
test
push
or
scas
and
(bad)
into
imul
lahf
hlt
sar
and
into
mov
ret
mov
out
pusha
test
inc
in
sti
jle
mov
cli
(bad)
jecxz
mov
or
dec
aas
cdq
pusha
enter
or
or
repz
or
pop
dec
sbb
out
mov
shr
jg
pop
popf
inc
dec
and
test
dec
test
jge
add
jp
sub
mov
into
cmc
out
adc
and
sub
(bad)
div
sub
cli
lods
and
pop
mov
or
sar
sub
arpl
shr
cmp
dec
lods
loop
out
jecxz
out
lods
mov
daa
cs
pop
push
into
mov
lods
mov
mov
cs
out
retf
into
xchg
cld
imul
into
in
mov
dec
jg
ja
pop
into
rcr
fcom
sbb
les
test
in
lods
into
aad
and
aas
adc
test
call
sub
sbb
or
mov
into
jmp
(bad)
and
into
push
retf
imul
mov
mov
aas
scas
in
sbb
int
mov
(bad)
jg
push
int3
xchg
and
test
fsubr
cmp
mov
(bad)
enter
lahf
lahf
inc
jg
imul
xor
into
sbb
jg
ja
repnz
ret
jmp
jmp
mov
pushf
jbe
mov
popf
push
inc
int
pop
mov
mov
scas
mov
imul
ins
arpl
cmc
push
add
pop
mov
cs
push
xchg
(bad)
lahf
xchg
jae
rcl
sbb
mov
sbb
dec
outs
leave
sbb
aaa
(bad)
jae
lock
push
cmc
sbb
loopne
mov
imul
into
mov
into
add
jmp
jnp
dec
stos
xchg
jp
and
into
jge
imul
add
test
outs
lsl
into
jbe
cmp
movs
mov
adc
(bad)
fisttp
mov
dec
repnz
jg
bound
test
aam
jmp
into
outs
mov
aas
mov
xor
stos
movs
lahf
mov
into
hlt
scas
pusha
mov
movs
movs
add
sub
pop
push
arpl
imul
sub
into
mov
xlat
xchg
dec
mov
or
cmps
mov
mov
daa
cmp
into
test
in
ficomp
push
push
std
and
fs
scas
add
inc
and
fldcw
cwde
ficomp
loop
add
sbb
into
cmp
shr
(bad)
lds
test
pop
fidivr
out
dec
jg
xor
pop
and
loopne
cmp
or
pop
test
aad
mov
dec
cmp
cmps
dec
(bad)
dec
inc
xchg
mov
mov
lods
or
pop
test
dec
scas
and
enter
sub
push
mov
and
inc
push
shl
daa
jbe
imul
add
jecxz
push
fwait
into
rcr
into
adc
or
addr16
lods
xchg
das
into
int
pop
cmp
sahf
lods
addr16
or
scas
push
dec
cs
or
out
lahf
les
fs
fnstenv
dec
push
int
into
add
cmp
movs
ret
je
xchg
sbb
ja
inc
inc
movs
or
or
(bad)
push
out
cs
jmp
pop
jle
or
loope
inc
nop
cmp
in
and
repnz
ss
add
mov
call
push
dec
xor
or
call
mov
retf
push
mov
or
ins
jg
imul
into
fadd
cdq
pushf
out
mov
mov
and
pop
pop
mov
and
lods
scas
xor
cwde
cmps
stos
mov
cmp
jmp
pusha
xchg
ret
sub
xor
scas
ins
xor
div
into
idiv
(bad)
enter
scas
std
add
out
test
mov
and
pop
pop
xor
int
sbb
mov
mov
test
dec
mov
cmp
xchg
sbb
dec
push
call
cmp
in
xchg
and
or
and
sub
fabs
imul
into
arpl
in
scas
jmp
(bad)
mov
rcl
shl
add
lea
imul
inc
cmp
push
xor
mov
fcom
adc
or
stos
dec
(bad)
ins
ins
jns
dec
mov
dec
push
mov
test
mov
ins
mov
(bad)
imul
in
mov
dec
jecxz
mov
xor
into
mov
sar
loopne
pop
pop
loop
into
icebp
loope
sub
shr
sbb
ret
xor
into
jmp
mov
retf
or
push
addr16
sub
xchg
into
cli
scas
dec
in
or
inc
into
iret
call
mov
es
xchg
push
mov
div
stos
add
outs
into
inc
dec
mov
(bad)
out
jbe
(bad)
mov
inc
mov
fs
and
and
or
xchg
sub
push
into
imul
fistp
and
pop
ja
jno
retf
bound
mov
pop
int
movs
ficom
xchg
into
jge
ja
sbb
add
mov
push
mov
cmp
scas
push
cli
addr16
repnz
or
inc
aad
stos
adc
into
mov
jne
repnz
dec
or
mov
sub
es
pop
mov
jne
cmp
int
push
lahf
retf
push
daa
mov
xchg
xchg
mov
push
pusha
lods
into
jns
and
loope
mov
inc
mov
inc
mov
inc
jmp
push
into
inc
mov
loopne
das
movs
mov
cmp
mov
mov
ss
dec
pop
repz
dec
scas
inc
mov
pushf
out
and
in
out
xchg
repz
add
leave
shr
adc
push
pop
sbb
add
push
xlat
cmps
pop
push
lahf
outs
mov
outs
cmp
into
les
xor
xchg
pop
fxch
or
add
sbb
add
into
outs
mov
inc
pop
mov
mov
out
xchg
jmp
push
mov
loop
fisttp
push
fidiv
into
or
mov
push
fbld
sbb
add
(bad)
jns
lods
mov
lock
mov
das
xchg
in
add
mov
xor
enter
out
lods
push
cmp
test
aas
mov
lahf
loopne
cmp
pop
retf
aas
fmul
mov
repz
xor
and
mov
add
push
sub
inc
in
into
mov
or
mov
je
and
inc
pop
test
fwait
adc
cmc
scas
sub
into
sbb
ins
out
inc
into
jmp
jno
leave
test
gs
idiv
lods
pop
mov
sti
add
loop
push
cs
mov
outs
movlhps
pop
pusha
cmp
jmp
pop
pop
xchg
popf
je
jecxz
call
nop
loop
dec
cmps
lds
into
ss
pop
xor
pop
sbb
out
in
shl
outs
in
cli
(bad)
dec
or
sub
dec
cmp
push
scas
test
inc
out
xchg
ror
and
push
into
js
xor
aas
bound
xchg
cs
xor
movs
push
ret
cmp
pop
or
into
stos
inc
and
add
mov
and
mov
cmps
or
icebp
into
repz
ds
xchg
jae
aas
cmps
sub
inc
add
xchg
xor
pop
imul
or
(bad)
leave
and
sub
test
std
jne
and
aaa
jmp
popf
repz
retf
xchg
jge
enter
cmp
(bad)
loop
pop
pop
fisttp
mov
in
xchg
les
pop
sub
aas
adc
cmp
push
push
push
cmp
sbb
dec
leave
dec
pop
movs
into
dec
mov
cmp
je
jae
movs
scas
jge
ds
mov
out
jne
mov
mov
repnz
push
in
into
sub
cmc
into
movs
(bad)
cdq
mov
xor
dec
into
pop
cmp
sub
mov
or
(bad)
es
mov
das
fdivr
pushf
and
mov
into
jg
jmp
imul
xor
jb
pop
push
ret
or
test
xchg
mov
neg
jo
lahf
lea
scas
dec
jbe
dec
test
cli
inc
in
into
xchg
aad
cmp
jge
jns
sbb
or
loope
out
into
mov
stos
xor
add
sbb
into
call
inc
mov
fmul
ds
jmp
rcl
inc
aas
ja
jp
adc
repnz
xchg
outs
inc
mov
js
push
push
cli
dec
jns
xor
jmp
jp
scas
arpl
mov
pop
mov
rcl
js
jns
icebp
daa
out
scas
test
and
data16
xor
sti
out
mov
mov
mov
xchg
jnp
sub
cs
into
test
(bad)
daa
xchg
sbb
stos
es
cmp
mov
xor
into
and
or
jl
clc
mov
repz
enter
xor
in
scas
jmp
mov
and
fisubr
pop
xchg
(bad)
mov
push
or
and
dec
inc
adc
xor
adc
dec
lahf
inc
lods
icebp
xor
inc
or
daa
cmp
leave
mov
sysret
scas
mov
mov
test
hlt
loop
es
into
pop
and
cmp
mov
ins
gs
test
outs
test
movs
pop
into
dec
mov
scas
sub
ror
sbb
mov
iret
xchg
out
pop
(bad)
cli
mov
aas
(bad)
dec
xor
into
jae
out
mov
cs
jecxz
das
xchg
pop
data16
in
imul
into
mov
mov
sbb
(bad)
into
push
loopne
scas
mov
pop
into
outs
mov
sub
cmp
es
fdivr
ret
into
xchg
out
cs
pop
mov
xchg
aaa
add
shr
stos
xor
into
aam
ret
mov
mov
jge
mov
mov
ss
jbe
loopne
retf
dec
push
mov
pop
adc
sub
out
cmps
aas
cmp
in
addr16
ins
into
sbb
icebp
lahf
test
sbb
shl
into
cli
push
popa
fcom
adc
fmul
sahf
das
mov
or
into
inc
stos
cmp
or
pop
dec
sbb
ins
into
dec
mov
pop
pop
fsubp
into
adc
pop
pop
jle
test
test
inc
lods
inc
or
sbb
pop
dec
cmps
in
scas
aaa
sbb
sahf
push
imul
pop
dec
ins
fidivr
pop
inc
into
inc
dec
mov
dec
iret
push
into
or
retf
scas
xchg
inc
enter
das
adc
clc
bswap
cmp
mov
mov
into
in
cmp
mov
xchg
into
outs
imul
in
fwait
aas
aad
not
push
test
(bad)
popa
leave
lock
cwde
aaa
retf
xchg
xchg
inc
mov
imul
mov
fsubp
repnz
into
jnp
xchg
(bad)
shr
add
mov
xchg
jmp
cmps
mov
bts
arpl
shl
cmp
scas
xchg
into
mov
movs
dec
dec
xchg
xchg
mov
into
sub
cmp
or
into
lahf
jno
add
ins
pop
mov
mov
in
adc
cmp
es
mov
and
push
mov
ins
in
pusha
(bad)
sti
(bad)
arpl
jmp
lock
dec
pop
add
mov
bnd
into
pop
xor
popf
into
and
sbb
(bad)
mov
or
dec
inc
cmc
stos
scas
jg
mov
jb
(bad)
mov
xor
sahf
cmc
jecxz
retf
shl
pop
movs
mov
mov
in
out
xchg
mov
inc
movs
dec
mov
ficom
lahf
xchg
scas
call
inc
jg
clc
sahf
(bad)
aad
test
test
cmp
dec
xchg
fsub
and
into
push
mov
cs
and
stos
aad
test
push
cwde
lahf
xchg
invd
xchg
fimul
(bad)
scas
xor
add
inc
pop
add
retf
sar
scas
mov
das
jge
sbb
test
shl
shl
xchg
xchg
pop
pop
rol
inc
(bad)
aam
popf
in
into
mov
add
(bad)
into
ss
pop
mov
ja
xor
scas
mov
arpl
aam
cmp
lock
imul
xchg
pop
jecxz
pusha
adc
call
xchg
jbe
inc
test
mov
pop
mov
aaa
(bad)
mov
fsubrp
into
clc
call
adc
mov
dec
(bad)
cdq
sub
cmp
jnp
mov
dec
pop
stc
mov
xchg
loopne
scas
mov
mov
lahf
fdiv
pop
sti
mov
mov
cmps
pop
into
mov
or
mov
and
sti
jne
pop
das
dec
dec
jb
test
pop
jge
mov
mov
mov
pmaxsw
jne
fisttp
cmp
icebp
xchg
ss
pop
mov
lahf
mov
sbb
or
retf
push
(bad)
out
inc
xchg
pop
test
in
and
add
in
into
adc
lods
adc
into
cld
dec
fwait
and
mov
(bad)
pop
or
arpl
mov
jmp
into
sbb
mov
test
jp
mov
lea
sub
scas
and
add
loop
inc
bsr
call
into
dec
mov
cmps
scas
mov
retf
fidivr
mov
out
jmp
aaa
pop
ins
or
xchg
jno
aaa
stc
les
xchg
adc
xchg
mov
cmc
mov
sub
out
retf
ins
into
std
and
cmps
mov
xor
or
js
retf
mov
aas
sub
xchg
add
dec
out
cwde
test
adc
mov
inc
in
fstp
adc
movs
push
(bad)
hlt
int3
jnp
or
(bad)
lods
cmp
rol
push
out
xchg
xchg
push
dec
hlt
or
sbb
aam
popf
add
dec
call
jb
into
mov
mov
bnd
mov
pmullw
test
aam
shr
mov
add
into
cld
xchg
jl
aas
stos
sub
xor
cmp
mov
jecxz
push
ss
stos
out
and
jae
cmp
outs
xchg
jle
and
and
mov
imul
mov
popa
lahf
(bad)
inc
xlat
fs
aaa
scas
pop
movs
mov
mul
into
sbb
fdivr
arpl
into
shl
pop
push
test
xchg
retf
into
cmp
add
sbb
sub
repz
mov
sar
jp
jmp
dec
mov
rep
sub
das
jg
lock
ror
sbb
ret
pop
out
(bad)
hlt
into
je
pop
jae
sti
mov
stos
mov
push
and
pop
(bad)
sbb
into
retf
popf
enter
scas
pop
sbb
rcr
ins
push
dec
and
lahf
cmp
cld
out
(bad)
jae
in
(bad)
into
and
inc
in
imul
and
jae
sbb
pushfw
repz
sar
into
pop
lods
push
mov
xor
(bad)
pop
jns
mov
into
dec
jl
inc
shl
into
or
mov
aas
adc
xchg
call
add
add
call
jge
cli
repnz
inc
and
xor
adc
into
lods
in
mov
cmp
cs
mov
fisttp
out
mov
fwait
sub
js
mov
stos
xchg
bswap
addr16
or
into
scas
jo
in
cmc
add
scas
pop
shr
pop
mov
scas
adc
or
and
lods
fs
xchg
mov
out
xchg
nop
and
out
retf
sti
into
jbe
fdivp
(bad)
fs
imul
daa
loopne
sbb
push
inc
out
test
cmp
imul
leave
adc
mov
into
xlat
pop
push
push
fbstp
jmp
and
inc
stos
xor
sbb
jle
jmp
and
into
pop
sub
into
fisttp
and
fsubr
loope
pop
pop
xlat
mov
loopne
repz
call
aaa
(bad)
out
into
sbb
(bad)
xchg
into
addr16
mov
jl
clc
int3
into
not
jle
xor
into
sahf
xchg
cmp
sub
sbb
or
mov
pop
mov
test
mov
mov
pop
daa
into
test
call
mov
or
cmp
add
cmp
dec
test
outs
clc
ds
cli
mov
into
mov
nop
push
mov
in
retf
pop
push
into
int3
and
add
leave
sbb
pop
into
jecxz
aad
add
pop
fidiv
xor
mov
cld
xor
cmp
imul
add
test
scas
push
(bad)
dec
jg
out
xchg
cmove
pushf
jmp
push
mov
xchg
imul
push
shl
hlt
xchg
mov
sbb
pop
dec
(bad)
and
mov
lds
retf
jge
test
sub
hlt
into
cmps
addr16
and
inc
mov
pop
shl
pushf
icebp
ins
pop
mov
arpl
and
lea
pop
aad
in
fucomi
mov
mov
scas
add
das
jae
mov
and
push
cmp
xchg
dec
lock
lods
xchg
loope
out
inc
outs
shl
imul
into
jb
call
jl
ja
bound
(bad)
push
mov
cmp
dec
mov
cmps
dec
xchg
jmp
rcl
sbb
cmp
popf
xchg
pop
sbb
push
mov
cwde
dec
xchg
rcl
retf
scas
mov
dec
out
push
mov
xor
cmp
out
outs
into
sub
ss
pop
out
retf
jg
int3
lods
mov
or
popa
ficom
test
mov
cmp
out
pop
mul
sub
(bad)
jmp
cmp
dec
sub
mov
outs
cmps
leave
and
lods
pusha
mov
cmps
push
jmp
enter
mov
jae
out
mov
(bad)
jne
into
in
daa
jns
fwait
pop
in
enter
push
xchg
aas
or
cwde
dec
and
mov
stc
mov
and
fwait
pop
mov
test
dec
nop
pop
adc
xor
push
cmp
imul
data16
out
pop
fsubr
out
cs
mov
stos
and
cli
mov
into
retf
jmp
into
mov
retf
cmp
mov
xchg
cli
call
pop
cmps
into
jle
fs
ins
rcl
fmul
and
mov
scas
std
sub
xor
icebp
enter
daa
dec
xor
into
push
xor
and
into
in
test
sub
mov
inc
mov
xchg
arpl
jae
(bad)
pop
jp
mov
nop
imul
dec
sar
out
into
mov
ja
test
push
pushf
adc
push
leave
aaa
xchg
xchg
dec
mov
xor
addr16
js
xor
cmp
mov
dec
out
jmp
dec
xchg
rol
into
fdivp
mov
xor
stos
imul
jmp
pop
push
inc
mov
into
stc
retf
outs
mov
jns
sbb
inc
jmp
into
in
mov
mov
sub
out
mov
cdq
and
mov
scas
pop
jb
jl
xchg
adc
pop
mov
cmp
into
rol
sbb
sub
into
dec
pop
sbb
shl
ficom
adc
dec
std
dec
movs
enter
mov
cmp
into
mov
stos
sbb
into
mov
icebp
repnz
(bad)
imul
popf
out
ja
adc
test
pop
add
xchg
scas
repnz
(bad)
pop
into
stos
pop
jbe
test
(bad)
lahf
jecxz
mov
imul
xor
jecxz
outs
repz
popa
retf
and
stos
into
xor
inc
in
fdivr
out
adc
test
rol
bound
into
sbb
pushf
xor
add
cmps
in
(bad)
je
int3
adc
rcl
jp
mov
push
sub
sub
outs
into
and
pop
jae
(bad)
mov
push
into
movs
loopne
cdq
cmps
sahf
aad
out
ret
into
icebp
push
cmp
into
xor
pop
std
adc
mov
adc
jge
mov
sti
mov
shl
sbb
dec
xchg
xor
pop
movs
into
jecxz
sub
retf
xchg
out
push
ret
cmp
sub
sub
cmp
inc
or
mov
cli
lahf
jno
xchg
ds
into
mov
mov
(bad)
cld
hlt
inc
cmp
daa
mov
into
pop
lahf
in
lods
adc
test
mov
sub
sbb
mov
cmp
lods
and
push
jmp
pop
pusha
push
into
push
jp
in
int
and
mov
jg
adc
xor
mov
std
xchg
jg
loop
clc
fstp
pop
rcr
into
in
mov
inc
into
out
cdq
mov
adc
ret
enter
mov
lds
dec
in
scas
pop
sub
push
cmp
mov
repnz
cmp
inc
leave
mov
lea
add
jl
scas
js
jge
xchg
out
push
retf
mov
jbe
dec
popf
adc
das
enter
ds
loopne
sar
pop
add
inc
dec
inc
into
mov
and
stos
out
or
push
mov
add
pop
xchg
in
fisub
sar
into
js
mov
loop
out
sbb
push
out
dec
bswap
inc
sahf
adc
cmp
mov
adc
sbb
imul
adc
mov
(bad)
and
dec
fs
je
push
pop
outs
cmc
sub
sahf
xlat
push
into
test
lock
into
jns
mov
and
aas
(bad)
dec
into
adc
dec
outs
out
stc
into
fsubp
inc
add
jge
and
(bad)
icebp
repz
into
cmp
stos
push
jg
cmp
aaa
pop
into
mov
sub
dec
inc
lods
add
dec
cmp
cs
mov
dec
mov
enter
mov
imul
mov
sbb
mov
ja
dec
test
mov
xchg
jb
or
sbb
jno
mov
mov
js
es
imul
sub
test
push
retf
cmp
or
dec
pushf
ins
sub
scas
inc
das
pop
mov
add
into
pop
or
cmp
and
push
scas
mov
repnz
adc
dec
cs
pop
xchg
adc
sbb
sub
hlt
cmc
jb
pushf
pop
out
into
js
jnp
jmp
mov
sbb
cld
out
add
nop
sbb
push
into
xor
ins
mov
hlt
repz
dec
cmp
enter
fisttp
loopne
scas
or
test
lahf
pusha
faddp
pop
sub
into
shl
push
sti
mov
fwait
aas
mov
sub
inc
jb
mov
retf
stc
scas
(bad)
jl
push
data16
gs
dec
cdq
fnsave
outs
inc
mov
movs
stos
inc
leave
retf
into
ds
fstp
cmp
xchg
sar
pop
into
and
scas
xor
into
cli
inc
call
mov
jns
shl
pop
cs
test
into
push
dec
fwait
xor
mov
mov
into
and
inc
scas
jmp
stos
cli
lock
(bad)
daa
dec
lods
sub
cld
mov
sbb
push
mov
pop
lar
jae
aas
bound
xchg
sahf
inc
into
int
push
(bad)
arpl
ret
scas
inc
fisttp
into
inc
sar
xor
xor
mov
jecxz
push
outs
into
xor
push
cli
aas
in
aam
stos
sbb
sbb
cmc
out
outs
(bad)
gs
adc
mov
sbb
bound
fs
mov
sbb
jg
mov
or
sub
repz
(bad)
mov
inc
adc
mov
fnstenv
pop
aad
aaa
mov
into
sub
test
cmp
lods
adc
clc
retf
shl
icebp
jne
pop
push
stos
cmp
inc
int3
inc
into
inc
mov
xor
jae
sub
push
cld
mov
ss
mov
shl
mov
int
sub
jne
pop
push
test
scas
jns
push
cli
mov
loopne
cmovo
dec
icebp
lods
cs
mov
adc
sbb
into
add
mov
pop
push
lods
imul
psllq
xor
jo
aas
leave
ja
ret
rol
xchg
test
sbb
in
or
xchg
mov
call
loop
loopne
aas
and
mov
outs
outs
outs
mov
std
loopne
jns
jle
mov
mov
or
in
das
push
adc
into
fld
pusha
daa
movs
je
mov
dec
cdq
fcomip
inc
in
scas
sub
(bad)
mov
data16
jnp
dec
into
xchg
in
sub
mov
dec
mov
mov
mov
daa
das
xchg
ror
aad
push
cli
cli
ins
into
in
dec
or
jle
mov
mov
punpcklbw
inc
fwait
rcr
sub
adc
je
sbb
mov
mov
and
pop
mov
and
mov
mov
aaa
setns
into
in
adc
stos
dec
pop
mov
lods
into
retf
mov
mov
inc
aas
fs
dec
and
mov
and
inc
push
test
pop
cli
cmp
jae
dec
into
pop
shl
popa
test
mov
cmp
push
sub
sbb
push
jo
lods
inc
sub
bswap
mov
dec
cmp
into
dec
xchg
jnp
xchg
ret
into
and
movs
into
cmps
push
imul
dec
mov
neg
loope
jne
sti
int3
ss
sbb
(bad)
sahf
and
lods
dec
gs
mov
test
or
or
cli
outs
into
sub
inc
dec
lods
mov
xchg
add
test
jle
int
nop
into
push
inc
pusha
or
sbb
dec
pop
addr16
fwait
cld
popf
outs
mov
sqrtps
cmp
pop
or
lock
sar
xor
sahf
aad
inc
scas
test
mov
pmaxsw
stos
into
push
inc
or
sbb
loope
pop
inc
mov
test
mov
sbb
seta
push
in
fnsave
ins
inc
test
lea
js
out
mov
aas
inc
into
sahf
xchg
call
push
movs
addr16
jmp
into
fxch
pop
icebp
hlt
lods
cmps
retf
loop
(bad)
pop
cmp
test
scas
test
out
jmp
xlat
sbb
paddb
xor
cmp
in
lahf
imul
lods
dec
aad
jb
out
dec
test
xchg
into
push
shr
outs
nop
push
dec
cwde
push
int
add
and
psllw
aas
das
stc
fs
shr
push
inc
into
sbb
lea
retf
lods
into
dec
fsub
xchg
or
inc
xor
popa
(bad)
ja
xchg
loop
push
jge
xor
sbb
in
mov
retf
add
push
stos
mov
call
cli
ret
icebp
mov
outs
adc
mov
cmp
stc
dec
out
mov
dec
into
pop
sub
stos
jns
inc
mov
adc
jno
call
push
sahf
into
lods
enter
stos
repz
gs
test
pop
mov
add
fnsave
into
cmps
mov
mov
shl
nop
jnp
dec
mov
into
cmp
test
xor
dec
push
inc
das
sub
sbb
or
or
int3
dec
mov
loopne
into
popf
aam
push
or
pop
dec
xor
ja
push
dec
jg
pushf
in
mov
addr16
retf
aas
(bad)
stos
leave
dec
cli
call
push
imul
ja
mov
mov
jnp
scas
(bad)
in
xor
push
fisubr
ror
in
mov
or
adc
imul
repz
aaa
jo
outs
mov
int
outs
pop
stos
dec
jge
loop
ins
(bad)
mov
add
jl
or
test
std
xchg
ins
push
cmp
loop
and
mov
out
mov
sbb
inc
into
pop
fist
popf
sbb
into
push
jecxz
mov
scas
shl
(bad)
cld
xchg
cmp
aad
ror
mov
(bad)
fcmovnb
dec
out
int
aad
push
jnp
in
ror
lock
pop
or
into
lea
adc
pop
ins
sbb
outs
leave
sub
cs
pop
xchg
jge
icebp
mov
jg
out
into
dec
imul
jb
adc
and
xor
call
xchg
sub
test
mov
sbb
sub
pop
adc
pop
call
scas
rcl
repz
cs
into
mov
dec
lods
pop
xchg
pop
addr16
sub
mov
xchg
jl
repz
scas
lds
lahf
sbb
test
movs
adc
ret
mov
sub
into
idiv
jl
(bad)
into
jmp
test
mov
das
call
into
imul
into
mov
jge
mov
fwait
test
test
push
movs
out
dec
cmp
cmp
popf
test
retf
into
adc
inc
inc
mov
mov
in
adc
into
sub
leave
push
test
pushf
int3
mov
xchg
xor
inc
xor
fs
popa
loopne
test
xchg
adc
jmp
out
js
sub
loope
adc
jne
into
(bad)
and
push
fwait
into
jp
sahf
sbb
outs
in
movs
inc
xchg
pusha
mov
sbb
sbb
cwde
into
cmp
inc
test
pop
mov
pop
call
mov
jnp
dec
xchg
cmp
clc
div
sub
gs
mov
into
in
xor
outs
aaa
stc
scas
jl
push
fisub
cmc
scas
inc
pop
into
push
pop
lea
scas
cmp
scas
movs
push
or
ror
push
movs
dec
stos
sub
dec
xor
outs
cdq
fisub
cmp
add
ror
stos
cmp
fimul
into
repnz
test
out
and
cmc
scas
movs
sbb
out
test
test
retf
aam
xor
add
jg
mov
repz
lods
mov
cmps
sbb
sahf
adc
test
xor
ja
mov
push
jae
bound
pop
push
(bad)
(bad)
ss
repnz
mov
pop
lods
xor
into
test
les
es
into
pusha
sbb
test
movs
mov
movs
aad
cmp
pop
cdq
xchg
pop
mov
push
(bad)
out
movs
pop
push
cmp
daa
test
into
loope
jns
cmp
ins
mov
cmp
push
or
dec
test
cmp
dec
repnz
into
inc
jmp
adc
dec
jno
in
mov
push
loopne
scas
(bad)
or
dec
test
addr16
dec
add
cmp
lea
es
jmp
mov
(bad)
movhps
out
adc
out
ret
xchg
loop
mov
cmp
add
call
sbb
push
dec
addr16
cmp
jne
repz
jge
fsubrp
or
lahf
stos
das
aad
popf
xchg
cs
lods
mov
or
enter
inc
out
jg
je
(bad)
xchg
dec
mov
sbb
repnz
or
test
ja
jge
inc
lahf
lds
dec
into
cmp
mov
pop
out
dec
seta
dec
into
mov
sub
repnz
into
inc
daa
test
aaa
or
sbb
cmp
xchg
mov
fild
push
sub
push
loop
adc
xchg
add
(bad)
in
test
xchg
fisubr
outs
cdq
ret
xchg
sub
and
and
clc
xor
sbb
es
lahf
gs
shld
mov
dec
retf
xchg
or
xor
into
pop
outs
loopne
and
ins
into
xchg
sub
xor
into
dec
dec
je
dec
cmp
jns
out
in
scas
sub
mov
data16
in
outs
ins
adc
int3
fld
cs
test
das
ss
pop
(bad)
push
lods
push
push
cmp
add
jg
xchg
dec
inc
call
push
mov
inc
xchg
jae
adc
mov
movs
xor
mov
push
jmp
lea
sbb
mov
scas
xchg
mov
sub
adc
pop
enter
jbe
icebp
mov
hlt
scas
mov
arpl
movaps
adc
test
inc
mov
fisub
mov
test
icebp
jmp
loope
cld
cmp
into
inc
lahf
sbb
sahf
xor
mov
in
sbb
add
imul
pop
fmul
popa
mov
repnz
fsubr
test
push
in
test
loope
ret
scas
pop
mov
inc
mov
dec
imul
cmp
sub
into
pop
jmp
mov
mov
lds
mov
fwait
or
movs
mov
pushf
xor
push
gs
ret
into
cld
dec
lods
les
into
adc
popf
icebp
cwde
loope
(bad)
pop
(bad)
scas
in
addr16
and
out
jg
into
clc
mov
aas
and
stos
gs
sbb
loop
and
into
and
inc
scas
je
inc
sub
mov
push
push
cdq
(bad)
stos
mov
in
ret
pop
out
jecxz
lock
aas
push
mov
jb
mov
sbb
push
xchg
pop
adc
inc
jae
enter
loop
inc
push
ficom
fmulp
mov
pop
sub
pop
dec
sub
and
in
mov
into
dec
addr16
sub
mov
aad
xchg
ds
into
push
ja
bound
dec
dec
jnp
(bad)
rcr
jno
sbb
dec
into
lock
arpl
pop
xor
inc
or
into
sub
pop
adc
adc
adc
cmp
mov
pop
pop
or
into
xchg
gs
outs
mov
ror
int3
movs
in
inc
lods
xchg
icebp
daa
outs
fs
cmps
mov
stos
push
mov
movs
or
add
or
push
fwait
and
rcl
pop
push
inc
inc
and
scas
retf
adc
sbb
movs
call
mov
or
enter
mov
dec
mov
test
or
dec
sub
aaa
adc
xchg
xor
mov
cmp
mov
pop
loop
call
or
(bad)
fcmovne
dec
sbb
in
adc
in
mov
jg
inc
into
push
dec
xor
sbb
bound
test
movs
shl
por
bswap
les
jne
jg
into
and
mov
into
cmp
or
into
sub
imul
repnz
test
inc
jl
inc
loopne
jecxz
fwait
push
adc
mov
ds
add
icebp
adc
stos
cmp
inc
scas
dec
into
pop
adc
xor
dec
mov
mov
fst
ret
lods
js
jmp
or
dec
into
mov
imul
outs
in
js
movs
fdiv
or
mov
jle
cmp
into
cdq
cmc
cmp
jl
popf
mov
into
imul
ss
retf
pop
jb
icebp
addr16
sti
jmp
cmps
mov
jecxz
sbb
(bad)
jl
mov
stos
dec
dec
mov
ins
pop
in
into
push
inc
jae
mov
test
mov
mov
pop
cmps
hlt
cmps
lds
or
mov
fcmovne
movs
push
sbb
pop
xchg
mov
cwde
test
out
push
pop
fcmovne
call
sar
and
scas
xor
mov
sub
mov
mov
test
cmp
scas
shr
xchg
mov
out
clc
and
jb
cmp
icebp
cmp
jge
jbe
push
lods
inc
lea
outs
cli
out
xchg
push
test
ins
popa
mov
mov
dec
lods
jmp
(bad)
push
into
push
mov
or
sub
ds
pop
ror
mov
inc
retf
arpl
mov
(bad)
daa
and
jg
sbb
and
jae
mov
into
loope
dec
pop
fwait
mov
mov
out
jo
adc
in
into
xchg
sub
mov
into
and
gs
into
imul
mov
pop
dec
addr16
retf
scas
into
sbb
sub
into
cmp
ja
or
rol
in
and
mov
test
pop
xchg
cmp
sbb
and
sub
repz
xchg
mov
xor
mov
mov
das
fcomp
or
inc
dec
ror
inc
inc
into
leave
dec
mov
into
jae
test
mov
movs
data16
or
adc
das
arpl
mov
ja
test
add
test
(bad)
hlt
sbb
inc
loop
xchg
ret
div
test
inc
xchg
(bad)
push
(bad)
cld
cmp
or
pop
push
pop
dec
mov
xchg
mov
out
jp
pop
xor
xchg
cs
int
scas
into
movs
dec
mov
add
dec
mov
pop
fucomp
inc
cli
into
sbb
out
aas
pop
jbe
and
mov
popa
les
cmp
sub
stos
xor
(bad)
pop
jo
mov
popf
shl
sub
(bad)
int
ror
jo
sbb
scas
fld
frstor
xor
fiadd
pop
xor
push
in
inc
test
or
repnz
dec
test
pop
imul
into
adc
test
sbb
loop
clc
xchg
mov
sahf
sub
test
mov
pop
sbb
cmps
stc
shl
into
cmp
add
in
pop
enter
and
xor
test
fwait
inc
(bad)
imul
into
rcl
(bad)
es
mov
out
dec
outs
into
cmp
repz
sub
pop
mov
(bad)
cmp
mov
movs
pushf
popa
sbb
das
adc
les
jle
lods
cld
and
rol
fst
ds
mov
arpl
out
push
cmp
mov
jecxz
mov
into
je
sbb
mov
cwde
into
jo
pop
rol
retf
into
mov
imul
data16
xchg
cmp
push
into
imul
sub
and
into
xor
mov
mov
mov
popf
ins
inc
stos
fsub
into
pop
in
add
out
dec
dec
call
repz
mov
std
xor
mov
xor
sub
imul
loopne
cdq
xchg
push
xchg
shl
aas
loop
dec
into
mov
outs
pop
es
dec
mov
(bad)
imul
cli
pop
pusha
xchg
out
xlat
into
lea
mov
fs
inc
and
push
dec
mov
out
cli
lods
mov
sbb
sbb
jns
int3
lds
cli
add
sub
imul
jmp
or
into
fld
das
xchg
xor
add
inc
xchg
mov
in
xor
test
scas
dec
jb
or
gs
into
out
pop
cmp
(bad)
stc
test
xchg
in
sub
adc
jno
xchg
dec
and
nop
xchg
scas
out
enter
call
xor
repnz
nop
in
into
(bad)
add
stos
mov
scas
jecxz
sub
xchg
lods
pop
inc
scas
cli
adc
(bad)
fwait
mov
cmp
mov
into
mov
into
xor
aas
daa
lods
dec
fs
repnz
ret
dec
out
mov
into
pop
ds
neg
test
sbb
mov
cwde
mov
test
aas
jae
sub
add
xchg
stos
add
push
mov
mov
test
pop
pop
aaa
mov
xor
sbb
(bad)
adc
into
jnp
add
leave
mov
mov
mov
cmp
rdtsc
dec
pop
inc
ja
mov
sti
cld
lods
push
out
mov
mov
add
sub
mov
dec
mov
stos
xor
lds
ss
movs
pushf
push
mov
icebp
jmp
dec
push
inc
test
sar
cmp
(bad)
in
cmp
imul
gs
loope
sbb
into
sub
frstor
scas
into
call
lea
into
dec
mov
sub
adc
scas
sahf
add
in
into
aaa
push
dec
jnp
retf
pop
mov
bound
dec
and
popf
mov
outs
(bad)
movs
or
test
dec
fstp
fisubr
pop
fmul
pop
jns
jno
dec
imul
pop
dec
cmp
pavgb
into
call
fwait
into
add
stos
sub
pop
xchg
mov
popf
add
test
ret
in
repz
into
inc
fld
fsub
push
jae
pop
mov
into
mov
jl
cmps
cmc
into
dec
loopne
sub
dec
mov
mov
mov
int3
lods
mov
addr16
gs
sar
pop
dec
push
into
(bad)
scas
jns
into
repz
cmp
into
fwait
inc
xchg
addr16
addr16
test
mov
cdq
inc
or
into
in
int
add
mov
add
cmps
jge
test
add
outs
xchg
dec
cwde
into
call
xchg
jg
into
inc
aas
mov
mov
jns
into
out
xor
lahf
mov
daa
into
jbe
je
stos
bound
xchg
test
fisubr
push
mov
xor
xor
into
ret
pusha
push
or
stos
jmp
mov
xchg
adc
jno
mov
das
mov
mov
lahf
jg
xchg
cmp
inc
into
cdq
pop
lods
(bad)
mov
sbb
mov
add
mov
mov
sub
pop
sbb
mov
cmp
test
push
mov
jbe
in
pop
into
or
mov
scas
dec
test
into
or
dec
adc
sub
sbb
sub
or
xchg
aaa
xchg
stc
and
shl
jb
popa
and
retf
ror
inc
mov
mov
and
mov
sub
test
dec
out
push
ficomp
scas
loopne
and
jae
push
xchg
lahf
push
lods
dec
int
xor
inc
fsub
into
mov
jg
or
rcr
cmc
mov
out
mov
shr
mov
mov
mov
pop
mov
sub
in
sub
cmc
xchg
jmp
dec
cmp
mov
into
jbe
lock
mov
loop
mov
push
sub
and
pop
dec
hlt
fild
jg
dec
cmovno
int3
ins
into
jae
repz
sub
cmc
lods
imul
xchg
cmp
xchg
mov
(bad)
mov
mov
xchg
or
retf
mov
mov
sub
mov
in
into
mul
sbb
test
ds
setge
mov
ins
cmp
test
dec
imul
inc
mov
push
fucomi
xor
xchg
repz
push
jmp
out
cdq
int
jmp
icebp
ret
jne
xchg
repnz
test
cmp
pop
fmulp
popf
loopne
mov
into
out
xchg
cmp
in
mov
scas
adc
cdq
push
leave
out
push
mov
popa
sub
pop
push
out
mov
shr
loopne
mov
into
cmp
sbb
jge
test
into
add
xchg
in
out
mov
test
ja
add
fdiv
fild
or
pusha
cmp
dec
call
sub
pop
add
frstor
ins
int3
mov
into
in
jns
in
cmp
xchg
adc
mov
sbb
popf
stos
ss
add
pop
addr16
les
lods
dec
std
cmps
into
mov
fs
inc
movs
jno
mov
add
add
dec
mov
into
packuswb
lods
movs
popf
hlt
stos
sbb
dec
push
dec
and
sbb
(bad)
into
push
xor
mov
(bad)
aad
sub
mov
xchg
loopne
dec
adc
cdq
cmp
mov
je
push
mov
out
movs
jmp
mov
push
sbb
sbb
add
js
inc
imul
pop
mov
fild
retf
pop
mov
dec
cmp
(bad)
mov
xchg
ret
push
outs
into
ins
dec
popf
pop
jmp
les
dec
ficom
data16
retf
pop
stc
and
fisttp
dec
aad
stos
sbb
nop
daa
mov
into
adc
push
aam
popa
fs
lods
inc
adc
dec
mov
enter
jae
push
ss
add
dec
dec
dec
xlat
pop
xchg
push
inc
shr
push
std
lods
xchg
fisubr
movs
sub
pop
(bad)
lahf
xor
sub
in
les
leave
icebp
mov
ja
inc
mov
pop
jmp
jg
ret
sub
mov
mov
test
inc
addr16
dec
add
into
mov
mov
cmp
into
cmp
mov
addr16
jb
scas
ret
push
ffreep
rol
into
je
data16
push
ja
out
cwde
ror
nop
test
mov
adc
xor
xchg
enter
and
cld
retf
sbb
scas
test
scas
dec
bswap
and
lahf
scas
cmps
call
and
into
repz
cmps
pop
or
in
js
sbb
imul
std
fs
adc
sahf
cmp
aas
test
outs
sub
das
(bad)
in
dec
or
jae
imul
cmp
cmps
aas
repz
fsub
xchg
dec
popf
or
into
xchg
cmp
or
loop
popf
stos
ins
mov
add
stos
shr
test
mov
shl
into
sahf
and
adc
adc
add
ret
push
clc
xchg
pop
imul
add
out
pop
sub
(bad)
into
sbb
cmp
push
daa
ffree
(bad)
cmps
mov
push
imul
pop
xor
lods
jmp
adc
jg
out
mov
fstp
into
movs
pop
add
fs
xchg
into
add
(bad)
xchg
je
xchg
xor
pop
fild
sbb
stc
outs
adc
leave
loopne
mov
ins
cmc
(bad)
fdiv
pop
xchg
lods
mov
mov
push
cld
ror
xor
jo
jp
and
and
aaa
or
les
stos
(bad)
into
jbe
enter
mov
dec
pop
mov
scas
outs
sbb
mov
push
lds
fwait
inc
or
nop
ror
pop
cs
xor
ds
dec
shr
(bad)
into
inc
aad
mov
movs
into
adc
pop
add
dec
mov
into
ins
ret
mov
aas
das
into
loopne
mov
in
cmps
out
je
outs
in
ja
lea
pop
mov
mov
adc
and
dec
mov
cmp
xor
dec
jl
add
lods
pop
loope
adc
pop
das
sbb
cmp
pop
mov
xor
fcmovb
cmp
enter
(bad)
rol
sub
dec
lods
inc
sbb
mov
dec
js
inc
jmp
pop
dec
sub
and
leave
mov
jp
xor
mov
jnp
sbb
into
ret
inc
ss
or
cmp
ins
into
cmps
pop
pop
out
cmps
into
hlt
xchg
mov
rol
int
inc
fcmovbe
stc
into
loopne
and
into
fdivr
imul
das
sbb
jg
dec
pop
mov
xchg
in
mov
cmp
mov
dec
js
out
hlt
pop
lods
movs
cmp
mov
mov
sub
scas
xchg
out
adc
jo
xchg
scas
pmaxsw
into
stos
push
les
xor
into
pop
pop
jb
or
ror
bsr
mov
(bad)
mov
xor
into
out
lods
cmp
adc
mov
and
dec
jae
sub
mov
mov
into
shl
fwait
pop
sar
call
jp
inc
jae
mov
out
mov
lahf
into
jmp
add
push
mov
cmp
mov
fimul
into
out
dec
xchg
jecxz
adc
into
or
push
cwde
into
adc
les
leave
outs
add
out
out
mov
dec
ror
jnp
cmps
out
and
mov
ret
outs
xchg
fsubr
into
int
mov
push
into
loopne
inc
push
ins
push
out
mov
out
imul
into
ja
cmp
pop
jo
cli
into
or
cmp
into
adc
xchg
movs
and
nop
test
into
mov
push
mov
add
enter
dec
push
jmp
enter
imul
into
pushf
xor
sub
hlt
xchg
mov
xchg
stos
lahf
stos
in
pop
cmova
cmp
into
loopne
jb
and
test
mov
mov
pop
icebp
dec
sbb
je
pop
sbb
dec
shr
adc
retf
call
mov
add
jmp
scas
movq
fwait
jbe
shr
xor
into
mov
in
pop
xchg
and
dec
cmp
xchg
xchg
fwait
add
retf
cmp
jmp
sbb
dec
es
xchg
lahf
or
loopne
hlt
adc
ins
scas
lods
mov
push
bnd
mov
mov
pop
cmps
retf
into
xor
pop
leave
js
into
aad
cmp
inc
mov
repz
jnp
jns
std
push
and
push
into
loope
add
into
data16
clc
mov
and
push
(bad)
mov
bswap
mov
xor
inc
scas
and
sbb
movs
push
dec
into
cmp
mov
into
inc
cmps
loop
mov
stos
movs
jmp
pop
sbb
hlt
lock
mov
lods
cmp
loopne
mov
(bad)
je
into
div
push
ret
jge
add
pop
fdiv
into
gs
add
jl
sbb
cmp
ds
aaa
shr
ja
loope
fs
into
mov
or
mov
imul
into
lods
mov
shl
sub
add
js
push
xchg
and
into
pop
loop
xchg
adc
pop
mov
lea
test
mov
sub
data16
push
push
cmp
(bad)
into
icebp
mov
sbb
retf
fisttp
sub
daa
cdq
ret
xor
pop
out
sbb
pop
into
in
scas
sar
into
inc
push
cmps
inc
dec
xchg
xor
lea
rcl
push
cmp
in
(bad)
loope
pop
adc
mov
jg
stc
leave
push
cli
lods
jne
movs
aaa
inc
or
cmp
adc
sub
mov
inc
sti
push
mov
retf
push
es
mov
or
and
pop
cld
add
sbb
mov
repnz
inc
pop
sub
mov
xchg
out
inc
clc
into
in
mov
les
pushf
jmp
pusha
test
sti
sub
sbb
icebp
mov
jmp
mov
jl
into
jno
sub
mov
lds
cmps
add
shl
pop
test
in
jnp
mov
into
inc
push
mov
push
test
repz
dec
lock
das
mov
cmp
mov
push
xchg
or
or
mov
mov
lock
adc
pop
leave
stos
fidivr
xchg
movs
retf
into
mov
(bad)
cmp
outs
ret
cmps
jae
cmc
repz
dec
nop
mov
mov
push
mov
pop
outs
push
dec
aas
in
into
popa
cmps
icebp
loope
xchg
(bad)
jge
dec
aaa
jns
lods
es
mov
outs
cmp
into
add
mov
into
push
aad
hlt
mov
mov
out
cdq
pop
or
lock
clc
addr16
int3
pushf
out
out
jnp
push
mov
sbb
push
aaa
int3
adc
out
and
push
sub
dec
xchg
imul
mov
aad
into
dec
xchg
xchg
in
push
hlt
pop
sbb
test
inc
dec
in
(bad)
dec
or
cmps
js
fs
pusha
fwait
mov
or
cs
sbb
dec
push
icebp
and
or
and
inc
sti
movs
sub
xor
popf
nop/reserved
xor
mov
xchg
es
sbb
or
mov
addr16
mov
into
gs
cmp
addr16
je
outs
push
(bad)
in
(bad)
mov
mov
inc
and
add
mov
out
mov
cmp
add
loopne
adc
lea
dec
sub
mov
push
pusha
cmp
mov
and
into
data16
sar
lods
xor
enter
aam
fcom
hlt
in
add
into
sub
cmp
into
adc
leave
loope
repz
mov
or
into
xlat
xchg
or
xchg
push
cmp
ss
inc
cwde
or
dec
lods
adc
adc
dec
(bad)
mov
add
xor
and
sub
js
int3
loope
into
pop
xchg
retf
jecxz
dec
je
lds
movs
es
cmps
ss
push
xchg
cs
loopne
repnz
xchg
stos
jle
icebp
jg
mov
or
sub
out
push
hlt
mov
cdq
mov
ss
cli
shl
and
mov
into
cs
fs
add
into
pop
mov
popf
add
mov
push
dec
inc
mov
inc
and
into
ds
xor
sbb
into
adc
adc
stc
xor
jg
xor
xor
pushf
test
jge
cmps
jp
cmp
sbb
into
retf
lods
mov
aas
xchg
mov
dec
push
sub
and
sub
into
retf
mov
into
(bad)
jle
fs
fadd
xlat
or
or
mov
into
pop
pop
rcl
ja
test
dec
lods
es
or
xchg
repz
in
das
ds
ins
mov
into
push
mov
adc
jmp
or
add
mov
dec
test
pop
sbb
dec
pop
and
scas
into
fdiv
adc
scas
mov
cmp
dec
into
arpl
pop
and
jae
imul
cmps
pushf
xlat
sub
mov
pop
inc
retf
cmc
into
pop
mov
mov
mov
mov
jae
adc
stc
jb
fs
call
add
dec
pop
lea
pop
dec
popf
into
test
je
mov
cmp
inc
sbb
and
mov
mov
jae
mov
fsubr
scas
cmp
and
stos
mov
out
or
push
sahf
dec
cs
jnp
sbb
pop
ds
jmp
cmp
leave
rcl
pop
adc
aaa
ja
cmp
dec
popf
xchg
int3
shl
dec
pop
imul
inc
jl
and
xchg
cwde
pusha
and
jp
xchg
imul
into
xor
ss
daa
mov
dec
cs
cwde
into
test
pop
pop
pop
xchg
into
lods
jns
jmp
ja
or
rol
into
popa
movs
ret
mov
push
sbb
push
inc
into
cmc
daa
stc
or
sahf
data16
jbe
add
imul
dec
inc
mov
mov
lods
repz
push
jle
mov
mov
pop
mov
jl
cmovle
sbb
lea
adc
(bad)
into
neg
push
and
aam
shl
add
dec
movs
aas
call
inc
sbb
shl
adc
mov
das
pop
cmp
pop
push
cwde
into
jbe
outs
ud1
inc
out
mov
dec
cmp
outs
jns
mov
xchg
xcrypt-ofb
cmps
sub
into
push
js
mov
mov
fwait
dec
popf
test
mov
in
jge
into
dec
jnp
cdq
cmp
push
mov
(bad)
sbb
popf
sahf
into
inc
or
loope
ret
loopne
cdq
mov
into
jp
adc
lea
clc
push
icebp
push
jecxz
xor
mov
out
adc
cmp
test
cmp
lahf
mov
retf
into
mov
ret
xchg
dec
into
enter
sbb
cmp
sti
into
fs
int3
push
push
dec
into
mov
pop
fisubr
cmp
jecxz
pop
into
addr16
das
lahf
out
cmc
clc
lods
imul
mov
pcmpgtw
push
mov
aaa
mov
and
sbb
inc
(bad)
ds
adc
test
cwde
lahf
(bad)
out
mov
push
fcmovu
mov
xchg
(bad)
xor
ins
dec
jle
xor
into
cld
jo
inc
sub
or
add
inc
pop
sbb
imul
jg
sbb
sbb
test
test
jg
xchg
into
pushf
call
into
stc
imul
into
popf
mov
sbb
je
mov
js
out
push
xor
pop
out
into
lahf
and
adc
stos
cmps
mov
add
dec
xchg
mov
fiadd
pop
mov
dec
jno
and
into
jle
push
mov
or
cmp
or
mov
call
cmp
push
loop
(bad)
ror
and
cmps
nop
bound
cmp
ja
dec
lods
jl
mov
in
pop
into
retf
sub
add
pop
clc
xchg
push
shr
(bad)
movs
cmp
into
mov
ds
fdivr
inc
push
mov
(bad)
lahf
xchg
dec
cmp
stos
(bad)
sbb
leave
mov
adc
mov
lods
mov
imul
stc
cmp
(bad)
daa
repz
stos
jae
ja
sub
xchg
sbb
jl
rcl
or
push
into
test
nop
xchg
push
ficomp
pop
stos
loopne
mov
outs
hlt
into
test
sub
call
push
cmps
xor
and
in
xchg
imul
smsw
add
xchg
inc
inc
pop
aaa
mov
jle
es
push
in
sub
std
sbb
and
mov
cmp
push
stos
(bad)
pop
push
add
mov
sbb
icebp
sbb
iret
into
mov
pop
mov
imul
out
and
std
in
in
mov
cmp
xor
mov
lahf
fsubr
popf
cld
mov
jg
adc
pop
jmp
xor
jnp
cmc
into
mov
inc
ret
enter
and
pushf
xchg
ror
cmp
in
popf
mov
in
cdq
div
aas
repz
mov
cmp
mov
out
push
jge
daa
lods
push
pushf
inc
push
call
ror
adc
jno
sub
mov
(bad)
lahf
cmp
jns
xchg
test
cdq
shl
enter
cmp
into
jge
cmp
hlt
adc
cmps
fwait
and
out
movs
jmp
lods
or
popf
pop
pop
das
pop
mov
jge
mov
into
adc
popf
jmp
out
cmps
in
pop
lods
mov
outs
mov
into
cmp
into
sbb
mov
push
pop
stos
xchg
add
jle
dec
(bad)
out
arpl
xlat
cwde
ins
jge
fist
xor
lods
std
(bad)
ret
ins
imul
stos
into
xchg
int3
xchg
push
fmul
sbb
sbb
mov
hlt
mov
inc
ins
ror
lea
mov
jnp
push
mov
les
scas
sub
repnz
lods
jns
xchg
jo
dec
retf
inc
sbb
pop
xlat
ss
test
jg
jmp
mov
outs
into
sbb
mul
push
sub
inc
dec
test
cmp
mov
shl
dec
push
pop
pop
sub
loope
jmp
idiv
dec
fsub
ret
jl
je
mov
scas
jl
mov
jno
ins
add
or
jle
lods
scas
into
jns
jmp
ss
enter
dec
test
nop
push
and
je
fs
lods
mov
sub
dec
jbe
cmp
add
aad
xor
stos
or
mov
jo
cmp
cmp
jge
ret
mov
out
sub
sahf
mov
jmp
das
ds
enter
mov
sbb
sbb
into
xchg
adc
xor
aad
jg
sar
add
pop
outs
mov
adc
ficomp
xchg
dec
xchg
into
popa
jns
xlat
das
mov
into
xchg
fcmovnb
jmp
nop
add
xor
mov
mov
sahf
lods
sub
into
lea
mov
mov
fidiv
test
mov
into
shl
daa
lock
or
pop
movs
and
hlt
test
into
lea
jp
into
fcom
mov
out
mov
jae
push
int3
out
bnd
jl
call
dec
aam
mov
adc
cdq
fnsave
aas
popa
or
push
loopne
add
mov
(bad)
imul
sbb
scas
mov
pop
data16
scas
xchg
mov
push
aam
into
jo
or
mov
cmp
stos
add
sti
pushf
stos
mov
mov
jmp
jp
inc
fmul
imul
cmps
dec
mov
out
outs
fwait
dec
out
(bad)
arpl
sbb
mov
mov
cmps
cwde
mov
dec
and
into
aad
std
mov
shl
lods
into
aas
(bad)
xor
jns
shl
push
xchg
addr16
and
imul
scas
pushf
cdq
dec
aas
pop
into
retf
inc
xchg
cmp
stos
fldcw
pop
imul
mov
call
jp
mov
movs
adc
lods
sahf
push
jns
out
(bad)
xor
and
jecxz
or
mov
lock
(bad)
push
scas
xchg
out
fcom
out
mov
mov
push
dec
ins
into
sub
cmp
dec
ror
pop
cmp
bound
mov
into
clc
jmp
lods
add
sahf
loop
mov
add
ins
out
cmp
scas
mov
iret
sub
lods
and
(bad)
cmps
dec
movs
shr
mov
fsubr
(bad)
push
dec
xchg
into
sbb
jmp
out
stos
dec
imul
ret
cmp
shr
pop
dec
pop
xor
jmp
lods
ficomp
into
in
mov
mov
sub
dec
xchg
or
into
xor
cwde
call
sbb
clc
(bad)
cmps
inc
cmc
sbb
lahf
jmp
sbb
and
mov
inc
sub
into
cmp
popf
ins
fsubr
mov
loope
mov
cli
stos
setae
into
jmp
mov
jb
inc
jecxz
mov
into
mov
mov
mov
mov
xor
into
sub
cmp
xlat
test
xchg
fadd
lods
into
pop
les
jae
retf
bound
movs
ss
cmp
test
jmp
sahf
into
sbb
scas
pop
cmp
xor
xchg
jl
scas
popf
dec
adc
je
push
pminub
clc
into
xchg
and
mov
and
cdq
(bad)
in
data16
pop
xor
jae
outs
xor
psrlw
into
js
lods
mov
scas
mov
in
pop
jae
imul
enter
retf
adc
dec
inc
nop
pop
dec
push
mov
cmps
cmps
lds
xchg
and
pop
in
xchg
loop
mov
sub
or
sub
and
adc
dec
mov
imul
xlat
pop
xchg
cmp
sbb
retf
into
addr16
pop
pop
lahf
(bad)
pop
xchg
sbb
xor
into
jmp
mov
mov
pop
xchg
xchg
into
aas
les
or
xor
mov
inc
aaa
aam
add
(bad)
pop
sub
jmp
xchg
into
fimul
inc
int3
enter
sahf
lods
imul
cli
mov
lods
xor
stc
cmp
fs
push
inc
(bad)
stos
mov
and
lods
into
out
nop
popf
xchg
or
cdq
add
aas
xchg
into
and
enter
out
inc
loop
fwait
cmp
repz
and
in
jae
jb
mov
cwde
dec
mov
lods
dec
sbb
into
or
ins
xchg
fwait
scas
mov
xchg
pop
test
mov
into
jl
xor
add
dec
mov
ds
cmp
out
retf
sub
xchg
out
mov
adc
inc
mov
dec
sub
retf
into
sbb
add
pop
out
dec
xor
clc
ret
pop
pop
into
mov
dec
xchg
js
sub
xchg
scas
retf
xchg
fisttp
jnp
rol
into
in
dec
xchg
pop
xor
into
sbb
sub
into
xlat
lods
or
push
(bad)
push
jns
pop
mov
xchg
gs
cmp
inc
into
(bad)
ins
cwde
inc
dec
jmp
mov
retf
rcl
dec
jp
or
inc
lods
imul
jbe
scas
mov
dec
pop
jmp
or
xor
cdq
into
aaa
in
sbb
into
xchg
test
ins
adc
or
jb
into
mov
mov
(bad)
add
mov
or
sti
sub
mov
inc
pop
sbb
xchg
scas
(bad)
mov
xchg
dec
dec
into
inc
xor
xor
je
jne
push
dec
xchg
stos
sbb
cwde
popf
call
int3
lods
js
inc
xor
and
xor
stc
and
or
xchg
pusha
aas
es
out
and
add
add
push
inc
loopne
out
mov
pop
jb
cmps
loopne
out
imul
int
pop
iret
into
add
cmp
dec
mov
ret
mov
(bad)
mov
fwait
inc
into
jno
sbb
sbb
test
mov
and
arpl
out
mov
into
pcmpeqd
mov
sbb
push
mov
inc
adc
mov
(bad)
pop
jo
pop
hlt
into
inc
int
xchg
dec
lods
into
icebp
dec
push
xchg
into
push
mov
mov
dec
xchg
fdiv
movups
sub
(bad)
mov
into
ficomp
cdq
sbb
into
cmc
retf
push
mov
into
mov
inc
jecxz
mov
ret
push
jno
sbb
dec
sub
mov
add
jle
cmp
cmc
stos
pop
into
movq
cdq
cmp
call
mov
mov
imul
out
(bad)
inc
add
or
inc
dec
int3
xor
sbb
into
jg
pop
jecxz
stos
dec
(bad)
xchg
mov
sbb
mov
stos
xchg
lahf
ret
mov
push
xlat
mov
xchg
call
sbb
inc
into
mov
cs
pushf
or
add
jmp
cmps
mov
jb
xor
cwde
aaa
mov
js
push
inc
jbe
xor
mov
aaa
jno
dec
inc
ret
cmps
into
(bad)
adc
movs
cmp
es
sub
xchg
cmp
into
repnz
xchg
push
pusha
rol
into
pop
jmp
into
data16
push
cmps
mov
cmp
(bad)
into
push
fnstsw
retf
cmp
or
in
dec
repnz
or
xchg
call
into
scas
test
lea
dec
into
cld
add
lahf
or
mov
mov
in
into
imul
mov
setb
sub
dec
cmps
mov
adc
cdq
adc
jg
fwait
into
fsubrp
stos
arpl
aas
add
push
mov
jle
lock
not
into
jge
arpl
sbb
dec
jae
push
into
sub
call
dec
push
(bad)
and
(bad)
mov
mov
and
sbb
stos
sub
fidivr
call
mov
sbb
dec
xchg
dec
cwde
loopne
ins
push
sbb
mov
jo
outs
fucom
pop
sbb
ja
xchg
lods
imul
mov
jecxz
adc
cs
or
out
push
ror
enter
xor
xchg
outs
pop
daa
add
into
lahf
jl
push
popf
mov
call
pop
(bad)
out
movs
pop
into
pop
mov
or
fmul
mov
mov
seta
xchg
pushf
into
out
dec
ss
mov
js
ja
sbb
scas
push
jae
ret
pop
push
lods
mov
fist
xor
stos
pop
sbb
inc
or
dec
ins
popa
sti
push
into
push
cmc
(bad)
test
mov
or
jo
sbb
sbb
in
(bad)
into
xor
xchg
ja
pop
into
popa
xchg
call
inc
pop
inc
idiv
lahf
sbb
xchg
pop
arpl
into
in
call
sub
arpl
cli
or
into
leave
jmp
test
(bad)
cdq
into
inc
mov
mov
mov
dec
sahf
lods
aad
jnp
out
popf
dec
mov
lods
das
pop
pusha
pop
mov
jo
xchg
jmp
lods
adc
popf
addr16
imul
ins
out
mov
mov
mov
sbb
into
jg
pop
shl
mov
cmp
or
cld
mov
sub
and
sub
aaa
in
into
lahf
test
inc
(bad)
inc
sbb
into
movs
cld
inc
cmps
in
or
pop
mov
call
into
pop
cmp
xchg
ret
or
jae
mov
jnp
adc
out
fcomp
mov
mov
push
(bad)
or
push
mov
popa
repnz
sub
push
xchg
aas
ret
repz
adc
jmp
into
xchg
pop
jno
fidiv
ja
xor
jns
cmp
add
mov
stos
dec
movs
lods
dec
add
int3
or
pop
movs
stos
push
clc
test
sub
(bad)
sbb
push
into
push
pop
push
pop
lahf
xchg
faddp
scas
sahf
lds
pop
inc
or
cs
aam
into
cdq
fld
out
retf
into
scas
mov
scas
pusha
into
int3
test
(bad)
jno
out
test
and
mov
jns
std
enter
adc
inc
nop
cdq
call
add
mov
(bad)
mov
inc
call
test
dec
cmp
out
in
jns
into
add
(bad)
not
or
cmps
dec
int
or
daa
xor
cmp
test
cmovl
into
stos
fsubr
neg
and
into
and
inc
test
das
push
punpcklwd
scas
sub
stos
loopne
lds
mov
(bad)
cld
into
mov
lods
sbb
mov
inc
into
pushf
sbb
repnz
inc
into
sahf
jns
in
or
loop
xchg
pushf
cmp
jmp
or
(bad)
ds
pusha
retf
rcr
ret
loopne
and
mov
outs
inc
por
in
xchg
xchg
(bad)
(bad)
xor
cs
mov
sbb
repz
pop
fnstenv
inc
fdiv
cld
jne
into
pop
mov
call
cmps
jmp
inc
in
fmul
cmc
ja
fisub
push
inc
mov
lods
and
mov
mov
xchg
mov
cmp
dec
into
ss
in
and
idiv
mov
pop
pop
scas
xchg
enter
test
mov
into
adc
jle
test
ror
mov
push
fmul
out
jae
sahf
xor
into
clc
jg
pmaddwd
mov
jecxz
ffree
ds
int3
in
lds
js
xchg
mov
inc
mov
xor
cmp
dec
mov
stc
ins
pop
dec
nop
mov
jp
push
lahf
inc
cmp
into
movs
mov
adc
into
ins
cmps
xchg
add
loope
dec
addr16
(bad)
pop
scas
and
add
cli
aaa
retf
jp
fcos
into
add
cmp
loope
aad
test
jb
leave
dec
xor
mov
shr
adc
mov
ins
sahf
xchg
dec
fsubrp
adc
imul
or
sub
in
cdq
nop
out
test
mov
mov
into
xchg
jnp
aas
jmp
push
lods
repnz
lds
mov
ins
push
ins
add
mov
inc
and
fiadd
mov
fs
into
and
adc
scas
test
jp
cmp
data16
popa
ja
fmul
adc
into
aad
sti
or
add
into
rcr
outs
pop
sbb
into
push
jae
mov
sub
imul
inc
mov
test
std
das
inc
scas
mov
aas
sub
retf
leave
jb
push
inc
jne
imul
xor
pop
and
lods
sbb
ret
pavgw
fmulp
add
into
mov
xchg
or
fadd
push
jae
test
into
out
jl
ss
fbld
xchg
push
outs
(bad)
lock
(bad)
cs
pop
mov
jle
add
cmp
lods
imul
mov
(bad)
lock
loopne
pusha
fwait
dec
sbb
pop
push
call
test
xor
jecxz
mov
lock
imul
jl
fdiv
add
add
lock
add
push
movs
into
cmp
adc
sbb
shr
out
iret
into
test
mov
push
data16
mov
pop
mov
addr16
dec
push
xor
scas
scas
cmps
ret
jmp
add
pop
jns
es
push
rcr
lods
mov
loopne
inc
int
sbb
int3
or
into
pop
sbb
daa
sbb
into
icebp
sub
jns
imul
leave
cmp
in
cmps
mov
pop
arpl
imul
jmp
pop
loopne
push
mov
or
lods
mov
xchg
sub
mov
inc
dec
inc
scas
push
sub
into
sti
dec
mov
sbb
or
fistp
test
add
xchg
pop
pop
push
jb
inc
and
sub
and
in
xor
pop
cld
pop
into
rcr
stos
jbe
lods
mov
fwait
sub
bound
fadd
mov
push
mov
test
loop
xor
sbb
mov
fwait
push
shr
into
pusha
sub
or
mov
movs
and
outs
into
xchg
je
xor
jns
dec
mov
pop
(bad)
mov
mul
aas
je
stos
mov
add
pop
cli
dec
into
sbb
out
ds
lods
into
scas
mov
xchg
ja
xor
into
mov
adc
push
into
aas
leave
loop
pop
add
pop
(bad)
fidiv
mov
fld
lahf
pop
sbb
add
mov
out
jo
adc
xchg
push
sbb
mov
add
dec
call
pop
xor
sbb
mov
inc
nop
add
into
mov
xor
inc
mov
push
call
das
sub
jle
dec
into
jp
jo
daa
scas
mov
inc
ins
fstp
test
neg
cmps
fcom
into
lods
mov
mov
lods
add
mov
sub
into
dec
jmp
add
retf
into
mov
fsubr
sub
into
addr16
dec
fld
mov
pop
pop
out
pop
cld
jb
jne
popa
into
sub
repz
jbe
cmp
shl
(bad)
(bad)
lods
test
cli
(bad)
jecxz
xchg
into
pop
mov
or
nop
push
mov
(bad)
rcr
aam
stos
pop
pop
into
fsubr
scas
pop
xchg
cmp
sub
mov
out
pop
jmp
cmps
icebp
add
dec
xor
movlhps
mov
rol
ja
jg
sar
mov
cmps
sub
and
jmp
jl
sbb
and
inc
inc
movs
pop
sbb
call
fdivrp
(bad)
into
fst
sbb
aaa
(bad)
rol
add
mov
pop
retf
out
add
es
sub
cmp
into
ins
mov
loop
mov
(bad)
test
xor
xchg
sbb
inc
xor
pop
(bad)
into
mov
in
movs
stos
mov
popf
aam
out
das
scas
xor
adc
into
sub
and
scas
mov
out
push
(bad)
fisubr
scas
outs
cmp
clc
pop
cmps
div
mov
push
das
test
call
sahf
dec
data16
mov
in
into
pop
sub
fld
into
jp
and
jns
xor
js
ins
pop
es
pop
pop
into
jmp
mov
stos
jp
xchg
bound
stos
adc
punpckhdq
into
push
jae
outs
popa
std
sbb
xor
aaa
inc
dec
retf
jmp
inc
outs
mov
and
das
ja
scas
inc
out
stos
pop
mov
xchg
fisub
fisttp
adc
mov
into
shl
out
into
cmp
mov
and
std
sub
ja
add
jg
push
sub
into
inc
jbe
jmp
out
pop
mov
fmul
mov
mov
lock
mov
into
mov
into
sbb
repnz
or
clc
sbb
cmp
sti
shl
mov
mov
dec
mov
push
mov
bswap
stos
mov
hlt
sub
loope
lods
pop
or
push
cwde
in
mov
mov
int3
das
fdiv
ret
movs
sbb
stos
cdq
rol
aad
mov
aad
xlat
mov
js
cmp
int
popa
aam
dec
pop
xor
mov
mov
scas
and
dec
scas
shr
push
(bad)
cmc
mov
outs
mov
jecxz
and
inc
clc
(bad)
push
or
cmp
into
jnp
mov
dec
mov
pop
into
int
dec
outs
jge
into
in
and
jns
push
into
sbb
cmp
in
je
test
cmps
mov
cs
mov
outs
ret
into
xor
fdivr
scas
pop
out
mov
setg
pop
out
jmp
inc
adc
push
mov
push
test
fadd
out
(bad)
mov
xlat
pop
dec
pop
jb
lock
or
in
jb
and
add
(bad)
in
ss
fistp
imul
call
loope
repnz
mov
into
jmp
xchg
out
test
not
xchg
cmps
out
mov
xchg
or
repnz
popf
lods
retf
xor
xchg
mov
pop
or
pop
into
pop
fdiv
pushf
lods
push
xlat
and
mov
sub
or
in
dec
(bad)
mov
scas
call
retf
into
xchg
inc
push
mov
pop
data16
retf
mov
icebp
out
sbb
out
into
sahf
cmp
dec
movs
into
out
cmp
cmc
je
push
mov
mov
mov
mov
mov
jmp
test
pop
dec
(bad)
and
mov
cli
dec
and
pusha
sbb
scas
sub
retf
scas
mov
scas
dec
lods
ds
dec
cmc
hlt
cdq
into
add
sub
xchg
dec
pop
jb
and
into
dec
push
pop
mov
test
in
mov
enter
push
mov
mov
jnp
into
data16
xor
ss
push
into
jmp
fsubr
lods
mov
add
sub
in
pop
push
mov
popf
sbb
and
jnp
xchg
push
ror
cdq
sbb
addr16
scas
jns
loop
and
imul
jmp
sub
mov
es
jb
pop
ret
nop
mov
into
mov
xchg
dec
fidivr
cmps
and
scas
push
jmp
mov
or
dec
sbb
adc
and
rcr
out
add
into
mov
sbb
out
out
inc
mov
cmp
pop
test
inc
push
xchg
cmps
dec
mov
mov
fstp
into
out
pop
mov
cwde
xchg
sub
cmp
sbb
pop
mov
pop
outs
loopne
movs
mov
adc
clc
sub
pop
sub
cmp
into
sub
or
ss
aas
inc
stos
or
cmp
xor
imul
cmp
jp
inc
jge
xchg
adc
push
bnd
data16
into
int
or
sbb
into
pop
pop
fsubr
dec
stos
push
in
lods
imul
imul
or
div
mov
push
dec
into
sbb
jno
sub
stos
popf
add
das
retf
pop
or
mov
ret
xor
and
mov
rcr
bound
add
push
in
mov
dec
mov
fwait
aas
(bad)
adc
jne
pop
test
sub
and
scas
stos
mov
dec
fcom
cmps
into
mov
add
cld
out
outs
sbb
fisttp
out
jae
imul
jns
rol
nop
push
jge
stos
sbb
inc
ret
cs
sub
scas
add
arpl
lods
into
mov
aas
or
cmp
ds
lods
scas
push
mov
cdq
in
clc
scas
xlat
sahf
call
rol
into
cdq
popf
movs
mov
rcl
mov
inc
mov
lock
cwde
and
lods
mov
mov
leave
dec
lods
jge
dec
xchg
or
jns
clc
push
pushf
into
sbb
sbb
mov
mov
btc
in
add
scas
outs
cmp
mov
cmp
inc
std
sbb
shl
arpl
fcmove
in
sub
sbb
pop
dec
lahf
add
or
(bad)
ja
stc
cld
into
pop
jmp
dec
ds
push
hlt
into
loopne
ret
repz
xor
pop
push
inc
retf
mov
dec
ins
imul
scas
es
adc
(bad)
loopne
in
movnti
ja
jg
xchg
and
xchg
jmp
lds
sub
jae
(bad)
mov
pop
and
loop
push
(bad)
adc
into
mov
pop
ins
pop
mov
cmp
cmp
mov
out
and
mov
add
fdiv
add
mov
inc
pop
push
mov
jnp
enter
push
xor
into
call
dec
xor
pop
fistp
xchg
outs
popf
fs
sbb
mov
mov
cmps
cdq
(bad)
sub
dec
test
(bad)
enter
(bad)
dec
mov
pusha
mov
mov
add
sub
inc
jns
lods
mov
movs
int
jge
lods
lock
loop
lahf
or
stos
dec
into
mov
xchg
xor
cli
scas
mov
dec
das
stos
scas
daa
out
jp
pop
je
push
push
add
xchg
cmp
(bad)
mov
and
into
mov
mov
sbb
jo
fdivr
jno
mov
in
jl
out
dec
ja
jmp
cmps
mov
sbb
and
sbb
mov
dec
xchg
mov
cmp
in
das
mov
repnz
mov
into
cmps
inc
mov
sar
in
xchg
and
mov
lods
push
lods
movs
mov
dec
dec
scas
mov
ja
das
rol
mov
in
xchg
or
jp
mov
pop
xchg
out
into
in
lock
pusha
push
pop
jae
outs
pop
test
icebp
sbb
add
dec
mov
pop
xlat
js
mov
mov
inc
sbb
dec
loop
cmp
pop
cmp
jbe
dec
lahf
test
stos
test
adc
mov
sbb
into
cmc
fld
jmp
fisttp
pushf
sbb
mov
push
sub
aam
or
jbe
or
push
cmp
into
int
dec
and
mov
es
cmp
jno
stos
pop
sbb
add
lods
data16
xchg
(bad)
mov
xor
je
push
jmp
or
xchg
sbb
or
sbb
je
outs
js
scas
cmp
push
mov
test
and
or
or
cmp
pop
test
fwait
loope
xchg
mov
xlat
jle
aam
cmp
or
ss
sbb
test
pop
loopne
mov
test
and
cmp
jbe
into
aad
arpl
mov
fs
mov
xchg
dec
inc
mov
(bad)
sub
out
sbb
add
cwde
xchg
xor
call
and
mov
push
sub
data16
dec
dec
mov
aas
je
sbb
xor
mov
cwde
add
cmp
sbb
call
xchg
push
and
stos
adc
jne
ret
push
add
stos
and
pop
mov
rcr
sbb
mov
neg
adc
cmps
or
mov
xchg
call
jnp
movs
popf
test
cs
into
aad
pop
mov
sbb
ins
(bad)
loope
scas
lods
sti
lea
fs
mov
test
pop
sahf
and
in
aas
push
dec
push
jae
add
into
mov
fs
sbb
int
xor
out
adc
pop
cmp
dec
into
pop
mov
test
into
jmp
sub
xlat
and
xor
and
lods
xchg
aad
lea
dec
fiadd
into
dec
and
loop
shr
xchg
lods
call
stc
into
rcr
lods
xchg
xchg
fimul
into
mov
cmp
ins
push
and
and
add
sub
in
lods
neg
into
xchg
xchg
dec
mov
ins
fs
into
mov
stos
scas
pop
into
mov
push
and
outs
mov
sub
cmp
inc
enter
sub
fistp
sbb
pop
nop
sahf
(bad)
xchg
ficom
push
sbb
jb
mov
mov
sbb
bound
mov
into
lock
movs
(bad)
loop
cmc
into
test
push
lods
lods
adc
dec
into
mov
int3
les
neg
int
in
pop
into
mov
aaa
xchg
mov
sub
icebp
ja
or
das
retf
inc
ret
jae
cmp
xor
outs
loope
dec
in
and
mov
pop
pop
inc
push
(bad)
into
jo
clc
add
inc
movs
dec
popa
pushf
push
xchg
hlt
ins
dec
rcr
pop
test
xchg
lods
test
mov
into
cdq
frstor
cmps
ret
adc
mov
cmp
sbb
mov
pop
out
mov
sub
in
mov
adc
cld
sbb
int3
dec
into
or
dec
sahf
jns
push
(bad)
into
sub
cld
pop
into
aas
pop
(bad)
mov
pop
adc
call
sbb
sbb
jle
ret
mov
mov
into
push
pushf
fsub
retf
sbb
xor
scas
jge
ds
(bad)
pmullw
mov
pop
and
outs
jp
into
dec
cmc
pop
fwait
sbb
inc
stos
scas
repnz
or
in
into
loopne
rol
into
test
jmp
mov
(bad)
ja
pop
dec
dec
lods
and
out
test
and
fwait
jmp
mov
mov
pop
mov
ins
push
jns
sub
mov
mov
scas
pop
dec
imul
and
into
adc
cmp
stos
cmp
inc
retf
enter
ds
mov
cmp
popf
pop
pop
outs
call
aaa
retf
lds
(bad)
push
ror
cld
mov
into
or
cmp
icebp
adc
scas
stos
pop
test
xchg
xlat
lahf
repnz
fmul
push
(bad)
mov
and
sub
jo
mov
fwait
inc
fisub
ret
pop
hlt
daa
sbb
std
mov
addr16
(bad)
loopne
mov
xor
sbb
fisub
dec
mov
lahf
mov
movs
inc
ror
xor
aas
push
and
lods
mov
(bad)
jge
sbb
xchg
fdivr
mov
add
inc
push
icebp
xlat
into
and
sub
out
mov
leave
xor
in
adc
jb
adc
out
dec
repz
pusha
inc
xor
jo
cmps
mov
cmp
loopne
or
scas
out
mov
jo
sbb
or
jne
or
mov
push
pusha
shl
add
sub
test
and
into
xlat
adc
sbb
pop
pop
add
into
out
or
jmp
lock
dec
mov
test
dec
push
pop
sub
mov
push
sbb
pusha
dec
in
into
mov
push
in
and
mov
into
and
pop
mov
sbb
inc
js
sbb
push
jecxz
inc
dec
into
jg
test
add
mov
mov
cmp
loope
xor
bound
hlt
imul
mov
in
mov
into
and
pusha
jne
xchg
mov
mov
mov
pushf
or
and
mov
pop
into
xchg
xchg
pop
fwait
jge
add
or
mov
sbb
ins
mov
cmp
sub
jo
outs
(bad)
aam
and
das
sub
ret
mov
repnz
data16
into
mov
mov
dec
sahf
lods
jmp
test
leave
into
xchg
sub
dec
ja
daa
adc
and
adc
and
pusha
xchg
into
sti
lock
xor
add
outs
movs
aam
outs
jmp
addr16
stos
mov
scas
sbb
cli
cmps
pop
into
mov
sahf
xor
(bad)
xchg
das
stos
push
jle
lods
fst
push
dec
popf
call
cmp
dec
push
dec
dec
cmp
mov
fmul
mov
adc
mov
fdiv
mov
loope
xor
jl
bnd
ja
leave
mov
ds
and
inc
shl
arpl
adc
mov
aad
dec
cmps
out
jmp
xchg
mov
aad
push
mov
adc
push
push
sahf
add
xchg
inc
setg
dec
fnstenv
ret
ror
jecxz
jge
sbb
scas
xchg
inc
push
out
lahf
stos
fs
and
mov
mov
scas
mov
imul
xchg
or
in
cmp
into
ja
sbb
test
ds
loop
movs
fdivr
repnz
mov
(bad)
in
pop
(bad)
into
aas
stos
sti
mov
into
adc
jge
or
ds
repz
jno
dec
push
dec
outs
xchg
(bad)
or
push
inc
xchg
and
push
ja
add
mov
repnz
aas
push
dec
sahf
ds
bound
fwait
inc
scas
lahf
icebp
adc
fs
mov
in
into
mov
pop
scas
into
retf
repnz
xor
push
lahf
and
pop
adc
jp
call
aaa
test
stos
xor
push
pop
cmc
mov
push
inc
mov
pop
rcl
mov
btc
sub
push
test
sub
xor
mov
add
shr
outs
fst
into
lock
rcr
les
xor
or
mov
hlt
mov
call
mov
out
xchg
retf
sub
dec
icebp
sbb
scas
dec
mov
subps
enter
dec
xchg
mov
into
adc
test
jg
or
into
(bad)
sbb
mul
aad
into
lahf
das
out
pop
xchg
mov
shl
retf
adc
cmp
stos
fwait
and
and
or
mov
cmp
cmp
and
test
rol
aas
mov
xchg
pop
mov
into
out
addr16
jae
frstor
sbb
dec
mov
stos
dec
sbb
imul
xchg
cld
test
mov
repz
or
into
xchg
push
push
out
push
xor
sub
inc
cmps
jg
pop
into
ret
and
sub
add
xor
xor
int3
stos
mov
and
lock
test
out
lahf
(bad)
pusha
into
push
sar
sub
pop
mov
and
mov
jb
push
jmp
movzx
xchg
cld
popa
dec
popf
jecxz
sbb
cmps
cmp
clc
lds
into
daa
ror
adc
in
mov
ret
shr
xor
out
jg
mov
add
cmp
scas
ja
bound
test
enter
lods
cmps
jmp
(bad)
or
mov
dec
mov
xchg
and
sub
scas
adc
addr16
dec
test
cdq
push
stos
pop
fcmovne
dec
sub
into
adc
or
movs
inc
jecxz
sub
loope
into
out
dec
or
ins
sbb
hlt
je
xchg
pop
cmp
push
call
mov
scas
jmp
cmovne
or
fs
scas
loope
in
repz
stos
into
inc
push
sub
xchg
push
xchg
retf
loope
xor
ret
sbb
scas
pop
add
out
not
lods
into
mov
inc
push
push
jmp
sbb
xlat
inc
test
adc
cld
lahf
pop
loop
adc
xor
ror
popf
das
into
xchg
jle
mov
outs
mov
dec
stos
pop
scas
into
push
js
xchg
sub
dec
mov
test
scas
call
pusha
fisubr
jmp
sbb
into
test
retf
mov
into
fs
aas
push
or
call
and
lahf
mov
(bad)
cs
out
xor
scas
data16
cmp
outs
adc
into
fcmovne
dec
imul
sub
cli
retf
int3
test
dec
sbb
xor
addr16
fwait
sbb
lea
in
push
lods
popa
mov
in
push
out
sub
xchg
dec
mov
cmp
inc
push
into
retf
jbe
and
xchg
(bad)
popa
into
(bad)
imul
test
cmovae
int
xor
push
bsr
scas
mov
out
scas
fld
into
lods
sbb
into
inc
adc
dec
cmc
mov
(bad)
and
fisttp
mov
mov
hlt
(bad)
into
dec
push
push
outs
cmp
into
pop
ds
sbb
mov
mov
jne
loopne
cmps
and
mov
(bad)
in
call
neg
into
(bad)
repz
xchg
cmp
jnp
into
pop
xchg
cs
(bad)
xor
mov
adc
shl
hlt
add
add
into
inc
pop
cmps
cmp
mov
jmp
pop
(bad)
jecxz
mov
mov
das
and
test
icebp
punpckhwd
scas
mov
jae
cdq
and
movs
into
lea
imul
in
das
xchg
mov
lock
or
shr
cmps
lods
hlt
outs
seto
(bad)
movs
xlat
inc
mov
leave
add
test
imul
js
mov
pushf
mov
inc
int3
scas
push
outs
ficom
(bad)
fisubr
ds
xor
ins
test
gs
add
mov
stos
dec
in
outs
aad
dec
mov
dec
jno
fistp
repnz
daa
cmp
scas
dec
mov
psrlq
scas
cli
retf
adc
les
scas
aas
cmp
jbe
(bad)
and
call
cmps
ret
inc
nop
(bad)
xor
xchg
shl
jae
jmp
xor
xlat
dec
push
mov
mov
les
scas
sub
(bad)
ins
mov
sbb
movs
retf
lods
mov
(bad)
cmp
shr
ds
dec
mov
retf
test
stos
shl
pusha
jle
sub
mov
cli
inc
into
in
das
sbb
sub
loop
xchg
in
movs
loope
leave
xor
mov
and
adc
jecxz
pop
mov
lea
outs
jge
sub
mov
pop
dec
xchg
or
dec
adc
mov
mov
ja
into
mov
out
sub
sub
daa
or
add
test
or
scas
push
shl
out
aad
or
sbb
call
and
jmp
jb
repnz
fnstsw
(bad)
xchg
mov
adc
je
adc
sub
push
fisttp
rol
test
fimul
gs
loope
push
test
lods
xchg
add
cdq
call
imul
cs
(bad)
das
(bad)
lahf
cmp
jns
call
aaa
mov
(bad)
cmps
stos
mov
cmp
int
aas
sahf
in
scas
movs
cwde
into
cmp
mov
fdivr
cmp
push
mov
into
mov
inc
pop
stos
ja
les
scas
addr16
push
sbb
fisub
sub
lahf
into
pop
or
dec
pushf
stos
cli
xor
xor
lahf
pop
lods
retf
out
mov
lods
out
inc
cmp
fcmovb
into
mov
leave
and
les
into
ret
add
sub
pop
push
cmps
and
mov
lock
mov
mov
xchg
(bad)
repnz
into
fsubp
ins
outs
popf
add
into
retf
sbb
enter
into
cmps
aad
xor
in
add
into
clc
sbb
jge
fstp
popa
fisubr
ror
leave
and
pop
pop
jmp
jbe
pop
dec
fst
mov
daa
ror
es
mov
sub
pop
xchg
dec
cmp
scas
loopne
ror
dec
or
into
pop
addr16
mov
pop
pop
lods
or
scas
dec
mov
scas
daa
or
lods
dec
dec
pop
int3
imul
pop
pop
cmp
ret
into
cmp
stos
inc
xlat
(bad)
into
mov
mov
aad
pop
xor
xor
ss
mov
xchg
lea
dec
scas
stos
jge
xchg
pop
pop
test
xor
pop
or
mov
into
push
jmp
scas
and
lods
fisubr
pop
mov
aas
ret
mov
sbb
aaa
jne
aaa
pop
stc
dec
shl
mov
mov
cmp
loope
mov
pusha
pop
into
xchg
sbb
lods
es
pop
adc
push
cmp
scas
jne
idiv
inc
cli
in
lock
mov
lock
jnp
movs
sar
scas
dec
sub
cmp
push
add
xchg
fs
leave
ds
mov
ror
movs
scas
mov
mov
jle
(bad)
pop
inc
int3
icebp
inc
into
dec
and
fst
enter
shl
and
pop
scas
mov
fild
push
push
xor
add
pop
stos
shl
and
stos
xor
cmp
push
push
sub
lea
je
sahf
add
in
clc
adc
xchg
cmp
dec
xor
mov
dec
jns
aad
xchg
test
adc
xor
dec
inc
sub
out
mov
sbb
into
pop
adc
movs
mov
or
aad
cdq
jb
scas
std
dec
sub
lock
nop
in
pop
lds
mov
push
and
out
fmul
mov
xchg
jmp
test
aaa
hlt
dec
inc
into
mov
out
ja
ds
lahf
jb
sub
jmp
es
lods
into
scas
ldmxcsr
xchg
imul
mov
jo
xchg
es
dec
sahf
push
mov
into
add
ss
into
and
pop
mov
into
sti
(bad)
jmp
aaa
(bad)
pop
cmp
xor
imul
into
outs
scas
push
out
lods
leave
jmp
adc
fdivr
and
(bad)
loop
push
mov
jecxz
jmp
dec
jg
fisubr
(bad)
into
js
aad
gs
into
enter
sub
mov
mov
in
pop
add
repnz
jmp
lock
fisttp
popa
add
pop
and
mov
arpl
adc
jno
out
cmova
into
mov
in
repz
pop
(bad)
into
lahf
repnz
sbb
mov
into
cmp
mov
inc
dec
div
push
addr16
or
mov
push
xchg
stos
inc
dec
outs
das
movs
fadd
fwait
sti
into
mov
mov
lods
pop
daa
sub
mov
xchg
and
rcl
mov
pop
sahf
dec
or
cmp
inc
and
shr
lods
push
popf
(bad)
scas
stos
fisttp
jle
loopne
into
aaa
dec
pop
add
ja
and
std
gs
push
in
(bad)
add
add
(bad)
lock
mov
cmp
das
into
outs
sbb
adc
test
add
xchg
inc
into
scas
mov
call
hlt
aad
into
mov
adc
xchg
sahf
ror
push
in
sbb
and
ins
pop
mov
enter
dec
ja
aaa
into
cmps
dec
scas
dec
push
inc
or
pop
sub
xchg
push
mov
jo
sahf
repz
adc
rcl
into
popa
fadd
std
imul
mov
push
cmps
cvtps2pi
mov
shl
(bad)
cmp
into
lods
repz
dec
call
jns
test
pop
mov
mov
pop
ficomp
int3
std
mov
and
retf
sub
imul
sub
cmp
pop
(bad)
stos
jb
pop
mov
(bad)
into
inc
push
mov
fdivr
les
imul
int3
adc
out
cmp
stc
retf
clc
test
in
cmc
shr
aad
inc
xchg
mov
jge
pop
ret
test
sbb
call
mov
lods
repz
cwde
paddb
enter
sub
jmp
inc
sub
dec
out
jecxz
out
stos
int
cmp
push
xchg
cmp
jb
repz
scas
into
jge
data16
or
imul
adc
and
pop
int3
push
cmp
(bad)
push
and
leave
mov
imul
fstp
xor
je
ins
xor
into
pop
test
add
imul
cmp
ins
mov
and
pop
sub
scas
outs
cwde
push
call
das
idiv
pop
jmp
js
xor
xor
dec
xchg
mov
lods
test
xor
pop
jmp
loopne
mov
into
out
popf
dec
lea
adc
movs
mov
xchg
js
inc
mov
mov
imul
arpl
into
push
dec
mov
cmp
btc
je
or
loope
inc
inc
add
mov
into
ds
mov
out
dec
jnp
and
ret
push
scas
pop
xor
ss
push
(bad)
sbb
das
mov
lea
jmp
xchg
jnp
and
inc
dec
fs
into
mov
or
jno
sub
scas
jl
sar
lods
inc
das
mov
movs
sub
ret
add
mov
push
dec
(bad)
adc
repnz
das
mov
ins
into
repz
loop
mov
into
shl
in
into
popa
aad
cmp
lea
xchg
sbb
daa
push
into
or
sub
ret
cmp
imul
sbb
cmp
inc
in
lods
retf
xchg
(bad)
fbld
mov
add
outs
inc
xor
jmp
cmp
ss
mov
inc
xchg
dec
pop
xchg
pop
leave
into
stos
push
inc
lods
out
xchg
mov
fs
xchg
jns
dec
loopne
cmps
repnz
into
sbb
loop
pop
push
gs
mov
fadd
mov
cmc
idiv
icebp
(bad)
and
clc
sahf
push
mov
stos
jns
mov
imul
dec
fimul
sub
pop
mov
aad
mov
repnz
icebp
in
fild
pushf
loop
sbb
mov
dec
jbe
mov
pop
scas
mov
in
and
xor
cmp
clc
into
mov
repnz
and
push
into
imul
mov
into
outs
or
div
sbb
xchg
into
arpl
test
pop
mov
pop
or
ins
dec
inc
hlt
scas
int
icebp
call
gs
cwde
sub
ja
stos
scas
dec
adc
mov
pcmpeqb
bound
jge
sub
fidivr
sbb
aaa
cmp
mov
mov
aaa
into
mov
dec
(bad)
loope
inc
test
adc
cmps
sbb
out
mov
into
rcr
mov
sub
cmps
mov
push
neg
add
cmp
aam
into
(bad)
cmps
inc
dec
sbb
ror
je
or
in
repz
ins
cmp
dec
lock
test
or
xchg
push
(bad)
and
jmp
sub
mov
pop
in
and
out
jns
test
xor
mov
and
adc
es
into
pop
jecxz
lods
mov
jle
mov
int
stos
out
js
into
inc
inc
or
pusha
xchg
push
pop
into
leavew
cmp
mov
sub
repz
push
imul
lods
jne
scas
mov
stos
enter
sub
jge
repnz
mov
mov
jecxz
out
mov
or
out
inc
adc
dec
mov
lods
sbb
and
sar
stos
sti
xchg
dec
jmp
sbb
jns
xor
dec
mov
ss
in
pop
or
add
jmp
sahf
mov
pop
out
fucomp
mov
test
ficomp
and
repz
movs
ja
adc
cmps
mov
xor
mov
mov
or
(bad)
out
dec
leave
pop
sbb
cmc
adc
xor
mov
outs
mov
and
aam
adc
(bad)
sub
in
cmp
or
in
fdivp
jmp
xlat
inc
adc
lods
xor
fmul
push
out
inc
sub
pop
stos
into
mov
into
cmp
aad
inc
scas
and
into
es
in
xchg
push
add
int3
(bad)
das
or
into
sub
xchg
bnd
mov
sub
add
xor
inc
(bad)
into
inc
in
push
enter
data16
pop
xor
js
and
dec
sbb
xor
test
scas
adc
repz
jbe
mov
ret
inc
mov
out
xor
mov
mov
add
mov
push
push
cmp
shld
push
xchg
retf
cmp
jns
(bad)
mov
pusha
sbb
int3
sbb
jbe
into
xor
pop
jmp
movs
sahf
mov
das
xchg
push
add
aam
into
ins
mov
imul
(bad)
jge
jp
push
pop
seta
fxch
mov
and
mov
push
mov
and
fsub
pop
stos
xor
fs
rcr
xor
cli
mov
jns
nop
mov
aad
into
stos
and
repz
int
addr16
mov
sub
sbb
mov
add
ror
pop
into
xlat
sbb
cwde
mov
lods
rcl
sbb
popf
es
mov
xchg
add
clc
jle
test
cmps
ret
xchg
out
das
sub
and
scas
out
add
inc
dec
mov
into
retf
push
cmp
pop
sbb
pop
test
movs
sbb
sbb
lods
or
in
arpl
lods
mov
outs
jnp
pop
xlat
rol
fmul
dec
test
fadd
aas
and
cmps
into
pop
sub
ds
sbb
nop
push
cmc
lods
pop
push
into
mov
sbb
ds
sbb
inc
mov
xor
xchg
outs
loop
dec
movs
mov
sub
cmps
xor
dec
loopne
sub
data16
lahf
lea
call
into
mov
mov
xchg
into
jb
push
pop
sbb
mov
lods
aas
xlat
adc
mov
xor
sub
sti
ror
xor
push
outs
(bad)
sbb
movs
adc
mov
ja
pop
icebp
aaa
dec
daa
jl
jns
sti
loop
mov
mov
dec
xchg
adc
xchg
hlt
pop
push
imul
out
ror
pusha
out
test
scas
push
loopne
pop
cmp
push
pop
and
into
les
into
aad
jl
sub
and
mov
dec
jae
jb
out
mov
(bad)
sbb
fidivr
sbb
mov
push
(bad)
cli
mov
lods
mov
sub
mov
sbb
out
cmp
inc
ret
into
mov
and
xchg
data16
scas
(bad)
cmp
retf
push
or
and
outs
test
and
jg
push
jge
dec
pusha
and
fcmovnbe
adc
movs
pop
repnz
and
nop
xchg
retf
lds
scas
enter
fs
xor
mov
or
(bad)
cmps
inc
add
cwde
jns
mov
sub
mov
arpl
ins
dec
dec
jmp
lahf
invd
mov
lods
into
mov
xlat
pop
scas
pop
xor
jecxz
xchg
dec
hlt
pop
int3
(bad)
(bad)
mov
outs
scas
rol
mov
jecxz
into
pushf
sti
adc
dec
xchg
xchg
into
push
push
sub
jle
mov
pand
dec
(bad)
push
fwait
stos
ffree
push
in
cmps
cdq
mov
mov
jns
push
sub
out
les
into
lods
and
ror
repnz
stos
cdq
xchg
add
das
ds
mov
out
jecxz
scas
pop
fucomip
ja
mov
shr
(bad)
push
(bad)
lods
or
(bad)
es
jno
std
jae
add
lods
push
mov
out
mov
daa
into
hlt
js
je
out
add
xor
push
out
or
push
pop
enter
sbb
jmp
xor
aad
or
out
pop
jg
fst
in
sahf
cmps
and
shr
add
cmp
aam
std
aaa
icebp
loopne
sub
loope
cmp
retf
out
pop
in
dec
pushf
jno
(bad)
sbb
pushf
into
dec
repz
mov
repnz
into
add
cmps
sti
push
lods
xchg
std
repz
in
shl
jl
or
sbb
je
inc
jns
imul
cmp
or
mov
clc
xchg
dec
(bad)
mov
add
icebp
xchg
aas
dec
(bad)
into
add
pop
idiv
lea
cmp
lods
xchg
aam
jecxz
mov
call
scas
pop
and
xor
jge
and
outs
into
adc
xchg
es
mov
into
js
mov
call
or
scas
into
ins
and
inc
not
push
dec
into
sahf
inc
arpl
hlt
push
jp
pop
mov
pop
popf
push
mov
dec
mov
test
or
loope
mov
mov
dec
adc
(bad)
into
cmp
inc
mov
pop
into
sbb
je
(bad)
xchg
inc
fdiv
push
xchg
and
sub
imul
pop
add
sub
sbb
retf
js
mov
into
xchg
stos
mov
mov
enter
mov
pop
mov
pop
lods
aas
xor
xchg
mov
cmc
outs
sahf
xor
push
fisubr
sub
daa
into
nop
ss
lea
mov
int
int3
icebp
out
pop
xchg
stos
aad
sub
into
pop
inc
mov
into
dec
and
leave
scas
mov
lahf
mov
stos
retf
dec
out
inc
dec
fistp
mov
out
pushf
fwait
ret
push
jp
cmp
jbe
into
mov
sbb
cmp
jno
into
ins
sar
sub
pop
leave
stos
push
inc
adc
das
test
and
xchg
int3
stos
out
mov
sbb
outs
in
or
lods
lea
test
ins
push
xor
mov
pop
add
sbb
xchg
cmp
jne
(bad)
aad
aaa
jmp
and
push
mov
mov
je
mov
aas
xchg
into
fidivr
cmp
push
into
adc
sub
xchg
out
or
inc
sahf
cmps
pop
mov
push
and
jmp
xchg
and
scas
into
fdivr
dec
mov
(bad)
lock
into
adc
repnz
jecxz
data16
ucomiss
ficomp
push
daa
mov
push
jne
inc
inc
mov
div
adc
sub
leave
aas
cs
std
mov
xchg
repnz
(bad)
pop
lds
inc
push
cli
into
cld
push
sub
ss
pop
sub
jo
gs
ret
mov
or
test
or
ss
inc
sbb
out
aas
xchg
xor
lods
scas
loope
cmp
lods
push
addr16
movs
add
test
loop
mov
dec
push
xchg
and
and
add
repnz
jbe
xor
das
sbb
jmp
shr
add
popa
test
push
mov
test
jns
cmp
enter
mov
xchg
sub
mov
dec
lds
push
out
into
pop
mov
sbb
movs
daa
and
popf
test
scas
fisttp
loop
scas
movs
pop
xchg
mov
into
push
idiv
pushf
push
sub
mov
and
outs
movs
out
shl
dec
sub
in
into
clc
or
sbb
mov
jmp
adc
dec
jp
adc
pop
movs
or
cld
fxch
fwait
scas
jl
stc
and
daa
int3
cmp
cmp
mov
fmul
aas
imul
mov
sub
jae
mov
psubb
shr
in
(bad)
mov
movsx
or
mov
movs
in
cmp
xor
and
and
rep
jo
mov
in
push
fmulp
pop
pop
test
xor
je
pop
mov
xchg
out
cmp
jno
pop
ret
push
xchg
cwde
shl
xchg
daa
(bad)
pusha
aad
neg
into
xchg
adc
int
push
in
inc
jns
sub
into
mov
rcr
cmp
in
imul
lods
pop
into
jecxz
add
data16
and
xchg
call
stos
jmp
or
adc
scas
ins
and
pop
into
mov
int3
cmp
enter
in
je
fistp
push
add
inc
fmul
test
push
push
adc
or
dec
(bad)
pop
scas
push
pop
cmp
out
fwait
shl
adc
ins
adc
pusha
cmps
in
fidivr
add
aam
into
mov
jmp
test
dec
adc
fwait
jns
cmps
test
or
mov
cli
(bad)
sbb
lahf
out
add
mov
xor
mov
pop
lds
(bad)
fild
and
scas
gs
mov
repnz
clc
add
sbb
scas
imul
jp
dec
xor
retf
mov
int
(bad)
mov
rol
retf
(bad)
call
into
test
push
inc
xor
les
pop
test
lods
scas
and
neg
or
pop
into
push
add
pop
push
jmp
mov
pop
mov
idiv
mov
lods
clc
mov
fsubr
retf
xor
cmp
dec
mov
inc
dec
and
and
cs
sbb
jle
inc
jp
bound
mov
idiv
shr
cwde
aaa
add
dec
jle
int3
pop
mov
scas
test
lods
sub
(bad)
pop
pop
test
movs
cwde
std
stos
pop
sbb
out
sahf
mov
pop
fs
jg
dec
rcl
lods
scas
shl
push
push
out
mov
repz
je
mov
inc
xor
or
push
dec
mov
out
jbe
cmps
mov
retf
leave
sbb
xor
hlt
into
jb
in
or
jmp
into
les
mov
out
jmp
lahf
(bad)
div
punpckhwd
mov
test
push
(bad)
retf
pop
shl
inc
dec
and
mov
into
mov
fcmovnbe
adc
imul
sbb
dec
adc
sub
mov
(bad)
sbb
stc
pop
repnz
into
mov
jae
int
fsub
mov
mov
cmp
cmps
imul
mov
sar
into
add
loopne
mov
inc
xchg
mov
jmp
into
fisttp
pop
adc
pop
scas
es
jns
sbb
sbb
xor
inc
movs
into
cmp
fsub
pop
into
fdiv
lds
icebp
mov
pusha
mov
mov
sbb
scas
and
leave
loop
sbb
rol
popa
fisub
and
dec
into
cwde
pusha
retf
ror
pop
adc
and
mov
mov
in
sbb
rcl
mov
push
lods
fdiv
add
sbb
scas
out
xchg
ror
inc
cmovns
in
or
rol
pop
mov
fs
inc
mov
retf
stos
popf
aas
or
pop
retf
dec
(bad)
repz
jmp
fwait
push
sub
rcr
scas
xchg
pop
cmovg
sar
aas
sti
lods
pop
push
push
push
cmps
sti
fdivrp
in
jbe
mov
xor
dec
into
leave
call
pop
or
push
adc
repz
repnz
inc
push
out
mov
mov
aas
cmps
and
into
add
add
mov
inc
movs
mov
shl
fcom
pop
into
jecxz
xchg
mov
into
int3
xchg
mov
sahf
jmp
mov
stos
pop
push
pop
scas
retf
inc
icebp
xor
sub
xor
jmp
aad
(bad)
cmp
mov
pop
call
js
xchg
add
and
and
arpl
pop
sub
sbb
and
inc
lods
xor
mov
dec
or
dec
rol
pop
loop
cld
push
dec
and
add
ins
lahf
ins
sub
into
jecxz
pop
cmp
repz
pop
loope
inc
aam
into
pop
ds
mov
sub
pop
cmp
mov
mov
or
add
sub
arpl
sub
dec
adc
sbb
mov
pop
out
pop
or
bound
into
sbb
(bad)
mov
cwde
push
xor
mov
inc
cmp
xor
into
nop
jecxz
pop
cmp
(bad)
sub
dec
dec
mov
pop
aas
into
add
jge
and
pushf
inc
(bad)
mov
lea
(bad)
ins
push
jb
test
xchg
xchg
or
and
mov
imul
jl
xchg
cmps
inc
cs
and
loop
fld
lahf
jo
stos
sub
xor
cdq
stc
push
and
adc
mov
jecxz
pop
xor
or
ds
cmc
aas
lods
into
jno
movs
sbb
int
fdivr
into
add
fdiv
mov
pop
mov
jecxz
xchg
in
mov
(bad)
into
repnz
into
js
les
into
jl
ja
xlat
jbe
out
cli
xchg
(bad)
pusha
into
outs
jmp
aaa
in
movs
inc
jae
arpl
adc
enter
inc
pop
xchg
mov
scas
cmps
data16
mov
rol
out
jne
adc
cmp
xchg
sub
dec
in
cmp
loop
div
inc
mov
dec
hlt
adc
inc
stos
scas
jge
xchg
loope
ret
add
push
(bad)
cdq
les
jbe
out
adc
movs
leave
dec
in
pop
inc
lods
sbb
dec
mov
pop
mov
mov
aas
into
leave
mov
out
repz
sbb
mov
xor
(bad)
inc
or
loope
js
shr
into
dec
test
mov
stc
scas
inc
xchg
xor
dec
xchg
pop
pop
(bad)
cmp
out
test
lods
jmp
mov
pop
je
add
push
mov
ja
lods
lods
xchg
call
imul
lahf
sub
lods
and
lock
sbb
pop
into
call
push
fs
cmp
mul
mov
sub
test
sbb
or
sbb
mov
(bad)
pand
into
ins
pop
xchg
ins
sbb
enter
dec
cmp
sub
(bad)
jg
lods
out
outs
add
into
imul
retf
push
das
xor
je
pop
lahf
into
inc
jge
test
cmp
dec
aaa
adc
push
adc
push
fisubr
push
dec
popa
std
sbb
ficom
aas
std
into
cmc
loope
cmp
outs
sar
fisubr
pop
xchg
xchg
scas
dec
sbb
jne
pusha
mov
mov
add
(bad)
sbb
push
jg
aad
jbe
nop
cmp
test
aam
imul
imul
cmp
into
scas
imul
dec
outs
and
push
mov
nop
into
cmp
pop
mov
outs
cmp
into
sbb
sub
stc
aad
xchg
cmp
adc
cdq
ret
into
sbb
jle
test
nop
lahf
lock
test
cmp
movs
mov
aad
pop
sbb
push
je
sub
(bad)
cld
cmps
adc
xor
mov
sub
and
call
xor
xchg
mov
or
xchg
into
xor
icebp
stos
scas
bound
mov
jns
sub
pop
inc
daa
into
jge
xchg
in
cwde
mov
and
xor
cmps
lods
lahf
push
(bad)
jns
gs
sub
add
pop
cmp
dec
fucom
outs
mov
dec
jl
adc
mov
pop
ins
fs
lock
shr
xor
imul
inc
and
aad
int3
lods
cmps
jge
mov
pop
jno
mov
or
and
xchg
and
mov
test
test
neg
(bad)
mov
inc
repnz
xchg
cmc
or
mov
pop
add
push
jo
sar
outs
mov
dec
into
loopne
or
mov
mov
and
into
mov
pop
xchg
jmp
scas
clc
jns
stos
and
push
cmp
scas
ret
mov
sbb
out
mov
mov
(bad)
into
cmp
jecxz
lods
xchg
adc
daa
loope
xor
lds
mov
mov
push
out
mov
(bad)
push
mov
mov
outs
(bad)
ins
pop
je
call
cwde
faddp
enter
sub
into
or
sub
jle
arpl
into
jmp
dec
test
xor
jle
into
xchg
dec
fstp
ror
repz
(bad)
cdq
or
sar
xchg
into
sbb
mov
into
add
mov
inc
into
xor
cmps
xchg
sub
out
push
retf
mov
scas
jmp
movzx
xchg
sahf
ret
arpl
ins
mov
jne
push
dec
scas
and
jbe
mov
xor
xor
bound
stos
cmp
cmovle
jnp
mov
push
xor
xchg
loope
icebp
outs
sbb
cmps
scas
in
mov
dec
push
int
(bad)
retf
hlt
mov
push
dec
jge
lods
cmp
dec
inc
neg
lock
or
in
pop
into
pusha
mov
mov
popa
popf
cdq
cmp
sahf
test
cs
retf
fcmovu
xchg
into
adc
cmp
xchg
dec
pop
push
into
dec
lock
jge
lahf
rcr
pop
into
sbb
fist
push
sbb
lods
(bad)
dec
cli
dec
pop
fistp
add
xchg
out
movaps
cmp
ins
ss
sahf
into
xor
test
cmp
je
adc
(bad)
ror
jmp
les
jecxz
out
mov
xchg
pop
mov
add
jae
mov
mov
ja
into
pop
popf
daa
retf
(bad)
gs
sbb
fidivr
scas
cmc
push
(bad)
mov
sbb
repz
push
cmp
aad
rcl
jp
and
sub
gs
jl
shl
mov
popf
fwait
dec
sahf
cmp
xchg
into
cmp
mov
add
jae
into
in
sub
bnd
mov
inc
retf
sbb
test
inc
enter
dec
sub
pop
xchg
into
test
xor
das
stos
push
and
hlt
push
sub
jae
and
nop
out
into
xlat
mov
jle
lods
pop
sbb
ss
pop
sbb
call
jbe
into
mov
push
mov
into
imul
mov
out
into
div
sar
sahf
repnz
movs
push
aad
ss
push
mov
adc
dec
je
scas
cs
xchg
pop
into
lods
mov
retf
test
lahf
into
jns
test
fmul
push
cmp
(bad)
fwait
and
mov
pop
pop
fdiv
cmps
mov
sbb
int
repnz
mov
adc
bound
ss
jle
dec
mov
in
cmp
ret
(bad)
outs
pop
repz
call
ss
out
(bad)
in
test
mov
or
sub
pop
into
pushf
add
int
mov
pusha
into
out
(bad)
fstp
scas
xor
dec
mov
cmp
push
mov
loop
ins
lea
out
pop
fstp
movs
outs
push
mov
mov
dec
push
pop
into
adc
xor
es
sbb
mov
xchg
into
cli
jge
jmp
in
pop
mov
mov
mov
mov
adc
hlt
pop
mov
addr16
xor
or
fcom
pop
pop
xchg
and
test
ins
xchg
inc
sub
push
call
into
in
shl
mov
cmp
das
aas
psrad
test
int
sub
aas
lods
mov
(bad)
icebp
arpl
add
mov
pop
into
cdq
mov
dec
out
jmp
inc
into
fldl2t
push
sahf
or
into
xchg
mov
mov
rcl
jg
int
cdq
cli
pop
lods
sar
sub
inc
shr
fidivr
and
xor
adc
dec
cwd
pop
mov
scas
sbb
in
add
inc
push
dec
fisubr
jbe
mov
cld
into
lahf
jno
repz
jae
mov
cmp
(bad)
xchg
repnz
test
into
in
fcmovnbe
in
or
test
daa
int
cwde
(bad)
pop
pop
repnz
adc
xor
addr16
mov
scas
stos
or
mov
push
push
add
xchg
pop
out
scas
into
daa
stos
cmp
sub
xor
push
pop
pop
xor
jmp
dec
adc
and
sub
test
into
(bad)
mov
mov
adc
adc
inc
clc
pop
and
cmp
adc
fiadd
dec
sub
xor
das
jmp
ror
sbb
(bad)
outs
jno
fsubr
int
cdq
sar
jae
sahf
and
inc
sbb
into
push
lock
fild
cmp
or
adc
das
adc
fdivr
inc
sbb
stos
call
popa
push
cmc
test
push
test
jg
xor
cmp
cmp
into
add
call
push
into
fisubr
pop
xchg
into
stc
add
mov
in
and
ss
stos
xor
pop
icebp
mov
nop
adc
inc
or
ror
je
lea
cmps
adc
pop
cmp
mov
sbb
retf
retf
into
sbb
not
je
inc
outs
mov
adc
sahf
dec
mov
inc
fisttp
ror
outs
mov
cmp
into
jle
adc
pop
enter
dec
mov
into
jmp
adc
clc
lds
leave
into
imul
jle
(bad)
enter
pop
scas
dec
mov
mov
out
cmp
xor
repnz
into
dec
mov
xor
into
fsub
xor
into
mov
mov
sbb
int3
(bad)
push
(bad)
xchg
out
push
into
fisttp
cdq
pop
xchg
and
inc
(bad)
lods
dec
test
push
sar
xchg
mov
sti
repz
leave
lahf
add
in
xchg
lock
into
imul
ins
mov
push
or
xor
jae
sahf
adc
dec
scas
inc
fcomp
mov
cdq
jmp
mov
sbb
jecxz
(bad)
jne
hlt
into
cdq
and
dec
cmp
outs
and
push
cld
outs
ins
sahf
mov
pop
into
pop
call
sub
cmp
push
aas
lods
test
mov
loope
adc
cmps
test
das
mov
cmp
xchg
in
dec
adc
or
into
add
loop
mov
mov
xchg
add
aaa
or
dec
movs
xor
jbe
add
cmps
retf
lock
rdpmc
pop
mov
out
sbb
(bad)
int
inc
sbb
or
push
xchg
in
sub
test
pusha
mov
mov
push
mov
pop
mov
push
xor
mov
aad
pop
jle
inc
imul
das
dec
paddb
int3
les
inc
ja
sub
pop
outs
nop
pop
aad
jns
das
mov
mov
mov
fbld
inc
(bad)
mov
lods
dec
push
arpl
xlat
out
push
add
sbb
loop
fld
into
xor
dec
into
int
and
dec
mov
nop
into
mov
pop
cmp
into
ja
fcomip
xlat
dec
xchg
mov
in
jnp
(bad)
rsm
pop
data16
into
ret
xchg
arpl
mov
ins
mov
pop
sub
push
jae
dec
repz
test
lods
push
pop
jg
into
nop
sub
mov
push
xchg
sbb
mov
dec
fwait
adc
outs
mov
(bad)
mov
in
dec
retfw
into
xor
icebp
mov
jnp
mov
jno
lods
mov
into
fistp
ds
pusha
pop
inc
into
or
or
or
mov
shl
fsub
scas
cmc
pop
mov
loop
pop
cmovge
into
mov
sbb
cmp
pop
outs
in
into
sbb
push
sbb
scas
test
jp
test
adc
mov
test
and
sbb
mov
mov
ror
mov
imul
idiv
mov
out
cmp
mov
mov
test
(bad)
(bad)
shl
adc
je
xchg
jecxz
cs
mov
or
sub
rol
sar
jg
jns
mov
pop
push
into
sahf
dec
pop
loope
adc
xchg
add
int
ins
pop
mov
add
ret
into
(bad)
mov
rol
out
xlat
cwde
jge
(bad)
into
sub
daa
sub
lods
and
push
into
pusha
scas
cmp
enter
mov
movs
add
dec
jmp
dec
add
out
xchg
(bad)
scas
or
into
or
push
dec
push
mov
sbb
popf
sbb
shr
loopne
pop
sbb
repz
jg
adc
mov
xchg
lahf
into
sub
test
into
jl
mov
idiv
aas
ret
(bad)
mov
sbb
out
scas
jne
ror
mov
outs
shr
dec
push
pop
dec
adc
ds
pop
lods
into
sahf
jge
add
ins
test
pop
sbb
inc
shl
into
push
push
sbb
pop
mov
rcl
(bad)
sahf
scas
jp
xchg
cmp
dec
and
mov
hlt
mov
mov
into
jbe
ins
enter
mov
pusha
jp
and
mov
dec
adc
scas
sar
jae
cmc
hlt
mov
scas
ss
inc
pop
or
stos
sbb
call
cdq
aas
les
int3
cli
mov
jp
mov
pop
push
into
jb
sub
jnp
dec
mov
or
inc
add
pop
fwait
into
pop
xchg
out
inc
mov
icebp
push
push
stos
sahf
and
repnz
lods
pop
sti
not
scas
adc
scas
cmp
add
push
test
xor
lods
in
inc
mov
into
dec
and
inc
ds
out
mov
test
in
cmps
data16
mov
pop
dec
mov
add
addr16
and
mov
dec
hlt
mov
out
pop
(bad)
mov
mov
mov
aad
aaa
xchg
sbb
nop
jns
movs
jae
mov
test
mov
out
cmp
add
xor
lock
xor
lods
jmp
ins
das
scas
out
call
adc
fidivr
xchg
dec
jo
mov
out
movs
popa
inc
scas
mov
cli
clc
mov
dec
xor
imul
push
loop
js
jmp
daa
push
cmovle
jno
xor
into
xchg
pop
sahf
in
fadd
jg
sub
push
cmps
imul
scas
add
xchg
addr16
adc
ds
sub
inc
jb
and
dec
jmp
(bad)
and
push
jae
into
push
fisttp
dec
jae
enter
pop
cmps
inc
dec
or
into
cmp
mov
sub
scas
mov
or
adc
sbb
dec
into
out
mov
repz
mov
in
push
jmp
xor
fisttp
int
mov
dec
aad
imul
ss
pusha
sar
mov
fidivr
mov
cmp
popf
ins
mov
sbb
pop
pop
test
je
and
test
fcomp
nop
push
dec
push
outs
add
mov
or
into
cdq
fdivr
push
ret
push
xchg
leave
push
scas
sbb
sar
or
pop
jnp
mov
scas
pop
and
into
adc
test
scas
fstp
(bad)
in
sub
dec
pop
hlt
into
loopne
push
xor
scas
pushf
cmp
in
lahf
addr16
sub
dec
mov
cmps
loope
jmp
adc
lahf
jae
pop
into
mov
pop
fwait
test
cmps
inc
sub
enter
mov
jg
in
mov
ss
into
cmc
scas
mov
adc
cmp
leave
mov
maxps
and
mov
cmp
scas
mov
outs
ret
in
stos
jns
inc
mov
or
sbb
mov
ja
xchg
pop
in
sti
sub
sub
repnz
xor
in
cmp
pop
mov
lods
nop
jmp
add
dec
dec
ficomp
into
sbb
and
nop
cld
inc
xor
scas
fsubr
mov
lahf
adc
lods
push
lods
pop
dec
outs
and
popa
push
dec
adc
jb
mov
movs
pop
push
xor
call
into
dec
mov
sbb
into
imul
sub
punpckhdq
sbb
aaa
mov
ret
push
xor
cmps
hlt
jmp
scas
(bad)
fiadd
push
out
add
or
pop
xor
mov
push
push
dec
movs
jmp
xor
and
and
lea
into
push
inc
jnp
jp
call
pop
lods
aas
lahf
pop
enter
stc
xchg
enter
and
add
pop
and
cmps
fcom
cmc
sub
mov
sbb
and
dec
arpl
dec
xchg
jae
dec
jo
(bad)
mov
test
ret
add
into
pop
adc
xchg
and
into
test
jge
fs
into
out
icebp
sbb
pop
mov
jg
aas
jp
dec
sub
dec
push
out
lods
lds
push
ds
loop
sti
aas
into
adc
test
enter
rol
xor
into
jne
xor
addr16
in
loop
and
dec
xchg
sub
fwait
cwde
push
push
shr
scas
jbe
xchg
cmp
sub
cmps
dec
into
lock
(bad)
mov
mov
pop
mov
push
or
inc
into
or
xchg
xor
daa
jmp
dec
std
aas
and
into
jge
(bad)
push
jbe
lods
sbb
adc
add
sar
into
mov
mov
and
or
in
ror
retf
stos
into
daa
push
adc
jge
lods
stos
add
sahf
mov
xlat
dec
jle
dec
call
mov
cmp
pop
jno
fs
aaa
dec
cmp
lea
ds
stos
popf
mov
mov
xchg
js
sti
dec
mov
(bad)
retf
cmp
ins
leave
popf
xchg
into
or
fstp
mov
repnz
mov
pop
into
call
inc
add
sbb
mov
data16
xor
mov
sbb
loop
jg
(bad)
push
enter
outs
stos
xchg
dec
sahf
dec
pop
push
xor
je
pop
test
add
retf
ret
inc
pop
aas
mov
dec
sub
or
enter
or
lods
stos
std
js
mov
fdivp
sbb
test
ds
sbb
sub
into
lea
sub
jp
mov
jbe
adc
in
enter
in
int
adc
lahf
fwait
xchg
adc
cmp
pop
pop
jge
xor
cli
mov
lea
sub
inc
mov
sub
jge
dec
int
sub
into
cwde
mov
sbb
mov
into
push
mov
lock
adc
lods
adc
fcom
mov
test
pop
cmps
ret
dec
cmp
into
data16
mov
scas
cmps
test
dec
mov
into
jle
out
and
int3
lods
and
fwait
jmp
dec
retf
fsubp
scas
outs
and
scas
mov
sbb
add
push
in
out
outs
mov
stc
jmp
push
test
sub
pop
fdiv
dec
je
push
push
or
into
inc
dec
stos
es
call
push
into
pop
ins
retf
ficom
jbe
data16
ins
int
movs
jg
out
scas
lds
xchg
mul
mov
cld
pusha
icebp
mov
inc
enter
movs
loop
daa
push
dec
pusha
cmp
js
pop
scas
dec
push
dec
into
cld
or
ds
xchg
lods
add
adc
jb
pminub
into
loop
dec
fdivr
div
mov
test
into
cli
sub
sbb
mov
inc
mov
loopne
add
into
out
out
pop
jp
ja
shld
add
jmp
add
outs
inc
das
daa
enter
pop
mov
into
test
out
dec
and
inc
xchg
mov
not
add
ret
add
and
xchg
xchg
dec
into
mov
stc
mov
dec
icebp
mov
jb
pop
dec
ss
addr16
sub
mov
and
popf
imul
pop
daa
cli
je
into
mov
xchg
mov
dec
into
shl
xchg
xlat
sbb
cld
adc
jge
pop
into
or
pushf
xchg
mov
retf
jbe
mov
bts
jb
mov
mov
ror
into
jmp
cmp
pop
xor
sahf
dec
(bad)
cmp
push
pop
cmp
dec
aaa
sub
rcl
mov
mov
dec
(bad)
xlat
scas
loope
push
fs
ss
cld
inc
and
movs
sqrtps
push
loop
or
test
inc
mov
push
dec
xchg
pop
outs
mov
dec
retf
lahf
out
adc
and
cdq
mul
jmp
cmp
stos
push
pop
cmp
pop
es
xor
repz
pop
jno
minps
leave
and
out
data16
pop
imul
mov
das
inc
arpl
jp
nop
pop
sbb
es
pop
and
fsubrp
and
push
and
std
pop
dec
jmp
jge
repz
scas
pop
hlt
into
je
cmp
retf
ds
(bad)
pop
fwait
jge
xlat
scas
inc
test
in
xchg
outs
test
into
mov
or
icebp
js
outs
mov
punpcklwd
je
into
ds
or
retf
jo
dec
lea
repnz
lahf
gs
jbe
xchg
push
xor
adc
into
shr
mov
inc
aas
sbb
(bad)
sbb
pop
outs
mov
into
dec
mov
push
loopne
adc
mov
pop
mov
pop
mov
test
movs
sahf
cmp
add
mov
xor
pop
sbb
push
into
int
adc
icebp
mov
inc
into
test
pop
test
mov
into
jae
aad
xchg
push
xchg
cmpxchg
dec
cmp
popf
out
lahf
mov
lea
pop
adc
cmc
je
out
cmp
imul
ja
into
stc
jmp
cdq
cld
into
mov
out
stos
dec
dec
stos
into
mov
xor
arpl
out
mov
(bad)
leave
adc
adc
int
xlat
imul
lods
bound
pop
and
jbe
test
into
inc
imul
mov
xor
cmp
into
adc
push
in
pop
push
lods
out
imul
ret
xor
or
sub
jle
sbb
push
cmp
mov
and
sbb
mov
pop
into
adc
outs
mov
mov
scas
mov
xchg
pop
clc
je
mov
adc
test
mov
retf
enter
xchg
(bad)
out
sub
lods
out
mov
sbb
mov
mov
mov
(bad)
scas
aad
mov
pop
hlt
xor
movs
xor
fucom
imul
div
sbb
into
retf
sbb
ret
hlt
into
imul
loope
outs
addr16
sbb
add
sub
rol
push
mov
dec
into
std
mov
push
dec
aad
aaa
ja
fisubr
into
or
push
das
push
lods
xchg
add
cli
stos
mov
loop
into
scas
je
mov
int3
xchg
jnp
sub
adc
into
xor
imul
cdq
jmp
xchg
pushf
sub
cmp
and
mov
out
into
mov
scas
mov
into
std
sti
and
pushf
mov
into
push
adc
scas
mov
sbb
mov
jo
cmps
push
das
pop
inc
jnp
cmc
push
retf
and
xchg
or
mov
repnz
ins
adc
and
push
scas
mov
mov
or
lods
pop
out
fisubr
loopne
adc
jnp
pop
dec
pusha
into
mov
enter
mov
popa
aas
and
cmc
mov
push
push
mov
sbb
imul
mov
shl
into
pop
mov
leave
cdq
pop
adc
mov
lock
push
xor
into
sbb
xchg
cmp
pop
into
xor
sbb
fdiv
into
loope
lock
cld
jmp
push
ret
jmp
inc
mov
into
pusha
fstp
mov
ror
loope
es
sbb
into
mov
mov
leave
cmc
in
ins
pop
stos
aaa
and
movs
push
lock
ss
or
stos
xor
jns
outs
test
lahf
pop
scas
pop
outs
mov
xchg
mov
jl
lods
push
mov
cmp
jp
lods
cmps
ins
imul
cmp
scas
fild
in
dec
mul
cmps
into
jge
outs
inc
mov
test
cmp
fs
ja
cdq
mov
mov
enter
jbe
add
push
jo
test
js
cs
inc
jnp
shr
ret
test
loop
into
inc
inc
or
mov
ret
fs
cmps
fmul
push
into
and
cs
add
sbb
dec
lahf
add
into
loope
movs
mov
int3
mov
mov
xchg
into
cmps
cdq
ds
sub
lods
mov
ret
mov
push
in
xchg
mov
pop
into
add
div
(bad)
jg
into
adc
pop
into
mov
dec
(bad)
and
scas
outs
add
out
pop
push
fcmovb
sub
inc
mov
mul
into
popa
cmp
shl
mov
into
push
enter
jo
dec
ja
test
inc
outs
pop
mov
push
bound
(bad)
(bad)
loop
mov
inc
xchg
stos
lods
mov
push
jge
test
ins
push
(bad)
data16
or
pop
dec
(bad)
aas
add
retf
jle
imul
and
ficomp
mov
jbe
sbb
or
pop
mov
pop
fcom
fnstsw
outs
scas
outs
lahf
hlt
psrlq
into
outs
mov
cmp
leave
dec
mov
scas
cmp
push
jbe
outs
jmp
add
std
mov
into
loope
out
sbb
dec
addr16
mov
cmp
xchg
das
mov
xchg
sub
cvttps2pi
inc
into
inc
cwde
cmc
(bad)
cli
mov
mov
xchg
mov
int
sbb
into
dec
and
ja
into
clc
addr16
mov
dec
mov
mov
mov
sub
out
in
inc
stos
lea
pop
or
sub
out
retf
cdq
xchg
inc
fiadd
mov
hlt
mov
dec
into
cmc
dec
jg
inc
ja
mov
into
cli
or
out
(bad)
addr16
into
cmp
movs
into
jg
mov
dec
into
cmps
pop
jae
dec
xor
loop
add
popf
ja
mov
in
mov
mov
push
bndldx
sti
scas
mov
stos
fsub
inc
lods
loop
leave
pop
icebp
into
push
div
stos
(bad)
popa
cwde
into
outs
fsubr
push
into
je
or
ss
lahf
(bad)
into
mov
aas
cmps
retf
push
into
out
add
in
mov
jmp
movsx
into
mov
mov
sub
ret
push
xor
adc
fmul
or
into
pop
(bad)
leave
in
leave
push
(bad)
mov
inc
or
add
into
push
cdq
(bad)
cmp
fstp
nop
xchg
jle
addr16
into
or
pop
and
into
popf
xchg
and
dec
mov
test
cld
mov
ror
add
mov
pop
push
mov
into
sub
xchg
mov
push
push
dec
adc
mov
in
cmp
dec
and
cmp
scas
mov
mov
into
and
in
inc
pusha
(bad)
stos
lods
repz
aaa
scas
and
push
mov
movs
arpl
fild
mul
xchg
pop
test
(bad)
ror
les
pop
movs
call
mov
mov
shl
and
dec
hlt
mov
xor
cmc
ins
outs
mov
(bad)
xchg
in
mov
sub
and
xor
mov
mov
jo
and
cmc
or
fs
test
dec
mov
imul
and
into
retf
and
scas
test
sbb
cmps
(bad)
mov
dec
xchg
xor
in
shl
push
inc
and
out
ret
inc
mov
inc
dec
retfw
pop
addr16
out
into
outs
lods
sti
scas
call
and
scas
or
jge
mov
jae
mov
push
xchg
rol
sahf
sub
(bad)
out
or
mov
cld
add
out
push
retf
xchg
pop
das
lds
inc
sub
mov
mul
out
in
scas
in
sub
fisubr
into
mov
sbb
into
dec
dec
repnz
into
std
push
popa
push
in
adc
mov
into
movs
add
les
and
mov
jbe
cmp
lods
fistp
push
aas
or
mov
xchg
into
mov
lar
push
aam
into
fistp
addr16
(bad)
mov
into
arpl
(bad)
mov
je
xor
dec
pop
aas
inc
stos
pop
out
pushf
xchg
out
into
sar
imul
into
push
sub
mov
dec
pop
movs
lea
and
jmp
cdq
into
test
jb
arpl
mov
adc
sub
add
das
mov
push
repnz
shl
(bad)
bound
sub
addr16
cli
xchg
xlat
into
adc
mov
test
sub
into
out
dec
call
mov
inc
outs
push
and
into
fisttp
pop
cli
into
rcr
adc
std
sbb
pshufhw
pop
mov
and
sbb
fsubr
fimul
push
movs
sub
addr16
adc
jg
adc
sub
jmp
mov
pop
pop
mov
sar
dec
xor
xor
into
cdq
sbb
out
sub
dec
sub
loopne
or
test
jne
pop
cmp
inc
stos
dec
repz
mov
in
sbb
stc
push
jnp
mov
loopne
rcpps
mov
cmp
sbb
test
cdq
movs
push
jg
into
mov
loop
xchg
lods
or
lods
inc
dec
pop
adc
sbb
into
dec
and
mov
fcomp
into
xchg
mov
jmp
lea
mov
push
mov
xor
int
xchg
mov
or
loop
outs
loopne
into
ja
adc
sbb
dec
cmp
into
sbb
xchg
cmp
xchg
sar
sub
add
(bad)
mov
test
aas
imul
movs
rol
lods
pop
sub
sub
inc
dec
cli
lods
popf
mov
aas
cdq
sahf
sub
sub
pop
mov
xor
inc
add
scas
mov
pop
rcl
jmp
mov
dec
xor
dec
retf
mov
mov
gs
push
adc
in
mov
adc
out
xchg
test
mov
dec
int
fcom
movs
xchg
sub
ret
mov
sub
jecxz
out
adc
mov
popf
adc
cmp
xchg
cmps
cmc
sbb
adc
add
add
dec
daa
or
into
icebp
inc
ror
push
scas
pushf
into
in
cld
lock
repz
test
test
cmc
movs
scas
fwait
lahf
pop
loopne
mov
movaps
xchg
in
or
fnstcw
push
dec
nop
jmp
popf
mov
push
mov
jne
(bad)
pop
scas
sbb
cmps
inc
xor
mov
nop
js
addr16
ins
shl
fsub
les
push
imul
fs
mov
movs
test
cs
and
sub
mov
hlt
(bad)
cmp
sbb
mov
dec
stos
stos
mov
in
daa
pop
and
cmp
adc
inc
or
test
daa
call
mov
out
fld
sub
pop
mov
out
outs
pop
in
mov
outs
jae
sahf
jl
scas
lock
imul
adc
ins
mov
add
mov
cmp
jle
mov
loop
mov
or
fild
ret
into
mov
(bad)
cmps
outs
into
(bad)
mov
in
mov
test
loop
into
fadd
inc
mov
div
pop
into
inc
mov
into
mov
pop
call
test
xor
scas
dec
adc
mov
mov
cmps
mov
mov
cmp
arpl
ins
sbb
into
sub
fs
xchg
aam
(bad)
mov
mov
retf
push
loope
popa
cli
mov
fs
sti
and
pop
jno
adc
push
into
dec
or
inc
mov
into
stos
jns
jecxz
mov
and
fcomip
jo
into
sbb
sub
dec
cs
into
sbb
adc
push
stos
cld
pusha
mov
loop
sub
cmp
pop
nop
adc
mov
(bad)
adc
lods
xor
push
cmc
pop
push
xchg
mov
add
pop
arpl
into
adc
cli
cld
jnp
sub
mov
and
hlt
mov
mov
sbb
js
cmovae
in
adc
(bad)
into
sub
into
lods
xlat
jae
aaa
dec
push
inc
scas
jmp
rcr
ror
sbb
gs
lock
push
mov
xchg
lods
xchg
mov
mov
push
push
into
scas
jmp
jne
into
jo
push
push
sbb
pop
test
pusha
cmp
xchg
jns
jb
or
into
out
pop
stos
xor
lock
mov
mov
out
stos
adc
icebp
(bad)
ud0
sbb
or
mov
xor
es
fdivr
into
pop
test
jle
cmps
in
mov
or
stos
jnp
into
lea
ds
lods
hlt
lock
imul
mov
dec
retf
into
out
adc
into
popa
sub
inc
ret
cmps
into
leave
es
and
in
scas
jecxz
xchg
mov
sahf
(bad)
and
push
pop
xchg
retf
inc
and
jp
adc
inc
xor
pusha
cmp
mov
xchg
xchg
ror
mov
pushf
or
bnd
in
ret
pop
mov
pop
cmp
mov
mov
test
pop
add
xchg
dec
push
ds
push
jbe
outs
jb
adc
add
gs
lods
cmp
bnd
je
mov
into
and
and
mov
cdq
into
mov
hlt
imul
pop
into
pop
call
rcr
rcr
jns
jno
dec
push
pop
mov
aas
inc
into
cmp
pop
mov
test
cmp
icebp
into
pop
mov
popf
mov
dec
(bad)
sub
sbb
ds
xlat
mov
repnz
and
xor
mov
aaa
mov
test
stc
aas
shl
pop
fs
mov
inc
nop
(bad)
into
lahf
mov
scas
test
mov
subps
call
mov
lock
es
push
dec
js
and
mov
xchg
loopne
lods
inc
cmp
sbb
out
mov
movs
push
ins
into
pushf
inc
sub
jmp
(bad)
pop
jle
into
sub
arpl
into
int
and
imul
in
retf
into
add
push
in
xor
pop
aas
xor
scas
and
mov
jg
ror
mov
sub
jl
jge
lock
mul
add
(bad)
pusha
mov
shr
pop
and
test
into
pop
cmc
push
es
xor
pusha
stos
retf
fmul
pop
and
dec
sbb
ret
sub
into
xchg
mov
gs
sbb
mov
hlt
mov
movs
xor
jns
fbstp
lahf
pushf
ja
mov
inc
cmp
sub
dec
loope
cvtps2pi
push
mov
jno
cmp
cmp
sbb
mov
sub
add
stos
mov
push
push
aas
pop
mov
dec
into
leave
aaa
jle
pop
jecxz
jne
and
inc
adc
sub
mov
add
into
pop
int
ror
popf
push
into
jge
jb
es
in
add
dec
push
aad
pop
mov
jns
(bad)
das
fisub
push
loope
adc
mov
cdq
lea
pop
stos
sbb
mov
into
popa
je
fnstenv
sub
sub
aas
into
xor
sbb
ss
cs
data16
xor
aas
cmp
and
test
fadd
pop
mov
and
push
jno
dec
les
mov
out
aas
cmc
fcmove
jl
xor
xlat
mov
xor
mov
inc
into
pop
rcl
sub
aad
stos
dec
xchg
mov
mov
mov
psrlq
clc
ja
popf
into
lock
mov
lods
lods
and
sahf
int
aad
xlat
jp
mov
scas
xor
test
in
xor
popa
into
jmp
scas
test
dec
mov
cmp
xchg
mov
vdivss
inc
(bad)
into
xchg
movs
ror
daa
push
pop
stos
inc
dec
jmp
xchg
in
pop
into
inc
daa
lea
fs
add
adc
data16
dec
mov
dec
repz
push
pop
movs
pop
mov
out
push
pop
push
leave
lods
aas
xchg
bound
dec
ror
test
mov
fwait
sahf
pop
and
mov
mov
inc
into
mov
jno
xor
or
in
jge
and
cmp
ins
shl
fimul
lods
lods
cmp
outs
call
sub
pop
bound
sbb
xor
call
icebp
mov
in
jge
test
mov
scas
mov
xchg
fiadd
into
cmp
mov
cmp
mov
jae
and
sub
js
sub
sbb
jbe
jg
push
inc
xchg
(bad)
cmp
daa
loop
pop
test
pop
fsubr
pop
test
in
imul
mov
inc
xor
adc
test
sahf
(bad)
cld
test
cmp
add
mov
out
xchg
mov
add
fs
into
dec
inc
retf
pop
sub
ja
into
scas
sbb
xchg
(bad)
leave
inc
adc
outs
(bad)
mov
call
sbb
mov
sbb
aaa
mov
(bad)
fdivr
mov
repz
je
lods
(bad)
arpl
jl
lock
mov
mov
into
outs
scas
cs
lahf
mov
cmp
push
sbb
mov
loopne
dec
mov
out
sahf
dec
scas
mov
or
jb
and
icebp
scas
or
lahf
pop
lds
sar
into
aas
push
and
scas
mov
fwait
pop
xor
leave
das
lods
(bad)
sub
mov
mov
xchg
pop
out
in
dec
or
or
test
push
xchg
pop
pop
into
inc
stos
test
mov
adc
mov
retf
pop
pop
into
mov
mov
retf
sbb
xor
aas
adc
jno
(bad)
mov
std
sub
pop
retf
test
pop
test
xor
out
(bad)
jle
inc
mov
or
xchg
lahf
sbb
leave
xor
nop
adc
call
(bad)
repnz
pushf
into
jae
mov
cmp
je
pmulhuw
sbb
mov
scas
out
stos
mov
retf
loopne
mov
cmps
bt
mov
sub
push
ds
xchg
test
aad
mov
xchg
imul
adc
fmul
jnp
scas
mov
adc
into
sar
dec
sub
sub
or
sub
(bad)
sub
pop
into
scas
scas
pop
ins
push
mov
xor
or
cmps
jns
dec
sbb
xchg
out
push
(bad)
push
and
pushf
sbb
inc
fcmovu
jecxz
push
leave
and
int3
xchg
inc
shr
in
fisttp
mov
mov
xor
dec
ret
add
aas
es
movs
mov
mov
addr16
into
test
(bad)
mov
push
int3
mov
jecxz
sub
xchg
inc
leave
xchg
repnz
and
mov
aas
push
call
push
das
cmps
sbb
mov
inc
into
xchg
inc
jp
and
lods
lods
sbb
adc
call
ds
fcmove
enter
icebp
push
loop
sub
into
pop
pop
ret
fwait
stos
movs
les
mov
icebp
adc
mov
outs
inc
pop
inc
leave
test
add
dec
dec
jbe
or
imul
inc
ins
mov
mov
out
jmp
hlt
imul
push
loope
or
pop
popf
enter
sbb
in
xlat
into
sub
(bad)
ret
idiv
into
jge
mov
cmp
adc
xor
xchg
mov
lods
call
(bad)
mov
mov
stc
mov
push
cs
xchg
lahf
ins
sbb
xor
enter
movs
dec
mov
(bad)
push
mov
(bad)
lahf
out
mov
mov
inc
dec
adc
ror
push
mov
(bad)
frstor
into
xchg
or
cmps
mov
mov
pop
(bad)
mov
scas
cmp
sahf
xchg
(bad)
add
pop
xor
loope
or
dec
es
mov
loopne
(bad)
and
add
mov
pop
inc
adc
fwait
pop
push
cmp
into
in
pop
std
out
stos
jae
aas
and
or
inc
out
outs
mov
mov
aas
xor
lahf
cs
adc
mov
imul
push
jp
fs
push
clc
scas
arpl
cmp
add
mov
jmp
loopne
push
shl
sub
mov
mov
xor
inc
mov
and
jg
icebp
in
or
into
loopne
mov
xchg
scas
inc
push
fs
or
pop
imul
jmp
shl
dec
mov
pop
and
out
imul
retf
mov
addr16
and
push
outs
mov
dec
adc
imul
repnz
xor
mov
inc
ret
pop
jecxz
lods
popf
mov
leave
push
or
fwait
daa
cmps
jae
fmul
and
dec
scas
dec
scas
sub
lds
pop
dec
shr
test
mov
cmp
ja
(bad)
xchg
(bad)
cmp
addr16
cmp
icebp
sbb
cdq
pop
xchg
mov
pop
pop
jo
enter
and
into
inc
dec
jmp
mov
(bad)
cld
loopne
clc
pop
mov
call
aas
pop
mov
nop
leave
pop
lods
stc
or
dec
ins
xchg
in
fdivr
ds
cmps
dec
loop
jle
es
push
sub
(bad)
rcl
inc
sbb
into
ins
arpl
fnsave
out
es
inc
into
jns
mov
mov
add
cmp
nop
adc
mov
mov
js
leave
adc
mov
jg
pop
ror
mov
jle
leave
(bad)
repnz
mov
jnp
add
outs
cmp
inc
into
shl
jb
mov
loopne
shl
fdivp
into
push
xor
adc
xchg
inc
or
ss
test
loope
ja
mov
into
test
bound
sbb
cli
into
jle
jbe
jmp
icebp
or
test
mov
dec
daa
mov
into
or
dec
sbb
mov
push
jp
sub
add
ror
sub
add
cmps
ret
dec
fs
mov
sar
gs
(bad)
stc
icebp
mov
loop
into
mov
test
mov
and
lahf
pop
xor
scas
jp
lods
xchg
jns
xchg
not
sbb
retf
mov
fmul
in
pushf
pusha
xchg
mov
sub
mov
stos
mov
jne
cmp
sbb
push
add
mov
xchg
jae
dec
sbb
xchg
cmc
sub
jmp
mov
repz
xchg
sbb
dec
xchg
cld
in
cmps
adc
cmp
sub
test
mov
dec
loopne
fadd
push
movs
in
stos
sub
lahf
dec
int
mov
pop
push
cs
aas
scas
shl
and
xchg
out
jg
into
inc
push
xchg
call
mov
in
dec
sbb
into
test
jnp
fcmovnu
jbe
movs
sbb
jg
and
inc
into
lods
dec
sbb
xlat
mov
mov
cdq
dec
jl
mov
mov
fbstp
test
xchg
dec
dec
out
and
test
fsub
pop
pop
pop
sub
in
xchg
or
pop
xchg
xor
adc
loope
inc
lods
push
ss
push
out
xchg
xor
cmps
push
outs
lahf
into
xchg
(bad)
pop
into
stos
push
enter
dec
sub
jno
mov
push
scas
ja
pop
repnz
mov
fwait
inc
es
mov
into
jae
or
out
pop
mov
stos
and
jg
xchg
fbld
outs
scas
ss
add
das
jbe
shrd
jbe
inc
scas
into
dec
jl
push
pop
jb
aas
into
pop
in
das
rol
push
dec
into
and
dec
into
cmp
sahf
cmps
mov
mov
sbb
or
or
sbb
and
mov
test
ja
cmp
lods
dec
jmp
or
leavew
sbb
mov
pop
scas
mov
mov
into
or
inc
into
sub
mov
sub
xchg
outs
into
stos
sub
xlat
into
inc
pop
mov
fmul
fist
pop
in
into
push
pop
test
out
xor
jmp
(bad)
mov
fisttp
(bad)
fsub
psubb
arpl
pop
test
sbb
or
xchg
xor
test
neg
xchg
bswap
shr
mov
lea
adc
and
inc
inc
mov
adc
pop
aad
and
scas
stc
xlat
aam
add
adc
les
frstor
sti
lods
add
lahf
fld
mov
into
call
(bad)
shl
push
mov
fsub
(bad)
mov
pop
jge
(bad)
or
sub
jp
xor
in
scas
push
aas
into
xor
add
inc
pop
(bad)
cmp
dec
outs
dec
loop
scas
jl
mov
ins
pushf
movntq
cmps
inc
out
jne
mov
inc
mov
cmp
inc
mov
mov
pop
popa
retf
jp
and
xchg
or
xchg
out
scas
inc
jge
mov
jmp
stos
adc
cli
test
into
das
jnp
mov
je
cmp
mov
xchg
dec
or
jg
into
outs
addr16
dec
loope
inc
es
and
rcr
in
into
repnz
movs
in
sbb
into
mov
mov
sub
xchg
lea
inc
mov
jmp
out
(bad)
sbb
ins
inc
mov
scas
cmp
mov
or
xor
into
jo
popf
jne
xchg
pop
(bad)
xchg
ret
aaa
cld
icebp
stc
js
mov
into
(bad)
in
sub
pushf
sub
cmp
push
out
ins
jmp
lods
push
mov
dec
mov
cmps
das
clc
(bad)
clc
fdiv
jle
das
sbb
mov
call
xlat
outs
cs
scas
xchg
or
out
or
cmp
into
or
jnp
adc
mov
scas
sub
rol
ds
lock
les
outs
sub
jl
dec
rol
lds
dec
push
mov
movs
scas
lods
and
adc
pushf
scas
mov
sti
or
inc
cmp
pop
(bad)
mov
mov
hlt
cdq
lods
mov
into
lahf
daa
call
imul
mov
scas
fidiv
pop
or
into
add
xor
in
enter
mov
mov
xchg
jp
imul
pop
das
cmp
inc
sub
push
sahf
xchg
cmc
inc
scas
into
in
xchg
icebp
mov
outs
mov
cmp
dec
into
mov
adc
aad
inc
jmp
sahf
push
into
mov
push
mov
push
test
xor
cmp
into
rol
into
add
jbe
pop
xor
shl
in
jle
push
xchg
mov
mov
cli
mov
dec
fisttp
sbb
cmpxchg
mov
es
shl
push
out
neg
add
out
retf
aaa
cmp
js
sbb
popf
mov
or
retf
data16
pop
sub
lea
mov
jg
ret
(bad)
mov
lock
mov
pop
adc
lods
sub
aas
dec
imul
lods
xchg
outs
push
and
pop
out
call
lods
pop
mov
cmps
imul
pop
das
push
inc
sub
into
aaa
mov
fstp
sti
xor
into
mov
jno
nop
inc
sbb
mov
cmps
stos
sbb
test
sub
call
cmp
lods
inc
pop
popf
push
cmp
(bad)
push
cmp
pop
rol
and
inc
jecxz
mov
mov
into
lods
sbb
lods
ja
push
cs
repz
frstor
and
inc
pop
mov
movs
mov
pop
popa
push
xor
inc
loop
cmp
nop
adc
out
fwait
loopne
inc
pop
dec
xchg
pushf
cmp
out
mov
xor
sbb
clc
jle
xchg
push
cmps
push
fisubr
inc
in
and
dec
ins
into
out
or
mov
inc
add
dec
adc
push
imul
sahf
movs
into
dec
sub
pop
xor
cmp
cmp
call
push
inc
scas
test
xchg
out
jae
ja
or
shr
into
rcr
sbb
and
scas
popa
fcom
scas
and
into
repz
paddq
hlt
sub
or
jae
aad
scas
dec
(bad)
or
into
cli
cmp
neg
popf
cmp
dec
scas
int3
mov
(bad)
pop
fdiv
pop
dec
pop
repz
gs
mov
fiadd
and
and
inc
stos
scas
mov
retf
ficom
in
popf
gs
aas
xor
sbb
fcmovnbe
repnz
xchg
jns
cmp
ret
inc
push
into
cmc
int
push
clc
retf
inc
(bad)
scas
cwde
movs
(bad)
xchg
push
addr16
gs
int3
mov
push
mov
push
aaa
into
repz
in
pop
xlat
inc
dec
into
outs
pop
sub
in
cmp
into
inc
lods
pop
mov
and
in
push
dec
or
adc
les
push
cmc
cwde
cmp
mov
aas
sub
push
call
popa
fmul
mov
lock
inc
into
mov
xchg
into
stos
inc
push
ficom
pop
fsub
pop
xchg
mov
out
(bad)
cmp
pusha
or
dec
jns
leave
into
xchg
pop
xor
mov
test
scas
xor
mov
into
or
inc
dec
pushf
bound
xchg
and
xchg
into
test
sbb
repz
cmp
loope
es
arpl
cmp
or
stos
fucomi
popf
pop
sbb
mov
lea
cmp
and
lods
psubsb
or
out
pop
lds
cmp
dec
lods
push
(bad)
popa
into
imul
mov
pavgb
in
mov
out
in
pop
jmp
dec
dec
inc
loopne
retf
mov
inc
int3
cli
add
push
leave
call
jb
dec
test
(bad)
sar
outs
das
sub
jo
scas
mov
dec
(bad)
int3
test
push
inc
jge
lahf
jne
sub
mov
xor
dec
jmp
adc
mov
scas
inc
mov
and
in
sub
mov
mov
cmp
jl
pop
sti
push
call
cwde
cdq
or
xchg
addr16
jl
dec
fdivr
mov
dec
mov
jg
sti
(bad)
jmp
and
loope
movs
mov
out
(bad)
aas
retf
xchg
into
mov
repnz
and
ror
bound
out
int
out
outs
(bad)
push
into
call
in
jmp
cmp
into
es
adc
imul
or
scas
dec
fcom
xchg
popf
inc
cmp
out
jno
lea
dec
and
sub
fisttp
mov
mov
into
loope
repnz
mov
lods
push
ret
ja
xchg
adc
mov
xor
jp
hlt
pop
out
loop
stos
scas
scas
fdivr
outs
(bad)
xchg
test
scas
sub
dec
ins
cmp
pop
retf
mov
loop
into
mov
pop
imul
mov
in
jmp
das
retf
(bad)
sbb
cli
test
mov
adc
(bad)
out
fdivr
into
jecxz
rcr
mov
inc
dec
jge
ins
into
retf
enter
sbb
in
pop
pop
ja
sbb
push
rcl
retf
xchg
mov
jle
retf
out
into
dec
mov
outs
popf
clc
push
lds
rep
sub
or
leave
jnp
adc
push
lods
sahf
and
ret
(bad)
adc
pushf
xor
lahf
int3
jae
shr
inc
movs
adc
arpl
and
hlt
adc
aaa
inc
jmp
mov
out
lahf
sbb
push
push
rcr
into
cmps
mov
aaa
lock
out
sub
cwde
loopne
cmps
loope
lahf
inc
enter
in
lods
xchg
jecxz
dec
sbb
lea
push
push
pop
outs
sti
mov
cld
cdq
mov
inc
out
sbb
out
push
into
in
jecxz
adc
push
or
ds
aas
adc
outs
dec
gs
lods
mov
push
lods
pshufw
int3
mov
jb
test
inc
xchg
push
pop
dec
and
pop
loopne
pop
into
imul
mov
ds
push
clc
je
xor
adc
mov
mov
cmp
cli
lods
into
push
xor
xchg
mov
and
dec
out
mov
add
hlt
test
dec
jnp
xchg
je
aad
loopne
pop
into
loope
adc
push
lods
daa
or
pop
sbb
mov
fisubr
mov
push
out
(bad)
popf
or
mov
and
and
gs
int
hlt
cmc
sub
xor
dec
inc
pop
into
stos
out
aas
data16
mov
lahf
lea
out
dec
add
mov
xor
into
jbe
bound
test
jnp
lahf
stos
add
or
xlat
rcr
in
add
fsubr
(bad)
push
push
cmc
pop
into
or
test
mov
jecxz
ins
scas
inc
sbb
dec
cmp
leave
mov
retf
mov
xchg
(bad)
push
enter
or
adc
fcmovne
xor
es
out
lods
pop
les
retf
dec
cmp
int
adc
add
xor
mov
jns
mov
xor
jl
sbb
jbe
les
aas
fisttp
push
fcomp
imul
and
xchg
jo
and
push
mov
fs
add
push
xchg
into
mov
push
inc
xchg
mov
into
jle
add
xchg
cmp
aas
stos
test
adc
jl
into
xor
push
mov
mov
imul
into
dec
mov
lods
mov
in
arpl
test
(bad)
add
call
push
sub
cwde
jmp
mov
js
mov
dec
jecxz
leave
addr16
into
ret
aas
pusha
sbb
les
test
push
jne
cmp
test
mov
ja
dec
cs
mov
imul
xchg
popf
loope
sub
push
or
and
jb
js
cmps
scas
inc
into
dec
jge
pop
data16
fdiv
pop
mov
ds
out
and
or
mov
lahf
aas
xchg
push
enter
inc
mov
dec
mov
sti
imul
xchg
mov
pop
aaa
jb
test
sbb
call
xchg
into
arpl
sbb
or
into
jecxz
push
xor
pop
scas
movsx
ds
fidiv
mov
and
push
gs
cdq
sbb
into
or
pop
popf
into
or
(bad)
fbld
enter
xor
inc
call
into
xchg
push
or
push
xor
test
adc
(bad)
mov
lods
pop
add
cmp
sbb
sub
add
pop
mov
sub
jmp
jmp
jge
mov
ret
dec
aaa
jne
mov
push
ins
inc
jg
push
push
pop
mov
dec
lock
sub
pop
push
jbe
inc
iret
push
sbb
xchg
je
cmps
pop
jle
push
(bad)
adc
into
dec
pop
cmp
movs
mov
scas
cmps
stos
(bad)
ds
push
scas
adc
push
xchg
sub
push
into
cmps
movs
and
push
sub
lahf
cs
mov
loope
mov
push
aaa
and
pop
mov
outs
lods
jmp
cmp
mov
rcr
(bad)
mov
cdq
push
daa
cmp
mov
das
movs
aas
lods
repz
les
cmp
push
or
jmp
mov
iret
xor
mov
pop
pushf
into
jbe
cdq
add
leave
mov
out
retf
pop
push
stos
jp
xchg
mov
outs
cmp
mov
or
cmp
dec
xor
into
xchg
sar
pop
sar
cwde
aas
pop
outs
pop
clc
fld
ret
mov
dec
dec
scas
xlat
je
fmul
dec
jo
imul
into
xchg
es
mov
cmp
int
addr16
inc
loopne
jecxz
xlat
sbb
(bad)
loope
jbe
xchg
retf
(bad)
xchg
push
mov
out
rcl
adc
in
xor
into
dec
or
repnz
pop
mov
mov
lds
into
adc
pop
xor
into
add
pop
lea
into
sub
dec
push
sbb
jp
and
jle
cmp
or
(bad)
inc
lods
mul
ja
sar
inc
and
mov
icebp
ja
push
mov
aas
add
jmp
push
mov
shr
adc
or
pop
pop
adc
ja
push
arpl
mov
data16
fild
jns
into
js
scas
ss
mov
xor
xor
xchg
retf
mov
or
scas
into
cmp
(bad)
repnz
adc
xchg
pop
test
cwde
add
sub
lods
out
popa
sbb
add
dec
sbb
pop
mov
cdq
shr
rcl
mov
into
cmps
out
popa
repnz
pop
xchg
push
mov
stos
jle
lods
ds
call
test
and
enter
mov
movs
mov
icebp
retf
out
push
into
dec
mov
or
sub
push
stos
dec
aad
xor
mov
mov
lods
out
add
or
(bad)
jmp
sahf
aad
daa
test
mov
push
push
leave
or
cld
enter
add
and
aas
cdq
into
ins
test
xor
mov
sub
or
ret
jecxz
bound
sub
ret
test
clc
into
inc
jbe
xchg
and
xor
outs
imul
retf
mov
stos
into
jo
shl
into
dec
cdq
push
mov
scas
inc
push
out
jnp
jg
retf
sbb
add
ret
popf
xchg
(bad)
pop
aas
into
xor
mov
jno
hlt
jns
fcomp
ins
mov
or
into
das
stos
gs
shl
push
pop
lods
mov
mov
out
ja
or
add
shr
inc
imul
sbb
cld
mov
cmc
add
mov
or
pop
jg
imul
and
jmp
stos
retf
scas
jae
mov
pushf
repz
ret
fisttp
out
and
test
test
mov
pop
jmp
lock
jae
mov
scas
outs
pop
sub
popa
cmps
out
jp
call
shl
push
gs
inc
xor
pop
lock
xchg
(bad)
into
(bad)
xchg
pop
shr
pop
test
push
mov
repnz
sub
lods
mov
bound
add
into
push
cld
jne
xchg
push
out
test
sbb
sahf
sub
into
gs
mov
mov
shr
popa
cld
push
mov
retf
mov
and
adc
cdq
dec
or
cmp
sub
sub
(bad)
cmp
push
xor
inc
pop
(bad)
rcr
imul
(bad)
scas
out
xchg
cmc
loopne
inc
pop
jne
out
je
sbb
or
xchg
pop
dec
cmps
shl
add
pop
stos
xchg
out
dec
mov
mov
retf
sbb
lods
or
sbb
lods
pop
and
in
into
mov
inc
nop
std
push
in
mov
dec
jecxz
mov
add
scas
pop
jmp
jns
adc
pop
das
pop
into
out
outs
mov
dec
mov
(bad)
and
or
push
stos
into
mov
xor
in
scas
cmp
inc
js
pop
lods
lea
adc
enter
in
push
outs
sbb
out
xchg
fistp
out
sub
adc
jo
dec
into
sub
sbb
aad
xchg
aaa
into
cmp
pusha
sbb
hlt
cld
test
mov
int3
scas
iret
sub
movs
cmp
out
push
pop
dec
pop
adc
ss
sub
add
rol
dec
sub
cmp
xchg
jge
dec
jbe
lds
mov
mov
pushf
mov
mov
loopne
outs
imul
cli
mov
adc
into
push
and
push
mov
into
stos
mov
scas
fcom
into
sbb
mov
les
call
in
dec
into
loop
mov
es
cli
add
ret
dec
and
nop
mov
mov
mov
push
into
jo
pop
jge
rol
pushf
jecxz
fmul
inc
adc
ja
jle
into
imul
xor
pop
and
sbb
into
cwde
xor
into
in
jae
aaa
jp
out
into
cs
popf
push
or
fidiv
cmp
push
jae
mov
inc
call
add
jge
pop
lahf
mov
lods
inc
scas
(bad)
xor
into
jl
sbb
xchg
fst
add
jno
dec
into
std
pop
mov
xlat
mov
mov
int
xor
movs
xor
dec
inc
std
test
add
xchg
adc
and
xlat
xchg
pop
pusha
into
cmp
sub
leave
into
jbe
push
mov
lahf
mov
and
add
xchg
aaa
jmp
mov
xchg
test
and
mov
pushf
sub
sar
mov
aad
ja
std
into
xor
cmp
dec
lods
jle
mov
mov
es
mov
hlt
clc
bnd
into
cmp
loope
dec
pop
stos
and
daa
outs
out
mov
scas
jne
cld
loopne
push
mov
retf
int3
lods
loop
adc
cmp
test
(bad)
gs
movs
imul
in
jne
in
repnz
stos
into
imul
sub
leave
gs
mov
mov
popf
into
jbe
loop
jecxz
ja
into
in
push
push
hlt
xchg
sbb
jmp
aam
movs
ja
test
cmp
mov
(bad)
dec
and
les
xor
stos
and
or
retf
movs
sbb
dec
rcl
push
ror
sbb
into
mov
in
popa
test
sub
mov
lods
and
pop
dec
in
pop
into
clc
sbb
pop
cdq
stos
jns
pop
jecxz
lods
xchg
sysret
arpl
in
into
out
mov
(bad)
sbb
xchg
mov
lahf
rcr
into
mov
jb
jae
into
push
pop
lahf
aas
icebp
hlt
je
arpl
pop
add
inc
bswap
fiadd
retf
fcomp
mov
lahf
retf
popa
(bad)
repnz
mov
int
dec
xor
mov
shr
out
or
aad
jl
daa
mov
jp
(bad)
into
scas
arpl
pop
mov
into
pop
mov
int3
sbb
or
cwde
in
rcl
xlat
int
sub
int
jle
cmp
shr
daa
lock
aam
xchg
loopne
dec
out
repnz
retf
shr
xor
push
xor
adc
scas
test
pop
outs
jg
es
sub
ss
inc
into
pop
dec
cmps
sbb
mov
add
jg
outs
mov
ror
bswap
stc
in
das
pushf
test
or
dec
or
sbb
pushf
inc
movs
sbb
(bad)
cwde
sar
ret
cmp
ror
add
js
pop
mov
repnz
adc
cdq
cmp
lods
and
test
adc
(bad)
xchg
into
cmp
adc
sub
into
jecxz
adc
je
pop
jae
mov
into
inc
adc
in
lods
or
ror
xchg
cmp
pop
mov
adc
xchg
mov
into
out
sbb
or
movs
adc
or
sahf
mov
dec
in
cmps
mov
into
and
lods
jle
call
aam
daa
or
dec
mov
and
std
add
into
stc
outs
hlt
jle
or
push
mov
sbb
cld
faddp
pop
fcom
dec
pop
mov
into
xlat
nop
aaa
adc
call
sub
pop
inc
arpl
(bad)
inc
pop
and
jmp
sbb
(bad)
call
repz
xor
xchg
jnp
jns
mov
into
sub
scas
into
pop
mov
jge
sbb
jns
outs
loope
pop
inc
pop
leave
into
mov
and
pop
xchg
cmp
add
xchg
jo
outs
inc
and
bound
pushf
pop
mov
and
cmps
fs
aas
mov
ds
lods
xor
push
into
loope
jns
adc
push
in
mov
lahf
pop
call
scas
and
pop
sbb
data16
mov
sub
jle
enter
stos
scas
sbb
pop
repnz
fs
and
sbb
or
into
push
mov
dec
cwde
gs
mov
dec
out
xchg
sar
(bad)
ficom
mov
imul
movs
jmp
bound
data16
xchg
out
dec
jnp
imul
aas
jb
out
retf
into
sbb
xchg
cmp
adc
push
into
pop
rsqrtps
(bad)
aad
mov
inc
sbb
pop
ret
lods
out
pop
push
(bad)
scas
lods
sbb
je
test
stc
into
and
mov
into
scas
ss
jo
es
cmps
into
dec
inc
xchg
cmp
cdq
mov
popf
xor
lods
push
lock
xor
bswap
fwait
sbb
and
mov
(bad)
cmc
movs
xchg
inc
push
stos
popa
loop
and
mov
xor
cmp
stos
into
add
and
cmc
pmulhuw
into
and
sub
mov
sbb
push
hlt
push
sub
jg
sub
stos
popf
stc
push
dec
into
sub
outs
mov
into
cmps
cmovb
pop
sub
aas
(bad)
push
and
xlat
bswap
pop
fdivr
cmp
test
cmp
aas
sub
jg
xchg
movs
sub
push
gs
push
mov
pop
into
and
rcl
cmp
cdq
btc
lods
movs
push
icebp
sbb
cwde
jg
std
adc
or
es
dec
icebp
pop
aas
into
lock
jae
hlt
add
into
pop
loopne
pop
js
inc
inc
scas
or
pop
pushf
rol
loop
mov
pusha
ins
fistp
inc
(bad)
mov
test
sbb
or
cmp
xchg
mov
xchg
sub
into
mov
push
inc
imul
lea
cmp
dec
into
jnp
and
jp
rcl
shr
mov
sbb
popf
dec
cdq
test
je
into
inc
jbe
adc
sbb
pop
jmp
movs
leave
push
cmovns
repz
mov
bound
scas
jbe
leave
aas
out
mov
popf
lahf
xchg
hlt
movs
aam
fild
xchg
shl
scas
clc
push
pop
sar
jecxz
sbb
pop
xchg
fisttp
leave
mov
(bad)
into
addr16
xchg
sbb
sub
sbb
dec
xlat
lea
movs
sbb
jbe
into
xor
repz
test
into
pop
fisubr
into
mov
movs
xchg
or
pop
cmp
push
push
xchg
and
into
ret
hlt
push
adc
lahf
jmpw
scas
adc
mov
out
cmp
jns
imul
fbld
cld
lods
(bad)
repnz
in
inc
into
add
out
xchg
rcr
pop
push
ins
pop
inc
into
or
mov
lods
test
cwde
add
imul
jl
inc
or
xor
mov
inc
sbb
xchg
mov
sbb
into
ja
(bad)
lods
repz
pop
sbb
push
cmovg
inc
jb
jl
sub
shr
inc
clc
add
arpl
sbb
out
cdq
inc
mov
jae
test
mov
xchg
jg
(bad)
fmul
mov
enter
inc
mov
push
aad
add
movs
mov
test
jge
fnstenv
sti
into
lock
(bad)
not
in
aaa
into
mov
lods
cmc
xchg
jb
mov
mov
imul
cmp
sbb
mov
pop
mov
mov
outs
mov
cli
mov
mov
out
xchg
call
in
jecxz
into
xchg
mov
sbb
ret
stos
push
rcl
ficom
adc
cdq
idiv
ja
cwde
sbb
xor
cmp
xor
mov
cmp
mov
inc
cli
xchg
lock
fcomp
loope
xchg
jb
xlat
cmps
test
aad
sub
cli
push
sahf
into
mov
jg
sub
xchg
inc
mov
xchg
sbb
into
mov
aas
jbe
scas
retf
das
jmp
ret
scas
fdivr
xchg
imul
(bad)
fcom
mov
into
jge
pop
jecxz
push
pop
mov
xchg
clc
dec
adc
ja
fsubr
inc
cmp
in
into
retf
dec
les
jmp
jg
dec
into
call
mov
inc
test
sbb
jmp
and
mov
stos
add
enter
and
into
mov
and
outs
push
sbb
in
fsubr
lods
into
loope
cmps
inc
or
icebp
in
std
call
inc
push
test
jp
imul
into
inc
scas
and
into
sti
mov
popa
ins
into
cmps
jns
cmovl
(bad)
mov
lds
into
ficom
ds
pop
jecxz
push
rcl
nop
dec
pop
xchg
mov
mov
lahf
into
xor
test
mov
pop
dec
mov
fidivr
pushf
into
div
stos
fmul
add
scas
nop
mov
mov
and
loop
(bad)
into
dec
out
inc
cmps
dec
in
xchg
fdivr
pop
ret
into
sbb
push
push
xor
push
mov
push
pop
into
retf
repz
imul
test
pop
outs
pusha
test
ret
vmptrst
pushf
aaa
or
pop
into
xchg
or
jecxz
sbb
sbb
inc
dec
pop
and
scas
into
inc
add
or
jns
into
jnp
stos
xor
mov
ss
jl
mov
pop
mov
jp
sub
jbe
lock
es
out
pop
pop
das
mov
hlt
inc
pop
(bad)
into
sti
inc
or
pop
sbb
movs
pop
mov
cmc
enter
icebp
(bad)
sub
test
pop
cwde
(bad)
lods
sbb
(bad)
push
rcr
cmp
movs
daa
cmp
sub
jb
jmp
das
into
lods
in
push
push
xchg
mov
mov
fwait
into
cs
in
jmp
(bad)
scas
fs
int3
into
arpl
jp
or
cmp
ins
lds
clc
fs
in
jmp
push
pushf
sub
into
jp
xchg
movs
xchg
ja
cmp
or
test
and
mov
sub
add
pop
jns
pop
and
movs
shl
ret
(bad)
aaa
push
into
xchg
pop
or
repnz
xlat
aad
dec
sub
mov
cs
xor
dec
into
cmp
inc
mov
ror
into
jb
dec
ins
add
ja
into
bt
push
call
stos
dec
mov
int3
inc
adc
mov
add
enter
into
rol
scas
dec
xor
test
ret
cmc
hlt
bound
into
add
sub
mov
sub
xchg
(bad)
mov
push
scas
movq
pop
(bad)
stc
mov
nop
retf
mov
scas
mov
sbb
enter
mov
mov
xlat
imul
sub
lds
loopne
das
adc
into
les
jl
pushf
imul
jne
and
and
sub
call
sub
enter
enterw
pop
maxps
scas
int
xchg
cmp
(bad)
mov
sub
push
out
das
lods
clc
xlat
mov
aam
jmp
lea
in
in
outs
dec
js
repz
add
rcl
mov
sar
test
sbb
(bad)
sbb
test
mov
bound
std
bnd
lods
(bad)
(bad)
mov
arpl
mov
xchg
dec
xor
call
arpl
inc
in
jecxz
xchg
or
out
pop
mov
into
mov
push
mov
and
mov
inc
sub
mov
movs
ja
into
cmp
jle
or
stos
xlat
mov
test
cmp
push
jge
mov
cld
push
lods
jmp
imul
mov
je
inc
into
mov
stos
xchg
shl
retf
daa
mov
xor
push
lds
adc
daa
lods
in
jns
mov
pandn
fs
jbe
sbb
popa
into
imul
cmps
add
xchg
and
mov
sahf
inc
lds
jnp
cmp
into
cmp
add
push
push
fld
cmp
lahf
ins
mov
xchg
push
cmp
push
inc
mov
dec
jl
sbb
pop
pop
aad
xchg
sahf
mov
lods
into
je
inc
movs
ret
pushf
sbb
jmp
jb
aaa
dec
cs
call
ds
into
call
cmp
lods
pusha
push
or
mov
fsubr
movs
into
push
and
sbb
jge
into
scas
pop
outs
cmps
mov
frstor
cmp
xchg
je
xor
push
add
inc
and
xchg
jmp
jge
scas
push
lods
xor
dec
or
(bad)
dec
push
pop
xchg
mov
sbb
movs
mov
push
jmp
push
sbb
test
add
pop
pop
mov
ds
add
stc
icebp
push
sub
repnz
lahf
loopne
inc
in
ror
xchg
jmp
fadd
adc
ror
stos
mov
mov
or
aam
adc
loope
pop
or
lock
sahf
into
inc
mov
(bad)
mov
js
fisttp
fldenv
inc
dec
add
pusha
cmp
leave
sbb
loop
mov
into
cmps
daa
or
stos
cmp
mov
lock
into
pop
ret
cmp
int3
call
xchg
imul
push
sbb
pop
out
mov
mov
xchg
into
aas
push
xchg
call
dec
xlat
mov
xor
mov
cwde
jns
pop
aas
into
mov
in
ret
arpl
test
call
mov
mov
je
push
fbstp
sub
(bad)
cmps
fidivr
lock
xchg
mov
inc
xlat
dec
std
mov
mov
sbb
into
in
mov
push
stos
xchg
mov
dec
sub
popf
inc
idiv
data16
mov
pop
mov
ins
mov
pop
xor
test
aad
lods
and
test
sub
dec
daa
test
mov
mul
into
xor
add
xchg
aad
test
lods
pop
(bad)
pop
out
xchg
jl
jmp
dec
xor
pop
test
push
xchg
ss
sub
(bad)
mov
mov
dec
arpl
dec
xchg
fprem
movs
fs
fdivr
sbb
jae
test
test
inc
lods
into
cmp
xchg
push
mov
add
xor
leave
loop
(bad)
fsubr
adc
lea
push
jl
or
xlat
or
sbb
mov
lods
mov
push
and
test
(bad)
into
jbe
pop
jl
clc
cwde
test
scas
mov
mov
stos
dec
xor
add
adc
inc
into
dec
fsubr
repnz
jmp
xor
sbb
mov
into
push
cs
adc
mov
in
shr
pop
js
push
into
push
dec
out
mov
shr
sahf
leave
inc
xchg
mov
into
out
inc
loop
mov
out
into
jb
cs
ror
out
mov
aas
cmps
call
mov
movs
push
hlt
imul
mov
into
jb
fidivr
leave
test
sub
outs
int
pop
out
push
pusha
xchg
ja
std
icebp
dec
xor
cld
xchg
xchg
stos
or
cmp
addr16
mov
jno
arpl
push
into
(bad)
jle
icebp
mov
pop
adc
xchg
jnp
(bad)
into
mov
ret
and
push
into
dec
sti
mov
and
inc
add
xchg
jecxz
test
fcmove
fstp
sahf
retf
inc
out
movs
mov
psubusb
test
into
xor
je
push
call
push
out
into
and
cmp
into
(bad)
addr16
aaa
or
test
cdq
xor
pop
mov
jmp
icebp
pop
sahf
int
push
push
loope
(bad)
cwde
into
push
jns
and
and
and
xchg
out
dec
test
jb
jno
adc
lea
cmps
dec
cmp
add
lods
pop
add
arpl
into
enter
test
cmp
dec
aas
aad
xchg
lods
mov
lea
into
(bad)
adc
adc
imul
dec
into
jnp
es
sbb
mov
jmp
jae
adc
rcr
cli
cdq
push
out
jp
add
into
jne
aam
ja
loope
pop
inc
mov
call
jae
scas
cmp
adc
lods
pop
in
outs
je
ds
scas
out
stos
lahf
cmp
or
pop
push
mov
fist
mov
ins
stos
scas
xchg
cmp
pop
mov
imul
into
mov
xchg
push
inc
into
pop
addr16
lock
cli
mov
ret
into
aaa
retf
push
call
mov
(bad)
stos
push
cvtpi2ps
mov
dec
adc
ror
pop
mov
inc
mov
cmp
or
mov
into
(bad)
aad
mov
or
ror
repnz
or
xor
movs
dec
js
xchg
dec
and
or
mov
ja
and
(bad)
into
dec
in
lods
out
aam
push
mov
popf
inc
mov
test
jno
das
sub
sbb
jae
test
push
stos
pop
pop
ds
nop
mov
add
mov
test
pop
ret
and
clc
jmp
push
and
loopne
cld
into
leave
ds
repnz
mov
pushf
into
xor
aam
jne
rep
mov
inc
ret
aas
cmp
(bad)
(bad)
test
jmp
addr16
lods
add
mov
scas
mov
aaa
mov
mov
jg
(bad)
sbb
stos
pop
cmps
into
gs
fcomp
mov
movs
mov
xchg
add
fwait
sbb
leave
dec
scas
mov
das
cdq
xchg
stc
pop
scas
push
mov
sbb
dec
scas
jno
into
sbb
repz
mov
inc
call
pop
mov
xchg
into
stos
stos
mov
mov
icebp
data16
mov
xchg
dec
aam
cmp
or
jmp
cmc
sub
mov
mov
pushf
xchg
scas
ss
into
ds
cmp
in
daa
aaa
xchg
pop
aad
mov
out
cmp
pop
inc
scas
into
movs
cld
test
and
push
lds
push
div
mov
inc
movs
or
scas
stos
jmp
push
stc
add
and
and
into
rcl
xchg
fld
mov
push
jbe
sbb
xchg
inc
inc
dec
jmp
into
push
out
jmp
mov
movs
(bad)
sub
ret
xor
inc
add
jae
xlat
into
jg
xchg
push
js
ds
repz
mov
lods
outs
jle
sahf
mov
inc
imul
sbb
scas
adc
dec
into
pusha
outs
(bad)
xor
mul
ret
push
into
xor
jmp
and
repnz
into
push
xor
test
retf
sub
add
out
std
fs
popa
(bad)
fsub
adc
pop
push
movs
push
fcom
repz
dec
dec
and
into
and
pop
push
jae
sub
dec
xadd
cld
mov
jns
mov
sub
repnz
mov
out
imul
mov
into
mov
xchg
into
(bad)
mov
mov
into
enter
adc
sub
cmp
div
jb
mov
cdq
into
adc
clc
mov
retf
call
scas
mov
repnz
into
sub
ins
into
add
(bad)
into
pop
mov
sub
ja
or
arpl
lods
jb
nop
sub
jno
cmp
fcom
repz
in
hlt
(bad)
pop
in
xchg
sbb
in
sbb
into
push
stc
stos
aaa
sar
pushf
add
out
dec
into
push
and
inc
jge
xor
xor
mov
js
adc
aas
lods
into
or
pop
inc
adc
sbb
push
mov
mov
scas
xchg
arpl
scas
aas
mov
cmp
mov
fcmovnb
into
mov
or
mov
mov
fmul
jp
xchg
cmps
xlat
int
jb
or
push
into
xchg
mov
jecxz
sahf
in
movs
inc
xor
jmp
(bad)
add
into
hlt
imul
push
movs
stos
pop
xchg
retf
pop
sar
mov
push
pop
jecxz
rcr
lahf
lock
or
pusha
into
push
mov
stos
imul
shl
pop
dec
repnz
sub
movs
aad
mov
inc
std
into
mov
dec
pshufw
xor
and
cmc
jne
in
cmp
mov
jae
or
es
pop
mov
sbb
lods
add
movs
(bad)
inc
and
and
into
push
clc
fmul
into
stc
scas
sbb
loop
test
icebp
sbb
pop
cmp
mov
mov
sub
dec
sub
pusha
mov
and
rol
sub
add
mov
cmps
xchg
into
loop
add
sar
mov
lods
(bad)
clts
xchg
dec
pop
leave
pop
push
les
jns
sbb
loope
pushf
shl
and
call
fsub
mov
je
outs
into
adc
mov
rol
and
dec
setge
or
mov
push
sub
sar
ret
call
jo
test
sub
retf
(bad)
sub
scas
mov
(bad)
out
ror
add
xlat
dec
fstp
cmp
push
push
ret
clc
xchg
add
into
add
mov
mov
into
adc
jle
fstp
push
and
pop
and
ja
into
loop
pusha
rcl
xlat
or
(bad)
cmps
mov
into
cmp
nop
fimul
inc
arpl
sti
dec
lods
jle
(bad)
repz
aaa
fdiv
mov
jns
test
cmps
mov
ret
or
in
add
inc
(bad)
mov
mov
xchg
in
jb
(bad)
std
dec
and
rcl
shl
mov
dec
dec
cmps
das
jle
(bad)
nop
stos
push
out
adc
mov
fstp
lods
out
fldl2t
nop
cmp
mov
pusha
dec
inc
push
in
jbe
fst
jmp
sub
inc
add
xlat
mov
nop
shr
out
ins
imul
push
add
push
push
mov
mov
dec
cmp
in
mov
ds
ret
sbb
das
test
xlat
out
push
lods
cwde
fild
mov
xor
xchg
mov
jg
stos
movs
fs
push
ins
push
pusha
fsub
mov
adc
adc
mov
lahf
popf
push
repnz
shr
sub
inc
push
fsub
mov
stos
(bad)
out
shr
fxch
cmc
xchg
add
aad
mov
sahf
mov
shl
pop
push
ins
add
loope
(bad)
loopne
sbb
xchg
sahf
mov
test
pop
jno
lock
push
xchg
pop
mov
mov
push
sbb
out
add
fsubr
rol
(bad)
sar
push
adc
into
shr
adc
fstp
into
(bad)
je
aam
cs
mov
jo
in
outs
shr
es
(bad)
jmp
jnp
mov
sub
movs
adc
jo
sbb
shl
test
push
mov
inc
or
call
cli
push
ror
xchg
int3
pop
mov
inc
xor
pop
ret
addr16
fiadd
mov
adc
lods
ror
(bad)
in
inc
lods
jg
into
sbb
push
pop
inc
mov
movs
mov
rep
test
mov
mov
xchg
nop
pop
xor
sub
xchg
in
or
mov
not
dec
mov
xchg
imul
jmp
je
sbb
into
inc
mov
and
fsubr
into
hlt
jmp
dec
int
pusha
and
sub
mov
shl
xchg
push
mov
call
push
cli
js
fidivr
and
adc
fcomp
mov
gs
ja
push
pusha
into
jmp
mov
jo
jmp
lds
aam
scas
xchg
add
lods
push
sbb
(bad)
in
pop
fmul
lods
sub
push
xor
sub
jg
sub
jmp
jne
jle
push
aas
jmp
stc
jae
mov
sub
ja
loop
xchg
add
mov
call
mov
scas
int
mov
into
sub
cmp
adc
xor
and
mov
into
sbb
js
and
ins
aad
jp
xor
repz
or
xchg
sbb
into
mov
cdq
add
into
mov
int
pop
ins
mov
mov
in
sbb
jmp
sub
pop
jno
sub
pop
xchg
jmp
out
xor
sbb
arpl
cmp
popa
shl
adc
inc
jmp
into
ror
(bad)
push
shl
fldenv
or
add
shl
mov
out
mov
hlt
mov
adc
pop
cmc
mov
cmps
add
xchg
stos
into
pop
fcomp
sub
pushf
addr16
mov
pop
out
adc
mov
mov
frstor
push
ins
mov
dec
je
(bad)
hlt
stc
lods
shr
add
push
(bad)
ficomp
xor
adc
mov
into
jno
add
cli
into
fwait
test
fs
stc
(bad)
into
sub
mov
inc
dec
daa
xchg
and
inc
inc
xchg
imul
dec
push
mov
xor
icebp
add
dec
and
fistp
mov
std
in
mov
div
into
mov
dec
cmp
leave
sub
into
jns
out
dec
jne
xchg
into
sub
(bad)
hlt
jp
movs
add
pop
mov
sub
fnstcw
(bad)
outs
pop
into
pop
jno
and
xchg
add
into
push
int
jne
xor
jo
add
or
sub
jle
and
enter
loop
fsub
je
mov
and
rol
push
mov
mov
nop
dec
and
cli
out
xor
and
into
add
sub
lock
test
adc
jne
aas
frstor
jmp
sti
inc
fldenv
xchg
js
lods
jmp
add
shl
into
int3
jo
jne
mov
mov
das
data16
sbb
xchg
jo
into
mov
int
arpl
jae
in
xchg
test
nop
mov
rcl
ror
dec
xor
and
push
dec
add
inc
xchg
and
sbb
sub
cmp
fisub
and
push
pop
sbb
xor
or
(bad)
(bad)
and
sbb
push
js
into
sbb
stc
into
sbb
(bad)
push
nop
test
xor
fnstenv
mov
lods
cmp
xor
mov
sbb
int3
and
jecxz
fucom
fldcw
mov
mov
sahf
cmp
add
xor
pop
xor
xchg
pminsw
jmp
je
jmp
clc
call
inc
aas
pop
cmp
jno
and
inc
test
sbb
sbb
outs
fadd
into
push
adc
adc
into
mov
leave
mov
dec
dec
bswap
ficom
push
add
cwde
add
xchg
pop
aaa
into
out
pop
cmp
int3
mov
into
jnp
ins
mov
into
xor
fs
dec
mov
or
cmp
xchg
lock
and
js
pop
popa
push
xor
mov
mov
(bad)
into
sbb
push
js
sbb
xchg
push
add
xor
mov
xchg
in
cmp
jne
js
push
loope
imul
inc
(bad)
nop
int
rol
call
sub
mov
out
icebp
cmps
psrlq
test
cdq
push
mov
dec
add
add
nop
fdiv
sahf
and
orps
xor
stos
or
bound
outs
cs
nop
sub
xor
rcl
mov
popf
mov
push
push
jno
adc
int3
jae
mov
jmp
or
mov
outs
cld
or
stos
adc
mov
push
dec
sbb
mov
(bad)
xchg
fisubr
stos
mov
in
jne
xchg
test
lds
mov
aam
out
fisub
push
sub
outs
cmp
adc
jb
ins
sub
pop
pop
jmp
dec
clc
add
mov
outs
adc
rcl
or
dec
loope
int3
mov
jg
cli
push
outs
or
and
sub
dec
repz
pusha
fmul
les
push
inc
movs
mov
imul
je
adc
jmp
push
imul
(bad)
test
sar
or
int
sbb
mov
(bad)
xor
inc
scas
mov
inc
mov
loope
es
inc
fnstenv
mov
into
leave
hlt
rcl
push
ss
inc
mov
cmp
push
add
movs
mov
jmp
wrmsr
call
fcmovb
into
int
jnp
cmp
jmp
cmp
out
and
jge
shr
or
pop
xchg
adc
fcmovb
shl
and
movs
dec
neg
mov
push
out
lds
jl
xor
scas
xor
pop
adc
into
fidiv
sbb
into
or
bound
scas
and
pop
out
ret
mov
xchg
es
into
pop
aas
push
inc
inc
push
xor
(bad)
int
and
dec
add
jae
adc
das
sub
pop
int3
xchg
xchg
jl
adc
call
sahf
scas
fidivr
jnp
lods
rcr
push
push
or
arpl
adc
jg
pop
leave
stc
sub
lods
add
popf
icebp
repnz
and
not
dec
pusha
adc
ins
lods
cmc
cmp
sti
xchg
mov
ror
je
or
hlt
inc
and
out
repz
add
fsubr
lods
into
lahf
std
daa
add
mov
in
jb
out
sbb
mov
sar
add
or
out
into
mov
dec
(bad)
push
in
lock
into
jns
popf
mov
repnz
mov
outs
mov
cdq
pop
pop
sbb
dec
dec
(bad)
loopne
ds
fadd
and
sahf
xor
sar
and
and
push
dec
stos
popa
add
inc
lock
loope
pop
scas
push
xor
push
loopne
and
push
jbe
push
(bad)
sbb
pop
mov
and
int
xchg
fs
into
mov
cmc
adc
mov
les
scas
stos
fiadd
push
pop
into
sbb
addr16
into
cmp
and
push
test
mov
dec
pop
test
push
shl
mov
sbb
shl
repnz
into
xchg
adc
icebp
frstor
into
fimul
call
cmp
pop
mov
or
int3
rcl
or
into
call
gs
xor
cmp
mov
or
mov
sub
sub
mov
xchg
imul
push
popf
dec
cmp
pop
cmp
ror
mov
add
push
mov
stos
inc
xor
mov
sbb
mov
push
jb
pop
add
and
aas
mov
dec
jae
push
pushf
pop
jmp
test
lahf
cmp
pop
jecxz
retf
ret
ins
mov
cs
test
addr16
xchg
ss
dec
dec
imul
out
sub
(bad)
fstp
(bad)
nop
fsubp
pop
into
cli
pop
repnz
jmp
into
jge
add
mov
ds
add
into
vmaxss
call
ror
aad
test
jmp
mov
into
or
pop
inc
test
gs
sub
xchg
jnp
xor
fwait
jge
cmp
adc
pop
dec
jo
fcom
rol
in
sub
pop
ret
push
mov
or
add
lds
sub
or
dec
js
sub
in
(bad)
ja
inc
int3
inc
shr
sub
sbb
pusha
into
inc
xchg
push
ret
dec
cld
fwait
loope
popa
xchg
movs
xchg
into
jl
(bad)
aam
les
jecxz
ret
pop
xchg
shr
cli
pop
fs
inc
xor
test
or
(bad)
es
xor
fmul
cld
rol
and
(bad)
add
mov
cmps
push
pop
lods
shr
sbb
dec
sub
retf
and
xor
mov
cmp
and
cdq
shl
or
call
inc
cmp
adc
enter
retf
cmp
mov
ffree
jmp
xchg
(bad)
(bad)
jo
int
mov
pop
mov
aas
test
add
into
xchg
cwde
xchg
cli
push
popa
into
xchg
push
cmp
sahf
into
or
xor
jge
jo
sub
call
pop
pop
into
cmp
push
pop
push
push
mov
jmp
mov
xor
pop
(bad)
in
sbb
std
jae
and
mov
sub
inc
xchg
mov
xor
stos
(bad)
xchg
xlat
jmp
(bad)
sysexit
xchg
call
inc
cmp
into
dec
adc
jne
push
sbb
inc
hlt
cmps
imul
lock
jne
cdq
mov
xor
pusha
in
mov
sub
shl
mov
xchg
outs
packssdw
lock
nop
test
retf
fbld
out
test
fstp
sub
pop
pushf
mov
pop
pop
movs
test
out
enter
enter
jp
mov
mov
push
jl
clc
sbb
pop
ret
mov
into
pop
sti
shl
pop
shr
push
into
in
fdiv
jne
jbe
jmp
jmp
fisttp
fsubr
pop
shl
repnz
retf
push
retf
mov
inc
mov
scas
inc
out
pop
xor
push
push
jno
add
push
mov
sbb
sub
and
lahf
fcom
into
xlat
xchg
je
idiv
jge
xchg
sbb
dec
dec
out
inc
sub
xor
div
xor
or
ficomp
xor
cmp
into
inc
js
imul
or
in
ret
data16
push
fld
xlat
inc
mov
sub
sbb
pop
jne
mov
into
jge
dec
xor
cmp
pop
adc
mov
mov
leave
push
xor
popa
mov
pop
dec
adc
out
adc
adc
ror
xchg
add
cmp
dec
dec
rcr
push
jo
ret
popf
les
mov
dec
es
inc
jne
pop
jmp
loopne
test
inc
push
fucomi
sbb
pop
pop
push
adc
inc
jle
shl
and
into
(bad)
mov
mov
pop
adc
mov
mov
mov
xor
into
test
adc
sub
mov
push
shl
push
dec
and
xor
(bad)
xchg
push
push
sub
outs
jbe
sbb
into
rol
inc
ficom
cmps
cmp
pop
into
(bad)
jae
mov
push
mov
lods
into
je
mov
push
dec
sub
mov
cli
mov
mov
sub
dec
outs
fwait
pop
ins
leave
lods
imul
adc
mov
stos
int
sbb
nop
sub
mov
bound
xor
xor
or
and
hlt
xor
cwde
cmp
jne
jmp
icebp
mov
sbb
mov
das
aaa
ror
push
into
pop
adc
into
mov
xchg
jbe
or
mov
leave
sti
jmp
mov
pusha
popa
dec
sbb
xchg
push
inc
es
mov
dec
nop
sub
into
sub
jge
push
add
ja
stos
into
(bad)
fmul
jp
into
lods
js
sub
jmp
gs
out
push
jnp
aas
das
retf
add
call
imul
xor
dec
sub
inc
push
pop
dec
lods
aad
in
mov
dec
in
mov
xor
jecxz
pop
sbb
jmp
sub
fnsave
ror
mov
push
sub
scas
jmp
xor
xchg
xchg
jl
jne
sbb
(bad)
jg
pop
or
inc
adc
sbb
(bad)
stos
jecxz
pop
hlt
jmp
ss
dec
sub
jg
push
mov
jmp
or
dec
aad
mov
mov
or
xchg
test
pop
mov
adc
inc
and
test
dec
or
xor
out
mov
data16
xchg
mov
stc
into
sbb
or
into
cmp
cmp
adc
mov
push
(bad)
push
or
inc
in
adc
push
mov
and
into
mov
jb
fst
pop
ret
pop
inc
into
cmp
or
ror
into
pop
add
jno
fsub
push
push
inc
cmp
sub
pop
(bad)
sbb
into
inc
cmp
(bad)
cmc
pop
arpl
cdq
(bad)
in
push
pop
cmps
int
scas
xor
dec
sbb
scas
push
mov
loopne
cmps
into
mov
xchg
push
inc
into
sbb
test
xor
(bad)
sahf
and
inc
popa
movs
xor
out
pop
pop
icebp
(bad)
and
jbe
add
or
into
mov
into
lea
mov
rep
jne
mov
mov
xchg
push
fs
popa
cwde
cmp
repz
nop
cmc
popa
and
aam
jge
outs
add
test
fisubr
adc
out
pusha
sub
inc
repnz
into
push
retf
out
xchg
les
call
pop
mov
lock
xor
(bad)
and
xor
je
add
and
icebp
add
inc
mov
dec
dec
nop
sub
add
cld
pushf
cmovge
into
jge
icebp
les
pusha
or
push
inc
dec
into
cmp
adc
sbb
push
cmp
pop
in
pop
sbb
mov
test
in
pop
or
mov
stos
dec
jmp
fwait
(bad)
cmp
gs
cmp
dec
xor
(bad)
dec
shl
mov
xchg
repz
ret
stos
mov
mov
fadd
into
cmovo
jecxz
xor
sbb
in
je
jns
xchg
retf
add
daa
ror
dec
sar
xchg
mov
das
and
jns
test
ins
xor
sbb
mov
cmc
rcr
stos
mov
pop
(bad)
mov
fcom
into
jge
ins
std
and
push
jo
xor
mov
inc
int
mov
rcl
out
(bad)
cmc
or
fs
push
es
mov
into
xchg
paddsb
arpl
(bad)
into
fwait
pop
push
xor
into
imul
xchg
lock
pop
cmp
mov
shl
call
mov
jmp
shl
and
sbb
int
sbb
mov
frstor
lahf
mov
jo
mov
dec
jg
jno
mov
mov
mov
in
xor
scas
loope
lds
xor
dec
jmpw
sub
sbb
jae
movs
outs
inc
sbb
into
jl
or
into
stc
idiv
into
outs
mov
pop
mov
ret
into
jecxz
hlt
mov
add
mov
sbb
loope
and
inc
test
mov
fidivr
dec
stos
jae
mov
jbe
cs
adc
int3
icebp
ficom
or
ficomp
mov
push
mov
in
lods
lea
lods
push
sub
neg
cmp
sbb
stos
mov
dec
(bad)
into
imul
fiadd
xor
cs
je
(bad)
push
retf
retf
lods
push
mov
mov
push
inc
into
mov
ror
into
jae
pop
jmp
fidivr
cli
ror
push
xor
into
pop
das
rol
push
movs
and
mov
push
pop
jne
mov
dec
sbb
sbb
fmul
push
pop
clc
pushf
daa
enter
cmp
outs
idiv
mov
lds
push
mov
into
dec
pop
cmp
push
inc
xor
out
pop
and
int3
test
dec
and
mov
jnp
not
(bad)
call
into
adc
push
(bad)
fst
int3
jmp
loope
and
(bad)
into
ins
sub
les
std
jmp
or
repz
stc
xchg
loopne
sub
les
xor
into
jp
pusha
(bad)
push
dec
lods
retf
push
and
jne
mov
int3
fild
sbb
mov
aas
xor
sub
jmp
into
push
cmp
mov
aam
aas
xchg
pop
int3
push
push
(bad)
mov
into
xchg
mov
jmp
push
out
inc
xchg
mov
pop
mov
or
push
jo
test
and
mov
(bad)
hlt
movs
nop
and
mov
rol
setg
out
and
out
jnp
into
push
jno
jge
pop
fwait
not
inc
scas
int3
pusha
sub
aaa
test
and
into
shl
adc
push
fxch
call
mov
into
xor
nop
pop
add
mov
lods
cmp
out
mov
arpl
sub
push
mov
mov
stc
adc
into
mov
jbe
(bad)
test
out
xor
inc
nop
daa
repnz
mov
push
add
aas
push
push
dec
js
(bad)
add
and
or
cdq
xor
repz
and
std
int3
inc
dec
retf
or
sub
mov
fmulp
xor
push
mov
adc
and
xlat
sub
jecxz
lods
and
push
mov
add
mov
fsubrp
adc
lods
push
movs
jo
push
cwde
daa
sub
idiv
xor
mov
int
mov
or
mov
jns
and
test
dec
jmp
into
add
jl
lods
mov
sub
out
test
int
es
and
mov
(bad)
sub
mov
das
cmp
or
fucomip
fistp
inc
gs
lahf
mov
jne
scas
dec
repz
and
sbb
mov
sar
je
push
sub
dec
out
lock
(bad)
loope
and
xchg
sbb
inc
arpl
dec
movs
and
xor
int
into
fs
sti
sar
mov
sbb
aas
in
push
mov
mov
hlt
or
add
jge
arpl
lods
mov
jno
retf
mov
nop
shr
out
mov
outs
adc
inc
call
mov
(bad)
fsubr
inc
int
nop
mov
adc
test
dec
push
add
hlt
adc
shl
fidivr
int
scas
int
pop
jnp
repnz
push
into
cmp
dec
and
mov
scas
sub
fmulp
jge
hlt
adc
xor
into
rcl
cmp
nop
retf
scas
mov
into
das
mov
test
inc
jne
pop
sub
push
xchg
add
pop
adc
(bad)
das
(bad)
xor
and
aad
leave
sbb
or
mov
cs
imul
push
mov
xchg
fstp
mov
or
xchg
dec
push
or
push
mov
icebp
xor
call
xchg
fnsave
mov
push
jmp
out
sbb
(bad)
adc
mov
data16
jg
aaa
dec
push
sahf
fld
into
sbb
retf
lea
pop
mov
aam
push
sub
mov
fstp
int
test
or
aam
stc
sahf
cld
jl
push
les
inc
mov
sub
sub
xchg
and
repnz
call
lock
sub
int3
cmp
lds
sbb
pop
das
arpl
mov
ja
and
push
push
jmp
into
jmp
fsubr
add
not
add
inc
shl
fmulp
bound
inc
leave
sub
lods
jge
inc
retf
ror
(bad)
cwde
jle
mov
add
addr16
pusha
mov
nop
(bad)
jmp
mov
scas
sbb
scas
call
push
rcl
mov
test
jecxz
int3
test
xchg
fwait
cmp
push
add
jb
out
mov
xor
outs
lock
xor
es
sub
xchg
fild
push
push
dec
(bad)
or
hlt
cmp
ret
test
mov
dec
sbb
(bad)
ja
sbb
mov
push
dec
pusha
inc
xor
aaa
cmp
test
(bad)
lock
inc
inc
mov
mov
in
call
cmp
push
fmul
jo
out
into
lods
or
sub
or
into
xchg
dec
jnp
xchg
add
adc
rcr
int
mov
mov
inc
cs
push
es
out
sub
leave
(bad)
sub
pop
push
into
add
push
test
(bad)
push
sbb
into
je
cwde
in
push
mov
xlat
xchg
and
push
dec
pop
scas
fwait
mov
adc
jmp
mov
sub
jl
mov
dec
into
sbb
add
xor
fmul
addr16
sar
pop
clc
das
add
mov
xor
push
loop
sbb
push
sbb
fsub
imul
lods
repz
mov
jge
and
(bad)
mov
les
and
mov
inc
push
mov
fistp
sbb
lods
lock
das
dec
and
icebp
adc
(bad)
xor
scas
mov
call
icebp
into
ins
in
std
inc
jns
sbb
mov
xor
es
cld
pop
jle
sbb
xchg
out
jo
(bad)
xchg
(bad)
pop
or
dec
out
int
out
into
jecxz
retf
and
push
lods
mov
into
lds
nop
mov
inc
jg
add
lods
sub
inc
pop
inc
out
in
mov
jl
imul
ret
mov
cmp
pmaxub
ss
cmp
sahf
shr
or
cmp
out
retf
out
(bad)
fcom
repnz
and
push
mov
dec
push
push
xchg
push
sub
into
popa
mov
push
das
adc
sahf
test
inc
push
jl
rdtsc
dec
aaa
call
xor
mov
popa
pushf
(bad)
into
sub
aad
or
xchg
fidiv
int3
aas
pop
das
aaa
mov
into
(bad)
xor
paddw
add
and
mov
into
mov
sub
cmp
gs
sub
or
out
sbb
jle
cmp
push
scas
fidivr
adc
inc
push
inc
mov
sub
ja
or
out
stos
repz
adc
call
ss
sub
xor
jbe
ret
sub
leave
add
dec
push
(bad)
sbb
sbb
fnstenv
lods
inc
mov
xor
mov
pop
into
adc
fwait
xor
push
pop
add
mov
into
push
outs
pop
gs
neg
xor
das
cmp
fcmove
cmp
or
fidiv
push
xchg
xchg
mov
je
jne
lods
pushf
jecxz
cmp
test
cld
push
out
push
jge
dec
or
cvtdq2ps
into
add
cld
dec
cmp
es
into
rol
adc
(bad)
inc
mov
add
int3
sqrtps
jnp
or
pop
jne
dec
mov
into
mov
or
mov
sub
xchg
movs
inc
or
cmps
ins
mov
ds
add
jmp
outs
mov
mov
fnsave
xor
pushf
mov
popa
test
adc
daa
in
into
test
mov
cmc
dec
mov
mov
inc
jle
stos
and
or
mov
inc
popa
gs
shl
xor
(bad)
int
xchg
in
inc
into
mov
adc
aam
imul
push
sub
nop
mov
add
clc
xlat
pop
call
hlt
repz
mov
fadd
into
mov
movs
push
or
push
mov
inc
sbb
shl
sub
mov
rcr
mov
into
shl
out
mov
pop
push
fbld
into
call
push
adc
inc
shl
in
xor
call
pushf
arpl
xor
lods
ins
jo
int3
xor
out
jmp
mov
mov
add
mov
call
in
(bad)
test
xor
lahf
jnp
push
sub
jbe
adc
clc
push
mov
popa
es
sub
outs
and
mov
into
sbb
mov
xor
add
leave
jb
ja
adc
cs
mov
test
fwait
cmp
xchg
je
add
ins
into
inc
pusha
cmp
les
in
popf
movs
std
xchg
into
sbb
or
jecxz
mov
jno
movs
jmp
sar
call
sbb
(bad)
jg
or
ins
mov
dec
int
outs
call
test
inc
(bad)
fdivr
rol
call
or
push
in
into
mov
sub
nop
and
arpl
xchg
xchg
sub
or
in
out
(bad)
ins
nop
into
daa
add
ja
jp
add
pop
cld
mov
jb
rcr
aas
les
hlt
push
into
out
adc
shl
xor
cmp
mov
push
inc
mov
cmps
pusha
into
jge
adc
daa
pop
leave
clc
adc
call
fcmovne
cmp
mov
adc
fld
adc
into
jns
adc
into
inc
push
nop
xchg
mov
push
cmps
jo
inc
or
sub
cmp
data16
or
adc
movs
call
fld
out
into
mov
out
inc
mov
lahf
mov
sub
sbb
into
in
je
adc
loope
into
rep
dec
dec
push
cmp
into
nop
and
(bad)
jne
cmp
mov
fst
into
cmps
mov
aaa
dec
fwait
out
scas
add
xchg
mov
int
outs
mov
into
xchg
hlt
jp
jns
or
xchg
js
repnz
outs
mov
dec
fwait
repz
fldenv
into
mov
vcvtsi2ss
mov
popa
mov
imul
leave
pop
ja
popa
xchg
push
(bad)
stos
gs
stc
in
mov
outs
inc
mov
scas
and
test
jno
adc
rep
inc
mov
hlt
xlat
jmp
xchg
faddp
dec
sub
mov
xchg
sti
jl
dec
in
icebp
cdq
repz
faddp
pop
and
add
aam
test
cmc
pop
mov
jb
into
push
jo
xor
pop
or
inc
sub
fcmovne
xchg
fsubr
xor
add
(bad)
lods
or
data16
add
inc
add
xchg
(bad)
(bad)
cmp
inc
xchg
inc
call
lahf
add
adc
sub
fcmovu
into
bound
xchg
gs
das
mov
addr16
out
pop
pushf
lods
test
std
(bad)
out
dec
mov
(bad)
adc
jo
xchg
pop
(bad)
dec
aam
sub
out
lea
sub
fnsave
into
and
jg
je
dec
xchg
ret
xchg
jo
rcr
cmp
ins
pop
in
add
jno
hlt
mov
dec
mov
pop
es
adc
(bad)
jns
and
push
sbb
inc
sub
adc
push
mov
pusha
mov
pop
pslld
int
jmp
cmp
test
(bad)
in
jo
fwait
push
mov
sbb
fimul
into
(bad)
jecxz
push
retf
stos
jmp
(bad)
fnstsw
in
int
ja
pop
sub
std
loop
retf
sahf
test
push
mov
imul
xchg
test
inc
lea
pop
push
into
mov
cmc
jecxz
mov
mov
fs
das
sub
pop
inc
jne
adc
adc
sub
out
inc
xor
into
mov
mov
dec
test
xchg
jge
and
and
into
sbb
inc
fmul
enter
inc
pop
xor
mov
into
ret
clc
sbb
fwait
sub
jno
loope
mov
jmp
push
cmc
sbb
sub
xchg
fsub
popf
addr16
es
push
sub
or
les
push
or
inc
pop
movs
into
xchg
loopne
dec
cmp
into
xor
cwde
mov
shl
aam
add
imul
adc
movs
push
outs
or
bound
add
add
and
ja
into
cmp
sub
into
repnz
dec
repz
inc
jnp
push
jae
rcr
xor
data16
bound
aaa
mov
sub
scas
pop
cmp
outs
into
mov
jmp
cmp
push
mov
into
push
mov
xchg
pop
jnp
push
pop
hlt
or
push
push
or
(bad)
mov
mov
sbb
aaa
jne
popf
shr
shl
xchg
cmp
movs
sti
test
ror
dec
mov
jle
dec
push
mov
clc
fst
out
mov
out
pop
mov
into
mov
jecxz
psubsb
into
add
xor
inc
mov
imul
push
cmp
aas
data16
out
out
popa
ret
pop
fiadd
retf
adc
into
les
mov
hlt
add
into
cwde
xor
dec
push
adc
xchg
stos
shl
jne
out
jle
(bad)
mov
test
lds
loope
push
test
test
std
mov
out
mov
cwde
daa
push
outs
add
pop
inc
lods
neg
hlt
in
clc
and
pop
push
or
into
mov
xor
sahf
dec
mov
sub
dec
mov
(bad)
add
xchg
scas
mov
hlt
cmp
ja
ins
scas
shl
pop
jbe
add
(bad)
icebp
pop
into
cld
push
jg
jmp
add
into
dec
std
rcr
test
xchg
cmps
fnsave
lahf
xor
into
pop
ja
jge
dec
sbb
mov
and
popf
and
add
into
push
jns
sub
jp
xchg
pop
jl
pop
cmp
xor
cmps
fidivr
test
push
loop
and
(bad)
(bad)
mov
mov
ret
ror
jge
test
jne
push
into
xchg
and
xor
shl
mov
fwait
test
mov
addr16
(bad)
jae
dec
std
mov
fsubrp
fdiv
fmul
and
cdq
es
and
std
int
dec
mov
imul
retf
jg
stc
stos
pop
fstp
popf
sub
(bad)
movs
enter
in
fimul
mov
dec
in
ja
aas
scas
loop
and
retf
fsubr
cmp
adc
jo
push
lods
jle
fsubr
mov
(bad)
lods
xchg
push
retf
mov
pop
cmpxchg
sbb
sbb
inc
xor
xchg
into
push
jbe
jae
jo
inc
xchg
call
sub
add
fisttp
mov
mov
lahf
(bad)
dec
nop
sub
(bad)
jmp
pop
mov
and
push
call
into
pop
mov
bound
xor
and
arpl
jae
pop
ror
sbb
data16
and
shl
or
mov
fsubp
mov
pop
into
ret
sub
(bad)
xchg
ss
inc
push
add
dec
xchg
std
into
or
in
fcomp
fdivr
pop
dec
mov
add
push
popa
scas
jmp
test
into
ror
xchg
in
fidiv
pop
push
dec
or
into
psubq
jle
out
test
pop
and
push
movs
ja
into
jecxz
sub
xlat
pop
test
sbb
sbb
add
loop
sbb
and
jmp
imul
arpl
(bad)
fsubr
into
test
fs
jns
jg
sub
mov
cdq
pop
pusha
mov
mov
stc
retf
iret
(bad)
dec
ins
mov
jle
inc
test
jno
repnz
inc
ret
mov
into
outs
mov
jp
into
xchg
shl
adc
xor
mov
add
xchg
mov
pop
fstp
ins
loop
add
or
sub
mov
data16
xchg
mov
into
add
sbb
dec
mov
into
retf
jecxz
mov
test
into
xor
push
xor
adc
sbb
ss
jmp
nop
sbb
adc
pop
add
into
push
adc
and
xor
scas
cmps
clc
sbb
cli
adc
xchg
sbb
pop
fwait
cmp
mov
add
xchg
or
inc
pop
call
inc
fisttp
(bad)
loop
sub
ja
sbb
dec
mov
jge
mov
outs
int3
fst
push
lds
in
outs
jno
mov
pop
mov
jmp
xor
push
(bad)
cld
jmp
jl
xchg
inc
sbb
loopne
ja
into
out
(bad)
or
adc
dec
cmp
call
cli
test
add
test
xchg
push
adc
mov
mov
in
pop
test
inc
into
add
rol
into
fadd
dec
sub
arpl
test
xchg
sar
xor
mov
mov
test
sbb
test
popf
push
into
sbb
shl
mov
into
push
mov
mov
sub
lock
sbb
mov
push
xchg
mov
push
daa
or
out
jne
xchg
inc
nop
into
shl
inc
mov
sbb
adc
push
(bad)
jns
pop
sbb
fdivr
inc
dec
sbb
in
into
xor
nop
jmp
fnstenv
into
lds
hlt
and
loopne
inc
add
into
cwde
inc
add
sbb
dec
cmp
js
xchg
rcl
or
xor
lahf
sub
push
fbstp
int
fsubp
sub
je
add
dec
scas
mov
xchg
test
imul
pop
mov
mov
or
into
jbe
fs
aad
xlat
test
aad
int
iret
lds
fadd
mov
fs
in
in
into
jle
(bad)
fstp
sbb
cmp
cli
or
mov
mov
(bad)
aam
retf
mov
imul
pop
into
stc
fdivr
mov
and
inc
cmps
jno
mov
jb
mov
xchg
test
imul
xchg
sbb
dec
test
mov
in
jmp
into
pop
(bad)
cmp
adc
mov
sub
and
mov
cmp
cmp
mov
xor
movs
fidivr
push
ret
mov
mov
int
(bad)
ss
push
into
je
adc
mov
sahf
lock
inc
into
cmp
aam
jp
sti
into
dec
cmp
cmp
movs
fdivr
fisttp
sar
sub
push
mov
xchg
inc
and
fs
add
jo
push
in
nop
mov
fld
mov
or
mov
sub
ins
movs
adc
sub
inc
into
pop
inc
pop
add
mov
cmp
into
jmp
neg
mov
popf
test
imul
mov
pop
xchg
into
mov
(bad)
retf
lods
stos
and
mov
test
adc
add
into
in
dec
fcom
mov
addr16
push
(bad)
out
ror
mov
cmp
repz
into
cmp
jecxz
jb
nop
push
into
ret
push
xchg
jmp
retf
scas
dec
add
into
sub
es
cld
xor
pop
bound
jle
or
outs
movs
mov
fmul
mov
xchg
fsub
test
nop
inc
inc
aas
ja
mov
adc
jo
xlat
jne
retf
or
dec
sbb
mov
mov
cli
pop
mov
ret
idiv
je
inc
inc
enter
jecxz
stos
or
add
cmp
pop
scas
(bad)
push
mov
mov
sti
loope
jbe
hlt
into
pop
xchg
cwde
xor
pop
sahf
xchg
inc
xchg
es
xor
js
push
cmp
add
call
or
jle
cmp
sbb
loope
push
cmps
cmp
ret
daa
cdq
sub
fwait
test
pop
into
fst
pop
shl
or
mov
xchg
fcom
xchg
call
sahf
mov
shl
addr16
stos
xor
and
push
and
cwde
inc
cmp
into
fwait
std
in
pop
fdiv
into
mov
or
push
push
retf
into
out
lock
pop
sbb
rcl
(bad)
adc
sub
ins
int
cmps
call
into
dec
and
in
sbb
into
in
pop
pop
xor
mov
pop
jnp
leave
aam
into
fist
cwde
fdivp
and
(bad)
mov
push
or
les
mov
js
mov
mov
leave
lods
mov
loopne
jae
cmp
shl
pop
xchg
rcl
nop
rcl
call
xor
add
mov
sub
xchg
inc
mov
nop
psubusw
dec
pmuludq
into
ret
mov
and
inc
or
into
not
jle
xchg
ret
imul
(bad)
out
(bad)
xchg
daa
push
out
stos
jmp
sbb
ret
sbb
fbstp
ins
out
das
fs
sub
xor
in
shl
out
xchg
push
sub
xchg
(bad)
daa
mov
mov
inc
test
mov
scas
gs
pop
xchg
mov
sti
cmp
jns
nop
or
adc
inc
test
push
call
ror
push
sub
mov
lds
and
inc
ret
lods
mov
and
sub
cs
and
scas
mov
inc
bound
sbb
push
pop
stc
adc
mov
xor
into
mov
or
xchg
stos
stos
cmp
and
into
sbb
sub
stos
rol
into
rcl
test
xor
mov
int
xchg
jbe
stc
ficomp
mul
data16
div
mov
test
dec
add
push
mov
into
xchg
out
add
mov
rol
into
mov
add
pop
leave
push
xchg
test
pop
sbb
hlt
mov
cmc
adc
adc
mov
shr
mov
aam
into
mov
sti
rcl
or
dec
push
out
and
mov
enter
(bad)
pop
mov
into
adc
pop
adc
sub
fwait
(bad)
mov
xor
shl
test
cli
mov
sbb
sti
fnstsw
jmp
movs
sar
jmp
into
inc
add
push
test
mov
retf
sahf
scas
sbb
icebp
adc
test
fucomip
mov
into
pop
jmp
push
and
pop
or
jmp
mov
sub
(bad)
xor
pusha
leave
xor
push
and
jecxz
not
mov
sbb
lds
pop
push
mov
mov
or
or
call
push
clc
jp
jmp
enter
fld
hlt
adc
into
push
push
fst
cmp
test
sbb
sub
adc
and
push
sub
addr16
pop
mov
lods
and
pop
test
mov
into
jns
in
call
adc
pop
sbb
fs
sub
in
into
leave
aad
push
dec
lahf
xor
push
mov
and
dec
xchg
bound
leave
cmps
nop
int3
shr
jp
fst
ret
loopne
stc
cld
test
or
or
(bad)
mov
push
push
push
loop
push
mov
(bad)
ror
test
sbb
lods
or
pop
xchg
sub
pop
jp
pusha
xor
dec
xchg
add
xchg
push
fdivr
sahf
stos
hlt
inc
ret
dec
push
stos
(bad)
ret
into
fsubr
jmp
icebp
mov
shl
xchg
test
cmp
jg
repz
adc
xchg
adc
xchg
cmp
arpl
(bad)
adc
into
jmp
mov
mov
or
mov
fwait
xor
fs
pop
pop
std
out
mov
fld
neg
lods
push
jbe
enter
rcl
data16
pop
and
sbb
fdiv
shr
into
hlt
xchg
stc
shl
and
add
mov
dec
adc
test
int3
mov
mov
neg
repz
cmp
loope
fucom
xchg
ror
leave
fisub
enter
jge
mov
das
lahf
jae
sbb
gs
sbb
push
push
jae
addr16
lock
ficomp
sbb
cmps
mov
imul
jae
stos
(bad)
or
dec
push
mov
or
mov
outs
add
cwde
push
xor
xor
out
fdivr
(bad)
push
clc
mov
aam
add
retf
popf
lods
xor
shld
int
xchg
xchg
adc
push
loopne
pusha
dec
ins
movs
into
lds
xchg
xor
sbb
push
(bad)
enter
add
mov
js
outs
add
jo
jmp
gs
add
fnsave
stc
repnz
stos
jg
inc
jae
adc
sbb
xor
popf
fwait
or
pusha
imul
dec
add
jns
sar
cwde
dec
lods
stos
iret
mov
mov
mov
scas
sbb
inc
push
pop
pop
jnp
lods
sbb
push
aad
(bad)
aaa
mov
adc
out
mov
ficom
int3
sub
pop
sbb
pop
mov
sbb
cmps
dec
push
cmps
jo
imul
jno
stc
scas
fcom
adc
enter
mov
aas
adc
adc
leave
cmp
mov
lock
push
xor
inc
dec
sahf
xchg
scas
adc
mov
push
cmp
push
xchg
mov
loop
and
adc
fisttp
shl
cmps
jmp
sbb
sti
aad
addr16
pop
or
in
lock
out
sbb
(bad)
mov
cwde
push
pop
shr
pop
sub
std
cdq
mov
call
int3
or
and
popf
mov
sahf
xchg
jno
out
mov
daa
imul
sub
loopne
popa
shl
or
shl
inc
mov
neg
adc
sub
(bad)
lahf
hlt
xor
call
or
xchg
retf
mov
shr
cld
adc
xor
jno
scas
setnp
(bad)
cmp
ins
ficom
mov
mov
stos
mov
int3
jbe
or
mov
jbe
out
not
outs
test
pushf
mov
cmps
int
outs
scas
inc
push
cmps
sar
lahf
scas
(bad)
nop
cmps
dec
or
jmp
shl
xchg
cmps
push
mov
cmps
jb
shr
mov
pop
add
cmps
popa
in
das
adc
cmps
outs
ja
pop
mov
cmp
lods
pop
jne
mov
ja
xchg
cmp
scas
and
mov
frstor
stos
xchg
imul
mov
mov
adc
outs
movs
mov
scas
mov
out
movs
aad
mov
mov
sub
mov
jo
sub
lea
scas
pop
mov
fsubr
inc
dec
cmp
movs
jmp
adc
cmps
cmc
xchg
scas
das
push
sub
mov
scas
push
mov
mov
pop
push
jge
aaa
fld
xchg
sahf
xchg
push
or
cmps
or
dec
mov
mov
(bad)
outs
stos
sub
mov
in
mov
(bad)
xchg
mov
cmp
cmps
cmps
mov
pop
and
pop
dec
pop
cmp
data16
mov
or
jg
fld
cmps
out
push
xchg
out
in
aas
mov
test
push
into
fsub
cmc
out
pop
fisttp
jmp
cmps
aad
mov
push
sub
test
xchg
mov
jecxz
lods
mov
cmps
(bad)
into
sbb
dec
mov
test
(bad)
mov
adc
pop
aas
adc
adc
ficom
push
pop
fstp
jno
out
or
fs
sahf
daa
(bad)
iret
mov
(bad)
mov
aad
lahf
jmp
pop
ret
bswap
mov
sahf
ss
scas
in
pusha
into
leave
test
mov
into
shl
scas
(bad)
(bad)
pusha
jmp
or
lahf
lods
fisttp
jmp
lahf
test
ror
mov
in
aaa
(bad)
call
sub
and
sub
xchg
mov
test
jmp
stos
jmp
mov
lods
push
lahf
jns
aaa
int
popa
scas
outs
sub
xchg
sahf
setle
sub
aas
pop
loopne
into
sar
sahf
mov
sbb
cmps
lahf
cld
rol
and
imul
scas
test
scas
retf
aas
cmc
xchg
das
mov
mov
(bad)
and
hlt
xchg
fimul
mov
pop
ret
pop
movzx
stos
popa
(bad)
repnz
das
(bad)
data16
into
shl
xchg
mov
mov
stos
ffree
cwde
into
fadd
inc
(bad)
imul
lahf
sub
push
lea
pop
and
aas
dec
mov
stos
mov
imul
pmaxub
test
stos
pop
lahf
test
sub
sahf
mov
cmps
adc
setg
ds
(bad)
in
(bad)
mov
stos
push
mov
adc
push
movs
scas
mov
mov
dec
das
sahf
push
neg
pop
mov
pop
dec
mov
mov
bound
adc
xchg
into
cmp
stos
adc
(bad)
scas
dec
mov
mov
es
inc
pop
cmp
into
aam
pushf
xchg
test
dec
add
test
(bad)
or
das
sbb
mov
(bad)
mov
packuswb
imul
das
mov
mov
xchg
sbb
cmp
das
sub
aas
lahf
lods
pop
cmp
scas
cdq
mov
ficomp
or
(bad)
sahf
sbb
mov
(bad)
out
popf
cmp
push
ja
(bad)
(bad)
aas
ins
sahf
int3
out
xor
es
popf
nop
dec
cmps
ja
std
daa
neg
mov
pop
addr16
test
xchg
jg
arpl
out
mov
cwde
xchg
pop
aas
jmp
(bad)
fs
sub
sahf
pop
cmp
das
inc
test
push
div
in
not
lods
inc
xchg
pusha
daa
call
adc
ja
outs
(bad)
lahf
ins
cmp
out
push
repz
scas
ja
scas
jmp
in
sub
mov
jg
jle
xchg
mov
or
jl
mov
lods
mov
fadd
fwait
jae
sub
mov
dec
push
daa
adc
lahf
cmps
imul
cmps
scas
xchg
dec
imul
jge
jnp
lahf
inc
inc
sub
sub
loope
xchg
add
jg
stos
mov
pop
sbb
mov
inc
cmps
and
pop
adc
rcl
xor
out
lahf
push
lods
bound
outs
sahf
dec
fisub
dec
and
add
int
xor
mov
jbe
fisttp
movs
int
or
or
pop
jbe
lahf
pop
jmp
test
imul
jmp
cmp
cmp
adc
stos
ret
sahf
dec
aad
adc
scas
sahf
dec
(bad)
mul
adc
cli
cmc
jecxz
xor
sbb
aas
hlt
stos
fidivr
sub
lds
faddp
mov
les
(bad)
cmps
or
lahf
add
scas
test
ror
pop
sbb
scas
stos
xchg
test
xchg
sar
lahf
loop
das
cmps
dec
(bad)
call
clc
stos
(bad)
imul
das
mov
out
popf
dec
cmps
das
mov
data16
xor
mov
jns
pop
call
(bad)
cmp
stos
push
daa
mov
jo
mul
sahf
push
and
lods
loop
scas
xchg
cmps
call
or
sbb
(bad)
sbb
mov
dec
aaa
(bad)
outs
mov
sbb
mov
sbb
jnp
cmps
fidiv
jg
mov
mov
xor
pop
enter
retf
iret
dec
out
sti
jmp
ins
adc
mov
fmulp
lods
mov
scas
ins
retf
(bad)
stos
fbld
mov
xchg
imul
mov
sbb
retf
and
xchg
outs
cmps
(bad)
stos
test
(bad)
pop
neg
lea
dec
fisttp
aaa
adc
cs
gs
(bad)
neg
(bad)
adc
jnp
scas
(bad)
cli
cmp
xchg
mov
imul
stos
ja
int3
jne
xchg
dec
cmps
(bad)
fisubr
stos
add
inc
retf
daa
sbb
retf
icebp
sub
(bad)
scas
test
sub
jmp
push
scas
cmps
xchg
fst
push
pop
and
add
pop
and
(bad)
cmps
outs
sub
xor
pop
dec
(bad)
sahf
lods
cmp
movntps
(bad)
js
das
retf
ja
pop
fisttp
imul
jo
daa
sbb
push
inc
lea
cmp
(bad)
cmps
ins
test
push
pop
cmc
ins
jno
sub
mov
pop
cmp
test
stos
stos
mov
xchg
stos
or
push
or
mov
test
dec
mov
aaa
mov
retf
sub
and
out
push
mov
test
out
dec
packsswb
jmp
and
cs
pop
arpl
aas
jb
dec
ins
nop
(bad)
pusha
inc
cmps
into
push
mov
jg
xchg
aas
pop
sbb
mov
xor
xchg
addr16
mov
add
push
mov
dec
test
popf
xchg
ja
push
jle
pop
movlps
xchg
fdivr
mov
das
adc
imul
sub
out
adc
call
mov
scas
fs
dec
jb
into
shl
pop
cmps
aad
jnp
pop
mov
(bad)
das
(bad)
fwait
test
pop
pop
mov
pop
sti
lahf
and
jg
test
mov
ss
lahf
lods
movs
jmp
xchg
sub
test
neg
cmp
(bad)
lahf
movs
fadd
popa
idiv
fisub
addr16
add
outs
ja
pop
sub
arpl
inc
ret
arpl
cmps
mov
xchg
aaa
mov
cmps
(bad)
cmc
scas
push
mov
inc
pop
pop
cmp
add
mov
test
dec
outs
xchg
push
mov
dec
outs
xor
ja
outs
popa
cmps
mov
aas
xor
(bad)
(bad)
cld
lahf
(bad)
into
(bad)
out
in
shl
(bad)
xchg
xchg
push
aaa
pmulhw
xor
daa
jae
(bad)
xor
lahf
or
xchg
lahf
xor
or
adc
addr16
push
mul
dec
int
push
cwde
daa
int
or
pop
jle
enter
cmp
int
cmps
pop
push
fidivr
jb
stos
stos
fs
(bad)
test
mov
and
or
adc
int3
outs
cmp
or
cmp
lahf
ds
pop
or
push
jp
addr16
les
stos
ds
mov
jle
mov
addr16
pop
stos
ret
xchg
gs
pop
lahf
mov
arpl
xchg
outs
mov
aas
sub
jge
and
jnp
push
jb
daa
jg
pop
outs
mov
repz
in
das
retf
dec
pop
enter
jl
dec
ret
(bad)
jmp
ss
scas
push
nop
mov
pop
jmp
mov
push
jns
stos
fmul
mov
invd
dec
aad
pop
xchg
dec
xchg
mov
sti
push
inc
out
rcl
call
call
pop
scas
js
popf
jmp
into
xor
out
push
movs
xchg
mov
stc
dec
xchg
dec
mov
scas
push
mov
sub
retf
mov
cmp
out
dec
aas
ror
xchg
imul
jae
or
iret
mov
iret
mov
jo
addr16
mov
lea
shl
(bad)
jmp
and
pop
movs
outs
jbe
arpl
test
aas
xor
out
mov
cmps
add
ret
cmps
xchg
(bad)
cmps
out
stos
cmps
pop
mov
das
inc
les
xchg
pop
cmps
cmps
jns
pop
push
and
mov
fisub
mov
fstp
cmovge
pop
mov
ins
addr16
cmps
mov
mov
das
mov
ins
cmps
sbb
pop
daa
fs
inc
in
dec
mov
ffreep
dec
(bad)
mov
mov
or
lahf
mov
imul
lea
ja
das
mov
mov
ins
cmps
push
fimul
mov
lods
int3
mov
lods
jmp
cmps
xor
mov
sbb
repz
in
btr
cmps
mov
in
ins
mov
ins
mov
jne
inc
pop
dec
sete
in
out
xchg
cwde
in
scas
xchg
sahf
pop
or
test
mov
mov
add
div
shr
dec
mov
scas
addr16
mov
xor
cmps
imul
mov
sbb
test
mov
pop
bound
xchg
es
mov
lahf
popf
mov
dec
mov
mov
ds
lea
add
mov
cmp
cmps
xchg
addr16
ds
lea
nop
movs
adc
mov
scas
mov
mov
iret
lods
shl
int
in
ds
imul
es
mov
dec
add
mov
mov
lea
mov
rcr
scas
mov
push
mov
xchg
mov
inc
jnp
dec
mov
mov
mov
outs
ja
mov
(bad)
loope
sbb
xchg
movsx
inc
mov
jnp
in
mov
mov
pop
and
pop
mov
shl
ficom
push
jg
fmul
in
bound
add
mov
(bad)
ja
xchg
lods
adc
cmovbe
out
nop
xchg
jle
into
jb
pop
lock
std
jg
loop
xchg
shr
ror
into
dec
(bad)
pop
pop
and
push
into
sub
sbb
and
push
into
scas
out
mov
repnz
mov
mov
out
into
das
outs
aas
jg
inc
xor
or
cmp
add
jo
cmps
out
(bad)
stos
jmp
shr
daa
addr16
push
sub
pop
into
and
adc
sub
pop
into
xchg
mov
mov
mov
mov
mov
mov
aaa
ja
dec
cmp
add
xor
or
js
lods
in
popf
fsub
scas
in
sahf
frstor
sub
popa
adc
outs
push
pop
and
push
into
(bad)
int3
mov
lock
mov
mov
icebp
into
or
inc
xor
push
dec
ds
inc
xor
movs
in
aam
call
in
aad
jmp
gs
pop
into
es
push
sub
pop
into
test
mov
mov
mov
mov
mov
mov
xor
jns
push
inc
ss
dec
cmp
scas
sbb
and
(bad)
jno
push
ret
stos
sbb
jo
cmps
push
add
cmps
sbb
xchg
sahf
mov
shl
dec
aam
adc
or
inc
jmp
outs
add
jle
sti
sub
cmp
pop
mov
into
int
les
out
fstp
sbb
mov
shl
lods
dec
mov
cli
scas
push
adc
mov
(bad)
mov
call
cmp
int3
cmps
(bad)
adc
mov
(bad)
(bad)
out
xor
mov
addr16
(bad)
iret
mov
lahf
popa
jg
mul
jns
or
push
xor
mov
dec
jmp
(bad)
(bad)
mov
cmp
lahf
ds
mov
dec
aad
sub
aam
mov
xchg
push
pop
rcr
rcl
(bad)
lahf
push
iret
xchg
pop
xchg
cmps
in
invd
mov
out
mov
(bad)
in
imul
test
inc
(bad)
cmps
pop
inc
pusha
inc
cmps
jp
test
fidiv
inc
push
inc
inc
sub
and
jo
mov
or
and
(bad)
(bad)
fidiv
push
mov
mov
mov
mov
jg
mov
sahf
dec
mov
movs
mov
lds
das
xchg
and
fadd
imul
inc
xchg
das
xchg
jg
inc
cmp
xor
imul
pop
pop
cwde
ds
xchg
cmp
xchg
pop
or
aas
adc
es
mov
and
lods
scas
xor
imul
ds
shl
lahf
mov
sub
mov
inc
std
mov
out
das
ins
mov
mov
loopne
mov
inc
push
btr
mov
cmps
mov
mov
mov
mov
gs
outs
mov
data16
outs
mov
lahf
inc
xchg
dec
out
repnz
mov
jb
xchg
repnz
or
mov
or
das
ds
aaa
leave
cmp
or
cmps
sub
cmp
mov
mov
fimul
xchg
bound
pop
or
cmps
pop
mov
inc
mov
xchg
dec
(bad)
popf
xchg
pop
mov
movs
out
push
dec
ja
scas
cmp
in
scas
lods
mov
or
mov
popf
adc
popf
mov
mov
out
out
shl
call
ficomp
cmp
mov
mov
xsha256
cmps
adc
mov
aas
jmp
jae
std
sbb
xchg
mov
mov
push
das
sub
test
push
lods
pushfw
sbb
out
mov
sub
mov
pop
test
test
das
cmp
add
sub
inc
or
or
jge
fidiv
int
xor
sub
ds
imul
cmp
addr16
push
mov
movs
xchg
push
dec
push
xchg
das
sub
out
lods
in
dec
jmp
xchg
or
ds
cld
xchg
pop
pusha
dec
push
push
sahf
mov
sub
mov
das
push
sub
pop
mov
ja
scas
sub
push
outs
and
jg
out
cmp
out
jle
lods
arpl
repnz
popa
aas
cmp
cmp
sub
xchg
mov
int3
cmp
push
pushf
mov
ret
movs
dec
push
xchg
popf
mov
mov
dec
xchg
lea
imul
and
add
mov
and
jge
xchg
jmp
sub
aam
jmp
xchg
imul
ins
stos
cli
stos
or
out
push
mov
mov
or
ds
mov
outs
mov
sub
pop
mov
mov
cmps
mov
pop
fsub
xchg
fsubr
fadd
imul
popf
push
add
inc
dec
xchg
mov
and
int3
scas
ss
aaa
pushf
(bad)
out
leave
cmp
sub
test
cmps
jl
xchg
shr
mov
sub
xchg
push
sub
dec
cld
cmps
dec
test
and
and
daa
cld
jmp
daa
cld
jmp
daa
cld
jmp
daa
pminsw
and
pextrw
gs
sub
jmp
ret
mov
fdiv
xchg
pop
mov
fsub
xchg
push
mov
fsubr
xchg
push
movs
scas
inc
push
sbb
push
scas
sbb
test
fidivr
mov
jle
mov
xchg
cli
sub
ins
daa
daa
out
mov
pop
xchg
lods
mov
and
je
jge
mov
mov
xchg
inc
sbb
aas
(bad)
fmul
popa
(bad)
jge
mov
sbb
and
add
out
leave
aam
xchg
aas
and
mov
sub
sti
push
aas
and
scas
call
mov
mov
outs
sub
mov
push
mov
sahf
sub
add
test
or
xchg
scas
sub
jns
mov
sub
mov
xchg
xchg
fwait
sub
xchg
fsub
fdivr
gs
in
call
mov
jbe
stos
test
ret
mov
push
sbb
cs
lds
jmp
test
mov
mov
push
test
int3
add
mov
out
jge
fcmovu
jbe
fisub
inc
sub
stos
mov
xchg
out
mov
out
sub
data16
daa
retf
stos
sub
ss
mov
lea
xchg
shl
mov
mov
mov
inc
cmp
pop
mov
mov
cwde
mov
nop
sub
dec
popf
xchg
mov
gs
xchg
and
mov
daa
arpl
out
imul
lock
dec
mov
mov
test
pop
mov
pop
push
cmp
xchg
and
dec
fidivr
test
add
push
(bad)
mov
pop
not
push
cmp
ins
adc
(bad)
mov
xchg
leave
(bad)
daa
pop
jbe
xor
mov
xor
aas
mov
sub
ja
xor
xchg
shr
mov
loope
out
imul
retf
xchg
mov
sub
imul
cmp
jmp
(bad)
push
jle
mov
xchg
(bad)
push
ret
sub
ins
cli
daa
aaa
pop
loop
mov
jmp
pop
sub
jge
xchg
daa
das
jle
gs
xchg
daa
sub
xchg
scas
adc
sub
retf
pop
sub
lahf
sbb
test
mov
jg
xchg
pop
sub
ins
adc
jg
cs
mov
jmp
cmps
mov
int3
jae
ins
sbb
dec
call
dec
pop
ins
mov
addr16
mov
xchg
adc
cmp
xor
add
adc
mov
xchg
mov
ret
movs
mov
mov
fidivr
imul
daa
(bad)
jle
mov
xchg
cvtpi2ps
ins
fs
das
jle
mov
xchg
dec
sub
ins
pusha
daa
outs
imul
pop
jmp
push
dec
out
mov
xchg
or
imul
cmps
aas
int3
xchg
push
mov
xchg
mov
add
sti
mov
aas
or
xchg
mov
mov
mov
mov
aas
mov
movs
pop
fistp
and
in
xchg
add
dec
ret
ins
lahf
out
jg
scas
sub
repnz
(bad)
mov
xchg
loop
pop
lea
push
cwde
(bad)
stos
addr16
cwde
or
xchg
mov
mov
xchg
xchg
in
stos
sahf
fsub
mov
adc
movs
mov
inc
pop
test
jmp
sub
mov
aas
arpl
mov
cmc
fisub
dec
dec
mov
daa
int
pop
mov
jl
push
dec
xchg
retf
sub
xchg
ja
mov
jge
dec
daa
addr16
cmc
aam
mov
jmp
daa
rcr
movs
mov
jmp
mov
sub
int3
cmps
mov
mov
xchg
rcl
fimul
(bad)
push
mov
jmp
or
daa
ret
movs
mov
jmp
or
pop
and
mov
imul
jnp
mov
leave
repnz
aas
jmp
daa
and
dec
(bad)
(bad)
lods
icebp
movsx
mov
daa
cmps
cmps
imul
sub
ins
outs
daa
neg
mov
or
jg
repz
addr16
sub
xchg
out
push
fwait
movs
mov
jmp
mov
xchg
out
mov
das
fsub
xchg
stos
and
sar
(bad)
mov
mov
pusha
and
ret
mov
mov
jns
xchg
mov
(bad)
aas
or
idiv
aas
sub
loop
and
out
jmp
in
mov
jge
and
mov
add
aas
idiv
xchg
daa
xor
mov
jbe
mov
ss
aas
xchg
mov
icebp
fsubr
xchg
cmc
out
mov
pusha
jmp
scas
mov
repnz
out
dec
mov
pop
ss
lock
imul
and
mov
scas
pop
inc
movs
mov
sub
ins
ret
pop
dec
movs
mov
sub
aad
mov
sub
loop
pop
sub
jle
movs
mov
sub
and
mov
lahf
xchg
jnp
xchg
ins
daa
xor
mov
hlt
sub
jg
arpl
mov
mov
jns
sub
mov
cmps
xchg
and
or
cli
dec
or
daa
or
mov
xchg
mov
mov
cmp
mov
mov
ins
repz
mov
mov
mov
xchg
mov
ins
xchg
mov
cmc
repz
lea
mov
and
ins
icebp
std
mov
push
mov
lea
mov
push
xchg
cmp
stos
xchg
sar
pop
fidiv
mov
ins
mov
ja
jp
sub
cmps
mov
xchg
mov
out
xor
int
mov
pop
gs
adc
adc
pop
imul
push
cmps
mov
dec
xchg
inc
mov
jle
xchg
sahf
stos
dec
xchg
sub
jg
pop
and
movs
mov
jmp
or
daa
rcr
xchg
xchg
xchg
sub
ins
lahf
daa
icebp
pop
xchg
xchg
sub
push
mov
mov
jg
sub
jge
pop
and
dec
xchg
or
gs
mov
imul
sub
mov
out
stc
mov
xchg
out
add
sbb
stos
pop
lahf
push
add
int3
add
xchg
mov
cmp
dec
or
mov
mov
or
out
jle
mov
cmp
mov
mov
imul
sub
adc
out
jle
popa
out
push
inc
ficomp
loop
pop
mov
jle
mov
xchg
int3
(bad)
mov
push
xchg
das
add
jae
pop
int3
mov
sbb
xor
cmps
and
mov
mov
movs
sub
jle
mov
fidivr
(bad)
dec
mov
cmp
mov
mov
(bad)
push
sahf
mov
out
les
xchg
mov
add
xchg
mov
mov
aaa
pop
mov
icebp
int
dec
sub
jns
dec
xchg
and
inc
xchg
mov
pop
dec
add
or
dec
xchg
test
xor
arpl
mov
jbe
movs
mov
sub
aas
mov
mov
jbe
movs
test
jg
mov
mov
mov
jae
shr
daa
cmp
jae
cmp
aas
ret
mov
dec
test
sbb
sahf
inc
int3
lods
pop
push
mov
pop
dec
and
and
fsubp
aaa
mov
aas
mov
bnd
or
xchg
push
mov
add
retf
outs
and
ja
or
fsub
add
xchg
add
lahf
mov
add
scas
retf
mov
xchg
pop
mov
ins
or
dec
xchg
mov
fisub
aas
add
(bad)
mov
xchg
add
add
xchg
jmp
jle
mov
xchg
das
sub
or
daa
daa
jle
mov
sbb
add
dec
xchg
fmul
sub
push
push
(bad)
pop
fdiv
pop
xchg
cmp
jnp
mov
jle
dec
mov
jl
mov
popa
ss
inc
mov
inc
push
ret
fstp
sub
popa
and
cli
dec
xchg
jns
mov
pop
xchg
inc
mov
in
or
xor
xor
(bad)
leave
xor
(bad)
mov
ret
(bad)
popa
xchg
cmps
or
(bad)
loope
sub
or
fdivrp
lahf
fstp
xchg
fidiv
inc
and
sti
inc
mov
dec
xchg
cmp
mov
out
sub
mov
mov
xlat
xacquire
xlat
cli
or
scas
xchg
(bad)
ins
bound
addr16
bound
ds
push
cmp
mov
xchg
das
nop
scas
aas
(bad)
pop
pop
es
lods
scas
or
xchg
cmps
dec
mov
outs
movs
jl
jg
outs
pop
cmps
movntps
mov
cmps
outs
add
mov
dec
fdivrp
xor
fisubr
push
std
cmps
outs
imul
mov
outs
jle
jge
call
push
(bad)
mov
dec
jg
fldenv
sahf
sub
and
mov
ins
mov
cmps
pop
aad
dec
and
(bad)
call
(bad)
aad
fidiv
fld
loope
jb
and
cs
daa
mov
repnz
mov
ret
outs
sahf
call
out
aas
ds
mov
mov
dec
cmp
fdivr
stc
nop
in
popf
push
mov
scas
icebp
xchg
sbb
dec
cmc
lods
lahf
loopne
in
hlt
mov
lea
loopne
push
and
jle
cld
mov
outs
and
push
or
out
(bad)
repnz
fidivr
pop
retf
pmaxsw
mov
xchg
ror
imul
jb
xchg
neg
jecxz
push
xor
push
fidiv
mov
into
mov
cmps
cmp
lea
jg
es
mov
cmps
out
inc
call
cmps
and
daa
movs
lods
mov
icebp
sti
mov
test
mov
fsubr
imul
or
addr16
ds
mov
jae
lahf
xchg
or
inc
jnp
sbb
push
or
sub
xchg
mov
fwait
or
gs
lahf
jmp
imul
cmp
mov
jnp
ins
imul
or
cli
imul
mov
imul
xchg
adc
ss
dec
jo
out
cmp
or
push
imul
(bad)
bound
jnp
fidivr
xchg
lods
xchg
lea
adc
cmp
or
mov
mov
imul
xchg
xchg
inc
sahf
outs
fwait
arpl
es
arpl
adc
jmp
dec
int3
outs
jbe
loope
xchg
add
mov
mov
stos
mov
mov
mov
mov
stos
mov
jge
stos
out
aad
gs
(bad)
ja
test
movs
pusha
retf
xchg
ds
jge
stos
cld
xchg
dec
jns
jg
push
(bad)
and
mov
cmp
xchg
lods
inc
jg
mov
adc
fldenv
or
das
jae
in
mov
dec
mov
inc
adc
push
pop
adc
jg
nop
mov
mov
jg
mov
popa
pop
ja
xor
ins
lahf
mov
jns
jge
ja
jbe
mov
sar
das
jmp
cmps
mov
push
lods
sbb
jae
scas
fwait
mov
mov
cmps
(bad)
push
popf
adc
mov
shrd
adc
pop
adc
mov
scas
movs
add
jecxz
lea
inc
popa
mov
mov
push
sti
add
xchg
imul
dec
aad
daa
sahf
movs
fwait
scas
push
inc
mov
mov
cwd
fwait
jnp
add
pop
mov
not
pop
or
push
out
ja
scas
mov
ins
lods
popa
inc
pop
jl
pop
and
pop
dec
dec
push
pop
dec
xlat
rol
ja
jl
lahf
out
bound
in
push
test
sub
dec
aaa
out
mov
xchg
add
out
or
dec
mov
out
sahf
add
or
out
test
or
imul
add
and
mov
pop
ja
jp
and
inc
and
mov
test
dec
jns
cmp
out
jge
xchg
mov
cmp
adc
cmp
(bad)
call
cmps
or
popf
mov
stos
push
mov
loopne
fimul
scas
ss
mov
push
scas
(bad)
js
aas
scas
jnp
pop
push
inc
leave
dec
adc
or
movs
mov
push
or
punpckhbw
jge
popf
retf
scas
movs
jg
fnstenv
or
ins
inc
pop
inc
dec
pop
out
(bad)
or
sbb
out
pop
pop
pop
cmp
mov
jl
pop
xchg
dec
call
jl
clc
in
cmp
addr16
inc
es
imul
mov
sahf
mov
popa
dec
test
xchg
inc
jge
jle
(bad)
or
daa
test
das
lea
or
push
out
jp
dec
pop
push
arpl
(bad)
xchg
xchg
pop
pop
stos
add
cmc
jbe
idiv
pop
(bad)
xor
out
jmp
jnp
xor
daa
xchg
xor
xor
jl
cs
imul
das
mov
loope
popf
int
fisttp
addr16
sub
sbb
or
int3
pop
mov
int3
(bad)
mov
imul
int
leave
lods
enter
stos
mov
mov
mov
or
push
xchg
enter
jecxz
lahf
cmp
adc
daa
fisttp
es
mov
in
mov
cmp
xchg
(bad)
lahf
jo
add
add
jg
jmp
inc
dec
or
xchg
dec
bound
mov
mov
push
pop
pop
dec
rcr
movs
jg
dec
gs
and
push
scas
pop
jae
cs
in
mov
addr16
pop
pusha
mov
and
mov
jnp
pop
ret
cld
pop
leave
loop
jl
xchg
clc
imul
div
retf
out
ja
dec
xchg
repnz
mov
sub
pop
movs
pop
fadd
inc
xchg
and
imul
mov
cmps
sub
ins
cmps
jle
in
js
dec
ja
inc
sub
arpl
call
push
xchg
and
jmp
ins
call
popf
sub
cwde
nop
je
inc
adc
cmp
push
lods
jno
loopne
sub
out
mov
jb
jmp
stc
inc
sub
sbb
cmp
ss
xor
imul
retf
mov
and
pop
pop
or
mov
mov
cmp
test
cmp
mov
out
dec
das
fst
(bad)
jmp
add
mov
mov
stos
dec
push
pusha
inc
dec
(bad)
sbb
inc
movs
dec
fwait
popf
pushf
mov
pop
mov
mov
adc
imul
dec
mov
pusha
or
jp
pop
xchg
pop
shl
mov
inc
bound
dec
dec
cmp
pop
in
pop
inc
imul
pop
mov
hlt
popa
mov
push
das
xchg
inc
jg
aad
cmp
jecxz
ins
inc
mov
xor
push
pop
cld
in
or
mov
cmp
and
pop
jg
inc
pop
inc
jo
das
or
dec
sub
cmp
addr16
std
popa
in
sbb
outs
mul
jb
aaa
retf
inc
mov
mov
pop
or
outs
out
mov
stos
data16
in
pop
push
mov
retf
arpl
adc
(bad)
loop
lds
stos
adc
cmc
fisubr
(bad)
adc
shr
dec
mov
dec
aas
mov
lods
scas
mov
cmp
pusha
scas
cmp
dec
adc
leave
aas
xchg
xchg
sub
test
pop
dec
xchg
out
out
cmp
daa
jae
les
daa
das
add
add
test
imul
adc
test
loop
pop
fnstenv
add
loop
inc
dec
mov
xchg
cmps
or
stos
dec
in
mov
cld
in
mov
test
adc
scas
mov
pop
data16
sahf
and
push
es
cmps
ss
sbb
sub
mul
jno
jmp
inc
aas
xor
movs
jmp
ret
scas
inc
(bad)
jnp
(bad)
mov
dec
mov
adc
jecxz
out
cmp
jmp
sbb
scas
add
xchg
jmp
ret
loopne
int
push
jnp
mov
movs
mov
xchg
sbb
(bad)
dec
mov
sar
mov
daa
fidiv
push
cmps
xchg
mov
cmp
ss
or
inc
dec
adc
sub
lea
out
test
stc
cmp
mov
cmp
cmp
mov
pop
inc
fsub
stos
or
mov
adc
(bad)
jb
mov
mov
pop
retf
xor
pop
jg
or
icebp
(bad)
dec
dec
and
jae
jl
xor
mov
jns
(bad)
daa
mov
cmc
cmp
test
sub
out
and
cmc
aas
out
and
retf
repz
xchg
and
jmp
data16
cmp
out
or
xchg
retf
pmaxsw
dec
lds
jge
and
push
mov
fwait
and
xchg
jl
inc
mov
mov
jg
push
scas
sbb
lock
xor
xchg
(bad)
mov
int3
mov
cmp
leave
daa
int3
adc
mov
add
daa
jno
int3
mov
sbb
push
adc
xchg
out
or
and
mov
fdivr
ficomp
fimul
invd
mov
dec
out
(bad)
xor
mov
fidiv
outs
pop
dec
inc
inc
pop
clc
fist
mov
xor
int3
pop
add
jbe
aas
(bad)
or
out
mov
xchg
xchg
cs
ss
sar
fimul
dec
cdq
in
cmps
adc
mov
(bad)
adc
inc
dec
aas
int
pop
jmp
lgs
and
scas
add
outs
ret
mov
mov
adc
mov
fisubr
mov
push
mov
pop
mov
test
lahf
mov
js
pop
in
lea
sub
cmps
push
(bad)
cmp
xchg
add
mov
xor
aas
pop
adc
test
dec
pop
jbe
fdivr
daa
dec
pop
daa
mov
mov
and
dec
clc
and
jecxz
mov
pavgb
xchg
bound
mov
pop
mov
lahf
fsub
scas
movs
lea
add
sahf
pop
mov
jns
push
imul
popf
dec
mov
test
mov
scas
fcomi
(bad)
ret
or
in
cmp
in
pushf
das
fisub
pop
cmp
mov
je
ss
ja
pop
and
and
sub
(bad)
pop
bound
jbe
push
(bad)
jae
jae
int3
stos
sub
and
(bad)
lea
pop
mov
lea
(bad)
dec
test
vsubss
ror
pushf
popf
or
cmps
outs
jmp
dec
cmp
mov
fucomp
lods
ja
lahf
adc
lahf
dec
mov
mov
test
ja
push
mov
(bad)
fwait
jns
mov
leave
daa
push
and
mov
fwait
dec
rcr
aas
jmp
out
push
(bad)
ds
pop
mov
jae
xor
mov
jb
repnz
mov
inc
fldcw
add
cli
ret
cmps
adc
movs
dec
sbb
mov
lahf
sub
imul
es
cmps
sbb
daa
daa
cdq
sbb
mov
retf
fdivr
push
dec
push
mov
cmps
imul
adc
or
popa
mov
sub
xor
mov
inc
ja
jb
scas
mov
fmul
in
push
mov
mov
movs
ret
ss
mov
imul
daa
cmps
movs
adc
call
xchg
aaa
dec
call
fsub
mov
pop
dec
pop
dec
inc
cmp
scas
jns
stos
mov
stos
add
cmps
stos
sbb
mov
cmp
sbb
mov
ins
push
pop
fs
dec
fwait
dec
or
scas
xchg
xor
jp
dec
(bad)
(bad)
fnstcw
dec
and
arpl
dec
(bad)
pop
mov
or
mov
jg
sbb
or
ficomp
cmps
sbb
mov
xchg
addr16
bound
mov
lahf
scas
add
and
sub
mov
(bad)
cmp
cmp
inc
dec
jo
addr16
push
mov
mov
push
pusha
fs
mov
mov
and
xchg
xlat
lock
ins
icebp
jmp
(bad)
mov
ret
dec
push
cmp
popa
lock
(bad)
aad
add
outs
jmp
inc
dec
pop
pop
(bad)
push
pcmpgtb
out
sub
aas
es
enter
lods
sbb
pop
sub
cmp
aad
sbb
mov
mov
and
mov
js
xchg
shr
stos
mov
ds
scas
cwde
cmps
mov
xchg
ds
lea
stos
in
lahf
icebp
cmps
pop
ss
mov
pcmpeqw
jmp
cs
mov
mov
jb
jg
pop
call
xchg
mov
(bad)
cmps
pop
stc
dec
mov
mov
adc
mov
xor
adc
(bad)
and
hlt
stos
pusha
addr16
outs
push
daa
and
cs
mov
lods
sub
cmps
sbb
(bad)
(bad)
mov
stos
pop
add
cmps
add
dec
cs
cmps
scas
fnstcw
fwait
mov
hlt
lea
imul
sar
mov
mov
xchg
add
inc
int3
lods
adc
or
dec
test
and
ror
cmps
imul
gs
rol
popf
cmps
cmps
inc
or
inc
mov
sub
shr
stos
sbb
jecxz
ins
popf
data16
outs
xchg
cmp
lock
in
icebp
add
and
inc
or
les
scas
mov
scas
(bad)
rcr
push
repnz
inc
xchg
ja
shr
imul
mov
cmps
call
fistp
inc
or
scas
jnp
dec
push
movs
out
adc
add
jnp
inc
dec
mov
jmp
sbb
inc
scas
jl
mov
pop
sbb
clc
pop
pop
pop
or
cmp
adc
dec
mov
out
xchg
mov
pop
pop
(bad)
pop
or
pop
dec
pop
out
and
loope
int
cmps
mov
popf
stos
cmps
mov
cmps
test
push
outs
or
repnz
loop
or
xor
ret
push
cmps
js
xor
add
(bad)
cmps
es
jg
out
mov
loopne
ins
pop
pop
push
adc
(bad)
sahf
jno
sbb
jmp
cmc
push
or
outs
xlat
dec
push
xlat
cmps
jne
push
xchg
mov
dec
mov
imul
sahf
mov
add
ins
mov
pop
adc
pop
dec
iret
leave
jl
pop
dec
mov
push
rcr
arpl
lahf
movs
mov
xor
pushf
ds
inc
ins
jae
call
push
popf
scas
jge
sub
dec
jbe
jne
cmp
enter
shl
cli
ins
xor
jo
push
outs
je
jns
xor
retf
mov
punpcklbw
ins
inc
or
movs
mov
outs
pop
push
jp
cwde
jnp
inc
shl
fwait
or
cld
outs
in
dec
dec
mov
inc
pop
dec
mov
inc
or
mov
bound
lock
sub
fnstsw
inc
cmc
movs
jg
popf
adc
out
push
xor
push
xchg
out
and
mov
mov
das
addr16
push
or
(bad)
stos
sub
adc
outs
std
mov
ins
jnp
jae
cmps
pop
jl
xchg
lea
imul
loop
imul
loop
xchg
xchg
push
mov
aad
arpl
cld
cmps
jl
cmps
popf
push
cmps
daa
mov
add
jmp
daa
aad
mov
and
sbb
cdq
movs
aad
pop
daa
pop
xchg
mov
repnz
xchg
xchg
sub
fs
dec
pop
add
mov
lods
cmps
scas
stos
cmp
cwde
outs
addr16
inc
out
pop
and
inc
bound
mov
mov
outs
mov
push
inc
xchg
scas
xchg
popa
inc
pop
add
push
movs
jl
mov
xchg
dec
je
enter
dec
mov
lea
hlt
jmp
mov
into
sub
pop
mov
mov
frstor
outs
std
outs
stos
ja
jnp
outs
addr16
imul
add
dec
call
jnp
mov
mov
dec
pop
aam
mov
sub
push
jl
cdq
cmps
daa
sub
scas
xchg
mov
sti
je
outs
movs
inc
jae
jg
jb
mov
push
or
push
jg
jl
lock
ins
jnp
imul
inc
jge
or
cmp
pop
scas
jecxz
sub
loopne
pop
dec
push
jl
mov
arpl
mov
lods
mov
outs
ins
mov
popf
xchg
call
ss
out
push
pop
stos
pop
sub
fist
jge
xchg
pop
inc
pop
push
jg
je
xlat
cmp
inc
xchg
sbb
ret
xor
jne
les
xchg
mov
ja
inc
ret
mov
imul
dec
mov
jge
xchg
jns
push
fwait
adc
shl
outs
int3
sahf
xchg
adc
retf
sbb
dec
pop
lock
out
mov
(bad)
gs
stc
ja
cmps
mov
inc
ret
test
in
repnz
jo
test
mov
cmp
add
cmp
cwde
js
xor
jg
add
inc
mov
mov
pop
xchg
dec
cmp
dec
es
iret
or
xchg
dec
dec
bound
in
ds
jns
adc
add
pop
test
jge
xor
arpl
mov
enter
mov
mov
xchg
cld
xchg
dec
push
inc
cld
push
pop
adc
fisubr
sqrtps
ficomp
mov
inc
test
inc
fisub
arpl
xor
scas
mov
sbb
popa
sub
test
dec
ficom
in
inc
mov
mov
pop
or
(bad)
cmps
(bad)
mov
jns
xchg
mov
sahf
and
sbb
mov
xchg
inc
inc
dec
pop
mov
push
iret
les
sub
inc
dec
or
jg
mov
das
scas
jmp
not
sbb
adc
push
pop
pop
push
into
and
popf
or
xchg
shr
mov
aas
jp
cmps
or
dec
sahf
lahf
cmp
sub
sub
ret
xor
cmps
fcmovnbe
ins
ret
push
ds
sub
mov
sub
and
jne
mov
mov
and
bound
mov
inc
xor
dec
or
aaa
pop
call
test
push
mov
push
stos
mov
es
xchg
out
cwde
aas
iret
push
js
pop
mov
or
push
outs
inc
jecxz
lods
mov
iret
pop
push
xchg
rcr
mov
jo
test
and
iret
xlat
out
lock
nop
jmp
mov
loop
ficomp
lock
fldenv
mov
xchg
cdq
or
gs
ss
test
sub
push
jmp
in
mov
shl
arpl
outs
dec
jnp
cmp
add
jp
ins
mov
bound
in
leave
dec
mov
jae
pop
rol
repz
imul
outs
leave
sbb
mov
dec
imul
pop
mov
push
test
addr16
mov
out
cmps
push
lock
mov
std
lea
add
xchg
push
mov
jg
mov
jae
push
mov
pusha
push
fxch
int
inc
xchg
push
mov
mov
pop
or
loope
mov
lods
lea
out
jae
stos
leave
outs
imul
mov
sub
pop
mov
cmp
push
push
and
dec
cmovae
daa
std
(bad)
loope
daa
xchg
xor
sbb
fbstp
ret
fdiv
fnsave
dec
lods
inc
(bad)
mov
jg
aas
sar
jg
ficom
pusha
sub
lods
addr16
jns
lahf
pmaxsw
mov
add
(bad)
mov
in
lea
jg
sub
mov
or
retf
mov
das
mov
das
aas
test
cmp
inc
xor
and
mov
scas
ins
mov
addr16
ins
lods
fsubr
sub
test
cmps
mov
movs
fsub
sub
mov
mov
mov
ins
mov
mov
mov
mov
mov
pop
fs
fmul
addr16
lds
lods
fsubr
test
retf
and
out
pop
pop
adc
(bad)
mov
xchg
lods
mov
dec
pop
dec
push
sahf
ins
scas
fdiv
mov
lods
fcomp
pop
cmps
imul
and
cmc
pop
push
addr16
add
mov
daa
movs
fsubr
xchg
arpl
ja
adc
out
jmp
lods
push
cmps
retf
mov
mov
lahf
retf
or
lods
daa
addr16
add
mov
dec
mov
fisub
jg
fidivr
add
imul
inc
das
(bad)
scas
retf
retf
sub
xchg
retf
imul
dec
or
pop
inc
mov
(bad)
imul
cmc
(bad)
out
aam
imul
mov
inc
pop
scas
xchg
retf
cld
mov
(bad)
imul
(bad)
xor
push
adc
and
imul
inc
out
bnd
xchg
out
ds
mov
enter
mov
mov
imul
sbb
jns
jg
imul
mov
mov
enter
ja
arpl
ja
(bad)
sub
(bad)
and
xchg
out
(bad)
(bad)
(bad)
cmp
jle
pusha
daa
and
inc
out
jg
daa
jle
mov
arpl
or
not
sahf
mov
ret
adc
xchg
mov
cld
dec
push
jmp
imul
jmp
mov
aas
ja
arpl
sqrtps
(bad)
mov
nop
pop
push
or
xchg
lds
int3
jg
jg
imul
(bad)
mov
pop
das
je
(bad)
arpl
or
out
mov
arpl
xor
xchg
les
jg
fsubr
cmps
adc
daa
aas
js
pop
fisub
scas
in
into
les
ret
and
xor
(bad)
push
adc
xchg
adc
daa
cwde
ds
fisub
push
mov
stos
xor
adc
fcmovnu
call
test
cs
arpl
jg
and
inc
inc
jg
imul
mul
out
lock
out
cmp
jg
fisub
int3
cmps
rcl
scas
adc
(bad)
(bad)
(bad)
outs
or
lods
es
jg
imul
push
outs
or
in
aas
rol
jmp
imul
mov
out
or
jle
mov
imul
jg
lahf
shl
rcl
arpl
out
adc
cmps
fnsave
xor
and
mov
fisub
fbld
scas
arpl
mov
ins
fist
outs
and
arpl
xchg
fcom
xchg
cs
arpl
int
fistp
mov
imul
out
sbb
and
and
imul
in
jg
push
push
inc
rcr
add
imul
mov
mov
xor
addr16
cmps
fstp
lods
arpl
scas
mov
jnp
addr16
aaa
in
xchg
hlt
dec
mov
dec
mov
add
push
bnd
jg
imul
xor
fst
fsub
cmps
mov
push
mov
push
imul
sub
jg
stos
imul
outs
xor
daa
aaa
fdiv
push
btc
aaa
jg
(bad)
and
cmps
fcmovnu
mov
out
jg
mov
(bad)
imul
je
xchg
into
mov
jno
ja
arpl
xchg
scas
fs
into
mov
push
cdq
jg
imul
xor
repnz
out
mov
pop
(bad)
daa
in
outs
fstp
mov
into
ret
std
montmul
cmps
pop
es
mov
ins
repnz
das
(bad)
arpl
cmc
into
fstp
dec
test
sbb
imul
xchg
push
pop
ret
jmp
outs
xor
dec
jmp
cmps
mov
std
pop
cmps
aaa
outs
ret
int3
out
sbb
mov
scas
fdiv
aaa
ja
fsub
scas
imul
(bad)
jg
fisub
loop
pop
pop
lds
fiadd
lods
arpl
xor
in
out
retf
imul
pop
(bad)
xchg
jg
addr16
dec
outs
xlat
xchg
imul
daa
or
aaa
xlat
jl
pop
cdq
jg
imul
mov
int3
(bad)
sbb
push
pop
cmp
mov
mov
jg
imul
jl
(bad)
frstor
jmp
push
dec
aaa
cmps
dec
mov
(bad)
in
daa
aam
arpl
pushf
mov
mov
pop
repnz
lahf
mov
imul
dec
arpl
aaa
and
lds
test
imul
mov
(bad)
mov
daa
xchg
xchg
fidivr
arpl
push
cmps
(bad)
aam
stos
arpl
mov
(bad)
call
pop
dec
cmp
(bad)
pop
add
imul
inc
inc
cmc
daa
mov
(bad)
(bad)
mov
and
xchg
inc
cmc
mul
mov
dec
mov
imul
mov
das
loop
lahf
jl
jg
(bad)
xchg
cs
mov
cmps
shl
scas
shl
scas
imul
ja
cmps
(bad)
dec
or
pop
popa
ja
pop
(bad)
daa
add
imul
pop
jg
(bad)
inc
cmps
test
jg
imul
(bad)
cmps
out
in
xchg
mov
shl
scas
imul
xchg
jo
aas
shr
dec
aas
inc
mov
mov
fdiv
pmullw
mov
imul
test
fadd
in
xchg
xchg
cmp
cmp
(bad)
outs
rol
jg
push
test
daa
popf
mov
mov
pop
pop
ficom
out
inc
(bad)
imul
xor
outs
sahf
test
pop
mov
(bad)
jo
push
pop
cmp
inc
mov
into
(bad)
cmc
rcr
pop
inc
jg
imul
mov
fucomp
fdivr
mov
jg
mov
adc
mov
imul
sub
outs
mov
outs
mov
inc
je
sbb
(bad)
and
mov
mov
mov
and
(bad)
jg
add
outs
and
setae
and
out
xchg
pop
and
cmps
stos
mov
mov
scas
mov
mov
xchg
sub
js
and
cs
test
lods
out
daa
jae
(bad)
out
lock
add
mov
pop
pop
and
outs
pushf
ja
jmp
dec
mov
and
cmps
ret
ja
scas
shl
sbb
ror
xchg
lods
cmp
cmps
shr
scas
imul
mov
aas
add
pop
add
cmps
push
mov
(bad)
and
scas
test
sbb
push
mov
addr16
lods
es
push
add
stos
mov
xor
jns
xchg
sbb
addr16
lock
outs
mov
cmp
das
out
push
xor
sar
push
int
cwde
cmps
scas
test
movs
and
adc
jmp
dec
dec
jmp
mov
arpl
xor
or
das
pop
das
mov
inc
ficom
outs
sub
pop
lahf
sub
(bad)
adc
imul
mov
cmps
aaa
test
jmp
aas
das
arpl
xchg
fs
stos
jns
ficomp
jns
lahf
sbb
(bad)
repnz
xchg
jmp
pop
and
(bad)
cmps
sahf
bound
out
inc
mov
inc
ins
sub
mov
es
ja
cmps
and
das
pop
pop
xchg
lods
mov
xchg
pop
ins
int
cmps
movs
int
cmps
adc
addr16
pop
sbb
cmp
xchg
mov
jmp
aaa
das
mov
dec
pop
xchg
mov
mov
imul
and
ds
(bad)
mov
daa
add
out
leave
pop
popf
cmps
sbb
pop
adc
in
mov
into
out
clc
jl
(bad)
lock
imul
xchg
mov
inc
jns
(bad)
sbb
mov
fs
popf
cmps
pop
xchg
push
mov
cmp
xchg
test
adc
out
mov
sti
ss
in
(bad)
movs
popf
cmps
jmp
xchg
xor
cmps
ja
xacquire
inc
xchg
mov
into
out
clc
push
bound
push
dec
mov
sub
mov
pop
das
mov
and
addr16
minps
cmps
clc
mov
out
ret
addr16
scas
gs
jg
xchg
mov
push
lahf
mov
dec
(bad)
ins
ror
jbe
cmps
jl
mov
inc
xchg
push
xchg
jmp
fidivr
retf
xchg
inc
mov
lods
xchg
jg
ja
inc
mov
pop
dec
push
dec
sbb
daa
lock
out
in
xchg
out
mov
fidiv
push
addr16
enter
retf
xchg
jmp
push
cmp
inc
lods
xchg
pop
popa
xchg
into
mov
in
xchg
mov
pop
aaa
push
div
out
cmps
(bad)
jae
fisubr
adc
mov
and
pop
and
jg
lahf
lock
bound
and
pushf
scas
sub
and
xchg
punpckldq
idiv
pop
fisubr
int
clc
mov
setnp
and
pop
fnstenv
mov
das
mov
icebp
xchg
inc
daa
(bad)
loop
scas
pop
(bad)
jne
out
add
sti
dec
scas
outs
fcmove
lahf
jmp
cmp
out
leave
push
or
out
sti
mov
and
mov
cmps
mov
mov
cmps
xor
cwde
arpl
mov
lea
outs
cmps
lahf
mov
into
jmp
mov
pop
jo
fsub
jge
sbb
ret
in
xchg
mov
mov
mov
aaa
mov
mov
xchg
or
movs
addr16
ds
scas
push
dec
fmul
dec
aaa
sub
aaa
das
ds
out
retf
test
out
clc
push
ds
fnstsw
rol
fld
mov
addr16
ss
mov
js
and
and
or
aas
xchg
aaa
mov
lods
mov
loope
mov
xrelease
lea
scas
mov
lea
ja
jle
pop
lahf
or
sub
outs
adc
ds
adc
sub
pop
adc
sub
not
(bad)
sub
mov
mov
sub
xor
mov
retf
or
jg
push
je
out
jmp
pop
ds
pusha
mov
int3
inc
mov
aas
mov
das
out
leave
pop
popf
(bad)
pop
xor
fdivr
not
lahf
cmp
xchg
mov
xchg
sub
out
scas
xchg
out
je
xchg
mov
mov
xor
mov
dec
mov
xchg
js
daa
xchg
pop
popw
and
and
mov
(bad)
dec
out
pop
(bad)
cmp
cmc
or
push
xor
scas
mov
or
scas
mov
and
xchg
imul
push
xchg
sub
neg
or
pop
gs
xchg
jmp
hlt
jb
and
mov
stos
mov
mov
scas
les
xchg
lea
ja
mov
imul
sub
out
mov
imul
es
lea
retf
mov
addr16
scas
mov
mov
es
mov
mov
test
pop
ins
push
mov
xchg
pop
push
ja
mov
or
retf
es
sahf
or
sahf
sbb
sahf
in
int3
sahf
dec
arpl
lock
and
and
mov
push
mov
push
popf
and
and
and
and
and
int3
sahf
cmp
sahf
or
sahf
adc
sahf
loop
sahf
hlt
int3
sahf
(bad)
int3
sahf
fmul
lahf
stos
mov
push
mov
push
and
gs
mov
and
pop
into
daa
mov
mov
mov
out
and
(bad)
daa
(bad)
mov
lods
xchg
pop
jae
pop
pop
ins
mov
cmps
mov
lods
lock
push
cld
mov
dec
jmp
stos
jb
fmul
mov
jae
pop
(bad)
stos
mov
test
fidivr
(bad)
cmps
cld
mov
pop
(bad)
mov
leave
mov
inc
inc
and
(bad)
popf
ja
test
pop
sub
pop
lock
xchg
(bad)
lock
aas
out
lock
pop
lock
imul
(bad)
jg
mov
pop
push
mov
mov
stos
add
daa
lds
addr16
daa
mov
cmps
lahf
mov
xchg
es
outs
imul
cmps
(bad)
jecxz
add
sbb
mov
or
frstor
repz
popf
mov
into
jl
(bad)
lea
mov
sub
mov
cmp
xchg
das
lahf
imul
ds
out
daa
out
daa
out
and
outs
mov
into
mov
dec
pop
pop
(bad)
jne
xchg
shl
es
into
mov
jle
xor
push
xor
addr16
and
lods
mov
cmps
es
dec
xor
dec
or
dec
add
loopne
xchg
dec
call
mov
add
push
mul
mov
mov
int3
(bad)
call
sahf
adc
xchg
jmp
sub
test
xor
cmps
imul
es
int3
frstor
pop
mov
out
cmps
dec
(bad)
pop
test
in
addr16
clc
gs
aas
int3
push
jl
push
pusha
lahf
out
or
into
imul
fld
retf
lea
sbb
jns
daa
int3
cmc
into
out
clc
jl
push
xchg
mul
int3
bndldx
(bad)
cwde
daa
mov
cwde
mov
ds
lods
outs
adc
sub
mov
push
das
mov
es
mov
bswap
out
jnp
sti
cmps
cmp
mov
lds
lods
mov
ds
jmp
mov
mov
scas
cmp
mov
inc
fsubr
lods
mov
pusha
mov
and
into
jmp
pop
pop
or
push
xchg
push
int
lea
xor
xchg
add
inc
in
outs
dec
pop
sub
ins
xchg
test
xor
daa
outs
mov
aaa
adc
dec
mov
dec
sub
das
cwde
jmp
jg
jg
movs
mov
pop
inc
xchg
push
int3
push
into
out
clc
jge
xchg
mov
aaa
cmp
add
add
push
shr
mov
mov
xchg
jmp
and
outs
mov
das
mov
and
outs
cmp
mov
lahf
mov
(bad)
xchg
ja
out
sub
dec
adc
mov
mov
es
mov
cli
aas
jae
mov
in
in
shl
leave
push
daa
lahf
xchg
jl
outs
xchg
inc
data16
and
dec
(bad)
push
jmp
xchg
or
aas
outs
clc
aas
ror
out
pop
xchg
dec
ja
mul
mov
inc
and
mov
push
movs
adc
into
imul
xchg
xor
lock
dec
xchg
ds
out
(bad)
es
into
jmp
adc
aad
test
dec
xchg
jmp
test
and
mov
ins
out
adc
and
retf
and
stos
ds
repnz
xchg
repz
mov
add
cmps
cld
and
in
scas
mov
cmps
pop
test
addr16
int
test
outs
xchg
jne
sub
test
sub
cmp
dec
pushf
outs
and
or
xor
xchg
out
leave
call
xchg
dec
out
mov
out
clc
out
xchg
sbb
jmp
sbb
jmp
into
(bad)
xchg
clc
jl
inc
mov
scas
push
imul
mov
push
fcomp
mov
das
fdivr
mov
out
ficom
scas
pop
arpl
xchg
int
xchg
int
and
push
inc
jns
lahf
out
lock
rol
pushf
mov
mov
out
es
aas
push
pop
and
sbb
sub
into
push
cmp
mov
pop
int3
sahf
sbb
sahf
adc
jae
dec
in
fstp
xor
mov
mov
test
mov
mov
mov
mov
inc
mov
ficom
and
and
and
and
and
and
mov
lea
mov
fistp
mov
pop
ds
test
ror
lea
jge
or
lea
call
cmps
aas
test
mov
push
dec
fisub
fistp
dec
pop
daa
out
es
pop
xlat
int3
lahf
stos
and
mov
push
and
xchg
and
and
and
and
and
and
and
and
and
and
and
jmp
fidivr
(bad)
xchg
shr
test
and
fcmovne
ds
(bad)
not
outs
and
sub
xor
in
xchg
clc
push
leave
inc
inc
lahf
xchg
xchg
inc
mov
retf
sub
daa
out
lock
lahf
jmp
lahf
inc
mov
ja
mov
retf
mov
retf
mov
ds
and
fidivr
mov
add
mov
ja
mov
out
daa
out
daa
out
daa
out
daa
out
daa
out
daa
out
daa
out
daa
out
daa
out
daa
jmp
ss
sbb
in
or
loop
xchg
push
cmp
daa
in
aaa
leave
(bad)
pop
pop
lods
lahf
ja
mov
fst
pop
(bad)
lahf
and
and
xchg
xor
out
mov
lahf
mov
cmp
ja
pop
retf
push
lock
lahf
(bad)
out
out
and
jge
pop
out
lock
movs
mov
push
mov
cmp
mov
retf
stos
outs
in
mov
js
cmps
dec
pop
int3
into
es
cwde
xchg
push
lahf
cmp
cmps
out
das
mov
aaa
xor
mov
dec
into
mov
test
ficom
fisub
ins
(bad)
lock
popf
xchg
mov
daa
jg
push
jmp
test
jmp
push
mov
push
aas
mov
and
arpl
jne
in
xchg
cwde
mov
sbb
(bad)
out
cmps
pushf
push
(bad)
cmps
int3
ds
add
or
and
aas
mov
or
push
aas
test
das
xor
mov
pop
pop
pushf
and
xchg
das
leave
outs
inc
xchg
xchg
xchg
inc
pop
ins
fwait
daa
pop
lock
imul
into
mov
stos
(bad)
cmps
xchg
rol
sbb
test
inc
cmp
addr16
mov
jo
dec
into
daa
jae
outs
dec
fwait
inc
mov
lods
xor
ds
mov
and
imul
rcl
push
(bad)
jb
stc
xchg
movs
es
nop
scas
das
stos
test
imul
xor
pop
mov
jno
movlps
and
or
mov
(bad)
out
mov
test
ins
(bad)
fsubr
xchg
(bad)
lea
mov
mov
inc
(bad)
sub
dec
inc
jmp
or
js
adc
mov
pop
mov
adc
ficomp
ins
scas
fisub
dec
push
lods
stos
mov
js
dec
sbb
imul
pop
push
fidivr
scas
scas
(bad)
mov
jno
dec
push
xchg
cwde
cmps
(bad)
call
outs
out
lock
dec
out
lock
das
jmp
lods
mov
xchg
ja
pop
inc
pop
ins
cdq
daa
aaa
lock
jmp
inc
mov
inc
lahf
sbb
nop
inc
mov
daa
out
ds
das
and
cmps
sbb
fstp
repnz
retf
ret
push
fidivr
div
jne
jmp
mov
mov
or
lahf
in
(bad)
jbe
out
clc
push
loopne
imul
xchg
stos
mov
dec
in
cmps
dec
ficomp
cmp
mov
mov
outs
bnd
xchg
addr16
pop
fcomp
cmps
mov
jbe
mov
das
xchg
mov
bswap
movs
addr16
push
pop
cmp
xchg
fistp
xor
mov
lahf
mov
cmps
lods
mov
and
test
outs
outs
pusha
ins
in
jmp
ins
inc
mov
pop
jns
jle
sbb
mov
ja
mov
out
daa
jae
pop
xchg
ficom
xor
ja
ins
sub
dec
ins
mov
jmp
ins
mov
jg
ins
and
xchg
pop
daa
fistp
push
and
mov
xchg
jmp
fistp
push
and
mov
xchg
jmp
adc
and
or
imul
and
into
pop
call
es
aaa
mov
div
(bad)
cmp
xchg
lods
mov
daa
in
cmps
dec
aas
adc
pop
adc
push
ja
fs
imul
ficom
push
into
jmp
into
retf
lea
pop
xchg
jno
inc
out
daa
sbb
dec
in
lahf
jbe
mov
das
retf
(bad)
and
minps
(bad)
into
mov
ja
pop
dec
pop
and
into
pop
call
retf
cmps
imul
arpl
jg
and
pop
pop
push
xchg
sub
lods
mov
pop
xor
in
cwde
mov
retf
pop
rcl
mov
xchg
scas
je
into
mov
in
xchg
mov
outs
push
(bad)
out
push
(bad)
mov
das
push
in
cwde
mov
xchg
adc
and
fisub
jl
cmps
pop
jge
mov
cmps
ja
fiadd
scas
nop
cmc
fmulp
mov
pop
push
mov
outs
xor
cmps
gs
dec
jae
daa
or
xchg
lahf
add
or
sub
daa
adc
and
pop
es
mov
pop
(bad)
xor
jp
out
xchg
pop
push
ins
mov
stos
cmps
pop
outs
cmp
in
jns
out
dec
lahf
jns
into
mov
xchg
fcomp
imul
mov
pop
mov
(bad)
(bad)
xchg
mul
push
imul
sbb
outs
ret
cmps
push
movs
aas
test
jbe
mov
or
and
out
lock
xchg
push
jmp
mov
dec
lock
int3
daa
sbb
mov
cmps
mov
mov
fwait
int3
xor
imul
jg
lahf
mov
and
pop
es
mov
pop
leave
pop
pop
pop
setbe
mov
fst
into
mov
in
pop
jbe
mov
mov
cmps
scas
mov
and
and
ins
jnp
pop
pusha
pop
inc
xchg
lahf
ins
int
ins
movs
int3
cmp
bound
test
inc
mov
mov
pop
ins
xchg
out
add
(bad)
mov
xor
retf
das
test
cmps
cmps
test
mov
arpl
outs
jmp
pop
cmp
sub
add
or
sub
mov
out
mov
push
into
pop
call
daa
pop
dec
jle
mov
push
(bad)
mov
dec
retf
(bad)
lock
lods
cmps
add
sbb
lahf
jge
inc
out
push
inc
scas
aas
aaa
fadd
xchg
pop
mov
into
mov
pop
push
(bad)
mov
mov
daa
cmps
jl
jmp
dec
xchg
inc
mov
aas
das
fadd
ds
out
push
aaa
mov
(bad)
int3
mov
fisttp
ds
adc
push
xchg
lea
push
out
(bad)
mov
mov
mov
in
scas
clc
imul
cmps
imul
cmps
mov
jnp
cmp
(bad)
aad
mov
repnz
inc
fsubr
xchg
jmp
sbb
pop
fsubr
mov
out
fdiv
mov
cmps
jns
ret
lahf
push
daa
lds
mov
xchg
mov
xchg
push
(bad)
mov
jg
(bad)
mov
dec
push
in
js
mov
ins
and
pop
lock
das
out
lock
mov
adc
ror
ss
in
cmps
ja
movs
out
pop
push
dec
lahf
ja
arpl
cmp
repnz
loope
mov
imul
inc
ja
cli
(bad)
jle
xchg
aas
pop
rol
dec
test
ja
repnz
xchg
fisub
out
jbe
fidiv
dec
push
jle
pushf
into
daa
jbe
cmp
dec
shl
and
out
sar
dec
mov
ds
mov
jne
jmp
jne
jg
lods
es
jne
out
das
mov
mov
or
daa
out
(bad)
jne
out
sub
mov
ja
(bad)
jle
pop
mov
retf
pop
fisubr
xchg
je
xchg
pop
leave
outs
inc
xchg
mov
retf
mov
retf
mov
shl
jmp
inc
mov
push
addr16
xchg
dec
pop
inc
xchg
dec
test
lods
pop
imul
mov
sbb
ja
out
dec
mov
repnz
sub
pop
adc
sub
not
mov
jno
cmps
xor
jno
(bad)
ja
idiv
inc
ja
jno
dec
jmp
leave
daa
inc
lahf
mov
jae
scas
ds
adc
or
sub
cmps
jo
jl
pop
in
xchg
js
pop
xchg
lahf
dec
outs
inc
mov
cmp
daa
fdivr
cwde
es
mov
and
and
imul
mov
lahf
fadd
imul
out
retf
pop
lock
lods
mov
mov
(bad)
mov
mov
pop
or
cmp
push
mov
stc
mov
cmp
addr16
clc
data16
or
cmps
(bad)
int3
pop
cwde
aas
mov
(bad)
cwde
ds
out
ds
lea
push
cmps
scas
dec
jae
mov
jg
pop
jg
pop
test
jbe
mov
mov
mov
mov
sbb
ds
adc
and
aas
(bad)
addr16
push
pop
sbb
repnz
out
test
dec
fidivr
test
das
sub
or
(bad)
cmps
dec
push
lahf
out
out
mov
mov
mov
daa
inc
xchg
xchg
mov
lods
mov
push
jae
daa
dec
or
cmps
dec
repnz
push
jmp
(bad)
frstor
in
in
imul
dec
fdiv
mov
pop
xchg
fs
test
pop
aas
fmulp
mov
add
es
dec
sbb
cmp
bswap
fld
add
and
pusha
sbb
jmp
mov
xchg
pop
ins
(bad)
(bad)
and
ret
pop
xchg
push
in
dec
mov
lahf
pusha
add
into
dec
cmp
adc
(bad)
jmp
mov
test
mov
mov
out
retf
pop
xchg
jl
pop
in
xchg
dec
inc
in
cmps
dec
cmp
inc
xchg
scas
ins
(bad)
xchg
push
in
mov
mov
sbb
adc
xchg
out
xchg
int3
das
sbb
retf
jmp
(bad)
push
mov
inc
add
push
mov
ficomp
jne
adc
in
lahf
jg
xchg
pusha
daa
mov
aas
das
iret
mov
retf
adc
xchg
(bad)
and
jae
dec
mov
mov
mov
mov
mov
cdq
jmp
push
xor
mov
retf
daa
out
out
pop
fidiv
jg
pushf
mov
mov
mov
ins
outs
fsub
mov
aas
mov
shr
loop
mov
aaa
(bad)
imul
inc
int3
cli
cmp
mov
outs
(bad)
mov
daa
fnstsw
imul
out
and
in
xchg
cwde
mov
aas
push
fsubr
ds
lods
ds
(bad)
lahf
aaa
and
(bad)
jnp
pop
inc
jg
mov
or
xor
out
inc
add
inc
rol
cs
inc
jmp
fdiv
movs
xor
into
inc
add
push
push
sub
aas
inc
xor
jns
mov
out
jmp
adc
sti
(bad)
push
dec
fisubr
mov
out
push
cmc
movs
mov
into
imul
(bad)
mov
in
xor
pop
mov
mov
inc
mov
mov
jl
ja
es
nop
into
and
pop
lea
push
jge
into
std
xchg
mov
ds
adc
jg
imul
mov
mov
cwde
mov
or
or
add
es
int3
push
jmp
daa
cmps
scas
push
or
jnp
(bad)
pop
jbe
ja
pop
sub
jl
push
out
cmp
pop
int
fbld
sbb
pop
addr16
and
sub
pop
gs
in
ja
mov
aaa
push
jae
xchg
jge
cmps
lea
lods
jbe
mov
cmp
mov
retf
fidiv
outs
iret
arpl
push
cmps
mov
dec
fs
jl
lahf
mov
lods
mov
out
(bad)
and
inc
pop
es
mov
int3
out
cmp
and
out
repnz
jl
xchg
mov
mov
imul
mov
pop
jns
add
out
ja
(bad)
mov
sub
daa
push
mov
ds
out
push
ds
ficomp
dec
sub
mov
ja
mov
mov
adc
pop
pop
pop
jnp
mov
and
aas
es
mov
mov
add
mulps
add
sbb
pop
sub
sbb
lock
scas
cmp
lahf
loop
movs
into
jae
adc
pop
je
arpl
leave
mov
push
dec
lahf
sbb
movs
add
int3
not
movs
arpl
push
mov
add
imul
pop
test
mov
sahf
scas
mov
(bad)
xchg
pop
rcl
into
jg
adc
push
pushf
jmp
cmps
cmc
aad
into
int
sub
push
and
fdivp
gs
jb
ss
into
inc
mov
jge
mov
into
in
imul
xor
cmp
cmps
les
mov
pusha
into
test
jne
into
test
jecxz
mov
mov
dec
jo
or
or
ret
shr
into
xor
arpl
mov
stos
jns
scas
adc
aas
mov
into
pop
or
lahf
xor
adc
fisttp
mov
mov
jp
mov
fsubr
ss
lock
lods
into
push
dec
add
into
lods
fwait
pop
sub
mov
push
call
or
int3
imul
sub
mul
sahf
cmp
scas
das
sbb
out
cli
ds
imul
mov
xchg
dec
pop
cmp
in
out
dec
xor
adc
or
push
ds
mov
imul
and
cld
adc
es
mov
popa
ds
lea
aam
sar
ss
pop
ss
pop
mov
outs
ds
imul
mov
shl
cmps
fdivr
lock
cld
imul
repnz
(bad)
ds
es
mov
lea
push
sub
and
in
dec
daa
test
push
inc
cmps
push
mov
adc
arpl
pop
movzx
jno
jmp
imul
mov
and
cmps
push
ds
lea
addr16
es
mov
cmp
xor
pop
es
mov
cdq
test
(bad)
cmp
es
mov
pop
ds
pop
es
mov
xchg
or
hlt
es
addr16
ds
ja
arpl
cmps
daa
sar
scas
repnz
adc
add
push
ds
lea
xchg
test
mov
enter
call
imul
es
mov
imul
mov
idiv
or
xor
inc
outs
mov
cmp
stos
fimul
mov
das
ds
dec
mov
xchg
ds
lea
int3
mul
call
and
add
loopne
sar
mov
test
push
popf
mov
push
addr16
stos
lea
mov
mov
mov
sbb
mov
cmps
lods
xchg
dec
fimul
and
inc
lea
daa
movs
and
mov
mov
outs
lea
aaa
pop
adc
ret
sahf
inc
push
mov
lods
or
daa
cmps
imul
loop
inc
cmps
fwait
in
mov
sahf
cmps
shl
addr16
adc
and
dec
ds
cmps
dec
mov
and
ror
mov
(bad)
add
es
mov
imul
mov
daa
shl
cs
mov
addr16
ds
push
mov
dec
ds
arpl
cdq
xchg
fsubr
cmps
enter
jmp
and
dec
lea
imul
cmps
imul
cmps
int3
ds
adc
aaa
and
dec
pop
cmps
lahf
imul
lea
dec
mov
and
add
sar
mov
lea
pop
sub
mov
(bad)
fsubrp
ss
addr16
dec
lea
sub
es
addr16
test
sti
push
ins
jle
test
or
lea
and
es
mov
les
arpl
mov
movs
aam
xchg
and
(bad)
outs
out
sub
jmp
mov
mov
mov
sub
xchg
fisub
lods
xchg
lea
mov
mov
and
xor
inc
cmps
scas
inc
cmp
and
xchg
push
cmps
inc
mov
push
cmps
push
inc
dec
jle
in
inc
pop
inc
shl
dec
push
loopne
scas
and
movs
js
jg
mov
cmps
into
fiadd
test
stos
shl
and
xstore-rng
cmps
(bad)
mov
pop
mov
fiadd
neg
int
xchg
leave
adc
in
retf
cmps
sbb
xchg
mov
ret
or
sbb
mov
xchg
mov
xchg
pusha
pop
lods
rcr
(bad)
cwde
test
fucomi
mov
shl
outs
xor
or
pop
mov
test
dec
les
aaa
gs
repnz
cli
(bad)
pusha
arpl
(bad)
aam
mov
mov
pop
pop
sbb
mov
leave
dec
fdiv
cs
pop
or
std
out
cmc
inc
(bad)
lods
cmp
(bad)
mov
dec
nop
lods
aaa
into
xor
fldenv
sub
into
sbb
in
aas
into
test
ja
pop
sbb
inc
push
out
(bad)
fbld
pop
push
movs
out
xchg
gs
sahf
loopne
sbb
pop
lods
pop
adc
and
(bad)
jge
adc
cmp
ret
jl
sbb
mov
mov
into
gs
sbb
pop
mov
outs
cwde
rcr
lods
mov
into
cli
test
and
loopne
scas
mov
stos
out
clts
sub
mov
je
push
in
cmp
or
mov
into
xchg
mov
ins
dec
cmp
test
mov
push
dec
mov
aaa
push
popa
into
aam
pop
retf
idiv
jbe
dec
mov
pushaw
popa
mov
mov
dec
pop
mov
cmp
ds
test
push
jg
neg
inc
inc
add
into
call
hlt
into
push
mov
xchg
into
out
push
jg
dec
push
hlt
pop
into
push
jmp
clc
imul
shr
jno
pop
xor
fstp
std
mov
fstp
aas
and
lods
jns
xor
xchg
inc
cmp
xchg
into
pop
mov
inc
sub
mov
dec
mov
sbb
loopne
and
outs
lock
test
arpl
mov
aaa
or
mov
xor
pop
add
(bad)
sbb
adc
mov
leave
mov
test
mov
xor
cmp
stos
push
dec
into
test
retf
mov
into
jmp
xlat
xor
(bad)
enter
pop
jae
mov
mov
stos
and
jo
and
les
ins
leave
jmp
mov
repz
jle
xor
mov
pusha
or
dec
push
xor
out
int3
pop
pop
das
ja
movs
into
xlat
imul
mov
aas
lahf
mov
sti
jge
cmp
into
mov
(bad)
or
test
lahf
cmp
or
sub
push
inc
out
push
xor
mov
into
sub
movs
mov
lods
in
ins
enter
ja
sub
adc
pushf
xchg
into
dec
movs
pusha
sub
xchg
jmp
pop
mov
hlt
test
out
jecxz
movs
movs
mov
aaa
sti
(bad)
pop
push
adc
and
fdivp
push
mov
aas
shl
into
push
ins
and
popa
mov
jmp
in
push
adc
sub
sub
adc
cmps
dec
xchg
jg
or
fwait
mov
into
mov
sub
dec
lock
cdq
sbb
mov
xor
sub
sub
mov
das
sbb
or
nop
inc
sub
popa
jl
fcmovne
sub
adc
push
into
adc
test
pop
into
mov
cmp
into
sub
jnp
mov
scas
inc
fild
rcr
shl
xchg
jp
pop
add
into
push
cmp
xchg
into
xor
dec
mov
rol
sub
sbb
push
cmp
ror
stos
test
(bad)
out
iret
mov
dec
xchg
(bad)
jl
daa
pop
dec
push
pop
into
xchg
out
test
ds
lea
in
into
mov
fwait
(bad)
dec
push
cmp
push
and
mov
retf
dec
das
test
xor
and
jg
lahf
scas
hlt
lahf
xchg
mov
into
jno
and
mov
xchg
pop
and
mov
add
into
add
stos
test
scas
adc
retf
cmp
mov
jb
loopne
and
jecxz
pop
popa
(bad)
xchg
(bad)
aad
mov
(bad)
pop
dec
push
shl
xchg
add
repnz
pop
pop
fadd
cdq
sbb
and
ret
pop
push
into
xor
dec
sub
adc
sbb
neg
dec
into
(bad)
dec
mov
sub
in
fst
(bad)
movntq
out
lods
sbb
(bad)
pop
fsub
push
std
add
scas
push
push
stos
jno
mov
sub
test
into
(bad)
shl
inc
into
call
push
std
mov
das
mov
ret
into
adc
xor
cmp
push
pop
mov
fisub
jae
out
data16
es
pop
test
sub
add
and
fstp
(bad)
fwait
xchg
loop
stos
sub
add
(bad)
stos
mov
into
retf
sti
mov
push
js
or
dec
(bad)
inc
and
add
scas
pushf
push
xor
ror
xchg
mov
xchg
pop
pop
push
into
jecxz
rol
jmp
xchg
into
pop
inc
(bad)
xchg
add
ja
pop
dec
into
cmp
push
jne
bound
or
movs
fidivr
int
push
jg
out
dec
xchg
out
xor
xor
jo
jmp
pop
popa
(bad)
jmp
add
call
and
nop
into
adc
test
sub
mov
imul
into
push
xor
cmp
mov
dec
xchg
jb
into
pusha
cwde
inc
pop
cmps
fwait
js
sti
iret
or
int
cdq
outs
into
push
mov
arpl
adc
les
in
or
das
jmp
lods
test
sbb
aam
mov
sub
imul
or
jo
stos
dec
cs
pand
stc
into
in
add
call
into
jmp
ror
xor
call
jge
sub
mov
or
pop
jnp
mov
ror
into
and
in
imul
dec
mov
jne
test
mov
pop
push
ds
jmp
mov
stos
mov
imul
into
fs
daa
xor
out
imul
dec
das
inc
xchg
mov
mov
in
jns
or
movs
rcl
lds
xor
nop
cwde
lods
and
into
add
popf
dec
pop
push
into
jl
sti
aam
div
mov
mov
neg
into
lods
pop
mov
add
pop
into
push
sub
add
xchg
aas
xchg
into
or
cld
mov
dec
into
lock
jmp
lods
pop
cmp
and
adc
inc
cmps
out
mov
rol
and
nop
cld
mov
jbe
(bad)
push
jmp
ret
mov
add
aad
loopne
into
mov
cwde
stc
mov
scas
mov
bnd
pop
into
out
call
push
scas
xchg
xchg
xchg
sub
cmp
std
into
pushf
aaa
cli
fistp
mov
inc
adc
push
(bad)
wrmsr
lea
xlat
(bad)
(bad)
pop
xchg
pushf
mov
and
into
sbb
pop
pop
adc
jle
cs
in
into
push
mov
xchg
into
shl
(bad)
pop
out
xor
sub
xor
into
test
mov
mov
push
push
int3
cmp
scas
jmp
shl
fsubr
das
psubsw
inc
js
imul
mov
movs
sbb
bound
cmps
jo
into
ret
dec
xlat
cmc
sbb
push
inc
out
fsubr
xchg
push
adc
test
dec
sub
into
inc
lods
mov
retf
mov
getsec
sbb
into
mov
(bad)
mov
movs
xor
out
call
repz
outs
lea
push
or
xchg
sub
movs
sub
mov
loopne
les
adc
or
sub
outs
dec
imul
sti
rcr
dec
ror
xchg
and
cmp
sbb
ins
into
cmp
inc
pop
je
retf
hlt
jae
es
std
lock
pop
mov
pminsw
addr16
mov
cld
mov
clc
lea
mov
sub
mov
mov
lods
loop
push
lods
repz
and
sub
into
out
daa
imul
ss
jns
clc
mul
pop
push
mov
retf
into
cmp
outs
xchg
mov
addr16
das
sbb
nop
sub
adc
aaa
popf
pop
push
imul
cwde
ror
xor
in
test
xchg
mov
dec
mov
and
into
fnsave
jnp
mov
into
mov
into
daa
pop
xchg
xor
fmul
push
pop
inc
(bad)
loopne
lahf
mov
in
jo
mov
repnz
push
into
popf
sbb
jle
icebp
inc
out
out
xlat
into
aas
test
arpl
(bad)
xchg
in
jne
adc
rol
pop
pop
scas
adc
ins
push
jae
cmp
inc
mov
into
lock
xchg
adc
mov
scas
jmp
jmp
call
into
or
loope
cmc
adc
lea
clc
pusha
fnstcw
int
mov
jns
dec
aad
xor
push
dec
xchg
fwait
dec
or
jecxz
xchg
and
aam
add
xchg
xchg
dec
sbb
mov
fwait
sar
into
sub
mov
(bad)
push
fmul
(bad)
xchg
fcmove
out
lahf
into
pop
xchg
popa
xchg
inc
jae
(bad)
mov
cmp
xor
adc
pop
hlt
mov
into
xchg
(bad)
into
cs
(bad)
outs
loop
xchg
addr16
push
scas
jbe
inc
hlt
mov
fiadd
clc
into
fist
shr
push
xchg
scas
mov
sar
lods
pop
lods
dec
aad
call
mov
pop
add
scas
push
dec
inc
js
pop
(bad)
call
dec
xchg
adc
xchg
arpl
into
jb
mov
into
icebp
imul
pusha
test
lds
inc
adc
into
xchg
clc
test
mov
adc
call
scas
sub
into
mov
xor
into
mov
add
ficomp
mov
shr
xchg
out
ins
mov
mov
into
sbb
scas
outs
aam
into
in
lock
cmps
test
(bad)
and
jg
sub
test
jecxz
aas
pop
into
push
mov
mov
push
or
cmps
xchg
and
dec
cmp
sub
in
jns
or
in
push
in
repnz
out
test
push
cmps
jp
je
div
movs
pushf
aas
aad
pop
or
fwait
repnz
jmp
pop
push
test
inc
jae
test
pop
fsetpm(287
into
add
adc
scas
add
test
dec
ins
pminsw
jne
jbe
lods
cmps
mov
popa
rcr
jg
out
lods
sub
push
into
or
dec
xchg
xchg
sbb
pop
sbb
pushf
mov
adc
mov
shl
dec
into
bound
xor
adc
outs
xchg
test
movs
das
scas
mov
addr16
mov
loopne
cmps
fwait
test
je
enter
cmovno
mov
xlat
pop
sahf
cli
mov
cmp
call
(bad)
repnz
sub
xchg
cld
test
aaa
enter
ret
sbb
cmps
stc
add
push
jnp
cdq
shl
mov
aas
or
fdiv
cs
data16
sbb
xor
jne
pop
fidiv
cmp
scas
hlt
and
test
into
shr
rcl
lock
add
into
mov
xor
add
into
lods
sbb
pusha
sub
mov
sbb
sub
int3
mov
out
sbb
cmc
bound
add
mov
loopne
into
xlat
jecxz
sbb
mov
xor
inc
push
ja
cli
cdq
into
out
adc
xlat
xchg
into
dec
mov
mov
arpl
ja
push
and
das
(bad)
es
mov
clc
scas
cmp
lahf
(bad)
sub
adc
mov
jae
lods
push
dec
xchg
dec
xor
scas
lods
jge
stos
mov
jno
adc
jp
xlat
into
div
aaa
ror
xchg
bound
mov
clc
loope
push
sub
nop
test
stc
repnz
into
les
push
sbb
outs
push
test
or
call
adc
lods
mov
int3
mov
sbb
retf
push
(bad)
loopne
aad
fdiv
outs
ja
jb
into
xor
sar
mov
bound
xchg
ret
test
pop
into
clc
das
sbb
mov
mul
cmp
jle
daa
out
std
mov
add
lods
jg
and
and
mov
lods
mov
mov
(bad)
outs
mov
pop
mov
ja
fsubr
push
mov
loop
mov
pop
inc
into
add
fdivr
add
push
dec
out
pusha
cmps
dec
retf
mov
dec
or
add
test
mov
popf
dec
jp
sbb
jecxz
sbb
rcl
dec
push
in
dec
test
stos
into
xchg
loopne
lods
pushf
pop
xchg
lods
cmps
shr
ins
xor
xchg
pop
xor
mov
daa
sbb
fisubr
nop
jg
sbb
bound
clc
sub
stos
std
sahf
xchg
in
add
inc
pop
loopne
jge
and
into
adc
mov
sub
dec
retf
pushf
es
aaa
and
mov
push
dec
push
into
jo
jbe
pop
enter
stc
push
(bad)
lods
fadd
into
mov
or
adc
ins
adc
jb
cmp
cmp
inc
aad
into
pop
fs
and
mov
in
imul
jecxz
ja
lods
jne
leave
jo
ret
(bad)
add
jae
mov
or
inc
into
and
adc
adc
cs
iret
pop
mov
scas
repz
jp
outs
aad
mov
jmp
(bad)
mul
mov
xchg
cmps
pop
in
out
xchg
call
sbb
mov
mov
push
xor
out
adc
fsub
shr
pop
arpl
xor
into
pop
mov
lods
cmps
sub
mov
aam
xor
sbb
pop
std
icebp
cmps
xchg
sbb
xchg
test
jmp
pushf
sub
retf
mov
movs
bound
iret
sbb
retf
inc
loope
xchg
int
push
test
mov
rcr
xlat
add
into
je
sbb
mov
(bad)
fsubp
sahf
jmp
std
movlps
pop
mov
into
sahf
xor
sbb
stos
int3
(bad)
js
dec
push
cmp
mov
mov
xchg
mov
es
loope
or
sbb
into
sub
hlt
xor
mov
push
cmp
(bad)
into
int
cld
jo
bound
xchg
(bad)
out
pop
ss
inc
xchg
jno
sub
retf
push
int
clc
xchg
daa
xchg
dec
jnp
cwde
inc
xchg
sub
xchg
xor
movs
movs
inc
in
jne
push
mov
jae
(bad)
jge
int3
push
into
push
sub
mov
xor
inc
inc
xchg
stos
cmp
out
repz
push
leave
xchg
out
imul
dec
scas
movs
into
cmp
jno
mov
push
mov
bound
aam
in
pop
xchg
into
mov
out
into
out
jbe
or
fidiv
and
jg
xor
mov
loopne
lods
cmp
arpl
stos
and
icebp
into
sub
addr16
pop
rcl
cmps
lods
mov
adc
out
jno
xor
in
lahf
in
into
aam
fnsave
mov
push
iret
mov
and
test
retf
cmp
mov
(bad)
and
fcmovb
cmp
fiadd
xchg
shl
lods
or
mov
dec
test
pop
sti
jp
mov
mov
push
bnd
or
mov
mov
mov
add
jmp
push
mov
xchg
cmp
xchg
mov
jge
mov
jl
xor
into
xchg
push
mov
ds
into
ins
call
cmp
ret
aaa
ins
lods
mov
test
mov
mov
adc
mov
into
into
or
aaa
sahf
dec
xor
lock
and
jmp
cs
into
dec
(bad)
sub
and
scas
mov
or
pop
push
into
fdivr
pop
dec
into
test
scas
mov
adc
(bad)
addr16
adc
shl
fsubr
jns
mov
into
popa
jne
push
adc
and
mov
into
test
mov
scas
mov
mov
fiadd
shl
data16
int3
fidiv
mov
mov
cmp
div
mov
fsubr
push
(bad)
mov
shr
fnsave
or
dec
out
movs
hlt
mov
mov
pop
repz
xchg
into
sbb
into
jno
lods
mov
mov
mov
pop
mov
jae
fmul
outs
xchg
clc
movs
scas
scas
adc
lea
fisubr
outs
into
inc
or
adc
push
movs
pop
sub
inc
inc
inc
pop
test
or
jno
mov
mov
stos
sub
outs
fwait
shr
into
inc
ins
enter
lahf
dec
into
add
(bad)
lods
aam
push
repnz
shl
repnz
enter
(bad)
into
iret
rcl
adc
or
add
jbe
(bad)
in
test
test
or
add
dec
or
(bad)
and
into
ret
and
bound
sub
cmovge
mov
stos
xchg
mov
xchg
jne
pop
repnz
shl
sbb
add
loopne
cmp
(bad)
lahf
sbb
xchg
dec
fnstcw
or
sbb
jg
nop
sar
add
into
fwait
xor
ja
mov
cmp
rol
sub
cmp
dec
jl
test
push
into
and
pop
scas
into
jns
aam
enter
lods
js
sbb
aad
out
dec
cdq
(bad)
scas
push
pop
in
mov
int3
(bad)
sbb
addr16
into
loop
xrelease
adc
into
push
add
into
jnp
movs
ss
call
retf
dec
lods
loopne
out
aad
sahf
into
out
xlat
test
into
xchg
(bad)
retf
cmp
into
hlt
fist
push
adc
leave
scas
inc
sahf
clc
scas
not
inc
shufps
inc
add
sub
mov
xchg
retf
cli
xor
test
(bad)
jb
adc
(bad)
enter
lods
ds
les
dec
and
test
movs
cmp
mov
stos
push
std
arpl
rcl
inc
pop
jge
into
xchg
lods
aam
mov
leave
inc
out
cld
mov
clc
cmps
repnz
mov
cmp
enter
pop
adc
nop
jae
push
lods
lahf
mov
dec
inc
lods
push
daa
add
shl
repnz
pop
and
popa
lods
fdiv
lods
int3
dec
mov
(bad)
fidiv
out
cmc
outs
or
arpl
into
bound
jecxz
jae
ficomp
mov
or
sbb
into
jae
(bad)
adc
mov
bnd
scas
push
adc
into
pop
cmps
xchg
adc
cli
into
minps
jl
std
into
fist
rcl
call
add
in
lock
xchg
and
dec
out
xor
rcr
or
imul
fiadd
sub
rcl
popf
xchg
inc
into
add
jae
mov
pop
call
hlt
mov
lods
cmp
add
test
pop
sti
sbb
scas
push
fsub
inc
test
xor
loop
out
pop
adc
pop
mov
mov
adc
adc
xchg
pop
shr
out
xchg
dec
into
push
stos
mov
inc
cmp
fsub
and
push
ud2
lock
into
fisub
shl
mov
daa
outs
dec
dec
sbb
into
xor
std
sub
pop
mov
aas
xchg
pop
adc
dec
fucomip
dec
das
repnz
stc
and
jb
pop
call
movs
lahf
xchg
std
lods
sub
adc
cmp
mov
dec
into
sub
imul
mov
sbb
mov
test
push
leave
pop
mov
cmp
into
lahf
jmp
push
daa
into
inc
js
ja
push
test
into
in
es
xor
dec
or
jle
jl
int3
pop
ja
lods
jmp
push
lea
(bad)
push
sub
mov
imul
into
pusha
repnz
jns
scas
mov
mov
pop
sub
in
pop
inc
test
dec
xor
inc
stos
mov
jnp
(bad)
aad
sbb
repz
out
add
xor
lds
jge
daa
dec
mov
or
pop
outs
into
and
outs
lods
inc
pop
adc
into
mov
push
pop
pop
and
out
shl
push
fidivr
lahf
mov
xchg
pop
cdq
into
les
and
fs
mov
in
into
and
in
nop
jbe
sub
stos
dec
dec
push
arpl
test
xchg
adc
xor
(bad)
out
lahf
into
adc
mov
cmc
out
cmps
push
into
xor
xlat
je
push
and
test
(bad)
dec
and
(bad)
into
addr16
lds
pop
mov
xchg
xchg
add
sub
xor
pop
cmp
arpl
sub
out
pop
mov
loope
fild
stos
add
dec
xor
loope
mov
stos
sar
cmc
push
dec
add
into
pop
inc
je
outs
push
imul
xchg
out
adc
adc
sub
fwait
lea
into
std
or
inc
into
push
sbb
inc
(bad)
fisttp
xchg
mov
(bad)
fstp
test
jb
mov
stos
cmp
test
aas
inc
lods
sub
retf
fwait
pop
emms
push
into
jl
jae
dec
loopne
fcom
lods
mov
mov
hlt
sbb
jmp
bound
or
add
into
adc
into
or
dec
pop
test
mov
mov
jmp
popf
mov
mov
in
shr
into
fisub
(bad)
sahf
iret
push
ins
pop
fwait
into
pop
imul
pop
sahf
jns
lea
into
push
gs
mov
ins
std
into
jno
ins
cmp
inc
into
inc
or
scas
ret
stc
je
push
(bad)
dec
fdiv
(bad)
leave
dec
push
(bad)
lods
pop
xlat
cmc
push
xor
or
mov
scas
aad
rcl
mov
push
(bad)
into
lahf
mov
fcmovnb
push
mov
xor
mov
xchg
cmps
in
or
fs
mov
into
out
xor
f2xm1
or
test
add
or
pop
shl
into
inc
or
sub
pop
mov
fld
xchg
jo
into
leave
outs
loop
daa
ror
push
les
fdivp
add
cmps
dec
adc
ret
call
push
mov
enter
(bad)
xchg
pop
mov
in
data16
fadd
into
out
jnp
bound
into
imul
outs
jns
lea
dec
jb
retf
into
(bad)
setne
std
adc
sar
pop
jne
jnp
mov
jmp
shr
cs
ins
inc
xlat
fcom
ss
into
lock
jo
adc
imul
cmps
pop
push
cs
outs
add
rcl
into
adc
out
rol
mov
in
push
lahf
pop
dec
leave
loop
jns
push
xchg
into
mov
rol
retf
outs
push
xchg
stos
pop
cli
je
test
and
leave
jl
cmp
jns
jne
js
add
mov
and
jl
sub
or
push
enter
pusha
aaa
js
sub
ja
xor
mov
mov
mov
call
mov
or
push
and
out
stos
shl
cld
xchg
neg
push
call
mov
daa
inc
cs
mov
stc
out
mov
pop
into
push
fidiv
stos
mov
jl
dec
(bad)
gs
lea
sbb
push
sahf
into
mov
lods
dec
inc
cmp
adc
jl
sti
mov
mov
test
pop
push
add
push
fisub
lahf
jge
mov
clc
lods
into
sub
fcom
outs
xchg
sub
cmp
inc
push
fwait
into
xchg
adc
addr16
push
pop
into
movs
or
sub
mov
mov
sahf
pop
add
dec
or
push
das
sub
and
jae
out
hlt
repnz
mov
shl
into
jecxz
pop
inc
cmp
into
cld
shl
outs
adc
into
les
in
dec
fwait
adc
into
fnstenv
and
test
xchg
sub
(bad)
into
shr
std
jae
mov
xor
(bad)
into
jbe
xlat
loopne
add
addr16
pop
mov
pop
sbb
push
mov
lods
in
sbb
xlat
js
into
or
sub
and
mov
std
jmp
inc
loopne
int
add
mov
jb
push
pop
xchg
das
mov
scas
push
imul
scas
into
int
sbb
push
cmp
shl
rsqrtps
(bad)
into
mov
inc
ror
mov
out
jp
into
mov
addr16
packuswb
cmp
dec
cmps
jl
pop
dec
or
into
pop
jno
outs
div
jns
into
gs
movs
sar
push
inc
cmp
iret
into
loopne
clc
imul
xor
add
xchg
in
loop
jbe
push
addr16
dec
outs
cmp
leave
adc
sub
retf
arpl
mov
and
jecxz
rcr
jmp
dec
dec
pop
push
inc
pop
pop
scas
loop
inc
mul
cmps
dec
rcr
mov
fist
add
scas
je
push
xlat
dec
sub
sbb
addr16
dec
mov
mov
and
cmp
lods
cmp
jo
movs
cmp
into
call
pop
into
mov
add
jecxz
scas
enter
xlat
cmps
mov
sbb
fdiv
pop
imul
add
pushf
lods
push
fild
in
lods
dec
pop
jb
into
popa
call
call
shl
xor
xchg
enter
pop
push
cli
pusha
les
mov
aas
xchg
mov
fimul
not
adc
into
mov
xchg
shr
repnz
mov
das
leave
lahf
cmps
sub
pusha
into
repz
and
mov
mov
into
dec
imul
pushf
out
or
sbb
sub
std
dec
cwde
dec
mov
bound
add
into
sub
cmp
jnp
sbb
cdq
loope
scas
inc
mov
ror
pop
into
fnstcw
or
js
or
sar
push
stos
mov
mov
cmps
loope
call
inc
scas
mov
jnp
in
dec
scas
popf
in
into
int3
lahf
add
mov
inc
into
cmps
cwde
stos
pop
and
mov
(bad)
rol
sbb
(bad)
adc
stos
jae
call
and
mov
fsubr
pop
sub
mov
mov
in
(bad)
into
imul
repnz
into
jae
in
mov
scas
repz
mov
push
into
popf
push
sub
inc
loope
push
lods
dec
xchg
push
(bad)
arpl
out
mov
out
fcomp
lods
aas
pop
sub
jns
dec
mov
sub
cmps
mov
lods
sub
scas
(bad)
adc
and
retf
js
ret
cwde
sar
cmp
and
xchg
outs
mov
and
dec
lock
lds
repnz
xor
and
xor
sub
lods
aas
push
pop
bound
int
pushf
es
outs
cmp
jno
dec
mov
xchg
adc
scas
fistp
pushf
out
data16
mov
xchg
push
leave
mov
fisub
test
jmp
jg
push
sub
(bad)
sbb
pop
mov
test
pop
pop
lods
inc
test
push
mov
or
cmp
lods
pop
fdivr
xchg
(bad)
sti
mov
or
scas
out
adc
cmp
std
cmp
stos
lock
mov
fwait
(bad)
fisubr
cmp
sahf
mov
test
into
daa
ds
xchg
mov
mov
test
mov
or
xor
jge
int3
mov
les
sti
pop
adc
sbb
mov
mov
dec
loopne
xor
and
mov
jecxz
out
push
cli
into
dec
sub
sti
and
lods
mov
loop
out
jns
jnp
repnz
mov
bound
xchg
lahf
push
jle
shr
mov
adc
fucomi
dec
pop
lahf
mov
mov
dec
inc
adc
inc
pminub
daa
dec
scas
(bad)
out
inc
mov
add
pcmpeqb
popf
into
pop
lock
scas
or
push
sub
in
and
adc
scas
cmc
mov
xchg
push
add
repz
cwde
aam
das
adc
and
adc
into
push
ds
mov
xchg
xor
into
(bad)
(bad)
div
xchg
fwait
mov
dec
mov
(bad)
aad
js
cs
or
and
lods
ret
push
cmps
into
jno
pextrw
lods
jmp
push
push
es
in
idiv
push
xor
jae
mov
mov
push
mov
cmp
ins
cmps
push
data16
seta
popa
aam
(bad)
xor
cld
or
(bad)
xchg
inc
fmul
pop
into
sub
nop
pop
mov
pop
bswap
ja
sti
lods
test
jg
mul
(bad)
into
mov
(bad)
lock
push
into
push
enter
sbb
adc
push
into
push
push
adc
pop
pop
mov
mov
jmp
rcr
ret
je
retf
inc
adc
dec
xor
mov
xor
out
push
dec
into
leave
cs
stos
movs
jne
into
xchg
xor
adc
jecxz
pop
add
sub
fild
add
dec
outs
arpl
inc
ins
ins
outs
arpl
jmp
lea
ja
pusha
pusha
bt
stc
sub
shld
cmc
shrd
sub
add
jmp
clc
mov
add
add
add
add
add
add
test
add
add
add
add
stc
cmp
add
add
mov
add
add
movs
cmp
add
add
jl
cmp
add
add
inc
jo
add
add
add
add
add
add
add
add
or
add
mov
add
add
mov
add
or
cmp
adc
sub
mov
cli
cmp
(bad)
add
add
add
mov
cmp
out
retf
jne
neg
mov
sbb
je
popa
push
mov
xor
retf
push
scas
fwait
in
jae
jmp
add
test
les
retf
or
in
cmp
pop
ficom
fisub
mov
daa
daa
nop
fsub
jnp
mov
(bad)
mov
lods
push
jp
mov
push
mov
cmps
jmp
icebp
sbb
add
inc
or
push
cmp
sar
pop
mov
pop
je
push
call
sub
bnd
push
cli
dec
cmp
pop
push
pop
add
fdivr
mov
ja
retf
test
in
mov
push
jnp
popf
clc
jne
out
aad
stos
cli
sub
xchg
or
outs
ror
addr16
(bad)
xor
aad
loope
inc
jp
leave
push
sbb
movs
mov
outs
pushf
adc
imul
add
mov
stc
xchg
xor
ins
mov
nop
retf
adc
pop
outs
xchg
rcr
mov
pop
fld
in
xchg
dec
int3
stos
loope
outs
jae
push
inc
ins
(bad)
mov
stos
out
cmp
sbb
popf
cdq
rcr
shr
jecxz
in
loopne
jg
mov
clc
loopne
enter
sub
movs
shl
dec
int3
test
mov
add
shr
fadd
mov
and
loop
cmps
and
sahf
ja
cmps
xor
dec
daa
mov
push
(bad)
outs
xchg
cmp
pop
scas
outs
lds
jb
or
loope
sbb
xchg
cmc
sbb
jmp
out
aas
sahf
iret
cmp
mov
(bad)
xor
hlt
inc
inc
cmps
mov
push
push
daa
call
xor
sub
shl
xchg
push
dec
adc
cld
sahf
aad
mov
test
fcmovb
pop
dec
add
je
mov
and
sbb
push
fs
add
xchg
scas
hlt
sti
call
jmp
sub
mov
rcl
push
dec
dec
dec
dec
cs
ins
add
rcr
(bad)
cs
cmp
and
test
clc
or
not
push
mov
aaa
imul
fadd
dec
ja
dec
outs
mov
sbb
dec
outs
adc
push
mov
pushf
pop
xor
out
and
fidiv
xchg
sti
jge
cdq
retf
add
lods
or
mov
jne
fdivr
fdiv
xchg
stc
scas
lods
fwait
mov
call
pushfw
inc
test
and
iret
cmp
pushf
call
mov
pushf
call
not
mov
not
mov
pusha
pushf
jmp
mov
cmp
or
xchg
add
xor
jns
add
xchg
(bad)
mov
fnstsw
cmp
cmp
dec
pop
pop
dec
and
ins
aas
out
xor
movs
call
pop
nop
mov
xor
out
in
dec
push
in
inc
lods
int3
arpl
mov
ficomp
icebp
mov
xchg
ins
repnz
lds
test
jecxz
inc
push
adc
imul
call
loope
dec
mov
add
jmp
inc
pushf
pop
jo
movs
add
ss
nop
(bad)
hlt
bound
xor
retf
jecxz
ins
lods
in
repz
sbb
out
mov
xchg
and
loop
idiv
adc
adc
cmp
adc
pushf
je
mov
stc
ret
cmps
ins
outs
fdivr
pop
or
xchg
int3
lods
iret
stos
je
lods
ret
push
jae
retf
cmp
inc
fdivr
jmp
int3
sub
inc
lock
or
pop
push
shl
mov
and
inc
jl
(bad)
fist
mov
frndint
push
xchg
cmp
dec
xchg
fdivr
inc
fwait
fwait
or
mov
shr
cdq
mov
cmps
sbb
push
dec
cmps
or
scas
jns
jns
loope
sbb
sub
cmp
push
sti
inc
inc
dec
xor
cs
ins
add
cdq
cmp
ins
retf
adc
push
dec
out
jp
jecxz
pop
(bad)
xchg
rol
(bad)
(bad)
jmp
ficomp
add
cmp
and
je
cmps
cmp
in
mov
mov
push
mov
pop
mov
push
push
xchg
imul
jle
jge
aam
emms
inc
call
out
jnp
jecxz
shl
cmp
into
lea
cmp
(bad)
xor
out
or
push
ins
push
ja
jno
scas
cld
xchg
loopne
adc
adc
push
jmp
xchg
dec
(bad)
movs
inc
mov
scas
or
or
mov
scas
call
fbld
cld
je
xchg
xchg
test
xor
and
push
mov
out
cli
inc
enter
cmp
mov
ins
addr16
pop
cmp
stos
pop
cmp
cld
mov
js
bound
jmp
enter
outs
push
dec
ret
call
add
sub
call
cmps
mov
call
aad
inc
push
mov
fist
add
iret
retf
out
nop
mov
(bad)
adc
sahf
shr
adc
inc
xlat
jle
mov
mov
daa
jle
sbb
mov
cmp
jns
or
lds
outs
jmp
mov
scas
adc
adc
dec
mov
cdq
out
hlt
xchg
inc
inc
test
sbb
push
pop
xchg
(bad)
shl
aas
push
mov
mov
add
shr
call
shl
aas
or
lock
jae
mov
jo
je
adc
hlt
call
xchg
rol
clc
aas
mov
jg
mov
test
sub
dec
dec
sbb
lods
push
cli
xchg
loopne
pop
test
mov
mov
fnstcw
jne
adc
xor
bound
jae
cmp
add
jnp
fsubr
pop
or
retf
leave
iret
out
xchg
pusha
into
sub
pop
hlt
or
mov
mov
add
sar
call
cwde
dec
in
or
adc
enter
mov
les
icebp
mov
push
dec
outs
leave
outs
dec
stc
lds
sbb
(bad)
lock
(bad)
mov
mov
adc
outs
mov
imul
enter
xchg
popf
sub
fsub
xlat
xchg
cmc
popf
icebp
adc
and
push
pop
(bad)
rcr
mov
mov
div
and
mov
adc
cmc
add
lods
add
je
or
stos
push
jb
xchg
or
inc
jl
sbb
mov
push
mov
out
push
push
fxch
aas
arpl
cmps
adc
xchg
cmp
jmp
push
inc
sbb
cmp
add
or
and
mov
jbe
sub
mov
and
adc
into
add
dec
and
clc
fcomp
int
pop
lahf
dec
or
and
or
arpl
dec
js
cmp
mov
mov
das
xor
push
fsubp
int3
mov
shl
inc
loope
ss
inc
imul
mov
xchg
fadd
xchg
and
lds
or
imul
pusha
push
repz
and
mov
add
lea
std
mov
ret
mov
xor
popa
jmp
enter
daa
inc
pop
xchg
ret
mov
dec
xchg
scas
xchg
jmp
lea
jne
rcl
jmp
pushf
sub
cmp
repnz
pusha
lea
jne
rol
call
(bad)
sbb
and
rcl
cdq
mov
cmps
jns
mov
mov
push
test
(bad)
mov
cmp
adc
imul
add
loopne
cmp
dec
fs
or
out
leave
jno
push
add
ret
out
xor
cmps
sub
repnz
adc
mov
jle
cmps
(bad)
cmp
or
add
icebp
imul
pop
lahf
movs
and
xchg
pop
add
and
adc
je
sti
dec
push
and
call
out
retf
leave
adc
sbb
xor
loopne
xchg
mov
aas
cmp
or
pusha
jnp
ins
dec
(bad)
mov
leave
lock
fmul
ja
lods
add
mov
fcmovnu
lods
(bad)
mov
add
imul
popf
pop
inc
pop
(bad)
inc
mov
shl
mov
mov
push
movs
pusha
lea
jae
push
xchg
pusha
mov
call
push
pushf
push
inc
call
push
imul
clc
bt
add
push
push
lea
jmp
lea
jne
cmc
btr
inc
mov
clc
rol
pusha
sub
pop
pusha
shrd
inc
lea
stc
bt
sub
bt
clc
push
pop
push
jmp
rcr
movzx
mov
clc
sub
xadd
pushf
mov
add
shl
mov
bt
mov
bt
cmp
clc
not
test
cmc
cmc
add
call
fmul
push
and
out
pop
ja
inc
adc
sub
mov
mov
(bad)
rcl
mov
sbb
pop
add
sbb
sbb
loope
fwait
cmc
mov
cmp
fst
cs
js
test
mov
aas
int
add
(bad)
ret
xchg
push
(bad)
enter
pop
or
jmp
jne
shl
addr16
dec
out
mov
(bad)
mov
push
lea
mov
and
mov
or
xchg
dec
inc
je
ds
sub
lods
and
and
lods
push
(bad)
sar
mov
ror
movs
shld
clc
dec
fst
jmp
iret
addr16
clc
and
rcl
lock
(bad)
mov
inc
mov
xchg
pusha
adc
dec
or
lods
cs
ss
xlat
test
iret
pop
mov
and
inc
mov
dec
es
fwait
outs
jle
jg
pop
test
call
sub
inc
mov
bound
and
sbb
mov
mov
jae
mov
mov
(bad)
outs
mov
mov
lahf
stos
jl
cmps
dec
out
imul
(bad)
mov
out
pop
imul
aad
(bad)
lahf
or
(bad)
mov
push
mov
in
jg
dec
sub
mov
in
xor
adc
jnp
jns
cdq
mov
icebp
mov
(bad)
call
mov
adc
cs
xchg
jg
fistp
fldenv
es
xchg
(bad)
mov
push
mov
inc
mov
lahf
pop
xor
out
mov
out
(bad)
movs
jo
jle
cmp
popa
out
push
cmp
clc
es
jns
mov
outs
cmps
(bad)
shl
cmps
xchg
scas
out
imul
cmps
xor
mov
(bad)
pop
ret
adc
and
stos
outs
sub
add
and
sub
fstp
das
dec
adc
call
mov
fnstcw
adc
xchg
rcr
aas
out
mov
push
or
in
enter
sar
pop
mov
sub
(bad)
mov
out
cmp
out
repz
cli
cmp
lahf
fisub
fsub
aas
push
scas
inc
dec
and
sahf
mov
sub
(bad)
imul
movs
adc
sub
jnp
fwait
push
test
xchg
fisubr
neg
inc
outs
dec
cmp
ret
or
les
ror
call
scas
ds
mov
lds
ds
jnp
aaa
outs
ret
jmp
scas
sub
xchg
and
sbb
mov
(bad)
mov
(bad)
(bad)
dec
stc
and
lods
enter
stos
jg
mov
(bad)
loope
xchg
loopne
sahf
imul
add
out
add
dec
mov
and
leave
cmps
xchg
into
leave
lods
test
icebp
mov
data16
jge
xchg
and
(bad)
sbb
iret
mov
xchg
adc
pop
test
loopne
sti
shl
xlat
or
mov
in
lahf
xor
call
inc
mov
lahf
mov
xchg
adc
in
jg
out
dec
outs
jp
retf
pop
(bad)
adc
daa
inc
cmps
mov
xchg
or
aad
add
and
mov
aas
xchg
push
mov
adc
daa
shl
inc
sar
xchg
cmps
(bad)
jge
mov
addr16
mov
(bad)
xor
scas
daa
cs
lods
js
dec
pop
mov
inc
fs
or
outs
mov
add
pop
lahf
inc
fst
in
sti
scas
lods
in
add
scas
cmp
imul
stc
ret
in
cld
cmps
fs
mov
shl
jmp
setl
dec
mov
test
sar
out
jl
test
jmp
adc
add
nop
out
neg
cmp
shr
and
mov
call
es
jg
outs
daa
sub
mov
cwde
(bad)
jns
jle
stos
mov
(bad)
scas
add
mov
call
pop
inc
test
inc
mov
out
or
fs
xor
mov
es
mov
xor
mov
in
inc
cmps
rcl
and
push
mov
cmc
push
push
jle
jb
inc
std
xchg
arpl
pushf
bound
arpl
mov
sub
or
in
out
stos
leave
cdq
mov
adc
in
(bad)
(bad)
out
jp
sbb
sub
jnp
mov
jecxz
es
nop
cld
in
mov
(bad)
(bad)
cli
lods
das
cmps
(bad)
xchg
dec
sti
(bad)
xor
cdq
in
test
out
scas
and
xor
mov
jmp
push
sub
mov
scas
jno
clc
and
movs
arpl
out
mov
push
and
push
clc
pop
push
and
(bad)
cmp
push
cwde
sub
scas
mov
sar
inc
pop
adc
cmps
ja
sub
scas
stc
lahf
popf
pushf
mov
push
scas
in
cld
frstor
dec
arpl
xor
sub
mov
lahf
mov
jnp
ins
cmps
dec
cwde
lds
das
repz
sub
lahf
neg
adc
test
mov
sar
addr16
mov
lock
repz
mov
mov
lods
jns
(bad)
shl
das
cld
repnz
and
jmp
and
test
pop
sar
and
in
xchg
fadd
cli
inc
in
xchg
push
push
pushf
fldenv
stos
fwait
scas
imul
mov
push
mov
nop
test
outs
aaa
scas
mov
xor
xchg
fsubr
push
scas
or
jle
lds
aad
push
sar
xchg
sub
shr
stc
leave
call
cmc
mov
cwde
(bad)
(bad)
jg
test
jg
leave
les
mov
clc
push
dec
scas
push
in
push
shr
cmps
ins
add
lods
daa
mov
mov
add
lea
inc
mov
and
sbb
pop
sub
lds
out
cld
pop
cmps
loop
imul
mov
jge
xchg
ja
sub
add
xor
push
lds
and
sub
inc
push
and
or
ins
fisubr
jle
(bad)
adc
push
mov
mov
mov
cmp
inc
cmp
popf
xor
xor
fidiv
inc
gs
fisubr
add
push
sub
xor
pop
scas
mov
fmulp
ja
jmp
inc
test
daa
mov
pop
xor
add
push
jle
sub
popa
jle
sbb
sub
arpl
mov
pop
stos
xor
arpl
ins
inc
inc
repnz
pusha
xchg
cs
ja
sti
stos
nop
sub
mov
icebp
stos
pop
call
fdiv
jne
pusha
and
mov
retf
lahf
add
mov
test
in
mov
lea
mov
fs
push
in
(bad)
mov
cmps
mov
mov
shr
or
pushf
test
push
out
sbb
sbb
(bad)
es
push
inc
pop
mov
rcr
ins
cmp
mov
dec
jecxz
jmp
sbb
dec
fwait
adc
cmps
das
into
dec
add
sbb
jmp
cwde
in
pop
add
(bad)
fstp
bound
mov
shl
imul
dec
jge
sub
jg
ins
(bad)
push
sbb
iret
mov
es
mov
and
mov
das
(bad)
mov
lds
leave
(bad)
sbb
sub
into
fwait
xchg
in
mov
enter
mov
cli
les
adc
call
pop
or
das
(bad)
sub
xchg
xchg
test
scas
mov
lods
mov
fisubr
add
pop
add
mov
jno
xchg
(bad)
dec
icebp
mov
jmp
xchg
jb
mov
mov
mov
dec
(bad)
shl
jae
sub
mov
xchg
imul
stc
or
aam
push
fcom
bound
dec
mov
iret
adc
ffreep
imul
lods
sbb
xor
outs
jl
sbb
inc
shl
cmp
pop
xchg
out
(bad)
js
pop
stos
add
mov
inc
into
mov
not
push
mov
psubb
adc
pop
xchg
mov
add
lods
daa
push
(bad)
dec
fldenv
aad
dec
xor
(bad)
fbstp
xchg
es
sub
fsubr
push
cmc
lods
dec
adc
std
ins
or
data16
in
jge
xchg
sub
cmp
out
mov
sbb
jo
or
(bad)
cdq
mov
mov
outs
lds
jp
add
or
jp
into
jmp
enter
jbe
std
ja
jg
mov
ins
(bad)
add
test
mov
jecxz
leave
mov
outs
adc
mov
retf
bswap
into
lods
and
jecxz
cmp
and
ffree
push
test
movs
mov
push
into
pop
gs
sub
hlt
cmps
(bad)
aas
or
inc
cmp
and
(bad)
sar
sub
inc
sbb
jb
and
stos
mov
jnp
call
ins
add
test
pusha
jg
inc
mov
ror
jne
inc
and
pushf
add
add
and
outs
call
mov
loopne
xor
jns
outs
mov
(bad)
imul
xchg
xchg
mov
jno
push
mov
(bad)
lea
inc
int
dec
shr
and
jmp
call
je
jmpw
dec
jmp
pop
(bad)
mov
leave
and
popf
mov
pop
ret
popf
mov
dec
and
cmp
mov
pop
loopne
jecxz
mov
add
(bad)
sti
popf
loopne
cmps
enter
mov
mov
lods
mov
aam
xchg
(bad)
fdivr
shr
pop
cmp
dec
push
add
hlt
bound
retf
adc
int
sahf
inc
add
stos
and
scas
mov
dec
mov
cmp
scas
lock
(bad)
int3
xchg
mov
clc
mov
lds
addr16
mov
jmp
sbb
cmps
inc
and
daa
jmp
jge
retf
inc
pop
jge
push
bound
mul
and
leave
mov
jp
jmp
mov
outs
inc
mov
das
ror
mov
lock
imul
fs
outs
jecxz
repz
and
jmp
addr16
cs
pop
sahf
push
jge
xor
lock
and
in
retf
add
popa
xchg
pop
(bad)
iret
stos
adc
test
pop
retf
gs
and
xor
inc
mov
dec
inc
mov
jle
stc
out
ins
sbb
test
cmp
push
loope
sahf
cmp
outs
arpl
jae
aas
jmp
jmp
retf
adc
sub
retf
scas
jmp
(bad)
(bad)
enter
lea
xchg
inc
data16
fcomi
in
lds
push
jp
inc
sahf
das
(bad)
and
xor
movs
cmps
mov
mov
test
add
xchg
dec
loop
nop
and
cs
inc
outs
sub
cwde
and
(bad)
loope
cmps
cld
(bad)
and
fsub
not
in
scas
in
mov
jl
sbb
data16
stos
pusha
add
or
fsub
push
lods
xchg
mov
dec
rcr
cmc
or
movs
lods
lods
mov
mov
pusha
mov
pop
das
sti
xchg
movs
cld
les
jg
jae
test
cdq
les
jmp
rcr
sbb
dec
imul
xchg
or
stos
in
hlt
lods
or
push
ds
jge
mov
jmp
xchg
rcl
out
inc
scas
xchg
jbe
inc
mov
gs
inc
inc
popa
stos
in
arpl
lds
jl
add
and
inc
bound
neg
(bad)
push
cmp
jbe
jmp
ja
mov
in
(bad)
mov
fmul
inc
sar
dec
push
mov
mov
xlat
pop
mov
movs
and
mov
mov
inc
push
inc
pop
inc
pop
inc
dec
mov
paddusb
adc
es
movs
jge
data16
std
shr
push
xchg
or
sar
out
dec
hlt
loop
sahf
pusha
xlat
jae
div
pop
out
xor
jle
das
cmp
cmp
test
iret
and
mov
cmp
cwde
push
jnp
lock
mov
arpl
mov
pop
mov
dec
pusha
jg
rcl
neg
test
cmps
test
ins
(bad)
sub
mov
xchg
les
xchg
mov
mov
jg
xchg
scas
leave
shl
call
mov
push
sub
in
cmp
push
fwait
rol
movq
enter
sbb
jne
jg
(bad)
stos
jo
div
pop
movs
dec
ror
in
cmp
jl
punpckhwd
push
mov
and
outs
add
sub
push
movs
xor
or
outs
xchg
mov
lds
add
jno
mov
movs
jge
push
stos
icebp
mov
xor
sub
mov
call
sti
add
es
mov
outs
xor
push
stc
push
in
and
test
cmps
or
aam
xchg
fbstp
repnz
inc
dec
int
pop
push
popa
or
fnstsw
mov
(bad)
sub
or
scas
movs
sbb
dec
idiv
xchg
sub
mov
dec
jae
jne
cmp
ins
cld
mov
pop
(bad)
ins
cmp
mov
lock
sub
or
sti
lahf
jmp
pop
cmp
loope
rol
jmp
pop
cmp
pop
icebp
cmp
mov
test
aam
pusha
movs
popf
push
jnp
xchg
mov
outs
mov
ficomp
inc
(bad)
div
out
shl
pop
lahf
mov
(bad)
inc
jnp
repz
xchg
lahf
lds
shr
retf
dec
sahf
mov
jp
(bad)
push
cmps
mov
push
sbb
mov
jmp
sub
in
stos
sar
sub
push
mov
jecxz
pop
aaa
dec
scas
sar
fsubr
je
mov
int3
sub
bt
(bad)
xor
fdivrp
retf
jnp
int3
(bad)
addr16
xor
popa
xlat
jae
xchg
dec
sub
enter
and
sub
movs
cli
jmp
out
es
stos
loop
and
inc
scas
cmp
xchg
aas
addr16
test
(bad)
mov
bswap
jge
mov
dec
xchg
jecxz
rol
sub
jge
inc
mov
mov
push
clc
mov
call
outs
dec
jns
cmps
dec
pop
mov
test
jmp
dec
aaa
(bad)
(bad)
fcom
and
and
xchg
icebp
or
pop
stc
lods
test
in
cdq
es
ins
fbstp
inc
shr
icebp
inc
gs
loope
dec
ss
sbb
xadd
mov
mov
mov
mul
xlat
dec
cmc
cmp
movs
adc
sahf
scas
loope
scas
lds
in
fsub
(bad)
(bad)
cli
out
test
add
or
cmp
scas
fidivr
jecxz
das
lods
cli
cmp
icebp
arpl
inc
push
fild
pop
push
lods
scas
sbb
inc
add
outs
mov
mov
mov
out
test
retf
cmps
addr16
sub
xchg
inc
and
fs
mov
lahf
(bad)
mov
mov
push
imul
cs
cdq
fsubr
jg
cmps
sub
(bad)
fild
push
sti
and
mov
(bad)
outs
add
(bad)
lock
xchg
lds
mov
push
adc
mov
xchg
lods
pop
xor
(bad)
outs
cld
mov
mov
int3
or
stos
hlt
fmul
(bad)
(bad)
cmps
in
or
cmps
cmps
out
jmp
lods
xchg
inc
sahf
sub
push
lds
int3
xchg
mov
lds
cmp
xchg
xchg
ins
lds
call
sbb
and
xchg
(bad)
jmp
inc
jo
mov
test
push
and
stos
xchg
lock
jae
mov
add
xchg
scas
ror
sbb
sbb
sub
out
in
xor
sbb
shr
pop
stos
in
clc
js
dec
popf
xchg
(bad)
pop
mov
xor
cs
pop
adc
scas
cmps
cs
cdq
leave
test
mov
in
ja
pushf
ja
scas
and
stos
rol
mov
(bad)
pop
stc
clc
sbb
test
or
cmp
(bad)
xor
or
push
fdiv
movs
addr16
cmps
mov
int3
mov
add
movs
dec
ror
into
js
xlat
call
jmp
in
xchg
fdivr
adc
cs
clc
push
and
jbe
push
fsub
inc
mov
mov
jo
mov
jl
ud0
and
mov
in
dec
adc
cmp
aad
rol
rcr
ss
pop
movs
fwait
sub
or
out
adc
adc
es
fs
jno
sahf
mov
xlat
mov
mov
fcomp
imul
dec
cmps
movs
add
mov
mov
sub
loopne
lds
call
leave
es
jp
int3
lods
mov
xchg
ret
movs
test
sar
(bad)
aam
mov
in
loope
icebp
sahf
sti
fistp
(bad)
scas
and
ins
xor
repnz
jmp
es
jmp
push
lahf
pop
inc
sbb
sbb
data16
mov
cmps
adc
and
loope
enter
mov
and
cmps
test
aas
push
pop
xlat
mov
jg
xchg
aas
movs
sbb
adc
push
xchg
arpl
into
cmp
mov
rcl
popf
les
mov
jge
in
inc
lds
sbb
add
lds
and
jmp
test
and
add
dec
(bad)
movs
xor
sti
inc
outs
mov
(bad)
and
adc
mov
sti
xchg
test
jmp
cmp
dec
das
mov
aam
aas
cmp
xchg
stos
push
mul
fld
movs
(bad)
dec
fmul
imul
clc
das
cmps
xor
fldcw
xor
shl
gs
cmp
outs
lea
adc
mov
jmp
(bad)
cmc
cmp
mov
and
lds
fwait
daa
imul
lds
xchg
in
(bad)
movs
jge
inc
cld
sbb
addr16
loop
sbb
jp
lock
xchg
sahf
push
shl
mov
jne
imul
or
push
imul
mov
mov
and
scas
cmp
cld
cmp
ficom
add
pop
scas
jg
pop
jecxz
test
push
imul
fidivr
jnp
out
fld
sub
sahf
iret
fdivr
jnp
inc
xor
mov
and
fwait
sbb
rol
in
ds
add
and
bound
retf
call
data16
movs
pop
sub
mov
xor
mov
test
inc
sub
jo
cmp
ds
lods
mov
les
(bad)
in
enter
ud0
inc
mov
(bad)
repnz
xchg
mov
mov
xchg
jmp
mov
aad
push
fwait
add
pop
mov
pop
call
mov
cmp
ds
xchg
push
mov
ret
sbb
mov
mov
sti
ret
fsubr
inc
mov
jmp
cmp
ins
cmps
(bad)
(bad)
fidivr
rol
mov
dec
das
cld
aaa
(bad)
in
scas
mov
xchg
xchg
mov
push
inc
mov
or
adc
push
test
sar
ss
imul
daa
fs
loope
clc
jmp
xor
(bad)
mov
stos
and
push
xchg
mov
out
sub
sbb
push
jne
mov
cmp
lods
inc
mov
sub
inc
jg
jg
add
push
dec
inc
mov
adc
add
out
pop
adc
xor
sbb
ret
fcmovnb
stos
jb
not
mov
ret
adc
fmul
(bad)
aaa
xor
fmul
popa
cld
add
xchg
jge
(bad)
pop
xor
sub
jge
mov
pandn
adc
sbb
aaa
std
lock
arpl
outs
in
fbld
pop
loope
xchg
jmp
sub
sbb
movs
xchg
jmp
cmps
fsubr
(bad)
(bad)
cmps
push
fnstsw
add
mul
sbb
adc
cmp
push
test
mov
in
adc
(bad)
dec
lods
(bad)
push
jg
mov
pop
popa
jns
sbb
pusha
cmc
lods
cmp
rcr
rcl
scas
ror
lods
or
or
cmp
jl
mov
cmp
ret
push
cs
loopne
enter
(bad)
mov
xor
(bad)
rcl
jg
out
in
inc
aad
not
jne
cmp
mov
mov
jge
mov
std
iret
pop
cmp
add
outs
stos
fucomp
stos
sbb
mov
(bad)
adc
sub
jo
mov
sub
jge
das
pop
shr
out
mov
cmps
jo
outs
or
lds
xchg
mov
mov
or
xchg
fsub
add
rcr
add
ficom
cmp
out
lods
aas
scas
cs
jne
repnz
out
test
mov
in
imul
enter
dec
jp
inc
in
stos
jns
cs
cld
(bad)
ins
pop
into
aad
jno
jmp
cmps
ss
sti
not
aas
mov
pop
adc
mov
out
lahf
inc
xchg
push
ss
lea
and
cs
outs
(bad)
cli
sub
xor
popf
or
pop
inc
xchg
fld
or
aam
mov
(bad)
mov
sub
rol
pop
je
scas
and
outs
inc
bnd
call
mov
xchg
lds
ins
(bad)
out
push
dec
addr16
sub
lds
es
(bad)
(bad)
into
enter
in
jp
adc
aam
sub
ficomp
pop
mov
cdq
inc
sbb
lds
lods
and
movs
mov
cwde
dec
inc
inc
inc
mov
xor
pop
bound
mov
int3
inc
mov
dec
push
ins
mov
mov
dec
jns
lds
xchg
cmp
cmp
retf
push
outs
ror
je
push
sahf
pop
add
jg
bound
into
mov
or
pop
shl
cld
test
loope
ja
mov
jbe
adc
fucom
push
or
add
add
jg
lea
popf
and
icebp
das
cdq
aad
daa
push
out
push
in
(bad)
test
jl
add
mov
and
sti
stc
push
lahf
mov
outs
iret
lods
inc
cmps
test
(bad)
ds
test
jo
test
pusha
inc
mov
jb
push
adc
sbb
enter
clc
dec
mov
cmps
jle
jnp
ja
addr16
jmp
(bad)
mov
lock
jb
loopne
xlat
jno
mov
cmps
and
mov
pushf
mov
add
aaa
cmovl
sahf
jmp
dec
js
lahf
xchg
and
sub
mov
pop
fadd
popf
cmp
pop
jnp
addr16
imul
sub
fs
adc
push
mov
xlat
lds
les
out
xor
dec
xor
xor
xor
push
dec
into
adc
xchg
xlat
push
lea
rcl
adc
xor
shl
xor
outs
xchg
lds
cmp
je
mov
fcom
push
mov
in
xor
jne
or
sub
(bad)
xor
jne
dec
mov
movs
test
xchg
shl
clc
lods
sbb
mov
and
cmp
add
inc
test
xchg
test
mov
mov
mov
sub
cmova
ret
out
jnp
cwde
arpl
jns
push
jg
call
dec
push
xor
mov
ins
outs
cld
dec
in
cs
xabort
jmp
xchg
imul
dec
mov
js
sbb
shr
lods
sub
sti
stc
jle
pushf
mov
mov
jl
out
push
popa
jo
int3
xor
ja
(bad)
test
mov
adc
adc
push
in
mov
mov
imul
xor
imul
jmp
into
mov
rcr
add
or
dec
in
int3
adc
std
xchg
xor
in
mov
pop
pusha
ja
add
fldenv
mov
add
fsubr
or
fisttp
and
shr
cmps
clc
pop
xchg
mov
gs
mov
fnstenv
sti
int
pop
loopne
xor
jbe
and
icebp
movs
stos
cdq
shl
xcrypt-ecb
cmps
or
lods
adc
arpl
scas
and
mov
retf
xchg
in
cmps
lds
dec
fdiv
jae
xchg
jne
cmps
cs
int
mov
inc
sub
mov
lds
in
jno
jo
sbb
mov
xchg
mov
sub
jae
xchg
xor
push
(bad)
gs
mov
mov
and
lods
test
(bad)
sub
add
mov
sub
jnp
push
clc
sahf
mov
shl
and
mov
mov
loope
push
repz
lods
fsubr
or
ret
pusha
(bad)
in
xchg
mov
sbb
pop
add
cmp
sub
movs
adc
sar
mov
inc
lds
call
cmp
gs
and
test
movs
jmp
stos
inc
fcomp
push
cmps
adc
(bad)
mov
(bad)
movs
aam
jmp
cs
stos
je
outs
adc
stos
stos
cmp
and
aas
inc
aad
stos
inc
add
jmp
(bad)
add
fiadd
cmps
fcomp
lods
inc
xchg
mov
lds
pop
xor
adc
(bad)
mov
jne
loopne
outs
sub
(bad)
int
fs
sar
jg
aad
shr
ins
add
lods
or
rol
sbb
data16
sbb
scas
and
mov
addr16
cmps
fistp
sub
add
cmps
sbb
or
mov
icebp
daa
xor
loop
in
popf
sbb
cmp
push
xchg
sub
xchg
sti
jmp
dec
out
xchg
popf
loopne
push
lahf
add
arpl
in
mov
test
retf
imul
mov
xchg
add
and
fistp
push
stc
imul
add
(bad)
loope
mov
and
jne
and
xor
dec
mov
or
je
dec
inc
(bad)
addr16
jge
cmps
push
int
mov
mov
mov
mov
sahf
imul
repz
scas
mov
int
and
ins
std
scas
test
cmps
xchg
adc
cmps
scas
mov
cwde
loopne
xchg
scas
stos
or
lods
dec
or
add
mov
cmp
mov
inc
pop
sub
mov
cli
rcr
or
or
xchg
mov
sub
jnp
sbb
dec
mov
int3
cmp
mov
mov
shl
mov
aam
jg
cmp
outs
pop
stos
cli
mov
pop
pushf
repnz
lds
scas
cmp
mov
ja
mov
pop
cmps
xchg
popf
dec
mov
xchg
mov
mov
and
dec
and
xchg
mov
jbe
cmps
icebp
stos
lahf
repz
cmps
pop
fcomp
xchg
std
mov
cmps
jnp
in
pop
mov
movs
pop
xchg
daa
cmps
mov
mov
scas
mov
cs
jno
mov
mov
sbb
cmps
mov
xchg
fwait
ds
fcomip
mov
fwait
out
stos
lea
in
popa
aaa
stc
ja
cmp
aas
and
outs
adc
adc
jnp
cmp
jnp
(bad)
aas
daa
data16
mov
and
sub
pop
pop
mov
das
or
aaa
or
jmp
jnp
xor
cmp
sbb
ja
xchg
sbb
mov
cmps
mov
daa
add
jae
imul
dec
adc
pusha
(bad)
in
shl
add
jl
jg
push
out
mov
jl
xchg
int
mul
mov
jb
inc
movs
xchg
jmp
mov
adc
xchg
in
jmp
fld
or
xlat
xor
in
and
mov
inc
xchg
inc
in
add
cmp
lock
push
mov
adc
scas
jns
inc
ds
mov
gs
int3
fist
iret
aad
xor
push
xchg
sbb
cs
es
scas
sub
(bad)
sub
pop
mov
scas
sub
test
in
push
sub
sub
imul
cmp
jae
mov
test
jge
mov
mov
shr
js
inc
sub
jnp
and
jecxz
mov
mov
xchg
add
test
jns
daa
and
sahf
std
loopne
sbb
inc
dec
mov
fwait
push
xchg
xchg
mov
and
mov
leave
std
sahf
out
fwait
(bad)
jae
loopne
or
and
(bad)
mov
mov
movs
xchg
(bad)
cmp
jo
outs
mul
xchg
loope
add
cwde
lds
(bad)
fsubr
stos
test
nop
aad
or
dec
lds
sbb
out
or
outs
push
add
inc
cmp
aad
fdivr
(bad)
mov
sar
imul
out
lods
jp
xor
rcl
mov
push
lods
inc
sbb
cli
lods
stc
mov
xor
adc
xchg
(bad)
scas
add
jmp
fsubr
inc
nop
sub
stos
jl
shr
fld
xchg
cld
mov
int3
not
mov
sti
jno
jge
out
repz
fwait
xor
std
add
or
mov
lds
std
mov
push
sti
mov
sub
jecxz
xchg
aad
into
jmp
and
add
mov
push
mov
sub
aas
jno
(bad)
mov
hlt
inc
popa
iret
jns
fisubr
pusha
test
popf
hlt
dec
xor
xor
pop
push
xlat
(bad)
faddp
fsub
push
or
mov
adc
pop
push
cmp
fild
cld
pusha
fild
enter
std
fbld
push
cmps
(bad)
cld
iret
scas
loop
(bad)
cs
ja
lods
pop
int
(bad)
stos
cld
fisub
scas
cs
xchg
ret
xor
dec
xor
stc
lods
(bad)
cmc
mov
mov
int
test
stos
dec
leave
sub
fdiv
scas
lds
xor
out
sbb
mov
mov
lds
clc
ror
fwait
mov
pop
xlat
call
cld
leave
adc
mul
and
xchg
push
xchg
and
imul
inc
les
jb
cmp
(bad)
and
push
aam
fld
add
dec
xlat
jns
mov
shl
popa
inc
(bad)
fnstcw
mov
shl
jno
xor
xor
lods
mov
jnp
mov
call
push
pop
mov
cmps
jno
out
hlt
adc
push
cmc
movs
xchg
outs
cld
fcom
mov
adc
das
cmc
ja
bound
inc
mov
mov
(bad)
(bad)
out
(bad)
es
cld
out
jmp
data16
fwait
cmp
es
nop
sub
sub
ja
xchg
jnp
adc
out
xor
inc
push
iret
lods
jo
mov
cmp
push
int3
cmp
fnstenv
ror
(bad)
push
jne
pop
mov
fcomi
mov
das
cmc
pushaw
mov
fstp
aad
scas
(bad)
ins
mov
data16
dec
outs
fld
mov
dec
jp
inc
data16
into
out
ins
test
jno
imul
test
clc
jo
sbb
aam
movs
add
xchg
sub
pushf
(bad)
cmp
or
sbb
cld
mov
adc
or
pop
jno
cmp
ror
test
xchg
pop
xchg
pop
pop
mov
jle
lds
push
addr16
push
mov
adc
mov
daa
movs
inc
icebp
daa
cmp
lea
popa
mov
cdq
imul
arpl
sti
in
into
fwait
pop
xor
rcr
cmps
addr16
xchg
dec
xlat
jmp
ret
repnz
(bad)
pop
bound
es
mov
xchg
nop
imul
cmps
sti
mov
lds
icebp
les
outs
lods
adc
mov
out
lahf
cli
jl
aas
sbb
mov
sub
ins
mov
push
imul
lods
imul
(bad)
into
call
jno
sahf
adc
cwde
stos
sub
(bad)
sbb
jp
popa
jbe
div
xchg
mov
jge
frstor
rcl
pop
mov
into
push
inc
fidivr
mov
and
dec
(bad)
movs
add
stos
ja
push
(bad)
mov
mov
fdivr
xor
and
xor
les
sub
ja
inc
cs
out
sti
(bad)
cmp
in
dec
sub
repz
mov
fs
push
mov
shl
mov
mov
mov
adc
jmp
repz
push
xchg
out
in
inc
arpl
(bad)
clc
add
sub
aaa
std
xchg
in
mov
sbb
test
int3
popa
aaa
retf
jne
fnstenv
nop
mov
jmp
jns
mov
xor
or
push
gs
or
loop
cmps
inc
ja
jmp
lods
shr
add
fdivr
jae
ficom
out
sub
jbe
es
icebp
push
or
daa
push
outs
sub
cli
jp
hlt
pop
aad
movs
(bad)
mov
jnp
jg
cmp
in
dec
jecxz
fldcw
scas
and
imul
aam
jae
ins
js
popa
test
aaa
icebp
rol
sahf
sub
push
dec
cmc
stos
sub
addr16
xor
mov
cmps
mov
push
xchg
out
pop
and
jno
mov
jge
dec
push
xlat
cmps
or
scas
addr16
cmp
or
fwait
test
in
dec
push
imul
das
sar
add
ret
mov
shr
test
mov
es
sar
movs
cmp
fsub
sub
mov
lea
adc
retf
or
aas
jmp
adc
cdq
jmp
dec
addr16
sub
daa
pusha
or
mov
cmp
sub
std
pop
xchg
or
jp
lods
pop
(bad)
or
add
out
mov
mov
jle
or
fsubr
mov
ror
jp
sub
(bad)
cs
fld
in
ins
jno
stos
jp
fwait
in
mov
sbb
ds
xchg
inc
pop
adc
adc
sbb
jno
not
(bad)
push
(bad)
out
inc
adc
pop
push
dec
pop
icebp
lods
mov
push
into
mov
dec
out
push
and
fld
mov
and
out
retf
mov
pop
fisubr
(bad)
fnstcw
out
popa
(bad)
in
bound
inc
into
mov
pushf
xchg
cdq
stc
aam
inc
mov
or
xor
rcl
xchg
mov
les
add
(bad)
jge
pop
outs
xchg
out
mov
pop
push
fst
int
mov
pop
scas
jbe
faddp
mov
daa
cmps
rol
and
jbe
or
test
es
(bad)
fcomp
xchg
outs
sbb
mov
mov
mov
mov
sub
int
scas
lods
aaa
arpl
lahf
lahf
mov
or
dec
jl
in
cli
into
jb
aam
outs
imul
lods
push
fcom
add
mov
push
inc
sub
movs
inc
outs
packssdw
mov
daa
mov
sti
xchg
mov
stc
pop
movs
rcr
xchg
cmp
mov
div
mov
inc
push
ficom
mov
es
xor
clc
jns
push
lods
dec
outs
mov
outs
aas
mov
movs
movs
imul
sbb
(bad)
pop
fldcw
fimul
pop
push
pusha
dec
int
int3
fs
stc
inc
cwde
mov
add
into
(bad)
or
mov
push
mov
mov
std
and
ds
adc
nop
mov
sar
pop
pop
les
into
jle
pop
mov
loope
(bad)
ds
cmps
mov
push
(bad)
(bad)
inc
push
push
dec
shl
sbb
std
inc
push
mov
rcr
into
(bad)
add
mov
outs
sbb
jl
into
int
sbb
into
jmp
std
(bad)
xor
mov
fsubr
add
popa
push
invd
inc
dec
push
aam
xor
cmc
jmp
inc
scas
push
dec
scas
es
cld
popa
test
into
or
repnz
je
stos
cmp
scas
pop
imul
inc
xchg
(bad)
inc
cmps
fistp
fs
data16
xor
aas
adc
mov
in
mul
jae
stc
dec
aam
lds
je
pop
lods
mov
mov
add
cmps
mov
ror
sub
xchg
mov
shr
xchg
scas
xchg
ror
lahf
(bad)
aas
fwait
dec
mov
push
lods
mov
jp
scas
retf
mov
ds
hlt
mov
pop
jmp
dec
rol
mov
rol
cli
mov
mov
enter
sar
(bad)
cmps
mov
sub
mov
dec
mov
dec
stc
xlat
stos
jp
sub
cmc
aam
adc
outs
fcomp
lods
mov
push
push
add
retf
mov
dec
jae
cld
lock
inc
scas
xchg
imul
push
push
sbb
mov
retf
mov
fild
mov
xchg
mov
adc
cs
in
jnp
(bad)
sub
mov
loop
lahf
mov
mov
scas
lds
inc
jmp
jne
cmp
cli
pop
inc
cld
test
mov
(bad)
pop
outs
fwait
xchg
(bad)
dec
gs
pop
retf
adc
xor
sbb
mov
adc
adc
add
mov
push
sbb
scas
stos
jg
dec
push
out
lds
cld
jnp
jmp
fwait
push
into
movs
push
xchg
jb
dec
jg
popa
pushf
or
iret
in
aas
mov
jmp
mov
fmul
inc
and
out
je
retf
push
mov
lods
add
push
(bad)
cmp
lods
mov
lds
stos
cld
lock
mov
movs
mov
lods
xor
shr
loop
and
cmp
pop
fnstsw
jne
adc
lea
push
mov
xor
mov
mov
mov
loop
jecxz
ficom
not
pop
(bad)
cmp
sub
adc
aaa
and
mov
or
sub
mov
in
outs
and
ds
mov
mov
lods
xlat
fidiv
(bad)
iret
mov
test
loopne
imul
icebp
test
addr16
arpl
mov
ret
jge
xor
stc
shl
jle
cmp
ins
ds
shr
adc
pop
aas
push
and
dec
pop
sub
(bad)
fild
cmp
dec
xor
popa
popf
fiadd
adc
fld
inc
xchg
adc
lods
(bad)
mov
and
lods
pop
push
adc
pop
(bad)
aam
push
cmp
in
xchg
push
mov
mov
push
int3
aas
xchg
sub
jg
ret
lods
sbb
aaa
sub
fcom
cmp
mov
adc
(bad)
push
jmp
ins
in
addr16
jns
cmp
pop
mov
jp
xchg
test
movs
mov
sbb
push
push
inc
inc
pop
sub
and
push
hlt
movs
inc
jbe
jnp
xchg
mov
xchg
hlt
daa
mov
js
test
xchg
adc
cmp
xor
mov
inc
stos
js
and
sbb
daa
aaa
fist
aas
push
jg
mov
pop
cmp
inc
mov
sbb
xor
sub
mov
add
mov
fwait
(bad)
imul
movs
cmp
or
adc
sub
cmp
cmps
jnp
add
xor
fwait
movs
leave
js
shr
cmp
sub
sti
pop
mov
sub
jge
aas
and
or
retf
stos
pop
aam
xlat
stc
in
nop
clc
outs
sahf
inc
in
movs
cwde
sub
imul
adc
push
cmc
and
add
xchg
mov
popf
sub
sub
add
push
cmps
cmp
push
mov
xchg
retf
inc
outs
(bad)
jecxz
icebp
mov
mov
push
sub
sub
cmps
mov
mov
and
(bad)
sti
test
sub
sub
inc
arpl
scas
jp
mov
adc
(bad)
cmps
lds
imul
and
sbb
add
ja
mov
xor
sti
test
cmp
mov
scas
hlt
clc
xchg
jne
ret
jns
lods
mul
cdq
fidivr
nop
push
out
imul
daa
test
xor
in
stc
sbb
xor
mul
(bad)
retf
dec
mov
sbb
les
(bad)
(bad)
xor
cdq
(bad)
dec
sub
cmc
and
sbb
dec
out
lea
lock
fidiv
stos
cli
mov
mov
pushf
push
aas
adc
lahf
cmps
retf
stc
push
and
add
cmps
sbb
mov
lahf
mov
jno
cmp
jmp
or
stos
shl
sets
xlat
cmp
arpl
pushf
jns
xor
jl
xchg
out
mov
loopne
je
mov
loope
leave
aam
in
in
xchg
ficomp
(bad)
jmp
mov
pop
mov
cwde
mov
aas
pushf
jl
in
inc
clc
or
hlt
jle
pop
leave
scas
adc
jge
div
pop
fist
cmp
into
jb
and
mov
cmp
es
cli
xchg
sub
inc
pop
mov
js
mov
mov
mov
pop
mov
int3
add
and
fnsave
movs
js
lea
mov
jp
xor
or
movs
mov
jle
(bad)
stc
push
dec
sar
aad
jle
test
xchg
jp
mov
test
movs
adc
dec
scas
sub
push
sub
and
(bad)
xlat
lods
push
and
les
jns
mov
(bad)
xor
les
movs
rol
adc
push
jmp
sbb
daa
or
pop
jno
jnp
jmp
outs
addr16
dec
and
(bad)
loopne
rcl
fiadd
inc
jae
push
cmp
sbb
cmps
mov
inc
arpl
call
(bad)
in
inc
pop
int
mov
unpcklps
or
inc
mov
mov
mov
mov
mov
dec
xchg
cmp
jae
sbb
and
add
xchg
mov
jbe
out
cld
adc
out
cli
or
pop
loope
cmps
daa
fadd
mov
jmp
push
outs
mov
lods
push
inc
mov
dec
fwait
in
xchg
pop
repz
(bad)
repz
jg
lods
push
inc
sbb
dec
out
mov
or
fisttp
les
outs
mov
adc
mov
cmp
mov
xor
in
push
enter
jge
pop
cmc
jg
xchg
sub
cmps
mov
out
test
ffree
pop
fs
ret
pop
inc
cmps
dec
mov
cmp
(bad)
stc
push
mov
repnz
mov
cld
ss
xor
inc
out
add
js
popf
mov
fcomp
sub
push
test
cmp
test
jno
(bad)
push
lds
add
dec
add
je
or
mov
mov
jmp
adc
jb
and
(bad)
scas
fisubr
sahf
jge
xchg
outs
jnp
cmp
fisub
pushf
leave
and
sub
fimul
dec
adc
aaa
fisttp
(bad)
lahf
adc
test
add
xchg
stos
push
daa
stos
mov
xchg
es
scas
pop
retf
cdq
or
xchg
jp
and
mov
sub
xor
sahf
mov
shr
call
aas
fsub
jp
sar
arpl
mov
fstp
xchg
(bad)
int
(bad)
addr16
shr
lds
les
push
stc
mov
lds
lahf
in
stos
shr
cmp
jle
scas
sbb
adc
and
fisubr
mov
and
pop
mov
mov
and
outs
dec
stc
add
mov
push
stos
es
mov
lods
aas
jge
mov
sub
sbb
or
cmps
aaa
xor
inc
fild
xor
inc
dec
cmps
cli
nop
pushf
jle
adc
(bad)
mov
sbb
fs
sub
retf
mov
stos
inc
stc
mov
push
(bad)
jnp
iret
loop
jmp
das
call
xor
clc
cs
les
aas
pop
jg
pop
enter
(bad)
je
fcmovbe
cmps
es
mov
loope
frstor
lahf
loope
mov
sti
fldcw
xor
lods
scas
push
daa
shr
arpl
sub
inc
enter
scas
loope
test
dec
sub
aas
(bad)
jo
out
leave
jb
sbb
cmp
add
test
xchg
stos
out
and
aad
fidiv
xor
mov
adc
inc
fdivr
xchg
inc
cli
mov
xchg
std
add
cmp
lods
lds
mov
xchg
into
pop
and
adc
sbb
xor
lds
retf
xchg
lock
mov
into
fild
sbb
fidiv
fwait
adc
dec
xchg
lods
scas
adc
test
ficom
sti
cdq
mov
jmp
add
mov
imul
cs
mov
dec
repz
add
out
leave
aas
fdivr
mov
and
add
mov
jne
je
mov
repz
out
stos
sti
adc
mov
nop
sbb
cmp
inc
ret
out
nop
cmc
jge
dec
imul
sti
data16
pop
aam
cli
movs
mov
out
adc
mov
mov
test
ror
fs
rol
inc
(bad)
sti
xchg
out
inc
cmp
lods
ds
and
(bad)
push
data16
bound
inc
mov
lods
pop
popa
and
dec
pop
sub
repnz
xchg
into
lds
cmp
int3
jle
stos
imul
int
std
cmp
inc
les
add
xchg
stos
call
enter
jnp
test
shl
jnp
pop
ja
adc
ret
jbe
sar
jnp
movs
call
in
movs
cmp
bound
scas
jno
sub
fsub
adc
mov
xor
pop
add
jmp
test
outs
leave
sub
ds
pushf
repz
jge
cs
push
sub
mov
mov
outs
sub
ror
cmp
sbb
xchg
mov
outs
jl
cmps
inc
rcl
ins
xor
adc
sbb
mov
adc
pop
sub
ja
mov
out
stos
sub
adc
bound
movs
dec
xchg
mov
mul
sub
mov
xor
mov
std
jge
mov
push
movs
cmps
mov
or
mov
jo
aad
movs
sti
in
mov
adc
adc
mov
inc
aas
daa
call
sbb
xor
das
xchg
cmp
jo
mov
fimul
mov
cld
jne
mov
fcomi
popa
fchs
(bad)
cld
lds
lods
mov
xchg
cli
add
or
adc
pop
repnz
add
inc
retf
out
xchg
sbb
aad
inc
or
scas
dec
pop
mov
sub
mov
xor
mov
lods
pop
and
fisub
ja
fisub
(bad)
mov
lods
xor
imul
fdivr
lods
(bad)
and
stos
pop
xchg
mov
scas
dec
gs
sbb
pop
inc
fistp
outs
aas
sub
nop
jmp
mov
ja
arpl
xor
in
push
sbb
aas
out
mov
dec
adc
sbb
call
and
lahf
enter
pop
xor
mov
mov
clc
dec
sbb
inc
mov
sbb
popf
(bad)
fbstp
adc
stos
dec
or
mov
sbb
ficom
retf
xlat
(bad)
ins
loope
xchg
cmp
and
add
out
adc
xchg
pop
jge
and
cs
lods
cmc
jle
cmp
add
inc
das
mov
sbb
popf
iret
push
ja
cmp
not
mov
out
dec
ret
jo
fstp
cmp
jbe
sub
lea
(bad)
mov
mov
retf
js
loopne
lods
push
and
jge
cmp
mov
jecxz
inc
inc
das
pop
mov
lods
inc
clc
fsub
(bad)
in
pop
xchg
xchg
dec
loope
or
out
out
in
lods
std
mov
stos
xor
pop
movs
bound
mov
add
cs
mov
test
enter
lds
xchg
add
jbe
addr16
push
pop
test
vunpckhps
fimul
cmp
cmp
add
and
add
mov
out
sub
lods
dec
add
sahf
data16
scas
mov
leave
add
or
sub
mov
mov
adc
or
stos
dec
pop
mov
test
scas
mov
mov
gs
mov
stos
jo
inc
fld
aam
punpcklwd
add
or
stos
push
cld
data16
icebp
mov
fisubr
jge
popf
cmps
rol
adc
adc
mov
inc
dec
ins
sbb
fmul
outs
mov
push
aas
sar
mov
pushf
cmps
fist
cmp
xor
scas
cdq
in
(bad)
pop
repnz
rol
jno
daa
inc
jg
cdq
mov
das
or
mov
pop
xchg
mov
mov
xor
cdq
and
daa
mov
mov
(bad)
adc
(bad)
outs
arpl
mov
test
jb
dec
(bad)
mov
dec
and
mov
popa
stos
arpl
xchg
cmp
sbb
scas
add
pop
push
outs
cmps
pop
aad
outs
mov
(bad)
adc
dec
mov
xchg
popa
jns
jmp
or
outs
in
adc
ins
xchg
jp
pop
inc
mov
addr16
mov
out
inc
scas
ret
stc
add
push
sub
imul
push
test
in
adc
cmps
ds
or
lds
dec
(bad)
sbb
xor
outs
pop
xchg
inc
adc
jae
inc
arpl
jmp
mov
mov
mov
stos
in
and
mov
test
(bad)
mov
xchg
add
sbb
(bad)
jo
mov
cwde
mov
ins
dec
jmp
add
loopne
retf
mov
sbb
shr
mov
lods
inc
shr
clc
repnz
pop
mov
outs
(bad)
daa
cli
ja
cmp
inc
add
ins
fs
fwait
jp
fdivr
push
bound
xor
shl
outs
lds
mov
pause
and
cmp
dec
int
inc
lods
rol
cmc
movd
mov
scas
in
fsub
addr16
lods
test
stos
sub
loop
sub
dec
sbb
aaa
das
or
fnclex
enter
push
mov
call
arpl
xchg
stos
rol
inc
mov
int3
test
pop
xlat
mov
scas
and
and
dec
(bad)
(bad)
ror
scas
push
mov
sub
push
je
lea
repz
or
jmp
cs
or
(bad)
xlat
inc
ds
inc
mov
push
lods
in
es
inc
xor
and
stc
mov
pop
inc
xchg
pop
or
dec
int3
mov
mov
pop
pop
cmps
in
and
shl
jnp
adc
dec
fwait
inc
out
outs
aas
bound
(bad)
xlat
jg
and
mov
mov
mov
mov
pop
fidiv
cmp
xlat
std
into
sti
and
sub
pop
in
mov
jbe
imul
(bad)
movs
jmp
(bad)
cmp
jp
add
inc
mov
in
fwait
popf
stos
es
es
push
xor
hlt
xchg
stos
mov
scas
aam
lds
arpl
jmp
xor
inc
push
jo
mov
jg
cdq
pushf
xchg
sub
sbb
pop
ss
cmps
mov
stos
pushf
and
test
mov
in
sbb
fist
int
ja
pop
push
in
lods
sbb
pop
fcmovnu
rcl
mov
cmp
pushf
and
das
cdq
inc
nop
mov
push
mov
cmp
shl
das
xchg
lahf
lds
add
mov
cmp
push
or
call
inc
enter
les
cmp
jbe
add
fs
outs
and
fstp
push
jbe
imul
xor
es
xor
sbb
push
fldenv
and
ffree
push
sub
mov
call
test
mov
dec
dec
mov
les
aaa
jnp
jl
pop
out
mov
mov
gs
iret
mov
addr16
jmp
dec
call
adc
pop
cmp
dec
cmp
and
leave
cld
lahf
push
cmp
jnp
and
jg
in
jl
lds
sbb
je
into
sbb
dec
adc
(bad)
xor
jl
cmp
mov
dec
cmp
fisttp
icebp
scas
pop
add
mov
cmp
pop
adc
or
add
add
gs
xor
mov
and
int3
lahf
aam
mov
pop
jno
enter
inc
mov
dec
pop
cmp
adc
push
pop
retf
push
outs
rep
cmp
cmc
xchg
xlat
in
jg
dec
sbb
in
mov
push
sub
outs
mov
repz
xchg
adc
aas
sbb
add
pop
movs
sbb
dec
js
jae
fs
jno
(bad)
mov
dec
jl
xor
bound
xor
xor
stos
pop
hlt
js
inc
daa
add
sahf
mov
(bad)
lds
scas
movs
inc
(bad)
sbb
jmp
fmul
ror
dec
mov
arpl
adc
daa
test
sub
aas
int3
and
xchg
scas
sub
jle
xchg
and
int3
jg
cmps
(bad)
stos
ins
stos
mov
jnp
call
je
mov
fs
jo
daa
stos
cmps
xor
pop
pushf
cmp
adc
pop
pop
mov
ja
into
dec
and
lds
movs
sbb
imul
sub
int
xor
sub
fsub
inc
jl
adc
in
mov
call
out
(bad)
fwait
pop
adc
ret
iret
in
and
push
in
scas
adc
inc
or
push
mov
xchg
int3
jne
mov
mov
mov
sbb
jp
mov
xchg
(bad)
cmps
aad
push
shl
ss
jle
cs
and
mov
out
add
pop
je
dec
mov
test
pop
and
cmp
stc
fcom
mov
jle
mov
jnp
es
out
ja
push
cs
adc
xlat
jl
dec
movs
inc
mov
xchg
jnp
sub
and
mov
push
leave
add
call
mov
sub
jnp
inc
pop
movs
jae
adc
and
rep
push
mov
repnz
sub
xchg
mov
jecxz
ret
adc
add
inc
call
addr16
mov
es
jb
das
das
movs
add
xchg
cmps
(bad)
pop
jae
and
das
add
ds
outs
imul
cli
jmp
xor
lods
inc
or
jmp
call
jp
ret
push
loope
retf
jecxz
jg
cmps
lds
outs
cmc
jne
nop
cmp
xchg
mov
aaa
lds
xor
ins
jmp
jmp
(bad)
lds
push
cld
shr
adc
jecxz
sbb
fdiv
dec
mov
sub
dec
jns
pop
daa
popa
cmp
dec
sar
aaa
mov
popa
test
(bad)
and
xchg
mov
lods
pop
mov
sub
das
or
lods
mov
jmp
stos
inc
push
dec
out
ss
mov
cdq
shl
lahf
sahf
mov
and
xor
xor
pushf
and
jle
mov
mov
jo
jg
sub
sub
std
xchg
push
dec
fist
inc
lods
or
push
stos
push
mov
mov
inc
aad
out
xor
or
xor
neg
xchg
cmp
cmps
mov
pand
cmp
ins
xchg
in
sub
push
pop
push
cmps
aaa
mov
pop
dec
pop
cmp
mov
pusha
adc
dec
icebp
mov
gs
cmp
cmp
mov
or
mov
xor
mov
pop
cmp
xor
and
outs
sar
sbb
mov
aaa
call
mov
jg
lds
adc
call
xchg
inc
sub
xor
lods
jbe
xor
add
sub
call
arpl
(bad)
sub
in
sub
mov
aas
inc
movs
mov
mul
shl
inc
rol
pop
and
jae
jmp
xchg
test
(bad)
cmp
push
xor
pop
dec
scas
stc
lods
inc
sbb
jg
outs
sahf
ffree
(bad)
mov
enter
mov
in
stos
jbe
cmps
(bad)
pop
ins
jae
lds
mov
scas
sbb
jle
ss
push
in
and
cmp
sub
(bad)
lods
ror
xor
push
mov
xor
pop
jmp
sub
sub
les
cld
push
cmp
xchg
cmps
(bad)
adc
pop
enter
(bad)
stos
ds
popa
iret
xchg
cdq
mov
aam
mov
bnd
dec
pusha
dec
dec
(bad)
inc
imul
arpl
in
into
inc
xor
dec
inc
(bad)
adc
std
pop
cmps
(bad)
mov
cdq
and
mov
das
pop
add
outs
lods
fdiv
adc
movs
lods
dec
loop
pop
cmp
jmp
aad
sqrtps
mov
fild
xchg
push
lock
sbb
shr
or
cld
hlt
push
dec
cli
ficomp
pop
sahf
pop
mov
bound
xor
cmp
lods
and
les
adc
cld
and
add
xchg
dec
push
jecxz
pop
push
imul
cmp
in
lahf
and
retf
jg
adc
(bad)
sahf
dec
mov
jmp
jmp
xchg
or
pop
jp
pop
adc
and
ja
xchg
xor
inc
sbb
repnz
adc
push
sti
cmp
mov
in
das
aad
sbb
inc
jge
pop
icebp
jecxz
(bad)
stc
dec
repz
aas
ret
loope
outs
stos
sub
jns
cmp
sub
js
call
mov
jp
in
cmp
jmp
sti
mov
dec
inc
xor
push
(bad)
addr16
cmp
es
shr
scas
xchg
add
dec
mov
adc
call
aas
xor
sub
sub
xchg
into
jl
jp
mov
out
sbb
push
aaa
jo
pop
aaa
mov
scas
outs
xor
push
push
xchg
xor
adc
push
sub
call
pop
mov
sbb
mov
sub
and
jl
cld
aas
data16
(bad)
or
aam
inc
dec
sub
mov
push
dec
push
(bad)
inc
or
sub
push
lods
inc
out
test
xor
out
cmps
and
jb
clc
inc
jbe
mov
into
inc
adc
mov
xor
adc
popf
fist
iret
cwde
xlat
(bad)
xchg
stos
jle
lds
fsubrp
les
aas
data16
mov
fcmove
jbe
dec
xor
xchg
out
mov
stos
inc
cld
call
pop
sub
sbb
into
and
ja
jb
std
daa
xchg
aad
dec
xor
jbe
mov
outs
ds
mov
scas
test
jle
cmp
push
sub
lea
jp
jns
js
(bad)
sbb
lds
mov
push
xor
aas
es
dec
fcomp
pop
movs
push
xchg
stos
fldcw
daa
ins
(bad)
mov
hlt
mov
lds
scas
fs
cmp
pop
xor
(bad)
adc
cmc
lds
imul
stos
sbb
iret
mov
pop
fadd
mov
jge
loopne
cmp
cmps
jne
std
or
mov
pop
push
neg
mov
and
fs
outs
lods
out
pop
cmp
cmps
fdivr
lds
outs
mov
scas
retf
jg
(bad)
sub
or
mov
jp
jmp
stos
call
adc
xchg
push
(bad)
cwde
movs
in
pop
sub
cmp
and
movs
and
or
mov
lds
cmp
mov
fadd
dec
mov
mov
(bad)
push
lods
dec
jl
mov
idiv
sbb
mov
and
push
xchg
ret
mov
aam
mov
jl
inc
xor
imul
push
add
xchg
ins
pop
(bad)
ins
ds
xor
dec
inc
cmp
and
dec
xchg
(bad)
ins
cli
das
call
cmp
push
adc
xchg
std
mov
mov
stos
fistp
in
cmp
or
sub
push
xchg
in
mov
add
lahf
mov
int3
mov
cmp
cmp
jmp
mov
jno
fstp
dec
sub
aam
or
push
mov
mov
mov
jo
push
add
dec
xchg
scas
and
scas
xor
rcl
out
sbb
aaa
dec
aam
cmps
pusha
retf
mov
and
outs
and
adc
xor
fidiv
cmp
mov
shl
clc
fstp
shr
push
fiadd
nop
mov
jmp
les
mov
add
clc
div
lock
cld
sbb
jne
jp
pop
jo
sbb
outs
xchg
js
sbb
leave
jb
push
jb
lahf
jg
mov
mov
out
push
sub
push
cld
pop
mov
xor
ficomp
dec
xor
or
mov
add
daa
and
inc
inc
call
cmps
add
pop
or
test
mov
mov
fldenv
xchg
(bad)
fwait
cs
jnp
aad
out
stos
jl
(bad)
std
or
adc
leave
icebp
nop
(bad)
push
inc
jb
mov
xor
mov
push
out
jne
mov
hlt
sbb
sti
mov
jne
icebp
test
and
and
xor
scas
push
pop
outs
mov
adc
shr
aad
ss
pop
pop
mov
cli
rcl
xor
test
(bad)
(bad)
sbb
mov
xchg
lods
fnstcw
add
xor
cmp
call
mov
enter
xchg
pusha
jns
adc
shl
cmp
sub
mov
push
std
aas
mov
dec
push
xchg
imul
adc
sar
scas
mov
arpl
mov
sub
scas
xchg
inc
inc
mov
push
movs
aad
xor
mov
scas
mov
dec
call
jnp
loopne
loopne
fstp
jne
mov
or
or
push
scas
inc
pusha
sub
jnp
imul
leave
pop
pop
sub
mov
clc
jp
adc
(bad)
fsubrp
inc
xchg
test
push
aaa
xchg
adc
(bad)
or
sbb
bound
ret
test
xor
fwait
adc
push
popa
sbb
(bad)
stos
inc
mov
ins
cmp
clc
xchg
in
dec
mov
popf
sub
jp
mov
and
and
push
sub
dec
lds
jmp
jne
push
imul
xor
stos
stos
sub
inc
push
dec
in
lahf
or
lds
or
sbb
ret
outs
mov
daa
push
scas
xchg
in
xchg
inc
sbb
call
add
or
hlt
test
dec
xor
repz
pop
nop
jmp
dec
mov
push
cmp
pop
je
out
push
pop
test
test
pop
mov
out
scas
loope
daa
data16
jns
mov
dec
fwait
cmp
sbb
(bad)
out
(bad)
out
outs
xor
mov
enter
mov
ins
cmp
addr16
stos
es
xchg
ret
rcr
cmp
cmps
sub
(bad)
inc
or
nop
or
movs
push
and
std
fnstsw
bound
or
mov
push
lds
mov
lds
out
lods
mov
adc
retf
and
fnstcw
and
lods
adc
jbe
adc
popf
push
inc
cmps
dec
adc
out
jnp
jo
test
stc
lahf
push
mov
retf
cmp
xor
bound
stos
adc
fld
push
pop
dec
into
dec
not
mov
jbe
lods
xor
les
or
dec
loopne
shr
(bad)
adc
mov
into
sti
cmp
inc
jl
test
sbb
add
std
and
jo
outs
rcl
sub
cmp
ret
jmp
leave
ins
into
inc
addr16
pop
jp
fwait
jge
loopne
in
and
xor
adc
sub
lds
mov
hlt
xchg
or
xor
dec
fidiv
push
jg
into
mov
sub
rol
std
mov
sub
and
sbb
pusha
inc
(bad)
jo
push
scas
sbb
loop
es
jne
inc
addr16
or
cmc
sbb
push
cdq
popa
fcmove
scas
lods
and
aam
mov
aaa
mov
sub
xchg
lds
jno
ror
sub
jmp
mov
mov
mov
retf
mov
add
hlt
or
inc
scas
repz
mov
push
pop
mov
mov
dec
jp
jbe
test
pop
sti
aad
pusha
mov
sti
and
fild
jmp
mov
xchg
or
data16
(bad)
cmps
lds
mov
pop
aas
aas
clc
push
xor
lds
jne
daa
repnz
fwait
dec
ret
jbe
popa
sti
lods
mov
add
cs
xor
dec
jle
movs
in
std
outs
scas
out
xchg
(bad)
or
das
aas
popa
jge
mov
test
push
ss
adc
sub
aaa
imul
data16
mov
add
inc
dec
adc
push
daa
and
cs
stos
pop
fst
push
fs
cmp
mov
dec
js
rcl
fs
add
imul
jbe
cmp
out
dec
mov
push
jne
call
push
adc
inc
dec
xor
sahf
mov
mov
mov
dec
pop
into
jbe
cmps
aaa
jne
and
mov
add
jo
jno
add
sub
test
inc
fadd
and
into
stos
jge
mov
stc
outs
sbb
(bad)
jg
adc
popa
adc
and
adc
mov
xchg
lahf
(bad)
fnstenv
adc
aam
add
adc
jno
adc
dec
mov
push
frstor
cmps
in
cmps
gs
(bad)
ss
add
xchg
add
fistp
mov
nop
(bad)
(bad)
xchg
push
nop
pop
mov
cmp
aaa
xchg
dec
iret
sub
call
adc
mov
dec
inc
imul
xchg
fmul
cmps
pop
mov
mov
outs
pop
cmps
and
jmp
push
mov
arpl
cmp
mov
push
aaa
pop
hlt
xor
fwait
mov
mov
es
scas
and
dec
mov
mov
(bad)
aas
add
pop
mov
lods
cmp
xor
mov
lds
repnz
movs
xchg
push
adc
or
movs
hlt
retf
popa
push
int3
push
movs
cmc
adc
push
outs
pop
dec
stos
ins
and
je
(bad)
cwde
mov
out
pop
cs
popa
xchg
sub
cs
xchg
popa
and
fcmove
and
pop
std
mov
shr
or
cmp
cs
adc
and
addr16
push
dec
loope
push
repnz
test
aas
test
jp
add
xchg
mov
mov
jmp
fistp
(bad)
cmp
xchg
cmps
dec
xchg
xor
(bad)
pop
jae
cmc
pop
test
mov
lods
ss
xchg
jno
es
jno
mov
mov
inc
dec
sub
sbb
mul
daa
out
(bad)
mov
jno
lods
retf
aas
and
fs
(bad)
mov
dec
jp
repnz
out
(bad)
outs
shl
repnz
xlat
xchg
(bad)
push
into
push
inc
out
push
outs
sub
add
fucom
xor
xchg
adc
fs
cmps
add
lahf
pop
enter
pop
mov
ja
icebp
mov
or
bound
aas
outs
mov
stc
inc
add
xchg
aam
test
(bad)
scas
imul
push
stos
fneni(8087
fwait
scas
mov
int3
cmps
or
adc
test
out
push
push
inc
outs
mov
mov
jge
inc
pop
bound
xor
out
xor
sub
mov
cli
(bad)
or
cmp
outs
jmp
jne
sbb
xor
popf
and
fs
scas
push
bound
es
ins
push
out
jg
popa
lds
mov
inc
stos
loope
sbb
xchg
jmp
push
test
pop
jp
inc
jle
(bad)
jnp
pop
add
sub
movs
adc
or
aas
sbb
test
jp
test
jle
cs
bound
adc
adc
ja
lds
xchg
inc
js
cmp
sbb
fidiv
xor
pop
mov
fs
pop
cmc
push
cmps
jle
sti
add
(bad)
push
lods
ss
movs
orps
sbb
inc
mul
xor
bnd
(bad)
out
dec
and
scas
(bad)
popf
out
lds
mov
xor
cvtpi2ps
cmps
sub
dec
movs
push
jecxz
pop
mov
cmc
push
ror
movs
pop
sub
sar
movs
fstp
in
mov
pop
dec
xchg
mov
pop
inc
sub
cmp
int
lods
bound
pop
int
mov
imul
into
adc
sub
arpl
and
mov
push
mov
xor
sti
rcl
gs
lods
pop
(bad)
xlat
pusha
mov
push
sub
mov
repnz
mov
scas
fild
stos
in
sar
jmp
cli
xor
mov
xor
push
xchg
mov
and
icebp
fstp
stos
and
adc
cdq
es
mov
lds
xlat
dec
cmp
cmp
fdiv
int3
inc
in
idiv
mov
(bad)
loope
cmp
sub
or
cld
adc
add
movs
pusha
in
sar
aaa
ja
and
or
and
jb
dec
mov
mov
inc
add
cmps
loope
pop
xchg
cs
movs
test
adc
das
adc
fmul
addr16
movs
lahf
dec
mov
(bad)
cmps
sbb
mov
imul
xor
inc
ficom
xor
jb
mov
aas
sbb
pop
repz
ins
int3
aaa
lods
and
mov
movs
jnp
test
add
imul
mov
dec
dec
xor
imul
sub
cmp
into
xor
push
int3
cmp
sub
dec
scas
push
jge
aas
fild
jnp
mov
and
imul
xor
imul
mov
jae
mov
xchg
test
mov
dec
xchg
add
popa
jmp
mov
sbb
(bad)
loope
sbb
ret
mov
out
mov
outs
aas
adc
xchg
mov
adc
adc
adc
stos
xor
lahf
fsub
jb
popf
stos
or
sub
cmp
sbb
dec
(bad)
jmp
mov
rcr
aas
xchg
stos
imul
inc
add
es
dec
mov
sar
sbb
scas
clc
movs
sub
add
mov
mov
pop
das
rcl
mov
cmp
(bad)
cmp
ret
add
push
das
addr16
cmps
icebp
dec
scas
xor
adc
adc
xor
add
dec
cmp
outs
pop
loope
adc
and
xchg
out
cmc
inc
aas
xchg
loope
(bad)
cmp
je
loop
inc
cmps
cdq
loope
mov
leave
mov
cli
imul
add
not
aas
shl
xchg
lds
cld
xor
xchg
outs
xor
into
pop
add
movs
fsubr
cmps
mov
dec
sub
imul
loopne
fisub
and
inc
jnp
sbb
dec
addr16
jge
pop
push
xchg
ret
leave
and
jnp
pop
add
mov
sbb
mov
xchg
mov
hlt
out
inc
mov
push
cli
inc
movs
sbb
imul
cmps
xor
dec
xchg
lds
cmp
imul
mov
xor
xor
(bad)
jmp
movs
(bad)
jmp
lods
sub
clc
push
sub
adc
js
retf
call
lods
adc
addr16
shr
and
aas
les
add
out
sub
ds
mov
mov
scas
mov
test
js
push
in
cmp
xchg
das
movs
(bad)
cmp
inc
inc
in
daa
push
and
mov
push
xor
and
aaa
(bad)
cwde
push
rcl
movs
xchg
sub
lds
retf
push
(bad)
(bad)
mov
lods
push
mov
(bad)
jge
enter
xchg
sub
dec
addr16
mov
mov
sub
ins
jmp
pop
or
mov
imul
lds
fwait
sbb
pop
sbb
outs
jne
ins
mov
mov
adc
or
neg
and
add
adc
ret
mov
daa
aaa
cmp
xor
stos
movs
rcl
jae
inc
inc
jno
outs
inc
sub
pop
sar
scas
scas
adc
push
inc
sbb
scas
and
add
sahf
mov
and
sub
cmp
add
imul
adc
inc
fucomip
mov
dec
mov
push
cmp
mov
jmp
add
adc
adc
mov
bound
pop
aad
push
pop
mov
push
ja
xor
stos
stos
push
jmp
mov
mov
(bad)
or
shl
jl
jmp
pop
dec
scas
sbb
xor
push
dec
dec
ja
jl
jne
jbe
out
aaa
sub
ret
ja
mov
pop
cmp
je
enter
scas
or
adc
in
push
cmps
or
int
adc
retf
clc
pop
pop
sbb
dec
ds
loop
inc
jnp
cmp
push
xchg
scas
fsub
arpl
aad
rcr
inc
idiv
shr
cmps
pop
adc
cs
sub
mov
fst
iret
arpl
xor
or
xor
dec
retf
popa
sub
xchg
sub
xor
cmps
add
mov
cli
in
push
cmps
mov
cmps
mov
or
pusha
cld
mov
xor
jo
lds
data16
lahf
pop
pop
cmp
mov
sub
push
lods
sub
mov
addr16
push
lock
pushf
test
js
push
or
shl
inc
xor
sub
sbb
cmps
mov
sub
outs
inc
out
ret
movs
jmp
in
(bad)
idiv
mov
jle
xor
sub
sbb
mov
test
cdq
ror
mov
or
fld
jne
sub
rcl
jno
gs
mov
loop
xor
adc
adc
or
inc
(bad)
jns
stos
ror
inc
mov
stos
test
sub
and
lds
scas
data16
pusha
out
mov
es
mov
mov
push
js
daa
scas
jnp
push
xchg
xchg
adc
(bad)
lock
adc
mov
int
pop
mov
fidivr
mov
scas
and
cli
ins
mov
cmp
jb
stos
adc
lahf
imul
mov
dec
packssdw
inc
jle
mov
aad
pop
pop
and
cmp
xchg
fsubrp
aas
mov
sub
and
push
xlat
add
cld
lods
xor
mov
jno
mov
aas
mov
lds
cmp
ret
and
xor
lahf
imul
jbe
mov
and
mov
dec
shr
jle
adc
jle
sub
loopne
pop
jg
addr16
cmp
cmp
in
dec
xor
(bad)
mov
push
cmp
sbb
ins
dec
mov
add
or
mov
imul
imul
inc
lods
loop
sub
push
mov
jno
or
cld
xchg
scas
arpl
push
cmp
hlt
fistp
aaa
mov
(bad)
xor
movs
loope
ds
gs
cmps
sbb
push
in
mov
cmp
stos
(bad)
lods
retf
sbb
out
and
stos
jno
stos
test
pop
and
leave
jo
stos
cmc
(bad)
sahf
aas
xor
dec
mov
dec
xchg
pop
es
(bad)
dec
mov
out
inc
add
imul
push
mov
ret
ins
mov
mov
into
and
out
(bad)
pusha
sbb
fcomp
inc
popa
and
stos
jecxz
pop
push
push
cmps
add
lods
fnstcw
in
jmp
mov
cmp
inc
and
pop
mov
sub
je
jl
add
imul
inc
push
call
dec
cld
lods
mov
out
movs
cmp
call
mov
sbb
jge
mov
or
and
cmp
out
in
cmp
mov
stos
and
jo
lods
aaa
cmp
add
cmovge
(bad)
xchg
mov
clc
and
(bad)
adc
cmp
cmc
out
out
outs
adc
lds
es
or
dec
xor
ror
jo
js
push
(bad)
fldcw
push
or
jno
js
or
adc
retf
imul
push
scas
(bad)
retf
mov
jae
clc
loopne
sub
mov
sub
xor
xchg
ins
(bad)
mov
jmp
push
xchg
outs
(bad)
scas
jmp
jg
aam
adc
mov
ret
sbb
mov
pop
xlat
popa
mov
inc
cli
ins
clc
push
jo
popa
pop
mov
mov
(bad)
ss
into
mov
arpl
sar
dec
sbb
xchg
add
xlat
adc
ficomp
xor
ret
adc
push
sub
sub
xor
push
mov
dec
adc
push
adc
push
mov
(bad)
xor
std
leave
mov
pop
xchg
xchg
ins
push
cmp
shl
stc
sub
xor
cmps
adc
mov
push
mov
imul
mov
jnp
inc
jle
stos
sub
adc
(bad)
push
movs
jg
movs
pop
fdivr
loopne
cmp
cmp
fld
jno
mov
jecxz
stos
div
xchg
mov
and
(bad)
adc
in
loop
lock
(bad)
out
stos
xchg
add
inc
mov
adc
je
in
les
inc
inc
xor
cmps
mov
sbb
push
in
cmp
cmps
cwde
in
sbb
pop
adc
mov
outs
out
out
fiadd
fdivrp
movs
lods
xor
xchg
dec
aaa
sub
pop
jmp
(bad)
loope
mov
stos
ret
jge
out
jmp
into
stos
fidivr
das
inc
sub
push
dec
dec
outs
jge
lock
ja
(bad)
popf
push
in
out
jmp
or
inc
adc
and
(bad)
adc
mov
lods
das
ja
mov
hlt
fnstcw
jge
xchg
xchg
hlt
lods
imul
(bad)
pop
in
or
iret
adc
jbe
cmp
xchg
cmps
fisubr
jl
popa
data16
lds
ds
sbb
jns
cmp
or
inc
fcomip
js
sbb
inc
aas
mov
xchg
ficom
lea
lds
dec
adc
push
test
inc
daa
stos
xlat
ins
adc
out
inc
aam
fld
out
pop
jg
and
jnp
bnd
outs
mov
lods
stos
xor
push
mov
adc
lods
pusha
sahf
add
aas
xor
adc
retf
cli
mov
pop
call
dec
adc
movs
xchg
mov
cmovae
pop
ret
ins
gs
adc
and
cmp
movs
jb
fdivr
adc
stos
mov
mov
mov
xor
jp
mov
movaps
fisub
scas
inc
inc
sbb
and
aaa
outs
fdivr
nop
(bad)
loope
vpcmpeqw
or
xlat
mov
or
stos
addr16
push
inc
stos
fisttp
jae
pop
imul
ret
in
enter
mov
and
jmp
and
mov
add
or
pusha
dec
imul
in
lods
adc
jb
cli
dec
push
in
lea
retf
mov
jecxz
daa
pop
movs
xchg
sub
stos
inc
rcl
xchg
dec
fsubrp
in
outs
mov
lods
inc
test
cdq
mov
arpl
ins
jmp
fsub
jb
and
xchg
ins
mov
jae
mov
out
daa
cld
bnd
dec
add
xor
mov
je
jmp
icebp
sbb
aam
mov
add
xchg
mov
jmp
add
popa
jb
dec
and
sbb
mov
jmp
pop
adc
dec
iret
xor
sub
adc
mov
test
push
push
js
mov
in
scas
mov
pop
leave
or
(bad)
sbb
shr
xor
ds
sub
push
jo
(bad)
and
pushf
ins
mov
adc
adc
and
sar
adc
ins
xor
jecxz
lea
xor
mov
jo
lods
push
pop
call
scas
outs
jl
leave
inc
mov
adc
mov
es
push
mov
sub
or
sub
add
jmp
jns
dec
mov
fs
jne
out
mov
pop
jne
outs
fwait
mov
mov
mov
mov
cmp
jg
and
jmp
out
mov
jb
lahf
mov
and
add
(bad)
cdq
cmps
out
test
aas
bound
inc
dec
mov
mov
outs
js
dec
pop
push
pop
pop
movs
vunpcklps
push
ins
scas
lods
push
add
jbe
cmps
dec
in
lahf
hlt
mov
adc
pop
test
sub
stos
add
retf
imul
xlat
inc
scas
clc
push
cmp
jge
test
into
inc
fdiv
sahf
lds
sbb
push
add
out
xchg
fadd
scas
adc
jnp
ja
xor
and
xor
lods
mov
leave
rol
out
xlat
jo
mov
jg
sbb
loop
js
lahf
sbb
cli
(bad)
mov
or
push
stos
lods
mov
dec
xor
div
cmp
and
aas
fwait
test
mov
push
adc
lods
jle
lods
stos
imul
scas
jg
lds
and
or
cmp
sub
jmp
jae
or
gs
(bad)
sbb
outs
jo
mov
mov
sbb
loop
in
stc
mov
push
mov
adc
mov
push
mov
sahf
(bad)
scas
xor
gs
mov
test
cmps
out
xchg
cmc
jbe
and
adc
std
js
iret
outs
inc
jns
jle
cmp
pop
nop
sub
inc
mov
or
pop
jp
aaa
lea
les
jmp
mov
jge
(bad)
push
add
mov
mov
cmp
(bad)
and
lds
lock
fld
leave
push
mov
pop
pop
call
stos
scas
frstor
aas
push
add
sub
cmp
cwde
jge
inc
rol
mov
inc
mov
pop
sub
cli
cmp
pop
ffreep
in
cmp
(bad)
jecxz
pop
stc
push
sahf
xor
stos
inc
push
ror
js
xor
jno
and
push
repnz
lods
outs
(bad)
in
cmp
mov
outs
pop
xchg
imul
sbb
test
es
adc
cmp
mov
stos
lds
out
loop
xchg
and
xchg
inc
add
mov
cmp
hlt
inc
add
retf
mov
adc
sbb
jae
jp
fidivr
aam
(bad)
sub
ret
jmp
and
cdq
xchg
(bad)
xor
addr16
mov
aaa
inc
jmp
jge
mov
stc
pop
sbb
xchg
jmp
adc
lds
adc
shl
xor
sbb
mov
retf
gs
cwde
imul
daa
jo
cmp
std
or
fst
out
add
stc
movs
sti
push
mov
adc
mov
jg
repz
mov
pusha
jns
inc
lods
je
dec
fcom
or
mov
stos
sbb
into
jnp
icebp
pop
add
mov
mov
movs
push
jmp
das
sub
fnsave
addr16
mov
cli
movs
mov
test
cmp
adc
cdq
push
pop
sbb
js
pop
cmp
ins
sbb
imul
cmp
jns
imul
add
mov
mov
scas
retf
into
(bad)
xor
cmps
add
je
or
or
out
mov
lods
in
aaa
xor
cs
cmp
icebp
lods
test
adc
dec
shl
leave
and
xchg
adc
ins
jno
pop
pop
xchg
invd
ins
lds
lods
dec
pop
mov
shl
pushf
out
int
inc
jp
fadd
push
sbb
fsub
popa
test
sub
test
sbb
(bad)
pop
fwait
sbb
lahf
mov
sar
(bad)
jo
lea
xor
das
loope
mov
mov
fwait
adc
add
fnstcw
das
repnz
sbb
jmp
inc
setne
mov
jo
call
test
inc
sub
es
pop
test
xor
xlat
lock
test
repz
jnp
dec
jg
lods
pop
arpl
adc
push
ficom
jle
in
pop
mov
(bad)
push
arpl
mov
fdiv
adc
pop
cli
sahf
and
mov
aas
pusha
pop
mov
bound
jl
xor
jp
xchg
in
lds
lods
inc
inc
inc
dec
test
daa
mov
mov
adc
cld
arpl
dec
je
int
jae
and
pop
mov
and
cs
(bad)
stc
adc
pop
mov
mov
jnp
imul
dec
hlt
and
(bad)
and
ds
cmps
push
js
inc
pop
sub
mov
out
fwait
bound
or
pop
sub
retf
(bad)
xchg
mov
imul
lods
stos
cmp
mov
mov
adc
xlat
mov
xor
add
or
xchg
in
neg
test
lods
or
add
ficomp
mov
xchg
dec
js
add
addr16
mov
fwait
xchg
inc
push
dec
push
lds
xchg
test
jg
aas
retf
cmp
sub
or
or
add
inc
imul
mov
mov
cwde
or
loop
push
icebp
ja
es
daa
hlt
push
pop
xchg
adc
idiv
cmp
dec
or
mov
in
mov
repnz
aas
lock
sbb
daa
lods
push
xchg
(bad)
(bad)
aas
icebp
es
and
enter
aaa
inc
scas
cmp
or
shr
movs
sbb
push
(bad)
(bad)
cmp
dec
cli
push
cmp
mov
sti
lds
(bad)
aas
test
mov
add
lahf
nop
lods
push
add
ins
sbb
pop
je
adc
stos
std
cmp
push
jmp
sbb
mov
inc
dec
fst
dec
dec
and
fbstp
das
cmp
ss
ins
daa
cld
(bad)
adc
dec
jg
jge
jmp
mov
gs
aas
jl
xor
or
std
cmp
jb
sbb
push
or
fild
jmp
aas
jle
leave
sub
in
arpl
lods
add
add
cmp
fwait
or
test
out
push
and
mov
repnz
ret
sub
stos
mov
outs
inc
xchg
mov
fcmovb
in
(bad)
fcom
add
mov
mov
add
dec
push
jns
cmp
into
adc
scas
call
sub
jb
movs
stc
adc
adc
jmp
mov
pop
fist
das
sbb
or
xor
or
sbb
cmp
fdivr
mov
neg
inc
pop
xchg
xor
scas
mov
jp
xchg
data16
pop
cmp
sbb
jecxz
mov
mov
jmp
mov
cmp
add
adc
add
inc
vprotb
movs
sar
jnp
adc
cmps
adc
pop
push
pop
ins
(bad)
retf
pop
xchg
outs
inc
movs
fdivr
push
shr
lahf
lds
gs
arpl
mov
or
pop
jg
popf
ret
adc
mov
jp
js
add
adc
mov
sub
jp
sbb
push
mov
adc
sub
mov
into
jmp
sub
aas
sbb
cmp
lds
div
xor
push
and
sahf
scas
mov
std
inc
daa
pop
dec
lods
push
mov
(bad)
aam
mov
movs
ins
mov
adc
sbb
sbb
jg
inc
mov
pusha
adc
jmp
jge
cmps
fdiv
xchg
jno
enter
mov
in
push
inc
lods
jg
inc
mov
mov
sub
sar
mov
(bad)
movs
push
ret
adc
rol
cmp
popa
jne
and
sbb
mov
outs
adc
mov
mov
jno
lds
imul
pop
mov
imul
mov
aas
and
jl
jnp
dec
mov
push
adc
push
(bad)
adc
test
adc
cmp
jno
neg
cmp
(bad)
imul
aam
jo
outs
sub
pop
lods
adc
sar
sub
cmp
lods
mov
call
add
mov
sbb
push
add
icebp
lea
stc
add
sub
sbb
mov
fwait
or
mov
imul
dec
pop
mov
and
push
inc
and
cmps
xchg
cmps
or
adc
pop
je
(bad)
mov
fs
ins
dec
pop
cld
sub
xchg
jns
mov
int3
cmps
push
add
je
sahf
xchg
popa
movs
mov
cmp
cmps
cli
push
inc
push
lds
je
mov
cmp
mov
int
mov
inc
scas
mov
lahf
imul
outs
popf
and
fcom
pop
mov
sbb
les
mov
xchg
sbb
mov
test
addr16
xchg
enter
lahf
mul
je
scas
pop
mov
mov
stos
and
xlat
imul
outs
mov
cmp
adc
sar
pop
and
retf
test
mov
repnz
xor
push
and
jmp
lds
int3
popf
movs
iret
(bad)
xchg
into
jae
movs
call
les
ds
mov
xor
pusha
or
mov
loopne
adc
call
mov
xchg
or
xchg
sbb
outs
pop
lds
aad
sbb
test
ret
xor
(bad)
mov
add
or
mov
mov
push
fnstenv
lods
loope
jge
mov
sub
fdivr
push
pushf
aas
sbb
outs
mov
out
and
pop
jb
xchg
sub
jle
movs
int3
ds
sbb
(bad)
out
push
pop
mov
inc
jo
icebp
mov
cld
xor
(bad)
leave
sub
and
jnp
inc
cmp
cmp
inc
fild
mov
sahf
clc
int3
loope
movs
shufps
sub
pop
rol
sar
int
inc
jbe
or
xchg
inc
jmp
push
push
sahf
dec
pop
cmp
push
(bad)
scas
dec
sbb
lock
mov
and
mov
pusha
(bad)
movs
cs
inc
hlt
loop
gs
loope
into
arpl
push
shl
dec
cmp
sahf
imul
mov
stos
pushf
out
test
pop
test
sub
xor
jns
aam
(bad)
(bad)
(bad)
jecxz
lods
adc
test
mov
xor
push
call
adc
xchg
or
movs
lds
mov
jno
add
stos
mov
shr
jl
scas
cmps
fsub
sbb
arpl
mov
leave
and
jmp
inc
xchg
(bad)
loope
cmp
scas
add
stos
push
dec
popa
aaa
sub
or
rol
pop
push
lods
add
push
mov
push
add
mov
cmc
pop
(bad)
dec
inc
sti
inc
mov
and
jae
dec
add
adc
(bad)
mov
js
std
scas
scas
jge
mov
ret
sub
call
jbe
add
aam
neg
xor
jbe
aam
pop
jg
sbb
fmul
jns
cdq
lds
sbb
lods
add
ins
push
sub
mov
jne
aad
int3
and
lea
xchg
adc
test
xor
jno
cs
push
push
jp
lods
cs
int3
shl
sub
popf
add
add
arpl
mov
mov
adc
stos
add
jmp
(bad)
scas
lds
sub
pop
test
or
dec
mov
js
cmp
(bad)
sti
pop
jbe
push
mov
popf
fdiv
pop
sub
outs
add
push
xor
icebp
cmp
xchg
xchg
(bad)
je
out
jge
iret
(bad)
into
ret
sub
aas
mov
xlat
cmp
data16
dec
(bad)
pop
jo
fisub
sahf
mov
popa
stc
mov
inc
call
inc
xlat
retf
(bad)
(bad)
sbb
jns
jg
inc
test
outs
jns
sbb
(bad)
data16
sub
adc
dec
cmps
sahf
sbb
test
out
xchg
jae
jecxz
aam
xor
add
ds
(bad)
or
mov
inc
les
push
mov
clc
inc
(bad)
and
pusha
loop
(bad)
push
sti
es
lods
je
pop
(bad)
fwait
int
hlt
pop
push
daa
in
mov
or
jmp
in
xchg
cmp
pushf
inc
sti
jg
lea
fsubr
mov
mov
dec
push
retf
sbb
cmps
rol
(bad)
mov
push
popa
ds
mov
or
adc
push
push
lods
inc
pop
sub
arpl
out
xor
or
and
mov
in
out
mov
shl
or
outs
adc
adc
lods
or
int
or
inc
adc
in
inc
inc
daa
jno
cs
mov
inc
imul
les
loopne
loopne
outs
jmp
(bad)
in
xor
mov
inc
call
jne
mov
retf
(bad)
and
cmp
inc
cld
jne
ds
lds
cmp
je
addr16
aas
jmp
test
ja
jnp
ins
aaa
lds
add
pusha
jnp
or
mov
and
ins
adc
cmp
jg
in
leave
jo
fld
mov
mov
or
sub
outs
scas
xor
cs
mov
fist
call
(bad)
jb
bnd
mov
retf
ins
lods
mov
es
inc
inc
retf
sub
sub
es
mov
iret
ins
fdivr
fcomp
xchg
in
cmp
sub
push
mov
cmp
stos
mov
(bad)
jmp
rol
lods
fiadd
ds
adc
mov
pushf
jecxz
in
pop
outs
sbb
test
mov
aaa
sub
retf
jnp
repnz
jmp
mov
add
gs
mov
pop
cmp
out
retf
jne
push
jmp
fprem1
cmp
(bad)
jle
or
xchg
pop
add
and
push
je
sbb
and
cld
push
ds
lods
pop
in
pop
add
cdq
xchg
stc
into
mov
mov
je
mov
js
lahf
(bad)
xchg
mov
cmc
xor
aam
sbb
scas
sub
mov
in
adc
xor
neg
jg
lds
dec
les
cdq
(bad)
stos
cdq
and
jnp
jle
inc
and
cmps
sbb
out
(bad)
in
add
mov
dec
inc
mov
mov
cmps
int
fmul
pop
es
adc
stc
and
mov
mov
sub
in
movs
push
mov
xchg
in
cmp
and
clc
ja
pop
jb
lahf
xchg
loopne
xor
and
add
fsub
pop
inc
mov
pop
lds
jae
add
mov
in
iret
adc
ins
in
mov
movs
jle
in
jge
in
xchg
fistp
mov
jne
cmp
adc
mov
jne
pop
mov
fnstsw
add
adc
mov
addr16
and
mov
jg
clc
das
out
mov
stos
movs
adc
ret
shr
sub
pop
xlat
add
inc
ss
and
jg
add
aas
aaa
movs
ja
stos
mov
lahf
test
in
adc
pushf
ss
(bad)
call
aas
popa
sub
mov
mov
adc
jns
add
sub
dec
inc
scas
or
xor
data16
popa
outs
lea
popa
xor
int3
scas
dec
cmp
pop
sbb
pop
clc
mov
inc
aam
cli
sub
scas
pop
in
jo
and
add
ja
movs
or
xor
inc
(bad)
sbb
test
cmp
ret
dec
ss
loop
mov
mov
dec
jge
mov
(bad)
cmps
sti
adc
into
pusha
in
call
movs
dec
popf
push
pop
xor
push
push
stos
ror
inc
in
pop
jnp
imul
lock
aas
in
divps
inc
or
cmp
dec
lds
jo
inc
push
jbe
in
std
xor
ret
xchg
aaa
stos
into
mov
or
loop
mov
inc
mov
pusha
fdivr
call
add
loopne
retf
das
push
mov
sub
test
(bad)
popa
ret
in
jge
add
out
inc
test
dec
and
push
mov
mov
pop
movs
mov
js
nop
mov
addr16
lds
mov
sbb
and
cmps
mov
adc
mov
xchg
cmp
sbb
je
(bad)
or
fisub
int
loope
jae
jge
out
sub
enter
adc
setns
add
cmc
cmp
jecxz
arpl
lods
outs
cmp
cmp
(bad)
fsubp
pop
adc
out
adc
jg
loope
fcomp
jns
in
dec
or
pop
lds
scas
xchg
cmp
or
daa
jne
ja
repnz
xchg
mov
jp
out
jmp
jge
ds
(bad)
mov
lods
cmp
jecxz
std
cmps
es
in
or
(bad)
mov
mov
cli
out
dec
cmps
inc
daa
retf
aad
cmp
adc
fdivr
je
std
mov
mov
jg
dec
test
xlat
outs
mov
adc
in
and
(bad)
sub
lds
jge
movq
ds
jg
sub
push
jno
push
out
and
aas
sub
dec
mov
xor
pop
inc
lods
sbb
lds
rol
test
loopne
stos
mov
scas
adc
fdivr
mov
clc
mov
xchg
or
into
xor
(bad)
aaa
push
cmp
push
mov
mov
or
or
(bad)
js
push
adc
setnp
mov
inc
lods
sbb
or
es
call
dec
(bad)
call
(bad)
test
(bad)
retf
dec
inc
pop
lds
xchg
and
sbb
pop
inc
das
aam
pop
ins
adc
pop
cmps
push
aaa
inc
lds
xor
(bad)
or
fidiv
rcl
pop
push
cmps
(bad)
mov
aaa
dec
mov
out
cmp
cld
cmp
daa
ret
scas
lds
or
push
xchg
ret
and
cld
fld
jns
scas
bound
jb
ret
pop
push
mov
add
add
test
enter
lds
out
dec
sbb
and
mov
pop
dec
aaa
out
sti
movs
mov
aas
icebp
outs
scas
cli
imul
sub
sar
sub
out
xchg
xor
data16
aam
mov
retf
mov
sub
or
je
or
aas
stos
inc
jle
data16
out
or
(bad)
pop
(bad)
xchg
pusha
call
mov
out
adc
pop
je
call
jg
leave
mov
mov
and
lods
xchg
cld
outs
dec
pop
cmp
ins
ror
push
adc
bound
ja
adc
mov
mov
sub
in
(bad)
(bad)
cmp
addr16
pop
jnp
in
stos
mov
popf
push
lahf
scas
and
rcl
add
mov
mov
dec
mov
cmp
adc
test
sub
mov
mov
or
xchg
lds
fbld
lds
aam
loopne
push
rcr
lods
or
lea
out
es
jno
inc
mov
cwde
jns
ins
jge
jno
ss
mov
sub
mov
cmova
pop
imul
mov
adc
add
inc
mov
(bad)
out
jmp
lods
cli
and
rol
cmps
lock
mov
cli
out
sub
in
jp
loope
ja
(bad)
add
xor
dec
mov
jmp
cmc
mov
pop
jp
bound
ds
or
in
jo
pop
fst
stc
mov
mov
(bad)
ret
adc
push
sbb
shl
sbb
(bad)
jne
in
xchg
cmp
ffree
inc
dec
jne
sbb
jno
movs
sahf
cmp
xor
mov
xor
jle
fcmovbe
in
and
ret
ret
and
in
in
popa
cld
adc
rdmsr
dec
imul
jecxz
jnp
jg
inc
dec
enter
or
cmp
pop
pop
mov
outs
inc
mov
pop
mov
rcl
fwait
ss
cmps
movsx
pop
in
aas
pop
mov
sub
fidivr
mov
test
jmp
stos
dec
push
add
ss
sub
dec
sahf
push
mov
and
sub
fwait
xchg
fs
dec
jge
sahf
cmp
dec
sub
pop
mov
mov
mov
mov
bnd
jle
inc
pusha
test
add
mov
test
sbb
mov
mov
mov
dec
aad
mov
fcomp
push
ficom
cdq
lds
inc
(bad)
add
cmp
movs
inc
(bad)
pop
xor
enter
gs
xchg
and
fs
loope
ins
(bad)
dec
mov
movs
xabort
stos
xchg
jae
inc
xor
and
je
retf
adc
jl
push
xchg
or
xlat
stos
inc
out
inc
enter
sti
(bad)
fnstcw
out
outs
lahf
cs
cmc
mov
call
inc
fs
mov
call
pop
scas
pop
sub
(bad)
fnstcw
pop
or
add
xchg
icebp
or
ret
pmullw
mov
out
or
pusha
adc
sbb
xchg
push
pop
sbb
fs
fnstsw
and
mov
jnp
dec
xor
movs
and
cmp
mov
jp
dec
sub
int3
jnp
or
inc
jge
xchg
stos
mov
and
stos
or
test
jge
or
arpl
sahf
mov
es
xor
and
scas
push
push
in
fnstsw
dec
in
xchg
mov
stos
movs
push
test
ins
popf
shl
pop
mov
dec
mov
inc
fcom
sbb
sub
xor
adc
sbb
and
cli
imul
das
repz
mov
pop
jns
imul
call
mov
mov
mov
inc
add
lods
cmp
lods
retf
inc
cmps
and
aad
xchg
add
pop
gs
clc
call
pop
cmp
sar
mov
or
data16
dec
js
cmp
sub
mov
xor
push
lods
mov
ficomp
nop
dec
les
sub
pop
jo
adc
pop
lea
xchg
xor
inc
xlat
loopne
leave
fnstcw
call
mov
and
cwde
xlat
jo
daa
ror
cmp
inc
test
call
ins
add
push
imul
pop
not
cmps
cs
stos
inc
cwde
loopne
push
cmps
cli
push
and
jmp
movs
mov
pusha
fidivr
mov
mov
js
and
call
pop
xor
(bad)
adc
mov
test
(bad)
mov
add
out
pop
cmps
retf
and
add
lahf
xor
fwait
push
outs
or
(bad)
fist
outs
bnd
mov
or
js
sbb
and
inc
inc
jl
push
lods
shl
cmp
jae
sub
mov
daa
outs
adc
das
dec
and
pop
retf
sar
lods
daa
mov
mov
daa
(bad)
stos
or
lds
ror
ret
inc
sbb
retf
mov
xchg
test
sub
pusha
push
ret
and
cmpxchg
popa
pop
movs
push
jp
ins
in
cmp
xor
push
scas
data16
push
popf
icebp
xlat
scas
mov
seta
pop
or
push
out
pop
ja
adc
push
and
aam
daa
popa
jmp
xchg
mov
push
(bad)
cmp
or
test
adc
inc
mov
gs
test
mov
mov
dec
ret
mov
outs
stos
dec
(bad)
(bad)
cld
(bad)
mov
adc
xchg
and
out
pop
cmp
cmps
pop
mov
test
mov
xchg
mov
das
icebp
int3
scas
jb
js
stos
sahf
clc
xchg
fdiv
adc
rcr
imul
lds
fsubr
push
std
mov
xchg
cli
in
and
inc
repnz
and
xor
xlat
jmp
sub
(bad)
retf
fcomp
rol
outs
stos
out
mov
ud1
and
mov
adc
sub
stos
into
leave
jl
inc
xor
movs
in
(bad)
cmps
imul
sub
xchg
xor
lods
jbe
push
imul
sub
or
fwait
retf
imul
mov
call
add
xchg
push
imul
movs
dec
dec
lods
mov
mov
sub
pop
stos
lea
sub
sub
icebp
xchg
sbb
dec
pop
in
js
in
cmps
and
ss
add
out
xchg
pop
nop
push
ret
and
adc
dec
outs
mov
out
test
xor
and
xchg
mov
mov
scas
in
sahf
dec
jnp
aam
mov
enter
aas
dec
sub
scas
test
inc
jns
push
mov
dec
adc
jmp
inc
xlat
jge
gs
mov
(bad)
call
mov
or
(bad)
popf
push
adc
jns
stos
adc
cs
call
ins
adc
and
mov
ins
inc
movs
push
dec
push
cmps
imul
xor
lock
(bad)
cmp
(bad)
cmp
inc
cmp
aas
shr
(bad)
mov
xor
and
sub
ins
adc
xchg
fstp
push
icebp
xor
mov
cmp
jb
mov
mov
out
or
xchg
hlt
es
inc
aas
ins
stos
ja
sub
pusha
pop
adc
(bad)
or
jle
mov
mov
pop
mov
aas
sbb
jge
cmp
scas
lock
jl
fadd
adc
out
xchg
or
scas
div
xor
jns
retf
cld
adc
rcl
sahf
popa
mov
icebp
imul
mov
mov
jmp
hlt
bound
out
inc
out
cmp
fisub
mov
fst
jg
push
fs
or
push
cli
push
es
push
dec
lea
lods
cli
mov
dec
xor
hlt
cld
jae
push
add
repz
sbb
dec
test
jge
in
add
xor
out
push
or
push
sbb
add
aad
cmps
xlat
std
push
repnz
jb
add
sbb
adc
dec
aaa
add
frstor
gs
pop
jp
add
pop
loope
lds
or
out
dec
and
rcl
cmp
add
retf
(bad)
aad
cmp
and
sub
retf
inc
mov
mov
push
inc
mov
das
nop
mov
mov
lds
shl
in
push
scas
out
stos
dec
enter
movs
cmp
inc
inc
test
push
nop
jg
jecxz
int
popa
sub
dec
pusha
xchg
jbe
outs
addr16
xchg
aam
cmp
ds
fwait
(bad)
push
xchg
jge
(bad)
ds
stos
mov
pop
in
fsub
mov
mov
xchg
jge
cmps
in
add
test
jge
mov
cmps
fs
lock
cmp
xchg
arpl
sbb
sub
lea
jo
fidivr
shl
mov
fwait
adc
adc
lahf
add
dec
fidiv
adc
jp
bound
stos
js
das
push
inc
dec
xchg
inc
sahf
loop
or
jmp
mov
and
sub
and
pop
push
jmp
gs
fdiv
cmp
pmaxsw
add
adc
ss
stos
fcmovnb
aam
inc
inc
cmps
mov
push
jg
ja
pop
movs
adc
clc
jp
lds
jnp
and
pop
fsubr
fs
mov
gs
frstor
xchg
outs
mov
push
inc
(bad)
xlat
stc
push
lods
jge
sub
ror
(bad)
bound
adc
jp
pop
ja
popf
and
cmp
cmps
mov
xchg
mov
add
aam
aad
adc
jmp
sub
mov
mov
outs
lds
imul
mov
sbb
mov
jo
outs
push
cs
xchg
popf
inc
sti
mov
cmps
jecxz
repz
or
vmovmskpd
xor
add
dec
test
dec
in
lds
ins
sbb
push
sar
cmp
test
enter
and
adc
(bad)
push
pop
call
(bad)
clc
popa
ja
mov
pop
pop
pop
xor
loop
cmc
rcl
pop
mov
mov
xchg
and
mov
mov
leave
lds
cmp
cmp
sub
test
in
and
call
push
adc
inc
clc
int
xor
xchg
not
out
(bad)
push
je
movs
xchg
push
mov
es
mov
ja
mov
dec
imul
inc
add
xchg
jo
pop
fwait
bound
pusha
ss
pop
xchg
fwait
cmp
call
mov
cmp
mov
aaa
stos
mov
inc
fistp
lods
jbe
ror
dec
sar
loop
cmc
ror
popa
or
lods
jmp
(bad)
cdq
mov
in
mov
sti
and
(bad)
sub
call
cmps
imul
fbld
pop
add
scas
enter
rol
xchg
rol
outs
sbb
adc
jne
les
xchg
jmp
cmp
dec
lahf
cmps
pop
leave
jg
mov
mov
sbb
shl
(bad)
(bad)
lock
lahf
inc
daa
(bad)
add
sahf
arpl
aam
and
adc
sub
sbb
je
mov
fidivr
mov
pop
xor
movs
sbb
jo
push
lahf
xchg
and
lahf
jle
or
(bad)
lds
in
mov
addr16
in
sub
gs
fadd
jnp
push
scas
je
mov
jle
mov
and
stc
lock
or
jmp
ds
test
sub
or
push
or
icebp
retf
cmp
add
or
lock
je
or
mov
mov
stos
into
fnstsw
in
push
fistp
or
lods
jmp
xchg
xor
hlt
call
ja
push
jmp
ficomp
in
add
xchg
and
cmp
es
xchg
push
jb
xchg
dec
mov
outs
jecxz
cmps
in
movs
mov
mov
cmc
jp
test
stos
lds
or
dec
xchg
aad
rol
cmp
int
xchg
mov
lods
sti
mov
int3
(bad)
popa
xor
dec
ror
aam
add
adc
mov
dec
sub
jp
pop
mov
mov
fcomp
test
icebp
xchg
xor
dec
jb
pop
mov
bnd
pop
dec
outs
and
jge
popa
mov
or
data16
outs
dec
sbb
pop
xor
enter
stos
adc
mov
mov
push
lea
jl
out
int
bound
adc
test
dec
add
sub
test
outs
gs
rcl
push
and
or
(bad)
rol
sbb
jmp
aas
sub
pop
mov
xor
cmp
push
mov
in
movs
arpl
add
rcl
jns
xchg
xchg
jp
pop
sbb
sbb
sub
cmp
das
xchg
push
outs
rol
mov
es
mov
or
dec
imul
or
(bad)
int3
jo
out
fbstp
add
xchg
cmp
loopne
jnp
and
pop
sub
push
add
or
add
mov
ror
and
xchg
stos
ror
cmp
scas
fcom
enter
loopne
adc
std
inc
and
in
mov
enter
fldenv
add
pop
jg
mov
dec
mov
stos
inc
or
rol
es
jle
ja
and
jmp
scas
inc
adc
(bad)
loope
clc
push
mov
sub
fs
es
add
jns
inc
mov
jecxz
push
and
cmp
and
adc
mov
pop
and
mov
ret
scas
fiadd
shr
adc
mov
loop
js
push
imul
rcl
fwait
push
std
mov
lods
cmp
lods
adc
aas
jne
mov
loopne
js
lds
popa
jne
rcr
mov
cmp
mov
jnp
movs
xlat
aam
rol
(bad)
cdq
in
pushf
mov
jae
pop
inc
loope
mov
cmps
mov
add
enter
pop
ins
sti
ja
in
mov
xchg
in
jle
cmp
test
add
fwait
xchg
(bad)
mov
xor
dec
mov
dec
adc
jp
cmp
call
outs
cmps
cs
das
xor
add
aas
ror
outs
into
fstp
and
xchg
pop
add
pop
inc
mov
aam
je
(bad)
mov
ins
iretw
mov
and
ss
cmps
daa
dec
mov
and
dec
pop
mov
jo
aas
cli
adc
int
push
xor
jge
inc
imul
hlt
scas
xchg
leave
scas
imul
ret
outs
cwde
(bad)
cwde
std
jnp
jge
cmp
fadd
rol
fucomi
push
xchg
dec
jbe
lds
jo
les
pop
outs
cmp
mov
adc
dec
pop
lods
arpl
lds
mov
sub
test
addr16
(bad)
push
leave
sub
imul
scas
sbb
xchg
cmp
jmp
mov
add
(bad)
sub
dec
(bad)
stos
cmp
dec
(bad)
xchg
stos
pop
arpl
adc
outs
xchg
mov
push
dec
mov
inc
mov
pop
(bad)
aas
cmp
(bad)
or
in
mov
(bad)
movs
pop
mov
xchg
sbb
jnp
dec
jnp
fdivr
loopne
clc
nop
push
in
xor
popa
fdivr
je
sbb
cli
dec
inc
mov
iret
cs
mov
imul
inc
(bad)
sbb
mov
add
(bad)
push
cmp
mov
sub
sar
test
mov
and
pop
cwde
les
or
pusha
(bad)
out
cmp
stos
dec
iret
xlat
aas
jnp
sub
push
int
sti
mov
cwde
gs
sub
sub
xchg
call
rcr
pop
fwait
dec
stos
mov
int3
add
stos
fcom
mov
mov
cmps
cmc
mov
cmp
pop
push
sbb
xor
cmps
lahf
fldcw
popa
jge
add
les
aas
cmps
arpl
sub
cmps
aad
sub
adc
mov
and
mov
nop
mov
sub
shl
add
inc
and
adc
lds
jg
sub
fld
loopne
cmc
mov
nop
pop
inc
mov
jge
ins
sub
xchg
outs
dec
mov
inc
sbb
repnz
push
cld
sub
test
out
cmp
test
mov
(bad)
cmps
sub
daa
and
mov
repnz
test
xlat
inc
(bad)
fld
dec
pop
or
or
jno
stc
(bad)
mov
aad
fldenv
(bad)
fisubr
int3
push
(bad)
adc
iret
mov
and
push
dec
(bad)
sub
jmp
xor
adc
jns
inc
mov
icebp
mov
dec
push
cmps
jns
add
push
mov
in
pop
les
nop
dec
and
lds
pop
(bad)
jbe
mov
mov
ins
popa
push
stos
mov
imul
pop
fimul
fs
sti
nop
sbb
push
fild
sahf
mov
and
test
jmp
mov
add
stc
pop
ret
pop
dec
(bad)
in
cmp
push
jbe
xchg
fs
dec
sti
lock
or
rcr
cs
aas
inc
jmp
cld
mov
popf
je
sub
jmp
xchg
cmp
jmp
pop
adc
scas
add
sbb
mov
lock
test
cmps
jge
cli
push
out
mov
jne
(bad)
addr16
adc
fcomp
or
mov
gs
gs
sbb
jne
clc
pop
xchg
mov
mov
imul
xchg
dec
sub
inc
inc
ror
scas
pop
cmp
out
jnp
imul
div
or
call
sub
loop
lfs
mov
jge
repz
adc
sub
jns
mov
sbb
jp
enter
push
jns
shl
xor
mov
div
or
add
or
inc
ficomp
and
(bad)
mov
jne
jmp
loop
mov
jecxz
and
bound
scas
je
cmps
pop
inc
stos
push
xchg
sti
pop
cmp
mov
push
push
push
pop
lods
inc
inc
js
scas
fadd
int3
adc
jp
outs
mov
dec
stc
fs
aam
or
lahf
or
outs
cmp
lods
mov
frstor
sbb
add
and
mov
in
aad
add
inc
adc
bnd
mov
mov
std
xlat
dec
scas
add
dec
jo
add
out
push
ja
and
mov
push
ficom
cmp
ja
sbb
(bad)
push
push
int
aam
cwde
cmps
adc
push
gs
(bad)
addr16
jecxz
in
adc
je
jbe
mov
sub
jno
dec
popa
test
mov
rcl
(bad)
sahf
pop
sbb
stos
mov
shl
int3
scas
ss
scas
lds
cmps
cmp
sub
ja
mov
xor
cmp
pop
inc
push
in
xor
imul
sub
push
inc
pop
mov
popa
adc
fs
scas
push
mov
cmp
(bad)
xor
fsubr
jns
cmp
push
mov
pop
adc
push
xchg
push
xlat
cmps
mov
xor
cmps
les
sub
div
mov
lods
xor
repnz
add
mov
inc
jecxz
add
out
mov
fiadd
inc
addr16
pop
scas
iret
scas
fs
dec
test
cmps
and
in
daa
psllw
xchg
in
inc
fsub
pop
es
pusha
outs
(bad)
lock
cmp
cli
fs
out
and
(bad)
jno
xor
sbb
in
dec
mov
or
fs
push
pop
lods
fisttp
das
jp
retf
repnz
les
scas
and
mov
int
lods
inc
or
push
jno
sub
outs
daa
icebp
(bad)
test
pop
or
mov
(bad)
out
test
dec
lods
push
popa
(bad)
xor
call
jnp
scas
repnz
out
adc
repz
cmps
fmul
imul
sbb
scas
sub
mov
push
lods
sbb
xchg
daa
fwait
lods
int
loope
outs
cdq
xlat
stc
push
push
add
xchg
cmps
mov
jmp
out
inc
outs
iret
mov
mov
xor
and
test
adc
leave
push
push
mov
(bad)
mov
pop
mov
lahf
in
cmp
addr16
xchg
ret
in
jg
add
aad
jmp
repnz
inc
mov
jl
xchg
mov
push
mov
fild
loop
push
leave
outs
(bad)
mov
adc
or
sbb
stos
cmp
jb
or
inc
(bad)
stos
mov
cs
(bad)
or
jbe
shl
jno
sub
shl
test
call
add
mov
and
mov
(bad)
fldz
sti
paddsb
inc
pop
pop
in
or
scas
lods
pop
xor
outs
pop
sub
movs
mov
dec
sub
in
xchg
jae
scas
cli
stc
and
mov
or
clc
jb
xor
shl
loope
xor
jecxz
xchg
enter
jl
push
js
mov
movs
push
push
fwait
mov
ins
lods
fisubr
xchg
cmps
jp
xchg
mov
cmp
mov
leave
test
jmp
lods
xlat
mov
fdiv
jnp
fidiv
shl
push
sub
stos
sbb
and
addr16
arpl
pusha
leave
das
adc
mov
(bad)
sub
popa
inc
test
mov
cwde
hlt
stos
push
pop
inc
lods
das
data16
test
mov
mov
cmp
test
int3
sbb
das
dec
sti
inc
int3
lds
add
xor
jo
fsub
lds
mov
push
cmps
stos
pop
sar
sbb
inc
and
xchg
mov
je
mov
aaa
pop
xchg
call
or
icebp
mov
mov
loopne
jge
mov
mov
inc
into
pop
and
fptan
pop
loopne
cmp
loop
scas
ret
sbb
jns
int
inc
fadd
mov
out
daa
and
lods
dec
adc
stos
xor
dec
xchg
xchg
cmp
dec
add
shl
mov
scas
cld
pop
fdiv
out
js
mov
or
lahf
leave
data16
sbb
cmp
and
fnstenv
pop
das
pop
lds
(bad)
rdpmc
jne
sar
out
and
(bad)
iret
in
inc
call
push
hlt
fstp
inc
add
xchg
cdq
sbb
pop
outs
nop
and
cmp
je
stos
adc
aas
ss
sbb
mov
mov
fwait
pop
mov
mov
or
outs
pusha
xchg
mov
mov
mov
pop
shr
cld
pop
lods
add
sub
xchg
cmp
div
xor
inc
sub
in
jmp
mov
pop
mov
cmp
addr16
mov
pushf
mov
gs
sbb
fstp
sub
dec
jno
rcr
leave
and
pop
cli
(bad)
sub
jl
xchg
and
push
es
fadd
jge
sar
in
sbb
cwde
cwde
int
popa
int3
xor
test
imul
jns
xor
xor
xor
loopne
jle
mov
imul
mov
stos
xor
dec
dec
dec
aad
cmps
(bad)
jae
and
jp
stos
sbb
pop
in
aas
aaa
daa
cmps
pextrw
mov
mov
out
add
xor
(bad)
xor
aaa
jl
push
sbb
das
mov
into
xchg
pop
gs
popa
mov
lahf
jg
movs
push
adc
dec
xchg
dec
stos
(bad)
sub
sti
mov
je
std
fwait
mov
mov
(bad)
call
fst
adc
lds
jb
mov
int3
ja
xchg
lods
out
and
fdivr
xlat
sbb
sub
add
xlat
push
sub
mov
(bad)
ror
add
aas
jnp
loopne
shr
xchg
in
jne
xchg
scas
pop
push
mov
push
ficom
adc
fidiv
(bad)
jle
jmp
mov
sub
inc
push
pop
cli
mov
aas
in
cmp
popa
sub
popf
inc
fwait
scas
mov
scas
or
lods
pop
das
(bad)
scas
xchg
mov
cmp
jb
cmp
into
aaa
in
movs
inc
lock
les
lods
outs
mov
sub
inc
sub
jmp
sub
lea
ret
jl
std
mov
movs
mov
daa
dec
dec
pop
mov
mov
xor
jae
xchg
cmp
(bad)
lds
sub
adc
(bad)
xchg
add
clc
ja
in
pop
loop
dec
movs
dec
(bad)
daa
out
jns
shl
lods
inc
test
add
lods
pusha
xor
jae
out
jg
inc
outs
sub
push
(bad)
js
jl
ss
int
(bad)
pop
push
sbb
cmp
icebp
js
movs
lds
xlat
hlt
scas
fdiv
mov
adc
mov
inc
mov
and
xlat
xor
mov
pop
test
sub
mov
cwde
dec
pop
outs
jno
out
lahf
jo
cmps
mov
dec
xor
adc
mov
cmps
xchg
scas
fcom
or
dec
inc
icebp
pusha
push
inc
mov
fwait
data16
cld
add
test
dec
mov
ja
jg
lahf
pop
push
dec
lds
mov
test
jns
mov
shl
into
bound
jp
jne
mov
mov
into
mov
push
ja
sbb
jbe
add
cmps
ins
aas
mov
daa
push
adc
jmp
xchg
add
(bad)
adc
outs
gs
daa
mov
es
mov
pop
inc
int3
cmp
(bad)
mov
push
dec
sub
pop
test
repnz
xchg
jmp
stos
test
jbe
imul
bnd
cmp
adc
adc
loopne
cli
mov
jne
das
mov
stos
dec
jne
lahf
xor
mov
stc
call
aas
int
push
int3
cmps
test
es
sbb
pop
jle
xor
popa
fcmovnu
push
sbb
xchg
sub
imul
(bad)
sub
mov
ret
jne
popf
and
js
in
jae
jecxz
jb
popa
dec
inc
mov
jp
dec
pop
mov
pop
outs
sub
test
in
ds
popa
xor
sbb
cmp
pusha
mov
cmp
repnz
ficom
out
xor
xor
or
lods
jb
fisub
mov
mov
adc
cmp
lods
cmp
js
or
mov
es
mov
push
rcr
call
mov
mov
mov
movs
shr
push
loope
(bad)
mov
(bad)
sub
mov
imul
dec
lods
pop
ficom
aas
jmp
jne
mov
sbb
mov
stos
inc
pop
ins
(bad)
scas
aam
push
daa
fs
fcomi
outs
xchg
adc
or
jle
outs
adc
mov
pop
ret
(bad)
mov
jge
and
mov
into
leave
pop
xchg
jae
lods
jmp
push
cli
pusha
push
not
cmp
adc
cmp
jge
pop
xor
jmp
cmc
mul
mov
lds
jae
clc
pop
out
inc
cmps
jno
fs
es
fisub
mov
mov
mov
mov
inc
cmp
mov
mov
data16
mov
movs
push
lock
xchg
inc
pop
inc
(bad)
stos
jg
test
jmp
pushf
xlat
lahf
movs
lds
sar
cmp
add
pop
loope
inc
or
mov
fild
jg
hlt
cmps
cmp
jns
or
inc
lods
js
mov
outs
lds
mov
sahf
movs
shl
mov
dec
cmc
add
in
aas
pop
mov
lds
fld
mov
add
xchg
icebp
les
push
dec
test
inc
cli
pop
push
jae
popf
cwde
gs
jp
inc
js
xor
retf
lahf
pop
push
in
jno
cli
pop
in
and
adc
adc
rcl
xchg
mov
sub
ja
fs
and
fstp
je
xchg
jnp
and
mov
sub
daa
and
in
dec
adc
test
jae
je
out
push
jp
pop
jp
rcl
mov
lods
(bad)
xor
inc
or
push
fdivr
adc
or
sub
clc
lds
mov
cmp
adc
inc
(bad)
popa
or
pop
or
cmp
rol
imul
push
mov
aam
cmps
jmp
ins
add
stos
fld
icebp
cs
(bad)
ins
adc
or
xor
das
out
and
add
loop
and
mov
jmp
loopne
mov
ret
cwde
arpl
fs
or
pop
pop
(bad)
jno
and
cmp
nop
or
push
xchg
mov
icebp
loop
jp
cmps
(bad)
pop
mov
outs
and
movs
jmp
enter
fwait
push
repnz
ficomp
mov
lahf
cmp
adc
out
mov
aam
mov
push
jae
dec
daa
idiv
xor
push
inc
pusha
(bad)
lahf
jbe
dec
lds
and
dec
and
ins
stc
adc
mov
(bad)
fdivr
mov
inc
data16
je
aam
cld
jae
push
cmp
mov
jnp
daa
push
jmp
sub
cmp
sub
push
or
stos
outs
pop
cld
jns
in
jno
(bad)
and
pop
mov
jns
cmp
fwait
or
aad
arpl
loop
in
mov
or
mov
aas
cmp
fwait
test
hlt
sbb
stos
(bad)
cld
cmp
mov
jne
popf
sahf
test
push
pop
sbb
stos
push
(bad)
jp
ficomp
xor
inc
ror
mov
cld
xor
hlt
mov
adc
xchg
inc
idiv
test
xchg
sbb
ss
mov
jmp
sar
sahf
sub
mov
leave
mov
pop
and
push
retf
mov
mov
popa
jns
mov
or
fs
xchg
imul
jo
push
xor
mov
cmp
aas
stc
enter
add
repz
dec
push
fidivr
fcom
adc
or
mov
sar
dec
mov
push
lods
dec
pop
push
add
mov
cld
movs
xchg
and
pop
popa
pop
inc
mov
arpl
mov
out
js
test
aam
popf
adc
addr16
xchg
xor
movs
cmp
into
aaa
out
ss
loopne
aad
retf
daa
repz
int3
push
inc
xchg
cli
inc
jg
dec
push
jns
cmps
shl
mov
(bad)
fs
fld
inc
jnp
movs
mov
add
imul
push
or
push
stos
jnp
call
or
inc
dec
xchg
cli
pop
xor
mov
cmp
aaa
jecxz
es
movs
adc
jle
push
mov
cmps
xor
pop
rcl
ficom
popf
lods
jge
inc
ja
sub
cmp
adc
push
mov
(bad)
dec
xchg
and
jecxz
ret
jne
cmp
lds
and
mov
cmp
inc
mov
jl
mov
bound
std
data16
arpl
aas
jg
jge
sbb
repnz
add
inc
dec
out
xchg
xor
fs
leave
jnp
daa
jp
sub
aas
stos
inc
loope
movs
add
test
xor
xchg
cmps
ja
push
into
pusha
xor
mul
and
mov
movhps
mov
xor
(bad)
stos
mov
(bad)
add
pop
pop
mov
repnz
pop
pop
mov
pop
xor
out
cli
(bad)
pop
sub
mov
mov
and
mov
jno
sub
sub
mov
jo
mov
fdivr
aad
scas
(bad)
xlat
jo
lahf
mov
stos
mov
sti
test
mov
lea
sbb
in
and
push
sbb
mov
xor
push
lds
fst
jne
cmp
les
xor
ror
(bad)
js
cs
cli
xor
aaa
jle
dec
lods
xor
es
enter
pop
push
icebp
lods
xor
push
lahf
cmp
lock
call
jns
imul
popa
pushf
dec
(bad)
inc
mov
(bad)
cmp
repnz
hlt
(bad)
push
mov
pop
(bad)
retf
mov
fdivr
sub
add
dec
inc
jno
ins
(bad)
and
pushf
in
fnstcw
dec
nop
test
or
and
mov
test
adc
(bad)
js
mov
dec
push
lods
cmp
adc
scas
inc
push
sub
(bad)
cmp
aam
jecxz
int3
lea
add
push
sbb
outs
mov
aam
dec
inc
aam
jle
xor
pop
es
enter
xchg
xor
out
sbb
cli
pop
or
retf
fs
into
icebp
(bad)
and
int3
jmp
sbb
fldenvw
pop
cmp
jbe
mov
(bad)
mov
and
jmp
inc
pop
repnz
cmp
(bad)
or
int
je
and
sbb
(bad)
mov
mov
dec
inc
add
loopne
mov
popa
cmp
in
cmps
fsubr
xor
xlat
dec
(bad)
sti
enter
hlt
mov
xor
movs
mov
xchg
jae
xor
aaa
setne
mov
ficomp
outs
and
ins
jp
(bad)
mov
cmp
xor
lds
cmp
sub
aad
add
popa
jecxz
mov
fcmovbe
push
outs
mov
les
retf
mov
xchg
sbb
cmp
mov
jecxz
lahf
inc
sbb
lods
jnp
xor
xor
int
jle
outs
sti
test
xchg
mov
sub
mov
gs
pop
inc
jo
push
sub
imul
inc
and
pop
cmps
cs
mov
dec
(bad)
fs
shr
jnp
imul
retf
stos
add
in
(bad)
std
add
movs
jbe
xchg
lds
sbb
fs
shl
dec
and
enter
adc
icebp
inc
in
cmp
ss
outs
mov
fnsetpm(287
sbb
cmp
push
adc
push
enter
sbb
aas
push
mov
mov
iret
sar
popa
pop
push
jo
fs
lods
icebp
ret
push
mov
or
icebp
cmovge
xor
into
in
mov
mov
lods
cmc
neg
pop
aad
mov
outs
dec
test
xor
mov
xchg
fbld
lds
in
lea
movs
adc
cmp
sbb
cli
or
mov
jmp
ja
xchg
stos
ja
imul
loope
std
xchg
fisttp
outs
shl
pusha
stos
loop
addr16
shr
les
and
aas
and
jae
(bad)
jae
mov
sbb
pop
inc
retf
cmp
ret
or
and
xchg
aad
pusha
fst
es
pop
xor
inc
lds
frstor
lods
xor
jmp
hlt
inc
lods
xchg
loop
cwde
loope
cs
and
jnp
sar
dec
sub
inc
hlt
rol
or
sbb
cmp
mul
push
jecxz
add
xchg
pop
push
movs
enter
stos
imul
arpl
fwait
add
push
test
jnp
int
ss
xchg
fs
in
into
add
dec
fnstenv
(bad)
ror
mov
ss
rcr
sub
and
mov
daa
adc
jns
outs
aas
aaa
out
mov
mov
jmp
shl
clc
out
jge
or
or
inc
repnz
add
push
jne
popa
and
mov
loope
mov
mov
ins
data16
das
adc
movs
add
mov
push
loope
fdiv
add
jp
(bad)
aad
popa
lods
dec
test
(bad)
(bad)
into
inc
or
push
adc
outs
xor
cmps
and
mov
shl
mov
inc
lahf
inc
test
mov
scas
fbstp
mov
ja
add
stos
or
daa
inc
push
outs
xchg
ja
lds
dec
cmps
test
out
inc
sub
and
add
and
jge
jb
add
xor
mov
popa
adc
cld
pop
shr
or
jno
ja
adc
mov
outs
and
inc
test
lahf
sbb
xor
sahf
fistp
xchg
outs
jle
cmp
cmps
add
(bad)
aas
push
outs
cmp
adc
mov
dec
aas
sub
jmp
sar
imul
es
xchg
push
and
mov
sti
int3
sbb
shr
and
shl
loop
cmps
outs
es
push
jo
scas
(bad)
outs
mov
out
adc
movs
sub
jecxz
js
xchg
mov
aam
xor
frstor
sbb
xor
inc
test
sub
or
jo
and
mov
lds
cmovb
or
dec
mov
xor
sub
lods
stos
bound
xor
jp
mov
sbb
bound
pop
cmc
fmulp
fdiv
sub
jl
and
or
or
into
fcomp
cmc
daa
ficomp
inc
xor
fisttp
inc
icebp
mov
iret
daa
jmp
in
ror
pop
sbb
lods
mov
call
test
push
fisttp
std
neg
pop
jg
inc
inc
xor
retf
hlt
aaa
(bad)
push
pop
sub
imul
cli
mov
scas
xchg
clc
cmp
mov
mov
dec
lods
pusha
jecxz
sbb
sahf
idiv
dec
div
nop
(bad)
cmp
fcomip
gs
pop
cmps
mov
jmp
cdq
add
clc
and
sahf
adc
lods
xor
int3
popa
or
jnp
push
mov
mov
ret
call
or
sbb
or
xchg
fist
das
dec
(bad)
xchg
sahf
pop
pop
cmps
add
or
xor
lahf
cmp
xlat
neg
stos
or
dec
ret
push
fcomp
cmp
into
sbb
or
jb
mov
(bad)
repnz
xchg
mov
jns
adc
into
inc
test
aaa
push
scas
stos
mov
aad
scas
fmul
inc
mul
mov
jg
aas
daa
push
shl
sbb
stc
push
cmps
int
xchg
je
mov
les
daa
test
int3
dec
pop
mov
xor
cmc
pop
out
stos
push
std
stos
add
pop
xchg
sub
push
sub
pop
inc
mov
mov
fcomp
outs
cmp
aad
xor
test
sub
inc
xchg
lds
fs
test
test
fsubrp
add
rol
loope
test
or
ret
pop
mov
xor
push
mov
xchg
mov
lea
std
jecxz
movs
sub
sar
and
lods
retf
mov
gs
vmptrld
jle
lods
sub
or
(bad)
rol
mov
ficomp
mov
hlt
sahf
in
xchg
jnp
xchg
add
shr
sar
pop
xchg
outs
mov
dec
inc
fdivr
push
adc
sub
xor
ss
sub
int3
inc
out
ror
out
inc
rcl
inc
or
jne
test
push
outs
cs
int3
xchg
into
mov
push
(bad)
fist
lods
mov
cs
pop
(bad)
add
(bad)
dec
cmp
adc
mov
call
lea
arpl
call
xchg
mov
cmp
jne
jecxz
mov
or
sub
jno
jns
push
cld
sub
xchg
out
adc
push
retf
mov
or
dec
lds
(bad)
not
mov
adc
rcr
mov
fcomp
jge
xchg
lods
push
stc
push
(bad)
in
cmp
daa
iret
es
xor
jle
retf
dec
or
or
in
vxorps
inc
sub
mov
fcomp
idiv
pop
imul
arpl
sbb
mov
(bad)
in
mov
out
imul
out
mov
cdq
imul
movs
add
scas
das
mov
inc
cmps
not
cmps
push
jge
(bad)
fwait
in
pop
popf
pop
movs
clc
out
dec
dec
fisub
repnz
mov
mov
fisubr
xchg
add
mov
out
and
(bad)
jecxz
pop
js
ins
jo
jne
inc
mov
add
lds
cmp
sub
mov
fdivr
adc
cmps
cdq
inc
cmp
dec
mov
(bad)
imul
ins
or
jb
cs
mov
mov
mov
and
mov
push
mov
xor
pushf
sub
mov
repnz
ret
mov
mov
or
std
dec
mov
xchg
xor
xchg
stos
pop
stc
fs
js
sbb
or
movs
pop
jg
add
or
sbb
push
xchg
or
mov
ins
sub
mov
mov
in
lods
aaa
inc
mov
vorpd
mov
cmps
int3
and
ja
mov
and
fbld
mov
test
xor
cmp
jmp
mov
sbb
xor
outs
adc
mov
mov
jge
adc
jae
sbb
push
cmp
sub
xor
fistp
mov
(bad)
retf
push
cmp
xlat
std
sbb
mov
lahf
push
push
mov
xor
add
nop
sbb
lods
dec
loope
adc
xchg
test
add
fnsave
fwait
jne
mov
stos
xchg
mov
sub
loopne
aaa
lods
or
sub
cmps
arpl
xor
adc
std
xchg
dec
mov
xchg
push
pushf
hlt
(bad)
aam
add
push
dec
(bad)
jno
sbb
pop
jmp
push
xchg
movs
ret
and
or
add
mov
in
sti
sti
aam
jl
push
lods
(bad)
in
dec
add
xor
inc
inc
call
xor
outs
outs
popf
test
inc
popf
inc
inc
pop
aad
xchg
jl
inc
push
push
mov
sub
mov
ds
rcr
lods
mov
fwait
inc
or
push
dec
xor
xchg
ret
js
mov
retf
mov
push
(bad)
push
sahf
gs
aas
mov
aas
pop
dec
lds
cmps
inc
pop
pop
dec
push
gs
stos
add
mov
pop
mov
mov
push
pop
adc
ret
push
pop
pop
xor
pusha
cmps
dec
aas
loope
mov
ja
sti
scas
push
js
xlat
ins
retf
mov
ins
push
pop
sbb
jns
fbstp
or
test
popa
mov
pop
aad
clc
cmp
mov
mov
jae
sar
push
add
add
mov
(bad)
ffree
pop
(bad)
push
bnd
inc
fbstp
adc
cmc
shr
cmps
xchg
lds
pop
lods
sahf
inc
call
add
test
std
movs
imul
repz
dec
push
cwde
dec
or
sbb
sub
jo
(bad)
mov
mov
outs
ret
or
fisttp
jb
ret
mov
mov
adc
test
ret
call
cmp
pusha
jmp
call
push
lea
jne
call
daa
mov
push
push
(bad)
xchg
pop
ret
shl
loopne
mov
xchg
pop
jno
and
test
(bad)
cmp
arpl
mov
pop
jnp
mov
add
adc
ror
sbb
push
sbb
leave
pop
xor
aaa
cmps
jmp
scas
inc
xor
dec
sbb
gs
pop
neg
mov
inc
mov
push
jmp
push
mov
sub
test
or
xor
dec
mov
xchg
jns
neg
mov
sub
inc
mov
sub
mov
mov
adc
into
ret
or
push
xor
popf
push
push
adc
imul
sub
mov
adc
xor
jmp
adc
jmp
inc
aaa
push
xchg
or
mov
ins
je
mov
or
cmps
pop
sahf
xor
inc
outs
stos
daa
sbb
movs
stos
dec
stos
mov
cdq
in
mov
or
dec
xchg
cdq
aaa
jg
add
sbb
nop
mov
pop
ret
sub
mov
xor
push
cmps
test
ins
daa
cld
add
loopne
test
add
call
aam
add
mov
shl
mov
cmc
sub
call
dec
and
push
(bad)
and
(bad)
test
mov
mov
sti
jmp
sahf
lods
or
lds
jg
xchg
pop
imul
lea
sbb
in
mov
mov
or
dec
shld
cmp
mov
lds
jne
push
inc
and
addr16
je
mov
stc
cdq
outs
dec
jle
pop
pop
ds
cmp
retf
rcr
stc
dec
call
pushf
push
call
lea
jae
push
pushf
jmp
jo
call
push
call
sub
in
not
inc
cmps
pop
add
adc
sub
retf
adc
mov
push
inc
fmul
call
xchg
and
push
push
pushf
lahf
inc
xlat
add
fs
fs
or
sahf
jecxz
inc
cmp
daa
adc
stos
jecxz
ja
mov
pop
jp
stc
inc
inc
pushf
aam
(bad)
clc
add
xor
mov
pop
out
and
enter
pop
sub
sahf
repnz
test
pop
mov
or
(bad)
idiv
imul
and
imul
loope
xchg
out
jo
mov
xbegin
or
sti
push
pop
jge
stos
scas
cmp
test
jmp
xchg
mov
call
xchg
icebp
in
add
jbe
inc
test
inc
into
inc
imul
ds
push
adc
call
adc
shrd
and
xor
lahf
fild
sub
shl
push
test
inc
mov
mov
mov
xor
jg
dec
inc
cdq
sbb
test
push
adc
fld
cdq
or
cmp
mov
mov
mov
stos
or
out
xor
std
js
pop
sub
frstor
ficom
xchg
loopne
xchg
mov
js
es
(bad)
push
(bad)
leave
push
push
xchg
push
(bad)
ds
xchg
gs
cmp
xchg
jbe
cmp
push
(bad)
push
cmp
jns
push
loopne
int
scas
mov
inc
stos
inc
mov
int
mov
bound
sub
gs
daa
jne
push
dec
(bad)
jno
imul
dec
pop
lods
sub
xor
scas
pop
ss
add
imul
out
lds
or
sub
adc
out
repz
sahf
nop
movs
sbb
xor
mul
push
dec
in
and
jp
push
xchg
test
mov
pop
ror
lods
movs
mov
xor
(bad)
not
rol
int
mov
add
mov
adc
adc
jmp
ins
in
clc
or
xchg
mov
gs
pop
add
jnp
jl
push
pop
pop
inc
sub
icebp
xchg
dec
es
cmp
xchg
sbb
lods
inc
daa
pusha
xor
mov
mov
sub
inc
push
push
and
nop
fbstp
pop
ret
jb
outs
add
and
out
pop
add
mov
jmp
adc
pop
mov
add
mov
loopne
aas
imul
std
pop
jg
push
aaa
push
cmps
adc
fdiv
mov
jns
movs
pusha
inc
test
outs
xor
ja
jne
sbb
out
mov
jne
push
inc
sbb
cwde
mov
jne
xchg
nop
push
pushf
push
and
dec
retf
pop
or
out
fwait
in
cmc
jo
push
xchg
mov
jmp
sub
pop
cmp
push
stc
and
aam
mov
sar
fs
enter
fist
pop
das
ds
or
mov
ja
jne
into
push
cmp
call
es
(bad)
push
push
jno
jo
inc
cmps
pusha
(bad)
sti
clc
xchg
std
or
test
(bad)
fsubr
jo
aad
push
jno
mov
(bad)
test
lds
pushf
push
iret
cld
les
ja
xor
push
sub
out
call
(bad)
fdiv
add
xchg
dec
push
sub
mov
push
and
dec
mov
xor
leave
mov
mov
data16
xlat
in
sbb
bound
sbb
jns
inc
pop
shl
mov
shl
xor
adc
ss
add
iret
ret
or
mov
jne
pusha
jo
(bad)
(bad)
jge
mov
das
icebp
ror
push
dec
retf
jb
repnz
in
les
dec
cmps
or
cmp
add
es
loop
fisub
dec
sti
out
popf
sub
and
outs
sti
imul
mov
idiv
add
scas
mov
cld
cmp
jns
jge
cmps
sbb
sar
inc
xchg
mov
(bad)
sub
mov
push
jecxz
sub
or
fmulp
mov
push
pusha
cmp
pop
cdq
ja
(bad)
mov
push
dec
rol
add
jb
or
outs
aad
mov
sub
xor
pop
inc
cmp
shr
push
dec
dec
cmp
jbe
mov
ficomp
pop
sub
xchg
fimul
xchg
add
fsub
fwait
inc
jmp
xchg
test
add
inc
mov
and
ins
(bad)
repz
je
xchg
shr
bt
test
xor
test
cmp
cmp
lea
jge
sub
cmc
push
cmc
stc
not
clc
pushf
cmp
movsx
push
pushf
lea
bswap
mov
jmp
test
popf
jae
(bad)
ficomp
mov
loop
adc
stc
mov
test
push
fmul
je
jge
fisttp
mov
mov
out
test
push
xchg
xchg
aam
xor
push
retf
pop
inc
leave
aas
or
loopne
jns
sub
popf
loope
dec
int3
and
je
or
xor
mov
shl
hlt
mov
cmc
sti
out
sbb
inc
enter
call
dec
sar
jne
sbb
arpl
in
adc
shld
xor
sbb
rol
ror
lea
mov
sbb
cmp
add
shl
mov
stc
pushf
bt
test
test
push
lea
je
call
add
jb
mov
int
ds
fist
dec
xchg
shr
popf
xor
push
push
movs
or
mov
adc
cmp
sbb
imul
push
xchg
inc
or
inc
in
mov
adc
test
dec
add
xor
jl
add
mov
push
xor
jp
xchg
inc
out
jg
push
div
cwde
cmps
cmps
push
add
outs
mov
fisubr
jne
cwde
mov
std
xor
and
mov
ins
adc
and
(bad)
xchg
call
jns
sar
xchg
push
cmp
sub
sbb
or
(bad)
and
(bad)
jns
inc
jmp
push
(bad)
call
sti
push
outs
sbb
xor
fs
mov
jne
retf
lock
ss
cdq
xor
pop
or
rol
aaa
out
test
test
les
rcr
dec
jge
call
fidiv
ret
jae
inc
cmps
fist
and
xchg
hlt
test
add
test
fcos
scas
movs
ins
outs
ss
mov
push
(bad)
scas
(bad)
sti
cmps
js
pop
xchg
test
xchg
push
adc
xchg
push
push
xchg
test
jns
das
scas
xchg
jno
sahf
(bad)
mov
fiadd
push
je
(bad)
or
loope
push
sbb
lock
mov
je
sub
jp
stos
push
pop
jo
(bad)
in
mov
lods
mov
push
jo
mov
sbb
xchg
out
out
mov
xchg
mov
push
repnz
out
neg
shl
test
xor
jl
rcr
dec
fs
aad
arpl
ficom
(bad)
pushf
cs
cmp
loopne
add
pop
fnsave
or
add
jne
inc
scas
pop
inc
inc
out
call
push
sub
add
or
ins
push
dec
inc
movs
push
cmp
add
mov
jecxz
and
push
imul
imul
js
scas
mov
xchg
arpl
cwde
sar
(bad)
sub
dec
loope
jmp
mov
xchg
data16
cdq
push
clc
js
aam
push
aas
(bad)
call
loop
jnp
inc
and
lods
js
std
or
fdiv
mov
jae
jnp
int
daa
mov
adc
sub
loope
dec
cmc
aaa
dec
enter
loope
cs
mov
cwde
pop
mov
lea
jne
pushf
call
rcr
mov
pushf
sub
jp
cmp
pusha
cmp
pushf
pusha
call
ds
bound
mov
push
stos
imul
jecxz
leave
xchg
leave
(bad)
(bad)
scas
and
push
pusha
lea
mov
call
mov
sbb
enter
ret
fmulp
push
and
aaa
jmp
mov
or
retf
mov
je
cmp
cmp
(bad)
fst
dec
aaa
mov
push
movs
push
mov
retf
(bad)
and
jnp
dec
cmp
mov
mov
ja
(bad)
mov
out
jno
dec
adc
add
dec
arpl
mov
call
popf
mov
mov
(bad)
aas
jae
dec
cld
retf
out
sbb
cmps
xchg
aam
std
ins
xchg
pusha
cmps
mov
lds
mov
dec
push
sbb
dec
stos
jns
mov
mov
repz
and
pop
sbb
in
lea
jmp
je
cvtps2pd
jg
sub
movs
add
xor
push
push
inc
mov
cmp
mov
xchg
inc
or
ror
mov
fisubr
addr16
int
cmp
into
mov
bt
clc
test
cmp
add
cmp
test
jmp
cmp
call
movzx
pushf
xor
lea
sets
pop
xchg
call
push
clc
repnz
call
pusha
cdq
push
jbe
mov
movs
push
pop
mov
jb
inc
stc
xchg
mov
fcmovu
push
dec
(bad)
push
clc
dec
xchg
lods
adc
mov
inc
nop
mov
xchg
out
mov
pop
cmp
pop
test
xchg
or
dec
sub
(bad)
add
out
or
je
cld
out
or
adc
(bad)
sbb
sahf
inc
lea
xchg
push
inc
idiv
mov
leave
cmp
push
rcr
in
or
sub
add
sub
add
sti
adc
mov
hlt
mov
adc
and
aam
push
adc
sbb
es
xchg
dec
sbb
aam
hlt
dec
hlt
cmp
ror
adc
mov
lods
and
inc
inc
mov
ror
or
mov
inc
adc
test
std
aas
movs
neg
out
js
xchg
and
shr
fst
js
mov
in
xchg
dec
in
mov
adc
pop
and
jle
dec
leave
imul
cmc
cmp
pop
imul
hlt
sbb
mov
jnp
mov
push
hlt
mov
icebp
in
push
lock
ret
cs
push
stos
call
movs
dec
mov
fistp
bound
jbe
aas
jecxz
push
icebp
daa
fnstcw
outs
push
xchg
push
mov
dec
jbe
mov
inc
mov
pop
xchg
jne
inc
cli
push
sti
repz
arpl
into
push
jmp
popa
jb
adc
ds
in
pusha
jns
shr
repz
fsubr
(bad)
sbb
mov
int3
shl
add
in
out
and
popf
je
xor
pop
in
jmp
inc
dec
dec
scas
bt
cmp
clc
cmp
mov
pushf
jmp
sbb
mov
push
(bad)
test
push
popa
sub
stc
dec
test
lea
je
lds
ficom
mov
and
sub
push
daa
mov
ficom
enter
std
bound
jl
(bad)
jge
cmps
ins
ja
jmp
mov
dec
popw
or
lahf
das
cmp
fs
in
addr16
aas
mov
xchg
push
popa
not
repnz
call
int3
sub
cs
daa
and
xchg
repnz
jnp
(bad)
mov
mov
jecxz
ss
add
fld
retf
stos
jmp
dec
pushf
adc
retf
inc
and
sub
in
bound
pop
inc
iret
sub
xchg
stos
rcr
pop
neg
fld
pop
(bad)
jmp
je
mov
push
cmps
lods
pushf
jmp
xor
push
push
clc
push
xor
jl
jmp
cmps
rcl
loop
movs
test
fwait
mov
test
cmp
hlt
pusha
mov
hlt
sub
popf
pop
xor
inc
(bad)
daa
inc
outs
test
fdiv
pop
sbb
mov
mov
or
mov
push
mov
jbe
cmps
sub
stos
mov
xchg
out
add
(bad)
ds
cmp
xchg
aam
dec
push
nop
mov
clc
in
ds
jbe
sub
test
and
sub
ins
lods
in
dec
shl
call
mov
hlt
jae
sahf
adc
mov
stos
sbb
mov
sti
mov
mov
cs
(bad)
je
mov
xchg
add
aaa
fisttp
fs
ja
pusha
lea
jb
cmc
clc
cmp
call
pushf
clc
cmp
pop
lea
movzx
cwde
call
test
cmc
cmc
movzx
jmp
repz
jp
(bad)
pop
xor
es
sar
add
push
std
mov
fcmovnbe
dec
sbb
ja
xlat
mov
and
mov
and
cld
pop
sar
sbb
mov
cdq
(bad)
and
pop
enter
mov
mov
sbb
xchg
adc
into
test
xor
sbb
pop
mov
stos
push
movs
dec
aam
push
push
lea
jae
cmp
push
jmp
pandn
push
(bad)
lods
in
jns
dec
mov
adc
push
push
xor
inc
or
mov
fld
and
push
xor
pusha
dec
mov
lea
fwait
xchg
addr16
ror
and
call
cld
icebp
lock
in
in
inc
dec
clc
mov
fsub
inc
fwait
dec
mov
mov
test
and
loopne
push
repz
xchg
aaa
cdq
push
fs
add
(bad)
cmps
aam
iret
imul
inc
rol
jle
xchg
jne
jns
pop
jo
add
cmp
dec
fsub
mov
push
sbb
mov
popa
pop
jb
mov
cmps
xor
loop
jno
stos
popa
mov
neg
jno
adc
pop
stos
push
pop
ror
pop
push
inc
mov
aas
lods
pop
scas
(bad)
ret
lock
lock
and
pushf
xor
sub
mov
sti
sub
jbe
jp
test
xor
js
aad
nop
pop
mov
sub
je
sti
add
loop
mov
inc
aaa
fnstenv
or
sbb
and
psubd
jmp
(bad)
arpl
(bad)
jns
test
in
sub
cmps
add
adc
leave
xor
or
mov
hlt
cmp
in
sbb
test
mov
inc
push
pop
xchg
std
or
(bad)
pop
mov
data16
adc
int
out
jecxz
xchg
pop
aad
jae
daa
mov
dec
sbb
ja
mov
(bad)
std
shl
ss
cmp
icebp
adc
idiv
call
mov
bound
shl
jmp
dec
xor
mov
push
call
ds
xchg
punpcklbw
adc
hlt
inc
pusha
sub
push
mov
pushf
push
lea
jmp
not
jg
(bad)
push
pop
dec
pop
sti
loopne
cs
inc
and
mov
psrld
push
loopne
les
sub
aad
add
pop
mov
sti
mov
or
cmp
dec
cmps
pop
dec
dec
fld
daa
xchg
scas
cmp
pop
movs
dec
iret
dec
(bad)
scas
fdivrp
lahf
cmps
adc
xchg
and
pop
inc
xor
or
add
in
call
into
mov
mov
js
stc
pushf
call
sbb
xor
mov
dec
std
addr16
xchg
adc
aad
arpl
mov
int3
jb
js
cdq
sbb
xchg
pop
jl
pop
add
inc
outs
mov
mov
shr
push
xor
adc
jbe
aaa
mov
jne
xor
movs
shr
push
call
push
inc
pop
movs
or
arpl
movs
in
das
jg
jno
and
xchg
ins
loopne
mov
mov
lods
sbb
mov
jge
or
sub
cmp
dec
in
inc
fld
dec
dec
fst
scas
pushf
xlat
jns
aad
aaa
sbb
imul
ds
in
mov
popa
add
and
scas
mov
inc
jo
pushf
cmc
xchg
nop
popa
mov
sbb
jecxz
aad
iret
imul
dec
sbb
test
ret
or
mov
xchg
in
cmp
pop
clc
not
bt
call
and
(bad)
jnp
mov
xchg
mov
xchg
cmp
loopne
xchg
or
xor
add
cmp
inc
push
inc
ds
pusha
outs
mov
pop
ss
jae
mov
sbb
mov
mov
lods
repz
sbb
mov
mov
aas
pop
(bad)
pop
sub
mov
sbb
fs
and
cmp
push
sar
sbb
xchg
dec
test
jmp
cmps
bound
outs
shl
sub
enter
jns
or
call
sbb
scas
popa
push
(bad)
cmpps
cmp
xor
rol
les
adc
mov
cmc
sbb
fwait
ins
(bad)
cs
push
fbld
test
pusha
pusha
loope
mov
dec
(bad)
inc
retf
das
mov
xchg
fprem1
pop
or
jmp
mov
pushf
lods
mov
xor
iret
(bad)
jae
pop
jp
(bad)
xlat
sub
xchg
sbb
popf
sub
sub
mov
adc
neg
mov
rcl
cmp
mov
add
mov
add
push
div
mov
test
cmc
rol
in
mov
pop
lea
dec
movs
or
or
movs
xor
pop
jl
icebp
mov
scas
jb
or
mov
pop
sahf
or
popf
or
jb
sbb
fist
or
(bad)
dec
xchg
push
cli
pop
loop
fcmovu
mov
mov
mov
pop
sbb
(bad)
pop
ss
mov
xchg
loopne
push
jmp
xchg
jnp
dec
loope
sub
out
aas
inc
mov
lahf
lea
or
xor
repnz
popf
hlt
dec
push
in
sti
mov
sbb
jo
lods
inc
jle
pop
push
add
jp
or
leave
mov
sub
fs
stos
loop
mov
(bad)
pusha
loop
xchg
or
or
jecxz
cld
(bad)
fsub
pop
imul
cwde
cmp
ret
popa
or
cld
scas
sti
popa
xchg
fdivrp
repz
cmp
ja
adc
(bad)
adc
leave
jae
fnsave
fld
pushf
pushf
imul
fs
sbb
mov
inc
popa
arpl
adc
mov
test
xchg
mov
ins
jb
out
aad
es
out
fsub
dec
gs
push
xchg
add
sub
movs
push
rcr
pop
mov
out
cmps
xchg
mov
aas
repz
cdq
out
mov
mov
sub
add
test
call
in
retf
arpl
(bad)
sub
out
jg
xor
sbb
cmp
cmp
cmp
das
pushw
push
stos
or
(bad)
lds
sbb
std
dec
xor
test
pop
test
sti
xchg
test
mov
or
and
mov
jl
scas
cmp
aam
dec
fs
iret
call
inc
mov
add
imul
sbb
int
sub
fild
xchg
cs
cld
test
shl
stos
mov
out
repz
(bad)
(bad)
scas
or
sub
or
adc
stos
popf
pop
fimul
or
push
add
mov
movs
adc
(bad)
mov
sub
ss
mov
inc
popf
movs
aas
mov
fwait
mov
outs
xchg
bound
mov
inc
mov
enter
fistp
pop
adc
pop
retf
clc
frstor
pop
xchg
or
movd
sbb
pop
xor
fsub
xor
xor
push
and
mov
xor
popa
jmp
movs
pop
mov
jb
push
jmp
(bad)
pop
scas
push
stc
aas
cmps
adc
loopne
in
into
xor
mov
lea
cmp
cli
inc
push
js
add
pop
call
neg
push
push
jbe
mov
fs
ja
stc
sub
and
rol
rcl
add
pusha
push
mov
pushf
mov
push
mov
push
mov
lea
jmp
jmp
dec
jmp
mov
out
cmp
je
out
cmp
or
mov
dec
adc
test
inc
cmp
sub
repnz
push
and
dec
xor
fdivr
xor
mov
retf
jecxz
enter
(bad)
int
fnstsw
jecxz
xchg
dec
push
push
outs
pop
lahf
imul
fs
jmp
dec
mov
cs
scas
sub
fcom
lahf
push
(bad)
cmp
ror
push
mov
inc
jmp
movzx
shld
mov
mov
cmp
pushf
add
pusha
jmp
stc
stc
bt
test
call
pop
sbb
push
(bad)
movs
or
aaa
inc
in
(bad)
xchg
retf
dec
ficomp
cli
add
(bad)
(bad)
shl
dec
xchg
(bad)
mov
sub
lods
(bad)
pop
sub
std
and
cmp
div
stos
aas
xchg
test
in
scas
push
push
jmp
inc
pop
cld
jle
mov
cmp
sahf
(bad)
xchg
pusha
imul
jnp
and
mov
dec
ss
inc
xchg
das
out
jle
mul
mov
mov
movsx
pop
movsx
mov
jmp
sbb
mov
mov
xor
jo
fld
neg
inc
inc
mov
les
jb
push
dec
xchg
in
mov
cmp
daa
add
in
dec
pusha
lahf
scas
ret
add
scas
(bad)
cmps
pop
iretw
stos
push
int
xchg
xchg
sbb
mov
sub
scas
sbb
mov
xchg
sub
jb
in
fimul
stos
cmp
ins
fwait
ret
(bad)
mov
fnstenv
lahf
sub
dec
add
inc
and
ret
sub
imul
mov
(bad)
movs
push
mov
dec
cli
lea
mov
pushf
push
mov
lea
jmp
push
jbe
addr16
mov
and
fs
pop
inc
sbb
repz
into
iret
xchg
(bad)
cmp
ret
ins
aam
jne
or
cdq
stc
movs
pusha
xor
xchg
mov
iret
xor
fisttp
retf
or
(bad)
mov
test
addr16
aam
pushw
(bad)
in
lds
xor
xchg
ins
loopne
xor
fisttp
cmp
jp
leave
mov
(bad)
push
stos
jmp
packssdw
shr
jge
jo
inc
sub
push
push
repnz
dec
sub
jmp
mov
stos
retf
or
hlt
(bad)
call
mov
popf
sbb
rcr
inc
push
(bad)
mov
push
cmps
repnz
fsubr
pop
mov
shl
or
adc
out
add
fwait
mov
jo
pushf
pushw
(bad)
mov
rcl
push
mov
fsub
mov
cld
sahf
jbe
dec
fs
jbe
jns
pop
outs
xor
mov
test
add
outs
xor
add
mov
sbb
bound
xchg
fisttp
scas
out
test
mov
push
adc
and
xchg
shl
dec
and
aad
dec
sahf
mov
xchg
push
inc
sbb
push
(bad)
cld
test
jno
xchg
inc
sub
rcl
mov
pop
pop
movs
nop
push
popf
outs
inc
pop
cmp
or
stc
sub
dec
xor
push
fiadd
retf
cmps
adc
adc
int
hlt
inc
fwait
jg
into
sub
add
add
imul
hlt
xchg
scas
add
push
and
mov
inc
jp
ret
ja
loope
sub
ret
cmp
jb
mov
pop
addr16
dec
inc
mov
sar
outs
adc
xor
call
cmc
bt
rol
clc
bt
add
bt
bt
pushf
push
ror
jmp
test
cmp
xor
ret
nop
and
ret
mov
jmp
xor
ret
sbb
push
outs
jnp
cmps
addr16
ret
adc
in
pop
add
sub
xlat
or
push
ds
push
bound
int
push
fwait
xchg
adc
fcmovne
(bad)
(bad)
in
sub
jmp
ret
xchg
mov
adc
ja
push
sbb
and
add
push
pop
pop
jne
aas
xchg
mov
adc
mov
ror
mov
dec
lea
neg
shr
mov
clc
clc
add
cmp
test
call
lea
jae
bts
mov
sub
setge
xor
mov
xor
bt
call
call
mov
jmp
mov
mov
(bad)
iret
std
out
movs
scas
cmp
je
call
out
mov
push
add
sbb
mov
(bad)
retf
xor
data16
jns
pop
pop
(bad)
call
pushf
pushf
mov
and
cmps
xor
lea
ja
pushf
lea
jb
pusha
mov
push
cmp
mov
lea
jne
clc
mov
push
call
push
mov
pushf
not
mov
lea
push
not
bswap
mov
push
pushf
mov
push
ret
and
(bad)
loope
mov
das
imul
jl
and
and
call
outs
rcr
pop
in
test
mov
ficom
outs
aam
lahf
dec
and
and
fsubrp
lods
jbe
rcr
mov
cwde
inc
and
in
stos
scas
jge
ss
inc
jnp
cmp
iret
dec
adc
aam
inc
xor
push
add
je
loopne
mov
dec
pusha
jb
out
sahf
popf
outs
arpl
dec
mov
inc
xchg
inc
stos
mov
cmp
mov
pop
cli
jmp
sbb
int3
mov
push
cwde
ds
(bad)
lahf
icebp
fwait
cs
fadd
pop
xchg
dec
dec
stos
(bad)
(bad)
jecxz
retf
pop
push
shl
out
int
xchg
arpl
addr16
mov
pop
inc
gs
pop
jmp
cmp
mov
mov
out
test
inc
fdivr
popf
test
sahf
jle
sbb
add
(bad)
(bad)
fld
mov
nop
mov
mov
or
out
rol
mov
icebp
adc
xchg
push
mov
pusha
push
(bad)
(bad)
dec
sub
test
mov
cwde
dec
or
mov
nop
mov
mov
xor
dec
push
or
xor
(bad)
jbe
xchg
push
out
in
push
cmp
and
add
bnd
adc
aas
add
sar
cld
scas
retf
mov
lea
aaa
sbb
mov
push
push
pop
loope
and
ror
push
leave
add
hlt
cmp
cmp
loope
fisub
or
shr
in
dec
lods
mov
jmp
dec
dec
(bad)
mov
movs
mov
jns
inc
jmp
ss
(bad)
cmp
jae
cmc
dec
movs
jnp
sbb
cmp
pop
jl
adc
xchg
lods
fwait
pop
out
lea
test
inc
scas
push
add
ffreep
inc
and
pop
mov
add
sar
bt
cmp
call
not
not
lods
push
lea
jnp
push
push
rol
clc
add
jmp
push
cmc
cmp
mov
lea
jne
shl
test
adc
xor
rcl
mov
stc
add
and
neg
inc
mov
cmc
push
stc
test
jmp
sbb
ds
push
(bad)
sbb
dec
hlt
ret
jl
pushf
and
mov
inc
sbb
fisub
in
sub
cmp
loop
popa
adc
ss
sub
aad
int
test
repnz
mov
pop
lods
into
ror
and
std
adc
pop
sbb
dec
adc
rdmsr
mov
out
(bad)
jg
mov
jge
sar
mov
movs
daa
enter
jge
and
fsubr
loope
ret
dec
int3
ret
ret
sub
jmp
add
cmp
pushf
push
fld
cmp
into
adc
test
and
es
pushf
pusha
push
lea
jmp
sbb
(bad)
push
mov
push
sub
fadd
and
fwait
je
mov
and
mov
test
sti
pop
inc
stos
repnz
or
mov
pop
jp
xchg
add
mov
cmp
lods
xor
mov
adc
pop
aad
cld
into
repnz
ror
push
mov
mov
es
xchg
test
shr
mov
mov
and
fdivr
mov
cs
ins
inc
sahf
repnz
and
cmps
test
es
je
push
(bad)
push
or
add
and
or
push
adc
xchg
lahf
mov
outs
mov
dec
xor
xchg
mov
add
das
jo
outs
shl
sbb
pushf
rcr
jne
add
test
icebp
jg
mov
mov
loop
call
dec
mov
xchg
addr16
xchg
dec
stc
adc
push
ins
shl
sub
aaa
mov
push
enter
jg
bound
mov
push
out
mov
ja
sbb
out
jl
rol
push
and
push
(bad)
mov
cs
push
lods
dec
sbb
mov
cmc
popa
test
pushf
sub
fstp
mov
shl
std
inc
jne
pop
sahf
xchg
ror
inc
push
scas
dec
sar
push
das
sbb
pop
pop
retf
push
sbb
push
gs
mov
pushf
dec
xchg
or
daa
pop
bound
in
jne
call
or
adc
xor
imul
xchg
mov
and
sbb
jo
es
mov
pop
ror
mov
xor
test
jge
mov
mov
mov
jp
mov
ror
es
inc
mov
outs
and
imul
in
imul
dec
fwait
daa
arpl
mov
cs
lahf
in
xchg
add
add
cmp
lods
in
aas
and
imul
dec
dec
jmp
in
or
jle
dec
mov
xchg
mov
cld
jns
(bad)
jmp
sub
sbb
outs
pop
lods
test
inc
loope
mov
shufps
inc
and
lods
stos
bound
repnz
or
dec
out
jnp
mov
and
in
addr16
push
sbb
je
addr16
dec
jg
(bad)
sbb
or
lods
out
jne
clc
cld
xor
mov
mov
dec
sub
stos
(bad)
mov
mov
inc
adc
sub
sbb
aaa
dec
call
push
sub
xor
into
mov
cmp
mov
sub
repnz
ins
xchg
cmps
(bad)
addr16
(bad)
xchg
(bad)
dec
mov
lds
or
scas
arpl
xchg
retfw
inc
scas
add
repnz
movs
xor
push
pusha
(bad)
jo
xor
jl
xchg
mov
bnd
int
les
hlt
stos
and
out
repnz
sub
call
cdq
in
arpl
cdq
xchg
sbb
mov
sahf
sub
mov
int
mov
movs
das
das
mov
pop
mov
and
sub
xchg
mov
scas
jno
into
adc
stos
cmps
mov
addr16
sub
leave
arpl
std
cmps
(bad)
fst
pop
mov
mov
mov
lock
adc
lahf
push
fdiv
(bad)
fidiv
jge
outs
scas
add
lds
rcr
in
pop
and
lods
mov
nop
daa
ins
pusha
xlat
fstp
mov
mov
inc
pop
mov
dec
jnp
mov
scas
add
rcr
mov
push
stc
xchg
cmp
or
jnp
ja
add
mov
das
and
fs
test
loopne
les
clc
lds
mov
and
xchg
cmps
mov
lea
aas
mov
inc
sub
aad
lods
lea
mov
dec
add
sbb
movs
mov
ss
mov
call
mov
aad
xchg
shr
div
mov
xor
mov
fsubr
cmps
out
lds
ja
xchg
sub
fwait
movs
xor
out
push
int
sub
cmps
pop
and
test
mov
xchg
repz
les
or
jl
into
outs
inc
add
or
dec
jle
sub
dec
clc
push
loopne
stos
rol
outs
(bad)
jo
cmps
imul
outs
jne
cwde
sbb
fwait
cwde
cmps
aaa
movs
(bad)
ins
xchg
adc
in
jae
test
fwait
adc
mov
fmul
sbb
xor
mov
sbb
and
dec
aaa
jge
sbb
and
frstor
mov
sub
ss
push
inc
arpl
mov
ins
mov
es
push
mov
enter
mov
dec
pop
stos
mov
mov
imul
lds
mov
xchg
jb
cmps
jmp
mov
lahf
dec
and
into
xchg
or
daa
outs
lds
mov
or
sti
mov
sub
or
outs
outs
jmp
mov
xor
pop
and
bound
aaa
fucom
das
and
fnsave
jecxz
push
out
sub
jnp
in
dec
sbb
mov
fs
and
mov
add
adc
dec
jns
gs
aas
mov
cmps
sbb
in
xchg
fnstsw
shl
inc
movs
repnz
cmp
adc
das
(bad)
adc
jp
es
dec
xchg
cs
movs
sub
lds
jae
jmp
int3
ja
push
lea
pushf
(bad)
out
aas
cmp
xchg
mov
imul
and
mov
mov
jbe
ret
pop
lahf
mov
and
out
dec
xor
in
and
outs
hlt
mov
les
jbe
add
test
aas
jp
sub
jnp
fcmovnb
push
int
ins
cmp
std
(bad)
push
lods
stos
mov
push
jo
lods
fdivr
lahf
repnz
in
arpl
jg
adc
jnp
mov
and
push
mov
test
aas
outs
ja
addr16
fwait
sub
nop
xlat
outs
pop
out
pop
jnp
retf
mov
inc
mov
stos
repz
in
add
jno
(bad)
pop
(bad)
xchg
xor
lahf
xor
mov
cmp
inc
pop
ret
stos
mov
pusha
cmp
jnp
sti
xchg
(bad)
cs
cmp
xor
jmp
xchg
loopne
sub
das
lds
stos
(bad)
iret
cmp
stos
inc
mov
inc
ins
xchg
stc
(bad)
adc
dec
int3
mov
mov
clc
jns
cmp
aaa
dec
add
mov
or
xchg
retf
fwait
cmp
adc
stos
in
jp
(bad)
mov
aas
sub
jne
xchg
sub
fst
jmp
pusha
mov
addr16
lods
es
or
(bad)
mov
dec
fwait
xor
mov
repz
fwait
push
mov
mov
addr16
sbb
nop
pop
stos
addr16
dec
or
mov
jmp
in
popa
movs
inc
jo
js
aam
in
mov
dec
xchg
leave
sub
(bad)
out
sub
and
push
cmp
mov
stc
scas
sbb
outs
gs
adc
cmp
jle
mov
mov
cmps
dec
or
mov
nop
std
gs
mov
sbb
mov
add
ins
mov
ss
scas
inc
stos
out
and
cmp
in
xchg
xchg
(bad)
shl
or
mov
push
fwait
cmp
pop
xor
jbe
cmp
addr16
jmp
dec
lods
fwait
dec
mov
xchg
inc
mov
sub
inc
ss
jae
cmp
stos
(bad)
jp
cwde
or
and
adc
adc
jmp
and
sub
icebp
in
retf
xchg
into
inc
pop
jne
stc
daa
mov
call
or
das
cdq
cmp
clc
fsubr
xor
fwait
mov
pop
sub
cld
sub
sbb
fld
xchg
dec
cmp
dec
lods
repz
addr16
jns
push
imul
into
jg
cwde
push
adc
inc
xor
loope
adc
mov
in
mov
xchg
mov
in
pop
sti
mov
and
jp
rcl
jo
inc
imul
inc
jae
cmp
in
fnstenv
push
lahf
aaa
popf
std
jb
jnp
and
mov
and
imul
fadd
mov
inc
stos
dec
or
xchg
jge
cmps
(bad)
cld
and
icebp
and
loopne
adc
sub
pop
mov
(bad)
mov
popa
shr
mov
std
ss
pop
push
fild
mov
xlat
xor
mov
test
and
mov
mul
gs
call
aas
or
cmp
xchg
mov
xchg
out
or
lock
adc
mov
mov
pusha
fdiv
mov
mov
jecxz
cli
and
mov
dec
cmp
repz
retf
push
imul
sbb
cwde
mov
movs
xor
jge
add
pop
sub
mov
jbe
pop
stos
scas
lds
movs
cmp
mov
cs
jmp
outs
addr16
pop
adc
mov
and
cmps
dec
in
pop
fcmovne
mov
inc
xchg
xchg
gs
clc
in
daa
push
pop
inc
sbb
pop
loope
dec
rcl
ja
(bad)
mov
bound
mov
cmp
jo
mov
mov
and
call
mov
dec
pop
cmp
arpl
dec
rcr
push
test
std
les
or
rol
mov
mov
sbb
mov
jbe
pop
ja
or
sti
sub
sub
test
jl
sbb
and
in
call
sub
xchg
mov
and
ins
gs
outs
jge
fild
push
lahf
(bad)
jo
dec
scas
xchg
fwait
mov
mov
cs
push
dec
cmovl
dec
repnz
jecxz
es
lea
fwait
jge
jmp
mov
cmps
fdivr
aas
js
nop
lds
and
jns
imul
mov
xchg
jnp
call
mov
outs
aas
sub
mov
nop
outs
fcomip
(bad)
jb
repz
(bad)
sub
jecxz
inc
jmp
sub
call
xor
lds
add
aas
mov
jg
addr16
and
pop
jne
jmp
dec
cmc
push
std
cmps
stos
(bad)
lahf
fisttp
mov
sahf
xor
cmp
movs
out
cmp
fwait
nop
(bad)
std
and
jno
movs
lods
js
lds
inc
ins
outs
push
jmp
stos
lods
sbb
test
mov
sbb
dec
popa
movs
imul
and
in
mov
scas
adc
mov
mov
(bad)
push
push
mov
(bad)
add
scas
in
and
push
jnp
push
pop
out
dec
xlat
out
arpl
pop
stos
adc
out
adc
add
mov
scas
fs
sbb
pop
std
push
scas
test
xchg
retf
ja
xor
(bad)
jb
(bad)
pop
and
adc
mov
add
in
cld
fisubr
jle
in
mov
test
arpl
mov
mov
dec
mov
fcomp
pop
popa
call
mov
pop
pop
lahf
inc
shr
cmp
mov
xor
fwait
mov
daa
lahf
fidiv
dec
loope
sbb
outs
and
xchg
jo
mov
repnz
fs
push
fisttp
vlddqu
pop
xchg
mov
inc
shl
push
cmp
pusha
scas
stc
and
in
or
adc
add
push
mov
popf
inc
enter
dec
sub
jbe
xchg
or
stos
lods
adc
pop
mov
sub
out
jb
cmp
dec
jmp
cmps
mov
cmps
dec
imul
mov
jne
out
cmp
mov
fistp
xchg
cmp
aad
cmp
movs
sahf
push
jae
call
mov
mov
pusha
jle
and
outs
test
mov
jg
stos
sub
stos
add
std
stos
daa
adc
or
dec
jg
sub
dec
adc
out
cmp
movs
sub
adc
aaa
xchg
sar
push
out
adc
sub
lods
sbb
dec
(bad)
cmc
jecxz
and
adc
mov
mov
or
pop
mov
sub
(bad)
cmp
cmp
mov
das
sar
push
bnd
popf
cmp
cmc
hlt
dec
mov
xor
in
scas
imul
outs
mov
adc
xchg
imul
or
xchg
test
in
jmp
ss
aam
sbb
adc
movs
inc
stos
mov
enter
outs
push
pop
(bad)
outs
lods
sbb
pusha
shl
rcl
movs
xchg
lds
call
jae
jmp
add
xchg
jb
jne
jg
test
sbb
mov
or
psubd
test
xchg
inc
xchg
repnz
fdivr
in
aad
lds
xor
xchg
jnp
mov
lods
lahf
adc
cmps
lahf
xchg
stos
xchg
test
cli
mov
jo
xor
mov
fist
xchg
ror
subps
call
add
retf
pop
dec
pop
mov
lods
lds
jae
clc
mov
mov
sub
in
dec
sbb
pop
clc
ret
movs
nop
xor
push
lods
jl
sub
aad
(bad)
int3
call
xor
pushf
outs
jg
push
mov
mov
fcom
lods
scas
adc
(bad)
lods
cld
(bad)
sbb
test
inc
mov
inc
mov
mov
cli
and
lea
xor
(bad)
stos
fld
mov
pop
lds
cmp
inc
fcomp
popfw
sbb
push
mov
stc
ss
jae
mov
fs
in
lahf
and
xchg
pop
mov
stos
aam
pop
imul
imul
push
aaa
ret
scas
fld
jecxz
pop
sahf
mov
inc
xor
jo
xchg
int3
cld
lods
scas
adc
jnp
mov
dec
ins
and
stos
neg
cld
jne
stos
jg
es
(bad)
cmp
adc
leave
pushf
mov
cmc
cmp
jmp
mov
fdivr
mov
sbb
dec
stos
into
ss
inc
sub
lds
dec
std
sahf
leave
push
pop
loopne
test
imul
sub
sub
sahf
jb
dec
sahf
test
sbb
pop
out
pop
cwde
enter
xchg
sub
leave
cdq
dec
mov
mov
in
gs
fcomp
sub
mov
mov
gs
xor
outs
loopne
scas
je
lahf
sahf
push
(bad)
cmp
cmp
mov
mov
stos
stos
pop
mov
addr16
dec
inc
jne
popf
xchg
dec
imul
es
and
mov
jno
mov
add
and
pop
jmp
retf
xchg
iret
dec
loopne
fsubr
out
xor
sbb
jns
movs
leave
and
mov
inc
leave
sbb
cmps
adc
pop
ret
stos
dec
enter
shl
ds
fwait
(bad)
int3
inc
inc
jmp
cmps
push
push
inc
add
lds
cwde
lods
daa
mov
jmp
pshufw
call
mov
pop
sub
xchg
(bad)
loope
scas
sub
xchg
(bad)
leave
outs
sub
das
les
stos
cmps
xchg
xchg
cmp
adc
lds
ds
sub
dec
popa
xor
mov
cmp
sbb
adc
iret
idiv
sub
dec
jns
inc
dec
movs
popa
push
cmp
push
and
repz
cmp
push
and
mov
pop
sub
ins
shl
jge
arpl
stos
lds
mov
jecxz
leave
(bad)
pop
cmp
lock
stos
cmp
dec
mov
enter
lea
dec
popf
mov
or
xchg
icebp
mov
push
vmread
stos
inc
pop
out
outs
cmp
xchg
mov
inc
pop
ret
and
mov
fs
and
mov
inc
lahf
adc
xchg
cmp
lods
mov
getsec
dec
push
mov
out
jbe
push
ja
cmp
jmp
add
stc
adc
in
mov
ins
lods
ss
jl
lds
pop
push
and
inc
xor
xlat
add
push
popf
test
repnz
dec
pop
and
in
ss
imul
sub
lahf
pop
jle
lds
mov
and
sti
cdq
mov
inc
dec
xchg
or
arpl
movs
mov
push
mov
xor
jbe
add
xchg
mov
mov
cmp
mov
jg
dec
jecxz
js
sbb
fwait
test
movs
mov
jg
jmp
repnz
xor
mov
push
and
enter
outs
clc
cmp
fs
inc
(bad)
dec
xlat
je
jl
mov
xor
adc
jnp
dec
mov
daa
pop
sbb
popa
mov
mov
iret
jne
cs
xchg
scas
inc
xchg
stos
or
cmps
dec
rol
lods
adc
imul
cmp
fcomp
inc
jnp
sub
data16
pop
imul
mov
or
bound
sub
and
xor
outs
mov
enter
je
(bad)
jle
add
xchg
outs
pop
ja
ret
ss
ins
mov
sub
into
stos
pop
dec
jmp
adc
ss
inc
inc
push
xchg
mov
mov
mov
loopne
pop
fisttp
xor
mov
cmp
rol
movs
mov
lods
nop
or
ins
and
sub
dec
mov
jp
daa
outs
stos
ret
push
data16
scas
fldenv
fadd
jecxz
sub
mov
jp
adc
pushf
pop
adc
(bad)
sbb
mov
sub
scas
and
jmp
mov
push
jnp
inc
cdq
lods
mov
das
adc
sbb
cli
sub
addr16
mov
(bad)
jge
das
xor
jne
sub
mov
xchg
(bad)
clc
jb
inc
jg
dec
mov
sbb
(bad)
jmp
jle
into
arpl
(bad)
fs
or
adc
stos
jg
pusha
and
ins
mov
cmp
dec
(bad)
and
cmps
stos
(bad)
lds
outs
jg
lods
pop
mov
adc
mov
push
loopne
pop
lds
xor
popa
pop
mov
adc
into
mov
arpl
shl
pop
sub
in
pop
dec
int3
(bad)
and
add
aas
mov
jmp
(bad)
aaa
pop
sub
cmps
mov
inc
dec
aad
lds
bound
inc
jns
push
fwait
in
js
stc
push
mov
adc
in
mov
adc
mov
cmps
and
and
cmp
mov
sub
mov
ja
add
add
dec
lock
adc
inc
call
pop
add
xor
xchg
cli
cld
popf
scas
lds
mov
jle
clc
out
jnp
cmp
sub
xchg
cmp
jne
adc
or
mov
imul
loopne
mov
mov
addr16
(bad)
xor
je
movs
sub
push
xchg
mov
imul
mov
and
fild
mov
in
movs
dec
ins
fistp
gs
dec
fiadd
arpl
jecxz
mov
test
neg
aaa
fcomi
and
sub
jno
ss
cmp
pop
aas
sub
or
xlat
sub
(bad)
mov
aas
mov
(bad)
fdivr
xlat
fisub
loop
(bad)
push
inc
adc
popf
cmp
adc
test
mov
imul
dec
xchg
lds
dec
xor
(bad)
push
jo
sbb
pop
cwde
add
dec
xor
pusha
pop
daa
fild
ins
and
aas
daa
sbb
stos
xor
mov
cmps
cmps
es
mov
xchg
push
or
xchg
dec
jns
sbb
cmps
cli
lds
out
inc
push
addr16
dec
and
rcl
mov
fcmovnb
popa
pop
dec
enter
arpl
dec
lods
pop
push
popf
in
scas
retf
js
and
pop
jnp
mov
scas
ss
outs
or
push
aas
in
js
and
(bad)
dec
out
jae
cmps
mov
cmp
mov
mov
sub
(bad)
scas
inc
movs
xor
es
mov
or
call
cmp
arpl
xor
mov
dec
mov
test
sti
mov
(bad)
es
outs
jge
mov
cmp
mov
nop
lods
sub
jmp
outs
cmp
push
(bad)
sti
ret
cwde
add
jmp
adc
xor
or
popf
cmp
cmps
dec
ja
sbb
or
dec
mov
xchg
jle
shl
(bad)
push
mov
scas
mov
mov
mov
jmp
ror
dec
cmps
es
stc
arpl
mov
mov
(bad)
movs
jo
jg
xchg
mov
shld
int
dec
daa
push
cmp
je
loope
ret
scas
mov
cmps
lds
or
pop
xor
retf
xor
loopne
and
stos
cmp
cld
fdivr
clc
sub
lods
xchg
(bad)
xor
jae
mov
jo
dec
adc
jg
inc
in
fiadd
cmp
mov
dec
mov
gs
mov
ins
sub
and
ret
fs
mov
jle
stos
imul
mov
jp
stos
in
stc
jns
or
addr16
lahf
test
mov
pushf
arpl
dec
ret
cmp
out
pop
sbb
out
xchg
sub
into
stos
jb
or
add
daa
cmp
mov
cdq
push
lds
inc
sbb
or
inc
jle
add
in
adc
pop
sub
es
loopne
(bad)
cmp
mov
in
push
mov
inc
fs
lahf
or
pop
mov
jmp
jno
dec
xor
test
dec
mov
retf
mov
cld
aas
sub
jne
jb
push
fdiv
or
and
dec
mov
(bad)
mov
aam
daa
sbb
inc
stos
and
mov
lods
stos
xchg
(bad)
mov
or
stos
hlt
add
mov
movs
dec
inc
push
push
mov
pop
jl
xor
and
int
inc
cmp
mov
loop
adc
sub
add
adc
push
jmp
mov
mov
jns
sub
jnp
retf
inc
dec
repnz
retf
ins
jns
leave
cmp
mov
xor
cmps
adc
test
test
movs
aas
lds
shl
stc
push
jne
es
retf
add
push
imul
out
mov
popa
rcr
(bad)
out
jge
mov
lods
loope
mov
fdiv
xor
out
jl
and
sub
push
pop
push
pushf
or
scas
pusha
outs
inc
retf
retf
(bad)
adc
int3
pop
pusha
fst
mov
ds
cld
pusha
push
sbb
add
dec
jo
sbb
pop
dec
xor
jns
pop
cmps
xchg
xchg
lods
adc
outs
cld
adc
add
jmp
lods
adc
mov
push
aaa
outs
addr16
xchg
lock
outs
fwait
ja
pop
push
mov
jecxz
outs
lds
out
cmp
mov
scas
shl
ror
xor
cmps
sbb
call
rcl
shl
add
mov
jecxz
rcl
into
mov
(bad)
(bad)
dec
jg
sub
xchg
adc
xchg
std
pop
daa
lds
inc
mov
cdq
popf
cmp
stos
aas
out
sub
pop
jb
(bad)
out
popaw
test
or
pop
sub
scas
cli
(bad)
jmp
mov
movs
aam
or
popa
dec
ret
(bad)
sub
(bad)
xchg
inc
inc
or
jb
mov
sahf
cmps
in
loop
fbstp
bound
sub
and
cli
mov
bound
loop
addr16
popa
mov
jmp
sub
fnstsw
and
(bad)
dec
push
adc
adc
stos
cmps
aam
pop
out
(bad)
(bad)
push
pop
gs
xchg
add
cmp
aas
jb
jnp
das
or
popf
(bad)
push
jp
push
in
js
call
shr
cmps
inc
ret
mov
inc
stos
jge
jns
jg
lds
cmp
cmp
sub
sar
or
cs
pop
call
xor
lds
popf
fisubr
outs
leave
or
mov
push
(bad)
lea
mov
mov
arpl
and
test
pushf
push
jmp
inc
and
push
clc
addr16
xchg
jge
inc
push
mov
outs
jge
dec
xor
mov
aaa
test
jg
sub
cmps
jno
mov
mov
fild
in
call
fwait
imul
mov
mov
popf
test
mov
jnp
or
(bad)
popf
jg
and
arpl
xor
xor
ror
push
push
(bad)
mov
mov
inc
mov
(bad)
mov
stos
sbb
shr
xchg
push
cmps
lods
mov
retf
inc
js
shl
scas
push
cmps
mov
je
jle
lds
fwait
or
stos
mov
icebp
xchg
clc
scas
ins
lods
mov
leave
jmp
pop
jmp
mov
sub
jns
cmp
fcmove
push
push
dec
and
xchg
neg
int3
sub
jp
sub
sub
mov
xchg
mov
jns
sbb
mov
dec
movs
xchg
ror
daa
call
jmp
mov
mov
xchg
or
mov
int3
pop
mov
sbb
aas
dec
into
inc
jg
push
pop
(bad)
mov
lds
les
les
push
outs
adc
loope
inc
xchg
push
jnp
retf
mov
or
daa
test
jge
pop
lds
lods
bound
sbb
mov
cdq
jb
stos
inc
push
xchg
ins
sar
mov
test
sub
mov
mov
lea
mov
ds
mov
lods
adc
dec
fmul
cmp
or
aam
cwde
lds
jl
xchg
cwde
fs
and
cmps
cmp
inc
repz
mov
sub
js
pop
mov
rol
mov
cmp
or
sub
xchg
inc
xchg
pop
pop
and
scas
and
dec
xor
mov
fldenvw
stos
pop
sub
retf
(bad)
sub
test
es
bound
scas
aaa
pop
xor
dec
repz
es
aam
cmp
les
or
mov
loope
shl
icebp
outs
push
arpl
cmp
es
push
fsubr
inc
mov
out
fimul
addr16
out
mov
mov
mov
aad
idiv
add
xchg
mov
cld
mov
cwde
add
fdivr
mov
sbb
inc
adc
adc
aam
cdq
popa
(bad)
scas
in
fild
lods
fcom
dec
adc
push
ss
rcr
lds
loop
mov
cmp
jnp
in
lock
mov
ror
call
or
not
jecxz
xchg
xor
cld
or
popf
sbb
jge
cmp
or
imul
pop
mov
pop
push
int
push
inc
mov
lds
jne
jb
push
xor
sub
push
mov
xchg
and
dec
xlat
mov
add
cmp
mov
stos
shr
not
(bad)
mov
ds
push
ja
jno
movs
adc
sbb
fs
into
in
loope
mov
mov
adc
mov
sub
(bad)
aad
imul
aam
(bad)
mov
adc
and
dec
sbb
daa
test
adc
in
push
int
test
scas
cmps
imul
and
jle
xor
out
adc
push
mov
push
scas
mov
push
ins
jo
cli
xor
jmp
cmps
push
clc
jb
sub
jbe
adc
or
mov
dec
pop
fdiv
inc
cmp
loope
test
stos
(bad)
cmps
cmp
(bad)
test
ror
and
sub
lahf
fwait
and
xor
mov
out
jg
int
mov
in
pop
xchg
sbb
jmp
dec
jmp
jae
xor
xchg
shl
and
sub
xchg
mov
mov
fidivr
inc
je
lea
mov
lods
cmp
(bad)
movs
les
lods
xchg
cld
mov
pop
mov
icebp
add
js
inc
fwait
mov
dec
cmp
stos
add
cmp
in
movs
push
sar
outs
(bad)
push
cdq
shl
scas
(bad)
jmp
not
data16
lods
inc
sub
and
(bad)
aas
lds
and
adc
jns
or
sub
jp
sahf
test
mov
add
sub
mov
in
mov
test
pusha
frstor
lods
outs
xor
(bad)
loop
cmps
dec
ins
je
jmp
xor
xor
fwait
mov
cmp
mov
(bad)
fisubr
ds
test
daa
and
mov
frstor
push
jae
mov
fnstsw
adc
dec
aas
cmps
lds
sti
sub
xlat
mov
ins
add
lahf
push
fnsave
and
ja
fistp
jne
inc
sti
lods
popf
dec
stos
mov
xor
dec
pop
mov
mov
add
pop
jne
and
int
mov
adc
mov
test
or
pop
jb
arpl
scas
std
pusha
movs
mov
inc
xchg
add
lods
pop
or
adc
vmread
mov
inc
dec
loope
dec
mov
retf
pop
cmp
(bad)
ss
in
cmps
scas
mov
aas
outs
sub
xor
and
add
std
test
cs
and
ret
dec
js
(bad)
dec
cmps
or
cmp
iret
(bad)
pop
pushf
dec
repz
fnsave
aaa
mov
enter
sbb
jl
push
in
gs
or
nop
mov
hlt
ins
push
mov
push
fs
rcl
jle
popf
frstor
xor
mov
pop
lahf
mov
xchg
mov
outs
lds
lods
jge
pop
mov
mov
jmp
lea
fwait
dec
add
std
pushf
addr16
repnz
jno
mov
fild
fstp
mov
and
inc
pop
cmps
inc
popf
ins
scas
sub
mov
mov
push
pop
or
mov
jb
cmp
jmp
xchg
jnp
mov
xchg
mov
in
outs
out
or
aaa
xchg
rcr
hlt
gs
cmp
pusha
jns
cmp
movs
inc
dec
xchg
add
test
(bad)
adc
vpshaq
or
lock
push
cmp
add
xchg
icebp
test
adc
push
sar
in
xchg
aas
mov
adc
or
jecxz
and
je
jle
sti
(bad)
mov
shr
sbb
icebp
mov
cmp
inc
ficom
(bad)
sbb
jl
(bad)
xchg
cmp
fst
mov
xchg
and
es
xchg
inc
sub
outs
addr16
jns
(bad)
pop
inc
mov
jmp
into
iret
inc
movhps
scas
stc
lds
loopne
cmp
cs
(bad)
lea
push
xchg
cmps
jb
mov
xchg
(bad)
jl
stos
retf
sar
or
and
xor
xchg
jmp
cs
pop
mov
sar
dec
test
mov
mov
lock
scas
mov
mov
cmp
mov
sgdtd
mov
and
pop
inc
in
je
cmps
in
cmp
movs
ret
adc
mov
pop
in
into
out
clc
cli
or
pop
and
cmps
jl
push
repz
jmp
jae
mov
sbb
pop
and
xchg
nop
sbb
mov
mov
stos
es
pop
sub
loop
pop
sub
je
and
cmc
and
adc
or
cmp
adc
and
mov
add
scas
xchg
(bad)
inc
scas
sahf
sub
mov
(bad)
sti
(bad)
fisub
push
adc
pop
ror
out
inc
call
fdivr
das
jnp
ficomp
xor
mov
inc
dec
lods
je
fimul
sahf
fucomp
add
sbb
jo
lock
mov
je
sub
jbe
pop
(bad)
cld
xor
in
call
mov
test
(bad)
dec
lea
jge
js
(bad)
in
ret
cmp
test
sbb
dec
add
dec
xor
xor
cmp
iret
(bad)
jae
les
mov
cmp
cmc
jnp
ins
mov
pmaddwd
sar
mov
jns
jno
mov
(bad)
ins
movs
(bad)
fnsave
or
cmp
ret
sbb
(bad)
mov
(bad)
jge
mov
test
aas
or
and
repz
xchg
jo
mov
stos
ror
sub
mov
add
sar
cmp
push
or
and
rol
mov
call
fs
or
jne
mov
or
xchg
bound
sub
mov
mov
mov
or
cwde
imul
pop
xor
jne
mov
out
inc
adc
pop
outs
imul
xor
shl
outs
jo
add
pop
addr16
mov
pop
inc
icebp
mov
lea
ins
add
mov
gs
push
cli
ret
mov
daa
inc
dec
push
and
ja
addr16
mov
int3
aas
sub
sbb
stos
lods
push
int
repnz
pusha
inc
push
pop
in
add
ins
nop
(bad)
test
push
fidiv
pop
add
outs
pop
mov
movs
pop
mov
idiv
mov
jmp
ror
jmp
sub
jl
fdivr
xor
cmps
push
and
jecxz
repnz
push
pop
scas
and
or
pushf
cmp
xchg
push
daa
cmp
jl
test
hlt
test
outs
scas
push
jge
test
not
jge
arpl
out
dec
cld
jecxz
(bad)
pop
ins
pop
mov
js
cmp
xlat
das
addr16
sbb
xor
es
push
dec
add
retf
xor
and
pop
push
xchg
es
or
scas
scas
sbb
(bad)
div
add
lods
sub
jge
xor
pushf
cld
cmp
xchg
daa
sub
leave
addr16
in
out
ret
call
adc
sahf
dec
rcr
mov
shl
sbb
fwait
xchg
fucomi
mov
jge
div
(bad)
push
cdq
xor
inc
xor
mov
xor
cmp
stos
lds
into
and
mov
or
add
div
mov
daa
jo
jne
ds
ret
aad
stos
mov
outs
pop
outs
mov
jb
dec
mov
mov
lds
add
mov
dec
adc
xor
fadd
adc
mov
xlat
mov
je
sub
dec
lds
sub
push
and
xchg
fs
and
pop
or
rol
xor
dec
arpl
cdq
xchg
imul
test
push
adc
jg
lahf
jne
imul
(bad)
in
retf
mov
mov
mov
add
bound
movq
(bad)
mov
iret
hlt
fisttp
cmps
stc
jl
inc
jl
dec
cld
ret
loope
inc
dec
add
push
je
add
jle
mov
test
and
push
movs
int3
pop
push
jno
mov
cld
iret
gs
sub
jmp
jns
mov
and
out
call
inc
jmp
dec
add
dec
repnz
jne
cmp
pop
xchg
add
(bad)
fld
rol
adc
xchg
mov
popa
cs
stos
fs
ret
add
daa
mov
pop
adc
pop
jmp
jl
jb
sub
daa
jle
ss
xor
aas
cld
xor
in
in
out
pop
mov
xlat
lods
jne
outs
jo
repz
mov
movs
(bad)
jb
sub
xchg
pop
cld
dec
mov
icebp
xor
mov
fdivr
(bad)
or
xor
mov
outs
enter
add
sbb
std
lods
shl
icebp
add
test
fld
pop
add
lock
rol
mov
icebp
lods
push
out
mov
js
mov
mov
ja
mov
mov
test
mov
jge
(bad)
das
xchg
stos
call
out
mov
daa
push
mov
adc
out
in
push
fiadd
frstor
das
jp
(bad)
pop
mov
or
add
sti
in
adc
aas
outs
jmp
jg
xor
add
addr16
xor
pushf
mov
inc
mov
in
xchg
(bad)
out
mov
mov
push
inc
jmp
pop
in
cmp
mov
scas
loope
xchg
lds
ja
(bad)
mov
lock
loopne
(bad)
(bad)
repz
in
xor
or
cmp
popf
fwait
mov
sbb
stc
aas
and
arpl
sbb
cwde
dec
jno
inc
(bad)
sub
(bad)
or
shr
addr16
sbb
xor
add
shr
adc
movs
jmp
jp
xor
or
push
fsubr
(bad)
aas
xchg
and
cmp
jge
je
sbb
dec
scas
and
(bad)
adc
cmp
jae
(bad)
pop
ins
pop
xchg
lods
mov
mov
xor
loopne
ins
adc
sub
idiv
and
pop
mov
iret
jp
adc
dec
fnstcw
xor
pop
adc
daa
lds
inc
push
clc
xchg
jb
shl
jg
int
cli
dec
mov
mov
mov
sbb
and
ror
dec
sbb
retf
xchg
into
jg
and
pop
stos
mov
adc
(bad)
(bad)
cli
mov
sbb
mov
pop
sbb
fwait
cmps
lds
lods
push
cmp
or
es
movs
into
inc
nop
pop
inc
movs
in
cs
dec
sbb
outs
popf
ss
adc
mov
(bad)
xchg
fdiv
outs
adc
cmp
sub
in
repz
test
push
movs
jae
sar
mov
pop
sets
dec
(bad)
sub
jne
pop
aas
xor
dec
sbb
push
jle
xor
mov
daa
cmp
js
out
pop
cmps
daa
sbb
je
lea
mov
retf
scas
push
ins
test
add
in
pop
mov
cmp
leave
ret
cdq
fisubr
mov
popa
adc
(bad)
test
mov
fisub
xor
adc
(bad)
lahf
sbb
aaa
(bad)
clc
sub
sub
sub
push
sub
into
push
and
push
pop
aas
scas
sbb
movs
in
fld
mov
aad
enter
cli
mov
pushf
outs
pushf
fwait
neg
dec
out
sar
ja
lea
stos
adc
jmp
jno
ins
stos
or
clc
mov
movs
sbb
ja
sub
js
push
mov
push
adc
stos
aas
push
push
fiadd
popf
outs
xchg
and
fbstp
add
imul
stc
in
mov
and
jmp
pusha
mov
stos
out
add
imul
add
cs
push
adc
ins
sbb
es
inc
jmp
out
sub
ja
cmp
aaa
mov
sub
cmp
sbb
imul
call
cdq
or
jge
imul
sub
jge
xor
mov
rcl
stc
and
push
shl
adc
cmp
imul
mov
mov
dec
outs
icebp
add
and
pop
cmps
in
xchg
es
inc
mov
lds
shr
movs
sbb
(bad)
shrd
inc
jb
jmp
fnsave
mov
sbb
repnz
jno
add
pop
sbb
dec
jae
jb
jl
lods
mov
adc
mov
inc
les
xor
cmp
adc
loop
les
mov
fist
pushf
sbb
mov
inc
xchg
sbb
cli
lods
mov
scas
lods
push
push
adc
pop
jmp
outs
test
sti
sbb
push
cmp
cmp
fidivr
fwait
add
inc
cli
dec
jmp
icebp
clc
and
in
retf
ret
sub
out
int
cmp
jle
and
mov
or
ret
pop
push
or
std
cmp
cld
xchg
ds
mov
pop
inc
data16
in
mov
mov
mov
leave
aam
xchg
cs
jae
inc
mov
dec
xor
adc
sub
jle
dec
dec
add
adc
pushf
cs
and
jno
cmp
inc
jp
jp
sub
jne
mov
ins
ret
test
cmp
jl
fs
jmp
dec
stos
(bad)
pop
mov
(bad)
mov
add
xchg
dec
push
push
inc
sub
xchg
ja
jmp
lds
in
mov
jg
mov
or
jnp
ret
lods
sub
inc
(bad)
mov
inc
jae
je
cli
in
aas
and
cmps
mov
(bad)
int
add
jno
ss
dec
xchg
cmova
push
jbe
sbb
mov
or
aam
mov
dec
aam
mov
mov
(bad)
mov
lahf
movs
cmps
dec
adc
ja
repnz
jo
pop
adc
inc
mov
data16
sti
rcl
outs
outs
fs
or
xor
out
(bad)
clc
add
ret
movs
add
dec
xchg
jno
dec
pop
enter
stos
stos
sbb
add
in
lea
mov
and
in
scas
stos
(bad)
mov
enter
iret
adc
leave
push
adc
mov
jge
sar
fldenv
add
sbb
pshufw
aas
xor
and
xor
jl
shl
pop
push
cmc
jne
into
inc
dec
sahf
das
mov
push
add
dec
jo
(bad)
(bad)
gs
pusha
mov
movs
push
mov
mov
call
mov
fwait
add
jle
es
jmp
sbb
out
inc
call
xabort
adc
outs
ja
retf
dec
imul
inc
aad
stc
popf
jg
inc
sbb
ss
cmp
scas
aam
lds
push
inc
in
imul
ins
mov
lahf
fs
sbb
fwait
pop
data16
lods
adc
pop
jp
mov
or
adc
sub
mov
inc
inc
jb
jecxz
imul
sub
vcvtps2pd
add
stos
pop
stos
daa
fbstp
jmp
pop
imul
pop
test
mov
jg
sbb
lods
icebp
scas
push
mov
jo
cdq
repnz
(bad)
lahf
inc
(bad)
mov
push
inc
push
loopne
add
cmp
aas
loope
lds
daa
scas
push
inc
jbe
xor
clc
shl
fwait
xor
pop
out
lea
jne
fimul
add
aam
std
mov
out
out
es
mov
aaa
addr16
pusha
mov
pop
data16
mov
lods
das
(bad)
int3
or
mov
rcl
(bad)
xchg
adc
pusha
retf
in
jmp
push
stos
inc
inc
fld
xor
(bad)
addr16
ret
or
cmp
call
(bad)
jecxz
xchg
mul
sbb
mov
data16
pop
in
fnstsw
cmp
int3
movs
stos
xchg
in
imul
mov
es
mov
inc
icebp
aas
nop
mov
jb
test
mov
outs
sbb
xchg
mov
adc
aaa
mov
cs
jg
into
mov
(bad)
sti
call
lds
in
adc
xor
inc
mov
std
and
mov
cmp
xor
ds
jbe
enter
xor
fnstcw
test
aas
(bad)
(bad)
xor
sti
sbb
xchg
mov
fist
aam
in
pop
xchg
and
cmp
xor
pop
sbb
mov
lods
add
and
xchg
jno
pop
mov
test
mov
fnstcw
lds
fist
jmp
dec
mov
sbb
mov
int3
popf
popa
add
fist
xor
lds
es
aaa
ins
lods
add
cld
adc
lods
inc
aas
rcr
sbb
add
cmp
push
lds
mov
add
inc
jo
out
xchg
pushf
jno
ja
push
xchg
nop
sbb
mov
inc
movs
inc
xchg
cmps
out
sbb
ds
scas
inc
iret
ret
in
inc
aam
hlt
fsub
cmp
mov
cmps
adc
in
and
out
(bad)
and
pop
iret
sti
pushw
mov
dec
mov
push
inc
arpl
movs
retf
aas
pop
lds
ss
adc
push
jge
aam
adc
ret
test
mov
fs
jbe
dec
cmp
push
jp
cmovbe
inc
mov
push
movs
outs
dec
rol
push
lods
js
es
mov
jge
sub
into
ss
jnp
inc
mov
(bad)
outs
jmp
les
addr16
push
outs
data16
(bad)
call
arpl
lahf
sub
mov
test
fmul
mov
pop
push
fbstp
ss
xor
js
outs
(bad)
sbb
gs
jle
lods
cli
aad
(bad)
push
(bad)
jmp
mov
and
movs
fwait
jns
sar
cmp
aaa
cmps
(bad)
jp
fidiv
aas
stos
xor
add
shr
sub
xchg
mov
mov
xor
mov
inc
and
or
out
adc
jg
mov
test
mov
call
test
enter
rcr
into
cli
and
cmc
lods
jo
jbe
pop
jae
xchg
xor
fs
ds
add
cdq
inc
jge
popa
jle
cmp
(bad)
bnd
jne
addr16
mov
add
dec
adc
ds
lods
and
pushf
inc
out
iret
lds
dec
jmp
mov
and
push
mov
mov
imul
ret
test
jbe
inc
cmp
out
xor
and
outs
mov
cmps
not
or
movs
repnz
push
mov
mov
jle
sbb
mov
adc
add
jle
inc
cld
xor
sub
nop
jge
shl
adc
adc
sub
call
data16
mov
mov
sbb
mov
jno
fs
xor
jnp
and
push
cs
mov
xor
xlat
lods
push
xor
stos
sub
sub
(bad)
das
and
lods
adc
movs
sub
mov
adc
(bad)
dec
mov
sub
int3
jbe
push
popa
xchg
pop
loopne
cs
push
jp
and
xchg
cmps
aaa
mov
or
mov
xor
pop
cmp
cs
pop
popa
int3
fwait
aad
jnp
dec
daa
push
dec
in
mov
or
data16
xchg
jmp
adc
sbb
lahf
dec
jle
stos
and
loop
adc
xor
sub
std
bnd
add
mov
nop
or
mov
mov
add
adc
cmp
dec
jecxz
lods
es
enter
jno
fs
xchg
vphadduwd
mov
movs
pop
loop
cmp
out
sub
jae
es
fucomi
adc
push
js
(bad)
mov
nop
inc
mov
jne
mov
cld
fiadd
inc
inc
add
cld
cs
mov
ja
cmps
mov
lods
inc
adc
mov
mov
div
imul
(bad)
push
or
add
leave
aad
push
mov
jecxz
stos
push
shl
pop
mov
dec
aas
and
es
ror
inc
daa
dec
shl
popa
cld
pop
js
fs
in
push
into
inc
add
movs
(bad)
push
or
aam
mov
leave
mov
sub
aad
push
xor
adc
jge
ret
std
ds
fiadd
leave
jg
and
mov
pop
nop
jb
movs
add
mov
adc
pushf
ja
lods
sub
aam
out
push
aad
into
add
inc
mov
test
push
cmps
std
sbb
jecxz
in
outs
shl
and
jecxz
cmp
mov
fadd
fwait
movs
and
xor
shl
mov
xchg
sti
mov
mov
or
or
aad
ja
nop
lea
dec
pop
mov
(bad)
or
dec
mov
nop
imul
and
gs
stc
out
and
dec
inc
dec
cmps
or
cmp
sar
jecxz
js
sahf
nop
lgs
inc
sbb
out
adc
(bad)
fwait
bound
fs
(bad)
cmp
jecxz
ret
or
outs
sub
mov
loop
js
imul
js
leave
retf
or
mov
dec
mov
stos
push
sbb
mov
(bad)
jmp
out
aas
mov
out
jmp
daa
xchg
xchg
jg
pop
sub
test
pop
movs
inc
lea
mov
es
addr16
mov
ins
mov
mov
movs
daa
and
ret
nop
pop
retf
not
sbb
add
out
sbb
std
xchg
inc
ins
or
das
jl
jo
and
shl
loop
lds
or
je
std
hlt
xchg
xor
mov
mov
ret
pop
inc
pop
js
out
add
sbb
dec
mov
sub
add
dec
pop
das
dec
xor
cmp
cmp
sar
sub
sub
cmovs
sar
icebp
jbe
add
xor
sahf
mov
lea
popf
inc
loope
inc
mov
(bad)
and
adc
sbb
add
loope
hlt
(bad)
je
outs
mov
xchg
mov
dec
or
push
sbb
or
xor
bound
das
cmp
loope
mov
ja
sub
test
push
pop
add
enter
stc
mov
movs
fnsave
mov
sub
dec
jmp
imul
aas
cmp
cmp
popa
or
(bad)
xor
aaa
inc
imul
fistp
loop
mov
cld
or
or
push
xor
mov
das
sub
std
cwde
mov
aas
xchg
jns
in
mov
stos
sub
jnp
outs
sbb
inc
mov
inc
pop
popa
add
adc
arpl
iret
int3
addr16
mov
and
clc
inc
into
repz
pusha
push
in
mov
adc
jmp
clc
test
cmp
call
mov
mov
sbb
outs
addr16
push
jl
out
jo
inc
push
or
cmps
mov
sub
jb
inc
push
mov
gs
js
call
leave
mov
mov
aas
dec
pop
stos
cmp
or
xlat
adc
fwait
jge
dec
movs
ror
push
dec
mov
cli
or
mov
jne
pop
pop
lock
(bad)
mov
dec
xor
mov
lds
jnp
iret
es
push
mov
mov
sub
and
nop
adc
mov
jbe
lea
jno
adc
jnp
and
ret
in
jp
cmp
jg
mov
pop
lea
sub
and
enter
test
jmp
lds
imul
pop
or
add
jmp
adc
xor
stos
inc
jo
xor
push
pop
fs
jae
xchg
ret
movs
test
add
xchg
mov
cmp
icebp
cmps
das
inc
les
inc
or
(bad)
hlt
je
in
rep
outs
and
push
sub
xor
lahf
and
mov
sbb
mov
adc
sbb
daa
lds
sbb
inc
mov
cmp
add
movs
pop
in
push
ja
pop
xor
jmp
mov
mov
jge
lods
push
and
mov
sub
popa
ret
jmp
jge
push
add
gs
pop
add
mul
mov
push
cmp
(bad)
push
dec
loope
nop
int
mov
inc
not
xor
xor
aaa
adc
fucom
ret
pop
xchg
inc
inc
les
aad
es
pop
push
movzx
xor
xchg
fs
jmp
popa
sbb
arpl
sti
dec
test
sti
lea
nop
aas
idiv
pop
data16
es
fiadd
ret
call
jb
gs
mov
mov
ds
test
fdiv
or
addr16
jmp
pusha
mov
ror
mov
lods
div
gs
cld
and
scas
xor
mov
aas
cmp
mov
sub
pusha
stc
outs
inc
out
popa
pop
nop
scas
or
or
out
mov
add
mov
sub
add
loopne
scas
sbb
popa
rep
mov
jno
or
out
iret
mov
mov
pop
lods
daa
lods
push
ror
push
push
in
(bad)
mov
inc
xor
and
adc
add
aad
mov
mov
cmp
shl
mov
ins
call
or
pop
mov
(bad)
sub
adc
inc
sbb
scas
xchg
jle
je
xchg
push
imul
int
xor
into
fisubr
dec
jo
adc
loop
(bad)
and
ret
jnp
xor
mov
bound
in
cmps
jnp
retf
lahf
xor
bndldx
adc
mov
bound
dec
push
repnz
aad
loop
lahf
cmp
in
add
shr
test
outs
sbb
sub
fs
inc
enter
sbb
sbb
stos
mov
mov
mov
cs
leave
aaa
adc
int3
pop
nop
jge
lods
jge
pop
test
xor
vpsraw
inc
sub
stos
aas
(bad)
dec
add
scas
xchg
inc
cmc
and
sar
or
scas
xor
sub
mov
mov
and
aas
push
push
out
rcr
cmp
lods
or
xchg
mov
jmp
in
pop
mov
add
(bad)
xor
gs
aaa
outs
dec
mov
aad
stos
push
ds
inc
adc
in
inc
mov
mov
jno
(bad)
call
nop
es
push
out
jbe
shl
pop
mov
rcl
sub
aas
cmc
loope
xchg
pop
dec
push
jno
or
(bad)
mov
adc
push
or
movs
adc
mov
push
ja
daa
dec
popa
jge
popf
arpl
scas
scas
stos
out
cmp
ficom
retf
push
popa
fmul
cs
(bad)
mov
arpl
mov
(bad)
fsub
jge
sub
inc
shr
xchg
rcr
pop
jmp
mov
pop
mov
inc
neg
mov
xor
sub
lods
nop
mov
ds
addr16
jge
cmps
int
outs
mov
hlt
xchg
test
jo
into
test
jae
pop
adc
iret
(bad)
test
loopne
outs
jmp
cdq
lods
mov
sbb
mov
cmp
cdq
cmp
pop
sub
(bad)
xor
ins
(bad)
mov
or
inc
sub
or
mov
(bad)
pop
cmp
outs
int3
shl
mov
xchg
mov
xchg
pop
icebp
xchg
or
(bad)
stos
lds
cmps
retf
out
mov
sbb
loopne
add
push
mov
cmps
outs
add
repnz
shl
adc
in
push
xor
or
pop
mov
mov
or
das
rcl
sahf
popa
dec
sub
dec
jno
addr16
retf
push
(bad)
add
(bad)
jle
es
sub
mov
mov
pusha
pop
dec
jl
es
mov
mov
xchg
inc
jl
xchg
stos
or
mov
jbe
daa
jno
scas
outs
aaa
jns
popf
pusha
clc
retf
pop
ret
sub
jp
jnp
cmp
cmp
cmp
mov
clc
and
xor
jle
cmp
xor
outs
cmps
sub
dec
ja
mov
fwait
and
movs
leave
sub
and
or
mov
lds
repz
xchg
sub
adc
jle
xor
xchg
inc
test
and
das
mov
xor
push
das
inc
outs
scas
or
dec
sub
into
mov
xchg
outs
scas
daa
and
xchg
enter
enter
out
cmp
adc
std
in
icebp
aaa
movs
lds
(bad)
stos
scas
cmp
and
(bad)
clc
call
aaa
dec
sub
jl
mov
xchg
jecxz
inc
sbb
cmp
mov
inc
ja
pop
mov
movs
inc
js
jp
(bad)
mov
or
and
cdq
enter
jbe
mov
pusha
mov
dec
das
and
cld
loope
arpl
dec
scas
mov
aaa
or
cmps
jle
jnp
fsubr
inc
loop
push
mov
loope
jg
and
fs
aaa
dec
add
adc
mov
sub
cmps
(bad)
enter
jo
sbb
mov
ret
loope
outs
and
cmp
mov
js
inc
pop
add
leave
leave
and
call
aas
cs
and
icebp
es
mov
(bad)
dec
daa
shl
cmp
ins
ss
cmp
ds
jnp
cmp
movs
mov
popf
mov
mov
(bad)
jle
movs
mov
mov
scas
sub
pop
retf
nop
jns
pop
xchg
aas
cmp
xchg
adc
out
mov
dec
nop
and
adc
mov
movs
mov
xor
and
ds
mov
neg
fdiv
pop
adc
int3
mov
clc
mov
xchg
dec
xchg
ins
lahf
cli
push
mov
pop
sub
push
push
stos
fdivr
lds
(bad)
pop
test
mov
jno
test
scas
ins
add
mov
pop
jno
scas
or
sub
in
xchg
jmp
out
or
add
push
sbb
stos
retf
fcomp
sar
dec
or
add
adc
shr
stos
pop
or
test
je
jge
shl
jmp
cli
mov
mov
in
mov
arpl
icebp
push
out
dec
cs
pop
enter
imul
mov
xchg
aad
ja
mov
lahf
sar
(bad)
loopne
pusha
dec
out
cld
adc
stc
scas
mov
pusha
dec
and
std
mov
push
test
inc
enter
mov
dec
jp
mov
gs
jp
sbb
xor
mov
jmp
aaa
pop
(bad)
call
lds
jae
pop
mov
fisttp
mov
mov
push
shr
cdq
es
cmps
cmp
adc
push
push
add
aas
fs
adc
ret
mul
stos
sub
dec
sub
stos
sub
jp
xor
scas
ret
and
mov
jecxz
pop
mov
mov
aaa
jns
ins
(bad)
add
sub
jae
mov
pop
mov
loope
ja
push
repnz
xor
cmp
xchg
(bad)
sub
inc
stos
pop
lods
cld
test
popa
inc
test
mov
jae
cmp
and
test
adc
cmps
lds
aaa
inc
(bad)
ss
test
stc
ja
out
jmp
outs
sbb
jne
je
aas
lds
(bad)
mov
aas
aad
(bad)
pusha
lahf
jb
dec
outs
aam
xor
push
dec
aam
mov
jb
push
xchg
cmp
ins
loope
je
sub
fisub
xor
fnsave
retf
lock
fmul
data16
imul
xor
jb
jle
ss
pop
push
fistp
(bad)
les
cmp
cdq
sbb
inc
lods
mov
mov
dec
je
mov
jg
mov
sbb
xor
lods
stc
mov
int3
sbb
mov
out
jl
inc
stos
stc
sbb
in
xor
jl
mov
and
sbb
and
adc
pop
pop
push
and
push
mov
adc
js
imul
ss
shr
(bad)
pop
xchg
call
sti
(bad)
cdq
and
ds
and
pop
adc
or
lds
loopne
xchg
sbb
int
sub
adc
pop
add
cmp
scas
lds
test
sbb
mov
pop
call
inc
mov
cmc
mov
adc
sub
cmps
into
(bad)
(bad)
in
shl
mov
mov
push
mov
xchg
push
sbb
cmps
mov
pop
jp
and
cmp
mov
push
fs
loop
mov
fsubr
sub
mov
push
movs
(bad)
push
mov
sbb
sbb
out
xchg
mov
mov
(bad)
(bad)
retf
add
push
push
inc
mov
xor
or
xlat
cmp
jne
jp
mov
add
lds
std
mov
mov
int
ret
js
sar
add
imul
popa
bound
mov
test
xor
movs
xor
dec
mov
dec
rcl
or
mov
sub
and
inc
ins
stos
inc
pop
mov
test
add
jmp
(bad)
je
ja
jp
dec
mov
xchg
jp
xchg
cmp
mov
ja
aaa
pop
jmp
stos
sub
sub
ja
xor
jge
jnp
pop
add
or
mov
xor
sbb
push
sub
jnp
dec
aas
push
jo
fmul
pop
fiadd
xor
push
shl
dec
mov
lock
add
push
retf
(bad)
cld
rol
mov
cmp
es
cmps
add
je
or
xor
mov
mov
push
outs
inc
test
mov
jg
lds
jnp
sti
lea
xchg
jo
mov
sub
mov
pop
fs
enter
push
cmp
stos
daa
retf
stc
jle
in
sbb
dec
inc
xor
or
cs
add
dec
mov
cli
int
(bad)
sbb
out
call
ins
mov
adc
add
jmp
nop
xor
cmps
jg
xor
dec
xor
mov
in
add
cmp
add
push
add
cmp
aas
add
adc
lods
cmp
mov
(bad)
mov
xchg
inc
jbe
daa
push
cmp
or
pop
lods
xor
inc
cld
sub
xchg
int3
sub
test
ror
sub
hlt
lea
das
jae
rol
mov
in
es
xchg
pop
xchg
int
in
rol
xor
ins
stos
rcr
cld
and
dec
jg
fnstsw
iret
pop
test
in
shr
jge
mov
jbe
fcmovne
cmps
sub
and
cmp
outs
cmp
adc
jno
js
inc
adc
stc
mov
jl
and
sub
fisttp
lea
arpl
jp
cmp
movs
mov
or
das
sti
lods
(bad)
mov
test
out
mov
(bad)
jp
in
jne
mov
pop
sub
loop
and
xchg
dec
repnz
daa
jmp
outs
cmp
jbe
mov
in
not
cmp
mov
into
stos
aaa
sub
(bad)
hlt
sbb
jle
or
es
mov
aam
ins
jae
dec
pop
mov
or
test
rol
mov
fbld
dec
add
stos
(bad)
sbb
jle
jmp
lds
repnz
cld
cmp
jno
cmc
outs
add
sub
je
mov
jg
out
or
lahf
clc
add
cdq
add
cs
inc
push
shl
cli
lds
jmp
fmul
and
mov
mov
popa
and
xchg
lahf
out
lds
out
mov
movs
fnstenv
sub
and
pop
ins
popa
push
dec
out
test
adc
es
aam
xchg
xchg
inc
cmp
retf
mov
xchg
cmp
shl
std
cmp
daa
jne
popa
ds
loopne
es
scas
xchg
into
fistp
mov
mov
test
(bad)
push
sbb
mov
jne
xor
jmp
stc
xor
dec
ins
cmps
jge
and
pop
mov
pop
push
pusha
mov
daa
ins
in
mov
inc
cwde
dec
mov
cmp
dec
nop
pusha
dec
jb
xchg
jne
nop
jmp
inc
sub
dec
ss
xchg
dec
cdq
in
xchg
test
imul
adc
nop
es
imul
stos
add
lds
pop
jne
sub
icebp
jnp
movs
neg
pop
hlt
movs
ja
iret
inc
das
xchg
mov
adc
sub
jecxz
out
jg
push
rcl
lahf
add
pop
sub
cmp
movs
add
pop
sahf
jle
les
js
and
scas
pushf
dec
sbb
scas
aaa
jns
xor
iret
and
(bad)
rol
mov
sub
dec
sbb
aad
fs
es
lds
addr16
or
dec
adc
stc
movs
outs
adc
cmps
and
mov
rcr
jmp
cmp
push
jne
jb
push
mov
(bad)
iret
stos
inc
retf
not
mov
adc
aaa
rsqrtps
out
sbb
lods
inc
loopne
loop
xlat
das
xchg
and
lods
mov
(bad)
dec
jmp
ja
scas
push
cs
ret
cmp
inc
ds
aaa
stos
mov
mov
xor
(bad)
fidiv
out
jle
mov
add
shrd
lds
pop
xchg
aas
mov
cmp
jne
mov
call
jg
out
sbb
fiadd
pushf
sahf
(bad)
xchg
mov
xor
xchg
inc
adc
lahf
test
icebp
(bad)
pop
pusha
cmps
fs
sbb
adc
arpl
push
jb
ja
pusha
mov
pop
ins
inc
inc
not
pusha
icebp
int
push
loop
cmps
into
inc
cmc
or
xchg
(bad)
mov
jg
xlat
daa
jno
repnz
and
push
mov
sbb
mov
popa
xor
pushf
in
aas
sub
pop
fidivr
mov
mov
gs
mov
cmp
movs
imul
adc
dec
sub
mov
mov
xor
das
leave
pop
mov
cli
cmp
clc
and
pop
adc
jge
retf
jmp
inc
mov
add
sub
pmaxub
inc
repnz
out
dec
inc
add
mov
(bad)
mov
sub
iret
call
mov
ds
sub
xor
jne
lds
loopne
leave
lahf
or
cmp
scas
add
push
sub
sahf
dec
imul
outs
sub
hlt
movs
fadd
rcl
test
pop
cmp
data16
add
push
(bad)
xor
sbb
xor
mov
mov
sub
call
shr
cmp
imul
adc
outs
loope
xchg
fadd
in
push
mov
fsubr
mov
ret
jle
push
lds
adc
into
aas
inc
push
pop
popa
out
mov
es
(bad)
or
clc
popa
fidiv
addr16
ins
adc
and
xor
mov
pop
mov
int3
dec
jnp
cmovae
fld
gs
push
mov
inc
cmp
mov
xor
mov
scas
sub
(bad)
cs
test
movs
fst
jo
lods
add
jo
or
je
dec
xchg
add
clc
lea
sahf
jno
lahf
mov
stos
std
(bad)
cli
outs
ror
xchg
aas
stc
adc
mov
adc
xchg
push
les
jb
xchg
aam
je
cli
lds
test
fld
push
retf
jmp
cmp
adc
xchg
outs
mov
mov
push
mov
lds
jae
sub
push
(bad)
stos
push
test
cmp
jbe
mov
jp
jae
daa
cld
push
das
cmp
lock
mov
and
scas
data16
mov
jb
jae
sti
cmp
int3
jb
mov
test
push
popa
bound
mov
sub
lods
lds
inc
adc
mov
dec
pop
dec
sub
adc
and
out
adc
retf
or
mov
jo
dec
lds
jl
inc
jbe
inc
and
cmp
test
les
cdq
jae
xchg
inc
fimul
and
adc
and
test
jno
mov
push
sar
mov
add
sbb
push
addr16
mov
movs
cli
sub
adc
pop
scas
lods
sub
mov
sub
lods
lahf
dec
mov
xchg
stos
mov
fnstcw
bound
inc
neg
(bad)
mov
xchg
xor
ss
mov
ins
into
xchg
inc
sub
(bad)
jnp
sbb
xor
cmp
retf
iret
movs
cmp
scas
loopne
xchg
stos
(bad)
popa
ins
fs
sahf
retf
loope
test
and
push
outs
cs
mov
cmp
or
pop
push
mov
scas
pop
ds
inc
pop
loopne
dec
jnp
jg
lods
push
lahf
cmp
cli
sti
lods
pop
cwde
sub
js
inc
punpckhbw
sar
lods
mov
out
pop
cmp
scas
in
mov
lock
mov
cmc
outs
sbb
and
inc
lahf
stos
inc
in
(bad)
ja
shl
repnz
or
outs
(bad)
and
cmp
xlat
test
call
dec
int3
adc
cmp
cs
lods
adc
je
xchg
lods
(bad)
fidiv
jmp
jnp
mov
add
adc
sub
or
sbb
cwde
add
je
xor
dec
xchg
div
jno
test
adc
pop
icebp
lds
push
rol
int
jg
xor
inc
mov
push
fs
into
jecxz
ret
inc
mov
xor
adc
push
test
inc
mov
jmp
pop
cld
mov
(bad)
pop
xchg
fld
scas
pop
lods
add
mov
ins
stos
outs
out
sti
in
or
add
jl
arpl
cld
mov
cmp
popa
cmp
sub
adc
sub
sahf
jg
jp
fs
fcomi
mov
add
xor
call
and
scas
das
ss
add
repz
push
jge
mov
adc
cs
adc
inc
out
iret
inc
xchg
jmp
or
lock
and
pop
inc
scas
call
rcr
pop
jmp
loope
test
sub
stos
jg
dec
repnz
xor
adc
stos
(bad)
imul
mov
mov
dec
dec
call
mov
inc
lock
sti
push
das
(bad)
icebp
mov
add
or
or
(bad)
xlat
jae
inc
hlt
hlt
js
aad
xor
mov
pop
jmp
aad
pop
and
ins
in
jp
or
sbb
mov
pop
cmp
xchg
jnp
dec
xor
js
test
lods
and
mov
dec
xor
mov
jae
fdiv
loop
jecxz
xlat
movs
sti
adc
inc
inc
and
pop
ins
fs
mov
and
sar
ret
xor
call
add
jge
stos
fs
add
dec
imul
jb
cmp
cmps
push
push
sub
stos
inc
cwde
ret
dec
(bad)
adc
das
xor
xchg
mov
push
enter
cmp
jbe
sar
mov
or
mov
or
cmp
jne
jmp
ss
mov
adc
jns
inc
dec
(bad)
push
push
mov
xor
push
loopne
sub
aam
add
mov
push
shr
out
mov
jl
add
je
aam
(bad)
js
rcl
fcom
xor
lea
xchg
and
(bad)
ret
adc
imul
mov
jno
mov
std
dec
rcr
sbb
pop
inc
aaa
push
ins
jb
popf
cmps
(bad)
dec
mov
push
or
adc
jne
jmp
popa
mov
xchg
sbb
std
push
in
aas
adc
lds
lahf
mov
aam
scas
ror
mov
addr16
scas
pop
mov
jne
aaa
sbb
jle
xchg
mov
mov
push
das
cmp
cmp
movs
pop
es
(bad)
cmp
outs
mov
stos
inc
jno
inc
or
sbb
movs
(bad)
movs
mov
mov
(bad)
cld
pusha
cwde
mov
and
fcmovnb
lods
out
enter
(bad)
dec
add
ja
enter
and
addr16
sbb
dec
mov
lds
lock
inc
mov
in
or
lds
adc
xchg
out
add
xor
lds
mov
pop
jns
adc
aad
sub
cmp
cmp
ja
jno
mov
pop
push
dec
push
push
jmp
vmovsd
adc
xor
imul
daa
(bad)
mov
movs
pop
cmp
cli
mov
in
jg
xchg
out
and
inc
mov
dec
inc
inc
adc
pusha
punpckldq
jno
dec
mov
in
sub
lds
icebp
test
jmp
out
cli
sub
rcl
(bad)
fnstcw
cmps
into
pop
aam
and
div
dec
cmp
ror
rol
inc
lds
inc
xor
lea
cmp
fwait
xchg
daa
stos
(bad)
int
scas
or
cmps
or
adc
or
inc
push
pop
adc
cmp
sbb
loopne
popa
jge
arpl
inc
lds
fisub
retf
test
mov
push
lock
or
adc
or
or
popf
fnstenv
sub
adc
jmp
ja
mov
pushf
fild
shl
call
inc
clc
jo
imul
dec
stc
xchg
mov
addr16
or
jp
sub
pop
dec
adc
jbe
mov
sbb
cmp
add
(bad)
ds
lds
je
mov
repz
jo
clc
ja
stos
mov
sub
push
test
aad
fld
xchg
mov
sbb
sbb
or
mov
(bad)
scas
lock
and
out
stos
jmp
push
push
jae
inc
(bad)
ss
repnz
cmps
loop
ret
push
fsub
xor
loope
movs
rdtsc
inc
xor
ins
(bad)
and
cmps
js
xchg
loopne
pop
or
sub
clc
or
adc
aas
into
fwait
daa
pusha
retf
pop
popf
movs
jge
test
sub
pop
cmc
inc
enter
inc
jg
mov
pop
xor
mov
push
movs
push
jne
inc
lea
outs
sbb
xchg
inc
and
pop
les
lock
gs
cmps
int3
(bad)
pop
jno
pop
xchg
dec
xor
and
push
lea
fild
(bad)
cmp
or
cmps
enter
jns
inc
fnsave
pop
mov
jne
push
mov
fcom
lahf
daa
(bad)
mov
xor
int3
pop
movs
push
mov
jae
or
lahf
daa
and
jl
cmp
mov
out
mov
pop
mov
jnp
adc
jl
xor
mov
arpl
enter
cmp
inc
lods
rcr
fwait
(bad)
ins
add
outs
cmps
pop
jecxz
mov
jge
inc
dec
or
retf
inc
ret
adc
iret
dec
rcl
scas
cmp
mov
addr16
sub
nop
sub
mov
lds
push
mov
ja
sbb
cmp
push
mov
or
out
out
jecxz
push
cmps
ss
mov
mov
cmps
inc
xchg
and
scas
xor
push
xchg
sub
fisub
push
sub
xchg
sbb
movs
sub
(bad)
sub
add
repnz
push
inc
jl
movs
test
rcl
inc
cmp
add
add
lahf
xchg
outs
jmp
mov
jo
in
dec
pop
jmp
mov
loop
adc
sub
or
cmps
fsub
mov
lods
mov
jno
(bad)
in
mov
mov
xchg
lds
sub
cmp
xchg
ss
dec
stos
sar
jmp
sbb
push
aaa
(bad)
sub
fs
aas
sbb
and
jge
ins
mov
aaa
mov
or
add
xchg
cdq
fbstp
test
out
add
into
xchg
out
sub
mov
sar
mov
imul
arpl
cmps
pusha
out
gs
pop
int3
leave
xchg
push
cmp
cmp
jbe
cmps
in
ret
add
mov
cli
das
jae
cmp
push
add
test
dec
aas
cmp
stos
mov
mov
inc
aas
dec
adc
fcmovu
loope
add
cs
or
(bad)
scas
jecxz
arpl
cli
out
and
stos
pop
dec
out
test
std
push
push
cs
out
aas
leave
movs
and
adc
jecxz
std
pop
dec
xlat
push
(bad)
mov
es
sbb
lods
mov
enter
cmp
sbb
pushf
mov
push
outs
icebp
cmp
pop
inc
mov
into
mov
(bad)
mov
dec
dec
(bad)
jnp
in
mov
inc
arpl
push
sbb
(bad)
repz
pop
pop
rcl
jg
ds
xchg
adc
mov
lds
xor
loop
ss
hlt
xchg
ins
mov
push
cmp
call
cmps
stos
mov
movs
lds
fisubr
data16
mov
ja
mov
add
je
jns
or
xor
jg
pop
gs
(bad)
stc
pop
mov
cmp
rcr
scas
fisttp
scas
jg
(bad)
cld
jns
jp
mov
rcl
das
push
aas
dec
pop
xlat
in
adc
in
ja
lods
mov
xor
jo
clc
adc
push
mov
mov
jno
(bad)
inc
lea
add
gs
daa
push
sbb
popa
ror
fs
mov
sbb
jbe
mov
fnstsw
inc
mov
xor
in
xchg
push
movs
cmpxchg
add
retf
test
sub
mov
sti
fcomp
popf
int3
lahf
or
cld
popf
ja
jecxz
out
xchg
sbb
mov
dec
push
and
sbb
ror
lods
(bad)
jle
sti
scas
std
xlat
mov
(bad)
popf
mov
in
stos
sti
push
cmps
mov
addr16
xor
push
ror
push
scas
mov
lds
mov
push
addr16
mov
mov
adc
add
xor
add
fldenv
push
or
dec
adc
jge
dec
cmp
repz
jp
mov
pop
sar
mov
and
push
and
cmps
mov
mov
clc
dec
xor
(bad)
repnz
call
jnp
and
pop
cli
(bad)
mov
and
add
or
mov
leave
icebp
inc
int3
sbb
outs
pop
cmp
mov
loop
mov
push
in
int
push
and
ds
rol
sub
sbb
jne
out
ins
mov
addr16
lds
mov
pusha
jecxz
pushf
sbb
jge
jge
test
retf
mov
jo
jno
xor
adc
jmp
daa
mov
jae
imul
adc
popa
or
and
(bad)
scas
dec
outs
xchg
(bad)
enter
dec
adc
xlat
lds
jb
and
cmp
or
pop
or
add
jnp
loope
inc
clc
je
xchg
adc
stos
adc
and
js
out
icebp
stos
jb
adc
cmps
adc
movs
popa
inc
scas
out
adc
mov
adc
cmp
mov
lods
fisub
jns
jecxz
push
shr
push
or
les
loope
imul
add
ror
or
aaa
lds
ds
icebp
and
ins
aad
fwait
cmp
(bad)
jne
sub
sbb
cmp
pop
add
inc
inc
mov
sbb
adc
cld
lods
jno
adc
mov
les
loopne
inc
dec
pusha
stos
imul
test
scas
cmps
inc
cmps
in
outs
dec
dec
cmp
(bad)
jmp
pop
clc
movs
ins
sbb
imul
arpl
lods
inc
fcmove
loopne
outs
icebp
loopne
gs
or
(bad)
jl
jle
cmp
aaa
out
daa
xor
jmp
push
mov
or
xchg
rcr
cmp
ins
outs
mov
cli
inc
imul
repz
lds
jecxz
or
dec
iret
sub
xor
inc
sbb
or
pop
mov
loope
jne
mov
sub
into
addr16
popf
mov
(bad)
and
cmp
loope
add
and
jl
push
and
pop
scas
push
daa
cmps
jp
xor
or
inc
maxps
(bad)
mov
and
mov
pop
stos
out
test
sub
mov
or
mov
and
daa
mov
push
mov
cmp
push
(bad)
adc
js
lods
sub
imul
mov
rol
mov
sbb
out
cmps
inc
mov
or
lods
fs
(bad)
or
in
outs
mov
mov
xchg
jmp
ins
or
or
fwait
(bad)
push
mov
lods
retf
jne
and
mov
(bad)
(bad)
stos
(bad)
mov
ror
jg
mov
and
pop
(bad)
rol
mov
pop
adc
inc
bnd
add
clc
mov
out
aaa
pop
push
div
jns
push
(bad)
fiadd
fwait
cmp
mov
sub
aam
adc
movs
fbstp
fcomp
cmps
xchg
jnp
leave
fdivr
ins
into
adc
mov
dec
or
lds
js
stos
mov
sub
and
jle
xchg
ror
inc
jnp
xor
daa
and
adc
fsubr
ins
mov
mov
(bad)
mov
bound
ja
fcomp
mov
data16
pop
xor
(bad)
movs
outs
xor
repnz
(bad)
sub
sub
push
pushf
mov
sub
retf
pop
and
ins
inc
aas
outs
jne
inc
cmps
mov
(bad)
fnstenv
imul
jne
dec
xor
lods
xor
test
sbb
adc
or
out
aas
stos
cmps
movs
mov
sub
(bad)
push
movs
add
sub
(bad)
sti
fild
in
call
dec
icebp
mov
cmps
mov
leave
xchg
(bad)
cmp
std
(bad)
mov
push
clc
je
dec
mov
lds
daa
test
inc
or
push
icebp
clc
jle
int
jno
lds
mov
pop
sbb
add
jge
pop
arpl
xchg
out
out
mov
icebp
lea
xchg
inc
or
aas
add
mov
cmp
jg
xor
stos
adc
push
rol
jp
(bad)
ds
xor
push
or
add
and
sbb
(bad)
stos
pop
cmp
and
dec
iret
addr16
xlat
sub
mov
out
jnp
and
and
bsf
fdivr
ja
(bad)
imul
inc
or
out
cmp
adc
aaa
adc
loope
and
mov
cmp
mov
mov
fidivr
mov
shr
jb
data16
mov
jae
(bad)
mov
rcl
leave
pop
cld
scas
xor
scas
outs
adc
nop
fsubr
outs
mov
test
mov
mov
inc
ins
sub
xor
aad
jecxz
mov
push
jno
dec
cmps
sbb
stc
les
adc
cmps
mov
les
xor
xchg
sub
movs
cmp
fnstenv
xor
pop
push
lds
retf
popf
ud1
(bad)
ror
call
daa
cli
dec
outs
cmps
jno
sbb
cmc
jae
js
cmp
adc
pusha
push
out
(bad)
repnz
push
arpl
cmp
repnz
mov
outs
sbb
jge
movs
(bad)
mov
test
cmp
xchg
pop
pop
not
scas
sbb
in
mov
scas
push
inc
cmps
jo
cmp
mov
cpuid
inc
es
mov
cmp
call
jg
xor
and
out
cld
xor
adc
or
pusha
jle
or
cs
mov
cdq
daa
jg
call
loopne
mov
push
jo
mov
scas
repnz
call
sub
stos
mov
xor
(bad)
or
or
cdq
data16
cmps
jne
lds
xchg
push
mov
xchg
adc
inc
stc
cdq
mov
test
(bad)
xchg
pop
mov
xchg
sub
ret
xor
lds
sbb
(bad)
mov
pop
mov
pop
jae
std
ret
fild
sbb
cmp
imul
jmp
gs
inc
sahf
mov
lods
loopne
push
fst
sub
not
push
push
jb
int3
adc
jl
push
jp
mov
cmc
add
add
scas
(bad)
adc
jnp
jg
lahf
jne
fild
mov
sbb
aad
mov
and
inc
add
jg
cmc
or
imul
scas
shr
cs
je
mov
test
pop
mov
sub
mov
fidivr
xor
add
clc
jge
and
cmp
adc
sbb
fimul
pop
je
add
sti
leave
xrelease
cmp
test
data16
into
sub
aas
mov
mov
pop
test
int
xchg
stc
push
mov
push
stc
mov
aaa
push
inc
das
cmps
test
(bad)
mov
push
repz
sbb
pop
mov
cs
mov
repz
xor
fucomi
mov
sub
(bad)
sbb
pop
je
sub
cmp
jne
mov
cs
sub
fnstsw
push
pusha
outs
call
stos
sbb
cmps
mov
jne
pop
lds
mov
jecxz
jmp
pop
call
stos
lods
xchg
pop
push
mov
scas
xor
test
(bad)
lds
aaa
pop
ret
push
cmp
and
xchg
mov
mov
push
popf
jnp
(bad)
bound
dec
xchg
cmp
sub
lods
(bad)
adc
jmp
pop
sbb
test
mov
je
scas
test
mov
pop
adc
mov
jo
or
xor
(bad)
pop
mov
(bad)
sar
and
retf
(bad)
gs
sub
icebp
les
adc
add
pop
mov
mov
xor
stos
mov
inc
(bad)
pop
pop
outs
ret
(bad)
in
pop
stos
push
and
lods
arpl
lds
xor
(bad)
mov
xchg
and
cmp
sbb
fist
scas
mov
call
jp
pop
mov
cmp
sbb
addr16
outs
mov
mov
adc
daa
add
aad
mov
jle
in
inc
in
movs
mov
inc
idiv
outs
movs
pop
push
pop
inc
ins
inc
mov
mov
test
cmps
retf
mov
ins
pop
icebp
sbb
and
pop
add
ror
ror
icebp
sub
stos
shl
cmc
in
mov
push
fs
popf
test
stos
sub
ins
pop
mov
in
and
loopne
fs
xor
cmps
cmp
mov
mov
(bad)
mov
outs
cmp
mov
mov
dec
inc
dec
add
jle
in
loop
sbb
dec
push
lds
jmp
sahf
cmp
adc
jbe
push
scas
dec
or
dec
and
es
out
mov
aas
popf
addr16
test
cmps
push
js
ret
cmp
cmp
xchg
into
xchg
inc
sahf
aad
xchg
ins
icebp
sbb
rcr
mov
clc
sar
ret
dec
popa
rol
mov
push
inc
pop
and
lock
loopne
mov
out
push
ins
fidiv
aad
rcr
mov
(bad)
rcr
dec
sub
arpl
sub
(bad)
aaa
or
daa
add
and
dec
cwde
push
scas
xchg
pop
fld
jo
in
inc
mov
jg
sub
mov
dec
mov
es
aaa
in
lds
sbb
xchg
ret
mov
and
jmp
gs
lea
imul
(bad)
mov
(bad)
loope
outs
inc
repz
adc
and
aas
dec
sbb
sub
push
js
sbb
xchg
iret
mov
jo
(bad)
adc
and
add
jnp
and
inc
cmps
mov
mov
sbb
inc
jo
mov
jno
add
xchg
test
pop
dec
test
dec
or
cmp
xchg
cmp
or
aas
pushf
fwait
lds
sbb
mov
in
(bad)
lahf
jne
adc
mov
test
jns
adc
add
dec
lds
frstor
js
test
lods
hlt
and
cli
mov
scas
stos
cmc
adc
dec
lods
cmps
leave
dec
cmp
jno
in
es
fadd
mov
xchg
lods
mov
das
out
out
stc
pop
mov
xchg
(bad)
jnp
outs
pop
xor
inc
mov
push
add
js
add
xchg
xchg
dec
lods
mov
push
movs
dec
scas
jnp
sbb
sub
add
(bad)
mov
outs
mov
sbb
push
sbb
shr
push
and
int
or
mov
(bad)
sbb
sub
push
cmp
xor
lods
xchg
popf
pop
dec
mov
cmps
outs
dec
xchg
test
adc
cmp
ds
div
adc
sbb
stos
xor
push
push
pop
push
sub
(bad)
and
sbb
ins
jns
lods
pop
push
push
adc
cwde
jle
cld
(bad)
test
mov
xchg
jge
push
or
(bad)
arpl
push
mov
sub
aad
iret
dec
mov
loope
popa
adc
xchg
in
or
inc
daa
aaa
lock
loop
adc
jns
call
inc
aas
cmps
dec
jne
sbb
mov
rol
xor
scas
xlat
inc
fs
dec
std
and
push
mov
mov
cmp
cld
jne
or
lds
fwait
adc
retw
adc
stos
sti
leave
out
je
mov
cmps
mov
push
in
adc
mov
or
dec
aas
lds
test
jge
add
cld
jne
dec
cmps
jge
addr16
jecxz
repnz
or
addr16
mov
scas
scas
ficomp
(bad)
pop
push
dec
jns
mov
push
cmp
xor
sbb
addr16
add
sub
jge
xchg
outs
sub
cwde
nop
scas
mov
inc
inc
ins
jno
pusha
push
(bad)
push
pop
outs
lds
mov
mov
and
hlt
ja
xor
ror
jbe
div
mov
cmps
ret
clc
pop
mov
jne
and
cmps
inc
jmp
std
dec
pop
push
pop
repnz
leave
fs
sub
call
(bad)
js
xchg
repnz
or
mov
cmp
mov
in
push
add
mov
xor
push
add
lds
add
lea
in
lock
cs
imul
add
outs
mov
cmps
lds
mov
test
xchg
xchg
adc
xor
dec
xchg
mov
add
(bad)
ficomp
shl
rcr
and
in
daa
pop
cmp
pop
loopne
in
push
fld
in
xlat
out
push
(bad)
vshufps
jno
test
stc
ds
out
mov
jb
movs
test
sbb
stos
jg
mov
jle
repnz
dec
mov
xor
es
cmp
test
cmp
cmp
mov
pop
gs
out
pop
mov
jb
loopne
adc
mov
xchg
mov
fdivr
ds
movs
imul
enter
fidiv
test
cwde
ret
imul
push
dec
add
mov
inc
mov
loope
test
imul
and
dec
cmp
mov
and
lds
gs
out
addr16
sub
(bad)
outs
(bad)
cli
dec
pop
add
dec
jo
(bad)
pop
cmp
cs
daa
les
les
or
stos
(bad)
xor
mov
(bad)
in
jnp
pushf
stos
xor
and
into
cmp
cmp
adc
mov
inc
out
sub
mov
loopne
icebp
imul
pop
push
jecxz
push
leave
cs
pop
popf
call
(bad)
cmp
gs
mov
xchg
mov
(bad)
mov
call
stos
adc
(bad)
add
movs
push
push
shl
mov
int
jg
div
cs
cmp
adc
pushw
div
call
(bad)
sahf
cmps
loope
xlat
stc
scas
mov
sbb
outs
int3
xlat
mov
out
jg
mov
fadd
fs
dec
xchg
pop
outs
aas
push
int
repz
xlat
mov
push
xor
jns
lea
test
xchg
stos
stos
or
adc
jge
and
xchg
pop
inc
mov
mov
add
jb
push
out
adc
sti
add
ds
into
jl
mov
push
popa
stos
or
push
mov
cmps
jle
nop
cmp
clc
push
ret
mov
aas
enter
inc
int
jl
xchg
and
mov
adc
in
(bad)
push
mov
cmp
daa
daa
and
jle
outs
lds
scas
nop
fsubr
xchg
scas
call
push
cmc
mov
arpl
push
scas
dec
sar
lds
sub
inc
jmp
mov
loope
in
inc
inc
adc
mov
dec
jg
inc
jo
aas
stos
(bad)
test
pop
lods
jmp
out
ins
inc
dec
mov
xor
sub
in
(bad)
and
icebp
stos
or
jmp
inc
and
scas
or
mov
ficomp
cmp
xor
jnp
push
ds
and
stos
lods
scas
out
cmp
mov
inc
and
retf
inc
jge
movs
cs
aas
inc
repz
fisub
push
push
sub
adc
or
push
sub
sub
xor
mov
aad
sub
shufps
(bad)
in
stc
xchg
mov
mov
mov
stos
push
add
js
cmp
arpl
mov
in
inc
cli
xor
outs
out
sbb
mov
cmps
adc
push
mov
(bad)
into
dec
scas
fsub
push
outs
ja
push
cmp
and
dec
cwde
call
inc
fcmovu
lods
nop
pop
push
jo
jle
xor
retf
daa
mov
sub
loopne
mov
mov
adc
or
stos
inc
mov
mov
mov
fwait
push
js
adc
push
inc
sbb
jnp
mov
out
jle
xchg
scas
test
mov
out
popf
(bad)
xor
fmul
fmul
sahf
cmps
add
pop
imul
mov
iret
mov
arpl
mov
dec
sub
rcl
push
popa
sti
mov
movs
dec
int3
mov
in
sar
ja
sahf
lahf
push
movs
sar
pop
es
in
and
cmps
adc
cld
test
or
add
cmp
mov
lods
enter
xchg
and
gs
outs
out
mov
jo
clc
and
mov
das
push
cmp
fwait
xor
shl
fcomp
shl
(bad)
rcl
adc
mov
bound
cmp
push
lds
(bad)
mov
fucomp
xchg
sub
stos
inc
loop
(bad)
aad
mov
push
out
mov
adc
push
dec
ret
movs
cmc
sbb
mov
cmp
add
in
cmp
push
je
jp
mov
cmps
jno
dec
lds
imul
ds
dec
imul
mov
jge
or
dec
loop
in
mov
dec
sar
es
fs
xchg
xor
int
push
or
xor
mov
sbb
test
cmp
add
(bad)
mov
sub
jb
dec
adc
push
mov
ins
bound
(bad)
mov
arpl
daa
mov
dec
lods
cmps
and
bound
loope
push
je
pushf
jo
daa
pop
xchg
outs
pop
mov
sub
mov
sbb
jmp
jne
inc
jb
(bad)
lods
cld
mov
mov
into
add
retf
into
xor
sub
mov
add
outs
mov
aas
jge
xor
aad
cmp
arpl
jbe
cmps
outs
outs
xchg
push
bound
cmps
lds
xor
mov
(bad)
lods
mov
and
movs
xchg
mov
push
imul
jbe
mov
cmp
adc
jg
jle
sbb
pop
cs
lahf
mov
(bad)
sub
push
mov
pop
inc
sbb
mov
cmps
push
add
dec
lock
daa
xor
lahf
out
pop
jno
stos
pop
sbb
adc
cmc
xor
jnp
mov
shl
dec
sbb
pop
dec
gs
ins
cmp
loop
loopne
jle
sbb
pushf
lds
sahf
fnstenv
inc
or
or
mov
outs
iret
mov
push
retf
add
xchg
js
les
test
and
sbb
pop
in
inc
mov
jbe
je
and
xor
mov
fisub
push
mov
mov
jmp
(bad)
div
lds
jp
jge
outs
out
mov
(bad)
fadd
lds
inc
mov
jo
movs
xchg
mov
sbb
inc
movs
data16
and
fst
jl
add
lds
int3
das
repnz
out
inc
in
cmp
jl
pop
mov
rol
popa
jns
and
les
icebp
inc
jnp
jle
cmp
rcr
outs
test
mov
dec
push
push
or
lahf
push
pop
outs
and
sbb
stos
dec
daa
int3
aas
adc
ds
ror
xchg
arpl
int3
mov
xchg
cmp
les
pop
lahf
cli
mov
cmp
arpl
mov
out
inc
jno
ins
mov
stc
ds
clc
jnp
adc
mov
fst
call
push
add
jno
rcl
fs
loopne
stos
pop
movs
xor
leave
fsubr
sub
adc
inc
int
imul
sbb
(bad)
push
mov
cmps
xor
aaa
inc
je
aas
outs
cmp
(bad)
cmps
xor
lods
shl
sbb
mov
adc
retf
cld
in
push
mov
sub
jns
or
adc
push
jns
ja
xchg
mov
fwait
or
mov
leave
inc
sbb
xor
(bad)
lahf
stos
inc
aam
add
jmp
js
dec
dec
popa
push
sub
in
jae
mov
jge
mov
sahf
nop
cmps
inc
lds
fstp
nop
ja
jb
inc
cmps
mov
dec
mov
adc
sub
push
int
xchg
pop
push
mov
sbb
aas
int3
jno
icebp
mov
std
cmp
add
push
xchg
fadd
mov
xchg
push
outs
(bad)
out
mov
int
inc
movs
jge
rcl
adc
and
adc
fwait
(bad)
rol
imul
fisttp
jg
daa
es
pop
pop
jge
sar
(bad)
xchg
sbb
jecxz
mov
les
inc
xchg
ja
jno
mov
(bad)
mov
(bad)
mov
imul
imul
push
movs
adc
sub
imul
sbb
mov
stos
hlt
xor
cmp
(bad)
xor
std
jb
mov
sbb
sahf
fild
or
push
(bad)
call
inc
scas
dec
xor
outs
mov
pop
addr16
xchg
lahf
ins
(bad)
pop
hlt
or
jnp
jnp
dec
mov
xor
push
outs
sub
adc
pop
(bad)
(bad)
adc
mov
je
adc
fnstcw
clc
data16
xlat
cmp
mov
xchg
mov
ins
mov
push
mov
ret
jg
(bad)
enter
xchg
xchg
lahf
jbe
js
mov
ret
mov
inc
clc
out
xlat
jecxz
scas
rcl
ret
outs
mov
fist
and
mov
test
sub
cld
push
lods
mov
(bad)
xor
js
mov
inc
les
scas
and
call
pop
in
or
sub
push
pop
(bad)
lock
enter
fiadd
or
mov
in
push
lock
shr
sub
iret
and
mov
inc
jne
cmp
cmp
(bad)
fistp
fwait
xor
js
clc
xor
cld
js
lods
mov
cmp
push
jecxz
sbb
adc
or
adc
jmp
iret
std
test
xlat
jg
test
jo
cmp
bound
lods
ds
pop
cmp
cld
stos
pop
mov
(bad)
arpl
xchg
cmps
stos
and
(bad)
lods
std
jo
pop
add
int
inc
dec
add
push
loopne
push
loop
lods
popf
(bad)
popa
adc
js
push
jae
scas
popf
jle
lods
pop
shl
rcr
pop
dec
adc
jmp
lahf
adc
sahf
test
into
xor
cmp
cmps
sub
jp
prefetcht2
out
dec
out
or
ror
cmp
and
in
les
mov
into
lds
imul
and
imul
shl
and
pop
int3
adc
xor
mov
fmul
pop
xchg
scas
xchg
inc
jnp
out
jns
cmps
adc
push
test
shl
adc
pop
mov
jns
pop
aas
inc
jae
popf
arpl
movs
cmp
clc
(bad)
fsubrp
(bad)
dec
es
mov
xchg
outs
push
(bad)
mov
pop
or
add
jle
stos
(bad)
xor
jp
aas
fsubr
adc
(bad)
mov
ret
jo
in
and
stc
jmp
lds
outs
and
mov
pop
(bad)
aas
jb
jnp
sti
fst
jo
cmc
mov
std
dec
cmp
lods
movs
lods
ins
sub
jne
cmp
sub
pop
inc
add
mov
inc
retf
adc
in
mov
int3
retf
stos
adc
add
call
addr16
xor
(bad)
test
cwde
jg
pusha
sub
mov
jl
das
test
dec
or
inc
xchg
cmp
xchg
std
popa
ja
cdq
sbb
stos
mov
adc
jo
in
jno
mov
mov
cmps
(bad)
push
pusha
pop
sar
mov
ins
dec
sub
mov
shr
jg
loop
mov
bound
cli
(bad)
neg
(bad)
idiv
movs
xor
rcr
sar
sub
jg
inc
mov
sar
push
cli
or
xor
pushf
add
loope
cmp
xor
loopne
sysexit
push
daa
mov
test
dec
mov
fstp
fstp
es
aam
lock
mov
dec
sbb
mov
shufps
sbb
inc
or
sub
daa
and
lds
pop
sub
add
pop
xchg
leave
vpcmpgtw
mov
std
(bad)
je
pop
movs
lods
lods
push
vpaddd
je
sub
mov
and
mov
jle
out
cmp
jb
xchg
shr
xlat
adc
loope
pop
test
pushf
mov
daa
shr
inc
dec
jnp
data16
pop
or
push
mov
outs
aas
fdivr
push
ror
jge
and
xor
cmp
sub
cmps
jne
cli
pmulhuw
xlat
in
iret
rol
jmp
xlat
inc
add
in
and
lods
test
cmps
push
pcmpgtw
sbb
fstp
jns
mov
sahf
pop
minps
(bad)
lahf
(bad)
pop
pusha
adc
cmp
bound
sti
mov
or
jb
stos
and
(bad)
shl
jo
jecxz
pop
test
add
jmp
js
dec
xor
pushf
fwait
lahf
and
mov
push
adc
cld
adc
test
add
shl
xor
and
sbb
cmp
pop
movs
mov
fwait
mov
fmul
xchg
fwait
dec
cmp
cli
dec
pop
sub
mov
fcmovnb
pop
dec
xor
adc
stos
mov
mov
pop
mov
jbe
loopne
ret
mov
dec
add
xor
cmps
vfrczpd
aam
mov
call
imul
in
inc
test
mov
ja
and
mov
add
push
sbb
outs
sub
fs
add
jnp
xchg
mov
sub
(bad)
pop
push
inc
je
test
jo
pusha
jle
in
xor
lds
das
xchg
inc
push
mov
jns
shl
push
pop
gs
(bad)
push
gs
mov
jmp
push
aam
mov
mov
cmp
inc
aaa
ins
mov
es
add
or
ret
fwait
add
scas
pop
mov
sub
out
dec
je
adc
and
mov
mov
lods
cs
pop
jnp
(bad)
fisub
xor
sbb
(bad)
sahf
(bad)
push
and
or
call
fs
add
sbb
push
cmp
add
xor
add
ins
or
or
xlat
or
add
aad
stos
mov
fisttp
or
push
rcl
pop
sbb
cwde
das
jae
es
add
sub
pop
cld
xor
repnz
pop
xchg
stos
stc
loopne
cmps
outs
std
(bad)
cmp
mov
xchg
xchg
jns
pop
cmps
aaa
adc
pop
scas
cmp
sub
sub
in
or
add
push
into
pushf
push
fstp
add
adc
inc
fsubrp
adc
lods
sar
es
dec
fisubr
les
fs
push
push
les
cwde
sub
ja
into
inc
jmp
cld
or
ret
dec
jb
adc
mov
js
ja
or
inc
stc
lods
push
inc
sub
jae
or
movs
or
cmps
and
mov
mov
jp
adc
sbb
lds
iret
lea
inc
push
xchg
cmp
lock
mov
mov
ss
nop
push
mov
movs
push
sub
dec
pusha
add
add
push
xchg
xor
add
sbb
and
or
mov
xor
stos
enter
cld
xchg
cmp
jl
cmp
and
push
lds
jae
sub
xchg
xor
xor
mov
mov
call
mov
nop
aad
loop
ins
in
and
jns
cs
and
mov
jns
out
sahf
dec
mov
sub
dec
dec
movs
jnp
aas
push
sbb
mov
push
imul
and
and
jg
pop
leave
mov
mov
sub
sbb
pop
(bad)
enter
outs
repz
or
loopne
xor
or
les
adc
ja
xchg
jmp
outs
lods
lahf
(bad)
jl
pop
or
es
and
add
inc
lds
sub
lock
xor
jg
add
cmp
dec
sub
mov
js
hlt
mov
and
ja
cmp
jbe
aas
sub
mov
xor
pop
pop
mov
arpl
out
jo
adc
in
lds
retf
push
stos
stos
cmp
outs
inc
loop
adc
dec
sub
add
and
cmp
cld
lock
pop
sub
lods
xchg
loopne
jnp
fbstp
arpl
xor
fistp
in
cmp
out
xchg
jne
xor
dec
sbb
sub
aas
in
mov
enter
xor
add
adc
jbe
push
pop
sbb
gs
cmc
jg
mov
dec
je
jae
lods
lds
mov
(bad)
cmps
xor
mov
push
enter
jecxz
and
jo
rcr
jmp
or
mov
adc
imul
sbb
stos
adc
outs
aas
inc
(bad)
sbb
pop
jno
lods
or
les
lahf
into
sub
pop
sub
push
push
inc
mov
mov
in
fs
xchg
pop
jno
mov
push
test
xor
sub
mov
aam
movs
aad
sub
cmp
or
out
sub
fistp
pop
add
jp
mov
in
sbb
call
daa
xor
push
into
inc
lss
and
dec
stos
stos
icebp
mov
scas
pushf
stos
mov
sbb
cmp
jnp
jge
jge
pop
xchg
mov
fcomp
popa
iret
or
clc
sub
and
dec
adc
retf
test
fnstenv
dec
dec
rcr
loopne
aas
movs
scas
lods
mov
xor
xchg
inc
jne
mov
pop
pop
les
or
dec
mov
mov
jo
out
(bad)
xor
in
cmp
jbe
movs
fidivr
push
xor
imul
sbb
retf
cmp
inc
(bad)
ds
inc
push
imul
push
push
cli
xor
and
adc
or
push
mov
fild
inc
ja
(bad)
and
popa
in
call
add
push
sub
sub
retf
popa
repnz
inc
cli
mov
lods
fwait
lds
adc
dec
inc
mov
nop
pop
popa
shr
inc
scas
xchg
inc
nop
cs
jl
std
scas
js
shl
mov
jnp
or
imul
jne
rcr
xchg
jnp
out
mov
icebp
push
aaa
clc
and
pop
mov
lds
jmp
push
int
dec
retf
and
in
(bad)
stos
pop
jge
pop
ins
mov
mov
xchg
jmp
(bad)
jmp
sti
mul
aam
push
andnps
lods
mov
fistp
stos
sbb
mov
imul
aad
popa
popa
pop
ss
cld
rol
sar
adc
call
push
push
dec
dec
mov
lods
pop
mov
ja
mov
test
xchg
in
inc
add
jg
sar
sbb
add
xor
aam
pop
xor
xchg
test
inc
scas
dec
sub
pop
hlt
mov
mov
cmp
dec
jl
add
mov
xor
push
hlt
(bad)
std
shl
imul
jle
cmp
repz
xor
sbb
mov
xchg
daa
jne
lds
sub
adc
mov
fistp
cmp
shr
mov
push
aaa
mov
std
sbb
rol
and
int
lea
mov
jp
push
xor
not
mov
xor
dec
cmps
jno
fnstenv
(bad)
mov
xchg
xor
fs
sub
and
outs
out
mov
cmps
fcmove
and
mov
xchg
push
xor
inc
xchg
js
imul
daa
xchg
mov
out
(bad)
jp
xlat
and
adc
icebp
push
(bad)
int3
call
or
lock
mov
inc
fdiv
fist
jns
inc
lahf
(bad)
xchg
bound
scas
sti
stos
xor
lahf
mov
fs
stos
adc
or
dec
cmp
mov
sub
pop
add
test
fcomp
mov
sub
mov
ficomp
jae
lds
ins
jg
xor
out
dec
inc
xor
jmp
add
fsub
xchg
adc
pop
cmp
fwait
mov
xchg
stos
test
xchg
daa
imul
jb
or
jmp
jno
test
cmp
sbb
sbb
and
retf
mov
dec
(bad)
mov
pop
outs
les
inc
sbb
dec
popa
in
fstp
(bad)
sti
add
lds
lock
fidivr
sub
cmp
ja
lds
mov
mov
in
sub
fbld
(bad)
ja
push
clc
mov
jmp
inc
inc
sub
jg
fdivr
or
jno
fcmovb
and
rol
inc
mov
sahf
popf
icebp
imul
mov
cld
mov
ins
dec
mov
mov
lds
add
jo
jbe
mov
mov
loop
cmp
mov
mov
fmul
mov
ins
lds
inc
fsubrp
xor
pop
lds
cwde
jno
popa
movs
ins
jg
adc
sbb
xor
sbb
pop
sbb
mov
mov
ja
outs
popa
push
adc
enter
js
inc
or
jg
or
in
movs
lds
(bad)
outs
cmp
push
pop
scas
(bad)
adc
stc
inc
cld
movs
aas
es
pop
lahf
sbb
push
popa
pop
or
out
xor
adc
mov
jl
lds
add
sub
ins
loop
push
(bad)
mov
int3
pop
ret
ins
int3
cmps
scas
xor
scas
push
scas
jbe
sbb
jecxz
inc
pop
lock
call
sbb
pop
stos
jne
mov
dec
out
sti
jg
xor
adc
sub
inc
mov
in
mov
mov
jnp
dec
(bad)
rcl
mov
sbb
cld
adc
mov
jle
ss
retf
shr
pusha
daa
(bad)
mov
bound
data16
mov
arpl
rol
push
jle
inc
mov
ja
retf
adc
mov
pop
fldcw
pop
cmp
inc
imul
xor
das
test
daa
or
stos
and
sbb
xor
jle
(bad)
das
cwde
std
jne
and
xor
xor
jno
data16
aas
and
(bad)
sbb
mov
lods
ja
in
add
pop
scas
(bad)
scas
mov
cmp
ret
(bad)
push
inc
repnz
add
mov
call
ret
in
jp
(bad)
mov
repz
xor
out
or
test
les
jp
cmp
mov
mov
sahf
movs
dec
jmp
xor
and
movhps
adc
mov
ja
pop
push
or
mov
aad
lds
popa
daa
mov
lahf
mov
popa
adc
mov
movs
mov
jmp
pop
push
mov
push
add
cmc
neg
adc
outs
cmps
sbb
stos
lds
jle
(bad)
btc
cld
aas
lds
test
jbe
mov
xchg
mov
cmp
adc
ret
scas
ins
scas
cwde
xor
ja
inc
sub
mov
out
pop
jg
mov
pop
call
pop
das
lods
and
pop
aas
in
adc
fcmovb
mov
cmp
int3
fwait
xor
cmp
push
cmp
mov
pop
in
pop
fwait
mov
arpl
je
cmc
pop
mov
lds
ds
pop
push
test
cmp
jnp
mov
addr16
mov
mov
loop
(bad)
xor
cmp
jp
xchg
dec
push
imul
cld
sbb
inc
or
test
mov
xchg
fs
iret
mov
iret
jmp
mov
jnp
dec
ss
rol
(bad)
mov
in
fidivr
sbb
inc
adc
aas
xchg
cmp
shr
lds
lods
imul
and
xchg
mov
daa
mov
lods
fnsave
pop
mov
mov
cmps
adc
add
cmps
xchg
cmp
xchg
xor
gs
por
sub
pop
test
xor
mov
in
fldcw
stos
lds
scas
or
jno
adc
adc
push
aas
fiadd
std
lea
sbb
cmp
loope
cmp
jo
cs
xor
(bad)
les
das
pop
fcmovnb
fnstsw
cmp
cmp
and
xor
jge
cmps
je
mov
(bad)
mov
out
inc
popa
scas
in
call
lds
fs
xor
dec
aaa
adc
xchg
lahf
js
cmps
sbb
xchg
xchg
adc
cli
sub
mov
push
test
ror
retf
fst
(bad)
cld
(bad)
cmp
cmc
inc
outs
inc
iret
jo
rol
xchg
cld
bound
stc
jge
ds
retf
mov
icebp
fwait
adc
mov
xchg
xor
adc
daa
add
jle
retf
push
add
or
sbb
xchg
push
ror
dec
and
icebp
stos
push
mov
and
add
sbb
(bad)
mov
fmul
cmp
ret
pop
push
mov
fs
fwait
icebp
mov
ret
push
cmps
mov
jne
jmp
rol
dec
mov
cmps
inc
out
mov
inc
jmp
cmp
test
dec
pop
mov
iret
mov
lods
xchg
inc
xchg
aam
pop
int3
test
(bad)
pusha
popa
aam
push
stos
cdq
icebp
mov
pop
xchg
data16
jno
mov
inc
inc
std
push
add
jp
lds
push
(bad)
jmp
push
mov
aas
jae
jmp
pop
jle
pop
xchg
js
fimul
fimul
jo
push
mov
mov
xchg
outs
pop
test
clc
test
push
lahf
inc
pusha
xchg
dec
xor
imul
lods
lea
out
jp
rol
mov
mov
sbb
imul
out
inc
mov
pop
jb
mov
mov
or
in
dec
pusha
mov
sbb
cmp
ds
sub
rol
(bad)
jmp
sbb
mov
mov
hlt
jb
jecxz
xchg
adc
jno
lds
lods
sbb
jno
int3
ret
or
xor
push
enter
or
scas
and
sbb
inc
sbb
jg
jg
adc
sub
xor
inc
gs
scas
jecxz
inc
mov
mov
sbb
push
(bad)
ins
xor
(bad)
stos
imul
xchg
dec
test
push
lea
stos
mov
iret
cmc
adc
sub
mov
push
jb
push
lods
dec
lds
iret
mov
pushf
cs
pop
xor
mov
in
sbb
mov
mov
adc
in
mov
adc
fnstcw
and
dec
adc
sub
push
jecxz
lock
pop
imul
lods
fwait
mov
ins
mov
pop
outs
mov
sub
mov
add
out
ds
loope
jnp
stos
push
mov
(bad)
push
inc
stos
mov
ret
enter
div
jnp
sub
and
xchg
jne
mov
mov
leave
inc
repnz
adc
adc
sub
sub
pop
test
cmp
imul
test
cmp
push
into
cmp
enter
push
scas
cmps
inc
fcom
push
pop
scas
xor
and
dec
call
call
mov
(bad)
push
sbb
adc
xchg
(bad)
out
jbe
pop
mov
fdivp
mov
repz
mov
dec
pushf
push
lock
out
scas
cmp
neg
scas
scas
aas
inc
retf
out
popf
or
and
sti
mov
daa
xchg
mov
int3
fwait
mov
pop
loope
sbb
repz
push
cmps
mov
push
and
and
cli
not
sub
lds
xchg
mov
das
mov
daa
out
cmp
inc
adc
adc
or
pop
pop
sar
(bad)
mov
xor
jne
adc
push
aaa
and
sti
dec
and
call
fild
mov
lea
in
imul
test
mov
lahf
jnp
addr16
dec
and
push
xlat
mov
nop
outs
xchg
lds
add
lods
in
sub
pop
sahf
cmc
mov
dec
push
xchg
leave
outs
jle
cmp
push
sub
aam
inc
jl
mov
push
(bad)
mov
test
add
retf
adc
(bad)
xchg
leave
jne
xchg
outs
mov
je
fisttp
push
sub
es
in
jnp
outs
or
pop
and
mov
cld
and
inc
dec
fxch
mov
or
int3
mov
sub
sbb
sbb
jmp
inc
push
lods
iret
ss
sub
jle
sub
fsub
mov
sbb
cmp
sub
test
or
cmp
ds
push
xlat
cmp
fdiv
mov
pusha
iret
cmp
call
pop
rcr
push
or
push
ins
je
das
enter
pop
movs
adc
jecxz
push
nop
dec
mov
xchg
mov
aaa
mov
push
cmp
and
inc
cmps
call
(bad)
adc
jecxz
adc
and
pop
js
rcl
xchg
data16
stos
jge
mov
lock
js
push
fwait
xchg
mov
dec
mov
pop
mov
es
cs
int
cmps
xchg
cmp
push
jle
mov
cmp
adc
movs
(bad)
int
or
mov
sbb
(bad)
xchg
shl
pusha
sti
xor
adc
popa
sbb
mov
stc
mov
fdiv
stc
imul
jno
fst
sbb
push
push
repz
scas
and
cli
adc
and
cmps
push
(bad)
out
stos
mov
aam
fwait
xor
jo
(bad)
test
push
mov
into
ror
in
sti
daa
mov
jae
dec
sub
jmp
push
addr16
inc
or
cdq
mov
adc
cmps
jb
jmp
lods
inc
lods
out
mov
and
repz
aaa
sahf
(bad)
pop
adc
sub
xchg
dec
adc
dec
fld
shr
mov
mov
arpl
stc
mov
and
push
jl
stos
cmp
mov
mov
dec
jl
ret
loop
mov
jl
sub
clc
rcl
fcomp
mov
sti
lahf
neg
loopne
loop
adc
movzx
adc
(bad)
jmp
cmps
outs
pop
ins
shl
pop
stos
mov
add
jnp
pop
and
xor
jmp
sbb
cmp
packsswb
leave
pop
inc
out
jecxz
sti
xor
pop
gs
das
(bad)
scas
dec
das
std
pop
and
jo
xchg
into
lahf
jl
mov
sti
test
in
push
sub
retf
mov
or
mov
pause
xchg
add
int
jl
or
jle
cmp
aaa
ret
and
scas
and
cmp
and
mov
jle
mov
cli
jge
in
out
mov
bound
fdiv
int3
jns
aas
sahf
mov
xchg
or
xor
dec
cmp
xor
nop
push
daa
test
aad
sub
adc
stos
(bad)
adc
outs
(bad)
push
sar
mov
jmp
lds
push
mov
fcomip
pusha
movs
add
adc
and
jg
mov
(bad)
call
fst
cmp
mov
pusha
retf
cmps
into
mov
adc
sbb
inc
inc
jg
int
stos
ins
aad
bswap
fimul
jecxz
or
and
jecxz
jnp
push
ss
ds
and
add
lds
pop
cmp
stc
ret
fdivr
add
cmp
and
jmp
sub
adc
daa
xor
or
sbb
rcr
cdq
jmp
stos
mov
cmp
lods
sahf
arpl
lahf
mov
outs
cmp
ins
retf
dec
push
fnstcw
mov
inc
mov
loopne
cdq
mov
es
push
stos
(bad)
cmp
(bad)
out
leave
inc
shl
lods
push
xchg
sbb
out
jge
mov
out
stc
lods
dec
repz
stos
shl
inc
jb
mov
mov
mov
cmp
sahf
xchg
jne
sbb
push
xor
inc
retf
dec
and
lahf
pop
(bad)
(bad)
in
aas
out
mov
jne
scas
in
xor
sbb
cs
mov
sbb
cmp
aas
mov
leave
iret
mov
push
mov
or
retf
jmp
sti
sub
sub
jno
mov
mul
lds
ret
fnstenv
daa
arpl
int
cmp
cmp
jl
inc
es
adc
mov
sub
xor
stos
adc
jl
sti
mov
sub
pop
js
in
cmp
movs
cmp
dec
cmp
scas
mov
loope
inc
pop
out
push
jmp
and
dec
jno
retf
out
movs
add
test
mov
or
jecxz
outs
jg
scas
sub
xchg
call
inc
push
(bad)
mov
fadd
scas
adc
push
mov
jns
mov
scas
mov
enter
mov
ret
aad
xchg
sub
add
fist
movs
fistp
stc
mov
(bad)
jmp
xchg
jns
int3
out
xchg
stos
xor
dec
cmp
mov
inc
aas
mov
js
push
mov
mul
call
dec
nop
sahf
cmps
stos
shl
mov
fst
add
push
cmp
xor
je
pop
sbb
and
out
fmulp
jmp
mov
jge
pop
call
mov
mov
push
cmp
or
test
cmps
sub
cmp
sbb
mov
div
and
or
das
sbb
dec
cmps
adc
mov
mov
imul
nop
mov
push
cmps
jmp
cld
hlt
cmp
cmp
lds
data16
popa
outs
imul
adc
jle
aas
add
mov
lea
jne
push
jnp
cdq
xchg
dec
cs
(bad)
nop
scas
mov
push
daa
push
arpl
or
ins
jb
inc
or
mov
xor
stos
not
fwait
sti
fcmove
aaa
dec
pop
sbb
xor
mov
or
cld
push
mov
das
mov
into
xor
ja
mov
and
dec
dec
(bad)
pop
cwde
sub
in
push
mov
dec
mov
test
sbb
dec
cmc
jge
mov
out
xor
loope
clc
adc
jge
dec
(bad)
retf
pop
sbb
mov
sti
gs
nop
jg
cs
cmp
test
pop
xchg
pop
mov
outs
fist
inc
push
sti
or
push
test
ja
dec
and
arpl
push
sbb
gs
outs
xchg
xchg
jnp
mov
jge
outs
jns
ins
lahf
mov
jb
pop
cmp
cs
mov
mov
inc
jmp
mov
lea
addr16
or
mov
repz
cmps
adc
pop
test
shl
loope
mov
lds
jmp
std
ret
in
push
inc
add
xchg
imul
xchg
push
gs
jmp
mov
idiv
cmps
jge
push
lods
mov
or
jge
mov
adc
int3
out
cmps
ret
rcr
(bad)
call
adc
dec
sbb
inc
into
clc
in
ja
dec
fs
sub
pop
lea
mov
in
mov
jno
pop
cmps
pop
or
fbstp
cli
inc
stos
fist
xchg
and
out
fnstcw
js
cmp
(bad)
xchg
sub
push
fmul
(bad)
mov
adc
and
ins
movs
adc
scas
lods
fcom
add
aad
add
xor
xchg
sbb
ds
add
mov
jmp
cmp
popf
sahf
les
aas
sub
sbb
adc
popf
aas
stos
cld
push
inc
(bad)
add
pop
cdq
lods
gs
call
(bad)
nop
out
dec
pop
arpl
retf
scas
jp
jmp
push
mov
in
inc
fistp
mov
dec
inc
out
mov
stc
cmc
stos
or
icebp
lahf
push
jne
leave
pop
lods
pop
test
mov
fild
loopne
icebp
test
neg
vmwrite
dec
sub
sub
rol
sbb
mov
sbb
cld
cmp
cmp
mov
out
mov
jb
mov
aas
pushf
dec
in
dec
les
or
je
xchg
pusha
scas
or
bound
xchg
(bad)
cmp
adc
mov
fidivr
cmps
jge
fucomi
pop
sub
je
das
loop
jno
clc
fcomp
outs
les
cmp
jns
add
shl
stos
lods
sti
inc
shr
(bad)
(bad)
mov
mov
jne
dec
scas
add
mov
stc
outs
lock
mov
and
add
jno
cmp
movs
or
mov
aad
jnp
shl
add
push
jecxz
mov
inc
jno
(bad)
sub
inc
cmp
inc
jnp
adc
dec
bound
adc
sbb
aam
fwait
loopne
loop
jb
or
or
cmp
dec
popa
sahf
ret
mov
add
stc
cmp
jl
call
xlat
neg
int3
test
inc
fwait
pop
inc
mov
retf
inc
xchg
(bad)
pop
and
inc
imul
scas
popa
sbb
loopne
cmp
and
(bad)
mov
popf
xchg
fdivr
and
mov
ja
fnstcw
repnz
add
out
or
mov
test
mov
mov
enter
enter
stos
mov
mov
sub
hlt
jmp
mov
cmc
aas
sbb
(bad)
jle
xchg
ins
push
or
xor
ds
sbb
mov
leave
scas
(bad)
jl
pop
sbb
dec
sbb
sub
sub
or
xchg
or
out
add
ins
or
fucomip
scas
int3
mov
lahf
and
and
daa
jne
call
jo
xlat
mov
or
mov
mov
in
pushf
test
adc
add
fxch
cli
xor
int
daa
arpl
cmps
mov
les
pusha
push
std
pushf
mov
mov
stc
ds
sti
mov
daa
popa
int
ret
dec
mov
sub
ja
jnp
stos
nop
add
jb
in
popa
mov
in
lds
jmp
out
lahf
aas
jae
push
mov
ds
stos
push
outs
mov
imul
int3
push
dec
mov
imul
in
lahf
mov
sub
pop
mov
scas
xchg
adc
clc
mov
jmp
(bad)
xor
mov
adc
jmp
test
movs
xchg
jge
jbe
xchg
outs
sahf
jb
loope
jl
jmp
repz
push
ret
cmps
or
mov
dec
sti
inc
cmp
jle
mov
int3
jg
fisubr
lods
inc
inc
pop
rol
out
jmp
adc
jmp
pushf
mov
and
mov
sbb
out
pusha
pop
mov
xchg
and
mov
push
lods
sti
pop
mov
jae
movs
stos
frstor
(bad)
loope
bound
out
in
push
pop
sbb
retf
js
mov
add
mov
lock
push
adc
jle
sbb
lds
in
das
cmp
mov
jne
xchg
sbb
mov
sub
addr16
into
pushf
nop
mov
(bad)
mov
int3
movs
sbb
pop
loope
xor
gs
stc
mov
mov
jmp
out
in
dec
sub
cli
add
pop
adc
(bad)
jnp
in
jl
jmp
xchg
mov
test
int
daa
push
cmp
repnz
dec
imul
inc
mov
jp
in
daa
pop
xor
scas
jae
sbb
(bad)
push
mov
scas
outs
mov
jb
jns
(bad)
outs
mov
(bad)
cmp
lods
jg
lock
xor
in
cmp
imul
popa
cli
jle
aad
cmp
push
adc
xchg
cmp
neg
stos
add
into
lea
in
stc
neg
pop
mov
enter
pop
(bad)
cmp
lahf
jl
jg
dec
retf
mov
push
inc
lods
fstenv
fist
pop
aaa
jno
cmc
pop
inc
ret
cmp
fs
pop
jmp
jmp
pop
(bad)
fisub
jae
dec
movs
enter
mov
fld
push
mov
ret
(bad)
jne
aad
cmp
pop
std
js
adc
pop
fcomp
push
mov
(bad)
lods
mov
sub
push
stc
hlt
neg
leave
repz
(bad)
xchg
sbb
out
stos
scas
add
jbe
adc
in
push
shr
repnz
xchg
add
sub
inc
outs
(bad)
mov
jp
mov
or
clc
adc
and
lds
(bad)
shl
cmc
sbb
push
mov
dec
adc
dec
popa
pop
push
push
mov
and
sar
cmp
sbb
xchg
jmp
mov
stos
aas
add
mov
fild
pop
arpl
jp
aas
sbb
inc
rep
push
and
cs
test
xor
adc
outs
dec
jl
mov
stc
daa
std
xor
hlt
call
inc
fwait
sub
ds
les
jg
addr16
retf
pop
lahf
inc
xor
dec
mov
ret
and
repz
xor
ds
inc
adc
in
stc
leave
call
out
call
pop
dec
sbb
(bad)
aas
and
inc
or
mov
lds
mov
hlt
mov
dec
add
mov
mov
sbb
push
pushf
pop
cmp
in
not
mov
xor
dec
or
cdq
mov
cmp
pop
(bad)
and
sub
ud1
loope
gs
sub
imul
add
xor
sub
inc
sub
or
xchg
inc
out
nop
inc
sbb
sbb
pop
es
div
adc
push
add
inc
outs
push
sbb
mov
hlt
adc
lods
xchg
sbb
js
(bad)
imul
or
push
mov
cmp
ret
mov
test
xchg
sub
sbb
mov
sub
inc
ins
mov
sbb
leave
es
(bad)
(bad)
int3
shl
push
and
mov
retfw
movs
into
cmp
(bad)
stc
aas
jmp
mov
in
cmp
dec
lods
outs
ret
mov
jle
cmps
hlt
je
sbb
and
test
lds
movs
mov
(bad)
loopne
out
xor
lds
int3
mov
xchg
lods
(bad)
mov
aam
jl
outs
dec
jmp
xor
out
mov
mov
push
inc
in
(bad)
and
xchg
mov
xor
dec
mov
dec
jne
lds
repz
push
jg
in
arpl
xor
jno
mov
out
xor
lock
dec
xchg
movs
imul
out
dec
rcr
repz
stc
cmc
inc
fld
es
mov
arpl
out
push
outs
das
ret
mov
xchg
lahf
pop
(bad)
or
cmp
sub
xor
lds
cmp
cmp
jecxz
dec
loopne
lea
hlt
inc
into
(bad)
scas
ja
fcomp
aas
iret
mov
mov
jp
jge
xchg
stos
xchg
xor
jae
dec
outs
rol
jecxz
loopne
add
cli
in
rcl
mov
cs
pop
cmp
push
jo
movs
adc
outs
adc
lds
movs
add
sbb
(bad)
cdq
in
(bad)
test
fwait
mov
mov
push
leave
mov
movs
fucomip
inc
dec
jmp
mov
jo
pop
push
lahf
test
cmp
cmp
jae
cmc
cmp
sar
inc
iret
stos
add
jb
clc
adc
icebp
jg
xchg
push
sahf
fisttp
cmps
and
sbb
sbb
jmp
outs
(bad)
lds
push
sbb
repnz
mov
add
mov
sub
jmp
adc
shl
sbb
add
mov
dec
add
in
outs
lds
popa
(bad)
int3
jns
mov
sbb
jg
sub
(bad)
out
and
add
dec
push
(bad)
mov
lds
sar
ss
xchg
(bad)
push
sbb
mov
sbb
lods
adc
mov
test
xchg
cmps
push
mov
fs
out
arpl
loop
daa
jecxz
jns
xor
pushf
stos
sbb
sti
mov
int
stc
and
mov
aaa
es
scas
xchg
push
dec
test
cmps
mov
push
ret
cmp
jns
pop
and
mov
and
xchg
mul
retf
aad
jno
inc
imul
pusha
mov
mov
push
push
mov
(bad)
or
(bad)
fsubr
xchg
mov
push
jl
inc
xor
jp
push
outs
into
not
daa
stos
mov
mov
adc
sbb
or
mov
outs
jle
pop
cmps
mov
adc
mov
es
icebp
mov
jb
sub
xor
add
fstp
arpl
push
pop
test
fdiv
sbb
and
(bad)
popa
retf
mul
add
(bad)
mov
push
mov
cmps
aaa
adc
jb
xlat
out
xchg
mov
out
in
scas
push
xor
es
cmps
std
pop
loop
in
fbstp
repnz
mov
cs
push
(bad)
xchg
(bad)
mov
and
mov
mov
(bad)
sahf
(bad)
fld
fst
cmp
cmps
outs
jg
mov
push
int3
pop
ds
cmp
sar
xchg
pop
push
pop
adc
inc
ret
retf
emms
out
mov
jae
stos
mov
aas
(bad)
push
dec
dec
xchg
push
and
je
test
sub
leave
jl
ins
(bad)
in
test
mov
es
fdivr
mov
sbb
into
adc
pop
xchg
mov
neg
scas
jmp
retf
or
fs
inc
stos
xor
pop
mov
(bad)
mov
popa
lods
xor
sahf
adc
movs
inc
sub
(bad)
push
int
mov
adc
dec
cmp
cld
aas
mov
mov
xchg
shr
int
mov
mov
xchg
mov
sub
in
mov
movs
dec
jp
mov
clc
mov
cli
movs
dec
mov
inc
mov
xchg
mov
fistp
enter
or
pop
push
inc
jns
aas
inc
xchg
pop
test
and
jmp
mov
outs
push
test
add
out
dec
jne
stos
push
in
adc
pop
xor
int3
add
mov
ret
movs
adc
xchg
mov
pop
cmp
cmps
imul
movs
aaa
mov
cmp
mov
adc
aas
push
ins
xchg
repz
xlat
es
xchg
lea
mov
js
ret
inc
add
bound
sar
sub
sar
cs
jns
dec
or
add
push
or
xchg
push
mov
mov
pusha
sbb
xchg
test
ret
lds
pop
mov
(bad)
shr
(bad)
inc
std
cmp
dec
test
jmp
mov
push
mov
dec
cmp
mov
fisub
cmp
mov
fld
jmp
cmps
sub
sbb
xor
popf
cmp
push
mov
dec
cmp
(bad)
jge
push
jecxz
retf
scas
shl
(bad)
push
or
fldenv
shl
xchg
int
sub
out
or
popa
add
jnp
and
in
adc
pop
mov
mov
and
test
daa
mov
pop
lahf
jge
or
lahf
mov
mov
jmp
je
popa
mov
or
fadd
xchg
jecxz
xchg
mov
sbb
test
mov
push
mov
pop
clc
out
aas
sbb
pop
popa
hlt
adc
fs
test
push
scas
mov
daa
jge
neg
popf
push
aas
mov
call
and
scas
push
inc
jmp
xchg
mov
push
adc
sbb
mov
jnp
adc
add
xchg
mov
add
sub
ins
(bad)
mov
jne
mov
pop
pop
rol
ror
pop
cmp
scas
inc
xchg
add
rol
push
or
(bad)
scas
ds
ins
mov
hlt
jbe
cmps
dec
jo
inc
and
jno
pop
cs
xor
js
cmc
mov
(bad)
stos
lds
push
push
jne
popf
cs
psrad
xchg
cmps
jne
or
xor
adc
pop
scas
outs
(bad)
lods
ins
mov
clc
std
cli
jecxz
fwait
stos
(bad)
mov
lods
jno
sub
lods
ret
pop
daa
loopne
iret
shr
jle
scas
test
out
xchg
ror
in
xor
sub
pop
fninit
mov
sar
pusha
movs
es
rcr
cmp
sub
adc
ins
cmp
add
inc
mov
jnp
xor
mov
jmp
sar
sub
shr
add
inc
cmp
mov
mov
jmp
xor
pushf
ins
xchg
fidivr
dec
push
push
jmp
pop
dec
push
sbb
cmp
imul
rol
gs
add
inc
mov
add
or
popf
stos
add
dec
adc
nop
aad
jo
(bad)
adc
cmps
cmp
fist
jns
pop
dec
loopne
test
rol
into
push
and
dec
mov
fld
test
adc
cmp
les
jmp
adc
push
movs
cmp
scas
pop
mov
adc
adc
movs
pop
push
rol
stos
mov
sti
push
cmp
add
or
outs
out
sbb
mov
mov
popf
in
mov
fcom
pusha
cs
adc
mov
mov
adc
adc
cmps
fdivr
aas
outs
jb
xor
imul
lds
pop
mov
dec
scas
mov
mov
sbb
popa
sar
mov
cs
xor
push
cmps
ret
stos
xchg
les
inc
cwde
(bad)
cld
jne
ret
mov
jg
xchg
popa
lds
jo
outs
sbb
cli
mov
xor
rol
stos
push
das
jl
jg
inc
popa
movs
(bad)
jp
mov
lahf
test
jecxz
movs
lds
push
hlt
cmp
aas
xchg
mov
add
stos
fidiv
adc
je
cld
movs
lods
aaa
mov
scas
jns
outs
sub
push
fmul
sbb
daa
xor
std
cmps
es
outs
bound
out
mov
in
mov
sti
lahf
arpl
test
sub
dec
xor
xchg
xchg
add
pop
inc
mov
mov
inc
push
scas
mov
in
pop
pop
mov
js
xchg
push
sub
(bad)
into
inc
pusha
mov
mov
jp
lds
cmps
cmp
jbe
dec
mov
and
lahf
fbstp
int3
push
or
cmps
mov
mov
pop
sar
lds
mov
mov
push
into
mov
nop
fcomp
adc
fiadd
imul
pop
fwait
cmp
aaa
sub
pop
aaa
adc
xor
les
mov
cmc
lods
aam
mov
cmp
jno
shr
fs
push
xor
les
and
cmp
pop
ins
adc
stos
mov
mov
pop
dec
test
xor
sbb
jge
and
add
mov
push
or
retf
(bad)
pop
(bad)
and
cmp
nop
adc
in
arpl
jl
or
xor
imul
out
aas
pop
daa
stos
je
pop
pop
lods
push
adc
pop
stos
cli
mov
popa
sbb
iret
dec
inc
mov
mov
pusha
data16
fdivr
(bad)
mov
call
test
mov
out
mov
in
inc
jle
or
stos
aam
push
lds
imul
xchg
mov
repnz
outs
cmp
push
je
mov
mov
pop
or
outs
jae
adc
pusha
(bad)
jbe
and
lods
mov
adc
pop
hlt
or
sub
mov
pop
jg
pop
mov
adc
jns
popf
mov
inc
pop
xchg
jo
jno
rcl
in
cmps
sub
gs
push
out
call
and
jle
mov
sbb
push
fs
fidivr
mov
adc
into
adc
scas
bound
lds
sub
(bad)
fnstcw
add
loop
popfw
retf
popf
xor
idiv
ret
inc
movs
repnz
sub
test
xor
popf
jle
inc
adc
inc
pusha
cmps
adc
(bad)
and
ins
lods
nop
adc
call
hlt
mov
out
lds
jp
pop
cmp
mov
aad
fimul
aaa
sti
lods
sub
loope
jg
dec
pusha
sbb
ror
jge
add
or
icebp
stos
inc
push
mov
sbb
adc
lds
icebp
fist
popa
shl
lds
xchg
outs
out
xchg
fisubr
xchg
adc
(bad)
sub
xchg
mov
aam
push
scas
mov
fnstsw
in
inc
cmp
enter
dec
sub
mov
mov
adc
sbb
sub
idiv
mov
xor
nop
bt
lds
aas
jle
xor
lods
jle
scas
sti
mov
in
retf
pop
mov
dec
in
enter
ret
in
cmps
pop
(bad)
pusha
in
mov
mov
fistp
fild
mov
adc
bound
dec
sahf
add
mov
dec
pop
mov
aam
sbb
jmp
adc
pop
das
stos
inc
mov
fistp
adc
pop
add
fimul
push
jne
out
mov
(bad)
xor
dec
or
movs
arpl
and
scas
push
(bad)
sbb
lods
or
or
mov
mov
add
xchg
xor
jge
cmp
in
aam
pop
shld
lea
imul
popf
mov
rcl
sbb
js
and
jmp
push
sub
dec
and
aaa
test
fdiv
add
mov
and
aad
sbb
jmp
dec
push
push
cmp
into
mov
mov
sar
je
mov
jns
adc
lds
(bad)
cmp
mul
(bad)
and
cmp
js
xchg
clc
and
cmps
outs
jno
dec
sbb
scas
fs
js
push
mov
add
sbb
test
outs
and
sbb
adc
jbe
gs
mov
lds
inc
popf
push
pop
inc
xchg
or
mov
fidiv
add
dec
stc
mov
cdq
jne
int
mov
jl
into
test
adc
ins
(bad)
and
addr16
test
imul
sub
ror
push
adc
test
sti
adc
sbb
aam
movs
sub
add
(bad)
jo
js
hlt
mov
mov
push
add
repz
inc
ret
jg
test
jmp
mov
jmp
stos
icebp
ficom
jno
dec
(bad)
imul
(bad)
stos
stos
loope
arpl
and
mov
xchg
jne
adc
adc
(bad)
stc
mov
cmp
cmp
inc
add
lds
(bad)
push
cmps
xor
xor
repnz
jnp
dec
lds
cs
outs
pop
std
fcmovne
test
jl
pop
lds
ret
retf
or
nop
push
(bad)
stc
dec
xchg
fwait
mov
arpl
js
adc
mov
ss
cmp
jb
push
cmp
stos
ret
outs
sbb
(bad)
das
mov
xlat
xor
ret
jae
sbb
inc
imul
jb
sub
jne
loop
in
(bad)
gs
push
mov
inc
es
pop
fdivr
cmc
inc
in
dec
sbb
mov
sti
xchg
out
mov
mov
scas
cmp
xchg
adc
out
(bad)
xchg
fnstenv
(bad)
xchg
cmp
mov
fwait
les
stos
pop
mov
mov
hlt
movs
push
pop
fbstp
pop
cmps
sbb
jl
xchg
imul
ss
lahf
js
push
cmp
mov
adc
jne
sbb
dec
jg
clc
jge
xchg
ja
ins
add
pop
(bad)
enter
inc
add
push
inc
jns
ret
pop
xor
scas
stos
imul
ror
ds
sbb
xchg
cs
pop
pop
dec
pop
fcom
cmps
es
sbb
or
and
mov
scas
fmul
dec
sbb
scas
movs
inc
inc
iret
outs
sbb
(bad)
mov
inc
icebp
scas
mov
movs
movs
sar
inc
jnp
int3
loopne
into
and
leave
js
mov
popf
xchg
outs
fimul
mov
or
add
lea
es
push
mov
or
enter
dec
mov
mov
(bad)
pushf
cld
xchg
xchg
loop
lock
sub
jg
xor
rcr
pop
jge
cmp
fst
xlat
push
push
popf
movs
(bad)
push
mov
mov
xor
sub
outs
jae
cmp
adc
inc
sar
mov
sub
or
or
add
mov
cmp
stos
(bad)
push
push
aam
push
inc
cmps
aam
stos
js
pop
mov
test
cmp
std
inc
sub
in
adc
out
gs
out
cmp
jo
mov
js
jge
retf
call
jle
in
test
gs
outs
pop
jmp
ja
inc
jo
sub
shr
adc
cmc
inc
sbb
or
inc
fistp
xchg
add
mov
ja
xchg
fs
test
mov
pop
push
pop
(bad)
int
xchg
and
pop
jecxz
iret
and
sahf
and
inc
rcl
xor
das
rcr
mov
pop
add
rcl
jns
cwde
out
cmps
adc
xchg
xor
nop
pop
push
fmul
std
xor
push
jb
mov
mov
adc
push
add
fdivr
xor
push
stc
lods
add
cld
aas
movs
dec
xchg
dec
ja
or
xor
or
or
std
cmp
xor
int3
cld
mov
dec
mov
es
outs
mov
xchg
cmp
(bad)
adc
out
test
jnp
adc
test
(bad)
popf
ja
sub
popa
push
adc
mov
adc
fmul
cwde
add
and
and
cwde
cmp
inc
sub
pop
aas
repnz
xor
pusha
mov
fdivr
push
mov
cmp
std
mov
sahf
inc
pop
fdivr
in
inc
pop
add
sbb
push
mov
sbb
mov
adc
dec
(bad)
cmp
add
adc
xchg
and
sbb
jno
scas
mov
ins
cmc
dec
int
cmps
out
(bad)
cwde
popf
es
add
jne
leave
(bad)
or
mov
xchg
cmps
push
(bad)
call
adc
mov
sub
fwait
and
aas
je
into
jge
movs
jno
lds
add
clc
cmp
das
retf
cdq
mov
and
xchg
fsubr
xor
jbe
inc
or
imul
in
inc
cs
scas
mov
dec
nop
inc
loop
bound
ret
mul
shr
jnp
in
je
pop
loop
es
adc
mov
xchg
stc
lds
out
ret
lods
lea
iret
enter
pop
add
lds
sbb
sbb
outs
cdq
or
jne
ret
xchg
sbb
(bad)
mov
xchg
in
popa
ja
nop
cmps
and
int
push
mov
sbb
sub
jmp
add
sbb
jmp
test
mov
xor
xchg
adc
sub
mov
aas
sub
pushf
pushf
stos
outs
fild
jae
push
sbb
popf
xchg
lock
mov
(bad)
fnsave
xchg
push
sbb
fnstcw
cmc
push
(bad)
stos
fbld
add
sub
xchg
stos
sbb
je
adc
ss
inc
mov
clc
dec
jnp
loope
add
mov
fsub
adc
cmp
aas
cld
cmp
pop
and
jb
adc
cmp
aam
jge
cmps
and
call
popf
add
pop
pextrw
ror
pop
movd
xor
jge
push
cmps
xchg
adc
xlat
adc
xchg
inc
aam
fsub
clc
add
cmp
xchg
repz
sbb
mov
xor
jmp
je
aam
lods
xor
out
lods
adc
inc
cmps
and
call
data16
sub
scas
idiv
(bad)
data16
cmps
cs
pop
fimul
and
lock
je
shl
and
leave
shl
lods
shl
test
and
(bad)
push
inc
jmp
pop
in
cmc
gs
mov
pop
dec
inc
or
jne
scas
scas
lock
inc
dec
daa
xor
sahf
(bad)
test
in
jbe
and
(bad)
(bad)
cwde
test
hlt
rol
or
lea
mov
xor
inc
aaa
enter
xor
ss
fiadd
gs
push
daa
enter
pop
push
sub
fsubr
sub
ins
fldcw
ss
mov
cmp
imul
jae
adc
mov
jb
cmp
cmp
(bad)
cmp
ja
fs
aaa
mov
pusha
inc
loopne
mov
jp
and
cmp
movs
fucomip
sbb
mov
pop
sub
es
outs
arpl
cs
pop
xor
mov
cmp
adc
add
cmps
(bad)
push
jmp
add
ret
sub
jle
gs
loope
inc
out
cmp
inc
and
scas
add
cmp
pop
pushf
ror
shl
out
call
shr
es
ins
(bad)
js
pop
mov
arpl
(bad)
std
addr16
jecxz
rol
scas
mov
sahf
daa
out
push
adc
jnp
repnz
popa
ror
ds
cwde
stc
ins
into
sti
mov
inc
scas
out
add
mov
add
pop
jge
cmp
cld
sbb
(bad)
sub
std
push
sub
popf
jmp
ss
and
adc
sub
int
adc
clc
jecxz
jnp
pop
call
xor
(bad)
out
xlat
(bad)
mov
cmp
push
cmps
and
and
fiadd
inc
hlt
je
mov
xor
mov
sbb
and
or
rol
dec
dec
inc
push
mov
aam
arpl
jns
adc
cmps
cmp
repz
pop
(bad)
mov
arpl
in
dec
sub
retf
sub
in
push
es
test
ins
sub
cdq
gs
shr
ret
adc
adc
fnstcw
aad
push
imul
into
inc
sub
dec
or
jle
(bad)
mov
mov
sbb
xor
sahf
and
inc
adc
mov
cmp
pop
(bad)
ja
nop
xlat
iret
mov
xchg
jl
(bad)
push
jae
cmp
lods
mov
icebp
cmp
mov
mov
leave
in
push
lea
imul
inc
dec
push
lods
and
cmp
scas
ficomp
lock
out
leave
xor
pusha
cdq
out
push
imul
in
push
and
loope
popf
lods
mov
inc
loope
xlat
int
xor
or
add
fs
jg
or
adc
ret
(bad)
xchg
lds
scas
pop
imul
popf
xchg
push
jne
dec
and
adc
adc
fldcw
and
push
je
mov
(bad)
mov
jnp
or
lods
icebp
sub
or
aas
dec
cmps
jecxz
adc
(bad)
loopne
jb
jge
std
mov
sub
add
mov
cmp
in
xchg
pop
jno
das
inc
popa
out
cmps
fild
jle
fadd
pop
stos
inc
lea
adc
pop
xchg
mov
mov
adc
adc
arpl
shr
add
mov
cmps
mov
mov
call
out
mov
cld
xchg
mov
pop
ins
mov
mov
(bad)
outs
sbb
dec
jbe
test
pop
mov
retf
int3
adc
xchg
pop
retf
fucomi
lods
jp
sub
jno
mov
jae
paddw
test
repz
mov
cwde
add
mov
jne
xchg
adc
inc
mov
je
movs
dec
call
mov
addr16
inc
mov
or
lock
pop
xchg
(bad)
or
dec
fldenv
mov
(bad)
xor
and
add
fcom
pop
fcom
sub
dec
lods
adc
pop
dec
lds
cmps
cs
mov
lods
repz
adc
pop
mov
inc
mov
sbb
inc
push
dec
mov
add
mov
lds
scas
cs
sahf
pop
mov
mov
fwait
jns
pop
sub
or
mov
scas
adc
test
dec
and
jg
inc
stos
mov
lock
cmp
mov
push
push
cs
ret
jne
fsubr
shr
aad
push
push
lea
xor
xchg
call
push
jbe
mov
sti
cmp
and
jne
in
lahf
shl
cmp
dec
inc
ror
shl
rcl
xor
clc
adc
cmp
fsub
push
add
jg
sub
xlat
cmp
mov
adc
js
popa
sub
scas
idiv
pop
pushf
pop
(bad)
pop
sti
pop
sbb
hlt
stc
xor
pop
xor
adc
lods
inc
inc
fcmovbe
call
sub
jmp
pusha
popf
fndisi(8087
jnp
inc
cmps
test
cmp
pusha
push
cmps
stos
sti
scas
push
lods
les
stc
fistp
scas
adc
cmc
mov
push
(bad)
imul
jno
sbb
cdq
pop
daa
les
cmp
scas
adc
movs
inc
rcr
sub
adc
mov
int
loopne
outs
jae
sub
mov
out
fistp
pop
jns
arpl
mov
and
fnstcw
sahf
(bad)
nop
ja
jno
sbb
cmp
movs
int3
es
js
out
gs
fs
leave
in
adc
push
in
cmp
jmp
daa
cmp
sub
dec
add
or
mov
mov
movs
add
imul
mov
jb
imul
mov
jl
leave
test
sub
fwait
inc
sbb
push
mov
nop
enter
jnp
pusha
sbb
mov
daa
aas
mov
popa
jge
aas
mov
daa
inc
or
aaa
jno
es
test
icebp
test
push
adc
pusha
push
lods
sub
adc
ror
adc
cmp
pop
les
cs
mov
aam
repnz
mov
ins
icebp
jle
scas
rcl
sub
adc
shl
or
pop
push
sbb
or
xchg
jno
xchg
inc
repnz
jge
xor
sbb
lds
jno
in
pop
inc
cli
pop
fild
pop
stc
icebp
mov
lods
or
cmp
dec
add
push
mov
or
fdiv
daa
jecxz
aaa
cmp
jne
and
xchg
out
xor
mov
dec
xor
scas
cmps
inc
cmps
mov
jmp
and
ja
jns
cmp
mov
push
pop
test
and
mov
push
sub
out
stos
fstp
inc
(bad)
sbb
push
into
and
dec
mov
pop
cli
pop
jbe
or
lods
adc
add
loopne
mov
sahf
stos
mov
push
push
jb
mov
inc
jle
fidivr
dec
cmp
sbb
es
push
fs
inc
mov
lds
push
(bad)
jg
xor
scas
xor
adc
imul
xchg
cmc
xchg
mov
leave
cs
inc
dec
retf
push
mov
stos
mov
rol
and
aas
fcmovne
cs
mov
hlt
sub
mov
mov
pop
fidiv
test
and
loop
inc
arpl
and
sbb
jae
cmps
cmp
cmps
das
cs
push
lods
xchg
popf
fmul
in
jb
mov
adc
fld
aaa
call
fdivr
push
ja
jle
daa
sub
jae
sar
adc
ret
int
adc
daa
inc
jle
pop
out
nop
dec
xchg
mov
imul
mov
lds
test
cwde
idiv
xor
sbb
data16
sar
sbb
cs
sub
clc
cmp
mov
add
scas
dec
cmp
sti
cmp
sub
fnstcw
ja
pop
add
sub
adc
dec
xchg
inc
xchg
cmp
shl
dec
xchg
add
call
jle
add
mov
lods
inc
test
ficomp
pop
sbb
jmp
sar
jne
call
hlt
mov
fs
out
popa
imul
(bad)
aas
adc
xor
cmps
add
mov
scas
push
cmp
and
lahf
(bad)
jl
std
adc
ror
dec
adc
jle
mov
lds
pop
cmc
sub
mov
shl
mov
movs
cmp
jmp
xchg
jmp
shl
inc
ficom
cmp
pop
inc
add
xchg
imul
pop
pop
ds
dec
cmps
sbb
mov
call
adc
cld
sub
movs
ret
inc
mov
mov
inc
enter
loopne
cmps
lds
mov
mov
ja
lock
jmp
adc
das
mov
adc
jge
sub
test
jl
add
xchg
jno
jmp
dec
aas
sahf
push
mov
inc
leave
adc
add
sbb
retf
pop
stos
cs
add
neg
jns
int
xchg
ja
(bad)
and
outs
(bad)
and
outs
aad
retf
fist
and
out
sar
scas
es
jp
pop
xor
loopne
push
clc
ja
sub
out
dec
shl
jmp
sbb
stos
inc
fwait
sti
sbb
sub
pop
jmp
mov
inc
jge
push
jmp
dec
loope
ja
(bad)
cdq
sbb
shl
in
inc
push
inc
es
sub
(bad)
arpl
mov
mov
das
sub
sbb
sbb
jnp
and
push
cwde
add
mov
inc
sbb
aas
imul
cmps
jo
lea
and
dec
fs
sar
mov
pop
jge
rcl
jnp
retf
jp
and
push
retf
test
int3
dec
cmp
pop
out
pop
jle
outs
daa
mov
stos
inc
xor
enter
pop
dec
jno
mov
sbb
inc
pop
push
in
inc
and
jl
sbb
pop
and
xchg
xchg
or
movs
call
cld
adc
add
lods
scas
jne
push
lahf
cmp
and
sbb
mov
sub
or
sub
stos
push
or
cmps
(bad)
rol
loopne
(bad)
mov
arpl
add
and
push
jbe
add
push
add
mov
mov
jae
vmovss
fild
ret
test
push
repnz
sbb
jl
outs
or
add
cs
mov
xor
cmp
leave
popf
and
imul
add
cmp
dec
mov
aas
pop
mov
cmp
pop
cmp
lods
fst
test
push
mov
sahf
mov
inc
scas
jg
(bad)
test
fwait
repz
and
mov
xor
jg
cmp
out
lds
dec
dec
jl
add
pop
or
jo
sub
inc
outs
fisubr
fmul
imul
(bad)
push
lds
loopne
push
xchg
adc
xor
push
xlat
scas
rcr
lods
inc
pusha
rcr
das
push
(bad)
ja
push
xchg
out
add
test
mov
adc
adc
xor
sbb
popa
(bad)
xlat
fsub
shr
lods
jns
ss
push
jo
mov
push
fld
sub
rcl
lea
xlat
cmp
int
push
sbb
inc
inc
fsubr
les
je
pop
lods
fs
mov
dec
sbb
scas
add
retf
je
inc
push
jecxz
jge
sub
jnp
in
(bad)
repnz
imul
xchg
push
leave
test
(bad)
mov
test
and
xor
cmc
jno
movs
je
shl
mov
and
xchg
mov
xor
cmp
stos
(bad)
jmp
inc
lea
jp
je
lds
add
idiv
xchg
inc
xchg
cld
call
icebp
int3
retf
sar
add
out
pusha
adc
mov
movs
fld
adc
ins
pop
push
cld
adc
fsub
sub
push
push
mov
pop
pop
fcom
mov
or
dec
xchg
mov
dec
or
push
dec
test
adc
pop
es
jne
jle
cmp
jne
pusha
test
jb
sub
mov
cmp
jno
test
add
in
push
cld
cdq
clc
dec
sub
push
cs
jo
add
js
mov
or
mov
jp
adc
in
rcl
jl
and
aad
inc
mov
retf
fisubr
(bad)
mov
jae
pop
mov
(bad)
push
(bad)
shl
mov
adc
shr
ja
scas
popf
ins
sbb
sbb
enter
mov
xchg
inc
into
push
pop
jns
cmp
dec
cmp
push
scas
cdq
pop
inc
xchg
and
jp
mov
std
add
js
dec
pop
addr16
sub
int
cmc
push
mov
idiv
xor
fs
inc
xor
cmc
add
pop
into
inc
adc
pushf
sub
call
stos
push
mov
jle
addr16
nop
cwde
adc
mov
js
fild
inc
jns
dec
add
retf
xchg
jno
daa
inc
enter
daa
jmp
das
fiadd
or
xlat
fsub
mov
mov
adc
push
cmps
xor
das
sub
mov
imul
or
aam
jmp
pop
mov
stos
cmps
mov
iret
ret
repz
(bad)
daa
push
adc
adc
imul
mov
outs
addr16
(bad)
mov
js
test
push
aas
sbb
xchg
in
adc
or
add
cmps
vpsrld
push
cli
xor
(bad)
daa
add
xchg
adc
jmp
lds
repnz
test
dec
or
mov
enter
daa
push
jno
movs
xchg
mov
cmps
push
pop
icebp
xchg
clc
int
loope
mov
xor
arpl
pop
in
and
arpl
mov
mov
(bad)
ins
mov
outs
add
mov
mov
cmps
mov
inc
cmps
xlat
mov
adc
adc
cmc
fadd
inc
int
(bad)
retf
xchg
mov
mov
shr
mov
jp
daa
xor
sahf
lds
fsubr
inc
cmps
aaa
cmp
and
mov
shr
jmp
popf
into
inc
mov
mov
retf
pusha
xor
outs
fimul
ficomp
fsubp
mov
xor
mov
stc
mov
fst
mov
mov
dec
rol
mov
rcl
mul
xchg
dec
pop
push
test
sub
sbb
mov
jp
js
test
cmp
inc
imul
xor
aaa
xchg
lods
ds
test
sbb
sbb
stos
cmp
ss
pusha
inc
fld
pusha
mov
lods
inc
ins
sub
push
cmps
shl
sbb
sbb
test
xlat
inc
lea
push
imul
dec
aam
(bad)
hlt
into
push
imul
or
movs
pop
outs
xor
or
sahf
or
mov
movs
mov
movs
cdq
and
stos
jnp
sub
adc
retf
mov
jnp
push
out
jmp
xor
sbb
cwde
xlat
test
jmp
fstp
xchg
pop
xor
sbb
adc
push
add
not
arpl
jbe
ds
ret
mov
lods
stos
lahf
fdivr
jne
int3
sbb
adc
mov
vmovq
ficomp
xor
mov
jae
in
in
dec
fistp
add
mov
imul
dec
pop
dec
or
popf
aaa
xor
(bad)
outs
lds
lahf
retf
adc
mov
popa
(bad)
jbe
into
and
xchg
sahf
(bad)
hlt
fld
sub
adc
shr
dec
aas
mov
imul
cmp
lods
jp
icebp
stos
jnp
rol
pop
popa
pusha
ins
es
cmp
mov
inc
cld
and
pop
pop
push
adc
sub
and
push
mov
cmp
xor
add
mov
scas
xor
data16
retf
add
or
cmp
mov
daa
call
adc
adc
popa
inc
das
mov
les
inc
pop
jne
movs
pop
shl
icebp
imul
les
(bad)
mov
outs
cmp
cli
mov
(bad)
dec
stos
outs
xor
jno
call
out
xchg
xchg
mov
cmc
xchg
mov
jb
(bad)
popa
call
imul
mov
retf
cs
adc
inc
mov
mov
jne
(bad)
idiv
and
js
cmp
(bad)
xlat
(bad)
push
cmp
and
add
retf
xor
sub
jl
into
rol
jecxz
js
ja
sub
aas
ins
fs
sub
ins
aad
movs
jae
pop
js
movs
sbb
imul
std
mov
xlat
mov
es
and
pop
arpl
and
mov
xor
mov
adc
fsubr
mov
sbb
jmp
in
mov
jge
lods
out
fdivr
mov
jo
ret
xchg
popf
pop
cs
add
arpl
movs
(bad)
pop
sub
cmps
fild
or
push
sbb
jle
cmp
sub
lds
lock
shr
aam
cs
pop
sub
dec
xchg
jno
call
leave
(bad)
lods
es
out
scas
mov
addr16
inc
cmps
out
retf
sub
mov
or
cmp
movs
xchg
retf
cmp
test
mov
and
push
mov
or
mov
jns
(bad)
pop
nop
cmp
imul
ins
cmps
lock
(bad)
mov
or
mov
jbe
stos
sbb
add
js
sbb
les
add
sbb
xchg
push
pusha
mov
mov
adc
sub
inc
mov
jg
imul
jae
js
mov
(bad)
inc
push
sub
inc
mov
mov
les
fsub
fidiv
sbb
cmps
jl
setle
cld
int
test
retf
adc
sub
mov
mov
imul
jb
xchg
sub
sbb
jb
ins
popa
(bad)
dec
call
aad
mov
imul
es
mov
cld
inc
out
aas
daa
clc
jne
mov
dec
xor
and
push
dec
mov
pusha
inc
mov
loope
into
jge
call
pop
sub
mov
cmps
pop
es
rol
fild
ds
sbb
jg
xlat
adc
or
push
jg
mov
xchg
cld
fmul
sub
test
mov
sti
adc
fdivr
dec
sub
or
out
mov
aad
mov
xlat
xchg
mov
div
pop
cmps
and
fdivr
cmp
leave
sub
cmp
js
add
hlt
and
mov
sbb
add
cmp
out
dec
inc
mov
jg
dec
mov
and
out
jo
cdq
and
(bad)
jno
call
add
mov
cmp
scas
mov
jmp
out
mov
fwait
or
mov
add
jo
scas
sub
and
stos
mov
add
mov
adc
inc
xor
sahf
jmp
dec
retf
push
fistp
xor
inc
and
pop
push
sbb
mov
imul
sbb
pushf
mov
div
jo
sbb
scas
xchg
inc
or
xchg
ds
leave
pop
push
retf
jne
outs
movs
ds
stc
ficom
es
xor
sub
push
mov
mov
data16
cmp
and
push
int
test
adc
jl
xor
xor
or
scas
fdivr
sub
aad
cmp
mov
das
jl
test
icebp
or
xchg
add
outs
fnop
int
in
jne
test
fdivr
outs
push
fsub
ror
push
loop
aaa
mov
fwait
mov
dec
mov
adc
sbb
es
bound
test
jmp
data16
pop
cli
sbb
pop
xor
les
or
fstp
jno
in
inc
and
cmp
out
sbb
es
mov
(bad)
hlt
jno
fs
stos
fld
pushf
out
push
stos
stos
lds
shr
cmps
scas
ror
daa
nop
ror
scas
sahf
dec
shr
shr
push
push
cmps
test
fiadd
ret
aad
ret
mov
in
sbb
jnp
jo
mov
xor
in
dec
(bad)
push
mov
mov
out
adc
inc
data16
rcl
fdiv
mov
popf
pop
imul
(bad)
mov
stos
stos
jg
xor
loope
add
add
mov
inc
jnp
jmp
ja
xchg
test
mov
add
scas
adc
out
test
scas
mov
xchg
inc
sbb
mul
stos
(bad)
repnz
fcmovnb
cwde
bound
nop
movs
mov
xchg
dec
mov
xor
mov
scas
adc
xor
push
push
mov
stos
or
sub
mov
dec
ret
pop
jge
(bad)
das
cmc
mov
lods
lods
ja
or
pop
call
sub
inc
or
jecxz
cmp
int
inc
fidiv
sbb
sbb
lahf
call
mov
retf
mov
popf
test
cmc
push
stos
daa
fs
in
cmp
lds
xchg
aaa
int3
cmp
(bad)
sbb
movs
outs
daa
imul
test
fist
jle
lea
aad
movs
stos
lds
add
jb
(bad)
data16
adc
inc
jnp
adc
and
mov
sbb
sub
cs
pop
add
int
or
mov
jns
xchg
rol
mov
mov
xchg
shl
enter
sbb
mov
es
jbe
jne
adc
movs
adc
or
mov
aas
mov
in
xor
js
mov
jp
pop
(bad)
(bad)
adc
and
pop
enter
inc
pop
test
sub
iret
(bad)
xchg
mov
mov
jne
data16
cld
retf
addr16
mov
or
adc
aaa
hlt
xchg
into
add
push
xor
lds
and
lds
scas
jmp
inc
(bad)
je
mov
pop
ret
enter
dec
rcl
lods
ds
(bad)
inc
test
int
sbb
cmp
mov
inc
js
xor
call
retf
fbld
jmp
scas
jp
stos
bound
pop
mov
scas
je
xchg
(bad)
es
ss
ins
push
add
push
lds
test
sbb
mov
(bad)
test
pusha
pop
jb
adc
push
sbb
xchg
mov
(bad)
psrlw
dec
retf
pop
retf
xor
xchg
repnz
fwait
scas
or
jo
sub
cld
shr
add
sti
pop
loop
in
push
pop
mov
outs
jp
mov
jbe
xor
push
imul
inc
jle
rcl
movs
push
leave
mov
lea
adc
fnstsw
cmovo
(bad)
jns
idiv
jle
xor
xchg
repnz
jmp
mov
adc
aas
xor
push
xchg
mov
inc
or
sbb
inc
dec
inc
scas
xor
shl
cmc
pop
xchg
fsub
mov
and
out
ins
inc
jae
or
or
gs
mov
xlat
fdivr
jg
test
mov
jne
push
inc
inc
pop
sbb
(bad)
ss
sbb
scas
popa
mov
push
inc
and
rcl
cmp
push
inc
out
mov
into
push
mov
rcl
pop
cmp
jg
add
outs
je
and
xchg
and
js
adc
pop
cmp
jmp
dec
jns
and
or
push
xchg
jo
jb
jmp
lds
in
test
test
mov
mov
mov
nop
outs
fimul
loop
mov
pop
in
push
add
mov
pop
xor
bsr
retf
jns
push
imul
cmc
inc
int3
xor
shr
cmps
ret
loopne
stos
inc
in
adc
lds
push
xchg
inc
mov
inc
in
cmp
jno
retf
ja
lock
lods
cmps
inc
out
mov
call
cs
lds
mov
cmp
xor
xor
dec
mov
cmp
jle
xchg
daa
jb
sub
xchg
(bad)
xchg
movd
sub
inc
mov
add
fadd
adc
or
xchg
or
push
xchg
shl
inc
xor
jns
adc
add
(bad)
jno
dec
sub
stos
add
cmp
std
or
stc
mov
dec
xchg
popa
sbb
sub
push
jmp
jecxz
data16
sub
(bad)
adc
loopne
adc
jge
ins
push
xor
cli
or
(bad)
retf
mov
mov
sub
add
push
daa
push
push
dec
paddsw
aad
xor
dec
xchg
sub
nop
fcomi
stos
jae
mov
ja
push
cmp
pop
je
lahf
fld
adc
jl
call
mov
jg
jo
test
rcr
and
outs
lds
mov
xchg
pop
scas
gs
loope
mov
adc
aad
shr
adc
iret
mov
mov
adc
dec
jnp
int3
push
rcr
adc
and
sbb
aam
pop
jp
rol
rcl
cmps
dec
loop
push
stos
sbb
sbb
jle
jb
popf
lock
or
es
add
jp
lods
pop
mov
mov
inc
or
jne
push
stos
loopne
jb
retf
inc
fild
push
fiadd
adc
nop
(bad)
repz
fisub
adc
rcl
pushf
add
push
outs
(bad)
(bad)
cmp
pop
fst
ins
push
ret
add
jmp
fmulp
push
in
mov
lock
popa
mov
movs
cmp
lods
mov
and
movs
cmp
ds
jae
push
or
sub
(bad)
cmp
jmp
sbb
dec
dec
sbb
add
mov
push
into
cmp
fwait
loope
call
ss
mov
fistp
movs
mov
addr16
adc
xor
and
xchg
cmps
pushf
and
inc
sbb
scas
nop
fdivr
aas
adc
enter
in
fcom
mov
mov
mov
cmp
ror
test
(bad)
ds
mov
adc
test
mov
div
addr16
daa
js
scas
push
inc
(bad)
jg
outs
retf
cdq
inc
xchg
and
mov
mov
iret
inc
std
adc
mov
outs
mov
out
xchg
in
adc
pushf
nop
xchg
jns
cmc
leave
mov
sbb
loop
xor
shl
cmps
add
fisub
arpl
daa
loop
pop
mov
stos
stc
gs
fldcw
test
aad
in
inc
pop
cdq
pusha
enter
jp
outs
popf
push
(bad)
(bad)
retf
lods
cld
cmp
out
int
loop
daa
scas
stc
data16
cdq
dec
lds
clc
stos
lods
(bad)
sbb
es
sti
xchg
cmp
test
popf
lods
xor
js
push
shl
aas
pop
mov
cwde
xchg
and
sbb
(bad)
enter
ds
xor
xchg
mov
xor
rol
je
xchg
test
jo
xchg
sub
pop
scas
and
std
mov
xor
inc
pop
scas
sbb
or
ret
cmp
mov
xor
xor
movs
dec
jns
mov
mov
aaa
sbb
popa
push
inc
inc
sub
adc
iret
loopne
aam
movs
loope
mov
dec
sti
sbb
div
dec
cs
xor
jbe
shl
xchg
and
adc
jecxz
fs
in
dec
outs
mov
outs
aam
add
daa
push
jmp
call
bound
xchg
out
fwait
push
add
imul
cmp
mov
test
test
lods
xlat
push
cld
xchg
lock
int3
push
mov
inc
lock
clc
aam
fld
dec
repz
jnp
mov
sbb
push
scas
jge
sub
aam
jnp
mov
or
mov
aas
ret
test
lahf
and
or
(bad)
push
push
fcmovb
pop
mov
sbb
sub
mov
mov
mov
lods
push
rol
xchg
cli
sti
sub
adc
sbb
das
xchg
cmp
mov
in
retf
cmps
and
notrack
loopne
sbb
adc
es
push
scas
and
inc
cmp
repz
and
repnz
dec
ret
xor
movs
and
loopne
inc
xor
out
jae
mov
cwde
adc
jmp
mov
inc
pop
pop
pop
push
out
pop
and
or
cdq
repnz
mov
shl
in
shl
mov
stos
xor
pop
repz
popa
test
std
add
add
loope
movs
jne
push
imul
jo
aad
xor
cmp
xchg
adc
and
fldcw
in
(bad)
jns
push
cmps
mov
mov
sub
mov
(bad)
aaa
push
js
and
mov
repnz
or
mov
fild
sbb
(bad)
cli
int3
cs
shr
cmc
les
lds
arpl
sub
xchg
aam
cmp
cmp
lea
repz
out
inc
xchg
aad
movs
ja
repz
mov
out
das
sti
mov
ror
mov
ds
mov
(bad)
push
int
scas
lds
inc
dec
sub
mov
inc
dec
inc
push
(bad)
cmp
sar
and
sub
std
sub
fxtract
mov
lds
repz
add
dec
mov
jb
push
xor
push
jno
and
test
repnz
push
cmc
loope
inc
movs
pop
adc
inc
xchg
xchg
mov
xchg
jns
lds
ins
sar
jmp
retf
mov
sbb
adc
imul
and
cmps
mov
in
pop
jae
movs
sbb
jp
jno
inc
shr
(bad)
xor
push
lds
cmp
retf
nop
mov
call
daa
pop
bound
scas
xchg
push
mov
test
mov
in
bound
sub
in
fadd
mov
and
inc
push
xlat
es
test
sbb
jnp
sub
cwde
(bad)
cmp
pop
xor
sti
mov
mov
sub
cwde
inc
cmc
iret
mov
and
jl
mov
mov
lds
and
dec
fldcw
lods
adc
adc
and
mov
(bad)
mov
je
dec
and
or
sbb
jb
push
or
(bad)
xchg
out
scas
das
jcxz
sbb
xchg
lds
mov
xchg
mov
mov
lds
in
outs
js
lds
js
in
(bad)
sbb
arpl
inc
fcom
mov
pushf
jo
xchg
inc
fwait
push
sub
push
fistp
cmp
add
sbb
push
or
adc
ret
jp
jl
sbb
(bad)
dec
pop
push
pop
inc
mov
(bad)
mov
ret
in
jge
in
int
in
std
enter
retf
push
je
out
jno
test
mov
sbb
jne
scas
enter
dec
out
sub
sub
xor
test
addr16
mov
pop
(bad)
mov
or
jp
pop
and
std
jmp
aam
xor
mov
stos
aaa
hlt
pop
mov
push
movs
into
inc
or
gs
lds
pop
pop
cli
or
mov
adc
xlat
adc
out
dec
push
stos
jb
loope
cmp
cmps
test
xlat
addr16
mul
xchg
or
sub
addr16
inc
dec
sub
int3
push
imul
call
ss
sahf
cld
unpcklps
adc
rcl
dec
sbb
out
adc
ins
je
retf
test
add
pop
inc
mov
jns
pusha
jge
dec
push
repnz
shl
fcomp
retf
mov
sub
fiadd
dec
(bad)
cdq
mov
fistp
pop
pop
test
aad
sbb
int3
jo
shl
aas
scas
and
les
mov
jno
lods
or
push
cs
repz
push
xchg
fstp
fstp
cmp
push
push
lea
jnp
movs
inc
lods
into
movs
inc
xchg
movs
mov
popf
mov
sahf
jns
mov
les
mov
jne
leave
cmp
out
push
pop
int
adc
int3
iret
popa
jo
xchg
imul
mov
or
fs
and
xchg
sbb
out
addr16
and
test
dec
repnz
inc
fisttp
sub
mov
push
nop
adc
jo
loop
xchg
das
les
pop
mov
(bad)
xor
pop
shl
outs
or
lods
inc
jecxz
dec
xchg
jnp
inc
dec
jmp
sti
sub
(bad)
and
pop
arpl
scas
or
fs
sub
mov
cmp
xchg
adc
jno
fcmovne
add
push
into
and
add
test
adc
cs
sbb
lds
fild
scas
aad
add
out
cmp
call
or
test
and
(bad)
ss
jp
jmp
jno
jmp
gs
pop
mov
loope
sub
and
cmc
jl
lock
push
imul
jecxz
js
pop
mov
pop
fsubr
test
es
call
mov
movs
outs
fild
mov
jbe
dec
pop
fwait
(bad)
pushf
mov
inc
cmp
retf
hlt
cli
dec
cmps
lea
es
popf
cld
adc
mov
lea
enter
mov
daa
mov
fwait
pop
push
mov
iret
fcomp
dec
sub
ins
stos
adc
adc
fsubr
outs
outs
push
not
cmps
push
(bad)
cmp
add
pop
adc
test
inc
add
mov
mov
xor
mov
es
inc
popa
daa
(bad)
movs
or
cmc
mov
mov
ja
mov
je
cmp
cmp
mov
and
inc
add
data16
cmps
popf
out
aam
push
lds
mov
aas
imul
movs
movs
adc
jno
dec
lds
inc
sbb
into
jno
fwait
shl
(bad)
icebp
and
jne
mov
(bad)
and
je
int3
adc
add
cmc
int
mov
cmp
fistp
jb
mov
imul
stos
mov
pop
add
dec
mov
aas
(bad)
xor
test
pop
pop
in
adc
rol
sub
in
(bad)
dec
mov
pop
and
push
push
inc
xor
jb
std
scas
mov
push
xchg
scas
add
ss
xor
adc
retf
cli
je
cmps
jl
fcom
add
dec
sbb
scas
jle
pop
fidivr
loope
pop
aad
jns
xchg
cmps
cli
out
std
sar
mov
out
repnz
gs
or
invlpg
daa
je
push
(bad)
sub
mov
jnp
push
mov
scas
xchg
ins
fst
movs
rcr
out
leave
mov
or
in
cmps
rcl
out
pop
sbb
push
pop
lahf
mov
adc
idiv
cmc
sub
out
in
dec
inc
ror
inc
dec
inc
or
lahf
gs
sub
dec
ins
sbb
fs
fistp
fsub
clc
pop
push
mov
dec
imul
cmps
mov
daa
dec
cmp
rol
not
sbb
xchg
(bad)
push
test
inc
popa
mov
pop
cmp
pop
movs
jbe
scas
les
(bad)
pop
fstp
cmp
jbe
xchg
iret
div
push
jae
adc
ret
addr16
fidivr
fdivr
jle
cmp
add
push
ret
aad
stos
sub
xchg
shr
inc
cdq
rol
pusha
popf
ds
or
cmc
mov
adc
and
clc
aas
cli
mov
in
cmps
ds
icebp
mov
loope
mov
fnstenv
adc
test
jmp
lds
jns
cmp
das
sub
cmps
fmul
cmp
(bad)
mov
mov
cmp
push
and
sbb
nop
cmps
xor
pop
and
dec
cli
push
push
in
popf
ds
xchg
and
cmp
imul
daa
xchg
jo
cmp
inc
jae
push
cmc
cmp
pop
ja
mov
cmps
pslld
daa
loopne
and
(bad)
fcomp
mov
mov
clc
scas
pop
sub
inc
test
adc
adc
arpl
clc
and
mov
xchg
and
xchg
and
mov
ffree
and
inc
add
pop
mov
mov
daa
pop
(bad)
mov
cmps
lods
mov
fcomp
lds
push
and
in
es
cmp
push
cmps
in
in
jb
ret
(bad)
xchg
jb
mov
adc
mov
or
lds
gs
inc
cmp
inc
and
xchg
call
xchg
stc
shr
push
aaa
jmp
jl
fild
jmp
push
push
das
cmp
ins
out
push
icebp
xor
aad
sbb
arpl
pop
dec
cmp
retf
or
not
cwde
xor
pop
mov
in
idiv
jge
jmp
mov
int
xchg
retf
dec
ja
mov
jmp
ja
imul
mov
jae
mov
jnp
xlat
mov
jg
pop
arpl
call
jns
leave
outs
or
sahf
mov
mov
rcr
inc
stc
sti
fdivr
stc
(bad)
adc
sbb
push
cmp
cmp
cmc
fwait
push
popf
add
pop
lds
lock
cmp
adc
jb
(bad)
xor
xor
loop
or
xor
fcomi
cmp
mov
ds
inc
mov
and
xchg
mov
(bad)
aaa
loopne
fldcw
popf
iret
mov
jg
mov
push
inc
push
push
jb
push
jo
jmp
jmp
es
mov
cmp
pusha
(bad)
leave
imul
pop
sbb
cmp
xchg
xor
in
in
enter
js
adc
leave
jae
jecxz
cmps
sbb
inc
cmp
dec
add
lods
inc
inc
inc
mov
push
sahf
or
cmp
jns
js
inc
or
pusha
fstp
cs
pop
mov
outs
ins
jmp
cmp
mov
inc
jle
mov
jge
adc
and
(bad)
dec
dec
fwait
lds
shl
inc
push
fs
(bad)
sbb
pop
retf
leave
cmps
pop
(bad)
icebp
popf
add
add
cmps
fdivr
lods
inc
or
pop
push
pusha
pop
dec
xchg
not
jmp
fsub
sbb
mov
faddp
sub
(bad)
mov
jle
and
xor
jmp
lds
lahf
stos
test
ins
pop
push
lods
shufps
push
xor
lods
daa
jg
out
xor
jnp
orps
push
adc
cmp
or
(bad)
pop
push
mov
pushf
cmp
and
push
iret
or
pop
xor
es
ret
aam
ret
rol
std
into
cwde
clc
fwait
dec
dec
jno
pop
sbb
stos
fdivr
mov
repnz
cli
sbb
xchg
push
je
(bad)
lods
clc
pop
inc
cmp
cmp
es
lods
cmp
mov
or
dec
jge
in
sub
ins
movs
lock
cld
out
mov
movs
pop
push
pop
js
jae
push
jmp
sub
lahf
adc
push
and
adc
imul
pop
mov
cmp
add
and
pop
dec
push
jno
cs
js
sub
ins
js
aaa
xor
mov
or
in
fst
add
xchg
sbb
sbb
popf
and
dec
lods
sub
sub
stc
add
pop
mov
ja
mov
stc
pop
or
push
sbb
mov
jns
scas
(bad)
lods
mov
(bad)
push
ja
mov
inc
daa
or
mov
mov
mov
mov
stos
retf
test
imul
push
xchg
movs
lds
mov
mov
mov
das
ficomp
stos
sub
sub
movs
mov
cmc
xor
fisttp
stos
popa
lds
add
leave
mov
pop
and
adc
nop
pop
xor
(bad)
out
pop
movs
aad
xor
xchg
sub
cmp
pop
out
mov
mov
jge
mov
and
jge
cld
fsubrp
fwait
dec
pop
les
das
cmp
mov
jp
mov
inc
xor
(bad)
nop
mov
jecxz
mov
out
lds
es
jmp
inc
out
or
jl
fsub
add
mov
sub
sub
jg
sub
adc
pop
sahf
clc
xor
inc
sbb
push
rcl
adc
iret
aas
or
pop
jbe
push
xor
shr
fisttp
mov
or
xor
dec
out
test
repnz
jecxz
jbe
pop
arpl
(bad)
js
cmc
jno
rcr
popa
lods
fcmovb
mov
fist
xor
in
jae
lds
int
jmp
aas
clc
cmp
fidivr
xor
fisub
out
push
and
inc
jge
loop
test
pop
and
enter
and
fidiv
cmp
fcom
pop
ss
and
mul
dec
jo
mov
xchg
adc
mov
jo
fild
mov
test
adc
mov
jb
xlat
mov
stc
call
enter
xchg
and
les
or
stos
pop
pop
mov
iret
call
js
leave
xchg
inc
inc
lds
bound
in
jle
clc
shl
repnz
pop
add
adc
test
sbb
jmp
ret
(bad)
stc
mov
outs
icebp
xor
xchg
sub
push
push
gs
(bad)
mov
cmps
sub
xlat
hlt
cs
clc
jb
ins
mov
repnz
mov
(bad)
xor
adc
or
int
js
jno
in
xchg
and
inc
xor
lods
add
aaa
jge
out
fstp
xchg
data16
mov
xchg
ja
ds
sub
popa
fidiv
retf
(bad)
mov
das
in
jmp
mov
cmp
mov
inc
out
cmp
lock
ins
mov
mov
dec
sbb
cmps
pusha
das
inc
test
xchg
outs
data16
jecxz
cmps
sbb
aad
or
mov
stos
fcomp
push
mov
cmp
or
dec
push
inc
aaa
sub
adc
in
dec
push
movs
lahf
jbe
scas
push
xor
pop
fucom
inc
xor
add
mov
or
mov
pop
out
(bad)
fs
aas
ss
outs
cmp
imul
loop
ror
fsubr
ret
int3
cs
add
mov
adc
adc
cli
es
or
jmp
ds
jb
fadd
lahf
dec
mov
(bad)
aaa
and
cmp
cwde
out
push
mov
stc
fisubr
ds
lods
loopne
push
into
pop
pop
inc
(bad)
pop
sar
iret
cmps
ret
test
lahf
or
lahf
ret
arpl
cmc
popa
add
out
aas
sub
mul
fldenv
shl
nop
sub
mov
jl
in
popa
adc
(bad)
dec
shl
scas
inc
jmp
sbb
xchg
retf
cmps
jno
(bad)
lods
xor
jns
push
inc
lds
adc
outs
mov
ins
mov
mov
mov
inc
mov
pop
xor
ret
push
out
and
xchg
ret
lods
je
imul
rcl
sub
fwait
sbb
inc
jbe
addr16
icebp
mov
adc
add
sbb
movs
inc
adc
int
aad
push
mov
sub
jle
mov
ror
jg
xor
loope
imul
test
leave
jp
retf
mov
daa
rcr
push
aad
dec
jno
sub
js
mov
mov
fsubrp
scas
lds
daa
cwde
mov
js
and
dec
mov
test
cmc
stos
sub
or
mov
aaa
in
ror
dec
ret
aaa
add
push
adc
or
nop
fs
mov
jne
les
js
mov
adc
xor
mov
movs
xchg
pop
sbb
lock
(bad)
mov
stos
imul
mov
sti
xor
out
(bad)
sub
sbb
cmp
scas
inc
or
jno
pop
fisubr
inc
sbb
pop
pop
scas
cld
scas
iret
dec
movs
dec
pop
aaa
lods
jecxz
bound
mov
(bad)
into
hlt
xor
pop
xchg
int
lods
xor
sbb
jecxz
xor
sub
inc
push
mov
jle
out
call
ret
test
std
and
sbb
sbb
mov
ja
xchg
loope
ja
push
test
cmp
inc
adc
pop
mov
lds
xor
lods
or
js
(bad)
xlat
cld
(bad)
call
lahf
jbe
es
xor
iret
retf
inc
adc
mov
(bad)
sbb
sbb
pop
mov
int3
jns
imul
lahf
jg
daa
lea
outs
mov
addr16
sbb
daa
je
pop
hlt
sbb
stos
mov
or
push
(bad)
pop
aaa
push
dec
stos
xchg
adc
jns
daa
aam
mov
mov
outs
pop
movs
sub
mov
cmp
mov
cmp
lds
test
(bad)
sbb
stc
and
fistp
lods
sub
repz
test
in
cmp
cwde
fist
(bad)
gs
mov
sub
dec
call
inc
and
out
mov
inc
repnz
or
jnp
inc
movs
pop
mov
jmp
jmp
pusha
call
rol
fcomp
aam
mov
mov
aas
sub
bound
(bad)
cmp
cmp
inc
pusha
movs
(bad)
xchg
(bad)
cli
add
lods
les
cmppd
mov
mov
push
cli
jo
fnstsw
loopne
mov
xchg
push
(bad)
fistp
inc
loop
xlat
je
pop
sbb
mov
addr16
pop
xor
outs
inc
inc
cmp
lods
mov
and
not
xchg
jle
movs
lds
jmp
jae
fisubr
push
or
ds
das
inc
jmp
mov
or
lds
adc
xchg
lahf
stos
lahf
inc
or
jecxz
mov
stc
push
sahf
mov
add
ja
je
and
add
mov
test
xor
psrad
push
add
daa
call
mov
inc
aaa
lods
aad
ud0
ret
(bad)
adc
push
mov
test
jle
and
inc
outs
jne
dec
fst
adc
fisubr
mov
xor
test
test
mov
stos
mov
dec
pop
(bad)
jmp
stos
or
mov
add
fisubr
adc
adc
shr
das
icebp
mov
out
cmc
cmp
test
cs
jb
jmp
mov
loope
dec
outs
dec
pop
out
inc
xor
cmps
dec
sti
mov
xor
arpl
movs
jmp
mov
movs
jne
lods
test
mov
sti
addr16
add
arpl
inc
inc
retf
jl
aam
mov
loope
mov
outs
xlat
nop
pop
sub
adc
test
lds
mov
pop
fidiv
rol
test
sbb
fsub
add
mov
scas
jp
add
jl
sub
rcr
add
pop
fidivr
out
add
push
icebp
jno
es
outs
pop
cmp
outs
cmp
push
and
xor
daa
scas
cmp
out
retf
mov
es
arpl
mov
xor
scas
pop
outs
dec
jmp
mov
data16
and
daa
pusha
or
mov
xor
iret
add
rcr
push
jecxz
mov
(bad)
out
lds
adc
scas
mov
out
loop
std
arpl
mov
and
adc
or
ds
cli
fwait
mov
inc
dec
in
mov
daa
retf
nop
in
pop
and
pushf
xchg
es
push
frstor
ss
and
fisub
push
pop
fistp
inc
jo
rcr
sar
mov
dec
repz
popf
xor
mov
aas
xchg
in
test
shr
test
mov
cmps
inc
lods
test
push
xchg
xor
loope
cmp
add
(bad)
jnp
imul
data16
scas
fwait
inc
gs
and
mov
xor
stc
movs
(bad)
jle
test
gs
cmc
pop
xchg
or
mov
xchg
mov
adc
int3
jmp
loop
sub
stos
sbb
jnp
mov
dec
stc
js
mov
mov
sbb
xchg
lds
dec
jge
add
mov
xchg
shl
into
imul
ins
sbb
xchg
mov
sar
cs
jb
out
lahf
ja
pop
inc
lea
sahf
cli
mov
addr16
mov
push
hlt
adc
push
sbb
mov
mov
cmp
cmp
outs
addr16
mov
push
xor
pop
mov
in
les
dec
stos
cmps
mov
outs
les
mov
cwde
mul
clc
sub
(bad)
mov
inc
imul
jmp
add
rcr
inc
jb
call
or
adc
lods
adc
sti
das
movs
es
jge
bound
test
in
jp
push
sti
cmp
test
and
inc
test
jg
daa
push
push
sar
outs
and
and
aas
cmp
inc
data16
getsec
lds
and
les
call
mov
mov
jge
rcl
rcr
add
push
mov
mov
cmp
mov
rcl
push
cmps
int
or
mov
ds
movs
gs
ja
inc
movs
fs
(bad)
loope
adc
add
mov
in
call
dec
into
(bad)
int3
and
and
movs
in
out
add
cmp
(bad)
in
movs
or
cdq
adc
out
mov
lods
mov
loop
push
inc
sub
lods
dec
fsub
lods
adc
jb
stos
or
inc
push
mov
js
dec
xchg
rol
out
mov
iret
scas
jmp
and
adc
mov
mov
cmps
dec
or
aaa
popf
shl
or
inc
jmp
(bad)
jo
add
jmp
in
out
or
cmps
jb
dec
imul
repnz
add
mov
add
push
fdivr
ret
retf
push
cmp
mov
es
dec
push
pop
or
mov
cmp
movs
addr16
in
and
pop
mov
inc
xchg
xor
adc
sbb
push
jecxz
mov
jmp
sbb
inc
popa
fcom
stos
lds
or
xchg
cmp
sbb
jmp
sbb
cmp
imul
xchg
cmp
ret
test
jnp
shr
add
int3
xchg
(bad)
in
retf
push
xchg
cmp
rol
sub
aas
(bad)
xchg
dec
fwait
xlat
(bad)
xor
mov
aad
fwait
sub
adc
int
rcr
(bad)
scas
leave
out
jmp
xchg
fdiv
mov
cmp
ret
pop
ret
mov
jp
in
ins
ins
mov
lods
mov
rcl
push
inc
lahf
mov
daa
xchg
jge
(bad)
repz
and
jnp
test
mov
dec
or
outs
adc
jns
jae
int3
cmps
sti
mov
cmps
fld
mov
(bad)
xor
fisttp
sti
vmaxps
adc
dec
sahf
inc
inc
sub
xchg
sbb
shl
mov
xor
pop
mov
std
push
pusha
sub
mov
aad
mov
add
jne
ret
and
cmp
retf
xchg
xor
fs
and
inc
push
cmp
jbe
and
fld
in
sub
jp
mov
mov
std
mov
jb
nop
inc
jmp
iret
out
retf
mov
mov
into
jbe
cmp
out
add
mov
xor
aad
sub
fsub
lds
or
es
leave
push
push
je
add
adc
add
(bad)
mov
add
shl
cmps
inc
add
in
jl
fdivr
jge
pop
scas
sub
mov
(bad)
xor
push
cmps
jmp
(bad)
pop
clc
pop
mov
or
lods
jle
lods
xchg
dec
out
fild
lahf
data16
jb
and
jle
cmp
push
or
lds
cmp
ins
fwait
push
adc
stos
lods
out
inc
push
test
lods
pop
push
inc
(bad)
faddp
jl
inc
in
push
iret
xchg
nop
mov
adc
div
jge
sbb
fistp
lods
mov
std
loop
aas
fnstcw
pop
and
movs
and
adc
call
dec
aam
mov
jno
push
mov
dec
pop
scas
cmps
fisub
pusha
xor
das
jae
xchg
fadd
sbb
jge
sub
fldenv
cwde
data16
inc
mov
pop
aas
into
and
mov
jg
add
lds
push
fsub
mov
cmp
dec
loopne
cmp
aaa
scas
mov
popf
push
cli
jl
outs
xor
popa
lds
mov
loop
pmaddwd
push
daa
xchg
outs
out
not
mov
ret
pop
call
in
mov
jnp
std
jae
pop
imul
fmul
les
out
add
ret
lahf
jmp
mov
jmp
retf
xor
sbb
jne
sbb
mov
ret
test
adc
fist
sahf
push
(bad)
in
adc
xor
pushf
enter
mov
and
ret
lahf
or
ficom
aaa
dec
fs
sar
fwait
mov
jge
mov
ffreep
(bad)
sahf
(bad)
mov
aas
xchg
mov
cmp
popf
pop
sub
jnp
iret
test
push
and
xchg
pop
xor
loop
retf
in
cmp
xchg
in
sub
not
in
jbe
sub
jecxz
aas
daa
rcl
adc
cmp
test
imul
mov
push
fcom
int3
icebp
cmp
mov
inc
push
scas
add
push
test
jne
mov
adc
mov
icebp
into
inc
ret
mov
aad
sub
jbe
mov
add
xor
pop
sbb
dec
adc
lds
cwde
ins
js
push
mov
stos
add
xchg
in
ror
dec
and
(bad)
xchg
adc
loope
and
ja
lods
inc
xchg
in
addr16
popa
mov
add
cld
push
pop
pop
pop
(bad)
stc
sbb
cmp
mov
xor
inc
jmp
adc
popf
pusha
scas
adc
int
rcl
daa
jne
aam
loop
ja
or
lods
fmulp
push
mov
fisubr
(bad)
xchg
mov
mov
les
sub
jp
or
add
test
nop
test
(bad)
popa
xchg
aaa
push
jecxz
and
gs
in
cmp
enter
sbb
(bad)
sub
jnp
stos
lds
imul
test
cmp
shr
jne
cmp
inc
pop
int
rcr
mov
cmps
pop
mov
dec
movs
fstp
int
movs
cmp
and
loopne
cmp
pop
inc
(bad)
cmps
scas
repnz
jp
inc
loopne
cmps
scas
(bad)
data16
pop
pop
(bad)
in
jg
mov
iret
jnp
lahf
aaa
pop
cmps
mov
test
sbb
cmps
push
cld
adc
pop
mov
jle
je
loopne
test
or
es
stos
add
push
xchg
jge
cmps
xlat
dec
mov
inc
inc
cmps
lds
popa
scas
jo
add
jns
lods
adc
ret
outs
add
aad
loopne
(bad)
pop
or
pop
(bad)
jmp
jno
pop
or
add
not
ror
sub
adc
lds
call
(bad)
jmp
fs
mov
cmps
pop
dec
or
add
inc
scas
inc
mov
bnd
jg
lds
mov
xchg
gs
pop
nop
or
pop
cwde
jecxz
xchg
inc
in
das
rcr
jne
xchg
js
xchg
daa
shl
jae
es
mov
sub
push
rcr
sub
mov
(bad)
cmp
mov
add
js
fnstcw
lds
lahf
test
int3
xor
inc
or
or
pop
add
sub
enter
fsubr
movs
movs
push
sbb
repnz
outs
imul
lds
not
adc
cmp
stos
dec
outs
mov
imul
push
add
jmp
scas
xorps
lds
stc
loop
fisttp
xchg
stc
scas
rol
dec
pusha
sub
mov
gs
out
xchg
add
shr
(bad)
sub
int3
xchg
out
push
arpl
outs
ja
inc
inc
mov
sub
sti
aas
and
adc
dec
inc
sbb
fs
shl
pop
pop
stos
imul
out
dec
cmps
cli
push
loope
and
mov
jp
cli
in
push
cli
sub
push
add
jge
and
popa
jl
jo
cwde
mov
in
pusha
faddp
dec
inc
xchg
cmp
(bad)
mov
cli
xor
or
cwde
arpl
jecxz
xor
iret
jno
fild
xor
movs
xlat
sbb
mov
add
scas
fs
lods
add
fisubr
mov
cs
lods
iret
push
ret
les
cmp
jae
ret
shr
mov
xchg
xchg
jg
mov
fild
mov
sbb
add
adc
loop
inc
cmps
jl
std
pop
xor
sbb
cmc
test
xchg
inc
jae
sahf
mov
stos
fcompp
xchg
add
push
xorps
mov
fwait
inc
mov
sub
dec
cmp
adc
icebp
cmps
and
rol
mov
pop
jg
aam
outs
fisub
(bad)
aam
add
cs
outs
sahf
mov
jno
sbb
xchg
jl
xor
pop
stos
jb
or
nop
and
sbb
push
retf
cs
sbb
mov
xor
in
mov
cmp
clc
(bad)
xor
in
jbe
std
jb
retf
test
stos
mov
add
cwde
neg
mov
mov
in
xor
inc
shl
mov
cmps
mov
mov
pop
jmp
cmp
call
es
cmps
inc
mov
xabort
cmp
or
xlat
mov
or
pop
jge
stos
inc
std
adc
ret
jns
test
or
(bad)
lods
mov
jae
fnstenv
add
inc
fst
inc
adc
cmps
or
push
lods
imul
mov
xor
std
push
adc
out
js
or
inc
sub
popf
(bad)
pop
jecxz
push
arpl
les
arpl
xor
scas
xor
cmp
jns
aam
nop
mov
imul
fistp
sub
mov
js
lock
(bad)
jne
lods
xchg
sbb
fs
add
sbb
inc
mov
lods
rol
adc
test
pop
enterw
aam
mov
mov
and
push
aaa
sub
pop
(bad)
mov
xchg
mov
pop
outs
jne
mov
and
shl
out
mov
sub
(bad)
loopne
out
inc
dec
jle
and
jo
adc
es
sub
add
or
loope
aas
mov
lods
add
sbb
ret
jb
mov
mov
lods
add
call
jge
jle
out
xchg
rol
jb
mov
lahf
ret
pop
ja
(bad)
or
push
outs
scas
mov
adc
pusha
pushf
scas
stc
pop
mov
outs
lds
div
mov
mov
int3
mov
(bad)
repz
adc
mov
or
ja
jg
and
push
loop
sub
or
stos
mov
sub
in
xlat
sub
mov
dec
push
push
dec
mov
cmps
jp
in
jne
jnp
aas
xor
jno
or
pop
(bad)
cmc
lds
adc
jb
loop
in
push
(bad)
or
hlt
push
dec
mov
mov
inc
stos
out
push
repnz
ins
jle
mov
inc
enter
stos
das
bound
or
mov
rcr
iret
sbb
sbb
pop
mov
je
fcomp
sub
lds
push
mov
mov
cmp
fld
lods
jmp
(bad)
or
in
repz
enter
sahf
push
mov
add
dec
cmp
pusha
cmp
int3
lock
imul
(bad)
loope
lahf
push
cmp
lock
mov
and
js
pusha
mov
daa
in
mov
xchg
cmp
out
ins
mov
jge
sbb
scas
lahf
call
fstp
mov
movs
mov
adc
add
pop
call
inc
ret
pop
sub
into
inc
loopne
cdq
icebp
mov
bswap
aaa
inc
push
(bad)
jne
mov
xor
cmp
adc
xor
xchg
adc
mov
test
mov
ss
or
cmp
jns
ret
repnz
add
adc
sbb
(bad)
repnz
(bad)
xchg
ret
cmp
icebp
cmps
inc
add
cmp
pop
lea
pop
add
adc
push
mov
fbld
mov
xor
cmc
aaa
stos
inc
sbb
mov
sbb
inc
out
adc
and
cli
sbb
lods
scas
sbb
icebp
mov
test
daa
fstp
ja
jl
adc
enter
es
pushf
clc
les
add
movs
and
push
lods
ja
std
sub
mov
mov
jns
(bad)
icebp
sti
inc
movs
and
lds
inc
shl
cmps
mov
dec
pop
cmp
mov
adc
dec
loopne
push
xor
mov
mov
push
retf
ret
mov
fild
lods
xchg
inc
mov
shr
sbb
icebp
out
loop
scas
aaa
adc
les
pop
xor
fldenv
push
jg
lds
mov
lods
test
push
mov
jnp
xchg
scas
sub
test
aad
movs
pop
dec
popa
jae
jmp
dec
cmps
dec
(bad)
push
cmp
outs
in
jl
aad
jo
mov
push
pop
lock
push
ror
cmp
iret
add
popf
outs
pop
mov
cs
mov
stc
mov
lods
push
jp
mov
dec
aad
lea
ret
test
pminsw
fsub
mov
mov
int3
ja
jl
push
push
mov
push
xor
fwait
push
dec
fmul
mov
outs
jg
mov
mov
sahf
xor
mov
nop
jne
sub
loopne
xor
fs
aam
mov
adc
mov
(bad)
mov
mov
(bad)
lea
mov
addr16
je
stos
es
scas
or
mov
(bad)
jle
sub
mov
rcl
bound
std
test
xchg
lds
imul
jle
jno
adc
and
pop
imul
fwait
xchg
stc
sub
mov
call
out
pop
mov
idiv
pop
ud1
scas
rcl
xchg
inc
pop
aas
fcomp
stos
ds
add
mov
adc
push
scas
xor
outs
push
mov
scas
ror
cmps
pop
and
test
bound
inc
repnz
xchg
pop
je
adc
and
fidivr
lods
and
fimul
cs
cmps
in
adc
repnz
mov
das
adc
xor
mov
aaa
cmp
stos
(bad)
adc
push
sub
dec
ja
xchg
xor
xor
mov
enter
mov
inc
adc
aaa
cmp
sbb
fisubr
stos
fs
add
popf
adc
sbb
iret
jb
xchg
mov
in
stos
outs
jne
out
fisttp
in
loopne
jge
aaa
in
adc
movs
adc
xor
mov
pop
and
mov
scas
mov
fmulp
and
popa
dec
jmp
adc
jne
inc
sub
xor
outs
sti
pop
push
in
adc
adc
mov
xor
adc
add
inc
fisttp
jns
jo
jo
pop
mov
xor
ret
scas
movs
jle
dec
daa
push
ror
jl
shl
neg
je
pop
jbe
sahf
cmps
es
ja
arpl
xor
push
js
popf
cmps
xor
mov
push
fcom
aas
jns
pusha
and
ds
rcr
fisttp
push
mov
sub
xchg
push
jo
sbb
lods
mov
inc
stos
jle
ss
mov
es
inc
retf
pop
adc
sbb
sub
(bad)
mov
push
mov
in
mov
sbb
jg
jg
mov
(bad)
mov
fs
js
cmp
xor
dec
aaa
jbe
mov
mov
nop
pop
inc
scas
or
xor
mov
xlat
cmp
cmp
lods
repz
pop
push
jb
repnz
mov
push
cmp
dec
mov
mov
cmps
test
and
jecxz
pop
outs
xchg
and
lods
shr
push
mov
mov
or
mov
(bad)
icebp
pop
sbb
xor
fs
jg
std
and
iret
xor
dec
into
mov
imul
hlt
(bad)
stos
xchg
js
sbb
sub
adc
cld
mov
lds
sti
les
mov
outs
je
and
adc
mov
push
sub
retf
sub
adc
pop
cs
or
sub
xchg
sbb
test
cmp
jae
xchg
fcmovbe
retf
jb
or
jnp
jns
int
popf
adc
pop
pop
xor
ds
lahf
shl
cmp
mov
xchg
aam
repz
dec
loopne
adc
or
nop
mov
test
lods
push
ficomp
in
mov
(bad)
lods
and
cli
mov
mov
mov
test
pop
jbe
ss
mov
adc
jle
lds
inc
push
cs
mov
ja
xor
hlt
addr16
idiv
sbb
or
push
jbe
and
popa
sar
add
popf
aas
js
mov
out
xchg
add
in
std
mov
cmp
fwait
(bad)
push
jo
ror
shl
jae
pop
cmc
movs
rol
sub
fwait
scas
nop
adc
data16
es
hlt
loop
mov
lock
(bad)
jecxz
jle
scas
pop
jmp
fmul
in
stos
pop
jge
outs
add
or
dec
shld
cmc
pushf
inc
aad
mov
stos
(bad)
push
(bad)
rcl
jnp
cmp
ffreep
mov
push
retf
xchg
fidivr
jg
sar
dec
and
fcom
sbb
xor
add
montmul
cmps
(bad)
setge
(bad)
sbb
(bad)
jmp
enter
js
sub
leave
inc
aas
mov
pop
jg
sub
test
jl
push
mov
dec
gs
xacquire
push
push
add
xchg
popa
loope
cmps
sbb
inc
(bad)
leave
je
(bad)
es
xchg
mov
lds
fs
cld
gs
cmp
xor
ins
sti
cmp
sar
aam
call
jno
dec
scas
jns
xchg
pop
bound
add
jae
sbb
jmp
jle
and
ror
out
dec
hlt
mov
cs
add
sbb
pop
jmp
push
dec
enter
sub
repnz
xchg
repnz
jle
sbb
(bad)
dec
or
mov
pop
out
out
jb
das
or
cmp
mov
dec
and
pushf
pop
popa
dec
es
jp
or
mov
in
adc
push
outs
jo
jnp
scas
and
inc
pop
and
icebp
or
inc
sub
push
push
push
add
shl
loope
nop
push
jmp
aad
lahf
daa
loopne
mov
adc
pusha
in
jo
push
mov
inc
test
cld
out
ins
mov
mov
mov
(bad)
mov
fwait
out
pop
mov
mov
mov
sub
xor
aas
ja
outs
retf
push
xor
stos
add
push
jmp
xchg
pop
inc
stos
push
jns
jmp
ja
and
cmp
cmps
lds
imul
or
xchg
fidiv
mov
fidiv
add
xchg
push
jge
daa
or
test
xor
sub
sub
mov
in
fld
mov
cwde
movs
jmp
and
mov
in
sar
jg
xor
dec
mov
push
jae
dec
mov
and
cs
mov
lds
test
daa
or
jo
add
cmovne
xchg
int3
jno
pop
cmps
push
mov
cmc
push
lds
scas
mov
mov
daa
or
jmp
es
(bad)
mov
in
ja
jp
push
fisttp
sbb
add
out
inc
mov
(bad)
dec
aas
inc
fist
rol
mov
xor
nop
sbb
adc
hlt
shr
mov
push
hlt
(bad)
cmp
adc
pop
jp
cmc
cmp
mov
data16
dec
(bad)
xor
xchg
xchg
mov
enter
push
lds
cmps
fs
inc
cmp
cmp
fs
adc
daa
hlt
jge
sub
mov
inc
mov
push
add
pop
aam
add
out
sub
in
aaa
xlat
stc
xor
inc
cmp
and
pop
fdivrp
ins
js
push
data16
adc
cmp
jecxz
cmps
(bad)
mov
dec
or
add
jmp
std
aas
fdivr
lds
sub
fwait
sbb
retf
fwait
mov
mov
mov
mov
add
rcl
cld
scas
mov
icebp
in
inc
inc
push
std
scas
mov
(bad)
in
mov
mov
mov
mov
push
scas
xor
lds
sahf
out
cli
xchg
scas
adc
xor
sar
fdivr
cld
adc
and
mov
pop
inc
hlt
mov
inc
mov
arpl
(bad)
std
cmps
das
fwait
cli
ret
xor
add
and
push
dec
scas
mov
mov
lods
data16
or
mov
(bad)
jo
lods
sub
(bad)
adc
sbb
aas
fsub
cmps
shl
add
add
and
mov
pop
fdivr
ror
jmp
sub
rol
mov
call
js
jl
mov
jge
iret
pop
inc
iret
out
int3
mov
movs
outs
enter
xchg
out
sub
(bad)
jmp
pushf
call
push
fs
mov
mov
sub
sbb
nop
cmp
sub
cmp
dec
mov
pop
mov
call
(bad)
push
jae
and
movs
jns
enter
outs
inc
inc
xchg
stos
mov
mov
mov
mov
and
ja
and
fdiv
cmps
in
push
je
mov
mov
ins
or
movs
das
sub
movs
pop
pop
and
mov
and
jo
cmp
(bad)
stos
addr16
sbb
aaa
enter
sbb
pusha
fisub
xlat
(bad)
cmps
sub
cld
cmps
xor
sbb
movs
pop
lds
fdiv
mov
cmps
and
push
mov
or
stos
pushf
movntps
mov
aas
rep
cmc
and
pop
in
movs
ror
and
add
mov
mov
push
mov
cli
adc
(bad)
repz
cs
mov
and
in
pop
fdiv
pusha
sahf
or
mov
mov
ficomp
stos
leave
sar
jne
jo
sbb
inc
pop
mov
adc
adc
ror
sbb
in
mov
adc
push
mov
mov
adc
lahf
xor
stos
sub
arpl
mov
xor
sub
dec
sbb
fs
sbb
stos
mov
lods
sbb
clc
movsx
test
scas
icebp
test
add
inc
sub
and
mov
xor
loopne
outs
sbb
aas
push
push
push
xchg
mov
or
mov
data16
adc
in
call
jmp
(bad)
mov
es
outs
xchg
mov
and
dec
pop
pop
xor
jp
repz
push
pop
jo
pop
iret
sbb
inc
xchg
ret
dec
mov
jg
push
lahf
push
inc
mov
mov
ret
jl
xor
shl
js
shr
test
pushf
push
arpl
aam
shr
cmps
outs
adc
inc
pop
mov
popa
mov
jnp
(bad)
push
push
mov
jecxz
in
mov
aam
mov
mov
pop
int3
xchg
imul
pop
or
jne
jl
mov
push
test
jl
push
cmps
sub
aas
mov
out
ss
inc
ja
pop
pop
dec
xor
pop
js
inc
cmps
cmp
das
test
lods
movs
in
lods
jb
jecxz
ficom
stc
mov
and
sub
sbb
inc
ret
cmps
aaa
in
bound
mov
std
dec
jge
sbb
not
inc
sbb
shl
mov
xchg
and
icebp
js
and
mov
cmp
jg
add
or
adc
jmp
das
iret
and
jae
outs
(bad)
mov
les
mov
repnz
mov
xor
push
jp
xor
pop
jge
lahf
cmp
in
je
ins
mov
inc
mov
mov
mov
xor
shl
sub
mov
pop
push
mov
in
in
(bad)
pop
es
(bad)
xchg
jl
out
adc
mov
loope
cmp
xor
add
push
mov
aad
sub
mov
pop
inc
adc
scas
dec
cld
mov
cmp
int
push
sahf
jmp
cli
fld
lods
idiv
jp
mov
cmp
lods
ret
xchg
call
dec
xchg
cmp
inc
lahf
das
inc
cmps
ss
rcl
mov
cmp
or
out
jmp
cmc
test
push
shr
push
jmp
push
sub
mov
push
fsub
aas
(bad)
sbb
mov
pop
sub
push
adc
push
ja
inc
jae
cmp
sbb
add
sub
inc
dec
popa
add
repz
stos
outs
aad
mov
adc
cli
ds
jle
cli
(bad)
aam
fcmovbe
fidivr
pop
cmp
jg
sbb
movs
sti
jnp
jne
and
adc
clc
jb
pop
js
clc
hlt
cdq
(bad)
or
ins
stos
fsubr
jge
mov
aas
ss
cmp
mov
push
adc
into
push
and
xchg
cmp
sti
xchg
lods
(bad)
sub
div
or
jae
pop
sub
icebp
std
and
dec
shl
stos
cld
mov
jg
cmps
pop
das
stc
pop
cmps
(bad)
lock
addr16
stc
faddp
jo
shr
cmps
adc
xor
aas
dec
push
mov
lods
lds
lock
imul
cli
movs
mov
es
pop
mov
adc
ins
pop
add
pushf
scas
(bad)
fxch
das
mov
lock
repz
adc
dec
mov
cmps
mov
iret
dec
push
lods
mov
dec
(bad)
cwde
jbe
and
jmp
fadd
xlat
cmc
inc
in
pop
loopne
rcr
jo
mov
loop
mov
mul
jo
add
scas
push
fsub
shl
(bad)
fidivr
sbb
cdq
leave
(bad)
nop
vpacksswb
dec
jno
mov
xlat
jmp
cmp
(bad)
jno
jmp
and
jmp
mov
lods
xor
lds
ret
push
push
lock
xlat
xor
das
mov
add
push
jle
sub
add
in
push
push
lds
or
inc
(bad)
jp
mov
test
mov
mov
xor
mov
ror
adc
daa
jae
cmps
dec
emms
inc
add
mov
pusha
inc
adc
es
jo
jo
adc
call
ins
sub
dec
dec
push
std
push
jnp
scas
sbb
mov
cli
xor
dec
push
mov
sub
daa
sbb
dec
jae
sbb
sub
push
test
aas
jns
ror
mov
fldcw
adc
xchg
dec
mov
pop
cmp
jmp
jno
call
idiv
jle
cmc
inc
fs
repnz
dec
mov
sub
jecxz
jp
out
enter
test
jmp
fistp
jb
inc
mov
jnp
std
mov
mov
push
cmp
mov
loope
in
inc
sbb
and
aas
out
jecxz
ror
aam
dec
bt
aam
inc
jbe
cwde
popa
cmp
vpunpcklwd
shl
jecxz
in
daa
popf
pop
jbe
aas
(bad)
stc
jne
inc
je
lds
(bad)
sar
jp
push
ins
pop
(bad)
popa
pop
mov
stc
sub
arpl
inc
mov
cs
(bad)
dec
mov
test
mov
xor
mov
sbb
das
cmps
mov
scas
cmp
(bad)
ss
xor
lods
xor
mov
xor
outs
or
aas
out
cmp
test
mov
xchg
jg
push
sahf
retf
test
adc
test
(bad)
inc
inc
addr16
mov
stos
jmp
inc
adc
retf
mov
mov
aas
cli
jmp
inc
das
fld
lahf
iret
fwait
jecxz
dec
xchg
add
aam
lahf
fdivr
mov
jne
pextrw
stos
std
(bad)
into
push
inc
mov
mov
and
ds
xchg
jbe
pushf
stos
inc
loope
jle
lds
(bad)
inc
sub
(bad)
xchg
cli
adc
dec
and
jo
jge
stos
dec
xchg
aas
jle
pop
rcl
pop
and
xchg
pop
mov
sbb
ins
xchg
xchg
xchg
lahf
dec
and
sbb
rcr
jbe
inc
add
pop
xor
push
test
test
adc
mov
jl
jae
clc
enter
sub
dec
int
jle
iret
pop
movs
jmp
xor
out
or
push
mov
test
jae
out
call
jmp
pop
mov
pop
ficom
lea
aas
mov
popa
ss
sub
and
cs
hlt
adc
lods
pop
(bad)
iret
into
adc
shl
push
push
ins
cs
js
pop
cli
dec
ins
xor
rol
jbe
add
jge
(bad)
ds
cld
test
pop
fadd
stos
pop
ds
pop
ja
outs
mov
loopne
inc
fidivr
adc
inc
aad
push
sbb
(bad)
adc
sti
ins
dec
popf
rol
daa
or
dec
xor
lds
pop
(bad)
fadd
out
mov
outs
pop
pop
lods
push
inc
fwait
or
sbb
sbb
dec
nop
shr
fs
jno
pop
call
mov
test
in
inc
adc
jmp
mov
sbb
pop
ret
or
retf
dec
(bad)
sar
push
scas
dec
push
shl
xchg
add
stos
xchg
jnp
dec
or
xor
movs
fiadd
adc
pop
mov
loope
push
sbb
ret
ficomp
lds
int
test
jge
cmps
ret
push
(bad)
jo
sbb
push
data16
mov
out
mov
jmp
xor
outs
ja
pop
shl
clc
push
or
movs
add
mov
inc
lds
lods
stos
(bad)
cmp
mov
scas
push
lds
popa
push
test
adc
ins
pusha
fadd
scas
in
pop
adc
push
add
ret
adc
adc
xchg
loop
(bad)
enter
or
xor
(bad)
fcom
jns
(bad)
dec
pop
sti
mov
imul
lds
lods
sub
dec
lods
jo
mov
rcr
in
xor
out
and
js
mov
popf
cmp
and
inc
enter
add
ficom
jb
or
mov
and
mov
not
sti
lds
xor
les
mov
mov
jle
mov
ds
push
test
shr
test
jp
daa
mov
(bad)
pcmpeqb
loopne
imul
pop
jecxz
(bad)
jno
add
scas
xchg
jae
cwde
push
fwait
mov
ret
js
(bad)
or
or
sub
or
add
and
outs
jecxz
or
inc
pushf
jae
cmp
mov
inc
mov
pop
stos
mov
arpl
iret
or
nop
movs
dec
mov
aas
(bad)
loope
pop
shr
aam
dec
xchg
int3
mov
rcl
mov
push
sub
add
or
jne
cmps
jecxz
repnz
jmp
adc
xchg
push
xchg
sub
push
leave
sub
test
cdq
pop
jle
(bad)
or
test
loopne
(bad)
xor
sub
(bad)
mov
out
(bad)
xor
mov
jmp
(bad)
xor
xor
pop
(bad)
fsub
fwait
push
je
or
out
inc
pop
mov
cmp
je
pop
nop
push
push
retf
jbe
fdiv
xor
arpl
adc
int
xchg
sar
cmps
stc
pusha
mov
inc
xchg
jb
cdq
pop
mov
test
sub
cmp
scas
int3
inc
out
pop
cmps
xor
ins
mov
retf
sub
in
ret
inc
aas
daa
and
mov
cli
pushf
add
scas
int3
sub
mov
add
lods
aaa
xor
xor
in
imul
xchg
dec
arpl
mov
mov
pop
out
jne
jnp
adc
and
das
mul
mov
dec
retf
(bad)
pop
(bad)
movs
rcl
xchg
cmps
push
fdivr
pop
xchg
es
cmps
mov
ja
pop
inc
mov
adc
hlt
rcr
mov
fwait
in
push
fisttp
out
adc
stos
lahf
pop
xchg
inc
and
mov
fwait
fwait
ror
adc
and
loop
gs
sbb
mov
dec
pop
sbb
sar
mov
sar
mov
lahf
(bad)
and
in
ficom
outs
div
ja
pop
jmp
iret
into
sbb
sti
cmp
ss
jno
imul
pop
cmp
xlat
(bad)
xor
daa
mov
mov
mov
inc
in
push
mul
rcr
mov
jnp
retf
pop
jmp
je
repnz
pop
mov
push
int
dec
push
fcomip
test
lds
jae
cmp
cli
sti
push
jle
nop
xchg
leave
cmp
es
mov
xchg
or
or
adc
ret
mov
fs
mov
lahf
(bad)
xor
(bad)
daa
or
outs
sbb
sahf
(bad)
mov
add
popf
scas
es
jno
outs
sar
jmp
and
push
outs
lds
lods
(bad)
ror
js
mov
clc
inc
(bad)
(bad)
ds
pop
pop
jbe
scas
fnsave
lds
cld
adc
fwait
mov
jb
or
cs
xchg
mov
aas
sub
cmp
sub
pop
xor
xor
test
mov
iret
cld
loop
jb
mov
mov
mov
arpl
pop
xlat
jmp
add
stos
pop
mov
jb
push
cmps
(bad)
or
sbb
imul
ins
fs
movs
fld
stos
jl
cmp
add
fld
push
aas
jae
jb
add
inc
(bad)
(bad)
xor
(bad)
mov
mov
test
ins
arpl
pop
outs
call
dec
fidiv
adc
add
jae
inc
sahf
js
adc
jo
(bad)
xchg
mov
sbb
mov
test
test
les
pop
fist
das
aad
aad
sbb
jecxz
lahf
xchg
mov
mov
rcl
repz
xor
mov
pcmpgtw
shl
xchg
mov
jge
and
push
mov
jmp
cmp
pop
dec
sub
sahf
add
xor
sbb
loope
push
icebp
into
daa
repnz
mov
ror
ret
mov
(bad)
mov
sbb
cdq
or
daa
stc
fdivr
les
mov
in
xchg
pop
sti
out
es
rcl
sbb
mov
inc
and
lods
xor
jae
add
fnstenv
out
cld
repz
adc
shl
inc
jmp
test
and
jmp
sub
push
scas
mov
stc
cld
ins
aas
sbb
retf
sub
mov
div
dec
sbb
pop
and
cs
ror
pop
inc
in
ins
fadd
loope
aad
lahf
xor
push
jbe
addr16
shl
and
push
(bad)
push
aas
add
mov
pop
mov
dec
mov
jb
xchg
std
movs
and
or
lods
retf
stos
dec
test
inc
ret
ja
cmp
mov
lds
adc
and
daa
ror
mov
out
jge
in
out
stos
inc
das
jne
daa
lds
sub
mov
push
xlat
test
(bad)
cmp
aam
gs
xchg
sti
xor
xchg
call
ins
cmp
mov
add
imul
imul
adc
xor
es
pop
and
jne
dec
push
movs
fwait
lahf
pushf
sub
hlt
jno
xor
cmps
mov
retf
popa
mov
pop
mov
je
jnp
fsubr
dec
mov
loopne
xor
xchg
scas
lods
lds
aas
jmp
cmp
xor
mov
ficomp
test
rcl
retf
jge
xchg
out
aad
cmp
jmp
out
cmp
sub
jb
lds
mov
mov
enter
iret
cli
es
mov
and
jne
popa
push
movs
std
(bad)
prefetch
lods
cmc
call
cli
stos
xchg
sbb
or
push
cs
lds
adc
xor
jmp
icebp
add
mov
mov
and
or
out
rcl
in
ins
dec
push
pminub
sub
jp
dec
fsubp
aaa
jno
mov
xchg
pop
movs
cmps
(bad)
retf
jae
pop
pop
rcl
pop
addr16
xor
lods
aas
inc
push
sar
push
mov
ins
mov
add
je
dec
fsubr
push
sbb
adc
ins
outs
int
mov
movs
inc
pop
dec
sub
xchg
sahf
rcr
pusha
adc
jnp
fwait
jae
sub
into
inc
ret
adc
repnz
cmps
push
dec
ins
jae
into
in
es
retf
mov
mov
mov
push
fwait
call
adc
stos
sar
jbe
and
aaa
aam
aam
jne
es
fdiv
outs
jno
hlt
xchg
repnz
rcr
sbb
dec
loopne
cmps
stc
xchg
or
mov
add
mov
xor
outs
mov
out
sbb
or
mov
aas
mov
mov
mov
pop
jne
pop
add
std
out
sti
adc
lods
jbe
dec
fdiv
das
inc
in
mov
pop
sub
ja
lea
les
sbb
mov
inc
movs
repnz
fld
sahf
inc
(bad)
mov
pop
cwde
movs
es
dec
xchg
sbb
(bad)
leave
ja
les
sar
in
sbb
cmps
vcmppd
mov
or
std
test
pop
dec
test
inc
pop
cli
mov
adc
leave
iret
gs
movs
and
adc
and
push
cdq
lods
not
ss
ss
and
or
stos
sbb
mov
loopne
inc
cmps
in
xlat
test
jno
xchg
cmp
ja
xor
(bad)
or
dec
push
dec
mov
gs
lods
push
aad
pusha
inc
(bad)
cdq
sbb
push
loope
jge
mov
sub
mov
push
mov
mov
das
sbb
sbb
outs
faddp
jo
pop
mov
adc
lods
stos
cmps
icebp
pop
call
(bad)
and
and
mov
movs
(bad)
(bad)
inc
push
pop
cmps
mov
call
outs
aaa
inc
cdq
dec
mov
mov
jno
jo
div
es
aas
data16
cs
jne
popf
ins
xchg
xor
fdivr
fldenv
pushf
mov
xchg
jns
outs
jne
mov
mov
inc
sub
and
es
mov
mov
icebp
sbb
push
imul
xchg
(bad)
inc
add
sbb
inc
and
pop
push
pop
fxch
adc
mov
and
cdq
mov
movs
shl
mov
daa
iret
cmps
gs
mov
cmp
ret
aad
cmp
xor
loope
sbb
mov
test
shl
(bad)
test
fs
cmc
int
jp
retf
ins
gs
jb
mov
inc
xchg
outs
test
xor
dec
stos
add
int3
mov
mov
jmp
mov
addr16
scas
out
les
sbb
mov
shl
test
jo
add
inc
and
and
pop
adc
ds
out
movs
(bad)
(bad)
test
mov
mov
daa
outs
and
or
add
add
mov
movs
mov
lea
jb
clc
push
and
push
ficomp
add
(bad)
mov
push
cmps
pop
jge
mov
jno
int3
aad
push
pushf
shr
cmp
add
mov
add
inc
adc
xor
add
sub
js
dec
mov
pop
shl
std
lds
call
shl
rcl
aad
jbe
call
fdivr
neg
jg
push
fimul
dec
(bad)
xchg
sbb
inc
add
out
movs
push
imul
add
xor
cmp
push
sbb
xchg
(bad)
sbb
pop
mov
cmp
and
mov
push
jle
or
scas
out
inc
stos
or
icebp
fild
outs
cmp
jl
adc
or
xchg
sar
ss
and
shr
enter
fwait
stos
js
popa
xchg
les
xchg
stos
ror
vorps
mov
jecxz
bound
cmc
jno
sbb
mov
xor
outs
push
mov
fdivr
es
aaa
adc
cmp
mov
lods
imul
outs
ror
push
jg
scas
add
add
outs
push
adc
test
sar
popa
test
aaa
gs
adc
mov
inc
push
pop
lock
not
adc
mov
mov
sub
cmc
dec
jmp
mov
adc
mov
jp
cmps
loop
xchg
outs
mov
sbb
pop
pop
pop
stos
inc
popf
cs
enter
repz
push
sbb
sbb
inc
lods
xor
imul
mov
ds
dec
xor
and
and
lods
mov
gs
mov
pop
lahf
jle
sbb
mov
pop
stc
cmp
add
inc
pop
sub
(bad)
adc
mul
jbe
lods
sub
xor
adc
dec
sub
pop
loope
stos
mov
push
jo
fld
xchg
adc
xchg
sbb
cmp
sub
das
adc
(bad)
cld
add
xchg
rcl
adc
pop
popa
cld
popf
sub
push
mov
loopne
dec
mov
push
test
inc
mov
mov
xchg
xor
mov
in
add
jnp
pop
xchg
inc
sar
pop
mov
xchg
jecxz
fisubr
pop
jo
xor
inc
pop
mov
or
rcl
push
jb
cmps
(bad)
rcl
les
or
addr16
(bad)
cli
sub
mov
push
es
jle
cmp
pop
bound
stos
adc
mov
mov
xor
jl
retf
push
rol
(bad)
adc
jmp
into
inc
ror
lds
sbb
xchg
ja
daa
cmp
cmps
scas
(bad)
dec
inc
jmp
inc
pop
inc
call
xor
pop
xchg
pop
and
jnp
popa
jbe
ret
xor
push
push
cmc
xchg
xchg
add
or
xchg
aad
mov
jmp
dec
cmps
mov
pop
fld
fistp
sbb
mov
mov
lods
pushf
mov
jno
test
lahf
mov
mov
dec
push
cli
lods
pop
jl
imul
aam
mov
mov
out
and
add
pop
mov
jno
jns
adc
and
cmp
or
ss
add
stos
or
stc
adc
fidiv
push
lods
movs
nop
test
outs
xchg
xlat
icebp
mov
cmp
ret
cs
mov
xor
push
dec
mov
jp
adc
es
shr
and
xor
iret
movs
popa
scas
jle
xchg
mov
daa
sub
hlt
jns
add
push
adc
jne
out
scas
adc
fcomp
or
dec
mov
add
sub
ins
aaa
dec
fsub
sbb
adc
or
out
mov
addr16
jmp
jo
in
sbb
add
aas
add
jbe
sub
aas
dec
pop
and
dec
(bad)
or
fstp
test
arpl
xor
leave
test
stos
fdivr
pop
cmp
sub
mov
push
add
inc
pop
jge
or
mov
shl
ror
pushf
ja
jp
test
test
dec
sar
or
cmp
cmps
imul
dec
jb
pushf
inc
jp
push
cmp
inc
jge
shl
les
mov
(bad)
cmps
jo
in
jb
inc
test
jmp
push
mov
mov
push
mov
fwait
div
out
js
aam
mov
and
mov
clc
ja
popa
bound
ss
jns
xor
lea
sbb
mov
movs
imul
idiv
movs
stc
int3
jb
mov
xor
jo
inc
clc
arpl
mul
adc
cdq
and
fcmovbe
jo
mov
imul
sub
das
jbe
into
mov
popa
push
xor
ins
adc
dec
inc
scas
jnp
jl
enter
cmc
out
scas
jmp
inc
inc
mov
mov
mov
lds
arpl
or
sahf
cdq
daa
mov
out
dec
adc
and
xchg
mov
arpl
sbb
push
mov
or
push
dec
test
in
cmps
and
mov
and
cmps
inc
and
add
xchg
push
mov
adc
adc
dec
inc
into
test
popa
sbb
cmp
push
push
jg
push
cmps
mov
mov
fild
mov
fild
outs
dec
dec
sub
outs
jle
jns
lds
cmps
fcom
add
adc
and
xchg
jb
add
scas
mov
cmp
push
mov
shl
mov
inc
adc
test
pop
fdiv
cmps
(bad)
imul
inc
dec
cmps
out
add
jae
mov
ror
ins
fnstsw
or
(bad)
pinsrw
mov
mov
jns
out
retf
cmp
movs
mov
cmp
lahf
xchg
cmps
in
rcl
inc
lds
xor
into
inc
pop
test
out
or
aam
mov
sub
int
iret
fwait
pop
aam
test
pop
mov
mov
cmp
sub
sahf
es
nop
mov
cmp
(bad)
test
popa
mov
(bad)
cmova
cmc
sbb
push
lods
in
js
lods
pop
cmp
imul
mov
xor
inc
xor
push
fwait
(bad)
aam
dec
gs
sbb
vaddsd
adc
push
mov
imul
jecxz
mov
pop
sbb
inc
(bad)
jp
aaa
sbb
les
cli
or
mov
out
fnstsw
cmp
movs
pop
lahf
retf
jmp
or
scas
js
lods
mov
fdivp
ja
in
aas
cmp
mov
jno
outs
mov
movs
aaa
push
pop
call
pushf
mov
cdq
daa
clc
sahf
cmp
data16
mov
mov
sbb
test
mov
jmp
mov
jmp
jg
mov
pusha
cmp
(bad)
repz
test
fs
cs
in
pop
jl
mov
shl
push
scas
mov
sub
call
dec
mov
push
repz
jg
rol
lods
cmp
pop
mov
mov
mov
mov
mov
push
xlat
popa
dec
aas
push
cmp
out
clc
call
jp
pop
xor
call
push
mov
data16
mov
aas
outs
and
pop
push
or
add
lods
aas
xor
outs
xor
cld
and
out
or
cmp
adc
icebp
jbe
sub
icebp
jmp
jg
add
loope
jo
pop
mov
add
pop
fidivr
cmp
and
sub
pushf
xor
mov
sbb
test
or
cmp
cli
cmp
inc
inc
inc
stos
data16
mov
mov
in
pop
bound
jno
mov
lea
call
int
jge
xor
mov
mov
fxam
jns
dec
dec
stos
sbb
(bad)
lods
(bad)
aaa
and
jg
test
cmp
out
loopne
dec
es
push
mov
(bad)
add
repnz
in
cmps
daa
jnp
xchg
addr16
pop
mov
fiadd
out
(bad)
cmps
js
lds
frstor
test
add
dec
xchg
lds
mov
rcl
jle
arpl
push
js
mov
cmp
stos
sbb
jecxz
sub
das
cmp
cmp
lods
jo
out
cmc
pop
push
pusha
jl
into
sti
daa
xchg
hlt
fcmovnu
cmp
(bad)
mov
mov
sbb
imul
addr16
jg
mov
stos
out
lods
mov
outs
adc
or
inc
inc
pop
xchg
outs
cmp
shr
pushf
test
(bad)
sub
mov
(bad)
pop
jo
xlat
xchg
add
push
lea
sahf
cmps
pop
sbb
cli
push
sahf
mov
xor
jo
jb
(bad)
mov
and
xor
ja
push
adc
jns
test
les
sti
xchg
or
mov
inc
mov
cmp
repnz
xor
mov
adc
pop
stos
repz
int
ds
adc
stos
dec
shr
mov
fwait
mov
jp
test
mov
cs
loope
sub
or
out
cmp
mov
inc
daa
adc
adc
and
cmp
xchg
sbb
inc
ret
js
xor
out
inc
gs
cs
sub
mov
cmps
fldcw
inc
loope
mul
pop
cmp
maxps
shl
cmp
clc
(bad)
(bad)
gs
jbe
cmps
stos
in
in
jle
jbe
test
or
mov
mov
shr
jle
mov
cli
stos
(bad)
fst
add
adc
cmp
jge
inc
mov
push
xchg
cmp
data16
pop
js
fst
and
xchg
inc
dec
jne
fwait
imul
xor
daa
or
and
pop
mov
in
(bad)
sub
dec
call
bound
jo
stos
sub
jle
mov
pop
jle
enter
ins
es
fsubr
push
push
cld
aas
outs
clc
test
loopne
in
push
sub
mov
(bad)
jo
int
xchg
xchg
into
call
je
cld
bound
pop
jmp
xchg
test
pusha
out
adc
pop
das
mov
jnp
movs
fstp
xor
dec
inc
ficom
sar
ret
outs
int3
cmps
movs
dec
ss
mov
mov
retf
paddd
in
(bad)
dec
inc
mov
xchg
add
cmp
test
gs
jo
leave
aas
out
mov
dec
and
in
test
nop
js
add
sbb
es
int3
adc
push
sub
pusha
test
and
xor
outs
sbb
mov
jp
icebp
lods
cli
jge
scas
call
xor
(bad)
cmp
call
cmp
adc
adc
div
mov
ss
frstor
mov
test
stos
xor
sub
call
bnd
mov
stos
jecxz
movs
(bad)
fcmovbe
ret
out
retf
(bad)
gs
ficomp
mov
inc
hlt
bound
lahf
mov
(bad)
dec
fwait
hlt
dec
ja
add
dec
shl
adc
popa
(bad)
out
or
xor
imul
add
dec
cmps
(bad)
and
jge
xor
fsubr
xor
in
retf
pusha
test
lods
jmp
ret
scas
movs
mov
jle
sub
repnz
je
aas
inc
xchg
fsub
aam
sbb
shr
pop
add
gs
dec
cmp
sub
jle
push
js
mov
daa
cmps
xchg
shl
cmp
add
add
jns
xor
or
cmps
daa
jns
scas
cmp
popa
jp
and
jb
jl
ficomp
bound
fadd
repz
scas
add
ror
lods
jne
cwde
out
hlt
sbb
pop
pop
dec
xchg
xchg
cmc
mov
sub
pop
fdiv
jae
pusha
mov
inc
push
xchg
push
sbb
add
gs
stos
xor
imul
test
sahf
adc
mov
and
in
and
test
(bad)
loop
inc
daa
and
scas
retf
and
cmp
je
sub
cmp
jb
fwait
xor
pop
mov
cmp
mov
pop
cli
jmp
mov
xor
jnp
mov
(bad)
enter
in
out
stos
sub
sbb
loope
outs
xlat
daa
jmp
push
(bad)
jo
pop
ins
fs
icebp
mov
mov
jns
popf
movs
jno
adc
sbb
int
fcom
pop
push
clc
jle
retf
cmp
sub
and
movs
cmpxchg
cmp
push
cmp
(bad)
jl
es
jle
out
push
adc
push
mov
mov
push
mov
sahf
scas
sbb
rol
fdiv
jmp
(bad)
mov
outs
iret
aaa
jnp
test
out
mov
jmp
jbe
or
mov
sub
jns
adc
outs
add
add
test
adc
dec
fisub
outs
out
cmp
cmp
loop
in
sbb
stos
dec
adc
std
pusha
fiadd
sbb
mov
sbb
adc
cs
cmc
xchg
inc
fs
subps
(bad)
(bad)
pop
lods
loope
adc
and
jp
jb
adc
rdmsr
loop
aas
inc
scas
jno
push
mov
or
call
stos
jmp
add
or
iret
rsqrtps
rcl
dec
cmps
retf
dec
adc
fstp
xchg
fnclex
repnz
sub
js
mov
sbb
in
movs
lds
sahf
addr16
test
cmp
adc
cmp
in
ins
test
jp
or
imul
lods
sahf
aas
push
pop
aaa
out
mov
(bad)
fimul
add
lds
das
fist
rol
xor
aas
push
popa
xchg
adc
mov
dec
test
int3
jmp
je
arpl
mov
and
sahf
ins
xchg
sahf
adc
fs
iret
clc
cmps
mov
inc
adc
mov
mov
push
shr
push
fiadd
fdivr
arpl
inc
into
pop
mov
and
inc
test
dec
mov
(bad)
dec
jne
mov
mov
dec
aas
cmp
lods
cmp
cmp
cmp
addr16
outs
pop
dec
fstp
rcl
lods
outs
(bad)
(bad)
int3
test
movs
cmp
push
cmp
push
mov
adc
mov
int3
mov
int
inc
inc
arpl
jmp
cmps
jb
sub
pop
stos
mov
jns
and
mov
(bad)
sbb
cmps
(bad)
loopne
fsubr
sahf
jnp
leave
call
arpl
and
pop
add
scas
cmc
aas
xor
(bad)
mov
and
adc
lea
aam
push
or
lock
aas
push
and
jno
dec
jge
(bad)
punpcklbw
or
les
adc
add
jb
jmp
inc
loope
test
mov
enter
add
mov
bound
pop
push
call
cmp
sub
mov
jmp
in
scas
pop
jno
mov
pop
and
mov
movq
and
aaa
(bad)
push
retf
pop
cs
sahf
out
and
es
pop
neg
xor
mov
adc
in
movs
cmp
aas
fwait
push
cmp
(bad)
xor
(bad)
je
dec
cmps
mov
cmp
xchg
mov
xchg
iret
call
push
es
dec
scas
mov
cld
or
fwait
es
fisubr
cmp
fistp
and
es
fcom
mov
(bad)
sti
sbb
lea
add
cmps
and
rcr
(bad)
fdiv
(bad)
cld
es
mov
cli
xchg
ins
mov
sbb
xchg
and
aaa
aas
aad
pop
add
lds
icebp
enter
fist
xchg
adc
add
lds
mov
loop
or
int
jnp
push
out
jp
ins
inc
jo
out
clc
xchg
pop
push
mov
mov
push
lock
movs
fistp
sub
je
mov
mov
fcom
outs
fmul
add
sub
xor
push
jmp
daa
aam
jl
(bad)
mov
in
arpl
push
push
sbb
push
(bad)
xchg
sar
in
pop
adc
(bad)
mov
cmps
mov
add
mov
inc
outs
std
outs
xor
movs
or
loop
xor
pop
aaa
mov
add
cmp
pop
cmps
lds
push
inc
cmps
daa
movs
outs
mov
xor
icebp
mov
and
jne
ret
pop
movs
(bad)
outs
push
sub
ja
mov
clc
mov
dec
and
sub
push
hlt
jecxz
adc
(bad)
xor
ss
js
or
adc
fdivr
mov
lds
jo
nop
rcr
ins
test
mov
jl
bsf
icebp
mov
jne
jno
sub
xor
mov
adc
sbb
das
ins
(bad)
mov
les
xchg
add
fstp
and
test
rol
jne
aad
jmp
inc
cmp
cld
push
retf
push
adc
mov
aam
xchg
cmp
clc
inc
jl
sub
and
aad
or
fisubr
jbe
sahf
and
in
mov
(bad)
aad
sahf
movs
or
sub
mov
stc
push
or
test
mov
aas
mov
xchg
mov
loopne
dec
stc
sar
lods
inc
lock
jge
dec
lds
push
cmc
ins
(bad)
cli
scas
inc
mov
aad
lahf
pop
js
mov
repnz
inc
loop
out
es
jne
dec
les
mov
add
push
and
sbb
cmp
sbb
retf
in
test
add
jns
shr
push
mov
ror
pop
(bad)
mov
mov
out
shl
xchg
xchg
std
mov
dec
cmp
adc
dec
lods
add
loopne
cli
ffreep
mov
xchg
pop
xchg
ins
mov
mov
sub
bound
nop
scas
clc
rol
pop
cld
cmp
jbe
sub
jp
inc
out
and
push
sbb
movs
scas
pop
call
mov
fwait
test
pop
add
adc
shl
adc
mov
mov
ss
adc
gs
cmp
pop
sub
aad
dec
test
sbb
aad
xor
sub
into
js
adc
sbb
iret
mov
xchg
xor
aaa
dec
(bad)
pop
scas
push
lea
pop
fmul
xor
jne
sub
sbb
and
arpl
push
pusha
maxps
inc
ins
or
inc
daa
jecxz
pop
jmp
ror
add
mov
sahf
fcmovb
out
mov
lds
and
add
jmp
sub
lea
jmp
movs
and
push
scas
call
popa
rcl
dec
lahf
call
mov
and
fmul
mov
cmp
pop
dec
push
lods
lods
fwait
inc
jnp
pusha
stos
sub
test
cdq
mov
pop
lds
pop
mov
adc
pop
pop
xor
lds
iret
jb
inc
dec
sub
mov
and
pop
icebp
inc
mov
(bad)
fdiv
sub
xchg
mov
jg
push
mov
sbb
je
add
jmp
cmp
ja
popa
add
das
inc
pop
scas
dec
lods
cmp
and
test
pop
mov
cmp
(bad)
mov
aad
stos
and
inc
ds
dec
xchg
add
test
adc
pop
mov
cmp
jmp
and
clc
stos
dec
sar
pop
aad
push
lock
lds
in
xchg
out
(bad)
or
jnp
push
push
adc
or
cmc
movs
xchg
ret
outs
les
or
pop
xor
mov
jbe
add
mov
cli
adc
xchg
jmp
pop
sbb
in
sar
jae
adc
(bad)
(bad)
mov
cmp
pop
pusha
enter
ret
push
jnp
dec
push
adc
lds
dec
push
sub
push
outs
out
lds
pop
cmp
cmp
adc
cmp
sub
es
(bad)
je
fidivr
xor
dec
nop
xor
push
(bad)
cmp
lods
add
jmp
arpl
push
(bad)
pop
ja
adc
int
test
mov
outs
pusha
add
ins
mov
je
push
mov
pop
dec
xchg
push
inc
sahf
jmp
xchg
cmp
adc
shr
jno
std
popa
ret
out
pop
aas
js
pushf
fdiv
adc
in
fwait
(bad)
and
shl
nop
cmp
clc
hlt
mov
jns
xor
mov
gs
pop
inc
mov
adc
cmp
in
jmp
cmp
fidivr
push
(bad)
fadd
stos
sbb
cmp
shl
mov
pop
jnp
jb
dec
repnz
adc
pop
ret
popf
xor
stc
mov
aad
and
jns
pop
sbb
sub
inc
ret
enter
jb
in
sub
push
lds
repnz
mov
adc
pop
dec
mov
data16
xor
xchg
jnp
mov
ficomp
sbb
pop
call
scas
in
dec
lods
hlt
aas
das
lds
jb
enter
push
jns
cmps
add
mov
jo
stc
pop
push
je
(bad)
ja
cmps
xchg
pop
mov
lods
mov
fistp
test
add
mul
mov
mov
add
aaa
aas
in
test
sub
out
xchg
(bad)
sbb
loope
call
add
cmp
mov
jns
(bad)
sbb
pop
xchg
jmp
(bad)
adc
fsubr
or
cmps
(bad)
adc
xchg
jl
inc
movs
jle
es
ss
jge
imul
lds
scas
sbb
mov
sar
enter
jmp
dec
or
ins
add
mov
ins
or
mov
adc
cmp
sbb
fadd
cmp
fisub
jo
popf
dec
jp
mov
sub
jmp
(bad)
call
mov
dec
dec
js
in
pop
pop
xchg
mov
sbb
lods
shl
mov
nop
enterw
pop
arpl
(bad)
push
ja
jg
xor
pop
mov
stos
push
xlat
popf
repz
out
ret
aaa
imul
cmps
xlat
push
sub
imul
sar
sub
mul
pop
mov
popf
sub
pop
sbb
ss
mov
push
retf
adc
movs
cmps
sbb
in
jge
jg
stos
jle
lods
sbb
daa
in
popa
icebp
daa
inc
adc
fs
pushf
(bad)
mov
inc
jae
cs
sbb
lds
add
ins
fst
add
mov
out
xchg
imul
adc
adc
add
sbb
test
dec
scas
iret
(bad)
sub
xor
ins
aad
mov
movs
mov
push
ret
iret
mov
stos
movs
dec
adc
add
jecxz
xor
sub
div
shr
in
mov
daa
mov
in
xlat
jno
pop
js
add
cmp
add
push
int3
mov
sar
fadd
test
sub
cld
push
adc
or
sub
scas
xor
adc
cmp
xor
mov
and
sbb
cmc
xchg
jecxz
lods
iret
inc
ss
pop
xchg
das
sub
je
fsubrp
and
push
int3
jo
dec
xor
fisttp
mov
xchg
scas
sar
pop
mov
iret
imul
jnp
pushf
and
mov
clc
inc
push
je
lods
or
cmp
aam
cmp
test
mov
cmp
inc
xor
jp
mov
cs
lods
sbb
cmp
into
fcomp
cmp
fst
mov
in
hlt
mov
dec
and
mov
adc
stc
push
sub
imul
pop
cmp
cmp
dec
(bad)
lea
mov
into
xor
gs
les
pop
movs
and
cmp
push
add
sbb
arpl
dec
push
(bad)
data16
add
pop
jno
pop
(bad)
xchg
inc
stos
call
mov
aas
ret
rcr
jp
fs
in
pop
mov
ror
xchg
dec
aam
push
(bad)
bound
out
das
movs
fisub
scas
(bad)
(bad)
xchg
lds
jge
ret
inc
or
adc
(bad)
aam
pop
mul
cdq
jmp
mov
test
dec
xor
pop
and
push
xor
(bad)
fidivr
ret
(bad)
lock
(bad)
loop
iret
scas
mov
lahf
pcmpeqw
pop
mov
mov
mov
dec
adc
push
stos
(bad)
mov
ds
xchg
cwde
lods
jnp
imul
push
repnz
xor
ins
je
ret
dec
push
xchg
adc
adc
push
sub
lds
das
cmp
outs
xchg
call
stc
mov
sbb
test
scas
cwde
ror
daa
lea
clc
(bad)
xchg
pop
inc
and
aam
cmps
jno
das
sub
cmps
gs
leave
mov
iret
pushf
cmc
retf
cmps
add
xchg
(bad)
xor
adc
fwait
and
into
and
outs
lds
aad
add
pop
pop
ret
(bad)
cli
or
jmp
(bad)
cmp
push
in
fcom
je
pop
sub
pushf
dec
jge
jmp
jmp
hlt
adc
push
scas
ins
sbb
mov
xchg
js
inc
inc
adc
pop
mov
push
ss
dec
in
add
push
out
ret
xor
stos
movs
mov
inc
mov
lods
cmp
pop
push
sbb
or
push
in
xlat
(bad)
jb
pop
xchg
paddd
dec
cld
sbb
(bad)
retf
jle
rol
imul
shl
ror
clc
in
daa
out
fadd
jmp
pop
jbe
mov
mov
popa
popa
push
push
popf
enter
adc
dec
pop
and
mov
pop
dec
stc
das
sub
add
dec
sub
cmp
hlt
xchg
add
(bad)
fcom
pop
cmp
bound
stos
icebp
(bad)
push
rcr
jb
cld
adc
shl
pop
ins
mov
inc
jns
push
jno
cmps
pop
mov
neg
aas
outs
popa
sti
add
into
jnp
or
mov
or
sbb
inc
mov
sbb
mov
aas
sbb
mov
out
pop
lahf
lods
int
cli
mov
adc
push
sbb
in
lds
mov
outs
adc
es
dec
rol
cmp
add
or
and
shl
cmps
into
inc
inc
push
hlt
mul
jp
in
mov
jae
xchg
mov
xchg
hlt
outs
push
sbb
or
dec
and
fstp
popf
sub
add
in
ds
cmp
call
push
nop
imul
repz
inc
fist
and
jmp
pop
sar
jle
push
leave
add
jge
out
inc
rcl
popa
xchg
lds
mov
stos
cmp
jl
rcr
(bad)
iret
js
out
xor
ins
js
out
jbe
sub
adc
jl
call
mov
popf
sub
mov
imul
lahf
xor
lods
sbb
inc
sub
inc
mov
sahf
pop
sub
adc
sbb
aam
and
test
daa
and
dec
pop
sbb
jno
div
stos
mov
mov
adc
inc
paddsw
mov
jnp
paddsw
rcr
rol
mov
cmps
cs
fadd
lahf
add
dec
les
cmps
shl
or
outs
(bad)
and
adc
cmp
(bad)
fisttp
jmp
xchg
add
jl
(bad)
stc
jae
mov
ins
fs
and
imul
cmp
sub
fchs
je
jp
fadd
ror
dec
aaa
mov
outs
scas
and
(bad)
mov
adc
outs
ficom
ins
out
enter
rdpmc
jge
or
cmp
adc
jae
fld
mov
sbb
fs
iret
aaa
(bad)
and
jae
std
jo
push
adc
jns
jmp
stos
adc
not
push
and
or
pop
or
fcompp
mov
push
test
stos
xchg
(bad)
out
mov
clc
popa
or
fiadd
mov
stos
shr
xchg
push
fnstcw
movs
dec
inc
xchg
outs
cli
add
sbb
inc
pop
out
mov
rol
test
jne
arpl
ficomp
ins
cs
jle
xchg
call
lds
mov
enter
push
mov
stos
sbb
jle
daa
jae
aad
sub
sbb
add
jno
loope
int
mov
arpl
stos
add
ret
add
out
stos
lds
fucomp
popa
scas
test
adc
mov
std
push
jb
aad
cmp
mov
retf
lahf
inc
mov
scas
sbb
xor
mov
pusha
cmp
sub
mov
lahf
mov
shl
jmp
or
dec
fsubr
inc
mov
and
lock
mov
mov
ret
cmc
sbb
leave
loop
and
imul
pop
sbb
xchg
aas
pop
xchg
ror
popa
sbb
loope
leave
ss
xor
mov
pop
ins
aad
mov
mov
inc
push
(bad)
repz
fwait
dec
outs
cmp
cmova
jb
gs
mov
addr16
pop
push
scas
out
xor
es
fcmovne
mov
mov
imul
xor
repnz
push
out
sub
mov
test
sub
and
and
inc
adc
pop
xor
(bad)
cmp
and
call
(bad)
xchg
cs
lds
cmp
fisttp
adc
in
shl
and
and
enter
aaa
fcmovnu
enter
cli
icebp
mov
in
lock
imul
adc
lock
xor
sbb
popa
xor
sub
mov
sub
mov
pop
adc
cmp
jmp
mov
mov
jae
dec
scas
fistp
cmps
xor
inc
pop
ins
sbb
jb
retf
ret
mov
lods
fwait
push
int3
inc
push
jb
xchg
xor
in
cld
or
lahf
xor
lods
fidiv
sbb
xor
aad
ja
xor
imul
scas
js
call
jp
push
lods
mov
popf
cmc
in
dec
in
inc
dec
push
pusha
adc
int3
retf
test
call
stc
iret
ficom
fldl2e
or
fdivr
aas
jbe
mov
adc
(bad)
mov
cmp
jno
ins
daa
push
ror
jnp
dec
enter
(bad)
scas
xor
mov
in
enter
sbb
inc
ss
fdiv
add
fbstp
sub
add
adc
jo
data16
(bad)
in
imul
in
aam
jmp
jp
dec
push
mov
mov
in
cmp
mov
add
in
jbe
imul
cmc
xor
test
adc
aam
add
loope
es
outs
and
out
mov
add
jns
outs
push
mov
inc
(bad)
inc
xor
in
aaa
ja
xor
push
jns
add
mov
(bad)
sub
cmp
adc
jb
test
dec
unpcklps
mov
jnp
mov
cmc
ret
or
in
cmp
not
shl
bound
aam
scas
mov
push
aad
mov
imul
stos
(bad)
div
shr
ror
lea
daa
jmp
add
call
jne
inc
dec
jp
out
cmp
cli
lods
xor
xor
pop
add
and
ret
pusha
cld
sub
lahf
(bad)
movs
inc
jp
nop
xor
xchg
dec
xor
adc
sbb
inc
daa
mov
lods
leave
(bad)
nop
iret
xchg
inc
cmc
xor
cmp
add
dec
mov
cmp
(bad)
sbb
mov
jge
cmps
mov
imul
cmp
enter
push
or
mov
jnp
jg
dec
dec
test
lds
cmp
pusha
pop
outs
add
mov
mov
and
add
mov
push
and
mov
and
or
lds
or
mov
stos
pop
xchg
dec
enter
call
inc
sub
mov
xor
sub
push
jne
inc
loopne
fcmovnb
fidivr
jmp
mov
aaa
cs
inc
or
inc
xchg
mov
jp
jbe
inc
outs
and
pop
or
adc
retf
aas
int
pop
xlat
call
arpl
imul
pop
int
jp
ficom
jno
outs
cwde
loop
addr16
add
es
inc
lds
aam
and
adc
mov
xor
mov
xor
fsubr
fstp
sub
dec
adc
iret
mov
xchg
retf
mov
stc
mov
pop
rol
jmp
cmp
movs
(bad)
mov
scas
fidivr
call
dec
in
fmul
push
cmc
jnp
cmps
sahf
ficom
es
xchg
mov
in
cmp
mov
fdivr
cld
mov
inc
mov
xlat
dec
xchg
add
push
data16
mov
xchg
ret
sub
dec
xchg
out
pop
adc
addr16
xchg
push
std
ja
pop
mov
or
sub
xor
mov
cmp
inc
sbb
inc
sub
xor
xor
adc
cmps
or
retf
retf
cmp
lods
mov
rcr
nop
inc
mov
mov
dec
shl
jmp
orps
repz
icebp
dec
add
cmps
sbb
shr
ficomp
mov
mov
movs
retf
fwait
mov
push
movs
mov
mov
es
scas
jecxz
and
jle
xor
push
int
sbb
icebp
cmp
fdivr
cmp
je
out
stos
shl
xchg
pop
sub
lods
jl
dec
xchg
sar
not
push
sbb
sahf
or
retf
xchg
stos
pop
faddp
movs
add
sbb
aas
not
lahf
popa
lods
in
(bad)
cwde
out
cs
pop
mov
aaa
ja
push
and
dec
iret
int3
cmps
scas
popf
add
mov
sbb
mov
sar
dec
add
mov
jge
inc
fwait
xchg
sbb
outs
ins
mov
out
jnp
dec
lock
sub
push
(bad)
cdq
mov
popf
cwde
add
stc
hlt
jns
jg
jne
jo
mov
(bad)
je
loope
es
add
mov
(bad)
cmps
mov
sbb
inc
sub
test
xor
arpl
push
hlt
jmp
inc
jbe
(bad)
jbe
and
sti
or
dec
or
push
data16
pop
in
inc
outs
adc
ret
xchg
mov
lock
je
sub
popf
pop
adc
call
cmps
stos
and
sti
loopne
addr16
sub
scas
inc
pop
push
add
xor
xchg
mov
jbe
xor
add
dec
xchg
mov
lods
daa
cld
adc
int3
js
scas
adc
mov
fucomip
mov
mov
repnz
mul
cmp
xor
mov
ror
jno
cwde
in
sub
dec
ret
(bad)
mov
lea
aaa
mov
jmp
div
aad
std
inc
xor
xchg
out
test
js
pop
sub
cmps
rcr
mov
xor
xchg
(bad)
movs
inc
mov
aaa
inc
adc
push
xchg
jmp
jg
push
push
pop
push
xor
cli
sbb
xor
mov
pop
lods
outs
jnp
jp
xor
es
loope
push
inc
add
cmp
js
xchg
add
retf
inc
jae
outs
push
inc
shl
es
mov
outs
jnp
pop
push
push
es
lea
(bad)
sti
sub
xchg
lea
sub
call
pop
cld
mov
in
and
add
not
ss
push
cmp
sbb
pop
lds
mov
daa
and
sti
std
mov
aam
add
mov
sbb
push
pop
push
daa
push
mov
push
xor
lea
aaa
push
jno
sub
mov
sub
fist
push
cwde
xchg
stos
repz
scas
popa
pop
cdq
call
pop
outs
aaa
xor
jnp
xchg
sub
jns
adc
lds
rcr
ror
lds
into
pop
test
icebp
(bad)
xchg
fs
push
jge
ret
cmp
and
daa
jnp
jp
sbb
adc
jne
jbe
mov
pusha
lods
loopne
pop
pusha
mov
in
rcr
push
adc
scas
pop
lds
pop
arpl
mov
adc
jge
pop
inc
dec
repnz
mov
mov
lds
mov
fnstcw
cwde
int3
neg
jl
lds
add
sub
stc
or
push
add
jmp
cmp
int3
mov
inc
cmps
cmp
fstp
lds
cmp
or
das
mov
mov
xor
js
mov
mov
dec
pop
jnp
sub
add
mov
pop
inc
xor
cmps
xor
outs
bound
test
lahf
leave
jge
and
push
imul
lods
mov
add
inc
jo
je
and
jl
xor
addr16
repz
mov
mov
dec
(bad)
xchg
inc
adc
inc
or
cwde
scas
pusha
cmp
and
sbb
mov
or
add
pop
lods
outs
dec
(bad)
inc
(bad)
adc
sbb
sub
xor
adc
pop
sbb
(bad)
scas
neg
pop
cs
lds
mov
cmp
jl
outs
movs
sub
outs
fimul
push
addr16
jo
test
jmp
mov
push
shl
nop
mov
(bad)
ja
lock
popa
sbb
xchg
adc
iret
fwait
daa
cmp
mov
lea
cmp
int
jl
scas
xchg
enter
icebp
sub
stos
xor
sti
adc
ffree
push
mov
int
mov
lahf
aas
jb
daa
nop
fs
push
mov
mov
mov
cmp
rcr
jns
push
mov
ret
mov
lds
add
and
mov
inc
adc
pop
mov
les
jb
push
scas
movs
cmp
cmp
push
repz
jmp
stos
jb
and
(bad)
and
pop
push
call
sahf
or
add
mov
mov
cmp
inc
loope
cmps
dec
jb
es
fdivr
and
pop
outs
lods
hlt
xor
dec
jns
cmps
cmp
sub
adc
rol
fisub
cmp
int3
and
mov
imul
mov
mov
pop
cmp
push
adc
stos
retf
or
jg
add
fidivr
jo
fnstcw
popa
pop
sub
lods
jle
or
cmp
ss
jns
(bad)
jno
inc
adc
mov
mov
push
mov
loopne
xchg
lahf
cld
lods
div
fs
cli
mov
push
jmp
dec
aad
in
test
push
ja
dec
js
mov
sbb
scas
cmp
adc
and
adc
test
inc
in
add
lea
lods
push
movs
shr
rcl
push
cmp
xor
add
(bad)
cmp
mov
push
mov
jmp
je
add
sbb
(bad)
lds
and
je
add
sbb
inc
lock
loope
mov
mov
push
adc
test
and
adc
dec
aad
clc
call
mov
or
mov
sbb
scas
cmps
dec
adc
or
out
adc
push
dec
cmps
rcl
aam
into
sub
sar
adc
(bad)
dec
mov
sahf
sub
xlat
fisttp
mov
fnstenv
cmps
(bad)
xchg
xchg
retf
adc
rol
jbe
xor
cmp
inc
and
pushf
or
mov
scas
xchg
pop
xchg
sub
mov
pop
cwde
popa
jle
mov
aas
(bad)
mov
clc
rcl
mov
retf
mov
in
jge
pop
in
dec
sub
jecxz
dec
aam
sub
js
rol
mov
addr16
inc
stc
or
rcr
sub
and
jg
adc
pop
retf
leave
add
les
pop
mov
and
jno
out
mov
(bad)
rol
and
addr16
jmp
xlat
ret
adc
sub
scas
mov
sub
mov
jb
pop
mov
outs
inc
adc
cmp
pop
outs
inc
test
inc
outs
repnz
sbb
sub
inc
jl
aas
mov
jg
stos
popa
stos
in
pushf
inc
jb
stos
inc
mov
mov
(bad)
fstp
into
lahf
inc
pop
fdivr
stos
sets
cmp
loop
mov
(bad)
das
jae
mov
popf
arpl
lds
pop
fwait
repz
sbb
xor
mov
fsub
ficom
jmp
adc
sar
adc
inc
loope
std
mov
into
(bad)
test
mov
jns
iret
ret
cmp
add
mov
adc
cmp
adc
jmp
(bad)
pop
mov
rcl
xor
push
ds
in
mov
(bad)
adc
mov
int
sub
push
daa
inc
inc
jmp
ss
scas
inc
push
and
icebp
inc
fadd
jecxz
push
dec
inc
and
pop
mov
into
fwait
and
test
lods
xchg
sbb
jns
outs
adc
pop
cmps
add
in
sub
jle
jl
pinsrw
push
out
sbb
lods
inc
mov
inc
es
je
fwait
loop
call
inc
mov
mov
cmp
test
xchg
or
mov
pop
dec
rcr
jmp
jp
imul
addr16
popa
mov
cli
int
lea
xchg
xchg
loop
fwait
and
out
add
lods
adc
xor
(bad)
scas
jle
call
pusha
das
sub
push
(bad)
cdq
shr
mov
into
dec
jmp
sbb
xchg
shl
out
adc
wrmsr
hlt
(bad)
aaa
(bad)
in
inc
(bad)
pop
outs
imul
or
les
xor
cmps
or
jo
sbb
data16
sub
jo
push
add
mov
js
(bad)
dec
aas
xor
adc
push
pop
mov
es
mul
cwde
(bad)
repz
cmp
shl
fcom
pop
mov
push
sahf
in
adc
adc
addr16
movs
popa
lods
lea
xor
stos
sub
mov
les
mov
sbb
sbb
or
mov
fild
(bad)
sbb
pop
fdiv
in
dec
and
inc
popa
adc
dec
xor
dec
les
push
cmps
mov
and
jae
out
scas
jb
inc
mov
(bad)
push
and
loopne
aaa
fbstp
dec
mov
cmp
fld
(bad)
push
lahf
ds
adc
adc
popa
adc
sub
mov
lods
(bad)
(bad)
daa
inc
shufps
movs
sbb
cmp
cmps
ins
shr
jnp
dec
lds
cwde
mov
sub
jb
movs
mov
arpl
sub
jbe
adc
mov
jb
push
(bad)
push
cmp
push
xchg
adc
js
daa
xchg
jg
or
or
add
jmp
dec
push
(bad)
cdq
pop
in
mov
mov
add
push
test
inc
and
mov
jge
mov
push
mov
mov
js
push
hlt
cmps
lds
jg
aaa
sbb
les
mov
xchg
popf
pop
mov
or
je
scas
test
std
xchg
add
jp
sahf
mov
(bad)
fsub
inc
mov
add
leave
adc
and
lods
xor
clc
mov
pop
fisub
int3
fwait
pop
jl
repnz
xor
sbb
pop
fbstp
(bad)
mov
cmc
fwait
test
mov
retf
rcl
movs
jecxz
(bad)
push
(bad)
push
xchg
xor
ret
and
dec
stos
outs
jecxz
jge
stos
push
(bad)
xchg
nop
shl
fistp
stc
jne
add
or
imul
ja
stc
in
push
ficom
aaa
fnstenv
jb
mov
mov
jg
pop
xor
pusha
jbe
int3
ja
dec
mov
stos
xchg
aaa
outs
movs
popa
push
adc
sub
inc
movs
or
push
pushf
cmps
div
aaa
mov
xor
xor
inc
iret
addr16
adc
rcr
or
ins
push
call
rcl
inc
fcmovnb
out
push
and
nop
cmp
stos
mov
pop
mov
jb
ja
out
pop
push
bound
outs
sbb
mov
pop
adc
add
daa
cs
jo
pop
jb
fild
cld
ret
inc
mov
adc
cmp
(bad)
lea
stos
lahf
jge
test
(bad)
retf
(bad)
lahf
mov
gs
sub
adc
mov
xor
mov
pop
aad
ret
test
jl
and
adc
lods
das
(bad)
cmp
push
in
pop
bound
sbb
pop
xchg
inc
and
aas
jbe
lods
sub
inc
test
aas
int3
mov
mov
xchg
push
fldcw
pushf
push
xor
and
rol
push
adc
cs
fcomp
cmp
imul
loope
xor
cli
pushf
inc
mov
push
mov
or
xchg
pusha
in
push
pop
test
jno
cmps
jle
fdiv
lahf
jo
add
lds
ja
mov
xchg
push
pop
cld
xchg
ss
and
sub
xor
inc
(bad)
in
sbb
dec
inc
fidivr
mov
xchg
ss
and
adc
mov
fst
mov
aas
in
out
hlt
pop
cmp
push
add
or
repz
xchg
cmp
and
popa
es
test
and
aam
nop
sbb
inc
out
sar
popf
pusha
push
add
sbb
mov
popa
hlt
adc
rol
repz
jnp
int3
cdq
mov
retf
outs
xor
(bad)
xor
gs
jmp
ffree
pop
jbe
fs
cmp
or
es
lods
jb
xor
and
adc
push
jo
sbb
xor
leave
arpl
rol
fsub
jmp
push
add
xor
cmp
mov
fmul
stos
adc
sti
xchg
sub
push
jmp
js
and
retf
dec
pusha
movs
repnz
sbb
(bad)
mov
jle
pusha
dec
xchg
and
adc
aas
in
loopne
std
cli
mov
outs
and
xor
test
xor
adc
imul
add
fcmovb
jle
std
mov
push
fmul
mov
sub
xor
jno
fisttp
or
mov
xchg
xchg
dec
dec
mov
outs
sbb
(bad)
inc
sbb
movs
retf
pushf
mov
iret
mov
dec
or
xchg
mov
adc
mov
aad
rcr
out
mov
mov
lea
xchg
sub
or
test
(bad)
call
xchg
(bad)
repnz
aas
push
scas
ja
outs
iret
popf
pop
test
test
and
mov
cmp
lds
std
lock
fwait
inc
and
xor
fld
push
les
bound
dec
sbb
and
sbb
lds
xchg
fidiv
popa
jmp
scas
(bad)
and
jg
fsubr
or
(bad)
daa
inc
jno
fs
frstor
add
aad
rcl
fcmovne
stos
inc
or
stos
mov
daa
cmp
nop
sbb
jnp
icebp
pusha
mov
cmp
push
sub
inc
outs
inc
scas
lds
mov
dec
(bad)
mov
pop
adc
cmc
movs
and
jbe
outs
push
cdq
adc
cmps
arpl
or
dec
sub
lods
adc
in
out
or
les
adc
mov
dec
mov
mov
push
call
add
es
dec
and
loop
shl
ret
outs
jecxz
mov
jb
int
das
jp
(bad)
icebp
jbe
shufps
or
nop
mov
in
aad
into
and
jno
dec
or
jle
out
push
jl
imul
div
int3
xor
int
idiv
sbb
sub
test
retf
sahf
fs
xchg
retf
adc
push
adc
mov
mov
sub
into
or
and
std
sub
xchg
cli
repz
cmps
and
and
pop
push
xchg
jb
shl
cmps
stos
cmp
cmc
ins
adc
hlt
cmp
call
mov
inc
mov
(bad)
loop
outs
neg
fisub
lahf
aad
mov
arpl
mov
out
int
loopne
or
leave
push
dec
hlt
jg
xor
rol
out
mov
fiadd
push
lea
icebp
push
loopne
nop
dec
xchg
out
add
xor
ds
dec
arpl
jp
xchg
mov
dec
aad
jl
ret
push
mov
sub
mov
sbb
push
scas
inc
jmp
test
jb
ins
das
test
dec
jnp
xchg
idiv
sub
int3
(bad)
dec
pop
jnp
pop
or
sub
mov
scas
ins
mov
pop
pop
xchg
es
in
retf
or
jmp
popw
mov
repnz
mov
test
arpl
out
xor
jns
jecxz
fiadd
fiadd
scas
add
lods
and
add
mov
out
cmp
adc
shl
xor
inc
out
xchg
lods
stos
cmp
stos
out
mov
aam
es
jle
fwait
inc
test
ret
push
rcr
mov
xchg
ds
fs
inc
shl
cwde
mov
ins
sub
test
shl
jg
push
enter
das
xor
push
ins
imul
jp
loop
dec
data16
and
repz
fdivr
jns
mov
imul
adc
lahf
jnp
sub
jne
in
in
jmp
cmps
mov
and
lods
int3
rcr
mov
fild
push
or
imul
cmp
inc
xchg
ds
sbb
mov
data16
add
retf
xor
cld
xchg
js
es
xor
lds
cmp
out
cmp
cs
jb
push
add
xchg
sbb
popa
push
xchg
add
outs
inc
jge
pop
jb
push
retf
pop
cmp
shl
shl
adc
xchg
cmps
(bad)
mov
inc
sbb
mov
and
push
dec
xchg
adc
ror
push
aas
sub
fcmovb
push
sub
ret
or
adc
rol
neg
mov
(bad)
sbb
or
bound
push
mov
pop
addr16
(bad)
cs
jmp
loopne
loop
lea
mov
leave
mov
xor
mov
jge
addr16
dec
jle
sbb
sbb
in
adc
fild
cmp
(bad)
push
and
mov
and
out
movs
sbb
cmp
les
push
inc
xor
bound
cmp
pop
outs
add
popa
mov
add
fistp
rcr
fsubr
jns
xor
jae
js
out
int3
pop
jnp
lods
mov
scas
mov
hlt
imul
pop
adc
mov
xchg
xchg
cmps
(bad)
test
stos
mov
aam
adc
call
mov
xchg
xchg
mov
stc
movs
bound
lea
add
popa
out
lock
aaa
mov
sub
push
imul
inc
dec
jnp
in
enter
addr16
fninit
mov
rcl
dec
pusha
mov
push
adc
sbb
mov
pop
loop
addr16
inc
sub
in
shr
aam
fnstsw
test
adc
jne
cmp
pusha
xor
rcr
jmp
(bad)
(bad)
adc
mov
in
sar
push
ins
rcl
sub
call
fstp
xor
lea
repnz
mov
dec
arpl
cmps
sbb
adc
bound
inc
mov
or
or
xchg
loop
inc
scas
cli
leave
fidiv
test
inc
mov
fnstcw
inc
add
cmp
ror
aam
lock
outs
(bad)
repz
add
xor
adc
push
or
ror
in
ja
into
xor
adc
xor
mov
or
push
and
int3
(bad)
icebp
push
sbb
lods
inc
bound
icebp
jge
xor
(bad)
in
pop
inc
mov
push
in
push
cmps
scas
xchg
mov
pop
inc
xchg
es
mov
(bad)
ror
arpl
jge
fstp
jnp
dec
pop
add
mov
dec
fnsave
cmp
pop
into
and
cmp
(bad)
cmc
rcr
cli
int
es
dec
lahf
jno
ror
or
popa
lds
ins
call
fimul
and
inc
cmp
rol
sub
inc
scas
repz
xchg
(bad)
rcl
jle
push
jb
pop
jecxz
movs
jl
(bad)
loop
mov
push
scas
inc
pushf
mov
stc
cli
mov
vpaddw
(bad)
cmp
adc
mov
dec
fwait
outs
adc
sub
jmp
sbb
in
jae
leave
(bad)
ret
test
mov
mov
shr
js
adc
add
stc
mov
xor
retf
jnp
arpl
add
jg
jnp
rcl
xchg
mov
inc
movs
pop
ins
sub
imul
or
data16
pop
sti
jg
or
jo
dec
pop
in
lahf
icebp
jmp
pop
xchg
pop
pop
lods
cdq
shl
movs
push
dec
cld
out
xchg
inc
jecxz
jge
inc
mov
fstp
add
psubq
xchg
cmp
and
clc
pop
sub
adc
stc
cld
clc
nop
inc
fdivr
popf
ret
xlat
es
push
push
mov
hlt
outs
in
mov
xchg
(bad)
push
ja
push
mov
add
push
jmp
je
sub
pop
sbb
mov
sbb
mov
or
scas
xor
mov
xchg
mov
retf
(bad)
add
and
or
clc
ret
scas
mov
and
dec
iret
sbb
adc
test
fwait
cmp
arpl
sbb
xchg
fbstp
mov
jns
inc
inc
jmp
push
cmp
in
cmps
scas
lahf
retf
cmps
or
cmc
leave
mov
mov
pusha
push
jno
jecxz
test
ja
xchg
sahf
scas
mov
retf
jmp
dec
sub
shl
movs
inc
mov
test
aaa
loop
outs
xor
or
mov
popf
enter
(bad)
adc
push
lods
and
loope
push
int3
dec
mov
mov
in
shl
push
mov
fwait
mov
(bad)
aas
inc
fdiv
sub
scas
fwait
pop
das
jno
adc
cmps
in
push
cmps
adc
in
into
pop
pop
jle
test
sub
adc
sbb
add
jg
inc
and
xchg
mov
sub
scas
adc
add
cmps
pushf
pop
addr16
sub
and
dec
(bad)
mov
fs
xchg
arpl
push
dec
cmp
out
stos
sub
test
jmp
push
sub
inc
xor
add
(bad)
push
dec
sahf
add
loop
mov
mov
stos
and
daa
scas
or
gs
dec
imul
ss
sar
ins
ficomp
jb
jp
leave
shl
fs
add
cld
(bad)
cli
je
jne
or
(bad)
push
cmc
sbb
js
inc
(bad)
pop
mov
sbb
aam
or
sub
sub
add
jno
icebp
dec
lahf
inc
(bad)
(bad)
mov
add
pop
test
fstp
fld
scas
stc
sub
inc
pop
mov
repnz
dec
aas
les
jne
(bad)
icebp
dec
add
xchg
nop
fisttp
pop
retf
clc
xor
inc
jb
or
xor
and
jg
int3
cmp
sub
in
inc
adc
mov
fs
pop
outs
outs
jle
jl
add
cmp
jo
mov
aas
call
xor
adc
or
and
mov
jno
inc
lds
fs
sbb
jbe
mov
repnz
add
sbb
sub
add
xor
cdq
mov
or
loop
js
inc
adc
add
outs
pop
popf
pushf
and
fwait
jl
ret
or
in
adc
mov
xchg
repnz
lea
fdiv
(bad)
dec
jnp
and
cmp
sbb
fistp
jno
into
xchg
jb
or
xor
cs
mov
mov
aas
and
or
cmps
adc
(bad)
cdq
and
ret
repnz
or
movs
dec
lds
imul
hlt
jb
mov
add
fadd
sub
sub
fs
stos
rcl
rcr
ds
popa
add
push
movs
cmp
ins
pop
jge
jns
lds
imul
fisubr
sbb
sub
and
mov
jns
cmp
fild
adc
outs
in
pop
ja
(bad)
mov
bound
test
movups
in
xchg
inc
sub
(bad)
and
adc
cs
js
cmp
xor
cmp
dec
cmps
mov
retf
pop
mov
jmp
add
add
cld
std
sub
pop
add
not
loop
push
(bad)
(bad)
cld
(bad)
stc
enter
mov
popf
iret
lods
ds
call
cli
movs
mov
mov
in
mov
jge
out
or
push
push
adc
push
jle
adc
(bad)
mov
cmp
pop
jmp
push
test
aas
(bad)
jmp
test
inc
aas
ret
xor
cmps
mov
inc
and
lahf
inc
xor
push
cmp
mov
in
inc
into
repnz
js
push
sub
lahf
test
call
js
popa
inc
js
cmps
sbb
sbb
outs
nop
cli
xchg
in
imul
sub
xchg
pushf
mov
inc
and
ds
addr16
loopne
mov
idiv
arpl
out
mov
add
push
loop
xchg
sqrtps
mov
push
(bad)
lods
sti
adc
pop
movs
test
inc
int
dec
xor
ins
adc
jo
adc
lds
mov
sahf
mov
xchg
xor
dec
and
sub
inc
test
and
fcomp
movs
fwait
out
outs
inc
stos
mov
sub
cwde
dec
xor
(bad)
mov
mov
jo
mov
lods
sbb
xor
call
jecxz
sbb
jb
adc
inc
es
push
xor
sub
dec
(bad)
hlt
sub
nop
dec
xchg
push
push
cmc
punpckhdq
push
lea
push
into
sbb
inc
fs
adc
mov
(bad)
add
pusha
jge
adc
xchg
cmp
sahf
scas
(bad)
cli
sbb
icebp
sub
pop
ja
ret
mov
and
jg
call
aad
mov
cmp
and
adc
adc
retf
pop
icebp
mov
add
dec
mov
out
test
ret
cmps
div
cmp
mov
or
out
cli
pop
pop
daa
mov
jbe
jp
adc
ror
rol
dec
or
and
dec
daa
dec
addr16
dec
cmps
(bad)
nop
arpl
lods
sub
ins
fld
sbb
ret
add
cmp
adc
mov
inc
and
mov
and
sbb
push
adc
sbb
jecxz
cmps
jmp
xchg
ret
push
fild
cmc
cmp
mov
aad
adc
(bad)
scas
lahf
pusha
(bad)
std
cmp
addr16
cmp
in
cmps
sub
lds
data16
ins
mov
cmps
popf
mov
mov
push
es
(bad)
outs
pop
aaa
pop
mov
lds
sar
fisub
xchg
lods
loope
std
fdiv
push
xlat
push
pop
sbb
add
movs
jns
inc
dec
xchg
adc
cmp
xor
int3
js
popf
mov
out
dec
aas
inc
icebp
in
aaa
xlat
arpl
mov
in
mov
cmp
popf
xor
jb
mov
pop
jl
jbe
jp
sub
les
jmp
or
xchg
aad
jne
cmp
push
sar
mov
scas
jp
mov
and
(bad)
mov
push
cli
test
pop
imul
or
mov
es
aaa
es
inc
ja
cmp
(bad)
fdiv
(bad)
nop
enter
pop
pushf
jns
or
dec
mov
js
xlat
into
inc
rcr
repnz
pop
mov
mov
pop
ss
xchg
add
and
mov
add
adc
iret
leave
into
mov
xchg
xor
mov
mov
mov
xlat
cld
in
test
dec
xor
test
scas
inc
cmps
in
jae
(bad)
jo
cld
push
imul
call
mov
retf
add
ret
ret
add
mov
pop
fidivr
jle
jmp
lea
loopne
dec
xchg
adc
mov
dec
stc
ja
aad
dec
popa
fistp
hlt
mov
inc
adc
jp
in
lods
int3
jo
cs
sbb
scas
xchg
js
push
sbb
mov
mov
inc
pop
or
dec
jp
mov
push
sub
adc
and
sbb
xchg
inc
push
cmc
and
cmp
inc
mov
test
mov
mov
jmp
call
jmp
lds
sbb
and
sub
or
lea
sar
jge
mov
(bad)
cmp
test
pusha
and
sbb
pop
cld
jo
out
pop
jnp
fild
mov
lea
cmp
imul
ret
outs
leave
arpl
or
mov
cwde
jecxz
cmps
and
mov
daa
(bad)
sbb
(bad)
(bad)
pushf
(bad)
scas
add
push
cmp
(bad)
stos
xchg
test
pop
(bad)
cmp
mov
adc
inc
rcl
cmc
and
mov
inc
in
inc
scas
retf
loopne
add
xchg
mov
ja
mov
data16
push
mov
jmp
sub
adc
lods
lods
jecxz
adc
(bad)
jno
cmps
les
pop
sar
int
mov
lds
lea
int
(bad)
lds
mov
test
jne
mov
ins
sti
xor
lds
add
pusha
outs
adc
in
outs
add
push
cmp
call
scas
jno
jg
xor
(bad)
data16
adc
add
ss
dec
adc
shl
push
repnz
iret
mov
iret
mov
std
adc
aaa
in
outs
jmp
mov
jns
adc
push
ds
inc
test
mov
and
push
scas
idiv
(bad)
aas
mov
aas
xor
lods
sbb
fs
jno
jge
and
aas
xor
rcl
xchg
mov
movs
fs
test
movs
jp
or
jecxz
stos
cmps
xor
mov
aad
cmp
fwait
mov
inc
jl
xlat
cmps
outs
xchg
jp
retf
add
mov
ins
push
stos
mov
mov
mov
into
fiadd
adc
jmp
(bad)
cmp
jl
mov
fst
jno
xchg
out
push
fcomp
adc
pop
shr
cmp
jne
add
stos
cli
pop
je
sbb
ret
(bad)
mov
mov
jns
clc
lds
pop
lea
in
push
aaa
or
call
ret
or
ins
xlat
xor
daa
ret
into
adc
fcmovnb
mov
std
repz
repnz
int
xor
fldenv
(bad)
jecxz
mov
inc
daa
add
jno
lea
out
std
outs
push
xchg
or
call
in
mov
ficomp
inc
sbb
pop
(bad)
cli
aaa
dec
mov
jnp
jmp
into
jg
pusha
fwait
sub
inc
retf
xchg
aaa
aad
popw
sbb
loope
push
aaa
dec
gs
sbb
xchg
mov
es
xchg
xchg
aam
or
fcom
inc
fs
lea
or
ja
stos
cmps
adc
loop
(bad)
leave
xchg
cmp
jnp
inc
push
popa
jl
neg
xchg
mov
jae
fs
mov
aaa
pop
ds
mov
(bad)
clc
mov
or
outs
push
add
xchg
inc
jno
cld
and
shr
adc
mov
lds
lahf
test
mov
rcr
or
hlt
or
mov
in
lds
push
out
sub
jg
cmps
jge
ds
push
adc
int
stos
rol
mov
jge
movs
scas
push
and
sub
and
mov
and
push
stc
fadd
mov
div
mov
cmp
lahf
or
ss
pop
scas
movs
adc
(bad)
aaa
adc
dec
push
mov
cdq
movs
cli
push
shr
cmps
(bad)
inc
mov
xchg
in
test
pop
idiv
dec
jge
mov
das
jg
lds
push
mov
addr16
mov
dec
ret
xor
and
pop
sbb
div
jp
sub
push
mov
cmp
lods
push
(bad)
mov
sub
(bad)
into
fwait
and
push
mov
xchg
lds
xor
push
xchg
pop
or
aaa
fs
ins
lods
mov
xor
sbb
scas
(bad)
sub
mov
mov
jecxz
mov
mov
inc
jb
or
in
std
jmp
cmp
dec
mov
scas
pop
xor
cmp
sahf
call
fldenv
cmp
dec
push
sub
lods
cs
gs
xor
mov
mov
mov
cmps
push
xor
and
test
aam
scas
ja
xor
xor
push
adc
sub
sti
inc
mov
xor
ins
xor
inc
loopne
daa
int
or
scas
jo
mov
jle
mov
dec
jg
inc
push
adc
dec
fst
movs
sbb
and
mov
sub
lahf
mov
pop
aam
scas
mov
dec
stos
test
vmovshdup
adc
and
sub
xlat
sub
fwait
mov
cld
aaa
and
push
mov
mov
inc
xchg
ja
call
xor
daa
movs
and
sub
sbb
mov
mov
stos
xchg
dec
leave
adc
sar
adc
mov
repnz
xchg
leave
sbb
in
fisttp
jb
aaa
pop
leave
fist
pop
test
add
movs
pop
mov
pop
in
movs
push
out
aas
mov
dec
cmp
data16
gs
jmp
mov
retf
sub
cmc
mov
adc
adc
inc
cmps
jge
push
jecxz
bound
jb
adc
mov
add
mov
jmp
mov
xchg
xchg
mov
mov
call
lahf
je
push
adc
aad
jb
out
aaa
adc
ret
stos
pop
scas
and
cmps
and
enter
outs
push
(bad)
xor
rol
lods
mov
push
ja
ror
clc
das
data16
jmp
pop
enter
(bad)
or
mov
jbe
hlt
sahf
mov
jae
in
jnp
sbb
or
stc
(bad)
lahf
mov
jecxz
push
out
shl
jb
dec
pop
aad
and
inc
loop
mov
jo
sbb
hlt
add
shl
sub
test
sub
sub
inc
add
pop
jg
ret
mov
outs
sbb
(bad)
jo
jno
add
sbb
push
xor
jns
arpl
adc
pop
fst
cmp
int
cli
call
xchg
test
aam
mov
(bad)
push
jo
fisttp
jle
mov
iret
out
shl
fcomp
ss
or
movs
lds
call
fs
pop
movs
dec
lds
(bad)
data16
sbb
dec
retf
in
arpl
jne
cmp
mov
mov
(bad)
jmp
movs
jne
lds
mov
sahf
imul
mov
mov
dec
cs
jge
xlat
adc
adc
arpl
stos
mov
aam
pop
jecxz
xlat
outs
rcl
fs
sub
sub
adc
sbb
mov
out
les
out
cmp
adc
pop
adc
test
push
jmp
iret
pushf
cmp
xchg
adc
es
dec
xchg
sub
ja
sqrtps
cwde
jb
out
jge
adc
imul
loopne
mov
shr
shl
pcmpgtd
push
push
sub
pop
rol
inc
ror
xchg
in
mov
xchg
adc
int3
(bad)
pop
stc
dec
xchg
pop
imul
or
jg
movs
pop
adc
gs
adc
mov
ret
jg
ja
mov
scas
fcom
iret
cs
pop
cmp
mov
mov
mov
mov
push
pop
jb
pop
loopne
(bad)
stc
sub
adc
(bad)
mov
stos
call
cmp
je
mov
or
cli
arpl
rcl
jns
push
shl
pushf
stos
sub
dec
cmps
mov
xchg
and
icebp
daa
jmp
sar
mov
call
mov
sub
xlat
outs
dec
and
sar
int3
pop
lods
inc
adc
out
sbb
adc
outs
adc
push
or
in
ins
outs
in
dec
sub
gs
in
ja
stos
inc
mov
repnz
movs
fsub
jb
icebp
daa
mov
(bad)
pop
pusha
xor
or
sar
shl
mov
cmp
pop
cmp
stos
out
and
fst
cs
adc
ret
scas
mov
add
mov
jno
sub
clc
scas
aam
ret
rcl
add
(bad)
dec
aas
cmp
mov
xchg
sub
dec
xor
mov
daa
ss
xor
dec
push
imul
xor
pop
xor
ds
sbb
and
mov
push
pop
imul
stos
les
add
sbb
sar
and
inc
ins
mov
fnstenv
push
cmps
into
fisubr
adc
adc
aas
js
fcmove
bound
or
push
leave
fld
mov
mov
dec
sbb
add
push
mov
(bad)
mov
imul
jnp
cmc
cmps
xor
push
out
pop
xor
repz
icebp
dec
xchg
inc
cmp
mov
add
fucomp
lahf
push
(bad)
leave
adc
jno
das
add
movs
jnp
xchg
je
movs
and
adc
(bad)
in
pushf
or
setb
int
fist
fistp
call
sub
dec
cmp
add
pop
cmp
and
sub
loop
push
pop
or
les
aas
adc
dec
sbb
fldcw
outs
mov
jo
and
ds
jnp
pop
addr16
xlat
(bad)
mul
arpl
push
xchg
arpl
mov
jl
push
and
in
mov
cmp
shr
imul
adc
cmp
outs
(bad)
mov
pop
test
dec
push
sbb
or
stos
(bad)
imul
inc
call
sbb
loopne
adc
fdivr
jl
mov
xor
push
retf
cwde
jne
adc
add
or
xor
test
jo
mov
mov
and
sub
loopne
sub
cmp
daa
lods
sub
mov
(bad)
retf
std
clc
pushf
movs
mov
mov
dec
ficomp
xor
mov
jl
mov
in
push
xor
jb
sbb
ins
sub
cmp
adc
mov
jo
aam
enter
je
retf
mov
mov
sub
leave
gs
inc
in
les
fistp
fnstcw
jno
sbb
cmp
lds
sti
sbb
mov
scas
sbb
inc
in
or
push
mov
lds
push
mov
(bad)
xchg
test
mov
xchg
rcl
dec
dec
addr16
mov
ret
into
js
ret
sbb
je
dec
mov
in
pop
xchg
in
lds
mov
pop
lods
xor
sbb
jle
cmp
sbb
xchg
popf
jg
push
mov
mov
je
clc
jno
loope
js
outs
push
int
mov
and
repnz
xchg
xor
data16
loop
push
in
jmp
fbld
addr16
enter
sbb
loopne
xlat
fucomi
fs
test
aad
sti
mov
push
jl
sbb
mov
inc
mov
cmps
xor
loopne
xchg
and
cmps
inc
movs
(bad)
xchg
inc
loope
iret
jae
adc
adc
loop
mov
shl
cmova
push
int
les
jae
loopne
mov
stos
jge
rcr
inc
movs
aas
aad
out
dec
xchg
movs
cs
ins
jl
add
and
pusha
popf
outs
or
push
daa
cmp
stc
push
push
ret
adc
fidiv
jno
and
cmps
xchg
mov
dec
inc
cwde
pop
ds
or
in
mov
popf
les
fwait
les
cwde
(bad)
retf
adc
adc
jmp
xlat
in
lea
sub
add
add
lds
sub
scas
sub
inc
lock
inc
xlat
iret
push
cdq
es
loopne
je
sub
sti
stos
imul
add
push
adc
xor
jo
(bad)
xchg
das
pop
jo
mov
adc
inc
imul
js
sbb
ins
mov
cmp
add
stc
xor
pop
jno
jp
jnp
mov
in
mov
xchg
cs
add
dec
sbb
in
cmp
xchg
jnp
cmp
add
sub
clc
(bad)
call
push
mov
popf
jl
es
fs
mov
ins
ficom
adc
(bad)
aam
and
sbb
sar
lods
aam
mov
(bad)
fidiv
push
cmp
mov
(bad)
cmp
xchg
and
in
js
imul
int
push
ror
pop
rcr
aaa
ins
(bad)
adc
cmps
es
in
lods
pop
fdivr
(bad)
mov
rcl
daa
adc
scas
in
dec
mov
mov
mov
jmp
xor
imul
adc
sbb
stos
das
mov
push
pop
push
pop
test
cmp
xor
mov
push
or
or
aas
adc
adc
inc
je
or
fdivr
(bad)
cs
inc
aas
pop
fisttp
aas
mov
movs
dec
cmp
lods
in
jb
in
mov
stc
jne
sub
aas
movs
cmp
das
lods
ret
xor
cmp
addr16
shl
jbe
arpl
jb
or
arpl
lods
(bad)
jle
mov
cmp
sub
test
xor
pushf
xchg
scas
cmp
and
add
cdq
idiv
fnsave
stos
xor
aas
fild
dec
pop
shl
aaa
pop
gs
scas
cmc
pop
(bad)
fs
jmp
lods
pop
in
mov
cld
mul
dec
fist
bound
inc
mov
mov
call
jb
push
and
not
xor
aaa
aas
mov
cmp
mov
push
xor
(bad)
paddd
inc
mul
lock
inc
dec
mov
jle
stos
sub
sti
mov
sub
jbe
iret
in
(bad)
push
(bad)
jb
push
cmp
jbe
movs
retf
not
jmp
ficomp
mov
and
jnp
push
push
cmps
adc
cmovbe
imul
aas
xor
out
mov
mov
call
inc
push
jle
mov
jae
adc
call
in
rcr
dec
cmp
and
dec
lods
pusha
dec
add
inc
and
mov
jp
sar
fstp
sub
jb
mov
cli
les
enter
or
mov
fbld
and
imul
je
jnp
repnz
pop
sub
dec
out
xchg
mov
mov
push
cmova
mov
jb
data16
arpl
dec
pop
mov
pop
xchg
(bad)
inc
jle
inc
in
push
movs
adc
cmp
sbb
sbb
mov
in
adc
inc
jb
or
test
sahf
(bad)
cmps
xor
mov
add
cmps
and
fadd
cmps
imul
add
mov
(bad)
sbb
ret
cmc
ret
xchg
mov
or
jbe
add
pop
or
ret
imul
dec
call
out
pop
push
addr16
sub
and
sbb
je
mov
(bad)
aas
stos
cmp
sbb
ins
inc
mov
dec
retf
sbb
imul
jns
add
xor
sbb
repnz
xor
jo
adc
mov
dec
mov
fcom
shl
test
mov
movs
stc
mov
les
int3
out
jle
stos
mov
push
shr
and
push
jle
scas
mov
mov
pop
fwait
push
mov
push
xchg
in
lods
xor
outs
push
inc
stos
and
fsubr
sbb
fs
mov
or
sub
fmul
lds
es
mov
jmp
adc
aas
out
scas
inc
mov
xchg
in
jle
test
retf
mov
jmp
je
and
pop
icebp
dec
or
inc
adc
mov
jne
jl
ficom
cwde
stos
mov
dec
es
xlat
cmp
cmp
xor
jne
aam
lahf
add
mov
xor
sub
sbb
rol
pop
popa
mov
pop
and
cld
inc
lods
or
mov
jg
mov
mov
in
mov
jp
mov
add
push
mov
addr16
retf
cmp
mov
int
and
test
jecxz
imul
inc
sbb
fisttp
xchg
mov
xchg
loop
aas
outs
mov
and
rep
push
push
jmp
cli
cmovbe
inc
jp
cmp
add
call
dec
adc
ins
test
jge
ss
dec
adc
in
ror
or
mov
inc
movs
xchg
xchg
call
test
jo
(bad)
dec
mov
fidivr
cmc
sub
adc
scas
stos
fisttp
ds
or
aad
mov
sbb
mov
adc
mov
push
scas
es
dec
jecxz
rcr
sub
aam
jne
xchg
xlat
sbb
fild
mov
rcl
fnsave
xchg
mov
fstp
cmp
jne
retf
mov
imul
addr16
outs
sub
push
movs
daa
fldcw
rcl
je
mov
ins
cs
loope
push
shl
push
pop
cmps
xor
call
inc
int
dec
fist
inc
jmp
nop
loope
cld
push
push
sub
mov
mov
(bad)
adc
mov
or
scas
mov
mov
xchg
shl
cmp
mov
jno
or
loope
mov
aas
cmp
adc
jl
mov
clc
sub
lds
int
mov
jmp
pusha
sahf
xchg
js
fadd
arpl
and
ds
cmps
mov
push
mov
mov
adc
mov
mov
ss
adc
or
std
leave
push
xor
(bad)
cmp
mov
cld
sbb
sbb
call
fs
es
mov
popf
imul
mov
inc
ret
mov
lds
jb
popa
dec
pop
push
jb
cmp
outs
ficomp
iret
pop
mov
mov
arpl
inc
pushf
imul
inc
fild
xchg
push
ds
sbb
mov
mov
sbb
(bad)
aad
mov
cmp
js
cli
sbb
mov
stc
adc
(bad)
pop
in
(bad)
jge
cmps
pop
mov
sahf
mov
xor
das
(bad)
sub
bound
aad
push
jno
std
dec
pop
arpl
addr16
pop
jle
fs
repz
pop
and
mov
pop
jo
push
test
fstp
adc
nop
mov
pop
test
mov
in
and
fcomp
pop
mov
nop
or
in
lods
inc
out
rol
mov
adc
hlt
xchg
lods
adc
in
push
div
add
shl
adc
jmp
ins
js
dec
dec
dec
call
xor
xor
mov
mov
mov
pop
mov
scas
adc
mov
jno
adc
std
mov
test
es
mov
add
mov
stos
(bad)
retf
mov
jnp
fmul
mov
xor
rol
ins
mov
pop
xchg
arpl
xor
or
add
sub
ss
ds
out
test
xor
jmp
aas
pop
inc
movs
les
imul
rcr
cmp
lahf
mov
pusha
scas
inc
xor
lds
adc
retf
mov
xor
add
pop
push
aad
sbb
inc
mov
mov
lea
mov
lea
xchg
test
cmc
push
inc
popf
push
mov
sub
mov
(bad)
sti
gs
mov
lods
aad
(bad)
stos
xor
cs
xchg
mov
pop
outs
or
fwait
mov
jbe
mov
push
mov
pop
and
add
mov
out
mov
stc
mov
pop
les
(bad)
popa
pop
es
into
ret
push
pop
sbb
cmp
(bad)
ins
inc
mov
cmp
bound
sbb
aas
out
int
add
or
(bad)
add
pop
xor
dec
movs
cmp
push
and
inc
xor
mov
sbb
cmp
je
pop
sbb
pop
ins
inc
fidivr
push
adc
outs
aas
push
in
outs
jbe
jb
push
sti
jno
or
retf
xchg
cwde
and
mov
cmp
int3
mov
outs
je
int
std
sbb
push
pop
add
stos
inc
and
or
mov
jp
dec
ds
mov
mov
lds
dec
push
shr
dec
cmp
jae
das
or
test
outs
add
scas
jbe
jmp
add
or
push
cmps
xor
cwde
ds
and
or
ret
pop
es
or
addr16
dec
add
sub
fwait
jo
aad
int
stos
movs
(bad)
fisubr
mov
inc
lds
sub
mov
loope
fisubr
cmp
sub
es
(bad)
inc
mov
or
movs
shr
dec
xor
shr
cmps
jl
lds
test
std
jbe
cmp
call
cs
and
mov
cmps
ds
push
sub
fs
int
jecxz
popa
outs
repnz
(bad)
jo
add
cs
retf
je
popa
inc
xchg
sub
test
sub
sbb
jo
and
sbb
mov
in
sub
(bad)
mov
fwait
in
mov
push
fist
or
ror
and
jbe
popa
sub
leave
aam
and
sub
adc
jle
(bad)
fwait
into
pop
lock
push
jmp
and
addr16
mov
jae
shr
add
pop
pop
xchg
xchg
ror
jmp
pop
jbe
pop
mov
add
and
push
xchg
add
xor
daa
in
in
pop
add
into
mov
popa
inc
daa
jo
lds
cmps
xchg
scas
adc
retf
mov
xchg
stos
popa
pop
pop
sbb
test
pop
jnp
vsqrtsd
push
das
in
test
sub
push
mov
mov
mov
inc
push
mov
sub
sbb
jp
and
xchg
mov
out
mov
jl
rcl
lds
test
arpl
outs
nop
xchg
retf
lds
pop
inc
jmp
adc
mov
or
mov
lds
cdq
sbb
sub
jne
sub
ror
fisttp
sahf
leave
gs
mov
sbb
retf
xchg
and
xlat
(bad)
inc
mov
inc
add
or
(bad)
into
mov
xor
mov
retf
fcmovbe
(bad)
ins
fdivr
mov
in
inc
fsubrp
fiadd
dec
jnp
adc
rcr
add
xchg
mov
xor
sub
loop
inc
mov
(bad)
ins
mov
or
cmps
int3
scas
dec
sub
sbb
push
ins
sti
push
ret
mov
fsub
sub
int3
xchg
mov
cmps
pop
(bad)
dec
inc
push
push
add
daa
es
jp
sub
aam
push
push
lods
dec
sbb
scas
js
std
mov
jnp
inc
push
adc
movs
sbb
addr16
or
jno
jge
rcr
push
pop
and
outs
ret
js
mov
push
fiadd
jmp
fsub
push
mov
mov
and
sbb
mov
jle
xchg
shl
cmps
pop
mov
mov
mov
pop
retf
shld
cmp
cmp
and
fld
xlat
clc
jle
or
in
mov
mov
fist
fdivr
add
shl
push
mov
or
cli
jnp
cmp
in
or
cmp
scas
xlat
cld
inc
pop
pop
jmp
(bad)
test
adc
pop
(bad)
test
pop
mov
dec
test
xchg
jae
pop
in
in
out
fdivr
or
retf
icebp
xlat
cmp
cmp
shl
daa
mov
outs
sbb
addr16
mov
mov
ror
sub
lds
ja
js
dec
inc
lock
dec
arpl
add
cmps
stos
pop
mov
gs
mov
adc
sub
js
(bad)
leave
mov
sti
and
daa
dec
or
jnp
scas
repnz
mov
sbb
jp
not
es
cmps
loopne
outs
ja
es
or
push
stc
sbb
scas
jle
ins
sbb
xchg
lods
mov
fsub
mov
or
xchg
or
push
cmp
sar
mov
sbb
or
je
int
fiadd
cmp
sbb
mov
mov
and
leave
cmps
mov
jnp
cmp
and
xchg
sahf
fidiv
cmp
and
mov
lea
ss
pop
pusha
xchg
sub
mov
mov
enter
add
xchg
lds
jo
mov
lock
xchg
mov
push
xor
cmp
cld
mov
scas
xchg
rcr
push
mov
popa
mov
mov
cld
dec
adc
aas
sti
adc
pop
scas
stos
inc
lds
(bad)
mov
add
lds
dec
shr
cmp
clc
loopne
call
xchg
and
pop
clc
fdiv
movs
mov
cmp
mov
movs
cmp
psrlq
in
adc
add
es
ss
mov
pop
jge
ficom
adc
cld
push
call
je
ret
aaa
sub
xor
outs
ror
js
nop
imul
inc
push
movs
sub
cmp
or
pcmpgtw
std
cmc
mov
dec
cmp
add
(bad)
mov
push
loop
jo
clc
scas
cdq
jecxz
jle
cmp
sar
fdivr
xchg
pop
je
(bad)
push
mov
add
stos
pusha
retf
std
aaa
int
jbe
dec
out
addr16
stos
or
inc
frstor
xchg
js
les
xchg
lds
ret
xor
mov
cmp
jno
es
mov
pop
std
stos
int
xchg
cmp
rol
imul
cmps
jnp
and
jo
jge
cmps
adc
aam
repnz
cld
jg
pop
mov
icebp
and
aam
cmp
inc
mov
push
sbb
shr
(bad)
sbb
mov
es
xchg
fdiv
add
xor
mov
xlat
mov
imul
stos
mov
and
dec
daa
stos
pop
mov
into
push
push
adc
mov
lds
inc
adc
or
jb
jp
mov
mov
add
in
xlat
jmp
and
mov
mov
das
test
cmp
adc
dec
(bad)
test
outs
out
sahf
sub
ins
push
cmps
retf
add
xchg
movs
lods
dec
inc
fcomp
(bad)
push
jb
adc
adc
cmovl
sbb
scas
mov
loop
pop
adc
int3
in
bt
xor
shr
enter
pushf
mov
inc
out
pop
xor
data16
sub
loopne
scas
lds
ins
in
lahf
(bad)
into
jns
mov
push
lods
(bad)
and
add
lds
test
out
mov
sbb
idiv
sbb
or
test
mov
lds
jecxz
jo
and
mov
mov
mov
(bad)
xor
inc
sahf
cmp
fs
sub
das
pop
xor
mov
mov
cmp
(bad)
fild
sub
scas
call
call
seta
(bad)
jb
std
outs
(bad)
pop
jae
fdivr
fwait
lds
inc
out
popa
ins
push
mov
mov
xchg
cmpxchg
aaa
ja
xchg
xrelease
cmps
inc
add
mul
in
jge
inc
or
lods
jmp
in
out
mov
mov
test
movntps
repz
xor
out
ja
jmp
out
clc
fistp
add
aad
or
cs
sbb
lea
rcl
cmp
sbb
pop
sbb
imul
push
cmp
ja
in
add
sub
and
adc
ins
mov
dec
jne
stos
dec
add
mul
or
jmp
mov
dec
and
mov
mov
das
sbb
sub
jnp
or
xor
cld
ret
mov
cmp
pop
imul
gs
mov
call
repnz
mov
neg
mov
(bad)
fidiv
out
in
aas
jg
sub
mov
pop
ja
add
inc
lods
enter
rcr
sbb
push
mov
lea
push
mov
cmp
fisttp
cmova
jns
push
push
stos
ret
mov
cmp
xor
jle
ss
cmps
test
mov
add
stc
add
sar
push
mov
scas
(bad)
jp
jle
fucompp
pop
dec
cmp
es
sahf
fwait
(bad)
jmp
out
adc
pop
test
iret
xor
adc
test
aas
mov
cdq
mov
and
lods
push
stos
xchg
(bad)
xor
inc
xor
mov
pusha
add
lods
(bad)
adc
cmp
adc
lods
daa
mov
repz
inc
dec
int3
xlat
test
pop
aas
sub
gs
gs
pop
jae
test
pop
xchg
pusha
test
push
jmp
pop
add
jg
jo
inc
aaa
dec
movs
mov
sub
ss
mov
test
mov
pop
or
jbe
test
mov
jnp
jge
push
mov
sub
jmp
sbb
add
mov
fstp
jl
mov
rcr
in
into
xor
loopne
pusha
pop
cmp
pop
(bad)
icebp
cdq
sbb
add
gs
pop
pop
lods
mov
movs
jle
or
mov
fs
in
mov
outs
add
jno
jo
and
shr
adc
sub
je
push
sbb
(bad)
out
outs
cmp
aas
jmp
pop
sbb
inc
mov
aaa
xor
repnz
mov
into
add
fcomi
ret
cmps
mov
icebp
jbe
and
mov
fld
movs
movs
mov
and
lds
xchg
mov
sbb
mov
popf
jg
in
out
adc
push
cld
and
out
stc
inc
(bad)
addr16
ret
sbb
int
or
addr16
cld
push
ins
xchg
sbb
mov
push
xor
jl
and
stos
xchg
arpl
data16
mov
fsubr
call
pop
jg
fnstcw
jo
test
aaa
sti
pop
(bad)
icebp
mov
inc
push
cmps
jge
lods
xor
std
adc
lds
inc
(bad)
jne
cmps
fwait
mov
cdq
aas
xchg
fsubrp
pop
imul
pop
stos
(bad)
mov
lods
(bad)
in
stos
jg
mov
stos
push
cli
ins
pop
inc
pop
mov
dec
xor
sub
pop
sbb
cld
mov
and
shr
xor
loop
ret
xchg
jb
pop
mov
cmp
movs
pop
xlat
pmovmskb
mov
ret
arpl
xor
lods
arpl
mov
xor
mov
retf
pop
jns
arpl
add
and
mov
push
push
mov
movs
adc
outs
jb
ret
push
(bad)
mov
jl
and
mov
push
mov
js
mov
stc
adc
ja
cmps
and
fs
rcl
jno
xchg
shl
fist
aas
and
pop
fwait
jg
and
pop
mov
popf
push
add
in
jp
xchg
jbe
lea
jge
and
jmp
ja
xchg
or
xchg
mov
fadd
int3
mov
inc
mov
sub
imul
jns
test
cmp
cwde
cmp
xor
dec
mov
mov
adc
das
xor
adc
jnp
pop
sub
pop
(bad)
mov
fs
xchg
ins
(bad)
shl
inc
popa
pop
sbb
inc
and
xchg
cld
lahf
push
jle
or
inc
jge
xchg
lock
jb
adc
adc
mov
xor
outs
xor
dec
mov
sbb
daa
mov
shl
jbe
fucomi
scas
inc
push
ja
jne
loop
outs
fwait
jp
or
test
jge
dec
or
ins
aad
adc
add
adc
je
jo
dec
ins
aaa
adc
(bad)
push
stos
dec
sub
sar
pop
mov
sti
pop
cmp
dec
push
mov
pusha
in
ja
nop
js
mov
jb
retf
lds
imul
mul
fstp
test
push
mov
(bad)
or
dec
jmp
pop
(bad)
sbb
shl
mov
xor
fild
mov
and
cmps
xor
in
frstor
mov
push
(bad)
push
xchg
adc
movs
cli
out
cmp
stos
adc
shl
ret
dec
or
gs
xor
dec
mov
pushf
call
adc
out
fnsave
mov
push
mov
or
sbb
ins
adc
cwde
sub
in
xchg
sar
push
test
mov
aam
stc
mov
icebp
mov
mov
imul
in
pop
push
dec
shl
mov
imul
enter
rcl
cmp
test
fdivr
xchg
je
sbb
adc
loopne
adc
test
ret
mov
(bad)
je
fwait
push
ror
mov
fdivr
sahf
jno
movs
jp
cli
les
jno
fst
(bad)
pop
test
xor
stc
sub
fnstsw
movs
cmps
ror
push
fsub
push
mov
push
or
movs
(bad)
mov
or
cmps
std
cmp
xor
mov
in
pop
idiv
iret
xchg
mov
js
adc
or
jmp
mov
mov
xchg
outs
scas
mov
sub
aas
push
xor
bnd
paddq
push
daa
xor
(bad)
push
jae
add
retf
(bad)
cdq
xor
pop
loope
ds
xchg
call
jecxz
mov
test
inc
mov
scas
or
repz
inc
cld
outs
xlat
stc
jmp
mov
test
das
and
and
scas
(bad)
push
dec
push
mov
dec
movs
(bad)
pushf
pop
and
les
xchg
popf
mov
arpl
stos
das
mov
lea
xchg
cmp
mov
sub
(bad)
mov
(bad)
mov
in
lds
mov
popa
cmp
(bad)
ret
lods
jl
or
xlat
jmp
rol
sub
fwait
jg
dec
scas
push
data16
mov
sbb
jp
ins
rcl
xchg
(bad)
aad
jne
mov
js
aad
mov
and
xchg
dec
adc
std
add
push
stos
cmc
popa
loop
addr16
lds
data16
gs
mov
stos
cmp
scas
fisttp
aam
xor
mov
lds
xor
jne
xor
cmp
jg
imul
cwde
pop
outs
(bad)
aaa
rcl
sub
aas
fidivr
push
dec
pushf
movs
push
adc
inc
mov
add
jo
add
sub
test
push
shl
cmps
fist
or
pop
pop
and
fild
lock
xchg
xchg
(bad)
popa
iret
xor
in
outs
arpl
add
mov
mov
es
lock
ins
cmps
jp
add
pusha
rcl
mov
push
mov
push
cmp
mov
mov
aam
(bad)
loopne
push
mov
jnp
rol
stc
jbe
stos
xlat
std
jns
fnstcw
cmp
push
mov
outs
icebp
dec
jmp
bound
fcmovne
rcr
(bad)
loopne
loop
cwde
xlat
dec
out
or
pusha
bound
push
mov
xor
in
fcmovne
addr16
das
cwde
xchg
sbb
cmp
jecxz
std
scas
ror
jmp
or
xchg
lds
cld
(bad)
out
jnp
jp
dec
cmp
add
and
jbe
cmp
pop
retf
stc
xor
int
dec
jo
dec
addr16
js
jno
pop
push
add
xchg
es
das
(bad)
lods
jle
das
aam
test
cmps
das
dec
inc
pop
mov
scas
mov
lds
dec
xor
int3
pop
es
dec
repnz
inc
sar
stos
(bad)
jno
mov
ret
pop
xchg
cmp
ds
sbb
mov
lea
lods
(bad)
shl
movs
inc
das
mov
mov
(bad)
adc
jg
movs
jmp
inc
jb
adc
neg
sub
xchg
xor
call
and
xchg
inc
cmp
scas
mov
test
pushf
add
cmps
and
sbb
push
jecxz
push
mov
popa
(bad)
outs
loope
(bad)
iret
sbb
daa
sbb
js
dec
pop
jg
les
pop
cmp
into
jl
inc
and
cmps
lds
repnz
lods
push
lods
jne
stc
push
push
add
xor
or
test
out
int
fs
sub
inc
mov
or
movs
jle
push
push
sub
add
das
add
push
inc
fidivr
cli
daa
imul
(bad)
mov
inc
sahf
scas
cmp
jge
cli
imul
adc
movs
jmp
cmps
sub
sub
ror
es
sbb
push
and
rol
mov
fnstcw
push
cs
add
xchg
scas
cmp
test
pop
adc
cmp
mov
inc
arpl
adc
mov
sbb
data16
popf
dec
scas
sub
(bad)
pop
jmp
lds
shl
sbb
retf
popa
ror
rcr
daa
pushf
movs
(bad)
das
sbb
(bad)
push
popa
mov
and
push
mov
cwde
les
(bad)
pusha
(bad)
test
push
enter
daa
(bad)
mov
cmps
sub
ret
movs
mov
movs
repz
cmp
mov
sbb
cmps
cmps
adc
or
loopne
xchg
je
in
clc
cs
out
clc
mov
mov
outs
sub
aas
stos
sub
mov
or
push
je
xchg
inc
aas
jns
bound
bsr
xor
cmps
pop
in
jp
and
in
test
add
push
fidiv
dec
pop
adc
scas
(bad)
mov
mov
dec
enter
dec
pop
cmp
rcl
cmc
iret
cmp
ret
mov
sar
sbb
cmp
mov
jmp
cmp
jmp
aas
push
(bad)
adc
sub
lds
mov
dec
pop
fldcw
mov
lods
mov
mov
cmp
ret
sbb
and
mov
sub
aas
cmp
and
push
out
push
(bad)
mov
add
stos
(bad)
mov
call
idiv
dec
add
inc
out
xchg
xor
shl
cmps
or
pop
icebp
sub
push
sub
mov
pop
inc
cmps
mov
rcr
nop
ins
frstor
das
cmps
xchg
in
fcmovb
bound
cmp
fdivr
or
adc
push
push
pop
push
cmp
(bad)
enter
cs
lahf
retf
mov
inc
mov
ffree
aaa
or
mov
push
sahf
fwait
and
cmp
pop
std
or
adc
jne
cmps
push
and
sti
movs
adc
dec
inc
push
nop
stos
jb
(bad)
fstp
xchg
lds
mov
rcr
xchg
push
jne
jns
ret
sbb
jae
mov
or
add
xor
jae
jp
adc
test
jg
cli
xchg
push
mov
inc
adc
dec
mov
pop
cli
enter
mov
fsubr
dec
cmps
push
sbb
ficomp
dec
mov
cld
lods
out
in
cmp
add
scas
loop
out
aas
sub
nop
stos
sub
and
sub
mov
or
scas
push
(bad)
in
loop
pop
jo
xchg
xchg
mov
sub
(bad)
mov
add
pop
test
cmps
mov
push
xchg
add
sti
push
dec
mov
fmul
in
ret
push
xlat
or
pop
xor
leave
outs
scas
popf
arpl
aaa
cmps
lds
xchg
out
adc
adc
xlat
cld
jge
and
gs
adc
jmp
in
push
popf
out
ror
jbe
sub
out
(bad)
cmp
shl
xchg
(bad)
mov
(bad)
fist
outs
lea
mov
pop
cs
rcl
movs
xor
sub
arpl
mov
lods
and
jns
lock
push
cmps
cld
(bad)
sub
lea
mov
xor
dec
dec
daa
test
lea
scas
sbb
mov
and
ret
iret
dec
mov
out
ret
mov
adc
ret
jl
mov
mov
add
sub
ds
dec
jl
sbb
stos
push
pop
push
shr
lahf
rcr
inc
sahf
inc
xchg
(bad)
mov
xchg
adc
push
es
push
addr16
in
outs
rol
adc
cld
fisttp
push
mov
jnp
retf
gs
mov
mov
adc
mov
es
dec
jge
push
(bad)
and
jnp
je
stc
inc
mov
movs
jns
das
data16
pop
sbb
dec
sbb
xchg
imul
dec
loope
lea
test
rcl
nop
adc
ret
test
icebp
pusha
scas
les
cld
lds
retf
and
pop
adc
movq
cmps
das
ret
call
push
mov
inc
xor
pop
add
mov
sbb
push
add
mov
stc
sar
jmp
mov
enter
sbb
inc
cmp
cmp
or
push
mov
xor
or
sub
xor
push
pop
and
xchg
mov
stc
fcmovnb
xchg
mov
pop
stos
dec
addr16
sbb
inc
fdivr
retf
pop
xchg
lds
xchg
jle
std
leave
fs
mov
push
cmps
jp
stc
mov
jecxz
dec
jbe
xor
popf
xor
adc
or
adc
outs
push
cld
cli
dec
lods
mov
fsub
stos
adc
cmps
xchg
inc
iret
movs
jg
stos
xchg
or
aas
sbb
sbb
imul
in
(bad)
cmp
lods
scas
mov
cmp
data16
or
outs
dec
and
out
daa
adc
shl
add
or
dec
cmp
push
jge
retf
imul
int3
scas
sar
ficomp
xchg
sub
mov
and
sbb
cmps
les
xchg
jl
add
aam
sar
sbb
mov
dec
outs
daa
cli
aas
dec
pushf
xlat
mov
lods
ror
aam
xchg
(bad)
push
ret
adc
inc
test
jne
cmp
outs
aas
pop
cs
mov
pop
stc
loop
nop
(bad)
js
es
nop
movs
inc
call
sub
push
mov
fwait
jge
jns
jle
add
in
jecxz
test
rcr
jmp
aam
retf
pop
imul
mov
sub
loop
fnsave
xchg
(bad)
mov
sub
test
(bad)
push
jle
mov
xchg
lea
cmp
(bad)
adc
mov
or
je
sub
xchg
cs
push
mov
gs
cli
outs
mov
movs
enter
mov
int3
adc
jecxz
ins
xchg
lds
cmp
jl
push
(bad)
mov
aas
pop
adc
outs
mov
jg
addr16
lods
loop
enter
mov
leave
cmp
shl
(bad)
pop
mov
ret
inc
mov
mov
jge
movs
sbb
mov
sbb
popa
add
sub
jmp
pop
int3
dec
inc
mov
(bad)
xchg
icebp
int3
test
aas
push
stos
inc
cmp
cmp
stos
xchg
fdivr
cmp
sub
adc
or
je
les
into
push
rol
adc
fild
and
push
and
mov
popf
mov
push
aad
dec
xchg
into
cs
mov
pusha
xor
pop
dec
add
repnz
sub
jge
add
movs
push
mov
cmp
repz
addr16
outs
push
xchg
pusha
push
mov
retf
and
dec
inc
pop
mov
mov
neg
push
mov
les
pop
lahf
fidivr
popa
mov
out
xor
outs
jo
push
sbb
scas
jl
lds
pop
in
cmp
jno
js
sbb
loopne
and
push
dec
outs
sub
retf
nop
in
inc
ins
daa
iret
xlat
fadd
jb
lds
scas
(bad)
jle
sub
adc
out
daa
sahf
je
movq
adc
ja
mov
adc
sub
and
es
in
xchg
lock
push
sar
imul
cmps
mov
push
stos
icebp
pop
inc
xchg
xor
mov
cmc
mov
jl
arpl
cs
gs
outs
aas
inc
cmps
pop
jo
dec
mov
xor
(bad)
imul
imul
scas
xor
inc
pop
movs
push
adc
inc
lds
and
jmp
in
lds
jbe
xor
bound
stos
pop
lods
mov
jns
cmp
fld
xchg
ret
add
cmp
mov
(bad)
push
xor
lods
xlat
ds
into
adc
adc
arpl
enter
cdq
xlat
test
xchg
movs
jbe
xor
or
pop
cmp
aas
mov
push
xor
scas
sti
les
lds
inc
ficom
(bad)
scas
les
and
inc
mov
idiv
inc
jmp
stc
sub
icebp
add
lods
outs
rol
xchg
sbb
mov
fiadd
sbb
inc
shl
shr
jg
or
dec
ficom
(bad)
std
pop
jno
dec
cmp
nop
sti
rol
(bad)
rol
fs
adc
mov
mov
lock
xor
dec
mov
es
inc
leave
pusha
mov
dec
mov
fs
shr
push
sti
or
cmps
(bad)
or
cmc
pop
xor
lss
dec
push
fst
ja
(bad)
or
shr
xor
mov
sub
fisttp
loopne
sub
add
sub
popa
js
mov
sbb
jmp
push
ins
stos
call
lock
jmp
arpl
mov
les
jo
(bad)
cmc
inc
retf
cmp
imul
(bad)
jb
mov
iret
and
inc
stos
sbb
mov
sbb
cmp
enter
dec
lock
dec
fnsave
jmp
add
jbe
fidiv
push
jl
sar
dec
scas
xchg
fnstcw
enter
ds
cmp
push
rcl
lds
or
mov
lahf
fisub
lods
pop
jbe
mov
sbb
leave
fs
retf
xchg
xchg
aam
das
cmps
or
lock
gs
mov
ins
add
lods
mov
xor
push
xchg
movs
pusha
pop
xlat
retf
in
dec
fs
xor
push
add
inc
xor
xlat
mov
ret
fs
inc
stos
xchg
mov
fsubrp
js
jns
xchg
mov
ret
jmp
outs
in
mov
int3
mov
sti
xlat
dec
stos
adc
mov
mov
mov
mov
stos
inc
pop
shr
xor
adc
in
jecxz
adc
and
in
imul
cmps
cmp
dec
or
mov
mov
xor
gs
stc
les
dec
push
mov
adc
cmp
lods
(bad)
adc
cmp
add
mov
adc
xchg
mov
addr16
dec
xchg
(bad)
lods
jg
dec
adc
test
ret
mov
setns
dec
lea
into
sub
mov
mov
add
ds
iret
in
or
pusha
xchg
jg
dec
std
jbe
sbb
bound
clc
fst
or
outs
mov
mov
(bad)
pop
jae
sub
call
cmp
jns
loope
pop
mov
sub
fild
pusha
jne
(bad)
sbb
xchg
add
out
pop
rol
fisub
scas
test
mov
or
mov
out
mov
mov
dec
imul
dec
pop
or
ja
sbb
inc
out
adc
push
das
xchg
cmps
je
mov
mov
xacquire
fstp
cwde
mov
push
fisttp
mov
bound
push
push
dec
(bad)
jmp
pop
sbb
lock
sub
js
or
into
sub
mov
jmp
jne
shr
in
vucomiss
jmp
mov
outs
daa
(bad)
pop
jp
jecxz
ficom
mov
retf
out
test
mov
out
xor
sahf
sbb
adc
nop
pusha
mov
cmc
push
or
ss
repnz
gs
(bad)
fxtract
cmp
add
in
or
adc
pop
ret
pop
push
push
mov
xor
mov
test
add
xchg
mov
pop
push
and
jb
mov
es
rcl
inc
push
fmul
jmp
stos
xor
xchg
mov
pop
push
or
lods
cmps
adc
fld
sbb
jo
or
push
or
jecxz
knotb
fdiv
mov
or
in
aaa
addr16
lock
mov
dec
shr
or
repnz
nop
cmp
dec
or
loop
rcl
mov
pop
cmps
addr16
push
ret
popf
and
dec
out
stc
xor
add
or
test
stos
in
or
push
add
inc
mov
jo
and
ror
rcr
div
shl
imul
movs
mov
mov
ror
inc
pop
mov
arpl
clc
imul
inc
inc
sbb
sub
sar
loopne
or
sub
ret
call
das
fnstenv
cmp
or
shl
in
jns
in
or
xchg
fistp
mov
jo
out
aas
mov
inc
jno
out
sti
pop
test
iret
les
repz
mov
mov
sub
lods
js
xor
aam
pop
nop
popa
jnp
push
mov
inc
shl
dec
stos
mov
rcr
mov
jae
pop
cmp
pop
adc
jno
aaa
mov
loopne
imul
mov
pop
add
sar
enter
jo
sub
movs
lods
inc
aad
adc
das
jbe
scas
dec
jmp
and
jbe
js
jns
pop
push
pop
mov
imul
retf
cmps
call
cmp
(bad)
fnstcw
xor
in
pop
test
test
icebp
les
push
mov
(bad)
in
bnd
stos
out
shld
cmp
test
aaa
mov
cwde
in
cmp
xchg
pusha
rcr
xchg
cli
mov
xchg
mov
imul
jb
xor
je
shl
pop
aad
inc
sar
jg
sub
mov
mov
out
retf
jl
push
lds
cmc
pusha
jne
ds
mov
test
adc
jno
inc
push
scas
push
xchg
and
xchg
fs
aad
add
fs
inc
jmp
mov
and
mov
push
wrmsr
jl
aaa
dec
cmps
out
jne
inc
sub
push
and
pop
(bad)
mov
arpl
sub
cmp
sub
push
ss
jo
enter
inc
sub
xchg
pop
xchg
call
mov
mov
ret
sahf
jmp
jp
outs
cwde
fwait
inc
sahf
xchg
push
dec
loopne
aad
pusha
add
push
pop
adc
fs
dec
dec
pop
scas
or
js
mov
fstp
pop
add
inc
test
xchg
icebp
or
test
in
pusha
pushf
lds
add
mov
xor
pop
and
ret
std
or
add
jl
or
adc
jns
dec
test
mov
jg
cmp
ret
imul
(bad)
cmps
xchg
pop
stos
sub
and
cmp
fdivr
dec
fnsavew
repnz
and
mov
mov
pop
push
test
stos
cmp
jecxz
add
jb
and
(bad)
(bad)
pop
pop
fwait
lds
je
ret
mov
cli
cmp
xchg
sti
and
adc
mov
cmps
in
pop
push
sub
jo
outs
add
xchg
fs
or
je
les
sub
call
cmp
(bad)
inc
movs
cmc
mov
lds
inc
pop
out
sub
fwait
or
test
outs
jmp
vhaddpd
mov
inc
inc
dec
cli
sbb
mov
fucom
xchg
into
call
jg
adc
outs
inc
cmp
push
iret
xchg
cmps
lds
jo
inc
es
add
mov
xor
or
inc
out
dec
sub
(bad)
mov
cmp
push
adc
jnp
(bad)
movs
pop
cmp
mov
xor
add
and
xor
cmp
leave
fadd
les
jb
test
xor
mov
mov
pop
in
fst
fcom
int
lods
imul
in
pop
lds
xchg
xor
(bad)
pop
mov
cld
mov
cmps
nop
xor
adc
call
enter
inc
push
adc
xchg
pop
(bad)
jo
fucom
add
jnp
cmp
mov
mov
pop
xchg
das
mov
inc
movs
out
jle
fstp
ins
pusha
outs
pop
mov
dec
and
(bad)
jmp
xor
jge
imul
dec
jecxz
jle
dec
jecxz
mov
jmp
clc
push
rcl
jnp
shl
dec
and
inc
je
cmp
xor
jb
retf
cld
(bad)
div
js
sbb
cld
sbb
dec
fisttp
(bad)
mov
fadd
cmps
xchg
add
jg
int3
aas
jnp
or
test
push
sub
mov
cmps
popf
push
(bad)
stos
sub
cwde
pop
pop
sahf
mov
je
jp
dec
pop
push
sbb
or
lds
inc
cmps
xlat
in
mov
push
cmp
aam
call
test
xor
mov
leave
sub
ins
xchg
mov
imul
xor
pushf
mov
adc
retf
lds
inc
icebp
rcr
mov
out
xor
adc
js
push
enter
into
inc
jb
jge
mov
rol
rcr
mov
add
ja
daa
lds
ins
lods
outs
or
mov
cld
cmp
arpl
test
pop
cmps
mov
outs
mov
iret
cmp
rcr
mov
xor
daa
out
push
test
lds
movs
xor
aas
xor
lea
and
pop
inc
add
xor
pusha
aas
push
movs
adc
pop
movs
ja
mov
lahf
sub
xchg
and
aad
pushf
cmp
and
jge
fsub
scas
jl
sub
cwde
loope
sbb
cmp
shr
push
xor
jbe
add
push
inc
pusha
in
fwait
inc
in
mov
fs
aam
xor
push
mov
mov
(bad)
mov
fsub
inc
repz
loopne
mov
xor
mov
test
lahf
loope
cmps
sbb
scas
and
pop
xchg
mov
mov
fdivr
or
jl
fisttp
adc
arpl
in
icebp
inc
inc
scas
xchg
loope
inc
pop
sahf
or
jnp
fwait
mov
adc
ins
jb
add
cmp
add
data16
btr
lds
xlat
les
pop
rcl
sub
xlat
cmc
adc
xchg
inc
enter
lods
push
call
push
push
aaa
jmp
add
mov
cmp
push
xchg
push
pushf
adc
mov
pop
dec
sub
jl
sahf
test
hlt
(bad)
popa
sti
aaa
xchg
fisub
add
inc
mov
stos
ror
mov
and
and
mov
jge
mov
mov
mov
enter
mov
sbb
test
repz
fnstcw
call
test
and
xor
sar
jno
jns
fstp
push
cmp
mov
ffreep
in
sub
movs
leave
call
arpl
xor
add
outs
in
pop
xchg
mov
and
xchg
xor
(bad)
push
test
mov
push
mov
stos
cmp
push
(bad)
data16
jmp
sbb
jbe
mov
(bad)
push
mov
jo
nop
in
imul
stos
test
pop
std
inc
jno
clc
push
inc
popa
leave
ror
shr
cli
clc
and
mov
sub
mov
in
loope
stc
in
push
inc
jns
sub
(bad)
jmp
jecxz
cmp
sbb
int
mov
sub
dec
sti
(bad)
push
or
inc
pop
in
je
outs
ret
and
push
pop
leave
sub
cmp
jg
adc
lds
imul
dec
stos
adc
(bad)
aam
dec
ficomp
mov
inc
adc
cdq
sub
pop
shr
(bad)
dec
xchg
or
inc
jns
sbb
cs
es
cmp
mov
xchg
fst
mov
stc
mov
xchg
mov
or
cmps
call
jnp
in
in
jno
jne
outs
push
dec
and
jge
jo
cmc
in
addr16
pop
out
xor
mov
clc
lds
pop
inc
jg
cmp
inc
jo
js
rol
ds
adc
adc
lds
inc
js
xchg
test
(bad)
clc
sar
add
add
lds
in
xchg
sbb
mov
mov
dec
shr
outs
inc
lahf
loope
int3
mov
adc
jae
sbb
push
jle
daa
sar
lock
adc
inc
jp
std
sbb
xor
jb
cli
cmp
int3
lock
dec
mov
jae
stos
mov
sar
cmps
adc
jbe
cs
mov
clc
test
cmp
mov
or
inc
sbb
cld
popa
push
dec
test
stos
rol
cmp
in
sbb
cmps
stos
sub
inc
sbb
lahf
iret
daa
mov
inc
dec
hlt
pop
ja
hlt
jae
fsubr
(bad)
iret
lds
int
mov
aam
mov
sub
xor
lahf
add
pop
xor
jl
fdivr
fstp
sbb
cmp
cmp
repz
jle
pop
pop
sub
push
(bad)
sti
bts
ror
(bad)
push
sub
in
inc
ret
cmp
cmp
sbb
sub
push
or
(bad)
scas
es
pop
std
add
inc
enter
in
push
pop
mov
(bad)
fisubr
cmp
fimul
call
inc
adc
out
cmps
daa
rcr
stos
inc
mov
fsub
mov
lods
jmp
xor
arpl
call
sub
outs
in
xchg
out
shl
xor
sbb
sub
mov
(bad)
push
bound
cmp
xor
aad
inc
popa
add
and
movs
lea
movs
cmp
jmp
inc
shr
imul
mov
scas
inc
(bad)
ror
lea
sti
cmp
(bad)
fld
ins
xchg
cmp
aaa
dec
test
fstp
add
jno
mov
test
dec
sub
call
jno
cwde
out
clc
in
rol
in
xor
clc
(bad)
cwde
punpcklbw
jne
aam
add
mov
sti
xchg
sar
and
dec
pop
push
cmp
adc
add
cmc
scas
lds
les
fwait
rol
popa
cmps
adc
imul
jle
std
cmp
cld
mov
cs
sub
pop
icebp
mov
and
inc
xlat
dec
fsubr
xchg
outs
xor
xchg
jno
mov
adc
scas
leave
sub
in
inc
pushf
mov
cli
cmps
test
ins
jb
mov
mov
js
test
jnp
cmps
mov
sbb
outs
sub
cmp
ret
and
into
inc
pop
adc
and
inc
test
xchg
xchg
ret
mov
xchg
and
std
inc
mov
or
cwde
xchg
out
adc
xor
clc
pop
inc
mov
outs
or
push
jmp
xor
push
std
xor
mov
aas
mov
mov
jne
pop
cld
sub
xchg
gs
push
push
and
in
aad
jno
mov
xchg
fld
push
fadd
dec
add
scas
inc
(bad)
jmp
pop
lahf
sub
add
mov
repnz
jbe
adc
cmp
repnz
ins
(bad)
aas
icebp
jbe
or
mov
ja
out
aam
pop
jnp
pop
(bad)
inc
outs
jbe
mov
iret
inc
pop
cdq
sbb
and
mov
(bad)
xchg
mov
pop
clc
ds
shl
or
xlat
dec
inc
test
fst
bound
mov
dec
test
stc
mov
or
es
dec
test
lahf
inc
maskmovq
test
inc
outs
mov
mov
aad
or
jge
stos
int3
retf
iret
or
gs
adc
lds
jnp
jb
ret
(bad)
js
dec
out
idiv
mov
jae
xor
daa
jp
ret
retf
add
jne
fdivr
aas
repnz
leave
nop
loop
outs
mov
(bad)
out
mov
retf
or
popa
mov
vdivps
mov
movs
mov
adc
sub
dec
xor
aad
ins
sbb
test
fldl2e
(bad)
ror
sub
push
fst
xchg
icebp
mov
mov
mov
jecxz
mov
lds
or
test
inc
sub
mov
jnp
fld
mov
xchg
ja
xchg
push
sar
cmp
add
sbb
or
xchg
xor
push
or
dec
jg
lahf
add
repnz
int3
sbb
sub
loope
stos
ret
out
sub
je
(bad)
fisttp
mov
adc
cmp
imul
ror
jns
adc
test
jle
mov
daa
fild
adc
jp
cmp
mov
outs
jns
lds
movs
fwait
add
inc
sub
(bad)
out
outs
and
sub
nop
jg
sahf
mov
or
popf
xchg
mov
(bad)
mov
ja
mov
cmp
cmp
aas
dec
inc
dec
push
push
mov
aas
(bad)
fsubrp
xor
and
cmp
shl
mov
dec
xchg
push
mov
add
loop
popa
out
hlt
lods
sti
adc
inc
sub
fcmovbe
xor
xchg
shr
cmp
test
sti
int
sti
out
xchg
adc
fdivr
ds
aaa
aas
push
mov
pop
jl
mov
fnstsw
lods
mov
mov
ror
(bad)
mov
inc
aas
in
aas
push
jg
or
mov
inc
xchg
add
lahf
addr16
adc
enter
lahf
mov
movs
pop
jmp
push
mov
shl
push
sahf
xor
pop
or
out
fcmovbe
sahf
cmp
outs
ret
mov
cmc
aad
int3
cmp
sub
adc
jo
dec
cld
jne
fild
dec
cmps
pop
pop
push
pop
sub
inc
mov
jae
and
pop
dec
inc
call
lahf
mov
xor
sub
fsubr
jae
fadd
neg
dec
sar
aaa
sahf
add
jb
inc
inc
movs
int3
(bad)
mov
mov
scas
pop
inc
xor
retf
mov
movs
mov
mov
ins
add
mov
mov
shr
je
call
cmp
lods
rcl
sbb
aaa
call
daa
in
nop
movs
jecxz
es
js
(bad)
cmp
pop
ret
les
adc
inc
test
scas
cdq
xor
sbb
cld
mov
xchg
pop
stc
dec
out
mov
xchg
leave
pop
jo
xchg
adc
dec
adc
movs
mov
mov
icebp
sbb
mov
inc
jge
in
push
repnz
push
xor
xor
inc
call
mov
loop
popf
or
ins
mov
add
mov
repnz
fimul
lds
push
mov
in
jb
dec
mov
fcom
cmp
out
stos
inc
stos
retf
pusha
ds
dec
fcom
lock
push
add
cmp
shl
popa
int3
inc
mov
and
jl
mov
dec
jo
ror
mov
jle
mov
jmp
fdivr
neg
test
inc
mov
jb
cmps
lods
cmp
loopne
mov
cld
jle
and
xor
aas
in
ffreep
(bad)
jg
push
inc
mov
xlat
(bad)
jb
mov
call
int3
movs
mov
add
outs
add
jmp
push
cmp
cmp
test
add
into
(bad)
jle
aas
pop
jmp
sbb
dec
and
lds
outs
test
push
lea
add
mov
call
retf
lods
add
pop
pop
cs
add
jmp
pop
int3
fmul
cmp
adc
shl
mov
cld
jge
scas
pop
rol
mov
mov
jae
jle
pop
lea
add
arpl
addr16
mov
add
pop
psubusb
add
js
ds
cmp
push
(bad)
jp
jle
test
std
inc
mov
fcmovbe
aas
aaa
pop
xor
popf
cmp
mov
(bad)
(bad)
add
xchg
cmp
lods
movs
cmp
pop
mov
mov
adc
dec
cwde
(bad)
cs
push
repz
sub
daa
scas
inc
fdiv
mov
adc
pop
add
sbb
jge
mov
ja
movs
cli
add
adc
mov
sub
dec
in
dec
jb
scas
adc
inc
inc
mov
xchg
ficomp
(bad)
sbb
sbb
or
push
(bad)
(bad)
sub
push
sbb
out
cmp
imul
jo
mov
mov
mov
in
cdq
adc
daa
(bad)
jg
(bad)
mov
test
sbb
or
xor
xchg
fnstsw
retf
jnp
mov
(bad)
fisttp
(bad)
adc
mov
inc
or
dec
stos
push
inc
or
cli
jg
cmova
(bad)
push
ins
adc
ja
mov
mov
inc
imul
sub
push
and
mov
dec
inc
lods
inc
(bad)
pusha
retf
sub
stos
add
outs
add
mov
aam
add
inc
add
pop
mov
adc
push
xchg
mov
push
(bad)
jae
push
lock
or
adc
cld
icebp
es
icebp
loop
into
lahf
mov
sub
mov
mov
outs
pop
dec
icebp
inc
jl
and
cmp
add
xchg
test
adc
out
pop
test
iret
cmps
pop
or
push
mov
xor
fs
or
mov
sbb
pop
std
jg
gs
js
and
not
mov
lds
rol
sbb
xchg
ret
(bad)
pop
outs
inc
sbb
test
adc
jmp
jbe
xor
push
cli
mov
inc
or
(bad)
fldcw
jmp
lock
mov
ins
and
cld
out
or
adc
cmps
sub
rol
or
xor
push
sub
sub
leave
cmp
mov
imul
outs
mov
std
or
test
jne
mov
mov
aas
jmp
cwde
inc
jns
aaa
fldcw
in
loope
iret
push
mov
mov
jmp
jo
lods
adc
in
les
mov
pop
out
aaa
in
fdivr
aas
push
adc
(bad)
sub
movs
dec
add
ins
test
cli
and
mov
imul
test
out
xchg
sub
cmp
das
add
(bad)
sub
fwait
pusha
push
mov
mov
iretw
pop
dec
or
shr
rol
jecxz
scas
iret
xor
push
sub
movs
ins
cmp
cs
outs
(bad)
mov
xchg
sub
into
and
mov
mov
inc
adc
imul
mov
je
cmps
rcl
or
or
addr16
dec
inc
int3
push
xchg
call
test
test
adc
cmp
outs
call
retf
pop
push
ss
mov
jne
mov
lods
xchg
ret
loope
pop
add
stc
cmp
fiadd
adc
sub
rcl
aad
push
iret
sub
in
dec
xchg
stc
dec
jns
(bad)
jne
dec
adc
(bad)
movs
mov
or
cs
cs
retf
sbb
fnsave
xchg
cmp
cs
lods
push
jp
aas
test
inc
or
mov
outs
jp
stos
aam
pop
pop
shr
daa
cmp
adc
or
lods
out
ss
fldcw
lahf
lahf
jg
inc
out
clc
stos
pop
adc
test
xlat
add
xor
daa
jmp
jmp
cmp
xchg
ja
test
cmps
pusha
pop
movq
adc
mov
cmp
jnp
ins
sbb
scas
inc
pusha
hlt
mov
jg
into
imul
dec
adc
pusha
ss
jbe
(bad)
(bad)
xor
mov
(bad)
sub
mov
cmp
outs
(bad)
cmp
rcr
xor
push
jl
mov
jge
into
mov
(bad)
fistp
sub
js
imul
fld
and
lea
adc
fistp
movs
sbb
(bad)
and
and
fidiv
jmp
je
cmp
(bad)
imul
xchg
div
or
bound
pop
je
(bad)
and
in
and
push
mov
mov
lods
adc
in
(bad)
je
sbb
lds
(bad)
sub
(bad)
js
fldenv
sub
das
adc
dec
cmp
jmp
in
lods
mov
cmps
and
and
push
enter
clc
inc
loope
fsubr
sub
cli
cs
jge
push
cmp
and
cmp
add
into
xchg
add
xor
retf
cmp
dec
adc
jge
lods
cmps
xor
inc
je
jmp
mov
adc
(bad)
rcl
jecxz
adc
push
pop
js
fsub
les
mov
(bad)
jl
xchg
or
jns
mov
sbb
pop
cmp
mov
pop
cs
outs
fnstenv
add
adc
sub
(bad)
fs
add
lds
pushf
hlt
movs
pusha
jp
dec
or
jb
js
jg
dec
xor
je
jg
bound
sbb
div
and
and
or
mov
adc
xchg
lds
dec
pusha
outs
gs
enter
aam
rol
and
hlt
stc
xchg
jmp
ja
sub
jno
out
pop
sti
cld
movs
sbb
push
call
inc
and
sub
push
sbb
or
jne
rcl
mov
mov
shr
out
(bad)
lods
int
dec
pop
mov
cs
sub
dec
stos
mov
adc
inc
mov
leave
arpl
(bad)
ss
push
ror
arpl
or
clc
jo
jmp
clc
(bad)
bound
mov
jp
push
sbb
sti
cwde
add
test
xchg
dec
push
pusha
jb
or
aas
adc
inc
add
pop
xlat
aas
push
lds
sbb
push
stos
dec
jle
mov
cmp
test
add
movs
push
pop
aam
jae
cs
mov
js
std
(bad)
push
or
outs
call
mov
je
mov
adc
pop
xor
or
in
add
dec
(bad)
frstor
nop
sbb
test
inc
xor
cmp
jl
xchg
aas
ja
or
cwde
lods
repz
lods
cmp
mov
jp
and
push
or
lds
xchg
les
push
or
sbb
ret
xabort
sti
lahf
or
adc
xchg
and
test
lds
fidiv
mov
lods
sbb
stos
(bad)
and
cli
or
in
sub
es
jb
jl
stos
mov
jb
xchg
push
dec
add
lds
push
popa
std
jp
out
outs
ror
es
xchg
shr
pop
xchg
les
clc
lds
loope
xchg
(bad)
mov
test
daa
sbb
pop
push
ja
pop
xchg
push
cs
cmp
sbb
inc
push
cmp
jo
fistp
mov
fcomp
je
push
retf
test
popf
cs
aam
je
and
adc
(bad)
sub
sub
retf
push
outs
cmp
pop
push
mov
loop
add
mov
lods
(bad)
out
in
sub
and
ficom
jnp
ret
jg
lods
jnp
(bad)
cmp
or
fist
push
mov
out
es
ja
js
lock
(bad)
outs
hlt
rcl
or
mov
push
cmp
lds
daa
aas
add
mov
cmp
add
in
and
cli
ret
lods
dec
mov
mov
sub
xchg
inc
out
dec
mov
mov
adc
int3
cwde
push
sbb
test
xchg
add
or
movs
pop
fiadd
xchg
cli
adc
add
icebp
inc
ret
fwait
std
dec
das
inc
fs
adc
je
cmc
lods
inc
lahf
xor
lock
mov
sub
add
xlat
stos
stos
inc
mov
jle
les
lds
pop
in
mov
mov
in
cli
mov
scas
inc
lods
mov
mov
mov
stos
fs
test
rol
or
cmp
sahf
adc
vcvttpd2dq
scas
cdq
movs
pusha
mov
push
(bad)
xor
jle
iret
aas
cdq
lds
aaa
sub
jb
scas
xchg
sti
loop
cmps
adc
shl
cmp
cmc
cdq
faddp
fwait
lock
es
cmps
fcomip
gs
jp
xor
inc
inc
mov
xor
loop
lds
int3
jg
mov
es
pop
aas
aaa
stos
(bad)
pushf
jae
dec
call
push
sbb
mov
inc
jo
and
xor
and
lods
mov
dec
sbb
lods
js
inc
mov
and
dec
retf
movs
scas
push
xchg
add
mov
dec
lock
jp
fldl2e
mov
push
cmp
push
movs
gs
sbb
pop
loope
xadd
jbe
ins
lds
addr16
inc
cmp
lods
and
mov
mov
loop
lds
adc
cmp
cmps
adc
mov
lods
cli
cmp
movs
mul
xchg
cmp
(bad)
sbb
gs
mov
mov
jb
iret
sbb
adc
div
mov
xlat
jle
clc
cdq
mov
not
cli
push
mov
mov
mov
adc
sbb
std
repz
gs
aaa
aas
fdivr
mov
dec
add
sub
loopne
sbb
pusha
jnp
sti
sbb
ja
sti
mov
or
push
mov
xor
dec
nop
loop
lahf
pop
sub
push
mov
daa
cmps
lahf
bound
stc
lods
inc
lea
mov
jl
or
sbb
adc
inc
jp
adc
lock
xchg
xchg
sbb
sbb
push
xor
es
shr
leave
sbb
mov
inc
out
sub
xor
xor
das
test
and
outs
pop
push
dec
fbld
adc
outs
es
(bad)
mov
or
loope
addr16
in
gs
jecxz
stos
out
call
loop
cmps
sub
repnz
in
shr
jmp
jno
mov
jl
pop
jle
stos
cs
or
aas
dec
mov
jecxz
or
lds
adc
stos
out
loop
xor
leave
mov
add
aad
and
(bad)
aas
adc
and
mov
push
cmp
sub
repz
in
xchg
daa
fcmovnb
push
cmp
lock
cmps
xchg
and
add
mov
xor
call
xchg
shr
es
out
xchg
jge
nop
outs
fsub
dec
pop
mov
shl
pop
bound
lods
sub
or
js
pop
or
leave
inc
xchg
daa
adc
xchg
cmps
(bad)
mov
xchg
scas
stos
jbe
stc
mov
sub
ret
sub
sub
adc
push
add
lds
lods
mov
xchg
movs
cs
fcmovbe
int
sub
ds
sti
ffreep
loope
add
cs
xchg
out
iret
inc
or
std
scas
cmp
in
mov
lahf
lahf
jge
and
movs
outs
pop
inc
inc
jo
cdq
mov
and
rol
sahf
sbb
xor
lea
cmp
pushf
dec
lods
repnz
mov
and
cmps
push
mov
jmp
mov
fcomp
adc
adc
fmul
mov
lds
leave
retf
jne
or
scas
mov
push
mov
lahf
push
mov
(bad)
mov
push
adc
daa
jns
cdq
jbe
and
stos
nop
adc
and
ins
sahf
ror
jp
ss
mov
add
jge
push
das
lds
fist
sub
adc
sub
sub
jp
movs
sbb
in
adc
pop
lds
jae
movs
mov
adc
cmc
jmp
jne
shr
mov
push
daa
or
fdiv
fstp
adc
sbb
test
xor
cmc
ror
cmc
retf
std
mov
and
fisubr
mov
jmp
out
clc
or
ror
adc
inc
adc
ss
jae
ds
push
jmp
aas
loope
pop
aam
mov
(bad)
inc
push
lods
rol
xor
imul
dec
mov
fadd
daa
es
sti
mov
shl
into
aas
in
xlat
gs
std
retf
(bad)
idiv
es
dec
mov
(bad)
push
das
ret
mov
dec
and
mov
xchg
aaa
push
mov
xchg
in
movs
lea
jle
jge
inc
pushf
scas
add
add
(bad)
scas
inc
xchg
jmp
pop
inc
or
mov
stc
ss
imul
popf
sti
jne
iret
lea
push
in
push
cli
add
mov
(bad)
push
dec
xchg
push
dec
repnz
jp
or
cmps
clc
adc
leave
outs
adc
mov
stos
xchg
xchg
jg
mov
bnd
movs
(bad)
fldenv
cwde
pop
or
aad
mov
add
dec
inc
loopne
or
jmp
jg
jge
mov
mul
shr
jmp
push
push
mov
imul
xchg
push
(bad)
cmp
sti
jae
jecxz
dec
retf
fs
jge
sar
and
mov
push
dec
cmps
int3
iret
mov
xlat
outs
jae
dec
lds
push
pop
mov
outs
(bad)
cdq
cdq
inc
int3
or
sub
(bad)
sar
rol
fimul
sti
adc
int
mov
es
adc
push
push
or
sub
pop
adc
mov
es
pop
cmp
imul
ficom
inc
data16
clc
cmp
inc
stos
je
jge
sbb
push
pop
sub
ins
adc
jo
jb
pop
les
cmp
sub
xor
and
movs
sub
js
xchg
pop
test
lea
pop
jmp
(bad)
fsub
das
pop
int
push
xchg
xchg
and
xchg
or
mov
(bad)
ja
ins
inc
lds
or
sbb
jmp
into
sub
xor
push
pop
and
or
lahf
push
jp
jns
pusha
or
stc
mov
mov
adc
jmp
jb
movs
pop
sbb
retf
mov
stos
add
adc
xor
aad
adc
sbb
sub
mov
jp
or
fwait
pop
xor
xchg
arpl
jo
and
ror
inc
popf
push
and
xlat
sbb
jno
pop
test
cld
fs
(bad)
aad
adc
popa
fwait
adc
add
sahf
sub
imul
mov
scas
dec
test
(bad)
jmp
call
jg
sbb
sti
ds
dec
les
add
call
inc
push
movs
mov
or
mov
gs
out
popa
add
punpckhdq
je
pop
jecxz
pop
lds
jp
imul
jmp
lds
lahf
(bad)
(bad)
out
rol
loop
in
fs
das
mov
cwde
cmc
enter
popa
fistp
mov
jmp
mov
cmps
ror
cmps
dec
loopne
ret
sbb
(bad)
(bad)
sub
lock
xor
call
sub
xor
sbb
mov
nop
cmps
sar
lds
es
scas
adc
mov
jg
jecxz
pushf
out
mov
add
enter
sub
scas
jmp
inc
ss
es
ja
xchg
cmps
sub
add
fild
scas
movs
enter
sub
jno
fdivr
adc
mov
inc
sub
jge
outs
sar
mov
aam
rcr
sahf
shl
cmp
pop
adc
jns
cmp
in
out
push
addr16
pusha
jge
and
cmps
(bad)
ds
cmp
push
cmp
retf
sub
retf
icebp
mov
pop
ficomp
xchg
loope
push
fwait
and
or
sahf
ja
jnp
cmps
in
mov
stos
cmp
jno
fistp
cmp
cmps
sub
jno
or
rol
cli
add
inc
jo
cmp
mov
out
cld
inc
adc
shl
fdivr
pop
movs
lock
pop
xchg
pusha
retf
sbb
cmp
(bad)
pushf
push
(bad)
inc
pop
addr16
pop
mov
in
ror
lds
lods
pop
(bad)
cmp
and
jg
mov
in
add
mov
jp
repnz
rcr
cmp
jo
mov
push
and
ret
inc
or
arpl
movs
das
add
adc
mov
jne
outs
aad
sbb
test
aam
addr16
fdiv
xchg
test
adc
stos
in
push
or
sar
cmp
movs
pop
jnp
dec
cmp
cs
fwait
cmp
(bad)
dec
fcomp
add
mov
addr16
in
dec
add
js
or
inc
cdq
inc
movs
mov
sti
ja
in
outs
cs
mov
jo
mov
dec
mov
(bad)
aad
jns
imul
adc
popa
xchg
test
aas
arpl
pop
sbb
add
(bad)
mov
add
rcr
cmps
add
jno
cli
movs
adc
test
aam
jne
(bad)
inc
fcomp
xchg
mov
jae
imul
pop
scas
inc
(bad)
cmc
das
xchg
push
sbb
cmp
ins
pusha
pop
rcr
inc
mov
in
mov
mov
add
repnz
hlt
les
scas
sub
shl
retf
div
scas
push
mov
dec
(bad)
call
inc
mov
push
out
cmps
mov
mov
fstp
and
outs
jo
call
aad
push
int3
mov
ror
cwde
jp
popa
or
outs
push
push
(bad)
adc
in
enter
aas
xor
dec
emms
pop
(bad)
pushf
or
ret
xor
dec
fdivr
push
adc
inc
icebp
inc
mov
pop
mov
aas
int3
cmp
popf
dec
mov
push
(bad)
jmp
aad
(bad)
shl
xchg
cmps
jg
in
or
ins
ss
fimul
jbe
or
idiv
popf
adc
xchg
inc
and
nop
push
dec
cli
add
pusha
sbb
mov
cmp
rcr
jl
sub
xor
das
test
and
adc
push
movs
mov
stc
jns
add
mov
sub
retf
lods
das
lea
test
(bad)
icebp
inc
push
das
sti
xor
cmp
mov
in
shl
push
popf
cld
test
fs
(bad)
gs
(bad)
pop
movs
(bad)
jmp
outs
xchg
test
pop
aam
retf
test
mov
cmp
hlt
scas
push
mov
xchg
jge
cwde
sar
adc
shr
add
shr
sub
fcomp
pop
or
test
rcl
or
rol
cmp
daa
iret
out
mov
fsub
xchg
test
sar
push
pop
mov
dec
ins
scas
or
retf
js
dec
mov
mov
or
nop
jmp
aam
dec
adc
fisub
neg
xchg
mov
and
pusha
std
aam
ins
cwde
sbb
es
cmp
adc
ret
push
or
xor
sub
dec
pop
sbb
or
icebp
mov
and
outs
mov
xor
cmp
(bad)
mov
das
cmp
scas
sbb
sub
adc
xlat
sbb
arpl
jge
ret
cmps
jmp
push
mov
add
pop
mov
lahf
mov
ret
sbb
nop
aaa
jnp
cmp
mov
(bad)
xchg
cs
test
inc
ficomp
mov
das
inc
push
sbb
sbb
mov
lds
stos
outs
mov
sar
iret
dec
rcl
inc
mov
push
loop
sbb
sub
jp
xchg
daa
jbe
in
lds
push
sbb
jbe
or
mov
dec
neg
lea
jp
lds
(bad)
adc
sahf
push
mov
neg
(bad)
add
fst
hlt
out
jmp
out
jne
and
lea
jae
std
outs
sbb
cmps
cs
inc
or
addr16
into
pop
popf
add
push
sar
push
cmp
or
aad
stos
sub
cmp
xor
and
(bad)
pop
fldz
fcom
mov
jbe
mov
add
adc
mov
movs
jno
add
std
pop
outs
jnp
das
in
outs
sub
hlt
inc
clc
fiadd
jmp
xchg
sti
pop
ror
stc
aas
mov
repnz
dec
rcl
stos
jo
mov
movs
and
data16
loop
(bad)
sar
aas
pop
xor
(bad)
mov
scas
pop
and
pushf
aas
mov
ds
sar
scas
lds
cs
test
xchg
jno
adc
aad
frstor
xchg
mov
mov
ins
or
mov
ss
xlat
scas
push
lds
dec
into
in
sub
pop
shl
fsubr
movs
jns
sbb
mov
jnp
push
dec
iret
cmp
inc
add
sub
adc
sbb
test
in
adc
dec
jb
cli
pop
imul
test
inc
test
jo
pop
movs
in
int
dec
(bad)
xor
cmps
cmp
sbb
sbb
add
fadd
jmp
(bad)
into
mov
cld
sbb
ins
and
adc
jle
sub
sub
sahf
add
je
xchg
fdivp
dec
xchg
arpl
pop
inc
in
pop
sbb
cmp
mov
test
or
or
lods
scas
cld
retf
(bad)
jnp
adc
sbb
push
stc
mov
mov
lods
mov
add
push
leave
cmps
lahf
pop
loope
imul
dec
arpl
inc
imul
ds
add
call
mov
mov
mov
or
out
dec
loop
mov
sub
mov
mov
ins
cmc
std
mov
mov
jecxz
repnz
jbe
test
inc
add
outs
out
int
jns
jmp
cmps
imul
data16
or
and
xor
mov
push
pop
mov
lds
dec
inc
xor
inc
pusha
or
push
(bad)
ror
(bad)
push
or
cmp
adc
inc
stos
mov
or
bound
movs
xor
xchg
jae
mov
rol
add
fild
js
fisub
movs
inc
fsubp
outs
xor
popf
pop
sub
dec
pop
mov
adc
or
push
mov
shr
push
(bad)
icebp
cdq
lods
xchg
addr16
js
add
out
mov
or
in
cmps
and
sub
jl
aad
stc
cmp
or
fs
mov
mov
cmp
test
inc
fdiv
pop
jp
xchg
out
les
sbb
and
push
mov
sbb
daa
jg
inc
xor
jno
psllq
leave
mov
popa
cli
jmp
in
pop
nop
idiv
jno
imul
mov
jae
dec
test
js
sub
inc
cmps
fisub
jnp
outs
sub
in
sub
cmp
cmp
adc
add
xchg
mov
scas
xor
movs
sti
icebp
ror
frstor
sub
lahf
mov
cmps
pop
les
adc
add
rol
mov
loop
or
jo
in
mov
imul
mov
and
dec
stos
aam
cld
jl
cmp
movs
xchg
daa
inc
loop
xor
dec
sub
pusha
mov
mov
add
outs
(bad)
mov
jle
inc
sub
push
pop
mov
sbb
sub
xchg
inc
or
outs
cmp
stos
pop
xchg
dec
fisub
scas
cmp
dec
mov
rcl
je
in
clc
mov
aad
inc
into
js
push
sub
sbb
dec
sbb
outs
mov
fldenv
pop
std
shl
mov
cs
test
mov
je
lahf
cld
(bad)
dec
popf
cmp
lahf
xchg
pop
fcmovne
sbb
pusha
jmp
cmp
pop
hlt
mov
and
and
popf
arpl
sub
add
pop
btr
stos
jmp
pop
(bad)
pop
mov
mov
sub
cmc
mov
(bad)
es
and
jne
dec
add
mov
in
mov
das
mov
lds
push
and
or
fadd
jmp
pop
push
jg
xlat
cmc
aas
or
adc
hlt
mov
lahf
add
adc
movs
dec
sub
mov
cmp
imul
inc
into
jo
xchg
stc
shl
(bad)
icebp
lds
call
adc
jo
in
xchg
popf
lods
inc
jl
adc
cmc
cmps
adc
cmp
add
ror
jecxz
movs
lods
retf
pushf
std
clc
mov
or
mov
or
push
mov
rcl
(bad)
jg
lock
push
xor
aas
jge
rcl
mov
xchg
daa
fiadd
lds
into
xchg
inc
clc
mov
arpl
call
add
xchg
pop
data16
not
mov
rcr
xchg
in
das
cmps
in
mov
xor
mov
pop
sar
mov
sbb
in
(bad)
pop
adc
push
push
jbe
xchg
mov
or
adc
aad
mov
adc
sahf
xor
add
cmp
sti
mov
imul
jl
lahf
pop
mov
or
daa
adc
int
inc
stos
pushf
and
ror
in
ins
dec
and
popa
das
mov
fcomp
push
dec
pop
pcmpgtw
adc
sub
fnstenv
clc
push
xchg
aas
mov
test
ret
and
mov
lea
jg
aas
inc
lds
out
jae
cwde
fs
pusha
push
test
enter
adc
lea
cdq
jp
repnz
xchg
jnp
data16
js
add
js
stos
scas
add
mov
pop
in
inc
(bad)
or
retf
pop
pop
rcr
stos
add
(bad)
jnp
pop
jl
jns
adc
out
jno
inc
inc
inc
mov
(bad)
(bad)
push
movs
out
clc
sbb
repz
icebp
adc
(bad)
in
sbb
addr16
mov
stc
xchg
sbb
or
pop
fld
outs
mov
in
sbb
or
daa
mov
or
adc
and
add
add
fmulp
test
push
mov
push
add
out
mov
inc
dec
sub
inc
pop
mov
fstp
rcl
movq
sbb
mov
ins
aas
adc
js
daa
movs
lds
cmp
mov
test
mov
(bad)
(bad)
scas
adc
jmp
jno
out
xor
xor
js
sbb
and
test
cmps
test
inc
sbb
inc
mov
mov
idiv
jnp
rcr
pop
outs
jecxz
mov
cld
or
fimul
rcr
bound
jle
and
shl
jmp
xor
xlat
push
popf
sub
in
cmp
call
jnp
jge
inc
shl
(bad)
test
add
cmps
les
inc
bound
and
retf
stos
xchg
xchg
lahf
fdiv
ret
(bad)
test
stos
mov
xor
push
jg
shl
addr16
lds
call
jg
sbb
push
add
jnp
cmp
xlat
(bad)
fwait
(bad)
fisttp
mov
in
jle
call
mov
push
mov
cmp
cmp
adc
and
rcl
jge
pop
jbe
repz
(bad)
jl
jmpw
pusha
or
jno
pusha
mov
sub
inc
icebp
add
stos
ja
pop
adc
test
jnp
xchg
aad
add
ja
dec
mov
ret
jg
icebp
out
daa
stos
mov
jns
mov
jne
enter
neg
mov
or
jmp
push
dec
mov
dec
mov
sub
cld
inc
cmp
sbb
outs
out
(bad)
loopne
cmp
jb
mov
call
cmps
(bad)
data16
int
std
imul
mov
add
leave
mov
in
js
retf
inc
je
retf
push
ins
pop
sub
push
scas
(bad)
aad
popa
pop
(bad)
mov
ret
add
jmp
inc
daa
ja
jo
sbb
sub
add
jmp
add
dec
test
(bad)
imul
and
(bad)
mov
outs
mov
jmp
or
ja
or
pop
out
add
outs
add
cmp
ins
jp
push
push
stos
mov
xor
pusha
or
jae
and
sahf
inc
and
ins
icebp
rcl
cmc
cs
xchg
jle
add
xchg
inc
stos
retf
out
mov
(bad)
mov
or
rol
aad
xor
(bad)
mov
scas
cmps
data16
out
imul
ds
dec
dec
in
dec
jmp
inc
cmp
aas
fistp
xor
in
repnz
arpl
inc
bound
mov
aas
cmp
mov
sbb
mov
sub
inc
mov
push
jne
iret
sub
pop
test
mov
movs
in
dec
mov
call
ret
(bad)
mov
(bad)
xchg
(bad)
fnstsw
retf
adc
loope
mov
add
icebp
cs
mov
mov
xor
fnstsw
loop
(bad)
out
mov
ds
fld
pop
mov
cmp
cmp
jle
mov
test
inc
cld
cmps
sbb
cmp
stos
lds
pushf
ret
loop
cs
mov
mov
shl
or
ja
mov
ins
into
inc
stos
or
mov
xchg
or
sbb
add
sub
daa
outs
shr
sbb
cmps
inc
(bad)
cli
jecxz
mov
cmp
fsubr
(bad)
outs
jge
pop
pop
add
sub
std
stos
inc
xor
icebp
cmp
cmp
iret
xor
adc
push
sub
neg
sbb
arpl
(bad)
adc
rcl
nop
jg
gs
scas
mov
mov
sbb
xchg
cdq
icebp
in
lds
mov
push
inc
adc
mov
add
sar
sub
int3
xchg
js
sbb
lds
xlat
mov
mov
jl
les
and
lods
mov
iret
das
mov
movhps
out
in
rcl
cmp
jg
adc
dec
in
movs
pop
push
pop
or
loopne
mov
pusha
or
repz
xor
jle
lods
inc
jb
push
push
lods
mov
xchg
ins
div
lds
fiadd
add
stos
shl
daa
mov
push
mov
retf
pop
push
(bad)
and
fdivr
and
mov
xor
aaa
xor
in
outs
gs
xor
scas
in
dec
push
xchg
sbb
push
stos
jbe
fs
xor
test
(bad)
sub
fistp
dec
push
add
inc
add
cld
imul
ror
sub
mov
cmc
shl
leave
(bad)
sti
inc
and
push
les
cli
sti
ror
cmp
vpandn
pop
push
pusha
push
(bad)
mov
cmp
call
(bad)
cs
inc
das
inc
xchg
stos
dec
sbb
push
xor
push
cmp
sub
mov
add
sbb
mov
ror
jb
jecxz
pop
cmps
std
lahf
adc
dec
int3
pop
mov
mov
paddd
(bad)
xchg
jge
lds
clc
sbb
scas
push
imul
in
gs
cmps
cmp
mov
std
adc
dec
aas
sbb
clc
test
popf
aaa
ror
not
into
inc
mov
xlat
mov
adc
loopne
push
xchg
cmp
loope
int3
out
push
lea
(bad)
mov
(bad)
push
jl
xchg
or
(bad)
popf
lahf
mov
call
jo
cmp
inc
mov
jecxz
xor
movs
les
jmp
cmp
ss
push
cs
out
loop
shl
movs
inc
cmps
fld
or
movs
jge
cmp
pop
dec
mov
adc
outs
addr16
jno
sub
js
and
xchg
lds
je
pop
arpl
out
cld
mov
or
cmp
jns
pop
mov
int
test
outs
(bad)
in
jbe
xor
gs
aam
jge
jge
pusha
ins
push
movs
daa
test
loopne
aad
dec
and
outs
pushf
sub
adc
xabort
xchg
mov
ret
jp
std
add
mov
loop
fist
and
fwait
jl
dec
daa
sbb
data16
iret
fnstenv
or
(bad)
test
or
movs
dec
sub
lods
or
jns
add
mov
popa
xchg
xchg
jae
cs
and
in
jns
loopne
push
xchg
stos
mov
rcl
jae
add
pop
(bad)
mov
sbb
cld
(bad)
iret
shr
lds
es
mov
test
jg
in
and
xchg
pop
push
inc
ja
popa
and
sub
int3
(bad)
fstp
xchg
(bad)
dec
outs
in
jns
xchg
stos
jp
xor
fsubr
cmp
sbb
cmps
and
xor
(bad)
inc
rcl
and
inc
addr16
push
pop
cmps
(bad)
or
xchg
jl
lods
mov
xchg
call
and
and
cmp
sahf
push
or
mov
xlat
nop
int
lods
call
aam
(bad)
xor
fnstcw
and
icebp
inc
and
ins
jecxz
adc
push
ficom
push
stos
rcr
xor
mov
cdq
sub
pusha
adc
stos
jmp
les
popa
cmps
cmp
and
div
adc
scas
adc
iret
mov
cmps
pushf
mov
out
pop
outs
sub
or
scas
adc
and
imul
cmp
movs
(bad)
gs
int
lods
push
fwait
jno
data16
xchg
jns
fdivr
gs
jge
cmp
push
jnp
outs
xor
inc
in
mov
xchg
adc
xor
int3
and
mov
js
fldenv
in
stc
imul
sub
push
(bad)
mov
aaa
sbb
cmc
jbe
push
cmps
gs
cmp
sahf
jns
fneni(8087
neg
pusha
mov
mov
js
jp
retf
iret
mov
cmp
aad
pop
or
aas
mov
mov
push
inc
test
shr
(bad)
mov
loopne
test
pop
dec
or
dec
jge
dec
jle
adc
and
xor
xor
dec
jno
sbb
and
adc
(bad)
mov
xor
je
mov
js
out
into
(bad)
fcmovnb
enter
stc
std
cwde
imul
mov
mov
cmps
sub
xor
push
(bad)
int
mov
(bad)
jno
cs
lds
mov
addr16
cli
cwde
mov
bndstx
push
jo
fidiv
sbb
push
push
out
repz
lods
mov
jno
or
jbe
inc
loopne
push
dec
cli
add
lods
lds
lods
and
(bad)
rol
loope
add
sub
inc
mov
mov
cdq
fwait
test
out
mov
je
lds
test
fstp
iret
popa
cmp
cmp
mov
sub
js
pop
xchg
lds
into
dec
jnp
cmp
js
sbb
in
out
jmp
jp
stos
adc
sar
lahf
das
in
sbb
sti
inc
cmps
leave
test
mov
jbe
mov
sbb
aas
pop
push
mov
(bad)
and
(bad)
popa
adc
stc
add
mov
jbe
push
retf
mov
jb
push
push
ret
jns
gs
pushf
clc
push
inc
sbb
int3
cmp
mov
into
and
inc
cmps
and
inc
jle
mov
(bad)
ins
adc
scas
push
(bad)
aad
test
call
mov
mov
sub
dec
mov
xor
sahf
pop
pusha
test
repz
add
or
cmp
scas
inc
push
jns
faddp
loope
out
jl
cmps
or
fwait
cmps
push
aas
lods
scas
lds
loopne
push
xlat
mov
adc
jl
mov
cmp
and
inc
cmps
mov
push
sbb
loopne
aam
loope
add
and
dec
cwde
mov
push
cdq
stos
dec
mov
mov
add
mov
sub
add
or
sbb
jl
xor
add
arpl
push
jmp
sbb
jne
mov
inc
(bad)
mov
lds
(bad)
mov
(bad)
adc
sub
cmp
jo
mov
lods
cmp
and
ss
xlat
lods
cli
xchg
lahf
outs
daa
jo
sbb
push
mov
sbb
xchg
jne
test
cmp
test
adc
mov
pop
mov
push
pop
xor
es
fld
pop
xlat
ins
shl
add
adc
add
enter
adc
sahf
jge
lahf
call
outs
fld
idiv
aas
jo
mov
sub
jmp
or
and
adc
in
ins
adc
mov
mov
stos
xchg
mov
clc
movs
ret
or
bound
adc
es
out
jno
or
push
fidiv
stos
inc
ins
xchg
pop
rcr
shl
mov
es
sbb
pop
movs
dec
xchg
pop
cmp
jne
add
pop
jg
mov
inc
mov
sub
dec
push
pop
and
sub
call
shl
jno
jns
repz
sub
retf
jo
ret
push
cmp
fisubr
jle
sub
fst
std
sbb
shl
sub
ret
mov
imul
fs
mov
push
js
xor
cdq
add
fsub
(bad)
mov
aas
mov
jae
fninit
jnp
jmp
mov
push
cmp
pop
jo
into
sub
cmps
mov
inc
(bad)
neg
or
in
(bad)
push
jmp
xchg
int3
outs
jae
mov
loop
or
push
push
(bad)
and
mov
loope
arpl
inc
fidiv
enter
jmp
sbb
iret
std
jb
cmc
stos
in
pop
icebp
push
sbb
int3
outs
stos
je
or
mov
xlat
in
imul
add
retf
xor
dec
push
xchg
jle
sub
jns
vaddsubps
mov
add
mov
inc
adc
cli
jge
rcl
mov
fcmove
or
in
mov
jle
lahf
inc
aam
pop
movs
mov
out
daa
(bad)
es
dec
adc
push
das
(bad)
jo
mov
adc
mov
and
aaa
xlat
pop
jno
gs
fsub
cmp
call
das
push
and
imul
pop
std
jl
mov
add
fs
jecxz
cs
push
cmp
stc
dec
repz
jb
pop
out
pushf
pop
xchg
sub
shr
pusha
out
ret
stos
jle
sub
cmps
jl
retf
lds
jmp
pop
xchg
in
mov
adc
inc
or
jmp
add
shl
popf
pop
add
and
mov
data16
nop
(bad)
gs
sahf
push
dec
cli
fs
adc
push
in
and
in
(bad)
adc
test
cmp
popa
pop
mov
out
fs
mov
in
nop
bound
loopne
daa
int
mov
fdiv
cmps
add
jb
cmp
pop
mov
jno
test
adc
int3
mov
daa
jno
les
jno
data16
jmp
push
outs
pop
mov
int3
mul
jp
and
inc
add
aaa
jae
ja
or
cld
mov
lds
stos
add
lods
adc
cs
les
cmp
and
mov
add
xor
rcl
inc
add
mov
call
sbb
mov
sbb
cmps
add
shr
(bad)
jmp
pusha
movs
and
cld
cmc
sahf
sbb
or
xchg
ja
into
and
sub
jns
shr
aam
sahf
mov
xchg
jmp
repnz
jnp
jge
lds
imul
cmp
adc
mov
sub
mov
jg
mov
outs
mov
or
add
(bad)
in
dec
pop
out
jl
fadd
stos
fwait
loope
xor
ss
mov
repz
imul
rol
cmp
rcr
cmp
inc
imul
cmp
mov
int3
adc
(bad)
cmps
lea
outs
and
jl
sub
jbe
sbb
pop
outs
adc
xchg
xlat
test
pop
pop
jl
fsub
jp
xor
sti
adc
xchg
jae
test
in
push
or
lds
je
adc
daa
xor
(bad)
push
mov
mov
(bad)
stc
inc
(bad)
je
xchg
lds
jae
lods
xchg
push
fstp
add
stos
dec
enter
(bad)
js
push
and
add
dec
mov
into
inc
cld
or
push
add
lock
in
xchg
mov
fld
int3
sbb
mov
lds
out
xor
or
leave
jle
mov
inc
cdq
xor
fsubr
push
pop
inc
jmp
cmp
inc
js
aas
shl
(bad)
test
fs
inc
scas
push
fwait
push
adc
dec
dec
cmp
stos
icebp
(bad)
dec
test
cmp
test
cmp
daa
in
sbb
jne
fstp
clc
dec
xor
xor
dec
mov
ret
iret
xor
scas
(bad)
loope
sbb
mov
xor
ins
mov
ja
jns
jg
adc
adc
mov
movs
sub
pop
and
(bad)
enter
test
cwde
dec
mov
arpl
(bad)
cmps
cld
mov
jbe
sub
jae
arpl
cs
aas
jo
gs
push
sbb
mov
aas
xor
leave
fmul
push
ror
dec
outs
pop
leave
out
jecxz
xchg
or
sbb
sar
mov
loop
in
div
sar
add
sar
adc
aas
jmp
inc
scas
call
inc
cs
rol
loopne
pop
xlat
lea
data16
(bad)
jo
push
(bad)
xlat
jnp
pop
sub
popa
ror
fcmovu
mov
cli
adc
ja
adc
hlt
enter
inc
mov
cmp
(bad)
(bad)
ja
xchg
aaa
lods
sub
repnz
dec
jb
sti
sbb
ins
push
add
stos
gs
sbb
pop
addr16
jb
loop
lds
mov
push
jns
movs
or
push
fs
stos
xchg
lds
(bad)
int3
stos
jne
push
cli
dec
xor
mov
lds
imul
inc
xchg
aam
xchg
xchg
(bad)
cmp
icebp
hlt
xchg
adc
jmp
popf
sub
cs
mov
mov
mov
jge
ror
stos
cmps
sub
aas
mov
js
cs
push
jmp
dec
and
idiv
mov
fistp
shl
repz
mov
mov
pop
mov
mov
ror
dec
adc
in
sbb
es
les
dec
mov
stos
test
fmul
xor
lds
pop
xchg
sub
idiv
or
sahf
int
scas
inc
sbb
jbe
daa
jno
rol
cmp
test
mov
xor
adc
mov
bswap
push
lods
dec
(bad)
rol
(bad)
js
icebp
(bad)
jecxz
(bad)
gs
adc
or
add
adc
retf
fidivr
cmp
lahf
mov
dec
adc
inc
imul
ret
adc
mov
in
push
push
in
ret
test
leave
(bad)
jno
(bad)
hlt
xor
scas
mov
cmp
pop
add
mov
fstp
sub
dec
ds
inc
lods
xchg
fisub
stos
cmp
cmp
cmp
cmp
add
push
jbe
into
popa
and
ds
popf
shl
fidivr
aaa
cmp
push
push
cs
adc
js
ficom
jle
lds
or
int
or
imul
cmps
sti
add
xor
cmp
mov
adc
ins
cmps
mov
jg
sub
in
(bad)
jno
dec
adc
je
stos
mov
bnd
sub
imul
mov
aaa
mov
cwde
or
leave
cmp
xor
repnz
int
sub
push
jnp
xchg
ins
popa
add
inc
dec
out
movs
lahf
test
retf
outs
add
int
add
stos
test
pushf
dec
add
dec
and
mov
sti
or
xor
add
dec
retf
rol
retf
std
out
int3
dec
lds
ret
outs
push
inc
fnstcw
movs
xchg
sahf
nop
cli
jg
sub
std
sub
push
and
imul
adc
inc
sub
in
jnp
lds
mov
xchg
and
fcomp
inc
push
popa
mov
adc
in
lds
dec
int3
fs
adc
cmp
mov
stos
mov
cwde
cmp
je
in
popa
ror
seta
scas
popa
jl
stc
mov
xor
xor
repnz
rol
cmp
imul
movs
test
mov
dec
cmp
das
scas
cmps
mov
icebp
mov
inc
mov
sbb
ja
and
cli
mov
retf
aam
xor
scas
daa
dec
cmp
mov
inc
arpl
in
scas
(bad)
jo
jns
add
pop
sbb
pusha
movs
ret
add
inc
cmp
or
jbe
stc
push
xchg
(bad)
jmp
arpl
mov
sbb
mov
cwde
inc
xor
push
cmp
xchg
aad
rcr
shl
add
adc
jecxz
mov
fs
es
pop
shl
or
inc
jle
cdq
inc
jne
fnstenv
mov
cmps
adc
and
push
popa
outs
ds
xchg
neg
and
ror
xchg
push
mov
retf
or
fadd
jg
shl
push
adc
xor
xchg
pop
or
es
mov
jnp
in
(bad)
daa
jnp
or
xor
dec
add
dec
jmp
push
sti
jp
pop
xor
and
and
adc
push
out
xor
mov
lds
dec
and
scas
jecxz
adc
fisub
cmp
xor
cmp
out
in
js
dec
pushf
dec
adc
outs
and
das
bound
or
fidiv
adc
pusha
xor
jmp
dec
cmps
rcr
das
push
push
fsub
int3
xor
in
dec
inc
movs
push
outs
aas
cmp
enter
mov
rcr
fsubr
dec
jl
out
jne
sbb
gs
shl
sbb
call
fcom
fnstenv
jle
xor
(bad)
(bad)
in
mov
js
enter
(bad)
push
fld
shl
sub
ror
fld
test
jae
ins
mov
jmp
ret
jo
and
retf
push
lds
xor
push
sub
mov
fsub
mov
sbb
iret
xor
lds
ins
stc
lods
adc
mov
ja
cmps
push
cmps
das
sub
das
in
pop
sub
cmp
push
mov
hlt
aam
cmps
ss
es
jbe
repz
xchg
mov
cmp
dec
xchg
adc
mov
popa
jp
daa
cmp
sbb
jg
xor
push
scas
cs
in
fimul
jne
movs
sub
and
jnp
es
pop
shr
les
aaa
addr16
mov
retf
arpl
xchg
xor
aaa
push
(bad)
dec
je
cli
std
les
jl
retf
bound
scas
fsubr
xchg
mov
xor
sub
mov
les
addr16
adc
mov
pop
fnstenv
outs
jle
push
xchg
mov
lds
add
gs
out
adc
mov
imul
inc
fnstcw
shl
push
pushf
fbld
aas
aam
or
ss
(bad)
rcl
pop
or
cld
ret
ret
sbb
sbb
pop
(bad)
or
add
pop
mov
gs
ret
jmp
mov
and
es
stos
(bad)
jns
pusha
inc
add
adc
xchg
sbb
push
out
push
mov
sahf
xchg
shr
adc
mov
imul
or
xchg
jp
mov
(bad)
add
mov
jmp
imul
mov
cld
lea
icebp
inc
mov
ror
xchg
push
sbb
inc
and
sub
sar
cmps
shl
popa
retf
sub
adc
mov
daa
mov
mov
imul
xlat
sahf
jb
xchg
jb
adc
enter
push
gs
lahf
ja
push
fbstp
arpl
cmp
jmp
cwde
outs
sub
not
in
jae
push
pop
sbb
inc
adc
adc
(bad)
shl
lds
cs
out
cmp
mov
cmps
mov
dec
mov
sbb
stos
lods
lods
xor
xchg
pop
cli
mov
add
pop
pop
lds
cmp
clc
scas
add
adc
inc
push
dec
out
fcmovne
push
add
lahf
jecxz
adc
movs
test
mov
cli
cmps
lods
(bad)
test
push
aad
ja
mov
scas
mov
fdivr
pop
xor
add
lods
aas
cld
and
inc
iret
cld
pop
pop
inc
sbb
sahf
std
push
jb
and
scas
jno
aaa
inc
jno
jns
cs
jg
xor
outs
xor
cmps
outs
js
in
xchg
xor
scas
mov
lahf
retf
in
pop
jns
je
xor
cmp
sub
shr
mov
mov
inc
or
pop
pop
int3
ja
mov
mov
sbb
cmps
hlt
jnp
mov
cmc
jae
fld
jo
test
and
fdivr
cmp
jnp
mov
add
sbb
outs
lds
mov
mov
leave
sub
jl
icebp
test
gs
adc
ret
retf
test
je
lds
mov
cmp
adc
mov
lods
pop
mov
xor
mov
in
cmp
adc
test
into
aas
and
in
dec
jecxz
aas
outs
mov
inc
mov
jge
pop
shl
sub
les
lods
pop
xor
arpl
lea
jb
jle
push
push
(bad)
(bad)
jno
inc
fcomp
leave
ins
jb
dec
mov
and
pushf
jo
iret
jns
mov
dec
movs
sub
aaa
xor
lds
es
cli
rcl
daa
out
lods
aad
lds
shl
loope
xor
sbb
push
sub
outs
daa
push
xor
mov
mov
jo
(bad)
lahf
mov
std
or
lds
adc
or
inc
push
xor
xchg
les
adc
push
mov
ret
inc
es
push
cmps
jnp
pop
popf
sub
(bad)
sti
call
(bad)
jno
add
push
mov
jl
loopne
stos
test
cmp
icebp
mov
jbe
fstp
in
(bad)
pop
stos
mov
adc
(bad)
cmps
lock
mov
mov
scas
and
in
mov
je
adc
cmp
xlat
dec
test
xchg
cmp
cs
sti
jge
mov
out
fldenv
jge
adc
stos
idiv
cmp
dec
and
les
xchg
inc
push
rol
in
(bad)
es
enter
mov
ins
sub
pop
pop
test
mov
xor
xor
xchg
inc
sub
inc
rcl
cmp
dec
jg
push
jae
jmp
jno
arpl
ins
scas
pop
aaa
imul
cwde
sbb
and
xor
hlt
fwait
nop
jnp
lds
shl
cmps
(bad)
and
scas
mov
inc
neg
mov
fwait
pop
lods
cmovo
adc
sbb
imul
aas
std
daa
fdivr
in
sar
out
pop
cmc
pop
test
fimul
rcr
stc
or
xchg
scas
or
ret
icebp
xor
jmp
ja
retf
scas
push
lahf
push
sar
leave
dec
mov
arpl
jae
dec
cmp
stos
jnp
inc
push
adc
cmps
cmp
dec
mov
jl
outs
repnz
sub
test
xchg
xchg
cmp
xchg
out
mov
loop
adc
or
iret
dec
adc
jo
mov
ret
ins
mov
rcr
loope
into
ins
cmps
lds
(bad)
aad
mov
mov
fbld
icebp
mov
dec
lds
xor
fisttp
int
aam
xchg
mov
xor
mov
mov
jae
into
xor
sbb
pop
jmp
sub
mov
test
pusha
in
and
xchg
int
inc
sbb
sbb
int
dec
(bad)
into
dec
inc
test
loopne
les
not
sti
mov
push
jmp
pop
lahf
adc
rcr
sub
nop
dec
lods
fcmovnb
idiv
stc
cmps
(bad)
ss
(bad)
lahf
and
in
jmp
and
xchg
out
stos
test
sbb
mov
push
and
dec
(bad)
int
imul
jp
cmp
cmp
ja
es
mov
shr
pop
(bad)
sub
mov
cmp
aam
(bad)
xchg
shl
movs
xor
push
pop
xor
xchg
shr
pop
lds
(bad)
and
sub
cmps
mov
add
jp
mov
mov
out
sub
dec
xor
mov
jmp
pop
hlt
clc
push
push
(bad)
ja
in
lds
jnp
xchg
and
mov
lods
adc
(bad)
mov
inc
and
sub
shl
int3
out
jle
mov
das
mov
adc
cmc
mov
cmp
jg
js
mov
push
(bad)
in
adc
ss
stos
add
sar
imul
pop
mov
enter
pop
call
sbb
jnp
sub
jmp
scas
cld
adc
mov
or
xor
add
scas
jp
and
jnp
gs
jmp
nop
inc
iret
mov
or
mov
jecxz
push
(bad)
dec
inc
leave
ss
retf
inc
data16
call
jg
mov
inc
scas
xchg
mov
out
test
push
or
loop
lock
ret
jo
push
lods
add
iret
cmp
jne
leave
pop
add
and
retf
adc
cdq
arpl
push
inc
fist
add
push
jle
fsubr
jo
(bad)
imul
into
fdiv
or
inc
(bad)
mov
fdiv
lea
push
or
push
cmp
dec
sub
mov
pop
pop
pop
jo
and
aas
mov
cs
add
and
shl
xchg
leave
mov
pop
sar
xchg
xchg
jno
das
mov
scas
add
or
sbb
sub
or
add
dec
inc
retf
pop
movs
jmp
sti
xor
add
inc
js
(bad)
mov
jne
pop
mov
fisub
inc
mov
adc
popa
xchg
rcr
sbb
xor
stos
(bad)
ds
jb
lea
mov
stos
scas
mov
loopne
pop
mov
fsubr
les
shl
fldenv
jecxz
into
dec
mov
in
jle
mov
sbb
add
out
in
and
mov
fldz
push
fcom
cmc
cmc
cmp
ret
data16
das
push
dec
dec
pusha
stos
fistp
jnp
dec
(bad)
cmp
hlt
call
outs
jle
lock
mov
(bad)
jp
popa
mov
push
mov
dec
stos
adc
lahf
test
rcl
mov
(bad)
push
cmps
xor
xor
inc
int3
sbb
sub
xor
inc
clc
and
cmp
ins
ss
test
mov
iret
std
push
xchg
loop
add
es
outs
inc
cdq
cwde
jp
adc
or
js
cmp
fidivr
into
mov
cdq
sbb
mov
adc
pop
cld
nop
xor
jle
add
sbb
mov
and
lock
push
mov
das
movs
retf
fcompp
addr16
into
fdivr
and
mov
and
jbe
cmp
mov
stos
ja
and
sub
or
ror
push
jne
shl
push
inc
arpl
xor
stc
sbb
fnsave
inc
into
xchg
adc
pop
(bad)
lock
adc
mov
sbb
jbe
jp
scas
jmp
mov
in
sub
add
pop
movs
out
in
mov
xchg
ror
jno
dec
out
dec
sub
pop
data16
movs
ret
loop
mov
jge
test
minps
in
cmp
loopne
and
lds
xchg
fld
adc
ins
fs
or
mov
cs
dec
lea
dec
enter
test
ret
(bad)
pop
lods
jg
xchg
cmp
jns
and
lahf
ins
fisttp
aaa
dec
ret
push
int
pop
push
movs
lods
fbld
arpl
popa
icebp
mov
jecxz
xor
inc
sti
std
cmp
or
xchg
inc
xchg
jns
mov
int3
mov
fiadd
ror
jg
jno
lods
adc
mov
js
add
in
test
inc
repnz
cmp
pop
sbb
mov
push
es
sar
nop
mov
rcl
dec
stc
mov
and
(bad)
rol
dec
pop
pop
inc
sub
add
mov
movs
mov
and
pop
call
sbb
nop
retf
inc
adc
in
lds
push
aad
mov
scas
adc
sbb
test
lds
data16
mov
sub
out
push
iret
xchg
sub
std
shl
jecxz
loop
xchg
arpl
mov
movs
adc
ss
out
and
stc
dec
sbb
add
pop
gs
nop
fcomp
js
sbb
imul
adc
jecxz
lock
mov
push
xchg
jg
cmps
mov
xchg
inc
adc
push
mov
(bad)
and
mov
mov
cmps
movs
jne
mov
icebp
mov
cmp
(bad)
xchg
fs
xchg
lds
jmp
enter
inc
lock
mov
rcl
sub
jp
pop
mov
cs
xchg
stc
aad
xchg
std
in
or
ja
jo
not
shr
das
adc
mov
mov
mov
sub
dec
aad
push
popf
mov
mov
aad
lods
jnp
pusha
aas
jae
pop
scas
cwde
aad
adc
clc
mov
stos
pop
test
xor
mov
dec
xchg
xor
fwait
in
iret
imul
cmp
push
stos
jo
xchg
push
jno
xor
or
ss
(bad)
sub
mov
daa
movs
in
lds
pop
fisttp
mov
js
add
scas
xor
sbb
mov
mov
mov
xlat
sahf
std
cmps
js
(bad)
shr
or
jge
scas
mov
jmp
mov
arpl
push
push
inc
psubw
pop
or
xchg
arpl
xor
push
mov
sbb
sub
js
add
gs
add
lods
lea
adc
xor
sti
inc
mov
js
sbb
les
js
sbb
scas
sahf
lds
and
adc
or
iret
lahf
call
fs
jp
scas
test
and
fisub
aas
lods
xor
js
test
mov
gs
ins
mov
fld
in
mov
xor
cmp
push
movs
jne
inc
mov
mov
mov
aad
xchg
lods
ficom
fwait
xor
pop
inc
sub
loope
mov
in
mov
out
xchg
sub
jp
clc
inc
test
fcmovnbe
adc
cmp
sbb
cmp
mov
call
sub
shl
scas
adc
dec
outs
jbe
jne
cs
in
sub
lods
dec
mov
repnz
mov
or
mov
jnp
jp
mov
add
cmp
cmps
daa
dec
push
jmp
pushf
into
jne
test
lds
push
test
adc
movs
sar
push
mov
add
jecxz
push
adc
xor
mov
pop
xor
xchg
mov
stos
repz
mov
fwait
mov
push
dec
cwde
add
dec
and
push
jns
mov
call
(bad)
mov
or
imul
sar
inc
cmp
pop
xor
les
(bad)
cdq
push
mov
js
pop
scas
rcl
(bad)
xor
cmps
fs
adc
pushf
dec
adc
pop
inc
inc
mov
push
scas
(bad)
shl
shl
pushf
outs
pop
jb
sbb
and
or
and
mov
cmps
xor
aad
pop
lods
or
(bad)
not
repnz
mov
es
mov
push
das
mov
js
fnstcw
les
ins
cmp
adc
loopne
cmp
cld
jne
push
aas
call
mov
lods
add
xor
and
(bad)
bnd
jecxz
scas
int3
stc
fldcw
int3
test
mov
pushf
stos
dec
pusha
mov
push
mov
mov
mov
ror
cmps
mov
xchg
xor
xchg
popa
add
hlt
push
ret
dec
icebp
jmp
inc
into
cmp
out
and
mov
repz
jp
aaa
xor
mov
jge
mov
jns
outs
dec
adc
out
fst
pop
fs
mov
xchg
(bad)
xor
ret
aad
mov
jns
ins
push
pop
mov
adc
cmp
(bad)
fcmove
mov
mov
(bad)
(bad)
stos
pop
fsub
retf
add
add
jg
sub
inc
jnp
pop
aas
pop
(bad)
shl
outs
inc
adc
xor
cs
call
scas
lds
cmp
inc
fiadd
sub
pop
push
in
into
or
add
dec
cmp
in
push
imul
mov
adc
pusha
jp
in
push
cmp
xor
sbb
or
adc
xor
cmp
mov
ins
cmp
jbe
adc
iret
addr16
sbb
mov
xchg
jp
imul
les
mov
lea
cmp
dec
into
inc
cmp
stc
jmp
repz
(bad)
outs
mov
repz
imul
add
pop
es
cli
aaa
inc
and
xchg
fs
cmp
xchg
lea
cld
jl
je
stos
pop
inc
pop
gs
clc
cmp
xor
pop
ficom
dec
inc
xchg
out
fiadd
sub
and
loopne
out
cli
inc
sub
xchg
mov
bound
or
jae
push
mov
jns
adc
inc
rol
ret
adc
aaa
sbb
das
je
cmps
fnstsw
sbb
jge
rol
out
pop
test
popa
scas
xchg
mov
lds
std
mov
mov
aas
(bad)
and
pop
inc
jle
aam
movs
push
sti
jne
retf
mov
jo
and
fdivr
imul
adc
inc
xchg
stos
lods
pop
cwd
frstor
ds
pop
cld
adc
(bad)
mov
cmp
cmp
xchg
aas
in
repnz
cmp
clc
bound
mov
stos
sbb
add
mov
rol
out
js
scas
sbb
ins
dec
fiadd
call
pop
push
retf
dec
adc
cmps
push
dec
test
push
daa
je
mov
mov
(bad)
add
and
lock
mov
stos
mov
rol
outs
cld
fnsave
rol
cmp
out
aaa
test
es
xor
inc
int3
nop
bound
dec
(bad)
(bad)
je
push
dec
ss
jg
and
test
sbb
ror
and
movs
mov
push
aam
mov
cmps
push
mov
jecxz
rol
(bad)
rol
mov
lock
lds
xchg
adc
sbb
mov
jne
jbe
sub
mov
or
cdq
ret
stc
aaa
pop
lds
jnp
loopne
cwde
mov
dec
sbb
retf
push
in
mov
in
jo
mov
xchg
cmp
xor
push
add
lods
inc
inc
enter
jbe
sbb
ja
mov
mov
(bad)
mov
inc
xor
lds
mov
push
fimul
add
sub
pop
mov
(bad)
push
sub
and
xor
shl
sti
xor
push
out
aaa
faddp
sbb
(bad)
sti
shl
pushf
lds
dec
aaa
aam
scas
xchg
leave
call
popf
test
xchg
mov
lds
sti
mov
fwait
lock
fnstenv
jo
(bad)
xlat
mov
push
fadd
in
and
dec
xchg
mov
mov
daa
call
xchg
inc
adc
rol
ror
out
push
(bad)
ins
das
aas
sub
jmp
(bad)
or
das
shl
arpl
dec
inc
leave
adc
pusha
and
dec
sub
sbb
cmps
mov
rol
sti
add
mov
dec
leave
xlat
in
ja
jmp
stos
jp
add
lods
mov
fwait
in
std
loop
mov
pop
adc
cwde
jno
in
lds
inc
mov
or
sti
loop
pop
enter
sbb
dec
mov
test
xor
bnd
xchg
mul
mov
lds
retf
je
popf
and
jns
mov
pop
lds
out
ret
xor
ficomp
test
addr16
push
popa
sbb
xor
nop
in
stos
fs
test
fdivr
aaa
jmp
leave
popa
mov
adc
mov
inc
imul
into
scas
inc
jnp
fdiv
xchg
mov
mov
ins
push
les
imul
jno
iret
pusha
leave
jnp
retf
das
iret
and
int3
xor
push
mov
mov
add
popa
push
mov
jo
add
jbe
lock
rcr
xchg
int
sbb
mov
jecxz
movs
adc
push
arpl
and
mov
stos
inc
xchg
inc
aas
and
pop
in
add
jmp
cmc
jb
mov
out
ret
pushf
enter
jns
dec
(bad)
jmp
jbe
sbb
xchg
fs
push
jnp
mov
mul
lds
fist
cmp
or
lds
push
mov
cmp
mov
mov
in
mov
loope
inc
lods
test
xchg
aas
jns
cmc
out
or
fldlg2
rcr
mov
and
pop
ins
sub
(bad)
in
dec
daa
adc
cmp
ret
pop
fs
push
ins
es
ret
lds
lds
cmovbe
lock
adc
mov
pop
mov
les
push
add
adc
aas
in
dec
push
adc
inc
in
(bad)
imul
retf
das
cmps
(bad)
push
inc
shl
jb
pusha
pop
std
mov
cmps
fstp
inc
jle
mov
arpl
sbb
outs
and
inc
fild
mov
shl
dec
adc
sbb
inc
jge
stc
ja
xor
dec
mov
xlat
mov
iret
ss
(bad)
push
(bad)
call
imul
movs
les
push
nop
frstor
inc
(bad)
pop
mov
mov
push
movs
xor
imul
xchg
aad
mov
cld
add
mov
jnp
adc
scas
loopne
mov
aas
cmps
gs
in
(bad)
popf
or
sar
dec
pop
psubw
inc
add
out
ficom
aas
ja
add
loope
jmp
call
fsubr
mov
lds
repnz
jl
fidiv
add
lahf
xor
not
in
pop
push
sbb
push
mov
sbb
icebp
data16
scas
mov
xor
(bad)
call
das
js
scas
aaa
clc
stos
inc
hlt
repz
sub
ret
xchg
xor
or
mov
(bad)
(bad)
dec
sbb
arpl
dec
dec
inc
mov
and
adc
pop
addr16
push
outs
movs
xchg
pop
inc
jecxz
in
push
jbe
js
mov
push
sub
cdq
pop
and
fs
jo
or
rol
and
jge
push
add
xchg
pop
add
push
or
sub
xor
jo
dec
out
inc
add
mov
cwde
or
cmp
scas
pusha
xor
dec
sahf
cmp
repz
xchg
inc
xchg
push
add
inc
mov
imul
bound
popf
jg
std
ret
cwde
(bad)
xchg
ins
cmc
outs
jnp
inc
mov
sub
aad
ds
jo
cli
fsubrp
loop
pop
pop
inc
out
dec
mov
mov
into
sub
or
dec
mov
clc
in
test
cmp
cmps
push
sub
push
push
mov
stos
push
sub
push
es
cli
int
div
push
cmc
pop
cmp
movs
mov
es
test
jb
js
cmp
dec
inc
pop
inc
out
test
sub
jo
mov
adc
xor
xor
stos
mov
(bad)
mov
out
lea
xor
and
in
lea
mov
aad
cmp
jbe
movs
xchg
inc
mov
rcl
lds
fs
inc
(bad)
test
(bad)
ss
cmp
cwde
xchg
es
xchg
es
jo
xor
rcl
add
mov
cmp
mov
jp
xor
into
mov
cmp
int3
pop
das
xchg
(bad)
dec
mov
outs
sbb
sbb
add
adc
std
jge
push
sbb
xlat
adc
in
mov
hlt
jo
inc
sti
add
clc
or
push
push
cs
sub
jo
mov
lahf
stc
inc
xor
test
rol
jmp
xor
dec
mov
rcr
in
(bad)
xchg
cmp
mov
jmp
mov
mov
cmp
push
outs
push
daa
mov
and
mov
scas
lds
jl
mov
mov
sub
fadd
imul
arpl
enter
mov
lds
mov
cmp
frstor
(bad)
sbb
dec
mov
fimul
add
psllw
mov
mov
nop
or
std
cmps
lods
and
cli
xor
jnp
mov
(bad)
adc
stos
in
jbe
jmp
jnp
in
ficom
add
pusha
retf
out
mov
je
pop
cld
or
adc
ss
pop
cdq
sub
sub
call
and
or
pop
ins
adc
imul
add
cmp
retf
fs
out
mov
cdq
mov
outs
je
(bad)
(bad)
in
jnp
dec
jbe
adc
jle
in
lahf
into
repz
mov
rcl
stos
jl
add
lods
and
sahf
jae
gs
mov
repnz
ret
out
adc
imul
(bad)
mov
mov
jmp
cld
popa
jp
push
add
gs
out
mov
mov
sub
punpcklbw
pop
aaa
and
inc
sbb
sbb
dec
ret
scas
xchg
add
ror
pop
int
and
lds
jae
lahf
outs
jp
xchg
mov
ret
inc
cmp
loope
sub
and
mul
sbb
pop
cmps
push
cmps
mov
xchg
(bad)
aam
adc
mov
gs
fcom
and
and
jle
adc
mov
mov
(bad)
(bad)
sbb
cmp
repnz
sub
lds
jo
imul
mov
mov
dec
pop
xchg
cmp
enter
push
mov
inc
push
mov
std
ins
xchg
cmp
es
jmp
mov
call
xchg
into
inc
push
xor
int
loopne
addr16
dec
sub
lds
mov
mov
call
aas
mov
ja
jae
lods
mov
dec
mov
jg
cli
jne
(bad)
jb
adc
pop
inc
(bad)
lods
jecxz
lock
(bad)
int3
stc
std
sbb
(bad)
jle
shr
cmp
dec
xchg
or
xchg
(bad)
and
mov
add
fs
(bad)
jae
xchg
nop
xor
out
test
test
test
inc
xchg
mov
dec
stc
addr16
jg
pusha
test
jp
cmp
idiv
outs
test
mov
add
js
call
not
mov
add
pop
pop
inc
popf
dec
mov
xlat
enter
out
adc
aas
dec
(bad)
jno
(bad)
out
mov
(bad)
nop
xchg
dec
jg
ret
sbb
loopne
mov
fdiv
add
xlat
stos
dec
stos
lds
ds
or
sub
adc
cmp
pusha
hlt
addr16
jae
dec
sbb
adc
mov
dec
cmp
add
stos
dec
jae
ds
sahf
dec
stos
ret
mov
cld
fdivr
cdq
sti
mov
mov
shl
push
adc
lds
pop
cmp
xor
(bad)
xchg
jmp
adc
ret
fld
pop
push
or
inc
and
aas
xchg
xor
cmps
pusha
push
(bad)
sub
popf
ret
mov
ror
icebp
adc
mov
sbb
mov
stos
in
imul
rcl
dec
(bad)
retf
jg
cli
in
lahf
adc
test
js
aaa
stc
ss
jns
mov
pop
ret
pop
xor
adc
mov
push
pop
mov
rcr
es
lock
add
fs
adc
jmp
jnp
push
fnstsw
jg
(bad)
cmp
mov
ror
add
mov
push
mov
sub
(bad)
jmp
js
mov
or
mov
repnz
add
into
jg
inc
(bad)
xchg
mov
cmp
jnp
popf
dec
pop
enter
outs
lds
gs
loope
test
ret
scas
push
mov
rol
pop
add
pop
jmp
dec
ror
cmp
movs
das
jle
(bad)
iret
outs
cmps
(bad)
sub
mov
fdivr
jbe
xor
pop
leave
mov
cmp
adc
xlat
movs
leave
xchg
mov
adc
xchg
lods
repz
test
(bad)
adc
mov
push
jecxz
dec
out
sub
mov
int
inc
xor
cmc
data16
dec
fdivrp
outs
xor
gs
jp
gs
jmp
mov
(bad)
test
aas
imul
out
scas
enter
fst
daa
xchg
ss
test
(bad)
sti
imul
mov
push
outs
ins
stos
inc
push
push
jmp
pop
cmp
push
rcr
sti
jmp
addr16
stos
jl
pop
xchg
sbb
inc
jmp
adc
pop
sbb
gs
ret
fdivr
les
inc
(bad)
jp
sbb
dec
jmp
icebp
pop
dec
test
retf
xor
cmps
sub
movs
mov
addr16
call
ja
ja
jo
mov
mov
xchg
lea
(bad)
sbb
xchg
mov
push
scas
adc
mov
inc
dec
xchg
jmp
(bad)
cli
popf
das
stos
pop
xor
test
loop
sbb
adc
adc
das
lds
mov
shl
or
int3
test
jmp
adc
int3
sbb
inc
lock
repnz
sub
(bad)
add
mov
add
inc
scas
sub
sub
push
shl
mov
jne
pop
stos
push
fld
and
jp
fwait
(bad)
xor
and
mul
dec
es
(bad)
pusha
lahf
loop
jmp
test
xchg
ret
ins
repz
mov
xchg
xor
into
mov
add
sub
jb
les
ffreep
add
mov
xchg
cmp
lods
push
cmp
pop
jg
in
dec
stos
mov
inc
icebp
xchg
sub
mov
jns
dec
loopne
dec
mov
mov
lds
inc
movs
sub
movs
(bad)
push
mov
mov
test
data16
fcomp
sbb
not
lds
jo
adc
int3
movs
clc
inc
retf
mov
(bad)
sbb
and
(bad)
xor
js
sbb
int
cs
std
popf
adc
inc
jne
movs
scas
push
pop
outs
fs
mov
sub
lea
jns
loop
cmc
movs
adc
xchg
mov
jp
ror
mov
cmp
cmp
arpl
inc
xstore-rng
cmps
inc
sbb
bound
inc
enter
cmp
pop
ror
scas
push
mov
sar
mov
cmp
jne
and
imul
cdq
mov
repz
jns
mov
fnstsw
push
neg
iret
adc
jo
daa
jns
mov
push
jae
adc
sub
jo
in
ins
cmps
(bad)
enter
mov
lds
jno
pop
rcl
retf
cmp
add
out
sbb
pop
(bad)
stos
call
cmp
xor
or
out
mov
push
xchg
je
ss
int3
loopne
pusha
add
and
loopne
sar
sar
mov
and
cmp
and
outs
xchg
mov
sub
gs
cmp
icebp
lea
ds
jae
jle
pop
lock
cmps
cli
stos
jne
aaa
mov
clc
adc
sub
add
lods
jg
dec
sub
cmp
pop
mov
sub
pop
mov
out
test
mov
push
jp
in
movs
mov
adc
cdq
xor
dec
xor
xlat
out
stos
sar
rol
rcl
aaa
add
dec
aad
fcom
xor
cmps
cs
adc
push
dec
xor
or
xor
mov
sbb
mov
aas
(bad)
adc
ins
dec
jl
xor
test
retf
inc
pusha
mov
mov
fisttp
test
mov
pop
lock
jbe
mov
push
sub
xchg
jno
sub
lea
arpl
jge
sbb
test
stos
sbb
(bad)
mov
adc
mov
(bad)
xor
lods
mov
push
test
repnz
push
arpl
outs
or
fidivr
sar
push
cs
shr
sub
jl
stc
adc
retf
cli
xchg
mov
sbb
fld
(bad)
mov
cmp
mov
cmp
movd
push
out
push
push
add
mov
inc
in
aaa
aad
xor
inc
popf
jne
push
cmp
push
mov
xchg
pop
mov
arpl
test
mov
sbb
(bad)
cmp
sbb
and
mov
adc
sub
idiv
sub
jnp
imul
adc
maxps
daa
xor
push
sysenter
fisub
pop
dec
ins
imul
mov
add
bound
imul
xor
mov
int
add
inc
dec
sahf
fsub
mov
loope
rcl
or
(bad)
lds
dec
daa
js
mov
add
shufps
in
imul
lds
inc
rcl
les
lahf
pop
and
mov
pop
movs
dec
cwde
inc
mov
cmp
jne
nop
or
jne
jmp
in
ss
cmp
jg
fmul
in
outs
lds
inc
imul
jge
inc
outs
pusha
mov
jle
es
jne
cmp
sbb
inc
sub
fwait
add
sub
pop
jmp
or
cmc
dec
scas
scas
div
push
mov
inc
jns
dec
inc
jno
mov
int3
jmp
lds
int3
jno
stos
xchg
pushf
je
mov
xor
adc
mov
test
inc
leave
xor
dec
(bad)
outs
out
sub
js
lods
inc
jae
dec
pop
daa
jp
pop
int
sahf
inc
nop
and
iret
and
movs
cmp
add
test
xlat
cmps
aas
(bad)
adc
arpl
mov
cmps
js
outs
fscale
adc
sub
pop
repnz
imul
mov
shr
(bad)
push
test
xchg
inc
mul
add
(bad)
iret
std
inc
cmp
mov
inc
das
loopne
test
fwait
adc
mov
adc
cmps
retf
addr16
jnp
idiv
xchg
imul
sbb
ficom
movs
ja
leave
cmps
push
inc
dec
fcmovu
mov
adc
or
loopne
jbe
div
push
mov
cli
push
dec
(bad)
bound
inc
outs
rol
shl
fild
(bad)
sub
mov
mov
xchg
and
xor
int
ds
shl
(bad)
outs
call
and
inc
dec
sbb
inc
dec
jno
mov
mov
call
sub
(bad)
iret
add
ror
and
mov
ds
add
or
dec
ins
add
fcom
sub
aas
add
pop
mov
mov
cmp
jno
rcl
jge
fisttp
fs
dec
(bad)
movs
or
fisubr
clc
xlat
outs
frstor
rol
daa
jmp
dec
ins
call
aaa
inc
aam
sub
(bad)
mov
lds
cmp
popf
jbe
out
in
inc
stos
cmp
inc
ins
mov
inc
or
fs
(bad)
sahf
nop
push
cmps
sbb
imul
retf
aad
mov
jns
cmp
les
ror
shr
or
lds
rcl
loopne
stos
xchg
sub
and
add
retf
fdivr
pusha
push
scas
(bad)
test
imul
push
lods
fstp
je
sub
in
cmp
std
outs
fs
mov
jo
dec
stos
mov
out
and
stos
shr
lds
adc
nop
in
mov
sbb
into
in
inc
jo
sub
(bad)
je
out
push
fcom
lahf
stos
ins
push
jle
shl
add
ror
lds
xacquire
jg
sar
in
push
es
stc
jmp
pop
mov
test
arpl
xor
in
sbb
sub
(bad)
(bad)
inc
out
data16
stos
sbb
mov
pminsw
dec
js
shr
in
sbb
retf
ret
adc
aas
sub
(bad)
ds
ja
call
(bad)
cs
js
xchg
or
les
icebp
into
inc
sahf
pop
lahf
std
xor
or
imul
sbb
mov
in
xchg
es
jne
sbb
sub
fisttp
aaa
icebp
mov
imul
hlt
xchg
loopne
cmp
out
or
jb
call
or
ja
cmp
push
or
out
mov
jo
inc
mov
dec
pop
add
scas
mov
(bad)
jo
ds
jne
dec
mov
mov
nop
and
sub
aas
outs
push
lds
lahf
pop
(bad)
das
jb
fnstcw
rcr
inc
mov
imul
jno
out
scas
leave
jle
les
mov
call
adc
call
loop
sub
outs
packuswb
out
int3
(bad)
jo
xchg
mov
stc
in
stos
dec
xor
test
add
ds
mov
lock
fidiv
pop
aas
mov
inc
fs
lock
ins
ret
aad
pop
cwde
or
nop
sti
xor
or
test
jmp
mov
xor
cmps
sbb
in
out
lds
jne
add
cld
sbb
mov
icebp
jmp
and
stos
stc
sub
fidivr
gs
or
es
icebp
push
loop
pop
push
lods
cmps
jle
sub
jmp
test
mov
pusha
aas
clc
mov
data16
ror
aaa
jge
retf
sbb
sub
dec
add
or
repnz
cld
fistp
lds
(bad)
jne
adc
into
(bad)
push
rol
add
cs
jg
and
add
out
retf
sbb
sar
cmc
cmp
adc
lods
inc
loopne
sbb
(bad)
mov
pop
jns
arpl
mov
ja
and
neg
jns
fidiv
mov
aad
rcr
pop
xchg
cmps
jp
fnstcw
enter
leave
sti
out
cwde
inc
and
mov
iret
pop
push
and
aas
xchg
xchg
mov
or
jg
(bad)
jmp
(bad)
mov
cmp
jmp
rcl
pop
add
add
clc
cmp
gs
scas
adc
mov
sar
mov
int
retf
mov
push
push
add
mov
mov
xchg
xor
jp
or
sbb
push
cli
cmp
inc
sahf
add
fimul
lds
sahf
push
popa
cwde
fs
or
aad
xchg
sbb
push
jno
jecxz
jae
sub
adc
(bad)
cmp
lods
add
add
repz
jl
pop
gs
adc
xor
inc
push
push
adc
rol
mov
mov
js
out
jnp
js
or
(bad)
pop
jmp
fwait
shl
and
inc
dec
xchg
jmp
dec
retf
xchg
addr16
movs
sub
call
lds
jp
cli
xor
aaa
je
adc
lds
fdivr
xor
jne
sar
aam
das
push
and
jg
cmp
jo
fst
(bad)
cmpps
sbb
xchg
test
mov
sbb
and
xchg
(bad)
jg
and
nop
imul
sbb
mov
adc
xchg
leave
mov
add
sahf
cs
or
pushf
adc
addr16
adc
jl
fbld
jle
stos
fwait
(bad)
leave
adc
mov
daa
push
ret
sub
aas
in
cmp
stc
call
fsub
dec
shl
jbe
stos
cli
mov
sub
inc
(bad)
into
jge
sar
mov
adc
clc
lds
retf
sub
mov
add
movs
jl
mov
or
lea
sbb
(bad)
js
out
iret
jo
jae
dec
push
enter
dec
mov
xchg
dec
adc
in
dec
dec
popa
das
aad
sub
ror
rcr
addr16
outs
ins
cld
inc
xchg
add
push
retf
shr
in
sbb
jmp
dec
icebp
sub
adc
xchg
jl
in
mov
cld
jnp
lock
sbb
mov
cs
sub
out
loop
ja
(bad)
dec
add
ret
pop
jb
movs
(bad)
adc
inc
lods
mov
push
dec
imul
(bad)
ret
or
add
and
repz
lds
xchg
ins
sub
dec
mov
dec
imul
idiv
jne
cs
pop
ins
mov
loop
adc
sub
mov
mov
or
mov
push
add
and
sbb
out
sti
cmps
cli
sub
sbb
or
add
or
pop
fisubr
(bad)
mov
imul
pop
push
into
add
retf
(bad)
mov
in
mov
mov
pusha
mov
test
jl
adc
imul
xchg
mov
and
dec
push
scas
jle
outs
mov
sub
scas
adc
cmps
nop
mov
loopne
fs
push
mov
xor
mov
lds
jl
fadd
push
mov
outs
xchg
jge
pop
out
lds
out
adc
mov
jle
mov
dec
xor
aas
in
or
jb
push
mov
xchg
scas
fs
jmp
movs
mov
adc
add
test
dec
inc
retfw
int3
out
mov
mov
adc
mov
int
in
(bad)
aad
jo
hlt
mov
and
cmp
mov
ja
sbb
inc
sbb
mov
jns
jne
hlt
scas
popa
mov
fcomi
stos
xor
in
inc
xor
sub
pop
cmc
leave
pop
outs
push
shr
sbb
cmc
es
outs
jle
mov
inc
and
mov
lds
jo
cmp
mov
out
daa
jp
sub
xor
std
mov
std
shl
gs
lock
enter
sbb
test
mov
(bad)
lods
rol
add
movs
mov
addr16
jge
sbb
pusha
stos
(bad)
xchg
mov
sub
rcl
fisubr
xchg
mov
mov
xor
cld
dec
mov
ret
adc
daa
dec
sbb
push
ror
ficomp
jne
mov
push
mov
xchg
adc
dec
xchg
sbb
add
sahf
push
sub
mov
mov
xor
test
repz
and
push
jle
dec
cmp
scas
jp
inc
imul
adc
xchg
stos
mov
mov
xor
xor
xchg
lock
jp
and
movs
stc
(bad)
fwait
jge
xchg
(bad)
adc
arpl
adc
int
and
mov
push
rcl
icebp
mov
ror
(bad)
sub
sbb
mov
xchg
adc
lods
sbb
lods
mov
lods
nop
mov
add
or
in
push
fimul
push
jge
iret
scas
dec
loopne
adc
test
cwde
repz
and
xor
and
(bad)
pop
nop
pop
mov
shr
pop
ja
int3
mov
jnp
adc
cmps
not
cmps
mov
lea
jp
jmp
jo
es
data16
adc
lds
ja
xor
xchg
adc
les
fsubr
(bad)
repz
shld
dec
aad
(bad)
mov
call
pop
fimul
mov
addr16
and
(bad)
xchg
cmps
lds
jb
pop
sbb
aas
icebp
add
mov
out
ss
adc
outs
in
jo
lock
xor
ds
fld
inc
daa
xchg
adc
(bad)
cmps
into
ret
inc
pop
imul
nop
push
mov
shl
push
sub
mov
shl
repnz
xchg
aam
adc
out
bts
ret
sub
sub
sub
lods
pop
inc
dec
ja
mov
stos
mov
fisttp
adc
inc
cmp
jg
fidivr
mov
add
shr
ss
cmps
add
jmp
int3
stos
addr16
mov
inc
fwait
hlt
cmps
and
sar
fild
pop
jbe
jne
lods
and
mov
mov
jp
fwait
pushf
ret
call
clc
hlt
std
mov
jp
rcr
adc
mov
mov
inc
mov
cmp
mul
arpl
xchg
clc
and
(bad)
pushf
pusha
xchg
daa
out
lahf
cmp
mov
adc
sub
sub
xchg
cld
jp
ret
sub
addr16
das
xor
hlt
inc
pop
gs
pop
aas
rol
es
pop
mov
sar
push
jl
cmp
imul
pop
adc
push
cdq
fdivr
gs
pop
inc
ins
and
jl
pop
nop
and
jg
les
arpl
call
(bad)
repz
pop
adc
out
stos
lahf
jl
movs
mov
cmc
cmps
inc
aad
jbe
nop
jge
out
test
mov
repz
in
nop
(bad)
std
cmp
pop
mov
stc
cmp
pop
cld
jbe
int
fnsave
adc
js
mov
jae
adc
cwde
mov
mov
adc
jnp
loope
push
dec
dec
sbb
or
xchg
jge
mov
icebp
xchg
addr16
adc
sub
sbb
jecxz
outs
in
sub
mov
sahf
xchg
add
retf
ja
out
ss
loop
or
arpl
and
ja
je
ins
jg
popa
push
test
sahf
pushf
mov
out
in
adc
pop
stos
pop
adc
mov
cs
xor
mov
(bad)
and
xchg
dec
and
imul
addr16
daa
ret
out
push
sub
pop
cmp
fwait
mov
fiadd
inc
push
sbb
aaa
dec
cmp
jmp
sub
clc
or
lds
not
push
mov
and
stos
inc
addr16
or
or
push
test
call
mov
mov
and
scas
fstp
xlat
pop
fisub
ins
mov
shl
addr16
cld
leave
pop
xchg
shr
jne
sbb
(bad)
into
mov
push
or
in
call
mov
mov
sbb
xor
add
inc
in
dec
xchg
ds
push
add
jae
cmp
rol
jae
sar
shr
jae
(bad)
sti
jl
clc
mov
ret
in
inc
out
push
gs
ror
xchg
test
jb
or
(bad)
adc
ja
(bad)
fst
jg
imul
push
cmp
mov
jmp
pop
pop
(bad)
mov
or
add
test
call
add
leave
cmps
push
lds
aaa
jo
cmp
sar
fucomip
push
movs
jns
sbb
mov
(bad)
xor
or
push
or
push
jbe
in
lahf
dec
push
inc
adc
ror
and
inc
stc
mov
mov
stc
jae
ss
cmp
jecxz
and
xor
mov
sbb
(bad)
push
outs
cmps
mov
int3
ins
jle
fistp
imul
mov
and
mov
pop
jnp
clc
jne
mov
and
cmp
dec
jne
or
and
xor
imul
mov
adc
je
push
adc
inc
stc
push
pop
pop
loope
fs
out
xor
xor
sbb
cmps
(bad)
loope
jp
movs
stos
inc
mov
pop
xor
or
cwde
mov
jae
fdivp
jl
adc
sub
xor
ins
lock
sbb
rcl
arpl
(bad)
push
xor
xor
sbb
cmps
cdq
lods
fcomp
mov
sahf
add
mov
bound
sahf
add
cmp
pop
inc
mov
adc
loope
clc
shl
add
mov
(bad)
fisub
call
stos
clc
sbb
mov
clc
and
std
xchg
nop
mov
test
sbb
movs
adc
mov
imul
imul
lea
mov
xor
jecxz
aas
in
test
fwait
xchg
fwait
xor
push
cmp
rcr
sbb
imul
cs
push
inc
out
cld
fisttp
lds
rcr
jne
sar
rcr
sbb
outs
lods
ins
xchg
int
add
xor
call
(bad)
cld
push
lock
lds
jg
aam
ja
sbb
(bad)
xchg
adc
jae
pop
push
sub
retf
lock
or
or
adc
adc
jno
gs
imul
xor
xchg
jl
int3
push
cmp
out
mov
and
ins
jp
inc
xor
ret
adc
push
(bad)
hlt
cmps
(bad)
nop
aad
outs
mov
cli
jno
or
ins
sbb
in
sub
leave
ror
or
daa
adc
jge
ror
xor
outs
xor
in
stc
outs
dec
pop
and
xchg
daa
in
test
jo
les
or
das
icebp
(bad)
ins
jnp
cmp
adc
add
loop
sbb
pop
clc
cmc
push
xor
mov
call
es
pop
mov
inc
sub
mov
test
test
mov
pop
and
pop
hlt
or
jle
mov
enter
dec
pop
rol
test
(bad)
mov
jns
dec
stc
aam
pop
adc
xchg
adc
outs
mov
jns
jg
xchg
aad
inc
lods
push
out
out
dec
retf
pop
scas
daa
push
xor
mov
setge
stos
xor
(bad)
aam
xor
inc
mov
shl
push
enter
fdivr
idiv
push
jecxz
les
mov
and
movs
(bad)
neg
scas
pushf
sub
mov
jae
mov
xor
popa
iret
add
js
jb
add
add
daa
pop
das
push
ja
sub
jge
fcmovnb
cmp
retf
or
inc
dec
test
pop
iret
pop
jg
sbb
rcl
outs
xor
inc
and
sbb
das
mov
mov
add
jle
jns
out
inc
inc
xchg
(bad)
mov
mov
imul
jbe
mov
addr16
or
xlat
fdivp
out
outs
push
mov
aaa
sub
pop
pop
popa
not
retf
mov
(bad)
mov
bsf
mov
call
sbb
push
jmp
jg
adc
add
fbstp
adc
sub
sub
(bad)
xchg
(bad)
fadd
adc
loope
das
ret
fucomp
mov
imul
addr16
mov
pop
pusha
int3
call
push
mov
add
dec
iret
aaa
jg
scas
xchg
adc
lahf
test
(bad)
stos
aas
mov
xor
and
loopne
sub
cmps
iret
cld
mov
push
pushf
sub
lds
call
lods
lahf
addr16
sub
mov
sbb
cmp
xor
lods
cli
sbb
jg
enter
(bad)
aad
(bad)
(bad)
pop
mov
in
je
(bad)
cdq
jmp
aam
mov
cdq
mov
loop
(bad)
popa
(bad)
pop
xor
fcomp
push
das
push
mov
loope
inc
or
adc
ret
fdivr
jmp
pop
pop
adc
inc
js
xchg
mov
(bad)
stc
fadd
jo
push
fist
mov
test
sub
ficomp
add
dec
retf
mov
cmp
(bad)
rcl
ret
shr
int3
inc
(bad)
(bad)
(bad)
aas
sbb
lahf
stc
xor
fiadd
pop
mov
mov
adc
cmps
cmp
int
pop
clc
nop
pop
jns
sbb
pop
sub
pop
and
and
ficom
push
pushf
es
push
push
mov
cmc
scas
shl
jle
mov
jg
js
test
jle
add
inc
mov
jbe
stc
push
sub
dec
jp
add
jl
mov
and
or
sub
push
xlat
aaa
pop
stos
and
cld
mov
loopne
xchg
and
aas
es
es
out
xchg
pop
push
(bad)
in
(bad)
sar
cmps
gs
fwait
stos
iret
fistp
xchg
adc
out
mov
js
addr16
sbb
sbb
jge
std
jg
add
stos
arpl
pop
cdq
lds
int
lods
adc
shr
jae
jmp
pop
adc
pop
(bad)
cmp
mov
adc
out
leave
sub
add
xchg
fild
jnp
cmp
sub
and
fs
fxam
call
or
mov
jae
xchg
cs
ja
adc
(bad)
loopne
pop
inc
clc
adc
sbb
and
mov
rol
mov
ds
int3
sub
loopne
cwde
jo
push
(bad)
(bad)
pop
sub
add
or
(bad)
xchg
pop
jbe
sub
jg
ds
mov
dec
clc
popa
xchg
das
pop
(bad)
fadd
sti
outs
(bad)
mov
(bad)
mov
sub
adc
(bad)
jno
(bad)
neg
inc
ins
stos
adc
mov
daa
push
lds
push
call
daa
gs
popf
lods
mov
leave
push
cmps
or
je
xor
adc
test
cmp
sbb
pusha
jo
xor
push
jae
inc
jns
jge
pop
cmps
inc
xchg
and
adc
adc
dec
mov
add
cmp
int3
shl
fnstcw
(bad)
sub
and
mov
mov
test
test
nop
das
mov
adc
out
scas
fldenv
out
outs
inc
cmps
sub
ds
leave
into
xchg
xor
adc
scas
mov
int3
mov
nop
add
lods
scas
pop
out
mul
pop
mov
icebp
push
mov
(bad)
daa
push
ficom
cmc
dec
into
inc
adc
add
and
mov
shl
mov
lock
nop
nop
sbb
jge
cwde
adc
mov
cmp
retf
add
cs
repz
push
clc
ret
in
mov
outs
inc
or
test
or
jb
(bad)
fdivr
shl
test
xor
jge
sbb
adc
xchg
jb
repnz
dec
js
cmps
add
daa
jno
jecxz
cmp
scas
aas
inc
(bad)
sub
or
mov
(bad)
fild
ins
daa
lahf
lock
mov
scas
sub
pop
adc
sbb
sub
in
and
xor
jg
je
mov
ja
add
div
int
mov
ror
xor
inc
mov
aas
dec
xchg
mov
outs
test
sti
aas
or
xchg
ins
sub
mov
retf
cmps
sbb
adc
pushf
ins
and
repz
cmps
jnp
repz
test
jl
mov
dec
cmps
cmp
fwait
popa
imul
or
mov
out
inc
add
jle
push
inc
bound
sbb
mov
iret
jae
adc
mov
mov
scas
outs
pop
or
mov
mov
add
not
outs
add
push
sbb
rcr
push
call
mov
jp
movq
push
sub
add
dec
ficom
sub
(bad)
mov
fs
cmc
in
dec
pop
and
iret
enter
push
mov
sbb
adc
les
sbb
push
imul
sahf
aam
sub
inc
mov
pop
mov
fisttp
cmp
add
sub
sbb
fadd
repnz
fcom
push
mov
faddp
stos
cmps
add
test
sub
call
imul
mov
jmp
retf
inc
fs
fldenv
push
cmp
stc
cmps
and
cwde
cmps
sub
aad
adc
push
mov
aas
hlt
loop
sbb
cmp
sti
and
popf
jne
popa
in
mov
stos
out
adc
sahf
adc
xor
xor
ret
sub
sar
data16
jnp
(bad)
mov
cmps
push
or
pop
jo
in
xchg
iret
outs
inc
lahf
inc
xor
inc
push
jne
fwait
stc
ror
cmp
sub
not
mov
lods
jge
call
add
sbb
mov
push
outs
sbb
jne
lds
shl
iret
retf
push
xlat
jmp
lods
test
cmp
jp
fwait
or
fdiv
loopne
mov
lds
xchg
icebp
fucomp
push
pop
or
cmp
lds
retf
xor
push
mov
cmps
popa
mov
push
jae
in
jl
push
ror
add
aam
(bad)
retf
call
inc
jp
xor
add
pop
cmp
pusha
sahf
stos
push
jns
mov
fwait
and
das
movs
mov
xlat
mov
idiv
push
mov
inc
and
movs
inc
in
retf
fistp
jp
inc
cmp
leave
xchg
pop
stos
or
xchg
movs
adc
vpsrad
mov
scas
leave
add
les
sbb
push
push
pusha
add
imul
mov
ds
sbb
in
ret
(bad)
aad
and
movs
inc
retf
sub
mov
sub
ins
cmp
xor
(bad)
push
pop
pop
int
jl
xor
aad
aad
xchg
into
fsub
cmp
jne
(bad)
push
mov
scas
add
call
dec
ret
xchg
push
cmps
mov
movs
nop
pop
popf
push
dec
arpl
jne
jnp
enter
jb
cmp
(bad)
jne
add
push
adc
repz
icebp
loope
mov
pop
clc
sub
stos
mov
shl
xor
inc
mov
leave
sahf
xchg
or
cmp
inc
pop
fbld
inc
cmps
mov
leave
mov
cmp
cmp
(bad)
jbe
lds
sub
jle
outs
ds
dec
ror
jne
jl
std
outs
adc
mov
xor
mov
pop
cmp
cmps
js
imul
fucomi
out
xchg
retf
cmp
sub
(bad)
stos
adc
bound
fdivr
add
cld
mov
les
add
loope
test
add
push
jmp
jmp
sbb
mov
xchg
aas
xor
or
fdiv
outs
pop
cmps
out
imul
push
dec
movs
fwait
(bad)
jne
mov
jb
cmp
enter
cli
or
mov
lds
pop
scas
cmp
shl
cmps
sbb
mov
mov
fsubr
mov
pop
and
mov
retf
test
inc
loope
cmps
leave
lds
push
movs
and
and
imul
cs
shr
or
stc
retf
icebp
push
pusha
adc
(bad)
cmps
shr
inc
xchg
sbb
test
push
dec
in
sbb
call
adc
stos
dec
jo
lock
mov
mov
cld
daa
jp
cmp
sub
mov
mov
popf
fwait
add
jmp
jecxz
xchg
div
jge
xabort
sub
mov
int3
inc
fcomi
push
test
pop
test
sub
cs
pop
cmp
and
pop
pop
and
cdq
dec
pushf
mov
stos
mov
(bad)
enter
mov
outs
xchg
dec
iret
popa
mov
cmp
xchg
mov
arpl
mul
push
xchg
add
and
push
scas
stos
inc
lods
xchg
xor
xchg
sbb
pusha
dec
rcl
mov
push
stc
push
inc
mov
mov
dec
stc
xor
sar
test
push
stos
inc
push
pop
and
inc
pop
inc
mov
or
data16
arpl
jns
aas
xchg
enter
gs
mov
mov
je
fmul
ret
clc
cmps
sub
cli
fld
cmp
mov
aas
iret
sub
xor
xor
ds
sub
fcomp
mov
mov
mov
adc
cwde
fdivr
aaa
mov
ficomp
dec
lds
int3
popa
outs
cmps
cmp
mov
push
jl
inc
jne
cmps
jle
lods
enter
lods
mov
mov
rcl
add
lods
add
movs
xor
dec
test
fdiv
pushf
scas
cmp
addr16
add
int3
jns
ja
xchg
mov
ja
out
call
mov
push
rol
sub
fldcw
jp
sub
sbb
cmp
adc
ins
mov
icebp
push
retf
mov
xchg
inc
adc
mov
outs
jge
inc
push
and
jecxz
mov
lds
and
jg
loop
les
mov
xor
mov
mov
add
sbb
stos
or
xor
mov
mov
push
cmp
in
(bad)
fmul
jge
lods
outs
inc
fcomp
push
adc
inc
nop
add
inc
inc
mov
add
xchg
or
aas
in
(bad)
mov
fsub
and
and
mov
pop
xchg
ffree
retf
adc
mov
fmul
sub
sbb
push
jmp
and
add
sbb
dec
cmc
clc
inc
add
sti
pop
or
or
movs
jo
in
dec
cmp
jmp
lds
jmp
push
fsubr
adc
(bad)
pop
mov
push
scas
fistp
rcl
and
ds
push
bound
mov
cmps
arpl
or
stc
sub
(bad)
std
cmp
dec
mov
jg
imul
in
(bad)
push
jge
xchg
mov
cs
jno
(bad)
aas
lds
out
pop
test
ja
cmp
ror
stos
out
dec
adc
mov
xchg
call
cmps
jecxz
or
iret
outs
retf
cmps
ds
jge
xchg
popf
jno
(bad)
ret
cmc
cmp
jg
and
js
pop
inc
cmp
add
stos
movs
add
cmps
mov
js
xor
jns
fist
(bad)
imul
xchg
aas
inc
call
sbb
inc
movs
jnp
ins
(bad)
and
jbe
mov
and
repnz
das
xor
jne
call
jp
movlps
inc
push
mov
sbb
fst
popa
push
mov
ret
cli
add
xor
xchg
jo
mov
cwde
rcl
add
mov
ds
sbb
mov
adc
outs
xor
sti
int3
(bad)
sub
daa
mov
es
addps
and
and
mov
jle
test
movs
cmps
or
sar
cmp
sbb
fisttp
hlt
pop
arpl
xchg
push
stos
mov
xchg
xchg
cmc
pop
mov
mov
ficom
dec
test
push
scas
mov
mov
js
fnstcw
jl
repz
cs
pop
xchg
js
mov
(bad)
or
mov
and
ret
xchg
call
mov
push
int
out
jg
jge
or
sbb
inc
sar
push
fs
mov
js
ret
pop
test
dec
xor
push
sub
mov
mov
aas
into
jmp
push
(bad)
data16
stos
cmp
fs
adc
outs
cs
mov
mov
js
jmp
lds
xor
je
jle
mov
add
push
add
cs
addr16
ret
pop
daa
fdivr
call
adc
add
jnp
cmps
and
lds
jmp
jns
outs
popa
jg
adc
daa
mov
sbb
adc
lds
pop
push
into
nop
in
lods
inc
jbe
retf
inc
xchg
(bad)
sar
or
mov
iret
fs
(bad)
mov
dec
cs
mov
mov
in
(bad)
dec
jb
mov
jbe
(bad)
jns
push
add
mul
gs
pop
dec
fild
leave
mov
outs
std
jmp
jge
pop
fisttp
jp
sbb
rol
cmp
mov
jl
frstor
lods
cmp
mov
call
call
jmp
and
lds
aas
jnp
stos
aaa
gs
fldcw
imul
stos
mov
push
mov
cdq
mov
jg
or
inc
mov
fs
mov
mov
mov
stos
int3
addr16
mov
xor
sbb
xchg
pop
pop
ds
sbb
lds
std
or
jg
cmps
mov
repnz
lods
fistp
in
into
sbb
(bad)
cmp
add
in
lea
into
push
stos
xlat
jo
lods
bound
or
push
cmc
fwait
xor
arpl
mov
pop
jo
pop
jecxz
addr16
scas
nop
jmp
sbb
sub
adc
jno
mov
sbb
inc
xchg
and
mov
mov
cli
dec
outs
out
mov
ja
mov
inc
aas
hlt
jmp
xor
mov
in
xor
fadd
nop
fsubr
into
xchg
popa
out
int
jl
or
movs
cmp
das
cs
jb
mov
mov
shl
retf
xchg
mov
popf
and
mov
push
or
les
aaa
jecxz
add
mov
pop
or
xor
out
aam
sub
lock
into
mov
mov
xor
popf
push
sahf
jecxz
loope
cmc
and
dec
popa
adc
dec
push
stos
mov
cmp
fnstenv
(bad)
shr
outs
(bad)
sbb
rcl
add
xor
(bad)
sbb
xchg
stos
inc
push
pop
push
sbb
mov
(bad)
push
cmps
add
in
arpl
mov
fisubr
xchg
sub
mov
(bad)
push
pop
push
cmp
cmps
daa
sbb
or
fcomp
mov
and
dec
cmp
dec
mov
dec
adc
cdq
add
cs
adc
add
fs
fcom
and
pop
jae
pop
lods
and
pop
daa
inc
mov
popf
and
cmps
or
sub
outs
sbb
in
and
mov
in
dec
cmp
cli
in
cmp
xor
adc
mov
fmul
clc
loop
sbb
std
dec
xor
es
mov
fwait
inc
mov
or
cmps
adc
ins
add
out
daa
mov
arpl
sub
in
(bad)
mov
adc
ja
rcl
sar
int3
std
popa
rcl
sbb
sbb
push
scas
mov
rcl
jg
push
montmul
cmps
(bad)
jecxz
sub
dec
aad
jge
mov
xchg
mov
and
mov
fadd
aas
dec
(bad)
ds
dec
(bad)
mov
pop
or
jge
jg
cwde
(bad)
mov
xchg
jno
ror
cmova
sahf
sti
int
adc
adc
daa
aas
jge
popf
(bad)
popa
xor
mov
sub
stc
pop
dec
lods
sub
popa
shr
push
and
mul
test
jne
sub
ror
sbb
fldcw
popf
mov
xor
sbb
adc
ss
clc
cmps
fmulp
mov
add
jge
adc
push
mov
movs
dec
shl
and
jb
add
retf
mov
sbb
cmp
scas
(bad)
cmp
pop
rol
test
xor
aas
jb
les
xchg
dec
pop
das
lahf
fs
call
and
xchg
das
fld
dec
sbb
iret
in
lahf
xchg
adc
jno
adc
xchg
xchg
mov
imul
nop
(bad)
dec
pusha
or
cmp
out
call
mov
mov
mov
sub
mov
mov
rcl
sbb
stos
inc
jg
in
adc
mov
je
lea
(bad)
lea
cmp
ja
lds
adc
push
pop
xchg
jbe
retf
add
adc
pop
aaa
and
fadd
xchg
jnp
dec
mov
jb
mov
es
pop
push
and
ja
sub
push
dec
cwde
adc
pushf
xchg
push
std
inc
daa
gs
add
xchg
(bad)
lods
or
idiv
inc
mov
mov
es
in
retf
stos
lea
(bad)
jl
cli
mov
inc
out
inc
hlt
jg
and
mov
push
mov
mov
cmp
ss
enter
shr
pusha
fwait
cmp
sbb
aam
add
or
add
stos
cs
fistp
xchg
in
pop
jle
rcr
ins
aaa
and
cmp
loopne
(bad)
mov
sbb
cmps
aam
test
mov
or
xcrypt-cfb
cmps
loope
leave
pop
push
jecxz
mov
mov
pop
shr
mov
mov
(bad)
mov
pop
push
movs
xchg
adc
xlat
jo
or
into
loopne
push
xchg
dec
mov
cli
imul
jp
sbb
sbb
lea
jns
xchg
sar
into
inc
and
retf
mov
lds
into
jecxz
cmp
test
outs
lds
sbb
cmp
cmps
cmp
sub
jbe
addr16
dec
sub
call
fsub
mov
rol
mov
jle
mov
xlat
cwde
pushf
sub
add
push
push
movs
jns
js
sub
push
lods
inc
mov
xchg
cld
out
pop
scas
push
cmps
mov
lods
das
cmp
jg
mov
neg
stos
loopne
mov
stos
ja
mov
syscall
jnp
ss
cs
stos
dec
mov
arpl
mov
cmp
ss
fdivr
outs
sbb
mov
or
add
pop
ja
mov
mov
fwait
pop
push
inc
jne
dec
movs
ja
jge
into
jmp
mov
shr
outs
sub
cmp
(bad)
lahf
dec
test
movs
out
movs
sbb
rcr
aad
add
dec
xchg
inc
or
xchg
shl
les
jns
adc
fdivr
jge
xor
xchg
and
aaa
or
je
add
dec
mov
(bad)
xor
mov
in
(bad)
xchg
aas
mov
sbb
std
psubq
test
mov
pop
test
movs
call
addr16
movs
pop
(bad)
cmp
mov
(bad)
sbb
clc
inc
into
dec
adc
adc
mov
daa
stc
dec
popf
nop
sub
fcmovnb
stc
cmp
cs
bswap
xor
test
das
nop
popf
and
push
mov
sub
fimul
cmp
scas
dec
jae
adc
cdq
mov
into
dec
xchg
int3
js
lds
mov
retf
sub
cli
das
or
(bad)
shr
and
andps
mov
cdq
xor
xchg
jae
aas
outs
inc
adc
lods
push
xor
inc
inc
aas
inc
sbb
aaa
adc
je
imul
add
and
rcl
dec
sbb
adc
pusha
cmc
cwde
cld
enter
jmp
mov
pop
cmp
sbb
mov
cmp
outs
mov
jno
scas
scas
dec
pop
shr
(bad)
sbb
out
sub
dec
pop
lods
mov
mov
je
(bad)
xor
aad
test
jb
retf
dec
mov
sub
mov
bound
cmp
mov
stos
push
inc
mov
fs
inc
dec
mov
xchg
or
jb
push
xor
inc
pop
lods
lds
cmps
retf
push
das
xor
cmp
lock
jg
out
cmp
push
cmp
cmps
sub
mov
push
in
in
pop
lea
outs
and
inc
iret
xor
jno
sub
cmp
inc
fnstcw
xchg
push
cmp
ret
lds
inc
xchg
add
mov
mov
mov
cs
mov
inc
sbb
(bad)
and
xlat
mov
unpcklps
push
in
jb
fild
movs
repnz
jmp
out
cmp
pop
in
es
lods
lds
inc
movs
jae
jbe
cmp
cmps
pusha
push
xchg
add
shr
loopne
push
xor
mov
mov
dec
repz
jo
xor
dec
mov
repz
and
pop
stc
aas
and
es
in
clc
jae
arpl
cwde
retf
xchg
test
cmp
aas
cmp
mov
in
in
stos
inc
fstp
gs
xchg
outs
outs
sub
popf
adc
jl
and
ja
mov
js
mov
sbb
xor
ins
repnz
retf
jl
adc
movs
adc
cmp
xchg
jno
das
icebp
ss
mov
mov
adc
inc
mov
add
mov
out
inc
in
lds
loop
mov
jmp
popa
push
imul
fbstp
fsub
mov
mov
adc
ret
adc
ret
fnsave
es
xor
pop
fs
sbb
das
mov
cmp
pop
cmp
(bad)
jmp
es
mov
sbb
pop
dec
fsqrt
pop
push
out
mov
test
rcl
xor
adc
fucomi
mov
dec
sub
or
adc
retf
cmp
cmp
cwde
(bad)
iret
xor
jno
data16
pop
shl
adc
mov
lds
lods
(bad)
retf
(bad)
pop
and
es
push
mov
lds
out
pop
fisub
aas
xor
xchg
mov
scas
fidivr
xchg
test
xchg
adc
push
mov
das
int
jle
pusha
repnz
int3
jmp
out
rol
fist
mov
pusha
fucom
inc
mov
mov
lea
(bad)
aad
dec
stos
inc
dec
xor
(bad)
leave
sub
out
add
rol
inc
cs
(bad)
data16
call
mov
out
(bad)
fadd
mov
cmp
pop
cmp
adc
jp
and
jno
into
repz
push
jmp
cs
xchg
cmps
movs
jl
or
popa
xor
xchg
xor
mov
jl
out
pop
mov
test
add
test
(bad)
adc
mov
pop
aam
xchg
xchg
aas
jno
pop
aaa
mov
mov
leave
inc
sbb
mov
or
cmp
jno
mov
retf
aas
inc
mov
popa
push
pop
inc
test
inc
dec
test
mov
xor
nop
pop
daa
test
inc
sahf
mov
sub
add
jge
jne
ret
jns
adc
add
out
movs
out
retf
mov
mov
xchg
pop
mov
or
sbb
mov
sub
ss
xor
add
mov
gs
shl
push
xlat
sbb
mov
cmps
pusha
adc
int3
adc
stos
jp
mov
std
xor
push
(bad)
mov
cmp
cmp
(bad)
jl
sbb
std
mov
or
push
add
xchg
inc
mov
xor
lea
cmp
push
pop
(bad)
mov
pop
sbb
mov
aas
mov
xchg
(bad)
nop
and
in
(bad)
imul
dec
mov
scas
sub
adc
add
into
inc
mov
test
jmp
adc
int
(bad)
test
inc
mov
sahf
mov
sub
ror
fwait
out
dec
mov
mov
sti
ret
fs
aam
mov
das
jns
lds
retf
cld
cmp
scas
leave
mov
add
inc
mov
pop
stos
stos
adc
dec
cmps
mov
mov
stos
or
push
xlat
lock
xor
xchg
aaa
push
out
inc
aad
in
test
movs
(bad)
or
dec
fadd
retf
mov
pop
xchg
pop
lds
sbb
scas
repnz
fcom
sbb
mov
test
xchg
es
xor
jmp
aaa
pop
inc
jno
das
pop
push
xor
adc
mov
jmp
(bad)
mov
push
sub
out
std
push
test
push
test
iret
push
lahf
cmp
dec
(bad)
push
mov
sub
xor
push
retf
push
mov
jmp
lods
jecxz
mov
(bad)
sti
push
and
add
sbb
sbb
sub
test
push
push
mov
test
call
outs
cmp
lds
cmp
cli
cmp
or
mov
and
shr
or
push
nop
adc
sahf
jge
and
jle
pusha
in
iret
cmc
test
xor
push
aam
stos
jmp
dec
jl
mov
arpl
sub
mov
xchg
sub
or
cli
xor
and
and
outs
xor
xchg
lock
inc
lods
fld
clc
xchg
push
pusha
sub
push
sbb
in
and
fcomp
das
lea
jle
movs
mov
pop
addr16
pop
sub
mov
out
aad
cmp
and
dec
sbb
popf
mov
ja
push
call
pop
xchg
in
scas
adc
sbb
cmc
mov
(bad)
jo
aam
dec
cmp
xlat
sub
sbb
push
cmp
and
and
mov
push
mov
add
xchg
pusha
xor
jmp
(bad)
leave
ds
mov
xchg
(bad)
shr
mov
fadd
lods
inc
int
mov
or
jle
rol
and
adc
lds
or
jle
pop
fiadd
pop
xlat
fdiv
dec
mov
xor
pop
adc
adc
ror
outs
daa
push
cmp
jle
xor
fdivr
lock
div
sahf
cs
je
push
pop
mov
push
inc
push
cs
cmc
retf
and
lea
pop
mov
mov
sti
and
xor
daa
and
jb
adc
jns
nop
loopne
sub
out
cmp
rol
daa
mov
push
mov
test
pop
mov
jne
jle
xor
mov
sbb
xchg
jne
sbb
xlat
(bad)
test
mov
inc
jbe
lahf
mov
push
jp
test
addr16
sub
cmp
dec
ret
mov
pop
xchg
(bad)
jp
push
out
shr
mov
dec
loopne
js
js
bnd
xchg
adc
cmp
inc
daa
dec
stos
inc
lods
sbb
retf
xchg
xor
xlat
xchg
cmps
lds
loopne
or
out
add
add
aas
pop
mov
push
xor
mov
je
pop
retf
add
sub
sub
aaa
adc
cmp
sbb
adc
ja
mov
sbb
mov
lea
scas
call
call
mov
(bad)
scas
mov
mov
iret
xchg
fild
imul
sar
rcr
repz
adc
int
ret
push
jp
jg
pop
sub
mov
inc
mov
add
ror
test
mov
inc
aas
test
and
adc
cmp
mov
mov
push
cmps
jl
addr16
pop
repz
jns
inc
lods
pushf
test
int3
push
or
pusha
dec
jle
adc
out
and
pop
(bad)
and
push
mov
and
and
in
jae
inc
gs
mov
jnp
out
std
cdq
jbe
dec
in
neg
cmp
mov
sub
xor
adc
add
push
dec
test
js
retf
push
je
xchg
sar
dec
aam
and
mov
imul
in
lds
or
add
push
ror
fimul
mov
in
cmps
push
cli
pop
fisttp
aam
rol
cs
cmps
inc
out
mov
sub
and
shl
mov
xor
inc
mov
into
cmp
inc
pop
outs
adc
addr16
mov
mov
inc
sub
pop
mul
pop
mov
inc
leave
(bad)
retf
sbb
ins
or
cmp
add
xchg
in
or
pop
mov
sar
xchg
jb
daa
mov
jo
add
out
outs
jle
scas
jecxz
out
les
pusha
mov
inc
fcom
mov
(bad)
mov
fild
push
out
(bad)
sub
dec
push
mov
std
pusha
mov
push
adc
clc
movs
out
dec
dec
jecxz
leave
adc
xor
outs
mov
add
mov
jnp
xor
lds
pop
sbb
retf
fwait
xor
or
pop
xchg
mov
dec
mov
sub
cmp
jne
mov
push
mov
push
outs
cmp
inc
sub
cld
cwde
scas
ja
adc
ret
sbb
scas
sti
ret
stos
inc
cmp
cmps
jl
cmp
sub
xor
stos
dec
mov
fsubr
sar
xor
push
add
jmp
sbb
aas
dec
lds
xor
scas
or
jae
stos
dec
cli
or
aas
popf
jg
mov
sub
ss
mov
xchg
rcl
pop
cmp
enter
mov
lds
push
test
jle
mov
loopne
mov
aaa
daa
xchg
lds
add
jb
(bad)
dec
and
inc
rol
sub
clc
cdq
mov
push
jne
sbb
dec
mov
pusha
adc
add
out
push
add
mov
adc
push
push
mov
in
std
lds
jg
cs
fnstenv
mov
imul
or
add
jp
out
jecxz
cmp
fcom
xchg
aam
xchg
ss
push
ret
out
jbe
mov
lods
cmps
jo
popf
push
sub
sbb
cmps
inc
cmp
shl
mov
mov
loop
push
adc
jl
or
pushf
inc
inc
cld
sti
jo
mov
mov
mov
iret
(bad)
sub
xor
or
ficomp
or
push
pop
jg
retf
fs
bound
add
jmp
mov
ror
test
stos
lods
mov
pop
out
outs
(bad)
jns
xchg
cwde
hlt
pop
add
jg
es
jmp
sub
repnz
dec
ja
in
inc
aas
es
mov
pop
shr
in
(bad)
out
mov
jmp
sub
shl
and
dec
test
(bad)
std
inc
cmp
clc
xchg
adc
data16
scas
sti
fucom
ins
lea
push
pop
xor
add
cdq
daa
push
je
loop
(bad)
jne
adc
in
daa
iret
xlat
xchg
xor
stc
jge
daa
cmp
inc
(bad)
dec
loope
scas
outs
sti
(bad)
sub
mov
sbb
adc
xor
push
adc
daa
mov
jl
movs
aam
(bad)
shr
scas
add
mov
ins
mov
jecxz
test
stc
add
cs
sub
stc
xor
mov
cmp
mov
daa
xor
scas
clc
sbb
sbb
rol
out
in
stos
xor
lahf
vmovups
clc
jae
dec
repz
movs
lahf
mov
pop
ficom
daa
in
xchg
sbb
hlt
in
in
dec
mov
adc
pop
jmp
inc
xor
fwait
lds
mov
(bad)
clc
sub
cmps
jae
pop
les
iret
test
push
gs
fst
mov
pop
(bad)
cld
add
ins
ret
and
xchg
(bad)
popa
fisubr
sti
dec
fisubr
aas
int
sbb
adc
test
pop
loope
js
push
or
cmp
adc
int3
sti
xchg
(bad)
out
in
ror
daa
mov
jmp
inc
mov
in
fsub
test
daa
cmp
cmp
leave
scas
mov
add
inc
mov
sahf
lods
jnp
sub
inc
(bad)
lds
aas
add
inc
push
sbb
pop
sub
or
aas
loope
push
push
jle
rol
in
mov
sbb
imul
push
mov
adc
jne
dec
mov
dec
jnp
adc
pop
(bad)
adc
cwde
mov
stos
sar
test
scas
adc
movs
ja
xor
xor
jb
cmp
xor
movs
clc
adc
scas
icebp
popa
or
das
jne
add
ja
dec
lds
push
jne
sbb
shl
movs
out
jae
mov
lock
test
and
cmp
cmp
mov
adc
nop
(bad)
adc
or
into
add
jns
adc
aam
mov
sbb
rol
lods
addr16
pop
adc
cmp
xchg
mov
mov
xchg
outs
ret
inc
icebp
fwait
jg
(bad)
int
xor
sub
call
mov
lds
jnp
imul
out
call
xchg
in
sbb
lods
sbb
mov
cmp
adc
jmp
dec
inc
in
(bad)
jmp
push
xchg
sub
mov
cmps
pop
inc
push
mov
stc
(bad)
adc
pop
jo
les
outs
inc
jp
es
xor
xchg
pop
ror
test
or
(bad)
stc
mov
jge
ss
sub
push
jns
scas
lods
mov
je
test
popa
sahf
add
es
xchg
push
icebp
pop
mov
mov
fdiv
popa
add
pop
(bad)
cmp
xchg
pop
xchg
jg
sub
in
mov
aas
dec
mov
jmp
pop
jnp
jmp
jge
pop
fcom
xchg
cmps
jnp
(bad)
xor
in
xor
lock
cwde
shl
push
movs
scas
lds
das
imul
mov
or
pop
sub
scas
jne
repnz
mov
mul
adc
xchg
sub
jp
daa
cmp
imul
sbb
mov
aaa
jge
aas
and
les
inc
sub
mov
sti
mov
pop
add
add
adc
adc
shl
cmp
shr
ss
xchg
cmp
mov
retf
jecxz
adc
mov
push
cdq
lods
or
pop
and
or
add
push
adc
jo
mov
cmp
jmp
fmul
dec
ins
mov
test
mov
pop
je
sti
arpl
int3
sub
arpl
cli
imul
mov
and
ja
add
(bad)
mov
inc
not
rcl
movs
lea
push
fistp
mov
dec
mov
mov
mov
jnp
fcomip
fadd
xchg
loop
hlt
(bad)
mov
mov
repnz
lods
shr
sar
ror
jo
and
add
xchg
nop
je
push
icebp
dec
xchg
cmps
(bad)
lods
inc
aaa
mov
scas
pop
je
lods
xchg
push
mov
fstp
mov
aaa
jmp
ins
mov
imul
dec
cmc
pop
sbb
push
dec
xabort
inc
lock
enter
repnz
mov
xlat
cmp
jno
jmp
pop
stos
aaa
pop
repz
(bad)
rcl
repnz
ins
lds
stos
int3
scas
or
pop
(bad)
out
pop
div
sub
daa
cmp
mov
mov
fldenv
adc
rol
xor
adc
out
shr
and
icebp
mov
neg
xor
mov
push
mov
dec
ins
jmp
sub
enter
cmps
rcl
movs
push
jg
clc
push
into
inc
push
mov
and
push
jle
aam
add
push
daa
jge
das
gs
scas
setae
stos
inc
test
lods
fdivp
sub
outs
clc
outs
xchg
fld
push
stos
fs
leave
cmp
pushf
sbb
mov
mov
xchg
xor
sbb
retf
cmc
pusha
(bad)
and
sbb
pop
sahf
jge
sbb
data16
fldcw
cmc
mov
add
sbb
or
pop
cmp
mov
rol
jge
gs
(bad)
pop
sub
jl
js
dec
(bad)
mov
pop
xchg
inc
je
cmp
mov
jmp
iret
mov
sbb
popf
adc
cmc
test
sub
mov
and
adc
test
push
mov
into
(bad)
stc
out
cmp
call
loope
push
jg
or
inc
inc
test
in
cwde
pop
adc
daa
stos
adc
rcr
sub
leave
rcl
mov
fld
push
add
cmp
jnp
imul
fsub
into
inc
xlat
rcl
mov
mov
adc
cmp
lds
ret
es
test
rcl
mov
adc
int
sbb
jl
xchg
mov
push
xor
mov
shl
xrelease
daa
xchg
cmps
cmps
mov
dec
ins
cmp
cli
jg
cli
inc
adc
or
sub
jecxz
fcomp
rol
aad
inc
jl
sbb
lods
test
mov
loope
jae
loop
nop
push
mov
and
nop
out
aas
aaa
pop
into
inc
stc
pop
mov
(bad)
mov
and
jp
popf
xchg
retf
push
sbb
int3
fwait
out
jl
inc
inc
rcr
dec
out
xchg
int3
jnp
dec
push
mov
mov
mov
lds
mov
jno
je
scas
pop
aaa
aas
daa
cli
ja
in
shl
mov
imul
jb
jmp
and
xchg
jl
std
lock
rol
in
shl
loopne
fcomp
mov
cmp
dec
ret
push
adc
sbb
cmp
jo
jnp
shrd
retf
icebp
dec
cmc
iret
or
or
inc
dec
jle
xor
ds
add
(bad)
mov
pop
adc
jp
push
daa
fisttp
pop
pop
pop
xor
xor
loop
(bad)
shl
lahf
fwait
mov
mov
sub
lds
mov
daa
and
fs
shl
or
lods
ss
dec
ss
cdq
mov
and
mov
pop
jmp
push
inc
xor
movs
(bad)
sar
cdq
sub
(bad)
(bad)
aaa
jb
xor
cmp
aaa
adc
fisttp
repz
movs
inc
ds
pop
sub
mov
xchg
fmul
repz
sbb
loope
pop
aaa
jne
or
fs
repnz
mov
movs
ror
sbb
jle
imul
and
inc
aaa
int3
add
cmp
inc
mul
mov
jbe
mov
popa
mov
mov
ret
cmp
fst
retf
mov
pop
adc
dec
cmp
adc
jbe
push
cmp
xlat
in
(bad)
imul
jg
rol
jle
mov
cld
sub
rcr
pop
lods
jecxz
jne
inc
mov
ss
mov
fisub
mov
and
sub
call
sub
ror
add
not
jl
xchg
jg
xlat
sti
js
dec
outs
arpl
sub
mov
mov
shr
push
mov
stos
js
mov
cld
sbb
jae
add
jb
hlt
(bad)
stos
ja
daa
nop
push
stos
sub
pop
es
cmp
mov
jno
add
sbb
pusha
shr
xchg
je
jo
pop
jno
sub
fs
inc
mov
call
popa
pop
stos
inc
in
and
data16
sub
pop
test
inc
out
mov
daa
cmp
rol
(bad)
lock
(bad)
scas
imul
imul
mov
and
shl
add
jge
cmps
daa
pop
imul
mov
xchg
mov
lock
sbb
xchg
ja
xchg
xlat
inc
and
jmp
sahf
cmp
test
push
add
lods
mov
in
neg
popa
jmp
push
movs
pop
aam
outs
fcmove
pusha
dec
mov
jecxz
(bad)
pop
or
sbb
rcr
cmps
call
jl
pop
fdivr
inc
mov
mov
adc
ret
call
add
icebp
dec
repnz
pop
in
jo
mov
imul
retf
inc
icebp
mov
shl
pop
enter
add
or
out
imul
rol
adc
cmp
adc
js
rcr
retf
pop
cmps
pop
div
imul
in
lds
and
pop
push
cmp
mov
loop
jb
jmp
sub
ss
les
outs
push
into
fdiv
add
jnp
icebp
xchg
jp
retf
rol
sar
mov
push
cmp
cmp
sbb
je
call
addr16
mov
jo
pop
test
push
push
add
loopne
cmovns
aas
lds
leave
mov
push
pop
movs
(bad)
pop
add
xor
popf
mov
mov
add
js
les
popa
loopne
inc
aad
jmp
push
sbb
cmp
add
sub
stos
jl
pop
scas
stos
scas
scas
add
enter
xor
retf
mov
outs
and
adc
cmp
xor
imul
jle
jns
fisub
js
scas
out
test
adc
push
mov
ret
loope
aaa
mov
jnp
xchg
enter
cmp
dec
js
lds
nop
cmps
ins
je
out
jno
icebp
mov
ds
in
rcr
sub
cli
sbb
cli
(bad)
xchg
scas
(bad)
xor
add
push
aas
scas
sbb
adc
xor
fisubr
push
dec
adc
(bad)
cwde
adc
inc
adc
leave
addr16
sbb
sub
arpl
jno
popa
push
push
sbb
push
inc
mov
in
sub
scas
mov
mov
and
adc
cmp
dec
scas
test
jmp
sbb
jb
inc
setnp
cmp
outs
jb
ret
test
adc
and
out
xchg
shl
dec
shl
xchg
les
push
jmp
mov
mov
push
inc
jmp
jg
aas
(bad)
jg
xchg
outs
adc
add
jmp
adc
lods
dec
movs
mov
(bad)
sub
inc
div
dec
test
out
(bad)
fnstenv
adc
xchg
and
xor
and
mov
xchg
sar
fldln2
push
sbb
(bad)
push
cmp
in
cdq
pop
mov
lock
ins
movs
add
les
pop
and
aam
inc
rol
adc
out
repz
sbb
or
jp
jecxz
lods
jne
adc
push
pop
into
hlt
and
cmp
cmp
mov
inc
mov
xchg
aas
loopne
jge
adc
dec
pop
stos
in
aaa
lds
sub
div
xchg
aas
jl
mov
pop
cs
lahf
mov
mov
es
jne
loope
aas
in
jmp
cmp
inc
and
inc
mov
js
mov
aas
xor
lds
jnp
sub
lahf
add
mov
gs
lds
(bad)
arpl
dec
push
inc
dec
cmc
and
mov
xchg
inc
stos
or
xlat
or
push
pop
inc
mov
call
xchg
imul
cdq
add
fst
fisub
push
adc
mov
push
jl
test
mov
cmps
dec
xchg
out
jns
adc
sahf
sub
dec
xchg
fcomp
add
push
jp
push
mov
imul
jnp
call
mov
jne
sub
lock
aad
mov
adc
cwde
outs
mov
es
add
xor
sub
mov
pop
pop
es
cmc
addr16
das
test
ret
mov
pop
int3
or
mov
mov
imul
or
pop
xchg
pop
int
scas
outs
cmps
(bad)
scas
pusha
jl
in
jno
jae
sbb
xlat
and
shl
add
adc
jmp
repnz
mov
stc
cmp
call
lods
mov
lods
add
sub
push
cs
jne
adc
mov
xor
or
les
mov
mov
inc
push
adc
dec
jle
jno
adc
aam
pop
(bad)
mov
or
push
mov
mov
out
cmps
adc
push
add
xchg
add
cmp
out
sbb
sub
enter
cmps
fldcw
ret
mov
aas
sub
outs
dec
and
cmc
inc
test
xchg
jl
inc
outs
addr16
ja
cld
dec
ret
std
into
(bad)
pop
inc
test
fsub
gs
je
push
mov
push
fistp
jl
(bad)
push
clc
icebp
xor
adc
adc
dec
fsub
icebp
sub
aaa
add
lock
es
scas
inc
scas
or
jbe
pop
(bad)
mov
mov
sub
std
fisttp
pop
scas
outs
fcmovnu
add
test
(bad)
xor
add
mov
fmul
rcl
aam
fimul
outs
and
clc
cmp
ror
ds
cmp
xor
xchg
or
movs
mov
xchg
cmp
sbb
or
movs
cmp
sub
pusha
inc
fwait
ret
and
mov
cli
icebp
(bad)
xchg
and
mov
in
imul
jo
retf
in
xchg
mov
lahf
xchg
add
ja
aad
mov
push
pop
pop
scas
xbegin
std
inc
and
xlat
stc
wrmsr
fistp
dec
mov
or
cmp
or
xor
aam
add
cmp
cmp
push
test
imul
popa
ins
jne
xchg
jnp
inc
xlat
(bad)
mov
fdivr
xchg
push
cld
mov
xchg
clc
and
ja
add
mov
lods
push
ret
mov
addr16
sub
sub
mov
add
xor
hlt
(bad)
xchg
ffree
jne
clc
cmp
or
dec
adc
lock
movsx
cmp
sbb
inc
mov
inc
mov
lds
mov
xchg
out
out
aaa
sbb
cmps
add
sub
(bad)
lods
xchg
fucomp
pop
pop
pop
xchg
daa
mov
fdivr
sbb
jg
loopne
jne
aas
mov
shr
pop
mov
sbb
cmc
(bad)
repnz
jg
pushf
pop
rcl
nop
or
pusha
add
movs
mov
mov
mov
push
popa
sbb
addr16
dec
inc
std
mov
dec
add
shl
mov
pop
lds
dec
and
mov
(bad)
outs
cwde
xchg
add
sbb
dec
sahf
cmp
mov
fisttp
aad
je
out
jb
inc
cs
not
push
or
popa
es
fiadd
mov
sub
dec
pushf
fdiv
mov
loope
xchg
iret
cmp
push
adc
loop
outs
test
rol
in
lds
mov
xchg
dec
mov
stc
mov
aas
lock
nop
adc
jg
sub
loopne
pop
mov
div
sub
arpl
add
sub
push
stos
cmps
push
out
imul
jg
push
mov
fcomp
jge
sub
out
xlat
xor
sub
push
sbb
mov
cmps
(bad)
pmaddwd
cmp
scas
sub
rol
and
push
adc
mov
or
cs
inc
cmp
dec
mov
stc
pop
xchg
cmps
lock
jo
and
stos
ret
jp
xchg
lock
push
into
out
out
add
rol
scas
icebp
les
cmps
movs
adc
and
mov
sti
cmp
pop
retf
(bad)
adc
scas
xor
frstor
dec
test
aam
mov
cmp
push
es
push
mov
(bad)
cmp
jo
fsubr
rcr
fwait
adc
mov
mov
xor
push
lds
je
push
xchg
mov
and
call
sti
adc
pop
retf
fisubr
xchg
ja
cmp
push
xchg
aaa
dec
jb
in
sahf
xor
push
sbb
test
pop
mov
(bad)
jl
sbb
cmps
mov
mov
imul
pop
inc
cli
sub
mov
sti
add
jle
dec
fisttp
add
repnz
xor
fucomp
dec
stos
fwait
jnp
mov
fsubr
adc
test
jns
(bad)
jecxz
shl
ins
imul
pop
mov
rcr
arpl
aaa
(bad)
lods
and
aas
pusha
add
dec
inc
push
std
adc
jmp
aas
int
push
or
mov
mov
out
int3
pop
jb
cdq
scas
lods
aas
and
push
(bad)
je
(bad)
mov
cmp
movs
mov
mov
ret
xchg
ja
mov
jno
xor
out
mov
enter
push
mov
fs
stos
xchg
pop
sbb
mov
mov
lea
test
xor
add
retf
(bad)
mov
out
ss
xchg
cmps
mov
mov
ins
(bad)
jb
mov
std
and
stos
pop
fdiv
xchg
adc
mov
dec
cdq
xchg
pop
ret
movs
sub
addr16
call
xchg
or
cmps
mov
sbb
xor
stos
xchg
and
mov
in
xchg
(bad)
aaa
and
jecxz
ds
(bad)
xchg
ins
jns
mov
jle
mov
fdiv
pop
jae
or
mov
and
call
xor
or
mov
dec
lock
jmp
pop
stos
push
daa
dec
adc
(bad)
popf
aas
mov
add
clc
sti
leave
and
mov
std
inc
daa
out
mov
push
aam
aam
mov
lahf
xor
cmps
ds
adc
add
mov
add
pop
mov
arpl
push
ins
mov
aad
in
ds
popa
add
out
and
jnp
pop
cmps
lds
mov
cmp
adc
sbb
sub
cs
(bad)
imul
popa
dec
dec
cmc
pop
(bad)
pusha
jl
mov
ds
sbb
ficomp
jbe
out
mov
je
scas
push
pop
jns
and
cmps
cli
aas
mov
xchg
ret
and
push
jne
xchg
pop
inc
clc
aaa
(bad)
shr
movs
push
std
mov
fdivr
lds
adc
dec
xor
outs
jae
ds
sub
xor
movs
(bad)
pop
push
shl
cmp
or
popa
inc
cld
stc
cmp
les
sbb
lahf
add
or
daa
ror
push
test
ret
rcr
jbe
cmc
xchg
into
mov
pop
xchg
dec
cmps
xor
fsubr
push
(bad)
icebp
popf
fdiv
mov
lods
(bad)
jmp
pop
test
gs
shl
je
(bad)
mov
pop
das
lds
int
ins
cmp
jo
adc
jno
out
outs
sbb
push
push
xchg
icebp
cmp
shl
dec
(bad)
pusha
imul
adc
lahf
ins
push
jnp
mov
jno
fs
jbe
rol
enter
sbb
aas
sbb
jne
ins
pop
jo
jmp
daa
fsub
(bad)
mov
inc
test
cmps
sub
stc
mov
shr
adc
(bad)
mov
sbb
mov
fwait
cmps
aad
dec
cmp
mov
nop
sbb
adc
pop
js
popa
inc
add
das
int3
sar
test
adc
fild
je
jge
adc
fadd
jecxz
jae
aas
pusha
add
sar
rol
and
les
jp
xchg
lods
addr16
sub
in
inc
jg
(bad)
jmp
cmps
popa
rcr
jns
lds
sar
or
jno
push
rcl
and
repz
cmp
mov
mov
mov
imul
xor
sbb
mov
adc
push
aas
test
loopne
adc
and
xor
push
or
adc
int3
push
jno
add
cmc
vpmaxub
lds
sub
fisub
jae
(bad)
xor
in
pop
shl
jmp
lods
addr16
xchg
jge
adc
add
sti
test
aaa
daa
fstp
scas
aas
and
neg
idiv
mov
jecxz
pusha
fs
pop
sahf
shl
addr16
aaa
iret
inc
movs
jae
gs
mov
shl
mov
sub
sbb
jp
xchg
sub
sub
mov
std
ds
nop
inc
out
adc
push
and
jno
dec
xlat
mov
mov
shl
rol
movs
dec
xor
int3
pop
ret
out
into
and
ja
repnz
es
into
fwait
sub
aas
inc
sbb
cmps
outs
popa
and
out
mov
xor
xor
inc
xchg
retf
enter
mov
clc
xor
sub
jb
ds
cmp
sub
mov
(bad)
push
daa
mov
mov
sub
cmp
pop
mov
cmp
test
sub
cs
sbb
fdivr
(bad)
in
ja
pop
mov
outs
scas
jle
sbb
mov
xlat
dec
jmp
(bad)
jg
adc
or
stos
(bad)
fbld
push
xor
adc
inc
stc
pop
pop
movs
mov
adc
hlt
or
int
jnp
ins
cmp
jne
dec
outs
test
mov
xor
out
into
fwait
adc
jmp
xchg
shr
jp
repnz
mov
call
mov
jbe
lods
fdivr
lds
ret
sub
add
stc
push
or
xor
int
mov
xor
aas
mov
or
xor
pusha
out
and
pop
inc
sbb
fs
fistp
lahf
test
mov
jnp
adc
mov
repz
adc
xchg
jne
imul
in
jl
sahf
mov
sbb
mov
ret
mov
aad
push
mov
imul
xor
push
dec
push
pop
pop
out
xor
es
jb
adc
je
lods
and
(bad)
jb
test
cmp
inc
(bad)
push
addr16
mov
(bad)
pop
sub
cmc
xor
ror
stos
fsubr
mov
aas
and
sub
(bad)
pop
imul
lds
outs
xchg
lods
inc
jmp
and
pop
jbe
test
adc
call
inc
push
addr16
sub
mov
push
pop
out
imul
adc
mov
loop
mov
adc
add
xor
xor
imul
mov
pop
cmc
inc
sar
dec
mov
pop
dec
shr
mov
sbb
(bad)
jnp
in
lds
mov
addr16
push
jge
ret
or
mov
enter
cmps
bswap
sbb
lds
into
cld
pop
bound
cmp
aaa
add
mov
jmp
cli
outs
add
add
popf
data16
jle
jg
loop
in
xchg
inc
push
cs
ret
pop
dec
mov
pop
pop
mov
jecxz
mov
(bad)
aam
aam
push
xor
or
add
sub
jo
adc
pop
mov
inc
out
lods
popf
data16
fistp
pop
pop
adc
mov
sbb
mov
rcr
xor
inc
aaa
jecxz
mov
mov
adc
mov
inc
push
xchg
cmp
shr
xlat
mov
push
sub
mov
call
sbb
pushf
mov
cli
sbb
js
fs
sub
jmp
fstp
test
(bad)
pop
adc
mov
imul
jecxz
mov
mov
fnstenv
xchg
add
jmp
cmp
sbb
repz
jp
mov
and
jb
mov
int3
or
jecxz
ror
and
repnz
push
dec
repz
jmp
adc
cdq
cmp
aaa
(bad)
mov
bound
out
jns
in
retf
rcr
hlt
sub
adc
out
mov
mov
sub
cmp
shr
shl
mov
(bad)
xor
cld
shr
or
pop
je
imul
cmp
rol
out
sar
repz
cdq
shl
scas
lods
cmps
(bad)
inc
mov
ror
imul
pop
xchg
retf
mov
jnp
cmps
cmp
xor
mov
mov
jge
fsubr
popf
mov
sbb
stos
jbe
stos
jmp
or
xor
sbb
adc
or
nop
shl
mov
mov
xchg
mov
cmp
in
jecxz
das
jae
rcl
xor
or
jb
cmp
cli
push
mov
mov
fdivr
push
sbb
jge
addr16
cmps
adc
dec
sub
xor
movs
jae
mov
sbb
push
add
add
lds
xor
test
cmp
js
imul
std
(bad)
fs
mov
hlt
xchg
std
jnp
scas
inc
cwde
mov
adc
(bad)
and
retf
fnstcw
adc
aas
test
push
test
les
aaa
aas
in
pop
mov
popa
aad
pcmpgtb
pop
mov
xor
pop
jmp
aas
mov
inc
inc
test
jge
push
mov
ins
int3
push
aad
aaa
rol
sub
aas
sbb
mov
neg
imul
fwait
pop
add
jge
push
mov
push
mov
les
int
mov
fwait
sbb
test
mov
mov
mov
fisttp
adc
cmps
ret
jle
sub
jb
lds
pop
cmp
jbe
adc
xchg
pop
inc
not
dec
xor
aaa
das
fwait
shr
sbb
sub
aaa
xor
push
dec
xor
dec
inc
cmps
mov
and
inc
inc
xor
aas
inc
jge
aas
mov
or
xchg
scas
mov
pusha
out
xchg
sbb
xchg
or
fwait
push
jnp
les
mov
iret
cs
xlat
pop
scas
mov
js
pop
add
xchg
(bad)
icebp
adc
fmul
imul
adc
pop
mov
cs
cmp
add
push
push
(bad)
repnz
in
mov
mov
neg
jle
and
out
push
call
cmps
shr
lock
stos
jne
int
sub
mov
sub
loopne
lods
push
aam
mov
cwde
xor
adc
add
js
mov
sub
out
out
jns
(bad)
enter
pop
cmp
mov
dec
jl
mov
ss
pop
add
pusha
xor
fcmovb
stos
je
arpl
sbb
ins
jb
cmp
sbb
test
dec
mov
dec
mov
adc
arpl
xlat
std
jbe
push
mov
ja
pop
sahf
outs
jnp
stos
test
fisubr
cmp
loop
fwait
lds
mov
pop
stos
xor
test
iret
pop
js
aam
xor
sti
jns
or
test
dec
add
sub
mov
(bad)
or
xor
imul
scas
sub
adc
or
mov
jl
stos
inc
or
xor
adc
mov
in
(bad)
sub
sub
and
and
push
pop
lahf
cmp
call
stc
cmps
dec
(bad)
push
repnz
xor
jp
(bad)
cmp
mov
scas
sbb
cmp
mov
sar
js
fsub
and
call
(bad)
pop
hlt
dec
mov
pop
aas
and
jno
outs
cmp
fcomp
push
mov
add
ffree
xchg
mov
xchg
xchg
sub
xor
(bad)
(bad)
jnp
or
or
lods
sbb
xlat
lahf
lods
aas
sub
sub
loopne
call
pusha
inc
enter
jecxz
mov
iret
jns
pop
div
pop
add
(bad)
jne
(bad)
stc
jg
xor
push
mov
mov
adc
les
jle
mov
popa
cmp
iret
jp
sbb
ins
mov
js
jmp
jmp
push
jb
aam
xchg
sub
cmp
hlt
xor
js
mov
jo
xor
iret
test
idiv
ficomp
(bad)
cmp
in
sar
sub
ja
and
jl
mov
(bad)
aam
cmp
pusha
jmp
mov
rol
out
adc
cmp
mov
stc
pop
xchg
scas
int
arpl
movs
je
ror
scas
aad
repnz
cmp
(bad)
mov
(bad)
sub
push
mov
lea
lds
sub
(bad)
adc
xchg
fisttp
cs
daa
into
inc
loope
int3
popf
fisubr
les
adc
adc
cmp
push
movs
inc
mov
movs
stc
mov
lods
and
inc
sbb
jns
je
adc
stos
mov
repz
mov
cwde
or
cmp
adc
js
ja
mov
stos
out
xor
stos
lds
or
aas
pop
lods
adc
mov
daa
out
hlt
lods
pushf
xchg
aaa
pusha
sbb
cmp
fcmovne
fst
aas
mov
cwde
(bad)
rol
scas
popa
mov
inc
mov
xor
mov
scas
retf
in
jbe
cmps
aaa
scas
jnp
stos
or
add
in
das
push
fnsave
push
sbb
cmp
mov
mov
sar
shl
rcl
bound
push
gs
mov
add
(bad)
sub
cmp
and
adc
imul
popf
(bad)
or
jae
out
adc
inc
outs
cmps
cmc
aaa
test
mov
inc
xlat
aam
mov
or
jl
mov
ins
stos
cmps
shl
jns
movs
and
or
js
loop
in
scas
xchg
jmp
push
add
adc
les
jne
faddp
fidivr
pop
cmps
(bad)
(bad)
les
loop
mov
mov
outs
mov
jno
adc
dec
inc
(bad)
int3
jo
(bad)
jnp
add
es
sbb
scas
inc
sti
aas
call
mov
push
lea
rol
mov
pop
dec
xor
out
mov
leave
jmp
movs
out
inc
ja
mov
das
mov
and
push
adc
jnp
sub
jecxz
outs
(bad)
int3
dec
aad
int3
shr
mov
ss
adc
adc
test
outs
adc
sub
mov
cli
jnp
imul
and
adc
das
xchg
adc
sar
pop
imul
xor
lea
fs
sar
jge
popf
aas
sub
cmps
mov
sub
inc
je
rep
aaa
jmp
mov
mov
imul
and
retf
sub
movs
mov
push
outs
dec
sub
pop
sub
ret
fst
fadd
rol
in
addr16
nop
in
stos
lds
ror
fidiv
js
push
mov
cmps
shr
sbb
add
aaa
in
or
mov
aas
jb
xlat
and
xor
push
sar
push
cmp
adc
jecxz
mul
sbb
mov
jo
adc
dec
add
lea
mov
sub
mov
mov
adc
dec
mul
pop
js
shl
imul
sbb
movs
ret
lock
jae
and
mov
mov
mov
mov
std
mov
cmps
sub
jle
sub
stos
aaa
mov
and
ins
jle
cdq
mov
or
inc
fwait
pop
daa
cmp
popa
push
jns
hlt
adc
(bad)
fisubr
push
aad
or
ret
cmp
sub
jno
js
fild
cmc
(bad)
sub
fdivr
rol
cli
and
xchg
dec
lds
jmp
mov
fsub
push
mov
cld
rcr
or
js
sub
cmc
mov
(bad)
movs
pop
mov
mov
jmp
mov
fwait
cld
pop
les
inc
(bad)
cdq
lods
xor
push
lods
xchg
daa
ficomp
mov
adc
out
jmp
push
mov
cs
lock
lds
(bad)
pop
adc
das
daa
je
sbb
cmp
in
adc
mov
nop
enter
out
add
add
cmp
in
fcom
adc
enter
aad
sub
in
cmp
jecxz
inc
sbb
xchg
pop
cmp
sbb
ss
adc
push
jle
and
outs
pusha
in
rcl
inc
and
cmps
pop
inc
cmp
fisub
vcvtsi2ss
gs
cs
(bad)
clc
jne
push
or
mov
mov
stos
mov
cmc
jp
pop
fsub
or
sbb
je
lea
lock
retf
and
cld
adc
cmp
lea
mov
jnp
pop
mov
int3
xchg
mov
pop
pop
mov
pusha
jb
xlat
(bad)
cmc
jecxz
cmp
xor
sub
xor
ret
fld
cmp
mov
and
cmp
lahf
nop
rcl
imul
adc
fild
fisubr
push
repz
pop
mov
cmps
xchg
aad
and
adc
aam
sar
cs
jns
jl
xchg
in
cmc
cwde
fmul
or
shr
jnp
mov
loop
and
pusha
iret
mov
mov
add
cld
loopne
mov
adc
(bad)
(bad)
push
or
mov
sbb
add
cmps
xchg
adc
movs
mov
sti
aam
outs
mov
sbb
mov
add
fwait
popf
add
call
sub
inc
(bad)
nop
in
add
add
bound
mov
scas
inc
movs
pusha
adc
lods
cmp
jp
hlt
mov
mov
mov
jne
push
cli
popf
loope
scas
mov
mov
fs
sahf
add
xor
popf
push
cld
rcr
sub
cmp
jno
and
stos
jb
xor
sub
xchg
fld
adc
(bad)
sbb
mov
xlat
mov
scas
(bad)
pop
jmp
jno
mov
push
fwait
movs
in
retf
fs
pop
dec
inc
sbb
stos
or
aam
fnsave
xchg
inc
mov
lds
inc
push
and
aad
inc
das
aas
inc
or
arpl
repnz
pop
xchg
fmul
sub
jae
cmp
fdivr
cmovl
push
cmp
or
cli
push
lds
aas
push
mov
(bad)
dec
adc
dec
jae
nop
mov
mov
cmp
adc
and
int
and
push
dec
sbb
in
pop
outs
rol
adc
mov
mov
push
cs
jecxz
into
push
lods
test
arpl
pop
mov
adc
dec
pop
sbb
paddd
pop
and
xlat
aas
and
(bad)
mov
scas
and
inc
inc
cmp
in
xchg
or
scas
frstor
clc
int3
pop
sbb
es
ds
outs
inc
jge
scas
daa
sub
or
mov
pop
add
sbb
popf
aam
jns
sub
das
push
adc
mov
shr
in
inc
out
push
push
gs
lods
(bad)
and
lods
cmp
or
jo
xor
out
xor
repz
and
push
in
imul
push
cmps
xor
and
scas
lds
push
sbb
dec
ins
aas
mov
loop
jae
cli
cmp
and
or
jo
adc
mov
add
stos
dec
push
mov
adc
xlat
and
xor
xchg
lds
addr16
shl
sbb
ja
(bad)
int
enter
mov
test
mov
push
xlat
jg
mov
sbb
or
repnz
xor
inc
pop
(bad)
mov
sub
and
jg
jne
jae
pop
movzx
test
pop
movs
push
sahf
call
jmp
xor
sbb
or
push
mov
push
pop
lahf
adc
adc
cs
fldcw
call
jl
into
or
jno
sub
pusha
fisttp
xchg
xlat
idiv
push
call
ror
clc
adc
mov
cmps
es
mov
push
inc
shr
cmp
mov
in
xchg
jne
outs
int3
cmps
adc
es
leave
leave
inc
int
nop
fwait
(bad)
add
add
inc
movs
xchg
adc
fistp
arpl
adc
add
(bad)
adc
dec
pusha
in
lahf
mov
mov
mov
or
mov
shl
add
in
jp
mov
jmp
ja
xchg
in
imul
cmp
jno
add
push
data16
mov
std
sahf
movs
jo
inc
aad
test
scas
(bad)
sbb
pusha
mov
or
mov
cdq
shr
movs
scas
pop
bound
mov
sbb
cmp
cmp
mov
test
fisubr
retf
push
data16
push
ds
pushf
std
mov
stos
jg
sub
jae
imul
jg
dec
dec
out
add
xchg
sbb
push
fs
xchg
dec
sub
call
sub
vpaddd
mov
jo
imul
retf
mov
(bad)
jo
mov
aas
jne
xor
adc
mov
cmp
mov
pop
push
sub
push
rcl
mov
inc
mov
ret
sbb
inc
outs
(bad)
sub
mov
sbb
jge
add
fidivr
data16
into
xlat
sti
and
mov
scas
ss
xor
inc
cmp
(bad)
adc
out
(bad)
jnp
jg
add
push
inc
inc
fsubr
pusha
mov
xor
mov
js
aaa
add
imul
(bad)
mov
lods
ret
sub
retf
xchg
pop
(bad)
sti
sbb
sub
shl
pop
inc
in
loopne
cwde
dec
mov
xlat
xchg
fnstenv
or
sbb
add
mov
mov
push
pop
es
fnstsw
cmp
add
ins
or
adc
lds
(bad)
cmps
sub
add
or
mov
ficom
lds
out
scas
sub
pop
push
mov
icebp
mov
adc
push
mov
scas
cmp
xchg
stos
lds
ror
add
cli
mov
mov
add
cmp
addr16
aas
adc
fcomi
cmp
mov
cmp
js
lds
(bad)
dec
stc
loopne
frstor
fadd
sub
mov
out
sbb
cmp
fst
cmp
jo
loop
nop
xor
stos
adc
lahf
and
mov
adc
cli
imul
ret
ror
push
cmp
xor
fdivr
mov
popa
(bad)
mov
inc
and
xchg
add
jbe
cmps
lds
pop
fs
aaa
xchg
and
and
stos
mov
or
adc
xchg
(bad)
pop
xchg
js
jbe
fs
sbb
add
in
lock
adc
mov
push
movs
cmp
mov
cld
test
mov
jecxz
popf
jns
scas
jne
les
pushf
pop
jne
inc
pop
retf
loop
cmps
in
(bad)
cld
pop
fcomp
sub
add
aam
je
inc
pop
scas
jp
xor
inc
cmp
adc
mov
sbb
pop
(bad)
jo
mov
test
fist
pop
jns
jle
js
(bad)
call
fstp
scas
mov
jnp
into
lea
test
enter
mov
scas
repnz
rol
pusha
or
mov
ds
loop
es
cwde
and
inc
sbb
sub
hlt
xchg
pop
mov
(bad)
jge
xchg
and
(bad)
jmp
jns
ins
clc
mov
lods
and
ret
stos
sub
or
mov
fmulp
adc
mov
pop
xchg
fs
les
pusha
ins
gs
(bad)
mov
imul
pop
movs
sbb
and
out
shl
cmp
add
xor
arpl
in
rcl
adc
dec
inc
adc
jno
loop
(bad)
cmp
or
dec
jg
ds
sti
lahf
mov
sbb
stc
mov
or
and
push
fsub
push
in
pop
aas
xchg
lds
je
outs
movs
jle
into
xchg
inc
das
retf
dec
xor
cmc
retf
push
and
ins
jmp
icebp
mov
inc
mov
jl
retf
cld
into
cmps
dec
jnp
aam
repnz
xchg
add
(bad)
aam
sbb
jmp
stos
mov
and
mov
and
mov
es
xor
(bad)
sbb
movhps
call
xor
shl
in
mov
mov
(bad)
jae
lahf
cmps
hlt
adc
jnp
std
pop
jnp
and
mov
sbb
stos
jg
mov
test
xchg
sbb
jmp
mov
jge
les
inc
pusha
mov
cmp
dec
mov
enter
sbb
outs
push
pop
mov
pop
dec
and
xchg
sub
or
stos
cmps
int3
enter
popf
out
push
or
data16
and
push
jg
xor
mov
xchg
sbb
xchg
add
pop
lds
xor
aad
add
(bad)
ja
mov
sub
mov
jl
fidivr
ss
sub
lahf
pop
fdivp
push
mov
stos
xor
sbb
or
pusha
popf
inc
inc
dec
inc
lods
xor
mov
rcl
retf
sub
xchg
inc
inc
lahf
adc
(bad)
jo
push
aad
test
jge
cmps
jl
call
jecxz
inc
and
lds
les
ret
retf
pop
jg
shl
and
in
int
sahf
jge
loope
jl
(bad)
fdivr
test
(bad)
icebp
aaa
add
pushf
jecxz
jb
outs
add
xlat
in
aas
push
(bad)
sahf
mov
jle
addr16
mov
lds
sahf
jne
dec
push
sbb
cmp
inc
dec
and
ret
jp
xor
jnp
mov
sub
adc
jo
scas
popf
xchg
jnp
jb
into
and
sbb
out
add
gs
popa
lds
scas
icebp
arpl
ficom
outs
fimul
(bad)
mul
daa
dec
fwait
aaa
into
mov
jmp
pop
ror
xchg
xor
push
cli
das
not
ds
iret
mov
fdivr
ja
(bad)
mov
cmp
cli
aas
out
imul
mov
loope
nop
mov
or
or
jno
fnstcw
add
les
scas
and
es
fcom
(bad)
and
lods
loopne
pop
movs
pop
mov
and
jle
sbb
or
push
sub
mov
pop
stos
push
xchg
test
xor
in
and
popa
mov
loop
mov
lock
push
arpl
call
stc
out
sbb
(bad)
mov
addr16
xchg
pop
jnp
retf
jo
in
pop
nop
inc
xor
or
dec
aam
mov
cmp
jle
cmp
add
aaa
mov
push
adc
sti
arpl
and
mov
inc
xchg
lods
add
jo
fimul
je
aad
sub
inc
xchg
xchg
mov
in
mov
jmp
enter
jge
push
addr16
pop
pop
or
or
test
push
and
rcr
cmp
mov
fnstenv
sbb
mov
jg
test
stos
sti
fdivr
adc
sti
jo
mov
aaa
push
(bad)
dec
daa
repz
cmp
pop
pusha
retf
shr
outs
jo
jmp
jmp
popa
xchg
jno
or
jne
rcr
cmps
pop
mov
scas
and
test
outs
jg
dec
mov
repnz
mov
les
sub
test
mov
loope
pop
ds
cdq
push
and
lods
es
jbe
mov
icebp
inc
sti
stos
adc
push
lahf
daa
js
ds
lods
repnz
push
or
sbb
ja
sahf
jge
xchg
jo
push
dec
mov
xor
popa
mov
dec
retf
cmp
xchg
jg
xor
stos
jge
mov
movs
inc
packssdw
dec
mov
xchg
jb
test
fsubp
jo
popf
jno
sub
or
adc
js
stc
mov
(bad)
push
and
sub
rcr
dec
movs
xlat
push
xor
xor
mov
out
(bad)
popa
dec
jp
xlat
test
fisub
int3
mov
mov
imul
mov
pop
jno
ja
jge
pop
sbb
dec
adc
lea
call
push
repz
push
lahf
les
ret
push
(bad)
lock
ret
(bad)
movs
jb
rcl
div
sti
adc
push
shl
xlat
mov
xor
pop
cmp
ror
cmp
mov
repnz
push
cmp
pop
sub
adc
out
jecxz
push
ins
fs
rcr
imul
cmp
gs
in
test
or
sahf
jecxz
xor
mov
cmp
xor
xor
ss
mov
aam
rol
inc
mov
pmaddwd
icebp
push
mov
jno
pop
sbb
jge
loop
jne
retf
sub
sbb
sub
xor
jmp
pop
mov
and
jecxz
jle
mov
xchg
out
jb
popf
add
cmp
pop
inc
mov
call
jle
enter
int
inc
inc
cmp
test
and
dec
sub
and
adc
sbb
mov
das
push
jae
jg
daa
add
xchg
inc
adc
ret
fninit
cmp
mov
js
out
adc
sar
(bad)
jne
paddw
lds
xor
inc
popa
jns
ja
cmp
jecxz
dec
mov
test
rcr
sbb
pop
mov
jb
in
adc
inc
xchg
fisttp
pop
jp
cmp
loopne
add
push
vmovaps
mov
xor
mov
pextrw
mov
call
daa
ror
popa
stos
ins
cs
std
cmps
xor
int3
dec
fisttp
inc
jbe
pop
adc
in
jle
xchg
fs
fwait
inc
ins
popa
into
repnz
sbb
push
pop
mov
adc
adc
aaa
outs
in
pop
in
out
movs
adc
dec
lahf
add
(bad)
imul
push
push
jo
sub
outs
loope
mov
xor
outs
sbb
cwde
dec
adc
or
shl
mov
pop
dec
nop
mov
rcr
scas
add
xor
lods
aaa
inc
xchg
pop
adc
cmps
sbb
stos
mov
rcl
cmp
(bad)
je
out
je
dec
cmp
push
sbb
cmp
aad
dec
xchg
inc
sbb
or
jmp
enter
sub
mov
jle
lods
adc
fcmovu
mov
in
push
dec
je
dec
loope
int
inc
push
xchg
in
(bad)
outs
add
and
push
(bad)
cmc
aam
ds
lods
mov
shl
xchg
leave
mov
aam
movs
cwde
mov
es
inc
aaa
jnp
outs
jne
adc
test
repnz
add
movs
or
(bad)
out
xor
sub
mov
lods
mov
dec
cmp
js
cmp
jp
cmp
and
adc
dec
out
jmp
and
pop
inc
inc
mov
sbb
int
retf
repz
cmp
mov
loop
nop
ja
and
std
cmp
das
cs
mov
cmps
xor
fwait
int3
adc
(bad)
in
cmps
(bad)
jge
jno
add
les
ja
cmp
xor
frstor
scas
fdivr
adc
add
call
xor
stos
adc
jno
mov
icebp
icebp
popa
push
fidivr
rol
(bad)
mov
fwait
xchg
mov
adc
adc
fimul
int3
mov
mov
sbb
ss
addr16
xchg
mov
cmps
mov
push
inc
push
push
mov
icebp
jmp
mov
jle
das
mov
mov
enter
mov
lds
adc
pop
xor
sub
hlt
mov
sbb
fiadd
mov
in
xchg
ins
int3
jge
popf
into
scas
repz
jl
iret
jge
adc
mov
leave
add
ja
js
fwait
xor
pop
loope
push
vpsubd
adc
jge
mov
add
or
fs
retf
dec
mov
jp
sbb
in
cmp
sub
pusha
imul
jmp
dec
es
mov
push
mov
push
sub
jg
shr
outs
mov
outs
into
and
or
std
sahf
sub
mov
cmps
push
sub
inc
scas
in
cmps
xor
jecxz
movs
movs
stc
aad
lods
mov
add
stos
xor
push
dec
inc
ror
call
sub
std
mov
cmps
pusha
(bad)
mov
mov
mov
(bad)
loop
lahf
cmps
jne
(bad)
std
push
lods
push
mov
jge
jle
ror
gs
int3
das
xchg
rol
pop
pop
nop
mov
pop
dec
xor
mov
sub
(bad)
fsubr
pop
mov
jmp
mov
retf
ret
fsub
lods
push
mov
sub
pop
push
ds
jae
cmp
sub
jo
loopne
cld
pop
das
lds
mov
shl
and
int
js
call
retf
outs
mov
xor
and
dec
or
jl
xor
nop
cmps
mov
inc
loopne
int
mov
in
mov
pop
shr
pop
sbb
addr16
fild
adc
repz
adc
xor
adc
out
je
daa
rcl
or
test
jge
(bad)
idiv
fs
pop
push
outs
xor
jmp
(bad)
xchg
(bad)
push
movs
mov
pop
sub
cli
iret
fcom
or
fmul
in
jl
(bad)
mov
(bad)
push
js
dec
jnp
mov
xchg
(bad)
mov
aaa
mov
ins
rcr
mov
and
cmp
scas
dec
xchg
mov
stos
fs
call
mov
pushf
(bad)
mov
inc
ror
inc
jb
in
test
aaa
add
movs
xlat
in
rol
pop
cmp
push
mov
sahf
aaa
pop
call
js
call
aaa
icebp
js
outs
shl
std
jp
lock
mov
adc
lahf
push
movs
mov
je
or
(bad)
mov
dec
cmp
push
(bad)
aad
push
scas
add
dec
sahf
lods
jne
pop
popf
sub
or
lods
cdq
fdivr
(bad)
push
in
jg
adc
jmp
lds
pop
fst
xor
sbb
jg
xor
es
mov
push
jmp
xchg
xor
into
call
ds
mov
jle
pop
leave
adc
in
pop
loop
outs
mov
dec
sub
stos
cwde
mov
outs
cmp
sub
sbb
mov
adc
inc
lahf
pop
xor
fs
pop
sub
inc
pop
ror
jb
lea
(bad)
push
jmp
sbb
mov
inc
xchg
movs
popa
idiv
jnp
stos
test
lahf
jg
inc
push
xchg
jns
jge
jno
xor
cmps
add
out
bound
gs
jno
cmp
xchg
cmp
sti
imul
fisub
scas
hlt
jg
mov
enter
push
push
(bad)
dec
mov
dec
cdq
js
mov
cs
adc
cmp
daa
push
hlt
out
inc
sub
aas
cmc
std
mov
aad
xchg
and
push
lds
ja
jge
fsubr
(bad)
jno
or
pop
in
push
or
call
cmp
ja
jne
and
cmp
mov
mov
adc
rcl
push
das
data16
scas
popa
in
mov
test
int
pop
cmps
pop
imul
mov
inc
js
jmp
les
pop
stos
inc
mov
mov
cmp
call
(bad)
clc
xor
add
mov
retf
fldenv
jmp
add
jp
xchg
and
fs
pop
das
cmp
stos
addr16
mov
cmp
rcl
(bad)
test
dec
lds
stos
add
pop
inc
mov
into
retf
xor
repz
in
xor
mov
cmp
and
rcr
inc
loopne
mov
stos
lahf
add
sub
retf
fs
sar
test
or
mov
jo
mov
lds
fadd
addr16
pop
pop
add
fsubr
stos
xchg
pop
xchg
dec
stos
jno
sahf
sbb
add
ret
sub
js
cli
stos
call
or
cmps
jecxz
adc
mov
cmps
cdq
movs
call
add
stos
lds
inc
fwait
sbb
add
pop
in
shr
addr16
xor
ficom
add
fdivr
data16
cmc
dec
cmp
int3
xchg
mov
loopne
repnz
or
add
jnp
sti
mov
popa
and
lods
jp
jmp
push
out
xchg
addr16
scas
sbb
mov
dec
jp
imul
lahf
xor
ret
dec
movs
imul
bound
dec
ja
call
fdivr
cdq
add
dec
jp
ins
xchg
js
jns
movs
cmp
sub
adc
(bad)
mov
dec
mov
inc
inc
jo
fidiv
stos
data16
jb
enter
mov
pop
out
test
test
dec
pop
int
sbb
jp
fwait
mov
hlt
repnz
pop
fwait
hlt
(bad)
mov
aam
dec
es
cdq
cli
fnstcw
daa
(bad)
sub
sub
mov
movs
adc
cmps
fisubr
push
imul
inc
int
cwde
das
les
fsubr
ins
pop
call
jbe
xor
sbb
aas
psubusb
ret
inc
(bad)
leave
add
sbb
aas
pop
gs
fs
in
stos
inc
inc
addr16
add
(bad)
out
cmp
fs
push
sub
and
sub
adc
pop
clc
mov
inc
or
fs
fcomip
pop
sbb
aas
out
movhps
adc
sbb
cwde
jmp
add
and
cmp
mov
clc
cmova
scas
xor
push
ss
add
mov
push
push
mov
cmps
inc
nop
push
jb
imul
inc
repnz
les
sbb
add
jo
sbb
aam
xchg
es
jns
xchg
jl
mov
inc
push
pop
popf
retf
or
mov
mov
mov
cmp
sub
and
dec
cmps
dec
add
add
add
call
mov
ins
and
aas
add
jo
dec
popa
icebp
mov
imul
idiv
jnp
in
mov
cmova
inc
lahf
xchg
lds
inc
sub
dec
outs
lods
inc
jo
cmp
dec
lds
jl
xor
(bad)
jbe
adc
add
neg
int3
mov
push
cmp
ret
xchg
outs
pop
das
pushf
imul
inc
jnp
rcl
jb
popa
int3
fld
jle
sbb
(bad)
call
adc
arpl
(bad)
or
sub
mov
shl
vcvtdq2ps
in
sub
retf
(bad)
jns
fcomp
stc
call
mov
jno
aad
test
cmc
push
or
push
adc
sbb
pusha
xchg
es
lods
(bad)
inc
mov
out
sub
je
ins
idiv
idiv
mov
jno
idiv
jo
sub
mov
adc
fdivp
pop
aam
mov
sub
xlat
stos
(bad)
call
fild
arpl
sbb
cmc
mov
repnz
push
adc
push
ret
jl
nop
dec
je
or
lds
stc
pop
cmp
out
movs
jnp
xor
mov
imul
cmc
fwait
cmp
mov
pop
add
push
fs
fmul
add
inc
fld
out
das
xchg
sub
push
sub
call
xchg
or
repnz
inc
lods
adc
lds
movs
jge
aaa
nop
mov
ja
inc
sbb
outs
mov
or
nop
cld
mov
mov
es
jo
push
cmc
inc
pop
or
mov
dec
jno
mov
pop
aaa
adc
dec
mov
or
adc
retf
adc
or
popa
fwait
mov
xor
jns
ja
mov
push
xchg
fwait
xor
das
mov
xchg
jno
adc
gs
movs
inc
sub
pop
pop
push
adc
retf
add
mov
push
cwde
dec
add
or
cmc
ret
ror
inc
jg
test
mov
xchg
inc
and
ins
fnstsw
cmc
mov
and
xor
xor
lahf
jg
fisubr
cs
call
inc
pushf
jo
mov
jecxz
mov
js
jo
sub
faddp
out
mov
shl
aaa
(bad)
sub
sbb
inc
js
jmp
(bad)
dec
ror
outs
inc
xor
out
in
xor
ficomp
adc
leave
cmps
repz
add
fdiv
jge
jp
rol
sub
dec
fidiv
cli
inc
retf
test
jae
xchg
mov
mov
adc
adc
ds
out
mov
push
mov
xchg
or
push
shl
jo
imul
xor
aas
mov
fisubr
adc
jg
cs
rol
popf
dec
retf
in
aas
push
(bad)
call
push
in
jle
pop
fwait
inc
or
add
add
imul
arpl
mov
cmps
nop
xlat
mov
push
cmps
mov
mov
jns
lahf
sub
jge
sbb
push
cwde
mov
dec
mov
adc
add
mov
sub
in
test
test
cmps
cmp
scas
repnz
sub
mov
(bad)
lods
mov
mov
sub
stc
rcl
mov
imul
imul
dec
xchg
inc
add
(bad)
aas
js
(bad)
sbb
xchg
sahf
popa
(bad)
scas
in
jns
dec
lds
test
outs
js
daa
aas
adc
imul
mov
mov
xchg
pop
pop
pop
stos
sub
push
cmps
jl
jo
or
js
mov
sar
and
sub
(bad)
fcom
mov
rcr
add
and
out
add
out
add
and
mov
imul
mov
add
adc
adc
jne
xchg
mov
scas
cs
sar
and
mov
ss
dec
fwait
daa
arpl
pop
dec
dec
vmovddup
stc
inc
dec
dec
inc
imul
lods
add
leave
scas
stos
inc
ds
sbb
popf
js
mov
and
rcl
lods
push
aad
and
imul
in
movs
(bad)
bound
sub
clc
enter
leave
out
lea
dec
imul
cmp
pop
or
xchg
jnp
cmp
cmp
hlt
inc
retf
adc
lahf
push
add
dec
mov
pop
ins
sub
mov
iret
xchg
add
mov
iret
sub
mov
add
cwde
add
cmp
out
(bad)
(bad)
adc
fisubr
outs
aaa
push
popf
mov
jo
sub
push
xchg
mov
pop
mov
pop
sub
jge
xchg
mov
sub
jle
adc
jmp
xor
xchg
gs
fisub
xor
push
call
sbb
in
lds
xor
ret
mov
xor
push
stc
push
mov
dec
adc
push
mov
mov
loop
jno
mov
mov
cmp
push
and
test
push
rcr
addr16
retf
fist
jmp
adc
mov
sub
dec
stos
cmp
or
push
mov
sbb
inc
jo
fwait
jp
hlt
rcr
push
(bad)
loop
call
inc
dec
and
dec
inc
imul
mov
repz
and
or
jb
inc
stc
push
sbb
inc
pop
mov
sbb
pop
xor
cmc
cli
mov
or
bound
dec
(bad)
inc
push
call
xor
mov
ds
push
jno
sar
jns
sbb
lds
into
xchg
leave
pushf
adc
(bad)
scas
jne
sar
sub
mov
adc
push
fs
icebp
or
cmps
(bad)
popa
sub
setp
shl
stc
popf
pushf
push
ret
jne
xor
cmp
xor
jl
jns
push
lahf
int3
cmps
jp
add
data16
outs
shl
loop
push
mov
hlt
arpl
and
and
sbb
pop
inc
ja
aad
inc
jge
adc
loopne
loopne
hlt
fisttp
test
cmp
inc
stos
xor
(bad)
scas
xchg
or
jg
pop
mov
pop
mov
(bad)
mov
pop
aas
imul
(bad)
fwait
stos
cmp
fldenv
dec
adc
pushf
repnz
aaa
xor
jae
gs
sub
je
fwait
adc
ja
sub
mov
shl
dec
mov
push
addr16
daa
jns
cmp
stos
in
jo
fsub
inc
mov
shl
imul
mov
stc
ds
test
shr
cmp
mov
mov
sbb
push
imul
xlat
sahf
fwait
add
sub
cmps
pop
push
mov
add
sbb
stos
loop
out
xor
cmp
mov
or
(bad)
mov
push
add
ds
cmp
cdq
mov
daa
vmwrite
ins
shr
cmp
daa
sbb
fdivr
fnstcw
retf
js
(bad)
shl
add
scas
sub
(bad)
fstp
xchg
cmp
cmps
adc
popaw
arpl
cmp
cwde
lods
ret
xchg
and
dec
jmp
inc
xor
in
mov
sub
jnp
dec
jge
fcom
retf
or
test
jns
push
mov
pusha
stos
sar
pop
les
cmps
shr
prefetch
sub
pop
adc
mov
in
mov
int
or
clc
inc
out
out
movs
test
outs
(bad)
leave
jle
test
fwait
repz
push
(bad)
xor
cmp
scas
xchg
xchg
jg
mov
js
sar
mov
pusha
adc
and
cli
push
adc
stos
push
nop
out
(bad)
dec
or
lods
cmps
inc
or
fist
add
add
jae
or
mov
ds
jp
cmp
loopne
stos
aad
sub
vxorpd
std
imul
add
and
cmp
data16
dec
adc
icebp
adc
cmp
mov
adc
int3
mov
aaa
es
adc
mov
arpl
(bad)
es
dec
mov
rcr
mov
inc
jnp
mov
mov
jne
aas
push
leave
test
fdivr
stos
inc
movs
sbb
jmp
ds
inc
pop
or
mov
push
dec
mov
add
retf
(bad)
scas
push
adc
and
mov
out
popa
or
mov
stos
stos
inc
pop
std
push
les
push
je
mov
sbb
hlt
sub
or
fdivrp
mov
(bad)
outs
mov
mov
sahf
inc
das
mov
xchg
xchg
xchg
mov
dec
ror
inc
dec
jb
push
(bad)
xor
cmps
adc
call
jbe
jae
call
push
loopne
pushf
add
lock
jmp
cdq
inc
ds
xchg
adc
sbb
fimul
test
(bad)
xchg
add
xchg
sub
fwait
xor
jne
icebp
gs
cmps
pop
int
dec
aam
mov
xor
in
adc
xchg
(bad)
into
mov
sbb
dec
mov
cmp
inc
mov
jno
pop
sti
popf
fsub
hlt
mov
and
inc
loopne
xchg
sub
fsub
(bad)
out
mov
and
test
mov
cmp
mov
jle
cmp
scas
adc
daa
push
cwde
dec
jmp
(bad)
jp
jne
imul
cmp
loopne
cld
adc
jmp
jbe
in
mov
xchg
js
fmul
mov
dec
stos
es
imul
jbe
inc
ficomp
add
outs
and
push
fst
mul
(bad)
(bad)
jmp
stc
retf
mov
jge
sub
in
mov
fidivr
mov
loopne
mov
push
stos
xor
test
xor
lahf
cdq
(bad)
push
push
rcr
mov
movs
sbb
outs
std
in
cvtps2pd
xchg
cmp
call
or
div
sti
cld
les
out
cld
lods
lds
aam
cwde
in
retf
sub
les
jecxz
jge
scas
or
xchg
(bad)
imul
(bad)
sbb
push
stos
cmp
into
sbb
xor
je
add
fist
sbb
jg
(bad)
loopne
jle
scas
inc
add
and
outs
cli
in
pop
and
lock
jp
mov
outs
scas
addr16
pop
cwde
or
jo
stos
dec
mov
jecxz
popa
sbb
inc
cld
movs
fistp
xor
jns
inc
mov
out
jb
sbb
and
xor
enter
mov
xor
and
sbb
outs
cmp
jns
lea
fnstenv
rcr
push
fs
add
xchg
or
and
pop
add
adc
ins
lods
inc
and
ins
cld
push
nop
mov
pushf
cli
fiadd
ins
rcr
dec
and
test
daa
xchg
sub
std
fst
lods
ss
and
pushf
ja
push
lods
jnp
mov
rcr
ja
outs
cmp
push
add
(bad)
xor
adc
push
cmp
les
mov
adc
loop
jnp
fstp
movs
mov
sbb
or
mov
push
in
dec
ror
push
cmps
and
fcmovnbe
and
dec
scas
inc
stos
pop
sub
jge
popf
test
and
cli
fistp
test
push
xchg
cmp
push
cmp
dec
cmp
not
jmp
jp
sbb
je
outs
ret
lahf
(bad)
out
add
iret
imul
outs
inc
adc
mov
xor
mov
std
cmp
cmp
push
jb
clc
mov
pop
inc
xchg
xchg
loope
push
pop
adc
fdivr
loop
pop
add
jnp
cmp
mov
ss
push
imul
ror
lods
or
push
ror
mov
sbb
fucomip
inc
mov
(bad)
jecxz
idiv
mov
and
mov
mov
popa
fsubr
in
mov
xchg
test
push
pop
sub
dec
mov
xchg
sahf
xor
gs
cmp
dec
jmp
push
test
jnp
and
jno
icebp
aam
xor
and
mov
ins
mov
nop
or
sub
pop
aam
dec
mov
jae
(bad)
leave
nop
or
pop
mov
cli
jne
jns
mov
add
mov
retf
sbb
jno
jbe
xchg
mov
js
(bad)
adc
sub
in
je
ret
lds
and
sbb
dec
sub
add
add
not
outs
(bad)
adc
pop
sbb
sub
shl
xchg
xor
jp
sbb
jp
lea
fwait
push
or
jg
loopne
(bad)
pop
sub
sub
mov
iret
dec
js
sub
add
cli
es
dec
lods
not
mov
cmps
data16
inc
xor
push
scas
call
xor
jns
pop
fstp
push
aas
adc
aaa
add
sub
xchg
or
jmp
ins
rcl
neg
push
stos
jb
push
lock
(bad)
adc
pop
popa
(bad)
es
jne
outs
sub
data16
sbb
(bad)
mov
lea
jns
jno
fadd
je
add
pop
fwait
mov
out
cmp
popf
jecxz
fbstp
dec
enter
sub
out
mov
pop
retf
xor
sbb
iret
cdq
fs
mov
test
jg
adc
xor
dec
sbb
stc
add
jp
fisub
ja
push
pop
iret
dec
mov
dec
jo
ret
pop
scas
mov
sbb
test
dec
or
fisttp
mov
and
push
(bad)
(bad)
daa
lods
sub
jl
add
imul
ror
test
lds
arpl
inc
and
xor
daa
add
fsub
popa
add
mov
das
mov
push
retf
mov
pop
shl
xchg
loopne
cmc
icebp
das
cwde
jns
inc
sbb
push
sub
iret
xlat
xor
pusha
sub
push
jne
xchg
(bad)
xchg
out
cmp
cmp
mov
fsubr
pop
sar
mov
mov
outs
lds
pop
cmp
mov
fidiv
sbb
sbb
retf
scas
mov
mov
mov
cmp
mov
cmps
mov
lds
es
leave
ret
adc
arpl
pop
xor
stos
mov
sub
mov
push
xor
or
jl
scas
(bad)
fisttp
jge
pop
lea
push
xchg
push
gs
adc
xor
outs
adc
cdq
or
and
or
ja
cmp
out
js
adc
cs
push
ja
int
mov
test
sub
hlt
leave
test
fdiv
es
pop
cs
lahf
fs
cdq
lods
mov
addr16
sbb
pop
cwde
ds
shl
cli
mov
ret
add
xor
ret
inc
sbb
xchg
int
pop
enter
mov
shr
adc
daa
cdq
adc
mov
movs
cmp
xlat
push
pushf
(bad)
xchg
mov
xchg
pop
pop
aam
sub
mov
mov
lods
mov
lds
pusha
and
and
adc
sbb
ror
pop
mov
scas
mov
invd
sub
mov
mov
shl
cmc
cmp
dec
(bad)
jle
mov
xchg
imul
jmp
jmp
fst
or
sbb
jp
adc
je
mov
outs
lds
mov
fwait
adc
or
(bad)
je
dec
in
adc
mov
aaa
in
sub
mov
mov
es
sahf
push
mov
aad
lods
jecxz
fdivr
je
(bad)
mov
test
jno
rcr
xchg
lds
inc
jg
and
jl
scas
or
lods
popf
(bad)
sub
outs
jb
mov
out
mov
fdivr
sar
mov
dec
adc
enter
daa
arpl
test
inc
and
nop
jae
xchg
cmps
ror
dec
sub
outs
aas
adc
test
add
mov
push
(bad)
cmp
jo
lds
aas
shl
cmps
outs
sub
push
add
stc
mov
sbb
sbb
mov
adc
scas
jnp
and
add
ret
stos
sub
adc
cmp
dec
add
jle
and
movs
adc
(bad)
adc
jns
jae
(bad)
cdq
inc
cmps
nop
daa
dec
cmp
out
test
shl
stos
arpl
pushf
push
mov
xlat
xchg
inc
jo
pusha
mov
or
data16
pop
aaa
es
pop
test
dec
xchg
adc
psubsw
lods
repnz
movs
stc
fidivr
nop
or
aaa
xor
fistp
aaa
pop
xchg
cmp
shl
scas
in
in
cli
mov
hlt
inc
out
(bad)
mov
mov
in
je
xor
movs
sbb
sti
les
movs
fnstenv
cmps
xor
jmp
call
sbb
retf
outs
mov
mov
in
test
out
jmp
sbb
cmps
xchg
lds
movs
inc
jmp
stc
cmp
mov
xor
jmp
data16
(bad)
fisub
sti
cmovns
fadd
jmp
push
cs
dec
daa
jg
clc
xor
inc
pop
outs
(bad)
stos
sub
jmp
mov
scas
sbb
enter
add
in
push
sbb
cmp
mov
add
xor
retf
loope
clc
not
mov
push
adc
cmp
pop
jo
inc
jmp
inc
div
in
inc
xchg
push
(bad)
jle
daa
mov
sub
in
push
loope
jle
sub
jo
fs
jmp
pop
cmp
ret
out
arpl
jbe
jp
bound
jb
cmc
xlat
inc
or
inc
sub
push
jecxz
ficom
push
in
das
gs
add
sbb
mov
jb
pop
adc
mov
(bad)
xor
cmp
fwait
pop
add
mov
cld
push
jl
or
(bad)
push
mov
cmp
mov
sbb
fs
cmc
push
inc
(bad)
sbb
scas
adc
cmps
lods
(bad)
cmp
test
and
lds
adc
dec
repnz
pusha
mov
push
imul
cmps
clc
cmp
js
(bad)
mov
cli
sbb
mov
sub
xor
aad
sub
cmps
(bad)
pushf
jmp
fs
pop
mov
add
pop
les
mov
sbb
das
adc
add
shl
sub
jbe
push
test
leave
shr
jg
dec
mov
cmp
push
xchg
movs
inc
call
sbb
xor
fist
bound
jg
adc
imul
pop
ins
lds
test
xchg
cmp
stos
adc
dec
sahf
or
sub
fisub
out
mov
mov
imul
scas
cdq
cmp
aas
xor
jbe
and
ss
stos
inc
(bad)
repnz
rcl
shl
or
add
ror
and
mov
inc
mov
stos
push
inc
gs
fsubr
lahf
jnp
jne
mov
push
mov
and
ins
in
adc
int3
xlat
push
movs
pop
xlat
shr
pop
repz
add
rol
cld
sbb
stos
mov
aas
aad
sub
mov
dec
and
shl
cmc
and
idiv
gs
lahf
push
and
mov
adc
inc
les
mov
loop
movs
dec
push
adc
sti
push
(bad)
fsubr
push
pusha
rcr
aas
lds
cmp
or
sub
ja
jmp
stos
repz
push
pushf
rcl
sbb
xor
int
nop
mov
(bad)
mov
ja
and
xchg
mov
sub
pop
stc
ret
push
stc
and
push
rcl
xchg
mov
scas
adc
inc
jb
sti
aas
std
pop
cmp
mov
push
pusha
push
daa
xlat
add
mov
test
add
daa
xchg
rep
out
add
out
mov
pop
mov
xor
adc
inc
and
cmp
(bad)
fsub
mov
scas
test
in
stos
mov
popf
or
sbb
jl
dec
push
popa
adc
pop
inc
daa
(bad)
mov
and
pop
dec
xor
xlat
cld
pop
cmp
push
mov
lods
repnz
jle
daa
cs
mov
dec
sub
dec
mov
popf
fstp
mov
pop
lods
jno
(bad)
push
ds
scas
es
cmp
mov
daa
sbb
xor
fucom
daa
aam
mov
jmp
and
cmp
push
and
sub
dec
push
add
out
xadd
add
popa
xchg
sar
sbb
mov
inc
or
scas
mov
lds
popf
cli
lahf
imul
adc
adc
dec
cmp
int
das
aad
jle
xchg
fwait
(bad)
adc
jae
rol
fisub
sbb
mov
es
mov
test
in
cmp
and
fld
call
mov
xchg
cmp
adc
in
ins
cwde
in
test
mov
inc
add
xor
iret
xchg
aaa
mov
and
gs
scas
ret
inc
loope
mov
stos
les
int3
arpl
xor
sbb
mov
push
rcl
pop
rol
jne
rcl
dec
lock
ds
nop
ficom
aad
sbb
cmp
and
pop
lods
addr16
mov
js
imul
lahf
push
cmps
pop
imul
sbb
into
hlt
or
jo
or
mov
lahf
and
xor
jb
sbb
arpl
lods
daa
enter
pop
inc
cmp
daa
cmp
(bad)
rcl
in
cmp
cdq
popa
aad
jnp
daa
pusha
jl
adc
ins
add
lahf
mov
data16
shl
dec
mov
cmp
jne
shr
inc
cmp
retf
ret
pop
sub
sar
xchg
mov
stos
lods
adc
inc
xchg
outs
sub
mov
mov
iret
xchg
mov
mov
mov
jnp
es
(bad)
outs
cmp
jbe
cmp
inc
jp
add
movs
mov
(bad)
ins
adc
adc
pusha
shl
fwait
(bad)
(bad)
sbb
jl
shl
mov
push
out
test
stos
leave
dec
mov
jne
daa
adc
imul
lds
outs
loop
nop
or
push
addr16
lds
les
div
in
outs
cmovno
imul
fbld
cmp
inc
ja
jo
ret
jnp
push
pop
pusha
pop
out
dec
popa
jl
mov
push
or
rcl
loop
jno
(bad)
add
adc
data16
gs
jmp
js
pushf
js
bound
arpl
push
mov
(bad)
(bad)
xchg
ja
adc
scas
jp
dec
imul
and
mov
dec
jp
adc
inc
ret
shr
(bad)
mov
and
mov
push
jbe
hlt
rcr
and
inc
loop
test
rol
sub
xor
repnz
mov
pop
addr16
cmp
push
jae
dec
mov
pop
mov
ret
sub
rcl
mov
push
jnp
ret
enter
xchg
iret
mov
push
(bad)
bound
into
and
add
dec
sar
(bad)
xor
inc
jb
jmp
sbb
mov
jo
ds
fisttp
dec
sbb
and
les
push
jmp
add
pop
hlt
jl
retf
add
lahf
fist
mov
jg
cmp
mov
movs
xlat
test
cmc
add
mov
pop
mov
mov
jnp
stos
xchg
pushf
sar
imul
int3
rcl
jno
dec
fdivr
jne
xlat
mov
leave
jbe
aas
or
retf
das
(bad)
and
je
cmp
cwde
push
xchg
pop
inc
loope
test
scas
js
aas
outs
popa
lods
sub
sar
ret
scas
mov
stc
or
(bad)
pusha
pop
pop
xor
dec
dec
sub
and
adc
inc
stos
int3
in
rcl
cmps
push
out
inc
dec
retf
bound
mov
dec
mov
jmp
jecxz
outs
add
popf
add
dec
arpl
cmp
subps
jl
pop
xchg
pop
sbb
pop
cmc
adc
jl
movs
neg
cmps
push
lds
jnp
in
(bad)
idiv
or
lds
jno
cmp
aas
lds
ja
dec
cmps
out
xor
mov
dec
clc
outs
push
push
rol
xchg
jle
cmp
stc
dec
(bad)
aam
hlt
sbb
fmul
arpl
jmp
cwde
(bad)
jmp
adc
out
jnp
(bad)
out
shl
push
pop
adc
rcl
cs
sbb
or
lds
push
cmp
dec
mov
pop
adc
or
mov
aaa
(bad)
xor
fisubr
inc
fdiv
test
mov
lds
(bad)
mov
pop
js
cmps
or
dec
mov
push
jge
mov
sbb
sub
ret
jg
or
push
and
clc
or
sub
xchg
jns
jle
das
cld
xor
xor
inc
adc
xor
ja
push
pop
aas
fwait
sbb
stos
xchg
outs
mov
or
je
enter
sahf
xor
jae
retf
mov
popf
sar
push
outs
pop
jae
ins
inc
hlt
mov
enter
addr16
ret
outs
jmp
and
cwde
mov
jle
dec
and
adc
sub
push
outs
jl
in
cmps
adc
push
jb
sub
jne
or
mov
sbb
in
dec
pusha
xchg
mov
aas
cs
xor
rcl
dec
imul
retf
cs
clc
mov
scas
je
pop
std
cmp
aas
aaa
inc
sbb
xlat
rcr
call
(bad)
stos
fcom
iret
test
out
fcom
aam
mov
lahf
pop
enter
sbb
popa
or
jno
das
out
fdiv
jmp
cmps
push
mov
lahf
push
mov
outs
sahf
add
push
(bad)
in
movs
outs
ja
or
mov
stc
aas
fadd
clc
mov
aam
frstor
daa
jo
add
(bad)
mov
rcl
xchg
jecxz
test
pop
jns
add
movs
pop
stos
mov
ins
cmp
mov
sbb
frstor
cmps
pop
clc
aas
in
sub
outs
inc
jle
ja
push
ret
popa
cmps
adc
in
adc
mov
addr16
jns
les
sti
jmp
cdq
fisub
mov
add
push
mov
pop
aaa
movs
movs
cmp
enter
rcr
aam
adc
fisub
push
sub
sar
mov
ss
int3
or
add
fnstcw
mov
jl
add
mov
lds
in
vpmaddwd
mov
jnp
add
or
xor
stc
inc
into
les
retf
dec
ins
rol
(bad)
pop
inc
stc
movs
adc
es
mov
push
or
mov
pop
dec
mov
pop
clc
hlt
icebp
je
(bad)
fild
cmp
mov
lds
mov
aas
addr16
mov
movs
mov
(bad)
jns
mov
(bad)
push
fptan
bound
fs
shr
xchg
mov
pushf
add
aam
rcl
push
mov
aas
or
imul
(bad)
xchg
data16
push
cmp
and
sbb
sbb
inc
inc
cmp
test
(bad)
icebp
adc
retf
mov
inc
mov
popf
aaa
mov
jl
pop
cmp
dec
cmp
lahf
xchg
xchg
or
cmps
jb
jmp
loope
lds
and
xlat
out
cwde
and
cmp
dec
push
aad
mov
push
rcr
aas
add
xchg
adc
lods
dec
sbb
imul
jno
cmps
dec
inc
les
pop
test
cs
rcr
mov
mov
popf
lds
dec
(bad)
pop
mov
pop
test
fild
and
in
mov
push
push
aaa
cmps
and
fsub
xor
repnz
adc
add
ins
add
das
and
ret
ins
test
add
inc
out
jmp
stc
in
movzx
cwde
lahf
je
out
pusha
cmps
out
aaa
cmp
or
sbb
pop
sub
sub
stos
jecxz
and
jp
test
fdiv
test
adc
sub
adc
adc
stc
sahf
cld
outs
inc
rcl
adc
mov
push
pop
aaa
lds
arpl
scas
test
and
pusha
dec
adc
cmps
into
fwait
inc
mov
jl
cli
dec
(bad)
cdq
pop
imul
test
(bad)
pop
retf
addr16
cs
hlt
and
pop
fmul
retf
fistp
adc
add
adc
mov
sbb
dec
lock
mov
stc
jg
ret
lds
mov
xor
lds
xchg
xchg
or
mov
aas
outs
jge
and
or
add
movs
movs
imul
leave
inc
pop
aam
mov
das
mov
and
xor
xchg
loope
mov
in
xchg
movs
je
lods
stos
pop
popf
out
(bad)
imul
add
ins
and
push
mov
add
jne
ret
and
add
js
mov
js
shufps
aaa
fst
les
push
cmp
mov
stc
call
pop
movs
imul
and
jg
mov
fimul
inc
xor
sub
call
dec
jns
aaa
das
mov
xchg
inc
loope
jae
jmp
sbb
inc
popa
clc
fstp
fs
dec
imul
mov
(bad)
inc
xchg
pushf
(bad)
call
cdq
in
fisub
pop
(bad)
leave
inc
fucomip
out
arpl
ins
and
rcl
fdivr
out
mov
jp
mov
pop
and
sbb
mov
stos
bound
lock
imul
mov
pop
push
cmps
pop
cld
outs
test
dec
sub
pop
mov
jge
or
pop
lds
mov
push
mov
clc
pop
xlat
mov
test
mov
jns
inc
pop
jle
push
xchg
repz
int3
idiv
mov
jns
cmp
out
addr16
pushf
cmp
mov
xchg
(bad)
pop
aas
xor
cmps
inc
or
inc
pop
retf
mov
mov
push
mov
mov
inc
outs
shl
mov
add
shl
xor
xor
add
mov
cmp
dec
cmp
ficomp
aad
inc
(bad)
(bad)
(bad)
aam
jae
mov
inc
or
mov
push
cdq
mov
fnstcw
sbb
pop
aad
xor
outs
xor
mov
add
mov
mov
sti
stos
jb
out
lods
test
(bad)
pop
xor
ficom
jmp
mov
out
repnz
jmp
sbb
and
pop
dec
iret
xchg
xlat
sub
add
pop
es
int
mov
adc
xchg
mov
scas
mov
and
jmp
sub
mov
inc
or
sub
add
jp
es
add
in
push
jns
bound
adc
inc
std
cmps
push
(bad)
jo
mov
jno
inc
std
das
jnp
stos
aam
ja
(bad)
inc
or
mov
xchg
mov
cmps
(bad)
mov
sub
(bad)
pop
xchg
xchg
sub
inc
add
add
mov
xor
jae
in
or
or
(bad)
adc
cmp
cmp
dec
mov
dec
not
sbb
dec
pop
mov
push
inc
fist
inc
mov
mov
push
stos
xchg
ror
or
aam
push
cmc
add
fwait
out
sub
jg
inc
cmp
xchg
cmc
or
mov
test
mov
mov
pop
gs
les
push
jb
push
mov
pop
fcmovbe
retf
enter
adc
fidiv
dec
pop
enter
enter
adc
adc
push
shl
xchg
mov
(bad)
lahf
add
movs
push
rcl
cs
test
call
outs
xchg
jo
fmul
pop
mov
cmp
(bad)
pop
xchg
mov
jbe
adc
and
shr
cmc
pop
mov
inc
sub
adc
js
shr
imul
sar
sub
cmp
jne
js
aam
and
fdiv
mov
mov
push
mov
fild
pop
loop
xor
sti
cmp
mov
inc
int
sahf
loopne
cmps
and
inc
mov
inc
aad
ud1
aaa
xor
or
pop
pushf
sub
rcl
retf
fwait
cli
int3
dec
je
push
iret
call
dec
adc
(bad)
pop
lods
rcr
loop
xchg
push
mov
enter
scas
out
mov
rol
repz
lds
fimul
ins
and
lea
cmp
mov
or
outs
mov
shl
(bad)
mov
(bad)
xor
push
inc
push
adc
test
jle
aaa
xlat
addr16
loopne
(bad)
push
aas
push
inc
and
push
inc
inc
movs
jo
hlt
xor
mov
and
xchg
adc
cs
sbb
sti
(bad)
les
gs
pop
std
xchg
gs
xor
sub
dec
mov
mov
xchg
and
and
xor
fs
inc
call
leave
xchg
repnz
pop
cld
xchg
add
mov
xchg
cmc
dec
sti
push
xor
cmp
and
inc
add
test
dec
sbb
mov
xor
popf
mov
and
dec
jns
xchg
fprem1
stos
mov
sub
scas
add
test
enter
movs
aaa
pop
sbb
push
adc
xchg
mov
into
mov
xchg
mov
stos
das
out
cld
dec
pop
aaa
sbb
xchg
sub
inc
push
mov
stos
mov
mov
std
cmp
lds
or
in
fs
loope
pop
or
cmp
jmp
fld
std
xchg
mov
mov
shr
mov
inc
ret
mov
into
and
jp
out
inc
dec
xchg
mov
hlt
mov
cs
sar
stos
pusha
aas
aam
hlt
inc
(bad)
xchg
adc
sti
retf
push
or
push
test
aas
(bad)
sub
sub
in
ja
push
mov
stos
lds
mov
mov
aas
sub
xchg
cmp
xor
cmps
push
mov
sub
mov
shl
cmp
dec
fwait
mov
in
jmp
aas
mov
pop
out
pop
imul
(bad)
and
(bad)
push
lds
mov
call
xor
mov
pop
and
pop
pop
iret
dec
out
mov
mov
cmp
push
and
retf
in
and
mov
pop
inc
mov
sbb
rcl
xchg
pop
sub
cmps
aad
sbb
push
fs
sbb
inc
sbb
clc
(bad)
div
push
push
inc
cmps
(bad)
jo
cli
xor
aam
mov
ins
adc
pusha
mov
pop
invd
pop
jle
cld
dec
jge
fucom
mov
icebp
shr
xor
sti
fisttp
sbb
jo
mov
das
adc
xchg
jns
in
int3
nop
rcl
jno
retf
aad
aaa
mov
(bad)
jne
sub
lods
clc
adc
mov
aam
vcvtps2dq
aam
or
mov
aaa
lahf
xor
cli
mov
bound
pop
push
add
adc
pop
call
mov
jge
push
pop
je
int
test
pop
into
loopne
add
push
stos
sti
ins
rcr
sub
aaa
xchg
xor
and
inc
xor
dec
adc
sbb
cmp
mov
push
js
repnz
cmp
and
aas
mov
lds
dec
add
dec
dec
aas
sbb
mov
adc
std
cmp
xchg
clc
adc
adc
sti
in
fcmovb
xor
jne
adc
jge
pop
and
(bad)
imul
stos
push
cmp
addr16
mov
inc
push
push
mov
lock
inc
xchg
adc
out
not
je
inc
adc
in
mov
into
inc
jmp
aaa
pop
movs
mov
mov
cmps
inc
jl
jns
jb
mov
pop
adc
popa
mov
enter
cmp
jae
stos
fwait
push
xor
movs
inc
mov
lods
ja
gs
mov
dec
or
in
fist
jp
fistp
lds
mov
sbb
aam
or
rcr
mov
dec
jmp
retf
cmc
ins
popa
sub
fiadd
imul
sub
jne
arpl
popa
shl
jle
fwait
sub
lds
movs
push
mov
in
or
es
out
push
xor
daa
sti
xchg
mov
or
adc
gs
lds
imul
cmp
mov
int3
sbb
inc
mov
fdiv
popa
xor
(bad)
call
push
adc
mov
and
fistp
scas
in
sub
jle
fcmove
sbb
outs
jae
pop
mov
cs
movs
inc
jb
dec
repz
jae
dec
cmps
fbstp
imul
lds
push
mov
(bad)
je
aas
cmp
jo
sub
mov
lahf
lds
out
sbb
stos
and
retf
scas
leave
hlt
out
mov
xchg
xor
pop
retf
add
add
data16
and
cmp
push
addr16
rep
cmp
dec
scas
lds
repz
ss
jge
push
mov
fs
hlt
xor
frstor
adc
in
xor
inc
mov
mov
scas
idiv
mov
aad
dec
mov
cli
cmp
adc
xor
out
jg
sti
stos
inc
jp
dec
mov
ficomp
sub
out
inc
mov
(bad)
aam
lea
jg
outs
jo
hlt
sub
push
pusha
(bad)
jg
inc
xchg
push
scas
jmp
xlat
add
pop
stos
inc
loop
mov
ret
scas
push
sub
push
jnp
add
cmp
jp
in
adc
lods
and
dec
dec
push
jg
fdiv
mov
fild
cmps
mov
jb
add
xor
dec
(bad)
js
pop
ss
dec
(bad)
fadd
jno
jge
aam
sub
mov
push
imul
(bad)
add
int3
add
add
adc
imul
(bad)
(bad)
cs
pop
jg
pop
sub
xchg
lds
jp
adc
mov
xchg
and
daa
imul
mov
out
mov
faddp
mov
out
push
sbb
pop
aas
outs
jg
sub
push
sbb
ret
call
es
pop
inc
adc
inc
icebp
imul
add
inc
sbb
mov
dec
cmp
cmp
aam
in
mov
cli
lds
cmp
push
jno
out
push
les
cld
(bad)
jnp
fiadd
pushf
cmp
mov
jecxz
pusha
fidivr
push
xchg
sub
inc
jnp
aam
in
(bad)
inc
or
imul
add
pusha
dec
icebp
jmp
scas
cmp
or
xchg
sbb
jg
jns
mov
jno
loope
(bad)
mov
ror
jmp
jne
add
lds
cmp
adc
test
jnp
push
and
mov
(bad)
mov
retf
and
pop
dec
clc
inc
imul
mov
cmp
dec
jnp
data16
(bad)
das
mov
cmp
cmp
retf
cmp
push
xchg
sbb
lods
(bad)
cli
jb
sub
js
lea
test
jnp
das
jg
in
jge
inc
push
in
mov
cmps
jecxz
cmp
shl
adc
(bad)
sub
in
stos
in
mov
cld
in
inc
push
pop
or
push
pop
push
xchg
std
pop
sbb
xor
sbb
fs
inc
jge
gs
(bad)
sub
(bad)
adc
lahf
mov
and
sbb
(bad)
mul
out
inc
das
pop
adc
ds
inc
pop
dec
mov
adc
std
movs
xlat
cli
sbb
iret
jmp
or
mov
xchg
out
pusha
iret
mov
or
jecxz
mov
fnsave
cmp
mov
add
cli
add
cmp
adc
push
fmul
lods
adc
fdiv
popf
mov
enter
push
fwait
lods
jns
dec
adc
push
lds
jp
mov
in
scas
cmp
stc
daa
xchg
mov
stos
jle
adc
dec
dec
inc
sub
stc
mov
fistp
pop
inc
pop
cmp
movzx
sub
imul
mov
cmp
addr16
dec
ins
xor
add
mov
add
outs
(bad)
xchg
(bad)
mov
push
mov
mov
cli
out
push
cmp
and
adc
fmul
inc
aad
aaa
movs
inc
pop
mov
int3
mov
inc
sub
aas
dec
(bad)
jle
and
mov
test
iret
das
sbb
fcmovu
push
sub
jmp
adc
aam
lods
(bad)
mov
mov
inc
pop
imul
or
pop
dec
sahf
jb
mov
cmp
(bad)
neg
mov
cmps
jns
in
psubw
lahf
adc
frstor
fwait
scas
sub
pop
out
jno
xlat
int
jo
hlt
jle
stos
inc
outs
sbb
or
jmp
test
data16
lods
cmp
add
xchg
add
push
adc
(bad)
or
push
daa
sub
out
(bad)
aas
shl
and
inc
js
fsub
jo
ret
pop
xor
cmp
loop
jb
jge
js
add
cmp
jmp
push
xlat
adc
jmp
das
(bad)
gs
and
inc
jnp
mov
aaa
add
sub
(bad)
sub
cmp
adc
jge
nop
jmp
int
mov
dec
or
gs
dec
adc
pop
xor
bound
xlat
scas
push
jbe
out
dec
mov
test
xor
pop
je
cmp
cli
pop
mov
neg
fldcw
push
sub
or
adc
mov
xchg
shr
pusha
cli
aam
loop
movs
push
fs
ss
sub
pop
xor
out
je
push
adc
jns
mov
jg
fwait
sub
mov
pushf
icebp
push
mov
(bad)
rol
or
scas
dec
push
push
ret
sbb
movs
cld
xchg
mov
mov
sbb
inc
fld
mov
push
dec
fdiv
cmps
clc
fisub
cmp
jns
add
stos
push
dec
adc
mov
xor
shr
(bad)
es
adc
popa
call
aam
sahf
shr
and
jge
sbb
imul
jno
add
add
jmp
aad
jb
out
cmps
and
cmp
jne
xor
mov
pop
xchg
in
inc
add
xchg
push
sbb
jle
mov
mov
es
jno
mov
cmc
faddp
gs
jne
mov
dec
add
sub
aam
sbb
jmp
sub
outs
dec
push
out
(bad)
mov
loop
ins
dec
repz
push
and
mov
xlat
jb
mov
or
mov
mov
jle
outs
(bad)
cmp
rol
mov
mov
pop
(bad)
dec
xchg
jge
(bad)
jge
mov
pminub
xchg
mov
xchg
cmps
es
std
shl
adc
cmps
xlat
aam
mov
sub
cmps
inc
push
push
stos
add
xor
popf
jecxz
jne
outs
or
addr16
xor
pop
fld
lods
sbb
(bad)
push
lahf
and
call
push
mov
(bad)
setb
aaa
cmp
cmp
jbe
ret
movs
sub
outs
sbb
mov
push
leave
nop
mov
jg
lds
mov
stos
cmps
xor
test
push
mov
int3
rcl
retf
movs
fxch
dec
pop
sbb
test
ror
or
popf
add
pop
sar
fdiv
pop
fild
dec
(bad)
test
fmul
mov
push
adc
and
add
jbe
xchg
imul
pop
add
stc
jmp
retf
(bad)
popf
dec
cmc
push
lock
push
outs
gs
lods
inc
mov
adc
fild
or
jle
mov
jp
das
data16
pusha
adc
cld
add
push
test
pop
movs
(bad)
fst
pushf
(bad)
jb
jge
sbb
hlt
cli
push
ins
cmps
outs
rcr
imul
(bad)
mov
ror
in
pop
vmwrite
cmp
mov
(bad)
cmp
retf
scas
pop
xor
or
mov
cmps
xchg
fisub
adc
xor
loopne
and
movs
daa
cmp
hlt
jle
cmps
repz
movs
jmp
repnz
cmp
mov
mov
add
pop
nop
ret
lock
mov
push
popa
je
out
push
mov
xchg
nop
xor
sub
pop
and
or
movs
in
aaa
aas
xor
popa
cdq
sbb
mov
cmp
jnp
cdq
mov
fdiv
shl
sar
aad
aam
das
loope
addr16
jae
and
cmp
mov
dec
or
movs
push
xor
jo
test
lods
scas
and
or
cmps
xor
arpl
shl
ja
mov
loop
add
add
aas
aas
arpl
call
cwde
ds
jge
pushf
mov
ins
mov
sbb
cs
xchg
sar
mov
inc
mov
fmul
outs
fisub
adc
push
retf
inc
dec
out
sbb
xlat
loop
lods
ins
sub
outs
mov
inc
ret
sbb
sub
inc
outs
loop
pop
mov
int
jne
nop
or
sbb
inc
mov
(bad)
jb
int
adc
push
sub
xor
mov
jg
mov
adc
pusha
jo
jns
mov
mov
push
ds
push
and
fstp
(bad)
cmp
mov
(bad)
aam
cmp
add
mov
sahf
fistp
or
inc
(bad)
std
rol
test
push
stos
movs
retf
loopne
mov
outs
stc
aaa
or
arpl
pop
mov
lock
jg
jp
xchg
outs
arpl
or
mov
inc
dec
jl
pop
push
sbb
push
sti
push
or
fld
shr
aaa
dec
cmp
mov
push
cmps
into
pop
repnz
mov
jno
adc
in
mov
in
jne
call
xor
sbb
gs
aad
mov
movs
(bad)
scas
imul
sbb
pop
or
outs
push
xor
rcr
ja
mov
shl
cmp
pop
popf
arpl
in
icebp
push
push
mov
dec
std
ret
in
jmp
and
push
mov
imul
and
dec
push
cld
daa
jmp
jmp
loopne
aad
dec
jge
inc
ret
sub
xchg
xchg
mov
movs
(bad)
push
mov
fiadd
inc
push
jle
adc
mov
cdq
lds
stc
popf
cwde
iret
out
lds
xchg
bound
mov
out
mov
movs
or
mov
ja
outs
xchg
fisubr
and
and
(bad)
cwde
(bad)
movs
iret
and
mov
vmread
mov
adc
xchg
(bad)
in
arpl
cmp
pop
cmp
jmp
xchg
add
icebp
(bad)
jg
outs
pop
mov
mov
xor
push
arpl
js
stos
push
dec
mov
call
out
push
ss
pop
pop
loop
push
test
dec
adc
or
sbb
and
xor
popf
push
int3
inc
(bad)
jp
push
ficom
mov
gs
and
aam
retf
cmp
sub
inc
cmp
mov
pop
dec
repnz
or
test
(bad)
adc
icebp
scas
pushw
cmps
retf
xchg
and
fdivr
jmp
outs
adc
mov
jns
pusha
adc
stos
cmp
js
lahf
sub
fldenv
cwde
test
inc
call
(bad)
xor
cmps
lds
jno
jmp
imul
loopne
shl
jg
xchg
jg
daa
mov
addr16
das
(bad)
call
sub
adc
(bad)
es
leave
inc
enter
aaa
pop
mov
(bad)
mov
movs
mov
pop
ds
cli
es
pushf
lahf
lods
test
cmp
test
sbb
repnz
cmp
add
sti
ret
pop
daa
push
leave
nop
ret
rcr
cmp
sub
aad
mov
outs
inc
push
push
stos
arpl
into
mov
inc
pop
and
xor
pop
xor
cmps
jp
repnz
sub
popa
cmc
adc
vpacksswb
dec
inc
test
test
fsubr
adc
cs
cmp
mov
fwait
ds
jp
pop
mov
popf
or
xchg
mov
and
inc
rcl
fs
adc
ss
mov
test
jp
jno
das
mov
cmp
fsub
xor
imul
pop
sbb
aas
sub
cmp
add
cmp
push
shl
cmp
scas
inc
loope
aaa
arpl
inc
frstor
and
cmp
gs
sub
es
push
inc
std
out
in
test
fist
enter
jmp
pusha
outs
jae
enter
data16
outs
ret
sub
or
push
mov
loope
arpl
cmps
sub
mov
inc
mov
addr16
mov
sbb
aam
xlat
lahf
rcr
mov
cmp
popa
add
(bad)
ret
jge
push
std
dec
pop
cmp
sub
sbb
sub
aas
fdiv
cmp
fucomi
not
adc
sub
popa
sub
outs
outs
outs
clc
jne
sbb
cmp
das
mov
aam
scas
gs
pop
sub
dec
mov
xchg
lods
and
mov
and
mov
mov
ins
and
cmps
pop
out
mov
sar
(bad)
int3
stc
retf
mov
xchg
(bad)
xor
mov
add
or
fidivr
cmp
mov
push
cmp
lds
jge
and
aas
xor
xor
adc
dec
inc
aad
mov
scas
mov
adc
cmp
pop
out
scas
mov
lock
jp
cmp
out
jnp
fild
inc
aas
mov
xchg
ror
and
xor
cmp
or
ss
push
cmp
add
xor
lock
adc
mov
(bad)
mov
xor
jmp
scas
add
fs
jp
lods
jo
push
inc
ja
inc
xor
mov
xchg
mov
mov
ja
adc
cmc
adc
stos
jge
outs
add
out
fistp
jle
mov
mov
xchg
cmp
mov
arpl
and
aas
pop
(bad)
cwde
or
sahf
xchg
mov
push
fs
(bad)
sub
xlat
fild
call
loope
pop
retf
mov
outs
or
mov
fldenv
sub
inc
add
cmp
push
adc
stos
jg
iret
xor
ss
es
fdiv
jecxz
aad
xor
mov
lea
mov
jbe
xor
cmp
nop
hlt
fcmovnbe
arpl
pop
push
(bad)
push
add
(bad)
stos
xor
pop
lock
je
movs
pop
jno
(bad)
aad
test
pop
into
push
popa
ret
jnp
cmp
call
stos
fimul
ja
scas
int
xor
inc
mov
sub
xchg
cmp
sar
add
mov
and
sahf
mov
xchg
sbb
lods
jne
popa
inc
mov
in
into
shl
out
pop
retf
push
jge
adc
retf
add
and
mov
xor
stc
ror
cwde
mov
fidiv
out
out
jns
mov
dec
scas
lods
dec
cdq
mov
ss
mov
cmps
stos
push
stc
add
pushf
repnz
not
mov
or
div
add
addr16
daa
mov
sub
or
out
into
aad
stc
inc
shr
daa
ret
mov
mov
cmp
sbb
mov
cs
jb
adc
and
cmp
popa
inc
cmps
fcom
into
adc
aaa
and
dec
stos
cmps
(bad)
ds
rcl
adc
test
lods
xor
js
(bad)
std
add
sub
fwait
into
mov
or
ins
dec
leave
add
or
popf
movs
(bad)
cwde
pop
loopne
scas
pop
jmp
addr16
inc
into
pop
jge
enter
rcr
into
mov
push
push
xchg
ret
pushf
repz
add
xchg
test
pop
scas
xchg
lea
fcmove
mov
jo
mov
sub
jbe
test
xor
out
and
xchg
mov
sbb
neg
ds
sub
add
rcr
xchg
(bad)
into
lods
pusha
xchg
mov
popa
outs
and
jg
aas
jbe
into
ret
icebp
mov
inc
in
adc
fucomi
dec
into
(bad)
adc
ins
enter
fsub
cmc
out
add
out
pop
sbb
add
arpl
es
mov
mov
repnz
stos
leave
shl
jecxz
outs
test
(bad)
int3
pop
aas
or
(bad)
pusha
shl
jle
lds
sbb
into
xchg
test
mov
outs
add
mov
into
retf
bound
add
mov
in
pop
icebp
dec
into
pop
cli
clc
dec
aaa
or
xchg
jnp
popf
push
sar
mov
into
sub
out
or
fiadd
mov
int3
push
mov
int
cld
adc
sub
pop
std
out
rcr
into
mov
rsm
mov
sbb
fucomp
dec
into
sbb
ror
cmp
mov
xor
into
es
jno
inc
and
test
arpl
in
and
loope
mov
into
pop
das
adc
std
je
into
push
push
pop
jb
jmp
sar
or
xor
sub
into
fidivr
mov
bound
or
dec
sbb
mov
dec
pop
cmp
test
jp
pop
test
jmp
repz
pop
cmp
aaa
xor
data16
pop
mov
ja
(bad)
jne
nop
into
sbb
popa
mov
(bad)
(bad)
jmp
aam
fs
test
into
jo
mov
(bad)
(bad)
jns
mov
lods
mov
retf
fdivr
ds
call
into
mov
or
addr16
lods
test
repnz
push
(bad)
into
cmp
dec
sub
lea
leave
call
(bad)
dec
aam
test
sbb
movs
inc
xor
shr
outs
outs
mov
mov
add
push
es
in
popa
push
into
gs
sub
cmp
stos
inc
pop
pop
xchg
pop
stos
dec
jg
push
in
cmps
push
xor
or
sub
push
sub
pop
inc
stos
movs
sbb
out
pop
dec
(bad)
ret
into
(bad)
mov
and
xor
fmulp
icebp
cmp
mov
pop
ret
or
xchg
mov
dec
push
mov
scas
dec
int3
mov
hlt
scas
scas
mov
into
xor
nop
add
lock
fnsave
fs
pop
jmp
and
into
sub
dec
pop
inc
loop
mov
mov
sub
pop
pop
ror
int
fisubr
into
imul
into
cmps
adc
lock
sbb
fsubr
mov
dec
into
fstp
inc
dec
shl
ud2
adc
cmps
mov
push
icebp
mov
jb
jle
fs
pusha
add
loop
les
repz
stos
fst
cmp
pusha
jge
xchg
fnstsw
xchg
inc
sbb
stc
enter
sbb
xchg
inc
fstp
test
stos
jbe
in
mov
pop
cli
inc
cdq
pop
push
jns
pop
jg
ret
es
movs
mov
jl
mov
aaa
cmps
(bad)
mov
je
and
aaa
hlt
stos
mov
(bad)
mov
dec
jnp
jne
pop
add
cmp
cmp
in
call
or
sub
sahf
xlat
push
aaa
mov
jecxz
add
nop
jns
mov
mov
jmp
je
lds
fwait
aas
fist
lea
inc
int3
dec
or
xor
xchg
fdivr
mov
movs
lea
dec
stos
das
cmp
mov
jbe
sahf
int
xor
xchg
cmp
adc
mov
mov
rol
pop
push
mov
movs
sti
jnp
xchg
pusha
scas
jmp
sbb
scas
cmc
mov
pusha
jnp
inc
cmps
bound
dec
add
int3
push
stc
das
(bad)
(bad)
mov
in
cdq
(bad)
rol
clc
add
in
popa
pop
jecxz
mov
xchg
gs
mov
js
dec
cs
sbb
stos
loope
push
retf
add
adc
(bad)
enter
fcmovb
inc
retf
es
xchg
imul
jge
mov
adc
cmp
fbstp
test
loopne
dec
popa
adc
mov
jle
xor
stos
(bad)
scas
das
add
xchg
(bad)
ja
mov
arpl
mov
fdivr
fs
fwait
push
into
addr16
sbb
mov
scas
and
in
dec
inc
xchg
push
pop
repz
or
push
bsr
outs
es
shr
ins
cmps
lds
sti
jg
std
adc
int3
sub
mov
fs
into
rol
adc
popf
sub
cmp
aas
and
mov
daa
pop
jns
ins
lds
push
out
and
sbb
movs
lds
(bad)
iret
mov
lea
bound
sar
daa
mov
imul
test
(bad)
jp
repnz
mov
dec
jne
stos
cdq
inc
xchg
sbb
cmp
(bad)
pop
mov
jo
adc
add
cmp
sbb
mov
js
mov
cmp
sbb
retf
push
jmp
ja
jnp
outs
lds
sar
sub
sbb
pop
xlat
(bad)
push
lods
or
aas
cs
mov
rol
xchg
lahf
inc
je
fs
ja
inc
mov
add
adc
pop
addr16
(bad)
adc
add
sub
sub
lods
and
ja
mov
mov
enter
inc
out
call
leave
dec
xor
sub
es
pop
cmp
jns
pushf
in
fisttp
ficom
pusha
aad
adc
pop
test
es
ja
mov
sub
sbb
movs
dec
sbb
lahf
or
fcomp
in
out
or
cmp
mov
mov
dec
xchg
inc
sub
pushf
xor
mov
mov
push
(bad)
je
aaa
test
push
ficomp
add
jb
aam
jge
sbb
sub
stc
push
ss
xchg
pop
fwait
mov
addr16
loope
jb
in
push
inc
ror
outs
or
jg
pusha
daa
fcom
jecxz
jne
mov
dec
daa
cld
outs
fld
push
dec
int
cli
gs
pushf
add
mov
jne
dec
mov
dec
in
and
inc
xchg
inc
neg
mov
popf
jg
or
cmp
and
and
test
jnp
outs
cmp
sub
retf
add
lea
pop
mov
sahf
shl
outs
cld
xor
stos
mov
(bad)
pop
jbe
xchg
cmps
xor
test
in
(bad)
lahf
jp
cmp
sub
ret
xchg
pop
mov
rcr
pop
jge
addr16
repz
outs
popa
add
cmp
dec
rcl
push
ins
adc
or
out
cmp
xor
pop
inc
movs
push
add
scas
in
ror
in
push
lds
add
test
out
int3
test
int
ror
push
shl
cmps
mov
adc
mov
mov
ss
and
std
or
jg
call
fistp
cmp
jge
test
mov
sbb
jo
mov
mov
dec
push
out
in
xor
push
retf
jbe
or
dec
movs
cmps
in
lahf
mov
mov
ss
mov
xor
into
and
jae
rol
adc
xor
es
xor
jno
lods
add
scas
and
sahf
lods
mov
xor
ss
cli
mov
and
test
adc
cmp
cmp
pop
inc
jle
and
loop
adc
sar
cmp
pusha
fwait
enter
out
das
mov
pop
push
int
mov
aam
xor
clc
popf
lods
pop
mov
imul
pop
cmp
(bad)
xchg
dec
push
mov
jmp
call
lods
es
in
mov
cmps
jb
iret
jecxz
rcr
add
hlt
sbb
movs
add
jle
sbb
pop
mov
mov
pusha
jns
and
mov
fistp
pop
nop
xchg
out
mov
xchg
lods
daa
int3
mov
arpl
popf
sub
mov
push
xchg
pusha
inc
xlat
ret
dec
adc
adc
mov
pop
loopne
sub
clc
aam
pop
mov
push
repz
mov
outs
pop
imul
lds
gs
sub
js
int3
cmps
ins
dec
mov
lods
mov
fnstsw
push
jl
call
outs
sbb
repnz
mov
outs
jmp
lea
jne
pop
or
pop
lds
jb
pop
add
and
fadd
mov
iret
or
mov
pushf
neg
not
scas
adc
jne
retf
cmp
rcr
push
ins
mov
fisubr
adc
push
int
lods
test
inc
inc
icebp
daa
or
mov
sub
lods
js
data16
(bad)
inc
mov
mov
aas
ret
lds
addr16
and
dec
mov
push
and
pop
cmps
inc
pop
xchg
jne
popa
adc
in
shl
stos
adc
mov
pusha
sbb
lock
les
xchg
je
aas
pop
fs
mov
std
jbe
xchg
retf
dec
addr16
idiv
push
fsub
shl
sub
mov
inc
or
jo
int3
cld
and
pop
jbe
inc
cmc
shl
jb
add
arpl
cmp
mov
pop
cmp
dec
aad
inc
push
inc
mov
out
cmp
(bad)
push
mov
mov
mov
outs
inc
cmps
test
mov
sbb
lahf
pushf
sub
add
cld
in
retf
ins
jno
pop
pop
out
and
and
add
jne
lea
outs
jbe
mov
ret
bound
fwait
lods
adc
mov
jmp
enter
mov
repz
mov
lock
fcomi
push
frstorw
pop
int
jl
cmc
adc
(bad)
daa
rcr
pop
lahf
mov
outs
ret
and
sub
push
fidiv
stos
mov
sbb
cmps
adc
jns
xchg
scas
inc
mov
fdivr
clc
pop
mov
jle
and
jno
adc
es
xor
fstp
push
(bad)
mov
push
aas
adc
nop
or
inc
pop
and
retf
fisttp
inc
xchg
add
cmp
aam
sahf
aas
(bad)
(bad)
xchg
fucom
xchg
push
scas
or
scas
sub
stc
mov
push
mov
call
(bad)
call
dec
aas
ficom
push
bound
jmp
cmp
lods
adc
gs
dec
dec
and
(bad)
jle
cmp
jge
mov
lahf
push
xlat
mov
xchg
jle
fisttp
sbb
xchg
cmps
lods
sub
(bad)
mov
push
or
pop
mov
mov
mov
je
stos
lock
pop
push
in
jne
inc
fs
pop
vshufpd
mov
pop
cmp
icebp
jb
push
adc
xor
neg
jo
js
retf
cmp
mov
stos
(bad)
and
jne
adc
outs
repnz
adc
sbb
push
in
sar
stos
pop
popa
(bad)
mov
scas
in
(bad)
xchg
loop
in
xor
or
js
loope
push
sbb
jle
jp
out
stos
or
movs
or
push
mov
aam
fnstsw
mov
mov
lds
imul
push
(bad)
cmp
push
sbb
cmps
cmp
jmp
aas
inc
out
xchg
bound
sub
loop
inc
outs
pop
cwde
mov
xor
jnp
cmp
fwait
popa
xor
or
inc
bsr
adc
cdq
stos
xchg
mov
aad
(bad)
dec
jo
imul
int
mov
push
add
xchg
adc
sub
jno
gs
dec
or
in
cwde
jo
rol
and
fild
push
int3
inc
out
add
or
xchg
jmp
fimul
loop
inc
scas
jae
imul
cld
test
lahf
push
inc
push
mov
mov
fs
scas
jecxz
hlt
fldenv
cmp
jle
mov
xchg
test
in
jb
cmc
mov
pop
jmp
mov
test
mov
shr
adc
pusha
das
ror
pop
fs
push
sbb
loopne
add
push
es
out
(bad)
test
adc
movs
xchg
in
enter
les
loop
adc
pushf
mov
shl
daa
xchg
in
jl
pop
cmps
mov
leave
cdq
das
out
xchg
mov
fsub
je
or
jno
lods
jmp
mov
pushf
and
xor
div
in
mov
cmp
mov
pop
mov
mov
sahf
dec
jmp
outs
std
sub
test
pop
aas
mov
pop
stos
aaa
jmp
jmp
arpl
mov
sub
jmp
cmp
lds
and
(bad)
xchg
adc
cmp
pop
sar
or
xor
das
dec
popa
ret
cmps
and
jle
sub
push
(bad)
in
or
mov
xchg
fsubr
cmps
retf
mov
pusha
dec
sub
cmc
(bad)
fst
adc
mov
js
mov
cmp
add
(bad)
sub
js
movs
(bad)
stos
mov
int3
daa
fisub
cmps
ret
rcr
fnstsw
in
jnp
jnp
popa
xor
or
aad
cmp
inc
inc
mov
jnp
fcomp
es
out
sbb
lods
cmp
pop
or
sub
sbb
cmp
mov
jbe
mov
aas
xchg
add
dec
jno
outs
adc
das
cmp
xchg
push
popa
adc
and
mul
cmovg
lods
jbe
shl
ins
cmps
aas
sub
lahf
push
sub
aaa
mov
mov
sbb
push
inc
mov
pop
xor
sbb
pushf
xchg
cli
gs
push
mov
pop
idiv
cmp
je
dec
aaa
xor
jl
fs
test
and
mov
jg
stos
inc
mov
cmc
pop
outs
push
aas
xchg
fcomp
mov
push
into
aaa
xchg
jecxz
out
sbb
into
inc
nop
cs
idiv
js
ret
mov
lahf
das
dec
inc
je
(bad)
fcmovb
and
shl
push
cmp
ret
and
(bad)
jmp
rol
mov
pop
jb
dec
dec
test
scas
into
leave
xchg
cmp
enter
into
loope
dec
jb
pop
test
int3
arpl
dec
pop
inc
ret
mov
out
cmp
int
(bad)
xchg
push
fsubr
mov
sbb
repz
push
loope
je
ins
into
enter
ss
hlt
into
add
push
mov
xchg
xor
into
ins
push
ret
dec
xor
(bad)
mov
cli
jnp
movs
leave
cmp
stos
test
lahf
ins
push
stc
inc
sahf
xchg
mov
adc
jbe
lahf
inc
pop
xchg
cmps
dec
sub
(bad)
call
into
and
rcl
push
pop
loop
add
(bad)
push
jg
xchg
ss
mov
add
pop
into
fsubrp
mov
(bad)
and
into
add
lods
push
bound
div
in
xor
jne
xor
jl
arpl
ja
ret
test
xchg
test
xchg
(bad)
mov
adc
dec
jg
or
fmul
mov
out
hlt
in
nop
into
sar
xchg
test
mov
mov
add
ins
mov
mov
sbb
xchg
fst
dec
ror
sub
sub
xchg
mov
lods
mov
and
retf
enter
push
pop
loop
jg
pop
loope
(bad)
jp
into
adc
test
push
mov
or
in
mov
shr
int
es
jbe
mov
pop
pop
les
inc
xchg
into
jg
add
mov
inc
and
scas
leave
das
into
cmp
test
inc
xchg
into
push
imul
push
cwde
add
outs
pop
aad
or
dec
(bad)
push
lds
pop
add
repz
or
enter
xchg
and
ja
outs
sbb
les
jo
mov
mov
scas
hlt
sub
(bad)
ja
cmp
sar
push
out
imul
cmc
jo
dec
adc
add
dec
mov
div
into
out
mov
movs
sti
push
cmps
test
aaa
push
xchg
dec
inc
sub
pushf
jb
das
sub
into
stos
addr16
ret
add
adc
mov
into
lahf
mov
pop
xchg
into
mov
xor
sbb
mov
add
pop
gs
mov
pop
adc
sahf
push
mov
les
cli
imul
mov
inc
pop
into
mov
mov
mov
bnd
int
mov
scas
adc
inc
jae
pop
(bad)
sub
test
mov
dec
js
in
stos
(bad)
test
ds
pop
pusha
into
push
ret
jg
imul
push
bswap
lods
repnz
dec
sbb
addr16
and
into
cmp
push
aam
out
pop
ss
popa
test
jno
cmp
mov
jg
sub
xchg
into
nop
and
push
mov
xchg
test
sar
pop
outs
mov
cmp
push
and
out
fbld
cmp
loop
cs
or
mov
popa
(bad)
sbb
rol
lods
mov
mov
sub
pop
mov
popa
enter
xchg
cmp
leave
int
push
push
push
mov
(bad)
scas
jbe
add
xor
mul
arpl
dec
inc
fld
mov
jnp
imul
into
xor
(bad)
mov
dec
dec
mov
sbb
in
mov
inc
stc
into
ret
push
mov
js
in
sbb
fdiv
les
seta
fistp
into
(bad)
dec
ins
das
pop
mov
sub
dec
inc
into
sub
push
ret
ds
inc
mov
(bad)
aam
into
xchg
mov
fsubr
sti
dec
out
jne
add
into
out
xchg
ins
dec
dec
or
cli
xchg
ror
adc
mov
mov
mov
dec
into
mov
iret
je
xchg
cmp
mov
and
pop
cmps
or
cli
dec
xlat
fcmovne
xchg
and
dec
add
into
mov
xor
adc
pop
into
cwde
cdq
pop
popf
(bad)
outs
mov
mov
jns
dec
ror
fimul
jo
pop
not
movs
jo
or
stc
ss
dec
mov
loopne
dec
(bad)
movs
addr16
adc
jecxz
and
push
push
cmp
idiv
adc
rol
std
jo
retf
shl
movs
cwde
arpl
clc
stc
push
add
nop
mov
push
pop
sub
scas
int
and
test
mov
call
mov
xchg
icebp
and
jmp
lock
stos
fninit
or
iret
loop
jo
xor
cmp
push
push
(bad)
pop
mov
sub
daa
sti
jg
repz
ror
(bad)
cs
or
mov
lahf
cmp
push
lds
pop
sub
nop
sbb
mov
aam
add
mov
mov
dec
repz
push
sbb
imul
sub
mov
mov
lds
(bad)
aad
sbb
xchg
push
jno
ret
out
xor
pop
test
adc
jg
cmp
enter
sub
add
xchg
mov
iret
dec
xlat
movs
push
leave
push
cmp
xor
inc
stos
aam
mov
cmps
das
xor
scas
add
imul
mov
fsub
inc
stc
(bad)
scas
cmps
lds
aas
push
and
push
push
(bad)
pop
dec
mov
jmp
ror
jmp
xor
(bad)
jne
inc
jle
clc
sub
and
shl
add
nop
mov
bound
js
retf
call
cmp
mov
pop
mov
fimul
inc
paddb
xchg
clc
fsub
js
das
sbb
dec
mov
push
xor
pop
sar
mov
aam
cmp
cwde
scas
inc
push
cdq
idiv
sbb
nop
cs
and
loope
pop
aas
pop
leave
aam
and
sub
mov
xlat
mov
pop
xchg
aaa
jnp
mov
mov
repnz
inc
(bad)
or
std
xchg
out
ins
mov
shl
mov
inc
retf
lahf
inc
in
cmp
push
lea
repz
stc
xor
dec
xlat
shrd
fst
cdq
mov
aam
aad
cmp
lds
test
out
pusha
cmps
outs
fst
xchg
(bad)
adc
mov
push
leave
lahf
gs
dec
ret
(bad)
std
jecxz
push
outs
call
sub
xor
sub
into
cmps
sbb
int
stos
(bad)
rol
adc
mov
scas
add
(bad)
js
inc
iret
mov
ret
shl
mov
(bad)
mov
xchg
shl
shr
mov
imul
pushf
add
nop
cmp
in
dec
out
not
(bad)
cmps
aas
cmps
lock
gs
sub
in
punpcklbw
ret
pusha
push
sbb
mov
push
push
stos
jp
repz
in
sub
js
lock
fldcw
stc
outs
daa
xor
cwde
scas
retf
rol
lahf
dec
sub
push
sbb
icebp
gs
add
cmps
(bad)
data16
mov
sub
pop
mov
jb
cmp
call
push
add
in
mov
mov
lock
jnp
dec
(bad)
aam
nop
pop
aaa
jmp
push
push
jmp
pop
push
push
mov
(bad)
cmp
push
test
lods
adc
mov
outs
sub
jle
and
iret
(bad)
(bad)
mov
inc
xchg
fscale
fld
xlat
adc
mov
jns
sub
adc
adc
retf
jbe
daa
iret
and
arpl
jp
sbb
ret
adc
mov
iret
dec
dec
xor
dec
sbb
mov
stos
cli
pop
shr
(bad)
jle
sub
jge
push
add
mov
iret
inc
mov
or
jg
sbb
icebp
jmp
xchg
lds
cmps
jmp
pop
pop
jecxz
retf
scas
(bad)
mov
adc
fsubr
or
das
cmps
stc
mov
push
in
lods
mov
inc
(bad)
daa
jecxz
imul
cmps
int
cs
sub
jmp
int
cli
loope
jecxz
shr
inc
cmp
adc
fstp
dec
stos
push
mov
cmps
shl
sahf
std
xchg
inc
imul
jp
dec
xor
ret
jbe
jecxz
sti
iret
outs
sbb
retf
rcl
shr
adc
cmp
jge
mov
mov
fs
xchg
sub
jp
jmp
mov
enter
jp
sub
and
stos
lds
sbb
out
push
rol
(bad)
push
lock
cmp
(bad)
xchg
or
cs
sbb
xor
mov
bnd
outs
fs
rcl
cwde
dec
dec
stos
dec
sub
adc
fwait
mov
stos
sub
out
mov
not
dec
in
jmp
outs
cmps
inc
loop
cmps
pop
dec
mov
cwde
(bad)
jl
fistp
mov
(bad)
ret
xor
jne
nop
dec
add
ror
jne
pop
mov
sub
adc
sub
scas
jecxz
out
lods
jge
push
scas
scas
mov
mov
push
xchg
fadd
mov
jp
icebp
sub
dec
and
dec
inc
stos
sbb
cmp
mov
add
in
and
arpl
lods
out
pop
xchg
in
mov
cmps
xor
(bad)
mov
mov
or
or
aam
out
adc
mov
jbe
adc
leave
ds
outs
test
movs
sub
or
adc
xor
ins
test
and
pop
jno
outs
cs
inc
pop
adc
xchg
mov
xor
xchg
adc
dec
push
jl
pop
inc
call
push
paddq
push
pop
stc
scas
adc
dec
push
popa
push
push
cmp
xor
dec
fidiv
daa
xor
mov
jecxz
inc
rcr
jg
sbb
jmp
sahf
adc
outs
jne
je
(bad)
mov
movs
sub
lods
mov
mov
mov
jae
loopne
xchg
leave
cmp
pop
repz
scas
pusha
mov
jo
adc
pop
loop
xchg
es
data16
xchg
and
(bad)
cmp
mov
mov
add
inc
and
jne
(bad)
jge
push
adc
cmp
lds
addr16
xor
jecxz
cmp
adc
inc
mov
pop
cmp
sbb
dec
and
js
repnz
imul
mov
pop
push
aas
imul
rcl
dec
fwait
outs
mov
gs
stos
mov
pop
inc
(bad)
das
cmp
push
push
inc
add
adc
mov
and
ja
jae
(bad)
mov
sbb
rol
add
xor
xor
sar
fdiv
dec
popa
gs
mov
mov
out
shl
ret
jbe
enter
rol
add
dec
cmps
mov
fucomip
and
pop
dec
dec
adc
push
test
inc
jmp
ret
cmp
fs
test
push
mov
sub
mov
cs
das
sar
test
mov
(bad)
mov
ja
daa
cmp
cmps
(bad)
nop
mov
xchg
stc
enter
adc
(bad)
mov
cmp
push
pop
pop
sub
pop
and
aaa
lea
pop
pop
iret
std
cmp
cld
js
in
repnz
out
(bad)
test
sub
aas
xlat
(bad)
xor
fbld
mov
push
(bad)
(bad)
sub
out
inc
pop
cwde
push
pusha
mov
fnstcw
(bad)
loop
lds
rol
fninit
pop
adc
shl
aam
loop
(bad)
push
or
addr16
jge
pop
sahf
sbb
cmp
scas
xchg
in
(bad)
mov
cmova
mov
push
jecxz
addr16
shr
jo
fnstcw
adc
push
int
lahf
add
je
stos
aad
dec
fisubr
in
outs
popa
imul
stos
xchg
pop
sub
aad
mov
pop
xchg
imul
idiv
xchg
add
cmp
stos
or
adc
rol
push
pop
mov
out
cs
jmp
(bad)
jg
dec
add
in
sub
in
(bad)
fbld
or
adc
aaa
in
push
jge
in
(bad)
movs
mov
cmp
adc
ret
or
pmulhuw
xor
or
es
repnz
into
push
add
cld
ins
out
add
or
xchg
test
jmp
and
sub
das
mov
cs
(bad)
sahf
js
pop
sbb
mov
stc
mov
add
imul
stos
mov
fsubr
(bad)
fistp
outs
or
cmps
xlat
xor
xor
mov
enter
aad
and
pop
dec
jge
fwait
jb
or
retf
out
mov
(bad)
and
retf
ficom
test
cmp
aas
mov
and
bnd
bound
stc
mov
imul
icebp
sar
jmp
fwait
xchg
jns
mov
mov
rol
pop
mov
xchg
jae
popa
xor
cmp
push
inc
jle
inc
jbe
fild
gs
(bad)
(bad)
push
lds
cmp
pop
xlat
stos
inc
stc
mov
mov
push
and
mov
cmps
push
push
xchg
mov
aaa
pop
aaa
das
pop
std
mov
mov
add
or
loope
mov
es
daa
in
stos
(bad)
jmp
add
in
push
adc
dec
je
js
(bad)
stos
xlat
clc
(bad)
jecxz
outs
fcomp
push
add
std
and
or
push
mov
outs
jo
inc
push
xchg
gs
iret
cli
test
(bad)
js
xchg
fs
sti
shl
push
cmp
sub
jmp
dec
xlat
iret
push
outs
sar
lds
adc
xchg
adc
out
aas
ins
xor
cmp
lock
mov
sbb
xchg
pop
dec
inc
cmp
lods
aam
jns
inc
sbb
sti
adc
ffreep
mov
(bad)
call
lock
xor
sbb
cmp
add
scas
inc
mov
pop
sbb
fmul
add
mov
ss
mov
outs
cdq
ror
cmp
jl
(bad)
daa
jae
cld
adc
inc
cmps
stos
dec
xlat
xchg
inc
push
and
mov
fdiv
cmp
mov
mov
ins
ret
jge
dec
cli
dec
stos
or
rcr
ja
fs
mov
sbb
pop
mov
in
int
mov
ins
xor
shl
dec
jno
stos
(bad)
int
mov
ret
add
es
sbb
adc
cmps
lock
and
out
rcl
arpl
jns
in
pop
fs
aas
xor
xchg
in
push
or
xchg
and
push
and
cmp
mov
jnp
icebp
aaa
mov
cmps
lds
pop
push
and
dec
dec
sbb
jae
mov
jne
(bad)
loop
fcomp
ds
sub
jno
jg
in
movs
stos
inc
add
repz
jnp
sbb
iret
out
xchg
push
cs
lds
sub
fdivr
stos
mov
je
lds
push
popf
xchg
add
shr
in
mov
repz
xchg
sub
adc
or
data16
les
mov
pop
aad
aas
out
outs
push
popf
inc
pop
jnp
cmp
jge
jle
scas
inc
mov
jl
test
xchg
nop
xchg
jmp
retf
jg
(bad)
adc
lods
inc
loopne
jo
unpcklps
xor
js
rcr
shr
mov
xor
pop
movs
push
sbb
enter
fisubr
rcr
aas
aaa
xchg
pop
mov
loop
sub
je
inc
mov
xchg
in
fnstenv
inc
jbe
mov
ja
ins
pusha
(bad)
xchg
sub
cmp
pop
data16
dec
ss
inc
fld
pop
sar
push
inc
or
mov
mov
and
push
inc
pusha
int3
cmp
inc
jb
pop
ins
dec
stos
sbb
leave
cs
sub
outs
leave
sbb
sub
je
or
mov
dec
fimul
in
and
js
in
lahf
jl
jo
or
inc
jb
inc
mov
mov
push
sbb
clc
and
fnsave
sbb
ins
imul
mov
mov
invd
imul
jle
lahf
push
pop
ds
sbb
fisubr
sub
shl
mov
cmp
pop
ret
lds
dec
arpl
cmc
and
sar
mov
inc
mov
jb
mov
add
enter
xchg
fisubr
outs
cli
lock
pop
rcr
(bad)
cld
xor
push
loop
cmp
sub
cmc
das
and
(bad)
fsub
movs
mov
jno
sbb
mov
rcr
pop
pushf
lods
inc
fbld
cld
sbb
es
push
pop
test
mov
mov
(bad)
fcomp
xor
xchg
and
std
shl
sbb
add
dec
pusha
inc
ficom
mov
outs
loop
lea
jmp
push
mov
in
or
lods
and
mov
inc
pusha
stos
sbb
imul
pop
dec
fwait
and
stos
(bad)
lahf
sub
or
test
inc
adc
lea
ja
dec
mov
aad
repz
rcl
jbe
jo
popa
mov
jns
ins
aad
enter
shr
pop
gs
inc
sbb
stos
sbb
scas
dec
push
xor
push
ja
add
jnp
dec
outs
fcom
es
pop
push
rcr
fnstsw
jmp
nop
dec
in
lds
das
sub
fdiv
stos
data16
jnp
push
cdq
retf
mov
retf
popf
xchg
mov
pop
inc
mov
ret
fiadd
data16
lahf
leavew
loop
pop
stos
(bad)
cld
into
in
mov
xchg
and
aaa
xor
add
lea
lock
push
jne
ds
xor
into
add
inc
dec
mov
mov
cmp
lds
es
add
push
in
lds
xchg
sub
cmp
adc
or
addr16
mov
xor
inc
ds
sub
aas
imul
(bad)
jmp
rcr
inc
dec
push
call
mov
div
jmp
jg
adc
adc
mov
ja
(bad)
(bad)
xchg
ret
test
adc
jns
shl
inc
sahf
adc
sbb
(bad)
pop
and
enter
mov
or
stc
test
push
sbb
test
iret
fadd
lds
pop
aad
pushf
add
aas
sbb
adc
fiadd
stos
and
inc
inc
and
adc
es
sub
cmps
iret
push
inc
das
fbld
outs
mov
dec
mov
sub
loopne
pop
(bad)
cli
mov
div
cvttps2pi
pop
push
mov
mov
nop
test
mov
mov
jnp
jg
cwde
mov
or
div
mov
pop
(bad)
inc
mov
mov
lods
xor
(bad)
push
fs
retf
mov
rol
or
jnp
cmps
cmp
mov
push
repnz
js
pop
scas
popf
and
jnp
lods
xchg
out
jbe
sahf
and
cs
mov
(bad)
imul
jl
add
sahf
mov
dec
sti
inc
dec
nop
xchg
scas
pop
lds
cmps
call
into
and
add
and
icebp
or
mov
sub
dec
into
idiv
movs
dec
pop
int3
popf
gs
mov
sbb
nop
loopne
into
mov
js
popa
addr16
push
movs
(bad)
and
int3
scas
xor
rcr
lods
pop
add
daa
(bad)
int
inc
jb
fld
jg
(bad)
rol
into
mov
push
push
rol
mov
in
fadd
add
fnstcw
scas
push
jle
shr
stc
jp
xor
scas
into
rcl
int
sti
cwde
xchg
lds
in
into
pushf
leave
shl
mov
jne
cs
enter
popa
push
pop
dec
mov
retf
or
hlt
in
into
sub
mov
fimul
mov
add
aad
adc
cmps
mov
or
fwait
mov
into
pop
jnp
lds
xor
mov
lea
add
push
loopne
xchg
xchg
mov
out
mov
into
push
add
aad
mov
rol
popa
mov
dec
dec
movzx
mov
lods
sahf
cmp
cdq
dec
push
into
enter
loopne
mov
xchg
xchg
adc
movs
pop
lods
clc
xlat
mov
(bad)
call
cwde
loopne
xchg
and
into
inc
sub
inc
mov
fistp
not
imul
retf
repnz
je
mov
das
ins
int
dec
cmps
jge
adc
into
mov
lock
fadd
jecxz
into
test
sbb
mov
gs
(bad)
push
mov
cmp
cs
loopne
mov
mov
test
push
jle
imul
ds
in
mov
or
jne
das
and
stos
mov
dec
(bad)
mov
data16
mov
sbb
push
sbb
and
aad
add
dec
mov
aaa
daa
test
add
dec
sbb
and
inc
and
into
inc
inc
jmp
call
push
into
hlt
dec
pop
popf
push
push
cmp
jge
sbb
lds
in
stos
mov
(bad)
test
push
pop
not
into
sub
in
fwait
pop
add
jb
mov
mov
fidivr
pop
test
jecxz
in
sar
call
adc
stos
jo
mov
das
jp
lahf
fdivp
call
push
int3
fstp
lods
js
retf
mov
enter
jp
jne
in
and
out
(bad)
into
rol
mov
dec
cli
in
mov
das
(bad)
cmp
clc
push
into
(bad)
call
cmc
cdq
test
(bad)
xor
adc
push
sub
mov
dec
call
aas
mov
fidiv
push
(bad)
jne
nop
jp
ficom
scas
cs
outs
adc
clc
shr
into
dec
pop
and
jmp
fsubr
into
cmps
sahf
scas
mov
or
jbe
adc
xchg
cmp
adc
popa
into
pop
repz
out
sar
adc
das
xor
(bad)
out
test
cmp
in
or
fmul
out
clc
jo
jno
into
push
lahf
or
jne
test
jmp
push
xor
ss
lods
mov
lods
js
fwait
cmp
into
gs
push
mov
call
stc
push
jle
retf
cdq
sub
inc
arpl
aaa
adc
push
xchg
into
out
push
push
daa
mov
mov
leave
sbb
fs
into
in
fwait
jno
push
into
or
pop
xor
adc
adc
test
aaa
test
scas
jo
div
cwde
add
stos
ret
mov
hlt
daa
adc
inc
neg
add
icebp
add
stos
pop
popa
sahf
shl
out
popf
jl
sbb
clc
push
pushf
stos
jge
mov
sub
(bad)
into
pop
out
add
pop
stos
cli
lods
or
int
retf
adc
je
mov
ret
xchg
mov
cmp
(bad)
fxch
fist
or
enter
inc
mov
sub
xor
scas
and
sti
les
in
dec
xor
ds
fnstsw
data16
repnz
movs
out
pop
cmp
mov
imul
jmp
mov
loop
add
push
arpl
xor
push
into
lods
sbb
ins
and
xlat
out
popa
cdq
inc
ret
into
test
inc
cmp
inc
add
adc
(bad)
mov
(bad)
fs
pop
pusha
or
lds
inc
cmp
xchg
mov
cli
push
mov
cmp
adc
jnp
lods
inc
mov
jle
stos
inc
mov
add
retf
mov
retf
xchg
gs
iret
dec
lds
and
out
cmc
jno
add
sbb
nop
lods
inc
ins
adc
pop
test
xor
inc
push
jl
or
inc
fs
pop
mov
(bad)
sahf
mov
push
mov
rcr
cmp
hlt
daa
out
xor
inc
sbb
(bad)
push
cld
add
cmp
mov
retf
stos
xor
sub
fldenv
inc
das
test
push
test
imul
mov
cmp
iret
add
mul
and
inc
jle
test
jo
(bad)
mov
and
add
xor
adc
jle
or
movs
sar
cmps
mov
xchg
fcmovnb
outs
xor
dec
xchg
xchg
and
js
lods
lods
push
jge
cmps
sbb
(bad)
out
sub
ficomp
outs
mov
jge
pop
outs
inc
mov
cmp
aas
cmps
outs
mov
push
popa
sub
leave
jmp
out
daa
scas
retf
xor
call
lods
gs
jp
jmp
xchg
iret
xchg
adc
sbb
jge
or
imul
outs
(bad)
mov
mov
sar
and
add
scas
outs
not
daa
xchg
movs
mov
or
cs
push
push
adc
sub
sub
pop
js
push
cmp
jne
and
sbb
xchg
test
dec
push
test
fiadd
out
outs
cmp
xchg
add
mov
pop
(bad)
pop
movs
loopne
xor
jmpw
lds
mov
push
sahf
outs
sahf
jp
or
cmc
cmp
jb
repz
push
sbb
jne
es
fist
pop
cmp
or
xchg
test
add
push
jp
scas
stc
inc
hlt
(bad)
outs
popa
inc
data16
cld
ret
cmp
outs
inc
outs
(bad)
retf
push
add
jno
nop
jecxz
dec
jns
mov
jge
mov
add
pop
or
imul
adc
add
pop
sub
dec
outs
outs
lds
ja
dec
cmp
pop
mov
jns
jne
pop
mov
data16
lds
adc
add
or
mov
mov
xchg
sbb
adc
jg
aas
lds
mov
stos
ins
pop
cmp
in
or
pop
mov
fild
jl
in
(bad)
xor
add
sbb
mov
shr
cli
int3
test
or
data16
adc
jmp
lods
inc
jo
push
push
pop
fmul
mov
or
daa
jnp
inc
jl
dec
push
shr
cmp
lds
ins
dec
add
iret
add
jb
and
inc
fsub
sub
xor
fdivr
mov
jo
adc
stos
bound
dec
mov
ins
stos
push
outs
paddusw
out
mov
es
mov
ret
sbb
scas
jno
mov
xchg
adc
and
and
fnop
cdq
(bad)
stos
inc
pop
outs
in
add
bound
ret
in
and
inc
retf
pop
cmp
cld
sbb
in
jl
cli
bound
cmps
vunpckhps
mov
imul
jmp
mov
pop
sti
cwde
shr
sbb
stc
movs
jp
repz
xchg
sub
dec
sub
xor
sahf
xchg
(bad)
add
(bad)
repnz
aas
idiv
jmp
mov
mov
and
jbe
hlt
adc
scas
imul
int3
rcl
mov
push
aad
pushf
repz
idiv
dec
shl
stos
pop
inc
adc
cmps
cs
jmp
adc
call
iret
lea
xlat
push
dec
mov
(bad)
dec
inc
or
mov
dec
lods
dec
cmp
les
stc
and
inc
jno
cs
aas
mov
xor
cmova
push
and
add
jb
dec
mov
mov
dec
pop
and
cld
and
inc
(bad)
repnz
inc
popa
jmp
cld
iret
and
inc
jo
rcr
cwde
(bad)
push
int
nop
retf
push
cwde
jp
test
data16
stc
(bad)
out
inc
fs
ficom
sub
adc
lods
outs
(bad)
push
add
sub
int3
aam
lods
lds
jae
and
scas
mov
mov
test
ror
mov
mov
add
shr
dec
movs
add
dec
mov
imul
push
sbb
leave
mov
dec
enter
lods
into
cmps
mov
aas
pop
cmp
and
and
inc
xor
jno
or
ss
push
jns
fs
mov
es
enter
or
jo
fs
dec
and
ds
sub
cmp
mov
add
xchg
sbb
pop
lods
cmp
es
aaa
sub
sub
test
sar
or
mul
lds
mov
stc
mov
inc
out
inc
(bad)
aas
mov
inc
dec
dec
daa
stos
inc
adc
sub
cmc
das
lahf
adc
lods
(bad)
push
outs
or
sbb
push
jge
(bad)
sub
in
mov
fwait
sub
cmp
loope
(bad)
xor
outs
mov
cmp
test
cs
gs
adc
(bad)
cmp
inc
and
int
dec
call
mov
ret
test
pop
in
or
loopne
out
adc
jno
xor
inc
mov
xor
xchg
scas
or
sub
dec
cmp
loopne
sbb
out
test
and
mov
leave
xchg
pop
int3
cmps
pop
enter
rol
(bad)
xchg
sbb
les
push
xor
sbb
cmp
pop
jno
cmp
xchg
xchg
fldenv
or
repnz
mov
je
dec
cmp
jg
mov
jg
ror
(bad)
push
jecxz
lods
push
xchg
mov
rcr
popa
jp
arpl
into
int
cmp
adc
add
and
jae
out
inc
pop
jmp
jle
jle
sub
gs
mov
pop
pop
clc
mov
mov
cmp
push
mov
pop
push
xchg
or
add
jbe
jmp
out
sbb
xor
push
and
clc
(bad)
cmps
jle
mov
sub
mov
mov
cmp
and
fadd
xchg
loop
cmp
scas
lock
push
jl
test
mov
mov
das
scas
pop
add
push
(bad)
fwait
jne
add
xchg
jmp
clc
scas
ja
sub
push
push
inc
lock
pop
out
or
vlddqu
inc
mov
stos
inc
mov
es
pop
xor
enter
and
push
out
das
jmp
jnp
data16
out
jae
jae
pop
dec
outs
cmp
ins
icebp
sub
inc
xor
cmp
into
add
dec
dec
lds
popa
ret
cmp
jle
jnp
jg
bound
out
mov
fild
sub
fcmovnu
fld
inc
fs
jmp
js
add
es
stos
fdivr
lds
scas
je
hlt
mov
(bad)
sbb
movs
adc
lods
scas
xor
or
push
dec
push
(bad)
dec
daa
outs
popa
jo
sbb
in
fwait
mov
in
ror
mov
jmp
pop
(bad)
sbb
outs
mov
push
and
pop
aaa
cmp
add
fldcw
aaa
dec
cmp
js
sub
push
ret
data16
movs
neg
mov
out
ja
in
dec
out
adc
sbb
adc
adc
pop
xor
xor
mov
or
(bad)
pop
out
mov
inc
push
int3
dec
je
out
xor
cmc
dec
in
cmps
js
leave
outs
jns
and
icebp
ror
add
adc
sub
retf
ds
js
inc
out
in
(bad)
adc
pop
das
sar
add
fstp
lahf
call
aaa
daa
inc
or
jbe
scas
push
bound
adc
outs
in
aaa
pop
outs
xor
into
mov
pop
and
sub
fsubp
arpl
dec
push
mov
push
xor
jmp
mov
jnp
mov
xor
aam
and
aam
inc
fdiv
scas
sub
pop
daa
xor
out
pop
out
test
jo
test
hlt
rcl
dec
out
or
into
idiv
mov
mov
setge
mov
xor
nop
xor
inc
cwde
or
dec
xchg
fisub
test
mov
ins
hlt
add
pushf
popf
popa
ror
(bad)
inc
mov
dec
stos
jns
popf
sbb
or
aas
inc
dec
xor
sub
enter
rcl
daa
jnp
dec
jge
jmp
loope
aad
sti
nop
ins
repz
push
loope
shl
neg
iret
pushf
jg
or
cmps
std
adc
fst
jmp
aad
jnp
mov
mov
sbb
ds
add
xor
mov
in
mov
rcr
sbb
stos
mov
les
jl
or
pop
mov
iret
jmp
mov
inc
push
test
add
cld
retf
mov
mov
call
and
shl
push
movs
xor
popf
and
fsub
cmp
adc
js
fwait
out
add
int
fisub
popa
aas
push
jge
adc
pop
in
les
dec
sub
adc
inc
movs
cmp
adc
mov
ds
fst
movs
mov
add
and
add
mov
cmp
out
mov
adc
test
aas
mov
(bad)
in
dec
xor
cs
shr
xchg
cmp
mov
add
sbb
inc
cmps
(bad)
cdq
sbb
test
int3
cmp
and
into
jns
repnz
sti
sbb
add
sub
jo
int
loope
inc
out
sti
sbb
adc
mov
js
jb
stos
iret
out
mov
ret
js
jae
in
mov
arpl
pop
fs
stos
fdiv
jle
into
sub
stos
adc
push
ret
dec
fwait
xor
add
mov
inc
shl
pop
sbb
ja
xor
inc
cmps
das
dec
dec
ffreep
or
addr16
stos
jne
imul
sub
cmps
std
popa
popa
adc
xlat
push
cmp
jp
pop
sar
outs
xchg
xor
and
fbld
xlat
cmp
fcmovb
sbb
adc
mul
lds
mov
sub
aas
adc
inc
jnp
addr16
sbb
js
dec
lds
xor
ror
xor
jp
push
aam
lods
sbb
pop
adc
push
int3
mov
hlt
mov
fisub
std
xor
movs
inc
scas
and
(bad)
sbb
cs
(bad)
shl
pusha
sub
xchg
mov
nop
(bad)
aad
push
adc
push
dec
xchg
(bad)
call
and
cmp
mov
or
cmps
scas
ret
dec
add
pop
clc
std
push
daa
lds
dec
sbb
into
inc
loopne
scas
inc
mov
sbb
pusha
bound
(bad)
xlat
sti
outs
jno
mov
out
mov
and
fisub
mov
dec
sub
pop
call
mov
or
jl
into
xor
popf
pop
xchg
mov
outs
jmp
add
jne
stos
test
aas
adc
adc
jne
inc
dec
fs
aam
fdiv
arpl
mov
xor
lock
jl
repz
pushf
scas
(bad)
push
stos
in
in
jmp
jne
js
push
mov
fisttp
lods
movs
adc
fld1
or
imul
icebp
cli
or
cld
retf
inc
mov
sbb
mov
call
lahf
or
pop
cmp
in
scas
(bad)
ins
out
cmp
xchg
mov
pop
pushf
cld
test
call
xchg
mov
push
mov
lds
mov
lock
pop
fnstsw
inc
movs
ret
out
or
(bad)
scas
mov
sar
fwait
sar
dec
adc
pop
mov
xor
dec
mov
sub
sub
aam
and
sbb
xlat
adc
fistp
and
jne
outs
inc
inc
bound
cmp
xchg
cmp
icebp
(bad)
jge
pop
sbb
scas
loopne
jns
inc
arpl
xchg
es
lea
shl
and
and
aam
mov
xchg
adc
(bad)
imul
in
adc
inc
or
pop
stos
ret
jo
int
test
cmp
popa
mov
push
into
cli
inc
dec
pop
sbb
pop
cli
dec
and
jo
xchg
(bad)
pop
rcl
dec
jecxz
(bad)
out
or
fild
loope
xchg
push
cdq
sub
test
mov
pusha
addr16
or
int3
repnz
xchg
stos
xchg
loop
js
adc
(bad)
pop
add
mov
push
rcl
(bad)
(bad)
out
aaa
xor
add
shrd
sub
mov
stc
cmp
sti
lahf
cmp
outs
and
push
outs
dec
mov
ror
pop
dec
sub
gs
popa
ins
adc
jmp
mov
jp
cmp
(bad)
fwait
popf
push
adc
lds
xchg
ja
or
ror
inc
aaa
jmp
xor
jno
push
mov
sahf
or
push
mov
in
mov
or
dec
(bad)
lock
jno
mov
imul
outs
jp
aas
mov
inc
(bad)
mov
xchg
mov
add
push
xor
popa
scas
mov
in
aad
mov
adc
aam
ja
pop
and
cmps
lea
mov
(bad)
jle
mov
or
adc
loopne
push
inc
inc
sahf
or
xchg
lds
loopne
retf
mov
cmp
xor
mov
sti
dec
and
and
mov
retf
ret
scas
adc
pop
push
xchg
aam
jle
push
test
xor
mov
xchg
adc
xlat
(bad)
cmp
sub
inc
(bad)
in
and
push
not
inc
pop
into
cwde
cmp
cmp
les
pop
add
dec
xor
mov
push
or
xor
fwait
mov
mov
es
pop
cmp
add
mov
adc
jl
(bad)
fnclex
inc
xchg
xchg
cmps
mov
xlat
cwde
dec
test
rcl
jno
arpl
lahf
mov
daa
(bad)
lods
scas
and
mov
sub
gs
or
dec
call
and
cmp
(bad)
jle
jb
pop
mov
ss
ret
cmp
in
daa
inc
movs
clc
dec
arpl
lock
stos
push
scas
mov
fwait
mov
lea
sub
scas
sub
or
shr
retf
pop
mov
adc
sub
pop
imul
xchg
cmp
sbb
(bad)
mov
add
loopne
lock
daa
xlat
jb
test
mov
aad
mov
shl
inc
add
add
sbb
and
jp
pop
cmp
(bad)
movs
mov
ret
lods
jge
adc
popa
mov
imul
cli
rcl
mov
stos
(bad)
adc
test
cmps
fidivr
enter
bound
in
jp
(bad)
xor
aam
test
stos
es
ja
or
dec
sbb
movs
emms
jo
xlat
xor
hlt
inc
xor
xor
inc
and
ins
and
mov
jp
mov
push
inc
lea
les
jnp
fdivr
dec
aas
test
push
mov
xor
bound
adc
jg
xor
jb
push
or
lods
ins
(bad)
int
sub
fwait
cmp
adc
dec
hlt
push
cwde
or
or
aas
sbb
pop
lahf
push
ror
vunpckhps
out
out
pop
lods
ficom
pop
outs
mov
arpl
mov
or
pop
add
test
retf
and
or
dec
jmp
cmp
mov
mov
aaa
xchg
add
push
adc
mov
inc
iret
jmp
out
hlt
shl
outs
mov
fidiv
mov
jmp
or
xor
xchg
inc
fiadd
pusha
push
icebp
arpl
dec
out
xor
stos
pop
mov
jae
mov
adc
in
(bad)
ja
and
xchg
push
fstp
movs
lahf
ja
mov
in
xchg
icebp
sub
mov
icebp
aam
jecxz
or
ret
ret
div
mov
shl
inc
sbb
(bad)
mov
jo
xchg
pop
adc
gs
rol
pop
jno
int
adc
stos
adc
and
jo
out
nop
add
std
push
dec
push
inc
outs
mov
pop
cmps
das
fwait
mov
mov
retf
fs
call
cmp
stc
lods
nop
sub
pop
or
ins
sbb
lods
pop
mov
pusha
dec
and
adc
jbe
shr
mov
mov
mov
mov
xor
scas
mov
rol
xchg
fldenv
xor
in
xlat
les
out
push
jno
add
inc
sbb
xor
in
popa
push
(bad)
dec
jge
mov
mov
mov
xor
jns
jle
ret
iret
mov
mov
jb
mov
lds
push
ficomp
xor
(bad)
fisubr
add
fnstcw
xchg
rcr
les
jmp
push
jno
les
adc
add
mov
aam
add
icebp
mov
pop
xor
lds
ins
or
pop
int
jle
(bad)
jbe
dec
ja
lds
sahf
xlat
inc
call
mov
mov
pop
dec
mov
adc
test
jecxz
cmp
arpl
push
push
inc
push
gs
stos
pop
ss
fnstenv
test
cmps
test
rcr
jecxz
adc
idiv
fucom
aaa
fld
fbld
jl
gs
cmps
ss
pop
out
add
call
enter
mov
sbb
cwde
(bad)
push
loopne
mov
or
ja
mov
inc
jne
jo
(bad)
(bad)
dec
mov
push
jmp
jg
sti
(bad)
inc
les
pop
shr
rcl
inc
inc
enter
inc
push
inc
daa
add
enter
mov
cli
inc
addr16
and
mov
or
cmp
ficomp
mov
jae
and
cwde
or
les
inc
jne
xchg
inc
xchg
retf
or
stc
out
stos
lds
iret
imul
mov
add
stos
jbe
dec
cld
adc
jmp
cmps
js
sub
push
push
inc
pop
clc
xchg
cmps
cmc
mov
fwait
cmp
ret
push
sub
js
pushf
pop
mov
or
push
ret
push
lods
pop
xchg
popa
int
adc
loopne
fisubr
rcr
cmovle
in
cmps
mov
jbe
xlat
into
dec
or
(bad)
or
lds
(bad)
mov
mov
mov
pop
mov
lea
jnp
add
jge
mov
loop
scas
cmp
stos
add
xchg
adc
and
sub
stc
je
stos
(bad)
ror
sub
inc
xor
xor
scas
lahf
mov
in
sbb
cmps
dec
shr
or
ins
es
or
imul
aad
test
hlt
movs
cli
cmp
iret
cwde
pop
xchg
mov
ret
add
out
xchg
aas
and
fist
js
fstp
aaa
jp
nop
push
jg
mov
cli
cmp
outs
mov
gs
jl
sub
imul
push
(bad)
out
cmp
imul
test
rcr
or
test
test
out
mov
jnp
ret
dec
cmp
cmp
mov
repnz
push
push
cmp
push
fiadd
inc
xor
cld
sub
add
mov
jp
mov
test
xor
(bad)
(bad)
stos
and
push
push
mov
mov
not
je
stos
adc
rol
outs
jb
gs
int3
sar
stos
adc
das
add
fwait
xchg
cmp
imul
pop
dec
mov
popf
jg
or
sub
stos
sbb
xor
retf
sub
fdivr
cmp
jns
sbb
jo
sub
mov
cmp
inc
xor
jb
imul
ins
mov
cmp
stc
call
mov
adc
les
pusha
sub
push
ins
test
popf
pop
adc
mov
bound
lds
lea
pop
pop
fs
ds
outs
jne
cmp
and
push
lods
fwait
sbb
outs
sbb
je
jno
push
jp
test
pop
sbb
add
bound
cmps
lds
mov
sbb
fisttp
into
and
jo
pop
jmp
mov
pop
imul
int
add
retf
jo
jl
mov
mov
outs
adc
lods
adc
dec
adc
mov
jge
mov
dec
and
adc
sahf
mov
call
jne
mov
xor
stos
rcr
mov
ret
mov
(bad)
lahf
imul
leave
sub
mov
push
dec
pop
or
fimul
xor
ss
cmp
push
push
gs
jg
je
add
sub
push
jg
sbb
pop
adc
(bad)
iret
das
adc
aaa
not
and
sbb
scas
inc
cmps
ins
sbb
inc
xchg
and
jmp
es
scas
test
or
arpl
mov
and
mov
mov
jae
xor
clc
(bad)
cmp
cmp
stos
stos
movs
adc
dec
mov
xchg
icebp
hlt
sahf
loopne
lds
mov
cmp
mov
fldenv
or
icebp
xor
fnstenv
jnp
ja
mov
jo
int3
jp
sbb
cmp
pop
pop
shl
inc
ret
dec
cli
jmp
xchg
adc
cmps
aaa
(bad)
pop
sbb
movs
sbb
cmp
dec
jno
jmp
dec
int3
adc
(bad)
pop
mov
aaa
in
loope
loopne
into
mov
sub
cld
cmp
xor
retf
imul
add
inc
and
mov
dec
cmp
inc
xor
inc
add
scas
mov
mov
ja
hlt
dec
xchg
mov
add
lods
xchg
jb
xor
fprem
sbb
outs
or
mov
sbb
inc
cmps
and
icebp
mov
adc
jecxz
inc
aas
jg
mov
retf
leave
in
movs
fmul
aas
ret
(bad)
stos
jmp
sub
nop
lds
pop
data16
std
dec
mov
jecxz
popa
fmul
mov
or
mov
pusha
(bad)
mov
sub
jbe
into
pop
call
aam
fbstp
dec
fsub
test
rcl
lea
out
(bad)
sti
push
or
sub
jmp
mov
cmps
and
(bad)
push
add
ss
dec
daa
push
add
mov
mov
sbb
mov
inc
pop
es
pop
or
mov
pop
mov
jge
repnz
push
mov
mov
test
or
xor
mov
adc
cmp
xor
jle
aam
or
mov
push
pusha
dec
and
sti
lds
sub
pop
xchg
clc
movs
fbstp
inc
xor
addr16
lods
retf
adc
jmp
inc
mov
outs
adc
fsubr
sti
push
adc
in
dec
stos
(bad)
mov
icebp
or
loopne
pop
inc
scas
sub
mov
mov
inc
add
xor
xor
jmp
pop
icebp
imul
mov
out
cmps
jno
sbb
jns
xchg
inc
xchg
mov
dec
dec
ds
mov
lahf
mov
fadd
add
std
mov
test
outs
pop
lds
xlat
sub
lea
rol
xchg
inc
stos
sub
in
into
mov
cmps
mov
sbb
adc
gs
jo
mov
leave
xor
outs
mov
mov
push
and
dec
pop
iret
imul
(bad)
stos
mov
push
out
add
xchg
xchg
dec
mov
retf
ins
adc
gs
adc
mov
sar
clc
data16
or
push
sub
dec
in
dec
adc
fcmovne
adc
cmc
scas
cmp
sub
inc
scas
fcom
test
mov
or
scas
movs
mul
aam
in
leave
jns
outs
js
lds
xchg
push
add
jmp
jg
(bad)
or
dec
cmp
ret
pop
outs
ficomp
inc
adc
repnz
xor
ins
sbb
xor
neg
stos
(bad)
scas
in
repnz
xor
xchg
out
jp
or
sbb
jb
(bad)
out
jbe
fwait
cs
push
retf
fist
pop
cmps
jmp
inc
jg
mov
outs
sar
scas
mov
ret
xlat
add
mov
push
jge
mov
jge
cmp
jo
inc
pop
cmps
dec
push
fucomp
(bad)
jo
lock
and
xchg
pop
aam
pop
imul
shr
clc
push
adc
pop
test
and
in
fsub
push
cmps
icebp
aad
mov
adc
imul
lds
inc
(bad)
and
xchg
mov
cmp
push
inc
rcl
xor
popa
mov
and
sbb
inc
add
retf
jno
cmps
inc
jne
test
or
mov
aad
fldl2e
sbb
imul
(bad)
push
fstp
xor
ret
mov
inc
sbb
out
cmps
cmp
into
sub
lds
mov
or
sbb
arpl
cmps
ret
cmc
clc
adc
jp
xchg
mov
jb
jg
aam
dec
sub
rcl
call
sub
icebp
push
retf
movs
mov
shl
stc
mov
mov
fisubr
cmp
in
sbb
dec
jecxz
pop
cmp
or
shl
cmps
adc
fdivr
mul
loopne
loope
rol
sbb
push
pop
dec
xchg
mov
lock
(bad)
popf
jne
push
sbb
mov
mov
push
or
fist
push
in
les
hlt
jnp
(bad)
sbb
(bad)
mov
inc
mov
lahf
les
arpl
imul
add
and
cmp
rcr
shr
js
stc
mov
jmp
adc
pop
sub
nop
pop
lods
js
call
ror
inc
mov
nop
mov
sbb
or
clc
outs
ja
clc
mov
fwait
xchg
or
fisub
mov
jecxz
push
pop
adc
movs
fidiv
mov
adc
fisttp
movs
xchg
mov
inc
inc
add
lock
lds
or
mov
(bad)
mov
(bad)
sbb
mov
xchg
out
jb
sub
adc
add
bound
ror
add
pusha
cwde
xor
push
shl
sbb
xchg
and
mov
push
outs
inc
fwait
movs
xor
fild
or
aaa
pop
imul
inc
fnstcw
out
xor
enterw
mov
xchg
sbb
(bad)
js
frstpm(287
sub
push
test
gs
add
inc
fst
in
adc
push
mov
and
aam
jle
into
inc
mov
or
js
or
loopne
sar
fwait
test
cmp
push
sbb
rcr
scas
sbb
sbb
fadd
shl
call
das
add
sti
cmc
sti
daa
mov
mov
cmc
ds
sub
je
cmp
jmp
jmp
xchg
cmc
(bad)
stos
pop
div
push
aad
stos
stos
lock
test
sub
lea
outs
dec
gs
cmps
adc
lds
and
mov
mov
data16
repnz
dec
lods
sub
out
lds
scas
(bad)
repnz
es
push
jle
mov
add
and
xor
ins
(bad)
arpl
shld
repz
icebp
rcr
cmc
cmc
or
scas
scas
mov
ja
and
gs
pop
inc
jnp
call
mov
mov
loope
adc
call
lds
mov
outs
(bad)
push
rcr
shl
cmps
call
push
inc
cmp
icebp
scas
cmp
adc
or
xor
shl
(bad)
fmul
or
mov
adc
outs
sub
aaa
mov
cmp
mov
jnp
mov
pop
xchg
loop
mov
ja
stos
mov
std
rcl
(bad)
xor
lds
mov
adc
xor
push
xchg
mov
adc
inc
sbb
rol
mov
movs
cmps
test
jnp
mov
pop
in
test
or
test
pop
jle
xor
xchg
adc
or
test
sbb
mov
jb
shl
mov
outs
test
mov
xor
jnp
data16
gs
jnp
out
jecxz
cmps
jp
cmp
inc
shl
inc
pop
or
xchg
sbb
sub
addr16
sub
mov
jp
sti
outs
addr16
and
jnp
dec
vcvtdq2ps
mov
stos
dec
pop
lss
fndisi(8087
mov
call
(bad)
cmp
enter
xor
mov
cmps
ds
(bad)
daa
add
pop
stos
fs
add
imul
xchg
cmps
(bad)
stc
aad
sbb
or
(bad)
jmp
sub
pop
es
bound
fcomp
cmps
lds
inc
jae
data16
fs
mov
xlat
sti
aas
inc
arpl
(bad)
mov
je
jecxz
(bad)
xchg
pusha
cwde
mov
mov
jbe
pop
cmps
sti
xor
aam
dec
fild
shld
mov
scas
sub
xor
mov
and
loop
daa
call
dec
imul
(bad)
cmc
and
cmps
push
(bad)
sbb
out
mov
mov
dec
xor
popf
mov
inc
(bad)
jns
rdpmc
inc
pop
stos
mov
pop
or
pop
inc
adc
(bad)
movs
adc
call
retf
jae
mov
add
push
bound
bndldx
fstp
mov
xchg
jmp
adc
cmps
test
mov
pop
adc
adc
ror
ror
fwait
lahf
push
mov
rcl
fst
xor
jg
mov
fiadd
xlat
mov
or
mov
shr
aad
push
sbb
xchg
mov
sahf
cmp
sahf
adc
jle
inc
jecxz
xchg
xor
pushf
jp
push
outs
jp
cmps
ja
scas
or
jbe
ror
adc
lock
adc
pusha
lock
sub
jns
ins
imul
mov
xor
out
pop
mov
movs
dec
outs
ja
and
jne
out
xchg
(bad)
or
mov
pop
sub
retf
lods
lods
inc
fwait
xlat
cmps
dec
aad
sub
xor
out
js
(bad)
jp
add
imul
inc
mov
cmps
rcr
pushf
xchg
jl
in
xor
inc
mov
scas
aaa
adc
lds
sbb
jmp
sbb
xor
push
jo
add
mov
adc
inc
mov
popf
xor
in
(bad)
cmp
push
adc
mov
gs
retf
jno
les
fdivr
je
das
loope
xchg
fs
pusha
push
icebp
push
in
pop
fisttp
mov
adc
mov
(bad)
repnz
or
ds
loopne
stc
ins
push
movs
adc
pop
inc
ds
mov
fwait
mov
mov
in
push
ss
pop
mov
das
test
retf
lods
pushf
cmp
fimul
out
mov
cmp
push
popa
dec
sbb
pop
mov
out
cmps
push
div
call
mov
loop
movs
addr16
lods
int
pusha
ins
inc
fimul
jo
pop
jge
dec
sbb
addr16
outs
xchg
retf
(bad)
fidivr
fidivr
push
sahf
xchg
lds
(bad)
(bad)
add
dec
pop
and
popf
push
int
aam
daa
in
aas
mov
lds
aas
stos
imul
pop
fs
and
lock
in
ja
xor
push
stos
es
pop
cmps
cs
lods
inc
(bad)
jne
icebp
mov
mov
jl
push
mov
cld
and
popf
stc
outs
in
(bad)
aas
sbb
sbb
mov
neg
aaa
sahf
and
rol
jb
sub
inc
dec
xchg
fst
lea
cdq
cmps
repnz
scas
(bad)
pop
shl
test
fdiv
jle
xchg
imul
cmps
call
(bad)
and
pop
in
in
mov
adc
cmp
aad
add
es
(bad)
adc
jecxz
jmp
in
js
xor
fs
push
mov
sbb
pusha
jl
inc
and
xchg
and
cmps
(bad)
aam
push
(bad)
adc
sahf
mov
add
repz
add
xchg
mov
arpl
or
adc
gs
loope
or
loopne
lods
aad
push
int3
call
push
mov
sub
sahf
neg
adc
and
pop
push
or
aaa
fcomp
mov
repnz
fcom
cmps
inc
or
inc
pop
dec
sub
popf
jns
lock
imul
enter
(bad)
ss
cld
and
mov
cs
clc
push
jge
adc
lea
sar
mov
iret
aas
out
loope
aam
sbb
mov
inc
rcr
lods
imul
stos
mul
adc
imul
fdivr
out
dec
icebp
or
jg
and
fdivr
jo
cmps
mov
lods
repz
in
and
jbe
push
mov
cs
pop
dec
das
jne
cmc
cmp
mov
jns
push
dec
sbb
outs
pop
dec
ins
jae
jmp
mov
jne
jnp
call
cmps
out
sub
std
cmp
outs
daa
lock
stc
mov
fcom
icebp
xchg
(bad)
or
out
sub
cmp
arpl
xchg
mov
jmp
inc
push
fidiv
in
sbb
xor
mov
ror
cmp
lods
mov
xchg
mov
(bad)
lahf
js
and
xlat
pusha
jmp
les
mov
push
in
hlt
jbe
fisub
sub
call
mov
jp
adc
sub
dec
sub
pop
inc
retf
xchg
lods
pop
das
mov
mov
add
mov
sbb
adc
jl
cs
jmp
xchg
lods
cmps
mov
aam
push
jnp
shr
adc
lods
jae
adc
gs
pop
(bad)
je
sub
jnp
(bad)
cmp
pop
mov
xchg
fst
mov
push
fs
pop
out
out
dec
int
(bad)
xchg
dec
dec
jmp
icebp
sub
lds
cli
fild
cli
xchg
jmp
or
and
test
pop
popa
push
xchg
sbb
popa
adc
gs
les
daa
push
mov
lea
dec
aad
mov
(bad)
pop
adc
in
fld
cmc
add
and
jp
jns
cmp
mov
stc
cmp
shl
fs
mov
repz
sbb
cs
data16
(bad)
ficom
fwait
sub
push
push
ja
ret
arpl
mov
pusha
and
sar
lea
lahf
jle
fs
sti
xchg
push
pop
test
mov
pop
add
jmp
in
retf
ja
sub
xchg
jecxz
lahf
mov
mov
(bad)
push
mov
cmp
sahf
in
popa
lahf
ja
lfs
movzx
enter
(bad)
sub
fucom
add
sub
lahf
es
inc
cs
sub
jnp
jo
mov
and
jne
mov
cmp
xor
mov
mov
jmp
xor
mov
adc
and
adc
push
fimul
sub
pop
stos
push
mov
sub
jge
jbe
sbb
push
mov
mov
jmp
pop
push
(bad)
shl
push
pushf
jno
sahf
mov
mov
test
aaa
xchg
mov
dec
lahf
out
push
pop
js
mov
popa
data16
ds
inc
inc
retf
sub
xor
(bad)
in
sahf
jmp
aas
adc
xor
and
(bad)
lds
cpuid
stos
push
bnd
das
add
setle
sbb
jl
in
clc
pop
adc
out
in
sub
inc
jmp
pusha
lods
jle
sub
mov
sahf
and
sub
scas
xchg
sub
imul
cli
cmp
adc
ds
scas
cmp
stos
pop
cmp
lahf
jp
cmp
mov
in
fs
mov
(bad)
idiv
movs
neg
rol
sub
and
pop
data16
shl
int
push
nop
cmps
xchg
push
lods
lahf
inc
sub
ret
dec
in
dec
je
or
scas
jg
(bad)
aam
movs
mov
pusha
pop
sub
inc
lds
outs
mov
(bad)
push
retf
movs
pop
xor
push
scas
jg
lahf
jnp
jb
icebp
shld
pop
test
leave
aaa
sub
cmp
mov
jmp
xchg
xor
jle
idiv
scas
mov
sub
(bad)
(bad)
xchg
ss
mov
mov
jo
and
or
ret
lea
movaps
sar
aaa
daa
outs
pushf
fstp
scas
xchg
xlat
ins
cdq
and
mov
mov
mov
mov
aaa
and
mov
addr16
sub
in
nop
and
lahf
ret
iret
sub
or
test
jbe
and
ins
mov
sub
imul
inc
scas
movs
sub
aas
rcl
clc
outs
(bad)
and
cmp
push
xor
in
mov
ds
daa
aas
jbe
sub
jmp
fwait
mov
pop
ins
mov
das
retf
jmp
dec
jae
mov
pop
adc
lods
xor
mov
mov
daa
nop
sub
loope
jl
push
or
jne
fisubr
test
data16
push
loopne
and
mov
pop
test
test
jmp
dec
pop
cmps
lock
jp
lods
pop
sbb
mov
push
das
mov
movups
addr16
mov
push
sbb
mov
mov
mov
cs
cli
mov
cmps
outs
add
fistp
fcomp
(bad)
dec
addr16
outs
daa
pop
sub
mov
jmp
push
out
shr
sahf
add
fbstp
mov
jo
cmp
sub
jns
stos
mov
and
(bad)
aas
xor
ds
cmp
lahf
pop
aaa
not
in
or
xchg
gs
idiv
test
push
out
aam
call
cmp
stos
push
sbb
popf
mov
xlat
(bad)
sub
call
mov
das
rcl
cld
(bad)
xchg
sbb
xor
daa
adc
out
dec
sub
inc
xlat
add
inc
mov
movs
mov
and
lahf
xchg
pop
ret
and
cmp
aas
retf
out
scas
rol
sar
cli
sub
test
xor
sub
cs
iret
std
or
mov
in
or
scas
fs
imul
push
fild
cmp
cmps
dec
adc
sbb
mov
push
push
vpcmpgtb
adc
add
test
ret
lahf
mov
stos
in
pop
dec
imul
outs
loop
(bad)
and
jge
pop
jo
imul
out
sub
jbe
in
daa
test
mov
(bad)
mov
stos
sahf
leave
popa
xor
clc
mov
pop
call
imul
mov
jno
pop
xor
imul
cld
jle
stos
daa
in
dec
daa
mov
inc
pusha
and
xor
and
mov
das
xchg
sub
outs
nop
mov
sub
mov
or
mov
dec
sahf
int
cmp
jl
(bad)
xchg
push
arpl
data16
aaa
scas
mov
comiss
test
pop
dec
lahf
ret
scas
sub
in
ds
mov
mov
jmp
mov
and
adc
(bad)
dec
outs
xchg
inc
mov
xchg
and
fidivr
pop
xchg
sub
stos
mov
lahf
enter
dec
lea
fisubr
xchg
sahf
jl
jg
jg
xchg
jae
(bad)
adc
(bad)
fist
dec
jge
sahf
mov
fisub
fld
outs
xchg
jg
mov
fisttp
mov
push
aas
retf
lods
adc
sub
mov
imul
daa
int
mov
aaa
stos
(bad)
lahf
cs
call
xor
std
loop
scas
lods
aaa
ins
sub
(bad)
fimul
jae
shl
jb
(bad)
daa
outs
(bad)
fstp
int3
or
leave
aaa
(bad)
mov
ins
dec
mov
jle
mov
scas
jae
dec
out
mov
mov
mov
test
js
jl
fcomip
sar
out
imul
ss
mov
outs
dec
push
jecxz
sahf
inc
outs
imul
cmps
out
xchg
pop
cmps
mov
xchg
sub
(bad)
scas
cmc
cmp
mov
lahf
push
push
jns
inc
dec
addr16
(bad)
es
js
jecxz
out
test
je
addr16
mov
icebp
repnz
inc
pop
sub
xchg
xchg
push
push
pushf
icebp
sub
lahf
cmp
es
lods
adc
je
scas
outs
fiadd
aas
scas
xchg
sbb
ds
ins
jmp
mov
mov
lds
cmp
dec
movs
push
sub
jnp
repnz
cmp
les
or
lea
dec
and
mov
cmp
adc
bound
inc
xchg
rcl
sahf
xor
mov
shl
or
sub
nop
cmp
stc
(bad)
inc
jmp
iret
dec
sub
mov
and
test
cmps
je
jo
cs
cmps
movs
es
and
lods
leave
call
imul
mov
outs
xor
rcr
clc
pop
pop
xor
and
(bad)
addr16
das
lahf
popf
jnp
mov
push
mov
cmps
scas
fadd
aaa
(bad)
fsubr
arpl
push
movs
xor
add
sub
jp
arpl
sahf
js
adc
ja
fidivr
jge
xor
push
push
xor
jae
idiv
mov
lds
sub
movsx
pop
js
push
cmp
and
sub
test
leave
cmovle
sub
lds
jbe
xchg
das
jg
popa
aaa
(bad)
cmps
aaa
fwait
pop
or
loop
(bad)
jns
loop
dec
and
sub
xchg
(bad)
call
sahf
stc
aas
or
xchg
xchg
stos
adc
fidivr
ins
jb
pop
aaa
data16
dec
xchg
cdq
imul
(bad)
fidiv
outs
and
das
sar
test
cmps
sub
push
push
fistp
mov
and
jg
in
mov
mov
mov
jbe
dec
and
pop
ins
push
imul
movs
inc
iret
mul
mov
adc
add
and
lea
sub
dec
fisttp
das
das
out
mov
sub
stos
cs
mov
daa
mov
push
push
lea
cmps
mov
pop
cmps
mov
out
pusha
lahf
sub
mov
adc
dec
lahf
mov
dec
lahf
pop
pop
popa
xor
sbb
xor
outs
test
adc
mov
je
jg
mov
(bad)
mov
jo
pop
jnp
lahf
cmp
mov
add
dec
lea
push
lea
jge
sub
es
sub
pop
pop
xor
jle
xor
mov
pop
and
jae
rcr
data16
in
pop
mov
dec
push
fwait
xchg
mov
xchg
mov
pop
out
sub
jmp
pop
sbb
(bad)
je
cmp
sub
outs
scas
test
fadd
add
out
in
fidiv
xor
pop
cmps
aas
pusha
mov
movs
js
neg
cmp
into
jg
jnp
sub
xor
mov
mov
fisub
repnz
mov
sub
lahf
ja
ror
nop
mov
jle
addr16
jb
cmp
stc
lock
jmp
lds
mov
cmc
daa
outs
or
adc
pop
mov
push
push
sub
sub
or
fwait
jl
emms
cmp
imul
mov
mov
jo
adc
cli
aas
scas
pop
xor
add
stos
inc
mov
call
cmp
sub
ret
div
loope
ins
lods
sub
xchg
mov
xor
fidiv
nop
add
cmp
mov
push
ret
outs
and
sub
mov
jp
sub
mov
aaa
cmp
xor
mov
push
xor
daa
push
mov
hlt
and
push
div
fimul
cmp
jmp
push
hlt
popa
stos
mov
out
and
mov
fucomp
(bad)
or
ins
sub
sub
pop
pop
xchg
adc
mov
pop
(bad)
aad
aaa
arpl
(bad)
cwde
popf
cmps
sahf
xor
shl
xor
push
ss
inc
xchg
cli
mov
lahf
pusha
lea
push
mov
mov
lea
jno
je
and
xor
mov
icebp
shr
add
xor
outs
mov
ins
test
inc
lock
mov
push
cmp
pop
add
fimul
inc
mov
call
add
push
jmp
adc
add
out
xchg
(bad)
push
rcl
ds
jge
movs
mov
xchg
ret
jg
push
sbb
sahf
inc
sub
mov
movs
cmps
dec
repnz
inc
ins
sahf
xlat
in
aad
aas
sub
into
stos
pop
or
outs
push
add
push
retf
xor
mov
imul
mov
mul
ss
and
out
mov
push
rol
aad
aaa
xchg
int3
test
loopne
dec
inc
dec
pop
mov
xchg
dec
xor
es
mov
push
xchg
retf
and
fisub
call
lea
pop
test
xchg
rcl
outs
ins
xchg
retf
pop
mov
ror
aas
sti
sbb
dec
inc
test
shr
scas
jae
outs
lods
rcr
outs
lea
das
(bad)
loop
lds
xchg
scas
inc
pop
mov
mov
cmc
fs
(bad)
sahf
outs
fistp
sub
jb
sbb
lods
and
cmp
mov
in
das
jle
ins
div
jmp
lahf
(bad)
ins
sbb
aaa
mov
jg
test
xchg
icebp
aaa
outs
out
add
(bad)
nop
lea
lods
out
cmps
es
es
and
push
pop
outs
(bad)
fmulp
and
or
(bad)
mov
pop
movs
xchg
repnz
retf
push
inc
xchg
sbb
mov
fbstp
jge
test
bound
jae
jae
cmp
scas
pop
lods
lea
mov
test
daa
inc
and
add
les
lea
dec
cmps
outs
sub
mov
xchg
cmp
retf
and
aam
mov
sti
adc
mov
gs
or
cmp
les
lds
jge
xchg
mul
data16
or
dec
sub
xchg
inc
jp
jmp
fimul
das
push
xchg
mov
or
aaa
in
outs
and
aas
scas
fbld
pop
cmp
mov
in
pop
jo
xor
pusha
lahf
arpl
jecxz
(bad)
call
call
stos
push
das
scas
inc
cmps
mov
adc
test
sub
pop
lahf
adc
mov
call
pop
mov
and
mov
std
add
jmp
mov
adc
pop
std
scas
das
sub
push
sub
cs
scas
pcmpeqw
icebp
ss
xor
xchg
ret
iret
pop
call
mov
hlt
adc
sub
outs
pop
movs
out
cmp
outs
lods
push
add
xchg
scas
jnp
and
lahf
push
push
mov
sub
adc
shr
lahf
js
in
(bad)
aas
add
addr16
sti
in
sub
sub
sar
mov
call
inc
xchg
mov
sub
arpl
(bad)
pop
(bad)
sar
daa
sub
push
sub
pusha
pop
and
sahf
adc
mov
dec
cmps
adc
push
sub
scas
inc
adc
mov
mov
(bad)
aas
cmps
add
sub
fisttp
xor
test
xor
loopne
aas
add
xlat
movs
aam
cmp
mov
pop
add
outs
jle
dec
daa
mov
ja
xchg
cs
addr16
cli
pop
mov
dec
jle
scas
mov
shl
aas
pusha
lea
in
in
retf
xchg
sti
inc
xchg
nop
pop
pop
adc
fdivr
sub
sbb
ds
or
mov
test
scas
inc
mov
push
mov
xlat
inc
mov
adc
xchg
mov
jne
stos
pop
leave
xor
cmp
imul
pop
cmps
or
cmp
jge
scas
cli
fst
mov
gs
xchg
movsx
es
outs
mov
aam
mov
pop
push
inc
ds
addr16
movs
push
test
lods
int
push
pop
mov
push
idiv
mov
adc
adc
ror
xlat
iret
and
aas
jg
or
mov
inc
(bad)
das
subps
loop
addr16
shl
mov
mov
and
mul
imul
fwait
clc
cs
or
cmp
push
push
inc
bound
xor
ret
out
ret
mov
ds
mov
jle
addr16
daa
outs
jne
dec
xchg
mov
sub
cmps
scas
inc
pop
push
(bad)
fwait
imul
or
push
pop
hlt
lods
ja
pop
ja
cs
push
push
imul
xor
jg
jns
ret
jg
mov
inc
sub
lock
adc
sub
mov
add
lahf
xchg
in
aaa
lahf
mov
push
cmp
xor
out
repz
cmp
rcr
pusha
outs
push
dec
or
adc
or
mov
(bad)
sti
mov
mov
rcr
sub
inc
jge
sub
xchg
cmps
ds
lods
loopne
jmp
lahf
mov
aam
pop
mov
pop
lahf
xchg
cmp
push
cs
mov
(bad)
ins
cmp
call
and
and
adc
lahf
in
repnz
xor
dec
lods
shl
popf
pop
int3
inc
aas
fsubp
jg
cmc
data16
das
sbb
xor
cmp
sbb
hlt
cmp
sub
fiadd
scas
push
movs
push
in
jmp
out
in
movs
dec
mov
push
cmp
sub
xchg
or
outs
mov
mov
pusha
dec
jecxz
mov
or
rcl
dec
pop
mov
mov
rol
loop
push
out
cmps
out
and
dec
ja
add
or
cwde
(bad)
adc
jne
adc
(bad)
stos
iret
mov
mov
or
jl
cmps
stos
retf
imul
sahf
fldenv
sbb
lea
(bad)
dec
or
xor
mov
push
push
ins
pop
sbb
inc
daa
lods
sti
mov
inc
stos
sub
jno
xor
js
sub
sbb
retf
das
sti
(bad)
in
aad
pop
scas
adc
mov
clc
cmp
inc
mov
push
pop
xor
in
adc
inc
fidivr
mov
pop
cs
shl
pop
dec
add
mov
fisub
mov
adc
add
ds
lods
jb
cmps
hlt
sbb
jbe
arpl
repnz
push
sbb
in
jge
cmps
dec
and
stos
lods
cmps
adc
push
xchg
push
mov
or
mov
sub
xor
mov
out
out
(bad)
sub
cs
clc
movs
adc
or
out
js
lods
daa
icebp
pop
mov
fcomp
scas
imul
or
xadd
and
loope
dec
inc
jnp
sub
aas
repnz
div
test
outs
jg
test
adc
mov
(bad)
xor
mov
repnz
(bad)
(bad)
iret
mov
sub
pop
dec
lods
scas
sub
and
push
nop
lods
retf
cmp
(bad)
imul
rcl
cmp
mov
pand
out
lahf
cld
fidivr
push
das
(bad)
mov
jmp
pop
jmp
cmps
out
mov
dec
push
jl
push
outs
inc
cmp
sub
mov
daa
movaps
jge
and
or
sub
aas
rcr
mov
mov
rol
imul
mov
dec
addr16
mov
je
(bad)
push
dec
scas
xlat
mov
in
mov
mov
fidivr
imul
outs
ficom
cmps
jno
fstp
(bad)
idiv
data16
pop
add
sub
mov
or
loop
ret
call
out
movs
mov
cmp
dec
push
push
and
and
repnz
lods
mov
mov
push
mov
fimul
les
ror
stos
sub
push
jle
(bad)
dec
push
add
cs
stos
imul
call
mov
aas
and
mov
jae
shl
dec
xor
lds
fisubr
xchg
lea
mov
nop
stos
ret
jne
(bad)
pop
pop
cli
mov
cmp
sub
movs
fild
in
outs
aad
sub
pop
jl
sub
lods
inc
inc
mul
pop
lahf
push
pop
lods
sbb
sbb
xor
ret
das
mov
jnp
dec
repnz
inc
dec
sub
psrad
imul
mov
xchg
das
addr16
mov
dec
lahf
inc
pop
add
and
xor
mov
xchg
mov
ja
mov
jp
sub
cmp
mov
dec
sbb
pop
test
cmps
mov
cmp
jmp
les
outs
cmps
or
push
popa
icebp
outs
pop
arpl
pop
xor
stos
fwait
xor
daa
es
and
mov
mov
jae
or
fimul
cmp
xor
dec
aas
outs
pop
inc
outs
mov
data16
es
xor
cmp
or
push
pop
cmps
leave
outs
sub
ror
aad
and
cmp
xor
mov
jmp
mov
push
fadd
inc
pusha
cs
rcl
mov
int3
mov
stos
mov
cmp
rcr
lds
mov
push
pop
or
addr16
cs
pop
dec
xor
test
jnp
adc
cmp
cwde
sbb
sub
outs
add
mov
cmp
xchg
push
mov
test
push
jmp
shl
jmp
mov
lods
retf
inc
mov
pop
inc
movs
retf
or
mov
xchg
aam
icebp
(bad)
outs
idiv
iret
pop
lea
mov
lea
cmps
xor
lods
ss
pop
sub
jae
movs
mov
cmp
(bad)
or
mov
and
mov
addr16
push
mov
stc
sahf
call
daa
fisubr
sub
mov
xchg
adc
xchg
jne
xchg
xchg
movs
in
mov
cmp
movs
and
xchg
addr16
adc
sbb
rep
adc
jno
pop
mov
pop
or
cmp
lods
hlt
cs
pop
aas
xchg
mov
addr16
call
hlt
or
or
mov
mov
jg
or
je
outs
jg
sub
mov
cmps
jnp
ds
mov
scas
jnp
xchg
jp
scas
scas
mov
or
cmp
mov
mov
push
es
cmps
cmc
lock
mov
ins
inc
std
in
cli
jnp
pusha
mov
xor
and
(bad)
cli
stos
cli
imul
movs
inc
push
jl
cmps
int3
sub
pop
push
scas
and
sti
out
mov
outs
pop
jnp
ins
outs
cmps
push
imul
out
xchg
arpl
sub
cmp
and
dec
out
not
dec
push
sub
scas
mov
add
sbb
cmp
mov
sub
sub
sbb
mov
daa
sub
ds
inc
mov
mov
xchg
dec
cmp
mov
dec
pushf
ja
(bad)
ja
pop
enter
aas
sub
imul
mov
sbb
xchg
pop
xor
outs
stc
aaa
call
or
mov
sub
(bad)
xchg
add
es
mov
mov
adc
std
add
shl
mov
inc
movs
ja
push
cmps
dec
xor
push
adc
mov
mul
fldlg2
scas
(bad)
aaa
scas
and
fild
push
mov
or
sti
std
inc
fimul
das
lahf
jbe
and
cmps
cmps
dec
pop
je
lods
cmps
call
cmps
enter
jle
popa
xchg
jmp
scas
daa
(bad)
mov
push
(bad)
mov
inc
mov
popa
jl
mov
loop
lock
(bad)
shl
ficom
push
paddsw
aaa
addr16
scas
ret
xchg
mov
icebp
push
xchg
jle
mov
inc
cmp
push
stos
push
daa
sub
fcom
jae
cmps
mov
push
scas
and
sbb
stos
in
jno
and
fidiv
imul
das
and
dec
in
addr16
imul
adc
mov
cmp
adc
pop
add
push
mov
(bad)
outs
push
aas
or
in
mov
push
dec
mov
jge
movs
test
push
loopne
jmp
das
cs
xor
fisttp
ud0
cmp
mov
sub
cmps
scas
mov
cmps
pop
push
dec
cs
nop
dec
pusha
dec
not
xchg
and
mov
pop
cmp
movs
cmp
xchg
std
outs
imul
int
mov
sbb
repnz
inc
sub
jnp
inc
loope
mov
outs
lahf
icebp
ja
imul
push
mov
pop
cmovnp
push
in
mov
sbb
outs
xor
jb
sbb
stos
inc
retf
cmp
cmc
es
sar
add
xor
stos
push
lods
pushf
inc
daa
cld
fiadd
dec
mov
jg
push
enter
test
cmp
xchg
lods
cmp
in
cmp
shl
in
mov
or
adc
mov
das
pop
inc
dec
adc
fwait
out
fidivr
out
mov
sub
pop
aas
cmps
mov
sbb
jg
mov
adc
call
mov
lahf
cwde
lea
xor
pop
sahf
movs
cmc
outs
lods
or
cmps
int
inc
addr16
push
mov
stc
xor
push
ds
test
sbb
(bad)
je
xor
lds
ja
cmp
mov
push
or
adc
(bad)
jae
xchg
in
mov
ret
test
xchg
call
mov
jg
mov
mov
test
ficom
mov
cmps
outs
jg
adc
mov
es
jnp
jb
sub
push
(bad)
sub
pop
mov
aas
sbb
or
jg
lea
sub
aas
faddp
xor
mov
mov
push
lea
dec
cmp
das
xor
sbb
pop
lds
popa
test
sub
out
(bad)
pop
push
jmp
pop
and
shl
movs
adc
pop
jge
bswap
dec
sub
sub
mov
jge
ins
daa
xor
fldcw
xor
mov
ja
dec
outs
setl
outs
imul
faddp
cmp
cmp
not
push
pop
lods
fist
popf
mov
fild
stos
or
ins
outs
je
retf
mov
xor
and
xchg
aas
mov
adc
mov
(bad)
aaa
mov
popa
pop
jne
mov
mov
jb
lods
jg
movs
mov
daa
mov
inc
fimul
cmc
push
inc
lods
cmp
pop
js
xor
lahf
push
add
jg
aad
das
or
mov
sbb
outs
sub
sub
xor
push
sbb
aam
rol
mov
mov
outs
retf
(bad)
sbb
jne
es
pop
pop
imul
mov
jmp
push
or
mov
xchg
ins
loop
stos
pop
loope
push
out
daa
dec
cmps
mul
out
test
(bad)
(bad)
jbe
daa
push
xlat
xor
xor
enter
jno
scas
push
(bad)
jb
jg
lahf
jo
out
popf
stos
lods
pop
xor
xor
mov
jg
aas
and
xor
loop
push
or
xor
mov
test
push
scas
lahf
xchg
mov
mov
jmp
adc
cmp
aas
aas
cmps
mov
bound
gs
mov
fmul
fiadd
mov
scas
pop
test
aaa
imul
mov
push
test
mov
inc
cmps
sbb
fdivr
xchg
mov
mov
mov
imul
inc
push
and
sub
cmp
cwde
gs
jae
fisubr
cmp
sbb
rcl
imul
mov
jae
dec
xor
dec
jp
outs
mov
xchg
test
fisub
ror
xchg
jle
mov
dec
scas
(bad)
arpl
idiv
test
loop
lods
pop
in
sahf
xor
mov
cmp
mov
mov
push
jl
mov
pop
dec
lock
(bad)
sub
sub
inc
ret
out
fwait
mov
cmp
or
sub
push
jb
pop
out
push
mov
jg
es
push
aas
mov
lahf
push
inc
in
mov
jmp
and
test
inc
sub
mov
jmp
jno
jmp
(bad)
mov
jle
aas
imul
scas
int3
lock
das
mov
inc
je
lods
jg
adc
sahf
mov
jae
jge
mov
aam
sub
inc
or
loop
push
cmp
(bad)
stos
sbb
or
fisubr
(bad)
mov
mov
aaa
jl
inc
jg
xor
pusha
ins
outs
mov
inc
movs
rcl
cmc
dec
and
ss
scas
jo
pop
lsl
mov
lods
dec
xor
adc
adc
xor
xchg
pop
pop
mov
aad
or
daa
aaa
std
or
aas
add
pop
sub
pusha
aas
pop
popa
xor
pop
inc
es
neg
jno
lds
sub
data16
mov
inc
or
call
sbb
or
jmp
inc
jo
add
jae
cmps
lea
sbb
scas
add
push
call
les
push
mov
data16
pop
inc
in
aas
ret
in
xchg
scas
and
movs
(bad)
pop
loop
nop
in
outs
mov
add
addr16
sub
lahf
mov
push
aaa
cld
pop
sti
dec
mov
shr
aas
cli
mov
adc
out
mov
dec
stos
pop
jnp
jmp
fmul
shr
mov
or
mul
pop
out
in
stos
mov
pop
bound
mov
in
aam
cmp
mov
xor
test
mov
cmp
rcr
jl
sbb
lahf
dec
or
adc
mov
jmp
pop
or
call
popf
in
test
scas
dec
xor
xor
mov
jno
pushf
movs
imul
out
xor
pop
xor
mov
xchg
repnz
aam
arpl
dec
push
ret
movs
les
or
cs
ds
dec
outs
mov
mov
bound
pop
je
or
daa
push
mov
pop
outs
cmp
aaa
or
xor
push
(bad)
jb
add
dec
daa
sbb
aas
(bad)
pushf
cmp
das
cmps
pop
(bad)
mov
adc
movs
cmps
and
jge
ja
scas
xor
cmps
mov
sub
jl
inc
outs
cmp
and
idiv
cmps
stos
ja
jne
in
adc
(bad)
imul
lahf
sbb
lahf
aad
ss
push
fistp
jmp
cs
mov
scas
mov
mov
mov
test
cmp
out
ret
mov
push
shl
push
outs
cld
scas
mov
outs
fisttp
sub
retf
outs
addr16
cmp
aaa
aas
mov
sti
mov
sub
in
(bad)
xor
pusha
adc
stos
dec
add
pop
inc
(bad)
sub
pop
and
jnp
jne
add
dec
in
xor
sub
cld
jg
sub
mov
push
mul
jae
and
jl
adc
cdq
pop
mov
scas
ret
adc
(bad)
loop
adc
dec
adc
sub
add
test
(bad)
arpl
aas
mov
daa
sub
sub
add
pop
mov
cmps
movs
add
outs
scas
and
icebp
and
sbb
cmp
das
pop
jbe
imul
push
sub
mov
call
imul
sub
movs
in
cli
aaa
jae
les
jmp
push
ficomp
xor
aas
aaa
ror
cdq
mov
inc
jl
cs
ja
mov
jae
aad
aas
stos
adc
cs
inc
scas
mov
cmp
ss
push
pop
sbb
sub
jge
dec
stos
jmp
mov
mov
cmps
xchg
leave
cmp
stos
adc
sbb
jmp
mov
push
fnsave
cmp
add
push
lahf
movs
push
sahf
adc
dec
repz
scas
sub
push
fwait
das
xor
(bad)
fisttp
aas
or
sub
lock
cs
cwde
ret
rol
xchg
pushf
(bad)
cs
movs
xor
popw
mov
add
jg
xor
ja
mov
test
ins
sbb
xor
push
cmps
rcl
(bad)
cmp
mov
int
not
stos
mov
xor
and
cmp
scas
(bad)
jge
sub
das
sub
push
test
ret
pop
push
pop
dec
jae
xchg
es
pop
mov
pop
sub
fisubr
mov
sti
sbb
and
fild
pop
adc
jmp
loop
imul
or
inc
xor
(bad)
xchg
mov
cmp
(bad)
jnp
ss
cli
xchg
sub
lea
pusha
jnp
cli
lea
lahf
fdiv
sbb
dec
in
and
lea
mov
mov
icebp
mov
gs
adc
fidivr
mov
push
mov
stc
daa
mov
jle
push
popa
or
mov
bound
ficom
jg
jle
push
mov
lods
cmp
cmp
dec
(bad)
push
xor
mov
sub
mov
call
cmp
jbe
test
xchg
fdivrp
mov
mov
call
cwde
test
stos
into
or
xchg
mov
xchg
loop
shl
lahf
pop
mov
or
ja
mov
mov
mov
xor
dec
ins
cs
xchg
ret
aas
add
sub
mov
popa
xlat
in
cmp
gs
addr16
addr16
(bad)
push
mov
mov
inc
push
dec
pop
outs
cmps
(bad)
sub
stos
addr16
xor
mov
mov
daa
not
pop
pop
mov
sub
cmp
and
(bad)
aas
scas
fs
movs
mov
mov
mov
repnz
mov
cmps
lds
clc
xchg
xor
scas
add
mov
int3
aad
(bad)
push
add
outs
push
mov
in
xlat
lahf
je
out
push
mov
push
adc
out
push
enter
jge
test
fsubrp
mov
xchg
cld
mov
and
sbb
pop
outs
mov
pop
or
retf
aaa
gs
(bad)
in
mov
sub
push
jge
retf
or
call
cmp
aaa
dec
mov
mov
and
clc
push
jmp
pusha
add
inc
pop
(bad)
fld
rcr
cld
and
movs
js
iret
fimul
inc
xchg
cmc
scas
stos
sub
sub
rcl
je
adc
pop
dec
sub
shl
jg
mov
or
mov
outs
dec
ins
hlt
daa
bound
mov
push
mov
jg
mov
cld
mov
dec
jne
add
bound
cmps
ins
ret
aas
leave
dec
adc
jmp
mov
pop
aas
loop
inc
mov
xor
mov
(bad)
mov
mov
add
jecxz
inc
out
or
dec
inc
daa
nop
mov
cwde
int
and
xor
push
sahf
mov
add
xchg
lods
dec
xacquire
pop
push
movs
adc
lahf
je
loope
cwde
retf
shl
aas
dec
mov
stos
adc
outs
add
aaa
scas
les
aaa
lods
daa
inc
push
inc
mov
pop
ret
mul
push
mov
mov
aaa
xchg
fcomp
neg
pop
or
sbb
cdq
pusha
popf
cmps
xchg
jmp
(bad)
xchg
inc
push
xlat
dec
fcmovnu
mov
ds
out
jnp
cmps
xor
sub
push
cmps
dec
xchg
dec
mov
aas
(bad)
(bad)
out
aaa
popa
sahf
(bad)
inc
imul
mov
push
jne
popa
loope
jae
aaa
pushf
xchg
sbb
sti
push
mov
push
mov
pop
xchg
xor
rcl
push
inc
out
scas
retf
sub
mov
(bad)
addr16
aaa
sub
lods
jle
jge
cmps
imul
mov
xchg
lahf
cmp
ins
das
(bad)
stc
push
ret
pop
and
sub
ins
ret
fidivr
sahf
mov
stos
lock
sbb
mov
dec
repz
mov
jmp
bound
mov
add
imul
inc
int3
imul
mov
out
aas
(bad)
iret
icebp
imul
data16
dec
sar
pop
xor
sub
outs
enter
cmp
ret
jg
lahf
xchg
mov
aaa
cmp
movs
mov
call
sbb
test
jp
out
sub
mov
mov
cmp
loope
fisttp
stos
inc
cmps
mov
ja
callw
je
push
pop
xor
stos
mov
cwde
imul
sbb
inc
scas
mov
lahf
popa
pop
sahf
fnstcw
lahf
data16
scas
mov
stos
mov
xchg
into
sbb
pop
lea
pusha
pop
pop
sub
or
xchg
retf
push
pop
mov
mov
(bad)
fnstenv
xor
arpl
in
lahf
inc
lea
movs
loope
cld
dec
or
pop
push
std
outs
dec
inc
xlat
fldenv
push
dec
popa
fidivr
dec
syscall
ret
out
fcmovbe
adc
mov
aaa
daa
or
leave
(bad)
(bad)
mov
cmps
push
sub
cmp
lods
pop
mov
shr
mov
push
fld
mov
ds
arpl
lods
dec
icebp
or
adc
in
imul
add
mov
lahf
mov
adc
mov
fs
data16
lahf
pop
scas
push
pop
cmp
ret
adc
jnp
stos
(bad)
rcr
(bad)
in
aad
addr16
cmps
dec
mov
jnp
mov
and
movs
mov
cmps
cmc
(bad)
cmp
pop
das
xchg
mov
shl
mov
jne
mov
rep
scas
sbb
pop
(bad)
xor
fcmove
mov
int3
ret
popa
push
cmps
cmp
mov
dec
mul
dec
nop
outs
jmp
jp
sub
ret
pop
cs
aaa
mov
inc
and
je
sub
xchg
mov
pop
xchg
(bad)
push
cmc
push
add
outs
sub
out
leave
push
es
jbe
stos
xchg
xor
ret
mov
ja
dec
imul
inc
es
aas
inc
cmp
dec
mov
jmp
test
mov
pop
jmp
cmp
pop
inc
mov
push
stos
push
cmp
mov
jnp
adc
xchg
xor
in
lea
outs
fiadd
mov
sub
leave
inc
pop
mov
aad
cmp
push
push
mov
lods
push
in
cmps
(bad)
mov
jb
add
lods
rcr
pop
mov
ds
loop
(bad)
cs
sub
mov
pop
inc
(bad)
bound
push
in
in
push
daa
fiadd
sub
cs
xor
mov
test
mov
xor
loopne
aas
das
sbb
scas
xlat
lahf
push
jle
ret
outs
cmps
xor
add
aad
dec
mov
mov
jnp
leave
ins
scas
adc
outs
mov
out
or
in
imul
popa
neg
cmps
sahf
adc
mov
aaa
dec
sub
mov
daa
mov
jne
je
ins
xchg
push
inc
aam
lods
(bad)
es
and
outs
sbb
mov
imul
mov
inc
xor
call
inc
mov
ja
jmp
ret
sub
mov
fwait
mov
dec
sub
das
adc
icebp
adc
loop
int3
out
mov
dec
mov
push
out
(bad)
mov
jb
mov
es
sub
enter
mov
xchg
repz
sub
(bad)
(bad)
int
shl
jne
or
sub
jp
fiadd
(bad)
bswap
dec
sub
imul
and
pop
mov
fisttp
and
add
inc
push
addr16
cmp
js
imul
xor
(bad)
jmp
movs
fwait
mov
mov
je
sub
dec
pop
xchg
outs
mov
cmp
adc
sub
add
test
mov
fs
sahf
in
int3
ds
out
pop
mov
xor
add
pop
inc
sub
or
outs
stos
push
xchg
push
aaa
lods
add
je
inc
pop
sub
mov
mov
lock
outs
mov
outs
mov
imul
(bad)
pop
push
lahf
addr16
(bad)
mov
dec
pop
mov
paddsw
xor
mov
fidiv
ret
ja
sbb
outs
fidivr
das
add
das
lahf
ret
inc
push
movs
adc
jns
jbe
rcl
xchg
jnp
cmps
loope
xor
pop
push
mov
mov
dec
push
sub
mov
into
mov
addr16
jecxz
mov
cmp
ret
outs
retf
and
fmulp
and
leave
push
add
call
leave
sub
outs
inc
das
or
call
dec
jmp
xor
xchg
cmps
xor
adc
xor
cli
sahf
sbb
call
cmp
dec
leave
scas
fimul
dec
pop
jmp
jnp
sub
lods
inc
shr
ror
mov
lahf
das
(bad)
xlat
gs
cmp
inc
dec
retf
jbe
fidivr
mov
das
or
inc
ja
push
push
pop
xchg
addr16
daa
mov
xor
xor
xchg
cmp
lea
test
mov
test
leave
mov
sbb
xor
push
cmps
sar
adc
fldcw
test
sub
cmp
arpl
and
std
nop
sahf
fisub
(bad)
mov
(bad)
cs
icebp
adc
push
test
aas
ret
pop
sbb
cs
ins
mov
mov
push
mul
stos
(bad)
and
lahf
cmps
mov
shr
pop
mov
es
mov
pop
lds
(bad)
jnp
xchg
push
jo
sub
or
aaa
cmp
cmps
les
sub
mul
ins
sti
cmp
cli
imul
aas
jbe
xor
int
imul
lods
pop
or
pushf
scas
cmp
aas
sub
(bad)
mov
inc
shl
das
xor
test
or
push
call
adc
(bad)
fidiv
adc
clc
sbb
stc
mov
mov
lds
fwait
repnz
xchg
lods
in
sub
addr16
es
mov
jmp
mov
and
mov
jns
xchg
dec
cli
pop
lds
dec
sub
add
lea
imul
mov
out
lahf
pusha
adc
outs
add
arpl
fdivr
je
pop
pop
xchg
mov
fmul
pop
cs
xor
dec
dec
ds
lahf
aas
xchg
push
jle
cmps
(bad)
sti
ja
jnp
rcr
push
dec
mov
stos
dec
inc
cmp
pop
es
in
push
mov
nop
psrld
sub
fwait
aas
mov
inc
push
cmp
dec
outs
aaa
movs
imul
pop
repnz
out
das
cmp
fs
cmps
js
call
mov
outs
fisttp
ds
mov
xchg
adc
jae
or
push
test
cmp
or
scas
adc
scas
lea
cs
and
ret
into
dec
data16
mov
or
test
xchg
loop
test
pop
div
pop
fisub
fucomip
mov
and
pop
mov
mov
(bad)
icebp
cs
inc
push
inc
dec
xchg
fidivr
imul
push
pop
(bad)
lock
mov
push
mov
cmp
sar
not
sbb
cmp
mov
stos
jae
cmp
(bad)
mov
pop
in
stos
mov
mov
cmps
inc
sub
out
in
xchg
shr
dec
sbb
(bad)
and
cmc
repz
or
repnz
test
mov
out
push
dec
dec
cmp
sub
sbb
xor
jne
adc
and
or
fs
fidiv
sbb
(bad)
retf
mov
aas
mov
std
xchg
mov
jae
push
mov
jmp
mov
cmps
iret
cmp
adc
in
je
xor
and
imul
pop
jno
and
fsubr
mov
test
sbb
sub
xor
fldenv
(bad)
xcrypt-ecb
cmps
iret
cmps
sub
(bad)
test
pop
lods
fbstp
adc
in
aas
(bad)
or
les
pop
call
pusha
jmp
cmp
fwait
ret
jo
jecxz
mov
cmps
cli
std
dec
sub
jge
mov
dec
mul
arpl
jge
out
adc
lods
adc
cmps
xor
push
mov
pop
out
lea
mov
addr16
stos
and
test
xchg
aas
movs
ja
inc
xor
div
xchg
xchg
div
and
repnz
dec
lahf
xlat
sub
lods
or
pop
xchg
movs
dec
pop
xor
(bad)
sub
lock
add
(bad)
xchg
(bad)
cs
imul
ds
fs
adc
mov
test
sahf
xor
les
outs
aam
push
daa
pop
aaa
xchg
adc
das
xchg
mov
lea
cmps
(bad)
and
(bad)
aas
mov
pop
cld
out
movs
cmp
and
add
adc
cs
imul
fiadd
and
movs
gs
retf
es
dec
lahf
ficomp
(bad)
aas
adc
(bad)
and
and
mov
xlat
bnd
aaa
jl
scas
inc
xchg
mov
mov
retf
jb
arpl
js
cmp
mov
sub
scas
sub
icebp
xchg
mov
mov
aam
and
push
inc
pop
test
lods
shl
sahf
dec
adc
mov
cmp
into
inc
das
sub
sub
int3
test
ds
lds
addr16
lea
adc
lods
jnp
daa
scas
pusha
cwde
aad
jg
xor
push
mov
(bad)
dec
cmps
div
sub
in
and
mov
sub
ins
cmp
imul
imul
pushf
adc
jae
and
in
aas
dec
add
mov
pop
(bad)
mov
cld
jl
outs
ret
addr16
xlat
(bad)
wrmsr
popa
sbb
jnp
mov
int3
imul
mov
fisubr
imul
mov
and
daa
and
push
jg
mov
inc
dec
outs
sahf
out
sub
arpl
mov
rol
scas
sbb
dec
out
rcr
(bad)
sbb
ds
sub
retf
xchg
ror
mov
sbb
pmaxub
int
and
lods
jmp
aas
and
pushf
mov
aas
icebp
shr
outs
sub
xchg
test
in
addr16
es
mov
mov
popa
pop
lds
outs
lahf
mov
int
xchg
inc
ror
ja
mov
enter
mov
cmps
sbb
cmp
out
xor
jo
pop
and
imul
lahf
repz
dec
or
stos
icebp
sub
xchg
mov
dec
cmps
rcr
daa
fwait
xor
imul
jnp
cli
dec
mov
mov
sub
pop
pop
test
mov
stos
movs
xchg
fdivrp
xchg
cli
cmps
cdq
cmp
fdivp
push
rol
mul
mov
xchg
loop
mov
out
adc
inc
mov
retf
lea
mov
daa
int
sub
bswap
in
ss
adc
ficom
dec
or
cmps
mov
xchg
mov
sar
test
ds
aas
lods
stc
mov
or
dec
addr16
fisttp
js
ss
movs
pop
xlat
and
test
nop
sub
lea
ror
lods
dec
fidivr
push
clc
js
pop
jae
(bad)
mov
cmp
imul
out
div
push
dec
cmp
sub
sub
mov
dec
lods
cmps
ds
bt
imul
lahf
repz
ss
sub
shl
pshufw
jg
mov
cmp
aas
fsub
jo
lods
loop
jbe
scas
mov
test
cmp
dec
(bad)
and
fist
jmp
imul
mov
push
iret
sbb
int
daa
mov
cmp
mov
or
mov
out
fimul
outs
cmp
repnz
mov
shl
outs
pop
xor
fsub
jmp
leave
jg
arpl
retf
pop
out
adc
mov
not
xchg
inc
mov
dec
fild
out
sahf
sbb
cmp
(bad)
cmps
mov
xor
or
lahf
mov
cmps
xchg
std
sub
mov
loop
xlat
sub
inc
pop
jmp
cmps
mov
pop
xor
dec
jge
cmps
pop
push
jnp
mov
mov
es
fmulp
xchg
cmp
sub
loop
aas
mov
or
nop
mov
(bad)
lods
pop
and
xchg
pop
repz
xor
jmp
out
outs
popf
(bad)
sahf
inc
sub
aam
lods
mov
out
inc
ret
sahf
xor
or
test
xlat
push
mov
lahf
mov
pop
mov
lods
out
jnp
scas
or
and
jmp
sub
test
lds
dec
mov
out
fucomp
lahf
cmp
leave
fistp
and
(bad)
scas
inc
fsubr
mov
push
popa
hlt
mov
mov
cmp
fimul
jl
sub
adc
pop
dec
xchg
add
call
sub
xor
pop
loopne
mov
outs
fnstsw
jmp
jne
fidiv
inc
xchg
push
stos
cli
sti
(bad)
out
jnp
cli
jmp
and
das
ficom
sbb
mov
retf
and
pusha
mov
cmp
dec
mov
cmovbe
leave
lahf
push
xchg
and
mov
jbe
repnz
sbb
and
xchg
inc
xchg
mov
(bad)
xor
daa
cmovnp
rol
add
sub
sbb
sub
pop
inc
popa
xchg
das
pop
adc
loop
dec
pop
mov
adc
xchg
loopne
xor
nop
stos
retf
retf
mov
jg
inc
test
(bad)
push
sti
lahf
xor
imul
or
push
ins
scas
nop
mov
add
push
movs
dec
stos
jmp
xor
aas
mov
gs
cmps
lds
inc
dec
mov
mov
and
mov
push
and
mov
jmp
or
pop
scas
dec
outs
push
test
pop
xchg
cmp
(bad)
out
cmps
xchg
xor
inc
inc
retf
(bad)
movs
loope
addr16
or
stos
scas
cmps
jno
push
push
das
das
idiv
fidiv
outs
sbb
xchg
idiv
fbld
ds
movs
mov
stos
addr16
jg
cmp
idiv
add
cmps
aad
mov
pop
dec
cmps
jp
sub
(bad)
jb
cmps
push
pop
ret
cs
(bad)
shl
shl
pop
lods
xchg
mov
stos
sahf
fnstenv
pop
test
shl
or
and
mov
sahf
mov
sbb
ret
xlat
jnp
xchg
sub
int
cmps
push
mov
sbb
jle
add
dec
mov
and
mov
imul
(bad)
cli
ss
aaa
mov
sub
jmp
lods
xor
cmps
sub
imul
out
lea
clc
jl
pop
pusha
dec
imul
jne
out
stos
jae
retf
pop
ror
push
(bad)
sub
xchg
mov
out
sahf
fistp
in
(bad)
jp
or
xor
aam
stos
fwait
bound
outs
and
ss
sub
dec
dec
push
dec
dec
mov
call
xor
or
sbb
mov
(bad)
cmps
sub
xor
test
ret
xchg
mov
push
cmps
xor
push
lods
fiadd
lahf
lds
pop
out
fs
xlat
test
add
cmp
imul
movs
fwait
enter
movs
mov
aaa
lock
daa
lahf
mov
rol
jbe
mov
rep
jle
js
rcl
mov
cmps
leave
loope
mov
outs
shr
arpl
stos
in
add
cmps
fisub
(bad)
stos
jno
pusha
xor
(bad)
fldcw
jne
pop
pop
call
repz
arpl
(bad)
aas
sub
test
or
mov
pop
out
test
aad
jge
repnz
in
stos
cmp
outs
pop
test
rcl
retf
mov
add
mov
call
aaa
cmp
adc
(bad)
sub
add
popa
adc
cld
repnz
add
aaa
ret
sahf
(bad)
inc
lods
aas
mov
xchg
je
mov
mov
xchg
mov
sbb
bound
jg
stos
bswap
in
sbb
dec
(bad)
cmps
dec
xor
sub
pop
sub
pop
(bad)
xchg
mov
xor
xor
popf
dec
xchg
mov
ror
imul
aam
ja
lahf
xchg
add
dec
inc
mov
jno
push
xor
ja
hlt
xlat
xchg
jae
inc
jae
or
cs
jbe
addr16
aas
ins
pusha
stos
fdivrp
ret
imul
mov
fdiv
cmps
cmp
xor
xchg
inc
jmp
lahf
addr16
rol
jnp
sub
dec
add
and
sub
je
mov
or
push
ds
outs
arpl
inc
inc
test
jg
movs
daa
adc
push
in
xor
out
mov
push
mov
or
fisubr
xchg
mov
mov
cli
cmp
inc
ja
mov
out
mov
cmp
les
(bad)
lock
jle
loope
mov
in
pop
fidivr
sbb
cmp
adc
pusha
add
xor
mov
mov
cmp
add
mov
out
cmps
stc
scas
sub
push
test
(bad)
addr16
int
inc
daa
or
ins
test
clc
outs
ja
or
xor
aas
(bad)
loop
mov
mov
mov
ja
mov
pop
xchg
rcl
outs
mov
mov
aas
dec
aas
pop
aam
sub
mov
cmps
mov
or
sub
jg
outs
shl
mov
(bad)
test
xchg
jno
pop
add
mov
sub
test
adc
(bad)
aas
mov
daa
daa
or
pop
dec
adc
pop
pop
arpl
cmps
dec
sahf
imul
loop
loop
pop
gs
jg
retf
retf
lahf
das
and
xchg
icebp
popf
or
cmps
jnp
lds
retf
(bad)
xchg
mov
icebp
gs
data16
sbb
stos
mov
xchg
movs
adc
outs
stos
cs
sub
mov
outs
aaa
push
xlat
dec
push
dec
mov
mov
ror
jecxz
imul
adc
aas
inc
mov
sbb
cmps
adc
lea
inc
mov
movs
xchg
les
add
jmp
jnp
popa
sahf
shl
and
movs
test
cs
imul
and
push
xor
test
sub
sub
repz
movs
or
fisubr
imul
xor
es
mov
cmp
(bad)
inc
mov
sbb
dec
mov
das
imul
pop
cmps
aas
mov
mov
out
and
(bad)
in
mov
push
and
jb
adc
mov
dec
(bad)
out
daa
cmps
scas
xlat
je
scas
cmps
xchg
cmps
sub
aaa
stos
imul
dec
cwde
out
mov
adc
fs
mov
mov
test
and
nop
lahf
xor
pop
mov
pop
push
aas
mov
push
pop
jge
retf
mov
and
imul
in
js
shl
xor
xlat
aam
dec
cmp
pop
cwde
or
(bad)
in
mov
daa
cmp
das
shl
or
outs
cmps
pop
mov
and
ja
test
cmp
ret
repnz
cmps
in
mov
xor
ror
cs
xchg
xor
push
loope
ds
mov
xchg
fsub
daa
outs
mov
aam
stos
retf
stos
clc
addr16
jle
pop
out
test
data16
rcr
das
neg
xchg
arpl
sub
mov
fwait
or
xor
ja
(bad)
imul
std
xor
fiadd
mov
leave
stos
and
cmps
imul
js
sub
sub
mov
push
(bad)
adc
popa
mov
mov
stos
pusha
mov
ss
(bad)
jnp
mov
cli
mov
mov
retf
movs
ficomp
imul
mov
movs
pop
xor
cmc
jg
in
cmps
xchg
scas
cmps
out
ins
or
push
addr16
ins
mov
jbe
jmp
mov
lahf
cs
sbb
scas
lods
sub
outs
(bad)
pop
pop
outs
or
ror
and
cwde
mov
cmc
femms
push
in
push
sbb
arpl
sub
outs
push
aas
pop
and
ficomp
mov
mov
imul
xlat
xchg
and
pop
mov
add
in
push
push
icebp
lahf
sub
sti
fld
outs
inc
pop
adc
dec
into
repnz
outs
daa
fist
pop
js
push
cmp
cmps
mov
leave
rcl
aaa
pop
inc
sahf
mov
mov
imul
adc
mov
xchg
mov
mov
aas
aas
stos
mov
jo
or
(bad)
cli
bound
lods
out
xor
cmp
imul
mov
dec
fdivp
ss
mov
inc
fiadd
mov
mov
loop
(bad)
les
mov
punpckhbw
mov
bswap
lods
aas
outs
in
mov
mov
test
or
cli
cmps
adc
cmps
adc
or
aas
cmps
xchg
xor
aad
inc
sub
inc
rol
push
jbe
inc
mov
dec
cmps
imul
es
outs
stos
(bad)
jnp
sub
mov
cmps
in
xor
aad
stos
dec
fsubr
loop
jne
pop
lahf
das
xchg
fnstcw
sar
pusha
sub
mov
test
pop
aaa
ins
push
outs
mov
push
adc
ret
xchg
stc
jnp
ffree
adc
mov
add
ficomp
pop
das
in
lahf
not
pop
movs
add
inc
retf
sbb
fdivr
sub
pop
data16
xchg
xor
dec
mov
ins
xor
cmps
addr16
jo
sub
loop
sbb
es
xor
cli
xor
dec
mul
lahf
and
push
or
loop
cwde
pop
sub
pop
xchg
mov
(bad)
mov
pop
jmp
xchg
xchg
xor
in
mov
pop
dec
aaa
mov
dec
adc
in
cmp
mov
dec
jbe
fistp
arpl
mov
outs
outs
pushf
ss
out
movups
pop
mov
sub
add
cmps
mov
lock
xchg
aaa
sbb
mov
in
xchg
and
lods
mul
pop
and
ins
out
push
ja
mov
mov
loop
pop
push
(bad)
fild
loop
shr
mov
lods
push
jmp
stos
mov
inc
ret
lock
out
arpl
cs
punpcklbw
jae
loop
lahf
gs
mov
inc
daa
cmp
mov
cli
sbb
stos
sub
xchg
pusha
(bad)
dec
jg
xchg
or
dec
add
daa
mov
sahf
lahf
mov
es
in
adc
test
cmp
push
fisubr
dec
stos
and
dec
xor
addr16
scas
inc
movs
mov
mov
cmps
cmps
xor
outs
fld
iret
inc
call
xlat
out
(bad)
daa
lods
jb
mov
daa
cmps
je
ins
mov
jg
push
ins
daa
ins
xchg
sub
and
fidivr
adc
mov
inc
fldenv
(bad)
adc
fiadd
outs
mov
jmp
jmp
ret
dec
aaa
shr
test
movs
push
out
aam
ins
fnsave
mov
rcr
xchg
ja
jmp
retf
lahf
int3
pop
dec
inc
jne
cs
lahf
icebp
scas
add
xchg
and
mov
and
imul
or
mov
and
pop
cwde
mov
sub
btc
imul
mov
cmc
icebp
aas
mov
retf
inc
and
mov
push
push
mov
dec
jg
mov
retf
push
add
mov
xor
adc
addr16
sbb
sbb
sub
push
and
xrelease
push
xchg
push
in
(bad)
aad
pushf
jmp
xchg
jmp
loope
imul
xor
retf
cli
lea
outs
ss
xchg
mov
arpl
cmps
push
fsubr
sub
and
(bad)
mov
mov
clts
jecxz
sbb
jnp
dec
mov
mov
(bad)
in
test
push
and
not
(bad)
cmc
addr16
dec
sub
sbb
jbe
xor
retf
sub
push
outs
scas
push
xor
adc
ins
cli
mov
push
mov
adc
mov
jae
cmp
mov
jmp
outs
scas
mov
mov
outs
stos
sbb
call
clc
sub
xchg
xchg
int3
mov
lea
retf
xchg
(bad)
stos
out
mov
lods
lods
js
scas
pop
clc
das
mov
adc
cmps
(bad)
mov
adc
sub
fdiv
mov
pop
daa
movs
leave
sar
push
jl
push
jecxz
je
shr
dec
fdiv
call
push
imul
das
dec
sbb
xchg
retf
fild
pop
call
sbb
test
inc
lods
(bad)
in
and
add
sbb
mov
push
cmp
cmps
rol
jae
out
cmps
js
ds
sysret
leave
mov
mov
jge
fisub
ins
cli
sbb
fimul
inc
mov
mov
es
outs
cmp
inc
jmp
mov
mov
add
mov
out
imul
leave
or
daa
ins
sbb
imul
imul
cmp
mov
mov
jge
stc
(bad)
push
push
xchg
imul
and
or
cli
ss
sub
pop
adc
sub
sbb
cmps
repz
adc
jmp
frstpm(287
xor
enter
pop
pop
ins
mov
mov
out
outs
cwde
jmp
mov
cmp
outs
xchg
rol
pop
ds
ja
pop
in
or
xor
fs
scas
xchg
mov
in
inc
lods
or
hlt
aaa
(bad)
test
and
add
lidtd
stos
dec
dec
ja
das
mov
sahf
mov
pop
cmps
jb
xor
dec
test
xchg
scas
loop
movs
or
xchg
sub
rcr
sbb
test
dec
popa
(bad)
and
mov
pop
adc
add
test
mov
add
fcom
es
lea
jmp
div
dec
test
addr16
xor
and
es
mov
mov
jo
mov
int3
mov
fwait
bt
test
cmp
sub
add
jbe
mov
aas
fbld
add
push
sub
int
outs
loop
sbb
sahf
stos
shl
sub
xor
push
daa
aas
push
movs
sub
cli
outs
cmps
xchg
sub
mov
les
cs
adc
shr
aas
movs
std
push
push
mov
sbb
cli
sti
imul
fidiv
mov
mov
test
neg
idiv
in
cmps
popa
daa
ficom
cs
xchg
pop
mov
pop
push
outs
aam
aas
es
mov
sbb
rcl
push
(bad)
aaa
mov
mov
push
jae
aaa
mov
mov
sub
jae
jg
outs
fsubp
sahf
xor
jae
out
imul
mov
mov
pop
cmc
jmp
bound
mov
push
mov
cmp
lds
out
mov
imul
hlt
sub
cs
les
in
xsha256
cmps
shr
cmps
sbb
fidivr
push
int
inc
lea
rcl
cmc
xchg
xchg
ficom
mov
lahf
sub
and
fidiv
mov
mov
addr16
sub
or
sub
aas
sti
aas
ds
xchg
mov
mov
sar
rcl
fidiv
dec
cmps
adc
ss
sub
push
push
call
or
in
push
sbb
mov
xchg
pop
add
mov
push
and
xor
pop
arpl
adc
emms
xor
ss
fidivr
xchg
cmp
lods
push
sbb
sar
das
scas
test
mov
bound
xchg
xor
stos
imul
dec
outs
ficomp
(bad)
(bad)
sub
mov
daa
sub
add
lods
pop
ret
fwait
retf
or
aas
lods
(bad)
sub
ja
jne
aas
ins
mov
jae
cmp
out
push
bsr
adc
int
push
mov
out
(bad)
(bad)
movs
push
sbb
pop
aas
stos
dec
push
sub
ins
dec
jnp
sbb
mov
jnp
lods
cmp
lods
test
sub
cmps
(bad)
jo
sbb
das
movs
(bad)
fild
fidiv
mov
mov
and
rcr
out
and
inc
aaa
cs
clc
pusha
jge
rcr
jbe
arpl
div
fnstsw
(bad)
push
jae
fiadd
mov
mov
test
and
inc
cmps
inc
sbb
outs
lahf
push
cmp
push
xor
mov
jl
push
and
push
push
aaa
pop
lea
movs
dec
pop
dec
fld
mov
cmps
scas
(bad)
lods
cmp
mov
push
stos
fcmovb
into
mov
cmc
mov
(bad)
cli
sub
loope
ja
scas
cmp
xchg
outs
test
mov
es
pop
cmps
mov
sub
jmp
ins
cmps
mul
push
sbb
ja
push
outs
dec
mov
sbb
mov
xor
mov
(bad)
add
mov
mov
es
(bad)
sar
call
mov
pop
pop
data16
mov
push
mov
push
xor
pop
xlat
inc
jg
lahf
xor
dec
adc
mov
push
jae
scas
or
scas
orps
or
push
paddsw
imul
cmp
add
mov
xor
dec
pop
movs
addr16
xor
(bad)
push
push
sub
ret
in
es
jle
lods
jmp
pop
mov
stos
pop
std
pop
daa
imul
jg
retf
(bad)
sub
pop
daa
popa
xor
je
add
ja
or
add
scas
xor
inc
arpl
dec
shr
add
or
iret
sbb
xchg
sub
aam
stos
out
(bad)
(bad)
push
repnz
iret
xor
in
xor
mov
dec
add
scas
xor
sbb
lock
call
sub
dec
out
mov
jnp
pop
popa
ins
fiadd
add
(bad)
fild
and
lahf
fdiv
(bad)
cmp
(bad)
fdivp
cmp
sbb
out
jb
fild
mov
retf
dec
inc
mov
cmps
outs
add
sahf
loop
arpl
aas
mov
test
gs
or
movs
jne
or
aam
lods
cmp
jne
mov
and
dec
movs
cmp
xchg
inc
pop
cld
pop
add
in
scas
mov
fistp
aas
aas
cs
xor
and
sub
pop
add
jmp
add
inc
lahf
xchg
out
pop
pop
pop
pop
pop
sub
cmps
add
aam
mov
(bad)
push
pop
sbb
xchg
mov
outs
mov
or
mov
cli
or
sub
xor
cmp
scas
pop
jmp
sbb
aas
movs
aam
aaa
cmp
cmps
lock
leave
cmp
fisub
test
(bad)
loop
mov
ins
mov
not
push
imul
icebp
lea
mov
mov
sub
jae
cmps
cmps
addr16
sub
add
fstp
jne
aas
std
xchg
imul
inc
xor
sub
jb
ret
test
pusha
xor
fisub
fwait
mov
scas
mov
ss
cmp
fisubr
adc
(bad)
aas
ins
cmp
stos
addr16
out
fistp
scas
pop
daa
lahf
xchg
mov
mov
loop
add
mov
mov
dec
jnp
or
cmps
cwde
pop
imul
movs
mov
popa
add
mov
pop
push
cs
sub
dec
pop
cmps
dec
push
push
jl
or
loop
jno
lea
imul
lahf
xchg
test
xchg
lods
(bad)
push
xor
and
in
(bad)
xor
scas
out
xchg
pop
mov
(bad)
jecxz
jnp
push
push
push
mov
sub
ror
mov
paddsw
icebp
into
fistp
daa
mov
push
ret
jo
test
xlat
out
(bad)
mov
cmps
jl
and
mov
outs
mov
sub
xchg
mov
sub
les
(bad)
xor
pusha
enter
sti
leave
out
xchg
mov
or
mov
or
shr
and
sahf
jne
mov
pop
pop
add
stos
lods
lods
sub
movs
pop
xchg
inc
pop
cmc
mov
cdq
cwde
imul
fadd
outs
gs
push
scas
inc
test
ins
inc
adc
xor
cmps
sti
add
sub
fadd
dec
or
cmp
repnz
int
pop
test
scas
addr16
add
jne
rsqrtps
daa
xchg
aaa
mov
sbb
dec
mov
ret
data16
jmp
icebp
mov
div
je
imul
rcr
dec
push
mov
adc
mov
ror
idiv
jo
jg
or
adc
add
ret
stc
sti
pop
stos
aaa
sbb
pop
aad
xchg
sub
cmp
mov
repz
lock
xlat
adc
outs
inc
pop
stos
int3
or
in
jae
ror
sbb
(bad)
mov
(bad)
fistp
cmp
call
xor
pop
pop
ss
mov
xchg
daa
loop
aas
iret
and
mov
pop
pop
fnsave
mov
lods
pop
inc
popf
jp
mov
xor
stos
mov
and
and
cmps
xor
pop
and
loop
dec
fs
scas
cmps
call
movs
icebp
stos
pop
inc
out
lea
int
cmp
pop
mov
lods
xor
(bad)
jnp
mov
je
in
inc
bound
xor
hlt
out
jnp
jo
xor
cmp
sbb
pop
aas
push
mov
fcmovne
mov
mov
stos
sahf
imul
mov
dec
imul
daa
std
daa
sub
das
retf
push
pop
fs
sbb
sbb
mov
out
movs
bound
mov
(bad)
xchg
ins
and
cmps
adc
sub
sub
mov
push
dec
repz
ret
lock
movaps
scas
jp
and
in
push
ror
fist
outs
inc
pop
popf
fisub
jmp
and
jno
inc
pmaddwd
lahf
dec
iret
packuswb
sbb
cmp
push
outs
fwait
(bad)
movs
cmp
inc
sbb
stos
aam
mov
pop
nop
in
das
and
das
jge
(bad)
fbld
add
scas
sub
mov
(bad)
cs
push
mov
stos
cmps
aam
inc
movs
pop
stc
push
sbb
push
and
stos
push
pop
and
xor
adc
adc
scas
jl
xor
mov
xchg
retf
mov
mov
dec
cmps
ins
clc
mov
cli
pop
and
(bad)
adc
ror
sub
push
inc
mov
cld
mov
add
das
sbb
(bad)
daa
and
mov
cs
sbb
rol
es
mov
sub
dec
xchg
mov
sbb
loope
sub
(bad)
(bad)
mov
fidiv
pop
push
pop
in
imul
outs
push
push
scas
inc
mov
aad
in
ja
xchg
dec
cwde
inc
push
mov
and
movs
out
adc
scas
mov
jp
mov
mov
scas
cs
mov
inc
ins
cld
imul
dec
(bad)
sahf
punpcklbw
sbb
aas
cmps
fucomip
xor
dec
fidiv
inc
outs
lea
mov
lea
or
(bad)
shr
push
adc
ins
add
and
push
lock
and
pop
lds
jg
mov
call
aaa
aad
cli
ds
lahf
xchg
sub
and
jg
cmps
mov
out
popa
mov
out
out
mov
scas
mov
aam
stos
jb
dec
push
cs
(bad)
addr16
mov
jne
nop
mov
cmp
sahf
xchg
outs
xor
inc
js
cmps
call
sbb
(bad)
mov
xchg
push
cmp
outs
addr16
fisubr
pop
and
mov
popa
nop/reserved
or
ret
add
outs
frstpm(287
mov
lahf
cmp
cmp
mov
int
mov
addr16
(bad)
je
and
(bad)
sbb
in
mov
jns
push
push
mov
fisttp
mov
lahf
repnz
lea
bound
mov
mov
cmp
lahf
loop
lods
leave
bound
ror
push
mov
and
test
test
repnz
aas
shr
inc
das
repnz
push
mov
jg
fild
cmovs
sub
jbe
jmp
jle
dec
cmps
or
mov
sbb
mov
jmp
mov
je
(bad)
xor
ds
ss
scas
fstp
dec
sbb
scas
mov
or
xor
xor
xor
mov
sub
mul
out
les
clc
jg
(bad)
div
dec
(bad)
mov
scas
dec
jle
dec
mov
jg
aad
lds
adc
jecxz
sub
jo
and
sub
sbb
jbe
xchg
aas
cwde
outs
xchg
in
outs
fwait
push
xor
test
sbb
jl
sar
mov
int3
sub
pop
adc
mov
adc
hlt
mov
dec
jmp
mov
mov
sbb
cmp
(bad)
inc
mov
and
and
pushf
jae
push
mov
retf
adc
inc
xchg
mov
dec
sahf
mov
xchg
sub
ins
xchg
scas
push
(bad)
je
sbb
scas
inc
adc
inc
dec
aaa
lahf
pop
pop
push
outs
mov
add
xchg
jg
sbb
mov
adc
scas
addr16
cmc
mov
and
dec
sub
pop
or
rol
mov
xor
and
scas
xchg
pop
lods
push
test
push
mov
out
mov
cmps
jae
mov
sbb
daa
push
popa
or
pmaddwd
test
push
push
stos
xor
xchg
(bad)
icebp
push
mov
sub
clc
loop
mov
push
pop
fs
mov
retf
mov
test
(bad)
jmp
mov
out
imul
mov
jae
ret
mov
xor
addr16
daa
rol
push
mov
lahf
mov
pop
out
hlt
pop
daa
ja
xchg
push
sub
xor
test
xor
cmp
mov
std
int3
and
cmps
sub
pop
xchg
mov
dec
cmp
sbb
outs
out
pusha
or
pop
(bad)
aas
add
outs
pop
ss
sub
pop
xchg
scas
push
sub
dec
add
and
pop
mov
mov
movs
jg
mov
leave
bsr
sbb
mov
pop
sbb
js
loop
mov
enter
(bad)
imul
mov
test
inc
retf
inc
mov
stc
mov
data16
sbb
add
add
stos
push
xchg
outs
mov
hlt
jnp
pop
adc
iret
mov
dec
or
mov
ja
dec
jno
push
jp
scas
movs
xchg
dec
je
jns
mov
cmp
fidiv
mov
mov
ins
ja
outs
mov
or
shl
fdivr
and
add
test
mov
add
push
or
js
imul
mov
sub
repnz
add
cmps
fisub
imul
cmps
aaa
jno
popa
clc
pop
packsswb
gs
lea
out
sbb
and
stos
inc
sbb
push
cli
mov
sbb
sbb
(bad)
and
mov
pop
sub
adc
inc
test
arpl
aam
scas
ja
push
outs
es
movs
fistp
in
addr16
scas
inc
cmp
out
push
and
ror
mov
jmp
mov
xor
sub
cmps
rol
out
push
int
or
fidivr
inc
mov
add
mov
adc
pop
or
outs
sub
dec
arpl
mov
or
pop
ret
popa
inc
loop
(bad)
addr16
jae
adc
mov
pusha
xchg
jne
int
int
xor
jae
ror
push
(bad)
iret
jg
daa
sub
out
sbb
push
cmps
jae
sub
dec
das
std
sti
xor
jle
fs
dec
jo
ins
push
cs
retf
pop
int
dec
and
ins
int
pop
xchg
outs
mov
mov
sub
test
dec
out
das
xchg
jg
jecxz
ret
lahf
xchg
cmp
or
jo
and
cmc
sbb
mov
rcl
ret
outs
adc
addr16
fwait
aas
cs
xchg
push
or
sbb
jg
jp
(bad)
test
inc
int3
cmp
stos
fwait
sub
add
ja
sub
mov
sub
imul
mov
sahf
test
inc
jecxz
cmps
cmp
xor
inc
push
sub
pop
fsubp
dec
dec
sub
jbe
cmps
cmps
mov
mov
pop
outs
mov
aas
push
fimul
jge
sbb
xor
adc
scas
push
lea
ja
aas
mov
xlat
mov
lahf
clc
xchg
(bad)
push
sub
sbb
xchg
stos
pusha
ret
stos
(bad)
or
add
jle
div
das
fs
lods
ja
pop
cmps
mov
jno
movs
outs
pop
mov
push
adc
mov
daa
fisubr
adc
mov
or
jge
jmp
pop
adc
dec
adc
mov
lahf
xor
gs
mov
pop
and
test
fnstenv
mov
mov
xchg
push
imul
mov
cmc
push
std
scas
cli
(bad)
mov
xchg
aas
cmps
popa
ror
fdiv
sahf
neg
bts
and
shr
fimul
sub
stos
dec
mov
stos
fimul
inc
nop
mov
cmp
push
loop
lahf
sub
adc
xchg
sbb
ins
dec
in
dec
ficomp
movs
popf
adc
pop
retf
lds
outs
gs
dec
es
fdivrp
jmp
ins
mov
xchg
pop
and
pop
dec
(bad)
aas
pusha
mov
popf
xor
cli
adc
cdq
ins
movs
retf
sub
mov
or
nop
xchg
into
stc
je
(bad)
mov
call
xor
jno
cmps
repz
dec
mov
push
sub
inc
ja
xor
es
push
fnsetpm(287
push
pop
add
stos
sahf
mov
hlt
cmc
movs
pop
xor
pop
mov
xchg
pop
mov
jmp
pop
dec
cmps
dec
not
xchg
into
packssdw
mov
pop
repz
dec
mov
addr16
das
repnz
sbb
shl
(bad)
ret
mov
sub
sahf
add
lods
xor
cmp
pop
sub
mov
(bad)
jnp
movs
call
aaa
ret
icebp
and
sar
xchg
sar
push
pusha
lea
pop
into
push
sub
cmps
push
mov
not
ret
enter
mov
cmps
stc
outs
outs
mov
(bad)
clc
packuswb
mov
rcl
or
sahf
dec
mov
stos
imul
jg
sahf
cmovno
lds
scas
jle
pop
cli
stos
cli
push
add
ins
or
sbb
sub
mov
and
cmp
sti
pop
or
ja
gs
pop
das
outs
int
push
jmp
xchg
div
gs
push
xor
pop
mov
mov
fldcw
ds
aas
fs
(bad)
jmp
pop
cmp
dec
and
(bad)
jae
pop
mov
pop
mov
inc
mov
inc
(bad)
loop
pushf
fisub
sbb
daa
leave
addr16
push
add
sub
leave
inc
add
jae
sub
pop
pop
push
lahf
mov
jg
mov
xor
xchg
cli
sub
adc
sbb
idiv
out
jecxz
mov
mov
jp
scas
mov
xchg
std
mov
pop
stos
inc
mov
aam
dec
push
aas
mov
mov
movs
aas
repz
adc
test
push
pop
lahf
ds
mov
(bad)
arpl
jo
sub
in
jmp
xchg
xchg
push
cmps
push
mov
add
outs
dec
mov
push
ret
movs
push
xchg
mov
stos
daa
out
scas
frstor
fisttp
add
inc
lahf
stos
xchg
popa
ficom
daa
out
shl
xor
pushf
test
ja
stos
jae
clc
shl
push
into
xor
sbb
popa
(bad)
in
lahf
xor
pop
imul
and
divps
sub
mul
sbb
lahf
cmps
ds
stc
or
addr16
ins
sub
inc
movs
and
push
repnz
(bad)
ja
adc
pop
push
push
lock
scas
stc
cmps
fisubr
cmps
mov
pop
mov
out
push
cmps
lahf
stos
jmp
arpl
xchg
xchg
movs
push
fisttp
pop
and
cli
jmp
cmps
aad
int
ret
push
push
cmp
inc
sbb
sub
dec
cmps
out
cmp
enter
outs
xor
xor
xlat
inc
xor
inc
scas
xchg
pop
and
mov
push
in
(bad)
push
add
int3
xchg
ret
sub
rol
ret
sub
push
shl
sahf
mov
(bad)
jl
sub
cld
xchg
scas
sbb
add
scas
push
sub
dec
loope
ins
mov
sbb
loop
fild
test
and
cld
mov
movs
cli
push
hlt
fwait
xor
and
mov
aas
cmp
pusha
sub
xor
rcr
sbb
cmps
or
inc
cmp
int
pop
and
xchg
mov
movzx
imul
mov
or
ins
sbb
cmp
gs
mov
pop
or
sub
arpl
mov
push
outs
repnz
imul
sbb
xor
or
inc
test
(bad)
adc
daa
sub
aas
movs
dec
pop
call
divps
ds
imul
or
mov
retf
xor
sbb
icebp
lahf
push
movs
and
jmp
cmp
aas
xchg
pusha
or
mov
ss
pop
addr16
into
in
mul
mov
(bad)
daa
mov
jno
jg
mov
shr
pop
stc
outs
outs
outs
imul
ja
out
sub
push
mov
mov
out
ds
add
addr16
mov
daa
sbb
outs
or
faddp
push
in
sahf
fadd
jle
sbb
mov
out
lds
inc
sub
sub
gs
jb
adc
cmps
mov
addr16
movntps
xchg
add
mov
cli
mov
xor
je
es
mov
sbb
cmps
scas
xchg
sub
sub
mov
rcr
outs
les
lods
jae
shl
je
fidivr
or
mov
movs
jp
push
mov
dec
cmp
dec
std
dec
daa
mov
ficom
mov
cmps
mov
arpl
popa
cmp
fdivp
outs
xchg
movs
imul
les
je
das
jb
dec
cmp
mov
mov
sub
pop
popf
mov
test
mov
das
dec
aam
daa
rol
sbb
xchg
pop
adc
scas
mov
outs
mov
push
arpl
add
or
(bad)
(bad)
jg
das
loop
xor
mov
push
inc
xchg
sbb
test
scas
mov
dec
sbb
outs
inc
sub
xchg
in
pop
ss
(bad)
mov
shl
addr16
scas
sbb
out
mov
movs
inc
jae
lahf
mov
outs
mov
(bad)
sahf
out
and
outs
in
addr16
fwait
arpl
or
sbb
dec
test
and
mov
ja
or
mov
xchg
mov
dec
aas
jae
movs
xlat
iret
sub
add
jg
mov
mov
inc
icebp
lahf
dec
ins
lds
jmp
cli
es
inc
mov
fidiv
push
sahf
jae
scas
xchg
fistp
call
xchg
in
cpuid
cmp
sub
inc
scas
push
test
pop
ret
nop
scas
test
out
sbb
cmp
das
push
sahf
or
pushf
pop
sub
outs
and
dec
push
vmread
dec
fisttp
ja
into
pop
call
xchg
lahf
dec
jo
daa
(bad)
xlat
xchg
xchg
pop
cmps
xchg
and
arpl
adc
lea
mov
pop
mov
pop
jge
(bad)
mov
or
imul
dec
stos
pop
push
dec
push
aaa
mov
cmps
(bad)
pop
pop
inc
(bad)
shl
mov
push
pusha
jae
jg
in
daa
jbe
mov
xchg
icebp
outs
sub
popa
call
and
shl
ja
jns
xchg
pop
outs
pop
sahf
or
and
(bad)
jmp
sub
mov
aas
daa
sbb
cmps
dec
adc
push
dec
lds
imul
lods
dec
push
mov
inc
stos
int3
arpl
dec
out
(bad)
xor
pop
aad
cwde
sahf
imul
in
sub
out
movs
pop
pop
mov
std
lahf
dec
dec
(bad)
shr
aas
mov
ds
loop
xor
sahf
dec
int
gs
cmps
dec
cmp
(bad)
jg
aaa
outs
(bad)
sahf
aas
sbb
push
cmp
test
das
fidivr
cmps
shl
iret
mul
leave
pop
(bad)
sub
mov
mov
movs
mov
mov
retf
mov
mov
jo
push
mov
adc
movs
mov
pusha
dec
mov
xor
add
dec
jge
and
cdq
sbb
retf
pusha
cwde
aas
jae
cld
jl
mov
sub
push
test
inc
xchg
cs
imul
gs
pop
sub
(bad)
mul
dec
es
rol
nop
jae
pop
ja
cli
adc
fisub
push
daa
mov
xchg
xor
mov
lods
shl
sub
mov
mov
mov
dec
aaa
lahf
adc
idiv
sbb
outs
mov
imul
pop
leave
jmp
(bad)
and
movs
adc
dec
scas
movs
jns
or
fisubr
loop
and
push
sahf
mov
pop
sub
pushf
fnsave
imul
sbb
xchg
pop
imul
sbb
mov
adc
fidiv
jmp
lea
mov
retf
mov
dec
mov
xchg
xor
mov
mov
fwait
inc
mov
(bad)
gs
add
(bad)
out
xchg
sub
push
pop
jno
pop
mov
iret
call
add
push
imul
pop
jae
mov
cmps
mov
ins
add
dec
out
aaa
mov
cmp
xor
fdivrp
stos
outs
mov
mov
pop
ds
mov
pop
loop
sub
outs
pop
sbb
and
add
sar
cmp
loope
mov
imul
lock
sahf
(bad)
sbb
je
sub
mov
sbb
daa
sbb
xor
mov
xchg
and
xor
and
imul
in
push
inc
push
jg
div
add
mov
mov
in
outs
nop
cmp
inc
aad
sub
sahf
jecxz
ret
mov
xchg
sbb
mov
gs
adc
test
xchg
push
out
cmp
arpl
fisub
adc
add
mov
mov
(bad)
mov
ins
and
bt
pop
arpl
cs
retf
psraw
mov
dec
pop
stos
push
sub
mov
jne
mov
sub
sub
fwait
adc
cmps
mov
mov
mov
mov
cmp
pushf
xlat
adc
sahf
aaa
and
cmc
and
frstor
mov
pop
out
inc
mov
push
rcl
in
cmc
push
and
je
or
mov
pop
adc
sub
(bad)
(bad)
out
fsubr
cmps
jmp
pop
retf
outs
dec
dec
test
sbb
shl
dec
cmp
sub
adc
xor
scas
adc
mov
movaps
les
adc
fs
mov
inc
mov
test
push
ja
das
sbb
or
xchg
into
mov
(bad)
arpl
lds
test
(bad)
jae
movs
and
dec
sahf
cmp
outs
ja
push
ret
mov
fst
std
mov
or
sar
mov
inc
sbb
lds
ins
aad
outs
(bad)
mov
push
inc
xor
pushf
push
or
xor
scas
cmps
shl
mov
es
push
and
sahf
jno
mov
add
jmp
in
xor
jle
arpl
scas
sbb
mov
fs
mov
sub
xor
inc
(bad)
in
sub
add
add
(bad)
cmps
push
inc
xor
cmp
scas
pop
pop
aaa
mov
cmps
jnp
sbb
das
sahf
jge
mov
adc
out
mov
cdq
sbb
xchg
out
add
fistp
push
cmps
mov
imul
sub
mov
mov
inc
in
push
or
mov
addr16
(bad)
sub
lea
cmp
jecxz
fcomip
(bad)
out
stos
shr
xor
push
cmp
fimul
cli
pop
fdivr
icebp
stos
adc
loop
jo
leave
pop
es
(bad)
pop
or
cli
mov
lea
(bad)
in
movs
push
or
scas
(bad)
fimul
mov
ja
(bad)
fadd
stc
xchg
jmp
vmread
push
imul
mov
adc
pop
or
cmps
mov
ss
(bad)
arpl
ins
daa
xor
sbb
and
or
icebp
dec
into
fucomip
sbb
xor
(bad)
inc
cmp
sub
jb
sub
aas
cmps
je
fnsave
cmp
mov
cmp
sub
loop
sbb
pop
arpl
cmps
jle
ins
adc
sti
aas
mov
mov
(bad)
add
scas
sub
(bad)
pop
jmp
mov
mov
xchg
mov
aas
cwde
add
mov
dec
mov
aaa
jp
sbb
mov
mov
outs
test
dec
inc
es
iret
cdq
jno
ja
cmp
ror
mov
shl
mov
movs
jb
sub
cmps
push
mov
fisub
addr16
mov
push
stos
outs
xchg
test
dec
mov
cmps
jmp
lahf
mov
inc
gs
stos
pop
fist
xor
push
lods
push
outs
cs
mov
repnz
cmp
sbb
mov
add
cmps
(bad)
sub
popa
dec
ret
in
nop
pop
push
stc
pop
mov
push
les
outs
cli
cs
dec
push
daa
mov
xor
dec
mov
push
aad
dec
inc
out
inc
sub
shr
inc
xor
aaa
outs
pop
mov
aaa
add
or
mov
push
popa
hlt
sub
xor
mov
in
xchg
jmp
mov
mov
test
pop
mov
lock
loop
std
push
cmp
pop
fcmove
jg
pusha
ins
repnz
mov
mov
es
out
imul
jae
ins
and
das
test
retf
in
mov
jge
pop
daa
stos
scas
sbb
aaa
or
(bad)
cmps
sub
outs
popa
dec
mov
imul
sub
rol
imul
sub
(bad)
sbb
sbb
xor
mov
mov
mov
pop
ins
jae
scas
in
aad
jle
psubq
sub
ror
mov
in
rol
(bad)
jne
sub
out
sub
lahf
test
jnp
jl
(bad)
cli
btc
aas
lahf
stos
shl
xchg
lock
scas
ds
add
enter
mov
scas
out
stc
sub
jmp
xor
xchg
pop
das
add
mov
dec
mov
loope
(bad)
scas
push
cmps
retf
sar
xchg
jge
mov
test
outs
or
in
jl
fsub
addr16
test
cmp
mov
adc
mov
test
das
pop
shr
xor
imul
jbe
dec
adc
sbb
dec
outs
push
adc
xor
or
loop
and
retf
dec
sub
xchg
jno
xchg
mov
outs
repnz
push
mov
lahf
loope
lods
mov
fdivrp
jg
mov
shr
jp
xchg
fld
mov
or
ja
jmp
mov
and
ins
frstor
sbb
mov
aam
jae
mul
int
xchg
inc
or
scas
imul
xchg
add
mov
nop
aaa
mov
dec
adc
mov
test
fisub
fdivrp
stc
adc
inc
inc
or
mov
cmp
jno
pop
mov
xchg
jmp
stos
sub
jno
outs
iret
cmp
dec
sbb
(bad)
xchg
xchg
out
jmp
and
stos
xor
sbb
inc
fild
out
(bad)
jmp
mov
scas
movs
push
dec
pop
mov
addr16
xchg
lods
push
das
popf
ret
or
xor
pop
push
mov
loop
fsub
jmp
add
fiadd
ja
mov
mov
ins
xchg
mov
mov
mov
stos
mov
ds
daa
xor
add
cmp
pop
cmps
cwde
shl
sub
out
mov
dec
xor
out
leave
sub
dec
mov
pop
cmc
mul
sahf
setg
mul
push
sub
cmps
aas
mov
out
adc
aam
scas
xor
or
mov
push
mov
sar
test
jnp
in
ds
mov
ins
jb
add
jnp
xchg
pusha
ds
ja
cmp
dec
lods
aaa
dec
mov
enter
andps
ss
xchg
cmps
shl
rol
in
pop
mov
jb
ins
ret
je
mul
mov
mov
xor
push
nop
scas
addr16
loop
inc
xchg
stos
jmp
ret
add
adc
icebp
cmp
mov
xchg
(bad)
lods
retf
jb
js
outs
jg
out
out
into
mov
fldcw
mov
out
outs
out
cmps
gs
aas
fdivr
(bad)
lods
in
sbb
ds
jmp
aam
fisub
in
std
aaa
mov
ficomp
sub
(bad)
imul
(bad)
lods
(bad)
cmp
aas
sbb
out
add
into
mov
aam
lahf
bound
outs
pop
out
xor
scas
in
fs
bnd
mov
cmps
pop
push
xor
jmp
and
es
cmps
add
test
dec
outs
imul
and
and
cmp
cli
push
les
outs
dec
cmps
iret
leave
inc
sub
aaa
shl
sahf
mov
xlat
aam
not
imul
mov
mov
mov
retf
iret
mov
cmps
mov
cs
xchg
xor
jnp
sbb
dec
cmps
mov
les
test
out
inc
cmp
sub
hlt
adc
addps
inc
mov
xor
fs
push
ret
outs
mov
pop
mov
push
cmp
pop
push
out
aas
pop
jp
jecxz
or
pop
leave
or
seta
sub
ret
ret
out
cmps
mov
inc
cmp
dec
sub
in
fsub
sub
xcrypt-cfb
cmps
cmps
aaa
xor
sub
adc
out
mov
push
iret
mov
mov
adc
lea
enter
mov
stos
outs
inc
xchg
adc
hlt
mov
in
cmps
push
sti
mov
hlt
xchg
das
sub
xor
stos
mov
out
cs
clc
sub
aas
jno
cmps
push
push
push
dec
imul
cmps
dec
jmp
sub
movzx
push
retf
arpl
mov
mov
scas
fdivrp
sub
repnz
pop
(bad)
out
lahf
js
sahf
push
in
aaa
xor
movs
out
cmp
dec
loop
or
das
lahf
jmp
and
mov
and
retf
jp
enter
imul
icebp
(bad)
pop
outs
je
ss
stos
sub
scas
out
in
pop
xor
mov
mov
sbb
aaa
mov
jne
rol
out
sar
mov
inc
push
mov
ret
push
cmp
pusha
sub
mov
(bad)
cmp
mov
adc
xor
scas
jnp
adc
xor
test
push
sar
in
lds
pop
dec
xor
jo
cmp
xor
mov
fst
(bad)
xlat
cwde
xchg
pop
aas
jae
sbb
pop
or
cmp
mov
(bad)
js
stos
pop
mov
das
pop
mov
fcomip
call
(bad)
call
mov
addr16
outs
addr16
mul
sub
jnp
gs
dec
cli
dec
mov
mov
push
test
jbe
inc
test
mov
dec
push
push
dec
fist
lods
xor
xchg
xor
mov
mov
cs
daa
xor
mov
xchg
dec
aad
push
push
aaa
arpl
adc
inc
mov
enter
movs
mov
clc
xchg
jg
bound
xor
xlat
sub
in
sub
aas
fs
aaa
cmps
push
jge
cli
mov
pop
rol
or
movs
rcl
mov
mov
cmps
pusha
in
dec
sub
fild
fidivr
aas
mov
aas
js
fiadd
inc
jg
das
cmps
outs
jmp
mov
loope
sbb
std
inc
es
pop
fdiv
xchg
jmp
push
xchg
movs
fld
mov
xor
neg
aas
mov
not
(bad)
xchg
pop
pop
dec
xor
fidiv
mov
int
dec
add
xor
jo
mov
fwait
or
push
aas
dec
loop
jae
imul
adc
not
sbb
jo
or
cmp
pop
jg
mov
test
cmp
cs
mov
adc
imul
xor
mov
push
outs
pop
fstp
sbb
nop/reserved
inc
fdivrp
leave
imul
cmps
mov
fcomp
in
mov
jae
and
out
adc
popa
arpl
stos
dec
div
sbb
mov
outs
(bad)
cmc
mov
sub
ror
mov
fbld
out
repnz
jl
and
(bad)
lds
fisubr
pop
adc
push
in
mov
test
cmp
test
popa
xchg
jmp
mov
movs
sub
lods
fidiv
inc
mov
dec
out
pop
sahf
jns
sub
ins
inc
fimul
js
out
jl
fisubr
push
adc
cmps
or
xchg
sub
dec
xchg
and
mov
dec
ror
out
stc
push
fsubrp
js
pop
push
outs
outs
sbb
xlat
aas
(bad)
aas
mov
inc
adc
jmp
dec
mov
gs
dec
lahf
adc
add
das
mov
cmp
mov
cmp
cmp
scas
cmp
dec
mov
inc
jl
or
mov
movs
addr16
cmps
rep
push
sub
push
cmp
mov
sahf
jb
xchg
fldenv
pop
cli
das
xor
ret
pop
sbb
and
(bad)
loope
fwait
mov
or
sbb
iret
adc
push
ret
(bad)
sbb
ret
daa
xchg
mov
mov
adc
dec
pop
outs
shl
jbe
out
xchg
dec
mov
leave
pop
cs
and
pop
scas
aaa
push
pop
ins
imul
fidivr
xchg
cwde
das
dec
lahf
push
push
ds
ss
js
jnp
loope
cld
cmps
pop
(bad)
push
sbb
(bad)
in
lahf
inc
iret
dec
scas
mov
stos
inc
aaa
shl
pop
mov
es
movzx
or
imul
mov
pop
ret
(bad)
cli
xor
aas
or
je
sub
xchg
mov
shl
sub
and
lods
cmps
push
mov
jmp
xchg
out
cmp
out
sahf
mov
push
sub
xor
mov
sub
xchg
and
(bad)
pop
jmp
mov
paddb
push
ja
inc
mov
lahf
xlat
mov
xchg
dec
add
mov
lods
pop
cmps
sbb
daa
sub
push
adc
push
and
mov
or
shl
test
ss
dec
bswap
fld
daa
test
xlat
arpl
sbb
fisub
fidivr
in
mov
pop
inc
inc
xor
repz
push
ja
push
inc
pop
in
popa
pop
cmp
jo
adc
jmp
dec
pop
call
test
inc
and
cmps
fld
dec
sub
push
rcl
daa
and
and
xchg
jmp
fs
cmps
sbb
pop
pop
adc
cs
sti
push
pushf
xchg
or
into
add
dec
jnp
xchg
sbb
push
pop
mov
push
adc
sub
(bad)
mov
mov
dec
mov
dec
dec
adc
test
fmul
test
js
ja
aas
retf
mov
pop
cmps
cmps
sub
and
sar
fs
mov
xchg
aas
sbb
pop
scas
rcl
mov
sbb
addr16
mov
sar
mov
push
popa
faddp
retf
dec
test
xor
cmp
outs
daa
shl
mov
xor
not
movs
data16
mov
or
sbb
and
cmp
push
inc
imul
mov
scas
inc
mov
pop
(bad)
mov
test
sysexit
and
movs
sbb
dec
push
or
mov
mov
popf
and
cmps
cs
jb
mov
aas
fs
sbb
mov
mov
cmp
xor
dec
lahf
xchg
fs
mov
or
les
daa
shr
xor
push
xchg
(bad)
cmp
dec
movs
inc
mov
cmps
pop
(bad)
mov
movs
test
test
cmovg
xor
mov
cmp
repnz
arpl
pop
dec
in
fsubp
mov
fidivr
out
fadd
(bad)
push
adc
nop
fidiv
lea
movs
out
call
xor
aaa
fs
popf
cdq
enter
jbe
pushf
or
cs
sub
xchg
cli
jmp
push
xor
cmp
scas
jne
inc
in
jmp
pop
outs
cmps
sbb
pop
lods
int
xor
mov
sbb
movs
fucomip
inc
icebp
jbe
test
mov
dec
cmps
and
cs
stos
xchg
mov
out
sbb
dec
pop
xchg
jge
das
sbb
repnz
shl
not
movs
idiv
daa
push
(bad)
mov
inc
mov
pop
inc
bound
mov
scas
sahf
out
push
popf
push
(bad)
xor
xlat
dec
jecxz
pusha
jl
ret
push
sub
dec
aaa
retf
iret
inc
stos
xchg
leave
mov
fs
fst
cmp
ror
sbb
das
cs
or
jmp
mov
stc
sub
jo
(bad)
or
push
imul
test
cmp
loope
sub
inc
adc
pop
scas
mov
rcr
call
je
cmovne
xchg
aam
ror
and
xor
push
jl
scas
mov
movs
cs
fnsave
sahf
dec
ins
repz
sub
int3
xchg
stos
inc
scas
push
xchg
in
add
xchg
and
mov
leave
mov
dec
nop
fwait
scas
cmps
and
jg
sbb
lea
xor
movs
mov
jae
popa
jle
sub
lea
call
sti
mov
mov
dec
dec
test
sub
sar
mov
xor
dec
outs
mov
mov
jg
or
ja
push
xchg
or
mov
sub
sub
retf
lods
push
(bad)
add
inc
mov
ret
scas
cmc
inc
fcmove
sbb
push
movzx
lea
jmp
test
ds
outs
lea
xchg
ror
pop
outs
dec
out
or
xchg
inc
(bad)
sbb
dec
mov
mov
inc
lods
stos
mov
scas
mov
mov
pop
jmp
das
sbb
jmp
outs
int3
sub
cmps
or
pop
mov
ss
sub
mov
rol
mov
in
mov
sbb
ds
popf
jno
pop
fidiv
rcl
popa
ret
adc
adc
es
adc
shr
neg
push
leave
js
outs
arpl
mov
xchg
stos
ja
sub
fsubr
or
jmp
arpl
ficom
(bad)
jg
lds
ins
aad
pop
mov
dec
out
shr
xchg
xchg
jp
in
test
mov
cmp
loop
mov
mov
add
mov
stos
ficom
dec
pop
outs
inc
test
mov
add
cmps
aad
sub
cmp
cmp
das
cmps
adc
mov
mov
cs
aam
mov
jo
sbb
mov
pusha
adc
and
stos
mov
sti
pop
pop
gs
and
out
dec
out
mov
stc
outs
xchg
arpl
pop
outs
mov
mov
pop
xchg
push
or
daa
push
xchg
cmp
jl
cmp
jp
vpslld
sub
(bad)
mov
mov
lods
and
dec
(bad)
mov
je
dec
ss
sub
out
sub
add
mov
jmp
push
stos
lea
retf
inc
outs
addr16
ins
lods
stos
mov
sub
sbb
mov
fcomp
and
out
lahf
or
stos
mov
rol
xchg
(bad)
cmps
scas
push
fisttp
mov
sbb
scas
push
daa
stos
ins
sahf
add
and
sub
sub
test
xor
mov
or
repz
and
jecxz
cmps
(bad)
mov
outs
push
mov
jmp
stos
pop
xor
adc
sbb
mov
scas
sub
lods
push
addr16
aaa
cmps
(bad)
fsubr
sbb
inc
push
xchg
daa
mov
adc
movs
adc
jno
retf
outs
dec
fisubr
push
jae
mov
pop
jle
jp
test
adc
mov
shr
aas
(bad)
pushf
addr16
sbb
icebp
or
(bad)
fwait
pusha
push
(bad)
jg
test
adc
retf
aas
cmps
xchg
sbb
cmps
jmp
outs
pop
jmp
sbb
aas
dec
sub
sbb
enter
ficom
dec
daa
out
jmp
sub
imul
pop
dec
sbb
stc
adc
mov
and
(bad)
jns
lahf
(bad)
rcr
test
mov
and
inc
outs
out
daa
daa
pop
inc
ja
pop
push
mov
push
(bad)
jg
adc
add
in
addr16
cwde
sub
mov
ins
mov
push
pop
jnp
(bad)
or
sahf
repnz
xor
(bad)
frstor
push
iret
and
and
push
loop
retf
in
push
pop
inc
je
out
ret
dec
sub
dec
icebp
push
daa
outs
cld
ss
fstp
out
push
xchg
inc
dec
mov
(bad)
xor
movzx
dec
or
(bad)
xchg
outs
push
push
fs
in
sar
test
mov
jecxz
mov
inc
push
bswap
stos
ror
fisub
pop
cmps
pop
sub
cmps
xchg
sti
mov
aad
(bad)
loop
inc
push
cs
mov
mov
outs
push
cmps
pop
mov
inc
mov
sub
xchg
aas
jg
arpl
push
out
mov
inc
daa
add
dec
movs
es
rol
xchg
sub
mov
std
sub
aas
add
scas
loop
cmp
stos
push
shr
sub
addr16
pop
lea
sub
das
push
outs
mov
cmps
mov
lahf
stos
imul
dec
loop
nop
cmp
scas
aas
pusha
mov
repnz
aaa
fwait
popa
outs
outs
and
pop
popa
rcl
fimul
lods
ja
stos
pop
push
cmp
push
push
scas
jae
inc
xor
mov
pop
sbb
addr16
cli
mov
scas
cmps
outs
xchg
sub
out
scas
xor
jbe
into
test
outs
mov
jg
lea
xor
pop
stos
rcl
dec
ins
cmps
cmp
shl
cmc
inc
dec
inc
inc
push
daa
outs
call
(bad)
lahf
sub
sub
mov
lods
xchg
ret
pop
push
or
aaa
mov
pushf
mov
mov
and
mov
sub
mov
add
xor
mov
sbb
stos
mov
pop
push
dec
add
push
pop
imul
xchg
leave
sbb
aas
mov
cmp
cmp
xchg
lahf
xchg
(bad)
fbld
cmps
cmp
aam
xchg
add
fst
retf
and
imul
inc
xchg
mov
sub
xor
retf
je
pop
xchg
lahf
cmp
sar
push
lock
cmps
mov
pop
test
xor
aas
cmps
mov
push
nop
outs
cmp
iret
inc
sub
add
cmp
push
inc
arpl
adc
in
in
pop
out
inc
ins
inc
dec
fs
push
test
mov
push
sbb
pop
jl
push
neg
push
stos
add
aas
jmp
cmps
sub
adc
sub
out
repnz
gs
ja
cmp
xchg
movs
sub
cmps
stos
cmps
jno
ja
and
outs
dec
or
add
inc
lahf
adc
xor
fwait
cmp
cmps
shl
test
outs
add
lahf
ja
jno
sub
mov
jae
add
ret
jo
sub
push
(bad)
fdivr
mov
mov
mov
lds
popa
addr16
inc
dec
xchg
setle
sbb
cmp
sbb
jp
mov
cwde
jnp
outs
jnp
mov
mov
lahf
dec
inc
xchg
jne
dec
in
mul
inc
mov
outs
mov
div
(bad)
xor
push
dec
ja
ins
fnstcw
cli
cmps
test
pop
inc
jecxz
ja
pop
repnz
(bad)
adc
lahf
pop
sbb
jle
loop
loope
call
inc
inc
stos
jnp
shr
jg
jb
and
mov
pop
inc
or
es
(bad)
lods
mov
jl
jnp
adc
adc
mov
and
out
and
mov
arpl
stos
inc
xchg
scas
nop
inc
lock
in
xchg
push
mul
daa
les
dec
cmps
daa
es
stc
sub
leave
mov
imul
fisub
jg
outs
xor
add
test
xor
lahf
out
fs
jg
sub
aas
ins
popa
lods
icebp
into
es
sbb
push
push
lahf
or
push
xlat
pop
fwait
jg
mov
fisttp
push
mov
mov
xchg
icebp
mov
pop
stos
dec
add
shl
xor
in
aaa
outs
xchg
mov
mov
out
xchg
mov
hlt
imul
(bad)
fmul
stc
jp
retf
mov
cmp
ds
dec
mov
and
cmp
pop
mov
cmp
jle
fiadd
cmps
imul
dec
or
pop
push
cmc
lahf
lock
and
pop
or
pop
leave
jo
xlat
sbb
imul
adc
dec
lahf
test
fs
mov
pusha
mov
fimul
push
out
jbe
movs
into
jp
sar
cmp
in
mov
ucomiss
adc
add
pop
movs
cmps
(bad)
and
mov
leave
cmp
inc
mov
aaa
fimul
jo
mul
retf
sbb
lods
dec
loope
cmp
in
or
push
xor
mov
cmp
inc
fstp
data16
ins
add
out
dec
imul
mov
pop
aaa
lahf
std
mov
mov
add
inc
mov
sub
sub
imul
scas
mov
retf
test
int3
or
imul
jb
xchg
push
push
pop
lods
outs
inc
mov
dec
bound
adc
jo
sub
inc
sbb
push
mov
mov
add
jg
aas
in
jecxz
cmps
test
dec
imul
sub
cmp
or
cmps
pop
adc
clc
mov
je
sub
(bad)
or
mov
data16
imul
mov
test
sub
sub
lods
push
push
mov
aam
mov
cmp
mov
xor
adc
in
jne
(bad)
sbb
mov
adc
mov
retf
nop
sub
or
jo
pop
push
pusha
xor
imul
inc
jnp
push
mov
mov
mov
sub
pop
(bad)
test
lahf
aaa
sbb
mov
outs
js
jns
(bad)
shl
and
or
cmps
(bad)
popa
cmc
outs
push
sahf
jbe
ja
fld
movs
jle
sbb
imul
scas
movs
enter
nop
mov
mov
popa
aas
adc
rcl
pop
sets
sub
scas
(bad)
fld
dec
push
in
cld
out
jae
xchg
imul
lods
add
xchg
mov
cmp
je
mov
and
and
xor
das
mov
pop
ins
imul
lea
cmps
and
mov
movs
xlat
mov
add
pop
jp
out
gs
cmps
outs
or
xor
add
daa
jo
or
pop
mov
mov
aaa
aaa
inc
inc
pop
iret
retf
dec
mov
and
pop
mov
aam
add
movq
jmp
push
mov
cmp
dec
dec
mov
ret
cmp
mov
es
cmc
bts
mov
push
mov
sbb
xchg
sahf
sbb
mov
xchg
inc
(bad)
sti
pop
stos
in
mov
ss
push
pop
xor
xchg
movs
adc
add
sahf
test
mov
sub
aas
push
lea
push
jl
cmp
imul
push
sub
or
in
mov
pop
jmp
fidivr
inc
mov
fdivrp
std
sub
push
js
outs
cmps
out
test
fild
xchg
mov
jl
push
idiv
ret
ret
mov
popa
sahf
lahf
cmp
mov
jg
xor
cmp
or
ficom
int
adc
mov
add
pop
outs
sub
fdivrp
shl
pop
xor
xchg
jmp
lods
fdivr
test
mov
je
add
push
mov
sub
in
pop
xor
addr16
in
add
mov
xchg
mov
jns
outs
aad
das
inc
stos
not
cmp
ror
dec
cmp
jg
je
outs
adc
fisttp
xchg
(bad)
pop
jne
stos
lahf
sbb
adc
mov
jne
enter
stc
sbb
push
push
jbe
mov
(bad)
sahf
xor
movs
xor
test
or
mov
sub
jno
in
cmp
mov
pop
cmp
enter
or
jle
xor
mov
scas
or
outs
jl
fild
pop
movs
jle
aas
dec
mov
mov
adc
jmp
mov
aas
mov
outs
adc
adc
xchg
movs
(bad)
sbb
faddp
mov
jae
inc
xchg
mov
mov
mov
sub
fistp
daa
addr16
leave
sub
mov
loopne
das
xchg
fisttp
or
or
inc
xor
test
imul
mov
mov
ja
imul
enter
adc
sub
fcom
sub
lock
dec
jl
mov
mov
cmps
cwde
mov
repnz
int
mov
pop
pop
add
pop
and
in
out
int
jo
or
adc
mov
and
fwait
or
sahf
xor
mov
popa
cld
pop
(bad)
(bad)
or
outs
inc
or
loop
pop
icebp
sbb
dec
mov
cs
cs
scas
sub
in
test
sub
retf
lahf
xor
ss
not
(bad)
xchg
ss
lods
inc
inc
jno
mov
sahf
add
cmps
mov
ret
mov
jmp
cs
cmps
push
outs
test
jbe
int3
or
jl
mov
cmps
test
push
scas
inc
push
and
je
(bad)
lahf
gs
sar
retf
push
cmp
stos
std
out
mov
mov
stos
mov
pop
or
iret
sub
xchg
aaa
in
mov
mov
add
in
inc
xor
mov
adc
mov
nop
cwde
in
dec
imul
daa
cmps
sub
stos
cmp
mov
icebp
push
test
out
mov
stos
aaa
sahf
not
mov
jle
sub
lods
fsubrp
mov
dec
cmp
xchg
pop
fs
addr16
add
addr16
push
mov
pop
jecxz
mov
jmp
outs
sub
mov
lds
xor
pushf
sub
pop
loope
pop
mov
inc
cli
add
stc
add
out
mov
mov
nop
push
ja
cmp
push
pop
cmps
dec
add
mov
addr16
jae
cmp
push
sub
(bad)
idiv
je
sbb
sub
daa
push
dec
inc
daa
adc
(bad)
out
cmps
cmp
and
cld
outs
xor
mov
int3
outs
inc
adc
pop
(bad)
jno
nop
fcmovb
fidiv
imul
mov
daa
(bad)
xor
mov
(bad)
icebp
sub
jg
int3
loope
repnz
clc
lahf
outs
mov
pop
mov
fimul
lods
add
lds
mov
jg
mov
push
daa
jl
(bad)
xlat
sti
mov
inc
sub
cmp
mov
cmp
cmp
mov
sahf
jl
test
ins
or
pusha
mov
and
cmp
retf
out
arpl
cs
ret
add
neg
mov
scas
push
mov
scas
push
mov
and
cmp
mov
frstpm(287
scas
or
push
sub
aam
mov
pop
je
mov
pusha
and
sahf
sub
(bad)
jmp
inc
xchg
popa
and
pop
jg
mov
lock
inc
mov
dec
dec
daa
mov
mov
jl
sahf
mov
mov
pop
pop
push
jl
imul
daa
cmps
mov
fisubr
stos
or
xor
ja
pop
in
arpl
pusha
adc
addr16
es
(bad)
aas
sbb
sub
fadd
jno
(bad)
xchg
mov
dec
mov
inc
push
arpl
ret
jne
xor
sub
test
mov
pop
inc
or
mov
nop
das
jnp
inc
pusha
in
pop
mov
jmp
cmp
sub
fwait
movs
push
push
mov
addr16
jge
nop
lods
pop
je
sub
movs
leave
mov
sar
mov
movs
call
pop
cs
inc
nop
pop
(bad)
adc
mov
lahf
pop
(bad)
enter
jnp
stc
fisub
ss
leave
mov
dec
outs
out
push
lea
shl
mov
fcmovu
push
sbb
sub
cmp
or
jne
ins
addr16
pop
outs
ret
xor
(bad)
aas
movs
adc
fdivr
stos
dec
push
and
popa
(bad)
aas
pop
mov
loop
inc
sar
movlps
xchg
ja
push
mov
les
mov
pop
js
outs
pop
movs
xor
add
arpl
mov
(bad)
and
mov
pop
cmp
sub
int3
stos
(bad)
fiadd
(bad)
lahf
mov
ret
(bad)
jb
(bad)
jmp
ror
jns
ja
cmc
push
mov
popa
xchg
dec
fisub
mov
sub
sub
or
cmp
push
idiv
push
sub
fs
loop
mov
aas
jmp
push
inc
jno
outs
aaa
pop
lea
mov
outs
push
es
push
mov
dec
or
mov
lods
(bad)
dec
sbb
idiv
sub
dec
fnsave
(bad)
mov
cli
scas
cmps
pop
in
sub
mov
xor
xor
mov
repnz
cmps
out
retf
and
fisub
and
mov
sbb
mov
aas
mov
mov
sub
idiv
adc
pop
pop
push
mov
mul
daa
sub
push
mov
movs
jge
and
sub
push
jo
xor
cmps
push
adc
jnp
mov
sbb
or
(bad)
pop
push
ja
outs
cs
out
cld
repnz
pop
mov
movs
out
stos
shl
push
out
sbb
mov
mov
push
cmp
sbb
lea
ds
stos
test
sbb
cmp
inc
movs
shl
cmp
popa
push
fcomi
aas
push
outs
sbb
inc
(bad)
pusha
mov
outs
lea
test
pop
js
push
pop
or
xchg
scas
add
add
push
inc
pop
stos
stos
jb
lods
adc
scas
scas
jnp
pop
test
adc
or
dec
xor
daa
mov
mov
cmp
scas
cmp
dec
pop
cli
jne
push
in
jmp
loopne
push
push
je
adc
in
xor
jno
mov
ja
ins
inc
aaa
mov
outs
ss
dec
push
aaa
psrad
mov
stos
imul
daa
ins
aam
mov
test
xchg
popf
(bad)
hlt
out
mov
push
bound
daa
test
push
mov
mov
movs
aas
frstor
ins
xlat
mov
out
pop
cmp
ror
sbb
mov
leave
push
stos
sub
xor
mov
and
pop
or
cmp
mov
jo
add
jb
sahf
jnp
neg
ins
sar
stos
xor
push
push
jge
nop
imul
mov
mov
int3
sub
call
lahf
cmps
mov
in
mov
mov
div
lea
inc
movs
add
repnz
cmps
push
push
sub
out
cli
jo
outs
lods
mov
lods
mov
jmp
push
fnstcw
add
cmps
push
sbb
sbb
idiv
pop
test
es
dec
mov
push
cmp
psrad
arpl
push
lahf
dec
scas
mov
mov
div
jo
aam
and
mov
(bad)
pop
push
dec
fwait
ss
adc
sub
sub
in
and
mov
pushf
mov
test
pop
fisub
pop
lea
dec
mov
dec
das
movs
out
push
int
mov
ja
pop
movs
scas
jmp
loop
movzx
in
push
or
push
scas
adc
add
pop
xchg
sub
jg
jo
mov
lods
(bad)
mov
out
pop
mov
cmp
iret
movntq
cmps
movs
cli
out
and
xchg
fcomp
sbb
xor
xor
push
jg
cmp
loop
add
jmp
sub
pop
adc
mov
push
cmps
dec
imul
mov
xor
mov
push
sub
outs
add
inc
jno
xchg
(bad)
nop
mov
into
jle
in
sub
push
push
adc
es
adc
jmp
dec
nop
mov
scas
in
ja
jnp
aas
push
jae
inc
pop
xchg
mov
or
loop
outs
mov
outs
cmp
lahf
xor
imul
push
dec
ins
add
lods
neg
mov
mov
xchg
pop
sbb
sbb
shl
push
mov
mov
data16
mov
lahf
out
jnp
jg
mov
jb
xor
lods
aas
or
mov
sahf
and
adc
je
ja
addr16
imul
fs
pop
jnp
(bad)
inc
and
cli
xchg
jg
repnz
ret
(bad)
fs
js
mov
and
xchg
cmps
xchg
aad
nop
add
(bad)
dec
dec
std
cmps
mov
cmovnp
xor
addr16
mov
outs
or
outs
fwait
xor
fsubp
les
(bad)
cmps
in
xor
scas
cli
mov
xchg
icebp
sbb
mov
out
mov
stos
inc
je
mov
popa
xor
out
fidivr
mov
(bad)
in
xor
scas
mov
aas
jmp
and
mov
add
scas
mov
sbb
mov
mov
shl
outs
ret
(bad)
mov
and
sub
es
cwde
por
push
popa
mov
dec
les
lahf
aas
inc
cmp
daa
push
cmp
cld
out
(bad)
icebp
sub
(bad)
aaa
push
mov
mov
or
lock
inc
pop
shl
aas
or
ins
mov
dec
sbb
pop
xor
push
sub
(bad)
dec
(bad)
icebp
jnp
push
push
(bad)
in
xchg
xor
jnp
fucomi
mov
cmps
(bad)
rcl
jnp
sahf
xor
cmp
sub
sub
mov
fistp
and
jne
mov
lahf
pop
(bad)
hlt
sub
int3
xchg
bound
mov
or
xor
mov
fidivr
jl
pop
cdq
lahf
aam
push
pusha
xchg
mov
mov
jae
sub
or
dec
daa
inc
sbb
add
idiv
call
xor
repnz
fs
mov
jecxz
es
(bad)
sub
loope
xchg
lahf
push
test
adc
(bad)
jg
sub
push
ins
inc
mov
stos
cmps
mov
rol
fcmovu
movs
ds
mov
das
xlat
es
pop
and
fs
adc
mov
out
imul
mov
mov
enter
cwde
xor
dec
mov
and
mov
jo
sub
lods
mov
cmp
idiv
add
mov
jno
stos
repnz
outs
inc
mov
and
stos
mov
cmp
push
stos
push
ja
pop
and
rcl
inc
mov
mov
arpl
add
dec
aad
pop
arpl
pushf
sbb
push
pop
neg
xchg
dec
mov
push
movs
cmps
sub
jp
xchg
xchg
imul
inc
sbb
retf
sbb
fisubr
jmp
cmc
cmp
(bad)
js
scas
out
xlat
cmp
push
jno
xor
out
in
in
add
jb
sub
lods
scas
push
jne
ret
stos
mov
fwait
test
xor
cmp
fimul
fwait
imul
mov
mov
sar
scas
dec
push
jno
lds
push
mov
adc
scas
add
outs
xlat
mov
sbb
adc
mov
mov
out
mov
sub
lea
dec
arpl
mov
push
stc
push
cmps
js
stc
xchg
repnz
aas
out
je
add
push
(bad)
loop
dec
mov
and
mov
mov
mov
loope
sub
shr
mov
(bad)
ret
lds
or
fbstp
arpl
pop
setl
cld
and
dec
jne
addr16
retf
jae
jge
xor
aad
mov
mov
add
mov
dec
sub
cmps
lahf
aas
inc
in
es
ins
cld
sub
mov
xchg
out
data16
out
(bad)
adc
sbb
dec
jle
aas
pop
cs
gs
(bad)
call
(bad)
push
mov
pop
es
lea
cli
xor
jae
pop
xchg
mov
div
lea
cmp
sub
xchg
push
js
lods
imul
icebp
leave
fisub
(bad)
lahf
out
dec
push
push
add
mov
mov
push
mov
xor
out
ins
push
rcl
and
cmps
cmp
xor
fidivr
adc
stos
mov
sbb
push
shr
dec
daa
cdq
bound
movlps
push
outs
dec
sub
add
sub
dec
es
retf
daa
jb
fisubr
mov
pop
rcr
mov
mov
sbb
ss
xchg
xchg
ins
fmulp
cli
daa
jecxz
mov
adc
es
shl
xchg
mov
inc
xchg
xchg
test
mov
push
lahf
or
mov
push
das
mov
mov
inc
aad
push
cmp
pop
outs
mov
int
lahf
dec
addr16
xchg
mov
mul
jnp
(bad)
(bad)
and
scas
pop
inc
mov
cmps
call
inc
push
or
dec
into
mov
imul
mov
sahf
fidiv
mov
cdq
outs
adc
fldcw
sbb
push
sahf
jae
lahf
mov
out
mov
stc
jns
arpl
sbb
mov
div
xchg
xor
movs
xchg
xchg
inc
mov
aas
(bad)
xchg
leave
imul
stos
inc
mov
(bad)
jle
dec
push
mov
(bad)
xchg
icebp
cmp
xchg
jg
stos
aad
out
test
popw
xor
addr16
test
out
push
dec
cwde
cmps
push
lahf
mov
or
sub
enter
(bad)
cmp
push
stos
pop
push
idiv
sbb
ret
or
pop
and
xor
push
stos
out
retf
(bad)
adc
push
imul
push
xor
push
out
addr16
in
enter
sbb
addr16
or
int
call
jg
lea
das
and
jmp
sub
mov
mov
lahf
int
xchg
fimul
xchg
mov
sbb
cmc
aas
jge
fld
dec
fisttp
and
push
mov
sbb
iret
int
lds
aas
sar
inc
xchg
mov
jg
outs
popa
cmp
fwait
arpl
js
xchg
lahf
rcr
les
mov
das
pop
stos
retf
mov
outs
out
xchg
xchg
outs
sub
es
mov
jbe
not
mov
stos
into
adc
stos
dec
inc
adc
dec
test
cmps
outs
fs
scas
cmps
cmp
sub
inc
sub
jnp
mov
scas
sbb
push
setle
jne
das
cvttps2pi
enter
inc
mov
pushf
fwait
mov
mov
mov
jb
ud1
pop
not
ret
pop
jae
jno
scas
jmp
xor
out
aas
ins
movzx
arpl
push
cmps
aas
fnstcw
push
sub
lahf
xchg
rcr
es
lods
pop
cwde
test
sbb
dec
inc
aaa
mov
mov
ss
inc
cpuid
mov
sahf
(bad)
(bad)
loope
test
dec
lods
xchg
(bad)
int3
mov
or
stos
push
outs
shl
cmp
mov
cmps
dec
bound
adc
ja
mov
ds
xor
scas
(bad)
xchg
mov
and
xor
lahf
push
lea
cmps
and
leave
add
fimul
cmps
js
jge
xchg
scas
imul
lods
xor
cmps
movs
cs
enter
js
int3
outs
cmp
fucomp
xchg
fcmovnbe
out
ret
jnp
xor
scas
push
xor
mov
push
shl
and
fstp
push
dec
xchg
icebp
dec
sub
cs
pop
adc
stos
dec
add
cs
xor
mov
cmps
mov
movs
or
mov
cli
adc
cld
repz
cmp
pop
mov
mov
add
xchg
sub
mov
cmps
rol
jg
loop
arpl
sub
fiadd
mov
cmps
push
neg
and
push
ja
inc
or
sub
outs
in
mov
mov
mov
xor
fild
add
scas
je
mov
sub
dec
call
mov
cmps
mov
lods
stos
dec
and
outs
sbb
pop
sbb
pop
inc
dec
or
or
lods
frstor
icebp
dec
cmps
addr16
daa
sub
inc
enter
movs
mov
or
mov
mov
das
jbe
ror
lahf
and
pop
in
sahf
push
lock
scas
cmp
lea
cmp
sahf
cmps
ins
int3
fwait
repnz
add
pop
jmp
sbb
fist
cmps
dec
push
mov
addr16
mov
mov
jmp
das
mov
push
lea
outs
lds
mov
das
imul
fimul
sbb
test
lea
mov
jl
fisttp
jle
sbb
hlt
xchg
inc
rol
not
sub
bt
xor
and
pop
in
imul
xchg
and
sti
pop
retf
push
movs
sbb
sub
or
mov
pop
pop
mov
mov
imul
out
xor
push
mov
in
clts
pop
sahf
scas
mov
push
pop
and
(bad)
jo
jmp
data16
movs
mov
jle
stos
lock
fisttp
out
jp
xchg
in
cmc
aaa
ds
out
repz
push
fwait
cmc
mov
leave
aaa
mov
(bad)
loop
mov
dec
lahf
mov
mov
sub
lea
mov
jo
fst
data16
ja
mov
mov
add
sub
rcr
sub
jne
add
mov
cmp
sub
sti
cmps
sbb
addr16
pushf
ins
jmp
pop
xor
pop
cmp
icebp
push
out
cmps
bound
jl
adc
mov
movs
xor
cmp
sub
mov
adc
dec
dec
in
pop
and
pop
jl
add
push
xchg
jge
push
push
arpl
or
aad
inc
out
into
xor
rcl
lock
aas
sahf
movs
jb
pop
mov
div
imul
sbb
clc
test
lods
ror
out
rcr
(bad)
stos
test
(bad)
outs
cmps
xlat
ins
ss
sub
ja
mov
cli
cmp
dec
mov
add
adc
imul
xor
ins
call
mov
inc
fsubr
mov
sub
btc
sub
gs
sbb
rcl
push
mov
cmp
push
in
cmp
pop
leave
hlt
mov
push
add
mov
jmp
stos
xchg
addr16
or
outs
jne
adc
mov
sbb
fcomp
and
mov
pop
daa
mov
pop
mov
xor
push
inc
cmp
test
jnp
sbb
sub
sub
lods
pop
inc
jge
cmps
(bad)
ja
xor
cld
repnz
lock
(bad)
jne
outs
mov
add
inc
mov
or
xor
out
mov
xor
rcr
inc
jo
mov
out
cmps
retf
rol
aas
inc
ss
sub
outs
xchg
cld
loop
test
sar
ret
ins
mov
pop
(bad)
jmp
test
div
mov
rcr
or
or
mov
stos
test
mov
cs
mov
aaa
jmp
inc
pop
es
mov
jg
jg
mov
xor
rcr
nop
add
cmp
lods
adc
adc
mov
aaa
or
adc
imul
push
out
ret
sahf
aas
mov
outs
adc
adc
test
lods
aaa
push
bound
or
stos
jle
xchg
push
mov
pop
call
addr16
push
and
push
ret
sti
sbb
sub
jne
scas
pushf
ja
cmp
pop
imul
mov
mov
push
ins
(bad)
aas
enter
cmps
mov
mov
fild
stos
mov
cmps
fwait
xchg
retf
sbb
mov
xlat
dec
sub
pop
test
inc
xor
daa
scas
xor
adc
pop
sub
mov
mov
test
test
psraw
cs
jmp
push
fisub
movs
ror
pusha
fiadd
outs
dec
in
popf
sub
cli
cmps
loop
outs
sets
imul
sahf
cli
jmp
rol
imul
mov
xchg
cld
xor
sub
outs
lods
and
mov
cmps
popf
inc
mov
ins
sbb
rcl
sbb
fdiv
out
xchg
xor
scas
jb
push
out
sbb
xchg
and
jmp
and
or
lods
icebp
daa
mov
in
mov
or
adc
ret
arpl
mov
mov
div
mov
sub
xchg
xchg
push
xchg
jmp
addr16
sahf
mov
pop
mov
mov
mov
xchg
gs
neg
out
sbb
movs
fldlg2
cli
in
dec
addr16
fdiv
pop
sbb
mov
pop
stos
(bad)
daa
outs
inc
dec
push
sahf
scas
cmps
jp
retf
es
ror
cmps
mov
or
cmps
pop
cmps
mov
call
cmps
mov
lahf
or
outs
jns
popa
xchg
cs
test
xor
imul
sub
mov
aas
cmp
xchg
mov
mov
push
loope
mov
(bad)
stos
(bad)
ds
cmp
lea
arpl
mov
and
test
or
xchg
outs
dec
mov
arpl
ja
or
inc
mov
push
ins
inc
outs
(bad)
and
imul
mov
or
div
mov
out
mov
fisttp
in
aaa
cmp
dec
jo
adc
fwait
lods
gs
push
scas
inc
xchg
mov
push
icebp
or
sub
retf
dec
outs
pop
jbe
pop
scas
sub
push
test
hlt
dec
jae
fdivrp
lea
movs
out
push
mov
xor
mov
push
arpl
(bad)
das
inc
sub
in
mov
out
test
adc
stos
pop
lock
dec
jae
xchg
es
ds
mov
ficomp
sub
xchg
mov
adc
cwde
(bad)
push
dec
rcr
mov
ins
dec
pop
in
dec
dec
cmp
shr
cmc
popa
out
cli
adc
ret
cmp
xchg
out
fs
outs
(bad)
(bad)
inc
xchg
(bad)
mov
daa
mov
pcmpgtd
(bad)
and
xchg
gs
dec
lea
mov
addr16
ins
jle
retf
adc
outs
inc
rol
xchg
lahf
mov
lods
dec
inc
xchg
add
retf
(bad)
test
cli
std
ss
cmps
mov
add
(bad)
idiv
push
in
sahf
dec
test
and
jmp
mov
dec
cwde
or
aas
sbb
test
pop
movsx
jno
cmp
and
cmps
sub
mov
scas
mov
mov
mov
and
sub
fdivr
mov
cmp
outs
push
and
mov
mov
pop
dec
push
fs
aas
test
ret
ficom
jge
xor
popa
pop
sbb
ficomp
in
jg
stos
pop
sahf
sub
jecxz
push
and
sbb
scas
jae
loop
mov
popf
imul
jo
lock
lds
push
movs
sub
arpl
xchg
cli
add
adc
xchg
xchg
cmc
fisubr
out
dec
mov
jle
push
sbb
pop
fsubr
push
test
sub
pushf
xlat
cmp
xor
mov
jl
(bad)
mov
daa
ins
push
xchg
hlt
cmp
lods
ret
aas
lahf
xor
fs
addr16
xchg
push
cmp
pushf
sub
(bad)
or
retf
dec
jne
in
daa
retf
mov
mov
push
jge
mov
ins
call
sbb
lods
push
mov
jae
pop
mov
mov
push
jg
aas
iret
fidivr
daa
add
jg
mov
and
mov
fwait
movs
push
aas
pop
outs
mov
push
pop
jge
sub
jle
popa
or
sub
lahf
jl
mov
or
jo
je
das
sbb
cmp
push
push
xchg
sub
data16
adc
mov
or
(bad)
jbe
popa
xor
lods
sub
lock
jns
mov
das
xor
scas
loop
cmps
ret
fsubr
shr
xchg
push
cli
dec
mov
imul
sbb
cmp
pop
add
das
(bad)
xor
in
out
inc
ds
aaa
addr16
fstp
das
loop
xchg
das
mov
inc
mov
mov
dec
sub
test
push
mov
mov
fnsave
jae
adc
outs
jg
loop
js
retf
pop
pop
jmp
(bad)
cmp
and
movs
sbb
daa
xchg
cmp
xor
imul
mov
push
and
push
xor
dec
inc
outs
mov
sub
dec
inc
ds
jg
xchg
into
lahf
pop
leave
sbb
pop
mov
mov
add
ins
(bad)
int3
cmp
inc
lods
cmps
mov
pop
jb
fidivr
push
in
lds
and
(bad)
aas
fadd
sahf
sbb
xchg
lods
mov
aas
sbb
jg
mov
jge
imul
mov
enter
mov
sub
pusha
jns
add
addr16
aas
jg
div
jg
mov
inc
push
inc
sub
das
(bad)
lea
imul
add
add
dec
cmc
push
dec
js
dec
push
das
popa
imul
mov
imul
lahf
mov
mov
je
add
(bad)
stos
(bad)
sbb
out
(bad)
outs
push
and
dec
es
inc
add
stos
scas
sub
inc
jg
push
adc
sub
in
mov
cmc
bound
inc
lahf
dec
mov
dec
xchg
sub
vmread
mov
lahf
cmc
stos
sub
jecxz
jae
pop
mov
jno
lahf
int
daa
daa
jae
sahf
sub
aas
aad
inc
(bad)
pop
push
mov
outs
gs
(bad)
cwde
gs
adc
push
sub
inc
push
int
addr16
(bad)
fdiv
mov
into
mov
xchg
sbb
xchg
jae
pop
and
lahf
outs
data16
daa
inc
push
and
pop
jb
es
pmulhuw
jmp
loop
jg
mov
iret
lahf
cmp
loop
das
enter
ficomp
ds
pop
push
sub
inc
test
mov
mov
(bad)
dec
pop
cdq
xlat
stos
out
adc
push
push
stos
inc
sbb
dec
and
and
mov
call
mov
loop
push
aaa
lahf
mov
sbb
inc
jmp
adc
(bad)
xchg
outs
mov
aaa
stos
mov
das
push
add
dec
in
push
adc
stos
fld
sbb
cmp
sub
cli
ins
pop
adc
jmp
addr16
cmc
fstp
dec
(bad)
shld
mov
mov
pop
(bad)
test
add
aaa
addr16
ins
jge
xor
addr16
cmp
add
cmp
xor
push
stos
mov
cmp
imul
out
xchg
sub
pusha
jbe
bnd
pop
outs
(bad)
lahf
pop
sbb
addr16
mov
pop
lahf
lea
fsubr
popf
sub
cvtps2pd
jge
mov
js
ret
and
aas
stos
cmp
nop
pusha
fistp
ss
stos
mov
pusha
in
es
mov
aaa
adc
movs
(bad)
push
(bad)
repnz
push
sub
sub
outs
ja
add
add
mov
pop
jno
or
popf
jg
cli
pop
jl
mov
push
ja
or
sahf
adc
xchg
push
out
fmul
cmps
scas
dec
pop
retf
and
lahf
push
inc
lahf
stos
jge
and
push
sbb
rol
(bad)
xchg
pop
cmp
sub
popf
sbb
cmps
inc
push
shl
mov
mov
pop
push
and
sub
and
mov
ins
mov
mov
arpl
bound
popf
fs
ret
pop
ret
pop
jmp
pop
push
das
pop
test
imul
mov
push
movs
outs
fs
add
idiv
movs
jne
cwde
stos
sub
ret
xor
xchg
scas
stos
sbb
xor
out
pop
imul
movs
test
cmp
cli
mov
je
lahf
test
cmp
jl
sub
add
jge
mov
jns
scas
push
daa
clc
push
mov
mov
movs
xor
adc
fisubr
cmps
lea
mov
clc
ja
not
jge
pop
push
add
pop
test
pop
xchg
ret
int
push
sub
mov
xchg
mov
cmp
aas
test
movs
jmp
call
inc
or
sbb
cmps
sbb
sub
inc
(bad)
arpl
xchg
push
pop
and
repz
idiv
push
mov
loope
nop
(bad)
arpl
pop
scas
test
lods
xsha1
cmps
(bad)
pop
test
stos
aas
retf
sbb
retf
mov
sub
dec
mov
outs
in
mov
and
pop
add
mov
jne
mov
xor
jmp
xchg
sub
pop
adc
out
imul
shl
outs
sar
inc
into
xor
fs
mov
cmc
es
mov
dec
loope
dec
mov
push
adc
sub
fnstsw
sbb
mov
outs
(bad)
fcom
test
add
cmp
outs
into
dec
push
out
data16
add
mov
cmp
sub
jno
jp
fwait
jl
scas
scas
out
addr16
or
ror
daa
jb
jnp
ror
lock
stos
in
fidivr
aas
scas
in
and
aas
pop
mov
add
dec
fld
jle
mov
in
sahf
dec
(bad)
in
icebp
lahf
sti
xor
cmc
pop
cmp
mov
or
ds
ud0
mov
lods
dec
xlat
sub
sbb
jnp
adc
scas
cmp
stos
ror
or
jg
mov
or
arpl
das
and
leave
and
stos
aas
cs
retf
mov
xchg
xchg
push
cdq
es
add
fs
mov
and
pop
loopne
out
lock
mov
push
xchg
lods
jae
shr
mov
aam
ja
dec
aaa
mov
nop
hlt
inc
ror
es
fild
ss
or
mov
mov
stos
repz
sub
mov
aaa
push
xchg
mov
mov
aam
cmp
popf
pop
jg
(bad)
icebp
sub
fiadd
mov
iret
mov
mov
xor
sub
cmps
dec
cmp
out
push
mov
(bad)
idiv
(bad)
(bad)
xchg
push
mov
cmp
neg
loop
imul
dec
out
mov
in
mov
xor
mov
out
cmp
push
mov
in
mov
mov
lahf
and
xor
push
push
mov
(bad)
mov
fstp
push
pop
mov
sbb
jl
out
test
mov
call
sahf
shl
jne
cmc
xor
fs
pop
mov
daa
ret
loope
ss
dec
adc
ins
and
sbb
sub
lahf
add
push
aaa
arpl
mov
cmp
loope
or
enter
xor
cdq
stc
or
jp
out
inc
pop
std
push
push
lea
jae
lods
sub
mov
xchg
(bad)
and
jmp
stc
sub
jmp
pop
mov
cmp
cmps
mov
cmp
xchg
mov
push
sub
int3
scas
setae
cmps
push
or
or
mov
scas
(bad)
movs
fmul
dec
sub
dec
xor
pop
sub
lock
mov
call
(bad)
out
cmp
call
jmp
cmp
push
jmp
sahf
neg
in
out
sub
cli
sub
cmp
data16
sbb
pop
iret
outs
clts
bound
(bad)
cmps
dec
addr16
pop
or
xchg
inc
jl
pop
stos
add
xchg
pop
cs
adc
jo
aas
and
xor
nop
outs
daa
mov
push
outs
add
outs
mov
mov
xor
mov
fild
fnstcw
test
jo
popa
and
mov
mov
rcl
sub
mov
and
or
cmp
mov
sub
mov
stos
adc
pop
jmp
xor
dec
xchg
cmps
retf
pop
sahf
jno
jmp
das
mov
cmp
and
sub
shr
mov
ficom
daa
mov
(bad)
leave
add
imul
cmp
mov
das
adc
mov
ror
js
cmps
ficom
leave
inc
test
movs
addr16
sub
cmps
jmp
pusha
push
imul
aas
add
ret
xchg
clc
imul
int
frstor
xchg
sub
ja
sbb
das
lock
sahf
mov
test
inc
retf
pop
mov
push
pushf
shl
xchg
xor
dec
das
sub
xchg
lods
js
fsub
imul
mov
cmps
xlat
call
dec
xchg
loop
cmp
mov
shr
jg
jg
jnp
mov
imul
jno
out
test
(bad)
outs
sbb
popa
xor
call
jo
cmps
and
mov
hlt
pop
lahf
adc
pop
daa
ds
sub
ja
gs
pop
into
shl
mov
or
mov
mov
sahf
inc
dec
xchg
pop
mov
jae
and
outs
and
stos
shr
xchg
push
dec
je
sbb
rol
mov
mov
jg
adc
pop
daa
sub
aas
retf
lahf
cmp
inc
push
aaa
ja
loop
fstp
popa
pop
jg
add
lds
sbb
push
dec
(bad)
mov
outs
sub
pop
stos
pop
(bad)
push
sub
mov
scas
inc
or
sahf
sbb
fld
loopne
mov
mov
in
xor
ret
jb
scas
mov
sub
mov
mov
mov
call
cmp
xchg
push
mov
add
jl
mov
in
sub
shl
cmp
mov
jns
daa
mov
xor
call
imul
(bad)
lods
or
mov
mov
fisttp
fisttp
mov
mov
jns
je
xchg
lods
in
fs
aam
xchg
lods
and
xlat
je
lea
jno
add
xor
xor
aaa
sub
movs
shl
add
arpl
inc
not
mov
fidivr
and
lahf
cmp
pop
mov
(bad)
ret
push
enter
stos
mov
sub
pop
jg
push
and
sahf
div
gs
pop
lods
push
sbb
dec
pop
jns
outs
ret
add
pop
cmp
fpatan
sub
lods
loop
add
das
pop
sub
xchg
int3
(bad)
movs
cmp
xchg
lea
mov
cli
addr16
aas
adc
mov
jb
shl
mov
jnp
dec
imul
sahf
imul
dec
cli
push
scas
mov
sbb
mov
jae
xor
scas
sar
mov
jnp
ret
(bad)
in
xchg
and
stos
push
aaa
dec
push
(bad)
inc
mov
inc
ror
mov
jmp
test
test
fidivr
jae
mov
mov
pop
push
pop
mov
sbb
cmps
test
daa
push
test
jno
mov
jl
aas
outs
xchg
mov
and
lahf
push
cmc
jb
pop
shl
ss
(bad)
lahf
dec
push
xchg
cli
xchg
mov
xor
or
mov
stos
xchg
adc
shr
mov
aas
sar
jb
ja
mov
cmp
sbb
mov
call
mov
add
dec
aas
cmps
xchg
dec
and
add
icebp
outs
and
push
mov
movs
sub
sbb
mov
dec
jge
in
fisubr
imul
mov
mov
daa
pop
gs
and
add
in
lods
scas
in
mov
pop
add
cmps
sahf
dec
rol
(bad)
stos
mov
ins
gs
dec
mov
out
inc
fld
xchg
int3
ja
push
not
movq
xlat
sub
je
imul
movs
mov
pop
(bad)
lea
je
cmps
dec
sbb
or
out
outs
mov
test
dec
mov
addr16
xor
pop
(bad)
retf
pop
pusha
mov
and
in
sbb
inc
lea
or
jae
shl
retf
sbb
and
into
imul
imul
jle
push
mov
stos
push
jg
xchg
push
sub
xchg
inc
add
loop
pop
mov
jp
addr16
cmps
push
pop
and
imul
out
mov
daa
mov
stos
inc
mov
retf
mov
mov
dec
or
mov
stos
sti
icebp
int3
ins
dec
retf
fild
cs
pop
mov
mov
cli
movs
sbb
gs
push
lods
adc
push
pop
call
std
mov
push
add
int3
dec
clc
mov
ret
push
(bad)
fsubr
jmp
clc
dec
repz
addr16
sub
aas
ror
dec
xchg
data16
jnp
rcr
call
imul
je
retf
fisttp
mov
and
xchg
aas
mov
pop
retf
mov
inc
jmp
lea
mov
add
retf
call
les
fcmovu
sub
pop
push
aas
neg
div
xchg
cld
scas
pop
outs
sbb
jg
sbb
jne
add
rol
or
cmps
adc
pop
pusha
adc
sbb
out
jge
aas
xchg
fdivr
ror
sti
sahf
test
sbb
xcrypt-ofb
cmps
in
push
sub
aas
xor
adc
sahf
adc
cmps
out
cmps
or
outs
stos
sub
sahf
outs
jmp
movs
inc
adc
iret
cld
retf
and
push
sub
dec
xor
loop
jmp
fiadd
lds
loop
pop
(bad)
cs
push
dec
pop
outs
lahf
stos
lea
sar
cmp
sub
pop
repnz
movs
out
lock
push
mov
inc
packssdw
aaa
outs
mov
sbb
pop
aas
fbstp
sub
(bad)
sbb
repnz
loop
outs
xor
dec
cmc
leave
jnp
outs
scas
test
dec
ja
stos
mov
aas
iret
pop
in
push
sub
popa
ror
pop
movs
or
mov
xor
popa
pop
mov
outs
sbb
je
addr16
enter
mov
cwde
xchg
stos
sub
or
jg
outs
fstp
jae
stos
xor
outs
stos
add
addr16
sbb
shr
adc
sub
es
jg
lea
loop
or
outs
push
mov
xchg
cli
sub
scas
outs
jmp
jl
add
in
pop
push
mov
dec
(bad)
cmp
dec
or
in
repnz
or
mov
and
lds
stos
xchg
mov
fs
loope
sub
mov
shl
and
jg
push
call
es
xlat
mov
adc
xor
outs
daa
lods
retf
imul
fimul
pushf
(bad)
pop
in
arpl
cmp
push
mov
pop
scas
adc
lods
mov
dec
jg
pop
sbb
xchg
arpl
pop
imul
jl
cmps
and
rcr
(bad)
leave
sub
push
adc
(bad)
lahf
iret
inc
mov
mov
(bad)
call
outs
mov
mov
(bad)
xor
mov
(bad)
jp
cmps
adc
dec
daa
lods
imul
clc
mov
dec
and
mov
pop
nop
mov
int3
(bad)
jmp
scas
call
lods
loop
dec
mov
int
pop
adc
call
fisubr
xchg
into
mov
aas
lds
(bad)
dec
in
or
repnz
pop
scas
jmp
addr16
(bad)
mov
data16
jne
add
pop
push
xchg
test
dec
aaa
mov
popf
ins
in
xor
aas
jmp
pop
or
pop
xor
fisub
ss
das
test
mov
lahf
mov
add
or
dec
sub
cli
loop
pop
iret
pop
scas
sub
outs
pop
xchg
xchg
mov
xor
ss
call
jno
cmp
mov
pop
fst
dec
mov
jb
arpl
mov
jae
das
(bad)
in
sub
outs
call
dec
mov
and
ds
xchg
cmps
adc
mov
das
neg
jmp
push
mov
lods
pop
mov
xlat
xor
adc
(bad)
jmp
out
cmp
movs
nop
enter
and
cmps
pop
sub
fimul
xor
out
inc
or
outs
jne
icebp
pop
xchg
jg
gs
jl
mov
in
xchg
push
jmp
jle
(bad)
xchg
in
mov
sti
stos
out
(bad)
sub
push
daa
or
push
add
bswap
repnz
jmp
inc
dec
sub
sbb
cs
loope
and
add
mov
stos
pop
or
cmps
pop
inc
mov
cmp
inc
je
sbb
adc
movs
ins
bound
sub
(bad)
xchg
outs
mov
dec
mov
push
mov
mov
scas
ins
xchg
sub
out
and
pusha
inc
jno
das
aas
push
mov
ja
imul
outs
arpl
imul
xor
mov
push
pusha
fsubp
out
jg
jbe
gs
jge
pop
mov
nop
ins
repnz
aas
add
repnz
pop
jnp
fcomip
mov
daa
push
pop
cmp
xchg
and
lods
scas
xchg
pop
aad
add
into
test
(bad)
ja
sub
mov
push
lea
jae
test
inc
xchg
dec
or
mov
loop
jae
fld
aaa
imul
xchg
pop
push
or
fidivr
test
outs
sbb
xchg
dec
in
mov
cmc
push
(bad)
mov
cmp
xchg
push
mov
movs
mov
or
popa
sub
fimul
(bad)
sbb
movs
jmp
cmp
mov
out
neg
or
sahf
and
mov
adc
(bad)
outs
aas
mov
inc
int3
mov
mov
iret
inc
xchg
mov
mov
push
retf
imul
ret
or
repnz
mov
(bad)
jg
pop
sub
dec
shl
mov
(bad)
outs
mov
xor
(bad)
and
mov
sub
mov
add
dec
scas
push
in
mov
adc
fidiv
add
inc
push
cdq
fistp
jmp
ret
lea
lock
ins
cmp
sbb
(bad)
pmulhw
inc
scas
hlt
push
xchg
dec
stc
shl
cli
mov
and
add
iret
imul
mov
dec
imul
xchg
enter
fiadd
sti
xor
push
sbb
addr16
pop
retf
mov
xor
int
scas
scas
gs
fs
xchg
addr16
outs
dec
jmp
push
sbb
test
inc
aas
push
daa
fmul
mov
jmp
sub
mov
stos
and
pop
mov
lea
cmp
pop
push
neg
jnp
not
ret
in
xor
data16
xlat
sub
int3
adc
jbe
dec
dec
ror
mov
mov
sub
pop
push
add
lock
lods
xchg
jnp
push
push
mov
fist
bound
scas
dec
pop
xchg
add
mov
stos
scas
movs
test
jb
ja
out
push
mov
imul
sbb
mov
pop
mov
imul
sub
inc
mov
jle
lods
pop
fidiv
or
dec
inc
call
lahf
sub
cmp
xchg
jp
xor
daa
(bad)
mov
push
in
(bad)
in
pop
mov
out
jno
xor
retf
sub
sub
(bad)
or
push
or
jmp
sti
ds
outs
dec
ins
outs
scas
mov
outs
sub
sub
cli
adc
jo
xor
(bad)
repnz
daa
retf
lahf
mov
scas
cmps
sahf
mov
sbb
int3
jns
sti
(bad)
pop
gs
mov
fnsave
cmp
cdq
adc
cmps
aas
push
hlt
daa
sub
(bad)
or
sub
lock
mov
pop
imul
ficom
hlt
jmp
mov
lahf
je
sbb
mov
jnp
sahf
adc
outs
jb
fs
add
mov
aaa
daa
std
fcomp
test
shl
adc
sub
xchg
pop
daa
aas
leave
test
inc
mov
xchg
mov
test
sbb
mov
(bad)
cld
mov
sub
mov
mov
mov
jmp
addr16
xor
fxch
inc
jnp
(bad)
sahf
cmp
fiadd
sub
out
fldenv
inc
out
dec
push
mov
push
in
cli
leave
mov
xor
cmp
pop
(bad)
cmp
aas
push
xchg
daa
aad
pusha
ja
pop
cmps
fisubr
daa
loop
gs
ror
sub
popw
mov
arpl
leave
ret
bound
xor
test
mov
test
aas
mov
iret
popf
dec
lods
rcl
std
and
aas
sub
mov
adc
lock
stos
push
inc
xchg
add
mov
scas
mov
es
cmp
lds
jnp
test
aas
or
stc
push
jno
ret
sub
mov
mov
in
pop
push
fs
data16
daa
pop
lahf
stos
bound
outs
fldenv
sub
pop
icebp
(bad)
sahf
test
or
mov
or
pop
sub
push
mov
mov
sub
sub
imul
call
(bad)
addr16
xchg
aad
shl
ins
xlat
std
push
pop
adc
inc
mov
in
xor
out
aaa
repnz
mov
je
adc
mov
sub
inc
jmp
cmps
(bad)
repz
(bad)
(bad)
adc
xor
mov
fisub
cmp
jne
sub
ja
mov
cli
das
imul
jle
ss
push
sub
cmp
adc
aaa
pop
in
mov
pop
out
mov
adc
mov
outs
not
jnp
xchg
push
outs
xchg
imul
lea
mov
xchg
rcr
(bad)
sub
push
das
sub
and
aaa
mov
mov
xor
jle
xchg
(bad)
ja
cmp
add
push
and
jo
clc
sbb
movzx
outs
xchg
call
and
cmps
stc
xor
sub
in
jnp
fmul
cmps
out
cmp
mov
or
sub
movd
mov
loop
mov
js
minps
addr16
scas
addr16
nop
jnp
test
outs
test
popf
adc
mov
ins
inc
ins
xchg
rcl
add
pxor
jmp
js
inc
xchg
adc
rol
jae
inc
movs
loope
ret
in
aas
imul
mov
mov
pop
arpl
in
dec
std
stos
cmps
inc
in
push
and
push
sub
ja
addr16
adc
cwde
scas
call
jl
shr
push
and
loop
push
push
fmul
mov
pop
movs
gs
sub
push
stos
(bad)
lods
out
xlat
mov
inc
stc
dec
aas
and
pop
inc
inc
xor
sub
lahf
inc
out
mov
adc
cmp
call
scas
jmp
ret
mov
jo
das
push
aaa
jmp
daa
mov
mov
scas
mov
sahf
aaa
mov
stos
movs
shr
sub
push
sahf
inc
cmps
mov
ret
sub
xor
rsm
mov
xor
and
pop
int
js
mov
adc
ret
xor
sahf
and
aas
push
jne
mov
mov
inc
lock
dec
pop
fisttp
add
lods
pop
jle
movs
mov
fbld
into
and
mov
imul
(bad)
push
jae
aas
push
add
adc
lods
fs
sbb
es
aaa
cmps
out
es
or
cmps
js
scas
adc
jmp
push
pushf
mov
and
scas
xchg
sub
pop
mov
or
ins
in
jae
ds
or
test
xchg
lea
inc
mov
lods
aaa
in
jnp
sub
je
mov
mov
inc
push
sbb
scas
push
jle
xlat
jmp
cmps
int
inc
lahf
cwde
fwait
lahf
cmp
ins
daa
pop
pop
xchg
fsub
rcl
pop
mov
lahf
loop
jg
outs
sub
cli
or
jns
and
mov
xor
inc
sub
out
out
push
mov
xchg
jno
(bad)
(bad)
icebp
xlat
outs
fs
mov
xlat
xchg
jae
bsf
data16
mov
arpl
ja
dec
inc
xor
push
xor
shl
cmp
test
dec
jl
cmc
mov
inc
popf
push
pop
shl
xchg
test
in
leave
push
mov
cmps
add
out
inc
inc
scas
inc
cmp
dec
sub
dec
outs
add
ret
mov
ins
mov
pop
mov
out
mov
cs
xchg
les
sbb
ret
jmp
push
outs
retf
cmp
cmp
test
dec
push
sbb
xchg
loop
jb
out
mov
mov
adc
aam
xor
push
cmp
xlat
push
sub
cmp
sub
ja
pop
mov
unpcklps
xchg
fucomi
sub
lahf
idiv
sbb
cmps
add
jo
arpl
and
lods
mov
test
outs
mov
daa
addr16
mov
(bad)
jmp
mov
and
lods
int
jle
lahf
dec
xor
(bad)
push
(bad)
fld
fcom
scas
ins
test
mov
cwde
stos
xlat
mov
fwait
jl
vmptrst
adc
cmp
pop
daa
in
scas
cmps
movs
popa
lock
and
jl
icebp
mov
xchg
das
xchg
outs
mov
ja
mov
sub
pop
fisub
adc
sbb
sbb
xchg
ret
jg
addr16
mov
aas
jecxz
sub
repnz
test
stos
pop
mov
pop
sub
scas
jne
xchg
dec
mov
mov
push
bound
xor
repnz
ret
lahf
jmp
mov
clc
and
cmps
repz
and
sub
ret
cmp
add
leave
popa
and
cmps
mov
out
pushf
jns
loope
fisubr
scas
stos
dec
add
outs
pusha
mov
in
in
pop
inc
jae
xor
xlat
enter
inc
xchg
cmps
add
out
xchg
lods
mov
addr16
dec
xor
and
out
rcr
cmps
jns
sub
sub
icebp
rcr
stc
mov
shr
cmc
jecxz
sbb
mov
inc
leave
(bad)
dec
push
xor
or
and
push
shl
xchg
mov
(bad)
fwait
cmps
cmc
and
pop
jmp
push
jno
mov
adc
push
inc
lods
(bad)
jns
push
icebp
lods
imul
cdq
mov
int
mov
aas
pop
in
daa
adc
in
stos
mov
inc
loopne
(bad)
stos
div
dec
jae
xor
daa
mov
nop
iret
cs
pop
jle
fisttp
das
xchg
pop
sbb
ret
xchg
cmps
jp
jl
push
and
cmp
add
sbb
es
data16
jmp
movs
inc
mov
mov
aam
repnz
pop
cmps
pop
jae
out
jbe
das
mov
or
xchg
push
jb
shr
aas
sub
cmp
jmp
inc
(bad)
mov
out
sub
lahf
aas
push
xchg
ret
cmps
retf
add
scas
stos
shr
xor
or
mov
mov
dec
daa
cs
pop
xchg
jo
out
test
popf
jb
fwait
cwde
(bad)
shl
in
outs
push
test
scas
or
mov
in
scas
pop
xlat
dec
sub
pop
add
adc
imul
cmp
add
test
jae
push
outs
dec
push
cwde
nop
mov
fdivr
call
daa
or
inc
push
enter
mov
scas
xchg
scas
xchg
push
push
push
mov
ret
pop
mov
fild
shl
call
xor
ja
aas
mov
pop
lods
(bad)
inc
rcl
lods
xor
pop
outs
mov
jg
lea
xchg
sbb
mov
imul
daa
cmps
push
xor
fcomp
pop
dec
(bad)
das
push
xor
das
ja
jmp
mov
retf
push
(bad)
dec
(bad)
mov
stos
mov
sub
iret
mov
inc
dec
stos
retf
std
test
mov
imul
mov
cmp
dec
add
xor
daa
push
jno
test
xor
jmp
or
(bad)
fisubr
jmp
sbb
es
frstor
cmps
int
pop
es
push
jno
mov
fdiv
(bad)
inc
jmp
sub
push
fild
cmp
inc
scas
xor
xchg
fild
jle
fimul
pop
ins
push
jmp
out
imul
test
(bad)
imul
xchg
dec
and
dec
pusha
cs
popa
cmps
xchg
outs
cmps
lahf
scas
sub
sub
fisub
stos
(bad)
in
adc
daa
call
stos
fst
sub
pop
pop
retf
xor
cmp
push
pop
jle
mov
and
xchg
lahf
test
pop
mov
push
dec
mov
aas
dec
sub
mov
sbb
and
or
aas
sbb
scas
cld
jb
scas
das
psraw
(bad)
gs
movs
xor
mov
mov
repnz
fbld
loop
mov
test
push
daa
mov
pop
dec
mov
cmps
cmp
dec
pop
pop
sbb
daa
outs
jne
int3
in
mov
jno
and
ins
push
outs
out
sub
arpl
out
loop
scas
jl
stos
add
js
xchg
mov
ds
enter
mov
daa
jmp
icebp
aas
es
pusha
enter
ret
or
lahf
aam
xchg
xor
mov
dec
je
fwait
sub
addr16
pusha
add
cmps
sbb
sub
lods
(bad)
lods
dec
inc
mov
inc
mov
push
fisttp
shl
cmp
sbb
mov
mov
jle
jg
lds
stos
sbb
push
outs
(bad)
ins
lods
movs
stos
daa
imul
retf
mov
push
sbb
pop
int3
add
scas
test
(bad)
in
mul
(bad)
retf
mov
loope
adc
pop
(bad)
pop
scas
xchg
or
je
push
addr16
mov
(bad)
imul
mov
mov
das
jl
cmc
in
mov
dec
sub
pop
cmp
jmp
idiv
sbb
loop
test
and
stos
test
jne
maxps
mov
mov
fiadd
in
(bad)
out
adc
arpl
or
scas
mov
jae
je
lahf
loop
mov
stos
inc
push
add
in
pushf
stos
and
and
fmul
push
add
punpckhdq
(bad)
(bad)
jb
sbb
inc
jg
(bad)
das
push
adc
jne
les
mul
fdivr
and
xchg
mov
outs
icebp
jg
mov
add
mov
pop
fld
in
mov
cmp
(bad)
pop
mov
(bad)
icebp
mov
das
xchg
sbb
mov
mov
adc
aaa
imul
shr
out
pop
icebp
outs
aas
jmp
les
add
ins
shl
jns
jmp
fwait
sub
jg
sub
jnp
mov
inc
es
cs
sahf
inc
xor
data16
jmp
aaa
cmp
mov
mov
popf
pop
cmp
not
mov
push
cli
xor
pusha
jno
push
addr16
sub
clc
gs
pop
mul
sub
adc
ret
sub
pop
sahf
je
loop
sub
les
retf
xchg
xor
pop
jg
mov
inc
add
dec
or
cdq
mov
cwde
stos
ret
ins
mov
test
xchg
not
pop
jge
push
outs
lahf
or
xor
pop
push
outs
js
cmps
push
mov
daa
loope
mov
mov
in
ja
sub
cmps
sub
aaa
fstp
mov
lds
rol
(bad)
cmps
sahf
fstp
(bad)
pop
and
nop
inc
sbb
cmp
cmp
mov
loope
out
aas
lahf
sub
xchg
sbb
rcr
jnp
(bad)
mov
jbe
xor
mov
or
daa
ret
adc
outs
ja
inc
out
fisub
sub
dec
push
test
scas
mov
and
movs
add
push
cmp
int
mov
sub
adc
push
aas
inc
data16
pop
mov
in
mov
data16
push
addr16
jae
mov
cmps
iret
(bad)
cmp
outs
stos
push
imul
mov
test
outs
mov
pop
and
ret
lock
xchg
dec
xor
mov
mov
ins
adc
retf
mov
cmp
sub
aad
(bad)
mov
jg
test
jno
fsubr
icebp
inc
sub
inc
and
push
cmp
push
imul
jae
push
push
out
in
lock
cmp
mov
retf
jg
cmp
cmps
add
and
push
pop
jns
outs
dec
outs
jo
cmp
dec
fidiv
inc
mov
jg
psrlq
test
pop
test
jae
push
stc
xor
aad
cmc
dec
cs
outs
idiv
cmp
arpl
pop
adc
mov
push
push
mov
aas
test
sbb
stos
pop
mov
outs
std
leave
cli
lods
test
test
add
outs
dec
add
je
lods
imul
addr16
mov
pop
inc
pop
pop
jne
adc
pop
mov
jmp
xchg
or
shl
out
sbb
pop
cmps
cmc
adc
xlat
jle
popa
xor
mov
jne
out
(bad)
std
xor
add
cmp
add
ret
jg
sub
sahf
pop
mov
mov
(bad)
sub
retf
cmp
(bad)
(bad)
xchg
add
aaa
jmp
aas
stos
cs
mov
mov
mov
jnp
ja
cmp
xchg
jb
enter
cmc
mov
sahf
cmps
clc
pop
(bad)
test
jmp
popf
sbb
aad
and
data16
ins
stc
stos
fstp
(bad)
xor
sbb
xchg
mov
mov
dec
rcr
or
int3
xor
cmps
fcomp
or
cmps
es
repz
stc
jge
mov
sub
fsub
sub
pop
pusha
mov
adc
test
cmp
xchg
or
mov
sbb
je
std
inc
lock
mov
dec
aad
adc
pop
jg
adc
retf
mov
push
cs
scas
mov
push
dec
cld
xchg
aaa
jmp
(bad)
pop
cs
(bad)
ja
aas
or
aaa
and
push
mov
pop
mov
loope
lds
mov
enter
(bad)
das
mov
outs
push
sub
stos
inc
inc
add
gs
xchg
cs
aas
pop
(bad)
aad
mov
jae
jg
cli
fwait
ror
(bad)
repnz
test
outs
inc
in
mov
pop
fldenv
jb
in
mov
push
mov
push
sub
loop
shl
fisub
adc
mov
jmp
cmps
add
stos
jbe
ror
and
pop
mov
aas
mov
jo
out
fmul
add
sub
sbb
sub
adc
mov
addr16
jno
or
cmps
dec
sub
(bad)
gs
lahf
push
jg
aaa
cmp
mov
js
data16
fidiv
ror
sbb
outs
daa
dec
mov
and
stos
cmp
mov
inc
ret
add
in
arpl
mov
pop
push
inc
xor
pop
mov
sub
iret
cmp
jmp
bound
cmp
mov
jne
cwd
retf
pop
(bad)
mov
mov
mov
lea
add
bnd
pop
mov
mov
pusha
sbb
mov
paddw
cmp
sbb
cmovbe
imul
add
test
mov
pop
cmps
xchg
inc
xor
in
inc
imul
mov
mov
(bad)
or
sbb
mov
mov
dec
sahf
pop
sub
sub
mov
rcl
jl
mov
xor
mov
mov
pop
inc
mov
loop
cmps
fild
cmc
cs
mov
out
fcom
test
ja
sub
push
push
pop
addr16
mov
aad
out
sub
mov
pop
dec
not
mov
or
ret
int3
out
test
sub
fst
pop
xor
xor
and
ds
rep
pop
imul
mov
ror
jnp
sub
xor
test
adc
inc
dec
dec
stc
pop
adc
stos
outs
fnstenv
dec
sbb
daa
test
outs
fcomp
das
push
cmp
pop
add
(bad)
stos
mov
imul
lea
(bad)
scas
mov
(bad)
or
and
mov
inc
lods
pop
rcr
scas
push
cmp
lahf
jmp
mov
aas
mov
sub
cmp
stos
cmp
sbb
pop
loop
pop
adc
cmps
ficom
test
sub
push
and
inc
(bad)
fmulp
sbb
out
ins
sti
sub
add
imul
mov
xchg
jge
mov
lahf
imul
call
mov
cli
push
and
push
mov
sub
imul
mov
xlat
mov
xchg
and
retf
sti
aam
(bad)
mov
mov
aas
popa
(bad)
into
adc
dec
imul
inc
scas
pop
call
jp
add
in
out
mov
mov
ja
outs
test
out
adc
rcr
aad
xor
mov
mov
shl
adc
cmp
in
aam
loope
mov
push
(bad)
mov
mov
imul
mov
aas
mov
push
sahf
(bad)
in
sti
mov
xor
mov
aas
dec
dec
push
mov
xchg
cmp
mov
pop
push
or
push
pop
(bad)
fidiv
scas
outs
and
push
test
cs
ja
(bad)
pop
cmps
nop
jo
and
mov
xor
lods
ret
mov
jl
mov
das
xchg
mov
add
retf
push
push
mov
test
enter
stos
push
jecxz
sahf
or
dec
lahf
lods
pop
std
xchg
xor
(bad)
loope
cmp
in
cmps
lods
jle
cmovg
cmp
imul
pop
stos
ja
test
pusha
jne
mov
xor
rol
cmps
ins
xor
dec
and
(bad)
fidiv
xor
inc
addr16
sbb
mov
mov
cmps
das
push
fidiv
xor
inc
retf
das
fidivr
adc
mov
cs
in
add
lahf
stos
push
aaa
scas
jno
jno
scas
lock
addr16
xor
mov
sbb
scas
ltr
inc
adc
cmc
sub
addr16
ret
sbb
stos
push
pop
mov
mov
push
stos
ror
xchg
pop
ja
jnp
cmp
stos
pop
dec
sbb
add
stos
jl
push
outs
ins
or
(bad)
outs
mov
jg
lahf
pop
jne
std
or
mov
in
jecxz
mov
outs
in
arpl
punpckhbw
adc
aaa
add
emms
adc
mov
push
rol
sub
out
inc
retf
fucom
test
loope
push
mov
rol
and
stos
pop
xor
iret
or
push
push
dec
mov
sub
jp
stos
sahf
push
dec
aas
in
stos
sar
in
xchg
xchg
sub
shr
aad
mov
test
xor
iret
mov
mov
jle
imul
fisub
xchg
jmp
ror
inc
cmp
xor
aam
inc
cmp
je
add
mov
xor
and
les
std
mov
int3
cli
and
lea
cli
pop
pop
rol
inc
sbb
cmp
mov
ins
inc
mov
imul
cli
icebp
sti
mov
fiadd
aas
adc
icebp
add
out
leave
mov
daa
xor
popf
or
in
jmp
inc
cmc
imul
div
icebp
cmp
pusha
xor
jae
sbb
adc
(bad)
lea
sahf
cmps
inc
rol
push
or
and
cmps
push
mov
fdivr
jge
daa
stos
adc
pop
(bad)
or
das
inc
mov
inc
test
jg
sbb
jbe
or
mov
mov
gs
scas
add
loop
cmp
mov
iret
pop
mov
das
adc
fsub
punpcklbw
xor
popf
stos
jp
(bad)
mov
cld
mov
cmp
gs
push
or
cmc
fs
fdivrp
fsubp
or
mov
pop
jno
(bad)
arpl
mov
out
lahf
(bad)
cmp
out
movs
or
fcom
icebp
rcr
sub
pusha
imul
arpl
jb
and
(bad)
imul
dec
(bad)
and
sahf
loop
shr
addr16
in
dec
fiadd
je
jp
(bad)
dec
loop
cmp
ror
and
fwait
dec
xchg
stc
pop
dec
push
and
xchg
push
pusha
cmps
retf
push
and
repnz
xchg
sbb
in
pushf
mov
mov
mov
mov
test
adc
cmp
imul
mov
push
jmp
xor
fisubr
fild
scas
sub
ds
pop
in
cmps
push
lods
jg
call
movs
dec
lahf
ins
fisubr
outs
mov
outs
inc
jo
outs
mov
jl
das
arpl
mov
mov
jg
xchg
inc
sbb
jg
shl
mov
jmp
inc
xchg
mov
mov
imul
xor
iret
cs
sbb
push
xchg
cmp
aas
mov
mov
sbb
xlat
sub
aas
gs
out
pop
outs
(bad)
outs
scas
test
inc
pop
pop
add
or
mov
mov
cmp
xor
cmps
ja
fdiv
sahf
test
mov
pop
adc
jmp
mov
xchg
mov
xchg
mov
mov
xor
sub
fwait
(bad)
mov
jge
mov
iret
pushf
addr16
add
sub
xchg
leave
jg
jmp
jne
out
bnd
cs
xchg
xchg
dec
outs
icebp
sbb
push
repnz
ficomp
dec
dec
test
mov
ficomp
add
inc
sub
outs
(bad)
push
adc
stos
lods
out
inc
movs
(bad)
call
push
push
dec
jmp
adc
push
ficom
cmp
fdivp
mov
pop
dec
sub
push
dec
cmp
pushf
lods
repnz
mov
inc
ds
rcr
in
sahf
shl
inc
pop
scas
mov
mov
shl
mov
and
(bad)
jnp
push
adc
xchg
mov
mov
daa
sub
in
into
in
add
addr16
mov
and
aas
xchg
je
scas
cli
inc
push
das
loop
dec
imul
cs
fst
cli
jg
or
pop
stos
call
xor
inc
not
ja
inc
outs
outs
xchg
loope
xchg
scas
mov
pop
mov
not
fisubr
fnstsw
xor
das
pop
sub
xor
pop
fiadd
adc
out
out
stos
mov
aas
mov
(bad)
and
outs
sub
mov
cli
pusha
adc
inc
movs
push
mov
sub
aad
cmps
push
push
sub
clc
cli
ret
(bad)
mov
pop
cli
cs
sbb
outs
pop
sahf
cdq
test
mov
out
xchg
sub
daa
push
mov
or
test
sub
sar
dec
in
loop
cs
(bad)
(bad)
or
pop
inc
mov
cmps
outs
lahf
adc
sub
setbe
pop
and
xor
ror
dec
mov
xchg
mov
cmps
push
and
data16
inc
sbb
int3
jmp
xor
pop
sub
jae
gs
and
mov
xchg
mov
lds
jns
and
cmps
data16
shl
int
lahf
(bad)
mov
adc
out
push
mov
cmp
(bad)
fiadd
mov
mov
pop
jb
jmp
jae
sub
sub
pusha
inc
fsub
xor
add
or
lahf
mov
push
cmp
mov
push
das
div
pop
je
adc
and
(bad)
stos
xchg
gs
repnz
xchg
out
cmp
retf
enter
xor
imul
ss
mov
xor
call
or
mov
inc
mov
(bad)
and
out
adc
dec
adc
scas
cmp
cmp
xor
jmp
scas
xchg
in
cmp
aas
jle
leave
pop
scas
dec
mov
dec
out
movs
nop
aam
fwait
dec
cmps
xor
mov
jle
xchg
stos
jbe
sub
fsubr
push
stos
fimul
xchg
xchg
sar
push
test
xchg
mov
aas
and
shl
mov
int3
(bad)
in
js
mov
sub
stos
cmps
xor
pusha
or
mul
add
sub
(bad)
test
mov
nop
movs
jecxz
jo
cli
aas
add
add
mov
je
mov
sti
mov
repnz
scas
cmps
js
pop
jmp
fisub
call
jne
jae
shl
in
cmps
mov
cmps
mov
mov
sub
pop
nop
in
lea
xchg
xchg
dec
pop
adc
in
dec
(bad)
int3
clc
adc
dec
inc
(bad)
cmp
je
push
aas
iret
xor
jo
sbb
sar
push
push
lods
jle
aam
inc
jp
retf
mov
scas
out
dec
or
mov
cmps
push
pusha
(bad)
outs
fidiv
pop
pusha
iret
icebp
outs
adc
cld
mov
pop
lahf
nop
lahf
test
pop
je
(bad)
mov
jbe
dec
outs
push
dec
lahf
cmps
movs
popf
and
fisubr
push
sub
addr16
mov
das
mov
das
not
sbb
inc
ds
mov
adc
cmp
mov
and
mov
cmps
xor
cmc
aad
fnsave
mov
(bad)
jns
lahf
mov
sbb
imul
pop
jo
daa
repz
js
jae
dec
sub
xchg
sub
push
sub
pop
pop
push
push
sbb
sub
(bad)
movs
fiadd
daa
loop
xor
sub
stc
xor
ds
cmp
in
cmp
push
sub
shr
adc
movs
xor
aas
cmps
cmp
push
out
dec
cmc
in
neg
push
lahf
aas
mov
mov
sbb
es
pop
mov
dec
pop
cmps
lods
cld
addr16
or
xchg
xor
jns
ins
pop
adc
lds
cmp
mov
imul
aad
xor
pop
std
mov
dec
movs
pop
mov
lods
lahf
xchg
imul
cli
pushf
iret
mov
dec
outs
mov
pop
(bad)
push
cs
cwde
or
(bad)
(bad)
imul
(bad)
(bad)
inc
cmps
shl
or
push
mov
test
add
add
pop
mov
sub
mov
ret
add
(bad)
xchg
cs
push
pop
sub
mov
pop
movntq
stos
adc
sub
cmp
xor
adc
or
or
jae
mov
adc
out
xchg
mov
mov
imul
stos
push
fisttp
lods
pop
add
mov
out
mov
(bad)
xchg
outs
mov
xchg
imul
add
movntps
movs
inc
stos
pop
test
jno
aas
data16
es
and
loop
ror
aaa
push
movs
mov
xlat
arpl
lahf
aaa
mov
add
pop
cs
xor
je
sub
es
cmp
cmp
gs
inc
(bad)
lds
jno
inc
fild
mov
scas
lea
adc
scas
push
pusha
test
jmp
xchg
int3
jg
inc
push
and
aas
cmps
xor
outs
dec
sahf
sbb
pop
lahf
je
mov
outs
adc
int
or
xor
mov
or
cmps
mov
jge
fbstp
ret
lahf
or
pop
cmps
sbb
icebp
out
aas
outs
mov
dec
cmps
cwde
(bad)
jl
das
sbb
inc
shl
icebp
aaa
lahf
lahf
outs
(bad)
fdivr
mov
addr16
adc
fs
lods
pop
leave
xor
test
dec
outs
mov
aaa
and
in
das
xchg
aas
adc
cmps
movs
inc
addr16
mov
push
mov
je
jnp
mov
push
scas
(bad)
loop
push
enter
mov
pop
es
sub
cmp
mov
fcomp
or
mov
pop
scas
jb
scas
sub
in
fiadd
fisubr
mov
cmp
pop
fsub
cmp
test
outs
stos
fcomp
push
int
xchg
mov
fs
jae
ss
inc
adc
jns
or
(bad)
sti
pop
jmp
xor
stos
stos
sti
and
stos
ror
scas
rcr
dec
hlt
(bad)
mov
mov
mov
fs
lahf
push
sub
cmp
je
ds
call
fimul
push
mov
jge
jle
xor
lods
mov
scas
stos
mov
mov
(bad)
lea
cmps
or
push
fdivr
xchg
cmp
and
add
fwait
dec
pusha
cmps
icebp
movs
mov
push
mov
mov
loop
xor
(bad)
push
xchg
imul
mov
das
mov
movs
cmp
ror
les
lahf
cmps
sub
add
jne
mov
paddb
sar
adc
retf
sub
mov
cmp
pop
dec
xor
mov
dec
outs
add
cmp
fdivr
movs
dec
push
jl
movs
xchg
daa
test
neg
imul
cld
jl
(bad)
mov
stos
fst
outs
icebp
(bad)
mov
cli
cmp
xsha1
cmps
or
push
adc
pop
cmp
fidivr
or
and
mov
ret
push
lds
ja
ins
mov
lods
xor
add
fsubp
aaa
or
push
in
push
mov
jae
ror
push
loop
pop
pusha
addr16
or
mov
sub
movs
aas
je
jae
jp
icebp
mov
jmp
stc
retf
(bad)
mov
test
test
imul
(bad)
dec
je
sbb
outs
std
aas
jb
mov
xchg
jbe
adc
ja
leave
rcr
cmp
sub
ja
add
cmps
mov
mov
loop
xchg
and
lahf
cwde
test
(bad)
pop
xor
rol
ja
cmp
std
xor
add
adc
pandn
popf
cmp
pop
pop
xor
sbb
lahf
sub
outs
or
imul
jmp
addr16
mov
sti
std
fnsetpm(287
sub
out
cs
xchg
xchg
pop
or
addr16
and
in
aaa
cmps
add
shl
lods
xchg
out
addr16
jbe
ins
dec
sbb
mov
cmps
aaa
mov
push
mov
adc
and
outs
sub
cmp
scas
cs
push
ret
test
outs
mov
jle
xchg
mov
mov
div
inc
idiv
loop
cmp
and
pop
dec
mov
ss
pop
mov
imul
sbb
inc
fbld
ret
in
push
lahf
scas
pop
adc
mov
movs
in
les
pop
(bad)
stos
pop
xchg
jb
add
mov
mov
fild
cmp
adc
xchg
push
mov
push
mov
push
outs
mov
jbe
nop
push
das
out
and
int
out
mov
or
cmps
dec
xchg
sub
stos
std
mov
ins
pop
xchg
das
cmp
pop
out
and
addr16
pop
xor
movs
jg
fldenv
(bad)
sbb
pop
stos
bound
nop
dec
mov
add
push
mov
xor
jmp
mov
sub
mov
enter
sbb
mov
dec
push
mov
imul
pop
aam
mov
mov
cmps
jg
sub
aas
popf
pop
cmps
mov
ins
xor
les
(bad)
pop
jle
mov
out
lahf
cmps
pop
pop
fld
push
sub
cmps
push
pop
into
push
or
and
test
adc
sbb
fstp
es
dec
mov
out
add
pop
pop
push
mov
sub
into
ja
mov
pop
cmps
xor
scas
fnsave
mov
add
lahf
mov
arpl
xor
neg
aas
nop
cmp
jg
or
in
stos
fnstsw
cs
sbb
aas
sub
aas
push
retf
sub
mov
(bad)
sub
jbe
or
mov
imul
and
je
syscall
xor
aas
(bad)
gs
out
jno
out
mov
ins
push
test
repnz
push
mov
jae
outs
xchg
jl
add
nop
mov
sbb
inc
addr16
cli
cmps
push
daa
xor
cmps
mov
std
ja
aaa
inc
adc
aaa
outs
repz
repnz
jg
daa
cmp
(bad)
out
push
div
(bad)
mov
(bad)
nop
popa
cli
add
(bad)
(bad)
daa
push
sub
aas
or
xor
pop
mov
lods
repnz
call
cmp
jns
mov
cmc
mov
jge
mov
pop
in
fisubr
in
mov
out
jne
imul
test
ja
dec
pusha
push
imul
sub
cmp
sub
sub
mov
ret
stos
push
cld
outs
fsub
cs
push
stos
ja
sub
cmp
out
push
push
gs
push
jmp
push
and
pusha
push
aam
das
lahf
sub
xchg
imul
daa
xor
add
movs
mov
mov
cli
adc
movs
sbb
mov
and
mov
inc
mov
fimul
mov
mov
jne
and
fsubp
jge
xchg
test
data16
adc
push
xchg
cmp
jle
out
cmp
hlt
out
sub
sub
jl
mov
dec
xor
movs
test
jg
cwde
call
sahf
sbb
dec
ja
cmps
mov
shr
cmp
jbe
aas
add
xor
sbb
retf
imul
mov
and
imul
es
xlat
lods
pop
sahf
push
mov
leave
add
pop
aas
pop
pop
rcl
pop
mov
lds
mov
fwait
outs
mov
aas
pop
cmp
pop
ficom
jg
movups
mov
int3
rcl
mov
and
(bad)
mov
pop
outs
dec
iret
les
ret
xor
test
pop
add
inc
test
mov
stos
dec
dec
cdq
iret
icebp
(bad)
out
sub
sbb
dec
push
cwde
mov
sbb
cmp
iret
adc
dec
cmps
pop
add
jbe
js
mov
mov
outs
lahf
mov
jle
or
adc
imul
ror
inc
scas
pop
test
xor
outs
movaps
shl
ins
jl
fimul
xor
lds
aas
leave
out
call
imul
lods
or
nop
pop
and
imul
fdivr
ins
lahf
mov
in
cmp
ja
adc
jo
sbb
sub
outs
cmp
mov
das
loop
and
pop
cvtss2sd
div
fwait
cmps
loope
sub
ja
outs
(bad)
cmp
or
pop
xor
xchg
call
sti
cmp
loop
stos
fsubr
mov
popa
hlt
and
cmp
mov
lahf
mov
outs
or
jecxz
and
push
or
mov
stos
mov
jae
cmp
imul
and
mov
fisttp
scas
out
sbb
or
or
adc
mov
pop
mov
in
fwait
data16
not
arpl
outs
in
and
jmp
sbb
push
aam
jnp
fisubr
in
data16
bnd
sahf
xchg
sbb
popf
inc
sub
cmp
iret
ss
outs
scas
int
add
and
pop
repz
ficomp
mov
movs
ins
jg
xor
(bad)
out
cmps
mov
inc
test
cmps
mov
fs
sahf
stos
arpl
aaa
lea
test
lahf
gs
add
stc
pop
arpl
lahf
ds
outs
sbb
lahf
ins
mov
jmp
mov
xor
cmps
dec
mov
loope
mov
inc
addr16
lea
mov
push
lds
outs
mov
cdq
pop
scas
dec
jns
inc
sbb
sub
xchg
cmp
jmp
cli
repnz
(bad)
jecxz
push
xchg
movs
dec
(bad)
sbb
jns
jbe
addr16
fs
push
inc
dec
sbb
and
sti
xchg
adc
or
xchg
jg
out
test
xchg
sbb
pop
ins
push
pop
push
fmulp
jmp
test
fnsave
ficom
gs
stos
pop
adc
jno
test
cmp
xor
mov
mov
imul
fwait
mov
add
sbb
push
xor
jecxz
xchg
iret
ja
or
jmp
dec
daa
sbb
pop
inc
aaa
xchg
setnp
mov
scas
addr16
or
jmp
xchg
pop
mov
cdq
push
inc
lahf
add
lea
test
jne
in
push
adc
loop
cmp
out
push
(bad)
test
movs
jb
pop
arpl
inc
or
cmp
leave
dec
dec
inc
mov
mov
mov
mov
inc
in
push
and
fwait
test
lock
xchg
jnp
pop
mov
or
jmp
adc
push
mov
mov
call
in
aas
(bad)
outs
push
arpl
mov
and
ja
ror
xorps
and
sbb
sbb
mov
push
aaa
cli
jno
xor
lea
jl
aam
mov
mov
lods
loop
xor
scas
and
out
jmp
sub
inc
out
lahf
inc
inc
aad
adc
push
je
inc
cld
stos
ja
bound
addr16
jg
or
xor
js
push
mov
mov
cld
fwait
mov
mov
mov
std
xchg
cmp
or
cli
pusha
cs
mov
or
cmc
jb
sub
xor
cmp
cdq
lods
or
hlt
leave
push
and
daa
lahf
shr
sub
scas
jmp
mov
daa
dec
aas
xlat
int3
mov
(bad)
mov
fwait
jle
repnz
cmps
js
shl
sahf
add
push
outs
imul
lds
idiv
fst
aas
xchg
sti
sub
cmp
loopne
mov
or
sbb
mov
fcom
push
imul
mov
dec
sbb
ins
ja
mov
lds
into
push
jb
push
pop
lahf
sbb
cmp
inc
hlt
mov
jbe
sub
movs
dec
punpckhbw
pop
add
mov
adc
mov
fs
nop
push
mov
dec
or
pop
lods
dec
mov
cmps
pop
or
icebp
sahf
pop
xchg
addr16
das
test
sbb
retf
mov
cmps
push
push
dec
sub
ret
(bad)
add
out
addr16
xchg
dec
repz
(bad)
xchg
outs
inc
jnp
aam
xchg
test
and
shl
jmp
das
cmps
in
mov
cmp
push
sbb
mov
cmps
jb
xor
or
loop
mov
not
mov
xor
lahf
cmp
shl
scas
adc
cli
daa
inc
pop
push
data16
sahf
add
repnz
retf
(bad)
lahf
add
jg
fbld
aad
into
jmp
std
sbb
mov
sub
test
aas
scas
sub
dec
push
idiv
xor
rcl
push
imul
xlat
lea
sub
fist
lea
movs
int
sub
sbb
loop
push
lea
ja
in
jae
jecxz
mov
xchg
xor
pusha
sub
mov
sub
imul
mov
mov
iret
inc
test
mov
fcom
mov
mov
push
lahf
inc
js
push
es
dec
mov
mov
lds
scas
pop
push
ins
push
cmp
fwait
push
push
mov
mov
adc
cs
mov
aas
xor
lahf
sub
sti
push
into
(bad)
idiv
jno
out
jb
mov
xcrypt-cfb
cmps
movs
jle
sub
cmps
mov
nop
stos
sar
aad
stos
mov
(bad)
aas
imul
pusha
cs
push
aas
lods
push
mov
mov
cwde
ss
out
adc
iret
sub
or
inc
push
mov
add
fidiv
xor
outs
jg
mov
inc
mov
push
(bad)
cmp
not
aas
scas
pop
pushf
push
pop
xchg
stos
dec
and
out
stos
aas
ss
jl
test
pop
mov
mov
lods
jb
out
icebp
sub
adc
jmp
push
stos
loop
js
fwait
cmps
mov
mov
jb
lahf
mov
addr16
pop
sahf
jne
push
xchg
xchg
cmps
pop
movs
inc
daa
inc
clc
mov
push
stos
add
mov
stos
sbb
cs
shl
and
push
ja
adc
push
(bad)
jmp
and
stc
in
jg
adc
out
(bad)
hlt
outs
int
outs
call
xchg
scas
xchg
aaa
cdq
ss
mov
inc
aas
xchg
mov
stos
(bad)
mov
ja
push
xchg
gs
das
mov
fst
push
popf
xor
jmp
leave
(bad)
es
loop
push
movs
lods
jp
pop
dec
enter
lahf
leave
rcl
lods
adc
pop
cmp
mov
jp
inc
push
mov
pop
scas
aaa
pop
push
add
jg
push
pop
sahf
dec
pop
stc
jg
shl
lea
or
sahf
xor
and
sbb
and
push
xchg
repnz
xchg
sub
and
lahf
int3
mov
retf
ret
aas
cli
push
fild
pop
in
adc
pop
in
mov
inc
mov
lahf
jge
data16
mov
mov
xchg
cmp
lahf
mov
shl
imul
mov
sbb
dec
imul
repz
dec
out
xor
js
mov
jge
sub
sub
shl
nop
dec
xor
cmps
aas
ror
sub
in
inc
inc
pop
xchg
push
js
xchg
push
push
aas
xor
or
mov
pop
loop
arpl
cmp
or
cmp
pop
inc
and
dec
out
stos
ja
daa
inc
call
cmps
xor
jge
retf
sbb
(bad)
int
mov
pop
retf
stos
rcl
xchg
test
loope
mov
test
add
cs
das
cmps
stc
xchg
fwait
push
cmp
jle
jae
cli
push
sub
mov
inc
sar
cs
pop
xchg
push
rol
(bad)
jnp
and
lea
movs
lds
cs
dec
es
sub
pop
jg
xchg
fist
sbb
popf
ja
imul
pop
add
mov
xor
hlt
mov
xor
mov
pop
mov
push
sub
add
jne
out
sub
sbb
daa
cmps
cmc
fbstp
arpl
or
sub
jne
mov
or
inc
cmps
mov
sub
xchg
jo
cmps
fisub
inc
dec
(bad)
ja
cld
gs
div
std
imul
sub
leave
mov
mov
fwait
lahf
xlat
mov
imul
aaa
fldenv
mov
aaa
out
ret
mov
xor
or
out
les
pop
imul
jnp
cmps
ins
push
nop
push
lods
imul
add
cmps
pop
in
sub
(bad)
aaa
push
test
jo
add
popa
das
push
pop
addr16
sti
and
xchg
daa
outs
rol
and
sub
pop
pop
pushf
adc
sub
xor
jne
push
jno
mov
aam
xchg
lea
mov
neg
jge
xor
pusha
outs
mov
sub
inc
lds
mov
lea
addr16
iret
aas
stos
add
or
(bad)
mov
sub
dec
ins
dec
out
lds
das
mov
pop
icebp
imul
push
aam
inc
sub
retf
mov
pop
inc
(bad)
ret
mov
(bad)
jne
inc
mov
push
dec
into
and
mov
das
sub
jno
sahf
stos
mov
xor
outs
or
(bad)
cmps
popa
fld
lods
imul
sub
mov
std
and
popw
aam
movs
call
pop
xor
mov
xchg
xchg
jmp
mov
cmps
retf
pop
push
mov
cmp
fisttp
push
mov
or
in
adc
pop
sub
sub
cmp
sbb
(bad)
es
aad
or
and
push
es
ss
lods
push
xchg
lahf
fisttp
pop
loopne
ror
inc
jecxz
cmp
pop
sub
mov
ins
lds
sub
add
sub
leave
or
or
repnz
pop
mov
xchg
xchg
inc
gs
jae
sub
add
daa
test
jge
add
dec
pop
push
xchg
sub
and
outs
scas
inc
or
mov
dec
adc
outs
and
lahf
push
sbb
push
fmulp
inc
xchg
mov
xchg
out
xchg
fwait
cvtdq2ps
das
xchg
dec
stos
jne
sub
mov
mov
lds
fild
inc
jae
pop
xchg
jecxz
jns
jg
xor
sahf
fisubr
pop
(bad)
dec
mov
sahf
jb
in
ss
mov
fist
addr16
add
cs
xchg
add
cmp
push
mov
mov
aas
jo
xchg
sub
mov
cmps
dec
push
daa
push
mov
xchg
jne
xchg
imul
aad
push
xchg
inc
cmps
add
sub
bndstx
mov
je
std
add
les
cmps
mov
addr16
mov
fnsave
cli
jo
xchg
into
xchg
xchg
lds
inc
and
les
retf
pop
xor
mov
mov
add
adc
mov
push
sub
pop
ss
xchg
ss
inc
mov
jns
jl
mov
test
mov
(bad)
adc
lahf
inc
cmp
push
fst
js
xchg
das
cmps
jo
jge
sub
(bad)
scas
jmp
imul
sbb
jnp
packssdw
xlat
dec
imul
mov
not
enter
sub
aas
hlt
or
push
mov
mov
sbb
or
movs
stos
inc
scas
outs
lahf
and
aad
jnp
sub
cdq
or
lock
or
or
(bad)
scas
fdivr
xchg
sbb
das
cs
jb
push
and
dec
mov
clc
mov
test
loop
jmp
(bad)
out
ins
ds
dec
sbb
jmp
lahf
jae
aam
lahf
das
lods
jne
retf
cmp
mov
ins
dec
sbb
ud1
lahf
aas
sub
jae
or
cmps
aam
scas
idiv
inc
xchg
fs
dec
fdiv
xchg
aas
(bad)
cmp
cmps
mov
xor
cwde
nop
es
out
rcr
push
or
push
(bad)
xchg
dec
aas
inc
xlat
fsubr
lods
dec
xor
dec
outs
inc
sbb
push
cmp
pop
sbb
jmp
xchg
jo
sub
xor
rol
out
movs
and
mov
inc
mov
mov
xchg
jno
movs
mov
mov
sahf
push
mov
xchg
dec
pop
xchg
sahf
and
loop
in
inc
push
xchg
mov
mov
fidiv
mov
cmp
cmps
xchg
inc
push
fisubr
idiv
sub
dec
cmp
out
cmp
mov
das
js
push
ret
jecxz
fimul
cmp
and
mov
xchg
xchg
push
test
icebp
mov
icebp
mov
pop
addr16
mov
arpl
mov
jmp
icebp
stc
push
fidivr
ins
movs
or
(bad)
out
inc
sbb
inc
test
out
fidivr
sbb
aad
daa
in
retfw
outs
pop
add
xchg
inc
outs
imul
imul
stc
lods
pop
cmp
push
xchg
outs
ficomp
xor
test
outs
je
sbb
push
xchg
fcmovu
sbb
scas
push
mov
adc
push
rcr
jno
add
mov
test
sahf
mov
push
or
sub
ret
push
mov
fisubr
repz
xor
pop
fisttp
cmc
in
mov
push
xchg
iret
loopne
xor
push
dec
ins
push
or
fisubr
ret
outs
add
xor
inc
jmp
mov
inc
mov
repz
sbb
daa
pusha
rol
(bad)
(bad)
mov
xchg
mov
fbstp
imul
mov
cmps
pushf
daa
sub
sahf
aad
std
add
(bad)
outs
in
ins
xor
mov
or
sub
pop
push
mov
popa
sub
mov
jp
scas
pop
xor
inc
test
add
and
jo
aas
push
neg
jo
mov
outs
xor
mov
cmp
aas
lods
cli
repz
das
outs
retf
in
sbb
lock
shr
mov
adc
dec
jg
mov
daa
stos
bound
outs
stc
addr16
outs
outs
adc
and
jns
add
outs
xor
cmps
pushf
mov
shl
(bad)
mov
mov
sar
adc
xor
mov
cs
in
neg
cmp
(bad)
jg
cmp
cmp
jbe
mov
push
lahf
xchg
arpl
mov
outs
jg
mov
ja
mov
jp
cmp
jns
pop
dec
aam
dec
xlat
push
imul
pop
les
(bad)
cmps
xchg
mov
or
cmps
addr16
push
mov
test
inc
aas
adc
xchg
ret
add
push
fild
aas
xor
or
push
retf
pop
push
and
std
dec
jmp
in
mov
int
scas
jo
dec
aam
push
push
inc
scas
icebp
sbb
mov
inc
mov
shl
push
mov
mov
(bad)
xchg
int3
jp
and
sbb
retf
scas
xchg
fiadd
push
ja
push
cwde
dec
addr16
cmps
shl
jg
in
aas
mov
mov
shl
dec
jae
fisub
mov
inc
stos
pop
pop
es
sub
cmp
movs
and
sahf
dec
jae
cmp
lea
xchg
pop
mov
sbb
jp
dec
mov
es
rcl
ret
push
andps
push
mov
jg
(bad)
cmp
jae
sub
push
sub
xor
pop
sub
xchg
je
outs
sbb
dec
popf
frstor
arpl
push
jae
pusha
leave
sub
cmps
and
mov
movs
pop
(bad)
ja
jns
das
push
test
arpl
div
xlat
(bad)
clc
retf
mov
sahf
or
adc
inc
and
cvtdq2ps
push
xchg
cmp
mov
push
cmp
mov
jg
jae
sub
cmps
mov
test
pop
pushf
mov
(bad)
imul
shr
push
pop
outs
call
scas
inc
outs
push
adc
mov
pusha
sub
add
stos
inc
stc
scas
mov
outs
outs
mov
push
pop
xchg
(bad)
pop
(bad)
mov
retf
or
cmps
outs
pop
cmp
lods
sub
(bad)
inc
leave
dec
into
outs
sub
call
sub
mov
aaa
sub
lea
movs
pop
fldcw
mov
stos
mov
inc
cld
cli
jo
xchg
jb
jl
imul
mov
lea
cmps
xor
dec
sub
sub
sbb
dec
fild
loop
mov
bound
push
sub
mov
inc
(bad)
sub
fimul
mov
mov
add
mov
push
es
sub
ins
fdiv
mov
ds
div
or
jno
(bad)
aas
mov
call
inc
push
jg
add
xchg
outs
sub
xor
mov
jp
bts
mov
xchg
into
and
inc
mov
cmovg
adc
cmp
push
stos
test
test
stc
retf
cmp
iret
sub
fst
daa
aaa
outs
mov
neg
cmp
mov
pusha
pop
add
stos
xor
mov
ins
dec
cmp
scas
mov
mov
ins
cmp
jne
mov
push
add
mov
ficomp
aam
not
and
jmp
not
cmps
cmp
imul
push
test
add
das
mov
mov
cli
sbb
(bad)
iret
fldcw
xor
xor
stos
or
dec
sbb
push
mov
iret
and
out
cmps
mov
mov
sbb
bound
pop
addr16
fld
loop
stos
test
sbb
add
mov
out
cmp
outs
ss
sbb
xor
xor
fnstcw
scas
mov
movs
mov
stos
sub
ins
push
pop
dec
adc
mov
das
sub
cmp
jbe
movs
sub
xchg
mov
sub
in
xor
sbb
out
test
mov
sub
pop
jo
add
sbb
mov
scas
mov
stos
pop
imul
cmc
push
lea
mov
adc
test
outs
mov
mov
or
mov
jne
lods
retf
lea
pop
sti
xor
dec
jle
fsubr
push
mov
mov
scas
mov
in
inc
mov
loope
jmp
xchg
push
daa
aam
mov
jae
mov
jl
idiv
sub
ins
pushf
xchg
dec
inc
movs
arpl
cmp
aas
jg
xor
inc
push
(bad)
sbb
or
xor
adc
retf
in
repnz
leave
shl
mov
cmp
pop
sbb
fwait
popa
out
xor
xchg
mov
mov
fidivr
mov
add
push
loop
out
xchg
lds
stos
and
(bad)
in
mov
xchg
sub
mov
mov
pop
jnp
mov
shl
icebp
mov
fmul
jg
jb
bt
push
cmp
adc
outs
or
dec
fs
das
pop
or
jle
das
aas
push
jbe
pop
mov
rcl
dec
stos
mov
aam
dec
push
jne
adc
add
mov
xlat
cmp
add
in
mov
stos
mov
push
xor
pop
and
ret
in
orps
inc
lahf
mov
stos
jle
cld
mov
cmp
ds
aam
das
or
mov
div
cmps
repz
lds
push
adc
jge
mov
xchg
cli
scas
mov
dec
mov
not
lea
xor
outs
cwde
(bad)
lds
int3
test
(bad)
fnstcw
js
sub
stos
mov
fisttp
mov
sbb
dec
outs
jns
(bad)
fisubr
shl
addr16
stos
adc
inc
lahf
hlt
xchg
xor
lahf
pushf
add
scas
xor
fcmovnbe
fwait
mov
or
xor
repnz
loop
mov
stos
outs
mov
push
out
mov
inc
fidiv
cmps
mov
pop
div
push
adc
test
movs
jmp
mov
(bad)
mov
aaa
fwait
fs
xor
nop
movs
sbb
jl
pop
push
push
pop
sub
addr16
or
std
pusha
mov
stos
out
lea
cmps
and
dec
frstor
sub
sahf
sub
adc
mov
fldenv
xchg
stos
pop
mov
adc
(bad)
(bad)
ret
and
adc
lahf
test
or
add
and
push
adc
dec
ret
cmp
adc
gs
add
leave
fisubr
ss
lods
rol
mov
dec
xor
add
jns
xchg
push
push
pop
pand
sti
adc
mov
mov
mov
scas
xor
cmp
adc
jnp
lahf
sub
gs
xchg
cld
push
jle
popa
in
imul
push
(bad)
jmp
or
lea
and
or
pop
or
imul
add
lahf
nop
mov
jmp
cld
jae
out
sbb
ja
outs
cs
test
lea
data16
dec
push
dec
mov
loop
adc
retf
sub
fidivr
or
(bad)
loop
fisub
es
inc
in
out
cmp
imul
(bad)
cmps
or
in
xchg
stos
jmp
daa
ins
inc
sbb
pop
out
mov
mov
clc
pop
cmps
mov
sub
lea
(bad)
arpl
cmp
in
inc
js
adc
mov
cmps
dec
lock
cmps
aaa
js
jl
push
mov
mov
pop
jnp
cmps
daa
cmp
xor
push
out
fmulp
adc
lock
dec
sahf
mov
inc
aas
sbb
mov
mov
mov
outs
push
int
dec
daa
inc
sub
paddd
(bad)
sar
inc
cdq
cmc
cmp
inc
mov
ror
movs
retf
jo
(bad)
outs
in
inc
(bad)
jle
xor
loop
(bad)
(bad)
cmc
or
xor
cli
cmps
or
xchg
lods
jg
test
fisttp
shr
adc
idiv
mov
test
das
lea
mov
mov
lea
out
sub
pop
cs
(bad)
(bad)
jl
pop
rol
add
jecxz
xchg
adc
pop
jl
mov
ja
sti
jo
arpl
loop
mov
ds
mov
fsub
xchg
mov
cmp
cmp
aam
jmp
or
mov
shl
mov
pop
jg
cli
and
jge
jmp
out
pop
cmps
xchg
jne
je
fidivr
cdq
(bad)
jg
imul
lea
cmps
inc
stc
imul
mov
pop
sub
ret
int
cmp
ins
mov
bound
sbb
adc
movs
ja
inc
stos
dec
loop
push
or
outs
popa
movs
in
fidiv
dec
ja
pop
mov
mov
sahf
jl
mov
cmps
pushf
xor
jg
sbb
mov
push
ins
mov
div
out
jno
ds
adc
mov
mov
out
mov
fs
pop
mov
mov
pop
setno
push
bound
out
adc
xor
push
sbb
ficomp
cs
push
xor
add
ins
(bad)
aas
xor
outs
div
jecxz
stc
popf
pop
fs
pusha
push
or
mov
sub
out
mov
daa
aaa
ja
cmp
inc
stos
in
fidiv
cs
imul
sbb
push
push
mov
push
lods
inc
mov
repz
loope
imul
mov
test
(bad)
shr
ret
mov
mov
mov
in
or
and
mov
mov
(bad)
push
movs
cwde
pop
mul
lahf
test
xchg
inc
cwde
cmp
or
lahf
push
fbstp
push
dec
aaa
lahf
inc
jbe
jae
je
imul
mov
push
inc
daa
scas
ficom
inc
popa
inc
and
mov
daa
pop
mov
mov
and
mov
mov
ud1
rcr
adc
jnp
pop
(bad)
push
pusha
out
out
movs
mov
sbb
mov
add
mov
dec
pop
sub
cli
xchg
adc
rcl
xor
lds
pop
mov
fidiv
sbb
fldcw
dec
pop
lahf
dec
cmp
scas
mov
lahf
pop
outs
shl
arpl
push
jae
movs
nop
in
xadd
push
addr16
out
mov
push
inc
lds
aas
cmc
mov
push
das
shrd
dec
inc
sub
fisttp
fsub
movs
popa
daa
inc
dec
sub
popa
add
push
bound
jae
sbb
sub
jg
jno
pop
aaa
sbb
shr
add
frstor
or
mov
pop
cmc
mov
dec
mov
(bad)
fstp
fisttp
(bad)
mov
pop
movs
push
sbb
push
inc
and
int
mov
fistp
xor
rcr
or
sub
adc
aaa
movs
fwait
shr
adc
push
shl
cmc
push
jnp
loope
in
mov
cli
and
jmp
pop
mov
test
and
mov
push
sub
sar
lock
dec
aas
cmps
outs
jmp
pop
in
mov
scas
mov
sbb
xchg
fimul
jo
jl
xor
mov
mov
pop
lahf
mov
cmp
(bad)
adc
cmp
test
ds
stos
xor
add
or
test
retf
popf
cwde
scas
mov
in
not
daa
scas
frstor
mov
aaa
(bad)
fdivr
adc
or
mov
test
fs
and
(bad)
dec
inc
adc
mov
fidivr
pushf
shl
or
xor
sub
fcomp
cld
icebp
pushf
jg
lahf
sbb
and
mov
(bad)
cmp
xchg
and
cmp
rcl
repnz
in
aad
test
pop
add
adc
sub
mov
(bad)
je
sbb
imul
sub
jo
cmp
ret
sub
sub
bound
mov
xchg
outs
or
sub
imul
pop
dec
push
sub
mov
femms
cmc
das
lods
xchg
mov
inc
mov
clc
outs
mov
retf
cmps
stc
cmc
jp
sub
add
dec
jmp
cmp
lods
xchg
mov
mov
mov
scas
adc
fidivr
sub
xlat
mov
add
mov
inc
(bad)
sar
imul
sub
sti
push
pop
cmps
pop
nop
pushf
inc
sub
psrld
addr16
clc
xor
lahf
and
dec
test
retf
add
cmp
mov
pop
ja
push
aad
pop
mov
leave
pminub
jmp
fbstp
cmc
jl
sub
sub
loope
xlat
sbb
push
cmps
outs
and
js
and
imul
push
cmp
jnp
mov
(bad)
fcomp
sub
fimul
(bad)
ins
cmp
mov
stos
jnp
jno
add
scas
pop
inc
lock
mov
and
sub
dec
xchg
movs
fiadd
aas
out
sbb
mov
out
jae
stos
mov
mov
push
mov
pop
ret
pop
out
xchg
cmc
xchg
xchg
cmps
repz
dec
lods
jg
xlat
aam
mov
lahf
cmc
fdivr
mov
push
(bad)
mov
inc
xor
fld
lahf
(bad)
call
in
jle
lahf
and
std
out
out
jp
shl
(bad)
stos
outs
xchg
xor
std
inc
test
test
out
fisubr
in
mov
daa
test
sub
or
mov
sub
jmp
shr
mov
retf
fild
inc
ret
imul
add
repnz
xchg
push
mov
inc
out
fiadd
mov
jmp
xchg
dec
mov
sbb
dec
add
pusha
cmp
push
cs
icebp
nop
int3
adc
repz
pop
fwait
nop
sub
xor
cmps
pop
sbb
loop
pop
scas
out
scas
rcl
fldcw
jnp
sti
jno
sub
stos
imul
outs
inc
xchg
mov
stc
cmp
enter
mov
out
dec
in
scas
cmc
pop
std
stos
dec
daa
mov
mov
push
movs
sub
pop
cmp
push
xchg
lods
lods
jmp
aad
cli
pop
mov
jmp
addr16
adc
dec
das
sbb
push
inc
test
push
loop
outs
sub
fucomp
jnp
lods
retf
xor
mov
imul
movs
inc
pop
push
pop
dec
jbe
or
xchg
addr16
lods
dec
je
lea
mov
mov
pushf
fdivp
lahf
les
mov
outs
xchg
mov
jnp
xchg
sahf
adc
aas
push
mov
out
xchg
es
jne
(bad)
xor
aam
aas
mov
jo
das
cli
adc
popa
dec
pop
mov
xor
push
mov
shl
aas
and
push
jmp
pop
scas
mov
push
xchg
lods
adc
jae
lods
push
jmp
mov
push
das
mov
pop
in
mov
xor
js
xchg
xchg
iret
jg
jge
mov
retf
es
sbb
mov
lahf
dec
sub
xchg
pop
mov
jecxz
cmps
sbb
sub
add
add
repnz
or
rol
xchg
mov
pop
das
jp
push
or
(bad)
xchg
cmps
xor
mov
imul
mov
push
push
sbb
add
gs
push
(bad)
sub
ror
clc
scas
es
not
mov
jae
je
stos
pop
lahf
retf
aaa
cmp
cmp
sbb
push
mov
das
pop
pushf
cmp
push
push
sub
sbb
xor
imul
mov
jo
fst
or
outs
xor
sub
push
mov
test
aam
es
mov
les
movs
addr16
add
(bad)
sub
aas
sub
cmp
jmp
aas
dec
mov
repz
pop
imul
jge
test
mov
jno
out
enter
repnz
imul
in
mov
and
mov
lahf
sub
mov
add
mov
inc
adc
jb
sahf
(bad)
cmc
jmp
mov
das
aas
jb
xor
jmp
jb
mov
add
repnz
outs
inc
push
out
xlat
ror
ds
xor
cmp
pop
sub
mov
scas
aas
fistp
adc
xchg
mov
outs
cmp
inc
movs
dec
std
ins
mov
xor
arpl
cmps
mul
sub
lods
mov
mov
loop
add
idiv
mov
xor
scas
or
scas
pop
mov
push
mov
mov
sub
lods
sub
andps
lods
mov
xor
dec
mov
or
ja
lahf
mov
stos
ss
push
ins
mov
jo
daa
ror
cmps
aaa
ins
cmc
gs
scas
movs
(bad)
mov
adc
es
jae
movs
jb
jns
ja
or
imul
lods
lahf
or
cmp
lods
outs
mov
int
les
aam
pop
mov
out
and
or
js
inc
xchg
pushf
sahf
popa
fwait
mov
pop
inc
and
leave
mov
lahf
not
jne
outs
inc
and
mov
shl
dec
leave
fst
xchg
scas
pop
pushf
push
jne
push
sti
movs
and
inc
aaa
push
out
pop
test
data16
mov
aas
add
arpl
fwait
mov
ja
mul
sub
mov
mov
fisub
rcl
pop
cdq
mov
stc
jmp
mov
jno
ins
xchg
sub
outs
pop
sahf
jno
daa
int
push
add
fdivp
imul
inc
sub
push
mov
scas
mov
lds
lahf
(bad)
or
test
dec
out
jb
outs
push
fwait
(bad)
hlt
push
imul
out
cs
and
adc
daa
mov
mov
mov
mov
push
mov
push
inc
icebp
loop
cmps
ds
sub
cmc
pusha
aam
xchg
ja
imul
iret
push
shr
aam
dec
test
mov
cmps
pop
or
mov
jle
push
xrelease
imul
mov
aas
mov
aas
cmps
leave
(bad)
mov
inc
dec
stos
cmps
cmps
jo
xchg
sahf
and
icebp
je
pop
and
daa
(bad)
shl
sbb
adc
push
sbb
jl
lahf
test
out
adc
inc
mov
push
dec
popa
mov
jno
sar
fist
mov
scas
scas
es
xchg
outs
das
pop
loope
sub
fs
cmp
stos
mov
mov
push
(bad)
xchg
ret
ret
int
mov
into
out
fwait
push
pusha
es
mov
adc
cmp
movs
cmp
lods
outs
mov
mov
pop
sub
sbb
push
aas
mov
mov
fwait
jns
add
cmps
test
int3
ins
xor
sub
(bad)
shl
pop
jg
fnsave
jl
jne
mov
and
retf
push
push
test
mov
dec
pop
mov
mov
mov
mov
sub
dec
mov
jno
sub
sahf
ficom
xchg
xor
retf
iret
(bad)
out
ins
retf
popf
cmp
add
jl
or
add
sbb
out
test
inc
daa
pop
mov
jmp
movzx
mov
popa
(bad)
sub
jbe
sub
sbb
je
aas
(bad)
xchg
jo
mov
lock
cmp
dec
int
dec
jle
jbe
aaa
mov
icebp
psubw
call
lods
cmps
js
lea
movs
jp
(bad)
(bad)
retf
pop
mov
cmps
jl
es
and
mov
fidivr
aad
sub
das
sbb
out
test
stos
sar
(bad)
dec
sbb
scas
shl
aam
daa
push
pop
dec
mov
sub
mov
jnp
or
mov
jmp
lahf
mov
add
xlat
inc
lahf
mov
scas
fidivr
addr16
sub
gs
jno
stos
inc
inc
sub
xchg
or
sub
mov
xchg
scas
inc
push
test
popa
xchg
aas
mov
pop
lahf
inc
push
jo
lods
xor
mov
mov
pop
pop
lea
mov
fwait
dec
add
inc
jo
mov
ror
pop
xor
(bad)
dec
ds
cmps
sbb
xor
scas
mov
xchg
sbb
push
pop
xor
scas
push
pop
fiadd
outs
popf
stos
scas
ins
xchg
mov
or
popf
jo
aas
scas
xor
dec
mov
pop
jg
dec
fsubr
and
mov
mov
dec
xor
jnp
and
xor
xchg
popf
xchg
jo
mov
inc
add
ret
ins
xor
sub
pushf
and
das
pop
loop
imul
in
lahf
dec
aas
xor
aam
shr
jmp
pop
push
push
mov
cmp
pop
cmc
sti
xchg
movs
inc
out
fldenv
popa
pop
cs
xchg
into
popf
call
mov
outs
loopne
repz
sub
fs
cld
lea
adc
mov
pop
sub
lods
jns
test
dec
mov
mov
ds
imul
and
scas
push
iret
or
outs
inc
jne
mov
out
cmps
sbb
sub
or
aas
mov
sub
cs
ficom
out
cmp
mov
xchg
rcl
retf
adc
sbb
not
dec
movq
ds
cmps
jbe
enter
dec
xor
or
cmps
sar
scas
scas
retf
call
pop
jg
pop
cmp
ja
movntps
mov
jo
stos
ins
mul
sbb
inc
mov
and
pop
pop
and
imul
sar
data16
push
jnp
jae
jne
inc
mov
arpl
repnz
lahf
jmp
cmc
pop
cmps
inc
mov
sub
jp
retf
lock
es
ret
mov
dec
dec
pop
xor
test
xchg
dec
lahf
test
mov
pop
mov
or
push
adc
push
dec
stos
movs
mov
aas
jg
adc
mov
add
xor
xor
mov
leave
pop
and
jmp
jne
out
mov
sub
cwde
int
push
pop
cmp
bound
dec
jp
adc
ins
add
les
adc
dec
jmp
test
iret
push
push
push
test
or
xchg
clc
stc
fs
dec
stc
call
xor
imul
sar
in
pop
ds
sahf
test
mov
inc
outs
imul
out
test
lea
mov
test
cmp
retf
jne
stos
and
add
fwait
lahf
fwait
lods
jne
outs
jnp
lahf
inc
jmp
push
pop
and
and
xchg
mov
lahf
sub
or
add
push
adc
cmp
das
sub
imul
mov
sub
fldcw
push
ja
push
or
xchg
lock
ins
pop
cmp
(bad)
aaa
push
pop
imul
mov
punpckhbw
mov
and
mov
popa
mov
jg
add
pop
out
out
repnz
ret
push
out
and
cmps
push
arpl
sar
mov
and
push
out
mov
fadd
push
pop
xchg
sbb
mov
mov
sub
call
sub
je
sub
add
pop
(bad)
or
test
mov
or
outs
add
jne
es
mov
lock
cmp
jg
cmp
add
data16
pop
sub
lock
cmps
jg
fld
das
xchg
push
imul
pop
mov
jbe
lea
shr
test
mov
aaa
adc
cs
jo
inc
rcr
xchg
int
call
test
(bad)
mov
iret
inc
scas
mov
push
mov
pusha
aad
(bad)
ins
lahf
sub
pop
mov
(bad)
jle
inc
mov
movs
gs
fbld
xor
cmp
lahf
in
lea
iret
pop
lods
lahf
mov
xchg
mov
pop
lea
lea
addr16
rcl
mov
fisttp
cmps
movzx
push
mov
stos
imul
xor
fisubr
shl
stos
daa
jecxz
mov
mov
aas
add
je
xor
fistp
ficomp
cdq
mov
outs
aam
mov
div
ins
(bad)
jmp
dec
cmp
adc
or
jg
stos
(bad)
frstor
ja
inc
xchg
adc
adc
scas
stos
out
mov
mov
adc
ds
sub
sbb
fucom
cmps
xchg
mov
js
dec
outs
cmp
packssdw
in
mov
jmp
and
lds
daa
inc
test
xor
les
sbb
pop
pop
pop
loop
push
sub
into
arpl
mov
(bad)
out
frstor
pop
xchg
pop
aad
and
lahf
(bad)
cmp
add
adc
jg
daa
xchg
pop
mov
cmps
or
cs
jbe
std
pop
scas
cmps
ins
adc
movs
scas
xchg
mov
adc
mov
ja
fisttp
aas
jge
js
imul
pop
(bad)
loop
mov
or
shl
and
scas
adc
movs
in
ja
push
sub
push
sub
mov
into
int
push
cmp
or
ins
data16
pop
(bad)
push
gs
dec
inc
sbb
inc
add
jno
pop
daa
movsx
sub
sbb
lds
mov
pop
xlat
in
fimul
sub
sbb
aad
hlt
adc
xor
test
lahf
shl
xchg
xchg
stos
leave
icebp
nop
cmps
mov
outs
dec
adc
fisub
sub
mov
int
in
inc
and
in
imul
pop
mov
lahf
jbe
or
int
ss
addr16
fsub
je
(bad)
fwait
mov
cmp
mov
aam
mov
test
or
mov
mov
out
rcr
jno
bound
and
es
dec
jle
xchg
ficom
test
adc
lods
mov
sub
out
aas
js
pop
(bad)
(bad)
pop
sbb
sub
push
(bad)
fs
movs
sub
jae
aas
and
(bad)
xchg
push
inc
xor
mov
lahf
or
retf
sbb
sti
pop
pop
inc
xchg
test
clc
sahf
dec
fstp
pop
xlat
lea
test
stos
adc
sti
(bad)
sbb
inc
movs
outs
adc
fidiv
movs
ins
sub
out
das
leave
call
mov
push
cmp
jg
sub
mov
lods
xchg
shr
adc
push
inc
imul
fcom
bound
jg
fwait
stos
sti
ins
call
jae
ret
fidiv
mov
mov
jmp
lods
jae
add
sub
mov
pop
sbb
mov
pop
outs
cmp
jmp
sti
leave
jg
push
shl
out
int
or
mov
rcr
es
push
mov
fnstcw
push
push
dec
mov
outs
aaa
xor
push
out
xchg
movs
js
mov
mov
add
adc
xchg
mov
lahf
jmp
or
iret
pop
cmp
(bad)
out
mov
mov
push
sub
aaa
stc
retf
addr16
add
mov
jnp
addr16
call
retf
mov
mov
imul
mov
(bad)
idiv
and
xchg
outs
fwait
sub
xchg
adc
jnp
shr
jb
ja
mov
sbb
mov
push
push
loope
outs
inc
scas
scas
cmps
cmp
iret
outs
jmp
lahf
stos
push
jg
outs
es
cli
ds
mov
push
fimul
(bad)
xchg
mov
pop
jp
dec
outs
xadd
fcom
scas
pop
lea
rol
outs
cwde
shr
mov
pop
sbb
ficom
add
cmps
jl
sub
cwde
jo
(bad)
repnz
sub
pop
test
shr
dec
movs
mov
stos
push
outs
sahf
add
mov
mov
dec
adc
clc
icebp
fwait
cmp
mov
cmp
xor
lahf
retf
adc
sbb
ret
ret
sub
sahf
add
outs
mov
sbb
lahf
cmp
(bad)
test
stos
xchg
or
lods
mov
lods
dec
mov
imul
sub
data16
dec
(bad)
enter
push
pop
mov
(bad)
addr16
addr16
lea
push
pop
lea
and
jp
scas
setp
loope
jne
int3
sub
adc
stos
push
dec
inc
or
test
(bad)
jmp
jg
loop
arpl
(bad)
cs
inc
aaa
sub
adc
in
iret
lahf
(bad)
icebp
lahf
cmp
retf
pop
scas
jbe
retf
xor
jmp
call
icebp
rol
lahf
adc
fwait
push
adc
inc
(bad)
mul
and
cmp
mov
shr
fwait
jno
dec
and
and
rcl
(bad)
ret
in
push
dec
or
daa
addr16
iret
and
mov
mov
pop
sbb
retf
in
xchg
arpl
add
pop
dec
jmp
xor
cli
ins
test
iret
adc
pop
js
imul
cs
pushf
sbb
xchg
out
jmp
jmp
fldcw
aas
scas
push
cmp
cmps
jne
dec
pop
xchg
scas
mov
dec
daa
adc
fidivr
xchg
mov
mov
mov
nop
cmps
movs
pop
mov
inc
push
jl
inc
movs
inc
sahf
cmp
mov
lea
sub
lar
(bad)
xchg
pop
mov
cld
test
cdq
pop
das
ret
pop
addr16
and
mov
xchg
dec
lahf
push
sahf
imul
jg
aas
test
ror
das
repz
mov
cwde
push
mov
(bad)
(bad)
ds
push
xchg
mov
inc
pop
and
mov
movs
stos
outs
mov
retf
stc
dec
push
test
jmp
fidiv
movs
test
xor
xor
cmp
jmpw
shl
arpl
dec
adc
push
jmp
mov
mov
adc
mov
test
jg
out
and
adc
stos
push
rcr
add
sar
repnz
mov
jecxz
lods
sahf
adc
mov
jl
outs
in
fs
test
jmp
neg
int3
mov
pop
pusha
gs
pop
xchg
pusha
adc
adc
mov
sub
push
mov
(bad)
jmp
xchg
cs
cwde
cmp
scas
std
jge
scas
pop
ret
imul
jle
aaa
and
xlat
dec
mov
mov
retf
pop
pusha
aaa
lods
scas
push
sbb
fidiv
pop
retf
adc
pop
sahf
xchg
dec
jnp
out
cmps
leave
inc
imul
lods
into
xor
adc
mov
jmp
inc
jae
stos
mov
pop
fcmovnu
lods
(bad)
add
movs
frstor
xchg
js
stos
loop
add
or
outs
push
outs
ret
sub
mov
ret
je
push
sub
xchg
and
jg
mov
pop
xchg
nop
adc
mov
fidivr
fist
mov
jns
cmp
ficom
ins
add
jle
ficomp
mov
cmp
pop
out
mov
iret
mov
mov
ins
pop
jmp
and
repnz
cmp
cmc
ficomp
push
sbb
or
lods
mov
pop
dec
push
mov
mov
xor
sbb
sbb
mov
add
xchg
mov
and
in
fmulp
fmul
mov
inc
mov
in
jg
push
jns
jg
inc
cmp
xchg
loop
xor
daa
xchg
js
mov
adc
sub
inc
jnp
outs
ret
aad
push
sub
ror
aam
bound
mov
cmp
adc
sub
inc
dec
inc
lock
and
pop
and
pop
(bad)
xchg
jne
cmps
sahf
push
push
adc
iret
in
mov
lods
mov
inc
lods
dec
dec
mov
(bad)
sub
dec
mov
mov
mov
sbb
mov
xchg
ja
xor
ins
xchg
mov
lods
pop
ins
inc
xor
push
sbb
push
das
push
mov
test
dec
loopne
push
or
mov
sbb
sub
sub
sub
fwait
mov
pop
add
out
or
pop
out
add
pop
xchg
mov
mov
mov
mov
jno
icebp
jmp
data16
xor
cs
in
dec
scas
pusha
or
iret
push
and
push
loopne
xchg
jg
mov
mov
rcr
or
(bad)
mov
addr16
mov
gs
fist
push
pop
jg
mov
mov
jmp
mov
cwde
mov
sahf
cmps
push
pop
ja
sub
repz
aam
mov
aad
and
push
adc
push
das
outs
add
icebp
cmp
retf
int3
pop
mov
mov
jmp
mov
mov
ins
or
jbe
cmp
inc
mov
inc
loop
dec
sbb
outs
and
(bad)
push
pop
test
pmuludq
xor
ror
or
mov
push
movs
adc
inc
add
inc
sahf
pop
lods
imul
cmp
(bad)
rol
lahf
stos
fadd
test
mov
xchg
enter
mov
scas
dec
push
ins
scas
inc
sub
xchg
outs
aas
repz
sbb
in
pop
lods
and
xchg
jmp
cs
jle
mov
push
add
jnp
xchg
or
sub
inc
shl
imul
(bad)
mov
mov
push
pop
loop
test
(bad)
lock
popa
adc
stos
ins
nop
sub
fistp
cmp
xor
aam
cs
sar
pop
bound
sub
mov
call
loop
popf
add
or
mov
into
cs
daa
and
pop
xor
cmp
cmp
inc
lahf
mov
dec
daa
cs
add
mov
xchg
xchg
sub
jmp
repz
push
mov
cmp
pop
mov
add
push
fimul
mov
sar
mov
mov
sub
popa
sub
sub
add
pop
sar
jg
loop
mov
(bad)
jge
xor
std
add
retf
imul
retf
or
(bad)
pop
les
xchg
jmp
jp
cld
cmp
stos
retf
adc
pop
frstor
outs
ja
stc
imul
retf
stos
mov
inc
add
mov
mov
push
sbb
stos
idiv
add
lds
add
xchg
outs
(bad)
pop
sub
xor
into
dec
fist
push
mov
pop
sti
or
stos
test
addr16
ss
adc
push
outs
adc
adc
xor
xchg
arpl
xchg
cs
pop
mov
adc
xchg
mov
xchg
push
xor
fwait
lds
jecxz
aas
jge
cmps
test
xor
outs
(bad)
out
push
sbb
pop
test
mov
dec
daa
xor
xchg
sbb
ja
or
fdivr
stos
sub
mov
nop
cli
fcmovbe
cmp
fs
ficomp
stos
lahf
push
jecxz
xchg
push
push
jmp
xchg
ins
int
mov
(bad)
dec
push
cmp
outs
daa
jae
mov
mov
or
pusha
push
mov
cmp
pop
test
cmc
and
stos
mov
and
mov
stos
(bad)
push
ja
movs
xor
jns
xchg
test
xor
in
icebp
sub
sahf
shl
in
or
jecxz
aam
repnz
or
push
cmp
imul
mov
xchg
jb
fild
idiv
adc
cli
push
cmp
ret
fsubr
stos
mov
push
pop
or
jae
cli
dec
xor
loop
int
cmps
cmp
cwde
addr16
push
shr
mov
cwde
daa
sub
mov
outs
cmp
movs
ds
movntps
mov
fwait
aaa
jg
mov
xor
adc
outs
lds
jae
mov
int3
(bad)
outs
inc
dec
les
jg
cwde
inc
xchg
pop
sub
adc
mov
jbe
in
dec
add
jle
dec
leave
push
movs
mov
push
mov
neg
ror
outs
mov
xlat
pop
(bad)
fisubr
rcr
xchg
xchg
cmps
(bad)
xlat
rol
mov
int3
test
or
jnp
mov
cdq
ss
pop
and
sbb
scas
(bad)
jmp
repnz
ins
sub
mov
mov
xchg
in
lahf
pop
mov
shl
retf
(bad)
or
jnp
and
loope
outs
sub
mov
outs
mov
je
pop
int3
sub
pop
shl
jae
and
sbb
jbe
push
pop
loop
xchg
inc
movs
ds
push
inc
into
sbb
add
in
in
or
out
imul
cld
retf
mov
scas
sbb
push
cli
mov
xchg
ja
dec
sub
int
or
cmps
add
imul
inc
addr16
mov
pop
mov
adc
scas
outs
in
cli
fdivr
sub
sub
outs
pop
cwde
sbb
pop
out
movs
jb
inc
scas
inc
sahf
fist
setb
ret
push
(bad)
ret
cwde
and
or
push
xchg
arpl
mov
ret
mov
out
arpl
pop
cwde
mov
mov
scas
dec
sbb
stos
jmp
pop
neg
jo
icebp
mov
push
and
cmps
iret
cvtpi2ps
sbb
rcl
mov
add
sti
aas
xchg
xchg
mov
jl
pop
stos
adc
cli
in
pop
inc
stc
imul
jae
sbb
nop
mov
enter
mov
pop
mov
arpl
push
xchg
addr16
and
dec
loop
cmp
push
lahf
jne
sub
cli
ret
or
imul
cmps
inc
pop
cdq
outs
loop
sbb
outs
dec
add
push
jg
mov
into
repnz
dec
(bad)
aas
das
ds
jl
sub
je
retf
and
outs
dec
mov
clc
dec
cmp
neg
inc
cmp
xchg
and
lods
pop
shl
dec
xor
pop
lea
(bad)
(bad)
fidivr
mov
outs
or
sub
lods
fisub
daa
mov
(bad)
jo
inc
mov
mov
daa
mov
cs
mov
nop
cmp
cmp
inc
dec
push
push
pop
(bad)
cmps
mov
push
push
cli
lock
aam
inc
xchg
fild
stos
sub
scas
(bad)
in
pop
adc
sub
pop
out
mov
ja
push
mov
test
mov
mov
and
nop
iret
push
xor
lods
pop
inc
mov
pop
movs
(bad)
data16
aad
dec
pop
idiv
sbb
shl
es
mov
mov
test
dec
sub
dec
movs
pop
out
das
scas
mov
mov
mov
shufps
ds
test
imul
loop
cmc
aam
in
mov
mov
or
in
mov
sbb
sub
mov
pop
shl
aas
lea
push
mov
sbb
add
movs
sbb
inc
out
popf
(bad)
(bad)
outs
daa
or
jge
sub
xor
pop
das
jo
sahf
popf
out
lea
push
fwait
imul
mov
ret
ret
mov
movs
outs
push
push
aas
cmps
repnz
std
mov
xor
outs
sahf
out
mov
(bad)
bound
dec
lahf
adc
sub
movs
ret
adc
aam
ss
mov
xchg
scas
or
xor
sbb
mov
mov
out
jmp
jnp
mov
jg
in
xchg
in
push
add
pop
imul
mov
ror
dec
lahf
adc
retf
push
add
mov
xor
jmp
push
sbb
sbb
jne
pop
das
(bad)
push
test
aas
lods
mov
sahf
pop
sbb
cmps
and
aas
mov
ret
cli
mov
dec
inc
movs
je
in
mov
fstp
ins
dec
movs
jbe
mov
mov
mov
jo
jns
sbb
aas
push
mov
popf
imul
add
lahf
push
daa
push
jecxz
adc
inc
push
in
or
leave
sub
or
pop
das
popf
ins
ficomp
ds
cmps
push
jno
das
cmps
mov
add
es
enter
mov
xor
lods
push
push
das
fiadd
jmp
sub
jg
mov
aaa
iret
inc
cmp
push
mov
inc
jbe
sub
jle
rcl
push
lea
shr
xchg
push
aas
mov
inc
inc
(bad)
push
movs
xchg
lahf
test
cmp
(bad)
jg
xchg
(bad)
cmps
mov
loope
stos
aaa
mov
call
inc
push
push
xor
inc
daa
retf
test
enter
push
test
pop
inc
and
jae
test
dec
and
(bad)
mov
mov
jne
pop
mov
dec
shr
mov
cmp
push
rcr
mov
icebp
fninit
dec
cs
(bad)
js
mov
ret
shl
(bad)
popf
sub
pop
sbb
mov
outs
jmp
mov
pop
ja
inc
out
data16
iret
xchg
push
sub
outs
jno
lahf
(bad)
shl
in
add
sub
outs
sub
scas
adc
(bad)
adc
add
inc
jo
and
mov
clc
cmps
aaa
sub
push
iret
sub
xor
sub
mov
or
mov
in
push
rcl
sub
or
and
lea
xchg
movs
fwait
sub
dec
icebp
add
jae
cmps
jb
mov
test
inc
adc
mov
arpl
sub
outs
das
xchg
cmc
outs
mov
pop
jnp
xor
fiadd
mov
add
mov
pop
cvtdq2ps
inc
daa
sub
xchg
cdq
ins
push
repz
cmc
aad
ror
push
add
out
push
ja
mov
push
cmp
push
inc
mov
(bad)
mov
mov
pop
jb
jg
bnd
pop
xor
cmp
mov
(bad)
fstp
xchg
(bad)
sub
adc
jg
jbe
repz
or
(bad)
mov
retf
mov
cdq
pcmpgtd
imul
movs
inc
lds
das
neg
das
or
imul
mov
mov
stc
sub
repnz
shr
clc
js
mov
xchg
in
pop
pop
scas
and
push
ins
dec
outs
mov
jmp
mov
xchg
aas
push
fisubr
outs
data16
mov
push
cmp
frstor
cmc
scas
sbb
loop
imul
jecxz
les
pop
outs
cli
xor
mov
lods
test
sahf
adc
ja
push
outs
ds
outs
cmp
dec
mov
dec
sub
xchg
stos
pop
sub
outs
ins
xchg
iret
ins
xor
add
into
lahf
mov
xor
cmp
mul
icebp
sub
in
test
cmps
retf
cmp
mov
cmc
sub
xor
movs
pop
dec
mov
test
mov
fwait
dec
(bad)
or
lds
call
xorps
mov
adc
inc
lods
jmp
inc
xor
or
xlat
daa
in
mov
adc
mov
repz
mov
retf
mov
pop
mov
rcr
cmp
dec
fisub
lods
(bad)
out
loop
outs
pusha
adc
out
pop
cmp
aad
push
aas
mov
stos
pop
sub
push
scas
outs
es
cli
lea
outs
cmp
seto
sbb
out
lea
fisttp
out
sbb
dec
(bad)
outs
mov
adc
fs
mov
ds
std
mov
mov
adc
outs
inc
sahf
dec
pop
jmp
mov
jle
mov
fwait
pusha
dec
dec
push
imul
mov
jg
push
and
in
mov
or
push
mov
inc
adc
mov
xchg
jmp
xchg
pop
or
test
lahf
movs
mov
add
sub
daa
mov
cdq
fs
inc
lea
mov
ja
push
xor
scas
fisubr
imul
addr16
sbb
inc
mov
out
cmp
sbb
(bad)
cs
jle
jecxz
scas
retf
iret
jg
rcr
or
dec
xchg
retf
repnz
cmp
arpl
cmps
mov
(bad)
fbstp
in
dec
ss
sar
pushf
arpl
stos
pop
or
push
adc
mov
cmp
xchg
cmps
js
cmp
arpl
mov
nop
mov
test
cmps
xor
movs
pushf
ficom
popa
out
out
out
scas
jo
imul
outs
test
cmp
ja
inc
xor
sbb
xchg
add
mov
ret
gs
aas
inc
div
sti
dec
out
iret
mov
fld
jb
sbb
fisubr
sub
ja
lea
clc
mov
sub
sti
icebp
scas
outs
cli
icebp
lahf
hlt
jae
mov
movs
or
jne
xchg
lds
mov
leave
add
shl
and
outs
lods
jg
add
mov
loop
aas
sbb
mov
cmp
cmp
repz
ja
scas
cmp
sub
lods
mov
pushf
scas
and
sbb
lahf
add
icebp
cmp
lahf
xor
fs
xchg
repz
ja
mov
cmps
add
out
or
out
mov
retf
cmp
aaa
into
adc
ss
or
sbb
stos
retf
xchg
ficom
aas
dec
dec
xchg
retf
sub
mov
xor
pop
mov
out
mov
outs
xchg
xchg
or
outs
stos
mov
imul
pop
int3
xchg
test
cmp
outs
imul
add
push
icebp
push
lahf
popa
dec
lock
pop
(bad)
jg
lahf
inc
sbb
lods
xchg
push
xchg
pop
ret
mov
pop
cmp
push
test
push
mov
lahf
adc
or
stos
cmp
jg
cmp
ficom
jo
out
ss
aas
cmps
outs
ins
or
xor
stos
jg
and
cs
(bad)
fstp
mov
inc
cmc
imul
(bad)
jg
aam
lahf
cs
cmps
sti
mov
adc
cmp
sub
stos
jo
inc
(bad)
fsubrp
jg
sub
sbb
outs
xchg
in
dec
pop
inc
adc
outs
or
push
in
xor
xor
mov
sub
adc
sub
jecxz
dec
mov
mov
adc
push
bswap
gs
daa
ret
cmps
xchg
fld
aas
hlt
push
stos
xor
sub
push
mov
ins
ins
sub
mov
jmp
or
xor
stos
and
ins
push
stos
or
cmps
pop
mov
pop
(bad)
out
sbb
fild
outs
mov
mov
cmp
aaa
mov
movs
or
mov
push
mov
cmp
out
dec
jb
cmp
scas
pop
add
js
(bad)
and
jo
ret
dec
loop
xchg
icebp
sub
inc
or
out
pop
push
mov
shr
imul
mov
pop
mov
dec
out
push
loop
es
or
inc
fmul
shl
stos
lahf
sahf
mov
mov
sbb
scas
sbb
sahf
addr16
mov
cmp
dec
mov
xchg
fild
mov
add
jnp
rol
dec
mov
push
push
mov
imul
fldcw
(bad)
mov
(bad)
out
or
jg
mov
and
xchg
pop
movsx
cmp
lods
ud0
imul
push
fwait
xchg
aam
jnp
js
iret
xchg
mov
sub
or
jo
ret
ds
mov
mov
mov
scas
outs
cmp
inc
in
lods
test
jb
ja
in
std
xchg
ds
loopne
ret
lods
sbb
div
cmp
sub
pop
imul
pop
dec
mul
es
aam
xchg
lods
add
pop
pop
iret
cmps
inc
fsub
loop
mov
mov
mov
pop
pop
mov
mov
add
cli
sub
xchg
jle
shl
(bad)
pop
fucomi
mov
cmps
stos
xor
mov
out
mov
xchg
iret
inc
sahf
mov
retf
sbb
imul
cmps
rcl
fcmovu
pop
xchg
outs
xor
push
sub
cmc
push
outs
jmp
pop
sub
lods
xlat
out
add
jg
mov
xchg
jae
or
aas
mov
outs
icebp
sbb
bound
fldcw
mov
mov
outs
adc
pop
or
sahf
mov
cmp
inc
adc
mov
push
push
sahf
mov
mov
sub
pop
xchg
ds
sub
cmps
paddsw
in
mov
and
sahf
cli
shr
jae
mov
daa
repz
lds
ud1
aad
xchg
ror
dec
ss
push
sub
mov
shr
sbb
pusha
mov
ins
popf
outs
out
mov
imul
fimul
mov
lea
pop
or
mov
repnz
add
popa
je
mov
mov
xchg
xchg
(bad)
out
xchg
aad
dec
mov
stos
gs
xchg
push
push
mov
(bad)
pop
addr16
jl
xor
add
pop
cmps
retf
cmps
mov
ret
push
out
mov
mov
mov
aas
and
je
dec
mov
repnz
movs
(bad)
xor
pop
leave
es
xlat
sbb
into
sbb
jmp
call
mov
outs
scas
movs
popf
mov
fnstsw
push
pop
ss
lea
ret
sbb
(bad)
jnp
or
das
and
dec
fcmovbe
ja
outs
xor
mov
mov
pop
xlat
jg
pop
jae
gs
cli
inc
mov
test
cmp
dec
test
push
popa
rol
mov
add
inc
xchg
scas
dec
outs
outs
mov
(bad)
scas
inc
pop
xchg
addr16
sub
out
xchg
aad
cmp
jg
sbb
and
pop
xor
lods
aas
jp
dec
mov
cmp
mov
add
popf
xor
into
imul
sahf
retf
mov
fdiv
mov
jle
jb
ret
ins
adc
pushf
test
jl
scas
pop
mov
test
jne
lds
das
push
xor
addr16
inc
rcr
push
and
ins
pushf
aas
ror
xchg
scas
lea
retf
push
iret
imul
pop
int
and
mov
iret
add
arpl
scas
push
add
sub
mov
cli
sar
scas
outs
scas
lods
cmp
in
dec
jmp
dec
adc
mov
push
lods
or
fdiv
sub
xor
cmp
sub
sub
and
push
push
pop
outs
inc
dec
xor
cmp
retf
dec
outs
es
aaa
push
or
dec
mov
sub
in
sub
adc
jg
clc
repnz
fld
push
daa
sub
mov
jmp
xor
ins
mov
and
push
shl
scas
xor
jne
mov
adc
pop
out
scas
and
xor
jb
cli
push
push
push
outs
shr
sub
(bad)
mov
pop
inc
mov
jo
mov
fsub
dec
(bad)
cmps
mov
or
movs
cmps
sbb
out
push
ja
daa
xor
sahf
or
lahf
repz
sbb
mov
rol
or
xchg
fld
push
in
not
jo
jecxz
and
mov
sahf
mov
js
dec
ja
loop
push
cmp
outs
fdiv
imul
jge
xchg
imul
jmp
(bad)
jg
adc
pushf
mov
fisubr
lods
xchg
mov
inc
stc
mov
push
pop
mov
repz
and
jbe
mov
ss
xchg
aas
mov
dec
mov
loope
lea
sub
xchg
repnz
mov
mov
imul
mov
mov
addr16
fs
mov
mov
addr16
imul
pop
aad
outs
jmp
adc
mov
outs
mov
mov
pop
dec
shl
push
aas
imul
xor
movs
inc
outs
sbb
jmp
or
dec
scas
dec
test
daa
test
pop
(bad)
icebp
(bad)
pop
addr16
mov
pop
cmp
and
mov
cs
neg
ret
jnp
(bad)
jmp
mov
aas
in
jae
out
pop
out
jle
push
daa
add
push
fnstenv
sbb
fisub
xor
xor
jae
ja
mov
in
imul
aam
movs
sub
dec
ins
scas
xchg
sbb
adc
stos
inc
ins
das
jge
(bad)
fnstcw
push
mov
cmps
xlat
pop
push
ret
push
test
cli
push
cmp
and
push
sub
fwait
mov
fadd
(bad)
mov
popa
xchg
jecxz
fadd
jge
mov
pop
outs
mov
sub
fld
jmp
and
sbb
lahf
movs
mov
ret
cmp
popa
stc
pop
(bad)
ins
inc
push
aas
sbb
rcl
mov
(bad)
sub
(bad)
xor
pop
mov
mov
jns
xor
in
repnz
sub
sar
lea
(bad)
js
jne
stos
loop
push
test
retf
sar
(bad)
pop
rcl
imul
nop
fiadd
ds
lods
add
cmc
bound
xor
pop
pop
mov
shl
cli
push
mov
jae
dec
mov
jl
mov
lods
jg
mov
outs
pop
and
fld
fadd
cmps
or
sub
sbb
pop
das
je
dec
ja
scas
sub
sbb
cmps
pusha
popa
xor
cmp
fsub
sahf
arpl
push
dec
shl
aaa
sub
cmp
cmps
mov
cmp
sub
in
div
adc
daa
es
data16
adc
call
mov
jae
outs
(bad)
arpl
rol
xor
xchg
xor
sub
xchg
xor
ds
and
jp
pop
dec
inc
pop
mov
cmp
lods
daa
enter
pop
mov
cmp
mov
gs
cld
jb
jle
aas
mov
xchg
lea
and
in
sahf
or
jmp
addr16
jo
ss
push
dec
mov
xchg
inc
daa
or
mov
cmps
aas
push
sbb
cs
aaa
repz
push
push
(bad)
outs
mov
pop
push
fdivr
into
mov
outs
iret
sbb
vcvtdq2pd
outs
pop
xchg
dec
push
in
xor
mov
xchg
out
or
adc
pop
jb
add
push
out
fmulp
scas
jo
sbb
dec
xchg
pop
sub
arpl
ja
cmp
repnz
fisubr
cmps
sub
inc
mov
arpl
add
lsl
sub
cmp
fwait
cmp
enter
gs
shl
stos
scas
xchg
call
aam
mov
mov
mov
cs
mov
cmc
pop
sbb
shl
into
retf
(bad)
in
dec
dec
sbb
ins
neg
out
gs
mov
fild
fdivr
mov
(bad)
jne
push
movs
xchg
jg
inc
xchg
mov
bound
jno
rcpps
and
sub
sahf
push
retf
addr16
scas
xchg
outs
das
fdivr
inc
test
call
adc
push
push
aaa
lods
jle
inc
mov
fst
bound
divps
(bad)
mov
xor
adc
mov
in
sahf
aaa
test
ins
mov
scas
mov
movs
test
cmps
fild
sub
(bad)
(bad)
movs
push
imul
fs
adc
ja
mov
jae
dec
mov
xor
xchg
mov
ficom
cmp
stos
jne
adc
adc
sbb
arpl
xlat
pop
dec
data16
jle
pop
retf
(bad)
popa
fimul
jmp
daa
data16
outs
retf
cmps
mov
fs
imul
mov
sub
add
jecxz
mov
jmp
arpl
loope
clc
cli
and
cmps
vmovaps
imul
and
sahf
js
out
push
leave
xor
push
add
mul
leave
aam
dec
mov
scas
fstp
pop
cmps
mov
loopne
sub
in
outs
mov
inc
aas
or
mov
rsm
mov
adc
lahf
gs
ins
sub
mov
add
ss
neg
and
out
xor
out
fs
cs
xchg
jmp
mov
cmp
call
sub
mov
push
push
scas
test
jmp
imul
shl
sub
(bad)
cmp
(bad)
dec
mov
mov
push
mov
add
out
cmp
adc
xchg
cmps
jmp
in
into
add
push
mov
pop
mov
addr16
mov
mov
mov
xor
xchg
movs
es
bound
scas
mov
dec
dec
jmp
iret
mov
mov
cmps
xor
dec
xor
cmp
daa
iret
sub
fbstp
mov
dec
push
push
xchg
ret
repz
xchg
pop
cli
mov
and
push
push
ja
sub
add
dec
push
mov
mov
pop
and
adc
push
ret
test
pop
neg
mov
rol
test
cli
sbb
add
mov
aas
inc
xor
mov
cmp
les
add
mov
mov
dec
cmc
stc
scas
mov
arpl
fld
pop
push
or
cmps
lahf
lea
sub
popa
addr16
test
(bad)
scas
adc
push
fwait
inc
ss
pop
push
mov
scas
int3
pop
mov
dec
imul
dec
shr
xchg
push
mov
arpl
in
or
in
inc
xchg
rcr
sub
fbld
xchg
movs
and
repnz
cmps
push
repz
xchg
adc
or
mov
pop
lods
addr16
movs
mov
jae
sub
and
mov
fisub
loop
cmp
pop
cmps
inc
sub
imul
std
repnz
aaa
rcl
stos
cmps
add
cs
test
outs
add
push
outs
cmp
mov
cs
nop
sub
(bad)
jg
pop
(bad)
fsub
xor
ja
movs
imul
push
out
lock
frstor
ja
dec
fisub
es
dec
inc
push
enter
lock
jnp
mov
adc
leave
mov
invd
xor
les
inc
dec
stos
outs
daa
inc
bound
fiadd
inc
jecxz
push
lea
push
rcl
enter
cmps
aas
xor
(bad)
fwait
imul
mov
sbb
fiadd
mov
call
pop
push
stos
pop
sti
jns
ficom
(bad)
bound
xchg
scas
test
sbb
imul
movs
add
mov
mov
adc
test
push
dec
stos
sub
cli
or
arpl
mov
jne
cmc
xchg
scas
xchg
ja
inc
cs
adc
jp
dec
movs
out
jg
xor
gs
stos
pop
jmp
pop
int3
sbb
int3
dec
sub
mov
mov
and
mov
sub
mov
mov
add
adc
dec
mov
jne
push
mov
icebp
mov
(bad)
sbb
pop
mov
lods
pusha
fisubr
pop
jae
push
jno
ins
mov
std
ror
mov
push
pop
imul
pop
adc
not
push
test
mov
punpckhbw
and
addr16
cmps
mov
jle
add
xchg
retf
mov
sub
push
and
mov
into
idiv
enter
jmp
(bad)
imul
sti
push
pop
jmp
mov
xchg
ret
(bad)
aas
repnz
jp
pop
mov
add
cmp
ins
mov
xchg
pop
cmp
xlat
lea
pop
movs
(bad)
mov
jge
sbb
stos
and
xor
int
jno
sub
out
inc
xor
xchg
jp
es
int3
lods
pop
push
mov
ret
xchg
sbb
add
pop
sar
rep
leave
daa
scas
and
inc
adc
ficomp
or
jnp
sub
and
outs
sub
mov
mov
lds
cmps
shr
mov
sahf
pop
add
push
xor
outs
mov
mov
cmp
push
test
scas
xchg
dec
pop
and
mov
pop
femms
mov
mov
sub
xor
sar
(bad)
aas
adc
jp
lahf
mov
mov
lock
xchg
sbb
xor
inc
mov
lea
test
lods
scas
repz
dec
scas
mov
stos
push
inc
loopne
cmps
rcl
and
xor
sbb
cmp
inc
xor
data16
ja
call
dec
idiv
mov
imul
pop
retf
and
jae
stos
mov
mov
pop
add
outs
daa
push
add
out
inc
cmp
fisub
(bad)
mov
mov
adc
xlat
pop
pop
jecxz
(bad)
cmps
mov
mov
adc
sahf
hlt
rol
fisub
fldcw
scas
outs
xchg
xchg
mov
mov
ss
jl
jns
aas
arpl
int
dec
test
mov
(bad)
adc
das
scas
movsx
sub
xor
nop
mov
out
lds
mov
jo
outs
aas
dec
push
pop
dec
and
rcr
mov
fs
cs
and
adc
xchg
xor
shr
std
les
daa
movs
push
sub
fiadd
adc
sub
cmp
outs
mov
(bad)
ds
pusha
pop
mov
push
mov
fimul
iret
pop
sbb
out
stos
mov
add
jno
jns
pop
ds
lods
and
scas
sub
jae
aad
(bad)
outs
rcl
mov
inc
fcomp
or
sub
(bad)
lods
add
ins
sub
xor
loopne
mov
not
mov
or
dec
int
pop
mov
jmp
pusha
mov
mov
adc
(bad)
das
or
cmp
das
push
adc
push
in
ss
push
outs
(bad)
sub
cmp
test
add
pop
cmp
sar
stc
sub
aas
jmp
push
dec
push
sub
(bad)
imul
pop
and
or
xor
mov
aas
mov
inc
stos
aaa
test
fs
iret
and
nop
xchg
mov
mov
data16
fs
ret
aas
out
ret
pop
pop
inc
sbb
jle
adc
fistp
jmp
mov
jp
fisubr
mov
dec
mov
mov
stos
mov
mov
ins
pushf
test
ret
movs
mov
jmp
nop
sti
pusha
(bad)
jnp
sub
int3
loop
pop
js
(bad)
mov
lock
sbb
and
mov
repnz
dec
push
sahf
xchg
pop
fild
or
aam
xchg
in
jecxz
push
push
cdq
sub
das
xor
sbb
jg
dec
or
stos
shl
push
jg
ret
adc
mov
lahf
inc
pop
sahf
push
repnz
lahf
mov
cs
(bad)
or
push
(bad)
cli
cmp
pop
add
cli
mov
arpl
mov
mov
push
add
push
mul
out
jmp
faddp
adc
pop
push
or
aas
outs
(bad)
idiv
dec
pop
movs
cmp
outs
aaa
xchg
pushf
fisubr
pop
aas
mov
test
sub
rol
lods
xchg
(bad)
mov
clc
push
jns
mov
push
scas
xchg
dec
popa
cmp
pop
mov
xchg
sub
dec
sar
jo
sub
dec
aaa
inc
jmp
icebp
addr16
push
jg
mov
aad
mov
sbb
int
(bad)
push
cdq
aas
outs
dec
jl
pop
stc
jp
ficomp
(bad)
stos
nop
sub
pusha
out
and
das
pop
iret
sub
daa
sub
sub
movs
mov
js
mov
addr16
jmp
pop
dec
adc
scas
lahf
jl
inc
push
(bad)
rcr
sahf
xor
sub
push
sbb
xchg
inc
mov
loop
xchg
jmp
push
fs
or
lahf
mov
outs
mov
es
lods
mov
jmp
inc
aas
dec
cmp
push
test
add
xor
cmp
sbb
setle
jle
dec
cmp
mov
dec
dec
cmps
xor
mov
fdivp
pusha
inc
or
xchg
cld
sar
cs
and
outs
loop
ss
icebp
mov
push
daa
imul
les
pop
fs
mov
add
sbb
out
sbb
mov
lods
or
jmp
or
movs
sbb
repz
mov
mov
imul
xchg
xchg
stos
gs
dec
xlat
lods
pop
retf
push
inc
mov
(bad)
in
and
dec
outs
adc
call
(bad)
mov
and
sub
nop
imul
outs
mov
movs
fcom
mov
mov
lds
xlat
cmp
sbb
pop
pop
lea
sub
fisub
jle
lahf
lahf
xchg
adc
jmp
pop
outs
mov
fisub
push
data16
dec
adc
retf
ret
pop
std
fwait
push
push
mov
jg
push
addr16
inc
in
mov
jbe
add
aas
cmp
mov
sbb
stc
ror
dec
test
and
pop
(bad)
leave
cmp
mov
mov
jnp
inc
das
sub
(bad)
lods
adc
pop
jbe
jp
imul
neg
jmp
popa
mov
in
not
ss
and
mov
dec
pusha
xchg
mov
cli
push
jg
xlat
dec
mov
add
jg
or
sub
pop
mov
test
not
mov
outs
or
mov
ins
ins
xor
push
scas
mov
mov
xchg
in
and
rcr
jo
ret
(bad)
or
ficomp
adc
mov
fwait
jmp
mov
adc
adc
pop
cmc
retf
cmp
int3
outs
jo
in
scas
add
xchg
pop
mov
pop
pop
pop
ret
cmp
or
xor
add
mov
mov
sbb
stos
sub
ins
jae
sub
xchg
ins
rcl
shr
test
(bad)
pop
popa
out
ret
push
in
arpl
push
sbb
xchg
jb
push
out
icebp
in
pop
push
inc
cmps
jbe
adc
adc
addr16
jo
ja
cmp
sti
(bad)
push
faddp
mov
(bad)
outs
das
in
ds
mov
sub
imul
push
push
(bad)
retf
inc
ins
out
push
sub
and
cwde
lods
loop
adc
std
xchg
jecxz
stc
cmps
scas
push
add
dec
daa
imul
stos
in
jl
outs
lea
push
and
add
and
mov
hlt
je
(bad)
mov
test
ja
popa
les
aas
scas
jae
ror
lahf
jmp
mov
xor
enter
push
adc
mov
pop
lea
jo
dec
or
leave
and
ror
pop
shr
pop
jg
stc
sbb
rol
fidivr
pop
lea
dec
arpl
adc
std
fsub
out
cld
and
mov
scas
nop
fmulp
movs
or
mov
pop
push
rcr
or
pusha
ds
call
neg
xor
sbb
push
push
cmp
mov
cmp
sub
lds
icebp
jno
sbb
stos
dec
outs
test
mov
pop
adc
push
push
jne
aas
(bad)
sar
inc
mov
mov
iret
inc
repnz
jge
iret
ss
push
cmps
ins
xor
mov
lds
lahf
out
cmps
mov
adc
push
xchg
and
xor
cmc
xchg
scas
enter
jns
mov
lahf
in
ja
iret
leave
aad
stos
ja
xlat
daa
into
loop
pushf
or
cmp
push
pop
sbb
rcl
imul
add
(bad)
or
or
movs
es
and
lods
(bad)
push
outs
rcr
jne
cmp
test
push
add
out
lods
cmp
shl
je
scas
fcomp
mov
push
getsec
sub
jb
sbb
push
ins
cmp
dec
lahf
mul
add
aas
out
mov
ins
stos
inc
sahf
outs
jns
push
sbb
loop
pop
mov
and
dec
mov
mov
mov
mov
xor
cmp
mov
and
adc
jmp
sti
push
xor
adc
neg
outs
push
daa
ins
inc
popa
idiv
movsx
in
fnsave
dec
ja
stos
test
xchg
and
push
mov
dec
lods
sahf
loop
mov
pop
out
xor
aas
jp
xchg
xlat
xchg
jge
mov
out
mov
sbb
jb
mov
fnsave
jae
add
mov
mov
scas
stos
xchg
fsubr
test
xor
pop
leave
mov
outs
add
cmp
sbb
push
push
ja
sbb
dec
popa
and
fidiv
mov
sub
pop
cwde
sbb
cli
mov
cmp
repnz
pusha
fdivrp
imul
mov
xor
dec
sub
dec
mov
(bad)
mov
fidiv
cmps
and
bound
loop
imul
pop
mov
stos
out
sub
ja
hlt
outs
leave
lea
ins
sbb
adc
fbstp
data16
push
outs
mov
(bad)
xchg
push
sub
add
stos
or
xor
or
outs
adc
mov
ins
push
fsub
repnz
jg
add
dec
maskmovq
neg
jg
fiadd
xor
push
sub
outs
into
iret
fs
sbb
push
pop
icebp
dec
stos
adc
mov
addr16
mov
mov
lahf
jle
lods
add
stos
sub
cmp
lods
pop
fist
mov
nop
jle
cmps
out
scas
rcr
in
inc
fld
aaa
sbb
shr
mov
mov
pop
aaa
das
mov
mov
mov
jns
cmp
fcompp
test
dec
movs
in
inc
les
mov
xlat
or
cs
test
push
mov
jb
ja
test
mov
out
mov
add
mov
sub
xor
imul
out
je
jecxz
push
fmul
outs
shr
dec
test
out
sub
mov
mov
cmp
mov
gs
ja
mov
inc
inc
neg
das
mov
add
daa
fisttp
mov
mov
daa
sub
pusha
jmp
daa
jnp
jne
mov
adc
push
movs
mov
jae
mov
clc
xchg
inc
fsubp
mov
xor
add
cs
mov
aaa
mov
add
or
out
sahf
cmp
mov
scas
cmp
mov
lds
sahf
pop
and
mov
mov
and
test
iret
cvtdq2ps
movzx
sar
lahf
mov
outs
fnstcw
fidivr
data16
imul
sbb
push
jg
sbb
mov
mov
sahf
fsub
nop
sbb
mov
jecxz
mov
pusha
lea
das
scas
mov
neg
pop
jne
icebp
scas
daa
cmc
out
outs
sub
mov
xor
in
sahf
jle
sub
jecxz
mov
daa
dec
jg
ja
outs
xchg
mov
mov
rcl
mov
test
rcl
dec
mov
xchg
imul
mov
dec
ins
dec
(bad)
xchg
jg
call
out
cs
iret
and
or
mov
cld
cmp
xchg
and
and
xchg
(bad)
lods
or
push
das
inc
pop
jno
adc
xor
sbb
rcr
mov
cmps
jmp
cmp
aas
adc
inc
les
sub
cmps
sub
cmp
adc
xchg
lods
cmp
int
ja
popa
cmp
and
add
xor
pop
adc
sub
and
cmc
push
(bad)
jg
jle
and
mov
sub
inc
mov
js
xor
adc
test
(bad)
push
ret
or
inc
xor
test
jmp
push
scas
pop
jbe
xchg
jo
stos
loop
cs
push
cmp
mov
scas
push
retf
fisubr
aas
xchg
sub
(bad)
nop
vmwrite
xchg
pop
(bad)
dec
lahf
sti
push
mov
dec
sbb
(bad)
popa
push
pop
gs
into
sbb
int
jp
jo
jg
shl
and
pop
cmps
sbb
dec
sub
out
out
mov
ror
out
cmps
mov
movs
fisub
mov
xor
dec
or
retf
or
mov
jg
xor
scas
sti
ret
aas
pop
mov
(bad)
cmps
(bad)
out
sbb
xor
jmp
mov
mov
inc
jae
aam
aas
bound
push
cmps
pusha
xor
fimul
push
movs
xor
test
cmps
xchg
rcl
xchg
dec
jmp
inc
enter
ret
jo
mov
sub
daa
pop
aam
popf
in
dec
lahf
xchg
jbe
dec
xchg
jo
ja
and
sbb
push
mov
mov
fsub
aaa
sub
sahf
mov
sbb
sub
stc
sub
push
jg
mov
fnstsw
sbb
sub
or
fdivrp
lahf
push
mov
xchg
pop
pop
push
cmp
dec
arpl
xchg
lahf
jmp
pop
test
imul
push
stos
daa
inc
stos
mov
inc
fwait
stos
cmps
or
outs
push
(bad)
outs
xor
mov
fld
sbb
pop
ds
lods
sbb
mov
mov
leave
push
cs
and
inc
xor
push
adc
retf
iret
xchg
es
jecxz
jle
dec
retf
nop
(bad)
aas
retf
enter
inc
imul
mov
int
addr16
out
dec
add
and
push
out
rcl
ret
in
popa
sub
xor
scas
jp
repnz
and
xchg
test
aas
cmp
idiv
adc
data16
lahf
ffreep
mov
and
mov
sub
aad
stos
hlt
cli
cmp
(bad)
pop
cmp
std
jnp
pop
pop
pushf
dec
pop
inc
sub
sub
(bad)
scas
push
es
out
dec
loope
sub
imul
cmp
jbe
cmc
dec
sub
test
xor
imul
pop
xchg
add
xor
dec
pop
pop
xor
jmp
mov
outs
lahf
addr16
jg
mov
mov
movs
jmp
mov
not
pop
dec
push
cmp
lea
push
aas
mov
nop
and
mov
mov
pushf
idiv
outs
das
mov
outs
pop
inc
xlat
push
jecxz
push
fnstenv
or
shl
push
or
ret
jg
fs
stos
loop
jb
fmul
lods
adc
(bad)
xor
das
sar
cmc
cmps
dec
test
mov
outs
fistp
mov
popw
mov
and
xchg
cmp
xchg
scas
out
cmps
ret
loope
mov
adc
les
shl
daa
arpl
fisttp
lahf
shl
push
aas
ret
push
movs
jecxz
pusha
(bad)
neg
cmp
mov
sti
xchg
lea
outs
arpl
pop
add
push
cmps
stc
mov
pop
push
inc
jae
cmps
dec
cdq
rcr
push
mov
add
jnp
adc
scas
outs
cld
addr16
lock
jnp
inc
xchg
jecxz
cs
cwde
mov
adc
xchg
or
adc
int3
out
sar
ins
add
cs
and
sbb
cmps
aas
cmc
dec
sub
cmps
push
cmp
jns
dec
inc
cs
dec
dec
pop
mov
div
aas
xchg
xor
and
int
mov
add
add
movs
mov
test
mov
xchg
xor
xor
inc
pop
sub
mov
cdq
cmc
inc
dec
rcr
dec
mov
dec
jae
mov
nop
push
pop
stos
outs
ins
shr
stos
jo
sbb
xchg
mov
xlat
jns
sub
dec
cmps
sbb
fcmovnbe
retf
fisttp
mov
mov
ja
xchg
pop
(bad)
cmp
xor
mov
(bad)
aas
pop
cmp
daa
mov
outs
jb
(bad)
cmps
xchg
jo
pop
mov
(bad)
clc
jae
out
cmps
cmp
sub
(bad)
imul
pop
call
sub
(bad)
mov
loop
stos
xchg
mov
mov
outs
sub
sub
and
fcmovnu
setl
jnp
or
popa
popf
in
sbb
add
loop
lea
ret
out
xlat
icebp
jbe
mov
outs
mov
sub
(bad)
pop
sahf
pushf
sbb
push
dec
sub
sub
sub
cmps
push
adc
in
lock
mov
popf
inc
mov
or
das
pop
cmp
ins
inc
sbb
nop
je
xchg
push
rol
adc
pop
mov
cmps
jb
daa
outs
inc
push
and
push
cmp
pop
movs
inc
arpl
xor
cmp
dec
mov
sub
mov
fsubr
jmp
and
jno
sub
(bad)
stos
daa
or
outs
jo
cmp
lahf
push
and
mov
add
cs
jmp
(bad)
adc
test
push
cmps
lahf
scas
mov
daa
out
add
cmps
jbe
jge
(bad)
mov
mov
je
dec
popa
int
and
xchg
xor
iret
mov
mov
dec
data16
lahf
(bad)
dec
imul
fmul
pop
(bad)
aas
neg
mov
add
cmp
scas
jae
addr16
es
add
mov
sub
xor
cmp
stos
ds
add
cmp
jo
ja
mov
push
outs
cmp
sbb
aaa
cmp
cmp
js
scas
movs
and
cli
cwde
outs
lods
pop
cdq
xchg
jmp
aas
js
pop
repnz
out
jae
pop
push
push
or
call
mov
or
mov
aam
add
ins
mov
mov
fstp
lods
pop
inc
mov
or
xor
ja
push
push
inc
mov
gs
jmp
pop
and
lock
(bad)
outs
adc
adc
clc
aas
cmp
imul
adc
xor
lods
jl
cmp
sbb
mov
(bad)
dec
int
mov
pop
data16
imul
xor
or
fcmovnb
scas
push
sbb
and
les
mov
mov
stos
push
jo
push
aad
sahf
mov
or
imul
aam
sbb
mov
cmove
lahf
mov
int
mov
fucom
xchg
stos
mov
sti
(bad)
stos
andps
add
mov
mov
jo
outs
fdivrp
inc
lock
inc
sub
in
or
mov
mov
pop
adc
sub
(bad)
xor
mov
push
xor
int3
xor
mov
and
inc
(bad)
cmpxchg
lahf
loope
xchg
fadd
shl
xchg
movs
je
xchg
mul
inc
push
loopne
in
aas
cs
jno
push
dec
bswap
je
and
dec
ins
scas
mov
jo
imul
dec
popa
jg
push
mov
out
imul
xor
jg
inc
aas
jb
sub
push
out
pop
or
dec
dec
fstp
mov
mov
scas
rcr
mov
xor
stc
cmc
bound
mov
jno
aas
aaa
cmps
lahf
call
stos
imul
adc
jmp
iret
pop
out
inc
sbb
ins
push
inc
jl
cmp
mov
fs
movhps
or
pop
cmps
mov
pop
mov
adc
cmp
jmp
in
lods
mov
fdivr
xchg
push
std
lahf
adc
jg
mov
js
dec
cmp
lods
jbe
daa
mov
pop
in
lahf
dec
nop
cs
stos
outs
mov
ds
xor
adc
repnz
push
and
jne
mov
mov
iret
lea
sub
rol
xor
and
popa
pop
or
jg
pushfw
mov
mov
jecxz
(bad)
in
push
dec
repz
mov
jge
inc
test
jg
jne
shl
pop
jae
jg
inc
in
sti
jmp
push
dec
cmps
mov
jns
out
(bad)
je
imul
nop
cmp
aaa
scas
cmp
or
inc
daa
cmp
lods
push
jl
sub
cmp
push
sbb
mov
repz
ja
dec
add
rcr
fidiv
and
aaa
sahf
bound
mov
push
inc
out
and
test
pop
mov
jg
lahf
add
out
mov
push
mov
dec
mov
test
or
movs
rcr
in
jl
dec
inc
xchg
jmp
movs
jle
sub
loop
fwait
movs
jne
inc
mov
or
cvtpi2ps
pusha
out
inc
mov
cmc
stos
jecxz
test
sbb
in
call
idiv
outs
pop
mov
arpl
xchg
das
sbb
xor
sahf
imul
(bad)
dec
shl
stos
mov
sbb
(bad)
inc
mov
imul
lea
dec
movs
jnp
mov
pop
or
inc
aaa
push
(bad)
mov
aas
mov
int3
pop
sub
hlt
inc
stos
sahf
arpl
bound
pop
pop
ret
in
mov
ss
cmps
arpl
aas
mov
scas
xchg
aad
push
mov
stos
dec
xlat
mov
hlt
or
pop
mov
rol
sub
lods
and
stos
dec
xchg
ficom
and
(bad)
jae
xchg
retf
inc
test
push
cmp
xor
(bad)
outs
mov
push
inc
jne
shr
cmps
mov
stc
call
inc
movs
jae
push
retf
or
dec
jmp
cmp
mov
ret
xor
jg
fstp
mov
inc
lock
out
scas
or
aas
xchg
pop
repnz
and
mov
mov
or
sbb
jl
sbb
lock
push
sub
test
ins
cmp
in
in
loop
sbb
ror
push
test
test
jp
mov
sbb
mov
fwait
lods
lods
push
pop
xchg
stos
mov
push
adc
add
ins
jg
retf
xor
jnp
cmps
fistp
jne
out
jae
sub
cmp
enter
sahf
int
iret
push
aaa
ficomp
push
fidiv
loop
ss
sub
and
daa
inc
sub
dec
clc
pop
jne
jo
lods
cwde
pop
xchg
call
or
fcompp
test
add
push
or
jle
punpcklwd
fsub
inc
daa
lods
xor
push
and
sti
jae
mul
push
cwde
jmp
push
cmp
adc
cmp
cs
mov
bound
repnz
xlat
scas
jae
inc
es
cli
dec
inc
inc
jge
movs
and
xor
cmp
dec
dec
cwde
es
in
lock
ja
inc
or
mov
out
cmps
pop
adc
fwait
mov
stos
xchg
shl
mov
jmp
into
jmp
shl
jp
mov
(bad)
lahf
retf
jg
xor
arpl
das
or
push
pop
pop
stos
daa
int
adc
das
cmps
xor
ret
dec
scas
jmp
idiv
daa
ret
push
pop
cmps
mov
das
(bad)
cmp
mov
les
jbe
mov
sub
mov
ds
xchg
mov
sbb
xlat
mov
arpl
bound
mov
aad
dec
fidiv
adc
shr
daa
stos
pop
mov
fcom
mov
neg
adc
aaa
cmp
xor
fmulp
(bad)
dec
mov
aaa
(bad)
mov
or
push
pop
sub
fcomi
das
retf
pop
mov
scas
sar
iret
cmp
inc
xor
imul
mov
cmps
test
xchg
sub
inc
pop
aas
(bad)
adc
movs
ins
sahf
sub
aas
repz
mov
or
rcl
jns
cld
stos
out
jnp
inc
vrcpss
dec
mov
pop
and
inc
movzx
daa
rol
fild
rol
lods
xor
pop
dec
mov
inc
sar
stos
das
xor
sahf
mov
dec
push
sbb
ret
xor
adc
mov
imul
shl
loop
or
out
push
jo
xchg
mov
or
pop
dec
push
sub
popa
jnp
mov
or
inc
arpl
xor
pop
pop
push
mov
out
cmp
inc
add
(bad)
aas
sub
outs
mov
test
lea
in
scas
sar
mul
daa
cmps
lahf
cwde
cmp
pop
cmp
mov
xor
out
xchg
jge
sub
jno
adc
lods
icebp
add
sub
mov
test
sub
dec
call
pop
xchg
es
mov
jb
outs
mov
out
mov
aas
mov
sbb
push
lods
(bad)
cmp
idiv
stos
fdivrp
inc
outs
jmp
cmovs
(bad)
dec
xchg
cmp
daa
int
mov
dec
and
dec
sahf
fstp
mov
minps
shl
xor
fs
stos
lahf
xchg
(bad)
sbb
popa
lea
or
xchg
(bad)
shl
sbb
cdq
sar
je
fmul
fimul
fbstp
and
mov
jp
into
scas
xor
pop
cmps
add
out
jbe
imul
jg
jno
stos
jmp
sahf
pop
push
xlat
inc
xchg
push
xchg
stos
cmc
daa
inc
repnz
xchg
cmps
push
movs
outs
(bad)
jmp
xlat
dec
(bad)
aas
cmc
arpl
adc
xlat
ja
leave
pop
out
imul
lds
addr16
or
pop
jg
pop
cmp
jmp
in
shr
jmp
jo
gs
stos
(bad)
xor
sub
sub
int
sub
xor
ins
add
pop
std
aaa
scas
fs
clc
in
outs
aas
pop
popa
add
pop
push
out
xchg
xor
movs
jmp
movs
stos
inc
lock
inc
das
in
ror
pop
rcl
xor
mov
cli
mov
and
xchg
mov
imul
sub
mov
fisubr
sahf
shr
mov
mov
dec
seta
arpl
sub
cmp
pop
out
mov
popa
hlt
cmps
mov
aaa
sub
out
cmps
or
mov
add
xchg
out
outs
mov
fcomp
dec
sub
and
xor
loop
fs
mov
stos
xor
retf
mov
je
lahf
cmp
sbb
pop
cmps
push
sbb
adc
neg
cmc
push
lahf
movs
out
test
pop
rcl
inc
lods
adc
int3
lock
(bad)
mov
clc
sbb
inc
mov
in
adc
lods
push
dec
cwde
maskmovq
imul
push
mov
stc
sub
scas
xchg
sti
stos
aaa
arpl
sub
sbb
lds
xor
xchg
(bad)
(bad)
sub
xor
sub
aas
in
cmc
cli
out
mov
jnp
mov
and
dec
dec
mov
adc
bound
retf
sub
das
sub
outs
pop
mov
push
and
adc
ss
popf
xchg
mov
jno
ins
fidiv
cmps
fmul
popa
pop
fcom
enter
pop
lahf
xchg
rcr
arpl
mov
push
mov
(bad)
mov
mov
push
push
mov
lea
sbb
repnz
aas
adc
(bad)
adc
outs
xchg
cmc
mul
(bad)
fldcw
or
xor
scas
adc
mov
in
int3
lods
cmp
dec
in
xchg
push
mov
pop
out
mov
cmps
fnstsw
test
scas
cmps
js
push
sub
mov
mov
lods
sti
je
ret
sub
sbb
pop
mov
mov
mov
cmp
dec
pop
mov
push
ins
mov
inc
aad
cmp
adc
xchg
ror
push
pop
ds
int3
sar
loop
xor
lods
mov
(bad)
int
xchg
mov
movs
or
dec
ja
(bad)
pop
add
pop
push
push
fisubr
xchg
les
cmp
sbb
iret
je
addr16
pop
push
add
cmc
lea
test
or
addr16
dec
je
pop
outs
sub
push
popf
jo
sub
call
adc
jg
cdq
div
dec
loop
xor
jmp
add
dec
inc
xchg
daa
ror
bound
nop
sbb
xor
addr16
in
mov
xchg
cmp
add
push
aas
test
jae
call
sub
push
sub
or
or
jo
sbb
scas
or
(bad)
and
jmp
xchg
adc
mov
test
out
inc
imul
aad
in
ret
addr16
aas
mov
add
or
cwde
(bad)
mov
sbb
sub
dec
test
mov
dec
mov
fsub
iret
push
cmps
loop
popa
(bad)
xor
jecxz
mov
and
push
jmp
mov
cmp
and
es
ds
push
stc
inc
mov
adc
pop
jnp
shl
sbb
xchg
test
cs
(bad)
pop
cmp
mov
fdivr
sbb
mov
xor
aam
mov
fld
imul
aam
mov
sub
ja
pushf
push
shrd
cmc
data16
and
mov
push
(bad)
cwde
lea
jle
push
pop
cmps
jmp
(bad)
mul
jne
sbb
addr16
and
js
xchg
sahf
daa
sub
pop
packuswb
mov
jae
outs
std
push
or
test
pop
inc
mov
je
sbb
adc
js
test
mov
inc
dec
cmp
pop
jg
jns
jg
mov
jno
invlpg
ins
push
fidivr
sbb
arpl
jmp
push
mov
adc
push
sbb
retf
cs
sti
and
shl
into
loope
inc
scas
xor
pop
xor
ror
arpl
cmp
xor
mov
in
xchg
sbb
xchg
mov
cmc
xchg
(bad)
mov
jge
mov
hlt
stos
cmps
adc
jne
movs
xchg
emms
bound
movs
mov
mov
xchg
neg
xor
inc
sbb
mov
cmps
pop
scas
outs
loop
or
adc
cmp
dec
gs
addr16
sahf
cmp
ret
repz
daa
into
push
xor
aas
outs
outs
mov
int3
mov
add
(bad)
ret
and
add
ret
or
push
and
mov
das
push
pushf
mov
addr16
lds
mov
lahf
sahf
mov
aam
(bad)
scas
cmps
es
mov
cmp
inc
push
mov
pop
mov
push
imul
mov
mov
mov
fwait
and
inc
(bad)
dec
pop
mov
xor
sahf
call
outs
push
xchg
jbe
scas
test
sub
mov
cmp
push
fdivrp
sbb
inc
mov
adc
push
push
jne
cmp
mov
stos
cmp
jo
out
fisubr
and
push
or
mov
xchg
sub
dec
jo
sub
mov
movsx
cmp
xchg
jns
mov
jmp
mov
mov
add
dec
dec
outs
push
outs
pushf
mov
enter
mov
push
outs
inc
idiv
jg
jl
adc
out
sahf
in
out
pushf
push
jecxz
mov
dec
out
pop
ss
es
iret
or
dec
jp
jg
stc
out
aas
inc
fldcw
jl
inc
retf
pop
stos
jae
jo
sbb
dec
lahf
test
and
jne
dec
mov
cwde
xor
cli
sub
xor
add
mov
sub
lahf
call
and
mov
cmp
dec
sti
imul
cmp
ja
mov
adc
rol
(bad)
cmps
cmps
dec
(bad)
xchg
stos
sub
add
popf
(bad)
jmp
int
movs
xor
dec
addr16
inc
mov
into
mov
jmp
in
cli
(bad)
pop
mov
loope
add
mov
mov
in
ficom
je
imul
data16
dec
mov
pop
sub
int
test
mov
push
inc
movs
jno
in
mov
dec
aas
sbb
pop
mov
stc
mov
sub
push
cmps
nop
jp
fstp
int
lock
outs
into
mov
add
cmps
pop
xor
(bad)
xor
mov
ins
mov
pop
pusha
adc
sahf
or
pop
aad
adc
js
inc
icebp
sub
mov
jns
not
fild
repz
sub
mov
lahf
sub
out
repnz
push
(bad)
ds
dec
outs
adc
(bad)
lahf
xchg
stos
dec
sahf
jmp
std
(bad)
stos
cs
daa
push
stos
jmp
es
xor
test
push
lahf
mov
ss
(bad)
adc
sub
and
xchg
add
mov
aad
cmp
sub
mov
adc
and
cs
xor
movs
mov
adc
adc
cmc
cmps
outs
sbb
cs
mov
outs
lods
mov
mov
jb
fiadd
mov
xor
aas
test
sub
in
imul
mov
daa
in
mov
pushf
imul
jg
jae
dec
and
ins
jge
loop
lea
cmps
mov
cmps
jb
mov
adc
xchg
test
ret
sbb
icebp
inc
lahf
retf
test
fadd
jb
(bad)
(bad)
outs
push
jle
inc
sbb
cs
jbe
(bad)
outs
ret
sub
push
mov
inc
xlat
das
pop
(bad)
(bad)
xchg
pusha
jmp
ins
out
cmp
test
jmp
xor
(bad)
stos
aas
adc
rcr
jno
push
inc
or
xchg
cs
(bad)
ins
sar
rcr
mov
lds
mov
push
out
jne
int
daa
outs
cmp
dec
fisub
lahf
xchg
out
add
popa
and
ret
cmps
fcom
mov
inc
(bad)
movs
inc
lahf
sub
pop
bound
out
mov
mov
mov
mov
mov
sbb
xchg
sti
cmp
outs
daa
mul
mov
les
mov
fcmovu
pusha
inc
lods
mov
push
sub
and
jl
mov
sbb
lea
inc
mov
jb
pop
mov
push
pop
repnz
mov
(bad)
inc
pop
dec
addr16
mov
xchg
shr
cmp
shl
jb
dec
imul
add
jnp
lds
mov
mov
(bad)
push
arpl
or
pop
mov
shr
inc
mov
movs
outs
(bad)
jno
sub
ja
inc
or
popa
aas
rol
adc
xor
arpl
stos
outs
out
ds
xchg
bound
lea
sub
out
aaa
jmp
jecxz
ret
pop
fwait
push
lods
icebp
inc
xlat
outs
(bad)
aas
cmp
outs
ss
cmps
lahf
js
into
test
mov
push
nop
lea
dec
das
out
ins
cmp
retfw
fsubr
das
pop
aaa
arpl
imul
xchg
jg
aas
test
xor
sub
repnz
sub
inc
(bad)
and
sub
mov
mov
outs
mov
jmp
push
out
xchg
stos
cld
lods
cmp
push
fisub
lahf
adc
retf
xchg
lds
mov
mov
(bad)
ja
cmps
adc
cli
out
lods
ins
imul
into
cmps
push
fwait
scas
push
retf
or
lahf
mov
or
dec
fistp
retf
pop
jmp
or
or
das
dec
jb
mov
bound
stos
pop
cwde
fld
cmp
xchg
lahf
add
sub
jb
ins
sub
das
jne
(bad)
push
adc
xchg
xchg
sbb
cmps
stos
fisubr
aaa
enterw
jno
jnp
add
not
mov
push
aaa
mov
mov
mov
adc
inc
daa
outs
xor
rol
dec
pusha
sahf
jb
cli
jnp
xor
out
jb
inc
mov
jecxz
sub
mov
mov
out
sub
push
aas
in
inc
xor
jg
rcl
aas
in
ret
xor
cmp
dec
inc
add
stos
data16
ss
add
sbb
xchg
sub
xchg
pop
jnp
aas
arpl
mov
outs
cwde
aaa
in
mov
push
mov
xor
jl
and
and
pop
int3
xor
(bad)
cmp
or
add
add
sub
xor
je
add
lds
loop
loop
pop
movs
pop
cwde
mov
sahf
jo
dec
push
adc
pop
out
cmp
sbb
daa
or
scas
jo
mul
push
and
xchg
cmps
sbb
xchg
scas
dec
aas
or
fsubr
mov
mov
xor
js
sahf
or
add
lea
ret
imul
xchg
pop
jle
inc
mov
adc
retf
add
into
fs
jae
push
(bad)
mov
les
xor
mov
cmps
cs
fistp
in
mov
xchg
test
addr16
in
aaa
push
adc
dec
fmul
jl
out
icebp
loop
cmp
pop
pusha
arpl
mov
adc
lahf
(bad)
arpl
movs
ins
adc
mov
add
mov
sub
cwde
mov
jae
xchg
mov
inc
jg
lahf
pop
dec
cli
cmp
dec
pop
out
mov
add
aaa
lahf
mov
inc
loope
iret
lods
out
push
mov
push
mov
outs
push
jo
adc
pop
add
pusha
in
mov
push
scas
mov
pop
xchg
push
mov
or
call
scas
stos
fidivr
add
addr16
push
jg
mov
movs
imul
mov
cmp
fsubr
pop
loope
cdq
repz
lods
pop
dec
std
pop
aad
movs
pop
lea
cmps
data16
push
sub
pop
fwait
push
ret
shr
addr16
cmps
xchg
push
jl
fimul
les
mov
mov
and
add
lahf
(bad)
mov
mov
fist
pop
xchg
cmps
mov
mov
scas
sbb
mov
shr
shl
(bad)
sub
pusha
cmps
lahf
xchg
push
arpl
scas
push
pushf
mov
test
shl
int3
inc
scas
aam
int3
sbb
ficom
or
dec
addr16
pop
mov
sahf
mul
xchg
in
out
jne
outs
lahf
dec
xlat
and
sub
sahf
div
arpl
pop
push
shr
fwait
lods
imul
jecxz
adc
cdq
sub
ror
fld
pop
push
in
aas
jmp
int
jo
retf
(bad)
mov
outs
rcr
mov
xor
jg
sahf
push
inc
rcr
push
retf
adc
(bad)
das
ja
test
xor
jae
adc
ss
lods
push
(bad)
jle
inc
ja
jbe
xchg
in
xchg
enter
or
sub
(bad)
outs
mov
xor
scas
jmp
js
cs
scas
xor
outs
dec
xchg
ins
push
mov
lahf
lods
pop
dec
outs
(bad)
rcl
adc
or
ret
shr
aas
sar
test
add
jae
imul
fucomip
cli
push
inc
cmps
rcr
fiadd
(bad)
xlat
xor
cli
movs
inc
hlt
outs
stos
dec
inc
pop
ret
outs
daa
mov
stos
push
or
addr16
sbb
stos
sbb
sbb
scas
mov
(bad)
adc
outs
aaa
sbb
ret
push
pop
lahf
rol
ror
sahf
sub
mov
in
mov
ror
adc
lahf
cmps
aaa
es
(bad)
pop
push
mov
sub
call
cmp
mov
xchg
scas
lahf
mov
stos
aas
add
scas
ror
inc
inc
jb
pop
lea
pop
cmps
fidiv
xor
stos
pop
fnstsw
sub
repnz
fadd
sti
stos
jmp
mov
and
idiv
mov
jbe
xor
mov
out
imul
inc
ja
mov
dec
push
(bad)
jmp
push
jmp
outs
out
mov
jge
dec
idiv
cmp
mov
dec
xchg
stos
or
dec
xchg
stos
sbb
sbb
loope
out
jle
sub
icebp
sub
(bad)
test
js
imul
movs
inc
cs
xchg
sub
test
out
je
jle
xchg
mov
fbld
(bad)
in
mov
repnz
mov
mov
cli
mov
add
ins
pop
cld
inc
xor
and
imul
mov
aas
(bad)
movs
push
mov
mov
cmc
les
push
pop
movs
aaa
ja
push
push
pop
js
xchg
mov
and
outs
cmp
cmp
mov
cmps
and
or
scas
and
sub
cmp
js
xchg
out
sbb
mov
gs
mov
imul
sbb
cmovbe
aas
ins
mov
xor
cmp
out
mov
add
sbb
addr16
ins
mov
fiadd
and
movs
das
fistp
test
xchg
or
ret
aas
test
jp
mov
sub
fld
daa
xchg
pop
int3
lds
fnsave
push
pop
inc
stos
jne
bound
shl
aas
mov
adc
sub
mov
cmp
cmp
mov
lahf
mov
fs
xor
jl
jne
movs
les
rol
xchg
sti
lahf
sbb
pusha
js
outs
pushf
test
pop
xchg
in
mov
adc
call
sub
bound
les
outs
adc
jmp
stos
add
xchg
daa
pop
in
stos
adc
push
xor
push
ror
xchg
rdpmc
inc
(bad)
sahf
int3
mov
fiadd
push
xchg
sbb
fs
adc
imul
mov
jnp
fcomp
movs
je
lods
addr16
out
sub
(bad)
ins
ror
xor
fsubr
and
cmps
rdseed
jl
jmp
xchg
scas
out
pop
mov
and
or
cmp
jo
(bad)
psllw
lods
xchg
inc
mov
call
mov
adc
pcmpgtw
mov
push
dec
and
sbb
imul
adc
add
(bad)
lahf
gs
fcom
adc
xchg
mov
lahf
icebp
arpl
mov
dec
cmp
call
sahf
adc
arpl
push
je
sub
push
stos
cli
cli
mov
mov
mov
das
sbb
aas
test
ror
out
push
mov
sub
and
out
jmp
xor
sbb
sub
and
or
nop
sahf
or
aas
push
not
adc
sub
dec
xchg
nop
rcr
or
out
shr
push
ss
xor
inc
mov
cvtdq2ps
scas
cmp
test
jg
fidivr
sahf
(bad)
out
mov
mov
pusha
(bad)
mov
jae
imul
sub
or
cmps
(bad)
push
imul
push
les
xor
call
inc
pop
adc
lods
xchg
sub
xchg
outs
pop
test
das
addr16
jnp
push
adc
dec
scas
mov
addr16
cwde
add
jmp
jne
stos
pop
adc
fistp
mov
cdq
jmp
cli
scas
pop
mov
neg
pop
aaa
cmp
test
daa
push
inc
mov
xor
sbb
stos
daa
cmp
test
ret
sbb
rcl
and
mov
push
aas
ja
aaa
cmp
sub
lds
jb
pop
stos
sbb
mov
or
mov
test
shl
(bad)
xlat
scas
subps
and
push
push
lahf
sub
mov
mov
(bad)
in
movs
rol
mov
data16
push
mov
fsubrp
cmc
pop
push
mov
ficomp
ins
leave
cmp
test
push
fmul
sbb
sub
pop
sub
sub
cmp
sti
lods
ror
ret
xor
arpl
mov
popf
sub
pop
xlat
xor
jae
fs
ds
dec
pop
jno
dec
cwde
jge
jns
jg
popf
push
xor
cmp
rol
push
nop
xor
(bad)
retf
cmp
mov
popa
call
into
cld
lods
mov
lods
(bad)
out
push
setbe
outs
paddsw
inc
sub
cmp
outs
xor
sub
loop
or
dec
sub
outs
cmp
outs
xchg
mov
inc
or
sbb
xchg
shl
jmp
cs
fwait
push
lds
(bad)
stos
mov
sub
shl
mov
iret
dec
add
push
or
stos
jle
cmp
outs
or
mov
push
fidivr
mov
add
xchg
mov
repz
pop
fld
rcr
sub
lahf
shr
ins
sbb
movs
loop
xlat
out
lods
inc
clc
fisubr
ret
fisubr
add
sbb
ret
sbb
iret
stc
test
dec
mov
stos
add
inc
ins
xor
sub
ja
lods
mov
jp
cmp
pop
fcmovb
pop
adc
shr
scas
inc
xor
es
mov
cwde
xchg
mov
outs
std
ss
pop
stos
adc
pusha
dec
aad
test
pop
mov
push
mov
sbb
mov
mov
xor
inc
pusha
pop
sub
add
mov
imul
imul
jmp
js
es
sub
mov
jp
retf
mov
scas
je
loope
daa
mov
push
cmps
jl
aas
ja
dec
aam
xor
js
fwait
xor
xchg
movs
(bad)
sbb
lea
sti
adc
mov
(bad)
aad
dec
xchg
addr16
fwait
aad
dec
push
xor
push
xchg
ins
out
push
ja
inc
push
pop
jns
hlt
pop
inc
pusha
movs
pop
(bad)
in
jnp
push
clc
mov
aas
je
(bad)
bound
aaa
sbb
xor
(bad)
push
sahf
and
aas
iret
mov
push
cs
mov
mov
cmp
push
mov
rcr
inc
mov
adc
mov
fst
ss
or
fstp
push
dec
dec
mov
mov
xor
je
cmc
in
jg
mov
cdq
sub
jnp
movs
xlat
aas
cld
(bad)
movs
call
addr16
or
test
sub
add
inc
jmp
jg
retfw
ret
sub
aad
sbb
addr16
adc
adc
pop
dec
pop
neg
fnstcw
inc
ins
test
jbe
dec
not
loopne
mov
cmps
xchg
nop
pop
lods
out
push
pop
ins
ins
(bad)
ds
ret
das
pandn
jb
popa
or
xchg
imul
jae
dec
push
sub
lods
add
stc
mov
sub
lahf
mov
jmp
fs
call
or
xor
cmp
fldcw
dec
ds
lods
sub
cmp
dec
fisubr
outs
jo
push
dec
inc
scas
imul
fcmovb
dec
adc
mov
sbb
add
xchg
mov
scas
push
out
pop
sub
adc
push
aaa
pop
lea
cmp
or
out
clc
daa
xchg
lea
mov
sub
movs
mov
ror
mov
jno
jecxz
test
scas
xor
popa
dec
adc
cmps
pop
xor
pop
mov
push
xchg
or
xlat
cmp
sub
cld
outs
dec
xor
sar
mov
es
mov
sub
mov
and
mov
jo
sar
in
cmp
xchg
mov
mov
mov
aaa
not
or
jg
retf
jp
test
xchg
jb
outs
jmp
cmp
cs
retf
jmp
idiv
nop
daa
sbb
cmp
fisubr
dec
out
fld
das
(bad)
jae
adc
inc
dec
(bad)
cdq
mov
or
setp
cs
bound
add
ret
aam
daa
or
ins
pop
neg
sub
xor
out
shl
das
mov
inc
(bad)
dec
mov
xlat
xchg
ds
test
cmps
addr16
bound
mov
aas
mov
dec
pop
in
imul
push
sub
cmp
cmp
sbb
inc
mov
test
fiadd
(bad)
mov
pop
fnstcw
sub
pop
das
mov
mov
arpl
ss
idiv
aam
cwde
ficom
mov
mov
cmps
ficomp
(bad)
jg
jmp
xor
fcomp
movs
scas
shl
lea
mov
in
cli
shr
jbe
inc
pop
push
cld
retf
aas
mov
(bad)
xchg
push
xchg
imul
jne
jecxz
mov
push
js
add
popf
add
gs
lahf
xchg
xchg
addr16
out
xor
mov
stmxcsr
enter
push
or
(bad)
imul
mov
lods
mov
mov
out
push
in
mov
inc
xor
test
enter
cmps
jbe
dec
and
cmp
cmps
adc
aas
inc
xchg
mov
push
sub
dec
test
arpl
jae
frstor
ins
pop
or
inc
cmps
cmp
mov
in
pop
jae
inc
sub
pusha
dec
add
outs
jge
cmps
xchg
push
jge
push
and
(bad)
dec
daa
lahf
cld
mov
adc
rcr
outs
jno
sbb
push
cld
add
(bad)
cmp
(bad)
lahf
xchg
cmp
(bad)
jne
int
arpl
push
(bad)
fs
cmp
and
xor
aas
rcl
sti
cmp
fwait
cmps
cs
inc
sub
jae
mov
lahf
mov
add
std
mov
sbb
sub
xchg
sub
sbb
xchg
es
mov
ja
and
idiv
ins
pop
pop
dec
inc
rcr
sbb
push
add
cmp
or
in
outs
fimul
pop
into
mov
lea
adc
outs
mov
rol
sub
in
push
and
xchg
(bad)
(bad)
addr16
sub
fbld
out
jp
mov
sub
aam
push
pop
stos
sbb
pop
and
aas
sbb
sbb
lahf
fisttp
out
and
xchg
adc
mov
push
push
jbe
lods
stos
add
dec
add
jne
shr
inc
in
(bad)
sahf
inc
cmp
push
mov
aas
mov
add
xchg
sbb
and
in
fiadd
push
scas
loope
shr
push
icebp
sbb
mov
fld
cmp
mov
cmp
xchg
cmp
pop
jnp
outs
fs
iret
xor
cmps
(bad)
jns
ret
mov
retf
jge
imul
aas
out
lock
cmps
arpl
pop
out
pusha
sub
lds
out
call
mov
shr
stos
arpl
std
mov
xchg
(bad)
adc
jb
daa
dec
sbb
mov
push
sub
sub
sbb
(bad)
aaa
scas
or
sub
sahf
sub
bound
pop
imul
sbb
xchg
fucom
icebp
mov
imul
cdq
add
fwait
cmp
and
bound
aas
dec
mov
sub
mov
das
jg
and
jno
jbe
hlt
sbb
scas
es
jge
aas
aaa
fdiv
jmp
add
inc
cmp
push
mov
lahf
mov
jnp
popa
cs
ins
in
mov
xor
push
stos
daa
jl
lahf
push
push
cmps
sbb
daa
add
lea
jne
add
and
fimul
sahf
repz
pop
fldcw
push
pop
pop
xchg
push
movs
(bad)
loope
cmp
aaa
das
into
fnsave
arpl
imul
and
inc
pop
inc
add
sub
stos
int
inc
jmp
cmp
xchg
adc
mov
ror
mov
imul
cmps
pop
jmp
leave
sub
jg
aas
jb
push
mov
jg
loop
movs
jle
andps
stc
mov
sub
inc
pop
add
sub
(bad)
out
(bad)
fldcw
push
mov
outs
lea
pushf
fidivr
xchg
ins
jl
es
in
add
sti
popf
inc
outs
iret
xor
mov
jecxz
cmp
jmp
pusha
mov
jne
mov
jno
cmp
mov
sbb
aaa
lods
mov
xor
sub
(bad)
mov
nop
daa
fld
ja
jmp
aad
repnz
and
test
nop
cmp
dec
out
cmp
adc
imul
test
aas
jns
sub
cmp
(bad)
sti
lea
xchg
out
cmp
nop
dec
mov
jecxz
and
xor
mov
movs
das
imul
test
jne
add
scas
cs
fimul
mov
ret
dec
and
jg
retf
fidivr
mov
idiv
jbe
push
add
mov
push
scas
scas
outs
imul
cs
test
test
aaa
cmp
mov
das
repnz
cmp
stos
(bad)
(bad)
push
fstp
nop
and
pop
outs
mov
jmp
out
sti
inc
es
ja
popa
scas
mov
mov
aas
iret
out
fwait
mov
test
scas
emms
push
push
ins
imul
xchg
push
lods
and
dec
call
enter
ins
mov
aas
retf
or
les
mov
sub
sub
in
test
cmps
imul
pop
dec
add
fbld
aaa
adc
sti
test
es
fistp
out
mov
push
pop
(bad)
lods
ret
mov
movs
(bad)
outs
imul
mov
mov
push
mov
mov
xor
jnp
neg
push
xor
ins
(bad)
push
lea
cmps
sub
shl
frstor
ret
mov
fucom
sub
in
mov
push
and
sahf
jg
jns
cs
leave
xlat
mov
dec
mov
arpl
pop
sbb
inc
sub
sub
retf
inc
adc
xor
mov
push
jge
retf
scas
and
add
dec
scas
outs
call
adc
ja
jl
xor
sub
lods
aas
in
xor
mov
mov
mov
cmp
das
xchg
and
outs
push
xlat
pop
or
jmp
mov
cmps
popa
sub
adc
cmp
xchg
xor
mov
pusha
in
loop
push
test
sbb
ss
fisub
and
jge
imul
dec
(bad)
leave
push
dec
daa
or
pop
iret
dec
pop
cwde
inc
int3
xor
(bad)
inc
jl
stos
arpl
xlat
scas
adc
arpl
cmp
imul
cmp
jne
adc
cmp
aaa
ja
or
addr16
mov
cmp
imul
pusha
(bad)
outs
daa
jb
xchg
push
es
stc
push
mov
fidiv
fmul
dec
addr16
sbb
sahf
xor
or
cmps
and
pop
adc
pop
movs
cmp
cld
push
loop
dec
push
sub
xchg
(bad)
scas
jg
jo
(bad)
out
sub
ja
push
cmps
push
icebp
outs
lahf
es
sahf
lods
inc
mov
xchg
sbb
sub
pop
fidivr
adc
lods
sbb
outs
imul
lahf
ror
adc
jmp
imul
scas
inc
out
jmp
test
push
pop
xchg
cs
cmp
movs
retf
pop
push
arpl
push
aaa
je
(bad)
retf
jo
mov
mov
cmp
pop
mov
push
(bad)
stos
push
adc
cwde
stos
js
scas
cmp
pop
or
scas
mov
xor
(bad)
in
ins
mov
cmps
in
scas
repnz
or
cmp
outs
mov
sub
pop
lea
enter
call
pop
mov
mov
es
push
sub
scas
popf
pop
stos
push
fst
cmp
push
pop
(bad)
sbb
in
mov
outs
mov
rcl
jp
outs
jg
xor
inc
mov
fsubr
add
xor
arpl
mov
fnsave
dec
mov
mov
adc
xchg
hlt
arpl
or
push
or
out
stos
pop
jmp
add
scas
pop
mov
or
push
dec
inc
xchg
outs
arpl
outs
hlt
mov
cli
xor
in
inc
cmp
inc
shr
loope
ins
rcr
sbb
out
ret
shl
test
in
push
pushf
std
lahf
stos
jmp
ds
and
jl
sub
div
pushf
loope
out
loop
dec
xchg
fidivr
scas
sub
in
mov
addr16
xor
les
pop
pop
daa
retf
push
mov
fist
mov
clc
jne
out
pop
rcr
sub
shl
sub
push
jo
sar
lahf
movs
cmps
cld
mov
cmp
pop
arpl
mov
inc
stos
cmps
mov
sub
inc
jne
fiadd
pop
push
test
stos
mov
mov
ret
xor
cmp
pop
jg
ror
mov
ds
push
rcr
sbb
jbe
mov
lahf
pop
stos
push
lea
push
xor
jnp
sub
rol
jmp
outs
sbb
sub
aas
mov
push
sub
jmp
inc
sbb
movs
push
sub
aas
inc
mov
mov
push
push
fmulp
cld
push
sbb
pop
cs
lahf
in
and
pop
push
imul
xchg
inc
mov
sub
mov
adc
push
adc
and
fdiv
lock
mov
mov
cmps
ds
sub
pop
sahf
jb
aas
inc
mov
cmp
dec
imul
and
jp
vpmacssdql
popa
adc
adc
push
xchg
mov
sub
pushf
pop
or
cmp
loope
test
movs
mov
ja
pop
mov
push
lock
daa
lea
jg
jnp
add
mov
cmp
(bad)
ficomp
shr
in
dec
cwde
pop
add
scas
mov
in
mov
xchg
fs
push
sub
adc
sti
inc
push
sub
mov
push
jecxz
fwait
outs
into
adc
dec
pop
rol
xchg
shr
jnp
ja
dec
cmp
shr
gs
jo
pop
outs
add
mov
fidivr
xchg
outs
fwait
adc
mov
fucom
(bad)
mov
inc
lods
cli
jmp
jo
lahf
sbb
gs
add
or
mov
mov
lea
mov
cli
push
push
dec
ins
enter
sbb
fld
(bad)
sbb
fcmovu
pop
sub
sub
sbb
popf
sub
lea
jge
push
fldcw
dec
(bad)
mov
scas
inc
ins
imul
pop
in
push
ror
lahf
dec
sbb
leave
pop
and
and
dec
js
icebp
loopne
in
outs
push
xlat
shl
inc
jb
pop
inc
lahf
mov
jge
xchg
scas
jg
out
xchg
into
das
xchg
jb
pop
aas
scas
jne
out
xchg
sahf
ret
sub
(bad)
fild
sahf
adc
jl
loop
aaa
push
inc
dec
and
dec
push
sub
and
mov
push
push
ja
xor
sub
call
adc
scas
hlt
mov
sub
pop
mov
mov
scas
inc
sar
bound
(bad)
sbb
mov
pop
sub
sbb
inc
mov
jb
outs
shr
fwait
inc
or
imul
and
icebp
inc
sbb
mov
sub
or
sub
inc
cmps
jb
ss
ja
rol
cmp
data16
mov
and
imul
daa
mov
mov
adc
imul
mov
cmp
(bad)
cmovg
movs
sbb
out
cdq
retf
push
outs
xor
jg
sbb
mov
out
add
jmp
dec
aam
dec
mov
mov
retf
dec
adc
in
mov
mov
ror
sbb
adc
cmc
push
xor
cmp
or
adc
push
div
dec
pusha
arpl
scas
cmp
outs
cmp
lods
adc
xor
pop
xor
cmp
fs
xchg
rcr
out
push
popa
mov
push
push
stos
(bad)
or
mov
popa
jmp
jno
daa
mov
dec
clc
xchg
or
scas
mov
dec
loopne
push
mov
fiadd
inc
sbb
mov
scas
cdq
cmp
mov
lods
pop
sbb
dec
cmp
out
adc
mov
sbb
pop
mov
mov
ds
mov
imul
dec
sub
jge
sub
fimul
outs
inc
push
mov
fwait
pop
pop
pop
cmp
lahf
push
sbb
adc
mov
pop
xor
fiadd
fucomp
sub
or
in
jo
cli
stos
out
xor
sub
or
pop
test
outs
out
test
mov
leave
ret
aad
xor
mov
cld
jle
cmp
mov
scas
pop
int3
pop
mov
pushf
sti
pop
mov
pop
das
mov
cmp
scas
aas
mov
inc
or
movs
mov
(bad)
push
imul
jmp
(bad)
and
loop
mov
pop
mov
ins
out
nop
out
or
cmp
scas
pop
lods
loop
mov
sbb
adc
adc
xchg
lods
pop
aad
mov
mov
push
rol
sub
sub
jnp
ja
loop
inc
outs
pushf
in
and
mov
outs
lea
lods
jmp
sar
lds
repz
scas
jp
pop
pop
mov
sbb
mov
sub
mov
sbb
mov
push
idiv
imul
cmp
das
outs
jno
or
daa
cmovl
mov
sahf
inc
xor
retf
push
sub
adc
ret
mov
es
sti
lods
sbb
dec
scas
mov
push
sbb
jmp
mov
adc
dec
addr16
mov
pop
jae
mov
sbb
mov
cmp
std
add
out
lea
sub
cld
xor
jae
fs
sub
(bad)
aas
dec
sub
mov
test
clc
nop
lods
sub
cmps
cmp
cmp
cli
fcomi
je
pop
cli
shr
dec
mov
aas
and
pop
daa
rol
sahf
ficomp
or
inc
or
sub
push
jnp
mul
cmp
mov
sub
xor
and
mov
movs
and
(bad)
or
jl
scas
mov
ficom
mov
shr
push
add
push
cmps
dec
aam
adc
pop
mov
xor
stos
cld
shl
stos
retf
(bad)
jmp
pop
mov
fst
lahf
mov
xchg
outs
pop
enter
inc
sbb
pusha
loop
gs
dec
out
lods
subps
das
std
and
pop
inc
add
cli
fucomip
mov
jle
stos
test
cs
xchg
xor
push
(bad)
outs
std
mov
je
xor
sub
arpl
dec
ds
aas
jl
aas
cmps
adc
sar
stos
out
push
outs
cmp
cmc
lea
fdivr
jle
(bad)
adc
dec
inc
and
sbb
stos
ja
inc
mov
punpckldq
jg
in
sbb
mov
mov
test
into
gs
retf
cmp
cmps
jb
jae
scas
scas
leave
jmp
and
(bad)
adc
das
imul
(bad)
push
fild
jle
push
call
mov
mov
mov
mov
xchg
into
xor
mov
push
sbb
lods
das
call
inc
xchg
jmp
cmp
mov
jne
aam
sub
nop
pop
pop
les
xchg
add
cmps
pop
xchg
into
cmc
repnz
dec
and
xor
sub
and
sub
hlt
imul
addr16
ficomp
dec
sbb
push
ret
aas
inc
rcl
(bad)
fstp
shr
iret
test
mov
push
cmp
and
add
(bad)
push
jg
mov
lods
mov
cmps
pop
sub
movs
popf
and
pop
stos
adc
stos
mov
stos
xor
inc
outs
iret
leave
ds
das
mov
pop
sbb
pop
cs
inc
push
push
test
aaa
xchg
imul
mov
mov
(bad)
sub
jmp
xchg
out
sub
mov
lods
push
cmc
lea
aas
jg
push
cmp
lods
pop
xchg
xchg
mov
jno
cmps
fild
test
sub
add
mov
outs
loopne
sub
int
sub
retf
xchg
fstp
es
outs
mov
fidivr
adc
(bad)
cmps
jl
inc
sub
jnp
mov
push
mov
mov
mov
out
cmp
sub
jne
(bad)
sbb
stc
enter
aad
loope
pop
cld
sub
pop
lods
jmp
inc
pop
push
(bad)
adc
mov
dec
jne
push
inc
fsubr
fdivr
(bad)
dec
leave
xor
out
adc
push
das
jbe
sub
bnd
outs
ja
ds
pop
sti
iret
imul
hlt
stos
mov
sub
adc
xchg
js
sahf
and
scas
mov
xchg
xlat
imul
xor
mov
inc
add
push
jbe
imul
mov
mov
jnp
mov
pop
pop
inc
rol
les
sbb
sub
pop
pop
ins
cmp
sub
test
mov
add
mov
sar
retf
xchg
lods
scas
sub
inc
jmp
jle
into
xchg
add
push
inc
aam
xchg
and
daa
cmp
cwde
jmp
neg
aas
cmps
mov
push
jae
data16
(bad)
mov
mov
mov
mov
rol
dec
test
ret
test
dec
mov
pop
cmp
mov
rcr
je
scas
dec
call
in
xor
and
stos
push
(bad)
cmp
mov
push
dec
daa
cmp
jle
popf
pop
stos
adc
jg
pop
rcl
adc
adc
jae
mov
mov
xor
ja
mov
mov
push
std
cmc
ror
push
(bad)
sub
mov
or
test
outs
jp
and
outs
jnp
xor
out
lds
imul
neg
pavgw
mov
push
out
xchg
std
mov
retf
and
test
xor
std
mov
sbb
lods
outs
mov
xor
mov
out
push
add
test
pop
sub
out
jg
lahf
sahf
jb
mov
pop
push
ftst
mov
inc
in
outs
rol
mov
and
cdq
mov
pop
pop
das
pop
dec
sub
imul
mul
pop
(bad)
pop
retf
lods
mov
popa
gs
fstp
adc
cmp
xor
daa
fldcw
ins
jnp
xchg
jb
mov
fcomip
lahf
popa
(bad)
mov
lock
das
in
xlat
push
(bad)
push
sahf
mov
jno
sub
mov
popa
mov
mov
mov
inc
add
pushf
sar
adc
or
cmps
hlt
dec
jo
cmp
imul
rol
lods
cli
or
cmc
push
mov
or
bndldx
cmp
scas
mov
dec
jg
sbb
mov
xor
ja
cmps
xor
out
stos
sbb
cmp
lock
out
jl
pop
call
cmp
sub
vprotb
cmp
adc
imul
leave
sbb
arpl
push
rcr
mov
jg
inc
inc
pop
sbb
movs
mov
sbb
sbb
jnp
adc
arpl
mov
push
sub
mov
xchg
mov
mov
push
push
add
sub
inc
not
(bad)
fist
xchg
mov
imul
pusha
ins
inc
xor
into
lahf
aas
ret
jae
es
or
arpl
mov
int
cmp
adc
xchg
pop
pop
(bad)
outs
mov
xchg
dec
es
outs
push
mov
int
stos
inc
repnz
(bad)
sti
stos
fimul
out
scas
mov
mov
jmp
mov
mov
jp
sbb
adc
jge
rcr
sbb
lock
out
stos
mov
ret
fisubr
outs
jl
push
(bad)
ins
pop
out
je
lahf
push
and
ds
popf
iret
je
test
(bad)
das
add
out
mov
vmovmskps
scas
jg
(bad)
jmp
mov
sub
retf
or
or
mov
cmps
push
inc
aaa
sub
cs
xor
es
push
mov
mov
mov
fs
in
mov
inc
cmps
push
(bad)
(bad)
cmps
sbb
inc
add
sub
xchg
retf
add
int3
mov
push
sub
addr16
(bad)
mov
and
adc
in
jg
mov
shl
mov
cld
push
sbb
mov
sub
push
shr
stos
inc
out
mov
fstp
ins
(bad)
dec
cmps
out
xchg
or
pop
dec
sub
mov
idiv
mov
outs
mov
cmp
pop
imul
mov
loope
jmp
jb
aas
xchg
xor
pushf
loop
(bad)
mov
cmp
stos
shr
aad
push
add
lods
mov
inc
int3
mov
(bad)
shl
push
jne
lods
lahf
mov
mov
sar
or
in
mov
(bad)
xor
or
dec
retf
pop
cmp
mov
push
mov
pop
xchg
iret
scas
sub
(bad)
(bad)
sub
mov
ror
or
or
outs
inc
sub
into
xchg
xlat
add
mov
addr16
fadd
jmp
lods
pop
aas
daa
les
mov
adc
fisub
addr16
outs
lods
and
inc
fistp
add
mov
and
mov
mov
pop
sar
test
cwde
xor
cmp
cmp
inc
scas
sti
and
cli
daa
or
lds
mov
int3
dec
pushf
dec
mov
shl
inc
push
mov
outs
push
cmp
arpl
adc
push
xchg
bt
jo
xchg
mov
daa
sbb
adc
jno
cmps
fdivr
sub
(bad)
xchg
mov
in
mov
cmc
adc
xchg
pop
addr16
test
daa
sbb
mov
stc
jo
int3
(bad)
or
fst
push
mov
leave
fisubr
mov
sub
or
mov
lahf
aad
mov
call
or
jmp
ret
in
movs
mov
adc
pop
lahf
gs
push
cmp
sbb
loope
scas
and
ss
dec
push
push
outs
dec
scas
mov
sub
ja
bound
in
aas
mov
inc
fwait
jge
mov
and
mov
outs
mov
test
sahf
gs
ficomp
sub
sub
loop
or
jecxz
mov
cmp
cs
scas
xchg
xor
mov
mov
mov
outs
(bad)
adc
inc
jge
aas
mov
mov
ins
pop
jecxz
xor
pop
fimul
in
push
mov
adc
xchg
addr16
lea
movs
mov
addr16
sub
nop
stc
hlt
sbb
shl
or
lea
movs
call
cmps
push
addr16
lahf
cli
mov
cmps
nop
mov
add
in
push
xchg
stos
adc
sub
stos
retf
lds
into
mov
dec
jle
neg
fwait
xchg
dec
xchg
pop
mov
sbb
retf
or
shl
xchg
outs
(bad)
imul
adc
fidivr
lea
mov
lahf
lds
lahf
arpl
mov
fild
cmp
sub
shr
and
cmp
rcr
aaa
sub
cmp
mov
pop
xchg
ins
es
adc
in
mov
mov
pop
outs
outs
sub
sbb
mov
sub
into
jle
shr
movs
mov
cmps
add
xchg
fldpi
(bad)
mov
dec
cmc
lea
aas
aas
movs
sub
jg
and
add
int
inc
rol
adc
test
mov
in
mov
and
sub
inc
pop
and
mov
jns
add
(bad)
mov
aas
cmps
gs
xchg
adc
jnp
aam
push
push
outs
(bad)
fdivr
(bad)
repnz
das
sub
mov
outs
das
xchg
ss
jnp
xor
inc
aaa
inc
aas
call
xor
adc
adc
inc
push
movs
lods
mov
data16
jb
dec
pminub
jg
inc
imul
(bad)
cmp
add
(bad)
pop
cs
or
cmp
test
mov
(bad)
cli
lahf
stos
sub
outs
jno
sub
push
es
mov
mov
adc
xor
es
leave
jns
out
mov
xchg
dec
lahf
pop
hlt
dec
dec
(bad)
ins
pop
imul
or
rcr
shl
push
jne
or
(bad)
mov
and
mov
ret
jnp
les
movs
cmp
jbe
sbb
and
push
or
or
(bad)
lahf
cmps
jmp
inc
sub
ja
adc
pop
ss
fsub
xlat
imul
dec
cmp
stc
icebp
cmp
sub
push
push
dec
cmps
mov
(bad)
fdiv
mov
adc
leave
shl
sti
ficom
push
scas
or
dec
ja
leave
xor
adc
mov
mov
into
push
adc
in
data16
push
and
push
ret
int
imul
add
ja
(bad)
cmp
mov
sbb
jmp
imul
iret
pop
mov
popa
fisubr
cli
mov
imul
mov
out
(bad)
jo
stos
pop
mov
sub
adc
mov
pop
(bad)
mov
jo
sbb
or
mov
scas
into
sub
es
mov
push
sahf
dec
add
movs
out
scas
sub
mov
retf
jne
popa
(bad)
xor
je
pop
movs
cli
cmc
bound
pop
imul
xor
sub
xor
clc
and
pop
test
adc
les
xchg
lods
xor
xchg
cmps
invd
scas
sub
xor
les
div
loop
imul
sub
scas
sahf
or
(bad)
cmp
mov
pop
and
int
mov
inc
inc
sub
mov
mov
in
and
sar
arpl
xchg
sub
imul
cs
dec
stos
push
cli
cmp
pop
addr16
mov
sbb
sbb
adc
fnstcw
pusha
inc
fidivr
lock
aam
daa
nop
(bad)
jge
mov
(bad)
mov
mov
scas
(bad)
es
xchg
paddsw
lea
jl
int3
sub
scas
mov
mov
push
das
jnp
add
in
(bad)
(bad)
cli
dec
enter
push
pusha
add
xchg
das
pop
push
jl
push
inc
shr
fs
outs
jmp
mov
or
icebp
test
int3
xor
jecxz
aaa
cmps
mov
in
mov
or
mov
psubd
xor
movs
cmps
loop
ins
adc
mov
mov
sub
xrstor
dec
adc
xor
(bad)
dec
pusha
sub
mov
or
scas
pop
leave
daa
dec
jg
pop
lods
mov
jmp
adc
cmp
sbb
not
adc
inc
fild
cmp
xor
(bad)
dec
adc
adc
daa
mov
pop
das
xchg
dec
cs
sbb
cmp
cmps
outs
push
push
cmp
aas
add
cmp
add
jg
loop
pop
shl
inc
std
mov
mov
das
push
iret
pop
fidiv
fisub
fisttp
xor
daa
sahf
dec
lds
xchg
pop
test
fidivr
xor
push
jmp
lods
cli
push
cmp
jns
das
retf
rcl
lahf
mov
pop
out
outs
(bad)
push
pop
xchg
or
or
ja
dec
outs
ds
cmp
aaa
cmp
xchg
mov
fsubrp
mov
lods
rcl
arpl
aad
lds
or
add
stos
je
movs
mov
sub
jecxz
mov
stos
add
mov
pop
call
push
sbb
movs
popa
xcrypt-cfb
cmps
es
daa
sub
xchg
xlat
pushf
(bad)
mov
into
jae
pusha
cmp
xchg
aaa
mov
adc
loop
cmp
(bad)
cmp
cmp
cmp
sub
mov
repnz
jnp
and
lods
aas
data16
sar
cmp
enter
jmp
mov
clc
xor
out
mov
sub
sar
jo
jno
sub
cld
pop
push
sub
out
add
jae
mov
call
(bad)
mov
shr
push
ret
das
dec
addr16
js
jg
loope
inc
jl
mov
sahf
add
cs
jmp
inc
outs
sbb
cld
ja
xor
mov
xchg
pop
gs
fwait
jmp
out
dec
je
ds
scas
push
arpl
pop
(bad)
cmp
jns
fimul
pop
das
mov
xchg
and
mov
ficomp
and
lea
movs
mov
add
mov
retf
push
repnz
je
jbe
xchg
cmp
xor
(bad)
mov
sub
shl
cmp
jmp
dec
imul
mov
xchg
ja
mov
clc
outs
(bad)
push
in
push
loop
scas
add
adc
jmp
std
dec
jae
and
retf
ja
dec
cmp
cmp
and
das
mov
sbb
push
ja
ins
inc
mov
data16
and
jnp
mov
scas
in
sub
push
adc
pop
cmps
cs
das
pop
cmp
shr
shl
out
sub
sub
stos
cmps
lahf
cmps
enter
sahf
fwait
xchg
aas
nop
sbb
loopne
mov
loopne
cmp
xchg
inc
das
aas
cwde
adc
popa
in
ficomp
aad
dec
mov
mov
lea
retf
retf
loop
dec
lods
mov
fidivr
jmp
shr
mov
(bad)
imul
xchg
push
add
es
das
rol
je
leave
out
es
aas
jmp
xor
scas
in
mov
push
sub
adc
mov
stc
mov
shl
int
fdivrp
jae
dec
in
addr16
mov
or
xor
or
outs
mov
sub
adc
(bad)
(bad)
sbb
pop
pop
and
aaa
repnz
stos
sub
lods
cwde
les
xchg
movs
out
lods
adc
mov
sti
cli
mov
lods
mov
cmc
loope
ret
das
mov
dec
sahf
sub
outs
jp
cmps
or
add
addr16
dec
lea
movs
neg
out
enter
in
outs
mov
sti
ja
sub
(bad)
jbe
repnz
ret
push
and
xlat
pusha
jnp
xchg
mov
jle
fs
mov
mov
push
frstpm(287
push
add
jmp
inc
inc
jno
daa
pop
stc
sbb
xchg
mov
pop
out
or
imul
ds
ja
mov
nop
outs
sahf
inc
in
dec
mov
rcr
mov
es
mov
sub
fcmove
cmps
das
stos
push
lea
ficom
in
mov
stos
lea
mov
ins
mov
mov
or
loop
mov
fidivr
(bad)
shr
jl
das
mul
and
xchg
outs
outs
dec
imul
mov
jae
dec
mov
mov
sub
inc
fimul
pop
mov
cmp
sub
adc
lods
jae
pop
sub
cli
push
cs
imul
lahf
dec
push
cmp
mov
jo
outs
dec
ret
mov
(bad)
fcom
or
jb
jae
mov
lods
lahf
mov
cmp
mov
pop
fild
ja
jno
jb
es
sub
lahf
stos
je
jg
mov
add
sub
retf
cmp
addr16
retf
ds
xor
dec
xchg
push
mov
cmps
mov
in
repnz
and
fbstp
pop
add
cs
sub
popf
fnstsw
adc
fidivr
jle
push
stos
sar
xor
mov
scas
out
push
arpl
loopne
mov
outs
mov
and
sub
add
and
mov
sti
mov
push
pop
jae
or
js
pop
mov
sub
out
inc
(bad)
pop
inc
repnz
addr16
add
out
shr
pop
sti
jl
push
pop
jae
retf
cs
sbb
ins
and
test
outs
int
dec
lods
fs
adc
xor
mov
pop
aaa
mov
mov
fild
jle
cmp
mov
lahf
out
fild
enter
(bad)
fcom
jp
addr16
mov
outs
push
jle
inc
sub
shl
mov
sar
sub
jp
retf
and
push
jo
(bad)
loop
mov
imul
arpl
aam
xchg
xchg
xor
icebp
or
mov
jb
push
dec
jle
dec
addr16
dec
jmp
stc
out
mov
outs
loop
iret
lea
stos
cmp
addr16
fwait
mov
int3
sub
je
sub
push
stos
popa
xor
fimul
sub
clc
dec
mov
mov
jno
in
(bad)
aas
push
call
out
jg
inc
fst
ins
and
xchg
(bad)
arpl
xchg
out
ret
lods
outs
and
sub
(bad)
jae
xor
dec
fwait
cmp
pop
in
(bad)
daa
sub
outs
pop
(bad)
scas
mov
pop
push
dec
add
mov
push
shufps
add
outs
adc
scas
push
out
test
pop
sbb
arpl
dec
neg
or
outs
movs
data16
call
in
inc
push
pop
cli
cmps
xchg
test
mov
jns
dec
leave
add
loop
movs
mov
ds
aad
es
push
(bad)
mov
dec
and
idiv
out
cmp
stc
mov
sahf
ret
push
addr16
inc
sbb
in
xor
inc
cmp
lahf
push
jno
enter
dec
arpl
sub
jae
xchg
sar
xor
popf
jae
cvtps2pi
jmp
jp
or
add
aaa
sub
(bad)
(bad)
sbb
outs
sti
fiadd
pusha
(bad)
ins
stos
aad
popa
jns
movs
stos
mov
imul
ds
fcmovb
cmp
retf
mov
xchg
nop
mov
cmc
sbb
retf
xor
movs
mov
stos
nop
mov
jg
inc
jnp
repz
push
sub
push
push
bsr
or
pop
pop
push
nop
test
push
out
outs
pop
aad
inc
jae
ds
pop
xchg
out
mov
mov
leave
cmc
bts
jmp
and
sbb
clc
jmp
dec
dec
cmp
pop
and
pop
or
daa
mov
adc
jb
or
cli
pop
ins
sub
pop
iret
xchg
dec
mov
outs
retf
popf
pop
push
mov
push
ret
add
mov
xor
out
jmp
push
fild
inc
adc
sbb
cs
(bad)
lahf
ficom
test
mov
inc
(bad)
cmps
addr16
xor
or
cs
lahf
push
and
xchg
scas
pop
mov
sbb
xor
lahf
imul
mov
sub
arpl
stos
lea
cmps
out
js
test
pop
ja
lods
fnstcw
imul
push
mov
sub
stos
pop
nop
dec
jmp
or
mov
sub
cmps
inc
and
ja
jg
xchg
data16
(bad)
mov
(bad)
stos
pop
xchg
inc
gs
cs
hlt
test
sub
dec
ror
sub
mov
cmps
ja
arpl
mov
jle
jbe
mov
inc
dec
daa
sahf
adc
mov
outs
jmp
and
retf
sub
jge
mov
stos
jbe
nop
rcl
mov
push
mov
push
xchg
ror
seta
xor
daa
mov
(bad)
lahf
adc
movnti
sbb
xor
daa
mov
cmps
outs
sub
sub
bound
aas
pop
dec
mov
mov
mov
lahf
(bad)
aaa
aas
cmps
mov
mov
repz
out
cs
jg
das
std
xchg
dec
scas
movs
and
outs
(bad)
mov
lds
ss
mov
mov
or
inc
(bad)
movs
fucom
(bad)
das
mov
sbb
add
push
push
retfw
popf
das
stos
repnz
std
mov
pop
stos
mov
outs
mov
pop
jmp
in
jmp
fdivr
sub
jmp
sbb
fwait
ja
pusha
add
and
xor
cmps
mov
inc
addr16
loop
cmpxchg
rcr
push
aas
lea
das
ret
pop
sbb
and
xchg
jne
mov
fimul
retf
and
cmp
jno
test
pop
in
sub
test
jle
dec
mov
dec
repnz
cmp
stos
push
sub
jg
pusha
aaa
jmp
test
pop
push
mov
xchg
rcr
in
and
jb
idiv
scas
jg
jnp
cmp
pop
(bad)
(bad)
mov
mov
push
sbb
pop
iret
fs
imul
(bad)
adc
dec
data16
addr16
mov
inc
cmps
cmps
iret
aad
sub
outs
arpl
mov
or
lahf
or
cmps
lods
popf
inc
shl
pop
scas
mov
ss
ja
push
add
(bad)
push
xor
mov
outs
mov
test
stos
stos
cmps
xchg
mov
je
lods
fstp
mov
mov
push
idiv
xchg
dec
pop
and
mov
fsub
push
(bad)
int
jge
mov
iret
xor
(bad)
push
jno
xor
or
mov
data16
push
sub
inc
push
sbb
gs
lea
cmps
leave
aaa
sub
iret
dec
mov
sub
cmp
pop
pop
dec
sub
sbb
ja
(bad)
lahf
outs
cmc
not
dec
leave
addr16
jmp
dec
cmps
in
sahf
and
jmp
xchg
jmp
mov
sbb
in
fimul
(bad)
pop
dec
js
stc
loopne
dec
loop
sub
lock
xor
pop
inc
jmp
jecxz
shl
outs
sub
test
pop
push
gs
inc
movs
icebp
cmc
loope
push
or
or
movs
mov
aas
add
ds
mov
aaa
and
push
movs
retf
movs
int3
xor
xchg
out
cmp
jbe
push
(bad)
and
clc
out
jmp
neg
jbe
cmps
dec
add
sub
xchg
shl
push
mov
mov
out
push
add
inc
jge
scas
inc
xor
sub
imul
scas
retf
cmp
inc
push
dec
aas
pop
push
sti
sub
pop
cmp
mov
cs
les
mov
sti
mov
pop
movs
add
mov
mov
cmp
or
icebp
mov
fnclex
or
fs
ins
outs
xor
sub
push
and
mov
mov
call
pextrw
mov
dec
retf
jb
cmps
mov
(bad)
xchg
push
jae
adc
icebp
mov
fwait
outs
out
(bad)
fdivr
cs
cmp
cs
and
mov
push
mov
push
lods
mov
inc
mov
out
xor
stc
xchg
pop
outs
mov
mov
stos
mov
loop
push
lahf
daa
loope
lahf
pop
mov
out
ss
fisttp
or
pop
cmc
fidivr
cwde
popf
pusha
test
add
retf
js
add
(bad)
jae
mov
das
ficom
bound
xchg
ja
call
adc
mov
sbb
retf
add
adc
stos
add
jmp
mov
loop
or
lods
push
mov
scas
push
sub
and
(bad)
(bad)
xor
xor
pop
mov
jl
dec
sahf
rol
xchg
mov
cmc
jno
ret
mul
jge
sub
ret
test
cmps
rol
(bad)
and
pushf
or
mov
and
lds
push
and
jbe
mov
push
mov
out
arpl
arpl
dec
mov
inc
pop
call
or
or
dec
daa
rol
mov
out
mov
xor
jg
sar
lea
fcom
cmp
and
std
xchg
sub
inc
cmps
imul
pop
arpl
gs
dec
scas
aam
cmps
gs
sbb
jb
lahf
cmp
sub
mov
nop
outs
jbe
mov
ret
sub
pop
sub
add
cs
ins
clc
(bad)
out
mov
cmc
cmp
aas
mov
cmp
pusha
inc
sub
dec
nop
sbb
aaa
mov
(bad)
hlt
adc
or
loope
mov
por
(bad)
daa
lock
push
adc
stos
(bad)
ja
ins
xlat
cmp
loop
sbb
rcr
mov
adc
and
scas
test
es
sbb
mov
adc
mov
add
test
fld
rcl
cmps
mov
iret
daa
sub
or
dec
in
ds
and
leave
scas
out
(bad)
jmp
movs
sub
stos
mov
shl
js
jge
and
arpl
adc
mov
cmps
jmp
cmps
push
pop
dec
pop
fnsave
xor
mov
mov
outs
cli
push
add
mov
pop
adc
jg
adc
shl
clc
jb
mov
ror
jmp
pop
cmp
sbb
sub
daa
inc
push
pop
xor
movhlps
xor
jno
and
mov
movhlps
mov
lahf
jo
popf
cwde
imul
cli
pop
adc
mov
aam
adc
lods
cmp
dec
push
mov
add
add
cmps
adc
jmp
adc
xor
adc
enter
shl
xchg
in
sub
iret
scas
mov
fiadd
jbe
pop
mov
retf
loop
pop
and
addr16
xor
pop
mov
lods
pop
aad
sub
loope
test
pop
test
mov
mov
inc
push
mov
push
repnz
push
(bad)
fucomp
push
or
xor
jle
mov
fadd
(bad)
xchg
in
sub
pop
pop
test
addr16
push
inc
inc
push
jno
dec
ror
mov
pop
jg
in
mov
jg
mov
cli
(bad)
push
data16
cmp
sub
jbe
and
xor
dec
ficomp
jp
jnp
push
mov
ffreep
aas
lahf
sti
sbb
and
push
movs
push
pop
(bad)
mov
sub
pop
cmps
div
dec
sub
cmps
mov
ins
cs
test
sub
cs
int
xchg
aaa
stos
push
outs
sbb
sub
sub
fmul
fisubr
dec
in
xchg
(bad)
std
test
popa
in
outs
sub
lds
test
pop
das
adc
loopne
dec
(bad)
mov
pop
movs
jbe
mov
push
fst
arpl
into
push
iret
cmc
adc
popf
arpl
cli
jmp
retf
aas
(bad)
mov
sub
test
jnp
adc
sbb
out
lds
lahf
inc
ret
movs
sub
mov
mul
packssdw
test
idiv
je
mov
fdivrp
movs
sub
mov
addr16
rol
push
cs
test
inc
pop
loop
jae
shl
inc
pop
pusha
cwde
shl
mov
lahf
jp
pop
outs
jae
shl
dec
push
inc
int3
push
aas
fidivr
cs
bound
adc
or
mov
sahf
call
xor
push
mov
cmp
xlat
retf
push
lahf
xor
xor
loop
packssdw
xor
sbb
mov
ss
aad
cmp
enter
lock
fs
movs
ror
xchg
in
sahf
jo
scas
push
xchg
mov
int
sub
rcl
addr16
lods
lea
ds
pop
mov
addr16
sbb
scas
mov
lds
mov
call
mov
mov
iret
cmp
fld
mov
cmps
test
leave
pop
(bad)
lahf
in
imul
fcmovb
sub
xor
movs
xchg
pop
or
into
jle
jp
out
cmp
lds
mov
mov
xor
and
sbb
xor
mov
retf
mov
sub
xor
dec
push
sbb
scas
jae
popa
lods
add
rol
lahf
ds
outs
dec
xor
out
add
aaa
(bad)
push
mov
and
ficomp
ss
mov
repnz
cs
jecxz
cdq
xchg
imul
sbb
and
lea
xor
or
push
mov
push
pop
das
(bad)
fistp
lahf
int
les
icebp
jo
ficomp
mov
imul
jns
stos
retf
outs
lds
in
jnp
sbb
dec
aad
lahf
inc
dec
jl
or
jl
das
mov
and
mov
jp
mov
(bad)
cmps
adc
outs
or
cmp
bound
scas
mov
and
(bad)
(bad)
xor
neg
sub
jl
sub
cmp
add
leave
xor
call
jo
sub
sbb
outs
retf
cmp
sbb
pop
or
mov
pop
pushf
es
jno
dec
nop
cmovge
and
mov
mov
mov
and
repnz
jle
test
jecxz
cmps
mov
jg
ds
into
cld
add
das
or
out
mov
sbb
das
fidiv
cmp
in
lahf
adc
dec
scas
in
mov
adc
cmp
xor
sub
cmps
test
(bad)
arpl
addr16
aaa
and
cmp
mov
mov
dec
pop
test
mov
sbb
stos
cmps
or
adc
dec
rcr
sub
pop
shr
jg
fidivr
popa
mov
adc
(bad)
mov
inc
mov
xlat
mov
inc
out
mov
xor
addr16
push
outs
mov
mov
pop
outs
push
loop
repnz
sub
aaa
add
sub
test
mov
xor
push
outs
dec
sar
pop
mov
sub
ja
jl
xchg
sbb
outs
sbb
sub
sub
jnp
lods
retf
arpl
popa
adc
and
movs
inc
lods
adc
mov
inc
and
cs
mov
cmps
mov
(bad)
push
push
shr
fisub
xor
movs
adc
addr16
outs
xchg
stos
pop
test
cmps
add
mov
adc
cld
inc
cs
mov
out
dec
mov
aas
popa
gs
ficom
pusha
sahf
into
fs
push
jg
jp
push
aas
daa
sub
push
xor
or
cs
push
fdivr
pop
daa
pushf
adc
jle
mov
ins
mov
inc
outs
(bad)
inc
jg
mov
inc
add
mov
aam
arpl
mov
hlt
pop
mov
mov
push
push
retf
adc
scas
ja
mov
dec
stc
and
fucomip
jne
in
mov
cmp
fidivr
stos
mov
stos
and
xor
adc
call
mov
cmp
(bad)
xor
ds
xor
(bad)
xchg
add
push
sbb
mov
dec
imul
xchg
daa
mov
pop
ss
push
xchg
pop
sub
mov
outs
sub
jle
and
scas
jl
dec
imul
stos
(bad)
pop
sub
pop
sbb
btc
sub
push
shld
mov
pop
addr16
ins
xor
sahf
mov
cmp
fstp
dec
dec
add
(bad)
gs
xchg
lahf
push
addr16
ret
sub
gs
aaa
xor
(bad)
test
enter
xchg
sub
add
sub
rcr
ja
scas
push
lahf
scas
adc
mov
test
jae
fldenv
push
mov
out
stos
sbb
ds
pop
nop
inc
or
or
mov
and
(bad)
sar
gs
scas
bswap
or
movs
jbe
cmp
add
mov
pop
inc
(bad)
lods
scas
dec
iret
jmp
mov
xchg
push
mov
adc
sbb
in
test
(bad)
out
mov
pop
inc
jg
pop
mov
adc
nop
push
mov
jno
mov
mov
xchg
push
jae
sub
and
mov
xchg
stos
ror
(bad)
dec
cmps
jg
mov
arpl
pop
and
cmp
stos
mov
mov
sbb
ficomp
out
xor
pop
(bad)
fdiv
stos
sbb
loope
stos
imul
cs
loop
dec
daa
daa
shl
sub
sar
mov
std
pop
sahf
and
icebp
fwait
xchg
movs
(bad)
adc
fild
mov
mov
cmp
rcl
ja
jle
idiv
stc
mov
in
outs
cld
aas
push
lahf
das
xor
(bad)
inc
adc
in
stos
(bad)
push
dec
outs
imul
push
xchg
push
icebp
jmp
repnz
dec
arpl
mov
push
xchg
aaa
push
dec
cmp
mov
clc
pop
cld
aad
lods
loop
or
sar
movsx
aam
movhps
stos
iret
sub
adc
retf
dec
stos
retf
cmp
or
das
mov
sub
push
dec
xor
xchg
iret
jae
sub
pop
adc
mov
sbb
jmp
daa
jb
adc
in
cmp
lea
xor
adc
cmps
retf
sahf
gs
not
ja
pop
mul
jne
sbb
jo
xor
xor
adc
cli
dec
cmps
je
dec
sub
clc
adc
(bad)
sbb
push
(bad)
fdivr
mov
call
sbb
pop
das
(bad)
lods
push
movs
mov
fwait
mov
add
mov
cmc
push
add
imul
mov
adc
xor
add
ja
sbb
mov
ds
push
cmp
mov
and
scas
sub
mov
mov
xor
scas
inc
sub
into
pop
popa
rdmsr
dec
ins
cmps
cmp
cmps
cwde
xor
cs
mov
mov
lods
fisubr
add
adc
adc
lds
repnz
mov
fld
adc
cmp
cli
pop
int
jge
and
sub
aam
(bad)
adc
(bad)
push
cld
rcr
xchg
xchg
int
cmp
push
cwde
cmp
(bad)
xchg
fbstp
adc
imul
sub
addr16
aad
sub
pop
mov
test
arpl
xor
sbb
inc
in
stos
icebp
lods
push
ins
xchg
add
cmp
mov
push
arpl
cvtps2pi
mov
mov
pop
out
jb
pop
(bad)
cld
dec
icebp
aaa
outs
adc
je
outs
pop
and
mov
pop
sub
xchg
dec
jnp
movs
ret
adc
xchg
xchg
repnz
cmps
xor
pop
pop
aaa
cmp
fs
mov
mov
mov
clc
sahf
outs
mov
(bad)
pop
jmp
add
sub
mov
fcom
inc
int3
pop
stos
mov
std
and
std
mov
and
lods
and
inc
sub
das
bsf
dec
(bad)
ds
ins
add
mov
stos
or
in
sub
pop
mov
mov
inc
icebp
dec
(bad)
pusha
push
add
sbb
sar
xor
bound
out
out
jbe
pusha
arpl
mov
jg
repz
jo
inc
lods
sub
mov
mov
aaa
or
stos
mov
hlt
pop
sub
cli
push
cmps
mov
(bad)
rep
pop
add
mov
in
mov
(bad)
fsubp
pop
aad
xor
je
push
mov
loopne
jl
or
mov
sub
dec
fisub
fbld
out
adc
fwait
jmp
mov
xchg
mov
mov
pop
mov
jg
pmulhw
imul
mov
arpl
lea
pop
adc
out
dec
push
mov
rcr
mov
jg
sub
adc
imul
mov
push
loop
gs
dec
stos
stos
(bad)
mov
xor
scas
pop
sub
xchg
pop
stos
xchg
push
push
xlat
add
and
push
in
mov
adc
ja
mov
fld
mov
nop
cmps
(bad)
xlat
push
cmps
mov
pop
addr16
fcmovne
mov
inc
adc
cmp
fadd
daa
or
int3
add
sub
adc
pop
out
test
(bad)
mov
test
mov
pop
and
inc
stos
cmp
dec
aas
cmp
and
mov
mov
pop
mov
or
cmps
jne
daa
aas
dec
mov
cmps
sar
stos
add
mov
ret
movzx
jb
das
loop
xchg
retf
(bad)
mov
sbb
out
mov
pop
inc
mov
cmc
(bad)
jmp
and
fld
jle
dec
mov
out
hlt
pop
push
pop
xchg
dec
jnp
bound
xchg
jnp
scas
outs
stos
lods
outs
fcmovb
sub
jnp
mov
xchg
mov
out
neg
ret
(bad)
(bad)
dec
mov
stos
jnp
xor
xchg
sub
imul
xor
imul
out
jecxz
jmp
(bad)
pop
dec
sar
fstp
push
cmp
stos
mul
push
ins
bnd
js
loop
cmp
(bad)
es
pop
inc
lahf
cld
pop
cmp
outs
fcomp
push
jle
push
stos
jns
inc
mov
stos
xchg
xor
popa
aam
push
fiadd
aad
retf
inc
daa
movs
adc
mov
inc
cmps
lods
pop
dec
sub
add
fnstcw
mov
shld
xchg
sub
inc
jg
cmps
cmp
xchg
div
push
sbb
in
stos
xor
sahf
lods
int3
dec
mov
jnp
pop
out
inc
test
addr16
test
movs
xor
or
cmc
sub
or
jns
mov
stos
scas
movs
xor
pop
inc
loopne
mov
test
xchg
aas
stos
stc
cmc
mov
stos
pcmpeqd
retf
aaa
mov
mov
sub
add
mov
mov
mov
inc
addr16
cmps
push
imul
dec
mov
lock
sub
and
jp
mov
popf
cvtpi2ps
out
ins
mov
pop
xor
jg
aas
cld
les
jnp
ja
jg
addr16
mov
ret
push
jecxz
mov
cmps
mov
jo
adc
adc
mov
or
lahf
bsr
jnp
jae
or
cld
mov
out
lahf
in
call
mov
xor
ret
xchg
(bad)
cmps
js
cmp
(bad)
pop
stc
ds
cmps
jbe
adc
jg
cwde
add
and
or
jmp
inc
mov
les
repnz
das
lahf
mov
mov
aas
push
xor
sbb
popa
mov
xchg
inc
jno
outs
das
sahf
push
in
mov
fadd
jne
lods
adc
dec
mov
jnp
cmps
mov
lods
imul
mov
push
push
dec
(bad)
push
daa
mov
pushf
test
pop
stos
fbld
sub
movs
mov
fidiv
lods
icebp
pushf
stc
dec
inc
gs
pop
pop
mov
xor
pop
retf
rcl
loop
or
lods
test
xchg
les
stos
shr
popa
and
outs
sahf
stos
xchg
test
mov
pop
mov
and
ret
lds
nop
in
mov
sub
jae
xor
mov
sub
addr16
aad
sub
lods
jmp
pop
adc
lahf
stos
scas
xchg
xor
shr
xchg
or
xor
pop
cs
aas
lahf
mov
idiv
dec
sub
aaa
mov
inc
mov
std
je
imul
out
cmc
dec
test
lahf
pushf
pop
popa
dec
push
out
test
xchg
je
cmps
sbb
not
xor
ja
js
aaa
mov
add
pushf
or
bound
aaa
mov
int
sahf
or
push
jg
inc
movs
cmp
aad
dec
iret
cmp
cmps
dec
and
dec
jnp
addr16
js
stc
cmp
fsub
xor
jg
shr
xchg
cmp
mov
push
(bad)
repnz
lods
xchg
test
mov
dec
ss
fldcw
cmp
mov
ds
add
mov
and
push
arpl
jmp
mov
sub
sub
retf
int
fisubr
das
inc
xchg
mov
pop
xchg
lea
cs
stos
lahf
push
outs
(bad)
ds
daa
dec
push
jb
imul
movhlps
cmp
aas
xchg
dec
aaa
(bad)
mov
movs
out
sbb
imul
(bad)
dec
lds
sub
ja
pop
cs
in
mov
outs
and
jns
sbb
push
mov
sub
adc
mov
and
(bad)
jecxz
mov
arpl
cmps
pop
and
sub
outs
ficom
cmp
mov
dec
fstp
or
inc
and
cli
daa
mov
sub
daa
inc
cmp
outs
cmp
pop
jecxz
fs
cmp
out
pop
leave
push
cmps
(bad)
xlat
mov
xchg
cmp
lahf
jmp
mov
jle
jmp
xchg
int3
fisubr
push
sub
add
push
sbb
arpl
mov
dec
das
aas
jg
xlat
pop
aas
or
scas
xor
shl
stos
and
jmp
mov
pop
dec
cmps
push
call
mov
xlat
cmps
shl
fprem1
outs
xlat
jns
pop
stc
sbb
mov
ins
dec
das
xchg
mov
xchg
sub
xchg
jg
pop
test
mov
imul
dec
stos
ja
jmp
fimul
cmps
push
sub
jle
fimul
sbb
cmp
push
sub
jno
mov
mov
stc
sub
cs
movs
mov
shl
stos
loope
push
push
pop
int
cmps
lea
leave
in
pop
add
or
and
mov
sub
pop
jg
xor
stc
nop
xchg
fimul
push
or
leave
pop
sub
ja
xchg
dec
lahf
in
in
retf
nop
inc
das
jb
(bad)
mov
cmp
in
jns
cmps
mov
add
pop
imul
cmp
in
stos
push
dec
sub
idiv
pop
pop
mov
jae
test
rol
dec
cmp
rol
fidiv
inc
jmp
repnz
sub
mov
rcr
sbb
fisubr
push
in
cmps
push
dec
jg
movs
sbb
mov
sub
jl
mov
cmp
sub
xchg
inc
xchg
lods
xchg
mov
pop
(bad)
mov
out
sti
and
clc
out
movs
or
xor
or
outs
cli
add
and
sbb
out
scas
mov
ret
mov
mov
pop
(bad)
daa
pop
sti
je
add
popfw
mov
sbb
xchg
xchg
pop
sub
popa
(bad)
movhps
lds
xor
aad
nop
cmp
xlat
pop
xchg
fadd
sub
jmp
xchg
mov
mov
or
fdiv
cmp
xor
sub
push
sbb
cmps
mov
mov
ins
push
repnz
sbb
xor
movs
dec
mov
dec
jle
dec
dec
aaa
xlat
mov
addr16
(bad)
sub
adc
xor
lods
sbb
dec
icebp
addr16
mov
add
lahf
cmp
ret
inc
out
das
cmps
loope
imul
addr16
mov
mov
out
jae
or
lds
pop
cmps
aad
leave
aad
imul
inc
inc
and
jl
ficomp
pcmpgtd
sub
scas
sub
nop
stos
inc
mov
idiv
enter
dec
out
push
gs
repz
pusha
ja
dec
repnz
cmps
xor
push
jp
inc
adc
jae
fmul
sbb
xchg
aas
jae
xchg
pop
movs
xchg
popa
lock
stos
xor
xor
jnp
aam
mov
imul
mov
xchg
adc
sub
mov
mov
jne
push
sahf
and
dec
adc
psubq
and
(bad)
retf
(bad)
add
daa
std
out
jne
stos
movs
push
cli
inc
imul
(bad)
xorps
push
and
rcl
push
jl
test
movs
pcmpeqb
mov
stos
sahf
std
xor
cmp
mov
cld
sbb
push
cmp
mov
push
int3
cmp
fwait
mov
ficomp
ins
sub
subps
imul
add
lahf
fnstenv
dec
(bad)
out
push
inc
outs
lea
aam
mul
or
sub
shl
lods
fimul
int
sbb
pop
sub
data16
cmp
adc
sub
clc
jg
and
cmps
mov
or
dec
push
loope
push
sbb
push
stos
data16
test
outs
(bad)
jmp
lea
dec
push
data16
jmp
and
stos
sbb
adc
inc
sub
or
xor
ja
jb
jnp
in
ss
and
dec
outs
dec
movs
inc
hlt
pop
arpl
sub
dec
neg
out
daa
mov
lods
shrd
and
loop
mov
cmp
stos
or
out
scas
leave
pop
push
dec
and
cmc
pop
dec
pop
test
mov
fidivr
xor
lahf
mov
cmp
outs
aas
ror
out
addr16
pop
outs
in
xchg
sti
(bad)
shl
sub
gs
scas
push
leave
aaa
es
daa
jb
xchg
test
movs
or
inc
mov
faddp
outs
out
popa
cdq
add
test
scas
imul
mov
pop
sub
mov
cmps
sub
cmp
or
repz
loop
dec
mov
fidiv
addr16
test
xchg
loopne
movsx
(bad)
or
loope
jo
fisubr
stos
jns
inc
mul
and
mov
jns
dec
pop
mov
adc
or
pusha
xor
cli
jmp
lock
lods
sbb
stos
scas
ja
into
xor
sbb
sbb
mov
aas
imul
ins
cmps
js
jne
push
stos
ss
jb
or
shr
gs
mov
adc
xchg
mov
test
mov
leave
cmp
adc
in
jb
es
push
jne
push
fiadd
adc
mov
jns
cmps
pushf
and
pop
ret
and
call
retf
push
inc
jg
fimul
addr16
cs
out
xor
in
mov
test
gs
xchg
jg
leave
mov
jae
cmps
mov
inc
pop
out
pop
stos
scas
movzx
sub
mov
div
sub
aas
iret
mov
pop
inc
lods
cmps
lods
scas
sub
mov
cmps
out
aaa
jl
adc
arpl
xor
cmp
pop
or
inc
cmp
stos
idiv
sbb
pop
nop
and
fnstsw
stos
bound
test
push
movs
fsubr
jo
dec
imul
xor
pushf
xor
retf
mov
inc
add
dec
lea
and
xchg
ins
mov
imul
repnz
cs
inc
adc
lahf
daa
call
mov
arpl
outs
xchg
and
retf
rcl
in
mov
cli
ds
cmps
dec
adc
adc
sbb
lahf
gs
outs
scas
push
sub
sub
mov
push
inc
cmps
ja
jge
test
or
mov
sub
mov
pushf
aas
inc
ret
dec
in
push
jne
jle
outs
sbb
mov
jp
cmp
test
add
adc
or
lahf
pushf
mov
mov
add
mov
pop
mov
shr
stos
fidiv
in
dec
pop
mov
out
adc
mov
ret
test
ja
jne
fs
cmps
xchg
cmps
jg
loop
(bad)
int3
cmp
aas
test
push
scas
out
mov
jmp
cmc
sub
pushf
std
lea
outs
adc
xchg
stos
push
push
movs
scas
adc
ja
xchg
imul
out
adc
idiv
mov
fs
in
mov
outs
in
jns
cmp
(bad)
outs
daa
outs
sbb
sbb
xor
(bad)
lahf
sub
sbb
push
test
daa
retf
je
push
pop
push
mov
stos
lea
popw
jnp
pop
scas
and
xchg
or
inc
mov
pop
dec
mov
data16
mov
adc
dec
push
stos
adc
jmp
push
pop
mov
cs
adc
push
lahf
push
pusha
xchg
ja
movs
aad
int3
dec
xor
stos
xor
cdq
iret
adc
cmps
cli
leave
xchg
lods
hlt
mul
dec
xor
jae
cmp
mov
cli
lods
sar
out
dec
cmps
jge
mov
lods
cmp
pop
jno
jg
test
stos
(bad)
(bad)
movzx
cmp
fcomp
pop
(bad)
aas
xor
aaa
jae
mov
inc
imul
xchg
xchg
lahf
movs
jne
rcl
outs
cmc
das
jmp
jge
jbe
ins
dec
adc
pop
popa
gs
and
push
(bad)
push
stos
mov
dec
movs
sub
sub
jae
ss
fidivr
ds
stos
xchg
outs
jbe
xor
addr16
xlat
(bad)
cld
xchg
pop
xor
pop
xor
mov
mov
aad
gs
scas
test
xor
je
pop
dec
cwde
cmp
jg
subps
into
xchg
aam
dec
fdivr
(bad)
jg
inc
mov
inc
pop
push
or
nop
(bad)
cmps
dec
mov
xor
cmp
ss
mov
cmps
inc
jg
scas
mov
cmp
sub
xor
je
xchg
mov
adc
xchg
ds
cli
dec
mov
xor
arpl
fwait
mov
add
mov
sbb
xchg
mov
fs
(bad)
lods
mov
ds
push
sub
mov
mov
sub
push
cmp
outs
das
add
aaa
adc
cmps
int3
sub
sahf
les
mov
test
pop
sub
sub
clc
or
scas
ja
out
mov
mov
cmps
sub
stos
sub
sub
das
ja
pusha
sahf
clc
push
cmp
mov
int
shl
popf
div
push
scas
mov
mov
outs
fdiv
arpl
dec
cmps
ins
mov
aaa
xor
(bad)
dec
pop
xchg
jo
jmp
mov
mov
sbb
mov
dec
sahf
mov
inc
adc
push
shr
outs
sub
aas
push
mov
dec
lahf
cmp
sbb
mov
pushf
mov
mov
ins
out
xor
(bad)
out
inc
movs
mov
xchg
pop
cmps
push
add
lahf
jmp
jbe
lahf
mov
xor
neg
jmp
cmps
jno
mov
jge
dec
test
movs
mov
push
adc
push
stos
fs
and
mov
out
idiv
ins
js
jne
stos
jmp
pop
pusha
and
shl
cmc
clc
inc
gs
sub
mov
jne
repnz
mov
out
sub
jge
stos
push
add
int3
mov
jo
div
pop
sbb
adc
sti
std
mov
jae
ret
inc
inc
stos
sbb
ss
scas
outs
retf
dec
into
xor
pop
xchg
das
neg
push
imul
push
fdivr
inc
sub
loop
outs
pop
mov
mov
push
sahf
xor
push
les
mov
push
out
push
add
cmc
imul
xchg
sub
gs
nop
fldln2
retf
shl
cmp
cmp
ja
fdivp
pop
lea
fimul
sub
pop
mov
out
and
and
and
jmp
lea
ins
imul
mov
dec
shr
aaa
out
xchg
sbb
mov
cmp
jl
add
xchg
xor
pusha
add
sbb
adc
add
ret
jnp
fld
add
add
test
sub
ds
push
dec
sub
add
mov
push
daa
cmps
lds
push
mov
movs
jmp
jbe
into
mov
lods
push
push
loope
pop
add
add
mov
inc
stos
sbb
pop
jns
cmps
std
jnp
ja
push
paddusw
or
adc
cmps
jnp
inc
shl
inc
pop
and
jle
out
shl
inc
mov
jg
add
imul
dec
xchg
adc
mov
pop
xchg
je
out
ficomp
push
outs
pop
in
sub
jno
sub
fld
mov
xchg
and
addr16
jge
loop
xchg
(bad)
call
add
dec
dec
ss
and
cmp
mov
popa
enter
lods
sub
in
pop
fimul
(bad)
xor
std
movs
jle
scas
in
cmp
pop
nop
mov
mov
jae
inc
cmps
(bad)
cs
pop
xchg
inc
je
scas
scas
imul
lods
out
lahf
outs
nop
mov
iret
cmp
idiv
sahf
pop
jg
sub
pop
jae
cmp
sub
int3
sti
bound
adc
mov
loop
xchg
sahf
xor
cmp
jmp
fst
sub
add
and
aam
loop
push
mov
sar
cs
xchg
cmps
mov
cmp
ss
stos
add
sbb
sub
enter
cmps
fild
sub
fucompp
add
mov
mov
out
outs
mov
mov
add
jg
neg
sbb
mov
and
test
daa
pop
and
stos
mov
test
cmp
daa
add
bound
push
add
fist
test
test
mov
dec
dec
in
inc
arpl
jo
(bad)
imul
jge
stos
inc
mov
mov
std
(bad)
addr16
mov
or
xor
xchg
pop
fidiv
cmp
pop
das
adc
dec
cwde
ds
out
jmp
in
aam
aas
mov
outs
(bad)
aas
mov
mov
push
pop
mov
push
out
int
mov
cli
sub
popa
dec
stos
loop
adc
xchg
adc
pop
lds
push
push
test
aas
ja
ror
loopne
sbb
ss
dec
loop
leave
cmps
pop
outs
or
popa
ja
jmp
daa
daa
adc
or
jbe
adc
gs
invd
stos
dec
pop
push
imul
mov
cmovnp
cmp
jg
xchg
ds
lods
or
fidiv
stc
adc
mov
xchg
dec
aaa
cmps
fmulp
inc
sub
(bad)
xchg
js
imul
bound
adc
jl
xor
cmps
sub
mov
fsubr
dec
pusha
fild
movs
sar
popa
hlt
mov
add
push
ret
pop
xchg
pop
cmp
pop
es
cli
or
je
cmp
cmp
lods
dec
cwde
aas
pushf
or
push
jae
outs
punpcklbw
cmp
outs
inc
mov
sbb
cmps
out
mov
mov
sti
rcr
ret
mov
mov
aaa
(bad)
bndstx
xchg
and
push
add
sub
mov
repnz
out
jne
mov
mov
mov
mov
retf
mov
inc
jp
inc
mov
push
cmps
sar
jmp
stos
mov
mov
mov
mov
addr16
adc
ret
or
mov
push
in
sub
lds
(bad)
adc
sbb
add
pop
cmp
fidivr
push
adc
sub
outs
mov
fstp
loopne
push
pop
fmul
imul
ret
ret
dec
mov
sub
pop
or
(bad)
dec
or
sub
div
leave
xor
pop
mov
aas
ins
push
adc
div
test
dec
mov
sub
int
and
idiv
sbb
not
mov
mov
mov
call
jle
aam
mov
arpl
jb
arpl
(bad)
cmps
fnstcw
and
sub
adc
mov
or
nop
int3
or
test
les
mov
cmps
mov
outs
inc
xchg
bound
push
mov
icebp
sbb
mov
and
outs
inc
inc
outs
cdq
push
es
sbb
js
jae
or
cmps
ja
jne
scas
mov
cmc
clc
xchg
xchg
cs
mul
xor
leave
cmp
jae
movs
sbb
mov
addr16
mov
push
push
mov
fmul
shr
mov
pop
stos
sbb
and
push
loop
scas
sub
xor
jne
cs
je
daa
mov
xor
cwde
stos
sar
mov
ins
stos
mov
push
jne
outs
aas
in
mov
lahf
mov
popa
jns
and
xor
cmps
sahf
fcmovnu
(bad)
mov
pop
stc
lea
bound
addr16
cmp
fwait
ins
imul
push
add
arpl
push
rcr
mov
lahf
lock
out
test
in
sahf
rol
mov
mov
cmp
das
mov
aad
push
dec
or
jle
sbb
xchg
aas
pop
inc
adc
sub
(bad)
fwait
cmps
lahf
and
sub
fwait
outs
adc
push
daa
pop
xchg
xor
xor
rol
add
xor
inc
sbb
(bad)
pop
dec
outs
or
jmp
and
mov
xor
(bad)
mov
stos
sti
push
daa
fs
rcl
ins
daa
sub
ret
push
jo
jae
test
mov
sbb
push
arpl
inc
imul
mov
mov
aas
(bad)
mov
and
inc
fst
pop
xor
jge
xchg
add
cmc
dec
loope
xlat
scas
popf
sub
jne
fimul
jle
xor
loop
in
je
shl
cmps
xchg
jmp
lods
and
bound
mov
inc
dec
cmps
sbb
dec
sub
out
pop
pusha
shr
sahf
mov
sub
std
scas
xor
and
xlat
jnp
mov
pop
scas
shr
cli
loop
fs
in
pop
mov
pop
adc
fs
push
jo
xchg
cmp
scas
aad
sub
dec
push
mov
daa
or
call
stos
pop
mov
or
lea
not
sti
in
fidivr
ret
dec
xchg
mov
aam
in
fs
pop
dec
scas
jg
mov
mov
cld
sub
movs
addr16
add
dec
fs
jno
cmps
arpl
dec
aas
push
shr
idiv
in
xor
mov
ficom
popf
push
add
mov
(bad)
sub
rcl
mov
sub
sbb
mov
enter
les
dec
out
sbb
pop
cli
mov
clc
das
ret
inc
mov
mov
jmp
stos
mul
test
lods
cld
and
(bad)
jnp
jb
fiadd
inc
cld
xchg
lock
(bad)
shl
xor
aam
mov
mov
mov
std
pop
pop
sbb
pop
push
stos
rcl
cmp
test
movs
out
lods
xchg
ds
pop
mov
or
(bad)
xadd
xchg
in
ficomp
(bad)
xchg
(bad)
loope
jg
sub
pusha
movs
pop
fwait
push
outs
dec
repz
jb
test
sbb
pop
cmp
mov
push
mov
popf
inc
(bad)
mov
out
mov
or
lea
sbb
stos
daa
jb
(bad)
fld
jns
cmps
xchg
cs
sub
std
adc
dec
xlat
ss
mov
xor
pop
sub
das
retf
ret
mov
daa
jg
fistp
jne
cmps
aad
aas
das
push
jle
mov
outs
out
sbb
sub
ins
add
sub
mov
scas
cmps
sbb
cmpps
pop
cmps
and
sahf
sub
retf
mov
pop
or
fs
(bad)
xor
bnd
daa
xchg
xchg
cmps
sbb
lds
mov
inc
push
adc
sbb
inc
mov
pushf
xchg
mov
jnp
xor
test
arpl
mov
push
sub
pop
daa
mov
fimul
mov
inc
ror
add
push
rcl
into
adc
mov
xlat
dec
adc
sbb
dec
dec
aas
dec
ins
js
pop
in
adc
fdivp
jg
psraw
xchg
push
mov
inc
ins
retf
cwde
scas
stos
addr16
or
aad
sub
lods
out
imul
or
adc
push
ret
pop
sbb
mov
ja
sub
(bad)
or
xor
out
cmps
mov
fstp
imul
retf
fs
and
sar
add
mov
pop
out
lea
mov
aas
jp
inc
in
movs
retf
and
and
aaa
cmps
fs
ret
aas
dec
dec
imul
mov
mov
(bad)
leave
call
jmp
das
pop
outs
pop
sbb
dec
mov
call
ds
movs
dec
rol
xlat
sub
inc
sub
ret
lea
sub
stos
imul
cmps
stos
jle
mov
repz
retf
repnz
mov
ja
fucomp
cmp
das
adc
pop
jnp
pcmpeqb
pushf
hlt
fst
outs
jle
popf
cmp
cmp
jo
cmps
ins
xchg
sub
loop
cmc
inc
pop
retf
mov
mov
dec
xchg
js
stc
jb
(bad)
sub
ret
sub
test
mov
jbe
dec
mov
cmp
or
mov
cmp
cmp
and
retf
mov
scas
fldenv
lea
xor
cs
dec
mov
and
push
mov
cmp
adc
stos
adc
lods
push
jl
lods
out
push
mov
gs
jp
pop
cmp
shr
sahf
lahf
push
cmps
retfw
dec
dec
ss
xor
mov
in
daa
sub
rcr
and
outs
and
cmp
ret
mov
mov
fwait
movs
mov
fwait
jl
xor
cmp
mov
retf
mov
mov
pop
mov
pusha
inc
inc
xchg
sbb
mov
stos
(bad)
fidivr
pop
imul
mov
pop
lahf
jmp
push
fs
lahf
cmp
hlt
mov
cli
mov
mov
stos
mov
fisubr
mov
jne
jecxz
mov
cld
mov
or
push
sub
stos
stos
push
adc
mov
push
push
nop
or
not
arpl
(bad)
ins
pushf
jno
add
out
in
mov
lahf
xchg
pop
add
aaa
xchg
mov
cmp
jg
mov
bound
or
lea
inc
cmps
inc
sbb
push
shl
into
mov
cwde
(bad)
dec
xlat
(bad)
push
xchg
pop
(bad)
jmp
movs
mov
cmp
stos
icebp
mov
fs
test
sub
ja
push
iret
mov
test
dec
push
sub
popf
fcmovu
outs
loop
fist
ja
fsubrp
fstp
setae
in
test
mov
pop
and
addr16
cmps
xlat
popf
scas
sar
sbb
not
sbb
xor
outs
loop
(bad)
push
add
dec
sbb
daa
jnp
mov
xchg
stos
cmps
pushf
cdq
in
outs
jecxz
sbb
xor
dec
lds
enter
sbb
inc
sub
idiv
pop
dec
outs
adc
pop
bound
xor
and
sbb
stos
mov
lods
cmp
fsubp
or
pop
mov
jmp
sub
xchg
pop
cmp
outs
loop
cmps
push
(bad)
addr16
sub
lock
popa
test
jae
lds
push
sbb
dec
ja
lea
cmc
sahf
sub
dec
aaa
cmp
xor
xchg
jmp
xchg
jo
xchg
mov
bound
mov
sbb
rol
fmulp
push
pop
xor
lods
stos
ss
mov
call
mov
xlat
test
fldl2t
out
lods
mov
addps
mov
jmp
aam
vpsraw
cmp
das
xchg
adc
out
mov
scas
sbb
jl
fs
imul
cmp
daa
stos
sbb
push
aaa
pop
cmps
test
pusha
push
sub
and
pushf
push
maskmovq
pop
out
(bad)
xor
lods
xor
push
dec
scas
mov
retf
xor
ja
fnstcw
jae
test
mov
aas
mov
nop
fcom
call
ret
inc
cmp
add
mov
adc
add
scas
sub
xchg
out
mov
xchg
dec
les
jae
mov
scas
aaa
cwde
daa
or
dec
adc
lods
sbb
or
nop
mov
sub
mov
ins
and
xchg
movq
sub
inc
addr16
adc
cmc
in
cmp
ret
add
je
scas
or
loope
jno
mov
adc
xor
das
mov
xchg
mov
mov
xchg
push
mov
xchg
scas
cmps
icebp
cmp
cmp
adc
xchg
pop
in
arpl
push
dec
cmp
sub
and
je
(bad)
enter
mov
cmp
lds
mov
inc
mov
sti
lahf
or
cmp
in
push
jo
ret
xchg
dec
lds
or
lods
shl
arpl
sub
daa
lahf
xchg
mov
cmps
loope
mov
lea
cmps
push
les
lods
out
and
inc
stos
aas
and
pop
mov
imul
mov
dec
pusha
pop
fldenv
sub
xor
jle
imul
mov
outs
push
pop
cs
cmc
mov
sar
mov
ficomp
dec
pop
lahf
leave
mov
xchg
fidivr
push
test
or
mov
rcr
jmp
int3
out
xor
sub
cld
aaa
pusha
das
stos
daa
cmp
clc
or
and
adc
dec
ins
int
aas
sub
lods
xor
popf
imul
(bad)
scas
mov
push
lods
cli
mov
xchg
movs
dec
inc
mov
aad
movs
xor
lods
loop
push
les
rol
adc
sub
inc
cwde
in
loop
out
aaa
inc
imul
idiv
dec
mov
cmc
xor
lods
std
aaa
jne
xchg
and
jge
mov
mov
movs
outs
test
adc
add
(bad)
sub
test
and
inc
mov
stos
mov
inc
outs
or
add
push
into
dec
lock
push
and
data16
imul
retf
push
sub
lds
push
xchg
sbb
adc
bound
sub
jg
mov
popa
inc
xor
ja
aas
cs
sub
scas
sbb
xchg
sub
retf
or
inc
cmp
das
stos
js
xchg
and
cmps
push
retf
daa
xor
in
popa
(bad)
arpl
daa
mov
sbb
mov
pop
mov
call
pop
ds
daa
xchg
hlt
dec
jmp
xor
and
add
fs
dec
fwait
ror
push
dec
push
push
faddp
mov
dec
repz
(bad)
push
mov
jae
dec
jmp
lods
and
scas
retf
jmp
(bad)
out
xor
dec
pop
sbb
movs
out
idiv
mov
jns
fdiv
or
cmp
mov
mov
std
push
mov
push
out
(bad)
and
and
mov
cmps
pop
adc
in
ja
push
mov
xor
stos
mov
mov
jo
dec
aaa
fucom
cmps
jmp
inc
push
add
(bad)
sbb
(bad)
movs
jno
lds
stos
push
and
ins
push
mov
ror
inc
adc
lahf
inc
jbe
call
xchg
in
cmps
and
xchg
outs
lahf
add
sub
dec
cld
addr16
mov
leave
add
mov
and
jl
daa
in
add
push
add
add
mov
mov
fsubr
mov
ret
dec
dec
xor
push
imul
loop
or
inc
cmp
xor
cs
sar
dec
sub
mov
sub
(bad)
out
pop
es
sahf
sub
pushf
mov
jnp
fnsave
xcrypt-ctr
cmps
pop
inc
daa
and
fdivr
aas
mov
loop
dec
cmp
cs
fisub
pop
sub
cmp
je
psrlw
lea
cmps
xor
cmps
fwait
add
stc
cmp
dec
pop
idiv
pusha
retf
pop
in
sahf
scas
jle
pop
scas
dec
mov
cmps
fsubp
fisub
jnp
sahf
mov
stos
cmps
add
(bad)
bound
outs
int
cmp
inc
xchg
lea
jne
out
sbb
aas
sub
mov
outs
jmp
push
xor
fst
lds
ins
arpl
xchg
(bad)
ret
inc
dec
and
xor
mov
or
aas
icebp
(bad)
lahf
push
xchg
outs
jne
cmovge
push
sub
pop
jle
popa
enter
mov
cmps
cmp
lods
stos
push
in
cmps
lahf
bound
cmps
mov
push
outs
and
mul
daa
outs
jb
cli
popa
inc
in
pop
lds
in
push
movs
pop
out
mov
jns
hlt
mov
add
lea
push
mov
add
cmp
mov
js
pop
ins
and
inc
lock
out
inc
ficom
mov
imul
mov
ret
lods
mov
sub
push
sub
push
dec
dec
ins
sbb
add
fwait
xlat
mov
pop
imul
jg
xor
cmp
ret
sub
sub
out
and
popa
mov
retf
pop
es
lahf
push
adc
ja
jmp
add
addr16
xchg
(bad)
icebp
push
mov
(bad)
mul
sbb
aad
cli
aaa
mov
fldcw
sub
adc
lods
push
pop
mov
push
cmp
inc
or
sahf
call
fadd
ret
bound
cvtpi2ps
popa
fidiv
outs
mov
xchg
jo
sub
jecxz
and
jb
repnz
fwait
popa
xor
fstp
jnp
outs
sub
stc
xchg
jge
popw
adc
or
cmps
cmps
lea
sub
mov
ficomp
shr
jne
sub
dec
xchg
mov
cs
add
shl
addr16
mov
pop
or
bound
mov
jle
out
(bad)
or
ret
inc
pop
std
fisubr
mov
or
test
add
adc
loope
and
sahf
test
jg
pushf
fisubr
inc
and
aaa
mov
xchg
dec
out
or
adc
int
nop
fldcw
(bad)
mov
jno
xchg
stos
movq
lahf
(bad)
sbb
(bad)
mov
sete
mov
idiv
leave
sub
iret
scas
scas
cmp
icebp
dec
mov
mov
mov
fidiv
aad
add
test
das
jnp
inc
bound
mov
lea
fst
dec
fcmovb
fiadd
inc
mov
movhps
pop
fisubr
movs
dec
arpl
mov
sub
sar
out
scas
cmps
in
shl
lods
pop
mov
push
push
pop
(bad)
test
mov
sahf
fbld
retf
out
sar
ja
int
adc
jo
jecxz
mov
pop
jecxz
icebp
push
neg
stos
test
cmp
outs
sbb
xchg
adc
sub
outs
(bad)
cmc
pop
imul
cmp
mov
(bad)
jmp
inc
jp
(bad)
sub
push
add
das
jmp
loop
mov
(bad)
sub
jg
inc
mov
repnz
dec
aas
arpl
or
mov
push
mov
mov
mov
add
sub
psrld
push
addr16
push
mov
(bad)
push
sub
adc
dec
enter
adc
sub
test
inc
pop
hlt
ret
add
xchg
mov
lods
in
ins
ret
out
mov
xchg
daa
ds
stos
jbe
(bad)
jae
test
and
ins
pop
outs
mov
push
aaa
jmp
sub
pop
mov
ins
push
mov
(bad)
ss
shr
not
aam
out
push
frstor
test
jae
push
data16
jb
daa
mov
stc
fdivr
pop
addr16
aad
mov
or
xor
lahf
jle
mov
sbb
ret
pop
sub
in
jo
sub
or
mov
push
gs
scas
imul
jmp
cmp
xor
loop
das
addr16
mov
sub
pop
repz
shr
stos
xor
jl
jbe
jecxz
aaa
lods
and
out
retf
ins
xor
mov
jo
mov
cmp
mov
les
pop
cmp
mov
leave
clc
pop
loop
pushf
add
xchg
in
scas
add
cmps
jmp
xchg
mov
inc
xchg
sub
dec
das
repnz
pushf
rcr
daa
adc
sahf
mov
cmp
fld
stos
add
(bad)
push
xchg
hlt
clc
sbb
jnp
ja
aam
lods
xor
dec
aas
xor
sub
push
xchg
cmps
jbe
sub
dec
fst
not
movs
lds
ds
lods
or
ror
xor
pop
hlt
jne
in
or
das
jae
aaa
xor
(bad)
mul
inc
and
inc
cmp
stos
in
mov
and
mov
cmc
fsubr
cmp
and
in
addr16
mov
shl
jge
sbb
cld
(bad)
xor
mov
test
cmps
sbb
add
jg
pusha
adc
pop
push
or
xor
pop
xchg
jnp
push
mov
jne
or
xor
nop
(bad)
mov
fs
adc
out
stos
and
sbb
ror
call
lahf
mov
or
scas
int
adc
jbe
dec
or
pop
jmp
lods
jae
inc
cmps
pop
inc
out
cmp
pop
mov
jcxz
ins
cmp
mov
xor
xchg
and
mov
push
aas
push
or
je
dec
jmp
fwait
daa
jbe
mov
(bad)
mov
fidivr
add
pop
fmul
jg
inc
pop
pop
push
aas
dec
adc
jp
mov
in
stc
push
dec
ret
fs
adc
gs
popf
retf
imul
daa
lds
or
dec
fstp
pop
mov
rcl
(bad)
repz
xchg
push
pushf
push
scas
les
inc
icebp
arpl
jmp
aaa
mov
sub
jae
movs
outs
cmp
jge
test
sbb
int
or
mov
call
inc
pop
cmps
(bad)
fld
inc
mov
mov
cmp
or
std
sar
sub
adc
push
aaa
cmps
xchg
aam
cmp
lods
rcl
(bad)
mov
data16
pop
mov
cmovge
fistp
ret
or
aaa
ins
push
xchg
dec
mov
inc
movs
pop
sar
(bad)
cwde
dec
fs
test
retf
mov
or
mov
test
adc
jne
jmp
popa
gs
sbb
pop
pop
jmp
xor
idiv
mov
push
mov
jl
or
stos
and
mov
out
(bad)
gs
out
scas
fmul
(bad)
dec
test
mov
retf
hlt
jno
xchg
fwait
daa
adc
xlat
or
movs
and
mov
leave
sub
outs
ja
mov
sbb
fisubr
lea
pop
les
or
xor
push
iret
adc
lods
(bad)
es
mov
fs
das
test
aam
ins
fsub
mov
rcl
xor
mov
inc
mov
icebp
shl
sub
cmps
mov
adc
call
pop
sub
stos
fld
jae
test
mov
pop
fild
push
cmp
xchg
xor
push
sbb
outs
je
sub
and
pop
cwde
scas
aas
fld
adc
mov
push
out
cmp
popw
cmp
xor
test
sbb
jg
movs
inc
push
mov
pop
aam
int3
lds
inc
ins
dec
xlat
mov
jp
retf
or
jg
inc
pop
sub
jp
pop
test
pop
jmp
loop
mov
push
push
mov
mov
sbb
wrmsr
xchg
scas
cs
jb
mov
xor
xchg
(bad)
cmps
cmc
pop
imul
inc
(bad)
pop
xchg
cmps
lock
add
and
inc
ins
adc
cmp
add
data16
mov
pop
ins
sub
mul
jecxz
mov
sbb
aas
pop
sahf
xchg
aam
mov
or
add
jl
jle
sub
push
pop
mov
xchg
push
(bad)
ja
cmps
cmc
shr
or
dec
sub
aas
xchg
aas
and
cmp
jge
test
cmps
fs
retf
mov
mov
sahf
jae
jg
add
cmp
xchg
push
movs
jecxz
lds
les
jmp
jp
stos
sahf
lods
je
enter
arpl
jg
mov
and
xchg
mov
push
or
movs
jne
pop
mov
add
jb
sub
retf
add
or
outs
xchg
cmps
enter
dec
sub
xchg
jg
and
adc
mov
sub
sub
mov
jo
aas
cmps
mov
pop
stc
and
xor
out
mov
xchg
push
pop
jg
ds
stos
in
inc
mov
pop
daa
int
mov
imul
outs
push
lds
popa
sub
cmps
sub
dec
fild
cmp
mov
aas
push
mov
popa
pop
mov
add
mov
sbb
add
(bad)
stos
div
scas
mov
dec
sub
es
pop
xor
pop
out
fld
mov
inc
mov
les
popf
loope
fldcw
jg
sbb
push
mov
pop
add
push
cmp
dec
icebp
int3
dec
xchg
pop
jb
ins
or
push
daa
pushf
mov
(bad)
fidiv
pop
sub
test
stos
jmp
fidiv
mov
lahf
rol
jge
xchg
or
dec
mov
mov
outs
js
fisub
fwait
nop
add
aas
fs
push
ins
lahf
stos
shl
aaa
scas
in
pop
and
sub
jbe
mov
out
int3
dec
sub
lea
aaa
mov
outs
xchg
gs
ss
into
retf
cmp
aaa
add
sbb
enter
mov
call
sahf
xchg
add
xor
inc
ror
pop
inc
pop
add
adc
jno
mov
aaa
dec
scas
mov
in
pop
test
cwde
sub
mov
addr16
cmps
ret
mov
ja
inc
stos
dec
adc
lahf
pop
mov
xlat
dec
jnp
mov
pop
popa
sahf
fdivr
cwde
int3
test
xchg
jmp
fbld
mov
and
(bad)
ins
jmp
push
jmp
std
stos
scas
mov
xlat
addr16
mov
sub
sahf
mov
addr16
in
test
add
xchg
cmp
leave
fidivr
int3
cmps
stos
int
hlt
or
lahf
shl
cmps
mov
lods
ret
xor
bound
scas
pushf
inc
dec
into
mov
test
out
iret
add
sbb
or
imul
lods
outs
loope
bound
mov
or
dec
mov
mov
inc
(bad)
retf
imul
cmps
jmp
out
mov
(bad)
test
jp
fs
in
mov
ja
adc
sbb
stc
push
xor
jae
rcr
(bad)
je
(bad)
cs
dec
push
dec
push
outs
mul
test
hlt
outs
je
daa
(bad)
mov
pop
test
js
aas
jnp
rol
push
and
mov
(bad)
adc
daa
mov
adc
sub
ficom
(bad)
loop
push
pop
push
outs
loope
(bad)
lahf
xor
inc
and
lahf
adc
mov
ror
daa
adc
imul
inc
jmp
arpl
mov
js
shl
mov
mov
mov
mov
stos
mov
in
jae
lds
mov
xchg
movs
pop
sub
call
dec
jge
sub
push
sbb
cmp
out
cli
mov
mov
pop
mov
mov
inc
mov
movs
mov
movs
call
imul
mov
mov
outs
stos
or
mov
mov
xor
rol
xlat
xchg
(bad)
fdiv
lods
shl
jmp
mov
(bad)
cld
dec
cs
bound
mov
xchg
arpl
push
test
adc
fidiv
sahf
mov
(bad)
mov
in
mov
aam
int3
es
(bad)
mov
push
daa
push
xor
mov
scas
xor
adc
aaa
iret
ficom
and
js
cmc
arpl
in
sbb
jno
dec
xchg
out
xor
xchg
pop
pop
push
fidiv
dec
daa
mov
sbb
cs
mov
sahf
mov
or
mov
pusha
sub
mov
and
stos
cmp
pop
out
xchg
fwait
gs
lea
jne
outs
jnp
aaa
push
mov
scas
push
sbb
lea
xlat
cmp
xor
sub
mov
mov
dec
fs
xchg
dec
dec
data16
dec
inc
mov
(bad)
sub
xor
aas
inc
mov
ja
mov
mov
sbb
jp
retf
xchg
adc
stos
loop
cmps
iret
and
popa
xor
xchg
jg
inc
pop
arpl
pop
arpl
mov
add
jg
ins
fld
cs
outs
mov
add
sbb
int
xchg
fcmovb
daa
cmp
push
lods
mov
push
and
ret
adc
adc
sbb
dec
in
xchg
xlat
adc
lock
ret
jg
and
arpl
(bad)
xchg
mov
aaa
push
int
retf
popf
pop
xchg
xchg
mov
movs
adc
xor
das
sub
cmp
sbb
ret
pop
jl
dec
push
sbb
xlat
push
sub
movs
jae
xchg
faddp
mov
scas
stos
push
xchg
popf
push
outs
into
sub
imul
test
xchg
sub
retf
push
(bad)
movs
and
out
sahf
mov
sahf
or
mov
jmp
and
sub
dec
loop
dec
lods
adc
mov
xor
jmp
lahf
call
test
imul
scas
xor
scas
pop
inc
aad
mov
cwde
pusha
popa
xor
stos
test
fisubr
push
rcl
and
outs
outs
stos
pop
and
stos
retf
adc
pop
and
inc
lds
push
lods
sub
push
adc
sub
sub
ror
(bad)
lods
es
ret
mov
mov
mov
mov
outs
popf
(bad)
test
pop
mov
mov
das
and
mov
adc
pop
repnz
sub
(bad)
adc
mov
ja
sub
das
pop
sub
dec
dec
pusha
bound
(bad)
xchg
outs
das
call
int3
retf
mov
outs
jg
or
mov
mov
mov
int
(bad)
cmp
mov
xor
sti
sbb
(bad)
jp
xchg
int3
push
lahf
lahf
nop
sub
adc
mov
pop
mov
es
sub
call
pop
mov
inc
push
mov
sub
push
jmp
mov
cli
pop
pusha
jae
add
fld
aas
movs
xchg
sbb
add
sub
sbb
sub
ins
add
xchg
push
pop
jp
pop
fild
sub
cmp
scas
push
(bad)
push
pusha
inc
jl
pop
push
adc
inc
daa
jmp
xchg
ins
in
push
ret
inc
push
daa
and
gs
icebp
sub
mov
xlat
push
fwait
pop
imul
imul
(bad)
cmovg
add
sbb
aas
das
pop
sub
cs
push
clc
mov
(bad)
not
sbb
ins
sub
pop
ss
cmp
jp
mov
pop
pop
cmps
mov
aas
mov
push
hlt
call
mov
fist
aaa
dec
adc
lahf
les
in
mov
lods
mov
imul
pop
sub
arpl
mov
push
sahf
dec
stos
imul
push
(bad)
pop
push
aas
test
mul
and
mov
pop
mov
xor
fst
mov
enter
push
stos
call
cmp
stos
scas
ss
lods
inc
jo
fimul
sbb
movs
das
maskmovq
out
push
lods
inc
and
mov
outs
push
stos
ficomp
mov
jo
(bad)
sahf
push
or
sub
stc
sub
xchg
sar
sbb
aam
mov
mov
nop
out
sbb
sub
dec
je
ins
scas
and
test
scas
aas
pop
inc
cmp
outs
pop
dec
pop
jmp
cld
push
stos
cmp
das
pop
jno
sbb
pop
push
mov
adc
jnp
out
pop
push
jmp
addr16
pop
mov
ret
mov
mov
add
mov
sbb
pop
push
push
xor
ret
or
call
aad
ss
je
mov
sub
and
sub
jecxz
push
(bad)
into
and
xor
dec
shl
or
aaa
dec
test
mov
call
pop
arpl
jae
add
repz
not
xor
ja
or
mov
scas
push
test
add
in
icebp
adc
sub
cdq
push
or
pop
push
push
sub
push
repz
ret
lea
imul
iret
imul
cmps
or
lahf
in
cmp
jo
push
stos
neg
adc
js
outs
push
ja
sub
cmova
adc
(bad)
sbb
mov
int3
inc
movs
or
mov
dec
mov
jmp
rol
ror
(bad)
xor
jnp
mov
aam
sub
lods
out
stos
push
cmc
outs
ins
push
jb
sbb
aas
cmps
dec
mov
std
mov
gs
or
adc
xchg
cwde
sub
sbb
mov
jmp
push
pop
ja
sub
xchg
(bad)
out
sbb
mov
xchg
mov
test
test
addr16
in
sbb
mov
or
in
mov
mov
sbb
stc
inc
les
ja
lahf
mov
stos
adc
or
outs
mov
in
aaa
or
aad
ins
xlat
jne
xchg
mov
fdivrp
lea
retf
mov
inc
xchg
addr16
mov
adc
jae
mov
out
cli
je
inc
xchg
outs
lods
scas
ins
outs
scas
imul
jne
mov
inc
mov
and
mov
inc
push
sbb
sub
xchg
aas
mov
popa
adc
out
inc
xchg
test
cmp
inc
pop
jo
(bad)
scas
cwde
aas
cs
inc
push
xchg
(bad)
adc
mov
adc
adc
adc
arpl
xchg
test
lahf
mov
push
mov
push
outs
mov
push
out
adc
mov
movs
(bad)
mov
jmp
outs
mov
mov
fwait
ja
cmp
dec
pop
repz
mov
cmp
nop
pop
jecxz
sbb
fldcw
push
add
mov
mov
jnp
stc
jg
jmp
fcom
and
fiadd
fsubr
pop
jne
daa
sbb
mov
sub
ds
mov
gs
outs
fistp
mov
int
ret
fidivr
fild
repnz
mov
dec
cmps
and
nop
or
adc
fwait
cwde
int3
sub
jmp
jmp
outs
sub
adc
ret
pushf
lds
sub
out
imul
ret
popf
and
clc
scas
mov
inc
inc
mov
fsubr
daa
xchg
das
mov
sti
push
fwait
mov
stc
xchg
imul
mov
pop
dec
pop
mov
jg
push
pushf
mov
stos
out
aad
clc
lods
out
jmp
xor
push
jp
sahf
out
clc
add
mov
xchg
ret
cmp
outs
push
mov
(bad)
shr
into
ds
pop
pusha
cs
neg
pop
fisubr
bts
mov
maxps
push
daa
bt
fldl2e
pop
mov
cmp
jb
cmp
not
lahf
cdq
xchg
loop
xchg
or
jge
sar
pop
mov
push
mov
mov
scas
dec
adc
adc
and
or
mov
cwde
pop
mov
int3
xor
sub
jle
jmp
sti
jno
mov
sub
jge
aas
ja
imul
into
dec
adc
iret
aaa
aas
adc
pop
cmp
addr16
out
sahf
outs
div
test
mov
ins
(bad)
mov
ror
fbld
sub
sub
out
push
mov
and
test
adc
or
add
cs
pop
int
mov
xor
adc
or
add
cmp
or
cmps
and
jmp
pop
pop
pop
inc
sbb
pop
mov
movs
stc
imul
or
outs
jb
arpl
add
jnp
push
jg
mov
aas
lahf
xor
fild
mov
stc
cmp
and
sbb
mov
in
movs
or
inc
test
mov
aaa
sub
lods
scas
or
stos
mov
(bad)
ja
sub
xchg
out
inc
cmps
adc
pop
aas
sub
pop
xor
mov
scas
mov
fs
xchg
cmp
lahf
out
in
mov
fwait
cmps
es
outs
loop
mov
or
xchg
sbb
jae
adc
inc
sub
inc
jo
sahf
mov
adc
sub
dec
jbe
hlt
pop
mov
outs
jb
and
xchg
inc
fdiv
inc
aaa
mov
pop
outs
add
ss
scas
mov
fwait
pop
nop
cwde
cmp
out
mov
or
jmp
in
pop
mov
xor
or
push
lods
mov
scas
sub
sub
inc
fwait
xor
inc
pop
or
cmps
dec
add
out
and
jo
pop
fidiv
jge
movs
push
pusha
cmp
add
(bad)
addr16
test
cmp
xchg
jg
pop
or
mov
sub
lea
test
ins
lea
dec
stos
cmp
fldcw
pop
sub
lock
neg
sub
retf
out
pop
xchg
sbb
xchg
shl
lahf
inc
adc
or
add
dec
loop
pusha
jae
pop
cs
push
push
sbb
test
sub
adc
fistp
stos
lds
and
push
cmps
mov
cmp
cmc
loope
(bad)
fisttp
pop
ret
xchg
jnp
hlt
and
push
(bad)
das
pop
mov
sub
fiadd
or
sbb
pop
mov
sub
(bad)
imul
sub
fistp
and
imul
sub
or
iret
jecxz
pop
jne
aas
xchg
add
mul
push
mov
stos
cwde
icebp
xor
sub
nop
mov
mov
lods
outs
sbb
push
(bad)
mov
adc
sub
inc
in
xor
into
mov
ja
fistp
push
cs
xchg
mov
lds
jp
je
shr
int3
or
pop
or
and
fld
pop
cs
lahf
out
jge
pop
sub
lea
mov
pop
scas
xchg
jle
stc
arpl
scas
aaa
or
cmp
movs
pushf
lds
and
pop
std
(bad)
dec
es
mov
scas
out
lahf
mov
xchg
(bad)
int
lea
xor
mov
mov
and
jmp
mov
shl
movs
mov
lods
aas
lods
fldenv
cmps
enter
sbb
stos
sub
in
xor
(bad)
cli
xchg
(bad)
fidiv
jo
imul
iret
sbb
ret
mov
outs
mul
push
aas
scas
es
and
test
adc
jnp
mov
or
outs
inc
push
add
gs
stos
add
sub
sbb
sub
stos
add
pop
mov
cmp
aas
mov
xor
aas
cmps
or
adc
stos
ret
xchg
mov
cs
sub
xor
pop
hlt
arpl
cmps
jmp
lea
int3
add
cld
out
aaa
or
hlt
lahf
xor
jns
ja
pop
jp
cmpps
es
aaa
movzx
loope
outs
scas
xchg
adc
sti
lods
push
sub
mov
cld
dec
in
mov
movs
xchg
push
adc
ins
(bad)
stos
outs
imul
mov
and
xor
pop
mov
add
jno
in
pop
add
pop
dec
xor
addr16
out
mov
pop
jg
cli
shr
jo
addr16
imul
jns
retf
sub
sub
jne
adc
cmp
repz
cmp
cmp
sbb
jns
ret
fcom
cmp
adc
out
dec
jle
pusha
pop
mov
pop
out
or
js
push
popf
mul
jb
scas
ret
push
sbb
jmp
(bad)
punpckldq
mov
out
mov
pop
(bad)
dec
out
stos
retf
pop
loop
sar
retf
xchg
pop
movs
push
aas
sub
fimul
sub
outs
adc
scas
daa
xchg
cmps
sar
jb
jmp
addr16
repz
push
sub
shl
psraw
adc
xor
mov
das
mov
in
mov
or
fsubr
cli
rol
ret
fidiv
jg
outs
mov
push
dec
xchg
cmps
ficom
ja
imul
popf
sbb
es
in
aas
cdq
in
jg
add
addr16
in
mov
idiv
pop
pop
ret
shl
cmp
mov
mov
mov
aaa
gs
sbb
imul
sub
hlt
sub
adc
js
loop
aas
jg
clc
(bad)
outs
push
in
fsubr
js
imul
mov
jg
rcr
loop
fsincos
(bad)
mov
enter
imul
dec
scas
cmc
jnp
daa
dec
xlat
push
dec
jmp
jg
aad
sti
lods
jnp
repz
scas
xchg
push
sbb
sar
xor
sti
ins
mov
cs
push
cmp
inc
sbb
lahf
xchg
jmp
sub
ins
xchg
mov
inc
pop
outs
sbb
idiv
cmp
xor
mov
xchg
sbb
add
lahf
(bad)
and
add
cmp
jle
mov
adc
adc
ret
and
icebp
fdivr
stos
std
iret
cmp
add
fwait
push
pushf
scas
cwde
lahf
fcmovnbe
pop
cmp
mov
stos
ja
mov
sbb
push
out
adc
jae
mov
outs
jle
mov
add
pop
out
cmp
push
test
push
scas
push
lahf
pop
sbb
fisub
sbb
mov
outs
stos
push
cmps
aas
sub
ror
dec
mov
xchg
pop
out
dec
ds
xchg
aaa
pop
aas
cmps
jne
ins
sbb
jo
cmp
mov
cld
imul
clc
ret
into
push
(bad)
mov
pop
jmp
pop
jmp
push
mov
pushf
pusha
adc
(bad)
lea
cmp
aas
pusha
jge
loop
ficomp
or
and
sub
outs
das
xor
sub
loop
shr
or
inc
stos
inc
jl
outs
xchg
sar
jle
lods
or
mov
sub
cmps
stc
push
imul
pop
mov
(bad)
movs
inc
push
aad
pop
mov
mov
or
nop
add
xchg
mov
push
mov
loopne
xor
or
pusha
imul
add
icebp
jmp
scas
pop
(bad)
shr
sub
das
test
loopne
inc
imul
or
cmp
cmpxchg
stos
inc
fldenv
ror
cmp
push
lahf
rcr
outs
ja
push
das
xor
pop
mov
mov
gs
ret
test
inc
sbb
stos
mov
fidiv
xor
mov
es
jge
and
ror
sub
(bad)
jecxz
data16
clc
ja
imul
cmp
loop
xchg
pop
cmp
pop
(bad)
lds
out
jae
pop
cmps
fs
aam
(bad)
mov
outs
push
scas
and
inc
mov
or
jmp
jno
dec
pop
jg
je
xor
stos
mov
ins
(bad)
(bad)
xor
adc
sbb
std
ja
adc
or
popa
push
das
(bad)
jbe
dec
sub
mov
cmps
jo
jns
ja
or
mov
ins
imul
dec
dec
mov
bnd
vcvttsd2si
js
inc
cmps
fiadd
sub
and
push
inc
fmul
jnp
aas
cmc
push
sub
nop
cli
in
cs
mov
mov
pop
(bad)
sar
pop
mov
mov
out
inc
std
cld
fisub
scas
add
pop
movs
sbb
or
outs
mov
jp
scas
stos
shl
dec
push
int3
and
add
js
shr
mov
lahf
mov
inc
jecxz
not
pusha
cs
and
pop
movs
stos
cmp
xor
pop
adc
push
mov
dec
fidiv
push
jbe
fidiv
mov
imul
ins
push
inc
sti
adc
xor
imul
xor
rcr
push
push
(bad)
xor
jmp
mov
das
loop
ja
fimul
in
mov
mov
retf
ds
mov
and
push
adc
mov
outs
test
and
xchg
xor
sub
adc
lods
pop
cmp
xor
scas
mov
das
dec
jmp
mov
sbb
mov
fiadd
cmps
dec
sahf
and
ja
cmp
loop
dec
and
mov
out
xchg
xchg
dec
out
popf
pop
xchg
mov
shl
div
(bad)
ret
popf
mov
mov
jmp
(bad)
and
or
gs
movs
data16
(bad)
sbb
mov
ds
test
addr16
sub
dec
or
dec
jmp
xchg
jo
int3
addr16
arpl
push
ds
imul
mov
call
mov
out
in
inc
scas
jnp
ret
push
cmps
ins
mov
xor
fisub
mov
daa
scas
adc
outs
ja
sub
pop
pusha
(bad)
lahf
popa
xor
int
(bad)
cli
xchg
stos
adc
(bad)
mov
add
mov
not
(bad)
lahf
inc
int3
pop
jbe
sbb
aad
xor
dec
xor
and
push
mov
fsub
pop
dec
(bad)
stos
js
xor
xchg
das
sub
sub
sub
inc
mov
pop
jl
test
pop
test
aad
fiadd
seta
adc
dec
mov
fdivr
pop
dec
in
out
fcomi
mov
sub
pop
sub
(bad)
lea
adc
(bad)
pop
(bad)
sbb
and
lods
push
outs
fsubr
pusha
int
out
push
(bad)
lahf
jne
dec
mov
sub
push
in
jae
xchg
daa
imul
add
in
(bad)
dec
shr
outs
aad
xchg
imul
xchg
push
retf
jg
mov
xchg
sbb
cmp
gs
jge
and
jl
movs
lds
pop
add
imul
cmp
mov
mov
in
daa
or
daa
xchg
mov
sub
movaps
das
sub
enter
popa
in
jae
sahf
sub
adc
and
mov
and
movs
mov
lea
movs
mov
scas
aad
jmp
stos
add
mov
dec
(bad)
pop
jbe
pop
mov
dec
(bad)
sub
mov
add
clc
inc
movs
push
mov
dec
inc
dec
stos
mov
psllq
ja
lds
mov
popf
inc
fwait
bts
icebp
push
and
ins
movs
dec
stos
sti
mov
xchg
daa
(bad)
dec
mov
adc
xchg
inc
sbb
cmp
push
pop
scas
aaa
dec
sbb
sub
add
int
stos
cmp
loop
cmps
sbb
mul
adc
mov
das
sbb
lea
adc
stos
ficom
sbb
jmp
cs
pop
sub
in
(bad)
cmps
retf
sbb
int3
addr16
cmps
push
cmc
cs
adc
push
outs
leave
jge
fisubr
shl
dec
gs
inc
test
dec
cs
cmps
jmp
mov
xchg
in
repnz
aad
stos
inc
leave
cli
movs
nop
push
adc
xor
aas
mov
sub
jmp
(bad)
push
(bad)
repz
stos
ins
xor
cmp
lahf
data16
and
ret
(bad)
xlat
ret
shl
mov
aaa
and
(bad)
aas
adc
cmps
sbb
lahf
inc
mov
daa
mov
pop
test
adc
aas
mov
push
out
es
add
addr16
or
lahf
xlat
js
mov
les
jnp
cs
ror
es
push
shl
dec
retf
cmp
cmp
clc
ins
sbb
jne
mov
xchg
daa
mov
popa
or
ja
add
das
mov
pop
lock
loop
add
loop
inc
jecxz
lods
sahf
pop
fidiv
int3
inc
out
push
rcr
add
pop
out
sti
sbb
adc
mov
or
dec
dec
cmp
mov
scas
xchg
sar
inc
adc
jae
cli
inc
fdiv
les
je
ds
out
mov
mov
(bad)
inc
in
outs
sub
cmps
or
dec
add
test
pop
jmp
dec
out
mov
das
cmps
mov
addr16
mov
in
mov
lea
mov
and
mov
into
test
mov
stc
pusha
dec
xor
inc
movs
popa
sbb
in
das
test
xchg
dec
push
inc
addr16
pop
mov
movs
arpl
xor
push
fiadd
int
stc
loop
mov
pmaddwd
out
out
inc
outs
mov
mov
fnstenv
cmps
sub
aad
scas
ror
push
sub
and
movzx
mov
sbb
and
push
cmc
push
and
js
sub
mov
dec
push
out
jbe
push
in
mov
out
pop
iret
xchg
stos
daa
mov
ins
aam
ja
push
jl
inc
cs
shr
scas
jg
imul
scas
xchg
fstp
xchg
into
pop
ins
outs
addr16
adc
mov
in
and
scas
adc
fcomp
sub
sbb
fcom
cdq
xor
into
sub
xchg
inc
test
mov
xor
jnp
mov
mov
jp
dec
nop
lahf
push
int
scas
scas
arpl
pop
mov
inc
mov
push
imul
cmps
xor
gs
mov
push
inc
push
out
sbb
je
in
cvttps2pi
ins
push
loop
out
cmp
inc
jl
loopne
push
std
sbb
mov
in
fs
repnz
div
cwde
push
je
repnz
inc
scas
fldenv
sub
mov
addr16
into
outs
adc
fs
sub
into
dec
je
daa
outs
lahf
das
push
loope
xor
in
cmp
shl
sub
mov
mov
or
retf
fwait
daa
test
fidivr
and
push
test
mov
movs
jbe
stc
stos
ret
sbb
push
mov
outs
icebp
outs
inc
ins
adc
ja
push
imul
push
movs
in
mov
push
xchg
stos
sbb
test
cs
es
inc
mov
xchg
stos
scas
push
cmp
xchg
cmp
sar
out
mov
mov
aad
aas
test
mov
sar
mov
or
cmp
push
aad
pusha
imul
add
out
sbb
mov
outs
addr16
inc
imul
mov
sub
loope
or
mov
mov
outs
in
jns
(bad)
xchg
cmp
in
mov
jmp
out
jo
iret
xchg
sahf
imul
out
mov
mov
push
mov
scas
addr16
pop
or
lahf
daa
mov
test
mov
sub
push
sub
mov
outs
mov
fidivr
xor
dec
add
ret
test
je
(bad)
repz
xchg
retf
cmc
sub
(bad)
sti
(bad)
daa
stos
jmp
add
lods
pop
inc
mov
nop
mov
ins
arpl
imul
cmps
jb
not
pop
xor
cdq
lahf
inc
(bad)
jnp
(bad)
fsub
push
ror
test
pop
push
adc
daa
scas
sar
or
gs
bound
dec
pop
jo
nop
xor
sub
ds
or
in
lods
jg
xor
ins
add
cmps
or
and
mov
dec
lahf
push
leave
cmp
dec
dec
push
push
scas
mov
repnz
sub
cmps
ficom
(bad)
fidivr
jmp
out
mov
ja
ja
mov
arpl
sub
test
xchg
outs
into
mov
sbb
xor
in
push
adc
ficom
mov
mov
pop
fild
js
push
mov
ficomp
jge
pop
arpl
not
mov
add
ins
outs
push
movs
ins
inc
in
dec
push
push
fdivrp
icebp
imul
mov
mov
nop
pop
ins
xor
and
arpl
lock
(bad)
push
imul
repz
hlt
idiv
sbb
adc
(bad)
sub
in
adc
push
jge
aas
mov
add
pop
cmp
scas
cmc
fucomip
inc
cmp
test
or
es
lahf
add
lea
add
cmp
pop
xor
outs
and
add
ja
mov
jmp
(bad)
stc
sahf
(bad)
shl
fidivr
daa
pop
sbb
pop
mov
mov
adc
retf
test
idiv
push
jmp
cs
fwait
mov
sahf
sub
fild
retf
leave
scas
xchg
js
jne
mov
fimul
aam
bound
cmp
mov
sub
outs
stos
mov
pop
stc
repnz
stos
cmps
and
inc
fwait
add
and
stos
pop
movs
cs
cmp
sub
adc
adc
cli
fldcw
add
jbe
ins
sti
pop
mov
dec
scas
add
das
mov
pop
hlt
dec
retf
mov
and
rol
outs
sbb
mov
(bad)
fcomp
addr16
test
fsubp
ins
lahf
(bad)
imul
loope
sbb
iret
std
pop
jle
stos
dec
pop
mov
mov
shr
xchg
cmps
cmp
ja
imul
cmps
mov
gs
adc
rcr
xor
jge
fild
jecxz
movs
ins
scas
mov
sbb
fcom
or
jb
mov
lahf
pop
gs
add
adc
push
xchg
aas
es
pop
leave
lahf
mov
clc
push
mov
sub
aam
out
dec
mov
adc
addr16
dec
ss
test
repz
ins
inc
stos
mov
les
pushf
div
sub
and
out
and
mov
jge
sub
test
nop
mov
fimul
add
sub
fcomp
jb
shl
std
push
add
sbb
shr
stos
jae
mov
fidivr
pop
inc
pop
adc
mov
stc
lods
out
test
scas
pop
sbb
enter
dec
sub
call
sbb
xchg
stos
adc
out
inc
mov
add
out
pushf
cli
jnp
scas
pop
sub
xor
cmp
mov
test
retf
subps
aas
mov
cmp
or
sub
sbb
push
outs
mov
mov
rcl
cmp
inc
rol
inc
dec
pop
dec
(bad)
xchg
add
loop
adc
iret
mov
sub
mov
aas
fild
mov
mov
adc
lea
add
push
sar
mov
pop
jnp
inc
(bad)
movs
mov
loope
xor
pusha
(bad)
jp
pushf
fwait
iret
lds
pop
lods
add
cs
popa
inc
mov
outs
aas
outs
mov
scas
(bad)
scas
mov
int3
mov
or
jnp
call
cmp
sahf
daa
mov
int
outs
pop
or
(bad)
loop
mov
daa
nop
sub
xor
lahf
das
jno
cmp
jmp
mov
or
aas
mov
cli
push
sbb
ror
aad
lods
ret
cmps
pop
jle
mul
stos
fs
jmp
lods
ficomp
mov
xchg
outs
mov
sahf
aad
xor
jmp
and
mov
movs
das
xchg
push
cs
dec
mov
xor
loop
leave
dec
sahf
sub
scas
mov
outs
mov
ins
xor
pop
cmp
xor
push
pusha
ret
jae
mov
mov
icebp
pop
inc
push
out
jbe
sub
push
es
mov
lahf
inc
mov
mov
xchg
push
stc
pushf
and
cmp
addr16
lea
dec
aas
cmc
mov
push
sub
pop
xor
movsx
jmp
and
dec
mov
dec
adc
dec
sub
push
pop
jae
test
dec
xchg
cmp
aad
sub
lea
sbb
daa
xchg
ret
das
pop
sbb
dec
push
mov
pop
sbb
xor
fimul
sbb
sub
cs
xor
xor
xchg
xchg
dec
in
test
pop
arpl
mul
movs
cld
addr16
(bad)
xor
sub
(bad)
sahf
js
push
lea
(bad)
mov
arpl
push
outs
rcl
shl
dec
xor
lahf
icebp
mov
pop
push
ja
repnz
lahf
ss
loope
or
mov
cdq
mov
or
jmp
cmps
sbb
mov
outs
fisubr
adc
push
lods
dec
and
repnz
xchg
test
mov
sub
mov
cmp
scas
or
(bad)
(bad)
(bad)
in
ja
inc
xchg
pop
sub
sub
mov
xor
sub
jb
test
pop
jl
loop
ja
fsubr
xor
fiadd
xchg
mov
in
push
aas
iret
push
or
mov
neg
test
lods
sub
repz
scas
fcmovne
push
shr
fisubr
mov
cmps
int
es
sub
test
outs
sahf
movs
pop
pop
jecxz
scas
sub
aas
pop
mov
cmp
adc
popa
push
test
cs
push
cwde
cmp
adc
nop/reserved
cld
aas
mov
or
ror
(bad)
cmps
in
mov
sub
icebp
xchg
adc
mov
push
sahf
loop
fs
adc
lahf
xchg
mov
xor
jbe
push
pop
out
sub
test
push
inc
arpl
fwait
sub
into
mov
shr
(bad)
cmps
xor
xchg
scas
scas
sub
cmps
inc
mov
div
cmps
inc
jns
aaa
imul
push
mov
in
cmp
leave
inc
lahf
stos
push
xchg
pop
cmp
mov
or
xchg
sar
inc
mov
fiadd
xadd
test
push
aas
out
js
xor
pop
fisttp
jns
(bad)
and
push
out
cmp
dec
dec
xor
add
cs
mov
ins
jno
nop
fdivrp
mov
push
xor
scas
jnp
outs
xor
ins
lods
movs
pop
sub
(bad)
mov
out
and
enter
shr
xchg
sub
or
pop
movs
pusha
sahf
inc
not
pop
dec
pop
and
outs
mov
cmp
dec
(bad)
cmp
in
mov
jmp
sub
movs
ret
mov
repnz
jo
jnp
jns
mov
cmp
(bad)
cmp
push
xor
in
repnz
add
sbb
jmp
neg
js
(bad)
push
jl
inc
or
scas
(bad)
jmp
les
push
push
jge
jbe
aas
mov
aas
sub
dec
imul
lahf
add
push
addr16
(bad)
and
push
ss
mov
mov
iret
repz
xchg
(bad)
gs
mov
ja
xadd
inc
arpl
addr16
pop
test
out
sbb
loop
xor
inc
pop
pop
fwait
lea
sub
mov
lea
stos
sbb
fnstsw
mov
pop
repz
dec
push
or
shl
ja
call
add
inc
stos
push
jno
adc
inc
das
jmp
aaa
mov
idiv
movs
add
pop
xchg
or
or
mov
nop
add
inc
inc
pop
cli
int
ins
mov
cwde
dec
cmp
ficomp
ins
movs
and
pop
dec
daa
mov
outs
cmp
fst
add
jmp
outs
sbb
outs
mov
icebp
adc
cmps
inc
jb
jne
jp
pop
lods
dec
or
sub
stos
mov
sar
push
mov
es
mov
pop
les
stos
(bad)
sub
cmp
repnz
das
xchg
pop
jno
inc
fbstp
adc
mov
xchg
push
fdiv
fsubp
jg
mov
push
sub
test
mov
jl
mov
adc
ss
dec
dec
push
lock
das
push
outs
js
jb
ror
and
stos
imul
out
das
xchg
add
lds
mov
cs
push
in
add
pop
in
mov
lahf
pop
pop
scas
je
mov
dec
cmp
scas
cmp
or
lahf
fmul
push
jo
mov
push
jne
xor
jmp
xchg
pop
aas
jg
neg
jb
adc
pop
retf
mov
cmp
dec
cmp
add
pop
pop
mov
fs
push
cmp
test
imul
popa
xor
and
fsubr
sub
lahf
mov
inc
adc
or
repz
dec
mov
gs
stos
push
push
movs
(bad)
mov
adc
push
mov
ins
mul
adc
imul
jnp
mov
fidivr
fwait
mov
or
imul
cs
push
xor
jns
sbb
inc
movs
into
popf
jno
ret
(bad)
fld
mov
aam
mov
mov
mov
clc
fld
add
(bad)
fs
icebp
out
arpl
ins
sbb
adc
imul
xchg
mov
push
add
sub
(bad)
jl
and
mov
outs
not
mov
daa
stos
test
daa
mov
pop
dec
mov
cmc
int3
dec
aas
addr16
aam
aas
sub
shr
fisubr
push
mov
jl
add
inc
push
mov
pop
sub
pop
ret
stos
push
fnstenv
cmp
push
add
shr
arpl
sahf
fidiv
loop
ror
mov
out
fsubp
push
cmovle
jmp
jmp
fidivr
lds
lock
push
std
jb
mov
lods
push
push
pop
bnd
inc
adc
fldenv
fs
mov
push
push
mul
pop
mov
test
lahf
dec
int
sub
sub
mov
mov
push
mov
call
jno
scas
pop
cwde
sub
das
xor
faddp
sub
repnz
jnp
push
pop
imul
(bad)
mov
lods
or
mov
cs
loop
or
or
mov
idiv
imul
in
adc
sbb
dec
cmp
pop
cmps
mov
gs
and
dec
sub
bound
jge
out
jmp
in
test
cmp
pushf
push
push
mov
add
push
pop
mov
in
mov
faddp
scas
imul
xchg
cmp
iret
mov
stos
mov
add
xor
in
mov
xor
inc
nop
push
stc
inc
and
ja
jp
das
jnp
mov
fist
mov
jg
push
aam
(bad)
mov
pop
xor
mov
in
rcr
(bad)
sub
mov
push
or
mov
jg
pop
idiv
push
les
cmp
xor
adc
mov
sub
lea
in
mov
mov
pop
bound
sbb
popa
shr
and
jg
dec
outs
ds
add
(bad)
jmp
adc
mov
clc
push
mov
lahf
mov
cdq
mov
add
xlat
sbb
dec
and
xchg
xchg
dec
cmps
(bad)
sbb
in
sahf
inc
cdq
push
mov
dec
icebp
sbb
ret
lods
scas
jbe
fadd
clc
aas
aad
inc
dec
aaa
jnp
test
repnz
movs
arpl
rol
je
(bad)
div
inc
mov
das
test
movs
ret
fild
out
loop
or
push
and
push
lods
loop
pop
jp
scas
sub
inc
pop
inc
dec
loop
pop
imul
mov
sbb
lahf
stc
push
sub
stos
mov
imul
fmul
or
mov
out
inc
sub
stos
or
pop
push
je
mov
push
int
sub
in
sub
fs
jae
push
adc
xchg
or
dec
outs
ins
add
outs
test
int
shl
mov
fs
out
shr
and
daa
xchg
xchg
in
aaa
scas
mov
faddp
add
inc
xchg
push
cmps
test
gs
cmps
jbe
jns
ret
pop
pop
mov
pop
outs
je
in
aas
bound
out
fistp
xor
lar
aad
test
sbb
out
and
inc
inc
sbb
movs
add
inc
jl
sub
imul
shr
pop
jg
pop
repz
xchg
sbb
loop
scas
dec
outs
ins
(bad)
jl
fcomi
lahf
mov
mul
shl
pusha
lahf
cmp
xchg
into
lods
mov
cmps
pop
dec
daa
adc
loop
out
xchg
aas
(bad)
gs
dec
adc
aaa
cmp
adc
ret
sub
iret
lahf
mov
jp
ja
daa
imul
cmp
sub
jecxz
mov
xlat
je
cmp
jmp
sbb
and
test
out
cli
fwait
ss
xchg
xchg
xchg
mov
push
push
push
lahf
adc
sub
cld
ficom
add
jle
dec
icebp
xchg
xor
pop
add
cmp
test
fwait
jae
dec
xchg
outs
in
cmp
outs
out
pop
xor
imul
mov
das
pop
mov
xor
ret
bound
pop
push
mov
mov
xchg
pop
mov
mov
add
dec
iret
mov
scas
jo
test
add
jnp
lods
jnp
xchg
xchg
femms
xchg
pop
mov
dec
fisttp
dec
dec
dec
pop
mov
inc
stos
not
xor
jo
and
push
int
mov
jns
and
mov
imul
ja
das
push
dec
or
les
xchg
sar
sbb
sbb
sub
fcmovnu
cli
movs
or
lods
jnp
push
dec
arpl
xchg
outs
inc
xor
pop
jle
fiadd
lods
repz
les
hlt
ficom
mov
test
push
in
inc
sar
lods
jnp
dec
ret
sbb
sub
bound
mov
cmp
add
xchg
imul
adc
shl
es
(bad)
(bad)
push
or
test
mov
cmp
add
lea
mov
jne
jnp
sti
mov
mov
sbb
pop
sbb
rcr
scas
inc
adc
dec
into
stos
shl
add
aad
dec
or
sub
push
out
mov
mov
dec
lods
rcl
or
in
lahf
pop
addr16
add
clc
pop
mov
sbb
outs
sub
scas
(bad)
mov
mov
mov
fwait
push
push
imul
jmp
fwait
ins
jo
jp
scas
mov
xor
mov
ds
outs
pusha
imul
js
out
fisubr
arpl
xchg
mov
imul
xchg
ss
mov
cmp
jb
sub
xor
cmps
mov
xchg
or
dec
les
and
fs
shr
jmp
sub
loop
retf
sub
pop
cmp
retf
aas
loop
dec
fs
cmps
hlt
outs
mov
mov
mov
add
inc
mov
mov
xchg
cmp
hlt
pop
cmps
dec
js
jge
shl
lds
(bad)
jae
les
nop
pop
lea
aaa
cmps
inc
adc
pop
stos
movs
dec
sub
aaa
mov
nop
stos
mov
imul
popa
sbb
arpl
outs
test
fs
icebp
repnz
test
add
mov
mov
les
imul
mov
hlt
pop
cmp
mov
jbe
cmps
lds
pop
jge
aas
test
and
cmp
repz
outs
push
les
out
(bad)
shl
mov
or
sbb
xor
mov
jmp
in
mov
mov
in
mov
cmps
sub
cmp
mov
mov
xor
(bad)
in
sub
inc
scas
mov
pop
xor
sbb
in
sahf
inc
xchg
es
aad
xchg
dec
lods
setl
shl
(bad)
dec
fldcw
movs
lds
xchg
mov
retf
in
lahf
std
and
test
jb
ja
pushf
sbb
aaa
fst
outs
aas
test
shl
das
pop
mov
(bad)
mov
enter
jmp
cmp
stos
imul
and
cmp
pop
stos
sbb
mov
iret
std
stos
xlat
xor
cmps
fild
push
daa
addr16
popa
hlt
sbb
lds
daa
shr
mov
retf
cli
shl
ret
inc
mov
push
mov
fldenv
add
cmp
xchg
stos
xchg
mov
dec
add
xchg
je
push
aas
xor
fidiv
sbb
shl
push
mov
(bad)
outs
cwde
push
in
pop
mov
push
lods
and
loope
pop
scas
cwde
lea
cmp
scas
adc
and
scas
jnp
inc
and
add
mov
mov
aas
inc
ss
retf
mov
in
jge
cmp
jmp
push
jmp
jns
mov
shr
ins
je
ds
push
cs
movs
int
push
loop
cmp
scas
je
cmps
daa
xor
push
repnz
pop
pop
leave
add
xor
ret
es
xlat
cli
dec
daa
bound
scas
and
jg
retf
mov
aas
fiadd
mov
xchg
sahf
mov
outs
jg
pop
sbb
popa
(bad)
mov
push
cmc
dec
test
adc
inc
jno
push
(bad)
xor
xchg
outs
xchg
popa
mov
sbb
push
mov
bound
and
(bad)
out
jg
mov
mov
mov
xor
call
(bad)
jnp
ja
jnp
pop
sub
adc
sub
cmps
ins
jae
mov
stos
out
sub
repnz
retf
push
movs
in
(bad)
xor
ss
mov
mov
test
outs
scas
out
or
fld
into
call
stos
jecxz
lea
stos
imul
dec
sbb
retf
dec
adc
dec
setl
jb
push
mov
sub
xor
leave
pop
cmps
ret
jge
rsm
fwait
sahf
inc
stos
cs
sbb
cmps
movs
mov
mov
ret
sbb
addr16
dec
jmp
sbb
mov
fnstsw
adc
addr16
fnstsw
sub
cmp
(bad)
outs
adc
repnz
iret
les
mov
addr16
sub
inc
stc
pop
fs
outs
loop
xchg
lahf
xor
movs
daa
mov
loop
shl
fwait
pop
scas
mov
push
mov
stos
ins
test
outs
ret
in
sub
das
xchg
gs
jmp
cwde
pop
adc
pop
stos
cmps
push
sub
or
mov
mov
je
sahf
mov
and
mov
or
out
cmp
pop
or
adc
xor
add
adc
jg
lahf
ss
scas
sahf
dec
ret
cmp
outs
stos
div
sar
cli
dec
ins
xchg
stos
bound
jmp
iret
fs
pop
dec
imul
loop
jae
cmps
push
aaa
rcr
clc
int
adc
addr16
push
es
pusha
mov
ret
cmp
jnp
mov
repnz
xor
adc
mov
ins
add
fisub
cmps
mov
add
repnz
in
icebp
adc
sub
stos
(bad)
out
mov
or
cmp
pop
gs
mov
sub
or
jno
dec
fild
outs
retf
in
in
out
adc
jne
sbb
lods
xchg
cmps
mov
sub
cmp
xchg
data16
adc
add
inc
mov
(bad)
es
(bad)
cmp
lods
mov
inc
js
es
pusha
imul
jl
outs
stos
gs
ja
mov
or
and
aas
dec
out
(bad)
dec
push
mov
and
xchg
ja
cmp
lea
mov
imul
mov
adc
cmc
jbe
inc
mov
push
and
ss
xchg
in
daa
mov
div
push
push
imul
mov
fmulp
js
add
xchg
stos
adc
inc
outs
lods
pop
pushf
mov
(bad)
sub
outs
aam
add
in
push
sbb
(bad)
ja
inc
icebp
mov
inc
sub
inc
cdq
push
cmp
outs
xchg
mov
out
sub
les
xchg
sbb
and
gs
sbb
addr16
cmps
jp
lea
scas
popf
mov
lods
or
jge
cmps
imul
mov
mov
pop
loopne
sub
cmp
mov
sub
cli
fidivr
imul
pop
xlat
out
fidivr
adc
mov
lds
aaa
fidiv
xchg
fidivr
mov
(bad)
cmc
jecxz
mov
outs
jbe
inc
xchg
cmps
jl
cmp
in
adc
add
cmc
mov
pop
mov
cmp
(bad)
fild
sub
mul
mov
and
out
out
cmp
sbb
xor
mov
mov
ds
mov
lahf
out
ins
(bad)
stos
pop
movs
popa
xor
adc
ja
repnz
mov
mov
and
jo
jecxz
cmps
cmp
push
cmp
mov
(bad)
sub
cmps
sub
xor
bswap
xor
xchg
outs
mov
and
imul
out
push
(bad)
outs
mov
fisub
(bad)
mov
scas
sbb
sti
imul
push
aas
pop
pop
xchg
sti
lahf
movs
jne
movs
mov
jo
outs
cwde
not
pop
out
mov
(bad)
mov
movs
iret
or
(bad)
cmps
cmp
and
pop
xchg
leave
jbe
psubusw
rcr
mov
daa
jl
mov
fist
in
and
jmp
fucomip
sub
shr
(bad)
and
jbe
scas
jns
inc
jl
adc
jo
in
pop
outs
dec
lahf
dec
in
push
dec
out
ss
lods
adc
aam
cs
sbb
sub
lds
pop
cld
cmp
mov
int
push
fidivr
pop
lea
sub
stos
rcl
add
(bad)
pop
imul
stos
jae
mov
daa
fstp
mov
push
push
lea
inc
push
test
xor
xor
fs
ficom
jae
scas
mov
(bad)
loop
lea
and
push
jg
mov
cmps
mov
ror
int3
pop
in
or
aam
out
movs
sub
ret
lahf
popf
scas
mov
push
sub
out
out
lods
cmp
sub
inc
das
inc
push
fadd
jmp
inc
movs
data16
popa
pusha
fisubr
sbb
neg
and
movs
adc
or
leave
(bad)
aaa
jno
pop
stc
jmp
outs
cmps
cmp
scas
xor
cmp
adc
mov
xor
inc
lds
cmp
sti
ja
xor
js
mov
or
or
pop
dec
mov
bound
(bad)
(bad)
push
retf
mov
dec
pop
test
das
das
outs
pop
push
push
dec
test
fisttp
mov
es
fisttp
test
arpl
pop
jge
jbe
pop
adc
(bad)
and
outs
out
mov
mov
push
pop
nop
out
repz
jmp
mov
or
mov
jnp
loop
jb
mov
pop
inc
xchg
imul
xchg
shl
movs
pusha
xor
mov
inc
scas
add
xor
push
mov
xchg
dec
adc
sub
sahf
sbb
xchg
stos
ja
sbb
pop
jg
mov
and
scas
jbe
arpl
aas
scas
mov
sar
cmps
mov
loope
ret
push
ret
pop
and
loop
push
mov
fwait
retf
add
push
cmps
sub
pmullw
push
es
out
test
sub
(bad)
(bad)
das
scas
imul
les
jo
out
shr
sbb
mov
shl
jnp
addr16
imul
mov
iret
hlt
pop
mov
mov
mov
push
mov
popa
data16
cdq
(bad)
cmps
div
jecxz
cs
dec
push
stos
pop
fdiv
test
daa
mov
pop
sub
mov
sahf
addr16
loop
inc
loop
xor
mov
js
lods
mov
adc
sub
psrad
dec
je
sti
mov
bound
lea
pcmpgtb
imul
leave
xor
or
sub
adc
xor
in
cmps
push
ficomp
jbe
movs
aaa
stos
mov
inc
cmp
aad
adc
xchg
jg
sub
js
dec
daa
in
push
xchg
aas
mov
dec
jnp
adc
shl
(bad)
ja
cmps
fisttp
inc
sub
(bad)
(bad)
adc
movs
and
mov
push
stc
jle
setae
imul
dec
mov
por
cmp
arpl
scas
out
outs
bound
fdivp
pop
xor
fwait
adc
lock
mov
mov
es
aad
test
aas
mov
fist
ja
xchg
imul
mov
sub
push
jnp
repnz
inc
outs
mov
dec
inc
adc
outs
movs
fwait
mov
add
movs
cmp
cwde
ja
mov
mov
retf
stc
mul
imul
mov
test
xor
sahf
dec
mov
scas
cmp
(bad)
clts
cld
imul
outs
scas
data16
movs
mov
popa
arpl
cld
into
cmps
mov
pop
cmps
test
imul
leave
and
xchg
dec
adc
lahf
adc
mov
pop
data16
cmps
or
and
ret
sub
or
movs
aad
aas
jg
push
mov
hlt
push
stos
fnstenv
xchg
outs
jg
sahf
enter
push
xchg
jmp
or
add
and
int3
push
retf
fs
pop
mov
mov
aas
pop
pop
arpl
xor
fimul
cmps
mov
add
out
test
mov
cld
lods
(bad)
mov
sahf
xor
scas
mov
jmp
or
ret
jecxz
mov
stos
mov
mov
cmc
mov
test
xlat
pop
xor
dec
es
mul
outs
xor
xchg
scas
mov
jnp
cmps
lahf
xchg
mov
int
jnp
pmulhuw
fwait
loopne
mov
repnz
idiv
push
dec
(bad)
mov
xchg
ss
mov
inc
out
and
es
mul
lock
mov
xchg
push
jmp
out
push
ss
push
mul
jg
xchg
mov
push
xor
stos
fs
jne
mov
pop
add
(bad)
outs
sbb
arpl
(bad)
movs
mov
xorps
pop
aaa
test
fiadd
jnp
in
int3
mov
(bad)
addr16
dec
mov
(bad)
mov
sub
jmp
or
inc
or
loop
jle
jg
xlat
in
mov
or
cmp
ins
cli
mov
in
pusha
xor
mov
(bad)
jg
mov
pop
outs
fs
dec
mov
rcl
ss
fdivrp
xchg
pop
mov
xchg
retf
xchg
xchg
jne
(bad)
dec
jmp
sub
dec
adc
out
push
aas
(bad)
cli
cmps
cwde
jne
sub
sub
sahf
sub
addr16
cmp
arpl
push
(bad)
shl
scas
inc
pop
out
cwde
in
retf
out
jge
or
jo
daa
(bad)
cmp
in
add
cld
inc
add
push
push
iret
nop
lds
(bad)
xor
clc
cmps
mov
pop
xchg
popa
mov
inc
ret
and
pop
out
sub
imul
daa
xchg
xor
push
imul
xchg
cmp
sbb
test
inc
lock
cmp
aas
sub
imul
inc
ret
jno
std
pop
xlat
xchg
xchg
(bad)
(bad)
mov
cvttps2pi
and
aaa
enter
mov
mov
outs
ficomp
cvtpi2ps
inc
enter
mov
pop
lods
sbb
xchg
mov
addr16
sahf
mov
jae
daa
cli
or
lods
arpl
and
in
outs
aad
xor
inc
ins
lahf
jp
adc
daa
adc
jmp
pop
into
lds
test
lods
xor
(bad)
xor
arpl
outs
xchg
aas
mov
and
js
scas
sub
jne
daa
outs
out
jle
inc
sub
out
repnz
mov
(bad)
out
cmp
mov
jg
push
sub
push
cwde
pusha
add
dec
es
push
(bad)
or
stos
cmp
aad
sbb
or
push
imul
xchg
or
lock
xor
ds
sahf
xchg
fidiv
jne
ins
aas
scas
ss
lahf
xchg
push
cmps
cmp
std
and
jmp
inc
hlt
and
jmp
mov
push
lea
movs
std
mov
cli
pop
push
lea
push
pop
push
(bad)
icebp
dec
mov
pop
cmps
or
sub
sub
lahf
popf
(bad)
mov
aaa
pop
xchg
ss
movs
aas
mov
(bad)
stos
jnp
mov
pop
cs
fsubr
push
mov
scas
inc
retf
fwait
aad
dec
in
neg
mov
inc
xchg
pusha
pop
xchg
fidiv
ror
test
jbe
sbb
mov
xchg
lods
idiv
cmps
lock
int
ror
leave
and
nop
push
out
push
mov
ins
mov
cmp
cli
pop
fld
jg
pop
imul
in
(bad)
bnd
dec
push
test
pop
stc
out
arpl
arpl
push
cmp
loop
sbb
in
out
rcl
cmps
(bad)
sub
xor
jg
mov
push
push
xor
mov
stos
pop
xor
or
sub
mov
sub
pop
sub
lahf
fnstsw
imul
out
in
dec
pop
pop
inc
and
jnp
out
push
jg
test
mov
mov
dec
icebp
push
push
pop
test
push
jno
add
outs
lods
fwait
pop
and
mov
mov
xchg
movsx
pushf
cmp
cs
scas
jl
dec
movs
inc
imul
and
pop
mov
or
(bad)
mov
mov
xor
dec
and
and
mov
inc
in
and
xchg
sub
mov
xchg
(bad)
jle
aas
jp
xchg
push
and
jl
pop
xchg
lods
(bad)
push
dec
retf
and
and
push
adc
jnp
or
fimul
mov
test
lods
push
(bad)
mov
fucomip
cmps
lods
xor
cs
mov
pop
ret
ds
fadd
dec
sar
and
gs
ror
xor
mov
or
popf
sub
mov
pop
add
mov
jo
(bad)
and
cmp
add
jbe
mov
or
scas
mov
cli
mov
ss
xchg
rol
jmp
cmp
xchg
fimul
iret
mov
addr16
mov
and
dec
call
jnp
fimul
paddsw
fistp
pushf
in
imul
or
push
dec
jg
push
add
pop
sub
pop
jg
test
cmps
xchg
xchg
fiadd
imul
(bad)
aaa
xor
push
sti
sahf
dec
int
pop
xlat
adc
mov
inc
push
movs
jb
dec
xor
mov
xchg
dec
xor
mov
outs
dec
ins
xor
repz
mov
xchg
ja
jg
mov
dec
jg
sub
sub
push
pop
das
mov
push
sub
mov
adc
outs
and
fwait
outs
sub
outs
ja
mov
mov
push
outs
dec
and
xlat
and
push
ss
icebp
dec
addr16
cmps
outs
sub
sbb
fimul
mov
stos
xor
push
push
and
mov
jae
xor
push
mov
mov
mov
mov
cmps
mov
and
lods
aaa
es
xor
pop
stos
imul
push
aam
cmps
in
xchg
clc
int
xchg
lahf
test
xchg
pop
test
lahf
fsubr
(bad)
mov
stos
out
adc
mov
addr16
imul
adc
cmp
iret
xor
test
cmp
pop
xchg
aam
imul
xchg
inc
add
mov
outs
(bad)
mov
pop
into
add
ds
pop
xor
pop
nop
mov
fdiv
pop
scas
imul
or
xchg
into
jp
and
cmps
cmps
call
movs
mov
stos
mov
mov
dec
xchg
cmp
xchg
push
rcr
ins
sub
mov
mov
pop
cdq
pop
push
adc
fidiv
xlat
je
das
xor
pop
mov
stos
cmps
cmps
(bad)
enter
mov
pop
getsec
outs
(bad)
daa
push
or
push
inc
xor
cld
jp
pop
mov
retf
mov
scas
scas
ds
iret
pop
pop
outs
sahf
out
punpckhbw
out
mov
pushf
jo
dec
xor
dec
jne
pop
jnp
mov
std
jnp
stos
in
xor
dec
push
pushf
aas
daa
rcr
mov
imul
fidivr
lock
jp
dec
mov
pop
jbe
sbb
(bad)
imul
mov
or
ins
aas
outs
aad
lods
lea
and
in
xlat
push
jge
pop
gs
lea
push
cmps
push
int3
out
jnp
cmp
movs
dec
mov
push
mov
aam
jle
cmp
mov
ret
sub
lahf
iret
push
mov
mov
in
aas
outs
adc
test
push
or
out
fstp
jae
pop
ret
arpl
scas
in
outs
pop
or
jge
push
fisubr
out
xchg
test
frstor
mov
out
mov
pop
and
pop
dec
mov
(bad)
ins
inc
add
fldcw
scas
loop
popa
xor
into
mov
rol
test
mov
(bad)
pop
icebp
push
aas
int3
or
cdq
icebp
adc
aaa
pop
xchg
mov
icebp
or
push
mov
int3
inc
stos
jno
mov
jge
(bad)
in
aas
sbb
sub
scas
(bad)
(bad)
jg
outs
movs
mov
dec
jo
scas
jnp
inc
lds
(bad)
daa
add
movntq
add
push
sahf
mov
dec
cmp
and
push
dec
aas
scas
xchg
ins
adc
cmps
sbb
sub
fiadd
mov
pop
ja
dec
cmp
scas
lahf
jl
out
lods
leave
pop
cmp
cwde
pop
out
jae
mov
xor
arpl
dec
cs
fisttp
imul
pop
ret
aas
pop
or
jg
xchg
pop
push
loop
aas
pop
sub
rol
jne
adc
fisub
fldcw
mov
mov
inc
(bad)
mov
pop
sahf
fs
in
ja
cmps
cmp
daa
sub
pop
loop
pushf
jne
sub
and
sub
pop
in
pop
mov
add
pop
sub
dec
sub
and
add
jbe
dec
dec
and
cmps
inc
das
int
movs
push
cmps
jl
jge
pop
mov
sub
pop
push
lods
aaa
(bad)
scas
fisub
sbb
aaa
imul
xchg
mov
lods
dec
(bad)
jbe
(bad)
cmps
or
or
sub
into
mov
daa
xchg
pop
outs
jbe
dec
daa
test
pop
xchg
push
mov
(bad)
test
fist
and
aas
push
and
data16
dec
iret
adc
cmp
or
gs
fidivr
push
xchg
(bad)
fidivr
xchg
jg
loop
ja
mov
lds
or
mov
xor
xchg
out
lahf
inc
mov
arpl
rcr
add
sub
out
lahf
imul
pop
adc
shr
or
inc
jge
xor
mov
aas
movsx
test
fucomip
sahf
pop
les
pop
xchg
adc
shr
jle
sbb
mov
dec
or
xchg
(bad)
push
ins
pop
adc
test
mov
sub
das
cli
cli
stos
ds
out
xchg
scas
and
lahf
div
mov
shl
mov
add
jg
mov
das
jmp
jae
out
iret
in
into
fmulp
arpl
ret
cs
xor
mov
adc
dec
inc
hlt
sub
sub
cld
xor
repnz
pop
xchg
sbb
sub
(bad)
imul
adc
pop
jo
jae
push
ja
mov
ret
fcmove
push
call
cmps
sub
add
daa
(bad)
push
(bad)
mov
shl
sti
jo
and
adc
fisubr
xchg
mov
push
pop
jnp
daa
retf
pop
das
stos
push
sbb
out
pop
push
xchg
loop
or
fist
into
sub
jo
xchg
cmps
mul
aas
xor
mov
movs
pop
push
dec
mov
jbe
sub
das
xor
xchg
imul
push
mov
adc
in
shr
out
imul
sbb
in
arpl
rcl
jle
cmps
mov
add
sub
fadd
jg
rcr
xchg
dec
not
imul
retf
stos
aas
dec
mov
mov
sub
aas
fdiv
xor
loop
inc
sahf
adc
push
bound
xchg
mov
mov
mov
jae
pop
std
daa
add
dec
add
dec
(bad)
mov
iret
ds
ret
cmp
retf
ss
inc
aas
pop
shr
xor
mov
mov
lahf
cmovg
icebp
xor
in
not
cmp
outs
inc
lock
(bad)
mov
pusha
mov
jmp
lds
sub
mov
dec
add
mov
lods
and
inc
stos
cwde
sti
xor
retf
cmps
std
sbb
xchg
neg
cli
stc
outs
dec
cmp
(bad)
retf
sub
cs
lahf
cmp
inc
ja
jmp
jno
pop
dec
stos
jae
(bad)
ja
add
jno
mov
jo
dec
scas
cmp
mov
sbb
daa
dec
sbb
sub
add
lahf
repnz
jge
pop
stos
jnp
inc
mov
mov
mov
daa
mov
retf
and
pop
cwde
dec
outs
and
outs
aaa
xor
retfw
push
daa
addr16
or
fisubr
cmp
jmp
icebp
dec
outs
scas
push
jmp
outs
aas
ins
shr
scas
pop
aam
aad
xchg
ja
call
in
sbb
sahf
(bad)
push
jbe
pop
xchg
pop
outs
dec
mov
mov
mov
aas
in
mov
das
out
mov
pand
mov
fst
stos
aad
push
outs
imul
ror
(bad)
pop
inc
shl
das
aas
jb
imul
mov
test
mov
fdivr
or
ficomp
ds
mov
pop
inc
push
xor
push
aas
gs
stos
dec
sub
lahf
ret
sub
(bad)
sub
sahf
lea
xor
mov
xor
mov
cli
popa
div
popf
dec
movs
in
sub
outs
(bad)
mov
lahf
dec
push
fidivr
scas
(bad)
cmps
test
mov
lods
cmps
or
es
mov
cwde
xlat
outs
(bad)
and
outs
stos
in
push
sub
mov
imul
ja
int
xor
mov
mov
(bad)
xchg
outs
jb
mul
ja
not
iret
aam
jmp
cmp
data16
daa
jo
xchg
fidivr
cmps
retf
jle
push
xor
mov
sub
cmp
or
retf
push
lahf
push
ficomp
jae
int
shr
xchg
push
fnstsw
test
jmp
fs
xchg
popa
sti
xchg
pop
pop
mov
fs
shr
popa
cmps
in
fdivrp
bound
arpl
outs
pop
inc
out
(bad)
popa
fwait
ins
sub
mov
idiv
sub
inc
xor
pop
cwde
inc
out
lods
sub
xchg
and
push
dec
sub
mov
push
iret
mov
jp
jbe
adc
mov
push
xchg
pop
ins
(bad)
adc
pop
retf
xchg
outs
mov
mov
mov
xchg
jbe
mov
mov
and
std
mov
ret
xchg
arpl
mov
push
in
push
(bad)
gs
scas
movs
cld
mov
in
(bad)
enter
lods
push
sbb
jbe
push
sbb
push
push
cmps
pushf
jl
jno
stos
mov
mov
mov
sub
mov
dec
ficomp
into
xchg
mov
push
inc
jl
mov
cmp
inc
lds
stos
pop
xor
xchg
(bad)
fdivrp
push
movs
sub
pop
sbb
ss
jmp
loop
outs
mov
arpl
jg
jnp
cmp
lods
fisub
loop
fld
ins
jmp
repz
or
adc
ja
out
jnp
test
xchg
popa
in
lods
ins
jae
data16
jmp
mov
sbb
mov
mov
lods
add
and
pop
movs
adc
outs
or
push
sbb
popf
push
retf
mov
xchg
mul
sar
push
pop
dec
inc
loop
sbb
loop
xor
shr
dec
(bad)
adc
or
jb
xor
bound
pop
cmps
jo
les
mov
bound
cmps
add
push
sub
push
fidivr
popa
sbb
jecxz
mov
lea
fistp
ja
ds
inc
inc
xor
into
out
or
cmps
jmp
les
das
sbb
hlt
sub
jle
xchg
jg
cmp
push
xchg
ja
pop
cmps
pusha
xor
and
inc
push
scas
jmp
cwde
dec
paddusb
mov
in
push
xor
test
cs
cmps
push
sbb
data16
lahf
mov
imul
mov
arpl
cmps
or
push
mov
ja
xor
push
hlt
or
popa
repnz
rcl
(bad)
fcom
test
mov
neg
je
ret
inc
pop
push
sub
push
dec
pusha
mov
mov
and
xsha1
cmps
or
(bad)
mov
pop
(bad)
cmps
jbe
mov
pop
sbb
xchg
ds
stos
dec
adc
stos
pop
push
cmp
pop
imul
stos
jge
sub
out
jg
and
ins
cmp
(bad)
push
adc
mov
inc
mov
xor
dec
fbld
pop
mov
ds
add
sbb
mov
push
jae
test
cmps
(bad)
fisub
test
movs
sub
outs
mov
jae
push
jg
retf
sbb
(bad)
aam
aaa
adc
(bad)
adc
aas
mov
xlat
mov
stc
jbe
outs
push
cmp
cmps
mov
jle
(bad)
cmc
xchg
dec
cmps
cmp
repnz
into
in
adc
cmp
fnstenv
lods
imul
scas
xlat
jae
sbb
mov
jmp
jae
stos
rcr
outs
and
pushf
sahf
jecxz
cdq
pusha
push
adc
stos
std
xchg
scas
add
mov
inc
data16
push
jo
repnz
lahf
sub
dec
daa
dec
dec
jbe
sbb
aas
outs
jae
inc
cmps
int
sub
pop
fistp
aam
das
cld
stos
xchg
inc
scas
push
adc
xchg
mov
cmp
nop
out
fwait
call
das
aas
xchg
shr
sar
in
and
dec
ja
sbb
daa
aas
in
out
push
cs
push
stc
adc
pop
test
adc
test
mov
mov
and
movs
and
xlat
sbb
call
(bad)
imul
movs
loop
sub
cmp
mov
aas
sbb
in
iret
dec
pop
push
(bad)
inc
xchg
sbb
dec
addr16
sub
scas
mul
rdpmc
(bad)
cmps
out
ss
lods
outs
movs
and
mov
cmps
stos
or
addr16
addr16
jle
cld
outs
das
or
sub
mov
jb
jg
fiadd
in
arpl
pop
mov
sub
jo
jo
out
jb
(bad)
add
pop
dec
stos
inc
hlt
fcom
ja
mov
jb
mov
mov
or
outs
outs
sub
test
test
sbb
push
mov
cwde
dec
scas
jg
jno
aas
jg
mov
arpl
push
(bad)
clc
aaa
mov
inc
retf
inc
loop
outs
retf
pop
(bad)
push
(bad)
lods
and
xor
jmp
xchg
ja
mov
inc
outs
xchg
les
sub
movsx
and
ins
daa
xchg
jnp
mov
mov
leave
daa
and
pop
pop
push
sbb
pop
dec
in
add
test
push
inc
pop
pop
xchg
rol
xchg
push
jp
fs
add
cmp
jecxz
dec
fidivr
pop
inc
mov
lahf
xor
cmp
cmps
mov
shr
mov
add
mov
xchg
loope
aas
mov
loopne
jmp
sbb
stos
xor
pavgw
je
push
lahf
or
lea
pop
push
ror
lods
and
or
(bad)
call
shl
fcmove
rsm
sahf
sub
repnz
sub
(bad)
mov
or
pop
mov
icebp
xchg
push
add
outs
push
nop
pushw
lahf
daa
ret
je
ins
mov
lods
xor
mov
pop
mov
es
loopne
daa
mov
or
nop
mov
sahf
sub
mov
xchg
dec
xchg
in
mov
(bad)
xchg
stos
mov
outs
sub
mov
sti
mov
cmc
arpl
sub
mov
and
iret
jmp
popa
mov
mov
(bad)
scas
lahf
inc
shl
and
ds
daa
xchg
lods
mov
xor
pop
dec
mov
jne
popa
adc
pop
cmp
scas
xor
imul
out
in
outs
fldcw
mov
outs
sub
outs
sbb
les
loop
cmp
retf
pop
fs
(bad)
mov
and
cwde
dec
clc
push
ret
lea
popf
in
or
mov
cmp
out
in
fs
das
mov
ret
and
mov
add
fs
or
xlat
cmp
mov
sti
mov
shl
pushf
jl
cmp
idiv
stos
repnz
jg
movs
addr16
push
xchg
mov
mul
adc
rol
fs
fsubr
jmp
int3
inc
(bad)
jmp
pop
cmp
int3
in
arpl
sbb
lods
scas
mov
packuswb
pop
in
sahf
(bad)
jp
sbb
je
cli
(bad)
imul
push
aad
sti
fisubr
and
hlt
sub
int3
xchg
inc
pop
cmc
and
xlat
inc
mov
mov
cwde
sub
(bad)
nop
mov
cmp
(bad)
test
push
(bad)
lods
or
lahf
mov
out
dec
outs
addr16
push
mov
push
gs
mov
sbb
xor
pop
mov
inc
pop
push
movs
ins
test
adc
ficomp
je
pop
mov
jmp
inc
cmp
arpl
outs
mov
mov
shl
push
(bad)
xchg
in
mov
sub
mov
mov
sub
xor
mov
std
lahf
xor
femms
mov
loop
sbb
inc
outs
mov
mov
leave
fptan
mov
mov
bound
out
cmps
test
js
(bad)
cmps
cmp
js
or
aaa
adc
out
arpl
xchg
leave
fs
cli
mov
pop
jg
aas
push
lea
mov
and
cmps
mov
dec
pop
push
jb
scas
mov
dec
sbb
mov
(bad)
mul
jns
stc
pop
mov
rcl
push
mov
push
dec
push
in
(bad)
fistp
jle
frstor
pop
push
imul
add
(bad)
cmps
mov
int
out
loop
inc
scas
fwait
repz
or
out
lahf
mov
mov
das
loop
dec
imul
mov
pop
shr
xor
or
mov
mov
adc
sub
aad
jle
dec
mov
nop
in
cmp
sbb
leave
pop
mov
popf
aas
xor
loop
aad
sub
seto
ja
movsx
(bad)
or
cli
shr
leave
test
out
dec
dec
outs
pop
mov
je
mov
(bad)
sub
xchg
(bad)
cmp
idiv
mov
adc
cmp
dec
sub
sahf
movs
xor
aaa
xor
fiadd
ja
add
adc
addr16
ins
out
out
mov
cdq
cmps
repnz
xor
add
shl
mov
add
rol
fs
bound
xchg
mov
xchg
repz
or
outs
add
mov
jge
ret
pop
gs
mov
cmps
imul
push
aas
mov
(bad)
pop
sbb
inc
cmps
jle
fisub
ins
pop
xchg
aaa
idiv
push
imul
mov
stos
cwde
cmc
retf
movs
lds
pop
nop
mov
je
fsubr
stos
xchg
jns
sub
inc
in
push
pusha
cmps
cmps
in
fldcw
xor
sbb
pop
pop
xor
mov
in
test
mov
test
adc
stc
cmp
out
lods
daa
inc
loop
shr
f2xm1
jp
push
ins
arpl
in
mov
and
sbb
xor
adc
pop
cmp
xchg
and
lods
or
dec
in
sar
dec
dec
(bad)
cmps
out
sbb
adc
jo
out
inc
mov
aaa
xchg
mov
mov
retf
mov
out
mov
ins
stos
neg
sub
push
das
div
cwde
dec
leave
add
fisubr
cmp
pop
imul
mov
lahf
cmp
adc
jae
xchg
imul
cli
pop
adc
fstp
cmp
pop
xchg
xchg
xchg
mov
das
push
jg
inc
dec
mov
cmps
jle
sub
cmps
rcl
fimul
sar
jnp
inc
in
sbb
fnstcw
pop
xchg
xchg
lahf
jb
sbb
fisub
pop
jnp
mov
push
cwde
fnstsw
in
addr16
in
lahf
test
push
es
cmps
pop
rol
test
sub
mov
movs
(bad)
xchg
inc
jecxz
push
cwde
in
dec
mov
(bad)
xor
outs
sub
psraw
cmp
jne
stc
outs
pop
int
adc
cmps
lahf
xor
or
ins
pop
dec
mov
loopne
push
or
gs
xlat
mov
and
sbb
lahf
mov
sahf
mov
push
pop
int3
jb
imul
in
lods
push
sub
leave
das
jnp
rol
sub
and
fmulp
fidivr
jno
pop
jmp
iret
mov
(bad)
sub
sub
inc
and
movhlps
cmp
dec
push
lahf
cmp
scas
clc
js
dec
in
push
jb
sbb
out
lahf
pop
push
test
inc
daa
(bad)
xchg
ret
dec
pop
cmp
(bad)
sbb
mov
fwait
cmp
jo
sbb
popa
outs
and
xchg
dec
(bad)
mov
mov
in
inc
jne
push
and
jmp
test
mov
es
add
push
cmp
je
cs
cmp
mov
pop
lds
cmp
mov
cli
pushf
fs
and
mov
cmp
mov
mov
mov
pusha
mov
movs
cmp
mov
nop
movs
lea
sub
mov
jnp
cld
add
pushf
imul
mov
mov
mov
adc
cmp
mov
nop
push
or
or
sbb
sub
outs
push
outs
movs
imul
mov
adc
xchg
das
mov
mov
mov
add
sti
mov
pop
jg
mov
mov
les
mov
and
in
mov
push
repz
das
sbb
fnsave
iret
cs
mov
mov
add
dec
sar
imul
add
aaa
call
jns
scas
jle
(bad)
test
ret
retf
loop
ja
scas
lahf
push
in
dec
jmp
mov
mov
adc
dec
out
mov
mov
lods
in
cmps
call
lods
cmp
repnz
jecxz
and
ja
cmps
cmps
jmp
jno
ja
hlt
das
jnp
arpl
pop
mov
outs
dec
jecxz
mov
stos
sbb
(bad)
das
pop
sub
jl
out
stos
scas
ins
xor
inc
rol
or
inc
call
mov
dec
cmp
(bad)
mov
xor
out
movs
jle
pop
mov
mov
lods
push
pop
retf
aad
sub
add
inc
mov
aas
or
add
stos
sub
add
sbb
xchg
sub
xor
jge
pop
mov
aas
scas
aad
sbb
stos
pop
ja
outs
pushf
sar
pop
aaa
in
sbb
jnp
push
inc
mov
shr
jae
aad
mov
aas
jo
or
scas
add
fidivr
jmp
sbb
mov
pop
adc
pop
jno
jg
pop
fs
xchg
mov
clc
test
outs
aas
mov
(bad)
aas
lahf
mov
cmp
and
or
mov
sub
daa
mov
mov
cmps
sbb
sub
mov
fldcw
movs
mov
stc
leave
daa
cmps
adc
mov
xor
jp
lahf
out
mov
lahf
push
out
xchg
sbb
ss
ins
in
clc
jmp
icebp
cmps
scas
dec
shl
add
jg
out
ds
jmp
push
xchg
adc
mov
aam
cmc
loope
mov
xor
retf
jg
int3
mov
sbb
push
scas
sub
xchg
shl
imul
popf
pushf
addr16
inc
mov
(bad)
push
push
sbb
(bad)
ins
popa
scas
inc
dec
sub
pop
imul
mov
popf
mov
mov
test
mov
push
fidiv
or
in
mov
aas
mov
test
pusha
ds
aaa
pop
push
lods
sar
bound
ins
jae
dec
nop
adc
cmps
js
jge
xchg
ficomp
xor
outs
cs
jae
imul
outs
mov
hlt
push
jge
sbb
outs
mov
stos
mov
mov
repnz
xchg
sbb
mov
imul
fsub
stos
ror
adc
sub
mov
mov
mov
cmps
retf
dec
fild
xor
imul
mov
rol
into
fsub
jo
arpl
sub
loop
je
(bad)
mov
pop
sbb
mov
daa
mov
daa
sahf
ja
ret
push
lods
out
ficom
lods
dec
loope
cmp
jmp
push
jmp
test
adc
es
daa
jg
pop
fwait
das
sbb
in
mov
retf
out
in
(bad)
xchg
mov
or
dec
push
fstp
jl
cmp
icebp
mov
lea
and
sub
dec
lahf
call
mov
dec
jo
push
imul
cmp
in
mov
xchg
pop
stos
mov
cs
xor
sub
jmp
retf
sbb
dec
jg
outs
inc
sahf
cmc
or
repnz
dec
arpl
or
movs
and
aaa
fistp
jmp
popf
mov
sti
xchg
pop
por
dec
daa
sahf
push
mov
ror
pop
cmps
xchg
xlat
mov
imul
cmp
fstp
jnp
(bad)
pavgw
jp
in
push
mov
push
cmps
mov
out
nop
and
retf
sub
lea
and
sub
and
fstp
push
mov
jne
jae
mov
wrmsr
imul
mov
std
inc
push
(bad)
jmp
cmp
aaa
adc
push
jecxz
pushf
push
aas
lea
cmp
outs
fisttp
cli
inc
push
scas
and
pop
ins
mov
push
dec
mov
outs
movs
sub
in
mov
push
or
mov
outs
fdivp
repnz
or
jnp
call
cmp
xchg
outs
push
js
sub
aam
mov
jae
pop
xor
ficomp
dec
aaa
cmps
push
xor
mov
sub
aas
int
mov
sub
inc
or
mov
arpl
lahf
inc
mov
out
jae
ret
lods
lds
mov
adc
and
cmp
test
das
inc
cmp
adc
lods
mov
adc
xor
and
repnz
jecxz
push
sti
cmps
add
adc
sub
out
cmc
mov
(bad)
jp
fwait
adc
(bad)
pushf
nop
jo
sbb
(bad)
imul
adc
aas
mov
cmp
sbb
xchg
fs
sub
sbb
ja
adc
adc
dec
or
xchg
push
repnz
adc
ret
or
xchg
dec
adc
dec
sub
outs
cwde
pop
imul
rcl
stos
rol
sub
mov
jge
mov
out
dec
adc
in
js
aas
mov
inc
adc
adc
adc
ret
dec
ret
mov
cli
fld
imul
dec
hlt
adc
xchg
test
(bad)
mov
daa
adc
stos
mov
pop
ds
(bad)
fidiv
retf
jo
xchg
xchg
fnstcw
pop
sub
aam
sub
sub
aaa
mov
outs
stos
icebp
mov
or
repz
cmps
psubusw
das
and
rcr
dec
pop
cmps
call
repnz
add
retf
into
mov
(bad)
repnz
inc
aas
mov
daa
ja
inc
das
mov
mov
mov
jnp
push
repnz
mov
cdq
mov
aam
cmp
fwait
mov
rcpps
xlat
xchg
fidiv
mov
pop
ins
in
adc
push
cmc
dec
jge
fwait
stc
inc
(bad)
dec
mov
cld
outs
pop
ins
mov
jmp
test
xchg
mov
adc
push
dec
or
int
sbb
daa
aas
outs
mov
in
aas
leave
mov
or
(bad)
outs
scas
and
pop
addr16
int
inc
push
jecxz
and
dec
and
jae
jne
das
into
cmps
cmp
cmps
fsub
ficom
lods
sbb
popw
pop
mov
mov
xor
pop
and
mov
imul
pop
neg
xorps
push
imul
mov
(bad)
in
xor
aad
mov
outs
xchg
jg
cmps
pop
mov
jl
adc
push
fistp
inc
pop
addr16
xchg
cmps
dec
das
inc
sub
int
jnp
cmp
(bad)
cwde
(bad)
inc
pop
cmp
or
outs
fld
push
fldcw
repnz
xor
ins
jo
push
movs
mov
xor
rcr
je
cmp
cmps
ret
mov
mov
mul
jae
sbb
in
rcr
inc
jae
cwde
pop
inc
adc
add
adc
mov
jmp
jns
data16
fs
inc
jnp
or
cmps
jmp
aas
pop
fidivr
fidiv
paddsw
test
adc
and
jae
jae
aaa
sub
xor
icebp
mov
xchg
xlat
popa
pop
test
movs
(bad)
and
int3
pop
in
fcomip
sub
cs
cs
mov
rcr
push
aad
jg
push
dec
pop
push
out
daa
mov
sbb
lods
lea
jge
in
dec
sbb
in
nop
into
lods
ficomp
xor
push
test
dec
scas
stc
sub
mov
shl
mov
lahf
fstp
int3
push
adc
mov
or
pop
mov
lock
scas
imul
add
push
mov
mov
add
lahf
aaa
loop
add
cli
imul
cmp
shl
std
cmc
mov
out
xchg
pop
xor
movs
cmps
dec
push
cmp
aaa
jge
mov
addr16
pusha
movs
add
sub
jae
mov
cmp
sub
lea
jno
ficom
sti
push
outs
and
lahf
out
movs
inc
icebp
inc
into
cmovle
das
jnp
pop
arpl
mov
aas
nop
or
popa
or
in
popf
or
mov
test
repz
adc
outs
inc
loop
pop
(bad)
jle
sub
js
shl
or
ins
xchg
add
ja
mov
mov
push
rcr
imul
stos
pop
lods
aaa
test
popf
jmp
mov
or
scas
mov
stos
scas
loope
lahf
pusha
dec
out
jno
(bad)
movs
jmp
mov
fs
icebp
repnz
scas
cmp
sbb
and
mov
outs
repnz
jae
sub
jne
outs
push
inc
sub
inc
sub
popf
in
dec
retf
shl
jne
rol
lds
xchg
push
xor
sub
xchg
lods
mov
xchg
ss
inc
movs
repz
cmp
mov
pushf
inc
mov
repnz
movs
jg
repz
jno
ret
add
mov
addr16
push
push
inc
push
lss
jecxz
push
push
xchg
test
mov
mov
sbb
lods
mov
cmc
mov
dec
xor
dec
cmp
xor
inc
icebp
sub
xchg
fs
pop
and
mov
inc
mov
sub
jl
sub
xlat
ins
addr16
add
icebp
adc
gs
push
jecxz
test
les
jae
popf
outs
stos
test
mov
dec
sbb
leave
imul
mov
sub
dec
repnz
outs
sub
addr16
push
cmp
cli
inc
popa
shl
mov
loopne
xor
xchg
and
mov
mov
push
aam
push
rcl
push
jne
sbb
and
mov
jae
dec
stos
pop
sbb
aad
sahf
adc
pop
stc
xchg
icebp
and
call
mov
push
cmp
and
jo
aas
in
sbb
mov
xor
cli
shl
(bad)
jmp
shr
mov
dec
adc
jmp
data16
pop
inc
jnp
retf
scas
jns
inc
int
lods
inc
out
mov
mov
test
call
fwait
imul
inc
mov
cmp
mov
repnz
jb
loop
mov
pop
fidiv
mov
(bad)
fstp
pop
xchg
lods
xor
dec
sub
pop
lea
(bad)
mov
in
pop
cmp
mov
xchg
or
mov
and
pop
mov
cmp
inc
push
cmp
test
call
push
aaa
xor
popa
sub
repnz
(bad)
push
iret
mov
das
outs
aas
enter
push
cwde
test
xchg
into
jne
out
arpl
mov
sbb
cmp
ffree
ds
outs
arpl
mov
sub
xor
push
xchg
lods
jno
pop
jae
xor
psrad
daa
fbstp
pop
sbb
lahf
xor
lahf
pop
mov
sbb
pop
fs
xchg
daa
outs
icebp
jbe
or
aam
das
sbb
adc
mov
outs
sahf
mov
outs
ror
pop
jmp
fmul
ins
shl
out
or
xor
daa
push
sbb
jl
(bad)
mov
scas
mov
and
inc
push
push
cli
ja
pop
cmp
pop
mov
lock
ficom
dec
xchg
jmp
outs
fwait
loope
add
sub
daa
xor
test
add
stos
fsubp
mov
mov
sbb
aas
mov
jae
das
addr16
mov
ja
imul
jg
(bad)
int
pop
(bad)
and
mov
mov
xchg
cmps
pusha
mov
mov
out
jl
imul
or
inc
stos
imul
call
cmp
mov
sub
dec
mov
mov
outs
ja
xchg
sub
dec
jmp
scas
(bad)
test
cmp
push
xchg
add
pop
std
jg
mov
mov
out
mov
lds
lods
push
std
mov
fisubr
pushf
cmp
pop
cld
mov
inc
jg
shl
push
scas
jg
lahf
cmp
jmp
mov
test
in
inc
addr16
sahf
fnstcw
(bad)
sbb
fnstsw
daa
test
xor
fwait
gs
in
mov
in
and
cli
sbb
jns
addr16
inc
jl
xor
fiadd
es
in
addr16
xor
fcomip
mov
(bad)
push
jno
ss
mov
or
icebp
mov
jbe
scas
pop
jne
adc
or
call
pushf
pop
jnp
sahf
and
fldenv
sbb
mov
mov
sub
rcr
test
stc
sub
and
pop
push
aas
xor
test
adc
cli
loope
in
xchg
dec
outs
(bad)
and
scas
arpl
jo
outs
cmp
pop
and
(bad)
push
in
push
and
ja
in
dec
ret
dec
(bad)
push
repz
push
invd
aas
shl
sbb
adc
sbb
cmps
pop
push
xor
push
scas
jne
outs
mov
cmp
lods
pop
and
clc
sbb
sub
mov
mov
cmp
jg
cwde
add
daa
jg
fdivp
jne
shl
popa
adc
lahf
imul
ds
push
or
adc
addr16
das
out
cmp
add
add
outs
loope
daa
daa
sahf
mov
test
cmps
inc
(bad)
mov
and
cmp
addr16
pandn
shl
mov
dec
xor
or
mov
daa
jne
xchg
rcl
adc
call
cmps
sbb
aas
pop
fdiv
mov
ins
push
mov
movs
(bad)
dec
sbb
or
xchg
jge
pop
inc
cwde
imul
jmp
sbb
fisttp
not
aas
cli
mov
es
dec
mov
lahf
out
cmp
xchg
adc
sbb
mov
in
mov
loop
push
xchg
shl
pop
cmps
sbb
sub
in
cmps
and
aas
outs
sub
cmp
pop
and
retf
je
pop
mov
test
in
in
fs
(bad)
imul
in
mov
xor
mov
mov
(bad)
xor
mov
neg
sub
sar
jmp
js
xchg
into
mov
push
sub
movs
cmps
push
sub
test
repnz
jae
dec
das
sbb
push
fsubrp
xor
das
mov
push
addr16
add
ds
mov
adc
popf
popa
xchg
pop
push
idiv
sbb
sub
es
repnz
scas
(bad)
ret
cmc
bound
push
test
pop
and
lea
mov
mov
lahf
adc
jg
sbb
and
mov
xor
test
shl
or
cmp
aas
pop
add
push
(bad)
push
sbb
add
aas
frstor
mov
aas
mov
cmp
(bad)
out
push
das
xchg
sub
xchg
adc
xor
addr16
xor
pop
pop
int3
push
mov
(bad)
ss
mov
icebp
mov
outs
mov
dec
sub
pop
cmp
push
jo
add
sub
mul
mov
inc
mov
inc
mov
mov
scas
mov
or
sub
dec
sbb
lahf
xor
dec
call
inc
xchg
mov
jmp
out
dec
add
cmps
movs
sub
arpl
pop
sub
(bad)
dec
add
mov
pop
lahf
lea
test
dec
daa
jg
xchg
ret
fild
and
cmps
shl
mov
sbb
pop
movs
add
imul
xlat
pop
or
out
mov
sbb
loop
(bad)
lahf
out
test
addr16
adc
repnz
dec
push
div
(bad)
sub
lea
jb
push
mov
push
lods
ret
jo
ja
xlat
dec
sti
sub
jnp
cmps
fist
cmp
sar
mov
jg
cmp
(bad)
in
inc
sbb
xchg
mov
cmp
pop
sbb
cld
retf
jg
(bad)
xchg
jmp
stos
pusha
adc
cmp
add
(bad)
mov
dec
rcl
push
test
sub
push
fidiv
(bad)
popa
jmp
xor
aaa
mov
lahf
mov
call
mov
in
mov
push
or
mov
push
cs
or
nop
pusha
cmp
in
push
lods
mov
jmp
pop
int3
cli
push
xchg
xchg
mov
cmc
jg
fwait
xlat
push
inc
in
push
inc
xor
sbb
cmps
mov
addr16
and
(bad)
cli
arpl
add
pop
and
adc
daa
cmp
mov
jb
mov
xchg
ret
aaa
jge
into
mov
fadd
je
imul
pop
ja
xor
or
mov
lods
pop
(bad)
pop
scas
ret
cmp
mov
jmp
jb
retf
(bad)
xchg
mov
stos
nop
xchg
inc
xor
lods
jo
jnp
cmp
push
out
pop
cmp
and
pop
mov
fs
xor
or
aas
cli
pop
es
jno
mov
inc
outs
adc
retf
in
sahf
ins
aas
push
mov
nop
pop
xlat
in
fnstcw
push
outs
pop
icebp
pop
xchg
and
movs
pop
shl
(bad)
outs
cmc
xor
mov
ins
pop
xor
addr16
out
xor
in
lds
or
idiv
jno
mov
std
lahf
das
push
mov
jl
daa
scas
fwait
mov
lahf
xchg
fs
sbb
aam
mov
popf
stos
out
sub
es
fidivr
mov
(bad)
outs
daa
pop
das
rcr
pop
and
pslld
push
jnp
repnz
fnstcw
rol
xchg
retf
icebp
and
shl
(bad)
mov
fs
aaa
mov
cmc
jmp
sub
inc
das
fidivr
test
repz
outs
daa
sub
inc
ficom
shl
pop
sub
jmp
inc
push
xor
mov
push
in
(bad)
aad
in
dec
lahf
sub
(bad)
mov
mov
pop
push
and
xchg
or
out
shl
andps
stos
(bad)
sub
stos
loop
dec
push
shr
lods
faddp
cmp
or
mov
fwait
aas
sbb
test
inc
test
fwait
or
es
lds
sub
pushf
out
adc
inc
push
aaa
lods
mov
setbe
addr16
adc
sahf
cli
das
xchg
xchg
dec
xchg
repnz
mov
mov
cmps
pop
xchg
and
movs
or
ficom
mov
jmp
faddp
ss
and
mov
mov
sbb
inc
mov
sub
mov
addr16
jge
sub
jb
jl
neg
lods
adc
lods
mov
out
mov
(bad)
in
dec
sub
out
adc
(bad)
(bad)
add
not
retf
out
stos
mov
je
shr
cmp
jno
dec
fsub
push
adc
nop
sbb
call
mov
jmp
idiv
cmp
movs
jno
or
movs
push
dec
aas
imul
xchg
mov
lods
or
movs
out
icebp
adc
mov
out
cmp
dec
addr16
push
call
xlat
jg
in
xor
jae
push
mov
adc
jo
pop
jle
add
mov
out
mov
fist
nop
sbb
push
loop
adc
cld
out
cli
test
pop
out
sbb
ds
sti
mov
enter
adc
inc
ins
push
and
lock
(bad)
sub
mov
adc
pop
jmp
addr16
cld
push
and
retf
and
lock
sub
cmps
out
inc
mov
adc
and
sub
xchg
cmps
adc
cmp
movs
sbb
dec
cmovs
inc
pop
repnz
or
pop
div
test
mov
fisub
lahf
ja
pfcmpge
lea
cs
out
test
fistp
jo
jge
cmps
mov
pop
xchg
scas
xchg
dec
jge
mov
xchg
cmps
cmp
or
out
aam
stos
or
addr16
(bad)
arpl
or
mov
mov
mov
jne
rcl
pop
push
mov
sub
idiv
jno
lds
ficom
repnz
stos
in
push
fidivr
faddp
lea
repnz
jg
pop
sbb
cmps
pop
mov
xor
outs
fwait
mov
(bad)
lock
int3
sub
mov
aas
iret
fisttp
xor
outs
in
mov
leave
xchg
pop
and
(bad)
mov
pop
(bad)
data16
inc
jge
xchg
sub
setno
daa
xchg
xchg
inc
mov
aas
inc
ins
ss
sbb
cmps
scas
mov
mov
movs
(bad)
(bad)
lods
dec
lahf
ficom
pop
adc
dec
xchg
loop
aas
es
lahf
adc
sub
cmp
and
ficomp
stc
jl
sahf
cmpxchg
cmp
sub
outs
stos
push
and
inc
pop
cmp
sbb
ja
(bad)
push
sbb
mov
mov
adc
and
ficom
popa
jns
scas
dec
je
(bad)
mov
lds
nop
sbb
fcmovu
movs
mov
sbb
pop
xor
push
push
out
cli
xchg
dec
out
addr16
stos
mov
ficomp
aas
inc
jmp
aas
sub
cmp
lahf
dec
sub
mov
out
cmps
cld
gs
(bad)
(bad)
iret
jmp
sub
cmps
push
in
and
cmp
jg
aas
dec
pop
mov
(bad)
stos
iret
xor
mov
fwait
xchg
ss
lods
(bad)
arpl
sahf
and
dec
fcom
jmp
pop
mov
push
dec
test
jmp
(bad)
addr16
jnp
mov
dec
pop
push
push
scas
daa
fs
out
pop
sbb
ret
adc
pop
and
adc
add
sub
cmp
adc
cs
outs
inc
adc
and
iret
lahf
fimul
cld
xchg
stos
imul
les
dec
cmp
jbe
mov
add
and
movs
dec
pop
sbb
push
sar
mov
add
cmps
inc
inc
sub
(bad)
jg
xchg
imul
cwde
and
addr16
(bad)
imul
mov
loop
mul
aad
pop
pop
push
test
test
pop
(bad)
mov
cdq
ss
mov
rcr
cmp
gs
int3
aaa
stos
movs
or
stos
jbe
scas
mov
pop
cdq
bound
lods
stos
inc
or
sbb
jg
jle
push
xchg
scas
imul
jp
dec
hlt
dec
cmps
movs
mov
xlat
and
xchg
pusha
xor
cli
sbb
mov
ror
cmp
mov
xchg
retf
pop
inc
das
jg
mov
mov
pop
push
fistp
daa
push
lahf
fistp
ins
or
(bad)
or
retf
out
cmp
jno
lds
aas
mov
andps
imul
mov
xchg
xchg
mov
sub
cmp
das
mov
mov
jb
dec
loope
lock
fs
sbb
inc
pop
stos
mov
outs
sbb
test
(bad)
addr16
cs
mov
cli
stos
mov
xchg
push
sub
nop
int3
jg
mov
xor
ret
push
cmps
mov
sub
sub
cmps
adc
pop
ss
pop
pop
adc
daa
mov
lods
cld
scas
mov
(bad)
jle
push
popf
jmp
or
mov
mov
bound
aas
unpckhps
ds
mov
mov
(bad)
test
mov
addr16
out
(bad)
xor
imul
inc
mov
mov
xlat
jns
(bad)
fisubr
stos
push
data16
sbb
retf
sbb
loopne
mov
mov
scas
std
push
jg
loop
jg
xchg
imul
addr16
out
and
mov
test
sbb
fs
jnp
pushf
(bad)
in
mov
fwait
leave
mov
pop
jno
lods
dec
stos
outs
loope
jno
lds
retf
ja
cmp
adc
and
out
push
scas
jae
xchg
jbe
mov
sub
out
sar
or
adc
mov
dec
inc
fxch
and
lahf
or
sub
jp
mov
(bad)
mov
scas
push
outs
mov
daa
jb
xchg
stos
sub
add
mov
push
test
popa
adc
dec
sub
stos
in
(bad)
fldl2e
(bad)
je
ret
lods
js
mov
inc
mov
cmc
bound
mov
in
cld
mov
test
(bad)
es
pop
test
xchg
leave
pushf
xor
mov
adc
outs
or
dec
imul
stos
mov
scas
mov
test
mov
fidiv
pop
imul
and
shl
push
ret
pop
and
mov
nop
(bad)
sub
sub
pop
jmp
int3
or
test
mov
fdiv
ret
(bad)
outs
xor
sbb
les
out
lods
ds
sahf
xor
adc
in
daa
xchg
fimul
xor
pop
mov
aas
js
lea
xor
in
dec
es
not
cs
and
xlat
popa
mov
popa
push
outs
mov
(bad)
movntq
out
and
retf
movs
(bad)
in
adc
out
mov
mov
pop
daa
dec
xor
(bad)
scas
sti
sub
mov
xchg
or
mov
pop
and
outs
adc
inc
or
mov
mov
xchg
cmp
out
data16
mov
arpl
mov
(bad)
data16
and
pop
mov
pop
(bad)
ficom
imul
sbb
fstp
jo
cmp
pusha
pinsrw
in
pop
jae
test
nop
outs
cmp
iret
int
mov
xor
cdq
xor
cli
maxps
push
sub
lea
and
and
gs
sub
test
lahf
je
xchg
rcl
shr
aas
stos
mov
scas
lds
xchg
jecxz
jb
sub
daa
and
or
(bad)
push
xchg
out
dec
pop
or
(bad)
mov
and
repnz
push
xchg
ret
(bad)
aas
cs
popa
ds
daa
push
and
imul
repz
mov
jg
imul
test
xor
cmp
cwde
add
jl
cmp
push
int
jmp
mov
pop
jmp
xor
popa
das
jl
dec
lock
xor
aad
cmp
pop
mov
sti
adc
sbb
dec
fisub
mov
retf
sbb
lahf
stos
inc
sbb
outs
inc
add
mov
sub
cmps
ror
xchg
stos
dec
mov
lea
sti
stos
push
push
sub
fisttp
daa
ins
inc
fs
jno
fild
add
add
jae
jl
add
jno
mov
ja
aas
cs
in
dec
push
sub
fadd
aas
cwde
pop
cmp
jmp
nop
repz
out
outs
inc
xor
loop
sub
(bad)
bt
clc
imul
xchg
icebp
jp
out
in
lock
rol
mov
sti
lods
sub
mov
inc
scas
sahf
call
or
or
push
out
mov
mov
dec
xchg
js
cmps
cmps
push
mov
xchg
daa
mov
ja
movs
sar
lahf
lods
cmps
jo
jle
arpl
push
pop
stos
sbb
dec
pop
cmp
mov
daa
mov
mov
mov
mov
mov
outs
add
and
sbb
fisubr
pop
mov
sub
fnstcw
loop
pop
sbb
sbb
jge
dec
mov
stc
jns
mov
popfw
pop
stos
test
test
mov
xlat
cld
out
ret
int
ret
dec
ror
adc
movs
sub
lds
(bad)
aam
loop
add
ds
fwait
stos
jmp
imul
stos
mov
jl
popa
fsubr
adc
lea
(bad)
cld
stos
popf
push
jmp
sub
adc
xchg
jecxz
cmps
mov
lahf
rcl
pop
pusha
int
xchg
fwait
mov
pop
inc
dec
push
lods
sahf
call
int
and
ficom
cmps
mov
nop
arpl
imul
xor
sbb
sub
mov
iret
pop
sub
sub
call
sbb
lahf
xchg
inc
mov
sti
mov
inc
lods
pop
jo
push
scas
in
jg
aas
jp
push
xchg
(bad)
sub
xchg
repz
outs
or
aad
movs
clc
mov
repnz
(bad)
lahf
cmps
cmps
adc
push
arpl
cs
stos
stos
pop
and
jge
jae
and
rol
xchg
cli
scas
cmp
ins
jns
in
out
xor
in
push
scas
xor
jmp
mov
shl
mov
xchg
outs
or
fdivr
(bad)
jp
ja
leave
mov
xchg
in
jg
xor
fdivr
sub
sub
pop
push
cld
test
(bad)
stc
stos
pop
adc
jg
mov
adc
(bad)
add
mov
daa
mov
das
outs
ins
out
mov
loope
(bad)
add
or
xor
outs
out
cmp
test
out
mov
add
xchg
pop
adc
shl
and
push
rol
mov
and
and
dec
test
dec
out
mov
(bad)
fidivr
mov
mov
add
(bad)
iret
lds
out
mov
mov
or
stc
pop
mov
aad
pop
outs
jae
dec
stos
enter
stos
xor
mov
mov
xchg
test
jmp
inc
stos
popf
sti
hlt
sub
mov
addr16
push
jg
ss
aas
push
or
das
jnp
mov
nop
fwait
sub
inc
sbb
or
pop
push
mov
outs
loop
popf
call
(bad)
mov
lds
stos
lahf
arpl
lea
pop
cmps
scas
cmps
or
xor
ins
adc
cmps
lods
xchg
cs
jmp
daa
scas
adc
xor
retf
lea
popa
das
test
xor
out
mov
pop
mov
mov
dec
xchg
lahf
xchg
iret
mov
pop
jmp
call
push
or
ds
sbb
gs
add
mov
xchg
mov
ret
xchg
inc
aad
fwait
cwde
jae
fimul
out
mov
ret
(bad)
repnz
loop
fwait
dec
mov
outs
cmp
xor
adc
ins
jb
lods
pusha
sub
jmp
push
sbb
xchg
ror
lahf
addr16
cmp
adc
jp
daa
lahf
sub
mov
(bad)
push
mov
out
push
outs
push
pop
(bad)
mov
dec
mov
jne
jno
fwait
cmps
fucomip
aas
xchg
adc
and
lds
call
sub
xchg
cs
cmps
dec
test
pushf
(bad)
and
out
scas
cs
and
adc
push
mov
xchg
imul
push
dec
cmps
sub
sub
cs
pop
ds
ss
(bad)
ja
cli
imul
jge
hlt
jmp
push
xor
mov
adc
sahf
dec
push
shl
cmps
mov
inc
cmp
outs
(bad)
pop
(bad)
scas
int3
xchg
cmps
mov
loop
sub
mov
push
movs
inc
sbb
mov
sbb
mov
xchg
mov
js
imul
sbb
(bad)
mov
mov
jo
jecxz
push
int
in
imul
cmp
cs
das
int3
sbb
sbb
push
mov
push
sub
fs
dec
and
sub
inc
cmp
stos
loop
stos
sub
sub
je
xor
mov
jnp
pop
push
sbb
scas
and
daa
aaa
pop
aas
or
cli
inc
pop
sub
mov
inc
pop
xor
mov
popf
sub
mov
cdq
sahf
aad
fisubr
pop
test
push
mov
add
retf
neg
jmp
mov
mov
xor
dec
xor
mov
lods
sbb
mov
data16
xchg
pop
fst
push
push
mov
das
jmp
jmp
push
xor
in
bound
(bad)
outs
mov
or
addr16
mov
cmp
test
pop
mov
clc
and
xor
cmps
jp
es
pop
adc
mov
movs
lods
push
outs
jg
hlt
mov
jne
repnz
xor
sub
mov
xor
pop
mov
pusha
jmp
adc
popa
fsubrp
inc
imul
(bad)
leave
(bad)
retf
pop
mov
ret
sub
es
ret
mov
inc
pop
test
sub
loop
ja
and
iret
mov
push
(bad)
jne
cld
or
inc
cmp
sub
(bad)
imul
pop
das
cmps
mov
(bad)
fidivr
popf
add
das
lahf
xor
inc
ss
pop
mov
ret
sahf
out
push
push
inc
das
aas
ret
rol
stos
xchg
push
xlat
and
mov
(bad)
mov
inc
arpl
mov
push
mov
out
aaa
cmp
sub
popf
mov
ret
dec
jae
pusha
pop
daa
outs
jne
stc
add
movs
sbb
stc
out
cmp
and
aas
(bad)
cs
imul
lahf
je
adc
ret
rcr
xor
ins
mov
cmps
cmps
adc
push
aas
jae
inc
mov
imul
dec
scas
dec
cmp
and
out
dec
sbb
daa
pop
fiadd
out
dec
dec
shl
sbb
mov
cdq
mov
jns
rcr
cmp
scas
fiadd
or
mov
push
(bad)
aaa
or
mov
enter
jno
outs
aaa
movs
push
mov
adc
leave
aaa
sub
in
hlt
sub
sti
and
sahf
in
adc
or
pop
and
xchg
sub
pop
or
mov
ret
push
add
dec
lahf
jmp
rcr
xor
jge
(bad)
lods
loop
pop
aaa
scas
(bad)
cmc
pusha
adc
(bad)
mov
xor
inc
out
jne
mov
stc
imul
mov
adc
aas
and
mov
adc
sub
push
in
cmp
inc
xchg
cmps
sti
outs
(bad)
push
imul
outs
outs
je
out
dec
jae
stc
dec
(bad)
les
dec
ja
jle
push
outs
imul
sub
xchg
lods
or
ficomp
shr
sbb
or
sub
dec
rol
scas
jae
(bad)
sti
inc
les
or
js
inc
sbb
pcmpgtb
aas
cmp
pushf
pop
leave
xchg
lods
xchg
jo
pop
pop
cmps
stos
(bad)
sub
jmp
sbb
pop
jmp
adc
push
ret
(bad)
lea
dec
adc
mov
inc
push
jg
(bad)
jmp
mov
pop
cmps
dec
ins
pop
cmp
mov
std
adc
jmp
mov
pusha
fidivr
dec
mov
push
xchg
es
lds
es
imul
loop
and
sbb
stos
mov
sub
mov
sar
jp
out
lods
pop
not
scas
cmp
mov
push
sbb
fidivr
push
xchg
fwait
push
(bad)
xor
jecxz
pop
dec
mov
xor
(bad)
das
jg
pop
jl
pop
dec
test
fisubr
lahf
(bad)
lds
mov
daa
pop
loop
sti
or
inc
(bad)
adc
in
push
fs
out
scas
push
xchg
xor
arpl
pusha
retf
dec
movs
cmps
(bad)
in
inc
mov
jns
imul
addr16
add
(bad)
stos
je
xor
push
daa
or
bsr
ror
icebp
movs
pop
(bad)
pusha
cmp
pop
cmp
inc
or
out
pushf
jge
in
sahf
mov
daa
inc
lea
mov
push
int
call
pop
dec
pop
daa
(bad)
loop
imul
push
cmp
aas
or
jae
mov
cli
hlt
leave
aaa
ja
jecxz
mov
data16
adc
and
lds
sahf
xor
out
das
(bad)
dec
outs
jp
add
jge
out
outs
div
mov
push
inc
movs
add
cmp
stos
cmc
mov
out
adc
lods
sub
sbb
mov
outs
cli
js
push
pop
pop
outs
mov
(bad)
fstp
out
cmps
clc
pop
mov
movs
mov
pop
fs
dec
(bad)
lods
and
mov
push
adc
jl
xchg
aaa
movs
or
not
add
outs
jne
mov
jb
xchg
outs
cwde
call
arpl
or
push
adc
lods
arpl
mov
or
and
in
mov
adc
(bad)
jb
dec
mov
or
scas
aas
sub
mov
pop
movups
test
pop
psadbw
sub
(bad)
cmc
in
outs
dec
mov
xor
sub
push
xor
xchg
fst
stos
gs
jge
aas
xchg
out
xchg
(bad)
lahf
mov
outs
dec
ss
sub
inc
adc
fwait
xchg
aad
sub
pop
pop
mov
or
mov
push
mov
and
es
mov
test
addr16
popa
jno
ja
jmp
jg
scas
mov
test
mov
scas
xchg
stc
daa
sub
into
mov
adc
push
add
sbb
or
pop
pop
mov
push
xlat
mov
cmp
stos
and
mov
pop
mov
ds
ja
and
aaa
dec
mov
scas
(bad)
addr16
cwde
icebp
adc
mov
inc
popf
cmps
inc
or
ror
add
das
(bad)
(bad)
jge
sub
imul
iret
je
movs
out
out
add
fimul
xor
(bad)
int
mov
jo
mov
pop
mov
adc
pop
addr16
sahf
icebp
int
repz
mov
xchg
(bad)
push
sbb
int3
mov
mov
adc
stos
mov
sbb
or
call
push
dec
mov
mov
pop
add
add
mov
xor
jo
rcr
push
mov
push
mov
dec
(bad)
ficomp
mov
add
mov
pusha
fld
lods
jl
mov
cmps
aas
cmp
ss
jns
mov
addps
or
push
mov
shl
ins
aas
xlat
jo
adc
push
mov
(bad)
mov
dec
sub
aaa
idiv
dec
pushf
inc
sub
loope
cmps
inc
call
stos
je
imul
or
aas
fistp
push
add
pop
fisubr
dec
fld
btr
retf
adc
or
ja
cwde
imul
jb
daa
test
rcr
cmps
pop
call
mov
fsubp
in
fst
or
imul
sbb
test
pop
das
cs
out
daa
xchg
jp
stos
test
into
div
dec
lods
sahf
int
imul
cs
iret
adc
pop
ds
movs
xchg
in
stos
jp
dec
outs
ins
mov
push
std
inc
stos
addr16
aam
lahf
or
(bad)
mov
or
mov
push
xchg
dec
dec
push
mov
lahf
outs
lea
xchg
mov
not
loop
mov
cmps
pop
add
ja
popa
jne
pop
or
(bad)
mov
aas
push
cmp
scas
fwait
scas
jnp
fdivr
dec
or
sub
jecxz
xchg
aad
lods
xor
mov
cmps
or
outs
sub
sahf
xchg
dec
mov
mov
and
cmp
lahf
mov
mov
dec
stc
lahf
js
mov
mov
cmps
mov
aas
mov
outs
arpl
sub
jnp
jbe
and
imul
mov
sbb
movs
loope
pop
jmp
inc
(bad)
pop
xchg
add
into
or
inc
mov
ret
dec
test
(bad)
mov
repnz
mov
mov
add
shl
xor
cmp
sub
xor
and
test
mov
mov
mov
shr
adc
push
stos
fld
dec
and
cmp
or
push
ds
mov
xchg
popa
pop
pop
jmp
add
sub
out
cli
aaa
cmp
mov
jae
jg
call
outs
(bad)
cli
dec
outs
daa
clc
mov
retf
cs
xchg
fnsave
or
ins
fsubp
repnz
push
mov
gs
pop
cwde
shl
sub
fstp
xchg
xor
nop
(bad)
retf
ins
stos
inc
mov
xchg
sbb
js
xchg
ins
cld
(bad)
out
into
inc
sbb
shl
setb
(bad)
ret
aam
jnp
movs
test
pop
or
or
mov
scas
cdq
cmp
jl
fiadd
xor
pop
cmp
fdiv
xchg
or
add
mov
pop
mov
lahf
jg
or
cld
add
imul
jmp
inc
fwait
mov
cmps
shr
adc
in
jmp
mov
pushf
mov
mov
das
sbb
adc
and
sub
and
stos
mov
ror
dec
push
clc
mov
out
jle
test
sbb
stos
imul
jne
rcl
arpl
gs
and
mov
mov
gs
adc
xor
mov
sbb
dec
mov
(bad)
push
fstp
pop
sbb
das
mov
mov
scas
pop
jbe
and
mov
(bad)
sbb
loop
cmp
mov
jle
nop
fiadd
mov
(bad)
sbb
loop
pop
pop
sub
pop
pop
out
cmps
call
(bad)
out
push
push
mov
repnz
pushf
cmp
das
lds
mov
jbe
and
ret
mov
fwait
stos
and
maxps
movs
jnp
jae
xsha256
cmps
rol
adc
sbb
jnp
mov
jae
pop
push
mov
addr16
popa
adc
mov
outs
loop
test
data16
imul
cmp
dec
push
(bad)
scas
sub
inc
stc
cmp
cmp
mov
or
test
xchg
mov
mov
mov
mov
cmp
lods
ins
lea
jb
not
rcr
out
push
(bad)
clc
adc
fs
in
lock
cmp
ins
mov
jecxz
clc
nop
pop
mov
add
ror
outs
xchg
imul
mov
mov
mov
out
jns
jle
fdivr
rol
test
and
rcl
out
sahf
xor
leave
cs
push
mov
outs
aam
fwait
stos
inc
fiadd
fistp
add
mov
sahf
and
ret
xor
jg
mov
push
aaa
stos
fimul
sub
lahf
sub
jp
lahf
adc
outs
loop
jne
ins
xor
sub
das
xchg
ja
loop
das
xchg
cli
mov
add
shr
mov
fmul
movsx
(bad)
lods
ds
jle
test
jecxz
out
ja
addr16
add
mov
out
stos
(bad)
sbb
das
das
test
adc
and
ja
sbb
iret
fimul
ja
lea
jnp
aas
mov
inc
jno
or
pop
mov
out
ss
imul
push
stos
mov
and
pop
add
inc
fiadd
mov
dec
or
popf
sub
test
enter
adc
imul
lods
inc
(bad)
jg
mov
ja
jae
mov
jae
mov
lea
cmc
aas
cli
je
fadd
push
inc
push
jo
xor
mov
or
aas
ins
mov
sbb
ins
pop
cmp
mov
mov
mov
xchg
(bad)
mov
mov
add
outs
pop
sbb
adc
aas
push
rcr
stos
ins
aas
icebp
addr16
adc
mov
addr16
sub
fisubr
pop
test
add
movs
fbld
pusha
adc
jle
fiadd
imul
jg
clc
jg
call
mov
scas
aam
shl
jl
call
cmp
daa
and
div
adc
icebp
fimul
daa
jb
sahf
cmp
adc
push
gs
dec
repz
sub
fwait
dec
sub
jg
shld
outs
loop
dec
ins
pop
movs
xor
mov
push
aaa
test
ja
das
(bad)
and
scas
test
pop
test
popf
ja
xchg
pop
mov
adc
stos
cmps
jae
mov
xchg
and
std
scas
cmps
mov
inc
push
xlat
ins
cmp
sbb
dec
mov
xchg
push
fcmovb
les
js
rcr
out
mov
fs
jo
sub
xchg
xchg
jg
sahf
cs
movs
xchg
mov
and
(bad)
icebp
xor
add
fdivrp
jns
adc
movs
mov
scas
cmps
data16
into
adc
cwde
shl
mov
mov
lahf
push
das
loop
mov
xlat
mov
sub
addr16
pop
stos
dec
das
pop
cmp
loop
xchg
lea
scas
pop
mov
shr
sub
aas
test
xchg
movs
sbb
push
inc
dec
js
cmp
iret
inc
push
jmp
lds
test
and
mov
cmp
clc
xor
push
pusha
mov
pop
dec
shr
pop
pusha
xchg
daa
inc
adc
push
ss
addr16
mov
int3
sub
ja
mov
mov
sub
cmp
imul
adc
popa
fs
fwait
push
ret
loope
pop
or
retf
outs
cmp
push
sub
aad
lods
out
or
mov
mov
mov
xchg
cmp
sub
jg
int
lods
stos
mov
push
inc
imul
xor
out
sub
cmp
adc
daa
inc
xchg
xchg
in
add
sub
push
in
mov
dec
cwde
inc
loop
lock
cmps
mov
mov
imul
and
add
int
push
pop
jg
lahf
mov
punpcklbw
sub
jl
xor
aas
aas
fild
test
outs
lea
ins
cld
cmp
pop
pop
add
or
inc
push
push
(bad)
outs
sbb
(bad)
cmps
pop
pop
jns
jns
mov
pop
mov
push
mov
or
stos
mov
mov
imul
cmp
fidivr
inc
cs
inc
jg
pop
and
ss
fst
sbb
mov
inc
mov
ret
xchg
rcr
pushf
pushf
jmp
and
add
cmp
add
hlt
adc
xor
sub
or
pop
xchg
dec
stos
ror
or
mov
(bad)
jns
scas
outs
adc
jg
sbb
loop
inc
fbld
cmp
jo
jne
mov
adc
push
aad
fwait
mov
dec
xchg
es
jne
aas
ja
or
xor
fidiv
bswap
ror
enter
inc
jno
pop
xchg
(bad)
pop
cmp
mov
repnz
mov
push
je
sub
sbb
aaa
out
mov
or
stos
retf
imul
cld
jle
test
jae
arpl
jne
inc
adc
mov
dec
xchg
dec
aas
and
sub
pop
pop
add
imul
aam
test
idiv
or
xor
rol
fiadd
xchg
stos
pop
jmp
out
jbe
fwait
xchg
ret
pop
cmp
lods
ins
jp
pop
inc
(bad)
scas
inc
in
sub
out
arpl
(bad)
lea
movs
imul
ja
gs
mul
xor
xchg
jecxz
push
div
mov
or
jmp
je
and
push
mov
jnp
push
fidiv
out
outs
lahf
push
mov
mov
mov
mov
stos
movs
(bad)
sub
sahf
mov
sub
push
outs
scas
ins
sub
pop
ins
aas
pop
pop
add
dec
je
(bad)
xor
jne
fstp
stos
jg
addr16
or
xlat
loopne
pop
dec
jecxz
daa
retf
jmp
movs
mov
scas
popa
push
in
mov
dec
pop
stc
pop
outs
mov
lods
loop
aad
inc
xchg
in
cmp
or
lea
xchg
enter
ins
mov
jg
inc
xchg
mov
aas
movs
dec
imul
mov
mov
es
leave
shl
movs
loop
dec
push
loop
jl
sub
(bad)
and
out
data16
jns
add
add
pop
and
fld
pusha
(bad)
lahf
sar
or
(bad)
imul
and
retf
jbe
arpl
lahf
test
sbb
jae
push
les
mov
jp
push
mov
cmc
or
fisub
mov
pop
jnp
push
mov
inc
fsubp
sti
dec
daa
cmp
int3
inc
inc
jp
pop
jae
in
fnstenv
stos
lahf
iret
mov
mov
or
into
fs
inc
lea
jb
mov
push
xor
movs
mov
pop
jmp
mov
outs
adc
xchg
ret
add
outs
fistp
dec
and
sahf
push
sub
and
dec
adc
mov
cli
mov
push
mov
ss
stos
(bad)
push
scas
icebp
rcl
mov
int3
outs
jmp
test
pop
jno
rcr
mov
leave
retf
cs
scas
cmps
dec
mov
pcmpgtd
mov
cmp
jecxz
jmp
mov
dec
push
rsqrtps
sbb
outs
retf
add
outs
retf
enter
cmp
sub
ds
fs
and
(bad)
pop
rol
sub
jae
pop
cmps
call
mov
or
push
mov
ds
pop
pusha
scas
imul
retf
fwait
cs
fcomi
outs
mov
popa
stos
cmp
mov
neg
(bad)
dec
(bad)
fldcw
outs
jp
fdiv
cmps
inc
aaa
cli
push
cmp
sbb
or
xor
sbb
mov
fsub
cmps
jbe
pop
lahf
mov
pop
into
push
mov
int
xor
pop
dec
mov
pop
mov
daa
test
(bad)
clc
pop
jg
shl
sub
sbb
mov
dec
repz
mov
popf
js
mov
out
mov
sub
dec
mov
imul
in
daa
into
inc
mov
scas
pusha
lds
cmp
iret
cmp
or
fnstsw
mov
adc
sahf
xor
cmp
inc
je
mov
push
add
outs
inc
idiv
add
lahf
bound
jg
xor
pop
ja
out
loope
lds
pushf
push
mov
jnp
cmp
jecxz
push
inc
ja
cwde
sbb
push
invd
fisttp
aas
add
fadd
clc
movntq
xchg
mov
push
(bad)
mov
lods
ins
add
add
fdiv
test
cs
mov
inc
pop
push
retf
nop
and
sbb
and
push
add
call
retf
dec
ficomp
cmp
mov
movs
leave
mov
cmps
push
arpl
ret
dec
cmc
ds
lods
cli
(bad)
retf
mov
pop
(bad)
sbb
jle
arpl
mov
xchg
or
(bad)
and
test
add
int3
loope
push
fwait
nop
mov
int
daa
adc
aam
mov
mov
push
xor
les
int3
sbb
imul
lock
sbb
inc
jnp
inc
mov
xor
cmp
mov
mov
inc
sbb
mov
fistp
ja
stos
adc
sub
lods
test
jbe
sahf
ins
sbb
ds
sbb
cmp
sub
mul
daa
outs
mov
mov
cmp
add
(bad)
popa
addr16
mov
rsqrtps
sub
addr16
fdivr
repnz
add
pop
scas
cmp
lods
sahf
call
aam
cli
test
nop
in
mov
cmp
scas
dec
inc
mov
dec
in
mov
fsubr
fwait
scas
cli
sub
(bad)
jp
daa
pop
movs
das
ficom
pop
in
ds
in
test
imul
mov
sub
push
fstp
dec
sub
stos
xchg
cmp
sub
scas
ja
int
cmp
hlt
sub
lods
pop
ins
push
outs
lea
fimul
cli
scas
addr16
std
push
push
fdivp
push
inc
push
sub
or
mov
lea
or
add
aad
add
in
fdivr
mov
sbb
xor
rcl
aas
push
sbb
stos
jg
(bad)
lods
sbb
pop
jg
jae
mov
outs
out
push
cld
aas
mov
adc
cmp
xor
or
sbb
push
fwait
sbb
jnp
jbe
adc
jmp
lahf
std
mov
jg
out
dec
loope
div
and
scas
les
jecxz
push
sti
inc
jmp
cmp
jg
sub
jne
jae
and
add
adc
push
mov
iret
cmps
int3
inc
addr16
mov
dec
jge
dec
aam
loop
aas
cmp
test
push
sbb
scas
inc
and
hlt
cmp
stos
sub
imul
push
cs
adc
mov
xor
sub
fs
add
cmp
mov
xchg
icebp
in
arpl
cmps
repz
sub
(bad)
out
repnz
push
jnp
std
outs
mov
outs
mov
cld
push
xchg
push
in
(bad)
lods
push
mov
sti
fld
inc
jno
mov
pop
mov
pop
outs
scas
add
inc
dec
in
lahf
fcmovne
and
adc
dec
rol
ins
mov
mov
jmp
push
in
mov
mov
mov
fisttp
aaa
or
je
mov
add
fisttp
call
mov
int
clc
pop
daa
cmp
sahf
adc
push
imul
cmps
mov
mov
adc
pop
aas
jbe
sbb
pop
test
cmp
ret
mov
fwait
sub
mov
xor
mov
stos
or
cmp
mov
gs
ds
ret
inc
stos
popf
inc
xchg
xchg
dec
imul
pop
fild
sbb
in
cmc
sbb
fnsave
pop
fsubp
pop
stos
jl
mov
mov
and
add
mov
push
imul
sbb
lods
js
xlat
jle
ins
ret
inc
jo
(bad)
sub
mov
outs
xchg
call
xchg
ja
outs
xor
cmc
lods
icebp
add
xchg
jnp
outs
divps
xchg
and
iret
lea
push
add
push
push
cmp
data16
ins
movs
mov
ja
test
xor
sbb
out
cmp
pusha
adc
pop
es
(bad)
repnz
sbb
pop
movs
inc
jnp
xchg
popa
push
mov
ss
sub
xchg
pop
outs
stos
dec
sbb
pusha
scas
pop
mov
(bad)
mov
pop
sub
mov
xchg
or
mov
xchg
xor
sbb
xchg
push
int
shr
fidivr
and
mov
test
cmc
pop
push
out
imul
mov
js
mov
pop
movq
push
outs
nop
xor
and
outs
xor
fild
mov
addr16
test
dec
push
xlat
add
pop
or
pop
test
mov
bound
xor
mov
inc
jecxz
mov
into
mov
add
(bad)
loop
sbb
dec
pusha
fwait
jno
ja
dec
xor
add
fs
adc
mov
jge
cmps
aaa
xor
ins
xchg
stos
cli
inc
push
sub
inc
aam
pop
jecxz
push
mov
push
into
lods
mov
idiv
js
or
pop
addr16
mov
es
pop
(bad)
mov
push
int
xor
push
stos
pop
or
xchg
stos
stos
stc
xor
and
test
sbb
pop
test
ret
inc
(bad)
cmc
bound
mov
rcl
popa
hlt
cmp
cmps
gs
in
push
mov
push
inc
cmp
icebp
retf
push
adc
mov
and
jg
cld
rol
xor
mov
dec
das
shl
shl
mov
(bad)
stos
cmp
popa
push
mov
fiadd
arpl
xchg
outs
sbb
jmp
or
dec
sub
adc
neg
out
dec
mov
aas
leave
(bad)
out
movs
mov
mov
test
add
fmul
jg
xchg
outs
jge
sub
cmp
jno
xor
dec
mov
(bad)
stos
pop
test
comiss
inc
mov
jne
outs
fisub
sub
test
fimul
mov
lods
jp
fcomp
jne
int3
add
xor
add
push
mov
idiv
iret
stos
addr16
adc
ret
pop
or
xchg
mov
mov
and
in
mov
mov
adc
fwait
sub
outs
cmp
std
xchg
mov
loope
scas
mov
movs
dec
mov
mov
push
xchg
imul
test
cmp
dec
inc
iret
cs
cmp
jge
xor
inc
mov
addr16
test
mov
in
sar
mov
dec
cmp
lahf
dec
addr16
xchg
jle
retf
outs
mov
sbb
dec
xor
jg
xor
jg
sub
daa
lds
pop
dec
push
push
and
pop
outs
imul
test
cli
jl
int
cmps
fwait
dec
sub
pop
sub
mov
push
sub
out
cs
scas
push
mov
in
mov
inc
addr16
jbe
imul
mov
mov
cdq
adc
push
arpl
mov
das
dec
mov
psllq
dec
fidivr
fwait
das
movsx
mov
stos
aas
mov
aas
sbb
sbb
cmps
aad
rol
lods
lds
shr
mov
mov
sar
les
outs
stos
sahf
push
int3
mov
lock
jno
jbe
in
mov
ret
adc
add
add
clc
shl
mov
cmps
add
shl
adc
stc
retf
push
adc
inc
movs
mov
cmps
stos
dec
and
mov
in
jnp
cmc
movs
cmp
stos
mov
cmp
test
push
shr
dec
fdivr
mov
mov
cld
jle
lahf
dec
jmp
(bad)
sbb
push
call
cmp
push
scas
jne
xchg
sub
lahf
inc
adc
mov
adc
dec
stos
cmp
data16
jp
leave
and
cmp
pop
fs
shl
sbb
aam
out
mov
dec
stos
lahf
jmp
mov
aam
arpl
sbb
sub
iret
mov
jp
lea
aas
mov
aas
xchg
mov
mov
adc
aaa
mov
cs
cs
or
jno
pop
pop
pop
scas
call
mov
loop
mov
and
mov
xor
mov
hlt
pop
or
sub
push
cmp
arpl
mov
ins
outs
es
movs
mov
mov
pop
mov
das
xchg
push
and
cmp
jbe
retf
ror
lods
pop
(bad)
pop
cmp
adc
dec
push
jae
scas
out
xlat
pusha
push
push
retf
arpl
push
sub
or
lock
mov
pop
dec
ds
sbb
cmp
dec
iret
clc
cmp
cmps
ficom
loop
out
rcr
pusha
inc
or
xor
jge
shr
adc
xchg
mov
outs
out
in
jnp
cmps
mov
jp
jmp
xor
add
addr16
aad
lods
push
inc
hlt
add
addr16
dec
jb
pop
ret
test
mov
hlt
mov
mov
push
jae
inc
mov
mov
push
or
push
loop
inc
int3
in
mov
out
xor
xor
daa
ins
jne
gs
add
dec
movs
jne
aaa
fwait
out
add
mov
aaa
stos
icebp
dec
sub
and
xor
sub
mov
mov
repnz
add
je
adc
out
inc
test
pop
mov
(bad)
fisubr
das
inc
aad
cmp
imul
daa
xchg
cmps
mov
loop
cmp
(bad)
xchg
cwde
mov
mov
xchg
push
xor
sub
mov
pop
mov
stos
push
inc
shr
icebp
lods
mov
inc
clc
ret
pop
std
(bad)
dec
sub
xchg
test
jbe
mov
add
arpl
das
cmps
add
sub
(bad)
imul
add
stos
cli
dec
dec
into
addr16
xchg
dec
pop
outs
out
sub
pop
xchg
pop
arpl
dec
lods
jg
imul
in
inc
aas
aaa
sbb
mov
jl
mov
mov
cmp
shr
cli
fnstsw
mov
xchg
imul
sbb
mov
addr16
imul
push
loop
daa
push
mov
neg
pop
cdq
xor
sahf
sbb
loope
pop
ds
scas
xchg
dec
ret
aas
ret
icebp
cmp
sub
mov
mov
ja
mov
inc
dec
inc
test
or
or
outs
adc
outs
setle
clc
int3
aas
or
rol
imul
lahf
movs
addr16
mov
cmp
lahf
vandnps
movs
test
cli
fs
mov
stos
push
(bad)
movs
and
sbb
inc
sbb
outs
xchg
not
jnp
pop
loop
cmps
cld
push
aas
fimul
jle
outs
mov
mov
mov
out
mov
cmp
jecxz
ret
sbb
mov
jmp
(bad)
xor
outs
aaa
cs
jmp
sub
and
(bad)
pop
mov
dec
sahf
push
sub
mov
jg
neg
dec
test
mov
jo
mov
sar
les
mov
pop
mov
daa
call
adc
jg
shr
lea
jge
js
mov
repnz
sar
xor
inc
dec
lock
cli
aaa
fisub
inc
xchg
popf
adc
sbb
mov
loop
push
pop
sub
sub
cmp
in
dec
lds
mov
mov
or
mov
or
push
test
test
aas
xchg
xlat
or
jnp
sbb
push
(bad)
xchg
cs
sbb
lea
dec
test
cwde
sbb
mov
(bad)
jae
pop
pop
inc
ja
jae
xchg
(bad)
lock
mov
outs
call
scas
scas
mov
mov
inc
sbb
cmp
xchg
mov
addr16
rol
push
ret
xor
nop
fld
in
dec
(bad)
out
cmc
push
xchg
inc
sub
scas
(bad)
mov
or
cmp
xchg
daa
and
cmps
loope
xchg
push
sub
psubd
aaa
aaa
arpl
pop
sbb
xor
add
aaa
ficomp
and
nop/reserved
sbb
push
sti
rcl
les
mov
jl
stos
jmp
push
ja
lea
inc
mov
cvttps2pi
loop
in
addr16
pop
test
push
mov
in
fisub
ds
daa
xchg
jno
push
mov
in
mov
add
pop
jo
lock
mov
and
mov
xor
adc
inc
scas
add
ins
cmp
lahf
pusha
movs
sbb
mov
call
sub
stos
daa
scas
test
dec
movs
lahf
div
ss
gs
cmc
sub
xchg
shl
mov
pop
sbb
xor
dec
bound
jl
xchg
mov
sbb
add
maxps
popa
inc
jne
fmulp
push
in
mov
cld
out
lahf
das
js
sub
call
cmp
das
mov
cs
out
fld
fistp
stc
add
pop
sbb
jecxz
into
mov
pop
(bad)
xchg
mov
sbb
cmp
imul
mov
movs
std
mov
xchg
in
xchg
aad
cmps
cmps
fcom
test
mov
jl
not
add
cmp
adc
scas
pusha
or
push
pop
and
popa
push
xchg
lea
out
retf
push
scas
imul
jno
adc
test
xchg
outs
into
mov
push
movs
mov
cmps
or
cmp
and
xchg
or
and
out
mov
in
bswap
dec
sub
jae
and
add
addr16
aad
aas
mov
cmp
mov
or
popa
mov
out
pop
sbb
lahf
call
mul
add
jmp
iret
sbb
(bad)
in
jmp
xlat
push
jae
aas
cmps
or
mov
movs
sub
pop
je
xor
scas
retf
or
pop
dec
pop
or
xchg
inc
pop
ficomp
and
mov
push
mov
xor
xchg
adc
(bad)
js
cmp
and
inc
stos
adc
out
out
fwait
stos
(bad)
jno
aad
imul
dec
cmps
addr16
sub
mov
sub
loope
mov
fucomp
movs
pop
and
(bad)
mov
out
test
sub
xchg
stos
xchg
scas
adc
cli
mov
cmp
scas
mov
into
jnp
sti
ror
in
jno
pop
test
imul
lahf
(bad)
out
jo
and
xor
xor
push
stos
rcr
or
test
retf
mov
jbe
pop
lods
mov
or
in
sub
das
mov
sahf
cdq
ss
inc
push
aam
(bad)
sub
mov
push
push
(bad)
(bad)
daa
movs
pushf
pop
xor
shr
repz
sub
lods
add
mov
push
mov
inc
xchg
push
lahf
fwait
push
lea
movs
mov
or
xor
or
xchg
shr
inc
aas
out
int
add
jne
cmps
or
pop
lods
mov
stos
add
aas
(bad)
pop
test
shr
cmp
push
icebp
sub
jns
fucomip
pop
add
int3
jnp
fisub
nop
aas
pop
not
imul
jg
dec
aas
in
mov
xchg
in
aas
mov
push
popa
sub
cmps
call
mov
sub
pop
mov
dec
test
dec
jnp
stos
xor
or
daa
adc
inc
xor
or
dec
or
dec
mov
mov
sub
adc
test
nop
fs
inc
jb
mov
cs
xchg
addr16
cmps
pop
in
sub
inc
fimul
js
push
lea
mov
xchg
outs
mov
aam
pop
test
in
loop
inc
jo
xchg
xor
cmp
or
mov
add
jge
sub
mov
jo
loop
mov
cmp
push
mov
dec
push
inc
(bad)
jnp
rcl
jg
push
mov
adc
mov
push
push
outs
rcr
imul
(bad)
out
and
daa
outs
ret
mov
push
xchg
movs
sbb
aaa
je
cmps
ret
ret
pop
push
in
test
xor
pop
mov
jp
fisubr
pop
test
dec
xor
cmc
(bad)
xlat
test
mov
pop
adc
movs
lods
sti
outs
push
mov
mov
lahf
cmps
imul
and
aad
add
or
xchg
sbb
imul
push
inc
addr16
xchg
cmps
out
sub
pop
mov
mov
clc
repnz
test
sbb
push
(bad)
xchg
sbb
(bad)
rcl
outs
adc
gs
pop
out
lea
pop
push
cs
clc
inc
push
cli
xchg
setl
inc
adc
(bad)
in
lea
dec
cmps
ret
sub
out
cld
cmp
inc
pop
mov
mov
idiv
js
xor
jecxz
ret
xor
inc
cs
xor
jg
(bad)
dec
imul
movsx
(bad)
mov
(bad)
mov
inc
movs
push
jb
push
mov
add
popf
or
retf
lds
arpl
std
sub
xlat
pop
fidiv
imul
dec
sbb
imul
cmp
aas
jo
jo
arpl
mov
test
cmp
iret
aam
lods
les
sub
and
scas
out
das
jns
(bad)
retf
mov
outs
call
loop
mov
mov
inc
mov
pop
jecxz
dec
mov
and
arpl
fnstsw
mov
adc
movs
add
test
sbb
push
xlat
pop
push
pop
inc
rdpmc
jbe
xor
imul
sahf
jle
(bad)
adc
adc
addr16
ins
ror
pop
inc
mov
adc
sar
sbb
mov
cs
mov
outs
in
xor
test
retf
and
(bad)
outs
mov
fldcw
sbb
push
aaa
jnp
lahf
inc
rdpmc
jmp
imul
jmp
(bad)
mov
jecxz
cmps
shr
dec
arpl
lahf
addr16
jg
or
stos
xchg
mov
dec
mov
arpl
sub
fcomp
sub
cmp
xchg
test
lahf
call
movs
idiv
cmp
jmp
in
sub
repz
dec
pop
outs
fidiv
sub
sub
lods
nop
mov
je
es
mov
ret
sbb
push
adc
arpl
mov
mov
loop
lea
das
(bad)
lods
aas
pop
fsubr
iret
jmp
mov
pop
mov
or
test
xor
or
pop
sub
cmps
movs
pop
mov
mul
cmps
pop
enter
jg
push
(bad)
mov
fnstcw
repnz
retf
sbb
shr
aas
xlat
dec
xchg
dec
pop
ins
pop
jne
aas
icebp
jp
scas
ficom
adc
fsubp
mov
jns
outs
movd
mov
sub
pop
cmc
mov
leave
and
test
mov
in
and
outs
in
mov
mov
frstor
inc
arpl
bound
outs
outs
mov
dec
sbb
data16
mov
or
inc
iret
pusha
int
ficom
cld
sbb
sbb
cmp
shr
push
ja
sub
mov
or
inc
ja
pusha
sbb
and
repz
pop
leave
scas
mov
inc
ja
mov
push
test
jae
lea
jg
cs
cmps
pushf
das
pop
push
cmps
adc
or
pop
push
daa
fidiv
jne
mov
xor
stos
pop
add
icebp
ja
idiv
mov
mov
lds
punpckhwd
loopne
jmp
lahf
sub
push
push
sub
inc
fwait
or
xchg
or
push
xchg
mov
sub
jb
mov
cmp
jg
sbb
mov
clc
xor
mov
aad
cmp
adc
cmps
outs
movs
xlat
inc
aaa
das
pop
pusha
out
imul
push
and
dec
cmp
sub
adc
popa
ror
pop
add
mov
jne
adc
icebp
or
rcr
test
jecxz
xchg
adc
bound
push
arpl
retf
push
addr16
stos
shl
outs
ins
mov
jge
sbb
fnsave
pop
lahf
test
xchg
pop
pinsrw
loop
xchg
xchg
test
dec
add
call
mov
mov
call
inc
into
dec
div
in
ds
mov
mov
cmps
push
sahf
int
inc
push
ret
test
es
jae
jle
push
int3
fidiv
pop
xchg
add
mov
mov
pop
inc
jmp
out
scas
das
mov
lahf
(bad)
cmp
aam
mov
idiv
lahf
fild
and
push
mov
fcmove
arpl
outs
test
dec
and
pop
retf
shl
or
movs
jmp
scas
(bad)
adc
dec
jmp
adc
popa
jg
loop
cmp
xchg
cmps
xchg
aam
xchg
push
and
sahf
les
imul
jae
inc
or
push
outs
aaa
sbb
sbb
out
ffreep
(bad)
in
data16
cli
push
arpl
dec
pop
fiadd
xchg
outs
cmps
ds
aaa
or
xchg
jle
ins
xchg
(bad)
pop
xlat
push
stos
sub
xor
daa
add
push
test
aaa
cmp
and
pop
in
pop
out
mov
scas
mov
sbb
jg
add
jae
in
das
je
loop
movsx
mov
stos
(bad)
aas
mov
scas
fstp
pop
cwde
jne
dec
mov
das
or
test
inc
lea
mov
retf
sbb
ret
pop
jg
xor
arpl
cmps
mov
(bad)
pop
mov
push
adc
pop
mov
sbb
sub
sahf
or
sbb
cmp
pushf
fstp
test
mov
mov
mov
inc
sti
psubb
fdiv
mov
inc
pop
sti
ret
ret
(bad)
jae
adc
stc
cmp
dec
mov
cmp
scas
cs
dec
mov
pop
mov
mov
pop
test
xor
dec
fwait
out
fsubr
add
addr16
xor
daa
cmc
jecxz
mov
int
popf
sti
daa
addr16
mov
scas
fisttp
cmps
sub
mul
pop
add
dec
push
movs
clc
jno
mov
sub
mov
mov
push
jo
xor
push
imul
xchg
nop
ret
xor
lods
retf
int
scas
cmps
inc
lea
cmp
sbb
and
jae
ja
mov
add
hlt
data16
(bad)
arpl
pop
lahf
or
mov
dec
sub
daa
xchg
sub
jp
sub
jbe
push
dec
pop
je
push
test
movs
(bad)
(bad)
mov
(bad)
(bad)
cs
mov
lahf
fimul
cmp
inc
push
test
into
adc
pop
sub
imul
shl
imul
retf
sbb
mov
scas
cmps
pop
clc
xchg
xlat
jg
cmp
dec
test
into
(bad)
sub
movs
dec
sbb
outs
int
pop
jns
jle
test
fwait
test
jp
loop
mov
jne
xchg
sbb
mov
cmp
aam
aaa
mov
cmp
daa
sbb
popf
fwait
push
cmps
jmp
dec
scas
sub
cmp
dec
scas
imul
cmps
daa
mov
sub
scas
xchg
cdq
xor
imul
add
stos
(bad)
mov
cmp
test
int3
dec
jp
arpl
ins
jo
icebp
jmp
dec
daa
daa
cli
mov
jmp
(bad)
jg
(bad)
sti
lahf
inc
xor
outs
mov
cmps
das
xchg
mov
jge
mul
shl
xchg
dec
cmps
shl
add
mov
js
inc
jg
inc
das
lahf
inc
stc
pop
call
fidivr
and
loop
ficom
loope
mov
pop
pop
fldenv
sub
mov
or
xor
ja
fidivr
dec
fild
or
jg
fidiv
and
ret
dec
imul
aas
mov
jg
lds
and
lahf
adc
mov
cmp
pop
pop
ret
push
mov
movs
sbb
nop
jmp
push
rol
or
mov
addr16
lahf
fld
in
leave
inc
dec
jo
das
into
mov
adc
outs
imul
fisub
mov
sub
lods
pusha
mov
push
jmp
cmp
fidivr
cmps
mov
push
push
enter
test
cs
add
(bad)
mov
(bad)
xchg
cmp
adc
not
fimul
stc
add
mov
cwde
pop
mov
push
dec
mov
sub
mov
pop
push
fsub
(bad)
stos
cmp
add
icebp
xor
inc
push
xchg
add
(bad)
les
xchg
hlt
stos
inc
jo
sub
jb
push
mov
movs
xor
inc
inc
imul
xchg
push
sub
xor
adc
andnps
adc
cmp
pop
dec
(bad)
(bad)
out
dec
aam
das
cmps
test
arpl
xchg
mov
xor
cmps
enter
pop
pusha
mov
add
xchg
mov
call
repnz
ins
(bad)
push
mov
xchg
cmps
adc
push
stos
xchg
mov
push
out
cld
cmps
ja
dec
xor
ret
in
dec
push
mov
xchg
mov
mov
dec
(bad)
mov
pop
fs
clc
stos
(bad)
(bad)
jns
aaa
(bad)
mov
(bad)
or
jg
cmp
fninit
sub
push
sub
jmp
sub
mov
outs
les
sbb
addr16
mov
push
add
cmps
mov
sub
and
outs
cli
adc
imul
lea
aam
sahf
push
iret
and
shl
mov
sub
fisubr
nop
xor
(bad)
shr
mov
lahf
fidiv
pop
and
xchg
test
sub
dec
pop
xlat
dec
jnp
jp
lods
mov
ret
or
pop
mov
cmp
xchg
pop
pop
xchg
mov
pusha
dec
jge
call
cmp
outs
dec
data16
dec
dec
adc
jns
mov
test
mov
fdivr
jg
add
out
mov
dec
fisubr
retf
outs
js
add
pop
push
jo
pop
pop
push
mov
cs
xchg
sub
aaa
jo
fwait
dec
shl
add
repnz
mov
push
adc
aaa
lahf
mov
inc
push
aas
or
daa
ins
sti
inc
push
in
mov
(bad)
sub
push
xor
cmp
cmp
dec
sti
das
into
jbe
pop
icebp
mov
retf
data16
pop
add
and
ins
lods
inc
pop
(bad)
retf
scas
dec
stos
mov
movs
mov
jnp
int3
retf
outs
mov
aas
mov
add
push
mov
imul
dec
pop
mov
imul
lahf
pop
imul
adc
xor
ins
push
sub
sub
and
popf
lds
not
mov
mov
cs
inc
adc
cmps
cmps
ror
adc
mov
cmps
imul
adc
retf
outs
into
mov
fmul
jg
aas
dec
jg
push
push
fidiv
jp
pop
jno
cli
mov
test
mov
aaa
and
sub
retf
xor
inc
outs
adc
mov
test
(bad)
movs
out
adc
ds
add
add
test
push
or
jg
iret
xchg
and
dec
jg
push
in
mov
movs
adc
dec
pusha
inc
add
cli
pop
aad
icebp
push
xchg
mov
lahf
sti
adc
adc
mov
sub
test
jnp
ins
push
test
daa
mov
add
dec
pop
push
(bad)
mov
mul
push
test
(bad)
stos
cmps
mov
cmp
inc
shr
scas
aad
imul
stos
stos
adc
gs
jmp
cld
cmps
jo
pop
dec
int3
jmp
xchg
rep
xchg
pop
mov
mov
mov
lods
outs
mov
shl
lods
sbb
xor
add
xchg
mov
inc
cld
push
(bad)
jae
inc
adc
dec
xor
das
adc
push
(bad)
and
loop
stos
cmps
push
cld
mov
std
sub
das
push
das
jbe
xchg
mov
dec
jl
std
mov
and
mov
imul
cmp
inc
cmc
sar
cmps
scas
jecxz
adc
sub
inc
dec
push
mov
hlt
mov
pop
mul
sbb
dec
mov
pop
imul
or
mov
icebp
mov
lods
xchg
or
lea
movs
or
jp
stos
scas
jmp
outs
sub
mov
out
jb
ins
out
mov
or
or
nop
sbb
(bad)
push
xchg
fiadd
pop
(bad)
mov
mov
aaa
adc
or
out
mov
and
adc
stos
cs
ins
gs
inc
fdivrp
push
jl
(bad)
pop
push
in
xor
and
pop
das
addr16
sub
cmp
pop
divps
sub
cmp
repnz
sub
loop
or
xchg
push
pushf
ja
mov
mov
aad
movs
jb
jge
mov
imul
jge
sbb
lods
dec
cmps
mov
sbb
mov
mov
arpl
(bad)
adc
or
xchg
pop
stos
out
pop
push
aam
aas
cld
outs
(bad)
sahf
cmp
cmp
cmp
outs
and
test
pop
jg
xor
jecxz
shl
movs
jae
data16
xlat
jmp
scas
adc
mov
arpl
les
stos
popa
cmps
jmp
aad
xchg
adc
lea
push
mov
mov
sbb
mov
dec
and
pop
cwde
cmp
jmp
out
stc
scas
inc
push
ds
ror
aas
dec
cmps
mov
pop
lea
inc
movs
push
loope
loop
shr
stos
mov
xchg
add
xor
cmp
cmp
adc
pushf
cmps
repnz
(bad)
pop
pop
mov
cmps
and
aas
ficom
jmp
outs
sub
cmp
je
jne
outs
cmp
pop
jae
lahf
and
jo
cmp
push
shl
lods
(bad)
in
test
scas
jae
mov
add
scas
fwait
cmps
pushf
cli
xor
pop
movs
popa
xor
cmp
dec
mov
ins
cmps
aas
(bad)
outs
sub
nop
and
pop
dec
mov
data16
bswap
ins
test
mov
mov
ret
mov
ficomp
aad
dec
push
mov
or
dec
and
stos
fcom
loopne
push
out
push
xchg
mov
movs
adc
mov
mov
(bad)
shr
daa
add
cwde
xchg
lahf
dec
sar
scas
and
aaa
cmp
arpl
dec
retf
xchg
xchg
imul
hlt
stc
jg
xchg
xchg
aas
arpl
mov
call
fadd
jmp
in
lock
inc
fadd
imul
mov
loop
addr16
mov
loop
loop
pop
cmp
adc
(bad)
sbb
faddp
in
ss
xchg
and
enter
ins
addr16
pusha
or
jnp
retf
aas
out
popa
pop
(bad)
das
pop
xor
daa
jmp
mov
movs
(bad)
sub
cmps
nop
xor
jno
sub
repz
jl
addr16
adc
das
jnp
movs
ins
push
jb
jae
mov
addr16
stos
aad
sub
inc
jmp
ins
fcomp
mov
sbb
jg
xor
xor
neg
imul
movs
mov
out
adc
mov
pop
jecxz
call
addr16
rcl
ret
in
cmp
rcr
mov
push
(bad)
ja
mov
cli
mov
jecxz
test
aas
pop
aaa
xor
adc
dec
mov
movs
das
out
pop
popa
lods
and
ja
jne
sti
mov
(bad)
fadd
test
mov
adc
fisubr
pop
push
mov
mov
pop
bound
outs
mov
outs
daa
ins
fimul
lea
sub
sbb
icebp
lahf
call
ja
sahf
out
lahf
xlat
xchg
push
xchg
push
push
xor
cmp
outs
in
out
sub
rcl
mov
sub
call
mov
add
shl
and
mov
daa
(bad)
xchg
sub
mov
inc
lds
imul
pop
leave
aas
cmps
addr16
mov
sub
push
dec
ret
xchg
xchg
inc
sub
scas
xor
or
(bad)
retf
jnp
or
imul
mov
pop
leave
add
sub
pop
mov
aas
mov
xchg
das
mov
mov
nop
mov
outs
mov
daa
jnp
sbb
sub
in
test
cs
call
add
cmp
ins
push
dec
test
aam
sar
push
xor
cmp
cmps
shl
cs
and
push
outs
idiv
push
mov
out
fimul
cmp
popa
mov
mov
dec
inc
aaa
test
addr16
pop
and
ficom
push
jne
out
js
cmp
adc
div
push
std
xor
fdiv
in
aaa
add
pop
das
jl
inc
in
sahf
or
aam
scas
mov
std
fs
imul
and
jg
outs
push
sbb
mov
pop
pop
imul
cmps
mov
xchg
inc
push
int3
lock
scas
movs
fwait
imul
out
popf
pop
jg
xchg
movs
xchg
or
lock
(bad)
dec
cld
(bad)
xor
push
push
sbb
mov
retf
pop
push
and
(bad)
and
addr16
imul
add
xlat
cmp
sub
addr16
stos
mov
ins
mov
cli
xor
(bad)
aas
mov
xor
(bad)
fdiv
cmps
sbb
lea
mov
push
xchg
cs
and
lods
pop
or
mov
mov
sub
jmp
ds
mov
ja
mov
xchg
add
xor
lahf
push
je
scas
in
daa
loop
pusha
outs
in
mov
out
mov
or
mov
xor
sub
dec
into
cmp
adc
mov
mov
pushf
shl
add
mov
dec
cs
push
add
inc
xchg
inc
cmp
xchg
push
push
adc
mov
(bad)
dec
mov
fnstcw
rol
in
push
or
xor
out
cli
sbb
sbb
popa
add
mov
mov
push
pop
jb
rol
mov
cmps
xor
scas
lods
lock
pop
adc
jo
ror
mov
mov
add
xchg
(bad)
and
jae
or
shl
loope
outs
ror
test
mov
mov
cmp
dec
cmps
cmp
cmps
pop
jns
mov
in
(bad)
cwde
shl
xchg
loope
popa
test
aas
mov
pop
jo
(bad)
mov
ds
sub
daa
or
test
push
inc
inc
ss
and
push
sbb
repnz
jg
add
sahf
or
push
stos
sbb
stos
loop
sub
ror
outs
pop
pop
xor
cs
cmp
cmp
xor
xchg
xor
cli
mov
push
dec
pusha
add
addr16
leave
and
and
mov
das
mul
fcomp
sub
imul
and
push
jmp
call
ins
sub
cmps
pop
add
std
lods
adc
xchg
shr
out
inc
mov
dec
xchg
lahf
jo
outs
div
dec
out
pop
(bad)
pop
push
imul
fwait
movs
push
pop
cmp
xchg
mov
inc
lds
mov
jae
test
push
mov
out
test
pop
cs
(bad)
sbb
imul
push
dec
les
aaa
and
mov
push
test
mov
pop
pop
xchg
xor
stos
add
dec
and
(bad)
cli
stos
aad
sbb
mov
dec
mov
movs
ss
inc
sar
mov
neg
xchg
scas
xor
mov
repnz
cwde
sub
pop
retf
mov
mov
dec
or
test
outs
or
(bad)
xchg
lods
xchg
jno
outs
out
(bad)
jbe
imul
push
shl
ja
cmp
cmp
sub
call
pop
pop
sbb
(bad)
(bad)
outs
lahf
xchg
mov
dec
or
push
push
mov
lds
push
les
jnp
mov
repnz
ret
cli
pop
mov
xchg
(bad)
std
(bad)
cmps
dec
mov
xor
sub
mov
(bad)
mov
scas
pop
stos
xor
cmp
adc
pop
add
lahf
pop
push
lea
sub
cmps
nop
repnz
cwde
mov
pop
xchg
pop
jmp
push
push
inc
mov
jnp
cmp
test
mov
scas
imul
ret
push
aas
scas
cmp
cmps
inc
push
sahf
sub
out
dec
adc
popf
adc
mov
daa
sub
ds
and
aaa
fimul
mov
dec
iret
pop
and
xor
(bad)
repnz
add
out
les
xchg
or
shr
or
pop
mov
or
pusha
or
adc
xlat
dec
add
pop
jae
push
inc
pop
push
movs
aad
sbb
das
aas
mov
imul
mov
mov
mov
push
shl
cmps
lahf
icebp
ret
xchg
scas
mov
ficom
sbb
mov
test
cwd
std
xchg
pop
sbb
add
aaa
sar
daa
xchg
inc
dec
stos
push
out
outs
out
add
xor
int
ret
lods
pop
sub
jecxz
mov
stos
push
push
ja
xor
ror
loop
jle
ret
adc
retf
pop
and
cmp
add
mov
mov
jmp
mov
mov
dec
sbb
(bad)
cmps
push
test
xchg
ja
popf
xor
shl
lahf
push
push
and
scas
xor
ins
pop
inc
lahf
jmp
pop
shr
lods
(bad)
mov
inc
addr16
loop
loope
dec
les
fcmovne
out
cmps
cdq
cmp
fucom
and
dec
mov
xchg
not
lahf
mov
mov
xchg
jns
ja
xor
mov
mov
fldcw
push
adc
dec
cli
pusha
dec
add
imul
imul
cmp
pop
(bad)
ins
fsub
cmps
iret
sbb
xchg
jno
movs
jne
dec
push
lahf
lahf
sbb
inc
jl
les
pop
aaa
sub
jne
in
pop
or
es
in
das
adc
inc
xchg
and
adc
cmp
out
test
shl
movs
mov
cmp
dec
aas
sub
xor
push
popa
sub
fwait
jg
sub
mul
scas
mov
inc
cmps
pop
fisubr
sbb
push
cmp
inc
ucomiss
sbb
and
pushf
iret
mov
addr16
xor
(bad)
mov
nop
push
jo
iret
popf
not
clc
dec
movs
mov
aas
xchg
shr
stos
sbb
lods
fild
imul
(bad)
sbb
cmp
pop
shl
mov
mov
inc
mov
pop
stos
jb
cmp
xor
outs
mov
scas
sar
outs
mov
stos
lds
(bad)
ins
fcomp
push
pop
add
dec
sub
adc
inc
ret
pop
xchg
lea
aas
mov
dec
jp
mov
arpl
jno
ror
xor
rcr
scas
aas
xor
jle
jae
mov
fsubp
xlat
push
jo
pop
pop
outs
cdq
dec
xchg
dec
inc
jp
aas
test
mov
inc
dec
jg
xchg
daa
jmp
(bad)
xchg
mov
xchg
mov
mov
mov
dec
fld
stos
mov
adc
or
mov
and
xor
cwde
jbe
aaa
sub
rol
outs
xchg
mov
ret
xor
mov
sahf
mov
add
sahf
or
jge
lea
out
push
idiv
xorps
push
jl
retf
mov
mov
mov
(bad)
fmul
cmps
inc
and
and
xchg
sbb
ret
push
sahf
fisub
push
xchg
cs
push
stos
ficomp
cmps
daa
clc
jne
mov
dec
jno
dec
mov
mov
dec
imul
mov
jl
imul
in
xcrypt-ctr
cmps
fsubr
sub
outs
dec
mov
aas
ficomp
lahf
int
ud0
fmul
xchg
mov
pop
inc
sub
sbb
pop
sub
mov
(bad)
outs
(bad)
cwde
mov
aas
ret
xchg
mov
(bad)
dec
dec
fcomp
scas
jl
ret
mov
aaa
inc
jbe
xor
lea
stos
jmp
xchg
lds
pop
pop
push
ud0
mov
lea
cmps
lock
scas
ret
pop
mov
or
jle
fdiv
jmp
cmc
ret
xchg
scas
test
adc
fsubp
mov
mov
pop
stos
dec
iret
add
paddq
cmps
push
dec
aas
(bad)
jnp
mov
jno
stos
pushf
in
pop
outs
repz
neg
xor
aaa
hlt
lods
mov
rcl
xor
xchg
or
mov
add
ror
packsswb
daa
in
jne
jnp
and
lds
mov
or
pop
and
cmps
mov
mov
outs
lds
jae
adc
fdivr
sub
aaa
cmps
xor
sub
pop
outs
adc
inc
aaa
add
inc
aad
arpl
cmps
outs
cmc
xor
sub
fisubr
outs
lea
movs
mov
hlt
mov
cs
movs
mov
cwde
and
cmp
cmp
aaa
sbb
inc
shl
jg
sub
popa
push
adc
inc
fsub
cmps
aas
mov
jno
mov
sub
sbb
imul
cmp
ret
test
mov
iret
scas
jge
mov
push
push
fild
shl
jae
(bad)
sub
or
sub
cmp
jb
xor
mov
inc
pop
arpl
xchg
dec
cmp
mov
cli
mov
cmps
mov
aam
fs
mov
push
dec
mov
call
pop
sbb
ret
sbb
cmp
mov
mov
ds
cmp
sar
leave
stc
outs
xchg
lock
cld
or
cmc
pop
outs
pop
xor
push
ret
or
icebp
add
sub
bound
sbb
daa
bnd
fistp
push
dec
jle
push
sbb
inc
push
stos
mov
xchg
imul
mov
addr16
mov
outs
cmps
jmp
fnsave
es
pusha
popf
idiv
dec
stos
xchg
mov
imul
jg
addr16
sahf
lds
je
nop
(bad)
xor
add
xchg
sbb
sub
xor
jg
lea
mov
jo
shr
cmp
pop
mov
add
inc
and
arpl
je
dec
(bad)
mov
cwde
mov
(bad)
dec
jo
pop
call
pushf
add
xor
rol
cmps
mov
xor
das
xchg
mov
mov
stos
(bad)
sti
scas
int3
retf
scas
pusha
nop
shl
in
xchg
cmp
and
movs
push
fld
addr16
test
push
sbb
xchg
icebp
jae
sbb
mov
imul
ss
(bad)
cmp
mov
gs
dec
popf
push
pop
push
cmp
mov
out
xchg
jmp
outs
mov
mov
ss
sahf
cwde
adc
mov
daa
xchg
push
in
sbb
scas
and
rol
outs
mov
(bad)
cmps
sbb
xor
add
add
mov
mov
aaa
fistp
mov
int
mov
mul
mov
les
retf
iret
adc
mov
xor
push
cmps
imul
(bad)
mov
mov
(bad)
out
jle
cmp
pop
fistp
lea
movs
lods
cdq
sub
bsr
adc
adc
imul
arpl
movs
iret
sub
aam
adc
cmps
retf
(bad)
xchg
das
scas
jp
outs
dec
icebp
cmc
mov
es
hlt
inc
movs
or
cmps
add
mov
loop
(bad)
cmp
out
test
fdiv
jg
jp
aaa
fs
cmps
xor
repz
imul
xor
stos
pop
test
outs
cmc
outs
pop
inc
stos
dec
(bad)
mov
shl
cmp
in
xchg
shr
aam
cmp
js
(bad)
je
or
addr16
jg
pop
mov
sub
pop
mov
mov
sbb
popf
pop
jg
enter
out
jmp
out
and
mov
popf
dec
gs
jmp
cmps
fldcw
es
in
mov
dec
cmp
scas
outs
lods
movs
mov
sbb
lea
push
inc
push
push
jmp
lahf
pop
hlt
mov
jnp
dec
xchg
sub
addr16
xor
lods
mov
in
(bad)
jmp
sbb
fild
xchg
out
mov
pop
jle
xchg
pop
aas
cmp
repnz
adc
aas
imul
aas
gs
pop
push
cmps
cmp
xor
fisubr
push
sub
or
das
dec
imul
sub
inc
lds
and
jae
test
and
sub
or
scas
(bad)
mov
push
mov
les
mov
inc
xchg
bnd
scas
call
pop
ficom
outs
pusha
push
test
push
inc
sbb
mov
cdq
pop
int
out
rcl
repnz
imul
mov
cmps
adc
pop
xor
retf
sahf
cld
in
mov
adc
xor
stos
(bad)
cmp
(bad)
out
in
push
cmp
jg
mov
pop
sti
add
mov
fistp
fldz
mov
out
test
les
movntps
and
add
adc
add
jnp
rcl
call
mov
fistp
ret
jle
out
stos
das
push
shl
mov
mov
mov
outs
xor
aam
imul
mov
push
lock
dec
movs
ja
scas
cmps
add
shl
ficom
dec
sbb
mov
shr
out
cmp
cwde
xchg
fidiv
out
sub
cmps
jl
adc
push
mov
gs
punpckhdq
aas
lods
rol
enter
mov
(bad)
shl
xchg
add
pop
add
pop
add
jl
fs
outs
lahf
mov
scas
pop
pop
(bad)
(bad)
out
outs
daa
xchg
xchg
xchg
xor
iret
dec
xchg
sub
jne
add
lock
outs
call
cwde
cmp
jae
mov
addr16
and
das
not
imul
mov
inc
or
mov
add
push
xor
sub
int3
sub
or
pusha
ficom
sbb
dec
mov
cs
jo
sbb
jecxz
pop
xchg
pusha
mov
cs
xchg
mov
gs
out
inc
sbb
repz
frstor
or
xchg
push
outs
cdq
lahf
jl
call
aas
add
sub
ins
cmps
inc
call
add
and
fisub
mov
push
cld
daa
scas
jg
ins
mov
aaa
stos
xchg
mov
out
pusha
mov
fwait
jbe
scas
inc
adc
inc
dec
add
jge
sub
xchg
shl
cwde
push
sti
cli
retf
stc
dec
xlat
sub
and
test
add
mov
mov
xor
pop
int3
cmps
(bad)
jb
or
rcr
sbb
add
daa
mov
stos
stos
xor
out
xchg
ret
lahf
pop
outs
sahf
dec
push
push
jne
xor
dec
mov
scas
xchg
jmp
icebp
call
jo
pop
cmp
cmp
mov
jnp
push
sub
push
idiv
dec
lods
xchg
mov
pop
es
outs
mov
popa
das
das
aaa
jp
imul
arpl
popa
aaa
fcmovnu
(bad)
aam
cli
shr
popa
out
xchg
in
or
das
rcr
out
loopne
in
js
or
mov
push
stos
sahf
fxam
ds
cmp
xor
mov
je
cwde
fimul
pop
mov
icebp
jmp
xor
repz
cwde
sub
lods
ja
push
aas
rcr
ins
push
or
aaa
lahf
xchg
xchg
or
stos
cmps
(bad)
sbb
fimul
push
adc
stos
jb
jl
push
test
sbb
dec
add
addr16
mov
xor
jnp
and
add
lods
and
jo
jl
sbb
add
xor
jmp
sbb
jno
shl
and
mov
hlt
adc
fcom
popf
cmp
aas
mov
daa
ret
jb
xchg
es
jo
mov
shl
mov
test
mov
aas
cmps
push
bound
retf
mov
into
scas
mov
and
adc
jmp
clc
pop
ja
inc
imul
mov
mov
sbb
shl
push
adc
mov
mov
push
mov
sar
lahf
cmp
pop
out
cli
mov
pcmpgtd
in
inc
sub
jg
mov
inc
mov
mov
mov
shl
pop
mov
add
das
sub
xor
cmp
bound
scas
lods
inc
stc
sar
ins
(bad)
cmps
adc
mov
jmp
xchg
int
stos
fsubr
iret
stos
addr16
in
add
(bad)
sub
daa
(bad)
movs
mov
scas
lea
mov
test
mov
in
mov
repz
aaa
addr16
jg
push
(bad)
push
mov
cmp
(bad)
popf
scas
in
outs
iret
fimul
imul
retf
lahf
ret
popa
sbb
lds
mov
les
cmps
lahf
push
test
pop
adc
adc
push
ficom
jbe
xchg
mov
adc
pop
mov
push
push
mov
mov
push
or
aas
mov
sbb
fs
imul
dec
xor
(bad)
aas
cmps
inc
aaa
daa
(bad)
nop
jge
push
sub
(bad)
fidivr
mov
call
cmps
pop
mov
into
(bad)
out
stos
leave
test
jge
movs
arpl
into
jnp
dec
xor
and
fidiv
mov
pop
je
sar
or
stos
sbb
aas
sbb
stos
test
mov
aas
test
imul
(bad)
(bad)
lods
aaa
fs
fucomi
push
test
call
enter
mov
in
jno
and
ud2
into
cmps
hlt
jp
js
jg
ret
(bad)
inc
jmp
test
imul
mul
jge
(bad)
mov
std
dec
daa
xor
sub
lods
mov
mov
jae
fwait
push
jg
pop
dec
mov
mov
mov
xchg
(bad)
shr
pop
ja
lea
push
in
lahf
fs
cmp
pop
mov
gs
xlat
pop
jg
mov
sbb
addr16
cmps
iret
push
sub
imul
test
sub
or
out
ss
das
mov
push
movs
jmp
add
pop
xor
shr
inc
push
jne
out
(bad)
bound
jmp
or
mov
pop
add
cmps
lock
xchg
lods
scas
and
jmp
scas
rol
inc
in
aas
lods
xchg
inc
scas
rcl
call
in
retf
xchg
sub
xchg
sahf
inc
sbb
sar
jno
sub
pop
fimul
dec
adc
dec
cmp
jbe
aaa
mov
mov
pop
push
dec
adc
daa
mov
pusha
cmp
test
xchg
mov
lea
nop
addr16
xor
gs
mov
and
js
jg
jge
push
sub
or
and
inc
daa
pop
xchg
arpl
mov
mov
mov
and
fwait
jmp
cmps
jp
(bad)
jb
xchg
lock
fist
imul
mov
push
scas
adc
pusha
sbb
push
mov
sbb
push
imul
mov
frstor
sub
jno
mul
and
xor
fs
addr16
mov
jle
pop
popf
and
sub
mov
iret
sbb
dec
aad
pop
mov
mov
lods
mov
inc
or
loopne
das
cmps
data16
push
mov
mov
sub
in
ret
xchg
adc
(bad)
pop
xor
xchg
lea
push
jae
jg
aas
adc
sub
out
mov
push
dec
xor
retf
call
pop
ucomiss
in
pop
adc
add
gs
inc
outs
or
cmps
jne
lds
jo
mov
nop
push
cmp
jle
(bad)
pop
pop
ins
and
arpl
enter
sub
dec
add
stc
jmp
cmp
sub
push
imul
neg
in
in
test
inc
push
xcrypt-cbc
cmps
xchg
jo
mov
fistp
sub
shl
imul
(bad)
xchg
xor
sbb
push
scas
mov
(bad)
jmp
fcom
jl
cs
fs
nop
shr
outs
mov
pop
add
rol
sbb
es
push
in
popf
jmp
sbb
push
sahf
ret
(bad)
pop
mul
les
add
dec
stos
mov
sub
sub
add
leave
stos
cmp
(bad)
adc
sub
sub
neg
push
int3
mov
mov
cmp
out
pop
or
mul
scas
mov
mov
inc
cmps
retf
fild
sub
outs
ja
adc
jbe
dec
mov
out
call
jmp
hlt
enter
sbb
(bad)
push
in
test
xchg
fbld
ret
jmp
ins
pushf
aaa
lahf
push
fnsave
cli
sub
sub
sub
aas
cmps
pop
cwde
add
sub
addr16
jae
pop
aaa
mov
mov
fstp
sbb
shr
pshufw
neg
out
jb
(bad)
cmps
sub
in
pop
inc
jp
test
dec
(bad)
fidiv
mov
mov
mov
idiv
retf
movs
fcmovbe
mov
jb
(bad)
(bad)
sahf
and
in
idiv
xchg
or
mov
jno
pop
jmp
addr16
pop
enter
outs
inc
push
sub
sub
sub
movs
adc
fsub
dec
in
sbb
cs
stos
scas
ror
pop
leave
dec
mov
in
(bad)
cmps
mov
inc
fisttp
imul
dec
test
ins
cmp
jns
cmps
mov
sub
jns
mov
mov
mov
nop
pop
fs
pop
gs
jg
push
jbe
ins
sub
push
imul
ret
or
stos
mov
inc
leave
cmp
push
push
jecxz
cmps
cmps
jl
sub
(bad)
cmps
pusha
xchg
das
lahf
adc
mov
(bad)
jno
pop
shr
dec
shl
xchg
sbb
xor
gs
push
aas
cld
lods
pop
fist
jae
call
test
out
dec
push
cmp
outs
adc
pop
mov
and
mov
imul
adc
jno
inc
adc
leave
and
int
cmp
dec
(bad)
sub
aad
sub
and
in
jg
mov
(bad)
(bad)
sbb
imul
xor
adc
fsub
out
push
loope
lea
sahf
aas
xor
dec
cmp
repnz
and
idiv
out
ret
sub
addr16
gs
and
pop
jmp
jnp
add
cmp
fistp
ret
sbb
jg
sub
out
sub
out
jbe
and
outs
movs
adc
adc
or
sbb
adc
mov
add
test
das
int
sub
addr16
inc
retf
pop
repnz
mov
out
sbb
jbe
mov
pop
movs
je
mov
cmc
bound
ds
popf
outs
pop
mov
shr
push
in
std
cmp
mov
shl
xchg
fstp
nop
and
dec
imul
daa
mov
out
push
ins
outs
es
lock
mov
fwait
lds
mov
mov
cmp
sbb
nop
cwde
mov
sub
shr
js
mov
into
mov
frstor
mul
mov
fadd
cmp
fisub
pop
pop
fimul
iret
sub
jne
jmpw
fiadd
xor
(bad)
sub
neg
and
push
fbstp
lods
(bad)
aas
mov
stos
or
cmp
(bad)
sub
pop
sub
jnp
sbb
and
dec
push
in
dec
mov
sbb
xchg
(bad)
pop
dec
jbe
sub
sub
push
stc
aaa
cmps
test
imul
mov
inc
jno
movs
retf
xchg
mov
cmc
(bad)
cmp
sub
addr16
stos
push
sahf
mov
xor
push
xchg
retfw
dec
ret
outs
daa
aad
mov
inc
movs
push
add
sahf
ss
jl
ret
(bad)
xchg
inc
push
cmp
xor
xlat
xchg
test
je
push
lahf
add
repnz
push
popaw
cmp
loope
sub
sub
mov
popa
test
add
sbb
aas
mov
adc
sub
cdq
and
fild
test
movsx
cdq
push
lods
(bad)
in
pop
mov
ror
daa
xor
je
in
aas
call
je
push
outs
xchg
int
in
pop
fimul
cli
aad
(bad)
push
cld
push
scas
stos
clc
inc
jmp
int
call
sub
pop
mov
shl
cmps
sbb
mov
not
daa
cmp
das
retf
idiv
add
mov
daa
mov
inc
jo
fwait
push
sti
cmp
sub
cs
jmp
div
dec
push
aas
stc
(bad)
jb
js
ja
lahf
stos
pop
cmovle
fwait
icebp
in
mov
jmp
into
mov
std
jnp
sbb
pop
lahf
shl
fisub
test
add
xor
iret
xchg
jne
out
xchg
lahf
xchg
dec
mov
and
jae
scas
mov
cli
adc
rol
jnp
jmp
jno
jmp
dec
(bad)
scas
push
imul
mov
cmc
and
sub
out
sub
ins
jecxz
fcmovnb
not
sub
and
push
xchg
(bad)
push
retf
xor
test
mov
and
iret
ja
sub
xor
push
lods
out
add
shl
lods
dec
jno
push
cmp
das
aas
ins
inc
and
addr16
out
mov
ss
mov
mov
jae
jle
xchg
push
or
cmp
jmp
jle
scas
cmp
aas
and
mov
mov
in
inc
xor
dec
mul
inc
imul
mov
cmps
aas
scas
xlat
cmp
and
arpl
mov
sbb
push
out
sub
and
scas
mov
xchg
and
mov
stos
ss
jge
shl
lahf
xchg
push
and
jg
sbb
mov
dec
test
dec
mov
xor
adc
je
sar
push
jbe
xchg
xor
sub
mov
das
xchg
xchg
cmps
cmp
mov
ds
xchg
pop
mov
pop
dec
arpl
lods
rol
xchg
sub
call
stos
jecxz
rcr
hlt
cmps
sbb
movlps
mov
in
or
push
ror
(bad)
ret
icebp
cmps
push
outs
mov
scas
or
mov
lds
stos
retf
scas
mov
jle
xor
xchg
mov
test
ds
test
dec
jmp
rcr
sbb
and
(bad)
out
xchg
mov
sub
sahf
or
push
push
jnp
div
xorps
mov
add
lea
sub
lods
scas
outs
fldcw
add
scas
xor
sub
lahf
scas
aad
or
lahf
mov
push
repnz
les
and
iret
retf
fs
and
arpl
std
lods
cmp
lock
adc
(bad)
and
mov
fcmovu
dec
pop
push
test
movs
(bad)
sbb
cmps
inc
xor
cmp
dec
mov
je
(bad)
cmps
lahf
xor
mov
into
mov
fadd
int
es
(bad)
xchg
(bad)
sbb
pop
adc
out
jmp
fld
mov
xchg
cmps
fwait
out
fstp
push
int3
repnz
repnz
mov
xchg
mov
xchg
arpl
dec
mov
mov
pop
sahf
int3
fldenv
js
mov
mov
cmp
ficomp
call
ret
ins
fidivr
cmp
ds
scas
sub
ss
std
addr16
mov
pop
iret
jmp
pop
jbe
ins
push
pop
xlat
loopne
jecxz
test
aaa
jle
cmp
retf
or
mov
xchg
mov
jnp
cmps
cs
xchg
imul
mov
aam
mov
lock
retf
and
mov
add
(bad)
mov
lahf
push
inc
lea
movs
cmp
popf
xor
retf
and
imul
add
sub
test
fs
push
inc
stos
ror
dec
lods
ret
shl
pop
xor
iret
cmc
push
xor
stos
xchg
inc
add
cmps
cmp
cmp
sbb
and
inc
or
inc
mov
mov
int
jns
(bad)
sbb
icebp
adc
fwait
scas
mov
push
fistp
lods
inc
adc
retf
xor
cmps
xchg
addr16
lock
mul
or
ret
mov
jg
addr16
sub
ja
mov
cs
xchg
xor
xchg
outs
inc
sub
lods
sbb
shr
mov
cmps
imul
inc
ins
dec
test
popa
lahf
xchg
es
fs
xchg
pop
pop
mov
mov
sahf
jg
div
pop
inc
sbb
add
mov
add
add
dec
sub
or
test
shr
imul
bound
ins
nop
jae
pop
data16
jl
aaa
leave
or
loopne
xchg
push
pmaxub
add
repnz
pop
jmp
ins
call
outs
jnp
test
pusha
adc
scas
cmp
xchg
into
out
add
push
fiadd
ins
popf
inc
pop
into
jnp
mov
mov
jge
fs
jg
jae
scas
mov
cmp
xchg
and
adc
repnz
add
int
pusha
dec
inc
mov
(bad)
mov
push
pop
fistp
jb
(bad)
lods
clc
ss
pop
pushf
icebp
aas
retf
stos
(bad)
into
sbb
pop
sub
and
inc
and
pop
inc
leave
mov
mov
pop
test
push
repnz
mov
jle
test
out
rol
retf
into
fwait
daa
loope
dec
stos
test
mov
in
sbb
jl
test
mov
cmp
push
ror
daa
loopne
shl
sub
fsubr
push
into
and
mov
ret
cmps
and
in
loop
xlat
cmc
push
and
xchg
shr
adc
iret
ja
dec
fs
xchg
pop
aad
push
test
rcr
into
lahf
push
inc
xor
jae
aam
xchg
mov
popf
imul
sub
test
js
frstor
outs
jge
add
test
loope
lods
pop
jg
mov
inc
add
push
lahf
mov
out
mov
retf
dec
sub
jmp
push
into
pusha
cli
ret
test
lods
inc
dec
test
(bad)
jg
xchg
mov
loop
cmp
jo
pop
jmp
inc
ins
sub
or
rol
loope
movs
mov
adc
test
jbe
mov
in
jecxz
out
into
movs
(bad)
(bad)
push
lock
xor
mov
cmp
adc
push
movs
mov
inc
pop
xchg
popa
push
into
nop
sub
(bad)
cmp
jb
push
scas
daa
jno
mov
stos
lods
arpl
fs
cs
into
xchg
jmp
nop
sbb
sub
sar
inc
aad
sti
pop
into
adc
mov
and
or
ficom
mov
sbb
cmp
adc
xchg
ror
into
cwde
ffree
fldenv
inc
cmps
and
xchg
pop
sar
xor
pop
ret
cli
fmulp
pushw
xchg
push
mov
int
outs
retf
and
adc
mov
add
scas
or
push
mov
int
mov
sbb
add
rcr
mov
sbb
push
lods
pop
(bad)
dec
mov
dec
dec
inc
and
ins
rcl
mov
and
(bad)
jae
jg
std
pusha
fimul
or
mov
sti
dec
pop
adc
mov
shr
mov
or
in
cmp
cmps
jmp
test
into
push
xor
dec
out
clc
xor
dec
out
mov
cwde
repnz
mov
xchg
pop
xchg
cdq
outs
into
ja
pop
dec
adc
or
stos
sbb
cmp
int3
dec
mov
div
test
jecxz
push
(bad)
mov
test
pop
and
mov
and
push
jp
adc
sbb
sahf
push
mov
test
and
enter
sub
xchg
into
lods
cmp
mov
into
mov
out
push
(bad)
sub
pop
daa
lds
mov
je
push
mov
mov
add
into
aad
pop
pop
xchg
sub
xor
sbb
(bad)
(bad)
aaa
or
inc
pop
jbe
push
sbb
into
mov
mov
mov
jp
daa
ja
into
ficomp
jno
fbstp
jne
ds
cmc
add
xor
pop
mov
imul
lahf
jmp
mov
dec
mov
bswap
or
add
lock
aas
xchg
jmp
cs
scas
xchg
push
dec
movs
rcl
into
addr16
in
mov
test
pop
and
mov
jl
in
call
pop
mov
(bad)
xlat
into
push
add
and
and
call
into
movs
fs
js
push
push
aas
lods
sbb
ror
out
dec
and
ror
adc
in
movs
cmps
jnp
cmp
lods
mov
cmp
into
inc
push
jb
add
and
pop
inc
mov
xchg
add
sub
int
cmp
mov
into
push
or
push
add
popf
mov
pushf
into
add
lods
mov
pop
sbb
push
mov
and
lods
xchg
test
mov
inc
xchg
add
(bad)
push
cmp
push
(bad)
xor
into
jo
adc
rcr
mov
out
out
mov
inc
into
fwait
sbb
xchg
scas
es
repnz
(bad)
movs
test
into
sbb
or
into
ss
mov
iret
fisub
into
jae
pop
in
sub
cmp
jno
aaa
jmp
push
test
fwait
mov
nop
fisttp
daa
outs
dec
clc
and
xchg
aad
inc
mov
push
cmps
ret
mov
jns
stc
cmc
(bad)
fld
into
sahf
loopne
fadd
push
xchg
or
sub
into
or
or
(bad)
mov
test
pusha
mov
inc
push
scas
sub
into
(bad)
cmp
and
into
sbb
pop
rcl
xchg
in
mov
call
test
and
jae
mov
test
inc
nop
pop
fistp
pminsw
ret
cmc
or
ja
into
pusha
push
(bad)
jg
stc
mov
push
jns
ret
dec
sub
sbb
push
pop
push
jne
mov
out
aam
(bad)
aad
lods
sbb
stos
dec
shr
arpl
nop
retf
xchg
into
call
mov
push
nop
pop
mov
jmp
pop
into
pop
ret
push
lahf
popa
jno
nop
xor
into
dec
in
mov
mov
cmps
fadd
into
add
pop
data16
aaa
test
sub
fadd
(bad)
xor
in
push
clc
into
mov
jns
into
or
dec
into
fsubp
sub
mov
mov
jg
shl
jmp
unpckhps
dec
or
jecxz
addr16
jne
or
push
add
jmp
push
inc
into
cli
adc
fild
cld
mov
mov
or
das
rcl
repz
mov
out
adc
sbb
mov
lods
dec
or
add
out
cmp
xor
into
(bad)
gs
icebp
hlt
cmc
mov
inc
sbb
mov
xchg
pop
ss
adc
fsub
jg
push
out
cmp
add
pusha
leave
add
(bad)
sbb
into
addr16
or
pop
mov
mov
or
add
into
bound
addr16
or
sbb
into
cmps
imul
in
cmp
repz
mov
sub
xor
(bad)
mov
add
loopne
js
mov
fldenv
ja
dec
not
sub
cmps
nop
cmp
push
jne
xor
out
sbb
dec
sub
cmp
fisttp
seto
lods
js
into
pop
jle
(bad)
popa
inc
out
into
and
call
adc
push
mov
inc
push
fild
clc
xlat
inc
cmps
dec
retf
into
sbb
call
arpl
popf
cmp
das
jnp
xor
xchg
cmp
dec
push
jae
sub
and
xor
scas
cs
inc
pop
push
out
mov
jae
into
into
call
into
pop
push
sahf
in
xor
sub
out
fistp
mov
imul
shl
push
call
fcos
test
addr16
into
inc
cwde
add
lods
inc
lock
inc
mov
es
ds
nop
add
jge
mov
sbb
data16
stc
into
push
push
dec
call
scas
pop
addr16
sbb
add
mov
jmp
pushf
test
jo
iret
(bad)
psrad
cmps
(bad)
cli
movs
shl
movs
add
cwde
daa
and
or
push
ds
pop
dec
div
or
sbb
lea
into
xchg
push
pop
push
test
call
jge
pop
retf
scas
push
or
setne
pop
ror
mov
das
ror
xchg
imul
jnp
inc
jne
push
aam
sar
inc
into
xor
ret
data16
or
dec
xchg
(bad)
sub
enter
es
int
data16
inc
fsubr
sbb
(bad)
lods
push
into
jb
push
push
clc
mov
add
scas
sub
mov
stc
out
into
sub
dec
mov
dec
sar
and
adc
repnz
inc
xor
test
mov
xchg
mov
loope
add
xchg
mov
cmc
pop
jl
sbb
scas
stos
mov
push
into
xchg
mov
dec
mov
(bad)
sub
inc
into
mov
xchg
sub
mov
in
mov
xchg
in
daa
cmp
js
sbb
pop
cmp
into
repz
pop
mov
dec
dec
daa
cmp
into
aam
pop
int3
loopne
mov
mov
scas
jbe
fstp
out
pop
into
movs
scas
inc
loope
(bad)
fcmovne
cmp
dec
pop
into
or
jp
mov
add
push
sbb
mov
inc
aaa
adc
jo
push
into
gs
cmp
inc
rcl
into
cmc
shl
mov
ret
mov
push
mov
xor
into
dec
xchg
cmp
mov
nop
scas
cld
cmp
repnz
mov
cs
jp
(bad)
push
scas
fdivr
sub
aaa
stc
jp
in
push
stos
xchg
test
xor
mov
out
into
push
lahf
mov
out
inc
retf
pop
adc
and
xchg
in
jns
test
retf
bound
sbb
inc
mov
aam
retf
nop
in
dec
mov
outs
push
jmp
repz
arpl
xor
pop
and
sbb
xor
rcl
fidiv
or
push
addr16
cmp
into
and
mov
cmc
sub
aad
cs
jb
shr
xor
add
or
add
addr16
inc
outs
xor
into
mov
xchg
push
jmp
les
cli
sub
mov
xchg
cld
fmul
(bad)
mov
pop
lods
das
cmp
or
call
lods
rol
(bad)
push
xor
adc
test
cmp
fiadd
scas
jns
stos
pop
mov
(bad)
adc
dec
mov
loopne
scas
mov
ror
add
cmp
inc
rcl
dec
into
add
stos
cmp
inc
mov
(bad)
fdiv
sub
cmps
scas
bound
jns
sub
out
or
mov
dec
fwait
psrlw
into
popf
cmc
fldenv
out
sbb
sar
mov
mov
into
jmp
adc
lods
cmp
test
sbb
pop
movs
ja
push
test
into
pop
call
stos
sub
clc
cli
into
shl
pop
jp
jb
pop
pop
ficom
inc
in
ror
and
leave
pop
aam
fidivr
into
sbb
xor
stc
xor
cdq
mov
out
das
lahf
enter
mov
cmp
into
cld
lds
into
inc
out
sub
into
mov
cmp
mov
ficom
add
int3
(bad)
fmul
add
pop
xchg
into
and
sbb
xor
fwait
mov
bound
int
out
int3
push
sbb
popf
mov
mov
jp
sbb
add
in
arpl
sub
pop
fist
aas
jo
push
popf
add
jns
test
stc
fnstcw
xchg
ficom
cmp
fsubr
dec
jae
ins
sti
hlt
lock
(bad)
je
mov
das
add
inc
inc
test
movs
mov
mov
push
mov
xchg
xor
out
mov
mov
cmps
or
imul
aad
(bad)
into
mov
sbb
xor
mov
scas
call
aaa
cmp
(bad)
sbb
pop
sub
stos
ins
xchg
inc
cmp
out
add
rcr
adc
inc
jnp
into
dec
push
fnsave
jge
outs
jecxz
xor
pop
jmp
retf
lods
or
inc
xchg
fcmovnbe
push
ins
xchg
xchg
outs
xchg
sub
int
push
(bad)
inc
dec
daa
outs
loope
(bad)
cmps
mov
mov
add
gs
mov
mov
lock
in
fdivr
xchg
(bad)
test
xchg
(bad)
loop
(bad)
jl
xchg
sbb
mov
scas
std
test
push
(bad)
(bad)
pop
(bad)
into
loope
movs
pop
test
mov
push
fistp
inc
mov
aas
jb
sub
into
inc
cmp
outs
popa
sub
into
mov
lfs
dec
cmps
and
jmp
into
in
test
ja
idiv
fst
cdq
sub
ret
loop
dec
outs
not
aad
mov
into
jnp
fnstcw
ret
rol
jns
jmp
cdq
fisub
or
into
sahf
jae
inc
aam
pop
push
into
(bad)
jnp
and
stos
jg
add
clc
cmp
lods
mov
fist
mov
mov
into
adc
dec
xor
inc
mov
into
cmp
into
add
mov
cld
movs
lahf
mov
fdivp
cmp
xor
jmp
cmp
adc
pusha
into
xchg
aam
aas
jno
xor
into
xor
push
add
or
(bad)
mov
mov
jne
repnz
jae
das
(bad)
into
fild
pop
call
retf
jae
rcr
mov
xchg
pop
cwde
xchg
ror
shl
jno
and
jmp
bound
into
jnp
mov
imul
mov
mov
(bad)
fmul
pushf
rep
sti
jo
ins
mov
sub
or
jmp
mov
fcomp
into
loope
mov
repnz
imul
ror
(bad)
fstp
into
icebp
adc
pop
stc
into
pop
addr16
outs
inc
xchg
into
sub
inc
mov
into
jle
lock
(bad)
cld
into
in
dec
mov
imul
or
ss
adc
dec
adc
push
int3
into
add
cli
dec
std
lods
dec
into
les
mov
cmp
fmul
(bad)
btc
icebp
xchg
popa
scas
jns
pop
cmp
call
ss
lods
cdq
aas
int
mov
mov
fldz
or
into
scas
mov
leave
pop
lods
jae
sbb
ficom
bound
adc
mov
or
mov
add
ret
popf
add
out
loope
and
sub
movs
mov
shr
arpl
movs
into
pop
nop
jmp
push
gs
or
cmp
mov
sbb
into
xchg
retf
or
into
dec
ja
add
jge
dec
into
lahf
dec
pop
pop
push
cs
out
mov
into
jmp
mov
setns
ror
into
dec
cli
jmp
cmps
call
sub
pop
js
sub
fadd
cmp
and
dec
sub
or
xchg
mov
into
xor
push
add
pop
dec
inc
bound
into
mov
dec
sti
add
js
sbb
pop
fild
into
xor
dec
sahf
scas
pop
stos
mov
imul
cli
jbe
into
dec
(bad)
in
push
cmp
into
mov
mov
shrd
mov
cmps
out
imul
out
push
ds
pop
hlt
xchg
mov
push
(bad)
lahf
fwait
inc
add
fldcw
repz
dec
retf
out
fisubr
into
xor
fsubr
scas
adc
(bad)
stos
jmp
lock
scas
out
jb
or
dec
adc
ror
movs
mov
div
ficom
sahf
push
pop
(bad)
into
mov
test
inc
or
mov
cmp
add
retf
xchg
jbe
call
std
sbb
jle
fcom
stos
(bad)
pop
jb
je
into
xor
add
out
retf
shl
cli
inc
inc
into
scas
jnp
mov
into
or
sbb
xor
and
or
(bad)
xchg
mov
ret
jo
(bad)
daa
movs
jl
scas
repnz
sbb
mov
gs
into
jno
sahf
jb
pop
pop
clc
into
or
pushf
mov
scas
stos
mov
lea
sub
and
adc
mov
inc
jge
les
(bad)
sbb
outs
jl
iret
xchg
ret
in
xchg
movs
loope
(bad)
dec
adc
mov
xor
lods
es
(bad)
sbb
push
push
into
and
out
inc
sub
addr16
sub
es
in
mov
in
mov
xor
xlat
stc
jns
dec
mul
(bad)
mov
mov
dec
pop
push
mov
inc
test
jmp
into
lahf
enter
in
mov
scas
loopne
call
ficom
into
pushf
pop
fcom
out
repnz
(bad)
jl
and
ins
mov
test
sub
sbb
and
mov
nop
jo
inc
mov
sbb
pop
cmovge
sbb
into
rcr
cmps
aad
ins
pop
mov
xor
(bad)
jg
mov
or
sbb
ret
pop
lods
into
jns
jmp
jmp
ins
inc
jbe
aaa
into
jns
aas
xchg
adc
cmc
cmp
pushf
mov
dec
and
jne
arpl
out
icebp
enter
into
stos
and
int3
mov
into
pop
add
imul
jno
pop
and
and
mov
into
mov
and
repz
in
xchg
mov
out
movs
div
push
aaa
jae
push
sbb
pop
mov
js
mov
into
and
or
inc
cmps
loopne
fdivp
into
adc
cmp
daa
push
jecxz
lds
sar
adc
frstor
ret
adc
pop
xchg
das
mov
stos
jne
mov
into
add
jmp
cwde
mov
mov
rcr
dec
mov
cld
xor
mov
das
loop
jne
mov
xchg
adc
(bad)
pop
add
mov
mov
mov
out
cli
(bad)
ror
ja
icebp
pusha
pop
cmps
jns
mov
movs
sbb
test
sbb
lods
fimul
mov
mov
inc
xor
sub
into
stos
add
and
xchg
out
dec
leave
out
or
push
xchg
pop
enter
pop
scas
pop
sub
push
inc
inc
or
mov
fwait
into
lock
cmps
add
and
iret
out
xchg
in
outs
lahf
ret
mov
mov
add
outs
out
mov
cmps
pop
call
adc
xchg
dec
xor
cmp
into
push
retf
retf
push
mov
xor
jl
ins
ror
pop
mov
xor
and
mov
out
push
xor
mov
aaa
cmps
in
pop
scas
push
add
enter
sub
aad
jae
fild
or
xchg
jmp
sub
leave
out
in
pusha
push
lods
dec
mov
lods
addr16
mov
adc
fld
jnp
test
loop
xchg
push
pop
mov
cli
mov
mov
into
ja
into
mov
push
mov
sbb
test
add
inc
add
lock
jmp
dec
(bad)
fisubr
inc
into
cdq
inc
xchg
mov
imul
pop
into
rcr
jg
push
in
cmps
rcr
sbb
dec
adc
(bad)
outs
pop
rcl
lea
enter
repz
loop
es
inc
movs
stos
pop
xor
mov
out
push
sub
mov
pop
aaa
cmp
jl
cwde
mov
lea
ins
and
into
add
pop
and
(bad)
cmp
cmp
push
pop
push
mov
and
mov
ds
mov
mov
mov
inc
es
sar
adc
into
out
cmp
out
xchg
cmp
ret
leave
ret
into
shl
xchg
xchg
into
in
push
xchg
xor
mov
call
inc
fs
into
mov
fmul
jb
or
clc
inc
pop
sbb
pushf
(bad)
rcl
stos
jbe
add
sub
push
into
xor
adc
mov
inc
sbb
test
into
test
cmp
pop
or
push
pop
jb
je
pop
lods
xchg
xchg
sahf
loope
fdiv
into
push
shl
sbb
lods
fwait
cwde
es
cmp
push
mov
ds
sub
(bad)
xor
pop
cli
imul
fmul
in
push
lock
(bad)
in
test
mov
mul
mov
mov
cmps
push
into
lock
lods
pop
nop
xor
into
sbb
das
inc
into
sbb
jb
outs
pusha
fst
into
gs
inc
rol
xchg
into
jle
rcr
int3
xor
into
daa
xchg
sbb
add
test
outs
adc
mov
mov
push
loope
mov
jo
sub
out
scas
scas
cmp
dec
pop
repz
int
mov
into
ret
loope
into
jbe
lahf
test
(bad)
cmp
and
into
icebp
inc
mov
js
xchg
cmp
adc
xchg
push
mov
pop
rcl
ins
int3
lahf
nop
pusha
into
xlat
sbb
stc
mov
scas
popa
in
(bad)
dec
xor
inc
mov
jne
pop
mov
pop
repnz
(bad)
into
leave
jae
and
or
call
retf
push
outs
dec
pop
push
fdiv
lods
pop
icebp
mov
into
addr16
mov
out
mov
inc
fs
mov
arpl
scas
into
or
dec
xchg
imul
or
pop
aaa
mov
jbe
dec
fcom
sbb
jnp
inc
xchg
fimul
and
cwde
mov
sbb
and
(bad)
aad
rcl
arpl
adc
mov
xchg
movs
dec
inc
fdiv
fmul
jmp
ins
or
(bad)
mov
into
adc
inc
ficom
rcr
scas
pop
das
dec
xchg
pop
mov
in
aad
pop
xchg
ins
add
iret
pop
pop
les
das
into
nop
cmp
lods
sub
outs
icebp
pop
mov
into
scas
sbb
dec
mov
lock
ss
ret
lods
test
fsub
jg
dec
in
mov
test
ror
bound
adc
xlat
jae
inc
pop
repz
lods
push
shl
sub
mov
push
(bad)
xor
lods
dec
dec
pop
or
pop
(bad)
fwait
xchg
icebp
out
popf
cld
and
pusha
stos
cmp
xlat
mov
mov
push
xor
test
push
out
sub
jns
imul
jle
or
(bad)
adc
ja
lods
push
into
mov
out
int
rcr
dec
scas
std
push
jnp
lea
mov
inc
fcmove
rcr
push
popa
shr
fwait
push
adc
push
mov
push
mov
cld
xor
adc
sub
xchg
jg
sub
sub
inc
inc
cmp
adc
adc
cmp
out
int3
fld
outs
into
rcr
leave
add
push
push
into
fistp
ss
scas
mov
out
mov
les
shl
js
fwait
lahf
ficom
dec
add
fistp
rol
scas
pmuludq
cmc
push
in
fmul
xchg
imul
sub
int
adc
out
push
cmps
inc
xor
sbb
push
hlt
into
or
or
lods
or
daa
mov
int
into
mov
fidiv
lods
(bad)
in
mov
fdivr
adc
sub
jmp
lock
sti
imul
push
loop
add
xlat
movs
(bad)
cmp
cwde
sub
stos
rcr
cmp
into
sub
xchg
or
and
in
test
(bad)
clc
fistp
xchg
sahf
pop
cli
leave
pop
out
call
sub
inc
push
jle
cmps
pop
into
movs
cmp
xchg
scas
jns
mov
pop
xchg
into
lds
sub
ins
scas
and
jnp
stos
pop
retf
mov
xor
outs
dec
scas
sbb
into
loopne
and
xlat
xchg
lds
xor
bswap
movs
shl
(bad)
jo
mov
cli
mov
dec
push
clc
test
ja
stos
dec
cld
test
mov
cs
loope
aaa
jecxz
mov
into
mov
cmps
test
jle
repnz
mov
or
jge
test
inc
loope
pop
or
ror
popa
jmp
es
mov
inc
into
dec
aas
js
sub
cmc
into
xor
mov
dec
into
and
and
in
pop
in
or
lahf
xlat
jl
inc
mov
sub
dec
xchg
pop
mov
add
mov
and
in
nop
aad
repnz
int3
mov
mov
in
xor
add
lock
movs
bnd
xchg
push
pop
sub
sahf
int
jae
adc
into
(bad)
jle
hlt
daa
xchg
(bad)
out
into
add
sub
into
lods
(bad)
jle
mov
inc
pop
mov
mov
jo
das
mov
xchg
dec
add
into
shr
int
into
ret
cli
push
pop
jmp
mov
adc
push
sti
js
into
sub
and
into
cmp
les
into
jmp
lods
into
ins
fld
retf
pusha
jns
jnp
aas
fbld
dec
stc
pop
paddw
ret
mov
ror
ret
into
jne
push
adc
and
out
mov
ficomp
stos
mov
data16
inc
pop
lahf
clc
mov
loop
cwde
retf
push
aam
jno
ss
jge
add
into
rol
cdq
and
sbb
aaa
cld
out
ror
imul
push
mov
inc
aas
pop
push
ja
fbstp
test
fidivr
(bad)
out
and
into
push
mov
ror
into
add
xor
sub
dec
addr16
add
into
mov
jge
cli
sbb
repz
cld
ins
into
jne
mov
inc
lods
and
imul
adc
dec
xor
cmp
mov
into
test
cmp
xor
icebp
lahf
xor
jns
pop
adc
sbb
out
sub
(bad)
into
mov
pop
lods
mov
clc
mov
mov
cmps
ja
dec
into
aad
shl
add
into
scas
push
jae
aas
mov
jbe
xchg
jg
cmps
aam
sub
xor
hlt
bound
xchg
fisubr
and
pop
cmps
lods
mov
aas
stos
in
push
out
mov
int3
or
mov
loop
xor
movq
into
in
scas
cmps
gs
sbb
dec
push
(bad)
adc
lahf
sbb
ss
pop
cmp
arpl
push
neg
mov
dec
dec
sub
stmxcsr
pop
in
loope
pop
fwait
and
lock
loop
and
push
nop
adc
outs
add
fisubr
das
cmps
sbb
(bad)
wrmsr
jecxz
(bad)
movs
sub
movs
stos
into
mov
lds
inc
into
cmp
scas
aas
pop
scas
outs
es
leave
sbb
into
outs
fist
rol
into
lods
scas
mov
retf
pop
pop
and
jg
das
nop
xlat
mov
mov
pop
aad
daa
mov
into
movs
fsubr
push
(bad)
adc
stos
mov
xor
jp
pop
sti
add
fs
mov
aas
pop
into
inc
add
push
mov
bswap
mov
retf
mov
das
enter
clc
into
jecxz
fdiv
jnp
mov
imul
lods
lock
xor
je
into
shl
lods
or
scas
out
mov
movs
ret
packsswb
into
lahf
adc
cli
outs
mov
aad
fidiv
or
mov
pop
xchg
add
(bad)
cmp
sub
mov
push
pop
lods
sub
cli
push
daa
shl
into
int3
adc
xchg
fwait
rcl
mov
adc
dec
sar
fmul
xchg
loop
scas
ins
mov
push
jnp
loop
push
into
loope
loopne
add
das
jne
jg
(bad)
or
(bad)
into
cli
xchg
push
jbe
xchg
(bad)
jl
or
sub
loopne
lods
sahf
rcl
mov
pop
push
mov
dec
push
jmp
shr
aam
inc
pop
jbe
adc
into
xchg
sub
xchg
inc
gs
adc
into
test
outs
push
repnz
into
jle
or
xor
test
and
icebp
invd
loope
mov
in
ja
call
mov
jnp
neg
push
jp
dec
dec
add
mov
outs
xor
scas
mov
js
and
aad
in
mov
push
fisub
into
imul
push
mov
mov
mov
push
scas
aad
add
int3
add
inc
pop
xor
and
into
sub
or
out
into
sahf
pop
xor
aam
cmp
cmps
daa
fwait
sbb
into
add
retf
lods
jo
mov
inc
inc
xchg
movs
rcl
in
(bad)
sar
into
(bad)
out
jns
out
sbb
inc
sbb
shr
test
into
outs
adc
sub
into
test
(bad)
nop
mov
adc
test
mov
sbb
pop
cwde
push
fcomi
lods
movs
jmp
outs
into
ins
cmps
stc
pop
pusha
sbb
mov
(bad)
pop
in
sbb
into
movs
push
into
mov
add
and
add
scas
call
pop
dec
cdq
retf
aaa
into
fwait
add
and
jb
mov
scas
mov
(bad)
(bad)
jge
or
push
jno
popf
or
cs
cmp
into
int3
mov
scas
sbb
stc
loop
or
outs
retf
cmp
je
out
mov
repz
pop
or
and
jmp
inc
dec
in
jo
jmp
lods
neg
loope
in
das
stc
bound
test
mov
addr16
dec
mov
pop
mov
adc
into
js
push
cmc
rol
cld
mov
push
into
int
xor
cmp
loop
mov
mov
jne
dec
or
into
inc
xlat
xchg
ins
popa
mov
push
icebp
jmp
sbb
mov
into
fidivr
ss
movs
lods
into
cmp
mov
jg
cmp
into
add
add
add
xor
cmp
mov
popf
fwait
sub
sti
xchg
enter
push
bound
sbb
add
(bad)
cld
fwait
adc
les
popf
push
lods
stos
iret
or
cwde
into
xchg
imul
mov
xchg
sahf
out
xor
pop
or
outs
ja
call
xor
btr
xchg
retf
imul
retf
into
out
push
inc
mov
xchg
mov
into
nop
ret
adc
pop
into
shl
jbe
mov
sub
mov
push
and
adc
(bad)
and
xor
mov
test
enter
jl
fdivrp
cmp
into
stos
lds
push
cmp
out
scas
popf
pushf
outs
mov
ror
push
pop
jp
xchg
xchg
in
into
xor
loop
aad
jae
into
mov
rol
into
sbb
dec
jne
into
add
pop
xchg
outs
jecxz
imul
into
sti
in
ds
adc
and
repnz
add
fwait
(bad)
mov
push
int3
ds
mov
dec
hlt
cmps
jb
push
inc
ss
mov
imul
push
fcmove
sahf
ja
in
mov
mov
dec
jnp
pshufw
pop
lock
js
inc
je
sbb
fs
into
jno
test
cwde
lods
lods
or
mov
mov
into
sub
cmp
jl
hlt
lods
push
or
xor
inc
(bad)
sar
add
into
in
pop
pop
xor
mov
add
fs
into
xor
push
or
fistp
stos
cmps
repnz
dec
jne
lar
pop
out
(bad)
imul
sbb
or
pusha
add
dec
rol
jmp
xor
sub
arpl
push
test
lock
or
das
sbb
aaa
repz
or
mov
push
gs
mov
into
push
push
mov
stos
stos
push
cld
ret
mov
dec
out
sub
and
jnp
(bad)
popa
int
out
into
cmp
rol
out
jle
movs
imul
ja
pop
xchg
outs
enter
cdq
test
mov
leave
sbb
jecxz
aad
mov
xor
mov
call
scas
xor
mov
push
dec
and
into
xchg
test
or
ja
xchg
into
loop
xlat
std
or
aad
(bad)
dec
xchg
jmp
enter
pop
ins
mov
into
aad
mov
int3
(bad)
(bad)
daa
lods
inc
jg
loope
jge
out
lock
popf
and
movs
adc
cld
sub
sahf
out
fucom
aam
into
mov
(bad)
pusha
push
push
daa
or
call
dec
aas
xchg
inc
dec
shl
into
inc
dec
das
cdq
mov
jo
retf
fld
dec
adc
loop
shl
ins
rcr
into
repnz
add
push
xor
cmc
loop
jle
aaa
into
xchg
aad
xchg
mov
pop
(bad)
into
cmp
arpl
fild
and
mov
retf
daa
xor
ins
mov
test
fdivrp
aas
or
into
mov
cdq
into
cmp
loopne
xor
cmp
cld
into
clc
pop
jne
mov
(bad)
(bad)
jns
mov
iret
dec
sub
inc
pop
rcl
or
mov
adc
(bad)
(bad)
nop
push
test
pop
cdq
mov
jno
mov
jns
arpl
in
pop
into
cs
(bad)
and
sbb
mov
into
popa
and
into
fsubr
lahf
or
cmp
xor
das
fisub
sbb
or
and
jecxz
jmp
aas
scas
mov
out
adc
neg
ret
loopne
dec
inc
add
and
bnd
scas
and
into
(bad)
(bad)
in
mov
xchg
outs
xchg
(bad)
pushf
loop
adc
or
inc
ror
aad
cs
icebp
lahf
loopne
movlhps
(bad)
(bad)
sahf
push
push
into
ret
jb
jns
dec
out
lods
xchg
or
sub
mov
ss
jp
(bad)
xchg
dec
mov
jg
pushf
icebp
cmp
push
xchg
mov
dec
inc
sub
and
adc
inc
push
std
test
cmps
mov
inc
mov
sub
cmp
movaps
sar
movs
les
cmps
sub
popa
popf
scas
jecxz
xlat
iret
ins
es
ret
stos
xchg
into
jmp
jae
addr16
int3
outs
into
fcomip
mov
pop
into
sahf
or
adc
mov
outs
sbb
cmp
xor
retf
ins
push
mov
stc
sbb
pop
(bad)
fist
mov
adc
pop
in
out
and
or
cmp
(bad)
dec
into
xor
aam
pop
push
add
push
dec
jmp
cmps
getsec
push
or
push
push
enter
sub
call
lds
into
mov
out
nop
test
outs
adc
into
dec
push
jae
mov
into
rol
cwde
push
mov
jne
jle
fucom
scas
rcl
mov
sahf
int3
repnz
int
mov
pop
nop
aaa
dec
into
or
xor
jp
cmp
add
cmps
out
inc
dec
hlt
pop
mov
sbb
and
(bad)
adc
into
call
inc
mov
and
push
lods
and
lahf
fcmovu
loopne
in
jmp
adc
fs
cwde
andnps
jmp
lock
(bad)
or
mov
inc
movs
std
popf
mov
into
mov
iret
push
into
lea
or
movs
jl
cmp
mov
into
ret
lea
jp
add
ds
pop
push
fmul
js
mov
or
or
repz
aas
push
sbb
xor
inc
pop
fsub
jecxz
into
aam
xor
or
push
into
xchg
xchg
inc
push
frstor
scas
imul
test
adc
setno
in
(bad)
xchg
jns
into
mov
xor
add
pusha
or
mov
pop
dec
nop
outs
das
leave
push
sub
fidiv
iret
je
clc
pop
inc
addr16
into
mov
ds
cmp
data16
into
shr
xchg
in
inc
outs
sub
mov
mov
lods
nop
xlat
or
add
stos
sub
ins
inc
jne
and
mov
push
sbb
test
dec
sbb
cmp
or
into
mov
xor
into
push
push
mov
lds
ss
xchg
stos
mov
adc
xlat
aas
ins
inc
neg
std
xchg
pop
xchg
into
scas
adc
mov
into
cmp
aaa
aad
jg
sar
jmp
imul
or
xor
mov
xchg
repnz
sahf
dec
inc
icebp
aam
jne
mov
popa
ret
into
daa
test
fimul
mov
lods
push
into
(bad)
dec
mov
jbe
cmc
or
dec
mov
loopne
jmp
sahf
ror
out
mov
dec
sbb
mov
idiv
into
sub
inc
into
ficom
fistp
jmp
movs
cmc
jne
jl
ins
and
xchg
dec
div
stc
imul
jns
into
xor
pop
push
test
mov
shl
(bad)
std
mov
scas
and
inc
repnz
retf
sbb
lods
ret
paddq
into
pop
xchg
nop
mov
push
into
(bad)
daa
push
mov
into
jno
xchg
sub
out
popf
pusha
into
arpl
or
psubsb
add
das
(bad)
xchg
aaa
lods
das
int
fld
popf
into
fsubr
hlt
or
xchg
mov
out
push
dec
jbe
ja
in
sub
and
or
neg
pop
into
jp
and
mov
pcmpeqb
push
push
cli
into
adc
inc
jl
into
addr16
jmp
test
cmp
jmp
mov
cli
(bad)
mov
into
xchg
jmp
mov
push
fisubr
sti
(bad)
pop
mov
jns
rcl
test
or
dec
je
fcmovb
jg
mov
cmp
pop
jle
lea
icebp
mov
clc
xor
into
shl
out
mov
lods
jl
or
jg
enter
into
mov
jnp
push
into
nop
js
mov
nop
ins
popa
scas
lea
imul
mov
pop
in
jl
and
bsr
mov
push
popf
scas
mov
push
iret
int3
pop
cmp
inc
gs
stos
add
cmps
fisubr
out
mov
into
sub
mov
or
sub
ja
jle
adc
scas
aam
cmp
sti
into
fmul
fld
not
scas
mov
xor
into
jp
hlt
std
pop
pop
es
mov
popa
sub
movs
adc
std
dec
dec
push
out
shr
shl
ret
enter
sub
sub
(bad)
push
dec
into
jg
shr
sub
pop
sbb
into
jl
push
push
mov
mov
inc
jmp
add
add
lahf
jbe
adc
inc
xor
lods
gs
pop
out
xchg
or
mov
scas
push
in
sbb
xor
lahf
mov
add
aaa
jns
inc
into
mov
push
ds
std
mov
hlt
inc
into
(bad)
js
inc
and
inc
sbb
repz
jno
out
push
scas
in
adc
adc
pop
pusha
into
(bad)
aam
pop
add
into
push
je
inc
call
outs
scas
and
movs
dec
mov
cwde
dec
lods
scas
mov
into
dec
jp
pop
(bad)
cs
jl
int
or
stc
cdq
xchg
push
or
push
add
out
jle
into
cmps
call
into
popf
fs
ret
push
shl
scas
pop
dec
adc
xchg
mov
mov
test
sub
xchg
shr
inc
jnp
out
mov
cmp
movs
xor
mov
ja
fsub
xchg
(bad)
retf
scas
lods
es
movs
inc
das
stos
int
cld
mov
bndstx
out
into
std
pop
push
cmovp
mov
lods
(bad)
clc
cwde
out
pushf
fcmovne
inc
std
stos
aas
(bad)
aam
dec
pop
mov
into
and
loope
stos
into
push
sbb
or
add
(bad)
aad
into
jle
retf
xor
inc
pop
xchg
into
fabs
add
ror
mov
cld
sbb
fsub
into
push
js
sbb
into
popf
cmps
mov
cwde
movs
sub
cmc
pop
mov
test
and
call
in
cli
and
pusha
dec
scas
and
inc
fsubr
mov
ja
mov
mov
xchg
mov
bswap
dec
out
inc
into
mov
mov
fxch
inc
pop
and
lods
aaa
cmp
xchg
xchg
out
into
xchg
cmps
into
in
aam
fs
bound
and
or
pop
into
lods
mov
test
dec
mov
rcl
dec
into
jecxz
cld
sar
or
(bad)
int3
ret
das
push
stos
loop
scas
test
dec
jge
(bad)
cld
lods
xlat
xchg
inc
cmps
in
outs
enter
addr16
arpl
into
jmp
xchg
dec
ins
dec
std
add
cli
pop
aas
movs
je
cmps
stc
into
int
xor
sbb
mov
out
scas
jge
stc
aas
test
or
call
retf
jmp
icebp
jmp
push
ret
shr
into
fimul
sbb
into
jno
js
repz
adc
jmp
and
sbb
lock
adc
pop
and
xor
fsub
daa
call
push
into
addr16
or
or
scas
pusha
sbb
mov
out
into
sar
mov
adc
inc
outs
test
xchg
hlt
repz
push
jmp
mov
mov
ja
movhps
into
cld
and
inc
into
das
inc
sub
mov
push
mov
inc
add
pop
js
(bad)
jmp
adc
cmp
mov
(bad)
jb
mov
push
jns
into
mov
sbb
push
dec
sub
iret
cwde
cmp
and
fadd
sub
sar
adc
inc
push
sub
xsave
std
sbb
pop
mov
inc
fisubr
mov
and
sub
xchg
dec
xor
and
int
inc
mov
into
fwait
das
mov
inc
into
popf
pop
addr16
iret
outs
mov
xchg
stos
cdq
jmp
leave
mov
inc
mov
scas
pop
gs
(bad)
jae
ja
cvtps2pi
pop
inc
(bad)
sbb
into
lods
mov
retf
and
pop
dec
pop
lods
adc
fist
je
call
out
inc
in
into
and
cwde
rcl
push
gs
push
pop
mov
push
mov
loope
in
or
sbb
cmp
jecxz
test
popa
ins
lds
mov
mov
lahf
and
leave
loopne
jmp
shr
inc
xchg
adc
ja
cmp
js
test
pop
pop
arpl
xor
push
outs
pop
add
idiv
xchg
call
add
mov
sub
mov
pop
jp
push
sar
inc
push
into
sbb
test
into
inc
hlt
mov
push
inc
movs
cmp
mov
into
ficomp
dec
bound
fcmove
mov
scas
pusha
fsubr
cli
daa
nop
mov
into
stos
je
inc
daa
loop
call
fisttp
xchg
cwde
nop
or
ins
push
pop
mov
pop
test
mov
dec
or
cmp
push
lea
fdiv
add
cmp
call
pop
and
outs
push
xchg
pop
push
xchg
xchg
fwait
xchg
test
jnp
out
into
mov
or
into
rcl
ins
js
outs
jnp
mov
fiadd
push
push
wrmsr
or
xor
das
cld
xchg
movs
into
aam
xchg
sbb
inc
sbb
sub
push
mov
mov
sub
into
jb
and
mov
in
mov
stos
lock
xor
and
cmp
into
mov
test
jmp
mov
sti
jle
(bad)
lods
mov
mov
mov
ds
mov
ss
into
jmp
stos
loope
into
mov
rcl
push
mov
mov
mov
into
out
mov
and
and
inc
aas
or
mov
mov
add
adc
mov
imul
xchg
int3
and
retf
inc
(bad)
int
lahf
dec
js
dec
fstp
movs
into
test
jnp
jl
pop
sahf
lods
mov
fisttp
(bad)
arpl
mov
scas
add
mov
mov
movs
lods
xor
mov
push
push
mov
into
(bad)
out
in
fdiv
out
or
xor
iret
cmp
ret
in
into
push
retf
(bad)
cmp
mul
fwait
into
push
mov
cmp
cmp
scas
sahf
jmp
stc
dec
ins
jnp
out
pusha
shl
aas
mov
inc
add
clc
fadd
ret
adc
fidivr
into
push
movs
and
or
mov
into
iret
and
into
mov
cli
mov
into
mov
pop
call
mov
lods
push
push
daa
imul
cwde
into
and
cmc
mov
and
sbb
cli
into
int3
shr
fsub
mov
mov
ror
hlt
push
sbb
leave
or
sub
pop
fidiv
scas
in
stos
sar
and
outs
aad
into
sub
lods
test
pop
xchg
cmp
inc
xor
scas
inc
outs
add
push
sbb
mov
in
into
push
add
cld
mov
(bad)
mov
cmps
xchg
push
add
fwait
mov
adc
das
in
and
mov
das
dec
es
aad
into
cdq
mov
lahf
(bad)
lods
aaa
dec
ds
outs
push
outs
adc
sbb
mov
scas
xor
ss
cdq
fiadd
push
adc
xor
sub
cmp
mov
jp
add
push
sahf
jae
inc
and
std
out
shl
mov
mov
loop
cmp
pusha
pop
test
push
movaps
push
movs
pop
fwait
ret
pop
dec
push
ret
popf
scas
jmp
(bad)
xor
or
adc
mov
jg
into
nop
push
and
pop
inc
dec
inc
ja
jmp
adc
xchg
push
push
cmp
sub
xlat
scas
push
push
push
dec
ins
fcmovbe
(bad)
jae
neg
aas
xchg
es
into
mov
iret
shl
into
sahf
adc
sbb
aad
mov
push
into
sbb
adc
jne
sub
cmp
ins
cmovp
out
xor
push
outs
aas
jg
test
stc
mov
push
mov
js
mov
xchg
jecxz
scas
inc
retf
inc
add
in
dec
xor
loop
shr
push
adc
into
pcmpeqd
xor
in
icebp
xor
pop
(bad)
out
and
into
bnd
out
add
fwait
dec
xchg
mov
jae
loope
sub
ror
inc
push
sub
or
fist
dec
jae
pminub
ins
in
(bad)
(bad)
inc
les
xchg
lods
into
jmp
ds
into
je
popf
mul
xor
adc
mov
sahf
mov
xchg
dec
xchg
push
mov
(bad)
data16
into
inc
in
loop
rcl
lea
add
pop
test
inc
call
inc
cmps
pop
into
mov
push
jl
mov
xor
pushf
lods
(bad)
adc
mov
sar
je
data16
mov
(bad)
das
inc
into
dec
jge
outs
jns
jmp
add
pop
sti
in
xchg
into
sub
sub
pop
retf
into
aas
mov
cdq
test
sar
pop
pushf
mov
lods
stc
mov
and
sub
mov
into
mov
mov
inc
into
jae
test
jmp
xchg
in
dec
xor
test
mov
imul
loope
mov
test
rcr
dec
sbb
jnp
add
pop
ret
dec
popf
das
ins
sub
pushf
sub
into
xor
lods
ds
pop
cs
iret
and
in
test
fwait
out
sbb
ror
pop
xchg
dec
cwde
mov
mov
call
cmp
into
jle
int3
and
inc
into
loop
adc
mov
into
cmp
pop
out
int
push
mov
ret
pop
mov
jmp
fs
daa
mov
je
scas
cmp
outs
mov
into
scas
mov
xchg
jae
ss
xor
sti
into
jb
and
lahf
ins
rol
add
push
into
aam
fiadd
into
bound
mov
lock
retf
sub
cmc
iret
and
int3
ins
dec
push
fbld
in
pop
push
mov
cli
sahf
or
add
xchg
xor
dec
mov
shl
into
mov
ins
adc
pop
pop
lods
fsubr
pop
loop
retf
es
xchg
repnz
in
into
cmp
xchg
jmp
(bad)
in
and
push
lods
jge
retf
inc
into
loop
inc
jo
arpl
lock
sbb
and
sbb
mov
aaa
fwait
call
jmp
into
sti
mov
mov
inc
ror
or
or
ficomp
sub
into
sbb
dec
ss
nop
mov
jmp
(bad)
jb
adc
out
clc
adc
or
addr16
xadd
mov
clc
jmp
add
xchg
mov
jle
fwait
mov
mov
jge
lods
das
or
dec
mov
mov
xchg
and
pop
mov
push
inc
les
mov
cmp
into
std
(bad)
sti
gs
icebp
sub
sbb
dec
push
outs
jmp
inc
jnp
lods
and
mov
pop
into
pop
out
mov
into
out
push
add
ins
jle
mov
dec
aas
cmps
mov
push
hlt
lods
sub
loope
add
into
push
into
out
or
cwde
pushf
fwait
cdq
test
iret
cmps
dec
jne
popf
mov
push
dec
mov
imul
mov
mov
bt
pop
imul
into
cwde
jp
dec
fdivr
pop
or
js
jmp
dec
adc
ja
js
push
inc
daa
cmp
adc
mov
cmp
dec
clc
into
and
xchg
inc
push
pop
ret
into
es
lock
popa
lahf
das
clc
and
into
sub
push
jns
(bad)
push
push
aam
dec
jecxz
jo
cmps
ss
mov
or
pop
inc
les
push
xchg
mov
inc
scas
out
adc
mov
ror
repnz
(bad)
xchg
push
inc
into
test
ds
mov
sbb
add
js
movs
into
pop
lods
jecxz
xor
sbb
mov
arpl
pushf
into
imul
jbe
or
in
fiadd
and
jp
in
add
into
sahf
mov
mov
into
mov
ds
adc
dec
mov
out
test
dec
or
into
aad
dec
inc
mov
fisttp
fsub
rcl
xchg
xchg
bswap
into
pushf
jg
stos
test
lock
into
(bad)
div
or
or
xor
xchg
cmp
cmp
adc
mov
push
mov
mov
in
jge
repz
into
add
pop
dec
pop
push
into
call
shl
push
mov
pop
ret
scas
xchg
dec
sbb
mov
out
mov
xchg
(bad)
mov
mov
ins
pop
push
push
pop
add
xor
shl
bndstx
pop
or
bound
pusha
into
mov
(bad)
fxch
int
cwde
pop
inc
retf
call
push
in
push
das
fwait
call
dec
xor
outs
into
imul
push
aas
pop
mov
into
ins
cmp
pop
mov
mov
scas
fnstcw
push
cmp
inc
loope
int
test
mov
jmp
dec
dec
(bad)
xor
test
retf
adc
and
test
and
sub
mov
into
sbb
mov
(bad)
fmul
sub
stos
sbb
mov
xchg
bswap
outs
leave
push
mov
aad
emms
xlat
dec
into
push
imul
repnz
xchg
cmps
into
test
cdq
mov
lods
into
push
sbb
movs
mov
div
out
mov
jmp
out
(bad)
fst
push
sahf
dec
sub
mov
cmp
gs
add
add
mov
mov
adc
aam
into
push
call
inc
jo
stc
fsubr
(bad)
test
xchg
sub
rcl
pop
sbb
jb
into
test
jmp
and
not
dec
out
into
scas
push
addr16
ds
test
sbb
inc
jmp
(bad)
je
into
push
push
mov
aas
into
ret
stc
dec
call
ret
xor
hlt
psubd
jns
jne
mov
outs
add
inc
and
push
(bad)
into
retf
fdivr
cmps
movs
data16
nop
repnz
dec
xchg
(bad)
fimul
push
retf
outs
jno
into
inc
aas
repz
int3
arpl
mov
mov
xor
mov
fbld
shl
ret
std
nop
or
pop
xchg
outs
into
mov
sub
mov
xor
sub
mov
cmp
and
out
cld
into
jecxz
mov
jmp
(bad)
fdivr
out
test
fs
or
xchg
pop
lods
cli
nop
and
mov
into
fistp
(bad)
nop
into
test
ins
mov
xor
(bad)
add
mov
sbb
les
adc
jmp
mov
into
pusha
and
pop
imul
push
cdq
sub
push
or
into
lods
xor
mov
jg
push
mov
jnp
inc
rcl
jo
add
jecxz
jae
into
daa
sar
adc
into
imul
mov
fwait
sbb
aaa
cmps
sub
jae
mov
out
test
das
hlt
scas
adc
iret
jno
lea
ins
ja
stos
jecxz
mov
xor
into
or
clc
test
(bad)
imul
pshufw
mov
das
adc
sbb
into
sti
fnstcw
outs
jecxz
mov
jns
push
sbb
test
inc
into
call
fstp
imul
or
mov
mov
cmp
adc
mov
test
lods
add
cmp
test
mov
jecxz
xchg
nop
pop
sub
or
cmp
out
hlt
jge
outs
call
retf
sbb
sahf
lea
addr16
cli
push
adc
mov
add
add
js
in
popf
pop
xchg
inc
nop
shl
lods
or
stc
outs
ror
fisttp
jge
out
lods
(bad)
into
ins
push
and
mov
jp
into
das
add
add
inc
into
mov
jmp
hlt
xchg
sub
push
inc
push
pop
sti
mov
imul
push
jae
fcmovu
cmps
jg
nop
mov
out
adc
dec
into
scas
jp
jmp
push
imul
(bad)
pushf
movs
into
repz
cmp
scas
(bad)
pop
into
xor
push
fs
adc
dec
(bad)
into
retf
pop
fneni(8087
dec
jl
arpl
ror
int3
xchg
sbb
lea
js
popf
test
pop
adc
push
call
dec
ror
mov
mov
sbb
in
xchg
ss
(bad)
xor
pop
out
into
test
dec
dec
add
je
mov
add
dec
cwde
jge
ror
lods
add
add
jmp
pop
fcmovbe
xchg
in
add
sbb
icebp
int
fmul
push
inc
jns
cli
mov
push
add
cdq
jb
sub
into
ins
call
stos
into
adc
test
and
loope
pop
lods
into
jp
(bad)
adc
inc
lahf
je
bound
arpl
inc
xor
pop
cld
lods
popa
xchg
sbb
test
mov
out
mov
into
or
ficomp
push
add
push
dec
scas
inc
ja
sub
or
dec
cdq
retf
or
fs
in
sbb
mov
adc
mov
mov
scas
cdq
dec
fld
pop
leave
fcomp
aad
ins
into
xchg
int3
sbb
cs
pop
lahf
pop
inc
(bad)
dec
into
mov
sub
pop
movs
jnp
mov
xchg
cli
prefetch
mov
cmovbe
mov
ror
dec
or
addr16
outs
adc
inc
into
cmp
jo
inc
mov
into
dec
(bad)
xchg
rcl
push
shl
push
out
push
xchg
inc
cmp
jecxz
lods
add
(bad)
xchg
(bad)
jnp
sub
lods
sub
outs
ud0
xchg
ds
lods
aad
pusha
popa
loopne
aas
out
lods
int
push
aam
sub
es
aaa
xor
idiv
jne
jp
out
lods
into
xchg
xchg
push
mov
icebp
call
scas
aad
pop
test
fdivr
out
sbb
arpl
mov
mov
jno
xchg
repz
inc
arpl
dec
dec
lea
sbb
movs
and
sbb
aaa
into
add
adc
fmul
mov
inc
iret
mov
xchg
push
repnz
dec
or
or
ja
sbb
jle
into
xor
jecxz
scas
push
rcl
into
fld
xchg
in
or
mov
popa
lods
mov
mov
mov
pop
cmp
xchg
add
inc
cld
hlt
(bad)
movs
mov
xchg
shr
mov
dec
or
stos
cmps
jle
into
aaa
mov
add
test
dec
into
loopne
lock
(bad)
sti
cmp
sar
xor
stc
scas
cmc
jns
mov
inc
sub
repz
shr
stc
into
lahf
fdivr
aas
cmp
ror
add
mov
or
push
std
mov
push
inc
sti
sub
mov
pop
pop
in
into
movs
bound
dec
sub
arpl
inc
pop
test
sti
cli
into
and
popf
adc
retf
xchg
xchg
mov
fmul
test
jge
lea
xor
test
xchg
gs
movs
popa
sbb
into
dec
ja
ins
or
pop
into
push
sbb
pop
test
cwde
push
inc
leave
xor
into
sahf
es
fwait
inc
pop
push
into
inc
loop
inc
fsubr
popa
fdiv
call
push
stos
bound
out
push
or
in
mov
add
enter
xlat
invd
sub
icebp
mov
pcmpgtb
out
aad
fild
adc
xor
in
inc
enter
sbb
scas
movs
add
inc
fmul
into
(bad)
lahf
(bad)
xor
adc
and
xlat
stc
into
dec
je
jbe
or
popf
call
nop
cmovo
loope
aaa
add
sub
inc
scas
cld
cmp
ds
jo
hlt
sar
aas
mov
cmp
shr
inc
not
and
(bad)
push
adc
mov
pusha
jmp
lock
xchg
je
mov
pop
loop
test
push
ds
lods
movs
sub
out
cwde
xchg
aaa
or
push
mov
into
jmp
inc
into
or
xchg
fcomp
lea
mov
into
jne
call
xchg
into
sub
push
cli
mov
push
pop
pop
push
into
xchg
loop
js
out
dec
adc
cmps
cdq
popa
or
xchg
mov
scas
cmp
adc
push
sub
xlat
std
jge
mov
xchg
or
test
hlt
lock
pop
xchg
push
or
jg
or
into
lahf
mov
(bad)
arpl
xor
test
rcl
stos
out
daa
mov
pop
cmp
jae
scas
call
(bad)
nop
jg
sub
out
test
outs
pop
xlat
jle
mov
xchg
xor
out
sub
loope
cli
add
lock
xchg
mov
fnstsw
repz
mov
jb
push
pop
(bad)
into
sti
dec
sub
pop
sub
cmps
mov
ja
cdq
xchg
in
into
jmp
xlat
pop
movs
lods
inc
idiv
jge
cdq
into
or
dec
into
pop
cwde
call
int3
(bad)
repz
inc
inc
(bad)
sub
inc
sbb
into
pusha
rol
loopne
icebp
cwde
movs
into
jmp
xlat
xchg
iret
and
xchg
cmc
aam
and
push
scas
movs
daa
mov
out
dec
mov
into
inc
lods
imul
mov
inc
mov
mov
jo
jle
out
inc
dec
into
sar
nop
in
ror
adc
mov
push
(bad)
shrd
test
das
add
xchg
scas
cmp
xor
jl
fptan
mov
jle
adc
xor
or
mov
sbb
or
mov
cmc
and
into
adc
jne
push
xchg
(bad)
into
sbb
int3
and
aaa
stos
call
retf
mov
retf
data16
es
into
mov
pop
nop
stc
xlat
jp
add
cwde
adc
into
aad
out
jle
jp
into
gs
and
into
mov
aam
dec
mov
and
ins
js
int
test
mov
sbb
retf
push
cmp
ror
sub
out
(bad)
(bad)
mov
mov
dec
shr
mov
fnsave
dec
cwde
push
in
test
retf
into
mov
rol
into
ja
jne
pop
cli
stc
adc
pusha
xchg
cdq
into
and
pop
out
cmp
xchg
adc
cmps
aam
into
jns
imul
lods
pop
jge
xchg
mov
(bad)
into
sub
icebp
shr
sub
push
sbb
cdq
jge
arpl
jl
jmp
dec
xchg
mov
cmp
int3
adc
add
inc
jae
clc
into
repz
inc
lea
jnp
into
sub
xor
pop
fmul
into
push
(bad)
int
repz
int3
pop
into
into
sbb
fwait
mov
out
xchg
pop
add
xor
cwde
cmc
stos
pusha
out
out
mov
pop
dec
xor
or
outs
mov
jbe
nop
pop
inc
cmp
mov
push
repnz
sbb
addr16
mov
mov
idiv
dec
into
and
enter
mov
into
rcr
lock
pushf
push
xor
cmc
jno
and
(bad)
adc
mov
repz
ficom
arpl
or
mov
btc
add
lds
in
cmp
out
mov
mov
test
ffree
jae
jle
lods
add
inc
inc
movaps
mov
jecxz
inc
add
les
into
jo
sbb
dec
xor
arpl
adc
push
lds
ins
dec
(bad)
inc
in
xchg
retf
jae
in
xchg
psubusb
lock
add
adc
pop
mov
dec
push
inc
ds
or
das
out
push
inc
pop
ret
dec
mov
into
iret
test
aaa
sbb
mov
stos
ffreep
fsubr
into
jl
or
int3
sets
into
(bad)
jmp
mov
mov
dec
loop
cmp
into
mov
and
cdq
mov
push
stos
push
sbb
push
dec
into
push
and
adc
xor
into
(bad)
dec
(bad)
xchg
fbstp
(bad)
into
cmp
fcomp
pop
ret
sub
shl
fs
cmps
push
enter
pop
xor
push
dec
and
mov
pop
out
pop
repnz
fbstp
adc
scas
dec
outs
push
ins
(bad)
fnstsw
adc
jae
mov
jmp
jge
inc
xor
scas
dec
add
or
jae
xchg
sbb
cld
xchg
mov
mov
push
int
out
xor
xchg
push
push
xor
cwde
div
or
and
sbb
ret
fidiv
loopne
into
retf
nop
and
mov
add
fadd
je
bnd
in
jle
and
adc
pop
test
fwait
xchg
mov
inc
mov
mov
into
pop
sbb
sub
dec
sbb
ret
jae
xor
sub
or
into
mov
imul
in
je
ret
jecxz
push
in
dec
idiv
fadd
xchg
into
shl
pop
cdq
les
popa
mov
dec
shl
pushf
aad
shr
into
int3
idiv
into
and
mov
gs
das
movs
popf
jb
xchg
pop
test
pusha
sahf
push
sbb
inc
daa
test
push
add
in
mov
jmp
into
pop
mov
mov
into
jns
or
jo
cmp
inc
out
in
cmp
cli
scas
mov
dec
int
rol
lahf
ret
mov
push
jns
addr16
xchg
and
mul
scas
xchg
into
std
pop
and
into
hlt
ins
dec
fld
pop
pmaddwd
int3
push
dec
sbb
or
retf
into
enter
pop
stc
cwde
push
into
xchg
dec
push
into
movs
xor
inc
scas
mov
jne
outs
jmp
sub
or
leave
call
retf
mov
js
adc
into
daa
push
nop
aam
test
(bad)
pushf
lock
out
jno
mov
pop
les
scas
adc
into
int
sub
into
cmc
pop
jne
scas
jp
shl
psraw
sti
dec
or
inc
mov
mov
sbb
sub
cmp
into
scas
push
inc
sbb
fstp
pavgw
cli
fcom
cmp
lods
scas
adc
or
in
or
inc
into
retf
daa
push
mov
lds
test
jns
pop
(bad)
imul
mov
pusha
not
mov
js
das
adc
adc
fcom
popa
add
sbb
into
sar
or
pop
arpl
push
or
(bad)
adc
int3
jns
test
sbb
je
sub
js
div
xchg
mov
mov
into
mov
retf
scas
mov
jo
lods
shr
stc
dec
adc
pop
sub
mov
adc
addr16
and
or
jmp
aas
fwait
dec
pushf
cmps
nop
arpl
adc
xchg
imul
stos
outs
imul
xor
xor
mov
stc
call
jns
xchg
jecxz
adc
sub
and
imul
mov
mov
movs
or
stos
fistp
mov
adc
sbb
popa
scas
fs
mov
out
nop
sbb
sbb
into
dec
dec
out
int3
into
cmps
sub
add
xchg
test
or
(bad)
xchg
scas
add
mov
pop
inc
jb
mov
lods
xor
cwde
ss
outs
cmp
into
icebp
leave
(bad)
mov
push
pop
cmps
into
lock
in
pushf
popa
inc
adc
dec
add
lds
mov
or
adc
pop
daa
mov
mov
push
add
popf
mov
in
xchg
sub
call
mov
outs
add
out
ss
mov
cmp
lods
call
push
mov
sub
outs
in
jecxz
imul
cli
jg
in
push
movs
mov
adc
ins
(bad)
pop
(bad)
lahf
and
xchg
mov
adc
and
or
pop
loop
cli
into
sub
inc
into
aam
push
cmp
push
or
push
jne
dec
pop
adc
mov
or
inc
int3
lea
push
into
pop
loopne
xchg
call
dec
sbb
fwait
push
into
test
addr16
into
call
cmps
mov
sar
ror
icebp
inc
ins
push
and
mov
sub
push
pop
pushf
mov
mov
jo
shr
or
mov
xchg
icebp
sub
into
gs
ss
mov
jae
mov
mov
(bad)
sub
cmps
pushf
xor
(bad)
into
stos
icebp
mov
and
sub
(bad)
into
(bad)
scas
push
inc
mov
inc
jbe
cmp
into
xchg
sar
and
test
lods
ins
xchg
movs
cwde
addr16
scas
or
scas
in
into
sbb
cmp
es
outs
into
sbb
and
stos
stos
dec
push
lods
dec
sub
mov
xor
pop
out
into
mov
cld
and
fdivr
dec
in
mov
fcmovne
mul
mov
xchg
or
sub
dec
sub
sbb
sbb
leave
int3
inc
test
popf
inc
mov
lahf
sub
lea
loopne
std
mul
jp
out
sahf
mov
gs
jno
pop
(bad)
imul
dec
and
stos
dec
test
imul
mov
jo
icebp
dec
out
dec
xchg
lea
rcr
in
sub
enter
xchg
xor
pop
add
inc
sub
pop
test
into
outs
push
jl
mov
push
int
cmp
inc
into
(bad)
fcmovnu
mov
mov
cmc
mov
xchg
retf
pusha
into
inc
pop
sub
ja
(bad)
lods
push
or
fldz
xchg
(bad)
mov
jne
fidivr
mov
push
push
into
and
ret
into
inc
je
and
sbb
pop
pop
push
pop
in
or
sub
(bad)
outs
sub
push
jno
test
in
arpl
pop
xor
and
aaa
jp
xor
or
cmp
icebp
retf
push
into
or
mov
sub
push
scas
into
pop
and
adc
std
mov
sbb
jl
mov
imul
mov
adc
or
into
or
mov
pop
data16
inc
in
pop
mov
sbb
into
jmp
cmp
sub
xchg
daa
dec
cld
jl
dec
into
mov
ja
das
add
(bad)
into
mov
add
inc
stos
jns
adc
add
adc
lods
(bad)
(bad)
cmc
push
cmp
cmps
sbb
clc
icebp
dec
and
fstp
jmp
ss
std
rep
ret
test
mov
fbld
into
cmp
inc
shl
cmp
inc
pop
out
scas
std
mov
mov
mov
lods
(bad)
int3
push
bound
add
jmp
xchg
lods
inc
or
xchg
mul
outs
cmps
xchg
sbb
lods
iret
hlt
pusha
scas
punpckhbw
stos
(bad)
mov
pop
dec
mov
in
sti
dec
sub
mov
xor
push
xlat
inc
adc
mov
loopne
addr16
lods
ror
pop
in
and
ror
add
pop
sbb
in
test
xor
mov
adc
or
mov
dec
call
dec
stos
adc
add
jmp
xchg
lds
into
mov
jo
out
into
jns
push
outs
popf
adc
into
iret
add
push
cmp
ins
push
mov
cmc
lods
(bad)
mov
ret
mov
add
xchg
into
xchg
xchg
xor
push
add
pop
js
packssdw
sbb
xor
jb
pusha
(bad)
into
sar
adc
call
or
mov
rol
int3
mov
sub
dec
cmp
test
mov
shl
mov
imul
mov
push
and
adc
repnz
sbb
dec
mov
ret
adc
mov
mov
out
movs
jae
(bad)
cwde
mov
sbb
push
scas
adc
in
pop
iret
je
jbe
into
mov
mov
inc
lea
and
dec
pop
xchg
call
das
or
xor
into
dec
das
leave
mov
popf
out
xor
into
stos
adc
add
inc
lods
sar
jns
push
pop
push
sbb
push
adc
into
aad
cmps
or
and
xchg
out
push
leave
xchg
push
pop
or
shl
(bad)
jmp
aaa
out
jb
arpl
clc
xchg
pusha
mov
mov
mov
jbe
outs
fisub
into
loope
repnz
mov
inc
adc
test
nop
and
sub
test
adc
xor
test
jl
xchg
int3
aas
retf
test
mov
retf
cld
shl
into
es
add
sbb
push
test
adc
pop
fmul
sub
and
and
imul
lods
dec
scas
in
mov
movs
pop
test
int3
xchg
fs
gs
pop
into
fadd
dec
mov
inc
stc
or
ror
mov
test
aaa
mov
scas
loopne
push
dec
movs
std
movq
sahf
fldcw
mov
daa
ror
sbb
cmp
ret
dec
add
or
sub
addr16
inc
cmps
das
cdq
mov
jo
xchg
arpl
into
cmp
pop
ret
sbb
out
sbb
repnz
xor
test
test
pop
xchg
push
dec
push
into
cmp
mov
adc
and
jmp
daa
pop
ins
into
dec
mov
in
sar
into
(bad)
push
stc
jmp
into
es
ret
push
mov
jb
xchg
jne
aas
outs
xchg
(bad)
out
sbb
lods
and
adc
sub
sar
xchg
outs
imul
jmp
test
scas
pop
mov
jle
(bad)
push
into
cs
push
mov
jno
into
cmp
sub
arpl
mov
mov
into
in
aaa
cmp
ja
sar
cs
fsubr
(bad)
or
push
jg
jae
xor
mov
clc
into
fnsave
mov
jle
jecxz
push
dec
rol
into
lock
movs
inc
aad
rcr
xchg
or
mov
lods
repnz
(bad)
loopne
or
cmps
jmp
mov
dec
pushf
xchg
inc
push
cld
mov
xchg
das
imul
outs
pop
adc
dec
sub
test
ins
les
and
(bad)
call
cmps
jns
outs
push
xchg
sbb
dec
cmp
inc
push
and
lods
lods
rol
mov
in
sbb
cmp
jae
rol
xchg
add
fcmovne
(bad)
mov
or
mov
movs
fild
mov
dec
cmova
aam
scas
sub
mov
repnz
(bad)
scas
sahf
daa
cmps
xor
popf
cli
xor
mov
into
dec
adc
stos
inc
into
xchg
adc
popf
mov
mov
mov
dec
pop
ficomp
cmp
or
adc
xchg
sbb
(bad)
cmp
sbb
cld
retf
fs
into
imul
mov
scas
pop
fcmove
pop
mov
stos
into
add
xchg
(bad)
adc
sub
outs
sbb
dec
push
add
mov
jmp
push
fcmovu
and
pop
sub
jp
cmp
cmps
adc
lds
call
or
loope
dec
leave
test
adc
ins
pop
inc
cmp
mov
pusha
loopne
into
dec
xor
dec
mov
xor
je
pop
mov
fdivr
mov
mov
dec
jle
inc
in
dec
push
mov
(bad)
jl
mov
jp
push
dec
stos
inc
rol
into
mov
imul
retf
pop
sbb
hlt
push
or
push
inc
int3
pop
lds
imul
inc
push
movs
in
cmp
xchg
into
ins
cdq
adc
cmc
ins
(bad)
into
mov
and
test
mov
mov
dec
call
movs
out
ins
cwde
mov
out
(bad)
push
pop
push
xor
ins
mov
push
jl
or
or
xor
lea
cli
add
into
sub
ja
hlt
mov
cmp
ins
dec
add
push
dec
mov
add
xchg
aaa
pop
mov
out
mov
ror
push
cmp
(bad)
scas
jnp
adc
jge
into
pop
sbb
scas
cmp
in
or
jb
xchg
mov
outs
ss
out
call
popf
mov
push
sti
inc
push
jb
xlat
push
into
clc
mov
mov
stos
(bad)
mov
retf
es
sub
push
push
jp
(bad)
sbb
mov
mov
aaa
into
test
jecxz
repnz
jle
xchg
inc
xor
test
xchg
dec
push
call
and
test
lds
into
sbb
pop
mov
push
and
dec
fild
pop
into
mov
sbb
into
in
scas
jb
in
jmp
in
imul
fdiv
into
sbb
sti
mov
dec
xor
fwait
aad
jnp
int3
ds
inc
leave
lahf
mov
xchg
in
inc
fld
aaa
loopne
cmp
(bad)
mov
js
sahf
loop
ret
into
aam
inc
mov
imul
daa
(bad)
ins
lock
inc
into
dec
sahf
and
lods
mov
into
imul
mov
jo
push
test
xor
movs
add
scas
into
rcr
ins
ret
add
test
into
inc
fist
fbld
inc
aad
and
pop
jmp
push
ror
jge
daa
pusha
xchg
mov
in
stc
mov
aaa
jmp
ret
fwait
in
cmps
xor
pop
pop
jns
and
jne
mov
ret
add
xor
and
popa
popf
call
retf
arpl
pop
mov
or
mov
jmp
cmp
movs
push
jnp
cs
imul
bound
lahf
mov
and
sbb
jle
cld
rcl
fmul
dec
inc
jne
pusha
pop
movs
mov
outs
mov
or
into
push
adc
ficomp
xchg
xchg
mov
mov
aam
lods
sar
int
repz
into
dec
dec
adc
cmp
(bad)
jmp
cmp
arpl
icebp
(bad)
into
lods
cld
aad
xor
das
int
pusha
mov
push
adc
pop
into
ds
dec
mov
push
dec
outs
pop
cmc
setge
jb
(bad)
pop
pop
xchg
icebp
into
aaa
or
xchg
mov
sub
push
ss
ror
lods
mov
int
mov
cmp
scas
outs
adc
mov
lods
sub
jmp
jb
and
cmps
pop
lock
popf
bound
jno
or
ror
rcr
or
jnp
mov
xlat
in
push
out
(bad)
in
mov
push
hlt
xor
dec
inc
mov
into
inc
test
repz
mov
xor
pmaxsw
cmp
push
test
sbb
mov
retf
in
push
sar
addr16
into
repz
fistp
loopne
into
inc
fstp
popa
into
dec
sar
adc
cwde
mulps
aas
mov
dec
jmp
or
push
(bad)
enter
sub
jne
inc
cmp
or
(bad)
test
push
out
into
lods
shr
stc
pop
leave
mov
icebp
pop
dec
push
dec
pop
aaa
inc
shl
mov
dec
js
cmp
adc
bound
mov
fnstenv
imul
xchg
jbe
clc
mov
pop
into
xor
mov
jp
pushf
lods
add
xor
mov
lods
hlt
jge
xchg
pop
dec
pop
inc
aad
scas
push
jb
(bad)
mov
imul
and
in
into
fwait
jbe
aas
jmp
(bad)
and
into
mov
into
push
(bad)
je
fidiv
loop
into
daa
nop
scas
pop
imul
sahf
cwde
fsubr
mov
into
fist
push
push
pop
sub
jne
jl
bound
or
out
into
jmp
add
int3
pop
out
pop
ror
call
xchg
into
fs
or
loope
add
or
pop
js
cmp
cmps
sahf
shl
into
ins
jno
loopne
(bad)
push
ss
push
ja
jmp
into
xor
out
jns
or
lods
or
cmp
xchg
imul
inc
retf
scas
data16
xchg
dec
cwde
into
cmps
add
mov
push
mov
sub
into
clc
stc
pop
push
pushf
cmps
fwait
sub
data16
mov
jb
and
fisttp
inc
scas
sub
into
loopne
repnz
das
cmp
rcl
aad
in
test
sub
ds
loope
idiv
into
mov
shl
lods
es
sub
push
fnsave
dec
repz
js
xor
push
arpl
and
into
dec
in
sbb
in
movs
test
jmp
sahf
jg
ss
mov
fadd
in
dec
mov
dec
dec
aad
pop
mov
imul
into
push
leave
fstp
mov
mov
sahf
or
fistp
(bad)
ins
into
push
inc
daa
fstp
push
add
sbb
dec
cmovl
lods
or
xchg
aaa
retf
cmp
outs
mov
loopne
cmc
out
call
jae
shr
ror
sbb
xchg
add
push
lea
adc
mov
out
(bad)
ret
jmp
jns
ins
iret
(bad)
into
jge
daa
xchg
leave
aas
(bad)
pop
stc
jl
mov
xor
inc
mov
call
jecxz
add
aas
test
and
xchg
cmp
mov
xor
dec
or
pop
adc
fdivr
(bad)
push
mov
outs
(bad)
jno
ret
imul
cs
scas
jb
and
ret
into
aaa
mov
rcr
push
sti
xor
sbb
push
mov
or
xor
fisub
into
sbb
(bad)
fadd
jecxz
(bad)
ror
pop
dec
fs
movs
into
pop
std
addr16
push
repnz
mov
mov
movs
in
loop
mov
neg
inc
cld
out
pop
mov
mov
and
das
push
rol
mov
stos
adc
cmp
adc
mov
(bad)
dec
ja
fwait
lods
les
push
cmp
daa
aas
add
xchg
into
icebp
adc
jns
mov
cmp
into
mov
lods
mov
or
jg
adc
int3
sbb
and
add
aad
jae
into
mov
jl
sti
into
mov
push
mov
retf
sub
mov
or
test
lods
fwait
and
cmps
mov
inc
mov
shl
sub
aaa
pop
mov
in
psllq
into
mov
lods
sbb
gs
mov
shl
out
adc
ret
sbb
scas
outs
inc
cmp
xchg
jle
fidivr
into
push
sbb
push
xchg
fistp
mov
into
popa
addr16
and
add
add
push
out
into
dec
jmp
scas
into
cmps
pop
aas
sub
into
enter
sub
jmp
out
(bad)
pop
cmp
out
sbb
push
loopne
into
jg
mov
mov
cs
(bad)
dec
jbe
inc
stos
jae
mov
out
mov
leave
cmp
pop
hlt
retf
push
mov
xchg
jmp
lea
iret
ror
daa
in
call
js
je
pop
sub
jmp
push
mov
push
pop
aam
mov
cs
push
neg
movs
into
mov
mov
retf
sbb
fisubr
stc
es
pop
pop
adc
sub
sbb
xchg
into
sub
lock
xor
scas
cmps
xchg
xchg
mov
cwde
sbb
mov
push
fcomp
test
jl
xchg
mov
or
mov
xor
sbb
adc
xchg
fcmovu
call
aaa
(bad)
(bad)
mov
mov
scas
or
xchg
ror
stos
mov
out
mov
lods
test
retf
into
jnp
and
into
jge
sbb
repz
loop
in
cmp
or
sub
inc
into
ins
aad
and
into
les
int
scas
push
inc
push
into
popf
jno
cmp
mov
inc
jb
aad
clc
aaa
into
loope
pushf
mul
std
pop
mov
retf
ss
jp
shl
inc
test
leave
inc
sbb
lds
ret
inc
(bad)
jae
mov
sbb
pslld
jle
mov
call
mov
aas
loope
jle
jg
add
mov
daa
sub
es
ror
ja
inc
into
push
test
xor
jl
scas
sub
(bad)
repnz
into
or
in
popa
les
xlat
sub
sti
into
not
call
cdq
xchg
fldcw
push
lods
repnz
shl
lods
into
aad
xchg
push
int3
sbb
adc
aad
stos
loopne
xchg
pop
xchg
scas
sbb
sahf
push
stos
mov
aam
mov
sbb
daa
rcr
and
into
das
lods
sahf
test
stos
into
xchg
fld
push
cs
jo
mov
out
(bad)
out
mov
into
sar
dec
dec
mov
(bad)
in
inc
test
sbb
imul
outs
mov
mov
xchg
and
sbb
test
je
shr
ins
mov
into
bnd
jmp
mov
jno
into
ret
mov
push
addr16
mov
push
fs
out
retf
cmp
into
and
mov
in
fcomp
stos
call
into
pop
mov
call
push
(bad)
into
jno
sub
repz
sti
popa
xor
cli
leave
jmp
or
(bad)
ds
out
inc
shl
mov
outs
sti
xchg
mov
mov
or
or
out
(bad)
sbb
sbb
mov
imul
inc
loope
(bad)
and
push
adc
into
dec
iret
ja
and
add
into
sbb
adc
mov
xor
push
mov
ret
or
das
mov
push
dec
add
add
adc
loop
add
inc
lods
mov
scas
cmps
mov
enter
(bad)
daa
cmp
jns
or
sbb
mov
out
ss
cmp
wrmsr
jmp
outs
push
cmp
push
pop
sar
or
jg
std
pop
mov
push
into
sub
(bad)
mov
bound
out
pop
jnp
or
into
leave
es
cmc
mov
cmp
lods
cmp
and
sbb
mov
mov
popf
imul
dec
mov
outs
xor
into
cdq
out
retf
ja
cmps
add
xor
hlt
push
pop
repz
retf
into
pop
push
inc
mov
dec
scas
sti
aas
int
mov
les
icebp
shl
cmp
inc
or
mov
test
js
imul
dec
in
adc
outs
or
mov
ret
sub
dec
in
inc
into
lahf
xor
(bad)
and
push
out
cld
sbb
outs
(bad)
xchg
or
leave
mov
pop
push
mov
mov
inc
sti
loop
xchg
mov
fiadd
mov
(bad)
fidiv
dec
add
mov
cmp
mov
imul
int
movs
loope
into
in
xor
mov
scas
mov
adc
int
inc
and
into
cs
push
bswap
push
jl
sub
jmp
mov
xchg
mov
dec
add
inc
or
adc
add
cmc
or
jmp
je
into
mov
(bad)
scas
das
into
js
movs
xchg
cwde
pop
test
mov
mov
scas
push
xor
mov
lahf
jl
inc
sub
lea
test
pop
cmp
and
fs
into
sbb
aad
push
out
retf
scas
xchg
sahf
xchg
mov
dec
ja
out
mov
pcmpgtb
push
pop
cmps
into
ins
push
and
push
(bad)
xchg
push
imul
xor
into
mov
adc
rcr
mov
and
test
xchg
pop
aas
and
iret
sbb
rol
mov
sub
scas
jb
into
jg
clc
je
sub
push
mov
jbe
aam
pop
mov
(bad)
addr16
(bad)
mov
inc
into
pop
mov
into
repnz
jle
and
into
xor
in
inc
into
xchg
add
test
mov
sar
bound
imul
into
stc
and
arpl
dec
(bad)
movs
jbe
sub
xor
xor
pop
xchg
mov
fcom
jnp
dec
ds
in
into
mov
dec
neg
dec
repnz
push
fsub
dec
inc
ror
gs
lahf
cmps
into
arpl
adc
vmwrite
into
loopne
out
and
or
aam
pop
mov
outs
es
int3
mov
add
loop
lods
bswap
mov
inc
retf
push
mov
dec
fcom
out
inc
push
dec
mov
jl
fwait
into
pop
or
sub
ret
out
sbb
test
imul
mov
push
popa
cmp
lods
fcmovu
aam
or
sbb
fnsave
pusha
imul
push
push
sub
scas
les
into
mov
or
in
pop
(bad)
mov
test
sbb
cmp
in
scas
pop
ffree
push
data16
sbb
pop
rol
stos
nop
add
shr
jl
jno
mov
jae
arpl
xor
cs
cmp
je
sbb
aaa
sub
pop
lahf
fadd
repz
xchg
push
cmp
sub
cmp
mov
push
in
jp
ins
jecxz
test
cmp
inc
sbb
push
cmp
fisttp
cmp
or
ins
addr16
into
fdivr
mov
adc
dec
ret
xchg
inc
or
pop
cmp
mov
dec
out
sbb
into
lahf
jne
mov
rcl
into
(bad)
add
dec
sub
jae
les
into
adc
jge
mov
adc
into
and
xchg
pushf
(bad)
dec
cmp
inc
lods
gs
movs
scas
mov
cdq
mov
dec
into
rcl
add
mov
aam
std
in
jo
mov
leave
stc
sub
into
shl
bound
into
shr
or
adc
or
popf
jp
(bad)
mov
mov
and
in
xor
push
into
mov
sahf
push
inc
ror
icebp
sbb
push
ja
scas
cmps
adc
push
outs
cmp
(bad)
retf
pop
pop
push
(bad)
repz
into
cmp
neg
fstp
sbb
aam
into
inc
pop
or
popa
mov
dec
(bad)
adc
call
pop
or
dec
cmps
sub
clc
out
into
sar
sbb
xchg
imul
call
(bad)
cmp
frstor
dec
mov
lea
lods
push
imul
xchg
mov
pusha
mov
mov
aaa
cdq
pop
jg
push
into
xor
mov
into
pop
dec
fmul
imul
xchg
in
add
pop
(bad)
fxch
cli
aaa
mov
stos
nop
bound
pop
(bad)
mov
cmp
into
ds
cmp
pusha
into
push
loopne
cli
into
mov
mov
scas
out
fidivr
adc
add
es
dec
mov
rcl
pop
jmp
cmp
hlt
xchg
or
sbb
jg
scas
cwde
cmp
rcr
sbb
into
arpl
pop
popa
adc
jl
int3
je
jmp
ficomp
add
sub
mov
into
call
add
inc
mov
scas
jg
pop
jge
setne
mov
dec
sbb
stc
ror
lods
shl
(bad)
jnp
add
push
lods
lahf
xor
push
dec
or
stos
and
je
xchg
xchg
(bad)
mov
adc
int
lods
into
imul
xchg
into
rcl
loopne
jb
and
add
mov
xor
in
mov
and
sbb
into
jl
push
and
mov
mov
inc
into
add
pop
test
inc
test
into
ss
dec
jle
aaa
enter
movs
dec
test
or
cs
fild
(bad)
mov
push
mov
outs
sbb
into
push
lods
dec
je
mov
rdtsc
xor
int3
mov
test
ja
in
lods
push
or
in
cmp
lods
cmps
push
test
mov
cdq
adc
into
(bad)
mov
out
into
xchg
aad
sbb
int3
icebp
js
mov
lahf
or
push
(bad)
push
pop
movs
xchg
into
mov
xchg
js
setle
aas
sub
(bad)
into
nop
inc
daa
retf
add
xchg
xor
pusha
lods
shr
xor
push
into
mov
cs
jge
out
test
xchg
pavgw
adc
ror
ja
ret
xchg
push
xlat
test
xchg
test
dec
imul
inc
jl
mov
xchg
arpl
cmp
sbb
into
jmp
(bad)
lods
ins
xchg
cdq
in
or
gs
push
into
and
stc
xchg
or
dec
mov
xchg
mov
out
cmp
and
fst
into
push
lock
daa
push
mov
movs
sub
into
pop
sbb
ficom
(bad)
lods
cmp
and
cmp
into
arpl
adc
dec
pop
into
and
mov
xchg
jle
sar
inc
ficom
and
pop
lods
mov
or
fidiv
shr
into
sbb
sbb
aaa
cmp
fwait
shr
leave
or
xchg
inc
jg
shl
jb
or
push
addr16
movs
into
inc
fld
mov
ins
xchg
jmp
ds
or
mov
dec
push
call
bound
repz
imul
mov
ds
push
and
dec
xor
imul
rol
cmp
outs
in
icebp
fwait
iret
jns
dec
or
mov
or
xlat
ss
adc
lods
mov
xor
mov
mov
add
jmp
retf
into
jae
test
std
scas
into
adc
jb
sub
test
je
in
mov
retf
sbb
or
repz
inc
inc
mul
ror
push
pop
(bad)
out
iret
cmp
mov
stos
mov
inc
adc
xor
leave
add
mov
out
add
fst
ror
ja
shl
int
adc
sbb
jno
nop
les
retf
ss
cmc
xchg
popa
into
dec
mov
hlt
lods
pop
cli
lahf
sbb
arpl
ss
pop
xchg
jmp
cmp
pop
push
add
je
mov
and
enterw
sub
pop
inc
pop
cmp
loop
(bad)
sub
out
mov
xlat
cli
leave
xchg
dec
adc
pop
fs
and
call
inc
push
cmc
out
sub
stos
clc
add
or
and
xor
xchg
pop
sahf
cmps
mov
jbe
push
jl
in
in
push
dec
call
into
test
jp
out
push
stc
fstp
inc
inc
pop
lods
push
mov
push
es
hlt
into
xchg
ja
push
into
data16
mov
lods
mov
sbb
fcmove
mov
dec
in
adc
rcl
into
xor
cmps
push
ret
mov
jmp
inc
sbb
add
xor
out
scas
into
loopne
lods
movs
mov
fsub
mov
add
pop
ds
jl
pushf
xor
or
xchg
xchg
or
into
jnp
adc
add
aas
cmps
fcomp
pusha
xlat
into
ret
aam
mov
dec
inc
dec
inc
push
js
xchg
mov
das
cmp
arpl
out
pop
add
retf
into
or
jns
xor
mov
pushf
pusha
into
jge
pop
(bad)
xor
xor
jns
movs
jnp
into
cld
into
stc
sub
cmp
jb
retf
inc
int
xchg
inc
cli
into
fisub
aam
ja
jb
add
clc
int
cli
pushf
push
mov
stos
test
push
jle
pop
je
and
and
ror
fsubr
mov
sub
push
jle
into
in
xor
out
mov
std
loope
mov
sub
fwait
dec
jbe
sbb
fadd
xor
into
loop
retf
dec
pop
push
into
sahf
sub
fnstenvw
xchg
cdq
into
pop
mov
jle
and
into
mov
in
jecxz
(bad)
xlat
xor
dec
push
add
xchg
call
mov
dec
jl
into
lahf
aad
inc
out
int3
pop
sahf
xchg
jns
xor
(bad)
lods
mov
into
(bad)
loopne
sbb
xchg
sub
inc
scas
pop
aam
jg
(bad)
nop
ficom
daa
into
out
ds
add
movd
lods
lock
mov
fld
mov
scas
dec
jo
imul
(bad)
rcl
xchg
ror
xlat
into
mov
mov
std
(bad)
cmc
imul
into
and
push
lods
sub
sar
fmul
(bad)
les
pop
cmc
cmp
pop
ins
cmps
fs
pusha
dec
mov
jp
mov
sub
out
adc
mov
ins
lods
mov
out
sbb
pop
and
xchg
call
retf
cmp
daa
pop
test
add
data16
rcr
popa
rcl
(bad)
mov
out
into
mov
movs
mov
into
das
aad
arpl
push
dec
cs
ss
and
xchg
std
repnz
aaa
(bad)
popf
in
rcl
fxch
xor
sti
hlt
mov
stos
stos
push
lods
psubsw
xor
mov
sbb
scas
cli
ja
push
sbb
add
pop
fnstsw
lahf
and
addr16
push
inc
jne
mov
out
mov
dec
dec
mov
(bad)
repnz
pop
xchg
imul
call
adc
pop
adc
adc
loopne
fild
mov
pop
dec
sbb
inc
mov
pop
and
pop
icebp
je
fistp
lods
cmp
ss
dec
mov
pop
add
jg
ret
cmp
xchg
shr
das
jae
lahf
test
std
pop
pop
xor
xor
cmp
pop
push
and
xor
push
add
or
xchg
xchg
daa
fwait
adc
xlat
fistp
iret
mov
lods
sub
stos
out
stc
stos
aaa
push
scas
div
arpl
mov
outs
jo
(bad)
gs
retf
pop
mov
ja
sub
dec
sbb
or
fstp
js
retf
hlt
aas
into
int3
(bad)
xchg
dec
adc
add
nop
pop
popf
jne
popa
cli
pop
aas
add
int
fwait
adc
mov
sub
icebp
xchg
or
mov
cmps
jb
cmp
mov
scas
scas
jl
mov
mov
clc
(bad)
imul
outs
inc
pop
into
jl
lahf
sbb
into
jnp
xchg
std
jg
mov
xor
pop
test
add
pop
pop
call
mul
inc
pop
into
jno
imul
into
movs
jbe
mov
into
mov
mov
jp
or
add
js
pop
mov
popf
dec
ds
sahf
dec
push
inc
jmp
lahf
lods
xchg
into
mov
fiadd
fmul
fadd
xchg
stos
pop
aas
test
cli
jmp
lock
(bad)
into
pop
loop
xor
scas
dec
push
xchg
repnz
and
into
mov
je
push
cmp
cli
imul
sub
repz
ret
cs
lea
ror
add
xor
pop
or
or
into
mov
icebp
int
test
sub
or
xchg
in
cli
into
mov
inc
out
outs
and
xor
lods
imul
mov
jmp
jge
or
xor
into
add
mov
fldcw
imul
not
int
pop
outs
inc
into
push
cmp
push
into
call
clc
into
or
retf
and
lods
call
dec
dec
pop
(bad)
and
ret
jbe
(bad)
cmc
sbb
mov
inc
pop
push
out
into
pop
jbe
repnz
inc
jle
or
push
xor
lods
push
neg
loope
mov
test
adc
inc
mov
sbb
sbb
(bad)
push
into
sub
mov
retf
push
sub
into
jle
int
cld
mov
adc
jmp
add
jb
pop
xlat
dec
nop
mov
into
dec
push
mov
cdq
mov
or
fdivp
out
aad
inc
punpckhwd
lods
nop
in
in
jnp
or
jb
mov
push
movs
mov
into
bound
clc
xchg
aam
fsub
mov
xchg
cwde
nop
daa
into
hlt
jmp
add
in
dec
into
ins
je
lods
inc
in
sar
inc
out
daa
xchg
jo
add
out
xchg
mov
and
shl
cmp
ds
ret
fild
push
mov
cs
xchg
into
retf
mov
cld
in
mov
(bad)
dec
jmp
ror
test
dec
sub
int
lahf
jp
stc
sbb
mov
xor
adc
push
xor
into
push
aaa
out
test
lock
and
xor
xor
xlat
retf
or
pop
push
cld
into
aad
pop
fst
nop
movs
jne
pmulhuw
adc
xor
je
pop
movs
into
repz
mov
cmp
and
aas
into
repz
sbb
pop
ror
add
sti
xchg
pop
outs
pusha
dec
or
sbb
mov
into
jl
jmp
(bad)
jle
and
into
lock
movs
sub
mov
ret
loop
adc
pop
jno
or
iret
push
inc
lods
dec
imul
cli
dec
dec
fadd
out
ds
sahf
push
das
sub
mov
adc
les
adc
dec
out
add
mov
jecxz
cmc
les
add
cmp
adc
(bad)
cld
push
lods
into
icebp
sub
sub
sbb
xor
cmc
mov
xchg
stc
mov
jmp
pop
mov
out
sbb
cmp
(bad)
stos
ror
pop
into
jae
cmps
pusha
std
loopne
mov
sub
imul
cmp
aaa
das
not
pop
or
or
int
fwait
stos
lods
(bad)
mov
inc
dec
into
popf
popa
mov
add
add
stos
(bad)
dec
fnsave
xor
adc
mov
outs
fcomp
mov
das
ins
xor
sbb
lock
into
cmps
dec
retf
cmps
push
push
into
xchg
sahf
fbld
mov
pop
and
aad
gs
neg
adc
dec
or
outs
mov
scas
add
or
iret
xor
test
sub
jb
pop
dec
jmp
rol
jmp
stos
out
popa
imul
dec
inc
inc
leave
cwde
into
dec
rcl
test
cmp
push
into
adc
scas
into
push
rcl
out
fbstp
inc
into
test
sbb
inc
imul
cmps
jbe
lods
inc
dec
in
(bad)
or
(bad)
mov
xor
jp
les
xchg
add
mov
call
mov
imul
fidiv
adc
into
push
nop
(bad)
bswap
mov
mov
or
loopne
pop
icebp
or
in
stc
repz
hlt
inc
fisttp
push
xchg
into
jmp
push
sub
(bad)
loop
popa
fisubr
movs
(bad)
xor
jmp
into
scas
jecxz
mov
lods
out
ror
rcr
lea
int
or
ficomp
fdiv
mov
retf
(bad)
add
scas
pop
not
sar
test
out
or
xchg
or
in
adc
mov
outs
(bad)
xlat
sar
lods
push
xor
into
retf
std
inc
jmp
mov
xchg
into
fstp
aam
adc
clc
retf
and
mov
into
pop
xchg
jb
cmp
pushf
retf
xchg
mov
mov
mov
pcmpeqd
gs
fcomp
int3
sbb
inc
cli
dec
push
faddp
fcmove
push
repnz
aaa
pop
jmp
sar
sbb
shl
mov
dec
mov
into
inc
sbb
iret
fcomp
push
(bad)
retf
mov
xor
int3
mov
xor
cmp
jle
into
or
mov
icebp
xlat
nop
push
mov
div
xor
into
cdq
daa
sbb
mov
dec
inc
dec
arpl
lea
int3
cmp
push
scas
inc
ror
lahf
pop
push
fcompp
repnz
mov
loopne
addr16
movs
daa
ret
mov
sahf
add
stc
(bad)
xchg
push
loope
mul
xchg
sar
movs
mov
stos
lods
sar
push
xchg
fmul
mov
lock
mov
div
into
dec
xchg
push
fwait
outs
ror
(bad)
into
push
xchg
inc
adc
sbb
into
not
mov
int
subps
fistp
and
cmc
scas
into
clc
sti
ins
pop
fdiv
in
into
xchg
inc
aas
movs
neg
stc
ror
push
aaa
and
cs
dec
clc
loope
fmulp
push
or
in
out
into
test
pop
jno
mov
xor
ds
mov
out
data16
into
or
cld
nop
add
jl
shr
in
mov
into
rcr
call
ds
or
aas
sbb
addr16
inc
pop
sbb
push
fcom
push
xor
cmc
scas
push
pop
or
or
cmp
retf
(bad)
pushf
and
push
jecxz
or
fucomp
into
bound
or
pop
addr16
test
lods
inc
lds
bnd
into
or
and
xchg
mov
mov
test
mov
(bad)
push
pop
rcl
add
mov
dec
int3
daa
lods
test
fistp
cmp
inc
xchg
(bad)
mov
push
jno
jns
jo
into
sbb
dec
jl
jmp
inc
repz
jl
or
mov
jg
adc
lock
stos
cmp
add
into
inc
sbb
sbb
daa
mov
mov
sub
push
add
xchg
push
pop
into
bound
or
adc
in
fwait
jg
mov
popf
push
rcl
pop
xchg
jne
into
xchg
and
mov
jns
push
add
js
outs
and
push
xchg
gs
outs
pop
xor
ins
es
fs
push
leave
mov
xchg
jge
add
call
inc
pushf
ret
lods
pop
leave
lahf
mov
popa
xor
adc
sub
shr
sbb
xor
lods
dec
adc
cmps
jl
mov
test
test
sub
cmp
dec
into
lds
dec
scas
out
inc
popf
iret
outs
or
into
xchg
into
dec
add
mov
push
aaa
test
dec
inc
les
test
pop
mov
retf
xchg
cmps
xchg
cmp
adc
pop
xor
sub
(bad)
push
arpl
in
aam
ret
into
cmp
push
mov
jp
into
cmp
mov
call
pop
ds
inc
hlt
jle
scas
cmp
mov
jne
mov
scas
into
pop
jp
xchg
mov
jmp
fmul
call
movq
daa
fidiv
cmp
fsubp
jo
stc
jmp
(bad)
into
sbb
mov
into
inc
jmp
out
xor
or
into
lds
leave
into
mov
add
in
pop
jae
jno
call
imul
mul
retf
add
xchg
lahf
in
mov
push
stos
push
into
cmp
shl
sti
or
push
into
stc
ss
mov
je
xchg
clc
inc
not
add
loop
pop
into
in
mov
es
pop
mov
into
mov
into
add
pop
jb
outs
test
leave
lds
ficomp
fs
mov
push
xor
push
jmp
mov
movs
cwde
outs
mov
pop
push
ficomp
and
xchg
push
cld
dec
loope
icebp
and
mov
push
sbb
pop
jg
es
ret
dec
sbb
(bad)
in
cmp
into
popa
sub
(bad)
xor
in
lock
test
xlat
shr
mov
hlt
mov
pop
push
pop
jecxz
sbb
jnp
xor
aad
jbe
int3
xchg
fadd
inc
icebp
push
ret
lahf
mov
sub
(bad)
(bad)
dec
out
lods
push
into
cmps
sahf
sub
xchg
inc
(bad)
dec
nop
or
dec
rol
into
sbb
dec
les
ds
push
sbb
mov
xchg
retf
shl
jae
dec
ins
(bad)
push
ror
retf
out
rcr
inc
bnd
out
push
jl
ins
test
mov
in
rol
xchg
or
jbe
stos
mov
push
lock
push
inc
ins
into
sub
shl
fistp
repnz
imul
push
pop
into
xor
add
scas
xor
push
dec
scas
mov
imul
and
push
bound
retf
andnps
inc
gs
jno
(bad)
retf
out
nop
(bad)
cwde
add
pop
popf
push
scas
cmp
jno
mov
xor
lods
cs
mov
into
sbb
xchg
rcr
shr
aaa
mov
mov
add
sbb
fisub
into
push
aam
mov
into
int3
jecxz
mov
into
pushf
fnsave
adc
adc
into
jae
jns
inc
lds
into
mov
stos
jl
mov
jbe
fiadd
cld
ds
call
fcom
adc
ins
into
mov
add
into
push
dec
aad
lods
les
into
xor
or
into
sub
(bad)
xor
jns
add
sub
xchg
xchg
or
lahf
arpl
mov
push
jg
stc
sahf
cmp
inc
inc
call
xchg
jae
dec
sub
push
mov
mov
sub
sahf
or
sbb
mov
sub
mov
xlat
std
fwait
xor
mov
gs
fisubr
call
push
stos
xor
aad
xchg
xchg
xor
dec
loopne
pop
pop
outs
mov
ss
adc
stos
pop
jno
iret
mov
outs
push
xor
inc
scas
retf
mov
retf
rcl
sbb
xchg
stos
arpl
pop
(bad)
xrstors
gs
and
xchg
and
cmps
into
ins
adc
jns
xchg
hlt
add
cmps
into
popa
inc
pop
add
fcomp
sub
or
into
sbb
lds
mov
mov
outs
(bad)
jne
leave
sub
dec
push
push
jp
add
out
retf
add
xor
push
and
adc
mov
in
es
xlat
into
sti
fcmovne
sub
jnp
pop
(bad)
mov
jg
stos
(bad)
adc
outs
add
test
or
into
dec
js
fsubr
mov
dec
cmp
call
into
imul
rcr
ss
dec
mov
xchg
leave
andps
ja
jmp
in
mov
fwait
je
sbb
gs
push
into
scas
test
scas
movs
hlt
jg
into
cwde
shl
sub
pop
push
into
mov
pop
xor
jl
enter
cmps
aad
xchg
sub
lods
push
(bad)
mov
out
pop
sbb
mov
mov
into
test
push
push
lods
aad
pop
into
sub
mov
dec
cdq
dec
mov
jae
(bad)
out
scas
mov
stos
jmp
mov
ins
clc
sbb
out
jnp
popf
rol
mov
into
jno
xor
cmps
outs
scas
into
test
sub
mov
xchg
shr
ins
xchg
dec
fisubr
int
stos
or
mov
push
enter
lods
retf
clc
ror
into
adc
into
lods
cmp
sub
and
les
into
xor
pop
lods
into
repnz
dec
jle
xlat
dec
sar
into
lahf
movs
test
lock
inc
loope
cmp
lods
cmp
stos
xchg
(bad)
imul
push
outs
sbb
push
outs
imul
sub
push
(bad)
xor
das
into
mov
fnstsw
pop
and
inc
dec
stos
fistp
fmulp
mov
xchg
std
mov
into
(bad)
mov
push
jne
and
aas
xor
int3
adc
rol
scas
xchg
lahf
inc
sbb
fld
outs
loopne
rcr
mov
(bad)
fcmovnbe
and
(bad)
into
xchg
es
daa
jecxz
ret
xor
loop
push
lods
into
mov
pop
mov
into
add
add
jo
mov
scas
mov
data16
call
into
test
mov
ret
pop
scas
push
inc
data16
into
xor
not
cmp
xor
cmp
mov
dec
enter
xchg
cmc
into
inc
scas
leave
ins
cmp
add
stc
into
and
sbb
into
xor
xor
mov
jne
sbb
out
jmp
mov
fmul
into
int3
push
or
or
or
push
sti
into
xor
mov
data16
(bad)
sbb
test
(bad)
into
xor
jno
mov
lods
push
arpl
(bad)
loope
fnstcw
gs
sbb
or
shl
push
pop
sti
mov
in
jg
push
lock
test
or
jnp
xchg
fimul
into
mov
and
int
cmp
aaa
das
je
mov
mov
or
ja
retf
stos
call
dec
sub
jmp
xor
push
cli
mov
inc
cld
dec
clc
data16
jmp
mov
rcl
mov
test
sub
xchg
dec
mov
jp
jne
inc
dec
adc
adc
out
sbb
inc
loope
sub
xor
ss
icebp
pop
retf
inc
scas
mov
jg
stos
sub
mov
add
cwde
push
adc
and
leave
or
lods
inc
into
xor
sahf
pushf
add
and
jmp
inc
lea
cmps
sti
push
adc
ror
add
mov
stos
sbb
repz
(bad)
xchg
xor
adc
outs
mov
out
lahf
gs
ficomp
mov
jnp
(bad)
xor
mov
xchg
repz
mov
sbb
retf
paddsb
or
stos
fild
nop
jle
popa
mov
dec
(bad)
and
mov
ins
into
ja
push
call
into
loope
dec
adc
out
mov
add
into
enter
sub
mov
push
cmp
mov
into
fnstcw
add
into
xchg
mov
leave
arpl
into
inc
push
mov
js
fcom
fwait
mov
mov
mov
js
icebp
stos
test
sbb
int
stc
mov
mov
iret
sub
and
or
scas
repnz
mov
dec
pop
sbb
mov
js
inc
mov
mov
das
cs
pop
sbb
movs
push
pop
repz
mov
imul
ja
(bad)
in
mov
pop
and
xchg
(bad)
(bad)
jmp
lock
(bad)
pop
je
push
scas
or
call
movs
into
loope
rcr
ins
cld
leave
push
adc
in
mov
adc
into
mov
movs
cmps
into
adc
ins
lods
loop
mov
das
jb
mov
fs
push
adc
cld
jle
cmp
sub
dec
xchg
(bad)
add
into
and
dec
sub
retf
sub
test
or
into
jne
xor
rdmsr
scas
or
and
pushf
mov
into
int
cmps
clc
inc
mov
into
pop
sub
mov
imul
pop
shl
xor
dec
mov
sub
sub
dec
into
nop
or
push
sbb
dec
inc
shl
fld
mov
psubw
test
into
mov
loope
into
or
out
movs
mov
mov
sbb
pushf
and
and
sub
outs
dec
(bad)
shl
div
sbb
sub
inc
mov
mov
mov
jmp
into
xchg
xlat
push
lock
movs
jg
outs
xchg
sub
push
cdq
jle
je
into
fsub
mov
aad
jbe
clc
int3
pusha
push
fld
adc
ret
lahf
in
sbb
loopne
std
cmp
movs
stc
xor
iret
into
popf
push
aas
aam
in
(bad)
into
xchg
js
daa
call
sub
dec
pusha
pusha
out
lods
push
cmp
sbb
mov
jo
pop
cmp
xchg
pop
(bad)
dec
jg
mov
shl
sub
pop
(bad)
outs
push
rcl
and
stos
test
mov
mov
pop
add
cmp
add
lods
or
push
jmp
into
pop
ins
add
inc
jae
and
cli
mov
cld
inc
aaa
sub
dec
sbb
jne
push
inc
out
ins
inc
ffreep
inc
pop
jmp
add
or
pop
adc
shl
mov
pop
or
nop
sub
pop
ins
push
shl
repz
xchg
test
mov
and
dec
sar
xor
xchg
fmul
pop
jo
mov
mov
cmp
jg
or
pushf
jnp
into
ficom
es
sbb
into
sbb
jg
mov
into
(bad)
inc
adc
or
mov
pop
sub
popf
nop
mov
mov
jmp
into
mov
cli
fcomip
add
cwde
ret
retf
shr
stos
das
fistp
fcom
mov
cmc
jb
add
mov
les
sahf
push
cmp
into
(bad)
adc
std
icebp
mov
sti
into
jns
or
push
sub
js
ss
into
mov
mov
pushf
into
push
mov
cmp
hlt
std
test
fmul
sub
into
inc
ret
bound
pusha
sub
mov
mov
fwait
sahf
scas
sti
into
cmps
gs
les
iret
popa
pop
adc
and
pop
stos
xchg
ret
cld
test
nop
cwde
pop
xor
aaa
or
sub
(bad)
ret
gs
mov
mov
repnz
adc
into
adc
mov
pop
push
push
mov
mov
dec
ss
dec
fbld
fmul
xchg
pop
mov
ins
jmp
push
mov
inc
ror
push
xor
adc
into
pop
sahf
dec
adc
into
inc
xlat
adc
mov
into
sub
lock
in
push
scas
into
lds
pop
adc
loop
test
outs
pop
lods
jmp
xchg
dec
adc
adc
test
in
into
js
enter
mov
dec
retf
mov
test
xor
cmps
add
jbe
imul
or
mov
jp
out
add
lods
jl
sub
ds
scas
mov
loopne
pop
inc
inc
test
into
cmp
xchg
into
movs
dec
inc
icebp
push
fimul
into
mov
fsub
ror
adc
dec
nop
(bad)
sub
je
mov
dec
mov
movs
xsaveopt
outs
cwde
inc
pop
mov
into
push
stc
sbb
ss
jl
ds
or
scas
inc
xor
xor
add
mov
pop
inc
mov
dec
xor
mov
cmps
clc
dec
mov
jbe
into
pop
pushf
cwde
adc
push
jne
and
dec
jg
jmp
mov
leave
or
mov
mov
enter
jo
jge
and
ret
lods
sub
out
jbe
xchg
mov
(bad)
int
into
cmps
fwait
inc
sub
mov
dec
jae
pop
jb
mov
into
clc
pop
inc
fstp
inc
dec
mov
mul
ud0
scas
pop
lahf
into
mov
outs
ds
cmps
test
mov
mov
push
in
jb
xchg
lods
scas
hlt
loope
push
cli
paddw
pop
cmps
sbb
addr16
es
into
push
sbb
xor
jne
sub
inc
adc
mov
pusha
jg
int3
rcl
or
mov
std
xlat
ret
mov
(bad)
mov
and
cmp
pop
out
(bad)
jo
aad
mov
and
lahf
mov
iret
mov
(bad)
adc
sbb
fisttp
dec
add
sub
into
sahf
cmps
enter
jecxz
mov
xchg
push
into
daa
in
inc
mov
xchg
or
lods
xchg
mov
xchg
xor
mov
mov
into
ins
das
cdq
dec
js
in
into
shl
and
shl
add
lea
sbb
mov
not
into
jg
movs
ins
xor
fistp
inc
jmp
aam
ins
adc
fwait
gs
pop
or
into
mov
imul
xor
ror
jne
pop
sbb
in
gs
push
(bad)
pop
das
movs
and
sub
inc
fnsave
test
repz
pop
adc
mov
(bad)
adc
push
push
push
jnp
jbe
pop
repz
mov
test
and
sbb
aaa
into
jne
inc
rol
or
fsubr
sbb
into
cs
arpl
into
xor
mov
mov
sbb
dec
lds
loope
sub
into
adc
rol
jg
fstp
mov
pop
adc
jbe
into
in
outs
xor
inc
sub
shr
cli
adc
push
sub
lods
xchg
stc
das
and
push
cmovbe
call
rol
xor
pop
dec
xchg
into
fnstenv
adc
dec
into
(bad)
aad
mov
push
inc
into
jns
popa
cmp
test
fisttp
fs
xchg
lods
int3
into
mul
mov
movs
mov
sar
jb
mov
mov
test
cs
pop
mov
jne
sub
mov
sub
xor
out
or
mov
stos
cmps
in
scas
jge
popf
rcr
(bad)
xchg
push
out
or
cli
mov
in
out
mov
or
mov
outs
lds
and
nop
into
loopne
adc
cmp
sbb
push
mov
retf
stos
push
hlt
out
xor
into
and
ffreep
sbb
xor
pop
repnz
mov
mov
mov
ss
pop
in
pop
inc
in
push
mov
push
retf
iret
cmps
nop
test
pop
sub
bswap
mov
push
dec
sar
and
lds
scas
fnstenv
cmp
enter
mov
jne
out
push
jno
in
push
jnp
xchg
inc
cmp
sub
add
je
gs
pop
xchg
xor
dec
ret
and
cmps
into
imul
sub
sub
sar
mov
jp
mov
sbb
(bad)
into
(bad)
adc
dec
fidivr
xlat
(bad)
sbb
hlt
mov
dec
push
inc
or
pop
mov
cmp
dec
push
or
fcmovb
rcr
in
das
cli
fmul
push
pop
jle
loop
jmp
lock
jge
cmps
fisub
xor
call
mov
sub
pop
push
dec
scas
cmc
jl
mov
mov
mov
daa
lea
scas
bound
pop
out
neg
mov
into
pop
ret
sub
in
pop
xchg
into
out
rcr
push
test
jb
mov
push
or
into
mov
retf
or
das
(bad)
std
push
fnstcw
mov
call
not
aaa
xchg
out
push
(bad)
into
outs
stos
aas
cmp
fcmovne
test
test
aad
icebp
mov
push
cmp
jb
pop
into
fdivr
cdq
pusha
mov
es
pop
xchg
(bad)
jp
sub
and
out
mov
inc
jmp
nop
test
fst
jle
mov
jg
test
dec
or
push
loope
movs
add
mov
in
dec
scas
es
ficom
sbb
push
xchg
push
(bad)
pushf
mov
call
push
jl
and
sub
mov
fisub
mov
aam
out
imul
sub
mov
mov
mov
dec
scas
into
jmp
pop
cli
jae
jbe
mov
fst
lds
into
cmp
xchg
scas
add
(bad)
cs
mov
xchg
push
pushf
daa
adc
sub
jp
xchg
out
into
xor
bound
cmp
loopne
es
aas
jo
pop
shr
lock
push
dec
jno
ins
rcl
xor
ret
or
pop
add
repz
out
not
or
xchg
imul
lods
repz
(bad)
(bad)
jmp
push
outs
cmc
mov
dec
mov
shl
mov
and
outs
neg
ret
inc
push
into
cmps
xor
mov
mov
jne
repnz
(bad)
push
into
mov
dec
mov
and
add
retf
sub
dec
pop
cmp
nop
xchg
sbb
jmp
(bad)
hlt
jb
push
dec
(bad)
jno
rcr
xor
scas
sar
into
cdq
cs
mov
pop
add
mov
pusha
sbb
fsubr
adc
sti
into
lods
and
mov
push
(bad)
into
test
sbb
(bad)
ffreep
add
into
ds
retf
and
xor
into
or
(bad)
fnstcw
adc
push
ja
push
inc
inc
adc
mov
clc
test
mov
into
sub
lahf
xchg
xchg
cld
into
icebp
sbb
mov
push
out
das
mov
cs
(bad)
pminub
adc
into
push
adc
(bad)
arpl
add
mov
cmp
mov
push
dec
jns
jg
sbb
dec
into
pop
sub
jmp
ss
fnstenv
scas
fdivr
cmps
dec
cmp
jne
push
fcmove
xchg
add
ja
jae
dec
into
stc
std
neg
xchg
add
(bad)
mov
clc
bound
xor
mov
mov
or
add
(bad)
je
iret
mov
push
loope
in
mov
stos
fisub
enter
xor
mov
into
dec
pop
aaa
gs
cmp
lds
dec
mov
xchg
mov
dec
sbb
cdq
cmp
jmp
push
ds
aaa
dec
adc
(bad)
repnz
mov
pop
or
into
push
popa
cmps
jb
and
mov
adc
push
mov
out
in
dec
pop
push
mov
outs
sub
dec
enter
push
mov
ja
xor
and
push
in
out
cmps
mov
ror
push
into
lds
push
lods
bound
mov
(bad)
js
popf
into
(bad)
pop
dec
jge
xor
into
cmps
mov
push
mov
lock
mov
pop
call
pop
ret
sbb
inc
rol
(bad)
ds
and
push
inc
mov
jae
jecxz
into
imul
xchg
iret
(bad)
in
sub
jne
cmp
into
(bad)
stos
call
(bad)
into
xchg
je
pop
cwde
loop
retf
into
mov
sub
push
inc
lods
les
lock
adc
push
mov
into
jge
push
dec
mov
xor
pop
iret
(bad)
xchg
jo
lods
out
jmp
pop
ja
gs
call
lods
mov
in
push
out
mov
inc
rcl
lock
cmp
mov
and
cmp
ins
test
push
pop
jnp
out
fild
ret
sahf
jge
sub
xor
pop
cmps
test
ins
cmp
or
(bad)
fcomp
xchg
mov
xchg
into
mov
outs
pop
xlat
inc
lods
inc
(bad)
cs
cld
push
(bad)
jb
dec
sbb
clc
aad
push
pushf
test
loope
stos
sub
fwait
pop
dec
into
shl
and
mov
push
dec
fadd
lods
inc
mov
into
ds
push
mov
xor
into
dec
jle
dec
shl
cmpps
retf
into
jno
sub
test
mov
ret
and
ret
es
fisttp
cdq
push
into
repnz
fisttp
int3
(bad)
into
mov
fs
mov
add
shr
test
adc
in
jg
xlat
push
adc
xchg
pop
pop
pop
cdq
into
mov
pop
mov
into
add
cs
mov
popa
lahf
inc
xchg
pushf
and
hlt
ss
inc
fldcw
movs
mul
push
push
into
daa
movs
lea
rcr
into
je
jmp
inc
daa
into
jle
add
not
std
lods
jns
xlat
mov
inc
and
jae
xor
out
push
dec
xchg
jno
dec
leave
cmps
sar
jne
jg
sbb
push
xchg
call
fisubr
cdq
xchg
arpl
std
cmp
mov
jmp
dec
mov
into
retf
enter
out
aas
into
sub
stc
or
out
into
xor
ret
js
div
lods
dec
cmps
push
mov
test
into
pop
out
xor
(bad)
lock
call
test
sbb
pushw
nop
test
pop
xor
push
outs
dec
mov
into
fstp
push
sbb
test
repz
cmp
ret
cs
pop
and
sbb
ins
sbb
scas
(bad)
mov
xchg
loop
push
into
(bad)
jge
test
push
adc
adc
and
int3
in
into
popa
mov
int
xor
into
xchg
fucom
mov
mov
das
addr16
add
push
jl
adc
cmc
rcl
sahf
dec
inc
imul
(bad)
in
out
das
psubb
mov
out
xor
push
xor
outs
add
int3
dec
test
sub
les
imul
into
inc
sub
cmp
xchg
ror
out
or
push
sub
push
outs
xchg
lods
cmps
dec
into
xor
sbb
into
fstp
ss
inc
sar
and
inc
out
jae
mov
std
jg
out
mov
cwde
(bad)
jg
iret
sub
ds
bound
inc
movs
sub
sub
inc
or
cli
(bad)
fwait
mov
add
popf
xor
iret
test
pop
mov
repnz
fsubr
into
xchg
xlat
xor
out
mov
outs
mov
push
mov
pop
inc
ror
into
sysenter
rcr
adc
xchg
cmp
test
lahf
cwde
push
addr16
xchg
pop
dec
dec
push
dec
fisttp
movs
loopne
test
bound
inc
into
sti
popa
ret
stos
cmp
fcomip
lods
into
push
(bad)
clc
dec
push
pop
or
cmp
call
stos
enter
into
sub
add
mov
mov
lds
out
push
cmp
mov
mov
outs
push
into
gs
push
sbb
(bad)
mov
icebp
lods
add
cmc
cmc
dec
pop
aam
jecxz
push
das
fistp
pop
push
xor
xchg
jbe
enter
into
xor
fdivr
jp
push
sbb
jg
scas
inc
push
mov
or
push
daa
hlt
sub
scas
push
inc
xor
shl
imul
test
into
fisubr
jp
in
int
scas
fsub
std
cmps
adc
or
mov
fisubr
jg
loop
dec
xchg
scas
mov
outs
movs
ss
jo
cwde
push
cs
mov
es
push
in
jae
ret
lods
jl
mov
or
in
lea
or
adc
stos
pop
push
into
aaa
and
sub
ins
ja
jp
test
les
aaa
xchg
dec
out
mov
mov
sbb
jl
push
lods
shr
or
xchg
jnp
mov
jge
cmp
das
aad
pusha
test
lds
xchg
mov
adc
sbb
or
into
pop
icebp
xchg
inc
out
pushf
sahf
mov
push
mov
or
mov
adc
pushf
scas
and
stos
and
xchg
fidivr
into
call
and
dec
scas
cmps
(bad)
push
loopne
mov
into
es
pop
test
das
add
into
push
hlt
pop
xor
test
aam
xchg
or
loope
ret
push
mov
into
adc
push
cwde
mov
pop
inc
into
pop
sbb
push
stos
mov
sub
xchg
xor
into
cmp
repnz
and
into
xor
in
dec
add
in
scas
jnp
xlat
push
adc
test
xchg
mov
jb
ss
fdiv
into
add
mov
jg
xor
into
add
dec
mov
push
fldenv
dec
loopne
add
sub
push
lods
stos
sahf
and
inc
(bad)
cdq
sbb
scas
mov
dec
(bad)
pop
adc
es
inc
imul
into
mov
sbb
into
out
mov
cmps
sub
cmps
and
(bad)
mov
lock
cli
div
push
into
test
inc
mov
into
jmp
out
xchg
pop
push
push
into
and
sub
lods
mov
pusha
je
nop
(bad)
cmps
cmp
stc
sar
sub
mov
jle
sbb
jmp
xchg
movs
inc
(bad)
jbe
xor
cmp
sbb
pop
mov
mov
into
pop
test
xchg
inc
sbb
cwde
pop
nop
lods
into
add
stc
into
dec
mov
repz
idiv
iret
cs
imul
fs
sbb
dec
jle
aaa
and
(bad)
shl
sub
fsub
push
out
mov
ror
or
add
or
test
sti
cmps
sbb
into
xor
stc
rol
mov
cmp
or
jle
sub
mov
outs
sub
push
push
into
cli
mov
pop
xchg
cmps
test
sub
jecxz
dec
movs
xor
je
pop
loopne
cdq
adc
test
xchg
adc
aaa
aas
add
mov
dec
aad
mov
popa
into
cmp
call
in
icebp
adc
stos
ret
sbb
into
pop
dec
sub
into
fwait
shr
mov
xor
popf
push
rcl
jae
into
xor
std
sub
imul
push
jge
pop
aaa
fidiv
xchg
sub
xchg
into
or
sub
cmps
mov
jmp
scas
repnz
js
add
lods
xor
sbb
popf
outs
in
outs
outs
bound
pop
scas
test
jle
dec
add
sbb
into
(bad)
and
mov
push
push
iret
xchg
add
scas
jmp
xor
retf
into
pop
sahf
sbb
popa
(bad)
jmp
adc
into
in
leave
push
pop
mov
dec
sbb
cwde
sbb
cmp
scas
xchg
enter
sub
push
aaa
test
cmps
into
lds
je
mov
inc
stos
out
imul
and
push
out
xor
mov
inc
mul
xchg
add
mov
iret
xchg
pop
cmc
dec
data16
sub
mov
pop
push
rcr
jbe
dec
aaa
in
push
inc
mov
jmp
(bad)
cli
mov
sbb
int3
mov
inc
shr
shr
push
cs
cmp
cmps
into
mov
call
iret
(bad)
ss
into
fdiv
jnp
into
lss
mov
js
lock
cdq
je
rcl
scas
sbb
jge
and
add
mov
mov
pop
xor
jl
into
sub
sbb
(bad)
les
add
mov
mov
cmp
addr16
mov
jmp
cmps
pop
and
sub
mov
sub
out
push
mov
and
cmp
sub
sub
jge
jle
xor
or
jmp
xchg
into
lahf
test
xchg
inc
shl
sub
inc
add
repz
addr16
jb
lock
clc
push
into
sbb
sub
aaa
into
ins
fwait
mov
repnz
mov
pop
popa
adc
inc
add
into
inc
ret
test
je
into
repnz
leave
jle
pop
xor
xor
adc
into
xchg
fcom
jge
push
push
test
in
cdq
sbb
mov
imul
add
or
mov
add
xor
lds
or
aad
(bad)
in
(bad)
cmp
retf
test
or
cmps
into
or
in
jbe
aad
hlt
into
push
int3
xor
into
push
lahf
aas
sub
mov
(bad)
mul
xchg
into
lahf
cmc
(bad)
sahf
dec
stos
fcmovnbe
sub
pop
je
mov
daa
add
xor
test
(bad)
mov
add
setle
out
into
inc
push
xor
lods
push
outs
into
jo
movs
cmc
out
add
movs
aam
into
and
rcl
into
jg
ret
loopne
fcmove
xchg
fadd
sbb
or
mov
sub
lahf
fild
and
scas
jbe
into
cmc
push
jo
ins
cmps
sub
into
pusha
adc
sbb
stc
call
ret
out
pop
xor
pop
into
in
sub
aas
aaa
stc
push
out
shl
arpl
addr16
retf
or
test
pop
fwait
popa
outs
xchg
(bad)
pop
imul
sub
push
pop
push
jno
mov
sub
arpl
loopne
les
push
shl
into
stos
inc
aaa
imul
(bad)
cdq
into
jg
gs
fisub
into
mov
std
iret
movs
or
and
jecxz
sub
fcomip
jbe
pop
into
push
push
adc
pop
lods
cmc
test
jp
mov
into
jge
inc
mov
in
jmp
xchg
jmp
or
dec
into
mov
js
das
fcom
mov
mov
into
adc
mov
test
dec
daa
mov
cmp
(bad)
ss
leave
test
clc
jns
push
rcr
mov
dec
mov
mov
jecxz
pop
retf
and
push
in
mov
mov
ror
iret
dec
add
int3
aam
mov
(bad)
out
icebp
loope
mov
fxch
bound
ror
ret
pop
mov
sub
or
outs
xor
std
or
dec
pusha
cmps
xor
lahf
or
inc
js
into
mov
lock
mov
jnp
xor
lea
mov
push
into
sbb
dec
cmp
pop
cmp
mov
ins
adc
sar
mov
xchg
retf
cmp
mov
into
push
outs
jno
dec
pop
pop
pop
into
adc
(bad)
std
xchg
popa
into
sbb
les
adc
(bad)
std
out
mov
imul
dec
sbb
test
into
mov
enter
pop
sub
and
push
ss
mov
out
cmps
dec
pushf
xor
into
xlat
sbb
pop
ja
lds
xchg
mov
stos
inc
ins
jns
mov
test
add
out
lods
xor
call
and
pop
push
jnp
scas
and
mov
outs
in
cmp
inc
cmc
jmp
jp
jbe
into
add
pop
into
ret
mov
iret
push
ds
lods
push
hlt
lds
push
cmp
into
iret
shr
pop
test
mov
mov
lods
in
hlt
sub
fadd
or
into
pop
retf
dec
seta
jmp
stos
mov
sub
(bad)
fs
cld
movs
into
push
xor
mov
repnz
pop
pop
mov
push
jne
data16
xchg
push
pop
adc
pop
fwait
push
fistp
mov
pushf
shr
pop
dec
fimul
leave
mov
(bad)
repnz
das
cmc
or
adc
or
ret
into
and
std
xor
cvtpi2ps
push
imul
or
ja
mov
jl
xchg
push
or
adc
jmp
call
jb
in
clc
into
ins
dec
mov
stos
into
or
scas
mov
or
sub
and
mov
(bad)
mov
inc
pusha
push
sbb
outs
mov
scas
xor
mov
das
lock
loope
push
lods
and
mov
fistp
(bad)
adc
jo
sbb
in
xchg
ror
imul
push
mov
xor
xchg
cmps
lahf
and
aas
fdiv
jl
dec
imul
pop
jmp
jns
into
xchg
cmp
test
aad
jo
stos
int3
in
fmul
sub
ffreep
cmp
xchg
(bad)
mov
movs
inc
scas
add
movs
retf
mov
into
aam
jb
(bad)
fwait
iret
mov
daa
pop
sub
xor
imul
into
mov
inc
push
test
stc
xchg
cwde
jo
xor
lods
out
gs
dec
push
daa
jno
rcl
jae
ret
and
test
neg
ror
sbb
xchg
fist
lods
gs
test
xchg
mov
and
imul
scas
push
dec
fadd
mov
into
inc
xor
push
mov
jne
cmp
out
pop
into
nop
(bad)
pusha
mul
and
pop
shr
stos
jne
into
xchg
jno
pop
(bad)
cld
data16
mov
jge
nop
outs
arpl
push
ret
pop
daa
mov
int
add
(bad)
fidivr
push
jp
sbb
scas
mov
into
sbb
sti
nop
mov
(bad)
or
inc
mov
cmps
inc
sbb
sbb
xchg
idiv
adc
test
fnstsw
into
rcl
jnp
fisub
push
dec
retf
int3
add
xchg
repz
les
movs
mov
pop
sub
dec
mov
add
adc
mov
bound
dec
push
enter
shr
into
push
(bad)
scas
jae
icebp
cmps
cmp
das
jns
inc
popf
sbb
and
js
xchg
pop
ss
mov
outs
mov
scas
jp
mov
scas
test
fs
ins
mov
sbb
fwait
xor
mov
lock
fs
and
push
(bad)
into
ror
hlt
loopne
or
out
(bad)
fld
cmps
mov
and
clc
iret
cmps
push
imul
(bad)
out
dec
fcomp
sti
xor
repz
mov
outs
repnz
outs
adc
ja
pop
add
lods
sbb
sbb
mov
into
or
mov
adc
repnz
movs
fstp
imul
(bad)
pop
mov
adc
jg
cdq
popa
cmp
jb
or
adc
scas
push
or
mov
lods
cmps
mov
or
mov
or
retf
cmp
scas
mov
pop
dec
cmp
out
cs
outs
mov
cmc
leave
into
push
fnstcw
push
into
adc
add
mov
das
aad
js
ror
scas
pop
pusha
cmp
fdivr
into
ud1
cmp
les
icebp
add
fucomi
or
dec
sbb
sbb
mov
jp
test
add
addr16
in
into
mov
cli
sar
add
mov
push
jecxz
mov
dec
je
imul
jg
in
jle
ja
orps
adc
pop
xor
(bad)
jmpw
sub
cmc
cli
int3
je
xchg
pop
add
or
int3
and
cwde
into
enter
jo
sub
adc
mov
and
push
xchg
into
xchg
test
lea
jae
retf
dec
mov
mov
sub
into
loope
xchg
daa
mov
rol
into
popa
mov
cmc
out
xchg
xchg
fadd
into
test
into
popa
push
in
jnp
(bad)
pop
push
mov
ffreep
(bad)
xor
popf
add
test
mov
(bad)
and
(bad)
xlat
mov
inc
mov
dec
loopne
push
outs
out
scas
jb
mov
jl
stos
and
into
aad
mov
into
aam
inc
sub
out
inc
into
mov
mov
inc
sbb
mov
jecxz
addr16
inc
jle
mov
cmp
mov
loope
popa
into
pusha
test
(bad)
mov
lea
sbb
push
ja
inc
cli
adc
xchg
and
pop
call
and
aaa
in
mov
and
loopne
pop
xlat
sbb
fwait
test
xor
cdq
xchg
mov
xchg
dec
mul
movs
aad
in
adc
jnp
mov
inc
sbb
adc
into
or
lods
pop
movs
into
lock
pop
xchg
sub
inc
jbe
mov
adc
pushf
nop
dec
les
mov
adc
je
into
lods
cmp
jnp
push
inc
fidivr
mov
into
lahf
push
out
leave
pop
adc
dec
cs
shl
mov
cmp
dec
test
xchg
xchg
inc
jle
mov
pop
jge
cmp
mov
xor
cmc
mov
mov
ins
sbb
pusha
push
lea
aas
ss
add
mov
mov
fsubr
inc
dec
(bad)
in
sub
mov
iret
fucomi
adc
test
data16
outs
mov
les
ss
dec
into
sub
push
out
jno
into
enter
sti
adc
into
jmp
inc
lods
inc
mov
(bad)
adc
out
into
sar
sbb
stos
mov
cmp
or
and
ficom
pop
cs
dec
out
jbe
sbb
fld
cmp
into
ins
or
xchg
mov
xchg
into
jmp
es
cli
push
test
into
out
cld
rcr
rcl
sbb
mov
into
cli
pusha
adc
into
popa
add
jge
dec
out
mov
pop
shl
test
loop
(bad)
je
mov
into
jns
loope
sbb
lods
inc
into
sub
mov
lods
jnp
scas
loopne
xor
enter
lds
retf
int
add
enter
mov
into
std
and
scas
mov
mov
push
clc
pop
cmps
sbb
sub
push
into
or
dec
cmp
xchg
call
popf
out
repnz
mov
or
pop
push
into
ss
ret
mov
mov
dec
xor
mov
xchg
into
outs
pop
add
gs
into
pop
mov
ret
lock
adc
(bad)
sbb
leave
shl
pop
into
inc
retf
test
push
pop
into
dec
xor
hlt
fisttp
xor
(bad)
test
push
sub
push
into
push
jb
push
outs
sbb
dec
into
sbb
shl
in
or
mov
or
cmc
push
push
cmp
xchg
lds
ds
cmps
out
or
mov
push
leave
sub
push
push
into
lahf
sub
push
inc
xor
inc
into
mov
ins
mov
cmp
add
js
pop
sub
into
and
in
mov
pop
sbb
daa
jbe
sbb
in
xchg
pop
movs
mov
mov
add
les
and
into
sbb
scas
cmp
mov
push
into
daa
iret
dec
mov
rcl
xlat
cli
ficomp
fmul
add
out
jmp
mov
add
test
jmp
push
fwait
mov
into
inc
dec
inc
loop
or
scas
lods
push
call
(bad)
cwde
or
dec
mov
lahf
adc
(bad)
push
loopne
cdq
outs
pop
or
jo
mov
into
or
outs
add
aad
call
or
adc
sub
test
into
mov
pop
or
out
fld
rcr
mov
dec
(bad)
jnp
xchg
lods
rol
adc
jge
lods
xor
dec
xor
out
sar
mov
dec
not
cmp
int
fstp
add
scas
add
aad
call
je
out
mov
push
jle
mov
mov
fild
jo
into
inc
(bad)
mov
enter
xchg
fild
jl
test
mov
into
(bad)
jle
mov
into
mov
xchg
ja
xchg
mov
loope
dec
outs
test
das
and
sbb
dec
icebp
test
imul
lea
gs
dec
xchg
stc
mov
retf
jge
mov
aaa
push
xor
inc
sbb
in
mov
das
sub
dec
test
into
movs
cdq
inc
xchg
adc
dec
into
jns
iret
out
int3
into
(bad)
push
rol
gs
into
push
aam
fld
pop
loopne
lds
in
xchg
into
push
(bad)
lock
(bad)
clc
out
into
jne
ss
popf
js
daa
into
xor
dec
into
dec
leave
and
mov
inc
jb
nop
mov
jo
into
jmp
daa
push
arpl
outs
fucomi
into
jmp
loope
mov
xchg
mov
sti
test
jno
neg
xchg
ins
xchg
into
sub
cmp
cmc
in
mov
mov
add
mov
or
mov
pusha
imul
cmp
stc
movs
sub
ret
(bad)
mov
lea
add
addr16
push
mov
(bad)
lods
push
and
sahf
(bad)
into
int
jne
call
push
(bad)
push
and
arpl
(bad)
xor
lods
push
shr
push
test
jno
adc
mov
arpl
into
inc
imul
and
sbb
stos
cwde
aaa
pop
push
(bad)
fcomp
lock
into
icebp
pop
or
lods
bound
or
test
into
cmc
fidivr
jae
sbb
enter
push
jg
(bad)
fidiv
adc
or
scas
addr16
test
jae
clc
push
gs
push
into
inc
jmp
mov
into
adc
cld
inc
into
xor
add
aas
adc
jle
mov
daa
dec
iret
dec
pop
xor
stos
(bad)
retf
cmp
test
popa
(bad)
cmp
icebp
jns
pop
fs
test
sbb
adc
sub
loop
icebp
lods
dec
fcmove
mov
movs
or
repnz
fiadd
jle
jae
icebp
ss
into
int3
or
mov
nop
cmps
mov
fdivp
dec
sub
out
imul
sar
fwait
xchg
es
cmps
lods
or
iret
imul
stos
pop
into
adc
js
repz
into
mov
lds
into
adc
mov
jnp
ja
fadd
adc
test
ds
mov
adc
push
repz
dec
sahf
mov
lods
fild
adc
loop
bound
push
into
popa
je
dec
and
or
retf
jp
add
push
pop
rcr
dec
sbb
mov
cmp
mov
das
inc
je
cmp
ja
stc
cmp
out
in
pop
push
outs
popa
outs
cmc
leave
and
je
push
jl
push
push
mov
cmp
inc
sub
mov
dec
add
mov
into
cmp
xor
into
and
push
imul
xchg
jbe
comiss
jecxz
pop
stos
jmp
pop
xor
int3
into
data16
jp
and
push
and
ds
pop
hlt
lods
dec
xchg
mov
push
(bad)
inc
lods
adc
sbb
and
mulps
jns
mov
fwait
gs
fmul
push
adc
icebp
into
mov
mov
into
lock
cmp
mov
loop
xchg
scas
mov
ja
mov
dec
and
mov
and
cmp
xor
jmp
cwde
xchg
push
dec
jl
cdq
in
idiv
loop
into
pop
push
retf
call
mov
into
dec
aad
push
push
pop
or
ret
inc
mov
dec
mov
test
jge
mov
shl
fcom
or
outs
repnz
inc
lods
cmp
neg
jno
mov
xchg
jbe
xor
leave
imul
xchg
adc
push
mov
(bad)
adc
mov
mov
test
fwait
xor
jb
retf
cmp
and
xchg
push
pushf
xor
dec
stos
jmp
cld
sub
adc
ror
mov
into
push
add
repnz
xor
jle
outs
inc
xor
test
aad
xchg
in
mov
sub
das
adc
into
mov
sbb
push
cmp
das
neg
xchg
out
nop
mul
into
jecxz
in
jp
int
into
sbb
out
mul
jnp
xchg
js
fcomp
mov
sar
aad
pop
push
int3
aas
inc
cmp
pop
and
shl
fld
lods
into
push
loopne
rcr
xchg
into
repnz
aam
and
push
daa
vshufps
lods
mov
bound
pop
lock
mov
aad
outs
popa
sbb
jo
dec
xor
mov
fimul
mov
retf
ror
lods
pushf
rcr
je
ret
dec
push
jg
inc
into
test
cli
ror
mov
stos
mov
inc
mov
xor
mov
les
jmp
stos
popf
ins
jp
clc
pusha
cdq
mov
addr16
(bad)
jle
fisubr
ret
(bad)
out
xor
movs
aam
stos
ds
jne
into
push
in
out
rol
lss
aas
and
jns
fild
cmps
into
pop
push
loope
push
ret
pop
aas
aam
nop
mov
mov
cmp
cli
scas
push
add
jno
and
std
arpl
dec
cs
lods
and
ins
aas
adc
popf
into
nop
mov
fdiv
push
addr16
imul
std
push
stos
into
addr16
movs
aam
into
(bad)
pop
nop
sbb
leave
addr16
jecxz
xor
(bad)
push
lock
or
push
addr16
into
imul
mov
enter
dec
cli
mov
mov
jb
mov
sbb
das
dec
mov
push
in
adc
ds
xor
into
add
arpl
fsub
mov
fwait
cmp
mov
dec
and
push
stos
mov
pop
sbb
push
cs
sub
jmp
lods
fcom
lods
push
push
pop
mov
jg
mov
cmp
test
mov
call
into
std
xchg
retf
ds
dec
sub
mov
pop
iret
pop
mul
aam
into
sub
or
mov
cli
jl
cmps
push
sbb
popf
sub
and
push
mov
stos
aam
xchg
mov
call
cld
adc
push
ficom
push
nop
adc
push
ja
cmp
pop
and
jmp
retf
push
ret
call
into
jae
int
in
xchg
mov
fmul
into
fisttp
adc
sar
push
or
xchg
sar
pop
iret
cmps
mov
into
sbb
sub
xlat
push
fidivr
leave
lahf
mov
dec
cmp
xchg
int
xchg
outs
and
leave
das
mov
push
pop
or
dec
inc
sar
mov
repnz
fs
mov
lods
or
mov
pop
jge
in
imul
out
aas
lock
dec
(bad)
aas
pop
pop
adc
push
add
inc
jg
mov
(bad)
fcom
sbb
or
into
outs
jns
push
mov
out
imul
sub
fisubr
jo
into
iret
jae
push
fnstenv
or
test
adc
xor
je
into
cs
dec
setae
movs
fs
test
aas
mov
out
mov
mov
das
pop
add
outs
lods
add
in
loope
aad
cdq
mov
hlt
dec
inc
push
mov
fild
xor
mov
mov
mov
outs
out
test
xchg
sbb
ins
into
shr
inc
into
add
jle
mov
cmps
jmp
scas
pop
loopne
xchg
out
jb
retf
into
mov
scas
jnp
inc
into
ds
mov
mov
sub
(bad)
popa
adc
pushf
mov
push
cli
mov
into
cwde
sub
mov
cmp
mov
inc
repz
test
into
push
xor
data16
jle
into
and
ins
cmp
test
into
mov
xchg
pop
(bad)
mov
xor
mov
das
icebp
sbb
push
call
xchg
sub
into
sub
jecxz
aas
mov
into
rol
xchg
sbb
into
xchg
or
or
xlat
fmul
sub
div
xor
xchg
ror
push
loop
fild
out
cmps
into
dec
adc
sbb
push
int3
mov
clc
call
xlat
out
or
movs
test
(bad)
xchg
test
mov
fs
into
push
inc
(bad)
lahf
adc
cmp
pushf
mov
and
into
jnp
lods
nop
push
lods
inc
fcmove
inc
xchg
mov
pop
into
stos
mov
dec
cmp
mov
push
ror
inc
and
jmp
into
fbstp
mov
into
das
or
jo
scas
fist
mov
outs
dec
cmc
loop
stos
into
ins
inc
cmp
cmp
shr
stc
dec
or
mov
out
test
mov
je
cld
jne
into
and
aas
(bad)
xchg
into
std
data16
push
call
retf
push
fadd
ret
movs
data16
arpl
xlat
mov
(bad)
sbb
(bad)
in
jno
pusha
dec
repz
stos
out
jbe
inc
mov
and
sbb
xchg
loop
dec
sub
xor
sub
sti
push
lock
pop
push
push
adc
or
lds
lods
fisub
jnp
in
pop
and
into
jmp
jecxz
sbb
pop
into
(bad)
jnp
add
jae
or
pop
addr16
test
cmp
sub
mov
in
into
jmp
aam
cli
icebp
pop
divps
pop
fadd
mov
mov
jb
mov
or
into
adc
xor
(bad)
xchg
into
add
push
dec
mov
in
jae
lea
xchg
(bad)
mov
fld
into
sbb
aam
sub
(bad)
scas
ss
or
out
mov
into
in
and
mov
mov
adc
imul
aas
ins
fidiv
sub
jnp
push
mov
pop
bound
repnz
enter
or
loop
fwait
mov
mov
cmps
fimul
fbld
mov
cs
into
mov
push
xor
ja
into
mov
xchg
popa
fs
mov
xor
dec
pop
scas
ja
out
adc
ret
scas
mov
mov
into
push
dec
and
js
mov
loope
sub
je
pop
repz
jnp
sub
ror
fld
adc
lods
xchg
mov
dec
pop
jecxz
cmps
into
mov
sub
enter
sbb
int3
xlat
cmp
pop
(bad)
(bad)
lds
stos
cmp
out
into
sbb
mov
ss
push
or
into
inc
jbe
test
fld
and
js
stos
xchg
into
pop
xchg
arpl
xor
mov
loop
pop
mov
into
imul
jbe
call
dec
imul
aaa
xchg
jp
into
adc
mov
mov
ja
(bad)
mov
pop
inc
ds
dec
jl
push
aad
fadd
lods
sbb
fisub
(bad)
dec
dec
out
jle
ds
pop
in
cmp
mov
mov
movq
push
shl
movs
shl
sbb
loop
lods
gs
xchg
jb
jno
jnp
cwde
retf
mov
popf
jno
in
mov
xchg
jl
dec
sbb
lods
loop
out
push
retf
jae
pop
add
jno
(bad)
shl
dec
dec
adc
test
cmps
push
test
ja
ss
into
add
jg
scas
sbb
lahf
or
cmp
xchg
into
add
imul
(bad)
mov
out
mov
into
sub
xchg
(bad)
scas
fs
into
ror
push
cli
arpl
xchg
sub
dec
cmp
add
fcom
cmp
mov
push
add
adc
sbb
hlt
jl
mov
(bad)
push
sub
ror
dec
add
sub
xor
test
mov
les
sub
dec
cmp
mov
fadd
adc
test
mov
imul
sbb
push
cli
(bad)
into
mov
xor
inc
outs
xor
mov
or
xor
mov
dec
into
jbe
cmp
into
popf
mov
int3
dec
scas
lods
xchg
retf
rol
lahf
(bad)
(bad)
out
sbb
scas
pop
loopne
cmp
mov
xchg
popf
inc
retf
call
sub
mov
pop
or
into
ja
loopne
jnp
mov
ins
push
test
sti
movs
pop
mov
add
xchg
shr
xchg
add
mov
mov
scas
test
sahf
xchg
lods
xchg
jbe
je
mov
push
int
into
mov
(bad)
push
or
cmc
lods
add
outs
cld
cwde
into
les
adc
aas
stos
mov
pop
stc
out
mov
sbb
jmp
inc
xor
jp
and
jne
dec
xlat
out
push
test
(bad)
sbb
dec
xor
imul
out
mov
retf
sub
pop
cwde
mov
mov
seto
sub
into
loope
aas
push
mov
jno
sbb
call
in
lods
mov
sbb
pop
jp
enter
rol
movs
mov
mov
push
into
pop
repz
mov
or
jmp
sbb
into
inc
and
shl
lods
jl
xor
fisttp
ja
adc
or
daa
addr16
adc
and
jmp
jl
cli
mov
lds
scas
rsqrtps
addr16
into
xchg
push
push
das
aaa
jl
mov
aas
not
aad
imul
cmp
dec
mov
jecxz
xchg
xor
add
ret
mov
dec
in
cmp
repnz
into
jo
bndldx
cs
lods
das
mov
mov
jg
popa
jne
std
add
mov
pop
mov
retf
(bad)
jmp
fisubr
xlat
mov
dec
pop
bt
into
sub
je
or
inc
inc
pop
fwait
stos
in
repz
dec
cwde
sub
movaps
iret
mov
scas
cli
stos
cmps
int
into
mov
pop
div
push
call
jmp
and
gs
jae
int3
cwde
into
and
(bad)
mov
sbb
mov
mov
arpl
pop
push
xchg
add
les
fbstp
cmps
push
pop
out
into
mov
pop
or
into
sbb
adc
xchg
into
push
hlt
mov
mov
xchg
into
mul
cmps
enter
dec
push
and
push
into
fidiv
icebp
out
mov
sbb
adc
pop
push
into
cmp
push
test
stos
sub
adc
into
in
pop
pop
sub
stos
mov
pop
fdivp
nop
imul
cmovs
stos
adc
cmps
dec
mov
or
mov
sub
jb
repnz
mov
rcl
into
jns
inc
pop
pop
xor
imul
xchg
repnz
retf
fdiv
lahf
adc
jne
jmp
lock
xchg
imul
lods
loop
test
movs
sahf
into
mov
movs
mov
lods
sbb
push
lods
dec
out
(bad)
stos
push
dec
into
jl
or
retf
scas
xchg
loopne
adc
fisttp
out
sbb
add
pop
jns
scas
call
mov
and
pop
pop
cli
ret
into
pop
mov
pusha
jl
out
into
push
add
push
jle
or
mov
cli
jnp
into
jmp
sbb
push
sbb
or
mov
rcl
mov
cs
pop
mov
mov
leave
aam
xchg
jb
into
ret
clc
cli
scas
fstp
leave
jle
mov
jnp
into
and
inc
jecxz
into
es
lods
mov
xchg
push
pop
into
test
repnz
cmp
inc
gs
cwde
fmul
pop
stc
jbe
mov
mov
sti
sbb
mov
mov
cli
sbb
mov
xchg
into
dec
outs
or
sub
into
cmps
lods
xor
lods
and
and
xchg
daa
into
in
ficom
pop
xchg
jg
idiv
into
mov
pop
(bad)
or
outs
dec
and
outs
or
fs
lods
int3
pushf
pop
icebp
inc
mov
mov
sahf
pop
scas
stos
xor
jns
cmps
pusha
and
sahf
imul
pop
(bad)
into
sbb
addr16
dec
pop
cmp
lods
lahf
jb
xor
mov
lods
inc
xchg
xchg
jg
out
add
xchg
out
ret
dec
or
(bad)
pop
shr
sbb
push
cmp
jbe
pop
xchg
dec
xchg
cmp
sbb
into
fstp
imul
fmul
cmc
jb
inc
ins
and
stos
aas
out
cld
mov
xor
inc
push
loope
mov
pop
adc
(bad)
sahf
call
retf
repnz
cmp
js
sub
out
(bad)
mov
es
test
shr
push
into
ror
jne
sub
xchg
arpl
into
mov
and
dec
into
(bad)
imul
or
stc
into
ja
fmul
pop
je
mov
pop
cwde
push
xchg
pop
or
or
sti
test
js
dec
and
into
sahf
mov
out
and
je
mov
adc
popa
into
pop
loopne
xchg
icebp
jb
(bad)
test
out
fbld
into
xchg
into
in
mov
retf
stos
das
pushf
movs
jb
mov
pop
in
adc
loopne
es
rcr
dec
xchg
ja
jo
pop
mov
or
sub
pop
xchg
xchg
jns
dec
cmp
ret
push
aas
imul
enter
(bad)
pop
scas
mov
pop
cs
cmp
cld
imul
jae
sbb
sub
pop
jno
pop
pop
cdq
shr
sub
das
fimul
sbb
(bad)
popf
push
pop
(bad)
in
repnz
into
jmp
mov
mov
dec
out
inc
add
mov
outs
dec
inc
xlat
lahf
xchg
ror
pop
(bad)
adc
ja
(bad)
mov
adc
dec
pushf
sbb
loope
mov
push
into
sbb
movs
dec
push
jge
(bad)
push
je
pop
xchg
adc
xchg
sub
and
jg
adc
mov
test
xchg
sbb
loop
(bad)
enter
mov
cmp
imul
cmp
out
xchg
test
and
pop
push
aam
into
retf
mov
xchg
das
mov
add
and
js
push
pop
cdq
into
push
jge
xor
cmps
jno
into
out
xchg
pop
adc
push
imul
out
xchg
jbe
jb
in
into
mov
mov
mov
jp
nop
repz
(bad)
into
rol
mov
xchg
mov
sbb
xchg
hlt
loopne
sub
fist
mov
ja
or
dec
mov
fimul
mov
xchg
fcomp
in
int3
psubusw
jmp
lock
jno
je
pop
into
in
loop
mov
scas
inc
fist
mov
mov
in
sbb
push
push
les
jb
into
mov
or
sub
push
sub
pcmpgtw
push
call
dec
cmp
(bad)
jg
jb
mov
jmp
sbb
mov
into
xchg
out
jge
ror
pusha
or
inc
ret
ins
pop
xlat
mov
jmp
das
into
mov
dec
push
mov
or
into
call
outs
pop
into
scas
inc
jae
int
fnstenv
jg
setbe
scas
shr
clc
cmp
and
fimul
(bad)
sub
arpl
lea
inc
into
stos
xor
push
bnd
int
jle
popa
push
out
je
out
into
sbb
push
xchg
dec
jmp
pop
test
into
ins
xchg
pusha
sbb
pop
mul
into
or
mov
cmps
push
into
mov
xchg
push
ret
xor
cmp
into
sub
mov
iret
pop
jmp
and
dec
cld
lock
into
xor
idiv
loope
xchg
mov
(bad)
je
pop
xchg
lods
mov
into
mov
inc
aad
sub
call
jmp
test
fldenv
add
into
push
ins
jge
daa
cmp
stos
paddq
ja
xchg
adc
into
sub
ret
add
outs
into
pop
lods
ret
mov
inc
lahf
cmp
jo
loopne
std
out
sub
dec
into
add
fnop
fsubrp
and
into
lahf
mov
ret
mov
into
add
inc
imul
call
lods
cmp
(bad)
fild
into
into
pop
vpunpckhqdq
mov
das
inc
aas
adc
into
aad
inc
mov
adc
sub
mov
paddsb
xchg
hlt
aaa
push
mov
mov
sub
aad
call
or
or
js
pop
stos
pop
repnz
nop
into
sub
push
push
into
push
mov
fs
inc
arpl
cwde
cmp
into
sbb
sar
rcl
fadd
cmc
sti
dec
or
jae
push
push
out
ror
sub
jno
xor
iret
sbb
cmp
push
popf
outs
enter
mov
or
call
jbe
es
mov
aaa
jmp
(bad)
out
into
cli
xchg
sti
push
xchg
shr
pop
jg
into
das
loopne
jno
mov
cmc
cli
fs
dec
scas
into
add
popf
call
into
les
mov
xchg
into
mov
mov
mov
scas
pop
and
out
push
push
stos
lods
call
mov
mov
stos
cs
push
rcr
mov
jae
pop
std
cmp
ret
(bad)
mov
bound
and
cmp
fbstp
or
push
xchg
xor
jp
xlat
dec
mov
jnp
into
les
xor
mov
push
jge
xor
pop
dec
push
outs
rcr
or
pop
and
xchg
ja
into
test
sbb
fs
cmp
pop
sub
lock
lods
push
inc
mov
dec
mov
test
push
pop
cmp
pop
lahf
pop
ror
in
std
and
mov
into
adc
das
xor
daa
outs
sbb
push
pop
rol
lods
retf
sbb
fnsave
sub
add
cmp
test
aas
cmp
out
into
fwait
push
outs
jp
addr16
add
lahf
push
push
lods
jge
push
daa
push
repz
inc
xor
pop
(bad)
xchg
add
pusha
call
xor
pop
into
pop
and
fldcw
lahf
pop
into
jbe
xor
dec
mov
jp
mov
add
pop
out
pop
mov
repnz
movs
pop
cmp
adc
aas
inc
inc
lea
mov
jg
test
jmp
in
push
cmc
fsubr
inc
(bad)
mov
mov
imul
fbstp
fdiv
scas
lods
lods
fcmovne
movs
mov
push
ret
mov
movq
and
out
test
or
add
lea
into
js
pop
mov
or
fs
xchg
into
push
daa
test
mov
jns
xchg
outs
shl
bound
sub
or
cwde
push
adc
lods
cmp
push
es
idiv
pop
clc
into
xor
inc
daa
scas
mov
adc
or
xchg
(bad)
pop
xchg
cmp
xchg
rol
pop
out
inc
into
dec
push
mov
je
pop
lods
dec
sbb
or
shl
mov
into
cmps
nop
sub
ss
xor
adc
mov
inc
dec
into
sbb
test
ins
repnz
(bad)
mov
mov
call
test
fnstsw
mov
cmps
pop
sbb
sti
or
sbb
push
add
into
dec
pop
leave
mov
cmc
mov
into
xor
in
mov
sahf
sbb
and
add
in
addr16
mov
pop
dec
dec
xlat
shr
cmp
ror
aam
mov
or
push
cmps
aad
dec
in
int3
jbe
fisttp
movs
jmp
cmp
lods
and
loopne
lea
iret
xchg
sbb
pop
sahf
scas
fisubr
aam
div
daa
dec
mov
add
into
or
jns
into
pop
cs
mov
aam
into
inc
ds
add
(bad)
call
cmp
into
mov
mov
lods
pusha
dec
push
jmp
fiadd
test
repnz
pusha
mov
jbe
cmp
pop
fcmovnu
xchg
pop
jmp
push
in
sbb
out
lods
inc
aas
cmp
stc
out
nop
cli
sub
psrld
(bad)
jne
retf
push
fwait
into
mov
mov
xor
std
addr16
sbb
lods
mov
mov
(bad)
data16
pop
out
repnz
(bad)
mov
(bad)
push
push
into
push
repz
into
add
cwde
in
cs
lods
adc
out
cmp
push
ror
mov
popa
mov
pop
push
cmp
or
jmp
sbb
fldcw
into
jnp
xchg
jecxz
adc
shl
outs
and
adc
or
add
push
lods
add
mov
rcr
adc
sbb
mov
dec
cld
in
pop
stc
mov
inc
push
das
into
inc
add
mov
ror
jl
inc
jmp
(bad)
movs
xchg
fmul
inc
mov
les
lods
push
cmp
scas
add
sub
adc
into
and
ss
cmc
mov
mov
jg
mov
cmp
out
shr
div
out
into
mov
ret
mov
pop
into
scas
sub
push
pop
dec
push
xchg
bound
scas
inc
or
(bad)
into
pop
fwait
fs
cmps
loop
xchg
iret
mov
sub
stos
dec
sbb
xor
xchg
mov
xchg
add
mov
outs
cmp
mov
mov
mov
dec
jbe
sbb
push
ret
inc
das
xor
jge
or
adc
fist
fimul
mul
rcl
mov
into
mov
out
je
jo
into
arpl
inc
mov
icebp
cmps
shr
xor
popa
std
sub
scas
adc
mov
mov
jmp
mov
push
dec
movs
outs
fimul
leave
sbb
sti
push
fidiv
cmp
inc
mov
stos
and
enter
jb
js
bound
outs
xor
adc
xor
stc
or
aaa
in
xchg
push
lock
mov
std
into
jp
pop
sbb
ds
push
into
inc
mov
jge
fmul
lds
push
inc
leave
ja
mov
imul
dec
ficom
sbb
mov
fdiv
mov
into
je
movs
ja
scas
into
sbb
loop
scas
push
icebp
scas
xor
dec
cwde
int3
lock
jmp
cs
sub
inc
rcr
into
pop
and
jo
(bad)
or
fld
push
into
add
mov
or
into
call
call
dec
push
sbb
ds
fldcw
andps
sub
aaa
ror
lods
or
call
xor
into
push
dec
test
into
xor
je
scas
sbb
pop
into
or
cli
lods
xchg
and
ss
xchg
ins
sar
or
adc
mov
cmp
mov
hlt
clc
mov
es
pushf
pop
or
stos
test
sbb
dec
stos
and
stc
mov
test
cmp
in
es
test
mov
or
in
sar
sbb
ja
or
cmps
int3
test
outs
into
mov
sbb
add
sub
or
sbb
jg
das
cwde
dec
cmp
jmp
mov
xchg
mov
stc
adc
dec
add
add
imul
mov
xchg
outs
ret
xchg
sahf
loope
mov
sub
into
(bad)
and
ret
inc
add
push
setg
mov
xor
mov
pop
sub
sahf
jecxz
addr16
pop
(bad)
test
daa
push
jle
into
add
js
into
lods
movs
mov
xchg
arpl
into
outs
mov
mov
adc
dec
push
mov
dec
repz
xchg
mov
ret
sub
hlt
inc
cmp
test
adc
ins
fucomi
fsub
enter
shl
sbb
(bad)
out
addr16
pusha
pop
cmp
aas
pop
jnp
into
stc
rcl
xor
ret
and
(bad)
xor
mov
jne
jg
out
std
add
or
jge
xchg
call
retf
jmp
push
dec
mov
pop
dec
push
xchg
pop
sub
idiv
mov
xchg
inc
xor
or
ins
dec
mov
arpl
xlat
enter
ja
dec
shl
and
sbb
dec
int
cmp
xor
dec
movs
test
pop
es
popa
sbb
retf
pop
fidivr
out
cmp
cwde
into
mov
jecxz
add
retf
leave
fucomp
aam
adc
or
(bad)
mov
popf
into
inc
mov
or
daa
cli
mov
into
or
mov
jae
into
lods
stos
fcomp
fcmovb
mov
daa
add
cmovle
pop
imul
jb
cdq
mov
icebp
dec
xchg
fild
sbb
xchg
pop
into
sub
adc
bound
into
lods
ret
mov
jg
cmp
or
rcl
in
jae
pop
idiv
scas
mov
pop
xchg
sub
imul
pop
int
mov
and
into
sub
mov
dec
ss
fwait
cmp
lea
popf
pop
inc
ror
xor
and
loop
into
xor
inc
(bad)
into
mov
test
lahf
mov
mov
pop
into
adc
cwde
push
sbb
into
sbb
cmp
push
mov
jle
repnz
into
outs
rcr
mov
jb
fs
dec
pop
adc
popa
aas
or
and
mov
adc
les
push
cdq
into
and
das
cmp
add
mov
cmps
aad
xchg
sub
fisubr
adc
sub
movs
hlt
bound
or
lds
xchg
pop
out
xor
outs
into
outs
and
(bad)
leave
adc
out
xchg
push
jp
jno
mov
or
cmp
popf
dec
xor
add
mov
xor
into
imul
push
jbe
mov
add
push
out
xor
into
mov
add
push
retf
lods
mov
mov
xor
into
ds
sub
into
push
outs
mov
test
aam
stos
dec
fs
jp
into
ds
dec
mov
into
fadd
je
or
into
punpckhwd
fxch
lock
shl
inc
push
loop
shl
sahf
and
movs
shr
mov
and
push
xor
mov
jl
ins
sbb
sbb
push
into
xchg
add
sbb
mov
sbb
xchg
je
lock
out
int3
pop
loop
pop
outs
pop
aad
into
mov
out
add
xchg
shl
das
ins
jp
cmp
push
pop
and
sbb
scas
aas
push
hlt
or
into
loopne
xchg
push
test
push
cmp
add
imul
scas
hlt
jno
ins
pop
aad
ror
into
push
std
xchg
ret
(bad)
into
clc
out
js
pushf
(bad)
jno
lods
stos
mov
iret
aas
sub
and
cmp
jg
mov
inc
dec
loopne
test
into
mov
div
test
cli
jmp
mov
sbb
test
mov
push
sbb
jb
sar
jge
(bad)
cmp
dec
add
sub
into
in
xor
sub
mov
rol
into
and
or
mov
(bad)
inc
hlt
push
out
jno
(bad)
xchg
(bad)
xchg
jp
repz
dec
adc
xchg
mov
jge
and
dec
lahf
push
or
into
loopne
pop
push
movs
jmp
cmps
sub
daa
mov
fcom
mov
pop
mov
out
dec
push
cs
ss
pop
sbb
inc
mov
mov
into
mov
out
ja
dec
dec
bswap
mov
shl
pop
rcl
mov
push
(bad)
popa
pop
test
into
inc
stos
xchg
dec
shl
leave
fmul
into
cmp
imul
into
jmp
ss
ins
hlt
dec
popa
pusha
(bad)
cmp
test
arpl
stc
(bad)
xor
or
push
jae
xor
dec
dec
ja
outs
cmp
pushf
(bad)
mov
push
into
and
cli
xchg
call
retf
cld
dec
fwait
pop
add
pop
adc
sub
nop
pop
into
loopne
(bad)
jnp
jmp
xchg
mov
test
fwait
arpl
out
ror
adc
sbb
pusha
dec
rcr
push
imul
inc
mov
jp
and
nop
push
stos
lods
push
or
nop
mov
inc
sbb
and
(bad)
je
shr
ds
into
sbb
outs
adc
into
gs
cs
mov
mov
push
jmp
movs
xchg
cli
lods
xor
daa
cld
dec
vorps
xor
mov
int
pop
adc
out
add
call
dec
cmp
mov
pop
xor
mov
add
and
push
pop
sbb
fiadd
or
dec
mov
lods
iret
loop
mov
jg
mov
into
sbb
jno
ds
xchg
pop
jae
lock
xor
popa
push
jmp
sub
cmps
push
sub
into
xchg
fmul
and
cmps
adc
test
iret
xchg
sbb
xchg
test
cmp
mov
outs
sub
push
mov
in
je
xchg
gs
into
rcr
dec
outs
ja
into
mov
adc
xor
cmp
add
retf
(bad)
ins
push
(bad)
xor
dec
in
shr
or
lahf
ins
sub
ins
sysenter
rcl
loopne
push
mov
mov
(bad)
into
cmps
(bad)
mov
into
enter
sub
not
into
cmp
dec
lds
punpcklwd
adc
mov
pop
inc
into
cmp
push
inc
mov
(bad)
fild
test
add
add
js
movs
pop
pop
xor
mov
sti
pop
fmul
jmp
imul
mov
jbe
xchg
aas
in
dec
into
lds
mov
jp
fwait
mov
js
and
mov
push
leave
ds
pcmpgtw
xor
fdivr
push
mov
lods
jbe
jl
jne
ret
ficomp
cmp
in
xlat
cld
int
rcr
mov
shr
into
inc
cmps
mov
cwde
pop
lods
je
mov
lahf
dec
scas
lods
out
mov
fisub
cwde
jae
test
mov
push
cmp
jl
ins
loop
stc
into
test
ins
inc
sbb
(bad)
loopne
fild
mov
mov
pop
call
data16
(bad)
and
push
cmps
das
sbb
aad
or
out
push
xor
shr
jle
ins
retf
dec
inc
cli
fild
inc
into
and
xor
pop
bound
or
push
pop
mov
(bad)
mov
into
mov
inc
sbb
add
rcl
(bad)
jb
test
inc
clc
or
(bad)
pushf
mov
mov
das
mov
xor
sub
and
idiv
(bad)
jmp
mov
test
fmul
adc
into
xor
xor
sbb
(bad)
(bad)
pop
loope
das
push
into
test
push
lods
xchg
push
sbb
cwde
push
es
lahf
add
fs
and
dec
out
je
sub
xchg
xor
nop
outs
shl
jne
jle
adc
mov
test
mov
add
cdq
jmp
dec
push
out
mov
cmc
bswap
mov
into
xchg
sbb
into
cmc
in
retf
movs
fwait
mov
not
push
retf
jbe
mov
push
dec
mov
repz
dec
lods
into
mov
lods
xchg
mov
push
pop
enter
jo
stc
sub
fld
into
dec
out
jno
push
jecxz
mov
outs
aas
movs
fisttp
cmps
into
js
test
add
push
xchg
adc
push
mov
into
sar
sbb
cmp
push
cmc
(bad)
into
mov
cmp
and
retf
adc
cmps
pop
mov
ret
inc
xchg
daa
xor
mov
pushf
outs
jne
and
into
out
cmp
sub
and
pop
pop
into
retf
int
cmc
pop
aad
in
pushfw
cmps
into
mov
scas
movs
popa
pop
fild
test
jp
arpl
into
adc
cmp
cdq
and
sbb
int3
into
shl
or
into
sti
or
pop
into
push
adc
out
or
sub
mov
sbb
jle
jecxz
scas
call
fstp
imul
adc
and
addr16
jl
into
mov
mov
add
adc
cli
inc
cmp
les
adc
cld
xchg
pop
(bad)
mov
sbb
into
push
xchg
mov
mov
lods
je
fs
lods
dec
add
sub
repz
pop
jns
push
cmp
icebp
sbb
and
sbb
add
mov
inc
ss
or
mov
enter
adc
add
in
push
ins
fisubr
loop
ret
xchg
loope
test
imul
pop
idiv
mov
dec
into
or
out
fwait
add
into
cmps
sahf
mov
popf
mov
xchg
xchg
iret
icebp
xchg
cwde
mov
pop
mov
(bad)
pop
fidiv
xor
xchg
mov
jbe
jae
gs
jns
into
ja
jne
adc
xor
test
dec
fcmove
cmp
fidiv
movs
into
ror
dec
jae
ds
fcomip
lahf
cmp
scas
cli
dec
into
pop
arpl
popa
jns
nop
das
or
data16
push
push
(bad)
imul
cmps
ffreep
gs
pusha
mov
enter
sub
into
mov
cmp
into
stos
cmp
cmc
into
mov
inc
leave
in
push
cmps
push
and
add
popf
mov
pop
addr16
repnz
test
xor
mov
in
mov
out
jbe
movs
lods
mov
pop
je
push
mov
mov
jp
add
add
fidivr
loopne
dec
test
hlt
bound
fldcw
mov
imul
into
hlt
fidiv
cs
inc
mov
adc
fcomp
push
inc
pusha
jmp
lock
jae
je
mov
jae
scas
jo
rcl
mov
xchg
push
ret
pop
cmp
test
arpl
xchg
lods
or
ja
xchg
mov
pop
lea
ds
hlt
into
inc
pop
push
dec
rcr
mov
dec
pop
inc
push
into
fwait
retf
push
inc
ficom
mov
pop
out
mov
mov
lds
pop
xor
mov
setns
jge
jecxz
dec
xor
js
and
add
adc
jg
dec
sub
into
nop
int
push
xor
ja
xchg
mov
push
in
call
cmp
stos
test
test
mov
scas
scas
sub
and
push
pop
add
mov
or
sbb
test
push
daa
fstp
xor
sahf
dec
mov
test
fdivp
jae
sub
mov
ret
sbb
into
cmp
retf
jp
sub
test
ins
inc
and
dec
in
or
in
in
sbb
sahf
neg
mov
imul
and
mov
dec
(bad)
daa
and
mov
fmulp
or
retf
cli
out
xchg
xor
fxch
clc
and
ss
movs
test
push
sub
jg
into
adc
pop
pop
mov
in
out
fimul
lahf
into
xor
mov
inc
dec
lods
mov
jo
cmp
jnp
and
into
sbb
xor
shl
xchg
ins
ret
int3
push
mov
fld
test
fdivr
mov
jge
cmp
pop
enter
int3
scas
jmp
mov
pusha
and
and
into
ret
mov
ret
ja
xchg
adc
sbb
or
xchg
repz
dec
sub
sub
mov
into
lea
test
or
pop
push
lods
mov
test
push
iret
into
shl
add
cmc
call
test
das
mov
aam
mov
scas
rcl
out
sti
fcom
jge
cli
fistp
popa
mov
pop
and
sbb
test
into
je
mov
into
stos
and
jne
jecxz
cmps
into
gs
inc
(bad)
fisttp
into
xor
addr16
scas
movs
xchg
lods
inc
repnz
scas
xchg
sub
fisttp
sahf
push
mov
add
loope
stc
xchg
popa
mov
daa
add
mov
into
mov
sbb
dec
jmp
dec
dec
xchg
cmp
retf
icebp
repnz
test
out
jmp
add
fdivr
aad
push
icebp
jg
jns
cmp
into
dec
xchg
add
sub
or
bound
sbb
icebp
sub
push
pop
mov
jl
cmp
shr
dec
cmp
mov
pop
jmp
iret
push
sbb
aam
stos
into
push
lahf
fnsave
mov
mov
out
mov
das
loopne
ja
or
adc
xchg
sbb
punpcklbw
(bad)
dec
stos
stos
retf
into
push
scas
push
mov
xchg
lods
mov
pop
jae
xchg
test
mov
je
and
into
loop
adc
inc
push
adc
inc
test
scas
sti
dec
pop
mov
into
cmps
les
cmp
enter
xchg
dec
xor
cmps
pop
inc
push
(bad)
dec
cmp
(bad)
into
jns
outs
jae
jne
std
into
in
push
push
je
push
(bad)
sti
jns
add
loope
add
and
mov
jle
mov
pop
ss
loopne
call
fsubr
lods
dec
jne
es
(bad)
not
pop
or
jp
(bad)
xor
mov
scas
into
inc
(bad)
jle
mov
pop
mov
into
stos
std
mov
in
add
into
xchg
into
xchg
imul
sbb
(bad)
in
into
mov
fmul
dec
cmp
sub
and
push
into
ja
lock
xchg
(bad)
je
into
aad
loop
popf
inc
scas
fmul
dec
retf
movs
clc
ret
push
into
mov
cmc
pop
push
cmp
mov
pop
pop
jl
xor
lock
xchg
xchg
into
(bad)
clc
push
(bad)
(bad)
jb
into
(bad)
push
pop
sti
pop
lock
jne
movs
clc
and
pop
jle
rcl
mov
out
out
xchg
lods
rcl
cmp
ins
lods
ret
into
mov
movs
push
jae
sahf
jge
pop
or
xor
dec
into
cdq
or
pusha
xchg
mov
into
stos
xchg
iret
xor
ret
ror
(bad)
lods
lods
mov
not
mov
push
sub
call
jmp
pushf
add
pop
inc
mov
cwde
mov
jmp
outs
ret
cmp
sub
loop
jns
jmp
and
arpl
call
or
popf
xchg
xchg
pop
loope
call
and
mov
ror
sbb
ds
jmp
mov
push
test
cmp
dec
shl
in
jg
cdq
jge
into
sub
mov
add
into
imul
in
popf
into
je
push
push
shl
sahf
loopne
adc
gs
test
mov
bnd
int3
xchg
sub
jecxz
xchg
scas
pop
(bad)
cdq
add
add
(bad)
in
and
mov
aam
mov
push
(bad)
into
fisub
dec
std
test
push
into
in
jl
cmps
sbb
mov
aam
cdq
fistp
daa
jbe
out
xchg
fnstcw
xor
into
fwait
ret
leave
push
cdq
sti
into
push
test
je
test
jne
(bad)
cmp
into
pop
pushf
jmp
(bad)
shr
xor
out
aas
icebp
jmp
stc
push
mov
sar
dec
sbb
or
loop
inc
imul
daa
cmp
out
add
and
pop
and
ror
into
iret
clc
scas
pop
and
data16
mov
cmp
nop
into
jnp
inc
(bad)
push
adc
fdivp
cmps
rcr
in
pop
push
into
and
push
mov
loop
ror
or
je
ins
inc
or
push
test
aas
stos
or
dec
mov
addr16
inc
outs
and
into
js
jecxz
stos
add
push
fst
ficomp
int
test
mov
mov
int
or
cli
maxps
into
xchg
push
cld
out
lea
std
das
fdivrp
ror
adc
ficom
into
mov
mov
repnz
fwait
mov
cmp
fs
mov
xchg
icebp
lods
into
jae
jns
adc
call
xchg
fld
mov
pop
into
mov
mov
sub
ins
sbb
jae
into
mov
xchg
mov
shl
cmps
sub
jne
into
shl
clc
bound
test
pop
or
stos
jp
in
xor
into
cmps
mov
cmp
iret
mov
sub
and
mov
fdiv
fadd
mov
sub
dec
into
add
or
in
into
ja
cmp
lahf
cmp
sbb
test
cmp
imul
push
pop
int
dec
sub
cmp
icebp
into
pop
hlt
arpl
popa
mov
mov
add
xor
into
push
cmp
pop
jmp
dec
sub
leave
(bad)
fiadd
enter
sub
and
cmp
lea
test
test
xor
xlat
scas
jge
not
jno
cli
inc
mov
fcomip
mov
fmul
add
into
in
xor
popa
mov
xor
rcl
mov
into
inc
mov
imul
mov
div
test
push
call
xchg
call
mov
mov
inc
movs
call
sbb
(bad)
push
arpl
xchg
mov
dec
push
dec
into
sub
ficomp
jae
jge
xlat
call
jnp
nop
jns
scas
cmps
addr16
das
test
loop
fst
fisub
bound
push
in
push
cwde
ss
sub
push
xchg
jmp
push
jl
les
aas
xchg
sub
jns
sub
loopne
scas
sbb
(bad)
call
stos
shl
setbe
inc
daa
xchg
cmp
jecxz
pop
out
lds
rcr
push
or
add
jnp
enter
jl
idiv
add
sahf
xor
sub
xor
or
js
std
stc
(bad)
retf
into
mov
sub
adc
jb
test
clc
ret
xchg
mov
aad
sub
sti
push
enter
rcl
inc
lods
push
inc
data16
sub
xlat
jle
mov
jecxz
push
xor
rcr
into
xrelease
into
daa
test
add
into
sbb
(bad)
xchg
popa
es
jle
cli
sbb
inc
xor
mov
sub
lods
mov
inc
push
add
cld
jmp
xlat
inc
push
je
ret
xchg
into
sub
cdq
and
out
dec
enter
into
cmp
jo
jecxz
je
into
test
push
lahf
leave
hlt
or
mov
and
movs
out
jne
xchg
sbb
into
rcr
adc
mov
mov
scas
daa
dec
retf
push
add
aas
sub
lods
mov
sub
xchg
into
aaa
jg
frstor
mov
outs
or
fnstenv
repnz
or
leave
aas
mov
rcl
dec
push
ret
add
mov
mov
push
movs
mov
das
or
ror
jmp
(bad)
bound
jmp
dec
and
into
rcl
pusha
fs
aas
pop
jae
into
into
jno
jmp
popf
(bad)
jge
ret
cdq
dec
push
xor
or
mov
jne
add
out
into
mov
ret
and
test
shl
mov
hlt
iret
xchg
dec
aaa
dec
inc
pop
mov
iret
lods
nop
fcomi
dec
(bad)
cmovle
jmp
xor
into
arpl
(bad)
cs
jle
and
push
inc
cmc
into
aaa
xchg
lea
xchg
fcom
ror
into
pop
xor
int
(bad)
or
xor
xchg
fdivp
into
push
lea
and
and
lods
addr16
aaa
mov
jb
fnstsw
mov
or
pop
scas
cmp
inc
add
out
into
jmp
dec
xor
jecxz
push
into
xchg
test
cld
sbb
dec
into
mov
adc
das
movs
push
fmul
mov
mov
lods
ret
enter
pop
bswap
addr16
into
cmp
hlt
lods
(bad)
jne
data16
icebp
test
jbe
dec
mov
into
sub
das
push
outs
aaa
jno
mov
pusha
mov
mov
(bad)
xlat
inc
rol
std
into
add
fimul
(bad)
mov
mov
inc
inc
fmulp
pop
addr16
bound
jne
into
sub
movs
das
into
fwait
mov
push
xor
popf
mov
jmp
out
or
jb
mov
or
int
aam
(bad)
int3
mov
or
xor
into
pop
out
jo
in
ret
into
adc
(bad)
jnp
sbb
into
lods
retf
jae
inc
into
les
fistp
push
jl
mov
pop
ins
into
popa
iret
ins
cmp
into
adc
or
test
dec
or
lods
cmps
out
jmp
sub
sbb
mov
push
cmp
movs
lea
ret
cmp
cdq
mov
(bad)
outs
push
and
push
xlat
mov
dec
movs
inc
sub
and
mov
rol
add
sub
es
les
mov
out
ins
inc
pop
cwde
into
mov
aas
jbe
into
js
in
add
push
call
into
addr16
mov
sub
retf
(bad)
inc
cli
push
mov
or
inc
add
int3
dec
into
(bad)
add
adc
jmp
mov
dec
into
adc
dec
cmp
imul
(bad)
jg
outs
cmp
adc
mov
psraw
cwde
jecxz
jmp
mov
push
loop
sub
mov
jbe
cwde
repnz
sub
push
int
xchg
mov
jo
(bad)
jl
out
or
mov
call
lods
mov
pop
es
(bad)
fld
inc
lods
mov
sbb
imul
ret
movs
pop
iret
xor
imul
xchg
aaa
or
xchg
mov
jl
push
sub
lods
test
rol
jno
out
scas
jbe
cmp
in
and
outs
in
xchg
jb
mov
sub
inc
int
push
sti
inc
into
sub
jl
push
into
(bad)
popa
mov
xchg
pop
loop
push
add
mov
mov
cdq
add
idiv
xchg
cmc
xor
nop
mov
dec
test
test
jle
lea
enter
jmp
xchg
loopne
loope
in
push
ins
test
adc
popf
xchg
dec
es
dec
sbb
push
movs
add
into
ins
sub
sub
test
and
jge
inc
mov
fsub
dec
mov
ins
neg
into
loop
test
mov
mov
pop
in
iret
aad
gs
fcmove
jno
jmp
(bad)
mov
fldcw
mov
pop
movs
fimul
xchg
out
fs
call
frstor
mov
mov
daa
jb
scas
mov
pop
sahf
cmp
ror
into
dec
cdq
clc
mov
into
(bad)
and
jo
call
shl
ror
mov
movs
ret
xor
into
dec
out
imul
xchg
das
adc
or
cmp
out
adc
into
xor
jmp
pop
add
or
pusha
test
sti
(bad)
aas
cmp
sub
cmp
jg
xor
mov
ja
minps
and
imul
sub
loop
call
retf
mov
nop
pop
mov
pop
jl
in
fnstcw
repz
push
loope
jno
mov
add
or
mov
push
sbb
fsub
push
cs
mov
sti
out
push
int
fisubr
add
push
test
ficomp
and
retf
or
data16
gs
dec
jnp
les
xor
sbb
push
into
loopne
sub
mov
mov
dec
loope
cmp
into
inc
xchg
inc
xor
sub
data16
or
into
cmp
adc
and
int
xlat
adc
dec
movs
sti
mov
es
mov
(bad)
cmp
mov
icebp
jle
sub
adc
fsubr
loope
jecxz
into
cmp
lods
jno
xor
pop
cmp
lods
sbb
cmp
shl
in
in
std
cli
jae
jp
adc
or
inc
mov
out
outs
sub
shr
leave
(bad)
ss
mov
fwait
into
ja
inc
cmps
mov
inc
leave
dec
iret
jbe
pushf
in
in
inc
push
lods
popa
movs
ins
mov
daa
nop
xor
into
fisub
sbb
retf
mov
bound
adc
nop
and
into
add
push
mov
cmp
dec
pop
xor
fisub
pop
inc
into
xor
and
pop
adc
nop
push
aaa
into
dec
or
cmps
repz
dec
add
(bad)
out
xchg
into
sub
out
cmp
pop
aam
into
inc
pop
cmp
jp
call
enter
push
mov
mov
into
inc
fcom
ror
add
push
and
mov
bound
jle
imul
jmp
push
jo
mov
jp
pop
or
imul
inc
imul
scas
mov
mov
(bad)
push
inc
ins
test
or
imul
jmp
in
sub
lods
fdiv
into
and
sub
(bad)
aas
mov
add
dec
sub
into
je
cmp
loop
ret
aas
scas
scas
adc
repnz
add
pushf
mov
push
daa
adc
or
scas
add
aad
(bad)
xchg
fidiv
cmc
pop
add
dec
cmc
pop
retf
xor
adc
mov
xlat
mov
push
out
repnz
inc
pop
clc
(bad)
ficom
test
std
mul
aad
and
mov
jg
and
pop
pop
jnp
push
mov
push
outs
xchg
sbb
fimul
xor
mov
add
out
movs
xchg
mov
prefetch
add
pop
call
xlat
pop
sbb
pop
into
mov
xor
clc
pop
ins
push
inc
lods
mov
or
call
loope
dec
xchg
mov
and
movq
mov
xchg
in
stos
inc
push
fsubr
test
push
lds
bound
aas
push
pop
into
into
or
xchg
test
mov
xchg
xchg
inc
test
into
in
(bad)
sbb
xor
into
out
push
sbb
into
push
push
xchg
dec
pusha
test
mov
xor
mov
inc
and
outs
in
out
aas
mov
in
xlat
enter
into
xor
xchg
cld
loope
mov
outs
adc
dec
rcl
or
aad
inc
cmps
int3
ffree
cdq
into
inc
jmp
inc
add
fldenv
loopne
jle
test
jo
sub
add
jle
(bad)
(bad)
push
mov
daa
ja
sbb
jno
js
dec
ds
lods
fild
nop
mov
out
add
mov
jo
adc
into
dec
les
rol
cwde
inc
or
into
push
push
xor
test
test
xchg
int3
stos
mov
xchg
cmp
test
fild
lahf
jmp
mov
ins
arpl
into
pusha
cmps
ret
inc
lds
stc
mov
jmp
ret
mov
into
test
mov
pop
into
ror
adc
(bad)
iret
into
xchg
jge
mov
call
retf
adc
sub
push
mov
pop
xor
sbb
imul
adc
add
ds
pop
retf
sbb
sbb
aaa
push
es
shl
pop
jmp
push
sti
into
adc
push
scas
pusha
jnp
or
jb
xchg
outs
fimul
jecxz
mov
and
jo
(bad)
scas
rcr
mov
ins
adc
imul
inc
xlat
(bad)
xchg
inc
push
mov
std
shr
pop
push
into
cs
dec
add
xchg
pop
mov
scas
mov
hlt
push
das
into
outs
cmps
cmp
arpl
sbb
add
dec
inc
imul
or
xchg
(bad)
push
dec
push
jns
(bad)
into
add
adc
test
shrd
sub
stos
in
into
cmp
cwde
push
rcr
loop
add
pop
es
sbb
std
or
sbb
dec
sub
mov
dec
bound
(bad)
(bad)
(bad)
out
xchg
fwait
jg
sbb
ficomp
(bad)
xchg
int3
sub
icebp
cld
dec
stos
stc
jae
pop
xor
popa
cmp
arpl
into
sub
mov
xchg
ja
dec
jbe
mov
push
out
cmp
imul
dec
icebp
(bad)
mov
stos
fistp
adc
scas
cmps
mov
into
fnstsw
mov
adc
mov
into
sbb
dec
or
data16
lahf
enter
into
sub
jb
cmp
hlt
je
cmp
out
pop
sub
outs
out
jle
leave
ror
push
xchg
ja
push
add
scas
les
add
sub
cdq
into
pop
iret
lea
dec
jge
jae
retf
into
ja
stc
cld
int3
imul
loope
jbe
adc
fimul
inc
into
call
push
ins
mov
jp
loope
push
rcr
lahf
aam
into
xor
adc
into
into
loop
retf
mov
adc
int
imul
imul
mov
in
(bad)
rcr
mov
mov
mov
lock
into
and
adc
loop
mov
shr
or
clc
repz
mov
into
mov
or
les
mov
das
lea
arpl
sub
call
shl
mov
out
movs
pop
add
nop
xchg
test
or
into
dec
pusha
rol
sti
into
adc
ins
xchg
stos
(bad)
jnp
into
jp
push
xchg
mov
jge
into
movs
jne
xor
scas
scas
and
jbe
or
cmp
outs
xchg
adc
sub
int
daa
or
icebp
retf
into
sub
out
and
add
clc
call
mov
mov
into
mov
sub
ficom
(bad)
fsub
sar
int3
into
or
test
inc
add
(bad)
push
call
jbe
adc
xchg
(bad)
loope
into
jmp
test
lahf
sbb
cdq
in
es
test
fistp
addr16
into
dec
inc
dec
fisubr
aaa
(bad)
cli
into
xor
pop
pusha
scas
and
test
in
into
xchg
or
cmps
jo
push
jbe
into
jns
cwde
lods
mov
sub
scas
aad
push
mov
cmovo
(bad)
ins
lahf
fmul
cli
ret
fnstcw
xchg
push
movs
fnstenv
lods
dec
sahf
sub
bswap
aam
in
(bad)
mov
rol
push
in
into
dec
mov
dec
push
repnz
test
idiv
stos
into
cmp
repnz
(bad)
cmc
xchg
shl
shr
mov
movs
push
fld
mov
jle
xchg
mov
jmp
jge
cmp
pop
icebp
fist
lahf
cmps
cmc
cmp
push
mov
jo
out
pusha
inc
xchg
cmps
int
pop
(bad)
stc
pushf
sbb
xor
pop
xor
into
push
push
mov
mov
mov
out
call
and
(bad)
test
pop
adc
fldenv
lods
sub
fdivrp
in
into
(bad)
mov
das
push
into
jno
out
cmp
into
arpl
mov
mov
icebp
mov
xor
dec
sbb
push
pop
aaa
inc
fsub
and
test
les
pop
push
in
addr16
adc
aam
sbb
xchg
cld
and
hlt
into
jecxz
xor
into
fnsave
cs
adc
or
into
sbb
fcomp
jo
xchg
into
mov
lods
dec
jmp
popf
push
into
cli
cmp
cld
into
fadd
repnz
sar
jl
iret
adc
cmp
(bad)
mov
into
into
push
xchg
jp
das
sbb
movs
stos
xor
xor
es
adc
das
dec
ss
mov
shr
scas
aas
dec
into
jg
not
cmp
into
xchg
cmps
add
test
sti
mov
enter
ret
pop
pop
push
mov
int3
mov
sub
push
inc
mov
rol
cmps
shl
lods
jge
cmp
cs
adc
and
into
pop
out
mov
outs
retf
or
pop
into
stos
int
ja
fdivr
adc
xlat
es
push
popf
mov
orps
repnz
add
mov
mov
pop
fcom
popa
into
pop
imul
stos
aaa
sbb
into
fs
dec
push
rcl
push
into
pop
and
jo
into
std
jmp
push
mov
enter
js
in
fnstsw
into
iret
mov
vpaddusb
cmp
out
cmp
add
dec
lods
popa
leave
fimul
push
into
jno
ret
inc
out
iret
mov
and
out
js
je
pop
into
xchg
arpl
xor
and
adc
je
test
sbb
jmp
xchg
(bad)
mov
adc
sbb
xor
mov
push
scas
out
mov
xchg
into
ds
push
arpl
push
push
sbb
xchg
pop
and
jecxz
inc
xchg
out
mov
outs
shr
mov
push
fmul
mov
into
cmpxchg
jmp
lock
scas
je
mov
scas
loop
call
cmp
cmps
(bad)
mov
repz
out
pop
xchg
movs
into
jl
imul
xchg
cs
sub
add
iret
dec
call
sbb
fs
and
lods
pop
sub
fmul
out
dec
rcr
pop
push
ret
loope
sub
mov
xor
into
push
scas
test
lods
mov
clc
add
xchg
adc
sub
lods
ja
int
jmp
aas
(bad)
movs
push
mov
into
push
sbb
xor
(bad)
into
sub
pushf
pop
or
inc
scas
cld
scas
mov
inc
xlat
sub
and
(bad)
loope
jno
mov
push
loop
test
sbb
repnz
adc
jle
and
mov
test
xchg
sub
loope
adc
test
mov
cmp
sbb
jecxz
sbb
push
(bad)
retf
sub
mov
into
xor
adc
mov
(bad)
shr
add
jmp
xlat
dec
not
cwde
cmps
das
xchg
scas
in
xchg
cdq
ss
jb
jne
mov
mov
inc
jnp
int3
mov
sub
lods
lahf
jle
aas
scas
fprem1
fsub
mov
inc
into
ret
(bad)
cli
xchg
dec
mov
and
and
lea
into
daa
popa
(bad)
add
cmp
into
in
mov
loope
into
das
mov
mov
(bad)
out
lahf
jg
dec
(bad)
loop
shl
iret
into
rcr
mov
ret
into
mov
test
stos
scas
fincstp
dec
ret
leave
xchg
ja
jmp
cmps
fild
jno
pop
into
push
cmc
loopne
pusha
ins
pop
cli
pop
mov
out
(bad)
aas
mov
pop
sub
into
fadd
xor
mov
into
mov
or
scas
jg
arpl
mov
into
push
call
gs
ret
pop
test
sub
cld
adc
inc
mov
add
dec
scas
mov
xchg
repz
add
and
mov
into
in
rol
push
inc
fsub
into
cs
loope
push
mov
into
popa
push
adc
cld
or
xor
sbb
into
out
and
inc
push
ins
(bad)
cld
into
fld
add
inc
or
mov
rcl
imul
(bad)
jmp
cmp
pushf
cli
xlat
loope
xchg
iret
fdivrp
mov
cmps
xchg
jne
and
or
jmp
clc
adc
fmul
adc
push
in
rcl
push
inc
into
les
nop
aam
imul
inc
(bad)
jns
push
xor
inc
mov
ss
jle
into
lods
cmp
aas
mov
jg
sar
lods
rcr
add
dec
pop
jae
into
fistp
std
jge
(bad)
mov
mov
ror
pop
fwait
(bad)
sbb
sub
mov
nop
call
or
popf
dec
jno
iret
cdq
mov
sbb
mov
or
mov
pusha
ins
out
outs
push
(bad)
out
into
inc
fcmovb
pop
jmp
inc
adc
jmp
scas
retf
jecxz
push
fs
sbb
into
dec
stos
xchg
fadd
pop
mov
stc
sub
test
xor
pop
cmc
into
nop
adc
dec
push
jmp
or
xchg
mov
sub
stc
enter
movs
sub
jnp
mov
inc
mov
mov
scas
loope
out
sbb
sar
leave
shl
scas
mov
push
mov
pushf
mov
mov
ds
test
stos
xor
test
cmps
mov
pop
out
idiv
pop
dec
or
ret
(bad)
into
pop
in
rol
into
xor
cmp
lock
push
add
ret
inc
inc
pop
into
shl
out
into
shl
sbb
mov
sbb
fwait
mov
imul
rcr
into
add
es
jno
fmul
cmp
and
xchg
pop
mov
add
or
xor
dec
add
mov
sub
movs
scas
daa
or
jnp
(bad)
(bad)
sub
xchg
stos
push
dec
dec
aad
inc
ds
test
(bad)
das
or
jmp
add
add
fldenv
fcomp
mov
dec
(bad)
not
es
into
je
pop
xchg
ds
sti
mov
ins
pop
arpl
(bad)
frndint
ror
mov
ins
into
jae
data16
in
push
into
mov
add
fcomp
xor
jmp
add
xchg
mov
push
das
inc
cmp
mov
lea
popa
aaa
pop
mov
push
retf
jb
pop
into
push
clc
adc
ret
pushf
sub
into
dec
stos
pop
mov
into
dec
sub
add
hlt
inc
mov
retf
int3
into
aad
sub
push
repnz
push
fsubr
adc
sahf
adc
pop
retf
into
jno
out
mov
fsub
sbb
pop
sub
aad
sub
jb
into
das
jae
sub
ss
xor
ja
ret
mov
ret
into
lods
les
in
jmp
retf
xlat
mov
xor
xchg
out
rcr
push
inc
das
dec
xor
into
or
mov
push
or
dec
ret
add
fldcw
mov
movs
out
dec
js
mov
scas
dec
fcmovbe
adc
into
dec
(bad)
mov
into
add
into
ins
lods
das
xor
lahf
push
into
and
(bad)
popa
mov
into
ins
imul
test
mov
ror
into
out
mov
invd
scas
cmps
test
test
into
into
mov
and
cmp
repz
(bad)
fcomi
dec
sub
mov
stos
mov
ins
sub
mov
mov
aas
iret
in
mov
stc
in
rdpmc
or
mov
(bad)
mov
into
and
dec
out
cdq
inc
(bad)
into
pop
repnz
and
imul
into
fsubr
aam
into
jle
add
ret
mov
test
jp
nop
mov
cmc
lods
jmp
lods
jne
outs
inc
xchg
repz
lea
mov
cmps
cs
cmp
dec
sbb
push
cli
sar
outs
fmul
and
mov
mov
out
cmp
pop
or
or
jmp
xor
fsubp
btc
pop
push
into
in
mov
lods
(bad)
shl
dec
into
(bad)
fs
or
sub
cmp
loopne
adc
mov
into
push
jmp
mov
lods
dec
xchg
mov
leave
das
mov
dec
pop
add
push
into
push
mov
add
dec
out
pop
dec
out
mov
(bad)
sti
dec
scas
(bad)
cs
loope
icebp
rcr
jns
xchg
sbb
or
aad
int3
xchg
ss
push
into
lods
add
clc
add
cmp
test
fiadd
into
sar
push
into
pop
(bad)
mov
adc
sub
into
pop
sub
add
enter
push
clc
sub
mov
fwait
sub
add
sbb
pop
iret
mov
add
into
and
scas
sub
loopne
jmp
ror
out
jno
push
sub
into
imul
sub
mov
into
add
push
test
into
mov
dec
sub
addr16
(bad)
dec
out
pop
cmc
inc
mov
fsub
sbb
push
adc
mov
lods
jo
mul
dec
out
pop
scas
cmps
into
out
and
addr16
into
sub
sbb
cmp
mov
loope
push
std
into
mov
mov
stc
into
push
push
or
push
adc
cdq
inc
mov
into
and
ins
outs
into
and
pop
jne
xor
add
sub
ins
fidiv
jbe
into
or
mov
arpl
ror
inc
mov
into
add
xchg
test
in
into
mov
cmps
repnz
test
pop
push
inc
xor
in
imul
dec
lods
fcmovu
jmp
in
out
add
(bad)
arpl
icebp
pusha
sub
jnp
enter
xchg
mov
dec
lea
loop
mov
push
adc
cwde
dec
shl
pusha
into
mov
dec
inc
pop
add
into
xchg
jl
sar
sub
cmp
(bad)
aad
into
or
lds
mov
jg
(bad)
call
mov
fs
sbb
fcom
mov
xchg
js
cmp
mov
fcmovb
into
scas
gs
jae
sub
lods
mov
cmps
jge
xchg
cmp
into
aad
dec
scas
outs
retf
enter
xchg
mov
sbb
into
cmc
or
inc
into
in
lods
mov
push
scas
mov
popf
jb
sahf
test
push
mov
scas
stos
push
add
ror
into
mov
jp
mov
inc
movs
pop
cmc
out
pop
and
repnz
aad
fwait
jle
sub
xor
test
cmp
shl
jmp
xchg
inc
mov
push
mov
or
into
clc
sbb
mov
fsub
and
add
sar
mov
ret
into
sar
in
idiv
imul
jnp
cdq
mov
call
xchg
aad
icebp
loope
int3
xchg
pop
into
repnz
test
jecxz
dec
loop
loopne
out
addr16
movs
mov
lods
xchg
sbb
into
rcr
fiadd
mov
scas
nop
call
sbb
dec
lock
xor
das
fistp
adc
into
jge
jle
mov
imul
dec
fldenv
fcmovbe
sbb
test
mov
jl
add
dec
fild
adc
into
fs
loopne
mov
int
and
lods
or
mov
nop
cmc
div
mov
xchg
pop
into
aas
hlt
daa
dec
stc
cmps
(bad)
into
inc
sub
dec
into
jmp
jmp
popf
jne
leave
iret
out
shl
dec
and
cmps
shr
into
fldcw
retf
inc
test
jae
stos
mov
sub
(bad)
out
pop
test
inc
fs
imul
dec
arpl
mov
cs
loop
and
sbb
push
aas
aaa
xor
fcmovnbe
xlat
pop
enter
lods
stos
sti
inc
sub
mov
in
push
xchg
test
in
mov
xor
into
out
rcl
cmps
shl
(bad)
(bad)
test
mov
lods
in
jb
or
fbld
retf
sub
inc
mov
mov
cmps
jmp
dec
pushf
cli
into
and
push
cld
mov
inc
jae
cmps
push
inc
mov
scas
sar
or
mov
cli
into
sahf
(bad)
aam
sub
mov
adc
mov
mov
out
jns
xchg
into
mov
sub
into
sub
mov
jg
dec
xor
aam
pop
mov
xchg
fdivr
add
xchg
xor
jbe
std
into
ja
mov
sbb
sub
xor
pop
test
lods
sub
mov
into
jp
cmps
outs
and
cmps
test
pushf
iret
pop
jle
into
retw
sub
mov
pop
xor
shl
movs
mov
pop
test
gs
jle
dec
pop
ins
mov
lahf
ds
xor
in
sub
inc
into
mov
lods
retf
cmps
push
lods
push
cmp
fistp
(bad)
fwait
mov
xor
(bad)
in
jle
mov
(bad)
loop
js
into
pop
xor
out
dec
into
das
inc
push
cmps
in
mov
or
enter
sub
pop
je
cmp
into
lds
and
mov
out
fwait
movs
repz
cmps
into
ins
push
push
in
test
jmp
mov
dec
test
mov
push
pop
pop
pop
ret
into
nop
lds
sar
mov
pop
mov
test
lods
jbe
xchg
adc
mov
jne
es
stos
mov
sbb
add
(bad)
mov
pop
sub
xchg
push
push
ror
jmp
loop
cmc
dec
ficomp
das
fisubr
scas
mov
xor
fcomp
xchg
jmp
cmovo
jmp
lock
je
lds
sub
movs
inc
sub
cwde
into
cld
or
mov
dec
adc
fld
xchg
xchg
into
sub
aaa
add
out
rcr
hlt
in
into
xor
fs
popa
fld
sbb
pop
cmps
std
into
call
(bad)
out
sti
cmp
test
into
pop
or
mov
ins
push
push
aas
sbb
mov
mov
aad
scas
shl
lods
sbb
ret
jnp
xchg
dec
sbb
into
jo
imul
int
arpl
or
mov
into
jne
scas
jb
inc
clc
into
outs
std
sahf
pushf
mov
or
mov
xchg
mov
and
into
int
add
adc
inc
scas
fnsave
inc
repnz
outs
cs
call
test
dec
pusha
xchg
dec
loope
sub
mov
mov
mov
es
sbb
jmp
(bad)
sub
hlt
xchg
loope
push
and
push
and
cli
inc
in
aas
jl
xor
xlat
push
(bad)
pushf
mul
mov
mov
in
add
mov
scas
xchg
dec
inc
scas
psubb
fld
inc
into
pop
movs
and
jno
pop
sahf
out
inc
lahf
aam
sbb
mov
daa
nop
ds
sub
int
loopne
lds
(bad)
dec
mov
mov
shl
movs
xchg
out
scas
scas
dec
and
rcl
hlt
mov
sbb
adc
scas
push
ror
mov
rcl
xchg
cmps
das
in
cmp
jge
mov
push
jmp
pop
mov
pusha
retf
aas
sbb
imul
scas
pop
add
out
xor
inc
fisubr
mov
addr16
push
into
enter
js
(bad)
mov
(bad)
pop
pop
into
test
ret
into
(bad)
inc
nop
arpl
(bad)
push
xchg
add
xchg
fmul
jno
shr
repz
into
nop
test
fisub
in
push
into
test
and
push
into
pop
pop
aaa
ja
loopne
xor
in
fdivr
mov
mov
sbb
or
pop
sbb
test
ja
loop
into
(bad)
les
repz
jecxz
push
fst
arpl
xchg
fimul
cmp
into
addr16
inc
shl
jp
jmp
imul
cli
ja
fadd
xchg
push
cld
push
scas
xor
mov
ret
addr16
iret
into
mov
lea
jmp
stos
into
adc
mov
push
or
or
inc
clc
(bad)
cmp
mov
into
icebp
xchg
fnstenv
sbb
ret
mov
int
and
xor
xor
arpl
cdq
cmp
cmp
xor
add
into
mov
scas
std
js
mov
mov
outs
popa
sub
imul
push
(bad)
into
in
sub
into
xor
fwait
mov
jns
test
add
iret
mov
dec
mov
sbb
jle
or
jge
pusha
sub
nop
into
jmp
loop
scas
into
xchg
adc
ss
inc
into
mov
loopne
inc
into
outs
add
push
ret
xchg
test
test
imul
and
icebp
into
pop
mov
fcmovu
into
and
call
push
gs
lds
out
or
dec
xor
mov
into
cmp
enter
into
sub
push
cmp
sbb
cmp
mov
(bad)
out
repnz
mov
ret
push
mov
cli
inc
pop
into
ret
sbb
les
das
rcl
push
or
mov
out
into
js
imul
lahf
inc
fwait
into
rol
(bad)
cmp
jns
mov
(bad)
lods
add
xchg
cmc
into
inc
cwde
js
mov
or
into
ds
outs
hlt
fs
mov
in
inc
mov
movs
mov
imul
popa
fisub
into
bnd
fsub
into
outs
inc
adc
loop
jmp
xchg
stc
daa
mov
in
lds
std
scas
(bad)
and
movs
dec
into
dec
inc
cwde
ds
push
mov
mov
movsx
adc
or
int3
lea
into
adc
pop
test
into
iret
cmps
mov
adc
push
adc
stc
popa
push
xchg
into
jnp
mov
mov
nop
lods
or
fisub
xchg
pop
in
movs
lods
rcl
jb
xor
pusha
xchg
into
or
rcr
xchg
jp
(bad)
into
xchg
mov
add
stos
into
int
mov
sbb
pop
into
push
jnp
cmp
jb
into
jl
clc
stos
push
push
pushf
ficom
dec
mov
mov
sub
and
sub
xchg
into
mov
cmovno
pop
dec
into
test
repnz
cmp
jle
movs
aas
xor
test
rcr
test
and
out
outs
out
mov
test
out
es
push
scas
into
push
dec
inc
pushf
dec
fisttp
rcl
sbb
imul
dec
and
lds
(bad)
adc
into
imul
cli
push
xchg
adc
into
cdq
or
mov
pmullw
pop
int3
into
sahf
mov
and
adc
out
(bad)
in
into
loopne
push
shl
out
nop
aam
mov
sub
into
xchg
ins
pop
add
call
jecxz
lods
bound
psubb
inc
push
(bad)
mov
mov
xor
push
into
out
xor
pop
dec
mov
rcl
inc
xchg
ret
cmp
stos
(bad)
outs
test
(bad)
fisttp
xchg
imul
mov
into
cmp
cmp
into
xor
jmp
loope
ins
adc
pop
pusha
ins
cld
jo
aas
into
jg
stc
cmp
mov
test
add
cli
mov
or
aaa
pop
out
mov
add
jo
psubsb
xchg
mov
jmp
data16
out
xor
mov
add
(bad)
aaa
sbb
test
shl
retf
out
lods
neg
cs
dec
or
mov
into
shr
outs
fdivr
pop
into
sti
cmps
dec
out
mov
sahf
jns
push
sbb
(bad)
or
into
cmp
imul
sbb
lods
and
mov
ficomp
ja
rcr
retf
(bad)
dec
(bad)
into
adc
xchg
sub
into
addr16
mov
inc
int3
ret
ja
mov
test
cli
mov
cmp
jmp
mov
retf
push
hlt
into
pop
jbe
adc
hlt
arpl
add
std
pop
dec
into
add
mov
cmp
mov
test
dec
out
mov
xchg
sbb
fimul
lods
ss
outs
lods
into
loop
mov
mov
pusha
cmp
jbe
shr
arpl
mov
das
xchg
mov
in
and
sub
mov
into
(bad)
out
enter
mov
or
jmp
fwait
dec
ret
cmps
popa
pop
jbe
add
shl
scas
push
inc
data16
retf
into
mov
xchg
xor
push
and
or
or
js
maskmovq
idiv
pop
adc
mov
xlat
cmp
pop
stos
retf
loop
push
mov
xchg
(bad)
ss
inc
pop
les
into
inc
popa
mov
sub
or
push
mov
cdq
push
dec
xor
mov
mov
enter
cwde
sub
pop
xlat
lahf
fcomp
add
stos
or
scas
cmp
and
mov
into
jg
mov
and
cmps
inc
out
sub
mov
adc
mov
sti
js
into
jmp
popf
xor
mov
ja
add
imul
(bad)
mov
push
fadd
shl
into
add
cmp
add
or
scas
mov
adc
les
hlt
push
ror
jne
enter
xor
das
jb
push
mov
dec
into
mov
dec
fxam
into
and
xchg
fmul
push
xchg
aaa
cmp
jb
jmp
repz
into
cmc
je
pop
dec
loop
ret
into
and
repnz
sahf
mov
scas
mov
jge
push
into
mov
mov
xor
jl
push
inc
sub
xchg
fstp
add
popa
stos
mov
adc
int
pop
into
retf
in
sbb
into
pop
sbb
xchg
jb
(bad)
into
mov
scas
mov
jne
leave
mov
mov
into
push
lods
sbb
sbb
fs
into
or
mov
inc
adc
pop
test
jae
lods
inc
iret
push
inc
loop
pop
pop
adc
mov
jmp
bound
scas
sbb
or
ret
lods
and
mov
or
inc
fwait
(bad)
sub
ins
into
cmp
movs
jle
cmp
inc
into
and
lahf
test
out
in
xchg
aam
cmps
test
mov
(bad)
in
aaa
scas
into
pusha
sbb
lods
cmp
dec
sub
add
xor
retf
mov
mov
ds
in
mov
xchg
into
pop
jle
xlat
mov
retf
imul
dec
jl
fld
adc
mov
dec
in
pop
aad
jge
or
lock
fst
push
sub
daa
sub
pop
movs
inc
ss
xchg
stos
scas
jge
and
mov
pusha
daa
call
pop
dec
mov
aam
repnz
into
mov
mov
in
pop
jo
lock
sub
mov
inc
das
shr
push
into
fadd
cmp
push
mov
into
jae
mov
xor
loope
out
sbb
sbb
into
mov
ins
add
int
pop
xor
std
fwait
pusha
(bad)
or
jge
mov
add
xor
scas
or
jne
lar
stos
or
(bad)
jae
(bad)
and
mov
idiv
retf
cmp
cmps
pop
into
push
and
out
(bad)
pop
into
mov
mov
(bad)
into
sbb
inc
push
push
jmp
into
sub
repz
mul
in
lds
or
and
sbb
loopne
push
rol
mov
ret
out
loope
into
ja
repz
jg
adc
cmps
pop
cmc
xor
into
aad
sbb
add
push
or
jecxz
rol
out
jmp
loopne
adc
adc
add
(bad)
sbb
jmp
jo
and
xchg
push
cld
into
mov
test
das
(bad)
fimul
icebp
adc
add
or
icebp
les
cmp
mov
outs
pop
(bad)
es
jns
xchg
mov
add
ror
ss
lea
mov
in
dec
idiv
(bad)
dec
ror
(bad)
sbb
inc
jae
(bad)
and
mov
sub
xchg
pop
stos
xor
in
bound
and
add
pop
sbb
js
jmp
xchg
test
iret
jle
push
into
xor
sub
mov
jmp
xor
and
stc
pop
outs
into
inc
add
gs
jge
xchg
push
ror
ja
dec
and
sbb
pop
adc
es
mov
retf
or
push
lock
xor
out
pop
fbld
mov
pop
aas
(bad)
fisub
lock
and
xchg
mov
push
(bad)
push
repnz
into
or
aaa
dec
xor
shr
and
mov
adc
(bad)
xor
xor
into
in
cmp
bound
cwde
xchg
leave
mov
into
add
sub
movs
inc
fiadd
pop
push
push
loop
(bad)
(bad)
js
nop
ss
pop
xor
sahf
test
bound
sqrtps
add
addr16
ret
jbe
std
sub
jle
into
enter
outs
jp
adc
pop
add
outs
inc
mov
mov
clc
ds
loop
hlt
into
push
pop
pusha
push
into
mov
stos
mov
into
dec
pop
and
mov
jns
lods
cmps
mov
ficom
jbe
sbb
and
jae
push
push
aas
jge
pop
call
scas
pop
movs
into
and
mov
or
jl
outs
out
dec
pop
cmps
or
add
inc
add
mov
pop
adc
call
dec
push
fs
jge
loop
stos
pop
pop
scas
push
mov
out
std
pop
jnp
adc
dec
or
test
ins
mov
dec
(bad)
cli
add
into
jge
jle
xor
lods
std
scas
loop
lds
dec
push
sub
xchg
sub
scas
movs
int
mov
inc
and
mov
push
addps
jb
stos
into
mov
and
outs
into
dec
stos
add
(bad)
mov
jecxz
sub
fimul
ds
into
cmp
shl
or
lds
mov
xor
test
jp
xchg
scas
into
mov
test
mov
dec
push
stc
aad
es
dec
adc
scas
push
mov
call
mov
xor
sub
das
mov
sub
into
xor
jae
in
or
aad
into
mov
into
push
xchg
movs
mov
cdq
test
mov
into
into
jnp
cmp
push
test
xlat
int3
es
dec
inc
adc
into
lahf
pop
mul
sub
pushf
into
loopne
dec
and
mov
lods
aaa
cmps
into
in
(bad)
mov
adc
lahf
test
inc
add
xchg
into
dec
push
jne
into
lods
inc
jns
mov
inc
cmp
push
mov
jo
loopne
out
cld
add
shr
into
sar
mov
into
push
pushf
and
into
div
sbb
adc
test
cmp
xor
iret
into
fcmovne
js
jmp
(bad)
in
retf
pusha
scas
pop
nop
into
aas
imul
mov
mov
mov
js
mov
movs
mov
into
out
nop
pop
(bad)
neg
into
and
call
retf
or
sahf
pop
out
(bad)
mov
xchg
(bad)
into
pop
jo
pop
nop
xchg
shr
push
jle
int3
dec
cmp
mov
mov
into
sahf
and
sbb
push
call
cmp
jp
repz
into
sti
or
test
push
test
fimul
jp
pop
shr
pop
bndldx
into
es
dec
sub
in
fst
pushf
adc
or
cmps
into
push
inc
pop
jp
mov
into
jb
cli
push
mov
neg
mov
fcmovne
test
mov
aas
mov
xchg
into
arpl
sub
adc
add
push
add
aas
into
cs
call
dec
xchg
(bad)
pop
jle
icebp
pop
dec
into
fidivr
or
sbb
cld
into
or
lahf
push
mov
sub
into
shr
push
(bad)
retf
div
pop
into
lock
cmp
add
xchg
daa
std
pop
xchg
jbe
into
mov
imul
dec
dec
repnz
into
mov
(bad)
mov
jle
addr16
jl
into
sar
mov
popf
test
loop
iret
fimul
cmc
outs
mov
into
div
push
sub
and
stos
clc
into
push
gs
rcr
into
sbb
mov
jb
mov
(bad)
je
sub
into
mov
jp
cmp
dec
into
sti
jns
fild
das
ss
pop
dec
dec
(bad)
popa
icebp
aad
push
and
pop
sbb
lahf
test
mov
pop
xor
pop
pop
cmps
add
jecxz
enter
sub
into
ss
cmp
xor
cmp
ds
out
inc
pop
js
das
inc
fxch
leave
mov
jae
jp
adc
push
mov
sbb
(bad)
adc
js
fstp
div
into
pop
xor
movs
mov
out
imul
into
fwait
xlat
jb
inc
or
repnz
mov
into
addr16
inc
ror
arpl
icebp
hlt
dec
shr
push
xlat
inc
into
cmp
mov
into
sub
dec
dec
cmp
ss
add
into
daa
fist
(bad)
retf
into
repz
jmp
test
repnz
(bad)
orps
mov
mov
xchg
add
cwde
loopne
pop
into
add
sbb
jl
pusha
adc
rcl
(bad)
mul
fadd
imul
pop
mov
adc
into
mov
push
dec
xchg
into
xchg
pop
dec
inc
bound
mov
push
lods
sti
ror
or
add
ins
lods
sbb
arpl
movs
aaa
push
fisub
ss
(bad)
add
inc
or
in
retf
xchg
pushf
cmps
mov
inc
into
push
xchg
mov
into
imul
cmp
mov
sbb
test
sub
and
add
outs
movs
jmp
(bad)
retf
inc
aam
into
fwait
test
je
push
jle
dec
mov
into
or
xchg
out
retf
fsubr
jg
fcomp
into
scas
outs
inc
xlat
in
sbb
into
(bad)
aam
dec
ins
mov
lods
(bad)
mov
div
dec
jb
in
pusha
mov
in
cmp
cmp
xor
imul
call
fdivr
out
test
pop
pushf
or
mov
in
xor
lahf
nop
loopne
sub
gs
outs
pop
popa
pop
jnp
into
imul
sahf
into
xchg
xchg
aam
retf
pop
(bad)
into
mov
popf
daa
test
jecxz
into
push
(bad)
push
dec
cmp
push
aam
cmp
pop
mov
in
out
inc
fisub
das
ror
push
shl
aad
adc
and
test
xchg
into
div
add
into
or
cmp
scas
sbb
outs
aad
test
ins
xlat
outs
ins
push
push
jge
stc
into
inc
push
ret
in
xchg
ror
push
xor
mov
jne
and
jge
push
into
in
daa
sbb
retf
fdivr
mov
dec
data16
pop
sbb
out
inc
pop
imul
mov
into
jb
repz
addr16
arpl
add
fld
sbb
sub
aaa
imul
jbe
xchg
stos
cdq
fdiv
(bad)
(bad)
adc
push
adc
movs
push
push
dec
add
mov
into
mov
pop
and
and
(bad)
(bad)
lods
mov
jg
outs
test
xchg
or
sahf
inc
cmp
outs
dec
jmp
test
mov
xchg
mov
cld
jmp
mov
sbb
into
mov
jae
pusha
scas
jecxz
adc
mov
cmp
dec
fidiv
les
bound
push
imul
(bad)
mov
lods
sub
mov
mov
bound
mov
idiv
into
mov
cmp
xor
test
retf
cmp
and
jae
into
outs
jge
sbb
gs
movs
mov
sub
into
mov
into
(bad)
mov
ror
or
in
fwait
imul
aam
or
lods
iret
and
pop
dec
(bad)
jecxz
push
stos
test
xor
(bad)
scas
xchg
test
rcr
outs
aas
mov
gs
shl
cmc
ja
into
push
or
stos
popf
stos
sbb
add
into
add
push
arpl
mov
fbld
add
popa
daa
bswap
jae
and
mov
rcr
shl
sbb
push
cmps
pop
jns
xor
pop
into
cmps
push
jo
sbb
lds
sub
cmp
cmp
out
dec
es
inc
xchg
out
and
jo
xchg
pop
aam
or
mov
inc
scas
mov
push
jge
sbb
or
adc
in
pop
mov
in
inc
out
pop
push
into
pop
mov
retf
imul
into
jbe
jle
into
jmp
cmp
add
into
cmp
pop
clc
lahf
ds
xlat
xchg
hlt
mov
aaa
xchg
inc
mov
xor
mov
out
xchg
cmc
data16
mov
inc
in
aam
fdiv
jno
xchg
adc
dec
ins
psubusb
imul
lock
fucom
cmp
scas
push
mov
into
aam
and
add
mov
es
into
pop
pop
inc
into
or
mov
lea
add
sub
mov
sbb
(bad)
push
and
sub
outs
and
lods
out
mov
shl
jae
ins
push
or
mov
aas
add
push
xor
test
lods
mov
jmp
int3
out
mov
dec
rol
inc
repnz
into
mov
adc
pusha
clc
pextrw
lahf
fcomp
scas
stos
in
mov
push
pop
xor
into
cmp
push
push
lods
or
inc
out
mov
cmp
jle
out
out
xor
into
mov
fld
scas
xor
test
jo
scas
hlt
sbb
es
loop
sbb
(bad)
out
sahf
or
into
jl
xor
fstp
out
sbb
outs
and
scas
in
enter
in
retf
outs
jae
aam
into
pop
out
mov
cdq
mov
mov
(bad)
cld
sbb
dec
inc
sub
(bad)
aad
xor
pop
(bad)
into
push
xlat
sbb
lods
mov
jnp
movs
sbb
test
xchg
push
sbb
sbb
push
into
add
daa
mov
into
cmps
add
and
push
into
or
or
inc
sub
pop
jo
adc
out
cmps
jmp
pop
test
rol
stc
into
call
cmc
into
in
jae
(bad)
xchg
lahf
in
mov
mov
ins
jge
mov
mov
scas
cmc
sub
ins
into
movs
push
pusha
adc
aas
xchg
sar
into
stc
sbb
lods
scas
push
ret
inc
shl
xor
cli
js
into
stc
dec
out
jne
inc
das
out
lea
(bad)
loope
sahf
and
xchg
retf
into
in
pushf
fistp
das
or
adc
stos
xor
nop
dec
push
into
loopne
stos
cmp
ss
jno
mov
into
lods
arpl
jp
inc
and
sbb
mov
xchg
fwait
ror
loope
fsub
loopne
dec
mov
fistp
or
into
mov
stc
mov
in
gs
jbe
into
lahf
sub
inc
(bad)
mov
push
adc
push
xchg
into
or
inc
push
pusha
into
ins
mov
fist
test
cmp
xchg
mov
dec
(bad)
das
pusha
sub
adc
lods
in
stos
push
pushf
push
dec
test
cmps
(bad)
fsubr
mov
(bad)
mov
into
mov
ror
movs
jns
xor
cwde
sbb
mov
imul
sub
popf
mov
jg
int3
and
or
into
push
shl
fs
imul
mov
mov
arpl
xor
mov
dec
mov
sub
into
fcomp
test
mov
jmp
inc
shr
mov
xchg
dec
mov
sub
test
cmp
enter
popf
cmp
lods
retf
adc
jae
cmc
pop
into
adc
or
into
cmp
out
movs
retf
mov
dec
movsx
ffreep
nop
cmps
and
jns
cdq
pop
fldenv
into
popa
or
sbb
pop
scas
fsub
into
das
mov
push
xchg
into
xor
dec
xor
into
test
xor
sbb
fisub
mov
cmp
into
mov
inc
out
add
clc
mov
jo
push
xor
stc
push
sub
inc
and
dec
mov
adc
xchg
dec
jo
(bad)
jmp
test
mov
ret
test
mov
inc
and
jbe
add
in
cmp
sar
in
fnstenv
mov
jp
daa
xlat
add
out
call
jb
mov
add
dec
(bad)
ss
in
fisubr
inc
and
cmps
icebp
mov
cmp
fisubr
(bad)
inc
outs
adc
mov
outs
mov
lock
pusha
cmp
mov
cmp
movs
scas
mov
into
jg
jb
ss
push
sbb
pop
sub
outs
scas
jl
mov
or
sub
xchg
std
into
int3
jbe
shl
in
sti
pop
loope
in
call
cmp
(bad)
push
dec
scas
push
push
mov
pop
mov
mov
sbb
out
bound
sar
jl
cli
or
in
jmp
lock
scas
jmp
mov
scas
xor
xor
ds
and
sub
xchg
mov
enter
add
mov
adc
jb
nop
in
clc
sti
shl
pushf
iret
mov
stos
loop
inc
into
mov
(bad)
ret
in
into
and
sub
into
mov
psrlw
pushf
repnz
les
xor
or
xchg
(bad)
xor
cmp
aas
inc
cmp
mov
sub
not
or
int3
fwait
push
push
inc
xor
lods
sub
shr
mov
into
pop
add
je
push
in
push
into
shl
push
std
call
inc
mov
in
cdq
ficom
mov
dec
fstp
or
inc
jne
xor
into
sub
xchg
into
loopne
cmp
mov
outs
cwde
sahf
(bad)
into
aam
popf
data16
mov
(bad)
into
daa
mov
add
push
dec
into
cmp
lods
mov
push
mov
inc
push
outs
and
or
sbb
out
or
adc
dec
cwde
ret
add
mov
(bad)
(bad)
std
dec
push
push
test
ins
test
mov
div
mov
js
into
mov
retf
fcmovne
jge
xchg
inc
cmp
mov
jb
pusha
pop
mov
fs
mul
cmp
sub
pop
popf
(bad)
mov
jne
or
out
push
hlt
mov
fidiv
and
aas
ds
movs
std
dec
(bad)
outs
int3
pop
into
push
or
pop
nop
ja
fmul
test
lods
pop
push
scas
lahf
dec
jno
jmp
arpl
addr16
lods
hlt
sub
sbb
getsec
into
adc
push
fcmovu
into
or
cmp
xor
aaa
jl
adc
mov
into
out
call
push
cmps
test
add
(bad)
into
pop
jecxz
cdq
push
popa
clc
mov
in
adc
xchg
hlt
sub
setb
mov
sbb
add
xor
xchg
cli
pop
mov
pop
xchg
mov
mov
int3
mov
das
les
scas
lea
jge
push
adc
mov
add
rol
dec
mov
jecxz
mov
bt
(bad)
jbe
into
sbb
mov
ja
push
mov
sub
popf
ss
test
lods
ins
retf
mov
jg
inc
push
xor
ret
cmps
dec
into
fnstsw
add
fxch
out
jae
or
dec
or
add
mov
das
xchg
in
lods
xchg
sub
sbb
dec
cmps
push
int
popf
scas
(bad)
in
xchg
iret
loope
in
test
or
sbb
fimul
std
dec
lods
outs
in
test
fadd
pop
push
into
sbb
mov
jge
mov
sbb
mov
cmp
push
dec
test
adc
or
dec
and
(bad)
add
pop
push
cmps
pusha
into
pop
adc
popa
sub
mov
add
cmp
lds
ror
push
inc
pop
jo
ss
into
cmps
xor
adc
bswap
enter
sub
jge
(bad)
xchg
lds
sahf
cmp
and
mov
das
leave
xchg
into
cmp
adc
push
fwait
into
dec
imul
into
movs
mov
xor
xchg
fcom
mov
mov
call
sar
inc
xor
mov
in
or
xlat
into
mov
mov
ins
xchg
add
lods
fld
pusha
into
or
mul
pushf
hlt
into
push
sub
dec
jb
inc
into
test
in
mov
mov
fcmove
popa
test
call
stc
cli
mov
into
xor
dec
xlat
mov
into
movs
pop
ds
enter
inc
jns
scas
inc
jl
mov
std
pop
mov
xchg
into
scas
push
jae
add
fistp
dec
or
push
(bad)
xchg
daa
inc
scas
xor
ds
add
out
jle
lods
xchg
xchg
call
icebp
fs
js
inc
push
retf
pop
les
aad
mov
adc
into
imul
dec
pop
xchg
popa
jnp
xor
sub
xor
dec
jg
or
int
mov
lods
jo
xchg
into
rol
jle
ret
out
into
mov
js
jb
mov
ja
cmp
call
out
inc
sub
and
je
fwait
mov
mov
xor
jle
add
and
into
jecxz
movs
dec
cwde
test
jl
dec
xchg
(bad)
mov
outs
test
push
(bad)
and
scas
mov
cli
pop
sbb
into
mov
push
cmp
and
into
dec
mov
jno
retf
mov
in
pop
mov
into
inc
pop
xlat
hlt
xchg
je
mov
icebp
imul
jo
cwde
jg
js
pop
in
sub
inc
aad
jl
int3
stc
scas
mov
pop
lahf
out
inc
test
test
in
scas
loopne
mov
pop
(bad)
into
mov
fsub
aam
daa
dec
sub
repnz
into
test
lock
dec
sbb
into
out
lods
or
mov
inc
pop
sahf
sar
jo
sbb
jne
into
out
sar
(bad)
xor
into
and
iret
ret
fisttp
into
and
test
inc
test
or
gs
or
jnp
or
pop
or
mov
scas
ins
lahf
push
xor
into
push
addr16
sbb
(bad)
outs
mov
ret
rcl
pop
xchg
into
mov
push
sub
pop
jne
idiv
mov
xchg
and
ret
push
call
retf
out
out
pop
fcmovbe
into
(bad)
data16
outs
pop
add
xchg
and
xchg
cs
push
cmp
cdq
repz
sbb
pop
cs
mov
adc
aaa
lods
pop
sub
add
movs
add
retf
stc
dec
into
jmp
outs
push
fiadd
cmps
mov
std
shr
inc
sbb
and
into
mov
add
jno
stc
ret
into
(bad)
or
adc
mov
cmc
je
into
cdq
mov
pushf
cli
into
leave
mov
xchg
test
lods
xchg
add
scas
out
test
sub
mov
sbb
pop
into
pusha
inc
adc
in
add
movs
stc
dec
call
xchg
cmp
cli
out
cmp
mov
arpl
aad
dec
aaa
sbb
adc
aad
stos
sbb
dec
pop
xlat
mov
jp
dec
mov
data16
or
sar
into
add
sbb
jae
clc
imul
pmulhw
sub
dec
out
pop
lods
movs
fisub
xchg
loopne
into
pushf
cmp
call
cmps
mov
pop
popf
das
xchg
mov
scas
mov
jb
(bad)
jbe
into
mov
mov
mov
mov
outs
retf
lds
out
test
stos
aad
adc
mov
mov
into
push
pop
pop
jne
mov
rcr
into
ja
pop
mov
into
call
xchg
and
fsub
fcomp
test
shr
dec
scas
adc
cmps
xor
into
popf
push
enter
mov
or
inc
sbb
cmp
(bad)
dec
sti
outs
mov
outs
adc
push
lods
push
retf
ins
cmp
mov
cdq
dec
js
dec
xchg
pop
jmp
rcl
jg
es
or
push
lods
imul
jbe
(bad)
fwait
in
push
lods
lods
aaa
inc
ins
mov
scas
add
aad
inc
(bad)
nop
mov
pop
imul
push
test
lahf
loop
push
inc
lods
test
add
in
test
and
mov
(bad)
sbb
ss
daa
xchg
in
sbb
stos
adc
bswap
push
xchg
into
lock
or
push
popa
loop
cmp
movs
test
into
rcl
mov
fisub
pop
cmps
or
jl
daa
dec
or
nop
cmp
push
add
mov
xchg
xchg
call
jmp
mov
in
into
adc
into
xchg
dec
out
inc
movs
rcl
push
jp
fcomp
inc
into
jnp
call
stc
into
jge
punpckldq
mov
sti
adc
mov
jno
xchg
gs
mov
xor
sub
int
cmp
loop
ds
mov
popf
lods
loopne
jb
cmc
sub
jbe
xor
pushf
xor
stos
int3
sbb
movs
sub
mov
push
(bad)
cdq
into
mov
mov
sub
jmp
shl
into
jle
dec
xor
test
jae
xchg
into
xchg
cld
test
and
mov
fs
pop
xchg
sbb
push
adc
mov
add
lea
sbb
sbb
sub
into
out
mov
add
retf
dec
in
xlat
ss
mov
push
xchg
bound
into
cdq
push
cmp
test
aad
into
scas
int3
inc
sysexit
inc
mov
(bad)
lahf
into
xchg
jmp
(bad)
hlt
sbb
lods
int3
push
xchg
xchg
test
sahf
cmp
lods
sub
mov
jle
add
mov
shrd
push
(bad)
or
mov
jo
adc
out
cmc
adc
test
cmp
test
adc
ret
ds
or
mov
test
mov
test
mov
or
test
jb
fdivrp
pop
jmp
and
ins
xchg
pusha
into
repnz
scas
mov
add
cwde
xor
xor
xchg
fidivr
push
xor
adc
jno
and
into
mov
xlat
xchg
pop
into
nop
push
or
add
call
(bad)
jp
nop
sub
dec
ror
iret
rol
xchg
arpl
sub
sahf
out
add
sbb
hlt
aad
into
lahf
daa
add
clc
push
rcr
test
sti
popf
jge
mov
popa
pop
(bad)
push
xor
shl
sbb
fcomp
into
lahf
add
sbb
fucomi
into
jecxz
ret
xchg
or
mov
(bad)
adc
into
cwde
loop
addr16
out
inc
test
fcmovbe
mov
mov
int3
cli
scas
pop
push
aad
addr16
fidivr
scas
or
das
das
in
mov
dec
out
adc
xchg
push
pop
nop
std
push
dec
dec
arpl
dec
les
data16
(bad)
jmp
pop
icebp
pop
and
sbb
sub
pop
ss
or
into
inc
data16
mov
movs
mov
cmp
aaa
in
into
sti
gs
mov
xchg
into
out
popf
xchg
push
dec
(bad)
(bad)
into
aaa
cmp
sub
cmp
mov
pop
jle
cmps
into
and
xlat
iret
mov
sbb
mov
into
mov
mov
daa
dec
lds
add
outs
xlat
in
inc
gs
lock
aad
out
ja
xor
xor
cmp
enter
inc
mov
xchg
dec
sbb
test
pop
es
gs
popa
arpl
adc
outs
mov
into
pushf
dec
cmp
cmps
cmp
imul
sub
mov
lds
or
mov
add
add
cmp
stos
into
adc
inc
loop
scas
iret
mov
ret
lods
push
dec
jo
sar
xor
mov
out
into
scas
pop
ja
push
imul
bound
in
loop
into
das
jmp
push
mov
jp
hlt
or
pop
bound
mov
push
ds
sub
hlt
retf
jmp
popf
rol
mul
imul
retf
in
aas
into
ret
fmul
lock
xor
jmp
jg
or
jle
outs
mov
fstp
movs
aad
imul
mov
(bad)
mov
adc
dec
mov
jmp
mov
lea
or
add
scas
in
jge
lock
call
jo
fs
pop
dec
push
xchg
mov
xor
mov
sbb
mov
mov
mov
or
or
(bad)
into
jnp
push
scas
into
jge
mov
fild
or
into
cmps
sub
xchg
int
into
js
stos
inc
nop
int3
mov
jne
inc
(bad)
repz
jb
push
sbb
mov
(bad)
mov
inc
inc
bts
cmp
xchg
xchg
jmp
aas
mov
mov
into
and
mov
repnz
add
xor
scas
(bad)
rol
into
enter
cmps
out
mov
pop
dec
sbb
ds
es
push
cmp
xor
push
je
xchg
mov
in
inc
sub
dec
xor
repz
mov
scas
inc
in
ins
lock
in
sti
pop
xlat
ja
div
xor
cdq
daa
adc
cmp
pop
aad
into
xor
inc
xlat
pop
xor
fld
mov
scas
push
xchg
dec
int
into
sahf
inc
sub
sub
(bad)
mov
or
pop
add
lock
lods
jmp
into
cmp
dec
adc
xor
pop
out
cmc
dec
arpl
retf
jg
lds
mov
fimul
adc
push
into
test
mov
test
mov
daa
(bad)
cmp
adc
shr
and
cwde
bound
icebp
xlat
scas
pusha
xchg
leave
in
aas
inc
and
stc
loopne
nop
inc
or
lods
pop
xor
or
jne
sub
out
mov
pop
add
push
(bad)
and
arpl
call
retf
rol
and
cmps
jae
push
dec
jmp
nop
retf
sub
test
jno
sub
xrelease
arpl
out
popa
fadd
lock
leave
aaa
ret
mov
mov
push
div
lods
sti
cs
lods
dec
push
jle
and
into
and
and
jg
into
iret
addr16
and
fadd
stos
ret
sar
in
int3
(bad)
push
adc
or
or
mov
(bad)
xchg
(bad)
xchg
ja
sub
cli
push
fisubr
nop
push
xchg
pushf
mov
inc
comiss
cmp
movs
add
adc
mov
cvtps2pd
add
dec
outs
jl
push
nop
movs
scas
xchg
ror
(bad)
movs
div
xor
push
rcl
lods
sub
lea
(bad)
rcl
test
gs
fistp
into
test
unpcklps
mov
fiadd
in
or
jae
fstp
std
mov
bound
gs
test
pop
(bad)
movs
out
iret
lahf
dec
sub
or
ror
test
imul
into
jge
cwde
test
into
popa
xor
xor
into
xor
jmp
call
inc
ja
hlt
into
mov
push
ss
add
retf
into
cmp
dec
push
aam
lods
dec
pop
mov
pop
mov
sub
and
or
test
push
cmc
push
rcr
dec
dec
mov
pop
test
sbb
dec
shr
out
into
popa
adc
lds
into
movs
cmp
mov
scas
iret
outs
ins
jbe
leave
pusha
packssdw
mov
push
outs
sbb
cwde
mov
fld
js
clc
and
xchg
sbb
sub
dec
out
pop
mov
pusha
into
imul
adc
gs
in
out
inc
mov
mov
jp
adc
add
outs
div
stos
cli
popf
into
hlt
cmp
lock
sub
into
cmp
push
xchg
rcr
into
es
in
mov
cmp
sbb
sbb
jmp
fisttp
loop
adc
fisubr
loop
jl
scas
cmp
mov
movs
ret
cwde
addr16
xchg
and
jle
mov
pop
and
jl
aas
mov
or
std
mov
or
push
pop
sbb
mov
into
call
mov
or
push
dec
jmp
into
pop
inc
mov
lods
into
mov
cmc
sub
lods
pop
cmp
ror
inc
into
shr
jnp
mov
push
pop
adc
and
xor
into
lods
scas
cmps
aas
push
or
and
adc
sbb
mov
inc
and
xchg
pop
sub
jb
lods
jne
into
out
les
stos
into
(bad)
jmp
lods
sub
add
lea
inc
imul
test
jge
idiv
lock
jbe
mov
xor
into
cwde
xchg
pop
xchg
in
add
push
sbb
dec
lea
in
push
scas
sbb
into
aam
mov
adc
sub
and
in
xor
and
and
pop
mov
into
addr16
mov
js
lods
xchg
xor
mov
mov
mov
mov
inc
clc
jge
lahf
fmulp
add
das
into
mov
adc
es
push
jb
mov
ss
mov
fild
dec
xchg
cmp
pusha
test
mov
ja
int
dec
fsubr
into
sbb
into
ins
out
mov
pop
into
pop
rcl
sub
out
cli
dec
adc
into
add
sub
mov
in
cmp
fisub
(bad)
imul
pusha
cmc
sub
ins
mov
jmp
ret
sahf
or
mov
retf
xor
ret
jo
ss
daa
test
into
fisub
jbe
xor
gs
push
fwait
push
mov
cli
scas
xchg
mov
ret
xchg
stc
shr
pop
pop
sbb
outs
(bad)
and
(bad)
xchg
mov
repz
into
jp
lea
mov
jo
into
(bad)
mov
lods
jl
or
sar
mov
inc
pushf
sti
(bad)
mov
addr16
sub
daa
aam
mov
inc
mov
and
call
into
mov
jecxz
pop
mov
test
jne
into
adc
call
or
clc
sub
jmp
and
into
xchg
out
fxch
mov
xchg
pop
das
jns
repnz
mov
xchg
mov
mov
mov
add
cli
adc
into
stos
movs
(bad)
cmp
into
outs
nop
(bad)
push
mov
in
mov
mov
psubusb
lea
xor
test
ja
lods
and
mov
hlt
pop
repnz
cmp
add
retf
minps
dec
sub
adc
into
mov
jecxz
sub
jp
ja
call
sub
push
stos
and
cmps
into
mov
ss
fs
pop
das
in
stos
adc
fdiv
xor
into
loop
mov
mov
sti
jo
jmp
xchg
adc
cmp
sbb
scas
scas
xchg
cmp
(bad)
sti
retf
pop
mov
cmp
inc
fild
or
fcomp
adc
inc
aas
popa
test
dec
jb
mov
fisubr
pop
mov
ret
jle
shr
cmps
and
sti
mov
je
imul
mov
into
lock
into
push
push
cmp
push
cwde
cmp
mov
leave
jns
push
popa
sti
into
xor
into
inc
or
hlt
push
into
add
cwde
jecxz
int3
pop
into
outs
out
xor
and
jg
fsub
imul
xchg
(bad)
jbe
ret
inc
in
fmul
ret
leavew
addr16
jp
stos
jbe
pop
stos
jne
inc
and
jno
pop
sbb
ds
mov
into
push
fsub
inc
aam
into
fs
imul
into
aad
ficom
fucom
adc
cld
into
adc
add
aaa
rol
jmp
dec
xor
ror
loopne
mov
xchg
aas
movs
dec
out
mov
cdq
mov
stos
cmp
push
(bad)
out
pop
cld
xchg
sub
or
or
xchg
(bad)
icebp
lods
inc
add
xor
cmp
jne
test
pop
shl
lods
shr
aas
nop
jge
imul
lea
mov
push
shr
inc
test
ins
xchg
xor
jnp
push
push
push
icebp
sar
scas
pop
inc
sub
pop
or
mov
xchg
sbb
out
xchg
stos
rol
xor
(bad)
in
into
inc
leave
xor
push
push
retf
dec
jp
stc
inc
retf
or
add
fs
mov
or
cmp
inc
and
xchg
ret
out
idiv
arpl
(bad)
into
test
(bad)
ret
repnz
push
jle
mov
xor
test
ds
push
mov
into
sub
sbb
shr
ins
jno
cmp
ss
xchg
push
or
inc
mov
add
(bad)
in
pop
in
into
pop
xchg
in
lods
sbb
into
clc
xchg
inc
idiv
ins
inc
mov
ins
mov
mov
dec
into
push
cmc
aad
pop
and
ror
into
nop
inc
sbb
into
inc
fst
sbb
sub
lods
pop
movs
pusha
repnz
xchg
out
inc
jo
into
mov
xchg
aam
imul
daa
cmps
lods
scas
add
in
sbb
retf
sub
adc
inc
pusha
icebp
clc
mov
jo
out
sbb
lods
add
mov
shl
ror
push
jbe
push
test
push
fiadd
clc
fmul
mov
nop
shl
(bad)
jne
into
or
mov
(bad)
push
cmps
ins
test
int
pusha
aad
cld
aas
faddp
add
into
jae
lods
add
out
ror
out
fmulp
cmp
out
sub
rol
or
cmp
into
in
mov
adc
mov
xchg
cdq
pop
dec
or
data16
push
jmp
mov
cmp
fidiv
pop
mov
jecxz
mov
fmul
mov
pop
into
mov
aaa
dec
stos
ja
fs
call
mov
pop
movs
mov
retf
pop
in
or
lods
(bad)
in
fisubr
daa
sbb
pop
fisub
into
xor
stc
ror
mov
add
or
inc
inc
jae
addr16
mov
xchg
jmp
mov
jb
xchg
add
mov
mov
ret
lods
inc
cwde
adc
adc
sti
mov
add
in
mov
jno
into
cmp
into
or
icebp
(bad)
push
sub
xor
loope
lods
ss
aas
jle
push
out
adc
jg
mov
push
xor
add
into
push
jmp
sti
outs
and
mov
pop
fwait
push
sub
add
scas
pop
shl
loope
out
xchg
into
add
fwait
jl
and
popf
ret
mov
mov
sbb
mov
mov
sbb
adc
xchg
sbb
pop
inc
into
fisub
sbb
sti
shl
pop
pop
or
push
into
bound
fist
push
jnp
pop
xor
popa
movs
(bad)
out
dec
push
inc
adc
div
out
into
sub
test
dec
into
cmp
sub
hlt
xchg
lods
sti
repnz
test
inc
cmp
xchg
inc
gs
call
in
jo
push
fdiv
leave
jb
into
mov
in
push
xor
stc
inc
mov
inc
adc
into
repz
pop
ins
(bad)
pop
scas
add
push
idiv
push
into
or
imul
daa
jbe
lahf
push
in
stos
or
retf
inc
nop
out
and
into
push
jp
pop
add
popa
into
mov
pop
mov
in
loop
and
(bad)
into
cs
inc
retf
mov
xor
sbb
jg
jmp
ror
ins
fsubr
cmps
into
test
jnp
jmp
into
xchg
es
je
push
xchg
into
lods
pop
mov
in
lea
mov
dec
sub
adc
push
jae
in
into
pop
mov
xor
outs
xchg
mov
push
lea
xchg
(bad)
fcomi
fbld
dec
call
into
fwait
fs
and
mov
mov
inc
xchg
je
lods
jmp
fwait
gs
out
(bad)
xchg
shl
loopne
lods
into
retf
and
in
mov
pop
aad
jge
into
mov
and
jae
nop
mov
stc
or
inc
mov
addr16
(bad)
int
into
mov
inc
aaa
pop
scas
mov
push
mov
lea
into
adc
clc
dec
call
mov
stos
mov
into
mov
sub
out
push
mov
cmps
mov
mov
aaa
adc
(bad)
fisttp
into
jle
push
dec
xor
test
add
xor
into
xchg
pop
test
mov
sahf
mov
push
fs
arpl
shr
xlat
xchg
mov
aaa
sub
ins
and
jbe
and
add
in
test
cmp
xor
pop
imul
lds
test
shr
arpl
xchg
add
inc
cmp
loope
lahf
or
and
sub
stos
nop
xor
into
enter
sahf
add
pop
mov
lods
mov
test
dec
imul
pop
aam
mov
inc
imul
into
ins
jo
fstp
jmp
les
push
shl
mov
push
into
lods
xor
test
push
retf
not
push
into
add
dec
fnstcw
fisttp
bswap
adc
test
push
ins
and
ror
pop
movs
scas
stc
or
dec
cld
and
inc
ret
into
(bad)
xchg
xor
mov
jne
push
jecxz
into
xor
mov
and
mov
dec
retf
test
xor
or
into
or
test
mov
dec
push
xchg
jno
hlt
into
mov
sbb
int3
cs
and
clc
and
into
or
aaa
mov
loop
lods
pop
xchg
cmp
cdq
jo
sti
inc
ret
fimul
push
pop
sar
xchg
(bad)
add
(bad)
movs
sbb
mov
int
xchg
sub
ror
jg
lods
frstor
fcmovbe
lds
pushf
out
push
addr16
jmp
mov
jecxz
jmp
fxtract
jb
repnz
xchg
jae
lods
das
xor
shr
xchg
and
shr
xchg
(bad)
adc
or
in
add
ds
pop
sbb
jo
cmp
into
je
adc
push
icebp
mov
out
popf
sbb
shld
cmp
into
es
(bad)
sub
sub
aas
dec
xchg
push
cmp
xchg
shr
into
and
jae
stc
jno
push
inc
mov
ins
repz
daa
sub
bound
xchg
lahf
mov
call
(bad)
into
cmps
inc
jnp
popf
nop
mov
mov
into
pop
repnz
stos
loop
xlat
les
outs
mov
mov
outs
(bad)
das
inc
gs
push
mov
pop
fst
loope
add
out
into
adc
and
inc
retf
in
into
push
stos
xor
sub
or
into
pop
dec
loop
popa
imul
and
adc
call
aaa
xchg
push
push
jb
lods
dec
cmp
jl
cs
test
(bad)
sub
add
lock
outs
cmp
out
sub
pusha
outs
mov
dec
js
push
aas
pop
cmp
repz
inc
push
pop
and
add
sbb
mov
aad
cmp
jle
cmp
jmp
mov
and
jmp
into
xor
jp
adc
add
(bad)
clc
xor
ds
add
add
cli
push
inc
(bad)
and
imul
sbb
adc
mov
pop
dec
mov
pop
jbe
into
adc
scas
dec
pavgb
fs
jmp
repnz
mov
je
sub
shr
scas
jbe
out
into
movs
jmp
ficom
xchg
mov
stos
xor
imul
adc
jl
fs
or
xor
rcl
mov
or
pop
gs
into
call
jmp
fnstsw
aaa
mov
outs
fisubr
and
into
mov
(bad)
into
shr
inc
or
mov
(bad)
int
(bad)
sbb
xor
loopne
out
add
sub
hlt
into
dec
push
or
lahf
xchg
aad
in
xchg
jne
push
sbb
movs
int
cmp
inc
outs
pop
inc
mov
push
jbe
xchg
jb
into
fisttp
xchg
inc
pushf
pop
pop
sahf
mov
outs
mov
scas
test
and
mov
sti
lea
das
mov
lods
bnd
in
cmp
outs
xor
test
outs
xchg
into
aaa
mov
dec
pop
shr
mov
retf
jmp
pop
scas
mov
push
test
aaa
lds
and
cmp
xor
mov
mov
scas
scas
stos
and
pop
pop
in
xlat
pop
mov
std
xlat
jnp
mov
daa
into
sbb
aas
retf
sub
mov
scas
push
xchg
int3
push
scas
sub
lahf
scas
or
loopne
pop
or
into
cmp
mov
in
iret
aam
inc
movs
(bad)
into
mov
sbb
stos
bound
jp
lods
into
scas
sbb
mov
xchg
and
repz
push
mov
dec
inc
mov
pop
ror
cmp
ror
pop
stos
ret
call
mov
int
test
pop
fist
into
and
xchg
into
mov
fcmovnbe
fnstsw
adc
ins
hlt
cmc
xchg
arpl
mov
popa
cmp
cli
into
and
stc
(bad)
ror
push
ret
int3
mov
mov
imul
mov
cmps
into
icebp
mov
mov
pop
(bad)
or
adc
call
retf
xchg
retf
sbb
scas
pop
data16
push
mov
dec
mov
or
lds
pushf
arpl
hlt
into
and
mov
mov
adc
jp
dec
mov
aaa
not
mov
fcom
into
mov
adc
mov
add
fiadd
into
and
into
sbb
adc
jecxz
cmp
push
jp
fucomp
into
not
popf
into
adc
sbb
push
mov
sbb
xor
or
inc
xchg
dec
xchg
leave
add
das
mov
dec
mov
out
sahf
lds
dec
adc
xor
fadd
out
cdq
into
out
dec
jns
xor
sbb
into
mov
in
ss
sbb
out
and
inc
in
cmp
loop
cmps
ror
dec
ror
test
mov
pop
std
pop
into
cmps
mov
lea
mov
(bad)
cmp
xor
pop
sub
(bad)
lock
call
jmp
int3
aam
popf
pop
cmp
mov
nop
into
mov
stos
jl
and
leave
xor
xlat
in
into
xchg
in
fisubr
sahf
addr16
into
sub
and
ja
and
adc
retf
jg
sbb
into
xor
push
mov
sub
into
mov
dec
ds
hlt
into
int3
or
pop
and
cmp
popa
adc
loope
dec
mov
and
mov
das
dec
cmp
je
fld
dec
cmp
into
mov
jmp
jl
add
scas
pop
leave
inc
xchg
iret
push
sbb
aas
push
shl
into
inc
inc
retf
(bad)
xor
add
ficom
mov
rdmsr
scas
add
mov
and
dec
imul
or
push
pop
dec
into
das
mov
mov
xor
xor
push
ja
js
popf
fsubr
loop
inc
dec
loope
les
push
mov
xor
fidiv
in
mov
mov
call
adc
out
dec
push
xchg
pop
je
mov
enter
sbb
popf
movs
into
jnp
cwde
imul
mov
call
pop
(bad)
push
repz
dec
xchg
ud2
gs
into
fimul
aam
into
push
pop
or
mov
sahf
mov
outs
sub
sub
mov
addr16
fst
popf
(bad)
test
into
xor
jl
or
cmps
push
out
ins
arpl
cmp
sbb
(bad)
mov
jge
cmp
fdiv
in
xchg
scas
pop
mov
aas
xchg
mov
ficom
mov
push
int
pushf
rol
loop
lods
mov
cmp
outs
clc
ret
pop
into
loopne
pop
and
stos
mov
into
mov
sub
and
cmc
enter
cmp
div
into
jae
sar
lods
xchg
xor
add
adc
(bad)
stos
imul
mov
xor
sbb
push
pop
hlt
aaa
dec
jg
jno
sub
into
sbb
mov
iret
js
sbb
cmps
or
call
(bad)
xlat
mov
sbb
xchg
scas
cwde
pop
jecxz
mov
jmp
aad
movs
into
dec
int3
hlt
icebp
mov
jae
add
mov
adc
int3
push
into
data16
push
jo
aam
and
adc
mov
(bad)
pop
into
sub
push
dec
gs
add
out
sar
mov
mov
xchg
andps
and
retf
mov
aam
aaa
fwait
fs
lahf
data16
call
idiv
scas
adc
out
ja
lods
shr
fnsetpm(287
jb
jmp
test
ins
sbb
aaa
pusha
mov
dec
into
mov
cmp
sub
mov
jne
sbb
push
dec
sti
jmp
out
into
nop
call
add
xor
je
push
pop
fiadd
inc
xor
ja
out
into
std
cs
(bad)
repz
(bad)
push
push
into
adc
clc
and
cmps
mov
aaa
dec
aam
ror
(bad)
outs
fcom
mov
sti
mov
aas
bound
add
or
add
aad
jge
mov
dec
and
inc
jecxz
mov
sbb
(bad)
sbb
repz
mov
outs
leave
and
mov
mov
pop
inc
cmp
cld
lods
pusha
sbb
(bad)
das
in
inc
or
std
mov
add
fnsave
mov
clc
fidiv
(bad)
out
repnz
cmp
jmp
push
(bad)
sahf
adc
jns
push
cmps
sbb
cmp
and
push
jp
ss
xchg
pusha
lods
into
hlt
je
mov
into
imul
outs
jmp
inc
repnz
jae
cli
xchg
mov
mov
dec
cli
in
mov
sub
les
jo
dec
inc
bound
and
test
sar
fwait
mov
into
push
popf
leave
cmp
iret
jmp
lock
xchg
stos
hlt
and
adc
adc
aas
mov
outs
cs
aam
and
je
mov
int3
into
adc
test
into
cmp
mov
retf
idiv
xchg
test
add
(bad)
into
fucomip
inc
aam
pop
or
popa
xor
and
jp
into
adc
arpl
mov
test
into
xor
sti
jmp
adc
and
test
rol
cmp
and
or
xor
pop
in
into
jb
data16
into
clc
cmps
ficom
sub
popf
mov
(bad)
out
add
into
pushf
jmp
into
push
es
lods
popf
sar
push
jbe
test
in
xchg
shl
(bad)
jmp
mov
fidivr
movs
sbb
into
lods
retf
popaw
pusha
mov
mov
into
ds
inc
hlt
mov
jbe
pusha
inc
lock
mov
or
fimul
pop
adc
or
in
xchg
fdiv
loope
inc
bts
scas
retf
jmp
(bad)
retf
into
add
icebp
aas
scas
into
sub
neg
mov
xchg
or
lock
into
adc
xchg
(bad)
lea
adc
call
add
call
push
rcr
scas
push
xchg
fisub
push
dec
out
movs
(bad)
ret
jmp
ss
jnp
lahf
xor
into
and
mov
pop
scas
mov
jnp
xchg
into
pop
push
jl
es
int
fsubr
iret
mov
into
push
cmps
jb
lods
adc
into
add
pushf
imul
dec
sub
and
into
pusha
(bad)
pushf
lods
push
mov
inc
xchg
enter
xor
stc
repnz
aaa
jbe
push
movs
add
mov
xor
loope
cmp
adc
push
pop
mov
mov
aad
es
and
dec
push
mov
inc
lods
fisubr
xor
pop
xor
or
lock
loop
(bad)
into
test
xlat
cld
push
int
into
rcr
cmp
lods
pusha
popf
mov
sbb
stos
into
repnz
cmc
xchg
int3
inc
ins
into
pop
inc
sahf
mov
into
mov
loopne
or
(bad)
xchg
dec
push
jne
xchg
push
ds
aam
dec
and
mov
ficomp
into
xor
jmp
mov
test
into
mov
jo
addr16
out
mov
add
into
mov
enter
into
pop
push
push
xchg
scas
push
jecxz
mov
push
dec
into
cmp
(bad)
jnp
mov
push
cmc
add
jns
ins
out
into
pusha
pop
mov
aas
and
push
xor
sbb
bswap
mov
pop
push
dec
mov
jne
(bad)
into
sub
and
mov
retf
ja
cdq
into
pop
arpl
test
into
pop
ins
lea
into
(bad)
mov
retf
pop
mov
pop
jmp
rep
in
arpl
into
out
cs
push
and
sbb
stos
fidiv
(bad)
into
jmp
iret
pop
pop
into
sti
je
loope
mov
pusha
nop
push
xor
xchg
in
cli
mov
add
sbb
(bad)
and
sub
shr
(bad)
int3
jmp
cmp
inc
inc
sub
repz
or
xchg
mov
jmp
stc
ret
mov
jb
or
(bad)
gs
inc
pusha
add
pop
and
into
test
outs
cmp
inc
add
lods
mov
jnp
pop
sbb
fnstenv
lods
mov
in
sar
mov
jg
jecxz
cmp
into
sbb
add
loope
mul
test
gs
out
mov
outs
pop
hlt
enter
inc
cmps
sub
jmp
push
in
fsubr
test
pop
xchg
test
iret
dec
and
into
aad
aam
into
dec
inc
dec
mov
jbe
xor
rcl
outs
into
mov
fisub
js
pop
xchg
popf
pop
into
ja
jno
adc
lods
clc
xor
cmps
dec
xor
rcl
xchg
fisttp
vpandn
das
cwde
adc
retf
pop
into
adc
or
idiv
into
ins
jo
adc
gs
lods
retf
xlat
sbb
cwde
aas
movs
lods
push
cmps
pop
fild
enter
mov
dec
cli
out
cmp
mov
out
sar
into
xchg
jae
retf
leave
into
push
popf
bound
test
and
inc
push
loope
mov
cmps
into
jp
or
into
test
xor
cmp
inc
mov
dec
dec
pop
scas
adc
pop
imul
pop
jbe
add
shr
jle
or
daa
mov
xor
test
pop
pop
pavgw
inc
or
hlt
scas
out
stos
push
jbe
into
add
or
sbb
in
cs
inc
retf
(bad)
push
jae
sti
push
lods
inc
jmp
add
jne
cmc
adc
loopne
add
aaa
scas
mov
into
sti
movs
xor
into
sub
add
mov
in
mov
jl
ror
or
xchg
xchg
xlat
(bad)
(bad)
into
adc
fiadd
pop
aam
pop
lods
je
sbb
aas
into
dec
fs
pop
and
mov
mov
xchg
mov
pop
fcmove
lahf
cmp
ror
scas
pop
or
inc
(bad)
mov
push
into
sub
jmp
cmps
into
mov
add
sub
inc
xchg
dec
xor
sbb
pop
int
icebp
cmc
inc
into
dec
adc
jns
into
movs
mov
clc
nop
pop
ror
mov
stc
into
dec
mov
xchg
inc
sub
and
pop
(bad)
mov
mov
stos
test
daa
repnz
mov
dec
xor
aaa
into
xchg
add
into
push
loop
or
mov
or
daa
push
sbb
fidiv
mov
xchg
sub
loopne
lods
mov
movs
les
dec
into
in
dec
repz
in
out
mov
cmp
not
fistp
xor
cmp
cwde
cmp
dec
dec
aam
aad
arpl
fld
lock
lahf
mov
jg
(bad)
xor
loopne
test
loope
xchg
cmp
pusha
(bad)
imul
les
mul
fistp
lahf
dec
scas
jg
mov
cli
pop
jb
push
inc
lea
mov
stos
pop
inc
jge
push
(bad)
dec
push
mov
mov
sbb
inc
cmp
push
jno
int3
test
dec
pop
cdq
idiv
push
adc
mov
shl
jae
shr
repnz
cmc
xchg
retf
stc
and
push
scas
pusha
cli
sub
ret
cmps
scas
cmp
mov
std
mov
jne
dec
das
out
mov
into
shl
cmp
into
addr16
dec
cmps
jnp
cmp
xchg
ja
movs
jne
into
movs
add
das
pop
dec
out
jno
aad
repz
int3
arpl
in
push
xchg
lds
icebp
sbb
(bad)
mov
into
cmps
dec
sbb
mov
ins
sbb
sti
add
and
int
jge
imul
fisub
pop
cmps
in
movs
ror
fnstenv
jl
dec
xlat
or
dec
popf
ret
getsec
jg
mov
add
call
sahf
or
xchg
push
mov
pop
adc
jg
jno
das
adc
push
cmps
mov
jnp
adc
pusha
xchg
into
add
adc
scas
les
mov
(bad)
or
psubd
add
sub
into
jnp
sbb
ja
sub
scas
push
jg
jle
xchg
lods
jmp
lea
dec
rol
cmp
sbb
into
sar
mov
into
jae
ficom
lods
mov
loop
sub
outs
in
jp
shl
sub
adc
movs
call
fwait
in
test
popf
and
retf
xchg
pop
jnp
mov
push
sub
mov
arpl
xor
test
aam
mov
outs
ss
mov
into
pop
fnstsw
mov
test
sbb
out
xchg
into
push
out
sub
jnp
fist
test
nop
cmp
push
pop
les
into
and
or
jecxz
rcl
sbb
out
cmps
aas
ss
sub
or
pop
sub
rcl
mov
imul
out
iret
retf
outs
push
pusha
adc
dec
ins
pop
scas
push
mov
xor
ret
into
cld
adc
mov
(bad)
fnstsw
ja
pop
clc
ret
xor
mov
mov
dec
cli
jno
int3
ins
push
jbe
into
mov
in
dec
xchg
mov
sub
nop
xor
sti
sbb
retf
into
retf
out
add
(bad)
mov
int3
int
xchg
sbb
hlt
push
fucomip
push
inc
cli
into
xor
gs
xor
imul
xchg
int
in
push
mov
mov
setne
sbb
push
into
and
in
je
ja
xchg
ss
lods
mov
call
dec
test
cmp
jl
add
or
ret
pop
out
xchg
add
mov
scas
pusha
aam
add
in
(bad)
sbb
into
rcr
ror
cdq
fs
and
sbb
xchg
jne
xchg
adc
and
pop
ror
or
ins
pop
aad
jnp
shl
jge
mov
sbb
(bad)
dec
adc
outs
sub
ficom
jo
out
mov
mul
repz
push
push
ins
jb
or
pop
pushf
retf
stos
mov
or
ret
adc
int
inc
(bad)
mov
into
inc
scas
jb
test
mov
inc
fist
xor
test
enter
into
xor
test
mov
adc
lods
sar
fwait
test
add
stos
cmovg
xchg
xor
cmp
fwait
into
call
aam
inc
sub
rcr
jg
pushf
imul
dec
mov
test
stc
pop
sbb
shr
adc
dec
inc
int3
cmp
or
neg
dec
into
xor
loopne
jne
movs
vrcpss
adc
setle
sub
ss
daa
les
xor
push
into
xchg
arpl
outs
mov
cmp
mov
and
cmp
out
arpl
cs
sub
std
inc
rol
into
inc
dec
ret
out
pop
test
mov
cli
pop
outs
idiv
and
dec
mov
push
stc
into
cmp
dec
fistp
(bad)
cmp
into
ins
shl
pusha
pushf
(bad)
mov
stc
test
into
push
mov
cld
fdiv
in
inc
add
stc
pop
inc
setp
fsub
into
rol
call
xchg
pop
xor
pop
int3
push
stc
maskmovdqu
out
lds
push
nop
repz
dec
(bad)
addr16
jno
mov
jmp
test
dec
inc
pushf
and
outs
into
iret
jae
jmp
imul
into
add
fsubr
test
sti
aad
or
push
cmps
into
cld
jb
mov
nop
sub
pop
int
dec
pop
sbb
and
scas
gs
push
rcr
xchg
sbb
adc
or
das
rol
cwde
into
mov
sub
in
xchg
ret
bound
cld
push
mov
add
out
and
adc
or
into
add
pop
out
mov
out
into
les
(bad)
gs
(bad)
jb
cld
jae
jns
push
js
sbb
push
jp
ss
mov
lods
lods
mov
aaa
cmp
mov
cmp
mov
rcr
shl
stc
into
daa
push
mov
push
mov
into
inc
dec
sub
cmps
pop
dec
or
cwde
mov
sub
cs
aas
mov
adc
sub
iret
or
std
scas
stos
inc
fisttp
mov
mov
fs
cmp
mov
outs
imul
retf
mov
pop
fcmovne
ja
dec
(bad)
adc
adc
cmp
into
or
cmp
ret
mov
icebp
sub
fbstp
test
pop
cmp
clc
and
adc
cmp
ds
push
push
das
data16
iret
scas
cmps
inc
sti
jno
add
dec
enter
scas
sub
inc
fdivr
or
cmc
vmovq
cmp
mov
(bad)
into
outs
mov
cmps
leave
sub
aas
into
push
nop
icebp
inc
push
push
test
into
inc
and
xchg
and
(bad)
movzx
adc
sbb
pop
xor
cmp
pop
test
dec
lahf
push
scas
and
js
mov
(bad)
push
iret
dec
mov
dec
mov
scas
lahf
adc
cmp
hlt
sbb
and
js
push
test
into
outs
dec
shr
sbb
sub
mov
shl
adc
add
mov
and
lock
mov
pop
loopne
sub
sub
movs
test
mov
(bad)
(bad)
shl
push
es
test
or
jl
add
pushf
xchg
dec
inc
aam
int3
or
sahf
call
icebp
sub
aad
push
adc
mov
pop
mov
gs
out
dec
pop
cmp
shr
scas
or
cmps
(bad)
jnp
mov
das
scas
jge
hlt
aad
xor
sub
pop
lock
mov
out
jmp
in
or
inc
cmp
fwait
push
dec
pop
mov
enter
clc
xlat
xchg
mov
sbb
xor
jg
xchg
jecxz
das
lods
sub
and
rcr
test
test
add
push
jo
xor
cmp
mov
cs
test
lea
into
sbb
fxtract
mov
sub
push
dec
adc
pop
into
in
mov
into
mov
and
sbb
ds
mov
in
(bad)
rcl
mov
or
xchg
sti
into
add
cdq
mov
adc
pxor
aad
mov
into
int3
mov
pop
inc
loopne
jno
lahf
out
adc
fcom
into
or
mov
pop
sahf
rcl
(bad)
aam
into
mov
(bad)
mov
leave
(bad)
icebp
mov
popa
into
dec
jns
in
lods
loop
or
scas
inc
mov
aam
clc
jo
seto
out
mov
pop
into
sar
iret
sar
imul
and
test
pop
scas
mul
int3
mov
xor
jg
hlt
out
cmp
test
and
fcom
pop
cmc
jle
fmul
ins
scas
jns
pusha
cmp
mov
xchg
stc
bound
push
ret
and
or
pop
mov
mov
jne
mov
out
pop
arpl
(bad)
mov
cmp
into
call
sub
retf
pop
and
in
xchg
(bad)
push
mov
cmovl
cld
sub
ins
shl
loopne
stos
arpl
dec
jnp
mov
into
xchg
stc
sbb
into
dec
(bad)
jae
loopne
out
mov
loope
adc
dec
out
or
dec
jg
fcom
ja
ror
(bad)
out
and
cmp
dec
sub
jge
cmps
into
fnstsw
mov
or
mov
mov
out
not
inc
jmp
into
lea
xor
add
cld
popa
rcr
mov
into
fwait
lds
add
pop
adc
ss
into
add
jo
dec
popf
mov
xchg
les
xchg
psllq
push
into
icebp
aad
xchg
jns
mov
sbb
into
lods
mov
mov
jg
retf
clc
cmp
into
mov
ret
jae
into
fst
mov
into
in
loopne
stc
cs
movzx
adc
sub
pusha
adc
push
fwait
into
outs
(bad)
fisub
push
sahf
test
iret
outs
addr16
gs
(bad)
stos
into
fmul
mov
mov
leave
xor
icebp
mov
jmp
pop
inc
js
mov
fistp
sbb
shl
retf
mov
out
dec
pop
scas
add
push
xchg
into
push
pop
fscale
xchg
pop
mov
test
lahf
and
mov
jmp
into
mov
cmp
dec
and
int3
cmps
xchg
dec
mov
cmp
or
cmp
scas
cmp
adc
cmp
out
xchg
xchg
pop
outs
pop
sbb
xchg
leave
and
imul
inc
jle
inc
aam
lods
add
dec
push
sbb
adc
pop
arpl
iret
mov
into
inc
loop
imul
push
jbe
inc
stos
loopne
and
outs
xchg
into
loope
add
pusha
mov
add
pandn
mov
mov
push
xchg
addr16
int
pop
into
xchg
jp
dec
inc
in
xchg
mov
imul
lahf
push
(bad)
in
scas
fdiv
fmul
dec
jb
adc
outs
andps
addr16
add
push
ja
xchg
scas
fild
pop
sub
cwde
iret
mov
unpcklps
popa
push
pop
les
jl
fcmovb
or
jnp
into
xchg
mov
ror
add
cmp
call
ficom
and
adc
pop
rcr
test
emms
pushf
or
out
dec
cmp
mov
ins
mov
sub
inc
into
add
jge
adc
mov
push
mov
and
jecxz
cld
xchg
(bad)
dec
sbb
inc
movs
inc
adc
mov
outs
push
adc
push
add
clc
adc
scas
popa
and
(bad)
and
adc
(bad)
xor
mov
mov
out
movs
mov
into
jp
ins
jle
into
mov
stc
test
lods
loope
xchg
mov
pop
std
dec
test
and
sahf
dec
lea
sub
adc
fimul
mov
mov
maskmovq
test
ins
xor
clc
pop
mov
aam
scas
and
lods
in
xchg
shl
sti
into
int3
jb
loopne
psadbw
shl
push
sbb
lods
mov
stos
pop
pop
aad
push
push
into
int3
push
int
inc
add
into
lahf
mov
mov
into
loopne
lock
movs
out
adc
xchg
into
in
sahf
cli
psrlw
ret
cmp
mov
into
or
adc
test
in
je
pop
mov
inc
test
xor
xor
(bad)
fidiv
sub
cmp
xchg
pop
rcl
iret
jo
adc
pop
into
push
or
mov
mul
xchg
mov
pop
lods
mov
cmp
fcmovne
aas
stc
pop
in
(bad)
xchg
push
cmc
daa
mov
mov
(bad)
fnstcw
fcomp
stos
stc
cmp
push
dec
push
ret
push
ret
xor
pushf
lock
jne
pop
xchg
out
cmp
into
sub
mov
pop
call
cmp
and
pop
push
pop
mov
into
pop
and
stos
into
(bad)
push
and
rol
neg
into
jge
repz
out
arpl
cmp
add
in
pop
into
adc
sbb
cmps
cli
aaa
xchg
into
jmp
shr
cmp
push
into
xchg
xchg
or
push
fs
fidiv
shr
and
fs
ins
mov
mov
add
or
into
aaa
fs
scas
retf
jne
xor
jmp
into
retf
cli
inc
out
fs
xchg
cmp
cld
cmpxchg
pop
mov
loopne
pminub
push
adc
xchg
adc
ss
inc
into
ret
test
lods
xlat
(bad)
fmul
fnsave
dec
xor
ja
fincstp
icebp
scas
pop
data16
test
jmp
inc
iret
lods
sub
out
mov
loope
xchg
dec
and
push
lods
xchg
into
jg
adc
cmp
mov
into
rcl
cwde
add
xchg
movs
into
jae
cdq
in
loop
mov
mov
in
sub
adc
pop
call
nop
sub
sub
add
in
into
fwait
add
aas
cmps
add
lods
popf
sub
in
iret
out
pop
outs
lods
dec
mov
es
inc
xor
aam
mov
outs
pop
and
inc
pop
adc
loopne
sbb
mov
into
out
in
outs
push
stos
push
into
jae
lods
(bad)
fbstp
jg
push
pop
test
hlt
and
sub
push
nop
outs
push
into
test
mov
test
sub
repz
fild
loope
(bad)
lods
jl
sub
out
jae
into
pop
outs
jg
movs
leave
cmp
into
push
sub
push
mov
dec
imul
add
add
js
cmp
into
sub
out
movs
cmp
push
add
out
imul
out
xor
jmp
or
aaa
mov
add
(bad)
inc
fidiv
mov
into
ins
fwait
arpl
mov
(bad)
mov
inc
push
dec
mov
imul
mov
fidiv
(bad)
jmp
into
adc
or
(bad)
adc
ds
push
loop
mov
mov
cs
lock
cmp
shl
cmp
mov
xchg
into
sti
push
and
enter
pop
out
into
call
or
fs
add
mov
jbe
xchg
aaa
lock
mov
out
add
outs
or
lods
inc
jnp
push
rol
ffree
mov
and
scas
jno
sub
ret
scas
mov
pop
stc
sti
xchg
shl
adc
into
jnp
fiadd
(bad)
pushf
mov
push
fmul
jmp
clc
lods
push
jnp
pushf
jle
bts
into
adc
ins
xchg
into
leave
and
cs
sbb
mov
inc
das
call
repnz
or
jle
cmp
add
test
test
sbb
loope
fcom
into
jnp
add
(bad)
jp
dec
dec
fdivr
sbb
push
lahf
jnp
dec
test
sub
(bad)
jp
xor
mov
call
mov
xlat
and
add
into
xor
pop
inc
movs
mov
into
mov
int3
arpl
cli
lahf
fcomp
pop
or
into
mov
xchg
dec
movs
or
pop
dec
adc
movs
in
into
daa
repz
add
mov
addr16
lods
les
mov
inc
shl
xchg
cmps
jo
mov
dec
ss
jecxz
sar
sub
mov
push
out
or
dec
mul
into
ins
cld
mov
imul
fisttp
push
add
cmps
test
jns
adc
pop
ins
mov
dec
pop
aas
std
call
stc
repz
or
lods
fs
mov
pcmpeqw
sub
scas
out
dec
jg
lods
je
and
fwait
bound
pop
jmp
xchg
xchg
jle
pop
inc
adc
push
dec
dec
jno
js
mov
das
jg
popa
cs
loopne
and
xor
sbb
fsub
xchg
sti
enter
cld
aam
into
push
add
push
or
mov
pop
mov
sbb
into
ja
and
(bad)
jo
push
into
push
ins
rol
inc
pop
fisttp
into
mov
lea
test
out
addr16
add
inc
test
add
icebp
sub
jmp
lods
(bad)
fwait
(bad)
adc
repnz
or
cld
fisub
mov
das
dec
leave
jp
ror
into
adc
gs
xchg
int
add
dec
scas
dec
outs
movs
sbb
inc
ins
push
(bad)
(bad)
cmp
into
xchg
push
or
ss
mov
loope
or
sub
arpl
inc
mov
jg
add
fld
je
das
add
shl
das
std
(bad)
shr
scas
xlat
sub
fidiv
bound
jp
mov
fwait
into
fcom
cmp
scas
not
xor
cmovg
into
jg
stos
add
jo
idiv
mov
into
movs
mov
pop
pop
into
rol
adc
nop
scas
sbb
xor
jnp
xchg
push
adc
iret
dec
into
cmp
daa
(bad)
dec
mov
out
xor
or
fimul
cmp
into
jl
mov
push
mov
push
jo
jbe
into
adc
xor
into
mov
sahf
arpl
cmp
aad
push
cmp
into
push
das
dec
outs
ret
scas
(bad)
leave
scas
xor
push
pop
imul
call
inc
mov
add
ret
in
data16
pop
pop
push
mov
mov
dec
jp
pop
cmp
nop
mov
cld
add
into
and
sahf
mov
mov
scas
mov
loop
dec
push
popa
into
nop
mov
into
sbb
push
dec
test
lods
sub
outs
cld
in
fmul
movs
jnp
adc
dec
arpl
mov
scas
mov
ficomp
into
fnstenv
xchg
loop
movs
adc
ret
into
mov
cwde
scas
push
les
jge
cmp
push
cmp
dec
jl
bound
xchg
mov
ror
add
scas
daa
lahf
call
gs
fs
aaa
xchg
push
into
xchg
or
add
xchg
into
mov
dec
out
pop
and
aam
pop
or
xor
out
ins
call
jge
js
or
jno
xchg
mov
scas
sbb
push
pusha
fst
cld
mov
add
repnz
lods
or
inc
mov
sahf
ins
ja
lock
xor
lods
pushf
push
scas
into
test
in
scas
sbb
cwde
sahf
add
xchg
mov
and
cmps
xchg
repnz
into
xor
xchg
imul
xchg
arpl
mov
pusha
cmp
js
jb
pop
mov
sahf
fsub
lock
ds
push
mov
jecxz
cpuid
aad
sub
repz
cli
xor
je
mov
mul
into
scas
outs
adc
jns
or
adc
cld
div
out
and
xchg
into
out
sbb
into
in
jecxz
dec
mov
js
into
cmp
push
inc
into
inc
mov
mov
into
cs
loopne
popf
movs
into
or
push
xchg
inc
(bad)
out
sahf
scas
sub
mov
xor
clc
cmp
lods
sub
fld
mov
inc
fxch
call
retf
jb
out
pop
add
fisttp
jmp
scas
scas
shl
jmp
test
adc
jg
out
cmp
data16
jle
pop
fistp
jmp
call
pusha
add
pop
aas
add
add
lea
lods
mov
xor
dec
mov
into
push
gs
mov
push
inc
into
and
dec
mov
repnz
sbb
rol
or
call
jg
sbb
iret
push
cmps
into
or
jle
repz
cmp
out
xchg
repnz
cdq
adc
jae
cli
aaa
add
xchg
sub
jle
test
ds
aas
dec
sti
call
push
push
leave
xchg
push
dec
xchg
std
mov
shr
sbb
and
ss
jecxz
push
(bad)
sti
cmp
fnstsw
xchg
adc
test
cwde
pushf
addr16
jge
inc
ror
xor
outs
cdq
je
ror
rep
cli
iret
syscall
xchg
into
jns
cld
out
xor
iret
adc
mov
or
xor
add
pop
xchg
(bad)
(bad)
repnz
pop
cmp
push
icebp
pop
(bad)
loopne
jle
into
inc
mov
jns
ss
outs
sbb
call
dec
enter
add
pop
dec
scas
lds
pop
sub
ror
pop
(bad)
add
sub
jae
cs
pop
std
push
xor
mov
pop
into
adc
sub
ja
mov
jns
cmp
cmps
xor
test
in
iret
mov
push
sysenter
in
jle
mov
inc
out
jp
pop
test
sahf
mov
outs
or
pushf
jmp
pop
add
sbb
adc
dec
dec
cmp
mov
into
jbe
pop
fcom
push
fcomip
imul
sti
pop
dec
cmc
shl
nop
out
and
push
into
js
push
pop
aaa
push
shr
push
dec
and
jnp
stos
and
repz
sub
in
ja
cld
jnp
(bad)
into
push
cmp
xor
sub
sahf
leave
or
into
(bad)
push
jecxz
bound
into
or
jnp
mov
retf
jbe
outs
js
jle
pop
xchg
rcr
loopne
pushf
cmps
into
or
ins
imul
mov
in
jmp
mov
scas
mov
test
icebp
sahf
add
jg
inc
cld
and
jl
fidivr
mov
mov
inc
push
xchg
lods
jb
bound
cmc
imul
xchg
outs
jns
sbb
outs
in
imul
jmp
into
mov
sub
in
mov
jmp
lock
mov
cmp
into
pop
aaa
lea
into
xchg
rcr
or
jo
or
outs
mov
lea
mov
push
mov
test
imul
jbe
pop
mov
(bad)
out
pop
rcl
ror
inc
or
and
jnp
add
das
jge
dec
stos
xor
outs
mov
outs
ret
sbb
into
out
int
xchg
sahf
inc
mov
xor
dec
push
inc
stos
xor
aad
lods
pop
pushf
fild
sbb
mov
or
sub
cmp
ror
lahf
push
xchg
mov
inc
ficomp
bnd
pop
cdq
mov
cmp
xor
cmp
aam
jne
shl
push
(bad)
neg
into
mov
inc
sbb
out
into
es
fistp
inc
into
push
lods
sub
call
fidiv
movs
aaa
(bad)
in
sar
add
xlat
mov
into
xor
cdq
mov
scas
addr16
or
test
int3
pop
adc
in
into
lahf
fwait
js
xchg
loopne
adc
push
xchg
cmp
mov
aad
sub
out
into
(bad)
cmps
inc
jmp
into
add
in
dec
dec
mov
ins
repz
inc
ret
mov
jo
ss
out
jl
xor
dec
or
shl
fild
mov
fidivr
pop
into
push
(bad)
ss
into
mul
jp
mov
icebp
into
mov
ins
pop
cmp
into
arpl
cmc
adc
es
mov
sub
xchg
inc
loop
pop
sub
bound
mov
jnp
pop
out
pop
lea
and
sahf
jb
retf
in
push
ins
pop
jbe
dec
mov
pop
daa
cmp
test
fdiv
add
aas
adc
jno
xchg
mov
and
mov
pop
cs
jmp
fsub
pop
sahf
sbb
pop
into
(bad)
into
dec
addr16
fs
sti
sub
lods
pop
mov
xchg
xor
add
or
int3
into
in
js
test
jmp
jb
mov
and
xor
fld
jo
adc
xchg
and
inc
stc
ficom
mov
lahf
pop
jmp
arpl
mov
in
cmp
cld
xor
mov
push
das
xchg
into
or
jmp
ja
dec
fiadd
dec
into
dec
and
sbb
pusha
test
out
cmps
jno
into
icebp
cmp
dec
jns
lods
push
xchg
sbb
dec
shr
scas
sub
xor
and
lods
pop
cli
push
out
stc
test
into
jg
out
cmp
into
ror
std
pop
jae
faddp
not
mov
dec
mov
sub
or
into
bound
mov
mov
into
and
cmps
mov
push
dec
dec
iret
adc
push
jmp
xchg
mov
test
xor
cld
mul
xchg
into
or
gs
pusha
pop
inc
into
mov
out
in
lods
cmp
sbb
xchg
push
pop
xchg
hlt
sbb
inc
push
test
push
dec
adc
into
fist
and
dec
nop
bound
into
mov
popa
sbb
and
pop
mov
mov
jmp
or
fisub
add
xchg
into
and
cmp
test
into
mov
xor
out
push
pop
mov
outs
mov
add
ror
inc
or
jg
mov
mov
stos
js
pop
ret
into
inc
or
push
mov
mov
lock
pop
fucomip
clc
into
icebp
sbb
adc
add
cli
ins
dec
fstp
scas
inc
in
test
adc
push
add
out
jle
iret
inc
sbb
(bad)
imul
les
shl
stc
rcr
push
mov
mov
cmp
jg
pop
sti
inc
adc
xchg
into
mov
inc
loop
into
dec
gs
nop
sbb
movs
ins
into
mov
cwde
shl
adc
out
lods
push
loop
jp
fcom
into
inc
sbb
or
and
lea
std
fcom
call
pop
repnz
push
push
ja
into
jne
sbb
mov
sbb
inc
lods
std
rcl
movs
or
or
cmp
test
lods
pop
call
pop
jge
sub
dec
xor
pop
hlt
scas
(bad)
and
inc
sub
xchg
lahf
dec
jne
int
pop
jge
ss
inc
es
jl
push
or
into
push
ret
call
adc
(bad)
mov
das
sub
and
and
mov
mov
inc
jl
test
xor
xor
mov
pop
iret
add
inc
add
mov
push
adc
test
retf
enter
mov
mov
xchg
mov
cmc
jle
mov
mov
arpl
mov
adc
xlat
pop
push
cmps
neg
mov
cdq
dec
mov
jns
dec
lahf
hlt
lods
das
aad
jo
int3
das
(bad)
inc
mov
int
mov
push
fldenv
mov
movs
sub
scas
mov
lahf
jmp
(bad)
cmps
iret
in
daa
pop
xor
std
add
das
lods
xor
cmp
dec
mov
lods
retf
outs
sub
data16
retf
mov
cmp
ror
mov
jns
ret
cli
push
push
scas
push
test
xchg
mov
xchg
jns
(bad)
add
ficom
mov
jmp
idiv
outs
movs
mov
pusha
inc
ror
stc
pop
fldenv
and
xchg
mov
fidivr
jne
shl
mov
pop
jnp
and
cmps
test
xchg
jle
retf
out
pop
fwait
pop
or
mov
pop
repz
adc
les
lahf
pop
jno
scas
fmul
repz
shl
arpl
movs
pop
and
hlt
fs
into
aaa
mov
pop
test
mov
push
xchg
mov
sbb
jl
(bad)
or
sub
mov
inc
sbb
rcr
into
sbb
jecxz
jp
rol
push
sub
mov
mov
xchg
test
inc
jae
inc
adc
into
mov
lods
jmp
scas
or
into
in
or
inc
into
test
fnstsw
add
mov
aam
test
test
push
add
js
or
int
(bad)
in
pusha
fdivr
aam
fs
(bad)
imul
adc
dec
jns
int
sbb
into
les
mov
into
hlt
jne
sub
iret
mov
jg
fnstsw
pop
shr
mov
into
retf
test
sbb
jg
iret
into
into
sbb
fwait
xchg
mov
ins
pop
mov
imul
sbb
popf
(bad)
movs
adc
iret
jae
jnp
std
adc
(bad)
nop
mov
into
xor
mov
outs
(bad)
xor
gs
jae
sub
or
adc
fmul
sbb
retf
dec
into
retf
mov
into
dec
pusha
cdq
mov
into
pop
adc
retf
cld
pop
stos
popa
ss
and
out
fdivrp
sbb
xor
into
push
cld
aaa
mov
and
gs
cmp
pop
jae
lock
lods
or
inc
pop
lods
lds
test
lods
sub
outs
outs
inc
ror
into
push
add
jge
mov
test
mov
into
nop
shl
pop
into
pop
or
or
mov
orps
inc
imul
dec
repz
lds
loop
(bad)
out
into
imul
out
push
mov
leave
inc
pop
jmp
xor
outs
out
push
into
sahf
movs
adc
imul
pop
pop
fisub
into
ins
in
arpl
or
dec
mov
dec
into
jne
mov
je
jle
push
loop
(bad)
aas
scas
test
aad
movs
cdq
fisubr
shl
sbb
pop
test
sar
push
lahf
or
scas
add
lea
mov
pop
jae
retf
push
mov
popf
xlat
into
scas
sbb
stos
pop
sahf
call
into
xchg
mov
shl
int3
push
ins
xor
pushf
into
cdq
push
xchg
outs
mov
div
xchg
inc
xor
(bad)
scas
sub
std
or
cmp
cld
xchg
push
adc
or
arpl
int
mov
int3
inc
shr
retf
lahf
xor
inc
ja
es
pushf
into
and
xor
into
inc
xchg
jle
and
test
into
jnp
pop
dec
mov
clc
daa
inc
sbb
cmp
repnz
out
into
jnp
into
popf
xor
aas
mov
into
fsub
cli
sbb
test
mov
dec
sbb
adc
xor
sbb
push
add
dec
jno
aam
into
jae
jns
enter
into
push
sti
scas
and
sub
in
fsub
cli
in
out
xlat
es
or
xchg
adc
xor
into
int3
dec
adc
dec
aad
fst
pop
aaa
into
xor
loope
lahf
(bad)
hlt
into
in
fprem
and
loopne
jns
xchg
movs
fcom
jno
(bad)
in
mov
ret
sub
pop
(bad)
into
mov
daa
out
rol
into
es
mov
lods
or
xor
jo
xchg
mov
dec
es
or
mov
enter
addr16
xchg
mov
scas
aad
mul
test
mov
jmp
mov
(bad)
out
sbb
into
and
ins
pop
mov
leave
les
dec
call
sub
clc
ret
mov
aam
xor
(bad)
mov
jne
loope
out
cmova
ror
int
vcvtps2dq
out
mov
adc
fbld
inc
pop
into
adc
and
into
push
xchg
std
jno
fmul
fpatan
(bad)
pushf
sahf
arpl
fcmove
out
cs
scas
and
sbb
or
aaa
fisubr
test
les
sti
lea
pop
adc
dec
test
or
das
aaa
pop
fisubr
(bad)
fimul
fwait
shl
ja
clc
into
sar
pop
fnsave
ja
jo
mov
into
mov
inc
or
into
ret
mov
cs
cmps
cli
outs
es
pop
imul
cld
(bad)
xor
hlt
inc
mov
inc
jecxz
movs
imul
sbb
cs
cmp
daa
into
xchg
fcmovnu
(bad)
push
popf
or
test
movsx
dec
neg
mov
into
iret
cmps
jecxz
lods
mov
adc
ins
jg
lahf
or
test
fnstenv
mov
leave
cmp
push
ficom
int
jmp
into
xchg
bound
cmp
out
or
dec
xchg
cmps
iret
inc
outs
popf
mov
ret
sbb
stc
into
call
mov
sahf
lahf
(bad)
xor
inc
mov
outs
dec
adc
gs
jg
sbb
cwde
adc
fs
cmp
lahf
jle
retf
mov
aaa
pop
dec
dec
int3
cmps
std
fistp
jbe
pop
adc
pop
adc
jle
into
and
xchg
adc
cmp
into
push
pop
add
into
dec
sub
fmulp
adc
outs
enter
into
sub
hlt
xchg
cmp
and
cmp
xlat
das
mov
mov
scas
push
fwait
std
(bad)
push
sub
jmp
inc
in
sbb
push
gs
into
add
adc
loope
into
inc
mov
addr16
push
xchg
jbe
into
mov
shl
call
adc
mov
fistp
inc
xor
cmp
loope
icebp
ds
xchg
push
inc
add
or
imul
in
xchg
fidivr
arpl
into
xchg
inc
xchg
js
adc
lods
fisubr
into
bsr
dec
jmp
lock
xchg
push
je
ss
(bad)
mov
mov
xchg
mov
cwde
push
push
mov
into
xor
push
mov
imul
in
sti
or
dec
je
(bad)
(bad)
popa
enter
(bad)
push
pop
and
test
and
into
mov
push
(bad)
rcl
pop
cmps
call
mov
push
xchg
dec
into
add
or
or
pop
add
jg
pushf
push
dec
jge
into
inc
xchg
xor
ja
dec
xchg
xor
and
xchg
and
sub
sbb
jne
out
mov
inc
inc
push
mov
push
mov
bound
into
es
arpl
into
mov
jae
dec
stos
xor
jg
push
pop
out
and
sbb
push
(bad)
in
js
mov
inc
mov
jecxz
cmps
adc
push
repnz
pop
xor
xchg
into
shl
mov
inc
inc
leave
loope
xor
mov
jae
into
push
scas
xlat
sbb
push
fs
mov
push
cmps
cmp
xor
dec
into
mov
mov
and
cwde
into
shr
sbb
mov
push
sti
mul
cmp
into
dec
cmp
cdq
sar
mov
out
js
aas
pop
xchg
scas
test
inc
(bad)
adc
imul
cli
dec
loopne
data16
xchg
movs
dec
daa
mov
sahf
lock
cmps
aam
fidiv
(bad)
into
test
dec
in
add
pop
sub
lods
into
sbb
(bad)
inc
cmps
std
inc
jno
pop
scas
push
jo
dec
fsubrp
mov
ret
aad
shr
xchg
cmc
into
mov
ret
mov
add
inc
in
mul
jo
stos
loop
pusha
mov
movsx
jb
scas
imul
nop
packuswb
xchg
cld
movs
into
ins
sub
dec
pusha
test
gs
xchg
pop
into
push
cmp
lea
sub
inc
dec
and
inc
nop
es
into
into
ins
rol
loop
pop
xchg
popa
and
xlat
adc
lds
mov
add
jno
adc
mov
into
jecxz
cs
outs
adc
and
ja
pop
aaa
xor
mov
rol
sub
call
es
dec
cs
in
out
clc
or
adc
ficom
push
and
mov
cmp
into
adc
mov
ss
and
into
div
xchg
cdq
mov
add
into
ins
call
into
shr
test
into
into
dec
cmc
rol
ret
lods
dec
sti
jnp
les
aaa
xlat
cmp
lods
or
adc
mov
(bad)
aas
sbb
push
xchg
into
sub
jo
into
lods
add
shl
jg
sub
cmp
gs
popf
add
pcmpeqb
into
mov
std
clc
int3
add
cmp
popa
xor
dec
into
bound
jle
dec
aad
into
or
ret
inc
je
test
pop
psrld
xor
test
sbb
mov
pop
sub
and
mov
rcl
cwde
mov
iret
mov
pop
fistp
ja
mov
repnz
jae
aas
xor
mov
dec
mov
popf
dec
xlat
push
stc
xchg
and
dec
cmps
lds
jmp
dec
mov
loope
mov
lods
push
out
xor
rcl
jecxz
seta
xchg
out
lds
imul
(bad)
stc
stos
sub
sbb
pushf
mov
mov
test
dec
jg
imul
dec
cmp
pop
lds
adc
es
mul
enter
call
mov
xchg
fisttp
movsx
icebp
(bad)
push
adc
pop
sbb
xchg
call
mov
fstp
lods
or
in
stos
outs
and
ss
call
sub
and
aaa
and
fucomip
mov
xchg
cmc
es
enter
jecxz
fdivr
(bad)
outs
out
push
lock
cmps
dec
mov
sub
lds
mov
pop
cmp
and
pop
ffree
ja
jnp
pop
sub
pop
and
cmps
mov
imul
mov
adc
add
mov
mov
cmp
cmp
mov
fild
stos
call
leave
jnp
xor
cmp
xor
in
jns
pop
aaa
into
push
dec
push
scas
mov
bound
(bad)
push
mov
adc
out
jge
sbb
mov
cmp
xor
jle
outs
and
xchg
push
repz
adc
retf
stos
mov
and
iret
jg
xor
and
je
dec
sbb
fistp
mov
pop
pop
mov
mov
push
sbb
stc
and
mov
dec
or
push
(bad)
cmp
in
inc
gs
mov
lods
jge
xor
and
pop
and
sahf
jl
sub
push
add
int
repnz
aas
pop
pop
or
ror
(bad)
or
jl
es
cs
push
inc
mov
jmp
mov
cld
shl
inc
sbb
mov
out
and
iret
arpl
lds
ret
mov
inc
add
push
mov
push
cmp
addr16
(bad)
in
dec
mov
loope
test
daa
push
sub
mov
into
xor
arpl
cmps
mov
add
mov
mov
dec
cdq
ins
and
imul
in
sub
into
lds
pop
or
std
call
test
cmp
js
and
aam
into
shl
push
dec
test
xchg
mov
jne
jl
sub
push
es
inc
push
and
daa
mov
das
xlat
sti
je
adc
std
lods
mov
jbe
mov
mov
movs
outs
es
ins
aas
(bad)
sahf
jne
cdq
and
sub
in
outs
in
or
es
jg
inc
mov
xor
out
je
call
cmps
rol
xor
mov
adc
sub
pop
mov
dec
imul
in
(bad)
mov
(bad)
test
xchg
mov
test
mov
push
dec
mov
xchg
and
mov
scas
xor
push
mov
add
popa
add
lahf
dec
xchg
mov
push
or
lds
lahf
das
out
sub
(bad)
mov
js
xor
inc
xchg
outs
cmc
pop
stos
fwait
(bad)
popf
push
jbe
imul
and
scas
cmc
jae
xlat
adc
(bad)
mov
in
add
arpl
in
xchg
inc
mov
jl
aas
sub
stos
or
xlat
cmp
jns
lds
outs
adc
ds
into
je
dec
rol
push
inc
aad
lea
into
jo
pop
mov
sbb
lods
int3
push
test
adc
addr16
(bad)
aas
out
stos
mov
(bad)
and
cmp
(bad)
xor
cmps
adc
dec
fild
add
in
xor
pop
stos
outs
into
jbe
fadd
lock
pop
adc
cmc
daa
sub
mov
push
sub
stc
(bad)
daa
sar
shl
jge
mov
mov
push
adc
in
ins
retf
scas
mov
cmp
daa
mov
xor
fisttp
cmps
fxch
jl
jb
dec
jg
and
neg
stos
push
and
ins
xchg
(bad)
mov
jecxz
out
mov
lods
scas
(bad)
ins
jno
aas
or
push
xor
or
jge
add
and
test
mov
loopne
sbb
nop
mov
sub
dec
xchg
jmp
add
(bad)
xchg
out
in
hlt
fild
call
or
mov
fwait
xor
push
mov
jl
sub
in
add
sub
mov
(bad)
jge
fist
sqrtps
out
mov
jge
jl
sahf
stos
in
aaa
dec
and
add
inc
cmp
sbb
outs
dec
push
ja
mov
xchg
arpl
jnp
dec
dec
cmp
fwait
stos
lahf
shr
cmps
outs
pop
cmps
fbld
mov
aad
test
mov
push
pop
hlt
jge
daa
inc
cmps
xor
repz
lds
rcr
das
add
cwde
sbb
fisubr
arpl
scas
pusha
icebp
cmp
pop
aam
add
sub
scas
ja
das
pushf
and
xor
mov
jns
outs
repz
adc
lods
xchg
arpl
mov
inc
rcr
pusha
add
outs
sbb
(bad)
or
push
jns
xor
mov
sbb
lods
dec
in
in
dec
jbe
cli
shl
xchg
dec
or
mov
inc
jl
sbb
enter
mov
inc
imul
add
sub
dec
push
mov
mov
movs
ja
retf
mov
cmps
xchg
xchg
mov
arpl
mov
jno
sub
out
sub
dec
syscall
mov
aaa
mov
aaa
test
inc
daa
test
jp
jp
and
cmps
daa
push
dec
test
inc
arpl
lds
aam
es
push
sar
test
cs
push
cli
shl
mov
xlat
sub
push
jno
and
inc
lods
adc
xlat
int3
(bad)
xor
mov
cmp
(bad)
aaa
xchg
mov
popa
or
cmps
dec
xlat
clc
into
mov
je
aam
dec
ins
(bad)
mov
xor
jge
sbb
shld
lds
pop
clc
or
into
int
loopne
lds
(bad)
and
xchg
or
aam
cmp
jge
jp
cmc
jno
xor
cmp
jnp
enter
scas
pop
or
push
jae
xor
outs
pop
pop
adc
(bad)
std
add
movs
loopne
dec
inc
xor
pop
jge
scas
lods
xchg
jp
es
repnz
ins
inc
pop
std
mov
(bad)
retf
mov
dec
aad
xlat
std
data16
sbb
setge
push
test
mov
xchg
xchg
jnp
(bad)
fild
mov
and
adc
inc
mov
and
mov
and
or
into
imul
imul
lfs
add
into
cld
data16
stc
lds
rcl
xchg
mov
inc
sbb
mov
dec
(bad)
in
imul
lods
lods
xchg
test
xor
inc
jae
or
add
cmps
loopne
aas
enter
sub
nop
into
(bad)
je
not
stos
test
mov
int
mov
addr16
mov
aaa
pop
xchg
dec
(bad)
dec
outs
fnstenv
aas
adc
add
xor
cwde
in
clc
fwait
jo
ret
xchg
pop
aaa
test
fmul
pop
jmp
scas
mov
push
pop
lea
repz
inc
adc
mov
(bad)
sub
(bad)
pop
push
sbb
mov
adc
sub
loopne
ret
outs
or
xchg
in
cmps
push
mov
xchg
add
(bad)
sub
es
dec
daa
div
pop
je
mov
punpckhdq
mov
mov
out
or
ins
lods
dec
xlat
mov
jnp
fisubr
shl
repz
adc
mov
(bad)
test
mov
mov
and
stos
js
or
cs
fistp
into
inc
jmp
push
in
movs
ds
das
jg
cmp
push
in
or
mov
in
xchg
in
jg
leave
imul
arpl
cmp
adc
cmps
push
inc
bound
mov
aas
mul
pop
mov
and
(bad)
mov
aam
(bad)
addr16
cmp
cwde
or
std
inc
xor
repz
daa
cmp
(bad)
xor
test
mov
ficom
lods
adc
(bad)
mov
push
popf
stos
(bad)
cdq
mov
xchg
jo
cdq
mov
call
test
(bad)
in
jle
out
scas
sub
cmp
xor
imul
fwait
test
lds
cmp
lahf
mul
addr16
xchg
in
aas
xorps
sbb
fdivr
mov
in
jae
pop
ins
cmp
jne
add
std
gs
or
(bad)
cmps
mov
ins
clc
pushf
ret
mov
test
fisubr
and
push
sbb
xor
frstor
and
push
(bad)
sti
sub
xlat
sub
cmps
sub
cwde
cmp
es
(bad)
jecxz
pop
lea
xor
mov
aad
push
stos
add
dec
ror
sbb
and
mov
mov
fisub
(bad)
push
xor
ds
jle
psubd
push
and
hlt
jns
enter
xchg
loope
xor
or
(bad)
(bad)
out
retf
cmp
out
mov
inc
cmp
cwde
into
fld
mov
(bad)
cmp
sub
jl
xor
sub
xchg
test
push
fnsave
and
jns
jle
mov
jb
lds
into
jg
es
outs
and
movs
repz
mov
movs
add
push
std
add
dec
leave
lea
cwde
ins
dec
dec
dec
ret
xchg
cmp
dec
jnp
arpl
sub
int3
and
jnp
xlat
sbb
in
aas
mov
jmp
xchg
ins
or
in
lahf
movaps
aad
(bad)
mov
daa
xchg
mov
popf
ins
stos
vcvtss2sd
shl
prefetchwt1
sub
xchg
mov
mov
out
mul
fs
ins
xor
add
cmp
xchg
mov
dec
cwde
call
daa
lds
jbe
xor
mov
into
mov
push
in
cmps
sub
mov
fdiv
int
mov
int
dec
cmp
push
sub
sahf
and
outs
push
mov
xor
mov
shl
cmp
sbb
adc
adc
loope
adc
outs
inc
or
cld
gs
mov
add
lds
les
adc
loopne
and
mov
jo
mov
and
out
(bad)
xor
mov
popa
xor
cmp
in
inc
add
fs
icebp
add
mov
ins
fistp
push
jmp
xchg
(bad)
jnp
pushf
hlt
pusha
jbe
mov
lahf
lds
movs
fld
mov
mov
jnp
das
pusha
stos
mov
sub
adc
push
outs
js
mov
aaa
push
fsubr
xor
aas
retf
std
popf
push
xchg
xchg
sub
jo
in
ret
cli
rcr
xchg
out
mov
(bad)
in
addr16
mov
ins
fadd
push
out
sub
xchg
gs
push
sahf
js
sbb
movs
adc
jl
addr16
repnz
aas
std
cmp
sbb
mov
adc
in
mov
push
xchg
add
cmps
scas
lahf
lahf
xchg
add
js
cmp
mov
out
hlt
lea
retw
inc
cmps
dec
add
pop
out
cmp
push
lahf
cmps
mov
outs
inc
mov
lods
jae
lea
jnp
jb
in
(bad)
and
nop
(bad)
adc
sub
cs
lods
pop
test
push
mov
jo
xchg
cmp
xchg
imul
jmp
test
cmp
cmps
jecxz
hlt
or
les
jno
das
loopne
bound
dec
xchg
lds
push
pusha
aad
mov
mov
adc
dec
cmp
and
leave
(bad)
adc
adc
stos
sbb
pop
xchg
stos
es
test
xor
and
jp
lds
xchg
data16
cdq
xor
add
in
out
pop
jge
scas
mov
cmp
mov
stos
cmp
push
(bad)
jle
pushaw
les
(bad)
aas
jo
xchg
imul
lahf
icebp
lds
into
cmova
sbb
mov
cmp
mov
xor
aas
mov
pop
loopne
jnp
out
shr
scas
cmp
inc
push
and
xor
jg
dec
rol
jns
mov
bound
in
out
cmps
(bad)
lea
dec
or
jb
cmps
xor
sub
jmp
xchg
dec
out
jb
mov
sub
adc
sub
mov
sbb
lea
lock
fdivr
(bad)
movs
cmp
scas
inc
adc
cmp
or
cmp
scas
out
es
arpl
out
xchg
mov
cs
jnp
stos
outs
mov
add
lds
or
cmp
push
jle
inc
loop
jg
pushf
rep
jmp
add
mov
pop
add
inc
sbb
add
inc
jb
mov
iret
push
pop
fnstcw
sub
adc
pop
xor
cmps
cmp
aad
loope
jae
lds
or
jl
lahf
in
dec
sub
dec
pop
ret
mov
(bad)
loope
ret
stos
inc
dec
test
mov
xor
sub
mov
call
adc
(bad)
fldenv
in
push
add
int
(bad)
push
les
mov
inc
adc
(bad)
inc
aam
pushf
js
mov
jbe
sub
xor
sub
xchg
mov
mov
outs
jne
cmp
or
mov
test
mov
xchg
jnp
fwait
jne
xor
mov
push
xor
popf
(bad)
pop
test
nop
jg
retf
cmp
mov
shr
or
or
and
push
pusha
das
sub
push
or
cmps
push
sbb
jns
jo
sub
jo
or
out
movs
jnp
lea
in
cmp
xabort
xlat
retf
xor
scas
lods
(bad)
popf
add
xchg
jg
out
(bad)
cwde
pop
inc
outs
into
imul
ror
ins
cs
or
push
pusha
es
jle
jnp
(bad)
test
mov
mov
lods
adc
in
push
fisubr
out
add
(bad)
jbe
jno
in
movs
(bad)
dec
sub
mov
loop
scas
mov
ins
fmul
sbb
xlat
loopne
push
sahf
xor
retf
dec
retf
mov
fistp
(bad)
jnp
out
cmp
rcl
cmps
imul
stos
out
mov
ror
ret
popa
cli
cmp
cmp
dec
jnp
aas
mov
mov
scas
and
xchg
mov
sub
stc
scas
inc
nop
sbb
xor
sub
ret
jbe
mov
into
jmp
push
lock
pop
add
jno
into
in
arpl
jle
mov
pushf
lds
nop
scas
sub
(bad)
sahf
push
aas
mov
jmp
pop
aam
out
jnp
pop
pop
inc
mov
xor
aas
int
mov
mov
cdq
mov
sti
arpl
into
mov
movs
sbb
(bad)
mov
xlat
aaa
fstp
cmp
dec
jmp
xchg
mov
xor
aas
icebp
dec
fld
ins
mov
jne
push
mov
mov
fs
outs
popa
add
cld
push
jns
sbb
mov
push
mov
add
jae
push
and
call
enter
repz
loopne
jns
or
(bad)
sti
ins
jns
mov
adc
sti
mov
inc
mov
ret
or
adc
push
mov
movs
cs
dec
push
jb
sar
mov
adc
adc
(bad)
or
xchg
mov
aas
addr16
mov
jmp
scas
mov
mov
xor
sbb
add
xor
into
and
dec
pop
push
retf
and
mov
jle
aas
mov
lods
inc
jbe
mov
add
xor
cmp
xor
addr16
jae
inc
rcr
lahf
aad
neg
cmp
mov
add
dec
adc
mov
mov
xor
js
push
sub
int
xchg
jge
sub
outs
jae
xchg
xor
lock
fbstp
in
stos
std
shr
jg
mov
sub
(bad)
lea
or
sub
adc
push
aas
fld
mov
nop
pop
push
lods
or
test
and
fdivr
mov
inc
loop
or
cmps
in
mov
out
scas
(bad)
and
test
in
fwait
jl
fiadd
into
jne
cmc
jmp
adc
dec
aas
inc
xchg
(bad)
(bad)
(bad)
pop
addr16
lahf
pop
mov
arpl
mov
and
dec
test
jns
push
dec
add
jecxz
pop
imul
jae
jns
pop
xor
sub
inc
add
jle
fwait
pop
adc
dec
(bad)
inc
repz
(bad)
push
test
ins
push
fdivr
leave
mov
and
(bad)
imul
xchg
mov
xchg
dec
mov
mov
adc
movs
clc
jg
inc
shl
cmp
mov
or
mov
lahf
cmp
outs
push
mov
js
jae
cs
aaa
mov
mov
in
stos
lahf
lock
aas
rcr
mov
inc
jno
add
movs
popf
cmps
jnp
add
stc
ror
jne
movs
adc
and
mov
aam
movs
rol
and
stos
pop
adc
push
loopne
bound
(bad)
cmp
sub
es
fisub
je
outs
dec
scas
lock
and
mov
ss
dec
mov
sti
inc
into
nop
or
adc
mov
shl
and
lods
jne
clc
in
(bad)
dec
mov
ffree
sti
loopne
xchg
cmps
and
jae
gs
push
aas
mov
dec
(bad)
fimul
sub
imul
jae
mov
jo
push
jecxz
and
sbb
aam
call
jle
mov
mov
dec
mov
pop
pusha
xchg
and
adc
(bad)
mov
in
mov
push
pop
sahf
push
add
mov
push
popf
aam
jo
mov
les
mov
mov
stos
fmul
and
sub
stc
test
jp
xor
int
sbb
mov
loop
pop
popa
scas
jl
sbb
cmps
dec
sti
pop
sbb
mov
push
mov
cmp
jl
add
int
add
daa
cmp
(bad)
pop
mov
pop
clc
dec
sbb
stos
aam
(bad)
sar
leave
mov
or
inc
sbb
test
into
mov
hlt
test
pop
ja
dec
mov
jl
lds
dec
je
adc
mov
retf
mov
cs
les
in
fmul
popf
mov
adc
mov
dec
inc
(bad)
loopne
fcomp
aaa
call
inc
shl
call
es
hlt
pushf
lds
xor
in
fcomp
xchg
cmp
add
dec
stos
pop
sub
jbe
adc
jg
and
and
inc
shl
adc
call
cmp
xor
mov
xchg
pop
popa
mov
xchg
(bad)
push
push
rcl
or
add
adc
pop
mov
jno
sub
adc
pop
sub
in
(bad)
outs
mov
movs
jo
sub
outs
add
xor
test
stos
aas
jge
adc
stos
inc
add
pop
pushf
scas
jo
out
cli
mov
adc
lea
inc
int3
leave
xchg
jne
popa
jnp
xor
xor
fld1
cwde
xchg
nop
pop
mov
mov
inc
rcr
and
outs
push
out
out
lea
in
cmps
cmps
sbb
(bad)
pop
int
push
or
movs
push
outs
rcr
aad
scas
stc
pop
(bad)
inc
ds
movs
loop
ja
in
sar
jb
sub
fcmovbe
pop
or
cmp
std
adc
out
jmp
sub
pop
mov
fwait
into
mov
jnp
mov
jbe
(bad)
out
pop
push
mov
das
jge
ss
xor
sub
into
addr16
fldenv
xchg
pop
in
pop
mov
je
mov
mov
into
inc
cld
mov
fisub
outs
jno
lock
xchg
into
add
pop
loope
jne
mov
and
mov
ror
adc
out
or
into
ficom
jb
test
cmps
aam
scas
lods
mov
or
ins
xor
jp
pop
test
gs
xchg
xor
inc
mov
retf
lods
(bad)
jbe
or
rol
es
cdq
into
leave
dec
in
ret
dec
into
pop
lds
jp
sub
xor
jg
pushf
jge
or
cmp
std
into
xor
fldcw
jno
jle
lahf
or
pop
(bad)
jmp
adc
inc
and
dec
into
mov
mov
mov
add
adc
adc
mov
or
scas
idiv
pop
into
outs
and
adc
sahf
mov
adc
lods
sbb
test
inc
cmp
dec
arpl
add
outs
push
jnp
ins
jns
mov
lds
lods
clc
xor
pop
ins
(bad)
sbb
sahf
inc
stc
and
xor
jge
scas
adc
sub
movs
push
out
xchg
(bad)
shl
xchg
pop
or
loope
(bad)
cmp
lods
ret
loop
and
(bad)
loopne
sub
sahf
jmp
into
movs
pop
pop
(bad)
push
retf
into
adc
pushf
gs
cli
jp
dec
js
jg
into
push
hlt
retf
adc
push
into
nop
dec
lgs
int3
lods
into
inc
and
lock
retf
jl
or
stos
es
leave
jbe
scas
cmp
and
into
dec
aaa
dec
cmps
jne
inc
stos
nop
sbb
lods
ss
cdq
je
(bad)
sub
pop
das
js
sbb
mov
btc
mov
xchg
lds
pop
mov
push
into
mov
mov
add
pushw
retf
push
mov
stos
cmp
mov
sub
mov
in
repz
mov
or
cwde
dec
xchg
in
lahf
cmp
les
pusha
(bad)
and
test
fs
lods
hlt
or
inc
push
aam
into
push
and
pop
and
add
test
or
rdtsc
push
jmp
adc
mov
jnp
outs
clc
jecxz
iret
(bad)
mov
pop
into
jne
jp
and
xchg
jge
sub
jbe
mov
add
mov
loopne
and
adc
xor
push
push
jae
ficom
repz
movs
push
mov
into
loop
pop
push
lods
pop
mov
dec
xor
aaa
dec
test
cmc
icebp
sbb
mov
es
mov
jns
(bad)
mov
aam
jge
outs
cmp
test
lods
mov
(bad)
(bad)
cs
pcmpgtd
test
sbb
dec
inc
xchg
outs
aaa
cmp
inc
stos
mov
mov
jmp
mov
lods
outs
mov
out
imul
cmp
scas
push
inc
xchg
mov
adc
repnz
shr
push
fld
mov
pop
(bad)
adc
js
into
xchg
lods
push
sub
xchg
fwait
into
add
push
nop
pop
shr
push
cwde
es
retf
out
loopne
rcl
div
imul
into
jge
sbb
ficomp
out
enter
xchg
xchg
cmp
cmp
push
loopne
mov
xchg
sbb
or
pop
jae
xlat
mov
(bad)
imul
xchg
mov
fiadd
and
lods
mov
dec
and
movs
or
xchg
(bad)
dec
or
mov
movs
loope
cli
fwait
dec
dec
jbe
sbb
mov
out
addr16
icebp
mov
fisubr
dec
sti
fcom
test
push
push
scas
pop
mov
mov
xor
jge
sbb
mov
into
rcl
add
add
bound
popa
mov
(bad)
sub
xchg
mov
dec
dec
test
sbb
rcr
into
call
mov
xor
adc
mov
stc
mov
scas
into
sub
out
cmp
mov
lods
lahf
retf
arpl
inc
ror
pop
aam
adc
jmp
pop
fist
or
dec
push
into
jg
(bad)
jb
call
and
and
hlt
scas
inc
jno
and
loopne
repnz
push
test
mul
shr
sub
mov
into
or
retf
jecxz
xchg
into
repz
test
(bad)
mov
mov
sub
pop
lds
rol
(bad)
ret
into
mov
inc
ja
into
je
adc
mov
ins
imul
ret
add
or
into
and
retf
xchg
(bad)
scas
dec
(bad)
aas
inc
pushf
adc
sub
outs
pop
mov
into
dec
repz
xor
js
shl
or
mov
ins
into
rcr
mov
cmps
into
fbld
and
sub
test
shl
aam
mov
imul
into
xchg
aas
sub
hlt
push
mov
dec
shl
scas
dec
cmp
nop
fdivp
inc
nop
add
dec
loop
fsub
scas
fs
xchg
repnz
lahf
cmp
push
hlt
into
ds
dec
je
sub
js
sbb
test
data16
add
and
pop
cld
mov
hlt
mov
data16
mov
mov
jb
push
add
pslld
jns
pop
movs
or
iret
(bad)
stos
into
cld
dec
jnp
inc
cli
ss
into
mov
lds
mov
sar
out
xor
cmp
jb
into
sub
push
test
mov
mov
fidivr
pop
test
in
sbb
push
sub
cmp
jnp
lea
into
sub
mov
xor
js
xchg
cmp
sbb
mov
jp
cmp
popf
jle
out
(bad)
rcl
fld
sbb
xlat
sub
sub
jmp
and
movs
ret
loopne
ret
cli
test
xchg
mov
dec
test
xchg
push
dec
rol
into
mov
add
inc
fs
into
outs
jmp
into
xchg
mov
fisttp
push
mov
push
xchg
ss
mov
scas
mov
cmp
into
ret
mov
in
and
pop
mov
xchg
lods
mov
test
xchg
into
sub
xchg
xchg
jne
mov
jnp
in
mov
das
mov
into
test
out
jns
or
mov
sub
pop
add
inc
push
xchg
outs
mov
fwait
sub
inc
lea
ret
cdq
rol
into
mov
js
jno
xor
pop
mov
into
sub
cmp
jmp
cld
mov
adc
mov
into
add
sub
dec
data16
jae
(bad)
aam
pop
inc
not
aam
into
adc
dec
icebp
popa
cli
pop
stos
mov
dec
popf
out
ret
aad
aas
retf
cmps
repnz
into
(bad)
iret
sub
pop
into
adc
dec
push
push
test
mov
dec
into
mov
mov
into
test
or
mov
out
dec
xchg
fisttp
inc
mov
ret
scas
sub
jp
mov
jnp
out
outs
aas
div
into
mul
cmp
pop
jmp
cld
(bad)
xchg
xchg
mov
scas
push
sbb
ins
test
mov
jae
les
call
(bad)
jg
leave
cmp
cmp
mov
cld
jno
and
lods
mov
inc
into
(bad)
sahf
sbb
imul
and
sub
xchg
js
mov
cmp
xor
arpl
mov
jmp
sti
jp
or
(bad)
push
ds
and
push
(bad)
jno
repnz
mov
xor
call
push
scas
jae
cmp
xchg
sahf
stc
shl
cmp
sbb
xor
push
ins
popf
les
(bad)
cmps
jns
in
mov
in
and
fist
ficom
fcom
or
add
cmp
sub
dec
loopne
gs
aaa
cmp
shl
mov
or
lock
movs
push
inc
movs
mov
dec
daa
xchg
mov
cmp
push
movs
outs
smsw
xchg
xchg
push
pop
jb
adc
retf
and
and
push
and
jle
cmp
pop
aas
popf
fs
jg
fstp
(bad)
call
pop
mov
mov
test
sbb
icebp
and
call
push
lahf
repnz
inc
loope
in
std
push
mov
jnp
adc
les
jae
cmp
das
in
hlt
push
cmps
sub
xchg
int3
xor
cmp
jno
jmp
in
push
fwait
clc
xchg
mov
aad
and
es
ds
mov
lock
mov
imul
dec
std
push
shr
xchg
hlt
jno
in
inc
sub
shl
mov
adc
cmps
mov
fiadd
retf
or
sub
mov
mov
dec
fdivr
xor
aas
fisubr
sbb
mov
(bad)
adc
push
in
int
mov
sti
inc
jmp
js
das
(bad)
popa
jl
lds
je
push
lds
or
push
cmps
ins
mov
xor
mov
jge
sar
cmp
xchg
es
cli
rcr
cmp
cmps
imul
sub
loopne
jmp
mov
mov
leave
dec
adc
xor
mov
std
push
pop
rol
or
ins
pusha
pop
repnz
mov
mov
cmps
push
cmps
mov
clc
push
jbe
dec
xchg
sbb
mov
sahf
xor
sbb
stos
add
mov
(bad)
lahf
mov
ja
jo
clc
pop
jne
loopne
mov
stos
ficomp
les
iret
aas
js
adc
stos
mov
xlat
lea
jmp
int
movs
push
sbb
inc
outs
pop
jg
add
mov
mov
mov
in
(bad)
repz
(bad)
fiadd
inc
cmp
mov
pop
mov
imul
and
in
sar
idiv
dec
ss
xor
push
inc
stos
dec
sub
ds
jmp
stos
out
out
lea
(bad)
ss
mov
dec
add
pop
sbb
test
ins
xor
imul
or
iret
mov
lahf
push
clc
jl
fwait
lea
cld
outs
imul
xor
(bad)
cdq
xchg
test
int
imul
test
ja
xor
sub
rol
inc
daa
cmp
push
pop
(bad)
outs
jg
jl
sbb
and
inc
push
jle
pop
mov
xlat
sub
xchg
xor
inc
retf
mov
push
lahf
lahf
jnp
out
inc
mov
mov
stos
sti
pop
das
or
stos
and
or
cmp
inc
stc
lds
push
adc
mov
cmp
nop
(bad)
fwait
rcl
jmp
rcl
sbb
mov
sbb
lds
sbb
movs
adc
add
cmps
or
mov
cmp
jne
fcomi
pop
stos
mov
dec
mov
push
mov
(bad)
mov
add
adc
ss
scas
dec
mov
adc
cmp
mov
(bad)
fidivr
and
xlat
cmps
pop
arpl
loopne
cmps
in
sbb
jge
imul
xlat
push
adc
xor
cmp
mov
sub
or
cs
or
enter
mov
sbb
mov
hlt
inc
jge
imul
cmp
enter
xlat
mov
adc
dec
jnp
paddsb
shl
mov
xchg
xchg
mov
gs
add
xor
pop
lods
pop
das
aad
pop
xor
push
pop
jno
cs
mov
mov
and
push
mov
inc
clc
mov
mov
movs
pop
mov
(bad)
fst
cld
in
in
pop
stos
test
inc
mov
imul
dec
sub
(bad)
sub
ins
adc
jle
inc
sbb
popf
and
icebp
pop
fisubr
dec
lods
jmp
adc
jne
inc
scas
repnz
and
ins
aaa
jne
pop
xchg
cmp
nop
sbb
dec
lods
jg
mov
int3
and
cmp
in
pop
lods
outs
pop
(bad)
adc
loop
add
mov
mov
mov
cdq
call
into
push
jb
pop
cmps
leave
std
test
ror
loop
push
ret
mov
test
adc
into
mov
pushf
hlt
stos
lods
imul
hlt
mov
mov
and
loopne
mov
ret
sar
repnz
pop
inc
sub
into
cmp
in
push
lahf
mov
rcl
dec
cmps
movs
stos
dec
mov
mov
lahf
lods
cs
popa
ins
sub
scas
jb
into
(bad)
icebp
mov
into
sub
adc
push
in
mov
test
imul
into
add
fidiv
lods
out
jg
cmps
dec
jae
out
fs
sub
cmp
in
mov
aas
push
out
(bad)
loope
xor
repnz
or
test
scas
xor
push
leave
mov
mov
jbe
loope
retf
mov
sub
mov
xor
repnz
lods
scas
mov
int3
mov
lods
pop
sub
mov
fcomp
in
repnz
sbb
cmp
in
mov
stos
jmp
add
scas
dec
idiv
out
hlt
mov
pop
mov
daa
popa
imul
clc
cli
jns
jge
into
(bad)
mov
into
sub
mov
xchg
jae
cs
fwait
imul
pop
into
leave
pop
sub
push
aas
or
ds
repnz
sub
clc
in
in
pop
(bad)
in
call
test
mov
into
test
repz
push
pop
push
leave
scas
xchg
scas
push
mov
je
out
out
adc
xchg
fisub
xor
lods
adc
aam
icebp
call
int
test
es
pop
ins
pop
ins
in
icebp
mov
(bad)
mov
push
sbb
(bad)
(bad)
mov
pusha
add
loopne
nop
mov
hlt
scas
xlat
mov
pcmpeqw
inc
push
pop
inc
aaa
mov
pop
push
cli
jae
dec
int
xchg
js
cmp
jle
mov
lods
jg
stos
lods
pop
mov
sub
jmp
scas
loop
icebp
mov
arpl
mov
inc
(bad)
push
outs
xchg
cmp
mov
scas
sbb
lods
into
inc
inc
adc
leave
dec
into
(bad)
popa
push
mov
jb
jbe
(bad)
mov
aaa
xor
(bad)
sub
lods
xchg
pop
lods
add
push
dec
mov
mov
and
pop
xchg
dec
jge
mov
aas
test
mov
repnz
mov
xchg
ins
mov
push
into
icebp
push
push
leavew
push
pop
popa
into
outs
mov
jae
dec
shl
mov
sub
std
adc
pop
mov
cdq
mov
loopne
stc
adc
jmp
repnz
mov
arpl
fdivp
add
retf
rcl
pop
test
mov
or
mov
add
out
mov
ss
cmp
enter
xchg
pop
in
push
daa
ret
retf
push
into
mov
mov
sbb
push
sti
int3
inc
test
out
cmp
aaa
into
mov
fwait
ret
xchg
js
and
cmps
jle
push
or
xor
into
test
arpl
cmps
into
in
adc
mov
pop
fisubr
inc
ret
lahf
inc
xor
das
(bad)
stc
jb
pop
dec
(bad)
sub
lods
mov
xor
lods
fmul
jmp
(bad)
sub
std
popf
outs
sbb
jo
dec
jae
sub
jl
sub
stc
rcl
cmp
shl
into
jno
and
int3
into
sahf
je
fs
adc
imul
cmp
and
xor
into
jmp
xchg
ror
loopne
popf
xor
stos
fisubr
add
ja
ror
pusha
(bad)
lds
xchg
fidivr
pop
les
sti
imul
gs
test
ins
push
div
xlat
jmp
mov
imul
pop
into
fsubr
int
cmp
icebp
inc
scas
or
pop
sbb
inc
cmps
lahf
cmc
push
cmps
aas
cmp
test
sub
jb
sbb
cmc
out
dec
push
stos
jno
add
aas
add
xchg
repz
cld
push
sbb
scas
jne
inc
xlat
mov
pop
mov
add
xor
cwde
dec
aaa
out
ins
stc
mov
mov
(bad)
jns
lock
sub
aad
ret
into
and
fcmovne
stos
pop
or
stos
dec
iret
das
scas
into
mov
(bad)
into
push
cmp
cld
into
out
in
or
int3
cmc
jb
cdq
and
repz
addr16
out
not
gs
imul
xor
and
add
fxch
mov
retf
sub
sub
mov
test
test
jbe
dec
jmp
push
into
rol
mov
mov
jns
xchg
mov
into
scas
aaa
mov
(bad)
jecxz
jge
pop
push
pop
cmp
push
pandn
(bad)
mov
push
into
dec
push
jmp
inc
lods
inc
add
icebp
aas
mov
int
jmp
shl
retf
lahf
xchg
cmp
inc
into
repz
aam
adc
iret
shr
mov
dec
or
ret
stos
outs
xor
bound
mov
leave
scas
mov
lods
lock
ins
cmps
cli
aad
dec
repnz
lods
popf
inc
jne
faddp
stos
add
scas
mov
mov
dec
sub
js
xchg
call
mov
fs
sub
jo
and
into
popf
mov
outs
or
fsubp
mov
mov
scas
jle
into
jbe
adc
mov
cmp
into
xchg
sub
mov
lods
jecxz
retf
or
mov
push
sbb
pop
ja
cmps
mov
add
push
out
jmp
mov
mov
fist
(bad)
out
xchg
call
mov
fadd
sub
xchg
inc
fstp
lods
push
mov
inc
mov
cmp
cdq
outs
cmps
dec
and
aaa
mov
out
repnz
xchg
jmp
into
aad
nop
or
mov
jle
psubw
sbb
inc
in
mov
mov
into
imul
xchg
ret
inc
into
aaa
in
push
je
or
cdq
cmps
pop
call
into
pop
clc
aad
fs
push
(bad)
into
adc
jb
lods
(bad)
mov
test
sub
mov
mov
mov
(bad)
jbe
dec
imul
fidivr
sbb
mov
fmul
mov
mov
jle
(bad)
sbb
sti
cmp
test
jnp
pop
test
xor
pop
cmp
cs
out
lods
ror
inc
scas
jo
mov
scas
(bad)
in
mov
shr
outs
sub
imul
test
fdivrp
into
adc
mov
out
lds
or
mov
rol
scas
mov
push
pop
cmp
inc
in
outs
mov
sbb
stos
(bad)
adc
adc
stos
out
mov
xchg
ja
cdq
mov
jbe
repz
out
and
sbb
mov
shr
cmps
into
jbe
dec
into
xor
push
stc
jg
pop
arpl
into
cmp
and
imul
(bad)
rcr
test
daa
mov
jle
pop
addr16
mov
xor
clc
cmps
std
stc
daa
cmp
popf
rcl
inc
jae
addr16
xchg
ror
cmps
xchg
sub
gs
mov
or
nop
mov
mov
stos
jne
cmp
movs
jnp
aaa
xlat
sub
mov
gs
xchg
sbb
lds
stos
push
ja
mov
into
mov
pop
sub
mov
stos
jne
test
mov
loopne
dec
sub
xor
aas
mov
out
jbe
in
mov
and
sbb
xor
into
cmp
inc
movs
repz
cmps
dec
cmp
shr
dec
pop
lods
into
pop
mov
repnz
arpl
aad
mov
mov
stos
repz
mov
inc
and
mov
pop
iret
imul
lock
inc
movs
cmp
stos
sar
mov
lock
jle
repnz
(bad)
xlat
ds
mov
out
mov
mov
dec
aas
mov
xlat
test
jl
dec
(bad)
popa
dec
sub
jmp
cmp
es
and
or
arpl
mov
scas
xor
push
dec
nop
test
ins
imul
shl
into
retf
mov
xor
ret
into
gs
mov
add
das
sub
int3
scas
dec
push
into
lea
pop
aaa
mov
outs
jne
outs
inc
aad
jmp
adc
ss
data16
cdq
stos
loopne
mov
mov
das
dec
in
cmp
mov
gs
test
aas
cmp
dec
pop
cmps
and
lods
fcmovne
fcmovb
movs
cmc
int3
push
or
aas
mov
mov
xor
mov
xor
adc
pusha
xchg
idiv
pop
fsub
sahf
adc
scas
push
xchg
inc
ss
leave
into
scas
lds
lods
ds
aad
mov
leave
and
(bad)
retf
ret
sbb
sbb
shl
into
xchg
(bad)
xchg
ins
inc
into
(bad)
fmul
lahf
jmp
pop
cmp
jb
ins
xchg
jmp
aaa
loopne
pop
into
imul
cmp
adc
retf
cwde
mov
ror
out
jo
stos
call
(bad)
cmp
xchg
daa
lahf
mov
adc
and
mov
popf
imul
lods
mov
test
das
mov
jbe
add
mov
pop
enter
inc
into
pop
push
push
jmp
xor
push
divps
mov
pop
jmp
nop
into
cli
xchg
je
retf
pop
into
jmp
or
cmp
push
div
mov
mov
dec
push
iret
xchg
xlat
mov
(bad)
not
shl
sub
inc
aaa
in
mov
dec
outs
outs
pop
std
lods
jno
and
sub
retf
out
xchg
xlat
jb
out
jge
or
leave
stos
add
ss
outs
retf
js
lea
pusha
dec
sub
mov
cmovb
ja
sub
mov
xchg
xchg
ins
push
xor
dec
mov
(bad)
cmp
jle
pop
inc
adc
into
jo
add
mov
sbb
sbb
into
mov
jb
sbb
jge
scas
cwde
out
push
pop
les
mov
cmp
pop
jnp
pop
pop
sub
and
cmp
xor
mov
out
pushf
ret
mov
outs
xchg
fwait
stc
in
(bad)
mov
push
xor
mov
xor
test
cwde
jo
push
push
cmc
or
psrlw
pop
(bad)
pop
inc
push
push
push
ss
not
test
xchg
cmps
xchg
cdq
mov
arpl
sub
push
out
(bad)
in
(bad)
xchg
test
je
pop
cmc
push
int
(bad)
cli
aad
aad
(bad)
mov
pop
pop
xchg
mov
dec
push
cmp
push
adc
mov
nop
xor
adc
xor
pop
xor
mov
xor
mov
sub
push
push
or
in
mov
std
push
cmc
daa
int
(bad)
rcl
scas
pushf
pop
adc
pop
cld
push
repnz
enter
aam
stos
fwait
scas
xor
mov
xor
xor
cmp
pop
push
push
or
push
fidiv
inc
mov
cmp
lock
jl
adc
sub
out
(bad)
xchg
xchg
xor
pop
int
test
push
sbb
mov
xchg
dec
xor
mov
xor
test
xchg
add
in
(bad)
mov
and
mov
nop
daa
cmp
adc
lahf
mov
inc
xchg
sbb
loop
mov
pop
sbb
jns
repnz
fist
push
shl
mov
cmp
mov
nop
pop
nop
sub
leave
nop
ret
nop
iret
mov
mov
dec
inc
sub
mov
lea
sbb
andnps
lods
xchg
xchg
mov
xor
xor
and
lock
xor
mov
xor
mov
xor
test
xchg
addr16
outs
mov
(bad)
mov
sbb
int
fild
jg
stos
lahf
mov
ret
sub
xor
push
sti
push
leave
push
fidiv
ds
xor
test
popf
je
sbb
pushf
jo
in
jl
inc
popa
aaa
and
sub
inc
mov
test
xchg
jns
jb
pop
dec
sub
call
xchg
sub
cmc
out
out
and
add
push
(bad)
mov
xchg
mov
jb
pop
xor
mov
xor
test
xchg
mov
pop
sub
xor
cld
(bad)
icebp
int
xchg
out
(bad)
stos
xchg
pop
mov
pop
jle
dec
push
and
ds
adc
loopne
int3
push
(bad)
mov
nop
mov
xor
jne
pop
mov
xor
xor
xor
xor
cmp
jmp
lahf
mov
test
sahf
mov
xor
cld
or
in
mov
cdq
in
(bad)
test
jb
or
push
adc
push
rcl
xchg
fwait
pop
sub
call
fs
add
movs
cwde
(bad)
in
std
js
rol
ficom
push
mov
xchg
and
jl
jo
fcom
mov
xor
mov
sub
sub
xchg
call
fmulp
fiadd
sub
nop
jb
sub
sar
outs
lods
inc
mov
std
jecxz
fld
pop
sbb
jge
and
cli
mov
push
out
mov
cdq
pop
popa
(bad)
sub
cwde
(bad)
aas
imul
das
mov
sar
iret
ds
out
cmp
or
sbb
ja
lds
nop
js
or
mov
xchg
jb
pop
xchg
loop
scas
sahf
inc
popa
and
adc
fdiv
ret
pushf
xchg
pop
std
cmp
in
mov
js
xchg
loop
mov
imul
sbb
shr
or
pop
mov
pop
push
ins
into
xchg
xor
popa
jae
or
jecxz
lds
pop
jno
add
mov
xchg
push
aas
mov
xchg
fs
or
pop
mov
fnstcw
(bad)
pusha
xchg
jne
loop
iret
xchg
movs
nop
pop
pop
add
(bad)
in
jo
inc
fwait
dec
mov
xor
xor
mov
xor
mov
sub
cmp
xor
idiv
cmps
repz
sbb
push
sti
sub
icebp
fcmovnb
fisubr
dec
retf
add
cmc
ficom
push
push
ret
mov
jnp
xor
xor
mov
sub
push
sbb
cld
sbb
in
jmp
ret
sbb
test
xchg
pop
retf
hlt
ret
mov
add
add
adc
jb
add
sbb
pop
dec
fldcw
aas
sub
cmp
lods
pop
inc
sahf
push
ins
cwde
and
and
mov
adc
xchg
inc
xchg
dec
nop
and
nop
seto
nop
ret
mov
or
mov
jmp
cdq
xchg
or
sbb
minps
xchg
or
inc
xchg
or
xchg
push
mov
add
dec
es
or
or
xchg
test
retf
jns
xchg
jmp
out
xchg
addr16
loop
mov
xchg
sahf
xchg
cwde
xchg
jle
dec
xchg
add
sti
sar
dec
data16
aaa
aad
aad
aad
fwait
jae
aaa
ja
pop
fisubr
(bad)
(bad)
not
scas
cmp
cwde
push
dec
push
pop
push
daa
push
and
gs
mov
xchg
cmp
pop
xchg
call
hlt
add
stos
in
arpl
sub
dec
cmp
in
cmps
cwde
mov
cmc
outs
int
lds
and
xor
add
(bad)
mov
fdiv
ins
test
xchg
imul
mov
push
xchg
cmp
cwde
xchg
js
scas
xchg
cdq
cmp
or
sbb
jmp
(bad)
outs
xchg
(bad)
retf
jmp
sub
xor
pop
pop
ds
xchg
arpl
xchg
inc
mov
mov
sub
popa
cmp
pop
call
iret
ins
mov
or
sbb
in
pop
inc
movs
outs
pop
add
test
outs
sbb
pop
fisubr
cmp
mov
pop
inc
and
cdq
and
push
idiv
cwde
aaa
lods
pop
imul
push
xor
push
lea
mov
push
ret
in
movs
xchg
mov
hlt
outs
xchg
stc
in
cld
or
(bad)
mov
retf
inc
mov
mov
sub
outs
lods
popf
jbe
dec
std
push
or
pushf
fiadd
mov
or
js
push
sub
xchg
fidivr
adc
aaa
push
mov
fstp
popa
pop
outs
por
xchg
loopne
daa
ret
imul
aaa
stos
popf
and
aaa
(bad)
pop
ret
call
pop
and
cmp
jecxz
lods
xchg
mov
call
scas
mov
(bad)
xchg
mov
jnp
cmp
popf
stos
scas
fisubr
mov
cmp
push
mov
adc
xchg
mov
xor
test
call
mov
std
and
cwde
sub
xchg
pop
xchg
bound
xchg
icebp
xchg
(bad)
into
xchg
lds
scas
out
jae
adc
mov
mov
xor
xchg
mov
jp
dec
scas
int3
call
and
ffree
stos
xchg
xchg
mov
xchg
retf
cmp
or
ins
movs
xchg
pop
cld
(bad)
xchg
pop
mov
jbe
ficom
push
xchg
xor
mov
mov
pop
addr16
jl
es
adc
mov
int3
mov
int
retf
in
(bad)
daa
cdq
mov
cwde
pop
cs
sub
(bad)
ss
mov
repnz
lods
xchg
xchg
nop
pop
inc
pop
pop
pop
or
or
xor
mov
(bad)
sbb
in
push
sahf
ficomp
lods
lock
test
and
repz
xchg
std
addr16
cmp
das
lds
fucom
xchg
lock
mov
pop
mov
sbb
sbb
xchg
dec
xchg
push
xchg
sub
pop
popa
sbb
shr
xchg
aam
stos
xchg
mov
jle
jae
scas
cli
sub
(bad)
mov
xchg
popf
mov
and
sbb
sub
xor
xchg
xchg
sub
idiv
pusha
cmps
mov
imul
push
and
jmp
(bad)
cli
jecxz
or
xor
popf
dec
mov
sbb
sbb
dec
or
cld
cli
(bad)
sub
xor
or
mov
in
std
adc
loopne
xor
jge
push
push
ss
or
retf
mov
cmp
mov
xchg
jmp
mov
push
test
push
cld
mov
and
nop
jo
xchg
xor
xor
mov
xor
sub
push
das
jg
xor
jnp
jg
int3
or
and
pusha
mov
sub
popf
cmp
fwait
inc
retf
in
aaa
test
call
xor
(bad)
js
dec
pop
adc
popa
xchg
cwde
push
and
xchg
cmp
inc
in
dec
cmp
std
cmp
cmp
or
jp
sbb
mov
xchg
inc
push
jmp
scas
xchg
or
popf
mov
pushf
adc
push
fcomp
retf
je
pop
jl
sbb
or
gs
rcr
mov
jbe
inc
push
push
push
cs
xchg
sahf
xor
xor
inc
xor
mov
xor
mov
outs
mov
std
sbb
loopne
mov
mov
push
and
(bad)
stc
movs
test
push
std
push
cmc
int
(bad)
xchg
mov
ret
fstp
dec
inc
xchg
add
in
(bad)
(bad)
outs
mov
xchg
scas
ja
xchg
ja
dec
xchg
xor
xchg
or
sub
retf
in
lods
popf
test
data16
pop
cmc
aas
int
xchg
pushf
imul
mov
mov
xchg
cmp
or
sbb
jmp
sti
fmulp
jmp
cwde
cmp
or
sbb
jmp
cld
retf
test
jl
xor
mov
pop
call
or
and
push
jmp
xchg
mov
sbb
xor
or
std
fdiv
(bad)
adc
mov
cmps
inc
cmp
sub
std
fcmovnbe
fisubr
dec
ret
cmp
lahf
cmp
adc
shl
je
dec
cmp
retf
jmp
fimul
je
sub
push
push
push
adc
pusha
frstor
and
mov
push
dec
inc
in
mov
pusha
in
dec
mov
sbb
fwait
jg
mov
ins
xchg
xchg
pop
adc
xor
cmp
lea
cmps
movs
lahf
test
xchg
push
push
push
xor
mov
cmp
mov
cwde
mov
xor
inc
jmp
push
fndisi(8087
(bad)
fcmovne
fsubr
pop
dec
gs
mov
int
aad
xchg
test
inc
mov
mov
out
xchg
aad
mov
jb
xor
xor
in
xor
xor
sub
js
sub
ficomp
(bad)
adc
sqrtps
mov
aas
jle
push
jmp
sti
add
sbb
mov
fs
pop
sti
and
repz
fisub
pop
cmpps
fimul
push
sar
shl
shr
lods
nop
cld
or
(bad)
push
or
call
mov
xchg
test
pushf
nop
fcom
bound
xor
shl
pushf
outs
cli
dec
int
lds
dec
gs
(bad)
shl
loop
xor
mov
sti
adc
jmp
(bad)
(bad)
mov
retf
jbe
in
shl
lds
out
mov
or
jl
push
sbb
mov
mov
cmp
dec
sar
mov
xor
push
pusha
pop
push
push
dec
repnz
lahf
mov
mov
mov
add
xor
sub
push
pop
xchg
xor
imul
inc
cmps
mov
out
stos
ss
xor
jecxz
adc
or
cmp
ss
jmp
rcl
rol
je
dec
and
cmp
sub
fstp
xlat
fimul
movs
mov
mov
(bad)
xchg
pusha
frstor
jp
cs
inc
xor
ret
cmp
and
cmp
sub
mov
sbb
in
push
push
add
push
cmc
gs
sub
mov
push
inc
push
pop
je
mov
jmp
xchg
movs
cmp
or
inc
cmps
jmp
iret
cmps
(bad)
loope
(bad)
dec
ret
loop
xor
out
loope
aad
iret
sub
dec
dec
and
cmp
in
das
imul
fsubr
sbb
in
and
mov
xor
xor
sub
js
jne
es
adc
(bad)
fcmovnb
fidiv
(bad)
jle
push
sbb
sbb
cmps
bound
mov
push
fs
pop
int
lds
xchg
xchg
nop
pause
int
mov
push
pop
int
lds
repz
test
pop
mov
jbe
cli
xchg
xor
stc
test
test
lods
xchg
sbb
jge
jmp
in
ja
mov
arpl
inc
push
ds
cmp
push
in
fldcw
mov
in
ds
jno
jmp
fist
jae
sbb
xchg
jbe
sub
cld
out
pop
mov
jb
out
push
xchg
sub
xor
(bad)
mov
push
push
push
push
add
push
push
icebp
jae
stos
mov
mov
cmp
pusha
or
ror
imul
aaa
adc
retf
pop
ret
loop
rcl
(bad)
mov
sub
mov
push
nop
xchg
cmps
das
stos
cmps
pop
aas
sbb
lahf
or
sbb
daa
xchg
aas
xchg
xor
push
std
in
imul
mov
jne
mov
jmp
jmp
pop
int
shl
mov
dec
xchg
cmp
cwde
and
dec
(bad)
and
sbb
lock
pop
mov
xchg
or
out
rcr
pop
mov
call
mov
jecxz
(bad)
jnp
xchg
jnp
pop
or
(bad)
fisttp
xchg
jnp
jae
pop
ret
mov
xor
mov
and
ds
pop
lods
shld
sub
sahf
mov
sub
(bad)
jns
test
shl
sbb
pop
mov
xor
gs
stos
paddusb
movs
pop
retf
sbb
out
cmp
mov
sub
dec
shl
pop
cwde
lods
in
cmp
mov
cmp
lods
xchg
and
or
xor
inc
int
adc
mov
and
mov
cld
fsubrp
movs
arpl
out
cmps
mov
jns
jmp
popa
out
das
in
wrmsr
cli
mov
cmp
sub
aas
sbb
out
gs
mov
mov
sub
lods
int
mov
add
mov
or
add
xchg
sbb
cmps
lods
fwait
mov
mov
sub
call
cmc
inc
jns
mov
and
aaa
ret
repz
push
xchg
sub
loop
xchg
scas
xchg
iret
mov
adc
xchg
sbb
inc
xchg
pop
xchg
loop
lock
scas
mov
and
(bad)
sbb
stos
inc
push
pop
jge
push
and
cmc
cmp
jmp
pop
cmp
or
sbb
in
sbb
mov
xor
pop
xor
not
cmps
xchg
xchg
mov
test
push
std
push
icebp
push
fcom
mov
nop
inc
xor
pop
(bad)
cmc
xor
lahf
test
mov
rol
sbb
mov
xor
sbb
setge
xor
mov
data16
xchg
in
out
add
das
inc
or
and
mov
call
pop
je
lock
sub
stos
pop
and
fiadd
cmp
fidivr
idiv
dec
stos
xchg
pop
push
bound
push
fnstenv
jp
cmp
retf
outs
or
mov
(bad)
sub
jo
mov
sub
retf
cmp
nop
outs
cmp
or
sbb
in
icebp
ds
mov
xor
mov
mov
xor
mov
retf
stos
xchg
sub
cld
scas
push
aam
lahf
jno
mov
mov
popa
mov
pushf
jbe
das
mov
dec
adc
adc
cmp
fidiv
es
xchg
mov
dec
(bad)
push
ret
stc
fidiv
cli
js
mov
mov
sbb
dec
fiadd
jae
pop
mov
push
hlt
aaa
(bad)
pop
jle
aaa
sub
push
mov
lahf
jmp
and
in
sbb
xchg
jns
dec
push
cmp
mov
xor
pushf
in
bound
push
loope
call
in
mov
nop
or
fsubp
mov
repnz
pop
xchg
mul
es
xchg
xchg
cmp
fidivr
fwait
bound
or
clc
push
in
std
mov
sbb
movsx
in
sub
ret
mov
adc
sub
and
popa
in
arpl
pop
jb
inc
push
pop
and
imul
dec
movs
stos
xchg
adc
das
mov
cmp
test
fs
sub
push
int
xchg
pop
jns
dec
sub
xor
pop
repz
aam
inc
jbe
dec
xchg
sbb
hlt
mov
fwait
sub
xor
sub
adc
cmp
and
dec
add
pop
icebp
mov
pushf
jne
push
sub
jecxz
std
jno
outs
stos
fwait
mov
cmc
jae
mov
add
or
(bad)
lods
call
xor
test
jo
rdtsc
int3
mov
sub
in
mov
outs
pop
jmp
loopne
pop
movs
outs
xchg
cmp
dec
data16
int
out
mov
xchg
mov
int
lds
dec
push
adc
test
ror
xchg
mov
mov
cmp
xor
mov
gs
fistp
pop
dec
je
cmps
or
xor
or
push
fbstp
add
imul
lahf
mov
mul
cmc
pop
mov
dec
das
enter
rol
cmp
js
fwait
gs
jmp
mov
outs
stos
fst
add
lds
psubb
iret
(bad)
pop
xchg
jnp
adc
cmp
mov
or
mov
jnp
daa
loop
cli
rcl
add
sbb
sub
cmp
mov
and
jne
loopne
movs
pop
push
pop
cs
ficom
mov
popf
sub
fld
pushf
pop
cmp
fwait
outs
sub
neg
imul
arpl
jg
jo
mov
outs
pop
sahf
sbb
jo
push
stos
adc
fisub
(bad)
push
mov
mov
sub
add
or
sub
push
or
xor
lods
mov
push
push
shl
imul
test
add
dec
enter
mov
dec
arpl
sub
mov
sbb
xlat
xchg
(bad)
mov
int
fcmovnu
test
xchg
in
inc
and
aas
adc
cmp
pop
test
xor
jmp
dec
jmp
cld
or
mov
sub
bound
(bad)
out
adc
xor
rcr
sbb
push
and
mov
xchg
mov
push
in
push
loope
mov
mov
sbb
push
inc
fmul
ror
jae
mov
mov
sub
daa
pop
xorps
mov
pop
ss
jnp
(bad)
mov
pop
test
in
loop
sub
mov
mov
scas
jg
xchg
fwait
adc
mov
mov
neg
mov
popf
std
jns
mov
es
int
out
aad
xchg
cmps
(bad)
lahf
pop
adc
push
cmp
push
add
jnp
fmul
cmp
or
repnz
mov
xor
in
mov
test
test
jbe
repnz
xor
pop
mov
arpl
xor
mov
sub
(bad)
rcl
xor
cli
int
xchg
mov
mov
jno
jl
and
aaa
test
out
cld
cmp
mov
mov
pusha
fucompp
(bad)
(bad)
jmp
xchg
mov
mov
fsubr
jnp
mov
push
scas
bound
mov
cdq
sub
mov
(bad)
push
gs
inc
add
cmp
data16
xor
xchg
ja
mov
sub
push
pop
pop
cmp
test
retf
scas
outs
mov
dec
and
test
jg
imul
adc
sub
or
call
nop
aam
scas
sahf
mov
and
dec
mov
(bad)
retf
popf
gs
xchg
xchg
cmp
push
ds
in
and
(bad)
cs
mov
retf
sub
in
test
cmp
sbb
ret
xchg
inc
cmps
add
je
jmp
xor
jmp
cld
mov
fs
das
cmc
add
gs
push
movs
xchg
loop
test
out
mov
pop
jae
mov
xchg
inc
adc
xchg
popa
pop
adc
xchg
lahf
dec
fmul
xchg
sub
lock
fisubr
cmp
inc
cmp
les
inc
mov
(bad)
outs
mov
fidivr
pushf
pop
xchg
push
cmp
mov
jmp
xor
push
das
jg
mov
cmc
ds
lds
scas
pusha
test
push
push
out
xchg
pop
mov
xchg
push
and
jmp
iret
fidiv
cmp
mov
mov
cmp
push
xchg
lahf
sbb
add
sbb
cs
mov
mov
push
fwait
int3
add
test
shr
mov
mov
and
sub
sbb
lock
or
inc
int
ins
cmp
test
mov
ds
xor
maxps
retf
push
pop
mov
mov
fidivr
jmp
mov
fdivr
pop
retf
mov
push
add
jmp
movs
cmp
retf
cdq
cmps
cmp
push
sub
call
stos
dec
jle
adc
cmp
lods
sbb
ficomp
mov
in
ins
dec
or
bound
xor
out
outs
mov
xchg
xchg
push
sub
or
rol
rcl
shl
stos
sbb
les
mov
in
inc
xchg
pop
xchg
aaa
xchg
or
repz
nop
lea
pop
idiv
dec
outs
lahf
inc
jge
int
dec
mov
(bad)
outs
ret
retf
cmps
ja
mov
dec
dec
int3
pop
xchg
cmps
inc
out
inc
aas
inc
pop
test
fwait
inc
xor
pop
(bad)
fidivr
mov
mov
rcl
sar
repnz
cmp
(bad)
aad
and
pop
adc
cmp
dec
popa
or
nop
sahf
sbb
mov
mov
cmp
shl
pusha
dec
adc
cmps
shl
or
das
(bad)
v4fnmaddss
ret
stos
and
inc
out
adc
lea
std
inc
test
pop
add
scas
mov
cmp
inc
cmp
mov
cmp
xchg
sbb
push
ret
mov
dec
xchg
fidiv
xor
(bad)
popa
push
jmp
(bad)
imul
mov
sub
and
xor
(bad)
in
std
push
adc
outs
scas
push
test
add
outs
stc
or
sub
call
jg
popf
xchg
jle
je
out
lds
and
outs
adc
adc
enter
call
xchg
sub
and
mov
cmp
xchg
mov
xchg
cmp
pop
pop
popa
push
cmps
inc
push
push
fdiv
mov
xchg
pop
xor
mov
ins
xchg
stos
out
fs
fcom
inc
mov
jno
in
and
pop
cmps
popf
mov
(bad)
mov
xor
mov
cmp
pop
xchg
je
rcpps
cmp
push
cmps
cdq
mov
push
dec
jne
fsubp
ficomp
xchg
mov
mov
fisubr
xchg
jbe
xchg
in
lods
bswap
in
mov
adc
aaa
out
fcmovb
shl
adc
fidiv
and
and
inc
fwait
xchg
pop
mov
pop
neg
int
test
addr16
ds
and
xchg
mov
ds
in
aad
mov
jno
inc
gs
es
(bad)
out
mov
in
std
hlt
cmc
ror
adc
mov
mov
fisub
cmp
cmp
(bad)
popf
push
(bad)
gs
mov
bnd
(bad)
popa
cmp
aaa
fdiv
jp
sbb
(bad)
ja
inc
div
push
adc
push
icebp
jb
mov
ret
cmps
mov
push
pop
fdivr
test
mov
cmp
ret
mov
cmc
push
xchg
fimul
push
mov
idiv
jb
xchg
mov
stos
fimul
test
adc
retf
cld
ins
jp
hlt
pop
(bad)
jbe
pop
movs
mov
sub
lods
mov
out
mov
jo
jmp
push
in
test
mov
or
out
mov
scas
popa
mov
push
jecxz
retf
inc
pop
jnp
out
fstp
movs
sbb
jo
loop
sub
out
cld
pop
sub
cmps
xchg
aaa
pop
xor
pop
idiv
call
in
test
add
mov
cmp
pusha
and
sub
in
fmul
div
pushf
daa
js
push
sub
sbb
in
pop
scas
mov
sub
pusha
adc
out
mov
xor
mov
mov
and
sbb
dec
aad
(bad)
outs
add
push
adc
add
(bad)
(bad)
movs
xchg
pop
mov
dec
sbb
nop
out
nop
les
jp
and
fstcw
stos
adc
mov
fwait
xor
cmp
(bad)
outs
mov
or
mov
scas
fbld
ret
lea
mov
mov
int
xor
mov
retf
stos
(bad)
std
pop
xor
xchg
arpl
push
movs
jg
int3
cmps
cmovae
cmp
mov
lods
out
dec
pop
xor
mov
(bad)
xor
retf
imul
pop
sbb
lock
mov
bnd
jo
sub
add
jg
mov
test
sub
add
pop
jmp
je
(bad)
hlt
shl
xchg
pop
out
out
ret
sub
or
and
(bad)
jnp
push
ret
sbb
clc
aad
fcmovu
fst
aad
and
sbb
das
xchg
test
ret
mov
inc
sub
(bad)
jmp
(bad)
test
xor
fdivp
mov
hlt
mov
(bad)
xor
mov
cmp
mov
repnz
xor
xchg
adc
fbstp
popf
mov
(bad)
adc
in
mov
ror
xchg
jno
in
cmp
clc
pop
push
movs
mov
cmp
add
or
repnz
loop
std
pop
rol
cmp
test
ds
sbb
aaa
or
movs
mov
xchg
out
loope
gs
shr
pop
arpl
ja
xor
mov
sbb
cdq
cmp
and
mov
ins
fucomp
lods
(bad)
adc
test
scas
cmp
mov
cmp
in
in
sbb
cmp
aad
mov
xchg
mov
in
in
fxch
jg
movs
clc
in
in
pop
retf
xchg
sbb
mov
popf
jecxz
outs
dec
xor
stos
outs
(bad)
dec
test
test
xchg
mov
cmp
ins
push
das
mov
in
daa
test
dec
std
inc
cmc
push
int
lds
(bad)
aad
(bad)
mov
outs
sbb
(bad)
push
lea
mov
cmps
adc
add
mov
(bad)
pcmpeqd
pop
mov
out
aad
aad
mov
or
pop
sub
mov
test
jnp
push
aaa
push
jno
dec
stos
mov
pop
jbe
push
mov
lods
nop
int3
or
cmc
les
mov
cmc
sbb
hlt
test
pop
and
jb
dec
sbb
cli
in
mov
adc
xchg
pushf
xchg
cli
sub
xchg
nop
cmp
div
sub
pop
scas
pop
xchg
jnp
repnz
(bad)
cmp
add
mov
mov
or
mov
adc
outs
std
out
mov
jae
inc
out
push
and
inc
sub
push
fistp
(bad)
in
xchg
push
lock
dec
inc
pop
cmp
add
or
pop
jg
mov
pop
dec
jecxz
mov
not
out
aaa
xchg
pusha
sbb
or
mov
inc
mov
lea
popa
push
and
jmp
xchg
scas
cmp
or
pop
adc
gs
pop
lods
shl
xchg
dec
mov
jae
loopne
push
sbb
scas
mov
popf
mov
pop
fisub
fimul
(bad)
sbb
sbb
xchg
loopne
int3
stos
mov
sbb
popf
test
lds
cdq
pop
push
scas
sub
cwde
das
sbb
pop
(bad)
dec
adc
(bad)
loope
cld
mov
sub
sub
aaa
add
sub
fdivrp
stos
adc
fmul
jge
ret
pop
push
cmp
test
cmp
pop
(bad)
push
(bad)
push
sbb
mov
repnz
mov
cmp
sbb
test
call
in
cmps
sub
cmp
fisubr
fs
movs
dec
sub
jmp
out
push
cld
das
int3
inc
aam
fwait
test
ret
aad
mov
add
ins
mov
or
sbb
aam
cdq
int
inc
push
mov
mov
push
xchg
cmps
lahf
repz
pop
cwde
in
xchg
xchg
xor
pop
addr16
sar
test
mov
jg
xchg
adc
retf
cmp
jb
pop
mov
mov
int
pop
add
test
pop
dec
push
sub
(bad)
mov
lock
out
call
shl
or
in
pusha
loope
sar
mov
daa
inc
xchg
jmp
popa
jp
popa
push
sbb
in
mov
cmps
(bad)
adc
aam
mov
mov
mov
and
enter
stos
mov
pop
das
push
pop
jbe
mov
gs
add
push
int
ror
jno
pop
les
das
xor
cmp
in
xor
adc
popf
(bad)
jmp
(bad)
dec
xor
cmp
test
and
xchg
push
adc
in
xchg
mov
int
mov
(bad)
cmp
aam
mov
jg
daa
shr
out
sub
sub
loop
cmps
mov
stos
cmp
jnp
dec
push
iret
mov
mov
call
pushf
jl
ror
xchg
and
adc
mov
push
ja
push
mul
dec
pop
mov
adc
mov
jno
mov
or
mov
(bad)
jecxz
ja
mov
sub
push
cmc
out
int
jl
inc
or
push
mov
add
cmp
and
scas
(bad)
popa
shl
or
sti
lods
scas
nop
add
cmc
push
inc
imul
fiadd
push
cmp
mov
sub
mov
fs
or
out
das
scas
adc
sar
xchg
cdq
ja
mov
aaa
xor
(bad)
jmp
fldcw
ja
es
ret
cmp
sbb
movs
imul
or
and
(bad)
dec
ret
stos
mov
dec
dec
cmc
and
adc
fsubrp
push
repnz
movs
inc
jns
cmp
fs
out
dec
(bad)
mov
add
or
push
cmps
jg
pop
push
inc
mov
call
sbb
mov
mov
cli
lods
or
mov
cmps
adc
mov
or
movs
jb
sub
ja
movs
xchg
pushf
data16
pop
and
mov
lock
das
push
shl
sub
std
and
mov
in
js
mov
popf
pop
xor
inc
mov
push
mov
(bad)
shl
ror
inc
mov
adc
xor
adc
dec
ror
push
pop
add
add
xchg
jno
in
xor
mov
jae
xchg
cld
adc
loop
lea
jg
or
fisubr
pop
xchg
outs
xchg
clc
jae
xchg
int3
movs
inc
fwait
shl
arpl
sub
cmp
mov
mov
out
hlt
std
mov
xchg
mov
aas
test
das
imul
dec
sbb
repnz
in
pop
or
cmp
mov
sub
jo
jne
xor
pop
shl
jno
sub
pop
lea
addr16
xchg
or
ja
mov
pushf
jmp
jns
cld
mov
add
lahf
mov
sub
mov
aas
adc
test
inc
nop
jge
and
sbb
pop
xchg
fld
(bad)
les
loope
xchg
mov
mov
(bad)
push
int
mov
out
lea
pushf
outs
cmps
(bad)
xchg
xor
mov
in
mov
cld
dec
mov
sub
retf
or
fisubr
mov
outs
cli
cmp
loop
popa
cli
icebp
and
stos
cbw
or
jne
imul
imul
add
pop
(bad)
and
dec
fs
das
les
push
mov
int3
out
packsswb
mov
xchg
icebp
mov
jb
fsub
ja
fs
arpl
sub
dec
fisubr
pop
xchg
xchg
shl
xchg
fs
imul
push
adc
in
movs
loop
addr16
jne
mov
les
or
outs
mov
sub
call
imul
dec
pop
xchg
mov
dec
int
and
xchg
pop
add
stos
and
xchg
adc
mov
(bad)
pushf
pop
(bad)
gs
xorps
call
ret
shl
mov
mov
jb
outs
or
xor
mov
fs
jg
test
push
aas
data16
mov
loop
inc
mov
push
(bad)
out
out
xchg
aad
and
mov
pop
jne
jae
outs
movs
shl
dec
test
stos
mov
ins
ret
inc
stos
lods
cmp
les
xor
cmp
fwait
int3
call
mov
pop
dec
pop
sub
inc
push
mov
aas
pop
scas
lea
xchg
call
fistp
mov
inc
sbb
(bad)
(bad)
xchg
fstp
sub
pop
ja
gs
movs
sbb
lahf
dec
imul
out
outs
or
lds
inc
lods
retf
das
ror
mov
call
jbe
jl
jo
sub
pop
sbb
inc
mov
fsubr
in
ficomp
(bad)
mov
mov
les
shl
fs
in
jg
xchg
fdiv
inc
lods
push
popa
cmp
sub
xchg
aad
jnp
sub
mov
stos
retf
jge
sub
cdq
cli
sbb
and
(bad)
stos
mov
cmp
(bad)
(bad)
lds
mov
mov
nop
mov
scas
nop
pushf
nop
dec
mov
fwait
xor
inc
cmp
sub
or
ja
mov
(bad)
mov
aas
cmp
mov
out
pop
xor
xor
cmp
cmp
shl
push
popa
pop
pop
cmp
shr
cmp
fimul
inc
pop
or
mov
adc
in
push
cmps
leave
jg
mov
fidivr
fdivrp
sbb
sbb
pop
push
inc
cmps
mov
test
fidiv
outs
cmps
loop
sub
lahf
mov
sub
cli
sub
or
pop
push
or
inc
ret
mov
xchg
pop
or
into
stos
fwait
push
cdq
add
lock
cwde
stos
cmp
pop
rcl
push
mov
dec
pop
sub
imul
xchg
not
sbb
loopne
movs
ret
cmps
movs
xor
mov
ins
xchg
in
gs
movs
inc
lahf
int
xchg
push
jmp
sub
jl
pop
pop
sub
out
xchg
sub
or
sbb
pop
nop
sti
nop
retf
dec
(bad)
mov
clc
arpl
test
sbb
cld
jmp
mov
pop
push
mov
xchg
jmp
scas
xchg
jne
mov
xchg
fmul
mov
dec
cs
mov
add
cli
hlt
mov
gs
sbb
mov
mov
pop
into
push
adc
jae
xchg
das
repnz
out
arpl
add
ja
sub
(bad)
jns
inc
sub
push
fcom
lea
aas
dec
sbb
mov
xchg
(bad)
fwait
xchg
popa
push
cmp
push
ficomp
sub
mov
and
outs
xchg
push
xchg
push
xchg
push
mov
cmp
adc
fdivrp
cmp
out
cmp
stos
cmp
mov
dec
pushf
add
stos
call
ret
fimul
shr
es
scas
cli
jmp
das
sbb
mov
mov
pop
jecxz
dec
push
pop
ins
je
sub
jne
movs
and
outs
ds
add
(bad)
mov
fwait
mov
lea
sub
or
fdivr
stos
mov
cli
(bad)
xor
ror
pop
cmovae
cmp
inc
mov
xor
lahf
ficomp
xor
data16
mov
push
dec
jnp
mov
mov
jns
(bad)
or
pop
xor
shl
jmp
inc
dec
das
out
sti
(bad)
fstp
stos
inc
mov
les
pop
dec
push
pop
push
outs
xor
int
cld
aad
push
mov
rcl
push
ficom
and
cmps
sbb
retf
fwait
sub
movs
adc
movs
sub
retf
mov
mov
daa
ins
sahf
pusha
jbe
loopne
js
ja
das
xor
sbb
(bad)
div
push
aaa
xchg
sbb
in
loopne
push
mov
cs
stos
add
dec
lahf
push
(bad)
outs
pop
fadd
sub
es
faddp
ja
sbb
or
mov
inc
fisubr
jo
cmps
fwait
add
dec
fadd
mov
fdivr
jmp
sub
data16
dec
mov
js
loopne
push
ja
shr
dec
rol
inc
sbb
in
pop
shl
repnz
mov
xor
mov
mov
or
ja
and
pop
sub
mov
adc
mov
aam
add
mov
fnstsw
call
jl
stos
add
adc
xchg
cmps
or
hlt
push
or
cmps
jno
(bad)
sub
jmp
inc
fadd
cs
lods
xchg
mov
cmp
dec
clc
mov
xchg
jo
mov
(bad)
movs
fs
cmps
mov
int
(bad)
xchg
mov
loopne
in
movs
sub
adc
aad
aam
cmp
lods
(bad)
int
addr16
sahf
mov
jne
xor
xchg
test
outs
jns
sbb
inc
mov
xchg
mov
scas
xchg
mov
adc
xchg
mov
(bad)
shr
addr16
xchg
push
ficomp
adc
jmp
xor
das
(bad)
xor
sbb
and
adc
mov
or
in
xchg
ficom
mov
cdq
(bad)
retf
ds
adc
lock
cdq
and
inc
stos
xchg
test
adc
lods
xchg
mov
mov
daa
xchg
xor
test
fs
lods
or
pop
inc
xchg
mov
dec
jae
cmp
jg
push
jae
repnz
je
mov
std
shl
or
ficomp
sub
jecxz
mov
jo
mov
in
sub
mov
pop
fwait
mov
adc
mov
cmp
jns
jb
int3
inc
aad
pop
gs
adc
xor
les
popa
inc
xchg
pop
lds
jl
mov
xchg
in
lods
add
stos
inc
ds
add
retf
(bad)
jns
fwait
push
in
out
out
and
ret
aad
inc
mov
popa
mov
mov
xchg
or
das
arpl
imul
hlt
dec
cmp
inc
in
jno
inc
arpl
xor
cmp
ja
or
and
imul
cmp
push
out
aad
and
aam
iret
adc
mov
mov
push
mov
push
ins
jo
sub
jl
jne
stos
imul
inc
xor
mov
jecxz
mov
or
cmps
jnp
mov
inc
ret
mov
test
ret
retf
jge
jg
aas
adc
sub
jno
sub
lahf
fistp
fsubr
cli
push
jle
jns
test
gs
out
aaa
pop
adc
stos
mov
fidiv
cmp
stos
sub
pop
movs
add
(bad)
adc
jmp
out
loope
shl
shr
cmp
fprem
sub
mov
dec
pusha
mov
sbb
cmps
mov
sub
xchg
cmps
mov
cmp
out
scas
sbb
(bad)
adc
pop
pushf
xor
call
cmp
sub
cs
xchg
loope
sub
mov
cli
jnp
push
add
cld
sub
daa
pop
pop
addr16
aaa
fs
jno
cmp
mov
outs
xchg
and
in
sbb
stos
(bad)
cmps
sub
clc
cmps
aaa
fldln2
popa
mov
das
std
jmp
xorps
call
or
adc
pop
mov
jmp
xchg
jle
ss
repnz
or
dec
push
mov
adc
xor
sbb
pop
in
(bad)
stos
xor
mov
std
inc
mov
sbb
icebp
pop
and
mov
jg
sub
mov
push
sub
fistp
mov
lea
xor
xor
cld
push
shl
sub
std
or
xchg
fs
xchg
jp
xor
stos
dec
out
sbb
cmp
(bad)
push
xchg
jae
push
mov
stos
imul
dec
pop
mov
ins
(bad)
jne
fwait
mov
push
in
stos
mov
lahf
cmp
aaa
sbb
jmp
pop
jg
aas
call
jmp
les
jg
push
retf
sub
(bad)
(bad)
sub
rol
test
stos
mov
adc
xchg
mov
mov
scas
gs
enter
mov
(bad)
jg
jnp
dec
mov
out
push
dec
arpl
and
xchg
pop
retf
push
aaa
jae
lea
or
jno
enter
xchg
arpl
mov
faddp
sbb
shl
jp
xor
mov
cmp
cmp
mov
(bad)
ficom
je
jmp
(bad)
fiadd
mov
dec
cmp
in
sbb
out
ja
dec
fimul
jg
fadd
in
and
mov
xchg
mov
mov
es
int3
test
fsubr
cmp
dec
cmp
in
add
hlt
xchg
push
inc
mov
cmps
ja
mov
jmp
add
pushf
fidivr
sub
mov
mov
mov
cmps
jae
xchg
loope
cmp
fidivr
mov
(bad)
hlt
mov
jnp
daa
mov
int
out
in
fdivrp
js
fdiv
shl
mov
inc
popa
in
das
sahf
jmp
adc
mov
xor
push
cmp
adc
push
into
mov
sbb
pop
std
xor
pop
jb
addr16
jmp
in
arpl
aad
aad
push
push
mov
ja
popa
(bad)
out
pop
and
cmp
fdivp
fadd
sbb
cmp
mov
stos
dec
mov
cmp
jb
(bad)
ficomp
xchg
mov
xchg
call
and
mov
push
std
xchg
call
mov
stos
out
bound
dec
sbb
mov
pop
mov
outs
dec
pop
inc
push
xchg
cwde
mov
cld
xchg
xchg
jg
imul
adc
clc
jg
pop
pop
rcl
pop
jne
sub
mov
das
fidiv
cmp
call
pop
idiv
pop
ror
icebp
and
xchg
pop
mov
sub
and
mov
int
xor
mov
int3
adc
pop
aad
aad
fwait
push
rdtsc
call
nop
iret
mov
nop
ror
stos
in
push
mov
ins
mov
mov
sub
mov
ror
aas
xchg
push
adc
mov
pusha
jl
addr16
mov
jg
push
cmps
jbe
loop
adc
inc
int
lea
pop
pusha
jmp
jb
cs
add
xor
ins
out
out
mov
out
or
jne
stos
inc
cmp
in
call
xchg
xor
into
aas
les
mov
mov
arpl
sbb
mov
jmp
adc
in
dec
sbb
jle
into
jg
cwde
dec
xchg
add
pop
lahf
mov
test
jo
scas
mov
lahf
inc
sbb
mov
adc
or
add
mov
ss
cmp
and
pushf
adc
aam
ins
in
daa
mov
ret
test
or
dec
cmp
daa
or
das
add
add
mov
sbb
nop
mov
mov
out
inc
mov
es
fsub
ins
mov
in
add
mov
jg
sub
and
or
sti
inc
in
in
ins
pop
fwait
inc
fdiv
pop
xchg
mov
mov
outs
fisub
pop
outs
ins
xchg
xor
push
sti
pop
jno
cmp
imul
lahf
inc
sub
test
xchg
dec
jne
and
leave
or
int
jbe
out
sbb
or
pop
scas
and
mov
cmp
sti
xchg
pusha
sub
mov
ins
xor
test
aas
es
fwait
mov
sbb
into
mov
jnp
pop
out
cmp
pop
pop
fwait
sbb
lods
mov
xor
les
pop
pop
rcr
push
cmp
fimul
sbb
cmp
test
iret
cmps
loop
pop
xchg
fs
pop
mov
lds
std
(bad)
(bad)
inc
mov
mov
pop
mov
xchg
loop
mov
cmp
inc
sub
ja
or
vorps
jnp
pop
jbe
sub
and
jge
icebp
or
ins
mov
pop
out
jg
inc
popf
mov
jnp
sbb
out
jno
ret
retf
add
pop
xchg
jb
xor
fcmovbe
cdq
mov
outs
sbb
sbb
pop
daa
pmuludq
in
lea
mov
stos
nop
mov
(bad)
outs
and
lahf
cmps
adc
inc
fisubr
in
cmps
fiadd
daa
mov
cmp
xchg
mov
leave
ja
fwait
shl
fs
ins
jno
cdq
jbe
mov
push
mov
in
jbe
push
fisub
push
retf
xchg
sub
inc
addr16
outs
sbb
mov
jl
push
sub
pop
dec
and
lahf
mov
js
mov
jae
cmp
pushf
pop
inc
arpl
ror
rol
cdq
ins
(bad)
cmp
sub
das
ja
mov
movs
dec
pop
mov
fs
jae
mov
sbb
pop
in
mov
pop
shl
sti
popf
jbe
mov
daa
enter
sub
test
fwait
and
and
aaa
xchg
cmp
or
sub
dec
sub
out
jns
movs
xchg
push
xchg
cdq
data16
cmp
aaa
sti
mov
sahf
sti
cdq
push
sbb
mov
xlat
push
cmp
dec
aad
aad
push
cmps
pop
mov
mov
in
in
pop
mov
cmps
xchg
sahf
repz
xchg
mov
mov
loop
ret
sub
in
jmp
cmc
stos
xchg
mov
test
imul
xchg
push
sbb
push
ficom
mov
sbb
push
repnz
sub
jbe
in
neg
jbe
jne
das
int
cld
push
setg
lods
mov
int3
xchg
leave
test
sti
imul
push
test
test
out
mov
xor
retf
pop
hlt
aaa
mov
imul
clc
xchg
mov
retf
rcr
ins
ins
popf
pushf
scas
pop
lods
fistp
rcr
(bad)
hlt
cdq
mov
inc
cs
int
stos
push
xchg
ja
sbb
sahf
jb
enter
mov
retf
movs
push
xor
or
cmp
sbb
cmps
fwait
adc
cmps
pusha
jmp
mov
mov
push
adc
cdq
cld
push
in
jnp
jb
fidivr
ja
test
lds
inc
xchg
in
push
pop
mov
cmp
out
test
aas
jae
lahf
jno
sub
je
in
(bad)
popf
scas
inc
mov
mov
pop
xchg
mov
test
iret
mov
ins
jo
or
or
ret
imul
jns
xchg
mov
jle
stos
daa
lahf
in
pop
enter
mov
cli
pop
mov
fcomp
xchg
test
xchg
clc
mov
xchg
aam
mov
repnz
dec
es
xchg
sub
sbb
lea
xchg
mov
scas
pop
xor
push
int3
or
imul
arpl
mov
das
cmp
xchg
call
lahf
jns
mov
dec
sbb
mov
aaa
dec
mov
into
cmp
adc
push
cmps
lods
fwait
mov
xchg
out
test
inc
sbb
addr16
mov
es
pushf
mov
clc
mov
cmp
fdivrp
fstp
test
inc
sub
mov
add
(bad)
test
out
imul
ror
int3
adc
jno
mov
dec
int3
scas
mov
stos
mov
aas
arpl
mov
mov
outs
add
mov
aas
popf
bts
lods
fwait
es
stc
mov
push
xchg
outs
mov
cld
pop
test
jecxz
cli
jg
add
jg
or
sub
retf
outs
lahf
je
pop
jmp
dec
out
xchg
push
ja
lods
lahf
mov
pop
aaa
fmul
ja
idiv
pushf
fild
mov
xchg
(bad)
xor
xchg
je
xchg
sahf
out
mov
mov
int3
pop
(bad)
jno
sub
mov
xchg
pusha
(bad)
cmc
cmp
xchg
mov
in
add
cmps
popf
fcom
idiv
xor
call
mov
movs
pop
pop
or
mov
shr
and
(bad)
imul
ins
pop
lahf
jmp
nop
cmps
ror
ret
sbb
popa
and
(bad)
sub
sub
push
fld
jnp
mov
and
push
out
stos
cmp
neg
fcmove
(bad)
cmps
jle
test
ins
jp
sbb
sub
pusha
xchg
leave
ins
sub
call
xor
sub
inc
add
imul
cmp
fcomp
pop
jle
inc
je
cmps
out
push
(bad)
push
je
lods
cmps
mov
pop
sub
lahf
xchg
push
nop
push
cmp
shr
data16
adc
pop
pop
les
cmp
mov
jno
mov
cmp
cmp
sbb
xchg
add
cmp
sub
push
ret
mov
int3
add
in
in
stos
nop
mov
cmp
jmp
sub
mov
mov
adc
out
or
outs
dec
inc
sub
mov
stc
(bad)
mov
jbe
sub
inc
int3
cs
fs
xor
cmp
mov
xor
mov
xchg
mov
arpl
pop
cmp
jns
aad
inc
ror
xchg
jg
jmp
cli
fcomi
fdiv
jg
jbe
pop
nop
ret
test
(bad)
(bad)
rol
test
stos
mov
sub
pop
dec
pop
mov
lahf
jmp
loop
popf
sti
pushf
mov
clc
out
sbb
cmp
ja
into
clc
mov
mov
jg
popa
mov
mov
add
neg
pusha
mov
pop
push
adc
mov
popf
test
mov
xor
xor
cmp
add
test
test
in
jne
inc
(bad)
xchg
adc
das
sbb
aaa
pop
xor
retf
inc
sub
mov
push
jne
cmp
adc
lea
ret
scas
cmps
push
mov
push
into
imul
fwait
dec
xor
das
xchg
call
in
test
mov
fcmovb
mov
jle
imul
data16
xchg
mov
dec
das
cmp
fidivr
cmc
cmp
je
psubb
pusha
retf
ins
xchg
cs
push
mov
xchg
xchg
cmp
jno
and
lea
shr
outs
and
(bad)
arpl
jne
lods
test
push
xchg
out
loopne
(bad)
inc
mov
ins
mov
cmps
std
mov
mov
inc
and
lea
mov
cdq
repnz
popa
int3
clc
es
mov
aad
add
push
ja
nop
mov
cmps
sbb
xchg
cwde
cmp
or
mov
sub
dec
sub
mov
in
test
jae
dec
xchg
cmp
aad
and
nop
ret
dec
xchg
aas
xchg
aad
stos
lods
lahf
xor
cmps
xchg
jb
mov
jle
fwait
mov
pusha
xor
xchg
pop
mov
lea
pusha
jmp
xchg
imul
arpl
enter
mov
xor
shl
cmp
mov
or
fsub
ret
cmps
jne
push
xor
xchg
cmps
adc
jae
mov
adc
mov
ins
rol
jmp
dec
adc
in
jmp
pop
out
outs
mov
cmps
mov
(bad)
mov
loop
mov
out
shl
and
popa
adc
(bad)
push
cld
xor
mov
mov
jae
cmps
xchg
cmps
or
sahf
pop
cmp
push
pushf
fist
xchg
adc
jge
in
inc
cmps
mul
mov
xchg
imul
pop
div
push
adc
jg
pop
les
sub
cmp
out
mov
or
repnz
enter
mov
mov
mov
retf
cmp
xchg
ficom
sbb
stos
outs
push
mov
ret
xchg
jae
jge
jno
push
xchg
or
mov
sar
mov
movs
lahf
scas
adc
push
mov
hlt
int
fdivr
xchg
mov
cmp
or
loopne
in
jno
sub
mov
fs
test
dec
cmp
mov
xor
jmp
js
int3
outs
xchg
mov
jl
inc
xlat
xchg
in
or
cmp
inc
pushf
mov
lods
xor
jns
mov
add
cmp
in
pushf
test
lahf
dec
xchg
or
aam
lahf
cmps
repz
mov
xor
pop
xchg
cmp
or
ret
test
loopne
push
lea
outs
sbb
out
(bad)
stc
sub
mov
jecxz
in
fidivr
dec
xchg
cmps
addr16
sub
in
fwait
and
not
retf
cmp
stos
mov
imul
(bad)
pusha
dec
aaa
cmps
sbb
enter
pop
pusha
fs
mov
xor
popa
push
dec
clc
adc
and
in
fldcw
pop
popf
cmp
adc
xchg
mov
inc
mov
cmp
dec
mov
push
adc
int3
fld
cmp
pushf
jl
enter
test
mov
int
mov
mov
iret
or
jae
in
xor
mov
xor
dec
inc
cli
or
test
jnp
xor
cs
fadd
mov
ja
jbe
stos
clc
cmc
adc
into
(bad)
cwde
or
or
adc
pop
ins
dec
xchg
sub
xchg
(bad)
fadd
leave
pop
ficomp
add
mov
xchg
jb
inc
ja
xchg
test
mov
int
inc
xchg
cld
mov
cld
and
mov
sbb
xchg
ficomp
mov
in
in
fisub
outs
fadd
sub
es
sbb
adc
out
cmp
shl
test
lods
mov
mov
jno
inc
retf
mov
aas
aad
push
fiadd
test
mov
cld
mov
or
das
push
imul
popf
push
cmp
cmps
enter
repnz
sub
rcr
cmc
pop
daa
imul
sub
xchg
ror
aad
aad
push
sub
push
fsubr
fisub
popa
sbb
push
nop
repz
cmps
test
sahf
mov
inc
sar
push
fidiv
mov
push
fimul
rcr
jg
test
or
pop
into
and
mov
inc
out
adc
in
not
ret
mov
mov
(bad)
hlt
inc
ror
jmp
push
fcom
pop
adc
jne
sub
mov
mov
adc
je
in
mov
pop
out
and
imul
enter
lods
call
fisttp
cmp
fimul
and
push
xor
dec
mov
jecxz
repz
(bad)
shl
or
pop
mov
out
retf
mov
jno
push
sbb
mov
adc
cmps
addr16
jno
out
add
js
dec
pop
inc
mov
inc
mov
or
out
xchg
fnstcw
lea
mov
rol
pop
adc
clc
sub
sub
aam
test
mov
push
mov
adc
sub
jb
cmps
push
pop
ja
gs
push
push
adc
mov
fmulp
jno
add
mov
into
push
sahf
aaa
fst
fs
sub
inc
fcom
jbe
dec
mov
(bad)
enter
jno
int
jno
fldenv
es
ins
mov
in
ficom
push
or
fs
adc
jb
add
mov
in
cmp
jnp
daa
dec
sub
jae
push
movs
xor
(bad)
in
mov
clc
inc
mov
sbb
mov
jge
xor
pop
and
outs
loopne
pop
fdivr
rcr
sbb
mov
(bad)
push
jo
fimul
adc
push
(bad)
push
pop
dec
lods
dec
cmps
rol
cwde
cmps
mov
push
stos
push
outs
shl
pop
cmp
fidiv
sbb
mov
fwait
cmp
js
addr16
test
pop
adc
stos
mov
ja
je
mov
not
gs
cmp
rcl
dec
sub
mov
int3
adc
sar
(bad)
out
pop
jbe
sub
or
and
pop
int
push
mov
in
pop
out
mov
fisub
retf
out
add
test
test
sub
cmp
(bad)
shl
not
mov
cmp
cld
and
dec
movs
imul
lds
push
dec
xchg
fmul
das
nop
jg
sbb
cld
adc
(bad)
cmp
adc
jecxz
out
fcmovu
mov
sahf
sub
les
retf
cli
loop
test
call
fs
aad
aad
aad
test
rol
mov
sar
sbb
sub
nop
mov
in
ret
sub
loopne
cmc
lds
leave
sub
mov
sbb
in
gs
pop
pusha
jne
sbb
sar
adc
mov
push
pop
xchg
in
jge
icebp
sub
push
retf
cmp
fidivr
stos
xchg
data16
imul
int3
and
cmps
pusha
pop
out
ret
leave
adc
fsub
iret
mov
data16
pop
imul
sbb
mov
cmp
jmp
xchg
sbb
or
cmps
adc
xor
sbb
push
dec
psrad
cmps
ds
add
jb
mov
fwait
gs
call
jo
dec
sbb
cmp
sub
xchg
retf
lea
xchg
mov
mov
sub
ret
test
nop
mov
jne
push
mov
fisubr
mov
adc
adc
dec
mov
mov
jg
aaa
pop
gs
sub
mov
adc
repnz
fstp
aas
xchg
cmps
dec
dec
loop
push
mov
sub
ret
in
dec
setnp
rcl
mov
dec
jne
ins
sbb
and
sub
adc
loopne
stos
add
and
ja
jbe
in
sbb
mov
add
cmp
movs
or
movs
add
int
repz
dec
call
dec
mov
cmp
jmp
push
jb
push
shl
mov
xor
clc
mov
retf
ret
les
inc
in
cli
cmpxchg
xor
cmp
(bad)
call
lods
data16
imul
jnp
jg
dec
mov
mov
or
push
retf
imul
dec
jno
inc
ins
mov
mov
ja
lock
outs
daa
dec
mov
sub
out
call
jmp
cmps
sub
gs
fisubr
pop
leave
sub
lea
out
clc
(bad)
repnz
fwait
movs
fwait
mov
cmp
ins
ret
inc
or
dec
cmp
mov
std
pop
imul
rol
mov
xchg
xchg
ja
dec
xor
dec
cmp
or
in
mov
sub
arpl
pusha
inc
and
push
in
push
cli
fs
cmp
adc
jg
add
ja
mov
xor
mov
jge
cdq
inc
fld
fsub
test
xor
add
nop
les
les
fsubrp
jl
jmp
rol
pop
gs
int3
test
data16
mov
sar
fidivr
rol
cmp
and
adc
dec
aam
pop
mov
cmc
adc
jo
dec
dec
mov
mov
pop
retf
cmps
call
mov
mov
fs
mov
in
lock
push
(bad)
sub
xchg
out
in
cmps
and
xchg
mov
aas
push
xor
ficomp
push
lds
inc
sub
push
adc
pop
test
aam
mov
xchg
ins
fdivp
dec
rol
jno
push
jo
sub
les
retf
cmps
fdivr
ja
gs
mov
retf
jae
aad
nop
sub
push
pop
sub
push
and
(bad)
loopne
adc
repnz
shl
sar
mov
xor
mov
dec
pop
cmp
(bad)
popa
nop
ds
xor
fbld
cmp
stos
and
scas
cmps
stos
jp
shl
nop
sti
(bad)
int3
jl
daa
inc
aad
aad
aad
push
arpl
leave
clc
cld
and
rcl
mov
or
xchg
and
dec
ret
cmp
inc
pushf
out
cmc
iret
ds
rcl
cmps
pop
cmp
int
lds
gs
pop
mov
and
dec
add
loopne
inc
(bad)
aam
scas
sub
xchg
xchg
sub
push
or
and
adc
imul
iret
leave
mov
jmp
mov
gs
mov
imul
adc
cmp
neg
pusha
lods
sub
or
sbb
and
lea
mov
cmp
cmp
sub
adc
pop
mov
push
sub
or
sbb
mov
ficomp
popa
pop
or
jns
movs
jbe
scas
push
sub
cmc
mov
xchg
bound
pop
les
xchg
pop
cmps
pop
mov
mov
mov
mov
jae
xchg
adc
outs
cmp
or
(bad)
pop
ret
sub
repz
int
scas
mov
xchg
fidiv
neg
movs
adc
daa
jg
or
jno
dec
push
pop
gs
(bad)
int3
and
xor
(bad)
loop
xchg
leave
ja
pop
xchg
je
cmps
push
mov
in
xchg
js
sub
inc
fcomp
pop
and
int
pop
aad
inc
push
nop
(bad)
mov
pop
dec
cmps
ret
mov
sub
inc
or
jmp
rol
push
pop
popf
mov
xor
adc
cli
cmp
push
sbb
xchg
mov
xor
mov
or
inc
adc
push
sub
and
and
ja
gs
das
xchg
ds
cld
add
adc
cmp
data16
jg
movs
pop
gs
jg
imul
dec
xor
in
test
push
xchg
pop
push
push
or
mov
inc
jne
jmp
aaa
or
lock
mov
daa
jnp
mov
sbb
push
dec
clc
cmps
cld
ja
mov
pop
pop
rcl
out
mov
shr
adc
lds
mov
(bad)
mov
mov
sub
movs
cmovl
dec
xchg
mov
arpl
mov
stos
and
cmp
mov
clc
mov
sub
mov
fwait
push
in
xchg
in
rol
jge
jb
and
iret
(bad)
mov
push
out
mov
xchg
das
movs
mov
xor
cmps
dec
ja
push
sub
adc
or
cmp
jmp
xor
ret
fs
movs
or
shl
test
je
mov
jecxz
ficomp
sub
jge
test
add
jns
push
xor
gs
xchg
or
je
push
scas
daa
dec
cmp
and
(bad)
jo
int3
pop
sbb
lahf
mov
or
test
and
sub
ret
(bad)
jp
mov
pop
mov
into
movs
lahf
mov
jle
mov
mov
cmp
fidivr
in
adc
mov
cmp
add
jge
push
or
retf
push
jnp
mov
es
je
movs
sub
mov
cld
mov
add
pusha
ror
lods
pushf
mov
(bad)
rol
sub
aas
adc
mov
ret
std
cli
mov
push
cmp
add
add
jg
pop
test
jb
pop
pop
jae
add
jne
test
sbb
ficom
and
cmp
add
and
adc
or
cmp
push
jecxz
imul
adc
mov
fimul
aas
push
pop
push
push
jo
pop
push
repz
mov
xor
sub
pop
into
xchg
pusha
xor
cmp
xchg
retf
nop
stc
nop
int
(bad)
sbb
mov
add
push
or
fadd
sub
xchg
mov
push
xchg
jmp
dec
add
daa
shl
push
adc
shr
arpl
pop
pusha
mov
or
ret
pop
(bad)
mov
xor
push
(bad)
add
in
cli
pop
pop
enter
push
xchg
or
mov
cmp
sbb
je
dec
mov
fdivr
jmp
leave
mov
nop
mov
(bad)
out
lea
jmp
push
dec
mov
fs
mov
push
add
mov
aas
pop
cmps
pop
and
cld
dec
int3
sub
jnp
pop
mov
(bad)
aad
das
mov
sahf
test
xor
mov
lea
jae
mov
(bad)
or
in
inc
test
mov
jg
gs
out
out
shl
ror
rcr
adc
add
cli
mov
sar
cmc
in
das
cmps
jns
mov
movs
inc
ret
rcl
mov
pop
xchg
out
xor
add
loop
pop
retf
jae
mov
cmp
cmps
gs
pop
in
inc
pop
xchg
in
scas
sub
push
push
cmp
mov
dec
in
dec
popf
cmp
mov
cmps
cmp
or
cdq
or
jp
test
inc
retf
fimul
sub
in
sti
das
cmc
fsubr
mov
les
leave
xor
in
lea
pop
pop
(bad)
rol
xor
fdivr
mov
pcmpgtb
inc
cmp
dec
cmp
popf
sbb
arpl
pop
into
enter
mov
pop
lea
(bad)
cmp
mov
jge
call
push
sbb
cmc
adc
mov
sub
ficom
cmp
arpl
add
in
pop
imul
rol
cmp
mul
mov
sbb
popa
aad
xchg
ins
mov
imul
in
inc
in
xchg
sti
out
fst
cmps
dec
imul
mov
jmp
adc
add
inc
stos
es
push
inc
xchg
popa
mov
sbb
cmps
add
jno
in
mov
mov
sub
sub
pop
out
retf
addr16
leave
aam
pop
mov
mov
xchg
fs
out
fdiv
or
mov
out
xchg
adc
adc
int
xor
icebp
stos
or
adc
sbb
ja
aam
inc
sar
add
cmp
hlt
aad
mov
xor
cmp
mov
cmp
fsubrp
call
gs
adc
jno
inc
adc
aad
push
movs
in
lock
imul
movs
jmp
mov
push
(bad)
and
pop
mov
cmp
sub
(bad)
adc
mov
popa
ret
sub
jmp
fst
cmp
ds
cwde
std
xchg
cmc
gs
out
dec
cmp
adc
fmul
stos
sub
adc
mov
imul
xchg
out
stos
pop
sar
jo
sub
test
dec
dec
xor
or
cmps
loopne
push
ja
xor
jmp
in
fsub
jg
jne
sub
mov
in
push
aas
ficom
cmp
ins
loop
movs
ret
push
scas
movs
out
repnz
popf
jbe
ror
movq
push
cli
jbe
xor
dec
xor
push
shr
shl
cmp
mov
xor
call
gs
mov
repnz
imul
cmp
rcr
je
outs
inc
aad
aad
dec
adc
fadd
in
inc
cmp
lods
nop
sub
jmp
ds
inc
cmps
aas
leave
cmp
(bad)
jge
(bad)
(bad)
mov
aam
cmp
shl
pop
mov
xor
mov
adc
movs
add
rol
mov
cmps
repnz
sub
xchg
push
or
pop
cwde
xchg
xchg
xchg
ja
mov
jnp
push
mov
or
jno
mov
popa
lds
call
fs
sysret
movs
xchg
cmp
cld
adc
xchg
cmp
ja
ret
stos
(bad)
repnz
pop
sbb
std
mov
stos
dec
sbb
(bad)
push
jmp
pop
jnp
stos
push
jb
lea
fidiv
sbb
pop
xor
in
hlt
jmp
ja
cmp
add
(bad)
pop
push
daa
fs
jmp
imul
cmp
aas
jb
mov
fucom
ret
fadd
cmp
ror
xor
cli
shl
(bad)
ds
and
pop
xor
sub
mov
ja
pusha
lock
daa
movs
pushf
mov
mov
nop
movs
mov
push
aas
push
cmp
mov
inc
xchg
xchg
mov
gs
cmp
pop
cmp
clc
int
lea
stos
mov
push
pop
imul
sbb
(bad)
rol
xchg
mov
in
dec
sub
and
pop
retf
sub
pop
push
jno
mov
mov
shr
cmp
xchg
in
scas
outs
pop
xchg
push
inc
popa
pop
ret
cmps
mov
xchg
mov
push
mov
sub
cdq
mov
sub
or
int
sahf
jne
popa
push
imul
and
push
shr
mov
std
pop
adc
push
cmp
rol
or
cdq
and
aam
cmp
push
fwait
xchg
cmp
mov
jns
mov
xor
daa
mov
shr
mov
int
stos
sub
cdq
jne
(bad)
cmp
out
sub
pop
dec
push
pop
in
outs
sub
xchg
or
cdq
fwait
std
add
retf
and
adc
retf
(bad)
fisub
das
inc
pop
ret
imul
lea
xor
mov
mov
cmp
das
jns
adc
pusha
pop
cmps
sub
icebp
pop
movs
jg
in
retf
and
jge
mov
mov
outs
(bad)
mov
sub
pop
pop
fidiv
stos
and
push
mov
repnz
out
scas
jnp
mov
mov
sbb
loope
cmps
inc
fdivrp
pop
repnz
cmp
mov
dec
push
pop
jns
popa
fcomp
and
frstor
xor
and
jmp
sub
in
inc
shl
mov
cmp
mov
cmp
adc
sti
jg
popa
(bad)
fimul
nop
in
(bad)
ins
jg
jno
cmps
inc
sub
cli
xor
push
aad
aad
inc
in
adc
fcom
push
ret
sub
push
sqrtps
gs
sub
aam
test
out
push
jmp
(bad)
loope
mov
int3
test
cmp
aas
data16
(bad)
std
mov
xchg
bound
jne
and
xor
sub
push
ror
dec
fs
jmp
(bad)
rcl
test
fidiv
jne
daa
ficom
and
mov
cmp
out
pop
adc
mov
js
dec
shl
stos
or
add
xchg
push
daa
push
xchg
sub
popf
lods
(bad)
jmp
xchg
push
xor
xchg
je
cmps
fsubr
(bad)
je
pop
fdivrp
adc
inc
cmps
aas
jns
shl
fisttp
adc
pop
outs
ins
push
aad
inc
mov
mov
mov
rcl
sub
test
sub
stos
push
lods
arpl
push
pop
imul
shr
pop
mov
xchg
adc
pop
aas
dec
rcr
out
idiv
mov
xor
cli
hlt
add
dec
test
cmp
das
jns
sbb
jne
sbb
adc
retf
push
not
pop
jmp
push
push
cmps
inc
cmp
dec
cmp
(bad)
movs
rol
mov
jae
or
jge
outs
dec
fimul
cmp
cdq
jnp
into
int3
adc
sub
xchg
xchg
xchg
fiadd
xchg
mov
fdiv
mov
add
push
push
cmp
dec
pop
push
sbb
jmp
int3
jg
cmps
daa
repnz
sbb
imul
mov
or
imul
lods
mov
jnp
xor
inc
adc
mov
cmp
pop
or
mov
movs
into
mov
or
pop
fisub
jmp
jle
sub
lea
in
jle
fmulp
rcr
cmp
pop
das
and
mov
ins
pop
ja
jns
das
adc
pcmpeqw
(bad)
movs
pop
add
or
punpckhbw
dec
out
cmp
add
adc
cmps
xchg
lahf
mov
loopne
or
movs
call
movs
imul
jnp
pop
jae
mov
pop
dec
cdq
je
sub
das
sti
add
push
ret
jo
in
cmp
das
pushf
cmp
mov
int3
nop
rol
sub
sub
push
jmp
fs
mov
ja
jo
push
enter
or
sbb
push
sub
pop
out
(bad)
jnp
xor
test
addr16
leave
gs
ficom
ja
inc
xchg
jmp
jae
pop
in
(bad)
out
jg
in
jno
push
inc
mov
ja
fld
fwait
pop
mov
(bad)
mov
outs
std
inc
scas
lahf
movs
test
mov
cmc
scas
outs
in
ret
sbb
xchg
pop
inc
and
fst
or
outs
or
or
pop
rol
cmp
mov
out
ret
psrld
mov
outs
jg
call
lock
jnp
sbb
mov
cmp
inc
mov
or
and
mov
xor
repz
rcr
aad
pop
cdq
popf
lds
lods
sub
mov
dec
fadd
mov
mov
pushf
sbb
sub
pop
sub
pop
fs
pop
ja
(bad)
jp
lock
lods
(bad)
movs
jp
mov
fwait
aaa
dec
jno
in
inc
pop
pop
sub
(bad)
mov
(bad)
fcomp
push
and
cli
mov
daa
jae
loopne
lods
pop
mov
xchg
ror
and
(bad)
xchg
test
dec
xchg
sbb
adc
test
pop
scas
mov
icebp
stos
dec
mov
mov
ror
stos
dec
mov
packssdw
(bad)
push
add
mov
dec
push
inc
std
xchg
mov
jns
fadd
dec
jle
setge
sbb
and
fcmovnb
fdiv
xor
inc
movs
pop
xchg
(bad)
and
sbb
test
dec
adc
jge
outs
mov
xchg
movs
call
inc
push
rcr
cwde
sub
ja
nop
pop
mov
int
lock
push
movs
loopne
dec
and
pop
cmc
or
xchg
repnz
sbb
jno
inc
mov
mov
ror
dec
xor
popf
fs
and
push
xchg
jnp
cmp
sub
pop
mov
rcr
cmp
mov
gs
in
push
ss
inc
out
pop
setp
adc
mov
in
stos
sbb
mov
cmp
mov
mov
or
mov
add
mov
(bad)
stos
jnp
cld
cmps
adc
std
inc
mov
in
push
sub
addr16
dec
pusha
jnp
mov
out
shr
lods
jg
ja
dec
out
and
fidiv
(bad)
mov
pop
out
imul
fiadd
mov
pop
dec
mov
cld
imul
mov
inc
repnz
cmps
push
push
mov
jnp
mov
jno
mov
cmp
pushf
pop
mov
lods
imul
das
clc
mov
(bad)
push
pusha
mov
(bad)
cli
cwde
push
int
sub
dec
inc
stos
xchg
mov
(bad)
scas
cmp
ficomp
leave
cmp
push
xor
pop
int3
or
add
movs
mov
xchg
cmps
ficomp
out
jbe
push
add
loop
movs
mov
cmp
imul
mov
fld
aad
stos
fwait
push
call
lahf
jno
jb
hlt
xchg
jmp
ret
mov
push
fisttp
data16
inc
mov
cmps
aas
movs
dec
mov
push
or
in
repnz
or
push
sub
adc
lds
popa
or
addr16
push
xor
jge
add
sub
and
int3
fidiv
mov
fidivr
xchg
mov
dec
das
(bad)
push
jns
xchg
test
xchg
scas
mov
pop
mov
xchg
cmp
push
rcl
sub
and
frstor
pop
(bad)
nop
ret
jl
dec
fcomp
stc
test
retf
dec
(bad)
(bad)
outs
mov
pop
pusha
and
mov
cmp
sub
test
lods
xchg
es
pop
lods
pop
mov
lahf
das
and
mul
daa
ror
(bad)
mov
repnz
popf
push
std
call
fs
jns
(bad)
retf
jmp
cmp
out
(bad)
enter
ins
adc
adc
test
out
jns
mov
xchg
xor
mov
sbb
pop
mov
mov
loopne
popa
pushf
call
cld
fisubr
hlt
das
mov
outs
mov
xor
mov
xchg
in
xchg
test
ror
mov
lods
jnp
xchg
mov
stos
add
ret
cmps
fsubr
pop
inc
mov
(bad)
mov
mov
stos
cmp
or
mov
popf
lods
popa
ret
pop
jb
mov
imul
pop
fwait
cmp
mov
dec
fidivr
mov
cdq
xchg
(bad)
movs
cwde
aam
mov
mov
aas
jne
cmps
sub
nop
cmp
jg
cmp
xchg
lods
pop
imul
pop
inc
sbb
test
arpl
out
(bad)
fisub
mov
xchg
jae
scas
push
sbb
mov
adc
clc
aad
aad
inc
mov
sub
add
pop
enter
cmps
js
jno
push
mov
jmp
in
push
cmp
pop
int
fwait
repnz
rcl
fs
sub
jo
in
pop
inc
push
mov
sub
aad
test
lds
fadd
fs
jo
imul
test
dec
mov
and
sqrtps
jno
mov
mul
shl
clc
mov
sbb
lahf
jne
sub
mov
test
mul
jmp
pop
cld
and
shl
jmp
jnp
enter
loopne
imul
adc
shl
inc
xor
mov
addr16
push
dec
sbb
adc
addr16
mov
xlat
test
mov
dec
out
xor
int
neg
jp
mov
sbb
movs
xchg
xchg
push
outs
adc
ficomp
arpl
mov
test
in
pop
pop
ins
cmp
and
mov
iret
lea
inc
in
int
addr16
jg
daa
push
(bad)
push
xor
out
lods
sub
movs
cmp
cdq
inc
sub
jge
pop
sub
inc
cmp
mov
adc
cli
sub
aam
test
ficomp
mov
rcl
mov
ds
or
cmp
add
aad
mov
stos
jp
into
mov
xchg
xchg
and
(bad)
je
pop
mov
cmp
imul
mov
mov
cmp
pop
jae
mov
cmp
in
cld
push
(bad)
clc
jne
mov
pop
cli
gs
fisubr
test
mov
lods
xchg
stos
cmp
pop
xchg
sar
push
pop
xchg
push
sbb
(bad)
out
lods
and
xchg
movs
fsubp
fs
push
adc
pop
test
retf
in
pop
add
je
out
jmp
sbb
repnz
daa
test
pop
mov
sbb
or
test
out
into
xor
sub
adc
or
imul
pop
mov
sbb
jns
mov
inc
and
jo
rol
push
xchg
(bad)
cmp
mov
push
inc
lahf
lods
sub
cmp
movs
hlt
jns
sub
adc
add
inc
movs
cdq
addr16
movs
pusha
sub
inc
push
inc
adc
in
inc
lods
push
in
push
mov
inc
push
pop
ret
add
retf
out
in
mov
jnp
adc
push
push
sbb
xchg
stos
test
in
fsub
pop
push
or
dec
jne
sub
stos
pop
and
push
repnz
(bad)
jo
lea
cmp
cld
dec
or
sub
adc
or
cmp
rol
cmp
mov
(bad)
inc
cmp
gs
adc
jno
or
(bad)
bnd
sbb
mov
sub
ret
sub
dec
sar
push
int
cmp
or
dec
xor
pop
cld
enter
cmps
mov
push
ret
cmps
addr16
pop
mov
pop
call
add
out
sti
xor
das
clc
push
or
stos
mov
jne
ret
rcr
add
(bad)
dec
mov
mul
bound
cmp
(bad)
or
loop
sbb
mov
sbb
adc
pop
aas
push
(bad)
mov
retf
fiadd
cmp
sub
ja
or
cwde
pop
aam
xor
push
jl
fcmovu
je
mov
fidiv
sub
sub
sub
sub
data16
cmp
or
or
add
ficomp
mov
cmp
fdivr
jno
mov
ja
push
pop
ret
sub
push
int3
aaa
outs
mov
mov
dec
add
shr
rol
xchg
je
test
mov
popa
fdiv
pop
addr16
inc
movs
mov
ret
mov
jge
inc
sub
mov
dec
out
jo
or
leave
cli
or
xchg
dec
outs
jno
xchg
jno
sub
mov
shl
sub
rol
mov
mov
mov
(bad)
cdq
cmp
popa
mov
jmp
cmps
ds
lods
push
fisubr
rol
mov
and
and
popf
aas
rcpps
inc
popa
pop
es
faddp
jo
mov
jecxz
repnz
push
xor
mov
mov
jns
fwait
pop
inc
mov
pop
add
in
pop
outs
pusha
push
pop
daa
mov
pop
das
xor
fbld
gs
push
data16
dec
adc
loope
add
sbb
stc
inc
fwait
mov
(bad)
xchg
mov
jmp
push
jmp
rcl
adc
mov
mov
or
mov
cmps
repz
pop
push
sub
into
retf
mov
xor
jmp
push
movs
mov
push
addr16
or
movs
cmp
pop
bound
lea
jb
rcl
mov
out
sar
sbb
(bad)
jge
das
outs
push
xor
nop
sub
movs
fmul
pop
stos
dec
sbb
mov
add
sbb
sub
in
sub
xor
out
cld
rcl
nop
(bad)
cmps
mov
lea
in
aas
mov
sbb
scas
and
in
sbb
jmp
sbb
ret
adc
outs
cmp
mov
sar
cmp
mov
cmp
pop
stos
mov
std
cdq
repz
cmps
jg
push
adc
rcr
and
mov
(bad)
cmp
xor
or
sar
xor
jae
mov
ja
out
cli
cmp
int
cmc
(bad)
scas
retf
mov
in
imul
lds
iret
inc
movs
mov
pop
(bad)
arpl
mov
mov
xchg
dec
je
inc
xor
scas
in
addr16
lds
lds
pop
sub
out
add
adc
inc
adc
ja
stos
pop
int
lds
xchg
movs
movs
pop
jg
gs
lock
sbb
mov
adc
xchg
je
mov
jg
jbe
inc
mov
mov
jb
pop
int3
and
xor
inc
mov
mov
push
pop
mov
out
mov
lahf
fnstcw
jl
adc
add
retf
in
stc
in
cmp
pop
mov
test
add
mov
cmp
in
sub
stos
ins
ss
hlt
jecxz
(bad)
and
cwde
jecxz
(bad)
and
cmps
call
or
les
adc
and
add
or
sbb
xchg
xchg
xchg
movs
sub
cld
push
pop
lds
pop
pop
xor
pop
jmp
jb
rol
push
pop
sub
bound
cld
nop
inc
mov
cmp
jle
xchg
aad
pop
mov
scas
pop
int
jae
or
jnp
call
cmp
mov
scas
mov
push
fcomp
adc
cmps
push
mov
loopne
sub
xor
sbb
push
dec
jo
in
adc
idiv
fsubr
fcmove
mov
shl
shl
xor
push
(bad)
and
xchg
mov
stos
push
inc
mov
jmp
std
jnp
int3
mov
sbb
sbb
adc
jmp
(bad)
sar
xor
repz
mov
dec
mov
jnp
mov
test
sub
sub
imul
push
jmp
sub
sub
and
mov
shl
out
inc
cmp
pop
loopne
dec
clc
jns
jae
mov
mov
lahf
jo
jb
loopne
and
scas
mov
pop
xor
push
cmp
push
movs
in
jne
inc
in
sub
cmp
(bad)
cmp
rcl
inc
add
mov
test
add
sysenter
adc
int
cmps
int
outs
ins
cmp
stos
pmulhw
aaa
push
adc
aas
pop
sahf
xchg
data16
jmp
cmp
rcr
mov
pop
aaa
inc
popa
in
dec
add
movs
pop
sub
sbb
hlt
push
repnz
pop
dec
cmps
sub
or
inc
sahf
es
adc
mov
mov
fwait
xchg
jno
mov
xor
fwait
aad
xor
paddsw
mov
dec
mov
in
fstp
mov
int3
dec
xor
push
push
in
(bad)
cdq
je
ret
dec
dec
movs
ss
and
imul
adc
sbb
ins
dec
lahf
es
mov
cmp
into
sub
jne
sub
(bad)
ins
push
adc
mov
jge
out
add
call
push
in
xor
and
cmp
push
leave
aam
test
or
mov
fdivr
shr
or
hlt
mov
(bad)
or
or
cmp
inc
xchg
stos
lahf
cmps
aaa
jmp
es
mov
push
(bad)
push
sbb
mov
or
xor
mov
xor
out
inc
xchg
cmp
and
or
out
in
int
cmps
dec
mov
ds
bnd
sbb
jecxz
stos
push
retf
mov
xor
pop
sub
enter
cmp
push
cld
push
fisub
arpl
hlt
std
add
mov
mov
inc
movs
loop
mov
fwait
adc
xor
repnz
(bad)
dec
xchg
adc
jmp
jnp
sbb
fimul
aad
xchg
mov
jne
in
fimul
out
adc
mov
or
sbb
jecxz
jno
mov
fimul
das
dec
ret
mov
cmc
or
xor
cmp
push
loopne
xchg
movs
popa
cmp
cmp
das
jg
cmp
mov
cdq
mov
aaa
ds
xor
sbb
cmp
push
cmp
cmps
pop
add
das
mov
stc
in
xchg
mov
cmps
push
or
cmps
or
dec
mov
and
sub
cmp
mov
fisub
dec
sub
sbb
push
std
fs
push
(bad)
jle
sub
sub
ds
addr16
mov
xchg
sub
ins
xor
push
ret
and
jg
mov
push
sbb
mov
jns
mov
push
mov
sub
xor
inc
in
cs
retf
jbe
cmp
adc
inc
int3
imul
fwait
add
adc
push
cmp
retf
repnz
cmps
in
sub
inc
int3
or
pop
aad
aad
rcr
stos
and
mov
fcomp
jnp
loop
or
repnz
nop
retf
mov
sub
fcmovu
cld
rcl
seta
ret
mov
cmp
mov
cmp
rcl
fwait
not
mov
pop
mov
movs
add
xchg
xchg
rol
or
nop
xor
or
xor
jne
popa
dec
out
dec
retf
or
add
pop
mov
lahf
je
adc
and
mov
hlt
mov
dec
sub
inc
pop
mov
int
mov
sub
push
pop
rcl
imul
mov
push
add
out
bnd
adc
push
lahf
hlt
lods
sub
(bad)
adc
addr16
jg
mov
cld
adc
fcmovne
jecxz
ficom
xor
dec
inc
pop
aad
inc
cmps
outs
adc
push
mov
xchg
push
jmp
push
push
adc
adc
test
or
add
cld
in
inc
or
pop
cmp
jae
or
outs
sub
nop
adc
lods
cmovg
push
jge
mov
ja
jae
jge
mov
lahf
mov
test
mov
adc
inc
add
jno
sub
out
jecxz
(bad)
jnp
mov
ror
rol
sbb
fild
inc
mov
test
movs
jg
push
mov
das
pop
mov
in
sbb
pushf
jg
jne
sub
ins
fsubr
stos
(bad)
pusha
adc
js
movs
jb
push
mov
enter
retf
cmp
sub
sub
sbb
sbb
out
jecxz
push
push
sti
push
not
push
out
jno
fiadd
rcr
rcr
cmp
loopne
xchg
lods
(bad)
lods
call
mov
mov
mov
jno
(bad)
cli
mov
loop
adc
mov
jl
mov
dec
ja
jo
cmps
cmps
pop
jno
mov
xor
sub
sub
cmp
stos
xor
xor
or
add
arpl
adc
dec
jmp
out
jb
neg
aas
out
adc
das
sbb
ret
lods
cdq
test
movs
and
data16
inc
mov
test
ins
add
rcl
xor
iret
nop
pop
cmp
cmp
or
xchg
sbb
lods
xchg
sbb
cdq
ins
aad
push
retf
sub
js
popa
jo
dec
sbb
sbb
adc
ror
and
cmp
cmp
xor
xor
adc
movs
(bad)
adc
inc
mov
cmp
pop
sti
add
repz
retf
aad
aad
inc
sub
push
rcl
mov
xchg
test
movs
mov
cmp
fimul
ficomp
nop
sub
add
nop
jl
js
xor
mov
jg
jne
das
jae
rcl
gs
and
cmp
nop
xor
mov
mov
adc
xchg
pop
add
inc
sbb
adc
cmovle
out
loop
sbb
retf
and
test
xor
loop
movs
addr16
inc
and
sub
adc
cli
fadd
dec
jno
sub
inc
inc
cmps
sub
not
sub
out
jbe
loop
add
dec
retf
and
jae
cli
xchg
and
repnz
push
inc
cmp
mov
adc
stos
cwde
mov
loopne
arpl
and
fiadd
fwait
daa
adc
clc
push
xor
mov
out
mov
mov
cmp
test
jnp
adc
inc
and
out
aad
push
movs
adc
xchg
aam
cmp
pop
sub
repnz
arpl
ja
jae
pop
xor
jo
(bad)
adc
push
imul
les
aad
or
gs
cmp
lea
int
jmp
mov
sub
dec
in
push
out
jmp
scas
out
mov
mov
jnp
inc
cmp
data16
and
outs
hlt
push
lds
lea
mov
adc
push
fidivr
sub
mov
aad
mov
cmp
push
imul
push
daa
jg
cmp
stos
mov
int3
cmp
push
sub
das
es
repnz
or
sub
test
jae
add
aaa
mov
loop
pop
nop
rol
inc
ins
dec
mov
fs
scas
add
dec
jns
pop
in
popf
pop
shl
out
ret
jmp
neg
add
fmul
fst
or
out
xchg
push
lock
mov
retf
cmp
xchg
stos
in
sahf
loopne
pop
push
jbe
dec
test
dec
mov
aad
sbb
clc
adc
inc
nop
inc
sbb
pop
inc
inc
or
mov
cmp
rcl
adc
hlt
shl
fsubrp
jbe
add
xchg
fsubr
add
(bad)
jecxz
pop
mov
mov
mov
int
mov
push
pusha
cdq
xor
retf
ja
jae
(bad)
pusha
inc
out
clc
pop
xor
lods
push
retf
test
jnp
(bad)
xor
das
pop
dec
add
lods
popa
mov
xchg
repnz
or
adc
dec
mov
cmps
lock
mov
nop
push
popa
mov
sub
fwait
xor
xor
test
jnp
imul
aad
aad
aam
outs
push
daa
push
and
pop
cmp
shl
cmp
mov
shl
lds
push
mov
fsub
mov
xor
addr16
adc
xchg
outs
push
mov
aam
stos
add
rol
add
mov
retf
xor
rol
xor
out
sbb
add
fs
(bad)
into
cmp
mov
arpl
dec
sti
push
int3
cmp
mov
cmp
adc
sub
mov
or
jo
jns
jo
scas
add
cmp
sbb
sbb
xchg
mov
jnp
pop
rcl
and
fdivr
pop
mov
push
pop
imul
int3
shl
nop
ret
in
adc
aad
xchg
fsub
mov
lea
jg
xor
rcl
mov
fcomp
stos
fs
hlt
push
adc
dec
pop
sbb
cli
add
call
out
jg
mov
mov
enter
sbb
retf
dec
cmp
jne
(bad)
sbb
xchg
leave
retf
ret
pop
dec
bextr
xor
jae
dec
pop
dec
aad
inc
lahf
cmp
sbb
and
in
push
adc
test
jg
jnp
sbb
xchg
dec
popf
sub
arpl
fsub
mov
leave
cli
or
ret
arpl
xchg
adc
aad
dec
dec
gs
outs
fmul
fimul
add
mul
ret
fs
or
shl
pop
repz
push
call
xor
mov
mov
mov
cmp
pusha
ud2
adc
push
fidivr
xor
sar
les
inc
pop
gs
xor
inc
jnp
in
inc
dec
jmp
stos
aaa
imul
enter
(bad)
(bad)
leave
ret
mov
ins
sub
dec
mov
cdq
pop
or
xor
fimul
add
popf
mov
cmp
aaa
ja
fs
cmps
movs
out
rcr
test
mov
xchg
dec
pop
dec
jnp
mov
cmp
inc
cld
neg
bound
xor
ja
aaa
or
push
xor
cmp
(bad)
adc
inc
loop
add
ret
rol
mov
and
popw
outs
dec
popa
daa
fwait
add
xor
pop
xor
out
jg
inc
push
cld
jae
inc
arpl
fwait
xchg
(bad)
stos
xor
push
jnp
inc
push
push
ja
or
fcmovbe
cmps
adc
ja
mov
adc
test
out
mov
pop
je
mov
push
mov
cli
das
(bad)
sar
sub
je
movs
scas
pop
dec
mov
cmp
mov
inc
sub
cmp
sub
mov
cmps
or
cmp
jnp
jns
outs
imul
cmps
cdq
stos
daa
cmps
push
adc
ror
loop
(bad)
data16
(bad)
outs
popf
scas
xchg
add
sub
bound
and
das
mov
outs
fistp
cmps
and
or
or
cld
jne
inc
gs
fwait
xchg
das
xor
out
lahf
fimul
fidiv
xor
mov
test
addr16
ds
imul
or
inc
mov
fwait
mov
es
sbb
add
sar
arpl
push
xor
pop
mov
add
xchg
test
lds
pop
imul
jb
mov
cmp
mov
or
mov
cmps
jmp
mov
(bad)
(bad)
popa
(bad)
cmps
adc
scas
movs
pop
addr16
ds
sub
mov
stos
adc
out
adc
xchg
xchg
adc
daa
out
pop
pop
xor
mov
in
dec
xchg
not
inc
das
adc
mov
fsubr
cmps
jns
in
imul
mov
leave
out
adc
cli
ja
cmps
xor
into
fs
cmps
fidivr
dec
out
adc
(bad)
mov
pop
mov
pop
cmp
(bad)
pop
cmp
outs
lds
pop
sub
dec
adc
sub
push
pop
and
xor
dec
stos
adc
cmp
push
repnz
cmp
gs
pop
cld
and
outs
fidivr
inc
out
adc
dec
retf
mov
addr16
call
aaa
ror
push
shl
pop
xchg
dec
dec
outs
cmp
(bad)
pop
fs
test
mov
cmp
das
dec
jns
sbb
mov
pop
or
aas
cmp
mov
jg
cmps
cmps
setg
ja
add
das
and
cmp
(bad)
das
jg
sbb
addr16
sbb
aaa
pop
cmp
(bad)
das
jno
cmp
dec
loopne
cmp
gs
add
jmp
gs
les
sub
jne
movs
ins
repnz
popf
stos
inc
lea
pop
push
mov
inc
or
gs
movs
mov
xchg
fimul
fdivrp
adc
in
mov
aas
mov
mov
dec
packssdw
xor
(bad)
(bad)
pop
jo
cmps
dec
xchg
int
outs
xchg
and
popf
pop
das
(bad)
not
mov
xchg
mov
and
sbb
stos
xor
sub
jnp
clc
pusha
push
cmps
lahf
or
loop
call
mov
cmp
gs
movs
push
(bad)
in
sbb
scas
sub
xor
pmaxub
(bad)
(bad)
mov
jmp
outs
in
pop
jg
xor
ret
mov
stos
inc
xor
push
inc
rol
cmp
out
lods
mov
xor
mov
loope
push
jnp
pop
rcl
mov
(bad)
pop
(bad)
ficomp
or
idiv
sbb
pop
imul
xor
pcmpgtb
xor
sbb
or
push
cmps
push
das
in
push
out
out
inc
(bad)
xor
xchg
sbb
dec
test
adc
mov
scas
arpl
mov
dec
popa
stos
xchg
inc
aaa
int3
xchg
imul
es
je
mov
cmp
or
bnd
imul
aaa
sub
dec
sbb
mov
retf
sbb
cmps
inc
stos
mov
cld
fdivr
cmp
cmp
add
aad
xchg
xchg
lahf
xor
push
es
aad
xchg
xchg
dec
and
popa
fs
int3
rcl
sbb
push
jno
cmp
xor
cmp
sbb
(bad)
fld
in
adc
shl
push
add
imul
popf
inc
lahf
jbe
mov
mov
fs
ss
cmps
xchg
out
pop
imul
cli
aam
lock
xchg
fwait
adc
xor
push
jae
mul
ds
jmp
bsr
aam
imul
cmp
(bad)
pop
mov
sbb
fyl2x
dec
pop
outs
mov
ja
retf
xchg
and
in
(bad)
jl
clc
push
(bad)
pop
push
addr16
mov
jl
out
and
hlt
imul
aad
nop
mov
lock
mov
jno
xchg
sub
rep
leave
jae
mov
inc
das
sbb
mov
pusha
xchg
ret
mul
(bad)
jecxz
xor
ret
jbe
sub
and
outs
cmp
push
cmp
fs
in
dec
lahf
push
xchg
rcl
jbe
cmp
pop
add
cmp
fdivr
pop
mov
mov
or
fsub
adc
adc
imul
sbb
cmp
push
cld
rcl
jb
or
cmp
sub
mov
push
mov
add
or
fsub
bound
inc
mov
push
adc
pop
les
shr
jge
cli
in
out
push
jne
arpl
out
or
jl
xor
inc
jnp
dec
inc
sbb
jle
mov
cmp
pop
adc
cmp
daa
les
sbb
out
sub
mov
jae
inc
sbb
inc
cmp
aas
pop
jb
jecxz
ss
jg
inc
mov
in
jmp
mov
pop
nop
(bad)
je
or
cld
sub
xor
or
fcmovu
out
mov
cmp
jns
cmp
mov
(bad)
rol
cmp
clc
aad
in
inc
popf
push
daa
std
xchg
push
or
cmp
adc
jbe
mov
mov
xchg
xchg
adc
cmp
mov
sar
xchg
sbb
ja
lock
mov
sub
das
sbb
and
fidiv
retf
mov
sub
xchg
das
es
retf
jmp
mov
sbb
dec
in
leave
ja
cli
popf
xor
rcl
jle
dec
dec
and
sub
das
jmp
jns
jnp
dec
xor
and
xor
fadd
pusha
loop
xchg
push
lea
push
sub
jnp
pop
xor
and
sbb
ss
xor
loop
push
and
push
pop
cmp
pop
xor
lea
jnp
imul
and
leave
(bad)
mov
xor
imul
sbb
aas
fadd
dec
sbb
xchg
daa
es
loop
popa
dec
lea
inc
sbb
imul
aaa
xchg
mov
pop
leave
daa
aam
test
cmp
jae
dec
gs
push
mov
push
or
add
(bad)
loop
or
xor
lahf
dec
movs
dec
fst
mov
push
xor
adc
cmps
push
sub
mov
imul
enter
mov
mov
dec
cmp
ss
mov
cmp
loopne
jg
inc
sbb
mov
ds
ret
cmps
dec
sub
dec
pop
push
ja
pop
dec
outs
or
mov
rcl
xchg
mov
jae
imul
or
jo
xor
jne
adc
cmp
xchg
mov
or
push
mov
pop
dec
movs
gs
mov
or
not
out
sbb
inc
pop
je
mov
lods
je
cmps
hlt
pop
or
daa
pusha
or
sbb
imul
sbb
mov
cmp
pusha
sub
in
out
cmp
cmps
dec
mov
mov
adc
add
cmp
mov
cmp
push
xchg
outs
movq
mov
cmp
pop
(bad)
outs
(bad)
(bad)
aam
mov
pop
cmp
jnp
mov
scas
and
mov
jmp
mov
fsubr
jnp
mov
dec
mov
cmp
cli
or
loop
sbb
das
cmp
jg
ds
aas
test
loop
xor
xor
pop
xor
xor
out
sub
ror
inc
(bad)
or
cld
jg
vcomiss
jmp
inc
jge
mov
mov
test
ret
mov
imul
data16
ror
pop
ficomp
rcl
cmp
imul
jnp
rol
lea
and
or
adc
or
ret
xor
mov
pop
dec
vcvtdq2ps
xor
fidivr
cli
xor
mov
cmp
jge
movs
xor
pop
in
sub
test
jb
repnz
daa
jae
pop
das
ins
aaa
adc
xor
fiadd
xchg
arpl
pop
lds
lahf
and
pop
daa
xchg
rcr
sbb
dec
mov
cmps
and
repnz
add
psrld
mov
fdivrp
arpl
jnp
inc
inc
in
push
cmp
loop
inc
nop
repnz
xchg
cmp
in
dec
stos
jo
add
inc
shl
cmp
out
xchg
ret
adc
add
mov
arpl
jae
stos
out
fisubr
cmp
xor
sbb
out
retf
ja
stos
movs
sub
sbb
addr16
cmp
mov
cmp
inc
ja
xor
scas
cld
ja
inc
jge
push
scas
xor
mov
adc
out
fwait
or
imul
cld
jge
fsubrp
bound
jge
add
loop
sbb
pop
mov
cmps
sbb
inc
fdivp
popa
cmp
data16
ja
lods
jnp
jns
jmp
js
inc
adc
movs
aad
mov
jno
mov
fsubr
iret
mov
loop
ja
ror
xor
rcl
xchg
mov
jno
mov
cmp
sbb
inc
bound
dec
xor
add
adc
jb
jns
cld
jmp
and
cwde
push
nop
xor
popf
sub
xchg
(bad)
fwait
(bad)
pop
cmp
stc
sub
popf
xor
sbb
cmp
adc
jg
mov
stos
sub
add
jae
es
test
(bad)
pop
adc
fadd
xor
cmp
xchg
push
stos
xor
mov
cmps
jne
mov
jnp
jne
xor
cmp
jmp
add
pop
lds
loop
scas
jne
mov
movs
or
mov
in
lods
push
imul
inc
test
xor
lock
pop
rcl
dec
ja
ja
xor
xor
ds
movs
or
mov
jno
fidivr
int3
imul
nop
cmp
(bad)
fs
(bad)
dec
movs
scas
pop
hlt
addr16
cmp
sub
int
or
gs
or
daa
pop
rcr
xor
or
mov
jb
out
jecxz
cmp
bound
and
adc
push
loop
cli
mov
ja
bound
dec
dec
pop
retf
cmp
int
cwde
mov
in
xor
sub
rcl
mov
daa
cmp
ret
lock
cmp
push
mov
and
test
pop
(bad)
rcr
adc
mov
daa
jg
cmp
gs
cld
pop
pop
enter
out
(bad)
xchg
popf
inc
lahf
inc
dec
ja
pop
inc
in
and
in
ss
xchg
scas
sub
xor
cli
push
out
push
out
pop
loopne
jnp
outs
or
out
mov
pop
push
sbb
addr16
in
jnp
mov
xor
in
sbb
jae
fnstenv
out
lea
sbb
jno
ret
imul
aad
mov
push
outs
imul
test
xor
or
inc
fs
popf
ret
cmp
or
pushf
imul
(bad)
jle
mov
xor
jg
dec
repnz
fsubrp
xchg
pushf
mov
in
dec
(bad)
cmp
jno
fcom
xor
add
shl
arpl
pop
sbb
jg
outs
pop
(bad)
cmp
das
popf
(bad)
(bad)
sbb
pop
mov
jns
mov
nop
pop
lea
pop
popa
jmp
push
mov
outs
stos
cmps
inc
sbb
mov
jae
outs
stos
pop
fwait
pop
aaa
adc
imul
push
jae
pop
popa
daa
xchg
xor
jmp
leave
cli
xor
cmp
lahf
(bad)
cmps
xchg
mov
adc
push
ficomp
pop
adc
mov
sub
imul
daa
nop
ficomp
jg
ja
test
ds
mov
mov
xchg
pop
ret
inc
dec
mov
(bad)
sub
sub
jnp
xor
sbb
call
cmp
dec
pop
xchg
fmul
push
sub
arpl
add
out
and
and
push
sti
jnp
int3
push
pop
imul
addr16
mov
dec
pop
or
and
arpl
arpl
in
fidiv
jmp
out
cmp
daa
imul
xchg
mov
arpl
imul
fsubr
mov
inc
or
fidivr
in
sbb
push
movs
jge
imul
arpl
pop
enter
cmps
xchg
out
xchg
(bad)
dec
imul
xchg
pop
das
cmp
cmp
lahf
popa
test
xor
pop
pop
cmps
mov
cmps
std
and
aaa
xor
daa
sub
rcl
jae
mov
cmp
lahf
jne
xchg
mov
popa
inc
dec
mov
jmp
and
ss
outs
pushf
xchg
mov
cmp
cmp
ins
scas
cmp
jecxz
or
cld
push
xchg
std
sub
fwait
xor
loope
ins
div
sbb
or
dec
out
repnz
jno
loopne
mov
add
ja
rcl
jne
out
mov
mov
popa
xchg
adc
aas
stos
jge
das
arpl
adc
cmp
pop
cmps
dec
enter
and
scas
mov
outs
lds
daa
rcl
sbb
out
retf
lahf
data16
adc
pop
aad
or
lahf
mov
push
pmullw
inc
mov
scas
lds
pop
stos
mov
rol
cmp
mov
push
xchg
mov
aam
mov
mov
xchg
pop
(bad)
cmp
inc
pop
pusha
cmp
adc
mov
jae
scas
jecxz
or
ror
cmp
aaa
inc
retf
ja
mov
cld
jne
pop
jbe
gs
jae
push
inc
stos
mov
outs
xlat
lds
loop
div
movs
mov
xchg
mov
icebp
stos
inc
pop
out
cmp
or
mov
fisub
jg
jae
cdq
or
push
dec
sbb
jg
inc
jge
nop
aaa
(bad)
out
repnz
(bad)
cmps
or
daa
or
mov
jg
push
mov
aam
jbe
enter
mov
jmp
dec
fcomp
jnp
jle
inc
(bad)
aam
(bad)
cmp
dec
xor
ja
inc
push
lods
mov
cmp
cmp
gs
xor
ds
in
dec
mov
push
dec
xchg
sbb
out
(bad)
lock
(bad)
or
inc
rol
mov
ficom
dec
pop
sub
lods
add
iret
xchg
in
pop
jge
pop
fsub
xor
xchg
jmp
sahf
mov
rol
sar
or
retf
mov
lahf
mov
inc
xor
test
adc
jmp
ins
pop
sbb
and
das
shl
cmp
mov
dec
push
jmp
(bad)
jle
mov
push
dec
fcomp
push
mov
jae
jge
and
in
pop
xchg
mov
out
outs
hlt
mov
mov
gs
das
ret
(bad)
div
shl
popa
cld
jns
js
loopne
mov
cdq
cld
pop
lahf
gs
test
mov
in
push
mov
sub
(bad)
push
(bad)
push
mov
ret
or
jno
cli
test
lock
call
test
inc
imul
clc
jno
cld
push
call
jno
in
push
mov
sub
mov
xor
aaa
jno
cmp
daa
jno
sub
aas
test
cmp
(bad)
lods
jl
mov
das
dec
repnz
stos
clc
mov
xchg
pop
add
inc
in
dec
or
and
dec
push
cli
xchg
hlt
dec
imul
sbb
imul
mov
jp
and
lahf
mov
cmp
fs
jge
fimul
fnsave
adc
mov
cmp
jns
data16
add
jp
pop
jp
inc
cli
addr16
pop
test
xchg
inc
cli
fwait
inc
jg
adc
and
or
mov
pop
lds
jno
xor
xor
xor
and
mov
push
jno
pop
xchg
mov
cmp
inc
popa
cmc
(bad)
push
mov
sbb
popa
jmp
push
adc
shl
push
ins
test
xchg
test
cdq
ret
dec
stos
add
fwait
add
popf
add
add
in
fcmovnu
mov
cmp
jo
(bad)
enter
data16
fsub
ficom
xchg
(bad)
cdq
cld
pop
sar
pop
aam
or
test
(bad)
lods
cmp
xchg
inc
mov
mov
scas
int3
lods
jno
mov
movs
je
popf
jne
add
adc
ja
pop
lea
xor
aaa
or
sub
xor
mov
push
pop
xor
rol
push
lock
in
inc
mov
mov
int
xor
and
test
int3
inc
call
push
call
push
popf
jne
clc
mul
das
retf
pop
jecxz
je
and
xchg
and
loopne
out
repz
mov
fidivr
dec
jge
ret
les
out
mov
jge
push
pop
gs
add
or
jb
xor
jge
xor
pusha
fimul
mov
cmp
jnp
repnz
add
inc
add
cmp
jns
pop
jge
pop
popa
clc
fld1
test
imul
adc
or
sbb
pop
and
dec
sbb
jne
int3
pcmpeqb
cli
xchg
sub
mov
mov
ret
ret
repnz
(bad)
cmp
je
ss
out
in
xchg
mov
inc
dec
xchg
ret
mov
pop
sti
(bad)
mov
or
sbb
clc
out
jnp
dec
jnp
mov
mov
fstp
xor
adc
scas
adc
mov
fwait
and
fwait
ret
mov
test
mov
or
imul
mov
mov
pop
jnp
or
test
ins
test
xchg
add
popf
aaa
repnz
out
retf
(bad)
repnz
out
mov
jecxz
fiadd
int3
sar
jecxz
retf
out
sbb
and
fwait
sbb
popf
add
pop
cmp
add
cmp
jmp
(bad)
push
xchg
inc
call
jo
(bad)
call
out
aam
test
sbb
pop
jae
lods
or
fs
popa
mov
ins
adc
cld
jmp
in
or
add
push
in
les
adc
aaa
or
hlt
jp
fwait
jnp
data16
inc
jnp
inc
push
adc
dec
jnp
in
mov
jle
or
jb
xor
aam
les
fiadd
mov
cld
aaa
xor
pop
sbb
andps
(bad)
idiv
xchg
sbb
cmps
popa
pop
addr16
xchg
pop
or
dec
mov
(bad)
ins
neg
pop
and
adc
jne
add
mov
or
jno
inc
mov
rol
pop
sub
pop
mov
cmp
pushf
sbb
fmul
fdiv
jecxz
fadd
push
in
push
mov
add
outs
mov
pop
pop
jecxz
rcl
xor
(bad)
mov
imul
cmps
pop
es
cli
shl
dec
pop
push
sbb
push
and
repz
test
mov
mov
paddb
(bad)
test
or
(bad)
popa
or
fidiv
cmp
add
pop
jl
mov
and
das
adc
pop
lea
cmp
and
jo
movs
ror
fimul
fidiv
std
ja
(bad)
jge
retf
in
or
(bad)
js
xor
aas
mov
cmp
adc
js
push
sub
retf
call
jo
(bad)
shr
cmps
(bad)
retf
retf
xchg
cmc
movs
xchg
(bad)
in
push
shl
les
enter
inc
push
lock
push
repnz
ret
ror
es
aam
fmul
push
cld
mov
(bad)
fcmovu
int3
xchg
out
les
lock
sbb
data16
lock
repnz
repnz
(bad)
hlt
cmp
lock
inc
pop
xor
jbe
mov
ror
lock
fiadd
mov
pop
mov
fmul
push
mov
mov
les
nop
icebp
(bad)
nop
loope
xchg
loope
xchg
loope
xchg
loope
xchg
loope
xchg
jmp
pusha
mov
ffree
xchg
(bad)
cmp
enter
(bad)
rol
dec
cld
(bad)
push
xlat
lods
out
mov
mov
mov
mov
and
cmp
cmps
push
add
ret
call
jae
sti
shl
add
cmc
ja
jnp
inc
pop
jge
pop
popa
inc
jp
cmp
cdq
or
fwait
retf
imul
cmc
hlt
xchg
loope
push
xor
pusha
loop
add
aad
data16
mov
adc
sub
les
sub
es
loop
mov
std
adc
mov
es
xchg
in
cld
sbb
sar
dec
pop
mov
shl
aad
sbb
jne
pop
mov
mov
int3
sub
(bad)
out
(bad)
jno
(bad)
popa
mov
nop
or
addr16
inc
in
aaa
push
mov
push
mov
data16
mov
jnp
cmp
mov
cmp
jl
shl
or
data16
mov
jg
test
or
cmps
inc
and
cmp
into
or
(bad)
sbb
adc
fs
cld
je
jge
sbb
pop
cmp
adc
adc
clc
ret
mov
stc
mov
(bad)
jmp
cmps
mov
dec
push
push
retf
xlat
cmp
cmc
dec
push
xchg
je
adc
inc
icebp
sbb
lahf
int3
pop
sub
mov
adc
in
pop
dec
fwait
pop
xor
ret
jo
in
lock
arpl
ja
xchg
push
mov
cmp
add
pop
xchg
dec
pop
adc
retf
inc
add
retf
sbb
outs
sub
fs
mov
sub
int
lods
xchg
cmp
mov
or
cmp
mov
pop
push
mov
cmps
ficom
cmp
movs
pusha
aaa
movs
inc
imul
jge
lahf
addr16
ret
unpcklps
mov
test
mov
jg
gs
call
stos
sbb
cmp
mov
jg
int
lahf
push
(bad)
outs
sbb
jg
mov
xor
cmp
(bad)
fsub
push
out
adc
xor
inc
pop
xor
cmps
outs
les
inc
push
cmp
aas
in
lahf
inc
mov
mov
adc
les
sbb
xchg
outs
scas
test
xor
pusha
and
(bad)
fmul
jl
push
jno
pop
stos
xchg
dec
xchg
inc
xchg
inc
xchg
pop
xchg
pop
nop
push
nop
push
nop
sub
nop
and
xor
nop
or
sbb
nop
adc
in
loopne
cld
nop
clc
nop
hlt
nop
lock
int3
nop
enter
rcl
adc
xor
mov
xor
mov
xor
xor
xchg
fist
fsub
fs
sar
jne
jno
sub
dec
test
cmp
cmp
les
mov
cmps
xchg
pop
sahf
and
jg
xchg
sbb
mov
in
sbb
int3
popf
push
test
lahf
outs
aas
jo
cmp
aam
or
xor
sub
mov
rcr
xchg
cmp
mov
sahf
push
enter
clc
(bad)
mov
jns
aad
xchg
ins
xchg
jge
repz
and
fisub
icebp
pushf
lds
ror
loope
jns
das
mul
cmp
cld
movs
mov
popf
add
cmp
mov
mov
in
dec
call
sub
ret
jmp
ret
das
xchg
fwait
call
jne
sar
sahf
int
jno
(bad)
sub
adc
sbb
out
xor
(bad)
fnstcw
rcr
nop
sti
pop
mov
scas
lahf
popa
mov
stos
sub
dec
cmp
cdq
cmps
adc
cmps
pusha
xor
or
dec
adc
jmp
or
test
shr
shr
jl
or
mov
stos
lahf
ins
mov
jmp
add
mov
push
call
shl
mov
xchg
ja
ficomp
sub
sub
lahf
daa
imul
hlt
pop
dec
pop
out
mov
jnp
aam
sub
mov
jge
cmp
pusha
dec
(bad)
fcom
movs
dec
mov
xchg
imul
add
fiadd
inc
mov
loopne
imul
jae
sar
out
es
sub
cld
jns
dec
xchg
daa
retf
mov
lods
jnp
xchg
lods
repz
ret
and
retf
pop
out
xchg
sbb
and
in
js
mov
push
stc
add
popf
clc
in
inc
in
pop
ins
xchg
fidiv
aaa
dec
xor
jne
cmps
pop
pushf
(bad)
cdq
mov
movs
adc
sub
mov
push
add
outs
outs
out
arpl
jb
cmp
sahf
push
popf
popa
cmp
inc
fcmovbe
imul
bound
repz
es
push
mov
js
cmps
jns
iret
test
inc
mov
pop
out
xchg
pop
lds
fsubr
add
pop
lea
dec
stos
fstp
daa
test
adc
test
cwde
imul
test
pop
sar
push
jecxz
jp
jge
data16
pop
push
pop
sbb
sti
shl
mov
xchg
cmp
test
outs
rcl
ins
fisubr
push
nop
mov
ror
lahf
jb
pop
cmps
cmps
sahf
fsub
pushf
imul
jno
out
popa
(bad)
or
les
jo
(bad)
dec
push
jne
lock
out
fs
test
cmp
in
lahf
add
mov
lahf
pusha
add
popf
or
mov
pop
jno
sbb
dec
xchg
loopne
mov
dec
in
std
and
xor
mov
xchg
adc
(bad)
ja
xor
popf
data16
(bad)
popa
adc
xchg
clc
addr16
add
lods
cwde
cmp
retf
jmp
sbb
pop
push
or
and
movs
mov
cmp
push
push
inc
and
cdq
adc
retf
mov
retf
les
mov
sub
push
aas
daa
pop
jmp
clc
or
xchg
pop
jae
add
data16
jg
push
pop
sub
mov
pop
test
fiadd
pop
in
xchg
pop
jp
popa
jmp
outs
add
outs
test
mov
out
scas
lds
add
(bad)
jne
sub
sar
in
add
xor
loopne
dec
jne
sub
mov
pop
xor
add
imul
jo
lods
test
(bad)
push
xchg
pop
sbb
in
clc
xchg
pop
test
adc
int
dec
nop
dec
xlat
aas
getsec
mov
mov
jns
sub
fild
mov
cmp
cmp
(bad)
aas
mov
adc
pop
out
jo
pop
inc
xchg
leave
jae
xchg
rol
mov
bound
daa
jg
jne
repnz
mov
xchg
sti
das
out
pop
adc
jmp
aam
int3
jg
xchg
mov
sub
loopne
jge
push
das
cld
cld
(bad)
mov
mov
mov
xchg
js
scas
mov
out
jg
sub
jmp
mov
sub
cmp
jge
cmp
loope
xchg
call
jnp
or
retf
shr
push
pop
xchg
lahf
jg
mov
fldcw
dec
add
cmp
cmps
mov
lods
arpl
sahf
push
retf
enter
mov
pop
lods
xor
jnp
add
rol
mov
jo
xor
ret
mov
jne
adc
mov
xchg
sub
mov
and
aam
lods
xor
imul
movs
adc
in
ficomp
test
xchg
cmp
jmp
mov
jmp
lahf
xor
jnp
(bad)
out
ret
imul
gs
je
cwde
ror
mov
or
xchg
mov
nop
fisubr
mov
aas
jmp
sub
or
mov
outs
rcl
iret
cs
adc
xchg
jo
mov
jns
pop
lahf
ds
jecxz
dec
sbb
add
test
sub
push
or
jecxz
nop
mov
popa
dec
pop
test
repnz
push
xchg
test
jnp
push
ja
jnp
pop
ret
sub
sahf
repz
or
jmp
xchg
mov
push
mov
push
dec
(bad)
mov
les
xchg
aad
cmp
add
sub
lods
mov
jg
arpl
xchg
(bad)
cmps
neg
inc
pop
pop
mov
aam
mov
imul
inc
jmp
(bad)
out
fsub
adc
and
ret
and
pop
iret
stos
push
imul
pop
(bad)
mov
cmp
mov
sub
adc
jno
cmps
lahf
inc
push
inc
pusha
test
inc
xchg
jns
retf
xchg
pop
jb
or
pop
cmp
mov
sub
mov
outs
scas
popf
mov
xchg
shl
jg
iret
jmp
cld
or
dec
adc
xchg
push
clc
or
daa
sub
mov
xchg
mov
mov
daa
sub
imul
imul
sub
jmp
cwde
pop
pop
mov
xchg
xchg
pop
xchg
jmp
leave
sub
clc
sti
lds
ficomp
cs
addr16
movs
test
jecxz
movs
shr
xor
mul
je
sub
(bad)
das
js
sub
in
imul
pop
cmp
xchg
fimul
imul
test
sahf
pop
mov
pushf
mov
sub
mov
(bad)
cdq
xchg
cwde
or
push
mov
xchg
jo
jmp
dec
adc
mul
dec
nop
lock
jnp
sub
push
mov
pop
cwde
sbb
nop
lods
sub
pop
ret
daa
adc
jecxz
hlt
lea
mov
ds
retf
(bad)
cmp
mov
loop
mov
bnd
xor
popa
push
es
rcr
cwde
cdq
addr16
int3
push
xchg
or
movs
ins
repnz
sbb
lods
(bad)
xchg
or
in
cmps
mov
test
inc
xchg
sbb
sbb
add
repnz
dec
fwait
in
lea
je
enter
xchg
gs
xchg
and
xchg
push
push
imul
clc
cmp
mov
test
xchg
jmp
mov
loop
out
or
lahf
popa
jbe
out
adc
pop
out
pushf
mov
push
test
sbb
or
repnz
out
mov
push
pop
(bad)
adc
ins
jg
pop
div
ror
mov
pop
fwait
in
adc
rcl
pushf
push
fwait
popa
add
or
aas
xor
in
sbb
sbb
jge
adc
mov
loope
dec
push
out
or
mov
mov
adc
stos
mov
pop
adc
cdq
and
fbld
stos
(bad)
xchg
mov
sar
leave
cmp
xchg
jnp
aas
add
sub
jg
mov
dec
xchg
retf
test
mov
dec
mov
cdq
lahf
cwde
sbb
std
xchg
(bad)
div
and
mov
icebp
add
pop
push
cmps
neg
mov
mov
xor
fwait
xlat
xchg
jns
pop
imul
out
cwde
push
loopne
ret
add
mov
cmp
jae
imul
adc
enter
adc
xor
enter
cld
adc
push
mov
and
sti
lods
xchg
sbb
outs
mov
xchg
push
pop
xchg
cmp
data16
outs
adc
adc
mov
sub
jnp
mov
cmps
imul
xchg
in
in
mov
mov
sub
xor
popf
aas
lods
mov
fwait
dec
aas
and
fmul
xor
inc
jl
out
cdq
int
rol
mov
fmul
xchg
sub
nop
push
cmp
aas
(bad)
cmp
jp
aam
std
test
movs
lock
test
xor
dec
sti
stc
iret
jmp
int
in
mov
inc
(bad)
fstp
mov
in
mov
or
sbb
loop
enter
pusha
mov
clc
or
inc
fsubrp
clc
(bad)
mov
rcl
mov
inc
xchg
xchg
loopne
lods
shl
mov
inc
xchg
push
cmp
jnp
bound
mov
repz
fwait
pop
dec
int3
jnp
mov
xchg
and
pop
jae
call
xchg
lods
pop
jg
clc
jb
lea
pop
adc
jns
sti
retf
jge
jnp
imul
std
dec
int3
pop
mov
sti
aas
adc
std
adc
cli
xchg
mov
movs
(bad)
out
cwde
push
in
(bad)
mov
bound
pop
and
std
push
add
inc
test
adc
ret
sub
lahf
push
mov
test
cmp
xchg
xchg
popf
jne
or
(bad)
cs
cdq
inc
cwde
movs
inc
out
or
push
or
pop
mov
pop
in
mov
sub
lea
inc
cmps
cs
in
xchg
dec
push
in
and
push
jmp
push
or
cmp
sbb
shl
adc
mov
xchg
add
sbb
cmp
outs
cmps
lahf
pop
in
inc
lods
xchg
mov
push
mov
in
std
cmp
imul
dec
pop
pop
cmps
xchg
cdq
call
mov
outs
jno
adc
rcl
dec
out
int3
xchg
xor
adc
cmp
or
xchg
cmps
je
add
(bad)
pop
fwait
mov
adc
hlt
mov
pushf
add
scas
aad
lock
gs
sbb
in
inc
xchg
cmps
mul
shl
xor
mov
popf
aam
aaa
push
std
push
xchg
movs
xchg
(bad)
dec
lahf
outs
test
mov
lods
jne
xchg
cmp
xchg
pop
mov
cmp
fimul
lds
popf
nop
inc
mov
outs
mov
loopne
mov
xchg
fist
sar
(bad)
lods
sbb
enter
adc
das
jnp
xor
loopne
cmps
(bad)
cmp
ss
mov
(bad)
sub
call
lea
ins
mov
das
or
push
mov
bound
adc
mov
jg
pusha
sbb
adc
dec
nop
adc
jecxz
sbb
out
sub
xchg
or
jg
gs
das
sbb
xor
loop
aas
mov
ins
cmp
mov
sub
std
ja
lahf
pop
mov
rol
rcr
sbb
punpckhbw
add
xchg
ror
fwait
cmp
push
sbb
retf
icebp
int3
add
pop
push
dec
or
mov
mov
cmp
mov
or
cdq
push
div
movs
jne
jp
sbb
jnp
mov
adc
ret
xchg
lods
push
mov
sbb
or
stos
int3
sahf
mov
jg
xchg
dec
call
test
pop
mov
(bad)
adc
and
inc
jle
test
fistp
or
sbb
ds
fwait
cmps
xchg
lahf
pop
outs
mov
jg
push
fwait
ins
inc
fimul
sbb
pop
fdiv
add
or
cli
(bad)
(bad)
outs
arpl
stos
xchg
movs
and
ret
(bad)
hlt
(bad)
mov
gs
in
cmp
cdq
shr
xchg
outs
shr
jns
(bad)
sub
xchg
xchg
shl
(bad)
cmp
mov
fild
arpl
dec
mov
pop
xchg
push
mov
mov
sub
mov
cmp
daa
xchg
mov
mov
mov
and
xchg
sub
mov
fisubr
fs
jmp
leave
cmp
pop
fidiv
stos
repz
adc
sub
add
mov
push
aas
xchg
clc
arpl
cmp
aas
aas
imul
daa
das
hlt
mov
xor
test
popf
xor
jne
ret
sbb
inc
mov
add
inc
addr16
clc
retf
jae
(bad)
xchg
push
mov
dec
sahf
xchg
xchg
lock
push
retf
scas
ja
adc
test
mov
enter
pop
fs
sub
(bad)
fwait
ja
in
jne
fwait
test
add
cli
cld
push
aaa
mov
sahf
sbb
fwait
xor
mov
mov
lods
push
cmc
sti
out
cmp
gs
rcl
xchg
xchg
adc
sbb
nop
jle
and
shl
(bad)
ja
jne
mov
aas
fsubr
(bad)
cmp
push
jno
ror
xchg
push
xor
or
sub
fisubr
adc
das
shl
ins
(bad)
jae
out
mov
dec
xchg
jo
add
xchg
pop
mov
enter
or
stos
cmps
mov
and
xchg
pusha
mov
jg
jne
movs
adc
jne
inc
pop
in
in
push
adc
pusha
movs
mov
dec
out
mov
popf
sahf
ret
jmp
enter
mov
mov
neg
mov
mov
(bad)
sub
test
movs
clc
xchg
nop
pop
dec
(bad)
jns
daa
mov
outs
dec
mov
jno
jg
fwait
pushf
cs
repz
sar
setbe
xor
lock
mov
xchg
jmp
mov
jmp
lahf
dec
cmp
movs
fstp
pop
push
sbb
jnp
mov
pop
stos
cwd
iret
in
fcom
dec
xchg
xor
mov
in
inc
xchg
jno
cmps
mov
ja
jno
mov
add
push
mov
das
imul
mov
cs
cs
add
jns
xor
bswap
cld
push
sub
mov
xchg
mov
test
pop
imul
rcr
inc
cli
in
push
mov
mov
hlt
mov
(bad)
movs
in
mov
jno
scas
xor
mov
xchg
cld
sub
xchg
add
jnp
pop
lods
add
pop
jno
xchg
jmp
clc
sbb
fidivr
cmp
add
test
stc
cdq
xlat
cwde
mov
jns
xchg
mov
in
xor
scas
sub
jmp
int3
pop
loopne
fcom
stos
pop
ret
popf
dec
dec
scas
test
fadd
popa
jmp
cwde
and
jl
mov
mov
dec
loope
dec
xchg
popa
xchg
jbe
cli
mov
aas
xchg
mov
add
stos
arpl
retf
pop
adc
sub
jmp
xor
mov
cmp
mov
addr16
in
mov
neg
ins
pushf
or
mov
shr
call
rcr
cmp
or
push
sti
xchg
outs
call
jp
or
inc
fptan
scas
mov
sbb
stos
scas
call
test
inc
add
mov
hlt
ret
xchg
push
xchg
xchg
xchg
bound
outs
or
ja
inc
pcmpgtd
out
lods
popf
popa
pop
in
sub
pop
lahf
mov
out
dec
(bad)
cli
rol
xchg
mul
inc
xchg
xor
repz
adc
sbb
push
mov
cmp
pop
mov
out
mov
xor
cmps
mov
jnp
xchg
cs
mov
mov
mov
daa
sub
adc
leave
ret
sub
out
push
je
dec
dec
(bad)
fwait
cmp
retf
xchg
sbb
sub
xchg
(bad)
sub
xlat
dec
loop
ins
nop
push
push
outs
das
addr16
mov
adc
mov
sub
fisub
(bad)
sar
out
mov
fwait
jo
stos
jnp
and
cwde
dec
aas
mov
mov
xchg
pop
pop
ds
add
xchg
pop
push
add
enter
cwde
ds
inc
test
mov
jecxz
mov
test
rcl
push
mov
push
rcr
adc
jmp
lea
jb
pushf
cmc
clc
call
mov
call
loop
mov
push
(bad)
cmps
or
(bad)
jecxz
js
in
xchg
popa
retf
loop
mov
push
loopne
in
cmp
and
mov
cmp
mov
sub
mov
mov
outs
mov
sbb
(bad)
ja
mov
adc
xlat
repnz
in
ret
(bad)
jge
sbb
xor
fistp
add
jo
(bad)
fistp
outs
pop
add
mov
pushf
lea
jb
cmc
push
test
cmp
pusha
lea
jae
shr
and
sub
sar
mov
cmc
mov
clc
clc
sub
movzx
mov
jmp
setae
push
pusha
jmp
pushf
pusha
lea
jb
bt
cmp
jmp
jmp
mov
(bad)
fadd
or
inc
pop
leave
mov
fs
lods
jns
imul
idiv
data16
dec
mov
stos
xlat
sahf
popa
push
mov
mov
sbb
xlat
sbb
push
or
sbb
and
movs
mov
daa
iret
adc
push
mov
out
push
mov
dec
pop
mov
shr
inc
mov
jbe
retf
mov
mov
leave
sub
int
inc
test
rol
push
(bad)
or
mov
in
(bad)
loop
jnp
jae
scas
push
or
cmp
fwait
shl
and
mov
sbb
cmc
jl
repnz
sahf
mov
lea
push
xchg
jbe
xor
mov
lock
in
jnp
mov
jns
adc
sbb
push
mov
dec
call
fwait
pop
push
(bad)
xchg
clc
movs
test
fdivr
repz
mov
test
aaa
jmp
es
in
dec
inc
jg
push
mov
mov
mov
mov
push
inc
jns
out
mov
or
cmp
ja
cmp
rcr
sub
bsr
shrd
cmp
bsf
add
shld
rcl
and
bsr
mov
ror
sar
pushf
inc
mov
clc
repnz
call
jmp
jno
cvtps2pd
(bad)
jmp
cmc
leave
jmp
mov
inc
xor
shl
dec
scas
adc
sar
jnp
out
push
lods
popa
jnp
jbe
mov
mov
outs
dec
(bad)
std
dec
in
out
out
lods
retf
jle
les
push
xchg
into
and
jle
cmp
lods
ret
pop
stos
sbb
stos
push
pop
mov
ss
movs
pop
jmp
rol
or
mov
mov
lods
psraw
xchg
std
gs
push
idiv
pop
adc
xchg
sub
xchg
int
push
(bad)
cmp
loop
push
inc
into
sub
inc
jg
scas
aas
int3
stc
mov
adc
cmp
dec
and
stos
pop
xchg
fs
ret
lock
inc
punpckhbw
add
imul
daa
cmp
test
inc
sub
sbb
cmp
das
mov
cmp
ss
xchg
(bad)
sti
mov
call
int
cmp
retf
shr
sbb
jae
push
(bad)
jmp
jmp
sbb
mov
xor
loopne
out
leave
and
jae
mov
leave
dec
out
out
mov
xchg
sub
cld
xor
adc
or
dec
xchg
pop
xlat
mov
dec
lods
fwait
lds
cmp
xchg
pop
inc
femms
and
(bad)
enter
jb
xchg
loopne
fidiv
ja
xlat
fist
push
(bad)
jmp
call
sub
or
out
jo
scas
repnz
cmp
int3
inc
cmp
add
cli
adc
mov
outs
mov
pop
aad
inc
imul
movs
push
sub
arpl
pop
add
out
inc
lods
mov
dec
mov
mov
adc
mov
inc
test
jl
fnsave
scas
xchg
or
leave
shr
nop
add
inc
fcomp
xchg
mov
sub
sar
xor
jo
mov
push
(bad)
enter
repnz
mov
dec
cmc
push
jae
stc
addr16
xchg
mov
cmp
push
sahf
mov
dec
stos
add
xor
jmp
xor
stos
btr
dec
cmp
retf
call
and
imul
pop
xchg
pop
mov
sub
movs
mov
xchg
movs
cmc
jmp
ds
cmp
lahf
cmps
outs
mov
scas
out
mov
cmp
add
mov
setae
xlat
jb
pop
push
mov
jns
stos
dec
imul
pop
or
push
js
out
add
xchg
sbb
cli
test
sub
test
dec
inc
pop
retf
lea
xor
mov
or
pop
ret
retf
inc
imul
mov
lahf
jg
dec
aaa
xor
aad
les
xchg
popa
bound
pop
mov
sub
sbb
jmp
cmp
pop
ror
push
push
pop
and
leave
retf
(bad)
imul
iret
push
fucomp
pushf
mov
dec
xchg
inc
sbb
neg
ret
xchg
mov
int
cmp
cs
cmps
dec
fs
jo
jecxz
in
pop
push
mov
les
movs
stos
jnp
pushf
mov
outs
xlat
(bad)
push
fucomp
mov
inc
sbb
mov
lods
inc
rol
push
(bad)
ficom
pop
mov
cmp
sbb
fdivr
out
fsubr
inc
ja
dec
or
sti
stc
stos
push
dec
(bad)
mov
jge
xchg
ja
lods
push
into
std
ds
mov
aad
mov
sub
sub
push
cmps
sti
mov
loopne
popf
mov
icebp
or
int
xchg
into
stc
mov
jle
outs
adc
jnp
push
sbb
dec
mov
scas
in
sbb
cmp
lods
cmp
dec
sbb
sub
adc
or
and
(bad)
pop
popa
stc
pop
sub
mov
jae
rol
repnz
xchg
push
cmp
arpl
call
cli
stc
aam
mov
jg
imul
or
loope
xchg
dec
lock
imul
pusha
mov
add
sub
mov
xlat
adc
ret
pop
xchg
inc
mov
sbb
aaa
out
xor
jnp
xor
sbb
in
cmp
lock
mov
repnz
retf
inc
sub
jnp
push
(bad)
fnsave
into
jns
pop
lea
cmps
imul
not
fistp
stc
add
stos
push
leave
pop
jno
sbb
dec
call
jp
xchg
gs
push
cmp
rcr
dec
in
sub
ja
add
(bad)
psllq
shl
std
jbe
fmul
aaa
movs
pop
cmp
int3
ss
retf
adc
xchg
dec
pop
push
das
test
aas
bound
adc
js
sub
cmp
stos
jg
mov
lods
sub
cld
mov
imul
les
sbb
pop
outs
inc
sub
std
dec
dec
mov
inc
push
(bad)
push
mov
add
cmp
(bad)
in
test
out
mov
cmps
loope
fidiv
jns
lds
mov
xchg
(bad)
jo
push
ss
dec
outs
adc
and
(bad)
call
loope
jae
inc
mov
pop
xor
push
and
sti
scas
cmps
mov
mov
mov
and
test
push
pop
push
lea
(bad)
add
cmc
pop
xor
dec
test
call
test
call
rol
dec
setne
add
lea
jge
push
ror
jmp
add
setae
mov
bt
mov
cmc
test
cmp
clc
test
call
call
pusha
pushf
call
xchg
jle
inc
push
(bad)
push
sbb
(bad)
out
jnp
xor
shl
out
ins
mov
push
sub
push
repnz
fdiv
jo
je
js
out
(bad)
sbb
retf
rcl
or
jp
inc
addr16
dec
push
test
test
out
hlt
sahf
mov
js
adc
pop
shl
sti
pop
xor
jno
imul
inc
push
mov
xchg
mov
sbb
lods
mov
inc
or
add
inc
pop
xor
cmp
jle
xor
push
lea
retf
sub
pop
(bad)
or
xor
xchg
jne
push
out
aas
fs
out
push
xor
cmp
push
pop
fnstsw
popa
retf
lods
cmp
rol
adc
inc
cmp
pop
jns
inc
mov
dec
cmp
cwde
aad
jbe
es
daa
jge
in
adc
and
pushf
push
call
int3
xchg
cmp
out
inc
push
(bad)
shl
cmps
xor
cmp
add
ss
arpl
pop
mov
mov
nop
adc
scas
xchg
fimul
sbb
movs
adc
ss
lock
test
sbb
test
cmp
aad
adc
adc
stos
dec
sar
pop
mov
loope
fadd
xchg
lock
stos
pusha
jmp
cmp
ret
mov
daa
inc
dec
and
loopne
aad
xlat
(bad)
dec
stos
pop
inc
jmp
cwde
es
lds
outs
xchg
imul
loope
call
sub
ja
pop
add
push
lea
jmp
add
dec
jo
outs
push
jb
outs
je
jb
add
pushf
mov
stc
call
pusha
jmp
mov
(bad)
pop
shl
push
jecxz
ss
mov
gs
jg
popfw
mov
es
xchg
sti
ret
(bad)
repnz
stos
xchg
cld
sbb
into
int
lea
jmp
xchg
test
nop
inc
je
xchg
gs
lea
lods
mov
pop
jp
inc
mov
popf
pop
mov
std
sbb
pop
cmp
sar
scas
inc
adc
(bad)
and
rcr
repz
add
popf
add
clc
je
mov
aad
mov
in
out
lea
ja
pusha
jmp
lea
ja
push
imul
test
cmc
mov
clc
add
pushf
push
pushf
pushf
lea
jmp
not
bt
cmp
pusha
lea
seta
pop
movzx
bswap
mov
pushf
call
dec
push
inc
sbb
mov
xchg
lahf
mov
cmps
push
sub
and
int3
mov
xchg
in
xor
lds
mul
sbb
xchg
mov
stos
jnp
inc
cmovp
cmp
fist
mov
aad
adc
inc
and
jge
lahf
or
xchg
adc
ss
ds
add
and
xor
fidivr
loope
sahf
cli
mov
mov
add
pop
jmp
(bad)
loope
inc
stos
shr
out
xor
cmp
cmps
out
push
push
rcr
rol
stc
shr
test
test
inc
or
jo
mov
dec
sbb
inc
clc
aam
(bad)
mov
pop
sahf
xchg
test
scas
out
fist
out
sar
mov
xchg
push
jecxz
movs
mov
cmp
inc
sub
xor
loop
xor
sbb
call
push
sub
mov
add
popf
setns
js
push
(bad)
lea
jns
mov
hlt
into
push
loopne
cmp
pop
mov
into
xor
push
jbe
dec
jge
out
cmp
sbb
jle
(bad)
mov
es
repnz
mov
popa
test
test
data16
jp
push
rcl
loope
rol
stc
sbb
fs
xchg
aas
(bad)
xchg
pop
or
outs
dec
out
push
mov
call
scas
mov
mov
inc
pop
loope
dec
(bad)
push
stc
jecxz
and
sbb
pushf
outs
ja
das
aaa
outs
in
div
jecxz
jmp
idiv
cmp
jle
cmp
and
jle
aam
mov
cmp
push
ror
lds
out
inc
xchg
or
pusha
pop
aad
repz
jno
add
or
and
ficomp
inc
push
inc
mov
mov
xchg
(bad)
pop
add
aad
inc
rep
xor
pop
jmp
mov
dec
rcl
or
add
gs
add
cmp
mov
sub
xchg
loope
adc
inc
jge
test
repnz
xor
push
aas
out
pop
test
lea
pop
lods
call
outs
push
js
adc
lods
xor
pop
xor
std
out
pushf
shl
dec
iret
push
add
dec
and
aaa
pop
fistp
ja
cli
out
mul
inc
ficom
call
mov
mov
mov
adc
rcr
not
xor
adc
cmps
fucom
popf
test
jmp
daa
pop
iret
sbb
jge
dec
pop
or
xor
jmp
mov
cli
add
xchg
sbb
scas
push
mov
xchg
rcl
lods
and
or
xchg
pop
shl
loop
shl
mov
loopne
call
pusha
(bad)
jnp
arpl
sub
rol
and
dec
and
or
lods
out
push
fdivr
cmc
sub
sahf
or
cmps
int3
inc
ins
ret
mov
or
cmp
jns
adc
or
in
jecxz
daa
scas
data16
push
dec
mov
or
sub
dec
test
jmp
out
jnp
add
pop
add
les
aas
test
pop
dec
add
adc
pusha
ret
add
imul
movups
stos
cmc
rcr
out
pusha
xchg
daa
dec
pop
inc
dec
xor
rcr
or
xchg
aaa
test
cli
retf
mov
aaa
mov
xor
push
les
(bad)
cli
pop
xchg
fisttp
bound
mov
pusha
fs
ret
sub
dec
dec
pop
push
push
xchg
xor
add
jae
icebp
lods
hlt
cmc
sbb
mov
mov
fsubr
(bad)
fdivr
sbb
shr
sbb
mov
push
mov
lds
dec
push
js
call
std
dec
mov
pop
push
xor
sub
cmp
or
jns
sbb
std
xchg
xor
mov
lods
(bad)
push
fild
cmc
mov
adc
into
test
in
dec
mov
daa
xchg
cmp
push
push
and
xchg
sbb
ss
ficomp
sar
mov
jecxz
mov
ds
lods
mov
arpl
mov
outs
jb
test
(bad)
(bad)
test
dec
lods
mov
add
or
test
xchg
lods
sti
inc
stos
ret
cmp
mov
adc
or
fs
adc
repnz
and
hlt
and
sub
mov
stos
aam
je
lock
fdecstp
sub
or
ins
aad
mov
ret
clc
test
js
add
jecxz
and
into
repnz
mov
imul
mov
sti
rcl
sbb
or
stos
std
cmp
jbe
arpl
outs
jae
(bad)
div
mov
push
fimul
inc
jae
in
mov
pusha
retf
loopne
xchg
xchg
pop
pop
mov
xchg
mov
pop
dec
add
clc
sti
pop
pop
dec
cmp
inc
dec
add
(bad)
mov
pop
mov
jl
mov
pushf
outs
clc
in
rcr
pop
inc
cmp
adc
shr
test
js
jge
fimul
shl
dec
jo
aas
mov
mov
fstp
mov
dec
adc
loopne
retf
xor
mov
mov
push
stc
push
adc
les
and
lds
adc
sti
sbb
mov
fs
cmp
cmp
mov
or
inc
jns
inc
out
ins
jne
enter
test
sub
aaa
xor
in
cmp
cs
or
jge
ror
xchg
stos
mov
mov
cdq
jno
mov
rol
das
or
cmp
fidivr
cld
in
outs
lods
pop
jg
or
sbb
fnstenv
idiv
inc
(bad)
cmp
xchg
jno
push
pop
ins
test
push
cmp
scas
cmp
iret
into
or
jl
sub
icebp
xchg
jb
std
pop
xchg
cmp
push
int3
ror
jo
cmp
popf
idiv
fdiv
ret
and
pop
nop
mov
bound
ja
das
xlat
loopne
or
and
push
int
std
(bad)
cs
xlat
(bad)
cmp
stos
iret
push
or
mov
(bad)
xchg
mov
mov
dec
sti
nop
dec
or
adc
push
xor
jbe
cmps
jb
sbb
sub
popa
fisttp
loopne
xchg
in
cwde
iret
inc
inc
mov
push
pop
nop
pop
dec
inc
rcl
sbb
sbb
repnz
adc
or
adc
imul
ds
data16
ret
imul
ret
fwait
inc
clc
addr16
sub
shr
dec
xchg
das
movs
(bad)
jmp
sub
sub
add
mov
xchg
cmps
cmp
pushf
in
jo
xor
push
xchg
(bad)
imul
ja
pusha
test
(bad)
dec
mov
sbb
and
cmp
add
xor
push
call
dec
ja
ins
mov
cmp
ins
stos
out
out
mov
mov
add
mov
cmp
mov
pop
push
nop
fnstcw
std
aaa
ss
hlt
dec
adc
neg
inc
xchg
scas
das
mov
add
movs
cmp
xchg
into
fs
call
retf
jecxz
clc
lahf
test
add
into
jmp
inc
lods
hlt
jne
pushf
test
test
into
cmp
cmps
inc
cmp
push
mov
cld
jae
cmp
or
mov
and
cmp
mov
cs
push
mov
add
mov
scas
push
dec
adc
adc
mov
pop
dec
mov
mov
ds
mov
mov
or
and
mov
inc
ds
jbe
add
inc
cdq
push
mov
ret
and
dec
inc
ret
test
scas
ja
in
and
dec
mov
aas
mov
das
fwait
or
jo
adc
sbb
cld
movs
outs
cmp
sub
stc
dec
(bad)
es
mov
mov
rol
(bad)
cmps
inc
leave
dec
and
cmp
add
aad
pop
sub
pusha
cmp
or
sub
fisub
(bad)
loope
jmp
or
test
xchg
out
mov
mov
fs
xchg
popf
sub
sub
xor
mov
mov
and
or
or
jl
and
pop
fidiv
cmp
pop
aas
adc
pop
gs
cmp
lods
mov
stos
lods
cmc
mov
or
stos
pushf
fstp
xchg
push
dec
pop
push
sub
push
rcr
inc
add
movs
cdq
or
mov
pop
(bad)
ror
into
aam
mov
mov
push
pop
jmp
adc
aas
cmp
sti
mov
test
lods
cld
add
xchg
shl
dec
daa
mov
test
test
inc
test
cs
inc
dec
mov
lea
pop
mov
sbb
and
add
js
fsubp
jo
add
sti
mov
mov
es
jecxz
mov
inc
mov
sub
ret
jge
and
mov
fisub
sbb
test
pop
mov
mov
repnz
xor
mov
inc
mov
fwait
cmc
push
into
xor
fcomp
retf
cs
pop
out
pop
shr
xchg
adc
mov
lods
mov
mov
and
rol
sahf
cmp
inc
inc
xchg
mov
mov
pop
aad
dec
push
dec
add
dec
inc
ds
sbb
add
pop
pop
stos
loop
adc
dec
imul
cmp
cli
jg
pop
inc
ret
xchg
and
jge
sub
(bad)
pop
pop
out
ret
xor
shr
ins
ins
stos
inc
push
pop
lods
jecxz
jb
ja
push
(bad)
sahf
and
jmp
popa
mov
jbe
mov
xor
mov
add
inc
mov
mov
lea
mov
mov
mov
pop
lods
movs
mov
mov
and
setae
push
cmp
test
sub
sahf
lahf
push
dec
addr16
and
and
dec
or
xchg
(bad)
popf
inc
outs
xchg
pop
inc
push
dec
inc
stos
hlt
add
and
repnz
clc
jae
aad
xlat
cmp
imul
movs
sub
mov
mov
sti
push
pop
inc
(bad)
xor
mov
(bad)
pop
retf
sub
push
xchg
adc
divps
jmp
aaa
pop
rol
retf
and
in
(bad)
into
retf
push
xchg
orps
out
pop
mov
cmp
pop
push
mov
mov
cmp
fmul
mov
jns
lds
and
xor
cmp
jns
daa
into
jle
dec
invd
or
dec
mov
jnp
mov
pop
xchg
call
push
lock
cwde
cdq
fnsave
adc
mov
out
mov
xchg
pop
repz
jae
jno
fstenv
loope
add
cmp
lahf
popf
xchg
sub
cdq
sub
ja
adc
stos
inc
mov
xchg
adc
cmp
idiv
dec
rep
outs
mov
movs
test
inc
(bad)
cs
jae
cdq
ss
outs
jo
or
fs
movs
jno
lods
sbb
pop
and
(bad)
mov
push
mov
mov
(bad)
or
cmp
or
das
mov
add
sbb
rol
jle
or
fsubr
cli
out
dec
push
or
add
fidiv
imul
push
je
push
inc
cmps
dec
out
mov
sub
push
out
and
adc
movd
jmp
fsub
daa
xchg
xchg
retf
rol
enter
mov
cdq
xor
test
shr
and
sahf
(bad)
xor
gs
popf
in
mov
push
popf
call
and
sbb
xchg
fcomip
movs
fisttp
mov
jne
pop
out
mov
cld
pop
ud1
stc
jmp
xor
cdq
(bad)
push
movs
jecxz
imul
into
adc
sub
daa
cmp
mov
imul
ins
jl
mov
push
xchg
adc
cmc
cmp
mov
or
shr
adc
or
jge
aam
cld
stc
scas
test
loopne
mov
sbb
fld
out
add
sbb
jle
dec
ror
js
scas
mov
xchg
add
in
std
jns
(bad)
push
xor
movs
sbb
inc
cmp
fnstsw
int3
jbe
popa
icebp
push
inc
(bad)
lock
mov
repnz
xor
cmp
lock
lods
xor
ror
cs
shl
jp
dec
pop
xchg
fucom
(bad)
in
mov
popf
mov
ja
lea
push
add
xchg
inc
jp
pop
xchg
cld
push
cli
aas
test
jmp
or
push
mov
popa
cmp
arpl
add
or
mov
shr
pop
retf
mov
adc
mov
xchg
cwde
or
and
mov
xchg
test
pusha
js
mov
inc
dec
xchg
jmp
aaa
xchg
fsubr
cmp
xchg
std
push
js
and
je
jp
repnz
dec
push
repnz
jge
jns
hlt
lock
adc
xchg
out
push
fcomp
fbld
pop
sub
or
iret
cmp
and
adc
mov
data16
lock
mov
xor
test
jnp
test
and
fld
out
jbe
pusha
mov
jno
das
xor
imul
sbb
aaa
jb
mov
ins
mov
dec
fcom
jb
or
push
mov
pushf
sbb
sbb
bound
push
push
push
dec
and
stc
mov
mov
push
sbb
mov
jecxz
push
cmps
inc
ja
xchg
cmp
loop
mov
ror
add
ret
imul
lds
int3
mov
inc
sub
scas
aas
add
stos
mov
(bad)
and
jmp
dec
in
add
pop
inc
pop
leave
add
ror
or
inc
cld
test
rcr
inc
mov
dec
adc
sbb
shl
or
dec
into
mov
(bad)
retf
scas
cmp
cdq
movs
inc
xor
clc
adc
aas
lock
and
push
sub
stos
cmp
mov
sbb
arpl
mov
sub
inc
jo
push
xor
rcr
fmul
lods
add
inc
xchg
ins
cmc
outs
ds
sbb
lods
mov
xchg
push
pop
mov
out
dec
mov
scas
jno
sbb
ds
xchg
pop
out
add
ret
movs
xchg
neg
pop
adc
stos
out
dec
aad
movs
mov
fistp
sub
xor
jbe
add
mov
jl
arpl
arpl
and
pop
push
adc
fsub
addr16
mov
jno
inc
add
fidiv
pop
jmp
adc
mov
shl
add
dec
std
test
arpl
sbb
int
fnop
cmp
adc
inc
shl
aaa
movs
dec
xor
pop
pop
pop
int3
mov
mov
(bad)
lock
pop
add
mov
pop
dec
add
push
aaa
cmp
mov
imul
pop
sbb
push
add
sub
xchg
xchg
shr
test
xor
mov
or
jo
(bad)
jns
sti
mov
rol
(bad)
out
cli
movs
dec
adc
jmp
pushf
xor
dec
mov
mov
mov
and
(bad)
mov
xchg
push
ds
outs
mov
jnp
mov
cmp
sbb
cmps
and
mov
or
dec
jecxz
sbb
inc
(bad)
lods
mov
lock
mov
push
scas
je
adc
in
out
and
hlt
mov
mov
xchg
cdq
fs
lods
test
or
push
in
stc
call
adc
push
popf
stc
pop
lock
xchg
and
push
neg
lds
mov
lock
adc
adc
xchg
or
jae
mov
xchg
sub
mov
jae
scas
mov
push
mov
ds
xchg
std
jo
mov
out
mov
mov
mov
or
add
push
cmps
scas
rol
sub
or
movs
sbb
adc
das
cli
cdq
lods
rol
mov
mov
cmp
xchg
les
push
rol
aaa
mov
add
or
ds
aaa
push
sbb
mov
repnz
into
xchg
cdq
mov
or
outs
and
cmp
jmp
mov
push
test
in
dec
stc
dec
dec
test
cmps
mov
sub
dec
push
out
mov
test
test
lahf
cmp
jb
push
rcr
jae
aam
clc
cmp
(bad)
std
scas
mov
icebp
pusha
loopne
outs
daa
mov
(bad)
xchg
sbb
retf
ret
xor
in
pop
in
outs
inc
cs
mov
fwait
loopne
push
ret
sti
add
out
cmc
loope
pop
into
gs
jle
sbb
out
nop
repnz
pop
cmps
cmc
dec
pushf
je
pop
pop
xchg
add
mov
lahf
or
adc
pop
sub
dec
sub
aad
hlt
xchg
jmp
jp
sub
call
add
xchg
mov
xchg
ins
add
jp
js
sub
cli
push
push
sub
das
inc
in
pop
sub
sbb
ja
or
daa
mov
xchg
or
fidivr
xor
and
neg
sub
pop
dec
int3
enter
push
shr
sub
jne
mov
mov
leave
add
inc
cmp
mov
mov
inc
rcl
outs
and
arpl
test
int3
test
pop
push
cmps
jge
retf
cmp
shl
mov
fs
cs
push
mov
jns
js
cli
dec
pop
xlat
cmps
xor
inc
js
or
jmp
sbb
fcomp
or
(bad)
jmp
mov
lahf
popf
and
add
call
adc
je
out
dec
jl
pop
xor
or
pop
js
pop
pop
idiv
cmp
retf
sbb
pop
jmp
adc
imul
sti
(bad)
ficom
lods
movs
jnp
sbb
pop
sub
cmp
adc
(bad)
dec
push
enter
data16
test
add
inc
mov
cmp
or
adc
jnp
pop
test
inc
sbb
stos
push
lea
icebp
pop
ds
or
cs
in
aaa
movs
fstp
mov
inc
aas
add
xchg
arpl
mov
je
inc
popf
in
xchg
add
xchg
retf
adc
popf
in
add
push
cmp
xchg
in
cmps
jecxz
addr16
ss
push
jmp
outs
cdq
call
and
cmp
icebp
fisttp
push
dec
test
ja
cs
xchg
dec
ficomp
aas
jmp
mov
cmc
sub
jecxz
je
retf
into
cmp
mov
push
mov
adc
les
adc
adc
cli
not
cmc
mov
call
sbb
pop
into
dec
neg
je
pop
imul
cld
add
aam
sbb
adc
and
mov
out
mov
mov
sar
and
fwait
in
out
pop
mov
stos
into
sbb
mov
xchg
cdq
cmc
jne
sub
ret
icebp
mov
push
iret
gs
dec
div
cmp
pop
mov
cmps
test
push
pop
arpl
inc
inc
jo
xor
test
or
add
repz
jp
sbb
sub
popf
daa
aas
jecxz
xor
xor
(bad)
push
(bad)
mov
in
mov
leave
cmp
jbe
inc
sbb
sub
shr
jle
in
dec
idiv
mov
and
pop
mov
inc
shl
in
inc
jmp
push
or
mov
sbb
push
sbb
mov
repz
iret
cmps
test
xchg
std
and
into
shr
xor
add
add
(bad)
ds
int3
test
push
xchg
add
push
inc
jecxz
inc
call
cli
iret
ja
fld
xor
add
test
pop
fistp
jmp
lods
and
dec
mov
mov
shr
add
test
mov
push
sub
stc
js
sbb
(bad)
push
pop
aam
or
jp
xchg
lock
xor
mov
push
gs
lahf
jge
aam
(bad)
pushf
inc
das
mov
add
fild
mov
outs
fcomp
xchg
add
mov
pop
mov
jmp
mov
add
aas
push
ror
adc
aad
stos
inc
fsub
outs
lds
push
mov
cmp
and
daa
mov
jmp
call
imul
pop
fwait
sti
dec
iret
cld
add
data16
push
jp
aad
inc
mov
cwde
pop
cdq
rcl
cmc
sub
bound
adc
loopne
rcr
push
adc
and
cwde
arpl
sahf
sbb
push
mov
loopne
pop
imul
dec
mov
add
imul
mov
mov
pop
xor
in
aaa
shr
popf
push
pop
inc
add
fs
cli
fisttp
inc
mov
add
ins
mov
jp
push
clc
add
call
pushf
scas
por
jp
ret
cld
and
sub
stos
sub
pop
adc
jg
pop
ffree
cld
sti
fmul
sub
cmps
cs
or
lods
jmp
jmp
scas
mov
and
sar
cmps
jne
cdq
pushf
mov
popa
mov
rcr
mov
outs
leave
jb
jno
out
fs
pushf
iret
enter
xchg
mov
fisub
fsubrp
ret
mov
mov
and
fisubr
mov
out
and
cvtpi2ps
pop
cmps
jl
js
es
mov
test
lods
xchg
mov
fmul
(bad)
iret
pop
cmps
mov
mov
and
mov
mov
(bad)
and
mov
mov
lods
pop
mov
inc
dec
scas
imul
aas
rcl
stos
mov
mov
push
push
es
sub
ret
mov
in
inc
xchg
mov
jg
sbb
jb
mov
mov
ror
pop
jne
stos
test
out
mov
lahf
(bad)
and
dec
les
mov
fldenv
push
dec
pop
test
dec
jle
pop
or
stos
mov
sub
cld
cwd
fwait
mov
imul
in
pop
call
arpl
xchg
scas
mov
dec
xchg
mov
mov
pop
cmps
(bad)
ret
xchg
xchg
mov
and
in
lods
adc
cwde
and
xchg
icebp
test
dec
mov
mov
sub
call
lods
jmp
lock
cmp
popa
add
dec
std
out
cmps
nop
scas
cs
mov
cs
outs
jbe
out
xchg
add
das
jno
imul
sub
jmp
pop
add
jge
outs
in
and
arpl
fst
(bad)
sub
ficomp
scas
daa
cs
(bad)
mov
outs
shl
sti
call
inc
mov
and
xchg
test
retf
popf
shl
mov
(bad)
ds
lods
(bad)
and
lea
ja
mov
mov
jbe
and
pop
push
inc
push
(bad)
(bad)
sahf
push
cwde
dec
lods
ja
mov
js
jp
ja
jbe
add
jg
xor
aaa
mov
popf
jg
mov
push
shr
and
loop
in
pop
stos
pop
dec
cld
push
push
mov
pop
mov
fld
pushf
inc
push
mov
addr16
cmps
nop
jae
pop
pusha
movs
mov
sub
arpl
mov
fist
aaa
push
ficomp
jae
mov
xchg
push
sub
(bad)
mov
dec
pushf
ds
sbb
jbe
imul
xchg
mov
jle
mov
(bad)
lds
ins
cmp
out
mov
mov
mov
stos
jecxz
in
(bad)
out
iret
mov
cmp
sub
pop
add
mov
pop
lods
es
ficomp
icebp
mov
loop
xchg
mov
mov
mul
cwde
fimul
popa
xor
pop
mov
(bad)
in
jge
ret
add
js
daa
jle
in
inc
push
ins
lahf
cmp
mov
ficom
mul
sbb
and
inc
js
fisub
jns
and
fld
and
cmc
pushf
mov
and
xchg
sub
mov
popa
test
sub
sti
shl
adc
adc
mov
jl
es
sub
mov
mov
ins
cmps
jg
stos
sub
cmp
push
pop
jl
push
mov
dec
pop
add
mov
mov
or
sub
loop
adc
mov
inc
ror
cmp
fs
test
push
in
mov
pop
imul
mov
scas
sar
ins
scas
push
imul
ret
test
repnz
int3
cmc
fs
ins
shr
mov
and
xchg
cmp
push
xor
mov
or
mov
mov
mov
pop
out
shr
mov
mov
mov
sub
cmp
mov
clc
out
lock
shr
(bad)
(bad)
pop
mov
(bad)
pop
push
mov
mov
ins
fisttp
inc
jno
nop
mov
ins
pop
(bad)
jmp
sub
and
imul
movs
hlt
mov
ins
inc
mov
lods
mov
(bad)
mov
pop
bound
jne
push
stos
daa
out
mov
cld
stos
sahf
lds
lea
jae
addr16
js
mov
adc
sub
pop
data16
fidivr
adc
dec
shl
fiadd
jb
and
xor
addr16
sub
xchg
add
inc
mov
pop
(bad)
in
pop
out
out
ins
test
shl
(bad)
jl
push
std
dec
push
shl
fmulp
dec
and
arpl
mov
pusha
ins
(bad)
daa
pop
jge
and
mov
pusha
out
ficom
inc
imul
mov
jbe
cmps
daa
sbb
mov
(bad)
pop
jns
outs
mov
add
jns
movs
push
test
ds
mov
ret
inc
pop
mov
scas
and
movs
jnp
inc
push
push
jg
es
mov
dec
fs
mov
pop
inc
or
mov
mov
pop
jne
inc
inc
and
mov
(bad)
xchg
nop
mov
cmp
in
leave
lea
sub
lea
lea
ret
sub
sub
sbb
jb
pop
add
and
addr16
or
xchg
std
into
imul
sub
dec
sub
data16
loop
fst
add
pop
cmps
jg
daa
outs
ret
inc
popf
lds
sub
pop
mov
ins
(bad)
test
push
je
xchg
dec
retf
cmp
cmp
daa
mul
jnp
sub
retf
or
mov
cmps
(bad)
int3
les
shl
adc
inc
ins
pop
loope
sbb
ror
mov
ror
out
cmps
and
aad
xor
mov
mov
je
or
les
sub
ins
movs
mov
dec
idiv
push
sbb
jo
jg
mov
jbe
movs
sub
lds
lds
xchg
lds
mov
fist
leave
ins
(bad)
stc
leave
mov
mov
xor
push
push
ins
mov
fiadd
mov
mov
test
jbe
fadd
push
jne
fimul
les
cmp
mov
jmp
and
inc
mov
mov
in
imul
popa
(bad)
xlat
cmp
cs
xchg
retf
ins
out
xor
ins
push
fldenv
repnz
jne
shl
pop
jl
inc
call
jno
fsub
cmps
aaa
enter
enter
ficomp
enter
xchg
or
leave
daa
lods
jno
adc
in
in
xchg
daa
pop
leave
pop
ds
dec
imul
mov
ins
xchg
mov
fisub
cmps
aam
fcom
sub
(bad)
out
addr16
lock
retf
adc
shl
xchg
scas
das
dec
mov
pop
sbb
movq
dec
(bad)
fdiv
and
lds
dec
iret
push
btc
mov
mov
push
movs
aaa
add
pushf
ret
adc
pop
or
movs
jle
jg
stos
imul
push
movs
das
movs
mov
dec
pop
add
aas
pop
sbb
jae
xchg
lea
cld
jle
cmps
lahf
and
retf
inc
cdq
jae
test
pop
cmp
fcomp
cdq
retf
xchg
jo
outs
int3
stos
pushf
jmp
js
in
mov
imul
xor
pop
inc
mov
mov
pop
cmps
int
mov
lods
push
pop
cmps
bound
jmp
sub
ins
inc
outs
mov
push
sub
mov
pop
cmps
xchg
imul
imul
imul
repz
inc
mov
mov
ds
jns
lea
mov
mov
adc
lea
out
fisubr
loopne
mov
movs
mov
dec
call
std
pop
(bad)
push
out
xor
scas
xor
mov
mov
sub
or
int
pop
test
fucomi
sahf
pop
call
push
jg
stc
sbb
arpl
pop
mov
inc
ins
mov
xor
fdiv
mov
xor
cmps
inc
ins
out
loopne
jb
pop
push
sub
fild
add
push
pushf
in
jns
xchg
lods
ja
jle
movs
out
xchg
out
mov
push
jle
lea
ret
outs
xchg
jl
int
addr16
mov
mov
jbe
ret
mov
mov
mov
in
cwde
or
popa
dec
xor
push
ret
shl
sub
jmp
mov
(bad)
daa
test
dec
fmul
mov
jo
faddp
test
push
or
pusha
cmps
loope
cmps
addr16
sub
icebp
mov
mov
xchg
movs
popf
push
data16
pop
sub
lds
push
mov
lock
dec
or
or
mov
popa
pop
lds
fdiv
ja
repnz
dec
xchg
mov
je
movs
pop
rol
pusha
xchg
(bad)
mov
mov
ds
jmp
mov
xor
shl
add
inc
in
inc
out
xchg
leave
add
in
sub
lahf
dec
mov
and
das
faddp
pop
clc
in
bound
cmp
frstor
add
push
pusha
mov
rcr
fucomi
or
dec
ret
push
xchg
test
push
data16
ins
call
ret
xlat
sub
add
pusha
repz
jo
cmp
mov
les
fwait
dec
idiv
adc
sub
mov
leave
shr
dec
add
daa
jle
pop
mov
outs
xchg
push
sub
cmps
lods
daa
pushf
repz
adc
sbb
outs
add
outs
movs
fs
call
data16
arpl
or
div
jbe
addr16
nop
(bad)
mov
sub
or
rcl
cmps
in
cmps
sbb
fwait
ret
and
pop
(bad)
repz
cli
test
bound
jmp
cmc
loop
cld
ins
test
pop
or
(bad)
jle
jge
arpl
push
sbb
jle
retf
adc
pop
int
jecxz
int3
or
mov
mov
cld
mov
mov
dec
dec
cs
mov
cmc
ror
sti
aaa
jno
daa
ja
jae
dec
int
leave
movs
and
scas
std
out
out
lds
mov
std
jl
mov
mov
mov
test
popa
arpl
test
push
xor
dec
cwde
add
ret
ins
neg
div
mov
inc
stos
pop
popa
dec
mov
sub
xor
arpl
sbb
jae
xchg
xor
mov
retf
jle
movs
sub
clc
int3
jecxz
cmp
sbb
push
and
repz
ins
in
dec
or
retf
dec
adc
dec
jg
pop
xor
lds
xor
mov
mov
xchg
ins
sbb
mov
dec
add
stos
retf
add
jne
mov
mov
adc
repz
pop
pop
(bad)
scas
mov
loopne
jmp
aaa
test
mov
daa
jge
repnz
(bad)
cmc
retf
out
fsubr
scas
pop
lods
(bad)
adc
mov
ins
jmp
fist
movs
sub
stc
and
dec
movs
mov
ins
cli
push
out
cli
fs
inc
mov
push
ins
cli
push
xchg
int
and
jb
mov
stos
mov
mov
sub
mov
(bad)
sub
or
repnz
movs
jmp
push
inc
dec
pop
pop
stos
adc
inc
ror
int3
js
xchg
cmps
and
pop
sub
out
cmp
retf
das
test
ins
repnz
jge
(bad)
push
call
sub
aad
fs
mov
xlat
inc
jbe
mov
adc
dec
lods
popf
ins
or
mov
retf
pop
sub
sbb
mov
mov
ins
loop
cmp
ins
dec
mov
dec
mul
pop
xchg
stos
jnp
rcl
pop
or
stos
lock
retf
inc
xchg
xchg
mov
jl
mov
pop
cmp
or
not
jle
test
pop
and
add
or
mov
call
std
in
jbe
mov
sar
jle
ins
pop
std
mov
pop
out
sbb
xor
dec
lds
js
ret
mov
or
inc
pop
call
xchg
scas
cmp
cmps
popf
xchg
cli
sub
data16
push
lods
fwait
mov
cmp
out
in
cmp
in
mov
pop
inc
sbb
adc
hlt
in
arpl
ins
mov
mov
sbb
inc
fstp
repnz
jge
movs
sbb
out
push
int3
adc
pushf
ins
dec
(bad)
lock
ret
jbe
aas
ins
sub
or
and
xchg
sub
mov
xchg
sub
pop
and
cmps
jns
int
or
push
adc
jmp
daa
sub
(bad)
mul
or
ins
jle
mov
sub
cmp
(bad)
pop
xchg
std
adc
cmp
push
jnp
jg
push
inc
hlt
aaa
std
and
pop
inc
cmp
scas
mov
pop
neg
movs
popf
and
pushf
mov
xchg
mov
lea
add
mov
jbe
fs
add
jae
in
mov
cmps
cdq
(bad)
cmc
test
sub
push
jbe
nop
(bad)
jl
fwait
cmps
pushf
xlat
pop
cdq
mov
test
clc
mov
in
inc
mov
mov
fdivrp
fsub
dec
xchg
in
and
xchg
jbe
mov
jb
(bad)
push
sbb
dec
cmp
xor
push
test
daa
mov
or
popa
mov
imul
mov
xchg
sub
cmp
(bad)
inc
dec
js
sbb
mov
idiv
repnz
ss
pop
not
jecxz
cmp
jle
lahf
aad
mov
cmp
add
(bad)
repnz
inc
loope
inc
icebp
xchg
xor
adc
test
test
mov
addr16
jo
or
sub
pop
aaa
(bad)
je
or
dec
and
jmp
scas
repnz
clc
cmc
mov
xor
push
or
mov
and
int
stos
jl
int3
cdq
or
stc
stos
imul
(bad)
mov
or
jmp
dec
cdq
push
mov
mov
push
xchg
or
shl
ret
stos
inc
(bad)
mov
mov
in
mov
xchg
mov
mov
enter
sub
mov
sbb
mov
(bad)
jmp
mov
fwait
inc
mov
dec
inc
mov
cdq
mul
add
mov
ret
sub
ins
mov
jne
dec
cmc
test
jbe
adc
jp
mov
sbb
push
cmps
iret
cmps
imul
mov
fimul
std
cmps
rcl
mov
mov
mov
sahf
mov
out
(bad)
cli
fimul
jo
hlt
jecxz
cmps
(bad)
call
push
mov
jne
mov
push
fs
(bad)
dec
idiv
mov
push
in
int3
cmp
jge
dec
gs
ins
lds
out
mov
fdivp
and
xor
inc
retf
xor
daa
fucom
inc
mov
dec
mov
push
scas
mov
jmp
push
dec
and
xchg
jge
jne
cmp
push
cmp
leave
enter
dec
lods
mov
jns
mov
pop
cli
and
sahf
and
pop
sub
push
call
ret
jne
mov
jmp
pop
pop
jbe
dec
mov
mov
inc
or
pop
or
adc
dec
push
and
xchg
test
jmp
leave
popa
jmp
mov
dec
add
daa
std
cld
dec
ret
cmp
jge
(bad)
or
dec
sbb
pop
jecxz
cmp
and
repnz
outs
dec
cli
add
add
mov
loop
pop
push
je
test
cmps
sar
jmp
loop
adc
or
add
sbb
or
nop
aas
mov
mov
inc
popa
je
dec
std
ins
or
pop
push
div
jne
aas
sti
xchg
in
and
jnp
jg
popa
daa
mov
cmc
es
inc
jp
push
xchg
call
mov
retf
mov
(bad)
loop
sub
ins
cld
jmp
ucomiss
mov
pop
jne
inc
sub
push
aam
repnz
ud0
jecxz
and
xor
xchg
xor
mov
vaddsubps
add
jmp
pop
retf
inc
jmp
inc
lea
inc
xor
push
xchg
jne
mov
ret
mov
mov
cdq
mov
in
mov
xchg
lock
xchg
mov
and
in
inc
leave
in
pop
aaa
imul
cmp
or
int3
fdivr
inc
stos
lods
(bad)
leave
test
fiadd
ins
in
mov
stos
or
sbb
mov
mov
add
aad
mov
lods
(bad)
inc
scas
pop
xor
jns
or
mov
scas
loope
push
mov
push
test
mov
push
and
loop
mov
das
stos
and
mov
and
cli
mov
cmps
push
mov
wrmsr
loope
cmp
mov
in
xchg
mov
cli
mov
ficom
mov
int3
lods
pop
popf
push
sbb
jmp
and
pop
jge
push
mov
jno
mov
push
mov
lods
sbb
test
ds
and
(bad)
lods
xchg
in
lds
pop
test
or
retf
popa
shl
xor
mov
adc
lods
cmps
mov
mov
mov
inc
sub
jmp
pop
dec
(bad)
out
pop
fstp
mov
shl
pop
jg
test
addr16
cli
and
pushf
in
stos
lods
and
stos
jle
nop
jne
push
mov
ja
mov
mov
out
test
iret
mov
mov
mov
(bad)
and
(bad)
mov
shl
pusha
aas
bound
push
push
call
ss
adc
adc
mov
iret
mov
inc
stos
lds
das
movs
mov
shl
(bad)
push
(bad)
jmp
cdq
arpl
mov
(bad)
out
mov
mov
mov
and
bound
je
es
in
or
xchg
jb
in
push
ins
mov
jns
cld
out
xor
sti
arpl
push
(bad)
shr
jae
push
sti
adc
cmp
(bad)
fimul
inc
ins
data16
(bad)
push
add
movs
arpl
pusha
std
push
int
mov
std
adc
mov
cmp
xchg
mov
repz
pop
ret
mul
test
sbb
sbb
mov
pop
inc
xor
aas
jnp
inc
mov
mov
jo
jmp
and
cmp
inc
jo
xlat
les
adc
outs
fsubp
inc
mov
daa
cmc
out
leave
mov
repz
xchg
dec
ret
mov
cld
xchg
mov
js
jecxz
cmp
ja
adc
or
adc
or
adc
xchg
or
mov
aaa
pusha
sub
xchg
scas
and
scas
mov
mov
inc
mov
faddp
adc
adc
out
jns
jne
inc
loope
fcmovbe
(bad)
cdq
sar
sbb
std
inc
fsubr
out
mov
shr
call
dec
adc
add
jne
xlat
cmps
outs
lds
or
dec
daa
adc
inc
adc
adc
push
or
adc
mov
out
jnp
outs
xor
pop
cmp
mov
sub
push
push
call
mov
nop
mov
fmul
inc
and
and
xchg
ins
jmp
lock
dec
jmp
push
xchg
imul
idiv
xchg
inc
jns
pusha
jmp
or
pop
shr
ds
fst
movs
jmp
and
jmp
pusha
mov
sbb
or
movs
push
sbb
mov
xchg
inc
popa
jno
(bad)
fisttp
cmp
(bad)
mov
(bad)
shr
sbb
xor
add
xor
push
xchg
or
adc
sbb
mov
les
mov
dec
call
or
and
xchg
jmp
(bad)
push
jmp
sbb
ss
push
dec
das
rol
dec
fcomp
into
mov
sbb
xchg
mov
jp
out
mov
sbb
mov
mov
or
retf
leave
mov
or
es
sbb
or
fsubr
sar
imul
cmp
and
pusha
push
cmps
neg
inc
push
sbb
scas
je
popa
aam
stc
fwait
push
cmp
shl
mov
mov
leave
push
daa
jle
jne
div
push
shl
push
gs
mov
fist
adc
fwait
mov
imul
xchg
aas
fild
jmp
ficomp
xor
cmps
dec
sub
dec
imul
movs
das
push
adc
(bad)
enter
out
inc
imul
enter
in
dec
paddb
fs
imul
cmp
imul
loope
push
pop
fsubr
cmp
data16
loope
gs
inc
dec
pusha
(bad)
mov
es
or
fwait
sub
div
outs
fiadd
xchg
mov
adc
sbb
test
fs
pop
mov
jmp
push
aam
cmp
inc
ins
jl
pop
jne
imul
std
mov
xchg
ja
adc
dec
push
inc
jno
lea
mov
push
retf
cmps
dec
push
ins
inc
jmp
pop
popf
mov
scas
std
inc
sub
cmp
test
xor
rcr
inc
sahf
cmps
(bad)
cs
iret
jns
xor
(bad)
and
mov
pop
mov
xchg
inc
int3
lea
xor
add
movs
or
push
sub
xor
push
mov
cld
cmps
pop
add
movs
popa
neg
test
ins
xchg
xchg
(bad)
scas
aas
jnp
stos
lds
shl
rol
out
cmps
int
inc
or
jl
dec
and
xchg
ficom
mov
mov
mov
and
imul
fild
xchg
push
lock
lods
fwait
add
pop
mov
mov
xchg
movs
adc
bound
add
mov
ret
pop
push
(bad)
mov
imul
inc
dec
mov
push
pop
mov
imul
les
rcr
je
inc
xchg
jae
mov
ret
ss
pop
cmp
mov
daa
js
or
cmc
cmp
inc
xchg
jns
or
jle
jne
mov
add
int3
fld
cdq
push
repnz
jecxz
or
scas
and
mov
sub
scas
shr
push
cmps
scas
fisttp
(bad)
rcl
xchg
mov
ret
xchg
fcomp
sahf
cmp
jae
int3
jo
jle
cmp
or
lea
loopne
cmp
push
leave
nop
sti
cs
sbb
ins
or
pop
repnz
out
xor
stos
sub
mov
mov
(bad)
push
outs
int
inc
cld
dec
pop
and
fsubr
cmp
push
leave
mov
inc
mov
test
jnp
scas
scas
sub
mov
and
cmps
iret
aas
out
stos
mov
add
and
mov
xchg
mov
or
sub
(bad)
aas
mov
or
cmp
jmp
pop
jl
or
int3
bnd
sub
cmp
cmp
cmps
mov
mov
ins
(bad)
xchg
inc
sbb
and
mov
add
add
out
repnz
arpl
push
out
daa
pop
fild
inc
repz
mov
sbb
outs
(bad)
rcr
neg
aas
jno
lods
pop
pop
sub
push
and
out
aas
pop
or
ficom
xchg
(bad)
mov
int3
popf
fadd
stos
sbb
aad
enter
jmp
jae
into
mov
mov
xchg
cmp
enter
xor
sub
adc
mov
(bad)
std
jno
jmp
stos
btr
pop
out
jnp
and
sbb
ins
(bad)
adc
sub
pop
xchg
shl
sbb
dec
pop
and
out
movs
sub
xchg
leave
sbb
xchg
sbb
sub
cmc
xchg
ret
retf
pop
icebp
xor
pushf
sub
shl
mov
repnz
or
(bad)
sbb
sbb
lahf
test
jle
dec
push
outs
lods
stos
repz
inc
sbb
sub
or
jmp
pop
movs
fisub
adc
(bad)
push
out
pop
inc
into
and
out
out
jmp
sbb
mov
or
jecxz
and
pop
cmc
or
test
mov
jle
inc
test
clc
mov
sub
sar
scas
mov
lods
push
pushf
sahf
pop
push
mov
rcr
(bad)
jge
jmp
fisttp
mov
sub
or
ret
jae
bound
ins
or
jle
jae
jmp
call
sbb
pop
imul
mov
and
cmps
pop
loopne
movsx
pusha
fs
mul
ins
mov
pop
mov
mov
test
mov
dec
add
mov
pop
pusha
adc
popa
es
sbb
addr16
int
xor
push
pop
push
ins
or
sbb
rol
xchg
mov
pop
stos
(bad)
sahf
push
pop
xchg
sub
inc
xchg
ins
lods
jmp
in
or
jmp
mov
test
ins
pop
(bad)
mov
xchg
xor
and
add
test
mov
or
xchg
and
lea
pop
ja
mov
repnz
sbb
mov
mov
mov
mov
aad
sbb
jmp
push
lea
mov
inc
imul
jg
pop
shr
sbb
mov
das
push
das
pop
ins
stos
mov
pop
jg
das
sub
mov
cmps
mov
daa
mov
test
pop
push
mov
ds
xchg
push
jmp
and
outs
and
cmp
and
jmp
pop
in
pop
xchg
pop
in
push
loope
movs
mov
sub
push
pop
jmp
imul
or
and
test
stos
ja
scas
es
clc
mov
test
xor
cld
mov
lea
mov
adc
and
test
lods
jbe
in
xor
sub
xchg
out
fmul
shl
push
pop
mov
mov
push
mov
cmps
idiv
out
out
fdivp
stc
xchg
iret
cmp
cmp
cmps
es
lahf
mov
ds
scas
movs
test
dec
mov
jno
mov
mov
mov
xor
dec
cmp
ja
ds
ret
xor
push
jmp
int
xor
mov
sub
jg
or
cmps
std
ss
sbb
pop
daa
scas
pop
repnz
pop
xchg
or
cmps
imul
cmps
xchg
push
daa
and
fmul
call
das
test
int3
inc
or
mov
js
mov
dec
or
push
sar
ja
or
in
push
cmp
jle
mov
dec
das
or
ins
ror
or
add
pop
imul
pop
xor
jns
xor
(bad)
push
push
fsubr
out
iret
call
sbb
cmps
xchg
cld
pop
inc
mov
inc
pop
mov
cli
into
jb
cmp
mov
or
aas
pop
pusha
adc
cmp
sbb
icebp
inc
das
sbb
ror
pop
push
das
and
inc
cmp
stc
or
fst
push
retf
pop
out
cmp
pushf
imul
js
cmp
xchg
ins
cmp
das
push
movs
ret
push
sbb
xor
inc
cmp
sub
das
and
scas
cmp
mov
gs
cwde
cmps
cmp
xor
dec
ds
dec
sbb
cwde
cmps
sar
out
aas
rol
push
test
sub
xor
xchg
aas
pop
jle
ins
aam
xchg
js
xor
push
test
push
jbe
jo
mov
sub
push
jmp
int
and
push
ins
xor
push
push
jge
and
cdq
ins
and
push
imul
sub
and
push
ins
and
mov
and
aas
test
sub
and
jmp
adc
pop
xor
sub
cmp
fldenv
push
mov
adc
stos
in
jmp
mov
mov
and
sahf
mov
sub
cmp
jb
icebp
xchg
or
or
push
int3
aas
mov
adc
xor
adc
sbb
add
(bad)
fidivr
xacquire
scas
pop
je
pop
mov
ret
loop
pop
shr
nop
mov
lahf
sub
addr16
stos
mov
mov
sti
daa
movs
jmp
lea
mov
jnp
in
jo
mov
ja
mov
(bad)
sub
push
push
mov
cmp
mov
pop
sub
mov
and
cmp
push
es
mov
retf
jmp
test
sub
or
or
hlt
fdivr
sub
add
mov
in
lds
xor
and
loope
xor
mov
ja
sbb
and
mov
daa
pop
push
or
imul
xchg
push
and
xchg
push
repz
push
push
push
push
pop
(bad)
stos
cmp
mov
arpl
push
into
ins
cmp
sbb
call
or
push
arpl
cld
sub
sub
adc
fcomp
add
rol
push
mov
push
pop
cmps
jno
sub
jl
pop
dec
sub
repz
cmps
inc
mov
sahf
popa
shl
xchg
or
es
sti
pop
(bad)
push
push
sbb
or
jb
sub
push
jae
push
cmc
in
ret
stos
pusha
mov
cmps
pop
pop
sub
(bad)
popa
cmp
imul
out
pop
add
lods
sub
mov
pop
popa
(bad)
xor
mov
mov
cs
jns
pop
mov
add
ret
(bad)
loopne
adc
fcmove
and
pusha
sbb
repnz
inc
pop
mov
mov
(bad)
ins
retf
pop
stos
ret
fistp
fadd
out
stos
(bad)
stos
cwde
sub
mov
xor
pshufw
cs
cmps
inc
jno
aas
xor
mov
iret
aam
add
cmp
mov
mov
jg
cmp
or
movs
sbb
pop
std
xor
dec
arpl
inc
test
xchg
push
mov
cld
dec
and
out
aas
cli
or
pop
(bad)
(bad)
imul
dec
fwait
outs
loop
lods
jae
mov
dec
dec
xor
(bad)
rcr
pop
push
repnz
mov
add
add
xchg
sbb
and
add
push
and
stos
dec
adc
mov
xchg
pop
loop
nop
cwde
cld
xor
and
push
push
retf
pop
sbb
ins
mov
cmps
jae
ret
add
mov
pop
nop
call
mov
pusha
pop
add
dec
and
and
(bad)
aas
in
aas
(bad)
and
stos
call
xor
sub
in
mov
push
cld
or
mov
ins
mov
sub
fs
sub
push
sub
and
in
int3
push
inc
mov
test
fisttp
rsqrtps
test
repnz
fmul
push
xchg
dec
inc
adc
push
sub
and
in
repnz
mov
mov
imul
mov
pop
push
test
dec
push
xchg
jmp
out
nop
loopne
ret
movs
ret
mov
jmp
sub
push
cwde
popf
loop
mov
cmps
and
iret
mov
test
out
pop
sbb
and
cmps
mov
sub
cmc
sub
retf
pop
jnp
sub
adc
fwait
pop
loope
and
mov
push
movs
push
dec
push
mov
and
(bad)
and
and
or
pop
cld
cmp
jbe
call
int
push
movs
push
dec
push
mov
sub
sub
push
mov
mov
adc
push
mov
jle
jmp
int
push
mov
ror
stos
lock
fbstp
push
cdq
sbb
mov
jb
(bad)
jecxz
mov
add
adc
pop
mov
sub
xor
ficom
jl
fwait
mov
cmp
add
int3
pushf
cmps
ficom
mov
(bad)
mov
sti
ret
push
inc
ficom
rcr
jl
mov
lock
push
xor
call
xor
mov
add
xchg
bound
pop
aaa
dec
inc
(bad)
mov
lds
add
xchg
pop
mov
inc
pop
lods
cmps
scas
retf
mov
es
xor
test
add
pop
test
out
ret
dec
mov
sbb
pop
mov
mov
inc
bnd
inc
test
sahf
stos
out
mov
test
mov
pop
mov
jb
loop
push
or
sub
pop
xchg
xchg
or
aas
dec
add
rcl
into
or
jns
movs
cmps
(bad)
mov
mov
mov
jno
push
enter
xchg
jno
call
scas
fwait
or
or
or
jb
sbb
adc
fidivr
jae
data16
push
push
lods
cmps
int
inc
retf
scas
or
lds
or
pop
ins
mov
pop
pop
add
jb
xchg
sbb
mov
xchg
jmp
xchg
in
push
sbb
xor
lods
mov
dec
push
adc
stc
fs
cmp
stos
sbb
mov
sub
pushf
imul
jl
mov
push
mov
mov
cmp
pop
cdq
ins
sbb
push
daa
sti
push
push
movs
aam
cmps
mov
xchg
push
outs
inc
cmp
dec
pop
mov
into
xchg
xchg
popa
mov
retf
add
push
jo
repz
inc
add
sub
loop
jae
add
sar
cwde
dec
ins
ins
add
cmp
loope
xchg
faddp
retf
pop
dec
(bad)
mov
mov
jecxz
fild
lods
mov
dec
adc
lods
jmp
push
pop
mov
cwde
ficomp
add
fucomi
shl
mov
or
adc
out
es
push
dec
ret
mov
mov
xchg
stos
xor
in
lods
enter
mov
sbb
and
push
mov
(bad)
sbb
mov
cli
push
bound
push
ds
int3
cmp
adc
stos
sbb
sbb
(bad)
and
cmps
or
ins
or
ret
xor
inc
mov
rcl
cmp
loop
movs
push
or
jns
dec
mov
and
push
pusha
(bad)
pop
push
mov
jbe
imul
mov
or
mov
mov
out
mov
out
mov
sbb
fdiv
push
xchg
mov
sub
xchg
lods
push
jge
fwait
fwait
push
imul
xor
mov
mov
jecxz
adc
daa
pop
nop
call
addps
mov
push
out
cdq
jmp
dec
sub
fldcw
fmul
mov
int
inc
mov
mov
ins
in
les
fldcw
dec
ins
push
jmp
mov
lock
mov
mov
jle
mov
push
inc
inc
or
not
xchg
xlat
cmp
mov
cwde
and
push
and
xor
jmp
ja
inc
and
ja
ins
push
push
mov
xchg
movs
test
mov
out
ja
push
cmc
inc
jbe
mov
mov
push
jb
iret
mov
cli
dec
data16
scas
inc
lds
xchg
or
lea
and
lock
jnp
push
(bad)
mov
ins
(bad)
enter
mov
push
pusha
sar
mov
jp
push
and
ficomp
jns
cdq
inc
stc
mov
pop
xor
sub
jo
out
aad
mov
mov
aam
or
pop
dec
gs
xor
cmp
or
test
sbb
les
or
mov
inc
dec
push
pop
jle
js
fldcw
adc
sahf
mov
mov
mov
mov
int
shl
mov
in
out
or
stos
push
mov
leave
add
jno
inc
mov
inc
movs
mov
lods
mov
pop
dec
cmp
cmp
mov
imul
imul
aas
dec
int3
push
inc
mov
xchg
sbb
cwde
inc
and
mov
xchg
xor
mov
jae
add
mov
daa
loope
pop
mov
dec
push
pop
lods
imul
xchg
or
add
ins
add
cmp
dec
aad
mov
int3
dec
icebp
sbb
mov
xchg
xlat
movs
daa
ss
imul
cli
mov
jbe
mov
dec
pop
add
ins
dec
push
add
jmp
scas
outs
pop
dec
sub
popa
inc
adc
aas
(bad)
xchg
jmp
clc
dec
mov
fisttp
mov
xchg
mov
mov
adc
mov
mov
and
loope
mov
pop
dec
mov
test
loopne
pop
(bad)
pusha
inc
add
sub
dec
outs
rcr
or
jl
or
mov
mov
mov
add
outs
mov
fidivr
add
sub
daa
pop
cdq
fbstp
and
je
cmps
xchg
fucom
lock
lea
cmp
popa
popa
in
mov
dec
adc
xchg
ror
jno
addr16
adc
dec
mov
push
mov
icebp
xchg
push
pop
inc
shl
push
fadd
push
and
hlt
fidivr
shr
adc
scas
mov
out
cmp
inc
cmps
cdq
adc
leave
mul
mov
mov
fsubrp
adc
mov
int
cmps
fsub
sti
xchg
ficom
arpl
inc
mov
sti
push
mov
das
mov
int
sub
mov
add
jmp
fmul
xchg
xor
pop
scas
ins
adc
mov
mov
scas
lods
out
cmp
xchg
loopne
cmps
and
dec
and
xchg
repnz
imul
or
cmc
cmp
mov
push
daa
sub
fbld
mov
outs
push
shr
bound
xor
dec
jecxz
xchg
cmps
mov
daa
sub
mov
(bad)
push
rcl
fwait
sar
aam
xor
dec
rol
ss
cwde
pop
stos
scas
mov
leave
in
mov
xor
stos
scas
mov
mov
and
cmp
mov
in
shr
mov
(bad)
fsubr
mov
popf
pushf
test
jle
adc
push
loop
jo
daa
popa
dec
ds
sub
cdq
je
inc
push
imul
(bad)
or
mov
adc
(bad)
jne
cld
push
mov
add
test
mov
mov
or
push
cmp
stos
mov
sub
mov
pop
dec
push
mov
scas
rcr
aas
lods
xchg
shr
daa
ret
jno
dec
xor
cmps
ins
inc
lds
inc
adc
xchg
dec
aas
jno
xchg
lds
pop
lods
cs
sub
jno
mov
rol
repz
mov
aas
fwait
lds
sahf
mov
xchg
push
cmp
xchg
mov
imul
mov
push
fbld
push
dec
sti
mov
and
pop
(bad)
leave
out
add
and
ins
imul
xchg
push
mov
outs
gs
stos
jl
fnsave
sti
stos
lods
dec
lods
cmps
rcl
test
pusha
push
int3
and
xchg
loop
inc
jg
dec
test
or
mov
inc
ins
sbb
loopne
mov
cmp
xchg
shl
cmc
jecxz
jb
es
gs
ret
cmp
jae
pop
push
mov
arpl
jne
aad
mov
mov
push
scas
aam
or
iret
jle
jne
mov
mov
mov
lea
xchg
pop
mov
mov
je
(bad)
pop
cmp
sub
je
or
mov
shl
retf
out
cmps
lds
mov
and
jmp
sti
jne
nop
adc
inc
mov
jle
dec
xor
lds
mov
push
mov
xchg
imul
xor
mov
aaa
movs
movs
(bad)
pop
inc
jb
push
mul
and
int3
sbb
ins
jl
fldenv
xchg
pop
and
jbe
push
sbb
sbb
mov
or
arpl
jmp
mov
adc
(bad)
mov
jno
scas
pop
arpl
pop
push
test
fiadd
lods
mov
gs
mov
mov
xor
test
(bad)
cmp
mov
ins
ja
das
xchg
std
repnz
movs
pop
daa
das
cmc
mov
dec
push
retf
or
aaa
pop
sub
mov
daa
or
movs
jmp
mov
mov
sbb
sti
inc
mov
imul
sbb
fsubp
movs
std
repnz
out
loop
(bad)
xchg
cmp
aad
jl
ins
stos
mov
loope
dec
pop
mov
cmp
pop
stc
ficomp
add
hlt
jns
jae
(bad)
in
and
or
mov
dec
xchg
xchg
push
ds
in
sar
jg
fiadd
cs
jno
popf
sbb
loop
clc
scas
fcomp
mov
xchg
mov
mov
out
xchg
bound
iret
mov
scas
pop
cmp
fcmovnb
pop
int
jp
jb
cmps
adc
repnz
xchg
jp
leave
sub
imul
push
retf
aas
jmp
fdivr
popf
cmc
mov
pusha
mov
sub
mov
add
stc
imul
jle
mov
bswap
jnp
je
push
(bad)
cli
jnp
imul
ins
jle
jbe
cld
mov
jbe
movs
mov
dec
daa
xchg
sub
pop
or
and
jbe
les
mov
xchg
mov
mov
lods
jne
jge
xchg
ficomp
adc
mov
or
jg
mov
sub
jae
in
pop
jl
shl
(bad)
loopne
adc
and
dec
jb
or
je
pop
mul
xor
cmp
mov
xchg
cmps
(bad)
ss
push
ins
fstp
push
sti
and
or
mov
retf
mov
sbb
in
push
mov
aam
leave
pop
daa
pop
jge
out
mov
fidiv
outs
dec
div
dec
loopne
pop
or
push
ins
fidivr
movs
cmp
pushf
add
lock
dec
pop
lahf
movs
push
sar
xor
movs
pop
iret
inc
call
jle
mov
sbb
adc
test
mov
push
ins
sahf
mov
push
std
dec
cmps
jbe
ret
je
ja
cli
repnz
rcr
arpl
cmp
icebp
fcom
jl
adc
add
mov
outs
rcl
popf
xchg
test
push
mov
fs
loope
lds
sbb
lock
mov
add
inc
jecxz
into
adc
mov
call
loopne
fs
in
adc
sub
add
mul
loopne
ins
adc
out
std
sbb
adc
sub
lock
push
and
ja
xor
lods
cmp
sub
out
dec
mov
popa
or
ret
mov
add
xchg
xor
jecxz
push
xlat
add
mov
inc
ret
pop
mov
push
arpl
cmp
jbe
popa
xor
std
fisub
sbb
jmp
int3
ret
inc
bound
or
adc
jns
bound
pop
fisubr
sub
mov
adc
fisttp
xchg
pushf
in
lahf
pop
out
mov
mov
mov
pop
test
mov
inc
ret
jle
or
addr16
xor
rol
push
popa
mov
fidiv
inc
mov
arpl
mov
mov
loopne
push
arpl
ins
sbb
mov
and
mov
sub
lods
dec
movs
inc
mov
popa
fld
add
dec
(bad)
loopne
sub
mov
in
or
and
add
retf
xchg
add
rol
add
fwait
(bad)
xchg
fst
scas
push
mov
out
jne
sbb
int
mul
mov
gs
xor
xor
addr16
dec
(bad)
xchg
arpl
in
es
gs
lods
aad
data16
loope
add
in
push
mov
jmp
outs
mov
mov
lds
pop
das
pop
adc
push
shl
or
jnp
mov
mov
inc
call
push
add
inc
jno
xor
and
test
add
test
add
rol
mov
(bad)
xor
fld
jae
retf
ja
and
stc
fcom
sbb
xchg
or
inc
mov
push
(bad)
push
scas
cmps
sti
ins
imul
nop
adc
fnstsw
loopne
out
in
repnz
ret
jecxz
jp
je
xor
adc
lds
mov
fxch
xchg
imul
fcmovb
sub
lock
dec
fiadd
jl
pop
out
xlat
aam
or
mov
icebp
cld
mov
jp
std
js
ret
sub
xchg
fild
add
mov
push
push
mov
xchg
int3
sahf
cmps
(bad)
pop
cwde
ins
movs
push
mov
imul
sub
mov
jmp
es
rol
xlat
cwde
jne
(bad)
fidivr
adc
mov
lahf
dec
movs
jl
mov
push
in
mov
lods
or
push
or
gs
mov
pop
daa
shr
mov
dec
ss
leave
loopne
jmp
lds
scas
or
out
pop
jo
xchg
or
call
xchg
ins
inc
ins
jl
push
aam
or
ja
fmul
daa
ins
pop
fimul
pop
mov
mov
retf
adc
xchg
(bad)
mov
jo
push
loope
hlt
bound
jo
iret
ins
and
sbb
gs
pushf
int3
cmp
jge
mov
popa
loop
movs
xlat
sahf
xor
ins
add
call
cld
outs
ret
or
ds
cs
mov
scas
test
mov
mov
lods
push
mov
pop
xchg
adc
arpl
inc
push
fs
rcr
nop
dec
xchg
add
jg
pop
xchg
cmps
out
(bad)
aam
lds
push
icebp
or
sahf
lods
push
lds
ret
movs
mov
push
push
sub
nop
mov
retf
(bad)
or
repnz
sahf
dec
loopne
dec
sahf
sbb
mov
nop
inc
pop
jge
and
dec
jle
mov
add
mov
sbb
mov
dec
scas
dec
aas
fs
pop
xchg
mov
sub
mov
in
pop
sar
xchg
inc
(bad)
jl
pop
sub
jno
test
mov
scas
in
(bad)
dec
and
cmps
cmc
xchg
cmps
adc
xchg
inc
cwde
or
inc
jae
cmp
mov
(bad)
sbb
cmps
push
leave
xchg
mov
dec
movs
sbb
cmp
push
aas
push
xlat
jno
xchg
and
inc
pop
into
hlt
mov
gs
out
mov
imul
rcl
in
rcl
hlt
xchg
xlat
sub
mov
add
mov
add
jmp
(bad)
dec
sub
stos
adc
les
ret
(bad)
nop
pop
jnp
or
mov
sar
ins
jne
jo
out
push
adc
(bad)
mov
inc
mov
mov
mov
popf
inc
jo
loope
nop
sbb
pinsrw
adc
push
mov
xchg
inc
clc
hlt
hlt
js
out
(bad)
xor
mov
fdivp
mov
add
cmp
add
ret
(bad)
frstor
jl
inc
push
mov
push
sbb
mov
mov
cmp
jne
pop
nop
sub
aad
xchg
or
mov
fidivr
jl
mov
imul
mov
adc
mov
cmps
fwait
push
mov
sub
sbb
imul
jp
inc
and
jne
nop
lahf
loope
or
pop
jecxz
movs
(bad)
rcl
fild
retf
jbe
cld
lea
mov
pop
fist
pop
scas
test
sub
push
or
in
mov
or
mov
sbb
mov
jge
xchg
(bad)
jle
sar
xor
push
test
lea
lods
xlat
cmp
adc
(bad)
data16
xor
shl
push
cwde
dec
and
push
mov
fcom
(bad)
retf
xor
popf
xor
fwait
in
xor
jmp
sti
jmp
inc
scas
jns
sbb
mov
inc
addr16
mov
aad
daa
mov
ja
(bad)
adc
test
cmp
fisub
cmps
dec
mov
and
aam
mov
je
adc
loop
call
mov
dec
pusha
cwde
gs
cmp
pop
pop
ins
sub
ins
rcl
mov
inc
out
xchg
shl
add
sbb
mov
push
sbb
xchg
fwait
jge
(bad)
je
cli
add
inc
jno
out
fadd
ins
movs
adc
test
fstp
imul
pop
add
dec
add
push
retf
jnp
js
nop
jl
clc
push
cs
or
pushf
adc
int
push
fisubr
(bad)
aas
mov
adc
mov
fcom
xlat
sub
dec
pop
mov
xchg
aad
shl
xchg
ds
jae
jnp
scas
test
int
mov
xor
test
cdq
into
sub
and
std
xchg
add
mov
popf
mov
pop
repnz
or
mov
jo
cli
ds
mov
test
cs
dec
movs
rcr
or
leave
movs
(bad)
leave
in
xchg
popf
call
sbb
rcl
data16
repz
sbb
xor
jns
xchg
sub
ds
int3
mov
shl
xor
cmps
cwde
jle
movs
ins
int
jne
je
shl
xor
and
pop
xor
lahf
(bad)
lahf
movs
(bad)
xchg
fs
xchg
lahf
mov
xchg
dec
in
jg
pop
mov
or
into
and
and
jno
inc
iret
cmp
in
mov
xor
fisttp
imul
movs
xchg
pop
jg
cmp
pusha
pop
cmp
cmc
cmp
pusha
mov
push
aam
xlat
lods
fs
out
xchg
out
ds
sub
dec
lds
mov
mov
xor
stos
xor
lds
mov
ds
jne
mov
cmc
es
add
stos
fadd
fidivr
aas
mov
xchg
add
daa
sbb
(bad)
je
xchg
add
int3
aaa
mov
or
addr16
jo
push
mov
loopne
pop
(bad)
repnz
neg
in
int
lods
sub
cmps
rol
aad
mov
and
bound
hlt
pushf
(bad)
icebp
fs
je
sub
xchg
in
lods
xlat
push
std
cwde
mov
js
rcr
(bad)
jmp
mov
cld
iret
scas
adc
out
jge
arpl
mov
xor
and
mov
sbb
mov
movs
or
je
(bad)
in
xchg
push
mov
arpl
retf
xchg
sub
add
fidiv
sbb
jmp
adc
inc
call
test
add
cmp
sub
cmp
mov
dec
mov
mov
and
cmps
data16
sar
mov
jmp
push
int3
fcom
sbb
xchg
cmp
fiadd
test
dec
xor
push
cmc
push
pop
push
repz
cmps
jo
push
adc
mov
imul
dec
xchg
or
test
mov
cli
cmps
cmp
mov
int3
mov
dec
outs
cs
jmp
test
fisub
aad
push
stos
and
pop
and
mov
popa
(bad)
push
arpl
pop
test
ret
inc
ins
fisttp
outs
lds
movs
pop
imul
lods
sub
push
mov
js
add
jne
jge
cmp
cmps
pusha
fdiv
mov
inc
(bad)
add
test
mov
sub
xchg
and
mov
pop
mov
cmp
cmp
ins
or
test
(bad)
mov
sub
push
jge
dec
dec
rcr
xchg
ret
aam
cs
lods
cmp
ror
mov
and
popa
mov
popf
stc
push
cmp
test
add
cmps
adc
dec
fucom
fidivr
(bad)
pop
test
sti
aam
inc
retf
nop
inc
aam
inc
jg
mov
(bad)
fstp
sub
inc
jns
imul
out
in
mov
adc
sub
mov
adc
mov
ror
lods
cld
ret
dec
add
inc
outs
adc
mov
mov
dec
imul
xor
mov
push
mov
cld
pop
sahf
cmc
mov
sub
cmps
or
(bad)
cmps
retf
(bad)
sub
mov
daa
or
rcl
pop
add
push
mov
repz
fwait
sub
or
push
std
(bad)
movs
test
lea
loopne
push
nop
clc
pop
mov
jno
shl
push
outs
jmp
sub
xor
push
add
mov
jne
sub
add
push
mov
ins
mov
adc
xor
mov
push
pop
retf
xchg
rol
cmps
addr16
movs
mov
mov
xchg
mov
and
xor
retf
add
pop
movs
popa
scas
cmp
mov
jne
dec
aas
fimul
push
mov
inc
mov
mov
fidivr
pop
xchg
in
lods
push
hlt
pop
mov
mov
add
fild
neg
cld
loopne
add
retf
(bad)
lds
and
je
retf
and
es
ins
add
rcr
dec
sub
lea
mov
dec
out
jp
xchg
(bad)
(bad)
fimul
dec
jne
and
loopne
dec
(bad)
mov
mov
push
fisttp
shl
mov
addr16
sbb
mov
ds
jmp
scas
dec
sti
or
jmp
inc
inc
ud2
aam
adc
faddp
dec
cmp
das
xchg
scas
push
hlt
leave
inc
or
push
mov
jne
in
jecxz
dec
cli
lock
dec
or
xchg
shl
rcr
jle
push
mov
mov
stos
ins
push
pop
dec
std
nop
mov
xor
xchg
push
mov
fnsave
cmp
push
aas
mov
mov
xor
data16
mov
xchg
dec
in
arpl
ret
cmp
repnz
xchg
je
aad
stos
mov
shl
and
in
(bad)
push
mov
mov
in
inc
mul
jo
or
push
outs
mov
xor
push
gs
xchg
sbb
adc
mov
xor
jnp
(bad)
sbb
inc
stos
(bad)
or
cmp
ret
mov
xchg
fs
aaa
push
lea
add
rcl
jns
(bad)
scas
repnz
push
(bad)
push
xor
ret
jecxz
nop
pop
cmp
shl
xchg
push
mov
push
lods
jbe
nop
arpl
scas
mov
int
mov
xor
int
lods
mov
je
les
test
push
mov
push
in
fsubr
jne
pop
xor
shr
fisub
add
mov
aas
sub
sub
mov
push
mov
pop
adc
mov
mov
sbb
add
mov
mov
cmp
test
sub
std
loope
pusha
fdivr
mov
pop
sub
aam
adc
(bad)
jg
adc
loopne
adc
pop
jnp
daa
leave
xchg
cdq
fs
adc
mov
retf
aas
sbb
mov
xor
pop
jbe
iret
test
nop
mov
add
mov
or
cmp
cvtps2pd
jl
(bad)
mov
pop
push
and
pop
xchg
es
push
mov
jl
push
pop
loope
cmp
fidivr
ds
cmp
sub
sbb
pop
mov
rol
mov
(bad)
jns
cmp
jb
(bad)
mov
dec
sub
mov
xchg
pop
jno
int
data16
shl
aaa
dec
add
adc
jae
push
daa
and
fs
mov
test
cld
sbb
push
add
daa
cwde
imul
add
mov
jl
hlt
sbb
pop
std
arpl
test
mov
mov
clc
inc
retf
aas
mov
cld
push
xchg
adc
test
or
iret
mov
arpl
and
(bad)
sbb
into
aas
mov
mov
xchg
out
inc
cmp
push
xchg
and
addr16
xor
xor
adc
xchg
sbb
dec
sbb
test
sub
push
loop
fsubr
loop
push
sbb
repnz
(bad)
out
jmp
push
sub
cdq
stos
vhsubps
sub
dec
fldlg2
mov
mov
cwde
mov
xchg
xor
or
(bad)
test
jne
or
or
mov
cmp
div
cmp
xchg
(bad)
add
sub
out
xchg
out
sub
push
cmp
pop
sbb
jno
test
shr
mov
or
shl
ffree
sti
mov
aas
call
scas
push
stos
in
test
add
push
mov
retf
jnp
lds
mov
movs
mov
arpl
pusha
aas
(bad)
clc
lods
cmp
repnz
jnp
pop
jg
mov
jbe
and
je
mov
fsubr
cmps
xor
lock
pop
mov
push
shr
inc
dec
sub
leave
or
les
xlat
mov
pop
mov
xor
xchg
in
ss
xor
ror
lea
fisttp
or
arpl
cmps
mov
(bad)
out
mov
pop
pop
(bad)
loope
mov
add
mov
add
fnstcw
retf
push
ins
adc
xchg
je
sbb
cmp
push
(bad)
mov
out
mov
push
push
mov
jmp
jnp
push
or
push
cmps
mov
jmp
fcmovnbe
xor
aam
loopne
fiadd
leave
mov
imul
jmp
jmp
push
aaa
mov
push
adc
data16
sub
sub
mov
mov
lea
jns
pop
daa
mov
ins
push
mov
call
mov
push
mov
sub
mov
mov
push
daa
inc
mov
mov
or
pop
mov
mov
daa
movs
cmc
xchg
sar
jg
movs
sub
(bad)
mov
ja
and
movs
and
loop
or
arpl
mov
inc
xchg
cmp
pop
cwde
test
mov
nop
cmp
cli
les
shl
(bad)
(bad)
xchg
test
mov
cdq
push
and
mov
test
nop
jecxz
adc
mov
mov
pop
mov
pusha
jnp
in
mov
pop
lods
(bad)
jle
add
enter
xchg
popa
test
rcl
out
je
sti
sub
mov
jnp
mov
mov
sub
stos
and
retf
cwde
pop
jae
pop
or
call
cmc
jl
(bad)
jae
test
lea
mov
stos
out
push
push
into
mov
sti
cld
mov
dec
imul
fucomi
add
mov
ret
mov
movs
lock
sbb
lods
inc
outs
iret
mov
sub
pop
aad
mov
scas
push
mov
or
jmp
add
test
jno
bound
loop
int
mov
mov
add
mov
mov
icebp
daa
cmp
iret
lods
inc
cli
inc
stos
sbb
pop
push
fs
rcl
cmps
or
ins
fcmovnbe
rol
adc
xlat
int
shr
shr
lods
add
shr
adc
jg
shr
jne
lock
cmps
mov
mov
mov
sbb
sbb
shr
les
jbe
push
mov
mov
lods
jns
test
xor
shr
or
iret
(bad)
imul
cwde
fsub
or
lods
stc
mov
sub
dec
ret
sub
iret
rcr
int
stos
mov
push
stos
inc
sub
(bad)
pop
jb
in
mov
mov
data16
ins
lods
call
dec
arpl
mov
(bad)
lods
and
mov
(bad)
mov
mov
iret
inc
mov
or
jmp
sub
sbb
mov
call
xchg
jmp
jne
push
outs
add
mov
cli
imul
lock
enter
repnz
xor
jmp
cmps
es
jp
retf
xchg
sub
(bad)
sbb
mov
loop
mov
fmul
mov
ja
push
or
data16
(bad)
mov
fisub
xor
mov
sub
ret
popa
lods
lock
inc
mov
pop
lods
push
mov
ret
cmp
lods
jnp
fldcw
out
mov
shl
shl
push
pop
jo
xor
std
gs
imul
fsubr
mov
aad
out
mov
xchg
mov
pop
mov
mov
stc
(bad)
xor
rol
bound
jbe
movs
jmp
sbb
sub
in
jno
cmps
fs
fld
or
(bad)
mov
push
(bad)
mov
pop
fnstcw
mov
xor
pop
lods
jb
(bad)
sbb
or
mov
adc
xchg
sub
dec
jne
mov
fucom
or
mov
test
cmp
shl
pop
cmps
mov
rol
mov
mov
mov
iret
shl
ja
stos
in
int
push
jecxz
enter
leave
and
repnz
add
scas
jns
mov
retf
mov
out
(bad)
fsubr
push
fsubr
das
imul
fdivr
inc
fdiv
add
mov
mov
xchg
fsub
cmp
shl
lds
pop
or
pop
ins
mov
add
daa
mov
cwde
repz
aas
lea
dec
sbb
mov
fs
inc
in
pop
sbb
loop
jmp
aad
inc
pop
and
popf
mov
mov
add
jg
fnstsw
xor
sbb
shr
jmp
pop
add
dec
rcl
sub
fisub
ins
lds
or
out
daa
mov
out
int3
pop
fistp
mov
cmp
dec
imul
cmps
rcl
mov
and
shl
adc
fmul
sbb
cwde
retf
mov
into
aam
dec
rol
out
stc
ds
fcomp
repz
jnp
add
ins
ffreep
mov
push
aad
cmps
in
out
ja
aad
ror
push
ret
cli
aam
sub
int3
(bad)
shl
jmp
inc
xchg
(bad)
call
mov
push
push
out
sbb
jne
and
lock
xor
push
movs
jge
leave
ret
cmp
ret
sbb
loop
clc
xor
test
in
fld
lods
popf
not
dec
stos
adc
sbb
jbe
addr16
jo
xchg
push
xor
sbb
xor
iret
call
cmp
lea
add
int3
rcl
push
pop
imul
mov
aad
add
dec
fiadd
ins
mov
fs
dec
fmul
xor
sbb
adc
ss
loop
pusha
jno
sbb
lock
dec
adc
fimul
lds
dec
inc
dec
arpl
xchg
and
push
iret
or
pusha
ins
sub
imul
data16
mov
retf
nop
(bad)
jmp
rol
test
jg
adc
ins
mov
(bad)
aad
jle
push
push
jle
in
pop
add
dec
mov
mov
aas
mov
test
mov
sub
(bad)
lods
inc
add
retf
push
pop
les
das
mov
in
(bad)
mov
sbb
data16
mov
rcl
mov
lods
dec
popa
xchg
loopne
inc
sar
lods
fimul
mov
ret
imul
sub
ret
cmpps
pop
push
cmps
add
fidiv
enter
fstp
daa
enter
(bad)
cmp
dec
jmp
ja
xor
fidiv
or
cmc
cmc
test
jbe
faddp
mov
mov
(bad)
mov
das
cmp
pop
add
fcomp
cmp
mov
xchg
pop
mov
fs
sub
leave
lods
test
jmp
push
sub
les
fstp
dec
inc
inc
sub
repnz
push
xchg
xor
int3
(bad)
xchg
inc
int
pop
adc
fistp
adc
retf
rol
pushw
(bad)
outs
movs
(bad)
xor
out
mov
or
mov
jno
retf
lahf
fisubr
daa
xchg
out
push
cwde
and
xchg
sbb
pop
test
or
rep
int
pop
cld
out
dec
out
dec
test
retf
adc
(bad)
ins
ror
xchg
call
test
push
pop
imul
aad
jge
pop
sub
pop
fst
inc
aad
aad
or
pop
pop
cli
leave
ficom
jno
outs
(bad)
loopne
int3
pop
pusha
and
mov
in
out
push
dec
xchg
add
sti
sub
xor
loop
(bad)
dec
jns
push
xchg
pop
push
cmp
fdiv
cmp
xor
xchg
pop
lds
xchg
add
stc
fcomp
adc
cli
(bad)
imul
and
ins
xchg
rcl
push
and
mov
inc
repz
outs
cli
loop
fsubr
pop
rol
mov
jo
test
jbe
daa
vpsrad
push
cmps
fsubr
jae
lock
inc
in
ror
jae
sbb
(bad)
shl
cmps
and
lods
jnp
push
mov
push
outs
jmp
jbe
icebp
jo
xchg
push
inc
pop
pop
or
(bad)
jmp
or
jo
into
ror
jge
ds
ins
out
sbb
aas
mov
sub
adc
adc
pop
out
jp
sub
scas
int3
je
shl
icebp
dec
cld
stos
sub
dec
repnz
push
mov
add
jnp
daa
jge
in
out
pop
shr
push
(bad)
lock
test
mov
in
jp
sbb
repnz
stos
dec
mov
mov
clc
(bad)
test
push
inc
lock
lods
out
jge
mov
adc
clc
fcomip
inc
ins
outs
scas
pop
ins
sbb
test
lods
pop
imul
pop
or
daa
fcomip
retf
aaa
xchg
cmps
(bad)
dec
ret
mov
jg
icebp
sub
icebp
fwait
pop
sar
call
pop
dec
mov
lahf
mov
xchg
scas
inc
stos
dec
loope
cld
ret
ret
mov
aaa
jne
inc
jae
inc
mov
mov
lea
cmp
pop
mov
rcl
repnz
add
push
mov
sub
or
push
sbb
shl
sbb
fdivp
and
mov
lods
jb
dec
repz
mov
nop
ins
(bad)
hlt
mov
daa
cmp
fisubr
hlt
and
xchg
(bad)
jns
inc
hlt
jp
xchg
hlt
xlat
cmps
retf
cli
cmc
and
enter
sub
sbb
aam
shl
sub
push
mov
fcomp
(bad)
mov
xchg
sbb
push
mov
fimul
cmp
data16
sub
leave
rol
loop
dec
loopne
imul
jns
(bad)
iret
dec
inc
scas
add
div
arpl
push
adc
div
ret
sti
mov
push
jmp
dec
stos
div
pop
lea
ret
sub
neg
mov
lds
stos
jmp
nop
(bad)
loopne
fnsave
xor
xor
xchg
lds
int3
retf
cmps
test
lock
lods
xchg
pusha
cmp
or
mov
cmp
inc
nop
gs
and
push
clc
sti
rol
ja
(bad)
sub
pusha
clc
xchg
retf
pop
push
push
cs
test
in
sub
dec
mov
les
idiv
push
bound
push
adc
xor
mov
xor
xor
in
ret
mov
push
add
cmp
mov
cmp
sbb
mov
cmp
push
in
mov
retf
ror
push
movs
repnz
pop
adc
push
cmp
mov
xchg
test
cmp
cdq
inc
shl
(bad)
mov
retf
ja
sti
and
xchg
mov
mov
sub
sti
test
ss
or
push
inc
ret
cmp
xor
imul
in
cs
js
retf
daa
std
cld
sti
xor
cmp
bnd
sub
cld
pop
cli
push
xor
cmp
cwde
ror
out
push
repnz
out
jmp
ret
out
hlt
sti
add
test
and
inc
jl
or
push
sub
mov
in
sub
std
and
cmp
and
pop
mov
pop
std
dec
cmp
mov
jns
(bad)
cmp
std
(bad)
push
cmp
mov
int
inc
pop
mov
mov
cmp
mov
xchg
mov
xor
lods
push
les
jbe
mov
push
mov
lods
jmp
and
aad
in
mov
std
xchg
dec
xor
aad
jne
add
fld
(bad)
out
jmp
xor
add
xchg
jo
xchg
push
cld
mov
or
sub
push
sahf
jb
inc
push
daa
fbld
scas
and
adc
jbe
in
mov
and
mov
(bad)
lods
sub
fwait
sub
jle
jne
sub
in
pand
push
loopne
inc
cs
mov
in
lahf
pusha
repz
loopne
daa
pop
loopne
fisubr
mov
call
add
pop
jp
lahf
int3
inc
inc
daa
lods
xor
out
mov
test
and
sub
das
adc
loope
repz
adc
inc
cwde
popf
ins
sub
loope
jae
xchg
gs
daa
arpl
loope
sbb
jp
je
arpl
lods
or
gs
mul
not
test
xor
sbb
loop
outs
(bad)
loopne
dec
jo
mov
push
aam
push
mov
jge
jns
lods
and
imul
push
mov
cmp
aam
adc
int
jecxz
sub
cmp
ret
push
mov
xchg
arpl
out
pop
pop
ins
jecxz
jb
mov
cli
imul
leave
push
adc
nop
(bad)
sub
sbb
popa
sbb
and
sar
fsub
mov
ret
out
mov
outs
mov
int
in
and
movs
scas
mov
sub
mov
test
in
xchg
int
loopne
std
shl
mov
ja
and
sub
lock
pop
mov
mov
sar
(bad)
rcr
add
lods
sub
in
loop
xor
push
ficomp
dec
out
jbe
gs
pop
mov
pop
push
cli
jg
ret
out
fmul
push
enter
sbb
jo
inc
xor
ja
retf
fnsave
or
push
out
inc
or
(bad)
(bad)
cmp
cmp
in
xor
sub
cmp
xchg
push
pop
mov
mov
aas
mov
js
adc
std
fwait
clc
fwait
adc
and
outs
jmp
mov
out
int
out
mov
mov
test
lods
mov
sub
call
(bad)
fcmove
sub
mov
adc
stc
xchg
push
cli
mov
es
sub
stc
(bad)
push
cmps
dec
call
lock
in
jno
dec
pslld
xchg
push
adc
dec
pop
(bad)
pop
cld
sub
rcr
aam
push
push
repnz
and
retf
add
retf
repnz
cmps
out
aam
imul
idiv
(bad)
into
add
ds
pusha
adc
test
dec
std
data16
jmp
mov
or
pusha
adc
adc
in
jle
ins
out
jmp
div
sbb
daa
pushf
test
stos
dec
lods
inc
adc
mov
push
sub
mov
mov
sahf
popa
mov
dec
jmp
inc
movs
cmp
mov
xchg
out
sti
jge
xor
scas
sbb
xlat
out
ret
out
inc
(bad)
jp
stos
std
mov
js
iret
dec
outs
jg
jmp
call
mov
jo
out
mov
jb
sub
inc
or
daa
cmps
jmp
jp
das
imul
leave
rcl
lds
in
int
dec
jle
fwait
push
lds
sbb
mov
mov
and
pop
xchg
enter
lods
sub
in
aad
inc
aad
pusha
jg
dec
ret
dec
mov
mov
push
xchg
dec
leave
in
lods
push
ret
ficomp
xor
mov
lea
mov
mov
push
jg
mov
mov
push
mul
mov
jno
fdivr
out
ret
jp
or
push
push
push
loop
enter
fiadd
(bad)
imul
pinsrw
sbb
rcr
mov
push
cmp
std
fidiv
fst
mov
sub
sti
adc
jl
or
jbe
or
adc
jl
mov
jns
mov
mov
xchg
push
xchg
imul
ret
ficomp
adc
and
fisttp
mov
or
lock
rol
cmp
sub
(bad)
jp
cdq
data16
cmps
daa
fsubp
outs
retf
mov
(bad)
shl
dec
mov
scas
sub
jnp
out
loopne
cmp
shl
in
pop
add
inc
cwde
aas
xchg
pop
pop
sub
jnp
xchg
sub
popa
jnp
jae
pushf
adc
rcl
sar
scas
push
fst
mov
push
jge
adc
loopne
(bad)
in
mov
imul
popf
imul
adc
(bad)
jle
in
fwait
rcl
mov
lds
dec
xlat
fist
aam
outs
mov
adc
ret
nop
daa
mov
or
push
iret
mov
ss
mov
xchg
inc
shr
mov
and
iret
xchg
sar
shl
gs
xchg
inc
sub
mov
adc
push
lods
sub
je
jne
jo
xor
shl
popf
xchg
std
mov
fcomp
add
fcmovb
xor
rol
lods
sub
push
lods
mov
rol
and
inc
jmp
sub
fstp
sub
ja
test
inc
or
sub
loopne
ins
ret
(bad)
mov
ret
pop
cmp
jp
xchg
sub
pop
test
dec
cmp
and
sbb
jnp
xor
(bad)
rol
into
jmp
cmp
out
(bad)
jb
js
jge
shr
cmp
mov
vorpd
cdq
mov
ins
stos
mov
cmps
lods
sbb
jns
cmps
mov
pop
sub
cmps
scas
fdiv
pop
out
scas
or
sub
cmps
(bad)
fnstsw
test
clc
cmp
jg
lods
ss
jmp
int3
xor
test
mov
jo
sub
imul
movs
jg
xchg
idiv
in
gs
cli
std
ret
dec
call
push
sbb
pop
mov
retf
dec
scas
and
mov
test
daa
sub
jns
pop
sbb
xor
test
sti
retf
into
test
in
and
mov
jge
cmc
cwde
pop
xchg
xor
cdq
ja
and
iret
imul
xchg
xlat
or
scas
add
popf
or
dec
xlat
outs
das
rcr
dec
sbb
jns
das
mov
dec
je
dec
xchg
sbb
sbb
in
pop
rcr
sbb
std
jbe
push
xor
fcmovnu
int
repnz
pop
in
xor
jnp
adc
pop
fcomp
fist
aas
jl
daa
sub
ret
ficom
sbb
int
sbb
or
rcl
shl
mov
mov
or
mov
jnp
loop
mov
xor
xor
in
xor
mov
sbb
jle
sub
ins
scas
cmp
xchg
mov
push
ret
sbb
or
add
adc
mov
daa
inc
and
fldenv
push
mov
mov
pop
xor
push
mov
icebp
stos
retf
ds
cmp
mov
out
cmp
cmp
ficomp
int3
push
sub
or
neg
push
jmp
xor
inc
sbb
ins
inc
popf
cmp
ret
adc
push
sbb
sahf
sbb
xor
xor
shr
ins
mov
mov
cmps
in
repnz
lods
cdq
jl
mov
mov
gs
fild
shl
jo
sbb
jmp
mov
inc
out
mov
push
addr16
jbe
dec
cmp
mov
mov
jo
aad
and
cmp
repnz
cmp
retf
ja
jns
jmp
retf
mov
cmps
pop
movs
push
adc
or
mov
scas
daa
(bad)
out
jge
mov
push
and
mov
ins
shl
sub
jno
sbb
adc
fisub
movs
cmp
adc
aam
mov
jle
xchg
xchg
adc
aad
(bad)
add
cli
inc
fstp
jle
inc
and
popa
adc
int3
xchg
pop
cmp
lods
jo
push
std
mov
add
push
xchg
(bad)
loop
add
mov
pop
cmp
xchg
sub
lods
mov
mov
sti
retf
mov
or
or
xchg
push
lahf
addr16
fabs
(bad)
fst
test
sar
or
jp
in
adc
adc
jg
out
inc
xor
movs
adc
jne
into
adc
and
add
sub
add
xchg
sbb
inc
dec
mov
add
arpl
gs
cdq
ror
ins
int3
mov
sahf
call
jbe
mov
sahf
inc
mov
inc
ja
dec
imul
repnz
ja
pop
or
cmp
mov
add
cmp
ss
pop
mov
pusha
cli
xchg
and
and
test
xchg
push
test
imul
ds
lahf
adc
cli
cmp
add
dec
add
xchg
mov
xchg
mov
cmp
data16
cmp
adc
into
fidiv
lods
int
jb
mov
(bad)
xchg
adc
ret
aam
pop
xchg
sahf
dec
pop
pop
mov
cmp
into
cmp
enter
add
test
into
add
xor
mov
cmp
fist
sub
(bad)
sbb
mov
sub
add
dec
iret
sbb
out
lea
daa
or
push
add
cmps
dec
add
jge
mov
call
push
out
sbb
mov
push
mov
xor
sub
int
adc
jmp
int
add
and
stos
dec
lods
sub
jge
shl
call
jmp
add
aaa
les
mov
in
or
sahf
sub
mov
xchg
push
cmp
pop
cmp
jmp
or
cld
in
pop
sbb
push
aaa
(bad)
mov
adc
pop
fwait
mov
or
ds
sub
pop
shr
ror
push
dec
sub
jns
test
or
push
push
aam
daa
adc
adc
jmp
out
jae
push
mov
and
adc
dec
aad
mov
xchg
push
les
test
sbb
ins
or
or
test
mov
aad
movs
out
imul
fmul
push
in
mov
and
mov
loopne
sbb
fsubr
xchg
mov
or
cmps
movs
and
adc
fucom
mov
aas
push
add
out
aad
movs
jmp
mov
dec
lods
or
or
or
cmc
das
mov
test
fbstp
sub
icebp
pop
mov
lock
or
daa
cmp
inc
jecxz
or
int
xor
sub
ds
mov
cmc
xchg
mov
(bad)
retf
mov
daa
fmul
in
pop
push
sub
out
aad
mov
sub
pushf
cmps
mov
(bad)
xchg
movs
jmp
mov
fcmovne
(bad)
mov
div
push
and
aas
jno
mov
cmp
mov
retf
mov
xchg
leave
mov
scas
push
inc
es
mov
ins
das
(bad)
aaa
pusha
pop
push
adc
mov
push
xchg
cmps
ins
sub
mov
pop
loop
out
ret
mov
lock
mov
push
xchg
gs
out
pop
add
xor
(bad)
daa
push
imul
jmp
stos
dec
push
cmp
test
pop
mov
adc
push
daa
sbb
ins
xor
mov
imul
movs
inc
sub
retf
mov
imul
pop
jns
mov
popf
out
pop
pop
cmps
mov
jae
jp
dec
sub
fdiv
mov
jnp
mov
mov
mov
cmc
js
out
pop
fiadd
cmp
jnp
mov
adc
cmps
mov
mov
dec
mov
jne
mov
cli
jmp
jmp
test
xchg
jmp
sub
imul
mov
cmp
mov
push
sahf
lahf
sub
mov
cmp
sub
iret
xor
aaa
sub
mov
loope
std
sahf
sub
dec
daa
mov
xor
jmp
mov
inc
jno
js
dec
mov
aas
add
dec
mov
fmul
mov
xor
cmps
jl
jbe
cmps
mov
aas
push
adc
sub
inc
movs
jmp
mov
xchg
jno
fld
clc
or
cmc
movs
movs
jmp
mov
cmc
aaa
or
fdiv
mov
(bad)
mov
test
mov
ins
push
push
mov
test
or
cdq
mov
cmp
cwde
sub
push
daa
xor
movs
jmp
and
daa
mov
sub
add
and
mov
mov
mov
movs
daa
js
push
cmps
popf
and
sbb
add
mov
movs
out
pop
mov
fwait
and
pusha
adc
xchg
bnd
mov
fs
sbb
mov
sub
push
movs
out
pop
jge
les
xchg
movs
mov
mov
push
mov
fdiv
mov
adc
cmps
test
and
adc
xor
mov
and
mov
fmulp
fisubr
mov
(bad)
mov
movs
daa
sub
cmps
outs
and
jmp
out
imul
sub
sub
out
jno
outs
sub
aam
imul
out
push
mov
ins
ins
out
imul
sub
dec
xchg
dec
sub
out
jno
iret
daa
popf
imul
sub
push
ins
mov
aas
call
ds
imul
and
std
ds
shl
inc
imul
sub
push
push
ret
cmps
bound
aas
inc
adc
sub
cli
cmp
mov
(bad)
mov
or
aas
mov
pop
cmps
jle
aas
or
fldcw
mov
pop
movs
jmp
jl
outs
jno
fld
hlt
xor
cmc
mov
add
imul
fucomp
pop
lea
ins
add
pop
movs
mov
js
push
mov
mov
push
inc
sub
out
xor
jbe
mov
add
and
inc
ins
arpl
push
imul
retf
sub
out
jno
inc
bound
lea
ins
(bad)
fadd
mov
enter
out
jno
inc
popa
dec
sbb
and
mov
sbb
pusha
jbe
cmps
dec
and
sub
inc
sub
jl
out
dec
in
ret
dec
inc
mov
int3
mov
mov
fbld
mov
mov
push
add
sbb
jle
mov
adc
cmps
fdiv
ds
sbb
jge
xstore-rng
cmps
inc
and
fldenv
mov
dec
and
fdivr
mov
jae
inc
dec
adc
out
imul
sub
loop
(bad)
imul
and
adc
ins
jp
call
ins
and
cmp
mov
pop
mov
cmp
mov
sbb
int
cmp
fst
mov
mov
ins
ret
imul
ins
es
pop
je
inc
sub
out
jno
loopne
cdq
imul
sub
nop
jae
ins
stos
mov
xchg
or
push
inc
test
(bad)
mov
jbe
cmps
push
and
stc
daa
jae
cmp
inc
or
fbld
jbe
cmps
push
and
pop
adc
mov
nop
movs
out
pop
idiv
es
mov
sub
jns
mov
dec
repz
imul
sub
xchg
outs
mov
dec
pop
cmp
cs
push
int3
xor
(bad)
lock
sub
out
daa
add
inc
int
sub
xor
mov
sub
int3
addr16
push
push
sub
mov
movs
out
pop
retf
sub
mov
sub
sub
out
jno
cmp
popa
imul
xchg
mov
aad
mov
xchg
pop
sub
les
and
pop
jbe
cmps
and
daa
shr
mov
and
push
cmp
and
es
sub
lea
cdq
ins
js
in
(bad)
fidivr
imul
push
dec
adc
sub
out
mov
mov
mov
dec
jne
cmp
mov
xchg
push
push
fsub
mov
xlat
(bad)
pop
repnz
cdq
mov
sub
aas
cmp
movs
out
pop
outs
cmps
and
cmp
in
mov
dec
movs
jmp
xor
ins
sahf
frstor
mov
movs
daa
and
cmps
xor
aas
loope
movs
ins
sub
inc
xor
retf
fwait
sub
out
jno
xor
das
sbb
sub
(bad)
and
push
mov
stos
push
je
sub
xor
or
in
(bad)
inc
mov
push
cmp
or
mov
mov
and
fld
mov
movs
daa
push
pop
pop
cmps
pop
and
or
mov
daa
out
imul
pop
sub
fst
out
jno
xchg
sub
repnz
out
jno
sbb
add
ins
push
int3
aam
ins
push
mov
inc
(bad)
adc
and
inc
push
sub
adc
out
jno
xchg
sub
int3
and
mov
mov
push
pop
mov
and
push
imul
xchg
arpl
imul
daa
mov
sbb
sub
pop
and
mov
mov
int
mov
xchg
call
jge
and
sub
inc
push
sub
jmp
jge
retf
mov
sub
and
aas
scas
daa
push
cmc
jp
jmp
adc
jnp
ds
imul
ins
push
int
cmp
adc
cmp
ja
adc
aas
and
leave
sub
je
jmp
adc
aas
xchg
xor
cmp
in
imul
xlat
ins
push
int
xor
in
sbb
das
jbe
cmps
in
and
cmp
sub
jmp
dec
movs
out
pop
aam
es
sub
out
jmp
jmp
out
jno
or
out
movs
jmp
out
dec
jno
sbb
mov
aas
aam
loopne
mov
fld
mov
mov
movs
daa
add
cmps
loop
aas
xor
(bad)
xchg
in
mov
dec
inc
cmp
loopne
push
sub
or
and
cmps
adc
sub
neg
in
dec
add
ins
pop
mov
dec
or
xchg
mov
push
dec
sbb
aas
mov
movs
out
mov
mov
fisttp
stc
push
icebp
pop
movs
daa
dec
pop
pop
cmps
clc
and
add
push
sub
push
movs
out
pop
mov
push
jmp
movs
jmp
hlt
jmp
sbb
mov
push
sbb
sub
gs
repnz
push
movs
jmp
icebp
out
jno
jnp
dec
enter
inc
mov
int3
leave
fnstsw
dec
lds
cmps
pop
fdiv
cmps
out
and
sbb
enter
daa
int
sub
sub
out
jno
out
ret
retf
cmc
mov
sub
jmp
daa
(bad)
leave
cdq
ins
adc
sub
movs
mov
enter
aas
ror
mov
push
int3
aam
(bad)
fcom
mov
mov
shr
aas
(bad)
(bad)
pop
sub
cmp
and
adc
ins
shl
jae
ret
inc
ds
cmps
sar
dec
jo
mov
push
mov
inc
sub
in
call
rcr
mov
mov
push
and
sbb
int3
lahf
mov
push
mov
imul
aas
pushf
adc
mov
add
(bad)
ficomp
repz
sbb
scas
jbe
cmps
fsub
aas
inc
adc
ins
stos
out
imul
xchg
sub
stos
mov
imul
addr16
das
imul
stc
ins
inc
(bad)
ja
inc
cmps
aam
aas
or
loopne
mov
pop
movs
jmp
shl
nop
jno
jnp
not
repz
mov
in
fsub
and
push
adc
lahf
adc
adc
(bad)
iret
mov
mov
ins
int
inc
mov
scas
test
jp
jbe
pop
xchg
push
mov
mov
cmps
mov
push
push
aas
das
pop
adc
xlat
dec
(bad)
jmp
mov
adc
inc
out
mov
test
nop
call
in
int3
js
adc
inc
inc
pop
(bad)
mov
ret
scas
ror
daa
lods
gs
mov
mov
repnz
leave
dec
xchg
jno
push
push
mov
inc
fstp
cmp
repnz
nop
xchg
cmp
out
inc
lods
mov
push
mov
mov
(bad)
(bad)
cmps
and
daa
dec
xor
push
popa
jp
lock
rol
and
adc
adc
jecxz
icebp
lea
adc
jge
adc
adc
rcr
ja
push
cmp
xchg
cmp
adc
xchg
aad
mov
add
gs
add
int
inc
movs
jmp
test
stc
pop
mov
add
sub
inc
sub
pusha
daa
sub
or
mov
repnz
push
add
ins
mov
and
ffree
inc
mov
inc
mov
test
add
pop
test
(bad)
fimul
inc
jmp
ret
hlt
mov
jnp
mov
add
ret
jno
mov
in
inc
ja
inc
and
or
mov
dec
inc
inc
movs
push
xchg
aas
cmp
mov
addr16
xchg
out
in
fiadd
cmps
clc
inc
pop
jge
push
jbe
lods
jl
mov
das
jae
mov
mov
ins
xchg
mov
add
add
fadd
in
cs
lods
xchg
mov
fistp
popa
outs
sub
mov
sub
jmp
xchg
ins
mov
mov
pop
ret
jb
pop
pop
push
clc
dec
sub
dec
cdq
or
stos
in
mov
xchg
shl
lock
push
dec
xor
push
fnstcw
jb
scas
mov
int3
dec
mov
jns
test
mov
sbb
iret
mov
mov
test
ins
dec
sbb
pop
mov
jns
dec
and
(bad)
pop
mov
jle
cmps
add
xor
adc
int3
out
int3
ror
addr16
mov
fisubr
daa
lds
ja
dec
sub
xor
mov
jbe
gs
xchg
push
xor
pop
sub
ss
sub
ror
mov
dec
in
xchg
mov
mov
mov
inc
fldcw
je
inc
lods
retf
ss
adc
mov
xor
inc
cld
cli
les
push
popa
xchg
mov
lds
jbe
(bad)
aas
(bad)
fadd
cmps
in
(bad)
fldenv
dec
pop
daa
pop
dec
icebp
cmps
enter
cwde
sub
pop
xchg
aam
dec
push
(bad)
dec
mov
icebp
inc
sahf
adc
xor
dec
int3
nop
cdq
mov
sub
and
add
xchg
cwde
and
dec
xor
adc
sbb
clc
mov
dec
fmul
inc
pop
cwde
mov
in
movs
jmp
jmp
ret
inc
ret
inc
in
cmp
mov
mov
in
lock
mov
push
(bad)
push
mov
(bad)
mov
pop
data16
lahf
xchg
xor
jnp
sub
lods
ds
jbe
pop
shr
push
lahf
xchg
cld
sbb
inc
test
ds
daa
stos
fistp
lock
mov
test
sti
mov
sahf
sbb
push
cmp
and
mov
cs
pop
sbb
into
ins
xchg
jmp
sub
cwde
mov
or
jbe
movs
(bad)
fistp
pop
imul
mov
movs
and
pop
cmp
mov
or
push
fmul
push
ret
sub
or
mov
jae
mov
add
movs
sub
jae
mov
std
mov
mov
pushf
pop
cmp
mov
aad
movs
mov
sub
mov
fnstenv
in
ins
push
int
je
sub
je
js
sbb
imul
push
scas
int3
std
push
jae
movs
xor
push
inc
mov
and
inc
les
movs
in
dec
jns
mov
call
jne
add
les
jae
dec
sub
jle
mov
out
clc
mov
dec
je
test
fnstenv
les
sub
jbe
mov
lds
ror
jle
jns
xchg
cld
push
les
jae
fnstenv
int
ja
add
and
test
ss
sbb
jecxz
rol
or
(bad)
js
sbb
inc
dec
add
cmp
pop
(bad)
and
push
adc
mov
shl
adc
je
inc
cmp
pusha
sub
std
or
push
fisub
sbb
xor
cli
inc
xor
add
mov
add
jmp
jne
adc
and
(bad)
and
jns
mov
retf
fadd
jecxz
xchg
pop
ins
outs
mov
daa
movs
jge
aas
adc
push
ins
out
mov
ret
test
pop
adc
jle
iret
imul
mov
fwait
retf
rol
and
cmps
(bad)
outs
shl
jp
test
test
xor
pop
in
sahf
outs
mov
jp
int
jnp
xchg
adc
dec
xchg
nop
imul
mov
jnp
out
scas
retf
loopne
lahf
push
sub
mov
idiv
sbb
push
ret
xor
leave
(bad)
xchg
jecxz
ret
ret
ins
jl
jmp
and
inc
sbb
xchg
int3
or
pop
pop
fadd
dec
sbb
ret
xchg
jo
int
cwde
xchg
or
cmp
nop
pop
xchg
sub
mov
jae
xchg
pop
mov
int3
sar
(bad)
fs
daa
(bad)
cmps
adc
imul
sub
pusha
aad
shr
jo
mov
sub
ins
outs
jmp
rcl
xchg
dec
add
sub
xchg
shr
ss
(bad)
adc
jb
mov
add
add
sub
mov
sub
mov
pop
pop
ins
jle
lds
push
(bad)
shr
daa
jle
ins
jle
push
cmp
lods
and
pop
fstp
scas
lods
call
fiadd
lds
xchg
xchg
lods
nop
ds
or
fcom
mov
je
xchg
daa
(bad)
stos
ins
cmps
scas
lods
(bad)
and
mov
or
jb
ja
push
adc
sub
pusha
cdq
xor
jmp
xchg
dec
mov
cmp
mov
aas
lea
mov
shl
out
xor
xor
je
sbb
mov
mov
arpl
push
fs
mov
mov
mov
ins
cmp
daa
xlat
(bad)
clc
imul
ins
pop
cld
push
pop
fsub
mov
sub
cwde
or
lock
call
mov
and
int3
call
fld
jbe
sbb
xchg
(bad)
arpl
add
int
ja
jmp
push
mov
jne
mov
movs
mov
ins
fs
cmp
push
cmp
fucom
lahf
cmp
cmp
sub
fs
(bad)
out
jns
daa
(bad)
fs
or
mov
nop
push
out
popf
fst
xchg
nop
imul
fst
dec
fucomp
sar
jle
jae
xchg
and
rcl
jp
mov
addr16
dec
test
aam
repnz
cmp
pop
jb
adc
in
jnp
mov
daa
pop
mov
dec
scas
jp
(bad)
in
fbld
js
push
adc
pop
fnstcw
jns
(bad)
add
ficom
cmp
add
ins
cmps
push
stc
addr16
addr16
addr16
jmp
push
cmp
jg
push
sbb
mov
mov
les
pop
test
and
jge
daa
call
mov
imul
sub
push
jnp
lea
in
push
int3
push
xor
bound
xor
mov
push
movs
movs
push
jl
mov
jmp
xchg
mov
cmp
sub
sub
jge
mov
imul
ins
imul
ins
mov
dec
stc
cmp
push
push
mov
mov
mov
pop
xlat
mov
scas
sbb
and
stos
(bad)
adc
push
lahf
dec
(bad)
cmp
lock
push
add
cmps
ss
lods
(bad)
sub
or
mov
outs
test
in
sbb
jmp
stos
mov
(bad)
sub
aam
test
mov
adc
pop
outs
or
retf
das
jmp
jmp
inc
daa
mov
out
(bad)
sbb
int3
cmp
dec
push
jge
jnp
mov
ret
mov
ret
push
or
(bad)
cli
mov
std
cli
mov
mov
pop
nop
sub
nop
nop
in
aas
(bad)
mov
cmp
aad
xchg
push
retf
xchg
dec
lea
cli
xlat
gs
xchg
jae
xor
push
push
test
fwait
add
dec
mov
adc
std
stos
jmp
mov
lock
xchg
hlt
cli
in
lock
retf
xchg
xchg
cld
pop
fsubr
daa
jns
stos
adc
mov
push
sub
enter
(bad)
xchg
adc
mov
sub
adc
outs
out
(bad)
mov
jl
mov
popf
out
loope
cmps
pop
xchg
mov
je
sbb
mov
sub
mov
daa
in
sbb
mov
mov
rcl
jmp
xchg
adc
pop
mov
push
sti
mov
jg
mov
imul
adc
mov
ret
xchg
sub
(bad)
mov
cmps
scas
push
daa
shr
dec
imul
ins
imul
int3
xchg
inc
mov
mov
imul
ins
push
xor
inc
aam
dec
je
xchg
int3
push
xchg
fwait
ins
jp
dec
pop
dec
xchg
sub
xchg
std
push
fcomp
push
xchg
daa
jne
xchg
imul
xor
(bad)
push
scas
and
stos
sar
mov
ins
ins
push
cli
cwde
mov
rcl
sbb
and
cmps
iret
mov
fistp
and
dec
mov
or
mov
cld
pop
cmc
nop
jge
mov
cld
cwde
xchg
push
inc
out
ja
cdq
sub
lds
(bad)
les
cld
movs
and
add
es
aad
mov
iret
dec
mov
jge
ja
out
ret
lds
cmp
imul
movs
mov
bnd
cs
loopne
mov
mov
mov
mov
adc
mov
sub
fwait
cwde
aas
test
fistp
mov
pop
pushf
sub
pushf
mov
inc
pushf
mov
test
int3
lock
mov
add
cmp
mov
gs
and
inc
and
jae
popfw
xor
xchg
push
or
fmulp
icebp
fs
cdq
mov
mov
retf
add
dec
in
retf
in
std
call
in
(bad)
call
sahf
and
and
aaa
movs
mov
and
mov
popf
cmp
cmc
lahf
int
call
fcmovb
lods
cmps
mov
cdq
ins
push
or
fsub
xchg
or
mov
imul
retf
sahf
push
pop
cmp
xchg
sub
xor
pushf
push
inc
ss
scas
scas
xchg
scas
gs
mov
ins
or
mov
add
sbb
mov
mov
xchg
push
enter
xor
(bad)
sbb
outs
stos
sbb
xchg
aad
in
push
cmp
out
jg
adc
mov
mov
jns
pop
(bad)
movs
mov
cwde
imul
popf
clc
mov
sbb
and
and
and
outs
xchg
stc
cmps
test
sub
sbb
movs
out
jg
(bad)
aam
sub
lahf
or
add
xor
xchg
xchg
and
jo
pushf
jge
xchg
loop
lock
xchg
jmp
or
push
push
test
mov
mov
loop
push
mov
jg
jae
pop
div
add
adc
and
jo
pop
test
push
ins
and
cwde
stc
cmps
and
dec
lock
ins
clc
frstor
test
push
(bad)
jb
and
test
fdiv
fmulp
stc
xchg
mov
jns
dec
xchg
movs
mov
ins
xchg
movs
xchg
mov
cmps
mov
xchg
xchg
push
or
call
xchg
xchg
push
mov
and
movs
jmp
push
or
xor
and
sub
mov
add
enter
les
popa
cmp
repz
add
fsub
mov
les
jmp
out
sub
add
aas
movs
pop
inc
or
out
jmp
mov
sub
mov
retf
sub
imul
pop
aas
ins
mov
dec
shr
daa
call
mov
jl
out
or
jp
adc
movs
xchg
pop
push
mov
ins
xor
adc
aas
mov
ins
sbb
test
jp
out
ins
je
add
in
cld
mov
fadd
mov
imul
mov
jnp
mov
cmp
jle
or
popf
or
adc
sub
outs
sub
scas
mov
dec
mov
ret
ins
jb
jl
cmps
sbb
and
jnp
ins
(bad)
dec
test
sbb
mov
(bad)
cmp
ins
jb
pop
mov
mov
scas
ins
add
add
mov
jbe
popa
sub
out
and
ins
cmp
aad
mov
(bad)
jge
out
xlat
daa
jp
sub
sub
pop
xchg
sub
jns
stc
(bad)
jb
sbb
mov
out
aas
and
sbb
sub
sub
fcom
xchg
sbb
in
pop
out
xchg
out
jbe
fs
mov
mov
(bad)
xchg
and
ins
and
imul
pop
pop
hlt
ins
mov
jmp
test
mov
push
mov
scas
or
retf
daa
cmps
pop
lea
ins
mov
leave
jmp
xchg
sub
xor
cmp
aas
and
mov
mov
out
rol
je
sub
mov
mov
mov
out
out
jp
fs
jbe
movs
mov
or
out
jmp
mov
out
mov
ins
in
fwait
xchg
mov
push
aas
inc
dec
cmps
ins
loope
call
mov
dec
dec
pop
jge
in
jmp
(bad)
mov
push
ds
ds
std
mov
sub
mov
mov
lahf
adc
inc
mov
mov
out
inc
dec
mov
pop
sub
daa
jbe
push
mov
mov
ds
adc
mov
jmp
adc
lea
mov
out
std
cmps
mov
adc
cmp
dec
xlat
mov
ins
mov
mov
dec
movs
cmp
adc
inc
mov
mov
out
dec
mov
dec
jbe
mov
mov
ins
scas
fstp
mov
adc
and
pop
mov
push
and
std
outs
movs
mov
and
add
and
mov
hlt
(bad)
mov
mov
cmp
mov
inc
ja
mov
int3
out
mov
push
xor
add
ins
mov
push
(bad)
mov
xor
popf
pop
retf
in
(bad)
mov
imul
ins
push
mov
push
xor
pushf
sub
mov
mov
mov
imul
mov
jae
inc
mov
ins
daa
jmp
cmps
xchg
mov
imul
adc
xchg
sbb
(bad)
and
mov
xor
mov
out
push
jbe
movs
out
jle
movs
sbb
mov
adc
mov
test
mov
retf
test
test
push
and
mov
or
(bad)
movs
daa
add
leave
mov
ins
xor
mov
dec
mov
fsub
call
and
mov
sbb
jnp
and
sahf
call
mov
imul
movs
and
inc
aaa
imul
and
test
call
cmp
out
fsubr
sub
mov
jno
adc
add
sbb
outs
xor
gs
xchg
cmps
cmps
sub
pop
jmp
shr
xor
mov
dec
loop
sbb
aas
push
mov
inc
imul
add
cmp
xor
pop
(bad)
mov
adc
jge
ins
es
fcmovbe
jnp
sbb
push
rcr
dec
mov
add
mov
mov
mov
cmps
(bad)
mov
lock
mov
fs
lahf
push
les
lea
ds
call
sbb
lds
int3
pop
ss
out
movs
mov
and
jg
ja
sub
or
ins
or
shr
mov
sub
mov
ja
push
xchg
scas
adc
push
daa
cmp
pop
pushf
test
dec
ins
ret
jnp
mov
adc
(bad)
dec
inc
add
mov
stos
xchg
mov
rcl
mov
daa
push
aad
movs
xchg
lds
bound
idiv
sub
sub
inc
pop
(bad)
ins
stos
push
adc
jmp
push
dec
fbstp
jns
mov
cmp
stos
mov
push
mov
lods
ficomp
lods
sub
daa
lods
(bad)
xchg
test
xchg
clc
mov
jmp
mov
sub
mov
lods
jle
ins
ja
mov
adc
mov
cmps
sub
adc
mov
mov
ja
scas
sub
retf
xlat
aaa
out
daa
mov
sub
push
scas
fwait
mov
push
adc
mov
sub
scas
xchg
sub
adc
std
pop
enter
repnz
pop
sub
jae
fist
inc
pop
(bad)
loope
jmp
nop
cmps
xlat
iret
scas
push
retf
cmp
imul
mov
(bad)
(bad)
jmp
pushf
dec
scas
xchg
and
out
cmp
movs
cmc
lods
jmp
push
inc
cmp
mov
sub
or
mov
daa
(bad)
sar
adc
mov
and
es
adc
ds
sbb
adc
daa
rcl
cld
jbe
jle
mov
loop
scas
pop
dec
and
retf
fisub
scas
push
jns
adc
pop
icebp
push
fs
cmp
stos
psrlq
jno
jno
ficom
mov
stos
ret
xchg
in
enter
mov
fidivr
sub
out
(bad)
and
mov
inc
jmp
ja
or
imul
aam
or
out
jle
hlt
mov
xchg
fisubr
stos
inc
aam
pop
fcmovbe
dec
jno
mul
sub
(bad)
sbb
iret
mov
adc
sahf
ret
ret
mov
aad
fisubr
cmp
and
jl
movs
mov
cmps
xchg
cmp
xor
fcmovnbe
aad
inc
inc
sub
adc
stos
in
jne
scas
mov
and
mov
icebp
xchg
inc
(bad)
mov
mov
scas
sub
lds
mov
frstor
xor
std
ins
dec
ins
test
xchg
(bad)
fidiv
(bad)
and
out
fisub
inc
(bad)
pop
mov
int3
pop
mov
jmp
addr16
(bad)
sub
inc
mov
and
pop
out
jp
and
in
push
dec
dec
scas
sub
daa
mov
push
mov
dec
int3
test
fdiv
mov
scas
daa
in
pop
mov
fmul
lds
cmp
aas
jg
addr16
fstp
stos
mov
imul
mov
imul
or
sbb
or
jns
imul
jmp
fld
xchg
push
add
scas
push
mov
(bad)
ins
scas
aas
and
pop
fnstenv
jb
lock
cmps
sbb
movs
(bad)
gs
sub
add
aad
pop
xchg
add
pop
test
out
(bad)
aad
std
add
hlt
dec
push
outs
lods
mov
ds
sub
or
in
sbb
sbb
lea
or
jge
pop
stos
ins
xor
(bad)
sar
mov
fld
adc
xor
xchg
jmp
(bad)
rol
xchg
xor
call
adc
mov
rcl
mov
scas
(bad)
fdivr
stc
fmul
adc
data16
xchg
xchg
mov
test
xor
scas
mov
fadd
ror
in
inc
jmp
add
ins
fisttp
neg
mov
jmp
(bad)
dec
ins
fld
sahf
dec
jne
or
cmps
mov
fsubrp
arpl
mov
daa
or
pop
mov
fisubr
mov
ja
clc
mov
nop
sbb
sar
cwde
sub
mov
fbstp
fbld
in
or
ins
fisttp
dec
fbld
push
shr
sti
cld
shl
jmp
cwde
cmps
lock
adc
mov
or
bound
jns
sub
shr
mov
sar
jge
rcl
rcl
mov
addr16
sub
shr
or
ins
rcl
add
cmps
add
jns
xor
pop
xlat
sub
ret
sub
imul
sbb
jno
aad
jae
push
and
mov
dec
mov
mov
push
js
push
mov
jnp
call
aas
lods
pop
jo
cmps
lock
xchg
jmp
pop
pop
lods
sub
inc
sub
ins
leave
les
mov
call
stos
pop
push
and
cwde
loopne
mov
jnp
or
sbb
mov
(bad)
lds
mov
mov
sar
std
movs
mov
inc
js
cmp
pop
lods
shl
cmps
mov
frstor
mov
and
add
leave
mov
xchg
xor
add
xchg
imul
push
sbb
lods
jle
movs
daa
xchg
aad
mov
push
fild
stos
sub
(bad)
fwait
ins
popa
sbb
xor
add
(bad)
sub
inc
idiv
mov
gs
push
and
mov
outs
sbb
xor
in
mov
xchg
pop
das
enter
enter
mov
and
in
jmp
pop
imul
xor
pop
imul
sbb
and
mov
dec
xor
in
fiadd
mov
and
inc
popf
loope
fild
fsub
cmps
add
pop
xor
loope
daa
push
xor
mov
fbstp
fs
out
hlt
dec
loope
scas
mov
jb
jnp
in
retf
inc
push
loope
mov
sub
sbb
inc
cmp
retf
xchg
jg
int3
sub
int3
out
(bad)
xor
rol
jns
jae
fsubr
ss
push
pop
cmps
leave
int
mov
int
jb
jnp
call
scas
or
or
shr
mov
xor
and
test
jle
jae
xchg
int
fwait
dec
adc
mov
and
pop
retf
in
push
cmp
pop
jg
out
ins
scas
ret
mov
out
push
jle
call
or
pop
push
or
and
ret
xchg
outs
leave
xchg
test
mov
ins
out
clc
adc
fdivp
sbb
rol
add
sbb
call
adc
repnz
cmc
pcmpeqd
sahf
aaa
push
rcr
push
out
mov
stos
popf
out
scas
xchg
jo
xchg
movs
inc
xlat
pop
in
outs
jmp
enter
jmp
sub
rcr
(bad)
mov
jge
sar
les
pop
dec
sbb
pop
or
jg
lds
cmps
cmp
scas
aam
xchg
pop
mov
inc
outs
lea
pop
lods
sub
sahf
lock
stc
inc
push
ja
icebp
shl
dec
lock
lods
jae
aas
icebp
fidivr
leave
sub
icebp
mov
cwde
icebp
jo
scas
icebp
mov
lods
aaa
jg
inc
repz
ret
mov
add
pop
mov
cli
mov
fdivrp
les
dec
das
(bad)
mov
mov
push
scas
(bad)
sub
hlt
mov
cld
push
and
pop
adc
mov
mov
jle
ficom
jnp
sahf
or
ins
icebp
hlt
fwait
aad
pop
xchg
mov
sti
adc
faddp
addr16
sbb
push
ins
and
shr
mov
scas
sub
test
sbb
jne
mov
push
xchg
mov
mov
cmc
ret
jo
jne
push
cmp
retf
mov
leave
jne
xor
scas
adc
xchg
fmul
sbb
pop
add
ds
or
lea
jnp
sub
sub
inc
push
sub
xor
out
aas
dec
(bad)
mov
daa
mov
and
sbb
ja
clc
sub
clc
dec
aas
adc
mov
mov
jb
adc
sub
xchg
mov
icebp
or
out
call
jle
mov
outs
sbb
and
sar
lea
ss
sbb
push
popa
fisubr
aam
and
mov
inc
pop
out
jns
cmc
sti
(bad)
jmp
and
fcom
dec
xlat
lock
fwait
lea
and
jb
xor
vpaddb
add
and
or
stos
imul
sar
sbb
int3
ja
loope
jbe
mov
mov
dec
push
mov
mov
test
push
imul
jnp
mov
xor
movs
loopne
mov
ins
imul
mov
repnz
push
push
out
ja
repz
adc
data16
jbe
movs
sub
call
and
(bad)
push
jmp
push
aad
mov
ror
(bad)
cmps
xor
mov
cmp
add
or
jnp
shl
cmp
sub
int3
mov
mov
mov
mov
mov
push
xor
movs
out
pop
add
sbb
lock
ins
movs
sub
loop
mov
data16
(bad)
and
je
pop
jbe
add
ins
dec
adc
loope
ins
pop
jb
addr16
inc
mov
ret
push
and
cmp
jae
jnp
in
in
cmp
sub
call
(bad)
test
push
pop
out
jbe
gs
sub
in
mov
mov
mov
mov
cmp
push
daa
cli
out
xchg
push
pop
jns
jg
sub
lds
fdivr
push
mov
retf
mov
clc
out
jmp
jo
push
ds
inc
and
imul
iret
mov
mov
push
aad
mov
sub
(bad)
hlt
jmp
mov
and
je
mov
add
jmp
push
xchg
fnstenv
mov
lock
push
push
mov
retf
out
rcr
push
mov
int3
out
in
nop
jmp
fst
xchg
push
mov
int3
in
rol
movs
push
daa
mov
mov
push
mov
psrld
jmp
dec
push
out
aad
mov
ins
(bad)
enter
fs
cmp
ret
ds
iret
mov
mov
xchg
iret
mov
mov
pop
aad
mov
push
xchg
push
mov
adc
push
push
mov
retf
out
rcl
push
mov
int3
ret
jmp
push
xchg
push
ds
out
daa
rcl
(bad)
fnsave
adc
out
aad
mov
lock
push
mov
adc
das
adc
pop
push
repnz
mov
stos
mov
int3
movs
sbb
or
sbb
push
mov
jmp
or
inc
ins
push
sub
push
mov
cdq
aad
mov
xor
sbb
jnp
neg
fnstsw
fsubr
sub
(bad)
shr
bound
cdq
aam
fs
lds
cdq
push
mov
jge
and
xchg
hlt
pop
push
fmul
mov
ja
sbb
ins
mov
inc
jb
dec
movs
sub
sbb
push
fdivr
ficomp
xor
jg
push
rol
clc
push
mov
mov
mov
repnz
psrlw
sbb
xchg
into
sbb
adc
inc
pop
loopne
and
or
rol
call
adc
push
scas
sbb
call
mov
push
push
add
and
stos
adc
or
mov
push
arpl
sbb
sbb
jg
fs
int3
aas
sbb
bound
in
(bad)
out
daa
rcr
fsubr
jmp
(bad)
xor
add
enter
ins
adc
pop
push
mov
int3
adc
les
lods
mov
ret
xor
fbld
sub
test
lock
test
xchg
push
loope
movs
jmp
daa
cmps
rcl
cdq
adc
rcr
cmp
daa
ret
sbb
push
pusha
add
add
xor
retf
rcr
ficomp
sbb
or
(bad)
jmp
and
push
pop
and
rol
icebp
stos
mov
mov
sbb
stc
xchg
inc
retf
push
fnstsw
xor
push
dec
imul
leave
fiadd
inc
les
fidivr
fistp
ret
jne
sbb
pop
xchg
adc
sti
mov
into
jge
dec
clc
pop
inc
or
jg
pop
sub
xchg
je
popf
and
push
rcl
adc
rcr
pop
ja
add
ins
fild
call
ins
lahf
int
add
icebp
shl
adc
sbb
add
mov
add
sub
add
jmp
icebp
sbb
outs
sbb
xchg
mov
(bad)
ins
add
sbb
jmp
data16
pop
aad
mov
rol
imul
add
pop
jae
push
sbb
(bad)
mov
sbb
and
mov
cmp
mov
sbb
mov
pop
mov
and
jae
push
or
or
sub
xchg
fsubr
or
inc
inc
xlat
mov
cmps
nop
or
test
xor
and
pop
pop
mov
fisubr
jmp
xchg
mov
jnp
fs
sub
mov
ins
neg
mov
and
test
lods
xchg
cmps
shl
mov
push
or
or
or
sub
inc
xchg
mov
dec
sti
pop
mov
and
push
les
cld
movs
mov
sbb
sub
or
(bad)
mov
daa
inc
pop
ins
out
jmp
mov
xchg
iret
jne
mov
inc
sub
shr
aas
bound
push
ins
or
xor
mov
push
jecxz
adc
mov
mov
mov
ins
push
aad
movs
xor
(bad)
out
pushf
fild
imul
adc
imul
aas
inc
or
jmp
mov
mov
ins
push
push
repnz
mov
add
jmp
ins
sub
fisubr
scas
iret
add
gs
addr16
ins
das
push
icebp
das
fs
int
jbe
pop
out
jae
mov
stos
add
aas
lods
ret
mov
sub
add
mov
jge
iret
(bad)
call
scas
mov
and
fadd
lods
xchg
jmp
add
xchg
mov
mov
mov
loopne
ret
xor
ret
iret
dec
stos
xchg
jmp
push
movs
jmp
iret
adc
lea
jmp
lods
iret
cmc
stos
mov
xchg
(bad)
cmp
pop
push
xlat
xor
iret
sub
jp
pop
mov
cmc
aad
sbb
ins
test
push
push
mov
ins
xor
int3
xor
iret
int
jnp
pop
out
jae
daa
sbb
add
aas
test
(bad)
push
mov
cmp
jns
aad
dec
xor
jl
pop
retf
push
sub
inc
xchg
test
jns
movs
sub
pop
xchg
loop
or
jno
adc
lods
push
add
pusha
ss
lds
ins
ss
ss
fild
pusha
push
mov
ins
or
popa
push
xchg
sub
aaa
jnp
out
daa
push
or
mov
cmp
or
mov
or
mov
adc
push
add
sub
cwde
or
in
arpl
and
pop
cdq
adc
pop
daa
nop
arpl
mov
push
jbe
popa
sub
or
mov
or
mov
sub
cmp
in
daa
mov
dec
in
int3
pop
mov
mov
ret
push
and
jns
sbb
iret
cmp
pop
cmps
sbb
fiadd
and
inc
jnp
js
clc
push
adc
mov
add
dec
jnp
xchg
inc
inc
stos
mov
ins
cmp
mov
mov
pop
lea
sub
out
addr16
adc
pop
mov
adc
fdivr
cmp
push
cmps
aam
rcr
ds
jns
adc
lds
hlt
in
ror
add
movs
pop
sbb
xor
aas
sub
aas
mov
std
mov
jo
fild
in
es
bound
cmps
mov
(bad)
mov
mul
shl
imul
pop
cmp
add
imul
jmp
jmp
add
test
and
jmp
ror
adc
xor
out
retf
mov
and
les
or
aad
mov
xchg
shr
imul
sub
pop
arpl
inc
mov
adc
ja
and
in
hlt
and
mov
mov
(bad)
daa
jns
rcr
inc
cmp
js
popa
popf
mov
xor
and
sbb
in
xor
push
inc
cmp
and
ins
push
(bad)
jp
ds
jmp
xchg
ds
fnstsw
and
push
push
daa
jmp
jmp
imul
mov
daa
cmc
loope
mov
add
jp
mov
cmc
repnz
mov
pop
or
nop
inc
lahf
jne
fist
xchg
jg
mov
(bad)
xor
outs
adc
pop
ins
sub
jmp
ficomp
xchg
jge
push
sub
into
daa
cmp
mov
mov
pop
inc
movs
popf
cmp
(bad)
and
loopne
pusha
ins
cmc
shl
and
pusha
sub
mov
push
mov
adc
out
movs
sbb
or
out
jp
push
imul
mov
dec
movs
mov
lahf
pop
push
aas
imul
icebp
sub
lds
push
dec
pop
imul
mov
imul
test
daa
cmp
jns
sub
ins
int3
sub
daa
sti
xchg
(bad)
xchg
out
cld
call
mov
ins
je
add
test
and
xchg
xor
bound
push
ins
sub
leave
push
in
and
mov
and
mov
leave
jmp
push
or
loop
mov
sbb
leave
jp
idiv
xor
pop
or
add
mov
rol
fimul
repnz
dec
in
shr
jmp
popf
test
mov
cdq
int3
int3
sub
mov
pop
ins
and
not
sub
push
adc
push
push
fimul
daa
fldenv
ins
fwait
adc
inc
inc
xchg
jbe
jae
aaa
sub
rcl
cmps
enter
push
ins
icebp
mov
mov
mov
mov
mov
int3
mov
(bad)
jbe
mov
int
ror
ds
dec
push
jne
sbb
mov
mov
aad
je
mov
mov
or
cmp
mov
sub
and
leave
pop
iret
ins
sahf
in
pop
retf
mov
imul
retf
mov
mov
out
test
sub
push
call
out
jae
cs
xchg
sar
mov
jmp
xchg
pop
xor
es
in
jns
sbb
mov
arpl
push
sub
push
je
sti
les
mov
mov
xchg
or
or
mov
mov
stc
pop
mov
repz
mov
cmp
dec
or
ds
loopne
mov
sub
ins
retf
daa
stc
xor
xchg
out
cld
call
sub
adc
test
mov
mov
in
pop
mov
repz
pop
sbb
dec
jbe
fs
out
cld
mov
das
mov
mov
repz
mov
pop
out
jae
inc
push
xlat
xchg
mov
jbe
movs
mov
sub
pop
nop
in
mov
test
mov
pop
std
push
mov
repz
and
cmp
repz
gs
ins
in
pusha
push
jnp
sbb
(bad)
xor
repz
and
push
test
mov
repz
mov
cmp
in
test
daa
repnz
jae
out
xor
dec
pop
adc
and
cmps
fcom
mov
(bad)
imul
test
sub
pop
int
pop
mov
sub
out
pop
cld
mov
fcom
jns
imul
les
sub
inc
fwait
popa
dec
retf
adc
sub
(bad)
cmp
jge
out
cmc
rcl
sub
jae
inc
adc
retf
sbb
inc
mov
out
xor
sub
inc
sub
adc
pop
xor
int3
sub
ret
push
sub
inc
mov
xchg
inc
lock
and
jle
(bad)
out
inc
cmp
(bad)
in
fistp
daa
push
inc
jae
and
sub
xchg
ins
jnp
xchg
daa
adc
jns
mov
sti
xor
mov
xor
sub
adc
ins
pop
sbb
stos
sbb
xchg
fucom
scas
mov
call
sub
cmp
mov
jbe
popa
sub
xchg
push
in
and
sub
xchg
sub
retf
dec
pop
fist
inc
mov
data16
jmp
(bad)
shr
(bad)
dec
movs
sub
dec
pop
pusha
sahf
push
add
sar
inc
dec
sub
dec
mov
push
add
pop
and
dec
xor
int
(bad)
rcl
sbb
push
sbb
pop
dec
addr16
(bad)
pop
ja
and
dec
mov
sar
(bad)
push
jmp
dec
xchg
mov
ins
dec
(bad)
cmp
gs
enter
ret
dec
inc
sbb
ins
dec
int
dec
mov
(bad)
data16
pop
push
inc
dec
mov
and
add
ins
dec
push
lds
fucom
dec
movs
sub
dec
pop
add
inc
inc
and
cmp
mov
fwait
imul
movs
mov
inc
and
mov
gs
mov
or
add
and
mov
mov
dec
cmc
inc
jno
cli
cmp
mov
push
lea
jmp
inc
(bad)
(bad)
or
xchg
add
adc
mov
ins
push
dec
call
sbb
outs
jnp
mov
int3
icebp
dec
call
outs
xor
aad
mov
inc
xchg
mov
test
lods
mov
inc
xchg
fcom
aad
push
mov
dec
aam
(bad)
ins
dec
pop
out
sub
bound
add
jo
shr
leave
or
inc
fsubr
push
mov
cmps
icebp
jno
xor
out
cli
imul
mov
inc
mov
mov
test
loopne
fild
and
mov
outs
jb
mov
jbe
lea
aad
xor
push
jae
(bad)
repnz
jae
push
jae
push
inc
and
shl
push
daa
pusha
jae
mov
jbe
gs
call
std
(bad)
ficomp
dec
mov
push
dec
jmp
push
sub
scas
xchg
dec
mov
mov
sub
xchg
pusha
cmp
and
push
not
mov
xchg
or
ficomp
sub
ja
int3
cmp
dec
sub
test
daa
mov
js
fisttp
mov
js
int
and
js
mov
jecxz
push
ins
sbb
mov
mov
sub
jns
push
push
sbb
mov
sbb
int
fist
sbb
mov
mov
ins
sbb
mov
out
cmps
cmp
dec
lock
(bad)
mov
mov
mov
add
push
aas
aam
mov
or
pop
mov
jl
int3
dec
js
cmp
movs
(bad)
jge
push
not
jge
(bad)
sti
jb
int3
sahf
jge
std
inc
pusha
dec
sub
jle
push
(bad)
stos
or
dec
inc
dec
push
add
rcl
movs
(bad)
cwde
or
cmp
push
adc
mov
sub
xchg
jmp
adc
std
jne
mov
ins
pusha
int
popa
mov
(bad)
xchg
mov
popa
inc
push
jle
mov
pop
ins
jnp
data16
idiv
movs
or
out
mov
sub
jle
push
ins
(bad)
int
bound
adc
push
lds
mov
cdq
mov
out
(bad)
out
inc
jne
shl
push
jae
jns
push
ja
clc
scas
ja
arpl
ins
in
mov
lds
cmp
arpl
js
mov
popf
mov
sub
jge
cmp
fs
mov
mov
imul
in
cmp
dec
pop
dec
movs
mov
sub
inc
js
jmp
daa
jecxz
jns
and
mov
shl
ins
inc
gs
gs
cmp
inc
cmp
fwait
jae
ss
push
clc
data16
xchg
jge
cmp
mov
push
fnstsw
out
pop
imul
pop
test
jne
in
adc
cmps
pop
addr16
sub
stc
mov
ins
adc
(bad)
fs
inc
push
push
pop
test
test
dec
ds
lds
and
(bad)
fucom
jae
xchg
imul
cld
adc
push
mov
jge
mov
or
test
mov
xchg
ins
stos
add
sub
lods
pop
dec
and
add
fwait
ds
ret
daa
push
jle
push
iret
and
dec
ret
adc
jne
adc
sub
jl
jmp
fstp
or
fdiv
push
mov
push
jmp
push
jns
mov
dec
addr16
xchg
shl
inc
pop
mov
sbb
aam
cmps
pusha
mov
mov
cwde
lds
cmp
mov
cmps
pop
popa
jns
stc
ins
(bad)
adc
mov
cmp
sub
movs
mov
jl
push
test
push
fnsave
movs
mov
outs
mov
sub
push
xchg
mov
jae
xlat
cmps
and
aad
mov
pop
cli
push
inc
inc
sub
mov
sub
xchg
daa
cwde
aad
mov
repz
adc
ins
cmp
imul
sbb
fs
inc
and
test
mov
ins
test
fnstsw
xchg
mov
push
std
fsub
mov
dec
aad
mov
les
inc
fsub
fnstcw
xchg
mov
jae
fsub
mov
dec
aad
mov
loopne
adc
sub
daa
push
ret
daa
sub
aad
and
pop
ins
aam
cmp
lahf
adc
sub
xor
and
sbb
or
imul
es
pop
ins
rcr
sbb
imul
sub
sahf
fst
xchg
test
sbb
mov
gs
xor
in
pop
dec
cmc
push
retf
push
jg
test
dec
ds
pop
stc
gs
xor
loope
dec
mov
sar
js
dec
mov
and
sbb
repnz
dec
jle
cmps
add
leave
dec
mov
and
cmp
cmps
xchg
and
inc
imul
shl
mov
sbb
sbb
pop
mov
and
cdq
mov
add
jae
jnp
mov
(bad)
inc
cdq
and
ror
outs
mov
or
mov
mov
jb
(bad)
test
shl
dec
sub
retf
jb
(bad)
test
and
fdivr
cmp
nop
mov
xchg
jo
movs
adc
dec
rcl
jmp
pushf
ficom
sub
popf
sub
aaa
popf
call
cwde
daa
jle
jae
xchg
popf
xor
mov
or
push
mov
mov
push
aaa
repnz
int3
fmul
sahf
int3
lds
movs
in
push
mov
arpl
jmp
out
push
jns
jge
lds
inc
mov
mov
push
add
mov
pop
arpl
sub
or
nop
mov
(bad)
xchg
jmp
or
adc
adc
mov
mov
or
xor
xchg
and
sbb
mov
inc
frstor
mov
add
and
(bad)
movs
mov
ins
inc
cmp
fstp
ja
cwde
sub
test
xor
cmp
aas
sub
rcr
xchg
cld
pop
xor
pop
movs
mov
adc
sub
test
xor
cmp
or
call
leave
jb
xor
int
call
ret
jmp
dec
xchg
or
xchg
sub
or
push
call
mov
sub
mov
xor
jne
push
imul
das
popf
rcl
ins
mov
mov
ins
call
mov
mov
mov
neg
jmp
add
push
dec
dec
xchg
xor
mov
lods
jp
mov
mov
mov
inc
lahf
mov
mov
mov
push
jge
cmp
xor
out
cmc
psubusb
push
jg
mov
dec
adc
xor
sbb
stos
inc
out
xchg
pop
out
mov
sub
lea
stos
mov
push
lea
out
jbe
movs
sub
xchg
mov
retf
sbb
push
push
push
xor
mov
xchg
sbb
das
dec
xchg
xchg
dec
mov
dec
not
das
ret
mov
or
pop
and
repnz
xchg
fdivrp
scas
and
dec
retf
and
inc
push
cmp
jnp
icebp
xor
dec
sbb
shl
mov
ret
push
jmp
mov
dec
mov
jns
mov
ins
adc
ins
mov
leave
mov
push
adc
mov
xor
jmp
sahf
push
add
mov
ja
fs
jns
mov
movs
mov
cmc
or
cmp
push
or
test
push
push
mov
outs
pop
aad
daa
loop
jns
lahf
mov
mov
cmp
or
dec
lods
mov
ins
call
mov
(bad)
adc
mov
mov
(bad)
push
movs
sbb
cmp
mov
test
mov
jp
gs
pop
mov
cmp
lea
cli
mov
sub
mov
(bad)
adc
sub
dec
cmc
mov
and
inc
(bad)
jge
imul
sub
jmp
pusha
dec
daa
dec
hlt
shr
cmps
or
push
mov
dec
(bad)
xor
in
(bad)
out
ins
mov
xchg
mov
rcl
dec
loopne
mov
mov
(bad)
push
and
jmp
sbb
dec
xlat
daa
cld
mov
push
sub
call
and
mov
mov
pop
xlat
sub
mov
clc
mov
push
pop
and
ds
ins
out
fcom
mov
arpl
mov
mov
pop
cdq
jo
xor
push
push
mov
jmp
push
addr16
xchg
fiadd
mov
arpl
shl
xchg
dec
and
dec
mov
out
jbe
pusha
dec
daa
sub
jmp
mov
push
fnstcw
call
jmp
jmp
push
pop
rcl
outs
movs
push
ins
mov
or
(bad)
fnstenv
cmp
dec
sbb
mov
jo
inc
mov
xchg
jmp
mov
pop
mov
call
retf
mov
ins
push
jb
les
push
or
in
mov
sbb
jo
les
mov
mov
jns
add
mov
pop
cmp
(bad)
jg
mov
mov
adc
or
sub
cmp
movs
daa
pop
pop
fnstenv
outs
or
xor
add
adc
cli
das
push
mov
push
inc
or
xchg
mov
push
cdq
mov
cld
ins
mov
scas
mov
call
into
int3
mov
movs
add
dec
mov
xlat
mov
std
or
or
fxch
xor
in
pop
sbb
mov
shr
mov
xchg
fucom
add
add
mov
test
movs
pop
mov
in
xchg
movs
cwde
cmp
jno
sub
mov
mov
or
cmps
or
jmp
cmc
add
(bad)
fs
cmp
pop
clc
and
cmp
inc
jle
in
ins
mul
cmps
add
fucom
mov
push
cmps
ret
daa
pusha
cmps
stc
ds
fsub
leave
mov
in
add
(bad)
sub
aad
mov
rcl
xchg
mov
test
cmp
or
pop
push
and
sbb
les
ins
ror
lods
mov
mov
ins
stos
push
in
stos
mov
imul
jge
push
aad
pop
shr
fimul
mov
mov
in
stos
push
lds
lods
sar
pop
mov
or
shr
dec
xor
dec
(bad)
mov
das
(bad)
les
sub
xchg
pop
xor
cmp
rcr
test
push
imul
dec
imul
and
dec
movs
mov
into
add
enter
shl
jmp
add
ins
scas
int
scas
mov
fist
fiadd
shl
mov
cmps
ret
mov
(bad)
xchg
scas
sub
mov
adc
xchg
adc
dec
(bad)
fstp
mov
sub
push
fisubr
data16
xor
mov
adc
nop
out
ja
movs
sub
inc
xchg
dec
jbe
pop
(bad)
shr
sub
pop
movs
push
jl
dec
jecxz
jle
jle
cdq
in
ds
ret
ds
pop
cmp
cmp
mov
dec
lds
fcom
adc
cmp
not
adc
push
sbb
jg
push
pop
je
(bad)
adc
add
out
push
mov
jg
in
std
adc
pop
xor
retf
shr
jne
mov
add
movs
fwait
adc
retf
rcl
test
(bad)
mov
aad
test
mov
mov
push
cmc
inc
sar
ins
out
mov
clc
out
idiv
mov
lock
imul
imul
sbb
push
push
adc
aad
add
pop
aad
push
jmp
mov
enter
mov
inc
aad
gs
cmp
jb
ret
or
stos
call
dec
ficom
fldlg2
mov
mov
shr
nop
xchg
mov
fst
aad
movs
xor
(bad)
out
sahf
push
or
pushf
jo
adc
mov
rcr
inc
sub
loopne
(bad)
shl
xlat
mov
fwait
out
data16
or
fwait
jo
sbb
ror
ins
mov
(bad)
scas
nop
push
imul
fsub
sbb
sub
or
retf
fstp
shr
sub
mov
and
sti
and
mov
push
xchg
mov
imul
mov
int
(bad)
jp
xchg
repnz
xchg
push
popa
(bad)
xchg
sub
scas
fisub
imul
and
fstp
data16
shl
scas
pop
push
inc
out
loopne
pusha
cmps
rol
repnz
mov
mov
adc
fistp
pop
stc
push
mov
pushf
into
popa
xchg
jecxz
push
rcr
xchg
sub
fistp
mov
pusha
scas
jns
shl
mov
vpaddw
push
fmul
mov
push
rcl
ins
jo
sub
ins
in
cmps
sub
bound
call
(bad)
fimul
mov
iret
movs
int3
(bad)
mov
push
fnstsw
push
fdiv
daa
out
adc
push
xchg
loopne
jmp
lds
sbb
ja
aad
rcr
push
out
frstor
iret
fiadd
mov
push
dec
xor
ds
sub
dec
and
jg
or
ja
xchg
or
push
lods
ret
push
sub
aam
sub
fcmovu
sub
mov
pop
dec
adc
jle
pop
clc
(bad)
mov
mov
or
test
outs
mov
xor
stos
push
lahf
js
xor
shl
add
dec
test
and
fisub
mov
lds
loope
ins
mov
xor
mov
sahf
mov
leave
dec
lock
hlt
inc
fwait
loopne
fist
test
dec
cmp
jb
loope
pop
ss
or
mov
sbb
cmp
cmps
mov
mov
ss
test
xchg
jo
xchg
mov
jge
or
push
mov
xchg
xchg
dec
cmp
and
cmp
rcr
call
cdq
aas
mov
mov
mov
push
mov
xchg
ds
sub
jb
(bad)
mov
dec
mov
sbb
dec
stos
fidivr
loopne
or
and
dec
lahf
movs
sub
neg
mov
(bad)
bound
and
loope
mov
int
test
aas
jae
js
data16
pop
sub
or
lds
mov
fdiv
mov
sub
mov
gs
mov
into
ret
or
mov
jb
xchg
int3
aaa
ins
mov
mov
add
fidivr
out
add
addr16
mov
ror
fsubr
jbe
test
and
xchg
fcmovnb
push
pop
sbb
or
mov
test
int
ret
movs
xchg
jo
add
mov
ror
cmp
mov
push
push
imul
jle
or
ins
ret
daa
mov
ds
mov
mov
(bad)
popa
inc
sub
fadd
arpl
xlat
scas
jl
and
add
cmps
pop
ins
mov
shr
or
sub
popa
inc
dec
in
xor
sub
inc
mov
pop
sub
add
jnp
xchg
lea
dec
pop
mov
imul
pop
je
xchg
dec
ret
popf
retf
push
xchg
test
pop
inc
das
dec
mov
aas
test
xlat
xchg
sub
call
lds
cli
dec
div
imul
xchg
xor
ret
sub
(bad)
mov
and
lods
sub
fimul
mov
pop
lds
int3
xchg
lds
daa
mov
push
mov
fstp
sti
mov
sti
and
cmp
ins
retf
push
cmp
jg
leave
push
lods
fdiv
fisub
jl
fdiv
and
retf
push
push
(bad)
and
xor
cmps
cmp
repnz
(bad)
ja
fsubr
dec
xchg
(bad)
xchg
mov
sub
out
inc
lods
inc
add
sbb
push
mov
ins
fdivr
jl
push
mov
int
add
sub
cmp
mov
inc
xchg
in
push
jae
test
out
mov
or
xor
mov
sahf
jg
xchg
sbb
mov
jne
jle
movs
mov
iret
(bad)
pop
sbb
iret
std
jno
js
aad
(bad)
fstp
cmp
idiv
jo
add
les
mov
xchg
push
es
mov
fwait
dec
enter
and
leave
arpl
(bad)
push
sub
loopne
cmova
scas
cs
test
lahf
(bad)
push
ret
lods
mov
es
retf
xchg
pop
ss
sub
test
scas
inc
ficom
(bad)
cwde
mov
ins
les
jbe
outs
lds
sbb
xor
mov
pop
push
retf
jne
ins
xchg
adc
sub
ja
retf
shl
xor
fiadd
movs
mov
repnz
fcomip
retf
fsub
nop
adc
mov
xchg
repz
mov
imul
mov
retf
and
cs
mov
mov
pop
sub
(bad)
ja
outs
sub
es
jo
mov
fstp
cmc
lods
inc
out
(bad)
(bad)
or
jp
mov
enter
jg
cs
and
mov
pop
outs
(bad)
dec
mov
jg
int3
or
repnz
xchg
imul
(bad)
xlat
jbe
dec
test
int3
mov
jg
les
lds
(bad)
daa
push
call
ja
int3
sub
adc
gs
(bad)
addr16
arpl
loopne
sub
scas
xor
jbe
mov
push
rcr
int
or
mov
push
lea
pop
shl
or
int
ss
xor
push
mov
cmp
stc
and
sar
or
mov
(bad)
or
push
mov
mov
pop
je
(bad)
jns
hlt
addr16
inc
push
inc
out
lods
retf
shl
mov
int
jle
cmps
sbb
dec
aaa
out
push
mov
add
xchg
jg
and
add
ret
and
xor
and
mov
neg
out
and
inc
cmps
in
xchg
stos
cli
int3
mov
adc
aas
ja
cld
add
cmovl
sub
or
repnz
inc
out
jge
push
loope
dec
push
sub
inc
ret
(bad)
(bad)
push
jg
(bad)
push
ins
ror
push
popa
idiv
lock
jle
ss
dec
test
xchg
out
loop
and
and
push
lock
(bad)
sub
sahf
ja
xchg
es
xchg
lock
mov
mov
sbb
mov
pop
shl
jb
push
push
retf
pop
sub
stos
pop
int3
call
or
dec
sub
cmp
stos
addr16
push
in
ins
std
mov
imul
xchg
mov
repnz
mov
pop
enter
cs
movs
mov
mov
mov
or
loope
or
int
movs
push
adc
sub
sub
jnp
xchg
cli
pop
pop
xor
mov
mov
and
cmp
aas
scas
cmp
aas
inc
lods
hlt
mov
pop
mov
or
pop
pop
jo
xchg
jmp
arpl
and
mov
(bad)
ret
arpl
ins
ret
imul
loopne
xchg
fs
mov
hlt
add
mov
retf
push
das
mov
cmc
hlt
mov
scas
push
add
mov
movs
dec
lock
pop
jle
sbb
mov
add
fld
out
mov
call
icebp
movs
pop
hlt
leave
mov
mov
iret
lahf
jnp
sbb
dec
cld
mov
push
mov
(bad)
hlt
mov
int
xor
mov
jg
inc
aaa
sbb
and
loopne
pop
adc
cs
lds
mov
mov
test
mov
dec
sbb
and
jb
inc
fidiv
jge
xor
sub
shl
ds
(bad)
mov
ja
imul
dec
or
or
adc
jmp
loopne
(bad)
push
push
push
cmovle
loopne
mov
pop
pop
push
cmp
mov
test
and
mov
adc
mov
test
mov
dec
jecxz
(bad)
sbb
sub
push
scas
arpl
(bad)
stc
enter
dec
movs
lds
mov
xchg
mov
push
xor
push
sbb
jmp
mov
pusha
pop
xchg
lods
je
jecxz
push
test
ins
mov
or
aas
(bad)
fld
push
test
pop
outs
mov
jle
jns
loop
mov
jb
push
inc
stos
inc
(bad)
addr16
retf
cmps
inc
(bad)
dec
pop
fs
sub
or
push
mov
jnp
jecxz
test
pop
pop
pop
lds
outs
pop
mov
jns
and
push
lds
cmp
xchg
push
mov
mov
in
sub
aas
sub
cmp
xor
mov
gs
ffree
int3
mov
aas
daa
dec
mov
lock
out
jnp
sub
es
mov
sub
pop
sti
and
mov
call
and
bound
bswap
mov
cmp
sub
push
jb
imul
or
mov
aam
retf
outs
mov
bnd
imul
mov
cmps
lock
ds
jbe
cmps
in
std
aad
movs
daa
or
(bad)
rcl
jno
sub
out
push
pop
sub
mov
push
cmps
sar
aad
movs
daa
add
xchg
mov
mov
lds
sub
cmps
jbe
push
pop
pop
sub
mov
sub
mov
(bad)
jmp
push
jmp
mov
out
pop
sub
mov
sub
mov
psubusw
xor
mov
(bad)
cmps
int3
xchg
outs
in
ds
cli
xchg
sub
cmps
sub
ret
mov
or
fiadd
and
push
and
repnz
mov
pop
xor
mov
out
ins
fstp
mul
push
mul
mov
fs
cmps
cmp
mov
xor
fadd
mov
test
cmps
scas
sub
test
jbe
cmps
sti
imul
fidivr
imul
fdivr
pop
shl
mov
push
sub
ficom
cmps
rcr
cli
lea
mov
xchg
fsub
and
test
(bad)
push
mov
push
stc
mov
mov
mov
lea
ins
imul
jg
add
popf
and
outs
sub
mov
push
adc
and
retf
leave
pushf
mov
out
imul
jge
popf
mov
lahf
imul
dec
xchg
stos
mov
fwait
imul
clc
sti
and
xchg
lea
and
xchg
mov
addr16
(bad)
mov
arpl
push
push
imul
inc
dec
sbb
sar
sub
jle
xor
movs
cmps
adc
ins
sub
shr
dec
jnp
arpl
aas
mov
mov
sar
and
in
mov
loop
paddw
xor
jnp
int3
lahf
es
mov
sub
jmp
pop
ja
ins
push
mov
daa
aam
push
aas
dec
pop
stc
push
mov
retf
mov
mov
outs
cmps
push
imul
xor
imul
daa
fcmove
std
push
add
fadd
fild
ins
inc
(bad)
clc
push
ins
inc
pop
sub
mov
cld
mov
pop
mov
pop
loopne
inc
pop
push
fdivr
and
push
sub
jmp
scas
sub
lea
popa
mov
ins
loope
sub
std
xchg
ins
push
push
sub
mov
mov
in
retf
mov
push
cmp
out
push
pop
scas
jnp
sbb
pop
daa
cmps
push
push
and
mov
test
retf
mov
mov
cdq
inc
mov
mov
cmps
inc
mov
mov
dec
hlt
jecxz
daa
das
imul
jge
adc
in
mov
sub
fmul
mov
arpl
ficomp
mov
mov
pop
sub
mov
enter
popa
pop
in
push
fisub
pop
retf
sub
adc
sub
mov
xchg
int3
daa
mov
sbb
mov
mov
movs
daa
pop
ins
out
xchg
in
in
adc
mov
mov
out
ins
jo
cld
loop
mov
mov
cmp
inc
sub
mov
mov
sub
movs
daa
mov
jl
mov
loopne
xchg
out
jnp
push
jecxz
loop
fimul
mov
mov
(bad)
cmps
and
push
ins
pop
push
retf
in
mov
mov
or
mov
inc
dec
sub
mov
mov
retf
add
imul
dec
mov
jmp
adc
pop
sub
mov
mov
adc
retf
dec
push
ins
cs
(bad)
mov
(bad)
mov
sbb
mov
mov
mov
jle
cmps
imul
mov
rol
push
and
add
mov
ins
ja
jecxz
mov
fidivr
and
inc
sub
mov
lea
int3
cmp
sar
mov
in
fsubr
push
or
lods
jmp
dec
mov
mov
mov
fld
xor
mov
sub
test
ins
mov
out
aas
xchg
sar
mov
imul
test
sbb
dec
retf
aam
mov
push
cmps
icebp
sbb
jg
daa
mov
cmp
int3
push
mov
mov
fwait
sub
mov
mov
scas
ins
std
mov
dec
pop
arpl
sub
fadd
and
adc
jmp
in
and
lahf
lea
and
fwait
mov
mov
(bad)
xchg
dec
mov
xchg
imul
enter
out
imul
rcl
imul
xchg
imul
add
addr16
imul
es
jge
retf
push
mov
retf
push
mov
adc
ja
bound
fdiv
mov
add
imul
inc
and
dec
(bad)
jmp
div
lea
mov
aas
inc
daa
dec
ins
stos
xchg
pop
lea
and
pop
lea
retf
icebp
mov
imul
xchg
test
pop
xchg
rcl
jl
push
mov
and
daa
lea
and
and
xchg
pop
mov
dec
mov
imul
mov
mov
inc
daa
adc
ins
xor
adc
mov
lock
or
ds
pop
sub
mov
ds
adc
sub
mov
lods
adc
sub
push
imul
mov
sub
mov
adc
mov
xcrypt-ecb
cmps
push
sub
mov
sub
mov
sub
mov
(bad)
loop
ins
mov
adc
sub
mov
and
cli
lea
inc
mov
and
test
and
repnz
sub
out
mov
imul
cmps
xor
imul
es
ret
mov
retf
push
mov
sbb
fidivr
imul
cmps
hlt
and
(bad)
mov
mov
and
cmps
lods
aas
in
daa
fmul
xchg
inc
push
sub
mov
mov
cmps
movs
imul
mov
sub
mov
sub
mov
mov
add
push
mov
push
sub
mov
sub
mov
loop
lock
imul
mov
and
or
and
lahf
lea
mov
retf
inc
mov
sbb
cmps
xor
xchg
mov
imul
jae
retf
sbb
adc
lea
mov
aas
arpl
js
clc
pop
cld
push
mov
jg
xchg
out
ins
sar
cwde
aas
ja
loope
aam
addr16
aas
jae
xor
sbb
pop
lea
xor
ins
jnp
xchg
mov
sbb
dec
cmps
dec
mov
mov
fisttp
xchg
ins
dec
or
mov
jnp
adc
add
cmps
pusha
sub
mov
push
pop
cmps
mov
push
push
cmps
fld
and
fcom
jmp
(bad)
fmul
cmp
fsubr
mov
mov
add
cmps
xchg
sub
mov
push
and
mov
push
and
xchg
jne
out
imul
sub
sub
and
rol
cwde
mov
cmp
cwde
aas
das
daa
mov
pop
or
aad
addr16
pop
inc
mov
mov
imul
push
push
add
jg
dec
out
mov
add
ins
fs
adc
mov
pop
mov
dec
nop
xor
fdiv
sbb
or
mov
daa
sub
(bad)
add
pop
lea
mov
or
sub
movs
addr16
retf
sub
das
push
popf
sub
lea
gs
ins
add
inc
xchg
ins
jmp
push
cmps
aad
aad
movs
daa
out
sbb
mov
xor
jg
push
ror
and
(bad)
sub
cmps
addr16
(bad)
xor
ins
mov
imul
stos
mov
inc
test
add
imul
(bad)
enter
sub
movs
movs
daa
push
jnp
repnz
or
mov
mov
repnz
sbb
retf
test
sub
int
and
jnp
(bad)
sub
mov
mov
fld
xchg
popa
sahf
jmp
ins
and
es
pop
xor
aas
test
fisubr
ins
pop
mov
daa
ror
aas
jp
out
push
out
imul
int
xor
ror
mov
lods
or
(bad)
jmp
mov
pop
fistp
and
push
cmps
in
aad
movs
xor
mov
ror
dec
dec
test
mov
ins
xor
lods
sub
test
ds
xchg
push
cmps
das
aaa
aad
movs
daa
mov
xchg
stc
or
sub
or
sub
mov
mov
cmp
bound
daa
das
sar
mov
les
and
scas
daa
sahf
imul
addr16
sub
push
push
movs
gs
dec
dec
xchg
sub
cmp
sub
lea
mov
ins
das
ret
ins
in
or
or
mov
sbb
mov
neg
pop
data16
sbb
cmp
add
ret
and
push
jmp
hlt
nop
sbb
sub
cmps
cmc
in
sar
sbb
and
mov
cmp
sahf
movs
(bad)
sbb
push
dec
das
mov
adc
jmp
in
sbb
mov
cmp
jmp
retf
xor
popa
add
daa
ret
sub
movs
imul
stos
repnz
ins
fisttp
adc
and
xchg
addr16
jg
push
sbb
out
cmp
jge
cdq
or
in
sub
cmp
(bad)
xor
outs
or
ja
cmp
cmc
sbb
sub
inc
jo
push
mov
push
daa
push
jg
add
xor
jg
cmp
movs
jmp
stc
mov
push
sub
fidivr
loope
repz
push
out
mov
or
sub
add
mov
jno
cli
pop
imul
ficomp
or
rcr
xchg
cmp
mov
sbb
cmps
popa
(bad)
mov
in
(bad)
mov
sbb
fcmove
pop
xchg
aaa
ins
mov
mov
out
ins
push
sbb
xchg
int3
retf
mov
jnp
(bad)
cli
sub
les
daa
loop
mov
jbe
jmp
das
movs
xor
in
pusha
ds
punpckhbw
xchg
icebp
xchg
dec
mov
bound
mov
mov
lods
jnp
ins
iret
shl
mov
aam
fild
aaa
popa
ficom
jge
ret
mov
adc
cmps
adc
mov
aas
in
sti
add
mov
cmp
mov
js
xchg
fwait
push
jg
and
das
xor
mov
lea
cmp
in
mov
pop
mov
xor
ss
mov
pushf
daa
mov
push
jae
stos
jmp
(bad)
enter
add
(bad)
jne
rcl
push
mov
shr
mov
mov
mov
call
shr
and
push
repnz
lds
mov
out
(bad)
mov
(bad)
mov
cmc
out
popa
mov
jge
daa
pop
jnp
(bad)
sbb
jecxz
scas
dec
pusha
pusha
lea
xchg
ins
push
dec
int3
jbe
stos
out
fidiv
dec
pop
mov
and
jmp
arpl
lds
imul
cmp
in
dec
stc
sbb
jns
(bad)
test
xchg
shl
pop
(bad)
movs
in
fwait
std
xchg
movs
inc
jo
inc
push
mov
mov
mov
inc
test
lea
shl
call
pop
xchg
in
test
mov
es
sti
inc
je
mov
(bad)
cmp
sahf
int3
pop
call
daa
mov
imul
cmp
mov
mov
call
mov
popa
ins
cmp
sbb
and
aad
cmps
retf
cmp
outs
and
mov
jg
and
lahf
and
add
call
fcomp
les
dec
inc
movs
lahf
adc
cmp
jg
daa
int
jmp
adc
aas
xchg
ret
fsubr
daa
jg
mov
sub
xor
sub
mov
lods
dec
in
mov
sub
mov
mov
ins
sub
mov
aas
(bad)
ret
fmul
mov
xchg
pop
xor
mov
sub
push
mov
movs
out
pop
int
ret
mov
sub
push
sub
and
movs
push
fisubr
pop
add
mov
fdivr
cmps
xor
sub
xchg
inc
je
cdq
lahf
inc
sub
ins
retf
sub
test
imul
daa
(bad)
fdivrp
and
retf
daa
push
pop
mov
cld
cs
out
fnsave
mov
mov
jno
push
test
imul
icebp
mov
xchg
dec
cmp
jns
jno
sub
push
xchg
bnd
mov
mov
inc
mov
dec
jmp
push
std
bound
mov
repnz
jmp
(bad)
push
(bad)
std
push
jmp
mov
mov
pop
push
cmp
std
pop
mov
or
int
push
push
dec
and
mov
pop
dec
push
sub
nop
mov
sub
daa
nop
mov
out
fnstsw
je
sbb
out
(bad)
sub
retf
xor
jmp
mov
jmp
mov
les
shl
pop
aas
mov
and
push
and
mov
fwait
jle
mov
xor
aad
mov
std
push
mov
dec
sub
out
push
push
push
push
pop
nop
aam
or
icebp
sub
test
retf
mov
ficomp
sub
(bad)
push
(bad)
in
jbe
mov
mov
int3
push
xchg
mov
sub
mov
int3
sbb
pop
mov
sbb
call
xlat
xchg
idiv
cmps
add
ds
int
mov
out
xor
jns
loop
nop
cli
imul
retf
ins
ins
fnstenv
int3
clc
xchg
mov
jbe
clc
mov
adc
in
mov
mov
jl
sub
mov
mov
pop
(bad)
pop
pop
sub
push
add
sbb
int
pop
mov
or
push
jbe
mov
leave
push
gs
add
cmps
aaa
pop
jo
(bad)
push
jmp
mov
xchg
movs
sub
pop
adc
rcr
push
sub
xchg
mov
sbb
inc
mov
dec
inc
jo
(bad)
mov
mov
inc
mov
mov
inc
sub
adc
inc
lods
inc
das
ins
push
sbb
inc
jo
rcr
push
inc
mov
cmps
sahf
idiv
push
sub
inc
mov
int3
inc
shl
sahf
and
xchg
mov
inc
jns
movs
je
loopne
nop
mov
pop
cli
mov
inc
jns
mov
pop
push
int3
xchg
mov
pop
rcl
inc
daa
scas
fisttp
sub
inc
inc
out
(bad)
mov
mov
cmp
pop
sahf
call
ja
inc
sub
inc
mov
mov
sub
inc
rol
iret
ds
int3
mov
cmp
push
inc
pop
imul
in
xor
lods
push
adc
addr16
mov
movs
fs
inc
dec
xchg
mov
mov
and
jmp
aam
jl
rcr
dec
outs
xchg
cmp
gs
dec
cmp
retf
mov
dec
mov
shr
jle
cmp
xchg
or
out
fstp
push
sub
dec
xchg
mov
sbb
inc
jbe
popa
cmp
cmp
mov
or
call
dec
mov
jbe
mov
inc
pushf
or
mov
je
fcomp
jge
push
push
sbb
sub
dec
and
cmovb
mov
aad
mov
imul
dec
sub
dec
push
lods
dec
push
inc
mov
iret
outs
mov
std
call
sub
mov
cdq
mov
cmp
jge
test
ins
mov
and
mov
rol
jmp
add
aaa
fnstsw
pop
imul
fisubr
inc
sub
dec
std
cld
sar
push
jle
mov
mov
pop
inc
add
ins
jae
jmp
movs
pop
add
cmps
aad
jns
fs
out
cld
cmp
dec
cmp
in
sub
je
mov
les
xchg
push
xchg
mov
mov
js
cmp
adc
(bad)
or
mov
repz
sub
adc
mov
or
in
add
cmps
cmp
mov
loop
add
inc
mov
xchg
cmp
xor
sub
mov
adc
mov
movs
and
int3
test
cmp
and
mov
mov
add
sbb
or
push
dec
(bad)
push
mov
cmp
push
jns
mov
out
fidiv
dec
sub
adc
jp
mov
mov
mov
mov
ins
outs
sbb
xchg
mov
rcr
shl
dec
dec
xchg
cmp
fs
dec
test
leave
jmp
push
and
cmps
shl
jge
xchg
fwait
add
pop
push
jg
jge
ins
(bad)
push
and
pop
add
dec
add
fdivr
push
out
mov
mov
(bad)
jae
jl
cmp
mov
add
jnp
jg
jg
push
jbe
mov
in
je
mov
cmp
mov
xchg
push
pusha
mov
mov
sbb
cmp
cmps
cld
sbb
or
xor
popa
cmc
pop
(bad)
in
or
mov
bound
(bad)
fisttp
(bad)
(bad)
pop
and
lods
idiv
ja
dec
(bad)
arpl
jmp
sub
push
xchg
mov
mov
imul
js
dec
lds
sti
fs
gs
push
cmps
sub
inc
xchg
mov
mov
pop
ins
jns
hlt
mov
int3
jnp
mov
jp
jno
push
out
cld
cmp
dec
cmp
jecxz
sub
pushw
jae
jno
ret
jnp
xchg
push
xchg
mov
mov
ja
cmp
adc
or
sbb
sub
jl
mov
int3
pop
ret
popf
jmp
add
pop
je
mov
push
mov
adc
shl
mov
adc
je
push
stos
and
inc
daa
daa
fiadd
inc
daa
and
pusha
mov
add
add
cmp
xor
mov
mov
imul
daa
xchg
cli
imul
retf
pusha
push
imul
pop
enter
add
mov
jmp
lahf
call
stc
ins
call
push
inc
daa
jmp
retf
daa
in
dec
mov
jmp
mov
inc
idiv
mov
repz
jp
cmps
sbb
stc
ds
int
mov
leave
int3
xor
ds
int3
imul
in
lds
ds
and
ret
mov
loopne
pop
and
cdq
mov
data16
mov
pop
lods
inc
push
and
xchg
stc
cmp
mov
movs
in
out
mov
mov
mov
in
add
mov
inc
jae
mov
sbb
mov
je
mov
xchg
jns
mov
mov
mov
xchg
lods
mov
adc
mov
popf
xchg
mov
push
bound
cmp
fcom
imul
imul
call
int
call
or
push
sbb
ins
ins
fadd
pop
and
cwde
call
pop
inc
daa
jne
adc
retf
daa
jo
dec
mov
adc
test
mov
mov
inc
daa
jg
mov
call
nop
pop
and
mov
xor
jbe
mov
nop
jle
mov
sub
aad
mov
sub
pushf
mov
and
call
fcomp
push
and
popf
call
push
inc
daa
das
fsubrp
xchg
sub
scas
inc
daa
or
dec
mov
jmp
frstor
mov
mov
sbb
jns
cmps
sbb
rcl
adc
das
call
daa
push
imul
xchg
push
imul
pop
shr
cld
and
pop
div
cwde
and
mov
push
jg
and
repnz
mov
mov
int
mov
xchg
aad
mov
enter
push
jecxz
mov
ret
xchg
imul
cwde
fdivr
jae
ins
adc
lock
enter
test
sub
jge
sub
retf
mov
add
imul
call
xchg
imul
push
imul
pop
(bad)
imul
pop
mov
fcomp
push
and
mov
and
inc
daa
mov
in
popf
sub
scas
inc
daa
mov
dec
mov
jmp
frstor
mov
mov
mov
jns
cmps
sbb
rcr
mov
cmps
ror
sbb
mov
mov
inc
mov
jae
fwait
push
sub
add
push
cmp
mov
std
jae
jns
rcl
jns
fmul
clc
push
add
dec
bound
mov
sub
push
(bad)
mov
mov
fiadd
sbb
aad
mov
pop
push
jg
scas
sub
scas
push
sub
test
inc
je
fdiv
jge
push
push
in
mov
mov
cld
test
cdq
cmp
scas
fwait
push
fs
jns
pop
adc
mov
mov
jmp
mov
mov
push
and
push
push
cmp
inc
in
sbb
ret
test
xchg
push
jnp
xor
(bad)
(bad)
and
or
fstp
push
or
mov
imul
fidivr
mov
dec
aam
mov
retf
jmp
push
xchg
mov
mov
sub
push
ret
mov
sub
mov
int3
cmp
inc
mov
jbe
and
mov
mov
ins
call
mov
ror
gs
mov
inc
cmp
loope
mov
mov
ror
xchg
and
int3
jne
cmp
adc
mov
lock
mov
or
mov
fs
add
and
cmps
jmp
fdiv
push
jae
das
mov
mov
cmpxchg
imul
cmp
ds
test
push
mov
mov
mov
and
ins
mov
mov
or
push
fild
mov
mov
or
pop
mov
mov
cmp
mov
mov
mov
movs
cmp
ins
dec
sbb
rol
push
sub
sbb
addr16
out
(bad)
mov
dec
jp
cmp
nop
mov
pop
cmp
cmc
mov
mov
cdq
mov
mov
imul
mov
dec
sub
in
mov
sbb
mov
sti
mov
cwde
or
mov
mov
js
or
ficom
mov
jmp
mov
mov
cmps
add
push
dec
mov
ins
mov
lods
or
out
fst
movs
xchg
mov
sbb
mov
loopne
cmp
xchg
jge
push
or
or
pop
push
mov
cmp
pop
or
dec
pop
jae
push
mov
dec
inc
inc
push
sbb
cmp
ins
mov
sub
test
pop
add
push
or
ret
sub
and
push
mov
(bad)
out
adc
pop
pop
fwait
push
mov
mov
fs
ficomp
out
fld
sub
stos
xchg
mov
add
and
pop
add
dec
xchg
inc
inc
add
cmp
sub
adc
mov
nop
out
ins
sbb
or
mov
arpl
xor
pop
and
fwait
push
fdiv
jp
sub
cmp
sbb
sub
cmps
dec
jmp
or
mov
add
xchg
dec
inc
ins
mov
sub
inc
mov
or
scas
mov
popa
clc
daa
cwde
push
mov
xchg
mov
dec
mov
mov
pop
cmp
hlt
es
stos
nop
adc
mov
scas
mov
imul
jmp
mov
femms
mov
mov
out
jle
mov
adc
test
out
jge
je
rol
add
int
mov
loope
(bad)
sub
sbb
mov
ins
les
inc
mov
xor
xor
mov
mov
sti
nop
mov
movs
shl
push
retf
inc
test
mov
adc
mov
sar
jnp
lea
jo
sub
fimul
dec
mov
fidivr
sub
add
shl
stos
dec
shl
cmps
dec
mov
loop
sub
mov
scas
dec
add
jns
push
sub
(bad)
test
(bad)
mov
fist
sar
out
scas
push
push
js
xchg
sub
in
mov
imul
es
lods
jmp
test
xor
popf
xchg
in
dec
adc
xchg
out
lods
mov
pop
out
stos
push
mov
lods
sub
mov
mov
jae
inc
cld
lods
test
ja
(bad)
jmp
jnp
cmp
ja
mov
aas
cmp
aaa
sbb
ins
int3
(bad)
clc
fbld
and
mov
cwde
scas
mov
movs
sub
sub
jo
xchg
gs
cmp
(bad)
mov
icebp
stos
ja
mov
push
jbe
pop
mov
jg
nop
outs
or
mov
jne
mov
jno
loope
xchg
shl
and
mov
out
shr
hlt
inc
xchg
inc
push
js
(bad)
pop
lahf
push
jb
xor
pop
mov
mov
cmps
das
mov
mov
jb
ins
push
xor
mov
mov
jge
xchg
stc
mov
pop
test
out
daa
movs
cmc
xchg
push
sbb
in
xchg
mov
retf
dec
mov
aad
pop
mov
pop
jp
popa
not
stos
jae
fisubr
dec
mov
cmps
sub
popf
lea
retf
mov
xor
shr
pop
mov
daa
imul
or
mov
int
rol
fisub
jg
mov
mov
mov
jmp
push
jg
mov
retf
xor
test
test
jo
jge
test
(bad)
scas
add
jg
push
iret
icebp
imul
and
popf
lea
(bad)
into
inc
test
rol
addr16
repz
cmps
dec
repnz
and
cld
jge
shl
mov
pushf
mov
pop
in
jp
sub
mov
iret
push
mov
mov
mov
push
aad
cmps
and
icebp
mov
cmp
sub
mov
popf
jp
mov
sub
mov
(bad)
ret
jg
sub
mov
sub
test
shl
mov
movs
pushf
sub
test
mov
retf
and
jno
test
adc
movs
sti
or
jg
push
(bad)
pop
(bad)
xor
mov
scas
(bad)
push
sbb
dec
js
mov
and
mov
fild
imul
adc
stos
pop
arpl
cdq
jb
and
push
retf
push
push
ret
movs
es
stos
imul
movs
neg
cmps
dec
loop
addr16
xchg
loope
lods
push
mov
adc
push
dec
xor
mov
shr
pslld
lods
fyl2xp1
stos
sbb
push
mov
adc
enterw
jne
or
aas
mov
sub
push
sahf
push
in
ret
imul
imul
in
in
inc
jge
mov
dec
mov
iret
clc
sub
outs
es
ins
ja
mov
xchg
ror
mov
js
mov
sub
cwde
mov
push
loopne
(bad)
push
scas
scas
and
jnp
adc
stc
cld
xchg
data16
mov
mov
adc
push
push
mov
cmp
(bad)
jmp
data16
fcmovu
or
adc
scas
jmp
sahf
dec
(bad)
mov
scas
inc
cli
addr16
outs
outs
mov
imul
jmp
xlat
pushf
icebp
jae
mov
push
cmc
sbb
cdq
push
dec
cmps
sub
(bad)
popf
adc
xor
xchg
lods
in
xchg
(bad)
mov
lods
das
mov
(bad)
fnstsw
test
(bad)
movs
cli
cs
test
repz
ins
mov
mov
adc
jno
jmp
dec
(bad)
daa
stos
add
aaa
outs
cmps
cmp
fadd
inc
mov
aaa
cld
mov
xor
and
popf
mov
retf
push
ret
inc
mov
mov
in
data16
(bad)
loopne
lods
sti
sbb
push
dec
mov
bound
call
xchg
stos
shr
(bad)
(bad)
cdq
outs
adc
pushf
in
test
push
jns
lods
clc
in
push
dec
pushf
cmp
cld
push
movs
and
jmp
arpl
sub
push
xchg
xchg
jecxz
jge
adc
push
push
scas
mov
push
(bad)
aaa
jae
sub
cmps
jno
ins
fadd
and
outs
mov
inc
xchg
cmp
jmp
jns
sahf
inc
popf
pop
sub
push
sub
lahf
jge
sub
xchg
add
xchg
lods
rcl
stos
test
cmp
das
push
shl
ds
into
dec
mov
ins
sbb
es
mov
inc
scas
ffreep
(bad)
ret
pop
sub
mov
pop
test
mov
pushf
repz
jge
mov
xchg
neg
adc
test
mov
fisubr
cmp
mov
adc
popa
push
adc
lods
xor
dec
lea
mov
mov
or
shl
sbb
clc
je
retf
xlat
push
inc
sbb
mov
mov
sub
jmp
mov
fdivp
mov
adc
mov
jmp
enter
(bad)
movs
fisttp
pop
mov
daa
es
fsubr
stos
cmps
and
test
cld
adc
push
cmp
sub
ins
mov
dec
mov
sahf
mov
pop
bswap
cmp
rcl
scas
pop
and
push
mov
jmp
es
in
in
sbb
jns
xchg
aaa
xchg
mov
mov
inc
jnp
mov
movs
lods
mov
scas
aas
mov
or
(bad)
lahf
jg
test
dec
mov
in
cmps
jno
cmps
inc
aaa
cs
aad
pop
mov
test
lds
mov
in
movs
xchg
aas
and
push
(bad)
mov
hlt
ret
pop
and
jnp
pop
rcr
cmp
outs
jg
jne
in
or
push
inc
lods
add
mov
popa
loop
fidivr
lods
cs
ins
dec
retf
outs
add
xlat
imul
cmps
mov
stos
(bad)
sbb
jb
adc
in
scas
or
sub
cmps
xchg
pushf
mov
pop
out
sar
scas
or
jg
mov
jns
jmp
jg
loopne
sub
push
mov
je
mov
jns
stos
sub
clc
sub
mov
rcl
and
aas
in
sbb
push
scas
fwait
inc
pushf
fwait
out
scas
retf
(bad)
bound
xchg
cmp
inc
(bad)
mov
jb
in
cmp
out
inc
inc
mov
mov
sbb
pop
dec
(bad)
aaa
fwait
mov
repz
mov
adc
add
pop
dec
lods
sahf
stos
mov
imul
imul
and
sbb
push
(bad)
stos
mov
xor
lods
jns
add
xor
mov
and
pop
push
ds
pop
dec
stos
inc
cmp
push
mov
popf
fnsave
mov
scas
ss
xor
sahf
jae
mov
ss
(bad)
daa
lods
(bad)
ins
addr16
in
xchg
popf
js
bound
movs
or
test
mov
pop
mov
imul
(bad)
mov
mov
cdq
push
mov
jno
mov
mov
xchg
into
mov
outs
dec
sub
mov
and
mov
in
push
push
mov
xchg
icebp
ins
int
mov
cs
xchg
mov
lods
inc
dec
mov
jge
cmps
lock
test
mov
mov
arpl
mov
mov
and
hlt
aas
xor
xchg
mov
ins
and
pop
pop
mov
or
scas
cmps
jae
not
iret
ins
scas
push
jle
mov
mov
cmp
test
adc
xchg
cmps
pushf
in
pushf
(bad)
in
je
call
enter
aas
mov
nop
cmp
mov
push
mov
outs
xchg
lock
cmps
dec
jg
imul
movs
cmps
jle
sub
(bad)
xchg
scas
jmp
fnstsw
or
mov
call
jmp
mov
mov
dec
mov
xchg
scas
mov
into
push
pop
mov
imul
popf
and
test
mov
imul
inc
mov
mov
push
mov
mov
out
push
repnz
pop
scas
and
fwait
pop
lahf
loop
aam
pop
jge
mov
ret
xchg
fwait
mov
pop
ss
push
outs
mov
and
in
iret
jg
sub
outs
xor
mov
popa
cmp
cmp
out
mov
aam
jmp
imul
jb
retf
mov
loop
adc
mov
scas
mov
cdq
lock
mov
mov
jns
pushf
xchg
ins
scas
scas
xchg
mov
sbb
mov
mov
js
mov
pop
cmc
mov
mov
int
ss
mov
cs
das
jle
cmps
mov
xchg
inc
mov
inc
ja
js
cdq
(bad)
mov
int
cmp
test
ret
test
rol
ficomp
mov
pop
scas
aad
lea
pushf
cld
xchg
add
es
and
jnp
aas
xchg
lea
(bad)
sub
mov
jle
lods
mov
lods
mov
mov
out
enter
mov
adc
mov
scas
in
cmps
mov
xchg
shl
icebp
out
mov
js
jmp
mov
stc
scas
cwde
jmp
(bad)
mov
xchg
outs
xchg
mov
mov
jg
sub
outs
loop
xchg
mov
or
pop
sub
and
aas
sub
stos
test
sub
iret
mov
loopne
ror
ret
or
ins
test
mov
add
ret
movs
jg
mov
test
mov
adc
scas
ins
outs
sub
mov
jbe
inc
cmp
inc
mov
and
or
iret
fwait
push
bound
push
ins
fist
xor
scas
or
cmps
xchg
jbe
jge
cmp
cmp
std
add
rcl
xor
aaa
lds
mov
cmp
(bad)
cmp
or
mov
xchg
cmps
adc
leave
mov
pop
fsub
shr
xor
add
outs
pop
test
sar
inc
and
mov
jle
mov
jle
mov
mov
pusha
jnp
stc
pop
in
daa
into
mov
adc
adc
xchg
es
sahf
mov
xchg
ins
push
xchg
inc
dec
push
cmp
out
pop
jle
push
lahf
cwde
scas
xor
aas
loope
aas
and
cwde
(bad)
sahf
and
scas
in
dec
fimul
cmp
es
std
neg
stc
mov
outs
cmps
pop
hlt
sar
mov
xchg
fisttp
retf
xchg
int
sbb
scas
or
mov
jle
mov
mov
push
in
(bad)
mov
data16
pop
test
mov
xchg
mov
add
out
jle
cdq
js
call
ret
stos
mov
es
push
xchg
pop
jnp
(bad)
push
jp
adc
iret
and
inc
mov
ror
or
mov
jmp
(bad)
gs
push
mov
mov
(bad)
xor
je
retf
int3
jns
push
jnp
dec
lahf
add
daa
arpl
fwait
sub
mov
retf
cmc
cwde
pop
scas
lods
sbb
jnp
mov
mov
sub
stos
popf
cs
int3
jns
inc
jbe
cmps
ret
fisttp
scas
cmp
rcl
aaa
dec
push
mov
hlt
das
jle
mov
(bad)
(bad)
jmp
movs
stos
shr
mov
out
mov
in
xchg
lahf
jge
pop
call
dec
add
cmp
test
and
out
fisttp
add
mov
cmp
jg
loop
bound
push
mov
lods
ret
mov
sub
call
ins
inc
call
mov
ds
ins
mov
imul
std
enter
jno
jecxz
aaa
test
push
stos
mov
push
mov
xor
call
pushf
ret
dec
dec
mov
mov
ja
lods
xchg
jmp
(bad)
cmps
stos
popa
push
scas
fwait
ins
test
push
fstp
sbb
lods
and
jge
loopne
mov
stos
or
dec
lods
outs
pop
outs
mov
stos
out
lahf
fldz
fldenv
mov
and
popf
inc
test
xor
lods
rol
push
stos
pushf
repz
mov
imul
pop
adc
pushf
cmc
pop
mov
cmps
mov
cmps
ret
jecxz
xor
and
neg
mov
xor
or
pusha
aaa
lock
or
xchg
push
outs
push
jo
out
iret
jno
jle
stos
inc
lods
pop
xor
xchg
push
scas
mov
sbb
pop
loopne
shl
imul
cld
je
cs
ret
test
cmps
cmp
mov
mov
(bad)
mov
fisub
ins
popf
jno
in
jmp
dec
retf
addr16
(bad)
jmp
out
loopne
xchg
dec
sub
clc
mov
rcl
retf
fmul
pop
pop
xor
and
sub
jp
lods
xlat
seta
pushf
xor
daa
cmp
imul
retf
sub
mov
sub
cmps
in
mov
inc
jno
lahf
pop
sar
(bad)
out
push
push
pushf
mov
retf
lahf
in
mov
scas
pop
mov
stos
mov
mov
jl
test
movs
and
daa
sbb
sbb
iret
sbb
sbb
xchg
and
mov
stos
fdivr
aas
mov
sub
(bad)
iret
pop
xchg
cmp
inc
out
xchg
cld
outs
push
push
mov
push
mov
les
mov
ins
addr16
jnp
push
push
push
sahf
sub
dec
mov
and
mov
nop
test
xchg
data16
jbe
inc
into
push
add
mov
popa
stos
mov
scas
outs
mov
lea
mov
mov
sub
cmps
fldl2e
or
addr16
jle
push
xchg
mov
aam
mov
aad
imul
sbb
movs
xchg
int
call
adc
xchg
leave
int3
add
push
xor
mov
(bad)
mov
sub
scas
mov
ret
stos
mov
jle
fidivr
mov
outs
add
test
lods
lock
test
shr
mov
mov
mov
adc
mov
mov
mov
iret
mov
cs
push
sub
cmp
fwait
out
jmp
daa
xchg
out
adc
xor
fmulp
mov
into
push
xchg
and
jle
and
cmp
(bad)
aas
mov
pop
mov
ins
je
in
fcom
pop
jge
leave
xor
es
stos
outs
ret
loopne
pop
add
(bad)
fdivr
pop
push
jnp
sbb
movs
aam
ror
cmp
adc
movs
push
sbb
fcomi
ds
sub
scas
fs
fmul
test
pop
stos
cmps
pop
push
(bad)
out
imul
fwait
or
ss
stos
inc
mov
inc
pop
jp
call
sub
aas
mov
sbb
inc
arpl
jge
pop
or
and
mov
mov
jmp
sbb
cmps
mov
movs
jge
inc
mov
sahf
fdiv
mov
scas
sub
shl
stos
dec
jl
lds
faddp
or
mov
mov
mov
or
je
cs
lock
sbb
les
shl
pop
dec
mov
adc
jl
fcomp
sub
jmp
mov
addr16
push
cs
mov
pop
pop
daa
jae
fldenv
dec
sub
jns
dec
xchg
imul
ret
ins
(bad)
loopne
jg
std
mov
cdq
out
lods
fs
imul
mov
lods
mov
add
test
cmps
xor
gs
cs
jmp
cld
jge
push
inc
scas
cmp
inc
(bad)
jae
arpl
cmp
jns
dec
ds
sbb
js
pop
inc
fisttp
outs
or
mov
push
loop
(bad)
mov
and
adc
pop
adc
imul
dec
(bad)
cwde
xchg
sahf
xchg
dec
xchg
and
(bad)
mov
add
aaa
mov
call
arpl
cs
mov
lods
(bad)
scas
gs
and
into
and
xchg
fist
push
and
sub
push
movs
jle
jmp
(bad)
push
mov
jg
ret
out
movs
cmps
popf
mov
int3
mov
dec
mov
test
(bad)
fidiv
xchg
and
cdq
mov
ret
xchg
lds
jp
outs
stos
aas
imul
in
adc
jg
xchg
scas
xchg
scas
jns
sbb
pop
jbe
lea
pop
sub
(bad)
adc
or
adc
test
lods
mov
mov
xlat
mov
mov
jns
xor
es
xlat
js
add
out
mov
pusha
jecxz
test
push
jg
mov
popa
jecxz
rol
mov
(bad)
lods
mov
mov
addr16
push
bound
mov
(bad)
jno
pop
mov
outs
(bad)
mov
ja
es
pop
clc
scas
dec
mov
icebp
(bad)
ins
cmps
mov
push
aad
scas
lea
mov
mov
mov
xchg
mov
adc
scas
mov
stc
jo
inc
aad
leave
data16
cmp
cmps
push
daa
push
mov
mov
and
mov
adc
js
mov
js
call
sub
mov
out
popa
sub
dec
lods
jbe
stc
arpl
test
es
and
cmp
cmp
adc
lock
or
inc
inc
jae
popf
mov
and
pop
dec
push
jbe
(bad)
imul
xchg
test
hlt
shr
test
jns
std
jp
mov
inc
call
inc
mov
cmps
xchg
mov
pop
mov
mov
ret
ja
popf
mov
inc
lahf
xlat
std
jle
les
mov
push
ret
mov
hlt
nop
push
and
dec
lea
mov
cmps
cmp
test
sbb
mov
sbb
mov
ss
dec
mov
jmp
das
push
sbb
adc
push
cmps
cmp
mov
fldcw
iret
push
and
inc
xchg
mov
iret
mov
or
push
iret
imul
sub
popa
test
ins
jmp
sub
cmps
call
mov
outs
out
lods
test
test
sbb
cs
and
jle
out
or
jno
mov
xlat
in
retf
dec
jmp
data16
xchg
xchg
call
stos
fsubr
and
jmp
aad
mov
int3
cmp
(bad)
sbb
push
add
lods
sbb
outs
test
in
push
push
push
mov
shl
daa
stos
add
sbb
push
ins
cs
out
mov
mov
addr16
out
jne
mov
xor
mov
pop
push
dec
scas
stos
rcr
mov
cmp
movs
stos
add
mov
and
popa
push
xor
(bad)
sub
or
mov
dec
sahf
cmp
aaa
push
data16
jmp
in
gs
cmp
sub
mov
xchg
jge
jae
cwde
icebp
movs
mov
ja
xchg
dec
cmps
ret
and
daa
ss
cs
fwait
pop
daa
lods
popa
push
hlt
div
test
retf
and
mov
pop
jg
fsub
pop
aad
aam
xor
faddp
movs
clc
jle
sub
pop
fld
(bad)
inc
(bad)
jne
aam
inc
mov
push
and
lods
mov
in
or
ins
sub
pop
aad
outs
movs
lahf
jge
test
cmps
inc
pop
sub
mov
fwait
imul
fdivr
jmp
cmps
inc
test
or
cmc
popf
cld
adc
xor
out
mov
sub
lods
mov
add
pop
arpl
ret
out
lods
push
imul
cmps
xchg
outs
push
xchg
and
fisttp
jb
int3
sub
into
push
fsub
jae
out
push
mov
fisttp
dec
in
out
push
cmps
jle
daa
sahf
(bad)
stos
xchg
mov
aam
mov
fwait
add
movs
mov
lods
adc
or
mov
fs
adc
xchg
xchg
mov
or
mov
push
inc
xor
push
rcl
fsub
outs
mov
mov
cmc
pop
mov
jno
sbb
jmp
(bad)
test
pop
imul
jle
xchg
sub
mov
add
in
pop
test
repnz
call
xchg
loope
mov
shr
xchg
cs
pushf
push
test
and
das
push
xchg
xor
sub
jmp
pop
jno
and
inc
inc
mov
mov
fild
mov
or
(bad)
mov
sbb
mov
(bad)
mov
pop
or
sbb
jl
xchg
mov
jns
jmp
sbb
jmp
mov
mov
test
pushf
mov
or
cmp
cs
pop
scas
movs
imul
cmp
or
ss
adc
sub
jg
jnp
sub
stc
mov
cmps
stos
cld
(bad)
and
cmp
arpl
lea
out
fwait
pop
dec
dec
jle
test
mov
mov
cld
adc
call
inc
adc
shl
(bad)
fdiv
mov
push
jl
dec
jae
daa
mov
xchg
(bad)
je
xchg
(bad)
scas
fwait
and
pop
xchg
aas
pop
mov
inc
imul
iret
lods
(bad)
dec
push
inc
maxps
es
pop
mov
mov
test
adc
mov
mov
out
mov
inc
mov
into
sub
gs
mov
aam
dec
dec
in
stos
xchg
out
pop
test
fwait
rcr
jns
es
movs
sub
retf
push
mov
push
inc
jg
cmps
lds
ins
bound
(bad)
inc
xchg
in
dec
sub
xchg
(bad)
and
in
imul
mov
repz
dec
rcl
stos
pop
fidiv
pop
xchg
mov
mov
mov
jecxz
js
and
out
cwde
jb
(bad)
stos
movs
push
ror
(bad)
mov
add
lock
inc
test
and
movs
retf
mov
pop
cmp
mov
movs
outs
(bad)
je
jl
or
mov
push
and
mov
pop
adc
cmps
dec
in
xchg
movs
aad
dec
adc
or
int3
inc
inc
lods
ins
shl
movs
push
and
pushf
shld
and
ins
ret
outs
mov
call
xchg
and
or
mov
sub
and
push
cmp
movs
es
jge
dec
aad
retf
clc
inc
cmps
add
mov
ja
test
jb
pop
mov
xchg
jb
lahf
jns
mov
xchg
mov
fisttp
dec
cmp
cs
scas
stos
sub
movs
xchg
or
or
arpl
sar
inc
cmps
les
cmps
mov
cwde
loope
enter
jg
dec
jmp
mov
ja
adc
movs
cmp
movs
xor
pop
jp
pop
mov
mov
push
mov
jb
cmp
and
cs
lock
mov
call
jmp
scas
dec
call
scas
aam
lea
or
xchg
mov
mov
test
rol
cmp
jle
dec
rep
adc
mov
fwait
mov
frstor
mov
dec
(bad)
es
std
cmps
popa
mov
out
cmps
push
xchg
xchg
and
stos
xchg
ret
aad
stos
loop
aas
lea
in
pop
mov
hlt
jo
nop
cmp
ja
cmp
loopne
push
clc
sbb
xchg
addr16
imul
int
int3
fld
mov
jge
sbb
jbe
mov
mov
jmp
ret
cmp
fcmovbe
xchg
popf
data16
push
and
lods
fadd
push
mov
mov
in
ret
outs
sub
cmps
mov
(bad)
mov
push
fwait
data16
ret
jg
fst
stos
sub
(bad)
sub
pop
mov
lea
mov
pusha
dec
scas
mov
or
mov
repnz
cmp
and
lds
cmp
rcr
aas
outs
and
cmps
fdiv
jne
jb
xor
jne
outs
cwde
push
jnp
rol
(bad)
fnstsw
movs
ins
mov
pushf
sbb
ret
sub
js
sbb
addr16
hlt
sub
test
sub
xor
mov
(bad)
jp
pop
cmp
lods
imul
pusha
cmps
sar
xor
mov
fwait
xor
xchg
mov
sbb
scas
js
xor
sbb
hlt
std
dec
or
std
inc
inc
ficom
jp
mov
mov
shr
je
inc
sub
scas
and
cmp
mov
push
push
xlat
mov
int3
push
add
and
xchg
out
test
or
inc
js
ret
mov
push
cmps
sar
ja
cmp
dec
jbe
inc
(bad)
mov
xchg
jg
cmc
stos
das
xchg
mov
sub
add
inc
es
iret
fmul
mov
pusha
mov
and
inc
mov
mov
add
jb
sbb
enter
pop
sub
push
sbb
or
aam
xchg
mov
mov
addr16
sub
or
imul
xchg
out
imul
scas
iret
jge
mov
xchg
(bad)
sub
repz
mov
add
and
inc
aaa
mov
fiadd
push
jmp
jmp
mov
popf
and
push
mov
xchg
sub
(bad)
pop
das
xchg
jge
mov
and
jo
xchg
adc
mov
xchg
pop
in
push
mov
and
xchg
es
(bad)
adc
cs
jnp
push
inc
jp
mov
test
xor
xor
adc
iret
pop
and
inc
out
stos
or
pop
mov
cmp
jg
pop
ds
add
inc
scas
hlt
pop
cmps
imul
inc
xchg
arpl
xchg
fwait
sbb
inc
ss
mov
push
pop
movs
inc
daa
sub
cmp
push
imul
dec
jb
mov
pop
es
xchg
mov
js
xchg
xchg
das
xchg
stos
pop
fidivr
jp
xchg
icebp
mov
pop
(bad)
mov
add
das
mov
jg
repnz
sub
add
fistp
mov
mov
ja
jmp
data16
inc
xor
cmps
dec
mov
xor
xchg
in
ror
mov
out
sbb
push
mov
jb
xchg
rcr
ror
sub
push
mov
or
fisttp
aad
mov
scas
movs
xchg
mov
test
mov
adc
and
movs
xchg
jbe
adc
movs
out
jg
mov
test
jmp
test
retf
cmp
popa
mov
or
lock
mov
js
stos
xor
fsub
imul
dec
sub
movs
mov
add
xchg
test
adc
mov
pop
jns
lahf
cmp
in
mov
mov
inc
adc
(bad)
mov
cmp
mov
jle
sbb
das
sub
dec
imul
out
jle
mov
addr16
cmps
jae
pop
aad
fs
movs
mov
mov
xchg
or
dec
dec
mov
xchg
cmps
lds
mov
push
out
out
jb
mov
cld
test
and
mov
pop
gs
mov
lea
(bad)
jnp
scas
sub
sub
xor
jl
fstp
xchg
gs
cmps
or
and
out
pop
lods
push
icebp
into
push
push
iret
pop
lds
or
js
xor
push
sub
sbb
pop
mov
adc
js
mov
mov
sub
mov
hlt
js
sub
in
mov
lods
shr
loope
cwde
mov
js
pushf
mov
aad
pusha
mov
pop
inc
popa
mov
sti
xchg
mov
dec
push
pop
dec
(bad)
(bad)
cmps
or
pop
cmp
cdq
imul
dec
imul
mov
dec
stos
cmps
scas
dec
sub
sahf
push
sub
lock
outs
imul
(bad)
popa
stos
mov
in
mov
xchg
mov
mov
mov
data16
pushf
jae
xchg
test
dec
xchg
dec
call
(bad)
imul
and
aas
jnp
ja
mov
xor
mov
mov
dec
pop
xor
jb
gs
mov
and
xchg
cmp
out
mov
cmp
cwde
xor
add
jo
(bad)
xor
daa
jecxz
sbb
popa
mov
in
jecxz
(bad)
sub
mov
cwde
imul
sub
add
ret
inc
dec
inc
pusha
mov
std
mov
and
xchg
inc
mov
mov
in
nop
pop
jle
fdivr
movs
js
lahf
mov
mov
xchg
mov
jns
cmp
lods
pop
repnz
icebp
inc
lahf
inc
imul
out
fmul
(bad)
mov
mov
jmp
arpl
cmps
add
ins
jnp
or
es
data16
ins
and
pop
retf
mov
out
cmps
jecxz
mov
dec
ins
jmp
dec
aas
xor
je
sahf
lods
aaa
or
cmp
adc
xchg
dec
mov
xchg
in
mov
es
dec
sahf
xchg
repz
mov
movs
fwait
jmp
imul
xchg
sub
mov
dec
out
and
and
mov
sub
sbb
addr16
enter
es
mov
mov
jg
movs
xor
pop
ins
jnp
push
cli
ins
ja
int
imul
mov
sbb
mov
cli
les
push
cwde
push
jmp
push
rep
sbb
jl
jge
stos
adc
das
lea
jge
mov
adc
dec
add
cmp
sbb
ret
cmps
imul
lahf
adc
jne
pop
dec
popa
or
and
cli
jmp
xchg
and
sbb
cli
imul
push
xchg
push
xchg
fsubp
ins
stos
das
jle
jns
inc
mov
(bad)
test
ins
sub
and
stos
push
sbb
retf
mov
aad
daa
mov
popa
xchg
(bad)
dec
fst
and
inc
pop
add
sbb
repz
jg
ins
sbb
sub
(bad)
xchg
pop
dec
pushf
cs
(bad)
aad
pop
push
nop
xor
test
push
inc
adc
imul
stos
push
pop
stos
mov
push
sar
movs
hlt
fsubr
(bad)
cmps
scas
scas
ins
mov
jecxz
pop
sar
cmps
mov
sub
lods
ret
lods
movs
dec
add
push
push
mov
test
ins
xchg
(bad)
mov
repnz
das
xchg
cmp
xchg
in
fisubr
adc
ins
(bad)
shr
in
shl
addr16
movs
pop
loope
dec
in
stos
fisttp
mov
mov
(bad)
loop
pusha
(bad)
clc
cwde
scas
(bad)
dec
push
mov
mov
iret
mov
in
xchg
jno
cmps
movs
add
aam
push
xlat
inc
jg
iret
test
push
sti
imul
sahf
jge
popa
xor
imul
and
adc
imul
js
aas
jne
pop
xchg
std
stos
and
inc
ret
sti
rcl
pop
inc
jne
dec
imul
xchg
jne
jnp
add
and
mov
pushf
cld
sub
int
cmp
icebp
inc
lds
daa
mov
mov
popf
in
push
lds
mov
int
xor
add
push
ret
dec
fucomp
aam
(bad)
cmp
shr
cmps
dec
add
pushf
movs
mov
jl
dec
dec
aas
jo
and
test
out
cmp
ss
sbb
imul
and
push
dec
or
je
jno
add
aas
pop
dec
int3
(bad)
cdq
xor
scas
fnstsw
repz
das
addr16
stos
pop
mov
pop
jmp
or
mov
jno
fwait
das
mov
outs
clc
xchg
mov
pop
xchg
popa
ds
pop
jno
pop
mov
lahf
mov
dec
mul
ins
mov
mov
mov
data16
ins
pop
mov
pop
outs
pop
jne
mov
push
cmp
aas
pop
rcl
pop
(bad)
xor
and
popa
dec
mov
scas
push
push
gs
mov
pop
cwde
xor
std
xchg
test
mov
aad
push
dec
int3
sahf
movs
jmp
scas
jle
or
(bad)
leave
push
dec
xor
cmp
or
and
imul
xor
gs
mov
fdivr
test
mov
push
mov
or
mov
out
pop
lods
pusha
es
push
lods
pop
mov
adc
mov
hlt
out
push
mov
push
pop
add
and
xchg
or
outs
push
lahf
scas
xor
int3
pop
mov
xchg
pop
xchg
lods
sbb
(bad)
jp
mov
push
mov
fwait
movs
mov
out
sub
es
jnp
xchg
(bad)
pop
movs
mov
in
cmps
xchg
jecxz
inc
xor
pop
xchg
jbe
lea
sbb
mov
lods
or
mov
mov
mov
pop
fs
dec
daa
inc
sub
mov
dec
and
es
mov
push
lds
inc
stos
es
jne
ins
sub
cmps
jne
call
xchg
and
fld
cmp
movs
inc
dec
stos
pop
jl
mov
shr
addr16
test
mov
cmp
cmp
movs
(bad)
mov
push
int3
arpl
fbstp
outs
dec
sbb
mov
mov
popa
mov
xchg
push
mov
pushf
add
inc
cmp
daa
sub
jp
sub
addr16
rcr
jne
push
and
ins
xchg
imul
xchg
popa
pushf
push
and
popf
pop
stos
mov
dec
clc
pop
movs
mov
and
add
inc
jne
push
jl
mov
call
sbb
push
ins
xlat
cmp
jnp
call
scas
push
je
pop
cmp
lods
mov
and
sub
sbb
mov
dec
jl
in
lds
sahf
call
mov
mov
mov
neg
mov
ss
mov
ret
scas
xor
arpl
cmps
es
mov
arpl
jge
xor
cmp
dec
cmps
sub
es
ja
fimul
ss
stos
adc
add
lock
and
data16
cmp
imul
dec
scas
or
adc
and
xchg
ds
and
mov
lahf
ins
ja
jecxz
cmp
cmp
idiv
ins
mov
mov
jmp
inc
push
sbb
fwait
mov
test
imul
popa
add
xor
mov
shl
dec
or
mov
ds
cmp
mov
cmp
cmp
int
mov
sub
push
xchg
jge
mov
(bad)
cmp
jbe
lea
popf
mov
jb
or
je
mov
xor
daa
cmps
jne
mov
lock
(bad)
bound
sbb
popa
cmps
inc
ds
repnz
jp
mov
lea
xor
xchg
stos
in
sub
in
outs
(bad)
loop
gs
loope
ret
jp
and
cmp
ja
mov
xchg
in
ins
inc
popa
rol
repz
and
imul
scas
lea
jns
shl
pop
imul
pushf
call
outs
stos
and
retf
dec
cld
shr
fadd
cmp
ret
retf
inc
cs
push
ins
mov
sahf
jno
pop
or
and
mov
fsubr
dec
and
jecxz
sub
lock
lahf
jl
mov
jge
pop
pop
sbb
adc
movs
and
or
and
(bad)
jne
bound
mov
push
cdq
inc
adc
imul
mov
in
cmp
and
dec
mov
add
and
out
sahf
loopne
(bad)
aad
addr16
jnp
std
cmp
push
inc
mov
mov
push
test
jne
aam
pop
mov
leave
inc
mov
fcomp
stos
(bad)
dec
test
pop
adc
shl
div
xor
ret
jno
int
dec
jle
shl
out
adc
repnz
shr
and
add
mov
jle
pop
imul
daa
mov
stos
jp
xchg
lods
(bad)
push
dec
and
(bad)
je
leave
fld
stos
mov
arpl
jle
sahf
in
xchg
(bad)
fisubr
repz
inc
inc
dec
outs
sub
stc
mov
outs
mov
seta
mov
lock
call
and
mov
in
pop
push
or
jp
or
and
mov
jnp
inc
pop
clc
mov
inc
sbb
mov
cwde
shl
in
xchg
mov
test
jl
dec
retf
fidiv
inc
ins
inc
lods
mov
stc
int
mov
lods
aad
addr16
inc
scas
pushfw
adc
xor
xor
ins
pop
cmps
das
int
push
xchg
aam
cmp
scas
dec
ds
retf
cmp
ja
popa
jae
mov
mov
cli
sahf
sbb
(bad)
xchg
repnz
mov
repnz
xor
sbb
imul
fs
daa
(bad)
retf
lahf
jle
pop
cmp
mov
cld
out
cmps
pop
or
cs
jns
mov
xor
sbb
out
adc
or
jmp
cmp
scas
das
(bad)
icebp
test
cmps
out
xor
std
test
mov
jmp
sar
xchg
jp
xchg
cs
dec
mov
sbb
xchg
xchg
add
xchg
mov
push
sahf
(bad)
push
pushf
pop
test
mov
loop
lock
mov
data16
adc
test
pop
dec
test
jg
lock
(bad)
mov
jns
sti
test
pop
arpl
cmp
gs
out
mov
push
mov
(bad)
sub
test
pop
mov
js
jecxz
inc
xor
std
(bad)
(bad)
fst
add
dec
(bad)
enter
sbb
or
pusha
fcmovne
sbb
js
out
jge
xchg
inc
mov
out
test
(bad)
(bad)
jmp
test
mov
xchg
push
sub
sbb
xor
bound
leave
pushf
imul
repnz
movs
mov
xor
inc
not
inc
jg
jbe
mov
jnp
nop
push
xchg
mov
scas
(bad)
cmp
in
pop
jb
adc
adc
jno
and
jg
push
inc
cmps
jg
dec
daa
pusha
retf
sub
jns
add
lods
pop
rcr
adc
(bad)
ja
cmp
jg
hlt
cmp
stc
adc
mov
and
pop
mov
inc
pop
aam
jg
mov
retf
mov
addr16
scas
and
adc
xchg
test
aaa
addr16
xchg
retf
or
sub
cmp
sub
std
cmp
pop
sub
loop
push
dec
xchg
jmp
xor
push
xchg
dec
mov
cld
iret
dec
dec
push
hlt
test
arpl
add
scas
or
jmp
mov
in
aam
adc
hlt
cmc
jnp
adc
add
movs
in
(bad)
aas
aas
and
sbb
adc
mov
jg
stos
(bad)
mov
cmc
pop
scas
adc
push
and
scas
test
mov
(bad)
sbb
in
or
ins
mov
adc
pop
jae
inc
cmps
les
arpl
lea
mov
outs
xchg
adc
jecxz
pushf
xor
pop
jg
fcomp
sub
aaa
pop
imul
sbb
es
mov
lods
std
xchg
jecxz
sbb
sub
jne
jno
fs
call
bnd
jl
fisttp
test
je
leave
xor
and
jno
inc
jl
or
mov
mov
pop
jg
pushf
in
or
ffree
cld
fnstenv
mov
jns
inc
imul
sbb
in
mov
mov
mov
xor
lock
ja
imul
ror
add
rcr
inc
or
ins
or
retf
ins
xchg
mov
mov
test
xor
cmc
or
adc
xchg
mov
sahf
mov
jo
retf
ins
inc
lods
jle
dec
xchg
scas
push
aas
sub
outs
(bad)
cmp
xchg
fdiv
inc
xor
in
in
inc
mov
jmp
push
popa
pop
fadd
std
(bad)
jbe
inc
bound
xchg
cwde
sbb
fadd
lea
mov
mov
mov
movs
loope
test
in
fst
mov
mov
or
das
je
pop
cmp
(bad)
sahf
adc
imul
pop
or
mov
jo
js
je
les
add
mov
or
faddp
adc
fwait
imul
pop
cmp
pop
pop
jmp
pop
lods
std
(bad)
lods
(bad)
fsubr
cwde
mov
xchg
pop
sub
ins
adc
test
push
sub
aam
ja
loop
pop
into
retf
ds
inc
ss
ins
loop
aad
scas
test
jge
mov
jnp
and
out
shl
jb
add
xchg
getsec
stc
or
jbe
mov
cmp
mov
je
cld
bound
sub
xchg
int3
rcl
dec
jg
mov
sahf
fwait
lds
mov
xchg
jecxz
clc
add
mov
shl
sbb
mov
jne
mov
std
cmp
lods
ret
xor
stc
inc
add
xchg
mul
pop
ret
outs
push
test
movs
pop
dec
pop
in
daa
(bad)
ret
(bad)
and
sub
jl
sub
push
jo
sub
push
test
jge
lods
std
cmp
adc
pop
cmps
les
movs
mov
sub
cmps
mov
mov
cmp
adc
cmps
test
in
aaa
mov
jmp
int3
ins
jl
jnp
ins
arpl
je
inc
jmp
sbb
je
std
outs
cmp
inc
aam
bound
rcl
sbb
out
cmc
inc
jae
cmp
stos
adc
js
inc
dec
or
cmp
outs
mov
dec
mov
repz
jne
aaa
cld
pop
xchg
push
mov
xlat
cli
sub
aaa
add
jg
sbb
jo
sbb
inc
psubq
cmp
adc
xor
pop
sub
loope
stc
pop
xchg
je
xchg
xor
mov
stos
cmp
pop
jb
sbb
cmp
cmp
cld
outs
imul
sbb
mov
es
jmp
outs
or
daa
shl
xlat
test
mov
jo
mov
xlat
sbb
push
shl
mov
mov
cmp
push
fsubr
mov
mov
test
jg
mov
pop
jno
cmp
stos
call
ficomp
clc
mov
movs
lods
stc
lahf
scas
test
push
mov
cmps
xor
ror
mov
lahf
pop
sub
movs
mov
pop
stos
stos
(bad)
or
test
sti
xchg
dec
vmwrite
sub
mov
xlat
inc
aaa
push
jmp
add
mov
out
fisub
push
jg
mov
push
push
jno
mov
add
xchg
(bad)
mov
call
dec
adc
mov
mov
mov
test
mov
mov
call
popf
lods
test
movs
sub
es
mov
mov
lds
mov
paddw
lods
in
pop
xchg
sbb
std
pushf
aas
stos
dec
pop
mov
jmp
out
cdq
push
outs
(bad)
push
mov
and
popa
test
push
(bad)
movs
sub
stos
ss
mov
xchg
and
mov
mov
xchg
jmp
mov
cld
jg
popa
mov
lods
outs
mov
repnz
mov
mov
add
mov
mov
cli
push
inc
cmp
bound
mov
popa
mov
(bad)
mov
retf
arpl
(bad)
push
push
movs
xchg
mov
inc
das
addr16
(bad)
adc
stos
inc
daa
ins
xor
ds
pop
mov
retf
fidiv
outs
test
xlat
out
or
arpl
cmovnp
cmps
push
imul
lea
aas
retf
cmp
mov
aam
add
(bad)
xchg
(bad)
data16
xchg
gs
sbb
push
and
or
ins
inc
pop
ret
xchg
pusha
mov
sahf
mov
mov
cmp
push
mov
inc
scas
mov
push
xor
and
lahf
scas
push
test
pop
jmp
jmp
pop
cmp
imul
jl
jne
adc
dec
sti
adc
gs
or
sub
mov
das
sti
dec
add
dec
jmp
lahf
push
lds
add
(bad)
imul
push
push
rcr
push
dec
cmp
inc
push
sar
outs
jbe
push
outs
adc
xchg
add
mov
sub
mov
fs
and
(bad)
push
push
out
cmps
push
inc
mov
cs
dec
mov
dec
pop
(bad)
fmul
push
mov
dec
jns
popf
xchg
out
sar
mov
lods
scas
dec
or
inc
inc
jne
mov
cmp
jnp
arpl
add
pop
mov
out
mov
test
lea
jle
out
in
jns
push
cmp
(bad)
xor
xchg
pop
fwait
bound
mov
adc
stos
test
out
ficom
aaa
(bad)
sbb
hlt
gs
fild
inc
pop
in
jne
cdq
sub
scas
gs
fwait
test
int3
pop
push
inc
in
dec
je
inc
(bad)
aas
mov
mov
pop
cmps
js
mov
ja
xor
mov
imul
popf
(bad)
or
bnd
mov
mov
push
cmp
cmps
sbb
or
push
pop
mov
out
xchg
push
ins
mov
movs
add
fld
push
sahf
outs
mov
call
pop
mov
out
xchg
mov
jecxz
mov
int3
imul
push
add
out
add
mov
popf
bound
std
stos
bound
cmps
jle
inc
arpl
lods
or
pop
ins
fwait
int
nop
mov
clc
sbb
ret
jmp
or
pop
(bad)
(bad)
out
pop
(bad)
scas
(bad)
js
ret
scas
jbe
int3
popa
cld
nop
cmps
or
mov
and
or
xor
(bad)
inc
pop
in
mov
push
pushf
mov
std
cmps
inc
jg
pop
mov
movs
lods
cmp
inc
test
jmp
call
pushf
push
jns
inc
sti
fld
jmp
cmp
mov
jge
dec
jae
ja
jne
call
jg
inc
jle
jo
cli
xchg
stos
aam
push
sbb
(bad)
mov
mov
rol
push
mov
sbb
mov
movs
movs
test
test
or
jbe
jp
int3
out
jecxz
scas
lods
mov
push
pushw
push
(bad)
sbb
xchg
mov
dec
jmp
sub
adc
jmp
push
mov
ins
jge
pop
jp
and
jnp
push
arpl
inc
xor
adc
add
mov
call
or
in
enter
or
push
push
addr16
jl
and
test
addr16
cmp
jle
lods
jns
xchg
(bad)
jecxz
mov
sub
lds
inc
cdq
daa
dec
mov
adc
outs
pop
pusha
out
adc
mov
test
rcl
out
jno
pushf
(bad)
stos
pusha
cwde
call
push
adc
imul
push
mov
push
les
ret
add
and
push
imul
pop
movs
cld
lahf
xchg
es
and
xchg
xor
or
cmp
sbb
cmp
add
and
sbb
mov
xchg
aaa
pop
mov
pushf
scas
cmp
pop
push
lods
inc
sub
movs
popa
lahf
xor
fimul
cmp
mov
(bad)
repnz
mov
mov
mov
mov
xchg
imul
cmp
jl
push
adc
push
mov
inc
xchg
movs
mov
or
sub
in
stos
(bad)
ret
cmps
cmps
and
cmp
popa
jne
sub
ins
repnz
stos
mov
jmp
jl
sub
sub
loope
xchg
jge
lahf
out
jp
and
movs
loope
fstp
mov
les
icebp
call
push
push
sbb
fstp
enter
je
xlat
(bad)
jmp
jge
je
out
fwait
sbb
int3
cmp
mov
xor
(bad)
mov
cwde
in
in
inc
movs
imul
xor
and
test
jb
push
or
loopne
cmp
sub
or
mov
cmp
and
mov
in
mov
mov
mov
xor
cmps
test
pop
sub
mov
xor
pop
jnp
out
mov
iret
dec
lea
pop
mov
add
mov
js
es
ja
imul
jle
and
xchg
mov
mov
cdq
xchg
fist
mov
fwait
retf
mov
pop
pusha
(bad)
push
xor
mov
push
dec
add
call
adc
in
loopne
xor
jl
imul
idiv
mov
ret
jmp
inc
cli
push
cmp
xchg
and
or
ins
call
je
mov
stos
stos
jge
adc
pop
pop
dec
rcl
sub
push
add
mov
jmp
cmps
imul
and
cli
mov
jge
and
sbb
mov
mov
mov
cmp
jmp
jnp
pop
xchg
test
mov
outs
xchg
xchg
sub
outs
pop
aad
mov
dec
lods
add
in
(bad)
push
call
xchg
shl
sbb
fiadd
jp
sbb
xor
add
fdivr
mov
mov
ins
push
ins
cmp
aas
sub
jmp
push
lods
or
test
jl
and
popa
mov
adc
sub
(bad)
aam
mov
inc
daa
pop
inc
cli
aam
cmp
daa
jg
push
mov
jl
aas
jecxz
aad
dec
push
idiv
and
push
mov
outs
adc
push
cld
jbe
jno
mov
pop
jb
(bad)
out
xor
retf
sub
mov
or
fs
dec
or
aad
jle
mov
push
adc
or
add
lods
or
dec
sub
or
aas
scas
cmp
pxor
test
stos
scas
mov
ret
sti
or
mov
mov
mov
mov
(bad)
jne
loope
gs
fs
fs
and
pop
cmps
mov
(bad)
stos
or
push
test
xor
sub
js
lea
ins
xor
cmp
pop
mov
jp
sub
ss
jmp
(bad)
cmp
test
sub
stos
jp
test
push
aaa
add
fwait
rol
inc
cld
mov
pop
inc
fld
(bad)
in
stc
cvtps2pd
ds
outs
pop
adc
movs
mov
push
pop
loope
inc
push
lods
stos
addr16
in
push
jmp
in
mov
cmp
adc
adc
in
dec
jle
mov
add
jl
inc
outs
pop
scas
retf
(bad)
cmp
sbb
adc
sub
mov
dec
mov
mov
fwait
sub
test
cmps
inc
sbb
jle
popa
in
repz
cmp
pop
adc
dec
and
mov
ja
adc
fs
(bad)
call
pusha
xchg
fimul
pop
add
mov
mov
arpl
fstp
jge
and
mov
xor
fsubr
xor
jbe
jmp
mov
and
dec
adc
mov
loope
sbb
(bad)
cmp
sbb
jge
mov
mov
in
mov
fsub
mov
jmp
adc
sbb
fwait
jp
mov
cmp
sbb
fwait
pushf
pop
mov
cmps
push
mov
cwde
imul
push
xchg
in
push
cmp
push
pop
mov
pop
fbstp
daa
inc
xchg
pop
in
adc
gs
clc
xchg
das
popa
mov
test
(bad)
pop
cmps
xor
out
mov
mov
retf
inc
or
ror
adc
cld
lods
dec
mov
es
jo
sbb
pop
out
and
jno
mov
mov
cmp
sub
imul
sub
arpl
xchg
push
jnp
dec
ja
jae
popf
outs
popf
scas
dec
add
mov
push
xor
dec
mov
(bad)
jno
out
pop
mov
mov
cmp
push
popa
xor
mov
jmp
inc
mov
lods
jne
stos
add
xchg
ret
pop
mov
jl
retf
arpl
cmps
js
hlt
adc
fcmove
cmc
mov
cmp
mov
mov
inc
int3
mov
mov
mov
cmps
rol
jge
inc
xchg
popa
sub
out
retf
push
leave
add
dec
adc
mov
cmp
cmp
ins
dec
mov
dec
popf
inc
mov
inc
pop
and
lds
(bad)
cmp
sti
or
mov
fldenv
test
adc
sahf
gs
call
repnz
jnp
xor
xchg
bound
es
es
(bad)
ret
popf
cmp
push
in
xchg
cmps
sbb
test
xchg
int3
sbb
push
sbb
in
push
movs
ja
fisubr
shl
jg
lock
adc
push
pop
js
jge
cwde
sbb
add
das
or
sub
mov
ins
and
ss
rcr
xchg
jne
mov
std
and
repz
sbb
ret
ret
pop
jns
mov
dec
and
push
sub
sub
adc
push
es
retf
sar
dec
jb
adc
add
sbb
adc
or
movs
dec
mov
es
push
ins
adc
xor
mov
adc
es
call
mov
paddusw
adc
push
inc
stos
mov
imul
movs
xchg
es
sbb
imul
mov
test
in
adc
repnz
stc
jo
mov
jns
das
mov
loop
shr
leave
xor
jo
fs
rcr
jo
je
and
mov
jmp
std
cmps
mov
dec
out
sub
leave
mov
cmp
nop
aad
cs
push
movs
xchg
jle
test
sub
addr16
lods
push
dec
lea
push
mov
mov
imul
cs
mov
stos
xchg
(bad)
imul
arpl
sbb
addr16
aad
dec
add
ret
cmp
inc
push
pop
aas
scas
jge
jl
les
lea
(bad)
lods
dec
stos
push
push
sub
sub
(bad)
mov
sbb
push
daa
jbe
lds
cdq
cmp
je
mov
mov
cwde
scas
es
(bad)
or
in
ss
js
push
mov
loopne
mov
sub
popf
cmp
mov
movs
xor
mov
out
and
mov
xchg
(bad)
and
dec
xor
test
sub
imul
xchg
bound
mov
jno
mov
int3
cmp
xor
pop
cmps
or
mov
lods
push
mov
sub
and
xchg
jns
push
lea
pop
stc
lea
or
aas
sub
dec
xchg
mov
pusha
cmps
and
xchg
aas
sub
push
dec
and
cmp
mov
cmps
add
(bad)
movs
call
cmp
or
mov
shr
sbb
sar
mov
lods
push
stos
push
aad
inc
lea
mov
test
inc
aad
mov
mov
inc
retf
jo
xchg
mov
enter
mov
lods
test
sbb
ss
sbb
and
gs
retf
sub
sub
es
(bad)
loope
les
popa
mov
lahf
sub
adc
add
add
(bad)
in
push
int3
mov
stos
and
push
(bad)
in
ins
cwde
jg
inc
sub
jnp
push
inc
mov
mov
sub
xchg
addr16
inc
(bad)
mov
mov
imul
mov
ins
pop
loopne
cdq
int3
ins
mov
dec
mov
adc
ins
mov
in
mov
mov
scas
sub
pop
inc
out
mov
xchg
jns
xor
das
push
ins
or
pop
xchg
ins
add
pop
cdq
aas
jno
mov
outs
addr16
popf
pop
cmps
sub
sbb
(bad)
daa
mov
cmp
ds
lea
imul
es
mov
hlt
outs
push
movs
and
jnp
cmp
fcom
hlt
hlt
sbb
mov
inc
or
push
addr16
dec
sbb
and
pushf
push
or
push
clc
ret
aaa
mov
or
sbb
cmps
mov
pusha
mov
movs
sbb
push
cmp
and
clc
ret
call
cmps
shl
sub
xchg
pusha
add
push
push
jge
mov
mov
mov
imul
es
mul
sbb
pop
dec
mov
test
jb
mov
xchg
xchg
dec
xchg
or
je
movntps
inc
pop
sub
mov
push
mov
mov
fist
popa
add
sti
push
out
or
cmps
jp
jae
mov
int3
dec
sub
jnp
aas
es
daa
mov
sub
mov
test
push
push
mov
push
aas
add
pop
lahf
stos
xchg
dec
and
imul
in
scas
(bad)
pop
sub
out
jmp
sub
xor
sub
sbb
xor
nop
test
mov
and
push
fdivp
mov
sub
fnstcw
sub
or
or
test
mov
pop
(bad)
mov
idiv
push
mov
and
les
int3
mov
xchg
test
adc
(bad)
sub
add
or
stos
out
cmc
cmp
lock
lods
xchg
jecxz
sub
dec
dec
or
mov
mov
mov
jae
add
mov
aas
loope
inc
and
jmp
movsx
jecxz
enter
lahf
xor
mov
xchg
data16
sub
pop
jle
xor
or
add
dec
es
mov
movs
scas
(bad)
daa
cmps
sub
push
push
es
push
das
xor
outs
lahf
add
push
(bad)
mov
call
mov
lods
retf
stos
push
jl
test
xor
lock
xchg
xor
push
cld
and
sub
dec
push
daa
cmp
data16
mov
fwait
enter
xchg
ins
iret
pop
popf
inc
pusha
cmps
push
xchg
aaa
push
dec
scas
or
das
imul
pop
sar
inc
mov
sbb
movs
or
mov
mov
push
stos
jmp
xchg
mov
push
out
rol
test
adc
aad
stos
in
test
fstp
and
jne
or
lahf
ja
ficom
ret
mov
fwait
movs
xchg
out
ss
cmps
xchg
mov
(bad)
adc
popf
mov
pop
inc
xchg
(bad)
in
mov
ret
outs
idiv
jecxz
mov
or
bound
loopne
les
es
mov
jo
mov
sub
ret
push
and
(bad)
pusha
cmps
(bad)
mov
pop
int
push
cmps
push
push
mov
xchg
mul
mov
push
xchg
fcom
mov
test
es
in
push
lahf
test
dec
dec
repz
pop
cmps
mov
neg
mov
mov
pop
lock
cmp
(bad)
cwde
jb
jne
test
in
out
xchg
push
cmp
ss
mov
addr16
inc
rcl
and
push
adc
test
and
pop
scas
addr16
je
clc
es
sub
adc
pop
adc
dec
or
mov
pop
std
xchg
lods
fistp
(bad)
jge
push
js
jl
mov
xchg
test
push
xor
les
es
fwait
xor
inc
sub
je
int
jle
sti
sub
xchg
frstor
cli
(bad)
xchg
(bad)
sub
pusha
sub
retf
and
jne
mov
push
pop
mov
mov
jge
sbb
movs
iret
mov
ds
scas
fldlg2
jl
xchg
lock
mov
sub
mov
stos
cld
mov
stos
cmp
push
mov
push
add
sub
jno
test
lods
fmul
stos
push
not
jp
sub
lock
mov
xchg
mov
or
addr16
pop
je
cmp
cmp
sbb
jg
mov
dec
mov
or
test
push
mov
gs
call
jb
sar
outs
ret
xchg
cli
les
jae
cmp
test
push
lahf
jno
dec
sbb
aad
jo
mov
inc
xchg
loope
addr16
outs
mov
lock
rcr
outs
es
jae
push
test
(bad)
inc
xor
push
stos
adc
pop
push
mov
mov
adc
bound
es
xchg
inc
arpl
leave
pop
imul
xchg
add
mov
dec
dec
imul
mov
out
ja
xlat
in
cmp
test
sbb
mov
in
dec
data16
cmp
push
jbe
adc
and
mov
jle
pop
cli
add
(bad)
pop
hlt
pop
inc
mov
mov
xlat
cmc
aas
cvtps2pi
cs
xchg
mov
ss
jp
adc
xchg
xor
(bad)
or
iret
and
iret
cmps
and
inc
(bad)
imul
imul
jo
mov
jge
sar
ret
mov
es
cmp
adc
mov
loope
mov
ins
pop
add
out
push
sahf
shr
ds
int3
test
mov
xchg
and
(bad)
mov
and
adc
cmp
cmp
adc
inc
dec
xor
aas
mov
fs
xchg
cmp
adc
and
adc
jge
sbb
out
sub
aaa
jge
cmp
js
popf
ja
mov
jbe
loop
sbb
cld
clc
jmp
outs
mov
jg
xor
retf
or
cmp
cdq
fs
cmps
js
xchg
lock
xchg
mov
je
aas
imul
jae
in
fistp
test
(bad)
sbb
sub
sar
fwait
inc
outs
test
cmps
add
sbb
lods
dec
arpl
cmp
inc
(bad)
pop
lea
and
test
bound
mov
das
(bad)
aam
or
inc
test
sub
in
pop
pop
ins
sub
sub
xor
dec
dec
xlat
bound
add
mov
lds
xchg
stos
stos
les
mov
lods
sub
adc
scas
cmp
push
test
or
stos
xor
sti
fwait
(bad)
dec
mov
pop
and
jnp
mov
mov
scas
cdq
das
add
imul
mov
arpl
aas
into
das
jae
jle
popa
mov
xchg
or
cld
inc
or
hlt
push
xchg
push
dec
cmp
mov
jge
sbb
dec
aad
inc
and
jg
dec
in
fwait
push
imul
inc
addr16
call
push
lea
mov
push
and
jge
jmp
jge
adc
jg
xor
xchg
add
retf
jle
pop
lods
stos
mov
fcmovne
movs
(bad)
or
sbb
mov
movs
test
dec
mov
sbb
push
push
xchg
or
sub
jmp
xchg
push
test
sbb
jbe
jmp
shr
adc
mov
xor
cmps
mov
or
mov
push
push
xor
outs
xchg
sbb
jb
ror
mov
popf
mov
push
cmp
mov
add
ins
mov
aad
xchg
lds
mov
mov
jne
daa
adc
fwait
xchg
hlt
fcomp
sbb
pop
icebp
loopne
mov
mov
jmp
(bad)
cmps
sub
(bad)
mov
mov
pop
inc
fcomip
inc
cmp
inc
cmp
mov
sub
mov
pusha
mov
push
aaa
or
es
cdq
mov
mov
lahf
adc
loope
inc
lea
sub
inc
out
(bad)
mov
aaa
clc
jg
mov
test
and
ret
push
jl
jl
les
addr16
inc
sub
ins
retf
test
xchg
dec
pop
popf
retf
xchg
jg
add
push
lods
xchg
jg
in
and
adc
mov
dec
out
sub
(bad)
adc
mov
(bad)
add
mov
sahf
in
ins
ins
adc
sub
sub
or
es
mov
shl
(bad)
xchg
cmp
xchg
inc
std
repnz
sub
mov
cmp
xor
mov
dec
mov
lea
mov
aas
cmp
aam
es
mov
xchg
sbb
gs
iret
loop
shr
aad
jecxz
mov
pop
test
cmps
fstp
jno
jb
mov
cmp
mov
sub
push
pop
sti
adc
popa
sub
xchg
dec
jmp
pop
jne
(bad)
xchg
sbb
(bad)
sub
sbb
stos
movs
out
fidiv
cmp
ds
in
inc
aam
(bad)
mov
mov
retf
jle
xchg
sar
test
fidivr
xor
sbb
jecxz
lods
call
fidivr
scas
or
add
inc
stos
test
and
add
in
mov
and
inc
push
jle
enter
mov
xchg
xchg
scas
loope
mov
test
sub
cmps
jge
sbb
mov
cmp
mov
fsub
mov
es
xchg
add
ds
out
fld
(bad)
sub
stos
xchg
pop
push
add
gs
xor
mov
pop
mov
push
fld
mov
sbb
(bad)
lahf
fucomp
push
xor
pop
mov
movs
xchg
aas
mov
fidivr
jmp
mov
mov
cmp
xor
mov
mov
push
pop
dec
dec
ins
repnz
or
jns
daa
repz
push
mov
mov
retf
xor
ret
push
sbb
jo
mov
test
scas
jmp
lea
imul
and
daa
loop
mov
shr
scas
and
(bad)
push
leave
cmp
test
loop
mov
mov
fwait
addr16
(bad)
mov
ss
xchg
pop
fist
sbb
add
dec
shr
push
(bad)
movs
mov
lea
sub
(bad)
push
scas
push
(bad)
xor
call
popf
xchg
cdq
imul
cmp
mov
push
xchg
icebp
mov
and
fidiv
xor
daa
aas
xor
mov
push
sub
or
int3
jp
cmp
xchg
xor
(bad)
jb
in
(bad)
imul
mov
aaa
xchg
mov
arpl
add
cmp
aad
in
mov
xchg
dec
sbb
pop
fild
and
xchg
into
and
(bad)
sti
mov
mov
(bad)
mov
cli
lock
xchg
sbb
loop
jb
mov
(bad)
inc
int3
and
iret
outs
loope
scas
out
data16
sbb
pushf
mov
jmp
xchg
add
pop
push
xchg
in
hlt
mov
nop
das
test
out
nop
ds
(bad)
movs
sar
in
into
(bad)
mov
xchg
(bad)
and
jecxz
aaa
cmps
(bad)
lods
lods
clc
sbb
cmp
xchg
outs
hlt
fs
(bad)
scas
add
or
xchg
aas
xor
mov
cli
mov
and
fs
ret
cdq
shr
sub
je
add
cli
cmp
int
mov
leave
and
sbb
or
cmps
jle
and
(bad)
nop
test
dec
jno
and
dec
pop
or
dec
scas
mov
pop
out
add
(bad)
jp
inc
push
mov
lods
add
or
pop
add
jle
jl
jbe
test
icebp
jno
ja
jge
movs
shr
mov
imul
in
mov
mov
mov
mov
mov
sub
sbb
shr
je
mov
fwait
hlt
jnp
ja
fdivrp
mov
xor
into
jno
dec
clc
fidivr
ins
scas
call
xlat
jg
mov
inc
inc
jg
repnz
pushf
(bad)
adc
ins
xchg
ret
inc
xor
repnz
cmps
mov
leave
(bad)
mov
jg
mov
push
(bad)
jno
jp
sub
fwait
mov
xchg
or
loop
jae
movq
cmp
xchg
fstp
pop
jae
adc
scas
push
fcom
popa
fwait
mov
popf
mov
mov
lods
or
inc
sub
xor
and
fisttp
imul
push
scas
js
test
cmc
pop
jne
dec
and
inc
sbb
add
dec
sub
sbb
mov
adc
adc
xchg
mov
scas
daa
jg
add
ret
xor
ja
sub
arpl
mov
sub
and
scas
daa
adc
mov
popf
test
jl
fisubr
dec
es
jae
mov
int
js
stos
je
clc
stos
fild
mov
dec
mov
mov
sub
and
(bad)
mov
sahf
or
mov
lods
ins
scas
scas
mov
lods
lods
sub
addr16
adc
aas
mov
fst
sub
ret
sbb
cmp
aam
in
test
test
mov
mov
and
into
dec
data16
cmc
mov
in
mov
cmps
xor
dec
add
dec
mov
fidivr
sti
or
push
rol
push
mov
sub
cdq
xchg
fwait
mov
dec
xchg
or
outs
sub
pop
(bad)
push
ret
cmps
or
cmps
jno
jl
stos
outs
sbb
ror
out
outs
out
push
xor
jmp
(bad)
outs
pusha
fsubp
dec
ja
add
jle
mov
xchg
mov
in
sub
inc
mov
cmp
(bad)
cmp
das
sbb
je
in
and
test
gs
or
mov
pop
fwait
xchg
rcl
arpl
test
ret
out
clc
mov
mov
leave
push
das
cmp
mov
(bad)
scas
dec
and
jmp
mov
inc
xchg
push
mov
(bad)
ss
or
push
sbb
je
retf
lds
cmp
xor
ficomp
add
shl
xchg
sub
xchg
mov
(bad)
push
loop
dec
ret
inc
mov
inc
stos
addr16
(bad)
jp
mov
daa
mov
or
pushf
js
aas
cmp
cli
stc
fs
mov
mov
inc
add
stc
lds
pop
jmp
int3
sbb
lods
xlat
sar
and
stos
in
(bad)
mov
(bad)
jo
stos
in
fistp
push
sub
mov
xor
stos
fldcw
pop
jg
pop
(bad)
push
sub
imul
repnz
scas
ret
inc
(bad)
dec
xor
sub
dec
(bad)
xor
xor
shl
push
fmul
data16
dec
mov
xchg
jl
mov
inc
jne
popf
scas
cmp
clc
(bad)
dec
aam
mov
popa
add
jno
out
stos
(bad)
retf
push
mov
pop
or
adc
mov
dec
(bad)
adc
or
loop
pop
out
mov
movsx
adc
imul
loop
stos
sub
sbb
cdq
xchg
pop
mov
sub
mov
test
aas
mov
sbb
maxss
and
cmps
imul
jg
dec
aad
and
das
add
cmp
(bad)
arpl
(bad)
in
push
ja
fdivr
adc
ja
sar
cdq
dec
pop
repnz
lock
jo
cmc
addr16
mov
mov
je
int3
fadd
int3
mov
es
inc
test
pusha
jno
sbb
das
jmp
jmp
jg
icebp
sbb
mov
scas
sbb
adc
dec
adc
jle
xlat
aam
mov
dec
jmp
(bad)
pop
sbb
ins
scas
fdiv
mov
aad
mov
aad
pop
jne
mov
sqrtps
xor
clc
cs
push
and
out
sbb
mov
mov
ins
ret
and
jg
and
or
cli
(bad)
jge
cdq
mov
cli
push
imul
popa
fld
hlt
jmp
mov
loop
pusha
fs
pop
int
jb
mov
adc
popf
jae
outs
jno
mov
mov
push
add
mov
mov
lods
jns
pop
shl
ret
dec
(bad)
fadd
mov
lods
test
mov
dec
mov
out
loope
dec
movs
jmp
and
and
imul
jp
cmp
cmp
ret
pop
mov
dec
lock
lea
cmp
in
stos
scas
dec
jecxz
ret
pusha
push
das
(bad)
stc
outs
out
adc
loop
xchg
sub
jp
hlt
add
jmp
(bad)
ins
jo
mov
adc
jle
mov
imul
movs
jecxz
pop
push
scas
jmp
jp
jbe
or
pop
push
cmp
dec
and
dec
adc
jo
pop
pop
mov
fsubr
(bad)
pop
jne
pop
dec
clc
les
cmp
jle
fnsave
xor
movs
dec
dec
pop
mov
xor
jge
je
fs
ins
inc
popf
clc
lds
jns
pop
sub
pop
xor
and
push
inc
sub
int
sub
cli
jl
(bad)
xchg
mov
pop
xlat
imul
mov
je
sub
jle
pop
scas
pusha
jnp
(bad)
mov
pop
cdq
out
repz
(bad)
mov
mov
mov
jno
addr16
push
je
(bad)
(bad)
sub
daa
xchg
jp
dec
jo
mov
lds
mov
jae
test
pop
xchg
mov
popa
stos
stos
les
fisttp
or
push
xchg
mov
jle
fcom
adc
aas
outs
daa
stos
aas
mov
not
cmps
imul
mov
arpl
stos
cmps
cld
sub
sahf
scas
sahf
sbb
xor
in
mov
xor
pop
add
and
sbb
adc
sbb
pusha
ins
jg
idiv
cmc
pop
es
jns
retf
mov
sar
jmp
addr16
ds
sbb
in
push
inc
test
aam
and
jno
inc
mov
(bad)
sbb
xchg
stos
out
mov
out
cmp
jge
ins
mov
xchg
mov
push
fcmovnb
mov
xchg
lea
xchg
dec
(bad)
in
jmp
sub
xchg
pop
dec
sti
pop
sub
mov
pop
sub
enter
sub
fwait
ja
lods
xor
push
jb
xchg
pop
or
jg
jmp
sbb
daa
push
sub
dec
sahf
jp
xchg
adc
xchg
imul
xchg
sub
adc
push
test
mov
cmp
or
stc
(bad)
aas
mov
inc
mov
daa
(bad)
sbb
mov
ins
sbb
mov
push
data16
ja
pusha
fcom
cmps
(bad)
sub
mov
imul
pop
je
aam
push
or
fbld
adc
jnp
test
mov
aas
aaa
out
sbb
jae
cs
pop
aam
push
push
(bad)
cs
mov
gs
xchg
xor
fnstcw
jmp
dec
clc
cli
imul
inc
addr16
and
dec
ins
lods
(bad)
push
ret
test
and
mov
pop
(bad)
fidivr
mov
stos
push
push
xor
xchg
cmp
das
or
push
push
pop
out
data16
(bad)
mov
imul
jnp
popa
push
loopne
mov
std
xchg
jne
pop
lods
pushf
sub
mov
stos
inc
dec
adc
xchg
mov
push
cmps
xchg
(bad)
dec
mov
shl
dec
cld
mov
cdq
movs
int3
aad
cmps
std
repz
jo
aad
mov
cmps
lahf
mov
(bad)
pusha
add
xor
jle
into
xor
adc
xor
jnp
pop
lahf
iret
lds
fst
xchg
xor
test
test
fsubr
jl
arpl
mov
movs
mov
test
inc
jnp
dec
and
pop
cli
popa
push
call
ret
stos
dec
test
(bad)
clc
xor
pop
push
cld
outs
es
push
retf
ds
or
cmp
hlt
cmp
jno
imul
xlat
hlt
popa
aad
es
jge
xchg
adc
dec
or
sbb
and
mov
cmp
pop
cmps
cs
bnd
jg
aad
imul
retf
cmps
push
das
int
adc
fmul
js
cmc
xchg
jl
ins
lea
es
sahf
mov
jle
loope
inc
imul
imul
iret
ficomp
adc
inc
jb
or
popa
jns
cmp
sbb
push
dec
cmps
scas
addr16
sub
(bad)
loop
sub
addr16
or
pop
mov
test
push
(bad)
into
retf
mov
cdq
mov
popa
xor
popf
shl
call
push
dec
movs
pop
jb
movs
jmp
retf
jne
adc
daa
mov
dec
dec
pushf
daa
sub
push
mov
divps
and
adc
mov
ror
out
mov
push
or
mov
xor
sub
pop
int3
lods
jp
xchg
cmp
pop
imul
cmp
mov
fdiv
fsub
aas
inc
in
jb
cld
sub
fstp
mov
stos
dec
mov
pushf
xchg
int
movs
adc
addr16
mov
outs
daa
aad
das
mov
pop
add
adc
aas
scas
xlat
repz
fdivrp
jl
mov
das
loope
(bad)
sti
test
dec
mov
push
xchg
mov
pop
gs
test
xor
jnp
jmp
ss
pusha
pop
aaa
cmps
pop
popf
sub
xchg
xchg
and
jo
and
test
lods
pop
xchg
shl
dec
daa
jp
mov
test
or
inc
jb
or
adc
outs
cmp
push
adc
outs
sub
cli
push
loopne
out
rol
imul
daa
pop
dec
adc
and
imul
dec
jbe
mov
mov
cmp
lahf
mul
dec
movs
mov
or
pop
mov
mov
ror
push
out
push
xor
sbb
jbe
(bad)
(bad)
jp
aad
mov
or
mov
pop
add
iret
stos
dec
push
into
cs
stos
daa
jno
jnp
retf
mov
jl
inc
sbb
fucomip
retf
fsub
pop
dec
and
pusha
dec
mov
jae
scas
cmps
fmul
or
(bad)
mov
ins
imul
pop
add
push
movs
outs
sbb
std
jp
into
pop
imul
inc
jge
lahf
adc
in
cs
cmp
pop
cmps
bound
movs
and
popf
cmc
pop
ins
dec
pop
popf
icebp
cmps
out
pop
add
dec
add
(bad)
iret
mov
test
jg
cmp
sub
add
xor
fucomp
icebp
arpl
pop
imul
mov
sub
xchg
jge
mov
and
(bad)
mov
xor
mov
mov
jg
pop
inc
pop
cmp
inc
nop/reserved
bound
jl
adc
xor
add
jmp
pop
inc
mov
cmp
lea
lock
mov
fcomip
or
mov
inc
stc
repnz
mov
movs
ret
push
iret
daa
mov
jle
in
movs
bound
mov
fiadd
adc
cmp
fisub
mov
fisub
iret
stos
in
cmp
aas
xchg
cli
sbb
outs
fnsave
std
mov
push
ss
sub
jnp
sbb
ds
lods
sbb
inc
movs
jge
jge
push
stos
dec
iret
stc
leave
lods
xchg
push
cmp
or
adc
push
or
lock
xchg
and
xor
cmps
pop
mov
fbld
test
test
pop
mov
adc
mov
xor
mov
std
cmps
and
in
inc
mov
mov
sub
jb
or
jge
push
push
or
inc
jno
jl
mov
pop
jge
pop
and
repnz
xchg
scas
jg
mov
cmps
jg
(bad)
xor
pop
pop
popa
jge
xchg
or
in
popa
outs
jp
ss
mov
cmp
and
lods
stos
imul
dec
cmc
arpl
mov
scas
jle
mov
stos
test
cld
jl
(bad)
xor
push
outs
popf
mov
xor
fwait
rcr
pop
mov
popa
dec
jle
jns
leave
jge
jns
popf
scas
rcl
mov
fist
mov
sahf
or
xchg
cmps
or
sti
push
(bad)
test
jl
pop
scas
pop
outs
mov
gs
into
jbe
mov
(bad)
jne
mov
adc
loop
xchg
dec
scas
pop
mov
jp
sbb
pop
or
jns
clc
or
ret
mov
sahf
nop
lods
imul
pushf
std
repnz
(bad)
stc
dec
cmps
icebp
shl
nop
mov
aad
pusha
jge
bound
pusha
inc
test
sti
mov
jb
(bad)
movs
mov
sub
outs
sti
daa
into
pop
sub
inc
fidiv
clc
gs
int
xchg
movs
jg
aad
cmps
fninit
rol
sbb
push
or
cmp
(bad)
pop
sub
ror
inc
(bad)
mov
and
pop
sbb
dec
mov
mov
and
addr16
push
std
inc
inc
mov
ss
push
shl
aas
scas
sub
push
sub
push
arpl
mov
mov
add
inc
in
mov
scas
mov
pop
cwde
sbb
mov
mov
cmp
outs
mov
pop
jmp
xor
call
sub
push
adc
adc
test
mov
ret
daa
sbb
cmps
aam
dec
lods
jne
and
iret
gs
xor
or
(bad)
popf
in
add
push
retf
outs
xchg
stos
and
xchg
adc
mov
(bad)
lods
mov
and
push
mov
jmp
movs
mov
mov
adc
retf
sbb
mov
out
or
jns
test
mov
scas
add
in
pop
cmp
aad
mov
fiadd
enter
mov
jmp
dec
addr16
sub
cld
pop
add
jmp
jns
add
scas
pop
mov
jge
aas
dec
(bad)
jmp
mov
mov
pop
lahf
(bad)
mov
add
cdq
daa
call
ror
pop
mov
scas
push
mov
xchg
call
mov
xchg
sub
cmp
inc
cld
ror
mov
cli
mov
test
shl
imul
push
xlat
sub
jg
cli
ret
fidiv
jl
lods
pop
jle
lea
xchg
or
data16
mov
or
xchg
jo
and
sub
adc
mov
xchg
xchg
fist
mov
cs
xchg
sub
inc
mov
cmp
iret
imul
lods
dec
retf
or
mov
pop
sahf
jge
mov
(bad)
ins
mov
jmp
movs
test
inc
inc
jnp
movs
fbstp
call
lock
mov
add
in
in
jmp
sbb
sub
je
add
and
mov
cmps
mov
std
ins
retf
call
and
out
gs
mov
in
mov
and
dec
cmp
sti
addr16
pusha
mov
les
std
xor
xchg
jb
inc
inc
cli
sahf
stos
cmps
jge
mov
or
fwait
dec
xchg
sub
stos
mov
arpl
(bad)
jnp
inc
test
mov
aam
cmps
jg
dec
sub
mov
push
jns
xor
fadd
test
adc
fild
ja
aas
cwde
fsubr
push
jle
mov
or
xchg
mov
shl
mov
adc
sbb
adc
or
in
loope
add
loopne
and
jecxz
fisub
test
pushf
and
jnp
out
jne
mov
mov
test
call
mov
cdq
cli
inc
cmp
add
lea
cmps
scas
(bad)
sbb
cmp
xchg
ret
jge
add
test
cmp
mov
cmp
mov
fwait
sbb
adc
enter
add
lods
(bad)
push
es
mov
shl
push
mov
pop
lods
movs
arpl
or
jnp
adc
pop
xor
lahf
(bad)
mov
in
xchg
adc
stos
jae
ret
mov
jnp
popa
ins
jg
pop
mov
xchg
inc
test
mov
ds
cmp
cmp
push
dec
icebp
mov
rcl
inc
sbb
iret
movs
mov
push
pushf
outs
mov
fistp
jbe
adc
add
inc
lahf
enter
sbb
mov
loop
jp
(bad)
mov
dec
out
cmp
dec
and
stos
(bad)
int3
cld
imul
push
jb
dec
or
arpl
mov
push
(bad)
xchg
daa
push
cmp
mov
rcr
orps
arpl
jno
jle
mov
scas
or
xor
gs
sub
int3
lods
jle
clc
pop
jp
scas
in
(bad)
mov
fwait
out
lods
in
sub
outs
stos
sub
mov
cwde
inc
pop
sbb
inc
imul
clc
fs
cs
sub
ins
es
ficom
sahf
or
inc
sbb
and
xor
push
stos
sub
cwde
xchg
sbb
push
or
xor
inc
ficomp
cmps
cmps
pop
ins
clc
imul
sub
inc
int3
call
dec
(bad)
mov
ja
jns
inc
jnp
inc
jo
and
test
jbe
xchg
fistp
cmp
mov
pop
mov
cmp
addr16
jl
test
ins
xor
add
sub
and
xor
jg
imul
sub
jmp
push
add
lds
xlat
div
mov
aam
scas
sti
add
outs
pop
test
xor
adc
ins
pop
dec
mov
push
in
push
push
pusha
mov
outs
ins
ins
sub
jg
cmps
fsubrp
jo
cld
and
fisubr
xchg
xchg
push
mov
or
les
scas
lahf
nop
imul
jne
enter
pop
mov
cld
add
pop
xchg
mov
add
mov
jmp
jnp
pop
clc
int3
das
idiv
test
(bad)
test
pop
test
ret
(bad)
push
lock
jg
test
sbb
jb
mov
lds
sub
jnp
mov
xchg
das
or
cmp
mov
adc
fcom
(bad)
imul
ret
push
ja
adc
(bad)
dec
jle
or
pop
test
stos
add
scas
pop
arpl
les
sbb
loopne
sbb
and
arpl
out
ins
ret
mov
push
and
rcl
push
pop
lods
xchg
retf
mov
ins
sub
pop
jl
or
imul
sbb
ss
(bad)
push
test
jge
int
mov
paddb
cmp
cmp
imul
mov
test
pop
mov
mov
scas
mov
add
lahf
jb
dec
or
jg
arpl
dec
jb
cmp
adc
cmps
mov
dec
dec
sub
inc
das
into
in
mov
fsub
xchg
push
jmp
mov
inc
push
or
or
cli
movs
call
mov
dec
or
in
daa
(bad)
test
mov
test
arpl
fwait
or
movs
in
lds
mov
jecxz
sbb
mov
inc
adc
mov
fiadd
cmp
adc
daa
movs
adc
rol
mov
mov
dec
push
fwait
es
mov
mov
dec
out
jle
movs
daa
mov
ins
lahf
retf
fidiv
xchg
mov
arpl
xor
shl
sbb
test
jnp
mov
les
jmp
xor
push
mov
fidivr
sub
ds
jnp
js
pop
xor
ja
test
adc
daa
jecxz
(bad)
outs
and
aas
pop
test
js
cli
and
daa
mov
lahf
mov
mov
mov
jb
scas
sbb
mov
(bad)
sub
push
mov
cmc
xchg
mov
sub
(bad)
imul
test
cmps
pop
mov
add
xor
inc
inc
mov
inc
movs
inc
sahf
fadd
jns
pop
xchg
mov
jno
in
js
mov
lahf
ror
es
dec
add
(bad)
dec
jmp
fs
push
sahf
in
xor
and
popf
inc
mov
mov
add
sub
(bad)
enter
and
fcom
movs
mov
pop
addr16
imul
jle
imul
movs
sti
ret
lods
int3
xchg
push
cmps
add
and
jmp
sbb
scas
mov
mov
mov
dec
adc
adc
ins
mov
test
inc
frstor
gs
push
cmp
mov
dec
jnp
push
fimul
addr16
mov
cs
aaa
jns
push
xor
mov
outs
mov
xor
stos
dec
test
sbb
or
jnp
lods
lods
ja
dec
cmps
clc
mov
addr16
imul
mov
adc
and
sar
lock
es
and
xor
dec
sar
dec
mov
ins
mov
mov
movs
jge
(bad)
icebp
sub
std
sti
ror
dec
sub
sub
mov
xchg
sbb
pusha
sbb
or
ss
xchg
jb
rcr
jbe
outs
push
scas
pop
sub
lahf
push
adc
test
sub
xchg
mov
mov
cmp
mov
cld
mov
jmp
in
mov
add
cmp
je
ret
sbb
push
xchg
mov
sti
mov
xor
cmp
jle
xor
outs
jns
cmp
dec
sti
rcl
ret
mov
sub
inc
inc
ins
ins
ins
fwait
pusha
aad
scas
out
dec
stc
cmps
mov
pop
or
imul
retf
retf
lods
scas
test
or
adc
dec
shl
or
add
pop
sbb
mov
push
into
std
test
ja
sar
leave
push
pop
cmps
jns
jno
clc
sti
mov
jbe
movs
out
jns
inc
sbb
in
pop
mov
in
cmp
and
shr
fimul
mov
outs
daa
xor
call
adc
adc
loop
pushw
and
shr
retf
ds
lea
dec
or
or
xor
jg
ja
pop
fucomp
mov
(bad)
sbb
mov
xchg
xor
dec
push
arpl
pop
sahf
inc
sbb
cmps
das
jns
push
sbb
pop
clc
cmp
dec
jnp
leave
nop
retf
push
out
pop
mov
push
jl
sahf
jp
in
outs
inc
mov
jge
shr
cmp
iret
and
xchg
xor
cmp
fs
scas
fstp
test
pop
cmps
clc
fs
dec
push
rcr
jnp
xchg
ins
jge
jg
movs
mov
push
pop
sub
in
jg
fs
(bad)
icebp
sub
out
jnp
push
mov
push
aas
(bad)
(bad)
fisttp
push
sbb
and
dec
jnp
leave
pushf
data16
pop
cld
push
movs
scas
pop
xchg
jae
mov
sub
mov
dec
adc
sub
xchg
(bad)
adc
push
mov
mov
push
mov
push
sbb
jnp
test
lea
pop
(bad)
gs
adc
jl
and
sbb
idiv
add
jnp
bound
inc
mov
jb
lea
add
xchg
sbb
lods
add
cmp
loop
jne
sbb
data16
out
fdiv
cmp
stos
lahf
lock
fwait
cmp
(bad)
ins
push
jne
mov
cmps
mov
cmp
aam
aam
shl
ins
sub
jae
stc
adc
jmp
call
fisub
and
and
out
mov
push
xchg
aas
ins
and
or
(bad)
jp
inc
scas
jne
(bad)
xor
push
push
push
mov
pop
stos
gs
sbb
cmp
pop
and
or
xchg
push
pop
sub
mov
mov
xchg
xor
ror
pop
push
push
fs
inc
mov
mov
dec
dec
jl
xchg
out
retf
jne
int
cmp
sar
cld
and
cmp
xchg
or
js
cs
sbb
les
ins
cmp
cmps
std
stos
daa
scas
ds
pop
or
mov
pop
mov
movd
cmps
jle
pop
in
dec
out
scas
mov
jb
jns
daa
mov
aad
and
push
les
xchg
jecxz
mov
sub
fisubr
scas
xor
in
dec
fsubr
fsub
inc
fld
mov
jge
pop
mov
loopne
es
sbb
pop
test
and
adc
push
popa
or
pop
(bad)
stos
add
gs
das
daa
inc
ja
pop
cmp
xor
les
nop
jbe
xor
out
data16
into
pop
add
pop
out
popa
clts
dec
cmp
fwait
movs
cmp
inc
sbb
stos
or
sub
hlt
mov
cmp
sbb
dec
dec
stos
(bad)
movs
add
outs
mov
pop
aad
add
push
stc
jg
sahf
imul
xlat
ss
test
dec
mov
mov
mov
lods
scas
pop
retf
(bad)
(bad)
fstp
out
js
mov
imul
inc
cwde
call
mov
pop
fimul
mov
mov
pusha
and
stc
xchg
mov
mov
cmps
adc
mov
mov
mov
sub
mov
daa
pusha
and
xor
call
xchg
ins
sub
adc
lods
movs
ss
sbb
and
push
add
std
lea
cdq
jg
adc
dec
mov
mov
sub
retf
aas
scas
pop
adc
pop
aas
sub
xchg
or
push
cdq
data16
mov
adc
xchg
cmp
cmc
stos
xchg
sar
retf
fst
shr
inc
mov
xchg
push
data16
jno
loopne
in
jne
test
mov
ret
cdq
inc
inc
mov
dec
sub
mov
in
addr16
pop
fmul
xchg
out
retf
push
das
sti
es
dec
sub
stos
rcr
and
out
lods
(bad)
pop
inc
fdiv
das
dec
in
fnstsw
test
(bad)
ins
in
inc
adc
mov
mov
xor
mov
les
jnp
js
ror
mov
cmp
in
dec
push
pop
push
push
mov
int
sub
mov
aas
test
ret
jge
mov
adc
test
cmp
xchg
jg
outs
aas
pop
mov
daa
pop
mov
push
or
sbb
add
and
jmp
push
xlat
xor
(bad)
mov
movs
mov
xor
test
mov
adc
pop
jp
sub
daa
mov
pop
out
jge
sub
ja
(bad)
hlt
mov
inc
int3
addr16
pushf
jl
sar
frstor
outs
scas
cmps
inc
jp
inc
add
lods
bound
pushf
repz
sub
push
xchg
repz
and
xchg
test
push
push
mov
mov
aaa
stos
xchg
mov
call
push
aaa
or
xchg
icebp
push
jno
fisub
neg
cmps
out
aad
mov
ret
test
movs
jp
jge
xor
ins
xor
pop
push
mov
xor
xchg
sub
cdq
mov
xor
std
mov
idiv
repz
xor
jo
dec
not
xchg
ins
mov
sar
cmp
pusha
mov
and
or
pop
xor
std
pop
lods
idiv
mov
ins
cli
aam
adc
dec
adc
pop
cmp
(bad)
(bad)
bound
and
xchg
cmp
xchg
iret
xchg
pop
cdq
(bad)
out
outs
aad
xor
add
fwait
cwde
mov
and
and
shl
or
mov
imul
ret
stos
jecxz
test
call
dec
repnz
lds
mov
and
inc
scas
aaa
addr16
push
mov
mov
jg
lds
mov
xor
(bad)
(bad)
aas
pop
mov
and
ret
push
or
in
(bad)
(bad)
cld
arpl
cmps
inc
ins
xchg
(bad)
shr
adc
and
xchg
je
es
cmps
je
cld
cmps
xchg
ins
addr16
ret
cmps
cmp
push
mov
cmp
test
imul
sbb
push
std
arpl
stos
sub
xor
xor
jnp
cld
sub
nop
dec
or
popa
cs
cdq
xchg
pop
jg
add
in
pop
pop
mov
imul
adc
and
inc
arpl
out
mov
inc
mov
or
leave
mov
cld
(bad)
inc
inc
xor
mov
dec
cmp
out
add
(bad)
outs
mov
in
jp
jo
adc
mov
mov
cdq
push
jnp
cli
imul
cmp
js
rol
cmps
and
pop
outs
pop
test
pop
scas
cmp
mov
(bad)
int3
(bad)
mov
ficomp
jge
mov
(bad)
stos
imul
sbb
add
(bad)
loope
popa
or
inc
mov
(bad)
jmp
lods
ss
popa
jnp
fucomp
mov
push
call
jp
jle
ins
jno
xor
jmp
movs
cs
mov
mov
cmps
ret
mov
lea
stc
cmp
popa
popa
out
retf
inc
aaa
mov
pop
(bad)
jle
mov
icebp
das
leave
imul
mov
popa
and
sbb
cmp
repnz
push
repnz
lahf
movs
outs
dec
inc
push
inc
add
outs
cmp
push
push
div
lods
imul
jle
in
jbe
mov
jge
jp
jae
adc
in
or
xchg
inc
cli
(bad)
aam
in
arpl
js
outs
jne
ret
mov
xor
retf
imul
push
mov
jge
fdiv
aas
out
mov
dec
mov
pop
movs
addr16
popa
jle
mov
push
mov
scas
cmp
mov
push
inc
fild
pop
sub
outs
ret
cmps
inc
stos
push
gs
shr
(bad)
repz
sbb
pop
mov
nop
jle
sbb
imul
aaa
pop
lahf
and
sub
add
retf
jg
sti
iret
cs
mov
xor
xor
es
repnz
jmp
inc
sub
pop
xor
cmp
fs
sti
mov
jns
mov
in
jmp
shr
ins
ins
mov
pop
jle
mov
and
test
cmp
movs
and
aas
fidivr
jle
add
push
cs
fst
or
mov
iret
daa
or
cmps
(bad)
cmps
mov
mov
retf
aam
daa
push
shr
or
loopne
xor
jp
mov
cmp
pop
add
mov
mov
daa
scas
add
rcr
mov
mov
push
jo
movs
and
mov
in
dec
test
sub
mov
stc
popf
rol
push
jle
xchg
xor
add
and
lods
cli
sub
movs
add
inc
or
jg
and
out
lds
std
push
(bad)
aad
retf
(bad)
cld
adc
xchg
std
xor
jg
sub
in
call
retf
dec
pop
mov
ja
addr16
mov
add
dec
mov
add
jl
scas
(bad)
fwait
dec
xchg
mov
sub
push
xor
sti
mov
adc
daa
jnp
ds
imul
jae
js
outs
(bad)
imul
add
add
mov
inc
test
adc
inc
pop
pushf
pop
inc
lods
movs
loopne
rol
rol
test
mov
int
push
cli
add
test
and
cmp
retf
aas
stos
lods
mov
xchg
or
int
or
ins
out
fistp
test
cmps
add
jmp
sbb
test
loop
sbb
xchg
pop
das
mov
cmp
inc
cmc
stos
mov
data16
nop
xor
sahf
pop
aas
or
ins
les
cld
jb
or
fs
icebp
stos
stc
jb
mov
call
mov
daa
popf
sar
lea
int3
mov
mov
lods
sub
or
fsubrp
bsr
shl
(bad)
push
retf
loop
mov
or
mov
mov
jmp
cli
or
adc
cmp
mov
dec
cmp
push
jp
lods
pop
(bad)
fnstsw
mov
out
mov
add
push
add
fwait
sti
jg
out
sub
cwde
cs
arpl
arpl
xchg
cwde
jl
mov
sub
xchg
call
(bad)
mov
outs
lahf
mov
ret
and
cmp
inc
test
imul
lods
arpl
xchg
mov
movs
clc
fwait
test
jge
sar
das
mov
add
frstor
inc
mov
jp
mov
(bad)
int3
retf
cmp
or
ins
scas
mov
cmp
(bad)
ror
xchg
fwait
xchg
rcr
rcr
mov
outs
ror
das
in
outs
lods
stos
cdq
sub
leave
aas
ret
js
pushf
lods
xor
or
sbb
scas
xor
jb
xor
aam
cdq
shr
xor
mov
out
lea
retf
jo
xor
out
mov
push
repz
add
inc
and
add
ror
pop
test
sbb
ins
adc
mov
das
test
and
jmp
scas
inc
dec
mov
dec
mov
pop
(bad)
cmps
pop
mov
out
fisubr
ret
jo
(bad)
jnp
(bad)
into
add
jb
jg
add
push
pop
pusha
test
and
mov
cmp
push
stos
jmp
push
xchg
jl
adc
sbb
pop
mov
test
dec
fwait
cmp
jle
cmps
out
(bad)
mov
mov
jp
mov
inc
in
mov
xchg
clc
int3
data16
in
sahf
adc
clc
mov
sbb
cld
mov
or
shl
retf
in
aas
aad
mov
xchg
icebp
jmp
mov
xor
icebp
dec
lahf
xchg
test
call
arpl
inc
daa
(bad)
in
pop
pop
fwait
fs
adc
xchg
lods
pop
push
cmp
mov
mov
cmp
movs
mov
push
adc
and
mov
ds
inc
fs
retf
(bad)
std
cmps
movs
imul
ja
scas
sahf
outs
jmp
xchg
mov
xor
ins
stos
xchg
outs
xlat
es
jmp
lahf
sbb
scas
and
mov
(bad)
mov
and
cmps
std
stos
daa
movs
ds
jne
aas
pop
or
mov
push
mov
xor
retf
imul
mov
mov
retf
xchg
les
jl
clc
scas
push
sbb
mov
or
repz
ror
gs
push
sub
sbb
cld
shl
xchg
jmp
push
mov
std
jmp
popa
push
sahf
icebp
dec
cmp
hlt
sbb
adc
pop
jns
cmps
ficomp
push
es
and
test
aad
push
pop
pop
leave
pushf
push
jg
lods
jnp
retf
and
ins
stos
or
mov
xchg
ins
mov
hlt
add
inc
push
xchg
popa
jne
xor
adc
dec
mov
imul
mov
add
fstp
pop
loope
and
push
nop
loop
and
fld
das
and
outs
mov
inc
iret
sbb
aad
(bad)
and
mov
mov
out
pop
das
mov
ds
xchg
push
mov
xor
xchg
mov
outs
(bad)
xor
sahf
stc
nop
fidivr
xor
pop
dec
ja
jp
mov
lahf
jnp
jmp
mov
mov
imul
das
and
adc
push
mov
cmp
dec
jge
and
(bad)
push
sbb
(bad)
retf
ins
fwait
sub
retf
daa
std
xchg
ds
retf
jnp
mov
or
jg
retf
in
mov
mov
sub
out
jne
(bad)
into
or
pop
mov
sbb
sub
add
jns
or
or
test
(bad)
int3
call
lahf
jno
fdivrp
fld
sub
test
out
jmp
repnz
fbstp
dec
lea
scas
aas
repz
mov
fwait
repz
(bad)
xchg
fist
push
fs
sbb
and
sbb
ds
sub
ja
movs
in
out
push
jns
ret
mov
xchg
dec
(bad)
push
sub
lahf
push
pushf
repz
dec
mov
fidivr
in
ins
xchg
out
lods
ret
stos
mov
jl
into
and
mov
xchg
mov
in
mov
fild
test
aas
jmp
sahf
pop
mov
cmps
(bad)
enter
push
jge
jl
in
mov
mov
jne
mov
pop
pushf
lea
mov
jle
jne
pop
jp
mov
jbe
mov
js
js
in
sbb
jae
ins
lahf
mov
pop
push
dec
inc
sahf
jge
cmp
push
clc
dec
in
jle
fsubr
sahf
add
mov
mov
jle
xchg
neg
jnp
add
xlat
scas
out
mov
pushf
ror
mov
retf
fst
sahf
and
lds
ret
push
inc
les
test
cmp
pop
pop
mov
jbe
cmps
jo
in
add
inc
fisttp
movs
ret
cwde
xchg
ds
test
je
ins
jae
clc
mov
jb
sub
je
push
push
and
push
cmp
push
into
imul
aas
jmp
xchg
imul
rcr
shl
mov
mov
imul
out
ror
cmp
ins
mov
and
add
jg
or
int3
push
mov
dec
push
mov
in
mov
cmps
test
pop
sbb
loop
mov
pop
pop
adc
mov
loope
mov
cmps
mov
mov
jno
pop
dec
sub
imul
xor
lods
pushf
in
stos
dec
add
daa
push
arpl
lea
dec
out
jae
mov
outs
mov
inc
movs
scas
inc
or
pop
cmps
push
sub
lds
stos
and
sahf
aaa
mov
sub
test
mov
pop
mov
aas
pop
daa
sbb
popf
adc
jmp
and
(bad)
mov
lahf
imul
jg
stos
out
sub
mov
jnp
xchg
ret
fimul
stos
fisub
shl
rol
loopne
je
push
mov
mov
and
push
cmp
movs
push
push
cmp
mov
aad
adc
mov
and
mov
jl
pop
clc
aas
(bad)
cdq
xchg
mov
cli
shr
arpl
pusha
mov
sub
mov
pop
and
cwde
xor
and
adc
scas
fwait
(bad)
mov
mov
fidiv
dec
jle
and
pushf
cmp
push
cmp
daa
imul
xchg
stos
or
aad
in
(bad)
dec
sub
imul
xchg
stc
sbb
and
add
inc
mov
xchg
dec
ficom
pop
mov
cld
out
dec
shl
inc
jns
movs
outs
pop
pop
sub
in
jb
test
cdq
jmp
push
sub
push
jg
adc
adc
sti
fwait
add
test
mov
push
(bad)
dec
fwait
in
inc
out
cli
repz
xchg
scas
(bad)
out
and
out
lods
pop
lods
push
mov
inc
call
jo
lods
mov
mov
imul
jbe
daa
push
(bad)
jge
ret
mov
dec
sahf
popa
xor
mov
pop
cmps
test
fs
mov
in
rol
sbb
gs
fild
push
repnz
jne
and
fistp
dec
and
mul
xchg
daa
test
sub
mov
sub
inc
fstp
pushf
int3
mov
sub
aam
data16
ins
push
xor
sbb
and
call
jg
pusha
scas
cmp
dec
cmps
mov
or
dec
fstp
js
shl
stos
xor
lock
or
mov
(bad)
mov
xchg
ret
mov
std
mov
jp
mov
or
scas
mov
pop
pop
in
daa
out
xchg
repz
pusha
jo
xor
test
ja
ins
cli
push
adc
imul
test
cmp
xchg
gs
movs
fs
hlt
push
pop
inc
outs
and
sub
mov
cmps
pop
js
sahf
cmp
sbb
retf
cmp
push
sahf
jmp
test
cmp
sub
popf
jns
mov
imul
(bad)
cmp
ins
cmp
mov
inc
mov
(bad)
(bad)
push
xchg
and
daa
jl
in
mov
(bad)
cmc
lds
fwait
inc
and
cmp
fisubr
in
push
cmc
sbb
jmp
xor
sub
adc
arpl
retf
aas
add
sbb
mov
imul
add
pop
jae
nop
and
(bad)
cmp
dec
xchg
jg
xor
xchg
lea
ja
sbb
xchg
dec
sub
inc
(bad)
push
sub
sbb
jmp
arpl
mov
pop
push
xchg
inc
adc
fisubr
(bad)
pop
sub
cmp
cmps
push
sbb
cld
or
jmp
xchg
das
call
out
sub
rol
push
pop
aas
pusha
les
shr
sub
cmc
sub
les
xor
aam
or
stos
fnstenv
and
xchg
pop
bound
call
jg
in
sub
leavew
idiv
xor
dec
cs
fidivr
mov
(bad)
mov
dec
aas
stos
idiv
ds
push
and
call
dec
mov
dec
mov
lock
pop
arpl
das
pop
mov
(bad)
mov
sbb
cdq
call
nop
mov
mov
pop
mov
pop
imul
or
xor
push
cdq
jb
dec
shl
stos
inc
mov
outs
sahf
mov
setns
movs
cmp
mov
mov
outs
stos
xchg
ret
push
push
lea
cmc
popf
enter
arpl
sub
and
lods
or
inc
(bad)
sub
test
jno
test
stos
adc
scas
stos
lea
adc
das
mov
fsub
sbb
pop
fwait
pop
dec
rep
ja
jl
call
das
in
sub
out
cmps
sahf
sub
inc
mov
dec
adc
(bad)
(bad)
push
cs
mov
jl
xchg
cld
in
mov
push
push
mov
or
push
lock
or
mov
cs
pop
mov
add
jle
xchg
imul
js
jmp
je
out
push
fdiv
jmp
mov
mov
lods
faddp
sbb
rcr
sub
or
out
push
sub
mov
mov
cmp
cmc
jg
dec
cmp
sub
call
push
pusha
inc
adc
add
arpl
cli
movs
cmps
jp
jae
(bad)
ds
outs
pop
dec
adc
cmp
hlt
jp
(bad)
outs
iret
ss
and
mov
fidivr
or
loop
je
mov
ret
dec
pop
mov
mov
jecxz
add
sub
sti
sub
jbe
lods
in
ins
mov
js
lea
or
dec
test
(bad)
xor
fld
xchg
(bad)
and
(bad)
scas
xchg
fs
enter
mov
pop
movs
push
mov
fs
jmp
ret
pop
add
dec
mov
es
cdq
mov
adc
and
jno
dec
pop
mov
inc
sti
fs
mov
jno
cmps
inc
imul
dec
pop
mov
push
jg
and
fimul
scas
jno
(bad)
icebp
mov
sar
in
xor
mov
mov
repnz
popa
mov
add
test
ret
fstsw
sub
aas
adc
jb
cmps
sbb
imul
cs
mov
inc
fwait
ins
aad
mov
sbb
sub
xchg
pop
js
(bad)
mov
cs
push
push
sub
test
sub
push
cmp
mov
jns
adc
repnz
push
mov
mov
mov
mov
mov
addr16
and
pop
adc
adc
mov
pop
push
dec
imul
stos
mov
mov
and
mov
fidiv
add
test
or
mov
dec
mov
adc
mov
mov
push
stos
xchg
jge
xchg
ds
mov
mov
jg
out
jnp
xlat
fidivr
mov
outs
or
mov
imul
cmps
pop
and
push
mov
ror
sub
ins
daa
mov
xchg
cmp
imul
cmp
mov
mov
mov
mov
dec
adc
int3
and
mov
jmp
and
cvtps2pd
stos
out
jbe
loop
(bad)
sub
mov
mov
aas
retf
imul
ficomp
ins
rcr
(bad)
stos
ret
mov
movs
and
imul
mov
mov
or
fwait
cmps
xchg
sub
mov
imul
mov
ins
jae
outs
mov
inc
aaa
mov
cmps
pop
sub
mov
dec
daa
sub
mov
imul
daa
xor
lea
sahf
pop
mov
sub
mov
mov
xchg
adc
push
(bad)
cld
clc
(bad)
jns
fwait
cmp
cmps
arpl
dec
popa
call
outs
shr
test
sub
mov
sbb
xchg
pop
mov
mov
leave
jmp
stc
bound
inc
in
popa
arpl
pop
sub
xchg
xchg
js
ror
repz
push
mov
in
pop
sbb
fstp
add
nop
(bad)
jne
add
xor
inc
add
popa
fwait
jmp
lahf
dec
add
ins
ins
dec
imul
xchg
in
and
jmp
jnp
aaa
xor
(bad)
test
jns
(bad)
push
push
ds
xor
stc
jnp
dec
jno
popf
imul
aad
xchg
out
mov
and
call
push
mov
mov
es
fidivr
push
sbb
mov
push
(bad)
add
fwait
jg
outs
jl
sub
mov
xor
inc
mov
fsubp
lods
(bad)
mov
pop
mov
scas
xchg
outs
sub
cli
xchg
fcomp
fidivr
and
pop
outs
mov
ror
pop
mov
mov
pop
outs
sub
and
iret
pop
xchg
adc
sti
lea
lea
fs
in
outs
pop
xor
js
xchg
mov
sbb
ret
mov
mov
jg
mov
inc
mov
pop
xchg
inc
test
imul
out
iret
imul
imul
popa
xchg
popf
js
xchg
aaa
sar
jp
fs
jae
sub
ja
lea
mov
add
(bad)
les
test
push
push
out
pop
inc
ins
cmp
aam
mov
je
mov
push
data16
mov
jns
xchg
xchg
in
pop
sti
push
sub
inc
sub
imul
cmp
sub
mov
mov
push
add
es
ss
add
push
pop
(bad)
retfw
rcl
pop
mov
jg
aas
dec
ds
cmp
mov
sub
and
pop
sbb
mov
push
pushf
rcl
gs
and
ss
mov
push
dec
and
pop
data16
push
jp
dec
push
mov
mov
imul
jp
ror
ja
cmps
ins
xchg
mov
mov
push
inc
imul
lock
icebp
mov
ja
enter
mov
inc
sbb
push
jp
repz
lahf
push
push
ja
bound
leave
sub
mov
xchg
dec
and
dec
xchg
aas
xchg
mov
imul
pop
xchg
mov
movs
mov
mov
(bad)
das
and
dec
(bad)
stc
arpl
push
mov
(bad)
jp
mov
cmps
jge
(bad)
dec
pop
clc
pop
add
inc
sahf
iret
fsub
fcomi
pop
(bad)
push
sbb
stc
cmp
je
shl
sub
pop
jmp
retf
sbb
mov
(bad)
pop
popa
test
loop
sub
jae
fucomp
inc
pop
pop
jle
fild
and
dec
stos
sub
scas
adc
mov
shl
(bad)
pop
clc
daa
jmp
daa
add
inc
retf
retf
(bad)
in
int
cmp
sbb
in
mov
push
mov
enter
hlt
pop
mov
shl
int3
mov
test
mov
push
fisubr
xor
fst
retf
jle
aas
imul
test
je
cld
stc
jmp
jbe
lock
shl
dec
cmp
lea
or
mov
mov
jo
pop
gs
jmp
adc
je
jmp
in
sbb
ror
mov
jo
or
pop
mov
js
(bad)
cmps
mov
cmp
daa
jecxz
out
and
ror
mov
lock
or
jno
dec
jl
inc
call
xor
jae
das
xor
mov
mov
add
sub
(bad)
fldcw
lea
in
(bad)
lock
add
out
aad
xor
lock
inc
loope
sti
mov
outs
mov
je
inc
repnz
test
mov
jns
add
mov
and
sbb
pop
clc
movs
fisttp
js
jl
scas
and
jnp
inc
pop
mov
sbb
cmps
or
outs
dec
dec
rol
jmp
fst
movs
sub
dec
inc
lea
lea
aad
xchg
out
jmp
inc
jnp
push
cmps
push
mov
outs
mov
lds
aas
pop
bound
pop
pop
dec
lahf
xchg
jmp
mov
fsubp
mov
mov
retf
push
addr16
dec
adc
mov
jp
jge
sti
xor
xlat
sti
pop
mov
mov
test
push
inc
test
dec
jl
dec
pop
jge
nop
adc
stos
or
cmc
mov
popa
cs
movs
xor
jb
adc
(bad)
cmc
jp
cwde
out
lea
sub
sbb
div
cmps
daa
pop
stos
mov
sub
inc
inc
movs
stos
xchg
sbb
jns
jge
sub
sub
daa
pop
test
stos
lods
jmp
stc
mov
movs
jmp
scas
push
or
pop
and
test
mov
mov
mov
mov
push
(bad)
cmps
shl
out
cmp
pop
repz
inc
mov
xlat
leave
repnz
mov
sahf
jl
mov
idiv
pop
push
daa
and
mov
mov
pop
mov
mov
jbe
xor
out
mov
cmps
addr16
dec
in
outs
sub
ds
mov
inc
ins
add
add
or
in
add
xchg
cmc
mov
pop
jno
fmul
push
mov
xor
mov
ffreep
int3
out
push
out
mov
es
mov
scas
(bad)
xor
ror
pop
mov
jp
cmps
sub
pusha
cmps
cmps
sub
out
jae
lods
test
lahf
adc
mov
mov
mov
mov
jne
add
jno
cld
jp
movs
cmc
out
mov
push
xchg
jae
cli
lahf
cli
mov
pop
push
jmp
mov
sbb
aad
mov
mov
sar
jecxz
cmps
xchg
jge
cmps
jg
xchg
sub
jb
into
test
push
call
mov
nop
mov
mov
(bad)
sbb
stos
adc
pop
dec
push
mov
stos
pop
push
jl
(bad)
pop
(bad)
mov
cmp
xchg
aas
(bad)
cmp
sub
neg
test
nop
popf
das
(bad)
icebp
imul
push
fwait
or
jmp
leave
add
loop
jp
cmps
scas
mov
out
mov
std
sti
jno
movs
mov
dec
cmps
pop
pushf
in
movs
mov
ja
or
jbe
or
mov
pop
sub
mov
sub
inc
push
test
aam
mov
push
cli
dec
jnp
mov
mov
xor
mov
imul
mov
jno
mov
repz
scas
lea
and
repnz
and
push
cmps
call
adc
add
shl
cmps
inc
pop
mov
je
call
mov
jnp
inc
add
jo
add
dec
jb
xchg
sub
push
adc
int3
vstmxcsr
(bad)
lods
rcr
jno
imul
ins
ret
mov
loope
and
adc
adc
sbb
mov
xchg
dec
inc
xchg
dec
adc
xchg
dec
push
xor
sub
out
inc
mov
jbe
mov
daa
sub
bound
addr16
lds
mov
jnp
push
daa
sbb
int3
cmps
fadd
lods
cmps
cs
pop
test
aas
mov
out
ds
or
outs
std
dec
stos
add
add
adc
mov
je
mov
imul
mov
xchg
cmps
push
or
mov
cmps
shl
into
mov
scas
mov
(bad)
cmp
fmul
stos
push
xchg
stos
dec
ror
stos
and
div
mov
(bad)
push
lods
add
loopne
fwait
mov
xchg
aad
or
sub
mov
daa
das
add
add
frstor
sbb
out
pop
push
out
out
pop
push
aas
xchg
push
dec
aaa
jmp
jae
xor
daa
mov
hlt
mov
pop
(bad)
mov
add
xchg
xchg
shl
lock
pop
mov
lods
sbb
out
pop
xchg
sbb
jmp
movs
or
mov
pop
xchg
outs
adc
daa
push
(bad)
sbb
sar
jnp
adc
mov
les
mov
xlat
fs
xchg
lods
jno
jbe
push
fisttp
and
sub
mov
pop
mov
inc
nop
mov
clc
sar
jns
lods
enter
gs
adc
cs
ins
es
pop
dec
dec
jg
ja
daa
mov
(bad)
mov
dec
ja
xlat
arpl
imul
dec
cdq
aad
adc
cmps
push
imul
popf
xchg
stos
add
(bad)
cmp
mov
push
or
jg
cmp
rcl
repz
adc
and
jnp
movs
jle
(bad)
loopne
mov
push
jp
pushf
sbb
imul
add
ins
mov
push
adc
mov
add
cs
push
inc
retf
out
xchg
cmps
jne
inc
mov
ror
inc
jp
cli
mov
jo
mov
mov
inc
daa
daa
cmps
cmp
data16
jle
xchg
jo
sbb
cmp
add
cmp
mov
rol
xchg
or
inc
in
fs
jne
cmp
inc
jae
inc
dec
pushf
sar
xchg
mov
out
pusha
xchg
test
stos
in
(bad)
inc
js
mov
mov
gs
jo
adc
jmp
mov
pushf
mov
fdiv
pop
test
test
mov
ins
aad
test
addr16
sahf
sub
push
add
out
dec
mov
sub
add
leave
pop
jmp
stos
pop
dec
dec
jnp
fiadd
inc
pop
outs
jnp
sbb
mov
stc
push
push
xor
pop
push
fld
ins
dec
je
inc
iret
jp
or
ins
mov
pop
pop
movs
cmps
adc
imul
or
push
cmp
xor
clc
fldcw
jnp
jmp
pop
mul
jmp
fsubrp
jne
mov
inc
retf
mov
mov
mov
dec
test
(bad)
cmp
stos
mov
call
test
je
push
test
dec
inc
cmp
jno
out
mov
pop
inc
inc
mov
fidivr
push
outs
and
mov
das
icebp
mov
in
push
pop
loopne
por
pop
shl
iret
popf
jg
jle
xor
enter
fidivr
inc
ja
dec
xchg
fcom
push
outs
popa
mov
sti
aaa
int3
and
mov
sbb
jecxz
xor
sbb
inc
mov
shr
add
cs
sar
fnstsw
mov
les
imul
cdq
in
out
pushf
add
cmps
xchg
push
sti
sbb
jbe
mov
pop
sub
shl
cmp
daa
mov
je
sub
mov
adc
cmc
jmp
pop
mov
push
outs
popa
je
xchg
test
and
or
and
and
lock
jbe
ror
arpl
clc
cmc
mov
jecxz
movs
cmps
fwait
mov
fld
js
test
scas
mov
mov
jge
push
dec
cmps
push
loope
(bad)
std
fdivr
pop
push
popa
add
ror
out
jl
out
ins
test
aas
je
mov
arpl
nop
scas
mov
and
imul
inc
movs
mov
or
jge
jecxz
out
mov
add
test
or
pop
jmp
jle
mov
sbb
mov
mov
mov
or
jge
leave
cmps
cmp
jo
mov
shl
ins
mov
sbb
mov
sbb
sahf
push
mov
mov
ins
fwait
or
test
jbe
call
sub
push
mov
mov
push
mov
adc
(bad)
mov
bound
jb
sub
jns
gs
jnp
mov
ins
add
pop
add
and
jg
mov
(bad)
lods
xchg
pop
(bad)
cmp
dec
out
pop
movs
adc
mov
fisttp
in
jp
and
cwde
(bad)
mov
scas
jle
jmp
ret
fbld
imul
sub
mov
data16
das
push
(bad)
addr16
fbld
mov
push
out
imul
add
in
mov
movs
fadd
mov
mov
aad
adc
inc
stc
cmp
mov
xchg
es
xlat
mov
daa
dec
jns
and
xchg
and
mov
(bad)
cdq
mov
add
push
int3
mov
cwde
stos
test
pop
popf
je
jns
call
jns
mov
in
(bad)
call
test
mov
test
sbb
mov
fwait
stos
and
and
movs
adc
jno
sbb
push
in
lods
jns
scas
jp
mov
dec
push
sahf
aam
retf
push
mov
push
pusha
dec
xchg
mov
mov
ins
push
stos
rcr
mov
cmps
je
cmps
ins
jo
ss
jno
adc
movs
(bad)
cli
fnstsw
ds
and
mov
push
push
sub
mov
repz
cmps
(bad)
js
cmc
es
xchg
stos
es
(bad)
rcl
or
enter
and
dec
test
les
inc
mov
imul
xor
xor
mov
cmps
push
ret
add
xor
jns
fsub
jbe
cmp
cwde
jns
inc
xchg
sbb
push
mov
je
(bad)
sbb
jg
add
dec
mov
dec
das
les
aaa
jne
iret
retf
sbb
(bad)
pop
pop
bound
cli
arpl
psubusb
das
lds
(bad)
pop
je
cmps
dec
(bad)
inc
addr16
test
push
scas
popa
pop
xchg
pop
push
adc
out
mov
or
push
mov
scas
inc
aaa
pop
test
or
xor
xchg
out
nop
iret
scas
mov
fs
or
cmps
pop
(bad)
dec
inc
mov
sub
daa
stos
inc
mov
fwait
jg
mov
es
jnp
jns
ret
xchg
js
xchg
jno
jnp
leave
mov
fcom
cmp
popa
pushf
add
xchg
stos
jecxz
dec
inc
push
sub
out
cmp
mov
dec
push
(bad)
xchg
or
push
add
call
cmp
push
loop
sub
jmp
mov
movs
movs
add
out
fcom
and
mov
shr
push
mov
jl
mov
mov
jb
push
sbb
fiadd
mov
mov
and
xchg
(bad)
and
jge
aam
aas
out
outs
xor
sar
jns
addr16
inc
scas
ins
out
movs
stc
xor
(bad)
sub
fs
fs
pusha
push
les
xor
mov
je
sar
push
sbb
jbe
imul
cld
scas
mov
lahf
jecxz
scas
add
cmps
pop
xlat
adc
and
sbb
adc
cmp
aam
shr
aad
cmp
inc
addr16
fs
cdq
inc
loopne
push
aad
dec
stos
fsubr
dec
mov
fistp
into
gs
out
addr16
or
sub
mov
or
(bad)
stos
push
mov
mov
sub
adc
xchg
xlat
or
hlt
fcom
ret
lea
adc
fwait
jecxz
fst
popa
inc
sbb
mov
xchg
addr16
push
lods
outs
icebp
shr
data16
jmp
fadd
xchg
inc
imul
sub
lahf
loope
aam
push
cwde
retf
icebp
jge
sti
fbld
xchg
add
mov
mov
mov
jg
pop
xor
cmp
or
add
mov
cmp
fsub
and
test
push
pop
mov
mov
mov
add
imul
cmp
pop
stos
cmps
test
and
push
push
stc
or
or
in
mov
mov
mov
jae
mov
dec
xchg
cmp
cmps
and
jp
sar
xchg
fst
sub
ins
cmps
ret
cmc
and
and
mov
mov
call
push
jbe
je
sub
ja
mov
mov
std
mov
add
xchg
push
imul
ds
mov
jp
sbb
mov
sub
movs
test
int3
xchg
jle
(bad)
es
cmps
test
adc
xor
and
fmul
jmp
sub
mov
(bad)
mov
js
stc
inc
push
push
enter
mov
test
dec
jle
call
scas
inc
fs
inc
jecxz
sub
cmovns
int
test
adc
lahf
push
iret
mov
int
arpl
push
mov
popa
out
xor
inc
pop
xchg
das
stos
ja
adc
or
dec
push
mov
(bad)
div
std
sub
pusha
test
loop
cmova
shr
ds
sbb
jp
mov
js
int
arpl
es
push
mov
xchg
jp
cmovge
mov
ficom
pusha
pop
mov
frstor
idiv
iret
popf
dec
mov
inc
adc
jno
push
popa
dec
out
(bad)
or
mov
mov
in
jmp
sub
xchg
rcr
jmp
test
or
xchg
jmp
add
adc
lahf
fisttp
clc
pop
jno
aas
jnp
(bad)
fisubr
adc
div
sub
or
xchg
lahf
mov
inc
je
pop
js
addr16
mov
and
jbe
add
sub
pusha
cmp
mov
mov
scas
and
mov
sbb
mov
xor
pop
push
test
test
adc
pop
ins
imul
mov
or
andnps
sbb
inc
ret
sahf
mov
mov
dec
push
aas
sbb
push
sub
jae
sub
mov
push
mov
les
outs
jecxz
(bad)
jle
imul
stos
ret
cld
and
scas
lock
push
mov
into
mov
das
sbb
popa
jo
pushf
dec
scas
fild
adc
dec
fwait
loopne
test
(bad)
adc
mov
mov
add
(bad)
inc
jb
push
jl
in
xor
cmp
aas
cmp
sbb
je
mov
sar
inc
jnp
(bad)
xor
stos
dec
pop
xor
add
iret
dec
fdiv
rep
push
inc
enter
mov
mov
(bad)
cmp
inc
xchg
mov
mov
ror
cmp
(bad)
rol
scas
mov
add
push
cld
sub
inc
stc
aas
jno
outs
(bad)
mov
into
sub
stos
pusha
pop
fadd
mov
lahf
jmp
xchg
scas
fstp
mov
inc
sbb
sar
cmp
mov
fisttp
and
dec
movs
cmp
icebp
jb
je
loope
push
xlat
btr
xchg
jl
push
cmc
and
push
(bad)
test
sub
sub
cli
outs
hlt
test
mov
jo
pop
std
pop
push
into
data16
bound
push
add
mov
arpl
mov
mov
xor
cmp
mov
stos
jge
push
mov
imul
sub
cmps
retf
ins
ins
data16
inc
leave
pop
out
mov
movs
and
push
(bad)
or
ret
idiv
mov
shl
dec
and
out
inc
lods
aaa
sbb
imul
outs
stos
mov
sub
and
aas
pop
test
and
cmp
cmp
jg
xchg
mov
leave
lahf
lds
sub
pop
out
and
xor
mov
add
sub
(bad)
mov
(bad)
test
mov
xor
xlat
lea
adc
ins
imul
jl
fdiv
popa
xchg
lds
shl
retf
push
mov
pop
mov
sar
push
push
aaa
mov
sub
add
jp
and
jns
jmp
mov
movs
cmp
scas
test
pop
(bad)
jmp
mov
cmps
fincstp
pop
xchg
mov
sub
std
mov
mov
pop
lea
xor
mov
mov
scas
loope
in
lods
mov
jmp
cdq
adc
jnp
inc
cwde
dec
test
push
and
addr16
aaa
or
mov
pop
into
jg
jp
and
test
out
loop
(bad)
ins
xor
xchg
scas
jle
aas
fldcw
jnp
jp
dec
repz
retf
sbb
xor
test
mov
dec
(bad)
popf
fidiv
int
jecxz
mov
and
out
dec
and
mov
aas
mov
mov
jmp
fwait
jge
xchg
mov
mul
movs
xchg
test
ins
loop
cmps
shr
lods
mul
mul
pop
push
adc
cmp
out
push
jno
dec
inc
je
and
mov
daa
retf
ds
inc
idiv
(bad)
xchg
repz
scas
mov
ror
mov
int
jge
out
int
cmps
fisub
adc
loope
mov
out
outs
fistp
hlt
and
hlt
cdq
out
mov
adc
(bad)
daa
push
hlt
jnp
push
mov
pop
fcmovb
outs
cs
or
cmp
inc
int3
sbb
movs
mov
(bad)
dec
and
push
dec
stc
cmps
mov
es
aas
mov
out
dec
mov
push
push
cli
dec
test
fs
cmp
popf
outs
xor
dec
mov
push
xchg
daa
fs
arpl
int
rol
or
jl
mov
add
mov
mov
and
arpl
mov
pop
mov
retf
sar
cmps
mov
sub
and
mov
repnz
mov
(bad)
cwde
mov
xor
ss
sub
xchg
sub
movs
pop
outs
mov
mov
and
jae
cmps
out
dec
addr16
cmps
xchg
mov
fwait
and
mov
daa
fdivr
daa
adc
loop
mov
scas
lea
jns
cwde
xchg
pop
cmps
mov
inc
in
dec
mov
xchg
es
add
in
sub
lods
(bad)
stos
ins
hlt
mov
sub
mov
retf
ret
xchg
icebp
repz
jg
jmp
je
or
mov
mov
jp
ret
(bad)
push
cs
repz
mov
push
jp
mov
test
xchg
jae
repz
out
pop
dec
gs
cmp
rcr
jmp
mov
push
call
cli
xchg
mov
es
mov
fld
ficom
xchg
inc
cmps
mov
sbb
pop
je
add
add
femms
or
out
xchg
shl
push
jecxz
and
in
sub
shr
dec
popa
mov
inc
in
fcmovu
cmp
sbb
fs
sahf
mov
xlat
mov
scas
(bad)
and
xor
test
sub
add
out
leave
inc
test
call
(bad)
aam
or
addr16
lds
shl
mov
cmp
adc
in
sub
loopne
push
inc
add
mov
sahf
fwait
jns
inc
hlt
inc
and
out
(bad)
lahf
(bad)
sahf
add
jnp
inc
je
shr
xchg
inc
push
mov
fwait
adc
mov
mov
xchg
mov
pop
in
fwait
xchg
call
cmps
(bad)
adc
sbb
test
pop
pop
mov
fucomp
mov
(bad)
inc
lea
sti
outs
mov
xchg
adc
(bad)
xor
jge
push
mov
xor
lods
xchg
push
sub
daa
xchg
imul
mov
mov
mov
lds
sbb
sbb
mov
mov
gs
push
es
cmps
mov
cmps
mov
call
mov
iret
leave
cmp
call
inc
jo
inc
lahf
int
xchg
(bad)
pop
jle
jbe
push
je
jb
test
push
sbb
and
retf
inc
cmp
inc
mov
dec
cmp
mov
ds
dec
(bad)
out
lahf
(bad)
mov
push
cmps
xor
xor
fnstsw
cwde
gs
in
xlat
or
xchg
xor
loope
pop
fnstcw
aad
and
sub
pop
adc
ins
out
and
mov
inc
sbb
loopne
xchg
jae
aad
retf
push
mov
stos
dec
pop
scas
ror
mov
icebp
out
inc
inc
xor
jo
ds
jl
mov
and
aas
into
fs
aad
out
out
movs
js
pusha
clc
jbe
cmp
jge
pushf
nop
jp
sbb
jae
and
rcl
icebp
mov
inc
dec
mov
inc
das
lock
push
icebp
mov
jae
js
xchg
jl
movs
cli
mov
mov
or
or
jl
es
sahf
add
stos
push
ror
sub
and
jge
sti
and
mov
fs
sub
mov
lock
daa
es
call
clc
dec
mov
pop
cmps
mov
arpl
add
mov
xor
jle
mov
xchg
sub
or
daa
ds
pop
sbb
es
jae
mov
test
int3
sbb
mov
push
loop
fisub
push
inc
mov
outs
(bad)
mul
movs
pop
or
pop
retf
pop
test
mov
and
lds
mov
mov
fcomp
adc
mov
in
ds
jl
sar
or
out
inc
loope
mov
retf
hlt
addr16
test
and
fs
(bad)
mov
push
cmps
mov
(bad)
mov
out
lea
jb
and
push
or
pop
cld
popa
xchg
push
xchg
push
mul
add
cdq
imul
xchg
dec
fidiv
sub
cwde
(bad)
in
lock
dec
mov
push
cmc
push
lods
mov
push
cli
add
bound
mov
or
or
adc
xor
sub
jne
xchg
bnd
pop
(bad)
jecxz
(bad)
mov
add
cmp
inc
aas
ds
imul
and
cs
outs
and
popa
movs
lea
pop
sti
call
push
out
jecxz
push
mov
je
stos
repz
shl
fs
or
ror
mov
(bad)
int
hlt
xor
sub
cs
es
(bad)
jo
stos
test
cdq
xor
mov
mov
in
fs
mov
mov
mov
sub
push
stos
mov
stos
pop
mov
cld
xor
push
ja
(bad)
(bad)
loope
push
mov
ja
and
pop
and
xchg
mov
pop
dec
shr
mov
push
mov
and
pop
xlat
push
xor
sbb
or
mov
sti
xchg
mov
ss
mov
(bad)
jl
or
aas
lds
xchg
xor
mov
xor
leave
jnp
xchg
jns
xchg
pop
lods
pop
sub
dec
and
dec
mov
aas
dec
mov
lods
into
inc
mov
(bad)
ds
ins
jns
xchg
ins
lahf
fwait
mov
ror
data16
(bad)
xor
sbb
inc
push
test
fimul
mov
(bad)
fiadd
aaa
xchg
lods
leave
outs
mov
scas
mov
iret
lahf
shl
inc
or
inc
test
call
dec
in
js
xchg
cmp
mov
ret
mov
addr16
mov
or
jmp
div
in
fs
mov
jg
mov
ins
xchg
stos
ss
imul
ins
pushf
or
xchg
jge
inc
cmps
iret
stos
jg
lds
cmps
lock
fldcw
dec
cmp
fdivp
mov
mov
mov
aas
sub
das
fcomp
sahf
mov
in
cmc
xchg
jmp
xchg
fsub
ja
ds
es
out
mov
in
rcr
mov
and
push
push
cmps
test
(bad)
repz
lods
inc
lock
mov
jle
ins
fnstsw
sahf
(bad)
sub
sub
mov
or
xlat
dec
sub
pop
push
pusha
jae
push
push
xchg
(bad)
and
xor
inc
dec
xchg
jmp
std
test
movs
mov
(bad)
std
imul
aam
jle
mov
cmp
(bad)
sbb
and
jmp
cwde
(bad)
icebp
loop
test
repz
cmps
xor
fmul
push
loop
shl
push
mov
mov
pop
push
push
sbb
adc
mov
adc
jbe
cmps
or
aad
pop
cmc
fmul
gs
retf
xchg
xchg
sub
and
mov
mov
cmps
fs
rol
sahf
mov
lods
cmp
idiv
dec
mov
push
scas
xchg
mov
dec
mov
mov
cmps
sbb
(bad)
addr16
sub
imul
sbb
xchg
out
cmc
mov
inc
aad
cmps
mov
imul
mov
jle
cmps
jmp
bound
es
inc
jge
ror
mov
icebp
and
dec
sbb
sahf
mov
stc
popf
sub
inc
loop
dec
jmp
jbe
push
mov
inc
cmp
xchg
sub
pop
inc
stc
sbb
or
(bad)
mov
jp
jle
clc
dec
shr
sbb
mov
xor
push
mov
ss
mov
pop
jge
cmp
daa
shl
jge
sub
mov
dec
js
(bad)
mov
jecxz
fld
scas
mov
cvtpi2ps
lea
pop
(bad)
leave
mov
xor
(bad)
mov
cmp
push
in
jbe
mov
xlat
add
mov
mov
mov
cmp
test
and
les
cmp
movs
(bad)
push
mov
fs
sub
clc
sbb
push
movs
add
jle
xchg
test
test
xor
pop
jg
mov
jmp
(bad)
adc
das
xchg
dec
ficom
push
jb
mov
popa
ret
mov
inc
add
fwait
and
stos
es
out
(bad)
dec
retf
push
cmc
out
rcl
call
push
fdiv
in
inc
cli
pop
retf
sbb
and
loopne
inc
test
cmp
sbb
es
push
jecxz
mov
mov
pop
mov
std
(bad)
daa
aaa
push
xchg
ret
aaa
lds
in
sub
out
arpl
jl
sbb
or
mov
mov
xchg
xor
pop
adc
or
loop
mov
mov
jb
cwde
adc
(bad)
fild
movs
in
scas
cmps
jne
xor
aam
sahf
leave
cmp
sbb
(bad)
dec
call
dec
inc
sub
lds
data16
(bad)
fwait
outs
or
movs
add
mov
fistp
imul
mov
and
ret
mov
out
dec
cli
mov
(bad)
in
cmp
pop
outs
addr16
add
mov
xor
js
outs
pop
jb
ja
nop
pop
cmp
mov
push
push
imul
and
pop
movs
test
sbb
cs
(bad)
aam
lahf
clc
mov
aas
cwde
inc
xchg
pop
xlat
jg
and
out
push
pop
mov
add
hlt
loope
call
add
(bad)
in
imul
jnp
icebp
mov
ret
test
retf
jb
xchg
(bad)
test
mov
loop
push
fwait
inc
pop
pop
sub
movs
jge
mov
mov
cli
cli
jecxz
jge
js
in
mov
dec
and
xor
cmp
ffree
adc
and
sub
(bad)
js
imul
(bad)
stos
xchg
call
xchg
sbb
pop
outs
add
mov
jmp
out
sub
xor
std
scas
inc
push
(bad)
daa
dec
scas
daa
mov
clc
xchg
push
sbb
ret
dec
test
ds
outs
inc
pop
mov
pop
mov
inc
cmps
jbe
push
push
xchg
ins
cs
pop
sub
adc
out
jmp
out
sub
jnp
sbb
mov
stos
mov
(bad)
in
cwde
cmps
and
popa
adc
add
retf
data16
mov
jno
arpl
mov
and
ins
cmps
jg
or
adc
dec
(bad)
adc
add
lods
mov
cmp
(bad)
xlat
mov
cmp
mov
ds
loop
push
xor
mov
xor
cmp
pop
adc
loop
push
cmc
push
mov
mov
inc
push
aam
and
inc
aam
daa
and
pop
mov
lock
sub
dec
mov
imul
add
shl
mov
mov
cmp
sbb
imul
clc
pop
sahf
jmp
push
or
mov
lock
ins
cmp
sbb
and
outs
dec
pop
mov
pop
mov
mov
shl
mov
dec
mov
push
sub
mov
clc
sub
js
jo
(bad)
mov
cli
mov
mov
in
les
pop
jnp
mov
test
cmps
test
and
adc
sbb
jg
out
mov
pushf
pop
push
cmp
imul
adc
adc
fsubr
dec
ds
aaa
fs
das
xchg
and
repz
fimul
arpl
add
das
into
mov
push
mov
enter
jp
cmp
pop
stos
shl
adc
loope
ds
push
fnstenv
mov
sbb
rcr
iret
aaa
retf
js
mov
pop
lea
out
es
jp
pushaw
js
loope
mov
jge
cmp
cmp
cs
mov
nop
das
mov
shl
test
out
or
sub
xchg
rcl
xor
lea
jmp
jge
add
ret
jno
ds
push
fdivr
sti
cmp
cmp
lahf
sbb
jle
add
cmps
xchg
sub
out
sahf
jl
enter
xor
mov
or
leave
or
addr16
mov
cld
add
aad
adc
and
addr16
ins
and
pop
fs
movs
cs
call
fcomp
inc
(bad)
pop
sar
repz
pusha
mov
fild
adc
pop
jnp
scas
pop
imul
and
lock
inc
cmp
rol
sbb
sti
jno
call
cwde
ret
dec
cli
out
xchg
cmps
lds
int
pop
shl
mov
push
in
pop
stos
dec
mov
mov
cmp
iret
sbb
dec
mov
and
mov
cmps
adc
std
(bad)
leave
adc
adc
adc
pop
lea
dec
mov
mov
inc
outs
jmp
loope
es
inc
outs
fwait
push
or
mov
fisttp
pop
jecxz
das
mov
jle
cmp
pop
jns
sub
not
ds
xor
mov
push
into
loope
nop
cmps
push
mov
mov
dec
inc
jb
popf
dec
mov
add
aad
mov
jno
addr16
loopne
mov
sbb
sub
xor
aam
sub
mov
push
xchg
aaa
xchg
mov
fistp
inc
inc
and
and
mov
in
fadd
fs
sub
pop
int
loop
cmps
lock
int3
cwde
shl
mov
pop
test
movs
push
in
outs
add
inc
mov
cmps
jle
test
jmp
fwait
loope
icebp
mov
fcom
or
jo
call
iret
push
xchg
jl
xchg
add
jnp
push
fld
and
push
movs
shr
and
jp
or
mov
stos
aaa
jne
and
movs
adc
push
std
aas
inc
pmulhw
xchg
outs
icebp
and
adc
jge
ret
inc
xor
cmps
test
jne
fisub
movs
inc
call
(bad)
pop
in
pop
push
mov
dec
jo
fisubr
rcl
xor
lds
stos
(bad)
int3
adc
mov
out
and
js
cmp
cmp
pop
es
mov
mov
cmp
shl
mul
(bad)
(bad)
jne
fs
movs
inc
and
das
mov
sar
in
out
data16
dec
xchg
das
test
(bad)
imul
dec
pop
and
mov
xor
pop
jp
cmc
pusha
sbb
in
sub
xor
lods
stc
loope
dec
call
mov
fld
jg
movs
xchg
xlat
push
xor
jbe
mov
mov
in
hlt
mov
cld
sub
clc
in
cmps
aas
mov
jne
das
mov
mov
push
int
imul
in
fs
and
mov
daa
push
test
es
mov
dec
jp
mov
jne
lock
into
pop
or
arpl
dec
lock
push
fadd
adc
mov
inc
in
test
dec
sahf
ret
dec
xor
lock
push
mov
jle
xchg
and
js
aad
jl
out
popf
lods
xor
mov
imul
jge
mov
mov
push
jbe
push
mov
shl
mov
dec
pusha
rcl
sar
push
pop
in
rol
cmp
pushf
ins
xchg
in
mov
shl
xchg
cmps
out
sub
pop
sbb
sub
adc
cld
ds
jecxz
xchg
dec
and
dec
ret
sub
jns
es
adc
mov
push
push
dec
dec
mov
stos
cmp
and
rcl
sbb
test
mov
out
fsub
lds
add
add
sub
stos
arpl
and
adc
pusha
mov
fdivr
pop
mov
out
shl
(bad)
cli
pop
out
je
arpl
test
xor
in
cmp
dec
pop
pop
sahf
mov
(bad)
scas
not
sbb
xor
dec
add
xchg
cmp
sub
ja
sbb
pop
(bad)
(bad)
pop
lea
mov
in
daa
push
mov
stc
push
sub
aas
push
(bad)
pop
mov
adc
lds
mov
sub
pop
mov
stos
arpl
mov
iret
test
pop
inc
jbe
mov
mov
(bad)
jno
movs
lock
mov
jae
dec
sub
lods
push
mov
jl
and
sbb
xchg
xor
scas
in
fild
fidiv
adc
ins
jae
add
cmps
out
stc
jae
in
bound
and
popa
jge
dec
mov
das
mov
outs
sti
mov
xchg
inc
ins
adc
mov
sub
arpl
jl
shl
call
out
inc
sub
xor
pop
nop
sub
cmp
mov
ins
xchg
lds
sbb
in
mov
stos
sub
pop
inc
jb
sub
cli
dec
ror
es
add
adc
dec
stc
pop
sbb
sub
ret
cmc
lahf
jne
push
pushf
adc
mov
mov
popw
mov
(bad)
fucomp
dec
mov
enter
movs
adc
xlat
xchg
mov
stos
cmps
dec
jecxz
push
jmp
aas
sbb
and
mov
mov
mov
push
movs
mov
jne
xchg
jb
xor
cwde
and
dec
xchg
out
scas
pop
sub
mov
push
das
(bad)
sbb
loop
and
pop
push
push
jo
aaa
mov
cmp
lds
cmp
sbb
pop
and
push
daa
jno
jne
fstp
cld
(bad)
test
(bad)
sbb
repz
adc
call
int3
fs
mov
pushf
repz
adc
and
adc
and
pop
add
mov
inc
pop
test
push
inc
pop
add
pop
and
jle
cmps
add
or
test
sbb
test
cmp
sbb
xchg
leave
popf
inc
popa
imul
fs
or
mov
mov
ret
iret
jge
jmp
inc
push
pusha
adc
xchg
xor
arpl
or
sub
aam
cmp
mov
les
fwait
mov
inc
jg
test
xchg
sub
mov
add
pop
xchg
xchg
mov
addr16
mov
test
push
add
jno
dec
cmps
in
stos
stos
cmps
(bad)
mov
inc
leave
(bad)
(bad)
mov
push
rol
push
cmp
mov
sub
out
jge
scas
inc
dec
fimul
sub
es
out
(bad)
es
jno
push
(bad)
mov
in
cmp
push
das
les
mov
push
push
or
xchg
in
movups
ja
mov
cwde
lss
fucomp
cmp
mov
cmp
ins
mul
jb
in
ins
mov
mov
stos
cmps
sub
mov
js
jp
lahf
lds
push
loop
jne
mov
mov
(bad)
inc
sub
cmps
arpl
js
pop
imul
stc
cmp
xchg
jno
shl
arpl
dec
xchg
xchg
iret
jl
lods
stos
or
gs
outs
(bad)
(bad)
xchg
lea
xchg
cmp
test
mov
call
add
jnp
out
pusha
leave
icebp
(bad)
gs
cmps
mov
dec
push
push
in
call
lahf
dec
and
xor
push
lea
mov
test
mov
xchg
les
loop
js
jl
aas
rol
(bad)
mov
test
call
fs
mov
(bad)
mov
mov
daa
imul
pushf
and
repnz
mov
ficomp
lods
(bad)
imul
lea
lods
out
adc
pop
xchg
dec
inc
jae
cmp
and
or
dec
bt
pop
cmp
push
les
inc
jo
rcr
(bad)
jmp
popf
push
dec
pop
hlt
push
dec
leave
es
aas
call
imul
arpl
cmp
outs
pop
iret
sub
sar
and
sub
mov
mov
cmps
inc
cmps
pop
sbb
and
adc
mov
pop
popf
js
ret
dec
pop
add
xor
sbb
lahf
(bad)
mov
jmp
movs
add
sbb
mov
bound
sbb
xchg
inc
es
sahf
neg
cmp
jecxz
lahf
mov
leave
cmp
daa
cmp
xchg
fiadd
mov
sbb
xchg
mov
and
pop
mov
std
jae
nop
pop
(bad)
or
je
jge
jo
ja
fidivr
adc
fidivr
sbb
inc
popf
mov
dec
xor
inc
or
addr16
jo
mov
jle
dec
sub
mov
call
or
shl
push
imul
lea
out
xchg
(bad)
sbb
mov
stos
iret
retf
mov
(bad)
call
push
and
stos
imul
popa
das
mov
lea
cld
mov
in
in
xchg
dec
gs
jmp
popa
inc
add
das
mov
pop
mov
cmp
imul
test
daa
mov
loop
sub
add
aaa
or
neg
push
xlat
mov
enter
into
fwait
daa
dec
xchg
mov
mov
xchg
or
leave
gs
mov
jg
outs
jo
push
pop
mov
jb
pushf
jns
test
out
shr
mov
das
xlat
aas
ds
lods
push
jmp
cmps
(bad)
fild
add
mov
aam
xor
in
stos
dec
bound
sub
push
mov
xor
lods
ins
das
mov
dec
xchg
outs
das
mov
or
sub
jg
jle
mov
in
ss
mov
outs
test
inc
xchg
test
and
lahf
jns
int3
pop
dec
popf
jmp
and
and
sbb
xor
mov
adc
or
sahf
adc
mov
pop
call
and
pop
cmp
sbb
imul
std
mov
imul
add
js
addr16
call
shr
(bad)
inc
sbb
inc
lahf
jle
jg
repz
mov
or
mov
js
or
sub
push
cmp
mov
mov
pop
int3
cmp
in
les
dec
in
jb
es
ss
je
jg
sub
and
std
sub
mov
jae
sbb
xchg
lds
cmp
lods
cmps
sub
outs
fs
mov
call
stos
rol
push
push
add
adc
and
jne
call
mov
pop
sub
out
add
xor
jl
or
jns
neg
push
scas
les
and
mov
cwde
lods
sub
shr
popa
daa
push
add
push
jle
xor
movs
cmp
jge
lods
mov
pusha
mov
mov
(bad)
stos
imul
push
mov
inc
and
jo
xacquire
fcmovu
jns
ret
in
pop
lahf
jmp
add
and
aad
daa
xchg
cmp
cmps
or
out
or
std
sbb
mov
imul
xor
stos
mov
imul
and
shl
cmova
jle
and
(bad)
sbb
je
iret
ret
cmp
xchg
test
aad
lahf
inc
jae
(bad)
iret
add
or
sahf
(bad)
ss
xchg
add
addr16
loop
cmps
(bad)
jmp
inc
jl
inc
inc
mov
sub
(bad)
mov
xchg
adc
add
shl
js
mov
sub
mov
stos
call
adc
(bad)
cmp
jecxz
xchg
test
lock
push
sti
sub
pop
jle
push
ja
jg
mov
mov
xchg
stos
sub
test
enter
aam
into
xchg
pop
jnp
mov
and
loopne
int
in
and
pop
imul
fwait
jmp
mov
or
movs
and
or
leave
cwde
pop
in
test
mov
mov
pop
or
stos
adc
pop
aaa
in
or
ror
pop
bound
pop
and
or
dec
out
and
jb
fild
out
jge
js
xchg
push
inc
mov
ja
sbb
fprem1
aad
jg
jmp
rcr
or
call
mov
lods
ret
cmp
xchg
mov
add
sub
mov
in
test
ss
sub
es
lahf
dec
add
lds
call
cs
adc
mov
das
mov
inc
pushf
ss
pop
loop
inc
imul
ins
and
and
dec
es
movs
mov
sub
dec
mov
fscale
mov
lods
in
stos
fcomp
in
cmp
loopne
jne
not
enter
jbe
add
fnstcw
mov
mov
mov
arpl
scas
add
in
jge
mov
mov
jl
fcomp
lds
sbb
push
mov
sub
sub
xchg
adc
push
pop
jmp
fisubr
imul
cmp
jg
out
mov
mov
aas
or
daa
push
mov
mov
test
shr
xlat
aas
stos
mov
(bad)
mov
or
add
pop
push
in
inc
mul
mov
dec
xchg
jno
xor
pushf
xchg
shl
sub
jge
mov
sub
mov
mov
and
add
mov
and
xchg
in
xchg
mov
out
stos
leave
or
repnz
lods
pop
cmp
bound
cmps
pop
dec
mov
xchg
retf
out
sub
xor
jns
xchg
sub
or
jb
leave
cmps
mov
mov
out
lea
cmp
mov
add
add
daa
mov
xor
mov
stos
mov
jl
jl
(bad)
pop
pop
inc
xchg
push
or
call
mov
cmp
cdq
push
sub
mov
test
test
and
fisub
data16
into
shr
test
and
or
scas
sbb
ds
sti
cmp
dec
in
sahf
(bad)
mov
jmp
lods
lds
push
stos
ret
nop
cmp
das
movs
jg
pop
xor
in
mov
xchg
imul
mov
mov
call
sbb
repnz
cdq
cmps
test
mov
add
mov
and
inc
pop
ins
xchg
jmp
out
test
lods
loop
mov
pop
or
mov
jecxz
pop
stos
(bad)
fisub
dec
adc
shl
jns
push
mov
sub
out
retf
xor
out
leave
cmc
dec
push
push
mov
jecxz
dec
jle
ret
cmp
outs
mov
cmp
adc
dec
in
mov
test
mov
ss
sbb
add
mov
mov
ss
mov
adc
mov
imul
and
xor
jle
mov
mov
and
inc
pop
shl
ins
aaa
dec
ins
jg
and
call
fnstsw
jle
aas
rol
and
aam
fisubr
outs
mov
jne
adc
adc
mov
(bad)
pusha
push
sub
mov
cmp
cwde
adc
pop
pop
push
popa
rcr
fwait
lods
mov
jbe
pop
pop
hlt
xchg
add
(bad)
fisubr
or
mov
shr
or
fwait
or
(bad)
mov
add
std
sbb
cmp
test
out
sub
aaa
adc
shl
mov
mov
cmps
pop
popf
das
loop
ret
mov
mov
ins
mov
or
mov
arpl
(bad)
paddusw
aam
pop
dec
mov
xor
dec
aaa
ret
adc
xchg
mov
xchg
cmp
sub
cld
fdiv
adc
fcomp
mov
xor
arpl
xor
push
in
stos
mov
movs
ins
(bad)
bnd
(bad)
aad
push
xor
rol
xchg
imul
not
call
adc
cld
stos
mov
movs
jnp
repnz
call
fsubr
cmp
jo
iret
xlat
sbb
cmc
cmp
adc
push
adc
mov
mov
push
xor
mov
and
or
mov
(bad)
mov
jmp
(bad)
mov
lahf
fwait
ja
and
test
jmp
aaa
mov
(bad)
mov
mov
in
mov
clc
lahf
adc
cld
leave
sub
jl
lahf
mov
jns
repz
fwait
mov
sub
push
js
xchg
dec
test
and
addr16
push
pop
push
call
lods
mov
retf
scas
lock
cmp
inc
xor
and
xchg
mov
cli
mov
pop
test
push
push
(bad)
xor
test
add
aas
jb
pop
add
mov
mov
jnp
ss
ror
ret
out
fcomi
mov
pop
enter
add
xor
repnz
daa
mov
mov
sbb
sbb
cmc
ins
fsub
das
jne
add
sub
mov
outs
cmp
mov
mov
je
sub
mov
cmp
jb
mov
loope
pop
lds
scas
fs
(bad)
in
test
test
stos
loop
adc
xchg
pop
mov
inc
std
jns
addr16
(bad)
aaa
dec
ds
mov
xchg
int3
push
push
inc
adc
in
xlat
je
mov
and
addr16
jle
mov
cmp
jb
outs
jge
jnp
jge
int
pop
out
mov
popa
stos
pop
and
idiv
and
test
mov
cmps
inc
xchg
popf
outs
jbe
sbb
inc
jae
loop
push
ja
jo
aam
mov
out
mov
pop
gs
jno
enter
xlat
loopne
cld
dec
mov
aam
dec
je
push
(bad)
jb
jle
cmp
(bad)
icebp
sub
adc
mov
mov
in
mov
mov
aas
cmps
or
mov
sub
lods
lods
push
stos
cmp
push
or
outs
clc
aad
daa
mov
nop
jno
jne
iret
sahf
je
push
jbe
cmps
mov
and
xchg
inc
jmp
scas
pop
sbb
aad
jb
rol
inc
sbb
mov
jmp
push
fbld
adc
cmp
dec
sbb
mov
lahf
mov
outs
pop
xchg
lods
cmp
aas
in
push
jg
or
pop
mov
xchg
imul
lds
sbb
lea
(bad)
mov
(bad)
mov
jp
push
or
in
push
ja
(bad)
and
fdivr
xchg
and
mov
and
sbb
in
pop
fwait
pop
sbb
fidivr
add
push
mov
sahf
arpl
enter
sub
in
jnp
cwde
sti
addr16
push
(bad)
jg
sbb
shl
or
cwde
stos
lahf
mov
test
sub
stos
xchg
in
movaps
xor
mov
loopne
mov
lods
test
pop
lods
mov
ins
mov
or
lods
pop
mov
test
loope
mov
inc
ss
dec
movs
push
daa
mov
sbb
ds
mov
shr
dec
addr16
push
daa
mov
xor
dec
or
cdq
das
fidivr
mov
daa
jno
fdiv
sahf
(bad)
int3
cmp
pop
jg
dec
gs
jae
mov
fnstcw
addr16
retf
lea
fs
ins
xchg
outs
xchg
ja
data16
(bad)
sbb
pop
cmp
shl
imul
xor
jo
xlat
lock
nop
mov
mov
es
sar
pop
lea
xchg
(bad)
in
addr16
sub
inc
pop
ficom
or
xchg
cmovne
add
ror
sub
mov
xor
push
mov
gs
lds
mov
adc
popa
mov
cmp
mov
and
dec
cdq
(bad)
neg
je
enter
iret
xchg
xor
cmps
jo
inc
ret
and
test
lea
nop
mov
mov
push
lods
lds
and
mov
mov
neg
pop
in
dec
xchg
adc
mov
adc
cld
mov
fs
sbb
inc
mov
stc
adc
cld
push
ins
ja
push
and
adc
das
test
psubb
inc
shl
inc
not
or
and
iret
inc
iret
inc
rcr
mov
and
pop
fxch
inc
lods
mov
stos
jp
push
shr
jnp
pushf
fwait
adc
fmul
jno
fadd
mov
cmp
stc
xchg
adc
call
mov
test
mov
(bad)
mov
mov
ins
jmp
cmp
shl
add
cmp
jecxz
(bad)
jmp
push
outs
imul
fld
add
add
cmp
or
das
ins
push
jb
popf
pop
adc
xchg
xor
iret
mov
loopne
popf
aas
and
push
(bad)
imul
js
add
out
mov
mov
sbb
or
mov
xchg
in
sub
dec
pop
mov
repz
mov
pop
or
dec
out
in
xlat
scas
aad
cld
push
lods
lods
std
mov
lds
lea
cs
nop
xchg
lds
scas
test
es
loope
dec
lds
mov
ins
test
push
push
outs
mov
popf
in
ret
push
addr16
stos
in
sub
push
scas
cmp
and
sar
push
stos
in
mov
retf
xchg
aas
and
out
clc
jno
test
lds
movs
imul
mov
js
xchg
mov
popf
rcr
jno
mov
(bad)
sub
int
push
loope
push
shl
fmul
sub
jb
xchg
(bad)
xlat
xchg
outs
mov
cmp
cmp
xchg
cmp
retf
into
aaa
rol
leave
in
scas
push
cmps
or
addr16
ret
cmps
ins
cmps
adc
or
xor
add
pop
inc
enter
inc
stos
mov
arpl
sub
(bad)
sbb
pop
pop
push
out
mov
inc
pop
enter
sti
xor
sar
outs
ss
cmp
lods
stos
push
iret
out
test
mov
(bad)
or
cmp
loope
ficomp
pop
cmps
xchg
jge
add
in
aam
sahf
jns
rol
retf
lods
es
test
sahf
sub
inc
sbb
pop
pop
cmp
pop
inc
movs
mov
mov
xchg
lods
adc
int
sbb
jge
mov
mov
arpl
add
add
mov
stos
inc
in
test
cmps
push
loope
adc
push
ret
cmps
test
out
pop
cmps
(bad)
mov
and
jge
jg
mov
ret
ja
repz
add
psraw
neg
mov
push
call
adc
js
je
pop
outs
aaa
retf
es
jle
pop
and
cmps
pop
mov
ds
or
xchg
mov
mov
scas
ss
scas
xor
iret
mov
jp
(bad)
rcr
call
lods
inc
mov
clc
inc
fsubr
xchg
sahf
xlat
std
mov
jmp
add
sub
adc
dec
mov
cld
mov
fsubr
dec
enter
inc
jno
pusha
mov
in
jecxz
movs
mov
pop
pop
sbb
out
mov
fdivr
popa
pop
fwait
pop
jmp
loop
mov
mov
mov
pop
mov
fdivr
lods
push
mov
sub
xor
outs
pop
mov
ret
jg
das
jmp
push
mov
cmp
and
xchg
pop
iret
lea
sbb
ins
(bad)
stos
mov
cmps
push
cdq
or
or
retf
xchg
ins
sbb
mov
dec
fsub
mov
mov
cmc
test
push
sub
inc
push
jbe
mov
in
pop
fucomi
jle
lahf
and
jnp
adc
mov
out
jecxz
(bad)
jmp
adc
cmp
lea
mov
jo
das
xor
addr16
gs
ds
daa
push
fst
push
push
mov
lea
cmps
xchg
xchg
lahf
pop
stos
sub
push
mov
out
out
sub
(bad)
mov
mov
mov
jg
mov
mov
mov
sub
jae
mov
dec
xchg
push
lods
mov
lahf
mov
or
mov
sbb
mov
mov
fstp
push
int3
mov
es
xor
in
xchg
push
mov
imul
and
fwait
inc
ret
mov
retf
sub
add
pusha
pop
xchg
cmp
and
pop
xor
cmp
jge
sub
mov
das
jno
mov
xchg
es
into
sub
scas
(bad)
mov
cmp
mov
std
cdq
sbb
add
pop
push
adc
mov
add
es
les
xor
and
push
retf
mov
in
lds
inc
jnp
ds
sub
pop
je
stc
in
int
mov
push
add
es
test
mov
out
xor
push
enter
fs
dec
jg
push
adc
imul
mov
imul
mov
loope
fcmovne
lods
lds
pop
mov
jge
pop
jns
ins
sti
xor
add
dec
mov
pop
mov
and
mov
popf
add
mov
sub
movs
daa
(bad)
jg
sbb
adc
adc
cmp
js
pop
xlat
rcl
enter
add
outs
ss
jg
sub
push
inc
lds
scas
sub
jns
imul
cmp
test
ror
lea
jp
jo
test
sub
jmp
cmp
mov
gs
push
mov
icebp
mov
cwde
adc
sar
cmp
std
les
lods
sub
movs
push
sub
gs
xlat
sbb
mov
xor
xchg
mov
ins
xor
sub
jmp
das
test
cmp
std
jmp
xchg
mov
cmp
outs
and
pushf
into
jmp
mov
fcmovbe
pop
aas
les
xchg
(bad)
mov
inc
sbb
enter
jo
clc
jae
cmps
(bad)
stos
adc
repnz
cmps
stos
std
stos
int
outs
lea
mov
shl
les
mov
push
mov
pop
stos
or
and
inc
add
adc
sahf
adc
pop
scas
xor
cmps
xchg
out
sub
sbb
test
retf
jg
sbb
jnp
inc
pop
push
daa
mov
sub
sub
(bad)
call
loopne
push
je
dec
push
out
(bad)
fsubr
or
add
cmp
(bad)
in
fld
or
dec
shl
mov
and
mov
test
jb
icebp
test
jecxz
cmp
popa
dec
dec
mov
rcr
push
cmps
cmp
and
mov
and
push
mov
mov
fsub
sub
jmp
mov
mov
mov
ret
lahf
shr
jg
pop
je
(bad)
scas
mov
fwait
push
fwait
dec
test
call
cwde
bound
movs
cmp
or
sub
sub
(bad)
cmps
call
and
(bad)
sti
mov
fisub
jns
cmc
xchg
cmps
jp
mov
and
repnz
sub
repz
sub
dec
mov
dec
xchg
adc
enter
mov
lahf
mov
pmulhw
and
es
mov
int
cmps
and
ds
jp
lahf
lea
lock
pop
scas
jge
cld
inc
and
dec
fiadd
loop
aaa
into
popa
out
sahf
inc
(bad)
test
ss
sbb
or
dec
out
data16
xor
daa
adc
jge
xchg
lahf
xlat
push
xchg
mov
and
daa
je
ret
mov
sar
nop
out
xchg
pop
pop
xchg
hlt
aaa
add
mov
and
lahf
popf
idiv
jo
sbb
int
test
imul
(bad)
sti
in
xlat
xor
pop
ss
jmp
pushf
shl
xchg
push
test
mov
enter
sbb
mov
test
ins
fidiv
and
inc
test
mov
sub
in
xchg
push
leave
(bad)
cli
out
lock
push
pop
jne
rcr
stos
mov
mov
jmp
(bad)
adc
inc
cmp
sub
jns
adc
cli
mov
in
inc
(bad)
popa
arpl
addr16
shl
(bad)
sbb
fisttp
xchg
adc
fisubr
ret
outs
sub
cmps
arpl
adc
mov
add
stos
inc
sub
ja
sbb
mov
mov
sahf
dec
scas
je
fs
int3
mov
das
xchg
push
(bad)
fucomi
test
cmps
or
mov
mov
adc
pop
movs
pop
push
mov
ins
call
inc
ret
ja
dec
rol
test
xchg
pop
int
jnp
movs
cmp
jnp
movs
adc
inc
std
out
mov
sar
(bad)
mov
stos
pop
inc
movd
test
and
outs
push
inc
not
lods
int
(bad)
sbb
lds
adc
dec
ret
stos
push
mov
cmp
adc
cs
in
out
aad
fwait
cmps
cld
cmps
and
cmp
pusha
sub
inc
mov
push
scas
gs
or
jge
mov
ror
test
int
ss
xlat
and
imul
aas
out
(bad)
cmp
in
xor
xchg
cmps
and
dec
dec
xchg
sub
xchg
fld
mov
(bad)
sti
xchg
pop
mov
pop
aas
push
mov
nop
jne
mov
aas
dec
or
xchg
sar
outs
jbe
pop
in
cmp
fild
ss
(bad)
clc
js
scas
xor
pop
xor
xchg
lods
jg
inc
mov
sbb
sbb
imul
pop
xor
mov
ins
pop
das
jae
pop
and
outs
lds
mov
lds
mov
sub
scas
and
arpl
ins
add
mov
xor
xchg
imul
call
mov
jnp
sub
jae
outs
sub
dec
(bad)
dec
and
scas
out
pop
movs
and
fstp
in
jmp
cmp
mov
stos
iret
jge
pop
pop
mov
push
jge
cmp
imul
xor
push
push
daa
test
mov
sub
lea
aas
in
mov
push
outs
and
or
test
mov
fist
push
(bad)
outs
(bad)
rcl
(bad)
sti
cmp
or
lds
mov
adc
es
cmps
mov
imul
imul
add
pop
scas
inc
push
imul
es
mov
jne
mov
sbb
sahf
shl
sahf
imul
ins
cmps
xchg
scas
sbb
dec
pop
xchg
mov
mov
lods
addr16
popa
(bad)
push
push
cmp
push
jle
test
popf
stos
outs
lea
into
xchg
out
into
(bad)
adc
iret
cmp
lods
jmp
inc
dec
imul
dec
mov
lods
mov
jg
mov
and
(bad)
fild
inc
fidiv
cwde
mov
push
enter
jo
mov
dec
cmps
xorps
lods
cmp
ds
fnstsw
leave
jo
dec
call
dec
ja
jo
push
mov
pop
stos
(bad)
pop
pop
in
mov
in
fist
je
mov
mov
pop
dec
xchg
test
push
pop
stos
adc
pop
inc
adc
(bad)
sbb
pop
pop
or
cmc
pop
movs
lods
es
mov
das
jnp
sbb
in
dec
movs
push
out
test
cwde
pop
cmps
test
cdq
and
sbb
(bad)
push
pushf
lea
in
lods
lea
fs
push
cmps
push
mov
inc
mov
int3
fsub
ror
sti
pop
or
addr16
adc
clc
mov
movs
lods
in
xchg
(bad)
push
popa
dec
push
xor
lds
sbb
sub
mov
mov
data16
(bad)
rol
loope
sub
mov
sub
mov
xchg
mov
adc
in
lods
dec
test
mov
out
cmps
lods
sub
mov
stc
push
push
sbb
pushf
xchg
pop
dec
push
adc
or
test
addr16
rol
pop
ss
int
test
dec
sub
daa
dec
and
and
adc
sti
add
cmp
test
push
cmp
lock
test
dec
inc
cmps
jl
sub
mov
and
adc
ret
mov
test
add
dec
mov
xchg
and
or
inc
cmp
mov
out
imul
dec
mov
mov
mov
inc
out
imul
fiadd
dec
xchg
push
jge
fbld
ret
lods
mov
sub
cmp
pushf
push
xchg
and
daa
xchg
jb
ret
and
daa
mov
stos
xor
rol
jo
cmps
outs
lods
popf
push
aas
xchg
outs
stos
div
int3
mov
sbb
test
mov
sub
pop
outs
das
push
pusha
popf
dec
jbe
or
aam
fisubr
dec
xchg
adc
pop
jmp
mov
jge
fadd
stos
pop
fisubr
jno
dec
int3
scas
mov
inc
pop
xlat
ins
fisttp
sbb
ret
jmp
mov
xchg
sub
mov
rol
pop
ins
daa
sbb
ret
or
sti
jo
adc
aas
loop
jle
jge
ficom
or
mov
pop
mov
mov
scas
push
xchg
clc
mov
mov
jmp
call
cwde
mov
mov
jmp
lahf
cmps
xchg
mov
sub
adc
xor
mov
push
mov
test
cmp
pusha
jp
in
scas
cmp
shr
popa
movs
mov
dec
jmp
fucomp
mov
mov
xor
jno
repnz
mov
aam
addr16
push
pop
repz
retf
outs
pusha
iret
dec
jne
stos
ins
arpl
fnstenv
dec
xor
jg
and
sub
mov
in
mov
add
popf
lock
es
je
xchg
in
lods
push
(bad)
adc
jmp
jns
xor
test
add
inc
sub
adc
dec
cmp
xchg
pop
or
in
jle
call
push
scas
(bad)
mov
dec
sub
cmp
imul
push
hlt
jbe
cmps
inc
scas
ja
xchg
sti
int
ret
das
mov
pop
jo
adc
sbb
jge
(bad)
xor
ss
lds
mov
lods
mov
dec
data16
inc
int3
(bad)
sti
stos
ret
add
mov
scas
sbb
enter
inc
es
rcr
or
sub
mov
xor
fld
lds
and
adc
or
pusha
jg
scas
dec
mov
xchg
scas
push
ficom
iret
add
lods
in
cmps
fstp
fisubr
stos
adc
enter
mov
lods
addr16
mov
js
in
cs
movs
int
in
jns
pop
inc
(bad)
(bad)
xchg
test
cmp
jbe
mov
movs
dec
in
jo
adc
data16
in
pop
bound
mov
int3
ret
mov
jo
repnz
enter
(bad)
push
xchg
or
xor
retf
mov
sbb
ins
xor
sahf
add
clc
mov
pop
add
xchg
das
mov
mov
inc
loopne
dec
adc
dec
jge
xchg
lock
in
lods
(bad)
mov
out
call
xchg
pop
scas
lock
sbb
aad
stc
arpl
jns
stc
mov
sub
ud1
pop
imul
pop
ja
cs
stos
inc
xchg
loope
movs
mov
xor
cmp
cmovo
dec
outs
jmp
movs
out
ins
mov
xor
loop
mov
aam
add
cmp
lods
inc
and
fbstp
fdivr
(bad)
retf
mov
pop
mov
xchg
push
push
mov
cmp
pop
push
scas
ja
or
outs
inc
iret
sti
test
scas
pushf
ss
in
aaa
test
mov
ja
mov
retf
idiv
sar
mov
call
mov
mov
cmp
mov
popf
(bad)
imul
sub
cmp
(bad)
dec
scas
mov
pop
cmps
ficom
pop
int
addr16
daa
psrad
adc
das
mov
dec
imul
fsubr
addr16
mov
repnz
push
cmp
jmp
fild
js
arpl
js
int
test
dec
in
(bad)
iret
push
sahf
mov
enter
es
in
imul
out
mov
mov
mov
mov
cvtpi2ps
std
xchg
inc
pushf
jg
(bad)
loope
or
pop
scas
push
push
in
test
fdiv
call
jp
stos
dec
aad
cmps
(bad)
int3
test
xchg
repnz
clc
lahf
add
fst
aam
pop
or
xor
jle
dec
jne
adc
das
daa
adc
xchg
dec
mov
pop
in
lods
and
stos
mov
sub
jne
pop
mov
and
mov
mov
mov
xchg
scas
in
gs
ret
stos
(bad)
retf
in
mov
xadd
mov
fmul
stos
or
fisub
push
mov
mov
mov
push
les
push
test
xchg
out
gs
shl
dec
or
dec
rcr
(bad)
or
fsub
jecxz
out
test
add
call
mov
cmp
mov
jo
jmp
mov
sub
push
push
movs
cmp
mov
pop
pop
sahf
cwde
iret
lods
jo
arpl
jle
sub
div
movs
fsub
and
test
or
(bad)
aaa
add
dec
mov
mov
add
add
pop
push
mov
jle
shl
loope
aad
out
shl
sbb
and
add
retf
jp
jae
addr16
push
outs
mov
arpl
cmc
push
dec
bound
dec
je
int
add
cli
mov
xor
mov
out
ins
mov
leave
mov
lods
cld
pop
cli
cwde
jle
lods
jae
lahf
ret
nop
pop
push
xlat
xor
and
and
aas
pop
mov
push
mov
xchg
cwde
(bad)
sub
idiv
pop
mov
push
and
sbb
jge
mov
cmp
shr
in
imul
shl
(bad)
not
aad
shl
mov
sbb
inc
pop
mov
sahf
pop
mov
dec
lods
sbb
ja
push
inc
out
xor
test
mov
shr
push
jg
addr16
pusha
cmps
pop
mov
das
ins
mov
aas
je
push
cmp
montmul
cmps
test
iret
stc
fadd
fsubp
xor
cmc
jle
mov
ss
mov
xchg
push
xchg
ror
fs
jmp
inc
rol
xchg
in
xchg
or
pop
call
inc
push
adc
or
imul
or
ins
adc
mov
xor
mov
mov
mov
pop
jae
fldenv
daa
jnp
mov
adc
cli
lea
sbb
nop
or
je
dec
cmps
fwait
and
or
cmps
inc
aaa
cmps
add
mov
pop
xchg
and
ins
adc
daa
jg
push
push
es
or
mov
mov
dec
lds
or
inc
stos
(bad)
jmp
mov
jbe
xchg
ficom
sbb
add
iret
sti
xchg
add
rcr
xchg
les
inc
pushf
shl
or
outs
xchg
(bad)
addr16
or
cmp
imul
call
mov
mov
mov
push
pop
pop
sub
fs
mov
cmc
add
jmp
pop
mov
and
or
lock
fwait
pop
out
and
js
cli
aas
inc
mov
imul
cmps
out
shl
inc
call
scas
nop
out
je
es
add
lods
call
lea
sbb
es
mov
lea
dec
add
or
shl
adc
(bad)
retf
xor
sub
test
lock
jb
fld
in
ret
movs
out
(bad)
imul
add
repnz
popa
cld
adc
ss
mov
mov
rol
in
stc
jns
dec
sbb
or
mov
jno
xchg
daa
xor
push
mov
sar
addr16
fstp
mov
cmp
mov
dec
mov
mov
mov
loopne
ins
ds
fldcw
pop
nop
pop
sbb
pusha
inc
adc
imul
mov
std
out
daa
loop
jb
das
jmp
(bad)
loop
bound
sbb
out
hlt
imul
(bad)
loope
es
(bad)
stc
(bad)
les
mov
xchg
mov
daa
aad
jnp
fst
add
pop
cli
mov
test
jo
push
sti
outs
xchg
mov
cmp
das
or
mov
gs
pop
movs
and
xchg
lods
mov
cmps
nop
lahf
push
std
dec
test
jp
cmp
mov
cmc
lea
xchg
movs
push
ds
(bad)
mov
adc
scas
or
add
adc
cmp
pop
ss
das
cmc
in
xchg
push
pusha
ins
mov
mov
sub
(bad)
retf
stos
mov
movs
jns
mov
cld
mov
outs
jmp
inc
popa
lods
sub
push
add
push
and
sub
ret
mov
mov
and
mov
(bad)
and
(bad)
mov
test
mov
dec
and
mov
(bad)
int3
mov
repnz
and
dec
jmp
imul
sub
sbb
jmp
sub
dec
dec
mov
sub
lea
mov
xchg
ins
imul
test
test
movs
mov
icebp
out
retf
mov
or
push
cli
pop
aas
int
sar
call
mov
je
add
inc
xor
pop
inc
push
mov
adc
mov
out
gs
add
mov
jne
mov
mov
fs
jp
sub
into
fwait
jb
ret
add
mov
mov
(bad)
repz
or
scas
inc
out
retf
fist
pop
mov
mov
je
lods
jns
repnz
xchg
adc
mov
cmp
loopne
jb
xchg
mov
jle
jge
aaa
pop
jns
inc
rcr
imul
mov
jb
sbb
dec
mov
push
push
faddp
mov
stos
test
(bad)
aam
jno
mov
stos
push
mov
leave
cmps
mov
jns
xchg
or
dec
mov
xchg
ins
cld
(bad)
jle
mov
iret
fidivr
lea
add
rcr
ins
std
stc
fisub
hlt
jns
jle
movs
fsubr
cmp
mov
out
mov
or
mov
add
mov
outs
popf
pusha
mov
xor
jmp
pushf
addr16
xchg
cmp
cld
push
lods
icebp
pop
inc
push
sub
cmp
je
jl
xchg
mov
mov
push
mov
rol
jle
cmp
adc
imul
mov
(bad)
xchg
xchg
mov
es
xchg
sbb
adc
int
mov
aas
repnz
dec
neg
push
mov
test
mov
mov
test
test
mov
pusha
add
test
mov
adc
scas
mov
scas
sub
test
popa
mov
scas
stos
mov
cmps
fwait
les
jp
aam
add
loopne
cmps
stos
outs
test
mov
cmp
sub
xor
cdq
jle
inc
scas
push
mov
cli
xor
add
push
cli
scas
scas
pop
sbb
jmp
sub
scas
cmp
lea
data16
pop
push
mov
cmp
(bad)
mov
or
aam
and
test
jbe
mov
imul
call
or
dec
sub
adc
sub
mov
aas
pop
mov
xor
or
cmp
xchg
outs
iret
cmp
mov
mov
cmc
fcom
loopne
xchg
sbb
jle
xlat
hlt
enter
jle
sbb
ins
xchg
cmps
mov
in
dec
xlat
push
js
sub
movs
push
lds
mov
mov
sub
mov
das
jecxz
cmp
mov
in
test
pop
int3
ins
jp
into
ficom
push
aaa
in
mov
lods
or
stos
and
pop
push
pop
dec
es
arpl
xchg
mov
loopne
jge
mov
lahf
cmps
fwait
jp
push
fistp
mov
loop
ja
mov
push
mov
fild
retf
cmp
jge
popf
je
scas
inc
enter
int
pop
push
inc
xchg
nop
add
jle
aas
jno
add
pop
dec
jge
pop
sub
inc
mov
xchg
lea
test
jg
fsub
mov
shl
xchg
jno
mov
push
jo
jp
mov
mov
fmul
(bad)
pop
mov
popf
into
(bad)
mov
mov
mov
and
cmps
and
xchg
(bad)
mov
cli
or
aas
(bad)
sbb
jmp
ret
push
in
push
jge
cmp
fwait
test
cmp
xchg
test
mov
stos
popa
mov
and
ja
out
data16
aad
shr
psrld
out
int3
mov
dec
and
shr
lods
ret
push
mov
mov
(bad)
retf
iret
xchg
stos
jecxz
sub
xchg
js
ja
and
mov
mov
cld
inc
jns
jno
add
sti
jg
out
test
cmps
adc
addr16
stos
cs
xor
mov
dec
jae
adc
jmp
fdivr
mov
aas
xor
icebp
jle
test
(bad)
lods
and
sbb
add
inc
mov
mov
mov
(bad)
push
jb
das
or
jl
sub
clc
ds
cdq
mov
dec
lods
movs
adc
aad
cwde
(bad)
pushf
test
cmp
jle
jg
ja
mov
rcl
jno
outs
xor
mov
xchg
cmp
jg
in
mov
xor
loopne
cmp
adc
lods
(bad)
frstor
mov
fldcw
imul
lods
xor
(bad)
cmp
ret
movs
mov
lods
jnp
in
push
in
inc
mov
dec
aas
pop
repnz
in
ja
call
or
scas
dec
mov
or
add
sar
(bad)
push
in
lds
das
mov
fsubr
push
jg
cld
in
sub
fcomp
es
pop
lods
and
es
mov
aad
fisubr
mov
cmps
call
adc
std
cmp
mov
lea
stc
arpl
xchg
fdivr
pusha
je
lods
mov
xchg
mov
cs
push
sbb
stos
ret
add
jb
xor
inc
sbb
dec
jp
and
sahf
dec
push
or
xchg
fwait
ja
mov
sub
adc
mov
pop
dec
jp
(bad)
cmps
sar
pusha
shl
scas
push
pop
(bad)
and
stc
dec
call
xor
jg
jnp
fdivr
mov
xchg
(bad)
pushf
jmp
and
loopne
cmps
cmc
out
sbb
dec
movs
sbb
out
or
shl
inc
pop
cmp
jmp
arpl
or
lea
jae
mov
not
mov
addr16
sahf
shl
and
jae
fsubr
ret
mov
aaa
bnd
pop
(bad)
pop
xor
mov
test
adc
out
(bad)
imul
jbe
lahf
std
cmp
test
ror
ins
sub
aaa
es
(bad)
mov
sbb
push
std
jnp
and
inc
adc
outs
ins
sub
lods
sbb
mov
sub
div
inc
inc
inc
imul
adc
cmp
rcr
pop
mov
jmp
add
jle
(bad)
not
cld
jns
push
mov
xlat
bound
fsub
mov
push
dec
out
push
(bad)
lods
stc
inc
push
mov
jp
nop
mov
movs
mov
fisubr
ins
add
add
jo
fistp
popa
xchg
adc
std
ja
js
xchg
jge
packuswb
inc
jle
enter
aad
jg
push
sbb
retf
mov
mov
test
in
imul
ds
fs
sub
sub
or
add
jno
mov
jnp
retf
lahf
cmps
lds
mov
retf
mov
daa
pop
hlt
push
push
mov
test
fucom
test
das
cmps
xchg
(bad)
push
mov
jg
mov
inc
push
pop
test
repz
arpl
data16
inc
pop
jnp
aas
scas
icebp
or
pop
in
pop
push
mov
mov
cmp
xlat
xor
mov
push
mov
jne
repnz
adc
jb
jmp
mov
lock
mov
ror
stos
arpl
shl
mov
pop
(bad)
jno
pop
mov
mov
stos
add
or
jge
cmp
or
popa
das
loop
pop
xor
jbe
int3
fwait
and
cmps
xor
and
xchg
pop
pop
ja
test
addr16
jae
sbb
into
je
jo
jo
or
mov
and
cdq
jne
add
ins
retf
cli
sub
sub
vphaddwd
int3
adc
mov
das
mov
test
adc
xchg
int
lahf
sub
cmp
pop
and
ja
dec
mov
out
cmps
ret
int
jb
(bad)
jnp
into
mov
mov
mov
add
sub
push
jl
pushf
repz
fisttp
sbb
mov
dec
add
cmp
les
xor
daa
mov
sbb
ins
scas
clc
adc
ins
lods
clc
sbb
retf
xchg
adc
push
daa
push
push
sar
je
sbb
mov
int
mov
fwait
cmp
in
push
test
add
fisttp
push
or
cmp
or
gs
in
inc
in
js
push
shr
push
adc
stc
loope
mov
scas
sub
xchg
cmps
out
outs
(bad)
sbb
fdecstp
sbb
out
pop
fs
mov
sbb
inc
leave
scas
xchg
les
ss
push
jns
fistp
adc
(bad)
lahf
pop
cmps
add
lahf
jmp
jnp
adc
and
(bad)
adc
aad
push
mov
jl
jns
aaa
xlat
sbb
mov
and
cmc
xchg
fistp
loop
std
push
dec
movs
add
daa
sub
dec
cmps
(bad)
pop
int
sub
jno
sub
je
mul
fcmovb
or
jp
pusha
mov
mov
mov
jbe
pop
mov
or
lea
lahf
int
test
dec
sub
fdivp
stos
sbb
mov
enter
mov
(bad)
pop
gs
test
pop
push
jp
adc
aam
mov
mov
(bad)
sti
ret
clc
xor
sahf
jno
mov
clc
jo
nop
mov
inc
adc
pusha
test
dec
xor
rcl
sbb
out
lds
dec
int3
gs
ret
add
lods
and
idiv
fild
rcr
dec
ret
add
mov
jle
inc
jecxz
stos
addr16
retf
and
pop
or
fld
jg
sub
lds
adc
loop
dec
mov
mov
jle
push
pop
dec
in
sub
cmp
or
mov
xchg
lahf
popa
sahf
pusha
jle
ins
xchg
loope
mov
add
dec
mov
adc
lahf
das
adc
cmc
shl
mov
ror
data16
mov
ror
gs
push
or
or
mov
popf
iret
mov
jae
outs
cmp
jp
arpl
rol
mov
popa
jmp
mov
and
dec
mov
test
mov
jnp
fstp
imul
add
xchg
sub
adc
imul
cmc
icebp
mov
ds
cmps
(bad)
shl
dec
add
push
call
and
out
ss
scas
outs
int
inc
mov
and
mov
pop
imul
cs
into
xchg
scas
pop
jg
test
icebp
std
jge
inc
mov
sbb
mov
gs
push
mov
retf
les
jns
hlt
dec
into
mov
add
sbb
test
fcom
add
lea
outs
add
mov
mov
and
xchg
cli
in
iret
imul
iret
jle
mov
dec
movs
xchg
adc
mov
xor
push
jno
cmps
stos
(bad)
std
dec
out
cli
and
add
stos
cmp
xchg
sub
mov
pop
aas
dec
ja
sub
dec
and
outs
(bad)
pop
stos
cs
stos
test
sub
int
cli
fld
xor
cmp
sub
rcl
or
pop
lods
aam
movs
cmps
pop
movs
imul
lock
test
xor
cmc
sub
iret
fimul
loopne
scas
es
pusha
call
pop
xchg
pusha
pop
fwait
cld
mov
loopne
(bad)
mul
and
mov
sbb
mov
push
ss
cmp
cwde
mov
mov
sbb
mul
in
cmp
and
cmps
push
ins
add
mov
or
addr16
cld
adc
icebp
nop
leave
scas
xchg
pop
mov
daa
push
daa
mov
mov
pop
sbb
fwait
jmp
addr16
in
sbb
ret
adc
sub
repz
pop
sub
rcr
sbb
cdq
add
addr16
lods
and
mov
sbb
fcmove
sub
add
lods
rcr
mov
ja
popaw
mov
(bad)
pop
retf
pop
ret
ss
sbb
cmps
in
ins
ins
jb
aam
imul
pusha
imul
jge
pop
ins
push
ss
push
in
mov
js
lods
mov
adc
(bad)
mov
or
dec
pop
mov
xchg
xlat
icebp
sub
and
cmp
dec
xor
jns
cmp
pusha
fcmovb
sub
jno
enter
add
int
add
call
hlt
js
test
cmp
pusha
aam
(bad)
(bad)
fisubr
xchg
pop
fistp
scas
xchg
cli
out
repz
scas
lock
dec
mov
cmp
cmc
movs
imul
jns
mov
cmps
or
ins
ds
je
xlat
jmp
dec
cmc
jne
cmc
inc
sahf
pop
mov
lea
jbe
or
sub
out
std
push
cmp
xchg
addr16
mov
sbb
mov
cdq
das
mov
adc
xchg
in
imul
xchg
jae
or
das
dec
xchg
and
push
cmps
jmp
rsqrtps
cli
cmp
push
xchg
sub
push
sbb
dec
cmp
test
stos
fsubr
mov
(bad)
fnsave
sub
test
sub
div
imul
add
movaps
fild
lock
mov
cmp
xlat
popf
dec
fld1
adc
(bad)
jmp
mov
pop
mov
gs
out
and
push
inc
dec
sbb
and
aam
out
into
pushf
std
push
jo
sub
(bad)
hlt
fdivr
loope
in
(bad)
jbe
mov
aad
jl
fwait
jno
sbb
pop
mov
dec
or
xchg
cdq
xor
mov
or
xor
xchg
and
lods
lds
jo
sbb
push
nop
sbb
adc
inc
ss
mov
sti
scas
xchg
(bad)
push
dec
cmp
data16
jp
ds
pushf
sbb
push
fdiv
mov
daa
jo
ror
jb
movs
je
lds
ret
push
adc
movs
(bad)
or
xor
(bad)
and
push
sti
mov
scas
ins
imul
and
(bad)
cs
imul
dec
cmc
inc
cmp
push
in
mov
sbb
movs
inc
repnz
jl
retf
mov
add
push
scas
jl
sbb
cmp
mov
jae
xchg
cmps
jg
jnp
call
xchg
repnz
iret
adc
sahf
mov
jg
mov
fcomp
xor
pop
cmp
pop
mov
sbb
and
fldenv
ret
mov
and
mov
ja
and
mov
imul
cmp
cmp
add
cmp
movs
sbb
add
call
jb
add
jle
lea
fnstenv
stos
jmp
test
pop
cmps
and
clc
sub
mov
xor
std
xor
push
mov
add
ds
push
ficom
push
xor
inc
adc
mov
std
add
and
ins
mov
fcom
stos
pop
nop
jp
dec
and
mov
ret
jne
pop
ins
dec
cmps
push
pop
xor
out
sbb
iret
in
out
hlt
(bad)
ins
(bad)
in
mov
jb
retf
stos
inc
call
jecxz
neg
jns
jb
add
lea
aas
fmul
dec
cmps
jmp
cmps
push
inc
(bad)
es
repnz
cmps
cmp
push
inc
movs
jo
ret
cmp
lea
xchg
add
fisubr
mul
aas
mov
test
nop
xchg
sbb
mov
or
jmp
mov
test
mov
xchg
add
int
inc
lds
std
and
mov
cmp
ja
jp
(bad)
ins
cwde
jle
std
into
imul
dec
sub
fwait
or
adc
aaa
cmp
adc
sub
movs
aam
ja
lods
xchg
adc
jl
adc
dec
mov
mov
inc
sti
and
in
mov
jl
cmps
imul
movs
ins
mov
inc
stos
js
jp
pop
scas
pop
bound
ds
cmp
and
out
push
iret
aaa
mov
(bad)
jnp
ror
cmps
pop
push
out
arpl
aas
mov
sbb
and
jp
lds
arpl
outs
out
push
sub
icebp
loop
xchg
sub
cmp
xlat
movs
pop
popf
push
popa
in
add
dec
outs
lods
(bad)
cmp
inc
scas
jns
pop
cmp
js
cli
mov
test
sbb
mov
push
fidivr
push
jns
fldcw
ficomp
push
cmps
mov
es
pusha
jbe
mov
mov
fcmovnbe
or
sahf
mov
stos
push
fsubr
test
and
imul
pop
pop
cdq
inc
in
mov
jb
movs
shr
cmp
inc
mov
addr16
in
push
repnz
cmps
cdq
pusha
ss
cli
je
dec
fistp
sti
dec
loopne
out
cmp
movs
addr16
jno
cmp
jne
push
shl
sub
scas
mov
pop
jl
sar
sub
mov
pop
mov
jmp
mov
mov
jb
mov
pop
test
imul
mov
inc
dec
ins
mov
mov
test
movs
mov
repnz
push
sbb
jne
pop
movs
retf
dec
mov
mov
shl
jne
sub
jne
lea
and
or
in
jle
imul
mov
sub
dec
fs
stos
ja
dec
or
jb
jg
dec
ins
mov
arpl
push
bound
(bad)
xor
(bad)
cwde
pop
je
pop
sbb
pusha
repnz
aaa
test
cwde
jg
xchg
gs
popf
scas
and
push
mov
push
fadd
bound
pop
inc
imul
xchg
xchg
sub
jl
xchg
pop
sti
add
mov
and
jae
mov
sub
adc
and
ins
pushf
shl
and
jl
add
jg
lock
lahf
jp
movs
ds
mov
mov
lods
jo
cmps
push
pop
ja
(bad)
xor
imul
je
or
and
(bad)
sbb
movs
mov
adc
pop
xchg
lds
dec
and
adc
aaa
data16
daa
xor
cs
stos
in
xlat
les
dec
ficomp
(bad)
lods
arpl
aas
sub
xor
cmps
mov
cmps
mov
adc
ret
sti
xor
retf
aas
fwait
jne
adc
fdiv
bound
jecxz
aas
dec
mov
adc
jecxz
mov
out
stos
xor
jp
bound
pop
pop
leave
or
adc
push
leave
push
mov
stos
es
test
mov
and
ds
scas
cmps
cmps
in
das
cmps
cmp
mov
stc
rcr
mov
mov
adc
mov
shl
jp
push
sub
imul
sti
and
test
adc
inc
mov
ins
and
rol
mov
pusha
sahf
xchg
jno
mov
mov
mov
sbb
xor
or
jl
and
jge
cmc
fisub
std
cdq
or
jnp
inc
mov
out
mov
mov
xchg
movs
das
aam
movs
sub
outs
stos
push
pop
stc
or
jge
mov
and
sbb
retf
sub
mov
xor
movs
arpl
and
addr16
cs
popa
stos
mov
lods
loope
mov
fisttp
cmp
lock
arpl
leave
(bad)
imul
dec
popf
movs
mov
cmp
ds
movs
fist
lds
ins
fstp
retf
push
lods
stos
cs
cmps
pop
or
push
nop
(bad)
xchg
int3
pushf
out
xchg
sub
data16
fs
pop
setno
sub
lahf
push
dec
stos
movs
xchg
push
mov
outs
mov
add
jne
jne
lods
mov
scas
jb
jne
mov
xor
call
aam
pusha
bound
push
mov
xchg
pop
xchg
push
and
lock
ja
inc
jno
aaa
adc
daa
lods
(bad)
int3
mov
or
outs
test
push
jnp
mov
jno
push
mov
jge
pop
or
jmp
dec
cmp
jae
xor
ror
and
sub
cdq
mov
pop
jmp
add
test
xor
jecxz
dec
jmp
inc
or
or
pop
mov
pop
or
push
bound
sub
or
mov
cld
mov
xlat
mov
outs
jmp
xor
dec
enter
push
pop
(bad)
jge
mov
xor
stos
mov
jecxz
int
mov
mov
pop
pop
adc
and
sar
aas
adc
fadd
inc
ret
ins
aam
adc
mov
ds
mov
int3
dec
jns
pop
push
xor
lock
push
sub
in
cmp
cmps
cmp
add
aaa
cmp
cmp
(bad)
shr
mov
push
pop
push
fmul
xor
inc
mov
dec
xor
ret
(bad)
retf
scas
cmps
pop
cmps
pop
add
ja
shr
jbe
push
cld
ret
mov
lods
push
push
scas
(bad)
cmp
mov
cs
sbb
in
cdq
stos
fst
push
pusha
mov
dec
pop
jle
retf
vpsubd
daa
iret
xor
dec
pop
xchg
mov
mov
add
jbe
mul
jo
in
std
and
pushf
and
lahf
mov
cmp
jo
push
cmp
test
mov
push
lea
push
stos
mov
xor
cmps
nop
adc
jl
xchg
mov
dec
imul
retf
cmp
jp
cmp
jle
dec
cmp
imul
mov
js
mov
retf
cmp
aam
fldenv
popa
in
mov
fld
push
add
cwde
(bad)
xchg
sbb
outs
popf
cmp
lds
es
mov
dec
and
adc
fs
pop
xchg
in
xchg
movs
jmp
icebp
ffree
inc
add
frstor
dec
(bad)
(bad)
in
popa
adc
mov
aas
scas
movs
test
test
mov
(bad)
(bad)
sbb
retf
push
pop
jle
dec
enter
out
int
push
pushf
push
pop
pop
int3
repz
arpl
dec
lds
neg
aad
and
inc
aaa
imul
inc
data16
outs
movs
cmps
lds
add
pusha
xor
sbb
xchg
mov
mov
addr16
aas
pop
sbb
jnp
jmp
test
es
mov
push
sub
ror
dec
pop
xchg
lods
jno
scas
addr16
ret
lahf
add
mov
xchg
xchg
fild
in
lds
push
(bad)
cmp
aaa
pop
addr16
pusha
clc
movs
dec
push
repz
retf
jno
inc
mov
mov
jecxz
mov
adc
sbb
dec
jg
push
mov
cmps
dec
xor
push
mov
mov
sub
add
lods
adc
std
dec
push
in
aam
and
in
xchg
jp
loop
add
daa
xchg
and
ins
sub
lds
adc
cmp
arpl
or
xchg
mov
sub
xchg
or
jo
or
retf
pop
xor
iret
sar
dec
stos
mov
data16
in
dec
mov
mov
and
imul
(bad)
cld
xchg
add
lea
xor
lea
and
cmp
scas
jne
out
jg
fsincos
adc
std
scas
and
and
lahf
xchg
(bad)
push
call
or
mov
push
mov
pop
ins
and
cmps
sbb
or
movs
es
les
js
jg
adc
push
pop
js
xchg
adc
cmc
ror
mul
lahf
mov
fistp
imul
ret
jmp
cmc
int
cdq
fadd
jecxz
sub
mov
and
mov
pop
mov
loope
pop
mov
aad
ins
ins
cwde
sahf
xchg
int3
mov
jo
je
jbe
xor
adc
and
jno
dec
into
pusha
pop
fidiv
lods
xchg
pop
and
adc
retf
out
out
jno
push
lods
cmp
jnp
push
outs
mov
sub
(bad)
addr16
movs
cmps
xchg
xor
sub
cmc
mov
push
ins
mov
dec
inc
or
stos
mov
in
mov
imul
fistp
pop
int
jl
jne
xchg
aam
es
int
fisubr
sub
push
dec
mov
repz
fs
out
cmp
dec
test
cmps
sbb
pop
or
lds
mov
mov
(bad)
dec
cmp
arpl
push
jo
js
lea
(bad)
fwait
xor
cli
jle
cmps
scas
jmp
xor
mov
(bad)
xchg
sbb
retf
and
test
shl
pop
scas
(bad)
loope
(bad)
xor
jge
int
icebp
pop
cs
lods
xlat
fs
or
imul
fdivr
popa
imul
cmp
pusha
jge
cmp
shl
mov
bound
sbb
test
sbb
fucom
adc
xchg
dec
iret
inc
push
sahf
or
daa
cmc
fstp
cs
xor
or
mov
aad
xchg
out
cli
fsub
stos
stos
pop
jns
mov
or
dec
and
std
xor
pop
scas
es
sti
fnstsw
and
cmc
xor
xchg
inc
popa
add
jno
push
mov
leave
ins
cmp
ds
retf
mov
add
xor
gs
fisttp
add
cmp
inc
outs
mov
in
iret
popf
mov
xchg
or
pop
mov
pop
cmps
jo
sub
lds
mov
xor
sbb
push
gs
ret
sar
jg
pop
daa
jno
gs
lock
jge
std
pshufw
daa
jp
jmp
add
test
repz
jne
add
xchg
sub
movs
out
mov
retf
sub
push
scas
sbb
leave
jo
push
dec
stos
iret
popf
test
mov
scas
adc
cmp
jp
mov
jne
movs
push
pusha
jl
sbb
xor
enter
push
mov
mov
add
jns
push
fld
mov
ret
loop
dec
cs
sbb
sub
stos
push
lods
pop
imul
or
cmps
clc
enter
mov
and
std
retf
hlt
and
(bad)
cmp
jle
mov
or
lea
and
(bad)
sub
add
pop
mov
cmp
mov
jg
xchg
lods
in
fwait
mov
cmc
pop
xchg
retf
or
fidivr
(bad)
adc
dec
mov
or
popa
mov
test
imul
lahf
lods
jl
stos
jle
(bad)
sar
outs
adc
mov
out
adc
ret
fsub
aaa
mov
jl
ds
dec
sub
mov
sub
mov
dec
fwait
mov
xchg
pushf
cld
mov
pusha
adc
mov
in
mov
and
mov
psubb
push
inc
mov
jo
mov
jg
mov
push
or
outs
inc
stos
xor
add
out
mov
imul
leave
xor
or
inc
jmp
lea
sub
jg
inc
nop
je
movs
std
cdq
push
mov
dec
push
mov
push
(bad)
(bad)
jl
ret
push
cdq
push
fldcw
fsubr
(bad)
stos
jle
mov
mov
xor
add
dec
push
push
mov
test
lahf
ret
and
inc
lds
push
mov
mov
aas
mov
pop
xchg
ret
out
out
addr16
pushf
jb
jae
stos
xchg
(bad)
out
ficom
loopne
pop
ficomp
(bad)
nop
(bad)
mov
xlat
jp
mov
sti
add
mov
out
loop
int
xor
fnsave
sbb
retf
push
sub
in
movs
and
push
stos
or
cwde
mov
out
(bad)
pushf
fwait
jp
stos
xchg
out
scas
sti
test
mov
fwait
push
sahf
push
push
sub
pusha
cs
cmps
inc
fsubr
cwde
test
bound
xor
jb
mov
mov
cmps
mov
pop
les
pop
xchg
add
cmps
daa
nop
xor
or
mov
mov
aas
ja
cli
add
push
fcmovnb
mov
cli
ffree
push
xor
cs
cmps
ins
xchg
pop
sbb
xchg
ja
sbb
test
mov
neg
es
ret
test
fistp
mov
mov
cmps
ficomp
pusha
sar
mov
jl
jle
outs
jp
lods
lahf
mov
mov
movs
popa
mov
fidiv
xchg
repnz
dec
add
and
mov
jp
fsubrp
cli
cmc
mov
inc
bound
adc
jmp
enter
mov
adc
loopne
es
mov
dec
cmp
movs
mov
or
mov
cmps
arpl
jbe
ficomp
dec
movs
out
ja
cmc
mov
pop
aad
and
test
loope
daa
jo
jns
scas
neg
sahf
lahf
call
jae
aam
cwde
sub
(bad)
push
cmps
mov
cmp
sub
jg
push
leave
outs
push
or
hlt
pop
fwait
mov
test
imul
js
ret
addr16
cmps
mov
jns
stos
inc
push
test
jbe
in
jle
pop
dec
and
sahf
mov
mov
or
inc
aas
or
mov
ret
xchg
jbe
scas
cmp
in
xchg
mov
fidiv
in
pop
test
ja
or
shl
mov
mov
inc
or
addr16
mov
mov
inc
push
iret
inc
pusha
aas
mov
pop
mov
loope
jno
inc
mov
mov
inc
iret
xchg
xchg
sub
mov
xchg
adc
inc
sahf
mov
jle
mov
punpcklwd
push
lds
sar
add
or
repnz
sub
mov
rol
sub
mov
aaa
inc
xor
jp
(bad)
jmp
and
loope
rcl
int3
cld
pop
push
mov
sub
cli
int
int
add
shl
scas
ins
sub
pop
mov
push
and
(bad)
xchg
not
push
jo
jmp
mov
(bad)
dec
lods
mov
test
rcl
push
mov
and
mov
xchg
out
mov
xor
dec
(bad)
shr
icebp
pop
test
fwait
in
(bad)
ret
adc
dec
je
test
xchg
loop
and
mov
cmp
fbld
mov
sub
mov
in
mov
mov
dec
sbb
outs
xchg
pop
fnstsw
movs
fld
mov
data16
outs
fsubr
jo
fidivr
je
and
fisttp
shr
jle
mov
call
mov
idiv
push
sub
jge
mov
mov
mov
add
cdq
cs
inc
pop
test
adc
in
sbb
mov
lea
mov
xor
adc
jle
scas
pop
dec
test
mov
test
ret
movs
mov
aad
rcl
in
es
push
mov
int
scas
and
mov
cmp
movs
mov
mov
push
es
mov
or
push
and
push
scas
adc
stos
dec
mov
or
dec
mov
push
aam
outs
cdq
stos
mov
into
stos
addr16
ror
jl
adc
loopne
shl
scas
int3
call
ss
sub
or
add
mov
pop
arpl
mul
out
dec
xchg
jge
pop
popf
mov
scas
dec
and
xchg
std
sub
xchg
cmps
outs
mov
mov
mov
dec
sete
inc
fisubr
ret
fiadd
(bad)
push
push
fld
jb
invlpg
int3
lods
sub
push
das
std
out
dec
rcl
mov
shl
iret
xor
scas
sahf
(bad)
lods
mov
push
scas
scas
and
ss
in
test
int3
fisubr
sub
out
fdivr
int
mov
push
pop
xchg
ret
lods
adc
add
ret
out
mov
mov
xchg
movs
mov
popa
cwde
push
imul
jp
and
jae
and
mov
jbe
xor
mov
pusha
es
test
jno
fwait
push
mov
lods
cmc
inc
xor
mov
in
and
aad
adc
push
mov
push
rcr
xchg
fs
(bad)
retf
mov
(bad)
into
out
(bad)
cli
shr
call
push
aad
cmp
mov
xchg
mov
(bad)
cmps
mov
test
aas
mov
in
and
push
inc
outs
sub
mov
and
and
lods
and
lea
imul
jae
push
call
cld
mov
jmp
mov
ss
ror
jo
xor
and
jns
mov
xchg
dec
and
xchg
imul
xchg
jle
inc
dec
xor
jb
or
jbe
add
jle
arpl
xchg
lods
mov
sbb
sub
pop
fwait
movs
outs
cmp
add
push
movs
test
mov
inc
ja
xor
inc
cld
or
fmul
mov
jbe
(bad)
retf
out
jge
ret
inc
cmp
mov
addr16
push
ds
movs
shl
aas
pusha
retf
popa
mov
sbb
call
ror
lds
add
imul
out
add
and
or
inc
outs
sbb
and
lds
ret
retf
xchg
(bad)
(bad)
cdq
pop
jle
in
mov
sbb
fsub
sbb
sub
rcr
scas
or
popa
arpl
dec
aam
(bad)
adc
ds
jle
mov
aad
or
xchg
out
daa
dec
nop
out
pop
jno
adc
cld
mov
xor
stc
shr
int3
ja
push
jno
jae
jp
add
dec
jmp
pushf
fmul
mov
mov
daa
icebp
jnp
in
pop
lods
aam
lods
mov
ins
mov
push
lea
mov
jo
xchg
movs
cmps
sub
fdiv
jae
mov
mov
xchg
sbb
popf
mov
jae
(bad)
ds
(bad)
ins
iret
int
(bad)
push
jmp
mov
xchg
stc
lea
movs
cmp
mov
sar
scas
add
rol
movaps
lods
push
ret
jl
outs
out
xor
jae
retf
mov
fs
outs
test
mov
ins
mov
cmps
mov
jmp
xor
sbb
arpl
lea
push
loop
inc
call
imul
ins
inc
mov
cmps
stc
out
mov
push
jmp
shr
mov
xchg
out
les
mov
in
shl
in
lods
xchg
dec
mov
dec
xor
add
push
dec
dec
pop
clc
sbb
or
xchg
cld
loope
fcomp
jge
ret
jmp
sub
dec
clc
dec
fwait
jae
pop
movs
sar
xchg
call
lock
mov
xor
pusha
aas
fwait
lods
mov
(bad)
pop
push
or
movs
dec
pop
and
jo
nop
xchg
dec
es
sub
adc
xor
out
mov
add
iret
mov
mov
les
icebp
mov
mov
mov
and
jmp
jae
(bad)
jns
cwde
pop
xchg
mov
xor
lock
test
jg
fstp
mov
dec
shr
mov
sti
scas
in
dec
adc
je
daa
jns
cmp
call
gs
jl
shl
mov
jle
cld
mov
mov
inc
pop
shl
out
sub
out
dec
jmp
retw
fbstp
xor
imul
ja
push
push
and
xchg
add
lods
pop
push
jmp
shl
push
fist
test
(bad)
or
mov
das
iret
pop
stos
lods
sub
push
jmp
rdmsr
xchg
dec
mov
mov
imul
xor
sub
jp
adc
movs
push
mov
mov
outs
jp
int
dec
sub
lahf
push
test
xor
push
jne
inc
ja
ror
push
cmc
(bad)
adc
ret
stos
sbb
iret
int3
push
or
sbb
mov
sbb
ins
jo
mov
jb
mov
jb
mov
imul
jmp
hlt
(bad)
idiv
std
mul
cmps
fwait
pop
sbb
scas
es
es
mov
out
daa
mov
stos
jo
mov
push
mov
inc
xchg
mov
stos
call
push
mov
clc
xor
js
jae
lahf
outs
push
mov
movs
mov
mov
mov
daa
pop
mov
xchg
sub
jno
inc
sub
and
add
dec
cmp
cmp
and
cmp
jmp
aaa
pushf
lock
pop
fidiv
jno
es
sub
imul
cmps
xchg
retf
cmps
(bad)
push
adc
fwait
pop
inc
mov
popf
ret
fisub
pop
fild
add
daa
xchg
jmp
mov
jae
add
mov
(bad)
les
add
movsx
daa
inc
sub
or
jb
pop
mov
stos
jo
mov
adc
lods
cmp
jle
mov
int
cdq
jp
in
and
jnp
lods
nop
jge
lahf
scas
(bad)
mov
push
cmc
mov
adc
xchg
test
les
movs
cmp
ja
lods
js
shl
xchg
in
jns
dec
push
test
inc
xchg
cwde
aad
mov
fxsave
add
lods
daa
adc
(bad)
xor
cmp
and
div
mov
sbb
sbb
cli
cmc
or
test
cmp
(bad)
mov
mov
mov
out
enter
jge
add
mov
icebp
pop
scas
std
and
int
jnp
test
add
stos
mov
mov
pop
jae
dec
mov
mov
sub
js
xlat
imul
add
mov
in
inc
ss
jns
data16
push
fs
push
aaa
ja
and
sub
test
scas
std
xchg
lea
(bad)
out
add
ds
dec
les
cmp
(bad)
or
add
jmp
mov
jg
push
sub
(bad)
fnsave
cmc
test
(bad)
and
sbb
addr16
jmp
jp
out
mov
sub
out
inc
xchg
mov
ret
pusha
pop
inc
jmp
stos
imul
(bad)
(bad)
das
cmp
scas
fwait
pop
mov
mov
lahf
push
test
out
lea
mov
jnp
inc
push
mov
mov
push
ret
shr
lods
into
pop
mov
stos
push
mov
rcl
jnp
sub
dec
and
cmps
mov
mov
mov
fnstenv
mov
sahf
in
in
inc
scas
adc
stos
adc
cwde
push
das
xor
jno
je
sub
dec
sub
mov
mov
sbb
inc
xchg
xchg
push
pusha
adc
inc
jb
inc
retf
ret
xor
push
movs
xchg
fcom
lahf
mov
xchg
cs
es
ja
outs
inc
push
outs
add
adc
and
inc
stos
xchg
ins
cmp
test
sub
aas
xchg
mov
sbb
xchg
lock
sub
pop
fwait
mov
test
inc
mov
inc
das
(bad)
gs
and
jno
je
mov
dec
test
inc
mov
stos
ret
stos
mov
and
mov
cmps
inc
(bad)
jns
cmp
jmp
push
es
jle
xor
or
mov
inc
push
addr16
mov
mov
test
inc
mov
inc
movs
jle
mov
adc
call
sbb
add
addr16
imul
add
adc
in
dec
paddb
ins
sbb
xchg
push
out
in
pop
movs
mov
xchg
ins
shl
xchg
scas
mov
into
xchg
pop
mov
and
push
or
aas
pushf
(bad)
sub
and
cmp
jge
pop
cmp
push
cmps
sar
(bad)
pop
ins
in
imul
sub
jge
sbb
mov
pop
mov
cmp
dec
scas
stos
scas
in
push
iret
sti
push
adc
xrelease
mov
jnp
lds
push
sub
imul
mov
(bad)
arpl
out
mov
mov
mov
pop
outs
dec
mov
cs
ret
cld
ret
cmps
cli
retf
jmp
imul
aam
mov
add
and
sub
test
pop
movs
stos
call
mov
mov
scas
mov
or
xor
sbb
push
and
(bad)
fnstsw
pushf
mov
scas
out
mov
test
leave
xchg
(bad)
jo
or
popf
mov
scas
mov
jns
data16
push
aam
lahf
jbe
test
pop
cs
mov
sub
and
and
retf
pop
fsub
movs
mov
pop
mov
(bad)
mov
test
lods
dec
pop
mov
mov
mov
sub
lahf
sub
mov
imul
push
sbb
mov
mov
test
sub
xchg
push
mov
or
test
mov
test
clc
inc
jns
scas
arpl
in
sub
jl
loop
jp
mov
jns
inc
call
(bad)
dec
rcr
fist
pop
mov
shr
ret
push
cli
leave
lods
mov
in
cwde
jae
mov
aam
daa
outs
cdq
sub
add
xchg
xchg
and
and
dec
push
je
mov
sti
add
jns
mov
push
(bad)
or
or
fld
mov
jp
hlt
adc
jnp
jae
mov
sbb
cmp
dec
jo
xchg
xchg
pusha
mov
sbb
pop
inc
mov
int
pop
add
gs
add
jp
fs
jo
imul
jp
sbb
jl
fdiv
and
rcr
retf
addr16
sbb
xor
ins
test
pop
pop
push
out
mov
jl
jl
fwait
imul
mov
jecxz
leave
out
(bad)
rcr
adc
jmp
fmul
in
mov
xor
jle
push
mov
stos
adc
pop
lahf
cmp
test
add
add
(bad)
jle
xchg
popa
mov
pop
addr16
mov
dec
ss
pop
dec
push
fadd
stos
push
cmp
cmp
mov
and
cwde
mov
pushf
fdivr
(bad)
cmps
shl
add
mov
call
xchg
pop
leave
mov
loope
xor
dec
push
cmps
data16
lds
cmp
pop
daa
pop
mov
stos
test
xlat
xor
rol
adc
or
add
outs
cmps
xchg
pop
dec
xchg
es
xchg
xchg
and
(bad)
(bad)
ficom
jb
sar
jb
(bad)
pop
ja
lods
in
mov
lods
(bad)
sub
mov
pop
fdivp
imul
icebp
imul
cmp
or
add
imul
daa
or
mov
mov
or
jmp
test
mov
call
lahf
test
aas
rol
outs
xchg
xor
and
stc
ja
sub
cs
xor
xor
das
sub
aam
cmps
and
sub
ret
mov
(bad)
ds
mov
mov
test
imul
mov
(bad)
es
movs
mov
adc
and
push
jae
ret
and
mov
cdq
pop
xchg
fdivr
ss
scas
out
pop
mov
mul
jg
mov
jg
add
sub
sub
(bad)
dec
push
sbb
movs
in
(bad)
sub
fs
loopne
jo
std
cmps
mov
xor
xor
mov
sbb
jno
jg
js
mov
(bad)
push
mov
xor
mov
pusha
jae
mov
neg
mov
es
test
jle
mov
xchg
dec
mov
aam
shr
arpl
mov
mov
gs
out
push
sbb
push
jp
cmp
aaa
and
outs
xchg
test
cli
or
inc
(bad)
aas
mov
in
or
imul
ret
repnz
cli
mov
sar
loope
jle
cmps
pop
adc
mov
aad
sbb
int
fldcw
xlat
mov
cmp
xchg
cs
mov
sbb
ret
jp
and
addr16
cmp
ja
lea
out
js
(bad)
mov
out
jl
cmp
add
add
je
test
in
nop
jnp
pop
aad
jmp
lahf
test
(bad)
pop
sub
and
and
mov
mov
mov
mov
lahf
ja
pop
push
pushf
xchg
jle
stos
aam
pop
mov
mov
xchg
pop
add
cmp
cmp
stos
mov
mov
and
arpl
sub
jnp
sub
jns
sub
pop
out
push
sbb
ins
jg
mov
fs
xchg
xor
fs
ret
nop
push
cli
xor
lods
(bad)
movs
je
push
fmul
retf
(bad)
mov
jecxz
sub
xchg
icebp
lods
in
imul
in
retf
mov
mov
arpl
xchg
xor
mov
call
(bad)
in
mov
sbb
cmc
pop
daa
outs
pop
test
fs
enter
pushf
xchg
call
adc
cmps
fsub
mov
mov
frndint
lea
jmp
sub
stos
(bad)
iret
sbb
sar
lods
mov
imul
mov
aaa
sbb
fild
xlat
cmc
mov
ret
in
(bad)
iret
test
and
cdq
add
mov
inc
mov
gs
fst
test
pop
inc
repz
jo
pop
push
jl
push
or
xchg
idiv
fst
mov
mov
pop
dec
scas
out
mov
fdiv
jp
mov
push
popf
cs
jmp
in
test
mov
mov
test
inc
scas
(bad)
cmc
jge
jl
pop
sub
scas
jo
and
xchg
(bad)
jmp
sub
adc
clc
call
popf
mov
lea
jne
pop
ins
pop
fldln2
int3
pushf
repz
(bad)
imul
adc
out
jbe
and
sub
and
push
ss
mov
test
retf
cmp
push
sbb
xor
ror
into
fsubr
scas
xor
repnz
or
mov
mov
jae
inc
test
popa
pop
jno
xchg
mov
xchg
addr16
(bad)
popa
mov
jno
div
fisub
cmp
mov
arpl
mov
clc
inc
call
addr16
mov
xchg
dec
mov
jne
lahf
pop
push
lods
xor
out
les
out
ja
dec
outs
mov
and
or
(bad)
lea
fwait
add
mov
and
imul
push
inc
bound
addr16
mov
push
ss
cmp
sub
shl
scas
or
repnz
daa
stc
clc
cmp
dec
xchg
ret
sub
push
dec
lea
lahf
imul
push
stos
es
sub
xchg
(bad)
pop
outs
sub
imul
scas
inc
jle
sar
test
cmc
or
in
icebp
sub
daa
xchg
aad
pop
and
repz
xchg
and
xchg
pop
or
push
mov
clc
fild
call
sbb
popf
dec
addr16
or
cmp
cmp
cmps
(bad)
lea
(bad)
push
scas
imul
xor
icebp
jg
movntps
add
popa
jnp
inc
adc
in
or
mov
pop
push
scas
stos
aas
cmp
push
ins
cmps
icebp
sub
jle
cmp
push
sub
movhps
pop
sbb
popa
inc
enter
pop
and
lea
arpl
or
sbb
out
mov
imul
clc
(bad)
cld
push
cmps
sbb
push
or
and
outs
fst
and
dec
in
push
mov
jae
ins
xor
movs
ds
fs
icebp
and
jge
push
jg
(bad)
and
push
jnp
popa
aad
add
jo
mov
lds
and
mov
cmps
cmp
mov
cmp
adc
(bad)
jae
and
(bad)
je
call
ret
sar
jae
cli
lods
sbb
mov
out
sub
in
imul
sbb
push
scas
inc
add
into
(bad)
pop
rcl
iret
and
and
xchg
loopne
adc
(bad)
mov
lods
ret
sbb
cli
ret
cmps
or
fbld
pop
sbb
(bad)
sub
or
jo
rol
in
xchg
mov
cwde
and
in
fild
jmp
sbb
lods
cmc
(bad)
in
xlat
sub
les
lods
mov
test
call
push
xor
jne
or
daa
lods
lds
outs
pop
or
and
nop
aas
mov
mov
test
xor
jnp
push
and
out
scas
adc
pop
outs
test
cmp
imul
(bad)
sub
dec
jl
out
mov
lahf
sub
movs
push
cdq
push
test
inc
(bad)
pop
add
cmps
mov
aam
mov
pop
mov
push
(bad)
jle
and
movs
jne
repz
imul
ja
test
mov
cmps
bound
sub
inc
ss
sub
push
or
cmc
mov
mov
inc
xchg
popf
es
mov
aaa
dec
jl
jge
cmp
mov
dec
jl
sti
inc
mov
pop
ret
test
not
out
push
lods
sar
js
cmp
fild
outs
test
push
popa
adc
js
dec
movs
sbb
cmp
mov
ret
lahf
fwait
into
movs
adc
std
mov
inc
cli
ret
mov
retf
mov
mov
sbb
(bad)
sub
retf
(bad)
pop
push
mov
fisub
test
pop
inc
call
(bad)
cmp
test
scas
mov
ins
pop
mov
dec
cdq
sub
das
xchg
sub
fs
dec
jne
xchg
push
inc
mov
outs
mov
inc
push
inc
jae
mov
sub
jne
ja
jns
les
mov
mov
es
mov
dec
(bad)
jno
movs
test
in
push
movs
adc
push
lds
lods
or
mov
mov
dec
xlat
out
jb
pop
in
push
sub
test
inc
lods
jl
dec
lods
or
mov
add
outs
gs
jl
lods
and
lods
fdiv
mov
mov
jae
mov
scas
or
lds
sub
mov
add
(bad)
popf
sbb
sar
sbb
jp
sub
loop
retf
sub
scas
fs
xchg
mov
dec
stos
xchg
aad
lahf
pop
stos
movs
movs
pop
inc
sar
dec
stos
call
aas
jne
jmp
cmps
jbe
push
pop
jl
aaa
arpl
mov
imul
jnp
xor
test
mov
dec
scas
in
in
pop
mov
inc
cmp
cs
cmp
lds
retf
adc
addr16
les
test
mov
shr
out
jmp
sar
mov
cmps
movs
repz
hlt
xchg
rcr
mov
loopne
push
int
cdq
dec
or
cmp
push
(bad)
dec
aad
loopne
mov
fsubr
mov
stos
inc
movs
mov
pushf
mov
and
xchg
daa
mov
inc
les
lods
test
and
xor
and
aas
rcl
xchg
ds
fisttp
jne
stos
dec
retf
imul
mov
adc
adc
std
dec
xchg
mov
mov
xchg
ds
or
push
(bad)
std
out
xchg
out
loopne
xchg
addr16
movs
std
jns
adc
and
cmp
jg
call
and
or
out
pop
mov
push
jbe
jge
outs
addr16
std
in
pop
cmp
dec
js
mov
in
js
jne
sbb
jmp
cmp
jle
and
arpl
mov
test
and
push
(bad)
mov
daa
jno
mov
(bad)
adc
push
(bad)
or
push
lds
ror
sub
or
push
das
jno
mov
fdivr
xchg
out
xor
cmps
ror
dec
adc
dec
sahf
mov
ds
int
cmp
mov
xor
sub
or
stos
pushf
adc
leave
enter
cld
pop
push
pop
dec
lods
add
xchg
jl
dec
aaa
xor
dec
and
sub
fwait
test
into
imul
sbb
in
xchg
adc
(bad)
bnd
movs
jp
mov
movs
jmp
jmp
retf
imul
loop
dec
cmps
push
es
cmps
xchg
dec
pop
fwait
cmps
stos
stos
xor
xchg
cmps
dec
xor
aad
add
mov
cs
xchg
and
adc
xchg
mov
mov
xchg
mov
loope
and
imul
pop
movs
jmp
movs
jae
(bad)
call
(bad)
jno
cmps
mov
dec
add
inc
imul
pop
cmp
es
pop
movs
adc
es
sub
pop
push
add
icebp
xor
mov
nop
cmp
popa
add
pop
jge
scas
mov
dec
out
cmps
es
push
xchg
scas
and
sti
(bad)
sbb
(bad)
jne
jmp
push
jno
jmp
pusha
adc
cmp
cld
pusha
jp
fisubr
sbb
(bad)
mov
or
sbb
ins
mov
movs
test
fcomp
jo
xchg
xor
xlat
es
push
and
aad
cld
push
adc
cmps
ds
add
clc
pop
mov
cmp
ins
xchg
call
mov
stos
mov
js
aas
call
aaa
push
test
arpl
out
jecxz
dec
and
jl
jmp
sub
in
aad
pop
push
(bad)
mov
(bad)
std
clflush
bound
pop
or
out
shr
scas
mov
mov
mov
push
lea
dec
aaa
mov
mov
out
xor
push
jle
add
pop
test
push
test
or
popa
imul
fwait
adc
data16
(bad)
xchg
(bad)
jmp
or
pop
pop
xchg
pop
fidivr
jle
inc
fdivr
sub
xchg
cmps
mov
fstp
imul
addr16
ret
sbb
pop
mov
clc
push
stos
pop
stc
ret
sbb
scas
test
vcmpsd
dec
daa
mov
ds
xchg
fnstcw
cmps
xor
test
out
and
ret
dec
fidivr
jecxz
(bad)
lds
dec
in
popf
ja
pop
sbb
ins
ret
push
bound
mov
clc
test
jl
sahf
jne
div
imul
ret
jge
jo
test
stos
push
mov
inc
cli
cmp
inc
ins
int3
les
mov
sbb
or
loop
cmp
test
jge
popf
sbb
nop
mov
add
mov
jne
adc
dec
mov
stos
sti
addr16
imul
repnz
(bad)
(bad)
mov
mov
sbb
inc
(bad)
pop
aas
fwait
jp
push
test
or
outs
sbb
mov
cmc
das
cmps
and
jbe
cli
mov
out
(bad)
cmps
xchg
mov
inc
das
icebp
push
lahf
mov
test
std
push
cs
mov
mov
inc
aaa
pop
mov
cmp
iret
stc
cmp
push
xchg
xchg
test
test
(bad)
rcr
cmps
xchg
in
dec
mov
jmp
push
xchg
data16
mov
cmps
jo
pop
cmp
stc
fldcw
mov
data16
ror
shr
(bad)
daa
jmp
rcr
mov
push
outs
(bad)
scas
pop
jne
es
lahf
dec
movs
sbb
fwait
ss
mov
mov
xor
es
mov
sbb
sub
mov
adc
pop
mov
ds
xchg
mov
add
cmps
sub
pushf
cld
mov
jnp
mov
adc
std
adc
sub
push
jno
xor
and
fstp
adc
mov
mov
jae
inc
outs
pop
test
ins
inc
ja
in
mov
(bad)
ds
cs
push
iret
repnz
xchg
pop
or
lea
sbb
movs
(bad)
jg
sbb
push
mov
add
sub
outs
xor
mov
in
popa
sar
addr16
xor
fs
icebp
fld
shl
mov
mov
fisubr
cmps
push
adc
cmp
or
das
adc
lea
scas
(bad)
in
(bad)
fnstcw
xor
addr16
ret
ror
scas
fisubr
icebp
push
cdq
(bad)
pushf
mov
add
int
pop
aad
ret
and
iret
daa
sub
cmp
inc
stos
js
outs
add
cs
lds
mov
jle
ja
ja
lds
fnstsw
nop
fld
jb
outs
cmp
pop
in
xchg
es
xor
pop
(bad)
and
dec
lock
mov
call
imul
cmps
mov
jle
lods
mov
pushf
repz
mov
rol
mov
jmp
loop
jp
inc
pop
bound
lods
data16
mov
and
ja
lods
push
pop
sbb
in
pop
js
jmp
jns
jmp
(bad)
xchg
loopne
loop
push
pop
(bad)
clc
add
mov
inc
mov
or
xchg
pop
xor
mov
sub
ds
mov
pusha
ficom
pop
mov
inc
or
aas
lods
ins
xchg
not
call
int
fdecstp
push
mov
jl
push
push
ins
pop
or
sar
or
xchg
aam
pusha
scas
icebp
and
rol
call
popa
outs
mov
mov
repz
jnp
jp
cld
iret
stc
addr16
movs
inc
sbb
add
call
fld
in
inc
add
aam
and
push
push
loopne
nop
(bad)
cmp
sub
mov
loope
or
xchg
pop
es
push
sbb
sbb
ret
and
jmp
pop
pop
ins
mov
mov
ins
movs
or
out
mov
es
retw
add
and
xchg
mov
jp
ret
sbb
jno
test
adc
xor
ds
mov
sub
jno
pop
call
sahf
repz
out
gs
dec
mov
jl
mov
bound
aas
push
mov
neg
test
(bad)
cmps
lds
lods
pushf
fcomp
cli
fwait
sub
stos
cmp
mov
mov
les
jl
and
or
jb
imul
out
mov
mov
inc
mov
fcmovb
xor
pop
cmps
ret
lods
mov
mov
cwde
dec
mov
lods
xabort
mov
fs
xor
test
ror
repnz
dec
test
neg
cmp
fld
sbb
pushf
cmp
stos
dec
sbb
xlat
mov
xor
stos
(bad)
in
jno
mov
sub
mov
jle
and
cwde
cmp
mov
js
cmp
loopne
out
cmp
daa
add
sub
out
sub
inc
sub
iret
sbb
leave
lods
scas
mov
dec
dec
lahf
mov
fnstsw
sub
sbb
jle
jge
mov
shl
jle
aam
test
repnz
out
clc
repz
mov
jnp
inc
sbb
push
cwde
std
(bad)
cwde
pop
and
cli
dec
pusha
fdivp
fld
dec
xlat
out
call
push
sub
(bad)
push
mov
test
lods
cmps
sub
dec
jg
mov
push
xchg
adc
xchg
dec
mov
mov
fstp
jns
sbb
je
cmp
or
mov
dec
ret
pop
sbb
mov
and
lahf
lahf
or
fmul
out
mov
push
dec
xchg
sahf
xchg
push
adc
mov
call
movs
inc
sar
xchg
add
rcr
cmps
sub
jae
xchg
jb
mov
jmp
sbb
cmps
inc
lods
(bad)
xor
cmp
pusha
fdiv
mov
cmps
sub
xlat
mov
(bad)
fbld
adc
push
lods
idiv
jle
hlt
shl
cs
mov
in
stos
mov
idiv
js
enter
mov
mov
cs
scas
and
ror
scas
ss
(bad)
stos
mov
stos
jns
dec
mov
add
fstp
cdq
outs
or
in
mov
cmps
sbb
lahf
push
sahf
mov
sub
mov
rol
jno
push
mov
cs
pop
xchg
sub
mov
(bad)
push
shr
aam
ret
iret
dec
sbb
leave
cmc
lea
dec
adc
daa
ret
push
(bad)
cwde
imul
pop
inc
outs
xchg
scas
push
jl
pop
adc
sar
ss
lods
or
cmp
aas
mov
pop
jmp
add
push
mov
mov
sbb
mov
les
mov
les
addr16
mov
mov
dec
les
daa
sbb
sub
push
scas
pop
test
cmp
or
mov
cmp
ret
(bad)
cli
adc
out
scas
outs
movs
add
lods
push
call
mov
inc
mov
jbe
ins
inc
jl
int
jmp
or
mov
jmp
jb
sahf
mov
mov
cmp
movs
cmp
mov
lock
ret
push
sahf
jg
sub
div
and
add
mov
xchg
jg
iret
(bad)
ins
jmp
inc
js
jg
jge
or
mov
int3
and
pusha
or
sub
popa
or
es
ret
sub
jo
add
mov
and
popa
jge
pop
mov
mov
cld
int
(bad)
lods
imul
xchg
or
fdivr
(bad)
in
addr16
xchg
mov
out
fmul
mov
fidivr
cmps
ret
fsub
loopne
cmp
xchg
aaa
mov
fsubrp
lds
mov
mov
(bad)
(bad)
cmp
jae
pushf
ss
jo
add
push
push
lods
fisubr
sub
cwde
sbb
outs
dec
add
pop
(bad)
imul
ror
rol
jne
xor
pop
repnz
cmp
adc
sahf
xchg
jge
mov
cmps
jmp
sahf
ins
cmp
push
mov
f2xm1
imul
call
leave
aam
clc
int
fnsave
sbb
xchg
push
ja
jg
rcl
stos
mov
push
cmp
adc
jl
addr16
inc
iret
gs
call
push
int3
bound
xor
sub
or
fild
stos
push
push
mov
retf
div
and
push
adc
shl
fs
pop
call
fst
lods
and
jg
fstp
dec
in
mov
jle
imul
sub
push
mov
nop
stos
pusha
pop
out
shl
sub
es
out
sub
retf
cmc
sub
pop
mov
stos
ret
out
rcr
ins
xchg
std
cld
mov
fisttp
push
popa
pop
cmps
sar
mov
aam
xchg
outs
cmps
ins
mov
adc
jmp
(bad)
mov
mov
pop
(bad)
stc
mov
push
(bad)
jmp
sbb
nop
out
in
pop
fisub
stos
jmp
push
push
push
add
adc
xchg
dec
cwde
(bad)
call
cmps
bts
xchg
addr16
das
in
xchg
mov
mov
jb
(bad)
xchg
mov
push
xor
and
jb
outs
add
inc
imul
adc
ror
ss
cdq
sub
jge
adc
xchg
sub
stos
push
jnp
cwde
ret
daa
add
enter
mov
aas
pushf
xchg
jns
stos
push
pushf
xchg
mov
and
scas
cmp
sub
or
dec
push
mov
(bad)
retf
out
stos
push
es
sub
or
mov
jg
mov
mov
mov
addr16
test
add
sub
in
aam
sahf
fmul
mov
imul
pop
mov
pop
xchg
ja
leave
and
pop
je
ret
fs
icebp
leave
lds
xchg
mov
ss
ins
in
xchg
rcr
ss
mov
jnp
test
lods
lods
sub
mov
adc
or
pop
xor
ds
jnp
fisttp
call
in
(bad)
mov
mov
fdivp
pop
test
xchg
jne
jbe
inc
jl
das
pop
xor
jmp
mov
enter
outs
sbb
mov
sbb
inc
neg
ins
lock
ret
(bad)
xchg
addr16
lock
std
es
sub
cs
mov
int
cmps
push
and
mov
lahf
pop
pop
stos
stos
pop
stos
adc
pop
imul
and
scas
mov
ret
mov
addr16
mov
push
je
or
pop
pop
inc
cs
jno
jns
xchg
shr
pop
mov
test
sbb
adc
jns
or
popa
mov
or
data16
scas
or
fs
int3
mov
jns
mov
lods
test
xchg
mov
xchg
mul
jl
ins
cdq
movs
loop
adc
xchg
daa
jne
scas
jns
ds
mov
mov
lods
dec
popf
add
loop
jmp
(bad)
jge
inc
add
xor
lds
add
(bad)
enter
lahf
js
mov
adc
mov
inc
push
sar
mov
ins
out
xchg
pop
stos
cmp
sub
shr
retf
adc
adc
stos
and
pop
movs
repnz
mov
(bad)
xor
lea
inc
mov
jge
mov
ret
sahf
jbe
jns
cmc
xchg
rol
arpl
fwait
xchg
test
jecxz
jnp
pop
ja
imul
dec
mov
fs
aaa
js
outs
cmp
aam
dec
(bad)
cld
xor
adc
dec
js
jl
sar
xchg
rcr
fist
lds
jmp
loope
fwait
push
movs
outs
push
pop
scas
pop
(bad)
js
(bad)
mov
icebp
jge
test
movs
xor
cmps
xchg
lods
das
fcomp
or
popa
ret
daa
repz
xor
xor
outs
push
in
rol
mov
and
std
shl
test
mov
imul
out
retf
pop
jns
add
xor
jns
push
mov
pop
repz
hlt
cmp
mov
adc
test
neg
mov
in
fsubr
xor
cwde
es
push
inc
jmp
mov
(bad)
cld
leave
(bad)
mov
jae
fisubr
ret
arpl
inc
jl
call
cmp
mov
fdiv
mov
mov
add
mov
or
cmp
fucomp
(bad)
add
hlt
and
enter
push
lods
sub
jl
movs
jnp
ins
bound
movs
pop
inc
fld
cdq
xchg
cs
dec
mov
and
inc
mov
sbb
je
(bad)
int3
cmp
in
push
out
sub
adc
call
xor
test
add
ja
cmp
jmp
shr
lahf
add
jne
cmp
adc
jle
dec
(bad)
fsubr
cdq
popa
jae
pop
test
push
shl
sbb
pusha
sbb
ret
jle
mov
mov
pop
cmp
icebp
pop
repnz
mov
mov
push
mov
xlat
repz
movs
pop
stos
adc
or
stos
jae
dec
jl
retw
mov
mov
mov
mov
(bad)
js
sub
popa
popa
pop
outs
adc
mov
xor
imul
and
arpl
mov
mov
pop
mov
scas
xchg
push
scas
(bad)
stos
arpl
mov
cmp
sub
hlt
mov
cmps
in
aas
retf
in
dec
inc
sub
mov
iret
pop
nop
jns
mov
in
mov
or
lods
sub
dec
cld
mov
out
cli
ins
sub
adc
cs
push
(bad)
adc
mov
dec
cld
pop
stos
clc
pop
rol
jns
sbb
mov
inc
pop
mov
fwait
sbb
or
(bad)
dec
test
outs
xor
xor
mov
mov
int3
mov
mov
mov
mov
fwait
mov
nop
bound
jo
mov
mov
scas
out
or
nop
jnp
xchg
mov
push
test
sbb
es
pop
mov
sbb
dec
lahf
les
cmp
jge
xor
enter
or
mov
sub
fwait
jp
pop
sahf
stc
aas
mov
add
dec
mov
adc
loopne
mov
push
(bad)
xchg
fs
lods
dec
xchg
shr
push
xchg
mov
or
jnp
es
imul
outs
lods
movs
scas
(bad)
ds
mov
(bad)
and
ret
lahf
call
movs
mov
mov
cmps
mul
xchg
jge
test
dec
jge
xor
gs
xchg
inc
inc
xor
mov
push
pop
ins
mov
sbb
(bad)
(bad)
(bad)
jge
mov
push
arpl
mov
es
in
mov
or
mov
sbb
mov
push
fwait
shl
push
call
xlat
xor
addr16
xchg
sbb
data16
sbb
clc
pop
mov
pop
pop
pop
xor
mov
mov
pop
and
sub
cli
(bad)
fwait
movs
pop
sub
and
iret
xor
or
inc
gs
test
mov
jle
movs
out
imul
add
in
mov
cmp
and
movs
mov
(bad)
pop
sti
popa
push
ret
in
(bad)
mov
xchg
inc
(bad)
out
jle
push
shl
mov
stos
out
(bad)
scas
das
test
movs
xchg
movs
call
xlat
dec
int
mov
cmp
mov
aad
sub
jo
imul
push
mov
xor
jno
mov
(bad)
out
add
adc
(bad)
test
popf
popa
mov
xchg
out
push
mov
jnp
mov
sub
in
dec
mov
push
std
push
cmp
xabort
lods
out
pop
mov
addr16
int
sub
cmp
pushf
lods
stc
xor
in
dec
xchg
fs
xchg
das
scas
popa
xchg
lahf
adc
pop
out
mov
xchg
lods
inc
jmp
adc
fdivr
cmp
movs
pop
(bad)
ins
pop
in
cmp
cdq
pusha
and
(bad)
repnz
mov
loopne
stc
aam
stos
das
cmp
jns
inc
dec
jae
mov
imul
aaa
sub
dec
xchg
mov
fnstsw
scas
pusha
pop
loope
stos
jge
ret
dec
sub
lds
push
adc
push
xor
jb
lods
add
add
pop
stos
pop
gs
pop
mov
cs
test
sub
mov
fstp
jl
sub
push
xchg
stos
xor
jmp
xchg
cdq
sbb
daa
fisub
and
cmp
mov
(bad)
leave
nop
enterw
mov
adc
push
or
inc
mov
mov
cmc
inc
mov
mov
movs
cmp
lea
inc
cmp
jge
fadd
(bad)
call
and
stos
sahf
outs
sbb
ret
jle
sbb
inc
call
jmp
jmp
jbe
fst
mov
pop
sub
aam
xchg
jns
pop
xor
push
fwait
push
ret
or
popa
adc
in
inc
mov
rcl
push
das
es
pop
add
lahf
push
pop
mov
int3
jg
(bad)
dec
cmp
addr16
push
data16
fs
cs
jg
adc
nop
out
push
xor
sbb
(bad)
mov
cmps
push
lods
movs
fisub
mov
mov
js
test
cmp
mov
xchg
push
mov
pop
or
jbe
xchg
shl
mov
jecxz
mov
pop
adc
arpl
mov
xchg
test
cmps
ja
iret
xchg
cli
cmp
mov
push
in
out
lods
scas
xchg
xchg
(bad)
and
in
inc
sbb
stos
and
pop
in
xor
dec
pop
outs
push
ins
inc
mov
cmc
mov
push
add
and
aas
xchg
popf
in
movs
push
sub
adc
sub
js
inc
out
mov
es
stc
xchg
ss
test
outs
and
adc
leave
or
out
test
adc
and
xchg
mov
cli
stos
xchg
daa
xchg
inc
mov
outs
je
mov
adc
cli
les
ja
fsub
scas
mov
lods
neg
ins
lods
add
iret
call
lods
out
adc
or
mov
push
loope
shr
push
push
add
dec
outs
push
(bad)
dec
pop
jno
(bad)
xchg
leave
mov
push
dec
xchg
and
dec
jnp
jge
cmp
dec
jne
in
call
ds
dec
adc
cdq
jmp
lods
xchg
cmc
cwde
(bad)
lods
inc
mov
pop
aam
arpl
aas
aas
ss
pop
jg
cs
bound
jo
or
mul
fadd
lock
(bad)
ja
cli
dec
mov
aas
js
arpl
mov
and
fistp
mov
xor
(bad)
lods
in
add
aam
(bad)
sqrtps
dec
fild
pop
adc
mov
data16
cs
adc
mov
jne
fwait
outs
cmp
test
mov
(bad)
pop
mov
cmps
popa
in
mov
pop
inc
outs
mov
mov
push
cwde
sub
lods
xor
jp
out
push
in
jl
mov
jmp
mov
ja
fisub
jae
scas
xchg
outs
addr16
or
pop
xor
pop
cmps
or
mov
data16
xchg
and
sub
daa
cmp
and
mov
nop
sahf
add
jge
mov
push
jae
(bad)
jo
stos
(bad)
push
lahf
ins
mov
mov
cmp
loope
mov
jnp
sbb
push
(bad)
pop
or
pusha
fisubr
jae
imul
dec
and
cmp
outs
test
addr16
and
mov
pop
mov
in
push
push
xlat
les
adc
xchg
int
jns
lds
loop
mov
mov
(bad)
sub
addr16
and
aad
ins
fwait
outs
mov
mov
push
mov
dec
iret
aad
lods
int
push
sub
lahf
arpl
outs
push
mov
or
fwait
and
push
fdivr
data16
jb
call
ss
inc
in
mov
sbb
push
cmp
pop
pop
or
xor
and
inc
dec
cmps
jne
dec
hlt
pop
out
retf
mov
inc
cld
cmps
adc
ss
jp
nop
jno
mov
iret
js
shl
push
mov
add
push
test
jmp
xor
xchg
jecxz
push
mov
imul
fisubr
cld
jo
scas
cmps
test
cli
jno
ficom
repz
jb
lods
pop
and
mov
cmps
cmc
stos
ret
push
ret
mov
in
mov
stc
idiv
stos
pushf
outs
arpl
fdivr
mov
aam
ds
int3
and
and
jmp
jecxz
mov
test
cmp
dec
mul
(bad)
pop
adc
or
das
lods
add
xor
cmp
cs
popf
lea
in
pop
inc
es
mov
push
lods
in
imul
xchg
stc
pop
pop
ret
lock
out
retf
pop
rcl
stos
xchg
in
sub
mov
sbb
es
pop
pop
inc
and
mov
adc
(bad)
aaa
mov
aas
mov
jb
mov
dec
cmp
push
jno
lahf
test
lea
jecxz
jns
movs
jg
int3
adc
rcr
adc
add
add
sbb
jl
sbb
iret
push
ret
pop
mov
fistp
add
pop
pusha
mov
jno
sbb
sub
dec
mov
stc
rcr
dec
sbb
mov
outs
push
ss
ret
jp
(bad)
pop
in
jbe
sub
pop
hlt
inc
cmp
push
imul
fcom
(bad)
ficomp
xchg
mov
jg
cmp
adc
movs
inc
test
fbld
mov
xchg
in
pop
rol
ss
rcr
std
inc
sub
push
jl
push
fcom
aas
mov
lods
jle
stos
or
adc
cdq
add
and
lahf
ja
cmp
sub
loopne
ja
cmp
mov
sti
mov
jmp
mov
mov
mov
lea
(bad)
dec
add
or
jnp
sahf
scas
sub
inc
ins
xchg
xor
loope
call
ss
stos
push
dec
aas
pop
cmc
(bad)
and
scas
sub
popf
push
stos
push
outs
test
mov
clc
mov
jge
into
data16
rol
xor
(bad)
out
cmp
xchg
mov
loope
mov
loopne
mov
adc
xchg
jle
and
jp
icebp
adc
packssdw
inc
ins
dec
adc
out
xchg
js
outs
outs
popa
push
iret
popf
lahf
pop
pop
mov
call
movs
aad
(bad)
mov
jmp
jb
cmc
bound
daa
mov
dec
adc
not
mov
push
std
cmps
out
sar
mov
push
mov
jno
jbe
push
fsubr
dec
or
inc
in
enter
movs
cmp
lds
or
lods
arpl
pop
inc
inc
sub
pusha
add
ror
(bad)
adc
dec
jge
jbe
adc
dec
(bad)
fmul
leave
mov
outs
push
popf
jne
mov
jg
jge
popf
push
(bad)
fs
xchg
push
jecxz
shr
jbe
sbb
ss
(bad)
popf
jns
scas
pop
jb
call
popa
xchg
int3
inc
call
std
(bad)
int
push
cld
and
jb
arpl
fdiv
mov
pop
mov
sar
mov
xor
clc
mov
hlt
push
mov
mov
movsx
fsubr
in
aad
popf
mov
pop
retf
pop
sti
bound
int
ret
in
push
int3
popa
movs
dec
int3
scas
ror
outs
rcl
repnz
adc
cmp
movs
push
jno
out
push
jno
(bad)
lods
jnp
mov
ret
jle
imul
push
aam
shr
(bad)
scas
clc
test
retf
ds
ja
sub
mov
inc
outs
cmp
jns
mov
xchg
lea
xchg
jle
inc
(bad)
daa
in
fidiv
(bad)
in
mov
add
cmp
lods
push
dec
es
fsubr
and
sbb
adc
ins
fidiv
mov
fcmovnb
frstor
nop
lds
out
or
adc
ins
ja
push
lods
jbe
ror
push
jp
pop
sahf
jp
mov
(bad)
out
adc
add
adc
addr16
stc
pop
mov
inc
fisttp
addr16
or
movs
inc
(bad)
xlat
aam
ss
fisttp
pushf
sbb
sbb
inc
cwde
sub
add
test
adc
xchg
xor
je
mov
outs
pop
jno
daa
lds
sbb
jmp
cmps
inc
cwde
fwait
popa
cmp
into
jecxz
jb
and
lock
and
pop
sub
push
fdivr
dec
imul
fsub
inc
lods
lds
imul
cmp
jle
pop
shl
les
(bad)
fstp
mov
ror
mov
fisttp
cwde
fild
out
jle
das
xlat
cmp
mov
xchg
jnp
in
mov
lds
repnz
aad
scas
xchg
cs
stos
fst
retf
lds
rcl
bound
enter
xchg
scas
adc
push
xchg
adc
xchg
mov
mov
mov
cmps
int3
mov
mov
sbb
ret
cmp
sub
mov
in
push
sahf
fwait
mov
cmp
lea
fisttp
(bad)
cmp
mov
inc
jnp
cmp
(bad)
(bad)
lea
scas
push
shl
push
stos
add
mov
test
dec
mov
xchg
push
cdq
cmp
or
lds
jp
scas
es
mov
jbe
push
jb
ja
(bad)
retf
(bad)
div
mov
sbb
dec
jge
cmps
or
or
xor
ror
jo
sub
pop
stos
pop
fst
in
(bad)
mov
push
mov
cmps
pop
dec
inc
mov
daa
xchg
pop
popa
adc
push
sbb
xlat
and
daa
pop
mov
addr16
out
cmps
lods
popa
pop
ficom
xchg
retf
inc
out
rcr
inc
pop
nop
add
aam
lods
sub
js
movs
pop
or
jmp
repnz
fcmovne
adc
fcom
out
int
jb
mov
ins
xchg
mov
adc
pop
mov
push
mov
cmp
cld
pop
pop
push
sbb
fidiv
faddp
sbb
loope
out
jae
add
gs
xor
mov
add
mov
nop
(bad)
lahf
mov
mov
cmp
outs
jge
mov
out
mov
sahf
ins
pushf
xlat
and
mov
inc
js
push
add
sub
mov
cmp
shl
dec
dec
cs
adc
xchg
test
and
pop
loop
jmp
ret
stos
loop
lods
(bad)
ficomp
call
sbb
dec
dec
and
pop
mov
sbb
mov
fsubr
pop
mov
mov
icebp
std
test
mov
mov
push
mov
mov
adc
pop
js
inc
sar
cmp
jne
arpl
pusha
add
scas
add
in
(bad)
mov
ss
mov
mov
xchg
mov
cmp
out
mov
and
pushf
or
cmps
pop
sub
xor
cmp
add
jg
and
fisub
sub
mov
sar
scas
(bad)
cwde
xor
adc
enter
pushf
fsubr
jmp
push
movs
inc
fwait
in
ret
lahf
pop
gs
ins
push
xor
inc
sahf
sbb
out
mov
mov
mov
ins
jecxz
retf
nop
in
imul
data16
mov
movs
and
dec
(bad)
jmp
lea
jnp
fild
(bad)
pop
je
popf
mov
cmp
js
dec
mov
mov
icebp
pop
pushf
test
imul
fsubr
cmps
mov
out
and
cld
imul
mov
lea
and
loope
lds
jecxz
fldl2e
jae
and
dec
retf
xchg
iret
cs
call
daa
mov
(bad)
mov
and
push
aas
outs
mov
mov
jns
lods
(bad)
push
dec
mov
(bad)
cld
mov
inc
loop
sahf
arpl
test
jns
sar
fs
jmp
outs
lea
out
(bad)
sti
nop
call
loopne
push
sub
jle
pop
(bad)
jmp
mov
mov
cmp
iret
jl
ja
fs
mov
sbb
and
aas
push
sti
stos
ds
push
lds
sahf
mov
dec
dec
popf
test
lea
(bad)
jno
cmp
jae
jecxz
aam
mov
mov
aad
mov
popf
js
cmps
sar
jno
xor
ret
mul
fild
fwait
and
cdq
sub
cmps
xchg
data16
push
arpl
in
arpl
adc
fisubr
mov
enter
aas
out
popa
mov
pop
ja
xor
cmp
mov
das
add
jle
jmp
inc
repz
mov
or
jmp
dec
out
inc
adc
push
(bad)
xor
int3
xchg
ficomp
mov
xchg
mov
sar
sub
ins
les
ins
jo
ret
(bad)
out
jmp
js
int
mov
mov
shl
pop
lods
dec
cmp
mov
mov
mov
xchg
jnp
lahf
out
push
mov
jne
jbe
and
iret
xchg
mov
inc
mov
push
mov
or
sbb
add
jo
dec
jo
mov
in
in
adc
cwde
retf
(bad)
imul
sub
sub
xchg
jns
xchg
pushf
test
fcmovb
js
pop
sti
mov
movs
pop
sub
sbb
inc
cmps
fisubr
mov
mov
sbb
daa
ror
daa
mov
outs
daa
cs
pusha
cdq
pop
mov
and
mov
test
inc
call
in
pop
xlat
idiv
in
jns
out
out
xor
arpl
das
mov
sub
and
int3
cmp
je
pop
pop
lahf
push
(bad)
ja
push
xchg
mov
pop
jns
les
shl
shl
mov
mov
adc
arpl
popa
scas
add
xchg
and
aad
hlt
sub
cmp
jle
dec
mov
arpl
push
stos
dec
sub
add
pusha
mov
cmps
sub
jns
popf
jb
push
pop
mov
pusha
lods
sbb
ins
dec
jge
pusha
js
inc
pushf
movs
repz
jge
outs
jae
out
inc
inc
xor
inc
sbb
add
mov
push
or
or
sub
push
xchg
and
icebp
ja
mov
push
cmp
movs
mov
mov
aas
iret
pop
retf
imul
stos
inc
mov
xor
xor
adc
in
cmps
out
aad
outs
cmp
mov
and
data16
sub
and
pusha
mov
dec
dec
inc
aaa
add
les
ret
cmp
gs
jl
test
mov
mov
cmps
ficom
int
mov
es
es
sub
xchg
or
jl
sub
fsubr
pop
outs
aas
or
lock
xchg
neg
pop
push
int3
mov
scas
stos
cmp
jno
mov
mov
dec
or
and
sar
add
jno
es
and
mov
push
cs
xor
cmp
xchg
cmp
adc
out
adc
data16
shr
pop
mov
mov
dec
gs
shr
pop
shl
sub
jecxz
mov
xor
cmp
loope
outs
lds
outs
adc
clc
not
sbb
das
jne
add
mov
js
test
cdq
sbb
inc
outs
test
addr16
mov
ds
xchg
out
sar
inc
movs
and
push
and
jg
jg
test
sti
stos
int3
jle
and
(bad)
pop
sub
dec
jo
(bad)
sub
pushf
daa
ins
add
and
dec
or
mov
rol
lods
in
and
add
cmp
mov
sub
or
lods
and
in
out
dec
push
int3
xchg
dec
aam
xchg
int
mov
sbb
in
aam
adc
mov
and
aad
aam
aam
loopne
mov
ds
mov
push
jecxz
sub
jg
cdq
imul
pop
jne
sub
or
jo
cmps
mov
jle
sub
jg
sub
xchg
outs
dec
jbe
mov
addr16
ins
xchg
jno
and
jp
in
int3
pop
push
lods
jne
ror
add
mov
push
dec
popa
mov
imul
sahf
mov
mov
mov
outs
and
outs
mov
mov
pusha
jb
jns
or
cmp
xor
fcmovbe
sub
loope
sbb
inc
sub
dec
cmps
test
lods
(bad)
jmp
cmp
mov
and
jo
inc
mov
add
sub
out
push
dec
sub
lods
jns
leave
test
mov
fisub
daa
jns
lock
push
retf
push
loope
daa
outs
pop
scas
(bad)
movs
jg
cmp
xchg
ss
xchg
pop
pop
fwait
jae
std
sbb
jecxz
cmp
sbb
popa
arpl
mov
pop
les
ror
sub
jmp
in
movs
hlt
jg
arpl
or
js
out
inc
stos
add
jbe
cmps
fistp
sar
mov
cwde
push
add
dec
xlat
sbb
jo
popf
cmps
(bad)
mov
jnp
and
int3
inc
sahf
xchg
pusha
xchg
cs
fld
inc
cmp
jecxz
stos
rcl
jae
pop
xchg
vmaxps
aaa
mov
mov
mov
dec
int3
jl
mov
mov
loopne
addr16
fs
sub
xor
xchg
aam
adc
mov
xor
mov
cmp
outs
scas
sti
push
movs
das
jge
mov
out
iret
xchg
out
mov
data16
push
pop
cmps
xchg
out
jno
rcr
popf
jl
in
cmp
cs
scas
cmps
fwait
adc
pop
pop
(bad)
lods
mov
pop
fmul
mov
adc
inc
popf
jmp
jmp
jbe
fcmovne
pop
xchg
(bad)
dec
imul
jo
mov
stos
mov
dec
adc
cmps
mov
pop
daa
mov
pushf
fdivr
add
ss
inc
or
mov
fs
inc
(bad)
movs
xor
sub
cmps
adc
inc
ret
jo
sti
gs
jne
leave
push
pushfw
outs
shl
pop
mov
inc
adc
push
fisttp
and
jno
sar
sub
sbb
adc
pop
scas
adc
shl
pop
cdq
mov
test
cmp
fidiv
jmp
imul
mov
jns
(bad)
mov
movs
sub
mov
push
int
(bad)
cmp
mov
mov
test
and
cmp
dec
xor
(bad)
adc
scas
mov
cmp
frstor
pop
scas
repnz
xchg
jle
pop
sub
dec
sbb
push
sub
xchg
imul
ins
sbb
test
inc
daa
sbb
cmps
stos
(bad)
push
add
dec
scas
push
dec
xchg
retf
jo
sti
jns
mov
popa
ja
mov
xchg
add
mov
mov
fldcw
mov
sub
mul
push
mov
mov
push
mov
xchg
push
xchg
cmps
pshufw
repnz
xchg
int3
das
sbb
mov
sbb
out
sti
mov
mov
and
ins
pop
mov
jmp
je
ins
mov
and
dec
aad
push
mov
imul
mov
arpl
mov
push
dec
xchg
lods
lods
xchg
int
and
cwde
adc
xchg
pop
xchg
lea
jae
movs
rcl
mov
cmps
nop
test
ret
inc
mov
mov
(bad)
ret
sti
fcmovne
mov
push
mov
(bad)
ror
and
mov
mov
test
hlt
shl
sar
cmps
pop
sahf
icebp
lods
stos
and
jle
jb
ficom
ja
sbb
inc
iret
fwait
dec
dec
mov
mov
push
xchg
outs
out
pop
mov
mov
push
aas
sbb
daa
call
mov
fistp
mov
or
or
and
fcomp
mov
jb
(bad)
sbb
mov
repnz
mov
mov
jg
cmp
adc
ss
movs
scas
(bad)
push
lock
movs
xor
lods
xchg
jg
xchg
out
in
movsx
inc
mov
pop
data16
iret
outs
gs
(bad)
and
mov
xchg
push
push
retf
jmp
sub
adc
mov
push
jmp
leave
enter
dec
push
call
sbb
leave
pop
lahf
bound
push
aam
scas
ret
cmps
movs
inc
addr16
cs
pop
lods
push
loop
scas
jp
sbb
push
ret
dec
and
(bad)
cmp
jl
inc
call
js
dec
xchg
mov
pop
test
dec
outs
mov
pop
aam
or
sar
sub
mov
outs
pusha
stos
jl
popa
cld
jnp
mov
xor
pusha
(bad)
jg
imul
xor
or
aas
lahf
mov
push
mov
ins
scas
scas
jle
and
xchg
mov
inc
mov
shr
dec
push
je
retf
popa
sub
xchg
dec
xor
mov
push
mov
jbe
loop
push
jg
mov
scas
lods
es
loope
imul
not
jmp
les
mov
out
test
je
jge
into
imul
mov
pusha
pop
add
fsub
mov
cmps
(bad)
pop
cld
in
fldenv
popf
jmp
pop
(bad)
fadd
fwait
jb
mov
int3
lods
dec
ja
sahf
mov
mov
jle
ds
jl
dec
adc
sub
mov
mov
(bad)
jb
or
cmp
mov
and
mov
ror
outs
sub
cli
(bad)
es
mov
mov
fmul
nop
outs
xor
push
test
pop
push
aaa
xchg
nop
mov
xchg
(bad)
neg
inc
pop
mov
jmp
es
cmp
sub
mov
push
dec
pcmpgtd
nop
jge
mov
(bad)
idiv
arpl
stos
pop
test
sub
mov
movs
add
lahf
je
imul
mov
pop
lock
mov
or
(bad)
stos
pop
mov
cli
pop
mov
data16
jns
pop
cmp
add
mov
imul
ja
jmp
pop
jnp
es
jle
gs
test
sub
stos
add
push
ffreep
cmp
xlat
(bad)
or
mov
cmc
jmp
rcl
lods
pop
jmp
mov
xchg
sbb
dec
(bad)
neg
dec
jae
xor
test
mov
(bad)
xchg
(bad)
or
xor
addr16
arpl
push
jno
or
inc
call
adc
xor
jl
repz
and
sbb
std
loope
ret
sbb
mov
test
aam
mov
xchg
fistp
cmps
rcl
pop
aam
mov
cmp
cs
jge
gs
push
int
out
rol
and
std
test
xchg
jecxz
mov
inc
in
cmp
fs
pop
loope
mov
stos
sub
dec
and
and
or
int
stos
sub
lahf
pop
cli
icebp
mov
out
pusha
aam
dec
ds
jmp
pop
ss
mov
popf
es
fxam
mov
dec
ret
sbb
ror
mov
jae
dec
adc
push
sbb
add
pop
mov
mov
xlat
cs
leave
jp
fcomp
cmp
mov
stos
scas
div
pop
addr16
jg
mov
mov
cmp
pushf
mov
scas
xchg
imul
sub
pop
fwait
mov
cmps
cmps
or
jmp
out
mov
test
xchg
std
mov
mov
xor
cld
dec
adc
shl
jnp
mov
xchg
pop
aad
pushf
lea
sahf
test
inc
mov
jge
pop
cmp
test
or
cmc
mov
leave
sbb
aaa
test
aaa
cmp
(bad)
(bad)
jecxz
cmps
push
push
jle
int3
outs
or
call
adc
dec
inc
in
mov
jle
ja
mov
add
(bad)
push
out
(bad)
sub
xor
out
mov
inc
ins
add
pusha
xor
movs
js
mov
cmps
(bad)
mov
fiadd
js
in
popa
or
addr16
mov
inc
mov
cmp
outs
lds
test
(bad)
jno
out
cmp
lods
sbb
lds
and
jbe
jge
scas
or
jmp
pop
sub
sahf
cmc
lds
cmp
shr
test
in
pop
mov
movs
outs
fcomp
mov
out
xchg
stos
ret
imul
mov
ret
popa
mov
dec
pop
lds
cmps
pushf
cld
or
arpl
sub
fmul
push
adc
push
mov
ret
retf
mov
mov
enter
and
pop
lock
fwait
in
(bad)
cmps
and
cmp
xchg
idiv
pop
sbb
jmp
lahf
fdivrp
xor
mov
addr16
xor
test
jb
(bad)
lea
cmp
or
mov
lock
mov
outs
popa
sub
stos
inc
xor
dec
xor
ror
stos
push
jle
mov
jnp
dec
sub
inc
jge
dec
cmps
cs
js
aam
dec
pop
movs
js
sub
div
push
or
jp
sbb
movs
mov
mov
lahf
xchg
stos
fsub
push
cmc
adc
pop
fstp
xchg
cmc
(bad)
ins
int3
out
scas
imul
xor
cmp
push
pop
fild
pop
push
popa
mov
out
and
scas
mov
call
ins
pop
xchg
xchg
leave
int3
mov
rcl
rcl
jo
jp
mov
das
adc
in
fild
fs
mov
xlat
call
(bad)
jl
enter
pop
mov
jns
jnp
cmp
psrlw
inc
nop
and
ret
sub
outs
mov
add
push
pop
xor
and
adc
dec
and
adc
xlat
repz
sub
pop
aaa
and
inc
das
dec
icebp
imul
mov
push
sbb
test
mov
das
jno
dec
sbb
cmp
pusha
push
or
mov
addr16
es
(bad)
or
add
and
cmp
jge
mov
add
and
les
and
in
das
mov
xchg
cmp
loopne
xchg
test
dec
in
idiv
vpsrlq
jmp
mov
mov
sbb
cmp
add
add
cmp
mov
stos
cmps
daa
mov
(bad)
cmp
mov
adc
out
fild
out
push
es
std
sbb
bound
test
nop
sahf
adc
addr16
sub
pop
es
leave
in
push
dec
xor
xor
call
lods
and
call
rol
test
out
popfw
pop
retf
dec
mov
stc
ret
push
sbb
cmp
aaa
pop
fs
test
pop
das
cmp
sahf
mov
jg
test
les
repz
mov
clc
fnsave
addr16
(bad)
mov
in
iret
mov
enter
mov
cli
enter
pop
pop
push
cs
fisub
cmp
cwde
out
jae
daa
out
jae
leave
add
sub
pop
lods
inc
stos
ins
stos
add
fs
push
cmp
std
sub
mov
ret
arpl
mov
mov
push
and
je
ror
iret
sbb
pop
lods
sub
lds
sbb
stos
popa
(bad)
mov
mov
daa
mov
and
mov
push
inc
lods
movs
sub
xchg
loopne
mov
gs
adc
data16
scas
mov
dec
iret
sti
lods
xlat
xchg
xchg
mov
cmc
add
mov
not
sub
int
jecxz
mov
cmp
fs
ds
sub
and
mov
and
mov
inc
test
push
adc
mov
mov
in
(bad)
iret
lea
icebp
into
cmp
jp
push
daa
(bad)
xchg
xor
scas
ror
mov
or
std
es
and
ja
mov
sub
je
cmc
xlat
mov
jle
cli
inc
cmps
jp
inc
mov
xor
je
add
add
cmps
pusha
sar
pop
cmps
xchg
jne
add
sub
imul
fldenv
and
sub
popa
inc
ret
retf
jmp
push
and
push
cmp
sahf
push
mul
aad
fnsave
iret
ds
mov
lock
push
aad
jmp
aaa
imul
sbb
aas
push
test
test
jg
std
mov
cmp
pop
test
mov
shl
(bad)
call
mov
stos
sub
jne
cmp
enter
mov
aad
jp
sbb
add
adc
mov
nop
cmp
je
aaa
jl
xchg
sbb
ins
sbb
data16
jle
cmp
repz
pop
push
xchg
push
and
loopne
test
sub
jp
ret
mov
mov
scas
cmps
mov
lahf
out
fwait
dec
mov
clc
xchg
test
scas
imul
arpl
cmp
imul
mov
lea
push
or
movs
psubusw
in
cwde
sub
test
pop
pop
dec
imul
aas
push
mov
xchg
jne
ss
inc
scas
cmps
jg
ins
aas
sub
inc
jp
je
mov
jmp
sahf
es
test
aas
aas
cmp
dec
xor
mov
es
cmps
add
je
movs
push
fsubr
dec
mov
(bad)
lods
cs
bound
sbb
sbb
rol
scas
(bad)
repz
jno
cmps
ret
push
mov
mov
adc
jnp
jecxz
mov
pop
jb
out
outs
inc
(bad)
nop
leave
mov
mov
int3
icebp
mov
mov
call
(bad)
sub
pop
xor
jae
jmp
mov
ja
adc
mov
gs
iret
inc
fsubr
jl
mov
fldenv
mov
sub
sub
jbe
mov
xchg
ins
mov
test
jle
mov
fwait
jp
loopne
jl
imul
stos
loope
add
mov
jg
jno
inc
imul
minps
pop
add
add
dec
mov
aad
mov
mov
sub
pop
lea
mov
neg
mov
lods
les
(bad)
sti
mov
test
mov
cmps
cs
lods
ds
inc
(bad)
or
pop
jb
into
clc
out
int3
ds
mov
ins
jnp
std
scas
pop
int
jnp
in
sub
scas
cs
std
scas
mov
push
shl
push
xchg
mov
mov
mov
test
sub
(bad)
scas
ret
popf
mov
scas
mov
std
push
stos
cmps
test
sub
sub
xchg
push
or
jnp
cmp
frstor
jle
mov
loop
xchg
in
hlt
mov
cld
lds
hlt
outs
in
push
mov
inc
inc
xlat
mov
mov
out
in
(bad)
lods
das
sahf
pop
fs
out
fwait
cmps
dec
jns
add
jo
mov
xchg
dec
mov
mov
dec
inc
sbb
nop
mov
int
cmps
xlat
imul
arpl
ret
jp
jg
test
scas
sub
repnz
dec
popf
imul
out
out
jg
repnz
xchg
scas
mov
jmp
push
adc
dec
popa
mov
es
sub
out
mov
add
mov
inc
les
fstp
xor
bound
push
mov
mov
sub
or
fnstcw
push
daa
test
es
inc
sbb
fwait
mov
pop
mov
push
mov
add
fcomp
mov
pop
mov
xchg
sar
mov
ins
push
cmps
mov
pop
mov
fsubr
sub
fwait
sub
mov
inc
fwait
test
pop
out
lock
jns
mov
cmps
mov
(bad)
sub
dec
retf
adc
out
push
push
cli
xchg
out
sti
shl
(bad)
jge
jo
aas
cmp
mov
sub
pop
pop
popa
clc
enter
lods
call
js
daa
jae
mov
test
mov
scas
mov
arpl
mov
jge
out
mov
add
mov
ret
sbb
jo
xchg
pop
ret
sbb
js
and
jbe
pop
xchg
cmp
call
ins
stos
out
cmps
mov
lea
cmps
cmc
and
inc
pop
mov
test
std
lods
cdq
jmp
ss
es
lods
imul
stos
rcr
adc
retf
pop
xchg
mov
mov
ins
mov
adc
jb
mov
ja
mov
sub
fwait
xchg
aam
lock
xchg
cmp
call
scas
stos
pop
jle
mov
arpl
aas
stos
sbb
fs
jge
es
pushf
iret
dec
repz
aaa
pop
fsubp
sub
jge
dec
or
cdq
(bad)
sub
stos
xchg
(bad)
in
push
jne
addr16
xor
in
pop
mov
and
sbb
jb
push
fistp
adc
rcr
sbb
jp
push
ins
lods
mov
test
fs
mov
test
cmps
je
mov
pop
mov
cmp
daa
lods
jg
xor
sub
mov
cmp
and
and
jno
outs
fdivr
sbb
mov
pop
call
dec
shr
scas
test
test
and
xchg
xchg
in
add
xchg
(bad)
cmp
inc
cmp
sub
pop
jo
jle
sub
lock
and
pusha
stos
mov
movntq
(bad)
mov
mov
mov
in
imul
mov
call
mov
mov
dec
int
ficomp
pop
inc
pop
stos
xchg
mov
xor
ja
pop
or
xchg
and
jo
dec
(bad)
mov
mov
add
mov
scas
js
and
mov
inc
push
inc
and
fisub
xchg
pop
cmps
cmp
mov
mov
jae
mov
pop
mov
ds
outs
and
push
aaa
cmp
or
outs
cwde
fbld
xor
xchg
push
cmp
add
(bad)
movs
sub
xchg
pop
lahf
add
call
cs
adc
mov
outs
or
and
push
cmp
movs
pop
retf
nop
cli
out
dec
push
stos
sbb
test
pop
add
outs
pop
and
and
mov
daa
jbe
mov
pop
cwde
sub
imul
cld
imul
mov
jnp
cmp
add
data16
jns
arpl
movs
xchg
fild
shl
mov
xor
aas
xchg
xchg
jno
out
sub
das
sub
xchg
cmps
loope
leave
and
push
sub
out
push
lods
enter
fdivr
dec
pop
fistp
movs
es
jno
pop
mov
mov
int
cld
retf
(bad)
bound
pop
jb
lods
out
in
in
js
das
lods
xchg
push
repz
add
xchg
jp
pop
mov
or
xor
push
push
rcl
shr
inc
xchg
cmp
pop
imul
sub
mov
fwait
setno
retf
ins
fldcw
shr
in
cvtpi2ps
and
dec
test
dec
retf
xlat
pop
fwait
mov
cs
and
call
aad
jg
ins
scas
ficomp
push
add
pop
cmp
gs
xchg
and
stos
lds
add
out
add
lods
xchg
aam
(bad)
ss
stos
pop
test
cs
cmps
out
das
(bad)
jo
bt
ret
int3
rol
(bad)
ret
pop
je
pop
cmp
test
clc
shl
js
sub
xchg
or
cli
xchg
shl
mov
mov
js
or
sub
add
pop
xchg
pop
test
xor
loope
(bad)
xchg
mov
aas
imul
es
adc
and
and
daa
pop
and
push
movs
sub
outs
pop
mov
push
ja
xchg
and
xchg
jecxz
sar
es
sbb
push
pop
inc
and
mov
stos
dec
pop
imul
sub
call
mov
outs
es
mov
inc
jne
(bad)
lds
jnp
sub
push
push
xor
xor
mov
xor
mov
call
push
lea
ret
mov
add
data16
in
stos
push
ss
inc
fisub
push
mov
jl
add
push
fs
ja
jp
mov
mov
scas
mov
lods
pop
mov
stos
xor
mov
mov
or
xchg
dec
clc
lahf
push
jp
cmps
dec
sahf
fadd
mov
icebp
mov
fisub
adc
lock
(bad)
adc
lock
mov
test
add
pop
clc
es
jae
sbb
sub
retf
jnp
mov
adc
shr
mov
xchg
xchg
push
lahf
cmp
test
sub
pop
sub
jge
xchg
sbb
pop
dec
jae
arpl
popf
aas
jg
fs
adc
inc
js
sub
mov
mov
pop
push
adc
(bad)
aaa
int
mov
in
xchg
inc
test
jae
inc
push
sbb
hlt
mov
jb
xor
dec
call
and
jmp
add
push
(bad)
outs
sti
ret
or
and
jp
lahf
test
aaa
cmp
out
jbe
jnp
cld
jno
pop
cs
fnstcw
arpl
jno
mov
xchg
cmc
daa
dec
sub
and
fisttp
ins
pop
sbb
je
and
(bad)
test
lea
lock
cld
push
cmps
ins
dec
std
push
push
loop
sub
xchg
in
push
mov
outs
jns
ins
push
jmp
arpl
mov
pusha
aad
fdivr
ins
jnp
loopne
dec
mov
sbb
(bad)
dec
pop
mov
xchg
movs
adc
cmps
sub
xchg
jp
addr16
push
scas
adc
dec
sub
arpl
ins
mov
sub
sub
adc
xor
es
lods
(bad)
ds
outs
mov
jecxz
push
fsubr
stos
push
aas
arpl
sbb
push
cs
xor
mov
(bad)
aas
out
pop
push
pop
int
mov
and
mov
cmps
arpl
add
and
pop
ins
js
aaa
inc
ja
sbb
sbb
mov
dec
jp
(bad)
int3
mov
xor
shl
xor
push
mov
add
lahf
pop
cli
jmp
xchg
arpl
icebp
je
jnp
int
jb
xor
mov
mov
call
jg
and
or
mov
int
xchg
das
stc
xlat
(bad)
pop
mov
jae
nop
pop
pop
movs
test
pop
ja
bound
push
pop
mov
push
ins
and
inc
mov
jmp
sysret
pusha
ja
mov
add
inc
mov
mov
std
jmp
push
stos
jmp
dec
cmps
add
mov
cmps
stos
xchg
jno
ins
(bad)
arpl
push
hlt
mov
mov
mov
adc
ins
add
sar
pop
mov
xchg
and
cdq
test
and
cmps
mov
xor
aam
sbb
shl
enter
mov
mov
mov
jmp
popa
data16
hlt
mov
xchg
rol
inc
mov
das
inc
pusha
mov
inc
cs
mov
popf
pop
jmp
popf
test
mov
mov
ret
scas
pop
cld
ret
mov
xchg
ins
cmp
mov
push
lods
cmps
scas
and
stos
add
ret
shr
push
mov
mov
fisub
mov
mov
sub
mov
pop
mov
icebp
ret
cmp
ins
xchg
leave
movs
add
inc
sbb
push
cmc
xchg
call
xor
fs
in
lods
int3
shr
lock
sub
lods
call
dec
dec
scas
mov
xchg
mov
in
mov
pop
ins
push
pop
mov
leave
jg
lods
mov
and
mov
and
xchg
cmp
pop
cld
in
cmps
mov
cmps
jae
aam
sub
cmps
cld
addr16
fcmovnb
inc
dec
push
sahf
pop
mov
movs
in
fsub
jp
mov
in
test
push
sbb
shr
retf
mov
mov
xchg
push
push
test
mov
jmp
lods
sti
sub
mov
or
inc
stos
(bad)
pop
mov
sti
cmp
and
or
clc
jae
fisub
test
(bad)
popa
sub
aas
and
mov
xor
mov
fxch
aas
aaa
in
jl
pop
out
jp
inc
add
pop
mov
mov
sub
stos
mov
and
or
cmps
ja
daa
and
pop
ret
pop
xchg
arpl
int3
nop
push
ja
xchg
out
in
int
xchg
loope
add
pop
movs
adc
mov
lea
loop
stos
aaa
xor
scas
inc
xor
sbb
rol
mov
mov
inc
leave
pop
in
je
inc
es
das
mov
xor
mov
sbb
xor
xchg
es
mov
stos
shr
add
xchg
out
mov
arpl
sar
cmp
scas
in
inc
out
sub
(bad)
outs
mov
mov
mov
xlat
xor
les
jo
push
test
mov
cmp
pop
stos
in
jo
push
push
mov
aaa
mov
lods
loope
pop
inc
sub
mov
inc
jg
adc
xchg
es
inc
hlt
xchg
pop
call
les
jg
hlt
push
xchg
xchg
adc
test
cmps
pop
cmp
or
xor
jo
mov
mov
pusha
sub
pop
jnp
push
lods
aas
fiadd
add
fdivr
in
xchg
loope
cmp
fstp
aaa
pop
out
lds
outs
jno
test
dec
mov
es
dec
inc
mov
or
dec
or
lea
and
push
jl
xchg
jbe
mov
scas
push
ins
iret
(bad)
pushf
test
xchg
mov
leave
out
dec
sub
pop
cmp
arpl
push
push
inc
mov
mov
inc
daa
imul
jge
jnp
xchg
and
mov
imul
rol
add
lds
mov
mov
or
or
scas
(bad)
xor
arpl
dec
mov
rcl
push
jne
popa
cmps
jnp
jae
les
dec
mov
jo
sbb
dec
push
xchg
data16
cmp
xchg
ror
arpl
loop
sub
xchg
in
test
shl
in
test
push
cmp
xchg
out
xchg
aam
jnp
mov
imul
or
xor
pop
xor
cmp
mov
pop
mov
movs
or
cmp
pop
es
mov
pop
aas
pusha
mov
out
xchg
jle
xor
cwde
mov
loopne
psubq
xchg
sti
mov
(bad)
ins
push
scas
mov
(bad)
xor
hlt
fsub
int
mov
adc
movs
xchg
inc
xor
or
fnstenv
mov
jg
ds
cmp
ins
popf
mov
pop
sbb
sahf
add
xchg
jo
or
pop
ins
cmp
adc
cs
jno
mov
repz
and
mov
dec
out
dec
imul
idiv
jle
inc
push
dec
pop
stc
mov
xor
jne
lds
mov
and
scas
jp
(bad)
mov
fmul
push
popa
jge
pop
push
scas
and
rcr
lock
fisubr
std
stos
xchg
aas
ror
mov
call
test
mov
ret
dec
test
outs
loopne
add
push
jp
mov
movs
out
mov
push
(bad)
not
xor
stos
in
jb
inc
aaa
popf
push
dec
jp
sbb
xor
mov
aam
test
pusha
hlt
sahf
mov
imul
js
(bad)
pop
and
imul
xchg
push
mov
pop
xor
dec
lds
call
addr16
retf
sub
(bad)
push
cmp
xchg
dec
add
fadd
bound
pop
in
stos
or
mov
in
push
cmps
adc
mov
cmp
cmps
mov
jnp
xchg
fwait
xchg
nop
(bad)
cmps
dec
mov
lahf
cli
js
jb
mov
lods
sub
lock
jnp
xor
fs
jle
mov
dec
dec
mov
jg
add
push
sbb
jno
jnp
aad
mov
cmps
popf
fmul
mov
inc
cmps
mov
dec
scas
(bad)
out
jo
mov
addr16
stos
es
jp
hlt
aas
mov
int
xchg
mov
aas
daa
mov
cmp
mul
aam
inc
jno
mov
imul
pop
popf
dec
popa
jae
fs
push
pop
mul
mov
out
cmp
add
adc
imul
outs
call
scas
jecxz
xchg
jo
pop
mov
dec
stos
imul
push
movs
in
(bad)
lods
push
in
pop
fisub
stos
xchg
xchg
imul
(bad)
jecxz
jle
lds
std
fdiv
pop
or
xlat
je
push
outs
jae
lods
jmp
mov
pop
mov
je
sub
dec
push
pusha
mov
out
gs
nop
and
(bad)
lods
dec
std
ror
cwde
push
sbb
xchg
or
jns
push
add
pop
ins
cmp
and
pop
(bad)
mov
jne
mov
fadd
daa
(bad)
lods
out
mov
ret
jp
xchg
jmp
int3
out
aas
mov
sub
cdq
int3
and
push
enter
mov
in
dec
pop
mov
js
mov
adc
mov
js
adc
sub
ror
lds
dec
stos
xor
sahf
xchg
add
shr
das
mov
mov
xchg
dec
xchg
jno
lea
bound
enter
and
scas
or
add
out
dec
fs
cmp
push
je
jno
outs
jae
(bad)
iret
mov
dec
jmp
and
es
mov
push
(bad)
fwait
push
add
jb
and
dec
ins
xchg
test
icebp
dec
outs
push
dec
jecxz
(bad)
and
mov
(bad)
xchg
fisub
sub
(bad)
dec
and
(bad)
addr16
pop
in
ins
push
jge
mov
push
mov
lock
mov
sbb
jg
ss
in
cli
aas
sbb
cdq
fisttp
lock
in
cli
mov
fwait
(bad)
jmp
mov
lds
sub
int
mov
std
iret
mov
cmc
jmp
out
addr16
jmp
daa
(bad)
movs
inc
lods
inc
mov
out
imul
ret
pop
sub
mov
int
inc
test
movs
(bad)
test
test
mov
out
btr
and
mov
adc
jg
lods
cmps
ret
stos
(bad)
(bad)
lock
mov
cmp
dec
stos
inc
icebp
stos
and
cmps
adc
dec
xchg
jle
es
jmp
mov
imul
es
fisttp
arpl
adc
cmps
stos
aas
test
scas
mov
cmp
cmc
sbb
push
scas
or
mov
or
pop
jbe
sub
icebp
mov
mov
and
jmp
adc
test
arpl
lods
mov
or
mov
xchg
cwde
repnz
inc
outs
xor
cmp
jbe
mov
mov
mov
mov
test
cmp
mov
stc
xchg
sti
xchg
pop
push
shl
pop
mov
dec
aam
(bad)
outs
ja
mov
ins
mov
and
mov
inc
push
ins
cmp
aam
out
sub
mov
imul
xchg
jns
sbb
xchg
fs
xchg
rol
cs
(bad)
xchg
sbb
and
fnstsw
cmp
sbb
cmps
xchg
xchg
sahf
or
iret
jno
jmp
scas
push
loope
sar
and
bound
stos
jmp
add
mov
loop
push
pusha
mov
ficom
cmp
dec
call
mov
dec
stos
sar
add
sbb
gs
mov
sbb
sub
pop
jno
push
cwde
sub
sbb
mov
push
nop
jmp
mov
(bad)
or
inc
xchg
jg
mov
mov
xchg
lock
mov
in
mov
out
sub
repnz
mov
(bad)
mov
mov
stos
adc
test
packssdw
mov
(bad)
icebp
jmp
dec
in
nop
popa
rcr
cmp
push
(bad)
pop
mov
mov
lods
jmp
call
aas
add
xor
mov
mov
lahf
sbb
(bad)
loop
or
and
cli
jge
ja
push
popf
out
scas
mov
sbb
push
and
sar
sub
mov
xor
and
fmul
gs
stos
ja
mov
lahf
cmp
jo
pop
adc
mov
(bad)
je
addr16
mov
sbb
xchg
xlat
mov
jp
mov
aaa
(bad)
and
ins
shl
cdq
dec
daa
mov
outs
push
(bad)
cwde
loopne
stos
int
mov
inc
and
add
pop
aas
push
shl
ins
jbe
xchg
jnp
icebp
mov
js
scas
jmp
pop
out
sub
scas
jge
mov
arpl
adc
cmp
xchg
jle
es
scas
push
fwait
mov
lock
mov
inc
jb
cmps
fisttp
add
push
cs
imul
stc
cmps
jbe
call
je
push
dec
mov
inc
and
in
sub
dec
pop
popa
outs
sbb
dec
mov
test
mov
jl
inc
arpl
and
cli
dec
test
leave
mov
daa
pop
mul
and
movs
(bad)
push
dec
shl
push
jle
(bad)
mov
adc
leave
xor
or
jmp
ret
mov
sub
push
jno
lock
add
call
pop
inc
test
mov
cmp
fmul
pop
mov
adc
jmp
aas
js
rcl
shl
rcr
hlt
out
jno
adc
or
cmps
or
pop
sub
(bad)
cli
retf
jmp
add
jae
ja
jle
sbb
mov
sbb
(bad)
cmps
sbb
and
xchg
ins
mov
mov
scas
xchg
pop
inc
adc
retf
ins
dec
fisub
sub
cmp
add
out
cmp
(bad)
test
sub
push
jp
jne
adc
lods
pop
iret
arpl
imul
sub
shl
clc
jg
push
mov
hlt
sub
mov
rcr
adc
and
icebp
mov
aad
jl
and
mov
or
test
and
xor
scas
aad
mov
cmp
inc
mov
push
aam
mov
ret
mov
jmp
mov
and
and
iret
mov
pusha
sbb
stos
call
(bad)
mov
mov
add
les
or
xor
mov
addr16
mov
jle
leave
(bad)
cmp
repnz
int3
jp
jp
in
(bad)
mul
pop
test
std
ss
scas
xor
push
fstp
test
test
ins
adc
inc
push
std
in
xor
ror
aam
pop
fbld
sar
js
out
jno
push
sbb
jp
pop
and
xlat
jp
pop
movs
mov
sub
sbb
cmp
ror
sub
and
pop
and
xchg
idiv
sbb
cmps
sub
out
scas
ds
mov
mov
add
imul
(bad)
stos
cmps
cli
(bad)
jmp
push
sbb
retf
loope
movs
pop
test
rol
mov
push
inc
fcomp
jg
sub
push
xchg
cmp
aaa
jo
pop
jle
push
xchg
cmp
mov
cmp
pop
xchg
cmp
jle
imul
push
cld
ret
jecxz
popa
iret
and
out
mov
adc
and
sahf
mov
stos
imul
adc
jbe
sti
mov
test
xchg
cmps
mov
es
sub
pop
push
ins
test
cs
xchg
mov
stos
scas
arpl
mov
dec
fcmovnb
fisub
out
js
xlat
sahf
lods
pop
mov
loop
stos
inc
mov
cmp
addr16
jo
mov
xchg
je
inc
(bad)
imul
mov
aas
mov
mov
cs
xchg
mov
daa
mov
cmp
ja
(bad)
imul
inc
mov
sub
mov
(bad)
ins
aas
xchg
lods
sub
mov
cmp
daa
inc
pop
mov
lahf
sub
fisubr
cmp
movs
daa
sbb
test
dec
and
(bad)
jns
popf
stos
mov
pop
xchg
(bad)
sub
xchg
out
movs
mov
dec
(bad)
mov
mov
(bad)
jge
dec
mov
and
sub
mov
mov
xchg
sub
ins
stos
out
dec
(bad)
fcomp
lds
add
mov
or
std
imul
push
fwait
popf
sub
(bad)
mov
mov
lea
ins
(bad)
or
fwait
cs
leave
movs
cs
leave
movs
test
cs
mov
mov
movs
xchg
ror
in
cs
sub
movs
cs
pop
enter
sbb
sbb
popf
fwait
or
popf
mov
(bad)
leave
enter
mov
leave
mov
scas
(bad)
aam
push
enter
mov
addr16
mov
cld
retf
jnp
mov
mov
fwait
jnp
mov
mov
fwait
hlt
(bad)
cmp
retf
ss
pop
mov
jno
ja
ss
cs
mov
add
jp
test
xor
leave
add
pop
add
lahf
mov
(bad)
sar
and
(bad)
sbb
jmp
mov
add
and
inc
stos
push
out
mov
stos
retf
mov
(bad)
adc
int3
mov
outs
pop
retf
ja
outs
inc
dec
push
lahf
mov
outs
inc
jmp
dec
jnp
outs
or
mov
mov
jnp
mov
jnp
mov
jns
xchg
test
popa
pop
or
xchg
mov
retf
dec
mov
(bad)
out
arpl
jmp
lahf
jl
mov
mov
pop
add
loop
cs
adc
mov
mov
mov
cli
int
jo
icebp
mov
dec
dec
test
rol
xor
mov
jae
out
ja
inc
mov
mov
adc
leave
sub
jb
sub
mov
jo
shr
jae
cmp
out
lahf
dec
sub
ds
jae
pop
movs
push
push
push
(bad)
sbb
mov
inc
dec
add
(bad)
pop
jle
(bad)
sub
cvtps2pi
sti
and
aas
mov
push
cmp
shl
loopne
fbstp
xchg
popf
int3
jg
fsubr
fwait
les
and
mov
popf
sbb
icebp
loop
test
sbb
mov
imul
mov
sub
sub
cli
(bad)
cmp
fwait
aaa
mov
movs
jge
adc
sub
jg
cmp
adc
out
movs
(bad)
push
rcr
pop
nop
pop
jp
call
pop
std
push
fwait
xchg
push
cmps
test
pusha
mov
ja
sbb
sbb
cli
jl
adc
sbb
mov
je
das
pop
fisub
pop
test
mov
pop
mov
inc
test
dec
cmp
lds
scas
stos
mov
rcl
cmps
sub
stc
cmps
imul
jne
push
sbb
push
jo
test
mov
xchg
arpl
out
test
stos
aam
jb
mov
ss
jae
inc
sub
dec
shl
mov
xor
jno
push
lea
mov
cmp
push
mov
or
push
mov
imul
dec
dec
dec
sbb
rol
mov
aaa
jo
in
mov
xlat
jle
add
push
sbb
push
jno
cmp
add
imul
mov
dec
inc
push
mov
adc
test
and
xchg
dec
xor
pusha
jp
mov
stos
sub
cld
dec
mov
bound
ja
in
xchg
int3
mov
jg
scas
cld
mov
xchg
fistp
xchg
add
inc
data16
aam
mov
fs
or
fs
xchg
jae
mov
call
shl
enter
std
xchg
push
aaa
push
nop
push
dec
mov
stos
cmp
sub
lods
mov
mov
cmp
add
in
rcr
xchg
xor
call
push
outs
jge
fsubp
cmp
repz
imul
retf
mov
pop
cmps
movs
rcr
mov
pop
mov
add
and
push
dec
sar
jae
mov
xlat
inc
aad
cld
sbb
jmp
push
hlt
cmp
dec
test
stos
xlat
mov
mov
mov
test
push
jmp
mov
and
and
cmp
ja
in
in
mov
ss
in
imul
jge
sbb
enter
pushf
sar
cmps
in
jnp
data16
push
out
mov
(bad)
(bad)
mov
ja
mov
rcl
jno
xor
inc
jne
cmp
jbe
mov
call
jecxz
gs
icebp
adc
pop
ficom
ret
pop
leave
lock
xchg
adc
pop
push
mov
repnz
push
mov
ja
mov
es
xchg
or
call
jg
sbb
mov
push
stos
loopne
push
call
(bad)
fstp
imul
sar
jg
imul
scas
mov
mov
or
pop
shl
push
mov
std
push
cmps
shl
ret
push
inc
pop
jle
xor
pop
mov
ret
mov
mov
push
cmp
pop
sbb
jmp
aam
mov
push
ret
adc
adc
stos
bound
lahf
ret
movs
imul
cmp
pop
(bad)
pop
and
add
test
cs
scas
adc
mov
add
add
scas
sub
pop
mov
aas
jns
arpl
or
and
fstp
add
pushf
stos
stos
(bad)
fwait
push
adc
daa
outs
cmp
test
(bad)
lods
xor
xchg
cmc
push
out
jne
and
ins
in
cmps
fiadd
cmp
out
dec
ins
ret
and
inc
xor
jp
int3
cmp
stos
xchg
movs
popf
and
xchg
inc
jg
and
or
mov
je
mov
inc
pop
xchg
stos
ja
or
movs
cmps
xchg
cs
add
jecxz
shl
inc
cmps
stc
sahf
xchg
jae
mov
pop
ror
pop
inc
mov
cdq
xor
fnstcw
adc
cmp
and
into
jno
dec
cmc
jo
cli
mov
enter
add
mov
mov
mov
mov
mov
sub
fisub
jae
and
lods
xchg
push
mov
stos
and
in
cld
pop
js
cwde
inc
ret
pop
add
inc
adc
gs
add
js
imul
mov
in
mov
in
mov
pop
jns
mov
bnd
shl
mov
jns
or
aad
push
sbb
adc
sub
inc
gs
out
fisttp
retf
push
xchg
mov
cwde
clc
jae
jae
fsub
inc
pop
shl
mov
ins
lea
mov
xlat
mov
test
cdq
pop
mov
add
cmps
loopne
jl
cwde
pop
xchg
xchg
mov
fimul
cmps
mov
inc
fisttp
push
inc
cmp
add
inc
jl
cmps
mov
jns
cmp
cmp
inc
jne
dec
popf
(bad)
out
test
je
or
mov
adc
fst
cdq
push
inc
xlat
adc
ds
push
leave
jge
jno
add
cmp
jmp
jb
out
push
add
imul
cmp
adc
pop
mov
jp
inc
or
(bad)
adc
loopne
mov
cs
iret
mov
ret
sub
loopne
clc
add
icebp
sti
add
(bad)
jb
popa
mov
mov
fisttp
jmp
test
and
ins
add
sbb
jle
jo
and
ds
and
jl
xchg
mov
lahf
lods
fwait
stos
mov
mov
bound
loop
ja
jno
jns
imul
outs
and
jae
inc
shr
lods
std
scas
test
fwait
mov
not
sbb
or
std
push
movs
sub
cmp
pop
scas
in
aad
fsubr
in
push
cmps
call
jg
jle
call
sbb
and
(bad)
(bad)
jmp
push
mov
and
push
push
sbb
cmps
cli
repnz
(bad)
cli
js
aas
jnp
pop
cs
test
mov
mov
out
push
push
out
loopne
dec
lods
dec
addr16
gs
cld
jge
cdq
jnp
rol
cmps
repnz
pop
mov
ja
xor
(bad)
js
adc
sbb
stos
cmps
xchg
cmp
call
cld
pushf
add
mov
fiadd
out
xchg
add
fisub
xchg
mov
mov
(bad)
in
ret
jmp
test
jl
mov
sbb
mov
fcomp
jae
mov
push
lahf
push
and
sbb
cld
pusha
mov
call
sbb
add
(bad)
jmp
jmp
jmp
int3
pop
or
and
retf
xchg
sub
adc
fwait
clc
ret
sub
mov
add
test
inc
push
push
xchg
mov
jg
cmps
stos
repz
dec
inc
xor
pop
mov
or
xlat
test
shl
jg
aaa
dec
ds
mov
cmps
lahf
out
aas
stos
movs
das
xchg
popf
mov
cmp
popa
adc
push
js
das
ficom
pop
mov
pop
push
xor
push
or
pop
fst
ficom
jl
sub
lea
mov
fistp
sub
lods
mov
gs
inc
scas
in
aad
call
int
mov
lahf
xor
jg
scas
or
ja
mul
stc
mov
xchg
mov
cmps
push
pop
sub
fbld
fsubr
es
sbb
mov
es
mov
(bad)
aas
dec
cmc
fsubr
scas
pop
stos
pop
mov
mov
in
cmp
jmp
jne
stos
mov
dec
movs
cmp
gs
les
out
outs
sub
mov
xchg
ins
lods
fs
daa
out
scas
ror
mov
mov
add
inc
rol
aam
stos
adc
mov
test
ret
or
mov
outs
call
rol
js
imul
sub
xchg
adc
push
pop
into
xchg
icebp
iret
es
jo
pop
aas
stos
int3
push
sub
mov
adc
dec
and
mov
fnstenv
repnz
add
sahf
aas
pop
pushf
cmovne
js
loope
ins
jne
adc
xchg
imul
shl
popf
mov
popa
sub
ds
js
jp
jnp
push
cmc
inc
call
mov
loope
or
fwait
xor
(bad)
ins
push
stos
push
push
add
jle
sti
mov
pop
rcl
pop
inc
adc
call
cmp
cmp
fmul
xchg
mov
cld
(bad)
mov
fmul
sub
jae
out
jmp
rol
and
sahf
xchg
aad
push
pop
leave
or
mov
mov
lea
jb
xchg
dec
push
jne
mov
and
repz
cmc
call
cs
mov
jge
add
push
lods
pop
and
lods
retf
xor
ret
mov
(bad)
not
js
push
jbe
and
ret
jp
jge
mov
cmps
jg
pusha
movs
dec
outs
mov
jg
push
imul
(bad)
les
cmp
jae
cmps
pop
xor
or
test
cmp
push
adc
lahf
inc
jl
(bad)
mov
mov
data16
aaa
aaa
inc
aad
loopne
jmp
adc
mov
mov
rcr
xlat
call
mov
cmp
scas
pop
jecxz
inc
out
(bad)
ins
xor
ds
mov
jmp
mov
mov
cmps
ret
cmps
mov
inc
lsl
push
shl
xchg
ins
(bad)
cmp
mov
in
mov
jl
dec
add
jae
cmc
fild
xchg
add
stos
mov
push
aaa
sub
adc
mov
or
cmp
add
or
push
test
(bad)
push
push
hlt
ins
push
xchg
cmp
xor
cld
cmp
adc
push
dec
jle
loopne
mov
mov
xor
movs
es
movs
mov
xlat
retf
xchg
xchg
push
mov
push
push
out
xor
pop
dec
xor
push
or
sahf
test
cmp
shl
je
cmps
leave
mov
jle
test
in
cmp
jo
(bad)
jnp
scas
(bad)
mov
jbe
and
pushf
mov
add
push
xchg
loop
je
pop
(bad)
lods
mov
aaa
gs
sub
jb
cmp
pop
leave
into
dec
ja
fwait
pusha
mov
sub
stos
int3
leave
mov
add
lahf
jne
scas
add
sub
stos
stos
imul
pop
mov
jnp
into
ficomp
mov
lods
ret
jp
out
dec
pop
inc
or
jle
xchg
add
jne
pop
jecxz
movs
scas
loop
mov
test
(bad)
ds
adc
xor
mov
push
sub
xlat
jno
push
ins
out
daa
push
jae
pop
stos
jnp
mov
sbb
out
jle
mov
inc
sbb
mov
cmps
mov
ds
pop
aaa
sub
imul
sub
mov
in
mov
cmp
add
jl
mov
mov
push
(bad)
fdecstp
cli
mov
fwait
mov
mov
test
mov
stos
mov
pop
jge
icebp
or
fwait
jle
cmp
jmp
repnz
aas
push
movs
(bad)
pop
pop
dec
daa
jg
cmps
mov
mov
scas
(bad)
ja
jnp
retf
cmps
fdivp
sub
or
xchg
cmps
jo
mov
fwait
sbb
mov
movs
sub
sbb
idiv
vhsubpd
inc
stos
mov
enter
scas
jp
mov
xchg
loop
xor
mov
sub
add
pop
cli
and
repnz
stos
fdivr
daa
neg
push
push
and
add
jns
or
mov
imul
add
scas
cmps
sub
xchg
lahf
or
xor
cwde
(bad)
ds
add
sbb
and
inc
push
aad
(bad)
xchg
ret
and
jns
cmp
fwait
dec
or
xchg
mov
dec
mov
push
mov
push
inc
jns
mov
adc
or
and
jo
cmp
or
out
movs
jb
add
fisttp
xchg
clc
push
mov
ret
js
adc
gs
(bad)
add
fild
fnstcw
pop
ret
fstp
imul
jmp
fistp
scas
jle
(bad)
push
mov
mov
add
and
xchg
std
mov
sti
shl
fucomip
add
ror
lods
std
in
aam
test
xor
dec
cmp
push
test
repnz
hlt
pop
stos
cmp
fdiv
pusha
arpl
add
mov
fs
mov
push
movs
popf
lea
out
aaa
pop
push
stos
dec
ret
scas
push
mov
ins
xor
in
xchg
mov
iret
mov
imul
sub
stos
lea
mov
xchg
shufps
cmp
cmps
jne
(bad)
sahf
js
push
cld
or
mov
mov
mov
movs
add
dec
mov
aas
addr16
movs
aaa
idiv
dec
ins
(bad)
adc
scas
inc
fiadd
out
lds
pop
jg
arpl
mov
imul
jno
xor
push
jbe
mov
cmp
cmp
shl
cmp
mov
mov
lods
xchg
shl
sbb
jl
mov
fsubrp
lahf
pop
jbe
stos
xor
mov
mov
jg
fmul
cld
xchg
mov
jg
addr16
add
(bad)
jns
mov
sbb
in
adc
inc
loopne
loop
or
cmc
ss
cdq
mov
mov
xchg
rol
jmp
lds
scas
sahf
mov
pushf
dec
shr
dec
cmps
idiv
retf
mov
fld
mov
push
(bad)
(bad)
mov
push
ins
mov
pop
leave
ds
push
push
(bad)
jg
(bad)
movs
ds
or
(bad)
(bad)
push
mov
adc
add
ret
mov
jae
dec
(bad)
inc
in
loop
mov
mov
sub
dec
or
dec
cmp
cld
lods
(bad)
and
stos
enter
inc
(bad)
loopne
and
mov
imul
ja
mov
sar
sbb
repnz
shl
(bad)
push
shl
add
fbstp
pop
lods
xor
inc
sub
jle
jg
sbb
or
popa
aam
test
cmp
sbb
xor
dec
push
xchg
jmp
mov
cmovne
ret
ret
push
xchg
mov
push
retf
(bad)
or
jnp
pop
jp
inc
jb
or
xchg
jp
mov
bound
add
add
adc
ret
es
mov
xchg
and
mov
test
and
push
mov
imul
or
lods
(bad)
sub
stos
add
xchg
fadd
jle
cmp
mov
rol
push
mov
and
fs
ds
sub
jns
bound
jl
(bad)
cmc
sbb
in
retf
addr16
mov
lods
mov
cmp
mov
cmp
add
cmp
test
jge
data16
ds
and
pop
adc
cmps
scas
sahf
sbb
cmp
int3
mov
cmpxchg
arpl
jg
(bad)
jns
outs
cwde
add
out
push
or
mov
das
xchg
cmp
das
sti
cli
popf
push
or
cmps
push
adc
mov
jno
imul
xchg
mov
adc
mov
and
imul
xor
jae
gs
jg
jg
xor
outs
mov
push
xchg
cmp
lea
mov
mov
test
sub
lock
(bad)
push
addr16
or
imul
jg
inc
test
pusha
es
outs
add
push
inc
das
dec
(bad)
cdq
stc
dec
jg
push
dec
push
mov
les
fldenv
sub
das
jb
imul
push
dec
adc
sub
out
xor
loop
call
add
movs
(bad)
retf
mov
inc
aaa
sub
enter
dec
dec
mov
mov
dec
add
adc
bound
aaa
es
not
es
pop
movs
arpl
cmp
sub
(bad)
repnz
and
dec
sub
imul
and
sub
(bad)
sbb
cdq
cwde
dec
lods
cwde
cmp
push
mov
movs
(bad)
xor
dec
movs
and
adc
pop
sar
mov
mov
and
mov
daa
shr
and
lods
mov
jb
adc
fwait
pop
int
gs
push
(bad)
xor
sub
jae
mov
scas
or
sub
or
shl
push
mov
or
xchg
ss
mov
inc
jns
add
adc
iret
dec
movs
jb
jmp
mov
mov
xor
leave
movs
adc
dec
and
aaa
addr16
or
mov
loopne
cmp
test
sbb
add
push
test
ins
dec
iret
pushf
push
or
add
pop
addr16
loopne
fisubr
push
(bad)
xchg
and
xchg
ror
(bad)
retf
jle
nop
leave
mov
addr16
jl
xchg
sahf
jnp
xchg
mov
icebp
or
xor
mov
(bad)
shl
mov
sbb
push
add
cld
(bad)
(bad)
xchg
addr16
mov
jbe
repz
lock
or
cmp
sbb
adc
add
mov
mov
mov
clc
cwde
sbb
push
jne
pop
inc
cmp
addr16
push
xor
loope
inc
pop
or
mov
mov
(bad)
js
push
bound
adc
inc
fsubr
lods
add
stos
xor
ja
add
scas
and
iret
xchg
aad
cmp
mov
stos
es
je
das
ja
xchg
jecxz
push
je
scas
stc
xchg
test
mov
mov
dec
jl
mov
ss
(bad)
sub
pop
cmps
or
loop
jg
jle
cmp
or
mov
mov
sbb
popa
mov
inc
inc
arpl
fdivr
pop
cmp
push
inc
std
das
mov
xchg
sbb
gs
lea
jp
arpl
pop
inc
mov
loope
xchg
cmps
jle
cli
(bad)
loope
mov
mov
and
or
in
ins
iret
sub
and
inc
xor
addr16
nop
xchg
lds
fcmovbe
inc
int
and
xchg
cmps
(bad)
mov
add
popa
ins
jnp
jp
ret
mov
mov
mov
mov
xchg
daa
cmp
mov
cmps
fidiv
scas
jns
xchg
jp
cmp
shl
xchg
gs
xlat
xor
dec
jl
pop
leave
push
mov
popf
push
test
rcl
or
out
je
cmps
test
cmp
cwde
fs
sub
rol
pop
out
jmp
lahf
inc
scas
test
addr16
dec
ins
lds
call
add
out
gs
and
push
push
lahf
popf
push
mov
push
retf
mov
jp
out
mov
mov
cdq
mov
js
shl
sub
dec
addr16
xchg
imul
add
call
and
rol
jl
pop
test
xchg
das
lods
sbb
or
sahf
push
adc
(bad)
iret
xchg
sub
rol
inc
xchg
adc
xor
cmps
(bad)
repz
push
mov
icebp
es
jo
mov
push
xchg
ss
adc
ds
cmp
hlt
jae
lock
and
and
(bad)
out
push
jb
ret
sub
cmp
ins
push
cmp
push
data16
(bad)
jb
in
repnz
push
in
in
(bad)
cmc
cmc
xor
addr16
fmul
mov
ins
push
(bad)
test
mov
shr
mov
imul
(bad)
jl
cmp
jbe
test
or
(bad)
iret
inc
in
xchg
and
mov
in
inc
sub
sub
mov
call
xor
dec
mov
jp
test
adc
mov
jmp
push
add
rol
sbb
test
push
jmp
je
ins
pop
(bad)
cmp
enter
xchg
cmp
mov
jno
xchg
xor
(bad)
int3
sahf
xchg
sbb
pusha
push
adc
mov
les
lds
jo
jb
or
stos
dec
adc
inc
cmp
fisub
push
or
adc
mov
cwde
push
push
cmp
imul
(bad)
aam
inc
mov
xchg
test
mov
xor
mov
in
cmps
sbb
scas
ins
inc
mov
or
jg
xor
and
cs
xchg
rcl
les
cmp
sbb
mov
mov
ins
pop
daa
xchg
movs
mov
das
xor
addr16
addr16
nop
popa
in
pop
mov
dec
sbb
ja
push
jle
sbb
popa
sub
fwait
leave
lea
jle
jg
xchg
sbb
movs
pushf
repz
iret
mov
repz
(bad)
pop
shl
ins
mov
loop
ins
sbb
xor
pop
xor
movs
ret
lods
or
dec
stos
mov
fild
imul
imul
shl
gs
les
in
pop
mov
mov
ja
mov
rcr
dec
mov
retf
cmp
lea
imul
push
pushf
lods
in
mov
xchg
les
jno
aas
neg
mov
test
xlat
test
jae
loop
jg
stos
or
sbb
xchg
cmps
icebp
cmps
fld1
mov
(bad)
scas
jp
cmps
sbb
sbb
jb
fimul
in
sbb
dec
fld
xchg
mov
int3
cmc
outs
fdivrp
repnz
push
pop
js
mov
arpl
ins
mov
popa
fdiv
inc
add
fwait
das
xor
outs
enter
cdq
dec
cld
xchg
mov
ffreep
jb
xchg
lds
popa
in
pop
sbb
cmps
cs
ins
jb
mov
(bad)
mov
adc
(bad)
fisubr
arpl
in
jb
inc
sub
pop
test
pop
mov
out
pop
addr16
data16
inc
dec
out
or
xor
xchg
sub
sub
int
scas
mov
adc
sub
aad
pop
fs
imul
push
int
xchg
add
outs
push
daa
scas
adc
jg
cmp
or
popf
pop
es
sub
lods
pop
jl
loop
jae
aad
scas
add
sub
pmaxub
aaa
(bad)
mov
iret
add
xchg
cmp
mov
outs
gs
mov
add
dec
fisub
pop
popf
aas
sub
loopne
dec
sahf
stos
cmp
sub
jl
sub
lahf
push
jge
test
mov
(bad)
mov
fild
fdivr
xchg
sub
jg
add
mov
jmp
sub
fwait
ret
pop
pop
dec
pop
cmp
and
jge
aad
jbe
out
ins
push
mov
imul
fwait
popf
ja
(bad)
out
test
and
mov
sbb
inc
jb
call
mov
data16
sub
jp
sub
cmp
or
and
push
mov
scas
jbe
aaa
xchg
dec
push
inc
xor
or
mov
pop
cmc
push
ins
ds
jge
sbb
lock
test
stos
je
jmp
lods
cmps
jp
lahf
cmp
jbe
bound
lea
mov
xchg
leave
jle
xchg
xlat
and
cmp
js
dec
cs
lds
mov
mov
mov
xor
scas
push
mov
xchg
fs
lods
dec
xchg
test
adc
pop
fs
dec
mov
xchg
cld
addr16
imul
mov
mov
mov
mov
loopne
retf
mov
and
movs
cmp
pop
fs
lods
into
mov
cmp
mov
xor
fdiv
mov
(bad)
in
arpl
fbld
jmp
push
xchg
push
mov
(bad)
pop
aas
xchg
mov
cmp
xchg
fs
jno
es
adc
jmp
(bad)
mov
pop
sub
(bad)
call
fs
mov
aad
sbb
mov
mov
das
jne
shl
ds
adc
and
pusha
jp
iret
dec
jge
cmp
cmp
adc
int
popa
xchg
stos
sar
cs
cwde
push
cmp
cdq
mov
hlt
daa
sub
add
test
sbb
jno
rcl
int3
jl
mov
ins
xchg
out
stos
jg
sbb
sti
push
mov
xlat
jl
jmp
je
sub
sub
cmp
int3
lahf
xor
mov
enter
rcr
inc
arpl
pop
cmp
jg
pushf
in
push
jnp
adc
push
push
jo
or
sbb
scas
xor
jno
gs
icebp
icebp
mov
push
dec
(bad)
(bad)
mov
mov
xchg
outs
push
(bad)
aad
mov
cmp
pop
stc
imul
jae
adc
mov
popa
ja
data16
test
mov
div
pop
outs
xchg
cmp
inc
jae
push
mov
inc
mov
sub
lahf
push
aas
scas
xchg
je
push
or
hlt
mov
lods
clc
jno
jae
xchg
pop
xor
addr16
sti
in
push
fnsave
arpl
xor
add
test
inc
jmp
in
lock
cmc
aam
repz
mov
jge
enter
sti
xor
dec
sub
adc
fidiv
cmps
(bad)
cmp
fcmovne
pushf
jg
ja
movs
xchg
js
imul
jl
mov
mov
and
out
sub
dec
cmps
mov
(bad)
xchg
rol
es
data16
push
out
jg
or
inc
mov
in
jp
daa
aas
and
sar
lods
(bad)
pusha
cmp
add
push
shr
stos
(bad)
xchg
cmp
mov
xor
stos
mov
push
pop
fisub
lahf
mov
stos
xchg
js
or
xchg
jo
lea
movs
jg
cmp
adc
fld
fdivrp
xchg
mov
xor
mov
(bad)
inc
mov
sbb
cmp
jnp
cmp
daa
lahf
pop
jnp
arpl
inc
cmp
mov
das
cmp
xchg
and
out
sub
in
cs
xchg
out
cli
push
in
add
mov
bound
mov
mov
jae
fsubr
mov
push
or
jl
imul
hlt
(bad)
fcomp
retf
(bad)
dec
push
mov
mov
outs
in
dec
aas
ins
cmps
mov
div
bound
js
pop
mov
fsub
pop
(bad)
pop
test
out
imul
fwait
mov
jbe
push
mov
and
and
scas
and
fcom
shr
add
and
jo
inc
popf
lods
xchg
inc
test
(bad)
sbb
jae
shl
outs
cli
cmp
pop
movs
and
mov
out
adc
xor
cmps
sbb
outs
push
movs
mov
mov
jmp
xchg
mov
push
movs
mov
mov
call
push
mov
mov
mov
mov
cmps
push
fisttp
ja
pop
fstp
add
cmp
in
movs
addr16
pushf
xor
out
mov
cwde
stc
je
cmp
loop
jae
jp
daa
je
mov
inc
mov
fwait
mov
and
cmp
xchg
popa
(bad)
and
mov
sbb
xchg
jp
cmp
xchg
adc
and
mov
pop
fs
inc
add
scas
nop
jnp
jg
adc
imul
xchg
loop
xchg
ja
in
pusha
jle
cmp
call
mov
cmp
sar
dec
dec
xchg
add
test
inc
jg
cmps
jg
jnp
sub
xor
mov
xor
aad
cmps
mov
pop
push
push
push
loopne
mov
mov
stos
and
jmp
sbb
cmps
mov
data16
jns
inc
aam
mov
jle
and
jle
jp
and
adc
mov
jmp
mov
xchg
xor
es
pop
pop
sar
and
daa
jne
inc
scas
xor
daa
in
icebp
jg
scas
and
stos
jmp
cmp
retf
fucomi
test
push
rcr
pop
mov
(bad)
dec
sbb
jl
mov
mov
or
loop
mov
inc
mov
ret
stos
sbb
and
cmp
hlt
addr16
mov
pop
movs
mov
repnz
inc
sub
pop
inc
mov
xor
bound
xchg
cmps
cmps
loope
int
mov
in
gs
add
mov
and
nop
sbb
popa
adc
pop
mov
jmp
add
add
lds
jnp
mov
pop
in
scas
cmp
inc
cld
les
hlt
push
retf
ds
jle
xor
pop
dec
sub
es
jge
pop
mov
xor
mov
ja
xlat
sub
pop
data16
cmc
pop
movs
cli
leave
mov
lock
jo
imul
adc
jo
je
sub
jge
scas
loope
(bad)
out
add
pop
mov
daa
jno
jne
aaa
addr16
repnz
fs
cmp
(bad)
dec
mov
mov
push
int3
rcl
gs
stos
sahf
xchg
data16
in
pop
sahf
shl
mov
data16
push
aaa
call
hlt
xchg
mov
add
push
mov
loopne
inc
clc
int3
mov
enter
push
movs
and
int3
ret
ret
movs
mov
xchg
addr16
xchg
stos
test
inc
movs
cwde
cmp
add
(bad)
mov
inc
dec
jmp
dec
bound
dec
xchg
pop
inc
jmp
push
mov
inc
jle
loope
push
mov
and
cmps
inc
(bad)
fsubp
shl
and
cmp
movs
clc
es
fcomp
mov
popa
mov
shl
cld
daa
push
(bad)
mov
ss
jb
les
xor
into
cmp
cli
and
mov
jle
xor
movs
leave
mov
push
mov
out
call
ins
mov
(bad)
in
pop
mov
pop
sub
and
mov
(bad)
xor
ret
movs
bound
xor
cmp
clc
in
jo
or
sub
mov
movs
out
dec
push
or
in
out
lahf
fwait
iret
pop
cmp
pop
call
mov
adc
loop
aaa
or
xrelease
add
pop
inc
addr16
inc
push
mov
add
loope
ror
jmp
mov
inc
dec
mov
sub
jmp
mov
xor
xlat
imul
xor
ss
xor
sahf
sub
jnp
adc
pop
out
ss
imul
mov
mov
ss
lahf
mov
lahf
(bad)
out
dec
inc
jae
add
jno
push
fwait
mov
fwait
loop
dec
ret
mov
hlt
jno
cmps
inc
clc
ss
popf
and
pushf
aam
js
pop
les
fs
cmps
iret
lock
mov
lock
nop
data16
cmp
mov
cli
adc
add
mov
dec
pop
and
dec
jge
push
jne
lds
es
fldenv
add
cli
test
(bad)
ins
cwde
dec
xchg
inc
pop
into
sub
mov
sub
lea
mov
inc
(bad)
(bad)
dec
ror
add
mov
jmp
test
xor
cmp
jmp
push
jge
pop
jns
mov
jmp
pop
stos
mov
push
xchg
icebp
test
hlt
mov
cmps
mov
mov
mov
pop
sub
imul
sti
rcl
loope
outs
in
push
push
iret
gs
ret
scas
pop
jne
cmc
es
pop
cmp
movs
shl
imul
aas
cmp
sub
lea
fnstenv
push
(bad)
ret
pop
fs
mov
ss
mov
mov
in
mov
and
fisttp
imul
movs
cli
or
xchg
(bad)
das
arpl
lea
ja
scas
bound
mov
or
call
push
retf
mov
push
and
in
mov
ret
push
jmp
dec
enter
(bad)
shl
cmp
out
push
jo
test
lds
lods
out
and
xor
call
sbb
pop
pop
xchg
mov
movs
mov
stos
sub
cmps
(bad)
int
push
mov
(bad)
mov
std
or
cmp
fisub
mov
shl
push
cmps
push
dec
das
ins
mov
stos
sahf
or
fwait
es
out
and
and
cmp
jmp
dec
lahf
arpl
ins
in
pop
mov
lods
mov
and
cmp
loope
xor
and
jmp
adc
mov
aad
inc
fsubr
push
(bad)
xchg
imul
ds
xor
jo
call
sub
cmp
cs
dec
jmp
inc
inc
jl
dec
pop
addr16
mov
and
pop
mov
mov
cmp
mov
push
push
xor
xor
add
cli
sub
fcom
mov
mov
test
ds
js
ins
adc
call
xchg
inc
les
pop
pop
sbb
test
cmp
(bad)
jg
mov
adc
mov
jmp
jmp
icebp
and
dec
(bad)
mov
add
(bad)
lds
mov
loop
push
sub
fstp
jne
fbld
stc
mov
sbb
or
mov
push
or
or
sar
adc
or
add
sub
nop
or
add
mov
xchg
aas
sub
mov
jp
inc
nop
pop
idiv
sub
mov
lock
and
(bad)
adc
fisttp
fmul
sbb
jecxz
js
movs
(bad)
mov
add
or
cs
shl
pop
mov
addr16
push
in
hlt
cmp
or
popa
xchg
sub
mov
push
cs
ja
mov
mov
(bad)
fist
and
ins
pop
scas
call
pop
outs
dec
ror
sar
pop
xor
cmp
jns
mov
cli
pushf
sbb
int3
push
mov
cs
and
xor
fs
and
fsub
push
in
jb
test
in
(bad)
hlt
xor
out
sbb
in
mov
push
in
pushf
cld
sub
xlat
iret
mov
mov
int3
lods
adc
das
fwait
inc
loopne
arpl
lahf
idiv
lods
(bad)
test
push
lea
mov
(bad)
in
ret
loopne
les
inc
and
sti
jge
ret
or
iret
idiv
pop
jecxz
stc
lea
fwait
scas
jl
lods
jmp
jle
mov
ret
xchg
cmc
xchg
dec
loopne
adc
mov
push
addr16
pusha
loope
dec
movs
pop
ins
add
jmp
pop
mov
arpl
and
int3
popa
cmp
in
test
cli
jb
xchg
lods
inc
cmp
sub
dec
jnp
call
mov
mov
mov
bound
ret
xor
mov
jb
popa
mov
inc
test
push
dec
mov
xchg
ficomp
push
mov
scas
mov
stc
mov
movs
push
(bad)
mov
test
cmps
pop
mov
iret
retf
ins
inc
mov
test
test
test
std
ret
lods
sub
xor
jecxz
test
cmp
cmps
add
adc
in
sub
loope
scas
ins
mov
pop
sbb
stos
dec
cs
loope
arpl
nop
in
lahf
rcr
pop
and
out
push
sahf
das
jp
js
arpl
inc
cli
in
xchg
test
imul
pop
ins
arpl
sbb
and
lahf
lds
ja
push
scas
stc
and
pushf
lds
hlt
adc
xor
jnp
cmp
repnz
dec
mov
in
or
cmp
lods
mov
lea
jb
pop
mov
(bad)
xor
stos
movs
idiv
call
inc
rol
jg
test
(bad)
xchg
xlat
icebp
mov
shr
xchg
mov
add
mov
jl
jp
mov
or
mov
inc
push
clc
jae
push
fmul
lea
push
push
mov
addr16
cmps
dec
xlat
call
inc
imul
cmp
pop
fstp
xchg
add
jno
xor
push
loop
xchg
xchg
test
mov
(bad)
mov
adc
dec
clc
data16
not
pop
pop
cmp
out
pop
jp
jg
leave
(bad)
jno
mov
xchg
mov
scas
mov
ins
push
cmps
lods
pop
mov
jo
popf
mov
inc
lods
icebp
jmp
ret
mov
jno
dec
sub
xor
mov
xchg
inc
movs
lods
out
cmp
mov
out
lahf
not
hlt
pop
icebp
je
adc
js
sbb
pop
mov
scas
je
test
cmps
jae
inc
xrelease
jne
add
mov
jae
push
pop
and
shr
cmc
mov
pop
cmps
and
xchg
outs
jae
in
add
sub
mov
and
popf
inc
jo
dec
mov
pop
popa
xor
ins
lods
in
ror
xchg
lea
aad
(bad)
jg
outs
cwde
stos
mov
pop
mov
sbb
mov
enter
stos
inc
xchg
mov
ret
cwde
inc
mov
lahf
sar
sar
movs
jle
out
dec
push
push
jmp
xchg
push
push
and
add
(bad)
jmp
stos
and
arpl
mov
add
scas
lods
mov
jmp
fs
ficomp
sbb
test
and
cmp
cmps
inc
xor
or
cmp
shl
and
jg
cmp
xor
or
pop
push
jo
xor
or
cmps
(bad)
xor
(bad)
cli
adc
movs
adc
in
or
out
in
jne
add
das
das
imul
jg
pop
adc
lods
mov
in
std
xchg
add
pushf
rcl
scas
or
mov
mov
sbb
adc
mov
push
mov
mov
imul
xchg
or
jge
(bad)
stos
lods
js
outs
lahf
jns
cmp
pusha
xor
push
mov
out
xchg
out
shrd
or
jg
dec
xchg
(bad)
jg
cdq
pop
push
mov
add
(bad)
ss
mov
mov
xor
fs
ret
frstor
cmp
lea
popf
push
xchg
jnp
jle
mov
or
inc
pusha
scas
sbb
jae
retf
(bad)
xor
imul
ss
jle
sbb
daa
jmp
fwait
arpl
mov
ret
jp
push
dec
xlat
fs
sbb
inc
sub
jbe
mov
pop
xchg
out
push
and
jg
and
jo
popa
sub
inc
jle
mov
mov
pop
rol
shl
in
push
cmc
out
scas
push
pop
xchg
inc
pop
gs
xor
mov
jl
push
scas
mov
(bad)
cmc
jbe
fdivr
pop
ins
pop
mov
pop
(bad)
pop
xor
js
scas
mov
dec
xchg
xchg
mov
mov
pop
in
ds
je
push
mov
mov
mov
outs
add
cmp
shl
add
sbb
js
jle
rcl
sbb
inc
(bad)
rcr
mov
jmp
jnp
sbb
mov
adc
clc
mov
dec
xchg
test
xchg
(bad)
xchg
fwait
aas
jmp
fdiv
pusha
mov
inc
or
repz
movs
mov
xor
pusha
xor
jle
nop
dec
and
cmp
int3
pop
push
or
int3
mov
cmp
int
es
sbb
stos
loop
mov
pop
cmps
inc
inc
lahf
mov
sahf
es
sub
in
add
sbb
clc
adc
jg
(bad)
and
pop
aam
gs
or
adc
xor
pop
fsub
(bad)
out
(bad)
out
sub
lods
(bad)
mov
arpl
hlt
cmps
movs
mov
out
rcl
and
pusha
push
pop
arpl
imul
xor
movs
pop
out
mov
dec
popa
sub
jge
test
fwait
dec
es
lahf
inc
sar
sar
pop
push
mov
jns
mov
ds
mov
pop
dec
imul
add
dec
jb
cmp
(bad)
(bad)
dec
dec
lods
mov
pop
push
stos
pop
cs
sbb
popa
ror
mov
adc
sbb
(bad)
jmp
out
push
out
cmp
(bad)
js
das
ret
lock
xchg
inc
iret
(bad)
pushf
add
pop
xchg
mov
into
sub
sahf
test
pusha
ret
xchg
mov
fild
movs
arpl
imul
mov
jnp
cmps
mov
mov
test
mov
gs
push
in
push
adc
mov
push
xchg
pushfw
xor
lea
and
das
sub
mov
movs
cmps
clc
mov
or
ds
sbb
adc
(bad)
and
das
out
pop
imul
es
mov
stos
fistp
lds
adc
push
mov
cmp
sahf
daa
lahf
int3
(bad)
in
loop
mov
sub
cmp
cmp
mov
adc
mov
aam
lahf
icebp
ss
and
cwde
xchg
call
jl
lods
mov
pop
jb
mov
lahf
mov
sub
out
mov
imul
stos
mov
mov
fwait
arpl
dec
sbb
adc
sub
mov
mov
mov
not
stos
(bad)
jl
or
mov
jmp
cmp
mov
adc
or
xchg
jecxz
push
sbb
push
(bad)
sbb
retf
test
loopne
dec
(bad)
(bad)
fnstsw
adc
dec
mov
icebp
es
nop
lods
push
(bad)
push
sbb
adc
pop
mov
jmp
mov
add
ret
and
sub
fbld
mov
jg
push
loopne
inc
push
push
sub
sub
adc
cmp
xchg
lods
lods
je
sahf
adc
sti
pushf
in
mov
or
(bad)
pushf
cld
jge
in
pop
mov
and
xchg
mov
mov
jg
xchg
mov
mov
outs
nop
mov
xchg
push
lea
mov
(bad)
in
lds
mov
outs
mov
mov
add
mov
xchg
(bad)
cmp
sahf
xchg
test
sub
scas
imul
inc
xchg
jnp
sub
mov
rol
ss
popf
imul
add
fwait
lods
push
out
and
(bad)
xchg
fldenv
mov
xor
sub
adc
or
cmp
dec
mov
lds
dec
inc
cmps
mov
sbb
fstp
or
push
mov
int3
call
jo
fadd
and
(bad)
in
cmc
sub
lods
fimul
popf
not
lea
sub
mov
and
(bad)
rol
and
dec
jle
cmps
adc
popf
mov
xor
pop
mov
mov
or
mov
stos
dec
ret
push
mov
mov
xchg
dec
mov
pop
mov
scas
mov
lods
in
ret
imul
psubusb
out
ins
adc
pushf
js
popf
mov
into
pop
arpl
mov
fisttp
popa
js
outs
pop
mov
inc
arpl
sbb
or
ins
mov
std
mov
jnp
in
adc
int3
mov
sub
aas
pop
adc
xchg
lods
sti
xchg
add
call
jbe
es
or
lods
lods
stos
stos
test
dec
cmps
xlat
cmps
(bad)
jns
movs
adc
and
push
stos
cmps
arpl
mov
fwait
je
mov
xor
jecxz
lods
pop
aad
push
and
pop
adc
mov
out
imul
mov
push
daa
adc
(bad)
scas
sbb
dec
movs
mov
dec
aas
push
xchg
rol
inc
rcl
jne
ror
or
cmp
push
push
out
push
sbb
out
int3
fldlg2
cdq
cmps
mov
call
push
mov
jg
add
xchg
jl
mov
les
out
movs
fstp
pushf
sbb
out
cmps
mov
stc
sub
adc
jmp
les
shl
push
sbb
inc
pushf
popf
cmp
icebp
mov
push
xchg
or
loopne
div
and
test
icebp
mov
hlt
sbb
js
and
or
inc
in
jns
mov
xchg
mov
mov
sbb
or
cmp
adc
sub
(bad)
addr16
sbb
sar
retf
or
mov
pmaddwd
xchg
mov
inc
mov
mov
call
jb
repnz
(bad)
xor
popf
packuswb
jg
xchg
in
jne
add
inc
leave
test
aad
call
fsubr
xchg
add
arpl
mov
(bad)
into
outs
nop
push
jno
in
mov
js
jmp
stos
mov
sbb
add
dec
or
dec
daa
jbe
repnz
jns
sbb
xchg
cmp
jbe
jmp
outs
loope
out
xchg
xchg
enter
cmps
(bad)
fwait
dec
cdq
idiv
sbb
and
mov
or
fisttp
enter
out
jb
push
retf
push
sbb
mov
jmp
addr16
mov
adc
push
pop
mov
aaa
movs
pop
mov
mov
mov
cmp
test
cdq
addr16
mov
fsub
inc
shl
pop
mov
repz
inc
mov
arpl
or
in
daa
cmp
jnp
std
in
sti
adc
jo
sbb
jle
std
out
dec
jp
adc
mov
pop
xchg
or
(bad)
aam
sbb
cmps
dec
hlt
mov
jbe
lea
addr16
add
pop
(bad)
jecxz
sbb
ins
mov
xchg
fbld
punpcklwd
lods
cs
jns
mov
or
out
add
adc
leave
mov
out
mov
scas
loop
lahf
cmps
fwait
mov
imul
mov
scas
ds
or
xchg
jmp
out
imul
(bad)
hlt
imul
shr
popf
pop
pop
push
ja
jno
jmp
add
std
add
xchg
loope
push
fisttp
inc
je
jb
sbb
aad
adc
dec
mov
add
daa
ins
jo
call
xchg
aad
pop
adc
lahf
lds
test
cli
shr
cmp
aam
arpl
push
sub
mov
out
mov
movs
mov
xor
sbb
cld
and
jae
and
jmp
sub
pop
mov
test
fs
sbb
bound
out
std
dec
loopne
jle
ret
mov
enter
(bad)
jmp
xor
xlat
mov
jl
shl
fwait
lahf
ja
out
or
pop
xchg
std
xchg
mov
xchg
push
add
mov
jmp
dec
sbb
jle
in
push
xchg
aaa
mov
in
pushf
std
ins
popf
scas
xchg
int3
repz
push
js
cmp
out
mov
mov
pop
push
ss
push
outs
adc
lock
jbe
lods
je
arpl
push
pop
inc
sbb
(bad)
or
cmp
inc
mov
cmp
xchg
repz
(bad)
cmps
call
sbb
aaa
int
mov
sahf
cmps
aas
inc
clc
jae
dec
in
jp
scas
jae
mov
push
inc
sub
cli
shr
jns
ja
mov
iret
add
xchg
sbb
mov
or
push
in
mov
pop
or
ss
pop
cmp
mov
mov
push
addr16
loop
mov
mov
cmp
dec
sub
xchg
aas
jmp
sbb
dec
movs
mov
mov
nop
loope
nop
jo
jo
dec
xor
scas
mov
xor
mov
lods
icebp
jo
dec
xor
(bad)
dec
dec
dec
mov
pcmpgtw
jge
mov
inc
out
or
cmp
enter
pop
lods
push
xor
add
mov
inc
dec
outs
outs
scas
mov
pop
inc
inc
test
jno
pop
js
imul
dec
mov
in
cmp
scas
pop
push
xor
mov
pop
add
retf
mov
fwait
stc
rcr
push
add
sbb
jmp
les
push
movs
cwde
imul
iret
popf
push
mov
lds
dec
movs
pop
div
mov
rcl
pop
sub
(bad)
pop
in
(bad)
push
dec
jbe
es
int
jne
mov
inc
or
mul
popf
mov
outs
pop
ret
mov
pop
dec
xchg
ret
or
xor
daa
pop
jg
mov
mov
mov
push
cmp
je
je
sbb
mov
jge
sub
adc
mov
sub
jg
lahf
push
or
sub
in
jg
sbb
ja
inc
popa
rcr
jo
xor
movs
std
jne
arpl
mov
cli
jbe
xchg
hlt
test
push
nop
outs
push
dec
scas
jle
mov
sbb
mov
das
sti
jp
and
adc
mov
and
jns
jge
xor
jecxz
mov
mov
pop
cmp
mov
lea
add
jo
jo
cdq
add
repnz
cmp
mov
outs
ret
movs
xchg
stos
sti
cmp
fcmovnu
popa
or
add
adc
sbb
fnstsw
mov
sti
push
sub
mov
shl
adc
xchg
mov
mov
push
xchg
mov
jno
scas
dec
es
stos
dec
ret
pop
ror
js
(bad)
cmp
fild
es
aam
and
cs
imul
add
dec
mov
ror
icebp
dec
ret
sub
jo
pop
scas
sbb
ja
cmp
xor
xchg
adc
pop
cli
jl
xlat
daa
dec
dec
div
inc
fcom
mov
and
adc
sub
cmp
movs
cmp
(bad)
lahf
mov
mov
test
iret
pop
lods
jmp
push
mov
cmc
aaa
jge
push
jo
imul
movs
scas
jo
mov
pushf
pusha
ss
push
xlat
icebp
add
iret
mov
sub
jno
or
jmp
sub
sbb
mov
jl
mov
pop
lock
fs
je
sbb
cdq
mov
lds
or
adc
dec
mov
test
or
repnz
lods
add
repz
push
add
xchg
or
loope
pop
inc
mov
and
cmp
pop
mov
dec
mov
inc
nop
mov
test
jle
sub
(bad)
xor
jns
adc
repnz
pop
jle
cmps
ret
jmp
(bad)
mov
int
pop
in
(bad)
(bad)
pop
dec
push
sbb
cmps
sub
or
hlt
cld
test
or
mov
int
jne
call
mov
xlat
ss
stos
add
adc
and
adc
mov
mov
jecxz
push
es
jmp
fs
and
(bad)
(bad)
in
mov
xchg
mov
push
jg
popa
jb
out
jl
out
dec
cmp
xchg
mov
jg
mov
into
inc
xor
jecxz
dec
dec
addr16
arpl
daa
lods
out
mov
dec
mov
(bad)
mov
inc
in
dec
mov
jo
xchg
fild
pxor
ss
fisttp
aad
push
hlt
or
mov
int3
xor
ret
or
pushf
rcr
mov
jnp
test
and
sub
test
pushf
add
je
stos
jecxz
pop
inc
(bad)
into
mov
pop
dec
ins
inc
cmps
(bad)
test
inc
stos
clc
fisttp
mov
in
sub
adc
or
les
and
mov
test
mov
ja
adc
xor
jno
add
cld
rep
loope
call
pop
js
imul
pushf
mov
imul
repnz
lods
pop
push
pop
xchg
ins
mov
cmp
cmp
adc
mov
stos
stos
mov
outs
(bad)
icebp
(bad)
xchg
shr
mov
or
scas
fidiv
addr16
imul
add
add
jnp
jle
ins
dec
jns
ror
sub
fstp
push
xor
push
int
cvtps2pd
jno
add
imul
xchg
stos
mov
mov
fpatan
imul
cmps
call
popf
xor
push
push
sbb
xchg
(bad)
std
ja
in
xchg
add
loope
in
jmp
jecxz
adc
inc
fstp
mov
out
bound
mov
ret
mov
lea
ins
lods
push
mov
(bad)
in
or
jg
shl
push
imul
sar
ins
mov
sbb
out
push
xchg
fldenv
pop
outs
je
movs
adc
ror
fisub
mov
or
mov
jnp
imul
pop
xchg
inc
pop
jns
jl
es
push
fnstsw
not
stc
out
adc
into
pop
shl
inc
mov
mov
rcr
repnz
jmp
pop
xlat
cmp
pop
pusha
xchg
popf
fiadd
call
xor
mov
sti
mov
addr16
push
sub
pop
cmp
repnz
stc
aaa
stos
lock
jl
fmul
loope
add
jmp
jl
stos
xchg
jae
les
lods
sbb
pop
cmps
jl
or
data16
in
inc
(bad)
adc
push
and
jl
inc
cvtps2pi
pushf
loopne
jle
mov
inc
rcr
xlat
out
mov
addr16
push
and
pop
sbb
arpl
iret
in
pushw
aas
mov
cdq
jg
mov
inc
sbb
pusha
cmps
add
jbe
movs
(bad)
or
neg
imul
jns
cmp
inc
sbb
js
std
out
pop
fild
jb
popf
fsubr
je
or
xor
fild
(bad)
jae
mov
pushf
mov
sub
jp
cmp
gs
sbb
jmp
xor
movs
repz
bsr
mov
iret
mov
xchg
sar
and
std
mov
cmp
add
mov
pslld
xchg
cmp
mov
inc
inc
scas
mov
or
jmp
stc
jmp
scas
dec
imul
xchg
ret
rcl
or
and
cmp
jo
out
neg
mov
scas
outs
pop
lods
cmp
pop
or
daa
addr16
loope
in
cmp
xchg
and
cdq
mov
mov
fisubr
cmps
fsubr
lds
xor
mov
or
mov
fist
jbe
sbb
mov
imul
or
ret
jge
(bad)
popa
in
or
jmp
inc
sub
cmp
add
aam
dec
rcr
cmp
jb
mov
mov
push
add
pop
jmp
sti
(bad)
aaa
fadd
xlat
scas
push
out
imul
fisttp
and
mov
iret
xchg
dec
lods
jecxz
(bad)
pop
dec
(bad)
cmps
retf
bound
dec
sub
jmp
shl
dec
sbb
push
mov
xchg
(bad)
lods
pop
lahf
cdq
jp
imul
jne
aaa
hlt
cmp
dec
idiv
aaa
(bad)
idiv
mov
cld
jns
inc
not
xchg
aam
fimul
inc
(bad)
adc
sub
(bad)
fwait
jns
sbb
push
stos
out
shl
cmp
jp
push
jecxz
mov
mov
jmp
cmps
(bad)
mov
push
lods
es
push
inc
es
ja
adc
cmp
push
or
dec
sbb
rol
pop
adc
cmps
sub
add
aas
dec
movs
arpl
push
inc
mov
adc
inc
movs
mov
je
push
fidivr
xor
imul
pop
mov
aaa
sbb
sbb
arpl
inc
mov
call
arpl
shl
or
jae
in
mov
stos
mov
fld1
pop
outs
jge
mov
or
je
fwait
jae
jle
ds
mov
jnp
and
enter
retf
pusha
fdivr
popf
jnp
fiadd
push
stos
aad
data16
les
shr
mov
pop
(bad)
movs
stos
add
mov
clc
pusha
lds
popa
jbe
into
mov
jnp
xchg
ret
cli
jmp
mov
pxor
shr
and
scas
mov
and
mov
push
push
arpl
mov
adc
fld
les
add
ror
test
pop
jae
xor
dec
lahf
les
mov
ret
frstor
in
mov
pop
cmp
les
jl
retf
xchg
cmp
lock
xlat
inc
cmp
pop
call
jmp
push
mov
hlt
and
xor
in
nop
ficom
lea
lahf
pop
and
int3
or
xchg
adc
pop
push
je
mov
int3
jge
loop
cwde
push
lods
jle
mov
arpl
add
je
daa
and
inc
cmp
mov
inc
lods
movs
pop
sub
sti
mov
cwde
push
cwde
lods
xlat
lock
and
cmp
mov
push
stos
mov
lods
call
mov
jp
inc
jl
mov
nop
adc
push
push
fsubr
fisubr
push
sub
mov
jae
dec
addr16
lock
jo
mov
nop
arpl
xor
cmp
arpl
shr
push
in
lods
and
cmp
daa
sbb
mov
jns
retf
pop
mov
imul
add
aaa
lds
jo
adc
jne
das
fdivp
(bad)
cli
jnp
test
mov
lahf
jl
adc
or
sub
xchg
sub
mov
repz
mov
ds
loop
outs
mov
(bad)
and
pop
mov
std
mov
pop
add
pop
pop
fs
jns
jge
dec
xchg
inc
movs
push
jno
ds
imul
popa
pop
push
dec
call
xchg
sub
scas
aaa
ror
test
movs
jg
mov
add
pop
inc
or
ins
dec
clc
hlt
fidivr
add
push
xchg
xor
push
mov
jo
sbb
mov
jb
sub
out
je
aas
xor
fcom
push
in
(bad)
(bad)
call
out
dec
pop
push
jo
mov
movs
xchg
cmp
retf
imul
or
lods
cs
ror
stos
nop
xlat
sub
(bad)
stc
out
jno
jae
(bad)
mov
cmp
das
fild
out
imul
add
add
sub
mov
or
in
jl
stos
mov
add
mov
stos
mov
add
lock
jge
(bad)
sub
out
movs
or
push
xlat
jbe
mov
das
inc
push
lds
loope
mov
mov
mov
addr16
dec
mov
mov
scas
sub
jmp
cmp
hlt
cdq
sbb
jp
push
stos
cdq
mov
sub
xor
into
pop
mov
xchg
pop
outs
call
mov
mov
xchg
dec
adc
dec
(bad)
leave
fwait
push
jo
dec
ins
inc
fs
inc
sar
stos
mov
xchg
jmp
cmps
mov
fcomp
movs
mov
fistp
(bad)
mov
out
adc
pop
sub
push
cmps
xchg
test
add
call
dec
popa
adc
scas
pop
(bad)
repnz
and
mov
mov
lahf
movs
outs
scas
cmps
popf
mov
add
lods
cli
xor
in
jo
pop
lds
(bad)
mov
lds
mov
ret
and
pop
push
or
sbb
aas
sub
push
cmps
test
neg
mov
mov
mov
and
adc
retf
or
jmp
loopne
jmp
and
stos
jns
and
mov
and
in
jecxz
loop
push
ins
mov
add
and
jle
mov
setp
leave
out
daa
xchg
mov
xchg
cmp
mov
test
lea
test
(bad)
and
lahf
adc
aas
mov
adc
imul
pop
popa
(bad)
in
shr
pushf
cld
stos
mov
sub
mov
movs
out
into
cmps
(bad)
xchg
call
stos
adc
addr16
cli
mov
xchg
pusha
dec
xchg
jecxz
stc
out
mov
lds
cwde
retf
cmc
xchg
(bad)
ds
pop
cmps
push
mov
cmp
mov
cmp
adc
dec
mov
fisubr
imul
lods
enter
mov
movs
lds
inc
or
mov
cmps
(bad)
cmp
icebp
icebp
aaa
arpl
out
scas
inc
scas
xlat
out
mov
bswap
jge
aad
(bad)
or
test
and
pop
jnp
mov
rcl
mov
repz
lds
retf
mov
ss
adc
pop
pop
(bad)
xchg
cmc
mov
imul
pusha
mov
mov
sub
sub
ins
adc
sub
jmp
jb
sub
loopne
es
pushf
jg
and
cmp
ins
mov
push
icebp
test
dec
lea
sub
pop
xrelease
jmp
lahf
inc
mov
in
xchg
and
sar
fldenv
and
icebp
sti
pop
dec
addr16
mov
dec
fidiv
mov
xchg
push
cmp
call
shr
mov
mov
mov
xchg
xchg
daa
jp
pop
mov
in
xor
sub
xor
jg
add
mov
imul
pop
stos
iret
js
ins
lods
movs
ins
inc
not
(bad)
int3
cld
sbb
and
cmps
pop
(bad)
mov
pop
xor
shl
mov
mov
inc
inc
xchg
stos
pop
test
mov
xor
lds
leave
jg
aad
adc
pop
bound
jae
jle
arpl
cmps
or
retf
(bad)
jl
movs
repnz
shld
pop
jbe
fcomi
add
xor
jge
mov
fs
xor
scas
jo
aam
lock
fs
test
add
fnstcw
jo
xor
cmp
ins
pusha
jno
sub
popa
inc
aaa
iret
cld
sub
mul
fist
cmps
outs
js
dec
add
test
jmp
push
rcr
ins
dec
shr
adc
test
xchg
mov
fisttp
mov
cmc
lahf
aas
dec
sbb
not
xor
add
pushf
or
mov
adc
lods
push
aad
mov
inc
push
jg
jo
loope
or
lods
and
jp
xchg
mov
retf
and
mov
inc
(bad)
lahf
jmp
mov
or
arpl
int3
div
pop
jno
inc
jmp
aad
xchg
or
int
outs
add
jae
push
sbb
je
call
cmps
sbb
jno
mov
test
xor
rol
inc
dec
(bad)
pusha
mov
mov
cli
or
das
ret
stc
stos
ins
out
sub
jmp
inc
imul
mov
push
scas
fnsave
pop
test
ins
stos
xor
jae
out
xchg
sub
lock
push
jle
and
pop
sub
clc
sbb
and
dec
stos
fist
sbb
push
pop
js
imul
jns
sbb
jmp
cmp
mov
pop
add
fsubr
add
xchg
xor
ja
inc
jecxz
adc
loop
stos
jmp
fs
jg
or
mov
and
inc
(bad)
sbb
pusha
mov
xchg
add
xchg
push
mov
mov
pop
push
imul
loop
test
in
dec
sub
in
mov
sub
(bad)
es
xor
addr16
mov
(bad)
sbb
xor
stos
loope
mov
jmp
lods
iret
jo
jl
xlat
cmp
cmps
jle
jge
cs
adc
std
stos
push
xor
lahf
fild
sub
loop
sub
cmps
and
xchg
fidivr
in
jo
cmp
rol
scas
in
jns
dec
sub
xchg
xchg
in
push
cmps
and
jae
pop
push
mov
aam
pop
sub
adc
adc
xchg
(bad)
xchg
cs
and
aaa
or
(bad)
in
sub
push
mov
xchg
mov
frstor
mov
add
mov
lea
bound
cmc
arpl
xchg
aam
sar
xor
cmp
int
in
addr16
lods
in
mul
lea
(bad)
cmps
iret
in
adc
jb
mov
mov
popa
push
cmp
jae
and
lahf
add
push
dec
jmp
pop
xchg
xchg
jmp
fst
cmps
add
scas
test
push
shl
dec
in
ins
scas
mov
add
xor
mov
stc
pop
cmp
jg
xor
lods
mov
jns
in
pop
mov
mov
lods
popf
push
adc
mov
jnp
loopne
cld
mov
sbb
mov
je
inc
push
add
stc
cmps
das
sub
outs
pop
(bad)
stos
jns
sub
dec
push
pusha
fsubr
ins
bound
push
pop
test
xchg
(bad)
mov
out
or
loopne
hlt
hlt
xor
mov
inc
and
mov
je
mov
sbb
stos
dec
lods
(bad)
jle
sub
loop
mov
pop
cmp
push
aaa
mov
addr16
cld
outs
adc
and
jb
sbb
inc
aad
je
xchg
shr
add
inc
mov
out
popa
ffreep
test
mov
xchg
in
and
lods
ss
imul
aas
out
popf
mov
ins
pop
push
dec
mov
arpl
push
or
xchg
addr16
out
ins
push
div
adc
xchg
das
cmp
mov
jmp
iret
dec
inc
and
or
sub
adc
jle
nop
jge
push
add
fldenv
jno
movs
sub
mov
inc
jns
xchg
mov
aas
fild
(bad)
pusha
ret
popf
dec
jbe
and
push
xchg
mov
aaa
mov
mov
call
and
mov
pop
mov
pusha
fldenv
pusha
adc
mov
pop
and
inc
sahf
jl
mov
sub
ja
pop
jp
lds
push
sub
sub
popa
sub
sub
xchg
mov
mov
lock
bound
mov
add
mov
mov
in
imul
pop
mov
pusha
mov
stos
(bad)
retf
shl
out
adc
fist
sbb
mov
cmp
or
in
fs
out
pop
adc
adc
xchg
sub
fisubr
aad
sbb
ins
hlt
jae
or
fld
ja
jno
adc
test
mov
lods
lods
push
ins
and
mov
shl
mov
adc
xor
mov
jne
cmps
iret
inc
outs
enter
or
addr16
cmc
push
out
jb
mov
xchg
mov
movs
jmp
mov
jo
test
cmp
mov
cmps
xor
(bad)
xor
dec
sub
or
jno
pop
lods
mov
mov
rep
dec
xchg
(bad)
adc
(bad)
pop
ins
rcr
or
nop
push
loop
xchg
mov
or
fstp
fs
jb
call
data16
lahf
cmp
fs
add
xor
xchg
cmp
scas
fldenv
cmps
and
add
cmp
adc
add
scas
cmp
(bad)
mov
adc
mov
not
fndisi(8087
js
jl
fs
sub
aaa
or
les
sbb
dec
add
fwait
cmp
daa
xor
push
jle
and
loop
adc
dec
mov
cmps
jg
add
ds
mov
popf
ret
and
mov
sti
cmp
xlat
(bad)
pusha
jecxz
pop
or
pop
cmps
jbe
ja
loope
sub
ds
scas
mov
sbb
push
scas
aad
(bad)
lods
aam
test
or
adc
mov
xchg
mov
xor
cmc
popf
ds
int3
iret
and
jns
cmps
(bad)
call
shl
push
cmp
mov
mov
(bad)
jmp
mov
(bad)
dec
cmp
outs
das
lods
mov
mov
lahf
xchg
lods
cmps
gs
hlt
stc
xor
mov
push
lock
dec
imul
or
pop
mov
popa
cmp
shl
cmp
mov
mov
dec
adc
std
div
mov
jl
fsub
sub
lock
mov
cld
stos
add
js
push
pusha
rcr
pop
pop
xchg
scas
xor
jno
vphaddubd
in
fs
es
es
sbb
(bad)
enter
xor
outs
dec
cmp
jge
mul
int
mov
pop
sub
lods
inc
xchg
ret
call
ja
mov
xchg
mov
mov
push
in
gs
and
mov
call
pop
add
xor
sbb
imul
idiv
push
stos
jp
in
mov
xchg
outs
cmp
mov
or
lock
movs
push
push
and
xor
sbb
leave
xor
in
push
stos
adc
jp
jmp
sub
cwde
mov
mov
addr16
in
js
leave
popa
jecxz
xchg
jno
lahf
or
in
dec
in
into
arpl
sub
loopne
sub
stos
sub
imul
and
outs
xchg
(bad)
cmp
pusha
(bad)
ins
sub
movs
repz
jbe
fstp
test
ret
lds
inc
sub
movs
xchg
mov
pop
dec
dec
pop
aad
in
or
cmps
or
jno
mov
outs
or
inc
cmps
test
lods
inc
popa
scas
imul
xchg
push
je
ins
mov
fadd
and
xchg
out
sub
fidiv
int3
pop
mov
inc
adc
pop
jae
imul
cmp
pop
rcl
jnp
jge
movs
and
lock
aaa
sub
jle
sbb
cli
(bad)
sbb
mov
push
daa
lds
adc
cmps
icebp
(bad)
cmc
lea
pop
mov
jns
push
mov
movd
lds
jbe
into
jmp
in
fs
scas
icebp
data16
retf
push
jl
sbb
fidivr
jo
mov
mov
jnp
scas
pop
pop
xchg
lea
inc
pop
push
mov
ror
sbb
popf
out
mov
popf
repnz
jle
imul
mov
push
mov
test
into
xor
(bad)
fld
sub
lods
outs
dec
lods
or
adc
mov
sbb
push
(bad)
mov
xchg
das
pop
and
jle
scas
adc
movs
sub
push
ret
movs
fbld
arpl
jg
pop
fs
jo
imul
cli
lds
sub
xchg
in
daa
loop
lods
or
mov
data16
arpl
inc
mov
adc
jg
add
lods
outs
cmps
es
out
xor
jne
lods
nop
lds
mov
mov
pop
fadd
jl
mov
pop
jmp
cmp
xor
(bad)
(bad)
mov
call
pop
mov
es
push
fs
popf
push
adc
lahf
jo
xor
shl
mov
(bad)
sbb
adc
clc
(bad)
sub
or
jl
int
mov
mov
inc
and
mov
lods
addr16
xchg
dec
dec
mov
and
in
push
scas
lea
cmp
test
lods
push
popa
cmp
stos
scas
aad
mov
popf
mov
(bad)
aas
mov
es
sub
lahf
lds
and
loopne
mov
ins
inc
mov
out
in
jp
pushf
ins
jo
(bad)
xchg
mov
sub
stos
enter
xchg
push
movs
mov
mov
ss
loop
mov
ins
push
mov
sub
vpaddsb
cmc
test
mov
push
mov
mov
sub
movs
mov
jmp
cmp
jge
and
int
add
or
or
or
pop
sbb
out
test
add
cmps
rol
pop
les
sub
call
or
ins
ret
test
movs
pop
arpl
xor
ret
mov
neg
cmp
mov
mov
push
xchg
push
sbb
stc
fild
lds
or
imul
pop
mov
jb
popa
cmps
lods
pop
cmp
scas
push
or
mov
add
xor
out
sti
fidivr
imul
mov
jge
add
xchg
ins
cmp
mov
imul
ja
mov
test
xchg
(bad)
clc
les
(bad)
out
sub
sub
or
pop
iret
inc
bound
push
popf
fwait
sub
adc
dec
lea
fwait
push
test
and
adc
jb
in
outs
cld
lods
popa
rol
sub
lods
dec
mov
cmps
sub
outs
lea
test
stos
mov
jns
(bad)
mov
ins
and
mov
js
(bad)
add
dec
xchg
and
xchg
sbb
pop
and
dec
and
xchg
push
lock
mov
in
lods
pop
mov
in
out
push
pop
dec
mov
add
cmp
pop
xchg
lods
pop
mov
das
push
pop
test
mov
test
test
and
push
repnz
mov
cdq
pop
daa
out
xchg
sub
xchg
pop
and
cmc
lea
jl
ror
cmp
sbb
in
retf
mov
test
mov
add
mov
rcl
daa
test
retf
pop
fsub
mov
je
jp
push
mov
mov
(bad)
cmps
jl
rcl
pop
mov
gs
sub
inc
cwde
pop
sti
test
pusha
pushf
repz
jecxz
xor
mov
mov
jne
stos
ret
mov
jo
dec
mov
loopne
test
and
sbb
jo
sbb
inc
sbb
mov
loope
pop
mov
je
jnp
and
js
lahf
or
aas
cmp
es
pop
sub
or
imul
jl
repz
shl
in
mov
add
add
nop
mov
loopne
mov
inc
xchg
fld
mov
lock
fcomp
aas
out
ja
pop
sahf
fimul
xor
es
mov
or
fsub
loope
cmp
pop
xchg
add
sub
(bad)
out
cmps
addr16
lahf
add
mov
jns
fstp
dec
(bad)
push
and
mov
cli
xchg
iret
mov
push
sbb
jecxz
sub
pop
mov
pop
cs
scas
hlt
push
jmp
xchg
cmp
mov
movs
push
jle
inc
mov
mov
lds
dec
loope
fwait
mov
mov
cmp
or
pop
mov
test
or
fmul
ins
adc
cmc
jmp
sbb
or
mov
mov
test
pop
xchg
and
fild
jle
mov
lahf
fld
lahf
repnz
adc
adc
stos
push
sahf
cmps
(bad)
std
lds
and
lds
jns
je
fiadd
lods
stos
xchg
imul
cmp
pushf
test
sub
stos
adc
in
movs
cmp
aad
xlat
sub
inc
mov
pop
daa
ins
sbb
imul
imul
js
(bad)
test
aaa
fcom
jmp
push
outs
xchg
ret
jo
jmp
js
dec
(bad)
shl
scas
and
jp
jle
inc
rcl
popf
xor
cmp
js
ins
dec
cwde
push
and
dec
lea
or
mov
mov
loopne
and
mov
dec
mov
xchg
sbb
dec
pop
stc
jl
mov
jnp
push
and
sbb
jl
inc
pop
jecxz
add
sbb
jae
ret
call
mov
or
pop
lods
sahf
jg
and
shl
inc
mov
push
cmp
(bad)
and
test
fmul
push
inc
xor
out
jg
pop
lods
and
call
dec
and
jo
movs
inc
xchg
(bad)
cmp
imul
movs
sub
and
or
sbb
sar
mov
adc
sbb
call
(bad)
(bad)
sbb
aam
mov
push
mov
aam
xchg
xor
fst
and
or
popa
mov
adc
lea
pop
shl
sub
or
(bad)
fwait
push
jne
fistp
fiadd
(bad)
mov
ret
mov
fisub
push
fistp
cli
shr
addr16
ret
nop
pop
xchg
std
mov
lahf
pop
imul
jle
xchg
mov
mov
ins
jp
daa
out
push
sahf
jmp
mov
mov
outs
adc
lea
xchg
mov
jbe
jecxz
fadd
add
imul
adc
scas
and
cmp
jnp
pop
mov
adc
mov
jmp
mov
mov
mov
ret
(bad)
mov
or
(bad)
xchg
movs
lods
out
cmp
test
and
imul
jg
xor
(bad)
inc
sub
mov
pushw
push
cmp
enter
jle
jo
stos
lea
ret
aam
fnsave
mov
xor
ja
(bad)
div
add
jns
aam
cmp
add
fwait
or
(bad)
jmp
test
mov
xchg
jp
cld
pop
jmp
out
fs
jmp
add
dec
adc
mov
dec
stos
(bad)
xlat
jne
ins
fnstcw
add
fild
aas
xchg
in
outs
sahf
stos
(bad)
xor
xchg
fisub
adc
sar
sbb
and
sub
mov
addr16
jecxz
xchg
mov
pop
jmp
mov
mov
dec
call
cmps
int3
xchg
mov
jmp
pop
movs
pusha
stos
pop
out
or
xchg
xchg
and
shr
call
mov
xlat
lahf
stc
je
xor
adc
cmp
rcr
mov
pop
scas
imul
pop
out
stos
adc
mov
cmp
adc
(bad)
mov
scas
mov
dec
movs
jl
adc
gs
or
xchg
cmps
icebp
jge
repz
xchg
xchg
and
add
lds
add
call
mov
mov
popa
outs
addr16
(bad)
and
mov
dec
iret
pop
inc
lahf
mov
jns
mov
int3
sub
sub
ret
jbe
jo
aam
sub
jbe
or
dec
jns
ins
mov
dec
sub
ret
movs
pop
sbb
jmp
sub
jge
sub
jmp
cs
pop
mov
nop
push
mov
call
(bad)
out
adc
ret
mov
mov
sbb
adc
ds
cmps
arpl
jge
or
push
aam
imul
inc
mov
ffree
adc
mov
jo
push
push
mov
xchg
movs
(bad)
push
rol
mov
sub
jnp
pop
neg
mov
sub
pop
fidivr
inc
pop
add
or
cwde
or
sbb
mov
daa
cwde
sahf
push
inc
and
test
jae
call
xchg
call
or
mov
add
aas
mov
(bad)
mov
mov
cmps
jno
ss
mov
fisub
sub
outs
call
mov
add
pop
call
out
mov
(bad)
out
mov
js
movs
fs
jnp
inc
dec
xchg
mov
stc
popa
fld
sub
fnstcw
sub
sahf
push
ret
repz
xor
mov
int3
cmp
addr16
ja
mov
mov
xchg
cmps
and
addr16
mov
mov
(bad)
mov
imul
push
push
jns
popa
sbb
mov
addr16
push
or
popf
sub
xor
(bad)
sbb
imul
push
sahf
es
es
add
dec
adc
push
ret
cmps
shl
sbb
fmul
dec
or
sti
test
sbb
mov
add
and
es
fldenv
cmp
jb
dec
leave
bound
xchg
sub
mov
cmp
sub
and
jl
jno
push
xchg
jae
pop
cmp
cs
mov
call
jle
aaa
xor
and
(bad)
rcl
fisubr
pusha
mov
push
xchg
jae
sbb
sub
sub
fisub
cmp
mov
pop
xchg
faddp
dec
in
(bad)
sbb
add
jge
mov
or
fimul
arpl
xchg
scas
xor
and
add
mov
jns
(bad)
adc
mov
mov
mov
(bad)
mov
mov
retf
or
inc
pop
inc
aad
cmps
call
test
cmp
push
outs
neg
(bad)
sbb
addr16
and
fst
sub
arpl
scas
popa
mov
pusha
push
data16
mov
(bad)
in
lods
mov
mov
(bad)
mov
aas
pop
ret
mov
dec
js
(bad)
shl
in
sar
push
clc
sub
lods
pop
mov
sub
lock
dec
adc
pop
mov
popf
jl
jo
push
lds
add
mov
movs
ins
test
add
xor
jo
jbe
ins
mov
and
cmps
xor
add
jns
inc
or
inc
fistp
pop
ins
add
add
and
in
jg
sbb
add
stos
mov
gs
adc
call
mov
sbb
mov
test
sbb
out
data16
mov
sub
xlat
std
or
mov
mov
adc
sub
out
aaa
gs
push
push
push
bsr
ror
add
mov
mov
rcr
js
aaa
jge
out
imul
mov
aam
sub
popa
cmps
ins
cld
lods
ja
rcr
pop
mov
add
push
jecxz
scas
adc
push
loope
push
aad
ins
sbb
pop
or
cmp
ja
ds
lahf
pop
gs
lea
mov
jle
dec
sub
sbb
mov
mov
or
(bad)
cs
jmp
fs
sub
in
scas
cmp
bound
es
xchg
mov
or
adc
lods
mov
mov
daa
mov
xor
int3
sub
push
pusha
lock
pop
lods
imul
sub
imul
jp
and
ins
repz
xor
daa
jne
and
mov
ds
or
xchg
(bad)
call
retf
enter
inc
cli
push
xchg
sbb
push
(bad)
jbe
mov
in
in
jle
inc
popf
or
test
movs
and
movs
inc
out
add
mov
cmps
int
push
pop
mov
mov
(bad)
int
mov
call
adc
loopne
push
dec
dec
ret
lds
xchg
ins
jmp
mov
jp
lds
mov
add
mov
jmp
xchg
jp
xchg
cmc
aad
int3
jnp
xchg
pop
leave
or
nop
cmp
add
jbe
mov
adc
xchg
lds
mov
ja
sub
repnz
xchg
stos
outs
bound
retf
xchg
cmp
xchg
cmp
movs
es
popf
imul
cmp
aas
mov
retf
sbb
xchg
das
pop
push
(bad)
xchg
(bad)
in
test
sub
clc
jae
or
int
or
stos
sub
ss
data16
sbb
es
stos
add
jle
dec
icebp
sub
sub
jbe
mov
lods
mov
gs
fisubr
mov
add
dec
and
sbb
add
(bad)
dec
mov
scas
cmps
inc
repz
dec
mov
push
daa
dec
(bad)
call
imul
jno
mov
retf
mov
and
mov
jmp
(bad)
jg
loope
outs
fcmovb
push
xor
clc
leave
add
and
(bad)
popf
or
mov
jnp
in
xor
mov
(bad)
(bad)
outs
and
scas
es
lods
ins
push
imul
and
jg
cmp
iret
nop
lods
lods
dec
pushf
jo
xchg
(bad)
aam
lahf
mov
out
pop
daa
popa
outs
jbe
repnz
lock
data16
loope
pop
inc
es
call
mov
lds
in
lods
fstp
sbb
sahf
sub
imul
mov
out
clc
loop
or
aam
xchg
outs
mov
cld
push
leave
mov
inc
scas
in
mov
sub
sbb
idiv
(bad)
adc
cld
int3
fs
cmp
mov
xchg
jg
pusha
push
push
js
push
push
xchg
add
mov
pop
(bad)
aas
sub
cs
mov
sub
(bad)
mov
xchg
fmul
cmps
push
mov
mov
imul
(bad)
cmps
sub
push
dec
push
sub
pop
std
or
aaa
test
and
sub
(bad)
test
sub
xor
mov
fs
dec
aaa
sub
mov
scas
mov
std
mov
enter
mov
loop
sbb
out
mov
mov
inc
mov
enter
(bad)
pusha
xor
mov
ja
jg
and
mov
out
inc
sbb
cmp
xchg
xor
xlat
mov
add
sbb
adc
lahf
sbb
int
xchg
clc
jb
and
stos
mov
inc
pop
mov
popf
or
push
in
mov
xchg
adc
mov
jge
lmsw
lahf
pusha
scas
dec
jl
cmp
xor
jmp
inc
test
xchg
jmp
or
pusha
pop
jg
jnp
jg
out
cmp
adc
jnp
int
push
inc
daa
jae
jno
in
and
sar
lea
fdivr
nop
pop
sar
ss
pop
ja
arpl
dec
enter
dec
inc
cmps
and
pop
xchg
imul
out
addr16
popa
leave
and
out
movs
pop
mov
pop
sahf
mov
push
mov
dec
pop
mov
call
jmp
movs
mov
sub
fisub
xlat
les
jmp
shl
jge
fsub
mov
mov
jle
dec
mov
fiadd
and
mov
jne
das
xlat
ret
loope
and
cld
jb
sub
arpl
push
or
out
popf
in
out
cmps
repnz
jecxz
mov
loope
jl
scas
push
(bad)
aad
xor
push
mov
cs
out
cwde
js
addr16
ja
sbb
(bad)
(bad)
outs
cmp
push
fist
add
daa
jne
mov
pop
xor
ret
inc
or
(bad)
hlt
adc
jg
dec
sbb
outs
rol
xchg
pop
push
push
or
lods
sub
in
repz
inc
ret
dec
jae
stos
inc
pop
fidiv
xchg
jae
mov
push
xor
jmp
ss
imul
jg
arpl
lods
jae
inc
out
inc
arpl
out
or
out
dec
(bad)
div
pusha
mov
xchg
aas
mov
cdq
jge
ins
mov
dec
bound
mov
jg
push
cmps
popa
scas
push
xchg
cs
or
cmps
retf
mov
dec
dec
mov
xchg
sub
mov
cmps
(bad)
mov
sbb
(bad)
les
adc
pop
(bad)
fstp
add
xchg
(bad)
(bad)
test
mov
hlt
addr16
cmps
sbb
fs
xchg
dec
enter
test
fidivr
lods
xchg
xchg
add
pusha
repz
mov
fidivr
in
jno
mov
jg
lock
xor
lods
(bad)
addr16
popf
bound
mov
sbb
(bad)
jno
sub
aaa
imul
ret
leave
pop
pop
xchg
sub
push
inc
scas
les
push
int3
inc
repz
pushw
xchg
mov
inc
xchg
inc
fs
cmc
outs
mov
popa
add
retf
push
mov
jo
mov
pusha
rcl
scas
mov
outs
dec
pop
js
push
mov
(bad)
outs
and
stc
xor
ja
(bad)
jno
ret
(bad)
in
mov
(bad)
mov
ds
xchg
adc
ja
jbe
add
dec
xchg
xchg
pop
mov
cmp
les
mov
xchg
or
scas
xor
push
jae
pop
mov
cmps
in
out
dec
adc
popa
lahf
jmp
cmp
popf
and
popf
cmp
hlt
mov
fs
sbb
add
cwde
jnp
cs
xchg
test
xor
sahf
mov
sub
hlt
xor
movs
push
fnstcw
fstp
lahf
arpl
mov
jae
(bad)
mov
stos
js
jge
adc
mov
mov
mov
adc
outs
leave
scas
cmp
ja
sub
mov
outs
out
dec
aaa
cmp
xchg
lahf
(bad)
rol
adc
aad
cmp
lods
xor
xchg
inc
ins
cli
jl
push
cmp
outs
aas
jmp
push
push
mov
cmp
retf
je
mov
sub
inc
pop
jae
jb
pop
mov
mov
aam
rcl
iret
sti
jb
dec
cmp
(bad)
jp
pusha
jb
lahf
jge
jmp
or
sub
jo
iret
lds
jmp
or
les
cmps
popf
repz
jg
je
iret
xchg
repnz
cmps
test
test
xchg
les
sub
ins
in
ss
lods
mov
popf
dec
les
dec
mov
je
pop
xchg
shl
fdivr
push
mov
js
shl
mov
mov
inc
es
neg
movs
shl
inc
mov
test
pop
fs
lods
sub
jg
test
add
ficom
mov
dec
or
pop
jne
clc
outs
faddp
xchg
int3
xor
xchg
push
mov
test
gs
test
jno
outs
and
xchg
xlat
xor
arpl
pop
and
jg
pushf
scas
lods
dec
cmps
fidivr
les
jns
fdivr
mov
bts
icebp
mov
(bad)
out
arpl
(bad)
cs
xor
inc
xor
pop
mov
aam
ror
dec
mov
test
js
cmova
outs
and
nop
adc
(bad)
sub
outs
call
js
retf
stos
fnstenv
add
movs
mov
daa
inc
test
or
ret
push
sub
aas
mov
mov
je
ins
pop
ja
mov
xor
push
pop
(bad)
(bad)
jb
mov
imul
jnp
out
inc
aaa
mov
inc
mov
loop
pusha
imul
iret
stc
xchg
ret
inc
mov
mov
imul
mov
imul
xlat
or
xchg
movs
and
mov
jmp
and
or
daa
shr
jo
jb
add
dec
in
cld
imul
jne
jmp
outs
lock
sub
cmp
in
ins
fistp
dec
loop
sub
push
pushf
sbb
in
or
ret
or
jle
mov
dec
inc
dec
mov
inc
shr
cmp
mov
rcl
cli
out
sub
mov
mov
call
jne
push
movs
push
push
jns
xlat
sub
sbb
mov
dec
push
bound
inc
les
fisttp
jge
sbb
or
jae
xchg
iret
aaa
mov
std
dec
repnz
lods
and
cmp
nop
faddp
ins
outs
pop
mov
dec
lods
es
xor
inc
add
mov
mov
cmps
pop
sti
jns
imul
mov
dec
mov
scas
dec
push
test
sbb
sub
cmp
(bad)
cld
cmps
xchg
sub
dec
mov
in
mov
mov
(bad)
out
sub
cmps
jg
rol
shr
pop
(bad)
fmul
leave
mov
lods
lods
movs
jmp
test
cmp
lods
js
in
test
ins
icebp
pop
pop
movs
adc
mov
ins
and
xchg
or
cld
mov
mov
sub
in
ins
lahf
(bad)
retf
mov
in
lods
out
(bad)
sbb
cmp
iret
sti
(bad)
sar
pop
stos
pop
xchg
xor
movs
mov
inc
or
mov
iret
jge
pop
je
(bad)
out
cmp
lock
stos
cmp
ds
cmp
lahf
cmp
cs
imul
cs
out
aaa
and
pushf
inc
(bad)
(bad)
adc
sbb
icebp
aad
cmp
mov
xchg
push
sub
push
bound
ins
mov
pop
xor
push
and
lahf
jns
das
push
pusha
and
sub
mov
pop
mov
in
mov
xchg
fnstcw
(bad)
mov
push
addr16
or
mov
jge
mov
js
mov
mov
pusha
(bad)
dec
dec
aas
popa
gs
loope
mov
or
push
xor
mov
stos
not
mov
jae
aam
imul
movs
enter
ret
jmp
cmp
pop
movs
sub
arpl
jnp
push
push
dec
mov
dec
(bad)
data16
and
jge
lods
bound
stos
imul
cmp
loope
sub
imul
pop
(bad)
cwde
cmps
or
lahf
add
mov
popa
xchg
in
(bad)
cmp
and
xlat
sbb
lds
cmps
lock
mov
popf
call
cdq
mov
adc
inc
sub
out
mov
push
and
inc
jmp
jne
mov
lds
mov
mov
shr
adc
jo
sbb
(bad)
call
jle
jmp
addr16
pop
dec
js
int
mov
mov
mov
test
inc
fidivr
cmps
call
fisttp
fst
psubusb
ret
xor
ror
call
cld
sub
pop
out
shl
push
push
stos
cmp
fwait
inc
scas
mov
icebp
scas
mov
adc
lods
push
cmp
or
inc
loopne
lock
jns
push
inc
mov
add
cdq
pop
call
fisub
adc
test
cld
pop
cmps
jp
or
pusha
xchg
ins
fistp
cmp
mov
pop
lock
mov
sub
lods
jp
imul
and
mov
mov
(bad)
iret
jg
arpl
outs
cmps
push
(bad)
pop
rcl
shr
out
cli
push
mov
xchg
in
ret
and
test
dec
imul
add
push
sub
outs
(bad)
pop
in
xor
adc
sub
add
jge
jp
pusha
lea
mov
pushf
repz
push
out
cmps
cmps
scas
cmp
pushf
les
jno
ret
mov
xchg
sub
jne
mov
pop
rcr
ret
jnp
inc
lea
aad
mov
aad
scas
pusha
sub
pop
test
(bad)
mov
mov
pop
outs
sub
dec
test
mov
xchg
call
inc
xchg
pop
jne
push
and
daa
cmp
sahf
icebp
imul
mov
je
lahf
xchg
cld
push
xchg
aas
xchg
pop
sbb
sbb
out
movs
jl
imul
lea
xchg
fistp
test
(bad)
xlat
dec
jg
jge
mov
cmp
inc
mov
fmul
mov
(bad)
pop
cdq
out
xchg
and
xchg
imul
test
or
sbb
jle
adc
cmps
xchg
jbe
mov
push
mov
sbb
(bad)
mov
inc
push
adc
sti
popa
adc
mov
mov
fisubr
inc
dec
jmp
scas
(bad)
sbb
mov
clc
aas
add
mov
xchg
xchg
call
(bad)
mov
fsubr
sub
mov
add
rol
mov
pop
jmp
sub
jae
add
adc
mov
fldcw
mov
pop
ret
lods
mov
ins
jns
ins
mov
(bad)
push
cs
xchg
cmps
outs
mov
mov
mov
neg
pop
sub
or
mov
adc
xor
mov
jmp
pop
(bad)
pusha
js
jg
ja
xor
pop
mov
std
dec
loopne
mov
scas
mov
or
out
cmp
xchg
jg
sub
test
je
dec
xor
cs
and
fisttp
sub
adc
cld
je
mov
sub
add
and
xchg
cmp
int
mov
mov
out
data16
jo
pop
popf
adc
and
mul
jecxz
xlat
push
mov
xlat
xor
outs
push
cmc
cmps
stos
inc
mov
sbb
sahf
push
cmps
dec
mov
repz
cmps
lahf
neg
mov
ja
scas
mov
push
mov
push
cmp
push
repnz
push
lods
pop
sub
sub
jae
fsubr
inc
or
inc
jnp
das
pop
jp
cs
aad
mov
lahf
lods
fsub
ins
or
mov
das
xor
sub
cmp
mov
out
es
popf
movs
(bad)
mov
xchg
gs
outs
sub
xchg
inc
lahf
cmp
imul
test
xchg
icebp
push
ins
dec
movs
jmp
pusha
ins
jno
dec
pop
jmp
enter
out
loop
adc
in
pop
test
mov
mov
xchg
adc
xchg
mov
es
mov
addr16
cdq
hlt
cmp
stos
rcl
stos
adc
out
(bad)
jl
adc
fcomp
jo
xchg
inc
mov
test
cli
mov
lds
inc
ja
jbe
add
jle
mov
sahf
xchg
inc
aas
and
sub
inc
jnp
outs
aam
stos
push
retf
or
mov
add
pop
movs
movs
sub
mov
dec
mov
push
xchg
xor
test
xchg
repnz
lods
pop
(bad)
push
aad
lds
push
push
cmps
test
jnp
(bad)
jle
(bad)
es
test
dec
mov
int3
jl
nop
cmp
aad
rcr
out
pop
mov
mov
push
sub
iret
data16
ins
lahf
lahf
sub
mov
movs
push
ret
sbb
mov
or
jecxz
dec
push
mov
mov
mov
scas
sahf
fisub
scas
inc
ja
cmc
sbb
in
jle
push
popf
jb
scas
pop
jns
mov
cs
lods
push
adc
out
xchg
mov
jp
sbb
fnstcw
or
es
add
pop
das
js
pop
add
nop
fidiv
sub
mov
jae
cmp
push
mov
jge
mov
pop
lods
ins
inc
ds
mov
mov
imul
cmp
lea
mov
mul
inc
jle
lods
(bad)
push
cld
daa
mov
and
mov
mov
cmps
mov
cmp
mov
mov
test
jnp
or
jb
add
clc
cmp
retf
es
cmp
es
in
in
arpl
cmp
add
xlat
std
mov
sub
fwait
cmp
cmp
cmp
cmp
mov
loop
ins
adc
mov
cmp
cdq
aam
cmp
pop
mov
fdivr
hlt
add
push
jns
ss
enter
stos
or
add
lods
jle
lods
into
jns
cmp
pop
mov
and
sbb
push
bound
xor
shl
out
jl
add
int
jae
add
mov
push
ja
(bad)
cmp
xlat
mov
sub
(bad)
pop
dec
sub
bound
mov
xor
in
js
jae
mov
aam
test
lods
xchg
jnp
push
aad
ret
cmps
popa
dec
ja
jnp
pop
ror
lods
jg
xchg
ret
sahf
je
outs
inc
shl
aas
mov
lea
dec
outs
(bad)
mov
mov
cld
inc
mov
pop
lods
sub
retf
or
xor
leave
mov
xchg
mov
jecxz
xchg
mov
scas
xor
lahf
push
aaa
mov
mov
fwait
jnp
xor
inc
sbb
inc
fidivr
fld
gs
sbb
js
mov
xchg
adc
shr
in
sbb
jl
ja
cmc
jl
pop
out
jae
in
ins
inc
jne
test
ror
(bad)
ss
jb
adc
push
cs
es
or
jns
imul
and
xchg
mov
mov
jbe
xor
les
out
lds
aaa
dec
dec
pop
jmp
mov
rol
fwait
cmp
test
push
ret
mov
cmp
cmp
sbb
ins
in
pop
push
ror
ret
inc
out
sub
inc
adc
fsubr
mul
sbb
mov
cmp
sbb
fsubr
lea
retf
push
pop
mov
dec
sub
inc
jecxz
sub
ret
xchg
xchg
mov
push
fcomp
pop
lahf
shld
ss
and
aas
aaa
outs
movs
stos
and
cmp
and
and
cmps
pop
pop
stos
jb
inc
jge
cmp
pop
cmps
out
mov
out
mov
sbb
jecxz
and
pop
mov
imul
sub
mov
jg
xchg
in
mov
pop
pop
cmp
sti
outs
xor
add
call
cmp
stos
jecxz
test
(bad)
hlt
es
jb
aas
outs
cmc
(bad)
mov
jecxz
sub
call
sbb
outs
cmps
mov
daa
mov
int3
jbe
adc
imul
sub
out
cmp
scas
push
pop
mov
inc
sub
mov
mov
jmp
xchg
stos
cs
and
dec
pop
cmps
xchg
pop
pop
and
pushf
vmread
dec
mov
es
add
mov
cmps
add
movs
mov
out
movs
fsubr
dec
pop
mov
jecxz
outs
sti
out
jge
and
sbb
xchg
pop
iret
mov
jg
enterw
xchg
fcom
xchg
push
stos
mov
adc
sbb
sbb
shr
cmps
and
push
sar
sbb
lahf
inc
outs
mov
jmp
mov
imul
pop
pop
scas
pop
push
xlat
mov
sbb
sub
lds
shl
sbb
stc
mov
push
inc
mov
loopne
scas
dec
mov
jo
push
xchg
xchg
cmp
movntps
stc
outs
fwait
test
sbb
mov
sub
xchg
jmp
mov
sbb
jl
ss
push
repz
jge
adc
into
pop
xor
pop
jnp
lds
mov
pushf
repz
xchg
jmp
adc
(bad)
std
sbb
pop
sub
and
scas
stc
xchg
jnp
push
das
mov
mov
arpl
sub
mov
mov
cmp
cmp
ficom
movs
imul
iret
ror
ins
sub
ss
jnp
(bad)
icebp
mov
sub
mov
ds
movs
cwde
scas
sub
mov
outs
mov
daa
or
call
out
ins
push
mov
movs
loope
setne
jb
test
hlt
shl
loop
(bad)
push
ds
or
movs
and
jle
or
mov
call
ins
lods
shl
daa
(bad)
jnp
aaa
into
jnp
push
mov
out
jle
mov
sbb
inc
ret
dec
js
mov
ds
and
jmp
outs
mov
ins
inc
jmp
fwait
mov
mov
cmp
ds
aad
mov
pop
lods
jbe
(bad)
pop
scas
add
add
and
sbb
cmps
in
lods
jno
(bad)
adc
nop
lods
call
dec
test
cmps
cmp
sar
scas
rol
mov
adc
xor
mov
xor
aas
ss
pop
outs
jbe
xchg
repz
jge
jns
mov
mov
jnp
in
lods
mov
scas
dec
je
dec
inc
(bad)
jg
mov
mov
cmps
mov
test
mov
jg
jns
ror
pop
(bad)
stos
push
xchg
adc
test
mov
push
in
fisub
add
sahf
lods
in
sub
sub
dec
lock
cmps
mov
lea
(bad)
xor
sub
out
and
xor
push
fcom
ss
out
push
mov
mov
jo
test
mov
outs
scas
test
cmp
ror
inc
outs
data16
daa
fs
add
sbb
nop
cmps
cmp
lods
jg
clc
bound
shr
pop
stos
cmp
das
mov
outs
push
lods
std
xchg
test
mov
xchg
sti
(bad)
and
and
cmp
inc
cmps
and
shl
scas
movs
outs
es
and
mov
aad
cmps
sub
push
lods
pop
pop
ret
dec
lea
ret
pop
sub
arpl
(bad)
and
cmp
jnp
mov
mov
cmps
xor
mov
push
repnz
test
cmp
cmps
and
push
movs
cmps
into
dec
inc
pop
scas
imul
test
xchg
arpl
push
adc
dec
mov
mov
cmp
inc
test
out
push
into
xchg
in
pop
sahf
and
scas
cld
retf
mov
shl
xchg
adc
and
fs
loopne
test
daa
jge
lds
push
dec
jg
arpl
aam
mov
xchg
in
adc
cmp
and
and
in
sub
jecxz
popa
pop
push
scas
mov
in
mov
xchg
call
data16
in
mov
mov
xor
test
out
out
imul
mov
daa
aaa
or
pop
sbb
sti
fwait
and
repz
push
scas
add
xchg
stos
cmps
vunpckhps
daa
inc
sti
rol
clc
dec
ret
or
pop
enter
push
scas
retf
enter
or
fmul
movsx
data16
ret
jne
ret
mov
mov
dec
or
sti
scas
popa
(bad)
std
dec
xchg
les
in
popf
mov
cmps
popa
stc
in
inc
mov
data16
int
repnz
dec
test
addr16
addr16
mov
mov
mov
xchg
(bad)
mov
out
mov
xchg
scas
xchg
dec
arpl
jg
test
test
jno
pop
outs
fst
loopne
jp
mov
popa
mov
sahf
cmps
in
scas
stos
dec
in
daa
retf
cmp
mov
mov
out
adc
outs
ins
ds
and
pushf
mov
movs
(bad)
sub
and
int3
and
xchg
in
int3
ds
push
sub
mov
movs
fisubr
ret
jb
inc
cld
and
cmp
cmp
push
mov
test
push
dec
mov
rol
pop
test
cld
mov
daa
fcom
call
jp
jae
mov
stos
jl
das
stc
fsubr
inc
sub
sbb
cwde
pusha
jg
mov
jl
xor
mov
adc
lock
adc
mov
sub
scas
adc
ins
xchg
jns
add
add
imul
scas
jno
cdq
ret
mov
pop
mov
stos
mov
popf
inc
lods
in
call
pop
mov
imul
stc
scas
jmp
nop
mov
add
imul
(bad)
xor
test
mov
sub
jmp
xor
fwait
xchg
mov
sbb
push
loopne
lods
sub
jns
std
pop
sar
lods
out
jl
xchg
mov
push
aas
lods
cmps
not
outs
xchg
into
shr
aas
call
repz
dec
xor
and
cdq
popf
pop
mov
mov
cmp
mov
dec
in
out
mov
retf
stos
lahf
mov
dec
push
push
cmps
and
addr16
jne
out
test
jns
mov
ja
out
dec
(bad)
lea
loop
mov
xchg
jmp
jmp
cmp
xor
mov
scas
loop
jge
nop
mov
mov
addr16
(bad)
aad
mov
mov
mov
lods
adc
lock
jp
sbb
arpl
mov
dec
icebp
sub
inc
xor
arpl
mov
jmp
fwait
rcr
sub
push
inc
mov
cli
mov
inc
adc
pop
lods
in
push
inc
xlat
les
xchg
cs
sub
stos
jne
xor
or
je
mov
mov
ds
adc
es
jg
pop
jo
fcmovnbe
pop
cmp
jle
in
xor
mov
mov
mov
mov
fs
sub
aam
push
jno
mov
and
pop
or
jnp
dec
sub
and
jbe
add
out
pop
cmp
push
cmps
mov
add
ins
jmp
adc
push
stos
pop
jae
pop
fwait
cmps
inc
movs
cmp
jle
fsubr
out
jge
fnstenv
mov
cwde
jbe
jmp
and
cmps
cmp
or
aas
jae
jmp
lea
xor
xor
cld
jmp
push
jl
(bad)
cmc
cmp
mov
(bad)
pop
or
or
push
scas
or
push
fnsave
into
int
shl
sub
mul
out
movs
nop
fnstenv
in
jl
mov
popa
mov
jp
add
mov
and
push
stos
dec
mov
cmp
lea
enter
pop
ret
adc
jmp
and
jecxz
mov
inc
cmp
neg
aaa
pop
jne
int3
clc
daa
stos
outs
pop
jmp
cmps
mov
jmp
mov
in
aad
or
data16
sbb
popa
pop
mov
mov
mov
jmp
mov
mov
jle
mov
mov
mov
es
fucomp
inc
sar
jns
popa
jae
sub
js
push
cmp
xchg
jbe
adc
and
pop
int3
cmps
push
pop
xchg
lods
cld
push
mov
add
sbb
or
and
imul
dec
ds
mov
and
mov
fisub
lods
mov
dec
mov
mov
add
js
push
xchg
inc
mov
mul
cmp
jg
jle
mov
(bad)
stos
(bad)
xchg
mov
or
loope
add
jecxz
mov
sar
out
stos
mov
shl
add
mov
jne
sub
int
adc
xchg
push
mov
add
imul
(bad)
or
mov
sub
mov
cmps
pop
pop
(bad)
cdq
sbb
add
add
jno
fs
adc
repz
mov
jbe
mov
pop
dec
jge
adc
mov
jl
adc
aam
sbb
mov
xchg
pop
(bad)
rcl
(bad)
pop
lods
xchg
jmp
mov
iret
sbb
pop
mov
daa
sar
sbb
mov
xchg
mov
outs
and
ds
pop
jmp
mov
in
je
fistp
fidiv
ror
imul
sbb
repz
push
js
or
jo
push
jge
neg
push
sub
jno
xchg
push
arpl
or
inc
sbb
ficomp
jno
sub
pop
sar
or
dec
mov
push
outs
repnz
stc
sbb
push
pop
xor
test
test
adc
pop
cmp
pop
cmp
daa
xor
cld
inc
jbe
inc
push
pop
mov
call
xchg
sahf
or
push
mov
jmp
mov
stos
shl
adc
pop
and
js
pop
cwde
inc
pop
jbe
shr
and
pop
cmps
das
fsub
jo
cmps
mov
ret
mov
pop
cmps
mov
ins
sub
repz
push
push
dec
mov
(bad)
mov
sbb
pop
call
pop
inc
nop
daa
xor
into
rcr
arpl
in
inc
add
les
jmp
inc
and
cmp
push
scas
gs
jmp
mov
(bad)
ror
cs
loope
cmp
pop
(bad)
imul
retf
adc
jmp
ja
mov
scas
or
call
jle
scas
mov
cmps
(bad)
xor
and
imul
cmc
mul
mov
call
mov
jmp
mov
inc
pop
std
mov
leave
int3
or
adc
lahf
sti
add
mov
loop
inc
scas
(bad)
jns
outs
jle
jo
jp
ins
mov
xchg
outs
mov
loop
push
xchg
and
mov
in
mov
lods
sub
scas
mov
ss
and
pop
mov
stos
in
cmps
popf
mov
data16
nop
pop
mov
cmps
jbe
stos
movs
xchg
mov
sub
sar
icebp
pop
mov
sbb
call
sbb
adc
ds
pop
repz
outs
cli
fwait
arpl
cmps
call
retf
or
cmps
xchg
push
test
test
subps
push
and
in
or
cs
in
xchg
fisubr
pop
popa
mov
mov
jg
lahf
sbb
adc
es
sahf
mov
mov
and
cmp
lods
pop
pop
fs
sub
jg
or
test
jnp
ins
imul
ficomp
adc
jg
call
fcmovu
sbb
cmps
mov
inc
xlat
mov
scas
mov
cli
push
cwde
scas
jae
sbb
mov
or
jmp
push
xchg
xchg
mov
jno
(bad)
bound
(bad)
loopne
push
fiadd
cmp
mov
dec
addr16
mov
ds
and
js
in
add
aaa
fs
mov
cmp
add
push
mov
and
retf
test
retf
stos
lods
cmc
int3
ins
mov
push
in
scas
jl
xchg
test
outs
mov
cmps
test
xchg
push
xchg
test
stc
push
dec
inc
and
mov
ins
test
cmp
lahf
imul
stos
dec
mov
out
jg
das
mov
retf
fabs
mov
push
cmc
test
cmp
movs
shl
xor
push
push
daa
mov
iret
lods
cmps
lds
xchg
jae
cdq
mov
pop
xchg
and
push
lods
mov
xchg
and
lea
movs
mov
pop
movs
jns
outs
dec
adc
gs
mov
rcr
stos
repnz
test
cmp
pop
cmp
(bad)
and
mov
mov
jp
lock
mov
or
rcr
pop
mov
inc
mov
imul
popa
mov
cli
cmp
mov
mov
cmc
cmp
sbb
ds
xchg
in
pop
fwait
xchg
sub
vxorpd
loopne
ins
stos
ja
aam
pop
mov
lss
mov
jge
arpl
out
movsx
push
(bad)
push
cld
bound
mov
dec
lods
mov
repz
outs
xchg
test
and
ins
xchg
mov
sub
out
adc
iret
dec
adc
fstp
sub
adc
loope
cmp
push
and
or
clc
adc
cmp
add
and
jo
push
mov
push
(bad)
jle
jmp
stos
cld
xchg
lods
cmps
int
cmps
pop
xchg
fs
(bad)
push
push
dec
push
add
cmp
mov
aad
sar
push
sahf
es
mov
retf
in
sub
cld
mov
pop
mov
jp
out
loope
ds
popf
outs
jno
pop
fdiv
inc
scas
cdq
push
inc
cmps
std
cmps
mov
(bad)
mov
das
cs
scas
mov
cli
pop
mov
add
and
sub
(bad)
push
push
dec
dec
cmc
outs
mov
inc
sub
es
cwde
mov
fnstcw
sub
dec
sub
add
sub
xchg
ficom
xchg
xchg
dec
and
mov
(bad)
push
push
pop
aad
mov
sahf
ins
cmp
mov
outs
dec
and
ret
mov
(bad)
mov
stos
arpl
sar
inc
lea
mov
(bad)
sbb
outs
mov
fwait
cmps
movs
push
daa
imul
inc
lods
shr
cli
pusha
dec
stos
fwait
ins
aas
mov
std
jmp
outs
addr16
sbb
mov
mov
js
retf
stos
and
lahf
in
jne
popa
jg
in
jl
mov
mov
sub
sub
lods
lods
push
cmp
push
clc
int
aas
das
mov
adc
sub
mov
mov
push
mov
mov
ins
fwait
clc
int3
outs
push
ret
cmp
pop
inc
out
imul
mov
mov
cs
rol
dec
mov
xchg
jmp
fimul
fwait
xor
popf
push
(bad)
out
add
bt
mov
push
test
mov
push
xchg
cs
ja
jbe
ret
rcr
dec
sar
jns
das
push
adc
push
outs
ja
mov
mov
xchg
mov
dec
jae
or
sub
in
(bad)
iret
(bad)
sub
fst
pop
sub
xlat
(bad)
xchg
scas
loope
add
mov
mov
out
fwait
imul
call
(bad)
out
ret
jp
(bad)
into
xor
push
jae
(bad)
sbb
jmp
cdq
inc
gs
adc
sbb
aas
add
mov
push
or
(bad)
shl
test
jle
pushf
daa
jb
int3
mov
jp
aas
or
mov
(bad)
mov
popf
push
outs
movs
and
jg
rol
jb
push
sar
mov
inc
cli
push
test
icebp
ja
inc
(bad)
and
sub
hlt
and
jne
stos
pop
(bad)
es
out
dec
ins
in
lds
mov
out
(bad)
jns
mov
xchg
retf
lds
push
cmp
mov
lahf
push
mov
mov
imul
mov
mov
or
mov
into
lock
lods
fsubp
mov
test
mov
adc
cmp
lahf
jns
(bad)
ret
pusha
dec
shl
lock
xor
mov
pop
mov
stos
mov
popf
fwait
sub
cmps
xor
cs
push
xor
mov
jae
inc
add
adc
xchg
dec
ss
adc
ins
sbb
adc
repnz
push
retf
lahf
repz
scas
and
or
cmp
pop
ror
daa
in
test
jb
jns
mov
(bad)
fwait
push
shr
test
push
loop
or
sub
out
sbb
adc
add
movs
gs
push
push
sbb
mov
ins
test
test
pop
cmps
sbb
mov
sub
lahf
repnz
xchg
movs
sub
fidivr
inc
loop
pop
cmp
stos
inc
jg
ret
sbb
push
adc
mov
pop
xchg
jno
popf
mov
ret
push
mov
fcmovb
pop
aas
push
jmp
popf
pop
mov
js
ret
push
xchg
lods
mov
addr16
mov
mov
loope
stos
jnp
repnz
cmp
dec
into
adc
and
pop
aaa
add
(bad)
push
rcl
jge
test
jmp
out
nop
and
stos
push
push
lahf
cs
jle
out
push
stc
fsubr
in
add
ja
jecxz
sbb
mov
ror
in
xchg
cmp
imul
sub
movs
push
mov
not
test
xor
mov
outs
jg
mov
movs
mov
push
(bad)
stc
sub
push
mov
repnz
test
and
and
and
(bad)
and
mov
jno
(bad)
repnz
es
sbb
fisttp
push
aas
cmp
stos
and
ret
mov
cmp
(bad)
test
adc
lahf
xchg
cmp
mov
movs
stc
sub
inc
ins
js
les
(bad)
test
fs
mov
nop
inc
cmp
fs
lock
dec
test
pop
mov
mov
mov
mov
xor
lds
cmp
lods
mov
xchg
outs
mov
cmps
or
jo
mov
lods
(bad)
cmp
pop
inc
jb
and
mov
pop
add
mov
jp
retf
dec
pop
mov
cwde
out
sbb
pop
loopne
(bad)
(bad)
jle
sahf
fidivr
or
movs
adc
add
out
fwait
cmp
xor
dec
jle
and
jg
sahf
fimul
lahf
pop
lea
lea
mov
cli
xor
mov
lods
addr16
and
mov
push
mov
pop
out
inc
dec
or
push
btc
fxch
(bad)
ja
test
or
into
adc
ja
call
lods
sub
push
lahf
lods
aad
and
jg
cmp
popf
not
jl
jecxz
arpl
mov
mov
jae
in
shl
jbe
test
xchg
lods
ret
mov
pop
out
mov
int
cld
ja
stos
mov
mov
cmps
xor
ins
daa
addr16
pop
repnz
mov
push
push
popa
mov
ja
add
or
pop
jno
push
dec
stos
xchg
inc
jge
mov
pop
and
sub
jmp
add
dec
repnz
mov
push
out
lock
jle
and
outs
(bad)
jbe
dec
mov
pop
mov
sbb
mov
cdq
mov
ret
(bad)
mov
mov
xchg
xchg
push
mov
loop
and
sub
dec
(bad)
mov
add
pop
test
adc
xor
pusha
aas
fisub
mov
imul
cmp
and
call
daa
and
(bad)
mov
sub
lods
sbb
int
imul
cmp
shl
pop
ja
mov
add
(bad)
cmp
push
ja
test
(bad)
stos
(bad)
arpl
das
pop
ret
push
sbb
sbb
mov
and
mov
lods
ss
outs
outs
jge
retf
adc
jb
call
pusha
(bad)
fistp
or
lds
jge
cwde
mov
cmps
adc
pop
outs
test
call
or
adc
out
test
cld
mov
fld
or
mov
or
add
mov
mov
push
mov
in
ret
mov
mov
jecxz
mov
fwait
sbb
dec
cli
xchg
lahf
repnz
mov
sti
shl
out
arpl
ja
ss
pop
sbb
sub
mov
or
scas
test
sbb
xchg
aad
sub
repnz
jp
int3
movs
jmp
ror
mov
cld
push
jle
call
push
test
in
clc
dec
fild
add
call
push
or
out
xor
adc
and
es
(bad)
out
int3
loop
sub
lods
push
sar
and
mov
mov
into
push
cs
popa
shl
mov
mov
lods
fisubr
sar
add
div
jmp
mov
cmp
out
xor
scas
adc
push
inc
call
push
sbb
std
fsubr
lods
pop
ja
xchg
fsub
pop
repnz
fdiv
fnstcw
fcomp
push
add
out
ins
rcl
xchg
cs
pop
lods
pop
push
inc
xchg
jg
addr16
mov
mov
(bad)
mov
jp
movs
gs
loopne
mov
cmp
call
cmp
cmp
idiv
mov
ins
mov
lahf
cmps
ret
or
cwde
cdq
push
call
scas
icebp
mov
in
lods
jge
mov
aaa
xchg
pop
(bad)
cs
shl
mov
movs
iret
mov
test
(bad)
lods
jecxz
pop
jp
sbb
call
(bad)
or
stos
jae
ret
inc
arpl
movs
pop
ins
and
jne
adc
mov
imul
daa
movd
add
jnp
mov
xchg
pop
cmps
ja
out
addr16
adc
jb
idiv
or
sahf
add
or
add
mov
pop
icebp
add
out
pop
pop
lods
int
popf
mov
jns
cmps
gs
fidiv
sub
add
aad
inc
fimul
in
push
leave
xchg
movs
clc
or
inc
xchg
leave
daa
or
outs
cs
shl
mov
outs
test
sbb
and
rcr
sahf
addr16
xchg
lods
mov
sub
scas
and
mov
ds
stos
pop
jge
in
mov
stos
jae
inc
xor
test
lods
pushf
shl
dec
xchg
sbb
das
fs
mov
cmps
mov
rcr
movs
aas
pop
(bad)
xchg
movs
mov
sub
pop
mov
and
shl
mov
inc
out
pop
call
out
add
mov
aas
out
(bad)
cmp
lahf
dec
(bad)
pop
mov
mov
dec
mov
xchg
leave
sub
xchg
and
stos
mov
xchg
add
daa
aas
mov
ins
add
test
jge
pop
out
adc
movaps
cmovge
cdq
cmp
and
out
adc
cwde
add
cmp
cmps
mov
mov
xchg
js
cmps
imul
pop
aas
inc
xchg
jmp
jp
mov
daa
aas
inc
jl
in
(bad)
jmp
lods
sub
or
xchg
lods
pusha
(bad)
out
dec
push
lods
mov
ins
sbb
fimul
popf
jno
sub
push
aad
lds
mov
retf
mov
mov
mov
fdivr
cdq
xor
mov
mov
retf
mov
std
sub
pusha
daa
loopne
ins
mov
adc
mov
mov
cs
jnp
mov
and
pop
inc
xchg
pop
pop
sbb
push
repnz
fcomp
sub
cmp
push
jne
cld
sub
imul
cli
imul
adc
test
jle
cmp
stos
sbb
lods
or
sub
pop
jecxz
(bad)
cmp
mov
cmp
jb
clc
ds
pop
jae
adc
and
jns
jecxz
(bad)
aas
cwde
mov
shl
iret
js
fild
xchg
scas
enter
xchg
or
and
mov
lahf
ret
fstp
cmps
or
fcomp
sbb
je
ins
push
iret
daa
pop
hlt
sbb
add
mov
inc
mov
mov
push
and
ins
xor
mov
cdq
add
cmp
aaa
mov
add
jle
cmp
(bad)
jnp
cmp
nop
(bad)
and
xor
sbb
cmps
jo
adc
jle
mov
jo
pop
aas
mov
in
(bad)
in
div
sahf
xchg
mov
mov
test
or
test
dec
sar
inc
add
sub
cmps
lods
lock
pop
retf
(bad)
jp
outs
sub
les
jp
xchg
dec
mov
jo
out
inc
mov
cmp
arpl
cli
mov
retf
into
repz
xlat
jo
dec
mov
aaa
mov
dec
xor
sbb
mov
inc
(bad)
mov
stos
(bad)
xchg
add
inc
shl
cmps
jnp
pop
aas
inc
jp
fldenv
pop
in
stos
loop
ret
ins
lods
cmp
in
mov
dec
sub
mov
push
shr
outs
pop
push
inc
pop
sbb
jnp
push
mov
dec
and
ja
retf
adc
shl
jo
repz
jg
aad
cmps
xor
mov
push
cmp
fld
sahf
mov
in
sahf
add
movs
(bad)
sahf
popa
mov
rcl
jmp
outs
in
cs
or
std
in
dec
push
inc
scas
dec
loop
xchg
sbb
popf
mov
mov
fldenv
lahf
mov
ins
add
mov
mov
ins
rol
xchg
sub
fucomp
scas
mov
push
jns
daa
out
jp
sub
inc
cld
arpl
(bad)
fimul
mov
cli
mov
popa
sbb
cmp
lods
inc
jb
cmps
addr16
hlt
lahf
cld
sahf
push
sub
or
sub
(bad)
cmp
data16
add
shl
pop
mov
retf
jecxz
adc
cli
mov
dec
mov
mov
in
push
pop
test
xor
scas
ret
out
mov
(bad)
mov
int
mov
jl
jge
or
and
mov
daa
sub
jge
retf
hlt
gs
add
mov
ins
and
adc
pop
push
and
xchg
jl
scas
jp
push
xchg
pop
adc
mov
hlt
cld
adc
cmp
stos
sub
xchg
push
and
call
cli
sbb
or
mov
mov
pop
stos
inc
pop
es
lods
ins
daa
jle
fs
ins
sahf
(bad)
and
sbb
(bad)
jae
scas
lds
ret
je
sahf
mov
sub
pop
sbb
pop
ins
sbb
mov
dec
and
jle
dec
sbb
add
jmp
lods
addr16
dec
out
shr
sbb
inc
in
mov
int3
(bad)
jge
jbe
or
popf
jg
and
and
cmp
pop
int
ret
pop
and
push
(bad)
leave
inc
and
sub
adc
adc
dec
stc
xchg
mov
in
sub
pop
mov
jmp
inc
(bad)
dec
cmp
cmps
and
(bad)
sub
dec
dec
mov
js
sbb
xchg
mov
pusha
pop
in
push
or
ret
mov
sub
and
addr16
adc
pushf
push
fisubr
ret
scas
pop
sub
jge
mov
pop
ret
add
inc
mov
(bad)
sbb
int3
(bad)
(bad)
cmp
push
lea
jle
jnp
out
(bad)
aad
jp
cli
nop
inc
imul
int
aaa
or
(bad)
pop
test
xor
test
adc
cmp
clc
outs
lods
stos
jno
mov
nop
sbb
inc
jge
iret
and
dec
push
scas
js
inc
(bad)
mov
adc
and
jmp
aaa
outs
dec
inc
mov
jp
sub
popf
ss
and
adc
pop
push
aad
xchg
imul
popa
jg
daa
out
ret
and
aad
ficomp
inc
mov
adc
stos
(bad)
push
and
js
in
aad
mov
mov
ins
fwait
mov
das
call
jb
sub
dec
or
dec
sahf
ins
mov
mov
or
pop
repnz
pop
stos
ret
jg
sar
clc
mov
and
mov
adc
outs
es
movs
cmp
cmps
std
and
push
xor
or
pop
shl
js
lods
out
dec
dec
popa
lods
adc
je
retf
mov
push
movs
in
adc
push
push
xchg
stos
call
and
cmp
mov
add
ins
mov
push
mov
pop
out
rol
push
(bad)
mov
jne
inc
jnp
sub
mov
mov
push
stos
cmp
outs
jne
fisttp
stos
mov
sub
fnsave
aam
inc
mov
test
jns
adc
and
cmc
test
push
and
fwait
movs
add
jmp
sahf
sub
ja
jns
movs
ffree
cdq
mov
je
ins
dec
es
cmp
test
in
test
jge
dec
inc
sub
in
add
cwde
sbb
aam
sbb
mov
gs
push
cli
sub
mov
aas
mov
mov
dec
fistp
cdq
retf
mov
adc
inc
das
ins
and
into
outs
es
hlt
test
movs
pop
adc
ja
test
mov
push
mov
cmp
xchg
mov
add
out
mul
cmps
(bad)
imul
cmp
sub
or
movs
mov
popa
mov
call
call
inc
movs
pop
imul
add
hlt
dec
dec
push
mov
mov
and
mov
pop
jnp
jbe
(bad)
cmps
push
int3
xchg
pop
ud2
pop
pop
js
(bad)
mov
and
sub
ret
movs
mov
(bad)
adc
jg
icebp
daa
je
jnp
mov
js
adc
outs
xchg
cmp
mov
sar
push
mov
cmp
popf
mov
push
add
ret
movs
sahf
sbb
jnp
xchg
mov
xchg
popa
mov
jle
(bad)
mov
push
adc
iret
jl
mov
pop
pop
sub
out
sub
lahf
ins
add
das
jl
cmp
sub
stos
mov
stos
out
cs
sub
pop
aas
mov
adc
lea
icebp
mul
cmps
scas
js
jmp
sub
jg
mov
loope
ins
loop
push
scas
xchg
fimul
jnp
(bad)
mov
cmp
fwait
imul
dec
mov
leave
(bad)
xchg
mov
or
adc
jmp
sub
loope
pop
ja
in
cmps
pop
es
mov
cmps
or
mov
out
stos
dec
or
mov
jbe
arpl
mov
arpl
xor
aas
jb
(bad)
cmp
adc
mov
mov
mov
dec
push
xchg
adc
xor
xor
adc
mov
cmp
test
or
popf
pop
mov
lahf
mov
popf
addr16
xchg
movs
or
xchg
repz
cmps
arpl
popa
inc
stos
imul
imul
(bad)
pop
add
inc
mov
stos
mov
add
ja
xchg
cs
push
jb
arpl
cmp
shl
jle
jge
test
xchg
jb
xchg
es
ds
mov
(bad)
out
loop
jg
jg
jp
scas
iret
cmp
add
icebp
mov
(bad)
stc
shl
xor
ss
aad
mov
rcr
cmps
bound
loop
push
mov
dec
sub
mov
jmp
xlat
lahf
rcl
clc
xchg
jno
gs
lds
push
jmp
dec
je
aam
mov
sub
xor
cmps
out
dec
push
fcmovbe
idiv
xchg
inc
pop
loope
inc
pop
std
je
call
retf
inc
or
add
test
jg
call
lahf
mov
sbb
push
jg
aaa
movs
(bad)
sbb
in
xchg
jg
push
mov
loop
sub
inc
pop
mov
mov
fdiv
and
outs
xor
stos
inc
add
mov
inc
add
nop
ror
sub
adc
mov
jns
fwait
inc
mov
jge
iret
dec
jg
pusha
lods
(bad)
js
imul
js
dec
mov
mov
(bad)
adc
sbb
jmp
das
cmp
jne
ror
dec
cmp
iret
mov
std
popa
inc
or
xchg
(bad)
popa
or
fwait
pop
sub
stos
aaa
scas
pop
in
stos
add
test
adc
sbb
cmp
cmp
rcr
outs
fadd
xchg
mov
sti
(bad)
pop
jmp
cwde
outs
cmps
mov
mov
mov
sub
mov
mov
xor
mov
and
dec
mov
cs
mov
fisttp
fisttp
retf
lahf
es
icebp
ss
lahf
sbb
jge
pop
push
cmp
and
aam
lahf
adc
lahf
jp
neg
pushf
jne
ins
scas
daa
popf
jmp
dec
cs
mov
(bad)
or
sub
ret
aaa
xor
pop
movs
das
sub
mov
pop
cmp
out
(bad)
out
push
and
dec
aas
push
movs
ror
or
(bad)
mov
or
(bad)
mov
adc
clc
pop
std
sahf
in
inc
imul
ins
fistp
rcr
and
mov
push
sbb
xor
out
push
and
push
test
mov
js
adc
jns
inc
adc
pusha
(bad)
cwde
sahf
ja
nop
test
popa
xchg
(bad)
lahf
push
cmp
(bad)
jnp
data16
pop
aad
in
mov
pop
imul
or
jo
ror
movs
retf
ds
xlat
arpl
loope
scas
add
lods
and
pop
movs
iret
inc
xor
mov
test
cdq
sub
test
cs
and
jnp
cmps
imul
arpl
mov
push
in
aas
test
ja
mov
out
jns
mov
pop
fist
dec
js
arpl
addr16
test
fwait
pop
cmps
xor
cmp
call
pop
add
sub
or
aad
inc
retf
adc
rcl
xor
xor
jg
shr
or
movs
popa
(bad)
xlat
imul
jg
xor
mov
std
mov
xchg
test
add
es
ror
arpl
jbe
or
sbb
dec
jle
sub
dec
jae
fimul
in
xor
push
push
imul
les
(bad)
sbb
lods
in
push
mov
adc
mov
or
enter
movs
adc
fwait
adc
loope
dec
dec
in
aad
push
adc
xchg
mov
push
lods
lock
jl
loopne
xchg
mov
mov
dec
or
iret
mov
in
xor
stos
mov
jmp
jg
arpl
ja
lods
mov
xchg
pop
ins
push
mov
in
out
adc
mov
and
cmp
daa
mov
daa
je
or
push
dec
xchg
stos
inc
sbb
dec
xor
jge
jmp
push
mov
inc
(bad)
stos
pop
cmp
push
rol
mov
xlat
jbe
adc
push
test
push
push
sub
icebp
cmp
mov
fsubr
sub
or
mov
out
xchg
fidivr
or
mov
xchg
cdq
dec
shl
sub
test
dec
cmp
mov
aam
aas
jne
push
in
pop
jge
adc
pop
mov
cmps
push
stos
cmps
sub
mov
popa
sbb
imul
push
aad
call
xchg
xchg
hlt
shl
in
fdivr
lock
mov
pop
add
cmp
test
push
cmp
rcr
mov
xchg
cmps
or
push
stos
adc
js
(bad)
scas
dec
ror
cmps
xchg
test
mov
sub
imul
es
mov
popf
stos
hlt
mov
jge
out
push
pop
xchg
mov
repz
xchg
daa
ja
adc
das
adc
mov
sub
lock
jne
xor
idiv
cmps
scas
and
jmp
pushf
dec
loope
out
cmp
neg
repnz
cs
mov
cmp
push
mov
lds
out
out
jne
mov
xor
and
leave
sub
loop
lea
lds
inc
popa
into
inc
pop
mov
ret
jle
or
stos
rol
cld
ja
or
rcl
xor
xchg
xchg
test
xchg
out
std
retf
sub
ins
mov
retf
popa
cmc
(bad)
shl
dec
(bad)
and
stos
test
ret
cmps
sbb
rcr
pop
sub
xor
cmp
adc
jno
fwait
test
or
out
and
test
jae
jo
rcr
imul
push
cmps
pushf
cmp
mov
xor
push
(bad)
dec
xchg
mov
dec
dec
xchg
in
(bad)
test
jnp
(bad)
xchg
sub
mov
mov
in
xlat
aad
aam
dec
dec
scas
mov
jo
pusha
add
mov
ror
mov
enter
imul
cmp
xchg
lea
test
jl
sub
sub
(bad)
ins
in
and
data16
inc
mov
inc
test
xor
xor
fild
jecxz
pop
fidiv
push
ins
inc
push
push
cmps
mov
(bad)
jmp
call
mov
stc
xchg
jae
aad
xor
popf
lods
loope
pop
popw
jg
xchg
dec
sar
test
jns
enter
js
mov
sub
int
cdq
lods
test
add
inc
scas
in
repnz
pushf
xor
ins
repz
pushf
cld
add
scas
leave
call
ja
popf
shl
pop
mov
xor
mov
cmps
cli
add
in
cmp
xor
imul
les
jbe
xor
cmp
adc
cmp
xor
test
xchg
jae
cli
xor
mov
or
repnz
data16
(bad)
bound
inc
or
xchg
in
pop
pop
pusha
dec
aam
or
sbb
lods
mov
arpl
jne
pop
fwait
loope
or
(bad)
sub
xchg
xor
lods
daa
lahf
fld
ret
sub
clc
inc
inc
mov
add
pop
mov
mov
gs
lds
xor
or
jle
mov
sub
clc
in
mov
mov
je
push
push
ret
cli
(bad)
jne
mov
pop
add
(bad)
lods
and
dec
dec
mov
or
or
pop
cdq
(bad)
xor
movs
(bad)
jo
adc
jno
push
xchg
call
fs
fisub
pop
out
sub
scas
and
nop
(bad)
sub
ret
cwde
push
fsubr
push
xor
add
nop
sub
out
out
push
or
fsub
pop
scas
movs
aad
in
js
jmp
and
lods
adc
(bad)
xchg
cmp
lea
mov
adc
ins
cmp
enter
push
retf
jecxz
dec
(bad)
je
(bad)
dec
loope
pop
ins
icebp
xor
mov
aaa
xchg
inc
loop
jle
ja
cmc
ins
mov
cmps
js
mov
adc
ins
ss
cmps
in
pop
xchg
lods
mov
xchg
test
push
imul
inc
imul
push
pop
sbb
shr
popa
xchg
push
pop
mov
outs
pop
xchg
shl
jmp
jg
inc
jno
dec
xchg
jo
int
mov
popa
inc
mov
stc
aaa
stos
mov
test
adc
lods
pop
fwait
push
adc
jg
mov
(bad)
mov
pop
mov
scas
ins
jg
mov
xchg
mov
in
cdq
mov
(bad)
inc
dec
and
(bad)
xor
imul
fild
mov
mov
ins
stos
daa
dec
cmps
mov
and
movs
xchg
pushf
lods
cmp
(bad)
push
leave
jae
icebp
lahf
in
mov
mov
dec
pop
jge
or
sub
cmps
or
xchg
fwait
div
add
mov
pop
sub
loop
enter
jnp
out
jp
pushf
sahf
jns
jae
and
(bad)
sahf
xor
js
sti
pop
pop
test
sub
popa
test
and
mov
adc
cmp
jge
ret
mov
js
mov
mov
jne
shl
(bad)
icebp
pushw
or
rcr
jne
ret
dec
mov
pop
scas
xor
push
adc
xlat
out
lds
mov
aam
lods
lods
push
movs
popa
adc
jmp
mov
inc
push
stos
imul
mov
pop
xchg
pop
mov
jmp
fsubr
(bad)
xlat
lods
cmp
adc
mov
mov
test
jno
pop
dec
mov
pop
jo
push
fs
push
and
dec
mov
fdivr
test
push
mov
ret
mov
and
sub
dec
sti
cmps
iret
inc
sub
jb
push
push
out
push
test
fisttp
out
mov
scas
movs
jecxz
mov
xchg
and
add
xlat
popf
in
iret
es
imul
ins
push
ds
inc
stos
fsin
jl
sbb
jb
jne
push
hlt
sub
(bad)
mov
lods
in
les
popa
(bad)
jnp
imul
(bad)
popa
pop
scas
mov
packuswb
inc
outs
clc
mov
(bad)
sub
and
cmp
pop
or
stos
cmps
fidivr
fwait
cmp
in
inc
adc
test
mov
gs
xchg
add
mov
jp
shr
stos
mov
xchg
dec
cmps
cs
dec
pop
mov
mov
mov
mov
jp
jp
into
imul
test
aad
jp
cs
stos
pop
sbb
sub
call
mov
sub
bound
xor
rcl
fidiv
(bad)
sub
idiv
cmp
mov
retf
mov
adc
inc
mov
fs
pop
pop
fs
sahf
or
(bad)
fld
fimul
clc
mov
popf
pop
xchg
repnz
scas
fnstcw
stos
mov
cmp
jo
pop
movs
xlat
(bad)
cmp
or
pushf
mov
popa
ror
pop
jnp
lahf
jmp
not
mov
inc
lds
jg
pop
jae
adc
inc
jge
and
dec
jg
xor
fadd
(bad)
mov
fldcw
mov
mov
cmp
mov
mov
mov
mov
adc
leave
movs
inc
test
dec
movs
xchg
ins
iret
jae
ja
lea
loopne
jmp
jns
inc
push
mov
sbb
dec
sar
mov
daa
dec
xchg
pop
cs
push
clc
in
int3
retf
pushf
shl
gs
cmp
cmps
inc
stos
cmp
je
adc
test
scas
stos
stc
mov
pop
mov
mov
fs
jle
xchg
out
sar
stos
jp
loopne
jecxz
add
icebp
or
clc
mov
into
add
mov
xchg
call
xchg
mov
jbe
outs
mov
mov
pop
push
repnz
push
adc
lods
xor
les
addr16
jl
push
mov
xchg
inc
rcr
test
cmps
and
inc
outs
jge
mov
stos
(bad)
ins
mov
mov
dec
cs
push
fisttp
ins
repz
mov
xchg
pop
fs
into
sub
cld
sbb
ins
movs
xor
cwde
les
jns
xor
jle
aaa
push
pop
inc
jge
jle
iret
mov
mov
pusha
pop
daa
aas
inc
sub
das
jl
int3
imul
and
adc
out
test
retf
and
loop
test
cmp
lea
bswap
xchg
adc
adc
mov
add
loopne
sub
jp
jmp
enter
(bad)
ja
mov
mov
sub
shr
push
mov
mov
es
lods
hlt
mov
mov
and
scas
(bad)
out
enter
fsubr
(bad)
repnz
push
retf
scas
xchg
xchg
cmps
mov
add
jp
and
cmp
jp
shl
xchg
in
mov
test
mov
aaa
xchg
pusha
sub
mov
and
mov
(bad)
cmp
mov
ja
push
(bad)
or
inc
inc
(bad)
ds
or
mov
mov
pushf
dec
iret
loop
cmp
pop
or
inc
fld1
sub
xchg
dec
jecxz
shl
iret
mov
pop
sbb
das
sub
ret
aaa
or
std
imul
xor
sbb
mov
sti
out
aaa
or
mov
mov
(bad)
loope
cmp
cli
cmp
push
stc
jecxz
frstpm(287
push
jbe
lods
out
dec
push
inc
pop
xor
pop
cmp
in
gs
jp
push
inc
test
cld
dec
sub
cmps
and
lods
push
sbb
nop
and
jae
out
fisttp
xor
mov
inc
scas
jg
dec
jp
les
jnp
sub
(bad)
jmp
mov
sti
stos
mov
sbb
gs
cmps
jne
jmp
mov
in
loope
mov
fld
movs
mov
lahf
hlt
xchg
jmp
mov
cmp
sbb
jno
imul
(bad)
sbb
int3
cmc
int3
jns
dec
cmp
jne
mov
cmp
arpl
aam
and
or
cmp
sar
fnstcw
pushf
cmp
push
clc
shr
pop
jl
xchg
retf
jbe
xchg
or
mov
popf
jne
(bad)
js
mov
xchg
mov
sub
xor
xchg
aam
mov
dec
add
mov
das
cmc
cmps
xlat
sbb
aas
xor
jmp
fwait
push
out
jno
pop
icebp
ins
das
mov
mov
and
loop
jl
xchg
push
xchg
adc
push
mov
ss
outs
in
fst
outs
dec
cmp
(bad)
mov
push
mov
pop
sbb
adc
push
nop
dec
and
and
cmps
mov
mov
test
mov
sbb
dec
pop
mov
cmps
pop
fs
popf
not
ins
sub
mov
sbb
ds
scas
mov
xchg
dec
cmp
sbb
push
mov
push
aas
sbb
imul
shl
fsub
xchg
std
xor
inc
xor
lock
stos
enter
jge
lock
bound
mov
fistp
mov
sub
out
pop
loope
xor
cmp
std
scas
cmp
(bad)
in
cmp
sbb
push
lds
daa
xor
dec
ret
data16
or
test
cmp
and
and
shl
dec
lods
mov
and
div
mov
sub
jmp
mov
loopne
mov
stos
fisub
stos
lds
mov
mov
repz
jg
mov
outs
(bad)
xchg
lods
adc
lds
pop
add
add
(bad)
pop
gs
xchg
fadd
cmp
sub
mov
pop
sbb
dec
mov
xchg
out
dec
dec
jbe
(bad)
and
push
add
or
mov
iret
pop
nop
cmp
fwait
je
push
sub
mov
out
pop
sub
lods
mov
mov
pop
stc
push
stos
xchg
jge
mov
cld
and
and
cld
iret
repnz
pop
ret
jge
iret
pop
inc
aas
and
and
mov
aaa
test
push
stc
sub
std
mov
jnp
mov
sub
lods
or
test
pop
jae
sub
inc
stos
mov
mov
pop
lahf
int
mov
pop
call
inc
jnp
inc
xchg
mov
lds
xlat
adc
movs
adc
aas
push
test
sub
mov
mov
shl
jp
mov
mov
pop
and
mov
jae
mov
jle
mov
and
(bad)
icebp
les
scas
hlt
ja
addr16
pusha
pop
dec
out
mov
daa
dec
nop
jp
sub
jle
push
sub
add
or
scas
xchg
and
es
fadd
pop
push
cli
hlt
jne
or
or
xor
mov
cmps
sub
test
cmp
mov
test
(bad)
mov
sub
mov
mov
mov
mov
ins
mov
cli
test
fnstsw
ins
addr16
mov
xchg
xchg
dec
out
popa
popf
or
cmps
popf
pop
sbb
adc
xor
fstp
add
pop
push
push
div
fld
and
sub
inc
sub
xchg
xor
hlt
rcl
or
aad
cmp
xor
bound
mov
sahf
cmp
movs
mov
sbb
(bad)
ins
xor
test
stos
test
movs
mov
test
and
repnz
inc
int3
lock
jae
push
mov
test
outs
sbb
(bad)
mov
mov
xchg
movs
xchg
and
adc
mov
stos
mov
add
daa
mov
imul
jae
jp
mov
xor
call
(bad)
je
push
repz
mov
mov
inc
test
(bad)
loope
out
lods
jmp
inc
mov
mov
imul
imul
or
lock
lock
push
mov
call
mov
rcl
mov
xchg
aam
not
js
dec
or
ror
daa
fistp
inc
out
push
xchg
cmp
sbb
mov
mov
push
and
(bad)
ja
ss
shr
cmp
sub
lock
jg
mov
test
sub
mov
xchg
clc
gs
(bad)
jge
sbb
jg
data16
(bad)
cmp
fmul
mov
js
add
mov
sub
add
mov
mov
xor
jmp
mov
jmp
(bad)
jge
loopne
inc
nop
mov
sub
ins
jae
jno
aam
outs
pop
data16
loope
inc
leave
and
dec
xchg
mov
cs
int3
ret
inc
and
lds
fisub
ret
push
jg
iret
not
xor
inc
out
int3
ret
adc
cmps
movs
popf
mov
imul
aad
inc
js
popa
popf
mov
sub
clc
pop
lods
and
sub
sub
pop
pushaw
sub
xchg
inc
sar
ror
add
pop
mov
aas
pop
addr16
inc
ret
(bad)
sub
xchg
add
jae
push
sbb
stos
mov
sbb
push
pop
push
adc
cwde
mov
movs
xchg
cmps
in
test
js
xchg
shl
jb
lds
ret
mov
jmp
dec
stos
add
aas
shl
push
test
dec
xchg
cmps
scas
stos
test
(bad)
dec
idiv
test
inc
dec
sub
pop
jmp
(bad)
jl
ret
jp
enter
push
adc
test
cmp
xor
cmp
imul
les
int
sar
jns
jmp
xchg
imul
pushf
and
popa
hlt
loope
popa
sti
lods
mov
test
lods
aam
mov
jmp
sub
out
sbb
push
xchg
mov
aad
mov
test
cmp
sahf
ss
out
xchg
jo
(bad)
cmp
scas
cmc
(bad)
push
mov
jge
xchg
xor
popa
push
pop
fcom
mov
sub
dec
jge
movs
pop
dec
xor
mov
test
out
pop
ret
pop
gs
aam
js
stos
out
mov
push
movs
iret
fistp
jbe
xchg
shr
ja
ja
rcl
mov
jle
push
mov
fisub
jo
xchg
lods
call
mov
sub
in
aas
in
cmp
in
dec
cmp
retf
push
dec
rol
(bad)
adc
mov
stos
dec
push
(bad)
mov
aaa
push
jns
hlt
fwait
jg
sahf
int3
mov
ins
mov
in
jge
stc
call
pop
or
je
mov
jg
cld
pop
jmp
out
jnp
push
(bad)
mov
xchg
xchg
pop
mov
int
cmps
jl
fidiv
fsubr
pop
mov
mov
stos
jbe
xchg
mov
adc
in
sub
rcr
push
mov
pop
push
aam
xor
ret
mov
jb
xchg
fs
scas
sbb
sbb
pop
outs
pop
mov
(bad)
push
push
xchg
push
neg
ror
fistp
into
std
mov
loop
scas
pushf
push
sub
mov
lock
call
adc
div
adc
jecxz
std
outs
mov
ss
mov
fst
cdq
in
fbstp
mov
loope
xchg
or
pop
mov
sub
(bad)
jae
mov
mov
push
js
sub
es
(bad)
out
js
sbb
adc
jns
sbb
mov
es
xchg
mov
in
loop
push
mov
cli
pop
mov
push
lods
xchg
jmp
lods
pop
pop
mov
xor
and
ja
sbb
cmp
jmp
aad
cmc
cmp
mov
(bad)
(bad)
scas
and
pop
cmp
cmp
jl
imul
sub
imul
ds
and
test
xor
(bad)
or
ja
jecxz
std
int
cmp
mov
mov
mov
add
das
ja
lock
je
mov
scas
cmp
hlt
push
movs
sub
sub
setno
jo
mov
je
dec
cmc
lods
in
int3
retf
test
arpl
push
and
push
out
mov
push
and
in
es
xchg
cmp
inc
stos
cmp
inc
mov
adc
std
sbb
mov
push
fdivr
push
btc
jge
mov
mov
adc
mov
std
out
test
int3
cmp
mov
mov
or
rcl
mov
ret
in
push
dec
test
aad
jns
mov
call
sub
fistp
and
push
and
xor
stos
add
loope
or
cmp
loope
(bad)
fsubr
(bad)
imul
xchg
jl
lahf
pop
int3
cmp
stc
cmp
(bad)
lahf
inc
push
or
in
je
jb
push
aas
scas
sahf
jns
pop
(bad)
test
jmp
cpuid
in
cld
aad
jecxz
bound
mov
jmp
xor
adc
stos
adc
cli
inc
aaa
movs
cmp
fstp
int
or
push
jle
cmps
js
ins
pop
push
jg
or
adc
icebp
popa
jne
cmp
movs
in
cmp
xchg
mov
pop
xchg
and
push
mov
stos
pop
mov
fwait
add
sub
xor
cwde
lea
adc
pop
dec
dec
mov
out
scas
jo
dec
fsubp
xchg
sub
xlat
push
push
cmps
jmp
retf
cs
or
pop
pop
add
and
push
je
dec
mov
test
jmp
aas
add
push
sbb
pop
es
call
(bad)
jl
aas
xchg
(bad)
push
jmp
push
mov
cmp
and
jg
cmps
mov
jge
ss
cmp
ret
es
shl
mov
(bad)
and
outs
mov
mov
test
jb
mov
sbb
in
push
shl
je
cmp
dec
cld
and
mov
or
push
add
stos
pop
jnp
shl
sub
(bad)
xor
arpl
inc
cmps
arpl
test
pop
pop
pop
jns
sbb
cmp
aam
adc
in
add
mov
adc
or
and
adc
jns
ret
jp
xchg
sti
(bad)
retf
sub
ror
ds
pop
shl
imul
cli
xchg
sub
mov
cmp
icebp
(bad)
dec
mov
scas
out
fld
fadd
stos
fwait
xchg
jno
pushf
jl
add
mov
popa
popa
mov
mov
push
rcl
scas
xor
jbe
jmp
pop
jae
sub
inc
mov
rcl
xchg
jns
dec
inc
mov
xchg
sub
cli
pop
push
sub
jmp
xchg
or
mov
push
sub
sar
xchg
push
aaa
adc
fcmovu
outs
ins
ins
ds
lahf
test
sub
inc
movs
mov
sbb
push
das
(bad)
popa
pusha
jnp
and
stos
pushf
mov
or
arpl
sbb
lahf
sub
movs
adc
sbb
ret
sub
out
lock
test
xchg
xlat
cmc
mov
jle
jo
in
imul
jbe
stos
(bad)
or
add
mov
inc
in
sbb
push
imul
cmp
jl
cli
jge
mov
sahf
pop
test
push
mov
mov
jle
ins
imul
loope
add
sub
out
test
cli
arpl
int3
mov
popa
imul
add
icebp
ret
mov
add
stc
movs
mov
pop
xchg
jle
jl
adc
cmp
(bad)
loop
cmp
pop
sub
xlat
sub
sub
xor
movs
mov
loope
lods
jno
bound
fcmovbe
cmps
dec
arpl
mov
jp
out
rol
mov
or
xlat
jb
mov
pusha
fsub
jmp
cmp
jle
repz
pusha
inc
das
in
lods
mov
jo
sub
test
adc
and
div
movs
dec
loopne
mov
movs
std
cmp
mov
mov
in
inc
pop
xchg
out
dec
sbb
jo
and
mov
inc
pop
jb
inc
lods
xchg
enter
pop
enter
mov
addr16
stos
xlat
jbe
mov
(bad)
mov
pop
or
push
stos
mov
clc
xchg
(bad)
imul
sti
imul
fsub
retf
fisttp
push
ds
mov
outs
sub
movs
push
xchg
sbb
cmps
mov
imul
sub
pusha
pop
add
inc
push
and
and
mov
stos
(bad)
ficomp
mov
ficomp
ja
repz
leave
es
push
xchg
popf
mov
jnp
mov
mov
and
dec
outs
(bad)
data16
cwde
and
mov
pop
lods
adc
not
sbb
sub
mov
rol
mov
jg
iret
adc
fs
es
mov
out
mov
(bad)
xchg
es
sbb
test
stos
inc
lods
or
mov
mov
popa
in
xchg
sar
int
shl
imul
mov
sub
fwait
sub
pop
daa
push
stos
push
movs
add
ja
fidiv
(bad)
jmp
lea
mov
add
and
push
arpl
jbe
adc
dec
mov
mov
ins
sbb
mov
pop
pop
mov
ins
push
mov
jmp
add
jmp
pop
inc
fdivr
out
test
xchg
cmps
scas
call
nop
jge
and
mov
sbb
mov
mov
pop
mov
in
mov
out
fs
jo
or
mov
bound
mov
or
(bad)
fistp
jo
aad
and
in
jg
and
pop
sub
aad
(bad)
fwait
movs
sub
mov
retf
mov
sub
dec
out
sub
mov
and
stos
mov
push
test
cmps
iret
ins
movs
sbb
xchg
xor
push
and
mov
aaa
mov
mov
add
push
ret
dec
adc
mov
stc
dec
popf
and
outs
add
lods
stc
test
mov
xchg
out
aad
clc
mov
pop
push
ins
popf
mov
ins
addr16
dec
dec
and
push
push
mov
mov
mov
sar
enter
cdq
je
inc
mov
clc
sbb
mov
jecxz
outs
jbe
aas
daa
cmp
mov
inc
ret
fwait
mov
mov
mov
std
loopne
add
in
add
cmc
pop
mov
xchg
in
ja
fwait
int
das
cwde
add
ret
mov
jmp
cmps
sbb
inc
daa
cmp
scas
and
add
jge
mov
push
jle
cs
out
dec
cwde
add
cs
fwait
push
call
lahf
imul
dec
dec
jmp
jecxz
imul
mov
inc
cmps
dec
das
jge
(bad)
mov
cwde
adc
cmp
jl
xor
loope
(bad)
imul
repnz
xchg
std
push
push
scas
mov
sub
add
dec
mov
mov
sbb
push
scas
adc
repz
ja
jmp
xchg
(bad)
mov
sub
out
and
sbb
mov
cmp
outs
pop
and
mov
pop
adc
jns
imul
bswap
or
mov
dec
cdq
fstp
shl
jge
pop
jmp
(bad)
in
sar
fsubr
out
sbb
dec
cmp
cmp
imul
mov
or
dec
and
stc
push
cli
ror
gs
int
add
pop
mov
inc
aaa
inc
adc
dec
(bad)
jg
mov
jo
pop
jg
loop
push
mov
cli
cmp
xchg
in
adc
stos
sub
inc
or
(bad)
mov
jb
ins
inc
mov
push
cdq
ins
mov
mov
out
addr16
addr16
dec
mov
sar
sub
mov
add
ds
out
icebp
scas
jnp
(bad)
out
inc
pop
sbb
fisttp
xor
cmp
ins
test
arpl
and
data16
lods
mov
push
cmps
(bad)
scas
cmc
imul
push
mov
enter
cmp
rcl
push
(bad)
fcomp
push
mov
xchg
mov
jl
push
mov
jmp
out
mov
rcr
lods
loopne
call
popf
fisttp
mov
pushf
in
std
sub
movs
adc
sub
aam
scas
pop
xchg
add
test
(bad)
pop
xchg
jne
scas
mov
push
push
fsub
cmp
neg
aas
mov
mov
mov
dec
outs
gs
out
mov
das
jns
pushf
nop
push
into
pop
dec
movs
mov
xchg
sti
push
into
or
mov
mov
ficom
xchg
dec
mov
out
gs
and
lods
mov
mov
(bad)
jne
inc
sahf
ret
(bad)
mov
cmc
mov
arpl
mov
xor
dec
imul
fld
iret
shl
movs
cmp
cs
mov
lock
pop
jge
cs
pop
fild
push
xor
cmps
ret
mov
mov
xchg
or
je
aaa
mov
jle
(bad)
jne
or
cmp
sub
and
shr
mov
pop
sub
ds
daa
ins
dec
aas
xchg
mov
nop
sub
sub
xchg
mov
jg
call
add
outs
stos
hlt
pop
in
push
push
mov
mov
movs
dec
cmps
mov
push
adc
cmp
inc
jge
push
addr16
xchg
xor
sar
xor
jp
mov
sbb
(bad)
pushf
cld
xlat
mov
jbe
test
push
and
jle
shl
outs
or
mov
dec
arpl
cmp
les
pop
xchg
stos
loopne
push
lahf
and
int3
lods
cmp
pushf
retf
cmp
int
sub
cmp
push
das
push
and
jmp
dec
add
mov
mov
push
and
mov
jnp
add
inc
mov
push
dec
fwait
test
inc
sbb
ds
loop
ins
imul
jmp
cld
movs
jno
icebp
dec
ins
mov
cwde
sti
fs
fisttp
and
cmp
cmp
mov
pop
jo
or
jge
ror
mov
test
mov
dec
icebp
je
xchg
xchg
xor
sar
jb
push
xchg
push
mov
pop
ins
push
lock
stos
push
movs
fisubr
sbb
or
nop
or
iret
mov
sub
xchg
scas
in
sbb
or
mov
and
clc
xor
mov
jo
pop
retf
ret
fisub
pushf
or
jge
arpl
pusha
adc
rol
push
test
inc
and
pop
sahf
pop
push
gs
loopne
fld
add
jns
jnp
jo
mov
je
xchg
push
not
dec
repz
das
outs
push
cs
mov
and
xchg
enter
pop
pop
std
aas
mov
iret
sub
jg
and
(bad)
pop
bnd
scas
xchg
imul
pop
add
push
aad
leave
push
cmp
scas
jg
or
fdivr
xchg
mov
js
not
jns
push
mov
cld
xor
dec
arpl
ins
pusha
shr
push
inc
jmp
dec
mov
ins
sub
test
add
std
in
arpl
xchg
push
or
push
dec
shl
mov
js
sub
stos
(bad)
jns
xchg
stos
jl
pusha
mov
es
popa
mov
dec
adc
ja
cmp
test
lods
inc
aaa
xor
js
push
pushf
xor
sub
sbb
addr16
lea
out
cli
dec
daa
lea
sbb
xcrypt-ecb
cmps
push
stc
xchg
mov
mov
mov
sti
repnz
out
ret
jno
(bad)
jmp
and
inc
sbb
adc
mov
adc
ret
nop
mov
push
lods
push
sbb
popa
das
clc
push
inc
sbb
dec
je
jl
mov
ror
in
dec
push
test
aad
mov
mov
mov
test
scas
sub
push
test
in
mov
test
int3
scas
ins
in
movs
fcomp
pop
mov
out
test
jl
(bad)
adc
add
imul
lds
test
test
jne
mov
leave
cmp
lds
iret
iret
dec
stc
cs
xor
pop
mov
push
xlat
in
xchg
rcr
pop
xchg
loopne
mov
cmp
dec
cmp
test
xchg
iret
daa
pop
xchg
and
dec
addr16
pop
pop
cmps
inc
xchg
inc
aam
in
pop
xchg
cwde
pop
dec
add
mov
mov
sub
popa
pop
gs
mov
inc
sub
lds
icebp
mov
mov
jae
lods
mov
cmps
inc
mov
inc
ins
pusha
add
(bad)
shr
jae
sub
mov
or
dec
ins
outs
cmp
mov
add
mov
data16
or
ins
mov
test
mov
jae
push
cmp
cmps
sbb
stos
mov
les
jg
in
addr16
push
jnp
jns
jnp
or
js
jg
hlt
push
sbb
movs
mov
or
xchg
fs
push
inc
mov
hlt
cwde
jno
scas
mov
cmp
aaa
cmp
push
add
jmp
scas
mov
jnp
mov
(bad)
loope
xor
and
lds
cmp
mov
pop
imul
mov
xchg
ss
mov
mov
ss
adc
mov
out
mov
ret
rcl
(bad)
mov
jmp
mov
arpl
rcl
mov
mov
mov
div
daa
cmp
pop
and
sbb
mov
sub
mov
scas
lods
(bad)
jl
sub
push
dec
push
xchg
lea
div
aam
mov
std
pop
mov
jg
(bad)
fnsave
and
out
in
out
in
inc
jo
sbb
in
mov
ret
mov
xor
mov
mov
push
movs
xchg
push
adc
inc
mov
push
outs
mov
cli
cmps
sub
movs
retf
xchg
mov
in
lock
mov
mov
ror
mov
popa
mov
pushf
shr
retf
jae
pop
jp
popf
mov
mov
dec
push
hlt
in
mov
outs
mov
sub
mov
push
push
iret
sbb
add
and
pop
dec
daa
cli
ror
ret
and
add
mov
int3
sub
mov
and
ror
punpckhdq
inc
or
jns
jb
lea
mov
lds
call
test
and
les
mov
ins
pusha
push
test
es
fs
mov
cmp
cmc
mov
mov
cs
iret
xchg
adc
mov
jns
push
jg
mov
popf
push
sub
(bad)
mov
into
cdq
and
cs
shl
mov
xchg
cs
cmps
cmps
repnz
mov
add
out
mov
out
movs
das
imul
jg
jg
es
lds
cmp
mov
xchg
cmps
cmp
jge
and
jbe
in
mov
movs
sbb
mov
pop
ret
je
sub
cmp
jge
mov
out
cmp
dec
repz
mov
int
mov
fcmovbe
aaa
jge
jge
mov
push
xchg
ss
mov
iret
xor
shl
or
xchg
imul
cmp
outs
push
inc
outs
aad
cmps
ss
out
pop
push
add
dec
push
cmps
retf
pop
in
mov
and
les
cmps
adc
test
mov
cmps
movs
movs
mov
scas
inc
xchg
std
mov
inc
fisubr
and
movs
adc
mov
jmp
ins
inc
and
fcmove
sbb
fidiv
jns
pop
dec
mov
and
push
shr
xor
xchg
add
daa
aad
mov
mov
and
mov
mov
jg
or
cmp
out
std
inc
mov
es
sub
popf
fsub
sub
cmp
cwde
in
js
aas
inc
cmps
dec
lods
je
pop
mov
xchg
xchg
inc
mov
sar
add
ins
int
mov
lea
fs
inc
fcomp
mov
inc
and
dec
mov
and
mov
mov
sub
mov
and
ins
ins
scas
push
sbb
aaa
jl
xor
sahf
ins
mov
pop
mov
test
scas
push
out
movs
mov
mov
in
fs
pop
jo
popf
mov
ret
push
daa
in
test
or
pop
cmps
add
and
inc
es
xchg
test
add
repnz
xchg
test
cmps
fdivr
add
bound
out
(bad)
(bad)
sub
mov
pop
int3
mov
and
cmp
arpl
add
add
cmp
push
cmp
mov
adc
cmps
gs
inc
pop
inc
cmp
inc
and
pushf
pushf
cmc
push
mov
or
or
in
add
or
push
inc
movs
cmp
lods
and
bound
xchg
lea
fldenv
lods
bound
dec
xchg
jnp
ins
pop
and
(bad)
scas
test
(bad)
mov
adc
imul
arpl
xor
xchg
push
nop
pop
jo
ds
xchg
fnstsw
mov
sbb
scas
call
jns
ins
ret
fsubrp
mov
mov
cmp
sbb
push
rcl
sub
or
lds
xchg
cmp
mov
pop
adc
lahf
ret
ror
push
addr16
(bad)
sub
sub
xchg
push
mov
scas
cmc
aas
mov
jbe
data16
ins
and
arpl
sub
aad
int
jns
and
jno
imul
cmp
xor
and
(bad)
pop
ja
push
jno
pusha
sub
cmps
push
in
mov
mov
movs
lds
jmp
push
dec
ins
adc
js
das
push
mov
stc
jb
dec
addr16
movs
lds
mov
in
cmp
(bad)
shr
dec
mov
in
lds
in
and
loop
sub
je
cmp
pop
push
cmp
xor
test
push
les
ins
imul
pop
scas
dec
mov
jg
cmps
cmps
daa
xor
mov
fldln2
shr
retf
mov
adc
push
loope
idiv
mov
mov
frstor
pushf
nop
sub
mov
les
xchg
fwait
sbb
popf
mov
mov
or
lahf
push
(bad)
scas
mov
fs
xchg
jo
push
mov
mov
popa
bound
aad
std
mov
jnp
and
repz
and
cmp
push
pushf
pushf
fs
xchg
or
je
outs
loopne
(bad)
jbe
adc
and
xchg
imul
daa
cmp
lods
std
daa
arpl
outs
imul
test
sub
xor
mov
cmp
mov
fisubr
or
push
pop
xchg
cmc
mov
mov
mov
ins
push
mov
popf
add
cli
in
adc
and
and
sub
dec
scas
mov
outs
push
test
ja
push
xor
and
cmp
or
cmp
sbb
lods
jecxz
test
movs
sbb
pop
leave
sbb
mov
xchg
fldcw
es
outs
pop
mov
pop
popf
fwait
mov
mov
nop
ja
mov
jbe
nop
test
fsub
xor
cs
mov
mov
mov
jp
inc
xchg
add
push
(bad)
pop
iret
(bad)
mov
sbb
scas
pop
sub
xchg
shr
gs
movs
mov
aas
sub
cmc
pop
repz
jae
outs
scas
das
fwait
es
fwait
mov
repz
in
mov
pusha
mov
sbb
outs
xchg
xchg
xchg
retf
mov
xlat
outs
adc
pop
push
int
mov
and
jbe
stos
in
mov
sub
or
dec
sub
shl
mov
cs
je
mov
and
adc
in
mov
add
(bad)
lods
test
sbb
sub
mov
imul
(bad)
xchg
(bad)
ds
dec
(bad)
mov
mov
es
lods
push
inc
lods
push
mov
jmp
movs
cmp
fs
rcl
sub
mov
cmps
imul
jne
push
pop
nop
adc
(bad)
das
imul
ret
push
out
or
popf
sbb
aas
adc
cs
ficomp
cmp
and
xor
inc
imul
ret
inc
dec
adc
mov
mov
push
sbb
nop
adc
das
in
pop
std
aad
movs
mov
sbb
ins
xor
cmps
sar
ins
mov
mov
mov
ss
(bad)
pop
fsubr
and
jge
aaa
ret
les
aam
sbb
sbb
(bad)
ja
daa
inc
scas
adc
pop
cmp
lods
pop
out
inc
pop
cs
inc
sbb
adc
iret
ins
ja
inc
mov
jg
adc
hlt
jno
out
(bad)
loope
and
es
call
adc
mov
push
push
lea
push
jg
xor
les
loope
imul
add
fistp
push
js
or
adc
test
xchg
imul
mov
aas
(bad)
in
mov
aas
sub
daa
fimul
mov
dec
cmps
xchg
shl
and
xchg
fs
int3
push
mov
mov
sbb
imul
inc
add
or
add
pop
ja
jmp
sar
sub
jge
inc
enter
ins
pop
push
(bad)
imul
push
ins
rol
inc
pop
stos
ins
bound
pop
mov
mov
mov
inc
adc
das
mov
mov
outs
push
pop
std
test
stos
cs
out
test
mov
pop
push
in
jp
add
jb
mov
clc
leave
movs
aad
cmp
ss
ss
repz
mov
movs
inc
jmp
sbb
sub
fs
sbb
lds
mov
test
xchg
pop
pop
aam
push
mov
loope
mov
shl
lods
mov
jge
add
cmp
sbb
push
loop
mov
es
fcom
lods
es
cmps
pop
movs
pop
call
ret
lods
les
push
scas
mov
cmp
cmps
test
push
sbb
mov
add
cmp
cmp
sub
sbb
xchg
dec
out
add
frstor
push
fistp
cmp
mov
(bad)
xchg
aaa
push
js
call
xchg
pop
test
pushf
jmp
scas
jo
mov
setbe
fild
push
mov
scas
jnp
jle
mov
xchg
fnstcw
(bad)
popa
lds
(bad)
retf
jnp
fs
fs
adc
and
pop
ins
mov
daa
imul
loopne
movs
mov
or
mov
cmp
scas
lods
shl
scas
sub
stos
bnd
test
fcom
or
jl
das
movs
in
retf
test
jp
jl
scas
mov
pop
pop
push
jmp
and
mov
adc
xor
scas
cmp
fs
(bad)
ret
sub
mov
sub
lahf
popf
mov
mov
inc
inc
loop
mov
xchg
mov
xor
dec
fcomp
jbe
mov
movs
and
pushf
fmul
push
cld
dec
mov
(bad)
cs
mov
adc
mov
pop
imul
ins
mov
movs
sub
repz
push
mov
out
js
jl
mov
push
test
mov
mov
aam
jno
pop
cmp
cli
pop
sub
sub
movs
fiadd
xlat
mov
mov
popa
(bad)
es
mov
inc
jns
leave
in
div
and
outs
and
pop
fldenv
jbe
xchg
pushf
outs
mov
mov
dec
movs
ja
mov
(bad)
jmp
jmp
pop
cmp
(bad)
(bad)
imul
dec
retf
out
inc
xchg
mov
(bad)
out
cmps
and
and
mov
jns
cs
sahf
movs
mov
jns
test
pop
ja
add
sub
cli
mov
xchg
test
pop
movs
jb
stc
stos
addr16
mov
mov
cmp
sbb
and
xchg
sub
ds
pop
bound
sub
or
or
loope
add
mov
pop
stos
es
movs
sub
ror
push
xchg
xor
js
outs
and
mov
xchg
rcr
rcr
fidivr
pusha
mov
test
es
sbb
push
jp
and
inc
cmps
xchg
test
fwait
neg
xor
mov
or
xchg
cmp
ret
mov
js
jge
cwde
scas
mov
addr16
mov
sahf
and
xchg
mov
dec
outs
mov
mov
ins
or
cmp
scas
ja
shl
in
repz
lods
inc
stc
stos
dec
movs
inc
popf
push
push
sub
jge
inc
test
mov
xchg
iret
add
jl
imul
and
xlat
addr16
gs
jp
ret
mov
dec
cmc
push
xor
pop
mov
inc
aas
test
jno
add
xchg
ins
sbb
or
in
mov
movs
out
ds
out
imul
jg
stc
pop
sti
mov
movs
retf
jae
repz
jae
test
call
cli
out
or
ret
ds
xchg
inc
cmp
pop
jns
jmp
ror
rcl
icebp
mov
push
retf
imul
loop
arpl
(bad)
fwait
pop
mov
mov
jae
mov
rcr
stc
sahf
push
sbb
add
mov
js
jge
dec
jecxz
imul
cmps
sbb
push
mov
sbb
and
push
ret
(bad)
repnz
addr16
adc
jmp
xchg
std
dec
adc
sub
xchg
ja
lds
loopne
jnp
xchg
fwait
cmps
popa
push
fild
dec
rcr
adc
icebp
cmp
lock
or
jmp
popa
nop
mov
mov
pop
lock
jge
sbb
jne
int
jb
pop
stos
sbb
lahf
shl
xchg
out
test
inc
jns
imul
push
pop
in
lods
mov
enter
mov
mov
jmp
mov
ds
imul
jmp
pop
mov
add
aaa
test
xor
push
pop
inc
and
pop
in
hlt
cmp
mov
mov
repnz
ja
cmp
dec
imul
retf
fistp
mov
stos
cmps
mov
jg
pop
mov
cmps
adc
mov
or
push
je
jno
ins
outs
mov
arpl
xchg
adc
mov
mov
into
mov
out
push
mov
jp
(bad)
dec
test
ret
push
mov
lods
cmovle
and
mov
(bad)
cmp
popa
inc
fidivr
clc
or
fs
idiv
imul
outs
mov
nop
dec
outs
stos
mov
xchg
les
ins
jns
retf
mov
sbb
addr16
mov
cmp
in
pop
ret
mov
xchg
stc
lods
mov
stos
test
jl
out
popa
jmp
(bad)
cld
lods
mov
mov
xchg
arpl
add
pop
popa
cld
adc
fld
xchg
xor
xor
inc
sub
pop
mov
xchg
ins
scas
cli
ja
mov
xchg
ret
xchg
cmps
lea
dec
jae
(bad)
cmp
(bad)
sub
test
mov
outs
outs
repz
and
and
push
popa
mov
push
mov
cmps
les
imul
cmp
mov
pop
into
scas
and
retf
xor
ret
lahf
inc
fwait
loop
mov
adc
jno
mov
rcr
mov
push
mov
inc
ins
sbb
jo
cmp
xchg
out
cvtps2pd
test
arpl
pop
dec
pop
sub
cmp
mov
retf
jecxz
ret
daa
(bad)
cmps
sbb
popf
push
inc
das
lock
jae
movs
inc
lds
mov
scas
and
mov
add
mov
fisttp
jg
ins
and
das
jns
cmp
mov
mov
(bad)
in
popa
xchg
jnp
dec
imul
mov
in
pop
cmc
push
sbb
imul
and
cmp
xchg
inc
imul
fimul
arpl
movs
mov
imul
js
add
mov
repnz
jle
les
jl
outs
hlt
jnp
or
jge
pop
inc
push
xchg
push
fimul
in
repz
add
das
push
xor
shl
xchg
in
or
gs
aad
pop
(bad)
mul
mov
mov
gs
push
or
cmp
and
fild
stos
mov
push
fnstenv
arpl
push
test
pop
das
ins
mov
inc
dec
lods
das
mov
jnp
ret
push
jg
lea
cmp
mov
pminsw
cwde
pop
cmp
(bad)
xchg
je
popf
out
pop
addr16
movs
jg
xor
bound
bound
mov
pop
imul
icebp
pop
xchg
out
jae
mov
call
mov
sbb
inc
xor
lea
addr16
cdq
jecxz
fnsave
cdq
adc
add
test
nop
lock
mov
sub
xchg
mov
jge
loope
sbb
adc
add
fwait
jb
jmp
push
inc
push
jge
push
jmp
add
in
mov
sub
aam
out
(bad)
cmp
dec
mov
outs
mov
enter
push
push
cmp
test
push
mov
and
sub
jp
xrelease
cmp
call
jbe
iret
adc
leave
jmp
data16
retf
and
lahf
iret
or
fs
pop
jno
in
jo
adc
cmp
pop
nop
ficom
pop
retf
mov
in
push
fsub
push
lds
or
sbb
in
test
or
lock
mov
jmp
aas
out
push
push
dec
test
pop
jae
(bad)
ins
das
in
fldenv
jmp
xor
mov
pop
mov
lock
inc
jg
ins
add
mov
mov
(bad)
stos
inc
cmps
mov
inc
setle
(bad)
pop
xchg
xor
push
add
ret
dec
pushf
popf
shrd
hlt
mul
ret
outs
mov
inc
sbb
mov
mov
dec
inc
jmp
jge
or
sbb
xor
adc
in
jg
popf
scas
push
stos
pop
mov
xor
jo
outs
dec
sti
mov
ins
inc
adc
mov
int
xchg
nop
cmc
sbb
cmp
scas
add
mov
aas
mov
fs
sub
scas
(bad)
mov
inc
lahf
punpckhdq
jle
scas
sub
in
cmp
imul
idiv
mov
jge
push
leave
mov
xor
ss
jle
out
xor
popf
lea
mov
aam
sbb
adc
jns
in
or
pop
or
lods
test
pop
mov
(bad)
xor
xchg
mov
out
jne
pop
sub
mov
xchg
rcl
lea
mov
xchg
in
mov
arpl
sub
cmps
loopne
push
scas
scas
mov
out
cmps
push
cmp
push
sbb
mov
stos
add
mov
and
cld
outs
stos
js
es
lods
mov
std
fwait
pop
inc
push
ficom
ds
fmul
add
push
retf
xor
mov
popa
xchg
test
push
popf
retf
repnz
in
xor
xchg
ds
adc
clc
bound
and
xchg
mov
and
fisub
fsubr
sbb
mov
cmc
and
xchg
sub
call
daa
test
inc
shr
and
pop
ret
fisubr
mov
pushf
in
or
adc
lods
gs
mov
(bad)
jge
fs
or
sub
or
lds
imul
or
mov
jo
cli
mov
scas
adc
scas
sti
jb
mov
(bad)
in
std
sub
inc
and
iret
sub
sub
adc
mov
aad
xchg
push
aaa
add
fwait
dec
jp
jl
sbb
mov
xchg
jmp
pop
and
rcr
shr
inc
sub
cmp
int
mov
stos
cld
in
pop
jge
sub
push
aaa
scas
imul
cmp
test
cmp
mov
shl
outs
lods
or
mov
es
(bad)
ja
mov
or
push
scas
or
mov
jne
inc
dec
xchg
xchg
jns
cmc
fwait
(bad)
fisub
or
cdq
es
xchg
cs
pop
cmps
js
xor
jne
test
pop
(bad)
jecxz
mov
mov
outs
ins
inc
dec
popf
int
stc
sbb
test
cld
xchg
cmp
mov
mov
jecxz
mov
fcomp
es
int3
xor
mov
jmp
scas
adc
cmc
add
add
pushf
mov
mov
fwait
jge
sub
cmp
mov
(bad)
dec
xchg
mov
push
dec
mov
arpl
sub
mov
test
sbb
jnp
push
jmp
shl
mov
jae
add
xchg
lahf
mov
outs
stos
sahf
stc
imul
mov
inc
lods
retf
lods
adc
mov
pop
test
adc
cmps
pop
sbb
jmp
outs
pop
add
mov
mov
sub
jo
fs
pop
dec
or
cmps
xor
popa
mov
pop
js
adc
fs
xchg
movs
gs
jmp
in
xor
sub
neg
push
ret
and
sub
out
mov
jg
mov
nop
sub
frstor
pop
shl
fldenv
(bad)
jae
pop
inc
mov
jle
add
daa
stos
jge
cmps
daa
dec
xchg
and
add
xor
sub
mov
(bad)
and
and
cmp
xchg
ins
cs
sub
xchg
and
mov
bound
lods
ss
dec
ins
and
sbb
inc
mov
pop
lods
adc
jle
ds
in
and
rol
jg
inc
push
mov
cmp
aam
sbb
mov
sbb
jne
sub
push
mov
pop
dec
daa
stos
(bad)
push
and
or
test
popa
sub
jns
adc
cld
or
fld
mov
jg
stos
adc
jg
out
icebp
inc
adc
in
jbe
bndldx
dec
or
cs
fcom
std
ds
ins
mov
mov
mov
cmp
ds
jg
das
mov
enter
mov
inc
mov
ins
pop
lea
xor
mov
dec
test
out
pop
mov
js
push
fs
xchg
push
and
aas
shl
movs
(bad)
and
ja
jnp
mov
in
ins
adc
popw
xchg
pusha
push
nop
adc
pop
sbb
cdq
in
mov
add
fdiv
adc
sub
lea
call
mov
loop
fsubr
pop
or
inc
cli
and
clc
inc
mov
jae
imul
iret
stos
adc
retf
jae
aad
xor
lahf
xchg
in
mov
cdq
(bad)
pushf
aaa
(bad)
sub
cmp
push
xchg
(bad)
jmp
(bad)
pop
cmps
popf
ja
sub
jno
scas
out
fs
pop
ds
mov
mov
outs
dec
xor
gs
push
dec
dec
lahf
push
push
and
xchg
xchg
js
pop
movs
adc
cs
jns
push
data16
mov
loop
xchg
or
mov
mov
jp
jns
iret
lock
(bad)
xor
daa
outs
xor
nop
jmp
adc
pusha
fwait
cli
outs
adc
(bad)
outs
jmp
jae
fidivr
push
sub
les
xor
lock
mov
adc
outs
push
retf
cmp
cmp
shl
call
fwait
add
mov
sub
mov
popf
stos
pop
or
aad
imul
imul
mov
jl
add
enter
xchg
jmp
js
inc
pop
xchg
jno
rol
xor
repz
int
ret
jge
(bad)
fdivr
cmp
or
in
push
push
int3
push
fs
xchg
pop
bound
scas
jecxz
jmp
cmp
lods
mov
(bad)
cmps
jl
dec
(bad)
sub
gs
outs
je
push
(bad)
in
inc
jo
in
mov
jbe
cmp
cmp
sbb
outs
xor
xchg
enter
mov
inc
dec
sub
cmps
mov
dec
hlt
outs
inc
and
xchg
(bad)
adc
pop
(bad)
adc
jmp
xchg
pop
fwait
aas
inc
push
and
ins
cmp
inc
mov
aaa
bound
lods
in
cmp
push
mov
jno
mov
and
sub
call
adc
stos
rcr
in
sbb
(bad)
jnp
aad
gs
adc
xor
bound
aad
std
cli
and
call
sub
or
cmp
sub
and
jg
fwait
jecxz
adc
fdiv
popfw
fwait
lods
(bad)
sub
or
ds
sbb
sub
mov
sar
ror
and
in
pop
mov
fcomp
out
xchg
es
add
mov
sahf
bound
pushf
add
mov
sub
pop
mov
loop
dec
jne
ret
out
jnp
pop
fs
sub
arpl
xchg
and
xchg
es
dec
stos
addr16
fld
std
inc
push
sbb
ja
xor
jge
dec
fs
jo
push
fcom
out
idiv
cmc
pop
ins
fadd
daa
sub
jo
in
jne
jo
int
imul
push
sub
lods
in
mov
mov
outs
in
sti
fwait
push
inc
dec
xor
sar
imul
aaa
cmps
xchg
pop
dec
test
js
jmp
jbe
push
sub
adc
mov
jmp
sub
pop
jno
(bad)
shl
call
mov
push
and
adc
js
pop
push
dec
rcl
(bad)
aad
push
lods
jo
mov
sbb
mov
(bad)
sub
fld
jbe
inc
repnz
or
fld
sub
mov
pop
stc
shr
xchg
xor
dec
mov
pop
push
sub
xor
push
stos
stc
sub
and
dec
sbb
pop
mov
jecxz
ret
or
jle
jcxz
dec
xor
dec
sub
cmp
movs
mov
lods
mov
pop
dec
push
mov
mov
inc
and
or
retf
in
xchg
mov
and
(bad)
movs
push
stos
mov
lods
jo
sub
add
jbe
add
(bad)
rcl
js
fnstenv
scas
push
cmps
imul
xchg
inc
or
mov
sub
inc
or
dec
mov
mov
push
add
or
arpl
cmc
out
out
sbb
(bad)
(bad)
push
popa
and
xor
pop
outs
neg
and
and
mov
xchg
out
mov
mov
mov
inc
push
test
jmp
or
mov
lds
cs
jnp
adc
mov
push
fcom
sbb
in
stos
lea
cs
sbb
mov
mov
xchg
cmp
imul
out
bound
mov
imul
test
xchg
fwait
imul
test
and
cwde
idiv
cdq
mov
cmp
jge
fwait
popa
daa
lods
cmps
arpl
scas
sbb
push
mov
mov
add
mov
jnp
inc
and
(bad)
cmps
cmp
lods
mov
push
mov
mov
xlat
enter
stos
loopne
movs
in
dec
jle
cmp
ret
test
stos
mov
mov
sub
scas
int3
imul
inc
lahf
(bad)
jb
stos
xor
pop
mov
push
xchg
pusha
push
mov
sub
push
xchg
in
add
xchg
outs
ror
(bad)
mov
add
aad
fisub
jp
rol
mov
jbe
movs
cs
test
mov
ja
popf
(bad)
cmps
scas
jb
into
loop
dec
cmp
sbb
in
jg
push
or
mov
popa
ret
jge
jl
test
inc
jg
adc
imul
jno
push
ret
cld
and
ja
(bad)
xor
jno
sbb
xchg
inc
xor
cmc
lods
push
popa
mov
mov
leave
cmps
xlat
dec
ror
sbb
mov
sbb
ins
iret
jg
mov
sub
xlat
idiv
js
jno
fs
cmps
fistp
pop
mov
push
fcom
scas
and
push
push
add
imul
pop
fild
stos
mov
sub
(bad)
daa
pop
outs
fist
sub
pop
ds
dec
mov
out
pop
lods
out
adc
pop
or
xor
out
(bad)
stos
iret
inc
ins
mov
sub
cmps
push
add
push
mov
ror
cmps
mov
test
ja
movs
sub
xor
mov
test
sbb
cs
jp
iret
cmp
pop
jnp
push
pop
shl
xchg
ss
xchg
xchg
dec
mov
inc
sbb
in
int3
inc
aad
pop
int3
xchg
aas
sbb
or
dec
sub
out
jg
shl
push
xor
adc
popf
sub
jo
cwde
dec
mov
mov
outs
jb
cmc
test
ret
push
dec
pop
out
out
ds
pop
mov
jmp
test
lock
mov
dec
sub
aam
ss
cmp
jo
jno
xor
dec
stc
mov
rol
xor
or
mov
cli
je
sar
cmc
(bad)
and
xchg
xchg
mov
in
jl
pusha
pop
fsub
sub
push
stos
mov
in
cmp
cmp
jmp
pop
mov
clc
sbb
mov
or
push
cmp
imul
push
rol
movs
and
loopne
cld
mov
test
clc
pop
mov
aaa
sub
dec
movs
push
aaa
into
outs
xchg
rcr
jmp
std
int
lods
jae
stc
pushf
fcom
aas
and
push
mov
add
cmp
pop
add
push
dec
ins
mov
xchg
iret
jecxz
outs
push
pop
dec
aad
loop
sub
or
lea
mov
sbb
pop
ret
adc
test
pushf
jmp
aam
mov
push
sub
arpl
in
lods
stos
mov
push
es
loope
sub
in
jge
pop
ds
fisttp
sub
addr16
lods
xchg
and
jmp
ins
mov
cmp
dec
fs
loopne
xchg
(bad)
mov
sahf
jle
xor
adc
inc
ficom
shl
scas
ret
shl
(bad)
lods
jno
mov
and
xchg
xchg
outs
aaa
sar
sbb
ins
or
fidivr
mov
pop
push
xor
fst
(bad)
movs
ret
test
in
xchg
fimul
mov
mov
mov
jns
call
test
mov
fcom
in
or
push
sbb
xchg
rcl
imul
repz
xlat
repnz
ins
ins
hlt
out
push
fcmovnu
sar
stos
jl
ret
(bad)
and
inc
int
or
add
and
or
repz
rcr
inc
(bad)
not
imul
fnstenv
adc
push
xor
mov
xchg
imul
rcr
leave
scas
movs
fldcw
es
push
jmp
stc
(bad)
adc
dec
push
fisub
movs
xchg
sbb
pusha
in
scas
jns
sbb
xchg
push
jno
pop
ins
test
retf
push
test
mov
jbe
in
mov
daa
dec
outs
cmps
stos
xchg
mov
movs
nop
jno
xchg
mov
jmp
das
adc
push
mov
sub
dec
aas
mov
jecxz
push
mov
jl
inc
fadd
dec
mov
and
enter
mov
add
cdq
sti
iret
es
sub
mov
iret
push
pop
sar
std
test
push
mov
push
dec
shl
and
xchg
cs
xor
adc
ror
add
inc
mov
aad
adc
jbe
or
mov
mov
js
xchg
mov
arpl
test
arpl
mov
in
cmps
pop
jmp
ret
jnp
dec
push
xor
sub
fcomp
bound
mov
leave
adc
jg
jmp
int3
sbb
or
mov
inc
stos
sub
xor
xchg
out
xor
ins
int3
push
cld
dec
inc
jg
push
mov
(bad)
dec
das
aas
mov
mov
lahf
test
lds
pop
jb
jno
aas
add
fimul
arpl
push
dec
xchg
sub
inc
movs
mov
mov
loop
(bad)
pop
iret
sub
in
sub
inc
add
add
pop
scas
mov
loop
into
xchg
aad
cmp
sbb
imul
and
push
and
sti
aam
fucomi
jg
cmp
sbb
mov
aam
retf
and
ret
cmps
inc
cmps
pop
or
sbb
inc
add
ficomp
adc
lock
or
imul
pop
jnp
call
sub
popa
mov
sbb
pop
xchg
push
mov
jo
shr
test
gs
xchg
std
inc
sbb
fadd
lods
jecxz
cli
retf
cmp
scas
ins
shr
and
sahf
dec
xor
aad
imul
mov
aam
adc
dec
cmp
mov
mov
mov
mov
enter
lods
lds
pop
or
and
dec
add
gs
ret
mov
lock
leave
jmp
(bad)
ins
and
or
vmovntps
mov
mov
rcl
mov
shl
and
aas
lahf
inc
movs
movs
ret
cmps
stc
and
imul
fs
fld
les
adc
cmp
bound
int
loopne
ins
sbb
ja
pusha
cmp
jns
cmps
arpl
arpl
jno
out
and
jae
cmp
xchg
xchg
aad
pop
jl
dec
fwait
mov
idiv
(bad)
fs
test
je
sbb
adc
sbb
stos
push
xor
scas
add
in
(bad)
out
jmp
push
cld
inc
out
pop
fiadd
mov
popf
xor
jmp
out
jne
movs
mov
retf
and
adc
mov
ret
mov
mov
fbld
adc
pop
into
jmp
je
daa
das
and
stos
push
retf
stos
test
fnsave
pop
fidivr
jb
mov
inc
inc
into
adc
call
aad
and
add
xchg
shl
dec
sub
mov
fst
cmp
js
rcl
int3
jmp
fsubr
add
pop
and
scas
movs
dec
loopne
stos
mov
sbb
dec
or
mov
or
mov
sar
addr16
clc
xchg
mov
push
imul
ss
mov
sub
adc
lods
aad
out
xchg
outs
nop
jbe
movs
mov
xchg
or
mov
imul
xor
test
retf
cli
aas
and
out
xchg
fwait
sub
ins
xchg
test
mov
xchg
sub
cmp
fucom
xchg
sti
pop
inc
pop
sbb
ins
test
(bad)
mov
cmps
xor
mov
mov
xchg
ds
pop
cmp
daa
(bad)
sbb
es
dec
loop
push
xor
mov
fs
and
dec
sbb
or
ret
dec
ins
pop
mov
add
imul
scas
jae
sub
and
sub
jg
xchg
jne
loope
data16
or
mov
cmp
inc
inc
enter
out
bound
xchg
jl
mov
dec
(bad)
cmps
iret
sub
and
(bad)
sub
and
jecxz
jae
cs
(bad)
movs
lods
xchg
adc
adc
int
arpl
pop
aad
cmp
(bad)
jmp
mov
and
mov
movs
push
stos
ror
(bad)
add
xor
nop
inc
mov
cmp
cmp
jnp
lods
mov
lds
add
jge
sbb
xchg
jle
mov
sti
xchg
or
js
sub
sar
jg
jl
add
sub
loopne
sbb
iret
jae
jb
test
aad
mov
scas
jmp
mov
enter
sbb
mov
push
dec
in
ja
in
dec
mov
pop
ins
bound
push
leave
es
mov
add
sbb
and
cld
mov
mov
xor
lods
das
pop
imul
out
mov
jno
scas
jbe
jne
dec
cmp
test
imul
jge
pop
aaa
(bad)
arpl
mov
iret
xchg
xchg
cmps
push
xchg
xor
pop
test
sbb
movs
(bad)
pop
pop
adc
frstor
cmp
mov
mov
inc
inc
loop
mov
and
dec
cmp
mov
cdq
daa
adc
fisttp
scas
pop
das
in
push
xor
test
jp
lahf
daa
mov
jp
mov
sub
in
rcr
cdq
xchg
cmps
lods
sti
daa
adc
xchg
cmp
(bad)
fisubr
cmp
xchg
sbb
jg
stos
jb
mov
cld
dec
add
in
call
cmps
sub
mov
jae
addr16
mov
xchg
in
es
add
dec
jecxz
push
repnz
pop
cwde
xchg
jmp
jne
lea
or
and
xor
jmp
clc
lods
add
js
(bad)
add
mov
jns
mov
test
cmps
aas
retf
jnp
jmp
or
mov
mov
lahf
push
(bad)
das
pop
scas
xor
mov
inc
in
mov
dec
sub
push
ror
out
scas
mov
fwait
mov
sar
imul
xchg
fs
(bad)
test
pop
inc
pusha
jle
daa
pop
(bad)
mov
cmp
std
xor
jge
stos
mov
xchg
dec
xchg
dec
mov
stos
xchg
outs
hlt
es
mov
mov
cmps
cmps
sub
mov
loopne
and
fstp
pop
(bad)
arpl
mov
aas
mov
movs
and
cmps
add
xchg
mov
xchg
(bad)
mov
push
mov
(bad)
mov
adc
arpl
sub
adc
sub
ds
pop
jb
adc
bound
push
(bad)
mov
and
loope
xchg
mov
mov
cmps
fcom
jp
data16
outs
ja
shl
adc
stos
jl
(bad)
jmp
and
mov
push
inc
sar
xor
and
adc
sahf
adc
movs
mov
outs
add
xchg
push
adc
les
repnz
jne
xchg
push
shr
cld
lods
and
adc
adc
es
mov
pop
clc
jb
and
mov
inc
iret
xor
data16
mov
cmp
jl
add
leave
sti
dec
cld
mov
fild
stos
cmp
ret
cwde
mov
add
fucom
mov
inc
and
push
stos
js
push
pop
js
inc
ins
in
dec
ret
(bad)
sbb
(bad)
mov
idiv
test
lods
in
gs
ss
mov
fcom
es
push
(bad)
jg
addr16
mov
cmp
es
leave
or
test
lock
daa
outs
or
pop
push
xchg
sahf
push
sub
ja
push
cld
pusha
adc
push
jo
outs
mov
ror
mov
sub
test
in
mov
pop
xchg
xchg
fst
jle
xor
in
add
mov
int3
int
fiadd
leave
mov
mov
sbb
pop
sbb
lock
lds
sub
sub
sub
outs
test
out
cmps
in
lods
cmp
pop
bound
or
mov
xor
pop
jbe
mov
mov
jge
ror
cmp
mov
push
leave
iret
lea
and
js
xchg
dec
xchg
or
into
aaa
arpl
mov
cmp
jp
or
jmp
imul
movs
adc
or
mov
out
jns
pop
sar
scas
arpl
dec
(bad)
das
mov
adc
push
adc
iret
mov
and
jg
ja
stc
sub
dec
dec
popa
scas
sbb
mov
lds
loop
dec
fstp
aam
fsub
mov
call
add
lock
pusha
cmp
xor
pop
mov
cmps
cmp
imul
jg
es
and
cmp
push
mov
iret
mov
cmp
les
pop
mov
fld
mov
and
dec
shr
dec
popa
pushf
lods
mov
test
ret
xchg
adc
mov
out
xchg
mov
repz
fs
das
cli
xchg
pop
push
add
xor
rcl
sub
and
mov
mov
or
xor
dec
cmp
mov
fcom
adc
ret
mov
push
jo
mov
data16
cmps
sub
adc
aad
addr16
adc
adc
(bad)
pop
cmc
jne
push
repz
xchg
sar
fild
lahf
sbb
jne
dec
ja
xor
lods
or
cs
retf
rcr
jbe
xchg
inc
fwait
and
mov
mov
ror
xchg
es
shl
fbstp
sti
cmp
(bad)
mov
mov
mov
fwait
ja
jmp
inc
stos
call
dec
inc
mov
cmp
adc
mov
out
shl
icebp
mov
xor
clc
mov
push
xor
jg
stos
ja
loope
jns
and
int3
repnz
jg
jge
sbb
mov
aaa
jb
ins
inc
xchg
xchg
mov
xchg
jle
retf
in
cwde
stc
cmp
popf
sub
hlt
pop
aas
sub
sbb
shr
mov
loopne
cmp
mov
cmp
mov
cmps
ret
daa
pop
mov
daa
mov
adc
mov
pop
push
movs
push
mov
addr16
pop
cwde
jne
mov
inc
call
jle
call
sub
pop
imul
xchg
pop
push
xchg
and
popa
sbb
jg
dec
test
call
lds
and
jmp
cmp
fcomp
adc
dec
push
movs
xchg
fs
cmp
cmc
mov
inc
sub
aas
out
ja
jae
data16
stc
es
dec
mov
rcr
jns
jle
mov
jecxz
mov
add
out
js
retf
imul
retf
sub
inc
xchg
add
clc
pop
and
pop
mov
and
out
test
or
xchg
stos
fs
sub
xchg
push
pop
pop
scas
cmps
das
jp
xchg
mov
pop
mov
pusha
call
pop
scas
sbb
pop
stos
adc
inc
add
dec
jl
(bad)
push
inc
dec
mov
add
jae
(bad)
fs
outs
inc
pop
inc
in
mov
cmp
lods
js
mov
mov
jl
push
lods
mov
mov
add
out
mov
pop
mov
push
jae
sbb
push
in
stos
inc
das
cmp
lods
in
xor
push
ret
lods
das
or
pop
mov
push
imul
push
call
xchg
mov
push
arpl
ffreep
sub
stos
dec
push
leave
enter
and
idiv
dec
cmps
jo
fs
xchg
retf
xchg
cdq
sbb
cmc
and
add
sbb
std
mov
mov
movs
scas
pop
movs
cmp
fnstcw
pop
sti
mov
pop
mov
movsx
push
dec
iret
test
iret
mov
cmp
lods
pop
daa
push
(bad)
and
movs
sub
in
add
pop
or
cmps
lock
xchg
dec
mov
sub
mov
pop
sub
push
add
jg
loop
mov
mov
and
jecxz
mov
jnp
daa
sub
adc
arpl
dec
(bad)
ds
jo
dec
stos
mov
mov
(bad)
icebp
mov
jecxz
js
sub
outs
imul
test
xor
jl
stos
mov
test
daa
mov
shl
jne
out
xchg
(bad)
pop
pop
mov
jg
js
add
mov
sbb
repnz
imul
pop
mov
ja
cld
ret
mov
push
jne
test
jge
(bad)
cli
dec
mov
add
sbb
(bad)
jbe
push
and
jp
or
jge
jl
aaa
ins
outs
test
cmp
add
mov
mov
xchg
fisttp
jmp
jo
adc
int3
gs
adc
lods
call
fs
test
adc
sar
cmc
cmp
je
test
in
mov
scas
cmp
sbb
ret
push
mov
xor
add
es
clc
in
xchg
sahf
(bad)
test
shr
jo
cld
mov
dec
test
mov
mov
sub
sub
(bad)
not
rcl
inc
xor
inc
lahf
xlat
jmp
(bad)
cmps
lods
shr
scas
outs
call
add
in
ja
js
sti
mov
cmp
cli
ror
inc
xlat
push
or
aam
push
mov
outs
cmps
scas
jge
jg
or
iret
and
or
jne
mov
repnz
movs
inc
cmp
mov
test
dec
cmp
in
xchg
das
cmp
mov
xchg
les
sub
push
stos
sqrtps
jno
mov
sub
pop
lods
pop
mov
dec
mov
fisttp
div
(bad)
add
sbb
jge
jbe
pushf
fcomp
inc
push
leave
mov
mov
add
sbb
or
mov
cmp
xchg
arpl
pop
mov
add
addr16
sub
sub
icebp
or
dec
data16
jmp
es
and
out
xor
loop
mov
xlat
mov
cmps
pop
cld
imul
es
movs
mov
scas
jnp
lods
in
aam
rcl
mov
test
(bad)
sti
pop
sbb
and
shl
scas
mov
mov
(bad)
bound
div
jl
jbe
add
arpl
jae
mov
aam
clc
scas
jmp
dec
sbb
retf
pop
iret
lea
jo
pop
jns
and
jbe
cmps
jo
or
sub
mov
pop
cmp
jbe
jbe
adc
xor
retf
sbb
jne
test
mov
xor
jnp
cs
mov
in
fdivrp
cmp
mov
mov
jmp
gs
(bad)
push
test
call
mov
and
xchg
das
clc
sub
adc
add
and
mov
xchg
jmp
mov
div
mov
sahf
sbb
pop
mov
xchg
cdq
fs
pop
dec
cwde
pop
out
jmp
and
test
jnp
sar
pop
inc
(bad)
inc
imul
dec
cmc
sub
jbe
and
mov
mov
jno
sub
mov
adc
movs
mov
add
pextrw
mov
popf
mov
cmp
add
test
pop
test
jae
lods
fimul
mov
stos
aam
adc
les
sbb
test
sar
mov
adc
cld
adc
mov
popa
(bad)
fimul
les
outs
add
lds
call
sub
lods
icebp
daa
pop
mov
or
sub
push
dec
arpl
push
aaa
ins
popa
push
cwde
pop
mov
mov
ret
or
xchg
fild
jnp
inc
icebp
in
(bad)
outs
inc
mov
jb
add
adc
dec
movs
mov
rcr
test
push
inc
es
test
into
jle
push
jbe
stos
push
clc
(bad)
je
cmp
sbb
cmp
and
pusha
jb
lds
xchg
sbb
lahf
mov
call
xchg
adc
add
(bad)
les
out
and
add
xor
in
shl
cmp
cs
lds
(bad)
mov
cs
jmp
mov
cld
sbb
lds
jno
imul
iret
out
push
jae
sub
jmp
stos
shr
or
dec
cli
ds
pusha
mov
aas
(bad)
mov
loop
(bad)
mov
add
dec
mov
ret
fwait
pop
setbe
aas
and
jb
xor
xchg
sbb
mul
rcr
mov
xchg
jne
cmp
fs
ins
or
and
popa
mov
(bad)
fld
gs
rcr
push
call
cmp
fstp
cmp
ret
jbe
xchg
and
lock
pushf
mov
addr16
int3
push
push
cmp
cdq
jbe
jbe
nop
xchg
adc
or
popa
test
iret
pop
xor
cmp
cmp
cmp
or
sahf
xchg
xchg
jg
call
stos
sbb
sub
int
add
(bad)
dec
fwait
xchg
js
mov
dec
adc
adc
mov
into
lods
call
mov
mov
pop
pusha
pop
inc
fsubr
cmps
scas
aam
push
fmul
iret
mov
or
mov
in
adc
cmps
test
push
jge
xor
stos
xchg
leave
das
stc
jge
mov
sahf
lods
iret
inc
xchg
jne
fnstenvw
loope
jne
aas
inc
mov
cld
push
inc
inc
xchg
fidivr
cmp
mov
cmps
rcr
cmp
aad
mov
imul
xchg
add
xchg
ret
in
(bad)
xchg
iret
rol
push
sub
(bad)
mov
xchg
cmps
std
(bad)
add
sbb
xchg
popf
stos
mov
mov
and
cmp
imul
and
mov
arpl
push
shl
adc
lahf
test
test
mov
int3
and
xchg
jae
fnstcw
xchg
imul
call
mov
mov
fdivr
mov
iret
sbb
popa
mov
ja
jmp
mov
popa
xchg
cld
mov
pop
sub
jp
cld
dec
push
mov
xchg
jg
push
loope
xor
in
sub
js
push
dec
jg
jnp
scas
(bad)
mov
push
pop
mov
push
out
mov
mov
ins
mov
mov
mov
or
mov
inc
lods
add
fldcw
(bad)
aas
add
or
sbb
aas
mov
popf
(bad)
lahf
mov
add
daa
aam
and
ins
enter
in
mov
dec
xchg
sub
je
dec
in
sbb
stos
xchg
out
pop
ins
push
dec
sbb
jb
mov
jo
adc
jp
lds
mov
stc
xchg
fnstsw
shr
sbb
sub
xor
xchg
es
jle
test
inc
mov
mov
push
ret
(bad)
popa
shl
cmp
xor
lds
pop
outs
cmp
sbb
fidiv
test
cmp
das
in
scas
jno
aas
(bad)
and
scas
mov
and
pop
sbb
jmp
xchg
inc
jge
das
fwait
mov
mov
std
les
ja
pushf
addr16
add
lods
movs
sub
mov
cmps
mov
cmp
(bad)
mov
cmp
fnsave
pop
push
mov
mov
lods
icebp
in
adc
bswap
movs
push
rol
sar
mov
jns
xchg
fnstenv
lahf
das
mov
out
fistp
jg
and
cmp
aas
popa
dec
or
into
xchg
push
scas
pop
push
dec
mov
and
add
loop
mov
add
sub
pop
mov
vmovd
pop
aam
lods
and
cmp
cmp
aaa
inc
sub
outs
aas
jle
pop
adc
dec
shr
push
lock
mov
sbb
and
pop
icebp
cmp
adc
adc
cmps
cmp
(bad)
mov
pop
lea
mov
in
outs
stos
push
movs
imul
retf
push
cmp
jae
sbb
inc
call
or
mov
gs
lods
push
pop
and
add
cmp
mov
lods
mov
cmps
jle
or
push
cmps
movs
lods
ins
jle
test
daa
shl
mov
mov
sahf
fdivr
xchg
test
inc
dec
jne
stc
idiv
mov
jge
push
dec
fnop
and
mov
ins
ret
cmp
jecxz
retf
dec
fwait
bound
shl
xlat
jl
scas
mov
cmp
sar
(bad)
hlt
jbe
push
ds
dec
fdiv
(bad)
cld
dec
scas
mov
or
fdivr
in
ds
push
and
rep
xor
imul
dec
das
adc
jne
jbe
fldenv
xchg
sub
aad
jl
adc
vprotd
sar
shl
popa
jmp
test
icebp
daa
xor
dec
cwde
pop
jno
sub
mov
jnp
xchg
push
retf
mov
popa
or
lods
jl
ds
jo
adc
dec
and
test
jns
mov
jne
test
jo
shl
es
out
pop
mov
xlat
arpl
mov
mov
mov
jae
stos
jns
inc
popa
pop
out
iret
js
shr
cmp
mov
xchg
dec
es
fiadd
nop
or
outs
bound
frstor
pop
(bad)
dec
push
mov
sub
fdiv
lock
xor
arpl
scas
ins
lods
push
jecxz
aam
push
icebp
cs
lea
push
mov
pusha
cmp
cmc
lock
xchg
test
fcomi
fcom
or
xor
mov
jl
aaa
xchg
mov
cmp
xor
mov
nop
lahf
inc
mov
imul
jg
xchg
cmc
jmp
mov
shr
xchg
inc
ss
(bad)
cmp
fsubr
mov
retf
test
pop
daa
or
cmp
xor
mov
xchg
dec
mov
rcl
jmp
cmps
aaa
add
scas
ins
mov
jge
sbb
mov
pop
les
adc
xchg
add
pop
add
cmc
imul
inc
pop
fdiv
push
jne
(bad)
mov
sub
shr
(bad)
jle
scas
outs
lods
sahf
in
les
sub
mov
mov
pop
iret
sbb
mov
and
es
ins
sub
pop
out
add
jno
push
imul
adc
retf
scas
sub
cli
fsubr
outs
jg
sub
xor
out
lods
jl
out
cmp
loop
rcr
out
pop
dec
dec
xor
sbb
mov
ret
pop
xchg
mov
std
adc
mov
jae
pop
push
cmp
push
mov
dec
aaa
pop
sbb
std
movs
and
in
bound
popa
add
mov
retf
xchg
add
aam
fs
mov
sub
mov
sbb
js
int3
pop
pop
sbb
in
push
imul
stos
(bad)
in
shr
rol
jnp
sbb
aam
retf
in
retf
stos
add
sbb
sbb
shl
mov
js
jg
je
(bad)
push
jae
dec
xchg
fisttp
jge
jle
pop
test
cdq
cmp
and
cli
xor
lahf
jo
in
leave
in
int
cmps
out
dec
sub
and
lds
stos
mov
and
pop
jp
mov
dec
cwde
jo
les
std
js
lock
icebp
aas
nop
mov
ret
dec
inc
mov
inc
sub
(bad)
lods
int
mov
in
pop
mov
lea
popa
push
mov
aam
enter
addr16
daa
sub
bound
push
(bad)
stos
stos
push
and
fdivr
(bad)
mov
inc
fs
je
and
aam
jle
shl
cmps
mov
pop
mov
sub
xchg
jne
xchg
js
jle
mov
dec
daa
mov
or
add
clc
adc
xor
fwait
or
dec
stos
mov
in
push
cdq
aam
xchg
test
sub
mov
mov
leave
dec
xchg
mov
out
dec
or
and
fld
push
scas
xor
dec
jbe
das
adc
out
push
int
ret
jmp
shr
ficom
fsubp
popf
push
fs
fnstenv
outs
js
sub
xor
out
xchg
jecxz
push
mov
add
inc
sub
xchg
jo
stos
lahf
push
adc
ret
adc
pop
movs
loopne
sub
gs
ss
mov
mov
xor
sub
es
inc
jecxz
xor
sub
enter
loop
sbb
arpl
cmp
mov
jg
jno
or
fist
daa
movs
mov
stos
jecxz
les
rol
cld
stos
into
scas
lods
stos
js
sbb
pop
ds
sbb
ja
das
sub
mov
mov
dec
clc
lahf
ins
addr16
cmp
jecxz
daa
cli
pop
dec
mov
fistp
inc
aad
das
and
xchg
outs
rol
pop
dec
and
mov
aad
mov
div
mov
mov
cmps
mov
bound
mul
aaa
or
stos
scas
stos
es
pop
pop
mov
push
and
xchg
mov
pop
mov
adc
popa
(bad)
daa
mov
sti
outs
pop
ins
bound
xor
xlat
add
arpl
mov
pop
adc
lods
(bad)
pop
stos
lods
rol
xlat
jbe
and
call
jnp
inc
mov
ret
jle
jns
push
ret
sbb
mov
shr
xchg
mov
cwde
cmp
or
mov
mov
inc
xor
mov
pop
adc
(bad)
test
push
lods
push
mov
rcl
mov
adc
aad
dec
push
sar
mov
fldcw
mov
push
(bad)
and
pop
xchg
fisubr
inc
gs
cmp
sub
push
push
xor
lds
ss
fcom
sahf
cmps
push
mov
fwait
clc
jns
pop
aas
jne
mov
out
add
ss
pop
and
mov
sub
mov
jle
mov
fsubr
lods
stos
xchg
int
mov
inc
stos
mov
aam
xchg
push
jp
pop
sub
lods
inc
push
pop
xchg
mov
cwde
mov
(bad)
ret
and
jl
jg
xchg
nop
mov
push
addr16
adc
pop
mov
sbb
retf
jno
jmp
push
(bad)
out
es
dec
and
cld
dec
aad
ins
push
test
clc
shl
popf
mov
mov
fnstcw
retf
cmps
dec
es
(bad)
stos
xor
push
stc
loopne
nop
iret
leave
cli
inc
jmp
out
lods
cmp
mov
lods
jle
(bad)
sbb
add
popa
cmc
int
push
xchg
cmp
xchg
xlat
mov
fwait
lods
pushf
std
addr16
pop
or
shl
jecxz
xchg
or
or
pop
dec
mov
cmps
mov
stos
push
mov
or
shl
mov
popa
jmp
into
cmp
sbb
call
xchg
jb
lahf
je
add
sub
ror
loope
test
sti
jle
jmp
xor
js
fcom
in
sbb
outs
test
jmp
sbb
and
jp
jns
or
ret
push
mov
arpl
push
ret
cmps
call
sub
mov
push
in
clc
out
inc
push
or
pop
imul
das
and
jle
mov
sub
ja
jns
pusha
mov
xor
push
sbb
jno
adc
push
scas
pop
and
mov
dec
(bad)
daa
cmp
or
lods
lods
lods
loope
mov
out
xchg
jmp
xchg
sti
xchg
stc
stos
mov
pop
cmp
cmp
mov
xlat
popa
repnz
mov
fnsave
add
popf
int3
cmovs
arpl
or
xchg
cli
mov
push
or
mov
mov
add
dec
jno
clc
pop
lea
jmp
and
cmp
adc
push
jae
mov
popf
outs
mov
mov
ror
push
lods
xchg
scas
adc
cwde
sbb
mov
mov
stos
mov
lods
call
cmp
pop
dec
and
pop
cmps
test
jecxz
jo
mov
inc
adc
push
js
es
mov
lock
push
push
ret
mov
mov
sub
xchg
rcl
in
xchg
sub
movs
gs
cmps
xchg
jae
sub
addr16
mov
push
pop
mov
mov
fiadd
dec
dec
mov
push
push
arpl
xor
sbb
leave
push
inc
xchg
pop
test
fcom
sbb
outs
and
sub
sub
sub
cmps
hlt
cmp
stos
or
jnp
inc
sbb
movs
icebp
push
daa
stos
mov
push
dec
addr16
fs
imul
sub
push
or
lea
jae
sub
add
(bad)
pop
sub
test
xchg
mov
aad
in
inc
test
xchg
push
add
or
out
out
stos
xor
and
lods
xor
xchg
arpl
out
inc
retf
pushf
sar
pop
sub
jns
ins
(bad)
and
pop
mov
push
xchg
mov
inc
mov
fs
dec
cli
fs
cli
stos
and
cld
pop
sbb
pop
fisttp
(bad)
cmp
aad
push
aaa
int
sbb
mov
jmp
add
pop
sub
pop
adc
dec
push
mov
xor
movs
xlat
jne
cs
nop
shl
xor
and
mov
ds
js
(bad)
jle
test
lods
sti
jl
mov
push
jmp
mov
lea
push
and
cmps
fst
idiv
dec
mov
mov
mov
jns
arpl
inc
mov
jns
mov
mov
adc
mov
push
sbb
lods
xchg
out
mov
arpl
mul
push
sub
movs
xchg
popf
bound
mov
pop
xchg
daa
into
xor
lods
jmp
lahf
loopne
adc
mov
mov
ret
mov
stos
mov
bnd
js
add
inc
popf
jl
or
inc
ror
mov
jge
in
push
xor
rcr
push
out
clc
dec
hlt
jnp
mov
xor
or
adc
xor
mov
xchg
clc
jg
and
je
mov
retf
add
jo
jnp
fdivr
push
mov
pop
push
mov
shl
je
or
sub
addr16
addr16
(bad)
or
mov
inc
jo
mov
jg
mov
pushf
jge
les
fimul
cmp
dec
fidivr
pop
jmp
xor
xchg
movs
sub
popa
or
xchg
fidivr
push
ss
cmp
add
lods
stos
nop
mov
(bad)
jae
and
retf
jne
jge
movs
ins
sar
imul
jge
add
xchg
adc
arpl
adc
mov
cmc
mov
mov
aam
or
out
mov
xor
popa
pop
push
pop
xchg
(bad)
jmp
sbb
pop
dec
sbb
enter
mov
inc
cmp
rcr
int
xchg
popf
aad
arpl
aaa
mov
pop
shl
pop
movs
and
mov
mov
mov
cmps
jo
sbb
or
popf
out
out
out
push
xchg
mov
out
xor
scas
sub
hlt
loope
jle
jmp
test
mov
jo
aaa
xor
sti
outs
sbb
stc
mov
mov
or
fimul
push
cld
xchg
or
adc
add
and
scas
jp
jg
mov
(bad)
mov
stc
pop
sub
dec
jl
ins
fst
mov
push
fwait
in
pop
mov
loopne
mov
and
mov
push
xchg
add
mov
mov
mov
les
dec
sub
fdiv
fwait
and
stos
xchg
fs
push
rol
retf
cmp
dec
sbb
mov
fiadd
fwait
std
mov
repnz
adc
push
(bad)
or
cmp
retf
movs
cmps
jl
dec
out
mov
mov
mov
mov
mov
pusha
cmps
lock
lock
outs
jns
int3
aas
ret
xchg
adc
pop
mov
lahf
enter
sub
(bad)
push
cmps
and
aaa
cmc
fisub
pop
aam
inc
fs
sub
(bad)
mov
push
mov
sub
cwde
loopne
cs
fild
jne
cmp
fucomi
imul
xchg
sub
sub
inc
out
mov
popf
adc
sub
mov
xchg
pop
aam
xor
scas
pushf
lods
std
add
mov
push
fwait
(bad)
outs
ret
in
aad
sbb
mov
add
adc
add
cmp
sahf
and
xchg
add
mov
mov
mov
cld
pop
cmp
lods
call
jmp
scas
sub
pop
mov
ja
xor
js
ret
jg
mov
mov
mov
ins
retw
cmps
push
or
lock
aad
or
adc
adc
jg
imul
stos
imul
in
and
inc
pop
iret
movs
mov
dec
jae
cmp
jno
pushf
imul
div
sub
ja
std
pop
mov
cmp
bound
inc
jp
and
(bad)
fsub
cmps
cmc
or
sub
fst
and
ins
xchg
jg
(bad)
pop
fs
in
stos
adc
mov
mov
popa
push
jmp
imul
in
shl
popa
iret
das
mov
ds
cmp
xchg
cmp
imul
addr16
int
jmp
push
data16
or
in
loope
ins
jo
and
jle
nop
lods
in
jno
je
(bad)
cmp
popa
pop
iret
lahf
push
and
cli
or
xchg
jl
ja
(bad)
sar
pop
push
fs
loopne
push
enter
add
pop
aas
pushf
rcr
or
ret
enter
pusha
pusha
mov
dec
or
gs
retf
or
loop
push
pop
arpl
lods
cmp
cld
scas
es
jnp
ja
dec
std
gs
aas
xchg
inc
mov
pop
in
mov
int
xor
lds
pop
or
mov
scas
jg
loop
mov
lahf
(bad)
adc
push
shr
xchg
inc
fisttp
push
push
xchg
imul
dec
mov
loopne
push
xor
or
add
repnz
xchg
js
push
pop
into
(bad)
nop
rcl
jae
mov
push
jmp
sub
outs
lss
sub
test
sub
mov
add
js
inc
in
jg
sub
push
je
adc
in
lods
lods
adc
or
gs
(bad)
push
pop
and
pop
ds
ret
in
outs
out
rcl
adc
test
call
add
fnstcw
sbb
jae
jle
sbb
cmps
add
test
aas
mov
fsub
ret
cs
fwait
mov
popf
pop
gs
lahf
jg
mov
das
xor
mov
in
imul
jb
cmps
(bad)
pop
xchg
jmp
cli
jnp
add
fild
(bad)
mov
pop
sub
push
adc
mov
bound
push
clc
repnz
sti
mov
cmp
int
mov
test
adc
lahf
and
cmp
ins
or
lds
push
jno
or
pusha
test
mov
mov
mov
add
mov
call
or
xlat
aam
popa
cmps
xcrypt-ecb
cmps
int3
scas
push
movhps
imul
mov
cmps
fs
out
jbe
movs
test
pop
xchg
fs
pop
aas
ins
(bad)
adc
in
lods
rcr
aam
jne
mov
ds
mov
xor
xchg
xor
push
push
stc
inc
aad
mov
xor
nop
lods
pop
in
arpl
out
lahf
xchg
imul
mov
daa
cmps
lods
data16
call
retf
sahf
xchg
daa
jmp
std
stos
enter
mov
push
fs
aam
push
mov
fwait
movs
xchg
push
sub
pop
or
cmp
arpl
xor
mov
mov
and
cmps
add
ins
cld
sub
sbb
lahf
int3
leave
mov
inc
dec
dec
jmp
aaa
icebp
test
jo
ja
xchg
add
push
pushf
jg
pop
inc
inc
xchg
test
pop
pop
xchg
in
int
xchg
lods
fisttp
mov
fsub
sbb
xchg
dec
pusha
in
mov
cmp
rcr
sbb
addr16
add
xchg
stos
mov
pop
xchg
dec
movs
es
ins
mov
call
das
jle
pop
addr16
test
xchg
mov
mov
xchg
jmp
pop
pop
inc
clc
inc
out
lods
mov
sahf
out
push
xlat
addr16
add
mov
scas
mov
inc
xchg
mov
dec
(bad)
ror
stc
mov
jbe
pop
bound
repnz
push
and
imul
les
lds
repz
xchg
addr16
(bad)
lods
inc
jmp
rol
fst
xchg
mov
sub
jno
mov
leave
jg
mov
test
mov
out
xor
jle
outs
xchg
mov
outs
mov
cli
movlps
in
mov
mov
xchg
aam
push
stos
adc
and
cld
pushf
fwait
push
sub
xor
jp
lods
std
daa
cmc
movs
push
test
lods
(bad)
and
not
dec
mov
mov
xor
jnp
jl
mov
and
and
imul
mov
lea
rcr
mov
and
jge
mov
mov
sub
ins
stc
fsub
out
xchg
mov
pop
test
into
(bad)
mov
int
ret
popf
ins
xchg
test
adc
mul
fnstsw
jp
pop
ins
mov
sbb
xor
sbb
and
jg
push
push
mov
(bad)
and
xchg
inc
mov
jmp
jl
nop
outs
mov
mov
and
xlat
sub
outs
retf
scas
test
shl
(bad)
out
jae
ins
cmp
lds
rcl
ss
xchg
ins
pop
test
xor
lods
test
pushf
mov
mov
jmp
inc
add
jg
out
mov
inc
shl
dec
(bad)
arpl
out
test
mov
cmp
mov
pop
mov
sub
test
out
out
pop
mov
mov
add
aaa
pop
fwait
xchg
cmp
adc
mov
sbb
or
push
mov
jo
mov
das
mov
mov
mov
dec
icebp
jl
lods
xor
mov
mov
test
icebp
inc
jg
xor
sbb
mov
mov
jge
inc
mov
fwait
dec
cmp
jns
mov
movs
lods
cmps
cmps
cs
iret
dec
cmps
(bad)
icebp
and
imul
retf
cmps
test
rol
inc
jl
outs
sub
jp
in
and
cmp
dec
mov
inc
and
stos
test
mov
cmp
inc
xor
rol
jnp
push
arpl
stos
in
icebp
pop
xor
scas
inc
pop
loope
mov
push
cmc
popf
mov
and
int3
and
fiadd
pusha
mov
cmc
adc
movs
in
aaa
movs
arpl
call
xchg
mov
scas
mov
and
cli
mov
add
sbb
xchg
ds
xor
add
bound
call
iret
movs
sub
inc
cmp
dec
arpl
shl
lea
es
int
out
fwait
cmps
pop
dec
push
(bad)
imul
cli
mov
in
jns
cwde
mov
or
(bad)
xor
jno
mov
sub
idiv
sti
push
stos
push
cmp
lods
outs
xor
outs
test
stos
lods
mov
(bad)
test
fs
push
cmps
mov
int3
mov
inc
aas
mov
movs
les
test
repz
jge
mov
cdq
lahf
inc
rcr
xor
dec
and
mov
xor
or
mov
out
mov
add
push
sbb
mov
mov
adc
fwait
mov
mov
add
mov
lea
cmp
xor
ss
repz
in
cmp
cmp
mov
scas
sbb
movs
popf
neg
sti
push
mov
fwait
mov
cld
adc
or
jl
imul
dec
lock
add
jnp
daa
addr16
mov
or
sbb
sti
mov
clc
jmp
mov
mov
xchg
and
cli
lahf
(bad)
jmp
or
pop
inc
ins
and
sbb
inc
add
add
repnz
int
out
add
js
or
test
jo
mov
call
imul
cmp
cmp
dec
call
stos
mov
enter
push
mov
lahf
outs
fwait
mov
and
cmp
mov
jecxz
jg
adc
fsubr
in
xchg
(bad)
cmp
cwde
cmp
push
pop
push
inc
or
cmps
cmps
cmp
daa
scas
aas
lahf
xor
or
mov
jnp
test
inc
ret
mov
add
test
inc
push
pop
inc
(bad)
pop
sub
das
push
test
repz
lds
or
sub
and
(bad)
or
scas
xlat
rcl
mov
loope
mov
cmp
vucomisd
mov
pushf
(bad)
(bad)
mov
add
std
addr16
mov
jbe
mov
mov
arpl
fwait
mov
scas
mov
mov
fadd
mov
das
arpl
loop
sub
cmp
lock
in
mov
sbb
lods
test
fld
lock
gs
arpl
xlat
xchg
shl
mov
hlt
cmp
aas
and
shr
mov
fcom
xchg
fcomp
(bad)
fist
addr16
cmps
fstp
sub
xchg
pop
pop
cld
stos
dec
xor
mov
ret
fdiv
ss
add
in
jg
cmp
pop
dec
imul
jmp
pusha
enter
push
mov
and
dec
pusha
scas
pop
cmp
sub
mov
mov
mov
mov
addr16
mov
mov
ficom
adc
les
test
in
push
sub
mov
lods
scas
stos
(bad)
test
adc
test
adc
into
addr16
adc
aad
mov
mov
std
int
aad
xchg
int3
ret
pop
inc
gs
mov
xchg
dec
mov
call
inc
mov
inc
jg
sbb
cld
inc
in
cmc
(bad)
out
pop
sub
test
out
dec
in
int
jge
jnp
cmc
mov
mov
in
retf
cmp
xchg
xchg
clc
sahf
sub
je
popf
mov
es
adc
rol
adc
push
xor
out
add
mov
shl
test
(bad)
and
sbb
adc
sbb
adc
mov
fld
cmp
(bad)
lods
inc
stos
aam
sbb
sahf
jnp
jecxz
test
rcl
push
cmp
addr16
xor
or
ret
fwait
arpl
xor
in
pop
jne
imul
add
js
ins
ret
stos
pop
mov
sahf
xor
test
sbb
xor
pop
fwait
mov
cmp
cmp
test
pop
movs
jg
test
out
call
push
(bad)
mul
dec
scas
test
aas
js
mov
pushf
ins
mov
test
mov
scas
pop
outs
(bad)
mov
mov
or
add
xor
mov
pop
push
in
scas
mov
mov
lahf
and
int
icebp
test
xchg
mov
xchg
retf
xor
fst
push
mov
retf
in
push
lahf
and
loop
jg
shr
inc
and
out
and
mov
cmps
cmp
mov
mov
inc
ins
jbe
ins
sub
ds
jge
add
lds
test
xor
xor
push
push
or
mov
push
icebp
mov
in
xor
sbb
and
mov
dec
pop
mov
mov
ror
mov
ja
xchg
es
sti
test
mov
sub
jecxz
or
out
adc
cdq
mov
xor
repz
mov
adc
lods
iret
js
add
sbb
call
jno
xor
add
xchg
rcl
add
inc
mov
inc
imul
jge
jae
ds
jp
jnp
int
jge
pop
xlat
mov
pop
gs
jns
(bad)
rep
lods
in
push
test
daa
dec
mov
adc
xchg
mov
test
push
in
mov
dec
mov
scas
(bad)
or
and
jns
jl
js
mov
sub
lods
xchg
arpl
test
pop
fcom
jnp
(bad)
jns
pop
popa
mov
adc
xchg
out
xchg
rcl
jae
std
sbb
outs
das
int
or
mov
pop
dec
popf
sbb
jb
sar
cwde
pop
cmp
repnz
outs
test
adc
jmp
jg
mov
fsubr
ja
jb
ja
shl
gs
mov
push
and
mov
pop
ins
sbb
jmp
lods
cmp
pop
mov
add
sub
mov
jle
enter
scas
test
xor
arpl
rol
nop
cs
das
and
in
push
lods
mov
sub
sub
test
retf
and
loope
inc
into
fwait
out
mov
scas
sbb
lahf
(bad)
adc
and
sbb
and
pop
(bad)
sub
mov
(bad)
outs
in
mov
scas
jns
adc
mov
sub
les
mov
inc
idiv
loope
mov
add
fldcw
dec
lods
addr16
call
div
addr16
out
mov
xor
xchg
test
adc
xor
call
cs
stos
es
les
add
repz
sub
(bad)
mov
inc
mov
and
lahf
mov
call
cwde
aam
mov
scas
mov
cmps
xor
inc
lods
test
pusha
pop
addr16
sub
adc
aaa
stos
mov
pusha
cmovns
lahf
nop
inc
(bad)
jb
pusha
scas
stos
xor
inc
ss
jmp
adc
loopne
sub
mov
movs
popa
fdiv
push
sar
xlat
inc
mov
push
cmc
fld
and
je
imul
in
hlt
outs
add
lahf
cmp
sbb
int
out
push
addr16
movs
lods
mov
int3
mov
mov
enter
push
push
xchg
mov
call
lahf
(bad)
retf
aas
or
scas
test
iret
lea
xchg
test
jnp
icebp
pop
rcr
or
icebp
inc
jne
push
cmp
data16
add
adc
stos
sub
mov
in
mov
fld
pop
cld
jnp
xchg
pop
ret
loop
(bad)
ja
push
mov
js
mov
push
mov
sbb
dec
addr16
pop
retf
jecxz
sub
movs
pusha
add
pusha
adc
jl
dec
ret
pop
mov
jp
cmps
jns
pop
fbld
mov
js
push
ja
push
jae
cmc
sub
test
mov
lods
lods
in
sub
inc
fiadd
xor
push
retf
mov
push
pop
mov
mov
mov
cmp
xchg
popf
scas
test
mov
test
nop
movs
out
hlt
mov
cld
mov
ds
stc
jecxz
cld
mov
(bad)
les
inc
outs
or
push
pushf
retf
and
xor
cs
adc
scas
mov
call
add
xchg
mov
mov
xchg
scas
jg
jg
movs
es
fwait
sub
enter
and
cmps
mov
or
adc
dec
and
and
ds
jae
mov
jo
js
stos
cld
pop
pop
mov
icebp
movs
pop
jmp
call
les
(bad)
es
cs
test
push
ins
cmp
dec
scas
jnp
push
dec
xor
aas
aad
sbb
xor
mov
jno
lea
jge
dec
xchg
ds
cmps
lods
call
mov
push
xchg
mov
cmps
sbb
push
inc
aas
test
test
and
pop
cmc
mov
imul
sbb
sub
popa
sub
lods
mov
sub
fsub
btc
stos
movs
jo
sbb
lods
pushf
pcmpgtd
stc
fidivr
mov
mov
sbb
xchg
mov
pop
enter
mov
iret
mov
sub
stos
mov
add
shr
test
scas
fwait
or
iret
mov
retf
and
xchg
adc
pushf
add
jmp
out
dec
js
push
mov
jg
cmps
inc
movs
mov
xor
jp
lock
fs
loop
and
fcmove
inc
push
scas
xchg
not
gs
jp
in
mul
sbb
xchg
add
pop
pop
mov
mov
loop
cmp
mov
loopne
mov
cmp
es
retf
lea
inc
push
ret
repz
stos
imul
mov
mov
push
or
mov
mov
jae
inc
adc
push
push
push
and
push
sub
pop
push
pop
xor
sbb
mov
adc
rcr
cmp
sbb
iret
sbb
stos
add
pop
mov
xchg
jns
je
out
movs
outs
(bad)
xchg
cmps
pop
rcr
adc
mov
ins
icebp
pop
outs
dec
inc
mov
cmps
imul
pop
test
call
in
ins
xor
add
inc
js
jg
and
(bad)
jl
fs
adc
adc
add
faddp
push
lahf
popa
lods
aam
sub
outs
pop
in
fbld
pop
jmp
popf
pop
cmp
ret
mov
arpl
and
mov
cdq
lods
add
pop
daa
xor
or
ins
xchg
adc
xchg
push
sub
cmps
fs
(bad)
mov
mov
aaa
mov
in
cmp
outs
stos
xchg
dec
mov
lock
sbb
(bad)
jle
neg
cmps
or
cli
dec
lea
mov
xchg
imul
mov
cmp
push
arpl
xor
movs
loop
lods
(bad)
dec
test
mov
in
adc
add
and
das
adc
jno
sub
sbb
mov
es
sub
push
stos
daa
cmps
lods
or
xor
in
(bad)
mov
mov
mov
fwait
and
cmp
and
pop
dec
mov
fisubr
pop
mov
loope
int3
push
mov
and
mul
lods
xor
add
outs
pop
sub
sub
out
leave
fwait
scas
(bad)
arpl
clc
sbb
ret
sub
sub
ins
inc
push
dec
into
pusha
sbb
imul
sub
jle
cmp
(bad)
xchg
sar
or
jge
sbb
sub
icebp
aas
lods
shr
mov
mov
aad
mov
lahf
imul
jp
lods
pop
addr16
xor
in
jle
stos
icebp
iret
ror
in
mov
push
jo
scas
js
or
test
or
jnp
push
jb
out
inc
mov
js
outs
cmp
dec
xor
xchg
ficom
pavgb
dec
(bad)
jmp
(bad)
or
inc
jns
inc
stos
dec
cmp
add
ja
test
aad
mov
mov
mov
call
mov
ins
jbe
lahf
scas
pop
(bad)
mov
retf
inc
mov
push
push
shr
retf
inc
ficomp
in
(bad)
lods
sub
xchg
shr
sbb
mov
cli
out
and
std
ret
xor
stos
cld
mov
out
mov
pop
mov
pop
scas
nop
and
mov
in
out
mov
cmp
lods
inc
rol
pop
in
lds
pop
and
mov
mov
mov
mov
scas
outs
es
dec
cmps
mov
js
lds
cwde
fdivp
ja
iret
ins
mov
stos
out
sbb
daa
nop
pop
dec
sub
push
mov
aad
sub
cs
mov
ficomp
fwait
test
cmp
dec
pop
leave
je
jno
jb
outs
sub
pop
mov
out
out
(bad)
cmp
ficomp
push
add
fldenv
scas
mov
stos
sub
lock
cmp
mov
cmc
pop
dec
(bad)
adc
nop
and
jae
sbb
sbb
push
outs
repz
pop
lea
jl
xor
lock
inc
jle
pusha
bound
jb
addr16
mov
push
add
jl
scas
repnz
ins
lods
in
stos
mov
cld
jb
jae
or
les
nop
adc
ficomp
mov
stc
mov
stos
clc
arpl
je
mov
ret
sub
inc
or
pop
ret
fstp
(bad)
aas
sub
mov
aad
in
dec
sub
dec
loop
cmp
imul
mov
pop
fs
add
retf
cwde
add
scas
ss
xor
or
pop
inc
imul
mov
xchg
pop
sub
out
ja
rcl
mov
cmp
jnp
xchg
ret
add
retf
out
mov
in
cmps
jno
stc
jb
mov
sub
jecxz
mov
stc
aam
pushf
mov
jb
sahf
add
pop
lea
mov
out
jbe
or
shl
push
fdiv
or
int
xchg
sahf
pop
xchg
scas
add
xlat
aas
mov
pushf
aas
jge
enter
outs
shr
jae
ret
fldcw
sbb
(bad)
cs
int
xor
(bad)
or
mov
fst
sbb
inc
shl
mov
imul
(bad)
pop
(bad)
cli
aaa
pop
fucom
ins
rol
dec
dec
inc
sub
scas
sbb
gs
(bad)
cmp
fld
or
pop
add
in
cs
popf
xchg
pusha
iret
outs
add
add
hlt
popa
(bad)
out
adc
sub
adc
mov
sub
sbb
out
cmps
addr16
sub
(bad)
mov
jle
push
xchg
(bad)
jg
sbb
mov
das
jg
pop
jl
pop
cmp
or
mov
out
scas
ds
movs
xchg
(bad)
sub
pusha
nop
jns
icebp
pop
or
sti
lea
ins
out
rcl
fmul
xor
loop
ins
jo
pop
adc
xor
push
fwait
mov
int3
jg
mov
mov
and
clc
mov
mov
dec
stos
push
sub
rol
jle
mov
(bad)
mov
pop
mov
push
jns
jmp
dec
xor
pop
(bad)
scas
jle
sub
jmp
(bad)
jecxz
mov
movlhps
mov
call
cmps
sahf
mov
and
fsubr
stos
cmp
mov
je
sbb
fbstp
xchg
push
(bad)
jge
outs
mov
hlt
push
into
mov
or
sti
leave
scas
std
popa
mov
push
cdq
pop
pop
and
sub
sbb
xchg
inc
test
fimul
mov
cmps
pushf
in
je
addr16
cmp
jo
jmp
xchg
jnp
fbstp
shr
sar
add
in
xor
in
stos
xlat
mov
push
(bad)
retf
mov
push
sbb
es
(bad)
jle
movs
fsubr
lea
xchg
(bad)
xchg
mov
cmp
arpl
loopne
scas
daa
mov
mov
imul
and
(bad)
xchg
push
inc
fild
inc
fnstcw
push
mov
sub
cmp
xchg
(bad)
sub
(bad)
imul
imul
das
mov
fistp
mov
add
in
into
sub
mov
ds
mov
fisubr
pop
stos
inc
out
and
je
dec
or
js
mov
stos
je
cmps
iret
ss
sub
lods
sbb
js
ret
repnz
mov
lea
vmread
ins
addr16
stos
add
(bad)
nop
push
cmps
aas
mov
jne
fild
xor
push
mov
jb
pop
ins
cmps
(bad)
jb
jg
cmp
popf
leave
dec
(bad)
jge
test
sub
scas
xchg
xchg
mov
dec
mov
pop
ja
xchg
call
sub
xor
or
daa
stos
xchg
jg
fdivr
pop
mov
adc
lods
jl
cmps
je
add
lahf
es
pop
and
imul
cmp
or
fs
out
dec
dec
mov
jge
es
scas
out
imul
and
sbb
mov
lock
(bad)
add
imul
pop
test
jmp
xor
bound
push
in
jmp
add
push
xchg
in
push
test
ss
push
lods
xchg
lock
add
imul
movs
daa
add
imul
xor
int3
adc
inc
pop
jbe
sub
lods
ror
fs
movs
mov
stos
mov
pop
pop
push
sahf
cmps
mov
lahf
imul
add
sub
push
call
adc
call
jmp
cmps
inc
out
xchg
jb
xchg
xchg
ins
cmp
mov
sbb
sti
gs
mov
xlat
jne
pop
mov
inc
(bad)
scas
jns
in
cmp
js
fsub
mov
(bad)
mov
mov
cdq
or
xchg
in
mov
jns
js
(bad)
dec
and
adc
shl
cwde
mov
or
(bad)
push
lods
cmps
pop
lahf
lods
ins
pop
out
cld
fadd
daa
mov
lods
retf
push
pop
test
mov
xor
mov
das
add
sub
sub
inc
pop
repnz
data16
std
xchg
jne
pop
push
pop
movs
dec
js
stos
sub
dec
push
adc
out
sbb
imul
xchg
cmp
dec
imul
in
mov
mov
mov
jge
pushf
jno
in
jge
jle
sub
es
pop
push
mov
inc
add
sub
jle
mov
or
(bad)
(bad)
cs
jne
sbb
cs
(bad)
icebp
mov
jae
in
imul
movs
xchg
je
in
scas
or
hlt
mov
mov
xor
(bad)
addr16
imul
stos
sub
adc
jecxz
test
adc
xchg
push
push
ins
and
(bad)
js
imul
mov
xor
jecxz
jno
ja
scas
mov
sahf
fstp
pop
lods
popf
push
mov
push
ins
js
movs
push
pop
mov
cmp
sbb
sbb
add
sar
(bad)
mov
icebp
jbe
cli
xchg
arpl
sub
(bad)
adc
or
int
(bad)
ss
cdq
push
cld
pushf
xchg
(bad)
ins
dec
pop
inc
mov
ins
fisttp
cmps
aas
push
or
add
stos
and
mov
lds
sub
fld
push
pop
mov
sub
pop
dec
xor
jmp
stos
or
lock
mov
dec
mov
xchg
mov
xor
or
or
data16
ror
adc
pop
repnz
or
popa
mov
retf
sub
les
retf
data16
xor
mov
ret
div
adc
cdq
mov
aaa
and
sub
xor
jns
dec
and
dec
imul
lods
pusha
push
dec
adc
dec
xlat
in
inc
cdq
and
adc
add
cmp
aaa
xchg
(bad)
call
push
sub
mov
cli
hlt
out
xor
imul
mov
mov
inc
pusha
push
sar
sahf
cmc
mov
(bad)
push
jae
jmp
fdiv
adc
jmp
das
iret
and
adc
iret
stc
xor
or
out
mov
sbb
jge
xlat
or
call
push
dec
inc
add
stc
push
stos
es
stc
es
repz
vpavgb
jmp
sub
xor
mov
std
and
sub
ds
mov
addr16
fstp
xchg
jge
ficomp
gs
mov
aad
or
int3
jg
sbb
xchg
mov
daa
dec
std
inc
mov
and
in
or
mov
es
mov
out
int
lods
xchg
test
addr16
adc
jmp
iret
sbb
or
jno
stos
mov
xchg
aam
dec
push
not
push
outs
dec
or
inc
stos
in
(bad)
call
cmp
ds
out
pop
rol
rol
mov
pop
sub
retf
aas
fisubr
js
ds
sub
inc
stos
int3
test
pusha
stos
or
sub
faddp
(bad)
popa
push
push
xor
cmp
jg
or
fwait
pop
inc
sub
push
outs
int3
xchg
lock
scas
push
jno
(bad)
jcxz
loope
or
aam
das
das
sbb
sub
mov
lods
mov
dec
mov
mov
inc
(bad)
fisub
fsub
add
cld
xchg
jmp
xchg
int3
sub
lds
arpl
pop
mov
shl
xor
call
push
sar
add
fwait
xchg
mov
(bad)
pop
shl
xchg
or
jb
adc
stos
rcl
push
sbb
fstp
or
inc
test
jns
jge
int3
out
mov
mov
jo
adc
adc
and
call
rcl
dec
dec
mov
mov
xchg
les
dec
movs
outs
adc
cdq
xchg
jmp
pop
test
call
push
lods
push
stos
lds
mov
jb
mov
ret
mov
inc
das
imul
sbb
and
(bad)
cmp
push
push
mov
inc
jae
sahf
push
jg
add
cmps
sbb
dec
int3
addr16
jl
push
push
inc
mov
scas
iret
push
ss
iret
xchg
lds
jnp
data16
jnp
daa
jge
cmps
stos
jo
mov
add
dec
(bad)
ins
cmps
dec
js
std
lahf
inc
jne
lds
popa
daa
js
sub
push
arpl
shl
jmp
push
loopne
sub
sbb
(bad)
jae
aad
stc
dec
ins
push
pop
scas
jno
data16
sub
inc
cmp
call
bound
aam
aam
add
iret
jp
rcr
test
cmp
add
lods
mov
stos
lds
mov
dec
mov
dec
aam
mov
sub
out
ins
jl
push
jns
addr16
mov
and
xchg
xchg
scas
push
sub
repnz
retf
and
es
out
jge
mov
xchg
(bad)
mov
out
call
dec
adc
jns
ds
sub
adc
mov
or
push
cmp
cwde
daa
jle
ja
push
adc
mov
adc
call
or
jne
test
jp
pop
cmp
pop
xchg
jns
lea
push
add
scas
xchg
sub
cmp
pop
sbb
xor
test
or
sub
jno
inc
les
push
push
or
mov
or
jp
jmp
or
js
js
sub
mov
xor
in
mov
or
rol
(bad)
jg
or
movs
cmp
jbe
mov
lock
jbe
cmp
fisub
lahf
jo
call
dec
lods
pop
(bad)
stos
inc
jo
aad
jecxz
and
adc
shl
mov
add
shl
push
das
ins
jo
ret
outs
mov
iret
adc
push
imul
xchg
outs
mov
xchg
pop
(bad)
popa
and
jmp
fidivr
jno
xor
fcom
jo
or
loop
mov
(bad)
scas
lea
test
xor
lods
mov
lods
jo
mov
pop
mov
push
cwde
xor
pushf
push
add
cmp
pop
test
shr
or
ins
pop
leave
pop
mov
lea
bound
jle
xchg
ficomp
mov
push
ret
test
test
inc
outs
xchg
mov
mov
jnp
pop
movs
test
inc
mov
sub
jno
or
mov
iret
loop
sub
fild
retf
popa
push
push
jecxz
pop
push
cmp
xchg
cmps
jle
xor
ss
pop
or
sbb
jl
and
mov
jns
jmp
xlat
and
pop
mov
mov
arpl
mov
dec
inc
fcmovnu
jo
xor
pop
outs
movs
imul
cmp
mov
sbb
(bad)
fidiv
ret
cmps
fldcw
(bad)
cmps
call
pop
outs
mov
stos
lahf
jg
daa
xchg
stos
es
neg
xor
into
jne
test
sub
fld
lods
sahf
mov
dec
cmp
int
jl
vunpckhpd
pop
mov
sub
jmp
add
out
pop
cmps
xchg
xor
movs
leave
xchg
or
inc
jg
mov
lods
in
xchg
jmp
pop
push
cmp
popf
push
pop
xor
dec
xor
dec
out
clc
daa
loope
shr
dec
inc
stos
scas
(bad)
xor
mov
push
outs
xchg
scas
sti
stos
dec
xchg
add
pop
stos
bound
and
pop
into
jo
js
mov
mov
ja
mov
xor
pusha
sti
add
ja
retf
lahf
std
and
fisttp
stos
and
jmp
adc
sar
es
mov
xor
outs
mov
lods
cmp
out
or
loop
mov
mov
mov
out
push
dec
popa
sub
cmp
pop
ficomp
lds
xor
push
sub
mov
mov
aaa
cmp
jmp
clc
(bad)
jge
xor
mov
das
push
ins
je
fstp
loopne
mov
(bad)
cli
dec
pop
addr16
pop
inc
pop
stos
dec
mov
lods
jb
cmps
cli
lods
test
pop
jno
lods
mov
mov
lea
lds
or
and
test
cmps
stos
xor
call
mov
stos
stos
ret
in
lods
mov
jo
mov
daa
test
add
inc
pusha
dec
mov
dec
test
mov
lods
clc
pop
or
imul
dec
test
pop
out
movs
and
fnstenv
xchg
push
or
push
or
jmp
fcmovnb
popa
popf
sbb
sub
pusha
aas
call
and
ret
and
lock
mov
or
pop
mov
xchg
sub
jbe
repz
add
cdq
mov
and
cwde
sub
mov
push
in
jg
mov
push
cmp
cmps
adc
mov
xor
jae
mov
lods
aaa
int
xchg
push
cmp
or
or
dec
pusha
inc
test
es
push
mov
pop
mov
lds
or
movs
ret
jae
adc
fldenv
xor
pop
test
lea
ror
inc
scas
jle
pusha
add
lahf
add
and
sbb
(bad)
cmc
push
test
cdq
mov
cmp
sub
cmp
(bad)
arpl
(bad)
mov
sti
pusha
mov
sub
addr16
mov
jle
push
xor
push
dec
shl
out
push
rol
cmc
ins
xchg
sbb
mov
scas
icebp
jb
jns
lods
mov
in
call
(bad)
cmp
jge
add
mov
or
mov
in
sbb
or
stos
and
std
rcr
in
movs
sub
stos
stc
mov
out
xor
push
adc
push
push
imul
fcmovne
call
dec
cmp
(bad)
shl
mov
and
das
or
jecxz
(bad)
ret
hlt
lods
mov
jo
(bad)
fcomp
int
fs
lar
arpl
addr16
loope
mov
dec
push
push
dec
cli
sbb
push
les
movs
push
fwait
aas
movs
sbb
ds
nop
test
xor
mov
addr16
mov
ins
aas
int
add
js
and
cmp
or
repz
and
or
mov
xlat
xchg
push
bound
aam
push
(bad)
adc
or
int3
popa
shl
das
fcmovu
and
pop
es
fs
cs
mov
sar
xchg
inc
push
jg
mov
dec
mov
hlt
jnp
out
and
and
stos
pop
test
das
pop
ja
or
outs
push
(bad)
daa
push
pushf
scas
out
xchg
xor
dec
scas
rol
arpl
inc
or
sbb
push
jns
add
stos
gs
and
adc
in
(bad)
xchg
pushf
jbe
sub
adc
sbb
push
dec
outs
test
dec
push
push
leave
int3
jmp
scas
jle
xchg
xchg
jg
imul
push
ficom
ins
adc
jg
dec
cmp
push
jne
mov
lds
shl
jle
or
xchg
out
inc
pusha
nop
addr16
mov
inc
mov
cmps
scas
aam
sub
pop
aam
and
mov
adc
aad
mov
xor
mov
(bad)
imul
lds
iret
jg
cmp
out
jmp
cld
adc
stos
imul
jmp
jg
sahf
imul
pop
pushf
stc
jmp
mov
out
enter
jg
pop
(bad)
cs
cs
cmc
or
(bad)
mov
cmc
fwait
or
cmps
cmps
ins
xlat
gs
or
jne
int3
adc
adc
fldcw
xchg
fcom
mov
data16
sar
ins
(bad)
sbb
in
fsubr
fsubr
lds
add
jmp
xchg
test
lock
dec
in
mov
call
jns
enter
add
pop
lds
ret
pop
sub
mov
in
or
nop
inc
and
idiv
leave
jge
sbb
popa
sub
mov
(bad)
out
xor
jmp
dec
fdivr
and
jo
shl
push
xchg
inc
loopne
sub
test
mov
sub
cli
cwde
adc
sub
or
pop
mov
cmp
stc
imul
mov
mov
data16
aad
sbb
add
cmps
aas
xor
cmc
push
mov
mov
in
push
int
jge
into
iret
ds
outs
dec
sub
adc
jbe
lahf
ret
jecxz
ror
add
ds
div
sub
scas
imul
(bad)
mov
adc
lds
xlat
inc
aas
inc
(bad)
mov
dec
repz
out
xchg
cmp
(bad)
(bad)
and
jle
(bad)
adc
mov
cmp
push
cmp
xchg
fistp
mov
fwait
dec
mov
mov
sub
aam
lahf
mov
fsubp
jo
mov
adc
push
mov
inc
lods
jle
aam
movs
inc
out
out
fs
out
add
mov
sbb
(bad)
ficom
jl
js
sub
or
jo
add
mov
clc
inc
scas
inc
jle
repnz
inc
jge
cli
mov
xchg
(bad)
mov
je
dec
sub
dec
jmp
sbb
mov
dec
(bad)
cmps
(bad)
ins
cli
(bad)
hlt
(bad)
mov
cmps
or
pusha
mov
dec
imul
pop
je
cmp
inc
xor
mov
jmp
xchg
ins
das
jae
xchg
je
imul
pop
cmps
retf
push
movs
cmp
or
fsubr
scas
pop
inc
js
mov
mov
scas
push
mov
(bad)
dec
sub
push
outs
lahf
(bad)
in
mov
movs
sub
bound
inc
mov
sbb
jge
fs
mov
test
pop
loop
loop
pushf
into
jnp
push
lods
pop
mov
mov
outs
or
fcmovu
add
mov
dec
jp
mov
jg
inc
cmp
movs
mov
jg
mov
loope
lock
push
mov
fdivr
mov
sub
pop
les
mov
popa
out
jmp
ret
ins
stos
mov
aaa
outs
and
sbb
inc
xor
ret
cmps
lods
fild
jne
pop
addr16
shl
dec
jb
jge
ror
ds
pop
sbb
jmp
sub
cmp
pop
sub
xlat
mov
cmps
dec
iret
pop
sahf
fwait
pushf
or
movs
xchg
mov
(bad)
jbe
mov
nop
and
scas
xchg
mov
inc
or
ret
out
std
or
jae
or
lea
cmc
fsubr
(bad)
hlt
pushf
stc
xor
dec
out
jae
scas
out
(bad)
popf
mov
adc
jns
jnp
jno
and
jg
jb
or
scas
jmp
stos
sub
(bad)
push
and
push
jmp
pop
hlt
fs
into
push
es
jae
mov
dec
jns
adc
stos
jnp
mov
inc
stos
outs
dec
pop
mov
xlat
(bad)
jnp
pop
fnsave
(bad)
push
les
dec
inc
inc
mov
push
sbb
pslld
popf
repz
shl
scas
xor
std
inc
shl
fwait
mov
ror
mov
ret
test
mov
mov
stos
mov
das
or
ins
jle
repnz
test
fidivr
inc
cmp
shl
and
cmps
fwait
mov
pusha
sbb
sbb
je
xchg
or
stos
mov
scas
mov
scas
fmul
repnz
stos
stc
rcr
adc
popf
adc
mov
xchg
inc
lods
adc
dec
out
push
in
jo
imul
xchg
xchg
aaa
mov
mov
pusha
mov
xchg
outs
mov
xor
and
inc
ret
stos
mov
ins
and
jno
dec
dec
jb
ins
test
pusha
stos
cmp
cdq
mov
retf
pop
mov
mov
and
xchg
enter
shl
dec
mov
dec
xchg
arpl
test
mov
sbb
mov
pop
es
repnz
push
out
mov
jl
loopne
mov
mov
ret
mov
ins
or
jns
pop
mov
or
cmp
popa
retf
mov
scas
cmps
xchg
leave
mov
sub
ror
jno
mov
and
iret
imul
pop
push
shl
mov
test
imul
test
mov
push
mov
imul
pop
mov
mov
cs
cmp
addr16
xlat
idiv
jp
sti
mov
sbb
xor
adc
pop
fs
ret
ss
loope
stc
mov
scas
ins
(bad)
cmp
jb
les
aad
mov
fisttp
mov
mov
jge
fmul
retf
pop
or
and
ficomp
scas
sti
fist
aaa
or
xlat
mov
or
std
fcom
lods
out
mov
add
cmps
ins
jmp
movs
rol
addr16
in
or
bound
cmps
cdq
dec
bound
out
in
popa
jg
mov
(bad)
ins
sahf
fdivr
lods
cmps
addr16
(bad)
js
push
inc
arpl
nop
cmps
jle
outs
scas
mov
lea
gs
inc
inc
pusha
or
mov
sub
lock
sbb
sbb
jle
test
aaa
ins
dec
sbb
mov
xchg
(bad)
dec
inc
xor
xchg
xor
scas
mov
mov
pushf
cmp
aam
pop
lods
fsubr
cmp
and
bound
addr16
xor
sub
xor
frstor
mov
addr16
xchg
jb
mov
rcl
jno
jle
into
arpl
and
scas
shl
pop
je
(bad)
fist
shl
inc
aam
or
es
cmp
(bad)
lds
push
jle
or
fld
or
cmps
lods
jns
inc
inc
jno
xlat
pop
cmp
and
inc
cmp
and
sub
dec
mov
xor
dec
in
cmps
imul
push
or
mov
adc
mov
inc
daa
or
iret
sahf
jecxz
push
lahf
cmps
mov
iret
adc
sub
push
xor
scas
dec
cmc
cmps
mov
adc
inc
jecxz
mov
test
lahf
and
in
in
das
repnz
loop
(bad)
mov
push
retf
jmp
ret
mov
dec
ficom
and
neg
test
dec
(bad)
fist
mov
push
(bad)
std
or
lds
push
(bad)
mov
xchg
lds
mov
scas
popa
(bad)
jmp
aas
scas
daa
or
outs
daa
(bad)
mov
out
scas
daa
(bad)
ins
lods
daa
fisubr
xchg
mov
cmp
call
mov
mov
pop
sbb
mov
lods
dec
out
jne
jmp
das
arpl
xchg
jl
sbb
sub
add
(bad)
or
ficomp
mov
popa
mov
cmps
and
(bad)
aas
or
sub
and
pop
dec
arpl
adc
jo
jg
jg
jp
test
addr16
inc
(bad)
sbb
mov
pop
(bad)
fldcw
and
mov
add
les
inc
jmp
pusha
mov
mov
popa
cmps
mov
xchg
mov
cmp
pop
mov
fwait
xchg
inc
iret
das
stc
jmp
mov
out
cmps
je
imul
out
dec
mov
ficom
shl
out
out
xor
cs
sti
pop
cmc
sub
inc
mov
jno
mov
xchg
call
and
push
xor
dec
and
mov
outs
adc
scas
fwait
out
fnstcw
dec
sub
fisubr
fld
mov
jo
popa
and
dec
jo
xor
xchg
out
add
jmp
inc
retf
mov
outs
test
cmp
cmc
pop
scas
mov
outs
xor
dec
add
iret
fs
lds
sahf
(bad)
adc
fisubr
pop
lods
xchg
(bad)
xor
fwait
movs
inc
stos
call
sub
jno
js
jl
mov
xchg
jge
push
test
int3
jmp
outs
out
punpckhwd
jbe
pop
gs
dec
fwait
jg
lods
std
or
test
mov
push
(bad)
call
and
xchg
cmps
sub
cmp
imul
adc
les
mov
in
iret
inc
(bad)
jb
daa
mov
dec
test
xchg
clc
pop
aad
aam
jecxz
scas
and
jnp
cmps
fwait
pop
mov
push
call
mov
push
movs
in
mov
iret
das
and
xchg
dec
test
mov
xchg
stos
jbe
fdivp
ret
call
jecxz
push
dec
inc
enter
je
adc
cmp
das
das
shr
es
sub
and
ret
jecxz
mov
xor
xchg
jno
pop
popa
mov
(bad)
out
imul
mov
jo
test
xchg
retf
ror
pop
xor
sub
loop
mov
inc
adc
xchg
pop
jae
(bad)
clc
mov
int
mov
mov
pop
mov
and
mov
fdiv
dec
(bad)
imul
or
push
xlat
xchg
inc
inc
sub
test
(bad)
jo
xor
inc
jbe
into
call
push
les
mov
jne
pushf
imul
mov
adc
sub
mov
shl
add
inc
jo
adc
pop
sub
out
test
test
push
lods
xchg
mov
mov
mov
push
mov
dec
imul
dec
jg
mov
xlat
out
jg
out
imul
(bad)
(bad)
ss
push
shl
cmp
in
jle
cmp
add
mov
scas
push
bound
mov
dec
sar
jo
mov
rol
out
cmp
imul
jg
cmps
dec
inc
pop
dec
xchg
mov
popf
mov
scas
xor
jmp
jmp
push
in
xchg
pop
mov
jae
cmps
popa
mov
pop
es
scas
push
mov
jmp
sub
and
or
ds
out
mov
mov
ds
sub
or
jg
addr16
stos
int3
and
cmp
mov
mov
sbb
pushf
xor
mov
add
cmps
xchg
in
pop
stos
popf
inc
seto
sbb
pop
in
xchg
mov
add
or
imul
jl
fs
mov
cmps
lods
rol
clc
dec
mov
cmp
pop
mov
xchg
sahf
xchg
call
sub
scas
out
leave
sbb
dec
mov
add
mov
mov
ins
gs
or
scas
mov
jp
dec
mov
test
jmp
or
daa
aam
movs
dec
mov
sbb
pushf
mov
aad
fisub
xlat
les
lods
xchg
jo
mov
jg
mov
cmp
test
pop
std
xchg
mov
lahf
loopne
imul
ins
bound
mov
dec
mov
cmp
sub
inc
aam
in
xlat
lahf
ret
mov
lds
outs
push
in
(bad)
aam
hlt
push
gs
es
scas
push
lock
inc
mov
inc
push
cs
(bad)
(bad)
ins
push
ret
dec
jns
add
sub
call
jge
cmp
scas
(bad)
mov
cmp
fwait
mov
mov
repnz
aam
lahf
imul
(bad)
sahf
out
xchg
es
mov
sahf
fmulp
jns
cld
ficom
or
stos
out
iret
jmp
mov
lods
mov
sbb
add
inc
mov
ffreep
jl
clc
mov
call
(bad)
jo
call
mov
xchg
cld
and
movs
(bad)
or
mov
adc
scas
icebp
das
inc
pushf
bound
jl
pushf
jbe
pop
(bad)
mov
dec
mov
arpl
nop
test
cmova
retf
icebp
xor
call
push
mov
mov
add
mov
jl
aad
mov
sbb
mov
mov
(bad)
fdiv
sbb
scas
lock
sahf
push
lea
add
movs
(bad)
retf
mov
out
jo
imul
mov
imul
jb
jg
jg
aam
cdq
push
pop
out
cmp
cmp
lods
stos
call
stos
jbe
popa
scas
fsub
cmp
outs
add
adc
gs
adc
in
jp
lahf
xchg
movs
cld
(bad)
mov
mov
js
ror
jnp
cmps
scas
fist
(bad)
jmp
xor
fdiv
and
stc
and
lods
adc
es
ins
(bad)
stos
xchg
jns
jl
int
nop
in
xor
add
dec
sar
lea
(bad)
imul
mov
push
nop
fdivr
sub
push
jmp
(bad)
stos
push
mov
jl
cmp
(bad)
mov
mov
xchg
and
dec
(bad)
mov
sar
push
fidivr
dec
xor
dec
mov
xlat
sub
test
out
adc
xor
mov
cs
pop
movs
mov
pusha
jmp
test
addr16
and
pop
cmp
(bad)
sbb
adc
and
mov
jmp
pop
es
or
sub
mov
hlt
jge
cmp
cmp
add
fwait
(bad)
cmp
data16
cmp
or
mov
test
or
mov
xchg
ja
jle
mov
sbb
out
push
and
out
jnp
(bad)
fsubr
mov
das
fldenv
shl
(bad)
pusha
rol
jg
cmps
and
data16
sbb
sub
das
ds
mov
(bad)
loopne
xor
mov
aaa
dec
cmps
and
lods
(bad)
movs
es
dec
scas
cmps
movs
push
aas
inc
pop
int
xchg
xchg
pop
movs
(bad)
out
fmul
xchg
cmp
shr
fadd
aas
mov
sub
pop
pushf
mov
jns
push
cmps
mov
inc
mov
and
jns
dec
jno
dec
rol
ss
jno
(bad)
or
icebp
cmp
sub
inc
push
xor
aad
mov
movs
mov
push
pop
cmp
xchg
cmc
js
sahf
xchg
push
ror
pop
scas
addr16
push
into
and
xchg
jae
scas
pop
fsub
retf
mov
imul
push
retf
cld
(bad)
cmp
lods
cmc
dec
inc
pop
cmps
ss
jecxz
in
lahf
dec
pop
xor
or
add
cld
fld1
stos
sbb
ja
fisttp
pop
mov
iret
jb
adc
add
repnz
inc
sbb
fld
mov
shl
mov
mov
jecxz
cmp
addr16
xchg
lahf
test
outs
cmp
xor
aad
xchg
xchg
add
int3
js
test
outs
xchg
inc
repnz
inc
pop
or
movs
cmp
and
fcmovbe
in
arpl
out
(bad)
jnp
jnp
cs
or
ja
int
pop
aam
(bad)
aam
dec
movs
lods
mov
scas
jmp
jae
jecxz
mov
pushf
xchg
inc
mov
mov
xchg
mov
mov
jbe
inc
rol
mov
sbb
out
sbb
xchg
mov
ret
cmp
jns
and
adc
addr16
in
fiadd
cmp
mov
pop
mov
les
mov
mov
test
mov
xchg
cmp
pusha
xor
repnz
mov
pop
mov
icebp
mov
ins
sub
pop
jae
mov
ret
mov
retf
test
mov
scas
or
mov
add
call
lea
gs
adc
pushf
adc
lahf
mov
or
jns
mov
js
pop
cmps
xor
bound
mov
test
pop
mov
out
loop
mov
lods
mov
mov
and
add
pop
sbb
sub
xchg
jg
cli
scas
sbb
mov
mov
lock
xor
adc
(bad)
jl
cmp
fidiv
repnz
dec
and
xor
cmovo
mov
(bad)
popa
test
pop
shr
push
in
aas
mov
out
movs
push
lock
cmp
push
scas
inc
popa
mov
lods
dec
mov
stos
cmp
xchg
mov
sub
jmp
fwait
std
(bad)
mov
mov
cs
es
dec
lods
mov
push
mov
sub
mov
jb
mov
pusha
mov
cmps
mov
dec
cwde
push
fisttp
push
pop
movs
xchg
mov
rol
and
mov
sahf
mov
cmc
bound
ins
lahf
mov
mov
jbe
mov
into
push
mov
pushf
arpl
pop
fisub
sub
stos
in
inc
sub
mov
mov
das
cld
mov
clc
and
rcl
lea
ret
into
mov
mov
ror
fsub
adc
add
push
arpl
or
mov
ss
mov
cmp
mov
mov
and
(bad)
mov
aas
ret
mov
push
mov
jns
(bad)
jge
out
add
mov
push
push
cmp
mul
jg
mov
mov
jmp
xacquire
into
clc
mov
lods
aaa
xor
lods
dec
es
cmps
in
jae
in
mov
mov
jmp
mov
test
iret
adc
pusha
mov
outs
je
cmps
fucomp
push
shr
sub
test
scas
out
call
scas
sub
lods
xchg
and
leave
sub
loope
lds
in
mov
push
mov
scas
mov
hlt
add
movs
(bad)
mov
daa
mov
aam
and
inc
stos
jle
es
fwait
ins
std
hlt
ret
mov
js
lds
mov
and
jae
push
pusha
ror
lea
lods
(bad)
sub
(bad)
adc
mov
jo
call
rep
xchg
in
pop
cmps
cmps
repnz
outs
mov
test
cmc
jb
test
outs
xor
pop
sar
cmp
xchg
mov
sbb
hlt
cmp
mov
sub
fidivr
iret
imul
mov
imul
popf
mov
xchg
add
imul
jae
dec
adc
outs
xchg
cmp
(bad)
adc
xchg
fstp
jmp
(bad)
pop
fist
adc
(bad)
aas
repnz
mov
pop
dec
aad
cmp
push
jb
xchg
scas
add
mov
jge
cmp
fwait
iret
sbb
or
hlt
mov
inc
add
ins
ror
das
mov
push
cmp
dec
stos
into
es
xchg
or
cmps
push
lods
push
jo
xor
inc
je
ins
push
repz
xchg
xchg
pusha
test
mov
cmc
pop
out
pop
mov
mov
jbe
shl
sub
cmps
popf
mov
call
jae
fistp
dec
pusha
lods
jle
(bad)
jg
mov
mov
hlt
dec
stos
movs
mov
pop
mov
fsubr
adc
inc
cmp
adc
xchg
xor
sub
sahf
mov
xchg
adc
push
jge
jl
out
mov
cmp
out
dec
nop
out
dec
mov
and
sub
sub
outs
or
jg
pusha
sub
stc
cmp
(bad)
call
icebp
test
add
lahf
inc
cmp
sub
mov
pop
test
inc
js
xor
mov
test
cmp
mov
sbb
xor
mov
aas
pusha
js
xchg
adc
jmp
pop
cmp
scas
push
xchg
mov
pop
mov
movs
cmps
push
call
fsub
data16
push
and
es
mov
and
pop
and
gs
pop
scas
mov
inc
jns
shr
cdq
mov
cmp
cmp
movs
or
mov
sbb
fstp
or
scas
push
cmps
jg
aam
jle
pop
fidiv
test
dec
je
sti
bnd
out
mov
mov
les
test
(bad)
push
push
popa
mov
pop
mov
(bad)
fwait
mov
jl
hlt
clc
icebp
cmp
lods
imul
jne
mov
adc
imul
add
xor
mov
cld
add
sub
(bad)
in
mov
xchg
mov
push
std
cmp
mov
in
add
imul
(bad)
out
jle
mov
test
sbb
xchg
fs
pop
iret
sti
and
push
xchg
mov
mov
mov
mov
pop
mov
sub
push
lahf
dec
ffree
sbb
jl
sub
adc
adc
bound
popf
int3
pop
push
gs
jns
loope
and
jg
test
out
or
loope
cmps
cld
imul
retf
mov
shl
aad
mov
lea
iret
pop
push
or
cs
xlat
les
push
cmp
mov
pop
jbe
and
nop
retw
pop
aad
mov
xchg
jne
test
ds
xchg
push
push
int
les
push
ret
nop
(bad)
mov
mov
add
fs
sbb
mov
adc
push
in
das
sbb
aam
cmp
dec
push
inc
mov
(bad)
fldcw
cmc
mov
movs
outs
test
arpl
mov
mov
cli
aaa
cmp
fidiv
fnstsw
out
cmp
dec
cmp
outs
adc
addr16
pop
cmp
pop
push
and
test
push
inc
into
mov
adc
adc
adc
lea
jle
sbb
scas
jge
retf
mov
retf
inc
test
sub
jge
sbb
mov
ja
stos
into
pushf
repz
add
sar
imul
lods
arpl
jnp
ret
dec
mov
or
mov
jne
mov
pusha
ret
or
xor
imul
dec
pop
test
out
inc
fstp
mov
mov
cwde
pinsrw
das
ja
mov
stc
jbe
mov
hlt
int3
xor
push
(bad)
jge
lock
data16
fdivr
fdivr
cmps
movs
popf
cmps
das
sbb
push
jge
fdivr
push
cli
xchg
addr16
mov
jo
ja
retf
into
out
test
mov
add
jmp
arpl
(bad)
jns
mov
imul
ret
mov
outs
xchg
(bad)
pop
lock
push
jo
jns
mov
mov
mov
retf
inc
dec
push
stc
push
xchg
jle
mov
cmp
stos
clc
dec
mov
add
jb
xchg
mov
and
dec
out
int
data16
mov
enter
retf
stc
gs
jecxz
not
ss
push
add
int3
push
pusha
cmps
push
popa
arpl
push
jmp
jae
mov
sub
in
shl
loop
nop
cdq
pop
cmp
imul
scas
aaa
inc
imul
out
stos
push
imul
or
dec
pop
(bad)
shl
lock
add
nop
repz
mov
addr16
ins
lods
jmp
xchg
and
in
jl
ins
stos
dec
xor
loopne
xchg
xchg
jp
test
(bad)
mov
push
add
lds
jne
mov
scas
cmps
cmp
mov
ss
outs
and
stos
and
imul
inc
imul
mov
inc
mov
adc
mov
and
es
fxsave
in
jmp
(bad)
cmp
xor
inc
or
cs
xchg
cmps
adc
pop
push
mov
aad
rcr
cmc
es
movs
mov
mov
push
in
aad
cmp
jl
mov
sbb
fimul
mov
scas
push
fidiv
mov
dec
jl
xchg
lahf
or
and
or
scas
std
xchg
out
dec
jnp
lds
fstp
aaa
add
cmp
jae
lds
pop
leave
mov
cmp
retf
outs
mov
cmps
sub
xor
pop
xchg
inc
(bad)
fild
jmp
mov
push
jge
push
jmp
cmp
pop
test
ror
scas
cmp
dec
add
(bad)
push
popa
out
lods
in
jmp
in
test
xor
mov
cmp
mov
pop
dec
push
mov
int
(bad)
dec
dec
int
sub
push
mov
(bad)
es
cmp
and
and
push
jnp
cmp
mov
add
inc
addr16
test
test
jbe
fcomp
xchg
jno
mov
sub
xlat
fisubr
pop
mov
sbb
mov
push
lahf
(bad)
pop
push
ins
xlat
imul
stos
mov
jle
pop
cmps
aad
mov
xor
lods
jl
xchg
scas
sub
dec
out
cmps
mov
sub
sub
or
movs
and
pop
fbstp
les
jl
mov
pop
pop
cdq
xor
std
loop
cmp
xchg
jmp
cmp
(bad)
jle
dec
add
sahf
dec
leave
jge
aaa
xchg
fstp
icebp
xchg
push
and
loopne
ins
mov
mov
stos
call
pop
inc
fild
lds
test
fdivr
dec
sub
(bad)
lods
mov
adc
imul
mov
movs
sbb
or
mov
sub
aad
movs
xchg
rcr
jg
ret
xor
jne
mov
movs
pop
pusha
mov
movq
and
cmp
jge
sub
retf
lea
jp
xor
gs
ret
cmp
xor
jge
sub
(bad)
fmul
call
in
inc
sub
dec
and
gs
mov
and
push
rol
jbe
push
mov
sbb
or
mov
(bad)
mov
iret
mov
cmp
fdivr
leave
mov
scas
sbb
daa
add
push
out
repnz
es
lds
daa
cdq
arpl
xchg
add
mov
arpl
push
or
mov
sub
rol
repnz
adc
loopne
cmp
sbb
retf
xor
dec
inc
movs
cmps
and
fs
xor
fisttp
inc
sbb
dec
das
cli
xchg
jo
lock
inc
mov
lods
jp
ins
and
mov
mov
mov
push
fwait
ins
iret
retf
mov
mov
cmps
les
mov
fisubr
cld
lock
mov
lock
neg
jnp
mov
popf
xchg
jo
jbe
dec
iret
push
(bad)
fsub
jg
xor
adc
into
loopne
lds
xchg
cmp
fadd
cmc
mov
xor
ins
adc
mov
dec
push
lods
sbb
push
add
jecxz
cmp
add
cmps
fsubrp
mov
loope
mov
inc
push
xor
std
pop
and
push
js
repnz
aam
outs
mov
xchg
push
outs
ror
mov
retf
or
jge
adc
jp
scas
gs
pop
jo
sbb
push
leave
jns
(bad)
xor
jb
into
sub
jg
ret
pusha
cmp
gs
dec
inc
movs
enter
fisubr
arpl
jae
add
outs
clc
lods
push
mov
mov
(bad)
in
test
and
sbb
jo
jnp
mov
sbb
daa
out
xchg
leave
cli
ds
mov
movs
shl
push
and
inc
inc
arpl
lods
jmp
scas
xchg
inc
xor
retf
xlat
cvtps2pd
cwde
fdiv
and
mov
dec
loopne
jo
sub
js
loop
cs
addr16
movs
or
fwait
ins
scas
sti
retf
add
xchg
jge
add
sar
out
and
sub
outs
xor
es
jge
scas
sub
mov
cmp
dec
loopne
jl
jle
pop
test
jg
dec
outs
pusha
out
mov
mov
ss
clc
pop
cmps
push
lea
push
in
stos
jae
scas
xlat
mov
shr
shl
adc
pop
pop
inc
movs
xchg
xchg
add
sub
add
cmp
movs
inc
jg
das
out
jge
cmp
js
lds
mov
adc
(bad)
lods
clc
pop
iret
and
mov
and
dec
jmp
pop
test
mov
(bad)
int3
mov
stos
mov
(bad)
cs
pop
jl
(bad)
sub
stos
imul
bound
scas
call
lds
cdq
and
or
mov
iret
xchg
pop
jl
xchg
and
jne
gs
int3
jnp
xchg
cmps
mov
xor
scas
mov
popf
fisubr
punpckhbw
pushf
fs
xchg
scas
or
movs
scas
leave
sti
pusha
icebp
in
mov
dec
add
scas
pop
dec
loop
stos
daa
ret
jno
sahf
stc
xor
mov
in
js
iret
imul
add
mov
daa
fwait
cmps
daa
sub
outs
mov
mov
add
(bad)
jae
lds
test
cmps
sub
and
inc
mov
test
jno
lahf
lds
mov
loope
jle
outs
xlat
adc
cmps
mov
jl
mov
int3
push
xlat
adc
add
adc
xor
(bad)
cmp
fucom
cs
movs
jns
js
aad
imul
aaa
leave
mov
mov
push
dec
sbb
(bad)
xchg
mov
push
fadd
cdq
ins
je
sub
adc
or
cwde
mov
pushf
fdivr
clc
hlt
mov
mov
(bad)
shr
iret
inc
dec
call
(bad)
fxch
outs
mov
(bad)
mov
in
repnz
sub
arpl
dec
jne
daa
xor
xor
pop
and
lahf
xlat
xor
rol
adc
fsub
outs
cmp
mov
test
dec
aas
scas
and
push
shl
iret
mov
stc
and
sar
mov
das
jmp
into
mov
pop
xor
mov
mov
lahf
test
xchg
pop
mov
and
les
ins
jno
leave
nop
int3
jg
add
fwait
mov
xchg
pop
pop
idiv
push
pushf
iret
mov
pop
xor
test
lods
idiv
ret
xor
mov
mov
push
inc
imul
pop
xchg
shl
jl
mov
fdiv
xchg
ss
inc
jb
or
mov
sbb
fcmovnb
mov
js
and
or
movs
xchg
sub
js
ins
int3
(bad)
mov
imul
push
add
enter
mov
pop
or
div
pop
and
jmp
mov
adc
xchg
adc
jmp
pushf
mov
jae
xor
inc
stos
stc
mov
pusha
xor
fdivr
mov
out
adc
into
xor
cmp
adc
xchg
jge
test
mov
stos
(bad)
mov
adc
int3
xchg
sti
sbb
scas
lods
inc
aaa
mov
or
lods
ret
dec
int
fdivr
jle
jmp
xlat
xchg
pop
or
in
lods
xor
scas
jle
jnp
sub
lods
test
inc
pusha
sub
mov
cld
xor
dec
outs
(bad)
sahf
(bad)
stos
mov
push
sub
mov
sub
and
dec
lahf
pop
pop
and
scas
or
and
in
dec
pusha
or
js
mov
and
jnp
pushf
test
push
push
outs
(bad)
fwait
and
and
mov
mov
mov
fiadd
or
scas
(bad)
xor
out
je
sbb
mov
(bad)
mov
test
jl
test
jno
jmp
outs
(bad)
mov
mov
cmp
cmp
dec
cmp
pop
xchg
popf
repz
ins
cs
scas
dec
cmps
adc
es
movs
mov
xchg
pop
fidivr
retf
(bad)
rcr
shl
dec
jmp
aaa
mov
retf
push
mov
scas
jmp
xchg
push
das
pop
cld
ss
ja
sub
cmc
out
imul
inc
loop
inc
dec
cmps
pop
jae
and
jno
test
push
scas
fidivr
(bad)
loopne
test
ror
jp
mul
clc
pop
jecxz
push
xchg
adc
int3
mov
mov
imul
sahf
sar
clc
mov
adc
ret
push
pop
sub
imul
pop
out
enter
loopne
out
push
popa
mov
jo
ins
fcomp
sbb
jg
xor
ins
pusha
mov
retf
cmp
sti
fidivr
loope
mov
jae
stc
pop
pop
in
xor
lock
inc
imul
cmps
repnz
aad
call
rcr
into
cmp
(bad)
mov
(bad)
retf
jnp
mov
jmp
jae
inc
(bad)
or
out
pop
sbb
scas
jp
in
cmps
imul
and
jmp
mov
in
lahf
clc
mov
cli
jne
jb
pushf
popa
scas
jecxz
(bad)
mov
and
inc
lods
xor
lahf
mov
sbb
mov
mov
(bad)
mov
push
ss
xchg
mov
mov
std
pusha
lods
fmul
sbb
or
or
adc
push
mov
fisubr
sub
daa
test
mov
push
mov
push
cwde
sub
or
idiv
push
das
stos
sar
(bad)
cmps
push
and
shr
jge
or
push
icebp
mov
sub
data16
clc
jno
xchg
pop
push
mov
mov
shl
fs
jns
pushf
int
(bad)
fsub
call
lea
out
retf
sbb
lods
xchg
mov
mov
jge
fwait
icebp
repnz
xchg
mov
cmp
out
mov
test
lea
sub
mov
lods
(bad)
stos
push
test
arpl
pop
jae
retf
cs
mov
push
repz
sar
stos
jmp
loope
test
stos
or
jo
out
leave
mov
cmp
xor
inc
enter
in
dec
xchg
sti
es
mov
nop
xchg
es
ret
cmp
popf
jge
jecxz
pop
xchg
adc
add
mov
movs
push
pop
mov
out
push
push
mov
fimul
mov
shl
cmp
adc
clc
add
mov
mov
adc
loopne
adc
mov
scas
push
(bad)
or
gs
xor
pop
imul
mov
sub
adc
lock
cwde
scas
mov
aas
xchg
xchg
xchg
jmp
je
and
in
stos
pushf
out
lahf
add
mov
enter
mov
mov
stc
stos
and
adc
push
jecxz
pop
mov
sub
ret
push
ds
or
and
push
xchg
dec
test
imul
loopne
dec
nop
sbb
lds
adc
ins
push
dec
xchg
out
mov
rcr
aas
jl
mov
test
out
sbb
inc
xor
mov
xor
cdq
push
xchg
bts
mov
mov
(bad)
mov
out
mov
movs
or
(bad)
std
ins
sub
sub
(bad)
in
out
in
and
sbb
dec
sub
adc
adc
fwait
ror
add
cwde
(bad)
sti
arpl
add
outs
das
push
mov
dec
mov
les
fcomp
stos
lds
add
mov
sub
fcom
jns
std
cmps
sar
iret
movs
es
bound
inc
mov
enter
push
imul
ss
mov
jle
inc
aas
xor
syscall
dec
fwait
or
jmp
mov
test
pop
and
dec
or
xor
imul
in
jmp
inc
cmps
fwait
inc
stos
or
imul
mov
push
cmp
mov
cmps
call
es
sbb
lods
test
scas
(bad)
dec
jmp
(bad)
stos
push
ja
sbb
movs
mov
in
in
ret
sub
in
in
adc
imul
int
sub
lea
shufps
add
sbb
mov
jbe
bound
daa
mov
inc
sub
(bad)
xchg
add
test
and
test
sub
sbb
xchg
mov
mov
daa
ins
mov
lods
inc
scas
call
pop
in
stos
add
pop
retf
mov
push
ins
inc
outs
push
popf
inc
lods
mov
test
movs
cmp
push
xchg
cld
pop
adc
xchg
sub
mov
mov
movs
bound
int3
std
out
movs
stos
mov
pop
ret
jbe
jb
ins
or
inc
sbb
lods
das
adc
mov
mov
mov
mov
jmp
sbb
add
and
lods
int
mov
jo
aam
or
pop
stos
movs
daa
stos
std
fnsave
out
aad
mov
repz
loop
int
pop
stos
movs
daa
test
stos
std
test
stos
mov
out
mov
push
popf
aam
cmp
jmp
inc
test
mov
retf
leave
je
inc
loope
not
xchg
fdiv
enter
mov
jae
test
cmps
fwait
imul
cmps
sbb
and
jl
retf
fwait
jne
sar
cmps
jle
movs
pusha
sub
in
arpl
cmps
sub
js
cmps
inc
jl
jmp
xchg
cs
cmps
or
jmp
(bad)
ins
daa
cmps
ficomp
mov
(bad)
sub
mov
sub
mov
mov
cmps
aad
mov
movs
mov
and
mov
rol
movs
sbb
fsub
shl
mov
mov
push
in
mov
(bad)
movs
sub
xchg
mov
retf
mov
(bad)
mov
movs
mov
adc
ret
cmp
xchg
(bad)
sbb
mov
xchg
test
ret
scas
mov
(bad)
jl
mov
sub
mov
dec
dec
test
inc
mov
sub
lahf
mov
cmp
push
mov
sub
stos
outs
scas
scas
sti
inc
mov
clc
cmp
ins
js
nop
imul
mov
mov
in
mov
stos
outs
shld
mov
push
mov
int
jnp
outs
jns
mov
in
mov
stos
outs
outs
jge
or
add
test
test
push
mov
inc
and
stos
ds
ror
mov
mov
push
jne
mov
xchg
jnp
and
xchg
adc
ins
sahf
sub
sbb
popf
ins
lods
dec
test
(bad)
xchg
cmp
test
(bad)
bnd
pop
cmp
pop
ins
test
cmp
ins
or
or
and
inc
or
cmps
cmp
jg
cmps
daa
lods
(bad)
imul
xchg
leave
xor
add
out
out
aad
ja
cmc
mov
(bad)
xor
(bad)
sbb
mov
mov
in
aas
test
cmp
cmp
lahf
xlat
ja
mov
cmp
jo
imul
js
cmc
cld
jne
jo
loope
inc
mov
push
int3
std
xchg
icebp
enter
gs
ret
add
cmp
and
arpl
lods
(bad)
(bad)
dec
in
mov
test
jge
sbb
jge
xchg
and
xchg
dec
lods
in
mov
call
mov
xchg
iret
mov
mov
cmp
stos
(bad)
cmp
or
inc
lods
mov
test
mov
loopne
int3
stos
xchg
iret
mov
mov
inc
cmp
stos
cmp
jle
popa
lahf
aas
cmp
stos
(bad)
fcmovnb
dec
xor
test
test
mov
cmp
test
leave
or
test
jg
and
imul
shl
push
mov
cmp
push
cmp
push
xchg
lahf
ins
cmp
int
stos
mov
pop
xor
test
mov
iret
mov
xchg
ins
xchg
sbb
ins
xor
push
sub
mov
mov
ja
scas
sub
iret
mov
out
jae
cmps
xor
popf
aas
xor
imul
push
imul
ins
retf
daa
lods
retf
fwait
movs
xor
popf
out
jns
movs
(bad)
shr
mov
and
test
movs
mov
xor
hlt
mov
dec
mov
mov
mov
or
mov
inc
mov
popf
out
jns
fsubp
scas
daa
mov
mov
mov
jmp
int
daa
mov
mov
xchg
xor
cmps
rol
push
imul
push
mov
push
mov
xor
test
mov
out
mov
mov
mov
push
rcr
imul
xor
sub
imul
int3
fidiv
cld
ret
mov
aam
pop
xchg
imul
ficomp
cmp
test
cmp
shl
mov
out
xor
daa
sbb
(bad)
pop
mov
loopne
dec
in
dec
jmp
push
dec
fcom
nop
push
dec
daa
push
out
push
cmps
mov
sub
lods
inc
lea
imul
sub
push
xchg
(bad)
sub
daa
inc
sub
sub
xor
cmps
inc
daa
scas
test
lods
jmp
das
sbb
(bad)
scas
xchg
in
push
add
jnp
data16
cmc
popf
mov
dec
inc
mov
or
ret
stos
imul
sti
les
inc
mov
add
inc
ss
xchg
jnp
rcr
dec
fadd
jne
(bad)
mov
xchg
mov
not
pusha
xchg
jmp
mov
mov
and
hlt
sbb
sbb
mov
mov
mov
in
inc
sub
or
adc
mov
jns
fidivr
scas
mov
scas
xchg
jne
adc
addr16
mov
fistp
mov
mov
adc
or
lds
inc
jnp
pop
popa
stos
add
lds
pusha
shl
sbb
arpl
cmps
add
fisttp
mov
mov
cld
push
test
jno
and
cmps
pop
xchg
inc
js
scas
mov
rol
sbb
inc
adc
xchg
or
mov
push
push
mov
pusha
mov
sub
ret
sub
jno
jle
gs
stos
mov
adc
test
dec
(bad)
sbb
in
stos
and
mov
jbe
nop
or
mov
int3
std
xchg
jb
les
sahf
cmp
dec
sbb
movs
ins
es
xchg
push
ins
push
shr
and
mov
mov
call
mov
pop
xor
mov
sub
fprem
out
daa
push
jmp
xlat
or
push
ins
mov
aam
sub
push
scas
gs
in
je
ret
and
cld
mov
aas
or
dec
stos
stos
jbe
es
adc
pop
test
jle
std
int
call
rep
push
cdq
lods
dec
aas
mov
imul
aas
and
enter
sub
daa
pop
lods
xchg
jmp
lock
mov
in
jecxz
or
xchg
in
sub
jmp
ror
pop
je
sub
jae
das
movs
lahf
sti
iret
out
mov
cmps
xlat
icebp
mov
sub
pop
mov
mov
int
or
shr
loop
add
cmp
outs
scas
sbb
mov
push
in
(bad)
popa
jae
and
iret
push
adc
ins
ds
sub
xchg
aas
jne
and
pop
jle
add
in
shr
int
adc
jg
data16
xlat
(bad)
xchg
(bad)
mov
hlt
js
adc
jecxz
stos
daa
jo
fldcw
push
bound
mov
xchg
xlat
add
sar
scas
test
jns
es
ror
jno
outs
push
adc
sbb
into
adc
pop
jns
shrd
in
mov
jl
test
xchg
(bad)
in
repnz
mov
iret
push
pusha
inc
loope
mov
xchg
stos
and
les
loopne
in
repz
in
imul
icebp
out
fs
neg
out
adc
cmp
adc
sub
xchg
push
adc
les
jnp
dec
sub
mov
pop
test
pop
leave
or
test
mov
fwait
cmps
jle
pop
test
pop
dec
sub
js
ins
adc
xchg
and
int
jbe
ja
imul
sar
mov
fidivr
mov
fwait
rol
inc
iret
scas
pop
ds
shr
push
fnstcw
add
addr16
mov
shl
xchg
or
mov
daa
adc
mov
jae
iret
mov
or
loop
ja
imul
dec
pop
scas
ins
push
jl
test
pop
jmp
(bad)
and
movs
adc
es
shl
add
in
pop
mov
hlt
das
sub
dec
dec
inc
bound
dec
mov
or
or
in
mov
jmp
sti
jmp
mov
push
jmp
int3
mov
mov
fcomp
out
aas
lods
int3
call
les
ror
xor
push
scas
ficom
adc
out
pop
or
inc
lea
lods
xchg
xor
jge
iret
shl
mov
adc
mov
stos
(bad)
(bad)
inc
aas
scas
jle
popf
inc
or
lea
shr
call
xchg
mov
xor
outs
stos
mov
lea
repnz
in
jno
add
mov
popa
sahf
sbb
test
outs
cmp
pop
(bad)
lods
enter
pop
call
xor
mov
mov
mov
test
push
mov
xchg
scas
cmp
ror
jecxz
rcr
repnz
mov
mov
je
mov
scas
hlt
xchg
xchg
lea
lods
shl
sti
daa
fwait
xchg
ficom
sub
xchg
dec
dec
xchg
aaa
fnsave
mov
jno
aaa
les
mov
ja
sub
outs
pop
dec
xor
inc
or
les
inc
cmp
mov
mov
repz
ins
sub
mov
cmp
push
daa
inc
(bad)
aam
xor
mov
test
fwait
in
cmp
inc
cs
push
sti
(bad)
lock
popf
stos
cmps
iret
shl
mov
cmp
xchg
mov
cmp
shl
sti
mov
movs
cmps
sub
ss
es
(bad)
outs
pop
lods
(bad)
movs
stc
mov
addr16
mov
xchg
sbb
dec
cli
nop
mov
mov
push
popf
imul
pop
into
mov
test
and
dec
and
(bad)
or
imul
sbb
arpl
aas
mov
stos
mov
(bad)
dec
retf
test
pop
lahf
ins
imul
jbe
cmps
enter
std
sbb
int3
cmp
mov
(bad)
sar
dec
imul
cmps
imul
movs
(bad)
imul
lods
push
movs
cmps
push
sub
test
ins
movs
mov
mov
sub
mov
mov
retf
daa
outs
mov
nop
retf
les
and
rcl
(bad)
mov
push
aas
je
cmp
pop
jnp
stos
pop
mov
stos
jmp
mov
pushf
loop
lds
mov
sahf
fwait
lods
movs
sub
outs
xchg
fwait
mov
loop
mov
and
mov
arpl
out
jae
test
jno
std
push
mov
test
in
test
inc
cmps
mov
std
mov
xor
pop
cmps
mov
xchg
mov
and
lds
cdq
out
cmc
movs
movs
sub
(bad)
loop
mov
cdq
movs
mov
mov
test
aas
mov
xor
addr16
jmp
clc
cmp
sbb
xor
cld
xchg
stc
test
jns
sbb
rol
(bad)
mov
dec
bound
lds
dec
idiv
cmps
mov
daa
scas
cmp
sub
es
ror
jne
push
lea
lods
cmp
xchg
cmps
inc
mov
test
pop
lea
imul
(bad)
ss
push
mov
rol
sbb
add
jmp
outs
mov
sbb
add
jae
sub
adc
test
jae
and
push
fwait
mov
mov
test
sub
test
mov
mov
pop
pop
movs
clc
dec
es
pop
inc
xchg
imul
or
mov
popa
jl
mov
sub
mov
outs
sub
je
fmulp
pop
cmps
hlt
test
call
or
dec
cmp
or
bound
push
sbb
and
and
or
and
add
leave
stos
fwait
dec
mov
push
sub
stos
daa
test
out
test
sub
push
std
std
callw
ja
cmps
xchg
dec
in
mov
lods
cli
std
add
in
es
push
gs
inc
push
pop
xor
xchg
mov
jl
aaa
popa
mov
call
dec
gs
sbb
xchg
sbb
gs
outs
jno
cld
mov
ds
adc
and
and
push
xor
(bad)
or
popa
adc
cli
jbe
xchg
cmc
mov
mov
call
movs
xor
data16
stos
sar
jecxz
popf
outs
fsubr
xchg
scas
mov
daa
scas
or
cld
pop
add
clc
sahf
movs
lea
mov
adc
loopne
mul
xchg
cld
pop
or
stos
cld
and
and
cmp
mov
aaa
(bad)
lods
lea
dec
adc
cmp
out
inc
or
xlat
js
adc
or
jecxz
and
cmp
xchg
jno
ins
fwait
rol
sub
jle
loop
dec
addr16
clc
pextrw
jg
(bad)
mov
jo
jnp
mov
adc
mov
cmps
daa
sub
ins
mov
cs
or
(bad)
popf
call
sbb
scas
xlat
hlt
lahf
adc
cs
cmp
lods
test
in
mov
and
pop
cmps
mov
xor
push
(bad)
in
pop
ins
sti
pop
int3
mov
pop
retf
out
stc
mov
sbb
int3
mov
xlat
call
(bad)
es
lods
out
mov
mov
add
movs
fwait
sar
lods
pop
mov
inc
sub
fmul
xchg
stos
xor
in
mov
sbb
cmp
add
jmp
and
sub
dec
lds
cmp
jno
or
mov
cmps
rep
cmp
in
stos
jmp
inc
das
mov
jmp
fimul
xchg
outs
jo
mov
inc
aas
femms
or
jnp
(bad)
pop
mov
push
push
das
add
clc
mov
outs
retf
imul
inc
neg
dec
ins
push
sub
xchg
dec
push
mov
mov
mov
(bad)
push
outs
sub
imul
xchg
in
leave
dec
mov
sub
mov
outs
and
sub
(bad)
jle
movs
scas
daa
push
dec
adc
mov
pop
dec
mov
and
pop
cs
dec
push
mov
daa
cwde
pop
cmp
jle
dec
pop
cs
sub
iret
call
fimul
sbb
cli
push
fwait
and
push
cs
shr
psubusb
imul
mov
and
adc
pushf
mov
scas
push
sahf
xchg
ins
cmc
lock
gs
sbb
iret
aaa
push
mov
(bad)
mov
test
ss
(bad)
adc
in
ins
je
mov
lea
call
lahf
xchg
jg
mov
inc
sbb
rcl
mov
shr
out
or
cmps
lahf
ins
dec
sub
sub
fcomip
xor
fwait
lods
ja
dec
inc
hlt
dec
cmps
pop
cs
dec
push
jmp
outs
ficom
dec
push
cmps
ficom
mov
les
repz
inc
push
jle
xor
xor
int3
inc
push
cdq
iret
shl
xchg
mov
sub
stos
mov
bsf
fwait
lods
fwait
ds
sti
iret
mov
mov
ss
xchg
aaa
jns
and
or
jmp
(bad)
adc
(bad)
mov
mul
test
fwait
cmc
xor
scas
push
mov
arpl
inc
and
pushf
data16
and
mov
inc
push
out
outs
or
outs
sub
test
jge
int
mov
sbb
ins
and
xchg
mov
arpl
rcr
cmc
mov
pop
or
sub
je
lds
push
mov
cmps
xchg
or
aaa
mov
sbb
pop
pop
sub
push
in
inc
and
mov
cli
sahf
stos
adc
cs
pop
dec
sub
rcr
in
sbb
mov
sbb
jmp
push
dec
dec
push
scas
adc
(bad)
dec
xor
aad
ins
push
add
js
aam
mov
cwde
aad
mov
xor
cdq
aam
mov
mov
in
mov
mov
push
cs
push
cs
mov
ins
mov
lods
inc
inc
shl
not
xchg
add
out
sbb
xchg
push
outs
cmp
xchg
pusha
sbb
lock
xchg
aad
ins
cmps
cdq
push
inc
fs
xchg
xchg
mov
mov
or
jmp
pop
adc
mov
cmp
in
push
adc
dec
mov
mov
daa
aad
ds
or
inc
mov
jg
mov
jl
adc
stos
imul
daa
stos
lock
push
sub
mov
int
imul
ins
in
mov
das
leave
adc
test
in
nop
daa
test
imul
and
push
pop
cmp
mov
pop
and
cmps
mov
sub
cmps
mov
cs
or
cmps
jo
cmps
inc
inc
in
dec
shl
fldl2t
out
mov
or
or
test
pop
mov
add
aas
loop
adc
sub
and
scas
pop
mov
or
mov
inc
jmp
movs
jns
rcl
movs
and
movs
mov
shl
mov
pop
movs
and
jbe
mov
movs
inc
mov
pop
out
and
aad
mov
and
mov
push
retf
xchg
dec
ins
cmp
push
retf
(bad)
jmp
push
scas
pop
push
mul
or
mov
mov
(bad)
jp
xchg
jmp
and
inc
jmp
imul
imul
ficom
lds
mov
bound
or
xor
mov
inc
mov
aas
call
retw
les
xor
mov
in
adc
(bad)
xor
(bad)
dec
mov
adc
or
and
out
lods
mov
es
(bad)
pushf
mov
push
jg
mov
adc
jl
mov
dec
push
les
jmp
xor
mov
xchg
jnp
lods
push
mov
test
shr
pop
sbb
movs
push
push
cs
push
cs
mov
repnz
out
push
sub
aaa
adc
pushf
and
nop
mov
shr
outs
movs
lods
cmc
psadbw
xchg
sar
sahf
ss
stos
fwait
int3
pop
mov
jns
and
(bad)
fdivr
dec
mov
xor
push
and
jge
sub
out
add
inc
adc
mov
test
cmp
xchg
call
sbb
push
cmp
lods
test
sub
xchg
stos
js
rol
imul
test
pop
stos
mov
adc
(bad)
mov
int3
and
pop
jno
jae
mov
leave
mov
pop
mov
inc
mov
pop
js
ret
enter
cmp
or
aam
ss
test
int3
pop
cmp
ins
jns
adc
stos
nop
lds
mov
mov
sub
mov
add
pop
lods
cmps
retf
cmp
cmps
sub
jbe
push
jne
jno
cmp
pushf
push
mov
inc
in
imul
pop
out
js
bound
mov
fmul
sub
imul
retf
jne
pop
push
or
and
fs
(bad)
jnp
imul
jo
pushf
(bad)
jne
add
cli
scas
ins
mov
movs
mov
and
mov
push
xor
jb
aaa
dec
or
xor
dec
mov
fstp
(bad)
pop
add
popa
enter
(bad)
dec
aas
nop
sbb
int3
push
push
(bad)
pop
jp
in
leave
sbb
ret
pop
push
mov
push
int3
ret
pop
ins
mov
xchg
push
movs
pop
or
(bad)
lods
ins
sahf
daa
lods
cld
out
lahf
mov
add
sub
xchg
sbb
mov
push
dec
sub
sahf
cmp
or
(bad)
mov
fild
rol
lods
xlat
add
pop
scas
xchg
scas
xchg
sbb
add
sub
sbb
(bad)
fstp
test
cs
mov
stos
(bad)
imul
adc
call
(bad)
cmc
push
test
je
mov
mov
dec
xor
mov
pop
cs
dec
push
fimul
adc
int3
and
push
sub
inc
sub
cmps
or
ja
inc
add
dec
or
jp
mov
jg
mov
jle
js
(bad)
ja
adc
mov
jmp
scas
lea
push
stos
lea
push
bound
rol
test
mov
adc
pop
call
cmps
xchg
mov
push
js
xchg
stc
adc
fcomp
test
fistp
sub
mov
pop
stos
pop
mov
imul
mov
cli
sub
ret
repz
xchg
test
pop
push
dec
ds
in
ficom
aaa
repnz
and
aad
icebp
repnz
dec
mov
and
sub
pusha
daa
pop
sbb
repnz
xchg
dec
mov
add
dec
lahf
dec
fwait
rcl
mov
inc
push
dec
push
dec
xchg
mov
dec
(bad)
sub
inc
jecxz
je
cld
push
aaa
inc
mov
fstp
inc
inc
sub
mov
rcl
and
push
sub
xchg
aas
push
es
repz
iret
sar
and
inc
xor
xchg
imul
(bad)
pop
movsx
dec
je
or
pop
jg
cmc
aaa
jno
and
enter
(bad)
dec
repnz
jbe
cmps
pusha
ins
jo
aaa
mov
mov
mov
dec
xor
call
adc
sar
push
ds
dec
dec
aaa
icebp
cmps
dec
push
hlt
icebp
adc
mov
xor
or
push
mov
push
repnz
sahf
xchg
xor
ds
out
xor
pop
mov
jp
sbb
fs
imul
cdq
mov
cmps
fimul
cmp
mov
fdiv
je
or
push
ins
sub
inc
push
mov
mov
loop
(bad)
ins
outs
mov
add
mov
and
xchg
test
pop
push
cmp
jge
dec
aaa
adc
scas
(bad)
(bad)
ror
xchg
add
movs
mov
imul
test
and
and
outs
xchg
mov
lea
inc
push
or
fs
xchg
mov
mov
movs
push
gs
lods
mov
aad
fisub
frstor
lea
sahf
shrd
mov
mov
mov
mov
dec
or
addr16
and
popa
mov
mov
ja
je
ins
mov
sbb
(bad)
cmp
(bad)
aas
add
das
cmp
cmps
pop
dec
popa
in
repz
push
xor
ins
fisubr
xchg
pop
imul
fisubr
pushf
iret
(bad)
push
pop
and
enter
mov
sti
mov
xchg
push
jnp
cmc
xchg
ds
cmp
sbb
mov
sub
sbb
lods
mov
cmc
ss
cmps
and
pop
xor
ins
jne
and
push
jl
sbb
repz
mov
lahf
sub
test
mov
(bad)
push
aam
inc
xchg
lods
sub
(bad)
cmc
mov
xchg
mov
pop
or
mov
ins
push
or
imul
mov
movs
(bad)
xchg
inc
push
(bad)
ds
sbb
mov
movs
pop
and
enter
neg
test
pop
adc
jmp
mov
and
mov
mov
(bad)
pop
fst
push
jmp
ins
je
addr16
loop
popf
idiv
jmp
mov
addr16
test
mov
cmps
ins
jmp
ret
inc
add
sub
add
out
lds
jbe
es
sahf
lea
clc
mov
ret
jg
cmp
daa
test
inc
bound
jne
jge
clc
mov
xor
jo
fs
clc
cmp
movs
jl
xchg
lahf
mov
cmp
mov
imul
aas
dec
dec
shl
push
dec
(bad)
out
cmp
retf
es
mov
stos
test
ds
lea
imul
daa
mov
dec
mov
cmp
or
fistp
mov
imul
mov
rol
add
push
cmp
and
and
or
jnp
mov
dec
std
int
push
sub
repnz
icebp
cmc
ja
push
mov
out
inc
sar
xor
rol
push
and
dec
sub
inc
mov
mov
sub
dec
inc
jne
adc
mov
iret
jmp
inc
push
test
dec
mov
lahf
dec
and
inc
mov
aaa
inc
xchg
sti
pop
push
mov
mov
push
and
rol
mov
or
sub
rcl
inc
fiadd
std
mov
shl
(bad)
cmp
rcl
inc
jae
test
or
jbe
outs
scas
pop
scas
ins
adc
xchg
(bad)
mov
jo
fsubr
(bad)
leave
jo
test
call
mov
pop
outs
pop
add
or
iret
ret
mov
jno
out
adc
mov
mov
push
fcom
add
push
call
icebp
repz
iret
pop
lods
or
mov
pushf
cwde
outs
mov
and
or
pop
and
int3
call
idiv
push
cmp
sub
pop
nop
sti
mov
adc
pop
xchg
mov
sub
push
mov
iret
mov
push
mov
mov
mov
jns
mov
dec
jb
xlat
dec
mov
or
sub
mov
scas
nop
pop
pop
mov
icebp
pop
sbb
stc
mov
imul
push
lods
test
ret
outs
(bad)
pusha
mov
(bad)
pop
jl
xchg
and
jge
test
sahf
test
test
(bad)
(bad)
call
test
sar
mov
pop
sahf
add
inc
test
push
hlt
out
sti
or
jo
out
fisubr
mov
jmp
cmp
sub
jl
pop
pop
addr16
or
mov
daa
adc
pop
mov
dec
lods
sub
jb
or
push
jb
inc
cmp
(bad)
dec
inc
xchg
pushf
mov
jl
fwait
mov
daa
mov
leave
mov
sbb
je
mov
push
dec
jmp
sbb
and
cmp
out
call
clc
mov
pop
mov
mov
mov
ja
push
xor
retf
jmp
jp
add
xchg
iret
mov
das
xchg
jne
dec
retf
fiadd
inc
je
dec
stos
rol
cmps
mov
es
out
cmp
sub
or
hlt
popa
fisttp
mov
sub
sub
shl
adc
xchg
call
lods
gs
mov
mov
xchg
mov
mov
lods
cmps
test
stos
test
mov
jmp
and
iret
mov
cmp
in
fcmovne
cmp
clc
jp
loopne
mov
and
mov
jle
dec
mov
or
scas
xchg
mov
sub
dec
and
(bad)
and
mov
jmp
ins
pop
mov
jbe
or
mov
pop
pop
sahf
out
stos
bound
inc
sbb
and
loope
movups
fwait
test
fwait
sbb
sbb
jno
jne
fldpi
addr16
or
fidivr
jno
mov
test
sub
fcomp
dec
xchg
mov
and
int
aad
pop
movs
movs
out
cli
stos
(bad)
mov
cmps
inc
loope
add
sahf
scas
mov
lods
in
jns
jg
jb
cmp
adc
(bad)
gs
adc
in
(bad)
dec
and
in
mov
test
cmps
scas
adc
add
(bad)
mov
sub
or
adc
cmc
in
lods
mov
pop
loop
jno
shr
push
sbb
pop
mov
sbb
pop
mov
ret
popf
and
adc
xchg
sub
lods
ret
mov
outs
mov
xor
mov
ja
mov
test
mov
int3
lods
ret
popf
add
jno
outs
dec
jno
jno
sub
add
and
sbb
ja
mov
inc
dec
mov
daa
lods
xchg
dec
cmps
movs
call
cmp
scas
mov
scas
js
test
xchg
lock
mov
push
rcr
sub
in
cmp
or
lods
sub
jl
loope
adc
gs
scas
test
push
in
movs
mov
ret
jns
and
cs
(bad)
cs
data16
fidivr
push
sbb
push
add
xchg
fstp
mov
shl
push
xchg
cmps
into
pop
movs
imul
nop
mov
fimul
ja
ja
test
xchg
sti
pop
hlt
mov
jbe
push
in
mov
rcr
inc
push
mov
xlat
outs
inc
push
xchg
mov
mov
not
aas
xchg
xchg
iret
fsubr
dec
push
and
xchg
into
stos
les
scas
ins
in
stc
cmps
adc
rol
enter
cmp
jnp
test
sbb
arpl
xchg
aaa
mov
gs
jno
add
test
mov
pop
into
pop
(bad)
movs
outs
lods
loop
stos
mov
icebp
call
mov
mov
sub
or
stos
fcmovb
or
or
stos
and
retf
icebp
mov
mov
xchg
ret
sbb
and
adc
jg
stc
pop
pop
(bad)
gs
add
inc
imul
xchg
leave
pop
dec
stos
movs
mov
ins
mov
or
mov
xchg
mov
jmp
call
dec
rcr
adc
cmp
xchg
jo
cwde
(bad)
sbb
mov
xchg
jnp
jb
sub
push
mov
jne
mov
jg
mov
dec
mov
push
shr
popa
jg
arpl
mov
cmp
mov
(bad)
mov
mov
xor
add
(bad)
pop
sbb
das
leave
mov
ins
cmps
and
cmps
popa
ins
ins
xchg
xchg
test
or
adc
not
push
pop
mov
mov
xchg
xchg
std
mov
fnstenv
stos
int3
jmp
mov
popf
jmp
or
pop
ins
inc
or
mov
int3
dec
lods
jb
and
sbb
sbb
and
mov
fidiv
cmp
mov
popf
imul
js
pop
sub
outs
jg
mov
mov
inc
out
lods
out
xchg
mov
imul
jns
push
in
pop
xchg
repnz
imul
ins
call
shr
jp
scas
aas
test
mov
movs
dec
repz
mov
mov
lea
push
mov
scas
push
pop
ins
jmp
mov
(bad)
out
lds
mov
sub
jg
movs
out
sub
sub
movs
or
pop
mov
cmp
xchg
push
jno
jns
jns
and
adc
js
in
movs
jb
in
(bad)
jle
js
xlat
mov
mov
data16
mov
jbe
addr16
and
dec
(bad)
call
fs
mov
mov
std
dec
or
mov
xor
leave
dec
arpl
dec
mov
push
mov
lods
jmp
push
mov
and
dec
cwde
mov
clc
mov
sbb
test
ror
jno
dec
jb
xchg
cdq
dec
mov
test
mov
movs
dec
push
popa
(bad)
jle
mov
daa
cmc
lods
addr16
pusha
or
call
jno
inc
cmps
or
out
jmp
inc
sbb
adc
jge
push
repz
or
or
adc
push
fxch
(bad)
std
addr16
mov
sbb
(bad)
nop
xlat
(bad)
aad
pop
inc
dec
xchg
loope
dec
jo
adc
leave
in
popa
mov
das
std
xor
scas
fist
out
aas
mov
sbb
xchg
mov
jle
cmps
or
jp
fbstp
ins
imul
xor
pop
hlt
jb
push
ss
push
push
mov
ja
xor
outs
jle
pop
ins
mov
mov
mov
retf
xor
pop
pop
ficomp
aad
push
pushf
ret
(bad)
push
sub
scas
stos
sub
fstp
jae
dec
ja
ret
and
das
mov
movs
cmp
jnp
rol
jg
out
mov
stc
sbb
out
pop
or
movs
xor
imul
mov
pop
inc
retf
sub
sbb
sbb
pop
js
sar
inc
mov
inc
scas
loope
iret
sbb
(bad)
aam
call
shl
lods
mov
stc
(bad)
mov
jg
pop
lea
inc
(bad)
rcr
mov
adc
fldenv
ja
push
mov
add
pop
push
mov
cs
xlat
cmp
jecxz
in
mov
int
movs
in
adc
push
or
xlat
xlat
ffree
mov
shr
mov
mov
std
jecxz
loope
or
cmp
push
popa
loope
dec
int3
mov
sub
imul
jge
stc
xchg
mov
push
mov
dec
retf
mov
gs
mov
(bad)
icebp
xchg
sub
loopne
ror
mov
out
lods
aam
es
push
cmps
pushf
hlt
xlat
xor
cmp
fidiv
ret
and
fld
(bad)
in
fisttp
xor
test
lods
shr
in
in
scas
in
jmp
je
sub
mov
ficomp
xchg
or
imul
popf
jmp
cmps
in
sub
mov
cwde
xor
gs
jmp
outs
and
in
(bad)
xor
gs
stc
xor
adc
inc
pop
neg
cs
test
lods
dec
jle
fsub
imul
in
push
mov
iret
cmps
jmp
jge
out
fwait
scas
ins
jmp
lea
mov
arpl
jae
aam
mov
lock
mov
stc
les
push
xor
lahf
jl
jg
pop
fmul
mov
loope
es
jnp
movs
in
jnp
(bad)
in
cmps
cmp
aaa
shr
cmps
mov
xchg
ror
jmp
ins
push
or
mov
xor
pop
jl
in
jae
fisttp
and
xchg
iret
(bad)
ja
scas
shl
(bad)
jmp
in
cmps
shl
cmps
jo
mov
movs
mov
sub
sub
ret
and
pop
sbb
imul
lods
jle
adc
fisttp
daa
adc
mov
mov
push
test
xlat
les
aad
ret
adc
scas
mov
das
adc
jg
enter
add
adc
push
xor
jb
adc
jmp
cmp
mov
jnp
inc
cmps
in
cmp
mov
addr16
cwde
cmps
jl
imul
cmps
jmp
pop
jbe
mov
jecxz
enter
test
imul
pushf
ret
xor
sub
pop
outs
data16
int3
sub
dec
std
push
mov
out
imul
(bad)
pop
xor
nop
xchg
or
and
xor
mov
inc
aam
call
cwde
jmp
mov
cld
cmp
push
add
mov
mov
inc
sub
fnsetpm(287
cmc
or
mov
mov
push
out
ins
or
mov
out
mov
dec
jle
or
push
pop
cmps
ins
or
mul
push
dec
xchg
call
or
(bad)
xchg
(bad)
es
cmp
cmp
pop
sub
lods
cmc
lods
inc
dec
ins
mov
mov
jmp
or
fs
adc
cmp
pushf
push
out
jecxz
dec
movs
ins
xchg
aam
sbb
or
bound
jle
cmps
xor
ret
mov
aad
push
mov
xchg
scas
or
pushf
(bad)
in
int3
imul
ja
mov
inc
test
enter
bsf
pushf
jnp
retf
mov
pop
mov
sbb
dec
xchg
in
mov
lahf
inc
sub
imul
stos
ss
sub
pushf
in
xor
pop
jno
xchg
aas
(bad)
retf
push
add
dec
loope
mov
into
and
outs
out
aas
(bad)
(bad)
push
pop
sbb
or
aaa
imul
adc
daa
or
addr16
jecxz
aas
jge
aam
xchg
call
add
and
push
add
icebp
mov
lahf
sbb
les
leave
int3
dec
mov
popf
jnp
mov
rcpps
mov
sar
les
(bad)
mov
stos
mov
(bad)
push
shr
iret
jecxz
mov
(bad)
cli
cmc
arpl
fsubrp
sub
add
addr16
popa
mov
leave
ss
mov
cdq
scas
sub
mov
imul
xchg
lahf
out
nop
jmp
xchg
mov
cmp
addr16
mov
jnp
mov
out
sub
lds
sub
push
mov
cli
cmp
mov
test
jmp
xor
iret
test
stos
movs
jnp
xchg
or
or
mov
add
imul
xchg
jg
xor
cmp
cmp
shl
outs
into
inc
jmp
cmps
je
inc
test
sbb
adc
add
mov
aam
out
add
cld
mul
cli
lahf
imul
rol
in
push
inc
data16
inc
push
fcmovu
iret
inc
mov
push
adc
(bad)
push
scas
jo
or
push
mov
cmps
std
jb
sub
mov
jo
ds
xor
mov
cmp
repnz
jge
pop
xor
cmp
adc
mov
or
cmp
movs
ins
scas
or
scas
pop
ins
xchg
jnp
imul
cmps
popa
sub
ret
mov
in
mov
nop
mov
clc
and
ret
lock
in
mov
adc
lds
xchg
adc
lahf
xchg
aas
ins
mov
xor
scas
test
pop
adc
inc
xor
cmps
pop
xchg
jmp
xchg
ins
aaa
imul
jg
mov
hlt
sbb
mov
mov
test
lea
ins
mov
stos
imul
out
jg
sub
pop
jno
out
mov
hlt
(bad)
movs
call
clc
mov
fisttp
mov
xchg
movs
in
push
scas
push
lods
test
add
jno
es
add
aaa
out
scas
arpl
and
js
retf
lods
mov
stos
out
and
not
pushf
ins
addr16
scas
mov
xor
(bad)
jnp
repnz
fcomp
jmp
rcr
adc
inc
adc
out
loopne
and
test
in
stos
push
ja
cmp
mov
jp
cmps
pop
out
scas
dec
mov
je
into
sti
and
pop
cli
jno
loopne
cmp
add
sub
jmp
(bad)
cmp
movs
test
xchg
pop
add
pop
nop
push
(bad)
mov
mov
jne
push
pop
push
adc
push
or
(bad)
jns
adc
in
jle
imul
dec
mov
call
and
sub
ret
test
adc
fdivr
fimul
mov
and
or
push
pusha
stc
cli
sbb
(bad)
aaa
xchg
fadd
push
jecxz
mov
call
mov
mov
push
aas
push
call
repnz
cld
xchg
mov
fsubr
mov
fwait
loope
leave
xchg
mov
js
popf
pop
(bad)
iret
ins
pop
loope
push
test
mov
mov
in
ins
aam
loope
mov
pop
fs
stos
and
mov
out
(bad)
and
push
(bad)
ficomp
adc
fstp
icebp
jecxz
jmp
xchg
sub
sub
xchg
fwait
pop
arpl
xor
imul
js
and
push
mov
test
and
aaa
xchg
mov
push
test
cli
scas
xchg
ret
stos
sbb
test
adc
inc
mov
mov
mov
or
pop
ins
jnp
ror
icebp
stos
bound
xchg
cmc
je
movs
adc
neg
pushf
rcl
add
mov
push
ja
pop
mov
stos
adc
out
repz
sub
lods
fcomip
aad
mov
repnz
xchg
ja
push
push
(bad)
xchg
sti
ror
in
lods
test
pop
loopne
icebp
neg
in
sbb
ds
fwait
adc
dec
cld
(bad)
retf
(bad)
movs
(bad)
cmp
xchg
adc
clc
mov
sub
pushf
ret
stos
push
mov
add
dec
push
stos
push
shl
hlt
test
pop
mov
ret
sbb
scas
mul
lods
div
mov
lea
pop
or
or
ret
push
loopne
or
data16
or
xlat
aas
and
sahf
xsave
cmc
jl
dec
mov
idiv
xchg
and
daa
test
jno
push
jg
pop
ret
dec
and
jg
js
mov
adc
pushf
jo
jae
push
mov
int3
sub
lahf
repnz
push
fimul
ss
adc
mov
or
sub
mov
in
mov
ret
mov
mov
out
call
in
pop
out
dec
or
fs
fs
adc
dec
in
repnz
xor
in
cmp
and
dec
stos
or
mov
jge
cmps
sbb
test
daa
cmp
test
xchg
mov
(bad)
imul
(bad)
aaa
xchg
and
mov
jp
cmp
push
xchg
mov
jne
sbb
mov
and
xchg
mov
outs
jp
mov
jnp
out
shr
jge
call
dec
stos
jg
jae
dec
jns
dec
mov
out
call
je
scas
push
(bad)
jae
push
jno
sbb
mov
cmps
leave
call
push
jo
mov
ins
nop
(bad)
mov
(bad)
retf
mov
call
fiadd
mov
jg
xchg
sub
(bad)
push
jno
sub
xchg
xchg
outs
cld
test
cmp
(bad)
push
jle
in
mov
fsubr
ss
minps
cmp
jle
movs
out
jnp
dec
outs
jg
ins
sub
(bad)
dec
jge
cmps
xchg
scas
xchg
jmp
and
and
xchg
aas
outs
add
jno
and
(bad)
ins
fs
mov
sub
xchg
sub
fwait
xchg
in
fdivr
cmps
imul
cmp
lock
js
loopne
retf
int3
cdq
imul
pop
js
hlt
js
cmps
out
mov
jecxz
inc
pop
push
hlt
xor
mov
mov
cmp
jp
in
mov
into
mov
ins
ja
ja
mov
push
pop
jb
pop
aam
(bad)
(bad)
adc
push
mov
push
jmp
test
imul
fdivr
js
and
gs
cmps
mov
scas
cdq
mov
ja
out
and
pop
fs
mov
outs
mov
ja
ins
xchg
pushw
mov
mov
push
pop
xchg
pop
in
push
pop
movs
out
jno
push
pop
mov
sahf
push
add
or
cdq
nop
aad
(bad)
mov
cmps
fwait
mov
scas
dec
out
or
mov
or
push
popa
scas
push
das
xlat
movs
xchg
or
mov
push
call
pop
mov
pushf
mov
sub
jecxz
sbb
aaa
aas
mov
nop
cmps
mov
mov
daa
mov
mov
push
(bad)
xor
xchg
test
sub
scas
cld
mov
sub
(bad)
push
mov
fdivr
mov
hlt
sbb
inc
cwde
sbb
cdq
sbb
mov
pop
sub
mov
(bad)
mov
fwait
inc
mov
iret
mov
lahf
xchg
loopne
ins
pop
daa
addr16
cli
mov
addr16
lahf
mov
mov
ins
aas
jb
(bad)
in
ret
jnp
dec
adc
in
fsubr
xchg
rcl
or
xchg
sub
stc
mov
stos
cli
(bad)
es
enter
cmp
add
outs
mov
sbb
call
add
add
ss
ins
cmp
cld
ret
mov
mov
xchg
in
sub
pop
jl
out
cs
jp
fwait
hlt
pop
(bad)
scas
xchg
(bad)
jl
or
sbb
pop
(bad)
(bad)
xchg
lods
inc
movs
xchg
inc
mov
xchg
popa
test
fs
aam
ins
lea
mov
mov
(bad)
test
scas
rcr
cmp
fld
sub
cli
xchg
(bad)
sub
div
adc
test
es
jbe
cmp
push
int3
pop
cmp
xchg
jmp
lock
repz
ins
ror
pop
jl
add
lahf
aaa
ins
sub
mov
sub
imul
iret
addr16
jle
mov
loop
jne
je
and
fwait
repnz
es
fadd
bound
out
pop
hlt
pop
adc
push
xchg
jmp
xor
jge
mov
shl
nop
fnstsw
les
jg
(bad)
ins
mov
mov
xchg
jne
lahf
mov
(bad)
aam
mov
mov
pop
mov
mov
cmps
dec
jg
sub
inc
mov
dec
(bad)
pop
js
emms
push
(bad)
mov
jne
dec
scas
inc
sub
popa
adc
inc
sbb
jmp
icebp
inc
test
push
xor
es
(bad)
dec
scas
sbb
shl
ror
mov
mov
stc
aam
scas
mov
daa
sbb
in
mov
call
stc
test
test
out
leave
cs
mov
cmp
pushf
adc
lods
jle
lahf
and
pop
mov
pop
scas
test
(bad)
cli
sahf
cmp
or
movs
pop
mov
jmp
les
movs
fisub
push
jb
mov
or
sub
sub
mov
lods
clc
mov
xchg
adc
(bad)
and
jg
aas
aaa
daa
(bad)
dec
lods
lea
and
jne
(bad)
mov
cmp
sbb
sub
pop
fld
or
mov
neg
push
out
std
add
xchg
and
xor
in
stos
dec
mov
sbb
or
jae
fs
push
jo
sbb
or
out
push
mov
mov
mov
cmp
mov
in
push
mov
xor
cli
pusha
jle
sbb
mov
xchg
outs
ins
outs
sbb
outs
movs
inc
mov
loope
dec
and
lea
std
mov
scas
cvttps2pi
ds
lods
lahf
int3
(bad)
fcmovbe
adc
into
xchg
ret
mov
mov
lods
add
pushf
sbb
or
mul
aas
mov
test
gs
cmp
arpl
test
cmp
add
and
add
jmp
jmp
mov
int
jno
mov
sub
push
cld
xchg
test
pop
pushf
es
mov
gs
mov
ret
(bad)
adc
mov
mov
lahf
pushf
iret
dec
mov
sub
rcl
aas
ins
cmps
imul
cmps
cs
(bad)
mov
sysenter
adc
add
fmul
inc
shl
scas
test
scas
sbb
mov
pop
jp
cmp
bound
mov
das
mov
sub
cmps
movs
lods
mov
ds
or
add
cmp
mov
or
push
ret
cmp
movs
inc
and
ficomp
mov
popf
mov
add
or
stos
or
xchg
call
mov
pop
add
mov
inc
lods
imul
gs
or
or
cld
jo
fidivr
es
adc
mov
in
xor
dec
jae
xchg
cmps
repz
push
mov
jmp
(bad)
stos
mov
sbb
mov
test
nop
aam
pop
push
call
popa
add
stos
xchg
not
pop
push
js
mov
lock
xchg
jae
jmp
add
aaa
loope
add
or
pop
mov
in
popa
loop
inc
loopne
in
or
mov
es
push
sub
arpl
icebp
push
add
mov
lods
jg
cmps
js
mov
int3
inc
or
mov
mov
add
pop
sar
sbb
in
sub
push
fst
mov
dec
dec
std
addr16
jp
jge
out
and
int3
test
icebp
mov
mov
fwait
(bad)
out
inc
gs
rcr
(bad)
lods
loope
test
stos
fs
mov
(bad)
fld
fiadd
inc
sar
xchg
fld
(bad)
aad
ins
cmp
fst
add
adc
sbb
and
sub
jg
pusha
xor
ds
jmp
sbb
js
sbb
push
mov
mov
push
sub
sub
in
stc
icebp
lods
leave
and
xor
ins
xchg
in
pop
jmp
push
cmp
(bad)
inc
mov
mov
fdiv
aad
mov
dec
cmp
dec
arpl
mov
add
pop
push
or
in
ds
stos
xor
and
ins
(bad)
icebp
mov
mov
sub
jnp
pop
cmps
movs
icebp
enter
pop
push
mov
inc
mov
adc
scas
push
(bad)
hlt
xor
add
sti
js
scas
pop
(bad)
mov
mov
or
out
test
mov
xchg
mov
inc
mov
sub
cmps
cmp
sbb
fwait
push
add
addr16
mov
mov
adc
push
adc
xchg
mov
or
(bad)
jge
daa
jp
add
sti
sub
jle
aas
imul
stos
gs
inc
test
(bad)
cs
pop
add
cmps
add
stc
push
jo
and
ss
jg
mov
pop
xchg
lods
mov
sti
loope
int3
stos
cmp
imul
or
add
mov
mov
push
out
ret
imul
stc
dec
aas
cmp
jecxz
loope
lods
daa
stos
popa
js
test
xchg
mov
ret
jmp
pop
jnp
fisttp
mov
cmps
dec
lea
and
stos
adc
add
push
outs
add
or
out
cmp
loope
cmp
xchg
je
dec
cmp
xor
mov
fs
movs
iret
pop
mov
sub
jmp
(bad)
sub
and
adc
jns
xlat
xor
pop
fdivr
cmps
dec
arpl
mov
pop
popf
fwait
push
mov
inc
jmp
jne
ja
cmp
cmp
add
add
lahf
jl
in
cli
inc
pop
clc
add
xchg
inc
ret
or
pop
jecxz
pusha
inc
(bad)
mov
xchg
rcl
add
rcl
mov
stos
cmps
stos
(bad)
(bad)
in
push
pop
sbb
aam
or
ins
add
add
dec
shl
push
jae
fdivr
ins
mov
int3
mov
or
push
gs
inc
fcom
push
push
add
ins
jecxz
lahf
aaa
arpl
inc
addr16
jmp
push
mov
sub
movs
cmp
add
dec
(bad)
retf
inc
jb
aas
mov
push
xchg
mov
stos
das
push
push
add
das
mov
adc
cmp
daa
sub
sub
aad
or
clc
ror
cmps
adc
push
mov
jnp
fld
movs
aam
(bad)
cmps
pop
mov
clc
adc
daa
rsm
stos
ret
mov
lahf
(bad)
mov
cmps
(bad)
mov
rcl
mov
pop
out
mov
mov
test
int
adc
popf
sbb
sbb
jnp
push
clc
mov
push
outs
sub
fwait
comiss
cs
jl
in
inc
ins
and
(bad)
fld
or
cli
xchg
pop
daa
hlt
shr
dec
push
les
pop
push
push
push
cmp
inc
hlt
lea
push
fs
dec
mov
dec
dec
(bad)
jbe
popa
ret
push
pusha
sub
pop
pop
stos
pop
fwait
mov
mov
retf
jp
xchg
(bad)
jl
iret
mov
pop
push
jb
cld
ins
sbb
and
jnp
xlat
cmc
mov
xchg
js
xor
imul
pop
pop
mov
mov
mov
out
push
fs
ret
mov
sbb
in
push
or
hlt
xlat
pop
push
and
mov
mov
cmps
or
std
push
xor
mov
pop
popf
mov
mov
mov
ja
movs
std
int
in
shl
jne
in
(bad)
adc
mov
rol
mov
aad
mov
cmp
pop
adc
add
les
xchg
mov
mov
cmps
data16
cld
push
stos
push
mov
das
mov
mov
les
in
adc
icebp
fld
repnz
in
dec
cs
xchg
jmp
shl
rol
cmp
neg
mov
movs
(bad)
fldenv
in
loope
stos
in
rcr
mov
xlat
push
pushf
lods
lds
fnstcw
xor
aad
scas
pop
sub
hlt
lods
mov
ins
add
pop
sub
lea
movs
pop
fs
aas
mov
mov
gs
pop
jp
adc
mov
stos
ss
xchg
jge
loop
pushf
lds
jb
xchg
or
data16
mov
ficom
mov
scas
xlat
out
ss
iret
ret
mov
cmp
add
sahf
sahf
std
test
in
and
pop
xchg
mov
movs
clc
mov
xchg
stc
lods
in
lods
in
int
psubd
push
sub
daa
or
push
icebp
xor
test
mov
(bad)
ins
xor
jne
fistp
jge
lahf
pop
das
mov
es
daa
mov
das
push
sti
adc
sub
cmps
xor
rcl
shl
pop
dec
sub
sbb
(bad)
xchg
adc
je
mov
popa
out
xchg
data16
shl
xchg
das
ins
mov
hlt
call
mov
scas
mul
cmps
in
jbe
push
scas
pop
adc
out
mov
xchg
xor
pop
sbb
push
adc
mov
pop
mov
jmp
sbb
cmps
(bad)
cdq
inc
clc
xor
xor
xor
dec
out
xor
xor
sub
test
mov
clc
sub
jle
imul
add
jmp
in
mov
or
jbe
jbe
pop
lock
stc
and
dec
push
pop
push
adc
mov
inc
inc
sub
mov
(bad)
pop
mov
hlt
fwait
jo
lahf
in
sbb
sub
mov
fs
dec
cmp
inc
pusha
sbb
(bad)
sub
mov
into
(bad)
cli
pop
cmp
lahf
pop
cmps
sbb
add
xchg
push
pop
repnz
mov
sub
inc
cmp
(bad)
sub
sbb
mov
inc
dec
jmp
lahf
dec
sbb
inc
lahf
pop
cmps
aaa
pop
jno
dec
jb
fwait
add
(bad)
mov
inc
mov
call
mov
sbb
adc
sub
test
pop
mov
pusha
outs
retf
sbb
lds
or
mov
ins
pop
ficom
jb
clc
jle
cli
ds
std
and
out
jnp
cmp
sub
lds
jns
sbb
add
pop
pop
shr
popf
pop
int3
xor
jnp
cld
push
int3
mov
leave
pop
jno
dec
or
lahf
out
cli
mov
dec
jbe
dec
into
retf
fdivr
cwde
mov
sbb
test
pop
add
hlt
dec
test
aas
outs
add
imul
dec
pop
pop
test
dec
push
pop
pop
mov
fs
xor
pop
xchg
into
gs
pop
cmp
retf
jns
pop
push
imul
adc
(bad)
push
add
pop
and
dec
mov
push
or
push
pop
pop
aad
pop
add
push
dec
test
and
mov
repz
pop
out
dec
jmp
add
gs
pop
sub
dec
test
aas
outs
add
pop
pusha
outs
sbb
pop
fstp
movs
sub
pop
or
pop
jne
out
movs
adc
je
ins
xor
cdq
pop
dec
adc
repnz
ret
jp
outs
je
add
fwait
mov
leave
jne
ins
or
mov
cdq
inc
ins
adc
loope
adc
jns
pop
lods
push
sbb
test
sub
mov
div
std
adc
out
mov
js
xor
dec
xchg
adc
mov
jmp
adc
aad
lahf
mov
stc
jno
push
mov
ins
call
push
sbb
sahf
(bad)
mov
adc
call
ds
scas
rcl
ins
outs
or
inc
and
jns
icebp
dec
std
cmp
mov
push
xchg
ins
outs
push
test
mov
cdq
add
add
scas
shl
ins
js
test
cmp
pop
out
fidivr
inc
jmp
or
scas
and
mov
jnp
inc
sbb
jmp
ins
je
mov
mov
pop
inc
(bad)
pop
inc
push
out
or
cmp
outs
mov
jg
inc
sub
cmps
test
call
in
ror
pop
sbb
jle
movs
out
adc
jb
mov
sbb
lea
(bad)
ss
mov
xchg
cli
sbb
js
test
scas
sahf
and
cmp
jnp
mov
sub
stos
and
adc
in
(bad)
cmp
loope
cmp
outs
arpl
pop
mov
out
dec
in
nop
movs
mov
addr16
pusha
xor
lock
sub
push
test
out
dec
out
push
stos
aam
xor
dec
movs
shr
sub
lods
les
jnp
sub
sub
ds
setnp
xor
aaa
mov
mov
imul
inc
out
mov
mov
lods
mov
pusha
adc
push
cs
int
bound
push
jmp
mov
push
(bad)
mov
(bad)
stc
out
jmp
in
nop
cmps
bound
sahf
jb
rcr
xor
and
aas
gs
mov
in
pop
cmc
stos
mov
stos
sub
mov
cmp
and
jmp
jp
sti
stc
cmp
test
js
daa
mov
popf
outs
scas
imul
add
jmp
iret
sub
neg
(bad)
mov
dec
in
scas
jo
bound
inc
xchg
cli
inc
(bad)
mov
popf
cmps
add
pop
jmp
dec
ja
push
push
xor
push
cmp
push
mov
and
pop
jne
sub
mov
mov
repz
and
daa
or
(bad)
pop
addr16
mov
mov
and
call
das
les
retf
xor
xchg
pop
jae
fstp
push
aad
shr
cli
push
xchg
inc
sub
popf
xchg
lods
movs
scas
xor
lahf
xchg
mov
out
jno
or
(bad)
stc
jmp
and
sub
arpl
or
(bad)
and
sub
jg
(bad)
cmp
xlat
fstp
lods
mov
(bad)
call
sbb
std
in
(bad)
jmp
loope
pop
pop
sub
daa
ficom
sub
cmps
mov
ret
movs
fsubr
ss
int
xlat
sbb
add
fwait
imul
mov
rol
and
cmp
out
movs
in
inc
or
loop
cmps
ret
jnp
inc
sub
retf
jmp
stos
imul
test
stos
and
dec
pop
fld
cmp
jno
jnp
cmp
ja
jmp
fistp
retf
cmp
enter
int3
enter
mov
cmps
vpmaxub
bound
outs
es
stos
add
sbb
daa
cmp
and
mov
adc
mov
leave
sub
mov
mov
sub
cs
and
in
mov
aas
ror
adc
hlt
xchg
or
sub
addr16
inc
mov
lods
out
push
pop
pop
and
mov
and
movs
imul
inc
retf
sub
mov
(bad)
mov
xchg
int3
lds
mov
stos
int
mov
jge
inc
lods
and
mov
adc
jp
mov
push
add
adc
push
jecxz
jno
xchg
and
aaa
sub
(bad)
shl
iret
loopne
adc
out
dec
(bad)
cmps
push
fwait
adc
test
lds
push
int3
dec
adc
mov
inc
lds
cmp
mov
mov
sbb
scas
xlat
jne
lahf
mov
and
nop
js
or
cmp
sbb
mov
xor
movs
mov
mov
and
movs
pop
mov
push
mov
(bad)
popa
dec
mov
mov
adc
xchg
and
cmp
mov
mov
fadd
xchg
mov
int3
lods
(bad)
cmp
(bad)
mov
std
mov
adc
in
arpl
int
cmc
(bad)
mov
ins
(bad)
je
loope
jnp
aas
out
sar
xbegin
fdivr
or
icebp
mov
sbb
rcl
sbb
es
pop
int3
nop
adc
pop
xchg
sbb
lds
inc
inc
or
test
mov
adc
or
add
pop
repnz
dec
(bad)
cs
scas
add
clc
inc
mov
adc
loop
mov
(bad)
fidivr
push
jnp
stc
mov
cli
lds
es
test
test
test
sub
lds
in
pushf
shl
add
aam
bound
xchg
adc
inc
mov
xchg
mov
imul
mov
inc
cmps
aaa
(bad)
xor
mov
mov
cdq
arpl
jmp
(bad)
jle
dec
popf
xchg
(bad)
sub
jg
(bad)
mov
aam
pop
inc
int
push
(bad)
mov
mov
scas
test
inc
popf
call
es
xchg
fwait
push
and
arpl
jmp
lods
jae
xchg
add
xchg
stos
xor
ss
int3
outs
stc
rcr
jl
idiv
shr
in
call
jno
rcl
adc
jns
dec
mov
arpl
push
xchg
xchg
adc
xchg
test
cld
adc
(bad)
sbb
xchg
add
pop
pop
movs
xchg
and
sub
mov
jne
les
sub
shl
push
cmp
jbe
cmp
mov
and
xchg
jne
pop
xchg
or
(bad)
lahf
call
jl
aad
sub
and
call
cmp
shl
sub
mov
in
in
sahf
test
(bad)
xchg
jnp
es
pop
outs
or
not
inc
das
imul
shr
jnp
ret
mov
and
cmps
mov
add
mov
les
aam
mov
jle
scas
jge
pop
jg
or
adc
inc
push
lods
es
mov
lods
fsub
stos
mov
or
adc
iret
test
add
enter
retf
stos
aaa
inc
cmp
aaa
stc
movs
inc
(bad)
pop
fbstp
mov
pop
sub
rcl
sbb
sub
lods
fisubr
cmps
inc
push
xchg
or
test
sbb
ret
jle
sahf
je
test
xchg
adc
test
inc
mov
mov
jle
(bad)
jle
pop
cmc
or
sbb
sbb
mov
test
sub
inc
cmps
scas
imul
test
cmp
rol
xor
rcr
cmp
dec
movntps
in
dec
sbb
jmp
pop
cwde
cmp
adc
test
xor
test
pop
push
aas
in
cs
imul
mov
(bad)
mov
push
iret
sahf
mov
cmp
xor
fwait
enter
or
mov
cmp
or
mov
and
cld
std
je
dec
call
cld
or
sahf
xchg
or
add
movs
popf
or
mov
fwait
add
mov
int
js
add
cmps
sti
xor
call
div
sub
shr
push
jmp
add
mov
xchg
cld
xchg
fcom
sub
daa
or
shr
ins
sbb
xchg
int3
psrlq
mov
imul
mov
imul
add
or
shl
cmps
outs
ror
je
mov
scas
nop
adc
and
mov
movs
lods
jns
xchg
gs
das
rcl
or
push
jae
fwait
adc
adc
jmp
aas
aam
ins
pop
mov
pop
xchg
and
cmp
in
ja
mov
mov
inc
test
sbb
nop
les
jnp
gs
test
cmc
fisttp
cmps
mov
aam
call
ins
inc
aam
retf
aam
loop
xchg
xchg
or
mov
addr16
pop
daa
mov
mov
repnz
popf
aad
jp
or
dec
clc
adc
mov
mov
dec
cmps
inc
mov
adc
mov
or
jg
cs
and
dec
jns
scas
sub
mov
stos
mov
cmps
fcom
ficom
or
mov
mov
inc
enter
or
ins
addr16
mov
ja
fldcw
mov
aas
lahf
jmp
push
fsub
aas
aam
addr16
push
aam
mov
mov
pop
cs
and
cld
test
mov
lods
cmps
call
dec
add
pop
leave
mov
mov
inc
xchg
loopne
out
and
mov
sub
loopne
jl
adc
(bad)
into
retf
(bad)
sub
(bad)
stc
into
mov
cmp
pop
(bad)
mov
jp
pop
aad
lods
or
aam
je
imul
je
lds
adc
mov
test
jnp
retf
lahf
jbe
cmp
mov
pop
xchg
test
ins
(bad)
dec
sbb
repnz
lods
mov
data16
daa
(bad)
jmp
pop
sbb
sbb
popa
jmp
mov
adc
addps
xchg
(bad)
mov
inc
push
outs
sub
push
test
xchg
daa
out
xlat
dec
addr16
mov
dec
sahf
ja
in
sub
out
in
fnstsw
push
push
sub
push
cmps
and
xchg
dec
add
lea
xchg
(bad)
add
pop
inc
xlat
mov
jne
(bad)
jl
lods
pop
das
movs
mov
push
punpckhdq
shr
pushf
fsub
ret
and
retf
aaa
mov
aad
(bad)
lds
pop
add
jg
push
mov
scas
sub
mov
mov
fstp
fwait
pushf
scas
or
popf
mov
in
fwait
js
or
bound
out
iret
cmp
sub
push
xor
fnstenv
fs
imul
lds
cmps
or
out
cmp
cs
mul
jno
pusha
sbb
adc
div
jno
enter
cwde
bound
mov
and
mov
mov
js
scas
adc
dec
test
xchg
cmc
int
adc
in
mul
cmp
sti
dec
(bad)
push
rdtsc
data16
mov
aas
popa
test
scas
arpl
xchg
leave
push
push
jmp
cmp
shl
or
add
inc
std
test
nop
dec
mov
iret
mov
mov
push
mov
in
dec
mov
std
mov
div
in
mov
rcl
mov
test
ins
xlat
and
in
movs
(bad)
pushf
enter
push
sbb
jno
out
dec
addr16
mov
xchg
test
xor
mov
imul
lods
scas
inc
repnz
inc
xchg
es
adc
or
scas
cs
popf
xchg
in
pop
cmp
sub
arpl
xor
nop
or
mov
sbb
xor
aam
dec
(bad)
mov
out
popf
out
mov
sbb
addr16
outs
mov
movs
push
dec
mov
imul
imul
lock
imul
gs
jbe
cmp
jo
sar
xchg
popf
push
repnz
cmps
popf
inc
lahf
loope
test
out
xchg
fsubr
jo
pop
jle
stc
inc
fnstcw
cmp
data16
xor
inc
call
ins
shl
(bad)
push
popf
push
test
lahf
ins
sub
aam
fwait
mov
lods
jmp
adc
jecxz
jmp
jg
gs
ficom
or
cmp
mov
lods
in
out
jb
pop
je
test
scas
loopne
pop
and
cmp
lods
cs
das
fwait
popa
pop
jge
or
jb
dec
ret
push
mov
hlt
pop
ss
adc
fild
dec
ss
retf
mov
xor
xchg
outs
mov
xchg
sub
jge
fstp
add
dec
inc
sub
popa
mov
pusha
fwait
retf
or
(bad)
sub
loope
and
push
(bad)
out
mov
aaa
call
push
movs
test
stos
sub
scas
cmp
pop
adc
in
popf
pop
jg
xchg
cmps
xchg
bound
frndint
int
es
loopne
cmp
fsubr
fwait
jbe
popf
xchg
popa
scas
outs
inc
xchg
(bad)
scas
push
daa
idiv
xor
js
addr16
cli
inc
or
mov
adc
pushw
push
jmp
mov
ret
and
add
pop
lahf
mov
xchg
jae
add
fwait
mov
sahf
js
adc
fwait
repnz
cmp
popf
retf
jle
aam
cmp
ins
es
retf
dec
pop
jbe
aad
mov
cmp
or
pop
test
outs
xchg
mov
mul
push
movs
js
pop
ins
stos
lahf
and
jns
daa
and
in
pop
dec
inc
outs
rcr
daa
sbb
inc
mov
in
jg
and
lahf
jecxz
xchg
cmp
ret
add
(bad)
jbe
mov
or
ror
xor
lea
es
jmp
lea
dec
add
arpl
out
jo
jg
jno
jge
ror
cld
add
push
mov
fdiv
mov
test
mov
adc
retf
enter
xchg
in
and
sub
cmps
inc
leave
gs
sub
add
cmc
mov
out
mov
js
pusha
ficom
fist
mov
stos
pop
jae
mov
mov
pop
stos
inc
popa
push
mov
into
data16
and
pop
inc
dec
sub
lods
mov
xor
cmp
fs
or
sub
(bad)
stos
fidivr
mov
or
push
fnsave
je
jmp
and
gs
mov
jno
imul
movs
add
dec
test
arpl
imul
jnp
ret
(bad)
js
outs
scas
fs
aam
es
jle
jg
retf
adc
push
test
or
ret
outs
mov
mov
imul
stos
sub
pop
jnp
jae
xlat
lahf
adc
in
mov
push
lods
pmullw
xchg
mov
outs
mov
push
pop
movs
push
cmc
and
aas
push
push
inc
push
popf
mov
aaa
jb
lods
pop
inc
daa
leave
and
mov
bt
pop
cmps
adc
sbb
ds
and
xchg
jmp
push
mov
aaa
cld
mov
ficom
xor
jmp
sub
sbb
arpl
nop
mov
jmp
mov
js
lock
sub
jnp
ret
das
test
pop
arpl
push
jl
loopne
jg
call
xchg
stos
mov
fistp
push
shl
fwait
dec
sbb
stos
sub
mov
cmp
mov
pop
aas
inc
jge
(bad)
xchg
mov
sbb
adc
outs
mov
out
data16
push
cli
repz
push
lods
daa
and
aas
dec
fs
out
addr16
and
fild
call
mov
mov
and
pop
xlat
sub
cmp
fisttp
and
xchg
stc
push
dec
inc
inc
pop
call
popf
mov
jbe
mov
fstp
mov
pop
jecxz
loop
in
xchg
mov
in
ret
xor
cmp
das
rcr
lods
fst
cmc
and
or
and
push
fs
ins
sar
or
sub
push
xor
mov
aad
repz
and
scas
(bad)
or
loop
in
lds
jmp
mov
arpl
mov
leave
and
sbb
mov
dec
dec
mov
rol
push
push
mov
stos
movs
sub
mov
out
out
lods
es
xchg
sahf
into
pop
cmp
push
leave
cmp
cmp
inc
cmps
mov
mov
sar
cmp
rcr
int3
pop
rcr
jg
mov
mov
repnz
fs
outs
dec
retf
stc
dec
mov
mov
mov
ins
fild
lods
js
adc
jmp
mov
fwait
mov
fistp
jae
pop
addr16
repz
ja
enter
mov
cmps
mov
std
retf
mov
add
aaa
and
and
dec
in
mov
stos
and
setae
xor
cmp
popa
ret
push
sbb
stc
sub
xchg
icebp
xchg
adc
mov
cmp
aam
or
pop
adc
or
icebp
jmp
mov
sub
sbb
xchg
jmp
xchg
pop
stos
sbb
out
adc
mov
mov
cmp
repz
sub
ficomp
push
(bad)
mov
mov
mov
(bad)
es
mov
in
pop
or
mov
pop
pop
cmps
(bad)
mov
xchg
xchg
cld
lds
cmp
mov
addr16
imul
pusha
ja
xchg
shl
adc
push
ins
xchg
or
ins
sbb
in
dec
sbb
loope
outs
sbb
cmps
data16
or
xor
inc
mov
push
jp
stos
ja
push
jns
dec
push
xor
push
lahf
mov
cli
(bad)
idiv
bound
out
sahf
adc
inc
push
xchg
stos
dec
push
(bad)
ja
mov
jg
push
mov
or
addr16
test
inc
out
jge
std
out
jl
outs
and
imul
sub
mov
in
add
fstp
pop
ins
and
out
aas
test
pop
cmpxchg
jg
lahf
mov
sar
cmp
stos
mov
cwde
mov
sbb
repz
mov
ins
mov
xor
xchg
popf
mov
cmps
stos
and
cmp
loop
xchg
data16
sub
rcl
mov
inc
es
xchg
sub
inc
(bad)
out
jg
and
mov
inc
add
mov
push
std
dec
addr16
jg
sbb
pop
push
test
xchg
fucom
mov
sub
jmp
(bad)
adc
out
jle
ds
ss
aad
(bad)
lea
pop
sbb
mov
stos
test
addr16
call
pop
mov
daa
push
lock
dec
mov
or
stos
fdivr
mov
push
xchg
sbb
adc
cmps
ja
mov
and
(bad)
mov
mov
sub
jnp
sub
pop
jg
repnz
inc
(bad)
mov
das
movs
shl
push
cmp
popa
adc
adc
scas
pushf
(bad)
test
leave
lods
imul
pop
in
xchg
lods
stc
and
in
xor
sbb
out
test
imul
mov
mov
cmps
ins
sbb
or
sub
ds
addr16
aaa
rol
retf
pop
test
sub
arpl
push
mov
retf
int
fimul
mov
data16
mov
addr16
in
and
lock
xchg
sub
lods
pop
sbb
and
and
inc
in
mov
lea
js
push
xor
jg
lahf
sbb
xchg
push
jmp
jp
movs
mov
mov
and
or
xchg
idiv
push
sub
adc
xchg
push
dec
repnz
cmp
ror
test
pop
in
cwde
imul
(bad)
mov
in
add
mov
out
les
dec
jge
in
ins
inc
mov
rcr
mov
push
mov
test
aaa
sahf
test
shl
jo
fmul
mov
mov
in
fsubrp
(bad)
out
xchg
imul
lds
mov
lahf
inc
mov
jne
cmp
lahf
sub
or
and
stos
fsubr
call
test
xchg
aaa
clc
jmp
mov
ins
(bad)
xlat
es
mov
(bad)
clc
movs
xchg
les
mov
sbb
or
cld
mov
mov
(bad)
out
cmp
sbb
sbb
xchg
(bad)
(bad)
jnp
stos
push
cmps
jnp
fstp
mov
retf
pushf
iret
ins
pop
call
mov
pop
pop
pop
mov
xor
or
fdiv
jnp
cmps
mov
jecxz
call
je
mov
clc
(bad)
jp
(bad)
lods
sbb
in
cmps
mov
or
arpl
jmp
fnstcw
dec
test
and
popf
xchg
ror
movs
mov
xchg
lahf
xchg
pop
stos
and
xchg
add
push
and
test
mov
cmp
mov
sbb
mov
pusha
shr
lods
aaa
shr
int3
ror
loopne
(bad)
cmc
xchg
fwait
sahf
mov
push
ja
mov
or
mov
iret
add
aam
sbb
cmc
out
cmps
and
pop
fcom
xchg
xlat
div
pop
or
sub
jg
ss
sahf
or
gs
ss
xor
xchg
(bad)
and
and
pop
ins
das
cmp
pusha
test
push
(bad)
or
sahf
jb
and
in
lods
jge
sub
pop
test
jb
or
mov
xor
cmp
sbb
dec
mov
cvttsd2si
or
xchg
dec
mov
mov
xchg
pop
call
mov
jmp
cmp
and
sti
ret
sahf
out
retf
jge
sahf
lea
scas
imul
sub
ror
(bad)
ds
cmp
mov
mov
ja
gs
cmp
(bad)
in
mov
repz
pop
ins
icebp
inc
and
in
popf
and
adc
addr16
mov
or
xchg
jg
in
(bad)
push
sbb
mov
pop
in
bound
ins
inc
pop
inc
mov
das
pop
cmps
cmp
xchg
jp
arpl
mov
call
ins
sar
outs
pop
cs
fwait
jmp
pop
cmp
outs
cmp
ror
movs
outs
arpl
sbb
in
mov
sub
movs
fidivr
jns
and
pop
pusha
test
dec
fs
mov
mov
scas
ds
pop
mov
push
xchg
test
jae
pusha
push
popf
icebp
daa
jl
jg
popf
push
imul
(bad)
(bad)
xchg
ret
imul
mov
xchg
cmp
adc
jmp
inc
ror
inc
stos
xchg
imul
imul
cld
(bad)
frstor
fst
mov
and
in
imul
push
inc
aaa
xchg
mov
into
mov
pop
jge
sbb
mov
mov
scas
sub
ret
mov
adc
cmc
adc
dec
pop
mov
ins
mov
stos
in
adc
ins
and
or
pop
mov
jne
mov
mov
and
and
bound
lods
pop
mov
mov
scas
enter
mov
popa
sahf
adc
mov
sub
shl
jge
jge
popa
aaa
pop
scas
pop
outs
lea
push
xchg
push
lds
jp
arpl
sbb
lea
jns
mov
cld
imul
xchg
lods
(bad)
jg
jo
cmp
xchg
ret
out
or
cmps
stos
ss
ins
cs
mov
xchg
mov
mov
xchg
mov
mov
dec
call
xor
popf
mov
mov
shr
push
xor
lds
ins
fisubr
and
fs
push
xor
popf
dec
lods
adc
fcmovnb
outs
cmp
or
in
cmp
(bad)
xchg
push
ins
sahf
xchg
outs
inc
mov
arpl
bound
pushf
ror
inc
pop
sub
jnp
das
data16
mov
dec
std
aad
daa
mov
mov
push
sbb
adc
mov
lods
adc
loope
mov
cmp
add
int3
test
les
rcl
(bad)
sub
jbe
mov
mov
pop
imul
mov
cmp
retf
(bad)
movs
mov
pop
and
ins
dec
rcl
mov
in
pop
lds
sbb
and
push
jae
and
push
das
(bad)
jg
push
cld
mov
dec
push
mov
adc
(bad)
cs
xchg
shl
jg
mov
inc
mov
lods
outs
fs
in
dec
or
add
pop
jl
or
sti
push
dec
jnp
cmps
stos
jae
ja
ins
jmp
cld
xor
dec
push
lds
adc
mov
clc
aam
lds
das
into
xchg
fld
fst
std
sub
(bad)
jo
xchg
cmps
xchg
pop
ret
ins
aas
xchg
sub
xchg
pop
jmp
jbe
stos
out
mov
stc
out
xchg
bound
xchg
mov
mov
mov
fwait
push
das
arpl
jo
iret
xchg
pop
cmc
inc
addr16
aam
push
jo
sbb
aas
xor
mov
(bad)
mov
mov
mov
addr16
out
ret
xchg
pop
xor
(bad)
mov
lods
aam
(bad)
xchg
lds
mov
inc
and
shr
test
mov
fs
or
push
lods
call
mov
mov
dec
cld
sbb
dec
jp
cmps
ds
fimul
mov
cs
cmps
sub
and
xchg
pop
nop
mov
sbb
bound
mov
mov
push
xor
jbe
lea
dec
xchg
jo
pop
out
ret
mov
dec
in
mov
neg
xor
dec
fiadd
es
xchg
call
mov
mov
jmp
rol
es
jno
jle
push
pop
test
push
sub
lods
jmp
fisttp
(bad)
sbb
sub
retf
jnp
in
(bad)
mov
xor
cli
loopne
mov
cmp
ret
jbe
mov
xchg
retf
and
mov
nop
fisub
in
lods
push
call
inc
or
test
js
stc
popf
or
mov
mov
adc
mov
addr16
stos
icebp
stos
out
push
sub
sub
dec
jno
adc
push
pusha
adc
sti
cmc
jno
(bad)
shr
cdq
cmps
cdq
in
push
repz
in
mov
cmp
mov
imul
mov
scas
push
stc
push
ins
push
rol
loope
and
pop
pminub
(bad)
xlat
jb
push
jmp
pop
xchg
cmp
xchg
lea
mov
lds
push
mov
mov
jbe
(bad)
lea
(bad)
ror
call
adc
push
scas
lea
mov
stos
sub
cmc
aam
xchg
or
lds
imul
stos
push
adc
in
lahf
(bad)
stos
jmp
mov
sbb
push
(bad)
jle
cwde
push
icebp
les
(bad)
imul
mov
stos
pop
mov
cmp
xor
jmp
sbb
leave
mov
leave
mov
and
jle
mov
das
fst
mov
es
push
lds
and
rcr
(bad)
fmulp
mov
scas
xchg
imul
pop
jl
add
mov
scas
jle
mov
(bad)
std
out
movs
ins
das
daa
mov
fdiv
inc
push
imul
mov
or
and
js
sub
sahf
out
mov
adc
lea
mov
shr
sub
cmps
gs
pop
jbe
pop
gs
addr16
scas
popf
cmp
vmaxss
mov
(bad)
ret
in
(bad)
mov
xchg
cmp
mov
aad
or
aas
mov
jne
retf
and
or
mov
int3
mov
cld
sub
xchg
jnp
mov
xor
in
xor
dec
dec
mov
xchg
cmps
add
or
push
sbb
test
or
cmps
and
jo
mov
mov
mov
mov
ret
jmp
pushf
mov
cmp
cmps
(bad)
pop
int
scas
fdivr
data16
jae
jbe
stos
in
pop
mov
mov
cmp
div
mov
and
cs
repz
pop
hlt
pop
cdq
in
sti
cmps
push
in
jmp
icebp
mov
sbb
push
push
xor
out
xor
jecxz
xchg
imul
push
ret
das
lahf
or
add
and
pop
fwait
arpl
shl
in
in
jne
xchg
inc
fwait
inc
fsub
or
jb
xchg
jnp
test
xchg
pop
leave
inc
arpl
jbe
iret
adc
add
iret
sti
stos
or
mov
pop
inc
mov
push
test
sbb
jmp
stc
mov
icebp
addr16
pop
das
inc
fsubr
lods
scas
and
ins
in
icebp
stos
xchg
adc
repnz
test
adc
movs
and
sub
mul
sahf
and
cmps
cmc
jb
jnp
in
and
sub
in
pop
outs
xchg
scas
xchg
xchg
and
aad
sub
xchg
mul
rcr
add
movs
mov
out
mov
xchg
fidivr
jb
pop
adc
and
test
nop
repz
in
lds
mov
mov
popf
ss
push
arpl
in
sub
enter
xchg
jb
and
dec
pop
add
out
mov
stos
add
imul
ficomp
inc
adc
out
in
arpl
(bad)
push
(bad)
adc
mov
ins
stos
jae
rol
pusha
js
sti
add
sbb
stc
pop
xchg
scas
movs
imul
mov
cmp
jg
imul
mov
loop
call
mov
mov
sbb
dec
mov
adc
jmp
cmps
jae
rol
inc
jno
inc
jmp
aad
clc
jge
movs
repz
pop
fdivr
ror
adc
sar
add
clc
xchg
shl
dec
sub
push
nop
xor
mov
test
aad
sub
data16
popa
mov
jecxz
xchg
call
fcom
mov
mov
in
icebp
mov
jmp
(bad)
cmp
pop
iret
clc
adc
(bad)
cdq
in
lods
movs
in
cmps
jns
imul
mov
daa
repnz
mov
cmp
xchg
std
stos
and
mov
mov
std
pop
mov
cmp
xchg
movaps
imul
data16
lea
add
cmp
mov
xchg
and
shl
pop
mov
outs
and
mov
ins
mov
psubusb
mov
in
int
mov
push
mov
shl
shl
dec
aas
rcr
mov
sub
shl
sbb
(bad)
dec
jl
stos
addr16
cmps
and
pop
pusha
sub
mov
sub
aad
and
retf
mov
cmc
lods
xchg
mov
test
lods
scas
xor
mov
(bad)
imul
ins
dec
inc
mul
pop
mov
jle
adc
rol
les
jae
or
inc
arpl
(bad)
and
rcl
lods
mov
push
jae
mov
scas
sbb
xchg
sbb
out
(bad)
cmps
rcr
add
in
adc
inc
imul
sub
ins
jecxz
rol
xor
shl
mov
jb
inc
sar
adc
imul
dec
ret
gs
(bad)
call
dec
push
call
ret
leave
das
jne
out
push
cmp
shr
icebp
sub
(bad)
fisubr
ret
xor
retf
pop
and
into
mov
bound
aad
cmp
js
test
lods
push
aad
test
or
retf
test
mov
scas
arpl
inc
ss
(bad)
mov
inc
loope
data16
clc
out
das
(bad)
jl
stc
inc
outs
out
cwde
out
or
fs
push
push
(bad)
and
out
jg
jmp
cmp
arpl
add
ret
jnp
in
xchg
add
in
jno
sub
jg
test
in
inc
mov
iret
mov
movs
sbb
stos
frstor
loopne
arpl
fsubr
cmp
or
hlt
stos
adc
adc
arpl
pop
(bad)
inc
adc
pop
jge
push
push
mov
xchg
in
outs
sbb
jle
mov
jmp
and
test
repnz
and
mov
fdiv
xlat
sub
xlat
fwait
cmp
es
jg
scas
and
adc
sbb
pop
scas
cs
xchg
push
add
in
adc
xchg
out
dec
call
push
sub
fsub
lock
lds
push
in
cmp
aas
pop
jmp
mov
xchg
lea
(bad)
adc
sbb
pop
(bad)
add
adc
push
imul
jecxz
fwait
scas
out
dec
jae
pusha
imul
sbb
(bad)
cli
xor
adc
and
xchg
sar
stos
jp
dec
xor
icebp
push
pop
dec
jle
lods
scas
mov
psadbw
je
(bad)
mov
mov
mov
sbb
and
push
popa
pop
ins
push
cmps
aad
adc
ficomp
scas
mov
sub
mul
cwde
jle
ins
cmps
mov
or
mov
ror
gs
out
or
mov
ss
sub
stos
or
sbb
mov
mov
mov
int3
and
push
jno
adc
scas
es
jnp
adc
ror
jmp
arpl
pop
or
fwait
imul
xchg
retf
popa
ins
lds
test
ds
ss
sbb
fxch
mov
pop
jp
(bad)
cmc
stos
mov
cmp
fsubr
(bad)
push
pop
dec
(bad)
daa
stos
je
popf
cmps
jb
xchg
out
jmp
and
inc
pcmpgtd
repz
mov
inc
idiv
aas
and
add
faddp
mov
lods
jecxz
sub
ret
mov
and
aas
std
pop
ret
add
repz
das
ss
or
outs
fldenv
push
cmp
sbb
push
jmp
cli
outs
adc
fdiv
int3
xlat
jb
cdq
xchg
add
addr16
int3
imul
mov
fmul
pop
dec
daa
pop
in
jne
cwde
retf
adc
js
cmc
push
test
push
jns
add
mov
lock
jmp
test
hlt
loope
sub
cmp
icebp
cld
xlat
push
in
dec
jp
pop
cmp
jp
scas
push
(bad)
bound
das
cmp
sub
jnp
int3
and
jo
cmp
scas
mov
sbb
aam
push
cmp
gs
in
out
jle
xchg
and
test
pop
sbb
cmp
out
ds
rol
cmp
jmp
iret
es
mov
in
mov
jl
cli
fst
aas
inc
sub
lods
jne
aam
test
sti
repnz
les
dec
push
and
ror
and
stc
pop
sar
gs
pop
pop
jle
xor
test
outs
sub
outs
dec
push
dec
aas
or
adc
cmps
pop
int3
mov
cwde
and
mov
xchg
lods
adc
dec
xchg
mov
arpl
cmps
out
outs
pushf
cld
test
in
and
scas
jae
sbb
test
cmps
js
xor
and
mov
repnz
or
aam
push
in
xchg
ins
aas
arpl
stos
out
jmp
scas
inc
mov
dec
fstp
mov
ror
push
inc
jae
mov
retf
dec
leave
movs
dec
mov
popf
mov
mov
sub
and
into
cwde
pop
out
cmp
push
cmps
fwait
arpl
sub
arpl
mov
lds
in
ss
cmps
jnp
jg
arpl
stos
jae
sub
jecxz
cld
ja
movs
imul
(bad)
sub
lea
aas
inc
sbb
out
(bad)
loop
jbe
f2xm1
sti
xor
pop
sbb
inc
scas
fwait
imul
sub
xchg
sbb
mov
xchg
int3
mov
mov
outs
(bad)
push
enter
adc
cmps
jg
rcr
jbe
mov
test
inc
imul
xchg
outs
aas
push
mov
test
ins
daa
out
push
dec
mov
out
and
mov
xchg
in
cs
pop
xchg
outs
aas
shr
cmp
aas
sub
ins
aaa
out
push
aas
mov
cmp
test
test
push
mov
sub
mov
xchg
xchg
int
lahf
in
adc
sbb
pop
fcomp
mov
pop
call
pop
mov
sbb
pop
push
fwait
lods
xchg
mov
push
dec
jl
imul
das
mov
retf
mov
sub
loop
das
mov
retf
movaps
push
pop
addr16
pop
cmp
inc
cmp
fmul
pop
mov
jmp
mov
fcomp
outs
dec
adc
gs
pop
jbe
mov
push
ja
lahf
loope
cmps
and
fisub
icebp
push
fwait
sahf
pop
push
cmps
and
and
fidivr
inc
out
jmp
pop
dec
js
adc
repz
vsubps
mov
mov
(bad)
xor
(bad)
mov
push
mov
push
(bad)
(bad)
cmps
popf
jbe
mov
mov
fidivr
das
popf
mov
lods
dec
pop
(bad)
rcl
outs
ror
sub
fs
add
(bad)
cdq
shl
xchg
fstp
sahf
pop
or
mov
mov
lahf
mov
mov
jg
ds
mov
cmp
push
mov
jl
xor
jb
mov
inc
cmp
fmulp
inc
jmp
push
aaa
(bad)
test
sub
mov
mov
pushf
mov
ficom
mov
iret
jg
xchg
cmps
aas
movs
inc
ret
dec
cmc
inc
imul
(bad)
bound
jno
cs
lods
pop
lahf
(bad)
rcr
stc
es
aam
mov
jns
fcomi
push
adc
(bad)
sar
fcom
lods
aam
aam
or
lds
mov
ja
in
mov
in
push
pop
ins
and
(bad)
sahf
xor
into
sbb
mov
fistp
push
int
mov
neg
pop
(bad)
scas
test
gs
or
push
push
iret
test
ins
enter
sub
mov
push
cdq
jl
addr16
js
aad
dec
pop
mov
sub
daa
sar
or
iret
mov
jg
jl
(bad)
mov
das
pusha
imul
into
lods
mov
(bad)
arpl
cmp
loope
out
pushf
cmovns
lods
sub
scas
or
jl
mov
mov
and
dec
fcmovb
lds
sub
cmp
movs
jmp
movs
stos
aad
xlat
mov
call
pop
addr16
iret
push
mov
call
push
mov
test
call
movs
shl
std
mov
test
and
adc
push
neg
sub
pop
lods
fdivrp
ds
mov
pop
xor
dec
cmps
scas
pop
mov
jle
(bad)
es
jge
mov
js
pusha
or
sbb
xchg
fisttp
cs
mov
cli
sub
movs
dec
sbb
xchg
iret
mov
push
aas
ret
inc
sbb
add
inc
dec
ss
shl
(bad)
xchg
jae
popf
mov
push
adc
sbb
call
iret
cmps
mov
jbe
adc
mov
xchg
and
retf
cmc
xchg
mov
dec
das
mov
mov
scas
xchg
(bad)
mov
pop
outs
stos
mov
sub
mov
pop
push
pop
adc
pop
push
sar
and
mov
mov
cmovb
xlat
rol
inc
fwait
pop
test
mov
push
push
dec
fbstp
in
test
(bad)
movs
mov
es
retf
test
addr16
push
lods
cmc
out
cld
mov
mov
(bad)
pop
test
in
icebp
mov
xchg
jmp
(bad)
ds
mov
scas
movs
jne
out
xor
mov
jg
mov
cmps
pop
(bad)
arpl
aaa
mov
div
or
stc
mov
(bad)
jle
lahf
cmp
movs
mov
cs
sbb
sub
mov
cmp
mov
mov
mov
push
(bad)
jp
je
jg
imul
jbe
je
push
add
es
mov
mov
push
push
push
cmpps
push
call
jg
mov
stos
mov
sub
mov
clc
mov
mov
ss
xlat
adc
neg
call
es
fiadd
std
stos
sub
lahf
mov
inc
xchg
hlt
jo
mov
popf
mov
jp
pop
fs
(bad)
out
jo
jno
mov
jno
and
xchg
lock
cdq
jmp
sbb
and
xor
or
leave
mov
and
dec
loop
(bad)
stos
(bad)
call
mov
xchg
outs
adc
loop
and
ret
dec
fbld
cwde
pop
mov
in
mov
test
(bad)
mov
out
sub
call
xor
lock
js
(bad)
retf
mov
lods
ret
icebp
cmps
and
mov
mov
je
bnd
ret
pop
gs
in
int
les
push
mov
icebp
cmp
repnz
addr16
pop
sbb
in
jmp
pop
cmps
mov
xchg
add
jbe
xor
add
in
in
inc
mov
fadd
aaa
icebp
scas
(bad)
bnd
(bad)
xchg
add
jl
shl
mov
ret
add
enter
pushf
pop
mov
(bad)
dec
test
(bad)
out
dec
movs
mov
gs
in
je
popa
xchg
jb
jg
pop
mov
int
lods
and
retf
adc
pop
cmps
cwde
xor
and
cmps
pop
xor
(bad)
in
sub
adc
push
sbb
sbb
shr
out
shr
out
shr
out
(bad)
out
pusha
idiv
popa
or
pop
mov
dec
sbb
mov
mov
movs
or
daa
mov
(bad)
mov
inc
test
test
xor
cmps
add
test
or
in
scas
push
ins
add
movs
(bad)
push
mov
(bad)
iret
sub
xor
bound
cdq
sbb
sbb
sub
pop
mov
(bad)
mov
cs
xchg
aad
(bad)
jb
mov
and
scas
sbb
jge
int
sub
dec
mov
outs
mov
mov
jmp
retf
push
mov
(bad)
bound
jg
(bad)
fs
cs
dec
dec
push
loope
dec
sbb
adc
mov
out
lods
mov
out
pop
nop
fldenv
test
cmp
arpl
xor
pushf
repz
lea
test
jl
xchg
mov
shl
add
call
imul
and
jmp
jg
(bad)
leave
(bad)
lea
lock
stos
(bad)
pop
pop
das
push
add
xlat
das
enter
jbe
dec
mov
bound
call
lahf
shl
mov
xchg
mov
jg
retf
pop
out
retf
mov
in
cmps
call
ss
ins
push
cmp
xor
je
dec
mov
cmps
sub
lods
out
out
or
imul
iret
jne
lea
dec
jbe
out
add
bound
sub
and
cmp
fiadd
jbe
mov
fiadd
fdivr
mov
cmps
add
xchg
stos
(bad)
punpckldq
adc
adc
xor
ja
cmp
movs
push
scas
mov
mov
ret
mov
mov
je
mov
mov
in
adc
stos
loope
pop
pusha
cmp
push
adc
mov
std
adc
ret
(bad)
jge
jno
jg
sub
mov
fsubr
xchg
cmp
cmps
and
int
pop
mov
das
stc
inc
mov
test
xor
push
pop
pop
repz
mov
push
sbb
cmps
arpl
outs
(bad)
xchg
rcr
ret
aaa
push
js
test
pop
jb
pop
jo
loop
retf
popa
inc
adc
aas
pop
sub
ins
adc
jmp
jge
scas
ss
lahf
es
dec
aas
mov
adc
out
and
jno
data16
jmp
mov
cmp
gs
mov
call
fisttp
push
mov
movs
adc
rol
repnz
cmps
add
mov
outs
imul
pop
ins
out
fwait
inc
mov
sub
add
shl
mov
ss
gs
jmp
xchg
out
(bad)
cwde
arpl
mov
jle
sub
mov
hlt
ret
dec
mov
xchg
dec
dec
xchg
add
inc
mov
repz
hlt
dec
inc
pop
dec
xchg
call
pop
jne
pop
xchg
out
jns
scas
inc
lahf
(bad)
or
(bad)
aad
ins
js
pop
stos
in
cmps
jg
call
push
inc
ins
cmp
dec
pop
fimul
dec
lods
inc
addr16
jno
test
pop
mov
out
lock
adc
ds
mov
scas
jne
aas
dec
aas
aas
test
or
jmp
mov
xchg
addr16
push
idiv
pushf
xor
mov
arpl
arpl
or
out
adc
aad
(bad)
lea
inc
sub
dec
pop
aad
xchg
mov
clc
and
fadd
shl
daa
(bad)
ins
or
fisubr
jecxz
das
in
mov
arpl
ficomp
inc
cmp
in
ret
(bad)
aad
mov
cmp
out
mov
fdiv
mov
mov
or
pop
mov
sti
fsub
mov
pop
bound
setg
cld
jge
sub
scas
jns
in
jne
or
inc
cli
(bad)
xchg
gs
retf
aam
jp
dec
fadd
imul
fisubr
test
mov
shl
mov
cmp
inc
stos
sbb
mov
(bad)
or
mov
cmp
fwait
imul
popa
aad
jns
sti
jmp
sub
push
int
push
lods
clc
movs
ja
(bad)
cmps
aas
popa
daa
ret
add
in
add
fbld
sbb
push
add
mov
xlat
daa
xchg
cmp
cmps
jnp
movs
ret
mov
and
movs
sub
je
sbb
nop
sub
rcl
not
div
pop
push
xor
cmps
js
movs
and
sbb
aad
imul
jnp
adc
pop
loop
push
add
out
adc
cmp
pop
mov
jmp
or
daa
cwde
add
xchg
mov
add
inc
movs
push
popa
mov
xchg
and
ret
dec
pop
imul
lea
or
dec
and
test
and
sub
cmps
jmp
imul
mov
dec
js
retf
imul
lahf
xor
scas
faddp
mov
out
(bad)
cdq
loop
jge
add
daa
inc
addr16
repnz
cli
cmp
daa
cmp
jne
push
ficom
daa
test
xchg
xchg
or
dec
jp
inc
mov
rcl
mov
lock
lea
or
mov
(bad)
pop
sar
mov
xchg
mov
movs
mov
inc
mov
cmps
push
or
mov
fwait
and
pop
fsubr
inc
fwait
inc
mov
test
add
stos
pop
nop
inc
imul
sbb
xor
push
aad
mov
mov
sub
pop
mov
push
sub
addr16
mov
es
push
scas
cmc
xchg
sahf
mov
test
imul
sub
aas
outs
fidivr
cmp
and
(bad)
std
dec
fistp
or
push
push
(bad)
int
push
cmp
pop
hlt
and
mov
lods
not
ret
fcom
ret
mov
movs
mov
inc
and
loop
out
(bad)
mov
cmp
shl
(bad)
dec
fwait
xor
pushf
mov
daa
dec
les
test
mov
mov
mov
scas
imul
xchg
fs
cmp
sub
bsf
sbb
popa
shl
sahf
and
aam
push
retf
xchg
outs
popf
and
xchg
sbb
inc
mov
sub
mov
cmps
cld
cdq
scas
mov
pop
xor
and
xchg
ret
retf
mov
retf
stos
into
cmp
pop
and
es
mov
pop
dec
test
fmul
out
dec
cmps
shr
dec
int3
jle
sti
mov
aas
or
pop
sbb
mov
cmp
sub
mov
push
lahf
or
addr16
bound
mov
imul
outs
mov
adc
add
(bad)
mov
adc
retf
xor
push
dec
cmp
adc
(bad)
push
movs
or
sbb
lods
mov
sbb
mov
(bad)
mov
fwait
cmps
pop
ins
das
adc
xlat
jecxz
xor
fnstcw
jbe
outs
mov
xchg
jmp
into
stos
xchg
ja
pop
call
pop
inc
fwait
iret
test
movs
mov
inc
ja
mov
pop
xchg
(bad)
push
add
inc
aas
fst
dec
mov
jmp
stos
mov
mov
mov
adc
push
dec
xchg
inc
sub
jl
sub
dec
and
or
aam
mov
mov
xchg
pop
sbb
mov
mov
loop
and
outs
or
(bad)
push
stos
out
mov
scas
adc
mov
mov
addr16
mov
outs
pop
inc
cmps
cmovg
movs
aam
mov
mov
jg
(bad)
mov
fwait
cmp
or
cmp
stos
jne
cmovge
daa
movs
scas
test
and
popf
ror
jae
lock
inc
dec
add
or
ja
jecxz
jmp
cmp
xor
jmp
mov
dec
bnd
outs
sub
pop
ins
dec
sar
hlt
jg
sub
cmp
dec
mov
and
sub
sub
lods
std
iret
jge
scas
sbb
imul
xor
outs
and
ret
fisubr
push
inc
rcl
dec
xchg
xchg
jg
xor
addr16
int
pop
mov
mov
scas
or
ret
mov
inc
lods
xor
test
push
mov
in
mov
mov
mov
les
and
cmps
jge
cmp
mov
cmc
popa
jb
test
inc
ficom
lods
mov
push
mov
pop
cmp
aad
mov
and
mov
dec
bound
mov
sub
faddp
mov
sbb
sbb
dec
adc
arpl
pusha
mov
adc
gs
inc
enter
jbe
xchg
shl
imul
(bad)
aaa
jbe
jo
mov
test
pop
push
fnstenv
cdq
push
retf
dec
jg
test
mov
ret
stos
push
sub
or
jg
test
sbb
mov
mov
or
rcl
dec
hlt
icebp
push
or
in
std
fs
out
test
bound
adc
movs
cmps
aas
sub
xchg
and
movs
lahf
jmp
(bad)
nop
or
jmp
xchg
sbb
pop
scas
xchg
popa
mov
pop
data16
in
xchg
mov
call
inc
fidiv
dec
mov
neg
sbb
mov
jle
or
xchg
mov
addr16
lods
adc
stos
xchg
inc
arpl
mov
mov
pop
and
movs
imul
into
sbb
(bad)
mov
retf
stos
gs
push
pop
lods
jg
(bad)
jo
mov
lods
scas
xchg
sub
out
hlt
cmps
test
mov
mov
mov
leave
ret
jle
mov
es
sahf
jnp
mov
or
add
scas
pop
(bad)
push
dec
jl
cmps
mov
and
cmp
fisub
jmp
pop
out
rcr
mov
mov
add
mov
xor
sti
push
fbstp
xchg
je
xchg
or
jmp
mov
adc
out
inc
jg
mov
sahf
lods
pop
(bad)
dec
sahf
mov
ds
inc
(bad)
mov
test
mov
stc
scas
mov
xchg
xor
push
(bad)
sub
repz
sub
(bad)
scas
test
sub
imul
fwait
sahf
xor
sbb
jbe
ss
xor
jmp
aaa
popa
(bad)
jg
or
push
in
scas
or
mov
(bad)
xchg
mov
pop
push
mov
push
xchg
mov
jg
not
mov
xchg
push
(bad)
(bad)
xor
ret
mov
movs
push
fdivr
daa
jmp
outs
add
js
in
call
mov
or
int3
rcr
popa
xchg
(bad)
xchg
sbb
sbb
xchg
sbb
jmp
inc
retf
sbb
push
cs
jmp
leave
ror
xor
mov
jno
cvtps2pd
addr16
(bad)
dec
sahf
test
pop
cld
mov
stc
pop
ror
lahf
test
aas
jle
dec
cs
lods
(bad)
cmc
test
mov
(bad)
jp
jbe
test
movs
jne
in
movs
inc
lods
or
bound
jle
mov
ret
mov
call
sbb
addr16
std
movs
mov
jmp
pop
mov
cld
mov
ins
and
dec
ss
vcvtsi2ss
iret
sbb
inc
mov
movs
movs
pop
cmps
jne
mov
mov
mov
fwait
scas
stos
push
cmp
lods
or
imul
es
inc
ja
or
ds
dec
popf
bound
inc
jnp
cmc
push
out
out
cli
mov
xchg
(bad)
mov
inc
fdivr
jle
in
and
cwde
inc
ins
inc
repnz
xchg
or
cmps
mov
pop
fs
jnp
push
movs
cmps
jmp
mov
(bad)
jbe
test
stos
mov
mov
mov
jge
mov
add
adc
mov
push
in
cmps
js
pop
fidivr
cli
je
or
inc
push
sub
pushf
lea
mov
mov
mov
push
in
lds
shr
test
imul
int
clc
or
xchg
push
xchg
xor
xchg
popf
shr
dec
xchg
stos
dec
xor
call
cmc
arpl
cs
test
cmp
push
(bad)
(bad)
pusha
lahf
js
inc
(bad)
popa
dec
cmc
mov
movs
sub
lds
ret
push
mov
call
cmp
dec
lods
fstp
mov
cmp
scas
mov
cmps
add
cs
sar
shl
pop
sub
and
ret
mov
sub
jns
repz
pushf
jmp
pop
scas
inc
mov
push
pop
test
aad
scas
in
jb
pop
or
cmp
iret
ds
or
xchg
es
sahf
lods
dec
mov
jbe
add
scas
adc
sbb
xchg
jg
jge
adc
mov
into
cmps
(bad)
mov
add
pop
pop
daa
or
jle
cmps
fnstcw
sbb
push
cmp
(bad)
pushf
shr
cmp
adc
sahf
cmp
(bad)
xor
iret
xor
mov
dec
xor
out
jns
out
call
shl
stos
jae
or
div
mov
fwait
out
push
movs
cmp
pop
mov
xchg
lahf
pop
lods
inc
ficomp
(bad)
mov
mov
push
cmps
movs
mov
mov
dec
xchg
addr16
movs
fwait
ds
sub
and
mov
test
dec
cmps
inc
stos
mov
jno
lods
jne
mov
(bad)
mov
cs
cs
xchg
mov
mov
aas
mov
mov
daa
push
scas
add
mov
mov
(bad)
inc
sub
xchg
adc
mov
xchg
push
dec
jg
in
stos
push
in
lods
push
fidivr
ror
sub
sbb
es
push
out
xchg
xchg
jecxz
test
aaa
mov
daa
mov
sbb
mov
fwait
shl
xchg
les
dec
pusha
fwait
and
aas
ret
scas
mov
iret
loop
and
ins
in
xchg
or
cmp
jge
and
es
sahf
mov
jg
stos
push
adc
lea
cmps
aad
(bad)
mov
aas
in
aas
dec
scas
inc
xchg
in
cwde
pop
sub
jge
push
imul
test
jbe
xor
(bad)
sar
jno
and
movs
pop
or
push
push
lods
push
mov
pop
out
popa
cmps
cmp
jns
dec
jl
mov
mov
pop
xchg
test
pop
int
fdiv
loop
stos
mov
xchg
popf
mov
(bad)
or
mov
mov
pop
mov
and
mov
cmps
push
mov
dec
cmps
xchg
loop
xor
(bad)
cmp
push
pushf
dec
jmp
xchg
mov
stos
sub
push
mov
inc
mov
ret
mov
push
sub
es
xchg
ins
lods
bound
mov
xchg
or
cmps
gs
mov
adc
mov
test
repnz
mov
add
adc
cli
and
call
mov
sbb
jmp
xchg
idiv
dec
pop
lahf
cmps
sub
xchg
add
pop
repnz
mov
inc
fbstp
jecxz
mov
cmp
ret
xchg
add
add
popf
push
cmps
and
cmp
std
out
imul
data16
or
ins
(bad)
lods
pop
mov
pop
sub
retf
scas
cs
iret
ss
mov
neg
jle
jg
jmp
mov
idiv
mov
cmp
inc
iret
lods
(bad)
mov
mov
sbb
mov
sub
mov
ret
leave
lods
loope
sbb
fidivr
or
mov
retf
cmp
mov
mov
ja
push
iret
scas
cmp
push
push
cmps
pop
iret
cwde
jl
aaa
scas
adc
stos
shr
js
cld
cmp
mov
cmp
test
pop
enter
test
(bad)
mov
inc
(bad)
loop
cmp
dec
arpl
loopne
sub
repnz
mov
pop
aam
xchg
mov
sub
ds
mov
stos
(bad)
scas
rcl
stc
ds
mov
jmp
jo
push
push
mov
mov
out
ja
test
ret
std
cmp
test
jbe
mov
jg
lds
or
adc
adc
(bad)
xor
in
lods
test
leave
mov
sti
int3
xchg
not
push
push
popf
(bad)
cmps
test
jmp
xchg
cld
mov
mov
add
jno
adc
sub
mov
or
jecxz
inc
scas
pop
push
and
call
imul
clc
sub
dec
pop
and
jmp
sub
in
outs
pop
sahf
iret
cdq
xchg
mov
test
xlat
mov
xchg
data16
std
mov
and
(bad)
push
nop
mov
aaa
jle
imul
movs
test
mov
cmp
out
inc
pop
jmp
data16
stc
(bad)
jmp
retf
daa
popa
popf
mov
ret
cmp
fnstsw
dec
add
and
xor
xor
jno
jo
sub
cmp
shl
fiadd
(bad)
jg
test
jbe
and
sbb
out
popa
xchg
pop
js
and
mov
jmp
jnp
jmp
popf
outs
test
adc
xchg
dec
mov
aas
mov
dec
jle
sub
mov
or
lea
pop
mov
adc
and
popf
jmp
popf
loop
dec
popf
dec
pop
mov
imul
es
mov
jl
mov
sahf
and
xor
gs
clc
sub
mov
in
push
lea
mov
stos
inc
xchg
sar
adc
imul
imul
lea
mov
mov
xchg
push
and
cmp
(bad)
jnp
cmp
push
mov
mov
repnz
std
cmp
xlat
xor
adc
dec
es
mov
cdq
mov
lods
arpl
mov
fsubr
inc
mov
sub
mov
js
xlat
jl
cmp
mov
lea
jne
das
aam
(bad)
cmp
(bad)
jg
(bad)
fs
mov
pop
pop
(bad)
(bad)
les
into
fld
adc
mov
ja
ins
movs
and
pushf
addr16
cmp
test
adc
sub
sub
pop
retf
inc
repz
xor
sub
sub
sar
jge
call
idiv
mov
push
mov
movs
imul
lods
imul
cmp
jp
xchg
pop
mov
ds
push
arpl
jne
pop
inc
mov
cmps
cmp
das
add
add
in
scas
pop
loop
ins
lahf
les
xchg
mov
ja
popa
pop
push
push
jne
enter
daa
xchg
movs
mov
stos
in
mov
xchg
jmp
jecxz
ror
jl
jmp
mov
add
mov
jb
cmp
out
sub
gs
ins
loopne
pop
cmps
xlat
std
push
loope
out
mov
(bad)
push
sbb
push
lods
in
sbb
hlt
fsubrp
rol
and
sbb
or
jle
cdq
xchg
or
or
(bad)
mov
push
xor
retf
dec
out
pop
out
inc
cmps
lods
sub
leave
mov
test
xchg
lods
inc
mov
sub
dec
iret
into
sbb
test
(bad)
outs
retf
push
out
test
adc
fistp
outs
mov
test
cmps
gs
cmp
sub
idiv
ficom
pop
inc
or
sub
mov
pop
mov
lods
jns
rcl
pop
jnp
push
ret
rcr
mov
rol
inc
movs
mov
cmp
mov
dec
pop
std
mov
sar
call
jnp
sbb
aad
ret
jae
scas
pop
test
push
pop
sbb
xor
or
test
mov
mov
jecxz
sti
test
dec
test
and
dec
jmp
daa
jecxz
cmps
call
imul
popa
dec
dec
ss
cmps
jns
mov
jge
push
push
pusha
sub
aas
xchg
int
push
stos
cwde
sub
stos
cs
mov
aas
das
fld
(bad)
(bad)
fsub
jle
xchg
stos
push
mov
xchg
jmp
(bad)
rep
js
movs
lods
jge
outs
jnp
mov
(bad)
mov
imul
mov
mov
mov
ret
xchg
pop
shr
ja
(bad)
mov
mov
cmps
mov
mov
(bad)
rcr
adc
jbe
cmps
daa
push
adc
mov
jnp
test
sbb
es
push
xchg
push
imul
mov
cmp
mov
xchg
(bad)
mov
pop
stos
sbb
call
push
mov
and
jecxz
call
mov
jne
aas
cmp
into
dec
retf
xor
cmps
xchg
push
sub
cmps
cs
mov
cmp
xor
push
mov
xor
fwait
ins
xchg
mov
mov
arpl
int3
pop
mov
jp
stos
movs
out
xor
test
dec
jmp
or
or
xchg
out
ret
sub
pop
popf
mov
mov
dec
inc
pop
ret
dec
mov
add
add
mov
fdivr
mov
dec
cmp
push
or
in
sahf
dec
or
mov
cmp
fst
jg
jb
std
gs
mov
push
into
xchg
pop
cmp
inc
into
ja
imul
cs
push
jl
jl
fwait
lahf
and
mov
pop
dec
sbb
stos
mov
push
sbb
aam
aas
icebp
lea
mov
cmp
add
cmps
mov
sub
pushf
(bad)
xchg
jo
ja
loope
adc
push
movs
lds
scas
jmp
ficomp
ins
repz
mov
pop
ret
xchg
jl
int
mov
mov
(bad)
(bad)
fstp
aam
aad
jp
arpl
sar
popf
mov
pop
mov
test
in
ret
aas
fstp
jno
mov
jl
dec
fcom
jecxz
jmp
sub
(bad)
xchg
js
cld
mov
ror
mov
sub
add
fsub
pop
xor
lahf
sbb
ja
das
(bad)
sbb
cmp
mov
mov
jnp
call
xchg
mov
mov
nop
jle
and
sbb
pop
mov
lods
mov
ins
adc
sub
mov
push
push
mov
fdiv
popa
popa
cmp
mov
pusha
push
xchg
jb
inc
mov
adc
mov
jg
jge
mov
sbb
mov
mov
fnsetpm(287
pushf
test
mov
scas
cmp
in
lds
outs
arpl
popa
les
pop
xchg
adc
pop
out
cmps
lods
stos
test
mov
sahf
lds
retf
cmp
pop
jmp
mov
scas
xlat
xor
scas
jge
pop
and
mov
mov
mov
dec
cld
les
ficomp
scas
adc
mov
mov
or
sub
cmp
jnp
adc
jb
shr
arpl
shl
cld
in
icebp
cmps
pushf
adc
cmp
adc
neg
mov
sub
mov
jle
adc
pop
pusha
lea
mov
int3
mov
and
test
(bad)
push
aam
cmc
loop
arpl
dec
scas
or
inc
(bad)
push
inc
mov
enter
mov
inc
inc
xchg
cdq
cwde
dec
push
ret
xor
fsubr
addr16
xchg
push
inc
out
and
js
push
dec
mov
or
dec
sahf
and
sub
mov
in
mov
pushf
fmul
push
push
lahf
test
sub
stos
retf
addr16
mov
out
test
xchg
lods
pop
scas
xchg
imul
ret
jbe
test
loop
(bad)
jns
je
cmp
inc
mov
mov
(bad)
lahf
(bad)
in
(bad)
pop
leave
push
sub
mov
imul
jo
fidivr
and
sub
or
sbb
mov
lods
loope
pop
pop
test
cs
push
arpl
out
mov
ss
std
dec
add
or
dec
clc
xor
or
movs
pop
pop
mov
xchg
jno
push
pop
fimul
vmread
movs
std
out
sub
mov
shl
or
cs
mov
jmp
sti
and
add
sbb
stos
dec
xchg
retf
rcl
in
lods
cmps
jne
cmc
mov
in
test
jecxz
test
mov
inc
jmp
pop
(bad)
(bad)
fwait
outs
test
int3
ror
xchg
inc
jno
adc
dec
addr16
outs
sbb
sub
jge
imul
jl
imul
fwait
pop
out
shl
ja
scas
pop
xchg
cmp
sub
dec
scas
sub
pop
jae
test
add
bound
or
pop
pushf
sub
(bad)
cmps
mov
enter
loop
jo
sub
outs
xchg
xchg
sbb
mov
daa
or
pop
shl
mov
sbb
jge
mov
dec
addr16
jge
out
push
ja
mov
pop
test
mov
movs
inc
idiv
push
jo
and
ror
sub
push
and
jl
enter
mov
add
(bad)
pop
test
iret
outs
adc
out
cmps
jne
out
gs
pop
into
mov
lea
ret
mov
cmps
repnz
push
inc
imul
into
and
daa
push
and
mov
aam
jns
xor
mov
stos
sub
and
sub
cdq
movs
jg
jb
in
outs
scas
push
pop
cmp
mov
lods
call
push
xchg
sub
iret
xor
les
dec
adc
mov
push
dec
jb
dec
and
mov
inc
push
xor
mov
(bad)
mov
add
adc
pop
adc
inc
cmp
ret
xchg
pmuludq
sub
pop
mov
ret
(bad)
in
and
movs
push
inc
sub
inc
sar
mov
clc
xlat
lock
(bad)
dec
fmul
fild
xchg
mov
inc
mov
or
cmps
out
(bad)
sbb
push
test
xlat
fisubr
ja
jg
mov
jge
dec
push
lods
scas
pop
stos
dec
(bad)
shl
mov
ss
shl
sbb
mov
mov
out
hlt
loop
sub
test
(bad)
mov
or
shr
inc
mov
cmp
sbb
fst
push
dec
xlat
dec
movs
inc
or
not
mov
shr
jge
mov
jns
mov
dec
cmp
pop
adc
(bad)
(bad)
dec
sahf
cwde
mov
and
push
(bad)
fs
popf
test
sti
add
ins
jno
xchg
jl
and
xor
fwait
xchg
addr16
mov
fwait
outs
movs
xor
mov
xor
jg
mov
sti
push
adc
inc
aam
imul
shl
std
push
xchg
in
mov
pusha
adc
jge
fistp
bound
xchg
pop
(bad)
icebp
pusha
test
inc
ret
in
sub
inc
arpl
mov
and
push
data16
mov
cmp
jae
stos
lock
fdivr
ins
dec
cmps
(bad)
pusha
sbb
idiv
mov
adc
ficomp
push
loop
in
ret
ficom
dec
jle
imul
mov
outs
xchg
mov
pop
pop
and
or
jl
mov
and
cmps
sbb
pop
lods
out
mov
xchg
fs
mov
pop
(bad)
sbb
mov
scas
leave
cmps
(bad)
adc
gs
mov
xor
jl
sub
push
sub
(bad)
sar
inc
leave
fsubr
pop
adc
add
out
lods
int
jnp
lahf
lods
(bad)
cmp
add
fs
mov
popf
scas
in
mov
outs
pop
sbb
(bad)
repz
lods
loop
imul
fild
shr
aam
leave
test
pushw
stc
mov
mov
nop
sub
popa
lods
or
inc
lea
gs
in
or
data16
sub
mov
inc
dec
(bad)
mov
outs
pop
mov
in
movs
mov
stos
push
mov
stos
inc
shl
dec
push
ins
mov
mov
mov
cmps
adc
mov
les
ffree
mov
and
arpl
lds
shr
mov
pop
enter
clc
pop
bound
adc
imul
inc
and
ret
cmp
xor
mov
repnz
sti
aaa
mov
mov
mov
sahf
jmp
mov
add
fsubr
mov
adc
scas
lahf
inc
jae
mov
test
sub
pop
sub
(bad)
pop
ss
sub
int
inc
push
cmp
or
jnp
mov
mov
add
retf
mov
mov
or
sub
mov
pusha
push
and
xlat
sub
es
mov
sbb
cld
xor
sbb
aaa
daa
(bad)
pop
jle
hlt
cmps
ja
mov
cli
sbb
in
or
enter
jge
jo
or
sbb
sbb
call
sub
mov
shl
xlat
mov
sbb
pop
cmps
add
pushf
test
sbb
mov
mov
in
pop
mov
imul
rcl
call
pop
sub
cmp
retf
gs
add
push
repnz
test
xchg
xchg
iret
jo
sub
fidiv
mov
popa
add
mov
cmps
mov
pusha
pusha
test
(bad)
push
adc
mov
fwait
loope
es
rcl
aas
cmp
cmp
arpl
adc
sbb
xchg
mov
mov
movs
mov
lea
xchg
inc
in
push
jl
loope
xchg
jle
ins
sbb
dec
push
addr16
loop
sti
push
adc
mov
pop
movs
cli
sar
adc
or
pop
scas
push
test
push
stos
call
(bad)
jae
stos
outs
je
mov
inc
call
adc
dec
test
fldenv
das
ja
sbb
test
int
pop
mov
xchg
sub
out
mov
jle
mov
scas
mov
dec
loopne
fadd
inc
pop
lea
stos
dec
es
pop
add
lods
pop
cmps
icebp
ss
cmp
outs
ds
ror
fisubr
paddd
cmp
movs
sub
fs
push
jb
inc
sti
inc
js
fwait
cmp
add
jg
cmps
repnz
adc
sahf
mov
mov
sbb
in
mov
inc
jp
inc
sub
inc
jnp
mov
push
dec
dec
cmp
ins
pop
cmps
mov
cmps
pop
sub
adc
lock
mov
xchg
shr
xchg
mov
das
retf
js
fdivr
jg
xor
ret
stos
sub
lods
inc
lods
clc
sbb
xchg
ret
scas
out
fcmovb
shr
dec
or
mov
sti
int
pop
popf
ret
imul
imul
ret
and
dec
sbb
mov
mov
mov
mov
xchg
pop
inc
imul
dec
xor
ja
fidivr
dec
hlt
jle
mov
cmpps
cmps
inc
push
(bad)
js
rol
add
sbb
js
daa
jbe
or
or
outs
mov
cmp
mov
sbb
dec
int3
xchg
mov
mov
and
push
mov
fwait
xchg
xchg
in
mov
cmp
pushf
mov
leave
lahf
xlat
lods
out
lods
mov
xchg
inc
mov
add
clc
mov
mov
sub
jnp
arpl
stos
ja
addr16
int3
pop
jle
xor
xchg
cmp
mov
xchg
sbb
pop
mov
mov
daa
mov
cmp
inc
aas
lods
in
test
cli
imul
out
lods
retf
mov
test
ins
sbb
lea
and
out
or
fs
dec
cmp
or
inc
dec
scas
in
adc
movs
retf
out
test
cmps
xlat
ja
and
loop
and
enter
ret
jns
jg
(bad)
jge
jg
cmp
fwait
mov
jmp
xchg
pop
stos
iret
repnz
sti
mov
push
mov
push
lahf
mov
sub
adc
push
iret
imul
mov
cld
push
mov
stos
test
scas
mov
iret
mov
aas
test
ror
(bad)
popa
cld
push
jno
jp
lea
xor
in
movs
lods
test
mov
pushf
div
das
mov
sub
cmc
popf
xchg
jg
mov
xor
push
out
mov
add
daa
sbb
or
stc
add
mov
ret
xchg
stc
scas
cld
push
inc
mov
fisubr
push
popa
cld
pop
or
enter
sbb
nop
pop
popf
push
cmps
test
mov
sub
cmps
xchg
mov
addr16
push
aaa
test
popf
loop
xor
std
cmp
ins
jge
aaa
inc
je
mov
jge
mov
jno
ja
xor
jge
fs
in
inc
(bad)
xchg
mov
cwde
fwait
loop
loope
lea
stc
gs
fistp
cmp
out
js
mov
cs
push
sub
in
pop
cmps
test
es
or
repnz
out
scas
pop
in
(bad)
movs
cmp
or
mov
jmp
imul
shl
xchg
push
ret
mov
pop
pop
mov
mov
outs
xchg
mov
jbe
call
mov
sbb
cmp
or
repz
xchg
shr
jbe
mov
adc
data16
ss
shl
addr16
sahf
mov
call
out
sbb
scas
xchg
imul
add
test
pushf
cwde
iret
pop
xor
sbb
popa
jnp
mov
(bad)
dec
or
lock
in
shl
push
pusha
mov
jmp
imul
and
add
jns
loope
imul
push
push
inc
mov
and
and
pop
jne
adc
cli
cmps
out
repnz
rol
sbb
mov
inc
bound
out
adc
aam
jecxz
push
ret
aad
xor
jl
aaa
jbe
mov
or
pusha
call
inc
and
sbb
and
sbb
dec
inc
jecxz
repnz
inc
out
pop
rep
inc
cld
cmp
test
int
int3
and
dec
sti
mov
and
mov
xchg
ja
push
scas
cmc
lods
fwait
jns
lahf
shl
xchg
jo
call
fistp
mov
push
iret
inc
test
cmp
inc
cmps
and
enter
pop
lock
fwait
add
ins
jmp
fist
(bad)
pop
jmp
pop
mov
inc
mov
je
jl
jle
xchg
cmp
xor
mov
daa
dec
add
jl
mov
jl
mov
dec
xchg
call
xchg
jbe
popf
cli
scas
loop
mov
scas
push
cmp
fimul
fbld
dec
bnd
aaa
adc
jns
in
cmp
mov
cld
xacquire
dec
xchg
mov
in
jne
jb
add
push
and
dec
sbb
cmp
out
shl
retf
and
sar
pop
sub
pop
lds
add
mov
nop
mov
or
mov
sbb
mov
mov
call
mov
dec
jg
imul
aam
cmp
mov
loopne
jns
add
jns
add
(bad)
jle
imul
push
cmp
cld
push
or
mov
cmp
sub
lahf
or
cmp
jge
call
sbb
mov
xchg
mov
es
sub
mov
lods
cs
dec
fwait
aas
mov
sub
std
ja
mov
mov
popa
or
in
dec
out
out
cs
out
inc
dec
inc
lock
mov
push
pop
scas
daa
and
ja
and
neg
jecxz
add
outs
xor
gs
daa
test
rcr
push
(bad)
sbb
(bad)
dec
lods
jecxz
and
xor
inc
mov
out
inc
pop
inc
test
pop
mov
stos
scas
test
cs
pop
jnp
sahf
cdq
ss
mov
stos
adc
out
mov
xlat
test
mov
xor
mov
in
lahf
in
int
pop
arpl
pushf
out
sbb
mov
mov
aas
cdq
out
call
push
repnz
retf
cmp
pushf
cmp
hlt
pusha
outs
mov
test
mov
out
push
mov
mov
dec
mov
sbb
das
sub
clc
inc
fidiv
bound
cmp
inc
xchg
pop
scas
pop
scas
jge
sbb
jbe
lods
sbb
out
push
inc
pop
cdq
out
jmp
stos
scas
das
repnz
jmp
pushf
in
mov
popf
jmp
call
shl
jmp
jmp
or
fcom
push
sti
mov
pop
xchg
pushf
repz
std
inc
mov
retf
ds
test
add
xor
jle
mov
xor
imul
cmp
call
test
gs
les
iret
add
jmp
inc
cmps
push
cmps
xor
mov
mov
hlt
outs
pop
and
scas
xchg
(bad)
pop
adc
loope
jns
mov
mov
idiv
dec
shr
frstor
adc
cwde
scas
push
(bad)
stos
aas
test
scas
(bad)
pop
ret
push
xchg
xor
popa
sbb
(bad)
aam
jno
mov
xor
scas
sbb
(bad)
dec
lods
fs
shr
fsub
add
dec
imul
dec
hlt
jmp
sar
hlt
cmp
out
mov
out
mov
push
test
sbb
cmps
xchg
push
icebp
cmovnp
popa
sbb
pop
push
or
dec
push
aad
ss
(bad)
pop
jne
aam
addr16
sub
out
ficomp
iret
pop
xlat
mov
mov
dec
jmp
dec
shr
mov
xchg
mov
cmps
aad
fs
mov
cmps
jb
test
imul
push
iret
ss
cmps
jg
gs
leave
xor
add
pusha
lods
and
and
pop
mov
retf
test
mov
bound
test
fst
mov
fs
repnz
arpl
out
bswap
and
(bad)
cmps
adc
lock
stos
mov
dec
mov
loop
imul
mov
arpl
out
in
or
stos
ret
cmps
pop
(bad)
fild
imul
outs
xchg
sbb
movs
adc
lds
test
push
out
mov
lods
cmp
ins
dec
jnp
pop
in
enter
call
out
inc
pop
movs
or
cli
mov
cli
pop
sbb
adc
mov
sbb
and
ret
mov
dec
jp
mov
stc
(bad)
adc
mov
adc
int
mov
loope
and
mov
dec
mov
imul
ror
fs
(bad)
in
(bad)
test
mov
iret
(bad)
mov
pop
and
push
not
fcomp
pusha
push
stos
mov
jge
and
mov
xchg
and
(bad)
aad
jge
add
out
sbb
add
xlat
mov
lahf
les
pop
push
lds
jmp
or
sub
ret
pop
and
ret
push
jmp
jmp
fld
nop
es
data16
(bad)
fnstsw
fdiv
push
(bad)
pop
mov
in
mov
leave
pop
cmp
ret
pushf
pop
mov
inc
add
rcr
inc
fstp
mov
arpl
je
xchg
sub
out
out
addr16
out
push
push
aaa
in
rol
push
ficomp
cmp
test
xchg
(bad)
xlat
xor
iret
(bad)
push
jno
or
sub
pop
pop
ja
mov
mov
mov
push
adc
sbb
mov
lods
mov
(bad)
js
jg
call
and
push
mov
movs
cdq
(bad)
stc
ins
adc
lods
fwait
pusha
jbe
fdiv
mov
jb
mov
xor
in
in
dec
fsubr
test
scas
ret
lods
js
jae
lahf
push
dec
pop
jg
mov
leave
mov
daa
(bad)
popf
out
mov
mov
cwde
mov
pop
ss
jmp
popf
mov
push
pop
mov
popf
xchg
std
pop
cmp
popf
test
mov
clc
inc
gs
cmps
cmp
scas
pushf
sub
mov
xor
pop
mov
jae
dec
ins
ja
scas
movs
pop
mov
sub
xchg
and
mov
push
int3
sbb
outs
ss
popf
jbe
push
outs
sub
jbe
imul
test
call
cs
and
loope
dec
add
jb
xor
fcomp
xchg
dec
jno
push
retf
mov
dec
and
jnp
push
(bad)
xor
cmp
mov
loop
(bad)
outs
(bad)
cmc
cmps
xor
pop
sar
xor
inc
ja
dec
adc
xlat
repz
jmp
sar
xchg
(bad)
test
ss
sub
aaa
je
ret
mov
jle
mov
xor
es
jle
inc
mov
pop
movs
outs
ret
(bad)
clc
ret
adc
hlt
lea
and
(bad)
shr
mov
sahf
mov
inc
jbe
sub
ins
(bad)
fmul
mov
push
xchg
mov
icebp
and
mov
imul
sub
stos
xor
adc
mov
outs
ins
push
(bad)
bound
push
xor
aas
das
call
in
dec
push
lock
ins
arpl
pop
pop
mov
sub
int3
leave
mov
rcr
lods
popf
movnti
and
jecxz
or
xor
(bad)
test
into
call
in
aaa
lds
pop
pushf
add
jae
pop
mov
ins
sbb
(bad)
push
push
jecxz
mov
mov
arpl
mov
pop
xor
xor
fdivr
jle
lahf
or
mov
or
int
mov
repnz
xchg
mov
cmps
jne
inc
add
mov
xchg
and
mov
les
sub
mov
ss
loop
scas
jge
scas
jns
dec
addr16
xchg
jg
gs
and
push
add
fsub
push
jmp
mov
loop
pop
test
xchg
push
in
mov
xor
mov
xor
sub
or
fcom
mov
sahf
cs
sub
xchg
mov
push
mov
lea
xchg
out
cmp
jge
pop
inc
xchg
sub
repnz
pop
popa
and
mov
xchg
push
into
into
mov
in
popa
xchg
jne
or
mov
xchg
cmp
mul
or
nop
mov
mov
sbb
jmp
push
mov
or
popa
or
je
inc
fldcw
add
xchg
jle
(bad)
ret
jg
in
add
pop
xlat
imul
pop
stos
aam
aas
xchg
or
jbe
cmp
inc
sub
pop
mov
fst
or
sbb
jbe
mov
pop
mov
jl
inc
cmc
jae
push
scas
fwait
scas
mov
das
ret
mov
fild
add
jnp
call
mov
test
bound
lods
cmps
test
or
and
mov
aam
cmps
popf
sub
fnstsw
xchg
sbb
enter
mov
scas
arpl
clc
pop
mov
scas
stos
mov
lods
or
dec
cmps
lea
ja
mov
test
mov
sti
scas
mov
mov
int
sub
pop
dec
sub
mov
popa
pop
pop
sub
movs
pop
stos
pop
mov
out
retf
or
repz
loopne
lds
push
nop
icebp
sbb
push
out
xchg
add
in
and
int
xchg
pop
dec
sbb
add
lds
and
daa
scas
inc
inc
(bad)
clc
lea
jmp
sbb
aaa
jae
(bad)
ins
aas
ss
dec
inc
mov
mov
sub
stos
ins
pop
push
sub
inc
sub
jo
jbe
imul
jle
shr
or
inc
xchg
cmps
movs
dec
add
mov
cmp
scas
sub
mov
cmps
cmps
mov
mov
mov
(bad)
aam
sub
inc
mov
lods
mov
mov
sub
das
mov
daa
jns
js
retf
(bad)
movs
ror
sub
mov
jbe
test
mov
xchg
sbb
test
lea
mov
push
sub
jo
loop
(bad)
scas
push
jmp
sbb
ins
xor
push
scas
ins
arpl
(bad)
push
push
jnp
and
mov
iret
xchg
jbe
movs
cld
fild
mov
test
xchg
inc
out
cmps
cmp
xor
pop
or
and
cmp
add
lds
pop
mov
sub
popf
mov
xor
mov
pop
lods
mov
cmp
je
pop
jne
jns
test
scas
(bad)
(bad)
scas
jp
xchg
pop
loop
adc
jle
and
jns
les
(bad)
cmp
mov
jnp
adc
fwait
out
push
movsx
jecxz
sub
fadd
jns
aaa
mov
aam
and
test
shl
icebp
jb
gs
dec
das
imul
lock
shl
mov
mov
stc
shl
push
cmp
in
cmps
cdq
cmp
mov
ds
retf
fisub
xchg
add
fidivr
xchg
and
adc
es
jno
test
push
gs
jnp
dec
jb
cmp
mov
adc
mov
xchg
mov
fdiv
call
or
inc
jecxz
push
call
sar
sbb
scas
das
jl
icebp
test
ret
in
pop
test
mov
sub
dec
push
or
lods
mov
ins
push
mov
fcomp
fwait
ins
xchg
out
dec
mov
sbb
aam
ins
or
xchg
xchg
shl
pop
sti
clc
sti
imul
jb
sar
(bad)
and
int3
ss
and
lods
xor
addr16
and
(bad)
cli
in
in
mov
es
pop
jnp
cmps
popf
(bad)
jns
loopne
jle
je
stos
outs
cmps
push
imul
inc
rcl
pushf
in
pusha
mov
dec
data16
(bad)
fisubr
jne
jl
push
(bad)
mov
in
cli
in
add
mov
in
int
cmp
dec
pop
xor
cld
mov
and
test
adc
jbe
dec
jmp
gs
lahf
push
pop
addr16
pop
add
ror
cmp
popf
xchg
out
add
mov
jo
push
push
xchg
mov
repnz
adc
ja
cmps
pop
jmp
ins
cmp
retf
loopne
cwde
pop
scas
icebp
cli
sbb
mov
(bad)
mov
mov
cmp
sbb
sbb
popf
imul
sub
or
and
xor
mov
sub
sub
rcl
add
xchg
and
mov
mov
mov
ja
and
mov
dec
imul
or
daa
retf
jl
inc
outs
mov
ret
ss
and
cmp
sub
xchg
and
mov
mov
jno
pop
jbe
cmp
pop
out
lahf
sub
call
dec
adc
xor
dec
push
push
jl
retf
mov
and
test
adc
cli
or
mov
movs
imul
pop
lea
pop
(bad)
jge
and
inc
pop
adc
push
enter
test
inc
mov
mov
sbb
es
add
fcomp
es
add
xor
xchg
stos
xor
fnstsw
push
iret
mov
call
idiv
cmps
xchg
fs
jmp
mov
sub
jg
mov
addr16
in
iret
fs
(bad)
mov
jmp
sti
mov
mov
jl
movs
lahf
(bad)
ror
dec
in
inc
dec
fdiv
cmp
xchg
cmps
mov
pop
sbb
fs
push
cmp
dec
stos
out
(bad)
dec
mov
xor
mov
js
test
inc
(bad)
iret
xor
sub
repz
and
icebp
(bad)
xchg
(bad)
mov
inc
push
push
cmps
adc
push
push
mov
(bad)
repnz
mov
ins
stos
mov
rcr
lods
mov
lds
fiadd
mov
retf
xchg
out
inc
lods
sub
movs
(bad)
out
jle
and
cmp
loope
jle
mov
sub
push
(bad)
sbb
inc
out
mov
icebp
cmps
dec
cmp
mov
push
push
dec
and
cmp
add
popa
mov
mov
and
sbb
pop
and
and
dec
mov
sub
fisttp
mov
and
out
dec
mov
sbb
daa
sbb
pop
mov
loop
mov
sahf
int3
lock
scas
and
loope
cmp
lea
cmp
adc
or
and
sbb
scas
push
jl
cmps
lods
sub
rcr
arpl
inc
daa
cmps
ins
loop
mov
mov
pop
sar
out
mov
inc
jmp
mov
pop
div
mov
sti
jns
mov
mov
jbe
or
cld
add
popa
xor
pop
add
jl
adc
lahf
push
dec
aam
push
pop
mov
mov
xor
es
mov
adc
sbb
cmps
fimul
push
loope
xchg
imul
test
jge
xchg
pop
aaa
cmp
mov
(bad)
clc
inc
outs
loop
iret
ret
data16
jmp
and
or
es
ds
xchg
dec
xor
dec
jnp
pop
(bad)
xor
loope
test
mov
adc
adc
or
fisttp
mov
sub
pop
cmps
out
lahf
mov
aaa
loop
ins
jmp
fst
sub
(bad)
int
push
scas
inc
fs
hlt
cmps
add
push
sub
out
stc
dec
fwait
push
push
out
test
fsub
xor
popa
std
mov
jp
and
pop
dec
xor
fisubr
in
or
adc
pop
movs
mov
fucom
sbb
retf
test
add
sub
push
rcr
sub
mov
ins
pop
jno
jo
dec
sar
push
push
stos
and
pop
or
mov
(bad)
std
scas
push
mov
cmps
pop
test
movs
and
dec
pop
in
dec
xchg
xchg
repnz
mov
movs
or
(bad)
cmp
xor
ins
xchg
pop
loopne
lods
in
cmc
dec
dec
or
scas
sbb
mov
daa
push
dec
or
in
jns
mov
jno
cld
call
pop
sub
aad
outs
aam
push
sub
lahf
adc
fstp
lods
sub
in
ret
in
rcl
mov
xor
pop
push
cmp
test
mov
dec
sbb
pop
int
dec
in
push
and
call
xor
jmp
nop
push
ror
jle
data16
stos
retf
call
mov
dec
shl
mov
icebp
push
adc
mov
std
add
scas
push
dec
cmp
stos
ins
xchg
out
pop
fistp
scas
ficomp
retf
int
push
stos
(bad)
add
adc
jo
push
jb
rcr
das
test
call
mov
cmps
fidivr
push
and
mov
inc
mov
jb
out
ds
int3
leave
pop
or
jno
add
inc
iret
fwait
inc
js
(bad)
push
in
pop
pop
and
fisttp
adc
cmps
aas
movs
movs
loope
inc
push
or
pushf
cld
xchg
jns
int
pop
stos
test
in
mov
es
pop
push
jle
cwde
mov
jge
lods
lods
sbb
push
mov
mov
call
jecxz
frstor
sub
push
mov
ss
jp
(bad)
adc
stos
jnp
adc
sbb
int3
add
enter
push
les
xlat
adc
ret
sahf
mul
cmc
ins
add
cdq
movs
mov
inc
adc
jmp
test
mov
sub
push
lods
cmp
mov
push
sbb
les
outs
cdq
mov
(bad)
test
mov
jecxz
jmp
pop
in
cs
cmps
or
pop
outs
pop
cmp
inc
jge
adc
in
adc
xlat
mov
pop
jg
jecxz
cmps
cli
retf
iret
pop
idiv
inc
fidivr
aad
sbb
mov
jne
int3
push
jg
adc
mov
push
jne
sub
fs
mov
test
cmp
(bad)
and
jns
push
mov
rcl
adc
and
mov
mov
sbb
push
pop
pop
in
ret
les
xor
adc
prefetch
adc
repnz
bound
or
shl
scas
movs
(bad)
pop
xor
ins
mov
fwait
mov
repnz
stos
pop
or
stos
jmp
inc
push
(bad)
fsubr
add
das
or
mov
pop
and
push
mov
mov
ins
inc
and
mov
js
loop
or
leave
mov
or
push
lods
daa
mov
mov
inc
in
sub
dec
cmp
stos
jbe
in
mov
inc
stos
scas
retf
mov
mov
imul
pop
fcomp
pop
xchg
sub
push
pop
pop
pop
pushf
mov
mov
adc
push
mov
mov
mov
imul
repnz
inc
sbb
inc
mov
or
pop
pop
sbb
movs
(bad)
call
dec
mov
out
mov
and
sub
xor
scas
es
test
jo
cvtpi2ps
cmps
scas
xchg
js
push
xchg
push
pop
inc
aas
call
pop
mov
pop
mov
std
movs
xor
mov
mov
xchg
imul
aas
ffree
mov
and
and
aas
es
(bad)
mov
call
movs
mov
push
mov
rol
out
or
jnp
jecxz
ss
cmps
and
addr16
sub
lods
test
lods
lods
inc
shl
movs
shr
jne
push
adc
inc
std
daa
fs
imul
jo
and
mov
add
xor
scas
test
pop
outs
and
dec
aas
sar
je
mov
cmp
xchg
stos
je
mov
xchg
cld
mov
enter
repnz
cwde
mov
lea
inc
lea
call
jmp
cmp
mov
jmp
pop
cmps
jne
pop
xchg
jge
xor
mov
mov
mov
xor
leave
mov
mov
test
scas
cmp
test
jbe
mov
in
(bad)
mov
mov
movs
and
ret
movs
in
je
out
ret
out
aam
cmp
aaa
cs
cmc
pop
mov
mov
mov
xchg
out
inc
cld
adc
mov
mov
dec
shl
sahf
fwait
mov
ins
test
xchg
data16
mov
std
es
test
dec
lods
ret
mov
bound
cmc
fisubr
stos
(bad)
cmp
or
pop
lds
not
pop
bound
xlat
xchg
mov
out
cmps
cmp
dec
mov
mov
or
mov
(bad)
sub
in
enter
cli
les
mov
les
pop
mov
push
imul
ins
loope
call
or
push
jle
loopne
fsubr
mov
mov
es
ret
mov
loopne
lds
in
std
fsubr
loopne
shl
movs
dec
test
stc
lea
mov
mov
jno
push
mov
retf
sti
sar
mov
mov
aaa
add
sar
out
in
pop
and
mov
nop
into
aam
mov
movs
in
movs
lods
pop
movs
and
movs
popf
loope
(bad)
xchg
sub
sub
sbb
mov
rcr
icebp
sub
jae
imul
dec
and
ret
mov
push
lock
retf
sbb
stos
clc
ret
stos
mov
pop
lahf
nop
pushf
push
mov
jmp
add
imul
pop
pop
mov
jno
scas
sub
pusha
and
push
inc
mov
out
jno
jo
xchg
xor
ins
test
scas
int3
mov
es
outs
sbb
in
sbb
inc
jae
jle
pusha
test
push
or
and
mov
test
cmps
cmp
mov
fistp
popa
dec
adc
add
mov
or
(bad)
sbb
lahf
(bad)
xor
jbe
test
cmc
jae
jne
in
out
out
les
sub
adc
mov
lods
pop
add
mov
push
in
cmc
mov
movs
add
xchg
lods
es
jmp
repz
test
jl
cmp
cmp
fs
sub
jnp
ret
into
xor
pop
bound
in
ins
sub
push
mov
aas
xchg
mov
push
push
xchg
rcr
mov
mov
mov
out
mov
mov
movs
dec
fiadd
xchg
ja
pop
stos
sub
mov
inc
mov
outs
je
jo
sbb
pusha
mov
mov
sbb
scas
jne
add
inc
mov
pop
cmp
inc
push
sub
loop
dec
(bad)
imul
jp
sbb
imul
jmp
xchg
xchg
in
movs
(bad)
pop
test
and
inc
mov
ret
push
fwait
mov
cmp
pop
pop
call
lea
xor
cli
(bad)
fbld
not
and
mov
pop
popf
sub
jp
dec
or
sbb
inc
xchg
xchg
fstp
push
mov
loopne
sbb
mov
dec
popf
sub
sbb
sbb
int3
mov
cmp
cmp
in
mov
or
xor
dec
mov
iret
movs
jp
mov
fcomp
dec
cmps
mov
cwde
or
loop
push
sub
imul
push
gs
loopne
sbb
jne
adc
sub
cmp
jb
mov
add
(bad)
aaa
rcl
loopne
popw
in
cmps
and
loop
sahf
(bad)
mov
pop
xchg
mov
lss
xchg
push
xor
aaa
jge
addr16
jnp
addr16
cdq
xor
sbb
dec
mov
and
jb
outs
inc
and
cmps
cmp
mov
test
les
dec
mov
arpl
xchg
mov
pop
scas
jb
mov
pushf
pop
jl
jns
jo
inc
jb
mov
sbb
imul
mov
ss
das
adc
mov
mov
out
xchg
inc
mov
push
call
push
cs
xchg
js
jg
add
mov
pushf
xlat
js
arpl
mov
push
fwait
adc
mov
pop
xchg
pop
xchg
mov
and
arpl
mov
cmp
push
add
push
adc
inc
inc
push
sbb
ja
mov
dec
aad
xchg
hlt
push
and
pop
jo
xchg
dec
jbe
and
and
mov
jbe
fidivr
ret
test
dec
sahf
mov
sbb
lea
xchg
out
cmp
mov
mov
(bad)
mov
in
addr16
iret
jmp
(bad)
out
jae
jmp
dec
es
sbb
fadd
fld
test
pop
inc
imul
add
xchg
imul
or
mov
and
lock
xlat
sbb
mov
imul
repnz
cmps
(bad)
sar
mov
outs
retf
das
dec
pop
add
outs
mov
jno
aaa
xchg
pop
push
scas
xor
test
cmp
xor
sub
addr16
xchg
out
push
and
popf
push
sti
mov
jns
sbb
std
jp
ret
mov
pop
mov
repz
repz
push
bound
mov
rep
dec
pop
out
jo
xor
pop
sbb
mov
and
in
(bad)
cs
jl
mov
xor
ja
loope
cmp
fsub
push
loop
aas
and
jno
cld
or
xchg
cmp
(bad)
int3
mov
inc
xor
jbe
sbb
mov
mov
jns
les
inc
add
or
mov
mov
arpl
ret
mov
movs
and
adc
movs
clc
repz
pop
jmp
jnp
loop
xchg
shr
out
sub
movs
mov
mov
inc
mov
or
xchg
mov
pusha
pop
cdq
ja
sub
cwde
mov
stos
mov
(bad)
sbb
xor
push
jecxz
stos
mov
repnz
scas
pusha
mov
rcl
pop
cmps
push
mov
mov
scas
aas
mov
sub
or
jg
xchg
es
jo
in
retf
lds
mov
es
mov
ror
in
jge
test
dec
inc
scas
shl
es
mov
pop
cwde
pop
pushf
int
xchg
cmp
dec
push
cmps
(bad)
xchg
dec
mov
dec
xchg
push
scas
dec
mov
in
lods
pop
cld
ins
dec
and
jmp
jl
int3
mov
and
sub
push
rcl
mov
mov
iret
and
pop
pushf
inc
xor
int3
mov
pushw
scas
xchg
in
ret
pop
xchg
or
lock
or
push
xor
inc
cmps
mov
jmp
inc
mov
xor
lea
(bad)
(bad)
in
or
(bad)
cmps
push
sub
inc
lds
pop
scas
cmp
dec
popa
(bad)
test
mov
mov
shl
stos
out
gs
mov
outs
cmps
scas
cmps
pop
aaa
sub
xor
cmp
add
mov
ja
push
ins
out
movs
push
mov
cs
pop
mov
mov
or
nop
and
cdq
xor
aas
dec
sti
lea
xor
dec
jle
lea
loopne
cmp
mov
add
pop
lods
adc
dec
inc
cmp
xchg
xchg
sub
xor
sub
and
dec
call
in
pop
mov
sbb
gs
fwait
cmc
mov
push
(bad)
xlat
push
cli
dec
daa
inc
dec
lds
ror
mov
xor
push
cmps
test
and
jle
sahf
push
mov
cdq
mov
mov
adc
pushf
call
jl
mov
adc
pop
jp
mov
push
pop
pop
pop
mov
lds
and
ds
xor
dec
pop
lods
loop
inc
cmc
xor
mov
nop
jmp
lds
sar
pop
add
sbb
fst
shl
jno
(bad)
repz
scas
cmps
or
movs
mov
cmp
jg
adc
fwait
mov
or
out
xchg
mov
lahf
dec
cs
cmp
adc
ins
inc
jle
adc
mov
call
in
lea
sbb
pop
loop
mov
ret
retf
mov
jmp
repnz
jmp
test
xor
fistp
gs
add
jg
aaa
pusha
xchg
push
or
mov
or
cmp
retf
loop
mov
out
cmps
xchg
mov
inc
push
stos
jle
dec
mov
shr
outs
(bad)
lds
mov
addr16
ds
xchg
xchg
mov
ret
je
adc
mov
cmps
mov
(bad)
outs
das
mov
add
sti
aam
add
ja
jmp
out
cmc
pusha
mov
fld
cld
add
add
xor
cmps
xchg
in
mov
xor
lods
pop
lea
xchg
sbb
js
lahf
into
(bad)
out
mov
cmp
mov
popa
stos
mov
push
mov
cwde
js
mov
push
mov
arpl
jbe
mov
inc
push
dec
push
xchg
pop
sub
daa
jp
pop
mov
mov
and
loope
push
call
inc
fidivr
push
pop
mov
(bad)
mov
mov
jle
repz
jmp
pop
mov
vmread
stos
fwait
dec
sti
arpl
pop
mov
or
mov
sbb
lea
or
mov
or
stos
ins
cmc
in
mov
js
mov
sahf
and
mov
jne
lods
jg
cmc
xchg
lds
and
cmp
fdivrp
push
mov
cwde
jnp
dec
push
lea
mov
dec
int
lahf
dec
dec
(bad)
scas
cmc
mov
(bad)
movs
fs
sub
lods
jmp
push
dec
sub
sub
rcl
mov
pop
xchg
mov
jne
mov
lods
cwde
fsubr
cli
dec
push
outs
ret
pushf
mov
in
pop
out
cmp
mov
test
sbb
jnp
mov
sub
xchg
inc
call
dec
ins
scas
xchg
movs
pop
test
pop
stos
mov
and
data16
jge
scas
jae
xor
pop
pop
cld
jne
mov
push
dec
shr
das
dec
xor
lds
shr
xchg
mov
test
(bad)
push
jp
and
shr
pop
cs
das
sub
cmp
imul
mov
pop
mov
inc
cmp
pop
test
pop
add
mov
shl
in
shl
in
ins
and
add
and
jle
ds
stc
push
sysenter
out
lods
out
xor
repnz
in
ins
mov
lods
mov
sti
inc
add
add
dec
mov
adc
popa
icebp
jns
call
cmps
cmc
mov
and
es
(bad)
fld
xor
sti
xchg
je
push
repz
push
hlt
or
pusha
jg
les
cwde
jl
popa
hlt
push
je
ja
lds
push
adc
imul
(bad)
push
mov
ret
pop
stos
ins
repnz
inc
scas
add
pop
jo
cdq
mov
mov
lea
ins
sub
cmp
or
push
mov
std
inc
mov
ret
jnp
add
inc
call
sbb
aaa
out
xchg
xchg
push
cmp
(bad)
cmp
sub
jle
adc
jl
retf
stos
pop
les
es
loop
push
mov
icebp
cmc
inc
mov
add
repz
pop
mov
push
nop
lods
jecxz
rcl
fisttp
and
xchg
pop
push
data16
xlat
std
and
in
je
jo
mov
and
ds
cmp
mov
add
cmp
mov
outs
cs
mov
mov
(bad)
or
push
ret
pop
pop
(bad)
ins
gs
ror
jo
jnp
movs
lods
ret
outs
call
push
jg
out
pop
dec
(bad)
(bad)
(bad)
fsubr
scas
pop
inc
shl
jo
dec
inc
aam
fcomp
pop
inc
xchg
push
shl
inc
cli
dec
loop
mov
inc
and
push
fisub
cmp
xlat
div
mov
dec
mov
xlat
sbb
mov
push
(bad)
std
dec
xchg
loop
add
pop
dec
push
in
xor
adc
sbb
lods
imul
mov
mov
movs
xor
cld
lods
fcomp
xlat
arpl
dec
cmp
stos
cmps
pop
xor
mov
outs
fimul
test
cdq
pop
movs
mov
sti
pop
inc
(bad)
cdq
movs
or
das
scas
pop
in
shl
mov
lahf
mov
ins
lods
sub
mov
arpl
mov
jns
mov
mov
xor
cmp
inc
push
stos
jecxz
in
jae
imul
pop
dec
ja
xchg
mov
or
(bad)
(bad)
das
jbe
or
pop
fcom
iret
xor
mov
jg
fidiv
mov
xchg
xchg
pop
mov
outs
add
clc
xchg
stos
or
mov
sti
xchg
and
xchg
scas
inc
imul
popa
(bad)
minps
dec
jge
cmp
cld
lods
or
sbb
push
iret
out
sbb
imul
mov
test
jnp
idiv
sbb
mov
mov
jecxz
and
jo
(bad)
dec
shr
ins
es
outs
or
cli
aam
xlat
jmp
stos
push
rol
shl
and
retf
aas
cmp
je
or
push
cld
jmp
fiadd
add
xchg
push
outs
ret
loopne
dec
pushf
int
or
mov
int3
add
(bad)
retf
push
test
lds
(bad)
call
mov
pop
push
push
or
rcl
repnz
shl
popf
scas
test
(bad)
out
fidivr
(bad)
sahf
shl
js
es
mov
div
data16
sub
popf
(bad)
pop
adc
mov
jg
lahf
(bad)
jge
js
jmp
pop
loop
ds
mov
mov
sti
add
jle
test
imul
sub
push
mov
add
and
bound
mov
lods
stc
mov
cdq
mov
push
ja
jns
movs
xchg
out
add
(bad)
mov
mov
inc
scas
xlat
cmc
mov
loop
jb
inc
or
push
mov
jo
shl
push
xchg
sub
sub
push
das
or
popa
and
sub
mov
cmps
push
inc
xor
dec
or
inc
addr16
je
fidivr
mov
mov
in
fist
mov
and
fisubr
pop
neg
fcmovnb
or
cmps
in
jg
add
std
xlat
lahf
aaa
test
mov
pop
inc
mov
push
cld
mov
adc
dec
jo
cmp
cmps
icebp
jle
sbb
imul
mov
outs
push
and
je
iret
arpl
lahf
push
fisubr
inc
scas
inc
adc
iret
jnp
mov
stos
or
jl
and
sub
inc
pop
or
pop
jge
xchg
cmps
lea
and
adc
cmp
inc
mov
ins
scas
cmp
mov
xchg
xor
loopne
ins
scas
push
mov
popa
lods
mov
jle
mov
cdq
and
mov
ret
cld
daa
mov
mov
pop
xchg
inc
enter
mov
mov
jge
fstp
test
movs
inc
fiadd
push
addr16
out
test
stos
mov
arpl
stos
retf
jle
movs
push
addr16
pop
sub
js
in
xchg
xor
jae
(bad)
sahf
lods
ret
jmp
lods
sub
pop
lods
xlat
div
fistp
jne
fsubr
cmp
mov
mov
jno
jns
mov
inc
shl
mov
outs
int
jp
sub
sub
(bad)
dec
ror
or
lods
out
sbb
rol
sbb
movs
sar
xor
jae
xchg
and
ret
lods
mov
inc
and
xchg
cmp
dec
push
push
push
das
sub
mov
xlat
int
dec
(bad)
push
mov
dec
scas
push
lods
or
je
xchg
stos
xchg
shr
mov
and
lds
jmp
mov
dec
or
push
dec
lahf
scas
push
stos
pop
mov
paddsw
pop
pushf
nop
cld
push
jns
popf
jp
lods
jmp
pop
mov
imul
push
in
xlat
sbb
or
add
cld
or
or
xor
xor
imul
jbe
aam
xchg
scas
mov
inc
scas
mov
jbe
cmp
cmp
add
fcmovnu
ret
mov
cdq
(bad)
mov
xchg
sub
cmps
pop
js
xchg
movs
xor
iret
ret
inc
jmp
retf
jmp
dec
test
mov
imul
sub
pop
test
and
ret
js
dec
push
mov
shr
(bad)
cmps
lods
(bad)
adc
mov
cmp
dec
int
aad
push
dec
movs
push
add
scas
out
into
fcmovu
and
cs
dec
xchg
addr16
mov
dec
pop
fisub
ja
mov
mov
enter
mov
sub
sub
lea
rol
mov
ret
sub
test
(bad)
mov
(bad)
mov
inc
mov
mov
cmp
fld
mov
icebp
jle
push
(bad)
mov
push
outs
sti
sub
not
lds
mov
mov
mov
xchg
lahf
pop
ja
aas
(bad)
imul
mov
xchg
fisttp
test
std
ret
mov
push
repz
stc
mov
out
or
lods
std
mov
mov
fisubr
scas
popa
xor
mov
hlt
xchg
int3
sub
adc
fmul
movs
jl
add
or
ror
mov
pop
push
test
mov
adc
mov
push
popa
ret
jl
push
std
xchg
(bad)
mov
imul
mov
shl
mov
jo
add
push
arpl
mov
jmp
(bad)
(bad)
mov
cmps
xlat
out
xor
mov
cmp
fisttp
stos
iret
mov
push
popf
fisub
out
adc
stos
pop
(bad)
out
pop
aaa
in
lahf
sub
sahf
mov
nop
push
mov
xchg
cmps
fisub
mov
pop
jmp
jae
(bad)
sbb
cs
jb
mov
sub
mov
or
aas
mov
push
push
mov
mov
lea
imul
ja
and
test
and
(bad)
and
addr16
fisub
ficom
imul
or
adc
(bad)
movs
pusha
mov
mov
aam
jge
xor
aam
mov
stc
movs
imul
cmp
aas
mov
mov
outs
fucom
scas
push
xlat
cmc
mov
jl
fidivr
daa
aad
test
fwait
mov
cmps
pop
xor
aas
xchg
icebp
out
jbe
sbb
ins
js
mov
ss
cmp
retf
ror
add
xchg
add
push
add
data16
and
jmp
repnz
(bad)
fimul
mov
lea
cld
mov
lods
scas
mov
lds
aaa
ja
scas
loop
xchg
and
pop
jnp
daa
fidivr
sub
xchg
mov
ins
mov
ja
sbb
test
scas
sub
lock
test
aad
clc
jl
out
push
in
cmps
sub
cmps
jecxz
cdq
dec
jmp
js
movs
lahf
scas
daa
mov
sub
pop
hlt
ror
mov
lods
scas
push
cmp
retf
pushf
movzx
mov
bnd
and
sbb
fbld
int
cmp
cwde
mov
fwait
mov
dec
push
stos
mov
push
stos
mov
pop
or
adc
cld
mov
jne
xchg
stos
cld
mov
xor
scas
test
sub
jmp
out
ret
fisttp
and
(bad)
sbb
sahf
pop
push
jle
mov
es
pop
xlat
mov
mov
lods
(bad)
pop
stos
and
into
test
in
iret
cmc
repz
dec
pop
mov
and
mov
out
ret
pmullw
nop
(bad)
ret
mov
aad
pop
mov
test
(bad)
jmp
mov
add
pop
mov
mov
movs
test
mov
loopne
aam
mov
lods
je
jmp
push
cmp
sar
fucomi
hlt
xchg
(bad)
or
mov
imul
mov
scas
mov
pop
ret
and
pop
mov
int
jecxz
jg
hlt
push
fdivr
(bad)
inc
loope
shl
sbb
cmp
add
ret
xor
dec
add
scas
iret
bound
call
xchg
test
addr16
addr16
stos
sti
xor
in
pop
lds
pop
push
ds
mov
pushf
mov
(bad)
jmp
daa
je
pop
loop
hlt
test
push
xor
pop
cmc
sar
adc
cmc
mov
in
fs
ret
ret
mov
aam
sub
push
std
xchg
pop
inc
ret
jae
test
sub
fcomp
cmp
stos
xchg
and
fild
in
pop
mov
and
xchg
imul
ss
cmps
jno
push
fldz
sub
add
and
nop
lods
(bad)
adc
mov
in
jge
ficomp
aas
repz
mov
and
xlat
in
fs
xchg
pop
call
add
mov
test
pop
jnp
pushf
add
outs
pop
jp
push
stc
sub
jnp
inc
mov
inc
imul
(bad)
and
cs
add
cmps
mov
sbb
xchg
push
jmp
ja
sbb
mov
jle
push
dec
jle
int3
(bad)
jmp
sub
mov
cmc
pop
xchg
out
imul
into
mov
out
xor
aaa
in
mov
movs
mov
mov
jp
cmp
and
and
mov
or
jp
cdq
dec
jmp
lea
stos
adc
sub
stos
out
pop
lea
cmps
and
mov
jnp
mov
lock
dec
mov
sahf
pop
mov
ins
sahf
mov
mov
imul
jno
test
jecxz
xor
lds
test
jne
in
(bad)
and
mov
sbb
mov
pop
cmp
(bad)
mov
mov
mov
jns
cmp
inc
jp
jo
jne
or
fidivr
xchg
(bad)
fsubr
(bad)
mov
push
scas
push
adc
dec
pop
mov
test
in
or
mov
fistp
pop
or
es
mov
cs
pusha
mov
in
pop
outs
in
mov
xchg
sub
(bad)
out
pop
xchg
push
push
mov
les
fucomp
stos
shr
fwait
pop
sbb
xor
stos
push
bswap
sub
aam
(bad)
leave
movs
(bad)
out
in
scas
outs
mov
aam
je
std
mov
xchg
mov
(bad)
mov
int
adc
pop
cmps
and
in
pop
mov
pop
inc
test
(bad)
sub
add
inc
adc
int
xchg
push
mov
mov
cld
inc
fnstsw
cmp
or
shl
mov
outs
mov
cs
scas
sbb
aaa
jmp
jnp
pop
lods
pop
xchg
jge
pop
dec
xchg
pop
mov
mov
cmps
mov
cli
mov
or
scas
in
aad
and
adc
movs
scas
sub
mov
clc
mov
sti
call
push
or
or
sub
loopne
(bad)
loop
cmp
pop
mov
jns
lea
bound
inc
jmp
jmp
xor
dec
push
adc
jnp
(bad)
scas
adc
adc
sub
cld
sbb
das
mov
cld
test
data16
xchg
in
jo
mov
cmp
sbb
retf
je
add
jae
movs
out
pop
mov
mov
pop
mov
jae
lods
push
jg
pop
mov
ret
fsub
jle
cmps
and
lds
jle
mov
push
xchg
ds
lods
jl
mov
mov
xchg
rol
test
cmps
test
pop
fsubr
scas
dec
or
ss
movs
in
daa
push
cld
ss
push
ret
sti
pop
mov
bound
xchg
fs
inc
mov
or
mov
xor
int
inc
in
fwait
adc
cmp
push
jg
aaa
or
cmps
inc
push
ins
fwait
or
mov
js
cmps
and
int3
inc
(bad)
pop
scas
cmp
mov
cmc
xlat
call
dec
mov
test
pop
fldcw
mov
and
(bad)
dec
lods
cmps
sub
pop
xchg
pop
jmp
pop
dec
sub
in
push
mov
inc
and
imul
out
sbb
in
and
jge
mov
mov
sar
(bad)
sahf
mov
mov
xchg
mov
pushf
xchg
xlat
fwait
pop
cmp
clc
test
and
pop
nop
xchg
jae
mov
(bad)
ss
ffreep
mov
mov
jle
popf
scas
pop
ret
popa
loope
push
es
ds
and
mov
cli
or
cmc
mov
test
xchg
xlat
popa
in
mov
dec
movs
ins
xchg
pop
cmc
mov
sub
cli
jle
dec
pop
shl
sbb
mov
cwde
aam
cmp
frstor
pusha
(bad)
jmp
call
xchg
outs
cmps
pop
mov
jmp
jmp
enter
sub
cmps
xchg
neg
xchg
mov
push
sub
mov
repnz
cmp
loopne
rcr
test
sahf
shl
cmps
or
push
addr16
xlat
mov
scas
sar
pop
push
imul
dec
nop
sbb
sbb
pop
jle
mov
xor
cmps
jnp
or
inc
ins
mov
pushf
in
sub
mov
xchg
xchg
and
bswap
pop
mov
movs
std
sub
stos
lods
mov
call
jmp
stos
out
jb
cmps
in
cmps
xlat
test
out
je
out
scas
sub
push
stos
outs
test
sub
push
push
xor
sahf
mov
sbb
jno
dec
and
mov
add
cmps
mov
in
mov
(bad)
mov
cld
movs
retf
and
sub
call
pop
jg
push
pushf
lods
inc
jle
(bad)
dec
jge
retf
in
shr
cmps
in
retf
fisttp
jmp
ret
cmc
and
sbb
mov
gs
out
dec
mov
pop
test
dec
lea
xor
mov
(bad)
out
xor
pop
repz
and
jl
inc
gs
scas
in
inc
jae
xchg
pushf
mov
inc
fiadd
cmp
pop
mov
call
into
ret
mov
ja
movs
sub
(bad)
sub
mov
fs
adc
xchg
jbe
xchg
ret
or
mov
xor
dec
mov
xor
mov
mov
inc
mov
ins
mov
popf
fwait
ins
jns
loope
inc
dec
call
mov
push
lods
ret
xchg
pop
mov
cs
in
data16
dec
(bad)
mov
mov
mov
adc
stos
not
pop
cmp
mov
mov
stos
pop
mov
xchg
pop
pop
cmp
or
and
call
mov
and
call
movs
(bad)
clc
inc
mov
xchg
cmp
mov
adc
xchg
call
mov
jle
fsub
pop
inc
(bad)
xchg
repnz
sbb
sbb
inc
sbb
cmp
shl
xor
cmps
sub
(bad)
xor
mov
inc
mov
js
dec
fsubr
mov
je
or
fcomp
into
lock
iret
call
inc
mov
je
fdivr
mov
xor
mov
xchg
push
stos
je
pop
cmps
imul
fisub
dec
xlat
sub
or
fs
(bad)
enter
jl
imul
aam
push
push
mov
call
arpl
add
gs
pop
cmp
pop
pop
add
push
mov
and
fist
ret
(bad)
out
movs
cli
push
add
jg
dec
test
and
mov
xor
mov
dec
in
int
jmp
xor
das
scas
xchg
jnp
cmp
scas
ret
fs
bound
xor
stos
cmp
stos
loop
jl
ret
dec
mov
and
xchg
stos
test
sub
jbe
pop
xchg
lods
sub
ins
add
retf
scas
cmps
mov
mov
xchg
popa
mov
sub
out
inc
test
ret
cmp
sahf
and
fmul
leave
pop
pop
sti
sar
test
xchg
jo
pop
xchg
ficom
out
lahf
scas
jo
or
rcl
and
add
(bad)
mov
xor
xor
adc
and
fsubr
inc
jb
(bad)
fsubp
lock
mov
sar
sbb
mov
out
mov
cmps
call
mov
xchg
movs
pop
xchg
scas
(bad)
outs
ret
fst
inc
out
sar
pop
sub
out
iret
(bad)
adc
push
addr16
pop
mov
push
xor
jmp
xchg
adc
push
push
jg
stos
hlt
and
mov
inc
mov
push
(bad)
fwait
push
psubsb
test
in
sub
sbb
sub
xchg
lods
out
in
pop
movs
dec
xchg
xor
fmul
cmc
fwait
ins
adc
popf
mov
xchg
jge
out
push
pop
data16
and
lods
xchg
mov
(bad)
mov
ins
inc
popf
xchg
pop
or
jns
xchg
fistp
dec
fldcw
call
stos
mov
sub
adc
mov
(bad)
push
dec
jb
dec
fbstp
aas
cmp
out
loopne
imul
cmc
sbb
pop
shl
mov
mov
add
outs
cld
out
xchg
cmps
jmp
inc
mov
pushf
in
jne
jle
stos
daa
ret
mov
sub
int
loop
lods
push
ja
(bad)
mov
ds
or
sbb
inc
(bad)
cwde
mov
clc
jmp
addr16
outs
adc
dec
(bad)
mov
retf
sub
mov
fwait
cmp
out
retf
push
addr16
dec
scas
sub
mov
(bad)
pop
cmp
aam
mov
inc
sbb
outs
sub
movaps
jle
adc
jmp
mov
sbb
imul
mov
cs
cmps
ucomiss
mov
sbb
pop
adc
xchg
call
push
stos
inc
adc
movs
jg
call
xchg
push
sub
sbb
adc
sbb
jmp
push
jecxz
inc
sbb
xchg
call
es
imul
adc
mov
fidiv
(bad)
xor
xchg
movs
sub
mov
cdq
adc
aam
jo
xchg
shr
(bad)
sub
mov
xchg
dec
dec
dec
das
movs
push
cmp
mov
outs
es
arpl
inc
or
bnd
xchg
outs
pop
and
mov
addr16
sahf
movs
std
and
sub
test
or
sbb
sub
cli
mov
fs
cmp
or
das
mov
cs
pop
mov
mov
cmps
sub
mov
mov
lea
jl
sub
jmp
rol
adc
add
fwait
push
mov
call
icebp
mov
lds
push
call
popa
adc
call
cmps
leave
call
ds
fisttp
bound
out
jmp
(bad)
jae
(bad)
sahf
dec
rol
inc
pop
jae
lock
rep
pop
sbb
cli
loop
out
pop
xor
fs
mov
pop
sbb
(bad)
pop
in
jns
mov
adc
loop
lds
mov
imul
jnp
adc
es
adc
mov
mov
xchg
xchg
push
arpl
or
rol
ret
mov
(bad)
cmp
dec
call
mov
pop
dec
js
pop
jno
jl
pop
mov
daa
ret
fs
test
nop
mov
cdq
sbb
sbb
clc
movs
or
mov
mov
call
out
sbb
sbb
in
add
int3
fsub
mov
ins
popf
lahf
ja
xor
add
xchg
rcr
jb
mov
mov
adc
shl
pop
scas
push
cmps
cmp
pop
out
push
and
arpl
push
jns
test
mov
jb
sub
rcr
mov
xchg
mov
bound
clc
pop
aas
mov
jmp
add
push
sar
push
mov
push
fwait
mov
push
xchg
mov
mov
dec
lods
sahf
jb
cmp
dec
jp
stc
leave
xchg
outs
mov
jg
mov
into
icebp
and
into
loopne
scas
mov
aad
cmps
pop
mov
sbb
es
les
ret
push
cs
addr16
xchg
pop
shl
lock
ror
pop
sub
in
mov
push
aas
pop
mov
sub
mov
movs
mov
mov
sbb
adc
mov
xchg
push
xchg
scas
sub
xchg
jmp
mov
in
int
lods
jg
cmp
jl
mov
ror
ja
imul
pusha
sub
cmp
cmps
push
stos
inc
xor
inc
cmps
out
push
xchg
push
push
adc
std
mov
(bad)
mov
sub
leave
inc
shl
cli
and
xchg
mov
sti
mul
xor
mov
inc
push
push
push
or
and
xchg
xor
fcomp
inc
dec
stos
hlt
mov
stos
sbb
out
mov
mov
stos
sbb
mov
mov
enter
mov
mov
sub
push
das
lods
mov
fldcw
scas
popf
jb
jno
push
mov
in
je
sub
es
fld
xor
out
adc
mov
mov
shr
imul
fdivr
aas
mov
jo
ror
cdq
jbe
fs
mov
arpl
aam
mov
fisubr
(bad)
out
inc
sbb
push
inc
jnp
std
jns
mov
add
sub
add
cmp
fist
outs
stos
in
aas
outs
mov
into
mov
pop
fmul
rcr
or
cmps
stos
pop
jno
push
leave
mov
adc
and
pop
es
and
cmp
sbb
mov
gs
lods
out
mov
clc
jge
lods
std
pop
(bad)
fcom
xchg
sbb
xchg
js
adc
pop
mov
addr16
js
mov
pop
cmp
imul
ins
pop
es
jg
cdq
xchg
ret
xchg
sub
mov
xchg
aaa
(bad)
mov
fstp
aad
mov
pop
mov
enter
add
cs
mov
dec
pop
jmp
std
adc
pop
mov
mov
cmps
mov
mov
movs
mov
enter
enter
not
jle
in
mov
and
es
movs
arpl
dec
sub
jle
sub
jle
ins
(bad)
pushf
fbld
imul
adc
add
icebp
mov
fsub
add
jmp
jmp
pop
popf
mov
cmps
fiadd
aas
jl
mov
jl
sub
imul
es
mov
sub
jbe
jb
scas
mov
mov
(bad)
loop
dec
dec
pop
xor
and
stos
and
sub
xor
mov
into
pop
fadd
outs
movs
inc
iret
jg
pop
xor
loop
and
add
int3
jae
or
popf
pop
push
xchg
movs
aad
inc
ins
rol
imul
xor
add
cmp
ss
jecxz
or
out
test
mov
mov
xor
jno
mov
sbb
and
mov
popf
mov
nop
add
popf
jg
sub
stc
cmp
call
fdiv
pop
push
das
adc
jge
add
adc
sahf
stos
pop
aam
out
mov
test
cmp
jp
shr
pop
sar
gs
push
jo
dec
ds
outs
push
(bad)
and
(bad)
(bad)
sbb
test
mov
test
cmp
adc
and
xlat
in
aad
lods
mov
ror
stos
(bad)
mov
ds
(bad)
in
cmp
aaa
loop
outs
shl
clc
mov
and
mov
loope
in
ins
cmps
jns
mov
mov
dec
rcr
xchg
iret
mov
sub
stos
xor
test
ret
nop
js
in
in
lock
movs
test
mov
jge
push
mov
jno
mov
push
mov
push
retf
retf
cli
sbb
jmp
fisttp
or
fsub
aam
xchg
bound
icebp
adc
lods
mov
jo
std
cdq
inc
shl
inc
lods
mov
xchg
out
adc
sbb
test
xchg
xchg
test
addr16
fdivr
jne
fist
mov
ror
shl
pop
inc
add
scas
arpl
test
mov
inc
jno
cmc
mov
mov
(bad)
cmp
adc
or
ret
cmc
out
sub
test
inc
sar
daa
sub
dec
adc
(bad)
pop
mov
outs
stos
sbb
(bad)
push
push
mov
mov
add
ins
add
sub
sub
mov
xchg
mov
(bad)
scas
(bad)
mov
sub
packuswb
rcl
shr
push
jle
stos
aas
(bad)
xchg
push
lds
(bad)
fucomp
mov
xchg
cmp
sub
ror
es
ds
mov
aaa
xchg
xchg
in
and
jg
out
scas
in
out
lds
add
mov
cdq
scas
retf
xor
sub
inc
dec
xchg
int
ss
outs
xlat
iret
pop
fdivr
jmp
xchg
test
imul
nop
jns
push
cmps
sub
xchg
(bad)
mov
test
mov
push
adc
push
lahf
cs
sub
inc
stos
fist
pop
jns
inc
in
in
jbe
jbe
adc
test
test
push
jp
mov
(bad)
test
sub
mov
popa
mov
mov
mov
sbb
pusha
fstp
test
push
pop
jg
fld
in
add
gs
shr
movs
jns
mov
imul
pop
das
scas
lods
iret
inc
das
mov
movs
mov
aam
and
hlt
jecxz
mov
xchg
lea
add
fldcw
xor
test
int
lods
scas
pop
mov
mov
mov
cli
mov
jg
in
mov
(bad)
push
xchg
sub
lods
and
xchg
ficomp
ins
jle
xor
rcl
call
cmps
push
addr16
shr
jg
push
jg
mov
mov
repz
pop
test
mov
jo
or
xchg
mov
push
mov
cmps
cmps
push
inc
or
neg
pop
adc
in
clc
pop
jmp
out
cli
mov
mov
das
lods
ror
mov
lock
push
xchg
pop
jmp
ins
std
sub
(bad)
imul
mov
retf
xor
sbb
pop
xor
lea
out
lds
cmc
out
jmp
add
mov
mov
sbb
sub
das
je
call
(bad)
mov
mov
sub
mov
cmp
add
xchg
pop
sbb
mov
loopne
mov
pop
test
ret
mov
cmp
and
or
fnstcw
(bad)
sub
inc
in
loopne
(bad)
jns
dec
(bad)
mov
jp
imul
bound
xchg
mov
xchg
jb
inc
push
adc
cdq
jp
push
ins
daa
fs
sub
xchg
or
mov
out
int3
clc
mov
addr16
mov
mov
clc
xor
(bad)
push
imul
sbb
add
mov
(bad)
mov
mov
and
enter
inc
mov
test
(bad)
mov
pop
(bad)
call
mov
imul
pop
inc
jg
or
mov
mov
push
jo
cmp
scas
or
int
dec
jl
mov
and
inc
mov
jbe
pop
jno
pop
cmps
dec
out
movs
out
popf
mov
shl
and
and
adc
add
jle
lds
xor
fmul
mov
lods
push
mul
mov
popa
lock
cmps
mov
lds
movs
in
(bad)
mov
test
out
js
mov
stos
cmps
sbb
or
outs
and
jno
add
ficomp
hlt
mov
addr16
stos
cmp
call
mov
mov
adc
lds
out
mov
pop
cmps
add
sub
ret
fs
stos
dec
adc
pop
mov
scas
std
xchg
ins
or
neg
xchg
test
mov
mov
cmc
(bad)
and
scas
out
lea
iret
ret
mov
fcomp
loope
lods
nop
mov
lock
sar
jne
popf
jae
pusha
mov
ins
lods
aam
neg
mov
push
push
or
and
addr16
icebp
in
pusha
mov
cld
in
cs
fcom
jge
sub
movs
push
cdq
jl
and
mov
inc
pop
inc
ss
js
push
test
in
mov
aas
sub
push
mov
mov
cmps
push
and
jle
inc
in
inc
xchg
in
(bad)
lds
add
out
fwait
cmps
push
pop
mov
shl
es
adc
and
ins
lahf
je
shl
imul
pop
mov
retf
push
fild
jne
ins
pop
push
mov
out
or
retf
loopne
inc
in
xlat
(bad)
repz
and
xor
pop
push
xor
es
and
inc
ret
iret
inc
sub
jb
jno
ins
cs
(bad)
adc
cmp
push
push
cmps
mov
push
mov
xchg
scas
mov
cmps
adc
push
lea
aaa
cmp
stc
jnp
mov
gs
mov
std
fisttp
xchg
mov
add
je
lahf
pushf
repz
stc
stos
xor
clc
(bad)
es
(bad)
test
jge
xor
push
stos
stos
add
lods
fsub
into
enter
sub
mov
push
out
push
(bad)
lods
jg
loope
dec
imul
xchg
mov
and
mov
int3
scas
mov
aam
mov
jle
sub
adc
daa
into
outs
mov
cmovg
rcl
lods
arpl
jecxz
pop
stos
adc
mov
cmp
jo
xchg
mov
sub
test
addr16
inc
test
cmp
pushf
aaa
mov
inc
xchg
cmp
mov
mov
mov
(bad)
fstp
scas
stos
inc
setae
and
imul
cs
inc
call
or
jbe
xchg
mov
stc
scas
mov
fadd
pop
sub
stc
scas
sar
xchg
xchg
mov
out
fcomp
cld
cli
cld
rcr
bound
xchg
jecxz
mov
sub
xchg
test
ins
in
mov
or
adc
jnp
mov
scas
(bad)
fild
sub
push
xlat
mov
pop
(bad)
and
and
mov
ja
mov
iret
cmps
lds
mov
mov
ret
rol
add
cld
das
sub
add
cmp
(bad)
adc
pop
cmp
xor
jno
or
out
mov
sahf
cmp
ins
addr16
mov
cwde
push
addr16
pop
mov
data16
and
(bad)
loopne
xor
adc
mov
xchg
cld
mov
jge
push
iret
xor
push
or
cli
dec
mov
mov
movs
jnp
sub
jae
gs
lods
stos
add
call
mov
aam
movs
lds
pop
mov
add
adc
sub
rcr
jp
pop
sbb
jle
pop
mov
mov
xchg
cli
scas
test
pop
mov
cmp
adc
mov
mov
push
jg
aaa
jmp
pop
retf
adc
test
push
mov
cmp
push
or
sub
es
jo
sahf
(bad)
mov
jg
lahf
mov
das
mov
and
push
adc
daa
sub
dec
xor
fisub
sub
cwde
jl
and
movs
test
mov
test
add
pop
scas
lods
push
cmp
mov
sub
and
pop
(bad)
jo
inc
sbb
je
inc
js
jns
aaa
outs
outs
push
mov
mov
pop
mov
call
sar
xchg
sub
jmp
dec
and
fsubr
mov
stos
mov
dec
stc
aas
ror
retf
mov
retf
xchg
mov
(bad)
aaa
push
scas
adc
data16
and
mov
jne
sbb
arpl
icebp
test
gs
popf
dec
pop
mov
mov
push
ret
out
jbe
cmp
jno
dec
ja
pop
dec
pop
mov
mov
jbe
shl
fistp
and
mul
mov
mov
mov
(bad)
ret
fbstp
mov
push
in
xlat
pop
xchg
mov
(bad)
je
pop
push
adc
icebp
mov
adc
mov
add
jg
scas
and
ds
iret
or
scas
pop
xchg
inc
(bad)
mov
gs
(bad)
rcr
fs
or
pushf
or
jbe
pop
or
mov
dec
es
test
outs
or
lahf
sbb
ret
jecxz
lahf
fsubr
mov
std
stos
out
jg
push
jge
mov
xor
xchg
rcr
dec
and
stos
bound
mov
aaa
and
jae
ds
dec
xchg
and
cs
xchg
imul
and
es
iret
or
not
pusha
sub
ret
outs
sbb
and
mov
pop
mov
fldenv
mov
mov
xchg
mov
jmp
imul
(bad)
push
jge
fisttp
cmp
ins
test
adc
lea
cmps
push
mov
pop
or
(bad)
push
ins
vpcmpeqb
loopne
cmps
xor
or
scas
and
test
dec
mov
xor
mov
push
fimul
lock
out
pop
jmp
xor
popa
dec
sub
push
or
xchg
and
stos
add
sbb
push
mov
push
les
inc
push
jns
retf
cmp
test
xchg
daa
sub
in
pop
mov
outs
cmps
xchg
jmp
fild
out
push
push
popa
push
je
fstp
sub
adc
aas
pop
xchg
and
popf
scas
pop
movs
sahf
dec
icebp
add
mov
adc
cld
cmps
mov
rol
into
cmps
cmps
and
sub
sub
enter
push
sbb
outs
imul
xchg
cs
adc
sub
mov
fadd
jmp
gs
aaa
fst
aam
aas
pop
jle
retf
(bad)
pop
mov
jae
retf
mov
xchg
test
test
mov
mov
(bad)
ins
sub
lods
push
cmp
push
sub
mov
mov
mov
cld
aad
cdq
call
pop
mov
jo
mov
jae
or
add
ins
cld
out
cmp
jmp
ins
pop
jo
adc
add
jnp
mov
mov
add
dec
pop
push
mov
(bad)
cli
ret
cld
adc
retf
jo
add
mov
xchg
stos
scas
push
jbe
lock
(bad)
aam
xor
ins
outs
loopne
xchg
mov
mov
add
jle
dec
ins
xchg
mov
pop
xchg
jp
pushf
fwait
pop
and
jbe
dec
dec
nop
cmp
inc
xchg
jmp
dec
test
js
and
mov
rcr
mov
jmp
(bad)
mov
pop
jle
add
cmp
enter
out
adc
popa
in
call
push
mov
ret
and
rcl
pop
popa
aam
out
jl
cmps
das
bound
cmc
mov
loope
pop
adc
mov
xlat
sbb
gs
sub
hlt
(bad)
mov
mov
(bad)
xor
(bad)
mov
(bad)
push
mov
gs
popa
mov
scas
add
movs
push
es
adc
imul
enter
das
adc
mov
sub
mov
loopne
mov
fsub
outs
xchg
ret
jnp
mov
movs
(bad)
and
in
fwait
mov
mov
xor
scas
std
cmps
pop
icebp
mov
mov
mov
test
dec
mov
xor
and
lods
cmp
fnsave
sbb
nop
mov
sahf
imul
ret
xlat
cmp
add
push
cmp
add
or
lea
imul
in
out
cmps
xchg
add
test
mov
std
cmps
ret
and
outs
inc
mov
call
adc
sub
fbstp
mov
adc
imul
push
mov
mov
lods
adc
push
sahf
bound
lods
out
sub
and
inc
lods
shl
outs
gs
sbb
mov
stos
inc
mov
ja
pop
xor
stc
jmp
push
cmp
jge
mov
shl
(bad)
sub
fbld
cmc
cs
mov
mov
mov
inc
stos
ret
push
mov
fadd
pop
mov
std
(bad)
and
cmps
add
in
setns
mov
in
jge
dec
mov
xchg
shl
fnstenv
test
ins
(bad)
jae
sti
cmps
(bad)
jp
aas
mov
cmp
gs
jmp
dec
push
pop
out
movs
(bad)
(bad)
sbb
inc
clc
loopne
and
sbb
test
mov
je
mov
test
int
dec
jmp
(bad)
mov
aas
mov
xchg
bound
sub
stos
mov
mov
mov
imul
test
mov
jg
(bad)
push
add
pusha
mov
mov
fsub
daa
stos
pop
xor
sub
cli
shr
ret
stc
sub
mov
jnp
xchg
and
mov
dec
cmp
cmps
scas
push
push
stos
sub
mov
ins
inc
dec
mov
sbb
repnz
mov
cmp
xchg
outs
mov
mov
mov
mov
jns
stos
mov
mov
call
mov
mov
push
js
retf
dec
jecxz
push
mov
jno
mov
ret
xchg
fdiv
jne
or
pop
add
lods
pop
mov
scas
cli
jmp
push
mov
adc
pop
clc
movs
or
pop
out
retf
push
mov
stos
or
mov
cmp
adc
aas
in
pop
mov
adc
and
movs
jmp
push
mov
sbb
mov
retfw
mov
add
mov
push
fsubr
push
mov
ja
cli
mov
mov
mov
push
in
or
and
ins
cs
mov
cmps
sub
mov
js
fcomp
xlat
mov
call
push
outs
movs
mov
push
ret
mov
lea
(bad)
test
cld
mov
cmp
cdq
les
retf
mov
xor
mov
push
retf
(bad)
push
lahf
dec
and
pushf
dec
xor
sahf
and
mov
das
cld
mov
outs
popa
xchg
adc
mov
lods
in
enter
es
in
jb
mov
push
ds
mov
cs
pop
mov
mov
xchg
das
in
stos
jge
sbb
mov
dec
mov
sub
cli
jns
mov
lods
cmps
(bad)
mov
jbe
xchg
pop
jge
mov
jg
int3
mov
(bad)
lea
lods
retf
fiadd
jne
imul
jmp
es
idiv
lahf
cmps
mov
mov
lea
sbb
cli
sub
ds
scas
add
fmul
xor
xor
and
and
mov
mov
add
sub
ja
ret
dec
dec
movs
cmp
xor
pop
ins
movs
icebp
stos
lahf
fild
fs
xchg
cmps
fsubp
push
repnz
iret
cdq
bound
(bad)
mov
aam
shr
in
and
das
jnp
lods
les
retf
mov
xchg
aam
aad
fwait
jg
out
jmp
ss
and
aad
mov
dec
cmovnp
neg
cmc
or
inc
mov
mov
lds
fdivp
js
test
aam
shr
lock
fist
lahf
sar
mov
xchg
in
and
loope
(bad)
cdq
xchg
fimul
mov
dec
cdq
aad
fwait
movs
fs
inc
ret
shr
cmc
xchg
lahf
rcl
in
pop
scas
(bad)
and
(bad)
daa
in
fsub
icebp
mov
jle
inc
or
and
std
dec
pop
lahf
sub
xor
(bad)
mov
add
mov
jb
push
addr16
add
mov
outs
call
jns
shl
push
jae
mov
jle
test
pushf
imul
sub
ret
xor
lods
dec
inc
jle
out
ins
pop
mov
int
mov
jno
dec
aas
lods
xchg
jb
sbb
or
aas
sar
inc
dec
cli
jle
xchg
jg
lods
out
sbb
jge
scas
and
pop
test
and
bound
xor
mov
das
lods
and
cmp
xchg
jbe
dec
xor
dec
bound
sub
mov
jno
test
mov
push
fs
mov
xlat
xrelease
dec
push
mov
fucomip
push
sub
fst
mov
mov
inc
test
pop
inc
sbb
imul
jle
scas
sti
fistp
mov
mov
adc
add
call
faddp
pop
sahf
mov
xchg
pop
mov
repz
stos
lahf
dec
outs
sub
mov
lods
push
rol
dec
in
jle
jl
in
(bad)
nop
lds
(bad)
push
mov
retf
push
mov
mov
jbe
xchg
pop
mov
test
retf
retf
cmps
xchg
cmp
rcl
mov
inc
lahf
sti
or
in
mov
pop
cmps
add
sub
stos
xlat
mov
iret
aam
sbb
rcr
sub
ficom
rcr
mov
push
lea
movs
and
pop
aad
xor
lds
mov
fmul
cmp
ret
mov
mov
mov
inc
and
mov
aaa
popf
dec
and
fld
or
(bad)
mov
mov
mov
jnp
mov
out
ja
xor
(bad)
loope
jnp
adc
lods
xlat
mov
jno
xor
mov
shl
cmc
in
ffree
mov
rol
mov
gs
sbb
in
fsubr
dec
out
and
mov
sbb
imul
push
dec
mov
mov
shl
pmuludq
jne
retf
stc
adc
ret
xor
inc
pop
xchg
or
idiv
pop
(bad)
lods
jmp
shr
retf
ror
fbld
outs
xchg
cmp
(bad)
sahf
jne
jmp
pop
pop
dec
jl
ret
mov
mov
and
mov
xchg
test
loop
cmp
imul
cs
mov
pop
jae
mov
jge
sub
jnp
mov
stos
vhsubps
xor
jbe
lods
or
and
mov
cmp
mov
xchg
shl
mov
cmp
dec
mov
ins
shl
xor
aaa
mov
repnz
cmp
mov
jns
inc
shl
dec
(bad)
cli
lods
mov
jns
sbb
(bad)
mov
or
mov
jne
int3
ret
push
dec
dec
mov
or
(bad)
sub
out
dec
push
mov
dec
and
jae
cs
jmp
test
ret
stos
dec
adc
mov
cmp
das
test
mov
ds
pop
dec
lods
movs
jecxz
and
dec
mov
fs
ins
mov
cs
jge
pop
and
lods
imul
mov
add
mov
or
push
leave
mov
push
jl
sub
test
movs
jmp
call
mov
stc
sub
call
ret
test
(bad)
pop
cmps
push
sub
repnz
jmp
cmps
pop
sub
cmp
nop
cli
xor
dec
dec
adc
jns
mov
push
sub
sti
(bad)
dec
mov
dec
pop
das
imul
cmps
jb
xchg
and
push
je
repz
xchg
enter
jg
jge
or
imul
fcmovnbe
dec
xchg
lods
cmc
inc
shl
loope
or
out
sahf
add
ja
xchg
icebp
loopne
jge
(bad)
shl
sub
push
sub
mov
test
push
cld
scas
push
add
shr
mov
jecxz
es
ds
imul
movs
mov
mov
fisub
in
int
mov
and
hlt
jmp
int3
jg
cmps
imul
mov
pop
pushf
jne
jo
push
in
std
xchg
xor
scas
dec
mov
mov
lds
inc
fwait
gs
mov
jmp
xchg
inc
mov
ins
pop
mov
aam
mul
inc
gs
cmps
icebp
stos
xor
popf
jmp
mov
inc
pop
ja
ret
mov
adc
jge
fsubr
mov
lods
or
fist
cld
popf
fdivr
dec
mov
add
shld
push
pop
pop
fwait
xchg
jp
or
add
mov
inc
test
xchg
adc
arpl
mov
mov
dec
adc
mov
sub
mov
test
ret
pop
mov
pop
ret
dec
repz
jb
outs
xchg
pop
lods
ja
nop
pusha
jg
ins
mov
sub
mov
or
mov
neg
mov
icebp
cmp
inc
sub
ss
data16
(bad)
int
in
and
ret
xchg
sub
test
mov
mov
stos
inc
lods
(bad)
cmc
adc
in
mov
dec
fld
cs
xchg
repnz
mov
in
sti
sub
jmp
jo
mov
out
mov
icebp
sub
loop
es
into
popa
dec
bnd
test
pop
(bad)
mov
lea
sar
adc
scas
out
sbb
pop
jb
mov
mov
sbb
xchg
icebp
mov
(bad)
mov
das
(bad)
loope
inc
push
inc
sub
fwait
or
outs
mov
dec
fadd
jno
jns
sub
cmp
mov
fsub
mov
and
movs
aas
rcr
inc
and
mov
mov
sar
movs
lods
sub
mov
lds
push
das
mov
aas
and
push
retf
mov
pushf
lahf
jg
xlat
std
mov
outs
stos
movs
in
adc
jbe
or
sub
(bad)
push
cdq
(bad)
lahf
mov
out
rcl
in
lds
shl
ins
outs
ror
sub
sub
daa
into
lds
mov
movs
push
xlat
hlt
mov
test
push
ss
mov
pop
mov
mov
pop
xchg
fwait
xchg
dec
pop
dec
mov
cmps
mov
push
ret
scas
mov
(bad)
frstor
jecxz
(bad)
fnstenv
imul
lea
and
xchg
in
push
movs
mov
dec
mov
iret
inc
mov
test
jmp
mov
inc
retf
fcmove
fwait
mov
data16
push
mov
mov
mov
imul
(bad)
mov
pop
jl
fdivr
mov
fmul
sub
shr
mov
stos
mov
fild
ja
mov
or
in
int
mov
cld
mov
test
dec
movs
popa
scas
mov
sub
shl
loope
lods
cmp
es
inc
sbb
xchg
test
fwait
mov
call
fwait
mov
addr16
or
jne
(bad)
xchg
sti
mov
xchg
and
stos
or
mov
sbb
mov
mov
hlt
sti
in
adc
in
adc
aaa
pop
repnz
dec
mov
rol
pop
mov
cld
xor
sbb
nop
lea
push
popf
mov
lahf
daa
lea
aad
mov
lds
mov
imul
call
scas
fcmove
ret
jge
scas
not
xchg
xchg
daa
out
pop
inc
mov
pop
aas
pop
push
cmc
mov
hlt
rol
clc
pop
aaa
pop
lods
push
pop
loopne
hlt
call
mov
dec
(bad)
pop
icebp
or
and
mov
adc
jns
cwde
lods
adc
aas
stos
addr16
(bad)
shl
sbb
dec
dec
and
pop
xchg
cmp
dec
cld
and
cmp
mov
outs
dec
test
test
inc
sub
xchg
rol
push
pop
std
inc
fild
bound
addr16
retf
jo
jl
ss
or
loope
jno
push
mov
sbb
es
and
and
cmp
mov
iret
jo
cmp
cmp
sub
test
jns
(bad)
fnstsw
mov
xchg
mov
inc
dec
mov
adc
rol
or
add
mov
aaa
jno
clc
xchg
sub
xor
cmp
ins
scas
cld
jbe
out
cmp
mov
lods
push
mov
jno
pushf
shr
int3
mov
mov
mov
adc
ins
pop
cli
lods
push
shl
stos
loope
retf
and
shr
mov
scas
mov
nop
push
mov
fstp
mov
in
stc
or
std
xchg
js
adc
(bad)
stos
rcr
dec
pop
or
fnstenv
shl
int
add
push
mov
cmps
in
mov
daa
iret
out
mov
cmp
(bad)
jb
add
loop
in
repnz
mov
test
stos
jbe
int
stos
ja
sub
jne
mov
jns
inc
mov
sub
lds
jne
pushf
in
pop
mov
rol
sub
pushf
adc
xchg
cmp
dec
fdiv
lock
dec
mov
(bad)
test
popa
ret
(bad)
push
dec
dec
in
popf
popa
outs
retf
cmp
std
out
pop
and
mov
mov
cmp
cli
push
mov
mov
ror
imul
push
xor
push
rcl
mov
int3
or
jnp
adc
js
cli
movs
fild
dec
cmc
pop
inc
out
push
(bad)
jmp
repz
std
cmc
jb
xor
shl
mov
cld
mov
jae
jl
mov
dec
jmp
fst
mul
mov
cmp
mov
inc
cld
sub
cs
add
push
lock
mov
push
and
xchg
(bad)
std
cmp
cwde
cmp
mov
jp
push
cs
or
movs
xchg
scas
pop
or
imul
xchg
cmp
scas
xchg
outs
int3
js
cmc
sar
or
mov
mov
pop
out
adc
jg
jo
rcr
dec
pop
arpl
(bad)
mov
mov
(bad)
std
ror
adc
sub
pushf
lds
push
xchg
dec
and
jae
call
out
mov
cmc
add
dec
jmp
cdq
rol
jne
fnop
and
imul
push
sbb
ret
fisub
or
mov
pop
test
dec
xor
mov
(bad)
fsubr
imul
add
or
dec
push
or
js
sub
les
or
mov
add
jo
xor
dec
jbe
in
bound
sbb
(bad)
shl
xchg
outs
pminsw
jl
dec
sbb
shl
sbb
pop
mov
xchg
mov
mov
(bad)
or
lods
mov
sbb
scas
fdiv
inc
jo
fld
push
push
mov
cmps
stos
test
sub
loop
call
movs
lods
lock
scas
pusha
mov
pop
in
stc
push
lahf
outs
mov
cdq
movs
pop
dec
xchg
test
outs
cmc
push
ror
mov
mov
cdq
(bad)
mov
popf
xor
mul
imul
adc
push
in
stc
xchg
pop
sti
(bad)
cmp
pop
mov
mov
ret
cmps
mov
mov
popf
clc
mov
repz
into
xchg
fnsave
adc
push
pop
dec
jno
test
push
imul
cmps
loope
fcom
or
cmps
mov
mov
pop
mov
push
in
fst
(bad)
call
mov
cwde
lea
inc
jmp
push
mov
pop
xchg
and
out
mov
addr16
outs
(bad)
(bad)
bound
imul
aaa
ins
nop
mov
push
push
addr16
inc
mov
add
inc
mov
je
mov
cmp
int
mov
push
or
popa
jg
push
or
jl
mov
out
or
cmp
jno
call
or
cdq
ins
jecxz
or
xchg
imul
nop
inc
mov
push
sub
js
jl
mov
ret
sub
jno
sub
pop
jns
or
loop
lods
dec
mov
push
push
rol
push
ins
shr
aas
and
inc
mov
add
push
mov
je
pop
sub
mov
sub
mov
push
or
pusha
fdivrp
push
or
mov
fcmovbe
or
hlt
sub
cdq
ins
loopne
adc
xchg
jmp
mov
dec
or
jge
and
jl
mov
jg
add
add
sti
mov
pusha
jg
cmp
ret
into
pushf
out
out
loope
xchg
mov
pushf
(bad)
sbb
push
or
fwait
sub
or
cmps
test
repz
xor
std
cmps
cmps
arpl
or
int3
mov
inc
xchg
repnz
jmp
daa
fsubr
mov
daa
rep
rcl
xchg
(bad)
cmps
enter
into
(bad)
in
rcr
sbb
mov
push
pop
mov
push
inc
shl
aas
push
ret
rcr
adc
out
pop
mov
rol
mov
mov
mov
xlat
mov
mov
call
mov
enter
scas
fmul
mov
shl
ins
scas
scas
sub
mov
sbb
sub
mov
mov
seto
pop
xchg
mov
test
pop
jno
mov
and
mov
and
sub
test
lock
xchg
push
(bad)
xchg
cmp
and
push
mov
fisttp
icebp
test
xlat
jno
ds
pop
cmps
xchg
fdiv
xchg
lds
iret
gs
fwait
dec
out
nop
mov
mov
test
jae
cmc
int
or
addr16
and
lods
shr
repnz
sub
scas
xchg
xchg
and
cmp
(bad)
mov
fwait
call
mov
movs
dec
das
lahf
popa
(bad)
ror
jns
pop
dec
xchg
mov
lea
dec
not
mov
bound
mov
cs
loop
iret
dec
adc
fst
in
mov
je
test
bound
push
test
pop
movs
(bad)
icebp
shr
outs
lahf
jne
call
dec
movs
pop
pop
push
pop
aad
pop
in
in
add
push
push
ds
imul
xchg
adc
push
mov
xor
mov
repnz
adc
lea
mov
test
(bad)
test
pop
adc
fnstenv
adc
adc
hlt
js
jle
mov
mov
(bad)
test
movs
push
cli
mov
clc
inc
sar
mov
dec
dec
jno
test
jo
sub
rcr
test
shl
call
mov
sub
movs
jg
stos
mov
hlt
nop
loop
scas
sar
fdiv
jmp
inc
stos
jo
shl
test
mov
pop
test
fwait
cmps
mov
mov
mov
test
adc
in
stos
add
pop
(bad)
push
mov
pop
mov
ret
test
fdivr
adc
idiv
ret
inc
and
xchg
std
mov
xor
or
icebp
mov
pop
popa
jmp
icebp
pop
out
xchg
jns
(bad)
test
fist
jne
sbb
movs
adc
std
sbb
popa
test
je
mov
lods
cmp
mov
ret
fistp
cmps
mov
adc
lea
sbb
ret
sbb
movs
js
pop
pop
repz
lahf
repnz
ret
jno
lds
cmps
pop
cmp
std
mov
adc
out
sbb
xchg
pop
mov
push
sbb
jo
(bad)
scas
mov
stos
out
mov
in
xor
jbe
or
and
pop
jnp
test
xchg
stc
xchg
data16
outs
sbb
sti
and
lea
xor
out
es
or
xchg
xchg
mov
cdq
dec
test
and
es
sub
sub
jp
ins
sub
nop
test
fwait
sbb
xchg
enter
xor
and
dec
sbb
ret
sar
cmps
rol
add
pop
imul
stos
push
sbb
pop
push
gs
pop
pop
mov
and
sbb
push
xchg
out
xor
dec
retf
adc
mov
inc
stos
mov
and
cmp
(bad)
and
test
(bad)
sbb
xchg
sbb
enter
lods
(bad)
(bad)
xor
mov
jb
sti
mov
aas
inc
(bad)
sbb
aaa
xchg
call
adc
mov
inc
ss
sar
mov
loop
xchg
and
xchg
test
mov
ss
loopne
stos
xchg
movs
in
(bad)
stc
ds
fs
cmp
xchg
mov
jo
mov
jne
and
outs
iret
lds
es
cmps
inc
push
pop
jge
jns
mov
rcl
and
push
push
test
out
cmp
xor
scas
es
mov
lds
retf
fs
mov
inc
iret
sbb
ret
mov
cmp
mov
pusha
inc
dec
mov
jmp
xor
shr
lods
dec
shr
mov
mov
in
push
ret
stos
adc
mov
in
push
inc
int
dec
fwait
mov
mov
mov
pop
adc
cmps
mov
push
mov
call
adc
xchg
push
out
scas
sbb
push
mov
stos
dec
(bad)
mov
pop
push
loopne
inc
jmp
inc
stos
aaa
jns
pushf
pop
(bad)
fsubr
xchg
pop
into
jg
xchg
dec
pop
inc
out
cmp
scas
push
mov
data16
pop
cmp
sbb
jge
fmul
ds
std
pop
scas
ret
mov
rcl
(bad)
movs
int
ja
xlat
jmp
mov
(bad)
sbb
sub
push
push
scas
or
sub
adc
adc
mov
cmp
xor
dec
icebp
xor
adc
ret
xor
mov
mov
pop
iret
sub
in
mov
out
mov
fsub
psrad
add
test
jge
sub
imul
or
jmp
and
ficom
jns
push
fbstp
loop
neg
test
sahf
and
or
pop
stc
ins
(bad)
jne
jecxz
movs
mov
ret
test
and
(bad)
arpl
cdq
pop
stos
pushf
cwde
daa
sbb
mov
bound
lea
xor
icebp
push
mov
in
ret
jns
sub
gs
call
cli
lods
ins
test
mov
dec
lds
lea
pop
rcr
jmp
mov
jmp
sbb
mov
fimul
mov
out
inc
dec
inc
aaa
mov
or
es
(bad)
and
adc
and
(bad)
pop
pusha
push
sub
adc
xor
dec
(bad)
dec
test
xchg
fiadd
pop
js
inc
sub
(bad)
ret
fs
push
mul
cmp
dec
pop
gs
dec
push
and
outs
jb
xor
stos
push
fdiv
fmul
test
or
adc
xchg
pop
xchg
scas
mov
lahf
or
imul
push
and
cmc
pop
sbb
mov
dec
pop
push
inc
scas
not
xchg
outs
add
xchg
out
rcl
arpl
and
jno
and
outs
mov
add
out
ret
data16
push
inc
or
mov
cmp
jp
or
ret
or
call
icebp
add
dec
sbb
mov
(bad)
out
scas
cmc
in
sub
jle
lea
push
cld
popa
js
mov
lods
js
(bad)
mov
sub
inc
cmp
mov
xlat
hlt
jne
lea
leave
pop
mov
xor
test
cmp
pop
stc
or
pop
push
cli
fdiv
xor
mov
test
call
mov
(bad)
pop
out
fadd
arpl
push
jle
movs
nop
in
mov
pop
push
fld
sahf
push
jl
sbb
nop
pushf
inc
dec
inc
cli
mov
xchg
push
aam
inc
inc
movs
pop
pop
cli
cmp
stc
daa
sar
adc
xor
scas
retf
ss
out
scas
pop
cs
xchg
lds
sbb
in
xor
xchg
inc
mov
mov
ja
sbb
cli
mov
pop
add
pop
jl
pop
mov
mov
ss
mov
push
push
popf
pop
push
push
retf
and
inc
and
jnp
lea
mov
lds
fistp
pop
pop
cmp
mov
nop
cmp
mov
add
in
mov
cmp
cmc
(bad)
(bad)
mov
mov
mov
ins
sub
and
sbb
out
mov
and
mov
push
shr
pushf
and
ins
mov
xchg
cmps
jns
cmp
fwait
mov
jns
pop
xchg
mov
push
push
cmps
fwait
push
mov
mov
mov
dec
and
jns
cdq
shl
mov
jmp
(bad)
and
jg
push
dec
icebp
sub
cmp
mov
daa
ss
adc
scas
pop
cmp
mov
cmp
mov
jmp
jmp
mov
jmp
test
inc
jl
dec
jns
mov
xchg
push
add
push
pop
in
dec
bound
jle
lods
call
jmp
popf
dec
xor
cmp
mov
jle
push
popf
cmc
iret
jp
dec
cmps
dec
sub
cld
and
jb
cmp
ret
fistp
jge
sbb
jbe
jno
out
ds
aad
rcr
fsubrp
cmovae
sbb
and
jnp
lahf
mov
jmp
push
(bad)
nop
cmps
lds
mov
inc
cwde
stos
push
lahf
not
daa
pop
mov
ret
test
jns
rol
add
and
fist
fsubr
mov
mov
add
push
loopne
mov
(bad)
lods
int3
jge
add
adc
adc
mov
mov
out
push
jbe
sub
xchg
jo
jp
jno
les
sbb
adc
inc
fmul
aas
add
adc
add
outs
pop
mov
test
inc
repnz
iret
test
aas
mov
std
out
(bad)
adc
and
lds
dec
out
retf
or
sbb
mov
in
cmps
cmp
scas
mov
and
sbb
scas
je
inc
mov
jge
ret
outs
xchg
mov
out
(bad)
cmp
mov
mov
mov
xchg
(bad)
pushf
sahf
or
mov
jbe
stos
aaa
adc
mov
popf
push
mov
push
push
push
lea
iret
jbe
ja
hlt
(bad)
sbb
jo
or
push
scas
popf
jb
(bad)
push
push
inc
cmp
cmps
out
cmps
(bad)
int
scas
push
(bad)
pop
psadbw
jb
xchg
fs
adc
and
pop
jne
pop
iret
push
sub
mov
or
pop
dec
sar
fldenv
fdiv
mov
outs
into
not
mov
push
mov
fcomp
push
mov
mov
mov
and
stos
and
xor
div
fbstp
jae
fnstenv
repnz
cli
out
arpl
mov
sbb
shr
pop
sbb
jecxz
pop
inc
(bad)
push
cdq
aas
or
xor
stos
mov
xor
xchg
loop
(bad)
xchg
fdivr
adc
call
cmp
aas
fs
push
jns
push
adc
xchg
in
into
(bad)
and
data16
add
mov
sub
inc
int
sub
imul
xchg
jo
and
not
ret
push
xchg
shl
daa
and
addr16
in
(bad)
mov
enter
jmp
adc
leave
jl
and
mov
dec
aam
lahf
ret
jg
inc
mov
push
out
mov
inc
dec
mov
mov
mov
mov
inc
xor
(bad)
push
mov
jo
das
add
daa
pop
scas
xor
test
int
mov
or
mov
aaa
mov
add
and
cmps
daa
cmp
movs
or
movs
cs
sub
(bad)
aas
into
mov
mov
cmp
xor
cmp
sub
in
fbld
stos
xor
and
shl
data16
dec
dec
mov
push
pushf
mov
push
(bad)
jp
mov
mov
fsubr
xchg
adc
loope
push
in
aam
gs
nop
pop
lods
pop
inc
mov
and
mov
call
movs
scas
pop
mov
or
dec
push
and
xchg
stos
xlat
dec
mov
imul
pop
jp
sub
lahf
mov
mov
pop
inc
jmp
stos
mov
lods
ins
cmps
jl
gs
fxch
fisub
dec
jne
jp
add
aad
jge
xchg
cmp
movs
cmp
cmp
ficomp
sahf
cmp
pop
iret
mov
cdq
inc
btr
mov
xor
fwait
cmp
test
(bad)
pop
inc
dec
loopne
mov
(bad)
sub
shl
sti
rcl
mov
adc
pop
mov
fs
add
dec
pop
outs
and
loopne
xor
popa
mov
mov
and
(bad)
test
imul
sub
mov
jge
pop
aad
sub
xchg
cmps
mov
outs
and
daa
bound
mov
mov
adc
shl
and
shl
xchg
dec
stos
mov
(bad)
fisubr
or
jb
sar
test
lods
cmc
fmulp
cmps
pop
pop
jae
push
in
pop
sub
mov
mov
dec
scas
in
int
lods
addr16
movs
in
fadd
(bad)
jl
iret
clc
or
cmps
jg
cmps
mov
retf
inc
daa
hlt
ja
mov
xchg
movs
xchg
push
xchg
dec
push
inc
cmps
movs
sub
stos
sar
or
mov
or
fist
hlt
imul
es
dec
fidiv
test
outs
arpl
addr16
mov
xchg
mov
mov
movs
inc
cmps
mov
jmp
or
mov
pop
scas
jbe
fs
arpl
xchg
sub
addr16
outs
mov
aad
retw
das
scas
push
mov
movs
xor
cmp
mov
pop
inc
rcr
sti
inc
(bad)
mov
sbb
inc
pop
jno
aaa
cmps
push
pop
sbb
push
ja
fst
sub
pop
(bad)
mov
hlt
pop
test
ret
enter
and
pop
mov
xchg
jp
shl
mov
lahf
shr
(bad)
xchg
es
sub
jmp
pop
mov
mov
pop
sub
scas
add
iret
out
dec
(bad)
test
mov
or
adc
jae
and
sbb
push
pop
mov
stos
lock
lods
mov
mov
xchg
ja
sti
xchg
sub
jo
xchg
movs
neg
(bad)
stos
aaa
pushf
iret
out
dec
ja
lahf
arpl
loopne
mov
scas
jecxz
pop
outs
rsm
std
test
and
sahf
jnp
daa
movs
test
(bad)
jno
call
ins
nop
push
in
jno
inc
sahf
mov
(bad)
loopne
dec
sub
movs
sub
jg
push
jb
jl
fcmovb
mov
(bad)
cmps
shl
mov
ret
movs
ret
movs
in
mov
and
xor
sub
ss
arpl
push
xchg
movs
push
(bad)
push
mov
fadd
mov
cmps
mov
push
add
test
jge
jle
lock
cmps
pop
mov
xchg
xchg
ret
adc
push
stos
loopne
fbld
aas
cmp
mov
mov
mov
and
bound
add
jecxz
(bad)
out
cmps
movs
es
movs
pop
scas
shl
aad
pop
fdivp
std
imul
and
push
scas
xchg
fdiv
pusha
mov
or
loop
es
cmps
and
lods
mov
add
jae
jb
es
daa
add
cmp
pop
mov
lahf
sbb
xor
in
xchg
das
movs
mov
iret
bound
sahf
add
bnd
inc
es
cmps
popf
scas
js
xchg
js
popf
push
inc
mov
das
xchg
pop
sti
in
aam
mov
daa
(bad)
call
stos
jbe
sub
(bad)
lock
or
das
(bad)
sbb
lahf
je
shl
ja
data16
out
ins
mov
xchg
mov
dec
sub
lahf
dec
sub
xlat
fwait
(bad)
cmps
test
gs
shr
mov
push
js
jmp
mov
or
bound
cld
mov
cmp
pop
xchg
fisubr
fisub
fld
(bad)
pop
shl
fiadd
xor
out
inc
(bad)
mov
adc
fwait
out
(bad)
dec
sub
imul
mov
aas
dec
xor
sub
sbb
ins
enter
sub
popa
dec
pop
lods
cmps
push
stos
fs
cld
mov
xchg
sbb
inc
stc
mov
out
mul
pop
mov
les
pop
add
ja
sub
add
shl
jnp
cmp
sub
test
adc
xchg
aaa
sub
lods
cmc
cmp
or
mov
fst
test
and
aaa
retf
movs
sub
(bad)
and
jmp
mov
mov
lea
popa
aas
push
fldenv
cmp
cmps
dec
test
lahf
mov
(bad)
adc
pop
jns
pop
test
pusha
and
shr
mov
mov
repz
inc
mov
enter
sbb
mov
mov
mov
mov
outs
push
ja
inc
sbb
pusha
push
sub
adc
and
mov
dec
ins
lahf
pop
scas
push
sub
ins
lea
test
lds
jecxz
adc
mov
mov
sbb
or
jae
jo
inc
movs
jge
lds
jno
mov
(bad)
pop
fld
lea
scas
fadd
loopne
pop
test
add
mov
rcl
cmps
pop
inc
lahf
push
sub
fisttp
mov
(bad)
push
fs
push
cmp
and
cmp
xor
bound
ja
fldenv
ins
loopne
mov
lea
dec
mov
lods
repnz
(bad)
arpl
data16
mov
jg
out
iret
jl
and
lods
jmp
pop
retf
push
je
cmps
adc
sub
add
pop
push
repnz
mov
cmps
test
push
int3
jb
pop
movs
call
xor
add
pop
(bad)
jae
ficomp
mov
movs
mov
dec
or
cmps
mov
mov
ret
mov
cmps
sbb
mov
mov
pop
sbb
ins
imul
cmp
adc
nop
shr
mov
std
loop
es
addr16
cmp
rcr
out
push
retf
sbb
xlat
imul
mov
and
outs
pop
push
out
stos
fidiv
repnz
mov
xor
xchg
pop
mov
shr
xor
out
fsubr
mov
xor
mov
or
movs
ins
loope
mov
mov
test
mov
xchg
jmp
add
push
mov
iret
and
cld
jnp
inc
mov
or
cmp
push
jg
call
movs
mov
mov
stos
or
mov
out
sub
adc
mov
test
sub
pop
sub
push
sbb
mov
mov
stos
push
mov
adc
jne
xchg
stos
mov
sub
cmps
fs
mov
fwait
adc
or
push
int3
jae
and
in
xchg
in
outs
and
movs
fstp
xlat
cmps
(bad)
out
pop
cwde
ret
shl
js
adc
mov
stos
xchg
fcomp
cmp
cmc
mov
ret
int3
test
mov
in
jno
(bad)
ret
int
call
jp
xlat
outs
ja
dec
mov
push
scas
mov
dec
mov
out
stos
ss
stos
cmp
test
xor
rol
or
fild
pusha
ror
outs
inc
mov
bsf
test
sub
fnstenv
fsubr
xchg
aad
fisub
retf
loopne
jecxz
mov
faddp
mov
mov
fsub
and
cmps
adc
mov
out
test
pop
mov
aaa
sub
ins
movs
pop
pushf
icebp
out
and
mov
bound
js
pusha
pushf
mov
cs
das
outs
or
imul
cmp
xchg
xchg
sbb
mov
call
cmp
add
and
(bad)
and
jbe
xchg
or
pushf
mov
out
mov
pop
lods
popf
xchg
sar
das
adc
adc
(bad)
xor
scas
mov
jns
add
ret
popa
pop
pop
mov
jns
mov
ficom
xchg
cld
mov
ja
mov
daa
ja
dec
loope
mov
les
mov
xor
sub
movs
pop
clc
es
jmp
fs
cmps
les
xchg
(bad)
stos
and
stos
scas
test
in
(bad)
jle
test
nop
fisub
xchg
cmp
or
add
and
mov
jnp
or
pop
or
sti
es
lea
xchg
and
or
in
(bad)
cmps
dec
scas
movs
xchg
and
pop
mov
and
pop
mov
and
or
movs
and
cmps
sub
or
pop
xchg
lds
je
xlat
dec
xchg
int
movups
and
pop
ins
and
jbe
xchg
xchg
ja
jno
xchg
push
outs
mov
or
push
(bad)
(bad)
cld
out
popf
xchg
jp
sbb
jmp
stos
outs
das
fld
adc
pop
push
fdivr
pop
add
jno
ja
xchg
mov
mov
ja
sbb
mov
sub
xchg
setle
ret
into
mov
pop
mov
pop
fwait
aas
ficomp
lods
faddp
or
pop
mov
std
(bad)
daa
mov
in
push
mov
leave
jge
sub
jns
sub
inc
stos
(bad)
jo
xlat
into
xor
push
out
sbb
in
lods
test
daa
lods
scas
mov
mov
xchg
jnp
ficomp
dec
arpl
push
adc
mov
ins
and
adc
(bad)
pop
test
jns
xor
xchg
test
dec
xchg
or
push
dec
adc
lods
inc
test
cld
test
movs
xor
or
fs
shl
(bad)
mov
arpl
sub
js
push
jne
jg
pop
ss
arpl
adc
ins
pop
adc
jmp
jmp
ret
and
push
mov
(bad)
stos
mov
and
and
sub
add
dec
sub
jbe
into
lods
mov
in
jmp
ja
cmp
test
adc
and
vpcmpgtd
cmp
scas
pop
xchg
movs
pop
lods
pop
sar
mov
pop
shl
stos
cmp
dec
scas
in
mov
rol
sub
push
rol
lock
mul
xlat
out
(bad)
lds
and
adc
fnstsw
imul
ret
lds
popf
jnp
(bad)
out
dec
lods
xchg
cs
scas
in
lds
mov
xchg
in
inc
adc
pop
stos
adc
stos
cmps
cmps
and
(bad)
mov
mul
arpl
or
scas
fwait
push
mov
rcl
lea
lds
sub
dec
jmp
mov
jne
(bad)
xlat
int
mov
ffree
test
xor
sbb
mov
inc
mov
add
es
ja
dec
ret
sub
dec
push
out
in
add
jmp
sbb
cmps
inc
or
stos
stos
dec
xlat
sub
add
or
iret
inc
int3
arpl
xor
jl
mov
mul
call
cmps
sub
mov
in
cmp
stc
sub
mov
dec
sub
fcmovne
cmp
pop
dec
mov
dec
jmp
bound
adc
das
(bad)
neg
outs
data16
je
ins
push
ins
daa
addr16
sub
cwde
mul
(bad)
ficom
popf
push
out
(bad)
ret
xchg
jne
fsub
shr
lds
mov
jbe
daa
dec
jns
mov
lds
cmps
push
dec
and
push
pusha
add
mov
std
(bad)
retf
pop
mov
cdq
adc
inc
mov
push
pop
(bad)
aas
mov
rcr
xor
push
lods
sbb
or
fisttp
jb
(bad)
xchg
jle
sub
(bad)
sbb
push
fild
in
xor
pop
int3
es
cmps
(bad)
imul
or
mov
dec
jg
popa
mov
fld
mov
pop
addr16
mov
es
mov
ins
fwait
mov
xor
repz
clc
cmp
sbb
inc
shr
iret
or
push
pop
xor
addr16
mov
movs
test
or
enter
mov
scas
add
mov
jmp
mov
scas
mov
inc
mov
mov
clc
popa
aad
dec
popa
lds
or
(bad)
cmps
sub
test
stos
adc
cmp
xor
stos
jle
mov
lods
xchg
daa
pop
ret
push
push
xchg
cmps
jp
sub
sbb
scas
outs
sbb
cmps
ret
stos
hlt
mov
lds
test
inc
aaa
push
test
xchg
imul
popf
pop
mov
mov
scas
test
mov
push
js
mov
ret
out
in
loop
cmps
pushf
cld
sub
retf
push
mov
test
sbb
mov
dec
cs
ret
test
push
pop
stos
adc
fwait
cmps
in
jo
cmp
iret
retf
xchg
push
fs
and
movs
inc
retf
repnz
mov
adc
mov
fidiv
and
icebp
fs
out
lahf
stos
jb
fcmovnb
add
fimul
jmp
mov
sar
push
inc
sbb
fisub
loop
mov
ret
add
test
test
repz
xchg
lahf
jp
jmp
call
add
ss
jmp
ror
or
mov
sbb
cmp
mov
test
add
in
pushf
test
mov
push
ins
pop
aas
shl
adc
pop
dec
movs
stos
sbb
gs
(bad)
popf
outs
mov
test
pop
in
push
pop
xchg
sti
pop
(bad)
pop
pushf
sbb
pusha
mov
push
daa
mov
ret
or
repnz
inc
push
stos
fcmovb
loope
mov
in
mov
test
pop
mov
dec
mov
jbe
jne
jnp
mov
jo
cli
dec
lods
xlat
adc
retf
mov
cmps
imul
xchg
adc
mov
mov
(bad)
xchg
lods
mov
aas
add
ret
pop
movs
and
xor
mov
jg
cld
push
std
xor
adc
mov
pushf
mov
push
inc
sub
mov
add
mov
jnp
iret
adc
dec
pop
dec
mov
inc
mov
imul
pop
cwde
out
bound
inc
int3
mov
inc
mov
ficom
inc
in
outs
sub
mov
dec
cld
xchg
shr
hlt
jo
jb
mov
ins
lods
retf
pop
mov
fcmovnu
inc
aam
bound
xchg
mov
sub
outs
and
retf
dec
lss
push
lods
xor
sti
cmp
add
fadd
stc
mov
pop
jno
fld
cmp
pop
cmc
cmp
je
popf
and
push
sahf
adc
push
sbb
fsub
arpl
shl
adc
mov
fst
movntss
sbb
mov
js
ror
fmul
call
daa
mov
mov
ins
loope
mov
pop
mov
mov
je
(bad)
push
mov
jb
push
adc
and
in
xchg
enter
fdiv
or
dec
ret
or
(bad)
jne
scas
pop
ins
fidivr
out
arpl
scas
xchg
add
mov
push
fwait
pop
jns
mov
movs
push
or
xchg
xchg
pop
xor
sbb
sar
es
(bad)
sbb
cdq
mov
inc
mov
sahf
lahf
dec
jmp
(bad)
daa
jl
adc
xor
out
fidivr
addr16
stos
cwde
dec
push
cmps
sub
es
test
mov
jg
mov
sub
dec
pop
call
sbb
pop
push
popa
pop
scas
call
es
test
cld
popa
shl
in
mov
std
push
shl
mov
pop
jae
pop
cmp
jbe
adc
xor
cwde
lahf
addr16
loopne
lahf
pop
jl
add
mov
pop
lahf
mov
ret
jle
mov
sbb
pop
pop
(bad)
das
lahf
sbb
leave
xchg
imul
cmp
pop
mov
cmps
fsub
fchs
mov
clc
movs
sub
sub
sbb
mov
dec
sbb
lds
mov
scas
ins
mov
cmps
mov
cmps
mov
test
test
test
mov
add
and
inc
and
das
jmp
(bad)
stos
pushf
aad
mov
js
lea
and
cmp
push
fxch
jnp
pusha
stos
jo
dec
int
mov
dec
test
push
cs
mov
(bad)
adc
mov
clc
xchg
stc
(bad)
mov
imul
inc
scas
outs
out
cli
sub
add
cmps
push
mov
fwait
rol
sbb
jmp
lds
jmp
ins
mov
dec
test
popa
sbb
jne
jno
rcr
mov
test
mov
into
in
mov
push
test
or
(bad)
mov
jmp
pushf
in
xor
push
iret
lods
cmc
sub
cmc
push
in
iret
dec
xchg
(bad)
std
jmp
fild
in
and
stc
pop
data16
push
movs
(bad)
mov
pop
mov
repz
fidivr
jl
dec
push
iret
xor
fldenv
push
fisubr
xor
pop
lods
retf
bound
sbb
int3
inc
cmp
mov
hlt
aad
and
sbb
int
test
sbb
dec
pop
test
add
jns
aad
mov
cmp
cli
cmps
dec
dec
ret
jl
mov
sbb
movs
loop
or
sub
inc
movs
cdq
push
mov
ins
movsx
ret
cdq
adc
js
push
es
mov
xlat
sahf
mov
jne
test
stos
cmp
in
out
cmps
addr16
jecxz
cmps
(bad)
lds
push
test
mov
std
test
scas
mov
mov
dec
mov
sub
mov
imul
fcmovb
dec
scas
sub
popa
push
xchg
pop
jno
mov
imul
(bad)
movs
arpl
test
xchg
jg
push
cdq
outs
and
leave
mov
inc
jmp
mov
imul
pop
test
movs
inc
cwde
mov
aas
cmps
mov
hlt
cdq
push
test
(bad)
int3
mov
(bad)
sub
fcomp
outs
sti
xchg
and
fnstsw
popa
cli
aaa
les
sbb
jl
xor
dec
push
iret
ret
stos
push
mov
sub
pop
lahf
rol
jmp
mov
nop
jecxz
in
inc
cli
data16
mov
add
push
dec
fisub
push
popf
mov
inc
and
test
movs
stos
je
nop
mov
sahf
(bad)
stos
sahf
and
mov
movs
inc
pop
mov
retf
xor
push
mov
arpl
movs
inc
dec
jno
aaa
ret
sub
lods
pop
lds
test
sbb
sbb
xor
lea
mov
mov
icebp
mov
sti
ds
ret
lods
test
aaa
push
push
sub
push
retf
xor
dec
aas
cmp
cld
repnz
cmc
mov
add
unpcklps
pop
dec
pop
xchg
mov
das
mov
daa
test
(bad)
push
mov
pop
nop
xor
xor
fdivr
push
mov
in
pop
call
jecxz
mov
pop
stos
sub
mov
mov
xor
std
jp
sbb
sbb
cmp
fwait
jno
and
fsubr
inc
bound
out
and
lea
cmps
jg
adc
out
jg
addr16
mov
xchg
iret
lods
out
mov
push
xor
adc
(bad)
arpl
movs
jecxz
and
loopne
pop
pop
or
jnp
inc
iret
mov
cmp
mov
idiv
mov
aam
mov
and
mov
pop
adc
lahf
push
jno
or
sub
and
popf
lea
shl
mov
fisub
mov
ds
dec
rcr
ins
mov
popa
mov
xchg
pop
cmp
fcom
xchg
pop
xchg
stos
inc
inc
jno
mov
xchg
call
je
sar
push
cmps
adc
in
sub
ret
dec
add
imul
test
sub
pop
push
fs
sub
nop
iret
jl
sbb
or
jecxz
test
(bad)
pop
jo
push
ja
shl
cdq
push
stos
mov
ret
cmps
in
repz
(bad)
pop
mov
fiadd
add
test
scas
cmp
jmp
popf
(bad)
cs
(bad)
and
jno
mov
xor
ss
stos
and
popa
inc
cmp
stos
inc
fimul
(bad)
xchg
leave
jl
mov
jbe
sub
xchg
(bad)
sbb
pop
popf
test
scas
jecxz
jne
test
mov
in
aad
mov
pushf
jecxz
std
pop
outs
(bad)
push
cmp
daa
mov
es
std
dec
cmp
dec
and
and
(bad)
sub
mov
adc
into
jmp
stos
xor
shl
xor
mov
or
xchg
imul
loopne
ins
lods
push
dec
retf
pop
and
cli
(bad)
sub
pop
in
jle
mov
adc
mov
jmp
and
adc
cmp
retf
mov
cs
pop
pusha
cmp
adc
fild
das
out
jle
push
mov
dec
loopne
dec
jp
sub
mov
jl
pop
inc
mov
push
lods
jecxz
cmp
push
mov
jb
inc
pop
jg
pop
xchg
xchg
jg
lods
mov
push
int
movs
xchg
daa
mov
aaa
dec
outs
je
outs
dec
mov
ss
mov
sub
fidivr
pop
retf
push
lds
xchg
lods
mov
sub
pop
adc
loop
inc
(bad)
std
xlat
int
div
mov
dec
nop
movs
pop
jp
inc
jmp
pop
mov
in
(bad)
lods
ret
nop
and
aam
popa
ins
xchg
push
mov
ror
inc
int
imul
hlt
and
int
scas
movs
mov
je
mov
out
and
xchg
loopne
jne
pop
xchg
jns
mov
sbb
ja
mov
dec
out
retf
add
movs
rcr
ja
repnz
pushf
(bad)
int
jl
mov
jmp
xor
mov
cmps
sbb
mov
jp
xor
enter
call
inc
dec
in
xlat
inc
aad
leave
fiadd
add
jns
sub
lahf
dec
out
jmp
imul
fwait
push
mov
mov
jno
ret
in
loop
inc
jle
add
fisttp
sub
mov
push
add
or
mov
and
pop
addr16
test
add
bound
iret
gs
push
cmps
les
jmp
(bad)
imul
call
add
and
jo
sub
mov
xlat
nop
and
push
sub
jp
mov
or
sbb
jno
xchg
cs
scas
pop
xchg
fimul
xchg
mov
add
adc
add
test
fwait
push
adc
mov
retf
xlat
sbb
add
jo
sbb
pop
dec
mov
nop
jge
test
data16
xchg
movs
and
and
enter
(bad)
stos
dec
mov
test
push
daa
(bad)
jae
push
das
out
push
push
and
shl
aad
test
jno
iret
movs
rcl
btr
retf
xlat
shr
add
js
cs
pop
mov
sub
int
mov
push
dec
xor
retf
(bad)
push
pop
xor
cli
sti
mov
aam
out
movs
frstor
fwait
(bad)
mov
xchg
test
dec
xchg
lods
call
mov
je
ror
xchg
xchg
movs
or
dec
jno
and
pop
pop
call
movs
adc
mov
and
pop
xor
ja
or
sbb
inc
stos
jno
sub
mov
jbe
es
movs
(bad)
inc
cmp
mov
lds
jp
and
sbb
inc
dec
adc
push
push
adc
call
add
scas
mov
pop
or
mov
mov
loop
and
inc
add
mov
ins
iret
xchg
xchg
outs
jmp
xchg
cmp
lods
ret
jno
lods
cwde
mov
dec
jecxz
icebp
mov
(bad)
(bad)
scas
jmp
imul
mov
repnz
outs
xchg
fdivr
test
push
mov
dec
and
ins
daa
imul
rol
mov
out
pop
sbb
dec
adc
dec
stos
push
jle
cmp
mov
int3
data16
jg
test
lods
daa
fiadd
mov
xchg
jmp
repnz
push
sbb
icebp
and
and
stc
fwait
test
ret
or
(bad)
sti
mov
jl
lock
arpl
arpl
loopne
cs
dec
arpl
stos
add
push
rol
jge
fbstp
mov
mov
push
mov
test
pop
int
pop
pop
push
int3
ror
jp
sub
ins
in
loopne
fbld
mov
and
fldcw
cmps
retf
xchg
or
repz
in
jnp
loopne
outs
mov
push
mov
cdq
mov
xor
jmp
sub
mov
mov
data16
mov
sub
idiv
aaa
movs
stos
jbe
shr
mov
ret
cmp
sub
sub
out
pop
jbe
stos
lds
retf
jo
sub
shl
lods
test
outs
xchg
xchg
dec
push
loope
lds
push
(bad)
jbe
addr16
adc
sahf
adc
mov
or
pop
test
cld
call
adc
ds
mov
mov
xchg
jecxz
adc
mov
sbb
stos
gs
adc
ja
loop
movs
cmps
sti
test
not
movs
adc
sbb
fsub
cmps
mov
pop
mov
test
mov
mov
(bad)
push
jmp
or
fs
or
push
jnp
pushf
mov
pop
dec
add
push
cmps
and
es
stc
pop
in
inc
popa
addr16
mov
jo
scas
test
cmp
pop
adc
sar
mov
sar
mov
mov
movs
mov
mov
popa
cmps
mov
les
out
add
rol
ror
cmp
cmps
ds
ret
mov
mov
fdiv
xlat
jg
scas
mov
pop
mov
addr16
mov
sub
es
jg
in
sar
inc
ret
sub
mov
jecxz
jmp
xor
fsub
or
fisubr
(bad)
sahf
pop
mov
xchg
aaa
push
cmps
xor
pop
pop
daa
ja
inc
sub
adc
test
loope
push
fsub
push
fist
je
jb
aam
pop
scas
(bad)
adc
cdq
pop
sbb
in
jp
cmps
jb
mov
push
ficomp
imul
dec
fwait
inc
adc
jbe
leave
lahf
fisub
push
movs
and
(bad)
lods
mov
fucomip
or
jl
ror
cmps
mov
les
sbb
test
inc
and
movs
les
mov
stos
out
cmp
and
push
jle
std
cmps
xchg
test
xchg
(bad)
mov
daa
retf
fldenv
pop
ins
jmp
out
movs
inc
mov
mov
or
cmp
(bad)
cli
xchg
retf
(bad)
mov
xor
outs
jecxz
sbb
sub
into
out
(bad)
fidivr
adc
arpl
mov
jecxz
mov
ret
movs
or
add
sub
mov
sahf
mov
movs
(bad)
pop
mov
loop
add
jg
inc
mov
push
add
xchg
ret
jg
or
cmp
jbe
push
inc
bound
pop
push
repnz
cmp
cmp
add
dec
sub
ror
mov
lea
mov
jns
call
mov
sbb
jg
ja
or
pop
lods
mov
inc
mov
in
push
dec
mov
xor
xor
movs
out
ins
jb
mov
sub
scas
retf
movs
daa
mov
(bad)
rol
lea
mov
push
and
imul
push
shl
lock
mov
fcom
retf
sahf
pop
xchg
out
jns
outs
or
jns
or
stos
test
idiv
and
and
ins
popf
shrd
xor
and
xchg
shl
int
cmp
adc
aam
cmp
or
and
lods
push
cmps
scas
imul
and
xor
ret
icebp
daa
fcomp
stos
(bad)
lods
std
mov
sub
les
int
cmp
out
xchg
dec
out
in
lods
bound
add
pusha
jae
and
xcrypt-cfb
cmps
and
mov
push
xlat
outs
jns
das
test
rol
xor
(bad)
call
jl
test
in
cmp
or
jmp
popa
sub
(bad)
mov
mov
and
cmps
aas
mov
mov
(bad)
mov
pop
xchg
icebp
(bad)
lahf
mov
dec
cmp
push
int
fdiv
scas
lock
push
call
iret
shl
adc
xchg
test
pop
aad
pop
xchg
mov
mov
test
test
pop
sub
push
jo
ret
(bad)
aas
fcomp
sbb
adc
movs
(bad)
mov
mov
aas
cmps
iret
stos
or
lea
xchg
mov
retf
lock
sbb
xchg
ror
int
mov
(bad)
cmp
repz
stos
fcmovbe
ins
js
mov
data16
jp
ss
cmp
lods
stos
push
lods
mov
retf
inc
setae
mov
das
push
scas
jne
or
sub
mov
fld
mov
jns
push
mov
aaa
mov
inc
in
jg
mov
ins
ret
mov
mov
dec
mov
sbb
mov
adc
jns
arpl
mov
and
cmp
push
fisttp
lods
push
(bad)
mov
outs
nop
cmp
movs
mov
fwait
es
jns
mov
adc
outs
mov
lds
xchg
clc
(bad)
popf
(bad)
fwait
lea
xor
pop
mov
jecxz
mov
mov
das
cmp
mov
test
cmc
in
or
pushf
jg
sub
pop
outs
pusha
adc
scas
inc
lods
rcr
mov
sub
lods
dec
inc
mov
hlt
ret
jb
aaa
ret
imul
sbb
and
inc
in
adc
dec
cld
(bad)
xchg
cmps
mov
lods
xchg
push
lods
iret
retf
ja
inc
popf
pop
popa
jb
test
ja
mov
imul
mov
test
xor
xchg
cmc
mov
ja
fimul
outs
adc
(bad)
je
mov
mov
outs
test
(bad)
fwait
dec
mov
int3
int3
daa
movs
xor
int3
or
push
imul
cmp
imul
xchg
or
jmp
inc
loop
in
sbb
dec
inc
cmp
aas
mov
es
mov
cmps
scas
mov
jns
mov
arpl
push
movs
mov
ins
das
add
jmp
(bad)
xchg
mov
xchg
es
mov
cmps
test
arpl
cmp
(bad)
and
js
scas
and
icebp
fwait
lods
int
add
ins
addr16
cmp
push
mov
movs
imul
or
outs
popa
mov
(bad)
push
pop
mov
in
and
jmp
retf
out
and
outs
cmps
in
adc
(bad)
sahf
mov
push
fsub
cmp
or
fild
inc
in
cmp
call
in
mov
(bad)
mov
mov
xchg
fistp
fs
dec
int3
(bad)
xchg
mov
dec
data16
sub
and
loop
ret
jp
movs
xchg
je
stos
dec
inc
cld
sbb
ins
outs
test
aad
test
(bad)
sub
mov
or
mov
push
mov
in
lods
lock
fdivr
cmp
stos
mov
jnp
(bad)
cmps
and
dec
dec
test
xchg
loopne
push
scas
sub
test
mov
es
cmps
in
mov
cld
mov
(bad)
push
cmps
scas
pop
test
ins
mov
inc
add
ja
add
jmp
aad
jp
test
aam
sub
stos
test
mov
jl
movs
lods
adc
push
add
out
mov
xchg
test
shr
scas
or
inc
gs
pop
pop
adc
jnp
dec
jno
push
arpl
or
test
inc
xchg
mov
outs
cmps
or
sbb
push
mov
inc
push
add
mov
pop
pop
and
lea
ins
cmps
ret
(bad)
inc
mov
inc
fst
loop
ficomp
add
pop
cmps
(bad)
mov
sbb
mov
in
call
pop
jg
outs
cmp
jmp
dec
pop
jp
stc
fidivr
mov
mov
lods
mov
push
mov
mov
imul
add
jns
std
adc
cld
out
adc
dec
dec
cmp
clc
push
push
add
push
scas
pop
clc
aaa
ja
out
inc
jmp
loop
mov
jno
rcl
push
xchg
bound
inc
jo
fsub
mov
push
cmp
sar
sbb
out
mov
xlat
jge
ins
or
daa
dec
in
mov
test
xor
push
jbe
mov
mov
repnz
lds
mov
jne
mov
mov
test
mov
sub
and
addr16
cmps
ss
sub
mov
dec
mov
mov
mov
in
sub
sti
int3
out
cld
sub
imul
xchg
cmp
mov
shl
stos
popf
sbb
scas
push
hlt
mov
or
xor
cmps
cwde
(bad)
pop
mov
inc
test
cmp
scas
sub
mov
stos
jns
mov
push
add
fwait
adc
jo
in
(bad)
jmp
ss
push
fstp
and
daa
xor
jne
loopne
adc
lods
jno
ins
neg
arpl
dec
xchg
mov
adc
push
enter
cmps
mov
(bad)
(bad)
xchg
in
iret
pop
fmul
mov
hlt
sbb
jl
or
mov
stos
jns
jnp
stos
adc
test
rcr
sti
aam
in
jo
mov
cld
in
mov
add
xchg
in
cmp
fidiv
mov
fistp
call
jns
adc
mov
clc
fiadd
mov
dec
mov
movs
push
xchg
jp
or
inc
ror
add
and
aaa
fidiv
xlat
cmps
jbe
clc
xchg
out
push
mov
test
adc
inc
ret
dec
lds
movs
jae
es
adc
daa
je
aam
lds
les
shl
fwait
lahf
dec
adc
push
pop
pusha
test
das
lahf
sub
cld
xor
out
adc
ret
xchg
in
mov
scas
pminub
fbld
xor
imul
xrelease
fdivrp
lds
rcl
cmps
lea
mov
add
mov
push
scas
enter
fs
frstor
jbe
xchg
stos
xchg
not
test
jnp
cmc
push
ds
pop
inc
mov
fs
mov
jge
scas
sub
lds
push
mov
mov
inc
daa
and
bound
test
lds
mov
mov
xlat
jg
lea
xor
mov
das
xor
xchg
push
mov
inc
(bad)
cmp
cmp
jnp
mov
or
movs
cmps
mov
sahf
inc
dec
inc
xchg
jg
xor
int3
sub
or
mov
fs
xor
test
cmps
sub
or
and
ins
jne
cmp
adc
gs
into
jnp
scas
call
repz
mov
jno
pushf
in
scas
sub
mov
imul
jne
mov
pop
lds
cdq
sahf
jg
mov
mov
inc
mov
lods
lahf
ret
fnop
idiv
ins
stos
fidivr
inc
cli
dec
pop
fstp
aam
or
jns
dec
js
xor
lods
jbe
mov
mov
push
mov
add
shr
sbb
pop
je
sub
test
push
push
and
cmp
hlt
es
add
lea
popa
mov
cs
test
push
out
lea
call
or
ret
dec
sbb
or
out
pop
pop
sbb
xchg
scas
xchg
push
lahf
xchg
add
xchg
or
pop
sti
jbe
mov
lock
scas
and
popf
add
out
ins
jo
ins
int3
xlat
push
cmp
dec
jmp
pop
mov
and
lods
in
hlt
in
ret
mov
cmc
and
mov
xor
ret
out
xor
xor
popa
in
dec
sub
shl
aad
cmp
js
dec
dec
outs
sbb
mov
mov
ficomp
mov
mov
shl
push
dec
mov
nop
push
sbb
les
cmp
(bad)
cmp
(bad)
pop
aas
loopne
mov
push
loope
push
pushf
imul
es
imul
lods
not
and
aaa
jle
jg
sub
dec
ins
mov
ds
dec
sbb
mov
mov
mov
outs
int
nop
pop
sbb
test
or
cmp
repz
dec
mov
jo
(bad)
js
pop
mov
jg
or
out
mov
sysenter
lock
xchg
pop
test
mov
ret
imul
sub
iret
and
mov
fist
jns
mov
mov
xchg
pop
mov
(bad)
xchg
add
push
es
jns
jno
sbb
lds
gs
pop
and
xor
enter
cmps
or
hlt
fwait
jmp
cld
ret
jle
xchg
outs
xchg
outs
mov
and
out
cwde
or
jle
mov
or
lods
pop
dec
lea
pop
mov
ficom
mov
fsub
in
add
sbb
xchg
jge
adc
xor
(bad)
cmp
sub
icebp
daa
call
mov
ins
inc
cmps
jb
xor
sub
lods
rdmsr
mov
dec
push
push
fucomi
mov
mov
mov
inc
sar
cs
daa
sbb
data16
mov
retf
mov
mov
test
dec
add
(bad)
imul
add
clc
scas
mov
rcr
sahf
mov
arpl
add
jae
sbb
jns
pop
in
jle
cmp
add
sub
(bad)
fisub
ins
mov
movs
mov
retf
xchg
adc
push
lods
mov
fsub
inc
shr
jae
jmp
daa
pop
and
(bad)
cli
addr16
les
(bad)
cs
stos
ret
mov
pop
movs
cmps
les
into
mov
ja
in
jno
mov
ror
fsubr
pop
lods
adc
scas
or
test
mov
test
lds
or
stos
shr
out
aas
add
mov
cli
lods
js
xor
xor
and
ja
ret
or
cmc
mov
mov
push
stos
or
or
sub
sahf
movs
cmp
lods
lahf
cld
jge
ins
mov
mov
scas
push
mov
pushf
dec
in
pop
and
inc
test
int
int
int3
daa
mov
mov
xchg
(bad)
xor
sahf
sbb
in
imul
mov
mov
jmp
scas
jne
popa
mov
call
imul
xchg
and
lahf
mov
mov
sbb
in
add
je
jmp
repnz
mov
mov
imul
lods
push
cli
movs
pushf
or
fisttp
mov
ja
pop
push
cli
or
shl
and
jmp
fwait
adc
pushf
inc
cmps
ret
dec
cmp
sub
fmul
pop
jmp
inc
ins
lds
push
mov
dec
sub
pop
rcr
pop
imul
xor
rcr
inc
iret
adc
aad
sbb
sbb
mov
jge
jae
adc
cs
movs
pusha
loop
dec
jne
mov
mov
sar
les
jmp
js
mov
mov
scas
sar
cmp
jmp
adc
inc
push
gs
and
pusha
pop
int
inc
add
adc
cs
mov
xchg
scas
pop
pop
into
mov
push
lods
rcl
hlt
pop
retf
fisub
xor
fidivr
or
push
in
jb
ror
in
gs
ja
mov
mov
push
mul
sub
lods
jcxz
out
mov
repnz
test
mov
addr16
push
jno
(bad)
outs
mov
repnz
jae
out
pop
push
ins
jmp
lods
outs
ret
jno
pop
cld
xlat
inc
stos
mov
and
test
(bad)
or
cmp
in
ret
sbb
pop
mov
dec
cwde
cmp
add
movs
cmp
stos
mov
mov
cmps
movs
pop
retf
mov
dec
jbe
dec
push
outs
movs
and
cmp
xchg
adc
xchg
ss
fisubr
inc
push
es
xchg
add
out
test
adc
and
(bad)
fidivr
iret
push
mov
cmp
xor
xor
xor
add
push
jne
pop
and
repz
ret
aas
push
ja
iret
retf
mov
test
mov
mov
jbe
adc
mov
ret
lahf
pop
xchg
aaa
daa
cmps
ja
cdq
and
mov
dec
jle
iret
sub
call
inc
inc
popf
push
cli
repnz
ins
mov
frndint
movs
sbb
push
(bad)
test
adc
push
dec
xchg
mov
ret
nop
pop
pop
sub
outs
xchg
mov
ror
cs
(bad)
xchg
cmp
jge
mov
(bad)
jg
fisub
cmp
test
in
cmp
mov
es
icebp
dec
lock
retf
leave
mov
mov
das
ds
mov
add
xor
mov
(bad)
xchg
ret
paddb
dec
xor
jnp
mov
ret
mov
mov
mov
mov
scas
cmp
dec
jge
sub
dec
mov
ss
push
xor
rcr
int
sub
mov
mov
mov
hlt
test
xor
gs
jo
in
jmp
(bad)
jmp
das
fimul
loop
scas
lock
ret
int
movs
push
call
adc
inc
pop
lods
sahf
test
cs
in
fnstcw
mov
dec
stos
enter
pop
dec
xor
stos
stc
jmp
std
cmp
icebp
js
clc
loopne
xor
jg
lock
(bad)
xchg
ror
ror
das
or
sti
(bad)
out
(bad)
clc
push
add
mov
outs
jge
nop
sbb
lock
xchg
push
popf
push
lods
mov
sub
(bad)
sbb
ror
sub
xchg
imul
stos
mov
shr
mov
mov
mov
test
outs
mov
fstp
test
jle
int
adc
mov
retf
xor
pop
dec
cmp
lock
cmps
mov
pop
push
mov
and
scas
es
jl
and
mov
mov
pop
cmps
mov
sbb
sub
xchg
jmp
jecxz
mul
and
mov
adc
pop
mov
sub
in
mov
and
std
adc
add
mov
mov
scas
dec
(bad)
lods
push
sub
cmp
push
xor
stos
ins
cs
xchg
aas
or
jnp
popa
adc
adc
loopne
and
xor
aas
mov
stos
gs
mov
mov
retf
out
sar
pusha
xchg
stc
jb
mov
push
in
in
jno
ins
xchg
mov
stos
es
and
push
sub
or
aam
sbb
fs
cmps
cmps
scas
mov
retf
mov
fadd
jecxz
stos
mov
lahf
aas
fidivr
retf
jnp
dec
jle
sar
cmps
dec
push
std
ja
cld
add
jne
cwde
pop
or
popf
sub
pop
mov
test
dec
xchg
outs
outs
or
jl
sub
sbb
gs
ins
xchg
daa
cwde
hlt
leave
cmp
dec
fsub
mov
in
push
and
out
xchg
js
imul
add
pop
jge
test
xchg
paddsw
cmps
adc
cmp
dec
xor
lods
fs
dec
call
and
and
std
dec
scas
cmp
loopne
adc
outs
cmp
pop
pop
(bad)
jbe
cmp
js
jns
in
dec
js
and
(bad)
pop
cmps
mov
ret
iret
mov
rol
or
ja
push
mov
stos
js
js
les
(bad)
stos
in
jno
jmp
mov
js
call
xchg
test
dec
push
adc
into
(bad)
mov
lahf
lds
es
faddp
mov
das
mov
cmp
test
mov
aam
rcl
test
mov
lods
mov
aad
pop
imul
mov
push
imul
stos
and
fist
or
cs
jbe
lea
mov
mov
in
add
adc
iret
and
out
mov
(bad)
popf
mov
cmp
cs
loopne
mov
jmp
out
cmps
add
push
ret
movs
fild
mov
ja
xchg
out
pop
mov
idiv
sub
ss
outs
add
test
outs
retf
retf
inc
pusha
pop
and
out
pop
adc
jb
sub
in
shr
test
xlat
vcvtsi2ss
dec
aad
xchg
daa
cli
cmps
call
xchg
mov
jecxz
mov
mov
hlt
mov
pop
xor
and
sub
jmp
fcmove
xor
outs
dec
in
call
cmp
(bad)
push
and
pop
pop
out
xchg
lods
mov
add
jne
test
pop
mov
mov
ror
pop
fs
jbe
jo
ja
sub
cmp
clc
xor
outs
mov
repnz
add
or
out
(bad)
sbb
pop
sbb
jg
test
cmps
fld
les
add
mov
fld
popa
mov
push
push
xor
adc
outs
addr16
loopne
and
dec
sbb
lods
stos
in
icebp
mov
xchg
cmps
movs
test
pop
imul
imul
mov
out
sub
ret
ins
mov
call
lahf
dec
and
add
xchg
out
shl
mov
stos
outs
leave
nop
sbb
add
dec
dec
ja
rcl
jecxz
dec
fisttp
xlat
cmp
sub
(bad)
pop
in
mov
repz
outs
call
popa
pop
(bad)
push
mov
movs
jne
movs
dec
push
mov
jns
cld
mov
fdivp
popa
fcmovnbe
data16
and
loop
ficomp
or
cli
jmp
xchg
add
sub
packuswb
mov
lods
mov
aam
xchg
push
int3
movs
ret
lods
mov
jo
mov
cmp
ficomp
sti
movs
fnstcw
push
movs
sbb
push
les
(bad)
mov
test
xchg
cmc
xor
in
js
sub
push
in
arpl
adc
pop
stos
pushf
xchg
pop
sub
iret
adc
jge
pop
push
xor
push
push
adc
xchg
cmp
or
sti
pushf
shl
push
inc
push
mov
mov
jecxz
(bad)
aas
mov
jnp
stos
dec
sbb
lods
jg
sub
rcr
sahf
push
mov
pop
sub
pop
push
fsub
mov
fsub
inc
into
into
nop
in
lds
push
cli
not
and
add
or
int
or
jg
ret
rcl
pop
xchg
xchg
lds
mov
mov
(bad)
(bad)
inc
jns
push
jne
loopne
aas
movups
in
bound
mov
mov
cmps
mov
lods
(bad)
push
fimul
and
pop
aam
xor
test
mov
jne
gs
push
leave
mov
xchg
mov
mov
xchg
ror
mov
inc
xchg
add
lods
cmp
stos
out
aam
xchg
ins
pop
adc
outs
inc
shl
inc
cld
sbb
iret
outs
pop
shr
pusha
ss
mov
xchg
push
jle
jmp
stos
sbb
outs
scas
mov
or
fcom
daa
cmp
je
add
enter
(bad)
mov
les
ret
ror
jmp
or
stos
clc
mov
aaa
cld
pop
mov
fidivr
xor
mov
and
stos
mov
(bad)
dec
push
test
push
dec
inc
out
mov
(bad)
add
xor
ror
mov
pop
mov
cmps
mov
aas
mov
mov
mov
dec
daa
mov
sbb
cmps
pop
cmp
cmp
dec
in
lds
inc
dec
jbe
in
test
mov
aas
jle
mov
mov
mov
cmps
stos
or
add
into
cmp
in
bound
scas
in
adc
mov
ror
rcr
stos
adc
xlat
idiv
sbb
gs
les
mov
jmp
or
pop
add
mov
aas
pushf
pop
mov
lods
cmp
movs
push
cmps
vpaddb
xchg
push
xor
jo
sub
cs
ins
aad
sar
push
cmps
mov
ror
mov
jno
mov
pop
fst
add
enter
push
mov
cld
cdq
stos
inc
pusha
scas
jnp
lea
push
push
jg
jo
xor
pusha
adc
mov
cmp
cmps
cmps
xor
pop
dec
mov
shl
in
repnz
jecxz
stos
xchg
mov
scas
fisub
pop
sar
(bad)
and
dec
aad
arpl
sub
pop
mov
mov
aad
(bad)
pop
shl
daa
mov
dec
dec
mov
adc
lods
lahf
pop
lods
lea
(bad)
cmc
stos
sbb
int
pop
mov
jbe
fs
call
xchg
or
int
retf
ja
xor
(bad)
mov
retf
cs
pop
ins
dec
xchg
mov
movs
jne
sub
pop
in
test
sub
sub
iret
data16
and
and
mov
dec
and
add
movs
ret
sbb
lds
je
dec
mov
jl
pushf
xchg
ins
xchg
mov
div
int
cdq
push
imul
aas
add
lods
verr
data16
call
retf
xor
enter
push
leave
xor
mov
pop
sub
jle
pop
movs
sahf
(bad)
cld
aam
loope
push
fs
mov
jns
inc
(bad)
(bad)
pushf
pop
out
rol
pop
mov
das
jbe
xor
loope
cmps
lods
jns
mov
(bad)
dec
or
movs
rcr
les
push
int3
test
xchg
mov
test
jmp
scas
xchg
movs
and
push
repnz
ins
hlt
ret
xlat
data16
sub
popa
pop
ret
sbb
imul
loopne
mov
mov
movs
pop
call
or
mov
ss
mov
js
or
inc
pop
sahf
jmp
lock
ret
mov
(bad)
int3
adc
lock
and
or
pop
mov
inc
aam
ja
mov
xchg
popa
lods
mov
mov
sahf
ret
cdq
xlat
out
std
iret
nop
cli
in
push
adc
mov
inc
cmps
push
cmps
(bad)
mov
(bad)
mov
cs
dec
push
xchg
mov
or
les
mov
iret
loopne
lea
js
sub
jnp
dec
inc
lods
repnz
test
sub
pop
mov
push
in
leave
fwait
clc
dec
xor
fisubr
(bad)
mov
dec
sub
shl
in
aad
ja
pop
fs
std
cdq
cmp
sub
mov
cmc
fild
lods
mov
sub
pop
push
inc
jb
mov
adc
xor
and
int
lods
inc
dec
in
call
pop
lahf
and
addr16
mov
daa
add
data16
arpl
push
shl
mov
pop
jmp
addr16
imul
xchg
cmps
xchg
mov
scas
pop
mov
mov
popa
adc
push
lods
mov
sub
stos
mov
and
es
or
jo
sahf
mov
pop
aad
jns
or
(bad)
cs
and
mov
pop
stos
(bad)
int
ret
mov
jae
or
push
in
retf
mov
dec
mov
sahf
mov
(bad)
sti
ror
sub
xchg
dec
add
cmp
punpckhdq
outs
xor
fwait
dec
mulps
mov
addr16
retf
and
mov
mov
(bad)
adc
ret
jge
add
jno
inc
lods
int3
out
mov
push
das
inc
ret
jne
imul
dec
pop
daa
and
cmps
ins
fild
jns
icebp
repnz
and
sar
mov
movs
mov
jno
cmp
push
test
test
push
iret
mov
xchg
rcl
movs
push
(bad)
mov
fisubr
mov
test
in
jmp
addr16
es
icebp
push
popa
in
sahf
movs
or
mov
push
or
fsubr
test
jp
cmps
nop
(bad)
test
jns
and
out
lahf
addr16
cwde
hlt
ins
push
mov
mov
jmp
pop
ins
in
dec
jno
mov
mov
jle
mov
pop
test
push
mov
xchg
sub
mov
jmp
lock
xchg
imul
mov
and
daa
cmps
stos
repz
add
mov
xchg
ins
adc
mov
int
inc
mov
aad
mov
cli
dec
fwait
aaa
popa
jmp
and
leave
fs
std
idiv
and
jns
movs
sar
lods
inc
clc
push
push
ins
pushf
mov
sbb
shl
test
xchg
mov
js
add
push
add
cmp
jo
leave
cmps
pop
mov
imul
ret
pushf
or
leave
retf
dec
setle
cwde
xor
pop
(bad)
xchg
rcl
push
call
clc
neg
aam
mov
aaa
xchg
ret
cwde
ficomp
retf
(bad)
in
jge
jb
call
arpl
int
mov
mov
dec
retf
shl
cdq
fdivrp
ja
adc
jecxz
mov
and
xchg
jg
push
mov
cmp
outs
jns
push
ror
inc
aam
mov
retf
repz
ins
jno
icebp
xor
aas
(bad)
inc
daa
mov
adc
ins
or
mov
jp
(bad)
(bad)
push
pop
xchg
dec
cmp
push
aam
xor
add
test
xchg
test
jg
mov
dec
in
cmp
std
stos
push
out
test
shl
sub
or
jo
les
pusha
mov
rcl
jmp
jecxz
data16
hlt
mov
idiv
xor
mov
out
pushf
fcomp
outs
pop
pop
outs
xchg
mov
(bad)
mov
repz
adc
xchg
adc
ret
out
jmp
jmp
retf
scas
dec
xchg
cmp
xor
xchg
sub
mov
add
mov
imul
mov
xchg
jmp
and
ret
int
push
mov
mov
ins
cwde
xchg
addr16
xchg
test
(bad)
or
mov
adc
loopne
retf
ret
mov
mov
xor
pop
loope
repnz
and
popf
test
(bad)
imul
addr16
mov
in
xchg
stos
test
arpl
xor
mov
cdq
loop
movs
mov
inc
dec
xchg
adc
int
sbb
push
daa
inc
mov
sbb
jg
mov
cmp
mov
imul
dec
inc
cmp
hlt
mov
aas
mov
jne
sbb
gs
pop
xchg
test
inc
pop
(bad)
pop
jp
dec
xchg
cmps
ret
cmps
xlat
stos
mov
xchg
pop
xchg
adc
jne
mov
idiv
mov
test
inc
test
jl
add
out
pusha
push
cmp
mov
xor
fist
rol
hlt
ins
out
stos
sbb
add
mov
and
lods
and
test
(bad)
cmps
and
jmp
out
jmp
icebp
pop
aas
enter
jl
or
gs
sbb
cmp
ins
cmp
sbb
stos
inc
pop
popf
sub
mov
mov
ja
mov
scas
jno
in
jmp
movs
push
mov
mov
xchg
and
fisubr
movs
aas
sbb
add
sbb
adc
(bad)
and
ins
loopne
mov
cld
clc
cmp
jbe
in
lea
inc
adc
adc
mov
jge
pop
xchg
sbb
jle
push
sub
dec
and
or
mov
inc
mov
sbb
imul
push
cmps
imul
adc
jp
test
leave
leave
or
fwait
and
xor
add
cmps
inc
dec
jae
sub
pop
and
inc
(bad)
mov
out
retf
cmps
fwait
xchg
sub
dec
out
mov
gs
add
pop
sbb
adc
cmc
push
aaa
je
call
xor
add
in
cmps
jae
arpl
inc
test
mov
or
dec
imul
adc
in
sbb
std
and
xor
daa
mov
out
xchg
test
sub
add
jne
scas
inc
pusha
stos
daa
mov
sub
xor
mov
out
arpl
push
push
cmps
mov
and
aad
jmp
stos
mov
cmp
movs
and
xchg
mov
dec
sar
or
out
(bad)
imul
rcr
das
mov
mov
and
mov
adc
daa
and
mov
cmp
call
popa
nop
adc
sti
scas
add
out
stos
sbb
adc
outs
js
(bad)
iret
sub
xchg
jp
ficomp
push
xor
out
imul
push
jmp
cs
rol
sub
es
ins
inc
outs
in
pop
ins
jns
mov
iret
scas
sbb
int
sar
sbb
add
stc
add
scas
fsubr
mov
stos
es
mov
test
push
sub
pop
cmps
sahf
adc
(bad)
aaa
(bad)
stc
fcom
std
sub
or
mov
mov
push
and
shl
dec
cld
repnz
add
xor
sub
pop
adc
xchg
lea
jl
fsubr
sub
test
outs
push
push
int
fdiv
mov
iret
cmc
outs
or
popf
pop
xchg
xchg
adc
inc
and
sbb
fist
les
mov
pop
aaa
and
sti
and
cmp
movs
out
mov
add
sahf
mov
push
jle
mov
(bad)
lds
dec
sub
imul
dec
mov
mov
pop
gs
and
pop
dec
cmps
cmp
sub
mov
imul
mov
call
xor
(bad)
sahf
and
fdivr
dec
jne
jmp
lea
leave
mov
sub
repnz
neg
int
push
jmp
jge
sub
icebp
or
out
out
push
mov
mov
mov
inc
lea
retf
jle
movs
mov
out
inc
(bad)
aas
aas
push
lahf
sar
imul
xchg
gs
mov
test
aaa
mov
ins
cli
xchg
mov
and
push
ror
xchg
std
cmp
ds
lods
add
mov
mov
stos
(bad)
mov
mov
adc
pop
pusha
mov
arpl
xchg
jl
fadd
ja
cmp
das
ficomp
push
mov
pop
push
lea
jmp
inc
xchg
xchg
inc
mov
mov
or
push
dec
inc
cli
inc
call
sub
mov
out
pushf
aaa
call
jbe
inc
push
pop
mov
mov
xor
mov
dec
sti
xor
mov
ja
xchg
outs
lahf
push
or
jne
es
dec
or
adc
and
mov
xchg
(bad)
out
inc
pusha
out
jecxz
push
and
out
fsubr
pop
loopne
stos
push
jmp
test
ja
and
(bad)
cmp
pop
rcr
dec
inc
(bad)
dec
in
repnz
mov
inc
adc
and
xchg
jae
add
pop
fisttp
repz
or
fs
sub
and
cdq
lods
sbb
inc
fidiv
jb
jmp
mov
sbb
imul
xchg
pop
dec
(bad)
push
pusha
pop
xchg
mov
jg
mov
pushf
mov
pop
data16
hlt
dec
setbe
rcl
ja
sbb
and
repnz
pop
dec
dec
das
xchg
jno
mov
mov
sub
out
dec
out
mov
sub
or
xchg
mov
sub
cmps
mov
in
mul
mov
xchg
mov
dec
add
fwait
and
xchg
sbb
popfw
loopne
fcom
jns
ror
pop
std
adc
cld
lds
mov
movs
test
pop
and
icebp
sahf
stos
mov
mov
inc
cmp
jo
cmp
xor
mov
jle
arpl
pusha
rcl
inc
cs
test
stos
xchg
stos
call
int
jge
mov
mov
cmps
(bad)
lods
rcr
xchg
mov
cmp
sub
ss
clc
vmovq
cmp
mov
out
inc
loop
(bad)
lds
mov
ins
mov
mov
jg
arpl
push
cdq
cmp
js
stos
mov
inc
mov
mov
arpl
mov
sub
jne
es
jg
dec
xchg
shl
pop
add
xor
das
test
es
fs
repnz
sub
push
lahf
adc
inc
xchg
jmp
xchg
mov
loop
ds
pop
imul
aad
je
das
fdivr
scas
xor
(bad)
shl
inc
cmp
and
outs
out
xchg
jmp
inc
jb
jnp
inc
cdq
test
jbe
outs
cmp
jle
or
push
int
lods
enter
sub
stos
pushf
lea
inc
lods
add
in
adc
in
cmps
mov
mov
pop
mov
cdq
imul
scas
fstp
and
cmc
pushf
push
out
mov
push
fcom
fcmovne
out
dec
mov
fidivr
mov
xor
cmps
mov
sbb
dec
mov
inc
jno
cmps
jl
ror
xor
loop
out
(bad)
int
pop
repnz
data16
inc
out
fidivr
hlt
add
nop
cs
in
call
or
add
imul
cmp
(bad)
sub
neg
sub
and
sbb
test
or
int3
and
gs
cli
les
popa
ficomp
jp
cld
push
ds
cmp
mov
mov
and
mov
mov
jo
mov
nop
sbb
mov
popa
shl
es
xchg
in
pop
pop
dec
cld
rcr
(bad)
test
add
xchg
out
mov
movs
adc
movs
pop
sub
paddusb
cmps
dec
js
pop
adc
ins
dec
daa
xor
mov
(bad)
adc
cld
into
mov
fild
rcl
adc
jg
add
jno
or
and
adc
ficom
(bad)
rsqrtps
push
(bad)
ins
in
popa
xchg
in
mov
jle
mov
jmp
dec
aaa
sbb
jmp
jns
mov
ret
pushf
jge
push
pop
dec
addr16
and
cmp
sub
mov
(bad)
ins
jl
ds
pop
in
xor
jmp
mov
cmps
stc
aad
sbb
scas
cmp
mov
or
jo
xor
jl
imul
mov
jno
dec
sub
outs
xchg
mov
cmp
adc
and
clc
repnz
arpl
jg
xchg
scas
ins
sar
mov
enter
stos
fidivr
test
add
rol
or
mov
push
mov
mov
xchg
mov
and
hlt
sti
add
mov
sub
pop
pop
mov
fmulp
or
jg
mov
adc
movs
jmp
xchg
fst
bound
outs
int
in
stos
jle
xor
mov
mov
daa
mov
std
lock
jnp
test
pushf
fcom
addr16
mov
push
dec
sar
movs
mov
aam
lahf
sbb
jmp
movs
outs
or
pop
fnstsw
xchg
mov
cmp
xchg
pop
stos
cmp
pop
pop
push
push
xchg
in
xchg
stos
sbb
jge
sub
cdq
mov
push
(bad)
int
ja
repnz
movlps
data16
pop
scas
movs
jbe
push
cli
fisttp
inc
mul
dec
pop
fwait
pop
mov
xchg
and
pop
pop
rol
cmp
pushf
inc
fs
es
ins
xchg
xchg
dec
imul
or
stos
retf
test
aas
das
push
popa
pop
sub
scas
leave
or
or
xchg
aam
mov
jo
fidiv
das
(bad)
addr16
frstor
jmp
jp
inc
or
scas
lods
js
call
sub
cmp
movs
cmp
aad
and
jns
mov
in
leave
sbb
adc
bound
dec
jns
cli
cmp
int3
and
(bad)
mov
inc
sbb
jb
call
dec
shl
dec
std
inc
sub
jo
clc
mov
xor
mov
mov
es
push
push
(bad)
jg
push
dec
mov
mov
jecxz
and
outs
fld
mov
ss
ins
les
add
(bad)
stos
pop
mov
jo
ret
add
pop
test
inc
sbb
xor
sbb
sub
push
mov
repnz
xor
push
shr
call
push
div
in
add
push
dec
mov
mov
mov
fisttp
pop
outs
mov
dec
popa
(bad)
mov
ds
push
sub
xchg
imul
cwde
js
aam
mov
jle
xor
gs
cmp
das
aam
mov
mov
neg
pop
scas
xchg
jmp
mov
repz
and
jmp
arpl
mov
xchg
and
cmps
outs
cmc
jg
(bad)
ins
mov
mov
sar
mov
and
sbb
pop
scas
sbb
mov
jmp
pop
ins
cmp
arpl
push
pop
cwde
cmp
mov
pusha
js
and
xor
sbb
in
jo
jg
aaa
or
xor
ret
pop
sbb
fiadd
push
dec
in
retf
lods
jl
inc
scas
ins
sti
push
out
sbb
jne
lds
push
sub
ja
sbb
inc
cmp
ja
cmp
(bad)
push
(bad)
retf
test
retf
lods
imul
int3
lods
jge
pop
(bad)
and
loop
mov
pop
mov
lea
mov
fist
mov
cmps
mov
pop
fdiv
cld
mov
ror
mov
push
mov
mov
mov
fcom
pop
jmp
lods
pop
and
ret
sub
jle
cdq
add
cld
fwait
sub
je
mov
jnp
test
rol
(bad)
sbb
mov
xchg
xlat
js
gs
xor
add
stos
ins
pop
scas
fstp
pop
cs
stos
popa
pop
fbstp
add
(bad)
jecxz
sbb
ja
cmp
push
xor
ins
dec
out
sahf
dec
addr16
sub
mov
push
in
test
push
mov
inc
clc
add
mov
aad
lea
xlat
push
mov
and
fiadd
dec
imul
pop
mov
xchg
adc
pop
out
jns
nop
aas
scas
ss
inc
push
bound
sub
stos
add
adc
xchg
pop
not
fwait
and
out
test
push
mov
xchg
xor
cmp
xor
retf
jmp
jle
or
test
jne
dec
dec
cmpxchg
(bad)
cld
push
(bad)
sti
fs
ja
mov
mov
cmc
xor
ds
mov
xchg
pop
sbb
adc
adc
xchg
out
or
in
and
retf
js
adc
jnp
nop
push
push
xchg
adc
and
ret
test
and
enter
and
ja
push
sub
loope
shl
adc
sahf
xchg
sub
and
mov
jmp
sub
pop
pop
popa
enter
push
pop
mov
or
sub
mov
popf
and
icebp
call
in
in
pop
pop
mov
in
stos
jns
leave
xchg
add
mov
stos
gs
rol
in
mov
(bad)
mov
jle
cmp
(bad)
ss
call
bound
xchg
inc
add
push
mov
mov
mov
mov
sub
call
outs
mov
mov
aas
ror
xchg
xchg
or
cmps
std
int3
imul
ret
push
adc
call
in
push
mov
retf
ins
std
int
push
ins
cmp
gs
imul
std
(bad)
ds
jmp
sar
mov
das
push
xor
xchg
and
pop
ja
mov
or
ins
cmps
shr
retf
sub
mov
sub
test
ret
in
daa
push
mov
cmp
movs
jle
dec
pusha
mov
call
mov
ror
add
ins
test
daa
mov
test
jo
test
adc
or
mov
mov
cld
adc
daa
mov
sbb
mov
nop
es
fwait
fwait
pop
mov
test
es
mov
daa
lods
iret
(bad)
dec
scas
fsub
fidivr
jae
(bad)
(bad)
xor
push
and
retf
add
lods
cmps
(bad)
scas
inc
and
cdq
pop
sti
and
in
into
stc
ficom
outs
and
jns
stos
imul
ror
inc
mov
movs
cmps
sbb
bound
sub
fcom
in
outs
jb
mov
or
sar
jo
push
fist
jecxz
pop
dec
(bad)
call
cmp
dec
pop
cdq
cld
aam
xchg
mov
cmc
dec
cmp
sbb
xchg
jge
test
jnp
ret
mov
popf
and
push
xchg
or
xchg
mov
jle
jp
nop
jne
out
and
lds
xchg
ds
pop
fisttp
lea
push
sbb
mov
loopne
stos
popf
mov
(bad)
mov
in
mov
xor
mov
fsubr
pop
aas
ja
stos
ds
gs
int3
adc
mov
int
hlt
daa
nop
(bad)
loopne
and
xor
sbb
call
dec
mov
xor
mov
popa
daa
pop
lea
leave
ins
adc
xchg
pop
movs
leave
adc
pop
or
stc
jp
cmp
hlt
or
sub
pushf
cld
adc
pop
xlat
pop
ret
dec
jle
mov
mov
sbb
sub
fisttp
fistp
pop
xchg
fdivr
pop
mov
pop
aad
arpl
test
xchg
push
not
ins
cmps
push
dec
cmp
jecxz
ss
nop
cli
mov
stos
add
ror
cmp
adc
sbb
push
sub
test
ds
or
aad
jno
in
fld
cmp
and
(bad)
sbb
mov
jg
lahf
pop
pop
ja
jmp
(bad)
sub
cmp
jmp
in
cmp
je
mov
dec
xchg
aam
pop
mov
sar
jl
jbe
aaa
mov
test
mov
aas
dec
xchg
nop
cmps
ins
sub
test
dec
cwde
xchg
dec
je
mov
mov
icebp
addr16
(bad)
push
ins
in
add
mov
dec
jl
dec
pop
push
cmp
aas
pop
mov
pop
xor
cmp
xchg
in
popf
jo
stc
cmp
pop
aam
pushf
mov
mov
jnp
adc
add
xchg
mov
cmps
sbb
es
cs
ret
fisubr
dec
pop
retf
lods
retf
fs
jbe
inc
je
adc
cli
in
in
pop
shr
scas
cld
stos
imul
mov
push
in
ds
sahf
inc
clc
mov
jmp
in
int3
add
stc
mov
call
repnz
mov
sub
shl
enter
retf
mov
cmp
lods
in
out
jns
imul
int3
daa
mov
mov
fwait
aas
xchg
cmps
inc
mov
or
mov
in
scas
and
ret
aam
je
xor
lock
adc
xor
ja
lea
inc
rcr
xchg
bound
xchg
jge
inc
shl
mov
dec
pop
cs
mov
sar
mov
pop
les
mov
rol
daa
es
hlt
and
xor
inc
sub
push
sub
mov
mov
stos
mov
arpl
mov
(bad)
fisttp
mov
mov
loope
into
sub
fimul
call
jp
inc
jno
in
jnp
push
lahf
shr
mov
lods
je
or
ins
mov
jg
aaa
adc
hlt
retf
in
inc
sub
jmp
vpunpckhqdq
aas
mov
sbb
xor
mov
dec
sub
mov
daa
ds
lods
scas
sub
imul
jo
pop
and
mov
mov
cmps
(bad)
lods
ret
inc
js
push
jo
movs
mov
cli
jmp
add
sahf
test
or
jo
push
push
mov
clc
lods
and
mov
add
jno
mov
mov
pop
mov
adc
cld
adc
(bad)
shl
jmp
imul
jle
inc
inc
ficom
addr16
xor
int
push
pop
dec
cmp
mov
ficom
jnp
sub
scas
in
(bad)
popf
stos
pop
inc
addr16
adc
cmp
mov
adc
lea
dec
test
rcr
inc
xor
scas
cmp
arpl
(bad)
leave
inc
ud2
or
ds
push
xchg
aad
cwde
int3
mov
push
es
push
pop
ret
addr16
or
sti
xor
push
cwde
add
nop
icebp
mov
xor
mov
imul
xor
cmp
mov
mov
je
sub
mov
lods
out
es
gs
jb
fild
push
mov
jl
cld
lock
lods
push
xor
jb
shl
inc
or
push
sub
(bad)
mov
cdq
shr
adc
dec
sub
movs
mov
jno
idiv
in
pop
jge
push
mov
jl
imul
jge
jle
faddp
js
cmp
mov
push
ins
push
mov
cmp
les
push
lods
lods
jo
push
xchg
jecxz
inc
imul
jmp
mov
aas
cmp
mov
jns
cmc
mov
pop
mov
sbb
dec
in
xor
ds
cwde
(bad)
jecxz
iret
(bad)
pop
push
cmp
sub
or
dec
(bad)
mov
fisubr
xor
fwait
push
fwait
mov
mov
and
(bad)
jge
stos
and
sub
pop
xor
mov
mov
and
mov
and
pushf
lods
out
stc
dec
mov
mov
xchg
ficomp
push
call
ret
rcl
inc
jmp
fcom
sbb
push
adc
retf
fild
jnp
jg
ror
rcr
adc
ins
mov
add
adc
mov
jbe
cwde
xchg
mov
fdivr
daa
mov
ins
cmps
int3
ret
mov
aad
movs
inc
retf
pop
inc
test
jle
mov
cmp
or
in
cmp
add
ja
push
test
addr16
mov
fsubr
cmp
jle
popa
mov
fwait
push
and
xchg
mov
jg
push
jge
cmps
mov
movs
mov
cmp
fcmovne
ret
push
inc
sub
jmp
cli
cdq
fisttp
add
addr16
das
clc
cmp
call
adc
jg
ins
inc
daa
dec
cmp
jl
or
inc
inc
jo
or
pop
cmp
out
int3
ss
mov
es
outs
(bad)
movs
jno
enter
push
iret
arpl
jmp
lods
mov
mov
push
(bad)
mov
les
inc
mov
mov
jl
into
mov
pop
inc
lock
sub
mov
xchg
jmp
stos
daa
mov
lea
xchg
or
neg
cli
mov
jbe
cmp
loop
out
(bad)
daa
cmp
adc
fsub
cmps
push
movs
sub
icebp
push
add
inc
fmul
sar
mov
cmp
xchg
inc
jge
pop
test
shl
xchg
pop
dec
ret
mov
xor
scas
fsubrp
out
sbb
pushf
xchg
jb
cli
cld
out
jns
or
sub
adc
cli
(bad)
mov
dec
or
cli
scas
les
or
int3
pop
mov
mov
icebp
push
xchg
jo
div
sbb
inc
test
inc
sub
cli
add
adc
out
fwait
or
stc
mov
(bad)
cdq
jne
mov
adc
push
ja
sbb
fwait
sub
in
rol
repz
inc
and
jo
icebp
in
ficomp
inc
adc
cmp
xor
jmp
pop
in
out
popa
inc
mov
in
je
inc
sbb
pop
stos
or
retf
mov
cs
cmps
and
inc
outs
cmp
shr
(bad)
xlat
aaa
fwait
dec
ins
js
cmp
add
adc
imul
jmp
mov
adc
mov
cmps
sbb
sbb
push
inc
mov
(bad)
mov
in
(bad)
rol
ss
jnp
mov
out
out
scas
sub
test
add
push
cmps
mov
mov
stos
mov
in
addr16
je
mov
mov
ja
jnp
pop
sbb
sbb
ds
dec
(bad)
dec
add
xlat
cld
in
movs
les
mov
sub
add
imul
out
scas
test
push
push
es
shl
outs
jp
js
cmp
fadd
mov
mov
xchg
push
sbb
mov
push
jnp
pop
push
mov
push
jl
xlat
fldcw
jo
sbb
xor
gs
and
retf
jmp
mov
mov
fcom
adc
pop
and
jl
add
dec
pop
cwde
ds
js
xchg
pop
test
xchg
add
add
dec
push
pop
adc
leave
pop
xchg
retf
(bad)
popa
(bad)
cli
dec
mov
mov
fistp
fiadd
test
push
inc
and
bound
into
cwde
or
adc
int
pusha
sahf
jmp
fdiv
fwait
rol
xchg
sar
movs
and
test
jnp
mov
mov
pop
imul
mov
(bad)
jecxz
arpl
fs
into
in
mov
sbb
fwait
jno
repz
xor
dec
jge
xor
or
and
and
mov
je
mov
cld
leave
(bad)
leave
int
inc
stos
std
jbe
movs
test
movs
xchg
jle
mov
mov
mov
sbb
push
jb
js
jg
mov
add
iret
mov
jo
push
xor
inc
lds
aaa
mov
fnstsw
es
jp
clc
jbe
in
cmp
cmp
rcr
sahf
mov
not
cmp
fdivr
push
add
xchg
fisub
pusha
xor
hlt
rol
sbb
sub
ins
fsub
and
mov
lea
sub
ds
scas
loopne
ss
ret
jg
sub
stos
or
mov
adc
mov
jmp
pushf
repz
or
mov
mov
pushf
push
jmp
in
xchg
jecxz
cmps
lea
jae
mov
or
scas
push
mov
inc
stos
jbe
cmps
ret
hlt
adc
lahf
popa
(bad)
out
mov
test
pushf
ret
(bad)
nop
test
mov
sbb
daa
ja
xchg
lods
cmp
xchg
mov
imul
add
cmp
in
dec
sub
and
movs
aaa
xlat
xor
and
cld
out
pop
xchg
jne
fdiv
cmp
ja
repz
out
fsub
(bad)
ror
jbe
fidiv
popf
cmps
lea
stos
stc
cmp
fs
arpl
(bad)
cmp
out
cmp
xor
(bad)
(bad)
jmp
shl
jge
ret
dec
sub
movs
mov
push
jg
int3
sbb
inc
cs
into
dec
jae
push
adc
lods
or
mov
outs
loop
repnz
pop
and
mov
or
js
pop
aam
call
fdivr
push
mov
cmps
or
loop
popa
xor
mov
jb
test
mov
cmp
popf
or
add
out
fisub
shl
or
pop
fistp
or
nop
pop
into
xchg
adc
cmp
(bad)
or
cmc
inc
data16
ret
pop
jmp
call
pop
dec
xor
add
outs
push
push
mov
imul
mov
xchg
jp
cmps
stos
std
js
mov
and
in
bnd
adc
add
mov
gs
outs
movs
pop
xchg
enter
inc
push
fld
outs
cmp
push
mov
jmp
fs
and
loop
sbb
dec
sbb
xchg
jmp
jmp
test
(bad)
loop
retf
sbb
aas
retf
fdivr
sbb
repz
pushf
in
iret
clc
sbb
lods
jl
test
dec
call
lea
fstp
(bad)
cld
leave
xor
mov
stos
mov
inc
rol
push
adc
out
cmps
cli
lods
inc
aas
cmp
or
sbb
mov
dec
mov
stos
or
dec
mov
pop
retf
sbb
jg
dec
mov
iret
add
mov
push
retf
mov
inc
inc
mov
cmps
mov
mov
xchg
daa
ds
jno
test
test
sub
cmp
pop
inc
dec
sbb
jmp
and
out
mov
in
cwde
mov
mov
mov
sbb
int
in
scas
fcmovne
cmp
mov
dec
aaa
mov
(bad)
sub
pop
dec
pop
cmp
out
adc
test
ja
jno
int3
or
inc
gs
mov
enter
adc
push
outs
jmp
lds
call
push
arpl
bound
xchg
cmps
sbb
cdq
mov
cmp
inc
and
jnp
bndldx
and
xlat
loop
in
push
mov
cmps
mov
cmc
je
xor
mov
sub
fld
jnp
dec
scas
es
hlt
cmps
stos
retf
push
cmps
inc
push
add
retf
addr16
mov
pop
dec
or
mov
aam
in
sub
inc
stos
mov
(bad)
jl
adc
mov
mov
fs
out
movs
pop
js
pop
adc
rcl
fisttp
je
cmp
xchg
out
js
retf
ret
or
dec
jle
and
mov
xor
jne
jns
outs
test
sbb
sbb
mov
daa
xor
shr
imul
mov
inc
stos
mov
sbb
stos
mov
jl
test
add
jle
sbb
mov
mov
loop
imul
jp
sub
(bad)
pop
(bad)
xor
jge
add
(bad)
or
or
cmp
cmps
loop
lock
sbb
jl
dec
ja
pop
ret
adc
or
pop
xchg
gs
cmps
xchg
jnp
pop
inc
mov
mov
cmps
push
aam
push
pop
xchg
test
inc
cmp
popf
xchg
les
jle
sub
loop
sahf
sbb
jecxz
daa
cmp
pushf
(bad)
ja
xchg
ficom
push
nop
mov
iret
js
ret
xor
mov
scas
(bad)
inc
push
int3
mov
inc
ds
es
jmp
stos
popf
scas
or
or
mov
movs
test
fwait
adc
mov
sahf
stos
ficom
sbb
mov
sub
dec
push
stos
call
mov
adc
sub
mov
jle
inc
cs
xchg
arpl
sub
mov
stc
je
mov
idiv
adc
sub
jmp
shl
movs
scas
inc
pop
sahf
mov
imul
or
adc
stos
das
pop
lahf
push
cmp
mov
lods
cmp
hlt
lods
imul
xor
lds
sar
mul
pop
push
jp
movs
cli
mov
dec
fnstenv
das
retf
icebp
mov
ja
cwde
dec
mov
stos
cmp
fidiv
sti
mov
ret
cmps
lea
in
scas
mov
pusha
mov
dec
or
in
jmp
push
(bad)
stos
movs
(bad)
aad
push
cdq
push
cmc
cmp
pop
pop
xchg
xchg
in
icebp
xchg
pop
iret
pop
sub
add
jl
cli
mov
ficomp
jle
retf
call
in
aaa
inc
rol
sbb
ret
movs
test
pop
cmps
or
ja
cmp
xor
mov
mov
mov
pop
(bad)
rcl
fsubr
and
pusha
mov
(bad)
movs
push
xchg
inc
sbb
mov
retf
enter
cwde
sbb
sar
or
jns
rol
mov
stos
xor
mov
das
rcl
pop
sub
cmp
fstp
lds
add
cld
cmovno
test
add
or
aas
movs
loopne
mov
sbb
push
and
sbb
jge
or
sub
mov
lahf
(bad)
sar
pop
pusha
cmps
sub
movs
repnz
jmp
jmp
jmp
cld
scas
in
pop
mov
imul
movs
fstp
push
ror
call
fisubr
in
shl
mov
ds
cmp
pop
rol
adc
and
jno
je
or
jo
xchg
mov
xchg
cmc
(bad)
ins
or
jg
fnstenv
cmp
stos
xchg
(bad)
ficomp
imul
and
fisubr
and
dec
addr16
lods
sub
xchg
mov
mov
jl
sahf
adc
jae
out
mov
imul
mov
popa
mov
jns
mov
push
cmps
add
dec
addr16
outs
(bad)
mov
push
fs
mov
pop
pop
add
sub
dec
test
scas
xor
mov
pop
gs
or
das
xchg
adc
aam
les
add
mov
scas
scas
xchg
ficomp
jle
pop
jmp
dec
sahf
jb
pop
stos
xchg
clc
and
ret
jmp
or
test
jb
loopne
cwde
mov
inc
sbb
inc
add
cmp
xchg
shl
pop
xchg
mov
pusha
fwait
push
cwde
loopne
cdq
jae
cld
sub
ds
inc
fcmovne
xor
jmp
arpl
inc
shl
cmp
sub
xchg
pop
jno
ss
cmp
ret
sti
fwait
jno
mov
jge
mov
ret
stos
out
popa
(bad)
sbb
addr16
ret
les
mov
test
jae
and
pop
bndstx
dec
repnz
fist
pop
out
sub
psrld
xchg
imul
movs
dec
adc
adc
je
aaa
popa
dec
test
sub
call
jbe
pop
xchg
cmp
push
popa
pop
mov
jbe
outs
scas
lahf
cmp
sbb
mov
xchg
fcomp
jae
add
xchg
imul
inc
lahf
xor
or
(bad)
sub
out
aad
and
jns
push
jne
fwait
and
sub
and
iret
pop
addr16
xchg
std
mov
fld
jnp
sahf
mov
fdiv
popf
and
popf
xchg
lods
jecxz
sub
stos
xor
dec
push
std
ficomp
xor
rol
out
aas
mov
popa
inc
test
mov
cmps
xchg
inc
mov
rol
dec
fwait
adc
pop
and
mov
mov
jg
sti
(bad)
xchg
dec
xchg
adc
pop
sub
adc
es
ret
aaa
xchg
adc
arpl
jg
lock
ret
adc
(bad)
loopne
test
cmp
sbb
cmps
dec
pop
mov
and
jp
icebp
popf
pop
or
sahf
jo
jbe
cmps
(bad)
xchg
fs
hlt
jo
dec
inc
movs
xchg
xor
adc
or
inc
repz
je
sar
pop
nop
mov
mov
inc
ror
mov
shr
cdq
mov
cli
loopne
ret
nop
in
pushf
pop
movs
bound
jbe
out
es
pushf
repz
mov
ror
cmps
dec
mov
jns
cmp
jg
sbb
mov
mov
cld
xchg
add
sti
addr16
add
push
stc
mov
fcmovnbe
mov
inc
inc
pusha
mov
mov
(bad)
sar
pop
inc
jnp
jo
retf
inc
and
(bad)
scas
rcl
test
outs
push
scas
int
aas
mov
xchg
daa
mov
mov
ret
data16
and
cmps
add
div
stos
cmp
mov
add
adc
pop
mov
mov
push
jge
push
sub
lds
clc
idiv
stos
add
movs
xchg
sub
push
ds
sbb
rcl
fiadd
mov
aas
int3
inc
inc
jle
adc
mov
jmp
cmps
aaa
pop
stos
sbb
imul
xchg
test
popf
lods
pop
mov
aaa
inc
stos
jg
add
(bad)
lahf
mov
pop
xor
pop
mov
mov
sub
jb
cld
(bad)
or
inc
popf
loop
dec
and
in
dec
add
arpl
mov
fwait
push
inc
xchg
and
inc
lods
es
icebp
pusha
aam
mov
jne
pop
fwait
imul
sub
lods
sub
or
cmp
ror
imul
(bad)
jge
shr
ret
mov
aaa
mov
repnz
in
scas
cli
mov
ret
jno
cmp
dec
mov
rcr
nop
jle
(bad)
pushf
data16
in
sbb
mov
in
ja
mov
mov
lock
mov
push
xchg
cmps
cwde
jp
clc
xchg
add
aaa
cmp
mov
in
repnz
adc
mov
lods
scas
add
(bad)
mov
outs
ja
inc
mov
adc
mov
dec
mov
fdivr
ins
data16
dec
push
xchg
mov
(bad)
jge
lea
xor
mov
aad
or
sbb
or
aad
push
cmp
xchg
adc
fucomip
adc
out
jne
sbb
fs
or
mov
dec
adc
mov
sub
movs
sbb
fs
adc
cmp
lahf
shl
inc
adc
ficom
push
int3
inc
not
cld
loop
mov
add
xor
and
pushf
(bad)
mov
cwde
sbb
dec
mov
je
mov
int3
cmp
stc
mov
not
ins
out
cs
push
hlt
pusha
adc
jecxz
jo
cmps
scas
or
fist
(bad)
jmp
cmp
imul
stos
arpl
sub
lock
mov
xchg
out
aam
cmp
stos
(bad)
in
jns
js
xchg
cmp
scas
retf
inc
mov
int
cmp
call
cmp
mov
sub
cli
xor
mov
outs
call
shr
cmps
mov
cmc
clc
in
mov
rcl
push
dec
mov
lahf
lea
mov
pusha
pop
or
dec
xor
inc
pop
sub
mov
repnz
xchg
fnstenv
pop
dec
jno
mov
std
mov
cmp
shr
pop
mov
mov
adc
mov
lds
cmp
cmps
fimul
test
es
jo
jns
pop
pop
xchg
pop
in
loop
xchg
jecxz
test
in
shl
inc
ret
lock
jl
pop
sub
(bad)
sahf
ss
pop
cmp
mov
cmp
ins
xchg
push
cmp
mov
add
stc
or
dec
stos
stos
mov
xchg
pop
pop
dec
jo
sbb
xlat
mov
hlt
(bad)
jo
jge
mov
mov
jge
push
movs
push
imul
sbb
ja
das
mov
mov
cmps
xchg
or
pop
loopne
clc
xor
rcl
mov
mov
(bad)
sbb
stos
ds
sbb
adc
cmps
bound
lea
fisub
xor
ret
mov
cmp
int
xchg
inc
add
and
aad
mov
mov
ret
mov
in
popf
in
pop
xchg
mov
mov
jg
imul
mov
xor
mov
pop
jns
mov
gs
rcl
clc
or
or
scas
pop
mov
sbb
outs
aaa
bound
jg
les
pop
out
jl
(bad)
cmp
jne
imul
xchg
and
mov
test
mov
push
dec
sub
aam
ret
push
mov
jmp
cmc
dec
pop
jge
adc
(bad)
push
mov
and
xchg
dec
pop
adc
mov
jle
in
stc
sub
out
mov
std
dec
nop
fdivr
xchg
call
std
pop
movs
aas
daa
push
lds
mov
sahf
xchg
nop
(bad)
dec
mov
pop
dec
and
jno
dec
ret
mov
pop
mov
mov
jecxz
pusha
mov
pop
shr
mov
ret
mov
jno
xor
jns
cmp
imul
ds
mov
mov
mov
fld
sbb
imul
pushf
xor
movs
push
xchg
mov
dec
sub
cmps
lahf
or
mov
(bad)
(bad)
and
call
ja
stc
mov
add
pop
ret
fisub
mov
and
pusha
rep
addr16
stos
dec
in
ret
cmps
jle
js
sub
aam
inc
aaa
pop
jecxz
aam
cmc
xor
add
sbb
xor
and
or
mov
fucomi
pop
imul
dec
outs
fld
(bad)
mov
or
test
mov
xchg
aaa
sbb
mov
ss
imul
or
dec
call
and
mov
sbb
sbb
nop
jae
push
fwait
aas
into
dec
clc
or
push
jg
daa
jb
adc
jbe
ja
iret
retf
stos
movs
xchg
jo
jbe
out
mov
fisttp
scas
xlat
rol
ins
call
cmp
push
cmps
fidivr
add
sbb
xchg
int
ret
int3
jmp
sbb
dec
jl
mov
std
mov
ret
jge
pop
sahf
mov
ins
or
hlt
movs
mov
fsub
lods
(bad)
fiadd
out
pop
jle
popf
fst
mov
adc
(bad)
push
stos
mov
jl
mov
cmp
add
lock
cld
pop
mov
fcmovb
ja
je
xchg
dec
and
sbb
sub
pop
inc
shl
xor
leave
fstp
add
lods
dec
adc
xchg
jne
pop
add
mov
loopne
push
iret
aas
pop
ret
inc
jmp
arpl
or
push
mov
ror
sub
fimul
std
ins
cmc
scas
xchg
jmp
stc
lods
mov
inc
mov
and
es
scas
ret
mov
dec
mov
add
ret
mov
stos
add
jns
int3
pop
jns
mov
mov
adc
push
sub
pop
fdiv
fsubr
mov
out
pop
jl
stos
pop
fsubr
cmps
pop
mov
out
or
lock
cmp
and
and
pop
movs
and
loopne
add
xor
mov
jge
mov
call
daa
inc
push
ja
test
jnp
cmp
rcl
xchg
sub
nop
test
xchg
jg
retf
and
sub
popa
(bad)
ficomp
pop
fdivr
nop
push
jg
fisub
jge
out
ins
jge
push
je
xchg
stos
mov
test
fidivr
nop
js
mov
mov
sub
jnp
xchg
jbe
inc
test
cmp
call
(bad)
out
lods
test
cmc
(bad)
jmp
je
stos
out
enter
mov
test
leave
pop
adc
je
jnp
call
repz
stos
cs
cmps
adc
add
lds
loope
movs
leave
xor
(bad)
test
mov
sbb
in
jnp
adc
inc
cs
inc
ret
outs
call
xchg
mov
mov
cmps
xchg
dec
mov
mov
xchg
mov
dec
xchg
jbe
(bad)
stos
test
dec
push
jl
sbb
imul
in
les
ror
cmps
push
mov
outs
and
pop
test
jnp
addr16
loope
mov
rcl
mov
mov
rol
shl
or
jmp
scas
cmp
vlddqu
fwait
lods
sub
(bad)
lock
cdq
je
push
adc
mov
ins
mov
add
push
add
adc
xchg
(bad)
test
fwait
jge
out
mov
lods
and
mov
mov
das
js
jae
sub
lock
sti
cmp
mov
add
rol
movs
bnd
sbb
out
repnz
jg
out
cmc
jmp
test
xchg
ror
daa
shr
dec
sbb
jns
xor
cmp
xchg
in
and
daa
and
xchg
pop
inc
xchg
xchg
push
sbb
movs
or
fnstsw
mov
outs
lds
or
mov
jmp
arpl
or
scas
jmp
mov
rep
fcmovne
ror
add
push
xor
test
sbb
ret
xchg
lea
jbe
fwait
pop
dec
es
or
push
(bad)
dec
and
cmp
test
jno
ins
pop
jmp
and
pop
or
and
fwait
mov
push
xor
sbb
icebp
shl
sbb
lea
ins
es
mov
retf
mov
out
and
fsubr
push
xor
mov
(bad)
icebp
jae
cmps
jae
ja
out
pop
cmp
push
test
sar
mov
(bad)
mov
mov
(bad)
fucom
cmps
stos
xchg
popf
lea
imul
test
xor
dec
stos
aas
sub
popf
movs
cmps
or
out
popf
xchg
cld
mov
test
fmul
test
popa
sub
jg
mov
xlat
sbb
retf
mov
xor
mov
ror
mov
movs
mov
dec
arpl
pop
xchg
sbb
jecxz
gs
mov
loopne
mov
pop
(bad)
ror
pop
mov
pop
adc
loope
loop
popa
cmps
fldl2t
pop
fstp
aad
mov
push
mov
cmps
xchg
(bad)
fsubr
test
inc
js
push
xor
mov
mov
popa
cmps
pop
adc
jmp
(bad)
fild
test
sbb
icebp
mov
mov
pop
imul
inc
cmp
call
fsub
inc
mov
movs
mov
lea
ficom
sbb
nop
pop
cmps
cmp
int3
mov
pusha
inc
stos
pop
(bad)
jge
or
add
or
push
stos
or
mov
fnstsw
test
xor
adc
sbb
imul
pop
lods
cmps
push
imul
or
dec
fcmovu
mov
or
mov
or
push
stos
jle
int3
es
test
fsub
jmp
jg
jmp
adc
jno
popf
xor
in
test
jbe
lds
mov
xchg
test
inc
lods
popa
mov
loope
push
(bad)
mov
xchg
popa
jmp
mov
jnp
mov
and
xchg
mov
add
popf
push
mov
mov
add
cmp
(bad)
mov
movs
push
mov
jmp
rol
xchg
cdq
inc
js
cli
je
inc
jge
ret
gs
dec
or
jg
xor
adc
mov
mov
mov
lods
cmp
mov
ret
stc
mov
pop
int3
dec
pop
jnp
xchg
jmp
sar
repz
ret
xchg
mov
call
rol
jl
mov
adc
aas
dec
jp
xchg
sbb
pop
das
sub
cld
adc
jns
sub
mov
xchg
inc
mov
or
xor
je
popa
movs
inc
jg
xchg
(bad)
sub
and
stos
fadd
aas
call
pop
imul
push
jnp
fisubr
loop
mov
push
pop
scas
lods
retf
add
call
add
cli
cli
mov
pop
ja
(bad)
je
dec
dec
sbb
xor
enter
push
sub
pop
xchg
inc
aaa
push
aas
push
and
xor
and
fsub
sub
rcr
je
dec
mov
bnd
pop
adc
add
jnp
ss
adc
adc
ficomp
scas
pop
ins
sub
test
mov
movs
xchg
mov
movs
popa
pop
jne
jne
and
pop
jmp
fdivr
loope
in
add
sub
mov
loope
mov
out
mov
and
and
push
aaa
test
dec
xchg
hlt
sbb
pop
mov
jno
mov
adc
int
pop
lods
movs
popa
fimul
int
lock
xchg
out
je
out
push
jo
out
fcmovu
push
int3
loopne
mov
pop
rcl
(bad)
mov
xchg
mov
dec
inc
jns
dec
push
cmp
cmps
mov
imul
(bad)
rol
enter
retf
(bad)
es
xor
dec
out
inc
or
gs
cld
or
dec
js
je
push
ins
test
test
aas
bound
and
pop
rol
xor
mov
adc
xchg
add
lahf
xchg
inc
cs
cmp
adc
lock
jl
mov
or
es
stos
retf
cmp
xchg
add
dec
mov
mov
push
pop
mov
push
cmps
cmps
stc
cmps
jne
outs
sub
sub
je
pop
pop
mov
sbb
out
gs
(bad)
jle
cmps
movs
push
call
xchg
xchg
mov
rcr
stc
pop
(bad)
int3
repnz
push
mov
fld
in
add
in
out
xchg
ror
mov
jp
fst
not
cmps
mov
jle
cmp
sbb
pusha
or
pop
adc
or
add
cmp
jmp
jle
xchg
xchg
sub
xchg
xchg
mov
cmps
repz
imul
pop
int3
cmp
shr
outs
dec
adc
fucom
bswap
lea
jg
les
rcl
or
ret
pop
icebp
xchg
sub
inc
daa
or
push
nop
shl
in
xchg
jecxz
fld
sub
sub
lds
adc
push
mov
fstp
or
sbb
js
shl
lock
or
xor
push
dec
jle
stos
cmp
aaa
fs
mov
adc
dec
mov
mov
nop
daa
iret
scas
adc
mov
ins
mov
inc
mov
(bad)
gs
mov
mov
mov
int3
cmps
mov
mov
sbb
ret
repz
outs
jb
jge
add
loop
push
push
ret
push
and
mov
in
(bad)
retf
xchg
sbb
std
imul
pop
pop
pop
clc
out
inc
cmps
fisttp
cmp
add
and
hlt
or
arpl
cwde
or
add
pop
mov
loopne
sbb
outs
pop
xor
sub
imul
fdivr
iret
pop
shr
jle
shl
xor
inc
inc
not
or
pop
fwait
fwait
mov
mov
cmp
mov
(bad)
mov
inc
fidivr
pop
ret
sub
mov
fwait
scas
inc
(bad)
adc
das
fldcw
xchg
pop
xchg
mov
sti
lds
ins
pop
push
test
mov
pop
ror
push
iret
cmps
out
clc
movs
(bad)
daa
ret
jns
mov
push
das
xor
jnp
call
sub
add
lea
div
test
dec
scas
mov
iret
int
aam
jno
aad
out
(bad)
pop
test
mov
retf
in
push
xchg
repnz
sar
std
aad
(bad)
pop
mov
loop
shr
sti
jmp
mov
xchg
outs
out
push
test
xchg
fisubr
cmps
test
cmp
pop
ret
movs
ret
mov
mov
push
cmps
mov
test
(bad)
shl
cmc
inc
mov
jns
pop
(bad)
sbb
push
xchg
add
jb
or
scas
push
cmc
pop
call
xchg
inc
jbe
mov
cmp
fwait
xor
sub
push
fwait
mov
xor
fwait
sti
push
push
js
or
in
popf
push
loop
push
mov
fsubp
sbb
cmp
aaa
cmp
jo
(bad)
ffreep
lods
gs
and
jp
dec
fwait
mov
movs
adc
adc
in
pop
dec
mov
scas
repz
pop
dec
addr16
xchg
dec
mov
mov
mov
mov
(bad)
push
adc
ins
addr16
sub
dec
cdq
ret
mov
test
mov
pop
jns
inc
mov
fdiv
dec
sub
ins
mov
mov
out
jo
mov
inc
dec
jo
mov
movs
xor
pusha
data16
ins
jmp
test
jmp
nop
nop
mov
ror
dec
cmp
add
sti
iret
ins
xchg
xchg
int
std
push
inc
mov
test
xchg
dec
xchg
and
pusha
das
dec
dec
popa
ret
mov
inc
mov
in
sub
lahf
mov
mov
pop
pop
js
jp
sub
aaa
outs
jb
adc
popa
mov
test
xchg
sti
or
pop
lds
iret
mov
nop
mov
sbb
xchg
js
mov
ss
add
mov
imul
inc
lods
jbe
loop
and
sub
pop
mov
jge
cmp
mov
mov
mov
mov
daa
xchg
pop
inc
xchg
(bad)
mov
imul
dec
imul
jmp
sbb
mov
xor
jle
mov
test
xchg
cmp
pop
ret
jge
mov
mov
dec
jmp
pop
mov
mov
imul
mov
dec
mov
push
xor
jno
sub
retf
mov
imul
movs
inc
out
push
sbb
lds
xchg
fs
mov
ret
mov
mov
pop
dec
cli
cmp
test
ret
fadd
addr16
mov
movs
adc
int
and
mov
cld
movs
stos
pop
mov
and
imul
and
ret
mov
jmp
xchg
mov
popa
mov
loopne
dec
in
dec
push
push
fmul
sbb
fwait
mov
imul
mov
cmps
fs
cmp
lods
rcr
loop
jg
iret
dec
icebp
mov
daa
out
cdq
(bad)
pop
pop
inc
bnd
fadd
adc
xor
cmps
mov
jecxz
movs
aam
in
fidivr
and
repz
jno
push
scas
test
and
mov
adc
scas
xchg
lods
push
mov
and
push
stos
ja
cmp
arpl
sbb
inc
(bad)
es
shl
stos
jne
fsubrp
mov
jae
xor
or
jnp
xchg
or
or
sbb
push
inc
jl
adc
lods
mov
movs
fimul
nop
punpckhbw
lock
in
call
aad
mov
adc
imul
jg
or
xchg
lods
mov
lods
daa
mov
mov
shl
in
mov
lds
mov
cmps
cmps
ds
daa
js
(bad)
lea
mov
in
mov
mov
aad
cmps
pop
and
add
mov
dec
jmp
jl
mov
icebp
mov
ins
cli
mov
dec
retf
test
adc
pop
mov
lahf
test
xchg
aaa
sub
stos
int
call
inc
mov
add
xchg
add
stos
xchg
lods
out
shl
hlt
scas
mov
inc
xor
shr
cmp
cmp
push
or
mov
vmread
pop
jb
lods
es
mov
sbb
lea
jp
out
mov
cvttps2pi
dec
xor
loop
mov
daa
(bad)
xchg
cld
gs
das
mov
fwait
test
scas
retf
sbb
mov
stc
retf
(bad)
arpl
mov
mov
jbe
xchg
dec
cmp
and
mov
jle
test
sub
icebp
sub
(bad)
hlt
fist
cmp
mov
inc
in
dec
std
cmc
out
mov
pop
xchg
jg
enter
dec
loop
mov
repnz
push
scas
outs
scas
adc
stos
outs
out
call
xchg
mov
aas
jp
push
mov
pushf
out
jns
retf
mov
sbb
div
inc
jge
div
jmp
or
dec
pop
mov
ret
jmp
inc
ins
mov
pop
sbb
mov
out
sahf
push
push
sti
xchg
cwde
stc
xchg
mov
mov
fwait
sub
push
mov
stos
ret
stos
ret
mov
int3
adc
xchg
push
cmc
aaa
js
(bad)
jbe
cmc
mov
cmp
xchg
movs
(bad)
push
ficomp
mov
bound
mov
bound
mov
test
and
sub
(bad)
ja
outs
mov
ror
sti
or
cmp
jmp
imul
xor
cmp
int3
(bad)
mov
and
das
imul
sti
mov
or
sub
pop
or
fldcw
arpl
xlat
fimul
add
adc
shl
pop
jge
test
es
cld
and
push
cmp
lahf
fisubr
add
scas
xchg
fiadd
fimul
adc
leave
sti
cmp
(bad)
mov
retf
jecxz
cmp
jo
inc
mov
jle
jo
xor
fdivr
and
mov
sub
dec
push
xchg
es
mov
pusha
fs
and
sar
fcmovnbe
mov
jmp
ins
test
pop
xchg
adc
mov
in
icebp
loop
inc
pop
sbb
jb
cmp
adc
push
mov
mov
daa
push
adc
jmp
fst
xchg
repz
imul
mov
shl
retf
mov
mov
xchg
jne
adc
mov
inc
xor
test
and
dec
pop
adc
arpl
daa
cmps
call
xlat
mov
(bad)
jle
dec
cmps
(bad)
es
scas
add
lods
mov
dec
outs
aad
add
add
mov
and
push
sub
das
pop
test
cmp
jno
pop
ins
dec
fbld
imul
aas
loope
xor
sub
(bad)
(bad)
mov
stos
sar
mov
mov
hlt
ds
push
mov
enter
lock
mov
cmp
imul
mov
outs
cmp
mov
xchg
sbb
je
mov
ret
out
adc
push
(bad)
je
dec
idiv
xor
(bad)
outs
stos
inc
popa
pop
jae
xchg
shl
mov
dec
pop
sub
jne
aad
push
mov
mov
out
inc
lahf
mov
pop
mov
jmp
pop
sub
mov
cmp
loopne
movs
dec
jge
mov
adc
mov
push
outs
adc
adc
pop
lahf
cmp
xchg
shr
in
mov
and
inc
jge
xor
and
push
test
int
mov
dec
dec
dec
ds
(bad)
mov
mov
mov
jle
add
or
xchg
out
or
or
push
mov
jmp
icebp
lods
out
mov
and
adc
xlat
pop
cmps
(bad)
dec
mov
push
mov
push
cmp
fs
int3
pop
inc
nop
test
push
inc
gs
mov
inc
add
aad
lea
add
mov
bound
shl
cld
add
sar
(bad)
mov
mov
bound
test
xchg
and
lods
shl
rcr
pop
scas
sub
cmp
dec
or
cdq
sahf
add
mov
pop
pop
scas
fbld
std
jl
and
sub
cs
pop
push
pushf
pop
inc
imul
mov
cmc
cmp
(bad)
movs
and
ret
push
xor
lahf
loope
lods
mov
movs
adc
xchg
out
scas
aas
test
movs
add
movs
xchg
lock
les
cmp
sbb
ret
mov
mov
enter
gs
mov
and
pop
mov
scas
mov
bound
jle
or
out
xor
pop
mov
sbb
rcr
push
jp
lock
lds
dec
ins
nop
sub
imul
(bad)
out
es
cmp
mov
dec
add
ins
mov
out
popf
stc
inc
stos
test
loope
mov
cmp
jg
inc
movs
cld
shr
popa
xchg
aaa
repnz
std
dec
scas
out
es
in
aad
scas
test
xor
pusha
das
cmp
je
loop
(bad)
imul
aam
fcom
xor
pop
stos
adc
sub
or
jge
stc
les
dec
repnz
cmp
pop
leave
inc
ret
test
cmp
gs
mov
xor
mov
push
test
lea
scas
adc
cmp
pop
cmp
pop
test
(bad)
retf
jae
fadd
and
fisub
or
mov
pop
montmul
cmps
or
(bad)
repnz
mov
jmp
test
imul
push
cli
push
adc
and
int
pop
lods
stos
lods
dec
loope
jle
cmp
(bad)
mov
js
and
int3
fisub
das
cmps
iret
pop
loopne
mov
and
sti
inc
lods
push
data16
es
hlt
outs
sahf
push
aaa
pop
adc
cmc
mov
pusha
call
out
int3
fnstenv
mov
arpl
sahf
cmps
pusha
and
ret
cmp
popa
in
xor
(bad)
repnz
sti
test
xchg
icebp
inc
arpl
mov
aad
jecxz
and
push
sub
mov
pop
call
xchg
cmps
adc
cmps
stos
dec
add
mov
or
inc
jnp
or
scas
cld
xchg
lods
daa
xor
sbb
popf
ins
es
xchg
mov
xor
xor
mov
stos
mov
fsub
jo
mov
std
dec
fwait
jo
mov
sbb
pushf
mov
sub
movs
sahf
sbb
xor
ror
imul
shl
xor
mov
movs
adc
mov
mov
sbb
ficomp
sbb
in
icebp
ds
mov
scas
imul
daa
inc
loop
jno
inc
shl
add
popa
scas
shl
xchg
iret
outs
cmp
pusha
das
jns
xlat
aaa
outs
ret
loop
out
data16
fs
mov
jle
mov
inc
and
jmp
aam
test
(bad)
ret
xchg
jecxz
pop
scas
daa
ja
mov
fs
or
jno
mov
push
and
popf
lahf
jl
jp
das
cli
sub
xor
jp
mov
mov
jge
xchg
into
ja
mul
jnp
jae
cmc
mov
dec
test
clc
jmp
gs
mov
inc
inc
xor
popf
inc
push
pop
jl
adc
stos
adc
jmp
loopne
das
mov
mov
loope
pop
test
push
popa
and
jge
retf
xchg
jle
shl
pop
xchg
movs
pop
dec
pop
(bad)
mov
mov
mov
sti
mov
cmp
jmp
pushf
sar
js
and
add
dec
ficomp
popa
sar
sbb
mov
pop
sar
pop
jno
jl
push
(bad)
out
out
jmp
dec
out
mov
sub
and
jno
and
xchg
fst
(bad)
lods
xchg
inc
mov
jo
adc
and
(bad)
push
fild
jns
push
icebp
outs
push
mov
mov
idiv
pop
je
out
mov
out
clc
cmp
mov
jecxz
xchg
es
or
into
popf
pop
jnp
and
shr
and
xlat
stc
mov
ror
imul
mov
ss
fadd
or
scas
adc
mov
jge
ins
stos
xchg
out
xchg
mov
sub
(bad)
cs
pop
scas
pop
cdq
icebp
gs
ret
fwait
push
or
mov
fst
stos
mov
or
retf
push
mov
cmp
addr16
pop
popf
or
iret
xchg
jo
ror
cmp
sub
mov
push
jo
or
push
mov
cmps
jae
retf
icebp
fbld
pop
test
dec
xor
inc
ret
push
aam
scas
add
mov
sahf
jno
mov
pop
gs
push
and
enter
pop
mov
adc
je
dec
mov
repz
cmp
int3
pop
ret
mov
out
pop
stos
call
mov
add
push
int3
cs
jb
fist
pop
cmp
mov
fsubr
sar
mov
jb
jge
cmps
cmp
imul
mov
test
sub
je
icebp
movs
out
cmps
(bad)
sub
aam
push
test
pop
pop
das
stos
movs
gs
call
jg
scas
ret
loopne
jae
scas
stc
repnz
rol
imul
adc
or
mov
adc
and
mov
aad
leave
pop
add
and
mov
push
cs
mov
sbb
popf
pop
mov
mov
scas
(bad)
iret
or
xchg
xchg
lahf
test
mov
jno
pop
cli
fidiv
scas
pop
inc
mov
dec
es
jb
jnp
gs
xor
sub
adc
loope
into
inc
test
push
out
jbe
out
mov
or
jg
pop
ja
push
test
inc
jo
cmp
ja
mov
bound
push
(bad)
mov
jo
mov
outs
scas
adc
fs
outs
jo
ins
cmc
sub
mov
mov
scas
inc
and
lahf
scas
sbb
mov
push
fwait
adc
das
cmc
cmp
pop
mov
mov
sbb
and
xchg
jmp
sub
call
sub
jb
and
sub
stos
inc
pop
(bad)
shr
mov
mov
mov
adc
sbb
retf
or
rol
data16
and
icebp
push
sar
sub
or
pop
mov
mov
sti
dec
or
xchg
pop
pusha
ror
cmps
cmp
rol
out
adc
je
add
add
pop
push
or
push
imul
or
pusha
or
xchg
or
mov
lods
test
(bad)
cmc
add
cmp
dec
ins
xchg
or
mov
mov
loope
xchg
repnz
in
stc
mov
jp
test
cmp
xchg
fucomi
xchg
pop
mov
repz
fidiv
push
fcom
cmp
ins
call
imul
out
and
mov
je
lea
stos
inc
scas
dec
iret
sub
adc
pop
xor
(bad)
jno
sub
movs
adc
int3
in
mov
lock
test
xor
ins
cmp
pushf
mov
fs
mov
lds
or
test
lods
jnp
or
icebp
pusha
movs
scas
dec
mov
iret
mov
stos
and
dec
mov
mov
inc
cmps
ret
push
and
test
std
add
into
mov
loop
cmp
sar
std
cmps
std
ins
cs
inc
pop
imul
pop
dec
xchg
and
dec
sahf
test
cmp
adc
pop
add
mov
mov
imul
ret
(bad)
push
or
(bad)
pop
dec
or
retf
mov
dec
mov
push
cmps
test
mov
mov
test
dec
dec
sub
jne
xchg
pop
out
ds
mov
test
xchg
test
sbb
xchg
pusha
xchg
inc
mov
shl
mov
jns
xchg
and
mov
push
mov
test
ja
mov
test
mov
mov
lds
mov
mov
es
mov
stos
xchg
aas
mov
mov
cmps
xchg
xchg
cmp
sbb
cwde
xchg
(bad)
ds
ja
mov
sahf
and
xchg
pop
js
adc
cmps
mov
ffreep
hlt
aam
jbe
or
pop
adc
std
sub
in
imul
mov
mov
xchg
outs
adc
cmp
sub
jle
mov
inc
push
mov
es
sub
pop
addr16
pop
popa
xchg
in
lahf
test
ins
mov
jb
mov
mov
jmp
mov
ffree
xor
popf
jge
or
fidivr
ffreep
popa
mov
test
ins
cmp
sbb
or
es
jecxz
ficom
(bad)
jnp
mov
(bad)
in
fs
(bad)
std
pop
test
mov
in
cmps
mov
mov
cmps
jno
push
cmps
mov
push
and
test
daa
aam
cmp
jo
popf
pop
mov
shr
test
cmp
pop
fs
cmps
xor
imul
cmc
or
and
sub
mov
mov
pop
mov
mov
std
jno
mov
pop
imul
outs
cmp
cmp
iret
retf
push
retf
sub
(bad)
nop
mov
cmp
pop
mov
sti
xor
inc
jecxz
rcr
adc
pop
jg
dec
ret
adc
push
in
in
sub
out
pop
test
and
test
stos
int
into
sahf
int3
mov
js
fnstsw
pop
into
push
into
(bad)
es
scas
lods
out
push
movs
imul
ret
in
jbe
daa
pop
push
popf
xchg
xchg
jp
push
dec
ret
div
out
push
mov
out
es
pop
inc
cmp
xchg
dec
lods
jmp
push
jb
mov
mov
repnz
cmp
mov
imul
sbb
mov
mov
je
lods
sub
js
ret
out
and
shl
test
jge
or
xor
jmp
sbb
sub
stos
ja
out
test
sub
mov
das
ret
xchg
jl
shl
cwde
lods
push
push
push
jo
push
jg
xchg
test
lea
fcom
repz
pop
repz
mov
ins
xchg
jmp
outs
jo
inc
scas
xlat
sub
pop
xchg
(bad)
addr16
movs
es
pop
cmp
pop
mov
inc
es
jbe
aam
sbb
mov
(bad)
bound
(bad)
jg
loop
(bad)
push
add
xchg
sub
mov
mov
lock
mov
iret
stos
dec
cs
lods
cmp
sbb
icebp
sub
(bad)
jbe
cdq
xlat
adc
test
div
fisubr
pop
sub
dec
shr
outs
das
xor
sbb
(bad)
popf
sub
mov
movs
sbb
lods
test
mov
jne
pop
scas
stos
xchg
ret
dec
cmps
in
aam
push
les
add
movs
lea
ds
push
push
sbb
dec
mov
push
mov
fs
(bad)
lods
out
js
enter
and
(bad)
adc
imul
jo
popa
cmp
fs
cmps
push
pop
ja
(bad)
jle
enter
mov
adc
push
sbb
mov
lods
lea
mov
adc
pusha
cli
das
stos
sbb
fcomp
jns
in
movs
cmp
test
loop
outs
(bad)
shr
jbe
ins
fadd
movs
pushf
jge
and
scas
stos
adc
jmp
in
repz
or
sbb
dec
mov
cmps
sbb
and
add
sbb
es
out
ror
stos
in
ror
sahf
mov
and
add
dec
sub
mov
mov
adc
es
enter
std
mov
sub
jecxz
movs
pop
inc
jle
ss
xor
dec
sub
jmp
(bad)
(bad)
das
enter
popf
pop
mov
cmp
arpl
jp
scas
mov
cmp
mov
push
dec
jge
mov
cmps
inc
nop
lds
int3
pop
into
adc
jl
pop
(bad)
arpl
cmp
pushf
(bad)
xchg
popa
jp
test
jg
cmp
sbb
jno
fisub
add
outs
xor
jg
jo
jle
data16
xchg
lods
and
mov
fdiv
arpl
daa
jo
cmp
xor
mov
adc
jle
xchg
es
mov
mov
push
repnz
xchg
test
add
adc
stos
xlat
mul
mov
xchg
sbb
mov
mov
xchg
not
fsub
mov
add
loopne
lods
jecxz
sar
push
ins
test
mov
mov
dec
xchg
mov
fwait
dec
jo
cdq
out
cmp
in
xchg
mov
scas
or
jge
jmp
push
aas
mov
pop
inc
clc
mov
push
pop
aaa
ret
pop
stos
inc
or
out
or
std
je
out
js
fs
ja
in
pop
mov
adc
test
and
ja
mov
test
rcl
jmp
push
test
sub
imul
lods
ja
or
pop
and
test
gs
mov
jns
add
lea
or
push
arpl
push
jae
fdivr
in
leave
mov
lahf
ds
int
cmp
cwde
jmp
mov
daa
stos
dec
rcl
pop
pop
cmp
jb
pop
mov
mov
push
std
stos
lds
dec
cmps
add
jmp
in
clc
fdivr
movs
mov
imul
adc
cwde
stos
xchg
mov
movs
rcr
movs
jo
sbb
bound
scas
int
xchg
mov
adc
inc
pop
dec
stos
iret
mov
dec
mov
cli
out
jo
xchg
mov
push
clc
cmps
cmp
(bad)
sahf
lock
inc
rcr
mov
psubsw
or
jno
mov
push
ror
lock
pop
test
xchg
das
fwait
mov
aad
pop
add
xchg
mov
imul
inc
push
int
push
push
stc
and
cld
pop
jge
xchg
mov
dec
pop
sub
pusha
rol
cld
mov
add
ror
dec
imul
push
add
push
or
and
mov
mov
add
(bad)
sub
cmp
xchg
jb
ins
jge
and
xchg
or
sub
or
mov
pop
adc
sbb
push
test
mov
jmp
retf
imul
stos
or
mov
jge
mov
ja
mov
das
sub
push
aas
lock
mov
xchg
ficom
imul
push
outs
and
xor
mov
cmc
ins
mov
(bad)
ins
jge
mov
mov
pcmpeqb
or
cmc
mov
aad
cmp
(bad)
pop
in
mov
dec
cdq
sub
and
test
mov
sub
scas
cs
add
(bad)
pop
and
mov
aas
mov
mov
sbb
push
or
leave
push
cmp
add
ins
adc
pop
mov
(bad)
mov
and
jno
mov
in
iret
push
jb
ret
imul
inc
sbb
jb
inc
push
inc
or
xchg
jle
mov
adc
mov
ret
adc
(bad)
xchg
mov
jnp
rcl
mov
aas
fnstsw
outs
(bad)
sbb
fwait
rol
mov
lods
sbb
jbe
(bad)
fdivp
jmp
aas
xchg
cld
dec
loope
cdq
cmp
sub
mov
or
mov
mov
inc
fisub
mov
sub
shr
outs
dec
xor
inc
sbb
movs
mov
pop
cmps
dec
addr16
dec
pop
sbb
stc
enter
lods
movntq
imul
jg
retf
daa
shl
je
std
aam
xlat
test
mov
cmps
stos
call
rcr
cmp
fiadd
rcr
or
fwait
(bad)
mov
sar
dec
nop
fs
dec
push
pop
lahf
ins
ins
sbb
fstp
jmp
shr
adc
ins
lods
mov
daa
imul
addr16
xor
jecxz
mov
sbb
fsubr
imul
add
(bad)
and
mov
(bad)
(bad)
mov
scas
mov
retf
jmp
and
retf
ret
sub
sahf
sbb
retf
and
push
cld
sub
lea
adc
test
test
push
js
lahf
or
or
pop
iret
sub
movs
arpl
loopne
aad
sub
rcl
mov
cdq
adc
push
dec
je
pop
jb
(bad)
push
fimul
mov
fdivr
movs
xor
sub
xchg
je
mov
ins
jg
mov
sub
cmp
jno
add
movs
cmp
stos
fbstp
hlt
imul
mov
or
fs
xor
push
cdq
mov
xchg
(bad)
push
mov
in
stc
mov
push
outs
mov
lahf
aam
outs
jg
mov
and
mov
xor
pop
ins
mov
jbe
pop
scas
xor
jg
mov
push
push
xchg
sub
xor
pushf
cmp
aam
(bad)
ret
push
push
pop
test
ret
cdq
addr16
stos
sub
xchg
push
inc
rcl
cmps
cmp
jnp
addr16
sbb
outs
lds
adc
and
js
stc
or
mov
and
add
pop
add
rol
pop
imul
cmp
(bad)
stos
jno
fidiv
(bad)
push
inc
data16
aaa
inc
cmps
arpl
enter
mov
dec
sub
addr16
xor
mov
fimul
ds
stos
les
and
push
dec
in
pop
hlt
arpl
cdq
add
jb
xchg
cmp
or
stc
jle
jecxz
lods
mov
sub
xor
and
mov
mov
scas
or
xchg
xchg
out
xchg
popa
mov
addr16
cld
pop
jno
loop
cmp
lahf
push
(bad)
es
and
push
cmps
mov
mov
jmp
cmp
mov
lods
in
pop
int3
xchg
inc
out
shl
and
mov
cli
mov
push
mov
push
mov
out
sub
cmp
or
cmp
pop
or
bnd
ss
idiv
mov
cmp
dec
and
shl
(bad)
in
repnz
sahf
or
pop
das
or
je
push
pop
movs
add
ds
std
dec
enter
xor
push
mov
sbb
or
out
clc
fadd
cmc
push
sbb
xchg
sbb
scas
test
vmovaps
xchg
mov
or
popf
jno
cmps
test
push
aad
movs
and
fldenv
test
inc
or
jns
fiadd
jae
push
jne
fwait
shr
(bad)
xchg
bound
pop
mov
gs
pop
out
test
(bad)
xchg
fist
jno
dec
pop
push
sub
jb
xchg
neg
cmp
stos
test
int
imul
movs
fs
inc
xchg
rcr
or
mov
inc
mov
push
adc
movs
aas
ss
mov
jge
mov
mov
sti
shl
dec
jmp
xchg
int3
nop
push
jns
xor
or
dec
pop
adc
push
mov
cmps
mov
sbb
ret
mov
push
mov
xchg
cmc
frstor
pop
retf
jmp
rol
sahf
and
iret
js
xchg
cs
ror
bound
cmps
jmp
test
test
jl
ret
mov
mov
rol
pop
jge
cmp
jge
and
mov
xor
sbb
movs
cmps
and
mov
(bad)
jle
pop
jae
dec
lahf
imul
and
loopne
sub
adc
movs
fnsave
call
dec
jl
scas
and
jle
test
mov
mov
xchg
and
in
pop
ja
data16
pop
movs
loopne
push
add
xlat
cdq
cmp
mov
hlt
test
ins
inc
jo
pop
adc
mov
pop
ret
repnz
sbb
pop
imul
out
fldenv
clc
add
push
xlat
cmp
bt
rcr
(bad)
jecxz
gs
mov
push
pop
gs
mov
mov
ins
or
movs
imul
daa
and
sar
mov
loop
int
and
int
arpl
mov
fld
mov
adc
test
and
cdq
stos
retf
mov
das
mov
mov
jmp
out
pop
mov
(bad)
jecxz
mov
mov
jmp
push
sub
test
scas
in
lock
fcom
dec
(bad)
mov
inc
clc
or
fisttp
push
aas
sbb
mov
outs
dec
mov
je
sti
mov
in
xchg
fsub
iret
or
push
cs
(bad)
neg
cmp
add
rcl
enter
pop
and
js
dec
add
mov
cmc
clc
xor
lahf
popf
jns
ret
sbb
push
cmp
mov
jecxz
jno
rcl
pop
jno
loope
scas
push
in
inc
xor
push
retf
mov
(bad)
daa
fisttp
icebp
push
xchg
mov
(bad)
mov
xchg
dec
movs
cmp
mov
jb
test
test
loope
fwait
lock
sahf
fld
and
dec
fdiv
mov
popa
push
push
mov
pushf
in
mov
or
nop
(bad)
pop
ins
sub
jl
outs
je
in
mov
and
adc
arpl
push
cmp
xchg
movs
inc
jecxz
mov
cmp
fstp
mov
dec
cmps
popa
mov
fdiv
push
unpcklps
adc
hlt
mov
mov
cdq
cmps
rol
jbe
adc
sub
pop
ret
aas
xchg
(bad)
aas
sub
jbe
ss
test
iret
xchg
add
xchg
mov
inc
or
jno
(bad)
add
stos
push
out
mov
out
jg
shr
fldcw
add
(bad)
and
in
jmp
and
xchg
aam
gs
jle
mov
push
mov
and
or
mov
mov
in
outs
fwait
pusha
fdivrp
in
les
mov
test
mov
push
pop
mov
fdivr
push
ror
add
stos
(bad)
fxsave
mov
mov
(bad)
jno
cmp
shl
stc
xchg
sub
nop
xchg
jmp
stc
ss
je
out
in
inc
div
(bad)
push
jne
das
xchg
in
xor
add
ror
sub
add
jo
mov
repnz
aas
cmp
dec
ror
rcr
(bad)
mov
(bad)
mov
adc
mov
ret
fwait
mov
jge
je
cmps
sti
outs
mov
xor
jo
push
int
xchg
lea
dec
dec
mov
int3
mov
push
sub
mov
sbb
mov
push
cmp
mov
cmp
lods
std
aaa
and
repz
jae
je
add
test
mov
inc
mov
dec
leave
xor
pop
add
inc
out
shl
or
pop
or
pusha
movs
push
mov
add
jo
sub
or
iret
or
pop
cdq
lods
xchg
in
data16
dec
or
xrelease
icebp
push
std
call
lahf
or
ds
enter
outs
add
fisub
(bad)
adc
pop
int
das
mov
sub
sub
lods
jo
retf
xor
fisubr
mov
pop
cld
or
sar
sbb
dec
mov
jp
sbb
popf
outs
es
mov
mov
xor
mov
sahf
hlt
scas
mov
ficomp
test
inc
imul
les
sbb
adc
rol
mov
loope
mov
mov
sar
xchg
or
push
in
mov
mov
outs
xlat
ficomp
addr16
shl
jp
pushf
fadd
pop
mov
jmp
and
and
mov
ret
movs
mov
sbb
push
loope
(bad)
jb
sbb
rcl
add
shr
sbb
xlat
xchg
jecxz
pop
(bad)
scas
jne
pushf
jge
mov
movs
stos
pop
adc
into
clc
push
push
ret
mov
fcmovb
xor
popf
rcl
push
mov
jle
push
inc
loop
fcmovbe
add
and
xchg
lock
pop
cmc
dec
loopne
inc
in
cmp
cwde
xor
jecxz
xor
xchg
or
add
frstor
push
(bad)
mov
sbb
mov
(bad)
leave
push
dec
jb
pop
xchg
pop
add
xor
out
enter
test
xchg
xchg
dec
lahf
and
leave
movs
mov
mov
sub
fs
mov
aaa
inc
mov
repz
push
pop
mov
sub
inc
fidivr
mov
(bad)
sar
sbb
mov
adc
mov
ret
pop
fwait
xor
(bad)
js
in
imul
ins
xchg
and
rol
test
loop
adc
mov
pop
add
dec
sub
out
mov
pop
xor
cmp
cmp
pop
mov
(bad)
mov
ins
adc
fs
stos
mov
test
lds
hlt
aaa
add
call
push
mov
xchg
sub
sti
mov
cmps
movs
sub
mov
ror
xor
js
mov
js
dec
ds
scas
inc
push
ret
and
xchg
ds
dec
stos
mov
xchg
mov
mov
xchg
adc
enter
cmps
jb
movs
push
mov
nop
daa
test
jg
outs
js
pop
mov
mov
cmp
das
stos
ret
or
mov
pop
ss
pop
jne
es
(bad)
data16
leave
or
fdivr
popa
je
hlt
sbb
cdq
jecxz
jp
push
pop
xchg
stc
add
sbb
dec
ja
mov
in
lock
xor
mov
add
inc
xchg
pop
xchg
inc
pop
std
addr16
xor
mov
fcomp
mov
aaa
les
das
sub
or
arpl
stos
jg
test
jl
and
jmp
fucom
add
cmp
sbb
inc
test
test
mov
mov
(bad)
add
xchg
sub
inc
mov
lock
mov
sbb
jecxz
jmp
rcl
pop
out
xchg
pop
outs
cs
stos
cld
imul
out
mov
add
test
daa
xchg
push
mov
clc
mov
mov
repnz
dec
lods
test
mov
not
lods
inc
ins
jge
xor
or
cmp
stos
and
add
loopne
xchg
imul
imul
test
push
stos
jg
fisttp
push
(bad)
mov
or
pusha
daa
push
push
test
mov
inc
shl
iret
out
sbb
cmp
sbb
fs
shl
xor
sbb
das
fsub
sub
xchg
imul
in
mov
aam
lds
popf
retf
cmp
iret
not
imul
jmp
inc
and
clc
dec
outs
call
inc
or
sub
int3
xchg
movs
inc
add
jmp
mov
pop
movs
gs
test
adc
repnz
es
mov
xor
ffree
mov
jmp
cmps
movs
or
push
data16
or
or
add
in
enter
xchg
cmp
jnp
pop
xchg
imul
sbb
imul
xchg
in
sub
xchg
cmp
imul
out
mov
in
push
pusha
adc
sub
sbb
test
mov
icebp
mov
aas
scas
mov
shr
mov
inc
xor
cli
mov
out
neg
addr16
lds
mov
test
sub
lds
push
sti
add
xchg
jge
or
test
pop
adc
push
push
xchg
inc
push
and
outs
popf
lods
mov
stos
mov
sub
mov
rcr
ins
das
mov
sbb
add
push
nop
push
es
jp
fwait
adc
mov
popf
mov
cmps
inc
or
call
scas
dec
push
add
cmps
popa
mov
mov
cmps
mov
shl
mov
js
(bad)
clc
dec
cmp
rcr
sub
sub
aas
hlt
out
jg
retf
js
jns
mov
xchg
inc
cmp
jae
stos
and
lock
clc
aam
loope
sbb
dec
cmps
out
pop
je
es
xchg
pop
ret
jle
inc
jnp
push
call
pop
cmp
(bad)
sbb
push
jo
dec
test
mov
rcr
addr16
int3
or
mov
dec
cmp
cmps
cmp
es
mov
xchg
(bad)
addr16
das
jo
and
mov
mul
movs
iret
popf
test
outs
cdq
cmp
jno
popf
push
fidivr
sar
ins
pop
jg
aaa
sbb
push
or
mul
sub
mov
xchg
pop
mov
dec
xchg
and
xchg
iret
lahf
xor
lods
mov
es
in
mov
hlt
cmp
jl
mov
add
enter
and
lahf
mov
dec
pop
cwde
aaa
jnp
jmp
(bad)
retf
(bad)
jmp
xor
push
push
stos
jl
iret
sub
jle
jl
or
pop
xchg
push
fs
daa
adc
pop
mov
jnp
inc
ds
mov
rcr
loopne
cmp
sahf
mov
rcl
cli
mov
(bad)
shr
out
popa
pop
sub
jbe
data16
icebp
sub
xchg
adc
dec
push
gs
cmp
fcomi
xchg
scas
jl
fs
fnstenv
push
mov
sbb
add
js
sbb
sub
adc
push
(bad)
adc
xor
scas
not
cmp
lock
scas
addr16
ins
dec
out
jge
arpl
cdq
push
div
mov
mov
mov
mov
cmp
repz
push
adc
jno
mov
cmps
xor
data16
je
clc
sub
jo
test
pop
(bad)
(bad)
push
sbb
inc
hlt
shl
repz
stos
push
dec
dec
int
das
pop
xchg
jne
retf
adc
pusha
mov
jmp
add
xor
or
cmp
stos
jmp
jge
and
jmp
es
test
push
(bad)
loope
sahf
xor
mov
mov
jae
int3
push
imul
sub
adc
cmp
mov
adc
sub
push
push
sbb
pop
hlt
mov
mov
xor
retf
stc
les
cmp
cmps
cmc
ror
pop
lods
fsubr
ins
in
xlat
aas
mov
ins
adc
cdq
and
inc
cmp
fnstsw
push
and
dec
mov
sbb
pop
(bad)
and
push
std
push
das
scas
xchg
push
test
cmps
(bad)
js
cwde
imul
dec
ret
xchg
mov
push
cmps
xor
mov
add
es
dec
push
mov
sbb
(bad)
pop
or
ins
cs
out
pop
cmc
aad
adc
fcmovu
mov
cmps
inc
and
ret
jge
push
jno
xor
shl
call
cli
mov
cdq
ja
and
in
jg
xor
xchg
iret
mov
mov
or
je
inc
cs
sub
out
mul
mov
mov
call
mov
ja
jne
jo
mov
sbb
sbb
out
pop
inc
out
push
mov
pop
push
lods
sbb
dec
and
movs
sbb
push
and
js
pop
sbb
push
dec
xlat
jle
in
leave
out
xchg
retf
inc
xor
daa
mov
dec
sub
pop
test
out
adc
ror
fwait
inc
jmp
xlat
jge
adc
xor
mov
test
std
idiv
das
and
inc
(bad)
cld
popf
mov
ret
(bad)
mov
mov
push
or
adc
inc
gs
and
sub
mov
loope
push
adc
scas
lahf
repnz
addr16
mov
mov
pop
xor
mov
cmps
in
xor
inc
movs
cmp
stos
jl
ret
adc
xor
adc
mov
and
or
xchg
repz
jge
push
jb
and
sti
mov
mov
ds
or
sub
mov
iret
sub
and
push
fcmove
inc
or
push
mov
mov
jno
mov
mov
xchg
mov
jp
int3
bound
in
push
mov
xor
mov
sub
lea
inc
aam
fstp
pop
arpl
rol
push
scas
xchg
test
pop
lahf
and
ret
add
ins
inc
sub
frstor
adc
mov
add
cmp
mov
inc
dec
dec
xor
cs
repz
popf
push
lahf
aas
mov
mov
je
mov
inc
push
mov
pop
movs
jg
push
cwde
ds
push
add
call
adc
fdiv
push
adc
mov
outs
pop
in
add
iret
int3
push
mov
lahf
jge
fbstp
leave
icebp
cmp
add
dec
push
nop
add
lds
pop
jo
mov
pop
ja
dec
mov
retf
mov
pop
and
sbb
nop
mov
push
jns
pop
push
(bad)
icebp
xchg
jecxz
push
(bad)
pop
sbb
cmc
test
test
imul
icebp
cmps
jp
in
ins
pop
inc
sbb
xchg
mov
pop
jg
xchg
jmp
push
movs
ja
sbb
xor
sbb
out
or
and
jge
aas
mov
cmps
inc
pop
fdivr
mov
out
inc
mov
pop
in
aas
(bad)
out
inc
mov
mov
aas
push
cs
ja
jg
pop
aad
sbb
mov
fnstsw
pop
inc
inc
push
mov
jmp
(bad)
in
cmp
jl
call
lds
scas
jle
lahf
push
cmp
fisttp
inc
aas
push
mov
addr16
jne
fdiv
out
hlt
adc
or
cld
aam
inc
push
add
mov
ins
ret
jecxz
dec
pop
mov
retf
mov
lds
(bad)
push
cmps
ja
xchg
pop
pop
lods
pusha
call
mov
daa
add
and
stos
aaa
inc
cmp
xor
sub
mov
pop
imul
scas
mov
add
jmp
jae
mov
mov
(bad)
cmp
imul
in
dec
and
push
mov
mov
inc
mov
jle
mov
cmc
mov
sub
dec
push
aad
mov
inc
lahf
(bad)
cld
aam
sub
push
pop
mov
cmp
or
loope
outs
pop
(bad)
push
pushf
aaa
mov
mov
(bad)
jmp
shl
loop
push
and
test
ja
xchg
sar
xor
daa
cli
aaa
mov
mov
add
les
xor
add
inc
push
jo
(bad)
aas
outs
fwait
or
fld
mov
mov
lahf
jo
mov
jae
mov
movs
gs
fcomp
retf
inc
rcl
fwait
pop
adc
mov
mov
ins
inc
mov
scas
pushf
les
enter
cld
and
xchg
aas
repz
out
scas
mov
mov
mov
mov
test
inc
scas
fs
pop
mov
scas
mov
(bad)
gs
adc
and
cmp
les
aas
fsubr
xor
inc
imul
lahf
push
mov
mov
xchg
repz
popf
mov
and
int3
pusha
sbb
retf
and
(bad)
mov
xchg
mov
cmps
mov
out
jnp
mov
repnz
xor
fs
aam
add
popa
mov
loopne
stos
mov
retf
scas
sub
mov
xchg
mov
outs
mov
(bad)
loope
dec
push
mov
movs
lahf
dec
test
mov
ins
xchg
test
cli
(bad)
imul
idiv
mov
mov
mov
mov
sbb
aaa
stc
lock
cmp
and
fisubr
scas
push
sbb
call
mov
fs
mov
lock
cmp
jmp
sar
inc
adc
and
rcl
jno
mov
xor
xor
pop
cmp
xor
sub
ja
call
mov
mov
sub
jns
out
ds
push
push
xchg
or
stc
mov
pusha
mov
ficom
cwde
outs
jg
lahf
ins
sahf
ret
scas
xchg
pop
mov
mov
mov
mul
jb
cmps
jo
sub
stos
and
(bad)
add
jl
mov
jl
(bad)
jno
dec
mov
add
cmp
sub
xchg
mov
loop
out
test
(bad)
cmps
scas
movs
or
aas
mov
or
shr
xchg
mov
sbb
jo
repnz
cmp
fdiv
xor
inc
xor
fisub
in
lods
adc
pop
rcl
imul
loopne
cdq
or
mov
in
mov
jns
cmp
push
or
add
nop
rcr
pop
leave
mov
mov
push
aad
cmp
mov
outs
arpl
inc
scas
or
xchg
fistp
xcrypt-ctr
cmps
pop
fdivr
das
les
mov
cmps
mov
arpl
jl
and
stos
in
out
in
stc
inc
lods
ror
dec
sub
dec
lea
dec
and
jl
mov
jmp
cs
xchg
or
cmp
inc
mov
or
or
cmp
cli
jbe
inc
xchg
push
add
cmp
repnz
sbb
xchg
in
int
les
sti
dec
adc
dec
loop
xchg
push
push
movs
push
test
pop
or
jno
mov
inc
mov
jbe
jmp
outs
loope
xchg
jp
sub
cmps
mov
add
and
push
mov
pop
adc
scas
sub
dec
aaa
daa
pop
stos
inc
mov
mov
inc
shl
sub
sbb
mov
pop
lods
cmp
push
daa
push
fiadd
addr16
mov
bound
pop
(bad)
ret
ins
ja
pusha
and
or
adc
test
adc
shr
loopne
rol
xchg
out
stos
ficomp
or
mov
mov
mov
mov
int
fisubr
adc
loope
es
push
pusha
(bad)
xchg
and
lods
add
mov
pusha
dec
jne
stos
cs
jne
cmp
lods
call
adc
add
pop
push
(bad)
lds
xchg
cli
mov
mov
leave
ror
retf
mov
loop
and
test
addr16
(bad)
mov
xchg
loop
mov
xor
push
out
inc
shl
jo
cmp
xor
xchg
push
int
jae
popf
sub
pop
jl
push
addr16
js
js
sbb
ret
ror
fs
stos
jge
pop
mov
cld
movnti
iret
mov
pop
push
mov
loop
and
jo
out
jecxz
andps
jmp
or
sar
cmps
pop
ret
clc
fwait
mov
mov
repnz
push
mov
int
pop
mov
xchg
test
and
add
jmp
mov
out
lea
jo
sti
movs
stc
mov
rcr
mov
sbb
xor
out
jmp
ret
in
sub
cmps
(bad)
xor
imul
mov
in
scas
(bad)
mov
push
mov
lahf
movs
mov
scas
mov
(bad)
(bad)
das
sub
fs
add
loop
lea
js
jo
inc
add
addr16
nop
ins
ins
jns
sub
add
lds
jnp
ret
jge
adc
push
jo
jo
xchg
int3
out
mov
cmp
jmp
stos
iret
aaa
data16
and
add
fwait
push
cmp
js
mov
jle
xchg
nop
cld
lahf
scas
ror
cli
mov
shl
xchg
jmp
dec
cmps
or
std
cmp
ins
xchg
shl
in
inc
stos
retf
jmp
xchg
mov
cmp
pop
mov
fisub
sub
mov
das
movs
outs
push
inc
xchg
(bad)
xchg
sub
aad
mov
or
push
push
dec
mov
mov
in
inc
es
xchg
push
aas
out
mov
cs
movs
jne
out
pushf
push
ret
(bad)
fwait
(bad)
in
imul
xor
xor
push
pusha
(bad)
push
fs
cwde
aas
cmp
sbb
out
pop
ffree
aas
or
rcl
mov
mov
mov
aas
pop
mov
aas
das
loopne
mov
ins
aaa
mov
aas
adc
sub
out
pop
jl
jns
add
or
mov
cmc
daa
add
push
mov
xor
sub
mov
in
(bad)
es
and
stos
into
mov
cmps
push
xor
cmps
fwait
xor
mov
stos
pop
call
push
mov
lea
jle
xchg
xchg
das
mov
cmc
pop
dec
and
aaa
cmc
scas
retf
jns
mov
leave
adc
or
mov
xchg
retf
popf
mov
nop
mov
push
addr16
pop
mov
dec
mov
sbb
imul
and
jmp
ja
cmps
daa
mul
aam
bound
push
push
push
jg
cmps
sbb
jmp
add
mov
aas
aas
daa
push
or
(bad)
ror
mov
xchg
shl
push
pop
movs
cmp
cmp
sbb
mov
sub
cmp
push
mov
sub
data16
stos
popa
mov
lods
test
je
movs
sub
lea
xchg
imul
repz
ins
outs
xchg
scas
scas
mov
sub
pop
adc
test
in
jne
icebp
jmp
jns
xchg
sbb
or
dec
push
mov
jo
or
lahf
ja
pop
cmps
adc
cmps
xchg
mov
mov
inc
lahf
lahf
jbe
or
imul
pop
mov
mov
and
pusha
retf
outs
aad
das
xor
adc
mov
out
xchg
push
xchg
lods
inc
and
and
mov
in
shr
iret
xor
or
addr16
out
mov
and
mov
stos
jo
push
int
or
aam
xchg
mov
adc
std
(bad)
stos
mov
les
mov
cmp
dec
sbb
sti
push
out
ud1
loop
ins
scas
dec
movs
lods
jmp
jns
push
or
jl
(bad)
enter
in
pop
or
cld
inc
je
ret
inc
retf
push
push
movs
out
or
ficom
adc
and
mov
inc
in
mov
add
pop
sub
mov
or
sar
or
sub
test
mov
int
jae
sub
test
fwait
lods
test
mov
ja
jnp
sbb
(bad)
adc
sahf
mov
int3
retf
dec
xchg
das
ins
sub
stos
xchg
inc
cld
push
mov
and
(bad)
(bad)
sub
stos
mov
mov
stos
(bad)
xor
sbb
pop
ins
fimul
xchg
jmp
and
pop
(bad)
lea
jmp
lock
jb
outs
movs
push
sub
xchg
mov
cmps
cmps
pushf
js
out
sub
dec
sbb
je
mov
cmc
arpl
dec
(bad)
pop
imul
mov
dec
aas
addr16
xchg
std
lea
enter
aaa
mov
mov
push
aam
sub
push
sub
mov
pop
pop
jmp
mov
mov
lods
clc
dec
mov
mov
push
pushf
es
test
aam
sub
inc
sub
loop
inc
loope
mov
mov
add
push
pop
jno
repz
xchg
add
lods
call
imul
mov
scas
fcmovbe
je
sub
lds
pop
jo
jmp
mov
(bad)
ror
(bad)
adc
mov
mov
xchg
adc
mov
mov
es
cmp
xchg
jno
pop
dec
popf
jb
rcr
(bad)
out
(bad)
mov
mov
ret
test
push
imul
pop
and
jmp
rol
sbb
jl
pop
inc
arpl
push
popf
hlt
mov
es
mov
push
sub
into
ss
ja
inc
inc
pcmpeqb
mov
mov
jne
sub
push
fwait
mov
cmp
mov
sbb
lea
iret
adc
adc
jle
cmp
clc
in
faddp
cmc
cmc
enter
push
ret
mov
mov
xchg
xor
pop
sahf
and
ficom
cmp
mov
call
sub
dec
push
aad
loopne
add
mov
jae
add
pop
and
(bad)
mov
iret
mov
and
call
mov
adc
mov
push
mov
mov
push
stos
out
shr
(bad)
shl
mov
jbe
mov
cmps
jnp
call
adc
dec
and
fwait
mov
jle
test
stc
sbb
mov
push
test
push
push
iret
test
inc
in
ret
mov
push
fdivrp
add
xchg
(bad)
push
scas
jp
jns
or
out
pop
xchg
or
dec
jno
and
pop
outs
push
shr
(bad)
sar
(bad)
jl
sbb
cmps
xchg
outs
ins
mov
out
cmp
sar
stos
xchg
mov
push
ja
(bad)
and
mov
pushf
sbb
lea
daa
pop
lods
daa
xor
mov
ja
sbb
mov
imul
inc
mov
(bad)
popf
cmp
mov
ja
pop
pop
mov
clc
pop
lods
jle
mov
mov
dec
inc
or
cmps
xor
(bad)
xchg
aad
cmp
call
mov
mov
dec
pop
and
(bad)
test
lods
in
es
jnp
sub
mov
cmp
test
outs
mov
pop
mov
dec
test
popf
pop
or
mov
ret
ret
jb
mov
mov
cmps
jecxz
xchg
aam
jecxz
cpuid
enter
sub
cmp
(bad)
dec
scas
mul
jbe
and
push
stos
test
mov
cmp
pop
bound
xlat
mul
or
mov
or
js
das
aas
in
mov
add
adc
adc
pop
cmp
cmp
out
push
fcmovu
int
(bad)
das
ror
cmp
push
movs
mov
push
jne
iret
pop
lahf
shl
mov
sar
sbb
(bad)
ror
ror
cmp
imul
dec
clc
scas
(bad)
mov
outs
in
ficomp
jmp
fdiv
data16
je
dec
adc
mov
mov
inc
add
(bad)
test
mov
and
xchg
sub
add
mov
mov
cmp
inc
mov
popf
jp
pop
imul
xor
mul
das
cmp
call
mov
div
mov
push
aas
fs
sub
mov
and
push
add
aaa
es
jg
pop
cmp
push
addr16
movs
sbb
popf
in
pop
test
inc
or
xchg
fidiv
aaa
mov
and
mov
inc
mov
arpl
imul
sub
cld
mov
mov
ret
xchg
jns
add
ss
push
jnp
out
lea
cmp
stos
fmulp
mov
mov
cmps
sub
inc
neg
xchg
push
pop
mov
xlat
ret
ficom
out
mov
test
outs
mov
pop
ja
imul
pop
xor
inc
adc
push
mov
dec
lods
sub
xor
mov
(bad)
(bad)
pop
cmps
sbb
cwde
push
cmp
ror
add
push
enter
ja
gs
xchg
and
test
jmp
pop
test
pop
mov
adc
xchg
sub
mov
ret
xchg
int
(bad)
cmps
outs
mov
pop
(bad)
sahf
cmp
stos
(bad)
mov
mov
cmps
xchg
sahf
outs
les
dec
inc
fnstsw
mov
jo
xchg
mov
pop
loopne
mov
pop
add
add
sahf
scas
popf
fwait
lods
test
mov
dec
lahf
sub
fwait
mov
mov
xor
popf
sbb
sub
or
inc
cmp
enter
inc
aas
jmp
sti
cmc
inc
push
sbb
sbb
vmovhps
jmp
lods
inc
mov
pop
gs
inc
data16
adc
ds
daa
scas
jp
inc
or
gs
push
push
test
mov
xor
in
faddp
shr
out
mov
push
lods
es
mov
and
pop
neg
mov
les
sahf
cmps
cmp
mov
outs
mov
not
and
out
out
clc
mov
dec
add
je
jo
std
adc
add
movs
not
cmc
mov
outs
sbb
jmp
in
pop
outs
push
sbb
mov
jle
jg
pop
dec
mov
push
outs
fadd
inc
imul
mov
ins
(bad)
jns
wbinvd
mov
mov
mov
popa
imul
sub
add
xchg
stos
inc
addr16
dec
xchg
inc
inc
movs
mov
pop
scas
test
mov
pusha
sar
xchg
mov
xor
or
push
fisub
js
stos
bound
scas
pop
(bad)
in
xchg
sbb
mov
mov
ins
push
test
jb
jbe
push
loope
gs
mov
fiadd
jns
xor
xchg
fisttp
pop
mov
xchg
scas
mov
or
outs
mov
mov
or
and
push
mov
push
mov
(bad)
aas
push
es
jmp
push
mov
and
or
sub
nop
mov
outs
add
rcl
movs
push
stos
jb
push
call
fstp
jmp
ficomp
sbb
sub
pop
add
daa
mov
xchg
mov
das
aam
pop
dec
je
add
pop
mov
imul
add
sbb
lods
add
outs
jae
and
adc
mov
cmps
ja
jle
dec
jbe
pop
and
outs
inc
or
fsubr
loopne
in
inc
shr
push
inc
adc
and
mov
and
fistp
ret
dec
inc
(bad)
sub
xor
jo
adc
mul
dec
push
lods
je
xchg
jno
mov
mov
xchg
(bad)
mov
inc
or
jnp
xor
inc
test
dec
outs
mov
dec
sti
mov
in
mov
fnstcw
lahf
xchg
cmp
ret
inc
lea
jne
sub
inc
enter
mov
movs
pop
dec
mov
jmp
add
dec
(bad)
pop
cmp
test
cli
(bad)
jo
(bad)
or
hlt
cli
in
xchg
cmp
addr16
inc
bound
int
push
pop
mov
and
imul
sub
lods
or
inc
(bad)
cmps
mov
stos
sub
cmp
pop
xchg
mov
rcr
jg
add
lods
es
mov
outs
dec
adc
dec
and
jle
xchg
stc
rcr
ret
mov
arpl
dec
sti
les
jge
xor
mov
inc
xchg
dec
scas
addr16
pop
pop
adc
adc
shl
addr16
out
pop
lods
and
(bad)
outs
repnz
fwait
leave
dec
mov
adc
inc
mov
pusha
dec
xchg
stos
push
xor
adc
push
loop
add
jg
sbb
adc
jb
adc
scas
cmp
(bad)
inc
jb
jae
movs
call
ins
mov
bound
test
mov
jmp
pop
adc
outs
push
imul
add
pop
inc
jo
pushf
daa
imul
daa
inc
movs
xchg
pop
and
mov
and
popf
jnp
mov
movs
mov
sbb
sbb
push
sar
mov
fcom
out
dec
lods
(bad)
or
push
stos
pop
shl
out
push
sahf
dec
dec
inc
jae
pop
xchg
fcomp
lds
iret
pusha
mov
fwait
or
fiadd
out
fwait
sbb
inc
arpl
popa
mov
push
or
jp
xchg
ins
gs
das
pop
mov
mov
(bad)
sub
mov
jbe
nop
and
out
mov
les
cmp
jecxz
xchg
lock
jnp
data16
fidivr
sub
dec
jge
sbb
push
nop
mov
scas
pop
or
aad
mov
lahf
sub
mov
repz
mov
mov
cdq
imul
pop
push
mov
(bad)
movs
mov
pop
dec
push
xor
push
lds
adc
inc
movs
push
popa
test
(bad)
pushf
xchg
inc
xor
push
cmp
imul
fdivrp
jle
pop
mov
sar
shl
ret
fcom
or
out
imul
sbb
add
xor
call
(bad)
in
fprem1
mov
mov
mov
adc
push
adc
push
pusha
es
xchg
fwait
lahf
ror
mov
stos
cmp
cmps
cli
arpl
or
stos
push
and
movs
push
mov
add
aam
mov
pop
cmp
loop
pop
adc
loop
mov
out
loop
and
jge
xor
xor
repz
mov
mov
xor
gs
jl
sub
fidiv
and
xor
lds
ins
and
xchg
lea
mov
and
(bad)
xor
pop
fs
or
xchg
fcom
sub
loope
xor
call
mov
lods
pop
pop
push
adc
int3
or
or
inc
mov
xchg
mov
fcmovu
xchg
pop
adc
bound
jae
pop
lahf
xchg
inc
jg
unpcklps
mov
inc
cmps
push
movs
add
aam
pop
mov
jge
cmp
imul
pop
mov
cmps
repz
pop
add
and
cmps
std
jge
jbe
mov
dec
mov
rol
fbld
and
pop
es
scas
rcr
mov
sbb
stc
fs
loop
adc
cmp
push
cmps
es
dec
out
pusha
and
jp
jecxz
leave
bound
ret
inc
test
into
pop
mul
int
lods
sub
jmp
icebp
ins
lods
jb
pop
or
aas
dec
adc
movs
fsubr
mov
sar
pop
mov
ja
mov
scas
lods
lods
sbb
mov
outs
loope
das
outs
mov
adc
(bad)
jae
ja
loop
mov
inc
push
ret
popa
lahf
leave
repz
in
adc
stos
(bad)
(bad)
and
jmp
(bad)
mov
lea
repnz
(bad)
in
add
dec
loop
mov
sbb
xor
xchg
sar
sar
jbe
push
jmp
push
into
push
mov
stos
xchg
lods
out
daa
mov
lds
mov
and
inc
daa
lea
mov
dec
icebp
pmaddwd
inc
jg
mov
cli
daa
adc
pop
inc
mov
(bad)
xchg
call
or
push
sub
sbb
(bad)
cmps
cmp
jb
(bad)
(bad)
cmps
jp
sbb
jmp
push
cwde
iret
mov
(bad)
out
add
sbb
out
cmp
imul
xor
ss
xchg
or
scas
pop
sbb
or
xchg
fisttp
push
cmp
ret
jb
cmp
push
lds
stos
and
jmp
cmc
je
lods
rol
pushf
stos
rcl
xchg
(bad)
mov
lahf
and
xchg
gs
mov
dec
dec
lods
outs
retf
fidivr
aas
xor
xchg
(bad)
push
sub
sahf
or
xchg
or
jmp
mov
outs
rcr
lods
and
jmp
movs
jp
fnstenv
psubd
pop
pop
ret
fnstsw
mov
fisttp
jne
clc
inc
movs
into
movs
xor
xchg
iret
(bad)
call
sbb
xlat
cdq
xchg
ja
stos
cmps
ficomp
pop
and
mov
mov
ret
clc
imul
push
lods
inc
popa
nop
iret
aam
lods
xchg
jb
mov
sub
jg
mov
sub
cmps
sub
shl
popa
(bad)
xabort
mov
add
xchg
(bad)
jp
or
add
pop
push
out
mov
fbld
movs
cmp
ja
gs
retf
cmp
inc
aaa
jb
mov
xor
cmp
xchg
mov
cmps
das
sub
into
mov
push
sub
dec
dec
popa
mov
pop
mov
ja
jmp
sub
shl
dec
mov
jmp
(bad)
rol
(bad)
cmc
mov
cmps
loopne
mov
pop
dec
jmp
cmps
sub
daa
outs
in
jns
mov
fs
mov
pushf
adc
frstpm(287
xlat
sub
mov
mov
jmp
ret
dec
pop
push
cmp
xchg
dec
daa
cmp
xor
mov
sahf
fcmovu
mov
xor
aad
cld
fldcw
jne
mov
out
mov
stos
mov
xchg
stos
xchg
stos
scas
mov
(bad)
stos
rcl
xchg
mov
mov
xchg
cmp
mov
mov
popf
pop
pop
xor
dec
push
jg
mov
sub
(bad)
jbe
mov
icebp
pop
mov
cmc
jne
jbe
xchg
movs
xchg
jmp
add
cmps
jp
xor
sub
xlat
and
sub
pop
mov
aad
dec
mov
sub
adc
inc
and
dec
and
and
arpl
(bad)
daa
or
aaa
add
rol
mov
test
mov
enter
pusha
mov
data16
cmps
xor
mul
ja
xor
sub
or
cld
pop
popa
cmps
push
pop
cmp
pusha
mov
mov
cs
xchg
adc
pop
mov
adc
sub
dec
add
or
aam
aad
push
dec
or
mov
pop
aad
scas
out
cmps
and
pop
(bad)
and
fwait
jp
cmp
xchg
lods
sub
xchg
cmps
(bad)
(bad)
fmul
test
mov
in
addr16
mov
(bad)
push
dec
push
je
in
fwait
hlt
xchg
out
cmps
pop
push
mov
xlat
ins
dec
in
dec
sar
pop
push
pushf
shl
iret
scas
xor
aam
sbb
(bad)
jnp
call
je
inc
in
push
push
sar
inc
cmp
sbb
mov
loope
lock
pop
mov
das
mov
sub
ret
movs
in
mov
jl
sub
out
sub
sti
mov
out
es
fidiv
mov
mov
call
sub
call
pop
rcl
mov
in
mov
(bad)
es
pop
jmp
in
mov
pop
sbb
ret
test
xchg
stos
mov
cmp
sbb
mov
xchg
dec
mov
stos
popf
(bad)
js
or
(bad)
call
jge
adc
adc
fistp
sti
cmp
push
add
sar
mov
(bad)
pop
sub
imul
int
jnp
mov
sbb
jo
mov
mov
sets
imul
int3
ins
or
out
pop
(bad)
int
xor
(bad)
pop
cmps
in
enter
call
repnz
xor
lods
rcl
js
mov
cmp
adc
mov
mov
lds
push
push
pop
out
or
cmp
(bad)
addr16
mov
pop
pushf
cmp
push
mov
jnp
dec
into
jle
jbe
fsubr
pop
mov
scas
sar
pop
stos
(bad)
dec
(bad)
mov
jb
aam
not
mov
imul
aas
xchg
xor
inc
cmp
popa
(bad)
adc
or
fsubr
gs
call
sub
shl
inc
mov
mov
movs
cmp
cmp
or
fisubr
pop
imul
mov
push
xchg
je
lods
es
add
es
inc
data16
addr16
mov
or
mov
dec
pop
loop
(bad)
daa
(bad)
xchg
mov
mov
stc
or
addr16
lods
pushf
fdivr
movs
xchg
mov
jbe
cmp
adc
mov
(bad)
cmps
fnstcw
push
mov
mov
and
stos
or
mov
pop
nop
jp
xchg
pop
inc
(bad)
stos
push
aaa
add
in
(bad)
cli
xchg
pop
dec
nop
or
mov
inc
push
push
adc
mov
xchg
or
sub
icebp
or
add
scas
popf
jmp
in
cmp
in
jp
inc
xor
mov
add
adc
aaa
mov
dec
ins
fsubr
mov
fcom
mov
jle
popa
cwde
mov
xchg
xchg
mov
pop
(bad)
outs
pushf
xchg
jno
out
test
(bad)
rcr
mov
ror
dec
cdq
dec
add
fisubr
mov
stos
jle
pop
dec
mov
outs
mov
imul
(bad)
rcr
pusha
mov
jg
sahf
movs
daa
mov
stos
imul
lea
xor
cld
add
sub
sub
inc
xchg
js
shr
xor
mov
sub
mov
pop
fimul
sub
(bad)
call
mov
mov
or
daa
pop
mov
(bad)
test
inc
(bad)
neg
mov
pop
(bad)
ja
pushf
test
jg
sahf
mov
cmps
outs
dec
dec
xor
sahf
je
pop
xchg
scas
shr
and
dec
js
jge
and
rol
mov
stos
push
cmps
aaa
push
and
xor
aas
xor
and
push
mov
xchg
push
xchg
jmp
mov
in
xlat
cmp
cmps
pop
(bad)
adc
xchg
test
cld
std
in
lods
mov
pop
or
retf
jmp
jns
shl
neg
loopne
and
push
xchg
or
retf
mov
cs
cmp
add
shl
cmp
xor
das
iret
clc
mov
popa
imul
xchg
jbe
mov
and
fmul
jno
sub
imul
add
outs
push
push
ss
inc
imul
add
stos
pop
(bad)
jecxz
cmp
iret
mov
pushw
jo
(bad)
in
scas
mov
pop
mov
cmp
sbb
aam
xor
and
inc
cmp
in
mov
jl
loopne
aaa
int
inc
fstp
test
jl
idiv
cld
and
std
lahf
out
mov
ja
fs
cli
mov
(bad)
cld
stc
adc
cmp
loope
int
cmps
jns
and
popf
mov
scas
ret
hlt
inc
daa
jb
adc
loope
scas
lock
jnp
stos
jl
adc
cli
je
clc
je
cld
popa
out
sbb
pop
push
fsub
sbb
sbb
idiv
imul
add
lahf
mov
lahf
inc
mov
outs
mov
aam
popa
aas
sti
mov
mov
cmp
sub
push
jecxz
cmp
cmp
cmps
aad
stos
je
adc
and
push
ins
popf
mov
fbld
lods
inc
jge
pop
dec
jg
mov
mov
loop
add
and
sub
hlt
mov
or
jbe
fnstenv
push
hlt
lods
lds
xlat
cli
test
and
loop
fmul
fwait
outs
lods
xchg
add
(bad)
jmp
cli
xchg
jmp
scas
or
aad
jl
cmps
jmp
mov
mov
mov
mov
xchg
xchg
(bad)
(bad)
mov
ins
inc
mov
lds
mov
mov
setae
mov
jl
das
and
jmp
cli
stos
ficom
call
jne
pushf
jge
retf
xchg
ret
dec
or
lea
push
test
scas
jge
mov
mov
outs
retf
mov
mov
sub
cmovbe
dec
sti
ins
pop
or
xchg
sub
popf
mov
push
pop
sub
(bad)
bt
add
and
mov
pop
ror
ins
jg
cmp
xchg
mov
xchg
fidivr
dec
clc
xchg
jle
xchg
mov
out
sbb
sub
scas
mov
inc
mov
out
(bad)
lahf
sbb
bound
jb
xor
sar
fistp
mov
cmps
outs
mov
adc
sub
mov
xchg
bound
xchg
scas
dec
pop
lods
(bad)
pop
sbb
jmp
inc
mov
xor
sub
mov
scas
inc
loope
stos
cmps
cmps
jmp
sahf
mov
aad
lea
cmp
int
xor
scas
push
loop
mov
mov
xchg
xor
(bad)
mov
lods
xor
scas
(bad)
(bad)
lock
scas
mov
push
ins
(bad)
xchg
inc
sbb
(bad)
or
mov
mov
in
out
das
mov
cmps
mov
stos
scas
(bad)
pop
bsf
into
das
pop
movs
xlat
pop
scas
lahf
inc
or
lea
xchg
dec
mov
mov
ret
mov
scas
lds
(bad)
cwde
xchg
imul
jmp
stos
scas
add
push
pusha
jge
jle
imul
imul
sub
in
popa
xor
(bad)
test
fisub
push
mov
(bad)
outs
inc
cmp
mov
popa
mov
scas
mov
lea
leave
lea
ret
out
or
outs
dec
cmps
push
mov
loop
lea
ret
ja
scas
push
lea
mov
dec
cmps
pop
movs
rcl
stos
outs
cmps
cmps
addr16
popa
push
(bad)
daa
or
(bad)
in
ins
popa
loope
(bad)
popf
mov
jp
pop
jmp
mov
mov
adc
mov
cmps
mov
mov
push
outs
shufps
mov
test
push
dec
(bad)
scas
xchg
enter
out
cmp
mov
inc
outs
pop
sub
and
lea
add
shl
pop
daa
push
mov
repnz
dec
(bad)
mov
sub
movs
lods
adc
mov
mov
shl
sub
cmp
xchg
mov
div
lahf
daa
mov
shl
out
retf
mov
mov
cmp
jecxz
mov
xchg
stos
xor
out
(bad)
cmp
and
stos
scas
mov
or
cdq
(bad)
inc
xor
xchg
das
mov
dec
mov
pop
mov
jp
pop
test
jge
mov
dec
cmps
xchg
mov
mov
(bad)
scas
fdecstp
int3
aad
xchg
dec
mov
mov
fidiv
cdq
aaa
sub
ja
mov
xlat
outs
movs
mov
imul
sub
mov
imul
mov
sub
push
stos
mov
mov
addr16
scas
xor
cmps
into
mov
aas
mov
fsubp
add
stos
(bad)
mov
adc
outs
push
dec
stos
imul
sbb
dec
cmp
jb
inc
lods
(bad)
shr
pop
mov
mov
jbe
inc
jg
mov
ins
inc
mov
mov
xchg
cmps
je
mov
cmps
icebp
xchg
(bad)
jp
cmps
lods
mul
push
cmps
stos
pop
jmp
into
xchg
xchg
in
xchg
xor
mov
dec
cmp
mov
(bad)
repz
ds
cmps
mov
loope
cmps
inc
sub
pop
mov
movs
repnz
sub
mov
ins
sub
out
sub
mov
das
mov
inc
mov
into
dec
mov
stos
mov
push
pop
dec
mov
xchg
aas
fadd
scas
mov
mov
ret
(bad)
popf
xor
dec
xchg
push
das
mov
addr16
xchg
sahf
(bad)
lods
pop
scas
push
imul
addr16
mov
mov
xchg
out
cmp
sub
inc
inc
cmps
out
push
fs
xchg
loopne
mov
out
ins
outs
mov
cmps
or
retf
xchg
ins
push
and
adc
cwde
(bad)
retf
inc
mov
ror
xchg
mov
push
jns
adc
mov
mov
mov
cmp
mov
into
imul
fnstsw
mov
mov
push
dec
adc
push
mov
mov
mov
mov
cmps
daa
stos
push
xor
mov
inc
(bad)
out
mov
jb
mov
xchg
sub
xchg
mov
inc
frstor
loopne
mov
mov
mov
mov
outs
mov
cmps
(bad)
cdq
pop
aam
sub
sub
mov
push
mov
mov
scas
mov
pop
sub
cdq
dec
sbb
xchg
pop
cmps
push
push
jecxz
mov
sub
mov
mov
cmps
pop
ja
popf
aas
mov
imul
hlt
mov
jg
mov
shl
mov
mov
or
and
jmp
fdivr
mov
in
push
cmps
mov
xor
xchg
lea
xchg
mov
dec
and
out
ror
pushf
lahf
push
(bad)
shr
pop
aas
ins
scas
jno
aas
out
dec
mov
ins
out
mov
push
outs
and
cmps
(bad)
das
mov
push
in
mov
scas
in
das
ins
cmps
mov
or
and
sub
pop
dec
dec
out
jle
push
es
out
fsubr
loop
jnp
push
aaa
das
psubusb
push
mov
mov
sub
mov
(bad)
xchg
dec
jne
jns
cmp
and
dec
scas
mov
mov
cmps
cmc
aad
scas
mov
das
(bad)
xor
sar
mov
add
jg
lahf
pop
sub
fcmovb
into
scas
mov
ins
add
and
sbb
mov
mov
movs
xchg
popa
cld
mov
fxch
add
jg
nop
bound
push
pop
daa
sub
push
cmp
adc
movs
not
and
sub
ins
mov
pop
mov
or
mov
jns
movs
xchg
mov
pop
loopne
cdq
sbb
jnp
in
add
mov
ins
cli
push
sub
repnz
arpl
pop
sub
cmp
fmul
mov
fcomp
mov
jae
xor
mov
sub
daa
pop
jle
cmps
dec
sub
xchg
scas
mov
sub
daa
(bad)
push
dec
xchg
mov
mov
mov
arpl
sub
daa
pop
imul
xor
ins
in
pop
outs
mov
aad
outs
imul
es
mov
sub
mov
jmp
imul
cmps
arpl
push
xchg
aam
ja
mov
mov
mov
xsha1
cmps
int3
inc
scas
xchg
daa
scas
jle
cmps
fld
mov
cmps
and
ds
adc
mov
fwait
push
mov
mov
push
movs
mov
inc
or
mov
mov
imul
sbb
mov
mov
test
rcl
mov
mov
arpl
daa
call
sub
pop
cmps
rcr
aad
ds
daa
adc
scas
test
mov
cmps
ins
mov
movs
fcomp
test
mov
fcom
pop
cmps
xor
outs
fld
and
mov
mov
jl
xchg
push
push
mov
jmp
pop
scas
mov
xchg
jns
sbb
call
outs
mov
mov
adc
cmps
out
add
fidivr
test
lds
scas
mov
shl
ins
dec
xor
imul
pop
jg
xchg
sbb
push
das
mov
mov
pop
(bad)
cs
pop
cmps
push
sub
fmul
aas
out
mov
scas
dec
xchg
mov
scas
aas
add
out
lods
mov
adc
xchg
jg
outs
mov
imul
mov
xlat
sbb
xor
int3
scas
sub
add
ftst
xchg
nop
jl
pop
mov
movs
jnp
leave
mov
mov
push
leave
and
and
pop
jbe
mov
and
lea
push
dec
mov
mov
mov
dec
std
xor
push
(bad)
and
inc
movs
xchg
jg
dec
push
popa
mov
jmp
dec
and
pop
push
pushf
sub
jmp
ins
mov
(bad)
xchg
xchg
aad
and
cmps
cli
cmp
cmp
(bad)
sub
retf
mov
scas
imul
icebp
inc
mov
fisub
and
jnp
loopne
stos
xchg
daa
stos
ja
cmps
dec
cmps
jg
inc
and
push
std
xor
fcmovu
jmp
outs
call
mov
daa
stos
pop
aam
ds
dec
fist
ja
mov
imul
adc
inc
xchg
mov
fidiv
pop
imul
jg
ds
mov
xlat
lahf
mov
xchg
sub
pop
pop
(bad)
fwait
push
movs
cld
mov
movs
adc
mov
mov
aas
repz
sub
test
std
daa
xchg
(bad)
in
sbb
mov
imul
mov
addr16
sar
pop
stos
push
cmps
sub
imul
popf
lahf
lea
mov
ja
fimul
fnstsw
xchg
pop
into
lods
xchg
das
mov
pop
cs
out
shr
push
mov
das
dec
imul
mov
outs
adc
mov
out
scas
adc
mov
cmp
sbb
aas
out
mov
or
adc
jno
or
imul
mov
in
fbld
mov
rol
push
push
rcr
mov
lea
stos
inc
scas
mov
or
cmp
cmp
mov
(bad)
ja
(bad)
scas
das
(bad)
ins
ret
sub
sub
in
mov
iret
mov
sub
xchg
dec
out
(bad)
fidivr
addr16
retf
(bad)
mov
(bad)
xchg
aam
push
adc
jnp
sub
xchg
push
xchg
popa
jge
pop
cmc
xchg
imul
mov
push
mov
mov
sub
test
jg
movs
in
push
aaa
and
(bad)
sbb
mov
cli
stos
push
mov
sub
or
jge
pop
in
dec
xchg
je
aaa
dec
sub
pop
push
xchg
and
addr16
cmps
and
or
and
ret
inc
push
cdq
pop
mov
outs
sub
ins
aas
mov
mov
push
ret
nop
lock
jnp
jae
dec
push
push
or
or
inc
dec
mov
jmp
jg
imul
mov
push
jg
imul
push
push
(bad)
movs
add
cmps
mov
cmps
or
(bad)
cmps
ins
inc
hlt
imul
mov
popa
lods
pushf
das
push
pop
sar
movs
cmps
lds
(bad)
mov
das
outs
lock
es
outs
scas
shr
adc
loopne
out
lds
sbb
(bad)
lea
ret
jmp
mov
sbb
xchg
pop
lods
jbe
leave
pop
cmps
mov
push
test
test
into
sub
rcr
scas
push
jns
mov
lods
xchg
mov
jg
retf
ror
and
int
cmps
addr16
sub
cmps
xchg
das
int3
popf
pop
jge
cs
loopne
jmp
lds
fadd
pop
movs
int3
leave
ins
shl
neg
mov
sub
lods
xlat
lods
das
mov
daa
into
scas
xchg
lea
lds
ins
outs
mov
outs
rol
shl
ror
aam
push
test
into
cmps
xchg
outs
dec
and
mov
scas
jg
scas
add
inc
pop
aaa
stc
and
add
movs
mov
std
adc
lods
xchg
pop
mov
daa
xor
imul
ret
imul
cmps
mov
cmps
aaa
ret
call
xchg
mov
pop
xchg
lea
mov
jg
shufps
aam
push
bnd
cmps
stos
in
cmps
test
lds
or
(bad)
cmc
(bad)
ja
lahf
sub
xchg
mov
(bad)
das
stos
(bad)
daa
iret
movs
dec
scas
mov
ins
pop
mov
add
and
xchg
(bad)
fsubr
addr16
(bad)
scas
xchg
imul
aad
addr16
add
mov
mov
aam
ins
aas
mov
out
cmp
popf
(bad)
mov
ror
sub
mov
imul
mov
rol
es
pop
push
movs
mov
mov
movs
ret
mov
push
or
shl
xacquire
jmp
dec
mov
xlat
and
gs
imul
addr16
mov
mov
repnz
xchg
inc
in
(bad)
cmp
(bad)
movs
xchg
call
ins
ds
jmp
xchg
(bad)
in
push
pop
sbb
repnz
shl
movs
xchg
fsubr
inc
pop
sbb
and
outs
pop
lahf
ins
and
out
shl
and
mov
nop
cmp
inc
scas
ins
nop
daa
arpl
xchg
sub
mov
lods
cmp
test
and
push
(bad)
call
mov
cmps
in
xchg
in
test
cmps
sub
movs
mov
mov
sub
mov
and
and
mov
(bad)
push
dec
mov
mov
jnp
sub
mov
pop
or
daa
ret
jnp
stc
ret
daa
add
aam
es
mov
or
cmps
inc
jb
aam
(bad)
sahf
mov
into
lods
mov
add
xchg
jmp
sub
stos
test
sahf
movs
(bad)
(bad)
leave
mov
mov
fisub
pop
mov
lea
mov
cmps
xchg
aam
(bad)
int3
(bad)
sbb
pop
ins
test
cmp
cli
mov
(bad)
cmps
scas
adc
and
cmc
inc
cmps
xchg
sub
popa
mov
dec
or
xor
scas
sub
das
mov
out
movs
retf
sub
out
ror
jmp
cmps
ror
push
pop
ror
add
ins
ret
mov
ins
ficomp
jmp
xchg
xchg
ror
clc
bound
cmp
push
fwait
es
mov
mov
movs
std
fwait
jb
xchg
jge
mov
ja
and
sahf
mov
pop
js
(bad)
xlat
mov
pop
aaa
out
pop
dec
ins
xlat
mov
mov
push
jmp
mov
push
push
pop
mov
scas
jno
jno
add
adc
dec
movs
fs
xchg
scas
or
aas
outs
imul
dec
lahf
ins
ja
cdq
(bad)
aas
cmps
adc
mov
int
mov
sbb
jle
mov
call
xchg
imul
test
dec
movs
cmps
repz
loopne
xor
cwde
fld
aaa
add
mov
push
fsub
push
enter
cmps
test
test
lahf
je
pop
cmp
into
lea
mov
mov
pop
cmc
fidivr
dec
cmp
cmp
xchg
pop
mov
(bad)
daa
mov
(bad)
ins
(bad)
pop
imul
scas
xor
mov
clc
xchg
cmp
scas
repnz
pop
mov
mov
jge
mov
sbb
into
sub
test
pop
outs
inc
mov
div
into
xchg
out
cld
into
xchg
mov
sbb
stos
inc
pop
scas
out
jo
fisub
jmp
mov
sub
cmp
mov
scas
ins
mov
clc
movs
jo
outs
adc
das
outs
mov
ficomp
int
iret
mov
lea
push
sub
mov
mov
push
jge
pushf
imul
inc
cld
dec
ret
pop
cmps
xchg
mov
inc
dec
pop
sbb
mov
ficom
jg
test
inc
outs
mov
fimul
aas
mov
(bad)
imul
cmps
loopne
ret
scas
cmps
xchg
out
fdivr
int3
mov
cmc
fimul
movs
dec
pop
mov
daa
ins
outs
daa
daa
popa
fidiv
sub
stos
scas
addr16
addr16
jno
cli
lds
lock
imul
(bad)
fwait
pop
cmps
xchg
mov
out
cmps
jne
cwde
movs
xchg
xor
sub
fsubr
push
cmps
scas
dec
imul
mov
pop
(bad)
(bad)
icebp
ins
dec
(bad)
sub
(bad)
mov
cmc
push
daa
pop
scas
inc
xchg
jb
(bad)
(bad)
aaa
sub
mov
push
js
inc
pop
xchg
inc
into
lods
mov
mov
dec
lea
cdq
jl
scas
mov
sub
(bad)
into
daa
(bad)
(bad)
imul
arpl
int3
ja
jnp
imul
mov
cli
movs
sub
shl
retf
dec
test
scas
inc
push
inc
push
into
inc
xor
cmps
push
hlt
ja
dec
add
sub
mov
sub
scas
fstp
push
call
jmp
and
mov
fsub
mov
daa
pop
pop
push
scas
pop
cmps
arpl
add
loope
iret
dec
psubd
xchg
sub
outs
mov
aaa
push
cdq
mov
jle
cmp
mov
fistp
push
lock
(bad)
popf
mov
adc
ror
out
popf
repnz
packuswb
sub
fsubr
scas
scas
ins
daa
mov
outs
getsec
push
(bad)
aad
push
scas
popa
movs
jecxz
lods
jle
into
pop
mov
push
(bad)
xor
xor
imul
scas
push
push
pop
movs
dec
je
shr
mov
div
aam
pop
ins
push
rcl
aaa
ins
scas
adc
fild
jg
xchg
sub
cld
or
dec
inc
aam
shl
sub
and
imul
aam
shl
or
push
inc
dec
and
push
sbb
repz
cdq
shl
mov
adc
das
sar
imul
add
mov
inc
xchg
and
shr
stos
jo
aam
pop
sahf
cmps
leave
ret
imul
loopne
jne
das
pop
das
scas
cmps
push
add
ret
and
out
cmp
sbb
outs
aam
movs
loope
movs
or
ds
xchg
cld
mov
movs
xchg
mov
test
sub
cmp
scas
mov
movs
rol
pop
ins
mov
xchg
icebp
pop
and
js
dec
movs
cmp
ret
ret
scas
imul
push
fwait
cs
cmp
push
mov
aaa
ins
dec
ret
jbe
int3
xchg
dec
(bad)
and
shl
mov
fsubp
mov
(bad)
sub
mov
imul
push
lahf
adc
aad
popa
dec
xchg
push
shr
sub
mov
push
mov
mov
jno
popa
dec
jg
push
jg
pusha
sbb
sub
pop
fnsave
ins
push
jmp
mov
lea
aad
sub
retf
das
mov
push
ds
lahf
aaa
paddb
sub
cmps
out
movs
sub
cli
mov
mov
mov
clc
push
pop
inc
retf
fimul
xchg
jmp
into
pop
fwait
add
enter
mov
aaa
inc
cs
add
das
addr16
mov
mov
jmp
mov
das
sub
(bad)
pop
ins
loope
sub
mov
jl
mov
jg
pop
mov
out
test
test
scas
dec
jmp
retf
(bad)
loopne
jmp
cmps
(bad)
xor
into
scas
scas
ins
jle
(bad)
sbb
nop
mov
ins
xchg
mov
mov
imul
(bad)
shufps
scas
(bad)
cmps
popa
or
loope
mov
scas
xor
ins
gs
scas
sbb
mov
aas
scas
mov
shl
scas
lock
rcr
out
dec
jne
mov
pop
(bad)
mov
push
xchg
jg
xor
sub
jnp
(bad)
push
das
mov
(bad)
ss
(bad)
push
mov
push
mov
sub
arpl
(bad)
scas
or
pushf
and
aas
cmps
pop
dec
pop
lea
mov
fdivrp
xor
sub
sub
lea
xchg
add
daa
jl
push
sbb
xchg
enter
movs
addr16
mov
lahf
lea
mov
mov
movsx
cmps
int3
fimul
pop
daa
dec
jne
into
mov
mov
cmc
ror
fs
inc
hlt
loop
movs
inc
(bad)
jns
int
mov
gs
mov
jmp
movs
and
test
js
fs
xor
out
stos
push
lahf
push
ins
mov
or
mov
test
aaa
out
jp
cmps
lahf
(bad)
xchg
sti
mov
xchg
leave
mov
adc
or
and
sbb
outs
sub
ror
sub
cmps
mov
daa
ins
lock
mov
adc
mov
(bad)
cmps
scas
xor
(bad)
gs
mov
ror
fwait
test
lea
pop
imul
(bad)
fidivr
and
sahf
xchg
cwde
ins
mov
mov
mov
aas
fcomp
and
ds
out
mov
ins
in
adc
clc
sbb
or
aas
mov
sub
lahf
imul
xchg
cmps
mov
jge
into
movs
mov
lock
mov
out
daa
xor
lahf
cmps
jle
movs
movs
sub
xchg
aas
out
ins
retf
int3
rcr
(bad)
aad
mov
mov
dec
daa
cmps
scas
add
out
jge
ja
pop
mov
push
ficomp
outs
sahf
pop
imul
jp
dec
pop
daa
aas
sub
or
int3
je
dec
ja
xchg
addr16
mov
fcomp
inc
jg
mov
addr16
add
inc
mov
pop
sub
int
fisub
outs
xstore-rng
cmps
add
cmp
(bad)
mov
(bad)
test
mov
mov
jl
sub
mov
ja
push
aas
or
retf
jmp
cmp
rcl
pop
daa
pop
imul
mov
imul
sti
and
ds
adc
into
jmp
fwait
(bad)
outs
mov
out
jb
adc
sbb
jno
mov
lds
mov
cmp
jg
mov
inc
push
or
pop
xchg
pop
jl
lods
mov
mov
aam
out
daa
imul
mov
mov
pop
cmps
adc
aas
mov
fwait
mov
xor
mov
out
mov
cmp
sub
mov
inc
pop
or
shr
push
cmps
jne
xor
pop
in
sub
std
dec
adc
jmp
test
(bad)
push
mov
xchg
xchg
imul
mov
stos
movs
fdivr
loop
ss
push
mov
mov
(bad)
jmp
dec
mov
adc
jge
retf
mov
jle
es
mov
cmc
xchg
mov
pop
imul
push
mov
out
fsubr
imul
mov
add
dec
mov
mov
sub
mov
aas
mov
inc
pop
xchg
(bad)
mov
daa
out
imul
jae
shl
or
in
ror
xlat
cmps
pop
jg
ja
mov
mov
jbe
aas
cmps
or
jmp
xchg
(bad)
mov
fcmove
sbb
pop
add
movs
sar
dec
mov
aad
mov
jb
jne
dec
mov
jbe
ds
mov
outs
cmps
lea
stos
aas
movs
mov
in
fcomp
das
mov
fisub
mov
dec
ins
sar
cmp
or
mov
rcl
cs
ins
mov
jecxz
loop
packssdw
sbb
ins
(bad)
pop
or
adc
ret
ret
mov
mov
jecxz
or
push
cmp
pop
mov
or
(bad)
lock
mov
adc
cwde
and
xchg
scas
adc
shr
or
fiadd
mov
mov
pop
jno
into
ret
jo
daa
out
fsincos
mov
jns
sub
in
fsubr
aam
fidivr
xchg
dec
mov
dec
daa
xchg
aaa
lds
mov
sub
stos
jg
(bad)
lock
cmps
mul
mov
call
mov
mov
jmp
adc
int
mov
pop
mov
jbe
cmps
(bad)
sub
out
ins
scas
dec
mov
dec
mov
fwait
and
aas
movntps
les
(bad)
sbb
mov
hlt
mov
daa
ins
adc
pop
cmp
shl
jmp
xor
call
cmc
push
enter
cmps
mov
inc
scas
sub
cmps
mov
dec
mov
jae
repnz
pushf
push
inc
cmps
mov
mov
scas
ret
es
ins
mov
mov
dec
movsx
sti
cmp
mov
sub
in
imul
lods
das
(bad)
mov
adc
nop
add
mov
clc
sub
ins
into
retf
cmp
xor
out
ins
mov
int3
(bad)
(bad)
mov
cmps
dec
aas
test
cmp
inc
lea
mov
ins
push
jge
test
(bad)
and
popf
mov
inc
dec
jecxz
xchg
movs
jge
sub
or
fmul
repnz
enter
adc
xchg
jns
movs
xchg
mov
pop
aas
sub
pushf
mov
daa
cmova
ins
not
pop
dec
stos
imul
mov
ja
or
mov
mov
sub
mov
imul
inc
mov
mov
push
add
lea
out
mov
xchg
movs
mov
xchg
in
mov
scas
mov
mov
mov
sahf
enter
sar
xchg
sahf
and
shl
pop
pop
(bad)
in
aas
cmp
dec
jge
out
adc
mov
in
test
jns
cmps
mov
cmp
mov
ja
jg
mov
stos
mov
inc
mov
imul
ins
das
xchg
jge
das
push
icebp
enter
mov
cmps
jg
ins
test
push
mov
mov
retf
ins
pop
scas
stc
in
xchg
jg
sar
xchg
je
es
ins
mov
mov
ins
mov
lods
psubusw
adc
movs
vshufps
mov
lea
dec
stos
(bad)
jmp
adc
lea
ja
fwait
or
fcmovu
xor
mov
cmps
ins
sub
jge
aas
cdq
(bad)
scas
mov
jnp
fist
sub
and
test
push
xor
mov
fisttp
mov
mov
mov
(bad)
nop
adc
jmp
test
(bad)
jmp
push
xchg
int
jge
push
mov
scas
cld
push
rcl
jl
loop
pop
imul
addr16
pop
xchg
mov
lahf
pop
push
in
or
arpl
mov
pushf
cwde
add
mov
inc
adc
ins
int
mov
lea
mov
cmp
sub
mov
aaa
cmps
mov
mov
dec
pop
mov
js
jg
jmp
addr16
xchg
lea
add
cmp
sbb
fwait
dec
mov
mov
dec
ja
push
fnstcw
cmp
jae
mov
lahf
adc
int
mov
xchg
mov
out
inc
sub
iret
fstp
cmps
dec
add
push
ins
mov
and
outs
popa
inc
shr
adc
mov
push
sbb
and
int
or
mov
xchg
jo
xor
mov
pop
fld
pop
and
loopne
cli
dec
mov
call
sahf
ins
cld
cmp
aaa
out
scas
fs
push
sbb
cmp
add
dec
cdq
mov
fmul
(bad)
mov
es
mov
out
xor
rol
dec
das
data16
test
aad
repz
mov
xchg
xchg
dec
ss
je
or
adc
dec
push
test
scas
lock
cmps
out
popf
in
push
xchg
out
js
push
xchg
sbb
icebp
sbb
jno
rol
add
mov
jmp
pop
add
out
dec
dec
sub
cmc
test
jmp
ins
(bad)
ds
(bad)
sub
and
or
fwait
inc
clc
shl
jmp
xchg
or
lds
cmp
(bad)
(bad)
jo
test
fwait
nop
lods
shl
ret
sub
sub
ret
push
add
mov
rcl
(bad)
dec
pop
lods
dec
jbe
ins
xchg
inc
xlat
push
adc
leave
cld
mov
pop
scas
enter
mov
fldl2e
or
cmps
frstor
test
adc
xchg
mov
enterw
sbb
jmp
xchg
rol
add
jb
cmc
cmp
call
pushf
lea
je
cmc
bt
stc
add
pusha
cmc
push
call
jmp
lea
je
stc
call
enter
sbb
inc
or
cdq
stos
ret
push
cmc
aam
inc
int3
dec
aaa
xchg
jle
inc
rcl
mov
inc
mov
push
push
or
and
test
aam
idiv
(bad)
add
in
hlt
inc
jnp
call
mov
popa
in
mov
or
and
mov
movs
xchg
pop
sub
fiadd
and
cwde
popa
sub
add
cmp
and
ins
mov
jle
bound
ins
mov
shl
fnstcw
xchg
mov
and
pushf
mov
jmp
push
call
fisub
jne
(bad)
(bad)
out
fsub
cwde
arpl
pusha
pushf
ret
xor
xchg
dec
and
add
outs
dec
mov
push
outs
xchg
gs
mov
jg
adc
dec
pop
ret
imul
push
cmp
add
out
mov
fbstp
jo
or
clc
retf
and
retf
mov
icebp
mov
loopne
adc
rcr
movs
or
add
fnstsw
ret
sub
rcr
xor
rol
ror
retf
mov
scas
push
cs
adc
jl
cmp
out
pop
pop
xchg
pop
out
stos
fcomp
jne
jnp
cmp
pop
jno
and
sbb
(bad)
cmps
fldenv
test
mov
aad
jns
xchg
xchg
dec
imul
leave
ss
fild
xchg
sub
mov
pop
imul
pop
aas
call
inc
out
or
add
hlt
aam
or
sub
imul
je
pop
int
push
js
adc
mov
pop
xchg
lahf
inc
push
ficomp
(bad)
jbe
fs
je
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
adc
bt
test
cmp
push
lea
jae
pushf
mov
mov
lea
jmp
mov
lea
jne
adc
mov
stc
push
push
call
or
fs
(bad)
shr
shl
sub
pop
test
push
imul
mov
sar
sbb
xor
sub
fsub
sub
(bad)
mov
inc
fs
add
mov
or
std
test
xor
neg
pop
pop
cmp
push
jl
sbb
in
dec
dec
into
in
jae
test
cs
xchg
mov
ss
xchg
jns
fsubr
jmp
add
xchg
xlat
neg
cmps
repz
jo
xchg
fdiv
(bad)
popf
ins
mov
add
js
dec
push
push
into
cmp
cmp
or
pushf
test
addr16
shr
mov
fcomp
call
adc
xchg
(bad)
jl
xchg
add
mul
jmp
dec
xchg
cmc
xor
xchg
sub
in
add
cmp
call
call
lea
call
pushf
pushf
mov
lea
jae
bt
stc
pusha
xor
mov
mov
lea
call
call
in
push
mov
(bad)
jp
imul
xor
imul
ss
mov
mov
data16
clc
(bad)
cmc
mov
fstp
mov
inc
mov
xchg
out
aad
outs
xchg
jno
imul
mov
dec
cmc
push
mov
out
mov
sbb
cwde
ins
xor
add
retf
stos
imul
xchg
pop
jne
lods
adc
cmp
cmps
push
dec
or
mov
leave
int3
xor
(bad)
sub
mov
mov
mov
ins
je
inc
push
outs
cmc
frstor
lods
add
fcmovnbe
add
cmp
ret
sti
aas
or
jb
ret
sbb
js
lods
sbb
mov
push
frstor
daa
sbb
or
fwait
mov
push
rol
sub
loope
jb
or
clc
xor
jno
inc
jne
pop
push
jecxz
in
jecxz
dec
btr
cmp
mov
loope
jbe
add
sbb
pop
push
(bad)
hlt
or
add
enter
call
xor
pop
sub
mov
xchg
(bad)
mov
loopne
(bad)
cmp
xchg
test
cwde
ins
sub
call
dec
add
dec
mov
pop
inc
aam
out
mov
add
jmp
retf
mov
add
xchg
and
add
push
push
xor
repz
cmps
lods
fsubr
cmps
cmps
mov
int
mov
addr16
(bad)
(bad)
rol
arpl
and
leave
aas
sub
mov
in
sub
jl
nop
aas
pop
pop
inc
mov
xchg
ins
push
ins
outs
sub
lds
pop
dec
(bad)
xor
xlat
pop
lds
in
out
call
xchg
test
add
cmp
jle
popa
jg
imul
test
ins
mov
stos
cmps
jl
adc
mov
cmp
and
or
xchg
push
aam
jns
inc
pushfw
pop
clc
ror
cmc
mov
pushf
rol
pusha
add
cmc
cmc
push
ror
pushf
mov
not
pushf
push
push
lea
jge
inc
clc
jae
pusha
push
popfw
pushf
pushf
push
inc
pushf
adc
lea
pusha
pusha
pushf
push
ret
call
call
inc
inc
sub
sbb
xchg
pusha
mov
sar
jmp
or
sbb
fyl2x
jno
jae
pop
repz
fisub
xchg
jle
adc
mov
push
add
and
or
xchg
or
add
dec
fistp
mul
jns
push
imul
bound
mov
sub
mov
dec
add
aad
int3
das
mov
dec
mov
jnp
shl
aas
adc
sbb
xchg
imul
das
xor
push
adc
loop
jnp
xchg
ret
sub
jb
aas
(bad)
jno
push
inc
sahf
mov
call
xchg
sub
adc
stos
xor
retf
test
ret
fwait
in
pusha
adc
xlat
mov
leave
push
lods
movs
jmp
push
repz
jo
out
(bad)
call
mov
sbb
or
mov
add
xchg
sbb
mov
jp
ja
dec
out
pop
mov
pcmpeqd
(bad)
in
xchg
lock
mov
push
mov
dec
jo
add
sub
test
pop
aaa
retf
mov
test
jmp
aam
nop
and
sbb
adc
cmps
jnp
fnstcw
mov
add
xor
xor
jnp
pusha
daa
into
shr
div
mov
and
sbb
inc
mov
ret
add
xor
pop
std
std
mov
outs
call
push
jg
xor
dec
or
mov
pop
xor
xor
das
fistp
loope
dec
dec
or
aam
pop
int
mov
mov
xor
xchg
mov
sbb
add
imul
jecxz
xchg
push
es
add
test
test
adc
fimul
fs
jb
cmc
cmp
cmp
pusha
call
call
ja
sbb
in
sub
cmps
movs
and
inc
out
xchg
sbb
aam
faddp
ds
js
dec
sbb
xchg
cmp
loopne
into
jnp
fidivr
sahf
rcl
inc
inc
xor
fimul
add
fs
cmps
sub
in
icebp
pop
jecxz
(bad)
stos
repnz
fsub
cli
add
push
cmp
retf
(bad)
pop
scas
jns
cmps
sub
gs
jne
push
gs
popa
jb
add
adc
adc
pop
es
sub
pop
adc
loope
sbb
add
pushf
mov
dec
test
cmc
pusha
shl
call
(bad)
(bad)
sub
jne
sub
test
cmp
xchg
(bad)
sub
push
sbb
add
(bad)
sub
mov
push
sub
push
(bad)
cmp
shr
lods
(bad)
sub
(bad)
int3
sub
enter
mov
sub
add
cmp
mov
jae
add
push
sub
sahf
sub
add
push
sub
pop
jne
add
push
sub
sbb
add
push
sub
mov
cmp
clc
push
sub
mov
imul
add
cmp
or
add
(bad)
sub
push
(bad)
cmp
adc
add
(bad)
sub
mov
imul
xor
jg
(bad)
xor
sbb
mov
leave
das
outs
push
push
ror
jbe
sub
mov
push
adc
mov
cmp
and
xchg
idiv
dec
retf
mov
ins
punpckhbw
push
dec
mov
sbb
pop
pop
and
stos
repnz
mov
inc
int3
fwait
addr16
adc
and
cwde
and
add
pop
rol
xchg
setno
push
dec
aam
(bad)
pop
sbb
sbb
or
xchg
dec
gs
outs
adc
pop
push
loopne
rcl
in
pop
pop
add
mov
aaa
std
mov
push
ja
stc
pop
fadd
mov
sbb
fstp
jbe
fstp
stos
xchg
xchg
retf
(bad)
cmp
mov
dec
outs
icebp
adc
sbb
adc
sub
and
test
push
shr
push
dec
xor
aam
js
dec
and
lods
jp
mov
stc
xchg
(bad)
pop
call
addr16
(bad)
dec
mov
adc
repnz
jno
adc
jae
stos
arpl
rcl
inc
xor
fwait
push
loopne
jmp
push
inc
out
lahf
lahf
jmp
(bad)
(bad)
out
popf
jnp
jmp
xor
xor
xlat
adc
mov
mov
add
cdq
mov
jmp
repz
add
mov
adc
and
and
stos
or
mov
xchg
cld
mov
and
push
sbb
xchg
(bad)
call
dec
sar
push
loopne
imul
adc
mov
ror
jmp
clc
out
dec
mov
cdq
or
push
or
and
loope
lds
jb
pop
sub
sbb
mov
je
pop
gs
stc
mov
movs
jmp
ins
dec
dec
push
add
sub
mov
sub
rol
mov
shl
ror
mov
jmp
aaa
push
mov
pop
loop
mov
add
cwde
jne
ss
mul
(bad)
mov
inc
fnstenv
jo
push
sti
in
(bad)
hlt
mov
inc
sahf
movs
inc
jle
daa
std
push
jmp
je
lds
aaa
jmp
fisttp
repz
arpl
je
pop
cmp
fcomp
les
cmps
(bad)
je
sbb
repnz
call
lock
or
popf
jno
rcr
jno
pop
out
mov
fdivp
popf
add
movs
cmp
xor
pop
js
sub
addr16
add
adc
shr
in
aas
jnp
fld
test
js
lock
mov
mov
push
add
mov
hlt
mov
cmps
dec
and
xchg
adc
sub
jle
xor
loope
and
sub
(bad)
imul
je
stos
mov
pop
fnstenv
into
ja
add
mov
mov
pusha
jmp
inc
jb
pusha
sbb
dec
add
xchg
(bad)
arpl
xadd
add
jnp
loop
dec
fst
inc
jo
ror
in
mov
cdq
mov
or
mov
or
xchg
mov
mov
pop
ret
cmp
lock
cmp
xchg
xchg
xchg
daa
arpl
add
push
jg
adc
inc
push
ss
fimul
js
loopne
push
in
add
jnp
mov
movs
inc
add
mov
mov
out
sbb
mov
mov
out
shl
(bad)
adc
sub
enter
mov
or
dec
rol
leave
ret
(bad)
jl
loop
inc
mov
in
imul
push
sar
mov
stos
jl
inc
mov
adc
ds
add
cs
in
popa
push
movs
mov
mov
mov
add
sbb
int
popf
(bad)
scas
dec
jns
out
add
pop
div
sub
popa
inc
out
aad
or
sub
mov
or
int
fisttp
sbb
lock
ds
test
adc
(bad)
iret
jnp
fcom
shr
mov
jo
push
inc
popf
test
dec
mov
call
mov
jle
icebp
jne
cmp
dec
adc
push
aas
pusha
icebp
or
lods
js
sbb
adc
jno
ret
mov
(bad)
xor
push
lods
add
(bad)
in
scas
clc
or
and
gs
call
jmp
in
into
std
sub
sub
xor
lea
adc
lods
mov
test
ss
into
je
cmps
mov
hlt
fsub
bound
cmc
leave
ror
mov
fild
sbb
mov
cmps
stc
dec
dec
mov
xchg
mov
mov
movs
dec
jnp
std
xchg
dec
cld
mov
lods
gs
mov
ror
sub
adc
jl
stos
ja
jo
gs
ficom
es
ror
loop
(bad)
dec
sub
or
adc
cmp
cmps
add
shl
mov
mov
mov
mov
es
mov
inc
repz
adc
sti
icebp
iret
in
pop
popf
or
inc
push
sbb
je
push
aad
hlt
xor
(bad)
fwait
in
loope
and
les
(bad)
push
mov
adc
add
add
mov
push
and
fisttp
adc
fnstenv
adc
sbb
jle
out
mov
cdq
and
ins
sar
test
fidiv
popa
add
cmp
or
call
adc
ret
jbe
sub
pop
mov
mov
(bad)
cdq
(bad)
fist
pop
or
push
fisttp
test
mov
(bad)
adc
inc
stos
loop
mov
repz
adc
mov
xcrypt-cfb
cmps
and
mov
sahf
cmps
pop
hlt
fs
bound
loope
push
lea
ds
leave
pop
add
adc
daa
daa
idiv
imul
test
mov
cli
xchg
jge
push
movs
inc
into
stc
mov
popf
stc
ror
sahf
in
cmp
mov
shl
stc
jb
(bad)
loop
push
xchg
fisttp
and
dec
pushf
or
test
jbe
sbb
shr
cmp
mov
lods
dec
jmp
mov
cdq
(bad)
pop
cmp
loop
jp
add
imul
test
lods
aam
add
rol
std
lahf
push
sbb
xlat
popa
inc
test
jae
stos
cs
pop
in
inc
shl
dec
neg
(bad)
aaa
or
mov
inc
pop
es
xor
loop
popa
and
popa
sbb
neg
push
fwait
mov
mov
aas
lahf
sub
aam
pushf
xor
sahf
pop
scas
scas
adc
inc
xchg
jmp
jl
push
pop
shr
repz
mov
lods
into
ror
xchg
(bad)
xor
xor
adc
dec
jge
mov
loop
jg
mov
sub
jle
xchg
pop
adc
or
clc
retf
les
repz
lahf
mov
pop
sti
out
pusha
inc
add
or
sub
into
cmps
pop
mov
(bad)
pop
daa
sub
pop
icebp
in
push
call
imul
clc
bt
mov
add
pushf
push
lea
jmp
lea
je
bt
or
jmp
lea
jae
setp
pusha
pushf
call
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
mov
cmp
jmp
mov
lea
je
push
lea
jmp
xor
push
data16
hlt
fwait
inc
retf
pop
pushf
pop
aas
inc
push
xor
pop
lds
ds
xlat
pop
out
bswap
cmp
jp
popf
call
sub
mov
adc
or
rcl
jl
pop
les
pop
cmc
hlt
(bad)
ror
mov
std
pop
clc
int3
mov
pop
mul
adc
dec
movs
popf
outs
mov
mov
movsx
push
adc
test
mov
test
sub
bt
lea
dec
inc
push
adc
shl
push
sub
bsf
aaa
shl
push
mov
neg
pusha
mov
jmp
inc
inc
in
data16
inc
dec
or
sub
js
push
and
cld
push
pop
pop
cmp
inc
cmps
mov
mov
inc
mov
or
adc
jmp
cmc
(bad)
sbb
cmps
xchg
je
xchg
popa
loope
fisttp
xchg
mov
jg
inc
jp
mov
mov
push
or
cli
adc
in
xchg
(bad)
repnz
adc
xchg
int3
inc
jge
movs
mov
sbb
rcr
add
addr16
adc
sub
repnz
push
adc
sahf
jp
leave
cmp
test
sub
push
js
mov
dec
inc
sbb
jno
push
sbb
xchg
dec
movs
push
fs
add
sbb
mov
inc
shr
(bad)
(bad)
push
in
pop
nop
inc
fs
lahf
pop
jnp
cdq
imul
mov
or
mov
sahf
in
sbb
dec
sub
xor
jno
xlat
add
sbb
(bad)
cli
mov
push
sar
add
setge
div
xchg
push
push
dec
dec
add
or
in
adc
sbb
fcomp
aaa
sub
jge
push
les
fwait
sbb
xchg
add
cwde
enter
cmp
pop
jnp
arpl
pop
scas
xchg
sbb
mov
leave
cmp
sbb
adc
es
adc
cmps
fcomp
outs
icebp
and
sbb
adc
mov
and
cmp
ds
pop
pop
lods
repnz
cmp
(bad)
loope
xchg
ins
retf
mov
inc
(bad)
sub
jmp
sub
inc
add
cmps
adc
dec
push
or
mov
mov
movnti
and
ror
xchg
in
or
mov
dec
xchg
cmp
and
ret
shl
mov
xor
fisub
sbb
les
out
enter
adc
int
imul
add
xor
pop
jg
add
ret
adc
sub
jo
add
loop
cmp
outs
lock
(bad)
popf
xchg
inc
sbb
and
mov
mov
xchg
cmp
jns
cmp
stos
pop
ds
mov
cmp
push
mov
add
inc
imul
lods
mov
jmp
xchg
cdq
mov
cli
pop
adc
push
jmp
dec
test
jmp
jno
jge
push
and
cmp
push
xchg
enter
push
stos
fld
dec
rol
repz
inc
test
fisubr
repnz
inc
out
push
add
aas
frstor
xor
(bad)
xchg
xlat
outs
movs
adc
ror
inc
ss
imul
outs
fisub
or
xor
xor
jns
mov
fld
pop
test
cld
add
ret
cmp
adc
jecxz
jae
dec
outs
adc
into
sub
mov
inc
add
fisubr
xchg
loopne
movs
pop
adc
lods
ret
daa
movs
in
jno
push
xchg
cmp
add
inc
sub
das
xchg
adc
xchg
enter
cmps
addr16
int
mov
sub
cmps
add
stos
pusha
lea
jmp
clc
cmc
bt
sub
dec
bt
lea
sbb
add
mov
jmp
push
(bad)
in
and
loop
or
je
mov
mov
loop
xchg
cmp
ins
ss
pushf
jno
adc
pushf
inc
cmp
inc
stc
jle
(bad)
repz
xchg
add
es
vshufps
jb
mov
loop
jp
inc
loope
xor
movs
xor
mov
mov
xchg
fnstenv
jb
je
sub
repnz
mov
test
dec
pop
arpl
jno
idiv
call
lock
sub
(bad)
jmp
pop
inc
in
scas
xchg
pop
pop
mov
dec
das
mov
gs
outs
out
mov
out
aam
(bad)
aam
and
enter
loop
adc
int
add
mov
xchg
sti
xchg
arpl
sub
cmp
ret
pushf
cmp
pop
sub
dec
mov
pop
pop
xchg
mov
das
jp
jmp
jnp
ins
adc
sub
je
add
je
sub
xor
mov
sbb
sub
out
fld
and
daa
add
cmp
dec
dec
lods
arpl
sbb
xchg
pushf
sar
push
push
sub
enter
loopne
int3
pop
mov
or
call
int3
arpl
inc
xor
mov
retf
bound
dec
add
into
dec
mov
xor
(bad)
int
test
nop
imul
jbe
mov
mov
ins
sbb
sbb
lds
and
adc
or
push
cmps
shl
fnstenv
mov
cmc
pop
fdivrp
movs
xchg
cmps
xchg
xchg
pop
out
xchg
push
in
cld
sbb
pop
mov
sub
xchg
inc
repnz
mov
push
dec
adc
rcr
test
and
pop
jmp
xor
and
lock
mov
loopne
ins
jne
mov
data16
(bad)
(bad)
cmp
fstp
lock
cmp
popf
xor
call
and
mov
pop
pusha
retf
loopne
js
imul
xor
dec
sbb
push
stos
add
add
dec
arpl
mov
push
push
mov
mov
ins
mov
jg
sub
jg
loop
gs
fcomp
xor
xchg
pop
lea
out
mov
sbb
sbb
sbb
push
sub
jnp
(bad)
fsin
(bad)
push
rcr
push
bound
jl
data16
fsubr
dec
movs
dec
lock
mov
sub
data16
sbb
sbb
stos
and
sbb
enter
mov
xor
mov
mov
and
lds
icebp
addr16
dec
cmp
push
mov
push
gs
xchg
pop
xchg
jp
push
lods
outs
sbb
xchg
ss
movs
stos
fs
sbb
mov
cmc
lods
repz
xor
cld
mov
jmp
(bad)
push
jmp
push
in
cmps
jno
dec
outs
adc
shr
mov
fwait
sbb
fnstcw
and
mov
sbb
adc
add
mov
mov
(bad)
movs
mov
repnz
(bad)
sar
repnz
in
adc
add
jb
push
adc
rep
lea
mov
mov
push
pusha
lea
jmp
jo
dec
outs
sbb
stos
rcl
dec
mov
fisttp
sbb
fst
test
enter
loopne
sub
jecxz
push
bswap
stos
mov
sub
push
(bad)
div
pop
cmp
dec
mov
int
test
push
push
and
fdiv
cmps
sti
shl
xchg
xchg
cmc
jae
dec
sbb
adc
and
mov
mov
pusha
cmp
stc
test
mov
lea
je
stc
pushf
pusha
mov
add
cmc
call
neg
shl
xchg
pusha
lea
movsx
pop
setbe
btc
mov
bsr
mov
sbb
mov
clc
cmc
not
mov
inc
btr
mov
adc
bsf
xchg
mov
not
test
bt
add
mov
pushf
mov
bt
cmc
or
call
mov
push
sbb
jmp
es
adc
(bad)
vshufps
hlt
ins
sbb
xchg
outs
sub
fild
aaa
test
(bad)
out
pop
push
lods
xchg
aam
hlt
push
adc
data16
adc
push
add
cmp
jg
add
or
inc
fnsave
xor
mov
and
push
pusha
mov
lds
mov
outs
cmp
adc
fadd
enter
pushf
call
nop
or
int
repnz
jle
mov
cdq
push
sbb
pop
arpl
int3
test
or
mov
push
sbb
jmp
ret
and
fld
dec
and
adc
(bad)
ficom
or
xor
nop
movs
and
rol
in
jae
clc
jg
call
or
scas
inc
rcl
inc
xor
hlt
int3
mov
pop
pop
cmp
mov
out
adc
lods
loopne
mov
dec
mov
sub
sub
lods
ret
int
lock
idiv
push
fucomp
call
test
sbb
outs
mov
jo
mov
mov
fbld
add
cmp
rcr
sbb
dec
nop
add
out
xor
mov
xor
and
xor
stc
and
push
les
sub
int3
mov
adc
cld
sbb
jmp
outs
(bad)
ss
push
leave
movs
leave
jbe
repz
lods
aas
ss
adc
call
call
cmp
xor
pop
push
test
rcr
lahf
in
in
arpl
pop
(bad)
or
inc
retf
and
sbb
into
outs
jno
push
mov
mov
mov
and
dec
jb
cld
sub
out
mov
mov
dec
jge
push
sbb
out
loop
jns
pop
xchg
lods
dec
xor
xchg
aaa
cmp
push
pop
repnz
scas
aaa
sub
ins
in
pop
pop
add
(bad)
pusha
push
loope
fbstp
gs
in
mov
icebp
lahf
or
loopne
sub
xchg
idiv
idiv
scas
ret
cmp
imul
or
and
push
fwait
(bad)
adc
mov
dec
push
and
add
xchg
lods
xchg
sub
sub
mov
inc
jp
push
and
dec
mov
test
jl
sti
adc
mov
rcr
pop
add
mov
mov
pusha
jmp
inc
std
fs
sbb
mov
fcom
cmp
mov
jb
xchg
sbb
dec
outs
(bad)
mov
sub
push
loope
cs
and
dec
ins
dec
repnz
mov
popf
jg
mov
jg
push
and
jg
movs
std
sub
mov
mov
cmp
inc
sbb
adc
and
fsub
pop
shl
inc
mov
dec
mov
ins
cmp
add
jae
popa
addr16
outs
js
add
(bad)
xor
ret
xchg
mov
(bad)
adc
test
scas
adc
xlat
push
lods
push
lods
out
fmul
fs
xor
mov
jne
movs
xlat
adc
xor
sub
arpl
adc
push
fidiv
ss
mov
dec
add
adc
push
fs
pop
fwait
jp
cmps
xchg
aad
push
int
or
test
inc
add
push
mov
ret
(bad)
sar
dec
mov
pusha
cmps
push
dec
lods
mov
xchg
stc
clc
sub
sbb
btc
lea
lea
cmc
pushf
clc
pushf
sub
cmp
push
pop
mov
pushf
cmp
mov
lea
ja
jmp
fidiv
push
sbb
test
scas
xor
lods
adc
retf
cld
cwde
fidiv
mov
imul
into
dec
int3
(bad)
fldenv
or
and
pop
mov
jb
daa
mov
imul
xlat
fcomp
std
pop
push
aam
mov
xchg
or
push
gs
ins
outs
jae
dec
gs
push
lea
jae
pusha
lea
je
call
mov
or
xor
dec
jbe
and
sbb
(bad)
aam
es
dec
nop
xchg
sbb
push
lahf
ins
test
(bad)
retf
pop
mov
dec
add
jp
(bad)
repz
leave
sub
in
test
test
jb
je
mov
dec
add
imul
inc
pop
out
sbb
mov
outs
mov
cmp
sub
mov
mov
pusha
pushf
mov
pusha
mov
pushf
pushf
lea
jmp
push
pushf
pusha
pushf
push
ret
jle
push
push
sbb
leave
mov
int
jne
dec
add
push
in
lods
xchg
push
xor
cmp
mov
sub
add
bound
dec
xchg
iret
cdq
xchg
popf
imul
mov
inc
jns
push
int3
mov
std
add
ins
mov
jo
mov
push
xor
stc
test
sbb
inc
pop
xor
sbb
(bad)
ds
paddsb
rol
lea
out
cmp
js
inc
push
sbb
mov
cld
xor
add
sub
jmp
out
sar
add
shl
xor
mov
(bad)
icebp
xor
in
jno
adc
jmp
das
add
in
aas
push
inc
call
xchg
inc
mov
fdivr
ins
pop
jne
div
mov
xor
xchg
jno
int
jae
xchg
push
mov
sbb
sub
jnp
mov
scas
or
(bad)
jmp
fs
jb
jmp
enter
sbb
aas
neg
mov
dec
dec
sbb
out
dec
out
inc
push
inc
and
loope
xchg
jge
das
mov
fiadd
loope
outs
adc
aam
pop
mov
dec
xor
cmp
neg
and
dec
push
lods
and
loopne
jp
jae
or
loop
or
jnp
mov
dec
xor
(bad)
loop
dec
arpl
sbb
jge
pop
jae
sbb
test
out
mov
sbb
scas
shl
fadd
aaa
cdq
cmps
loopne
fstp
outs
shl
xchg
add
fcmovu
dec
nop
ja
sbb
ins
and
mov
push
clc
sar
mov
sbb
loope
add
call
int3
mov
cmps
add
add
mov
mov
loop
xchg
push
sub
outs
mov
mov
das
test
push
popf
sahf
fadd
(bad)
push
jne
inc
sub
push
or
repz
pop
jp
in
retf
test
sar
mov
dec
call
or
cli
test
jb
push
icebp
and
in
int
lock
pop
ss
adc
jl
aaa
dec
call
inc
mov
in
clc
jbe
outs
mov
scas
push
mov
or
mov
add
je
outs
arpl
push
imul
pop
sbb
or
inc
sub
sbb
cmps
fnstenv
jge
sub
pop
push
leave
fst
ret
xlat
cmp
out
mov
ficom
sbb
push
int
jae
and
lds
jnp
inc
movs
ror
sbb
ins
aam
imul
pop
mov
push
enter
arpl
out
cmp
sub
(bad)
sub
out
adc
jle
(bad)
dec
and
or
cli
mov
and
add
mov
repnz
out
sbb
(bad)
ds
(bad)
xchg
mov
xchg
mov
in
inc
outs
repz
daa
sar
stc
push
and
out
lock
mov
bound
fwait
adc
repnz
and
mov
pusha
pushf
pushf
pushf
lea
jmp
pop
movs
pop
sbb
xchg
xchg
jmp
aam
add
mov
sar
cmps
inc
xchg
mov
xlat
lods
xchg
les
(bad)
out
gs
push
push
mov
sub
push
dec
retf
xor
and
push
scas
mov
(bad)
jns
in
sbb
jae
sub
pop
xchg
addr16
fiadd
xlat
dec
out
cmp
imul
push
jmp
sub
add
xbegin
xchg
retf
jge
mov
cld
inc
adc
pop
stos
sub
push
fs
aad
cmp
jb
nop
pop
xchg
sub
mov
and
sub
and
jne
in
test
and
cs
cmp
xor
sar
es
or
rol
movs
call
sbb
(bad)
sahf
sub
int3
sub
jbe
bound
in
loopne
ins
adc
jne
sahf
hlt
(bad)
jno
add
ins
cmps
cmc
cmp
cdq
dec
mov
call
repz
(bad)
into
mov
adc
sahf
and
jge
sub
lock
out
icebp
clc
cli
mov
adc
adc
enter
push
jo
inc
xchg
jnp
test
mov
iret
jg
retf
dec
adc
dec
pop
dec
or
push
push
pop
add
mov
call
test
mov
nop
xchg
(bad)
push
retf
movs
adc
clc
and
sti
ret
out
xlat
adc
mov
(bad)
push
movs
xor
lea
sahf
in
(bad)
pop
in
adc
mov
add
sbb
out
mov
mov
mov
aas
cmp
nop
fs
jmp
xor
and
push
xchg
pop
fiadd
pushf
ja
addr16
sub
aaa
test
dec
repz
shl
dec
fadd
sub
inc
test
jo
adc
mov
lds
jnp
sbb
push
in
outs
xor
adc
shl
or
mov
mov
jbe
mov
cmps
cld
into
mov
pop
cmp
popa
iret
retf
sahf
cmp
js
into
pop
icebp
pop
sbb
addr16
push
in
inc
push
lods
jg
cwde
xchg
push
push
cmp
sub
lods
call
shl
imul
dec
mov
mov
xor
ins
mov
mov
daa
clc
out
adc
imul
test
sti
or
jb
inc
inc
test
cmps
movs
popf
movs
inc
fs
or
pop
sbb
loopne
pop
jmp
or
xlat
sub
or
(bad)
or
xchg
and
mov
xchg
and
shr
jb
dec
in
dec
push
adc
ja
ds
lds
ret
data16
das
xchg
cdq
imul
and
cld
psubb
mov
add
sub
mov
xor
sub
into
cmp
push
dec
cld
cwde
mov
loop
dec
mov
cld
sbb
std
lods
rcr
dec
shl
dec
jae
test
mov
imul
mov
ins
nop
enter
ret
push
pop
mov
sub
push
dec
mov
(bad)
and
in
push
pop
dec
(bad)
loop
jp
(bad)
into
ss
push
cmp
push
pop
sbb
repnz
out
inc
fstp
int
cwde
(bad)
imul
rcr
sti
push
icebp
cwde
sbb
test
adc
xchg
sar
sub
loop
sub
aas
outs
cdq
rol
or
aaa
ins
push
(bad)
xor
mov
ret
inc
retf
dec
outs
push
jl
rol
dec
std
cmp
mov
sbb
sar
lods
aad
sbb
mov
push
adc
iret
or
jne
mov
movs
lea
jb
push
cmp
mov
jmp
sbb
pop
sbb
pop
add
int
adc
sbb
loopne
or
repnz
mov
lds
sbb
jns
xchg
or
xchg
xchg
or
in
test
mov
xchg
sti
push
loope
cmps
add
mov
xor
inc
xor
aad
sub
mov
aam
cmp
les
jb
sub
scas
stos
es
lods
pop
adc
pop
sbb
jmp
add
mov
and
add
and
ds
clc
aas
or
dec
ret
in
inc
pop
sbb
mov
jno
into
jp
sub
pop
loope
mov
loop
jne
pop
jmp
fld
cwde
or
sub
mov
stc
sub
loop
dec
pop
pushf
int
movs
lock
and
call
dec
retf
sub
push
add
test
je
cdq
push
cdq
cmp
xchg
mov
retf
dec
add
(bad)
xchg
fcomp
push
and
xor
dec
jl
xor
not
leave
aas
mov
sbb
je
lea
ja
add
jnp
movs
fstp
pop
push
out
jae
cmps
gs
arpl
sbb
xor
arpl
and
add
mov
pop
lds
mov
jl
test
pop
(bad)
cmps
jg
leave
shr
inc
cmp
mov
js
call
sbb
or
stos
xlat
lahf
pusha
pop
js
xor
(bad)
fild
xor
push
mov
inc
cs
pop
sbb
jnp
jo
or
jge
cmp
xor
xor
sub
xchg
popf
adc
sar
cdq
(bad)
lock
push
sub
ja
push
mov
ins
jecxz
hlt
and
idiv
out
fld
in
adc
inc
or
stc
adc
inc
xchg
adc
mov
push
bound
nop
adc
xchg
mov
pop
call
outs
mov
js
jnp
in
stc
call
mov
push
or
cmps
cmp
mov
pop
inc
pop
add
inc
mov
jecxz
ret
dec
out
scas
lea
dec
push
pushf
xchg
mov
mov
cdq
xor
popa
pusha
sub
jg
data16
push
fstp
pusha
push
xor
ins
mov
and
xchg
jnp
cmp
(bad)
jg
jge
and
pop
stos
bound
scas
mov
dec
mov
imul
scas
push
retf
loopne
mov
jnp
jge
sub
xchg
lods
adc
popa
pushf
popf
mov
arpl
push
scas
fwait
xor
mov
dec
dec
pop
inc
ror
gs
mov
pushf
cdq
cdq
rol
dec
leave
xor
and
test
scas
sbb
jl
dec
push
pop
push
pop
retf
or
pop
xor
(bad)
in
push
scas
xchg
scas
stos
es
mov
lods
cmps
stos
arpl
bound
cmps
dec
or
scas
xchg
retf
jp
push
mov
jle
in
inc
sub
pop
ins
cmps
dec
es
mov
mov
mov
es
mov
sub
(bad)
ficom
out
nop
lods
pop
inc
lods
mov
rcl
push
sbb
jmp
nop
lods
mov
mov
push
jo
inc
inc
mov
nop
sti
stos
lea
mov
scas
mov
cmps
mov
inc
test
enter
jns
scas
shr
test
dec
in
mov
addr16
daa
pushf
shl
inc
in
outs
popf
jnp
stos
int
fwait
ds
ret
gs
xchg
(bad)
mov
fdivrp
fadd
mov
daa
ins
xchg
lods
cmps
push
rcl
mov
xchg
arpl
bt
mov
imul
and
mov
js
cmps
mov
mov
mov
movs
shr
and
mov
cmps
imul
(bad)
mov
(bad)
lods
mov
scas
mov
adc
out
fsubp
mov
int
scas
inc
fbld
jg
shr
jmp
out
addr16
aas
fsubr
xchg
sti
xor
(bad)
(bad)
sub
push
(bad)
push
cmp
dec
dec
dec
cmps
cld
test
xchg
sub
xor
lea
aas
push
stos
das
ss
in
ins
sbb
lahf
inc
sub
cmps
scas
and
sbb
sub
jmp
daa
nop
fs
arpl
mov
and
xchg
shrd
mov
lods
cmc
push
test
lods
sti
mov
(bad)
daa
pusha
fldcw
xchg
xor
shl
lods
push
mov
mov
int
daa
ins
sub
int3
dec
xchg
sub
sub
jl
arpl
cmp
dec
sbb
mov
hlt
mov
sub
(bad)
ficomp
xchg
mov
add
pop
cmps
(bad)
xchg
jl
jmp
jns
cmps
mov
xchg
ins
sub
scas
(bad)
int3
add
lods
pop
(bad)
ficom
imul
or
jmp
fmulp
adc
or
(bad)
and
aam
and
xchg
cmps
xchg
(bad)
and
js
cmps
ins
dec
retf
jbe
movs
cmps
inc
dec
daa
mov
or
jno
cmps
shr
xlat
and
icebp
sub
fwait
cmps
jg
cmps
fnstenv
ret
cmps
pop
xchg
scas
cmp
addr16
mov
xchg
jp
or
fimul
inc
mov
out
mov
mov
mov
mov
pushf
fwait
sub
stos
and
call
scas
xchg
xor
mov
lock
mov
xchg
jge
mov
imul
stos
xchg
daa
jmp
add
fidivr
scas
pop
or
mov
cmps
inc
push
mov
mov
pop
int
ins
mov
lahf
fiadd
jne
fistp
mov
sub
dec
test
jp
movs
mov
shl
xlat
fs
ja
lds
int
push
int
inc
mov
push
les
jl
cmps
adc
mov
ja
cmp
pop
or
iret
inc
xor
ja
sub
fiadd
ja
adc
repnz
jmp
mov
xchg
addr16
ja
sub
fimul
ja
imul
push
stos
xchg
cmps
or
jns
mov
daa
pop
lods
ficom
push
call
lock
mov
arpl
test
adc
lods
pop
iret
pop
push
sbb
dec
fiadd
push
xchg
outs
mov
imul
cmps
aas
movs
sbb
daa
(bad)
das
lods
addr16
push
lods
mov
and
xor
mov
inc
addr16
repnz
xor
push
xlat
imul
addr16
jbe
sbb
push
addr16
or
mov
or
push
addr16
mov
jns
in
mov
shr
mov
pop
or
mov
jl
jecxz
test
pop
sub
jmp
ret
test
test
mov
xlat
mov
std
push
mov
sbb
test
das
push
test
aam
iret
scas
scas
and
(bad)
mov
and
nop
cmc
xlat
mov
aad
test
mov
mov
(bad)
div
mov
inc
add
mov
mov
aas
xor
and
jmp
inc
mov
push
sub
imul
xchg
test
setnp
test
cmp
pop
push
pusha
movs
test
out
adc
mov
jmp
movs
(bad)
sub
dec
sahf
inc
jmp
mov
addr16
pop
leave
mov
leave
mov
mov
ins
inc
cld
jg
inc
jp
cmp
fwait
aas
pop
dec
sub
shr
cmp
push
jnp
xor
mul
and
aad
test
call
test
out
xor
retf
movs
sub
jg
imul
cmps
jl
iret
adc
test
dec
jg
lahf
add
inc
inc
jnp
sub
and
jnp
dec
mov
jne
inc
gs
mov
inc
arpl
xchg
jg
mov
cdq
out
scas
in
mov
sbb
sbb
lods
movs
mov
repnz
ds
inc
xchg
loopne
mov
push
call
hlt
aad
push
pop
ins
test
imul
xchg
mov
sub
gs
stos
sbb
mov
and
pop
jo
out
scas
imul
sub
pop
sub
sub
sub
in
dec
in
dec
in
jp
pop
mov
dec
xchg
jae
mov
mov
mov
mov
imul
popa
leave
movs
sub
mov
mov
movs
jno
cmp
cmps
jl
imul
imul
daa
adc
fidivr
stos
test
xor
cmp
imul
outs
mov
sbb
jmp
xchg
push
dec
sbb
dec
dec
and
xchg
inc
xchg
inc
cdq
dec
jbe
jnp
sbb
dec
mov
mov
or
lds
xchg
arpl
or
enter
movs
scas
mov
mov
xor
jge
ins
out
outs
rol
jge
call
and
stos
xchg
sub
dec
idiv
dec
cmp
pop
scas
outs
popa
or
mov
(bad)
dec
cmps
dec
add
or
cmp
neg
cli
dec
cmp
jno
mov
mul
fucomi
sbb
js
in
cs
jl
cwde
or
mov
mov
mov
pop
addr16
(bad)
xchg
dec
lds
xchg
cs
adc
mov
dec
movs
stos
ficom
cmps
mov
loop
mov
fld
mov
js
cmps
push
aaa
imul
inc
cmp
stos
mov
bound
scas
pop
adc
les
stos
mov
pop
and
fcomp
mov
push
mov
xchg
aas
addr16
xor
test
jae
dec
jns
or
sub
mov
push
dec
scas
xchg
sbb
sar
data16
jo
stos
aas
aam
pusha
jbe
mov
outs
mov
ja
aaa
inc
sub
repnz
clc
jl
ins
inc
daa
ins
jne
push
ins
test
call
cmp
add
(bad)
scas
out
out
cmps
cmp
and
mov
push
adc
mov
outs
lods
cmps
addr16
jbe
stos
mov
stos
arpl
in
(bad)
mov
daa
das
lea
bound
fld
xor
in
inc
push
or
xor
cmp
xchg
into
retf
mov
fmul
call
ss
shr
push
xor
out
jle
dec
pop
leave
out
mov
xor
mov
and
fs
sti
mov
movs
mov
mov
mov
add
stos
jmp
lods
jl
pop
outs
adc
push
aad
je
mov
mov
cmps
push
xor
mov
dec
add
jbe
jl
or
shr
aaa
aad
add
jp
xchg
stos
cs
and
sub
add
jge
dec
mov
arpl
push
cmp
jle
inc
sbb
sub
xchg
imul
jl
xchg
sahf
xchg
pop
xchg
sbb
icebp
jg
and
jl
pusha
loop
inc
mov
cli
pop
xor
mov
jns
fwait
clc
in
pushf
mov
in
inc
inc
bound
push
in
dec
xchg
popf
inc
mov
stos
dec
enter
popf
loope
mov
sahf
je
mov
movs
or
pcmpgtb
addr16
ins
jb
enter
sub
in
jbe
and
mov
inc
sub
fisttp
dec
mov
mov
and
in
xchg
dec
and
xor
outs
popa
jae
repnz
scas
or
push
adc
aas
mov
dec
jo
data16
sub
(bad)
mov
and
ins
jae
retf
jbe
sahf
mov
les
xor
mov
aad
jge
and
stos
sub
push
pop
cmps
test
mov
scas
mov
push
mov
xlat
ins
dec
mov
jb
jno
sub
sbb
in
stos
lods
sub
jns
pop
lahf
push
cmp
lahf
ds
outs
push
outs
mov
adc
sub
adc
pop
mov
stos
jne
idiv
aas
fwait
or
sbb
sbb
jge
xchg
mov
or
mov
pop
xchg
stos
scas
pop
and
(bad)
jbe
aaa
inc
add
imul
jae
loop
jnp
jge
out
das
dec
ins
dec
jo
mov
loopne
jl
ins
loop
jnp
adc
xor
int
xchg
mov
sub
outs
das
cmp
mov
std
dec
jno
mov
sub
or
shr
push
out
cmp
cmp
scas
stos
bound
push
xchg
repz
dec
or
or
push
and
(bad)
cmp
sub
or
daa
push
or
ins
js
scas
and
inc
shl
cmps
loop
aaa
retf
jge
mov
cmp
jle
mov
pop
movs
fwait
cmc
out
in
popa
mov
ins
fwait
inc
daa
xchg
adc
out
mov
push
inc
sbb
addr16
mov
mov
fidivr
sbb
mov
xor
movs
fimul
xchg
or
fcomp
cmp
xor
stos
mov
cmps
into
int3
dec
cmp
and
sbb
das
pop
div
sub
mov
push
jecxz
mov
loop
xchg
push
cld
mov
je
sub
jle
mov
cmps
dec
inc
xchg
aaa
mov
mov
aaa
or
inc
jb
pop
jecxz
outs
stos
mov
popa
dec
inc
xchg
imul
push
loopne
jge
inc
pusha
pop
xor
pop
arpl
dec
mov
add
jg
mov
ds
mov
dec
(bad)
in
xchg
push
mov
dec
out
sub
out
retf
mov
aam
fidiv
out
mov
dec
jmp
mov
sub
hlt
out
bound
scas
jmp
mov
loopne
dec
mov
pop
push
push
jg
xchg
scas
outs
ins
popa
dec
xchg
xchg
mov
dec
jp
add
xor
xchg
mov
arpl
jmp
mov
int
cmp
cmps
jl
retf
std
mov
cmp
repz
mov
stos
out
add
out
(bad)
jae
mov
xor
cmp
fs
ficomp
ret
sbb
aaa
mov
sub
cmp
fdiv
jge
out
arpl
gs
jo
gs
sbb
dec
cmp
mov
sbb
loopne
push
fadd
xor
sbb
les
jle
mov
gs
(bad)
pop
lods
cmp
cmp
sbb
pop
and
call
test
addr16
outs
mov
aas
cmp
sub
out
pop
dec
and
popa
lahf
jge
jle
cmp
lods
adc
into
stc
and
jns
dec
aaa
test
push
xchg
cmp
loope
sub
xchg
dec
xor
jo
dec
mov
and
stc
inc
push
pop
cli
and
jnp
and
das
cmp
test
cdq
leave
pop
jg
xchg
and
std
test
(bad)
cmp
in
sub
mov
stos
inc
mov
stos
inc
sahf
jbe
and
or
pop
jae
(bad)
pop
jge
mov
sbb
icebp
jno
push
(bad)
lods
xchg
add
test
aaa
in
sub
sub
xchg
lahf
cmps
jg
add
mov
mov
cmps
jg
(bad)
aas
cmp
add
cld
mov
retf
scas
cs
push
inc
mov
mov
cmp
scas
mov
push
aaa
lahf
aas
add
xchg
ror
pop
jno
popa
(bad)
add
cmc
ja
dec
rcr
cmps
mov
push
push
dec
inc
cmps
lds
push
inc
inc
sub
ds
outs
xchg
ja
dec
xchg
sti
mov
xor
daa
sbb
lahf
in
inc
adc
es
jne
xchg
inc
jg
(bad)
mov
lock
or
inc
(bad)
in
(bad)
repnz
ja
and
dec
mov
dec
inc
jns
pop
jnp
dec
add
lods
push
jle
je
jae
pop
or
xchg
or
sub
jge
mov
sahf
mov
mov
stos
add
mov
fidivr
cmp
xchg
arpl
mov
jbe
cmp
xchg
mov
cmp
dec
mov
or
add
movs
dec
dec
xor
leave
shl
or
ret
mov
pop
mov
cmp
jno
xchg
inc
aaa
push
aaa
setae
jo
mov
cmp
sbb
and
mov
and
repnz
les
mov
mov
pop
xor
lods
pop
int
test
je
loope
pop
call
cmp
test
call
scas
pop
jle
popa
adc
mov
push
ss
out
jae
sub
retf
jl
aaa
das
shr
imul
mov
mov
into
mov
test
jle
pop
or
stos
sub
jb
out
mov
mov
mov
xchg
aas
hlt
ss
sub
fimul
popf
mov
stos
mov
(bad)
pusha
mov
cli
sahf
mov
push
xor
mov
jg
mov
imul
dec
dec
fdivr
mov
add
jnp
fwait
es
hlt
ja
or
mov
sub
jmp
sub
push
sub
push
outs
push
clc
outs
jl
cld
dec
icebp
push
cs
daa
mov
dec
mov
lods
pop
jle
dec
push
dec
dec
or
mov
jp
jmp
movs
mov
mov
aam
in
pop
xchg
sar
out
pop
jg
movs
in
js
addr16
mov
push
and
dec
mov
pop
or
jnp
mov
into
pop
jle
popa
icebp
and
sub
jge
mov
mov
xchg
mov
cmps
and
and
arpl
aas
imul
mov
ss
fsubr
mov
ficomp
jns
ss
sub
and
test
xchg
dec
sub
jne
pop
mov
mov
fdiv
jmp
fsub
lods
mov
scas
push
push
xor
arpl
stos
fwait
sbb
sub
mov
lods
sub
retf
pop
mov
outs
imul
ja
fwait
cmps
inc
mov
sub
jmp
and
jnp
jno
mov
daa
push
movs
lds
or
xor
or
jns
ins
inc
shr
cmp
lods
push
dec
jne
ds
jb
dec
and
mov
or
(bad)
jl
cmp
clc
and
and
xor
or
ds
mov
and
push
je
or
sub
mov
div
cmp
data16
adc
cmp
push
pusha
lea
ja
mov
setg
not
call
xchg
aas
xchg
xor
lods
push
cli
bound
mov
add
cmp
xchg
adc
or
aas
or
dec
mov
les
xchg
es
sbb
sub
mov
push
ins
mov
or
out
fidivr
xchg
call
adc
inc
cld
fnstcw
ins
push
pop
hlt
icebp
push
push
and
inc
pop
retf
mov
xchg
push
dec
or
xor
xor
scas
ins
je
push
push
in
xlat
imul
xor
pop
loopne
sub
jnp
ss
cmp
lea
pop
enter
inc
cmp
ja
icebp
sahf
or
dec
in
mov
fst
pusha
mov
jle
popf
sub
hlt
sbb
jbe
dec
stos
and
call
addr16
stc
lahf
sbb
les
cmps
sub
xchg
xchg
xor
adc
leave
cmp
sbb
mov
xor
(bad)
push
dec
inc
xchg
jle
dec
fisttp
inc
imul
inc
fsub
xchg
mov
pop
mov
repnz
xchg
jns
dec
into
mov
outs
push
ja
outs
pop
ficomp
xchg
outs
pop
fdiv
mov
retf
inc
mov
js
sbb
loopne
xchg
mov
inc
bt
jmp
in
add
(bad)
loop
pop
lock
(bad)
test
out
sub
cmp
sub
pop
movs
fwait
sub
push
push
je
std
add
jae
inc
(bad)
mov
mov
mov
add
and
popa
mov
ins
inc
sbb
sti
popf
outs
jns
adc
pop
ror
jp
adc
out
xor
dec
fwait
aas
mov
ja
test
mov
push
mov
aaa
gs
in
fimul
jno
lds
push
fbstp
sti
or
mov
je
int
out
inc
sahf
pop
xor
aaa
xchg
test
ror
lods
fwait
inc
xchg
out
enter
fisttp
sbb
pusha
jnp
mov
push
mov
add
xchg
popf
int3
mov
dec
loope
jbe
inc
(bad)
div
pop
aaa
sbb
mov
add
aaa
xor
hlt
jle
xchg
cmp
mov
add
fldenv
jl
or
ds
test
jo
mov
xchg
adc
push
inc
jecxz
and
mov
retf
jne
mov
out
shl
cwde
rol
and
push
cmp
jns
xchg
data16
ret
lods
cld
jge
push
pop
repnz
lea
je
clc
jmp
call
push
push
inc
push
xor
cs
ins
add
xor
lea
jbe
jmp
push
outs
les
sbb
xor
pop
sub
or
inc
pop
(bad)
cmp
sub
out
les
(bad)
dec
(bad)
fsubr
retf
adc
cld
outs
xchg
jmp
jnp
adc
test
or
pop
fstp
out
or
dec
push
rcr
mov
push
imul
push
cmp
xchg
jnp
xchg
rcl
enter
aas
lods
cmp
jecxz
cmps
push
out
in
test
adc
xor
add
dec
outs
arpl
inc
jb
add
lds
inc
aaa
push
sbb
fcmovnb
arpl
test
retf
cs
push
xchg
mov
(bad)
xchg
xchg
cmp
test
cwde
and
js
mov
and
xchg
cmps
jnp
outs
xlat
jp
inc
sbb
scas
aad
sbb
inc
mov
inc
push
add
dec
retf
sbb
mov
sahf
loop
imul
fnstenv
mov
sub
sub
out
test
or
mov
ds
into
mov
pop
dec
or
jb
inc
and
fwait
xchg
aam
icebp
sub
pop
jge
sub
xor
(bad)
jnp
retf
mov
sti
push
mov
xchg
push
dec
std
mov
fld
lods
js
dec
push
repz
mov
mov
cwde
pop
leave
aam
mov
adc
jecxz
add
ret
push
movs
cmp
xchg
imul
jmp
mov
daa
pop
jno
imul
int
push
mov
out
loopne
call
xchg
add
lods
rcr
pop
lahf
or
pop
add
rol
aad
sbb
sahf
and
inc
mov
cmp
ins
or
loopne
add
sbb
js
pop
jge
fiadd
out
cmp
pop
ret
mov
inc
call
pop
push
push
mov
and
aad
mov
or
rcl
pop
sub
push
js
lahf
jne
arpl
(bad)
icebp
and
fdiv
mov
jns
sbb
xchg
out
jnp
out
xchg
sbb
dec
pop
sub
dec
fwait
std
xor
inc
outs
shl
popf
add
cmp
or
enter
pop
xor
in
cmp
mov
ins
jns
pusha
mov
div
dec
fbld
test
and
cmp
call
inc
mov
and
jle
sbb
and
add
jge
cld
in
cmps
add
in
pushfw
shl
inc
mov
add
push
idiv
add
fwait
test
adc
int
leave
(bad)
movs
idiv
and
mov
shl
stc
pop
stc
dec
xchg
sti
mov
sub
fmul
sbb
les
jg
fsub
xor
dec
out
xchg
shr
(bad)
pop
cmps
lahf
js
add
stc
pushf
rcr
jmp
call
and
push
out
xchg
sub
jle
or
sub
and
xor
pop
(bad)
aas
into
aas
inc
push
cmc
push
push
test
or
jno
aad
shl
xor
movs
aaa
test
in
mov
retf
lods
adc
(bad)
pop
sbb
inc
xchg
mov
jnp
ss
outs
dec
repnz
mov
xchg
in
(bad)
pop
xchg
mov
lea
jae
bt
mov
shl
mov
push
sub
xor
cmc
mov
pusha
cmp
push
stc
sub
cmp
bt
lea
jnp
repnz
pushf
pusha
lea
jne
xchg
mov
shl
xor
bt
sub
movzx
or
push
lea
lea
jmp
mov
call
jmp
imul
adc
test
sub
shr
jecxz
mov
aam
pop
ds
fst
jb
and
divps
add
sbb
fdivr
cmp
aas
add
out
xchg
mov
inc
popa
jmp
jns
sbb
jge
ds
std
enter
rcl
clc
test
(bad)
mov
lods
out
mov
fwait
cmp
xchg
mov
es
fst
pusha
fsubr
mov
pop
pop
adc
or
data16
ins
lds
(bad)
and
rol
pop
into
test
sahf
cs
icebp
sub
iret
ret
or
addr16
lods
cld
dec
xchg
pop
xor
adc
aad
add
jns
mov
xchg
into
mov
jns
pop
mov
iret
stos
inc
ret
cld
pushf
push
rol
dec
pop
mov
sbb
adc
jmp
add
stc
clc
call
xor
gs
and
mov
pop
sbb
adc
jl
loop
(bad)
loopne
arpl
call
fs
pop
mov
pop
rcr
jl
mov
mov
bound
repnz
scas
addr16
xor
pop
dec
pop
shl
mov
cmc
fidiv
mov
imul
xor
mov
js
mov
ss
push
push
and
(bad)
inc
mov
rcr
pop
xchg
sbb
xchg
sub
repz
or
fwait
popf
outs
mov
loop
pop
xchg
shr
int
mov
dec
movs
pop
(bad)
push
pop
xor
jae
pop
in
stc
fs
fs
jne
ror
pusha
ror
inc
mov
bt
call
cmp
sub
call
pushf
mov
pushf
mov
push
pusha
lea
jmp
sbb
jp
sbb
inc
sar
inc
dec
dec
xchg
imul
ds
cwde
jg
mov
xchg
push
imul
jae
shl
hlt
fs
cmps
cmp
jg
in
jge
push
out
mov
mov
push
fcmovnbe
pop
mov
dec
mov
cmp
mov
rol
scas
sub
jbe
and
dec
sbb
nop
adc
adc
sbb
arpl
pop
int
retf
xchg
push
cmp
pusha
iret
pop
mov
cdq
mov
(bad)
pop
fld
stos
pop
retf
aas
xchg
ret
mov
mov
cmp
adc
dec
mov
pop
xlat
inc
ds
dec
lea
fs
mov
stos
pop
mov
xchg
jmp
nop
mov
stos
popf
(bad)
sub
mov
test
inc
lea
(bad)
sub
mov
inc
dec
das
fisubr
cmp
mov
cmp
movs
push
test
add
imul
inc
mov
inc
cmps
add
sbb
mov
out
cmps
shl
rcl
adc
mov
sbb
jle
loopne
stc
leave
aad
int
cmp
mov
sub
xchg
out
push
es
sahf
sbb
mov
gs
sbb
enter
or
in
in
out
ds
jecxz
repz
(bad)
(bad)
cld
std
stos
adc
cmp
fwait
inc
inc
out
push
add
dec
mov
ds
and
lods
xchg
jecxz
push
mov
sbb
xchg
movs
jl
fst
push
or
leave
xor
pop
adc
ss
loopne
scas
jne
ret
cmc
inc
push
xchg
xor
push
mov
imul
dec
in
sbb
inc
or
punpckhwd
push
mov
mov
mov
(bad)
jo
xchg
dec
and
add
test
mov
lea
je
shl
mov
rol
stc
add
sbb
btr
mov
cmp
pushf
clc
test
pushf
lea
je
pusha
add
movsx
mov
mov
clc
add
stc
bt
push
mov
bsf
mov
pusha
cmc
cmp
call
movzx
lea
setae
pop
pusha
call
push
mov
outs
jmp
push
lock
inc
and
inc
jecxz
pop
sar
mov
mov
loope
xor
(bad)
jmp
(bad)
and
imul
mov
fwait
(bad)
jl
(bad)
xchg
cwde
sbb
inc
inc
lahf
bound
(bad)
sub
push
jg
pop
fcmovbe
test
js
out
cld
cmp
pop
stos
or
push
repnz
loopne
inc
add
rcr
and
sbb
push
mov
mov
clc
out
ja
xor
sbb
and
sbb
mov
sar
out
dec
int3
sbb
cmps
and
popf
mov
inc
push
iret
mov
cmp
cmp
mov
mov
dec
xor
bound
push
ja
std
or
xchg
xchg
add
ror
stos
xchg
icebp
mov
(bad)
mov
mov
mov
leave
pop
lock
in
jl
rcr
fsubr
outs
adc
movs
mov
xchg
lods
jns
push
add
xchg
mov
(bad)
and
out
jl
push
jno
test
push
mov
sbb
ins
push
jge
in
or
add
dec
out
adc
addr16
in
fwait
mov
imul
lock
sub
mov
mov
sbb
mov
neg
ins
push
and
push
loop
aad
add
jl
mov
loope
call
loope
xchg
cmp
lahf
cmpxchg
dec
pop
sbb
pop
inc
lds
sub
fisttp
fisttp
jb
adc
and
or
push
dec
(bad)
arpl
mov
in
leave
inc
pop
div
jnp
mov
or
jo
test
xor
inc
or
retf
pop
adc
adc
outs
fiadd
pop
pop
stos
mov
call
push
lds
test
push
test
pop
mov
pop
repz
mov
add
push
mov
int
sub
fst
jns
ss
adc
cdq
or
sbb
jl
test
inc
pop
or
mov
fmul
fnstcw
xchg
call
mov
ins
dec
dec
mov
mov
mov
xchg
(bad)
add
or
test
and
test
pop
out
push
mov
sahf
push
inc
and
jmp
ins
aad
fdivr
pop
in
pop
mov
pop
in
rep
stos
adc
fidivr
test
mov
retf
idiv
mov
ror
jmp
jns
inc
fs
add
sub
nop
mul
sbb
gs
inc
mov
pushf
lods
cs
fiadd
ret
imul
rol
ins
cmps
cld
pop
push
or
pop
sub
pop
lods
movs
in
sub
rcl
cld
sbb
fld
mov
and
js
xchg
xchg
mov
int
lods
test
mov
sti
adc
hlt
int
push
(bad)
pushf
add
retf
mov
shr
add
(bad)
and
ja
and
xchg
jae
jl
pop
fst
adc
cmp
and
outs
shr
pop
sahf
push
mov
stos
js
push
retf
mov
outs
cmp
xor
push
retf
push
repz
ret
fcmovne
jle
xchg
dec
sub
dec
mov
sub
sub
mov
adc
and
pop
sbb
sti
fcom
and
sbb
push
pop
clc
xor
and
and
mov
adc
stos
js
movs
pop
adc
(bad)
cmp
jecxz
jecxz
bound
ins
rcl
jb
dec
push
sub
mov
cmps
mov
mov
sahf
popa
addr16
ret
int3
xchg
xchg
in
push
out
jo
inc
ja
dec
rcr
mov
gs
sahf
in
inc
cdq
cdq
pop
jle
(bad)
mov
jmp
xor
or
in
aam
ja
sub
popa
jle
daa
mov
push
and
or
xchg
push
dec
movs
imul
out
jmp
ficom
or
xor
and
jo
pushf
pushf
mov
lea
jb
pushf
setb
sets
lods
push
not
pushf
call
xor
and
or
inc
jmp
push
dec
mov
inc
mov
in
in
xor
fnstenv
mov
mov
xlat
pop
mov
pop
int
inc
pop
shl
in
push
pop
imul
int3
(bad)
in
retf
and
mov
and
sub
bound
not
push
mov
mov
or
cmp
jnp
mov
mov
sbb
lods
je
cmp
push
repz
xor
out
ja
or
aam
cmp
pushf
cmp
xor
clc
mov
pusha
mov
lea
jmp
test
cmp
call
loop
test
(bad)
jb
imul
xchg
add
arpl
xor
test
ret
and
leave
shr
jp
repnz
(bad)
cmp
cmp
jge
jmp
lahf
out
add
daa
fnsave
cmp
mov
push
lods
mov
fstp
loope
xchg
fld
dec
dec
mov
loope
xlat
out
mov
inc
push
ss
in
int
rcl
repz
xor
and
xchg
out
xlat
mov
or
pop
fisub
test
pop
mov
push
mov
(bad)
push
cmp
sub
xchg
jmp
xor
daa
sbb
sub
fs
in
mul
clc
or
call
push
popf
jo
inc
idiv
call
call
adc
test
add
jno
stc
pop
in
std
jmp
jo
mov
stos
pop
test
pop
lea
dec
pop
scas
sbb
sbb
iret
add
adc
push
fwait
sbb
cli
sahf
in
mov
inc
and
mov
(bad)
movs
sbb
scas
mov
push
shl
out
(bad)
jo
stos
icebp
stc
(bad)
inc
in
sahf
test
icebp
pop
xlat
mov
xor
out
dec
add
inc
lods
aaa
pop
mov
js
movs
cmp
cmp
hlt
ror
enter
sbb
inc
test
or
neg
cmp
test
ds
mov
into
mov
jmp
test
jg
push
outs
mov
and
fisub
ins
mov
or
inc
inc
mov
repnz
in
stos
mov
test
pop
es
shl
hlt
pop
out
xor
cmp
xchg
dec
push
fwait
sbb
xlat
cmp
adc
or
(bad)
push
loop
sti
lea
and
mov
or
stos
(bad)
inc
mov
mov
push
adc
push
js
sub
mov
inc
cmp
dec
in
dec
inc
push
fs
xchg
dec
pop
xor
push
sbb
call
paddusb
daa
repnz
or
xor
cmc
scas
pop
jle
sbb
jmp
imul
ja
push
jae
sub
popf
cwde
mov
(bad)
popa
cld
xchg
stc
inc
xchg
hlt
adc
mov
icebp
stc
xor
(bad)
sahf
cmps
sub
add
pusha
push
fisubr
cmps
sub
adc
(bad)
pop
pop
xchg
push
push
retf
jne
(bad)
outs
mov
repnz
push
movlps
and
or
sbb
xchg
aas
cld
adc
scas
sub
cmc
daa
loope
adc
jb
cmp
out
and
dec
les
adc
and
lea
loope
test
pop
mov
sahf
xchg
rcr
xor
mov
bound
stc
pushf
hlt
cmp
cli
jl
mov
fst
test
imul
movs
nop
clc
mov
cmp
adc
dec
repnz
sub
outs
es
les
and
xor
mov
xor
push
or
jns
iret
xor
jmp
mov
mov
dec
mov
test
cmps
(bad)
into
mov
mov
mov
push
cmps
sbb
loop
add
packssdw
inc
outs
mov
mov
loop
loop
sub
add
mov
dec
aas
(bad)
loopne
cld
adc
repnz
(bad)
jnp
in
scas
sub
std
inc
cmp
(bad)
jp
inc
sbb
sbb
add
mov
and
test
sub
dec
test
sub
sub
(bad)
jp
icebp
movs
pop
scas
pop
movs
mov
imul
cmc
es
xchg
shr
test
and
or
in
call
lea
jg
sub
sbb
fidivr
outs
lea
or
pop
mov
inc
mov
movs
sub
and
jmp
repz
fdivr
ret
and
sahf
mov
inc
xor
xor
fcmovbe
mov
dec
jns
dec
jo
sbb
xchg
xchg
inc
call
jmp
iret
ds
sbb
push
add
sbb
and
pop
mov
cdq
std
nop
mov
es
jmp
cmp
dec
sbb
mov
outs
pop
or
push
add
fs
call
push
lea
jae
cmc
jmp
test
mov
call
fwait
arpl
sbb
loope
pop
sbb
add
loop
mov
cmp
jnp
ror
(bad)
int3
inc
mov
adc
mov
mov
mov
xor
clc
xchg
pop
push
cwde
mov
xor
jmp
fldcw
push
or
(bad)
popf
inc
ins
mov
xor
pop
mov
pop
pop
cmp
ds
push
push
jmp
in
mov
ins
popa
xchg
(bad)
lods
jg
and
dec
popa
jo
mov
sub
or
xor
cmps
fs
aad
cmps
aad
movs
enter
iret
(bad)
std
cmps
imul
jnp
loope
lods
shl
sub
test
fistp
push
test
psubb
jnp
cmp
ds
rcl
aad
xor
ret
test
cmp
mov
mov
cmp
sar
sti
rol
les
jp
push
jg
push
les
(bad)
jmp
xor
stos
sub
mov
rcl
ret
daa
stc
adc
sub
ss
mov
aam
mov
push
add
push
cli
mov
sar
sub
sub
not
popf
cs
cmp
jle
and
inc
pop
add
cmps
sub
idiv
and
xor
sti
mov
sahf
retf
popa
int
ja
push
sbb
cmp
pop
movs
in
jno
adc
dec
shr
and
movs
cmp
mov
ffreep
cld
or
sbb
adc
sub
(bad)
mov
leave
dec
aad
gs
(bad)
cwde
retf
xor
(bad)
push
jmp
dec
sbb
inc
mov
sbb
push
cmp
int
scas
jbe
cmp
dec
in
adc
ins
imul
or
rcl
rcl
jbe
fxch
aad
sti
adc
(bad)
popf
pop
push
stos
test
jno
push
mov
cmp
xor
enter
jo
jns
les
and
rol
push
xchg
cmp
sub
imul
lods
loopne
push
add
in
sbb
aas
mov
test
jmp
icebp
or
cmps
dec
lods
xor
or
sub
push
and
in
test
leave
leave
or
mov
call
mov
pop
fmul
adc
popf
nop
sbb
mov
push
mov
clc
sar
push
mov
pop
inc
lods
(bad)
cmc
xchg
shl
imul
dec
pop
fdivr
int
lock
pop
pop
int
adc
test
dec
pop
cli
ins
jne
xchg
les
sbb
loopne
fnstcw
mov
fistp
jmp
jns
adc
or
inc
daa
mov
xchg
loopne
call
gs
data16
mov
leave
mov
add
adc
loopne
ja
add
mov
test
fwait
nop
mov
dec
test
dec
mov
push
xor
fs
jecxz
or
xchg
sub
xbegin
loopne
or
xor
cwde
and
retf
or
int
adc
call
call
dec
sbb
or
mov
popa
jecxz
push
and
pop
mov
test
jmp
stc
ins
nop
(bad)
cmp
imul
ins
orps
jnp
aas
sub
js
scas
push
and
adc
add
xor
cmps
add
popa
add
and
lock
out
lods
inc
mov
and
or
mov
dec
inc
inc
push
push
xor
cs
ins
add
rol
not
movsx
mov
lea
push
not
mov
call
mov
inc
das
sbb
mov
xchg
xor
adc
stos
dec
jnp
inc
or
ror
jbe
int3
sbb
mov
adc
inc
pop
rol
scas
adc
push
push
(bad)
add
jno
jbe
data16
nop
sar
lock
adc
mov
inc
push
gs
inc
inc
mov
out
cdq
jmp
mov
jl
add
jne
outs
add
das
lds
leave
out
pop
or
or
cmp
pop
and
pop
in
mov
pusha
add
push
stc
bt
cmp
jmp
mov
aaa
cs
js
add
cmp
add
cmp
pop
test
or
and
popf
or
mov
fwait
cmp
dec
fwait
sub
call
jmp
mov
xchg
mov
push
sbb
mov
div
pop
test
out
push
mov
lock
out
add
inc
push
fidivr
push
into
push
dec
data16
bound
ins
or
int3
pop
stos
lea
call
stc
cmp
cmp
bt
cmp
call
jmp
lea
jne
bts
bsf
shr
mov
stc
cmp
cmp
call
ror
sbb
pop
ror
dec
mov
into
dec
xchg
or
sub
xchg
adc
push
inc
jmp
sti
jbe
sub
ret
pop
call
scas
(bad)
repz
std
jle
sbb
pop
pop
push
in
inc
cs
pop
jbe
lea
popa
imul
repz
push
aad
cmps
mov
xor
neg
mov
mov
push
sub
ins
fadd
dec
sub
pop
dec
push
rcr
sahf
push
push
push
jnp
push
inc
mov
adc
xchg
jbe
icebp
or
scas
lds
push
scas
call
outs
mov
adc
shl
pop
mov
das
xor
fiadd
xchg
pop
test
out
push
cmp
mov
call
mov
adc
ins
mov
mov
out
sub
outs
hlt
jmp
jns
fist
sbb
cmp
arpl
in
test
in
lods
xor
aaa
scas
outs
pushf
push
pop
ret
and
jmp
shl
xchg
jmp
and
jle
inc
jnp
and
in
push
mov
mov
std
jno
dec
sbb
adc
ja
xchg
iret
movs
mov
clc
call
loope
lods
cmp
je
(bad)
jg
xor
imul
mov
xor
jmp
aaa
or
jno
dec
pop
sub
fnstenv
jecxz
das
pushf
lea
ja
shr
sar
or
sub
bsr
shl
add
mov
pushf
shld
shrd
mov
add
mov
test
bt
clc
repnz
pusha
call
call
jmp
movzx
lea
lea
movsx
mov
jmp
lea
ja
jmp
stos
mov
sbb
xchg
cmp
xlat
xlat
sub
sbb
xchg
or
fidiv
jge
in
in
push
dec
sub
(bad)
ds
mov
lods
jnp
pop
stc
addr16
pop
sbb
ds
mov
pop
sub
fisttp
adc
jg
jno
sahf
xchg
pop
(bad)
in
dec
jecxz
ror
lock
xor
jge
or
dec
push
les
ins
cmp
inc
lods
mov
(bad)
(bad)
xchg
pop
mov
dec
inc
jecxz
xor
jl
sbb
sub
sbb
xor
aaa
out
gs
in
inc
jbe
adc
jno
jmp
neg
out
loope
pop
sub
or
outs
jb
jne
dec
cmc
cmp
out
push
aam
movs
(bad)
jp
or
dec
or
jp
xchg
xchg
and
in
xchg
ins
push
cwde
mov
js
emms
cli
aas
and
and
test
push
rol
jge
and
dec
cmps
mov
push
test
neg
cs
ret
test
sub
lods
jle
pop
and
fs
push
sahf
cmps
call
shr
mov
xchg
jmp
mov
xor
call
mov
mov
mov
xor
lahf
inc
xchg
inc
push
stos
sbb
cld
sbb
lds
adc
and
adc
cs
or
aad
sahf
and
cmps
jg
mov
add
retf
jle
cs
sbb
es
lods
sbb
jae
sbb
cmp
jmp
into
hlt
mov
sub
inc
mov
sub
sbb
add
jle
xchg
(bad)
pop
mov
dec
mov
push
adc
xor
push
mov
mov
je
mov
inc
sub
mov
mov
mov
and
sub
and
fwait
add
lock
popa
(bad)
jmp
mov
push
rol
(bad)
cmps
pop
or
ror
cmp
repnz
push
mov
sbb
wbinvd
xchg
mov
cmp
pop
test
push
lods
push
mov
pop
bound
sub
rcl
sahf
cmc
aas
mul
movs
lds
fnsave
jbe
sub
stos
das
add
sahf
ins
shl
jmp
sub
rcr
xchg
sbb
adc
imul
(bad)
or
sahf
mov
xchg
lods
loopne
mov
daa
sub
leave
xor
xor
jmp
es
sub
scas
bound
xor
add
lahf
or
jbe
jl
jmp
sbb
or
loop
jb
push
nop
dec
mov
push
sub
cmp
cld
adc
retf
sbb
mov
movs
xchg
stos
xchg
js
sub
jle
sbb
loope
jno
leave
sbb
movs
inc
dec
push
xchg
fldenv
jle
call
daa
sub
fsubp
xchg
mov
sti
dec
mov
int3
xor
pop
mov
mov
sahf
outs
ja
pop
jl
cmp
icebp
cli
repnz
cmp
inc
lds
mov
stos
cmp
push
and
leave
lods
pop
adc
jmp
or
arpl
dec
icebp
xor
lods
inc
das
add
fidiv
rcr
cvttps2pi
enter
xchg
mov
fldenv
retf
jae
in
adc
movs
add
stos
or
inc
pop
in
in
es
jle
jmp
push
cmp
lea
adc
pusha
mov
cmps
cmc
add
sbb
movs
mov
cmc
mov
call
pop
aas
test
pusha
jmp
mov
(bad)
lods
movs
shl
enter
mov
xchg
mov
sub
xchg
mov
jmp
cld
test
ss
imul
or
inc
cmp
popa
sub
aam
inc
in
ds
inc
ja
cmc
push
cmp
(bad)
sahf
push
stos
je
(bad)
into
in
jb
push
mov
pushf
mov
mov
cmps
inc
imul
fstp
push
pop
test
xor
inc
mov
das
mov
push
test
out
test
pop
dec
xor
mov
hlt
js
pop
sbb
mov
mov
test
xchg
fcmove
movs
jmp
out
add
pushf
scas
xlat
push
lds
lock
movs
xor
test
nop
fsubr
add
outs
sbb
jmp
jno
ficomp
and
in
sti
(bad)
aad
pop
rol
cli
cmpps
ins
mov
jne
sbb
outs
add
scas
inc
arpl
clc
pop
sahf
clc
pop
cmp
mov
inc
push
sbb
dec
fdivr
test
lock
sbb
aam
or
test
lea
cmova
cmps
jmp
sbb
out
(bad)
ret
jmp
stos
xchg
mov
(bad)
fld
stos
mov
xchg
fdivr
aaa
mov
push
mov
(bad)
call
jns
jle
jmp
imul
cs
enter
mov
(bad)
mov
xchg
xchg
inc
mov
aad
pop
mov
test
in
push
jb
test
sbb
repnz
movs
lods
push
cmps
enter
pushf
push
inc
cmps
cmp
pusha
adc
inc
xchg
dec
cmps
pop
jns
inc
push
mov
mov
test
dec
adc
mov
and
mov
sbb
(bad)
cmps
cwde
cld
push
idiv
lea
adc
mov
mov
cli
out
(bad)
fs
pop
pop
adc
test
in
jmp
mov
inc
mov
popf
div
sbb
(bad)
mov
sub
stc
push
jne
test
cdq
or
add
and
xchg
test
add
add
push
jno
dec
fsub
pushf
push
pop
adc
outs
sbb
(bad)
aad
js
cmp
sbb
sbb
inc
lea
(bad)
test
sub
jae
cmp
rcr
push
fimul
cdq
cmps
ret
sahf
shr
adc
inc
cmp
add
out
shl
mov
xor
out
mov
sbb
movs
pop
scas
aad
imul
push
in
int3
push
scas
pop
and
push
mov
mov
jmp
mov
mov
mov
pushf
pushf
push
push
ret
cdq
imul
push
cdq
sbb
ret
fist
jle
(bad)
outs
mov
pushf
inc
idiv
fs
ins
int3
aaa
popa
mov
ds
adc
cmp
scas
mov
mov
sbb
hlt
sbb
mov
test
pop
stos
int
movs
arpl
mov
adc
out
jo
mov
jmp
cs
xchg
push
jno
not
xchg
inc
jb
cmps
sbb
sti
pushf
popa
jmp
not
stos
cdq
sub
in
ror
jb
bound
mov
and
pop
(bad)
dec
fsubr
sbb
push
sbb
add
iret
movs
jbe
scas
out
push
ins
les
dec
adc
fstp
in
jno
inc
inc
mov
and
cs
sbb
pop
movs
cwde
sbb
mov
inc
hlt
jbe
pop
(bad)
std
out
in
pop
cmp
out
or
xor
mov
ficomp
fistp
xlat
dec
das
push
cmp
xchg
jbe
jnp
sbb
mov
and
jmp
fs
call
pusha
call
dec
mov
push
mov
out
popa
aaa
mov
add
lods
fist
dec
mov
imul
add
and
mov
adc
fcmovnu
xor
xchg
inc
fs
faddp
sbb
mov
test
cmp
popa
out
mov
xchg
(bad)
push
dec
inc
aad
repnz
mov
adc
jmp
mov
int3
cli
push
loopne
les
sbb
push
test
out
sbb
int3
jecxz
rol
in
push
cdq
push
(bad)
mov
adc
inc
rcr
(bad)
pop
xor
or
das
dec
dec
mov
mov
sub
clc
mov
iret
add
fwait
mov
pusha
sub
shr
outs
or
mov
cmp
cmp
or
sbb
inc
cmp
fbld
outs
ins
pop
ins
xchg
idiv
enter
shl
pusha
mov
mov
data16
sub
push
mov
pushf
lea
jb
clc
pusha
clc
stc
cmp
jmp
bt
sub
jmp
je
sbb
(bad)
fs
pop
cmps
das
cmp
into
xchg
cli
mov
aaa
xor
or
cmp
rcl
les
xlat
mov
pushf
or
push
dec
jo
dec
aam
xchg
sbb
call
mov
mov
cld
cld
inc
data16
adc
jns
sahf
idiv
lods
outs
mov
and
dec
sub
jg
jecxz
aam
mov
les
and
repz
xchg
ficomp
adc
pop
shl
neg
loop
and
test
jns
sbb
out
inc
ror
aam
int
jl
sub
cld
int3
mov
cdq
rcr
stos
mov
cwde
in
inc
popa
cdq
dec
cmps
stos
cdq
loop
mov
xchg
xchg
ins
retf
(bad)
enter
int3
add
mov
jge
pop
scas
adc
pop
mov
cdq
jge
lahf
push
cmps
dec
xor
fcompp
jns
call
inc
(bad)
adc
cmp
cdq
xchg
jne
inc
mov
(bad)
fs
mov
dec
shr
outs
addr16
sub
mov
mov
ret
sub
sub
sbb
lods
mov
jae
mov
or
cmp
lods
xor
addr16
push
cs
mov
arpl
repnz
lods
xor
jbe
cmps
jmp
test
outs
and
das
dec
and
mov
or
jg
ja
ss
ins
pusha
test
mov
xchg
not
(bad)
test
sbb
jo
xor
inc
mov
mov
mov
(bad)
mov
sahf
or
loop
test
(bad)
cmc
cmp
sbb
inc
sub
popa
mov
int
ins
cmp
or
(bad)
add
cmp
and
inc
scas
clc
out
mov
add
aaa
jmp
leave
js
in
aad
adc
mov
out
adc
mov
ins
pusha
cmp
inc
std
sti
pop
xchg
and
push
mov
inc
lock
jmp
shld
btr
mov
cmp
cmp
pusha
push
lea
jp
jne
inc
aas
or
and
xor
setno
bswap
cmc
mov
cmc
rcr
add
push
mov
bt
test
pusha
lea
je
cmc
test
sub
pushf
cmp
pushf
bt
cmp
pusha
call
shl
mov
mov
in
arpl
sbb
lock
cmp
scas
cmps
enter
push
push
push
mov
cmc
xchg
test
dec
lods
pop
mov
inc
adc
test
pushf
xchg
mov
jbe
imul
out
fs
out
sub
jno
pop
sbb
pop
bound
lock
pop
mov
mov
ins
sub
jbe
iret
(bad)
jae
call
and
dec
pusha
(bad)
test
xchg
idiv
pushf
ret
scas
mov
xchg
sbb
call
jl
in
outs
dec
cmp
push
push
adc
add
ds
ja
ds
cmp
sbb
or
into
sbb
daa
pop
sbb
inc
add
daa
ss
arpl
test
xor
(bad)
mov
lahf
arpl
nop
ja
hlt
popf
push
bound
fwait
mov
movs
jne
clc
test
mov
bt
xor
btr
mov
cmc
pushf
clc
sub
clc
mov
clc
repnz
call
jge
mov
cmp
sbb
mov
cmp
pop
xor
jns
rcl
adc
mov
sub
or
and
fnstsw
sub
int
push
retf
int
mov
sub
retf
pop
pop
jl
in
(bad)
js
in
xor
mov
sub
push
push
xchg
stos
mov
in
sbb
cld
xchg
lods
scas
je
jecxz
pop
mov
pop
xchg
sbb
push
xchg
mov
mov
xchg
(bad)
jmp
iret
add
and
aas
aam
aaa
mov
xchg
loope
inc
xchg
add
xor
xchg
rcr
popa
xor
or
clc
sub
test
ins
jne
sub
(bad)
sub
or
leave
pop
out
xchg
sbb
mov
mov
neg
sbb
jo
or
call
ja
inc
sub
je
xor
xor
es
mov
or
xor
cdq
aas
cli
adc
cs
xor
add
(bad)
ficom
push
stc
sbb
mov
mov
cld
sahf
cmc
lock
clc
sub
pop
jge
arpl
pop
push
stos
add
sub
mov
mov
mov
mov
jmp
lea
mov
push
in
lock
pop
clc
cmp
fst
adc
cwde
jmp
inc
jno
add
push
sub
pop
aas
push
test
aam
dec
lahf
sbb
push
ror
scas
mov
rcr
jne
bt
cmc
jmp
lea
jae
cmp
push
sub
pusha
call
cmp
rol
push
pop
aam
adc
mov
rol
mov
repnz
dec
mov
(bad)
(bad)
in
outs
push
dec
or
loope
test
int
mov
push
push
sbb
mov
loopne
push
test
rol
pop
push
fisubr
xchg
lds
test
fcom
stos
sub
xlat
xor
cmp
jecxz
pop
inc
ret
xor
jmp
fnstcw
(bad)
mov
inc
clc
lock
mov
add
cmc
push
not
shl
call
pusha
lea
jne
call
xchg
mov
add
loop
mov
icebp
push
std
add
stos
mov
call
adc
sub
or
push
ror
jle
dec
lahf
push
popa
and
dec
mov
sub
adc
movlps
es
retf
in
jo
call
pop
sbb
xchg
(bad)
(bad)
jmp
cmp
add
cdq
popf
sbb
shl
push
cmp
fcomp
mov
dec
ins
test
in
xor
cs
dec
lds
test
and
add
frstor
test
pop
cmp
inc
jecxz
or
sub
scas
shr
push
pop
adc
and
sbb
fucom
hlt
in
jo
in
sub
pusha
icebp
out
out
cli
adc
ja
inc
inc
test
cmps
mov
and
popfw
mov
inc
mov
adc
pusha
pushf
push
ret
mov
sbb
jmp
rol
mov
pop
push
mov
lods
xor
jo
enter
push
fwait
mov
push
dec
sahf
retf
and
jo
sbb
xor
imul
cli
dec
or
popf
nop
aam
xchg
sar
mov
jbe
push
int
sub
jnp
das
fwait
mov
and
pushf
jno
arpl
bt
cmp
pushf
jmp
outs
ins
gs
cs
ins
add
ins
xchg
add
cmp
add
loope
lods
adc
dec
mov
cmp
out
(bad)
xchg
adc
push
push
in
(bad)
push
loopne
cmps
shl
jno
mov
(bad)
loop
js
inc
test
jb
jnp
stos
adc
mov
retf
push
jle
sub
fisub
inc
fs
inc
hlt
mov
adc
inc
sub
stos
sub
imul
jno
push
jmp
jle
out
xchg
int
(bad)
icebp
xchg
mov
xchg
aas
sahf
or
push
push
sbb
pop
out
clc
jnp
inc
test
mov
pusha
mov
movs
xchg
sub
xor
jb
sti
cmc
sbb
sahf
dec
pusha
rol
add
popf
cmp
mov
xchg
and
mov
or
sbb
xchg
mov
rcr
and
(bad)
xchg
scas
sahf
dec
dec
push
pop
inc
push
jbe
mov
fcom
push
mov
xchg
jg
scas
shl
es
pop
in
ret
mov
mov
push
mul
jb
aam
retfw
jb
mov
fucompp
cmp
clc
add
xor
push
pop
xchg
retf
mov
jnp
mov
movntq
out
and
icebp
inc
cmc
push
daa
or
stc
jae
mov
out
jnp
adc
sub
mov
pop
icebp
mov
pusha
mov
pop
cwde
lock
xor
pop
xor
shl
ins
xor
sub
jg
test
cs
push
or
xor
pop
inc
mov
xchg
lea
outs
adc
mov
xchg
rol
jge
cld
sbb
pop
push
cmc
dec
mov
xor
scas
in
inc
loopne
jbe
jne
(bad)
and
mov
sahf
sti
inc
movs
(bad)
mov
les
jae
std
out
add
push
xchg
stc
mov
mov
xchg
jp
jae
ja
cmp
sbb
cwde
push
mov
cmc
not
stos
xchg
out
setae
lods
rol
clc
push
jmp
not
bt
bt
xor
clc
pusha
sub
bt
test
cmp
not
cmc
push
cmc
cmp
movsx
movzx
pushf
not
lea
mov
not
mov
jmp
xor
fcom
outs
repnz
dec
jno
inc
pop
daa
enter
lahf
pusha
pop
jg
cmc
sub
fidiv
pop
mov
test
sbb
mov
mov
cmp
mov
btc
cmc
mov
cmp
bt
test
mov
add
pushf
bt
jmp
or
mov
es
mov
dec
add
aam
cmp
xchg
cmp
xchg
dec
fnsave
popf
(bad)
adc
test
rcl
retf
add
pop
xchg
dec
dec
jo
out
pop
xor
push
jmp
aas
add
or
mov
xchg
push
xor
xor
cdq
fild
arpl
inc
fwait
or
mov
xchg
ficom
(bad)
test
popf
adc
pushf
rcr
dec
(bad)
es
sub
fmul
push
sbb
std
xchg
(bad)
add
rcl
or
(bad)
mov
mov
pop
cmc
rcr
mov
inc
jns
ins
je
inc
call
pop
test
(bad)
int3
outs
ss
(bad)
aam
retf
add
out
mov
mov
ins
xor
(bad)
mov
cld
out
mov
dec
jmp
outs
jge
and
xchg
sub
pop
inc
mov
mov
jp
xor
sub
adc
mov
int3
clc
jo
shl
pop
ins
mov
mov
mov
mov
and
nop
aas
int
cli
shr
call
mov
xchg
and
je
cli
add
cmp
loopne
fcomp
cmp
add
in
inc
loopne
or
dec
icebp
js
mov
(bad)
jmp
jmp
add
sahf
dec
adc
xchg
push
retf
(bad)
sub
ins
ret
mov
adc
(bad)
int
imul
jmp
pop
cmc
aaa
pushf
test
push
adc
add
xor
mov
add
outs
adc
sbb
rcr
mov
and
inc
push
movs
jl
dec
push
aad
fs
das
dec
dec
adc
and
mov
js
cmp
dec
xchg
sub
and
arpl
mov
leave
out
mov
add
test
pushf
arpl
mov
lods
(bad)
sti
and
sub
les
loopne
outs
dec
inc
inc
pushf
mov
xchg
leave
arpl
das
adc
pop
scas
and
jo
jle
jbe
in
fsub
jmp
lea
jne
ja
call
pushf
lea
jmp
cmc
jmp
bt
sub
lea
add
jmp
add
push
arpl
jae
bound
mov
lea
je
jmp
sub
push
sbb
loopne
xchg
sbb
mov
(bad)
jae
fisub
pop
leave
stc
loope
jnp
fistp
mov
pushf
cmps
inc
and
sub
mov
sbb
outs
fwait
call
adc
jne
sbb
sub
push
jle
rcl
sub
inc
xor
jo
mov
(bad)
and
mov
mov
scas
add
fdivrp
fwait
inc
push
push
mov
xchg
clc
call
fsubp
cli
int3
ror
sub
fiadd
mov
push
lds
add
into
cmc
cmp
adc
in
inc
ja
mov
add
pop
mov
call
ret
mov
push
pop
icebp
or
scas
ss
pop
add
push
scas
test
xchg
adc
inc
loope
sti
inc
or
sub
xchg
test
xchg
push
and
fsubr
and
out
cmps
js
cmp
add
stos
sar
sub
pop
jno
pop
js
call
add
mov
inc
stos
mov
shld
push
mov
and
mov
arpl
inc
pop
mov
ins
mov
and
out
pop
sbb
xor
inc
cli
scas
mov
add
dec
inc
push
dec
xor
cs
ins
add
(bad)
xor
shr
xchg
mov
shr
add
clc
pushf
xor
add
add
lea
pushf
sbb
neg
mov
stc
test
pushf
shr
cmp
cmp
cmp
mov
jmp
xor
or
ja
fldenv
fnstcw
call
je
test
mov
(bad)
sbb
aad
test
aaa
(bad)
jo
jno
(bad)
aas
and
leave
cmp
mov
pop
adc
cmc
ss
xor
cwde
cmps
jmp
xchg
(bad)
int
(bad)
mov
fs
int3
push
and
call
std
(bad)
nop
shr
sahf
adc
pop
icebp
arpl
xchg
pusha
sub
ror
and
sbb
into
in
ffree
dec
fadd
in
add
jo
cmps
adc
f2xm1
cld
outs
dec
test
stc
into
sub
(bad)
xor
mov
(bad)
mov
jno
stos
add
shl
xor
es
in
imul
fs
push
pop
mov
and
ins
mov
sub
sbb
aaa
jmp
add
mov
sti
test
lds
mov
ins
push
xlat
mov
es
call
push
(bad)
stc
(bad)
(bad)
jl
dec
or
adc
retf
(bad)
cmp
mov
mov
or
add
movs
push
push
sub
gs
inc
jp
sbb
aam
xlat
outs
aaa
jp
sub
cs
jecxz
and
mov
mov
aas
jecxz
call
outs
mov
mov
mov
push
cmp
imul
call
add
aaa
cmp
in
pop
push
int3
pop
pop
pop
loope
stc
cmp
ret
(bad)
mov
and
jle
sub
dec
sbb
adc
clc
inc
stos
mov
add
or
jb
mov
push
add
not
jp
mov
daa
ins
in
xor
mov
arpl
stos
mov
dec
and
jb
std
jne
pop
outs
cld
aam
inc
(bad)
retf
cmp
test
jmp
xchg
(bad)
and
mov
pop
out
dec
out
aam
adc
shl
ret
ja
mov
fld
jno
mov
lods
in
ret
mov
mov
sbb
shr
int3
cmps
inc
(bad)
ins
inc
pop
lods
mov
push
and
(bad)
cmp
cmp
mov
icebp
adc
xor
in
xchg
pusha
pusha
mov
push
mov
mov
mov
push
mov
lea
jmp
cmps
stos
js
sbb
out
push
shr
and
aaa
mov
ror
xchg
add
loop
lods
das
mov
nop
xchg
dec
jbe
lahf
pop
minps
fnsave
sbb
jnp
gs
and
ja
out
mov
lock
inc
test
jg
sbb
call
mov
and
sbb
fild
xlat
adc
mov
push
push
gs
pop
ret
and
div
loopne
mov
mov
addr16
adc
shl
lods
jle
fiadd
ror
es
jg
push
int
les
shr
lock
mov
mov
cmp
sub
inc
les
fs
or
cmp
adc
sub
xlat
sbb
sbb
sub
ds
les
sub
rol
stos
cmps
and
pusha
test
shl
in
sbb
mov
sub
mov
in
retf
inc
das
jmp
iret
mov
xchg
cmp
nop
nop
jb
or
mov
add
adc
push
sub
inc
clc
enter
stc
fld
sub
mov
adc
pop
movs
jb
xor
loopne
cdq
jo
lods
xchg
jmp
adc
mov
xor
push
cmps
mov
sar
gs
repnz
and
jmp
repnz
inc
lods
int3
loope
adc
fsubr
clc
mov
lahf
std
push
clc
scas
sbb
mov
jae
lods
push
cmps
and
sbb
pop
xchg
sahf
or
imul
mov
mov
adc
jp
cs
fsub
mov
mov
add
and
fwait
pop
test
(bad)
xchg
sub
lods
mov
clc
call
mov
xlat
int3
stos
and
pop
xchg
jl
adc
xchg
lahf
pop
add
mov
daa
daa
aam
enter
sub
xchg
test
jmp
fild
xchg
sub
xchg
into
in
jb
inc
xchg
push
punpcklwd
pop
push
pop
push
retf
test
xchg
xlat
mov
clc
(bad)
mov
div
sbb
aam
add
mov
cli
adc
movs
popf
lea
mov
xor
test
sbb
popa
arpl
inc
cwde
cdq
cmpxchg
pop
pop
jmp
or
lods
xor
cli
les
xchg
retf
scas
repnz
test
sbb
xchg
xor
(bad)
outs
ss
iret
mov
jp
push
xor
fidiv
dec
xor
fld
jge
and
mov
dec
mov
gs
jne
sbb
and
xor
inc
scas
fisubr
(bad)
push
pop
test
cmp
and
imul
aad
scas
mov
(bad)
neg
jno
dec
xchg
sub
pop
fst
retf
movs
inc
push
repz
(bad)
push
in
xor
sbb
enter
jb
dec
call
repnz
and
sub
mov
and
lea
mov
dec
iret
loop
cmp
(bad)
ror
jl
jmp
aam
adc
and
and
xchg
clc
lods
or
movs
movs
cli
leave
shl
adc
test
fist
or
push
adc
cmc
retf
bound
stos
pop
and
pop
adc
sahf
jecxz
push
lahf
fild
test
pop
(bad)
and
and
ins
xchg
mov
add
test
inc
stos
loope
or
mov
inc
psrad
jbe
mov
xchg
fs
jne
bt
neg
mov
btr
sub
dec
mov
pushf
sub
pushf
push
pop
pusha
clc
call
inc
jmp
call
lea
jne
sbb
mov
pusha
push
add
mov
cmp
movzx
add
stc
shl
bt
mov
pushf
add
stc
cmc
jmp
or
(bad)
daa
mov
int3
xchg
lea
xor
ds
mov
dec
or
xchg
adc
and
pop
pop
das
ds
test
jo
mov
enter
mov
stos
neg
add
xchg
nop
or
les
(bad)
jbe
sbb
iret
in
mov
outs
mov
inc
mov
inc
xchg
(bad)
jmp
inc
repz
mov
(bad)
mov
add
mov
mov
or
xchg
mov
mov
cmp
sub
jp
hlt
sub
xchg
sbb
loopne
lods
pop
cmps
div
fwait
and
xchg
repnz
fsubr
or
enter
loop
pop
cdq
aas
cmp
mov
or
pop
and
mov
bnd
repnz
xchg
leave
neg
jecxz
icebp
(bad)
mov
mov
iret
xlat
(bad)
mov
lods
or
cmp
jmp
fistp
(bad)
ss
fcmove
xor
sub
ds
adc
pop
das
push
fistp
cmp
push
enter
dec
movs
adc
movs
push
xchg
push
shl
or
push
repz
sbb
ucomiss
out
sbb
repz
arpl
mov
and
mov
dec
adc
mov
or
xchg
shld
bts
setne
mov
pusha
and
mov
pushf
add
pusha
pushf
mov
push
lea
jmp
lea
jbe
xadd
mov
bsr
btc
add
btc
dec
bt
cmp
mov
bts
movzx
shr
add
shl
mov
cmp
rcr
mov
stc
cmp
push
mov
lea
jp
jbe
or
add
sub
movzx
cmc
sub
mov
pushf
lea
mov
rcl
add
dec
shl
xadd
rcr
shr
movsx
bt
xor
shl
mov
movsx
lea
add
lea
pusha
mov
movsx
mov
lea
pusha
pushf
mov
pusha
pushf
jmp
sub
push
mov
cli
cli
jl
xlat
aas
in
addr16
retf
cmp
adc
mov
cmps
mov
retf
inc
mov
(bad)
in
pop
cmc
mov
fbstp
clc
fdiv
xor
push
jb
cmps
repz
repz
add
fsubr
mov
mov
(bad)
fs
sub
xlat
call
sub
jg
mov
jge
aad
(bad)
pusha
add
stc
pushf
push
movzx
stc
pop
adc
lea
mov
cmc
add
stc
pushf
mov
test
test
pushf
call
lea
ja
push
bt
cmc
sub
cmp
lea
add
mov
pusha
bswap
pushf
mov
push
lea
jmp
inc
mov
jmp
add
inc
gs
imul
inc
add
loopne
sbb
loopne
arpl
jecxz
stos
mov
cdq
or
xor
test
je
and
shl
xchg
push
dec
fisttp
mov
jnp
in
ins
gs
inc
xor
jae
add
or
fdivr
pop
pop
sub
xchg
and
and
sbb
out
test
cs
(bad)
out
popa
jecxz
fcomp
fild
dec
mov
stos
and
iret
hlt
push
int3
xchg
jae
push
inc
stos
mov
out
jl
jmp
adc
retf
or
fsub
and
xor
add
push
fwait
in
cmc
je
std
sbb
mul
(bad)
outs
das
test
imul
jp
xor
pop
fwait
mov
push
xchg
sub
cmp
repnz
mov
jl
retf
add
add
mov
push
aas
nop
popa
cmp
xchg
mov
fcom
push
mov
push
adc
(bad)
jae
add
jns
pushf
mov
mov
pusha
mov
pusha
mov
lea
jmp
iret
std
mov
sbb
int3
fyl2xp1
iret
adc
jo
mov
cmp
(bad)
ffreep
dec
fisttp
out
retf
shl
sbb
ror
gs
push
add
add
xchg
mov
jbe
ds
push
retf
cmp
sub
test
pop
cmps
int3
out
xchg
jns
inc
inc
xchg
xchg
mov
in
xlat
mov
cli
and
fld
fstp
xchg
dec
shl
push
or
mov
or
xchg
cmp
xchg
mov
mov
cli
jmp
xor
inc
enter
ror
mov
(bad)
call
sbb
mov
and
jns
icebp
retf
imul
xchg
loop
mov
outs
inc
lods
popa
sub
sbb
cmp
test
mov
jnp
js
mov
rol
nop
mov
movs
or
mov
lods
mov
jmp
add
jae
mov
scas
mov
ret
push
paddq
mov
pop
stos
cmc
and
mov
ss
lahf
bnd
or
cld
loope
cmps
stos
jl
scas
adc
adc
and
je
call
lea
jb
push
mov
cmp
push
call
and
dec
stc
sbb
daa
pop
popa
push
mov
cmps
arpl
repz
aam
and
pushf
aad
jge
xchg
xor
pushw
cmp
push
cwde
mov
bound
stos
ds
jge
jbe
and
push
ror
sti
sar
clc
mov
jle
mov
popf
gs
xchg
dec
adc
pop
sbb
dec
jg
into
test
mov
add
mov
(bad)
jmp
(bad)
xor
(bad)
cli
xor
loope
ja
in
mov
inc
stc
pop
cmp
sub
push
dec
mov
push
out
test
dec
fimul
fsubrp
add
cmp
inc
retf
pop
mov
xlat
jbe
retf
cmp
fs
fbld
clc
sbb
jge
push
sub
imul
push
cwde
loop
scas
push
or
xchg
bound
aas
sub
pop
loope
push
vandpd
adc
hlt
in
or
pop
stc
popa
cmp
add
ins
aas
add
cld
js
pop
fs
push
mov
lods
(bad)
es
sbb
push
dec
fisub
or
loop
pop
outs
adc
xchg
outs
shl
arpl
add
sub
or
push
xor
fmul
push
(bad)
fld
(bad)
test
fwait
ss
outs
xchg
sbb
ror
sub
mov
ins
test
push
sahf
xchg
or
ror
or
jno
sub
rcr
jb
mov
pop
test
and
mov
inc
fidivr
xchg
fcmovne
call
sahf
jmp
jle
mov
mov
not
loop
mov
aaa
cmp
xchg
jne
call
dec
pop
inc
in
aaa
or
pop
scas
jl
xor
test
jmp
xchg
push
(bad)
add
fld
xchg
es
sub
push
mov
pop
inc
mov
pushf
call
lea
mov
push
mov
push
push
mov
pushf
mov
push
push
push
ret
push
lea
jae
shld
btr
sub
mov
call
cmp
cli
sbb
iret
mov
inc
fld
push
pop
sar
xlat
and
cs
pop
fdivr
inc
sahf
xchg
adc
pop
popa
arpl
xchg
or
ja
pop
fldcw
xchg
repz
pop
outs
popa
hlt
cld
mov
push
lods
adc
mov
inc
call
mov
ja
inc
pop
mov
movs
outs
push
mov
xchg
mov
mov
iret
leave
imul
mov
sbb
movs
scas
dec
lods
or
mov
dec
mov
adc
retf
pop
stos
loop
aad
xor
xabort
xchg
push
loope
mov
shr
cmps
clc
adc
addr16
out
test
sub
push
enter
mov
pop
and
push
inc
imul
(bad)
test
jns
(bad)
pusha
pop
lods
xor
int3
cmp
sub
clc
sbb
mov
ins
mov
cmps
jno
cmp
les
popa
xor
out
push
cld
cmps
loop
aas
ret
cmp
sbb
or
dec
jae
inc
or
dec
push
aam
ja
jnp
pushf
(bad)
stos
jl
fnsave
orps
int3
cli
in
push
mov
jmp
jle
sub
cmp
mov
jle
jmp
sbb
push
sub
inc
out
pop
sub
mov
outs
dec
daa
sbb
dec
icebp
pop
lahf
lahf
cs
shl
add
pusha
ret
in
or
jmp
adc
dec
(bad)
cmp
xchg
call
pop
mov
mov
push
mov
call
lea
jae
test
add
call
add
inc
js
je
jb
arpl
jae
push
out
std
sbb
shl
pop
lds
dec
in
jp
int
mov
ror
jmp
adc
inc
mov
arpl
inc
mov
stos
bound
add
cs
jmp
test
stos
in
movs
es
sub
ret
aaa
jns
mul
and
ret
push
repz
push
icebp
aaa
pop
sar
repnz
mov
fldcw
(bad)
out
imul
mov
ror
in
jne
ficom
call
mov
pop
mov
(bad)
icebp
or
pop
iret
sub
add
or
nop
xlat
rol
pop
adc
jmp
stc
xor
cmps
clc
push
cmps
ins
loope
and
cdq
imul
xchg
sbb
movs
cmc
xchg
scas
cmp
(bad)
jp
sbb
enter
aaa
or
xor
push
cmp
aaa
push
out
add
mov
call
(bad)
in
jmp
stc
push
xor
ret
adc
jmp
add
js
aam
adc
ja
imul
(bad)
cdq
(bad)
xlat
in
jle
out
xchg
(bad)
into
rcl
in
and
rcr
or
xor
(bad)
xor
test
lea
call
inc
xchg
pop
idiv
push
inc
inc
into
jae
xor
xor
repz
dec
cmp
xchg
xor
fdivr
test
ds
pop
sub
(bad)
mov
ins
pop
dec
mov
outs
inc
imul
sbb
push
xor
test
ins
sub
shl
out
dec
pop
sub
shl
jmp
mov
jmp
iret
das
lods
push
cli
or
mov
aas
ja
dec
pushf
cmc
pop
sbb
sub
cs
test
adc
xor
sub
(bad)
push
xchg
cmp
lods
push
out
arpl
xchg
mov
dec
jbe
lods
pop
fiadd
(bad)
icebp
xchg
xchg
test
(bad)
sbb
mov
mov
loop
mov
push
lea
mov
addr16
mov
xchg
shl
repnz
sahf
push
imul
push
lock
adc
into
out
push
push
aaa
xchg
pop
xchg
nop
xchg
shl
or
sub
and
pop
lods
jmp
or
ins
in
mov
mov
in
scas
and
mov
cmp
outs
inc
dec
lock
les
or
int
mov
inc
movs
scas
fisttp
mov
mov
repz
fs
jne
pusha
mov
inc
test
cmp
shr
call
clc
iret
xchg
sbb
jbe
mov
frstor
pop
dec
push
pop
mov
enter
pop
fs
push
add
mov
retf
adc
fcomp
and
add
sub
mov
daa
xor
cdq
inc
adc
xchg
loopne
and
push
stos
(bad)
mov
dec
sbb
cmp
into
cmp
jnp
sub
push
sub
pop
lods
or
fnsave
rcl
or
js
add
cmp
loope
(bad)
adc
and
scas
push
cmp
int
or
outs
xor
cmp
in
add
pop
mov
imul
loopne
stc
sti
outs
test
pop
jo
addr16
test
add
cmps
ret
mov
jmp
cs
outs
add
mov
cli
cmp
out
mov
or
sbb
int
add
xchg
pushf
cli
nop
test
loope
(bad)
push
mov
inc
icebp
cmps
add
mov
or
pusha
(bad)
int3
xor
lock
sub
pop
test
xor
out
pop
jae
sbb
es
mov
add
retf
pop
mov
out
push
outs
shl
xchg
mov
nop
mov
test
sub
or
pushf
addr16
fdiv
jns
add
(bad)
jmp
scas
cdq
jb
jp
shr
add
popa
shr
aad
(bad)
push
mov
mov
xor
mov
lock
int3
popa
mov
and
push
mov
call
xor
mov
out
dec
mov
mov
sub
mov
pop
es
sbb
ja
arpl
xor
sub
push
test
pop
xchg
jbe
daa
mov
je
jmp
aaa
int
cmp
xchg
loopne
(bad)
jae
aad
adc
mov
pop
ret
das
adc
psraw
ins
loop
cdq
push
mov
fldcw
lds
mov
es
push
mov
mov
test
mov
xchg
bound
fs
lods
or
cmps
sbb
cli
xchg
and
or
xchg
adc
arpl
sbb
inc
nop
mov
ret
mov
jbe
vpmaddwd
push
lods
push
inc
out
push
imul
push
and
call
pop
ds
test
not
sub
mov
mov
stc
inc
mov
rol
shl
xadd
xadd
add
btr
cmp
shr
cmc
sub
mov
dec
add
pushf
pusha
call
call
xchg
mov
add
xlat
adc
pop
adc
sbb
fwait
lea
push
and
pop
sbb
mov
xchg
mov
jp
enter
push
mov
fisttp
jmp
bound
leave
leave
jge
std
aaa
push
addr16
lahf
pop
cmp
pop
mov
and
out
inc
add
sbb
popf
pop
adc
sub
loope
(bad)
mov
scas
mov
call
jge
sbb
aas
inc
xor
int3
xor
or
push
aad
push
or
nop
ins
in
lods
in
retf
add
inc
add
sbb
mov
xchg
mov
pandn
cmps
xor
arpl
loopne
xlat
mov
(bad)
into
sub
jne
mov
mov
push
cmp
imul
mov
adc
and
test
in
or
adc
xor
pop
leave
ret
sub
or
sbb
rcl
dec
sbb
mov
mov
ss
mul
sbb
es
fdiv
aaa
pop
mov
fbld
and
push
sahf
push
or
add
mov
stos
mov
stos
scas
mov
jne
out
in
push
or
fld
movs
dec
lahf
or
mov
popf
scas
enter
stos
cs
xchg
jae
mov
leave
pop
xor
mov
vpmacsww
xchg
fstp
popa
in
mov
or
aaa
xchg
cdq
push
fcomp
call
jmp
stos
dec
mov
inc
mov
movs
xlat
xor
lock
jmp
loop
ja
das
das
pushf
cmps
test
xchg
pop
imul
mov
daa
nop
arpl
xchg
sub
jle
xchg
aaa
mov
cmps
pop
pop
(bad)
push
push
cwde
mov
push
retf
neg
sbb
test
inc
xchg
mov
pop
retf
cmp
je
cmp
scas
mov
shr
push
out
jbe
add
dec
ins
fcomp
sbb
adc
sbb
shl
or
jp
je
aam
sbb
or
xor
sar
sbb
xor
inc
test
xor
mov
jmp
mov
(bad)
div
cli
sbb
xor
fisttp
mov
xchg
loop
js
into
into
ss
out
daa
and
add
xor
daa
lds
inc
dec
mov
shl
cs
mov
push
imul
je
or
fs
or
cmp
bound
(bad)
or
ficomp
in
(bad)
jae
outs
sahf
mov
xchg
cmp
jb
test
shr
fnsave
aaa
outs
cld
gs
rcl
sub
mov
cli
add
ja
cmp
enter
mov
fwait
lock
mov
popf
xchg
test
dec
test
aas
and
movs
mov
and
mov
sbb
call
pop
push
lods
jl
call
gs
jp
add
add
scas
push
cmp
add
add
add
add
add
add
pop
push
cmp
outs
push
cmp
push
mov
add
outs
movs
add
add
add
add
jp
cmp
nop
push
cmp
mov
aas
aas
mov
movs
mov
shr
add
outs
inc
ins
ins
dec
outs
jae
inc
popa
ins
ins
inc
popa
arpl
test
aas
aas
mov
aas
add
push
ins
ins
add
cmps
push
(bad)
out
(bad)
out
mov
pop
bound
movs
pop
nop
and
jbe
cld
sbb
fiadd
(bad)
sahf
xor
xor
je
inc
(bad)
stc
and
jns
out
pop
rcr
les
iret
mov
repz
jnp
xor
cmp
sub
sbb
adc
call
jns
daa
daa
fild
sbb
mov
lods
mov
aaa
and
push
mov
push
ds
dec
jp
out
movs
add
xchg
fsub
sbb
mov
mov
mov
xchg
cli
sbb
(bad)
push
cmp
or
adc
mov
ja
aaa
aas
out
(bad)
sbb
sbb
pop
addr16
pop
jne
addr16
mov
sub
xchg
mov
lahf
sbb
sahf
lock
cmp
js
inc
xchg
inc
sahf
inc
out
push
lods
das
fsubr
orps
push
loop
leave
xor
mov
leave
pop
mov
mov
cld
or
lods
sbb
xchg
outs
mov
rcr
xor
mov
and
cmp
les
imul
or
(bad)
jmp
xchg
ret
retf
popf
not
xchg
pop
(bad)
push
mov
inc
dec
loop
stos
retf
ins
retf
push
cmp
(bad)
push
push
sub
popf
(bad)
jmp
mov
mov
dec
cmp
popa
movs
outs
and
xor
(bad)
scas
adc
add
adc
call
(bad)
cmp
mov
mov
sti
mov
cmp
xchg
add
dec
outs
popa
fs
jne
jae
jb
add
je
sub
popf
jmp
int3
inc
mov
ret
inc
cdq
xchg
shl
in
or
sub
mov
add
call
push
ss
sub
ficom
jmp
retf
and
xchg
mov
(bad)
sbb
or
jmp
xor
dec
push
shl
adc
dec
pop
sbb
jo
dec
movs
mov
add
inc
or
mov
xor
mov
push
jmp
jmp
clc
stc
sub
cmp
cmc
cmp
jb
pushf
lea
ja
call
call
mov
ret
call
sbb
inc
fucomip
ins
mov
sahf
imul
retf
outs
and
icebp
xchg
mov
push
rol
add
clc
add
inc
mov
cmps
or
add
jg
out
cld
(bad)
cwde
or
(bad)
xchg
pop
sbb
ret
cs
inc
daa
popa
and
scas
cmps
or
out
mov
aaa
mov
mov
sub
repz
bound
sub
lds
or
scas
jecxz
sti
call
cmps
jb
movs
mov
sti
fld
loope
lds
adc
lods
out
or
cmp
xor
mov
popf
and
mov
push
mov
shl
nop
mov
int
jbe
test
aam
popf
sub
mul
lds
xchg
rol
mov
hlt
fnstsw
lods
das
rcl
pop
ret
fdivr
xchg
stos
ss
and
adc
push
loope
mov
mov
lea
ja
movzx
pop
setno
call
sbb
or
add
jle
pushf
mov
in
mov
mov
pop
out
and
cmp
jno
push
jmp
outs
xchg
aaa
fidiv
or
popa
push
loop
scas
test
xchg
pop
push
int3
inc
data16
in
mov
(bad)
jns
int3
iret
fidiv
mov
div
add
mov
(bad)
and
mov
adc
test
sub
mov
xchg
(bad)
mov
xor
xor
fs
ins
add
loopne
sbb
dec
mov
ror
out
fsubr
mov
loop
fsub
out
jl
and
sahf
adc
mov
adc
movhps
aam
xchg
loop
cmp
adc
es
sub
sbb
mov
mov
mov
pop
leave
ret
out
outs
push
and
lea
inc
xchg
test
int3
mov
mov
mov
mov
jbe
mov
fidiv
jl
repz
dec
sahf
mov
mov
mov
dec
inc
push
dec
inc
dec
xor
cs
ins
add
lds
sbb
xchg
icebp
mov
ins
pop
aaa
test
movs
int3
ins
xor
std
xor
push
dec
test
ss
inc
xchg
push
inc
addr16
movs
les
push
adc
test
sub
leave
stc
fdiv
push
jp
jo
sbb
cmp
mov
aas
sbb
inc
adc
fs
je
je
xor
rcr
cmove
xor
(bad)
stc
movs
or
jo
pop
(bad)
sub
cwde
addr16
lods
movs
fadd
into
outs
xor
scas
dec
push
into
push
(bad)
sub
data16
mov
sbb
xchg
fwait
stos
push
test
ret
in
fnsave
xchg
adc
fs
js
int3
lds
ret
inc
cdq
ins
ficom
xor
mov
or
retf
ret
and
push
in
add
or
pop
mov
push
aam
jo
jg
loopne
lahf
pusha
push
mov
dec
sub
and
mov
movs
loopne
pop
out
push
in
nop
bound
jns
rol
adc
stos
pop
in
repz
pcmpgtw
xchg
pushf
and
inc
cld
dec
mov
jae
loop
or
into
fs
cmp
inc
pop
mov
cmp
push
leave
and
cwde
jle
ret
jne
nop
add
pop
sahf
adc
pop
rcl
sub
(bad)
jmp
fwait
xchg
or
sub
sbb
mov
jne
xor
dec
in
pop
ret
scas
das
mov
test
jmp
or
cmp
ficom
es
in
or
jl
not
jmp
inc
dec
(bad)
call
test
mov
loopne
sbb
and
push
mov
outs
xor
cli
jge
add
les
xor
or
(bad)
mov
in
sbb
stos
jnp
mov
jo
jno
sbb
and
fwait
sahf
inc
dec
jge
inc
out
stos
movs
pop
add
xchg
sub
mov
mov
mov
out
pop
cs
popa
fisttp
test
or
ins
mov
mov
iret
jmp
dec
jmp
jno
mov
or
lock
xchg
lods
and
xlat
int3
xor
sbb
ins
(bad)
outs
cdq
mov
icebp
sbb
out
xor
add
push
fs
mov
dec
mov
loop
inc
xchg
mov
jl
sub
sti
pop
pop
inc
and
push
test
mov
stos
xor
mov
cdq
mov
fsubr
and
xlat
mov
push
cmp
lock
lods
or
add
sbb
inc
cmp
or
dec
ds
sti
jge
mov
jbe
out
mov
jmp
out
adc
(bad)
cmp
push
neg
cld
add
mov
scas
adc
xchg
cmc
xor
iret
sbb
jne
scas
std
aad
stos
adc
shr
fisub
outs
(bad)
loope
inc
inc
sub
lds
mov
dec
sub
mov
jbe
popf
lahf
mov
cmps
mov
mov
jnp
dec
push
or
in
mov
and
dec
js
jl
mov
push
mov
call
sub
mov
dec
and
push
ret
sti
arpl
mov
mov
inc
fsubr
jmp
icebp
repz
mov
cmp
mov
aas
cdq
sahf
jbe
mov
fsub
inc
out
xor
(bad)
jge
mov
scas
stos
pop
rcl
add
test
bound
add
dec
inc
xchg
xchg
cmp
bound
cwde
cdq
sahf
cmp
fcos
cdq
mov
outs
fsubr
outs
xchg
out
sbb
sbb
jecxz
mov
jmp
mov
imul
pushf
and
cwde
or
cmp
imul
ja
rol
rcl
pop
cs
fisub
jbe
cli
or
xlat
(bad)
mov
dec
xchg
test
lea
add
xlat
push
outs
pop
cli
mov
xor
les
mov
fisttp
mov
aad
(bad)
test
es
ja
or
xor
xor
xchg
push
add
ret
dec
sub
rcl
sbb
jno
ja
pop
xor
je
lock
gs
neg
repnz
sbb
ins
sbb
outs
loopne
(bad)
jmp
adc
fwait
ret
pushf
pop
xor
pusha
add
inc
outs
loopne
push
ja
jmp
fld
aam
mov
adc
or
pop
and
xor
ins
mov
enter
cmps
mov
lea
fisubr
sbb
es
xchg
out
out
test
lods
stc
jmp
in
mov
nop
loop
mov
jp
out
repz
mov
xchg
sub
push
or
sub
bound
mov
(bad)
fmulp
fs
or
dec
mov
nop
cmp
lds
call
mov
sbb
pop
add
rcl
xchg
(bad)
pop
cmp
push
pop
and
jg
dec
mov
daa
clc
daa
xchg
cmp
dec
xor
loope
stos
sbb
cmc
push
inc
xchg
sbb
pop
mov
cmp
lods
or
lea
ja
bt
pusha
pusha
call
jge
fwait
rcr
push
push
cld
mov
inc
cmp
lahf
xchg
lock
inc
or
sar
shr
and
repz
icebp
mov
ror
xor
jnp
cmp
mov
pop
in
lea
cmp
repnz
cwde
fisttp
xchg
adc
dec
daa
mov
cmp
sbb
lahf
sbb
movups
rcr
and
(bad)
push
ret
in
mov
adc
xchg
lods
cmp
pop
mov
or
test
clc
not
test
cmp
cmp
movsx
pushf
call
sbb
inc
rcr
daa
push
mov
pusha
inc
inc
out
lods
aad
pop
and
out
and
out
cmp
idiv
popf
mov
add
sbb
repnz
sbb
mov
xchg
and
pop
arpl
icebp
mov
enter
mov
sbb
inc
icebp
push
ja
retf
jle
push
inc
inc
arpl
sbb
jmp
ret
lods
inc
inc
ret
push
mov
adc
mov
lds
(bad)
int
ins
test
push
dec
(bad)
push
add
cli
push
test
aaa
scas
jmp
xchg
xchg
mov
ja
sbb
js
xor
push
inc
mov
in
sti
jns
pop
xor
xchg
ins
js
fisub
and
and
pop
fisub
icebp
inc
clc
push
fsub
test
out
push
or
and
(bad)
push
push
out
push
jl
sahf
or
jge
inc
or
push
sbb
mov
jg
ss
loopne
xchg
add
movs
loop
xor
les
and
adc
mov
ss
ss
pusha
(bad)
loope
out
repnz
sbb
xchg
add
iret
jb
inc
rcr
mov
pop
add
push
out
pop
mov
icebp
or
hlt
xchg
cmp
cwde
pushf
inc
cs
push
or
inc
push
mov
jmp
mov
imul
addr16
xchg
int
push
push
adc
in
call
mov
and
mov
cld
sbb
repnz
(bad)
outs
pop
xchg
inc
cwde
fmul
xor
pop
icebp
mov
ins
mov
mov
cmc
jnp
lods
ds
(bad)
idiv
sbb
addr16
sub
(bad)
out
pop
mov
pop
(bad)
sbb
cmp
or
or
pushf
sar
in
mov
jns
hlt
cvtpi2ps
dec
inc
shl
rcl
lods
mov
jns
sbb
movs
pop
pop
push
fnstenv
or
mul
inc
cmp
mov
sub
push
mov
retf
sbb
cld
imul
test
and
ds
clc
push
shl
ror
stos
stc
and
xor
std
ret
mov
jecxz
or
mov
xchg
dec
mov
(bad)
xchg
mov
pop
mov
pushf
pushf
lea
jae
cmp
mov
mov
mov
cmp
mov
pushf
pushf
pusha
push
xor
jmp
xor
ds
jne
xchg
xlat
test
sub
add
outs
dec
lock
inc
imul
xlat
or
xchg
(bad)
es
cdq
popa
popf
sbb
shr
mov
jge
pop
jae
mov
retf
nop
shr
imul
mov
xor
call
xchg
mov
call
push
cs
aam
(bad)
jge
jp
and
jae
imul
ss
test
jmp
mov
sub
or
add
jp
fst
inc
mov
cs
or
xchg
push
imul
(bad)
cmp
out
xchg
call
xchg
adc
cdq
jnp
xchg
pop
sub
inc
(bad)
adc
fs
popf
mov
pop
jg
sbb
outs
ficomp
sti
push
dec
cli
lods
push
mov
cmc
imul
clc
fdiv
(bad)
shl
stos
adc
std
sub
jmp
or
mov
pusha
jo
stos
out
movs
dec
mov
jp
rcr
sbb
rol
adc
je
xor
ret
push
jo
std
cmps
mov
inc
mov
dec
stos
jmp
push
add
ins
(bad)
in
shl
out
mov
mov
inc
gs
dec
cmp
push
add
xchg
addr16
sub
sahf
(bad)
mov
sbb
jmp
popa
sub
add
fs
call
jmp
push
call
test
xlat
sbb
test
imul
add
mov
adc
and
inc
into
fwait
sbb
pop
push
mov
shr
shl
rol
imul
addr16
mov
dec
pop
ret
cmp
int
mov
test
cmps
ja
clc
mov
dec
push
or
mov
dec
pushf
xchg
fdiv
in
push
fistp
sbb
in
or
or
iret
mov
outs
mov
sbb
test
je
(bad)
sbb
iret
enter
xor
mov
cmp
pop
push
jmp
push
ret
xor
dec
adc
scas
shl
push
pop
(bad)
push
xor
mov
fmul
hlt
jmp
int
or
cdq
test
fld
jmp
les
inc
neg
es
pop
aam
jno
xor
repnz
retf
xor
or
push
std
mov
fs
test
(bad)
sbb
mov
outs
xchg
pop
push
push
popf
repnz
sbb
cmc
push
ds
adc
mov
dec
sub
ror
adc
mov
(bad)
shl
dec
mov
xor
or
cmps
fld
or
xchg
loopne
xor
add
mul
pop
fild
fstp
stc
mov
push
xor
repz
ins
sbb
clc
test
dec
inc
mov
lods
mov
adc
and
jmp
stc
nop
cmps
test
stc
call
shl
lods
dec
adc
mov
lea
test
push
in
cld
pusha
xor
test
push
mov
(bad)
push
ror
pop
push
pop
retf
popf
add
cdq
pusha
stos
stos
in
inc
pop
adc
mov
dec
cmps
(bad)
push
mov
cmp
inc
xchg
daa
in
or
inc
clc
jo
xor
jae
cmp
lea
jae
clc
cmp
pushf
lea
jae
jmp
sub
lahf
mov
rcl
xor
add
not
dec
and
bt
mov
jmp
data16
fcomp
inc
dec
arpl
adc
daa
or
xor
jl
or
jg
pop
jno
dec
mov
cmp
stos
sub
pop
xor
(bad)
pusha
cmps
pop
std
cmp
add
clc
popa
inc
int
vorps
out
xchg
jmp
(bad)
sti
fmul
fwait
push
retf
jne
pop
xchg
pop
push
std
lahf
push
sbb
jnp
fst
inc
test
in
lods
xlat
fsubr
mov
jbe
cmp
dec
cmp
dec
add
push
test
add
stos
sub
ret
idiv
mov
sbb
dec
xchg
sbb
jo
call
outs
xlat
arpl
adc
push
fadd
ss
ret
cli
call
xchg
and
sub
lock
retf
loop
pop
retf
pop
sub
pop
test
test
push
sub
retf
fmul
adc
jle
mov
push
sbb
xchg
cmp
and
shl
jge
test
daa
pop
das
inc
mov
icebp
lods
pop
push
xor
pop
xor
mov
pop
cmp
cmp
das
mov
sbb
xchg
fild
sbb
fld
dec
popa
fistp
rcr
push
dec
cmps
nop
std
dec
jns
jmp
dec
mov
pop
shl
js
mov
pushf
cmps
ja
repz
mov
test
adc
add
inc
mov
retf
arpl
ret
lahf
adc
mov
cmp
mov
std
mov
(bad)
in
in
clc
pop
ds
daa
(bad)
in
icebp
in
push
add
(bad)
cmps
jmp
add
push
mov
ja
mov
das
addr16
sbb
jmp
inc
mov
lock
test
mov
xchg
(bad)
inc
(bad)
out
ror
cdq
xchg
sub
push
and
ins
loopne
fnsave
test
in
in
es
mov
retf
or
ins
dec
push
test
nop
sahf
pop
push
dec
dec
mov
fcom
add
sbb
mov
add
leave
add
add
sub
es
lods
punpcklbw
inc
xchg
and
stos
and
xchg
mov
ss
dec
inc
dec
dec
xor
cs
ins
add
push
mov
sbb
inc
cmps
sti
in
xor
mov
imul
add
push
lods
(bad)
std
fs
jmp
inc
jbe
lods
popa
xor
mov
mov
stos
icebp
xchg
cmp
xor
fsqrt
div
fild
les
xor
outs
fstp
imul
aaa
jnp
jne
mov
push
loop
les
es
sub
cmp
(bad)
fs
sub
popf
aaa
sar
jl
and
je
mov
cld
pusha
jmp
xor
xchg
fstp
inc
and
(bad)
ds
cmc
mov
das
xor
fcmovu
cmp
xor
movs
pop
pop
lahf
ds
aaa
ins
mov
js
pop
inc
enter
fcom
xchg
xchg
(bad)
cld
outs
and
clc
or
push
push
out
jle
nop
cmps
inc
pop
scas
shr
in
xor
xchg
outs
mov
mov
sbb
cmc
call
xchg
gs
sbb
iret
enter
or
not
stc
jmp
pusha
lea
je
lahf
xor
test
test
aaa
shl
mov
bsr
bswap
sar
mov
and
and
shr
movsx
mov
cmp
add
mov
pusha
or
call
mov
push
lea
call
pusha
mov
mov
adc
pusha
lea
jae
pusha
call
outs
in
fcomp
mov
std
aam
imul
jle
mov
inc
cli
dec
pop
hlt
js
xlat
mov
imul
sbb
movs
aaa
push
jne
push
imul
hlt
mov
sub
fwait
xchg
in
pop
int
dec
mov
lock
sbb
leave
inc
sbb
mov
int3
scas
mov
jp
leave
(bad)
push
imul
jb
jnp
push
push
push
or
add
cmp
xchg
or
xor
push
xor
int3
dec
sahf
cmp
jae
sub
jae
xor
repnz
add
test
aad
(bad)
call
ins
jle
fcomp
cmp
sahf
push
lahf
in
xor
outs
hlt
mov
push
push
cli
jge
js
imul
sar
pop
nop
mov
push
xchg
ins
pop
cmp
mov
jge
cmp
inc
nop
mov
pop
fld
cmc
dec
loop
add
ror
test
push
push
cmp
add
out
mov
shl
in
fdivp
mov
cs
rcr
(bad)
(bad)
jge
add
ds
ds
push
fs
mov
xor
call
(bad)
and
pop
clc
lds
push
or
push
mov
sub
jb
push
into
loope
retf
push
test
int3
pop
xlat
in
xchg
add
dec
xchg
sub
xchg
movs
or
or
loope
cmp
hlt
test
xchg
sbb
sbb
cdq
sbb
push
repnz
add
inc
popf
enter
sbb
or
(bad)
push
xor
push
pushf
sbb
xchg
sbb
imul
test
inc
cmp
pop
bound
or
imul
jb
enter
mov
jns
push
sub
or
test
rcl
jo
push
enter
ja
sahf
aad
inc
scas
push
add
pop
retf
aad
pop
xor
pop
sahf
mov
pop
xchg
in
pop
jge
sbb
int3
sub
and
jmp
fidiv
jae
das
xor
daa
mov
mov
repnz
xor
adc
popa
je
aas
(bad)
push
pushf
push
pop
bt
mov
cmp
cmp
mov
lea
ja
xor
sub
shl
ror
bsr
add
or
bswap
mov
test
mov
pushf
pusha
repnz
lea
jl
pusha
mov
pusha
lea
jne
movsx
bswap
jmp
jae
jno
sbb
cmp
dec
mov
add
sti
push
add
aas
pusha
push
push
div
test
push
add
call
jle
add
ret
ret
jo
mov
mov
push
loop
sbb
ins
movs
pop
jne
xchg
push
pusha
add
rol
xchg
ins
jbe
(bad)
shr
sub
mov
xchg
(bad)
gs
cmc
movs
mov
sbb
fdivr
and
sti
mov
les
jmp
cmp
adc
sti
pop
pop
outs
xchg
sbb
cmp
data16
loop
inc
cdq
je
retf
xor
stc
xor
inc
mul
out
mov
sbb
mov
inc
(bad)
sub
fwait
add
aam
xchg
mov
cs
test
inc
push
leave
mov
retf
mov
out
xor
dec
adc
push
mov
cmps
dec
cld
nop
jnp
cld
(bad)
mov
add
or
adc
rcr
cs
inc
(bad)
mov
sbb
pop
or
pop
jbe
adc
daa
lea
test
pop
mov
popf
(bad)
xchg
sub
jno
bound
retf
mov
ret
sub
inc
popf
jle
jb
lds
sub
cli
adc
and
mov
mov
fisttp
pop
das
les
nop
das
inc
cmps
rcr
sar
mov
rol
fild
test
pop
loopne
mov
enter
push
pop
test
(bad)
cmps
fild
cld
and
mov
repz
mov
ror
cmp
mov
ds
pop
or
(bad)
push
movs
pop
or
xor
fs
lods
dec
stos
mov
and
lock
ja
clc
pusha
clc
jmp
lods
lock
push
mov
addr16
out
in
add
fdiv
push
(bad)
cs
aad
xchg
sub
cs
inc
xchg
mov
jb
pop
into
scas
sbb
sub
ins
jno
stos
push
pop
pop
jb
outs
ins
or
mov
jecxz
add
pusha
jg
add
push
outs
adc
mov
aam
push
fld
jecxz
sub
das
ins
mov
shl
xchg
mov
test
scas
in
jmp
dec
inc
aad
or
pusha
inc
lock
dec
sub
lea
out
(bad)
cli
retf
push
cmp
jmp
xor
bound
loopne
cmp
shl
dec
ins
xor
ficomp
in
outs
push
cmp
cmp
and
(bad)
cmc
test
pop
nop
inc
dec
test
das
push
lods
iret
pop
mov
push
adc
pop
rcr
add
jnp
pop
adc
bound
arpl
ficom
push
ret
push
scas
and
xchg
cmp
xor
test
test
fstp
sub
jne
in
pop
movs
adc
je
movs
mov
or
xor
outs
into
add
inc
retf
cmps
adc
iret
icebp
call
xchg
pop
les
test
ror
ret
sbb
xchg
mov
(bad)
sbb
fbld
in
imul
dec
and
and
mov
leave
popa
call
mov
mov
in
inc
pop
cmp
mov
dec
int
push
mov
imul
inc
frstor
test
(bad)
inc
xchg
sti
pop
test
imul
call
gs
retf
out
inc
fwait
sbb
movs
jg
pusha
test
mov
sub
int3
and
xchg
in
pop
jno
(bad)
xor
cli
sbb
cwde
shl
and
fbstp
div
mov
stc
adc
test
jp
add
pusha
mov
lea
call
pushf
jmp
mov
jbe
sbb
into
add
xchg
dec
sbb
xor
ret
mov
aam
and
push
fdivr
cmp
shl
rcl
fwait
pop
xor
mov
in
jmp
adc
inc
nop
or
push
lods
pop
pushf
dec
ss
pop
xor
sbb
mov
cmp
cs
jge
test
mov
lods
addr16
adc
aas
cmps
inc
lock
outs
ret
cmp
push
xchg
mov
(bad)
mov
jmp
ret
sub
jmp
out
out
out
sbb
pop
jl
rcr
inc
out
push
test
cld
jmp
add
xchg
hlt
int
xor
lods
sbb
js
fcmovnbe
xor
mov
call
push
mov
add
inc
push
pop
sbb
or
aad
dec
xlat
lahf
push
sub
sub
push
cmp
ror
pop
sti
fsubr
pop
adc
shl
sub
inc
aas
push
clc
dec
out
xchg
sub
aad
movs
imul
(bad)
add
inc
cmp
ins
push
xor
adc
ins
mov
mov
scas
mov
add
loopne
fs
test
les
sbb
xchg
int3
add
xchg
cli
cmp
scas
lock
out
xchg
jmp
neg
inc
in
mov
pusha
ror
adc
ds
mov
data16
mov
(bad)
ds
test
pushf
div
sahf
pop
pop
sbb
lea
sti
or
loopne
dec
repz
cmp
sbb
iret
add
mov
dec
das
push
push
in
or
or
adc
push
xor
xor
rcr
jmp
je
lds
push
or
and
sbb
sbb
popa
push
sbb
dec
fdiv
sbb
and
aaa
mov
ja
stc
fimul
pop
xor
ror
cs
jae
pop
leave
push
(bad)
sub
mov
ja
ins
jge
sbb
mov
lahf
jecxz
inc
sbb
enter
arpl
cmp
pop
push
push
popa
xchg
imul
rcr
fs
movs
mov
call
xor
ds
movs
imul
cwde
into
imul
ret
adc
retf
inc
inc
clc
dec
sub
pusha
test
clc
bt
lea
add
not
call
dec
ror
(bad)
sbb
loope
mov
sbb
stc
and
sti
jge
cmp
imul
dec
hlt
push
push
pop
and
fdivr
xchg
mov
mov
movs
pop
inc
pop
stos
mov
dec
or
jp
mov
fnop
xchg
jno
lahf
bound
int
pop
(bad)
sbb
inc
rcl
cmp
std
rcr
cmps
fcom
sbb
aad
repnz
rcl
jp
(bad)
imul
(bad)
out
push
adc
cmp
fld
cmp
add
or
pop
fcmovnu
and
outs
int
fdivr
imul
push
lea
jne
btc
mov
test
call
push
lea
je
jmp
rcr
leave
sbb
(bad)
push
je
out
or
sbb
fst
test
xlat
aas
cs
inc
adc
mov
repz
and
inc
mov
xor
mov
nop
rcr
sbb
ins
test
inc
std
push
aad
inc
lahf
mov
jge
test
jae
xchg
out
js
sbb
cld
pop
ret
jo
or
sub
enter
jae
and
and
cli
and
jno
jns
test
push
arpl
push
mov
inc
mov
sbb
bt
clc
jmp
movs
pop
lods
leave
sbb
mov
or
ret
or
push
sahf
fdiv
outs
lods
sbb
dec
stos
sub
or
jle
std
push
dec
dec
cld
ss
mov
out
pusha
pusha
add
mov
fld
xor
pop
lock
add
sbb
rcl
sbb
call
ds
cmps
(bad)
mov
cmp
jo
push
ins
das
sbb
loopne
xlat
cmps
dec
pushf
mov
lea
jae
clc
stc
pusha
xor
pusha
call
and
bt
add
lea
call
mov
cmc
repnz
jmp
pushf
push
lea
ja
call
mov
(bad)
cdq
add
sbb
shr
dec
shl
mov
pop
data16
jp
aam
jge
rol
cmp
or
mov
daa
mov
imul
pop
cmp
push
mov
cli
mov
xor
xchg
push
xchg
sub
xor
cmp
xchg
add
mov
jmp
dec
inc
outs
(bad)
and
stos
arpl
cmp
mov
(bad)
jbe
scas
xchg
rcl
stos
in
jg
jle
je
pop
(bad)
adc
ins
ds
fild
xchg
pop
adc
add
xor
sub
push
mov
mov
pusha
pushf
mov
push
lea
jmp
inc
mov
retf
sbb
jne
pop
xor
push
fstp
cmp
mov
ds
cmp
pop
cld
in
xchg
inc
jmp
pop
fdiv
cld
jne
cmp
mov
out
imul
ins
(bad)
movs
add
out
cwde
ret
ror
cmp
inc
movs
sbb
cmp
jecxz
je
fcomp
push
js
mov
mov
cmp
loopne
mov
ins
jp
or
mov
sbb
push
out
and
in
push
scas
out
inc
jae
test
scas
mov
pop
mov
retf
ret
ds
xchg
pop
in
lea
push
scas
sbb
sub
arpl
ror
mov
xchg
adc
pop
jae
mov
jmp
mov
pop
sti
xor
ins
sub
pop
xor
loopne
or
loop
add
and
outs
push
pop
jg
lds
jae
xor
xchg
into
jbe
fidivr
out
pop
stos
xor
push
retf
mov
ins
cmp
mov
aas
fsub
mov
push
xchg
and
(bad)
dec
sti
pop
mov
xchg
ret
fsub
lock
mov
sub
ret
test
clc
movs
ret
call
lock
mov
dec
push
mov
cwde
mov
mov
mov
mov
xor
mov
sub
mov
nop
in
sub
sbb
sbb
cmc
aam
inc
adc
push
pop
inc
jg
ret
xchg
sbb
or
leave
es
xor
sbb
adc
inc
mov
jecxz
shl
dec
inc
adc
jg
in
or
fiadd
pop
and
xchg
or
scas
leave
imul
test
mov
sbb
in
push
repz
inc
and
push
mov
imul
push
in
retf
add
out
jp
ja
mov
out
jmp
xor
xlat
mov
pushf
pushf
push
lea
jmp
dec
push
mov
sbb
sbb
sbb
mov
test
je
add
jmp
lock
and
xchg
test
jmp
jmp
mov
xchg
pop
(bad)
test
jmpw
sbb
std
imul
fwait
repnz
repnz
(bad)
(bad)
jmp
xor
pushf
push
aam
jp
jne
sbb
retf
call
push
not
or
fmul
popf
call
(bad)
or
or
xchg
sbb
sti
add
(bad)
call
push
add
lahf
fnstsw
std
xchg
push
and
pop
cmc
aam
mov
jp
jne
scas
loope
jecxz
or
bound
jg
lods
push
jns
or
sbb
ret
out
bnd
not
nop
add
(bad)
pop
jl
cmp
sub
mov
iret
push
sbb
fnstsw
inc
ins
in
add
loopne
clc
dec
sti
adc
(bad)
out
jns
inc
call
fnstcw
sbb
fwait
xchg
stos
cs
js
dec
call
fwait
cs
and
sbb
repnz
push
lds
int
nop
xor
xchg
jecxz
rol
jecxz
inc
shr
xchg
aaa
mov
pusha
call
mov
mov
inc
setb
pusha
inc
call
test
bt
mov
pop
call
(bad)
cmp
iret
sbb
fcomp
mov
jne
mov
pop
sub
xchg
lds
retf
sub
pop
loope
xchg
xor
jae
jnp
jns
or
mov
jp
mov
stc
mov
rol
pop
mov
in
dec
(bad)
dec
out
(bad)
xor
mov
bound
aas
cmp
mov
xor
jp
xchg
repnz
cli
popa
lahf
and
pop
mov
ret
xor
push
push
ss
btr
sahf
xchg
fldcw
dec
pusha
mov
cmc
ja
repz
(bad)
call
jo
fstp
es
mov
popa
int3
xchg
xchg
add
cmps
(bad)
cli
mov
cmps
xchg
or
inc
pop
mov
push
test
sbb
addr16
mul
cld
es
xchg
xchg
jmp
jbe
imul
push
rcr
add
loopne
out
movs
ins
cmps
cmp
sub
sbb
inc
in
dec
adc
sub
cmp
ja
sub
popf
rol
xor
test
mov
xor
add
sub
lods
fs
mov
leave
pushf
xor
cmc
jmp
test
xor
retf
inc
push
xchg
pop
dec
sbb
pop
and
popf
mov
hlt
mov
stc
mov
and
sbb
mov
pop
lea
inc
or
int3
ja
sahf
mov
(bad)
addr16
pop
jmp
dec
push
xchg
add
imul
and
sub
loop
sub
popa
rcl
std
imul
test
(bad)
jno
shl
dec
icebp
cwde
cmps
add
nop
mov
push
sbb
jbe
inc
mov
sub
dec
lock
movs
div
gs
sub
ja
rcr
ror
mov
std
je
mov
jecxz
aaa
mov
(bad)
and
stos
push
sbb
pusha
or
xor
fist
imul
ror
repz
in
mov
push
jns
xchg
xor
out
push
loop
pusha
scas
addr16
xor
xchg
cmc
in
or
or
sbb
sub
cld
sub
shl
and
stc
out
push
ins
mov
mov
retf
sbb
call
pop
sar
sbb
scas
fcomp
pusha
pop
mov
sub
out
sub
mov
loope
jnp
sub
shr
pop
mov
movs
mov
xor
adc
loopne
out
(bad)
fisttp
mov
rcr
sar
xchg
shr
dec
pop
sub
cmc
or
inc
or
mov
hlt
jecxz
sub
xchg
adc
fnstsw
(bad)
pusha
mov
xchg
dec
and
fcomp
inc
sar
cmc
jmp
add
addr16
sar
fadd
mov
lods
aam
leave
js
jmp
call
mov
mov
sbb
icebp
aas
push
jns
push
ins
clc
xchg
xchg
mov
cmp
es
dec
sub
mov
inc
jge
dec
mov
or
in
cwde
pop
cmp
and
cwde
fisub
mov
xor
add
adc
sub
jmp
jge
mov
into
sub
sahf
fwait
cmp
pop
push
mov
call
vmaxss
or
xor
inc
mov
(bad)
add
sbb
fild
int
out
ins
sub
pop
lock
inc
xchg
js
(bad)
sbb
add
aad
dec
add
aaa
dec
inc
inc
out
arpl
cmps
scas
inc
cmp
in
rol
mov
mov
jmp
pusha
clc
fs
adc
xchg
and
pop
repz
jnp
nop
and
stos
outs
leave
daa
lds
push
xchg
ret
out
addr16
push
cld
outs
lahf
mov
mov
cmp
leave
sub
repz
mov
(bad)
and
outs
push
push
xchg
retf
jl
movs
les
outs
add
ret
add
adc
call
mov
xchg
push
mov
lea
je
cmc
jmp
call
mov
lea
pushf
lea
call
push
push
push
adc
jmp
pusha
pushf
mov
push
mov
lea
jmp
jp
cmp
sbb
mov
and
inc
add
cmp
(bad)
mov
push
mov
repz
pop
(bad)
cmp
push
push
stos
mov
adc
xchg
in
mov
fbld
jo
shr
mov
lds
push
jns
call
imul
add
cwde
and
mov
outs
fst
xlat
pop
dec
and
add
pop
mov
jmp
outs
xchg
mov
pop
and
jg
mov
js
test
or
xor
cmp
sub
cli
std
and
and
mov
xor
push
jno
mov
push
mov
or
adc
ins
push
emms
and
hlt
push
mov
dec
sbb
mov
sbb
mov
test
and
arpl
or
retf
mov
outs
ret
mov
inc
mov
add
icebp
call
mov
in
adc
pop
inc
xchg
sub
sar
mov
push
cs
cmc
jge
or
cmp
xor
pop
sub
adc
mov
push
add
(bad)
mov
(bad)
jge
retf
arpl
sub
xchg
jne
cmp
or
adc
push
or
jno
(bad)
ins
test
fdecstp
aaa
retf
repz
jmp
cwde
and
in
add
gs
in
dec
fnstenv
xchg
pop
push
stos
mov
sub
push
inc
pop
scas
mov
mov
sti
mov
mov
cmps
xchg
jo
inc
inc
jp
loop
adc
push
aad
sbb
pop
and
aad
cmps
push
mov
cmp
call
(bad)
fwait
and
loope
mov
(bad)
mov
in
xchg
(bad)
or
adc
(bad)
lods
adc
jns
(bad)
popa
jmp
retf
in
dec
rol
xor
sbb
hlt
dec
out
lds
mov
xor
ss
pop
mov
stos
outs
cmp
loope
dec
push
add
fadd
xor
and
sub
push
xchg
stos
in
popa
push
outs
(bad)
jl
icebp
mov
aam
jmp
dec
xchg
mov
test
(bad)
jnp
in
sbb
or
cmp
out
and
xchg
cmc
or
sub
les
and
xchg
dec
jecxz
repnz
sub
cwde
cmps
cmps
jp
popf
xor
fnsave
mov
and
and
loopne
add
nop
mov
dec
movs
ss
inc
xor
(bad)
loopne
pop
into
mov
push
pusha
sbb
xlat
cwde
mov
cmp
mov
pop
adc
mov
push
aaa
aas
mov
(bad)
sub
xchg
out
test
mov
je
out
and
inc
cmps
mov
leave
lods
add
retf
rcr
inc
repz
in
je
jmp
cwde
repnz
cmp
push
cli
dec
ror
push
stc
lods
cwde
iret
add
nop
add
push
or
and
mov
ficomp
dec
add
pop
xor
and
fcomp
out
lock
or
enter
and
jg
in
jecxz
mov
(bad)
xchg
sub
jge
outs
adc
lea
hlt
lods
retf
rol
(bad)
adc
dec
sbb
xor
add
data16
lahf
add
jp
inc
mov
in
mov
(bad)
in
mov
out
in
adc
daa
sbb
xor
sub
pushf
mov
pop
in
jp
lods
nop
adc
add
rcl
fistp
repnz
dec
scas
add
cmps
ins
add
mov
or
imul
and
call
mov
mov
(bad)
jae
sar
imul
mov
xor
mov
jbe
sti
adc
(bad)
sbb
ret
dec
loop
in
xor
fwait
dec
mov
fwait
mov
xchg
adc
test
pop
jmp
ss
jge
xchg
iret
push
into
bound
stos
dec
ret
shl
outs
imul
or
dec
sbb
xchg
xor
dec
jmp
iret
(bad)
adc
scas
xor
sub
cmp
pop
or
sbb
pusha
xor
pop
outs
je
outs
sub
das
cwde
cmp
mov
hlt
mov
push
pop
les
lea
mov
push
(bad)
cs
jp
mov
push
fs
cmp
aam
dec
sbb
fcom
gs
dec
hlt
add
cmp
mov
jb
cmp
test
mul
aad
pop
and
inc
mov
jo
pop
aas
scas
(bad)
jo
sbb
mov
inc
hlt
xchg
and
add
ins
movs
in
cs
lea
pusha
pushf
push
mov
mov
jmp
leave
js
mov
jnp
push
adc
sub
mov
cmp
inc
dec
test
push
mov
or
or
xchg
fldcw
inc
dec
loope
xor
enter
in
ss
jmp
jecxz
push
sub
lock
or
add
sub
add
adc
mov
and
std
lahf
(bad)
popa
jecxz
dec
inc
mov
and
adc
mov
push
sub
loop
and
inc
adc
cdq
sbb
rol
sub
ficomp
xchg
iret
inc
inc
adc
jae
push
cwde
mov
sub
cmps
cli
dec
dec
mov
push
jb
push
bound
push
mov
jnp
xchg
fs
jae
inc
cmp
push
cmps
dec
shr
xor
pop
inc
nop
lahf
cli
adc
(bad)
aaa
mov
(bad)
ins
push
imul
jmp
out
mov
xchg
and
pop
cmp
dec
std
mov
mov
mov
out
sbb
and
pop
add
fbld
aaa
ret
xor
mov
mov
ins
popf
daa
sbb
sahf
cmps
fcomp
mov
int3
push
test
adc
fld
jne
or
test
cmp
xor
add
(bad)
call
call
in
and
sbb
cdq
push
pusha
xor
inc
cld
sub
repz
jg
data16
lods
sub
dec
nop
mov
aas
and
scas
xor
test
retf
mov
mov
mov
fmul
call
inc
imul
movs
and
das
pop
inc
sahf
dec
xchg
lock
push
les
jno
popa
push
mov
mov
fsub
lahf
sub
cmc
hlt
jne
loop
scas
add
sub
xchg
mov
and
call
call
xchg
cmp
mov
mov
adc
pusha
call
fidiv
fldcw
popf
orps
loope
call
mov
dec
jo
jbe
inc
push
push
inc
or
jnp
fmul
mov
pop
mov
mov
dec
test
mov
sbb
add
fisttp
mov
inc
push
loop
mov
dec
adc
imul
shl
out
cld
push
xor
clc
scas
out
mov
lahf
scas
test
push
es
cdq
cmp
add
mov
jle
sbb
stc
pop
mov
lds
or
lahf
xor
fs
push
sub
enter
mov
ror
add
hlt
dec
ret
dec
mov
dec
or
(bad)
and
inc
test
bound
bound
adc
cmp
dec
mov
les
or
adc
aas
or
or
enter
cmc
cwde
nop
cli
retf
pop
gs
jns
jae
popa
stc
mov
pop
cmp
pop
and
xor
push
xor
xor
mov
in
movs
cli
pushf
add
xchg
xchg
xchg
cmc
inc
push
in
xor
addr16
jmp
stos
aad
retf
jb
jecxz
repnz
inc
jmp
mov
or
cmps
ins
and
lock
mov
mov
addr16
push
xor
clc
repnz
and
ja
jmp
scas
mov
mov
pop
ja
jns
mov
or
ins
mov
mov
jg
aaa
popa
shl
xchg
nop
cmp
push
push
div
pop
add
inc
aas
aas
add
aad
loopne
dec
xchg
adc
jge
mov
dec
stos
retf
mov
jmp
add
xchg
add
sahf
in
pcmpeqd
jge
mov
dec
mov
(bad)
mov
rcl
inc
dec
out
xchg
sbb
hlt
inc
sbb
mov
mov
mov
add
sub
jnp
mov
stc
stc
pusha
call
mov
(bad)
mov
mov
cmps
icebp
xchg
and
and
or
ja
xchg
jno
cld
gs
inc
push
push
aaa
ds
cmp
aam
mov
ret
mov
outs
add
call
mov
rcr
push
test
xchg
aaa
stos
pop
and
adc
sar
pushf
add
adc
dec
test
iret
add
jmp
xchg
xchg
mov
pop
lods
or
mov
lods
pop
add
ds
fwait
jbe
test
xor
daa
dec
fsubr
push
mov
inc
rcr
(bad)
mov
cli
fsubr
fnsave
and
outs
je
mov
mov
cmp
adc
cmp
xchg
add
pop
jb
pop
inc
scas
adc
cmp
add
adc
pop
leave
ror
fild
sbb
movsx
out
ds
aas
cmp
int3
push
sbb
scas
arpl
out
dec
shr
fwait
nop
out
in
cwde
pop
iret
cmp
out
xor
pushf
mov
sub
jae
out
call
shl
ror
sahf
cmp
and
loope
into
add
push
jge
inc
inc
fs
addr16
ret
mov
(bad)
push
jle
je
inc
mov
adc
movs
pop
addr16
(bad)
cmp
loope
push
gs
int
adc
test
test
jmp
jmp
pusha
bnd
dec
out
mov
adc
cmps
retf
fadd
sub
stos
xchg
aad
fiadd
test
cmp
test
mov
fsub
into
jp
into
sbb
aaa
lea
add
xchg
je
mov
div
inc
into
in
ficomp
jmp
call
mov
int
push
inc
jmp
sub
test
add
movsx
bswap
mov
bswap
push
push
lea
mov
mov
jmp
pushf
mov
pusha
pusha
push
pushf
lea
jmp
mov
xchg
mov
jecxz
or
or
stos
in
xor
retf
and
pop
xchg
scas
or
iret
push
dec
in
in
pop
lods
cmp
ds
arpl
mov
xor
(bad)
push
fsubr
ret
ins
out
or
add
fbstp
test
add
jp
jmp
aas
mov
aad
or
mov
arpl
dec
cwde
arpl
mov
push
sub
or
inc
sbb
inc
sbb
and
fistp
mov
cmp
push
sub
shl
fcom
(bad)
mov
sbb
popa
nop
aam
gs
lods
mov
lock
shr
shl
dec
nop
nop
mov
cmp
loop
mov
movs
iret
test
stos
jecxz
fbstp
shl
shl
sub
lahf
xchg
sub
sub
out
jp
pop
pop
jecxz
or
mov
imul
cdq
jno
aam
fs
call
call
mov
cmc
pusha
ror
jmp
stc
stc
sub
mov
stc
cmc
push
pop
stc
cmp
cmp
call
es
jo
jl
adc
hlt
jmp
xor
sub
inc
pop
mov
add
stos
test
adc
push
and
inc
out
imul
mov
dec
push
enter
out
sbb
imul
push
stc
mov
rcl
xchg
test
int
daa
dec
mov
nop
adc
pushf
cmp
imul
mov
(bad)
fisttp
fld
pop
pop
push
xor
mov
cmp
cmps
jae
stos
arpl
ins
mov
sub
iret
ret
loope
pop
je
lea
fbstp
(bad)
call
ins
xchg
mov
or
fisttp
fwait
nop
push
jo
dec
push
jmp
jmp
ss
mov
push
jmp
fcomp
(bad)
pop
inc
jp
les
fs
sbb
lods
sbb
sbb
lods
ss
pop
repz
add
sub
adc
xchg
sti
cmps
cdq
fisub
mov
dec
(bad)
pop
cmps
push
pop
jb
fs
jne
movsx
or
setne
xor
lahf
add
mov
or
shr
clc
add
pusha
shl
mov
call
lea
jb
bt
push
cmp
pusha
pushf
push
call
push
jmp
adc
pop
mov
fs
fstp
sahf
mov
adc
push
ds
jge
mov
and
outs
fnstenv
pop
(bad)
scas
inc
loopne
daa
stc
and
cmps
mov
in
pop
data16
mov
cmp
stos
mov
pop
outs
xor
je
adc
pop
mov
call
lods
pop
push
icebp
fwait
cmp
sub
mov
(bad)
inc
inc
inc
cwde
mov
jmp
movs
test
mov
test
xchg
test
xchg
fadd
xor
lods
pop
add
(bad)
pop
test
xchg
fild
loop
jg
jno
nop
jnp
mov
out
lock
pop
pushf
mul
sbb
cmp
mov
inc
gs
jnp
(bad)
fwait
sbb
mov
fs
ds
fdiv
fidiv
mov
cmp
add
(bad)
sub
pushf
nop
lahf
and
gs
aas
dec
int
retf
sub
cmp
fwait
push
sub
pop
loop
adc
push
sbb
nop
aam
cmp
rcl
inc
rcl
xchg
nop
adc
repz
neg
mov
push
daa
jl
and
cli
sub
imul
cmc
cld
adc
cmps
sbb
inc
and
cli
movs
shl
fldz
loope
fld
ja
xchg
lods
shr
mov
jmp
dec
popa
and
push
mov
and
sahf
test
pusha
mov
xlat
out
push
shl
mov
(bad)
and
push
and
mov
out
(bad)
add
inc
mov
test
pop
ja
pop
jno
mov
out
push
mov
cmp
xor
mov
and
(bad)
jl
in
movs
jno
mov
xor
dec
mov
mov
jb
std
in
in
adc
je
bound
ins
rcr
es
cmp
fcmovnu
jae
lahf
cmp
scas
cmps
movs
sbb
fsubrp
imul
or
or
inc
sub
js
mov
mov
inc
mov
out
xor
repz
and
adc
bound
ja
adc
jg
sub
mov
call
lea
jnp
inc
pop
iret
mov
adc
jae
ins
fstp
(bad)
xlat
cmp
dec
lods
idiv
xchg
jnp
inc
enter
jmp
in
jmp
xchg
mov
sub
in
and
push
movs
sbb
sahf
push
adc
das
inc
arpl
imul
fistp
mov
ficomp
push
pop
xor
jns
dec
xor
push
jl
das
jl
leave
call
aas
inc
dec
outs
adc
pop
stos
xchg
pop
pop
fimul
push
xor
cmps
mov
pop
icebp
movs
dec
mov
std
xchg
xchg
cmp
(bad)
mov
and
scas
pop
in
sbb
in
mov
rol
movzx
mov
jmp
jmp
(bad)
leave
and
inc
imul
inc
jb
outs
jbe
fistp
sub
jle
(bad)
les
shr
xchg
icebp
mov
adc
out
pushf
mov
push
push
or
pop
fnsave
mov
out
xchg
mov
fwait
mov
shl
daa
repnz
dec
je
test
fsub
cdq
mov
int3
rol
hlt
pop
cmps
stos
loop
jmp
jmp
sub
sbb
leave
cli
test
sub
and
les
add
fsub
push
(bad)
sbb
jmp
outs
inc
dec
jb
or
cmps
sbb
push
in
cdq
lods
outs
adc
or
retf
ja
xor
ins
packssdw
shl
xchg
add
pop
pop
rol
or
dec
fdiv
fsub
push
into
sub
jns
ins
ins
stos
pushf
cdq
enter
fcom
mov
pop
cmp
pop
adc
test
outs
cdq
retf
aad
jbe
imul
mov
out
mov
and
cmc
lods
xchg
mov
scas
shl
cmp
fiadd
cmp
add
dec
call
cmp
mov
xor
repnz
add
fdivr
xchg
inc
cwde
xchg
sub
ss
mov
mov
xchg
dec
bound
sub
adc
jecxz
mov
sbb
xchg
dec
(bad)
xlat
and
pop
sub
push
arpl
iret
ficom
clc
out
cs
cmps
sbb
enter
loop
loopne
pop
retf
mov
add
cmp
and
aaa
sbb
jp
or
mov
push
test
jmp
jecxz
jbe
mov
lahf
ret
cli
imul
or
lock
mov
int3
add
fs
fmul
dec
mov
out
retf
adc
call
mov
pushf
rcl
iret
daa
out
adc
ins
mov
sub
fadd
inc
loopne
pop
mov
popf
push
cli
test
into
sti
mov
or
retf
popa
jge
leave
push
push
in
jne
or
pop
or
xor
ins
(bad)
call
pop
inc
icebp
(bad)
push
dec
dec
rcl
adc
in
xor
push
dec
xlat
ins
stos
pusha
jmp
dec
jne
jns
pop
pusha
jnp
loop
call
bound
push
mov
rep
sub
jge
mov
jns
pop
inc
int
test
scas
test
out
out
add
test
call
mov
lods
(bad)
(bad)
(bad)
dec
in
lods
shr
jg
add
dec
out
push
xchg
in
leave
daa
out
adc
into
je
out
push
jecxz
fwait
mov
scas
or
mov
xchg
(bad)
ja
mov
pusha
popa
and
adc
jmp
inc
sub
fild
and
(bad)
pushf
mov
push
jmp
pop
clc
lock
(bad)
lods
xor
adc
xor
sub
adc
mov
fnsave
lods
inc
xchg
mov
inc
push
ins
ins
or
int
mov
mov
sti
repnz
push
je
xor
add
inc
mov
cmp
idiv
mov
xor
jns
xchg
jmp
arpl
enter
jge
pushf
push
lea
jae
pusha
lea
jb
pushf
lea
jne
pusha
stos
push
push
mov
push
lea
jmp
add
test
cmc
clc
cmp
pushf
pusha
lea
jb
test
test
push
cmp
pushf
push
jmp
push
loop
sbb
jmp
add
mov
test
xor
movs
mov
xchg
dec
sub
xchg
pop
daa
and
and
(bad)
ds
add
add
mov
inc
cmp
push
movs
xor
les
dec
stos
aad
lds
jno
mov
adc
inc
add
sbb
retf
push
call
inc
mov
cmp
aaa
dec
or
stos
sbb
xor
or
adc
jb
dec
cmps
je
lds
sbb
pop
shl
fst
into
push
popf
enter
sub
xlat
fcomp
int3
je
jmp
lds
or
jb
or
les
add
push
ja
loope
arpl
cwde
repnz
sub
ss
sar
je
inc
daa
mov
lock
addr16
jmp
leave
jae
cmp
sbb
xchg
rep
cwde
lods
mov
pushf
mov
mov
pusha
lea
jmp
mov
cmp
fdivr
or
jne
xor
test
clc
xor
pop
bound
leave
add
add
mov
lds
xchg
mov
xchg
sub
and
pop
sbb
cmps
dec
xor
push
mov
or
sub
jno
mov
push
jo
mov
into
pusha
rcl
dec
pop
nop
jns
pushf
mov
push
cdq
pop
hlt
pop
pop
sbb
add
fs
cmp
(bad)
rcr
mov
je
pop
in
add
(bad)
dec
inc
cmps
pop
inc
pushf
ja
ffree
stos
in
movs
inc
xchg
jp
in
cli
pop
adc
test
jg
mov
xor
jno
jo
mov
adc
scas
xchg
cld
repz
ror
mov
mov
(bad)
dec
dec
xchg
sbb
fsubr
push
loope
es
into
adc
nop
aaa
into
aaa
add
xchg
mov
cs
jmp
and
xchg
sub
pop
lds
sub
int3
addr16
in
iret
fldcw
pop
movs
jg
xchg
cmp
sbb
and
add
imul
jne
mov
aad
mov
lods
retf
xor
or
adc
das
daa
movs
pop
adc
pop
(bad)
idiv
add
and
loope
inc
push
sub
sbb
cmc
lods
(bad)
cmc
mov
repz
scas
in
jne
and
out
(bad)
push
xchg
mov
xor
push
push
mov
mov
xchg
pop
mov
mov
inc
out
xor
cld
inc
imul
push
js
pop
cmc
mov
retf
sub
out
xor
xchg
or
out
sub
aaa
call
inc
pop
or
jle
ror
mov
das
dec
push
ins
cmp
(bad)
sbb
mov
cdq
mov
sub
fbld
push
fwait
cld
stos
inc
xor
out
and
sbb
adc
dec
shl
rcr
fs
push
test
sahf
rcr
sub
cmc
in
mov
call
neg
mov
sub
lea
jo
(bad)
aas
loope
ret
les
pop
iret
int3
xchg
sub
or
pop
gs
xchg
and
fwait
xor
lods
mov
adc
stc
not
or
adc
or
es
(bad)
jmp
(bad)
pop
outs
loope
pop
inc
push
or
mov
add
push
push
mov
movntq
cli
push
mov
fistp
retf
mov
push
out
loop
xchg
mov
dec
iret
dec
cmp
into
sub
mov
movs
sub
sbb
std
push
jae
and
and
shl
iret
(bad)
push
xor
push
pop
(bad)
xor
jns
xchg
in
fstp
jp
jns
or
lahf
add
jl
mov
mov
(bad)
test
mov
iret
fdivp
mov
aas
pop
add
mov
nop
movd
clc
mov
cmp
pop
punpcklwd
pusha
neg
dec
cmp
jecxz
pop
push
mov
sub
dec
cmp
scas
inc
dec
pusha
in
inc
daa
pushf
into
cmp
mov
stos
pop
ret
aam
adc
sbb
push
dec
imul
rcr
cmp
hlt
ins
xchg
ins
ins
daa
test
sti
hlt
stos
(bad)
daa
repnz
push
pop
into
jbe
jo
xor
icebp
mov
out
cdq
dec
mov
popf
aam
dec
sar
vorps
fmul
lods
movs
ins
in
xor
sub
add
js
inc
push
or
nop
outs
fnstsw
icebp
(bad)
and
jecxz
lea
jae
daa
ds
(bad)
xlat
add
test
bound
xor
dec
or
sbb
pusha
cmps
cwde
sbb
xchg
xchg
outs
sub
addr16
or
iret
cmp
mov
aam
movs
retf
mov
and
mov
retf
data16
(bad)
loop
test
pop
push
mov
in
xchg
fidiv
aam
sbb
fs
retf
adc
and
(bad)
mov
mov
(bad)
jg
popf
int
hlt
outs
rol
cmp
jnp
adc
fcomp
iret
sub
pop
fisub
xor
scas
sbb
mov
js
in
xchg
sub
les
sbb
jge
sub
xchg
cmc
ret
cmp
xor
push
mov
sbb
jle
mov
out
mov
cs
and
mov
cmps
scas
stos
mov
mov
xchg
jae
cmp
test
test
shr
jl
dec
test
sahf
sbb
xor
and
call
xbegin
mov
shr
adc
dec
shl
fild
dec
dec
imul
pop
and
mov
pusha
call
jmp
ficomp
xchg
sbb
pop
popf
ret
lea
push
push
stos
mov
fbstp
and
lods
mov
sub
add
in
push
pop
dec
out
loop
sub
retf
mov
add
outs
or
out
mov
(bad)
ins
jmp
loope
cmps
pop
ret
mov
clc
lsl
push
and
pusha
mov
pusha
lea
call
push
adc
pushf
lea
call
jmp
pushf
lea
jne
pushf
pushf
lahf
mov
lahf
mov
call
xor
aaa
nop
sbb
sbb
adc
gs
cmps
(bad)
scas
push
or
(bad)
(bad)
movs
mov
xchg
rol
std
adc
fist
stos
xchg
aam
inc
pop
mov
mov
loope
push
jl
add
call
lods
add
pushf
jle
(bad)
dec
sbb
sub
sbb
cmp
sbb
push
cmps
jp
jno
in
push
out
mov
add
inc
stos
dec
mov
les
pop
inc
jnp
adc
cmps
mov
outs
sbb
fwait
sub
add
sbb
sahf
inc
push
jae
in
jbe
(bad)
movnti
jmp
cwde
sub
cmc
dec
dec
sbb
or
jmp
nop
sar
sub
test
pop
mov
add
dec
push
xor
pusha
fidivr
mov
pop
imul
inc
xchg
test
sub
jb
cmp
adc
ret
mov
cmp
int3
bound
jae
xchg
rcr
jg
mov
inc
mov
dec
mov
cmps
lods
aam
sbb
ds
in
lahf
(bad)
push
inc
and
aaa
fsubrp
inc
sub
leave
sbb
lods
sti
cmp
enter
sbb
(bad)
dec
mov
mov
sbb
fdivp
jne
jb
sub
aas
mov
mov
leave
fmul
test
repnz
inc
in
in
jl
(bad)
xchg
retf
test
fnstcw
mov
imul
jae
out
shl
idiv
inc
mov
out
push
mov
mov
aam
cli
ret
aas
pop
jmp
push
push
cs
stos
mov
test
mov
aam
add
fcmove
ror
cwde
xchg
add
stos
xor
or
and
(bad)
mov
(bad)
xchg
int3
jmp
fisubr
or
mov
das
push
jmp
mov
xchg
sub
mov
adc
clc
pop
les
mov
jge
ins
in
push
aas
sbb
jecxz
(bad)
pop
xchg
mov
cmp
push
add
outs
jle
dec
imul
adc
jmp
pop
push
sti
and
aam
dec
invlpg
aas
sar
in
out
or
jl
cmc
js
test
xchg
sbb
loopne
push
movs
retf
pop
or
das
add
bound
sub
ficomp
push
xor
sbb
ins
lds
inc
out
lahf
out
mov
push
enter
mov
jmp
call
push
loop
xchg
sub
xlat
cmps
imul
(bad)
js
scas
pop
outs
fnsave
aas
mov
cwde
mov
sub
popa
icebp
out
(bad)
fwait
and
stos
jmp
xor
(bad)
xchg
pop
shl
jg
pop
movs
aaa
push
lock
cli
inc
(bad)
sbb
add
sub
jecxz
in
mov
adc
mov
sbb
shr
repnz
mov
and
pop
in
mov
push
add
loope
xor
imul
or
cmp
mov
imul
and
out
call
push
out
add
jl
dec
fsub
or
inc
push
sar
outs
jns
les
mov
mov
fwait
xchg
push
xlat
stos
sti
adc
cmp
mov
out
clc
xor
cmp
aad
jne
and
and
repnz
cmp
jmp
int3
stos
inc
(bad)
lea
jae
test
test
cmp
push
call
mov
aad
aaa
repnz
es
mov
jl
imul
jp
out
and
or
mov
pop
jge
cs
iret
test
ins
mov
push
pusha
(bad)
push
cmp
jb
jmp
mov
sub
mov
ficom
fdiv
leave
(bad)
repnz
mov
mov
jle
stos
pop
push
add
xor
xchg
xchg
and
loopne
ret
xchg
sbb
rcl
imul
cmp
pop
mov
retf
outs
mov
and
jle
leave
es
and
inc
es
pop
pop
xor
or
mov
cdq
cmp
retf
jmp
inc
sahf
jae
icebp
lea
adc
cdq
fst
adc
pop
mov
add
ror
mov
cmps
mov
or
ja
pop
xor
cld
icebp
push
pop
dec
outs
cmp
xor
push
push
xchg
lods
add
int
dec
mov
sbb
add
adc
push
push
mov
sub
push
xor
repnz
out
imul
dec
cs
dec
std
xlat
(bad)
mov
idiv
adc
fld
scas
push
hlt
jmp
add
aaa
mov
xor
cmp
pop
aas
lods
enter
mov
jp
jecxz
sub
data16
scas
jg
retf
sbb
fistp
mov
xchg
push
iret
(bad)
ds
lahf
sbb
xor
mov
inc
xor
retf
cmp
cmp
sub
hlt
out
jl
in
das
xor
movs
mov
lahf
and
lods
xchg
jbe
jbe
cmp
fld
les
push
jae
cwde
add
xchg
sub
pop
push
loop
mov
in
mov
inc
mov
mov
enter
jnp
push
repnz
stc
and
and
in
and
out
mov
cdq
add
push
jl
ss
jb
stc
(bad)
int
mov
pop
cmps
fs
mov
add
ins
mul
mov
in
aas
jo
cwde
js
mov
or
cmp
mov
mov
sbb
fcomp
mov
into
push
fcomi
jp
mov
popa
cmp
enter
call
lds
imul
pusha
mov
mov
or
push
popa
or
shl
stos
adc
or
(bad)
icebp
sub
les
in
sbb
jmp
popa
sbb
or
add
data16
rcl
and
mov
fcomp
xchg
xor
mov
loop
sti
mov
add
mov
add
add
add
add
add
add
test
add
add
add
add
stc
cmp
add
add
mov
add
add
movs
cmp
add
add
jl
cmp
add
add
inc
jo
add
add
add
add
add
add
add
add
or
add
mov
add
add
mov
add
or
cmp
adc
sub
mov
cli
cmp
(bad)
add
add
add
in
jno
repnz
and
ins
add
jo
push
push
(bad)
add
out
repnz
scas
sar
out
or
cmps
or
mov
cmps
pop
aas
jmp
test
xor
cmp
cdq
shl
stc
push
or
js
xchg
dec
fmulp
push
ror
push
and
(bad)
mov
mov
pop
jb
in
adc
pop
ja
ins
js
shr
mov
cs
mov
cwde
sbb
jnp
aaa
mov
ror
hlt
mov
cmp
mov
sbb
push
mov
fbstp
xor
test
jo
mov
push
jbe
sub
push
and
or
mov
cwde
in
inc
call
sub
shr
stos
or
retf
adc
std
cld
fiadd
jb
add
inc
popa
sbb
inc
mov
push
fs
dec
jle
mov
(bad)
adc
test
shl
inc
mov
inc
add
ins
cdq
in
int
(bad)
pop
sbb
(bad)
cmp
jge
sbb
jp
jl
(bad)
xchg
lds
daa
aam
lock
mov
pop
push
sub
mov
dec
xor
(bad)
push
jge
in
(bad)
pop
retf
pusha
das
cwde
shr
pusha
push
xchg
inc
aam
mov
add
test
cdq
and
jg
popf
mov
cmps
mov
test
jle
je
js
test
jmp
in
adc
inc
mov
sbb
mov
shr
add
nop
aad
add
jbe
inc
lds
les
aam
cmp
pop
sbb
shr
out
es
pop
fnop
cmp
test
aas
cmp
jl
mov
or
(bad)
fsubr
cmp
lds
es
loop
inc
sub
enter
push
stos
inc
loop
mov
sub
sbb
dec
xor
push
push
push
inc
imul
xor
and
test
pop
(bad)
and
arpl
mov
jo
mov
sbb
mov
out
mov
les
fbld
test
xchg
adc
sub
add
inc
(bad)
jb
mov
mov
mov
inc
cmps
into
rcl
push
xchg
add
lock
push
loop
pop
pop
pusha
es
pop
push
push
out
addr16
mov
xchg
mov
sbb
ins
gs
into
gs
mov
scas
inc
mov
sub
out
icebp
sub
mov
adc
dec
push
pop
cwde
mov
daa
cli
js
fs
call
imul
loop
sbb
xor
cmp
or
dec
loope
cmp
sti
scas
mov
retf
das
(bad)
mov
icebp
add
ja
stos
adc
imul
outs
mov
mov
mov
sar
mov
or
imul
xchg
xchg
scas
push
lea
or
dec
adc
mov
(bad)
jmp
add
scas
jp
xchg
sbb
(bad)
dec
xchg
sbb
outs
icebp
sar
mov
movs
jbe
jo
pslld
retf
retf
int
pop
cmp
mov
mov
test
sbb
loope
jmp
and
addr16
ret
xchg
(bad)
xor
rdmsr
cs
push
(bad)
sbb
(bad)
mov
fsub
daa
inc
mov
xchg
sbb
jo
in
inc
inc
mov
and
cmps
cmp
pop
ret
jge
ins
push
sub
es
jne
inc
xchg
mov
aad
sbb
out
data16
aas
inc
sbb
sti
push
test
xor
je
mov
(bad)
add
pop
rcr
ja
sub
add
mov
int3
jg
push
jo
in
mov
inc
fcomip
or
or
mov
test
mov
mov
imul
xchg
int
jo
inc
mov
iret
es
cmp
push
xor
mov
dec
fxam
adc
push
popa
mov
sbb
jle
ja
xchg
movs
push
daa
push
cmps
dec
inc
fwait
lock
mov
mov
add
stos
dec
pop
jae
jl
jb
jno
dec
test
repnz
cmps
ins
fsubr
cmp
push
daa
cmp
adc
scas
jle
xor
push
iret
nop
xchg
xchg
xchg
shr
je
jl
mov
mov
cmp
fs
jae
call
mov
cmc
test
push
push
pushf
lea
je
pushf
pusha
add
push
cmp
bt
cmc
cmp
call
push
loope
lahf
sbb
mov
mov
fs
arpl
inc
mov
jmp
cmp
add
jne
sub
std
dec
aaa
dec
pop
shr
(bad)
dec
fs
jl
popf
add
gs
mov
pop
xor
outs
out
add
inc
not
mov
xchg
jo
and
(bad)
les
fs
je
rcr
arpl
adc
loop
cmps
sub
sbb
push
neg
bound
inc
mov
lea
pop
mov
out
add
outs
imul
cli
std
addr16
push
ds
sti
int3
aaa
ins
daa
push
sahf
jbe
jb
outs
adc
jo
stos
sti
cmp
jns
inc
cmps
inc
loopne
inc
cmps
fsub
push
ins
les
inc
in
or
xchg
arpl
pop
cmps
cmp
inc
pop
mov
push
test
adc
mov
push
dec
inc
and
test
lods
inc
icebp
lods
in
(bad)
call
sbb
jp
imul
mov
xchg
mov
xchg
mov
data16
lods
lds
jns
inc
pop
outs
rol
pop
cmp
mov
or
pusha
mov
mov
xchg
xchg
inc
push
pushf
not
push
inc
jmp
std
push
mov
pop
sub
or
pop
pop
and
inc
popf
jmp
popf
xor
sbb
cmp
mov
jb
xchg
ss
(bad)
movs
mul
mov
ins
and
add
sbb
es
(bad)
xor
lods
movs
jmp
stos
xchg
mov
xchg
dec
call
call
stc
cmp
xchg
cwde
call
dec
xor
jns
dec
nop
push
fbld
xor
arpl
ficomp
ins
gs
outs
imul
add
add
mov
and
mov
mov
mov
sti
scas
mov
les
inc
pushf
adc
add
out
adc
adc
(bad)
push
ins
mov
lods
in
sub
and
scas
pop
mov
or
scas
pusha
mov
add
out
add
jg
inc
ror
xchg
mov
loop
add
mov
mov
adc
(bad)
nop
xchg
pop
popa
cmp
jmp
xor
mov
fisubr
jmp
mov
and
repz
cmp
adc
xchg
sub
std
mov
push
aas
mov
jb
add
mov
ds
cmp
cmp
add
push
jnp
add
and
sub
fistp
jb
fidivr
mov
cmps
rol
adc
test
sbb
seto
in
mov
pop
nop
push
inc
jg
aas
xor
stos
test
jmp
xchg
dec
sbb
pop
push
pop
mov
inc
in
in
lea
ins
push
data16
xchg
cmps
and
pop
mov
pop
outs
lods
stc
cmp
or
jo
xchg
mov
pop
xlat
outs
cs
loop
mov
inc
into
mov
test
mov
mov
test
sahf
jp
in
clc
das
inc
idiv
xchg
out
fst
xor
fsub
cmp
pop
cmp
sub
add
ja
or
sar
in
mov
dec
mov
ins
fimul
ss
adc
dec
xchg
aad
inc
xor
sbb
mov
jo
adc
call
stc
sbb
add
(bad)
jmp
mov
cmps
imul
sbb
and
js
sub
lahf
xchg
mov
cmc
sbb
ret
mov
xchg
push
pop
pop
pop
mov
pushf
mov
and
mov
fcomp
dec
in
or
xlat
lahf
mov
adc
cmp
dec
push
jl
cmp
jl
sbb
pushf
jmp
pop
sbb
sbb
cmp
mov
add
int3
add
scas
fcmovne
add
lea
scas
pop
or
push
in
outs
mov
iret
sbb
xor
cwde
sub
fsub
es
sub
dec
shr
and
mov
clc
add
pop
jo
push
mul
and
pop
mov
mov
jae
sbb
inc
inc
push
inc
push
dec
xor
cs
ins
add
xlat
sbb
xor
lds
(bad)
push
mov
imul
sub
clc
fsubr
adc
jecxz
mov
cdq
pop
out
push
inc
hlt
inc
adc
ret
jns
out
std
and
lds
inc
dec
or
daa
daa
pop
jae
in
int
jns
lds
adc
or
mov
cmps
xor
pop
out
adc
lea
jp
sub
in
sub
clc
call
aam
in
loopne
test
push
or
lods
pop
inc
jp
sbb
iret
add
jne
and
mov
sti
mov
sbb
cmc
add
mov
add
mov
ret
jbe
(bad)
nop
and
stos
lahf
sahf
cld
fcom
mov
sahf
popf
aaa
inc
movs
pop
mov
mov
test
pop
xchg
pop
call
dec
cmp
push
mov
xchg
clc
mov
jne
into
sbb
and
fcom
aad
nop
xchg
pop
test
sub
shr
ret
and
sar
or
ret
data16
mov
ret
sbb
test
xor
outs
mov
or
rol
pop
sbb
jecxz
push
dec
lock
add
mov
pop
int
(bad)
mov
int3
sub
ins
out
xor
push
sub
mov
arpl
aaa
(bad)
mov
es
mov
cmp
fwait
pop
push
dec
push
adc
test
and
push
sbb
xor
dec
dec
sar
mov
sbb
sub
sbb
mov
mov
cs
xor
loope
into
rcl
cmp
sub
jns
mov
mov
loop
jl
mov
mov
push
xor
pop
mov
pop
test
add
add
sub
xor
imul
push
xchg
shl
mov
cmps
popa
xchg
xchg
or
jno
push
sub
ins
xor
cs
ins
add
inc
and
or
fs
jne
pushf
jmp
dec
adc
test
jne
push
scas
push
in
pop
push
js
jecxz
cwde
cmp
dec
shr
inc
pop
adc
and
mov
out
movs
adc
fcomp
sbb
ins
jp
sbb
jbe
shl
or
movs
jmp
and
stos
push
mov
push
sub
jbe
jle
xor
pop
ja
cs
nop
xor
push
retf
push
pop
sub
xor
adc
(bad)
call
loopne
mov
or
mov
pushf
stc
mov
stc
stc
pushf
pop
mov
push
jmp
call
setg
call
test
cmc
xchg
mov
int3
jbe
or
mov
gs
lock
nop
push
in
test
es
ins
paddsb
in
adc
in
pop
jge
test
dec
jecxz
inc
popa
pop
mov
sub
mov
cwde
lea
mov
mov
fstp
lods
sub
icebp
lea
mov
repz
add
mov
popa
mov
xor
pop
pushw
mov
cmp
les
in
scas
test
and
mov
cs
bound
stc
jmp
stos
add
loope
cmps
add
xchg
sbb
add
or
mov
test
test
and
push
dec
xchg
jb
int
stos
les
std
cmps
xchg
push
pop
lods
cmp
imul
xchg
dec
ret
cmp
dec
cs
(bad)
push
add
call
iret
xor
sub
xor
enter
popf
lods
je
pop
call
or
inc
cmp
in
or
xor
and
xor
cmps
sub
retf
test
das
mov
jp
ret
mov
dec
loope
push
pop
pop
lds
jmp
mov
and
add
add
out
xor
push
loop
mov
push
add
stos
je
mov
xchg
(bad)
push
sbb
sahf
jo
or
pop
cmp
(bad)
in
mov
xchg
mov
data16
mov
sti
cli
jbe
js
xchg
add
into
out
jp
inc
mov
xchg
mov
in
sub
and
inc
or
icebp
or
adc
(bad)
push
fisttp
cmp
xchg
inc
jmp
xchg
mov
dec
(bad)
(bad)
inc
jo
xchg
and
mov
int
adc
dec
or
mov
mov
cmp
pushf
in
int
movs
shl
test
xchg
dec
push
add
lea
ret
xchg
jecxz
sahf
data16
sbb
popa
mov
mov
mov
cmp
popf
jb
ds
mov
sub
cmps
xchg
out
inc
ins
add
cmp
lock
not
adc
imul
mov
loopne
js
(bad)
or
adc
mov
xor
and
es
sar
push
xor
popa
add
mov
fsub
cmp
aaa
fadd
cmps
je
mov
pushf
jmp
add
fmul
(bad)
fist
push
repnz
idiv
fmul
enter
jae
mov
int
push
inc
data16
call
outs
es
lods
out
pop
adc
push
sbb
mov
inc
daa
mov
call
sahf
xchg
inc
addr16
in
movs
sub
xor
inc
mov
dec
fist
lock
mov
je
loop
pushf
mov
stos
imul
mov
add
adc
xchg
int3
mov
and
shl
push
sbb
cdq
xchg
aam
hlt
lahf
jno
xor
push
dec
std
and
add
or
adc
out
(bad)
shl
imul
call
add
nop
cld
add
nop
xchg
push
lods
push
in
and
and
jnp
dec
dec
movups
js
js
add
add
shr
mov
cmc
clc
mov
push
add
stc
bt
ror
call
iret
call
jg
jno
retf
sar
dec
cmp
lahf
daa
inc
fbld
pop
mov
mov
sub
xchg
icebp
push
ja
cdq
mov
hlt
data16
lods
ror
cmp
sub
movs
mov
xor
push
and
call
adc
mov
adc
shl
or
add
adc
cmp
retf
pop
push
add
xor
jb
cmps
jmp
jns
cmp
clc
out
mov
mov
das
lods
dec
jb
ss
leave
fmul
repnz
xchg
cmp
sub
push
pop
(bad)
popa
fld
dec
gs
rep
fsub
outs
out
clc
jo
push
sahf
mov
aad
daa
pusha
test
stos
das
je
stos
adc
cmp
xchg
dec
mov
sub
shl
push
mov
ins
dec
xor
sti
sti
xor
pop
xchg
push
dec
lods
daa
out
xchg
push
cmp
jno
and
aad
xacquire
pop
jmp
bt
add
push
lea
jmp
arpl
fs
xor
cs
ins
add
out
call
sti
jl
icebp
sub
call
movs
jne
mov
popf
pop
push
cdq
mov
sub
pop
and
xchg
int3
cmp
sbb
add
xlat
out
lock
loope
loope
mov
xor
retf
inc
or
xor
xchg
xchg
ins
add
mov
sbb
adc
push
xchg
ins
mov
cld
mov
inc
je
pop
daa
jnp
cmp
inc
stos
iret
xchg
cmps
scas
mov
push
lods
cdq
in
emms
sar
imul
int3
push
mov
popa
jne
mov
cmps
jl
stos
or
into
xlat
push
mov
mov
push
push
ret
into
shrd
mov
fidivr
loop
fild
(bad)
scas
shl
scas
push
lock
xor
jb
mov
cmps
imul
sub
mov
cmps
outs
cmps
test
and
test
(bad)
into
outs
sahf
cmps
idiv
(bad)
mov
in
dec
sbb
imul
cmps
sbb
fnstcw
scas
pop
call
cmc
dec
test
mov
jmp
cmps
scas
mov
imul
sahf
repnz
xchg
outs
dec
xchg
cmps
xor
data16
cmps
mov
mov
lods
dec
mov
mov
scas
and
mov
mov
mov
test
test
mov
bt
mov
es
mov
lods
push
movs
cmc
jbe
movs
psubd
cmps
into
in
pop
cmc
out
loope
or
scas
inc
into
in
retf
cld
adc
shl
shl
cs
out
pop
retf
push
mov
(bad)
(bad)
repz
inc
xor
fwait
adc
mov
scas
loopne
in
adc
addr16
adc
adc
repnz
rcr
sti
inc
hlt
imul
in
mov
pop
jmp
out
sbb
into
adc
sbb
loope
push
sbb
push
adc
sahf
or
ja
dec
jmp
stc
arpl
cmps
sbb
movs
jmp
mov
sti
addr16
outs
jns
into
push
dec
dec
pop
pop
inc
inc
xchg
inc
(bad)
out
or
pop
jl
pop
mov
pop
leave
dec
dec
inc
and
dec
inc
scas
jl
dec
aam
mov
scas
(bad)
jmp
lods
js
cmp
in
jmp
pop
pop
inc
dec
sbb
sti
mov
into
loopne
adc
scas
xchg
push
add
(bad)
jbe
in
mov
xchg
mov
pop
sbb
test
sbb
cli
dec
hlt
scas
scas
sahf
mov
loop
imul
cli
mov
addr16
ds
mov
cli
repz
mov
lds
mov
ret
sub
(bad)
daa
dec
jnp
rol
test
fnstenv
mov
(bad)
and
movs
mov
push
sub
dec
mov
xchg
cld
sbb
hlt
out
push
mov
push
mov
rcr
mov
jl
or
cmp
stos
imul
ss
pop
addr16
cmp
mov
fdivr
popf
scas
dec
daa
fdiv
aaa
push
jnp
xlat
jne
sbb
jmp
fucomp
pop
shl
pop
push
movs
sbb
or
dec
ret
mov
pop
add
cld
inc
pop
gs
idiv
aad
push
adc
(bad)
cmp
adc
xchg
lahf
iret
jl
les
lock
fsqrt
daa
(bad)
jg
arpl
ds
jne
xchg
mov
lds
shl
or
push
fdivr
jo
cld
xchg
dec
cmp
adc
movs
stos
(bad)
leave
out
ffree
adc
jnp
ret
(bad)
mov
pop
sbb
not
arpl
inc
cld
bound
lds
push
(bad)
cli
sub
dec
iret
cmp
xchg
adc
xchg
or
leave
sbb
fld
push
mov
stos
jno
outs
push
aam
(bad)
popf
xchg
rol
xchg
dec
cmp
xlat
loope
jo
push
aam
cmp
xchg
fwait
lds
fild
ds
xlat
fs
into
xlat
pop
dec
popa
lods
and
cmp
imul
xchg
adc
jge
mov
lods
mov
les
jg
aam
(bad)
fs
push
rol
jb
das
cli
adc
stc
aam
pop
pop
cmp
stc
push
rol
frstor
cmp
daa
jmp
cmps
test
cld
ror
in
outs
sar
pop
add
ret
nop
adc
adc
cli
sbb
push
arpl
iret
lods
xchg
cmps
xor
mov
sub
adc
rol
les
icebp
or
cmp
ins
stos
out
cmp
push
daa
jl
lea
cmps
dec
lods
(bad)
cmps
jge
cmps
repnz
test
test
adc
std
imul
fistp
push
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
lods
hlt
cmp
lods
hlt
sahf
mov
jns
lods
cli
pop
or
jg
gs
push
jmp
mov
cmps
push
or
rol
mov
sbb
aas
out
pop
out
popa
out
(bad)
out
shr
retf
cmc
mov
iret
es
(bad)
movs
cwde
push
inc
add
and
lods
lods
jp
lods
lods
sub
mov
imul
int
lods
or
mov
fld
(bad)
and
popf
cmps
pop
inc
jno
bound
lock
repnz
repz
stos
sub
mov
fidiv
in
xchg
sbb
mov
stos
adc
lods
add
cmp
lods
xacquire
stos
sbb
sub
lods
push
mov
add
jg
gs
icebp
int
mov
iret
cmps
fnsave
mov
mov
xchg
(bad)
xlat
or
(bad)
popa
lods
xlat
sub
mov
daa
adc
les
ror
into
aam
popa
ja
cmp
sbb
adc
sbb
daa
repnz
jne
and
or
pop
mov
pop
or
(bad)
(bad)
pop
std
aam
sub
adc
arpl
push
cmp
jmp
mov
int3
aad
lahf
icebp
fst
lea
rcl
popf
das
cmps
cmps
pop
mov
arpl
mov
lahf
mov
xchg
and
data16
pop
or
sub
push
es
mov
dec
inc
daa
pushf
popf
add
pop
or
hlt
inc
xor
stos
lods
jp
dec
pop
dec
mov
fs
inc
push
movs
xchg
push
push
push
ds
adc
jo
dec
adc
rcl
out
(bad)
push
pop
mov
daa
leave
mov
jmp
in
ror
mov
add
push
idiv
ret
sbb
push
std
mov
and
xchg
and
lahf
pop
daa
sbb
call
ins
sub
xlat
cld
(bad)
pop
xchg
(bad)
jge
xchg
mov
add
fdivr
rcr
sbb
push
mov
(bad)
ds
cs
sti
jmp
ja
sub
scas
scas
(bad)
jg
adc
fist
retf
in
sbb
sbb
imul
out
test
sbb
aad
adc
push
lahf
in
fwait
mov
sbb
add
adc
(bad)
clc
sbb
stc
movs
adc
shl
pop
jge
outs
lahf
ja
call
test
cli
push
imul
or
stos
jge
cmp
mov
in
mov
mov
and
adc
pop
dec
fist
out
sti
(bad)
aas
mov
adc
sub
adc
xchg
mov
pop
mov
fwait
sub
loop
inc
mov
dec
jo
pop
dec
inc
mov
retf
xchg
stos
push
data16
pop
int3
daa
cmps
mov
lahf
mov
inc
out
mov
mov
scas
pop
sbb
or
and
pop
jg
xor
ss
sbb
lea
pop
popf
push
pop
xchg
inc
pop
xchg
inc
adc
xchg
inc
adc
int
add
mov
sub
inc
inc
pop
ret
xchg
sub
sbb
sub
fcom
outs
fadd
(bad)
cmp
jl
jg
outs
jbe
sub
ds
cli
les
mov
cs
dec
pop
xor
push
scas
mov
mov
fsubr
inc
ror
int3
jl
pop
inc
fmul
addr16
loopne
fidivr
cli
hlt
clc
or
adc
mov
mov
scas
sbb
loopne
sbb
retf
jecxz
or
aas
adc
jg
adc
retf
xor
daa
aas
cdq
fwait
scas
test
outs
(bad)
in
stc
repnz
ins
cmp
push
cli
fsubr
stc
mov
clc
cmp
imul
test
sbb
arpl
imul
and
lea
aas
mov
movs
push
pop
or
ret
test
jecxz
mov
jnp
push
data16
into
cmp
pop
dec
dec
cmps
pop
sar
scas
mov
push
into
push
outs
jp
jnp
addr16
popa
addr16
lods
movs
lods
sti
rcr
jmp
cmp
movs
mov
leave
in
dec
out
aaa
xchg
and
dec
aam
mov
push
pop
mov
mov
add
or
in
das
lahf
in
xchg
adc
push
adc
push
cld
pop
paddq
xlat
cmp
push
push
shl
movs
mov
fcomp
sbb
(bad)
mov
mov
inc
push
pop
ret
test
iret
nop
cmps
inc
push
stos
test
mov
adc
mov
les
mov
mov
inc
scas
push
popa
stos
add
mov
outs
cwde
dec
and
ins
ins
push
dec
(bad)
ins
xor
jmp
ret
sahf
stos
dec
test
pusha
ss
lods
clc
dec
dec
dec
mov
jle
scas
dec
mov
cmps
test
xchg
mov
sbb
inc
mov
pushf
loope
mov
sub
jnp
jecxz
mov
cwde
mov
sbb
ror
jae
and
xchg
and
js
mov
jl
mov
dec
mov
or
xchg
imul
adc
outs
pop
dec
mov
inc
pop
xchg
inc
push
sahf
or
scas
sub
(bad)
out
push
imul
mov
jmp
ins
out
xchg
sub
movs
mov
test
push
outs
xor
out
jne
test
xchg
inc
ret
cmps
cld
fwait
cmp
(bad)
lods
add
mov
aaa
jle
cmp
je
mov
imul
dec
cmps
cwde
cli
jae
inc
scas
pop
sbb
(bad)
in
addr16
lahf
mov
cdq
inc
loope
adc
mov
push
xchg
add
sbb
push
mov
repnz
lods
push
jns
mov
shl
inc
repnz
stc
mov
xchg
xor
jnp
mov
pop
data16
std
sub
outs
or
push
pop
jne
mov
stos
sub
jg
ss
loope
mov
test
mov
cdq
cmps
mov
cmp
lea
cmp
sub
ja
xchg
inc
je
push
xor
aas
sbb
xchg
mov
out
cmps
dec
jns
mov
call
ins
js
inc
imul
pop
or
sar
mov
and
(bad)
and
out
cmps
outs
fidiv
imul
mov
(bad)
mov
inc
lods
cmps
scas
lods
mov
daa
sub
sub
mov
cdq
dec
test
rcr
cmps
sbb
test
scas
adc
sbb
out
add
mov
lods
repnz
cli
mov
test
loop
cmps
imul
es
adc
sbb
mov
pop
mov
mov
push
les
cmp
and
mov
sub
es
mov
mov
pop
lea
inc
mov
mov
dec
lea
jae
mov
arpl
es
mov
xchg
xchg
push
es
mov
adc
or
mov
es
popf
cmp
pushf
sar
call
cwde
and
pop
rol
into
dec
dec
inc
inc
inc
inc
inc
inc
into
inc
pop
pop
pop
pop
pop
pop
pop
mov
ja
into
cmps
test
mov
mov
mov
mov
dec
and
out
inc
inc
cwde
cdq
pop
pop
loop
xchg
pop
mov
mov
mov
into
cdq
mov
mov
sahf
lea
mov
mov
pushf
fwait
add
dec
inc
inc
into
inc
dec
pop
dec
push
dec
inc
dec
into
mov
mov
mov
mov
mov
push
push
sub
lods
push
ins
mov
mov
sub
movs
lods
(bad)
stos
mov
dec
shl
mov
lods
adc
mov
push
pop
stos
push
test
lods
mov
cmps
xchg
cmps
jns
test
adc
cdq
jb
movs
pand
lods
push
aad
lods
mov
mov
mov
mov
lods
sub
mov
mov
mov
dec
mov
mov
mov
lods
imul
cmps
mov
stos
mov
mov
lahf
mov
(bad)
fldenv
mov
lods
bound
mov
lods
mov
mov
jno
mov
imul
mov
lea
mov
mov
mov
movs
mov
imul
xchg
mov
mov
lods
sub
popf
push
call
dec
xchg
ins
test
xchg
test
cli
lods
mov
dec
or
mov
out
imul
sub
mov
mov
lods
push
mov
mov
lods
xchg
inc
lods
call
cmp
fadd
xchg
add
and
inc
xchg
mov
mov
xchg
mov
xchg
out
(bad)
nop
imul
dec
test
or
mov
mov
lods
mov
imul
and
mov
mov
mov
ins
mov
imul
cld
push
lods
addr16
mov
jnp
bound
ds
gs
mov
mov
ds
fs
jge
mov
lods
arpl
test
sub
stos
imul
movs
jg
mov
mov
inc
jle
xor
sub
ins
jl
popf
lods
aas
call
mov
lea
xchg
mov
jbe
mov
dec
jne
scas
leave
mov
lods
mov
push
mov
lods
ds
pop
jae
dec
mov
or
xchg
or
mov
lods
out
lock
mov
lods
popf
dec
mov
adc
dec
dec
(bad)
out
inc
dec
sub
pushf
loope
inc
(bad)
cmc
inc
cld
and
in
inc
movs
jmp
inc
dec
lea
(bad)
xchg
add
cmovo
test
movs
jmp
pop
jmp
popf
mov
pop
les
mov
pop
mov
cmc
push
pusha
mov
pop
push
in
mov
mov
mov
and
test
mov
mov
push
dec
cmps
mov
mov
mov
imul
mov
sub
test
mov
xchg
dec
cmps
nop
xchg
sub
leave
pusha
mov
mov
lahf
xchg
lods
push
fwait
add
or
dec
ins
test
lods
and
mov
add
and
mov
lods
clc
imul
cmps
aas
jmp
test
arpl
stos
cdq
jp
pushf
retf
mov
cmp
jp
in
lods
retf
mov
cmp
xchg
lods
aas
mov
cwde
mov
test
lods
push
test
sub
lods
sub
mov
mov
mov
mov
xchg
mov
lods
xor
movs
(bad)
xor
adc
cmps
or
inc
or
lods
aad
mov
(bad)
mov
or
movs
or
sub
dec
cmps
test
mov
mov
and
sub
mov
mov
add
lods
lods
movs
mov
dec
add
mov
aad
ja
sbb
mov
mov
mov
mov
mov
cdq
pop
sbb
xchg
sub
dec
sbb
sahf
out
push
xor
cmps
stos
test
lahf
mov
mov
mov
mov
dec
fdiv
adc
adc
adc
imul
mov
sub
sahf
or
lods
popf
adc
fucomp
ins
mov
lods
mov
dec
jmp
mov
xor
sub
lods
mov
mov
jae
in
xchg
lods
out
jecxz
loop
mov
xor
cmp
xor
push
cmp
cmp
dec
mov
cli
scas
sbb
mov
inc
lea
clc
sub
lods
out
jnp
test
lods
call
stos
mov
mov
push
mov
cdq
fadd
cwde
jno
test
push
dec
mov
mov
repz
mov
mov
cwde
mov
xchg
pusha
push
lods
mov
lods
mov
mov
out
xchg
xor
dec
int
ja
lods
imul
mov
mov
movs
retf
dec
mov
mov
mov
enter
(bad)
cmc
(bad)
jl
lds
lods
pop
les
xchg
sub
mov
add
sbb
mov
fwait
and
lea
cmp
and
(bad)
call
(bad)
int3
xchg
mov
and
mov
sub
dec
or
pop
ins
popf
mov
mov
jns
movs
push
js
lods
out
js
(bad)
dec
mov
lods
xchg
mov
aam
dec
cmps
mov
mov
lods
imul
out
jbe
mov
inc
mov
xor
shl
and
cli
cmps
daa
iret
and
mov
mov
xchg
pushf
mov
mov
mov
mov
lods
add
lea
cwde
std
test
(bad)
mov
xchg
cmps
xchg
cmps
dec
mov
push
movs
sub
mov
fwait
mov
mov
test
lods
mov
mov
mov
lods
cwde
mov
sub
mov
or
cmp
mov
mov
lahf
sub
lods
mov
mov
push
mov
mov
lea
mov
sbb
pop
mov
cs
mov
mov
xchg
jge
pop
scas
(bad)
jle
ret
mov
xchg
lods
mov
xchg
lea
jae
mov
lods
cmc
cwde
movs
and
mov
mov
xchg
mov
jge
mov
arpl
out
push
mov
cs
aad
mov
test
or
fwait
jmp
mov
xor
scas
mov
pushf
lahf
mov
or
cmp
fwait
and
sbb
aaa
mov
mov
ds
cdq
sub
add
sub
xchg
pop
xchg
push
mov
out
scas
test
xchg
cs
fwait
aas
mov
stos
xchg
mov
popa
lods
popf
nop
mov
call
outs
mov
mov
sbb
imul
xchg
push
inc
lods
retf
or
addr16
in
pop
scas
lods
cwde
mov
cdq
mov
cmp
test
push
sub
and
scas
push
movs
dec
mov
mov
addr16
mov
arpl
cmp
mov
lods
ret
jae
mov
and
addr16
shr
fwait
mov
cli
mov
mov
movs
mov
xor
nop
mov
mov
cdq
imul
outs
inc
movs
mov
and
movs
test
sbb
leave
xchg
(bad)
in
nop
mov
sub
xchg
add
lock
pop
(bad)
inc
mov
lahf
cmps
mov
sub
dec
scas
sub
or
maxps
mov
cmp
out
xchg
movs
mov
test
in
cli
mov
cmp
mov
stos
sahf
movs
call
xor
or
mov
daa
mov
scas
push
outs
test
jnp
out
jl
cwde
je
cmp
push
dec
mov
into
mov
movs
mov
stos
mov
fcomp
retf
lahf
dec
mov
inc
xchg
mov
mov
lods
mov
mov
sub
add
mov
jae
xchg
jle
mov
ret
arpl
mov
test
fwait
and
mov
push
xchg
(bad)
mov
or
ret
jle
cmp
test
and
(bad)
mov
push
sbb
(bad)
cmc
jae
sahf
mov
xor
cmps
mov
jl
and
movs
and
lods
and
jnp
and
mov
mov
test
mov
(bad)
or
dec
pushf
cmp
mov
mov
les
outs
(bad)
mov
and
es
movs
mov
test
mov
int3
mov
add
cmps
mov
pop
mov
or
or
test
lods
jnp
sbb
push
add
scas
sub
js
pop
mov
adc
test
mov
cmp
ds
mov
mov
outs
in
shr
mov
xchg
fidiv
sbb
dec
xor
cmc
outs
movs
scas
jnp
cmc
adc
fmul
dec
mov
(bad)
mov
mov
mov
mov
je
(bad)
jae
inc
mov
xor
out
lods
mov
gs
arpl
cmps
in
xchg
test
push
scas
or
xchg
dec
or
idiv
pop
sub
mov
push
mov
outs
xor
mov
add
scas
dec
mov
fmul
mov
outs
scas
dec
or
mov
dec
das
fmul
mov
pop
add
retf
aaa
aam
aas
test
outs
hlt
lods
aas
dec
in
and
mov
fimul
sbb
test
adc
mov
sbb
inc
test
clc
mov
dec
and
mov
inc
dec
xchg
pop
mov
dec
mov
jg
hlt
cld
inc
mov
test
movs
stos
mov
mov
mov
into
aaa
mov
mov
lahf
mov
mov
enter
bt
(bad)
cmp
mov
cs
fidivr
fwait
(bad)
dec
xchg
lods
loop
dec
mov
jno
pop
arpl
jmp
pop
pop
cld
jle
aaa
test
jmp
cmps
mov
(bad)
cld
inc
cs
mov
(bad)
push
mov
mov
test
cs
leave
inc
lods
mov
sbb
and
jg
cmp
repnz
adc
loopne
hlt
jbe
pop
aas
mov
loop
xchg
in
inc
scas
out
sub
stc
cmp
aas
inc
cmp
stos
(bad)
add
movs
push
dec
arpl
cmps
stos
sub
jmp
pop
retf
ins
pop
mov
and
dec
and
cmc
retf
scas
movsx
xchg
mov
inc
push
pop
xchg
mov
test
mov
add
stc
jg
jp
add
clc
mov
repnz
mov
xor
mov
cmps
test
test
mov
inc
cwde
aas
idiv
retf
dec
daa
std
mov
fwait
out
push
xchg
cs
adc
mov
test
cmp
ficom
das
cmps
pop
and
nop
inc
xor
mov
sti
jmp
stos
aaa
cmps
pushf
sub
push
clc
scas
f2xm1
dec
add
mov
mov
cmp
bnd
neg
(bad)
sti
cmp
mov
dec
pop
outs
mov
adc
out
sub
sub
cmp
lods
sub
push
dec
scas
push
cmps
mov
and
out
or
mov
jnp
inc
inc
dec
dec
inc
sub
ins
xchg
jg
mov
fisub
movs
and
mov
mov
cs
hlt
scas
je
jmp
ins
(bad)
and
pop
retf
aaa
mov
pop
mov
mov
sbb
mov
inc
out
scas
pop
inc
stos
push
cmps
ja
stos
daa
cs
call
lods
ss
cld
adc
popf
mov
xor
sub
lods
mov
aam
pop
in
(bad)
jge
sub
sbb
ret
xor
imul
retf
repnz
cmp
xchg
mov
std
call
jne
pop
cdq
cmp
aas
lods
jbe
jle
fwait
pop
popf
cli
pop
jno
inc
(bad)
add
mov
imul
fisub
lods
dec
add
cmps
sar
and
mov
mov
or
mov
mov
mov
cli
cmp
mov
cmp
inc
hlt
mov
and
aad
pop
call
les
mov
xor
hlt
movs
mov
scas
lahf
popw
addr16
and
pop
test
add
stos
sub
push
pop
xchg
stos
cmp
mov
add
mov
frstor
stos
cdq
lahf
call
and
int
cmp
xor
pop
mov
loopne
cmp
lds
cmp
in
or
cs
jmp
test
cmps
cmps
inc
sub
cmp
repnz
jns
outs
pop
mov
adc
cli
test
movs
stos
and
cmp
pop
ja
xchg
aam
lahf
dec
mov
cs
test
mov
das
repnz
ja
outs
and
lods
ror
pop
cli
(bad)
(bad)
pop
jmp
js
fisubr
les
and
jg
mov
sub
add
(bad)
in
minps
hlt
pop
dec
mov
pop
jbe
jg
xor
ss
mov
movs
sbb
dec
mov
test
mov
ficomp
jmp
in
aaa
in
(bad)
cli
mov
mov
jl
out
or
mov
pushf
aas
mov
sub
test
sbb
pop
mov
xchg
in
sub
(bad)
mov
cmps
xchg
cdq
and
xor
xor
loop
or
mov
les
retf
mov
bound
scas
jle
clc
mov
inc
inc
outs
xor
dec
dec
or
hlt
movs
mov
cmps
fnsave
pop
aaa
stos
jp
fisub
movs
ds
test
mov
dec
inc
mov
addr16
inc
scas
std
mov
movs
pop
push
fimul
sub
(bad)
sub
gs
mov
inc
mov
popf
xchg
add
pop
fimul
mov
cmps
fwait
add
ja
hlt
jp
mov
movs
or
inc
sub
cs
mov
xchg
mov
scas
cmps
pop
cmps
popf
and
xor
add
mov
push
add
mov
push
push
mov
(bad)
xor
xor
or
stos
and
adc
(bad)
adc
aaa
cdq
sbb
or
add
imul
lahf
lods
cmp
mov
loope
lahf
pop
xchg
hlt
dec
shr
jmp
or
cs
gs
and
xor
cmps
(bad)
or
mov
cmp
mov
addr16
outs
sub
xchg
cmps
dec
int3
sub
movs
mov
mov
sbb
cs
cmps
cmp
in
adc
cmp
mov
inc
fsubr
inc
mov
sbb
pushf
lahf
aas
pop
sti
mov
or
outs
in
or
or
outs
scas
push
leave
(bad)
enter
xchg
cs
dec
adc
(bad)
(bad)
aad
and
cmps
rcr
scas
fwait
mov
mov
ins
ja
in
xchg
sbb
das
lods
call
mov
or
test
sub
call
(bad)
and
popf
jg
dec
sub
cmps
sub
scas
inc
adc
clc
or
mov
gs
fmul
jge
mov
bound
lea
cmps
(bad)
cmps
mov
repnz
mov
ret
cmps
fnstsw
je
mov
pop
xchg
aam
hlt
xor
cli
idiv
movs
and
push
jge
sahf
jnp
psubq
jl
aas
lods
mov
mov
mov
mov
pop
ins
out
and
add
lea
xor
xchg
push
cmp
aaa
test
adc
add
mov
inc
cwde
arpl
mov
jae
sbb
(bad)
mov
mov
cs
xor
cmp
sbb
mov
js
inc
pop
xor
stos
out
ret
add
cmps
mov
in
mov
push
sub
into
pop
xchg
cmp
sahf
jg
mov
mov
inc
ins
and
mov
test
or
jae
pop
addr16
outs
sahf
adc
in
add
movs
jnp
bound
mov
mov
ins
mov
xor
sbb
inc
xor
enter
pop
mov
sub
movs
cld
(bad)
mov
adc
arpl
sahf
test
imul
test
into
addr16
mov
and
cmps
inc
aas
inc
imul
sbb
jmp
sti
sbb
call
(bad)
xchg
ffree
or
jle
add
or
fdivr
bound
(bad)
cmps
cmps
popf
stos
add
lahf
jnp
pop
inc
xchg
test
push
jecxz
sub
popf
cmps
add
arpl
cmp
ret
sub
mov
sbb
mov
xchg
mov
push
scas
in
adc
mov
mov
mov
inc
ja
or
in
mov
pop
addr16
out
jo
arpl
sub
adc
add
jae
cmp
adc
pop
cmp
mov
scas
test
and
stos
aas
ret
mov
mov
adc
mov
mov
int3
sub
clc
call
call
call
aas
sbb
mov
(bad)
cwde
push
xor
cmp
in
sbb
fwait
cld
ret
jl
sub
mov
test
data16
sbb
dec
inc
sti
int
mov
sub
jmp
mov
sub
ins
pop
in
ins
sub
dec
imul
sub
add
mov
mov
(bad)
fcomp
adc
mov
cmps
sub
lods
push
adc
mov
mov
nop
inc
mul
mov
xor
and
jae
jmp
and
jp
popf
jmp
cmps
aam
sub
mov
imul
adc
and
adc
fistp
int3
mov
aas
mov
push
jbe
xor
ret
lahf
scas
shl
cmp
mov
in
mov
jb
scas
popf
cli
jge
add
jge
int3
mov
mov
cmp
inc
jnp
cmp
inc
dec
int3
mov
imul
(bad)
arpl
lock
aam
xchg
xchg
inc
jg
out
cs
popa
mov
or
mov
inc
cmp
jmp
or
cmp
xor
pop
inc
scas
movs
imul
mov
js
mov
mov
sbb
or
pop
fwait
mov
sqrtps
(bad)
lock
in
inc
and
stos
aam
mov
ficomp
ficom
cld
mov
aaa
dec
in
test
loope
mov
sub
inc
in
arpl
adc
pop
popf
fwait
(bad)
repnz
movs
daa
imul
or
jge
stos
cmps
dec
xchg
mov
arpl
ja
cmp
xor
retf
mov
jno
inc
mov
sar
retf
cld
cmps
retf
jle
cli
int
pop
arpl
cdq
cmps
mov
push
cwde
addr16
inc
or
mov
stos
mov
mov
mov
cmp
test
cs
cmp
pusha
jp
popf
ins
scas
ins
mov
(bad)
fdivrp
jle
xchg
imul
lock
cmp
mov
dec
jg
adc
imul
inc
xchg
in
ror
jo
mov
cmp
cmp
cmps
mov
mov
loopne
ins
and
inc
pop
or
addr16
arpl
fs
test
xchg
movs
pop
xchg
cdq
ja
xor
cmp
sub
mov
cmp
mov
or
call
sbb
mov
mov
es
stos
lahf
or
pop
pop
dec
movs
ja
sub
int3
fsub
mov
loop
adc
call
arpl
add
add
mov
mov
mov
or
or
pop
push
push
fimul
retf
in
jge
inc
mov
cmps
imul
mov
xchg
arpl
movs
jmp
mov
mov
inc
pop
mov
push
stos
mov
jns
mov
addr16
aaa
test
loop
cmp
and
out
dec
aas
stos
jge
out
test
inc
lock
cmp
jmp
lods
push
mov
or
mov
mov
xchg
cli
adc
mov
mov
inc
jnp
ins
lods
movs
add
cwde
int
jecxz
and
das
int3
sti
push
sub
mov
mov
pop
sbb
mov
mov
and
mov
add
fsub
cld
popf
mov
test
jae
or
cdq
movs
and
or
ins
fwait
outs
(bad)
mov
or
stc
int
push
cmps
cmps
lods
test
pop
(bad)
pop
xchg
inc
mov
cdq
pop
pop
popf
stos
sub
cmp
ja
lahf
lahf
pop
stos
xor
cmps
mov
mov
mov
xor
ret
mov
loop
arpl
mov
call
cs
(bad)
mov
xchg
xchg
inc
or
scas
dec
cs
popa
jmp
mov
push
out
outs
cmps
test
add
inc
mov
es
mov
sbb
clc
fwait
(bad)
mov
aaa
mov
mov
je
inc
stos
dec
or
xor
pop
test
mov
mov
or
enter
mov
cmp
cmp
rol
xchg
sub
mov
loop
imul
cmp
push
popf
mov
cli
lods
fs
rol
cld
push
ins
and
imul
adc
pop
cmp
jne
add
dec
inc
mov
mov
xor
push
mov
(bad)
cmp
leave
mov
mov
cmp
mov
cmps
mov
into
fstp
inc
(bad)
mov
cmps
sahf
and
cmps
inc
add
test
enter
dec
cmps
jae
das
(bad)
sbb
arpl
xor
(bad)
jo
mov
mov
popf
scas
push
mov
das
jle
lahf
call
test
movs
loopne
push
retf
in
clc
inc
mov
or
mov
ja
movs
inc
mov
mov
mov
cli
bound
ds
mov
(bad)
lds
aad
cmps
inc
clc
mov
mov
mov
mov
xchg
mov
inc
call
cdq
test
pop
mov
sbb
mov
mov
add
mov
xchg
test
sbb
cmps
data16
cmps
sbb
test
clc
push
(bad)
sbb
call
jbe
inc
sub
repz
movs
inc
mov
cmps
mov
cmc
mov
push
or
test
data16
sub
lock
push
adc
push
sti
push
test
inc
mov
mov
test
mov
mov
sahf
jmp
stos
cmp
lea
mov
mov
cwde
stos
xor
inc
push
hlt
mul
mov
add
sahf
or
xor
mov
lahf
rol
mov
jp
cmp
push
scas
xchg
call
das
add
popf
mov
inc
sub
adc
lahf
mov
aaa
shl
mov
cmp
nop
and
cmp
movs
test
pushf
mov
addr16
mov
xchg
mov
fwait
stos
test
cmps
test
lods
mov
cwde
popa
(bad)
mov
mov
mov
stos
mov
push
mov
shl
cmps
cmps
add
inc
and
xchg
adc
mov
scas
test
mov
mov
in
(bad)
mov
fwait
push
sub
jge
xchg
sub
mov
mov
scas
sub
inc
jl
ret
mov
fnstsw
mov
mov
and
arpl
mov
mov
or
nop
lea
sbb
(bad)
scas
push
mov
fld
test
sub
pop
imul
rcr
mov
test
test
loop
mov
dec
cmps
cmps
jns
cld
das
movs
push
mov
jle
stos
mov
jg
mov
pusha
cmp
pop
push
mov
xchg
stos
jb
cmp
dec
mov
daa
cmps
test
pop
jae
cdq
mov
adc
imul
cwde
xchg
dec
mov
mov
scas
cmp
push
das
cmps
lahf
cwde
es
sahf
mov
push
add
cmp
mov
xchg
xchg
lods
outs
cld
clc
fisubr
mov
mov
ret
mov
test
adc
mov
push
mov
jmp
xchg
mov
push
test
xchg
inc
and
in
sub
sub
cmp
mov
adc
mov
mov
cmp
cmps
cdq
cmp
sbb
mov
mov
dec
mov
mov
pop
inc
imul
mov
imul
cmp
mov
add
sbb
push
mov
cmp
mov
(bad)
mov
and
imul
aaa
xor
push
movs
in
test
fwait
test
mov
imul
ret
aas
popa
sub
out
cmps
add
ficom
cmps
popf
and
das
test
aad
mov
mov
cld
sbb
mov
sahf
into
mov
imul
jg
test
cmp
push
xchg
pop
rcr
test
retf
xchg
mov
add
imul
and
and
mov
cmp
push
xor
and
bound
mov
mov
push
imul
aam
jmp
sar
cwde
imul
jg
cli
sti
jne
sbb
pop
mov
add
dec
cmp
mov
jne
hlt
pop
test
mov
out
mov
mov
jge
mov
mov
mov
popa
mov
mov
mov
xor
jns
popa
sti
adc
ins
sub
pop
xor
mov
out
xchg
icebp
mov
retf
je
mov
push
cmp
jge
jns
xchg
mov
mov
fisubr
mov
pop
push
outs
fiadd
mov
push
or
mov
xchg
jno
cmp
fdiv
push
xchg
aaa
inc
sub
mov
lods
mov
data16
test
clc
ins
mov
aaa
scas
mov
test
cmp
mov
mov
dec
into
push
inc
ins
test
xor
mov
xor
push
and
and
cmc
das
cmps
lahf
push
fsub
sbb
or
sub
dec
data16
xchg
mov
xchg
mov
(bad)
outs
sbb
jl
loop
mov
mov
sar
mov
ficomp
imul
movs
cmp
mov
mov
clc
je
pop
imul
icebp
cli
push
jae
or
out
aas
xchg
jae
pusha
call
sbb
push
popf
add
push
cmp
out
into
mov
lods
mov
pop
in
or
xor
xchg
adc
mov
push
sub
clc
push
mov
jno
rcl
and
lea
inc
es
adc
mov
stos
fs
xchg
dec
inc
cmps
inc
jle
sbb
mov
stos
sub
sub
cmps
mov
pop
mov
adc
pop
xchg
inc
pushf
sub
pushf
pop
ss
cmps
pop
mov
pop
ds
lea
inc
inc
es
mov
inc
es
mov
inc
ds
lea
pop
je
cmps
ins
push
xchg
adc
outs
cmps
mov
test
push
or
sbb
(bad)
clc
(bad)
mov
jo
sub
nop
ret
(bad)
lahf
gs
sar
mov
mov
fiadd
push
out
adc
mov
sbb
adc
and
xchg
add
push
stos
sbb
sbb
xchg
fwait
jle
(bad)
popf
loope
call
setnp
(bad)
sbb
jnp
cmp
ins
cld
ficomp
mov
outs
lahf
jns
mov
addr16
mov
pop
repnz
ja
sbb
pop
push
ins
inc
mov
leave
imul
mov
imul
es
mov
aas
ds
lea
push
pop
es
mov
jg
lea
lahf
xchg
dec
push
in
(bad)
rcr
fimul
es
mov
cli
dec
es
mov
aaa
ds
lea
imul
dec
mov
(bad)
ds
lea
stos
imul
out
ds
(bad)
jmp
sub
jnp
imul
and
jo
push
lea
and
es
mov
imul
gs
bound
ds
lea
jle
es
jnp
jp
jns
js
ja
jbe
sbb
cmp
add
pop
jno
pop
xchg
adc
loopne
push
inc
pop
lea
es
mov
pop
ds
lea
push
outs
stos
pop
and
jo
aad
out
push
cmp
and
jo
push
cld
cmp
aad
out
push
cmp
and
lods
and
dec
jge
inc
inc
ins
xchg
pop
pop
sub
jl
inc
dec
out
imul
out
cmps
fst
cdq
push
call
push
adc
mov
push
sub
int
or
or
jl
xacquire
mov
push
sub
and
lahf
and
pop
cwde
xchg
cdq
mov
and
mov
dec
jo
js
lock
sub
sub
sub
sub
sub
sub
aad
loop
jne
dec
jbe
ja
js
jns
push
jl
jge
jle
jg
pusha
mov
and
mov
fs
retf
addr16
push
push
imul
mov
outs
test
pop
loopne
push
arpl
cmp
jg
xchg
mov
(bad)
xlat
mov
icebp
mov
jge
xchg
push
push
das
xchg
sub
add
mov
push
and
test
mov
les
hlt
push
mov
mov
and
loopne
retf
inc
xchg
dec
push
pop
pop
inc
dec
fldcw
pop
cmp
rcl
sub
(bad)
mov
jmp
fimul
sbb
mov
inc
or
xchg
icebp
adc
loop
sbb
repz
iret
lods
pushf
dec
xchg
pop
ror
outs
sar
imul
lea
(bad)
mov
mov
retf
loop
fimul
or
sub
fistp
outs
(bad)
shr
es
mov
addr16
les
es
mov
ficom
(bad)
leave
imul
es
mov
int3
cmp
es
lock
daa
rcl
mov
add
cmp
push
idiv
jnp
clc
lea
cli
mov
mov
addr16
test
sbb
loopne
sub
es
jecxz
lahf
addr16
stos
(bad)
in
(bad)
cwde
imul
es
dec
jmp
and
jmp
cli
or
fwait
in
popf
mov
pop
mov
adc
xchg
adc
mov
stos
ds
push
imul
sbb
sbb
ja
sbb
sbb
xchg
mov
sbb
push
lea
imul
and
jmp
jge
mov
lock
pusha
push
fisubr
stc
push
(bad)
(bad)
fild
mov
pop
fsubp
sbb
mov
adc
fdivr
pop
ins
jg
jg
out
(bad)
ficomp
enter
push
out
lahf
ret
sbb
fcom
mov
add
sahf
dec
lahf
lods
loop
hlt
repz
xchg
pusha
xor
adc
rcr
adc
fld
cli
retf
mov
inc
addr16
sbb
(bad)
push
xchg
pop
mov
sar
push
sbb
(bad)
sbb
push
xor
loop
sti
rcr
scas
dec
enter
sub
mov
pop
fcomp
ficom
idiv
sbb
sbb
fwait
in
jmp
scas
fild
stos
rcl
in
lds
scas
imul
stos
in
clc
jmp
pop
scas
sub
pusha
aas
pop
movs
(bad)
push
mov
pop
scas
jg
hlt
aas
xchg
sub
push
mov
and
addr16
jle
movs
mov
enter
jge
cs
pop
clc
aam
loop
xchg
or
scas
outs
inc
adc
pushf
std
xor
adc
jns
mov
fcomp
fadd
ja
sub
retf
int
cmp
pop
pop
mov
out
bound
scas
mov
in
cmp
out
addr16
cld
mov
(bad)
adc
out
add
(bad)
enter
cmps
cmp
mov
ja
mov
fisubr
stc
adc
dec
push
xchg
cmp
jg
retf
(bad)
icebp
dec
mov
outs
cmp
test
dec
outs
fnstenv
xchg
mov
ins
adc
pop
xor
rcr
mov
jnp
pop
add
out
aaa
aas
(bad)
cmp
pop
mov
dec
dec
mov
popa
fistp
sub
jg
fsubrp
mov
pop
aaa
hlt
pop
popf
or
sahf
mov
cmp
aas
div
mov
push
call
das
mov
cld
popf
mov
cld
popf
cdq
xchg
(bad)
jns
xchg
fistp
dec
mov
cmp
ss
out
ins
cli
adc
sbb
les
popf
enter
fsubrp
ror
or
test
leave
add
out
pop
push
adc
or
adc
call
scas
int
or
mov
adc
loopne
scas
outs
les
out
push
and
sbb
lea
dec
mov
adc
stc
inc
(bad)
sar
mov
lahf
call
lods
mov
outs
clc
not
lock
imul
scas
mov
out
scas
retf
mov
aas
or
out
cmp
mov
sahf
pop
cdq
or
mov
in
and
jp
push
scas
lahf
leave
mov
arpl
arpl
(bad)
jmp
scas
rcr
ds
cmps
push
ja
mov
in
dec
leave
loope
adc
sub
sbb
stc
(bad)
jmp
mov
jge
sbb
sub
aam
cli
dec
push
or
or
stos
ins
adc
outs
cmps
sbb
scas
cld
mov
adc
lahf
mov
jecxz
mov
mov
daa
xor
inc
(bad)
pop
pop
jg
dec
jne
pop
xchg
cmp
in
pop
outs
cmp
mov
inc
mov
cmp
pop
push
cmps
jge
imul
iret
std
xor
or
leave
push
mov
pop
bnd
mov
adc
or
mov
push
aas
jno
(bad)
shr
mov
jle
mov
sub
xchg
(bad)
pop
out
cmp
inc
test
push
out
neg
jnp
jb
test
pop
cld
aam
add
fist
out
push
or
inc
aas
scas
outs
sbb
adc
stos
mov
mov
lods
xchg
adc
call
inc
sbb
sub
and
out
jne
stos
cmps
je
jae
jb
jno
jo
es
mov
mov
nop
ins
pop
lea
outs
mov
addr16
mov
popf
sub
in
cld
mov
and
cmps
mov
dec
jmp
mov
dec
adc
inc
mov
and
mov
stc
shr
(bad)
call
sbb
cdq
cmps
imul
mov
sub
inc
stc
(bad)
mov
mov
mov
mov
jne
pop
lahf
xchg
mov
jbe
aaa
lods
push
pop
retf
mov
popa
ins
loop
scas
add
imul
mov
std
cmps
dec
stos
(bad)
outs
dec
mov
shrd
out
jmp
mul
jbe
mov
stos
pcmpeqd
mov
cmps
cmp
das
push
lahf
sub
or
mov
fcomp
daa
lea
outs
pop
xor
push
pop
mul
scas
pop
xor
lods
sub
popf
mov
jne
mov
pop
jg
test
das
addr16
jno
jg
xchg
jns
lahf
imul
rcl
repnz
aam
sbb
mov
lods
out
nop
xchg
mov
out
aaa
xchg
(bad)
pop
(bad)
cmps
jmp
pop
movs
clc
(bad)
addr16
bound
test
cmps
addr16
outs
cmps
xchg
push
sbb
std
lock
sub
pop
mov
cld
mov
jge
addr16
repnz
addr16
mov
sub
addr16
(bad)
ins
inc
mov
inc
mov
dec
push
(bad)
push
dec
inc
dec
movs
xor
retf
dec
loop
scas
test
xchg
jno
adc
gs
xchg
push
lods
xor
lock
loop
fcmovnu
cmp
pop
push
stos
ins
mov
and
imul
xchg
mov
push
adc
or
movs
ret
mov
sbb
in
mov
(bad)
mov
popf
lods
test
lods
mov
stos
arpl
xor
mov
mov
lahf
and
bnd
sub
sub
mov
mov
mov
gs
xor
mov
data16
popf
fimul
pop
call
push
or
imul
add
sbb
sahf
inc
xor
mov
mov
xchg
imul
ds
mov
shl
ds
ret
retf
imul
mov
mov
and
imul
cmps
punpckhdq
or
out
and
mov
jb
imul
inc
push
cmps
sbb
and
sub
mov
lods
mov
cli
hlt
icebp
imul
add
aad
xlat
sbb
push
pop
lods
mul
int3
dec
inc
cmps
ins
dec
xor
sub
neg
xchg
loop
xchg
xchg
test
pop
dec
test
inc
mov
sub
xor
psllw
popf
mov
aam
xchg
test
mov
jmp
(bad)
cli
in
daa
in
push
in
(bad)
adc
adc
add
cmp
enter
clc
sbb
pushf
mov
(bad)
cli
out
push
scas
shl
add
rcr
adc
rcr
loop
(bad)
sbb
add
cs
rcl
adc
adc
adc
(bad)
xchg
jl
inc
test
loop
adc
mov
sbb
sbb
adc
or
fcmovnu
je
movs
or
pop
fimul
inc
inc
nop
scas
mov
push
and
shl
mov
(bad)
sbb
mov
movs
mov
cmp
mov
imul
inc
add
mov
pop
mov
pop
inc
sbb
pusha
xor
into
mov
dec
dec
jmp
cld
int
lods
mov
adc
in
cmps
ins
add
retf
sub
jnp
pop
mov
pop
fisttp
(bad)
adc
mov
push
mov
push
cmp
nop
sub
daa
xchg
mov
lods
adc
adc
daa
cmp
cmps
fdivr
fisubr
cli
mov
add
jecxz
in
daa
daa
test
shl
pop
clc
add
jne
adc
popf
aas
mov
mov
movs
nop
clc
jns
je
push
xchg
inc
push
inc
xchg
push
dec
adc
(bad)
sbb
fndisi(8087
jecxz
and
push
mov
cmps
xchg
mov
loopne
retf
mov
or
push
mov
aad
sbb
std
mov
inc
or
mov
inc
push
or
dec
sub
dec
ss
inc
nop
push
and
stos
ds
xchg
not
pop
or
idiv
sbb
push
mov
dec
dec
pushf
jne
dec
shr
inc
lds
pop
jo
stos
inc
je
imul
or
lods
loope
push
(bad)
cmp
cmp
push
loope
xlat
gs
das
in
ins
mov
xchg
das
mov
xor
mov
push
ins
cmp
imul
jge
aam
sub
jnp
jo
cmp
dec
pop
jbe
imul
stc
shl
cmp
fidiv
add
daa
sbb
out
mov
xchg
out
mov
call
jmp
or
add
and
pop
idiv
stos
scas
addr16
outs
mov
sbb
leave
adc
mov
adc
or
scas
xchg
pop
jno
adc
xchg
xchg
or
dec
mov
mov
inc
sbb
sti
retf
pusha
retf
arpl
(bad)
ins
lock
pop
pop
mov
pop
bound
jns
call
mov
inc
jae
add
arpl
mov
imul
mov
inc
aas
sub
xor
cli
mov
outs
adc
or
out
lahf
xchg
sub
es
ja
dec
aas
push
jge
popa
and
sbb
cmc
aas
in
pushf
xchg
addr16
mov
adc
scas
xchg
mov
data16
mov
sbb
lods
stos
cmp
scas
das
mov
xchg
sub
fs
xor
repz
addr16
inc
dec
push
and
pop
inc
add
and
pop
push
sbb
icebp
mov
adc
jmp
dec
pop
pop
xchg
clc
mov
call
push
imul
xor
mov
mov
lahf
mov
out
add
shr
jl
xchg
add
ins
push
mov
push
jnp
in
gs
and
ja
outs
jnp
ins
xchg
jmp
or
popa
jne
adc
mov
jge
das
(bad)
jp
jl
daa
xlat
mov
and
mov
imul
ds
ds
ds
ds
xor
jmp
outs
ins
xchg
mov
mov
push
sub
fidivr
push
mov
ins
push
movs
mov
arpl
inc
pusha
push
mov
cwde
inc
imul
js
imul
stos
mov
dec
dec
dec
outs
pop
out
jmp
mov
mov
mov
addr16
jge
sub
ret
int
(bad)
in
adc
sub
sub
imul
mov
popw
mov
jp
arpl
or
jnp
cmps
inc
sub
push
hlt
je
scas
xor
lea
mov
bound
cmps
cmp
cmp
jle
mov
push
and
mov
jge
mov
lahf
shr
jp
loop
push
popa
ins
cld
cli
nop
shr
retf
xchg
arpl
sub
mov
popa
jns
ret
add
jl
loope
fadd
or
cmps
cmps
jl
js
adc
mov
cmp
push
jnp
cmp
xor
pop
loop
jle
outs
repz
and
jbe
bound
sar
mov
popa
shl
arpl
xchg
ins
in
in
mov
fcomp
cmps
imul
fnsave
mov
popf
movs
and
jns
jle
adc
addr16
cmps
daa
js
ins
call
pop
sahf
mov
fidivr
cmp
fwait
cmps
mov
add
test
(bad)
mov
xor
mov
fldenv
js
cmps
inc
ds
mov
mov
mov
xchg
cmps
mov
pop
inc
mov
das
nop
xchg
pop
ds
xor
mov
mov
mov
mov
mov
jns
or
scas
ins
js
push
cmps
sahf
xor
bound
and
jg
jl
cmps
pop
es
bound
es
xor
push
bound
xchg
xchg
imul
xchg
outs
ins
and
inc
and
cmps
cmps
in
pushf
rcr
xchg
fistp
ins
mov
dec
fistp
cmps
mov
jl
cmps
pop
and
mov
scas
and
inc
outs
int3
data16
jmp
ss
mov
push
mov
cmps
imul
fbstp
pop
mov
loop
jbe
stos
dec
stc
add
bound
mov
mov
out
ins
outs
arpl
add
jne
sbb
leave
popa
popf
lea
mov
aam
pushf
in
jnp
sahf
jge
jge
out
jmp
lahf
in
jbe
ja
sahf
or
(bad)
shl
in
push
popa
daa
cmps
test
fld
or
movs
pop
sbb
jmp
jge
(bad)
jg
push
cmps
repnz
add
push
outs
ins
mov
shl
arpl
jbe
inc
jg
cmps
das
or
pop
pop
mov
iret
push
dec
mov
scas
pushf
cmps
outs
aam
push
cmp
mov
(bad)
cmp
(bad)
aas
inc
xor
mov
cmps
mov
ds
push
jmp
outs
ja
sbb
aas
mov
stc
xlat
and
loope
movs
mov
and
imul
mov
ins
mov
adc
arpl
jl
imul
lahf
iret
in
xchg
popa
jl
cmps
fucomip
lahf
outs
xor
in
push
mov
mov
mov
and
mov
mov
mov
or
pop
ins
dec
jge
imul
pop
pop
mov
lods
push
push
cs
pop
dec
cmps
jge
and
cli
movs
mov
mov
add
jnp
mov
cwde
push
pusha
aas
lock
lods
and
test
rcl
outs
cmps
hlt
mov
jne
and
ins
jg
movs
push
or
int
mov
in
test
mov
sbb
xchg
add
mov
cmps
or
jb
mov
popf
mov
imul
cmps
sub
push
test
jl
sbb
jl
xchg
in
sbb
mov
xchg
(bad)
faddp
adc
repnz
cli
ins
addr16
mov
in
jnp
repz
loopne
pop
sub
mov
inc
dec
(bad)
cmps
push
cmps
mov
mov
fs
jle
call
cmps
je
mov
ja
mov
ja
jne
sbb
pop
addr16
mov
mov
out
sub
xor
loope
ins
mov
mov
xor
std
not
mov
arpl
mov
imul
ins
neg
jecxz
or
jle
imul
push
shr
inc
mov
adc
es
adc
stc
and
(bad)
push
mov
ficom
pop
xor
fmul
ja
fcom
mov
bound
jp
jo
mov
js
xchg
pop
sbb
adc
cmp
gs
ja
dec
push
das
fist
cmp
call
push
xchg
dec
dec
aad
(bad)
jno
and
cmps
out
es
(bad)
ds
out
jmp
sbb
add
xor
aas
and
es
mov
pop
ds
lea
outs
lea
arpl
xchg
mov
mov
jmp
mov
out
jmp
sbb
pop
or
cmp
daa
sub
es
mov
inc
ds
lea
jae
es
jg
arpl
aas
imul
mov
cdq
mov
pushf
ds
lea
ds
and
jo
aad
out
push
mov
popf
cmps
cwde
mov
lea
imul
cdq
mov
pushf
ds
lea
test
dec
ret
int
ja
imul
ja
xchg
jbe
das
sub
movs
xchg
pusha
mov
mov
pop
imul
mov
mov
nop
cmps
pop
fistp
pop
lea
jge
jno
bound
mov
cmps
ins
outs
stos
mov
ins
adc
mov
(bad)
int
addr16
xchg
xchg
(bad)
fnstsw
mov
push
rcr
dec
scas
gs
or
mov
mov
into
punpcklbw
enter
scas
jo
aas
inc
xor
pop
jg
xor
arpl
cmps
xor
popf
mov
mov
ret
mov
lods
adc
cmps
out
xor
xor
call
(bad)
and
dec
and
adc
push
test
lea
call
sbb
mov
js
cli
or
das
mov
dec
scas
xchg
imul
xor
ret
ins
stos
daa
scas
aad
arpl
out
test
cmps
fcom
mov
gs
mov
mov
sbb
gs
or
and
cmps
dec
ret
and
stos
xor
bound
mov
nop
mov
mov
jl
push
fs
ins
(bad)
aad
out
mov
cmps
stos
inc
jmp
adc
movs
das
and
in
or
data16
mov
mov
(bad)
scas
lods
shl
sub
xor
shl
mov
push
dec
movs
lods
stos
test
movs
movs
mov
mov
stos
cmp
and
xchg
lods
bound
push
(bad)
xchg
outs
(bad)
stc
sbb
pop
adc
lods
mov
mov
xor
add
mov
cmps
aas
sar
imul
inc
ficom
outs
add
mov
lahf
fist
push
in
fst
dec
fcomp
daa
cmps
(bad)
xlat
mov
push
ds
aad
cmps
jae
arpl
xchg
stos
scas
int
mov
pop
lds
(bad)
dec
mov
mov
mov
xor
(bad)
xor
add
shr
and
push
push
dec
jg
lds
cmps
punpcklbw
fidivr
mov
outs
lea
scas
lahf
mov
mov
pop
xchg
and
cmps
pop
mov
(bad)
cwde
lahf
mov
addr16
mov
pop
cmps
clc
mov
out
out
and
mov
lds
mov
sar
call
pop
push
jae
xor
mov
pusha
xchg
test
xchg
add
xor
cmps
outs
sbb
aas
mov
lahf
sbb
pop
pop
push
mov
sbb
pop
stc
sahf
xsha1
cmps
dec
lods
mov
retf
pop
add
das
push
fwait
fwait
xchg
aas
test
loop
cmps
(bad)
pop
scas
jb
xchg
lods
push
mov
lahf
(bad)
dec
xchg
mov
leave
xchg
iret
xor
adc
push
xchg
outs
sub
adc
pop
mov
cmp
mov
jg
imul
dec
xlat
cs
scas
scas
mov
pop
dec
xchg
(bad)
adc
and
movs
lods
fdivp
lods
das
cmp
int
daa
push
out
jg
pusha
pop
call
dec
xchg
scas
jb
popf
(bad)
mov
sbb
scas
mov
xchg
fmul
mov
dec
cmps
dec
add
iret
vcvtsd2si
add
mov
and
mov
(bad)
in
stos
daa
and
lods
cmp
adc
shl
aad
cmps
pop
pop
xchg
out
imul
rol
pop
(bad)
aam
jnp
dec
dec
dec
setle
dec
mov
scas
inc
cs
adc
ret
mov
and
jg
neg
test
(bad)
scas
mov
dec
cs
stos
outs
cmc
stos
pop
idiv
cdq
lods
jne
lods
lods
icebp
mov
scas
movs
cmps
pop
jle
xchg
scas
adc
xchg
fmul
imul
loope
xchg
retf
addr16
inc
loopne
fimul
dec
and
mov
dec
mov
xchg
jnp
setg
mov
jae
xchg
pop
mov
dec
out
ja
inc
ror
ins
dec
outs
and
mov
jmp
adc
ret
les
(bad)
scas
inc
dec
xchg
das
outs
addps
adc
adc
and
gs
scas
fisub
scas
lea
out
mov
mov
into
aas
adc
ins
jmp
mov
mov
fisubr
mov
retf
mov
jle
mov
or
push
iret
nop
fld
aad
mov
adc
imul
(bad)
extrq
scas
and
stos
xchg
icebp
and
dec
out
es
xor
mov
scas
dec
sti
scas
out
(bad)
lahf
inc
pop
test
dec
push
xor
jmp
fidivr
xchg
aaa
ficomp
loop
sub
popa
lods
in
sub
mov
sahf
add
fimul
movs
adc
daa
test
into
addr16
das
xchg
sub
imul
dec
das
dec
test
dec
inc
push
cs
daa
cs
daa
mov
dec
int
adc
aaa
movs
pop
cmps
push
xchg
loop
push
mov
dec
nop
mov
(bad)
sbb
sub
mov
out
repz
sbb
adc
rcr
jl
sahf
mov
sbb
cmps
mov
inc
inc
into
scas
cs
(bad)
gs
inc
cmps
dec
and
xor
or
jnp
stos
mov
(bad)
in
addr16
mov
lods
jmp
repnz
dec
movs
push
dec
rcr
dec
ins
in
(bad)
mov
mov
mov
pop
xor
jmp
sar
ja
repnz
mov
lahf
xchg
cmp
push
mov
stos
inc
das
jmp
sbb
mov
das
mov
lea
stos
out
imul
mov
mov
jbe
cmps
pop
xchg
(bad)
sub
clc
mov
aad
adc
scas
(bad)
or
push
rcl
movs
mov
and
lock
cmp
sbb
and
imul
stos
lds
ret
stos
repnz
in
nop
loopne
xchg
push
mov
push
std
and
cmps
loopne
test
jle
mov
sub
in
xchg
iret
cmps
inc
xchg
push
stos
xchg
aam
test
shr
ficom
fisubr
stos
push
call
mov
adc
and
ss
jp
stos
push
shl
stos
cmp
repnz
ror
or
or
stos
stos
out
shl
xor
scas
and
adc
xchg
stos
mov
iret
add
iret
or
jae
stos
push
test
mov
cmp
dec
or
ret
sbb
mov
pop
stos
or
ins
stos
xchg
stos
std
loop
inc
cmps
test
movs
and
ins
mov
push
aad
out
fimul
(bad)
std
lods
js
out
fisubr
inc
or
iret
inc
mov
lods
and
adc
std
mov
stc
push
(bad)
scas
mov
lods
lods
xor
retf
cmp
and
push
xchg
cmps
imul
adc
mov
pop
std
and
mov
push
inc
std
inc
(bad)
xchg
cmps
inc
inc
std
adc
popa
stos
test
hlt
add
ror
fcmovnbe
push
lds
add
mov
xchg
les
push
jbe
scas
mov
ja
push
adc
mov
push
fldcw
sbb
mov
mov
es
sub
push
xchg
test
or
xchg
or
cmp
aam
daa
stc
out
lock
stos
dec
add
test
pop
cmp
sar
jns
bound
jp
cmps
scas
enter
mov
cli
lea
iret
cmps
push
imul
jae
cmps
xchg
enter
dec
and
in
js
sub
xchg
js
(bad)
hlt
ficom
mov
mov
test
push
iret
aas
lods
and
(bad)
stos
stos
mov
pop
mov
stos
jns
imul
mov
in
call
mov
inc
pop
cmps
xchg
push
test
xchg
lea
test
fdivrp
cmps
mov
rcr
cmp
xchg
stos
adc
stos
icebp
pandn
jge
fs
(bad)
scas
stos
jb
neg
xchg
sub
into
xor
mov
push
std
mov
mov
out
cmps
xor
daa
fnstsw
out
mov
lea
(bad)
jmp
(bad)
dec
sar
aas
and
push
dec
mov
lahf
inc
cmp
or
mov
scas
sub
dec
sub
inc
stos
scas
push
aad
inc
imul
jne
cli
lds
arpl
xor
out
or
xlat
or
adc
iret
mov
(bad)
sti
daa
cmp
push
sbb
adc
sbb
jge
scas
test
push
aad
scas
ret
es
daa
lahf
cs
or
cmp
xor
pop
in
test
add
ret
sbb
retf
dec
push
pop
and
push
(bad)
sbb
scas
cmc
mov
adc
and
popa
push
xchg
stos
jae
or
das
adc
dec
jg
adc
dec
scas
add
lock
or
stos
cmp
pop
cmp
mov
cld
push
jo
(bad)
mov
push
sub
aaa
bound
stos
cmp
in
dec
push
fnstenv
aas
stos
pop
adc
push
addr16
and
push
push
xor
lods
mov
nop
gs
sub
sub
stos
loop
mov
mov
ins
imul
scas
shl
pushf
cmps
mov
imul
nop
imul
imul
je
mov
push
mov
outs
mov
dec
mov
inc
scas
adc
fsubr
cmps
pop
addr16
ds
lea
mov
push
push
retf
mov
mov
xchg
mov
sub
stos
movs
push
outs
jle
stos
sbb
cmps
movs
repnz
aam
stos
outs
mov
xchg
jnp
add
iret
fimul
movs
dec
test
das
xchg
stos
adc
lock
es
cmps
sbb
psadbw
ja
ja
inc
push
test
inc
lods
dec
mov
cmps
dec
adc
add
stos
adc
aam
mov
test
xchg
pop
fwait
cmps
mov
stos
xlat
mov
movs
rcr
xor
shl
das
cmp
pop
stos
push
int
cmp
test
dec
lods
xchg
iret
aaa
jmp
cmps
loope
cmps
stos
mov
fiadd
push
xchg
sbb
inc
out
push
test
xchg
jle
stos
out
pop
jnp
lods
jp
lock
mov
pop
mov
in
sbb
xchg
mov
lods
cmps
test
imul
fsubr
mov
test
loope
mov
outs
cmp
mov
aas
cmps
stos
fwait
test
dec
aam
cdq
in
retf
sub
scas
dec
dec
stos
loope
sbb
mov
stos
iret
enter
aad
mov
mov
adc
mov
xchg
stos
rep
pop
pop
add
ds
or
mov
push
sbb
pop
sbb
pushf
jl
hlt
stos
push
add
jg
add
mov
xchg
clc
sbb
stos
or
sbb
cmp
cmp
jbe
inc
dec
sub
fsub
sub
cmp
scas
movs
mov
mov
mov
nop
sbb
scas
mov
lods
mov
xlat
lods
aas
sub
jnp
in
mov
enter
mov
xchg
sbb
cmps
mov
cmps
mov
nop
das
stos
dec
mov
sub
mov
mov
call
mov
mov
cmp
xchg
pop
mov
push
xchg
mov
inc
xchg
stos
cmp
jl
scas
(bad)
xor
add
fwait
cmps
popf
xchg
mov
sahf
mov
stos
rcr
mov
pusha
push
outs
jne
dec
dec
sub
mov
mov
mov
pop
and
(bad)
test
inc
rcr
popf
mov
add
push
inc
mov
push
cmps
movs
mov
xchg
test
push
movs
in
stos
mov
cmps
data16
lahf
adc
shl
cmps
mov
jl
mov
push
imul
mov
movs
and
jge
mov
fisubr
cmps
iret
scas
fadd
cmps
cld
push
fwait
cwde
push
mov
mov
xchg
or
jnp
dec
cmps
pop
mov
ss
adc
in
mov
cmc
ds
retf
imul
fdivr
push
and
mov
mov
push
dec
das
cmps
dec
mov
and
mov
lods
xchg
xchg
xchg
mov
fiadd
ins
sbb
pop
stos
xor
rcl
sbb
adc
jle
outs
or
outs
xchg
cmp
(bad)
ds
scas
fcomp
pop
mov
xor
push
imul
test
shr
popf
repz
cmp
sbb
sbb
shl
jl
clc
cli
test
scas
aam
daa
sar
call
iret
sub
leave
(bad)
mov
push
xchg
xchg
and
cmps
and
xchg
stos
out
repnz
or
add
sbb
stos
or
pop
aad
stos
sub
mov
mov
mov
call
sub
push
jnp
mov
mov
cmps
mov
mov
stos
pop
(bad)
out
loop
movs
mov
movs
mov
mov
pusha
mov
movs
xchg
fwait
sbb
cmc
stos
cmp
dec
es
lods
imul
sub
neg
movs
and
or
cmps
push
ret
mov
ror
dec
test
cmps
or
mov
je
adc
or
mov
(bad)
std
sub
test
sub
pop
push
sbb
stos
pop
xor
jnp
fst
xchg
mov
cmps
mov
inc
and
sahf
xor
imul
xor
lea
aad
es
test
test
movs
std
popa
stos
push
jmp
mov
xchg
sbb
mov
mov
icebp
test
stos
test
and
enter
ds
dec
cmps
stos
aaa
repnz
inc
pop
(bad)
stos
inc
mov
sbb
stos
cmps
out
in
repz
stos
(bad)
fwait
dec
out
and
adc
retf
int
das
inc
div
pop
inc
mov
stos
movs
adc
out
scas
mov
mov
adc
or
push
or
arpl
cmps
out
inc
pop
xchg
stos
xor
test
ja
dec
iret
jnp
inc
mov
push
cmps
mov
loopne
jo
popf
sbb
jle
mov
scas
stos
cld
jnp
psraw
or
rcl
pop
test
push
push
ss
sti
mov
ror
cmps
and
enter
sbb
pop
mov
xchg
loop
inc
stos
pop
pop
dec
ss
sbb
iret
jbe
adc
test
lahf
add
lock
xchg
cmp
dec
imul
cmc
dec
lahf
stos
test
retf
mov
pop
(bad)
add
ja
mov
mov
mov
ss
sub
int3
and
mov
cmp
xor
mov
sbb
(bad)
pusha
lahf
mov
fiadd
inc
fstp
arpl
push
mov
aaa
sbb
cmp
aaa
rol
ja
sbb
lods
mov
mov
cmp
stos
adc
pop
sbb
cmps
xchg
mov
xor
push
xchg
(bad)
mov
stos
test
lods
fcmovnbe
mov
mov
stos
pop
pop
fwait
(bad)
popa
stos
test
sbb
cmps
rol
dec
cmp
cli
jg
aam
jb
fistp
push
pop
jmp
pop
lea
cmp
fsubr
outs
imul
mov
rcr
jae
add
mov
jnp
mov
mov
cld
loope
retf
clc
cmps
outs
scas
shl
and
dec
push
xchg
movs
test
and
movs
stos
mov
cmp
inc
jge
jle
es
hlt
pop
ret
xor
stos
mov
pop
cmps
shl
imul
xchg
mov
cmps
xchg
jmp
test
cmps
loopne
xchg
std
das
stos
pop
loope
stos
sbb
test
jno
fld
test
inc
popa
cmp
mov
inc
sub
shl
stos
dec
ja
jne
pop
pop
push
jmp
lea
test
jne
outs
pop
repnz
cmp
iret
cmc
jmp
xchg
jbe
cmps
inc
cli
mov
test
stos
stos
fdiv
cld
jle
rep
stos
xchg
inc
pop
iret
sub
icebp
pop
cmp
test
sbb
ins
inc
inc
push
test
sub
fcmovne
repnz
inc
xchg
pop
inc
mov
inc
inc
mov
xor
add
xor
cmp
jmp
arpl
(bad)
js
pop
sbb
cli
adc
rcl
lods
mov
cwde
xchg
in
pop
sub
stos
shl
cli
xor
mov
or
push
and
cmps
mov
lods
loope
movs
xchg
lahf
mov
push
stc
stos
xchg
jae
aam
cwde
ja
jle
inc
scas
adc
rdmsr
daa
xchg
stos
xor
sbb
mov
dec
call
pop
movs
sub
jg
fwait
adc
sub
outs
push
aad
repz
addr16
sti
sbb
(bad)
dec
mov
int3
aaa
jmp
pop
xchg
aas
loop
or
push
mov
stos
popf
movs
aad
repz
dec
psadbw
cmp
repnz
rcr
stos
push
pop
jmp
ret
imul
ins
mov
ret
xchg
or
or
movs
imul
sbb
(bad)
out
cmp
mov
mov
cmps
sbb
test
mov
out
out
xor
mov
test
iret
jg
out
(bad)
fcomp
rcl
sub
mov
inc
cmc
test
xchg
push
stos
and
dec
dec
dec
out
neg
iret
neg
fcomip
fcmovne
(bad)
aad
mov
aam
sub
test
adc
test
xor
xchg
push
das
inc
sub
stos
repnz
mov
add
lea
es
jl
jns
jbe
jae
es
mov
inc
ds
lea
pop
pop
es
mov
sub
daa
lea
and
cmp
xor
sub
cmps
or
or
pop
or
mov
mov
ja
dec
movs
ja
jne
jnp
mov
pop
mov
stos
out
cmps
sbb
cmps
(bad)
scas
test
test
jle
scas
xchg
(bad)
dec
cmps
scas
lahf
sub
test
cmp
stos
mov
stos
mov
jle
mov
shr
mov
mov
xlat
cmp
cmp
stos
outs
call
in
adc
adc
jle
add
daa
stos
test
stos
inc
dec
into
lea
stos
fs
add
sbb
jl
mov
xchg
stos
cmp
cmps
pop
sbb
dec
mov
dec
xchg
shl
(bad)
sahf
scas
fdiv
push
fwait
mov
mov
or
jne
xchg
clc
or
stos
sub
inc
xchg
popa
or
or
push
xor
jae
les
popa
or
cmp
cli
add
fmul
fcom
stos
(bad)
mov
jns
iret
or
jp
pusha
rcl
sbb
xchg
pop
nop
stos
push
sar
lahf
xchg
mov
mov
xchg
cmp
into
xchg
(bad)
xor
add
mov
cmps
xchg
adc
mov
xor
xor
jle
mov
inc
inc
(bad)
out
cmp
inc
xchg
stos
adc
pop
cld
dec
out
push
ret
stos
mov
call
test
mov
je
dec
imul
cmp
jecxz
pop
jge
and
out
sbb
fcom
pop
loopne
movs
sahf
xor
push
out
or
adc
xchg
mov
mov
std
push
push
mov
push
and
out
cmp
cmp
push
dec
imul
es
or
imul
mov
adc
jl
std
or
ja
mov
mul
cld
xchg
mov
or
pushf
dec
test
test
arpl
lea
int
sub
ds
xor
addr16
jl
(bad)
ins
cmps
pusha
in
fild
push
xchg
or
repz
nop
jecxz
sub
lods
movs
mov
scas
and
scas
jge
lods
xchg
scas
push
pop
pop
sbb
leave
ret
jecxz
mov
cmp
mov
sub
push
pop
(bad)
push
cli
push
mov
pop
dec
mov
and
out
pop
fidivr
or
jo
ss
mov
mov
sub
movs
fsub
push
mov
test
mov
xchg
mov
movs
test
(bad)
adc
les
cmps
(bad)
ja
and
dec
loop
dec
xor
arpl
jge
scas
and
outs
popa
push
enter
cmps
cli
repnz
jmp
popa
xor
fwait
adc
std
pusha
test
push
push
lahf
jg
inc
mov
dec
pop
jnp
mov
jl
inc
pop
fs
mov
pusha
(bad)
fnstcw
nop
or
nop
add
lahf
ret
push
dec
nop
test
adc
pop
pop
nop
and
xor
imul
cmp
adc
clc
fbld
jecxz
mov
jg
inc
xor
push
movs
inc
and
push
fwait
mov
ins
pop
mov
adc
pop
imul
imul
pop
mov
cld
adc
(bad)
leave
(bad)
int
jno
aas
add
int3
inc
lods
dec
jnp
pop
dec
dec
bound
xchg
mov
imul
inc
dec
push
cdq
jg
jp
ds
neg
mov
jg
addr16
aas
adc
pop
dec
dec
inc
mov
sbb
jo
imul
imul
rol
pop
repz
arpl
push
inc
or
jge
pmaxsw
pop
retf
mov
inc
dec
xor
add
push
ins
cmp
addr16
out
retf
ss
outs
pop
movs
push
inc
dec
pop
pop
jnp
jge
aas
push
and
and
dec
adc
jnp
jge
push
sahf
out
pop
into
mov
pusha
imul
push
push
sub
jns
ins
test
ret
dec
pop
jg
pop
xor
out
mov
test
jge
out
jp
fild
sub
add
sub
popa
xchg
push
dec
(bad)
or
(bad)
sbb
jl
popfw
mov
(bad)
or
jg
mov
add
or
jnp
dec
dec
mov
mov
jmp
ffree
cdq
scas
fiadd
dec
lahf
cli
test
repz
(bad)
jl
inc
test
clc
xchg
scas
inc
xor
into
out
fisub
fwait
inc
pop
xchg
sub
into
adc
imul
pop
dec
iret
repz
lds
test
mov
pop
pop
mov
(bad)
ins
out
cmp
mov
inc
movs
dec
daa
inc
fwait
jmp
ds
arpl
aaa
pop
(bad)
push
add
dec
lea
(bad)
std
data16
or
addr16
mov
sub
xchg
xchg
sub
jle
ins
scas
jg
mov
mov
or
test
jle
xlat
xchg
das
add
mov
cmp
jg
inc
pop
imul
inc
jbe
mov
and
adc
shr
es
xor
hlt
xchg
ds
aas
loop
push
scas
pusha
pop
dec
aaa
pushf
jbe
das
mov
push
ds
bound
aas
mov
inc
ins
out
fisubr
pop
js
pop
or
call
inc
(bad)
faddp
pop
(bad)
jl
pop
pop
sbb
mov
add
pop
or
movs
xor
mov
dec
aaa
fs
enter
out
push
jge
cs
xchg
pop
sbb
stos
inc
dec
push
loopne
aas
scas
fisub
mov
jl
adc
outs
adc
jae
mov
bound
out
(bad)
imul
cmp
or
movs
jp
test
pop
popf
cmps
sbb
jg
ins
inc
pop
aaa
mov
dec
cmps
retf
movs
jge
lahf
ficomp
or
sbb
(bad)
pop
pop
imul
or
add
popf
inc
dec
imul
shl
and
(bad)
into
mov
ins
mov
stos
xchg
pop
mov
mov
lds
dec
and
pop
ja
sub
push
(bad)
aas
cmp
clc
push
int3
xor
lea
bound
add
mov
mov
cmps
push
mov
ins
pusha
leave
and
clc
xor
ins
pop
pop
push
popa
mov
and
fdiv
movs
mov
cmps
stos
mov
mov
stos
inc
pop
lea
nop
pop
pop
mov
add
xchg
loope
sub
mov
jns
cmps
fist
cmps
push
shr
mov
scas
ins
nop
mov
cmp
movs
scas
pop
and
mov
mov
mov
inc
xchg
iret
sub
mov
dec
cmps
scas
and
and
bound
js
cmps
mov
loop
mov
xchg
lods
ins
xchg
push
jno
addr16
or
push
sub
jge
lods
out
jo
xchg
mov
ja
and
adc
lods
out
movs
mov
call
mov
aad
bound
and
xor
jl
cmps
lea
mov
cmps
jno
daa
mov
cmps
xchg
movs
arpl
xchg
(bad)
cmps
xchg
out
cmp
mov
call
jg
fwait
jge
mov
or
jbe
cmp
out
ds
lea
mov
add
jl
lahf
test
cmp
cmps
in
scas
dec
sub
sub
addr16
mov
arpl
and
das
xchg
scas
ds
mov
mov
nop
mov
out
lods
sub
cli
mov
mov
addr16
jmp
pop
mov
daa
ds
lea
pop
pop
es
mov
outs
ds
ja
jnp
arpl
lahf
cmp
mov
es
mov
lea
es
mov
lahf
gs
lds
mov
sub
and
push
or
shr
pop
mov
jns
(bad)
mov
cmps
dec
sbb
sbb
retf
sub
sbb
in
je
das
aas
jnp
movs
jle
stos
cmps
hlt
jno
mulps
inc
ins
popf
out
sti
div
scas
out
aad
sahf
push
xchg
mov
mov
pop
int3
mov
idiv
mov
xchg
cwde
mov
mov
mov
push
ds
(bad)
mov
mov
pop
lea
pop
mov
push
ds
shl
iret
lahf
(bad)
mov
movs
or
iret
js
movs
push
into
repnz
push
sub
push
jne
dec
mov
cdq
ins
mov
cmp
nop
or
stos
lods
dec
push
pop
loopne
xchg
mov
adc
sahf
in
cmps
fst
dec
lahf
(bad)
call
mov
fisub
jno
xchg
std
stos
jmp
mov
inc
dec
cmc
mov
outs
mov
out
daa
call
arpl
mov
addr16
mov
and
mov
mov
stos
mov
adc
es
mov
movs
mov
mov
addr16
(bad)
lea
shl
dec
bsr
ds
lea
jae
(bad)
xor
inc
fist
jb
dec
mov
ins
or
(bad)
popf
xchg
xor
mov
cmps
std
ins
mov
cmps
scas
sar
xchg
push
in
enter
mov
pop
mov
cmps
pusha
mov
outs
ds
lea
pop
and
cmp
push
mov
addr16
hlt
(bad)
shr
(bad)
and
dec
addr16
and
es
enter
stos
mov
popf
imul
mov
addr16
les
imul
mov
int3
imul
es
cld
mov
imul
lea
js
es
mov
in
add
test
stos
mov
xchg
(bad)
mov
sbb
fucomip
lods
out
xor
mov
idiv
and
xchg
fcmovu
xor
jp
cmp
mov
pop
imul
cmps
ins
adc
in
mov
cmps
and
dec
xor
scas
sub
jg
jnp
jae
jg
jo
push
xor
scas
adc
lds
aaa
std
mov
shld
cmp
mov
mov
retf
sub
cmp
lods
cmps
test
push
cmp
jae
pop
or
mov
pop
pop
pop
imul
fdiv
cmps
mov
bound
rcl
lea
imul
arpl
push
mov
cmps
mov
cmp
lods
(bad)
mov
mov
cmps
inc
mov
mov
mov
movs
stos
dec
cmp
mov
adc
mov
ins
fwait
test
shl
push
in
sti
popa
fisubr
pop
test
add
xor
into
(bad)
jb
mov
mov
pusha
mov
ret
sub
pop
cmp
cmp
stos
and
adc
imul
sub
stc
or
iret
mov
mov
push
out
inc
call
dec
in
adc
adc
inc
jp
xchg
and
ins
psllw
lock
xor
ret
push
add
enter
fadd
mov
mov
add
dec
ret
or
fcmovnbe
(bad)
int
gs
cmp
push
loop
into
mov
retf
or
imul
in
into
bound
retf
xchg
xchg
test
pop
sbb
leave
jb
jmp
cmp
or
push
scas
(bad)
or
shl
jb
aad
dec
add
mov
or
inc
arpl
in
cmp
mov
sub
loop
sub
xchg
movs
test
jne
into
xchg
out
pusha
and
inc
mov
jmp
or
ja
mov
std
(bad)
(bad)
mov
retf
jmp
or
inc
inc
add
ret
setl
leave
stc
cmp
clc
(bad)
fsubrp
ror
loopne
dec
sub
fiadd
(bad)
jmp
push
cmp
imul
fnsave
into
adc
mov
(bad)
(bad)
mov
xchg
sahf
dec
and
fld
jp
in
scas
push
push
jl
mov
ror
and
rol
addr16
lds
xchg
pop
test
push
add
retf
push
into
imul
push
test
pop
sub
ds
xchg
into
aam
mov
dec
mov
lsl
sub
into
shl
xchg
repnz
ja
cmps
mov
(bad)
retf
sub
lods
(bad)
call
test
ss
cwde
into
repz
shl
xchg
or
adc
sub
int3
into
inc
sbb
imul
mov
sbb
loopne
mul
jbe
into
or
lock
push
rol
call
daa
jne
ds
into
adc
lea
dec
shr
push
mov
loopne
out
cmps
icebp
or
movs
xlat
mov
mov
or
mov
mov
push
stos
outs
cwde
cmp
mov
aaa
pushw
mov
ss
mov
xor
mov
mov
jg
sbb
push
stos
outs
ret
das
jle
mov
sbb
mov
or
stos
mov
in
lods
or
mov
popf
mov
push
push
pushf
in
mov
push
fwait
in
mov
push
sub
mov
jno
mov
push
cwde
movs
mov
push
xchg
out
test
xchg
push
xchg
add
stos
cmps
cs
fbstp
jg
mov
dec
pop
mov
cmps
cmps
mov
pop
mov
mov
mov
push
ins
mov
or
cmps
stc
jnp
inc
push
add
ss
mov
movs
mov
sub
xchg
mov
lods
mov
sub
mov
daa
or
ins
mov
and
add
cmp
pop
dec
outs
cmps
mov
cwde
jl
out
mov
stos
imul
scas
pop
dec
jne
sbb
pop
dec
jae
(bad)
sub
lods
rol
gs
mov
retf
mov
arpl
or
(bad)
fldcw
shl
jae
mov
mov
mov
add
or
jae
aas
and
sbb
sbb
ins
fisub
lahf
pop
inc
fs
ret
test
sahf
inc
stos
bound
mov
ins
pushf
sub
call
fisubr
scas
mov
and
sub
adc
xor
xor
aam
cmp
cmp
outs
add
jnp
ins
jg
inc
add
mov
xchg
dec
mov
jmp
std
mov
cmp
movs
jae
addr16
mov
pop
sbb
bound
pop
test
pop
lea
jbe
mov
es
or
cmp
imul
sub
sbb
daa
retf
and
dec
ficom
das
mov
int
scas
adc
outs
into
imul
mov
stc
push
add
pushf
pushf
lea
jmp
mov
(bad)
iret
add
jae
out
mov
scas
(bad)
mov
in
enter
retf
adc
sbb
in
jae
mov
jns
mov
(bad)
jae
pop
pushf
jmp
xchg
icebp
test
sbb
adc
mov
mov
cwde
in
bound
cmps
not
adc
jns
jae
xlat
jl
push
fcmovnb
movs
sbb
sub
stos
ret
(bad)
nop
daa
push
dec
jne
or
inc
jmp
loope
ss
push
mov
sbb
inc
nop
adc
pop
mov
xchg
icebp
test
sub
xchg
jp
xchg
cmp
and
or
jmp
aad
movs
mov
xchg
shr
cmp
stos
pop
push
in
mov
sbb
pop
and
cdq
fisub
test
(bad)
sahf
pop
pop
out
inc
inc
mov
push
dec
xchg
mov
sbb
ja
sbb
mov
mov
movs
or
popa
retf
in
pop
in
adc
push
push
cmp
cmps
call
inc
and
fld
not
mov
pushf
jmp
cmc
push
test
and
mov
add
pusha
pusha
lea
jmp
push
lea
je
jmp
push
cmp
in
popf
inc
int
pop
shl
lods
imul
aaa
ds
sub
or
adc
jmp
(bad)
adc
fs
dec
cs
in
inc
cmp
add
cmp
fadd
addr16
jecxz
movs
xor
jle
pop
ficomp
jmp
jmp
enter
sub
outs
je
cmc
add
ret
sti
jno
or
inc
aam
and
xor
add
dec
nop
fidiv
cmp
lea
push
cmp
shl
bsf
movzx
mov
dec
add
bts
mov
sbb
stc
xor
sub
mov
clc
sbb
and
xor
call
push
lea
ja
push
pusha
inc
lea
pusha
jmp
jge
push
sbb
cmp
in
push
sub
in
in
sbb
fldenv
cmp
aad
push
or
mov
cmp
(bad)
push
stc
ror
in
(bad)
(bad)
out
jg
icebp
xor
loopne
sbb
out
push
mov
adc
jl
popf
nop
xor
dec
js
sub
push
lods
jmp
paddb
addr16
(bad)
(bad)
mov
lea
jl
inc
dec
sub
inc
sar
pop
dec
add
mov
jmp
mov
push
lea
jne
push
push
mov
jmp
pusha
bt
call
sar
cmc
sbb
(bad)
dec
cwde
int
sub
jne
dec
outs
mov
push
les
and
xor
xchg
dec
push
fs
push
pushf
push
sti
cli
inc
mov
lock
dec
mov
jp
and
cdq
popa
add
test
pop
xchg
mov
cmp
loope
aaa
scas
sbb
(bad)
pushf
ret
addr16
adc
jb
lahf
cmp
movs
out
mov
dec
mov
mov
shr
(bad)
push
movs
fisub
add
lock
fsubp
call
in
popf
das
lock
fwait
mov
lods
mov
loop
pusha
xchg
or
repnz
fiadd
add
mov
pushf
push
cmc
out
add
cmp
mov
or
and
add
xchg
jmp
sbb
(bad)
test
out
test
mov
lods
fwait
mov
xor
xlat
lea
jne
bswap
mov
push
cmc
jmp
call
(bad)
or
dec
inc
and
xchg
push
(bad)
mov
cmp
mov
or
stos
jmp
(bad)
mov
adc
in
add
or
add
sbb
mov
jmp
retf
cs
scas
cli
dec
pop
dec
data16
int3
das
jb
or
jmp
mov
out
cmps
dec
xor
push
xor
or
jl
repz
int3
fisttp
aad
mov
mov
nop
add
or
jb
pop
test
aas
or
mov
fisubr
sbb
(bad)
dec
mov
inc
mov
xor
mov
fidiv
into
pop
mov
pop
dec
mov
fldcw
scas
inc
ds
or
pop
pop
pop
jecxz
call
adc
ja
mov
mov
jecxz
cwde
pusha
xchg
fxch
int3
call
jl
nop
mov
in
xor
xor
fst
jle
and
add
push
adc
cld
dec
bound
ret
test
pop
inc
dec
mov
ja
xor
das
pusha
push
or
in
retf
cmp
cmp
inc
stos
ins
ret
dec
mov
sbb
xchg
and
mov
aaa
push
test
pusha
xor
xchg
into
popf
lds
pop
push
push
jecxz
push
ins
test
xchg
dec
pop
lahf
inc
pop
push
out
enter
lods
mov
test
sbb
mov
mov
dec
dec
mov
es
cmps
xor
xchg
sub
push
mov
jecxz
pop
ficom
fucomp
repnz
cmp
addr16
mov
cmp
jae
jno
mov
cwde
ds
jecxz
or
outs
and
mov
xlat
in
and
dec
cld
retf
fst
out
(bad)
jmp
ret
mov
bt
cmc
test
cmp
cmp
pusha
pushf
pusha
pushf
lea
jne
btc
xor
movsx
xor
mov
sbb
clc
cmp
jmp
jmp
add
jmp
icebp
pop
inc
mov
in
stc
adc
push
inc
adc
icebp
jmp
jo
test
mov
cmp
pop
mov
repz
or
or
adc
mov
jno
mov
sbb
pop
xchg
(bad)
and
test
inc
and
sahf
xchg
fcmovnu
fld
lahf
adc
add
das
inc
sbb
nop
scas
retf
and
mov
inc
in
push
pop
ins
into
xor
ret
xchg
jne
or
fcomp
lods
xchg
push
sbb
rol
sbb
xor
jne
mov
in
or
xchg
mov
(bad)
loope
adc
fldenv
imul
push
pop
lea
inc
xchg
cld
div
ins
inc
mov
push
push
adc
mov
popf
loope
jl
cmp
inc
and
or
add
gs
ins
inc
js
arpl
gs
add
(bad)
mov
cmps
jmp
repz
lds
fcmovbe
cmp
pusha
daa
hlt
ins
mov
jg
sub
addr16
js
loope
iret
int3
xor
imul
ins
pop
nop
or
popa
push
(bad)
out
jae
scas
pop
xor
mov
fwait
ss
paddusw
push
sub
fs
add
fcomp
das
mov
inc
push
xor
xchg
ret
jg
call
or
sbb
add
clc
push
sbb
ins
sub
jne
movs
test
pop
mov
hlt
or
arpl
add
fild
fsub
cld
inc
mov
aas
(bad)
xchg
test
xor
pop
xchg
or
lds
or
mov
pop
jl
or
xchg
mov
fwait
call
jns
pop
test
and
xchg
repnz
jae
xchg
das
xor
loop
scas
inc
cmp
movs
xabort
push
mov
lods
call
inc
cmp
mov
into
xchg
ja
sbb
add
repz
jnp
sbb
or
inc
xchg
int3
pop
addr16
add
bound
rol
aaa
xchg
call
sysret
push
inc
fst
shl
pop
mov
enter
sar
xchg
xchg
push
xor
xchg
retf
int
popf
es
std
xchg
sub
in
repz
outs
shl
xor
js
rol
sub
sbb
addr16
imul
mov
mov
lds
mov
shr
mov
cmps
mov
inc
xchg
dec
pop
scas
mov
fst
cmps
pop
jp
cmp
xchg
xchg
repnz
stos
dec
ret
cld
push
jmp
hlt
mov
pop
fwait
jmp
adc
push
inc
jo
push
mov
fstp
mov
clc
jb
add
stos
cdq
pushf
in
and
fild
aas
mov
push
scas
imul
push
push
jae
push
pop
and
or
sar
mov
dec
test
push
imul
stos
jecxz
loop
adc
xor
cli
mov
or
rcr
mov
cmps
retf
xchg
xchg
call
push
dec
movs
ins
pop
mov
loope
inc
jl
aam
sub
xor
popa
iret
push
daa
and
jae
or
dec
sahf
sbb
mov
leave
mov
lahf
repz
sbb
xor
add
sbb
jmp
mov
mov
jmp
mov
(bad)
ficomp
or
cmp
fstp
aas
mov
lds
lea
sub
test
pop
push
js
push
dec
cld
adc
test
mov
jo
or
out
add
add
cmp
mov
xor
sub
add
sub
jmp
es
adc
and
adc
test
out
cmps
aam
add
or
lods
dec
out
fdivr
or
push
mov
jle
add
xor
push
adc
add
sub
push
js
adc
cmp
or
dec
jg
inc
out
push
jmp
mov
jb
mov
cmp
pop
xchg
add
push
or
lods
ret
jl
mov
cmps
cwde
(bad)
dec
jbe
pop
dec
add
or
push
pop
cmp
mov
jns
in
sub
in
inc
and
sbb
pusha
jp
jl
jne
adc
es
mov
stos
(bad)
dec
mov
call
leave
fstp
test
sahf
gs
jp
je
fdiv
int3
shr
pop
add
mov
cmc
adc
mov
mov
push
sbb
inc
jg
xor
add
add
sbb
ja
push
sub
mov
inc
cld
(bad)
push
inc
out
mov
or
mov
std
dec
jge
imul
inc
cdq
xor
lock
pop
movs
data16
daa
adc
dec
adc
(bad)
in
gs
cmp
pop
sbb
sub
mov
xor
stos
xchg
leave
inc
mov
mov
xor
add
xor
js
lock
inc
out
push
retf
or
lahf
mov
in
xchg
mov
xchg
lahf
test
outs
sar
xchg
int
movs
push
lahf
pusha
xchg
jmp
in
out
fnsave
imul
add
scas
xor
jnp
xchg
add
add
mov
cmp
jnp
push
fs
ror
(bad)
out
xlat
push
outs
out
xchg
mov
clc
lock
or
call
cmps
pop
pop
xchg
imul
mov
mov
adc
push
stos
or
sub
mov
jl
pop
xor
fst
jl
mov
mov
xchg
sbb
loopne
lods
jmp
stos
scas
adc
stc
mov
aam
xchg
in
fmul
movs
push
call
(bad)
lahf
add
xchg
pop
cmps
pop
adc
out
add
call
push
into
push
sbb
les
nop
mov
sar
inc
cmp
test
push
adc
daa
popa
jae
mov
jl
cld
mov
dec
pop
dec
jge
lods
pop
dec
ins
retf
jecxz
outs
outs
(bad)
inc
dec
shl
enter
scas
je
rcl
xchg
pop
jnp
sahf
fdiv
mov
add
adc
inc
stos
pop
xlat
inc
xor
loopne
pop
loope
jg
(bad)
sbb
ret
dec
pop
pop
jg
and
outs
xchg
xor
jmp
bound
in
pop
mov
push
cmp
ret
and
and
sbb
dec
cmp
mov
outs
adc
adc
icebp
add
rcl
inc
push
xchg
cmp
imul
fs
in
inc
test
lock
mov
cmp
lods
or
sar
pop
add
push
cmp
add
ret
aam
shl
add
push
inc
shr
ins
mov
or
popf
add
call
movs
ror
nop
push
xchg
out
jmp
xchg
out
enter
cmps
mov
es
adc
ins
mov
inc
jmp
daa
inc
ja
aas
cdq
popa
inc
mov
and
out
cmp
loop
test
jne
ja
mov
adc
inc
adc
push
lds
hlt
out
pextrw
push
aaa
outs
test
(bad)
push
jo
sbb
gs
jnp
dec
arpl
jo
push
add
cmps
sub
call
and
movs
and
daa
scas
loope
js
or
popa
in
sbb
(bad)
inc
pushf
adc
add
aaa
fst
or
dec
iret
lods
fwait
std
repz
cmp
sbb
mov
btr
mov
add
inc
mov
cmc
pushf
sub
pusha
jmp
lea
je
stc
cmp
cmc
sub
pusha
cmp
mov
lea
ja
bt
pushf
imul
call
or
or
(bad)
aad
mov
rcl
or
pop
mov
cmc
enter
sub
jg
(bad)
bound
jmp
or
call
pop
mov
push
loope
icebp
xor
rcr
jb
push
jo
aas
sub
and
add
(bad)
and
lods
repnz
push
std
enter
sub
(bad)
sar
xchg
dec
jne
xchg
loop
mov
push
imul
dec
mov
inc
mov
lea
call
jbe
pusha
lea
jae
bt
xor
call
lods
push
sti
or
ins
push
xchg
aas
adc
out
dec
sbb
dec
push
xchg
sbb
push
or
movs
ret
stos
dec
mov
int
cli
data16
mov
pop
mov
jecxz
cmc
call
std
mov
fist
idiv
pop
dec
movs
push
add
inc
gs
outs
fs
gs
imul
add
movs
jmp
add
stc
repnz
jmp
inc
inc
call
loopne
sub
inc
addr16
push
movs
adc
lock
ins
inc
cli
in
add
xlat
sti
push
dec
inc
xchg
add
mov
jl
adc
adc
lock
mov
std
cmp
jae
in
ins
or
xchg
add
pop
inc
jae
in
in
fst
jae
in
ins
xor
xchg
add
sbb
jae
in
push
fs
inc
jae
in
loop
push
xchg
add
mov
retf
int3
test
add
shl
dec
mov
lods
sbb
lock
data16
inc
imul
jecxz
add
out
inc
push
lock
imul
pop
inc
jae
in
loop
aam
add
add
cmp
in
inc
mov
test
adc
jl
inc
jae
in
popa
jnp
mov
push
inc
ins
lock
outs
add
(bad)
arpl
jl
aam
add
push
inc
je
in
outs
sub
add
push
add
movs
sar
mov
cwde
cmp
mov
dec
inc
push
lock
cmp
rcr
je
ret
or
pop
lock
xchg
add
push
inc
outs
lock
cmp
jg
add
mov
xchg
cmps
add
xchg
add
lock
loopne
mov
and
(bad)
push
sub
je
fst
ret
xchg
add
push
in
push
lock
mov
(bad)
shl
in
arpl
xchg
add
sbb
push
or
xchg
add
sbb
lock
fs
mov
push
sar
pop
mov
push
add
gs
add
sbb
aam
sub
add
xchg
rol
arpl
sbb
in
pusha
lock
push
out
leave
mov
pop
add
lock
jmp
add
inc
inc
lock
ins
clc
dec
imul
hlt
adc
outs
lock
sti
mov
sbb
jae
in
jmp
inc
fs
pop
lock
jecxz
pushf
xchg
add
sbb
lock
addr16
push
inc
jae
in
loopne
jg
add
mov
arpl
fs
(bad)
aaa
mov
pop
shl
dec
sub
sbb
jae
in
jmp
jnp
add
push
inc
jo
in
aam
pusha
mov
push
xor
clc
scas
inc
mov
shl
test
jbe
xchg
add
mov
or
jl
imul
xchg
dec
imul
pop
inc
daa
xchg
xchg
or
cmp
je
add
jecxz
pop
ret
mov
test
cdq
mov
push
cmp
les
add
sub
lea
mov
jbe
mov
jae
cs
in
lods
sbb
fwait
mov
or
push
movzx
sub
ror
add
neg
lea
bt
bt
push
sub
push
push
pop
cmp
clc
test
pushf
cmp
mov
mov
call
push
stos
ror
sbb
xchg
clc
in
test
add
(bad)
clc
cs
scas
aad
ret
retf
xor
ss
mov
adc
xchg
mov
mov
jmp
shl
out
fs
push
push
lahf
nop
fs
rcl
mov
xchg
push
(bad)
xor
mov
dec
repnz
fdivr
(bad)
jge
sar
(bad)
push
push
fld
push
adc
xchg
into
xchg
xchg
inc
enter
(bad)
enter
xor
push
pop
movs
mov
test
mov
lods
or
and
aaa
sub
or
fdiv
sbb
ins
pushf
mov
popf
ret
xchg
loope
or
sti
mov
dec
or
jno
dec
pop
mov
add
jge
mov
cli
push
daa
scas
stc
into
loope
mov
mov
test
nop
in
test
push
int
in
cmps
mov
adc
in
mov
xchg
pop
push
inc
aaa
test
xchg
and
or
jle
adc
stc
mov
in
nop
xor
jmp
push
loopne
mov
inc
xchg
out
adc
dec
outs
push
pop
mov
push
call
call
add
aam
or
hlt
xchg
pop
fwait
cmp
loope
push
xor
push
sbb
je
cmp
aam
mov
mov
mov
jnp
arpl
xor
mov
push
retf
mov
out
mov
fbld
push
sbb
lods
or
sar
aaa
mov
push
stos
(bad)
cmp
adc
loop
es
sahf
mov
mov
mov
aas
add
push
inc
mov
sub
rcl
pusha
push
sbb
clc
jbe
xor
ja
loopne
ret
test
stos
ins
mov
push
adc
pushf
lea
jmp
mov
(bad)
(bad)
xor
hlt
pushf
mov
loopne
dec
xchg
mov
adc
and
push
mov
icebp
pop
imul
movs
cmps
lahf
cmp
inc
stos
mov
repnz
inc
pop
dec
cld
or
pop
sub
mov
sub
popf
ds
fld
xchg
mov
cmp
repz
fmul
jmp
inc
or
fucompp
imul
cmp
cmp
test
inc
test
jo
out
xor
mov
xor
pop
mov
dec
call
xor
pop
and
loope
sbb
and
sbb
adc
sub
sub
adc
push
adc
adc
and
sub
sub
pop
push
loope
adc
push
adc
and
loop
clc
pop
sub
movs
jb
jo
sbb
in
xchg
lea
jge
(bad)
push
ds
fnsave
mov
(bad)
or
add
dec
push
outs
call
mov
pop
add
jecxz
outs
(bad)
jmp
cmp
xor
cmp
jne
fnstsw
or
add
aam
fstp
repz
mov
lock
sbb
int3
lods
mov
call
std
add
push
(bad)
sub
mov
cmp
xchg
ins
xlat
rol
mov
lea
pop
enter
jle
jmp
lds
sbb
loop
inc
scas
pop
sbb
inc
call
mov
pop
call
js
imul
jo
(bad)
paddd
pusha
(bad)
mov
js
repz
mov
pop
push
mov
xchg
cwde
push
xchg
and
mov
add
fwait
lds
add
dec
mov
pusha
push
fmul
repz
(bad)
pop
or
iret
sub
xchg
jmp
pop
loopne
inc
add
xchg
addr16
outs
stos
mov
mov
push
xchg
mov
test
dec
rcr
mov
ror
sub
xor
imul
cmp
arpl
mov
(bad)
sbb
icebp
pop
std
add
lea
je
bt
clc
stc
add
jmp
(bad)
gs
repz
(bad)
fild
jmp
ins
push
mov
shl
sub
test
out
inc
xchg
not
mov
(bad)
dec
jnp
inc
ds
pop
in
or
cmp
mov
push
jecxz
inc
retf
ins
push
add
scas
sub
inc
addr16
in
lock
retf
mov
jmp
mov
ffree
pop
bound
pop
lds
push
and
mov
xor
cmp
in
out
pop
pop
loopne
mov
enter
out
jecxz
gs
retf
mov
adc
repnz
(bad)
adc
enter
and
push
stos
jne
pop
iret
mov
(bad)
ret
mov
sub
sub
and
dec
cmp
(bad)
fyl2x
mov
pop
(bad)
addr16
xchg
add
or
sbb
in
movs
(bad)
in
xchg
jp
sar
and
mov
adc
mov
jno
fwait
enter
dec
lods
xor
xor
add
push
mov
mov
lea
jmp
jmp
je
mov
push
(bad)
mov
and
stos
adc
mov
and
push
adc
test
jmp
(bad)
pop
repz
cmc
das
mov
lods
xor
jae
ins
fistp
sub
cmps
retf
es
or
daa
cmps
xor
rcl
popf
into
or
mov
icebp
enter
or
sti
dec
(bad)
sti
inc
inc
das
mov
jl
adc
push
(bad)
xchg
xchg
mov
into
imul
adc
ret
mov
push
inc
sar
ret
lods
lea
or
imul
repz
xchg
pushf
icebp
xchg
fiadd
fs
out
lods
sub
enter
cmp
push
cmps
ins
cmp
in
in
xor
(bad)
adc
xchg
pusha
fst
mov
in
jbe
xor
jno
fs
and
xchg
popa
fld
(bad)
nop
movzx
adc
lea
call
mov
(bad)
scas
cmps
add
jmp
in
gs
retf
adc
jb
shl
fbld
mov
stos
push
cmp
push
push
xor
xor
fst
int
ins
jmp
xor
adc
xor
stc
xor
in
dec
icebp
in
repz
mov
dec
loopne
inc
inc
dec
jne
push
(bad)
fistp
push
fwait
in
je
jmp
fdivrp
jns
cmp
cmp
mov
test
ins
push
jo
pushf
or
mov
dec
fiadd
mov
pop
or
push
(bad)
out
mov
jl
or
pop
and
xor
and
inc
rcr
push
mov
push
sub
jl
cmp
pop
test
or
out
repz
mov
dec
stos
movs
inc
pop
push
add
pop
inc
xor
retf
add
dec
mov
cmc
inc
adc
jb
cmp
outs
mov
retf
js
in
inc
pushf
lds
xchg
call
sbb
enter
add
mov
call
push
std
cmc
neg
(bad)
arpl
push
mov
das
mov
dec
dec
lods
enter
xor
sbb
into
shl
cmp
mov
xchg
mov
iret
shl
sbb
clc
pop
jns
mov
out
mov
shl
int3
xchg
inc
cmp
(bad)
jle
clc
ss
sub
loopne
scas
jne
popf
push
jge
pop
jmp
mov
inc
pusha
(bad)
mov
cmc
movs
aam
add
lea
mov
addr16
callw
out
mov
mov
push
ss
and
psrld
fcos
ds
jp
push
jp
pushf
mov
(bad)
(bad)
jnp
scas
neg
(bad)
pushf
ret
aaa
or
cdq
xchg
mov
dec
or
pop
ficomp
shr
inc
in
xor
shl
add
mov
add
xor
repnz
xor
jbe
pop
xor
stos
mov
iret
lods
sbb
out
add
xchg
cli
out
ficom
in
and
jle
hlt
test
adc
sbb
xchg
jae
call
cli
cmps
call
cmp
push
stos
cmp
mov
(bad)
pushf
mov
push
out
scas
pusha
call
adc
xor
cld
fnstenv
mov
dec
pop
pop
jle
das
mov
push
pop
cmp
mov
inc
push
popa
jbe
cld
or
mov
stc
call
or
in
dec
aas
and
mov
leave
sub
xor
outs
cmps
lahf
cwde
cmps
dec
aad
and
add
ins
cmp
aad
cmp
dec
shr
cmp
sbb
and
jb
popf
call
jno
movs
sub
enter
push
jns
mov
(bad)
mov
xchg
retf
out
sbb
lds
cmp
jmp
push
(bad)
sub
and
and
outs
retf
push
push
pop
inc
and
retf
out
daa
pusha
jno
les
sub
xchg
aaa
lods
gs
sub
and
jecxz
aas
jle
or
lahf
repnz
and
cdq
jmp
sbb
xchg
jmp
xor
daa
mov
and
movs
xlat
nop
fsubr
inc
repz
or
mov
pop
pop
leave
adc
and
cli
dec
sahf
and
sbb
cdq
pop
or
movs
retf
(bad)
(bad)
pop
clc
das
rcl
adc
mov
dec
mov
pop
inc
mov
mov
fnstcw
loopne
lock
outs
adc
xlat
pushf
rcl
(bad)
jno
sti
enter
xchg
add
sub
jae
inc
inc
cmp
mov
gs
and
mov
shl
adc
sbb
adc
sub
pop
lock
xor
test
mov
out
sub
ins
test
mov
xchg
(bad)
pop
rcl
loop
xchg
pop
sub
cmp
clc
push
(bad)
std
lds
data16
pop
cs
inc
mov
and
fidiv
adc
or
fucomip
out
mov
stc
cli
sub
xchg
les
in
xchg
test
mov
dec
xor
cwde
pop
cmp
and
push
(bad)
sub
push
stos
inc
into
icebp
xchg
sub
dec
hlt
cmp
int
(bad)
xchg
push
mov
jne
jle
push
push
mov
or
push
lea
mov
loope
les
pop
in
sbb
imul
out
inc
arpl
(bad)
js
xchg
shl
sti
xor
mov
xor
sub
or
pop
push
xchg
add
stos
call
xchg
(bad)
sahf
jnp
mov
dec
add
inc
inc
push
fnsave
out
lods
fsubrp
in
push
(bad)
push
or
inc
test
out
mov
and
gs
xchg
push
mov
dec
ins
sbb
inc
mov
jnp
mov
aaa
shl
imul
mov
sbb
mov
loopne
push
fcom
das
ret
sbb
loop
adc
adc
ss
std
ret
sub
(bad)
loopne
pop
rcl
ins
loopne
push
adc
outs
retf
loope
cmp
ret
and
test
push
(bad)
sahf
cmc
scas
jecxz
push
sub
sub
fimul
out
dec
cmps
mov
push
jmp
xor
push
stos
mov
loop
cmp
ror
inc
lahf
sbb
fisubr
cmp
call
rcr
mov
jecxz
mov
test
retf
(bad)
out
fimul
cmp
out
add
fisttp
pop
or
mov
push
(bad)
sub
out
pop
inc
test
shrd
(bad)
je
inc
inc
cmp
pcmpgtw
imul
xor
jne
and
mov
pop
movs
cli
pop
(bad)
es
cmp
lods
jp
retf
(bad)
xchg
mov
push
inc
and
ds
jne
jns
ret
or
xchg
sbb
fist
out
loop
(bad)
(bad)
mov
xor
xor
repz
pop
movs
cwde
cli
inc
adc
rol
enter
not
not
inc
push
call
pushf
cmp
not
pushf
mov
xor
clc
jmp
fisub
cli
push
(bad)
(bad)
xchg
push
ss
leave
push
cwd
aam
push
sbb
inc
xlat
out
ss
dec
mov
add
je
cmp
imul
ret
nop
jbe
popf
sti
std
and
pusha
adc
clc
loopne
cmp
pop
test
sbb
sbb
push
sbb
xchg
push
cmps
enter
xchg
out
sbb
in
cmp
adc
(bad)
jmp
or
pop
std
cmp
inc
jmp
and
aad
pop
push
scas
mov
fdiv
loopne
jmp
mov
cmps
and
pop
jp
(bad)
mov
lds
ins
add
jno
bound
and
loopne
ficomp
inc
shr
mov
(bad)
ds
jg
add
sub
retf
jg
daa
mov
push
das
or
js
inc
jb
loopne
inc
fs
mov
push
(bad)
mov
mov
outs
push
addr16
js
jg
mov
add
sbb
popf
mov
sub
adc
xchg
cld
retf
lahf
data16
xchg
nop
je
(bad)
jmp
ds
xchg
sub
(bad)
adc
es
cmp
lods
xor
repnz
lods
test
push
(bad)
pushf
or
jmp
cmp
call
mov
pop
ins
push
jmp
imul
push
cmps
push
(bad)
je
cli
call
sub
sbb
dec
mov
cmp
and
fmul
xrelease
jnp
adc
lds
push
add
dec
dec
pop
(bad)
fistp
xchg
lahf
xchg
inc
stos
daa
mov
push
shr
ds
add
fiadd
mov
je
jg
dec
cld
push
(bad)
mov
xchg
fadd
jl
hlt
add
ja
fistp
aaa
jp
inc
imul
fsubr
ds
push
loope
dec
add
loope
in
sbb
mov
jb
jmp
jp
in
mov
dec
adc
add
sub
out
inc
pop
mov
popf
push
push
jp
bound
jge
bound
pushf
inc
cli
dec
mov
mov
inc
int3
popf
je
mov
sbb
mov
pop
popa
push
jmp
call
(bad)
push
pushf
ret
and
push
pop
add
pop
leave
mov
fwait
or
or
or
sub
jp
mov
fnop
test
push
adc
(bad)
mul
pop
out
dec
iret
fst
sub
push
dec
lahf
loopne
popa
sti
adc
mov
es
sar
aad
inc
aam
into
enter
add
inc
scas
test
les
inc
jp
jge
lahf
jg
loope
mov
scas
in
and
hlt
adc
cwde
adc
gs
dec
mov
mov
lds
push
(bad)
fwait
xor
or
shl
jp
rcr
repnz
fist
in
fimul
sub
inc
cmp
cdq
pop
mov
pop
shr
sbb
out
imul
and
dec
out
cld
mov
mov
push
repz
sbb
nop
dec
xchg
fsubr
aas
loop
and
ins
leave
vmovaps
jo
xlat
cld
(bad)
call
push
dec
sbb
in
add
nop
sub
jge
cmp
sub
call
out
sbb
iret
push
mov
stos
movs
xchg
or
push
(bad)
in
adc
or
pop
inc
(bad)
inc
ret
(bad)
jmp
shl
sub
pop
les
ins
or
adc
push
neg
js
or
(bad)
jns
call
cmps
sub
das
pop
in
fimul
push
icebp
sbb
sub
pop
loope
addr16
sbb
mov
pop
jmp
scas
xor
in
add
push
pusha
adc
push
mov
mov
mov
lea
jmp
dec
movs
fdivr
push
(bad)
fisub
scas
in
cld
mov
fidiv
inc
mov
inc
and
je
rcr
jnp
enter
sub
retf
xor
ficom
sub
fsubrp
(bad)
push
jmp
test
cmp
jmp
push
mov
pop
imul
out
retf
add
hlt
xor
les
adc
fisttp
dec
and
add
mov
xchg
enter
retf
jae
cmps
pusha
jecxz
pop
pop
cld
outs
push
jge
lods
push
aaa
scas
loope
(bad)
pushf
and
push
iret
pop
retf
das
rcr
inc
pop
pusha
xlat
or
lahf
jo
arpl
stos
xor
sbb
pop
scas
jns
mov
xor
jb
jmp
scas
sbb
mov
or
popa
push
jno
outs
ins
stos
rcl
mov
xchg
fnstenv
xor
lds
movs
mov
xchg
push
sbb
loope
shl
mov
mov
nop
xchg
inc
clc
pop
stos
xor
push
mov
pusha
add
fiadd
cmp
pcmpgtw
pop
add
or
fcom
jno
ret
dec
(bad)
mov
loopne
(bad)
cmp
icebp
cmp
fadd
cmp
hlt
sbb
out
push
mov
adc
bound
sbb
and
pop
xchg
retf
xchg
add
pop
addr16
int
cmp
push
stos
inc
ja
or
neg
int3
inc
imul
js
sti
ret
xor
adc
xor
mov
scas
or
jg
out
push
retf
ror
xchg
and
mov
inc
xor
pop
mov
je
repnz
pop
bound
pushf
int
mov
mov
sub
lea
ja
call
and
ins
add
fdivr
fsub
call
mov
sub
xor
jmp
inc
retf
fldenv
(bad)
mov
fstp
daa
mov
adc
xchg
hlt
int3
mov
in
test
inc
xchg
movs
inc
div
nop
enter
xchg
xchg
inc
jns
aaa
pop
addr16
push
jl
pop
xchg
fld
cmp
repz
cmps
and
cmps
stos
pop
(bad)
and
sar
in
movs
inc
(bad)
dec
ja
(bad)
(bad)
jmp
lea
je
call
and
pop
out
xchg
push
nop
push
or
adc
xor
xor
jp
ret
pop
dec
cmp
test
sti
cs
mov
leave
aaa
inc
jmp
pop
pushf
dec
ror
hlt
sbb
test
aam
std
sub
shr
fwait
pop
ins
or
iret
mov
dec
mov
retf
or
push
jno
and
out
sti
mov
push
(bad)
adc
jmp
cmps
fucom
push
(bad)
aaa
fild
sub
xor
into
mov
lods
pop
mov
pop
mov
pop
cmp
test
fist
inc
pop
sub
push
push
mov
das
mov
sub
sub
call
cmp
test
(bad)
dec
neg
xor
pop
sahf
mov
pop
popa
mov
in
mov
out
sbb
add
mov
push
mov
and
cmc
push
push
sub
bt
call
lea
jne
push
pushf
mov
stos
mov
push
pushf
pushf
lea
jmp
mov
mov
inc
and
xor
xchg
in
sub
pop
(bad)
fstp
xor
mov
test
aas
inc
xchg
fild
cld
add
sub
leave
inc
jns
fadd
mov
repz
inc
in
xchg
xchg
inc
and
add
mov
mov
mov
iret
cmp
inc
ja
push
jl
mov
cmp
test
jne
push
sbb
add
fs
out
or
addr16
mov
mov
adc
aad
mov
adc
call
(bad)
mov
xor
movs
(bad)
fsubr
(bad)
mov
cmc
inc
aas
mov
mov
out
mov
bsf
cmp
push
aas
dec
lahf
sbb
imul
mov
sbb
icebp
add
push
test
mov
in
add
xchg
sub
in
mov
pop
mov
fsub
outs
and
add
adc
sbb
cli
xor
mov
push
(bad)
outs
aaa
push
mov
adc
mov
mov
fsub
ds
add
push
sub
adc
xchg
cmp
lods
xor
xor
sub
hlt
jecxz
cmc
jb
add
loop
ret
inc
pop
ret
or
movs
cld
cmp
inc
rcr
adc
xchg
cmp
jmp
leave
sbb
into
push
addr16
popf
push
mov
hlt
aad
pop
stc
pop
addr16
sub
push
ret
(bad)
int
lods
cmp
(bad)
out
add
dec
cmp
cmp
cmp
loopne
cmp
stos
ds
out
mov
push
call
ror
btc
mov
cmp
cmp
jmp
sbb
(bad)
mov
cld
pop
add
inc
ja
out
add
fisttp
fisubr
enter
jmp
dec
ins
mov
popa
mov
inc
sahf
jp
icebp
adc
fisubr
jle
mov
scas
adc
inc
retf
adc
inc
push
add
icebp
pop
repz
pusha
arpl
inc
dec
mov
mov
mov
push
push
push
jmp
lea
jne
shl
bsf
add
mov
pushf
call
push
call
add
push
movzx
jmp
popa
adc
push
(bad)
in
pop
in
cmp
clc
mov
add
(bad)
sbb
jmp
pusha
shl
dec
daa
dec
(bad)
lock
jo
popa
jg
and
jmp
push
scas
sbb
shl
pushf
rcl
adc
push
shl
rcl
lahf
addr16
mov
mov
xchg
out
pop
retf
adc
int3
fsubr
mov
inc
inc
dec
or
add
jmp
fwait
out
fdivrp
dec
fwait
adc
(bad)
jg
loop
xlat
stc
inc
mov
lea
ja
pushf
pusha
pushf
call
xor
das
out
(bad)
nop
add
or
fldcw
cs
ins
stos
int
lods
push
fst
push
stos
das
cwde
sub
jmp
loop
xor
nop
fbld
mov
sar
sbb
sub
push
movs
shl
mov
jl
mov
retf
mov
(bad)
xchg
inc
outs
add
push
fiadd
fnstcw
aaa
mov
adc
cmc
sbb
cmp
das
fdivr
push
(bad)
in
mov
test
test
xchg
nop
(bad)
or
inc
pop
aam
xchg
ins
fucomip
out
enter
enter
test
cli
fimul
xchg
dec
xor
inc
iret
jle
xchg
aaa
aaa
and
add
or
pop
sbb
jecxz
mov
pop
mov
mov
mov
shr
(bad)
xlat
test
icebp
inc
jmp
call
mov
dec
dec
std
sbb
sub
jge
pop
xchg
adc
fbld
xor
stos
jecxz
push
cli
or
sub
push
(bad)
or
mov
std
xor
dec
loop
push
dec
loope
jp
xchg
push
and
cmp
pushf
outs
or
add
inc
add
mov
scas
repz
imul
aam
arpl
pop
cmps
xor
hlt
mov
mov
sub
mov
test
mov
mov
xchg
js
data16
cdq
push
xor
sbb
mov
addr16
movs
and
in
push
mov
test
push
adc
rcr
push
add
sti
add
shl
sub
rcl
jmp
pushf
pushf
mov
push
call
pusha
lea
jne
push
add
dec
mov
shld
lea
sub
sub
clc
lea
pushf
pushf
sub
pushf
push
pop
clc
mov
mov
push
cmp
pusha
pushf
call
stc
ror
call
(bad)
xor
dec
xor
mov
mov
daa
out
in
rcr
les
xor
call
cmp
add
stos
pop
scas
or
jle
pop
or
out
repz
gs
sbb
adc
xchg
fstp
test
bound
nop
gs
scas
loop
xor
jns
ins
es
or
sub
jmp
mov
pushf
lea
je
pusha
adc
pushf
mov
lea
jmp
repnz
sti
test
pop
or
jmp
mov
test
push
shr
shl
jp
sub
inc
(bad)
in
xor
das
call
retf
xchg
mov
inc
pop
out
scas
mov
data16
push
repz
aaa
cli
jmp
and
rcl
loope
mov
add
imul
nop
jg
int3
mov
(bad)
call
adc
mov
mov
lea
pop
pushf
pusha
push
ret
cmp
pushf
jmp
adc
jmp
(bad)
lods
push
fbld
neg
imul
js
adc
in
mov
pop
mov
lods
push
popa
fs
bound
push
xor
push
jecxz
and
in
pop
movs
mov
mov
call
mov
ins
lahf
or
or
or
je
xchg
cdq
xor
pop
dec
xchg
pavgw
or
lods
fwait
jp
and
sahf
mov
retf
iret
test
xchg
retf
jmp
(bad)
sub
xor
inc
sti
adc
sbb
adc
mov
fsubr
ret
imul
call
lock
in
sahf
std
or
cmp
pop
sub
sub
imul
mov
(bad)
ins
dec
neg
jnp
and
mov
mov
add
jmp
adc
int
mov
sub
repz
rol
push
xchg
loope
add
sub
pop
dec
ret
and
push
cmp
push
fld
icebp
adc
and
inc
adc
(bad)
pop
pop
sbb
sub
outs
loop
test
test
xor
das
push
iret
(bad)
xchg
add
xchg
sub
adc
outs
das
lods
std
out
jl
inc
lods
lahf
nop
xor
jo
cmps
push
mov
sbb
cmp
sbb
sub
fs
sub
out
mov
mov
outs
sar
pushf
adc
xor
out
xchg
mov
jecxz
enter
xchg
btr
pushf
call
pushf
pushf
jmp
dec
inc
inc
jmp
mov
(bad)
(bad)
(bad)
out
fsub
cmp
mov
xchg
inc
stos
mov
(bad)
mov
leave
call
aas
cmps
das
and
test
xchg
lods
inc
xlat
les
(bad)
push
inc
xchg
ret
xchg
pop
sbb
dec
in
ret
nop
mov
scas
adc
iret
mov
push
pop
das
cmps
mov
push
stos
in
xchg
clc
cmps
(bad)
(bad)
call
(bad)
retf
add
stos
out
inc
scas
cmc
sbb
push
jnp
mov
call
mov
(bad)
aam
nop
inc
mov
jmp
cmps
add
sbb
call
dec
dec
test
add
add
cmp
jb
cld
pop
retf
mov
int
lods
jmp
pop
das
pop
dec
sub
pop
ret
shl
or
push
jbe
sahf
sbb
movs
inc
mov
xor
test
sub
in
push
mov
xor
push
xchg
popf
sti
mov
out
(bad)
and
jns
add
pop
iret
pusha
and
and
scas
mov
adc
jle
pop
and
jo
aad
ret
push
jns
jno
sbb
test
dec
cs
inc
sbb
add
inc
hlt
(bad)
aaa
or
push
jb
jp
or
test
cs
retf
pop
pop
aaa
std
aas
imul
out
sbb
mov
frstor
(bad)
dec
(bad)
ja
es
mov
ret
mov
mov
outs
gs
pop
mov
fs
xchg
xchg
inc
retf
or
xchg
mov
std
and
adc
jge
push
push
call
xchg
jno
div
jge
(bad)
outs
fisttp
push
popf
cs
inc
sbb
imul
enter
push
call
mov
push
sti
xor
js
out
push
(bad)
dec
push
repz
push
adc
push
daa
retf
gs
shr
stos
loope
sub
(bad)
fld
lds
jns
xor
int
xchg
dec
shl
inc
call
mov
xchg
sub
inc
push
xchg
jnp
stos
shl
sbb
inc
mov
mov
sbb
retf
in
inc
xor
inc
shl
dec
shr
add
mov
test
pushf
add
pusha
pusha
pushf
mov
lea
jmp
jmp
call
test
push
stc
shld
pushf
mov
call
mov
movzx
mov
push
mov
pushf
mov
push
push
pushf
push
push
ret
pushf
call
pushf
pushf
pop
jmp
and
btc
cmc
jb
mov
rcr
add
push
jmp
jmp
inc
xor
mov
bsr
shl
clc
test
mov
sub
not
inc
sub
rcr
neg
dec
adc
neg
btc
lea
or
sub
movsx
movsx
mov
pusha
push
mov
lea
jmp
pushf
pop
pusha
push
jmp
mov
dec
movzx
dec
setge
setle
setns
rol
pushf
inc
mov
clc
and
btc
mov
clc
pushf
sub
call
jnp
push
jmp
call
repz
pop
pushf
mov
push
sub
jnp
cmc
push
test
bt
push
rcl
lea
push
shr
pushf
mov
cmc
mov
push
ror
push
bt
stc
shld
push
bts
cmp
mov
movsx
shl
clc
not
sub
jmp
mov
btc
stc
mov
add
bsr
clc
not
mov
sub
btc
pusha
neg
movsx
lea
pusha
and
pushf
bsf
sub
movsx
not
push
lea
pusha
lea
jmp
mov
pusha
push
pushf
lea
jmp
pushf
mov
pusha
pusha
mov
call
sub
jg
shr
pushf
lea
jge
pushf
mov
push
jmp
pusha
mov
pushf
bswap
pushf
push
mov
mov
push
lea
cpuid
pushf
call
mov
mov
call
clc
btr
shld
btc
not
bsr
bsf
mov
bt
sub
cmp
and
jmp
mul
pushf
mov
push
pushf
call
jmp
cmp
push
pushf
call
mov
mov
mov
mov
lea
jmp
push
xchg
push
pushf
jmp
test
mov
call
repz
pop
pushf
pushf
pushf
mov
test
mov
clc
mov
cmc
xchg
bt
xchg
add
mov
shld
xchg
shl
push
pop
sar
btr
shrd
not
mov
movsx
jmp
bswap
push
jmp
push
mov
mov
mov
lea
jne
inc
mov
call
add
add
push
repz
pop
call
sub
rcr
sar
mov
bt
jmp
jmp
jmp
lea
mov
pushf
pusha
add
pushf
mov
push
mov
pushf
pop
jmp
shl
push
call
mov
inc
push
push
ror
call
not
movsx
mov
jmp
mov
push
pushf
mov
lea
jmp
call
mov
mov
mov
mov
mov
lea
jmp
lea
push
pusha
lea
jmp
pusha
pushf
push
pushf
pop
pusha
mov
call
call
mov
push
div
pusha
mov
call
clc
push
lea
clc
clc
ror
call
movzx
dec
not
shl
bt
pop
pusha
sub
test
movsx
neg
shr
clc
lea
rcr
or
neg
sub
pusha
movzx
lea
push
mov
pusha
lea
jmp
mov
clc
clc
clc
mov
clc
xchg
pushf
neg
xchg
shrd
clc
mov
call
pusha
pusha
mov
mov
call
cmc
add
pushf
jmp
mov
mov
mov
mov
lea
jmp
cmp
mov
shl
pushf
btc
adc
mov
cmc
clc
add
push
mov
pusha
lea
jmp
mov
mov
bt
sbb
mov
pushf
cmp
test
add
mov
mov
pushf
mov
pushf
mov
mov
push
lea
jmp
lea
je
pushf
cmc
pusha
xor
pushf
xchg
test
mov
call
mov
mov
jmp
not
mov
jmp
mov
mov
push
lea
jmp
xchg
dec
cmp
shld
mov
lea
mov
test
adc
or
push
pop
cmc
adc
add
stc
mov
shrd
lea
mov
sub
mov
xadd
shl
shr
sbb
not
bswap
lea
not
sub
bswap
xor
pop
neg
bt
movsx
cmp
lea
adc
rcr
call
push
pushf
repz
pop
clc
mov
mov
clc
push
push
mov
stc
jmp
pushf
jmp
call
pop
mov
pusha
lea
jmp
mov
push
push
mov
mov
lea
js
pusha
push
pushf
pop
push
lea
jnp
pop
pusha
mov
pushf
pushf
lea
jmp
pushf
mov
shl
rol
push
jmp
rcl
rcl
movzx
cmp
cmc
clc
sub
clc
push
sub
push
cmc
stc
test
not
stc
add
bt
push
sub
jmp
movzx
movzx
sub
shr
xor
lea
jp
ror
dec
cmp
bswap
add
stc
bswap
rol
dec
pushf
movsx
inc
movzx
inc
xor
sub
dec
btr
rcr
mov
test
pushf
pusha
add
push
pushf
push
mov
push
push
lea
jmp
cbw
pushf
mov
pusha
call
mov
jmp
rdtsc
mov
xor
pop
not
aam
pop
call
call
cmp
call
cmp
cmc
inc
mov
stc
mov
stc
bt
clc
not
pushf
cmc
clc
clc
not
push
and
pusha
push
lea
jne
pusha
mov
mov
jmp
push
mov
pusha
push
mov
push
call
call
pushf
push
pop
mov
mov
lea
jmp
push
push
repz
pop
cmp
mov
pusha
clc
cmc
mov
bt
pusha
mov
add
xchg
neg
cmc
mov
stc
neg
rol
xadd
xchg
neg
sub
bts
rcl
push
pop
shl
sbb
pushf
test
mov
xor
and
shl
shl
mov
sar
not
lea
bsr
sub
movzx
sbb
neg
bts
lea
push
bswap
sub
movsx
movsx
pushf
lea
pusha
mov
pushf
pushf
lea
jmp
jmp
movzx
ror
btr
sbb
setne
rol
add
movsx
rol
not
rcl
rol
not
inc
call
jmp
lea
jbe
push
mov
jmp
neg
rcr
rcr
movzx
or
clc
test
bswap
sub
not
jmp
pushf
sub
mov
mov
stc
mov
add
jmp
call
pushf
not
mov
lea
jle
lea
bt
ror
bt
clc
cmp
bswap
pushf
stc
xor
pusha
sub
pusha
jmp
pusha
mov
push
mov
pusha
push
push
call
pushf
bt
pusha
test
cwde
mov
push
sub
jmp
mov
mov
mov
push
pushf
mov
lea
jmp
mov
mov
mov
pusha
mov
lea
jmp
adc
lahf
bsr
mov
mov
rcl
or
shl
mov
push
bt
stc
sub
test
test
call
pushf
pushf
div
jmp
bt
shl
rcr
mov
sbb
mov
stc
clc
jmp
call
mov
shl
sbb
dec
mov
sbb
and
mov
call
push
mov
push
pushf
lea
jmp
sub
test
ja
pusha
shl
pushf
mov
mov
pushf
mov
pushf
pop
pusha
jmp
jmp
mov
jmp
not
dec
sub
xadd
jmp
pusha
call
mov
push
pusha
mov
push
push
push
ret
pushf
repz
pop
cmc
mov
stc
js
bt
cmc
push
stc
pusha
xchg
bsf
adc
mov
rcl
xchg
pop
btc
push
dec
mov
push
shrd
ror
pop
mov
dec
push
push
pop
shl
call
push
pop
mov
pushf
pushf
lea
jmp
pushf
jmp
pushf
inc
pushf
sub
call
lea
jg
pushf
push
pusha
push
pop
push
push
lea
jmp
lea
pushf
lea
jmp
shld
clc
mov
stc
mov
setae
cmp
mov
cmc
clc
sub
jmp
push
call
call
shl
sub
sub
bsr
inc
btc
neg
pop
pusha
lea
pushf
shr
xor
sub
movsx
mov
push
push
lea
jmp
push
add
pusha
jmp
pushf
repz
pop
cmp
cmp
stc
mov
stc
pusha
cmp
mov
clc
cmc
push
xchg
bswap
mov
inc
xor
mov
neg
call
mov
dec
mov
lea
jne
jmp
pushf
mov
mov
mov
push
lea
jmp
call
sub
push
shr
call
call
jmp
pusha
mov
push
pushf
lea
jmp
call
not
rcr
bt
not
mov
xor
shr
bt
add
mov
test
jmp
dec
mov
or
shl
bt
xchg
sar
push
pop
sar
rol
mov
sub
mov
xor
bts
pushf
rol
not
movsx
sub
ror
dec
xadd
bt
neg
clc
btc
shld
lea
pushf
jmp
stc
mov
jmp
call
push
repz
pop
bt
jmp
push
pop
push
lea
jmp
call
mov
call
jl
push
pushf
pop
jmp
mov
pushf
lea
jmp
inc
jmp
shl
movzx
cbw
mov
neg
cmc
mov
pushf
cmc
clc
not
cmc
bt
bt
jmp
shl
lea
das
pushf
mov
mov
mov
shr
cmc
cmc
mov
test
add
pushf
lea
js
shld
push
mov
mov
call
mov
jmp
push
pushf
pop
pushf
call
jmp
mov
call
push
pop
push
lea
jmp
pushf
pusha
call
push
lea
pusha
pushf
pushf
mov
lea
jmp
jmp
push
pop
push
lea
jmp
sub
or
shl
shr
mov
or
sar
movsx
mov
bswap
btc
add
xadd
shl
mov
inc
bsf
or
setp
sub
pushf
inc
ror
movsx
movsx
rcl
ror
rcr
push
sub
shl
rcr
and
ror
neg
pushf
add
sub
not
movzx
bswap
mov
jmp
mov
call
mov
push
mov
mov
jmp
push
pusha
mov
cmp
add
and
mov
push
jmp
jmp
xchg
cmp
bsr
bswap
push
pop
cmc
shl
push
mov
bsr
dec
lea
bts
mov
bsf
and
not
call
bts
sub
pushf
pusha
movsx
pusha
lea
pushf
pushf
mov
lea
jmp
xor
pushf
jmp
mov
jmp
mov
push
pushf
pushf
pusha
lea
jmp
push
call
jmp
mov
mov
pusha
push
push
push
mov
call
mov
call
inc
pushf
movzx
mov
lea
jnp
cmc
xor
cmc
bt
ror
pushf
pushf
mov
add
call
xchg
call
xchg
bswap
cld
std
mov
cld
cld
push
lea
jne
push
rep
cld
bswap
sar
sar
mov
add
rol
btc
mov
mov
cld
bt
mov
push
popf
pusha
lea
jmp
pushf
call
bt
mov
xchg
lea
adc
add
lea
mov
ror
rcr
stc
bsr
mov
and
not
inc
xchg
bts
push
pop
jmp
bt
mov
mov
rcl
mov
shld
test
jmp
push
call
pushf
push
mov
pushf
pushf
pushf
pushf
lea
jmp
push
mov
jmp
pusha
jmp
push
pushf
mov
call
jmp
push
jmp
call
mov
mov
push
pushf
push
ret
pushf
pushf
cmc
push
pop
test
mov
pushf
add
stc
stc
call
call
sub
sar
add
ror
neg
shrd
xadd
lea
shrd
or
mov
test
sub
call
pushf
mov
pusha
mov
pushf
jmp
pushf
pop
mov
push
pop
push
push
pushf
lea
jmp
pushf
push
pop
pushf
lea
jmp
add
clc
bt
sub
mov
bt
add
jmp
mov
pushf
push
mov
lea
jmp
push
pushf
call
or
push
xor
push
jmp
mov
push
pop
pushf
lea
jmp
inc
call
test
and
bsr
push
mov
cmc
pusha
mov
add
push
pushf
call
pusha
call
lea
jne
call
not
push
mov
pushf
push
mov
call
jmp
bswap
cmp
pusha
test
push
xor
bt
push
test
jmp
cwde
mov
call
pop
mov
call
jmp
pusha
push
push
mov
pushf
mov
lea
js
push
pusha
repz
pop
pusha
cmc
cmc
mov
clc
call
jmp
call
movzx
not
call
cmp
neg
test
push
lea
push
movsx
sub
movzx
call
mov
push
lea
jmp
mov
mov
jmp
jmp
mov
push
pushf
lea
jmp
push
pusha
xor
pushf
jmp
pusha
sub
lea
jno
add
call
cmc
movzx
shl
mov
test
push
add
push
pushf
pusha
lea
jmp
sub
rcl
neg
xadd
lea
sbb
lea
push
sub
mov
mov
pusha
jmp
pushf
pop
push
push
pop
mov
push
lea
jmp
pushf
lea
jne
cmc
shl
shr
test
mov
cmp
and
clc
call
call
pushf
pushf
shr
mov
push
call
push
mov
push
mov
call
test
ror
shl
mov
sar
mov
pusha
mov
push
sub
pushf
mov
shl
push
push
mov
jmp
cmp
call
mov
stc
cmp
mov
bt
push
bt
xchg
bts
xchg
add
lea
adc
mov
mov
bsr
sbb
mov
sbb
movzx
bswap
not
push
pop
sar
ror
pop
shl
mov
dec
dec
mov
shl
not
dec
sub
sub
neg
shr
sub
jbe
mov
adc
bsf
or
movzx
sub
mov
movsx
lea
mov
pusha
lea
jmp
test
mov
pusha
jmp
bt
and
stc
cmp
jmp
mov
push
mov
call
bt
test
shl
push
mov
mov
mov
push
pushf
pop
mov
push
pop
pusha
mov
lea
jmp
lea
jne
add
pushf
xor
lea
push
pusha
call
push
mov
pushf
repz
pop
pushf
clc
cmc
mov
bt
mov
test
mov
cmp
mov
push
xor
cmp
cmc
mov
shl
push
shr
shr
ror
movsx
push
and
push
xadd
sar
push
shl
mov
pushf
call
shl
aad
shld
movzx
test
add
cmc
stc
add
pushf
pusha
xor
jmp
push
mov
lea
jne
inc
sar
xor
mov
not
pushf
push
mov
pushf
mov
mov
pusha
lea
jmp
sub
pushf
push
call
mov
rcr
shl
mov
bt
or
xchg
aaa
mov
bswap
shl
and
shl
mov
aad
lahf
mov
pop
shld
sub
aam
mov
stc
push
popf
push
jmp
add
movsx
cmc
sar
mov
push
bt
add
pusha
xor
push
push
jmp
cmp
bt
cmp
mov
sbb
xchg
rol
mov
rcl
mov
xchg
push
pop
shl
call
lea
pusha
lea
jmp
push
sub
cmp
clc
call
bsr
not
sbb
cmp
sbb
sub
rcl
jmp
rcr
not
xor
mov
pushf
test
xor
jmp
mov
mov
pushf
mov
mov
mov
inc
xchg
btr
jmp
cwde
cmc
dec
mov
pusha
push
pushf
sub
call
mov
bt
cmp
stc
mov
clc
xchg
sar
cmp
push
cmc
test
movsx
push
xadd
cmp
push
shrd
adc
sbb
push
or
cmc
push
add
mov
push
jmp
call
pusha
mov
call
adc
mov
push
mov
fld
mov
push
mov
xchg
push
mov
sbb
mov
push
mov
out
mov
xchg
push
mov
sbb
mov
xchg
push
mov
xor
mov
xor
jbe
mov
push
mov
js
mov
xchg
push
mov
push
imul
xchg
push
mov
cmc
push
mov
xchg
push
mov
in
mov
xchg
push
mov
pop
push
mov
xchg
push
mov
int3
gs
xchg
push
mov
add
mov
(bad)
addr16
add
mov
aam
mov
and
mov
push
mov
sub
jo
mov
pop
mov
cmc
push
mov
lea
mov
in
mov
add
stos
pop
mov
sbb
mov
gs
int
mov
in
mov
push
imul
sar
mov
jle
mov
gs
test
mov
test
jo
mov
sbb
mov
jp
mov
popa
mov
mov
push
mov
jo
mov
repz
mov
jo
mov
sar
mov
push
mov
pop
push
mov
jo
mov
int
mov
jb
mov
js
mov
xor
mov
push
mov
sub
xor
jp
mov
pop
mov
stos
pop
mov
pop
xor
gs
in
mov
add
mov
sbb
mov
pop
mov
add
out
mov
xor
push
mov
repz
mov
jb
mov
js
mov
aam
mov
sbb
mov
cmc
push
mov
js
mov
js
mov
and
mov
pop
mov
jb
mov
adc
mov
jns
mov
push
mov
mov
fs
aam
mov
adc
mov
jo
mov
push
mov
adc
mov
gs
repz
mov
sbb
mov
imul
and
mov
push
mov
adc
mov
pop
mov
adc
mov
push
mov
adc
mov
addr16
adc
mov
jg
mov
outs
mov
js
mov
adc
mov
data16
adc
mov
push
mov
adc
mov
jns
mov
outs
mov
xor
mov
imul
adc
mov
pop
mov
adc
mov
push
mov
test
mov
outs
mov
sub
jo
mov
jns
mov
jns
mov
jo
mov
jne
mov
jp
mov
jne
mov
pop
mov
push
push
mov
sub
push
mov
pop
jg
mov
test
aam
mov
sti
jp
mov
xor
jne
mov
jb
mov
jb
mov
gs
mov
push
mov
jo
mov
int
mov
int3
gs
push
push
mov
xor
mov
popa
mov
pop
push
mov
sar
mov
pop
mov
sub
pop
mov
in
mov
or
push
mov
xor
mov
xchg
add
mov
test
mov
gs
push
push
mov
repz
mov
or
pop
mov
add
adc
mov
xor
pop
mov
adc
mov
ja
mov
jle
mov
pop
mov
cmc
push
mov
js
mov
and
mov
pop
mov
js
mov
clc
pop
mov
int3
gs
sbb
mov
sub
(bad)
addr16
mov
xor
ja
mov
push
mov
xor
mov
push
mov
push
pop
mov
in
mov
add
mov
mov
jb
mov
push
mov
sbb
mov
data16
clc
pop
mov
cmc
jo
mov
push
mov
stos
pop
mov
int3
gs
add
mov
test
mov
jmp
call
add
jmp
btr
test
mov
shr
shl
bts
add
mov
cmp
push
cmc
add
push
mov
pusha
pushf
lea
jmp
mov
push
pushf
pop
pushf
call
mov
pushf
lea
jno
repz
test
bt
push
cmp
mov
bt
cmp
push
jmp
jmp
pushf
pop
call
call
bt
pushf
mov
mov
test
bt
sub
jmp
call
rcl
bswap
not
cmc
sub
bts
bswap
mov
dec
neg
shr
lea
lea
bsr
sub
jmp
jmp
pusha
push
mov
call
stc
shrd
mov
xor
not
bts
rol
shl
sub
call
pushf
mov
call
bswap
push
dec
pop
rol
movzx
inc
call
rcl
bsf
xor
test
sar
rcr
mov
clc
cmc
mov
add
pushf
pusha
pushf
call
bt
add
pusha
jmp
add
call
neg
pushf
xadd
shr
call
jmp
jmp
rcr
neg
lea
neg
btr
movzx
rol
sub
pushf
bswap
pushf
bswap
lea
push
mov
lea
jmp
lea
jbe
pushf
push
mov
mov
jmp
add
push
mov
mov
push
mov
push
mov
lea
jmp
call
jmp
mov
pushf
pop
call
mov
pusha
pushf
mov
lea
jmp
mov
rol
xchg
dec
push
pop
cmc
shrd
mov
or
test
add
pushf
mov
btc
ror
not
xchg
pushf
sub
inc
adc
btr
neg
neg
or
lea
inc
sub
movsx
movsx
call
pushf
pushf
mov
call
push
pusha
pusha
push
jmp
push
add
rcl
inc
mov
stc
rol
and
add
pusha
push
mov
jmp
pusha
pushf
pop
mov
push
pop
push
pushf
mov
lea
jmp
clc
and
mov
call
repz
pop
call
pusha
push
mov
jmp
push
call
mov
pusha
rcl
cmp
add
jmp
mov
cmp
bt
xchg
shl
inc
push
bts
mov
rol
dec
lea
xadd
mov
shl
rol
btc
mov
pop
push
pop
add
mov
test
shld
mov
lea
not
bsr
adc
sub
and
mov
rol
neg
xadd
pushf
lea
pushf
cmc
shl
clc
sub
lea
pusha
lea
jmp
clc
pusha
rol
mov
xor
test
bt
mov
jmp
call
jmp
jmp
pushf
push
call
pushf
not
mov
pushf
mov
lea
jmp
rep
bswap
std
or
mov
mov
bsr
mov
cmc
cmc
pushf
bt
push
popf
pusha
mov
push
pushf
lea
jmp
not
test
pusha
cmc
sub
pusha
and
call
btr
inc
pushf
jmp
lea
push
mov
push
push
lea
jmp
lea
ja
btc
movzx
mov
aas
ror
adc
lea
cmc
rcl
or
stc
sub
daa
lea
shl
stc
and
clc
stc
shl
cmp
sub
not
lea
not
mov
not
pusha
bswap
movsx
pushf
pop
pushf
movsx
push
mov
pop
mov
lea
pushf
jmp
mov
pushf
lea
jmp
pushf
jmp
neg
xchg
mov
push
push
pop
call
mov
pushf
push
mov
push
mov
bt
call
mov
call
pushf
mov
inc
mov
pushf
mov
ror
bt
add
add
jge
pushf
cwde
cmp
test
jmp
mov
pushf
pop
mov
push
pop
mov
mov
mov
lea
jmp
push
pop
push
mov
push
lea
jmp
push
pop
pushf
push
lea
jmp
push
pusha
pushf
pushf
repz
pop
test
stc
call
pushf
pop
jmp
push
mov
not
xadd
shr
cmc
not
test
shrd
lea
sub
bts
neg
lea
adc
lea
and
mov
movzx
btc
sub
jmp
mov
clc
mov
cmp
bt
push
neg
neg
rcl
bsr
push
xor
bsf
push
not
mov
ror
push
shr
shrd
ror
push
pushf
clc
mov
rol
mov
movsx
inc
not
bswap
pusha
sub
cmp
push
shrd
neg
and
shrd
shrd
bsr
lea
mov
stc
ror
pop
sub
lea
mov
mov
push
push
push
pusha
lea
jmp
push
mov
call
call
lea
bt
shld
bsf
sub
lea
mov
pushf
pushf
mov
lea
jmp
call
clc
sub
pusha
call
shrd
cmc
mov
cmp
add
jmp
jmp
call
push
mov
pushf
repz
pop
call
push
call
jmp
jmp
jmp
pushf
pop
pusha
jmp
stc
mov
cmc
cmp
mov
rcr
shr
mov
inc
bswap
neg
pushf
mov
ror
mov
xadd
shrd
lea
push
pop
not
ror
mov
stc
mov
not
btc
stc
rcr
not
not
cmc
bts
call
repz
pop
jmp
sub
pushf
pushf
mov
mov
mov
lea
jmp
jmp
pushf
mov
push
pop
push
lea
jmp
inc
mov
xor
sete
mov
pusha
test
pusha
sub
bt
jmp
pushf
call
pusha
mov
pushf
pushf
lea
jmp
clc
test
mov
cmp
mov
shl
mov
xchg
rol
cmc
not
mov
sar
bswap
xchg
btc
push
pop
push
or
mov
pusha
lea
or
xor
mov
bts
xadd
not
pop
and
pushf
sub
bsr
bsf
neg
inc
movzx
add
lea
lea
lea
mov
shl
sub
jmp
jmp
pushf
call
pusha
jmp
push
pushf
btr
movsx
push
pop
shl
and
push
jmp
call
repz
pop
clc
mov
mov
push
mov
call
call
pusha
mov
mov
pusha
pushf
push
lea
jmp
push
call
pop
mov
ror
rcr
rcl
mov
and
or
xchg
not
call
sub
test
clc
push
shr
bts
shl
push
bsr
bts
push
call
jmp
push
pushf
mov
mov
pushf
mov
jmp
xor
pusha
movsx
lea
jno
pop
push
pusha
mov
push
lea
jmp
call
jmp
jmp
jmp
jmp
pushf
push
call
sub
jmp
stc
stc
mov
stc
mov
pusha
xchg
neg
sbb
shr
xchg
lea
jbe
adc
rol
btc
push
or
jmp
pushf
mov
pushf
push
lea
jmp
add
jmp
mov
push
lea
jmp
lea
ror
mov
lea
jmp
lea
mov
pushf
lea
jmp
pusha
call
pusha
push
mov
pushf
mov
mov
pushf
lea
jmp
jmp
lea
mov
pusha
mov
pusha
lea
jmp
push
pushf
pushf
pop
mov
pusha
pushf
call
pusha
movsx
lahf
push
mov
pop
call
xadd
xadd
lea
bsr
mov
bsr
neg
add
btc
bsf
xor
pusha
shr
mov
test
clc
shl
pusha
pushf
shr
push
clc
cmc
jmp
push
push
pushf
mov
pushf
pushf
lea
jmp
call
pushf
mov
call
pushf
pushf
pop
pusha
push
pop
mov
pushf
mov
lea
jmp
bswap
test
sub
mov
bsr
sbb
ror
neg
sar
clc
lea
rcl
sub
pusha
lea
pushf
pusha
lea
jmp
cmc
rcl
bts
mov
bsf
mov
test
mov
cmp
push
add
mov
mov
pushf
shrd
call
pushf
pop
mov
call
and
cmp
sub
stc
mov
push
push
call
bt
sub
jmp
push
pop
push
mov
lea
jmp
stc
neg
bt
bt
pusha
rol
jmp
push
pushf
push
pop
mov
mov
push
mov
lea
jmp
call
jmp
pushf
pushf
mov
pushf
jmp
dec
movzx
mov
pusha
clc
add
pusha
mov
mov
jmp
pushf
mov
push
pop
mov
pushf
push
pushf
lea
jmp
pushf
mov
jmp
push
xadd
and
or
test
mov
sar
clc
adc
not
clc
clc
sub
or
stc
rol
neg
bts
btr
clc
mov
stc
bt
sub
mov
lea
pusha
pusha
lea
mov
pushf
lea
jmp
push
pop
mov
lea
jmp
call
mov
pop
sub
xchg
clc
mov
btr
cmp
adc
not
mov
movsx
bsf
bsr
xchg
push
pop
rol
push
jmp
mov
push
mov
push
mov
lea
jmp
sub
xchg
ror
pop
mov
adc
sar
push
bsr
shld
ror
btr
push
not
dec
sub
sbb
push
ror
neg
shld
xor
mov
movzx
movsx
not
shld
bsr
sub
bsr
mov
ror
neg
rcr
shld
xor
mov
sub
dec
sub
lea
jmp
push
mov
pusha
mov
mov
pushf
pop
pushf
mov
push
pop
push
push
lea
jmp
pusha
push
pop
pushf
push
pushf
lea
jmp
call
push
lea
je
push
pushf
pop
pushf
jmp
push
popf
pusha
push
mov
push
lea
jmp
mov
call
pop
pusha
mov
lea
jmp
sub
ror
mov
cmp
btc
lea
sub
call
jmp
push
pusha
mov
mov
pushf
pop
mov
push
pop
mov
lea
jmp
mov
mov
pushf
push
lea
jmp
not
xor
rol
sub
sub
add
neg
pop
dec
shrd
lea
btc
shld
sub
pushf
not
jmp
bsr
cmp
sub
rdtsc
jmp
mov
mov
pushf
push
mov
lea
jmp
mov
pushf
pop
call
setbe
call
mov
push
repz
pop
test
mov
call
push
repz
pop
pushf
clc
stc
mov
jmp
jmp
pushf
push
pop
mov
lea
jmp
call
push
mov
push
clc
test
mov
mov
mov
mov
cmc
bt
xchg
and
bts
xor
xor
mov
bts
xchg
xor
push
pop
neg
shrd
jmp
lea
pusha
mov
jmp
push
mov
push
lea
ja
mov
call
bts
bts
btc
xor
mov
bts
sar
mov
bts
sub
setl
pusha
inc
inc
xor
sub
clc
setge
sbb
shr
not
bts
btr
add
bt
add
bsf
and
sub
pushf
neg
btc
movzx
bt
mov
pushf
push
cmc
or
call
pusha
push
pop
pushf
push
push
lea
jmp
cmc
push
cmp
push
shr
dec
shrd
push
neg
inc
push
cmp
not
sbb
xor
push
push
btr
jmp
push
pop
mov
lea
jmp
lea
pusha
lea
jmp
aad
mov
clc
cmc
sub
pusha
mov
push
lea
jmp
not
lea
pusha
pusha
pushf
pushf
lea
jmp
btc
not
sbb
ror
xor
sub
bt
and
stc
neg
bts
lea
bswap
sub
mov
mov
pushf
pushf
lea
jmp
mov
push
push
pop
pushf
mov
pushf
lea
jmp
not
mov
not
btr
mov
push
call
rol
push
neg
shrd
push
sbb
xchg
sar
xadd
push
bswap
push
movsx
mov
btr
not
btc
pusha
pushf
adc
sub
not
pushf
neg
btc
clc
or
movzx
lea
shr
pop
sub
pusha
lea
pushf
push
mov
lea
jmp
pop
jle
and
shld
movsx
mov
test
stc
cmp
call
rcr
lea
cmc
call
repz
pop
bt
jmp
clc
sub
cmp
cmp
mov
mov
lea
jae
pusha
push
push
mov
push
mov
pushf
mov
pushf
lea
jne
cmc
mov
pushf
stc
and
cmp
pusha
test
call
call
pushf
shl
call
not
mov
pushf
mov
push
mov
lea
jmp
mov
pushf
not
jmp
shld
bt
inc
mov
test
rcr
mov
push
clc
test
stc
sub
call
sub
pusha
cmp
not
clc
add
push
cmp
sub
bt
sub
pushf
mov
mov
pushf
push
jmp
stc
mov
lea
je
clc
clc
push
cmp
mov
shl
push
inc
xchg
push
rol
bsr
push
add
mov
movzx
movzx
push
btr
sar
xor
neg
push
shld
mov
cmp
lea
movsx
not
shld
rol
shl
or
sub
sbb
neg
shld
bsf
inc
shrd
mov
bswap
bswap
sub
not
jmp
pusha
pusha
mov
mov
pushf
mov
push
push
repz
pop
bt
stc
stc
mov
jmp
mov
mov
pushf
lea
jmp
call
mov
jmp
neg
sub
jmp
pusha
jmp
pusha
pushf
pop
push
call
inc
mov
pushf
pushf
lea
jmp
call
call
mov
push
push
pushf
pushf
repz
pop
bt
mov
mov
push
mov
call
not
mov
push
neg
bt
setge
mov
stc
bt
cmp
pusha
sub
cmp
shr
mov
lea
jne
pushf
mov
pusha
mov
call
call
pusha
mov
mov
mov
mov
lea
jmp
push
mov
mov
push
lea
jmp
setle
repz
pop
shl
cmp
ror
mov
jmp
jmp
mov
pushf
call
jmp
clc
rcr
mov
cmp
sub
pusha
lea
jae
inc
pushf
inc
call
mov
mov
pushf
pushf
pushf
push
mov
call
mov
push
push
pushf
lea
jmp
call
jmp
push
mov
mov
pushf
mov
mov
pushf
pusha
mov
pushf
pop
lea
jo
pusha
push
pop
pushf
lea
jmp
push
pusha
pusha
mov
jmp
call
jmp
shl
mov
cmc
cmp
sar
mov
push
jmp
push
pushf
mov
jmp
mov
sub
test
stc
test
call
call
call
movsx
movsx
inc
sub
movzx
btr
rcr
neg
ror
mov
bts
rol
stc
shl
not
neg
sub
dec
dec
inc
btc
mov
pusha
add
call
mov
clc
stc
add
call
call
pushf
inc
test
neg
mov
bt
rol
pushf
test
sub
pusha
push
push
mov
test
bt
sub
jmp
lea
push
push
mov
mov
lea
jmp
jmp
clc
bt
ror
pushf
test
add
cmc
bt
rol
cmc
xor
clc
mov
mov
cmc
cmc
stc
sub
cmc
lea
jo
cmc
add
pushf
mov
mov
pusha
lea
jmp
push
pop
btr
adc
push
bts
mov
call
call
mov
lea
jne
pusha
rcr
sbb
jmp
call
pusha
push
pushf
pop
jmp
cmp
cmp
sub
pusha
add
pusha
call
stc
inc
jmp
