mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
adc
xchg
neg
push
dec
mov
add
aam
jp
test
adc
js
repnz
daa
stos
mov
xchg
inc
and
rcr
sti
push
scas
jne
jl
(bad)
pusha
jbe
daa
xchg
call
push
in
xor
sti
bnd
popa
lea
push
pop
cmp
and
pop
test
cmp
or
or
in
sub
stos
loop
shr
arpl
jo
jae
xlat
in
scas
rol
fisub
xchg
xchg
push
jmp
and
pop
enter
stos
add
out
rol
xchg
data16
ret
inc
inc
(bad)
dec
ins
scas
fwait
shr
cli
pop
cmp
(bad)
out
inc
jae
bound
pop
jmp
retf
cld
scas
adc
aad
call
aas
dec
sbb
or
pusha
jp
xchg
fs
arpl
xchg
and
cs
leave
adc
mov
push
call
pop
outs
sub
mov
test
setb
jne
and
mov
pop
shl
mov
mov
leave
or
or
inc
or
popa
pop
xlat
(bad)
cmp
ins
jne
push
adc
mov
fldcw
sbb
adc
js
retf
jnp
mov
popf
lahf
push
test
ins
fwait
push
pop
call
ret
jecxz
lahf
dec
adc
iret
(bad)
cmp
jb
cmps
lods
jp
stos
add
xor
pop
jnp
mov
mov
arpl
mov
xor
sub
dec
jno
inc
outs
push
adc
rol
jnp
pop
mov
jb
or
or
mov
mov
mov
out
stc
retf
cdq
add
mov
loop
add
mov
push
sbb
push
mov
push
in
(bad)
movs
div
mov
sti
push
adc
pop
push
pop
mov
int
ss
push
js
loopne
gs
in
mov
movs
scas
mov
sub
mov
sub
adc
into
or
mov
jecxz
out
popa
mov
or
aas
or
sar
(bad)
ret
push
loope
or
or
test
push
push
add
and
ins
mov
dec
leave
aam
lods
cli
or
inc
mov
xchg
xor
xchg
call
xchg
sbb
inc
pop
mov
sti
mov
mov
scas
les
loopne
xor
adc
xor
pop
iret
sub
adc
jecxz
retf
cmp
cdq
pop
cmps
ror
in
repnz
stc
jp
pop
sbb
nop
dec
fadd
cli
retf
mov
adc
adc
fmul
push
xor
sbb
fldcw
and
push
cmc
mov
push
test
data16
pop
leave
inc
add
adc
ror
sahf
sub
adc
and
pusha
sbb
fwait
cmp
jae
mov
stc
les
sub
sbb
cld
mov
cs
and
ds
mov
and
lea
cs
mov
push
repz
xchg
das
sub
or
xchg
push
call
mov
pusha
mov
retf
add
fs
(bad)
jecxz
xchg
add
rcl
push
dec
in
adc
fisub
das
addr16
add
jo
mov
inc
daa
sbb
dec
out
adc
fnsave
je
out
inc
fstp
idiv
mov
push
retf
xchg
add
or
xor
enter
mov
movs
enter
mov
dec
cli
xor
cmp
mov
and
shl
mov
data16
fwait
jo
mov
or
je
addr16
aas
jp
fwait
in
xchg
pop
cmp
je
push
imul
into
jecxz
imul
push
aam
loop
ds
lea
pop
adc
ja
stc
leave
fcomp
(bad)
mov
addr16
inc
push
test
out
xchg
cld
sub
inc
sar
jl
mov
outs
xchg
mov
xlat
push
loop
enter
or
ret
inc
fmulp
adc
push
sub
pop
aaa
sub
ins
or
(bad)
cmp
popf
inc
adc
or
ins
ror
outs
outs
or
pop
xchg
inc
shl
sbb
jle
aaa
cdq
js
jns
mov
or
aas
xchg
(bad)
mov
xor
cmp
mov
stos
pop
loope
popf
push
and
add
enter
xchg
ss
fistp
lods
pop
loopne
xor
inc
lods
ds
push
jno
or
inc
and
aas
push
jo
pop
push
(bad)
jl
cwde
fstp
nop
push
inc
cs
pop
addr16
cld
hlt
push
pop
adc
arpl
iret
sti
ds
nop
sbb
dec
jnp
xchg
xchg
adc
xchg
sub
out
pop
xor
add
in
add
xchg
ret
xchg
lods
adc
cmp
jle
sbb
mov
add
push
inc
in
jecxz
add
out
call
mov
add
mov
mov
mov
fwait
shr
sti
xor
inc
imul
int3
ins
and
add
es
push
and
dec
aaa
add
mov
scas
inc
mov
aas
mov
(bad)
xor
int
ja
aaa
popa
in
dec
aaa
sbb
xor
xchg
pop
in
cli
jle
push
pop
pop
xor
mov
into
das
rep
push
xchg
loopne
mov
pop
add
popa
add
xchg
repnz
mov
in
ins
imul
push
scas
and
pop
jg
mov
adc
inc
pusha
stos
push
repnz
loopne
ret
(bad)
sbb
outs
stos
jl
int
cmp
mov
pop
cmp
cmp
adc
mov
aam
aas
inc
sub
in
xor
add
mov
jmp
retf
fdiv
xchg
pop
jmp
push
mov
jmp
xlat
in
xlat
lods
fst
jnp
ret
mov
(bad)
and
(bad)
adc
inc
and
dec
adc
cmp
lock
out
jp
sbb
mov
push
jbe
bound
pop
pop
in
jle
xor
mov
(bad)
mov
dec
in
inc
and
je
ror
sbb
test
fcmovb
or
mov
lods
mov
movs
clc
mov
call
xlat
sbb
inc
adc
lds
or
(bad)
jae
mov
in
mov
mov
jle
cmps
fistp
enter
or
es
cmps
sub
xchg
fldcw
pop
shl
sbb
in
imul
cmp
fwait
jo
cmp
sub
push
push
fs
mov
xor
(bad)
ss
jl
xor
pop
mov
iret
sub
sub
mov
inc
mov
cld
jnp
setl
dec
xor
xchg
sub
in
adc
xor
dec
and
cli
cmp
icebp
icebp
mov
stos
ss
mov
mov
inc
mov
call
inc
or
leave
test
aam
test
jb
rol
pop
push
pop
xlat
sub
add
les
popf
fcom
pop
lock
retf
mov
jns
sti
test
mov
fmul
sub
xchg
icebp
fstp
inc
out
retf
(bad)
(bad)
xlat
movs
in
jns
jbe
sahf
retf
cld
jnp
pop
outs
cld
imul
push
vmovaps
repnz
lea
jne
sbb
lock
pop
push
mov
add
call
sbb
popa
stos
lods
add
xchg
lahf
(bad)
mov
jge
js
mov
cld
fdivr
pop
fild
lea
ss
test
jp
clc
mov
inc
inc
dec
out
pop
push
cdq
movs
jo
movs
mov
popa
cmp
setnp
aaa
xor
out
mov
je
xchg
jecxz
push
jl
add
xchg
cmp
fdiv
(bad)
ds
jmp
(bad)
es
test
je
jp
scas
cmp
cld
jo
and
pop
mov
call
sbb
sub
jmp
cmps
call
cmp
pop
adc
xlat
aaa
mov
aaa
mov
dec
icebp
rcl
fist
test
gs
sbb
or
mul
popa
push
pop
lods
cmp
nop
adc
dec
movs
aaa
mov
inc
xor
jmp
sbb
xor
inc
and
popa
cs
icebp
push
and
icebp
fisttp
movs
nop
das
in
sbb
sbb
aas
cmp
sub
mov
sbb
arpl
or
fist
add
out
xchg
(bad)
call
jnp
(bad)
and
call
mul
aaa
push
dec
inc
mov
inc
popf
jne
pop
sub
mov
inc
jno
(bad)
outs
lods
dec
fstp
mov
add
mov
mov
nop
push
fisttp
cmp
stc
push
adc
sbb
and
cmc
fst
dec
jo
jg
add
mov
add
and
xor
pop
jmp
cs
or
das
add
(bad)
in
das
ficomp
into
cmp
scas
pop
pop
push
push
inc
inc
ds
jecxz
stos
pop
sbb
js
mov
lea
jns
sbb
in
and
cli
scas
retf
jo
out
inc
sahf
adc
outs
repz
ret
mov
arpl
push
ins
stc
mov
ins
mov
mov
mov
dec
add
and
popf
jnp
mov
jne
add
jbe
es
dec
scas
pop
push
mov
sbb
pop
test
sbb
in
icebp
mov
test
mov
jns
pop
xchg
push
mov
dec
(bad)
add
mov
mov
std
mov
sbb
sub
push
dec
or
aaa
fwait
lea
inc
scas
jb
and
mov
out
push
dec
and
iret
data16
add
add
sahf
sbb
sti
sbb
test
inc
sub
leave
pop
push
inc
dec
fsubr
sahf
xor
jno
xlat
aas
cmps
setp
popa
pop
sub
or
cmp
xchg
add
and
jmp
retf
sub
shr
sub
cmp
imul
mov
les
mov
jo
push
call
push
mov
test
xlat
inc
add
cmps
sub
cmp
shl
sti
add
cli
(bad)
fidiv
imul
mov
idiv
push
push
xor
xchg
mov
pop
sar
aaa
mov
fwait
jns
adc
inc
or
ret
inc
xchg
ret
push
mov
or
adc
xchg
mov
and
call
sub
push
adc
inc
stos
test
cld
pop
dec
adc
das
xchg
mov
repnz
sbb
pop
pop
aad
sub
dec
cwde
std
scas
push
loopne
fdivr
outs
imul
cmps
out
lods
xlat
and
into
aam
aam
dec
stc
mov
adc
outs
lods
jo
fstp
into
and
popa
push
addr16
adc
lods
inc
data16
(bad)
lods
mov
cmp
pop
mul
add
shl
inc
or
stos
in
scas
xchg
push
ficomp
dec
mov
dec
xor
data16
mov
push
into
xor
jecxz
cmp
or
pushf
mov
test
inc
sti
shl
mov
jge
or
ds
add
imul
imul
jo
(bad)
lods
hlt
xor
popf
test
sahf
jg
ja
pop
or
repz
xchg
gs
retf
cdq
mov
fs
jmp
test
xor
sub
repz
fistp
sub
pop
jl
xlat
pop
or
(bad)
fidiv
mov
sub
in
adc
sub
std
fsub
cmps
sahf
mov
mov
mov
sbb
or
push
xchg
mov
jne
lea
mov
rcl
sbb
scas
cmp
adc
(bad)
repnz
jge
aad
adc
out
iret
int3
stos
jmp
mov
cmc
add
push
stos
jecxz
xlat
loopne
(bad)
dec
ret
mov
mov
fisubr
ror
jnp
jmp
dec
adc
cli
shl
jo
or
call
mov
adc
inc
in
mov
dec
neg
or
cdq
mov
dec
aas
iret
jno
mov
and
inc
aas
jbe
aaa
enter
ror
leave
dec
movs
cmp
mov
pop
popa
ins
jo
and
adc
lahf
ds
fisub
mov
test
push
push
ss
into
adc
add
dec
dec
out
mov
ins
call
cmp
mov
cmp
lods
fdivr
inc
sbb
push
mov
in
and
dec
lea
adc
xor
clc
push
ss
dec
push
push
jp
cmp
test
movs
loop
xchg
mov
mov
push
mov
jl
popa
shl
pop
add
mov
cmp
scas
xlat
or
sub
inc
sub
xor
fs
ficom
sahf
out
(bad)
out
lds
xchg
xlat
xlat
jb
xlat
mov
bound
sbb
outs
adc
mov
mov
into
mov
dec
add
jl
sub
scas
sbb
(bad)
pop
clc
sub
lock
xor
rcr
inc
inc
and
movs
push
lea
imul
mov
sub
jnp
push
inc
icebp
test
inc
stos
mov
mov
movs
add
popa
out
out
imul
sub
(bad)
sbb
sti
mov
mov
and
jb
sub
cmp
ja
test
sti
and
mov
push
fwait
mov
test
sbb
dec
jns
out
pop
addr16
pop
hlt
neg
int3
mov
mov
sub
mov
das
sbb
repz
sbb
test
fmul
imul
enter
sbb
xor
stos
push
jbe
dec
jb
sahf
stos
dec
pop
outs
pushf
dec
movs
cmp
jp
js
xchg
jmp
jno
dec
mov
cmps
inc
mov
mov
imul
or
xchg
add
adc
stc
and
mov
pop
xchg
pop
idiv
outs
or
push
cmc
pusha
(bad)
setnp
mov
test
scas
mov
inc
mov
push
mov
data16
add
mov
outs
lds
jg
(bad)
inc
and
es
mov
adc
popf
fwait
cdq
jp
add
adc
outs
inc
or
xor
shr
sub
icebp
dec
mov
cvtdq2ps
rol
xchg
cmp
adc
push
xchg
ins
cwde
mov
adc
push
sti
adc
jno
daa
fs
ret
cwde
lea
jne
bound
call
shl
pop
ins
cs
xlat
jnp
push
test
fisttp
sbb
call
mov
push
retf
dec
mov
inc
push
test
stc
repz
mov
mov
cmps
fnsave
jbe
imul
xchg
mov
mov
stc
pop
mov
adc
sub
inc
jecxz
push
jns
sbb
adc
sahf
jmp
lea
outs
lods
pop
icebp
fisub
rcl
aas
add
xor
ret
(bad)
adc
push
jo
pop
sub
xchg
adc
add
xchg
add
mov
push
cli
push
sbb
sub
sub
aas
mov
pusha
xlat
scas
test
add
or
mov
xchg
mov
cdq
cmp
mov
add
push
out
or
fisttp
(bad)
push
arpl
sbb
rcr
add
fwait
sbb
in
xlat
or
mov
jno
xchg
cwde
dec
dec
cld
adc
push
inc
cmp
(bad)
xlat
cmps
cmps
inc
push
xchg
out
popf
call
sbb
sub
pop
out
arpl
cmp
add
and
mov
mov
adc
fst
cmp
dec
xor
pop
jmp
in
pop
xchg
pusha
add
inc
call
into
mov
jmp
push
lahf
cmp
test
repnz
loope
cmp
fiadd
sti
jns
ror
push
in
enter
dec
add
into
fistp
or
add
repnz
js
pop
pop
aas
into
and
cs
mov
outs
sub
jl
jecxz
ret
fnstsw
pop
aaa
fs
(bad)
cld
cmp
and
bound
das
inc
sbb
cmp
cli
add
cmps
xor
psubq
sti
ds
test
test
mov
sbb
xchg
lock
rcr
(bad)
jg
push
ds
leave
xchg
ds
mov
xchg
mov
mov
xchg
jg
(bad)
mov
(bad)
pop
fisubr
xchg
jmp
mov
iret
(bad)
xor
pop
inc
and
sbb
xor
mov
les
add
jmp
stos
mov
adc
stos
mov
jnp
xchg
daa
and
adc
jle
xchg
push
pop
ds
je
ds
xchg
sbb
add
fld
gs
inc
aaa
test
push
sbb
shl
mov
mov
mov
mov
mov
mov
xchg
jg
cmp
ret
xchg
jmp
fnstsw
jmp
mov
push
stos
cdq
movs
cmp
test
sahf
out
lea
pop
jg
xor
mov
push
or
std
imul
rcl
jb
and
jecxz
imul
test
cmp
jmp
idiv
pop
test
aas
cmp
les
jae
jp
or
lods
mov
idiv
jnp
xor
out
popf
loop
leave
pop
inc
xchg
test
xchg
cmp
test
inc
mov
int3
dec
push
adc
inc
sub
(bad)
cwde
sbb
and
repz
in
dec
and
mov
xor
fadd
ss
inc
hlt
pop
pop
inc
xor
lods
iret
aaa
in
shl
dec
mov
sbb
movs
mov
jmp
ss
mov
cmp
iret
arpl
clc
outs
int
inc
fist
sub
fadd
jl
out
test
mov
jno
adc
hlt
nop
ja
outs
ja
sbb
call
(bad)
rcr
cmp
pop
mov
adc
cmps
inc
pop
loope
inc
jmp
jno
vpunpcklqdq
add
ret
inc
dec
and
jbe
adc
rcl
mov
adc
add
mov
fcom
push
ror
push
idiv
xor
dec
push
xor
inc
dec
and
mov
mov
or
outs
iret
push
and
test
mov
mov
jno
leave
inc
ins
repz
adc
out
jb
and
push
test
xchg
jne
pusha
fst
jle
jecxz
xchg
adc
push
leavew
out
fsub
adc
or
mov
xchg
int3
pop
sbb
retf
lods
jl
mov
dec
mov
repz
test
push
retf
xor
xor
mov
std
mov
mov
rcl
or
cmp
push
(bad)
rcr
mov
test
adc
popf
mov
push
xchg
push
mov
mov
adc
mov
loopne
test
sbb
jmp
cdq
push
dec
cmp
jae
jmp
inc
jae
popa
push
jno
out
pusha
add
bound
loop
cs
sub
pop
(bad)
aas
or
jno
dec
bound
jb
aad
sub
shl
adc
xchg
movs
fdivr
and
outs
dec
dec
int
push
cmps
mov
mov
aaa
pop
popf
sub
and
loope
pusha
lods
add
lods
fcmovnu
jnp
jo
jb
jmp
dec
mov
in
call
dec
inc
cmp
sub
(bad)
pusha
enter
mov
pushf
mov
je
xchg
stos
xor
jae
xchg
les
add
lahf
idiv
push
push
repz
add
mov
cs
aaa
pop
dec
sub
arpl
or
xor
cmps
mov
mov
jnp
inc
push
jnp
aam
ficom
mov
cmp
sub
cmps
add
push
push
and
lods
ja
shl
mov
pop
push
dec
out
pop
movs
mov
sbb
dec
repz
xchg
fild
loope
mov
mov
enter
cmp
pop
shl
pop
and
cmp
mov
mov
push
adc
ds
or
scas
loope
push
sbb
push
pop
inc
(bad)
es
fs
das
mov
and
test
ror
mov
xor
out
retf
lds
sti
sbb
popf
and
lods
lea
call
pop
int
popa
call
push
aas
xchg
sub
cmp
or
sahf
nop
mov
jns
jae
ficomp
xchg
popf
adc
jnp
pcmpgtb
repnz
xor
mov
ja
jge
ds
sbb
push
xor
aad
loopne
inc
cwde
jecxz
std
pop
sbb
out
(bad)
push
push
rcr
jecxz
pop
and
cmp
cwde
mov
mov
lock
icebp
in
adc
and
test
pop
or
sub
inc
(bad)
clc
cld
push
test
les
call
push
scas
jne
fwait
jae
lahf
stc
dec
aam
mov
mov
popa
(bad)
div
mov
cmp
ins
ss
jg
out
aad
loop
and
and
mov
pusha
cs
dec
cmp
and
sbb
mov
adc
xchg
shl
xor
mov
cmp
lea
lds
daa
pop
mov
push
ins
sti
cmp
sbb
ficomp
and
cmp
inc
cmc
mov
clc
mov
mov
cmp
shl
mov
push
es
call
and
dec
dec
out
dec
push
dec
test
ficom
aaa
shr
sbb
mov
jnp
mov
cmp
dec
mov
inc
inc
in
in
rcr
aam
ret
or
loope
dec
cmp
int
cmp
mov
cs
(bad)
nop
or
sub
sar
xchg
push
cdq
cmp
mov
and
int3
and
rcr
xchg
test
mov
call
lock
pop
lods
aaa
mov
cdq
pop
xchg
or
mov
dec
push
rcr
inc
std
repnz
cmc
push
rcl
mov
inc
(bad)
gs
imul
sbb
xchg
clc
daa
fs
les
(bad)
hlt
ficom
push
xchg
cdq
into
aaa
je
pop
adc
cmp
inc
mov
(bad)
call
out
push
bound
arpl
mov
and
jge
not
std
popf
nop
adc
repz
loope
imul
sub
xchg
add
(bad)
loope
or
sti
or
pop
adc
je
pop
shl
pop
cmc
xor
aas
inc
scas
xorps
adc
push
and
mov
sbb
xchg
dec
adc
jne
dec
and
bound
xchg
xor
inc
inc
mov
jmp
lea
fmulp
inc
(bad)
or
adc
pop
dec
aaa
mov
sub
jo
xor
cmp
push
(bad)
cmp
shl
adc
or
cmp
adc
in
int
xlat
loope
iret
aas
sub
stc
in
mov
repnz
dec
fsub
ds
sahf
sti
cli
mov
lds
out
gs
jg
dec
cli
xor
je
dec
add
cdq
mov
jbe
xchg
sub
sbb
fstp
addr16
sub
or
dec
push
(bad)
(bad)
dec
add
in
sbb
imul
ja
jb
xor
pop
mov
cmp
push
adc
cdq
mov
add
aaa
adc
std
sub
sbb
fld
dec
xchg
xchg
dec
retf
in
and
imul
sbb
adc
nop
inc
seto
jae
dec
imul
or
loope
leave
retf
sbb
xor
xchg
xchg
jno
jno
cwde
gs
mov
xchg
jle
jbe
in
and
out
dec
aas
nop
inc
aaa
push
ret
mov
(bad)
retf
test
and
(bad)
mov
ds
cs
sahf
inc
ret
mov
bnd
imul
cmps
dec
rol
pop
dec
pop
icebp
sbb
rdtsc
daa
add
xor
push
sbb
stos
cli
or
add
jo
add
out
push
push
or
addr16
jae
push
cmp
xchg
xchg
iret
jb
cwde
mov
xor
jmp
cmp
dec
sbb
or
ins
out
ja
xchg
retf
imul
sub
xor
fsub
pop
lea
stos
imul
popa
xchg
cmp
stc
fld
fs
stos
xor
repnz
mov
stos
push
sti
or
or
or
repnz
leave
pop
mov
cdq
and
imul
jmp
adc
scas
jbe
jo
hlt
sub
movs
jno
xor
cmc
je
pop
(bad)
lahf
sub
mov
inc
dec
push
jbe
xchg
inc
retf
movs
push
xchg
xchg
movs
jno
mov
(bad)
push
inc
addr16
loope
outs
out
fsubr
add
sbb
inc
pusha
aaa
ret
mov
cmp
adc
xchg
jl
and
ins
add
fadd
adc
push
and
addr16
mov
push
mov
xor
data16
xor
inc
outs
stc
pop
into
or
movs
cmps
jnp
aad
mov
outs
push
mov
add
ins
ret
mov
push
xchg
(bad)
das
push
gs
cmp
stos
aam
sub
lea
add
mov
cmc
addr16
inc
sbb
and
out
jns
mov
sbb
xchg
cs
sbb
adc
dec
inc
outs
and
or
fdiv
into
das
dec
lahf
mov
push
das
mov
cli
nop
ja
in
mov
sbb
out
ror
and
mov
push
jno
or
data16
mov
jl
mov
mov
cld
aam
sub
or
frstor
rcl
das
cmp
retf
cmps
pop
inc
ss
mov
sub
jns
or
sbb
mov
cmp
sahf
ja
push
ret
mov
sub
(bad)
std
loop
xor
inc
mov
pop
es
mov
out
aam
add
stos
sahf
sbb
inc
inc
test
(bad)
push
jae
inc
aam
aas
fisub
sub
pop
mov
mov
mov
and
xor
mov
cmp
mov
cmps
or
inc
or
pop
cld
pusha
cmp
ss
(bad)
xor
mov
mov
or
es
mov
(bad)
adc
push
fstp
sbb
pop
adc
pushf
push
mov
mov
fidiv
inc
repz
xchg
or
stc
mov
mov
mov
xor
test
js
push
add
std
cmc
stos
cmp
xor
in
retf
divps
sbb
lds
pop
cmp
clc
inc
mov
xor
push
int
cmp
loop
mov
jbe
push
mov
xchg
add
into
stos
xchg
jns
lea
xor
pop
pushf
xchg
test
hlt
sti
cmp
jae
dec
lods
pusha
or
je
jae
mov
dec
mov
and
and
jne
pop
rcl
imul
shr
push
jecxz
or
icebp
into
ds
jns
pop
dec
and
sti
inc
dec
mov
pop
sbb
jle
(bad)
fmulp
int
lods
xor
jns
iret
push
fwait
out
je
std
jb
(bad)
movs
loope
inc
mov
jns
inc
dec
repz
pop
in
mov
retf
jns
(bad)
mov
mov
arpl
xor
cmp
addr16
jecxz
jns
or
mov
test
jne
int
cmp
(bad)
cwde
adc
adc
adc
jbe
cmp
call
ss
rcl
xor
imul
pop
sub
aas
jnp
pop
sub
rcr
mov
rcl
adc
test
test
pop
clc
dec
movs
xlat
jnp
jae
mov
ret
and
dec
shr
ror
push
jmp
iret
outs
in
fild
xor
add
stos
pop
and
sbb
adc
dec
xchg
pop
inc
sahf
test
sbb
cmp
sti
xchg
fisub
jle
xor
xor
sub
or
push
jbe
cmps
stos
(bad)
mov
outs
scas
sbb
leave
dec
cmp
xlat
in
lahf
loopne
leave
aam
stos
jmp
and
add
fldcw
push
inc
or
cmp
dec
xchg
inc
mov
cdq
xchg
add
dec
add
pop
aad
add
cmp
push
lods
and
inc
xlat
stos
pop
push
adc
fiadd
shl
mov
enter
cwde
into
xor
xchg
neg
dec
and
nop
inc
int3
loopne
mov
into
jno
aam
sbb
mov
sbb
mov
call
sub
fdivr
icebp
pop
and
cmp
mov
sar
rol
mov
pop
xchg
add
movs
cmp
gs
and
sbb
repnz
aad
stc
pop
das
cmp
call
xchg
cmp
jl
arpl
push
outs
mov
dec
mov
test
jg
add
sbb
mov
shl
mov
xchg
xchg
pop
push
js
add
dec
fs
inc
cwde
push
clc
mov
pusha
mov
jbe
das
sub
jmp
ds
out
aas
sbb
pusha
push
es
je
fcomp
push
pop
mov
xchg
(bad)
or
scas
dec
stc
jns
pop
in
fwait
icebp
xor
dec
fstp
popf
push
jmp
cmc
repnz
add
cld
xor
cld
adc
xor
dec
dec
idiv
retf
mov
jl
xchg
pop
xchg
stos
mov
and
repz
sbb
xor
inc
test
mov
inc
xor
movs
sub
leave
test
mov
iret
idiv
js
jge
(bad)
cmp
test
mov
jmp
std
ds
sub
and
loop
cmp
into
sahf
enter
sbb
sbb
fdiv
mov
lods
cdq
into
or
xchg
outs
cmp
lahf
in
aas
xor
and
sub
xchg
jg
mov
dec
inc
cmp
and
and
stc
sbb
or
call
pop
loop
or
jp
data16
xchg
out
adc
xchg
xchg
mov
push
and
test
and
pop
mov
pop
cwde
outs
iret
cwde
inc
cld
ror
comiss
(bad)
sbb
jmp
pop
or
pushf
lahf
fwait
mov
adc
jns
sbb
mov
imul
cmp
xor
mov
jmp
je
dec
mov
jmp
lods
push
mov
mov
fnstcw
adc
lea
pop
retf
fsubr
push
push
adc
jmp
ds
xchg
mov
xchg
mov
mov
daa
test
inc
idiv
scas
and
popf
popf
and
mov
scas
ja
ret
arpl
cmc
fwait
pusha
mov
not
cmp
inc
(bad)
adc
pop
sub
cmc
repz
push
stos
jl
loop
mov
inc
sbb
iret
mov
movs
test
rcl
out
sbb
push
data16
repz
add
or
sbb
arpl
shl
mov
adc
inc
push
sub
adc
stos
jo
inc
xchg
dec
loop
pushf
xor
add
fldcw
sbb
or
adc
clc
mov
pushf
mov
addr16
je
pop
or
and
ret
test
mov
dec
mov
ret
fistp
hlt
ja
xchg
cli
adc
ja
inc
into
(bad)
lahf
je
mov
aad
cmp
ror
xor
retf
inc
xchg
repnz
cmc
mov
pop
dec
data16
xchg
out
(bad)
adc
test
inc
sub
dec
aam
push
(bad)
push
fild
sub
inc
cmps
mov
neg
icebp
popf
sub
call
dec
add
mov
arpl
sbb
sar
repz
loop
rol
xor
aaa
xchg
mov
add
scas
sbb
adc
mov
ja
popf
ss
or
mov
lods
call
fadd
retf
cmp
into
shl
jmp
cmp
cmp
jne
loope
pop
repz
addr16
xor
lock
jnp
xchg
call
(bad)
push
mov
mov
scas
in
and
btc
mov
adc
dec
mov
xchg
pop
scas
cmp
out
stos
mov
mul
ss
je
cwde
cmps
lea
lock
jnp
adc
jb
and
mov
(bad)
jo
xchg
aam
rol
stos
popf
or
sbb
push
jnp
out
cmp
loope
mov
push
jo
out
mov
stos
push
cmc
outs
add
js
test
ret
les
or
mov
cmp
iret
mov
and
popa
xlat
popf
xchg
push
xchg
stos
iret
mov
inc
mov
popf
pop
xchg
icebp
jno
(bad)
loop
fld
mov
addr16
or
cmp
ja
hlt
cli
jnp
xor
adc
mov
sbb
dec
fwait
sub
push
dec
pop
mov
and
mov
and
scas
xchg
rcl
lahf
js
jnp
es
inc
mov
in
das
sbb
lea
out
or
add
xor
stc
sbb
pop
dec
clc
adc
jnp
outs
push
mov
sub
inc
add
cs
jae
loop
js
pop
pop
out
rol
in
or
jp
jmp
or
fcmovu
in
in
stos
test
shl
mov
pop
dec
shl
iret
mov
or
add
(bad)
outs
pop
icebp
cmp
loope
lods
je
das
repnz
cmps
push
cmp
(bad)
repnz
fsubr
je
out
cmp
inc
mov
jle
test
xchg
sbb
in
pop
mov
inc
push
or
out
shr
sbb
popf
dec
add
add
test
inc
jns
lods
icebp
pop
xor
pop
scas
or
sbb
jae
je
sbb
push
push
fwait
xor
iret
lock
push
sbb
cmp
sbb
jne
jnp
xchg
mov
sbb
sbb
fistp
mov
ret
fnstsw
shl
stos
xlat
push
mov
sub
or
sub
cmps
jne
sbb
add
sub
mov
(bad)
pusha
mov
sbb
pop
mov
mov
ja
xlat
(bad)
mov
mov
fcomp
iret
inc
out
in
xchg
adc
inc
adc
into
push
pop
loop
add
and
lea
jl
pop
adc
add
rol
cmp
dec
aas
out
punpckldq
mov
imul
ror
inc
cli
sbb
mov
inc
add
adc
mov
push
mov
xlat
jge
dec
push
jle
jo
ins
push
mov
les
xchg
pushf
popf
cmp
mov
pop
mov
adc
mov
out
mov
lds
aaa
(bad)
aam
test
movs
(bad)
stc
ror
push
xchg
cmp
loope
shl
ins
jne
sub
and
cmp
pop
imul
or
inc
popa
ja
bound
ja
bound
js
rcr
cmp
sub
loop
test
clc
dec
and
pop
pop
sub
pop
push
lds
xchg
add
push
dec
in
or
cmps
shl
shr
popf
pop
loope
mov
xchg
jmp
push
jae
cmps
pextrw
mov
cld
push
mov
push
test
repnz
movs
std
jae
push
retf
jecxz
int3
ret
cmc
imul
mov
leave
js
and
mov
mov
(bad)
in
clc
movq
mov
add
dec
pop
and
push
out
cmc
mov
sub
mov
test
jmp
fwait
cld
dec
add
addr16
xchg
sbb
aad
jmp
adc
jb
arpl
cmp
int
movs
jnp
arpl
test
mov
arpl
jle
loop
iret
aad
xlat
stos
test
(bad)
inc
and
loope
(bad)
(bad)
and
lods
(bad)
retf
in
push
mov
imul
push
sub
mov
inc
add
aaa
and
mov
xchg
cwde
movs
stos
jecxz
dec
wbinvd
and
fwait
das
mov
rcl
mov
push
and
pushf
rol
add
jge
ror
xor
imul
retf
dec
sar
jb
or
dec
cs
cdq
dec
call
mov
fist
rcr
scas
pop
adc
push
pop
iret
cmp
iret
fst
add
(bad)
loopne
push
out
xlat
and
jg
fistp
push
mov
sub
add
lahf
mov
bound
inc
or
mov
pop
enter
mov
cmp
aad
and
mov
ss
jle
mov
jmp
ret
dec
or
ss
mov
fdiv
pop
and
rcl
inc
aaa
pop
xchg
not
lea
daa
pusha
push
popa
xchg
mov
sub
xchg
js
(bad)
(bad)
fcmove
sub
(bad)
sar
sahf
iret
leave
(bad)
push
ins
aam
in
out
sub
loop
rol
jb
mov
popa
or
in
xor
push
and
in
jno
in
xchg
xchg
jns
push
inc
push
ret
js
dec
ja
enter
xchg
sti
sub
clc
(bad)
fnstenv
sbb
sbb
sbb
adc
fcom
dec
retf
jo
ret
(bad)
mov
mov
in
push
pusha
push
out
out
in
adc
mov
add
push
hlt
jge
in
mov
xchg
cld
jmp
daa
jbe
jmp
cdq
mov
ds
cmp
mov
pop
pop
xchg
add
fst
clc
mov
push
adc
in
push
dec
retf
cmps
js
test
not
ins
or
pushf
cmps
ror
mov
ja
pop
pop
sub
int
jmp
and
mov
out
sub
in
ret
mov
scas
xchg
mov
jl
push
sub
jne
cmp
and
push
call
pusha
(bad)
je
push
sahf
test
sbb
ret
and
mov
jae
sub
xlat
push
loopne
into
int3
lods
inc
stos
sub
or
cmp
mov
scas
stos
pop
shl
outs
jae
adc
(bad)
pop
or
inc
jmp
in
push
mov
sub
mov
push
xor
mov
xchg
fadd
les
sbb
(bad)
jnp
sbb
push
push
jno
aaa
dec
pop
inc
adc
push
dec
jno
sub
lods
scas
cmps
push
addr16
das
sbb
cld
mov
jnp
and
fcmovb
and
dec
push
mov
push
push
mov
mov
imul
or
mov
xor
lea
pop
xor
jnp
cmp
loop
call
mov
jne
out
cmp
movs
inc
mov
stos
push
push
mov
add
jno
push
xor
xor
sbb
ins
bound
jmp
pushf
cld
cmc
(bad)
lock
out
mov
scas
jmp
mov
imul
icebp
pop
aam
lods
push
ss
loop
ss
jne
into
jecxz
fisubr
loopne
xchg
jo
cmp
pop
out
push
inc
jecxz
in
jl
mov
mov
(bad)
push
sbb
pop
jno
mov
int
dec
cmp
push
out
xchg
mov
aaa
cdq
adc
ins
pop
jmp
mov
imul
sbb
xchg
pop
sar
or
scas
aam
push
jle
xchg
mov
ins
loop
popa
repnz
ret
(bad)
cmp
fcmovnu
mov
out
mov
jecxz
nop
xchg
cmp
push
loopne
(bad)
dec
(bad)
shl
pop
jmp
jmp
outs
push
mov
test
sbb
les
loop
das
pop
mov
dec
xor
mov
or
mov
xchg
or
fimul
push
xor
imul
lahf
add
dec
popf
sar
inc
loopne
adc
and
fdivr
cmp
loopne
sbb
imul
sahf
cmp
xor
mov
add
mov
cli
add
jne
imul
fwait
cmp
clc
mov
je
mov
ret
inc
je
clc
popa
enter
adc
inc
adc
adc
pop
fs
push
adc
push
cdq
dec
cmps
mov
in
and
sub
jbe
ins
sub
inc
in
mov
sub
out
ret
add
dec
scas
pop
mov
jl
sbb
inc
lahf
into
gs
pop
popf
xor
shl
add
add
jle
pop
xor
sub
push
pop
cmp
jmp
out
adc
pop
cmp
xor
mov
add
cmp
mov
xchg
aad
adc
xor
mov
movs
stc
xchg
adc
data16
inc
je
stc
mov
fldcw
(bad)
aaa
push
xchg
add
add
mov
inc
lods
dec
daa
outs
jnp
xchg
ja
mov
and
daa
sbb
mov
int
xor
mov
xor
cs
fiadd
ins
ret
stos
push
icebp
mov
add
push
lock
adc
fst
(bad)
cmp
out
je
xor
fnstsw
xor
sti
(bad)
aam
stos
lahf
mov
gs
movs
mov
cmp
inc
pop
cdq
and
or
pop
mov
pushf
sbb
retf
mov
stos
rcl
jp
mov
or
daa
xor
aad
mov
in
retf
iret
lods
mov
shr
cs
sub
fisttp
daa
js
test
cmp
cmp
pop
clc
mov
clc
and
lds
wbinvd
hlt
jb
and
xor
sbb
fstp
in
cmp
imul
cs
js
xchg
mov
xchg
test
push
lds
mov
scas
fwait
in
imul
or
pop
pushf
pop
xchg
(bad)
adc
into
mov
push
sub
fldln2
jge
sar
(bad)
retf
cmc
mov
bound
das
jecxz
sub
shl
xchg
mov
push
sub
sbb
add
rcl
(bad)
(bad)
pop
jmp
push
in
je
sub
or
pop
in
xor
cmp
push
cmp
mov
add
jmp
leave
adc
not
sbb
cmp
mov
arpl
or
cmp
inc
cmps
bound
rcl
and
enter
add
ror
out
add
out
icebp
mov
jmp
xlat
clc
jl
push
test
es
aaa
dec
or
inc
xor
cli
dec
lods
hlt
ja
repnz
call
xor
fist
dec
sbb
pusha
js
dec
stc
xchg
clc
ja
mov
mov
shr
mov
std
inc
and
js
(bad)
push
sbb
push
jg
in
jbe
xchg
outs
lods
pop
sbb
adc
dec
mov
test
jnp
pop
add
xor
nop
cmps
addr16
or
adc
clc
cmp
add
cmp
and
das
inc
lea
dec
adc
and
mov
sar
(bad)
repnz
add
add
sbb
inc
lds
or
mov
mov
bnd
cmp
xchg
cwde
adc
xchg
shl
test
jno
adc
je
gs
rol
je
jnp
pop
arpl
shl
adc
xchg
mov
cmc
into
jne
push
adc
sbb
jmp
cmp
add
cmps
dec
mov
cmps
lds
cmc
ins
(bad)
call
inc
nop
pusha
dec
add
jb
(bad)
sub
mov
inc
fdivr
dec
bnd
addr16
adc
leave
ret
jb
retf
or
jnp
push
neg
and
pushf
push
xor
int3
stc
jl
and
and
test
lahf
daa
pop
pop
and
jmp
or
hlt
mov
hlt
inc
xchg
mov
dec
bnd
(bad)
mov
mov
sti
test
mov
mov
jp
mov
mov
dec
jnp
test
adc
jae
hlt
cmp
retf
mov
fdiv
jecxz
fwait
jg
in
test
and
mov
sar
in
inc
mov
jno
mov
call
xor
sbb
daa
outs
les
test
outs
xchg
ja
test
cli
cwde
mov
ds
push
jno
and
xchg
adc
cmps
cs
push
bound
arpl
inc
dec
ret
ret
es
cmp
shl
sbb
cmc
jno
popa
inc
jmp
arpl
xlat
stc
cdq
push
sub
pop
adc
jb
or
push
mov
sbb
xchg
xchg
or
sub
test
lahf
leave
test
retf
mov
or
daa
mov
add
shl
outs
pop
dec
pop
es
into
(bad)
lods
mov
sub
add
xor
fimul
test
idiv
ss
popf
mov
je
add
dec
fadd
xchg
xchg
xchg
ss
mov
sbb
movs
sub
pop
call
jg
popa
loop
cmp
jl
ror
mov
mov
push
movs
push
and
jae
cdq
pop
iret
adc
push
mov
aam
jo
inc
aaa
mov
dec
or
imul
jle
or
add
arpl
and
xor
inc
addr16
and
pop
ficomp
lock
inc
pop
test
cwde
jns
nop
popa
ds
movs
xor
push
push
dec
mov
stc
mov
jge
mov
mov
int3
xchg
mov
js
in
xor
cs
test
push
adc
push
sbb
inc
inc
retf
mov
jmp
mov
add
or
adc
repz
inc
cmp
and
or
mov
mov
push
push
inc
dec
push
sub
inc
out
cmps
add
rcl
or
mov
pop
add
in
cmp
fsubr
add
adc
mov
add
idiv
mov
les
shl
ficomp
pop
shr
imul
loop
ds
mov
sbb
and
dec
dec
xchg
and
xchg
or
fst
dec
stos
arpl
xchg
jnp
pop
inc
sub
repz
pop
test
dec
fwait
pop
sub
add
in
fld
add
aas
pop
inc
aaa
mov
dec
in
mov
arpl
icebp
mov
mov
xchg
fst
(bad)
es
mov
inc
stos
outs
pop
pop
mov
mov
dec
pop
xchg
push
sbb
xchg
gs
pop
sbb
mov
jnp
test
pop
mov
add
inc
jne
dec
inc
push
push
fcmove
gs
push
adc
int
xchg
cmp
popa
stos
mov
(bad)
xor
int
or
in
dec
jl
push
je
cmp
adc
mov
adc
retf
loope
and
lods
mov
mov
fnop
mov
test
xchg
fsub
adc
push
jne
pop
and
xchg
mov
call
adc
aam
add
loop
inc
fldcw
pop
jno
aas
dec
fs
mov
dec
add
xchg
fchs
mov
imul
mov
pop
mov
or
sar
inc
pop
inc
ins
sahf
and
sbb
outs
dec
mov
fcom
cs
in
ds
sub
pop
(bad)
cli
inc
fs
push
add
arpl
cs
xchg
cmp
adc
fs
jb
bound
cmps
cmp
in
fbstp
xchg
lock
cwde
push
sub
push
jg
sbb
xor
cmp
mov
inc
mov
cmc
call
add
sub
(bad)
ins
cwde
(bad)
fst
add
es
popa
sbb
mov
outs
movs
or
mov
dec
xor
xor
sub
icebp
retf
xchg
mov
pusha
push
add
xchg
repz
outs
mov
jge
scas
imul
aas
loopne
push
aaa
cwde
mov
jmp
test
lds
add
sbb
jo
fmul
and
sti
ret
mov
pop
int
mov
int3
inc
cwde
mov
popf
fcomp
sbb
jmpw
dec
inc
push
out
(bad)
and
popf
test
ret
jecxz
aas
xchg
mov
mov
add
sub
dec
sub
shl
cwde
js
pop
cmp
push
aas
mov
int
enter
pop
ret
mov
fmul
jbe
sar
pop
jl
mov
js
cdq
jp
in
stos
retf
loope
pop
rcr
push
lahf
sti
sub
es
pop
sub
mov
out
mov
jmp
push
stc
enter
loope
adc
adc
push
les
ret
pushf
repz
es
(bad)
sub
das
pushf
aam
mov
repz
cwde
push
mov
sbb
enter
push
stos
adc
mov
push
scas
cli
test
sbb
cmp
mov
xchg
fwait
pop
leave
dec
mov
nop
in
jae
pusha
mov
dec
sbb
push
out
cmps
lock
xor
push
jg
dec
cmp
pop
push
push
jno
test
sti
xor
add
mov
neg
(bad)
fadd
hlt
xchg
pop
stc
jle
repz
nop
iret
inc
das
inc
jecxz
push
xchg
aaa
or
call
test
add
sub
iret
scas
cmp
cmp
std
fstp
xchg
aad
jmp
pop
mov
push
xchg
xor
ss
mov
call
sub
out
cmps
push
jmp
shl
cmp
dec
jae
push
or
nop
outs
cwde
sti
out
fcmovb
and
mov
mov
push
hlt
jae
std
fsub
xchg
jns
ds
mov
rcr
mov
mov
out
addr16
push
lds
imul
and
jbe
push
call
jno
js
inc
sub
or
psubusw
hlt
pusha
mov
pop
fwait
inc
cmp
fild
sub
inc
adc
mov
fldenv
(bad)
mov
rcl
mov
outs
mov
and
xor
or
pop
jecxz
jle
iret
xor
jno
mov
or
outs
push
icebp
or
pop
movs
jg
fst
lock
lods
dec
ss
mov
jmp
jae
jns
bnd
xchg
inc
cmp
bound
pop
inc
int3
jo
xor
mov
cld
jmp
pop
mov
test
popa
jno
add
movs
ret
mov
test
rcr
(bad)
call
push
imul
push
mov
xor
push
pop
mov
xchg
inc
ds
lock
(bad)
retf
inc
dec
inc
aad
hlt
xchg
mov
pop
sbb
add
add
lods
xchg
cmc
mov
fmul
jmp
jo
sbb
leave
sbb
lock
inc
sub
push
mov
jg
lock
inc
sbb
ret
push
sbb
dec
cmp
push
ret
jns
idiv
jle
pushf
mov
sti
xchg
enter
test
jg
scas
mov
xor
sbb
push
call
jecxz
mov
mov
popf
pmuludq
xchg
jns
or
and
(bad)
sub
mov
jecxz
cmp
je
mov
test
mov
add
push
lahf
mov
(bad)
lea
pop
mov
xchg
out
mov
mov
cmp
aas
mov
mov
minps
jecxz
push
scas
pop
inc
push
dec
movs
pop
push
cld
and
iret
push
imul
add
mov
cmps
out
xchg
mov
ins
xchg
mov
imul
mov
jecxz
push
mov
xchg
hlt
xchg
ficom
sbb
test
mov
call
out
es
pop
in
push
lahf
popf
fimul
cdq
jecxz
retf
mov
aaa
idiv
sahf
inc
push
es
mov
les
jnp
adc
xchg
push
mov
mov
add
cmc
adc
or
mov
mov
scas
imul
cld
inc
pop
retf
out
pop
enter
fldenv
pushf
test
fnstsw
add
add
and
fnstenv
call
push
scas
btc
and
mov
popf
xor
and
jbe
adc
mov
call
or
mov
sbb
dec
cli
shl
sbb
xchg
scas
pop
inc
scas
pop
inc
sbb
bound
scas
and
nop
mov
in
lods
js
and
adc
mov
and
std
int
jmp
ss
(bad)
pop
lods
inc
sbb
mov
jns
out
retf
cmps
pop
leave
inc
dec
fdiv
pop
mov
mov
aas
or
mov
in
int3
fwait
pop
xchg
push
xchg
(bad)
xchg
add
push
nop
outs
fnsave
inc
ds
sub
pop
inc
sub
call
xor
in
rol
mov
repz
add
pop
out
inc
or
pusha
mov
scas
sbb
jp
cmp
fistp
or
imul
cmp
fnsave
lahf
es
stc
inc
fcom
(bad)
or
pusha
mov
call
mov
cmp
xchg
ss
ins
es
fiadd
sub
fld
shr
gs
frstor
daa
aaa
jae
pop
scas
cmp
movs
addr16
xchg
cs
xor
addr16
pop
gs
ret
jg
(bad)
out
iret
dec
push
popf
mov
dec
imul
mov
(bad)
fstp
ficomp
je
jle
add
fidiv
je
fadd
test
add
jg
dec
jmp
adc
jmp
imul
cmp
add
and
and
sub
popa
xor
int3
fld
(bad)
jecxz
push
add
inc
shr
xchg
mov
pop
adc
test
mov
lahf
iret
sar
mov
fsub
pop
mov
in
and
fdivr
xchg
loopne
pop
nop
jae
push
ret
or
mov
ins
pusha
daa
outs
cmp
adc
dec
retf
sbb
fisttp
dec
xchg
cmp
iret
jge
out
arpl
dec
pop
inc
popf
add
sbb
mov
sub
push
imul
fisub
(bad)
sahf
pop
push
inc
mov
mov
not
outs
pop
adc
xchg
xchg
add
cs
dec
cli
jmp
push
icebp
test
add
or
int
jmp
xlat
sub
in
test
in
shl
in
cwde
in
mov
daa
sub
ins
jle
ss
cdq
in
sub
scas
dec
sbb
xchg
mov
test
xchg
xchg
pusha
not
rcr
das
rcr
mov
leave
aas
ins
(bad)
cwde
and
xor
mov
sti
in
mov
mov
mov
fidivr
lea
test
test
sar
pusha
xor
mov
mov
pop
sbb
aam
cwde
sbb
rcl
add
push
mov
test
mov
out
gs
retf
jns
inc
aam
xchg
xchg
push
fmul
outs
pop
cmp
push
call
(bad)
mov
sub
cdq
jb
sub
mov
(bad)
shr
lahf
jne
ror
xchg
xlat
push
xor
pop
add
imul
ins
ss
add
or
int
push
mov
add
int
jbe
push
rdtsc
dec
jne
xor
cmp
call
and
and
les
repnz
(bad)
sub
out
out
push
retf
xchg
in
bound
jg
jbe
movs
push
ror
pushf
jg
outs
xchg
cmp
or
pop
out
xor
std
sbb
mov
adc
hlt
lock
jg
js
xchg
push
icebp
jg
jns
sub
push
inc
mov
jge
xor
ret
xchg
adc
ror
test
pushf
and
xor
mov
cmps
mov
mov
jp
shl
shl
sar
sub
out
aad
addr16
sbb
push
sti
xor
jo
aas
or
stc
push
push
xor
dec
sub
jns
pop
jle
fidiv
gs
sbb
xor
sub
xchg
mov
clc
push
push
(bad)
cld
popa
data16
inc
mov
int3
leave
mov
xor
adc
xor
in
repz
xchg
mov
inc
(bad)
retf
add
dec
fidiv
xor
add
cwde
push
lods
dec
push
inc
dec
jbe
ret
adc
(bad)
mov
jg
mov
add
cmps
out
retf
pop
jp
xchg
sbb
jl
in
sbb
popa
out
push
fs
and
push
mov
mul
and
neg
pop
inc
stos
jecxz
or
pop
cli
jnp
lea
aad
add
xchg
lahf
ins
mov
es
add
pop
push
push
ja
cwde
cmp
mov
(bad)
pop
pop
xchg
jne
dec
out
fwait
jp
test
add
or
jge
mov
and
or
call
jl
pop
cmp
jb
and
pop
or
xlat
retf
sbb
jle
cmc
shl
cmps
add
lds
xlat
jecxz
push
adc
mov
pusha
push
in
mov
adc
out
jns
xchg
(bad)
in
bound
sub
ret
mov
icebp
out
adc
leave
and
dec
mov
mov
sub
mov
sahf
ret
mov
fcom
cmps
inc
push
sbb
call
or
adc
cmp
mov
or
xchg
and
mov
jbe
cs
jmp
jmp
gs
inc
pop
jns
push
push
sbb
or
fsubrp
imul
ss
push
jecxz
out
adc
cmps
dec
cmp
adc
mov
dec
jne
dec
aad
aaa
sub
daa
or
mov
mov
jecxz
out
cmp
pop
jae
inc
jbe
mov
mov
mov
push
dec
(bad)
adc
fidivr
xor
(bad)
test
jmp
and
in
ja
gs
xlat
mov
mov
cwde
adc
test
push
xchg
mov
ds
loopne
add
ins
dec
out
(bad)
fnstcw
pushf
test
cmp
cli
xlat
repz
add
adc
adc
inc
push
jl
lds
aas
push
inc
in
ins
lds
mov
jmp
ja
cmp
(bad)
hlt
xor
aas
test
pop
inc
inc
js
ins
xchg
ficom
mov
xor
(bad)
mov
outs
mov
xor
loop
stos
pop
push
xchg
ins
pop
xchg
mov
xor
je
sub
jle
in
adc
sub
adc
pop
sub
inc
mov
icebp
and
pop
cmp
stos
loopne
sbb
in
sub
outs
dec
test
dec
xor
or
xchg
pop
or
inc
scas
jb
clc
jne
daa
jl
cmp
popf
push
inc
push
das
scas
out
jae
ret
xchg
ret
lahf
daa
mov
in
mov
inc
add
or
jmp
pop
sbb
mov
lea
mov
adc
cwde
xchg
fisub
mov
aad
enter
or
add
sbb
sbb
sbb
cli
mov
(bad)
and
push
cdq
ret
int
data16
stos
pop
cmp
inc
sub
jmp
ja
aas
pop
loopne
pop
xor
fcmovne
add
xlat
jnp
call
sbb
mov
fwait
inc
mov
sbb
rcl
stos
or
jne
and
into
cmc
scas
or
mov
jmp
mov
or
xchg
or
stos
mov
pop
push
cmp
and
cli
or
lahf
shr
(bad)
cmp
xchg
mov
mul
repnz
stos
pushf
pop
idiv
js
movs
mov
jg
jno
add
out
fcmovnu
add
in
mov
leave
stos
jmp
fcomp
mov
cwde
jnp
outs
scas
adc
sbb
mov
(bad)
cmp
je
fcmovnb
rcr
jmp
outs
push
lea
push
jp
(bad)
shl
mov
scas
dec
cli
dec
dec
mov
mov
sub
jb
mov
push
imul
xchg
sbb
xor
outs
dec
mov
sar
pusha
pusha
cmp
nop
inc
and
sub
jmp
popf
or
adc
inc
and
add
ins
call
sbb
inc
adc
jmp
test
xchg
dec
and
stos
clc
add
mov
sar
or
jae
push
push
pop
push
add
inc
cmps
test
xchg
inc
in
xor
lahf
ds
test
mov
lahf
retf
test
out
fiadd
dec
adc
cs
mov
jge
(bad)
and
pop
pop
xor
pop
push
outs
and
adc
and
sbb
dec
ret
into
mov
pop
(bad)
ds
popf
pop
xor
sbb
jnp
and
mov
ficom
push
jp
lahf
dec
ds
std
or
jno
and
loope
das
mov
mov
xchg
out
jb
scas
sub
data16
in
fcmovnu
inc
mov
mov
fwait
cmps
add
mov
scas
sub
fs
shr
std
ja
fnstcw
mov
movs
sti
je
push
inc
mov
arpl
pop
cld
xchg
aam
mov
adc
stos
test
cli
xchg
jl
mov
movs
leave
cmps
shr
jb
into
out
dec
sub
push
(bad)
frstor
push
adc
sub
mov
add
inc
sub
xor
xor
pushf
sbb
or
jmp
sub
pop
xor
add
mov
jae
cld
jmp
test
and
cmp
pop
add
inc
push
(bad)
test
mov
xor
pushf
xor
popf
push
jnp
mov
out
daa
or
movs
dec
loopne
imul
das
dec
stos
adc
fidiv
mov
aas
xchg
jp
pop
and
pusha
xor
in
cmp
pop
enter
ds
scas
imul
daa
scas
mov
ins
pop
rol
sahf
pusha
movs
sbb
inc
lea
enter
pop
stos
and
mov
xor
imul
mov
or
(bad)
sar
inc
xchg
xchg
dec
cmp
cmp
sbb
in
sub
in
int
fistp
retf
out
mov
loopne
sub
fwait
sbb
dec
pop
xchg
cmp
in
jecxz
fs
xchg
jbe
jg
daa
fidivr
cmp
not
jbe
sub
test
cmp
jl
sub
loopne
(bad)
pop
xlat
in
jnp
sbb
cli
aad
ror
pop
mov
xchg
or
lds
inc
mov
sub
int3
out
int
xchg
sbb
lea
aam
inc
xor
cmp
lfs
mov
es
ds
jecxz
mov
add
fbstp
std
in
(bad)
push
add
jle
add
imul
jecxz
or
or
imul
cli
int3
sbb
imul
test
cmp
mov
add
mov
sbb
aaa
add
jmp
sbb
jbe
inc
lods
(bad)
fs
jg
add
pop
mov
cmp
xor
add
je
pusha
mov
loop
push
(bad)
mov
cmp
xlat
popa
fsub
(bad)
call
pushf
loopne
push
push
and
xor
sbb
sti
cmp
mov
jmp
lods
add
cmc
cmp
sbb
push
xlat
into
bound
clc
sahf
push
push
es
cdq
rcl
ror
mov
in
sub
jbe
es
pop
aam
(bad)
lods
pop
or
cli
hlt
enter
pop
mov
and
or
sbb
xor
sub
xchg
in
fcmovnb
(bad)
pop
cmps
fist
fdivr
push
dec
pop
loop
sub
pop
test
loopne
dec
rol
call
or
push
pop
popf
inc
ret
push
sbb
inc
fld
lods
mov
inc
pop
test
js
or
jne
fdivr
push
call
pop
(bad)
adc
sahf
mov
scas
push
leave
fcomp
mov
cmc
mov
mov
outs
xor
js
and
repnz
test
lods
jns
mov
inc
pop
and
dec
mov
in
mov
(bad)
xor
leave
mov
js
imul
dec
fwait
test
rol
call
popa
dec
rcr
mov
add
add
fcom
fsubr
xchg
(bad)
or
cmc
stc
push
fnsave
sbb
xor
cmp
shl
cdq
or
shr
cmp
outs
push
adc
jae
in
xor
cmc
fld
es
mov
sub
and
clc
fs
mov
cmp
das
push
loop
adc
or
and
in
aas
not
shl
push
mov
add
into
ret
stc
fmul
lahf
sub
inc
mov
ret
and
xor
test
lods
pop
sub
sbb
mov
xlat
push
repnz
fisttp
repz
jo
int3
aaa
cmp
icebp
call
push
jne
(bad)
movs
test
cwde
mov
and
push
cs
jecxz
sar
arpl
pop
out
movs
and
mov
jnp
or
xchg
in
or
aam
(bad)
fs
fwait
and
stos
lock
pop
ror
adc
int3
dec
(bad)
call
adc
sbb
add
(bad)
(bad)
fidiv
imul
cld
xor
clc
das
dec
fwait
loopne
mov
jmp
mov
das
jne
xor
bound
push
pop
pop
pop
push
mov
js
inc
mov
sbb
mov
ins
pop
cmp
add
shl
das
xchg
mov
xor
xor
xchg
sbb
jae
bound
pop
push
sbb
mul
jne
push
and
std
mov
inc
pop
ins
stc
mov
add
sub
jecxz
or
popa
lahf
adc
test
outs
ds
mov
(bad)
cmp
or
pop
push
or
jle
hlt
or
dec
inc
loop
and
mov
out
ja
pop
les
push
mov
adc
stos
rcl
aad
test
lds
or
push
push
inc
push
scas
jae
popf
das
loopne
lods
xor
jns
pop
jp
cld
test
mov
jne
(bad)
mov
jmp
lods
repz
call
in
pusha
fwait
mov
in
mov
sbb
xchg
std
cld
jae
jecxz
js
adc
imul
popa
xor
dec
mov
jbe
scas
movs
aaa
or
test
and
or
cs
add
or
popa
mov
jl
mov
add
dec
jg
outs
stc
rcr
jmp
xor
pop
push
jp
out
xchg
sbb
jno
ret
push
shl
inc
mov
xchg
addr16
shr
pop
scas
push
test
cmp
xchg
int
pusha
loope
fs
adc
or
fdivr
inc
sub
test
and
and
mov
jbe
sub
pop
sbb
inc
xchg
jl
pushf
cs
mov
shl
mov
cmp
pop
push
neg
ss
mov
fisttp
in
cwde
sub
aaa
clc
outs
addr16
lods
push
inc
pop
pop
xor
mov
jno
jl
cmp
sti
es
push
pop
add
cmp
mov
sti
(bad)
pushf
mov
fist
adc
and
movs
fidiv
jne
and
cmp
mov
call
sub
inc
xlat
repnz
popf
cmp
imul
mov
fld
cmp
arpl
dec
adc
ins
scas
sub
adc
clc
shr
add
push
adc
fsubr
bound
mov
mov
rcr
mov
or
push
jbe
inc
pop
cmp
jle
or
ja
in
movs
aaa
jbe
mov
fidiv
pop
inc
shl
xor
in
repnz
xchg
in
cmp
xor
jge
daa
jae
mov
and
(bad)
add
add
mov
jmp
xchg
push
call
fs
mov
lea
jnp
sub
mov
cmp
dec
and
mov
ds
cmps
pop
xchg
mov
mov
inc
and
jge
rcl
xchg
xor
xor
mov
outs
jmp
pop
call
lea
dec
mov
and
jp
pop
pop
out
add
add
sub
das
pop
add
sbb
cs
into
les
jbe
sub
add
or
mov
push
inc
jmp
fwait
mov
pop
xor
imul
hlt
inc
mov
stc
add
add
push
les
retf
repz
rol
jle
dec
arpl
sbb
or
push
sbb
xor
rcr
cmps
test
lea
mov
into
pop
jle
(bad)
dec
mov
jmp
jo
mov
add
pop
jmp
add
ret
mov
mov
push
inc
push
jmp
imul
call
sub
add
add
movs
mov
call
lock
sbb
imul
imul
cmp
mov
(bad)
push
rol
iret
cmp
mov
jbe
daa
lods
jb
mov
mov
(bad)
out
lods
fidiv
gs
pop
lea
xor
and
jbe
push
stos
(bad)
pushf
out
lods
aaa
mov
leave
inc
loop
pushf
xchg
pop
outs
cmp
fcom
cmps
shl
test
daa
enter
jo
sub
push
jb
push
inc
jmp
out
cwde
mov
cmp
sar
push
cmps
out
add
or
inc
jo
mov
adc
mov
hlt
sti
gs
xor
test
out
fbld
popa
adc
push
mov
xor
push
jo
sbb
sub
dec
imul
mov
pop
mov
lds
nop
jns
sar
pop
nop
pop
popa
adc
stos
xor
inc
fidivr
loop
data16
mov
inc
inc
jae
test
sub
jne
imul
pop
out
sub
xchg
bnd
dec
enter
push
inc
gs
xor
pop
xchg
sub
sub
iret
rcl
inc
fsubrp
jmp
mov
jge
lods
loopne
leave
mov
fld
rcr
test
adc
or
mov
xor
jp
push
pusha
(bad)
sub
mov
adc
or
mov
xor
dec
test
addr16
repnz
jae
mov
add
stos
fsub
sbb
lods
inc
lock
push
mov
es
mov
xor
inc
gs
std
adc
mov
js
ror
sbb
adc
daa
mov
xchg
cmp
add
cmp
jle
stc
jmp
shr
jmp
ds
mov
xor
and
cmc
and
pop
rcr
jl
jbe
(bad)
loopne
or
push
xchg
add
cmp
aam
pushf
push
jne
pop
mov
loop
xor
call
xchg
jl
sahf
or
int
inc
sbb
xchg
dec
shl
fadd
jne
pusha
jo
xor
mov
adc
xchg
pop
in
imul
jbe
inc
dec
inc
mov
xor
arpl
cwde
sbb
pop
fidiv
add
(bad)
aad
vphaddubw
repnz
cmps
adc
imul
pop
pop
retf
or
cli
stos
inc
xchg
out
add
daa
xchg
(bad)
rcl
xor
adc
in
add
jbe
pop
xchg
mov
lahf
jo
push
and
add
pop
fild
movs
mov
ret
push
mov
and
in
aam
pop
repnz
std
mov
push
pop
or
lock
test
push
outs
fsubr
xchg
xor
jmp
jmp
add
ja
adc
push
dec
std
push
push
push
sbb
pop
and
call
mov
fs
push
jge
pop
mov
push
ffreep
sbb
iret
or
cdq
(bad)
sbb
mov
and
jae
mov
dec
pop
daa
repnz
mov
mov
test
xor
push
sbb
lods
mov
xchg
xlat
repz
sbb
mov
jecxz
add
lahf
ret
pop
femms
push
ins
sub
add
test
cmps
pop
push
in
jo
add
push
daa
loopne
mov
mov
std
dec
cmp
mov
fst
aad
(bad)
mov
pop
loope
das
jecxz
dec
test
inc
inc
inc
xor
shl
call
jno
outs
fsub
xchg
bound
enter
ror
rcl
stos
cmp
out
push
(bad)
lods
sbb
inc
mov
dec
adc
cmc
test
fisttp
imul
lods
inc
cmp
jmp
jle
mov
xor
arpl
fwait
icebp
in
jle
cwde
in
xchg
mov
xor
movs
(bad)
cdq
mov
or
pop
add
(bad)
mul
js
add
sub
bound
push
lods
int
push
or
fisttp
imul
or
and
mov
(bad)
sti
(bad)
movs
dec
out
or
arpl
pusha
jno
mov
je
sahf
push
cdq
dec
sti
xchg
cs
jne
ins
movs
cmp
std
pop
out
sub
(bad)
icebp
pop
popf
cmp
cmp
xchg
xchg
scas
mov
jno
sbb
push
daa
inc
pop
sahf
jmp
jmp
sti
fild
in
xchg
lods
repnz
addr16
clc
add
test
jl
cmp
ss
loope
test
push
outs
sbb
gs
test
ja
cs
pusha
cmp
xor
mov
fdivr
dec
pop
in
loop
push
sub
mov
lahf
aam
adc
(bad)
jbe
fist
adc
adc
push
imul
adc
push
cmps
cmp
add
repz
xchg
sub
pop
pop
sahf
inc
mov
ret
xchg
(bad)
repnz
cwde
adc
loop
pop
jae
inc
fwait
adc
retf
mov
mov
rcl
xchg
dec
inc
scas
pop
aad
xor
and
cwde
push
(bad)
xchg
iret
stos
mov
lea
retf
mov
ss
xor
stc
pxor
push
out
cwde
inc
aam
clc
jbe
mov
xor
stos
cmp
sub
and
std
push
cs
sbb
fld
cld
pop
dec
sub
stos
mov
test
test
adc
xor
mov
sti
adc
mov
ror
mov
pop
repz
mov
inc
pop
rcl
imul
rcr
imul
cld
pop
in
inc
pop
dec
xchg
jg
sti
loop
xchg
movs
jle
jo
loope
in
pop
or
mov
adc
ret
or
inc
(bad)
ins
xor
outs
in
aam
jecxz
jns
ret
push
dec
(bad)
repz
je
fisttp
sub
push
xchg
into
push
add
jl
popf
scas
mul
es
das
add
ja
test
pop
push
aaa
xchg
retf
and
pusha
push
sbb
popf
push
dec
daa
and
in
hlt
add
jae
or
icebp
mov
call
cmps
jo
sahf
test
(bad)
in
jl
movs
ret
lds
ret
add
cld
xchg
int3
mov
shl
call
cli
mov
gs
cdq
mov
or
dec
add
jnp
dec
and
aad
imul
loope
fadd
jp
ds
out
sub
dec
imul
(bad)
adc
loope
jmp
xor
xchg
daa
mov
push
jbe
and
iret
jnp
mov
cli
ret
cli
pushf
jae
js
mov
in
(bad)
add
or
enter
push
pushf
into
and
sbb
movs
fimul
test
ds
ins
pop
xchg
dec
sub
jne
push
pop
inc
jge
dec
outs
push
xchg
(bad)
push
mov
cmp
fsub
popf
or
outs
inc
add
push
add
xor
jne
inc
daa
and
inc
fisubr
xchg
mov
and
push
sub
push
(bad)
jmp
dec
fs
pushf
pop
inc
push
add
dec
sbb
inc
dec
jb
pop
cmp
outs
ror
sti
jle
mov
jns
fwait
pushf
aad
into
fadd
pop
mov
mov
scas
push
dec
pusha
mov
or
mov
jmp
adc
fadd
and
cmc
pop
and
fiadd
and
cmps
je
out
xchg
loop
mov
stos
hlt
in
mov
jge
imul
mov
xchg
frstor
test
rol
or
adc
cmp
mov
push
push
xchg
add
popf
xchg
xor
(bad)
mov
push
sbb
mov
jle
ret
imul
add
into
cmps
lock
outs
std
xlat
cwde
mov
mov
and
int
pop
xchg
add
xchg
or
pop
push
es
jg
add
mov
(bad)
xor
and
sub
inc
repnz
mov
int
or
shl
jg
xchg
gs
fdivr
je
inc
push
and
jmp
pop
fldenv
scas
mov
mov
dec
push
mov
jmp
sahf
xchg
jmp
loope
add
xor
xchg
sub
pop
ins
and
fiadd
push
dec
cs
sbb
icebp
bound
cmp
or
gs
lods
cmp
repz
push
jae
aas
and
add
or
ins
and
cmc
scas
cld
mov
out
jno
int3
or
xchg
repnz
test
jbe
jns
pop
or
test
pop
cmps
daa
cmp
xor
mov
call
div
push
mov
shr
mov
iret
cmps
dec
push
and
sub
mov
shl
popf
adc
sub
rol
scas
and
jecxz
xchg
mov
lds
and
fbld
aad
and
rcl
jae
xor
(bad)
data16
in
xchg
jmp
aad
aaa
add
jecxz
xor
sub
pop
call
inc
lods
jno
mov
std
out
pop
sub
push
aam
adc
xor
inc
div
mov
push
push
pop
in
cmp
xor
push
shr
mov
fs
sub
retf
pop
xchg
jbe
(bad)
scas
and
icebp
mov
movs
push
mov
push
jmp
fisubr
test
movs
rcl
mov
fwait
push
clc
mov
mov
ds
aam
jg
push
fstp
pop
sti
and
iret
adc
test
sbb
(bad)
push
xchg
cli
ja
enter
push
cmp
jae
fidiv
and
out
inc
lods
pop
(bad)
xchg
int
loop
mov
dec
jl
gs
add
jl
out
adc
movs
cli
and
and
or
fwait
jae
adc
xchg
data16
cmp
mov
outs
loope
mov
aas
mov
jecxz
push
jnp
sbb
lock
int3
mov
adc
fcmovnb
inc
jno
stos
push
jo
pop
xor
(bad)
aam
push
(bad)
mov
into
mov
rcl
mov
push
jne
jmp
push
shl
scas
jge
add
sub
cmp
xchg
adc
in
adc
jo
jg
adc
int3
pop
jg
shl
push
cs
jnp
xchg
jg
data16
mov
pusha
cmc
pushf
dec
dec
ror
test
mov
in
in
test
push
mov
push
mov
dec
dec
addr16
lahf
push
outs
cwde
cwde
in
nop
dec
mov
(bad)
into
and
jno
adc
cmp
enter
inc
dec
icebp
movs
cmp
aaa
dec
dec
mov
cmp
mov
and
out
mov
inc
(bad)
cld
loopne
pop
out
push
outs
imul
xchg
add
int3
sub
aaa
pop
test
push
icebp
push
sub
xlat
mov
mov
xchg
jo
xor
enter
idiv
popf
(bad)
push
movs
and
lea
out
jmp
shl
ret
mov
mov
(bad)
fst
sti
bound
sub
lods
lods
dec
test
sub
jo
div
aas
(bad)
xor
and
popa
and
inc
jne
pop
in
rcr
xor
dec
fadd
ror
daa
push
cmps
ret
imul
jecxz
pusha
addr16
movs
ret
pop
push
xor
fldln2
mov
jb
sbb
add
outs
mov
lods
mov
jnp
pop
mov
aad
or
mov
xor
xchg
dec
int3
push
mov
enter
or
cmp
and
mov
stc
sbb
jmp
cdq
nop
in
out
loopne
cwde
shl
or
jbe
mov
cmp
lds
cmp
jecxz
xchg
and
out
dec
mov
outs
stos
xchg
mov
xchg
inc
mov
fcomp
ja
movs
daa
mov
es
cmps
fs
xlat
daa
retf
(bad)
loope
loopne
nop
adc
mov
fisub
test
lds
pop
mov
add
out
cmp
mov
pop
inc
or
sbb
dec
pop
ficom
jae
sar
push
xchg
adc
push
sahf
sbb
rcl
out
or
mov
fnsave
xchg
jecxz
adc
jmp
lods
dec
test
cmovns
aam
cmp
mov
adc
cmp
mov
and
nop
imul
jp
add
mov
pushf
ror
xchg
mov
repz
jnp
push
loop
xor
lods
mov
les
pop
repz
ja
in
mov
pop
jp
sbb
out
cmp
pop
rol
push
push
adc
test
adc
dec
jle
sbb
fwait
dec
xor
push
ja
addr16
xchg
push
cdq
pop
xor
iret
cdq
cmps
out
xchg
icebp
popa
inc
cld
cmc
sub
add
inc
cmp
sub
inc
stos
dec
cmp
jbe
xchg
into
(bad)
pop
jl
push
and
mov
retf
jl
add
xchg
jmp
add
ja
hlt
rcl
mov
xlat
sbb
in
stos
je
mov
movs
dec
jbe
inc
cld
sub
jnp
mov
push
add
test
int
lods
mov
sbb
jne
hlt
movs
mov
add
fst
shl
mov
out
hlt
cmp
(bad)
sar
shl
adc
cli
iret
rol
rol
cmp
icebp
(bad)
fbld
not
repz
or
or
call
cmp
(bad)
bswap
mov
xchg
js
or
and
xchg
inc
mov
xchg
xchg
add
fs
inc
pushf
sbb
test
jmp
(bad)
or
(bad)
scas
ss
dec
jg
into
mov
jnp
outs
pusha
(bad)
jmp
aam
std
pop
fwait
inc
iret
dec
jnp
out
dec
gs
test
jmp
sbb
mov
ins
movs
adc
call
mov
and
xor
mov
sbb
jge
jb
stc
stos
retf
clc
pop
push
xor
rcl
test
push
call
test
mov
pop
outs
inc
(bad)
(bad)
loopne
rcr
mov
push
push
pop
sbb
popf
xchg
xchg
fs
mov
popa
(bad)
mov
pop
or
nop
jg
jl
push
xchg
mov
test
jl
nop
test
mov
aam
loope
sub
lea
dec
xchg
adc
cdq
popf
fld
mov
and
mov
cld
mov
bound
(bad)
loope
dec
cli
xchg
outs
sub
push
mov
test
ins
test
jae
fsub
clc
adc
ret
mov
jp
pusha
jp
hlt
int
sub
mov
(bad)
in
das
mov
jecxz
movs
mov
adc
or
sbb
daa
out
mov
ins
inc
or
out
add
add
cs
in
jmp
ins
aas
cs
xlat
mov
repnz
mov
mov
and
cli
cmp
push
mov
xor
ja
hlt
mov
or
xchg
sbb
cmp
nop
mov
out
sbb
xchg
retf
aad
mov
sbb
test
icebp
loop
sbb
aad
ds
lea
jge
div
adc
jnp
cs
and
arpl
sar
or
scas
hlt
sub
dec
adc
push
retf
mov
pop
retf
xor
stc
pop
mov
sub
mov
rol
cmc
leave
sbb
ret
push
movs
add
adc
push
add
xor
dec
nop
xor
jg
stos
sub
dec
push
je
sbb
cmps
stos
mov
push
mov
mov
or
nop
test
sar
jl
mov
call
mov
aaa
xchg
mov
or
sbb
ja
dec
xchg
jle
adc
in
lahf
dec
dec
and
test
std
inc
sub
pop
out
sub
daa
std
ret
mov
jg
xor
xor
stos
ror
dec
mov
loopne
loopne
stc
cmp
loopne
in
fs
xor
outs
shl
dec
fistp
fwait
rcr
fwait
or
loope
bound
stos
in
movs
arpl
jg
loope
enter
mov
movs
imul
push
and
(bad)
jmp
adc
enter
jnp
jns
cmp
push
adc
rcr
mov
xchg
or
shl
repz
xor
mov
or
sub
(bad)
outs
mov
inc
js
mov
inc
ror
inc
jne
sub
sub
test
rcr
(bad)
fdiv
xor
add
lods
mov
xchg
pop
xchg
adc
aaa
fimul
sub
mov
mov
add
sbb
mov
sub
movs
out
mov
daa
cmps
ret
into
inc
call
sbb
fmul
pusha
dec
or
leave
fs
and
lds
ins
loope
push
dec
rol
mov
out
dec
adc
pop
iret
lock
xor
lock
mov
xchg
sbb
push
ret
dec
mov
inc
jb
xor
sub
xchg
jecxz
fsubr
ret
mov
mov
aam
and
mov
dec
add
cs
jle
xchg
inc
push
adc
sub
out
mov
es
jno
out
inc
sbb
pop
gs
sbb
sub
cmp
inc
call
sbb
fsub
cwde
jns
mov
mov
popf
xor
fild
test
(bad)
rcl
dec
mov
sub
xlat
mov
pop
enter
or
adc
daa
inc
div
jmp
mov
clts
jmp
iret
mov
dec
push
add
push
dec
popf
imul
dec
push
xlat
lods
cmps
scas
cmp
jmp
mov
sub
add
ret
dec
mov
adc
mov
sbb
push
sub
push
inc
jge
jp
retf
loope
rcr
cmc
xor
in
fs
jmp
add
rol
mov
jl
(bad)
mov
jmp
mov
fs
out
jp
push
in
ss
jmp
or
test
xchg
repz
out
dec
sbb
push
stc
and
and
and
jge
pop
out
sbb
push
xchg
ja
fwait
rep
xchg
inc
pop
lds
push
sub
bound
popa
scas
hlt
inc
add
scas
jle
int3
jnp
xor
cmp
(bad)
dec
xchg
cmp
xchg
mov
dec
cwde
(bad)
rol
cli
inc
dec
sar
loopne
(bad)
cmps
pushf
adc
and
xchg
jb
shl
jg
aad
rcr
dec
jp
test
ds
(bad)
ins
rcl
addr16
fwait
scas
shr
sub
in
inc
fstp
mov
xor
mov
movs
pop
ins
mov
xlat
sbb
and
test
(bad)
xlat
int3
(bad)
shl
xchg
(bad)
push
jo
test
sub
fild
push
shl
into
or
mov
inc
or
int
leave
mov
imul
sbb
push
mov
ja
ret
(bad)
mov
inc
(bad)
mov
xchg
inc
(bad)
jmp
mov
push
mov
dec
scas
sar
sub
push
xor
inc
push
mov
cmps
adc
pop
retf
jle
repz
mov
je
(bad)
lock
out
dec
push
scas
cmps
mov
push
xor
shr
rol
rcr
(bad)
and
in
pop
xor
repz
ss
in
fimul
inc
jecxz
imul
test
jae
in
xlat
mov
cmp
retf
stos
shl
cs
lods
xchg
inc
and
mov
and
jns
js
dec
lods
push
mov
repnz
std
gs
mov
(bad)
adc
inc
enter
cmp
shl
jge
(bad)
shr
jge
div
bound
jmp
jge
ficomp
cmp
fcom
call
retf
in
enter
ja
xchg
push
mov
jmp
test
fcmovu
mov
push
nop
adc
mov
iret
(bad)
adc
iretw
or
in
mov
in
aas
sbb
adc
mov
push
in
ret
repz
push
adc
and
push
pop
lock
mul
add
sbb
inc
mov
mov
pusha
adc
fisub
jbe
jnp
fld
xchg
xor
dec
adc
sub
enter
xchg
pop
in
arpl
ins
out
adc
fcmove
mov
test
(bad)
adc
fidiv
enter
sub
add
sar
jmp
int
out
in
inc
out
sub
xchg
or
or
dec
out
into
leave
je
or
jb
sbb
out
or
movs
push
pushf
lahf
xchg
adc
mov
and
fstp
sub
jl
aam
xchg
pop
movs
out
mov
cdq
fbstp
sbb
add
leave
icebp
pop
(bad)
mov
imul
int3
sbb
push
lea
adc
xor
out
sub
rcl
sbb
add
(bad)
jmp
cmp
adc
bound
test
js
sub
sub
scas
cmp
mov
mov
or
je
enter
sbb
lock
int3
xor
xor
add
pop
or
retf
lock
jl
popf
mov
imul
mov
(bad)
push
daa
or
inc
xor
or
xor
xor
(bad)
arpl
or
aam
mov
(bad)
dec
stos
lds
pop
xchg
mov
mov
fcomp
xchg
scas
adc
(bad)
push
and
rcr
fcom
gs
fidivr
retf
mov
inc
call
mov
and
mov
adc
(bad)
arpl
lahf
jl
gs
jmp
ret
icebp
out
out
or
lahf
jg
and
jb
xlat
inc
sahf
mov
cmps
and
mov
lods
cmp
ret
sbb
jp
inc
sti
outs
dec
ins
nop
push
div
dec
sbb
jl
lods
cmc
pop
sub
icebp
pop
push
mov
push
inc
xor
jmp
lahf
xchg
dec
lods
jge
dec
nop
xchg
ss
mov
pop
daa
addr16
call
repnz
popa
add
jo
sbb
es
jmp
sub
out
inc
sub
jecxz
xchg
mov
mov
repnz
rcl
jmp
lock
cmp
xlat
test
mov
mov
push
cmps
ja
ret
in
sbb
sbb
mov
int3
fmul
std
sahf
pushw
cmps
stc
das
pop
cld
mov
inc
fldcw
and
inc
(bad)
inc
jae
cmp
xchg
jno
lods
jp
inc
or
adc
scas
loop
sub
test
push
ja
jno
mov
jns
retf
addr16
xchg
jmp
sbb
pop
cmp
pop
push
mov
xor
sbb
jbe
inc
pop
and
lea
mov
pop
sub
pop
jno
movs
and
out
mov
ss
sub
dec
add
sbb
cmp
sub
mov
cmp
fidiv
xor
jbe
or
or
sub
or
xchg
mov
cmp
shl
mov
sbb
inc
shr
xchg
mov
jmp
sub
inc
pop
aas
retf
fcom
in
pusha
pop
fnstcw
mov
aaa
add
popf
fstp
sahf
sbb
cmp
popa
mov
sbb
add
mov
sar
popa
lods
stos
sahf
fmul
imul
ret
test
sbb
jns
inc
outs
jnp
cmps
mov
in
sub
xchg
mov
inc
pop
ins
les
pushf
popf
fldenv
xor
mov
sub
fld
and
mov
jae
stc
or
pop
leave
(bad)
mov
in
(bad)
rcl
xor
sar
cmc
cmp
data16
sub
dec
xor
jae
mov
daa
sbb
mov
test
fcomip
ja
inc
ins
or
dec
dec
inc
pop
enter
fst
out
sar
shr
clc
jmp
sub
jmp
adc
in
stc
push
and
adc
push
dec
xor
ds
mov
and
test
adc
stos
js
hlt
mov
mov
mov
test
xchg
mov
dec
dec
pop
xor
pop
mov
mov
sub
pop
out
ds
fsubr
ja
push
adc
mov
mov
call
mov
dec
cld
pop
out
aaa
jbe
loop
xchg
rol
push
imul
xchg
or
jne
xor
ret
pusha
mov
sub
push
(bad)
mov
pushf
and
mov
cs
mov
inc
loop
inc
or
mov
and
and
mov
fsubr
shl
cs
inc
mov
pop
jnp
rcr
icebp
push
in
mov
mov
push
outs
outs
test
add
pop
call
add
aas
data16
inc
xrelease
push
pop
loopne
push
rcr
icebp
data16
or
inc
in
fist
add
je
fstp
movs
push
popf
inc
sbb
dec
mov
adc
xor
rcl
or
xor
leave
cmp
dec
add
mov
mov
mov
cmp
daa
add
or
js
bound
or
cmps
or
dec
or
retf
nop
adc
scas
xor
pop
(bad)
and
ss
mov
pop
test
cmc
and
fmul
in
jae
add
push
outs
fsubr
pop
iret
sub
cs
mov
jbe
jbe
jbe
xor
mov
in
push
shl
push
add
in
mov
in
outs
or
scas
loopne
and
push
mov
test
jmp
outs
in
rcr
pushf
inc
push
shl
aad
pusha
pop
icebp
xlat
xchg
addr16
add
push
stos
scas
int
fisubr
shl
inc
mov
and
pop
fwait
add
sbb
in
aad
lods
inc
loope
push
imul
mov
xchg
sahf
aas
loope
dec
jbe
arpl
test
call
or
add
inc
(bad)
cdq
in
push
pushf
xchg
mov
cmps
ins
push
ins
shl
xor
not
popa
(bad)
hlt
aam
call
cld
pop
pop
and
sbb
fild
mov
cli
push
or
mov
sbb
nop
rol
aad
test
adc
push
lock
pextrw
scas
loope
outs
in
rdtsc
mov
xlat
int3
pop
into
lods
mov
sub
in
mov
imul
nop
inc
xchg
xchg
popa
cwde
out
dec
xchg
xchg
iret
inc
add
dec
mov
mov
aad
adc
sub
test
mov
call
(bad)
iret
inc
pop
xchg
sbb
mov
ins
shl
xor
xchg
aas
call
ss
ja
sub
xor
arpl
mov
in
or
pop
pop
and
pop
xchg
(bad)
lods
mov
out
and
pop
in
jp
outs
push
dec
inc
xor
mov
lds
js
adc
lods
cwde
cmp
add
aaa
(bad)
sub
in
retf
adc
cwde
pop
rcr
sbb
faddp
push
std
imul
mov
mov
xchg
push
adc
mov
push
xchg
xor
lock
(bad)
jg
and
xor
es
adc
cwde
int
daa
(bad)
pushf
xlat
dec
sub
inc
imul
cmp
xor
xlat
jnp
into
jecxz
jmp
mov
pop
inc
adc
push
and
int
xchg
popf
bound
mov
(bad)
retf
inc
out
push
jg
xchg
xchg
inc
cmp
mov
es
jbe
(bad)
repnz
sub
mov
outs
clc
xchg
pop
mov
mov
jnp
dec
add
pop
mov
fs
fcom
adc
out
or
xor
jg
aas
add
inc
mov
std
inc
dec
test
ret
mov
xchg
lahf
stc
or
sub
test
pushf
mov
pop
test
or
sar
and
push
mov
fldl2e
loopne
cmp
xor
pop
pop
jo
mov
jge
cli
xor
dec
scas
pop
fidiv
cmp
cmps
inc
jae
pop
test
jg
out
fxtract
cmp
sbb
push
pop
lods
add
xor
dec
(bad)
in
retf
lea
mov
gs
nop
iret
sub
ja
xor
jno
or
mov
xchg
add
jmp
mov
test
movs
pop
cmps
fcom
ror
test
xor
mov
adc
aaa
(bad)
jmp
ins
mov
(bad)
push
adc
(bad)
dec
xchg
and
mov
fisub
pop
xlat
test
cmp
and
jne
push
add
cmc
jae
xor
xchg
cmp
mov
(bad)
(bad)
pop
daa
ficom
inc
mov
into
and
adc
or
push
daa
gs
icebp
enter
xor
(bad)
jmp
(bad)
ins
(bad)
push
popa
lods
fsub
mov
adc
mov
adc
rcr
cmp
lock
jno
cs
mov
ret
cmp
push
inc
popf
in
mov
cmp
data16
nop
xor
js
call
sbb
push
inc
stos
jo
add
ja
mov
adc
outs
dec
je
enter
jnp
ret
repz
ror
lods
imul
xlat
rcl
call
lock
ins
pop
out
mov
dec
push
test
or
inc
add
fdivr
in
push
movs
cmp
pop
pop
cdq
inc
sub
push
psrlq
retf
jl
(bad)
mov
imul
cmps
inc
xchg
scas
pop
xchg
push
push
popa
pop
das
ja
out
adc
nop
inc
sbb
retf
or
jg
mov
push
ins
mov
add
adc
jmp
ins
xchg
xor
pop
bound
aad
(bad)
bound
dec
pop
test
ficom
push
xor
add
int3
in
pop
sbb
outs
imul
popa
pop
push
sbb
xor
aas
adc
sti
push
adc
movs
ds
ret
mov
rcr
cmp
mov
cmp
mov
ror
add
call
xchg
mov
xchg
jg
or
call
out
adc
loopne
mov
mov
mov
fdivr
push
xor
dec
mov
mov
jle
imul
push
rcr
inc
pop
lods
xchg
jno
shl
sub
outs
mov
scas
cli
aas
mov
mov
sbb
ficomp
(bad)
(bad)
js
iret
test
(bad)
or
imul
push
cwde
fadd
fsubr
push
jmp
out
adc
fmul
(bad)
jne
jp
mov
mov
in
fwait
xor
push
test
jno
jne
retf
push
int
mov
into
push
ficom
call
sub
in
aad
lods
daa
pop
cmp
add
adc
push
or
pop
jl
stos
ror
inc
ins
ror
lds
test
cdq
les
fild
mov
push
rcl
lods
rcl
aam
or
push
push
mov
out
fcomp
dec
or
stos
js
cmp
call
cli
or
xchg
fcom
or
je
ss
pushf
push
nop
push
out
dec
out
int3
xor
mov
mov
xlat
outs
mov
stos
outs
fbld
sub
lods
sbb
inc
scas
or
inc
add
jnp
outs
jne
or
add
lock
outs
dec
jle
call
sahf
mov
mov
cmp
jl
es
dec
in
mov
sbb
mov
inc
xchg
cdq
sahf
(bad)
jp
lods
mov
mov
mov
shr
mov
arpl
mov
shl
in
fxch
mov
bound
mov
mov
adc
ja
imul
jmp
mov
mov
rol
pushf
cmp
cmps
mov
and
jne
stos
adc
xchg
lea
pushf
rcr
(bad)
out
jo
psrlw
mov
jecxz
pusha
dec
data16
ins
pop
shr
mov
rcr
es
sub
pushf
mov
icebp
push
fnstsw
cmp
pop
iret
pop
pop
inc
sub
pusha
adc
mov
jmp
push
outs
mov
mov
xor
or
test
fmulp
cdq
inc
and
and
mov
mov
dec
call
pop
jmp
mov
fwait
push
arpl
aad
cld
and
pop
cmp
loopne
daa
cdq
sub
xchg
push
into
pop
xchg
(bad)
in
dec
adc
cmc
pop
(bad)
mov
cmps
gs
stc
pushf
stos
jb
clc
ins
sub
mov
and
sbb
adc
mov
nop
cmp
repz
mov
mov
sbb
call
dec
outs
push
push
or
je
clc
fs
cli
int
xor
mov
jb
jmp
es
loope
xchg
in
inc
mov
ret
stos
les
mov
in
add
clc
div
mov
mov
push
ins
ret
adc
add
imul
jne
or
cwde
dec
fsubr
cdq
fdiv
jae
(bad)
imul
pop
in
dec
in
arpl
(bad)
dec
sub
int
push
retf
imul
mov
mov
shl
ret
dec
mov
cmp
xchg
neg
lahf
nop
mov
pop
aad
mov
aaa
aam
inc
push
push
push
or
cs
xchg
sub
stos
lea
pop
or
fisttp
mov
call
sub
inc
retf
xchg
inc
sbb
fcomp
or
in
cmps
and
out
jbe
mov
in
iret
loope
ror
xchg
mov
inc
mov
jb
xchg
dec
cmp
or
cmp
sahf
and
outs
in
mov
mov
repz
outs
jl
xchg
rcl
jne
xchg
sub
aam
(bad)
shl
mov
mov
xchg
mov
add
pop
push
int3
inc
rcr
fldcw
imul
xchg
int
mov
ss
into
mov
pusha
outs
xor
ds
lahf
jl
and
push
pushf
inc
fsubp
xor
pop
pushf
jmp
fwait
js
lock
and
cmps
inc
movs
aas
aaa
push
mov
mov
jae
loope
or
adc
jl
test
fs
xor
or
sub
xchg
into
and
inc
out
push
stos
mov
cmp
mov
repnz
shr
add
loope
mov
mov
push
jnp
out
mov
cmp
push
mov
dec
pop
int3
loopne
je
fimul
cdq
fidivr
stc
inc
icebp
xor
outs
fisubr
add
ret
sub
cmovp
imul
xor
daa
nop
mov
outs
sbb
pop
bound
stos
mov
jns
sbb
mov
lea
push
pop
out
sub
cmp
leave
sub
outs
add
movs
mov
leave
jo
addr16
jno
cmp
fbstp
push
adc
aas
and
fisttp
pop
sbb
sub
shl
aad
nop
lds
in
add
xchg
scas
pop
lock
rcr
pop
test
mov
into
adc
adc
rcr
icebp
xchg
dec
and
fidiv
dec
daa
mov
fwait
test
shl
add
movs
push
mov
std
cmp
(bad)
std
xchg
dec
dec
add
inc
out
dec
ds
cmp
xor
mov
int3
movs
inc
cli
out
lods
(bad)
sbb
test
mov
cmp
leave
mov
mov
pop
dec
cmp
sub
ja
aas
outs
mov
test
inc
xor
lahf
mov
add
stc
adc
iret
mov
cdq
outs
xchg
pop
add
outs
icebp
aaa
loop
mov
mov
jl
mov
xchg
xchg
inc
cwde
mov
dec
ins
fs
sbb
inc
mov
pushf
(bad)
mov
pop
sub
call
pushf
and
jecxz
pop
pusha
pop
sub
std
dec
retf
das
xchg
out
or
sub
jecxz
scas
lods
push
and
out
icebp
mov
cmp
rcr
dec
clc
jae
xor
das
xor
lock
or
cmps
push
icebp
pop
ins
or
popa
cdq
add
in
ret
cld
jb
retf
faddp
call
push
mov
mov
scas
call
xor
mov
jne
add
push
push
and
sub
fidivr
(bad)
pop
adc
sbb
adc
ja
mov
fimul
fs
jmp
or
call
popa
pop
push
inc
data16
dec
mov
jl
mov
in
jno
lea
iret
adc
mov
ins
jp
pop
ret
clc
int
mov
sbb
push
fisttp
or
fidivr
mov
cdq
push
and
fs
mov
push
pop
(bad)
sbb
dec
loopne
jne
jecxz
addr16
shl
push
outs
mov
retf
dec
sti
(bad)
sti
push
sbb
nop
add
cmps
movs
test
jnp
fdivr
(bad)
enter
lods
fbstp
rcr
mov
sahf
mov
cli
popf
mov
retf
iret
push
dec
add
daa
mov
mov
pop
push
arpl
pop
dec
jne
imul
dec
push
jbe
jp
pop
add
outs
(bad)
call
mov
in
ret
pusha
pushf
iret
test
add
ins
mov
sahf
dec
clc
mov
cmp
xchg
adc
dec
pop
aam
sahf
inc
sbb
mov
push
and
daa
jmp
jno
ficom
push
fcmovu
scas
das
xchg
xchg
data16
push
pop
mov
push
ins
add
out
outs
stc
inc
lods
push
push
push
sbb
(bad)
xchg
inc
push
aam
sbb
imul
scas
inc
add
fstp
cmp
mov
xor
mov
xor
jp
loopne
xchg
fild
push
in
fdivr
popa
(bad)
mov
gs
pop
jne
push
aam
xor
dec
movs
or
sub
fs
int3
jae
pop
mov
inc
xor
mov
sbb
push
add
jb
pop
xor
ror
or
mov
mov
faddp
repz
stos
jae
cmc
imul
sbb
popf
adc
mov
xchg
mov
xlat
out
(bad)
cld
xor
out
mov
xor
clc
retf
pop
ficomp
mul
pop
leave
in
dec
jp
lock
(bad)
add
pop
mov
add
and
lds
fsubr
nop
adc
jg
aaa
(bad)
shr
mov
xchg
or
addr16
adc
pop
add
adc
nop
jb
xor
push
js
adc
retf
shl
mov
shl
fdiv
mov
hlt
add
xchg
leave
lods
cli
retf
pusha
pop
push
xchg
jo
movs
push
pop
xor
rcl
mov
jns
jle
into
mov
int3
lahf
mov
push
inc
and
dec
mov
ins
cli
inc
iret
add
push
add
movs
mov
je
push
mov
pop
xchg
aaa
retf
stos
arpl
push
push
dec
adc
hlt
jl
je
pusha
push
out
call
rcl
cmp
stc
or
popa
pop
adc
daa
in
test
push
fimul
ret
fldcw
and
popa
sbb
cmp
mov
arpl
push
nop
sbb
mov
in
outs
push
sbb
jb
mov
mov
retf
jo
aad
fwait
das
jmp
jg
push
and
ret
pop
mov
push
loop
dec
ds
pop
imul
les
xorps
xchg
out
push
les
repz
xor
inc
sub
xor
mov
cmps
push
push
arpl
inc
sahf
pop
mov
lods
fsubr
daa
dec
xchg
and
je
mov
sbb
mov
and
imul
dec
or
in
mov
(bad)
jae
push
outs
(bad)
aaa
jbe
dec
loope
jne
test
cli
and
retf
sub
or
rol
dec
fs
and
movs
mov
sbb
pop
shl
and
nop
inc
daa
call
div
stc
stos
adc
dec
xchg
mov
adc
xor
push
test
dec
pop
dec
stc
inc
ds
ret
lahf
outs
mov
lds
shl
es
in
mov
mov
ror
cs
imul
movs
pop
jmp
jb
mov
pop
mov
mov
jmp
mov
push
mov
es
iret
movs
mov
int
sub
push
cld
xchg
ss
mov
scas
mov
mov
mov
inc
or
dec
xor
push
loop
sti
mov
call
add
clc
in
in
mov
sbb
stc
imul
sub
adc
xor
or
or
xor
(bad)
outs
and
sbb
sub
scas
ins
retf
jne
and
ss
in
cmp
adc
cmp
cmp
add
popf
movs
xchg
inc
repz
sub
jbe
add
ins
cmc
sbb
and
pop
mov
lods
dec
jb
test
into
sub
call
loope
movs
sar
cwde
and
inc
stc
fwait
ret
push
xchg
xchg
clc
pop
pop
idiv
rol
repnz
ret
jmp
pushf
loope
(bad)
jbe
jl
or
mov
aaa
inc
sbb
inc
rol
sbb
fstp
ret
adc
pop
in
bound
jmp
xchg
cs
in
loop
jnp
sbb
in
bound
js
sbb
into
push
ret
ss
adc
push
std
sub
loop
cli
and
xchg
or
sub
push
or
int
ss
scas
lods
push
mov
or
pop
aas
jmp
jp
in
mov
dec
(bad)
mov
cmps
jmp
pop
lds
add
and
movs
push
jg
or
xor
das
inc
out
xchg
fwait
adc
jl
mov
retf
(bad)
dec
not
add
movs
xchg
cmps
jae
(bad)
in
(bad)
ret
xchg
dec
and
in
test
xchg
and
popa
push
int3
sar
retf
push
imul
push
adc
sub
and
xor
push
aas
mov
movs
bnd
dec
pop
sahf
out
test
gs
jg
jp
mov
dec
ins
test
mov
inc
mov
ins
gs
dec
push
hlt
mov
inc
mov
sar
xchg
test
inc
and
je
rcr
pop
dec
inc
div
clc
push
jne
xor
push
xchg
mov
shr
sahf
xor
aas
mov
js
aam
or
adc
daa
retf
popf
sahf
or
in
push
ret
test
xchg
fidiv
jo
inc
aaa
aam
and
int
hlt
xor
inc
mov
stos
lea
fwait
push
cmp
add
cmp
jle
cmp
lds
mov
mov
push
jle
pop
xor
pop
imul
and
cmc
fwait
push
addr16
out
cmp
test
push
add
lock
dec
mov
jo
scas
pop
jb
xor
xor
mov
(bad)
cdq
lds
sub
or
call
mov
mov
ja
ins
jns
xor
jne
mov
addr16
fild
inc
lods
inc
jge
js
mov
(bad)
loope
popa
push
push
shl
std
lahf
repz
vpsubq
dec
xlat
inc
std
hlt
mov
push
fwait
jmp
int3
mov
ds
and
xor
in
xchg
pop
mov
mov
pop
add
test
xor
hlt
imul
mov
xchg
in
mov
ficom
jg
xchg
das
and
dec
add
sbb
sbb
aad
dec
add
ret
and
or
sahf
xchg
mov
ror
int3
pop
sub
ss
sub
test
jns
pop
in
adc
bound
mov
std
imul
test
jne
sub
das
dec
adc
scas
fwait
imul
xchg
inc
cmp
sti
cmps
repnz
adc
mov
inc
push
out
pop
mov
push
dec
jns
push
in
aaa
push
cmps
retf
cdq
stos
cld
retf
mov
lods
in
(bad)
out
inc
mov
rcr
inc
imul
mov
ds
xchg
xor
cdq
arpl
pop
out
dec
into
push
push
(bad)
mov
xor
scas
pusha
in
icebp
pop
mov
sub
aas
sbb
mov
xlat
daa
les
push
xchg
mov
mov
mov
int
loope
mov
idiv
lods
sub
ins
cmp
rcl
push
rol
xchg
mov
int3
mov
dec
mov
sub
cld
push
in
inc
call
inc
pop
mov
iret
adc
pop
lds
(bad)
sub
(bad)
int
cmps
leave
cld
je
and
dec
sub
(bad)
out
lds
mov
gs
in
stc
jp
aaa
sbb
call
psrlq
test
in
xchg
xor
jp
mov
into
push
mov
adc
aas
mov
loope
(bad)
lock
out
xor
cmp
jb
ret
and
inc
cmp
pop
inc
jbe
add
pop
adc
fwait
or
jecxz
adc
inc
mov
test
(bad)
cdq
mov
in
leave
daa
adc
mov
mov
ins
lahf
jle
inc
push
fist
(bad)
xchg
mov
add
int
xchg
loopne
loopne
bnd
or
rol
add
movs
sbb
repnz
mov
rcl
in
xchg
jns
inc
dec
jl
jno
lock
loope
rol
out
xor
data16
dec
leave
xchg
sub
sub
dec
sbb
mov
aaa
sbb
pop
pop
xchg
dec
mov
xchg
clc
scas
loopne
sahf
ins
cmp
addr16
add
js
and
icebp
fild
outs
(bad)
mov
aaa
push
jmp
xchg
cmc
mov
add
std
push
push
cld
outs
jmp
xor
mov
call
nop
jp
sub
int3
call
retf
jl
rol
dec
stos
imul
out
(bad)
int3
bound
push
xchg
sub
into
repz
gs
call
into
daa
mov
ret
mov
daa
xchg
and
lds
inc
dec
dec
idiv
aad
scas
clc
imul
pusha
int3
sub
(bad)
test
pop
and
(bad)
out
ret
or
repz
mov
push
nop
adc
adc
xchg
xchg
or
dec
fild
pop
sub
fucomi
push
xchg
dec
scas
xchg
fwait
cmp
iret
mov
push
and
dec
lods
popa
push
mov
inc
mov
pop
icebp
add
imul
ins
xchg
inc
retf
mov
mov
mov
or
test
cmp
(bad)
dec
in
call
jnp
retf
mov
push
add
xor
add
mov
loop
inc
dec
cld
add
and
clc
push
fwait
out
scas
fisub
sbb
inc
dec
jb
addr16
jle
cli
out
cmp
sbb
and
outs
push
jo
sti
inc
push
gs
scas
mov
fcom
jg
sub
adc
or
daa
in
xchg
xchg
das
lods
movs
outs
push
std
out
stc
or
les
jge
jo
dec
or
xor
xchg
sbb
adc
out
das
retf
ins
cmovns
mov
mov
stos
ins
test
dec
jle
in
popf
push
sub
pop
pop
fmul
inc
sub
push
add
call
nop
xchg
mov
gs
imul
int
fs
pop
arpl
push
lahf
nop
and
outs
cmp
or
movs
je
pop
push
out
xchg
dec
or
sbb
ficomp
(bad)
cli
cli
test
fsubr
pop
xor
pop
fdivr
mov
lahf
clc
dec
mov
dec
loop
jmp
fstp
clc
ror
lea
inc
cwde
pop
(bad)
cmc
push
fsubr
adc
outs
xor
in
xchg
fadd
je
shl
fistp
pop
jo
mov
fcom
(bad)
repz
adc
pop
outs
addr16
and
mov
push
ror
jmp
jmp
call
retf
xor
fnsave
test
sbb
adc
fisttp
jae
push
mov
outs
es
lock
jl
or
and
sbb
cmps
xlat
inc
pop
adc
pop
leave
inc
xchg
mov
fidivr
test
push
out
jp
mov
hlt
out
dec
sub
out
mov
push
jne
xor
adc
dec
stos
cwde
push
adc
cmc
(bad)
hlt
cmp
sub
popa
push
mov
cmp
mov
icebp
arpl
jmp
xor
stc
jl
cli
mov
jnp
inc
test
mov
test
int3
sub
scas
mov
mov
mov
ins
push
lods
jmp
xchg
ret
inc
sbb
cli
inc
dec
mov
jmp
pop
mov
dec
xor
mov
dec
out
push
and
dec
inc
das
in
inc
cmc
popa
fcom
add
inc
adc
add
pop
fimul
das
cs
fs
add
push
sub
pop
pop
jp
jns
mov
add
loopne
mov
arpl
out
(bad)
fstp
jns
pop
inc
add
cli
(bad)
cmps
(bad)
adc
pop
repz
mov
xor
push
in
sbb
and
cmp
xchg
lea
sub
dec
mov
cmp
mov
mov
lock
xor
cwde
in
outs
test
push
or
mov
jmp
int
pop
mov
pop
or
cli
push
jno
sahf
or
ins
inc
mov
out
(bad)
inc
mov
iret
inc
dec
sbb
aaa
pop
xlat
iret
jnp
std
mov
pop
cli
mov
mov
ss
jmp
push
sahf
xchg
mov
popa
lods
ret
je
test
push
int
dec
cwde
ds
call
mov
mov
test
jno
mov
push
inc
stos
cs
push
mov
xchg
movntq
movs
retf
xchg
repnz
cmp
push
pusha
cli
fild
push
stc
xor
outs
add
popf
push
dec
(bad)
push
pop
leave
inc
lea
pop
xchg
test
add
xchg
inc
shl
mov
outs
push
mov
stos
popf
sbb
aas
lock
(bad)
xor
pop
bsf
sub
sti
sbb
sahf
xchg
sbb
ja
or
movs
adc
pushf
inc
mov
(bad)
pop
or
xchg
cld
jmp
dec
mov
xor
pop
dec
stos
es
jns
xchg
add
je
xor
inc
cmps
xor
jns
pop
leave
(bad)
pop
sti
dec
icebp
retf
aas
ficom
xor
pusha
push
mov
push
test
retf
cmp
imul
push
fst
mov
mov
dec
xchg
hlt
fild
pop
inc
adc
push
cs
cs
and
xchg
cmp
test
aas
jo
push
lock
(bad)
int3
cmps
mov
jne
scas
mov
clc
mov
xor
cdq
int
jnp
test
inc
test
cmp
mov
test
movs
lahf
adc
pop
cmc
push
sub
adc
and
repnz
pusha
add
pop
push
or
popf
jbe
jmp
dec
sub
jle
mov
(bad)
pushf
push
cli
retf
mov
jle
stos
push
lods
test
xor
rcl
pop
ss
sub
gs
xchg
jo
frstor
(bad)
out
sti
scas
les
repz
(bad)
loopne
mov
inc
push
pop
xchg
push
shl
mov
popf
or
rcl
ja
in
mov
ds
aad
pop
aaa
dec
movs
dec
addr16
push
into
jg
ror
jo
jg
int3
or
push
jno
and
mov
fsqrt
lock
out
xor
and
jmp
push
call
fs
pop
pop
dec
xor
and
pop
in
pop
push
and
stos
jle
test
pushf
fcomp
(bad)
sub
imul
jae
gs
ret
into
xchg
xor
cdq
xchg
and
mov
xchg
out
es
mov
inc
mov
loopne
dec
push
enter
(bad)
(bad)
cwde
adc
aad
mov
outs
(bad)
cli
push
imul
and
mov
cmp
xor
dec
ror
pop
jg
or
mov
and
sbb
dec
or
jle
push
in
cmp
hlt
les
fwait
ror
xchg
aaa
icebp
pusha
xchg
and
pushf
xchg
jne
jnp
or
cmps
aas
lock
and
dec
inc
xor
xor
lahf
push
pop
das
idiv
xor
ins
lods
xchg
cmp
fstp
push
mov
and
pop
jb
iret
cmp
cs
jo
lods
mov
xlat
out
mov
movs
inc
xchg
adc
or
aam
mov
sbb
add
jp
lahf
mov
and
mov
jmp
clc
scas
push
or
add
xor
mov
lods
lods
adc
data16
xchg
push
mov
xchg
gs
out
jl
jo
lods
jp
aad
push
fwait
mov
mov
movs
mov
and
or
inc
xchg
loope
ja
(bad)
push
jp
adc
mov
adc
or
pop
jae
jnp
cs
cli
xor
inc
add
or
gs
jb
clc
movs
mov
nop
pop
mov
xor
adc
dec
mov
fdiv
(bad)
test
test
(bad)
add
fiadd
cmps
ja
lds
rol
mov
add
or
shl
(bad)
fstp
inc
push
adc
(bad)
(bad)
imul
sub
outs
enter
or
mov
in
shr
and
mov
fdivr
icebp
dec
imul
xor
out
jg
int
pop
sbb
ja
jle
mov
mov
std
vpaddd
xor
inc
or
pusha
stos
pop
aas
dec
les
repnz
and
ja
imul
sbb
jae
test
push
fnsave
push
push
and
mov
or
cmc
in
push
xor
movs
dec
mov
pushf
xor
fmul
cwde
and
ret
cwde
mov
cli
(bad)
mov
(bad)
fidivr
repnz
xchg
dec
cwde
in
inc
test
or
int
out
rcr
dec
popf
mov
push
test
adc
test
adc
add
ret
idiv
xchg
adc
mov
and
add
sbb
add
cwde
push
mov
fiadd
loope
dec
mov
rol
xchg
mov
pushf
fldenv
push
in
dec
cmp
mov
dec
inc
js
adc
lea
icebp
sar
mov
jo
mov
cmp
push
jle
push
jg
dec
jmp
hlt
test
dec
mov
or
popf
shl
and
fcomp
lahf
cmp
sbb
pushf
xor
inc
adc
gs
push
add
sti
fcomi
xchg
and
or
jbe
scas
pusha
nop
mov
push
js
sbb
pop
sti
int3
pop
push
outs
sbb
test
cmp
(bad)
sbb
jne
sbb
test
xor
xchg
test
or
test
lds
xlat
push
ins
push
xor
out
loope
(bad)
push
xchg
pop
hlt
cli
pusha
sub
lods
sbb
inc
(bad)
js
aad
push
sub
mov
scas
mov
movs
mov
sbb
jecxz
mov
push
push
jbe
push
movs
and
sti
std
cs
ds
xlat
fnstsw
movs
neg
cmp
mov
(bad)
push
push
push
call
jle
adc
cli
mul
mov
inc
lds
or
dec
loope
out
(bad)
jmp
and
adc
sub
out
popf
pop
inc
int3
clc
xor
test
push
stc
mov
mov
jle
pusha
std
shl
sbb
lods
xor
cmp
xor
imul
and
test
xor
or
dec
push
or
arpl
and
pop
stos
ds
shr
fwait
adc
mov
shr
cmp
push
mov
mov
push
ficom
pop
lods
std
leave
push
ret
popa
in
popf
jno
xor
jmp
dec
xchg
fsub
push
dec
sbb
xchg
push
inc
imul
inc
jl
mov
add
mov
mov
dec
sub
adc
inc
mov
adc
sub
rol
out
mov
mov
pushf
inc
pop
adc
xor
mov
jmp
jbe
mov
lods
fadd
add
or
dec
pop
repz
fadd
test
outs
(bad)
lahf
xor
out
icebp
add
fidiv
scas
(bad)
push
mov
cmp
cmp
lods
fcmovbe
clc
mov
js
jo
push
addr16
(bad)
inc
lods
sub
sbb
fstp
cmp
out
int
mov
test
cli
sub
adc
cmp
pop
loopne
in
mov
add
std
imul
push
jg
inc
test
inc
adc
es
(bad)
stc
aad
in
inc
pusha
lea
dec
aaa
cs
dec
ret
xor
pop
dec
gs
int
(bad)
jo
or
bound
test
mov
arpl
adc
(bad)
ds
sub
(bad)
fild
repz
ins
outs
hlt
ins
push
and
cmp
lods
in
sbb
sub
cli
mov
cmp
fstp
and
push
mov
adc
mov
mov
jne
pop
in
mov
rol
sub
push
inc
rol
dec
pop
shl
pop
jno
ret
repz
dec
xor
out
hlt
pop
push
mov
shr
xor
cmp
xchg
inc
dec
xchg
js
xchg
mov
sahf
out
mov
ror
std
xlat
and
test
dec
ins
add
inc
mov
push
and
int
jle
and
mov
mov
or
aaa
in
cmps
es
test
sub
dec
xchg
shr
pop
push
loopne
xor
inc
into
in
xchg
and
shr
push
xchg
lods
mov
or
sbb
dec
xor
mov
fst
outs
mov
mov
cli
ror
adc
mov
jno
adc
adc
mov
and
fisttp
dec
iret
mov
pop
into
dec
out
sub
ss
scas
outs
sub
dec
lea
arpl
mov
jmp
mov
fwait
popa
call
jge
and
ret
cmp
sbb
leave
cmp
ds
sbb
icebp
and
(bad)
(bad)
jae
dec
pop
or
in
push
or
mov
rcl
mov
(bad)
mov
sub
inc
jbe
mov
fwait
mov
ret
xchg
outs
mov
retf
or
sbb
test
pushf
scas
inc
dec
mov
rol
mov
hlt
test
inc
jmp
xchg
js
xor
je
adc
xchg
push
aad
test
popf
cmp
repnz
iret
jge
jae
inc
and
ror
mov
enter
jge
ret
adc
sub
dec
cmc
mov
push
dec
fsubp
jmp
sub
jle
sub
pop
mov
in
mov
sub
outs
cmps
add
retf
lea
jmp
adc
hlt
cwde
loop
(bad)
jmp
xchg
or
int
dec
mov
jae
pop
aam
movs
not
or
data16
clc
sbb
pop
push
test
in
xchg
and
or
lahf
sahf
cbw
mov
test
and
lfs
add
pusha
loop
jp
sti
call
fidivr
data16
mov
fmul
aad
mov
test
imul
mov
inc
int3
int3
fst
movs
xor
fiadd
mov
cmp
popf
xchg
jmp
clc
pop
and
icebp
cmp
dec
xchg
inc
fisttp
mov
rcl
push
xchg
retf
jns
push
jno
add
(bad)
mov
jmp
cmp
(bad)
inc
enter
pop
je
xlat
xchg
neg
cmps
or
push
outs
fidivr
daa
cmp
sahf
es
sbb
sub
stos
in
sub
nop
sbb
push
or
or
adc
mov
cmps
lods
aam
sbb
lock
stc
rol
lock
(bad)
jl
jbe
aaa
jmp
fucomip
push
mov
scas
movs
mov
cdq
add
push
pop
aas
adc
in
pop
lds
mov
es
adc
mov
ins
xor
dec
fisttp
jb
dec
ror
push
sbb
jge
adc
fcmovne
xor
loop
lds
xor
movs
and
mov
rol
pop
outs
loope
adc
mov
mov
aad
pushf
jae
jecxz
sbb
jg
hlt
scas
out
xor
xor
not
pusha
rcl
inc
dec
stos
into
repz
xchg
dec
movs
ja
jge
adc
mov
dec
mov
mov
js
jne
mov
retf
jno
inc
add
(bad)
pop
int3
cmp
loop
xchg
sbb
sahf
dec
out
pop
(bad)
aam
inc
xchg
sub
nop
add
adc
out
rcl
daa
adc
inc
xor
jle
jno
inc
dec
stos
add
inc
sbb
jnp
faddp
mov
mov
imul
adc
(bad)
sar
adc
jg
call
fnstenv
aaa
test
xchg
adc
add
cmp
mov
stc
retf
dec
or
and
sub
add
sbb
pop
imul
adc
add
imul
lahf
mov
and
into
xor
pop
push
lea
mov
es
push
cwde
and
cdq
push
pushf
not
test
mov
test
dec
inc
repz
retf
stos
adc
call
stc
or
cmp
stos
pushf
fld
xchg
ds
sub
lock
int3
push
add
repz
scas
dec
ds
add
mov
push
cmp
pop
xor
cmc
(bad)
jne
and
pop
out
test
mov
jl
xchg
lds
mov
or
xchg
pushf
loopne
mov
jae
shl
not
mov
sar
fadd
jg
or
je
mov
or
fadd
mov
paddusw
xchg
cmp
mov
rcl
xchg
data16
pushf
pop
fsin
mov
hlt
test
pop
xor
cs
int3
rcr
fbld
es
mov
stos
mov
mov
pop
aam
fistp
fidiv
neg
mov
nop
jp
push
mov
ret
out
push
push
pop
mov
sub
and
out
fimul
cmp
stos
mov
mov
pop
pop
ins
inc
mov
rcl
jmp
sub
dec
sub
mov
mov
sub
nop
xor
cmp
mov
cmp
inc
cmp
cmps
xchg
push
cmp
into
lock
(bad)
repnz
and
movs
cdq
mov
(bad)
in
aas
test
pop
add
test
stos
dec
hlt
dec
les
fisub
movs
(bad)
test
movs
push
cmps
mov
or
sub
fwait
sub
add
xor
jge
test
shl
lods
das
nop
stc
rcl
daa
xor
into
add
sub
push
lods
lods
scas
bound
clc
dec
sbb
hlt
hlt
sbb
(bad)
stos
dec
sub
test
pop
lea
dec
gs
adc
out
cmps
outs
cmps
fiadd
xor
jg
or
out
aaa
sbb
dec
mov
or
mov
adc
stc
cmp
mov
lock
in
je
(bad)
out
cmps
sbb
adc
and
gs
pop
and
pop
lea
pop
movs
inc
pusha
ins
js
lock
(bad)
pusha
shl
pop
std
mov
mov
ret
pop
mov
iret
clc
pop
add
dec
xchg
dec
inc
sub
stc
shr
add
cmp
mov
fmul
popf
push
sahf
mov
adc
mov
cs
mov
pop
outs
cmp
mov
cmp
push
je
mov
push
test
sbb
xlat
div
(bad)
scas
sar
cmp
inc
fsub
cld
sub
scas
dec
bound
in
mov
push
addr16
adc
cmp
jg
das
push
sbb
mov
rol
in
hlt
xor
test
enter
retf
in
int3
ds
lods
add
in
or
inc
ss
push
add
mov
sbb
call
xor
cwde
ret
dec
fcmovnu
nop
xchg
(bad)
xlat
es
fucomp
mov
leave
add
ins
adc
cmps
or
imul
xor
in
mov
(bad)
fmul
cld
(bad)
loopne
jl
ror
mov
sbb
xchg
mov
dec
cmps
out
mov
das
sbb
nop
mov
sbb
cld
xor
ins
push
or
and
or
cmp
mov
sub
int
push
ins
mov
data16
hlt
jmp
lds
xchg
dec
pop
out
sub
dec
push
(bad)
xlat
ffreep
xchg
test
or
pop
push
xchg
pushf
call
(bad)
adc
enter
in
retf
test
cmps
mov
or
or
or
dec
nop
ja
popf
jo
mov
jp
add
mov
dec
and
ja
out
xor
inc
cmp
sub
jmp
fwait
mov
dec
int3
push
(bad)
cmp
bound
adc
ret
pop
jae
mov
shl
jb
in
in
ret
aas
into
cmp
std
jo
mov
pop
cmps
dec
jp
xchg
xor
xchg
aam
shl
xor
jne
fdivp
in
or
ret
push
es
jecxz
sub
icebp
cwde
xchg
xor
mov
ss
jmp
cmp
std
add
push
adc
dec
mov
mov
adc
xor
mov
fisub
sbb
mov
sub
outs
sub
js
mov
daa
sub
dec
scas
cli
jnp
int
push
mul
not
(bad)
and
push
(bad)
retf
and
bound
jb
pop
jns
clc
lea
mov
test
leave
pop
add
es
push
xor
sbb
xor
mov
clc
pop
cmps
push
push
push
loope
xchg
ret
xor
(bad)
icebp
mov
pop
(bad)
pop
push
fimul
inc
cmp
loop
inc
sbb
outs
adc
cld
mov
sar
push
jb
sbb
sbb
lods
sbb
push
arpl
xchg
iret
das
js
in
repz
xor
call
or
and
fsub
aaa
aaa
loop
fnsave
mov
add
cmp
fs
xchg
into
sub
aad
(bad)
ds
adc
jg
gs
mov
or
sub
and
xchg
mov
sbb
mov
mov
push
cmp
and
jge
xchg
and
and
(bad)
mov
or
mov
xchg
mov
into
or
xchg
sub
mov
push
mov
hlt
out
jbe
mov
cmp
int3
ror
mov
add
dec
jnp
mov
and
(bad)
and
je
xor
stc
(bad)
(bad)
xchg
aas
sbb
or
imul
sbb
add
inc
fisttp
fist
adc
pop
popf
xlat
in
hlt
pushf
sbb
test
pop
js
xchg
out
test
popa
mov
dec
movs
imul
xor
jecxz
ds
es
stos
(bad)
popa
and
mov
pop
jne
jmp
repnz
fucompp
sti
call
inc
cdq
add
inc
push
xlat
pop
add
in
cs
sbb
call
mov
mov
add
add
retf
push
mov
add
cli
rcl
hlt
inc
mov
shl
pop
xor
inc
xchg
mov
fstp
aas
dec
push
cmp
dec
mov
push
xor
fist
xchg
push
ror
stos
adc
idiv
push
or
neg
inc
push
inc
leave
aad
sar
(bad)
dec
vunpckhps
stos
and
loope
aas
sbb
clc
aam
pop
daa
xchg
xchg
arpl
dec
add
and
test
ret
jb
dec
pop
test
push
in
fdivr
push
pop
loopne
out
(bad)
jb
mov
xor
out
mov
sbb
pop
mov
fidiv
push
jns
sub
xchg
dec
sub
cwde
cmps
lea
push
ss
or
pop
cmp
jnp
push
out
mov
dec
arpl
test
pushf
and
sub
add
hlt
clc
repnz
mov
outs
inc
jecxz
adc
ror
adc
aam
fdiv
int3
push
xchg
dec
loope
mov
loopne
sub
fidiv
cmp
cmps
inc
(bad)
and
int
into
mov
xchg
add
pusha
pop
inc
mov
jecxz
sub
add
mov
sbb
sub
xchg
imul
inc
idiv
lock
test
add
pop
sub
jne
fidiv
ror
jne
adc
xchg
mov
rcl
js
mov
rcl
pop
(bad)
sti
js
xor
xor
test
pop
add
ss
jp
dec
inc
mov
xchg
push
pop
add
shl
or
aaa
lahf
div
lahf
out
mov
dec
jp
jns
(bad)
cli
repz
or
pusha
call
ret
out
fcomp
add
movs
jnp
sub
pop
lea
and
aad
ss
fisub
cmp
inc
xor
sub
pop
mov
sbb
mov
clc
xchg
cmp
adc
pusha
call
mov
xchg
ins
arpl
push
cmps
dec
cli
repnz
jno
sub
push
in
loope
dec
pop
fisttp
jp
jecxz
xchg
cmp
push
ins
mov
push
ror
pop
es
mov
dec
adc
and
push
inc
adc
call
pop
xor
xchg
out
push
lods
jns
mov
test
or
test
sub
push
add
lock
mov
or
mov
in
jnp
retf
push
xor
inc
js
sahf
(bad)
adc
inc
add
int
dec
inc
pusha
jp
fist
sbb
sbb
aam
lods
xchg
or
push
adc
cld
scas
fistp
cli
ss
das
jns
pop
jnp
add
cmp
and
mov
pop
xchg
xchg
pop
inc
and
pop
popf
je
mov
mov
mov
out
mov
xor
mov
mov
cmp
mov
cmp
aam
cdq
loop
out
daa
push
and
xor
in
adc
push
inc
fisttp
inc
cmp
xchg
fsub
add
and
jl
mov
rcr
das
test
push
push
lea
mov
daa
push
inc
and
popa
push
and
fild
(bad)
and
mov
(bad)
pop
movs
sbb
into
cmp
inc
mov
mov
iret
test
push
das
lods
bound
sbb
cwde
mov
loopne
add
push
jg
cs
inc
nop
gs
mov
and
out
cmp
std
adc
cmp
dec
mov
fdivr
inc
or
aaa
add
aam
push
add
adc
(bad)
in
lods
shr
xbegin
inc
push
clc
outs
out
fs
adc
pop
sbb
dec
inc
fwait
retf
test
push
outs
idiv
out
mov
mov
cmps
std
fucomi
leave
jae
or
fnsave
inc
mov
sub
aas
repnz
sbb
ins
or
jae
inc
(bad)
call
mov
xchg
pop
jecxz
jmp
mov
cwde
add
xlat
jl
mov
std
mov
setno
inc
adc
cmp
paddsw
(bad)
push
int
xor
add
push
call
sbb
lods
lahf
jp
pushf
inc
inc
cmp
jae
pop
push
sub
push
adc
inc
out
stc
ret
pop
out
inc
sar
imul
aam
mov
addr16
push
dec
mov
(bad)
or
test
cdq
xor
pop
bound
movs
sub
sub
jo
not
(bad)
popf
sbb
jno
popf
or
mov
mov
jbe
cmp
pushf
mov
add
add
mov
lock
(bad)
hlt
inc
dec
test
je
neg
xor
add
sbb
jge
dec
dec
inc
ror
or
add
fimul
add
dec
ror
cmp
retf
push
jecxz
push
mov
jecxz
icebp
xchg
xchg
fld
sti
jge
ret
jno
adc
cmp
adc
loop
and
nop
and
jl
push
lods
call
xor
gs
adc
jg
inc
jl
test
popf
and
mov
dec
scas
pop
jno
xchg
int3
jne
sbb
pop
mov
ds
and
pop
dec
movs
or
jg
test
stos
daa
repz
gs
icebp
lods
dec
les
fdivr
stc
and
clc
ret
sahf
outs
ds
scas
test
cmp
sti
add
inc
mov
fmul
imul
fisubr
jns
fimul
push
pop
hlt
inc
cmp
stos
lahf
(bad)
xchg
inc
sbb
jb
dec
cwde
fmulp
xchg
cmp
test
jge
ja
fwait
sti
and
aam
xchg
and
nop
call
fwait
(bad)
shl
xchg
pop
cmp
lds
(bad)
cmps
out
mov
loope
cwde
inc
clc
sub
(bad)
push
loop
ins
and
pop
pop
div
or
(bad)
push
std
fwait
retf
jp
jp
add
aas
xor
mov
test
sahf
leave
and
imul
push
dec
push
aaa
(bad)
push
push
imul
ins
sub
mov
stc
in
imul
rcl
cmps
test
(bad)
sahf
or
cmp
add
push
sbb
add
les
and
or
dec
data16
push
(bad)
sbb
sbb
xor
inc
mov
pop
out
ffreep
push
ret
int3
and
pop
and
jmp
lea
aas
cmp
les
push
sub
mov
pop
popf
daa
jns
xor
aaa
call
outs
(bad)
fistp
ins
xor
sbb
das
jbe
cdq
dec
jne
mov
popa
cdq
test
cmp
xchg
push
cwde
fs
(bad)
test
pop
sahf
cmps
retf
mov
addr16
fdivr
pop
mov
stos
xchg
out
mov
ret
popf
xor
dec
mov
dec
dec
xor
cmp
(bad)
popa
frndint
loop
push
inc
in
ror
inc
test
pop
aad
imul
cmp
in
dec
adc
or
inc
mov
sar
cmp
xor
rol
adc
cli
movlps
cmp
mov
xlat
shl
mov
retf
(bad)
jbe
data16
dec
cli
popf
fs
movs
stos
adc
push
dec
loop
cmc
sbb
pushf
fidiv
out
and
mov
aaa
jno
or
sub
pop
popa
cmp
mov
add
dec
retf
sti
cmp
sbb
int3
add
fnstsw
mov
pop
jmp
push
cdq
jl
dec
mov
das
pop
in
test
aam
in
or
sub
xchg
scas
push
int3
push
or
les
sub
sar
adc
aam
jmp
cmc
shl
mov
cli
iret
push
lods
sbb
cmp
push
(bad)
mov
leave
es
sub
jae
mov
or
in
rcr
inc
adc
mov
out
jbe
arpl
gs
mov
sbb
mov
add
inc
xchg
xor
ins
and
jae
lods
js
sub
fucomi
push
(bad)
push
mov
rcl
inc
test
inc
int3
pusha
fsubp
je
pushf
cdq
inc
loop
cmp
or
cmp
push
cmc
lods
mul
lock
loopne
jp
xor
xchg
cmps
outs
in
test
iret
repz
mov
cmps
mov
sti
and
mov
push
scas
push
scas
cdq
push
sti
mov
push
pop
jns
cmp
mov
sbb
sub
sub
std
mov
aas
sbb
outs
ja
ret
adc
loopne
cmps
dec
call
cld
adc
xor
jnp
dec
icebp
sub
imul
adc
or
ja
ins
fsub
repz
leave
pop
push
sbb
shl
retf
mov
xlat
repnz
inc
sub
mov
cld
outs
inc
push
and
dec
ja
lods
push
mov
push
mov
stc
jbe
push
xor
cmps
mov
xor
iret
mov
movs
inc
or
sub
int
xchg
(bad)
mov
push
pop
or
mov
scas
adc
icebp
push
mov
out
addr16
movs
dec
adc
xor
adc
cmps
out
pop
movs
add
cmc
mov
inc
cdq
xchg
cwde
mov
mov
add
sbb
aad
test
aam
mov
xchg
jbe
inc
pop
adc
fwait
stos
sbb
xchg
dec
xchg
mov
les
pop
push
sub
(bad)
scas
lds
mov
cli
cmps
sub
aam
mov
xchg
hlt
cdq
lods
pop
push
sub
les
ins
jmp
push
xor
loopne
jnp
test
lods
loopne
dec
pop
and
out
sbb
in
add
mov
mov
(bad)
int
ins
dec
cmps
(bad)
(bad)
mov
sbb
sub
int
aaa
pop
add
mov
sbb
addr16
cmc
sub
xlat
cmp
pop
adc
pop
(bad)
pop
mov
dec
loopne
xlat
out
(bad)
in
lods
jmp
xchg
rol
add
ror
mov
and
dec
mov
(bad)
xor
test
mov
pop
iret
xchg
out
sahf
dec
add
jnp
test
mov
call
std
pop
and
sbb
mov
clc
cs
stc
xchg
div
cmps
add
mov
cmc
outs
jecxz
stos
in
jmp
inc
retf
pop
add
dec
sbb
push
push
adc
push
arpl
push
shl
push
out
adc
mov
out
sub
pop
dec
retf
in
lods
fxtract
xor
(bad)
cmp
adc
push
mov
out
out
lods
cmp
dec
cmp
mov
mov
dec
daa
cmp
ds
or
dec
sbb
adc
dec
out
xlat
jecxz
sahf
stc
loop
add
or
(bad)
test
push
or
mov
aaa
mov
jns
jae
mov
jbe
pop
sti
push
fs
adc
mov
push
ja
sbb
or
cmp
es
(bad)
mov
cdq
fnstcw
mov
add
call
gs
cmp
fwait
out
inc
push
mov
inc
mov
mov
mov
sbb
push
xchg
(bad)
nop
or
jbe
jmp
mov
mov
movs
and
add
cmc
dec
aad
jo
jg
scas
sbb
test
pop
jp
pop
popa
mov
lock
test
outs
pusha
adc
in
out
jnp
xchg
mov
leave
fistp
jg
mov
fmul
retf
or
sub
(bad)
sub
add
xchg
add
in
push
mov
stos
sub
test
jge
sbb
jmp
pop
dec
sbb
out
mov
out
cmp
fmul
pop
xchg
loop
sub
inc
sbb
ds
call
sbb
cdq
push
das
mov
dec
mov
rcl
cmp
(bad)
scas
sbb
inc
retf
mov
daa
sub
dec
data16
loop
out
in
adc
popf
xchg
mov
das
aas
inc
mov
mov
js
les
sub
sbb
cmp
pop
or
test
bound
test
cmps
adc
jge
ret
mov
dec
xor
sbb
mov
xchg
sti
mov
mov
mov
(bad)
jmp
(bad)
scas
xor
inc
stos
in
add
xor
pop
ret
jne
ins
cmp
cmps
(bad)
(bad)
stos
shr
mov
jbe
inc
pop
out
(bad)
jmp
arpl
rcl
repnz
push
add
outs
sbb
add
retf
inc
lds
jmp
mov
stc
mov
mov
sub
mov
add
jno
mul
enter
push
mov
cmp
(bad)
int
sbb
cmps
push
fs
popf
shr
aaa
xor
adc
call
adc
push
or
jmp
inc
xlat
call
xchg
or
mul
outs
xchg
popf
jns
cmc
rcl
xchg
es
psadbw
cmp
nop
push
lahf
cmp
ret
sahf
lods
cmps
adc
mov
and
adc
test
fwait
into
cmp
push
add
dec
xchg
retf
xchg
mov
in
sbb
jge
sbb
add
ja
mov
(bad)
and
shr
sti
jne
div
and
mov
fadd
pop
and
xchg
sub
xor
pushw
xor
retf
jo
sti
dec
sub
sti
push
loope
jns
popa
dec
jmp
aam
xor
push
jne
xchg
cwde
jl
sbb
fcom
mov
inc
push
js
dec
pop
add
inc
daa
std
xchg
scas
ss
loop
arpl
push
or
les
stos
sbb
adc
push
sub
loope
inc
jge
mov
inc
scas
std
das
cmc
push
in
pop
sti
aad
dec
cmps
mov
xchg
jp
mov
pusha
sub
mov
and
xor
pusha
xor
sub
jmp
pop
(bad)
inc
sahf
xlat
imul
dec
lahf
adc
mov
scas
shl
inc
retf
mov
shl
jp
sti
xchg
push
dec
cwde
clc
clc
mov
push
pop
(bad)
js
or
popa
pop
push
scas
jmp
push
cwde
jecxz
mov
(bad)
retf
jge
add
fld
js
xor
fsub
or
jle
pop
push
xchg
or
icebp
dec
pop
push
aam
stos
or
adc
sbb
out
mov
bnd
ss
xor
into
stos
movs
shl
xor
fmul
rcr
inc
fucomp
or
test
push
test
loope
inc
(bad)
xchg
shl
movs
hlt
outs
mov
mov
lock
call
pop
xchg
or
dec
add
cli
popa
sahf
inc
movs
or
xor
shl
xor
mov
cmp
(bad)
mov
inc
sar
dec
enter
add
pop
in
or
sbb
aam
pop
sbb
xchg
cmps
push
mov
pop
or
int3
jnp
mov
pop
inc
ret
pop
dec
adc
push
fsubp
mov
int3
push
aas
mov
out
sbb
fadd
mov
or
test
(bad)
inc
aad
clc
inc
outs
mov
sub
iret
ja
mov
(bad)
rcl
mov
pop
or
sub
rcr
js
sub
cmp
int3
mov
outs
rcl
loope
sbb
sbb
pop
shr
xor
ror
in
mov
push
rcr
push
call
cmp
dec
and
cmp
jno
xor
add
xor
or
mov
pop
xchg
enter
adc
sub
xchg
das
mov
dec
adc
adc
leave
push
add
pop
sbb
jae
adc
or
xchg
repz
sbb
out
addr16
mov
sub
inc
rcr
mov
push
sub
mov
pop
adc
mov
outs
push
push
(bad)
adc
push
and
or
cmp
movs
mov
and
out
cmps
sub
sbb
inc
mul
dec
shl
fisub
sub
bound
test
sbb
mov
setl
in
mov
inc
mov
cs
stos
imul
leave
ins
loope
mov
xchg
push
push
adc
mov
(bad)
movs
call
out
loop
push
fs
jle
inc
sbb
scas
sub
mov
adc
adc
sbb
nop
mov
adc
out
push
test
push
and
xchg
daa
hlt
call
sub
les
call
ret
xchg
mov
mov
repnz
jnp
xchg
add
or
nop
test
or
movlps
int3
ins
dec
pop
mov
dec
stos
sbb
mov
jns
sbb
movs
jmp
xchg
add
xor
jp
in
dec
dec
jnp
sbb
or
test
inc
aad
dec
out
lock
test
jae
out
mov
cli
shr
ja
push
lahf
out
jg
data16
ror
fstp
push
sbb
cmp
jg
(bad)
sar
jmp
out
push
pop
jp
inc
mov
mov
mov
shr
push
rcr
mov
repz
imul
(bad)
in
out
xor
pop
xor
jle
adc
arpl
add
inc
fisttp
das
add
push
mov
jne
in
fmul
in
jmp
sub
adc
mov
mov
jno
and
mov
or
mov
xor
push
inc
in
cmp
ret
xchg
rol
mov
shl
mov
int
jae
fcomp
loope
add
mov
dec
in
mov
jg
mov
pop
inc
dec
mov
pushw
mov
and
fcmovnu
cmps
sub
cwde
inc
(bad)
repz
retf
jp
mov
inc
jne
add
das
mov
mov
mov
sbb
sbb
adc
pushf
shl
xlat
data16
into
aaa
out
dec
aad
ins
sti
xor
pop
nop
scas
sub
or
xchg
inc
adc
inc
adc
dec
or
lock
cmc
xor
(bad)
out
sbb
out
nop
push
jecxz
aaa
dec
mov
imul
jge
leave
retf
xor
cmps
cld
pop
mov
sti
(bad)
and
sbb
mov
cwde
add
sub
in
stos
dec
pop
jmp
fimul
xchg
cmp
xor
jge
cmp
retf
cmc
adc
xor
pop
repnz
in
lock
and
or
xor
and
lock
icebp
jno
ret
mov
scas
sub
xchg
jg
xor
dec
std
mov
jmp
inc
sub
sub
cmp
xor
and
stc
ins
punpckhbw
mov
dec
inc
rcl
pop
sub
sub
dec
jg
call
mov
out
jl
sahf
loopne
mov
push
xor
idiv
cmp
mov
or
shl
jae
clc
movs
push
xchg
adc
test
loopne
les
pop
adc
pop
lea
(bad)
sub
adc
push
and
rol
mov
mov
in
fstp
mov
and
fist
mov
retf
inc
fcom
movs
or
jl
int3
jecxz
push
push
push
fcomp
ins
aam
xchg
pop
push
outs
out
out
xchg
ret
mov
sub
jbe
or
mov
mov
jmp
adc
jmp
adc
push
mov
sti
lods
popf
bound
jo
pusha
xlat
or
or
push
jp
pop
retf
std
(bad)
test
pop
adc
(bad)
jmp
call
or
and
push
ror
dec
loop
inc
mov
sub
lods
xchg
int3
test
das
mov
jno
popf
mov
jns
inc
int3
dec
into
pop
xor
js
and
mov
jmp
push
jne
cmp
or
xchg
fstp
mov
xor
inc
or
ror
rcl
retf
mov
cld
mov
out
jo
fwait
shr
mov
adc
arpl
cwde
into
jbe
or
std
inc
jnp
sbb
jne
sbb
cli
xor
fdiv
(bad)
rol
pop
push
fisttp
jb
(bad)
dec
fiadd
ret
add
inc
and
adc
push
jge
loop
xor
loop
dec
and
pop
in
ret
lods
sbb
int
out
fwait
add
pop
push
lods
pop
int
sbb
xrelease
jge
mov
push
test
ret
mov
test
rcl
mov
int3
cmps
shr
and
mov
inc
sub
das
jae
push
push
(bad)
jmp
test
(bad)
mov
inc
aad
mov
inc
movnti
jle
lods
pop
push
dec
mov
jae
mov
ret
xchg
enter
test
dec
inc
out
mov
pop
test
jle
and
pop
test
add
outs
push
repnz
addr16
adc
sbb
addr16
hlt
inc
out
shl
cmp
mov
mov
(bad)
mov
mov
outs
sub
mov
and
xchg
jmp
(bad)
(bad)
xor
ds
les
jecxz
and
mov
dec
mov
and
cmps
fdiv
(bad)
fsubr
jb
jmp
push
pusha
(bad)
in
js
adc
cmps
nop
mov
int3
loope
fdivr
push
jge
jl
or
bound
or
push
test
(bad)
daa
add
test
rep
pop
mov
xor
inc
clc
inc
test
scas
xchg
push
(bad)
push
cmps
(bad)
jmp
xor
push
sbb
inc
fld
fldcw
lock
cmp
pushw
test
sbb
in
pop
or
inc
mov
push
inc
sbb
mov
call
pop
mov
cmps
ins
scas
cli
(bad)
cwde
call
xor
inc
cmp
jno
add
pusha
and
add
clc
sub
inc
and
test
inc
dec
repnz
cmc
push
pop
and
or
fadd
push
lods
mov
push
pop
mov
xor
xchg
adc
adc
cdq
gs
sbb
mov
add
mov
mov
jmp
xor
mov
test
mov
mov
mov
hlt
in
jle
mov
data16
mov
fisttp
xor
lods
add
xchg
jnp
xchg
mov
jae
xchg
mov
sub
jb
lock
movs
sub
gs
movs
test
xor
jbe
push
dec
sbb
mov
arpl
cmps
dec
jne
fistp
add
idiv
cmp
mov
stos
pop
xchg
in
mov
outs
pop
fsub
aad
or
push
inc
pop
sbb
cdq
mov
in
push
aad
sub
ins
call
dec
stc
or
sub
outs
jge
idiv
push
adc
dec
dec
fcomp
(bad)
fistp
out
shl
jo
jnp
mov
xor
retf
pop
test
inc
les
stc
fistp
add
addr16
and
ds
enter
push
jecxz
add
adc
ror
inc
out
and
mov
jns
jno
(bad)
xor
into
cwde
mov
ret
ins
push
push
sbb
xchg
add
rcr
xchg
mov
or
fisttp
jns
popf
mov
outs
cmc
ja
fstp
sbb
inc
hlt
mov
mov
ret
clc
jl
sub
mov
(bad)
(bad)
xchg
adc
sar
repnz
pop
ins
push
push
cwde
scas
sbb
lods
shl
out
xlat
xor
ret
mov
sub
mov
xor
lods
pop
lea
inc
aam
mov
xor
jge
or
mov
pop
mov
neg
ficom
dec
inc
into
outs
dec
repz
sbb
inc
and
imul
mov
lods
mov
js
and
mov
xchg
in
mov
ret
imul
inc
sbb
pop
repz
push
into
retf
add
shl
dec
cmp
xchg
and
inc
pop
dec
jl
out
jmp
or
xor
aaa
test
mov
lock
popf
pop
mov
jo
(bad)
js
(bad)
xchg
sbb
loopne
cli
inc
dec
mov
push
aas
xor
push
and
loop
in
iret
daa
cld
mov
or
cwde
mov
inc
cmp
rol
mov
jb
(bad)
jp
cs
loop
jo
cli
jmp
jo
nop
jle
mov
mov
dec
popf
jnp
cli
sub
lods
(bad)
repnz
xchg
neg
repz
pop
stos
fiadd
sbb
mul
mov
daa
daa
ja
jg
pop
or
add
fidiv
pushf
mov
and
cmp
out
jl
cs
sub
sbb
pop
adc
scas
mov
stos
and
adc
add
jno
or
sub
mov
mov
mov
shl
sbb
shr
mov
cdq
add
push
je
cli
sub
scas
cmp
lea
fisubr
jno
pop
and
outs
or
fwait
lds
(bad)
or
ss
popa
sbb
or
in
int3
sub
leave
cmp
stos
call
sub
js
loopne
push
icebp
(bad)
aas
sbb
xor
or
inc
sti
jecxz
mov
pop
(bad)
imul
out
in
xchg
into
pop
mov
xchg
push
lahf
hlt
push
push
push
aam
aam
and
ds
dec
jecxz
lea
xor
sbb
xchg
sub
cmp
hlt
mov
les
aad
dec
mov
cdq
xchg
call
jnp
aad
push
inc
sbb
iret
lds
adc
mov
mov
cmp
inc
jg
inc
arpl
inc
push
stos
outs
xor
ficom
inc
push
imul
xor
movs
enter
(bad)
repnz
rcl
adc
iret
arpl
pusha
jb
xchg
xchg
push
popf
xchg
mov
inc
lods
sbb
in
xor
xchg
or
rol
pop
or
cli
jnp
mov
xlat
pop
xlat
mov
cmp
call
sti
loop
inc
add
stos
jge
cld
cmps
cmp
(bad)
mov
into
aam
dec
pushf
jmp
test
and
test
addr16
hlt
inc
jmp
push
push
retf
or
mov
or
or
pop
push
(bad)
adc
mov
fist
pop
mov
jnp
add
das
das
and
jns
sbb
and
push
cmps
jae
or
sub
mov
mov
mov
adc
push
jg
xor
ins
xchg
dec
add
out
pop
add
repz
scas
mov
aaa
ja
jae
mov
mov
test
nop
ss
rol
shr
pop
and
or
and
cmp
inc
fistp
or
ffreep
xor
mov
es
in
xor
push
pop
outs
or
ds
(bad)
rcr
xchg
push
out
into
fdiv
push
mov
sub
or
add
push
je
or
sti
and
movs
ret
inc
loopne
or
add
(bad)
retf
pop
jecxz
dec
loope
add
adc
xor
mov
test
rol
mov
scas
or
movs
aas
and
lds
out
cmp
mov
out
push
mov
ins
scas
stos
xchg
imul
mov
add
dec
xor
ja
mov
mov
mov
pop
push
cmp
ins
je
aam
(bad)
cld
out
retf
fisttp
inc
sbb
jb
fild
adc
aam
movs
enter
push
and
out
ret
jne
or
(bad)
pop
pop
(bad)
adc
and
xchg
pop
jecxz
loopne
push
or
and
inc
sahf
fucom
imul
cmps
xor
sbb
das
add
rcl
lock
sub
adc
adc
movs
outs
hlt
add
popa
pop
and
xchg
mov
adc
outs
(bad)
xchg
add
pushf
jl
std
and
ds
mov
das
xor
in
jb
popa
imul
imul
push
jb
inc
inc
fistp
inc
cmps
pop
or
mov
push
outs
(bad)
mov
neg
aam
retf
add
retf
cmp
popf
aaa
add
mov
dec
imul
retf
push
stos
pusha
sub
add
jns
(bad)
mov
ins
int3
lahf
or
adc
push
and
xor
and
enter
es
mov
aaa
setbe
stos
into
test
vxorpd
xchg
pop
dec
xor
vcvtdq2pd
and
lahf
shl
mov
enter
icebp
mov
gs
jne
pusha
or
pop
mov
sub
inc
dec
test
mov
(bad)
jnp
mov
retf
(bad)
or
inc
nop
jge
mov
push
mov
pop
nop
xrelease
loop
mov
push
sub
pusha
in
dec
pop
or
xchg
rcr
xchg
jns
inc
mov
call
hlt
fwait
retf
xchg
imul
(bad)
sti
push
nop
mov
and
sub
adc
movs
cld
cmp
sbb
mov
cli
xchg
gs
ds
inc
dec
rcr
lods
ja
jg
(bad)
popa
sahf
jp
imul
jecxz
cmp
jecxz
out
mov
fmul
pop
popa
stos
adc
clc
arpl
or
enter
repnz
ja
loopne
xchg
pop
into
mov
(bad)
jmp
xor
int3
xchg
mul
mov
shr
in
test
inc
das
jle
and
sub
dec
pop
push
sub
adc
popf
push
mov
pop
std
je
(bad)
fcomip
cli
cmp
sub
mov
sar
sub
int
cmp
cmp
xchg
pusha
ins
inc
xchg
shl
jbe
or
js
push
sub
push
mov
sub
xlat
ins
repnz
xchg
sub
aam
jge
pop
push
je
rol
or
xor
mov
into
dec
int3
jmp
aas
in
xchg
int3
loope
pop
adc
mov
mov
sahf
dec
loopne
cli
mov
mov
mov
aam
dec
rol
xor
mov
in
xor
adc
mov
pop
cmc
test
lock
push
outs
hlt
in
pop
mov
push
mov
mov
sub
sub
out
pop
xlat
sub
or
stos
mov
call
fst
lds
or
adc
and
xor
push
inc
and
div
cmp
fist
pushf
pop
(bad)
mov
or
dec
inc
mov
xchg
lods
(bad)
mov
outs
mov
(bad)
out
jns
jl
adc
leave
adc
fmul
je
dec
fiadd
adc
shl
rcr
mov
rol
in
out
xchg
lds
inc
xchg
jnp
cmp
test
mov
aaa
push
push
sbb
(bad)
xlat
mov
out
lea
cmp
popf
jb
and
pop
int
jmp
pop
sbb
retf
sahf
pop
out
sbb
xchg
mov
push
call
dec
(bad)
js
xchg
test
in
xchg
les
sub
or
jl
test
jge
das
xchg
push
or
jb
dec
icebp
int3
mov
clc
add
fist
ffree
rol
jns
fstp
mov
test
pop
xchg
cmp
fidivr
cmp
inc
sub
int3
sbb
or
aas
mov
push
icebp
mov
shl
sbb
push
or
sbb
push
arpl
ror
and
and
jmp
into
adc
or
push
ficom
movs
retf
dec
pop
and
pop
mov
lds
cli
iret
xor
test
xor
xchg
std
test
or
hlt
push
mov
xchg
xor
dec
xor
dec
int
inc
stos
jae
lahf
push
cmp
cmp
(bad)
mov
push
xchg
repz
inc
int3
mov
jne
sbb
adc
pop
mov
jp
add
add
cmc
pop
and
in
(bad)
data16
adc
shl
lahf
in
or
lods
adc
jnp
sub
in
enter
jge
xchg
dec
jb
cmp
push
sti
xor
inc
jnp
mov
push
and
adc
mov
xchg
out
retf
xor
mov
jecxz
adc
sub
test
(bad)
test
cs
(bad)
in
pop
aad
and
ss
mov
out
daa
in
ss
stc
push
cwde
sub
outs
pusha
and
hlt
inc
mov
mov
cmp
xlat
push
sahf
les
and
push
inc
arpl
inc
xchg
mov
and
sbb
jmp
outs
out
(bad)
pop
jnp
cmc
pop
cmp
div
xchg
pop
jbe
push
arpl
pop
adc
fadd
int3
mov
or
mov
pop
sub
pop
(bad)
movs
mov
mov
add
mov
out
outs
pushf
mov
je
cmps
sti
out
addr16
cdq
sbb
stos
outs
adc
imul
popf
sahf
out
xor
test
pop
or
js
push
arpl
cli
ss
xchg
mov
xor
inc
sub
cmp
mov
cmp
retf
leave
ficomp
push
pop
ror
add
lds
xchg
mov
sbb
or
or
aad
dec
stos
sbb
shl
mov
mov
cld
dec
mov
stos
sbb
test
jo
stos
mov
cwde
push
mov
pop
cmp
add
inc
xor
jl
aaa
mov
hlt
xchg
repz
sbb
(bad)
adc
fs
add
inc
jl
xchg
and
jnp
icebp
bound
dec
cmps
retf
(bad)
repz
pushf
push
pop
js
ins
mov
sbb
inc
inc
adc
mov
scas
mov
arpl
aam
arpl
sbb
mov
ss
jno
inc
rcl
inc
jle
push
push
adc
sbb
push
fucomip
idiv
xchg
add
rcl
push
push
mov
(bad)
loop
xchg
inc
loopne
cmp
mov
(bad)
push
(bad)
mov
call
mov
pop
or
ficom
(bad)
rcr
mov
into
shl
sub
scas
adc
mov
jmp
jg
mov
sar
mov
arpl
ror
jbe
cmps
clc
jb
add
pop
mov
std
int3
dec
outs
pop
sbb
das
stos
fcom
retf
shl
sbb
les
inc
dec
hlt
in
lock
and
push
mov
movs
push
and
mov
js
adc
cld
lea
mov
adc
hlt
(bad)
mov
movs
jp
aad
cmp
add
stc
mov
outs
fist
into
mov
ss
xor
push
leave
out
int
and
retf
jmp
pop
ret
rol
pusha
jle
pop
je
movs
jb
inc
mov
xchg
imul
push
call
cld
cmp
xlat
iret
mov
sub
cmc
clc
inc
mov
push
ds
in
cmp
inc
arpl
out
pop
in
or
inc
add
sbb
sbb
or
das
jnp
push
xchg
sbb
mov
movs
and
and
std
jmp
push
sbb
stc
out
(bad)
lods
aas
cmp
mov
jns
add
or
sub
mov
cmp
and
out
push
loopne
sbb
call
popa
or
(bad)
pop
neg
cmps
push
inc
scas
adc
mov
pop
into
mov
inc
out
jmp
add
and
dec
iret
sub
mov
nop
and
cmp
xor
stc
cmp
cli
jp
jmp
mov
push
aam
xchg
imul
ins
icebp
sub
pop
retf
mov
jg
mov
test
mov
xor
sub
adc
xchg
addr16
test
cs
sub
xchg
adc
addr16
adc
push
aam
mov
push
ret
and
mov
pop
cli
adc
movaps
cmp
cmc
sub
lock
pop
jle
cmp
cwde
int3
ret
pop
dec
dec
loope
xchg
enter
mov
fstp
or
add
sub
jg
mov
pop
or
pop
cmc
jno
pop
add
repnz
fisttp
pop
jno
dec
stos
sar
add
cmp
jne
stos
hlt
jmp
cwde
fld
ret
rcl
mov
daa
mov
push
rcr
bound
sub
in
or
xor
mov
arpl
int3
(bad)
fwait
adc
add
pop
fbstp
mov
push
mov
clc
sub
loop
mov
das
leave
push
add
sahf
mov
idiv
xchg
dec
mov
cli
nop
cmp
mov
and
inc
sub
nop
xlat
and
pop
cs
push
(bad)
cmp
movs
outs
xchg
add
mov
jle
out
xchg
call
fsubr
imul
mov
test
leave
jne
xchg
sbb
movs
test
aam
pushf
mov
pop
mov
jno
jae
outs
adc
or
sub
xor
and
imul
fiadd
ret
leave
add
mov
fs
mov
jmp
xor
push
push
das
and
sub
xchg
int3
scas
dec
jae
or
lds
movs
mov
ficom
loope
dec
hlt
xchg
movs
xchg
pusha
retf
add
mov
pop
xor
xor
ror
stos
movs
push
imul
aas
xor
add
dec
mov
jno
sbb
push
adc
push
jp
das
fdivrp
push
stos
sti
lahf
fidiv
add
xchg
rcl
sbb
movs
lods
js
cwde
jne
stos
cmps
xchg
mov
add
stc
div
(bad)
ds
imul
xor
jge
cmc
sahf
(bad)
pop
jge
in
adc
iret
xchg
jo
dec
jae
dec
jg
ins
(bad)
jmp
mov
shr
icebp
jno
scas
pusha
jmp
imul
mov
cwde
rol
push
push
aaa
mov
sbb
pop
sti
pop
out
imul
mov
sbb
pop
dec
sub
dec
cmps
adc
in
test
icebp
iret
cwde
fs
fisubr
mov
gs
cmc
pop
jecxz
das
ins
pop
pop
fidiv
(bad)
jno
pop
test
adc
dec
mov
cmp
add
loop
xor
xor
or
lahf
cmps
adc
pop
push
mov
cwde
mov
(bad)
sub
lods
jb
add
neg
fs
addr16
jp
out
xchg
xchg
loopne
pop
mov
add
arpl
in
nop
test
loop
cmps
scas
mov
or
jae
dec
in
loop
sbb
push
xchg
mov
adc
stc
mov
stc
or
gs
push
(bad)
pop
and
fstp
(bad)
dec
or
icebp
or
ficom
cmc
cmp
cvtps2pi
adc
push
repnz
shl
pusha
mov
loop
sub
(bad)
cdq
cwde
mov
je
retf
cmp
sbb
(bad)
ds
xor
ret
gs
push
stc
xchg
xchg
or
dec
lahf
fwait
push
cwde
arpl
mov
inc
fidivr
mov
or
in
jecxz
jmp
bound
sar
lock
dec
popf
mov
neg
push
push
jp
mov
mov
hlt
cmps
mov
sub
pop
arpl
cld
jl
int3
jo
adc
movs
cld
(bad)
mov
cmc
in
pop
in
stos
arpl
(bad)
pop
or
sub
popf
ins
mov
aas
jbe
call
(bad)
mov
mov
cdq
cmps
mov
cwde
jae
pop
mov
div
jo
lea
out
lahf
mov
cli
adc
in
pop
into
sbb
outs
pop
mov
loope
bound
retf
pushf
mov
cmc
jnp
stc
or
xor
imul
bsr
xchg
icebp
inc
xchg
add
imul
retf
add
pop
xor
aas
add
jb
aam
(bad)
cmp
popa
push
sbb
mov
xchg
cmps
retf
or
rcl
pop
sub
je
ja
bound
push
dec
cmps
mov
xor
adc
(bad)
pop
sbb
fisttp
jp
push
inc
mov
lock
jne
adc
jb
cmps
push
adc
ins
std
aaa
adc
into
fisubr
ins
pop
and
push
ins
inc
sub
adc
ins
pop
jecxz
mov
jo
push
mov
mov
out
xchg
ds
or
mov
pop
mov
pop
bnd
addr16
nop
out
int
pop
fldcw
push
mov
retf
mov
(bad)
call
popa
pop
fild
imul
xchg
je
jmp
add
nop
idiv
call
sti
sbb
ret
inc
inc
pop
cmp
xchg
movs
add
out
xlat
repz
mov
xor
mov
das
retf
std
adc
scas
clc
aas
jns
sbb
mov
outs
jnp
pop
mov
mov
dec
inc
add
mov
out
mov
dec
rcl
mov
sub
adc
push
mov
les
xchg
out
test
ds
das
test
shl
lahf
cdq
sbb
(bad)
(bad)
adc
dec
scas
sub
push
stc
enter
call
cwde
in
gs
inc
pop
mov
push
sub
stos
arpl
loop
out
out
lock
push
mov
pusha
dec
fst
or
(bad)
jnp
call
inc
pop
jbe
pop
mov
jmp
aaa
nop
sub
jp
(bad)
push
mov
and
mov
mov
sbb
or
and
daa
pop
fisttp
xor
sti
fiadd
sub
adc
(bad)
xchg
(bad)
ss
in
jbe
loopne
mov
jge
repnz
ss
jle
jbe
dec
dec
pop
(bad)
call
call
(bad)
loop
and
sbb
imul
test
mov
mov
jbe
jae
and
pusha
ficomp
or
mov
outs
sti
gs
inc
pushf
mov
jl
ja
pusha
retf
outs
gs
cmc
push
fst
jae
mov
div
ret
inc
cs
push
pop
in
pop
push
sti
mov
mov
loopne
jae
arpl
js
mov
setns
sar
fmulp
data16
inc
or
aaa
jns
mov
mov
loop
sub
xor
lods
xchg
imul
lds
push
mov
mov
jne
cdq
cld
rcl
sub
jecxz
mov
jmp
and
mov
jns
lahf
pop
xor
leave
loop
pop
xlat
sub
out
pop
jne
ret
push
test
pop
in
sti
(bad)
out
push
je
je
(bad)
scas
ret
jne
xor
add
xchg
xchg
std
push
jecxz
(bad)
sub
fcmovu
add
popa
shrd
lds
data16
xor
add
or
bound
mov
pop
add
fwait
xchg
xchg
push
fiadd
je
push
cmp
mov
inc
mov
jno
inc
out
mov
and
dec
push
mov
icebp
hlt
sub
sbb
rol
xor
repnz
xor
mov
sbb
add
or
add
cwde
pop
xchg
cmp
sub
dec
ret
test
icebp
xor
dec
movs
and
mov
xchg
(bad)
cdq
sub
sub
in
add
outs
test
fistp
dec
push
push
xchg
inc
xor
pop
mov
jmp
mov
add
out
or
not
fs
stos
push
ret
ret
xor
mov
add
popf
or
jge
aaa
lods
std
mov
loope
mov
sbb
addr16
mov
test
sbb
push
lahf
adc
je
arpl
push
mov
xchg
in
stc
in
aaa
ret
dec
mov
aad
ret
das
repnz
adc
push
and
mov
mov
les
and
jb
push
int3
mov
pop
sub
ret
add
into
(bad)
(bad)
aad
mov
cmp
sti
mov
repz
sub
jp
inc
sbb
rcl
sar
clc
add
xor
pop
mov
mov
dec
xor
out
xor
or
or
jns
fmul
les
and
je
movs
ja
(bad)
loop
sbb
enter
test
pop
test
mov
daa
sub
cmp
(bad)
call
xor
lds
add
push
fisub
pop
add
das
pop
out
ror
retf
addr16
arpl
add
jmp
push
das
inc
add
hlt
dec
pushf
push
ror
jl
dec
push
sub
sub
pop
aaa
ds
jmp
jecxz
or
push
cmps
xchg
cli
mov
jnp
inc
mov
adc
call
stos
push
loopne
retf
aas
gs
loope
sahf
mov
push
(bad)
int
mov
or
add
cdq
out
ficom
or
or
in
and
lods
jmp
add
adc
fsub
and
mov
ss
out
cmp
sub
jge
retf
arpl
adc
mov
cmp
xchg
outs
mov
add
sahf
ficomp
sub
or
cmc
sbb
cmp
and
sti
sbb
clc
bound
xchg
pusha
loopne
dec
stos
cs
mov
cmp
adc
adc
push
cmp
mov
xchg
test
inc
cmp
pop
xchg
cmc
scas
mov
int3
jne
pop
xchg
cmps
call
ins
mov
shl
imul
mov
and
mov
iret
and
inc
pop
inc
(bad)
adc
xchg
shl
out
lds
adc
jb
push
pushf
fs
arpl
jmp
ret
lds
and
in
daa
mov
mov
frstor
pop
retf
pop
pop
shl
push
add
test
or
mov
dec
push
shl
jmp
movs
add
mov
jnp
dec
daa
out
sub
cmp
push
push
sar
mov
into
sbb
lea
xchg
xor
cmp
nop
js
xchg
push
xor
ret
test
mov
js
pop
in
jmp
ss
xchg
scas
push
dec
push
mov
js
push
mov
xchg
jb
push
adc
sub
loop
sub
lds
lods
push
fwait
cmp
ja
push
das
cli
jecxz
mov
fcomp
cld
movs
(bad)
adc
out
cmps
ds
daa
sbb
lods
pop
neg
mov
inc
stos
es
sub
shr
or
xlat
xchg
mov
sbb
movs
xchg
(bad)
and
push
mov
jo
outs
or
dec
mov
inc
mov
out
ret
das
pop
inc
xchg
jp
cdq
dec
push
adc
call
xor
adc
movs
xor
xchg
popf
mov
push
inc
mov
pop
push
ds
jle
jbe
dec
dec
jno
pop
(bad)
ds
movs
loope
lods
pop
frstor
enter
mov
repnz
jno
add
pop
adc
jmp
mov
inc
js
dec
loope
mov
xchg
xor
pop
adc
hlt
dec
push
or
push
sbb
aaa
jbe
mov
stos
in
pop
adc
ret
ret
xor
fst
sub
mov
(bad)
mov
push
call
(bad)
call
push
push
mov
sub
out
shr
mov
push
cmc
xor
loop
fiadd
outs
pop
jbe
cwde
jmp
js
cwde
inc
dec
(bad)
in
or
fsub
(bad)
xchg
out
dec
retf
dec
push
pop
lock
mov
call
and
dec
dec
add
loop
mov
scas
cwde
hlt
dec
in
(bad)
or
add
push
xchg
rcr
ins
or
sbb
pop
and
(bad)
ins
nop
inc
popf
cmp
movs
cwde
dec
retf
stos
iret
in
jbe
dec
dec
dec
shl
mov
mov
pushf
lock
mov
pop
mov
pushf
popa
div
test
add
or
fist
cmp
sub
out
out
dec
lahf
retf
pop
and
push
push
sar
(bad)
xchg
sahf
cwde
xor
adc
mov
mov
sbb
cmp
test
dec
pop
int
(bad)
jae
and
shl
hlt
test
pop
movaps
fcomp
mov
add
fst
rcl
loope
dec
jg
jmp
loopne
add
push
aam
retf
shr
inc
push
dec
jnp
aas
das
enter
pop
push
jnp
add
jmp
popf
je
inc
aad
push
(bad)
cmc
fucomip
pop
cld
or
mov
and
dec
sbb
jl
out
dec
adc
sbb
daa
es
mov
lahf
jecxz
mov
sub
cmps
jp
inc
push
iret
pusha
add
xchg
adc
mov
in
or
cmp
pop
and
mov
(bad)
jp
sbb
cmp
or
lods
dec
arpl
adc
lds
jge
mov
mov
xor
dec
jbe
xor
lahf
out
fcom
sti
sub
iret
dec
or
pop
xchg
jo
js
shr
lea
dec
dec
arpl
mov
(bad)
aad
call
fwait
mov
dec
mov
cwde
je
xchg
test
adc
jge
and
jl
and
and
dec
mov
pop
jns
ret
push
xchg
add
into
inc
cmp
retf
sahf
call
mov
je
mov
das
les
iret
iret
iret
adc
aaa
push
test
imul
mov
popf
fwait
loop
inc
(bad)
aaa
and
js
mov
jmp
mov
pop
mov
outs
int
xor
pop
sar
shr
jg
pusha
mov
jl
jns
repz
xchg
xchg
mov
mov
clc
int
(bad)
and
sbb
xchg
mov
push
add
jbe
pop
imul
sub
mov
(bad)
enter
mov
repnz
inc
std
cmps
cmp
pop
inc
and
and
push
dec
mov
and
cmp
(bad)
xlat
cmp
jecxz
add
inc
arpl
ficom
repz
(bad)
cmpxchg
fwait
nop
das
test
and
sbb
por
rcl
out
push
adc
mov
(bad)
push
lods
or
push
fild
dec
cmps
jbe
aaa
div
jb
mov
lods
inc
bound
xor
adc
mov
mov
hlt
iret
aas
mov
push
dec
adc
pop
dec
sub
cmc
mov
outs
jnp
lahf
and
test
adc
adc
xchg
repz
push
adc
icebp
hlt
pop
and
neg
mov
mov
xor
rcl
xchg
repnz
mov
inc
shl
aas
fist
in
xor
inc
or
jbe
lods
push
pop
loopne
arpl
ss
sub
jno
jmp
outs
pop
adc
add
aas
ficomp
int3
mov
xchg
xor
adc
inc
lock
and
cs
mov
popf
rcl
idiv
ds
out
and
adc
jecxz
outs
(bad)
jl
dec
jge
mov
das
lds
(bad)
mov
xchg
cmp
push
dec
movs
sti
dec
es
adc
dec
add
mov
push
outs
dec
dec
jmp
dec
jp
mov
out
fadd
add
cwde
outs
dec
pusha
push
jb
push
mov
sar
fstp
data16
mov
lock
or
mov
scas
das
push
in
pop
fistp
mov
cmps
mov
ss
imul
popa
pop
ds
xor
cmp
adc
mov
aas
leave
loope
mov
and
sub
cwde
(bad)
sbb
jecxz
ss
xchg
inc
lock
cmp
(bad)
fimul
fcomip
jnp
sub
add
dec
loop
jg
jb
sbb
aas
cmp
stos
inc
push
xlat
add
mov
lds
pop
pop
xchg
cmps
and
pop
inc
dec
add
cmp
mov
test
fnstenv
push
push
and
jnp
repz
sbb
enter
push
lds
xor
or
xchg
(bad)
outs
js
clc
(bad)
cmp
mov
jns
jb
add
dec
imul
mov
loopne
ds
inc
addr16
(bad)
jbe
sti
nop
add
(bad)
fst
cs
and
add
xchg
ins
icebp
inc
stos
shr
jl
push
sbb
adc
or
fcomp
imul
icebp
je
inc
(bad)
xchg
das
aas
rcl
imul
rcr
or
sar
and
imul
and
pop
lods
sbb
pop
lods
fist
push
loop
out
fiadd
xor
dec
push
inc
aaa
es
pop
sbb
and
sbb
je
shl
aad
(bad)
movs
outs
xchg
or
and
test
ja
retf
out
lods
(bad)
jg
fs
ret
push
in
pop
lea
jecxz
jle
cmp
mov
push
mov
dec
loope
fld
dec
aad
int
test
adc
dec
dec
pop
loop
mov
loop
enter
fs
jnp
test
mov
inc
test
dec
cli
mov
jge
out
sub
loop
push
test
in
dec
adc
pop
cmp
inc
shl
js
fiadd
ins
pop
sbb
pop
jcxz
loop
adc
fs
pop
(bad)
xor
jo
aas
scas
rol
in
ds
call
push
inc
adc
jmp
test
xchg
pop
int
movs
or
(bad)
ss
xlat
cmp
xor
retf
jno
scas
jmp
mov
mov
push
lods
inc
xchg
ret
es
test
sbb
push
shl
xchg
in
sahf
sbb
jmp
das
cli
or
jecxz
and
pop
mov
inc
jbe
pop
leave
cmp
fild
jle
mov
imul
ins
dec
inc
scas
push
lds
cld
out
or
cmps
or
stc
pusha
and
cmp
push
push
push
xchg
xchg
nop
ffreep
xchg
imul
inc
popf
mov
dec
or
or
in
jp
and
push
pop
dec
push
adc
loop
out
ret
sub
adc
jnp
aam
mov
fcom
xchg
shl
je
ja
(bad)
xchg
mov
mov
pop
fidiv
dec
and
int
mov
and
or
inc
call
add
adc
pop
pop
in
jge
jne
fiadd
or
fmul
es
mov
outs
inc
pushf
mov
mov
bound
mov
and
push
leave
(bad)
dec
cmps
(bad)
sub
gs
add
and
push
repz
sub
and
test
inc
inc
mov
jb
jnp
add
inc
std
pop
cld
cmp
(bad)
jecxz
fwait
ret
mov
nop
add
out
mov
jmp
ins
mov
adc
out
or
xchg
or
xor
outs
repnz
cmps
push
push
pop
cmp
cmp
sub
stos
add
jmp
inc
sbb
fbld
push
or
cdq
pop
mov
sub
cmp
aaa
idiv
inc
xchg
rcl
in
adc
fwait
xor
sub
pop
and
lock
cli
addr16
push
cwde
es
rcr
ja
pop
les
dec
movs
push
dec
push
xor
push
jmp
pop
sub
jg
sub
and
mov
test
lahf
aam
fmul
loopne
lods
(bad)
cmps
ret
push
dec
adc
(bad)
xor
call
bnd
sti
jmp
enter
cmp
inc
jne
out
inc
popa
mov
lods
div
ror
adc
out
(bad)
sub
xchg
xchg
test
or
sub
jp
fstp
aaa
jo
jns
push
inc
xchg
jp
pop
pop
or
cli
data16
cmp
push
jno
hlt
fstp
loopne
dec
or
xchg
and
jl
daa
mov
push
lods
ins
xchg
neg
dec
(bad)
std
push
add
jne
cmova
rcr
mov
mov
mov
jnp
xchg
jbe
pop
adc
andnps
ja
jnp
loop
jmp
shl
mov
mov
mov
mov
cmps
sub
in
inc
movs
push
cmps
sub
scas
in
idiv
inc
mov
aad
dec
xchg
mov
inc
jne
jae
neg
push
cmp
in
push
fldcw
enter
cwde
retf
mov
add
cmp
std
sub
repnz
inc
leave
dec
cwde
sti
sub
sbb
shl
cs
jbe
das
and
inc
sbb
or
jb
push
sbb
fdivrp
outs
retf
and
or
cs
mov
dec
jnp
pushf
jo
aam
outs
out
jge
pushf
inc
call
(bad)
(bad)
mov
push
mov
out
stc
hlt
lods
push
mov
push
fsub
pop
gs
call
jg
retf
enter
out
aas
fsubr
and
add
push
jnp
jl
jle
inc
pushf
sub
dec
loopne
cld
dec
jno
(bad)
ss
hlt
mov
push
inc
cwde
xor
ja
fs
aas
repz
cmc
call
rcr
mov
ins
xor
dec
adc
xor
jg
(bad)
pop
repnz
dec
mov
cli
sbb
into
aas
dec
loope
pop
xchg
(bad)
jg
std
push
(bad)
jnp
push
dec
pop
cmc
ror
cmc
cmp
repnz
xor
add
push
loope
retf
jns
and
cwde
xor
cwde
sar
and
inc
imul
dec
das
mov
fs
adc
bnd
and
out
and
mov
ds
out
adc
and
inc
sub
repz
loopne
mov
cdq
fld
sub
mov
es
dec
mov
add
sbb
scas
cwde
push
add
sub
test
in
adc
cmp
xlat
cmc
cmc
xchg
xor
adc
(bad)
into
nop
(bad)
push
das
hlt
stc
xchg
jmp
push
movs
xchg
jmp
popf
cmp
or
rcr
imul
std
lahf
pop
cmps
pop
mov
in
fld
jae
add
fstp
sub
sub
sbb
enter
mov
or
test
push
int3
add
cmps
xor
inc
shr
jne
dec
retf
push
pop
test
xchg
jle
lods
stos
test
pusha
mov
inc
daa
and
fwait
xor
sub
xchg
xchg
outs
inc
fist
sub
test
and
call
daa
cmp
daa
nop
jmp
stos
fwait
push
aas
mov
cmp
dec
int3
sbb
enter
fcmove
test
dec
and
add
adc
cmp
or
inc
ds
mov
je
jmp
adc
xchg
sub
sub
pop
sbb
xchg
dec
add
adc
imul
test
lock
scas
xchg
in
fnstenv
idiv
adc
xlat
mov
clc
frstor
mov
ja
pop
nop
call
adc
sub
fcomp
inc
test
or
rcl
mov
popa
xchg
or
js
jl
jbe
inc
dec
out
hlt
movs
enter
jnp
(bad)
sub
movs
ins
leave
ins
in
out
mov
jnp
icebp
adc
inc
imul
shl
inc
push
jecxz
cmp
scas
xchg
repnz
iret
push
gs
jle
cli
mov
stc
std
mov
push
out
nop
mov
sbb
(bad)
loope
pop
jno
mov
outs
push
fldcw
rcr
mov
cmp
es
pop
mov
mov
jg
mov
jb
jmp
pop
loope
lds
loopne
jmp
aas
mov
stos
cmp
test
cmp
popf
(bad)
dec
push
ret
adc
(bad)
xchg
jecxz
js
(bad)
enter
loopne
xchg
sub
jbe
retf
jae
call
adc
or
jo
fild
ins
idiv
scas
xchg
sub
and
push
ret
fs
dec
(bad)
leave
ror
lock
shl
(bad)
cmp
xchg
mov
ret
and
cwde
add
outs
add
out
inc
(bad)
sbb
jbe
pusha
dec
icebp
test
jno
or
sbb
rol
mov
xchg
push
or
cmps
pop
rol
addr16
call
inc
imul
dec
scas
es
out
hlt
pop
jecxz
enter
dec
call
xor
mov
mov
sbb
mov
cmc
cmp
lock
cmp
clc
mov
test
and
and
ret
and
stos
cld
daa
jecxz
les
mov
retf
(bad)
mov
pop
xchg
fsub
adc
xchg
mov
out
jne
les
pop
mov
(bad)
daa
stos
fbstp
xchg
mov
inc
and
xchg
shl
xchg
fcomp
int3
jecxz
pop
xchg
xor
add
or
pushf
and
push
adc
in
jno
cld
bound
jnp
mov
cmc
and
sub
mov
lea
dec
test
cs
mov
sub
cmp
xchg
mov
lods
clc
dec
inc
ss
xor
mov
cmp
jecxz
sub
mov
adc
call
mov
mov
imul
fimul
mov
cmps
sbb
test
(bad)
(bad)
rol
test
xchg
cmp
int
lahf
add
push
movs
js
ja
adc
and
pop
dec
push
loopne
inc
inc
xor
out
dec
cdq
mov
stc
jno
sbb
dec
jmp
in
les
outs
or
out
inc
inc
not
mov
imul
mov
and
adc
lahf
jmp
adc
pop
inc
mov
pushf
popf
dec
or
dec
cmp
sbb
push
cmps
push
mov
outs
pop
stos
sti
cmp
xchg
sub
es
shl
into
adc
mov
cmp
mov
add
xor
push
call
add
fsubr
repnz
jae
mov
inc
mov
push
mov
rcl
inc
sbb
jl
movaps
pop
call
pop
shl
mov
scas
pop
aas
cmps
popa
mov
xchg
sbb
jne
cdq
push
xchg
xor
mov
iret
mov
inc
rcr
xchg
add
mov
pop
xchg
dec
pop
cs
gs
outs
in
cs
rcr
sbb
inc
into
loopne
sahf
pop
add
inc
rol
xchg
mov
inc
push
jmp
mov
xchg
jb
popf
push
cmp
inc
jge
dec
movs
(bad)
enter
cmp
xchg
js
iret
adc
xlat
pop
jnp
nop
xchg
es
mov
repz
dec
sub
sbb
sbb
enter
mov
xchg
sar
xor
mov
push
mov
pop
jmp
xlat
jbe
or
sbb
cmovle
sub
add
push
aam
mov
cmp
xor
and
jp
jne
cmp
jmp
leave
pop
mov
or
mov
mov
dec
mov
jno
xchg
xchg
xchg
xchg
and
je
(bad)
pop
cmp
inc
lock
imul
sub
stc
out
push
xchg
cs
lahf
pop
pop
imul
jmp
ds
inc
jne
sub
fild
ins
movs
pop
sbb
aas
dec
jg
repnz
ins
(bad)
iret
out
mov
mov
pusha
or
dec
or
sbb
push
xlat
jno
ret
sti
xor
adc
sub
fsubr
out
mov
add
ret
loopne
and
dec
add
cmc
xor
cmp
xchg
adc
adc
sti
mov
dec
ins
rcr
pop
stos
pusha
scas
pop
ret
cmp
cdq
pop
inc
int
mov
out
pushf
adc
mov
jne
rcr
ret
test
inc
inc
rcr
add
mov
dec
lods
test
hlt
add
mov
jmp
retf
dec
pop
call
xor
dec
into
and
and
xchg
dec
shr
icebp
data16
repz
pop
dec
cmc
add
imul
mov
scas
mov
shr
or
js
ret
rcr
jle
cs
or
scas
inc
jecxz
inc
loopne
mov
xor
test
xchg
lods
xor
or
sbb
(bad)
stos
ja
adc
sbb
jl
aas
mov
cmovs
and
xchg
lods
cmc
aam
jne
jecxz
cmp
int3
ds
fcmovnb
jmp
or
shl
idiv
test
mov
add
jae
mov
fcmove
push
loope
jmp
jmp
dec
sar
sti
loopne
cmp
stos
cmp
sub
sti
add
mov
adc
out
in
div
test
out
ds
push
cmp
fst
inc
sub
mov
ss
mov
jae
mov
popf
mov
jmp
pop
pop
xor
mul
rol
rol
not
daa
fstp
mov
and
(bad)
cmc
push
sti
lahf
mov
arpl
adc
ror
xchg
in
pop
and
inc
cmp
jmp
jle
sbb
xlat
popf
xchg
mov
push
mov
or
ficomp
ror
sbb
cmps
sbb
fdivr
popf
add
dec
jb
cmp
call
or
shl
mul
mov
out
pop
adc
cmp
or
fst
xchg
jge
mov
mov
shl
clc
jb
jmp
push
(bad)
rol
or
imul
xlat
ret
imul
sbb
in
and
popf
fcmovnbe
cwde
inc
fcom
dec
les
mov
cmp
pop
shr
lea
adc
mov
mov
paddb
in
add
cmps
mov
inc
mov
add
pop
je
mov
daa
mov
mov
dec
cmp
dec
dec
xor
mov
rol
icebp
cmp
or
fisub
and
add
mov
dec
push
js
and
(bad)
mov
or
xchg
push
or
pushf
inc
dec
sahf
xor
call
out
retf
enter
call
pop
mov
gs
xor
sar
stos
inc
inc
mov
mov
inc
inc
mov
add
and
hlt
pop
dec
add
jge
sar
sub
addr16
sbb
push
push
aaa
das
or
pop
test
or
or
std
dec
fidivr
in
adc
inc
inc
fsubr
xor
(bad)
pop
test
rol
repnz
inc
sub
adc
xchg
mov
xlat
pop
cmp
sti
and
aad
or
jl
inc
cmp
loop
sub
(bad)
ins
ja
in
push
add
inc
js
push
xor
sar
push
pop
jnp
push
je
xchg
test
and
and
xchg
add
pop
add
int
lahf
loop
movs
aad
xchg
(bad)
clc
retf
jmp
cmp
dec
sbb
das
xchg
movs
or
mov
xchg
(bad)
and
xor
pop
mov
jmp
and
inc
in
shl
push
mov
push
test
or
mov
or
dec
stc
sbb
sub
mov
mov
leave
imul
ds
aam
dec
cmp
adc
bound
cli
ss
leave
sub
dec
jg
inc
icebp
fstp
mov
and
enter
inc
jbe
or
inc
jp
sbb
fisttp
int
aas
inc
inc
pop
outs
ds
cs
inc
inc
xchg
cmc
std
lahf
pop
aas
pop
dec
pop
mov
sub
jno
loopne
mov
aas
lahf
mov
std
xor
xchg
xchg
lods
jmp
aam
pop
fist
dec
pop
mov
push
or
lods
or
test
inc
pop
stos
ret
rol
add
mov
push
pop
inc
test
(bad)
cli
shl
scas
shl
jp
xchg
jmp
jmp
stos
jb
mov
movs
jmp
and
out
mov
aaa
and
je
and
mov
stos
mov
xchg
loope
fild
xchg
in
pop
paddusb
retf
nop
or
add
in
cmp
in
test
fwait
cmps
add
push
push
sar
in
and
dec
add
stos
(bad)
jmp
push
sub
out
inc
mov
rol
xor
add
mov
les
add
jno
ret
mov
imul
in
inc
xor
xor
retf
sbb
ins
dec
xchg
pop
mov
popf
xor
call
mov
fcmovne
pop
and
enter
call
sti
leave
aaa
pop
shr
cmp
adc
xchg
mov
cmp
jne
push
adc
dec
cld
jmp
add
cmps
icebp
dec
xor
dec
iret
and
jmp
loope
push
icebp
(bad)
fadd
and
mov
ja
mov
mov
pop
cmp
mov
fnop
push
push
pop
fist
es
loop
mov
xchg
stos
adc
fs
stos
xchg
int3
xchg
jo
cmp
(bad)
xor
mov
repnz
outs
(bad)
fdivr
mov
push
sahf
sub
push
(bad)
jge
inc
repnz
mov
outs
ja
shr
pop
adc
into
xchg
cdq
mov
mov
aam
push
jb
ja
jmp
xchg
gs
jae
(bad)
out
aam
scas
ins
nop
sbb
mov
dec
sub
or
xchg
mov
dec
add
call
(bad)
adc
fnstcw
push
xchg
fs
fs
scas
or
push
mov
xchg
retf
mov
and
add
aam
push
push
pop
sbb
and
adc
mov
adc
mov
fbstp
std
cmp
dec
pop
xor
loopne
xlat
ret
xor
add
aad
sbb
push
jmp
dec
pop
push
xor
scas
icebp
hlt
iret
adc
push
ds
jno
or
sub
mov
sbb
fnstenv
pop
inc
xchg
shl
mov
imul
test
call
jge
outs
add
mov
test
loope
jmp
out
les
sbb
cld
lods
mov
pop
hlt
outs
pop
jnp
push
add
js
lods
out
stos
sbb
add
pop
mov
jb
ins
dec
scas
test
mov
fs
jp
xchg
sahf
jmp
aad
aam
rcr
sbb
adc
xchg
cs
mov
add
pop
pushf
jl
stos
cs
call
pop
lds
pop
mov
jb
pop
int3
cmc
ret
inc
ja
mov
xlat
xchg
es
cmc
inc
push
mov
cmp
mov
jb
cmp
pop
pop
xor
sub
mov
push
mov
das
fsubr
mov
inc
cwde
ds
push
scas
xchg
dec
icebp
mov
or
mov
fstp
push
popf
mov
sbb
add
push
pop
clc
std
fidiv
xchg
xor
mov
sub
js
cmp
jmp
xchg
mov
xor
mov
cmp
cmp
add
sbb
inc
xor
lock
int3
je
in
fst
fbstp
pop
add
pusha
inc
cmps
mov
dec
ret
or
mov
xor
rol
sar
xor
fadd
sbb
mov
das
push
and
xchg
add
pop
test
shl
aad
xor
push
scas
mov
dec
sub
cmp
ror
cdq
popa
mov
or
xor
icebp
out
or
xor
shr
outs
aad
popa
mov
inc
cmp
pop
xchg
mov
xor
ret
test
lods
nop
mov
mov
popf
mov
push
sbb
ja
push
aam
in
jae
inc
add
pop
in
push
popf
(bad)
call
mov
fldenv
jecxz
push
push
jmp
pushf
inc
in
popa
ret
repz
xor
arpl
rcl
push
rsqrtps
pop
sahf
outs
stos
add
scas
lods
and
mov
cmp
sub
les
sub
addr16
repnz
mov
adc
mov
cmc
mov
pop
icebp
mov
imul
in
xor
sub
cmp
cs
lock
in
retf
sub
gs
adc
loope
outs
or
retf
mov
fild
retf
gs
sbb
fwait
sbb
jnp
xchg
xor
daa
jp
mov
outs
inc
dec
and
mov
jp
push
xlat
dec
(bad)
sub
retf
fwait
mov
sti
push
js
inc
mov
ds
call
sub
sbb
scas
outs
leave
jl
pop
(bad)
and
fisttp
test
cmps
inc
sub
xchg
cmc
inc
stos
int3
dec
xchg
sub
in
xor
popf
mov
xor
pop
ja
(bad)
call
adc
ins
mov
(bad)
jnp
jp
cld
sub
jne
pop
xlat
test
out
mov
push
or
aam
aas
shr
ret
pop
add
xchg
test
fdivr
xchg
mov
mov
sti
lods
loopne
mov
imul
daa
and
scas
adc
lds
int
les
jecxz
test
inc
fistp
sub
(bad)
xlat
jl
cmp
inc
pop
and
in
stos
pop
lea
retf
pop
je
test
push
(bad)
out
scas
xor
in
fiadd
in
xlat
push
adc
push
jg
add
jns
push
enter
stc
enter
and
outs
xor
call
xor
sbb
sar
dec
mov
mov
dec
fist
js
pop
(bad)
fisttp
and
bound
out
xchg
add
mov
mov
or
mov
inc
cmp
add
ror
ret
loope
mov
nop
test
adc
jmp
add
pushf
add
inc
enter
loope
mov
shl
pop
push
mov
imul
or
cmp
and
stc
dec
xor
int3
add
pop
cmp
jge
test
stos
inc
ret
and
je
mov
add
add
mov
mov
inc
xchg
es
lods
ud1
(bad)
sub
cmp
xchg
pop
popf
xchg
int
sub
cmc
outs
dec
pop
in
daa
jnp
or
cmp
push
mov
mov
ds
les
js
scas
sbb
and
jno
out
test
rol
outs
jecxz
sub
mov
dec
lods
or
fisub
scas
sbb
retf
test
dec
cmp
repz
dec
es
aam
and
ficomp
(bad)
ja
xchg
adc
xchg
jle
stos
or
cmp
hlt
or
inc
push
ss
adc
push
xor
sub
int3
mov
cmc
sub
xlat
out
adc
jmp
clc
and
sbb
push
bound
mov
adc
shl
into
pop
mov
cmc
dec
popf
inc
mov
xlat
in
mov
pop
jns
imul
addr16
or
xor
or
push
mov
(bad)
add
fisttp
add
mov
mov
jae
dec
imul
ins
sub
into
and
scas
sbb
cmp
ret
imul
fisub
lea
cmps
xchg
mov
jmp
ficom
popf
push
xchg
inc
cmp
sub
stos
cld
push
(bad)
sub
xor
les
test
je
add
or
and
xlat
popa
inc
pop
mov
into
push
(bad)
bound
mov
(bad)
cmp
test
xor
pop
xchg
(bad)
xchg
jmp
ror
jl
adc
jmp
mov
push
test
dec
add
mul
test
cmps
push
or
push
inc
cld
(bad)
nop
pop
aad
das
arpl
pop
aaa
shl
fwait
scas
leave
(bad)
mov
jl
mov
sti
imul
add
push
fwait
lahf
and
mov
aad
hlt
inc
ja
jg
test
lods
and
pusha
sar
mov
cmp
pop
mov
jno
sub
ins
mov
(bad)
js
mov
std
xor
in
shl
xchg
(bad)
cli
push
inc
pavgb
imul
jmp
push
sub
sahf
dec
jno
(bad)
and
pusha
mov
rcr
sbb
icebp
pushf
jmp
add
sbb
mov
pop
push
and
adc
push
xchg
mov
mov
and
cmp
mov
push
daa
jg
xor
cmp
mov
aad
inc
adc
ins
jp
and
dec
aam
lods
push
popa
pop
popa
mov
add
sahf
sti
(bad)
loopne
and
mov
lods
pop
xlat
dec
xchg
sahf
scas
sbb
adc
loope
pop
jle
mov
and
out
test
cld
xor
mul
imul
lea
xor
inc
test
fst
in
pmuludq
test
lea
mov
dec
in
(bad)
sub
je
pushf
inc
les
data16
cmp
fsub
fwait
and
or
push
loope
add
lahf
pusha
mov
pop
jp
xchg
std
test
int3
pop
test
and
(bad)
mov
inc
rcl
or
std
(bad)
jecxz
and
mov
lods
movs
inc
mov
(bad)
and
nop
inc
mov
fistp
scas
loopne
sbb
sar
sub
push
jno
push
into
mov
or
out
mov
inc
sub
push
cld
adc
xchg
fsub
std
fcmovnb
add
lea
inc
popf
jmp
nop
js
ds
aam
mov
not
jmp
mov
test
loopne
jo
xor
pop
mov
jecxz
in
loop
xchg
sbb
outs
cmp
add
loop
(bad)
aaa
fcomp
inc
add
cmc
xchg
push
inc
std
mov
cmps
pushf
and
sbb
in
scas
(bad)
in
ret
stos
add
loopne
dec
mov
dec
add
leave
rcr
test
pop
push
jle
push
inc
int
popf
inc
adc
dec
xchg
jmp
imul
xchg
leave
add
mov
adc
mov
xchg
stos
xchg
ret
and
cwde
sbb
loope
add
cdq
sbb
std
stos
fsubr
shl
cs
pop
aam
jl
div
mov
xor
sbb
jne
mov
and
push
jg
aaa
stos
jle
imul
sbb
shr
es
sbb
pop
mov
cmps
sub
imul
mov
hlt
jbe
icebp
repnz
aas
jge
push
pop
or
mov
push
pop
add
adc
mov
jge
out
jns
mov
inc
ss
mov
lods
push
jecxz
push
push
inc
cmp
movs
mov
and
add
push
push
stos
pop
sub
dec
mov
adc
fcmovb
mov
loope
repz
jbe
mov
(bad)
out
adc
(bad)
std
(bad)
into
dec
sbb
push
mov
rcr
sub
cmps
fs
test
xchg
push
push
cmps
cmp
add
movs
fwait
ja
sub
or
outs
dec
pop
jns
and
push
(bad)
push
mov
jp
sbb
ds
adc
inc
dec
xchg
in
pop
in
push
push
jo
jb
ret
pop
jl
xchg
lahf
push
pop
imul
push
nop
ss
add
sub
dec
jmp
jo
mov
fadd
repnz
sbb
ins
ins
push
adc
pop
inc
xor
pop
fstp
mov
in
jmp
lahf
retf
int
in
jns
fild
cmc
mov
dec
outs
daa
repz
inc
dec
and
das
mov
inc
cdq
cmp
ret
xchg
pop
adc
jae
pop
inc
(bad)
shr
fs
pop
pop
mov
sub
and
in
xchg
idiv
adc
push
push
jg
push
push
and
ret
jecxz
and
xchg
daa
mov
frndint
scas
js
pop
sub
and
ret
jle
or
jmp
gs
sub
hlt
cmp
xchg
sub
das
sub
les
lahf
imul
movs
and
fyl2xp1
push
fild
adc
lods
or
dec
jns
pop
mov
cli
add
call
test
push
leave
ds
outs
stos
or
jno
push
inc
outs
or
pop
rcl
mov
sahf
sub
pop
leave
into
adc
nop
or
dec
test
mov
(bad)
mov
adc
xchg
xor
push
not
in
ficomp
popf
in
pushf
cmp
leave
xchg
inc
leave
stc
jecxz
cdq
ficomp
cmp
stc
(bad)
adc
adc
jmp
lods
ins
xor
push
mov
cmps
je
mov
sbb
cmp
push
push
fcomi
es
and
mov
pusha
sub
das
dec
(bad)
out
pop
mov
fidivr
push
out
mov
jge
sbb
lods
add
es
mov
mov
mov
shl
nop
rcr
fmul
cmps
adc
(bad)
js
jl
inc
jl
push
and
retf
jbe
leave
pop
mov
push
arpl
pop
or
xchg
lock
cmp
push
and
mov
dec
sub
aam
pusha
das
or
popa
sub
repnz
cmp
ror
jecxz
mov
loopne
mov
push
push
lods
mov
mov
call
aaa
aaa
adc
addr16
adc
xor
mov
adc
sbb
mov
cdq
das
iret
push
mov
xchg
pop
inc
scas
movs
or
add
loop
adc
adc
inc
sbb
jno
aas
cmps
js
or
imul
jb
loop
xchg
shl
ret
cdq
(bad)
retf
mov
enter
sbb
lahf
cmps
inc
ficom
scas
mov
popa
sbb
sub
inc
xchg
push
or
cmp
imul
ss
rol
fimul
loope
mov
mov
ins
xor
add
mov
lds
jnp
xchg
test
jne
lods
scas
add
fist
mov
addr16
add
stos
popa
(bad)
pand
xchg
sbb
test
mov
jecxz
mov
mov
dec
retf
arpl
jge
inc
jl
jge
test
test
dec
xchg
add
cmps
pop
in
dec
(bad)
gs
mov
sbb
out
inc
movs
fiadd
outs
call
data16
mov
push
xor
cmp
out
mov
xchg
mov
retf
loopne
xor
repnz
or
pop
movs
mov
das
into
xchg
xor
fst
ffreep
dec
and
test
cwde
std
rcl
lea
push
fistp
ret
inc
hlt
fidiv
mov
leave
call
daa
loop
fcmovne
shr
xor
fild
and
adc
sub
in
cmps
imul
hlt
js
dec
or
xchg
retf
dec
in
outs
dec
pop
push
bound
xor
lods
mov
mov
fcom
mov
mov
xor
loopne
xchg
and
sub
pushf
cmp
icebp
fcom
das
inc
and
pushf
(bad)
adc
xchg
mov
std
mov
retf
ficomp
add
and
(bad)
lods
xchg
jne
cmp
adc
dec
adc
idiv
adc
out
out
test
nop
dec
sar
or
mov
cld
shr
test
aad
sbb
pop
int3
stos
dec
lods
imul
cmps
adc
pop
push
xchg
dec
xchg
ds
and
(bad)
(bad)
call
push
xchg
mov
aad
cs
jns
wrmsr
sbb
add
hlt
mov
fs
call
push
in
push
repz
(bad)
ret
aaa
(bad)
xor
aaa
shl
jns
mov
mov
enter
inc
call
cmp
mov
inc
pusha
cmps
fisub
shl
je
scas
aaa
clc
sub
in
enter
push
nop
mov
cli
sub
or
cmp
mov
or
(bad)
lods
push
cmc
dec
sbb
cmp
outs
rol
rcr
ficomp
jmp
or
(bad)
mov
loop
sbb
enter
(bad)
inc
add
gs
fwait
cmps
jge
mov
jne
jge
call
jmp
sbb
mov
mov
jnp
daa
or
adc
loop
ins
and
jb
lock
add
je
imul
test
movs
dec
add
into
ret
fwait
and
scas
test
pop
mov
out
xchg
cmp
dec
xchg
dec
js
xor
push
mov
rol
ins
push
cmp
ja
bound
mov
fstp
je
xchg
int3
(bad)
call
mov
out
mov
inc
mov
dec
sahf
inc
into
mov
arpl
push
popf
cmps
fcomp
dec
std
aas
inc
test
mov
imul
cmp
mov
retf
jp
test
dec
test
fiadd
imul
retf
add
and
sbb
fsub
cmp
jno
mov
cmp
out
mov
ins
jmp
dec
outs
loope
test
scas
out
outs
jle
int3
loop
scas
push
push
push
test
mov
sub
or
jecxz
pop
sbb
and
jge
mov
add
mov
cmp
nop
sahf
push
cmp
lea
pop
jbe
dec
data16
push
lods
pop
mov
push
(bad)
mov
ror
sub
pop
frstor
mov
shr
mov
test
fldenv
fdiv
pop
sahf
mov
ja
mov
fs
xor
loop
retf
and
into
stc
into
hlt
cmp
inc
bound
mov
mov
mov
push
adc
aam
sahf
dec
dec
dec
retf
inc
dec
lock
cld
ins
imul
inc
jge
stc
fst
cld
mov
jmp
push
dec
mov
mov
imul
sahf
call
inc
jne
cld
mov
xchg
xchg
test
mov
push
pop
jb
cmp
out
mov
or
xchg
lods
xchg
fnstcw
jns
or
or
retf
movd
fmul
jbe
inc
lahf
loopne
movs
fild
cmp
ins
mov
jno
mov
outs
mov
sub
psrld
or
bnd
inc
into
dec
enter
outs
ror
and
dec
add
xchg
xchg
stos
mov
inc
or
push
cmps
inc
add
lahf
test
sbb
shl
out
stos
cdq
adc
mov
out
fs
fldcw
pop
push
inc
popa
loop
jg
and
data16
pop
out
dec
out
cmp
in
pop
cdq
das
(bad)
cmp
frstor
xchg
int3
fisttp
jns
add
int
(bad)
in
xchg
dec
int3
cs
call
mov
movs
jnp
aas
ret
add
in
fisubr
retf
mov
jmp
(bad)
js
out
call
repz
inc
and
pop
xor
xor
or
cs
adc
pop
xchg
jg
fistp
xchg
and
iret
mov
call
jno
cmp
sub
movs
sbb
push
lahf
test
sbb
ins
sbb
jg
pop
mov
xchg
push
jb
jae
outs
cmc
gs
idiv
jno
xor
cmp
test
ds
cmp
xchg
mov
and
add
into
mov
jbe
ja
xchg
push
sub
pop
leave
mov
and
fmul
sbb
add
pop
dec
rcl
shl
dec
jecxz
cdq
popa
call
jge
mov
and
push
dec
sbb
mov
cmp
cmp
jae
mov
cld
ja
push
pop
cli
pop
push
retf
xor
in
and
dec
add
sbb
push
call
jmp
jb
adc
fistp
push
jno
sahf
mov
ror
int
adc
repz
jl
push
out
hlt
push
xchg
das
inc
callw
adc
arpl
cld
inc
jl
xchg
jp
xor
jmp
dec
scas
mov
adc
mov
scas
rcr
push
scas
and
jp
ja
mov
nop
fstp
loope
or
dec
mov
mov
fs
imul
mov
add
cmp
cmc
pop
dec
bound
mov
stc
int3
retf
and
mov
push
xor
movs
call
xor
xchg
div
inc
movs
cmps
imul
jmp
cs
sub
bound
and
mov
pop
pushf
stos
or
aad
aam
out
les
hlt
cmp
xchg
aas
cdq
mov
jmp
shl
shr
aaa
xor
test
fdiv
dec
jmp
jmp
pop
dec
mov
outs
xor
repnz
out
stos
add
mov
sahf
xlat
pop
cs
push
jecxz
ret
xchg
cli
enter
ror
inc
add
xchg
jge
xor
xor
dec
daa
add
mov
rol
lea
or
in
pop
in
pusha
rcr
lea
add
xor
clc
movs
cmp
push
push
addr16
or
jbe
xlat
ret
cmp
push
and
jmp
das
pop
mov
ret
idiv
push
inc
xlat
enter
retf
scas
xor
sbb
cmp
js
ins
xchg
pop
shl
adc
mov
nop
add
fidivr
scas
pop
sbb
and
inc
dec
leave
ds
jp
fs
add
push
and
pop
xchg
mov
xor
lods
xor
push
(bad)
xchg
sbb
int
xor
push
xchg
jmp
cld
xchg
jp
xor
lods
test
and
faddp
add
dec
mov
xchg
jmp
xor
cmp
(bad)
pusha
mov
and
(bad)
(bad)
sub
xchg
cmc
dec
popa
cwde
dec
scas
fstp
ds
sub
movs
adc
xchg
pop
dec
sbb
sbb
jbe
lds
adc
push
add
in
int3
add
mov
addr16
push
shl
inc
rcr
jl
jecxz
inc
loope
std
push
fwait
sahf
fisubr
je
xchg
int
fimul
fisub
cmp
pusha
or
jns
or
add
cld
push
add
pop
dec
jnp
ret
dec
or
sub
icebp
xchg
xor
sar
sub
mov
ret
mov
js
data16
test
inc
cmps
test
jno
out
cmps
push
inc
imul
arpl
mov
pop
dec
inc
xchg
ror
and
lahf
in
ins
clc
(bad)
jbe
or
loope
out
dec
mov
xor
or
xchg
ins
xchg
jae
pop
aaa
and
add
ja
repz
push
mov
mov
cld
cmc
or
test
pop
loope
repnz
add
add
int
(bad)
loope
xor
jo
les
repz
fstp
je
sub
cmps
cld
push
pop
xchg
das
icebp
xor
cmc
sar
jle
ret
ja
std
xor
aam
ror
shl
std
push
pop
fwait
stos
fsub
and
or
in
lods
clc
mov
clc
pop
dec
dec
rcl
pop
or
popa
in
paddw
pop
arpl
imul
rcl
push
and
test
xchg
out
dec
mov
(bad)
(bad)
jmp
sahf
hlt
pop
adc
mov
pop
test
jb
lock
pop
int
add
add
and
lock
inc
adc
das
push
mov
pop
jge
xor
repnz
dec
pushf
cwde
xlat
fiadd
sbb
mov
xlat
dec
out
sar
stos
add
adc
int
dec
imul
or
jmp
add
pushf
daa
loop
jg
cwde
jns
xor
fmul
mov
loope
icebp
retf
dec
enter
ret
inc
cmp
ins
arpl
sbb
jmp
mov
add
pop
aas
jae
inc
es
ins
cwde
pop
loope
sub
adc
test
daa
mov
out
(bad)
mov
in
je
mul
xchg
or
cmc
cmps
cmp
pop
ror
pop
sti
add
cmp
addr16
cmp
retf
xchg
test
jb
sbb
mov
mov
cmc
inc
xor
call
adc
dec
test
dec
cmp
jne
sub
xchg
jo
push
adc
js
sub
xor
adc
pop
lods
dec
add
fcomp
(bad)
add
dec
and
in
xchg
push
js
sbb
add
out
retf
sub
mov
loop
or
and
stos
or
fsubr
nop
dec
cdq
xchg
pushf
gs
mov
in
cmps
fsubr
inc
mov
mov
aas
arpl
pop
inc
pop
popa
mov
popf
inc
lods
jl
jns
cmp
lea
xchg
(bad)
mov
ret
mov
jbe
std
mov
outs
(bad)
fidivr
xchg
fiadd
xor
jno
es
xchg
lock
cmps
ror
inc
pop
adc
cmp
shl
cwde
cmp
stos
jmp
push
pop
or
mov
push
aas
or
jne
mov
sbb
lock
popf
and
clc
inc
mov
rcl
(bad)
scas
test
shr
cmps
xor
test
sbb
cld
sub
adc
add
outs
push
cli
jp
dec
mov
mov
js
repnz
in
imul
jle
scas
scas
push
mov
lock
or
enter
out
adc
pop
test
push
jns
cmps
jle
fwait
xchg
iret
(bad)
(bad)
jo
out
pop
add
inc
jl
mov
push
sbb
dec
push
dec
cmp
add
cdq
add
jb
mov
gs
popf
(bad)
sbb
pusha
or
int3
pop
jl
adc
pop
push
jp
cwde
inc
or
lock
pop
clc
xlat
dec
outs
jnp
sti
icebp
loop
cmps
cld
stc
cmp
loope
in
or
popa
mov
push
push
mov
retf
and
push
inc
jns
into
(bad)
push
sbb
ficomp
mov
or
popa
retf
outs
cld
mov
add
mov
pop
add
pop
rcr
pop
lock
jecxz
data16
add
hlt
cdq
jmp
cmp
sar
xor
(bad)
iret
inc
in
jg
xchg
xchg
push
leave
loope
cmp
int3
inc
inc
and
ss
pop
in
into
xor
add
jle
push
call
cmp
pop
test
cld
jno
nop
and
cmps
cmps
ja
xchg
xor
jbe
add
push
fcomp
xchg
dec
add
div
into
fidiv
inc
ins
(bad)
cmps
ret
xor
les
push
lahf
pop
sar
sub
sti
shr
dec
xor
add
cmp
add
and
xchg
lock
push
repz
pop
repz
pop
mov
sahf
jle
fistp
fld
sub
js
or
push
xchg
lods
adc
lock
call
jno
pop
add
popa
jns
adc
mov
sbb
push
jmp
mov
aad
cmp
sar
xor
cwde
adc
(bad)
repz
cs
mov
jb
adc
jb
sbb
mov
xor
pop
or
push
movs
jnp
fwait
fwait
ret
inc
push
push
adc
lahf
sbb
repnz
dec
stos
pop
xchg
and
jmp
inc
ret
xor
cmp
jbe
mov
mov
fld
mov
inc
pop
outs
xchg
hlt
jecxz
cmp
out
mov
jecxz
inc
or
lods
in
dec
ins
leave
popa
jecxz
in
leave
sbb
cmps
sub
faddp
mov
xchg
xchg
push
aam
and
mov
inc
push
loop
inc
cwde
lds
push
pop
mov
dec
out
mov
inc
pop
dec
jecxz
scas
fmulp
jae
mov
sahf
adc
xor
mov
or
jle
movs
popf
jns
push
dec
xchg
sub
clc
sar
and
dec
inc
cdq
or
icebp
mov
pop
lods
push
xchg
jmp
push
jo
xchg
jmp
push
call
cmps
push
cmp
sbb
shl
ret
shl
movs
aaa
pushf
pop
stc
mov
mov
call
scas
retf
(bad)
outs
and
test
xchg
mov
lods
sbb
das
leave
and
xor
fdivp
jl
enter
out
sub
int3
add
jnp
dec
mov
dec
aad
mov
xchg
mov
cmp
mov
sbb
pop
inc
iret
pop
mov
xchg
inc
xor
sbb
ffreep
xchg
ficomp
int3
push
xlat
call
mov
aad
rcr
lods
or
das
imul
or
sub
retf
div
jnp
ror
push
push
call
xor
rcl
(bad)
pop
aam
or
sahf
xchg
fldl2e
retf
popa
mov
js
mov
mov
outs
clc
shr
or
or
push
lea
test
pusha
cmps
out
(bad)
xchg
push
push
sbb
xor
ds
xor
arpl
xchg
lods
or
sahf
nop
jecxz
pop
(bad)
movs
or
dec
add
sub
jmp
xchg
stc
div
data16
mov
jne
jmp
nop
shr
retf
aaa
addr16
mov
fs
add
jge
shr
inc
cmp
push
mov
shr
repnz
cdq
int3
xchg
cmp
rcr
inc
test
jmp
mov
mov
(bad)
lahf
in
cmp
pop
arpl
or
inc
mov
repz
and
sar
push
outs
cmp
cwde
jb
jmp
frstor
sbb
loope
adc
out
mov
pop
punpckhdq
mov
xchg
mov
push
and
and
movs
xor
ds
bound
push
lahf
jg
stc
cmp
push
(bad)
clc
test
sbb
and
(bad)
jo
dec
test
loopne
or
ss
in
loop
pop
jge
mov
xor
cmc
fcom
lods
repz
in
shl
push
lock
cli
int3
pushf
push
mov
sub
push
gs
bnd
jne
mov
out
std
test
dec
(bad)
(bad)
jecxz
shl
pop
(bad)
in
jmp
test
in
mov
in
and
pop
and
mov
xor
addr16
inc
cs
mov
jns
xchg
test
in
or
jle
retf
mov
mov
inc
or
mov
xchg
sbb
pop
dec
xchg
xchg
mov
push
stos
les
daa
pop
cmp
add
dec
ja
or
jb
jecxz
fst
rcr
xor
mov
mov
sti
pop
ins
mov
push
in
repnz
pop
mov
push
(bad)
test
and
or
pop
js
lds
fdivr
sbb
push
pop
push
mov
in
leave
cmps
sti
int
jmp
scas
arpl
sbb
test
(bad)
mov
or
(bad)
je
leave
idiv
xchg
mov
ins
bound
ds
jmp
mov
dec
push
retf
mov
jbe
adc
sub
shl
xchg
cmp
xchg
fs
call
loope
pop
fsub
xor
jbe
sbb
jecxz
jne
cmp
lds
into
or
cmp
fnstcw
or
icebp
arpl
and
fild
sbb
xchg
adc
fs
mov
enter
adc
pop
mov
imul
xchg
push
int3
mov
in
mov
fdiv
pop
xchg
xlat
fimul
test
ret
test
inc
add
adc
aam
movs
xchg
adc
sbb
jg
(bad)
jb
ss
add
and
cmps
loopne
mov
jae
and
push
inc
add
add
sub
sti
push
mov
clc
test
pop
dec
jae
mov
test
adc
and
push
fadd
repnz
add
sbb
jp
std
inc
inc
sbb
dec
push
hlt
neg
lahf
mov
stos
retf
adc
sbb
dec
addr16
push
xor
jb
gs
xchg
mov
jge
ret
inc
call
out
int3
dec
dec
sbb
cmps
hlt
sti
je
cmps
icebp
retf
test
cmps
aad
dec
(bad)
xor
jae
sbb
and
cmp
fild
scas
fcomp
xchg
pushf
pop
ffreep
fisub
push
test
pusha
cmp
ja
xor
lods
arpl
lods
std
mov
call
xchg
mov
xchg
cmps
fwait
leave
jp
outs
cmp
jns
and
adc
loopne
jno
clc
adc
jecxz
retf
jb
adc
mov
mov
mov
fwait
add
xor
fadd
mov
dec
sahf
jne
dec
hlt
fnstsw
leave
loopne
(bad)
sti
xor
pop
add
ins
adc
aaa
push
dec
pop
pop
pushf
call
pusha
sahf
adc
push
fsub
jae
pop
leave
pop
leave
add
ficomp
inc
xchg
(bad)
jmp
repz
pop
pop
int3
xlat
sub
arpl
and
lahf
sub
xlat
mov
xchg
mov
inc
xor
lea
cs
aad
sar
xchg
sbb
int3
or
pop
mov
sbb
(bad)
dec
stos
in
dec
add
out
or
cdq
fsubr
dec
ret
and
mov
(bad)
out
push
inc
loop
jne
ucomiss
dec
ret
out
add
repz
ins
xor
ins
mov
cmp
and
hlt
sub
jle
retf
icebp
mov
dec
adc
inc
rcr
mov
ds
sti
adc
js
stc
(bad)
sub
lock
dec
xor
loopne
arpl
lea
inc
out
into
or
xchg
cwde
arpl
stos
loop
scas
mov
pop
hlt
xchg
ret
and
fbstp
fs
push
clc
mov
mov
dec
stos
scas
(bad)
movs
push
test
mov
mov
hlt
mov
mov
pop
inc
sbb
mov
test
fmul
mov
lock
sahf
test
leave
std
clc
mov
push
push
icebp
adc
xchg
into
test
out
lds
or
xchg
rol
push
sar
jo
jbe
repz
add
push
push
mov
xchg
pop
adc
std
repz
pop
adc
mov
retf
dec
cmp
cmp
dec
lock
in
inc
test
xchg
out
ins
lds
lahf
or
or
inc
adc
daa
scas
stc
xchg
inc
fdivr
pop
push
sub
add
rcl
push
and
arpl
and
popa
or
sub
jo
out
sar
mov
fisubr
xchg
mov
jo
mov
int
stos
cs
out
arpl
test
mov
jl
xlat
mov
adc
mov
jp
pop
xor
or
and
push
sbb
(bad)
ss
dec
xor
clc
rcr
xchg
adc
(bad)
shl
mov
shr
test
sbb
gs
mov
shl
push
xor
fwait
sub
pop
mov
xchg
cs
daa
push
repnz
fcomp
adc
xchg
clc
neg
stos
push
imul
sbb
mov
mov
stos
mov
dec
scas
in
cs
xchg
pop
add
sbb
ss
inc
push
cmp
int
sub
sti
in
iret
cld
aam
mov
jne
push
fistp
push
mov
mov
add
fild
int
jae
mov
cmp
outs
cmp
push
jne
out
lods
inc
mov
mov
inc
push
dec
sbb
jg
cmp
dec
mov
mov
mov
xchg
(bad)
in
pop
stos
loop
cmp
dec
sbb
lock
pop
and
out
cmp
sbb
adc
in
out
loope
in
xor
cmp
or
sbb
mov
xor
repnz
cmp
or
adc
push
cmp
xor
cmp
inc
pop
call
adc
lods
ret
stos
or
xchg
push
xchg
push
pop
xchg
pop
dec
and
mov
pop
and
int
scas
xchg
mov
adc
mov
loope
or
jo
sbb
repz
mov
in
pop
stos
sar
scas
shl
nop
lock
(bad)
jmp
cwde
movs
mov
cmp
jne
retf
mov
clc
pop
xchg
movs
mov
xchg
push
jne
sub
or
dec
sub
jae
sub
and
fwait
sbb
cmp
inc
loopne
and
ja
xor
data16
lods
dec
ds
fild
or
cmp
push
cld
and
jp
imul
stc
and
repz
test
out
or
icebp
sub
sub
adc
call
ret
ds
add
pop
fst
sbb
jne
lods
sub
lds
and
es
add
pop
push
cmp
test
xor
mov
call
sar
(bad)
jbe
push
pop
jmp
in
xchg
jo
fucomi
test
retf
jle
movs
mov
dec
mov
test
enter
jmp
pop
test
cmp
(bad)
scas
aaa
imul
mov
mov
mov
sub
test
add
jl
mov
push
scas
sahf
in
imul
xchg
sub
out
ret
mov
and
sar
mov
sbb
sahf
push
out
imul
or
mov
mov
imul
xchg
std
xchg
or
dec
add
jle
push
jmp
and
dec
rcl
cmc
enter
fist
xchg
int
into
cwde
jp
ja
cmp
xor
xchg
mov
fisttp
int3
xor
mov
iret
inc
cmc
cmp
fwait
neg
rol
xor
and
xor
or
sub
cmps
mov
cld
frstor
sbb
or
ds
dec
leave
mov
movs
in
call
fcomp
sbb
mov
fwait
cwde
cli
loopne
mov
int3
push
add
into
mov
out
push
lods
das
popf
es
imul
xor
scas
mov
adc
mov
xlat
jp
std
sbb
fistp
popf
idiv
aam
jge
mov
fnsave
aaa
mov
std
push
mov
loopne
ficomp
dec
shl
mov
into
jnp
jns
sahf
cld
dec
int
and
(bad)
dec
cs
jbe
sub
xor
cdq
add
mov
loopne
in
xor
push
lds
popf
dec
cmp
hlt
pop
jno
xchg
ja
pop
repnz
mov
dec
and
add
cmp
fisttp
dec
or
jp
mov
mov
cmps
fcmove
and
jp
adc
outs
jo
push
lock
js
aaa
xor
outs
ins
xchg
test
lods
mov
fwait
cmp
fdiv
inc
int3
adc
sub
inc
fwait
jnp
and
cdq
push
sbb
mov
jo
sub
inc
xchg
loop
dec
js
data16
fsubr
adc
inc
cmps
mov
int3
in
call
pop
jg
outs
mov
and
and
out
xchg
adc
push
rcl
mov
test
out
jbe
pusha
cmp
dec
in
sbb
lods
mov
xor
repz
add
adc
push
dec
ds
mov
lock
inc
cmp
test
push
cmp
imul
xlat
and
push
fcomp
std
cdq
add
mov
push
inc
(bad)
xchg
mov
ret
jne
ret
pop
bnd
jmp
jne
loop
movs
ins
repnz
jmp
xchg
push
inc
lods
loopne
xor
push
mov
dec
cld
mov
mov
orps
data16
out
std
xor
cli
xor
xor
leave
ins
jle
sbb
or
mov
inc
mov
cmp
scas
xchg
push
(bad)
inc
sub
xchg
cmp
repz
std
push
dec
(bad)
mov
jnp
pop
call
fist
test
xor
jno
adc
inc
xchg
loope
dec
push
dec
mov
push
int3
cs
sub
leave
and
int
cdq
mov
add
adc
mov
push
mov
or
push
xchg
lods
add
in
pop
or
ficom
fdivr
mov
hlt
add
or
es
sbb
and
rcl
xchg
aaa
jg
mov
scas
mov
pusha
aam
loopne
adc
xor
xlat
jmp
lahf
jns
lds
call
cmp
rol
outs
inc
jmp
adc
test
ins
cdq
cmps
cdq
stc
cmp
jmp
lds
scas
fbstp
jo
cwde
and
scas
int
jne
mov
mov
xchg
sbb
ins
aam
push
mov
retf
cmp
inc
pusha
ficomp
out
inc
inc
cld
ret
xor
imul
jge
push
iret
xchg
push
sbb
mov
mov
or
jl
ds
retf
loopne
inc
pop
pop
inc
mov
xor
cmp
jno
and
ins
repnz
(bad)
arpl
aam
int
jecxz
sub
scas
push
and
mov
hlt
shl
add
or
mov
in
mov
push
jno
adc
cmp
sbb
pop
jmp
mov
or
xor
ins
xchg
ja
retf
cs
fs
adc
xlat
int
push
mov
shl
scas
push
mov
retf
popf
jb
or
imul
fcom
and
sub
rol
mov
push
call
pop
and
and
xlat
ret
jne
(bad)
out
cli
inc
out
or
adc
movs
mov
daa
pop
add
outs
mov
and
cmp
jmp
jmp
pusha
pop
xor
push
sub
fcomp
jns
inc
pop
fstp
cmc
test
rcr
shl
push
cmc
inc
mov
adc
scas
out
dec
rol
mov
daa
adc
pop
repz
jecxz
add
test
lods
loopne
jp
pop
jge
jno
scas
mov
cmp
fld
in
outs
ror
mov
(bad)
mov
mov
(bad)
lahf
sbb
jo
or
loopne
into
fwait
out
je
test
cwde
icebp
xor
dec
cmc
push
mov
out
shl
mov
pop
fdivp
sbb
inc
rol
mov
mov
sub
pop
sub
sar
xor
or
xor
mov
mov
jnp
mov
xor
pop
jg
cmps
das
cwde
in
mov
dec
xchg
mov
cwde
mov
shl
lods
pusha
das
shr
sar
cmps
out
and
into
test
or
inc
sub
lea
mov
loopne
mov
and
push
push
sbb
sub
sbb
(bad)
js
jae
cmps
add
lods
mov
out
jne
or
test
repnz
jge
mov
sbb
and
pop
mov
out
stc
jle
retf
adc
inc
mov
ret
jmp
sub
mov
dec
xor
popa
outs
inc
mov
push
out
fsubrp
ret
fdiv
and
(bad)
xchg
fwait
xlat
aad
jno
push
sub
(bad)
imul
loop
mov
cmps
or
outs
sar
pop
xchg
popa
inc
mov
push
call
sub
mov
ins
push
mov
icebp
xor
fs
adc
sub
xchg
sub
rol
mov
fs
jo
mov
adc
push
adc
out
ret
addr16
mov
jae
mov
jns
jge
add
fidiv
ret
dec
xchg
jo
cmps
xor
cmp
call
adc
pop
pop
repnz
nop
(bad)
xchg
mov
sbb
push
add
xchg
jmp
(bad)
loopne
push
fld
jmp
dec
lea
xchg
or
aam
fild
jbe
es
jmp
cmp
(bad)
fst
mov
xor
fmul
push
dec
ficomp
adc
ja
and
push
push
lahf
jg
mov
dec
repnz
push
pusha
ss
or
fist
scas
xlat
mov
or
dec
jb
xchg
dec
call
cmp
fcom
mov
mov
mov
dec
jmp
push
mov
shl
daa
outs
cs
aaa
rsqrtss
push
outs
popf
jle
inc
inc
or
inc
out
ja
adc
sub
inc
adc
faddp
cmp
out
shl
or
aaa
fcmovnu
add
adc
jno
sub
adc
mov
pop
inc
pop
and
test
pop
ja
out
or
or
lahf
loop
xchg
cld
push
test
fmul
in
dec
cmp
cmp
sbb
ja
ror
xor
push
or
aam
mov
mov
je
xchg
lock
pop
imul
cwde
test
mov
call
into
push
xchg
outs
fs
sub
and
mov
clc
das
sub
iret
mov
lock
pop
and
mov
adc
test
xor
leave
inc
xchg
retf
xchg
popa
pusha
jno
inc
pop
mov
sub
xchg
jl
ja
cmp
fistp
scas
cmp
xor
pop
(bad)
mov
pop
adc
pop
cwde
ja
add
loop
and
jp
cmp
cmp
jno
xchg
push
(bad)
push
mov
out
(bad)
ret
dec
out
mov
fldcw
adc
sti
mov
movs
sub
into
jbe
(bad)
cmp
push
je
sub
push
scas
push
xchg
int
out
push
xchg
push
xchg
dec
pop
xor
push
mov
inc
retf
out
nop
cmp
add
aaa
push
jmp
scas
cmp
in
push
fdiv
mov
fisub
hlt
fisubr
lods
loop
movs
scas
lds
ret
rcr
jle
lahf
mov
ja
jge
sub
mov
mov
cdq
stos
dec
adc
mov
and
add
cld
(bad)
sub
inc
fdivrp
out
sub
mov
js
cmp
out
in
ucomiss
pop
mov
inc
mov
fistp
xchg
xchg
dec
adc
test
pop
mov
inc
cmp
lods
fyl2xp1
push
hlt
in
popf
lea
and
push
fild
cli
add
ds
inc
mov
dec
imul
es
(bad)
inc
jb
(bad)
adc
pop
xor
out
ins
aaa
daa
cld
sub
inc
and
in
(bad)
mov
mov
lock
out
mov
aaa
dec
adc
xor
stos
jo
lds
cli
push
xor
pop
leave
mov
add
shl
or
(bad)
sar
adc
shl
adc
(bad)
adc
pushf
pop
loopne
pop
and
cmp
ss
setnp
fwait
xor
pop
xlat
int
jecxz
dec
adc
imul
(bad)
dec
in
pop
mov
mov
mov
dec
retf
ss
shl
or
sbb
arpl
hlt
jae
add
ror
fild
jae
mov
pop
cli
leave
aam
mov
dec
sbb
repnz
xor
pop
(bad)
lock
jg
lock
sbb
mov
mov
fstp
les
dec
or
dec
sbb
adc
test
adc
stc
das
mov
mov
sbb
jmp
lahf
add
jl
xor
cmps
ins
cmps
push
pop
clc
mov
push
stc
mov
sub
add
add
sub
and
xchg
stos
repnz
push
stos
into
popf
adc
sub
xchg
outs
loopne
sbb
sub
fisub
std
xchg
mov
and
call
pop
hlt
push
addr16
adc
mov
shl
pop
or
(bad)
cmp
jns
bound
push
mov
push
add
pop
sub
lods
push
sub
mov
sbb
pop
jbe
outs
data16
rol
sub
sub
mov
out
or
jae
cmp
pop
add
or
xchg
retf
mov
mov
jae
test
mov
fmul
ret
push
push
or
xchg
add
mov
fbstp
cmp
ret
push
test
or
dec
mov
je
rcl
xchg
sub
daa
(bad)
ins
fld
cmp
xor
repz
sti
xchg
push
das
jmp
jo
add
dec
dec
xchg
sbb
jno
cmp
into
dec
inc
pop
inc
pop
sbb
dec
movs
jecxz
loope
push
clc
jg
pushf
cld
outs
push
icebp
std
cmp
cmp
ins
push
add
and
idiv
data16
stos
jne
ret
fcomp
add
fld
movs
in
outs
rcl
or
out
dec
mov
sub
xchg
pop
pop
dec
ins
retf
jb
arpl
jecxz
test
daa
sti
movntq
push
mov
js
stos
pop
shr
cmp
lods
scas
push
(bad)
sbb
mov
cmp
cdq
pop
or
call
outs
mov
xchg
adc
cmps
mov
xor
out
popa
outs
js
mov
ror
in
stc
dec
inc
mov
push
xchg
mov
mov
cmp
fcom
loop
cli
test
imul
dec
push
dec
add
inc
aaa
cs
retf
sbb
je
mov
jp
ins
xchg
into
mov
out
sub
adc
ss
inc
mov
fidivr
ja
inc
mov
test
sub
and
fucomp
sbb
jge
pop
int
mov
retf
mov
push
mov
jo
cmp
xchg
mov
add
dec
lds
or
dec
inc
sbb
sbb
inc
iret
xchg
imul
pushw
inc
jle
fsub
retf
out
outs
into
stos
push
mov
cmps
jae
jg
sub
daa
cmp
sub
pusha
cmp
cmp
jo
add
mov
shl
jg
pop
or
dec
arpl
bnd
das
and
dec
(bad)
fidiv
and
outs
mov
addr16
mov
pushf
aad
sbb
cmps
imul
aas
ret
ror
jp
xlat
fnstsw
pop
and
mov
xchg
and
(bad)
fistp
sbb
lds
je
push
out
xor
out
jp
stc
in
jb
or
cmp
pop
add
jns
mov
pushf
stos
inc
pop
jmp
mov
cmp
retf
aad
ffree
cmps
bound
sahf
stos
sub
sub
hlt
inc
sub
sti
mov
mov
adc
les
outs
loopne
inc
pop
jl
xchg
inc
mov
outs
mov
mov
popa
jp
movs
bound
inc
jno
lahf
fmul
mov
mov
ror
push
pop
jle
and
test
mov
imul
push
es
jmp
or
mov
add
xor
jmp
in
mov
xor
adc
rol
pop
aaa
inc
ds
push
stc
sahf
jp
lea
into
or
sbb
cmps
pushf
inc
xchg
cli
aam
leave
scas
dec
retf
pop
sbb
jns
data16
inc
jae
int3
sar
xchg
mov
movs
push
in
xchg
icebp
cwde
jns
fidivr
inc
or
out
imul
push
out
fist
hlt
adc
retf
xchg
adc
cmps
mov
into
loopne
call
stos
xor
xchg
and
mov
ret
and
inc
inc
adc
dec
retf
inc
xor
sub
fcmovnb
dec
cmp
pop
jb
dec
sub
call
inc
frstor
dec
ins
mov
mov
stc
repnz
adc
in
inc
test
cdq
xor
push
aam
cmc
xchg
out
ret
xor
shl
shr
sbb
(bad)
xor
inc
sbb
and
test
sti
out
dec
scas
mov
jle
or
call
xchg
ja
mul
sbb
dec
mov
in
inc
and
fistp
leavew
mov
mov
jp
xchg
sub
dec
push
aas
jae
das
scas
mov
retf
retf
repz
fs
jmp
shl
in
jb
sub
dec
mov
adc
mov
sbb
lock
sub
pop
sbb
mov
in
jge
icebp
push
stos
mov
jge
sub
xchg
das
jmp
lods
(bad)
(bad)
fstp
in
mov
into
push
dec
sub
sub
pop
sar
outs
xchg
and
and
dec
and
and
mov
push
stos
and
sub
adc
push
pop
daa
xchg
in
sbb
dec
ss
lods
loopne
pop
xlat
je
ss
movs
dec
mov
sbb
mov
inc
aaa
in
enter
dec
retf
inc
sub
cmc
jg
ror
retf
mov
sbb
inc
xchg
rcr
inc
mov
ja
push
push
(bad)
mov
jmp
push
dec
inc
mov
loopne
xor
movs
aaa
push
sbb
scas
or
push
hlt
(bad)
mov
lods
pop
add
and
dec
cmp
mov
or
imul
rol
dec
adc
test
popf
pop
rol
sub
test
retf
fcom
in
je
test
add
stos
daa
push
cli
int3
mov
ss
shl
retf
add
lock
js
xor
xchg
std
out
jge
in
and
pop
xchg
dec
daa
push
fild
push
cmp
and
push
xor
pop
gs
xchg
leave
push
adc
or
rol
aas
xor
fist
lock
jmp
sar
movs
call
jb
(bad)
jns
sbb
cdq
repz
(bad)
retf
out
pop
sbb
inc
retf
mov
lods
int
sahf
adc
jns
jmp
push
xor
stos
outs
inc
lods
hlt
repz
mov
or
neg
data16
ret
movs
push
jnp
mov
fstp
and
ds
dec
(bad)
dec
push
es
mov
dec
ret
jb
fs
retf
jne
fdiv
loopne
ret
adc
stos
pop
ds
push
or
mov
ret
iret
lds
imul
ins
xchg
xor
iret
adc
mov
push
inc
sbb
fnsave
cmp
add
loop
adc
out
sub
jl
mov
and
xchg
stos
sbb
xchg
xchg
nop
lea
jo
(bad)
push
scas
or
dec
les
xchg
out
add
hlt
add
mov
test
popa
out
out
nop
push
inc
scas
movs
popa
loope
mov
out
jno
out
retf
pusha
fwait
enter
jle
gs
cmp
pop
add
adc
sub
pop
mov
jo
mul
rcr
mov
mov
sbb
cdq
push
and
pop
fdivr
ds
leave
loope
aam
sub
sbb
cs
bound
sbb
sar
xchg
sar
je
movs
setle
jno
or
xlat
jl
not
cli
imul
jb
popa
cwde
inc
mov
popa
int
xor
mov
sbb
sub
bound
jno
aam
xchg
push
cmp
stc
adc
popf
dec
push
pop
mov
div
(bad)
jge
push
js
pusha
cmp
fstp
mov
enter
(bad)
(bad)
aas
xor
jne
or
jg
inc
adc
add
xchg
sahf
ret
dec
and
sahf
sub
push
cmp
js
mov
ins
pop
cmp
ror
mov
push
cmp
call
jl
in
aad
cdq
in
sahf
ss
xlat
jns
movs
pop
xchg
shl
cmp
js
xchg
jae
rcl
cmp
rcr
or
dec
jecxz
dec
retf
(bad)
cwde
pop
push
imul
jne
mov
jmp
mov
dec
std
call
jae
scas
jp
pop
icebp
mov
jl
sti
loopne
sti
(bad)
repnz
adc
or
mov
iret
sbb
and
out
xor
cmp
sahf
inc
cvtps2pi
sub
stos
mov
xchg
mov
mov
add
pop
fld
xor
add
dec
sar
jl
std
test
mov
push
and
lods
rol
or
lds
xor
aas
push
mov
fs
push
das
xchg
cmps
sbb
adc
imul
lahf
fwait
loopne
or
jb
sar
xor
clc
in
push
lea
mov
jmp
sub
les
mov
cmp
repz
hlt
pushf
fld
and
hlt
jno
stc
adc
sub
inc
mov
add
add
fs
push
ror
cld
fadd
jns
shl
jmp
aam
jne
cs
sub
enter
loope
les
mov
dec
pushf
scas
(bad)
hlt
out
in
(bad)
stc
unpckhps
inc
or
push
xor
into
fcomp
fdiv
push
aas
mov
loope
inc
lahf
call
imul
push
mov
test
cli
outs
pop
imul
scas
adc
in
(bad)
inc
je
movs
mov
in
jo
push
pusha
push
jno
mov
addr16
pop
xor
mov
lods
or
and
pop
call
imul
adc
mov
inc
add
imul
mov
int
idiv
stos
mov
js
mov
xchg
adc
mov
retf
fidiv
aam
sbb
pop
add
and
sub
adc
push
ds
(bad)
or
jle
shl
cmps
je
test
retf
push
pop
xor
loop
bound
leave
lods
(bad)
and
dec
outs
ret
or
jno
mov
sbb
mov
push
or
or
lahf
xchg
aaa
xchg
(bad)
icebp
pop
inc
xor
hlt
inc
into
push
dec
popa
xor
cmp
arpl
fcomip
inc
in
or
sar
mov
(bad)
jo
push
adc
add
dec
sbb
lahf
push
(bad)
cdq
pop
out
shr
idiv
fldenv
test
adc
sbb
and
icebp
data16
fst
pop
(bad)
adc
mov
adc
test
mov
jno
sbb
cmp
(bad)
es
cld
fwait
xlat
mov
add
jmp
xlat
pop
leave
add
aam
add
mov
push
mov
call
jecxz
xor
sahf
mov
xchg
cmps
cmc
out
mov
mov
pop
pop
inc
mov
xchg
mov
pusha
sbb
sub
mov
fnsave
fwait
jnp
sub
dec
dec
mov
call
adc
xchg
gs
ret
into
cmp
clc
cmps
sbb
push
es
je
cmps
ret
shl
movs
rcl
fdivr
popf
and
pusha
xchg
add
int3
sub
sub
jl
pop
fcmovu
sub
cvttps2pi
cmp
sbb
fwait
mov
fwait
jnp
push
jno
jo
push
mov
pop
mov
mov
aaa
xchg
jmp
xor
imul
push
cmp
sti
scas
inc
test
fadd
retf
push
pop
sbb
pop
ins
fwait
aaa
cmp
inc
jp
jae
dec
mov
cmp
ret
jns
daa
push
xor
loope
jmp
out
movs
pop
cwde
mov
jo
mov
sahf
inc
enter
idiv
std
test
add
mov
cmp
retf
mov
dec
dec
xor
in
sbb
pop
pop
xchg
imul
push
in
aaa
sbb
inc
or
mov
clc
push
and
xchg
cs
dec
xchg
jns
inc
rol
jge
fimul
mov
int
and
loope
mov
jo
inc
add
in
out
pop
pop
dec
xchg
xchg
xchg
mov
xchg
add
jne
pop
push
push
xor
xor
movs
lahf
repz
loopne
stc
push
fwait
clc
and
bound
pop
js
div
lods
mov
test
add
dec
gs
dec
les
rcr
fistp
sub
xchg
dec
addr16
add
dec
add
stos
inc
xchg
inc
out
loopne
inc
cmp
or
inc
push
rcl
push
dec
push
sub
cmp
pop
out
adc
cmps
popa
dec
mov
adc
mov
mov
cld
mov
fdivrp
xchg
lds
jge
ins
sti
(bad)
(bad)
cmp
lock
fnsave
adc
adc
xchg
int3
xchg
mov
out
lahf
jnp
fdivr
xchg
lahf
cmp
jl
enter
ja
iret
fmul
sbb
mov
repz
push
mov
jp
jecxz
lock
icebp
xchg
mov
movs
mov
rcl
add
jns
popa
loope
sbb
xor
dec
popa
test
jb
mov
add
jmp
pushaw
pop
(bad)
retf
inc
scas
pop
mov
jnp
sbb
xor
clc
pop
rcl
cwde
into
ja
imul
rcl
xchg
in
scas
loope
push
xchg
xchg
adc
test
imul
out
fdiv
pusha
lds
data16
div
inc
fcompp
(bad)
(bad)
outs
sti
mov
xor
sbb
jmp
and
mov
mov
cli
cmp
ja
adc
pop
cmp
xchg
aam
xor
mov
shr
nop
or
push
lock
inc
mov
fadd
mov
pop
sahf
push
dec
push
js
xchg
call
stos
cwde
jl
iret
cmc
popa
ss
inc
pop
jp
stos
mov
xchg
out
scas
shr
adc
(bad)
pop
and
leave
jbe
mov
outs
sub
mov
adc
test
xchg
ins
mov
out
xlat
xchg
nop
mov
sub
lds
rol
ss
(bad)
lock
push
mov
pop
xor
and
in
lea
adc
(bad)
add
rcr
ins
mov
lock
lods
mov
ret
pop
and
fdivr
int3
pop
in
mov
inc
sbb
jns
sub
ds
add
jp
(bad)
sbb
mov
(bad)
pop
iret
es
ret
ins
int3
sbb
mov
imul
sbb
ret
bound
xor
out
gs
(bad)
jbe
push
sub
cdq
aas
jmp
xchg
sbb
cmp
adc
xchg
pop
mov
div
inc
stos
cwde
adc
jae
ficomp
inc
mov
(bad)
jmp
dec
js
scas
icebp
jbe
mov
stos
int
ficomp
push
mov
pop
add
mov
or
test
in
cdq
and
and
jae
add
ror
cmp
jmp
adc
out
sti
ins
call
fdivr
xor
addr16
rol
cdq
nop
les
je
sub
xor
lds
int
aad
rcr
or
cmps
push
xchg
ror
push
sbb
mov
sti
push
mov
je
mov
addr16
retf
out
add
test
ror
and
mov
pushf
push
cwde
dec
push
sub
cs
and
dec
adc
ins
push
call
mov
loopne
cmp
movs
mov
pop
imul
fnstcw
push
pop
imul
xchg
pop
xchg
mov
dec
sbb
imul
test
adc
shl
and
xchg
sti
call
add
xor
(bad)
mov
push
int3
jnp
popa
sbb
popa
scas
jns
dec
xor
test
sar
(bad)
mov
adc
pop
xchg
dec
in
sbb
push
sub
dec
imul
jae
cmps
xor
stc
sub
fnstsw
enter
pop
movs
or
shl
je
not
inc
ja
xor
mov
pop
sbb
pop
jnp
and
nop
and
push
retf
adc
out
add
iret
(bad)
int3
loopne
or
jbe
cmp
adc
cmc
sbb
out
ins
adc
icebp
enter
xchg
ror
inc
int
ficom
push
dec
sub
add
in
jp
sahf
push
fisub
adc
int3
xor
fiadd
nop
or
add
pop
jge
ret
xchg
xchg
mov
dec
fs
dec
xchg
sbb
scas
vcvtsi2sd
into
sahf
and
into
add
xor
(bad)
out
xchg
es
shr
popa
pop
(bad)
and
mov
mov
pop
mov
mov
repz
and
mov
aam
jmp
jb
int3
mov
lds
aaa
push
xor
fimul
test
imul
ja
popa
icebp
xchg
dec
sbb
int
fild
or
rcl
nop
push
ret
int
not
xchg
mov
mov
bound
(bad)
mov
add
jp
add
js
xchg
(bad)
stos
lahf
xchg
(bad)
mov
scas
adc
sbb
into
dec
(bad)
fwait
mov
fs
jbe
icebp
xchg
iret
stos
push
add
ror
lea
jnp
test
mov
mov
sbb
sub
xor
sbb
imul
(bad)
and
mov
retf
jnp
jge
mov
rol
outs
inc
and
mov
sbb
ret
sub
push
aad
loope
popa
cmp
push
adc
leave
stos
iret
jns
jno
and
bound
stc
retf
clc
nop
xchg
adc
rcr
scas
cmps
shr
push
rcl
je
icebp
jl
push
daa
cmp
and
ins
or
ins
test
std
shl
ror
mov
xor
ret
cmp
jnp
add
xor
pop
cmp
std
jae
mov
adc
inc
sbb
mov
push
cmps
out
adc
inc
push
cmp
lock
xlat
sahf
ret
pop
addr16
mov
mov
or
mov
xor
push
sahf
pop
mov
pop
adc
mov
add
jne
std
inc
loopne
retfw
in
pop
scas
loop
stc
ss
ret
xchg
repnz
dec
bnd
xor
(bad)
mov
iret
push
push
dec
sub
int
and
aaa
(bad)
aam
fcom
xor
pop
inc
cmp
sub
fild
pop
in
into
cmp
and
cmps
enter
(bad)
hlt
shr
lods
push
cmp
cmps
out
pop
mov
cmps
and
retf
icebp
outs
bound
push
popf
sbb
das
jno
dec
mov
loopne
popa
jl
addps
pop
and
jge
pop
mov
outs
shl
jnp
jnp
(bad)
pop
cmp
aas
add
loop
iret
xor
push
push
scas
jecxz
xor
mov
loopne
inc
retf
fsubr
push
bound
call
dec
sbb
inc
sub
dec
sub
shr
sub
mov
sub
sbb
test
outs
repz
popf
mov
movs
xchg
icebp
ins
jae
(bad)
std
out
fxch
jmp
push
jo
and
mov
popf
mov
cwde
cmp
cmp
mov
(bad)
pop
sub
jnp
fs
sub
or
mov
sti
xchg
mov
cmp
add
outs
cmp
and
adc
push
outs
xchg
scas
mov
push
sub
mov
pop
and
mov
retf
out
test
and
mov
in
xor
jae
mov
(bad)
push
daa
adc
lahf
gs
add
xchg
cmps
pop
xor
call
shr
(bad)
or
xlat
inc
(bad)
test
(bad)
loopne
rcl
(bad)
loopne
aas
dec
mulps
jge
adc
(bad)
int
mov
out
sar
pop
jge
jmp
adc
and
sub
mov
adc
pusha
stc
mov
lea
in
pop
arpl
add
loopne
cdq
dec
(bad)
pop
sub
adc
jg
out
test
daa
sub
jne
dec
push
mov
fwait
mov
cmps
push
jb
pop
sbb
outs
test
retf
xchg
or
dec
mov
repnz
push
out
and
sbb
and
loopne
cmp
jl
and
push
es
rcr
enter
or
dec
fwait
pop
loop
std
rcl
lahf
fld
mov
push
push
cmp
ret
das
mov
loop
mov
loop
pop
or
(bad)
xchg
retf
(bad)
out
pop
ret
stos
cs
xor
outs
iret
(bad)
and
jl
cmp
fwait
aam
(bad)
outs
jbe
popa
dec
adc
pop
daa
out
push
sub
test
call
mov
push
sbb
int3
and
popa
mov
inc
loope
rcr
dec
adc
popf
pop
cdq
pop
addr16
mov
hlt
movs
aam
out
jnp
cli
sub
enter
or
(bad)
in
add
into
mov
ficomp
or
dec
cmp
mov
loope
or
mov
adc
je
cmp
dec
mov
sub
jae
mov
cld
cs
pop
cmps
cmp
imul
jecxz
fnstsw
mov
cmps
cmc
ss
push
sub
mov
jne
push
pop
mov
fld
push
aam
maskmovq
not
int
xor
push
add
add
add
test
jmp
sub
cs
cmc
call
jbe
xor
fs
xchg
adc
fs
mov
mov
or
mov
inc
inc
leave
jo
and
jmp
cmp
push
sar
mov
gs
push
add
and
sub
imul
or
jno
and
and
inc
popa
xchg
popf
stc
inc
test
inc
xchg
mov
(bad)
in
mov
pop
adc
(bad)
aad
lock
push
pop
dec
shl
(bad)
(bad)
jmp
xchg
les
xchg
or
(bad)
xor
cmp
imul
test
mov
inc
push
and
lds
xor
mov
push
std
stos
push
xor
or
mov
xchg
out
xchg
lahf
sub
jo
or
or
jns
push
xchg
lahf
outs
push
inc
sbb
cmp
mov
push
mov
jmp
cmc
xchg
daa
dec
jmp
cmp
xor
and
(bad)
ror
jno
jmp
jae
xchg
fist
lea
or
js
mov
int3
jg
call
adc
loopne
(bad)
pop
andnps
loop
in
cmps
out
loopne
pop
inc
bound
outs
adc
out
(bad)
fdiv
pop
cmps
int3
push
mov
mov
adc
aam
xor
fidivr
in
imul
hlt
inc
mov
outs
imul
and
or
call
add
int
movs
pop
inc
mov
jne
popf
sbb
pop
icebp
sub
jge
dec
dec
(bad)
jnp
cs
fwait
jnp
mov
retf
out
mul
fisub
xor
adc
movs
xor
daa
sbb
pop
fcom
dec
fldenv
stc
repnz
dec
mul
pusha
jo
mov
cmp
push
call
mov
xchg
mov
movs
jb
mov
aad
pop
pop
or
cmp
dec
pop
pop
jl
cmp
inc
add
mov
adc
loop
scas
mov
jae
sub
push
sub
push
lahf
int
loop
inc
adc
cmp
les
xor
xor
repnz
adc
jnp
fidivr
mov
sub
xor
xor
mov
int3
ins
xchg
jp
and
pushf
jb
fldenv
inc
in
or
jecxz
sub
push
fmul
mul
cmc
lods
mov
lahf
in
push
xor
mov
mov
xchg
sbb
outs
jns
xchg
(bad)
mov
dec
mov
out
neg
push
jno
hlt
retf
fstp
mov
push
push
push
out
dec
sub
in
xchg
ja
mov
xchg
cmps
aas
and
add
lds
mov
xchg
int3
mov
and
xor
sar
mov
fiadd
jo
mov
push
xchg
sub
ss
jnp
add
lahf
in
outs
adc
mov
jns
(bad)
das
sbb
inc
call
push
inc
sti
movs
jbe
outs
cli
or
inc
lods
retf
or
into
sbb
loope
dec
and
imul
bound
jmp
not
cwde
(bad)
sbb
add
sbb
stos
mov
sub
pop
sbb
pop
sbb
inc
(bad)
fsubr
fdivr
mov
icebp
std
mov
stos
movs
xchg
add
xlat
fmul
sub
jno
ins
dec
stc
fmul
jle
fld
repz
(bad)
mov
lea
imul
mul
aas
pop
inc
call
retf
adc
mov
outs
fwait
push
sub
jns
mov
daa
xchg
ja
xor
mov
out
leave
out
jmp
ins
stos
cld
add
push
(bad)
mov
adc
mov
xor
test
dec
(bad)
push
push
ins
xor
mov
cs
xchg
pop
mov
pop
lock
inc
push
sahf
pop
jmp
dec
push
mov
aaa
in
jge
xchg
jno
stc
pop
movs
imul
push
dec
or
mov
ds
cmp
add
dec
(bad)
mov
mov
dec
add
stos
pop
or
icebp
sbb
repz
fmul
push
cmp
sbb
jecxz
jp
hlt
adc
arpl
adc
imul
ins
iret
jno
loopne
les
jo
in
stos
lahf
and
push
pop
mov
cmps
js
and
cmps
rcl
adc
rcl
xchg
stos
call
aad
push
push
push
push
fsub
pop
cmp
cmp
inc
(bad)
mov
xlat
push
sub
inc
dec
dec
(bad)
xlat
mov
sbb
jl
ds
mov
inc
jne
push
jb
out
fs
repz
sahf
xchg
dec
pop
(bad)
pop
test
adc
fs
adc
in
aad
pop
stos
in
push
and
pop
xchg
ss
push
add
push
inc
movs
cwde
dec
fistp
mov
int
mov
out
stc
test
sub
xor
push
dec
arpl
mov
test
cmps
sub
sub
jp
aaa
mov
mov
retf
nop
fadd
enter
or
sub
add
dec
jb
sub
out
frstor
fistp
ret
adc
mov
into
loop
xor
ds
add
cmps
jo
add
sbb
pop
inc
pusha
fdivr
jl
mov
inc
hlt
(bad)
xchg
aas
stc
dec
mov
and
sbb
cmp
pusha
or
xor
pop
fsubr
sti
leave
adc
std
fcomp
popa
cld
dec
mov
mov
push
(bad)
clc
scas
push
mov
loop
lods
pop
lahf
addr16
push
clc
mov
adc
leave
in
cmp
push
call
stc
xor
mov
mov
mov
jg
fwait
les
js
fld
ins
sub
xor
dec
xor
pop
rol
sar
mov
clc
iret
cmp
fwait
jp
jmp
pop
es
imul
das
repz
xchg
inc
mov
cmp
mov
ins
fcmovb
push
add
push
ins
(bad)
jne
push
pop
mov
jmp
xchg
aas
jae
das
push
xchg
icebp
dec
pop
in
jne
mov
sub
mov
cmp
les
in
jmp
jne
sub
pop
mov
adc
pop
mov
lahf
sbb
add
leave
add
mov
add
xor
mov
add
clc
mov
push
xchg
push
mov
jns
or
addr16
jmp
mov
mov
jmp
iret
rcr
and
mov
(bad)
xor
mov
jg
div
outs
mov
call
sub
jge
(bad)
push
pop
lahf
ror
sbb
das
data16
popa
pop
mov
ret
xchg
cld
cld
ins
(bad)
push
repz
mov
inc
(bad)
mov
sbb
lds
je
inc
dec
inc
out
sub
call
fcomp
xchg
sbb
repz
mov
xchg
aam
xor
lods
(bad)
ficomp
push
mov
hlt
mov
xlat
cmp
sub
or
adc
leave
je
retf
adc
mov
repz
aaa
fld
call
in
sub
inc
gs
in
std
and
movs
in
pop
add
push
and
pop
dec
mov
xchg
inc
fmul
pop
inc
inc
add
mov
adc
sbb
xor
call
push
cmp
leave
xchg
push
movs
inc
mov
loop
dec
sub
jnp
in
sbb
mov
les
and
cdq
xlat
jae
into
sbb
inc
clc
inc
(bad)
ror
sbb
jg
shr
ret
lahf
iret
inc
imul
iret
xor
stc
in
jno
cmc
xchg
add
or
fsubr
aaa
das
or
inc
imul
outs
xchg
cmp
(bad)
mov
and
test
cld
leave
das
pop
sbb
sub
and
dec
loope
mov
push
sbb
enter
cmps
neg
(bad)
out
nop
sub
or
out
ficom
out
movs
dec
lods
int3
loope
div
push
xchg
mov
shr
(bad)
push
adc
inc
out
mov
and
mov
pop
adc
and
enter
je
nop
aam
jg
(bad)
rol
retf
xchg
neg
cmp
xchg
add
in
dec
sbb
nop
adc
add
mov
xchg
sub
and
jmp
add
and
add
mov
je
dec
repnz
inc
or
ja
sti
(bad)
and
mov
sbb
inc
(bad)
xchg
inc
cwde
mov
nop
fild
inc
lahf
and
push
dec
rcr
cld
scas
adc
lds
repz
push
ins
dec
push
imul
dec
sahf
gs
ret
bound
push
lods
out
jnp
jl
xor
popa
loope
sub
(bad)
in
inc
cld
or
stos
das
jge
ins
ins
push
sbb
xchg
fld
je
mov
pop
ss
sahf
not
jnp
dec
fiadd
in
sub
ins
jl
jp
adc
rol
mov
jb
lock
jo
push
mov
retf
xchg
push
or
cli
adc
into
jle
mov
xor
mov
inc
test
or
xchg
lods
jbe
inc
xchg
push
push
push
or
ins
adc
hlt
aam
mov
sahf
xchg
loope
mov
dec
pop
bnd
aaa
js
in
or
je
mov
test
stos
xchg
lea
cmp
mov
xor
addr16
enter
or
jae
lods
ss
call
cmps
jnp
shr
cmp
aad
rcr
sbb
jae
cmps
je
hlt
xchg
pop
cmp
xor
scas
jmp
jl
or
frstor
in
and
out
cwde
adc
loopne
lods
jg
imul
mov
ins
imul
and
xchg
mov
mov
test
fisub
xor
enter
and
xchg
add
mov
jo
mov
jmp
push
leave
jmp
xor
movs
(bad)
push
sbb
jmp
push
popf
sar
sahf
jno
inc
mov
fwait
mov
pop
jge
clc
cli
test
dec
mov
popa
and
jl
cmp
bound
jmp
adc
loope
arpl
stos
mov
jle
push
xor
lahf
(bad)
fsubr
outs
inc
imul
imul
xor
inc
or
sub
ret
loope
push
or
mov
repz
in
adc
jecxz
cmp
int
dec
test
jmp
fwait
push
nop
movs
jecxz
jnp
movs
cmp
or
popa
retf
ins
outs
dec
sbb
push
push
pop
adc
stos
mov
mov
leave
std
ret
movs
jae
xor
ja
adc
ja
dec
inc
test
pop
xchg
push
add
(bad)
fldenv
je
ret
dec
sub
rep
jmp
sar
sub
mov
fwait
or
js
jl
ins
retf
dec
dec
jl
shr
xchg
(bad)
int3
dec
pusha
(bad)
clc
mov
cmp
pop
push
outs
(bad)
jmp
aaa
inc
test
jp
cmps
fiadd
fstp
push
mov
fidivr
jmp
push
aam
hlt
cld
icebp
(bad)
stc
and
data16
cmp
jbe
push
stos
push
cmps
inc
adc
inc
xor
xor
iret
shl
movs
add
mov
aam
sub
cmp
pop
lock
xchg
dec
(bad)
jo
dec
repnz
jmp
adc
jo
mov
sbb
adc
fild
inc
mov
shr
and
jb
jge
xor
stos
push
xor
pop
leave
mov
adc
jbe
mov
pop
sub
push
mov
aad
push
fnsave
jmp
test
xchg
iret
mov
cld
fild
sub
lods
loop
xchg
dec
daa
in
ret
call
push
xor
popf
popf
mov
jg
popf
push
jo
adc
pop
dec
leave
inc
mov
dec
dec
sub
scas
(bad)
cmc
or
inc
icebp
cmp
in
sahf
dec
outs
inc
pop
and
inc
test
jne
fiadd
dec
fld
test
call
jp
jmp
ror
call
xchg
jmp
adc
and
(bad)
out
cmp
jecxz
nop
clc
sbb
mov
lds
jg
out
call
out
cs
movs
pop
das
mov
xchg
add
mov
repz
mov
sbb
push
leave
push
test
retf
push
sbb
cwde
into
cmp
xchg
jmp
push
cmc
call
shl
sbb
js
add
adc
push
dec
arpl
leave
sub
sahf
mov
mov
jno
dec
leave
and
push
out
lahf
not
mov
fwait
add
outs
movs
cmps
sbb
cmp
jle
out
aad
jnp
mov
mov
or
adc
xor
neg
mov
pushf
xchg
pop
add
or
test
jecxz
mov
sti
push
and
ja
mov
je
cwde
test
(bad)
dec
push
sub
jns
repz
out
adc
or
mov
out
xchg
pop
das
int
inc
push
mov
xor
imul
sbb
dec
jne
bound
sbb
adc
lea
inc
pop
stos
or
or
aaa
pushf
jbe
popa
mov
in
push
push
xchg
dec
add
add
in
cli
popf
jl
pusha
mov
nop
cmp
mov
lock
mov
pop
inc
or
push
into
add
scas
mov
inc
in
jbe
shr
cli
aas
int3
call
cmps
mov
aad
push
mov
jne
lods
loope
push
inc
cs
(bad)
sub
mov
fisub
inc
xor
sbb
mov
add
push
out
pop
push
and
sub
push
jge
mov
jno
sbb
sbb
test
call
and
mov
je
outs
xchg
cmp
pop
sub
sub
pop
push
push
fdivr
mov
add
lods
jae
leave
push
mov
adc
das
nop
mov
jnp
xlat
cmp
adc
aad
sub
inc
jne
inc
fnsave
add
dec
(bad)
rcr
dec
ror
cmc
mov
(bad)
out
fidivr
sar
scas
adc
add
ins
sub
or
cmp
outs
push
fwait
add
sbb
push
mov
mov
lea
das
ret
pop
fiadd
inc
stos
push
fs
int
addr16
sub
pop
cld
ins
(bad)
pop
dec
fwait
dec
xor
pop
mov
mov
mov
inc
ret
hlt
scas
push
cmps
adc
or
cld
nop
ret
mov
sbb
xchg
xlat
clc
rcl
out
fdivr
in
jle
mov
or
mov
nop
pop
ins
sbb
(bad)
jge
data16
pop
mov
test
jno
mov
sub
movs
iret
mov
pop
push
ficom
jecxz
jo
jp
inc
lods
inc
or
out
lods
mov
sar
or
pop
loopne
push
xor
pop
add
mov
popa
inc
lea
out
int3
sti
lea
movs
aaa
xchg
add
inc
push
xchg
xchg
jle
dec
dec
hlt
adc
inc
jecxz
mov
arpl
jmp
mov
adc
lahf
mov
inc
imul
pusha
test
and
pop
cmp
or
sbb
xor
loope
pushf
sti
add
ins
pop
mov
add
fwait
sbb
out
iret
xchg
test
inc
lock
test
out
stc
xchg
sub
aad
call
out
push
jb
int
nop
adc
mov
popf
jl
jecxz
mov
cli
fisttp
jp
sti
mov
(bad)
cli
arpl
mov
cpuid
std
jmp
pop
test
js
and
mov
loope
pop
stos
leave
jecxz
shl
dec
ret
mov
(bad)
lds
push
ret
push
shr
loopne
push
outs
(bad)
in
outs
jnp
clc
mov
push
lods
push
cmps
inc
imul
mov
jle
sbb
sub
shl
mov
test
push
xor
add
js
fisttp
in
test
pop
test
sbb
mov
loop
das
pop
imul
lods
mov
mov
lea
stos
loopne
add
in
xor
mov
add
mov
cmc
xor
loopne
loope
sbb
sbb
jp
cmp
enter
les
cmp
jg
fwait
xchg
jne
out
nop
add
mov
jmp
inc
pop
mov
out
adc
daa
test
iret
dec
add
jmp
mov
inc
stos
xchg
ins
(bad)
push
test
push
xor
mov
je
xor
popf
int3
sub
mov
lods
lea
xor
pop
cs
lods
shl
and
retf
jp
popf
cdq
fdivr
xor
cmp
(bad)
sub
adc
sbb
jbe
fisttp
and
and
jb
pop
adc
in
mov
aad
into
in
mov
retf
add
dec
and
(bad)
nop
stos
pop
scas
dec
adc
adc
jp
xchg
xchg
sbb
aam
shl
sub
sub
and
push
and
mov
and
push
add
adc
xchg
sar
cwde
sbb
rol
pop
fmul
push
fucomp
and
es
mov
mov
and
pop
cs
loope
stos
jg
and
sub
arpl
mov
dec
enter
lds
sahf
cmp
in
push
xor
pushf
dec
jne
test
scas
rol
jnp
inc
and
pop
inc
push
outs
dec
lods
adc
sti
add
mov
(bad)
(bad)
ins
js
ins
fld
sub
mov
hlt
out
pushf
aad
mov
jmp
cmp
hlt
jle
cmp
sar
into
pop
dec
mov
scas
daa
pop
cmps
sub
ins
dec
mov
and
add
div
mov
or
adc
movups
sar
adc
cmps
fidivr
jne
loope
into
retf
pushf
push
push
loopne
xor
jbe
jb
adc
add
lods
xchg
inc
iret
sahf
into
dec
cmp
dec
gs
stc
sub
mov
daa
xchg
sar
sub
xchg
dec
ror
sub
jb
out
xor
jmp
pop
leave
js
repz
mov
add
fisub
inc
adc
adc
les
jnp
mov
les
popf
in
mov
outs
jp
hlt
sub
and
inc
(bad)
mov
push
loope
ins
iret
dec
and
push
jmp
cmp
push
ret
jno
add
push
adc
cmps
jns
movhps
adc
push
mov
sbb
push
hlt
stos
push
and
adc
jle
shl
sbb
adc
pop
sbb
and
xor
xor
ins
mov
push
stc
cmp
sub
mov
mov
mov
adc
jmp
outs
cmp
into
inc
cs
jmp
mov
out
jae
cmp
aaa
outs
cwde
mov
in
fstp
imul
sub
push
mov
pushf
dec
dec
dec
xlat
and
mov
aas
push
mov
inc
fidiv
test
xor
pusha
dec
xchg
pop
pop
mov
scas
daa
jg
push
push
arpl
xor
jno
and
leave
out
cwde
popf
cmps
daa
ficomp
cld
cmps
cmc
retf
mov
cmp
xlat
mov
mov
(bad)
repnz
push
sbb
mov
ret
mov
lods
aas
mov
mov
mov
pop
sbb
test
mov
loope
cld
hlt
xlat
and
sbb
or
call
(bad)
mov
pop
fld
lock
xchg
hlt
xchg
dec
nop
(bad)
cld
(bad)
rol
outs
fdivr
fwait
test
dec
fmul
add
mov
pop
pop
mov
ror
or
xchg
mov
push
mov
xchg
adc
mov
and
adc
dec
daa
lock
retf
and
cmp
cmc
push
das
shl
mov
add
dec
aam
sbb
retf
andps
sbb
cmp
adc
lock
pop
es
xchg
sbb
loop
shr
dec
sti
or
jns
call
lods
fisttp
ss
arpl
in
mov
fild
repnz
adc
out
sub
outs
test
in
pop
mov
xor
or
push
mov
ss
xchg
sbb
lods
mov
scas
test
xor
adc
mov
ds
aam
out
xchg
ret
icebp
sahf
repnz
mov
cdq
cmp
adc
pop
and
jle
mov
sub
fist
nop
repz
jg
imul
mov
xchg
dec
mov
movs
aaa
and
icebp
dec
and
inc
dec
outs
add
sub
retf
sar
aam
pop
xor
push
int3
(bad)
iret
xchg
cs
arpl
xchg
add
shl
icebp
pop
imul
dec
imul
mov
test
sub
(bad)
fisttp
cmp
mov
mov
cmp
outs
mov
aas
rol
call
pop
add
mov
jb
mov
cdq
sub
idiv
ds
adc
sbb
rol
outs
addr16
aaa
sar
push
fucom
mov
adc
push
sbb
dec
or
push
pop
call
pop
sbb
data16
sub
ins
push
movs
dec
gs
sbb
mov
not
icebp
mov
cmps
xor
mov
add
iret
adc
aas
push
xchg
mov
das
xchg
adc
in
ret
xor
xchg
(bad)
call
cld
sub
xchg
lock
push
mov
dec
shr
or
dec
in
idiv
nop
int
(bad)
jecxz
lahf
cmp
xchg
or
and
or
push
push
and
sub
sbb
push
lds
clc
(bad)
(bad)
cld
test
cmps
bound
sbb
jae
js
inc
push
in
xor
push
sti
or
push
addr16
ds
imul
jl
inc
fcomip
push
dec
xor
pop
mov
or
push
sahf
and
stos
pop
jno
push
aas
cmp
pop
dec
sbb
scas
fnstsw
adc
xchg
dec
cmp
es
je
pushf
(bad)
iret
jp
cmp
cdq
das
xlat
aam
ret
scas
(bad)
rol
inc
hlt
mov
fwait
push
add
and
adc
pop
rol
(bad)
cmp
jle
add
mov
rcr
imul
sub
jbe
mov
jns
jnp
pop
lods
dec
test
aam
or
add
jl
mov
in
xchg
jno
outs
movs
sub
sub
cmps
test
jo
fcmovnbe
aam
push
jg
sbb
sub
jmp
test
shl
or
mov
cld
lea
test
mov
mov
rol
mov
popa
mov
cld
push
shl
sub
in
clc
sub
sub
and
sbb
lea
sub
enter
rcr
xor
sti
aaa
inc
jl
push
fadd
mov
adc
jecxz
xchg
dec
in
stos
add
shl
retf
mov
fstp
inc
add
pop
or
ins
les
inc
sbb
cld
sub
mov
shl
ins
loopne
lock
mov
imul
in
pop
enter
adc
(bad)
(bad)
or
xchg
ret
jle
push
mov
mov
sti
jmp
jae
cli
and
push
mov
ja
mov
fisub
mov
pop
xor
cmp
push
cmp
cmps
into
out
jbe
or
mov
mov
pop
jne
mov
add
or
sti
mov
jge
nop
loop
ret
mov
cmp
aas
push
jne
sub
cmp
sbb
push
xchg
jns
enter
jle
sar
jge
pusha
xlat
jg
stc
stc
loopne
adc
repz
cmp
pop
cmc
test
mov
mov
push
sbb
dec
retf
mov
xor
cli
adc
pop
sbb
pop
mov
outs
inc
arpl
fnstcw
cwde
or
pop
mov
xor
dec
push
fwait
aaa
mov
out
ror
xchg
fild
inc
sbb
leave
mov
sub
inc
sbb
pop
cmps
xchg
jno
inc
loope
jmp
sbb
std
nop
movs
nop
(bad)
push
cwde
xor
dec
push
jnp
xor
arpl
mov
retf
xor
xor
mov
xor
das
xchg
je
arpl
lahf
xor
dec
(bad)
pop
std
lock
and
add
dec
pop
jb
sbb
mov
out
ss
popa
add
hlt
icebp
or
jmp
sub
sahf
sub
lahf
pusha
(bad)
and
sub
jne
xchg
in
sahf
mov
push
clc
dec
scas
fsubr
test
add
or
inc
or
popa
adc
in
pavgw
leave
lods
cmp
mov
ret
jns
fnsave
sub
cwde
scas
(bad)
sbb
and
cmps
cmp
xchg
xor
add
arpl
gs
rol
ds
leave
mov
call
int3
cmp
mov
adc
aaa
repnz
sbb
sub
jg
sub
ja
adc
add
mov
std
inc
mov
or
or
cmp
push
rcl
cmps
fidiv
push
rcl
xchg
iret
popf
scas
or
xchg
jno
xchg
push
aaa
leave
xchg
lods
cmp
sbb
push
in
sbb
daa
and
adc
pop
clc
jb
call
or
or
push
(bad)
out
mov
mov
jno
sbb
sbb
int3
es
adc
mov
add
jnp
test
jmp
dec
imul
repz
in
inc
mov
sub
dec
fsubr
add
fwait
push
xor
mov
das
and
push
xchg
xchg
popf
mov
repnz
dec
test
or
adc
mov
adc
jecxz
cmp
and
icebp
clc
dec
pop
lock
mov
aaa
popa
or
nop
shl
daa
xor
pop
sbb
sbb
loopne
(bad)
push
mov
jp
fisubr
adc
fistp
dec
inc
sub
js
xchg
or
xchg
and
mov
cli
fist
adc
bnd
pop
sbb
dec
push
aaa
(bad)
or
sti
fstp
cmps
lahf
mov
jno
push
xor
ret
and
repz
cmc
or
nop
lahf
mov
sub
inc
fistp
jmp
fimul
pushf
xor
xor
lock
(bad)
mov
aad
and
pop
mov
jmp
cmp
push
movs
pusha
sub
mov
xchg
imul
(bad)
mov
lea
push
cmc
lods
xlat
xor
mov
imul
icebp
adc
pushf
mov
or
scas
pushf
xchg
icebp
dec
aaa
dec
into
ins
nop
add
shl
mov
mov
or
(bad)
jl
sbb
mov
add
push
xor
leave
fdivr
out
or
movs
test
mov
packsswb
push
jbe
call
mov
xchg
std
ins
push
mov
out
or
(bad)
cdq
xchg
lahf
adc
pusha
xor
inc
leave
mov
sbb
leave
lock
mov
add
and
mov
das
adc
in
xchg
pushf
div
call
pop
inc
push
sbb
push
jp
addr16
jg
fisttp
in
cwde
repz
add
in
das
push
call
sti
pop
ins
pop
fdiv
dec
jg
cmps
ror
test
pop
xor
pushf
lods
mov
fimul
inc
out
push
push
mov
dec
fist
mov
dec
pop
test
stc
pop
sub
ja
push
int
xchg
adc
pop
pop
cmp
push
ror
pop
jmp
repz
xchg
dec
std
mov
loopne
aam
dec
aaa
imul
inc
mov
dec
cli
out
sbb
cmc
repz
sub
jno
pushw
add
sbb
daa
fistp
scas
aas
aas
sbb
gs
adc
call
jno
add
dec
loop
xor
cmp
pop
add
pop
ss
jb
xchg
and
push
js
push
pop
inc
dec
fisttp
arpl
xchg
mov
es
adc
inc
mov
mov
or
mov
and
outs
jmp
pop
mul
xor
enter
and
rcr
gs
clc
cmc
fwait
shl
mov
pop
scas
dec
cmps
sub
or
push
jp
jl
jno
pusha
loop
mov
cmps
xchg
push
sbb
dec
or
call
mov
add
test
push
loopne
or
sbb
test
lahf
sbb
dec
jne
fcom
out
lahf
push
lds
push
fst
lea
mov
adc
(bad)
fistp
in
stos
repz
pop
push
sbb
jns
call
imul
adc
rcl
fsubr
cmp
sbb
push
pop
icebp
cmp
mov
push
out
mov
repnz
aam
xlat
or
stos
pusha
lahf
pop
pop
fdiv
test
xor
fldcw
cmp
xchg
jmp
dec
lea
xor
pop
dec
stc
inc
call
mov
adc
cmps
les
push
push
fsub
ins
dec
loopne
jo
cmps
adc
sub
sub
sub
jb
sbb
jmp
not
adc
jmp
cmps
je
jae
dec
test
jp
out
pop
mov
xor
dec
sbb
fsubp
and
cmc
xor
int
in
mov
inc
cmpxchg
pop
cdq
loop
bound
jbe
int3
shl
iret
inc
push
cmp
dec
ins
imul
or
adc
nop
(bad)
out
jae
and
stos
sar
push
loope
push
psllq
test
(bad)
std
jmp
jg
das
mov
mov
adc
js
fs
add
cmp
out
mov
sar
scas
hlt
adc
sbb
mov
out
ds
or
push
jbe
sub
xchg
popf
stc
sub
ja
or
jae
xchg
mov
sub
les
add
mov
inc
mov
mov
leave
jle
pop
inc
jge
mov
push
fs
jb
shr
shr
popa
inc
add
or
out
mov
ja
test
rcl
xor
shr
pusha
(bad)
js
repz
sub
sbb
jb
pop
sbb
xor
leave
jbe
je
push
jle
mov
add
cmp
lds
daa
imul
push
inc
mov
mov
out
jmp
pop
xor
jmp
xchg
mov
push
and
clc
dec
ja
lds
cmp
cmp
push
cli
gs
repnz
add
aaa
jnp
(bad)
or
call
lds
jmp
mov
cdq
movs
neg
repnz
cmp
cmp
xor
and
frstor
mov
pop
mov
shl
cmc
sbb
and
pop
call
pop
test
pop
sbb
push
in
test
jne
push
sbb
jecxz
and
call
rol
clc
mov
out
mov
push
dec
out
int
std
sub
cmc
cmp
outs
dec
aaa
mov
or
sbb
mov
mov
jle
or
push
call
les
ficom
mov
xlat
sub
aaa
shl
mov
adc
push
inc
pop
jp
adc
or
jb
mov
ja
cmp
mov
retf
inc
ins
sub
lahf
xchg
test
adc
or
pop
(bad)
push
aaa
add
icebp
add
fist
test
dec
bound
test
stc
fst
dec
xor
std
mov
(bad)
retf
sub
mov
dec
inc
sbb
outs
sub
sar
push
ja
loopne
in
std
jle
inc
or
jmp
mov
mov
int
ja
imul
xchg
adc
add
jmp
sbb
(bad)
shr
jg
aam
cdq
or
or
retf
inc
mov
loop
mov
dec
jmp
sahf
mov
sti
(bad)
push
add
cbw
cli
inc
fptan
add
and
cdq
adc
jmp
pop
jnp
cld
fwait
cmps
dec
xlat
iret
push
sar
add
int
and
jb
jecxz
mov
je
push
inc
jb
or
push
cmps
mov
inc
push
sti
bound
pop
adc
cdq
lods
dec
icebp
sbb
add
push
cmps
lods
jmp
inc
push
test
xchg
lea
cld
fidivr
lds
mov
mov
mov
jle
out
push
pop
jmp
pop
and
fistp
sub
cli
inc
push
adc
fucomip
pop
test
push
fwait
mov
inc
(bad)
push
stc
loop
push
cmp
xor
sbb
sub
jge
neg
push
enter
lahf
pop
xor
jl
cmc
push
(bad)
pop
sar
scas
sub
fcmovne
jbe
das
lods
add
and
ins
bound
retf
fs
int3
pop
mov
rol
pop
xchg
adc
std
sbb
xor
fild
scas
loop
adc
push
or
jmp
mov
adc
pop
sub
lods
jnp
jo
jne
inc
mov
jae
mul
stos
mov
jecxz
push
mov
mov
mov
push
fnstenv
pop
jbe
aas
xchg
push
dec
icebp
add
pop
dec
mov
sbb
mov
and
dec
jo
ds
ror
std
fst
xor
mov
pop
int3
xor
pop
cld
mov
add
scas
dec
jg
push
xchg
pop
add
mov
idiv
fstp
test
mov
das
imul
adc
mov
(bad)
je
xchg
ds
sub
mov
push
mov
add
fadd
pop
mov
pusha
jle
cmp
and
and
and
push
sub
loop
mov
test
imul
jbe
cs
sti
xlat
lock
jns
xor
push
push
mov
in
adc
fidiv
mov
es
pop
pop
leave
lock
sbb
and
daa
loope
push
sbb
push
xchg
xor
inc
sbb
xor
pop
movs
rdtsc
call
add
cwde
movs
add
adc
adc
mov
cmp
(bad)
xchg
xor
in
mov
out
fsubr
inc
inc
sbb
fldenv
adc
inc
mov
int
cmp
adc
pop
(bad)
stos
ins
call
popa
les
pop
cmc
pop
sbb
mov
push
cs
and
dec
dec
data16
inc
fcom
in
push
(bad)
stos
or
add
cmp
adc
push
ret
dec
outs
ret
and
ins
arpl
adc
cdq
or
jle
mov
mov
rol
ins
xchg
add
jg
leave
sub
(bad)
push
imul
movs
popf
xor
sbb
mov
mov
jp
xchg
or
arpl
or
mov
les
xor
mov
jp
xor
not
mov
mov
or
lahf
popa
aaa
push
rcr
fstp
pop
sahf
in
push
sbb
push
jbe
cmp
arpl
xchg
fistp
and
in
or
ret
loopne
jb
push
jbe
pushf
ror
cmp
arpl
add
loopne
fwait
push
xor
(bad)
cmc
xor
or
sahf
dec
retf
pop
imul
mov
sub
dec
mov
jecxz
push
inc
pop
aaa
fdivr
pusha
pop
add
xlat
or
not
push
adc
xchg
jp
sub
jae
inc
lods
add
into
scas
icebp
cmc
adc
or
add
or
push
adc
arpl
retf
not
ins
inc
xchg
int3
xor
mov
arpl
dec
and
mov
add
repz
xor
popa
push
out
in
cs
rcr
call
fndisi(8087
pop
ins
cs
arpl
paddusb
add
pop
cmp
and
or
js
add
xchg
push
and
into
adc
xchg
and
dec
pop
in
fidivr
lahf
data16
rol
push
mov
addr16
jbe
out
pop
repnz
mov
pop
int3
or
pop
daa
and
repnz
retf
je
fbld
jne
mov
add
lods
int
add
call
jge
jecxz
add
cdq
xchg
dec
sahf
pop
inc
repnz
jns
ss
feni(8087
out
push
dec
(bad)
cmps
mov
push
outs
movs
push
in
in
pop
dec
fdiv
and
adc
dec
jecxz
scas
mov
in
and
sbb
jecxz
data16
dec
or
push
inc
call
adc
jbe
fistp
aad
ret
addr16
adc
pop
inc
out
push
mov
add
pusha
sbb
rcl
xor
and
xchg
(bad)
not
push
rol
or
pop
adc
jb
pusha
pop
or
inc
bound
and
sar
pop
sbb
popf
cmp
adc
jno
jns
into
push
retf
call
jmp
in
jae
xor
out
movs
dec
mov
(bad)
push
(bad)
cmp
jmp
aas
fs
(bad)
or
add
cmp
dec
xor
daa
jo
push
mov
les
push
pop
add
dec
pop
mov
sub
dec
jns
retf
addr16
cmc
sahf
aaa
in
inc
mov
xor
arpl
fnstsw
mov
sbb
(bad)
sbb
shr
sbb
mov
sub
inc
out
in
sbb
xor
mov
sbb
mov
inc
sti
rcr
cmp
mov
push
push
out
pop
test
xchg
iret
lods
js
and
pop
jae
mov
pushf
neg
(bad)
mov
(bad)
mov
test
mov
mov
aad
cld
xchg
gs
call
push
mov
jg
iret
or
sbb
sub
dec
ficomp
jle
sub
or
out
es
xchg
stos
xchg
out
sub
mov
shl
movs
add
int3
inc
mov
lock
sbb
pop
mov
jne
call
xchg
lds
das
pop
sbb
je
lods
adc
das
mov
sahf
adc
xchg
pusha
fbstp
inc
ficom
sub
out
adc
ins
cmp
xlat
xchg
out
cmp
xchg
sbb
test
popf
and
call
xchg
cld
jmp
or
fnstsw
arpl
and
add
call
jge
xlat
mov
scas
or
mov
xor
jo
pop
pop
xchg
sti
push
cmp
add
test
mov
adc
adc
push
cld
xor
enter
pop
cdq
cmps
sub
out
ins
repz
out
(bad)
fsubrp
xor
and
in
outs
xor
add
into
test
cld
cmp
push
inc
fistp
xchg
mov
sub
push
pop
jne
cmc
mov
pop
std
addr16
ins
push
xor
xor
sti
rol
cdq
adc
les
sub
call
push
sbb
or
popa
fadd
mov
push
movs
cmp
(bad)
mov
dec
add
fstp
and
mov
imul
std
test
repz
adc
aaa
mov
or
jae
shr
xor
idiv
push
dec
int3
stos
mov
and
xor
jmp
add
inc
dec
je
fiadd
nop
add
stc
xchg
xchg
sti
popf
enter
jno
inc
cmc
sub
ds
and
inc
xor
adc
ret
ins
imul
cli
mov
jno
adc
(bad)
push
(bad)
or
gs
cmc
adc
imul
ror
shl
cmp
rcl
inc
mov
adc
stc
cli
out
test
cmps
mov
jnp
jno
test
sti
sahf
ret
test
retf
mov
cmp
movs
(bad)
aam
cli
adc
pop
fidivr
nop
retf
lods
xchg
jp
or
(bad)
cmp
scas
retf
imul
mov
xchg
push
push
add
lock
add
sbb
cmc
cmps
out
std
or
xchg
cmp
jmp
xor
jo
and
(bad)
lds
sbb
dec
repnz
cwde
dec
idiv
xchg
dec
adc
sub
and
and
cmc
mov
js
sub
stc
mov
fstp
lds
sti
(bad)
lock
nop
sbb
dec
mov
mov
popf
fwait
push
sbb
adc
mov
stc
mov
cmp
pushf
jns
and
dec
fldenv
add
inc
mov
jmp
loop
pop
sbb
add
es
xchg
mov
sub
jmp
xchg
adc
inc
daa
push
or
push
call
or
(bad)
lods
push
test
pusha
adc
jae
in
jae
inc
inc
xchg
inc
rcl
frstor
inc
xchg
dec
mov
push
xchg
(bad)
fisttp
outs
and
and
and
test
ins
outs
jns
mov
dec
fmul
in
(bad)
xor
fistp
out
mov
jl
(bad)
xlat
add
sar
lahf
inc
sti
int3
aad
mov
jno
add
stos
jle
shl
lock
(bad)
jnp
es
sub
in
ss
popa
cmps
mov
cmp
push
dec
nop
std
lods
inc
loopne
jo
lea
mov
add
or
push
sub
in
xchg
xchg
lahf
xor
ret
adc
loop
sub
push
rcl
stos
outs
or
rol
mov
sar
xor
xchg
loopne
mov
addr16
bound
and
outs
test
out
data16
pop
fst
retf
mov
xchg
mov
adc
mov
mov
lahf
jmp
fs
xchg
jg
ins
xchg
mul
and
mov
sbb
mov
jne
movs
sar
stos
in
cmp
dec
jg
fwait
sub
aas
movs
pusha
iret
js
or
or
mov
ret
fstp
mov
call
cmp
movs
xor
mov
add
mov
imul
lahf
xchg
jp
addr16
mov
add
daa
sbb
outs
adc
sti
pop
movs
mov
and
dec
cmp
out
cdq
out
aad
cmp
ret
inc
sub
xor
sbb
cmp
fnstsw
xchg
dec
pop
cs
jmp
leave
dec
cmp
ds
sbb
leave
adc
fmulp
call
dec
mov
mov
sbb
inc
push
es
mov
mov
repnz
popa
mov
pop
outs
and
mov
pop
jno
push
dec
fld
leave
xor
ja
cdq
xchg
mov
pop
and
xchg
ss
dec
(bad)
xlat
hlt
mov
das
push
fcmovnu
pop
lahf
in
push
jge
pop
int
sbb
adc
sbb
ins
add
xchg
not
into
test
stc
sub
xor
test
es
inc
sbb
mov
aad
mov
js
jae
jmp
and
pmuludq
aam
rol
or
xor
(bad)
retf
sbb
dec
dec
aam
jbe
cdq
mov
mov
and
adc
and
xchg
inc
adc
lds
stc
mov
leave
add
sbb
mov
popa
pop
sahf
xor
shl
xchg
imul
inc
scas
cmp
imul
(bad)
aam
sbb
arpl
mov
push
retf
fisub
cmp
jno
cwde
add
add
jb
mov
mov
or
(bad)
push
mov
shl
clc
push
jae
sub
test
aam
outs
gs
dec
sbb
arpl
fsub
mov
jb
shr
outs
mov
cmp
rol
push
ret
mov
xchg
push
lods
dec
add
mov
cmps
dec
push
jmp
(bad)
out
cdq
into
rcr
mov
dec
xor
fwait
push
ror
cmp
mov
aam
scas
add
out
pushf
jmp
ins
popf
xchg
into
jge
jbe
jmp
mov
lods
push
inc
jns
jg
fst
lods
je
xor
icebp
mov
test
(bad)
push
inc
mov
dec
xchg
ret
jmp
outs
mov
imul
xor
xlat
sbb
rcl
xor
retf
call
push
neg
push
jne
cmp
adc
jno
adc
add
inc
inc
or
adc
aaa
pop
ret
sbb
fstp
sub
fsub
cdq
adc
lods
xchg
adc
test
bound
push
push
push
(bad)
out
push
cdq
retf
inc
mov
xor
ret
sbb
mov
mov
fist
lahf
int
mov
(bad)
lahf
dec
lahf
in
popa
aaa
dec
adc
pop
cli
jbe
inc
scas
jmp
pop
dec
pop
cmp
cmp
(bad)
push
fisttp
push
repnz
mov
push
jl
jge
repnz
or
xchg
das
out
sub
push
clc
pop
sbb
ficomp
inc
and
xchg
cs
push
or
loope
iret
inc
fcom
fld
mov
es
cmps
pop
pop
stc
(bad)
std
inc
nop
adc
(bad)
lock
ins
fisub
sub
mov
dec
xor
inc
ss
push
add
je
pushf
arpl
movs
add
fbstp
enter
push
jbe
pop
ins
idiv
scas
inc
sub
rol
in
jle
cmp
cdq
lods
shr
mov
test
test
daa
mov
test
pusha
inc
mov
and
cld
push
ja
(bad)
fucomip
dec
ret
lods
idiv
add
push
jae
or
stos
push
leave
adc
outs
and
pushf
sbb
retf
pop
ja
pop
rcl
je
inc
ss
fild
dec
sti
ror
imul
fild
jb
xor
(bad)
or
(bad)
enter
push
outs
leave
mov
inc
or
imul
scas
daa
or
mov
sbb
ins
fild
xchg
fstp
into
add
add
aam
lods
test
dec
xlat
and
jnp
push
jle
rcr
push
outs
scas
mov
push
sbb
test
cmp
xchg
or
(bad)
hlt
stc
fild
cld
into
adc
inc
aaa
sbb
jbe
fisttp
dec
addr16
and
setle
aam
xchg
lods
jne
jne
test
outs
lock
dec
jmp
xor
lock
hlt
and
aas
push
mov
call
lock
mov
mov
mov
sbb
jg
push
fidivr
push
inc
mov
int3
push
sub
in
mov
dec
jnp
ss
cmp
fcomi
jnp
push
sub
movs
or
lods
add
imul
add
data16
push
cmp
inc
push
out
shl
adc
lahf
jb
jge
int3
ret
test
addr16
xchg
in
call
int3
data16
popf
add
dec
or
xchg
inc
ins
mov
sbb
cwde
aaa
mov
adc
add
arpl
addr16
scas
inc
test
cmp
mov
rol
lods
and
popf
inc
jno
call
shl
ret
add
cmp
sub
(bad)
addr16
push
neg
(bad)
fadd
push
cdq
in
cmp
dec
jb
inc
das
xor
int
push
test
pusha
push
jecxz
mov
jo
sbb
mov
sbb
xchg
inc
sbb
sbb
inc
xchg
adc
pop
sub
cmp
jl
xlat
aas
pop
sar
in
test
mov
jp
jo
cdq
cmp
test
ss
or
pop
mov
push
adc
adc
(bad)
push
and
push
es
jno
or
out
ror
(bad)
pop
inc
xchg
(bad)
cdq
cmp
cmp
pop
push
(bad)
xor
inc
mov
das
jmp
retf
mov
pop
fisttp
mov
aad
aas
inc
xor
scas
cmc
jno
mov
ss
nop
adc
addr16
xchg
push
jg
cdq
shl
dec
ins
imul
ss
add
xchg
dec
je
call
sbb
sub
push
jmp
dec
mov
lds
ss
mov
pushf
loop
pop
popf
push
push
inc
js
cmp
scas
lods
retf
in
retf
add
in
lods
inc
movs
pop
mov
lahf
add
adc
fucomi
push
inc
dec
enter
dec
(bad)
push
inc
jns
cdq
adc
hlt
(bad)
lock
and
xchg
fisttp
jne
inc
fild
movs
dec
lahf
repnz
dec
pop
fcmovnb
ret
(bad)
shr
inc
(bad)
jmp
bound
pop
shr
xchg
mov
je
and
ss
cmp
int3
mov
(bad)
push
inc
or
aaa
mov
(bad)
adc
push
call
adc
pop
cmp
pop
inc
stos
add
jecxz
mov
pop
dec
cmps
std
or
inc
imul
pop
fwait
sbb
test
aad
js
push
pop
fild
fst
fwait
xchg
lea
jno
jnp
cmps
mov
rol
ret
xchg
(bad)
lahf
cli
xchg
outs
daa
sti
mov
push
les
mov
movs
pushw
ss
pop
xor
sbb
adc
push
scas
pop
push
bound
jecxz
adc
(bad)
jb
in
mov
iret
xchg
xor
xor
jmp
and
or
jmp
mov
adc
popa
cmp
or
rcl
inc
push
add
mov
lds
cmp
xchg
jmp
sbb
inc
mov
je
or
mov
test
imul
add
jmp
out
(bad)
in
stos
pop
fcom
inc
cmp
and
or
addr16
dec
xor
jb
in
pcmpgtw
jmp
sti
in
aas
ror
jmp
std
lods
psraw
sub
jmp
or
sub
outs
push
xchg
xchg
xlat
xchg
push
push
dec
pop
jge
fsubr
out
ffree
mov
cld
rcl
gs
push
or
fwait
nop
xchg
pop
push
cmp
dec
mov
into
(bad)
push
cmp
xchg
sub
popa
popf
enter
sub
cmc
or
add
ins
add
(bad)
popf
fst
dec
fidivr
mov
sahf
hlt
push
adc
aas
xor
fbld
push
imul
jnp
rcr
(bad)
out
dec
fnstenv
adc
ret
pop
imul
lock
xor
addr16
cmps
or
jge
clc
test
or
daa
cmp
imul
sub
iret
or
(bad)
(bad)
pop
mov
mov
push
or
fucomip
cmp
push
mov
mov
cmp
or
cmps
aad
jecxz
es
sbb
popf
rcl
mov
add
mov
xor
xor
scas
lahf
scas
nop
in
add
int
xchg
adc
add
ss
jge
in
push
std
add
jbe
xor
mov
popa
inc
nop
pop
dec
xchg
outs
das
fstp
sti
shl
push
test
repz
jl
push
ja
xchg
xchg
test
pop
lods
sbb
std
inc
popa
into
or
(bad)
adc
inc
xor
sbb
or
retf
in
call
or
in
pop
push
clc
mov
fnstenv
stc
in
mov
fisubr
retf
mov
cld
jnp
dec
ins
popf
xor
mov
add
dec
mov
mov
jmp
in
push
enter
das
cmp
shl
out
sub
fst
div
push
(bad)
mov
pop
adc
sbb
push
push
pop
push
xchg
in
and
arpl
not
ret
jl
sar
sbb
clc
add
jle
sub
addr16
je
inc
pop
jo
push
sbb
aas
test
int3
and
xlat
push
dec
push
xlat
pop
sub
ror
inc
or
imul
pop
sbb
add
adc
inc
mov
enter
dec
xor
pop
(bad)
repnz
push
enter
sub
cwde
xchg
and
jmp
sub
call
mov
out
xchg
xor
aam
xchg
ret
neg
sbb
sbb
or
jne
out
hlt
xchg
mov
popf
bnd
outs
xor
imul
stos
aad
jmp
jp
out
pop
jmp
imul
mov
mov
daa
adc
rol
pop
push
retf
jns
icebp
repnz
loope
gs
cmc
jbe
in
mov
ss
(bad)
push
add
inc
retf
cmp
jne
jb
mov
jmp
mov
mov
retf
xchg
movs
mov
out
call
lods
in
push
data16
jl
cmps
nop
loop
push
mov
jae
or
aam
outs
jecxz
(bad)
sti
mov
ja
cmp
sahf
icebp
dec
or
dec
and
call
outs
repnz
and
pop
jns
test
popa
es
jmp
mov
std
ja
mov
fwait
cmp
jo
test
cmp
jg
xchg
mov
fld
lods
jl
in
cmp
cmc
cwde
add
test
jb
add
cld
shr
push
out
rcr
add
jmp
pop
mov
je
daa
and
or
imul
xor
imul
jo
cmp
cmp
mov
cmp
bound
cli
xchg
xchg
shl
add
(bad)
imul
stos
sub
add
cmp
idiv
jp
sbb
outs
mov
frstpm(287
icebp
out
xor
add
jle
add
mov
push
xor
sbb
ins
movs
scas
outs
pushf
scas
inc
cmp
sbb
inc
and
jb
and
ror
mov
aam
lds
add
sbb
push
outs
call
cmp
inc
inc
mov
int3
xor
push
or
test
loope
push
aam
jno
fld
jbe
mov
lds
repnz
call
push
fmul
add
gs
scas
outs
jno
sub
and
loop
xor
dec
movs
stos
js
sbb
les
ret
in
stos
sbb
lods
sub
add
jb
scas
fnstenv
pop
push
or
mov
xchg
jecxz
arpl
pop
or
cwde
pusha
loop
cmp
pop
cmp
push
into
and
jp
push
jg
xor
dec
scas
lock
dec
sub
pop
out
mov
mov
retf
test
imul
dec
adc
rcl
cld
and
mov
pop
xchg
jl
in
dec
cli
add
shl
sub
cmp
xor
test
add
repz
outs
(bad)
ret
mov
push
sbb
test
jnp
jmp
mov
jecxz
inc
mov
or
sbb
sar
xchg
dec
mov
push
lock
inc
int3
inc
push
daa
xor
int3
int3
mov
call
ins
out
xchg
xchg
add
adc
mov
loop
cmps
arpl
aas
popf
mov
inc
sbb
sub
mov
call
pop
imul
mov
mov
xor
adc
mov
pop
stos
lock
cmp
cmp
nop
sahf
push
shl
cmp
mov
out
push
pop
mov
(bad)
bound
xchg
rol
retf
loopne
push
in
cdq
mov
add
add
or
scas
cs
jo
cmps
fadd
and
(bad)
push
test
inc
xchg
jne
or
cmp
(bad)
sbb
add
shr
call
fsubr
aas
xchg
adc
xchg
xchg
sub
mov
mov
jmp
movs
adc
xchg
sub
add
fist
dec
or
sbb
cmp
(bad)
lock
adc
cdq
out
movs
inc
xor
mov
mov
mov
sub
or
fisttp
jmp
(bad)
lds
or
jl
jge
push
cli
pop
xchg
(bad)
hlt
dec
jne
cs
nop
enter
or
call
jmp
sub
sbb
fstp
inc
call
fild
mov
mov
inc
push
movntq
out
stc
and
mov
es
dec
sub
je
fs
mov
fiadd
out
inc
inc
cmps
add
inc
push
(bad)
dec
or
push
scas
repz
addr16
cli
push
sbb
mov
cmp
or
xchg
(bad)
inc
xchg
fisttp
sti
int3
jp
clc
mov
pusha
out
scas
imul
sub
cmp
sub
data16
jecxz
cmc
jg
inc
jecxz
mov
fimul
inc
xchg
xor
add
inc
add
push
push
mov
loop
clc
repnz
jl
jae
mov
push
out
pop
loope
mov
sub
imul
dec
les
in
push
(bad)
int3
sub
shr
clc
gs
int3
adc
popf
jb
or
adc
cmp
mov
jmp
fsubr
fs
test
test
std
fwait
and
loope
lock
sub
cld
add
or
xchg
sub
sub
sbb
dec
jo
pop
clc
add
cmps
pop
add
(bad)
loopne
jns
ss
sbb
jnp
adc
xchg
xchg
(bad)
cdq
push
addr16
jl
add
or
pop
cdq
sahf
mov
js
test
lods
imul
(bad)
mov
cmp
mov
mov
data16
sub
stos
cmp
ror
adc
mov
inc
aas
clc
mov
(bad)
imul
adc
pop
fwait
xchg
mov
call
in
jmp
adc
and
mov
addr16
rcl
jb
add
jb
jge
push
movs
sar
xchg
cli
or
dec
jo
xchg
and
out
push
jb
scas
(bad)
and
sahf
sbb
jecxz
ret
stos
movs
cs
jl
or
xchg
movs
(bad)
cmc
jg
cdq
pop
repnz
mov
arpl
dec
jmp
lods
push
inc
or
shl
mov
inc
jmp
xchg
cmps
adc
loopne
sahf
push
and
test
jne
dec
rol
hlt
sub
fldcw
aaa
ds
sub
inc
push
ret
ret
pop
mov
or
in
cmp
loop
fst
loopne
mov
rcl
mov
xor
inc
ins
addr16
jb
imul
sub
inc
pop
inc
frstor
push
and
loop
lahf
rcr
je
or
aam
inc
xchg
mov
lods
or
idiv
mov
cmp
jmp
clc
stos
and
xchg
and
xor
push
les
call
popf
sub
add
adc
js
adc
ds
lods
aaa
fwait
pop
add
add
mov
into
cmps
sub
cwde
xchg
stc
js
mov
stos
arpl
in
sub
xor
pop
out
test
add
cmp
and
pop
xchg
stc
mov
xchg
push
mov
inc
jmp
fisttp
cmp
(bad)
fcmovu
retf
js
cmps
xchg
jmp
call
bound
add
jbe
(bad)
pusha
cdq
(bad)
je
jp
pop
xor
adc
pop
sbb
in
mov
cli
mov
sub
mov
pushf
xlat
push
jns
and
stc
fimul
sbb
(bad)
jp
xchg
int
xchg
push
cmp
push
test
rol
sub
std
dec
ror
(bad)
jle
xlat
cmp
into
in
imul
arpl
repnz
cdq
cmp
retf
shl
pusha
add
ret
scas
retf
push
fistp
mov
cmp
mov
stos
push
pop
mov
push
inc
lea
enter
sub
sbb
call
stos
dec
ss
cmp
and
xor
push
xor
ror
dec
and
inc
push
xchg
cmc
sub
xor
(bad)
aam
xor
out
jge
mov
mov
sbb
loope
cmps
aaa
cld
sbb
inc
out
test
push
xor
sub
stos
stos
retf
inc
test
ss
int
bound
cmp
scas
or
retf
rol
xor
xor
test
ficom
mov
xlat
xor
out
lea
jmp
out
pushf
pusha
and
leave
adc
aad
in
mov
hlt
enter
mov
or
xchg
push
jae
push
inc
mov
inc
pop
sbb
cmp
and
mov
(bad)
mov
mov
div
mov
movs
lahf
or
jp
ror
lods
mov
push
pop
aaa
cmp
es
and
mov
fwait
pop
jmp
pop
ret
inc
leave
popf
cli
cmc
dec
cmp
xchg
pop
jb
(bad)
or
inc
pop
stos
dec
mov
iret
(bad)
mov
scas
sbb
inc
add
or
xchg
mov
mov
aas
enter
inc
lds
aas
andnps
inc
xor
scas
bound
add
call
pop
not
pop
es
fidivr
sub
sbb
rcl
fs
xor
dec
mov
mov
adc
mov
aaa
nop
xchg
push
inc
icebp
cmp
cwde
xor
popf
xor
pop
xchg
fadd
or
mov
test
test
jae
bnd
outs
lds
mov
lahf
xchg
ffree
pop
addr16
pop
mov
(bad)
ss
in
xchg
nop
mul
push
push
aas
jl
(bad)
loopne
or
fidivr
out
xchg
cmps
jo
mov
test
or
push
in
adc
les
test
sti
and
sti
jge
inc
xor
and
inc
inc
inc
sub
jl
outs
sahf
frstor
pop
mov
sbb
jmp
fs
lahf
ins
mov
mov
stos
retf
sbb
shr
jmp
les
cmps
mov
into
jmp
shl
movs
mov
push
pop
nop
pop
fmul
cs
call
pop
dec
ror
fldl2t
inc
sub
bound
push
inc
mov
sbb
jne
loope
sub
jb
mov
outs
jno
dec
mov
call
cmp
jg
fld
int
std
mov
cli
sbb
dec
jne
stos
jne
lods
mov
jle
jmp
pop
(bad)
rol
xchg
sub
add
jmp
arpl
inc
sbb
(bad)
ror
xchg
lods
xchg
add
mov
jb
fcom
dec
push
cmp
mov
mov
enter
adc
stos
outs
lds
mov
add
jecxz
mov
(bad)
sub
mov
mov
sbb
dec
jge
hlt
popa
mov
cmp
mov
sbb
loope
in
or
fldcw
sbb
lea
hlt
fild
add
mov
pop
pop
fxtract
xchg
pop
pushf
jle
mov
jbe
mov
outs
in
outs
cld
in
iret
outs
dec
in
call
dec
es
add
lock
ror
sub
mov
es
fs
jb
fdivr
inc
mov
repz
ins
add
xchg
xor
imul
(bad)
mov
popa
out
movs
pop
inc
mov
mov
add
or
adc
mov
ins
dec
dec
stc
std
addr16
bound
inc
pop
or
jbe
inc
dec
pop
stos
sub
shl
js
lahf
test
sbb
scas
sti
push
xor
add
jo
(bad)
stc
retf
sub
mov
pop
mov
or
push
int3
add
enter
mov
mov
test
dec
adc
fcomp
sub
lock
xchg
dec
into
fmul
repz
mov
sub
inc
cmp
lods
hlt
xor
data16
xchg
mov
pushf
jmp
jo
or
xchg
lds
add
mov
sbb
xor
jmp
mov
or
cmc
ret
rcl
mov
jg
mov
xchg
xchg
aad
(bad)
sbb
add
pop
push
cdq
sub
daa
test
jg
enter
daa
sub
leave
and
add
adc
jmp
jno
es
js
sub
xor
mov
mov
fcomi
jmp
pop
pop
or
(bad)
loop
push
cmp
pop
or
adc
pop
pushf
out
mov
mov
jbe
cmp
shr
pop
arpl
add
mov
dec
sahf
dec
jns
xchg
enter
sub
fist
popa
mov
out
inc
cmp
or
pop
cmp
ffreep
xor
mov
mov
dec
repz
mov
adc
pop
mov
push
js
pop
push
jno
retf
jl
outs
ja
pop
add
or
xchg
and
out
push
sbb
das
in
inc
jne
inc
shl
xchg
arpl
xor
pop
mov
and
in
xchg
sbb
jb
adc
iret
mov
out
loopne
push
imul
xchg
jne
adc
and
fs
push
loop
add
aaa
into
hlt
jb
call
movs
div
cmps
mov
(bad)
adc
(bad)
cmp
sbb
push
psubusb
(bad)
call
test
(bad)
imul
or
ss
pusha
push
ret
mov
shl
test
or
or
(bad)
stos
add
add
idiv
test
dec
pop
push
or
xor
mov
mov
cmps
pop
pop
sar
arpl
dec
fcmove
jnp
scas
mov
sbb
xor
pop
fist
sub
aas
cmp
xchg
loop
dec
and
(bad)
adc
or
pop
cmc
mov
xor
call
(bad)
out
call
(bad)
jbe
push
and
js
mov
fist
gs
das
nop
push
jb
or
mov
push
inc
and
cmc
scas
add
add
out
cmp
sbb
dec
test
call
mov
cmp
push
mov
ret
or
push
bound
adc
cwde
lods
xor
mov
or
push
dec
cmp
dec
mov
out
out
int3
jnp
scas
jne
sub
xchg
fstp
pop
sbb
fst
in
adc
cmp
jmp
mov
loopne
adc
inc
in
and
test
push
aas
add
inc
jmp
adc
add
ins
div
mov
adc
fs
sub
idiv
loope
std
out
push
scas
push
aam
inc
mov
mov
adc
call
dec
cmps
ror
mov
sub
and
push
push
mov
icebp
inc
and
and
mov
add
jl
jns
jne
and
xchg
pop
add
add
scas
pop
in
inc
fcom
pop
pushf
rol
loop
dec
in
sbb
jg
jo
cmp
scas
int
aas
adc
sbb
gs
and
xor
pop
bswap
pusha
inc
jmp
or
dec
fmulp
dec
rol
ror
mov
test
mov
mov
enter
aam
addr16
mov
shl
pop
repz
ret
arpl
push
adc
cvtps2pd
adc
xchg
push
iret
popa
sub
(bad)
or
jmp
sbb
movs
cwde
dec
ja
test
cmps
pop
mov
rcr
out
xchg
sub
jb
js
jecxz
(bad)
and
aam
mov
aad
inc
xchg
repnz
fadd
sub
popa
push
sar
xlat
and
mul
popa
(bad)
punpckhbw
adc
mov
and
icebp
and
test
fadd
leave
iret
jbe
pushw
idiv
mul
xchg
pusha
adc
int3
cmp
mov
(bad)
pusha
cmp
out
mov
dec
push
pop
clc
fistp
cld
ret
shr
std
pop
jmp
push
mov
aaa
leave
xor
add
(bad)
scas
add
sbb
mov
mov
sub
stc
jg
out
not
movs
ficom
cwde
rcr
add
loopne
cmp
xor
mov
(bad)
arpl
xor
pop
cld
bound
ins
adc
inc
mov
ja
scas
ret
inc
add
pop
scas
cmp
adc
and
cli
cmp
sub
sbb
add
fwait
cwde
xchg
sahf
gs
xchg
fadd
test
add
add
mov
mov
pop
or
inc
ret
dec
loopne
mov
lea
mov
or
push
adc
inc
arpl
mov
movs
fnstsw
inc
aaa
mov
jns
out
sbb
sbb
xchg
dec
aad
add
fisubr
and
pop
dec
pop
das
pop
je
loope
push
jbe
call
jne
xor
cmp
ja
in
pop
and
xchg
rcr
pop
adc
sbb
jmp
mov
jmp
mov
mov
fdiv
repnz
or
push
jge
cld
adc
out
jle
mov
scas
mov
and
cmp
push
arpl
cmovo
arpl
scas
xor
push
cmc
sbb
xor
add
cmp
pusha
or
scas
lahf
dec
push
xchg
gs
xchg
pop
sub
fucomp
jnp
imul
daa
jg
test
cmp
js
imul
inc
adc
inc
or
pushf
add
inc
repz
jno
rcr
jbe
push
das
cmps
pop
add
mov
aam
mov
movs
mov
xchg
or
cdq
pop
je
xchg
mov
jp
push
or
sub
mov
jbe
inc
fidiv
mov
(bad)
mov
push
xchg
in
ins
retf
enter
and
sub
adc
sti
out
shr
push
lahf
or
cld
int3
adc
sub
jae
pop
xchg
xchg
retf
push
rcl
pop
or
call
mov
and
mov
xor
div
dec
sub
push
aas
or
inc
xor
cmp
mov
jns
jg
mov
xchg
pop
xor
movs
mov
and
(bad)
nop
sbb
cmp
and
pop
pop
arpl
jecxz
in
fldcw
cmp
add
sub
adc
pop
push
aas
fadd
repz
mov
aaa
inc
pop
scas
sar
push
dec
adc
ss
fs
retf
sbb
ja
mov
popf
ins
sbb
mov
pop
sbb
rcl
stc
cmp
jne
(bad)
mov
test
and
sub
sbb
xchg
pop
mov
call
js
cmp
or
mov
imul
jl
sar
popa
and
mov
add
mov
outs
rcl
stc
stos
add
aad
sti
repnz
inc
add
cmp
push
cmp
push
pop
aas
xchg
mov
call
fs
daa
or
mov
ins
call
xchg
shl
cwde
fdivr
cmps
and
les
frstor
adc
fsubr
or
(bad)
xlat
add
fadd
add
je
and
mov
arpl
jbe
lock
xlat
add
out
cmp
rol
icebp
cs
in
pushf
and
mov
pop
icebp
xor
outs
mov
test
je
mov
bound
adc
pop
rcl
stc
jno
inc
xor
repnz
xchg
mov
pop
popa
jo
xchg
aad
mov
stc
imul
sbb
call
cli
jne
xchg
and
xlat
arpl
and
mov
cmc
loopne
mov
arpl
pop
cld
pop
test
mov
(bad)
retf
or
aas
adc
das
cmp
sub
or
cli
or
cmp
or
in
pop
mov
fidiv
repz
and
sub
or
sahf
inc
adc
and
and
test
(bad)
mov
data16
popa
ret
popa
(bad)
add
ret
leave
jns
inc
jp
push
imul
aad
sub
add
pop
add
fidivr
repnz
add
pop
loope
icebp
sar
mov
cli
sahf
inc
jb
cmp
dec
loop
jmp
push
push
mov
push
mov
ja
mov
sbb
div
arpl
cmps
lods
enter
dec
enter
pusha
imul
jle
daa
fimul
dec
and
jae
add
dec
xor
popf
pop
or
js
mov
jle
push
or
ss
lods
inc
sbb
aas
jbe
sub
aam
mov
retf
xor
imul
xchg
inc
leave
fisttp
scas
lods
sub
xor
mov
aam
imul
xchg
out
adc
sub
fnsave
pushf
jg
mov
dec
xchg
addr16
stos
in
shl
push
leave
pop
(bad)
push
sub
xchg
lods
rol
jbe
cmp
frstor
pop
stos
inc
xchg
(bad)
jns
imul
rol
sub
xor
fidiv
rcr
add
dec
fadd
and
xor
jge
rcr
add
fwait
(bad)
sbb
les
fs
adc
cld
inc
iret
repz
or
pop
pop
dec
ret
mov
inc
push
sbb
sahf
fnstcw
cs
and
dec
imul
xchg
call
mov
jmp
push
xor
in
movs
daa
inc
das
mov
cmp
lea
repz
mov
pop
pop
lahf
ficomp
je
dec
or
sbb
inc
jnp
and
push
xchg
cs
mov
test
(bad)
(bad)
mov
sub
xlat
lock
jl
sub
dec
xor
jl
mov
into
cmc
xor
pop
mov
sbb
popa
sbb
jne
ss
xor
jmp
popa
retf
jbe
pop
adc
add
jmp
icebp
fs
leave
sbb
xor
inc
inc
dec
imul
nop
xchg
xor
and
movs
inc
loop
jae
dec
retf
push
sub
stc
aad
(bad)
jne
push
xor
addr16
call
mov
pop
xor
test
mov
and
stos
out
xchg
in
cs
ins
dec
cs
pusha
test
pop
push
cmp
es
mov
adc
mov
and
inc
dec
(bad)
enter
push
neg
out
mov
je
sub
xor
mov
jmp
mov
ja
or
icebp
push
cli
sub
xchg
adc
in
dec
sub
mov
push
or
lods
add
jg
sub
jecxz
sbb
mov
xlat
xchg
leave
iret
hlt
mov
pop
fist
and
sbb
cli
xchg
inc
pop
clc
aaa
and
lea
test
(bad)
or
adc
mov
fsub
mov
(bad)
movs
mov
sti
mov
movs
lock
jmp
retf
mov
out
cmc
xchg
mov
sub
mov
movs
lahf
jge
in
fwait
ret
adc
out
jo
mov
stc
pop
cmp
ret
(bad)
(bad)
(bad)
imul
cli
dec
pop
mov
sub
iret
xor
lods
mov
mov
dec
and
inc
xchg
jno
pop
(bad)
cmp
(bad)
clc
push
xor
or
test
mov
cmp
mov
xchg
fisttp
cld
popf
mov
fimul
xchg
mov
push
sub
pop
xor
or
pop
pop
dec
cmp
mov
mov
mov
aad
or
bnd
rol
clc
mov
dec
fcom
jns
push
rol
(bad)
in
(bad)
ins
das
mov
push
jbe
(bad)
cmp
and
hlt
iret
(bad)
xchg
jg
aaa
mov
dec
(bad)
mov
cmp
(bad)
idiv
mov
mov
mov
aam
in
xchg
fcmovne
(bad)
std
dec
pop
fimul
gs
lods
and
pop
pop
add
jno
or
gs
jne
imul
inc
adc
in
mov
mov
push
xchg
cmc
sbb
mov
lods
mov
leave
sub
lahf
pushf
jmp
xor
xor
sub
dec
mov
sub
mov
mov
xchg
jl
pop
jns
mov
(bad)
std
mov
inc
xchg
(bad)
cmc
xchg
call
test
mov
out
daa
ret
xchg
outs
and
fs
and
fldenv
push
mov
lea
pop
xchg
mov
xchg
(bad)
adc
sbb
xchg
call
jecxz
shl
fcomp
xchg
or
sar
outs
lock
dec
leave
fnstenv
test
pop
iret
pop
es
sahf
loope
or
inc
xor
dec
ja
push
inc
int
addr16
dec
mov
clc
sub
nop
mov
cwde
sti
popf
mov
in
shl
fidiv
in
push
leave
dec
xlat
or
loopne
mov
daa
test
mov
add
test
jne
mov
sub
cmp
adc
push
outs
push
out
pop
out
jle
enter
xchg
cmp
aaa
xor
xchg
fst
in
mov
ret
cmps
mov
loope
pop
mov
jle
repnz
pusha
jae
pop
rcl
mov
adc
xchg
xor
sbb
inc
or
adc
pop
mov
lahf
jp
loopne
mov
mov
(bad)
jmp
aad
lahf
mov
sahf
sbb
adc
ins
xor
mov
ins
stos
cmp
pop
adc
inc
mov
inc
add
cld
mov
paddusb
sahf
cmps
push
pop
xchg
pop
or
(bad)
out
test
fadd
les
cld
push
fild
lds
inc
xchg
clc
pop
dec
movs
push
daa
outs
and
ss
inc
mov
out
ins
aas
jnp
cld
xchg
jle
mov
ss
es
mov
xlat
jnp
mov
fdiv
mov
fbstp
xor
push
pop
xlat
mov
mov
je
jp
das
test
fidiv
test
cmp
sub
xchg
and
test
push
jae
ret
mov
leave
dec
ss
inc
call
sbb
push
in
test
test
and
(bad)
dec
ds
and
ds
push
jge
int3
jg
xchg
sti
enter
cmps
add
jl
daa
pop
fwait
push
in
xlat
cs
dec
ins
push
xchg
sbb
clc
cmp
popf
push
cmp
inc
add
test
adc
outs
fadd
adc
inc
sub
xchg
mov
(bad)
jmp
scas
inc
sbb
and
lods
jo
out
adc
cli
lahf
cmp
(bad)
adc
outs
repz
(bad)
sti
call
or
or
pop
inc
push
popa
in
in
ficomp
lods
and
outs
jnp
pushf
bound
push
cmps
into
push
dec
xchg
test
jmp
and
xchg
jl
add
bnd
add
or
iret
dec
mov
mov
xlat
int3
bound
push
cmp
add
int3
jmp
mov
inc
pushf
xor
ret
(bad)
dec
xor
sbb
int3
inc
stos
push
ins
push
jbe
outs
int3
push
dec
sti
dec
mov
rcl
or
addr16
jnp
pop
mov
add
xchg
xor
fldenv
neg
jmp
push
mov
xchg
out
stos
jmp
das
mov
mov
mov
cmps
jmp
loopne
and
pop
push
in
pushf
cdq
add
(bad)
cmp
ja
xor
sar
lea
(bad)
mov
int3
jb
or
mov
or
push
mov
cmp
ins
sbb
jbe
fstp
mov
mov
ds
sbb
into
mov
in
int
xor
out
xchg
sub
xor
xor
xchg
mov
mov
inc
rcl
cld
cmp
lahf
rcr
nop
cmp
call
and
inc
ja
xchg
jb
cmp
cmp
push
ja
inc
sub
jl
test
std
push
and
or
mov
add
test
and
pop
icebp
inc
adc
xchg
ret
ss
adc
mov
mov
dec
jo
xor
lods
aad
add
sbb
mov
shr
or
xchg
dec
fcom
sbb
out
dec
je
push
mov
xor
addr16
ret
or
inc
mov
and
std
pop
jge
std
aaa
jb
paddd
stos
pop
loope
and
inc
outs
mov
mov
out
dec
aad
sub
sub
xchg
je
les
call
mov
pop
xchg
xor
mov
sbb
add
mov
or
push
or
sbb
cmp
(bad)
fcom
jg
nop
xchg
mov
push
or
push
std
popf
lock
outs
mov
stos
icebp
lds
lock
adc
or
pop
pop
or
push
enter
rol
sar
loopne
jb
ins
xlat
and
mov
mov
xor
shl
and
inc
xor
arpl
jp
ins
sub
adc
jge
test
clc
xchg
stc
xlat
pop
push
mov
icebp
xchg
adc
xor
and
fdiv
jne
sub
pushf
and
or
(bad)
mov
mov
sti
test
or
push
es
jmp
stos
xchg
stos
xchg
sub
sahf
cmp
sub
inc
inc
popf
mov
cmp
push
icebp
sbb
xchg
cmc
(bad)
mov
lea
xchg
xchg
out
call
or
adc
add
int3
fs
int3
dec
jmp
inc
stc
mov
into
xchg
xchg
cmps
xchg
ins
fld
inc
ja
rol
out
pushf
test
ret
xlat
add
mov
mov
push
mov
push
fisttp
pop
ss
push
mov
sub
mov
mov
ja
xchg
push
pop
jo
and
mov
enter
mov
lea
dec
inc
mov
dec
rcl
xor
test
outs
and
dec
mov
dec
repz
fdivr
(bad)
mov
in
cli
popf
loopne
and
in
daa
mov
cmc
outs
fdivr
mov
xor
(bad)
fnstcw
stos
lock
inc
mov
mov
shl
out
xchg
in
jb
imul
and
fisttp
pop
cmp
push
sbb
cld
pop
retf
cmp
ret
ins
sahf
xchg
pop
sbb
sub
iret
push
inc
pop
jmp
mov
push
and
inc
add
xchg
xlat
ins
shl
(bad)
rcl
jle
mov
mov
push
sbb
(bad)
mov
adc
dec
mov
das
and
push
adc
adc
lods
mov
ins
in
dec
adc
pop
repnz
int
jo
inc
in
dec
or
jecxz
popa
call
sub
xchg
xchg
sub
inc
test
sub
sub
retf
sbb
xor
xor
mov
jmp
xor
je
push
xlat
push
stos
xchg
pop
movs
out
retf
adc
or
(bad)
xchg
pop
ss
lds
int3
push
adc
mov
xchg
inc
pop
mov
mov
out
add
mov
(bad)
out
test
pop
cmp
test
hlt
mov
sub
sub
addr16
icebp
sub
or
ss
mov
inc
jmp
minps
test
cli
and
xor
out
adc
scas
pop
cmp
rcl
loopne
jo
sub
test
push
pop
and
mov
in
mov
daa
mov
sbb
test
mov
sar
je
ret
add
add
popa
mov
dec
in
ins
push
in
cdq
bound
pop
out
hlt
shl
cwde
lods
pop
adc
out
cld
mov
or
xor
call
retf
xor
lock
rcr
clc
scas
(bad)
sbb
retf
sbb
dec
mov
test
pop
aas
or
push
sti
ret
push
stos
inc
cmps
inc
mov
jnp
cmps
cs
jo
mov
pop
mov
mov
cli
fld
loop
add
cmp
push
push
jmp
test
or
adc
lock
out
cmp
fabs
das
xor
xor
int
scas
(bad)
pop
mov
repz
sahf
in
mov
add
mov
jg
jb
push
aam
fbld
aaa
cmp
es
jle
repnz
pop
dec
adc
sbb
ins
call
xlat
daa
fiadd
inc
aad
mov
mov
xchg
add
retf
sub
scas
fiadd
xchg
scas
pop
pop
(bad)
inc
mov
push
out
hlt
sbb
into
dec
jno
mov
push
clc
fisttp
sub
ficomp
mov
cmps
inc
add
sbb
dec
(bad)
bound
cmp
sub
sbb
fisub
mov
lahf
mov
test
arpl
pushf
inc
sub
add
xor
xor
in
ror
jmp
and
out
jne
adc
js
shl
repnz
mov
pop
jmp
jmp
in
sar
inc
inc
adc
xchg
mov
xchg
jns
cmp
imul
stos
add
add
ins
scas
inc
icebp
push
and
inc
xor
pop
ins
jmp
pop
popa
add
shl
popa
div
sahf
movs
mov
add
inc
and
xor
loopne
xchg
mov
popa
push
pop
fld
out
into
mov
aam
fidiv
dec
(bad)
shr
fcmove
push
mov
sub
jbe
imul
jp
fiadd
xchg
pushf
loop
es
shl
out
inc
inc
pusha
mul
push
lahf
nop
mov
jnp
loop
and
push
adc
div
jnp
(bad)
lock
shl
push
inc
jge
dec
and
jo
mov
fimul
jns
add
sbb
stos
call
mov
mov
clc
pop
cmp
ja
sbb
jge
lds
cmp
shl
retf
imul
adc
loopne
and
dec
unpcklpd
and
sub
pop
sub
ins
xchg
and
add
retf
pop
lds
mov
mov
je
pop
sub
aas
and
cmc
xchg
sbb
or
pop
(bad)
adc
push
cmp
jp
aad
arpl
sub
inc
xchg
xchg
adc
adc
pop
inc
loope
(bad)
call
xor
push
aas
ds
fs
js
bnd
es
call
and
fptan
cmc
push
add
not
sbb
scas
aam
lea
pop
scas
inc
or
adc
jmp
sbb
arpl
sbb
sti
or
rcl
ss
pop
scas
dec
and
fidiv
pop
push
jge
add
adc
retf
mov
push
mov
(bad)
adc
je
mov
ror
xor
in
jbe
pop
jl
movs
jecxz
sbb
xchg
je
ja
aas
pop
cmp
aaa
and
int
add
cmp
fisttp
mov
ret
cmps
icebp
mov
shr
mov
fimul
(bad)
sbb
jae
hlt
add
dec
scas
movs
xor
daa
sbb
push
(bad)
ins
or
xor
lea
outs
inc
(bad)
(bad)
out
je
adc
sub
add
sbb
jno
jp
sahf
dec
sub
js
fisubr
fwait
cld
call
fdivr
data16
and
movs
cmp
xchg
or
jnp
mov
test
out
ret
push
push
fld
sbb
in
addr16
xchg
inc
cmp
call
stos
jo
xchg
scas
jge
mov
lods
inc
into
mov
shl
fisttp
mov
cmp
xor
dec
repz
outs
(bad)
adc
ret
test
test
adc
mov
push
jae
add
stos
jp
ja
frstor
mov
aaa
mov
xor
and
int
cmps
gs
jecxz
dec
pushf
cmp
jno
cmp
sbb
fiadd
xchg
add
add
ret
movs
cmove
or
cmp
ja
push
xor
stc
ror
xor
cmp
fisubr
xchg
retf
push
fdiv
ss
mov
loopne
push
scas
push
rcl
push
pop
cmps
(bad)
frstor
mov
jmp
mov
mov
push
lahf
retf
push
adc
dec
rcr
or
cdq
inc
dec
xchg
jecxz
(bad)
das
movs
inc
dec
lea
jo
stc
add
stc
jno
adc
in
xchg
mov
mov
(bad)
and
or
das
cs
xor
cdq
jge
imul
xchg
fs
repz
shl
popf
xchg
xor
call
sub
dec
fisub
das
movs
in
xchg
add
fiadd
call
sbb
mov
jno
mov
dec
cmp
cmp
push
pop
and
sar
hlt
push
or
add
xor
jae
hlt
mov
les
icebp
dec
mul
loopne
push
cmps
add
add
adc
stos
iret
push
dec
inc
jae
test
test
ins
xlat
pusha
int3
mov
out
iret
inc
ins
sbb
adc
fdiv
mov
fdivr
sbb
sar
and
rcl
out
mov
scas
mov
mov
cmp
jns
xchg
mov
mov
dec
dec
pop
mov
sbb
mov
paddsw
loope
sbb
std
lea
lock
push
or
push
fwait
rcr
mov
xchg
aad
out
push
(bad)
scas
or
in
inc
inc
(bad)
jns
es
outs
out
mov
jo
stos
mov
jg
outs
sbb
or
dec
lahf
hlt
sbb
jns
push
nop
pop
fdiv
cmps
mov
lock
pop
cmc
xchg
in
call
jmp
inc
lahf
push
adc
jp
test
addr16
rcr
mov
cmp
(bad)
push
pop
fcmovne
cmps
mov
push
outs
fcom
sahf
lahf
call
imul
pop
mov
cmp
push
and
imul
pop
leave
hlt
hlt
in
ins
sbb
mov
call
mov
jmp
sub
ins
jg
sub
jo
dec
(bad)
rol
mov
cmovle
aam
adc
jo
out
dec
xor
call
cmps
les
sbb
mov
xlat
fsub
jge
jge
or
jne
scas
add
out
jg
mov
shl
mov
sub
daa
push
mov
mov
xor
push
jle
jbe
cmp
lds
out
test
jb
imul
cmp
sbb
mov
sahf
pop
out
jmp
test
mov
outs
jnp
cmp
iret
pop
mov
dec
repnz
pop
repz
iret
(bad)
mov
xchg
int
fs
int
mov
mov
popa
ins
push
outs
fistp
js
pop
and
jle
loop
outs
scas
test
stos
cmp
hlt
and
push
addr16
lahf
jmp
popa
pop
add
sahf
inc
pop
or
add
movs
std
loopne
out
hlt
pushf
and
retf
dec
int3
imul
popa
fimul
or
or
out
xlat
nop
mov
dec
ret
ss
pop
cmps
lods
popf
pop
rol
pop
test
add
cdq
mov
sbb
mov
xor
ror
push
and
xchg
mov
add
push
jl
cdq
cmp
mov
adc
pusha
test
fist
push
cld
mov
fsubr
bound
mov
inc
or
push
dec
xchg
mov
or
in
push
adc
push
mov
mov
push
int
or
add
loopne
ins
aam
and
mov
int3
aas
outs
daa
xchg
(bad)
sub
lahf
or
push
push
sbb
fistp
retf
popf
mov
mov
cld
xchg
add
mov
and
pop
mov
in
xor
mov
cmp
xchg
xchg
std
or
xchg
pusha
pop
and
dec
fcomip
loopne
jmp
jbe
dec
gs
cmp
dec
aam
sub
sbb
test
dec
call
mov
jo
pushf
xchg
(bad)
pop
(bad)
or
and
fidiv
dec
jle
or
or
sub
aaa
(bad)
xlat
jecxz
sbb
stos
rcr
lahf
call
std
(bad)
stos
xor
shl
push
js
mov
sub
cli
stos
inc
or
jae
loop
das
and
clc
jb
xor
mov
dec
(bad)
test
in
rcr
jae
call
je
movs
(bad)
iret
ja
cmp
out
inc
imul
jecxz
cmp
test
idiv
sar
fstp
xchg
mov
rcl
inc
or
fdiv
xlat
rcr
push
f2xm1
push
mov
cmc
push
and
popa
bound
test
inc
fstp
jo
inc
in
or
dec
dec
cmps
repz
ja
mov
sub
aad
xor
cmp
sbb
push
ficomp
arpl
rol
inc
xchg
(bad)
mov
mov
mov
mov
(bad)
mov
shl
sbb
adc
dec
cmp
test
adc
fsubr
sbb
push
mov
jns
dec
lods
xchg
aaa
(bad)
in
sbb
xor
mov
xor
jne
jle
jp
in
sbb
js
adc
inc
into
mov
imul
fmul
push
sub
mov
rcr
jmp
aaa
cmps
dec
aam
loope
inc
retf
(bad)
or
dec
jecxz
and
push
shr
mov
jne
dec
sti
call
stos
dec
jns
adc
mov
pop
cld
scas
cli
mov
ds
clc
loop
mov
aas
add
(bad)
aas
adc
ins
gs
mov
fdiv
and
imul
jl
test
loop
push
div
and
xchg
fistp
mov
in
hlt
test
in
lea
lock
xchg
test
push
or
jmp
retf
retf
dec
test
pop
outs
add
lods
and
adc
jae
pop
sbb
xor
mov
xchg
sti
push
ins
rcl
jno
xor
leave
mov
(bad)
icebp
in
pop
xor
dec
nop
cmp
addr16
push
popf
mov
hlt
push
mov
mov
loop
sub
cdq
sub
test
lods
push
add
arpl
mov
sub
and
mov
fistp
fs
xor
jae
adc
test
leave
ret
or
add
add
adc
jecxz
pop
ret
cmc
movs
test
ds
pop
dec
cmps
gs
js
ficom
sub
in
dec
xchg
pop
data16
and
ret
aad
or
cld
les
inc
cmps
dec
stos
mov
add
lahf
clc
aaa
addr16
mov
pusha
stc
xlat
(bad)
xor
xchg
ss
mov
xor
nop
test
outs
test
mov
dec
mov
sti
inc
mov
mov
das
pop
sub
neg
pop
push
push
push
mov
cmp
mov
inc
push
call
cmovge
sbb
scas
cmp
fcomp
icebp
mov
out
fiadd
cmps
jmp
stos
cdq
jmp
push
cmps
jge
fs
mov
es
cld
popa
jg
push
sti
pop
lock
mov
mov
inc
sbb
cmc
jg
xor
aas
add
jecxz
inc
ss
sub
cld
mov
or
xor
or
into
repnz
js
fcom
bound
fadd
dec
popa
call
leave
adc
sub
loop
stos
idiv
wrmsr
test
icebp
and
adc
jmp
sahf
mov
push
adc
mov
add
xchg
xchg
mov
test
sahf
shr
xchg
jae
mov
data16
es
add
sysexit
mov
mov
and
loop
test
xor
xchg
push
aad
cmp
or
inc
call
jle
inc
movs
fs
xchg
mov
dec
jb
mov
jb
dec
jae
xor
and
add
fcomp
into
xchg
add
mov
jnp
jge
data16
into
lea
dec
retf
mov
retf
(bad)
fdivr
mov
inc
xchg
or
and
xor
mov
stos
inc
fwait
scas
sub
aas
out
fnsave
push
adc
push
mov
sbb
loop
pusha
fcomip
sub
dec
xor
jmp
or
pop
or
icebp
fimul
cmp
and
jp
pop
add
mov
xor
ret
or
inc
and
dec
fs
adc
ja
xor
or
mov
add
inc
push
jmp
push
mov
dec
mov
xchg
int
pop
xchg
cmps
mov
repnz
and
fnstcw
xchg
sbb
jo
and
dec
jb
mov
repz
sbb
leave
(bad)
mov
mov
mov
mov
jo
jl
xor
fldenv
out
outs
xchg
imul
mov
(bad)
ret
div
hlt
xchg
sub
mov
xor
or
test
or
and
jecxz
leave
mov
inc
sub
repz
pop
sub
bound
ins
call
jnp
xchg
adc
xchg
sbb
imul
add
mov
xor
(bad)
hlt
sahf
lea
push
mov
mov
mov
mov
hlt
idiv
out
cmp
sub
fnstenv
push
sub
sbb
sti
dec
test
inc
xchg
pop
mov
call
(bad)
push
popf
xor
sub
add
cdq
pushf
test
cmp
sbb
mov
mov
test
or
mov
xchg
cmp
dec
mov
iret
push
inc
sbb
scas
out
mov
push
in
inc
lahf
fstp
arpl
mov
xlat
jge
stos
aam
shr
push
not
sbb
ret
cdq
push
push
push
out
cmp
xor
mov
fisub
mov
outs
sub
mov
push
std
cld
rcr
mov
and
cmovbe
nop
mov
clc
ins
lods
or
cmc
inc
adc
xlat
ds
bound
sahf
xor
jmp
sub
adc
mov
push
icebp
dec
cmps
aas
scas
pop
pop
dec
pop
jecxz
loopne
sbb
icebp
repz
lds
out
movs
push
or
mov
inc
push
fstp
cdq
daa
leave
into
imul
push
xchg
jle
scas
jecxz
sbb
cmc
ins
call
mov
mov
push
aad
sbb
xchg
add
push
loop
lods
sub
jl
sbb
sbb
or
mov
or
jo
int3
das
cmp
jb
(bad)
int
adc
inc
loop
je
imul
mov
or
sbb
mov
push
xor
lods
aam
sbb
pop
int
xor
mov
inc
ds
jnp
push
bnd
retf
add
sbb
inc
lahf
mov
int3
out
sub
cmp
cmp
int
mov
scas
inc
rcr
mov
cmp
mov
pop
aaa
add
mov
xchg
dec
cld
dec
dec
imul
xor
adc
push
jns
fcomp
jns
repz
jmp
bt
sub
movsx
xchg
mov
(bad)
cli
fwait
stos
ds
daa
inc
(bad)
jbe
repz
add
and
sbb
retf
jmp
fstp
fdivr
mov
aad
test
clc
adc
fcmovbe
xor
add
sar
cld
xlat
jmp
(bad)
add
sub
call
adc
les
sub
mov
in
inc
cmp
cmp
xor
mov
aas
loope
fimul
mov
dec
push
inc
fsubp
scas
and
cmp
dec
js
shl
sbb
cmp
cs
fwait
aas
xchg
mov
into
inc
pop
mov
jl
inc
sbb
in
lea
sar
sbb
adc
sub
stc
mov
call
int
lods
or
mov
iret
jae
leave
sub
jmp
or
sub
inc
stos
call
mov
aas
sub
adc
loope
push
(bad)
mov
stc
test
inc
jecxz
pop
inc
ins
sbb
ja
sbb
mov
sti
aad
xor
sub
or
test
(bad)
js
and
ret
pop
inc
loop
xor
retf
sti
es
jge
adc
js
sub
fistp
stc
xchg
pop
and
outs
jge
jnp
(bad)
jbe
pop
dec
cmovb
inc
les
pop
imul
inc
sbb
or
pop
test
pop
test
mov
add
clc
lahf
sbb
adc
sbb
xchg
mov
mov
repz
mov
jns
xor
adc
sar
sbb
cdq
test
jae
cdq
test
lds
mov
ret
cwde
pop
adc
push
jecxz
rcr
shl
or
lahf
sbb
pop
ins
aas
pop
test
sti
test
cmp
inc
and
outs
mov
and
adc
fwait
mov
xchg
leave
push
add
dec
mov
in
mov
push
pop
aas
dec
pop
mov
jmp
mov
mov
aaa
(bad)
lods
ins
daa
in
lods
xchg
pop
pop
jmp
retf
sbb
dec
pop
leave
icebp
je
lock
xchg
adc
imul
jecxz
fisubr
mov
xor
lahf
xlat
xchg
or
xor
adc
aaa
xchg
popa
inc
and
mov
mov
data16
mov
pusha
xchg
arpl
repz
cmp
(bad)
call
rol
xchg
mov
mov
test
push
xchg
movs
lock
mov
fsubrp
jo
mov
out
jp
dec
cmc
mov
xchg
sbb
mov
jmp
and
add
mov
movs
jmp
sbb
mov
dec
jl
fstp
mov
ins
repz
out
add
sahf
mov
mov
pop
adc
ret
pop
jne
add
ss
jbe
mov
bound
sub
sahf
adc
mov
ror
push
xchg
dec
sbb
cmp
retf
pop
push
mov
add
shr
fld
aas
mov
mov
lahf
hlt
push
cmp
add
or
or
mov
push
add
sbb
fcmovnu
dec
pop
fild
cmps
jmpw
leave
sar
mov
ins
or
movs
bound
and
lds
(bad)
arpl
popa
xor
adc
fld
or
(bad)
mov
pop
inc
je
fs
rcr
ins
cdq
jg
jle
cmps
push
adc
pop
dec
rol
out
adc
sub
bound
xor
mov
xchg
xor
cmc
xchg
inc
lahf
shl
outs
inc
iret
cli
cdq
sbb
xor
inc
cmp
pop
mov
add
mov
je
push
cmp
fcom
cmp
pop
adc
pushw
inc
pop
popa
lock
faddp
stos
add
adc
push
call
wbinvd
or
sahf
in
push
sbb
jmp
sbb
nop
jmp
mov
mov
cmp
and
dec
icebp
out
mov
je
adc
add
adc
and
mul
fsub
pushf
test
mov
jne
jns
and
nop
dec
iret
xchg
jmp
and
out
pmulhw
icebp
(bad)
in
iret
and
adc
mov
push
jbe
out
mov
ror
fimul
or
adc
fdiv
ins
and
sahf
call
xor
jo
sub
mov
sbb
mov
cwde
mov
sahf
ror
xor
push
sub
push
sbb
pop
inc
int
jne
ja
adc
cmp
int3
call
cmp
jne
retf
arpl
out
out
xor
fidiv
aas
shr
fs
xor
mov
(bad)
fistp
pop
mov
xchg
outs
and
test
xor
mov
jg
xchg
inc
xor
sub
int
mov
push
push
das
popa
cld
in
icebp
add
sbb
jnp
sub
push
push
test
jle
aad
and
mov
xchg
mov
ffree
jge
inc
test
out
jb
shr
div
icebp
mov
mov
arpl
or
or
mov
hlt
mov
jge
add
dec
and
mov
xchg
xchg
mov
xchg
add
adc
inc
mov
lock
push
jle
sti
fcmovnb
adc
sub
sti
mov
jns
stc
call
daa
iret
xchg
int
arpl
pushf
jmp
movs
scas
loope
lock
xor
and
mov
ins
stos
mov
fisubr
cs
push
mov
icebp
out
arpl
or
cmp
push
cdq
push
sub
add
sub
fiadd
push
retf
push
dec
les
mov
dec
xchg
xchg
sbb
adc
push
xchg
and
jo
arpl
xchg
fsubr
cmp
sub
ins
mov
cld
scas
mov
sub
inc
dec
movs
aad
jmp
pop
cmps
jae
shl
rcr
ins
mov
xchg
inc
sbb
jns
mov
loope
fs
and
sub
arpl
mov
or
fsubr
xchg
arpl
or
sbb
dec
cdq
inc
xchg
stos
jmp
adc
cmp
popa
sub
hlt
mov
iret
repnz
push
fmul
popa
mov
mov
or
pop
jp
dec
retf
xchg
loope
fs
fdiv
sbb
mov
lods
hlt
(bad)
pop
clc
cmp
mov
loopne
dec
mov
add
pop
push
aas
adc
das
adc
call
out
cmp
call
ror
pop
call
or
mov
mov
in
sahf
repz
ins
std
push
pop
fcmovnu
push
div
sub
ss
bound
retf
das
test
stc
adc
fcmovb
aam
fbld
dec
data16
push
adc
inc
arpl
push
cwde
xor
inc
mov
push
fsubr
imul
mov
cmp
mov
push
repz
stc
fimul
int
out
adc
test
xchg
jne
enter
and
cdq
gs
popa
xchg
xchg
xor
xchg
pop
imul
mov
les
xchg
inc
rcr
fisubr
test
rcr
add
sub
test
xor
gs
nop
push
and
jo
xor
push
xchg
popa
sbb
sar
out
sub
leave
xor
mov
div
and
ins
push
out
push
push
cmp
fdiv
cmps
add
dec
rep
inc
jo
push
mov
xchg
dec
or
cld
cmp
(bad)
paddsw
add
loopne
sbb
mov
adc
pushf
inc
arpl
push
xor
mov
cmp
lods
push
jecxz
dec
add
iret
aad
inc
ins
inc
mov
add
ror
jge
xchg
cdq
adc
xchg
sbb
mov
jae
adc
scas
leave
shl
push
lds
push
xor
xchg
jle
xchg
jl
mov
loope
push
sbb
mov
retf
retf
cmps
pop
and
(bad)
rol
sbb
inc
daa
stc
nop
loope
aad
dec
fild
xchg
idiv
dec
in
das
dec
int3
jp
repz
out
add
dec
div
jle
or
xchg
arpl
iret
std
mov
inc
pop
xchg
dec
loope
mov
sbb
aad
loope
add
jg
pop
test
(bad)
das
(bad)
jmp
cmp
in
mov
ds
cmp
jmp
or
imul
ja
shr
cmps
jmp
dec
loopne
or
or
(bad)
in
test
fstp
push
and
pop
arpl
jg
js
or
jb
xor
or
test
pop
jno
xlat
ds
sar
js
sahf
retf
sar
xchg
jecxz
(bad)
jmp
xchg
fild
and
and
pop
inc
mov
out
and
call
push
adc
pop
pop
test
mov
fidiv
fcom
into
scas
ret
or
mov
cli
movs
add
mov
pop
pushf
dec
mov
jb
and
inc
in
mov
push
adc
push
mov
or
sbb
stc
fist
jl
stos
jl
inc
enter
mov
cmc
es
jecxz
push
jnp
sub
(bad)
jmp
push
std
(bad)
ins
movs
shl
and
inc
retf
cmovns
lea
and
cld
stos
or
jns
fwait
retf
mov
and
and
mov
dec
int3
push
das
add
jge
test
idiv
pop
cmp
outs
push
jmp
in
in
ins
ja
cmp
iret
test
addr16
sub
xchg
inc
imul
repnz
test
mov
and
pop
xchg
mov
int3
sub
mov
pop
daa
cdq
sti
push
cmps
mov
push
fisubr
mov
aad
inc
(bad)
sbb
cmps
xor
cmpxchg
fucomp
fisub
leave
popf
dec
sub
lods
inc
or
mov
mov
xlat
sahf
cmc
xchg
or
xor
push
and
add
mov
sbb
xlat
daa
xchg
pop
push
pop
cmp
sub
push
cmc
mov
dec
mov
push
inc
out
xor
push
push
enter
std
std
iret
pop
stos
cdq
add
sub
push
and
sbb
dec
pop
sahf
js
adc
xchg
into
ins
inc
leave
inc
in
add
pop
(bad)
sti
sti
hlt
fcom
sub
add
or
ficomp
(bad)
sbb
outs
scas
aad
jle
cmp
dec
cmps
push
mov
cmc
mov
add
jns
mov
out
xchg
push
daa
mov
cmp
imul
xor
mov
or
jno
aaa
inc
shr
sbb
inc
add
cmps
cmp
adc
cmp
fidiv
std
out
mov
nop
mov
icebp
pandn
loope
nop
xor
(bad)
(bad)
sub
iret
jecxz
retf
inc
test
mov
movs
add
jno
xchg
push
cmp
je
test
in
cld
adc
mov
mov
jecxz
es
aas
ja
jb
iret
xor
ss
rcr
in
cld
mov
mov
lock
cmps
out
scas
shl
mov
imul
stos
xchg
xor
(bad)
xor
xchg
inc
loop
lock
fiadd
mov
lds
inc
inc
dec
mov
lock
into
mov
ret
mov
addr16
stos
inc
sar
add
jmp
push
pop
ins
int3
adc
push
xchg
mov
adc
(bad)
pop
pop
cmp
mov
lods
xchg
movs
cmp
ret
das
push
mov
adc
es
int3
or
repz
add
fild
call
xor
push
test
ret
cmps
or
jge
sti
pop
or
(bad)
push
dec
xchg
cli
and
jge
out
out
out
inc
sub
int3
xchg
loopne
jo
adc
arpl
add
imul
pop
call
gs
call
inc
fimul
xor
pop
mov
dec
(bad)
cmp
add
bound
mov
jbe
mov
imul
push
stos
mov
leave
scas
ja
and
stos
add
fdiv
(bad)
lea
push
ins
sbb
pop
jge
sbb
icebp
int
inc
shr
ins
push
xlat
les
xor
out
inc
hlt
fadd
mov
xor
push
ret
mov
pusha
movs
push
enter
movs
mov
pop
jecxz
add
mov
pop
pop
gs
push
movs
sbb
test
pop
movs
xchg
imul
dec
xchg
lock
sahf
int
ins
ins
sbb
dec
in
cdq
leave
imul
stc
jmp
mov
cmps
and
adc
es
out
pause
jns
and
cs
fisubr
fisub
push
loopne
cmps
push
inc
sub
push
dec
xor
add
xchg
popa
xor
sbb
(bad)
(bad)
aaa
imul
fcom
dec
imul
adc
shl
push
ror
jns
lea
bound
scas
mov
push
out
dec
or
push
ins
jb
pop
inc
cmp
ins
(bad)
inc
cld
inc
mov
stc
inc
mov
inc
les
lods
inc
lahf
sbb
shr
xchg
jl
jp
in
es
daa
not
cmp
pusha
cdq
bound
loop
xlat
cmps
cwde
xor
pop
fcomp
xor
or
and
push
add
fcom
fcomp
out
(bad)
pop
sub
movs
pop
or
sbb
sbb
xchg
adc
cwde
mov
stos
pop
fcmovu
test
add
cdq
lds
pop
gs
into
pop
jmp
mov
ins
fmul
loop
pop
pop
push
cmp
push
les
fcmovnbe
mov
add
pop
push
bound
imul
imul
inc
(bad)
mov
ja
jne
cmp
repnz
in
scas
ficomp
push
ret
out
pop
lahf
fidiv
mov
out
pop
mov
mov
sub
ds
push
jo
gs
mov
jbe
adc
adc
xchg
mov
cs
pop
xchg
jecxz
mov
mov
mov
or
rcl
jl
fist
test
pop
lods
jbe
xchg
arpl
jp
cmp
add
dec
aad
mov
test
jge
out
sbb
cmp
xor
clc
sub
test
push
sub
and
sbb
fcomp
push
adc
dec
mov
les
push
icebp
mov
pop
mov
movs
inc
xchg
into
pop
dec
mov
mov
xor
bound
xchg
sub
popf
jp
jmp
inc
add
or
outs
shr
push
lods
push
call
add
inc
jmp
nop
and
fnstenv
mov
jmp
adc
leave
push
xor
(bad)
or
cmp
dec
inc
adc
ja
in
mov
push
aam
push
icebp
jno
test
mov
inc
movs
rol
bound
push
scas
fist
push
hlt
jbe
std
xchg
rcl
or
js
movs
push
pcmpgtb
cmps
inc
jmp
leave
dec
cmps
or
sahf
xchg
cmps
sbb
mov
fwait
out
(bad)
test
add
mov
fdivr
enter
in
jae
or
es
inc
pop
push
rcl
sti
scas
add
push
loopne
data16
shl
call
repz
inc
sar
inc
jmp
dec
iret
bound
dec
push
xor
in
fcomp
ja
sub
sub
jb
fdivr
test
(bad)
ins
imul
inc
sub
setae
adc
enter
mov
ds
push
xchg
mov
dec
push
jnp
(bad)
cld
dec
add
sub
inc
jg
push
mov
ret
test
aad
mov
adc
mov
jmp
sbb
xchg
sub
push
adc
adc
mov
nop
scas
push
lahf
ret
add
xor
cmp
sbb
and
out
stos
mov
test
jo
cmps
or
aam
push
arpl
iret
clc
cmps
std
fsub
mov
cmp
sub
mov
mov
or
jbe
mov
add
jp
test
xchg
hlt
pusha
sbb
xchg
mov
and
xor
(bad)
in
in
es
nop
adc
mov
xchg
xchg
mov
jno
add
jl
out
mov
mov
stos
xchg
not
or
cli
ret
jnp
ins
fnsave
push
rol
push
pusha
jmp
loop
(bad)
fs
mov
popf
aaa
jo
jns
jnp
add
cs
mov
xor
leave
nop
inc
sub
sbb
test
mov
cmp
sbb
ss
mov
mov
push
stc
lds
and
mov
sbb
(bad)
xlat
xchg
(bad)
and
cwde
xchg
add
jne
jns
jl
movs
jns
sahf
add
cmp
inc
add
ins
test
mov
ss
or
shl
mov
aad
lea
and
inc
mov
mov
mov
dec
mov
add
fstp
ja
sub
sti
push
push
mov
std
xchg
xchg
push
out
bound
idiv
in
pop
cmps
mov
xchg
outs
addr16
add
cmp
pop
push
push
sub
adc
jne
mov
cs
or
das
call
outs
push
scas
icebp
mov
cmp
mov
dec
loope
retf
mov
std
mov
lock
and
push
jb
sbb
fst
es
div
dec
jmp
add
lods
push
addr16
pop
call
imul
sub
add
fisub
je
in
and
xor
pop
sub
cmps
push
ins
mov
in
inc
je
xor
adc
add
call
outs
push
mov
mov
pushf
(bad)
fnsave
xlat
aad
xchg
cmps
jb
sub
sub
pmaddwd
loope
jne
fisttp
sbb
inc
or
bound
and
clc
or
jp
movs
jnp
inc
ja
out
in
pushf
movs
inc
cwde
fwait
ja
sub
enter
std
sbb
pop
jecxz
add
les
jb
jns
mov
fist
push
sahf
dec
fsub
and
jb
mov
enter
sub
xchg
arpl
xchg
nop
push
cwde
dec
fldcw
and
in
xchg
not
mov
jo
add
xor
inc
outs
sub
cmp
sahf
xor
jp
adc
pop
(bad)
mov
call
pop
adc
push
push
push
adc
add
js
(bad)
and
push
dec
imul
not
jnp
test
fadd
add
sub
pop
xchg
mov
(bad)
dec
ja
xchg
je
inc
jb
outs
call
sti
inc
imul
mov
stos
pop
cmp
and
loop
sbb
into
shl
xchg
adc
ja
ins
mov
repnz
cmp
mov
loopne
inc
repnz
gs
mov
xor
lock
call
sub
sbb
xchg
or
jno
hlt
(bad)
(bad)
mov
lahf
lods
dec
xor
and
jge
stos
out
cmp
into
test
inc
jp
outs
adc
cmp
cli
xchg
std
dec
jne
mov
cli
mov
sahf
test
(bad)
int3
mov
mov
adc
out
ret
mov
cli
lds
das
pop
jg
mov
xchg
sub
in
mov
cmp
xchg
in
sti
jbe
inc
fwait
add
ror
cmc
xchg
scas
sbb
clc
js
retf
mov
dec
shl
(bad)
sub
or
out
ins
cmp
(bad)
out
mov
mov
ret
in
fdivp
adc
jmp
(bad)
mov
jo
sub
inc
test
jecxz
dec
adc
cmc
shr
test
add
inc
sub
pushf
adc
aaa
xor
imul
addr16
pop
imul
jno
lea
push
(bad)
hlt
adc
mov
sbb
ins
ss
js
mov
dec
mov
or
dec
outs
or
(bad)
cdq
test
pusha
loopne
adc
jmp
mov
push
pop
xor
cdq
sbb
ss
imul
cmc
enter
cmp
jns
and
retf
jns
js
inc
into
sbb
xor
jge
aaa
and
dec
pop
data16
popf
add
cmp
sbb
nop
aaa
imul
ss
fwait
jg
mov
xlat
mov
inc
mov
fmul
push
lods
ja
adc
repnz
(bad)
mov
imul
push
inc
jg
outs
pusha
and
push
cmp
out
xor
mov
imul
cmc
out
retfw
cli
push
cmp
in
add
mov
mov
pop
in
hlt
bound
out
xchg
lock
ins
aad
cwde
inc
inc
sbb
sbb
sbb
mov
js
fucomp
xchg
push
jo
in
pop
push
pusha
cs
and
bound
stc
or
add
sub
retf
(bad)
imul
inc
test
das
sub
mov
mov
dec
inc
add
pop
jmp
ja
sub
xor
fcmovbe
lahf
stos
add
fnstcw
jns
xchg
xor
je
ins
mov
sti
in
fist
movs
inc
pop
call
aad
cmp
les
xchg
jno
frstor
dec
xchg
mov
test
dec
jecxz
loope
pop
mov
sbb
sub
je
inc
sub
pop
or
cmp
call
adc
mov
ror
stos
dec
rcr
cmps
int3
sahf
pusha
xchg
add
mov
xchg
popa
fldlg2
push
scas
icebp
(bad)
test
add
enter
and
cs
adc
adc
fidiv
loop
test
push
or
or
push
adc
or
pushf
(bad)
mov
cmp
movs
inc
mov
iret
ss
and
in
js
and
sbb
push
jb
(bad)
stc
push
out
adc
dec
fisub
and
inc
cmp
or
fsub
sti
cmc
mov
sti
mov
mov
jo
out
shl
loop
pop
or
lods
jmp
sub
mov
jge
jle
inc
ds
dec
test
dec
arpl
hlt
popf
xchg
retf
cmp
out
test
and
fadd
adc
icebp
shl
and
mov
ror
int
add
sub
call
jg
aad
shr
sub
jb
out
jae
int
add
mov
dec
mov
retf
inc
jmp
xor
(bad)
rcl
jmp
dec
mov
mov
adc
inc
and
aaa
pop
push
jmp
outs
xor
stos
mov
sbb
clc
dec
in
daa
mov
push
mov
mov
pcmpeqw
mov
gs
loopne
xor
inc
int3
in
popa
shr
mov
gs
mov
jmp
adc
push
dec
js
data16
pushf
(bad)
jmp
das
mov
dec
sub
out
popa
loope
and
jbe
out
push
aaa
enter
(bad)
sub
(bad)
dec
xlat
fnsave
jbe
pushf
push
mov
pop
dec
push
xor
mov
stos
clc
mov
xor
cmps
and
xchg
sbb
xchg
jmp
push
lock
not
pop
mov
pop
aad
fst
add
mov
test
xchg
(bad)
add
push
add
xchg
stos
lea
dec
push
or
push
inc
fmul
push
iret
xchg
xor
mov
jne
adc
adc
push
dec
sub
add
pop
mov
cmp
pop
rcr
leave
fadd
xchg
cmp
retf
enter
test
add
lods
repnz
cmp
cwde
or
add
scas
or
cwde
mov
in
jns
pop
icebp
imul
fnstenv
in
jmp
lock
xor
mov
jae
dec
jo
leave
pop
sbb
and
aad
adc
fucom
push
fcom
scas
scas
adc
lods
pop
xor
mov
jns
sbb
lods
jecxz
out
cmp
xlat
mov
inc
pop
adc
gs
jnp
add
imul
loop
ins
adc
popa
mov
ins
imul
js
ja
push
cmp
inc
or
cld
jo
ror
xor
shr
push
cmps
and
gs
jb
mov
jg
mov
call
sub
dec
pop
jmp
sub
push
sbb
ins
xlat
pop
lods
cmc
ins
add
fadd
rcr
in
sub
and
xchg
mov
gs
xor
inc
jno
sbb
loope
cmp
push
add
test
popf
cwde
push
xchg
add
push
fldenv
mov
sbb
pop
stc
and
iret
mov
or
arpl
and
cmp
sti
sti
push
dec
ret
je
xlat
adc
loop
or
add
adc
cmp
push
test
pop
shl
adc
sbb
mov
jg
inc
stos
mov
rcl
(bad)
sbb
and
test
xchg
mov
(bad)
lock
in
jl
lahf
inc
scas
pop
mov
xor
add
movs
mov
and
fild
xchg
cmp
cmp
(bad)
cmp
adc
outs
pop
mov
stos
and
retf
std
jbe
mov
icebp
or
mov
es
mov
pop
ss
aas
xchg
xchg
sar
fdiv
pop
mov
dec
ss
mov
push
add
push
adc
sub
shr
adc
sbb
fcom
mov
jl
or
cwde
(bad)
mov
push
mov
mov
(bad)
aam
pop
ret
fbstp
movs
ret
out
aas
test
sub
int
adc
sar
ins
adc
pop
shl
out
xchg
mov
(bad)
jae
stos
jmp
pop
dec
sahf
jp
leave
out
push
cs
cmps
retf
shl
mov
pop
jge
cmp
dec
scas
or
movs
xor
and
xlat
in
mov
pop
mov
jnp
ret
add
fild
pop
mov
jle
aad
mov
jo
imul
ins
or
aad
gs
int3
dec
adc
gs
fs
call
xchg
jg
cmp
aad
add
mov
(bad)
inc
sub
sahf
je
jle
(bad)
ins
mov
test
sbb
sti
push
in
je
jne
mov
pop
mov
aad
jne
retf
fidivr
repz
push
repz
inc
fld
dec
out
jo
mov
jno
test
mov
xor
push
jne
mov
(bad)
in
mov
add
(bad)
pop
inc
(bad)
pop
das
jmp
test
dec
add
jne
xchg
mov
push
mov
add
retf
add
daa
adc
mov
push
movs
cwde
xchg
pop
and
movups
dec
add
(bad)
xor
xchg
stos
mov
push
push
sub
enter
ror
aad
push
jle
out
fwait
cmp
pop
mov
mov
pop
cmp
mov
imul
sbb
leave
sub
jl
js
cmp
dec
jns
fstp
push
xchg
icebp
or
and
pusha
jo
pop
dec
cli
addps
imul
gs
push
pop
xchg
adc
xchg
pop
loop
mov
push
pop
ss
loop
in
hlt
sbb
and
jecxz
sub
add
int
cld
out
xchg
sub
cwde
dec
test
shr
out
or
pop
out
xor
lock
push
mov
xchg
jnp
cs
adc
lods
out
aaa
outs
loopne
div
and
popf
and
adc
mov
(bad)
rcl
movs
mov
enter
cmp
lds
(bad)
repnz
jg
(bad)
inc
and
inc
xchg
in
in
ja
popf
mov
fs
mov
inc
add
rcr
movs
ja
mov
inc
mov
rol
test
push
ins
jmp
lock
adc
jnp
and
cli
jecxz
or
loope
out
dec
call
ret
(bad)
jp
mov
pop
call
ins
lock
inc
out
sbb
fstp
inc
icebp
lea
nop
or
aas
xor
fbld
xor
push
fnsave
cmp
loope
or
popf
xor
stos
add
jo
sub
jp
icebp
(bad)
ins
jmp
cmps
sub
mov
push
xchg
xor
pushf
(bad)
popa
xchg
fstp
loopne
lods
loop
repz
dec
fcomp
sbb
mov
int
loope
cld
aad
cmps
fdiv
movs
xor
movs
mov
sar
pop
sbb
jbe
sub
(bad)
ja
inc
bound
hlt
cld
dec
hlt
ss
add
sub
mov
mov
jbe
pop
sbb
scas
and
and
xor
movs
inc
ret
pushf
sub
push
in
push
iret
(bad)
aas
mov
div
inc
mov
fistp
outs
sub
sub
or
cmps
push
push
cmp
inc
pop
es
rcr
mov
xor
mov
mov
mov
pusha
or
dec
imul
jl
ins
and
mov
ret
dec
sar
lods
mov
xlat
adc
arpl
out
push
test
jnp
cs
cmp
ins
mov
aas
and
cdq
sub
jg
cmps
dec
xchg
popf
out
ds
or
inc
sub
leave
xchg
out
stos
fcom
sbb
fistp
push
sbb
pusha
push
cmovno
or
daa
test
retf
or
xchg
push
sbb
jmp
pop
rcr
push
mov
data16
pop
xchg
fdiv
mov
adc
push
mov
add
enter
push
retf
inc
mov
daa
adc
xor
jmp
dec
mov
dec
push
sub
ss
js
cmp
out
fisttp
pushf
cmp
jl
je
xchg
push
leave
dec
jbe
adc
lds
hlt
das
rcr
jecxz
jbe
inc
xor
punpckhdq
lock
ins
adc
clc
mov
aad
adc
inc
push
lods
xor
mov
mov
ja
push
jne
add
pop
out
inc
adc
sub
cmps
cld
popa
dec
mov
outs
jno
mov
sbb
imul
enter
inc
mov
test
out
push
fiadd
fst
inc
cs
test
push
xchg
mov
mov
and
jmp
pop
rcr
(bad)
adc
cmp
fiadd
add
(bad)
mov
scas
nop
push
sahf
jne
stos
in
test
inc
call
ss
or
jg
and
jmp
xchg
bound
ss
dec
cs
jge
mov
sub
icebp
pop
cmp
or
adc
ins
mov
pushf
out
sub
mov
dec
fwait
retf
jo
add
out
lahf
mov
imul
(bad)
sar
retf
cmps
cmp
adc
clc
pop
and
hlt
mov
adc
jbe
and
ror
push
mov
arpl
cmp
xchg
or
sbb
outs
cwde
inc
sub
cmp
jp
jmp
scas
fisttp
cmp
sub
add
and
jmp
mov
sub
movs
cmp
sub
push
push
cmp
rol
(bad)
cmps
lahf
push
ins
test
lds
adc
ins
jle
or
ds
aas
jmp
lds
sti
shl
sbb
out
cmc
ret
repnz
pop
les
outs
inc
or
ret
fadd
(bad)
icebp
shl
out
mov
or
inc
jns
test
xchg
xchg
pusha
mov
mov
into
je
dec
inc
aaa
test
jnp
dec
and
pop
sbb
dec
mov
add
jmp
mov
or
or
add
jecxz
lea
push
and
das
xchg
test
ss
dec
sti
push
mov
loopne
test
cmp
movs
rol
mov
jp
test
test
fwait
mov
xchg
call
in
fsubr
ins
adc
movlhps
call
xchg
aaa
ss
jo
enter
shl
jg
mov
cmp
cld
xlat
mov
enter
in
(bad)
cmps
xor
fdiv
ficom
call
add
fidiv
dec
push
cli
jb
mov
test
mov
out
int3
(bad)
jmp
ficomp
movs
adc
cmp
out
out
mov
or
jg
push
stos
mov
inc
xchg
dec
loopne
pop
dec
into
out
cwde
lods
sub
xor
mov
leave
movs
dec
(bad)
jg
push
vunpcklps
cmps
dec
das
clc
mov
jo
sub
out
lea
std
push
test
adc
adc
movs
dec
dec
iret
mov
dec
dec
cmp
or
sbb
mov
mov
repnz
and
xchg
in
adc
scas
outs
and
popa
inc
(bad)
sbb
mov
fistp
mov
or
in
(bad)
fldcw
out
and
inc
arpl
pushf
loope
pop
pop
fild
sbb
mov
(bad)
out
adc
inc
add
dec
imul
mov
add
push
adc
out
xlat
cmp
xchg
mov
in
fwait
push
xor
out
sti
push
mov
jno
push
call
jg
xchg
cmp
mov
dec
pusha
mov
jp
movups
pushf
cmc
out
xor
(bad)
sub
or
aad
inc
fistp
dec
mov
cmp
ror
mov
xlat
sti
int
xchg
xchg
les
rcl
push
cmp
sub
or
and
gs
ficom
cmp
stos
cmp
call
dec
adc
retf
inc
(bad)
cld
je
(bad)
out
add
xchg
les
sub
jno
mov
cs
adc
mov
xor
xlat
xchg
sbb
push
add
mov
out
ror
test
sar
xchg
outs
ins
imul
int3
pop
outs
dec
xor
jmp
shl
adc
les
xchg
cmp
push
gs
leave
out
xchg
sub
pop
inc
push
xlat
into
inc
dec
xchg
in
fs
dec
jb
push
cmp
cmp
pop
jecxz
jbe
cld
push
leave
jnp
mov
mov
bound
xchg
and
int
fwait
dec
repnz
xchg
jbe
repz
ins
add
mov
mov
pushf
cdq
mov
loope
inc
mov
xchg
std
out
in
jecxz
int
jne
out
ror
push
mov
mov
push
and
xchg
bound
shl
mov
stos
xor
push
sahf
or
jecxz
and
cmovl
cld
movs
fadd
sbb
test
mov
lds
shr
sub
pop
gs
jnp
iret
xchg
into
xchg
in
add
lods
lds
out
repnz
mov
fneni(8087
add
setl
or
jno
jnp
adc
push
popa
xchg
mov
mov
mov
ret
or
or
xor
psubusb
xchg
daa
sub
or
and
(bad)
jo
sub
rcr
mov
mov
sbb
sub
clc
xchg
aaa
xor
pop
or
ins
sbb
je
push
jns
lock
sbb
jns
stos
pop
mov
mov
pop
aaa
xchg
cmp
aaa
or
out
and
iret
xor
and
dec
push
pop
mov
imul
adc
test
and
or
data16
popa
call
push
addr16
or
mov
or
lahf
sub
or
test
sub
pop
pop
mov
push
jl
cmp
test
or
pop
xor
xchg
(bad)
xchg
pop
add
or
int
(bad)
fucomip
sti
dec
jae
add
xlat
ins
inc
xchg
int3
stc
or
imul
cmp
jl
jae
and
ds
out
popa
out
mov
push
jbe
ret
ss
shl
repz
addr16
xlat
mov
xchg
clc
dec
fild
icebp
std
sbb
mov
pop
lods
add
mov
repnz
pop
or
push
loope
gs
mov
xor
mov
cmps
ja
mov
gs
xchg
imul
loopne
sbb
inc
xor
mov
mov
repz
xchg
out
inc
imul
(bad)
in
in
and
imul
or
cmp
lahf
ret
frstor
out
jno
rol
xor
jmp
jnp
mov
fst
sti
mov
cmp
(bad)
cmp
sub
cmp
xchg
cwde
jg
mov
jl
out
aad
cmps
push
pop
movs
inc
lods
ds
popf
repnz
adc
stos
jg
mov
shr
xor
add
jge
lock
and
adc
pop
in
inc
xlat
sbb
out
jmp
push
dec
mov
xlat
(bad)
xchg
mov
popf
mov
sti
push
mov
sub
xchg
in
lods
mov
sbb
rol
adc
retf
bound
mov
sahf
scas
mov
jge
retf
pop
repz
adc
sub
rcr
pushf
sbb
jl
dec
jno
pop
xor
shr
jge
add
jmp
out
or
popa
sub
and
int
stos
dec
loop
out
dec
jl
inc
pop
es
sbb
mov
imul
mov
lods
inc
push
mov
(bad)
push
dec
leave
jg
mov
ins
call
adc
mov
push
jns
sub
ins
xor
mov
dec
cmp
and
addr16
(bad)
push
dec
dec
aam
repz
jnp
cmp
cmp
repz
data16
aas
jno
mov
shr
loope
enter
fisubr
aam
xlat
rcr
pop
add
xchg
jge
xor
add
or
popf
fistp
jmp
enter
add
add
mov
sti
add
mov
dec
xor
cmp
xlat
add
jmp
ss
dec
sub
nop
imul
xlat
mov
dec
cmp
sbb
ret
(bad)
pushf
jae
adc
outs
push
cmp
mov
or
xor
inc
jb
or
xchg
scas
std
lds
mov
push
enter
xchg
push
xchg
xor
xor
or
fisub
gs
inc
ret
pop
clts
sub
je
sbb
pop
lods
dec
xchg
sub
cmp
in
xor
(bad)
cli
clc
jno
rol
push
in
pop
xchg
mov
mov
test
neg
ins
mov
mov
add
add
adc
or
out
inc
adc
jg
xor
xchg
add
jge
jae
dec
mov
jb
lds
bound
je
cmps
bswap
mov
dec
mov
scas
pop
xlat
or
cmp
retf
cs
pop
xchg
jmp
shl
(bad)
cli
pop
sub
movs
jp
into
ja
call
mov
pop
cmp
adc
jb
xor
pushf
dec
mov
sub
jbe
gs
or
inc
std
pop
xor
jecxz
sub
xchg
sub
retw
rcr
xchg
jmp
loope
fxch
and
(bad)
lahf
cwde
mov
ja
leave
or
movs
int
adc
jno
sub
push
xchg
mov
icebp
sbb
pop
nop
iret
fldenv
movs
in
test
aad
gs
rcl
int
nop
add
dec
pop
hlt
ss
fs
cdq
mov
test
shr
cmp
and
std
shl
mov
xor
gs
dec
xor
js
js
loop
stos
ficomp
cwde
or
add
mov
xor
sub
push
sub
sti
push
inc
or
mov
pop
mov
(bad)
adc
aas
inc
std
pop
xchg
cmc
and
test
ret
and
pop
and
pusha
dec
jle
xor
cwde
mov
and
xor
outs
xchg
int3
inc
mov
push
retf
xchg
dec
inc
xchg
mov
mov
push
imul
or
daa
jg
and
adc
inc
(bad)
adc
mov
push
jnp
jnp
xchg
adc
inc
xor
pop
pop
pop
addr16
imul
xchg
mov
test
jg
jle
cmc
icebp
repz
nop
call
popf
sbb
and
mov
inc
loopne
rcr
fst
sub
leave
fs
hlt
stc
jmp
fisub
xor
sub
stc
and
jg
jmp
pop
(bad)
sub
lahf
out
mov
dec
hlt
mov
loop
dec
adc
or
scas
outs
lock
out
call
(bad)
(bad)
adc
loopne
adc
add
xor
mov
xchg
shr
xchg
rcr
inc
cli
mov
bnd
dec
dec
mov
mov
or
or
in
adc
(bad)
cmc
cld
and
push
daa
mov
out
pusha
xor
leave
sub
mov
push
cmp
dec
fst
and
fdiv
xlat
clc
inc
ftst
jle
movs
mov
pop
jg
cmp
call
test
stos
cmps
rol
mov
sub
mov
cmc
jnp
inc
gs
dec
fidivr
sub
(bad)
stos
and
dec
jno
cmp
mov
sub
push
inc
mov
add
jbe
jp
shr
addr16
mov
push
push
in
addr16
xchg
xchg
xor
pop
mov
mov
sub
cmp
or
add
fistp
mov
inc
sub
iret
lahf
aas
popw
add
gs
les
sbb
aaa
and
(bad)
or
and
fsubr
mov
mov
and
popa
dec
rcl
cdq
add
jne
cmp
push
in
mov
aas
and
repz
test
dec
stos
jl
std
dec
ss
mov
dec
pop
lods
pop
dec
jo
add
push
int
(bad)
jnp
sar
mov
inc
cli
pop
out
lods
shl
push
sbb
inc
sbb
mov
inc
and
pop
inc
cwde
pop
sar
mov
and
sar
push
inc
push
push
or
jmp
inc
pop
inc
leave
cmp
xchg
xor
mov
sub
push
leave
adc
add
clc
fwait
xor
xor
repnz
pop
pop
out
scas
inc
mov
push
sub
fwait
xchg
div
in
out
pushf
addr16
mov
mov
scas
jae
xor
push
aam
inc
das
sti
retf
pushf
dec
pop
int
jmp
sub
xlat
mov
(bad)
xlat
or
lock
add
ja
mov
cmp
les
xor
nop
stos
add
(bad)
cmp
retf
mov
mov
int3
mov
mov
xor
aaa
cmp
sar
aas
hlt
not
mov
in
add
and
cmp
shr
add
in
mov
loop
ds
ja
push
sbb
repnz
imul
inc
shr
cmp
lahf
pop
jg
jo
imul
or
push
mov
push
xor
call
and
ds
je
in
movs
mov
test
les
fmul
aaa
dec
stos
mov
mov
jecxz
sub
jp
sub
(bad)
mov
into
in
jnp
sbb
cmps
pop
push
cmp
mov
jnp
push
stc
int
cmps
inc
cmp
dec
inc
add
loopne
add
push
outs
cmp
inc
push
(bad)
aaa
inc
xchg
fwait
(bad)
sbb
scas
retf
sar
in
fisub
cmc
and
xor
fcmovu
mov
xor
cmp
fdivr
pop
xchg
pop
ror
test
push
movs
fmul
sbb
and
into
loopne
mov
sbb
mov
shr
out
cmp
ins
ret
lods
out
aaa
(bad)
cld
stc
aas
and
push
add
jno
mov
or
stos
aas
jae
les
add
push
and
dec
pop
push
ds
stos
dec
pop
jb
mov
pop
mov
es
rcr
adc
pop
pop
rol
movs
lahf
popf
push
ja
ja
ins
cli
push
fdivrp
adc
add
xchg
fistp
cmp
add
ror
sar
push
pop
lods
sar
cmp
sub
idiv
leave
cs
or
sub
pusha
or
and
imul
mov
ss
stc
loopne
test
mov
lods
mov
retf
add
ja
jbe
or
(bad)
push
mov
pushf
jno
psrlw
jno
(bad)
or
sar
pop
add
adc
imul
daa
push
popa
cmp
mov
jnp
loope
rcr
stos
xchg
pop
fwait
dec
mov
xor
jl
int
cmp
cmp
add
int
push
mov
fld
inc
add
int3
fsubr
addr16
and
movs
adc
mov
sub
add
sub
lods
call
test
pop
jne
jb
inc
or
pop
sub
call
retf
rol
pop
and
mov
dec
es
jecxz
retf
lods
les
or
push
ins
arpl
and
ins
fwait
fs
dec
sub
dec
add
mov
out
and
xchg
in
lds
repnz
and
(bad)
mov
xor
or
clc
xor
xchg
shl
out
cli
ror
jns
xchg
inc
or
lahf
(bad)
sbb
jno
pop
jns
inc
out
out
sbb
(bad)
mov
sbb
(bad)
pop
lahf
sbb
pop
mov
cmp
xchg
jb
test
out
push
sub
cmp
mov
sbb
mov
es
jle
xor
pextrw
adc
mov
fcom
mov
cmp
push
mov
retf
hlt
scas
stc
outs
sbb
adc
xchg
stos
inc
push
test
stc
jbe
stos
fs
jne
mov
ret
xchg
scas
push
cmp
pop
sub
int
pop
out
push
mov
call
inc
push
stos
rol
daa
iret
add
xchg
xor
popf
movs
mov
shr
jecxz
(bad)
mov
sbb
fwait
sahf
mov
ins
mov
inc
dec
push
iret
data16
sahf
sbb
(bad)
into
jmp
xor
and
enter
xchg
push
or
dec
sbb
adc
in
lock
jmp
xchg
aas
mov
dec
push
shr
cmp
jb
stos
dec
mov
scas
repnz
ins
jb
mov
jl
test
dec
imul
push
add
es
sahf
sbb
mov
lahf
fcomi
cwde
rcl
mov
add
cmp
xor
fdiv
or
ss
stc
fbld
ss
fdivr
cmp
movs
jns
popa
test
xor
push
test
mov
or
or
adc
jmp
add
sbb
je
pop
adc
dec
jnp
sbb
mov
test
lods
fwait
leave
pop
xor
xor
jae
test
movs
aas
xor
mov
data16
mov
xor
xchg
jae
aaa
imul
xor
xchg
lea
inc
xor
inc
rcl
out
imul
imul
cmc
stos
pushf
ss
dec
aas
int3
dec
sub
cmp
in
adc
fidiv
jae
ins
js
into
or
outs
mov
mov
adc
mov
pushf
jnp
mov
in
jp
mov
sbb
mov
mov
call
je
pop
cmp
imul
or
xor
ret
mov
ins
stos
out
jg
pop
jmp
idiv
iret
cmp
call
add
ins
ins
dec
pop
sbb
out
pop
data16
xchg
push
xchg
adc
jno
into
adc
enter
jl
hlt
push
pop
outs
sbb
xor
dec
pop
mov
popa
in
in
push
(bad)
dec
shl
bound
cmps
popf
add
push
xor
std
(bad)
inc
mov
fs
jg
lock
ror
lods
fidivr
dec
inc
mov
mov
jb
add
push
mov
jle
adc
push
imul
sbb
imul
sahf
bound
pop
cmps
pop
ret
pop
imul
pop
push
popa
xchg
adc
mov
or
ror
enter
sbb
dec
addps
lahf
cmps
or
mov
cmp
cmp
add
loopne
dec
(bad)
shl
popa
cmp
jb
cmp
or
les
inc
outs
into
pop
sub
in
xlat
lods
pop
mov
rcl
xchg
xor
pop
xchg
cmp
(bad)
xor
retf
mov
aad
lods
push
jb
aad
sub
and
xchg
call
pop
dec
xor
adc
add
loopne
xchg
cwde
ss
mov
pop
stos
or
adc
cmp
mov
call
stos
outs
cdq
nop
in
xor
std
dec
stos
stos
mov
cmp
xchg
inc
imul
push
aaa
lea
call
test
pop
fiadd
mov
iret
cmp
xchg
cmp
cli
cmp
sbb
xchg
mov
test
jne
xor
cmps
lahf
push
push
cwde
fnsave
aaa
xchg
jle
ret
xor
adc
pop
sar
jmp
push
xor
pop
nop
rep
fs
cli
imul
out
sub
inc
add
js
mov
mov
test
and
pop
ficom
cmp
push
cmc
scas
and
arpl
(bad)
(bad)
jg
fild
lods
xchg
clc
rol
lods
in
ficomp
arpl
out
mov
mov
inc
cmp
loop
dec
ins
push
sbb
jmp
movs
jge
movs
nop
xor
pop
inc
adc
pop
pusha
lahf
(bad)
mov
je
arpl
cmp
aaa
into
cmp
or
sahf
(bad)
fcom
aam
mov
fisubr
in
les
push
daa
popa
jl
jle
and
jge
mov
iret
cld
sub
outs
arpl
pop
inc
cwde
cdq
ret
loope
sub
outs
pop
pop
fwait
iret
test
jp
test
sub
xchg
push
jb
inc
mov
jb
outs
cmps
xor
jo
add
pop
jg
imul
or
inc
xchg
out
jne
out
test
js
jmp
in
je
(bad)
pusha
adc
xor
lea
out
jmp
fidiv
cld
mov
adc
sar
dec
mov
dec
mov
inc
jo
xor
mov
xor
cld
push
cmp
sbb
gs
push
cmp
fwait
mov
jae
ret
movs
icebp
dec
push
push
popf
adc
rol
xchg
add
mov
inc
sbb
mov
ins
and
jb
push
pop
or
pushf
dec
shl
xchg
jnp
push
cmp
xchg
hlt
pop
jecxz
lods
sub
or
mov
xchg
into
and
mov
movs
(bad)
bound
mov
hlt
sub
pusha
adc
sub
fistp
xchg
ins
jg
push
xchg
mov
jecxz
test
scas
mov
ja
ja
cmc
test
pop
sti
or
fcmovb
dec
and
shl
fninit
pop
ficomp
and
pop
sbb
push
add
sbb
push
stos
xor
out
mov
cld
clc
dec
dec
push
and
and
int
push
fwait
dec
pop
mov
hlt
jecxz
jmp
adc
add
and
mul
push
xor
jge
push
mov
mov
mov
adc
dec
xchg
and
stc
mov
sbb
jbe
aaa
push
inc
jnp
pop
cmp
xor
das
cld
xor
bound
mov
and
pop
loope
bound
and
push
js
cld
push
sar
xchg
div
repnz
jb
adc
dec
push
cmp
adc
adc
or
jno
sbb
dec
ins
clc
adc
mov
scas
in
(bad)
mov
mov
out
aas
pop
dec
pop
pop
push
jmp
shl
add
xchg
jg
adc
repnz
dec
add
into
lds
fs
push
repz
fstp
rol
or
xchg
mov
sub
inc
les
add
addr16
test
xchg
xchg
push
mov
fstp
inc
xchg
call
push
fnstcw
xlat
into
jbe
mov
pop
or
jp
sbb
sbb
mov
xchg
scas
pop
push
in
icebp
adc
bound
shl
xchg
adc
xchg
adc
sbb
push
mov
ret
xchg
cmps
adc
cmp
dec
xchg
ins
and
pop
lahf
into
pop
sbb
or
cmp
retf
cmp
shr
ja
shl
xor
pop
push
jo
mov
sar
out
(bad)
lods
mov
fdivr
mov
rcl
mov
cmps
lock
push
js
in
cmps
cmp
(bad)
jnp
add
jl
dec
std
xor
fild
push
ret
xor
jb
mov
loopne
push
lds
cwde
rol
xchg
call
pop
icebp
xchg
cs
add
mov
push
shr
dec
mov
push
and
cmp
mov
xchg
rcl
aas
mov
sub
push
popa
and
stos
xor
mov
push
jne
loopne
dec
xchg
dec
add
or
cli
dec
add
sub
dec
dec
int3
add
sub
or
xchg
add
xlat
xor
jg
clc
pop
mov
and
nop
xor
add
or
xor
hlt
(bad)
into
jae
cdq
gs
mov
pop
jge
das
pop
push
push
xor
stc
xchg
ss
in
out
nop
mov
or
call
loope
xor
int3
in
mov
outs
push
test
mov
mov
adc
pusha
test
push
ficomp
jno
in
cmp
inc
test
jae
ja
je
push
les
or
pusha
inc
loopne
mov
stos
out
rol
sbb
ficom
jg
int
xchg
dec
(bad)
push
daa
sub
pushf
inc
shl
mov
and
push
mov
add
cmc
in
and
je
adc
cmps
fistp
rcl
and
push
dec
hlt
push
jmp
cld
jns
data16
push
cld
cdq
test
das
aam
push
mov
out
mov
pop
push
mov
adc
cmp
and
sub
stos
sub
ins
nop
mov
mov
outs
mov
push
sub
das
aam
jl
cmps
xchg
dec
and
jno
add
imul
call
add
adc
movs
mov
jmp
mov
jno
add
mul
fsubr
(bad)
mov
ds
push
es
or
push
popf
dec
xor
in
ja
or
shr
or
hlt
jle
loopne
jmp
cdq
or
aad
fld
lods
pusha
add
fwait
add
and
shl
mov
lods
aaa
or
mov
xchg
jmp
cwde
imul
das
js
pop
lock
pusha
cmp
xlat
add
sub
jne
movs
xchg
pop
pop
or
test
rcl
jnp
dec
push
mov
cmp
mov
mov
into
pop
call
inc
iret
mov
push
mov
imul
sub
mov
(bad)
push
cmp
mov
pusha
faddp
sbb
stc
sbb
cmp
repnz
sbb
mov
xchg
mov
push
sbb
idiv
cli
cmp
dec
mov
or
stc
(bad)
hlt
lods
dec
adc
retf
mov
mov
loop
sbb
test
mov
fild
jg
jg
and
daa
stos
jl
lods
test
pushf
ror
xor
or
jecxz
jp
add
out
test
daa
das
adc
pop
jno
jge
fild
mov
push
dec
or
addr16
dec
imul
sub
jg
mov
add
and
lahf
sub
or
lahf
sbb
push
adc
repnz
mov
pop
xchg
stos
sbb
xor
jne
(bad)
jmp
inc
lods
pop
test
test
sar
jecxz
add
out
cmp
fwait
popa
cmc
sbb
addr16
mov
cli
add
xchg
out
inc
mov
lods
cmps
fnsave
(bad)
fnsave
mov
inc
rcr
int3
push
sub
lds
inc
dec
ror
popf
shl
fwait
sub
push
fbld
jmp
movs
xchg
inc
fcom
cli
xor
(bad)
mov
jo
push
xchg
xchg
and
xor
or
pop
sbb
push
sub
jnp
aaa
gs
frstor
inc
in
inc
into
call
push
jmp
pop
and
shl
jns
hlt
call
mov
stos
add
imul
inc
daa
mov
retf
dec
ds
dec
or
in
sbb
sbb
mov
loope
sahf
adc
cmp
add
loop
cs
test
inc
sub
pop
adc
pushf
jno
(bad)
leave
push
jge
mov
lea
out
je
out
xchg
cli
mov
out
jl
shl
in
imul
push
rol
fs
sub
sti
mov
neg
push
pop
push
pop
repnz
jo
xchg
push
(bad)
daa
iret
pop
mov
fild
sub
(bad)
das
adc
inc
loope
mov
test
jae
mov
gs
mov
jl
jo
pop
(bad)
call
imul
sbb
test
test
leave
(bad)
rcr
fwait
loope
mov
mov
int3
retf
fidivr
and
mov
shl
xor
jecxz
sub
pushf
jecxz
jnp
sbb
test
je
ret
mov
ins
cwde
add
or
or
lahf
(bad)
retf
add
jne
lahf
out
jo
icebp
outs
cmps
bound
loope
int
lods
stc
pop
sti
jne
sub
or
mov
dec
jne
cmc
gs
shl
push
xchg
jp
jnp
fdivp
pop
lahf
pop
pushf
in
hlt
xchg
retf
or
xor
addr16
push
and
ss
jecxz
imul
mov
lods
cli
push
mov
push
mov
nop
sub
xchg
xchg
adc
push
(bad)
loop
sub
sub
inc
outs
or
xchg
xchg
xchg
jg
sti
cmp
ins
cdq
jns
mov
xchg
add
outs
ss
mov
cli
out
or
cmps
lock
les
out
sub
cli
test
mov
sbb
nop
push
xchg
sub
pop
or
sbb
adc
cmps
pop
xchg
xchg
dec
ret
or
inc
in
dec
pop
add
inc
cmp
cwde
pop
bound
push
xlat
mov
mov
fdivr
call
iret
jecxz
or
ret
aaa
out
jg
inc
jbe
cmp
test
ins
jne
or
inc
repnz
fidivr
push
mov
ret
mov
inc
mov
xchg
pop
and
stos
add
les
pop
clc
inc
cmps
gs
jae
sahf
cmp
mov
repz
mov
data16
push
test
and
hlt
call
xchg
or
or
push
inc
fsubr
inc
clc
aaa
in
sahf
movs
cmps
inc
icebp
mov
loopne
out
cmp
adc
pusha
sub
pop
jae
push
out
fnsave
clc
jno
pop
in
mov
mov
enter
push
adc
call
mov
je
js
in
dec
push
cmp
in
push
shl
and
mov
dec
or
test
pop
repz
push
jmp
mov
int
fcomp
rcl
pop
or
movs
mov
mov
jp
add
fidivr
push
aam
aas
call
fidiv
mov
retf
repnz
sub
test
or
popf
jge
adc
dec
lds
pop
stos
cmc
rcr
imul
fxch
inc
pop
lods
mov
mov
mov
std
movs
pop
ja
sti
sub
ja
nop
mov
and
push
sbb
sub
adc
xchg
out
call
leave
icebp
sub
cmp
scas
inc
or
inc
add
sub
aas
pop
push
mov
enter
cmp
int
into
pop
sbb
test
cmp
test
test
or
push
pushf
aad
and
sbb
popf
and
inc
popf
adc
xchg
mov
adc
or
inc
sbb
jp
ret
pop
fs
sub
push
outs
push
jbe
pop
fmul
outs
or
addr16
mov
out
in
mov
push
cmp
pop
(bad)
aad
lahf
pop
ret
inc
inc
stos
mov
es
cmps
dec
cmps
mov
popf
cmps
dec
xor
in
test
fstp
test
movs
nop
sbb
pop
xchg
fmul
and
sub
jecxz
push
out
cld
mov
mov
mov
ss
out
pop
add
fisubr
and
scas
daa
xchg
push
sbb
lods
inc
mov
mov
cwde
adc
mov
rcl
mov
lock
int3
mov
jae
mov
aaa
inc
xor
ds
fs
sub
out
mov
imul
adc
jbe
or
mov
pop
mov
stos
jb
mov
add
push
das
pushf
sub
jmp
xchg
call
jg
into
fwait
adc
sbb
loope
xchg
pop
les
jno
retf
in
and
ja
jnp
bnd
ret
fcomp
mov
sbb
hlt
jno
ja
mov
das
adc
jbe
retf
ins
stos
repz
ins
adc
in
dec
lods
add
mov
outs
fsubrp
and
mov
mov
xor
js
sub
inc
mov
ror
test
xchg
mov
jns
je
lahf
and
and
ret
sbb
or
jecxz
adc
adc
mov
arpl
fsub
cs
jne
stos
mov
and
and
push
fwait
jns
xchg
jb
dec
gs
test
xchg
rcr
mov
rcl
test
std
lds
add
or
mov
cmps
pushf
cmp
stos
lahf
ror
jae
test
fistp
xor
push
(bad)
ss
cmp
enter
push
xor
and
pop
fst
adc
hlt
or
pop
popf
imul
ret
xor
fwait
imul
lods
cmp
sub
repnz
ja
sub
into
or
inc
rep
mov
jmp
pop
les
push
ret
in
push
cmp
add
retw
lock
inc
cwde
sub
add
ins
int
add
jo
call
shl
addr16
jg
loope
sbb
mov
xor
push
adc
adc
ja
push
xor
(bad)
leave
out
fdiv
fbld
pop
arpl
pop
sub
mov
cmp
dec
jbe
enter
cmp
inc
mov
mov
adc
cmp
test
movs
cs
add
pop
out
mov
fdiv
test
fcomp
(bad)
vmovlpd
sub
daa
adc
int
(bad)
push
lods
mov
jno
adc
int
aad
xor
inc
mov
dec
fdiv
and
test
loope
xor
jns
inc
xor
push
mov
cld
inc
es
call
jo
or
xchg
pop
jns
test
xor
jle
sar
pop
lds
scas
cdq
pop
push
lahf
xchg
adc
test
xchg
rol
fidivr
(bad)
sbb
mov
adc
pop
outs
add
cmp
sub
shl
add
in
fwait
call
gs
aad
push
jecxz
stc
dec
xchg
mov
push
(bad)
jmp
iret
stos
jle
ror
mov
test
adc
jae
push
loope
cli
outs
adc
sub
test
sub
xchg
inc
dec
mov
dec
pop
dec
js
hlt
jge
jno
out
stos
pop
ss
dec
retf
lea
sbb
sub
popf
xchg
add
pop
rcl
scas
or
sub
pop
bound
fadd
sbb
add
cmp
cmc
push
mov
das
pop
shl
movs
aas
cld
pop
lods
mov
add
inc
(bad)
sbb
xchg
mov
std
jp
cmp
push
mov
scas
call
iret
enter
jo
ss
gs
adc
add
inc
addr16
int3
rol
jmp
push
stc
popf
pop
and
sbb
es
mov
sub
data16
lea
lods
sbb
in
cmp
(bad)
scas
pop
lds
into
mov
shr
(bad)
pop
fstp
ret
mov
jmp
add
retf
cmps
popf
push
cmp
mov
cwde
aaa
mov
cwde
je
cmp
mov
mov
fwait
ret
nop
mov
jmp
stos
repz
dec
stos
sub
sbb
sbb
repnz
ret
mov
aaa
add
jge
mov
(bad)
shr
cmp
mov
mov
add
jo
or
cmp
push
and
push
or
push
neg
jecxz
ror
lods
sbb
jb
cmps
jae
retf
stos
sbb
test
mov
mov
dec
sub
retf
data16
retf
stc
sbb
or
ja
lock
cmp
pop
stos
cmps
(bad)
mov
out
mov
cs
dec
adc
jl
dec
xchg
pop
scas
les
cs
iret
ficom
fld
nop
push
test
xchg
inc
movs
sbb
push
lock
fist
add
inc
push
test
popa
out
jle
xchg
repz
xor
rcr
push
mov
test
popf
mov
jl
cwde
or
int3
(bad)
and
push
cmp
mov
inc
and
fldl2t
pop
adc
mov
sub
jmp
inc
push
fsubp
jmp
lods
scas
or
test
cmp
sbb
pop
test
mov
addr16
mov
lods
dec
(bad)
repz
in
fisttp
(bad)
adc
dec
inc
push
xchg
xchg
cmp
adc
mov
jle
add
or
pop
inc
inc
cmp
and
fsubp
mov
repz
sub
mov
adc
mov
and
outs
rep
js
jmp
pop
xchg
stos
das
cmc
rsqrtps
xchg
dec
xchg
xchg
out
or
xchg
cmp
or
and
daa
pop
xlat
stos
pop
stc
dec
stos
int3
(bad)
std
(bad)
movs
jno
adc
aas
stc
daa
inc
cmc
cli
repz
test
dec
icebp
mov
cmps
mov
popa
scas
fistp
cmps
in
xchg
icebp
jne
add
mov
adc
jne
leave
or
mov
cmp
aas
pop
add
mov
movs
inc
sbb
mov
les
arpl
jbe
in
jecxz
mov
pop
retf
(bad)
cli
push
and
mov
mov
inc
mov
mov
sbb
mov
jne
mov
adc
xor
push
push
push
xlat
and
(bad)
call
and
xor
loopne
js
test
jge
xchg
dec
out
or
lods
fnstcw
mov
mov
in
ins
mov
mov
pop
cli
call
xchg
sub
mov
outs
mov
daa
sahf
imul
inc
pop
stos
xor
repnz
xchg
sub
ja
adc
mov
jmp
(bad)
fsub
push
popf
jno
mov
sub
sub
(bad)
je
mov
into
sbb
popa
pop
mov
push
mov
pop
outs
dec
inc
mov
outs
xor
sbb
into
test
cmp
dec
imul
xor
adc
mov
sbb
adc
pop
mov
rcl
jge
push
(bad)
sub
mov
xchg
and
adc
cmps
mov
dec
inc
push
dec
xchg
fldcw
movs
cmp
shl
addr16
sbb
pop
or
adc
mov
repz
ror
mov
mov
xchg
test
popa
rol
jnp
lahf
adc
or
add
imul
push
test
neg
int3
or
js
(bad)
movs
dec
ret
mov
xor
push
xchg
fdivr
push
push
mov
mov
mov
test
adc
addr16
mov
dec
mov
or
xchg
dec
sbb
xchg
mov
jns
mov
adc
popa
cs
sub
nop
repnz
pop
movs
dec
add
stc
push
mov
and
aam
icebp
jl
mov
retf
std
add
pusha
fwait
ret
pop
push
(bad)
jp
xchg
stos
sub
(bad)
mov
pop
gs
mov
mov
iret
pushf
sbb
js
out
mov
scas
test
inc
or
jp
mov
aam
push
dec
scas
aas
cmps
pop
sub
push
call
fsub
xlat
lods
sub
mov
test
xor
lods
jg
and
repnz
movs
jecxz
xchg
cmp
cwde
fisttp
mov
mov
ret
or
inc
call
xchg
int
addr16
push
jb
lods
js
jecxz
and
add
push
xchg
add
imul
mov
imul
add
ins
aas
xor
scas
xchg
jb
push
dec
mov
lods
enter
fbld
outs
bound
cli
repnz
sub
inc
imul
outs
inc
jl
jmp
pop
scas
adc
loop
movs
loope
out
pusha
test
inc
jmp
(bad)
fldcw
cmc
dec
xchg
add
stos
ins
mov
adc
mov
js
inc
sahf
adc
out
mov
popf
mov
(bad)
add
mov
fsubr
popf
lods
pusha
in
aad
gs
pop
arpl
cli
push
retf
loope
inc
enter
sbb
ret
mov
repz
leave
xor
mov
mov
push
hlt
aas
mov
mov
sahf
mov
jg
inc
(bad)
out
sub
add
lahf
and
mov
push
test
sub
or
or
push
(bad)
jecxz
cmp
mov
or
gs
mov
je
dec
pushf
xor
scas
xchg
pop
adc
sahf
fcomp
and
cmps
ficomp
nop
adc
inc
fwait
test
and
test
sub
push
(bad)
retf
pop
jp
xchg
ss
call
xlat
lock
(bad)
mov
adc
pop
jo
xchg
xor
mov
mov
outs
pushf
xor
fcmovb
jno
or
aaa
ss
cmp
scas
jne
xor
sub
fdivr
dec
bound
mov
inc
aad
addr16
(bad)
jne
aaa
xor
jno
dec
inc
sub
outs
xor
xchg
mov
or
push
shl
int3
mov
(bad)
cmp
and
call
ja
bound
mov
bound
(bad)
mov
stc
dec
fnstenv
push
sub
and
std
lock
mov
pop
mov
sbb
mov
in
mov
jno
and
cmps
push
sub
into
mov
scas
dec
mov
dec
ja
ja
mov
push
loop
pop
cmp
cmp
mov
adc
push
push
fcom
int
add
dec
xchg
fadd
mov
scas
xchg
or
loope
pusha
cmp
inc
int
push
dec
cmp
push
fwait
clc
add
inc
enter
loopne
mov
jbe
dec
pop
cmp
scas
mov
and
mov
stos
(bad)
inc
enter
iret
pop
jle
repz
pop
pop
pop
outs
adc
adc
sbb
ja
jb
mov
gs
mov
push
jb
lahf
fild
mov
nop
add
and
pop
cmp
cmp
mov
fmul
pusha
and
cmp
mov
push
add
std
sbb
iret
fcmovnb
int
jp
pop
cmp
data16
jne
dec
aam
jge
sbb
dec
add
mov
xchg
xchg
sub
xor
fdivr
add
or
push
jbe
dec
jmp
test
cmp
cmps
(bad)
jecxz
or
pop
pop
rol
popf
test
xor
adc
and
inc
cmp
cli
push
mov
and
dec
push
mov
(bad)
retf
lea
test
mov
push
scas
cmps
pop
xchg
and
shl
xchg
mov
test
in
xchg
retf
sbb
xor
aam
adc
movs
scas
jl
(bad)
adc
jo
cmp
(bad)
clc
pushf
and
jmp
call
xor
out
mov
in
inc
cmp
ret
jmp
add
nop
jbe
mov
retf
test
in
mov
push
inc
pop
mov
mov
fs
push
mov
jmp
out
test
(bad)
jno
es
pop
xchg
sub
sbb
unpcklps
out
test
xor
mov
add
inc
lea
jl
fidivr
(bad)
cld
je
pop
jl
movs
fs
mov
push
das
pop
pop
sub
add
clc
fiadd
pushf
xchg
adc
xor
retf
aam
pop
sub
dec
mov
jo
cmp
mov
inc
aad
retf
xor
inc
add
sbb
and
cmps
inc
cmp
pop
ja
stos
dec
in
dec
mov
pop
pusha
mov
inc
cmp
sbb
mov
adc
je
in
or
mov
push
cli
mov
mov
test
adc
stos
push
sbb
adc
stos
and
cwde
or
aas
lahf
cmp
lea
imul
lea
pop
into
push
add
sbb
and
xchg
xchg
mov
mov
xchg
mov
outs
bound
popa
mov
aad
hlt
outs
jmp
adc
jb
adc
jo
sar
cld
(bad)
push
fwait
sub
and
repz
in
or
retf
jmp
ret
cmp
sbb
cs
jns
movs
fisub
sub
jp
pop
addr16
js
(bad)
bound
stos
loopne
pop
pop
cmp
or
fdiv
and
cmp
xchg
rol
fistp
and
std
mov
lock
adc
xor
cmc
nop
nop
push
fnstcw
cmps
(bad)
(bad)
ror
lahf
mov
lea
adc
and
arpl
mov
(bad)
sub
mov
or
or
(bad)
push
scas
ins
imul
cmp
loopne
xlat
jns
adc
push
aaa
inc
fsub
add
in
cmc
adc
fcomp
pop
pop
(bad)
xor
outs
xor
in
add
sbb
xchg
adc
rcl
mov
add
pop
inc
call
(bad)
push
dec
lods
enter
out
pusha
jecxz
aam
je
or
inc
cmc
jae
add
mov
fwait
das
scas
sbb
lods
mov
neg
ret
movs
or
cli
lods
dec
mov
sbb
es
int
or
das
xchg
push
xor
icebp
ror
pop
and
(bad)
xchg
popa
xor
sbb
call
sbb
int3
mov
(bad)
inc
ins
adc
xor
bound
adc
dec
mov
les
add
xor
sbb
sub
jmp
sub
pop
stos
pop
or
jo
jbe
cs
ss
and
jl
mov
push
adc
jecxz
mov
add
push
mov
rcr
mov
mov
mov
mov
pop
es
lea
xchg
arpl
test
dec
sti
jae
inc
retf
xchg
fistp
push
(bad)
mov
stc
cmp
std
das
jmp
cmps
inc
fidiv
(bad)
aaa
jp
cmc
jecxz
dec
xchg
push
mov
rol
pop
fcmovb
mov
and
rcl
arpl
(bad)
dec
pop
enter
enter
push
daa
clc
iret
mov
(bad)
push
mov
cmp
add
(bad)
repnz
js
push
test
xchg
in
pusha
dec
out
sbb
fnsave
gs
sbb
daa
sub
arpl
jbe
push
mov
add
cmp
out
mov
movs
push
cmc
setae
mov
shl
jle
dec
stos
pop
popf
je
sub
std
out
mov
int
out
mov
popf
dec
cmc
cmp
cmps
cli
mov
mov
imul
jecxz
xor
icebp
fdivp
lea
or
cmp
std
icebp
xor
ja
popf
sub
movs
cmp
adc
inc
mov
(bad)
bnd
retf
jb
retf
sbb
cmp
into
scas
add
cmp
je
nop
inc
add
into
int
and
cmp
push
sub
shr
rol
repnz
movs
jge
bound
in
pop
add
push
pop
ins
add
and
push
cmp
and
(bad)
xchg
inc
nop
cmps
inc
and
cmp
add
loopne
sbb
mov
dec
movs
ins
dec
or
mov
mov
push
sub
lock
cli
mov
sub
jecxz
lds
clc
mov
or
jne
sbb
inc
mov
and
outs
movs
adc
fmul
xchg
mov
inc
cs
pop
or
push
cmps
inc
addr16
mov
cmp
jnp
lock
jmp
(bad)
mov
pop
jmp
addr16
pop
scas
push
ins
loopne
popf
pushf
ret
test
repnz
xor
imul
fidiv
arpl
xor
push
sbb
jbe
adc
aad
mov
mov
pop
mov
(bad)
xor
sub
cmp
cli
and
cmps
shr
xchg
and
dec
std
clc
xor
mov
dec
es
sti
pop
repnz
repz
cli
add
test
ds
jnp
jg
push
adc
xor
jbe
jge
shl
in
push
pop
sbb
out
mov
push
mov
mov
jnp
sbb
push
push
or
into
fsub
in
fbstp
leave
daa
stos
cmps
inc
comiss
ja
push
push
ins
nop
cld
push
out
or
pop
mov
(bad)
es
pop
jns
inc
pop
test
jo
mov
lods
push
out
xor
into
jge
ins
push
sbb
(bad)
not
mov
cmp
dec
test
adc
packsswb
xchg
pop
push
ss
jmp
xchg
pop
stos
pop
(bad)
xchg
das
mov
xchg
inc
dec
sbb
pop
sbb
sahf
xchg
mov
les
cli
add
xchg
icebp
and
inc
inc
ss
imul
pop
ins
dec
stc
push
sbb
mov
sbb
dec
push
div
mov
mov
mov
push
ja
in
xchg
pop
xor
inc
pop
hlt
jge
js
pop
adc
pop
into
xchg
out
push
cmp
jns
mov
cmc
ss
pop
mov
das
and
mov
inc
adc
adc
test
ss
cmp
xor
sbb
cmp
aam
cmc
popf
lock
inc
mov
ja
sub
in
ret
push
inc
lea
loopne
in
pusha
sti
scas
mov
movs
(bad)
sub
aam
inc
adc
pop
lock
xor
mov
or
xlat
cdq
add
sbb
xor
or
mov
outs
mov
aas
pop
push
pop
xchg
jbe
movs
dec
pop
sti
ret
lods
pop
je
in
shr
sti
push
sbb
inc
push
(bad)
cwde
xchg
pop
(bad)
mov
xor
push
es
ret
lods
mov
popa
jns
dec
pop
mov
xchg
rcr
rcr
retf
ja
xchg
jae
or
retf
imul
(bad)
in
xor
xor
es
dec
inc
js
add
mov
je
or
sbb
mov
lock
in
cmp
push
test
dec
or
inc
outs
xchg
push
pop
push
xchg
sbb
mov
xchg
aam
mov
cli
inc
mov
jp
cmp
movs
sub
retf
je
mov
aam
xlat
jge
xor
and
in
movs
movs
xchg
inc
je
pop
adc
or
adc
add
sub
popf
rcl
out
jae
cmp
rcl
stos
in
add
outs
leave
xchg
push
xchg
adc
inc
dec
dec
imul
mov
movs
cmps
(bad)
sbb
cmp
call
in
mov
xchg
jb
das
cmp
scas
dec
out
push
out
pop
rol
sbb
test
nop
pop
ss
jmp
cmps
inc
shl
(bad)
in
push
push
ss
ret
dec
mov
imul
lds
cmc
rcl
jns
push
bound
dec
mov
js
sub
aam
cmc
rcr
imul
cmovl
push
enter
sbb
in
loope
loop
lods
les
out
xor
ins
adc
xchg
data16
mov
push
push
xchg
xchg
hlt
xor
bound
movs
sbb
and
nop
pop
or
pop
cmp
and
into
loop
mov
out
mov
cs
jno
retf
xor
(bad)
in
lea
mov
fsub
retf
inc
mov
shr
mov
jge
lods
inc
retf
stos
fisttp
(bad)
push
or
ret
out
sahf
sbb
lds
push
sub
(bad)
pop
shr
jne
or
gs
into
xchg
dec
clc
shr
push
sbb
jecxz
les
xchg
mov
cmp
lds
je
pop
or
sti
pop
xchg
retf
xchg
fimul
mov
adc
mov
pop
push
fmul
sar
push
cmp
push
and
(bad)
jmp
sbb
mov
nop
js
sbb
mov
xchg
loop
int3
lods
imul
pop
xor
cmp
in
mov
fsubr
inc
out
inc
xor
imul
or
mov
push
dec
sub
adc
add
dec
les
inc
xchg
fidivr
add
pop
enter
sub
or
xchg
adc
cmp
fnstsw
cmp
add
mov
ins
pushf
jl
and
lahf
push
add
std
xchg
dec
inc
(bad)
ror
sub
mov
and
fwait
sub
into
jo
mov
mov
cmp
es
mov
cmc
lock
mov
mov
mov
dec
xor
dec
xor
xlat
mov
mov
inc
fs
push
ins
sar
mov
mov
sti
ficomp
imul
ret
movs
pop
cmp
test
xor
popa
int
sub
lock
rol
xchg
repnz
jb
jns
add
test
mov
sbb
loope
cmp
jge
sub
shl
fisttp
sahf
pop
xchg
adc
ret
jge
lds
mov
clc
cmp
fldenv
stos
loope
fwait
je
xlat
scas
cli
pusha
fist
movs
inc
in
push
jmp
add
cmp
out
lds
and
mov
inc
jns
lds
leave
sti
movs
popw
xor
pop
sahf
sub
std
shl
out
inc
adc
or
push
mov
push
imul
push
jecxz
pop
sbb
jmp
cmps
mov
add
es
add
pop
stc
and
sub
lahf
dec
lods
stos
mov
mov
in
movs
dec
dec
xchg
push
out
out
and
sub
inc
sub
mov
push
jecxz
leave
pop
out
and
ror
clc
push
imul
xor
jne
xchg
fdivrp
lahf
dec
jb
es
jb
dec
inc
dec
xor
xor
pop
dec
test
loope
scas
push
jecxz
or
(bad)
mov
adc
dec
jmp
das
mov
dec
push
ret
popf
stc
(bad)
sub
out
jb
stos
xchg
repnz
xchg
and
inc
es
or
imul
in
pop
sbb
test
mov
mov
sub
daa
aad
loopne
outs
and
pushf
(bad)
imul
pop
sbb
sti
sbb
mov
fidivr
and
jmp
xchg
add
or
cwde
sbb
push
outs
sub
adc
jbe
aaa
hlt
imul
dec
sub
enter
(bad)
or
scas
js
pop
enter
jne
mov
dec
imul
jns
out
or
loop
xor
push
pop
sub
aaa
imul
and
fiadd
and
movs
int
mov
ds
(bad)
mov
ins
cmps
xchg
lahf
retf
push
mov
mov
and
xor
jae
(bad)
(bad)
dec
loope
xchg
mov
push
xor
sub
push
xor
test
pop
call
test
jmp
sub
in
fld
imul
cmps
outs
sbb
jmp
pop
xchg
sbb
sbb
mov
clc
dec
pop
loop
test
push
sub
mov
je
and
cmp
sbb
mov
int
call
inc
cs
mov
mov
mov
outs
jno
push
ja
jle
pop
xor
outs
push
fst
fist
ins
cdq
sbb
jge
mov
xor
or
push
adc
push
nop
mov
push
and
cld
cmp
or
enter
pop
xor
sub
adc
test
loop
int
adc
lods
mov
mov
or
ds
es
xchg
jo
push
add
ror
mov
sbb
mov
push
int3
idiv
movs
jge
sbb
adc
in
jmp
pop
xchg
outs
sub
sbb
iret
or
daa
repz
gs
inc
rol
xlat
mov
ss
push
inc
in
cmps
sbb
adc
mov
aaa
sub
lahf
pusha
je
adc
addr16
into
cmc
or
dec
dec
test
add
in
daa
dec
in
popa
cmp
cmps
sbb
inc
inc
add
xchg
mov
push
mov
inc
cmp
inc
nop
movs
xchg
sti
push
(bad)
sbb
stc
adc
fimul
pop
mov
xlat
sub
fisubr
rcr
popa
jbe
and
add
out
lods
push
into
inc
push
mov
es
xlat
jmp
dec
aam
popf
out
jge
adc
pusha
cmps
lea
inc
sub
aam
jge
mov
lahf
pop
cmp
mov
lea
in
test
jbe
xchg
fwait
xchg
in
mov
inc
jmp
pop
movs
mov
mov
dec
in
mov
mov
cli
outs
xchg
data16
pushf
ret
fadd
mov
pop
ins
or
xor
(bad)
lods
lahf
gs
outs
icebp
jns
mov
(bad)
cwde
sbb
cmp
cmp
(bad)
push
jns
sbb
push
xchg
aam
mov
inc
cmps
xchg
nop
les
pop
mov
fidiv
pop
mov
xchg
(bad)
pop
lods
es
fld
ror
cmps
jmp
hlt
cmp
fidivr
jnp
dec
cmps
pop
(bad)
mov
pop
sbb
movs
mov
ds
leave
dec
sbb
in
and
mov
fild
inc
arpl
cmp
mov
aam
cmp
sar
cwde
movs
loop
in
ja
sub
aaa
pop
sub
adc
sbb
cmps
(bad)
out
add
imul
cli
push
inc
cmp
sub
or
pop
fcmovb
dec
and
inc
mov
aad
jb
xchg
xor
cmp
or
pop
push
and
sub
(bad)
jge
adc
lods
lea
(bad)
fadd
dec
sbb
mov
mov
adc
out
es
out
push
xchg
xchg
sbb
add
xchg
xor
mov
cs
pop
push
int
fcmovb
imul
cmps
push
mov
pop
pop
pop
cs
ins
sub
push
(bad)
sbb
pop
cwde
push
les
stos
push
dec
inc
jno
jmp
retf
pop
push
dec
jnp
es
mov
test
ds
lods
mov
cmp
mov
push
cwde
adc
pop
push
xchg
xchg
stos
nop
repz
retf
(bad)
and
out
fndisi(8087
xchg
popf
mov
lods
push
test
mov
retf
and
out
and
pop
jp
mov
sti
fnstcw
(bad)
jnp
mov
fnstcw
push
sub
mov
jmp
push
mov
or
add
test
mov
pop
shr
neg
ror
arpl
sub
ret
mov
scas
mov
out
xchg
mov
jno
inc
sub
in
pop
sub
in
add
inc
mov
add
fs
enter
sub
outs
dec
inc
mov
push
push
pop
sub
xchg
cmps
popa
mov
mov
jb
cwde
mov
pop
rcl
cmp
pushf
call
cmps
sbb
jae
or
in
ret
mov
cmp
sub
sahf
(bad)
jp
push
push
xchg
jnp
fsub
test
out
push
fnstcw
pusha
test
or
into
test
jg
int
ja
fs
shl
inc
push
and
leave
nop
stc
stos
js
xor
retf
fldcw
std
in
sub
mov
movs
daa
pop
test
shl
ret
sub
call
fwait
js
clc
int3
adc
mov
mov
adc
or
mov
aaa
mov
and
sub
mov
sbb
arpl
sar
inc
or
jo
sub
cmps
or
xchg
and
xchg
ins
add
ficomp
lock
lods
ret
movs
or
stos
push
sub
mov
cdq
dec
xchg
jbe
dec
(bad)
fsub
iret
cmp
mov
je
xchg
xor
scas
fsubr
sbb
push
mov
jp
mov
in
movs
outs
adc
dec
pop
cmps
mov
mov
push
hlt
popa
xor
cld
fwait
add
xor
mov
cmps
mov
mov
mov
xchg
sub
fwait
mov
popf
aam
jl
add
inc
jbe
hlt
or
mov
test
adc
cmp
mov
inc
mov
xor
sahf
sub
iret
jg
aad
mov
ret
mov
jmp
das
xchg
xchg
add
std
std
aad
cwde
or
sbb
bound
cld
add
retf
pop
xor
jns
mov
cmp
inc
retf
repz
stc
mov
sub
sbb
ret
repnz
mov
addr16
jo
ja
push
add
dec
mov
and
pop
retf
sub
push
int
mov
adc
xchg
push
xor
aaa
jns
les
icebp
js
pop
imul
mov
xchg
pop
mov
cmp
mov
sbb
call
ffree
das
mov
fucomi
imul
or
push
inc
cmp
nop
test
lea
sub
xchg
cmp
sbb
cmc
mov
xlat
cs
repz
loopne
xor
xor
cmp
test
cs
push
dec
aam
mov
ds
jl
rcl
adc
out
jne
xchg
das
push
jo
ds
sbb
mul
cld
fwait
add
imul
sbb
popa
mov
adc
mov
stos
sahf
mov
test
jp
inc
push
cmp
inc
adc
pop
cmp
in
and
cmps
add
pop
mov
mov
lahf
add
icebp
jl
fbstp
adc
and
push
pop
sti
retf
xchg
test
push
pop
out
xor
and
(bad)
aas
push
or
in
inc
and
ss
push
sbb
sbb
xchg
adc
or
push
xchg
dec
es
idiv
loope
sti
add
pop
(bad)
jnp
lea
adc
jo
stos
pushf
neg
add
xchg
movs
mov
outs
mov
pop
fst
ins
and
push
mov
pop
loop
mov
icebp
int3
push
pop
popf
jp
leave
arpl
xchg
sub
repnz
cmp
mov
fdivr
jge
retf
(bad)
jge
jns
mov
mov
inc
push
sub
fiadd
and
out
in
scas
popf
std
xchg
sahf
repz
movs
pusha
pop
mov
and
mov
and
xor
add
cmc
add
adc
dec
adc
jns
dec
call
test
xor
jmp
sar
aas
test
and
mov
scas
fcomip
pop
cwde
add
mov
xor
mov
push
pop
aad
or
out
cld
xor
xchg
loopne
out
or
out
retf
das
sub
arpl
push
test
cmp
push
sbb
imul
inc
hlt
mov
mov
dec
xchg
mov
shr
xchg
mov
inc
jge
pop
sub
add
sbb
les
xchg
ss
movs
push
shl
xor
je
add
jns
inc
stc
mov
pop
adc
mov
jno
sbb
or
push
jmp
add
mov
inc
retf
cmp
cmp
int3
fcom
cs
stc
adc
sub
adc
ficomp
test
sub
add
lods
leave
call
leave
lods
loop
push
loope
cwde
jle
inc
dec
outs
mul
jae
or
outs
mov
inc
or
jns
(bad)
push
aam
mov
sahf
lods
mov
xchg
add
inc
inc
(bad)
mov
and
lods
lods
movs
outs
cmp
xchg
or
mov
pop
sub
pop
mov
push
push
pop
loopne
in
mov
repz
jo
push
call
mov
iret
sub
das
mov
mov
add
xor
adc
(bad)
and
push
push
scas
shr
push
mov
mov
or
push
and
std
inc
bound
dec
(bad)
xchg
cmps
fs
in
xchg
(bad)
jmp
sar
movs
fldcw
in
lahf
pop
ficom
out
ret
push
adc
imul
mov
and
cmc
ja
dec
loopne
dec
sub
(bad)
dec
int3
jns
xchg
in
jbe
mov
(bad)
cmp
mov
shl
popf
mov
icebp
jns
(bad)
dec
daa
dec
popf
iret
invd
jbe
and
sub
sbb
xor
xchg
mov
jg
fwait
(bad)
cdq
add
jbe
fnstsw
retf
mov
mov
leave
push
mov
cmps
jge
aam
mov
xchg
pop
add
mov
add
je
inc
movs
mov
(bad)
jmp
cmp
add
sub
or
prefetch
fs
xchg
push
les
leave
mov
mov
adc
arpl
inc
pop
aaa
pop
jge
xor
mov
test
(bad)
(bad)
nop
add
sbb
ja
sub
test
in
pop
and
mov
daa
add
inc
jg
je
push
out
(bad)
out
cmp
clc
fild
ja
das
jb
mov
and
xchg
imul
into
xor
mov
jo
xor
aas
rol
mov
dec
add
sti
xor
hlt
push
xor
stos
inc
jge
xor
(bad)
jmp
cmp
jle
sbb
in
aas
retf
mov
lar
dec
(bad)
repz
scas
gs
adc
cmps
adc
cmp
push
jmp
int3
repz
in
or
cmp
pop
sti
test
scas
jle
jp
test
fisttp
icebp
pop
outs
xor
jge
jmp
cmp
mov
cs
imul
outs
jecxz
xchg
mov
retf
fcomp
mov
sti
shl
sub
sbb
sti
ins
push
ins
inc
dec
add
inc
mov
pop
inc
jecxz
cmc
shl
(bad)
xchg
jmp
dec
icebp
neg
cmc
cld
stc
xchg
out
and
cwde
pop
push
jmp
push
xchg
push
pop
mov
push
into
pop
dec
mov
enter
icebp
mov
adc
or
rcl
xor
sbb
in
addr16
inc
inc
fcmovnu
inc
lock
cmp
test
and
icebp
dec
cmp
push
pop
pop
pop
(bad)
mov
pop
jmp
arpl
cs
stos
js
mov
dec
in
and
cmp
pop
fcmovnb
adc
js
jne
repz
mov
repz
add
inc
jns
lods
fisttp
dec
fld
outs
inc
push
iret
dec
call
aad
pushf
call
popf
xchg
shr
xchg
dec
fisttp
(bad)
movs
(bad)
pop
in
and
xchg
pop
and
mov
add
mov
mov
ss
adc
ins
leave
scas
test
int3
(bad)
fdiv
cmp
add
repz
mov
dec
lock
mov
test
sub
or
jne
mov
shl
lock
mov
cdq
ss
enter
or
add
push
mov
js
in
lds
mov
in
pop
ret
and
cmp
push
sbb
in
int
and
mov
mov
test
nop
mov
pop
outs
inc
sbb
fcomp
inc
(bad)
add
aaa
scas
xor
(bad)
test
mov
daa
and
shl
dec
out
stos
pop
scas
rcr
cld
bound
cmp
mov
movs
adc
mov
(bad)
aad
outs
add
aam
dec
and
jmp
pop
inc
loope
cwde
xor
test
aad
dec
jecxz
push
dec
mov
mov
push
shl
retf
inc
loop
fdivrp
sub
fisubr
ret
stos
add
icebp
mov
inc
iret
xor
cmp
jae
jno
mov
nop
int3
mov
pop
out
call
jne
mov
sbb
sub
test
xchg
dec
rcl
cld
add
mov
jecxz
dec
xor
movs
mov
xchg
mov
mov
lahf
iret
out
movs
out
inc
xchg
mov
(bad)
aaa
sub
cwde
cwde
enter
jns
xchg
xchg
icebp
cmps
data16
inc
scas
pop
aaa
ja
sbb
xchg
aad
cmp
adc
cdq
mov
xor
push
push
popa
jno
les
dec
inc
jnp
js
js
pop
xor
daa
outs
ret
cmp
cs
jg
scas
fwait
sbb
test
inc
outs
popf
sbb
je
(bad)
dec
push
call
out
pop
arpl
call
xlat
fwait
dec
inc
cmp
imul
popa
jno
push
shl
in
mov
enter
sbb
mov
bound
mov
jge
lea
add
das
stos
int
dec
aad
adc
and
adc
xchg
jno
inc
sbb
push
or
imul
jle
or
mov
add
pop
imul
fs
push
jg
push
mov
stos
push
jmp
sub
jge
icebp
xlat
pop
rcl
test
adc
fldcw
retf
xchg
xchg
daa
inc
out
shl
fistp
inc
aam
call
xchg
in
cmp
add
xchg
xor
mov
or
aam
mov
xchg
retf
xor
(bad)
sbb
cld
sbb
push
adc
push
clc
dec
retf
lock
pop
xchg
sbb
sahf
js
push
aaa
lahf
jae
push
(bad)
mov
pop
push
mov
add
sbb
xchg
dec
mov
test
fldcw
push
stc
sub
sub
mov
inc
std
push
test
sub
mov
imul
adc
sbb
push
dec
mov
xor
mov
ds
ins
xchg
lea
push
xor
out
jbe
call
enter
mov
addr16
scas
scas
movs
fistp
rcl
aad
fcmovnu
std
addr16
pop
xchg
je
in
and
dec
je
jmp
fnstenv
(bad)
loop
stos
mov
xlat
xchg
dec
inc
aam
mov
or
xchg
dec
test
arpl
add
stos
cmp
dec
(bad)
cmc
test
mov
xchg
(bad)
inc
mov
(bad)
adc
dec
(bad)
retf
fst
stos
sub
(bad)
xchg
xor
mov
ret
xchg
jne
icebp
test
in
xor
cli
(bad)
aad
loope
popa
scas
and
in
jmp
sub
call
or
iret
sub
arpl
scas
(bad)
jno
mov
pop
mov
mov
adc
loopne
repnz
fistp
push
sbb
cdq
dec
sbb
in
jl
icebp
fbstp
push
fdivp
cmps
sbb
mov
idiv
cmp
int3
test
pushf
mov
adc
pop
xor
out
div
sbb
xchg
je
adc
cmp
sbb
(bad)
div
sbb
mov
jmp
pcmpeqd
sub
or
cdq
xchg
addr16
(bad)
int3
scas
jecxz
mov
dec
aas
inc
lahf
mov
pop
jno
arpl
xchg
pop
cmp
test
pop
cmc
and
fnstcw
mov
popa
pushf
inc
push
fidivr
mov
sahf
mov
aaa
les
int3
xchg
fwait
push
pop
dec
lea
push
cdq
adc
xor
sub
lods
imul
add
aas
add
inc
psrlw
retf
mov
mov
mov
xchg
repnz
(bad)
jmp
scas
mov
and
jmp
pop
fimul
inc
lock
and
xchg
in
movs
icebp
ss
push
mov
mov
cdq
je
pop
es
loope
ins
ret
xchg
sub
inc
and
in
lea
(bad)
gs
xchg
je
imul
inc
scas
cmp
outs
fwait
xchg
xchg
adc
into
ret
cdq
(bad)
adc
(bad)
cld
enter
dec
mov
jb
xor
jg
cmp
sub
pop
movs
inc
add
jge
(bad)
cli
les
arpl
stc
mov
in
ja
or
int3
in
(bad)
outs
jbe
ret
inc
mov
rcr
push
dec
mov
call
cmps
push
dec
gs
push
sahf
mov
cmp
inc
cli
(bad)
std
ret
hlt
imul
mov
add
hlt
xchg
rcr
jnp
inc
jmp
push
outs
add
dec
mov
in
std
xor
daa
xchg
call
out
test
xchg
xor
dec
adc
scas
sbb
push
jge
aas
loopne
dec
lea
in
inc
loopne
sub
xchg
es
xor
jl
cmps
sahf
dec
push
mov
jae
adc
sub
lods
jl
inc
pushf
adc
pop
push
ret
pop
adc
aas
pop
inc
ret
mov
push
cmp
mov
mov
adc
dec
out
and
sub
retf
or
dec
scas
imul
add
sbb
cwde
jne
sub
and
ficom
out
popa
enter
iret
jmp
xchg
jo
cdq
stos
(bad)
dec
jmp
cmp
jle
adc
sub
dec
push
ss
mov
mov
sub
mov
push
mov
cmp
sub
arpl
es
(bad)
mov
retf
fsub
retf
shl
scas
mov
inc
dec
movs
push
jae
aad
mov
movs
sbb
xchg
jl
jb
mov
repnz
neg
dec
xchg
dec
shr
pop
test
(bad)
out
dec
into
pop
mov
push
sub
popa
sub
jle
dec
imul
xor
xchg
shl
mov
jmp
(bad)
idiv
in
dec
mov
jnp
gs
popa
movs
in
mov
xor
ss
sbb
xchg
repz
mov
cmp
xor
adc
push
sbb
pop
jbe
out
mov
es
jle
das
pop
sbb
add
ds
pop
mov
std
rcl
jl
jmp
stos
repz
push
ins
dec
call
add
xchg
jmp
jl
dec
call
repz
rcr
pop
cmp
mov
sti
inc
(bad)
(bad)
icebp
test
aas
or
and
xchg
jmp
or
inc
pop
xchg
ret
mov
cmp
fwait
xor
push
cmovl
frstor
jg
lods
mov
es
loope
(bad)
(bad)
or
stc
ret
adc
int
pushf
retf
xchg
(bad)
jle
sbb
femms
std
retf
repz
adc
xor
adc
jg
rcl
(bad)
cmps
adc
cmps
clc
adc
jp
call
iret
(bad)
pop
call
das
jns
push
je
xchg
stos
call
jns
retw
cwde
ja
(bad)
loope
mov
popf
mov
je
adc
push
cs
or
test
inc
xchg
shl
jecxz
lea
lea
inc
lahf
mov
repz
imul
retf
jmp
mov
and
cdq
xor
ret
mov
enter
mov
movs
mov
retf
lahf
pop
add
xchg
movs
mov
cld
fs
dec
xchg
jns
mul
jbe
sub
in
fwait
jne
mov
mov
sahf
xor
inc
enter
aaa
push
inc
aas
push
(bad)
push
xlat
pushf
sub
pop
cli
outs
pop
pusha
scas
rol
aad
xchg
xchg
xchg
sub
and
daa
mov
sbb
add
int3
sar
sbb
(bad)
fs
ss
sbb
movs
cmp
inc
leave
inc
xchg
jmp
jmp
xchg
(bad)
dec
call
aad
mov
add
push
pop
mov
mov
jb
sbb
sbb
sbb
lock
inc
or
sar
retf
cwde
add
and
leave
adc
cmp
mov
inc
cmovg
loopne
mov
push
aad
xor
or
inc
les
inc
fdivr
mov
sahf
xchg
push
cmp
xor
push
je
mov
lahf
inc
mov
fadd
(bad)
dec
or
addr16
(bad)
je
ds
ret
aad
dec
add
hlt
call
dec
stc
cmp
lock
push
push
mov
ret
scas
int3
test
pop
sub
lock
jne
fnstsw
test
xor
sbb
sbb
jmp
adc
sbb
xor
fsubr
sbb
(bad)
cmp
hlt
cmp
push
push
or
int
(bad)
fisub
data16
(bad)
push
in
aad
data16
adc
daa
ret
fsub
fcom
jo
jge
mov
cdq
mov
sti
sti
ror
aam
aaa
push
fcomip
push
repz
mov
inc
scas
cmps
rcl
jb
jno
sub
push
push
sahf
neg
daa
push
mov
dec
pop
int
pop
mov
jp
pop
cdq
movs
xor
dec
ror
cld
rcr
add
and
pop
jnp
mov
shr
sub
or
cmp
movs
push
mov
push
sbb
fnstcw
in
mov
mov
sub
ret
aam
(bad)
push
xor
cmc
jl
adc
loop
retf
enter
cs
or
popf
push
sti
out
retf
dec
xchg
push
arpl
cld
out
jmp
ror
mov
push
sub
mov
out
mov
adc
sub
cmc
fidiv
pop
cmp
pop
mov
rcl
retf
xlat
pop
add
jp
dec
lods
and
movs
fcomip
out
inc
mov
sar
(bad)
pusha
push
loop
test
pop
retf
out
fmul
repnz
bound
xchg
imul
loopne
mov
mov
mov
cli
sub
adc
xchg
dec
mov
je
retf
pushf
jmp
out
push
sbb
pop
adc
jnp
data16
popf
ja
dec
stc
js
or
repz
sbb
adc
popf
sub
dec
jg
sbb
jecxz
mov
push
dec
cmp
adc
mov
inc
fmul
sbb
or
and
dec
mov
fwait
rcl
push
fistp
xor
xor
test
xor
fisubr
stos
add
jg
pop
dec
test
in
mov
cmps
mov
xchg
xchg
and
sub
push
jp
jne
mov
addr16
imul
jno
adc
mov
int
push
rcr
fmul
jcxz
lods
call
xlat
shr
mov
inc
or
lahf
xor
inc
xchg
fild
sbb
jno
fdiv
mov
mov
loopne
aam
int3
adc
sub
mov
mov
lods
inc
and
push
dec
cdq
leave
jmp
xor
stos
int3
test
mov
inc
inc
or
mov
cmp
add
sti
stos
sub
adc
addr16
cwde
add
loope
mov
out
inc
xor
out
mov
sub
jl
cmc
cmp
sub
data16
repz
xchg
mov
mov
jmp
movs
xor
loop
in
xchg
jmp
es
sub
fcmovnb
sub
test
mov
push
loope
xor
mov
push
add
or
out
mov
inc
mov
dec
iret
sub
and
jmp
jmp
aaa
pop
inc
xchg
std
xchg
icebp
fadd
adc
sysenter
mov
mov
mov
dec
adc
mov
shr
fistp
xchg
pop
arpl
and
lahf
test
popa
pop
and
jae
fcomp
push
and
mov
xor
sbb
jae
pop
cs
inc
jp
mov
outs
jg
cs
js
jge
(bad)
mov
pop
push
mov
mov
fs
(bad)
push
cld
lods
fsub
shr
out
adc
popa
push
jg
and
sbb
adc
xor
retf
repnz
mov
pop
loope
or
pop
jne
and
test
pop
cld
cmp
xchg
inc
push
push
sub
loopne
xchg
xchg
push
outs
ins
mov
add
cmc
inc
out
fwait
inc
cmp
inc
scas
add
inc
inc
imul
scas
mov
sahf
jb
imul
scas
dec
cmp
mov
mov
lods
neg
leave
pop
xchg
cld
clc
cld
fwait
cli
pop
mov
inc
fcomp
mov
in
inc
sub
or
xor
or
int3
sbb
pop
fimul
sti
addr16
fiadd
stos
jne
push
nop
xchg
xchg
hlt
sbb
push
ins
(bad)
mov
ds
adc
adc
jb
lea
jno
movs
mov
mov
(bad)
cmp
(bad)
cs
popf
nop
xchg
sub
outs
daa
int3
repz
cmp
fistp
cmp
pop
mov
rol
xchg
mov
pop
cmp
and
imul
mov
test
cmp
sbb
xor
loop
pop
pushf
sub
icebp
not
and
xor
iret
test
hlt
dec
mov
loop
movs
dec
pop
jo
sub
shl
mov
shl
mov
push
mov
mov
mov
lods
add
mov
dec
and
nop
retf
cmc
pop
fadd
cmp
mov
cwde
xchg
addr16
add
push
shr
leave
call
adc
push
xchg
std
adc
mov
mov
aad
test
sahf
fnop
xor
add
jle
gs
cmp
mov
int
add
mov
not
push
jge
ds
or
popf
adc
xchg
bound
add
leave
mov
mov
sbb
mov
cli
imul
adc
or
or
sbb
push
mov
sub
adc
adc
sti
mov
pushf
push
pop
imul
mov
jne
rol
cmp
(bad)
hlt
ror
addr16
xchg
or
mov
push
mov
add
xor
(bad)
push
mov
sbb
mov
das
sub
add
mov
cmps
je
sbb
cmc
lock
loopne
je
lods
push
mov
or
fcom
cmp
add
paddusw
mov
fild
pop
sbb
test
clc
mov
ja
test
xchg
sub
(bad)
push
push
xor
jl
and
and
mov
shl
mov
fdivr
cs
(bad)
push
in
cmp
pop
rcr
clc
retf
sbb
push
or
js
rcr
aam
sbb
shr
fld
push
popf
mov
bound
test
ja
mov
pop
rcr
test
pop
fld
push
push
jno
stos
jne
sar
mov
push
push
hlt
cdq
imul
or
xor
push
xchg
mov
(bad)
retf
loop
lods
fiadd
sub
aam
aam
stos
test
repnz
xlat
dec
mov
dec
jae
push
push
pop
adc
and
rcr
lahf
stos
add
cmp
(bad)
inc
enter
repnz
repz
call
sbb
mov
inc
(bad)
xchg
in
hlt
dec
stos
cmps
add
mov
jae
mov
int
push
inc
pop
mov
add
push
xchg
mov
(bad)
push
rcr
add
adc
push
sbb
mov
sti
dec
or
lods
paddq
lds
arpl
sti
add
cmc
push
jns
xchg
adc
jns
ret
scas
sbb
cwde
mov
call
out
mov
push
add
fisttp
and
enter
sbb
call
add
aaa
mov
add
icebp
mov
mov
lock
in
or
sbb
lahf
push
push
lods
jmp
mov
or
pop
fst
jns
nop
sbb
push
into
fbstp
dec
loope
or
test
push
or
out
outs
test
add
cdq
ret
fld
cmps
jp
pop
mov
cmps
jecxz
xchg
(bad)
xor
dec
adc
test
cmp
call
stos
xchg
rcr
lock
aad
repnz
fisub
sub
push
test
mov
push
sub
or
call
mov
pop
mov
cwde
jne
addr16
js
rcr
pop
shl
in
sbb
mov
(bad)
cli
pop
mov
xchg
xor
bound
inc
fnstsw
ins
sbb
add
mov
in
dec
xor
jo
ret
mov
fisub
fxch
lahf
fld
(bad)
ss
xchg
adc
jge
lock
pop
pop
mov
cmc
lds
mov
pop
and
cld
jns
sbb
cmps
mov
aad
into
movs
dec
mov
mov
cmp
push
cld
jp
inc
sub
xchg
arpl
ret
(bad)
call
inc
and
fisub
sbb
bound
test
pop
xchg
mov
packsswb
(bad)
xor
mov
(bad)
or
(bad)
retf
bound
call
lahf
pop
mov
add
test
adc
into
ja
mov
push
fimul
repz
clc
ja
xchg
jmp
fstp
(bad)
jmp
test
sbb
push
fsub
scas
mov
inc
bound
xor
cmps
xchg
mov
or
imul
dec
in
sub
pop
and
inc
mov
movs
xchg
xor
fcomp
adc
pop
in
jecxz
add
popa
icebp
loop
movs
pop
add
sub
mov
retf
icebp
ins
push
pop
dec
scas
mov
data16
outs
js
mov
ss
imul
lods
push
cmps
enter
pop
xor
cmp
xor
or
mov
inc
outs
and
and
cmps
mov
add
(bad)
cmc
jnp
lods
call
adc
stos
pusha
imul
lds
push
jmp
xor
adc
pop
jg
adc
push
lea
lods
adc
xchg
cdq
sub
inc
mov
mov
aaa
das
test
in
loope
shr
lea
jmp
sbb
adc
push
outs
sar
dec
sbb
push
cmp
cmp
and
xchg
dec
pop
daa
inc
xchg
lock
lds
js
dec
xor
push
ins
je
sub
pusha
bound
mov
jl
xchg
dec
jmp
jno
outs
pushf
(bad)
je
mov
mov
sub
call
(bad)
cmp
xor
jge
sbb
int
(bad)
mov
jle
popf
sbb
mov
push
jecxz
mov
push
mov
ins
adc
les
jl
cmp
int
sahf
ins
and
inc
jecxz
sbb
ror
sbb
data16
inc
mov
test
mov
dec
jmp
xor
xchg
icebp
dec
fisttp
in
cmp
push
adc
jne
mov
fs
push
enter
out
mov
sbb
movs
aas
dec
arpl
(bad)
out
adc
retf
mov
ja
ja
xchg
int3
xor
cmp
fidiv
mov
into
sub
dec
lahf
xchg
out
cmp
mov
add
pop
outs
jno
and
mov
mov
jmp
scas
les
jg
pop
jb
mov
imul
mov
push
nop
push
pop
xor
(bad)
das
into
sub
outs
clc
pop
ret
mov
xor
jmp
cmps
jl
pop
xor
(bad)
mov
iret
xchg
das
dec
mov
ror
inc
ins
adc
mov
shl
dec
mov
xor
mov
push
fldenv
cmp
fsub
jae
add
mov
retf
aas
xchg
pop
sahf
mov
cmp
mov
sbb
dec
lods
mov
int
lea
push
push
(bad)
xor
stos
je
add
or
xor
ret
pop
cmp
fld
and
aad
into
retf
mov
arpl
xchg
lahf
jmp
movs
xor
adc
lods
sub
sub
jmp
and
inc
xchg
add
push
fwait
mov
and
ja
mov
ficomp
jmp
ins
loope
xor
mov
adc
das
addr16
shl
icebp
in
in
cmc
scas
sbb
or
shl
inc
loopne
xchg
call
test
pusha
lock
sti
inc
cld
cmps
pop
push
or
shr
loopne
and
lods
add
dec
xchg
lock
push
popa
sub
sub
pop
mov
neg
lock
(bad)
jmp
dec
or
call
push
lods
loope
fwait
retf
xor
enter
sbb
sbb
adc
pop
xor
jae
dec
dec
mov
xchg
pop
mov
jns
int
mov
jbe
std
pusha
push
(bad)
cmc
sub
nop
leave
push
adc
lahf
bnd
js
arpl
xchg
jno
pop
popf
mov
push
inc
mov
mov
jo
dec
push
mov
ja
add
imul
lea
in
mov
add
leave
push
ja
test
pop
pop
jns
and
mov
test
fcmovb
shr
mov
adc
rcl
jmp
data16
cmp
pavgb
add
mov
push
retf
(bad)
(bad)
nop
stos
dec
xor
lods
aam
in
jge
je
call
stc
inc
popa
(bad)
push
test
cmp
(bad)
movs
mov
in
mov
lock
inc
ficom
aad
cmp
xchg
cmps
pop
stos
(bad)
dec
xor
xchg
mov
fwait
dec
ja
push
or
push
adc
cmps
pushf
cmp
in
stc
dec
rcl
call
loopne
(bad)
jge
jmp
test
xchg
ins
dec
push
cmp
call
scas
pop
inc
fcmovbe
push
inc
leave
imul
test
cld
pop
pop
push
push
(bad)
and
stc
adc
push
call
and
or
jns
div
lods
mov
ret
add
lock
cmp
mov
sub
jbe
or
mov
mov
push
dec
lea
fnstsw
jecxz
sahf
mov
push
sahf
mov
sbb
xor
cwde
and
inc
(bad)
or
mov
mov
int
js
lods
cli
movs
inc
cmp
pusha
add
gs
repnz
test
cld
push
or
lock
into
test
jmp
cmc
push
addr16
enter
jb
dec
jae
stc
and
push
xchg
in
cmps
or
push
div
imul
push
(bad)
sbb
adc
dec
inc
cmc
das
jg
mov
test
pusha
imul
push
nop
sbb
push
gs
mov
cld
test
inc
cwde
in
shr
fdiv
adc
jle
mov
mov
stos
push
inc
mov
mov
je
pushf
or
or
gs
pusha
jle
mov
jbe
cmp
and
leave
ins
jmp
jbe
sub
xchg
sub
lods
cmp
push
out
sahf
adc
stos
fnstenv
jae
cmp
pop
mov
(bad)
into
and
mov
cmps
cld
dec
shl
mov
cdq
data16
not
fcmovnb
push
xor
out
push
and
jns
sub
xchg
push
movs
and
mov
into
lahf
rcr
lock
test
fimul
or
rol
lea
pop
shl
inc
push
jge
xchg
iret
and
and
dec
ret
xor
fst
jle
and
lea
or
push
ja
push
push
jns
mov
mov
fwait
adc
test
cmp
outs
call
jbe
loope
fsubr
inc
shr
cld
mov
movs
add
mov
test
or
pushf
cmp
out
sar
jo
ins
xchg
xor
test
push
push
sbb
loope
add
sub
dec
dec
inc
push
ins
cmp
les
xchg
jmp
jbe
jb
push
repnz
cli
lea
jg
call
pop
jecxz
sub
pop
push
xchg
pusha
iret
jne
lds
xchg
push
aam
test
cmp
jnp
popf
adc
fcomp
adc
icebp
mov
sub
xor
pop
push
push
movs
xchg
mov
jno
sbb
mov
cmps
jmp
adc
cmp
je
fwait
ss
and
(bad)
test
sahf
retf
xor
dec
in
shl
dec
lahf
push
(bad)
jns
sub
push
imul
jb
pushf
sub
xchg
xchg
jmp
in
mov
inc
(bad)
clc
mov
ret
sbb
and
jg
loopne
push
lahf
add
push
push
loop
lea
loop
cmc
in
sub
pop
mov
(bad)
sbb
xor
scas
imul
bnd
ficomp
ror
inc
cwde
add
daa
stc
icebp
fs
popa
sbb
in
push
add
add
and
cmp
hlt
dec
dec
cli
push
int
lods
sub
(bad)
ror
or
mov
not
adc
loopne
lods
fwait
cld
test
and
int
cdq
and
sub
mov
cmp
cdq
and
cmp
jecxz
dec
je
ret
scas
fwait
xchg
jle
sbb
mov
jb
call
push
mov
fldenv
popf
push
lds
mov
fucomip
pop
rcr
fsubrp
(bad)
stos
adc
and
jmp
add
das
(bad)
and
in
inc
(bad)
inc
add
pop
and
daa
add
mov
mov
mov
or
and
sub
push
pop
ret
cld
into
fucomi
pop
test
mov
mov
mov
xlat
and
sub
ror
repz
xchg
mov
(bad)
repz
addr16
sbb
cmp
pop
push
sub
sbb
pop
pop
push
mov
mov
inc
mov
push
sbb
xchg
xor
movs
out
or
popa
int
js
and
jecxz
outs
dec
cmp
or
scas
add
fld
add
jg
pop
cmp
xchg
push
push
mov
xchg
fcom
fs
jmp
div
adc
pop
push
or
call
sbb
sbb
scas
push
cmp
mov
push
(bad)
adc
out
je
push
sub
ret
mov
push
inc
push
sub
mov
xchg
out
mov
mov
mov
push
push
fsubp
and
xor
inc
xchg
movs
bnd
mov
cld
cmps
popf
nop
bound
pop
inc
jle
idiv
out
fiadd
and
test
mov
sub
sub
fadd
fld
in
clc
or
push
adc
sbb
xchg
xchg
push
dec
push
aas
out
jl
sbb
(bad)
out
(bad)
sub
dec
xchg
dec
fs
(bad)
mov
jle
ss
(bad)
xor
out
fnstenv
cmp
sub
push
adc
lock
(bad)
(bad)
mov
and
mov
mov
pop
dec
mov
sar
gs
mov
dec
mov
mov
sub
popf
sahf
(bad)
into
mov
and
bound
adc
adc
mov
out
mov
push
in
xor
daa
movs
mov
mov
rcr
xor
xchg
adc
xchg
sub
push
or
or
inc
sbb
in
fstp
cmps
stos
stos
lods
or
lock
mov
inc
sbb
mov
push
pop
cmps
hlt
test
loop
mov
lock
cmp
lahf
xor
out
fidivr
dec
or
in
or
mov
ja
in
cmp
jle
faddp
xchg
retf
pop
dec
test
into
xor
jo
daa
adc
ss
in
mov
pusha
lea
mov
push
mov
in
test
retf
mov
sub
push
or
mov
and
cmp
jmp
mov
xchg
mov
movs
sbb
xor
push
(bad)
push
ret
(bad)
into
mov
dec
mov
je
or
add
clc
inc
mov
addr16
mov
es
(bad)
pusha
or
aaa
ret
mov
outs
in
cs
xchg
inc
sbb
dec
xor
mov
aam
mov
pushf
push
push
ret
push
mov
(bad)
adc
add
pop
clc
fbstp
call
ss
and
jge
mov
pop
push
imul
stos
rcl
or
jns
pushf
jno
(bad)
dec
fs
into
or
push
jnp
fstp
inc
fisttp
mov
sub
imul
fs
aad
scas
ffreep
sbb
dec
push
dec
sub
jmp
shl
pop
push
mov
pop
cdq
xchg
dec
xor
or
sub
mov
call
fist
ret
scas
test
mov
jae
pusha
or
fistp
movs
test
mov
jns
push
lock
call
adc
inc
mov
inc
and
or
popa
mov
cmps
or
sub
add
dec
pop
aam
fild
jbe
xchg
sbb
pop
pop
gs
cdq
arpl
out
ds
shl
and
in
fwait
mov
ficom
clc
mov
dec
cmp
les
jno
inc
mov
jmp
imul
lds
add
fild
data16
push
popa
push
pop
int3
rcr
arpl
repz
mov
das
mov
lods
imul
mov
lock
in
mov
mov
nop
aaa
sbb
es
cmp
push
pop
sbb
leave
mov
int3
and
cli
lock
cwde
jmp
and
lods
cwde
seto
lock
pop
cmps
sub
fisttp
mov
xchg
sbb
jno
mov
xlat
push
jno
and
not
mov
in
rol
fild
jbe
or
push
cld
xchg
das
cmp
test
(bad)
jecxz
push
add
daa
popf
push
jl
in
cwde
int3
inc
sbb
sbb
in
daa
sbb
xor
bound
pop
push
fcomp
or
push
scas
sub
test
xchg
and
(bad)
pop
cmp
jge
out
pop
and
out
popa
movs
imul
aas
bswap
(bad)
xchg
sub
(bad)
fst
pop
and
pop
xor
(bad)
mov
(bad)
jo
in
or
das
dec
mov
mov
push
out
add
ss
mov
push
adc
sahf
cmps
fsub
shr
jae
xchg
xlat
or
(bad)
sbb
jmp
aad
cmc
pop
add
mov
adc
(bad)
jns
adc
or
cmp
imul
sub
mov
adc
addr16
stos
into
inc
mov
cmp
adc
mov
push
mov
test
sbb
mov
mov
fdivr
pop
dec
sahf
data16
sbb
dec
jmp
sub
pop
(bad)
and
cmp
repz
retf
ds
pop
mov
xchg
aas
stc
and
outs
adc
test
(bad)
lods
mov
and
ins
dec
out
adc
add
push
jecxz
pop
dec
mov
xchg
or
fmul
into
xchg
scas
out
int3
xor
jb
in
mov
inc
pusha
pop
ins
xchg
outs
jmp
test
push
pushf
jmp
push
xor
push
or
xor
std
mov
retf
mov
fs
fistp
sahf
jle
pusha
fild
cmp
inc
movs
cmps
or
outs
xchg
inc
sub
stc
js
lods
(bad)
mov
shl
js
adc
pusha
jmp
xchg
call
sub
xor
pop
sub
fadd
sar
das
sbb
fstp
pop
stos
push
nop
aaa
jl
call
mov
cdq
inc
das
push
rcl
push
mov
(bad)
mov
sbb
cwde
inc
cmp
rcr
(bad)
xchg
fild
adc
jo
cmps
push
inc
rcr
in
mov
stc
dec
mov
in
sub
adc
add
(bad)
sbb
push
add
xor
xchg
aaa
inc
jp
push
sub
cmp
stos
movs
lea
pop
jo
or
fwait
mov
inc
inc
dec
lock
cmp
push
xchg
mov
fstp
out
fisttp
inc
add
mov
xor
jae
fnop
lock
inc
sub
mov
push
dec
stc
push
add
lock
ds
imul
in
inc
or
icebp
dec
push
cmp
adc
aas
fimul
or
int
mov
sub
or
cmps
data16
leave
imul
jl
sbb
adc
ret
popf
stos
or
pusha
bound
shr
into
push
pop
xchg
add
and
in
ins
adc
push
pop
adc
and
xchg
sub
add
sbb
ret
fmul
push
xchg
stos
scas
and
jmp
sbb
retf
xor
mov
jo
dec
movs
mov
push
and
mov
mov
pusha
cmp
loope
ins
dec
add
jmp
icebp
adc
fisttp
mov
sub
dec
aaa
fild
jmp
inc
cli
push
je
inc
(bad)
inc
int
jle
add
movs
in
pop
dec
cmps
sar
xchg
ret
cmc
dec
fcmovnbe
clc
jno
out
fistp
xchg
stc
test
cwde
retf
inc
adc
imul
ins
jo
or
mov
jns
dec
sub
xchg
jo
pop
aad
stos
ins
lods
imul
xchg
in
and
and
push
dec
jmp
cmc
mov
sub
cs
pop
clc
in
mov
(bad)
pusha
sbb
jae
adc
lods
jge
(bad)
jge
psrlq
xlat
jecxz
or
jne
cmp
outs
mov
nop
rol
div
pop
jns
test
dec
sub
rol
jae
xchg
mov
leave
aad
pop
mov
call
mov
mov
lods
and
push
or
inc
jecxz
hlt
pop
loopne
pushf
loop
jp
cdq
and
int
xor
inc
sub
push
cmp
mov
inc
mov
pop
ror
sub
cmp
pop
xchg
test
repnz
jle
pushf
xor
jnp
sbb
and
mov
out
aad
push
jmp
push
or
(bad)
mov
loopne
out
je
pop
push
mov
adc
call
sti
dec
cli
aad
daa
aam
ret
pop
popf
fadd
call
mov
jge
push
xchg
mov
adc
fnsave
adc
push
gs
fs
fwait
mov
jmp
out
not
add
stos
cmovb
ret
add
retf
fldenv
aas
push
add
div
mov
and
ret
aas
test
mov
arpl
int
fsub
or
and
sub
call
and
inc
xor
mov
pop
gs
stc
dec
mov
sub
pop
pop
movs
pop
or
(bad)
retf
sbb
(bad)
div
in
and
jnp
xchg
adc
mov
cmp
lahf
lea
xor
out
(bad)
xlat
mov
mov
leave
jmp
sbb
sub
sub
fsub
scas
add
jmp
int
pop
lahf
jge
hlt
lods
mov
int
jmp
cmp
sbb
popa
not
mov
nop
lods
lods
mov
es
fdivr
out
stos
xchg
loopne
(bad)
pop
ficom
call
push
gs
mov
retf
mov
xchg
mov
xchg
and
mov
mov
or
xor
xchg
int3
mov
fidivr
cwde
(bad)
test
xchg
or
es
inc
or
cwde
mov
or
sub
dec
sbb
cli
mov
retf
mov
adc
ds
bswap
stos
jg
inc
nop
fs
cwde
lods
push
(bad)
cwde
and
cmp
les
jns
mov
mov
ss
and
mov
aad
sbb
xchg
or
push
ins
cmp
or
xchg
push
cs
push
jnp
call
jnp
xchg
ds
clc
xchg
pop
push
adc
aam
cdq
jge
imul
xor
loopne
cld
adc
mov
(bad)
outs
leave
fcomp
cmps
(bad)
xchg
cmp
into
adc
(bad)
push
pop
jmp
imul
inc
out
mov
dec
ss
(bad)
push
ins
loopne
in
mov
xor
retf
dec
sti
fidiv
or
ins
sbb
adc
cmp
dec
shl
push
arpl
mov
pop
cmps
cld
jno
and
xchg
outs
cmps
cwde
push
aaa
xchg
call
adc
jmp
cmp
or
xchg
sbb
mov
mov
mov
push
test
or
add
and
pop
int3
jb
lock
repnz
pop
fimul
nop
lds
ret
mov
push
movs
push
jl
std
jb
stc
inc
add
into
in
push
hlt
test
(bad)
mov
jns
repz
jle
or
inc
or
inc
clc
cmp
or
test
mov
jp
cmp
fwait
and
enter
push
jg
das
inc
push
loop
push
sbb
nop
out
jg
adc
scas
pop
fidivr
iret
ret
jle
sub
jge
fidiv
retf
jle
aam
lods
fst
mov
jo
sub
and
scas
(bad)
hlt
call
shl
dec
jne
add
fild
add
inc
(bad)
dec
jecxz
sar
xchg
retf
push
jecxz
pop
jp
lods
(bad)
push
fmul
adc
mov
daa
aad
mov
xchg
sbb
mov
adc
fnsave
fst
imul
out
fidivr
js
xor
add
push
or
xor
mov
fs
inc
adc
loopne
inc
pop
cmp
xor
jo
pcmpgtd
mov
test
stos
popa
push
leave
mov
xor
sbb
daa
mov
push
xchg
jecxz
and
add
mov
mov
jnp
inc
retf
or
sbb
add
push
xchg
ins
into
(bad)
aaa
cmp
into
ss
outs
jo
aaa
pop
pop
jae
outs
xchg
inc
sbb
push
mov
in
bound
leave
dec
mov
push
xor
or
bound
mul
push
cmp
pop
loope
rol
and
push
xchg
add
(bad)
sbb
pop
add
jbe
jnp
cmps
les
in
test
mov
xor
fld
test
push
sti
xchg
mov
pop
enter
adc
xchg
jmp
sbb
mov
sub
sub
xchg
inc
dec
ja
dec
push
mov
jo
in
add
ins
inc
sbb
push
and
push
add
mov
jg
xlat
icebp
jno
sub
mov
push
call
push
out
push
ins
and
call
ss
or
fld
xchg
jbe
push
jne
push
inc
push
adc
and
add
jae
iret
push
aaa
in
pop
sbb
mov
les
adc
cli
add
cdq
mov
shl
pop
out
sub
test
leave
or
cld
in
loop
ja
cs
js
jmp
xor
push
int
icebp
pop
push
dec
mov
mov
push
mov
xchg
ds
(bad)
(bad)
cld
jmp
xchg
add
int
es
jmp
hlt
repz
push
imul
jmp
nop
pop
loopne
dec
sbb
or
mov
daa
sub
rcr
xor
dec
xchg
imul
repnz
adc
xchg
fnstcw
jns
pop
cmp
dec
sbb
and
sbb
jo
sbb
add
push
mov
jg
adc
outs
add
add
pop
mov
ror
sbb
sbb
mov
or
cmp
inc
push
stc
and
or
or
xor
cmp
scas
pop
pop
jmp
xchg
mov
jmp
mov
add
addr16
sbb
arpl
ret
les
jo
add
sbb
loope
lods
jne
xchg
adc
in
mov
fadd
pop
jb
pusha
(bad)
retf
or
inc
add
pop
mov
mov
mov
add
mov
enter
ds
test
call
stos
and
push
ret
scas
xlat
shl
dec
add
jp
jmp
mov
sub
test
and
shr
push
push
cwde
dec
and
mov
mov
out
jns
retf
sub
test
xor
or
xchg
ror
dec
dec
je
and
retf
fnstsw
jns
inc
in
ds
push
push
int3
mov
(bad)
out
xchg
mov
mov
loope
mov
leave
cmp
shl
xor
dec
cwde
scas
add
mov
lea
xlat
fs
jp
pop
xchg
inc
pop
mov
lock
je
sbb
xchg
fcmovne
or
and
push
and
das
xor
imul
mov
jg
cmp
lds
shl
(bad)
hlt
jo
dec
mov
and
loop
int
inc
and
nop
pop
dec
push
stos
mov
pop
or
and
pop
cdq
xchg
adc
call
shl
mov
jne
jecxz
mov
jmp
mov
fisttp
(bad)
sub
loopne
hlt
aaa
imul
(bad)
push
outs
push
test
repnz
xor
rol
push
call
iret
inc
out
adc
sub
mov
fwait
(bad)
in
repz
loop
sbb
repnz
int3
mov
sub
and
xchg
jae
cmp
dec
das
pop
add
lea
dec
mov
lea
jns
sbb
fnstenv
adc
or
inc
inc
cmps
(bad)
outs
dec
jmp
leave
sti
test
bnd
stos
retf
mov
lahf
jmp
adc
div
loop
push
mov
inc
data16
adc
mov
xor
imul
push
popa
es
outs
jae
les
mov
push
retf
pop
or
mov
dec
or
dec
arpl
bound
mov
mov
test
dec
movs
int
add
fisub
inc
sbb
jne
fist
stos
repnz
jns
xchg
sub
pop
push
cmp
and
iret
sub
push
shr
mov
lds
or
movs
ret
sub
dec
das
imul
lods
shr
in
cmp
lock
int
push
mov
in
cmp
out
mov
xchg
outs
mov
lahf
and
iret
sbb
push
mov
dec
outs
jmp
sub
pop
aam
out
jmp
dec
xchg
pop
js
mov
popf
and
cdq
pop
add
mov
pop
sub
cmp
xchg
jmp
mov
fwait
or
add
out
pusha
jno
push
push
lock
xchg
and
push
in
movs
sbb
(bad)
imul
and
push
push
cs
loopne
loop
mov
daa
pop
push
loopne
ja
xchg
iret
mov
xchg
or
or
and
lahf
adc
scas
sbb
sub
pop
cmp
movs
jbe
jg
cmc
mov
xor
mov
shl
mov
and
ror
inc
ins
loope
dec
pop
ss
add
daa
(bad)
shr
inc
ins
loope
pop
aaa
inc
fcmovbe
sbb
mov
add
jecxz
cmp
fmul
push
cmp
mov
xchg
ds
mov
xor
iret
int
icebp
fwait
xchg
lea
cmps
push
and
into
test
shl
or
mov
ret
in
xor
retf
int3
push
push
and
js
jne
xchg
sub
movs
sbb
push
(bad)
mov
xchg
test
inc
jb
ss
fdivr
in
pop
fwait
mov
and
jge
fs
in
jbe
xchg
rol
mov
push
imul
stos
cli
imul
imul
jg
jb
stos
inc
xor
cmc
mov
sahf
scas
daa
sub
outs
or
cmp
pop
mov
lds
cmc
aas
dec
jecxz
in
cmp
shr
sbb
ret
pop
pop
test
cld
leave
mov
push
inc
push
mov
sbb
pop
rcr
pop
and
adc
mov
sbb
mov
adc
or
pop
ins
inc
inc
add
loope
jne
imul
inc
adc
jle
or
std
push
mov
xor
mov
imul
inc
lahf
rol
mov
pusha
test
aas
test
dec
and
mov
out
and
cdq
cdq
mov
(bad)
or
in
add
ror
mov
inc
mov
pop
in
cmp
(bad)
das
xor
lahf
or
mov
je
enter
vminss
inc
out
jl
add
push
adc
cmps
pop
inc
pop
jne
sub
mov
cmp
movs
mov
or
adc
and
and
jae
xor
ja
fistp
shl
(bad)
or
xor
sub
data16
call
das
mov
dec
dec
jb
mov
stos
int
add
inc
xor
cmps
xor
enter
xor
fwait
leave
mov
xchg
mov
xor
mov
or
push
inc
cmp
gs
cmp
mov
or
loope
leave
data16
adc
fmul
nop
sahf
fs
or
neg
arpl
or
dec
sub
inc
enter
fcmovnu
pop
lea
fsub
cmps
sbb
(bad)
test
jmp
fs
xor
cmc
in
add
xor
loope
mov
fwait
stc
lock
or
jmp
in
push
mov
cmp
push
ss
outs
xchg
pop
rcr
loopne
imul
jo
jle
xchg
popa
(bad)
xor
add
xor
clc
test
out
cmp
sub
xor
push
inc
inc
push
ins
jp
cmps
stc
aad
or
xchg
movs
ins
ret
in
mov
jmp
aaa
and
addr16
push
mov
add
not
mov
lods
mov
bnd
movs
xor
sub
inc
lock
mov
out
xor
aaa
addr16
dec
sti
setns
imul
sub
icebp
jge
and
adc
mov
inc
add
loope
xor
sub
adc
mov
mov
jle
mov
and
test
sub
(bad)
jb
inc
adc
pop
loope
sbb
dec
(bad)
in
sbb
mov
outs
loopne
jae
nop
(bad)
in
adc
int3
or
mov
popa
scas
mov
shl
xor
or
add
mov
loope
icebp
mov
push
dec
xor
mov
pop
jmp
xor
fistp
fnstcw
scas
jns
fbstp
adc
iret
adc
dec
sub
pushf
(bad)
jo
xchg
mov
sub
ror
xchg
out
es
(bad)
popa
(bad)
pop
add
(bad)
jle
or
call
shr
xchg
idiv
jbe
(bad)
push
leave
ror
scas
fisubr
fistp
cmp
int
jo
lods
sbb
rol
sbb
stos
fdivr
xchg
ret
pop
in
idiv
push
out
shl
enter
mov
cli
scas
mov
xchg
xor
fsubr
xchg
and
mov
xchg
push
xor
inc
lods
cmp
or
pop
(bad)
mov
ret
jne
or
gs
cmc
(bad)
jg
mov
dec
out
and
mov
(bad)
mov
jne
dec
nop
pop
xor
xchg
adc
pop
cwde
cli
(bad)
aaa
sti
lock
movs
and
push
in
test
pop
sub
loopne
and
adc
js
ss
and
inc
lds
push
jmp
fisub
xor
pop
aam
ret
inc
cdq
xlat
shl
dec
xchg
fnsave
ret
push
mov
jns
jnp
jne
dec
ret
in
call
test
pop
inc
sar
cmp
jge
loope
mov
ins
and
add
mov
in
mov
sar
les
lock
movs
dec
fisub
xlat
adc
(bad)
jle
pop
pushf
pop
in
mov
loopne
mov
sub
fdiv
into
xchg
shl
scas
push
inc
sbb
cmp
mov
leave
dec
in
mov
xor
xor
cmp
add
or
mov
cmp
rcr
push
mov
rol
imul
add
popa
cmp
mov
scas
arpl
adc
mov
mov
ss
mov
push
loop
jno
jmp
ror
cmp
add
ret
arpl
fldcw
shl
loope
jp
xchg
fmul
push
dec
cmp
ret
nop
add
in
sbb
lea
pop
inc
mov
nop
loop
xchg
ss
or
push
jo
mov
lds
jl
cwde
dec
mov
popa
enter
sbb
(bad)
sub
mov
push
les
movs
loop
dec
sbb
push
adc
add
sub
mov
fisttp
and
cmc
(bad)
cld
cld
xor
inc
adc
int
in
push
push
add
loope
add
xrstor
ret
data16
xchg
push
xor
ja
popf
inc
call
cwde
adc
fstp
mov
pop
jp
adc
xchg
sub
imul
push
add
mov
arpl
enter
je
aam
xchg
mov
ds
pop
jg
lds
fwait
jge
stc
ds
jmp
lea
mov
and
iret
jae
pop
test
fmulp
lock
shl
xlat
mov
xor
or
or
call
mov
stos
rcr
xor
dec
das
ror
cdq
mov
pop
jnp
add
out
shl
jns
aaa
mov
or
aad
add
aaa
je
out
daa
dec
and
sbb
sbb
movs
and
inc
in
add
out
(bad)
retf
pop
mov
inc
(bad)
mov
or
lods
inc
ficomp
sbb
loopne
cmc
das
loopne
mov
je
mov
xchg
pop
cmp
push
jae
inc
jg
shr
(bad)
or
cmps
iret
add
jecxz
fisttp
js
in
mov
pop
dec
xor
ja
in
gs
repnz
sub
pop
inc
cmc
xor
add
retf
idiv
dec
movs
mov
out
jmp
adc
add
lds
lock
ficom
cmp
jl
scas
xchg
and
inc
mov
ret
adc
lock
push
sbb
stc
sub
push
add
outs
cwde
fs
adc
jl
push
in
or
and
push
imul
nop
sbb
push
(bad)
mov
fsubp
ins
repz
ror
scas
stos
pop
dec
adc
std
mov
hlt
outs
sub
mov
jb
std
and
into
rol
dec
not
mov
and
inc
xchg
cmc
add
test
(bad)
stos
push
loop
ror
and
xlat
xchg
xor
cmp
cmp
fld
mov
lea
sbb
arpl
fnstsw
cli
push
cmps
cwde
out
jle
scas
js
ss
and
lahf
mov
or
sbb
call
xchg
into
out
call
xchg
inc
jo
js
add
xchg
jge
cmp
mov
hlt
push
adc
pushf
push
jl
test
movs
push
out
dec
sub
mov
lock
les
fwait
cmp
xchg
ficom
sub
repnz
retf
movs
push
scas
repnz
iret
push
mov
loopne
out
std
icebp
iret
and
xor
mov
mov
pushf
js
loopne
shl
xchg
or
jmp
add
(bad)
leave
pop
jmp
add
mov
push
push
cmp
xchg
loopne
ss
mov
pushf
xchg
jo
ret
pop
pop
xchg
and
push
ja
jmp
je
xchg
xchg
stos
sbb
ret
out
push
das
add
pop
cmps
call
mov
icebp
cmps
pop
stos
std
cdq
xor
mov
or
sub
push
jnp
fisubr
push
xchg
add
(bad)
pop
push
ret
mov
cmp
call
and
popf
xchg
sbb
xchg
and
ds
hlt
sar
int3
sub
jmp
(bad)
ins
push
inc
mov
lahf
cmp
add
jns
mov
lahf
adc
add
daa
std
mov
fild
adc
push
iret
fs
leave
loopne
cwde
mov
push
into
test
cmc
clc
dec
cmp
cdq
int3
sahf
(bad)
or
ins
add
retf
mov
cmc
lahf
in
ret
sbb
sbb
jge
(bad)
call
sbb
mul
shld
jmp
fbstp
push
push
outs
sub
mov
ins
inc
jg
stos
dec
cmp
mov
(bad)
scas
daa
cmp
out
sub
retf
sbb
test
sbb
retf
or
call
sahf
xor
lea
ret
adc
adc
cmp
addr16
lods
into
push
ret
mov
dec
retf
mov
icebp
loop
shl
xor
sti
repz
push
push
test
adc
stos
repnz
div
fs
pop
inc
and
jbe
add
cmp
jne
(bad)
loopne
sbb
fdivr
xchg
mov
mov
and
dec
fcom
inc
pop
xor
test
pop
pop
sar
sub
ins
jle
ret
iret
(bad)
idiv
(bad)
jmp
mov
es
mov
and
call
(bad)
aaa
fstp
xchg
inc
xchg
rol
shr
xchg
ds
test
jo
retf
call
mov
inc
ja
hlt
push
sbb
inc
cs
daa
sub
mov
(bad)
adc
test
fcomi
lock
out
adc
sahf
xor
in
repnz
push
sbb
dec
adc
fbld
xor
cmp
stos
sbb
rcr
jle
and
push
mov
into
mov
jbe
or
fisubr
mov
push
arpl
dec
inc
and
mov
cmc
repnz
jbe
inc
adc
adc
pcmpeqb
mov
sub
aas
pop
lock
repnz
in
outs
or
mov
(bad)
test
sahf
test
scas
mov
jnp
mov
rol
or
adc
fwait
push
gs
cmp
pop
hlt
push
out
repz
and
lds
stos
xchg
cmp
cmp
inc
adc
jmp
int3
mov
leave
icebp
fidivr
jb
sub
lea
push
cs
mov
sub
sbb
arpl
or
adc
push
xor
sbb
sbb
enter
int3
mov
lods
dec
mov
aaa
test
xchg
push
js
pop
jbe
push
adc
ret
fwait
sub
dec
and
xchg
dec
cmc
add
xchg
test
sbb
inc
pop
jb
sahf
dec
mov
jnp
test
popf
mov
mov
es
es
mov
pop
lahf
popa
data16
and
rcl
stc
sbb
push
scas
xchg
enter
or
push
jge
mov
lea
sub
repnz
pop
mov
sub
xor
rcl
push
jae
sbb
fsubr
inc
int3
adc
aam
sahf
jmp
in
jg
std
rcr
mov
xor
xor
je
push
sahf
xchg
rol
or
mov
or
mov
iret
loopne
inc
fist
sub
pop
push
mov
or
mov
inc
push
xor
or
mov
mov
pop
mov
(bad)
sub
adc
fild
mov
mov
retf
imul
jmp
retf
push
xor
mov
mov
push
sbb
inc
imul
fdiv
cvtps2pi
aad
pop
jmp
les
xchg
cmp
lds
or
lock
and
inc
xor
sub
fwait
cmp
fwait
test
mov
inc
retf
call
mov
int
stc
and
xchg
sub
(bad)
sub
jno
scas
mov
pop
xor
ds
pop
je
mul
xchg
xchg
shl
or
sbb
adc
test
leave
mov
and
mov
push
jns
sub
lahf
xor
ins
adc
sub
aam
mov
dec
mov
add
push
int
popa
inc
mov
(bad)
mov
call
and
and
jbe
and
dec
sub
add
das
mov
ss
out
retf
aas
inc
sbb
pop
cmps
out
pop
jle
pop
test
bound
sub
in
out
xlat
lea
fsubr
out
xor
stos
mov
lock
aas
out
pop
rcl
and
scas
push
mov
dec
push
or
cli
push
retf
adc
pop
push
jno
ss
mov
push
dec
mov
scas
gs
les
call
dec
popa
jge
cmp
add
out
cmps
xchg
pop
fld
xor
push
jo
scas
rol
mov
retf
out
sbb
mov
loope
stc
(bad)
mov
pop
pop
cdq
adc
(bad)
jne
mov
mov
gs
(bad)
repz
mov
cmp
mov
pop
dec
or
mov
adc
pop
xchg
sbb
xor
(bad)
not
call
inc
addr16
pop
inc
cmp
xchg
sbb
and
call
mov
repnz
pop
mov
xchg
nop
out
dec
daa
push
inc
lock
aad
jge
dec
xchg
jl
jmp
std
xor
(bad)
(bad)
(bad)
cmps
mov
in
xor
push
mov
add
xor
loopne
inc
mov
adc
push
jo
ds
enter
mov
dec
daa
mov
xchg
push
push
xor
out
inc
push
pop
cmps
sbb
icebp
inc
push
pop
jg
push
sar
mov
jecxz
fdiv
mov
inc
push
mov
mov
xchg
sbb
pop
pop
fwait
jmp
ficom
(bad)
pushf
fild
scas
test
dec
push
js
or
imul
or
xchg
adc
imul
loope
sbb
jl
data16
call
jge
push
adc
sar
fstp
jmp
outs
mov
xor
in
retf
mov
sub
mov
cdq
xor
nop
into
jns
sbb
movs
aam
lea
lock
mov
pop
mul
pusha
xchg
sub
pop
f2xm1
dec
cmc
mov
xchg
mov
enter
mov
aad
add
pop
mov
jle
les
inc
jle
fisttp
push
cmp
jecxz
mov
cmp
call
push
sahf
int
clc
cdq
(bad)
xchg
out
pop
mov
jge
jle
loopne
out
mov
jae
xchg
in
push
add
call
mov
cld
fcomp
add
sbb
stos
dec
call
das
bound
push
xchg
out
std
mov
shl
retf
cld
pop
push
cvtps2pi
mov
aad
push
mov
icebp
fs
cmp
pop
test
js
jnp
and
add
sbb
ds
clc
push
cmp
cmp
mov
mov
rol
aam
test
icebp
dec
in
jle
mov
adc
neg
pusha
int
fcom
(bad)
mov
push
adc
outs
add
or
es
addr16
mov
fdiv
shl
or
sbb
xor
cmps
or
out
xor
(bad)
cmc
jae
pop
cli
push
push
mov
out
sub
rcr
pusha
pop
xlat
das
dec
icebp
fsubrp
out
lock
addr16
test
stc
arpl
sbb
fmulp
es
cld
test
mov
out
sub
push
adc
add
push
cmp
add
jb
and
inc
dec
dec
mov
add
nop
in
pop
nop
pop
mov
pop
inc
sbb
imul
lahf
pop
cmp
les
add
or
test
sbb
retf
sbb
xor
into
jbe
enter
ins
lea
dec
jno
es
adc
mov
ja
adc
inc
pop
fdivr
enterw
xor
ins
movs
mov
sub
jbe
and
fst
cmp
movs
and
mov
nop
mov
mov
add
stc
cli
es
dec
aaa
repnz
(bad)
or
ins
data16
inc
jae
push
scas
push
scas
push
inc
mov
(bad)
lods
lock
xchg
or
dec
pop
cwde
adc
(bad)
jge
cmp
inc
dec
push
sahf
hlt
(bad)
lahf
fmul
test
data16
stos
rcl
pop
mov
push
jnp
sub
dec
cmp
inc
inc
cmp
dec
pushf
xor
jl
out
sahf
cmp
aam
fcomp
adc
add
add
jns
sub
adc
lods
add
cdq
jno
jl
push
dec
mov
add
mov
rcl
hlt
(bad)
ds
movs
imul
outs
call
fwait
lea
ficom
leave
ins
pop
adc
arpl
mov
in
cmps
sub
inc
and
and
cmps
xor
(bad)
js
cmps
test
dec
sar
push
popf
or
sbb
add
(bad)
int
in
cmc
or
jo
push
dec
xor
rcl
pusha
fstp
test
adc
es
jo
xor
sbb
call
(bad)
xchg
sbb
outs
inc
arpl
out
rcr
out
add
jne
inc
sbb
xchg
jecxz
and
ja
cmp
push
mov
cmp
dec
push
arpl
push
and
cwde
cmp
test
ins
push
xchg
jns
sub
add
sub
and
add
jge
add
shl
arpl
in
jecxz
test
xor
idiv
fcmovbe
push
xchg
test
or
jno
adc
push
xor
icebp
or
nop
gs
retf
mov
mov
sbb
dec
in
push
sbb
mov
movs
pop
and
enter
mov
sbb
jl
enterw
hlt
(bad)
clc
imul
adc
adc
fist
pop
sbb
sbb
movs
add
in
mov
(bad)
mov
int3
pop
ret
pushf
enter
aad
jnp
sar
pushf
in
add
lods
mov
shl
sbb
jecxz
outs
sti
or
sti
outs
add
bswap
cld
icebp
xor
mov
lods
jae
imul
int3
aam
sbb
push
xor
sub
pop
push
pop
pop
sbb
or
inc
outs
xchg
ret
xchg
int3
iret
pop
in
stos
jne
mov
into
push
in
mov
pop
scas
fistp
aas
dec
fidiv
fdivr
daa
loop
and
xor
outs
jne
iret
pop
inc
cdq
arpl
adc
lds
xor
add
(bad)
mov
mov
xor
pop
popf
mov
lods
and
xchg
repnz
adc
mov
mov
jp
adc
into
je
(bad)
imul
mov
aas
xor
xor
out
enter
xor
out
add
mov
cdq
repz
scas
call
pop
pop
add
leave
call
cmp
call
push
add
and
mov
jnp
sub
loop
xchg
jo
xor
(bad)
dec
push
hlt
inc
add
or
bound
jle
or
mov
(bad)
pop
xor
ja
pop
xchg
sbb
nop
push
pop
ucomiss
ins
xor
out
push
jbe
pop
lahf
cmps
sbb
pop
sbb
jnp
bound
shl
test
js
lods
mov
sub
leave
mov
mov
scas
or
adc
xor
cld
fnstenv
das
fild
fld
sbb
or
fisub
loope
ja
jmp
scas
sub
mov
retf
ja
lods
(bad)
jg
imul
sbb
mov
cwde
rcr
movs
push
add
xchg
lds
repz
leave
out
arpl
in
ins
fsub
push
bound
xchg
push
xor
mov
and
jle
stc
sar
mov
sub
aam
cli
jbe
mov
lds
mov
fsub
or
iret
cs
cld
test
cmp
test
cmp
cmp
xlat
adc
xchg
lea
call
inc
jnp
shr
mov
outs
shl
push
js
dec
call
leave
xor
xchg
jl
dec
in
ins
clc
nop
cmp
in
xchg
pushf
aas
scas
test
lea
mov
fisubr
jle
cmp
cmp
inc
mov
jo
enter
mov
(bad)
call
icebp
inc
dec
mov
out
cli
iret
movs
cmp
div
sbb
(bad)
es
cmp
cmps
or
rcl
out
mov
mov
mov
or
add
cwde
popa
jno
pop
popf
add
inc
jmp
and
mov
fwait
cld
ret
retf
aaa
cmps
enter
mov
nop
stc
jns
dec
sbb
jae
mov
test
movs
push
outs
sbb
in
call
fcomp
daa
push
xor
xor
cmp
cmps
inc
(bad)
push
and
mov
sub
inc
loopne
jae
into
mov
cmps
mov
ficom
push
(bad)
cmp
xor
lock
test
mov
dec
test
call
mov
test
lahf
arpl
fmul
sar
jle
out
fs
jp
stc
xchg
jae
jo
or
jo
(bad)
gs
(bad)
sbb
iret
cli
jno
xor
dec
sub
mov
lods
mov
inc
test
xlat
rcr
cmps
rcl
(bad)
mov
pop
retf
shl
adc
cld
pop
sub
cmps
cvtps2pi
cmp
cmps
arpl
pop
dec
mov
pop
pop
jge
jae
cld
inc
loope
pop
inc
xchg
repz
jmp
jecxz
loope
jne
jns
xlat
ret
test
iret
dec
dec
jne
jmp
and
rcl
xchg
aad
scas
(bad)
sub
cmps
xchg
leave
ds
cld
out
pop
retf
data16
lds
mov
jge
push
cmp
arpl
in
push
test
rol
call
mov
movs
adc
add
mov
mov
pusha
pop
jnp
ror
in
jg
loop
shl
push
fcmovbe
jmp
lds
mov
lea
xchg
push
test
mov
add
sbb
mov
mov
jb
loopne
xchg
iret
lea
jae
xlat
mov
sbb
cdq
(bad)
out
push
mov
and
stos
int
daa
mov
lods
sbb
lock
push
cmc
fmul
sahf
sbb
icebp
sahf
test
mov
in
loop
and
dec
mov
xchg
pop
scas
xor
ret
dec
dec
pop
icebp
cmps
mov
cmp
jp
cmp
fistp
iret
scas
jge
mov
jecxz
pop
xor
adc
mov
(bad)
cli
pop
test
jns
jge
or
push
inc
stos
jl
adc
in
daa
cmc
dec
pop
inc
fbstp
and
addr16
mov
out
les
rcl
jg
cmp
inc
adc
mov
out
jns
int3
iret
mov
fwait
dec
add
dec
shl
(bad)
sar
repz
adc
xchg
mov
mov
mov
scas
push
xor
dec
jb
imul
cmp
into
push
in
fcomip
imul
pop
jmp
adc
out
or
ret
js
cwde
icebp
or
xlat
div
jge
repnz
push
mov
popf
sbb
cwde
or
jo
jg
add
cmp
sub
iret
popa
dec
or
aad
add
enterw
xor
push
xchg
push
jl
push
mov
call
jle
in
inc
adc
test
inc
in
test
ins
adc
mov
add
mov
xchg
aad
and
push
jg
rol
ja
pop
leave
xstore-rng
cmps
inc
retf
(bad)
pop
push
mov
dec
mov
out
cmp
sbb
xor
mov
inc
movs
and
dec
inc
jge
jno
lds
xor
push
gs
mov
stc
jle
push
fisttp
xor
or
fld
aas
out
outs
popf
mov
push
sub
inc
fcomp
fdiv
pop
outs
imul
inc
pop
pop
out
in
adc
mov
(bad)
jmp
sub
lds
mov
and
test
xchg
xlat
push
pop
inc
stos
xchg
inc
and
cwde
mov
push
retf
and
into
cmp
jmp
cmp
sub
dec
xchg
ins
mov
xchg
xor
imul
lds
sbb
pop
push
mov
jb
clc
and
jge
push
aaa
mov
dec
xchg
sbb
fdivr
outs
stos
stos
inc
sub
int
jo
pop
(bad)
xor
mov
dec
call
call
loopne
xlat
jmp
xlat
push
sub
repz
fdivr
sub
aas
fstp
dec
mov
mov
test
dec
icebp
imul
add
addr16
shl
jmp
sub
mov
xor
add
jle
xor
mov
add
mov
int3
mov
repz
movs
mov
addr16
sbb
xchg
xchg
push
pop
inc
dec
push
mov
sbb
mov
iret
mov
div
and
or
xchg
(bad)
mov
stos
adc
cmp
pop
into
mov
mov
cld
pop
adc
sbb
xor
je
push
add
xor
and
inc
inc
in
in
xchg
das
inc
add
add
(bad)
fidivr
sbb
stos
jb
iret
outs
and
mov
js
bnd
lods
in
jle
push
xchg
lds
imul
sub
mov
xchg
push
mov
xor
inc
stc
push
std
xchg
popa
pop
push
idiv
sbb
xchg
retf
cmc
jb
xchg
bound
retf
pop
pusha
dec
(bad)
fs
mov
mov
stos
mov
lahf
xchg
retf
aam
shl
xlat
call
out
dec
arpl
nop
aaa
rcr
addr16
adc
jnp
push
lods
repz
std
aaa
pop
pop
fldenv
cmps
lea
pop
sub
leave
call
mov
into
adc
and
inc
dec
xor
sub
out
or
and
(bad)
jo
cmp
lods
xchg
lods
sbb
sbb
pop
enter
ds
push
adc
push
xchg
loop
fucomip
test
fisubr
xor
ds
mov
xchg
ss
or
mov
shl
pop
in
inc
mov
pushf
icebp
add
jg
inc
pop
pop
div
mov
jo
or
sbb
adc
mov
and
jnp
mov
mov
adc
lahf
test
lea
js
lds
sbb
cmp
fs
ins
xlat
dec
jmp
mov
sub
or
pop
test
push
mov
(bad)
stos
pop
repnz
ret
mov
inc
sub
push
std
test
xchg
shr
jl
mov
jge
pop
lahf
add
mov
mov
hlt
out
in
pop
xchg
cmc
pop
scas
cmp
push
xchg
xchg
out
pop
mov
paddw
pop
cld
push
mov
outs
dec
in
and
fs
repz
adc
iret
mov
inc
or
movs
or
or
jle
cmp
mov
add
mov
add
dec
lock
inc
inc
bound
adc
push
adc
lea
fs
jb
xor
jns
mov
mov
and
cmp
mov
outs
xchg
daa
fisubr
jmp
xchg
adc
inc
mov
push
scas
jbe
jp
hlt
in
pop
jne
inc
hlt
jmp
pop
popf
cmp
gs
adc
iret
mov
inc
mov
xlat
or
push
(bad)
ds
jno
and
xchg
and
jo
and
mov
aam
shl
inc
add
pop
dec
xlat
pop
sub
mov
je
jo
ja
dec
out
fisub
push
popa
or
les
fld
xlat
pop
je
push
or
and
sbb
and
sbb
jno
fnstsw
popw
int
sbb
mov
js
jmp
jmp
mov
test
xor
push
inc
xor
aad
call
in
xchg
pop
pop
pop
cmp
mov
dec
in
sbb
add
pop
mov
rcr
je
mov
(bad)
dec
xlat
jne
inc
dec
lds
push
push
push
ret
sahf
(bad)
dec
mul
arpl
mov
jo
ds
inc
stos
lods
hlt
cmp
xchg
mov
retf
dec
jmp
xchg
and
cmp
inc
jmp
xor
arpl
pop
shr
push
shr
shr
jns
mov
popf
repz
mov
lods
(bad)
jle
jbe
sub
and
cmp
pop
inc
aas
imul
sub
mov
pop
dec
ret
mov
mov
stc
nop
xchg
push
scas
aas
ret
movs
dec
and
push
in
call
mov
fdivr
pop
sahf
sub
std
push
jne
mov
fs
imul
js
popf
pop
call
xor
dec
out
xchg
sahf
or
test
jbe
retf
jo
aas
push
dec
rcr
mov
pushf
cwde
xchg
inc
daa
mov
repz
inc
xchg
xlat
daa
cmc
les
mov
mov
lea
stc
pop
mov
fwait
cmp
pop
lea
loopne
and
jmp
mov
aas
mov
inc
jb
adc
cwde
mov
mov
add
xor
jl
mov
add
cmp
mov
mov
adc
mov
jae
adc
jmp
dec
adc
aam
jmp
push
pop
adc
and
sbb
je
mov
add
(bad)
data16
xchg
cli
xchg
mov
jne
ja
add
ss
fsub
cmps
shl
inc
or
into
int3
jp
push
mov
dec
jbe
repnz
(bad)
xor
outs
lss
mov
inc
mov
imul
sbb
mov
aas
das
mov
xor
and
popf
cmp
test
test
ror
aad
cmp
cmps
xchg
scas
jne
mov
adc
lods
leave
ror
bound
vpshlw
sbb
sub
outs
mov
stos
sub
stos
cld
dec
xchg
mov
xchg
cmc
dec
pusha
out
mov
jbe
xor
stos
fmul
sub
or
dec
mov
jno
mov
pop
icebp
sub
mov
jge
xor
mov
(bad)
fst
push
mov
mov
jo
int3
mov
push
cs
lods
cmps
mov
outs
int3
mov
push
mov
ss
xor
sti
mov
rol
scas
fisubr
jb
cli
pop
jbe
adc
mov
xor
stos
sbb
fimul
inc
sbb
and
xchg
stos
lods
in
push
cli
dec
pop
test
gs
or
push
adc
inc
in
fcomip
fisttp
pop
icebp
sbb
xchg
inc
xchg
mov
popf
inc
inc
div
mov
sbb
lea
sub
adc
rol
inc
cmp
loop
repnz
pop
pop
clc
(bad)
je
push
mov
ret
mov
sub
mov
shl
jmp
dec
mov
outs
and
aam
in
mov
xchg
mov
mov
xchg
int3
cmps
adc
xchg
xor
xchg
push
jle
sahf
inc
xchg
cmp
std
jne
or
cmp
test
cmp
xor
scas
cmp
out
(bad)
mov
data16
mov
add
add
rcr
xchg
(bad)
in
mov
iret
xor
outs
icebp
inc
push
mov
loope
or
jmp
test
in
mov
xchg
stc
retf
mov
or
or
ror
es
cmps
popa
js
xlat
sbb
fcmovu
and
bound
mov
fucomip
adc
iret
mov
movs
popf
sub
iret
retf
pop
add
mov
aas
xor
lds
mov
out
jle
push
fild
pop
into
or
retf
fcom
jae
xor
fs
dec
or
test
cmp
(bad)
xor
arpl
ss
sti
scas
jmp
push
std
test
loopne
inc
call
test
popf
dec
push
and
cmc
retf
push
lock
or
inc
popf
call
pop
fisttp
pop
mul
dec
mov
loope
adc
add
(bad)
jno
clc
fdiv
ficom
jbe
xchg
aas
pushf
rcr
xchg
and
ins
jge
setg
push
(bad)
and
(bad)
retf
pop
xor
dec
mov
movs
pushf
mov
cmp
add
push
retf
clc
mov
adc
adc
sub
movs
call
mov
push
enter
ret
mov
sub
sbb
aam
out
cwde
xor
sub
dec
test
dec
test
add
sahf
pop
mov
pop
add
pop
mov
enter
add
aaa
hlt
and
dec
add
pop
aaa
xor
test
inc
(bad)
dec
mov
iret
cwde
stos
je
and
ror
cmc
mov
jmp
mov
sub
xchg
test
add
stos
jne
scas
cmc
add
push
out
pop
call
adc
in
or
jno
les
cwde
(bad)
adc
push
sbb
jp
in
mov
dec
mov
int3
push
ins
push
cs
push
je
jecxz
cli
adc
rcl
jae
retf
xor
cmp
dec
sub
aad
jne
pop
sti
mov
leave
xor
out
jp
jo
outs
sub
sub
xchg
inc
sub
push
dec
add
ror
jnp
aam
fs
adc
sub
adc
inc
je
dec
movs
ds
enter
cmp
sub
jae
icebp
cli
out
sbb
jge
cmps
push
mov
repz
mov
ins
jns
fs
ror
xor
loopne
push
push
add
cli
mov
cmp
pop
cmp
cmp
fist
das
jmp
push
or
out
sub
jne
hlt
sbb
and
mov
xchg
sbb
xlat
push
pusha
(bad)
hlt
data16
(bad)
xor
out
push
push
addr16
rcr
scas
outs
push
adc
adc
mov
imul
out
enter
ret
xchg
mov
sub
es
jnp
inc
retf
popf
mov
pop
clc
sub
xor
jl
mov
lds
(bad)
adc
call
imul
xchg
sub
mov
jle
push
gs
and
mov
push
neg
test
push
sar
inc
popa
je
je
outs
inc
inc
mov
mov
call
push
sub
mov
lea
(bad)
jecxz
jg
repnz
sbb
sbb
push
ins
pop
(bad)
xchg
arpl
add
or
movs
fs
push
hlt
dec
imul
xor
dec
add
fmulp
dec
pop
scas
sub
pop
call
dec
outs
and
dec
push
adc
test
sub
lods
adc
and
cmc
mov
bound
xchg
leave
and
sub
mov
repnz
or
or
rcr
sub
out
adc
pop
test
ins
test
ja
aad
es
sbb
hlt
add
sbb
hlt
test
xchg
and
int
sahf
or
cwde
int3
xor
adc
jle
out
push
lods
inc
mov
imul
jns
mov
loope
mov
inc
or
in
dec
out
(bad)
scas
or
and
ret
inc
pop
ror
popf
int
mov
fstp
retf
dec
add
into
mov
sbb
mov
in
push
popa
cli
inc
sub
lock
sbb
cli
pop
popf
in
cli
sub
clc
xor
jmp
mov
pop
lahf
mov
ret
rcl
cmp
adc
mov
(bad)
daa
cmp
pop
sbb
add
and
adc
in
xchg
dec
jge
test
stos
xchg
mov
adc
xor
frstor
add
xor
adc
xchg
enter
(bad)
xchg
pop
jb
aad
dec
xchg
loope
push
xchg
jbe
pop
push
mov
add
sqrtps
mov
and
movs
into
pop
retf
(bad)
not
mov
mov
or
sbb
push
call
sub
ss
xor
mov
and
or
imul
test
push
clc
inc
sahf
xor
test
outs
dec
sar
movs
cld
and
cmp
(bad)
pop
pop
adc
nop
in
sub
pop
mov
xor
or
push
daa
cwde
xlat
arpl
ins
mov
add
xchg
cmp
jecxz
imul
add
scas
(bad)
jge
add
call
outs
xchg
push
inc
lahf
popf
adc
sub
sahf
and
daa
jae
repnz
(bad)
dec
jne
ret
gs
mov
adc
adc
mov
in
pop
rcl
sbb
adc
pop
add
mov
test
push
aam
xor
jns
jp
mov
pop
and
jns
push
push
ds
xchg
push
bswap
(bad)
adc
cmp
pop
ret
out
lea
xor
nop
pop
dec
mov
mov
addr16
enter
fs
test
shr
pop
inc
jne
test
inc
pop
sar
cmps
push
mov
mov
in
inc
pop
enter
inc
sti
in
fcomp
push
jge
aam
dec
sub
adc
call
ins
je
mov
mov
clc
stos
jo
or
pusha
cmp
shl
xor
fsubp
mov
lods
mov
or
lods
add
mov
adc
sahf
test
xchg
sub
stc
push
and
inc
enter
out
mov
pop
mov
dec
mov
sub
fist
push
loopne
ins
sub
sbb
mov
outs
sub
jae
shr
pop
or
(bad)
fcom
repnz
sbb
div
mov
jnp
dec
add
add
adc
outs
lods
(bad)
mov
xor
fidivr
mov
inc
aas
mov
addr16
adc
ss
push
sbb
into
inc
jo
mov
xchg
push
dec
push
cmc
mov
(bad)
pop
enter
in
and
ds
and
mov
and
add
push
pop
pop
stc
xchg
int3
jmp
ins
mov
bound
dec
xchg
aam
rcl
adc
inc
iret
cmp
dec
lds
jmp
scas
mov
xchg
outs
mov
imul
cli
add
imul
(bad)
mov
cwde
int3
loopne
out
(bad)
iret
pop
mov
sub
arpl
fbld
push
mov
pop
inc
mov
aam
(bad)
and
sub
inc
iret
dec
dec
dec
inc
fnstenv
ins
cmp
xor
lods
repnz
xchg
clc
aam
int3
ja
icebp
mov
outs
push
push
pop
xchg
or
or
fadd
retf
pop
xchg
add
out
or
jbe
fild
dec
enter
mov
or
cmps
xor
aam
pusha
add
push
cmp
gs
pushf
hlt
pusha
xor
ins
sub
ja
and
fild
inc
addr16
sub
xchg
push
inc
mov
pop
pop
rcr
push
pop
sti
test
xlat
loopne
das
push
push
lods
push
sbb
call
or
clc
adc
inc
lahf
dec
xchg
mov
push
shl
dec
jnp
enter
jnp
xor
inc
mov
jge
jns
nop
cdq
mov
adc
xchg
pop
jb
pop
xor
mov
pop
pop
xor
or
aas
(bad)
push
leave
cdq
push
stos
xlat
jle
sahf
sbb
adc
out
arpl
rcl
ss
inc
fwait
loopne
xor
sub
sub
pusha
aaa
popa
mov
mov
pop
xlat
ficomp
add
pop
lahf
fstp
jnp
div
sub
gs
inc
out
out
pop
mov
sbb
retf
sbb
sbb
cmp
in
js
je
mov
or
sbb
and
imul
ds
aas
push
add
pop
push
int3
in
sbb
stc
aad
imul
(bad)
into
cmp
stos
mov
jmp
in
frstor
jle
inc
adc
fdivr
das
lock
jno
or
cmp
sbb
sbb
pop
leave
scas
sub
xchg
enter
outs
scas
hlt
xlat
push
pop
aas
mov
repnz
jmp
sub
js
or
cmps
adc
or
cmp
daa
ins
call
pushf
ret
ins
js
and
daa
push
jne
dec
inc
(bad)
(bad)
cmps
xchg
aas
fcomp
rcr
mov
pop
scas
dec
fwait
mov
pop
pop
xor
rcl
daa
neg
jp
adc
jae
push
push
xor
icebp
add
fidiv
pop
dec
leave
mov
xor
dec
mov
mov
cmp
mov
daa
and
out
push
jle
shl
imul
xor
mov
pusha
outs
or
push
or
enter
ins
mov
add
fidivr
or
and
xor
dec
cmp
push
pop
jecxz
sub
xor
pop
mov
inc
push
cld
aad
unpcklps
int3
out
xor
dec
or
mov
mov
cmp
jl
push
in
mov
in
or
mov
jbe
movs
dec
pop
push
stos
jecxz
xchg
fistp
(bad)
mov
cmps
aad
inc
mov
mov
sbb
scas
fidiv
or
ds
movs
stos
jne
inc
pop
xchg
xor
out
lock
mov
cdq
or
jp
lock
pusha
jg
sub
clc
xor
inc
sbb
sub
or
mov
sar
cmp
mov
call
cmps
and
(bad)
test
sub
in
adc
(bad)
out
jge
sub
repz
sub
xor
cmps
cdq
inc
in
cmps
fs
push
add
jp
sti
pop
neg
out
cmps
cmp
sub
mov
aas
xchg
jbe
inc
mov
jne
pop
cmp
or
ins
add
in
mov
jo
adc
stc
pop
pop
push
push
movs
cmp
xor
jmp
mov
or
xchg
mov
call
xchg
jecxz
pop
mov
push
adc
cmc
mov
ds
retf
repnz
mov
stos
test
push
mov
mov
sub
in
cwde
ins
xchg
fsub
or
inc
xor
push
pop
movs
test
int
push
inc
in
dec
aad
push
pop
dec
ins
mov
mov
cld
loope
inc
mov
inc
cmps
sub
adc
movs
or
add
clc
mov
cmp
repnz
test
pop
jecxz
lods
mov
int3
leave
cs
lock
mov
(bad)
cld
mov
(bad)
lods
adc
add
(bad)
mov
add
jmp
cmp
jno
fisub
call
test
sbb
gs
stc
dec
or
(bad)
mov
mov
test
push
push
retf
rcr
sub
xchg
pusha
inc
xchg
aas
addr16
xchg
mov
mov
adc
pop
mov
(bad)
jl
in
ret
mov
mov
push
push
scas
push
mov
push
aad
push
mov
ret
mov
clc
pusha
fsubr
dec
sbb
push
cwde
fs
push
ror
mov
and
cmp
lahf
xchg
jne
in
cmp
es
jl
mov
mov
in
xchg
inc
fisttp
leave
mov
ror
mov
stc
call
jmp
sbb
iret
xchg
dec
mov
aaa
lods
call
mov
cwde
xchg
push
xor
into
imul
xchg
jb
js
dec
(bad)
je
xor
jp
(bad)
jnp
je
bound
lods
loopne
push
sub
sti
(bad)
pop
inc
inc
and
and
sahf
rol
imul
minps
shl
dec
mov
repz
sub
mov
retf
dec
sbb
mov
outs
mov
mov
into
std
cmp
aam
test
loop
jl
rol
dec
test
jae
pop
xor
xchg
imul
lds
daa
out
mov
std
sbb
fbstp
retf
out
sbb
push
mov
(bad)
xchg
pop
xor
into
push
fcmovb
in
sahf
jecxz
loop
inc
sbb
cmp
dec
inc
jmp
(bad)
cmp
push
mov
inc
addr16
fcom
xor
sub
out
aas
mov
mov
jo
outs
xor
faddp
call
out
retf
ret
push
cmp
addr16
mov
adc
pop
aas
inc
aas
into
dec
jns
(bad)
pop
clc
or
popf
push
cmp
(bad)
or
jne
into
sbb
mov
sub
popf
mov
sub
sbb
add
inc
movs
inc
adc
inc
xchg
jge
sbb
fld
int3
(bad)
push
gs
mov
adc
jl
dec
add
jno
jne
pop
ins
adc
std
push
jo
hlt
cmp
cmp
dec
cmp
call
call
xchg
repz
add
retf
mov
cdq
inc
xlat
cmp
cmps
or
mov
stos
xor
xchg
stos
or
aad
jo
pop
jle
sub
repnz
out
push
jmp
push
std
sahf
xchg
jg
test
adc
movs
rcr
out
(bad)
mov
mov
push
stc
loopne
mov
cli
rcr
test
and
push
daa
test
(bad)
imul
sti
fcmovne
inc
les
or
(bad)
xor
(bad)
into
xchg
sbb
jbe
data16
pop
pop
int3
pop
xor
mov
xchg
das
sbb
inc
ins
or
jmp
repnz
mov
mov
sub
arpl
mov
loopne
mov
sti
jbe
imul
mov
pop
lods
test
or
fwait
jne
fcom
pop
(bad)
mov
pop
out
loopne
mov
mov
push
ja
call
in
mov
test
cwde
js
test
in
mov
push
mov
sbb
sub
dec
inc
sub
sub
(bad)
cmps
sub
pop
movs
data16
inc
mov
mov
mov
adc
cmp
movs
mov
jmp
sbb
adc
repnz
ret
and
lods
inc
aad
out
imul
ds
retf
neg
and
outs
and
mov
mov
push
in
imul
cmc
inc
je
jmp
test
cmps
xchg
inc
or
mov
push
and
or
fwait
fs
jge
push
out
jp
push
mov
xchg
into
dec
xchg
sbb
dec
push
lahf
mov
or
dec
sub
pop
push
dec
xor
aad
jecxz
add
dec
es
xchg
leave
jecxz
mov
js
cmc
js
rcr
(bad)
stc
and
sub
int
xchg
dec
pop
adc
add
mov
sbb
and
movs
ins
or
cmp
inc
dec
mov
add
ret
cmp
in
fsub
cs
xor
xlat
std
hlt
test
repnz
sub
out
jno
mov
sbb
inc
hlt
dec
push
xchg
jecxz
jp
in
jne
add
(bad)
out
fwait
(bad)
(bad)
pop
push
stos
fidiv
adc
iret
adc
enter
lea
cmc
cmp
cli
pop
mov
outs
or
es
or
mov
rol
mov
movs
mov
fidivr
mov
popf
arpl
jno
arpl
pop
fwait
loopne
pop
and
and
pop
aaa
(bad)
xor
retf
pop
ins
or
pop
mov
dec
test
rol
adc
jne
test
fs
sbb
or
cmc
aaa
loope
fadd
mov
call
enter
cmp
fist
ja
adc
or
fdivrp
cmp
or
lods
mov
xchg
(bad)
xor
dec
mov
dec
cdq
fs
mov
mov
daa
aam
imul
(bad)
sbb
out
or
mov
repnz
xor
jp
fs
scas
bound
test
push
xchg
call
add
mov
data16
mov
je
mov
jne
push
add
xchg
cli
jmp
xor
jno
imul
lock
jnp
or
mov
jnp
test
inc
cmp
popa
or
mov
jg
scas
jmp
pusha
xchg
aad
jno
cmp
adc
fcomp
xchg
outs
fdiv
add
sub
or
test
ins
mov
pop
add
fcompp
outs
lods
pop
je
push
(bad)
leave
add
hlt
cmp
lds
dec
mov
sbb
push
push
mov
xchg
loope
(bad)
add
mov
cdq
cld
xor
push
out
push
adc
js
nop
mov
out
cmp
add
add
sub
push
sbb
push
or
sbb
push
xor
jg
add
inc
cmp
cdq
lds
or
pop
adc
(bad)
fst
ins
loopne
movs
jl
popf
es
add
ins
shl
ss
xor
jb
mov
in
js
pop
vcvtsd2ss
cmc
out
lods
sti
ja
xor
cmps
neg
idiv
mov
mov
call
in
mov
test
or
test
sahf
lea
mov
sahf
dec
push
sti
stos
sahf
mov
push
in
aam
push
or
lock
add
sub
push
aam
mov
pop
xor
iret
jae
pushf
pop
sub
push
movs
pop
fstp
loop
fucomip
xor
mov
iret
pop
pop
mov
inc
lock
jns
push
clc
(bad)
cdq
not
cmp
sub
test
fist
xchg
aaa
lahf
mov
mov
xor
sbb
inc
xchg
into
jbe
fmul
adc
test
rcr
inc
repz
cli
mov
cld
adc
dec
test
sub
and
cmp
or
lea
mov
jmp
repz
jmp
js
jge
arpl
sbb
cmp
and
sti
(bad)
pop
push
sub
pop
mov
sbb
and
cld
xchg
dec
push
ret
dec
inc
jmp
ret
mov
cmps
inc
sub
dec
daa
stos
add
not
repnz
xchg
fiadd
push
mov
pop
xchg
push
cs
in
retf
popf
sub
pop
mov
pop
retf
(bad)
jnp
inc
(bad)
outs
into
je
(bad)
mov
sbb
aaa
cld
adc
imul
jge
loop
sub
pop
jae
adc
jp
inc
ss
in
or
and
push
lds
call
mov
jns
ja
jns
loop
add
inc
cmp
cwde
cmc
fwait
out
inc
(bad)
cmc
dec
pop
imul
push
ret
pop
jecxz
jmp
ret
outs
clc
das
cmp
fnstenv
int3
jecxz
cmp
aaa
ss
fcom
fcom
cmp
dec
lods
fcmovne
sub
pop
xor
je
add
push
mov
mov
add
add
jl
movs
sar
stos
icebp
xor
push
xchg
sub
fdivr
std
add
shl
xor
imul
jp
or
lods
scas
test
inc
inc
pusha
outs
mov
sbb
ret
jg
pop
(bad)
xchg
fs
sti
cmp
dec
hlt
in
repnz
inc
mov
xchg
(bad)
mov
inc
cmps
or
xlat
jbe
(bad)
ficom
gs
push
ins
dec
lods
add
call
sti
pushf
xor
test
inc
inc
sub
pushf
add
or
adc
pop
mov
mov
xchg
into
sbb
ficom
or
movs
fldenv
xchg
lahf
sub
push
movs
(bad)
outs
call
pop
leave
arpl
icebp
leave
mov
hlt
inc
mov
adc
mov
ffreep
fwait
jg
sbb
mov
add
mov
dec
push
xchg
addr16
push
ret
ror
adc
pop
call
xor
test
and
movs
iret
frstor
sub
mov
cmc
pusha
mov
jnp
(bad)
push
data16
xchg
dec
bound
push
sbb
adc
jo
push
jecxz
push
outs
cld
inc
ja
add
xchg
push
call
int
cmps
and
cdq
popf
std
pushf
imul
movs
in
js
push
sbb
movs
or
int3
stos
or
call
inc
lods
cmps
dec
push
jae
(bad)
jno
xchg
push
(bad)
jne
mov
sub
test
or
(bad)
ds
mov
cmp
cmp
inc
test
icebp
add
jno
bound
(bad)
(bad)
lods
int3
and
test
test
je
sbb
mov
repnz
in
and
jb
cmp
or
or
dec
add
lods
sar
pop
add
xor
cmp
sub
push
addr16
sub
cwde
jle
loopne
das
mov
pop
sub
pop
jne
arpl
pushf
(bad)
in
add
sar
and
ss
jp
push
aad
inc
dec
fwait
retf
scas
loop
mov
rol
lods
in
adc
cmp
push
outs
in
in
pop
push
(bad)
cmps
pop
sub
xchg
xor
mov
sbb
out
imul
pop
test
imul
cmp
lahf
test
adc
jmp
inc
rcl
pop
jge
push
mov
cmp
sbb
or
aam
adc
mul
sbb
std
sbb
inc
pop
add
rcl
test
stos
xor
add
fidivr
xchg
shl
jns
cmp
add
mov
pop
dec
xor
enter
adc
jno
dec
dec
js
in
rcr
aad
or
push
inc
daa
and
sub
sbb
or
or
retf
jp
(bad)
ret
sahf
rcr
out
lods
and
sub
cmc
and
mov
mov
add
rol
jbe
imul
adc
adc
mov
mov
xchg
call
xchg
mov
mov
xlat
sti
and
(bad)
inc
cmp
fist
mov
cmp
mov
dec
or
jmp
imul
arpl
or
cmp
(bad)
pop
lods
push
int
(bad)
mov
jmp
xor
pcmpeqw
sbb
cs
jl
add
outs
sub
push
jp
icebp
push
or
imul
add
cmp
jo
xchg
sahf
shl
cmps
stos
mov
int
out
ja
loop
lds
outs
fiadd
in
pop
mov
aam
es
sahf
mov
jmp
push
jne
pop
cmc
jnp
in
jnp
or
sbb
jecxz
dec
movs
cli
and
(bad)
or
mov
push
pop
mov
xchg
lods
test
lock
adc
fsubr
fsub
repnz
push
pop
inc
xchg
call
imul
jmp
in
jp
jns
mov
xchg
dec
(bad)
fld
out
pop
ins
xchg
pop
gs
loope
sub
mov
out
jle
cmc
sub
arpl
jecxz
enter
lea
ins
clc
pop
add
fist
push
adc
and
push
sbb
outs
in
(bad)
jb
dec
cld
cdq
adc
ss
dec
(bad)
sti
mov
inc
inc
push
je
xchg
int3
sbb
cmps
mov
mov
mov
or
loop
call
data16
inc
outs
int3
cld
mov
mov
mov
(bad)
repnz
xchg
mov
add
fs
ret
sub
jo
loope
div
test
stos
xor
fadd
xchg
add
loopne
nop
sub
sub
rcr
mov
pusha
retf
mov
pop
jns
cmp
push
shr
jmp
mov
jle
cmps
xor
enter
inc
cmps
xchg
sbb
jle
pop
push
das
scas
rcr
pop
retf
daa
ret
pop
dec
aaa
aad
mov
jle
(bad)
xor
inc
jge
adc
xor
fdivr
inc
test
les
push
and
(bad)
nop
mov
daa
aam
jbe
cmp
cmp
jg
stc
jl
ret
fidivr
jge
push
mov
fcomp
inc
sub
sbb
pop
repnz
mov
aas
out
push
js
js
jb
(bad)
push
sbb
and
sbb
mov
xor
add
cmp
fldcw
mov
jge
dec
lods
imul
dec
pop
test
ins
add
dec
in
(bad)
(bad)
(bad)
sub
les
push
fisub
in
and
mov
es
sbb
sub
inc
sbb
scas
or
inc
enter
mov
sub
xor
adc
pop
jmp
and
jb
jne
mov
pop
jmp
ret
dec
imul
(bad)
scas
inc
dec
out
pop
mov
sub
jae
lahf
push
dec
scas
cdq
jp
mov
push
repz
inc
imul
rcr
ins
cmp
js
ret
retf
movs
out
inc
fwait
rcr
imul
clc
sub
rcl
dec
hlt
movs
adc
hlt
cmp
mov
popf
jnp
jne
in
aas
fcmove
ror
into
xchg
push
dec
out
ret
neg
or
ret
mov
push
int
cmp
cwde
pop
jge
into
sbb
pop
sbb
dec
adc
pop
jecxz
mul
vhsubps
fs
xor
cmps
jne
clc
std
aad
push
popf
jle
push
dec
add
in
adc
pop
fist
jne
arpl
jo
mov
fsub
fadd
pop
sbb
jae
push
pop
push
adc
inc
fisub
mov
push
shl
movs
arpl
pushf
sbb
pop
call
xchg
push
test
outs
xchg
mov
out
dec
data16
data16
xchg
mov
addr16
jnp
aad
pop
loop
(bad)
dec
(bad)
mov
repnz
fcom
sti
pushf
mov
cmp
sbb
mov
out
push
mov
es
xor
scas
mov
push
ins
jg
cmp
push
test
or
(bad)
imul
cmc
pop
sbb
loopne
xchg
ror
xchg
jns
pop
jns
mov
jl
fs
sbb
cli
sbb
out
fs
dec
(bad)
stos
jmp
std
(bad)
sub
xor
mov
fdiv
dec
adc
mov
adc
push
ret
sbb
mov
sub
push
das
mov
(bad)
push
pusha
cmps
ficomp
in
inc
shl
fs
test
cdq
cld
ret
adc
jmp
(bad)
push
mov
inc
jns
and
rol
js
adc
sbb
nop
push
iret
mov
lods
mov
xor
ret
(bad)
xchg
jl
mov
xchg
xchg
add
jns
jp
dec
(bad)
int
mov
mov
dec
xchg
dec
push
jecxz
pop
xchg
popa
cs
or
pop
sbb
adc
adc
xchg
ss
int3
sbb
add
in
rcr
cmps
in
popa
xchg
out
call
or
data16
jae
icebp
div
mov
xchg
mov
pop
cld
push
mov
leave
push
and
and
mov
(bad)
jmp
pop
mov
aam
fnstcw
aas
pop
sub
inc
in
push
movs
test
adc
jp
movs
test
adc
add
stos
mov
xchg
mov
jo
mov
mov
xor
sti
(bad)
inc
enter
jmp
dec
mov
jg
das
inc
fistp
bound
sbb
ins
test
xor
push
fidivr
repnz
enter
push
mov
or
retf
adc
or
lea
sbb
ds
lods
loopne
sub
add
dec
inc
in
outs
mov
dec
jmp
push
imul
or
sti
repz
out
pop
in
jae
sbb
xchg
adc
push
movs
pop
push
ja
add
inc
dec
test
aam
adc
push
test
xchg
out
sbb
and
aaa
test
dec
retf
push
arpl
dec
and
div
jnp
fwait
out
add
rcl
addr16
pushf
cmps
adc
aad
hlt
dec
pusha
cmp
sbb
(bad)
sar
pop
outs
retf
pop
xchg
sbb
cmp
gs
xor
sar
es
imul
out
xor
imul
mov
xchg
inc
sub
test
(bad)
xchg
fsubr
cmp
cmp
cmp
mov
inc
inc
add
inc
int
dec
retf
pop
mov
and
les
pop
lahf
xor
ins
xchg
aas
or
cmp
fiadd
push
jecxz
adc
jge
ja
pop
(bad)
mov
dec
fist
or
jnp
sti
cmp
mov
std
stos
movs
add
loopne
call
pop
cli
inc
sar
movs
es
mov
cs
fs
inc
pop
pop
ss
ja
push
xchg
mov
inc
ret
lea
or
add
adc
push
add
xchg
or
mov
jmp
sar
mov
hlt
mov
aad
and
fistp
imul
ins
in
and
js
xor
inc
les
clc
dec
and
pushf
mov
cdq
test
movs
das
jns
shl
fbstp
fstp
mov
adc
imul
jo
fcom
js
xor
push
shr
push
sub
push
repz
dec
pop
pop
pop
into
jle
xor
repnz
add
loop
or
repz
xchg
adc
push
inc
fbld
cli
add
mov
aam
mov
add
int3
ret
scas
push
(bad)
icebp
aaa
movs
out
cwde
fldenv
xor
(bad)
(bad)
push
push
jl
bound
jp
popf
mov
pop
cmps
loopne
jns
retf
cwde
xchg
pop
in
in
lods
pop
cdq
adc
(bad)
fs
jne
sbb
jo
cmps
dec
jbe
rcr
adc
jne
retf
test
out
push
addr16
push
je
pop
cld
dec
cmp
jle
retf
jl
inc
pusha
xor
(bad)
sub
pop
dec
aam
pop
into
push
ret
sti
or
inc
scas
or
jmp
cmps
mov
adc
movs
repz
pop
stos
in
enter
mov
push
imul
jg
bswap
adc
push
daa
pop
pop
bound
test
mov
xlat
adc
inc
add
rcl
dec
dec
lea
and
mov
or
mov
repz
pop
xchg
aad
mov
cs
(bad)
sub
out
add
repnz
push
and
xor
(bad)
daa
inc
sbb
cmp
mov
jecxz
push
aas
out
pusha
cmps
call
inc
bnd
mov
dec
or
or
inc
jmp
cwde
imul
cmp
inc
addr16
rcr
pop
lock
inc
or
call
jmp
lea
xor
sbb
xor
pop
pushf
and
jmp
dec
dec
leave
dec
dec
mov
mov
add
pushf
add
xlat
xchg
bound
push
mov
jge
and
xor
adc
popw
aas
push
jmp
(bad)
sbb
inc
(bad)
add
mov
jle
jb
lds
in
or
or
mov
stos
test
xor
out
not
jge
sub
fmul
dec
push
jmp
push
and
sbb
das
pop
aam
retf
bound
hlt
out
and
pop
les
inc
dec
cmp
adc
mov
jp
cmp
dec
lock
bound
push
(bad)
hlt
lea
cmp
sub
and
jp
lahf
xor
cmps
inc
loopne
pop
mov
xor
push
pop
add
lds
or
inc
pop
xlat
pop
(bad)
fimul
push
push
out
add
sbb
daa
ss
mul
mov
lds
loop
imul
inc
fstp
sbb
sbb
daa
jb
push
add
mov
cdq
lds
mov
add
xor
call
loope
push
xchg
retf
aad
add
sbb
enter
or
(bad)
std
sub
clc
xchg
fwait
dec
arpl
push
adc
add
psubb
dec
mov
add
ja
push
sbb
add
mov
ins
push
xor
int3
and
adc
sahf
daa
aaa
enter
aad
sub
xor
pop
lods
pop
push
nop
mov
mov
inc
mov
mov
jmp
lock
push
(bad)
in
pusha
jg
pop
cli
cli
mov
inc
rcr
or
xor
frstor
(bad)
fist
add
test
and
xchg
mov
jg
sbb
stos
sbb
ins
adc
out
ret
push
mov
cli
or
mov
int
sbb
vpaddsw
inc
add
sbb
cmp
lock
sbb
movs
sti
retf
push
push
adc
cld
cmc
nop
mov
das
add
cmp
sti
pop
xchg
dec
sbb
test
retf
jl
outs
add
xchg
inc
imul
mov
lock
test
add
sub
push
shl
adc
xchg
dec
pop
inc
adc
(bad)
test
push
jnp
pop
mov
sbb
and
xchg
gs
cmp
pop
mov
sbb
int3
xchg
scas
pushf
mov
mov
sub
mov
sbb
dec
inc
mov
test
jnp
mov
aas
xchg
fadd
or
aam
xor
ss
movs
push
xchg
pop
pop
push
xor
mov
cdq
leave
and
pop
mov
sub
sti
movs
ins
mov
or
mov
inc
(bad)
(bad)
mov
mov
xchg
pop
xor
sbb
stos
or
dec
mov
jne
fadd
push
daa
cwde
mov
loopne
sbb
in
cmp
push
jnp
int3
pop
rcr
mov
hlt
sti
(bad)
pop
mov
iret
and
std
sub
jne
jbe
pop
push
sar
lock
mov
push
xchg
jl
aam
mul
(bad)
push
xor
(bad)
dec
inc
outs
mov
scas
dec
dec
fidivr
repz
maxps
das
mov
or
jae
stos
shl
xchg
push
retf
xor
cbw
fbld
rol
lods
es
xor
cmp
lea
xchg
mov
jp
push
hlt
dec
jp
and
jnp
jnp
hlt
(bad)
fild
pop
mov
loop
dec
(bad)
dec
retf
mov
jne
add
aaa
inc
xor
push
xsaves
cmp
mov
inc
(bad)
jmp
jmp
xor
out
inc
stos
out
imul
mov
mov
xor
sub
les
leave
(bad)
mov
jne
or
inc
movs
inc
outs
and
xchg
imul
arpl
add
and
nop
mov
shr
mov
push
(bad)
ret
fnstsw
sub
pop
xchg
add
jl
stc
inc
es
mov
ret
in
das
fist
dec
add
iret
repz
cmp
data16
sub
jl
dec
push
add
popf
adc
pop
xchg
stos
jbe
dec
inc
jae
mov
ss
scas
mov
mov
push
xchg
cmp
mov
jnp
test
in
call
or
aam
bound
es
sub
loop
iret
stos
cmc
add
mov
stc
jmp
pop
jne
ret
addr16
dec
cs
jo
inc
sub
imul
cmp
or
push
test
das
push
xchg
les
ja
jecxz
(bad)
sub
int
jnp
push
mov
ret
retf
add
lods
dec
push
imul
mov
sub
pop
push
dec
jns
lea
sub
aam
(bad)
xchg
jmp
in
mov
pop
test
xchg
add
add
ret
adc
sar
add
adc
xchg
jle
push
xchg
jge
in
ror
gs
fadd
imul
iret
stc
(bad)
adc
int3
stos
scas
js
or
lds
out
addr16
pushf
cld
xlat
cmps
push
jnp
dec
out
xchg
sbb
icebp
mov
lods
movs
cmp
rol
xchg
inc
dec
jge
dec
inc
js
std
jmp
push
inc
nop
xchg
mov
cmc
stos
push
pop
inc
cdq
or
xor
lock
sbb
test
int
js
mov
imul
mov
pcmpgtb
ins
into
xchg
shl
sub
sbb
push
push
int
scas
sbb
mul
mov
shl
inc
cmp
fs
and
lods
mov
(bad)
mov
in
push
cmp
or
dec
lock
sbb
or
ds
das
btc
fdivr
clc
xchg
pop
icebp
add
subps
sbb
or
mov
loop
nop
xor
loop
sbb
jno
xchg
addr16
jbe
adc
jb
jo
test
cmp
int3
mov
mov
cli
ds
stc
js
out
mov
test
jmp
or
aam
cmp
pop
aaa
pop
mov
adc
mov
adc
dec
mov
sbb
or
xchg
push
sub
das
cmp
mov
lds
stc
retf
sbb
xchg
leave
out
rcl
(bad)
push
out
enter
add
mov
and
fdivr
push
xor
outs
and
in
inc
clc
sub
bnd
enter
ss
add
std
xor
xor
jo
and
jb
cmp
test
lock
sbb
sub
int3
stos
mov
inc
jo
ins
dec
rcr
push
inc
mov
aad
sahf
fistp
jl
repnz
stc
or
jb
shl
pop
jbe
inc
mov
push
test
paddusb
or
in
cmc
mov
xchg
adc
mov
cmp
add
add
jns
into
jecxz
std
ins
pushf
pop
push
fwait
scas
xor
aad
pop
in
cmp
jle
cmp
or
jo
int
cmp
adc
test
iret
stc
xchg
mov
push
cwde
jle
shl
xchg
cmp
push
add
jo
cld
add
mov
dec
in
mov
jp
mov
out
repnz
stos
pop
xchg
rcr
fld
mov
dec
inc
retf
sbb
ins
xchg
push
ja
and
les
test
in
pusha
js
retf
outs
fdivr
mov
cmps
mov
xchg
sub
xlat
inc
dec
es
mov
xchg
iret
scas
jb
out
fcmovnb
cmps
xor
dec
int3
jmp
pop
or
enter
fcomp
neg
test
dec
fcmovne
cmps
or
mov
add
sub
and
shl
push
xor
add
ja
out
jmp
inc
inc
in
adc
test
aam
push
inc
sbb
mov
sbb
sbb
aad
pop
cmp
dec
(bad)
aam
fdivr
jge
adc
out
daa
xchg
std
imul
sahf
sbb
fcmovbe
aas
or
out
ss
push
pusha
lahf
mov
(bad)
push
jns
pop
pop
lods
push
xor
int3
sub
dec
and
imul
jae
movs
retf
cmc
and
inc
add
cli
aaa
std
std
inc
sub
fdivr
mov
in
add
jl
mov
movs
rol
das
sbb
fisttp
add
cmp
xchg
int
(bad)
jge
dec
je
ret
imul
push
jge
mov
out
dec
cld
xchg
std
and
xor
movs
dec
into
cmps
sahf
pop
push
or
inc
call
ja
mov
jg
sub
mov
xor
cmps
fcom
xchg
sti
xlat
mov
pusha
loop
fadd
push
mov
push
js
pop
out
stos
mov
sbb
imul
leave
mov
push
inc
jae
mov
leave
push
fistp
xor
aad
jge
inc
pop
push
std
xchg
xchg
cld
or
push
int3
imul
mov
fwait
stc
rcl
or
arpl
ss
sub
pop
and
aas
mov
stos
in
setge
xchg
lahf
adc
or
call
mov
daa
inc
loop
and
retf
xchg
fucom
pop
retf
(bad)
fbld
jnp
cmps
jecxz
xchg
cmp
jle
pop
cld
dec
cld
and
mov
jmp
add
inc
loopne
or
mov
inc
imul
dec
addr16
sti
inc
aad
ins
inc
cmp
mov
dec
fidiv
xchg
call
ins
inc
jmp
mov
ins
inc
jb
stos
data16
shl
mov
inc
add
(bad)
outs
neg
sbb
mul
fs
fsub
dec
xchg
pop
mov
mov
and
loopne
and
adc
mov
adc
xchg
sub
arpl
inc
push
gs
cmp
jle
cmp
ja
inc
sub
cmp
fnsave
xor
in
push
dec
mov
repnz
mov
mov
hlt
sub
das
fisub
ret
or
jg
sahf
ins
lds
cld
cmp
mov
sar
cmp
fs
jns
jbe
pop
cld
fwait
xchg
idiv
shl
test
jns
and
pushf
mov
rol
adc
fmulp
pop
(bad)
out
out
aas
test
and
bound
fwait
scas
adc
enter
push
ret
inc
dec
jns
lock
mov
jbe
jmp
mov
lods
fsubrp
mov
out
sub
and
int3
push
jmp
add
sub
add
test
movs
(bad)
setns
inc
jg
retf
mov
mov
or
inc
(bad)
test
sub
fiadd
mov
dec
enter
call
fimul
xchg
mov
out
add
scas
cld
ret
jne
xor
dec
retf
pusha
mov
or
dec
sbb
push
jg
inc
sbb
cmp
ret
sub
aam
xchg
rcr
xor
cmp
push
cmps
sub
leave
adc
retf
shl
out
cmps
xor
aaa
movs
(bad)
jmp
mov
add
or
inc
pop
pop
shl
sub
cmp
mov
dec
loope
outs
ret
mov
fwait
push
jmp
push
mov
mov
stc
movs
inc
fimul
in
xchg
mov
(bad)
(bad)
fsub
xor
rcr
shl
jne
cmp
inc
lea
fistp
je
xchg
jg
movs
call
fcmovnu
jge
out
sti
adc
cmp
inc
leave
dec
(bad)
xor
add
test
stos
add
ja
not
and
push
fld
test
rcr
retf
jl
int3
shl
mov
xor
mov
dec
sub
test
retf
icebp
test
out
sub
fiadd
dec
cli
cmp
jbe
call
ds
push
iret
pop
cmp
push
fcomip
add
cmp
leave
out
or
addr16
test
and
pop
outs
ins
cmp
fwait
mov
mov
mov
jns
ficom
add
fld
fldcw
ja
test
mov
jno
and
xchg
test
xor
lahf
test
inc
push
mov
ror
repnz
je
or
push
cli
sbb
mov
xchg
shl
mov
push
and
mov
dec
and
enter
ret
or
outs
mul
icebp
pandn
mov
fwait
pop
push
movs
out
xchg
jo
inc
mov
(bad)
and
ds
and
xchg
mov
aas
sub
in
pop
mov
mov
push
adc
imul
ja
jmp
push
push
sbb
dec
or
jo
mov
add
movs
cmps
add
mov
adc
scas
sub
outs
out
(bad)
shr
mov
adc
dec
pop
mov
and
and
jle
lods
add
cmp
mov
inc
call
cli
jae
and
aad
nop
mov
fmulp
sub
or
jo
mov
and
popf
adc
jae
ds
or
test
jne
push
rcr
std
stos
dec
xlat
add
jmp
push
out
loopne
imul
mov
ins
dec
or
add
push
(bad)
adc
or
out
(bad)
out
cmp
adc
loopne
pop
cdq
ins
mov
arpl
add
cmp
cmps
or
popf
out
lods
jmp
aaa
add
not
push
test
aam
gs
pop
sub
xchg
mov
aas
xlat
adc
shl
pushf
mov
adc
sbb
sbb
pop
addr16
push
mov
sbb
movs
dec
gs
jle
in
adc
jl
xchg
push
adc
push
dec
pop
ins
inc
cmps
lods
cmps
xchg
sub
push
cmps
sub
aam
mov
add
xlat
pop
lea
fs
outs
out
imul
jmp
popf
(bad)
faddp
add
lock
call
aam
cmps
inc
xchg
test
mov
push
inc
out
sbb
xor
xor
aas
out
inc
lahf
ret
pop
jl
(bad)
xchg
test
push
and
pop
cdq
xchg
adc
fadd
or
adc
mov
mov
mov
retf
and
jns
sbb
cmp
jo
inc
rcr
ficom
(bad)
jl
ins
mov
jmp
(bad)
xchg
fld
ficomp
mov
mov
in
cmp
fs
cmp
mov
movs
mov
bound
lods
repnz
add
dec
jl
push
fcmovnb
dec
mov
mov
std
dec
inc
add
out
mov
pop
call
in
fld
cmp
pop
iretw
push
ja
test
cmp
xor
jle
les
dec
add
leave
push
cmp
imul
jnp
pop
dec
pop
or
mov
sbb
cwde
adc
iret
inc
jno
cli
inc
enter
divps
repz
jbe
pop
cs
repz
not
(bad)
les
adc
fisubr
fs
cs
cmp
lock
mov
pop
pop
xor
xor
and
sub
nop
pop
push
sar
popa
adc
inc
repz
jp
cli
sub
pusha
(bad)
fild
adc
mov
iret
xor
or
adc
or
dec
push
mov
scas
imul
and
test
xchg
fild
(bad)
cmps
cdq
pop
lods
adc
inc
and
lahf
in
mov
mov
push
gs
rcr
loope
sti
daa
ins
pop
fcomip
gs
add
cmc
xchg
dec
(bad)
push
jmp
cdq
ins
shl
in
hlt
aaa
or
mov
js
ins
lea
jnp
call
jl
add
mov
ja
dec
mov
lock
icebp
(bad)
pop
add
push
ds
js
into
dec
cmp
sbb
mov
xor
test
stc
es
enter
icebp
ret
push
cmps
outs
mov
xchg
(bad)
ror
gs
in
adc
lods
or
arpl
or
xlat
rcr
jecxz
xchg
jno
inc
xor
shl
ja
scas
mov
mov
scas
pop
lahf
ror
mov
xchg
cli
and
xor
inc
icebp
dec
adc
inc
cmp
rcl
adc
cmp
sub
mov
in
hlt
inc
ins
div
adc
push
(bad)
hlt
aad
mov
xchg
ins
mov
mov
dec
data16
xchg
fs
cmps
cmp
push
cld
cdq
push
popf
sbb
mov
loop
or
imul
(bad)
in
push
scas
lock
add
inc
inc
mov
lea
jmp
shl
xor
aam
cmp
jl
add
pop
fs
movs
daa
in
(bad)
hlt
mov
rcr
mov
enter
pop
rol
sbb
jge
ja
ja
ror
push
ss
pop
jne
push
dec
cmp
push
sub
ficomp
push
or
add
mov
loopne
inc
sahf
mov
(bad)
idiv
mov
cdq
mov
jle
pop
retf
push
pop
aam
aas
pop
nop
lods
mov
scas
lea
aad
push
outs
pop
(bad)
sub
mov
out
mov
cdq
pop
psubsb
mov
sar
sbb
fidiv
hlt
lock
div
arpl
sahf
mov
outs
push
push
jo
adc
add
ror
iret
popa
xchg
jp
pop
jp
in
out
mov
mov
stc
das
cmp
cli
bnd
jno
mov
dec
xor
sbb
xor
out
inc
xor
scas
fucom
clc
xor
das
not
ins
std
btr
mov
adc
fbstp
(bad)
mov
cmp
fs
push
cld
sti
adc
cmp
js
push
add
xor
(bad)
mov
mov
retf
nop
xor
dec
daa
in
js
sub
or
loope
cld
test
daa
inc
xchg
mov
inc
push
lea
test
xchg
es
das
xchg
add
add
xor
repz
stos
jbe
and
mov
mov
dec
jecxz
xchg
data16
fcomp
mov
mov
mov
enter
(bad)
inc
aaa
rol
fldcw
jnp
fnstcw
inc
rcl
mov
push
or
ret
dec
js
mov
sub
(bad)
push
test
mov
sub
jb
lea
mov
mov
cmp
sar
add
lock
loope
sub
cs
sahf
cmp
test
dec
add
jmp
adc
(bad)
pop
xchg
mov
push
cmc
and
icebp
add
test
inc
mov
test
sbb
inc
test
and
lahf
cwde
int3
jg
jp
mov
xor
inc
push
mov
sti
add
xlat
inc
fist
xor
or
jge
inc
mov
arpl
das
sub
xor
nop
add
xchg
jae
movs
xor
or
add
into
jo
pop
sub
pop
(bad)
push
popf
fs
xchg
and
call
mov
inc
lods
cmp
adc
shl
ds
push
in
jne
shl
mov
cmp
sbb
jo
xchg
into
stos
(bad)
clc
or
and
or
ss
jl
in
xor
or
test
out
dec
inc
push
ret
mov
mov
xor
sub
jae
mov
mov
add
and
sbb
dec
jge
push
mov
inc
test
repz
mov
xor
sub
fsub
cwde
scas
(bad)
cmp
sub
mov
ins
stos
xchg
gs
and
xchg
push
fstp
and
cmc
(bad)
cmp
jle
icebp
jo
cmp
xchg
(bad)
cmps
xor
mov
(bad)
int3
ror
lds
inc
mov
push
add
ja
imul
scas
lock
(bad)
lds
sbb
popa
dec
sahf
lods
sub
jmp
adc
mov
(bad)
jle
(bad)
std
inc
inc
mov
sub
sbb
shl
outs
in
push
sar
imul
pop
lods
adc
and
dec
pop
repz
add
mov
mov
iret
loopne
xor
mov
(bad)
imul
(bad)
sub
test
cwde
inc
aas
jp
sub
sub
and
mov
pop
fdiv
sahf
movs
inc
jp
pop
sti
or
adc
in
jne
test
sbb
test
sub
ret
stos
(bad)
in
push
test
add
call
aad
xchg
or
(bad)
pop
jne
(bad)
movs
adc
cmp
sbb
ss
pop
aas
xlat
fistp
push
sahf
mov
push
push
mov
int3
sbb
fs
in
push
pop
pop
push
call
mov
xchg
push
push
push
icebp
mov
fcmovb
fimul
and
pop
movs
lods
xor
push
xor
pop
xor
xchg
xchg
xor
sub
dec
(bad)
push
mov
inc
mov
iret
loop
adc
lahf
push
xchg
jb
dec
mov
clc
js
dec
in
rcr
ss
stos
mov
sar
mov
xchg
ss
imul
add
test
dec
les
adc
ret
adc
sbb
add
cmp
xchg
ja
scas
cmps
jmp
mov
mov
jmp
jno
nop
mov
xchg
fbld
shr
aam
xor
dec
nop
div
fnstsw
push
fiadd
jbe
js
pop
loop
leave
popa
sar
jle
les
sbb
(bad)
cmp
fist
ds
dec
repz
inc
mov
lds
dec
jle
ficomp
arpl
in
xchg
lods
arpl
add
xor
push
retf
bound
jne
jmp
stos
cmp
fnstenv
mov
dec
pop
cwde
xchg
sub
ftst
ret
into
stc
stos
jmp
push
mov
push
cld
xor
gs
dec
mov
mov
and
mov
and
jp
mov
push
push
(bad)
pop
jmp
xchg
gs
sbb
mov
ja
ret
fadd
arpl
jg
pop
dec
sub
enter
dec
enter
or
xor
call
mov
outs
ds
shr
lock
neg
loope
adc
aad
dec
cmps
mov
aam
inc
inc
mov
cli
adc
bound
adc
jmp
mov
cdq
and
add
(bad)
dec
push
sar
fistp
or
aam
lahf
retf
ins
cwde
scas
xchg
and
popa
or
rcl
push
inc
mov
call
jecxz
fild
pop
int3
add
dec
retf
das
out
xor
popa
sub
outs
xor
scas
pop
dec
xlat
xor
add
xchg
outs
dec
or
lock
xor
shl
mov
mov
lahf
pop
xlat
cmps
jnp
push
imul
push
call
jno
jmp
fadd
retf
mov
sbb
jb
mov
sbb
(bad)
cmp
getsec
push
xor
test
fadd
je
ret
xor
ja
jl
push
stos
sbb
arpl
bound
xchg
inc
imul
imul
pop
pop
aad
xchg
stc
mov
xor
inc
inc
dec
and
imul
sbb
outs
int3
mov
das
cwde
std
mov
imul
pop
dec
xchg
dec
mov
ins
mov
xchg
cmps
sbb
xchg
sub
aas
jb
xor
call
mov
push
mov
add
dec
push
ficomp
clc
nop
shl
ret
and
loope
test
sub
sub
mov
jecxz
lods
and
dec
and
jmp
xchg
cwde
loope
xor
lods
call
hlt
sub
out
imul
int3
and
add
mov
adc
das
xor
or
pop
xor
ja
sar
xchg
out
and
xchg
(bad)
pop
jne
out
fwait
add
loope
ret
adc
mov
or
sub
adc
xor
inc
ret
pop
jne
bound
mov
push
shl
pop
sub
inc
movs
cs
xor
add
cmc
xor
cmp
retf
fcmovu
(bad)
xchg
xor
mov
sub
pop
xchg
sub
pushf
pop
or
sub
mov
fdiv
jp
dec
mov
je
sub
rol
adc
repz
adc
fild
outs
cli
push
or
push
fs
jp
sub
rcl
mov
push
addr16
popa
shl
mov
je
into
shl
dec
shl
xchg
xlat
sbb
out
mov
mov
pop
popa
mov
jg
dec
call
mov
xor
inc
xchg
fsubr
bnd
cld
cmps
push
scas
dec
fsub
rcr
fcom
test
stos
dec
mul
enter
mov
mov
mov
add
pop
loop
jnp
adc
jnp
pop
add
dec
mov
aad
xor
mov
sbb
hlt
(bad)
xlat
stos
jbe
fstp
arpl
xor
jg
pusha
lahf
jg
adc
in
pop
and
cmp
dec
test
mov
gs
mov
xor
repz
ret
shr
jmp
mov
pop
jmp
call
je
iret
mul
xor
shl
fmul
shr
test
scas
mov
add
mov
adc
cld
(bad)
sar
mov
or
imul
and
mov
je
sub
xor
jp
inc
dec
stos
mov
adc
cmps
das
jb
push
test
sub
inc
mov
(bad)
rcr
xor
adc
ret
inc
sbb
mov
pop
cmp
push
dec
pop
addr16
sbb
xor
adc
inc
add
imul
mov
cmp
inc
call
dec
call
jae
enter
loope
sub
pop
mov
mov
outs
add
jne
(bad)
fisubr
or
jnp
fistp
shr
cmps
sub
jg
(bad)
ins
or
pop
jb
fcom
mov
xlat
pop
cmc
into
dec
ins
dec
mov
mov
and
fbld
nop
mov
push
xchg
ret
fnstsw
popf
pop
and
push
fdiv
stc
jp
push
add
add
test
jmp
je
(bad)
jmp
mov
push
cwde
jg
sbb
in
fwait
jb
jp
out
retf
mov
(bad)
retf
adc
loopne
push
sub
and
stos
imul
fbld
jle
xchg
out
jmp
push
std
mov
rol
movs
sbb
das
sbb
lods
and
test
test
aad
mov
xchg
popf
jne
jge
ror
in
imul
shld
add
jge
or
mov
test
mov
lahf
push
(bad)
stc
rcr
movs
jae
jmp
mov
das
nop
dec
pop
call
daa
mov
sbb
dec
repz
jno
loopne
sub
ds
pop
les
xor
popf
and
sbb
inc
xchg
pop
lea
movs
and
and
sbb
test
cmp
xor
sub
outs
aam
movs
enter
xor
inc
jl
adc
mov
sub
aam
cmp
sub
das
(bad)
xor
dec
dec
ss
dec
ja
jecxz
out
cmp
outs
fbstp
test
fwait
dec
(bad)
xlat
(bad)
aas
call
xor
jge
jg
mov
push
push
aaa
xor
and
mov
aaa
xchg
add
mov
repz
pop
pop
jmp
scas
sub
popa
test
pop
aam
or
(bad)
lock
mov
cmp
outs
sbb
loopne
test
icebp
cs
movs
jnp
push
add
dec
pop
movs
lds
in
xchg
push
movs
xor
sub
jg
test
loop
adc
push
aam
shr
sub
cli
in
loope
cmp
call
jmp
jns
es
cmp
repnz
pop
nop
mov
mov
xlat
inc
mov
scas
stc
mov
cmc
xor
je
lahf
or
add
jne
inc
sbb
and
stos
pop
jbe
push
movs
pop
into
push
jecxz
push
loope
lds
add
push
(bad)
xor
mov
lea
cmc
cmp
not
loope
xchg
mov
(bad)
sub
arpl
ret
dec
(bad)
jbe
xchg
loop
mov
daa
arpl
ss
mov
pop
xor
mov
dec
and
add
aaa
ret
enter
div
mov
sub
clc
sub
adc
fild
sbb
fcmovb
(bad)
mov
push
mov
lahf
(bad)
dec
jecxz
xlat
jle
cmp
pop
leave
imul
mov
call
add
or
cmp
fmul
fcom
(bad)
push
mov
or
xchg
stos
aaa
or
mov
ret
push
sub
push
mov
xchg
cmp
mov
adc
mov
fcom
pop
loopne
outs
std
out
ins
nop
mov
lahf
adc
mov
out
add
enter
cvtps2pi
add
(bad)
call
sbb
ret
push
fwait
sub
adc
in
jnp
jmp
aaa
or
cmps
mov
inc
sub
xor
push
jle
and
pop
idiv
mov
mov
test
push
ficomp
mov
cs
sbb
pop
and
imul
inc
outs
aam
or
or
and
and
jl
mov
out
cmp
mov
adc
icebp
inc
push
cdq
ret
and
(bad)
fdivr
dec
jp
mov
add
outs
xor
outs
rol
mov
iret
cmp
fs
xchg
je
test
and
inc
jne
and
mov
ret
inc
pusha
loope
mov
pop
add
add
adc
cld
je
mov
adc
dec
xlat
push
leave
sub
ins
push
outs
mov
les
aam
js
push
js
xchg
mov
ins
popa
mov
fs
pop
es
shl
mov
xor
pop
addr16
and
pop
es
sub
lds
inc
ins
mov
(bad)
ficom
ds
retf
xor
mov
pop
inc
fstp
pop
out
cmp
sbb
pop
xor
xchg
mov
pop
pop
hlt
xchg
out
lea
mov
sar
in
mov
sub
or
js
and
mov
retf
stos
and
imul
xor
cld
js
cmp
aad
imul
sbb
jns
xor
dec
mov
aas
mov
js
sub
push
mov
dec
mov
sbb
je
les
sub
repz
and
pop
repnz
push
pop
outs
scas
lgs
pop
mov
add
(bad)
sbb
adc
xlat
inc
sbb
push
sbb
add
shl
push
jmp
add
imul
sub
movups
push
inc
shl
jbe
iret
jge
mov
mov
jmp
daa
mov
push
or
sahf
in
daa
sahf
mov
xlat
in
cmc
ins
call
dec
jmp
retf
icebp
div
mov
xchg
jnp
inc
ja
pop
lahf
sahf
or
imul
sub
sub
test
jns
mov
fwait
movs
cmc
cwde
dec
mov
jne
ds
adc
ret
and
cmp
out
xchg
and
shr
fdivr
lods
jns
push
iret
sbb
adc
jno
mov
fisttp
sbb
xchg
inc
jmp
xchg
cmp
cld
pusha
rcl
and
jmp
call
mov
mov
sub
and
lock
xor
repz
push
div
push
pop
push
adc
(bad)
std
int
add
sbb
out
mov
inc
cmp
imul
xor
add
dec
mov
addr16
imul
in
(bad)
sub
test
fidivr
aam
test
mov
or
outs
xor
in
fisttp
jno
sub
jp
fisub
retf
mov
jecxz
stc
(bad)
cdq
rol
cld
and
xchg
sub
mov
lods
pop
daa
rol
or
cmc
pop
cmps
adc
push
mov
jno
sub
addr16
sar
add
push
call
mov
push
push
push
jns
(bad)
dec
jmp
dec
xchg
sahf
jmp
adc
out
dec
xor
fwait
icebp
lods
out
test
dec
xor
cli
push
ror
pusha
adc
ins
add
sbb
into
(bad)
push
cmp
cmp
test
hlt
arpl
cmp
sbb
mov
add
cli
add
xchg
mov
mov
ret
ins
ja
pop
sbb
mov
(bad)
mov
icebp
fwait
add
imul
aad
xor
sbb
inc
loop
mov
push
in
stos
(bad)
push
(bad)
jmp
sub
popa
sti
fsubrp
cmp
out
je
lods
mov
gs
and
fst
imul
mov
aaa
jbe
mov
sbb
pop
les
loop
jle
sbb
push
out
lahf
sahf
nop
fs
in
push
stos
movs
lods
mov
dec
xchg
sar
push
push
mov
and
sub
add
sbb
popa
test
push
pop
pop
scas
aad
int3
cmp
jmp
sti
mov
xlat
sub
sbb
pop
and
ins
add
and
enter
ret
imul
add
inc
(bad)
mov
adc
xchg
mov
mov
cmc
stos
ins
jg
xchg
mov
jl
sub
xchg
not
gs
clc
clc
push
inc
and
push
int
cmp
pusha
daa
jns
inc
lds
fdivr
push
std
jae
cwde
mov
dec
es
add
ja
xlat
shl
push
sbb
inc
mov
sub
fs
inc
stos
push
cdq
hlt
mov
in
adc
xchg
inc
bnd
mov
jmp
ja
(bad)
ins
push
sub
mov
nop
iret
leave
cmps
pusha
mov
xchg
inc
xchg
and
mov
mov
(bad)
std
xor
in
shl
pop
pushf
jge
jge
and
or
mov
xor
out
and
neg
mov
jp
popf
xlat
clc
push
outs
sbb
sub
ins
push
cmc
dec
mov
push
cmps
(bad)
enter
inc
addr16
pop
call
je
and
sti
(bad)
rcr
iret
aam
fucomp
mov
retf
scas
popf
adc
adc
dec
lods
sar
jmp
jae
ins
outs
out
cmp
retf
jns
lds
and
push
pop
out
pop
and
pusha
or
add
xchg
jecxz
push
and
leave
dec
or
jmp
mov
in
adc
adc
mov
add
outs
std
pushf
adc
mov
icebp
into
mov
sub
es
add
jl
mov
ror
and
adc
mov
rcr
jnp
in
jle
aam
and
scas
ins
inc
adc
pop
xchg
push
out
xor
es
adc
(bad)
fimul
xchg
repz
ins
lahf
mov
sub
fcom
out
adc
jmp
cli
int3
movs
or
cmp
push
stos
sar
dec
lods
pop
stos
lea
ds
test
arpl
not
xlat
mov
repnz
gs
lock
jge
or
jne
sub
adc
fnstsw
sub
cli
ja
ins
fsubr
pop
(bad)
cmps
and
push
mul
stos
dec
mov
mov
or
enter
rcr
fwait
adc
sbb
loope
sbb
mov
inc
mov
sbb
push
jbe
out
adc
aaa
inc
mov
jmp
outs
fwait
jo
ins
jecxz
xchg
fucomi
mov
sub
push
mov
jmp
lods
mov
mov
xor
and
lods
mov
xor
aam
mov
jb
mov
ds
add
iret
mov
jne
pusha
and
xor
and
cmp
jo
cs
pop
rol
stos
scas
or
shr
dec
mov
movs
outs
add
repz
adc
pop
jge
mov
sub
xor
xchg
xchg
sbb
cmps
cdq
sub
push
mov
push
adc
or
lods
into
mov
(bad)
sub
jmp
xchg
adc
mov
ins
push
jne
sub
test
cmp
movs
popf
sti
mov
(bad)
cmps
pop
repnz
cwde
mov
fs
dec
shr
lea
xor
bound
jbe
cwde
or
fdivr
test
retf
cdq
mov
into
xchg
mov
pop
js
sub
(bad)
dec
fdiv
(bad)
fcmovnbe
mov
imul
mov
push
ss
or
sbb
xor
xchg
out
xor
mov
add
sbb
in
xor
cmp
xchg
jnp
outs
add
and
call
out
cmc
sbb
xchg
clc
and
dec
cmp
xchg
mov
mov
xchg
nop
mov
outs
or
sub
int3
bound
mov
mov
xchg
xchg
jmp
outs
mov
js
out
mov
jp
scas
xor
data16
push
jo
sub
inc
pop
push
pushf
sub
fist
push
inc
aam
push
push
sbb
xchg
scas
and
dec
sbb
xor
fwait
pop
xor
std
add
cs
jg
mov
movs
imul
jno
cmp
int3
mov
iret
cs
adc
les
dec
inc
scas
jle
sbb
sbb
aad
mov
push
ins
bound
mov
daa
add
into
iret
xor
and
movs
push
mov
mov
in
add
push
xchg
ja
sbb
add
sub
mov
inc
in
mov
and
fistp
fucom
pop
add
lock
in
pop
aas
xlat
scas
out
adc
add
arpl
sar
sub
cmp
mov
sbb
cmp
jmp
in
outs
ficomp
push
or
push
test
cld
adc
cmp
sbb
fstp
mov
jo
jbe
mov
inc
mov
jp
or
mov
ret
xchg
pop
xchg
mov
sub
sar
shr
leave
repnz
xor
pop
pop
nop
mov
ret
lock
test
emms
pop
push
scas
test
or
les
(bad)
sbb
pop
pusha
mov
bound
pop
jp
sub
outs
popa
int3
icebp
jmp
jnp
movs
ins
addr16
mov
pop
push
dec
je
rcl
ss
ret
and
in
test
ins
mov
add
push
mov
sbb
jb
aaa
pminsw
cli
inc
fwait
push
das
cmp
in
fisubr
push
test
(bad)
in
cmps
ins
xor
fmulp
mul
jg
or
mov
jb
pop
ins
(bad)
push
add
pop
sbb
fist
repnz
mov
mov
mov
cmp
xor
push
shr
call
clc
mov
aam
outs
ds
mov
jp
jecxz
test
push
inc
std
sub
or
cmp
stos
mul
or
test
(bad)
jmp
iret
pop
outs
pusha
xchg
pop
mov
inc
sub
ins
fmul
ret
push
fs
mov
mov
cmp
into
nop
cs
aam
cmp
imul
xchg
scas
ss
popf
(bad)
cdq
pop
pop
cmps
retf
mov
mov
xchg
addr16
pop
sar
arpl
or
sbb
(bad)
cdq
inc
mov
loope
jp
push
aaa
pop
push
dec
jge
out
ret
push
ret
dec
jecxz
and
fsubr
std
pusha
sbb
jg
add
mov
cmp
mov
jle
mov
pop
xor
fidivr
fwait
leave
(bad)
adc
addr16
jg
arpl
adc
jae
std
jb
(bad)
mov
out
ss
xchg
je
test
adc
call
inc
jmp
loop
(bad)
add
repnz
cwde
lock
xchg
daa
cdq
fistp
imul
psrlw
repz
pop
xlat
cmp
inc
push
xchg
xor
loop
inc
in
or
adc
loope
jmp
popf
sbb
mov
out
mov
adc
out
and
sbb
js
mov
(bad)
jo
es
and
adc
adc
pop
fdivr
cmps
test
fucomi
int
xchg
dec
xor
sub
inc
sub
jmp
push
push
mov
add
mov
lods
ins
ins
pop
into
out
sti
cmp
mov
add
cmp
sbb
shl
data16
mul
sub
mov
mov
in
xchg
lahf
xor
clc
(bad)
or
les
cmp
push
inc
cmp
ja
(bad)
push
adc
xor
ror
inc
pusha
aad
push
imul
jmpw
mov
ds
test
mov
das
outs
pop
sub
add
push
sub
fcom
hlt
aam
addr16
test
(bad)
data16
fisttp
in
jecxz
mov
cdq
jns
jb
out
jnp
mov
outs
pop
fcomp
outs
mov
fnstcw
mov
pop
fld
imul
or
push
mov
inc
fwait
clc
outs
add
xor
bound
jmp
push
dec
cmp
inc
stos
hlt
mov
mov
out
retf
pushf
jmp
sub
jmp
push
scas
jg
popfw
aad
js
ins
and
jo
hlt
fstsw
mov
movs
lock
pop
jns
inc
hlt
movs
pop
dec
dec
fld
inc
mov
sbb
push
jp
sbb
push
cmc
and
in
sar
inc
ss
jae
mov
mov
xchg
inc
shl
mov
fcomp
mov
lahf
arpl
hlt
imul
xchg
xor
xchg
fadd
mov
mov
jnp
sahf
mov
imul
and
dec
rcl
call
mov
dec
cmp
(bad)
stos
mov
pop
add
mov
jnp
retf
sub
and
arpl
aad
cmps
or
dec
mov
sub
jno
aaa
emms
jbe
jmp
cdq
or
loope
jns
push
into
shl
sub
leave
jecxz
pop
sbb
and
test
mov
add
mov
fisttp
in
ror
cmp
jl
xor
je
les
scas
mov
dec
inc
xchg
xchg
fwait
loop
out
leave
enter
jecxz
jmp
dec
in
mov
scas
adc
pop
test
aam
icebp
call
xchg
cmc
enter
or
mov
jo
and
push
inc
imul
sbb
outs
adc
jle
mov
jp
sub
dec
xchg
adc
fsin
rcr
jmp
xchg
retf
mov
cs
es
ret
lahf
std
fdivp
je
cmp
and
push
jge
mov
test
jmp
leave
add
lea
ins
xchg
(bad)
loopne
clc
retf
push
inc
(bad)
xor
and
hlt
push
cdq
iret
sbb
div
jge
addr16
mov
icebp
mov
and
jne
push
mov
mov
call
push
jns
xchg
cmps
cmp
mov
sub
dec
rcr
and
inc
push
push
mov
aas
repz
cs
cli
add
pusha
inc
mov
push
jbe
mov
adc
mov
add
or
jmp
(bad)
sub
(bad)
jno
aam
inc
bound
xor
dec
jl
jg
in
mov
(bad)
pop
repz
call
pop
mov
sbb
jno
jle
adc
mov
add
jmp
fld
jecxz
ficomp
sbb
(bad)
cld
add
dec
jmp
int
daa
cmp
mov
je
test
aaa
gs
addr16
rcl
mov
(bad)
rol
ret
icebp
mov
jno
pop
psrld
lods
sub
add
dec
sub
outs
lock
mov
dec
dec
jecxz
push
aam
out
and
sub
sub
adc
pushf
call
fisub
popa
pop
push
enter
call
xor
mov
aam
dec
pop
inc
pop
loope
and
inc
or
xchg
pop
add
cmp
in
les
jl
xlat
popa
inc
pop
push
jbe
shr
mov
int3
std
pop
xlat
xor
sar
and
push
int3
push
add
mov
mov
ds
add
inc
call
and
test
mov
cmp
fnstsw
iret
std
xchg
movs
cmp
scas
mov
push
icebp
(bad)
xchg
and
imul
and
in
mov
mov
jmp
arpl
aas
pop
(bad)
nop
lods
pop
xchg
gs
dec
or
and
leave
dec
rcr
sub
xor
xchg
and
or
sbb
lahf
mov
mov
vaddsubpd
ja
sub
sub
cmp
in
add
mov
std
xchg
mov
mov
ja
sub
rcr
shl
fistp
iret
(bad)
pushf
pop
sub
adc
pop
sbb
fiadd
call
loope
mov
pushf
fild
cmps
imul
xor
jmp
(bad)
loopne
shr
and
mov
or
test
xor
aas
stos
dec
xchg
xchg
rol
js
stos
js
mov
cmps
lahf
test
lahf
js
push
dec
push
imul
(bad)
cmp
xor
daa
pop
ins
mov
or
adc
cmc
push
hlt
pop
daa
ins
dec
inc
sar
lods
std
cld
frstor
dec
push
test
sbb
hlt
fwait
add
shl
in
push
call
(bad)
xchg
push
pusha
cwde
rol
hlt
sub
outs
mov
jo
mov
cmp
mov
movs
(bad)
mov
movs
je
in
mov
(bad)
test
test
mov
push
aaa
push
sbb
jecxz
or
mov
mov
push
dec
mov
sub
or
xchg
ret
xchg
stos
sub
ret
cmps
mov
pusha
fldenv
fisubr
clc
inc
mov
movs
cs
(bad)
arpl
mov
(bad)
test
pop
sbb
pop
jle
dec
cli
push
jl
pop
ja
push
std
mov
popf
mul
pop
xchg
(bad)
mov
dec
ja
daa
mov
inc
xor
scas
pushf
sahf
cmp
cdq
jbe
mov
add
hlt
stos
mov
mov
cmp
mov
and
push
loopne
(bad)
retf
jbe
stos
mov
adc
sbb
out
fmul
sti
dec
inc
mov
mov
fnsave
jge
gs
outs
out
mov
icebp
mov
test
mov
not
dec
fimul
retf
movs
pop
cli
sbb
test
fidivr
jge
mov
adc
sbb
bound
into
movs
sti
jmp
test
je
sbb
jge
xor
lahf
sbb
aad
xor
(bad)
scas
xor
xor
fidivr
retfw
push
stos
mov
loope
mov
into
cdq
mov
xchg
add
sub
popf
pop
stos
and
mov
mov
sbb
or
out
fs
dec
push
xchg
das
lock
mov
cmps
sub
and
dec
das
sub
sbb
push
aam
je
fucomi
xor
rcr
mov
cwde
and
or
loop
jb
aam
out
xchg
push
ret
inc
xchg
gs
xchg
jle
mov
or
push
loop
push
shl
dec
jbe
retf
iret
mov
imul
xor
xlat
lea
or
xor
(bad)
rcr
fld
jne
sahf
sbb
inc
mov
push
mov
inc
(bad)
retf
sbb
sub
and
dec
bound
arpl
sbb
pushf
cmp
jae
hlt
test
cli
loope
dec
or
sbb
jl
cmp
je
sub
(bad)
repnz
or
xchg
sub
into
xor
call
fisttp
cdq
pop
dec
popa
or
jg
jp
xor
fld
rol
pop
add
std
jbe
and
test
mov
or
std
stos
inc
or
cli
and
dec
mov
fdiv
jns
cmps
push
xchg
retf
lahf
adc
into
mov
sbb
mov
or
ins
aaa
xchg
dec
or
mov
ss
push
fnsave
pop
mov
inc
cli
lea
popf
or
out
mov
pop
inc
mov
bound
in
xor
cdq
(bad)
pop
in
dec
fisub
cld
mov
dec
enter
(bad)
(bad)
xor
jno
sbb
cmp
rcr
mov
(bad)
mov
call
mov
hlt
jp
(bad)
stc
int
bound
repz
push
xchg
xchg
inc
xor
mov
es
sub
retf
sar
cmps
xchg
out
dec
inc
fcom
inc
ror
mov
pop
sbb
pop
fucom
xchg
cmc
or
mov
retf
clc
movs
aam
add
test
mov
inc
enter
je
and
(bad)
mov
sti
sub
xchg
aad
ds
xchg
xor
and
stc
js
pop
inc
test
(bad)
int
mov
jns
mov
daa
iret
rcr
jmp
add
push
inc
adc
cmp
cdq
imul
in
xchg
cdq
cmp
ds
mov
xchg
retf
mov
lea
push
jne
and
fdiv
inc
mov
cmp
cmp
cmp
push
cdq
pop
stc
push
mov
int
pop
cmp
and
cmp
and
xor
dec
jecxz
jb
dec
movs
dec
dec
fs
and
xor
sub
xor
test
pop
fs
mov
test
adc
pop
scas
or
and
rol
inc
xchg
sub
push
sar
push
stc
int
mov
sbb
pop
cld
pop
mov
or
jl
inc
dec
adc
mov
jmp
jg
je
in
mov
add
call
xchg
sbb
frstor
inc
jmp
push
xor
in
dec
sub
mov
pop
sti
sub
popa
aas
cmp
sbb
xchg
sub
mov
cmp
fistp
and
jbe
in
and
ds
cmp
jmp
enter
js
js
out
sub
wrmsr
and
cmps
push
push
jge
xor
rcr
mov
jnp
pop
scas
js
mov
xor
cmp
inc
dec
jbe
and
pop
jl
loope
or
aaa
call
add
stos
push
pushf
or
rol
fiadd
inc
test
or
or
loop
les
inc
mov
arpl
jle
jmp
pop
stos
ja
cmp
inc
jns
pop
ret
sub
cmps
cmp
out
cmp
nop
cmps
sub
sub
push
jns
dec
hlt
xchg
ror
ficomp
jmp
jecxz
sub
test
rcl
sbb
test
and
call
loopne
mov
mov
xor
push
mov
jmp
mov
sub
out
push
inc
int3
test
mov
pop
pop
pushf
(bad)
sub
scas
les
aas
mov
cmp
data16
cmc
cmp
clc
shl
sub
xor
loope
ds
mov
push
mov
test
(bad)
sub
xor
ja
stos
daa
inc
mov
(bad)
cmp
sub
call
xor
pop
mov
xor
push
fld
jno
mov
cli
in
clc
int3
inc
push
enter
or
jmp
push
repnz
cdq
hlt
add
retf
xor
mov
outs
xchg
outs
cmp
mov
and
adc
cmps
xlat
cdq
pop
cs
pop
mov
pop
(bad)
mov
mov
jb
jp
sbb
sub
sub
ficom
jle
inc
rcl
or
scas
stos
jnp
(bad)
retf
jg
ret
cmps
jl
lods
xchg
ss
jae
and
out
les
sub
push
jp
sbb
(bad)
mov
les
mov
add
in
xchg
cmp
ror
retf
cmp
mov
les
pop
inc
(bad)
hlt
and
add
push
jae
aad
popa
dec
(bad)
jle
mov
mov
int3
sub
cmps
stos
mov
xchg
pop
hlt
(bad)
je
dec
jbe
mov
cmp
mov
mov
inc
mov
shl
sbb
daa
pop
xchg
xchg
arpl
out
lods
cmc
sub
xor
fldenv
sbb
sbb
dec
test
dec
jecxz
mov
aad
test
cmp
popf
int
add
test
mov
rol
into
test
sub
push
cmp
cmps
xchg
xchg
pop
call
ror
sbb
and
sbb
out
push
sub
xchg
hlt
ror
ret
addr16
push
and
adc
push
sub
sub
outs
jae
sub
xlat
loope
mov
out
jb
nop
xor
adc
repz
mov
lock
mov
adc
cmc
and
lods
inc
jnp
xchg
xchg
inc
sahf
imul
stc
scas
xchg
pop
xchg
inc
sub
xor
pushf
push
aaa
cdq
ins
leave
adc
mov
mov
pop
jae
push
adc
fwait
daa
sbb
mov
in
popf
sbb
pop
shld
xchg
jp
sbb
js
xlat
ss
(bad)
into
in
shl
pop
jl
push
push
jnp
xor
xor
mov
inc
pop
pop
out
(bad)
aam
daa
xor
inc
dec
or
and
jecxz
jmp
add
push
call
inc
and
mov
mov
pushf
xor
fnstcw
fcomip
cli
adc
mov
cmp
add
ret
mov
push
(bad)
mov
mov
xor
push
pop
cmp
mul
sub
ins
jnp
xor
stos
imul
mov
ficomp
push
inc
mov
outs
xor
pop
mov
mov
mov
repnz
sbb
pop
xor
scas
loope
sub
das
cmp
in
aaa
lahf
popa
cmp
push
(bad)
clc
dec
movs
push
mov
xor
dec
sbb
jge
gs
nop
fs
cmp
cmps
cmps
inc
fnsave
xchg
mov
js
adc
lock
xchg
shl
(bad)
lahf
pop
inc
add
xchg
std
and
bound
rcr
push
add
mov
pop
jbe
sti
sti
fsub
into
adc
cmp
loope
and
test
pop
repz
cmps
test
or
sar
jae
jnp
cdq
sbb
mov
stos
dec
shr
dec
shl
add
inc
ins
out
outs
pop
xor
push
inc
mov
mov
cwde
popa
in
xchg
mov
movs
push
shl
or
xchg
rcl
fstp
out
xchg
outs
mov
data16
cmp
pop
sbb
sub
xchg
test
push
cs
xchg
popa
mov
add
rep
shl
mov
ror
xor
pop
mov
cmc
xor
cmp
rcr
repz
cmp
mov
xor
outs
dec
icebp
cmp
sbb
test
sub
mov
outs
mov
fmul
jmp
mov
jns
mov
xchg
mov
and
out
(bad)
cmps
jg
shl
xchg
call
outs
sbb
push
enter
inc
xchg
jg
stos
xchg
adc
sar
or
es
push
or
and
rol
cwde
pop
lods
add
xchg
adc
addr16
cs
test
(bad)
call
retf
inc
jnp
or
call
jno
mov
jle
mov
imul
push
js
out
test
mov
sti
add
(bad)
lock
xor
fstp
xchg
inc
stos
movs
fisub
stos
lods
not
or
das
pop
(bad)
cli
push
rcr
mov
frstor
jnp
mov
sbb
ret
fld
mov
(bad)
repz
mov
xor
dec
xchg
pusha
(bad)
retf
mov
sahf
push
cli
mov
pusha
scas
jecxz
pop
mov
nop
fbstp
lea
(bad)
repnz
xor
xlat
stos
in
mov
fist
pop
test
rcl
pushf
or
jmp
lahf
xchg
sbb
test
xlat
fst
fst
movs
jns
cmp
movs
mov
(bad)
loop
aad
js
jae
mov
cmp
stc
mov
dec
mov
push
(bad)
push
inc
(bad)
mov
ss
and
cmp
in
pop
jno
fwait
pop
and
std
mov
out
ror
ja
ds
cmp
push
jo
fcomp
push
(bad)
or
mov
jmp
mov
repz
adc
adc
in
push
mov
cmps
mov
pop
add
pop
fdiv
jno
cli
sub
mov
(bad)
jmp
xor
gs
call
push
popf
cwde
jmp
sub
ds
mov
fcomp
adc
add
pop
inc
jg
das
dec
pusha
xchg
test
dec
stc
mov
add
bound
sbb
add
out
lods
std
pop
divps
push
in
loopne
jo
stos
mov
sub
clc
in
mov
cmp
dec
mov
xchg
inc
stos
mov
cmp
dec
sbb
pop
popf
shl
sub
movs
xchg
fist
outs
xchg
sbb
jp
adc
dec
call
call
add
xlat
pushf
mov
dec
pop
repz
cmp
adc
les
(bad)
cmp
popf
shld
dec
das
mov
fsubr
in
pop
fmul
arpl
mov
jmp
push
les
pop
xchg
xor
xor
dec
out
dec
mov
and
pushf
sti
and
or
sbb
xchg
ins
adc
shr
pop
or
jecxz
mov
mov
jb
mov
call
out
daa
xchg
addr16
test
fild
lahf
sub
test
test
mov
xor
(bad)
jne
and
mov
mov
int3
push
retf
fcomi
std
push
jmp
jg
jle
xor
pop
movs
xchg
not
cld
jnp
idiv
sub
push
fucompp
jmp
stos
ins
dec
fs
pushf
bound
xchg
(bad)
cmp
addr16
shr
push
outs
fucomi
pop
mov
fadd
cmp
pop
cs
jge
pop
push
pop
and
into
dec
mov
mov
popa
sbb
and
lock
fnsave
pop
addr16
ja
and
add
jge
jge
inc
mov
pop
nop
int3
div
and
cmp
out
xchg
push
pop
mov
fidivr
xchg
cmp
push
or
dec
jg
cmps
or
xor
inc
popa
pop
sar
std
sub
es
lea
dec
mov
jle
sbb
xchg
jmp
aam
jns
into
xlat
jo
jge
sbb
or
cmp
out
dec
(bad)
sbb
or
and
xchg
ins
push
enter
jbe
xchg
dec
scas
jge
mov
jno
sbb
inc
pop
mov
push
cld
sbb
stos
and
push
enter
sub
imul
pop
xor
in
and
and
adc
dec
je
sub
in
inc
cmp
ss
mov
rcl
mov
frstor
sub
jne
lahf
jb
mov
in
jbe
or
inc
mov
pop
outs
mov
xor
cs
adc
xlat
loopne
cmp
push
or
cmc
(bad)
sbb
inc
inc
ret
fs
in
xor
adc
xchg
adc
inc
add
iret
jmp
add
jne
mov
stc
xor
rcr
popf
not
and
call
(bad)
xchg
cmps
clc
push
adc
adc
lds
adc
xchg
pop
cli
test
stc
xchg
cmp
xchg
mov
stc
icebp
sub
test
fst
(bad)
mov
push
adc
cmp
(bad)
popa
dec
loope
cmp
adc
pop
cli
push
inc
cwde
pop
xor
push
mov
dec
and
xor
sub
cmp
xchg
adc
int
cmps
pop
aad
and
mov
xlat
jmp
mov
pop
call
ja
out
ret
lahf
jae
enter
cmp
xlat
ds
push
mov
shl
cmc
push
inc
(bad)
jbe
lds
add
inc
jno
mov
bound
add
xor
adc
lods
pop
fs
scas
retf
jo
data16
in
mov
jne
sub
sbb
popa
aam
xchg
and
cmps
arpl
cwde
popa
dec
sbb
clc
ret
test
sbb
sar
fs
or
gs
inc
sbb
or
adc
adc
scas
xchg
lock
cld
jg
pop
mov
fldlg2
xor
push
in
sahf
mov
pop
sub
pop
mov
les
in
pop
sbb
push
cmps
pop
out
xor
xchg
sbb
nop
jae
mov
test
pop
test
out
es
scas
xchg
sub
stos
es
xor
nop
mov
loopne
add
and
in
mov
jmp
fimul
push
lods
pushf
adc
imul
and
addr16
pop
xchg
or
(bad)
dec
push
iret
add
mov
lods
movd
xchg
sbb
inc
pop
and
mov
add
mov
ins
jl
xor
addr16
xor
enter
jb
call
xchg
jne
push
in
call
(bad)
test
inc
and
cmc
adc
jmp
sub
push
mov
faddp
in
stos
or
popa
adc
inc
popf
ins
movs
add
into
loope
stos
(bad)
lods
push
inc
sti
add
adc
cmp
fbstp
ja
test
xchg
inc
inc
cmp
jb
(bad)
imul
pop
pop
mov
imul
aam
inc
jp
adc
mov
mov
fadd
push
ins
xor
shr
xchg
pop
jmp
pcmpeqd
sbb
rcr
lods
mov
pop
loope
add
cmp
jecxz
add
loop
fcom
call
stc
pop
adc
mov
sub
push
enter
cmc
cld
iret
and
loop
aas
(bad)
mov
sub
sub
add
dec
test
(bad)
pop
sub
scas
xchg
pop
cmp
sbb
push
scas
punpcklwd
push
mov
ror
and
jp
out
aam
fistp
add
(bad)
ins
fist
sub
aam
outs
xor
movs
rol
stc
popa
inc
stos
push
fiadd
jecxz
int
inc
aam
ja
cmp
fisttp
mov
mov
ds
xchg
inc
ds
and
addr16
ins
outs
data16
sahf
mov
pusha
push
(bad)
push
push
pop
mov
sbb
jae
xor
pop
cwde
movs
mov
add
jnp
cld
jmp
hlt
scas
imul
fdivr
mov
adc
ins
imul
or
pop
rcl
pop
sbb
ins
push
inc
into
lods
mov
add
inc
icebp
das
inc
xor
retf
(bad)
out
imul
es
stc
push
jmp
jno
leave
inc
aam
jp
outs
ja
add
(bad)
and
lahf
cld
dec
push
(bad)
dec
mov
mov
cmc
push
sbb
inc
daa
adc
scas
dec
xor
sbb
xchg
mov
lods
jnp
adc
call
mov
div
jmp
jno
stos
fild
aaa
shl
mov
sar
ja
imul
adc
mov
sahf
test
dec
outs
xchg
jp
sub
push
mov
add
into
pop
ror
nop
jb
ror
xor
mov
or
push
jl
popf
adc
int
sbb
mov
jmp
clc
pushf
mov
cs
clc
cld
je
outs
mov
inc
push
pushf
add
mov
jecxz
ja
addr16
xor
xchg
xor
fmul
repz
shl
or
pop
addr16
mov
repnz
aaa
inc
mov
push
lods
jno
mov
mov
call
out
adc
xor
je
je
es
pop
cmp
ins
mov
or
inc
retf
arpl
xchg
jo
rcr
inc
arpl
fdiv
(bad)
jae
fst
mov
addr16
lahf
fsin
mov
into
scas
(bad)
cld
xor
cmps
sub
adc
fdivrp
in
(bad)
mov
iret
imul
retf
shl
adc
scas
fwait
stos
mov
dec
call
iret
lods
inc
mov
clc
je
mov
dec
mov
imul
hlt
(bad)
jmp
test
push
push
xchg
lock
in
(bad)
cmp
adc
(bad)
cli
pop
xchg
sub
int
pop
mov
call
add
mov
pushf
gs
push
adc
jnp
pop
je
jnp
sbb
mov
mov
add
and
imul
loopne
inc
repz
xor
and
(bad)
sub
mov
cmp
lock
out
add
shl
jmp
in
fsubr
aam
add
dec
push
push
sub
aaa
push
or
movs
push
jge
clc
mov
mov
mov
fidivr
out
add
xor
ins
call
jmp
jae
(bad)
push
inc
xchg
scas
jg
cmp
sar
or
ins
or
xchg
rol
push
aas
repnz
or
test
movs
add
les
and
sbb
and
cmc
push
add
mov
jl
mov
dec
xchg
dec
pop
mov
xor
test
jl
or
xchg
xchg
inc
pop
dec
mov
daa
inc
jge
das
fdiv
imul
sub
cli
mov
xor
iret
outs
mov
ret
pop
jg
lahf
out
dec
leave
stos
(bad)
dec
enter
cwde
xchg
popa
pop
sbb
test
test
(bad)
loope
bound
scas
leave
mov
and
push
jle
xor
int
scas
add
dec
sub
ins
push
shl
jae
scas
jns
enter
and
shl
dec
add
loopne
repz
jl
lods
jno
xor
scas
push
in
retf
movs
and
jno
call
out
sbb
jg
jp
fdivp
(bad)
sbb
retf
jecxz
cmp
mov
cmp
aad
popa
and
stos
mov
cs
loope
cmp
dec
int3
cmp
(bad)
idiv
inc
mov
das
mov
div
sub
out
je
jg
loop
cdq
xor
sahf
scas
lds
popf
ret
xor
fild
out
add
pop
out
xchg
push
pop
and
and
mov
xor
sbb
pop
dec
mov
ins
int
loopne
in
mul
pop
enter
retf
mov
mov
cld
in
rcr
daa
dec
iret
mov
and
adc
lods
rcl
(bad)
in
inc
movs
je
addr16
jo
adc
sbb
adc
xchg
add
and
add
mov
add
or
add
cwde
int3
inc
pop
mov
xchg
pusha
mov
xchg
push
inc
push
(bad)
sbb
xchg
out
out
cmc
mov
or
pop
jb
outs
ins
icebp
ret
loop
and
and
sahf
sub
cmp
mov
enter
jno
xchg
mov
adc
mov
shl
fcomp
add
lahf
les
bound
btr
int3
cli
test
aaa
push
dec
ss
mov
cmp
mov
push
mov
pop
(bad)
or
iret
mov
pop
fcomp
push
sbb
sbb
jp
xchg
int
std
ret
inc
adc
mov
jl
(bad)
mov
(bad)
aam
clc
cld
fdiv
(bad)
push
adc
pushf
inc
add
shl
push
mov
adc
sub
push
int
in
jns
push
mov
inc
mov
sub
mov
clc
and
pop
retf
xchg
sub
rcl
adc
imul
fnstcw
xchg
lods
cmp
icebp
cwde
xor
call
jns
cmp
push
push
add
ins
jno
dec
sub
call
jl
aam
or
mov
pop
adc
mov
iret
ret
or
iret
jbe
cld
fld
outs
jns
sbb
xchg
fs
sub
sub
mov
sub
lods
jmp
in
adc
adc
(bad)
and
sbb
enter
jecxz
add
inc
bound
es
mov
out
jmp
lods
xor
cmp
cmp
sub
outs
movs
mov
or
cli
jb
cs
xchg
iret
or
int
(bad)
or
pop
lds
iret
sbb
sub
dec
jb
sti
aam
leave
fxch
shl
in
test
cmc
out
ins
add
sar
int
(bad)
cmp
xchg
or
dec
pop
sub
iret
aad
mov
or
dec
mov
call
ret
inc
sahf
out
xchg
pop
xor
test
test
add
lock
lea
xchg
jge
cmp
in
lods
adc
ja
dec
xlat
fdivrp
or
or
pop
xor
push
adc
pop
inc
xchg
fmul
sbb
in
xor
xchg
sbb
add
movs
jns
ficomp
dec
sub
or
int3
sbb
scas
ret
inc
loop
jp
call
sub
call
mov
mov
scas
cmps
pop
cdq
clc
sub
mov
xchg
data16
jmp
ja
inc
inc
pop
in
pop
arpl
and
or
lods
test
mov
adc
inc
popa
out
mov
stc
dec
pushf
nop
cli
and
(bad)
stc
ss
and
dec
xchg
push
fs
fldenv
fstp
inc
out
loop
leave
lahf
jnp
(bad)
nop
ins
and
xor
sub
scas
sub
cmps
adc
les
cwde
mov
cmp
hlt
imul
push
and
daa
into
mov
imul
adc
jbe
add
test
add
cmc
dec
dec
ins
cdq
mov
adc
adc
inc
neg
mov
enter
mov
enter
ds
adc
int3
mov
cmp
int3
pop
xchg
inc
pcmpeqd
xchg
stos
and
cmp
mov
outs
cdq
lods
mov
loopne
and
push
pop
dec
jnp
cmp
sbb
dec
mov
(bad)
lahf
cmp
pusha
cdq
jmp
xor
hlt
cld
jae
xchg
jno
jg
mov
jg
ret
iret
and
pop
cmps
outs
jne
cmp
pop
fst
cdq
cmc
je
add
xchg
into
into
stos
xor
(bad)
icebp
js
test
fsubr
mov
sub
mov
mov
push
and
stc
int
aam
les
dec
outs
pop
xchg
hlt
scas
cs
sub
stos
fnstsw
push
in
stos
xchg
xor
jnp
add
jbe
(bad)
aas
neg
ret
js
mov
add
movs
out
adc
retf
or
inc
xor
sub
outs
std
or
sbb
xchg
stos
and
jp
cmp
xchg
jns
jmp
cld
cmp
dec
stc
sar
push
inc
cmp
add
pop
mov
ret
or
mov
popa
imul
cmp
ds
sub
out
out
in
rcr
out
repz
dec
mov
cmp
xlat
add
dec
fild
call
nop
(bad)
loop
push
push
mov
sbb
or
push
jmp
sahf
push
aaa
xchg
dec
xor
data16
jmp
jno
inc
and
xor
inc
sbb
mov
pop
adc
inc
fisttp
jecxz
test
idiv
popa
faddp
pop
int3
outs
push
rcl
enter
xchg
in
sub
lahf
cwde
adc
out
mov
and
into
mov
push
add
retf
jmp
ror
out
ror
(bad)
icebp
mov
or
mov
rcl
mov
xchg
stc
cs
jecxz
fwait
ret
popa
inc
mov
push
mov
mov
cld
dec
push
(bad)
push
mov
xlat
adc
movs
push
fisttp
push
adc
fidivr
in
cmc
sub
mov
(bad)
fist
cmps
add
fsubrp
or
and
push
push
jmp
je
jne
jbe
ja
or
adc
ret
cs
xor
lods
inc
in
sub
push
mov
pop
mov
mov
xchg
push
mov
ror
jnp
and
rcr
xor
jge
xor
dec
inc
push
push
rcl
pop
or
xor
arpl
dec
xlat
out
mov
sbb
imul
aaa
es
pop
push
imul
xor
sbb
das
and
or
jb
ret
test
push
call
fcomp
(bad)
cmp
mov
xlat
les
sbb
mov
outs
inc
sbb
sub
mov
xchg
jnp
cmp
mov
sub
mov
push
push
lods
mov
dec
out
adc
add
out
ret
or
stos
or
fadd
cmp
mov
mov
jmp
adc
(bad)
and
sbb
or
mov
cs
sub
cmps
int3
push
mov
test
ins
call
mov
popa
das
add
cmp
bound
and
pop
lods
popf
inc
leave
out
daa
in
sbb
xor
fsubr
sbb
ret
lock
cmp
pushf
push
cwde
stos
mov
in
stos
arpl
mov
sub
ds
cmp
inc
or
or
dec
rcr
or
aad
mov
fild
xlat
outs
or
dec
ror
xor
or
xor
inc
(bad)
mov
sbb
mov
and
and
jmp
and
fsub
inc
mov
mov
pop
loopne
mov
popa
stos
js
sbb
aas
cmp
mov
pop
out
adc
inc
mov
push
sbb
pop
push
mov
inc
test
loope
mov
retf
xchg
add
(bad)
xchg
cwde
jae
jbe
repnz
or
xor
rol
mov
and
nop
xchg
jp
cmc
jle
jno
ja
mov
hlt
sahf
adc
jnp
sbb
mov
xor
ins
jns
adc
ret
pusha
dec
imul
pusha
stos
fisubr
popf
iret
in
cwde
cmp
test
sub
sbb
add
push
jle
or
aas
or
mov
gs
ror
(bad)
(bad)
loope
jno
pop
adc
jnp
xchg
ss
(bad)
jmp
or
aas
in
adc
rol
cmc
bnd
mov
xchg
cmc
mov
in
cld
inc
adc
nop
xor
sahf
test
stos
or
cwde
and
or
loopne
mov
lods
push
dec
stos
(bad)
bound
push
daa
(bad)
aad
test
bound
in
leave
(bad)
(bad)
push
scas
add
xchg
jbe
adc
cmc
lea
rcl
push
shl
ja
xchg
mov
sar
lds
pop
pop
sub
sub
(bad)
in
lahf
sti
or
aam
movs
sub
inc
cmp
mov
xchg
sub
dec
out
pop
push
lds
ins
mov
mov
pop
jne
loope
pusha
and
add
sub
jae
xchg
xchg
ret
xchg
or
or
addr16
outs
(bad)
repz
push
stos
in
(bad)
jno
sar
or
dec
sbb
mov
out
fist
aad
sub
pop
ret
mov
cwde
pop
clc
sbb
sti
popa
retf
push
jbe
mov
add
and
imul
pop
adc
cmp
out
fmul
stc
fdivp
(bad)
xor
movs
clc
hlt
leave
pop
lods
sbb
aad
xchg
in
retf
shl
sbb
add
jno
cmc
lods
std
fcomp
aaa
ins
pop
sub
cmps
lds
adc
xor
call
push
fist
xchg
push
in
xor
mov
xchg
gs
les
mov
xchg
int
cmp
(bad)
fisubr
mov
adc
sub
jg
mov
out
mov
jecxz
add
mov
int3
ja
into
mov
lods
or
mov
iret
sub
fwait
mov
add
push
ficom
xchg
imul
or
add
(bad)
sahf
mov
mov
jns
cmp
xchg
aam
pop
ds
sub
ds
ja
push
inc
xchg
adc
mov
retw
in
xchg
(bad)
rol
leave
xlat
adc
mov
adc
popf
or
cs
ja
mov
sbb
push
lods
(bad)
jecxz
fwait
lods
sbb
mov
pop
jne
mov
fnstcw
int
cli
jne
mov
xor
mov
loope
cmc
xchg
bound
fld1
dec
scas
int3
xchg
iret
test
add
and
cmp
nop
add
pop
pusha
mov
addr16
push
call
add
mov
not
inc
and
imul
ret
mov
sub
das
inc
inc
add
inc
and
push
pop
cld
call
call
leave
nop
dec
pop
or
inc
sti
mov
inc
dec
and
(bad)
je
test
js
xchg
push
push
sbb
xchg
fs
cmp
cmp
mov
jge
repnz
call
mov
jmp
and
dec
inc
dec
rcl
or
adc
lahf
cmp
inc
es
imul
mov
imul
mov
icebp
adc
cli
popf
mov
js
mov
cmp
lds
xchg
push
cmp
in
jge
int3
imul
aaa
and
dec
daa
inc
sub
jp
ret
push
mov
scas
or
jp
pop
aas
push
push
mov
gs
xchg
adc
aaa
adc
(bad)
sbb
dec
adc
(bad)
imul
push
ins
movs
ins
imul
leave
jno
xchg
out
loopne
icebp
jge
data16
je
cmps
cmp
pop
scas
lahf
and
aaa
pop
mov
sub
or
loope
sbb
or
mov
pop
sbb
and
sbb
cs
adc
cmp
pusha
(bad)
pop
xchg
mov
scas
jmp
jmp
add
pop
xor
push
cmp
outs
dec
jg
xor
(bad)
mov
push
dec
pop
push
mov
mov
mov
(bad)
push
inc
xchg
inc
inc
jmp
call
(bad)
cmps
jo
es
ret
xchg
dec
push
add
push
sub
cmp
imul
inc
mov
xor
pop
sbb
mov
xchg
inc
out
std
mov
mov
xlat
jmp
jmp
mov
stc
ss
pop
jle
sub
push
out
mov
call
and
or
cdq
aad
nop
ins
retf
pop
in
sbb
out
popa
into
lahf
xor
inc
mov
movs
fs
aam
and
adc
sti
xchg
ins
add
xor
btr
hlt
retf
pushf
jle
push
sub
jne
pop
out
outs
mov
xor
(bad)
cdq
inc
inc
shl
adc
ficomp
add
mov
mov
dec
in
out
dec
loop
shl
loop
cmp
(bad)
jo
or
popa
adc
pop
sub
xor
jp
pop
xchg
cmp
test
mov
jg
mov
ss
test
(bad)
nop
pop
add
jns
aad
(bad)
push
pusha
xchg
fild
or
adc
out
into
sbb
cmp
jne
stos
js
fs
jb
inc
outs
adc
mov
mov
scas
test
mov
outs
sub
push
mov
mov
pop
xchg
ss
ret
mov
sub
(bad)
aam
aas
jb
add
daa
push
push
pop
(bad)
adc
dec
lds
inc
(bad)
fpatan
scas
adc
lods
push
xchg
(bad)
cmp
mov
mov
out
inc
cld
loop
xchg
inc
test
add
add
xor
or
cmp
leave
pop
nop
mov
add
ror
ret
xchg
cld
sub
icebp
cmps
mov
fldenv
mov
mov
inc
adc
adc
mov
sbb
shl
adc
fidiv
dec
mov
call
retf
adc
cmp
jne
test
sub
gs
mov
fwait
mov
ja
push
or
fdivr
ins
jp
cmc
add
jae
lods
xor
hlt
rcl
sbb
popf
cmc
mov
mov
cmp
add
adc
push
int3
int
xchg
arpl
movs
shr
add
(bad)
out
inc
stos
shr
mov
cmp
mov
aam
pop
jl
data16
inc
jmp
hlt
(bad)
pop
or
(bad)
(bad)
cmp
bsf
sub
out
adc
push
jp
(bad)
mov
pop
pusha
lahf
pop
push
retf
xchg
inc
add
ror
aad
stos
push
cmp
fistp
shr
dec
jne
jne
mov
popa
mul
movs
pusha
aad
adc
push
leave
pop
add
ror
je
lock
in
jg
sub
aas
fsubr
xchg
push
xor
sub
stos
enter
xchg
inc
popf
cli
test
pop
pop
aas
mov
xchg
jmp
lock
push
fmul
sbb
sub
pop
or
lock
outs
out
loope
std
aaa
mov
dec
aam
mov
ss
(bad)
xchg
out
les
add
loop
jg
iret
sub
les
leave
push
and
sbb
hlt
ret
add
int
jno
pushf
sub
jp
test
jbe
arpl
dec
(bad)
mov
dec
in
bound
fwait
js
(bad)
gs
shl
popf
retf
sahf
xor
push
std
stc
sub
retf
into
shl
add
cmp
xor
mov
push
jne
fdivr
in
icebp
cmps
mov
xchg
repz
sbb
pop
int3
xchg
lea
inc
(bad)
aad
ror
pop
jns
pop
cmc
cmp
mov
test
xchg
movs
es
adc
inc
imul
and
sbb
xchg
lock
and
jmp
or
repnz
scas
mov
cmp
push
(bad)
dec
out
cmps
addr16
(bad)
in
lahf
mov
test
inc
fbld
cmp
jmp
ds
and
inc
and
mov
xor
xchg
and
inc
rol
movs
push
aad
popf
and
xlat
outs
xor
scas
fwait
mov
fdivr
xor
xchg
and
cmp
and
or
int3
fisubr
jle
sub
inc
and
mov
ret
jp
repz
scas
xor
sub
call
push
call
aaa
inc
leave
cmp
mov
sbb
mov
mov
jg
or
mul
push
mov
int3
je
push
cli
inc
mov
into
mov
sub
rcl
xchg
push
add
shl
mov
jle
addr16
fiadd
mov
cs
dec
sub
push
fimul
or
sti
inc
out
jecxz
push
out
retf
cli
stos
add
nop
not
stos
or
sbb
punpcklwd
and
xchg
call
xchg
cmp
jae
div
mov
cwde
test
loop
push
call
outs
mov
and
jl
cwde
mov
(bad)
imul
inc
(bad)
dec
mov
mov
aad
or
ja
jle
jae
jle
cmc
fidivr
(bad)
out
sbb
inc
or
cs
outs
xchg
scas
in
xor
sbb
or
jbe
or
outs
(bad)
mov
mov
sub
int3
jmp
(bad)
and
mov
inc
cmps
in
and
or
cs
popf
fsubr
lds
and
mov
loopne
push
jge
inc
pop
and
scas
xor
add
pop
cwde
ret
jle
data16
jbe
mov
cmps
cwde
out
pop
imul
push
cs
in
pop
icebp
mov
xchg
imul
popa
adc
xlat
mov
jecxz
sbb
sbb
xchg
cmc
jb
pop
and
push
adc
imul
or
(bad)
mov
jle
shl
sar
push
pop
pop
ret
pusha
jne
dec
mov
push
push
fs
sahf
cmp
push
add
fwait
inc
xchg
mov
fisub
rsm
sub
cwde
clc
mov
sub
fbld
stos
mov
(bad)
push
neg
addr16
mov
lahf
ins
retf
in
sub
ins
and
mov
outs
fidivr
cmp
inc
or
mov
xchg
pop
and
pop
(bad)
cs
push
mov
xlat
call
cmp
push
jne
nop
ret
cmps
outs
push
jmp
scas
outs
pop
es
cld
or
jne
loop
cmp
xlat
xchg
push
ret
aam
add
(bad)
rcl
in
or
or
pushf
xchg
pop
in
fwait
fwait
or
int
(bad)
jne
push
inc
cmc
lods
push
or
lods
inc
pop
ret
shl
in
inc
sbb
push
inc
jmp
sbb
push
push
mov
addr16
out
loope
sbb
fs
cmp
int3
gs
jnp
or
pop
mov
sbb
cmps
xor
hlt
aaa
cmp
push
sahf
mov
out
sub
push
push
pop
mov
sahf
push
ror
sub
inc
popa
or
daa
dec
mov
xor
and
sbb
jl
aaa
retf
arpl
fadd
xchg
sbb
and
jecxz
loope
sub
iret
ss
repnz
mov
retf
mov
pop
je
and
jb
call
sub
hlt
fisub
add
inc
jb
cmc
xchg
sub
pop
mov
jl
xor
mov
xor
mov
inc
test
mov
pop
je
call
rol
jae
repnz
dec
fld
mov
mov
leave
cs
or
in
mov
nop
popa
or
enter
cli
inc
fwait
mov
pop
push
ret
shl
inc
hlt
jns
mov
mov
cwde
je
stos
or
sbb
xor
push
mov
jae
in
scas
das
push
retf
xchg
push
jnp
outs
cmp
into
mov
cmp
push
push
aas
dec
addr16
cwde
mov
xchg
sub
xor
cmp
fimul
neg
div
sub
jns
cmp
push
mov
addr16
adc
adc
lods
fdivr
cmp
scas
mov
xor
leave
popa
rol
das
mov
jb
inc
sub
rcl
sub
push
pop
xchg
scas
sar
and
mov
test
loopne
mov
xchg
mov
outs
(bad)
mov
push
jnp
fdivp
xchg
loopne
js
sar
xor
ja
push
leave
sbb
xor
mov
imul
fst
lods
sbb
xchg
mov
jnp
jmp
leave
(bad)
lods
fsub
inc
cld
jnp
cmp
cwde
(bad)
iret
out
xchg
pop
dec
cmc
mov
mov
pusha
lock
mov
or
loopne
mov
adc
xchg
jp
push
and
pop
(bad)
movs
arpl
pop
fcomip
scas
jne
xor
add
test
jbe
loope
or
ins
and
popf
push
div
mov
ins
mov
ret
jns
sub
jae
push
popf
and
jmp
dec
xor
and
mov
call
mov
ins
jno
pop
pop
in
dec
push
mov
push
imul
outs
cmps
call
xor
dec
or
mov
sub
jl
arpl
loop
jmp
leave
imul
xor
dec
sub
mov
cli
out
stos
mov
push
dec
jae
int
in
push
rol
imul
fwait
xchg
cmp
(bad)
dec
adc
and
pop
or
or
cs
adc
mov
and
pop
mov
cmps
inc
inc
mov
stos
jnp
es
push
dec
mov
lea
inc
icebp
jo
sbb
xor
pop
in
xchg
or
inc
retf
mov
mov
aad
xchg
push
les
xor
mov
in
pop
clc
imul
lea
add
out
cmp
test
dec
sub
xor
or
hlt
push
xchg
rol
arpl
es
sub
repz
cld
std
and
ds
cmps
pop
push
lahf
push
leave
dec
dec
jne
out
rcr
ja
mov
in
jbe
cmp
out
mov
pop
mov
loope
cmp
out
sbb
jo
cld
cmp
sbb
pop
std
mov
scas
push
or
xchg
icebp
xchg
jecxz
outs
xchg
shl
sbb
push
xlat
mov
jbe
or
cmp
xor
push
sbb
cmp
add
pop
(bad)
sub
test
mov
add
jne
jmp
test
push
scas
xor
mov
(bad)
call
(bad)
jp
cmp
shr
xchg
mov
rol
fadd
pushf
add
test
sbb
mov
cmp
xchg
xchg
test
ror
mov
dec
inc
(bad)
jmp
dec
pop
inc
xor
rcr
sar
mov
cmp
mov
ficom
jbe
sub
mov
in
aas
scas
jmp
(bad)
inc
or
push
add
adc
ja
pop
gs
cmp
cli
aas
aam
ds
xchg
dec
in
test
xchg
outs
push
push
sbb
sub
or
int3
xchg
es
or
out
add
je
xor
jns
xor
sub
retf
sbb
push
inc
repz
mov
stos
push
out
mov
sub
add
movs
pop
(bad)
(bad)
es
jmp
and
mov
inc
loop
retf
dec
dec
mov
cmps
dec
inc
or
mov
stos
sbb
push
imul
xor
or
xlat
mov
mov
sub
jno
add
out
mov
ficom
lods
mov
and
add
xor
and
inc
cmp
mov
fdivr
rcr
jle
(bad)
xchg
or
call
in
add
jg
xchg
enter
push
sbb
mov
out
add
mov
jmp
push
or
mov
adc
hlt
clc
pop
ins
retf
shr
xchg
call
jp
dec
call
shl
and
aad
movs
jno
push
mov
lea
sub
bnd
ret
aas
or
mov
(bad)
mov
mov
mov
ds
xchg
dec
jmp
in
lods
movs
push
adc
fidivr
in
in
jp
(bad)
inc
aaa
sub
xchg
dec
xor
iret
xchg
outs
push
jns
add
jnp
out
(bad)
retf
add
dec
push
mov
xchg
sbb
test
and
outs
test
in
(bad)
das
sbb
mov
cmps
pushf
fst
inc
imul
int
popf
out
out
outs
iret
dec
fcom
push
dec
retf
adc
inc
stos
jnp
scas
ror
not
push
mov
xchg
mov
mov
cld
fist
inc
loop
sbb
mov
rol
dec
push
(bad)
ret
push
pop
add
dec
sub
xlat
ja
dec
test
lea
nop
mov
imul
fld
and
mov
push
push
mov
shl
add
loopne
jecxz
sti
dec
in
fcomp
mov
xchg
in
or
inc
stos
or
mov
cmp
fs
inc
sti
inc
ret
lods
and
cmc
out
cmpxchg
mov
add
sti
repnz
sbb
mov
mov
fisttp
push
adc
fcomp
ss
sti
jmp
add
ret
xor
mov
in
inc
mov
loope
out
and
neg
rol
jle
inc
sbb
mov
inc
in
test
and
das
xor
jge
test
inc
std
(bad)
fcomi
xchg
(bad)
std
sar
sbb
pop
mov
(bad)
cli
xor
sub
hlt
jno
sbb
ja
xchg
in
out
shr
imul
inc
pushf
jle
or
sti
xchg
(bad)
mov
push
pop
inc
mov
add
jl
add
fcmovnu
lods
jns
push
repnz
adc
xchg
cdq
jae
sub
xchg
jno
pop
pop
pop
and
js
mov
xor
adc
outs
mov
pop
sub
into
in
hlt
adc
repz
jbe
sub
test
adc
out
stos
popa
mov
(bad)
in
mov
sete
mov
outs
adc
xchg
jmp
push
aas
dec
imul
add
mov
push
mov
add
(bad)
stos
test
pusha
mov
mov
(bad)
sub
xchg
jns
outs
sbb
add
jnp
push
push
(bad)
mov
leave
sar
jnp
(bad)
ret
or
sahf
loope
hlt
sbb
sub
add
pop
add
jne
mov
xor
imul
adc
sub
aaa
mov
xchg
cmp
dec
adc
popa
jle
pop
or
mov
ret
mov
imul
and
fdivr
mov
push
cmp
stos
cmp
cdq
popa
sub
mov
mov
adc
fwait
cmp
xor
jae
jg
leave
(bad)
loope
dec
sub
or
retf
ja
xchg
cmp
inc
gs
sbb
xchg
dec
inc
or
call
mov
(bad)
js
retf
stc
jnp
jge
mov
xor
and
xchg
cwde
cmp
cmp
fsubrp
push
mov
mov
jmp
push
popa
jmp
or
inc
or
pop
push
dec
js
scas
(bad)
jbe
(bad)
imul
sbb
arpl
das
not
imul
xchg
sti
pushf
xor
ficom
cmp
out
jae
in
mov
jb
rcl
pop
xchg
pop
je
fsub
pusha
popf
jecxz
or
fucomp
shl
inc
xchg
pop
adc
lods
add
or
cdq
sub
daa
stos
adc
xor
gs
mov
nop
dec
repnz
xlat
adc
jecxz
sbb
fwait
fwait
or
gs
mov
mov
aaa
adc
or
ins
(bad)
or
daa
lock
stos
test
dec
mov
test
xor
mov
pop
and
sub
dec
ror
fwait
xchg
(bad)
jle
and
aad
sti
jns
pop
ret
xor
movnti
ins
push
mov
sbb
and
fidiv
xor
or
add
push
push
fiadd
mov
test
data16
and
loop
xchg
jb
push
ret
popf
push
mov
(bad)
arpl
fs
dec
or
push
fwait
inc
push
cmp
call
inc
push
js
mov
cmc
arpl
popf
ficom
mov
stc
mov
sub
fisubr
add
ins
xchg
cmp
icebp
pushf
test
(bad)
push
mov
in
les
mov
mov
xor
push
fs
dec
sub
fnstsw
pop
pop
lea
and
into
add
or
in
push
cdq
mul
aaa
loopne
mov
dec
jl
and
mov
mov
loop
inc
mov
jmp
ja
je
pop
outs
dec
fs
and
pop
scas
add
mov
add
ds
jns
enter
add
hlt
fsub
fidiv
pusha
lods
push
push
mov
adc
sti
in
test
in
clc
mov
sbb
jl
loope
add
and
jno
sti
sbb
repnz
repnz
xchg
push
jecxz
inc
pop
ret
aad
mov
adc
adc
mov
shl
pop
hlt
mov
sub
adc
or
ret
push
mov
adc
adc
pop
add
jle
adc
lods
add
or
int
sub
or
pop
nop
adc
std
inc
pop
add
ror
int3
pop
add
loopne
sub
push
push
ss
inc
pop
ja
jg
jno
fwait
jge
rcl
clc
push
mov
and
inc
cmp
int3
imul
and
adc
inc
test
fld
les
xchg
sbb
adc
jmp
and
mov
jnp
out
mov
mov
sub
xor
add
xor
and
pusha
inc
dec
fmulp
fimul
popa
movs
fsub
test
addr16
xor
mov
ins
jbe
and
cs
hlt
sub
sub
sbb
sar
dec
mov
je
ins
and
xor
jb
xchg
ins
fs
out
pusha
pop
mov
pop
add
call
arpl
xchg
in
push
xor
adc
fisttp
dec
sub
sub
call
dec
lea
xor
pop
pop
dec
and
xchg
ret
xchg
je
xchg
xchg
adc
dec
jp
push
and
dec
ret
int
sbb
pop
(bad)
jno
jp
cmp
or
push
(bad)
mov
dec
fldenv
(bad)
lea
mov
scas
push
ret
ret
inc
out
ret
stos
sar
mov
adc
xor
les
pop
mov
(bad)
rcr
pop
leave
in
mov
fwait
push
retf
pop
aam
xchg
dec
mov
mov
cmc
mov
and
pop
sub
and
pop
xchg
adc
sbb
xor
mov
scas
sub
mov
mov
jg
popa
sub
cmp
repz
push
sbb
das
mov
fwait
aaa
push
sti
into
ror
mov
mov
jg
stc
test
ret
ins
jmp
ins
adc
push
push
jmp
ja
in
xchg
sbb
inc
pop
xor
in
sbb
push
ja
add
retf
xor
rep
or
xor
jle
cmps
cdq
push
mov
jns
sub
pop
int
mov
fimul
push
ins
mov
test
mov
push
hlt
sti
and
jmp
mov
outs
lds
ss
inc
retf
sbb
jno
ror
movs
or
mov
mov
mov
push
mov
dec
dec
rol
xchg
dec
and
add
sbb
sub
sbb
dec
xchg
mov
and
test
mov
push
cdq
in
test
xchg
sub
(bad)
aam
jbe
(bad)
mov
imul
pushf
(bad)
lods
inc
jle
(bad)
mov
scas
inc
fmul
and
retf
ret
adc
push
cmp
or
les
ret
xor
shl
inc
xor
sbb
in
push
pop
dec
add
fcom
adc
xor
cmps
mov
lea
pop
into
xor
icebp
sub
enter
mov
sbb
retf
ins
pop
cmc
js
sbb
sub
adc
scas
std
aam
outs
retf
addr16
popa
ins
xchg
xchg
and
or
pop
jno
out
mov
xor
inc
mov
push
retw
imul
mov
xor
push
cmp
cmp
add
in
adc
xchg
mov
pushf
push
cmc
(bad)
mov
push
adc
loop
and
or
pop
push
jae
add
sti
lahf
and
sbb
push
jge
xor
mov
add
sub
mov
imul
cmc
push
adc
xor
addr16
push
mov
addr16
ins
cwde
adc
xchg
scas
push
xor
clc
aad
lods
xchg
push
inc
enter
pusha
xchg
dec
(bad)
out
das
fldcw
jbe
pushf
mov
dec
cmps
cdq
adc
pop
scas
mov
mov
fild
jle
fwait
sub
jecxz
cmps
mov
mov
movs
stc
lods
scas
push
in
js
imul
je
ins
xor
xlat
xchg
out
repz
sub
or
repnz
mov
dec
fwait
popa
push
pop
push
dec
mov
fnstsw
loopne
xchg
(bad)
push
jge
inc
arpl
mov
add
icebp
inc
mov
jle
xlat
adc
shr
icebp
lock
jne
rcl
sub
cmp
test
test
lea
push
cli
inc
aas
data16
dec
ror
daa
test
(bad)
xchg
sub
in
mov
(bad)
shr
test
iret
data16
lds
lahf
in
inc
mov
loope
adc
sar
mov
inc
push
mov
pop
pop
in
push
ja
aad
adc
ss
popf
add
sahf
test
(bad)
ret
fiadd
sbb
retf
pop
into
imul
cwde
push
mov
pop
movs
xchg
adc
vmread
add
scas
push
call
fnstenv
xchg
sbb
xchg
xlat
push
cld
push
cmp
xchg
in
jmp
mov
fdivr
inc
jmp
sub
xor
pop
movs
popa
addr16
jae
cmp
xchg
sub
xchg
or
(bad)
adc
mov
xchg
into
push
fldcw
test
cmps
mov
pop
lock
sub
mov
sahf
and
mov
int3
loop
add
imul
inc
test
dec
pop
jmp
ret
(bad)
call
in
fist
cmp
jp
push
jl
xor
in
pop
inc
dec
lock
rcr
outs
jg
pop
stos
or
push
sub
mov
sub
loope
(bad)
imul
imul
xchg
mov
pushf
movs
push
mov
dec
jecxz
or
pop
movs
jnp
xor
push
aad
mov
shr
loope
cmps
push
sbb
jno
adc
ret
(bad)
sbb
inc
scas
adc
fdiv
add
sbb
shl
sub
adc
int
imul
xchg
in
pop
push
int3
pop
pop
rol
mov
(bad)
mov
mov
hlt
out
not
xchg
sti
(bad)
(bad)
les
jo
or
outs
cmp
cld
shl
out
jp
aas
daa
xor
sbb
pop
ds
push
arpl
push
push
inc
cmp
(bad)
in
(bad)
inc
ja
les
fwait
out
xchg
add
(bad)
cwde
outs
sub
test
daa
xchg
jle
xchg
pop
dec
sub
(bad)
fimul
lock
dec
cwde
pop
adc
adc
xor
cwde
push
inc
dec
mov
popf
nop
jmp
push
or
xchg
cmp
pop
add
push
xchg
pusha
and
pop
push
mov
outs
or
pop
mov
cld
aaa
add
movd
inc
or
xor
fstp
and
xor
ror
adc
loope
sub
push
xor
push
fsubr
cmps
inc
push
rcl
xor
add
jno
not
ins
xor
loopne
dec
sub
pop
jne
out
popa
jge
rol
mov
icebp
xor
cwde
or
xchg
mov
icebp
xlat
push
xchg
jne
(bad)
in
adc
mov
test
add
popf
or
inc
ret
or
jp
int
fnstenv
inc
ja
xchg
mov
or
in
and
cmp
jns
es
lods
mov
loope
push
xor
or
pushf
mov
sub
mov
or
sar
push
sbb
mov
test
ja
push
ja
call
xchg
cmps
push
in
cmp
jg
(bad)
mov
xor
jb
dec
mov
loope
adc
push
aas
out
inc
and
mov
in
inc
stos
push
ror
fidivr
mov
mov
dec
in
push
test
dec
popf
loope
mov
mov
or
outs
nop
retf
push
test
rep
outs
test
cmp
xchg
outs
stos
(bad)
arpl
push
pop
or
aam
push
inc
popa
ins
xor
js
xlat
and
jmp
push
shr
push
add
and
test
mov
es
cmp
and
or
xor
dec
arpl
jl
pop
es
xchg
and
ror
sbb
cs
jae
xor
mov
push
adc
fdivr
adc
mov
pop
add
hlt
sbb
idiv
jns
xor
fnstsw
mov
es
out
jae
mov
sti
movntps
push
cmp
jnp
test
jmp
inc
sbb
cs
xor
xchg
in
add
mov
pusha
xchg
dec
arpl
sub
int
jns
pop
sahf
push
pop
iret
(bad)
dec
mov
test
shr
jle
inc
out
dec
hlt
jns
cmp
fxch
sbb
dec
pop
xor
imul
es
mov
jae
adc
not
mov
std
add
mov
pop
mov
cmp
or
iret
push
fidiv
mov
push
ds
mov
cli
adc
pop
dec
jb
aad
pop
or
jmp
cmp
add
mov
jle
inc
out
cdq
xor
nop
mov
push
test
mov
inc
bound
cmp
pop
ror
movs
jp
sub
push
and
add
hlt
add
mov
loopne
les
pusha
mov
stos
sbb
mov
(bad)
imul
push
in
add
in
or
inc
cmp
mov
fadd
cs
fcmovnu
push
fs
jecxz
outs
hlt
mov
push
pop
mov
jl
or
lods
retf
stc
sub
or
sbb
mov
and
fmul
jbe
cmps
daa
push
mov
sbb
stos
shl
add
test
repnz
xor
jae
nop
std
mov
and
sbb
push
inc
lds
mov
push
pop
pop
mov
sub
movs
push
mov
daa
pop
push
jp
movs
sbb
xchg
out
pop
xchg
iret
sub
push
test
mov
addr16
xchg
push
pop
call
cmp
(bad)
cmp
arpl
or
sbb
sub
dec
inc
or
gs
push
sub
pop
push
add
(bad)
mov
push
test
adc
repnz
ds
cmp
adc
mov
stos
setnp
mov
pop
bound
xor
cmps
jp
dec
adc
inc
(bad)
inc
imul
pop
jl
out
push
cmp
add
in
cmp
outs
cmps
inc
in
out
test
lds
(bad)
call
sbb
or
movs
sahf
add
cmc
out
std
stc
cdq
push
and
adc
adc
enter
dec
sahf
jge
xchg
dec
retf
and
jl
mov
enter
ins
iret
push
sbb
sbb
push
cmp
(bad)
scas
loopne
(bad)
lahf
bound
(bad)
(bad)
adc
sbb
xchg
mov
adc
(bad)
fs
pop
pushf
xchg
mov
int3
outs
test
pop
gs
lahf
cmps
add
hlt
loop
ins
sti
shr
xchg
mov
in
and
or
repnz
(bad)
sbb
push
and
adc
cmp
aaa
out
movs
xlat
pop
sti
adc
xor
jmp
mov
jg
or
enter
dec
or
sbb
in
hlt
mov
lock
pop
xor
mov
jne
pop
cmps
pop
inc
xchg
jcxz
sub
inc
sar
rcr
xchg
clc
xchg
nop
push
sbb
loope
sahf
push
sub
dec
addr16
xchg
or
push
mov
adc
and
clc
mov
sbb
outs
pop
ret
fiadd
pusha
mov
xchg
into
sub
sub
mov
inc
out
pop
jae
ss
jp
mov
jp
movs
or
lods
or
mov
xchg
sbb
inc
outs
ja
dec
mov
sub
jb
mov
xlat
mov
cwde
out
mov
jnp
inc
jge
or
sbb
xlat
test
xor
fnsave
pop
jp
(bad)
pop
mov
jmp
je
sbb
popa
leave
lahf
mov
test
mov
sbb
jnp
fadd
cwde
cmps
fimul
iret
repnz
arpl
mov
xchg
fistp
push
cld
and
fwait
pusha
inc
scas
sbb
push
icebp
pop
sbb
push
push
mov
adc
addr16
call
call
in
(bad)
pop
int
loop
adc
(bad)
and
xor
ret
and
mov
push
xor
je
in
je
add
inc
xchg
jns
mov
stos
aad
jbe
pop
leave
xchg
rol
fld
stc
call
ds
movs
jg
jnp
add
push
add
or
xchg
adc
xor
sub
aad
call
pop
and
in
mov
popf
rcr
or
ret
fnstcw
lock
push
sub
hlt
add
ret
mov
xchg
jo
adc
cmp
(bad)
mov
int3
rcr
pop
mov
xlat
and
bound
call
pop
and
jmp
pop
aad
add
cs
sbb
jbe
cmc
push
jo
add
sbb
sahf
jnp
push
cmps
dec
stc
and
fild
jl
push
add
mov
mov
clc
rcr
jmp
xor
cmp
fnstcw
(bad)
jp
sub
pop
add
pop
sbb
out
mov
pop
aas
inc
mov
sbb
mov
pop
push
push
cdq
sbb
stos
bound
in
out
push
retf
movs
(bad)
fwait
mov
les
inc
jecxz
sahf
repz
jecxz
and
repnz
pop
and
pop
shl
jl
mov
clc
in
xor
stos
aad
sbb
stos
mov
xchg
(bad)
nop
and
push
pop
(bad)
in
add
xchg
ror
lods
sti
jnp
imul
xchg
neg
xchg
add
sub
or
int3
out
cs
jmp
std
stc
add
adc
pop
push
mov
dec
ficom
sahf
cli
mov
repz
jne
shl
mov
inc
fcomp
xchg
dec
mov
fnstcw
or
dec
adc
call
idiv
inc
xor
cwde
xor
gs
test
jb
mov
loopne
or
std
mov
pushf
sti
push
dec
xchg
cmps
lea
popf
sbb
sub
pop
pop
pop
dec
mov
xchg
dec
fld
or
mov
dec
push
out
mov
hlt
or
mov
or
jb
jbe
call
sbb
mov
outs
sbb
fdivr
loope
xchg
lea
and
(bad)
aad
adc
pop
xchg
je
mov
mov
push
outs
push
mov
gs
lods
sub
adc
sbb
jecxz
mov
repnz
add
sub
cmp
push
jne
scas
cmp
imul
mov
aas
jmp
adc
je
adc
test
call
fs
fst
test
stos
aaa
stos
pusha
cmp
or
fistp
mov
iret
ja
adc
gs
cmp
sbb
enter
or
inc
daa
imul
add
cmp
and
push
fdiv
(bad)
test
ins
lds
pop
(bad)
push
sub
xchg
call
pop
add
mov
shl
inc
lods
neg
cwde
push
imul
sub
inc
sub
add
push
pop
xchg
in
xchg
and
test
cs
outs
outs
je
push
lea
loopne
jmp
aam
arpl
mov
xor
pop
fmul
adc
leave
and
xchg
xor
mov
in
xor
push
stos
sub
adc
lahf
loopne
or
arpl
pop
mov
rcl
scas
or
or
xchg
pop
sub
or
or
sub
call
fadd
and
in
lea
lock
seta
push
jb
add
pushf
mov
push
cmc
cdq
dec
cmp
popf
cwde
hlt
aad
(bad)
out
fstp
std
(bad)
ficom
in
(bad)
std
pop
jnp
xchg
mov
aaa
call
in
mov
inc
in
push
adc
hlt
sti
bound
push
xor
pusha
loope
sbb
in
inc
loopne
mov
jno
mov
sbb
add
inc
xchg
pop
push
es
add
cdq
ja
mov
adc
dec
push
xchg
jge
or
mov
shl
in
repnz
enter
add
mov
gs
xchg
dec
(bad)
je
test
xchg
in
int
pop
(bad)
jo
mov
ins
das
lahf
imul
sbb
call
cdq
mov
pop
push
dec
mov
test
gs
cs
jge
inc
sahf
pop
cmps
add
(bad)
xchg
je
cmp
loop
sbb
pop
dec
aam
add
dec
cmc
popa
jecxz
ret
push
loopne
xor
dec
jge
push
jae
sbb
xchg
mov
fdivr
repnz
inc
jmp
pop
adc
cs
stc
std
mov
stos
mov
bound
cmp
pop
hlt
sbb
push
jl
dec
and
pop
xor
adc
xchg
pop
push
add
aam
iret
jmp
bound
sub
outs
(bad)
sbb
mov
call
mov
dec
pop
enter
adc
aaa
dec
adc
das
add
or
mov
dec
sub
ins
ins
and
xchg
cmps
scas
mov
fld
xrelease
inc
jmp
xor
pop
xor
pop
mov
fadd
icebp
jg
addr16
fidivr
pop
les
dec
or
and
aas
js
add
repz
ja
popa
bnd
add
push
mov
xchg
mov
or
ror
mov
or
dec
mov
mov
add
gs
call
push
pop
or
jns
add
data16
lods
shl
dec
popa
or
xor
push
mov
in
outs
mov
jl
jnp
mov
ret
out
cmp
cmp
lahf
add
sbb
(bad)
ficom
mov
xor
scas
dec
test
aas
cmps
mov
push
in
ss
dec
test
loop
fidivr
and
mov
xchg
xchg
xchg
loope
mov
dec
dec
in
out
pop
xchg
jo
test
rcr
mov
scas
xchg
xchg
mov
or
push
jmp
adc
shl
add
pusha
ja
push
call
ficomp
shl
dec
mov
jae
and
leave
jmp
aaa
push
xor
cmp
inc
lods
inc
dec
das
jno
cmp
aam
(bad)
(bad)
dec
dec
push
mov
lds
movs
xchg
push
xor
pop
aas
sbb
xor
outs
in
inc
pop
lds
arpl
sub
pop
repnz
sti
cmp
dec
out
inc
sbb
add
mov
ins
mov
mov
pop
scas
inc
fild
dec
and
lock
test
cmp
ror
ds
mov
scas
push
xor
pop
adc
icebp
out
pop
jns
xchg
and
cli
mov
stos
sub
test
fisubr
xor
out
jle
rcr
xor
xchg
arpl
cmps
fcomp
outs
sub
stos
fistp
bound
mov
ins
retf
mov
mov
and
cli
les
mov
add
mov
and
sub
jnp
out
mov
es
pop
xchg
mov
je
stos
mov
jnp
cmps
or
sub
outs
imul
add
in
inc
pop
arpl
outs
aam
inc
cmp
or
cmp
retf
mov
pop
or
inc
js
xchg
int3
js
push
(bad)
gs
outs
cmps
shr
lods
push
mov
movs
jo
mov
push
cvtps2pd
dec
in
inc
dec
xchg
jbe
pop
inc
jl
xor
inc
cwde
fwait
test
and
arpl
mov
mov
loopne
stos
adc
adc
jecxz
dec
dec
cmp
mov
or
xchg
(bad)
sub
lods
test
mov
cld
cli
clc
push
out
mov
addr16
sbb
call
jns
cmp
retf
pop
mov
pop
stos
sbb
pop
or
test
lods
jbe
and
retf
sbb
js
(bad)
js
fsubr
ficom
fild
and
test
mov
mov
shl
ret
cmp
add
ss
popf
mov
(bad)
mov
xor
fldenv
mov
push
mov
jns
pop
imul
mov
inc
out
call
jge
add
add
adc
add
test
ins
and
daa
xor
mov
or
cmp
adc
aam
movs
fisubr
sbb
(bad)
jp
and
push
jns
sub
imul
gs
ror
aam
cmp
and
jmp
mov
imul
les
int3
jp
imul
xchg
mov
xchg
mov
cs
mov
ins
jno
jnp
retf
scas
xchg
arpl
or
loopne
sahf
idiv
stos
lock
clc
push
push
dec
mov
mov
sub
jg
aas
mov
loop
fs
xchg
ja
add
mov
xchg
(bad)
shl
out
sti
js
or
rol
push
scas
sub
ins
xor
or
sbb
sti
jb
xchg
les
push
test
das
leave
mov
or
xor
inc
mov
popa
adc
jle
jmp
dec
in
pop
jae
sbb
push
adc
mov
lods
aaa
out
adc
movs
inc
jne
xchg
sub
adc
jl
into
sub
add
lock
xchg
popf
cmc
test
xor
stc
shl
mov
dec
dec
mov
xchg
test
mov
inc
cmp
push
aaa
mov
data16
dec
jbe
sbb
or
jne
push
pop
loopne
call
dec
repz
movs
xlat
xchg
mov
test
xchg
int3
dec
retf
jp
inc
pop
adc
popf
inc
stos
outs
jmp
cmp
adc
stc
xchg
lahf
adc
adc
mov
pop
imul
es
ficom
out
lods
pop
push
jp
pop
push
inc
mov
dec
adc
mov
stos
inc
ret
pushf
jns
ins
sub
sub
mov
push
pop
push
jmp
xor
pusha
pop
inc
mov
cwde
mov
mov
(bad)
ja
cwde
push
sahf
and
ss
stos
sub
in
jne
jmp
adc
(bad)
jmp
inc
push
mov
repnz
(bad)
push
adc
mov
push
and
add
(bad)
fcomp
or
push
loop
call
jge
sbb
inc
and
push
aaa
push
jmp
push
mov
dec
jge
stos
mov
lock
add
or
jmp
pop
push
pop
call
or
lea
and
jg
repz
(bad)
loop
jns
(bad)
fsubr
cmp
out
test
sti
xor
or
push
pusha
shr
mov
rcl
mov
pop
cmps
(bad)
daa
xchg
sbb
popa
sar
adc
dec
sar
ins
and
cs
mov
mov
icebp
sub
lahf
cmps
xchg
lahf
int3
add
lock
xor
mov
adc
dec
jmp
or
pop
jecxz
and
mov
mov
popf
xchg
lods
pop
icebp
scas
cmp
dec
hlt
adc
test
addr16
fst
jns
add
jno
iret
pop
rol
push
ss
mov
clc
cmp
xchg
xchg
cmps
les
mov
into
cmp
icebp
ror
scas
fidiv
xor
cmps
dec
sbb
(bad)
into
jmp
sub
sar
or
fbstp
pop
mov
xchg
mov
(bad)
and
jb
xchg
push
out
imul
sbb
(bad)
mov
jl
add
lods
ffree
jp
mov
inc
retf
outs
or
shr
push
cli
ret
les
nop
and
xor
sub
add
mov
mov
xchg
jns
fld
adc
jae
mov
or
into
jg
repnz
loop
xor
int3
les
mov
cwde
pop
scas
inc
mov
add
aam
mov
and
lds
cmp
jmp
cmp
lds
jecxz
out
xchg
or
cmp
fnsave
adc
mov
popf
nop
xor
xchg
add
dec
imul
mov
fistp
jg
stos
mov
iret
xor
scas
xor
jl
psrlw
jmp
sti
int3
ret
daa
inc
adc
repnz
shr
iret
cmp
(bad)
mov
ins
xor
dec
mov
mov
or
ds
xchg
mov
cmp
xor
pop
push
popa
mov
sbb
dec
ja
jb
fidiv
xor
das
cmp
imul
mov
inc
addr16
mov
inc
(bad)
shl
loopne
pop
les
mov
mul
xchg
mov
mov
mov
mov
adc
jns
jle
mov
fsub
and
bound
inc
ret
loope
dec
aaa
add
xchg
inc
or
fdiv
sub
jae
dec
hlt
cmc
pop
popf
lock
sub
sbb
push
in
lds
rcl
add
push
add
test
jns
mov
add
(bad)
gs
inc
sbb
dec
jo
maskmovq
mul
or
jecxz
(bad)
repnz
mov
mov
ret
aad
push
rcl
lea
out
push
jno
loopne
push
jo
enter
mov
loop
push
pusha
xchg
stc
jne
call
mov
cmp
ror
cmp
imul
xlat
fdiv
or
retf
jo
cmp
dec
rcl
cs
sti
mov
call
mov
enter
aam
shl
rcr
int3
xor
fsubp
xchg
aas
test
mov
cmc
stos
jmp
sub
pop
cmp
(bad)
pop
pushf
rcl
mov
in
pop
or
(bad)
adc
add
xchg
stos
sbb
aaa
das
ja
cmovg
mov
jnp
jne
push
and
jmp
gs
mov
(bad)
leave
push
lock
sbb
xor
sbb
add
inc
lahf
mov
cmc
add
ficom
mov
xchg
jmp
or
push
mov
rol
cmp
push
mov
jns
push
mov
test
lea
cmp
jle
mov
or
inc
pop
out
into
push
in
mov
daa
jae
ror
mov
xchg
inc
in
jae
jl
pusha
jno
sahf
mov
(bad)
repnz
jmp
mov
int
in
inc
cdq
mov
sbb
jnp
div
or
or
add
mov
and
jge
fmul
xchg
adc
jge
cmps
hlt
pop
stos
test
and
pop
fisub
movs
stc
sar
xchg
or
hlt
ins
dec
movs
dec
movs
push
jmp
cmc
fild
ins
add
stc
cli
jbe
jg
(bad)
xchg
pushf
xor
scas
shl
jbe
pop
mov
jnp
pop
rcr
or
mov
inc
pop
fidivr
or
sbb
push
xor
iret
and
inc
(bad)
div
fld1
inc
es
xchg
xor
mov
dec
sub
in
sbb
fdivr
cmp
loope
mov
in
dec
sbb
(bad)
aam
push
lds
pop
mov
pop
pop
dec
call
call
adc
jne
outs
or
jb
pop
xor
call
or
dec
jecxz
xor
mov
mov
test
in
mov
daa
out
cli
dec
or
xor
and
fsub
ins
jge
xor
xchg
psrlq
mov
lods
add
ins
inc
pushf
xchg
adc
std
repnz
cmp
icebp
aam
or
rcr
jp
dec
in
mov
sbb
jbe
sub
movs
in
cmp
inc
and
daa
adc
jns
sbb
mov
lods
(bad)
push
shl
push
or
call
or
out
icebp
out
inc
jmp
cmp
sub
and
xor
or
shl
mov
adc
cmps
rcl
xor
cmps
rcr
pop
xchg
(bad)
fdivr
ins
out
in
repnz
jae
idiv
into
sbb
jns
xor
gs
sbb
inc
mov
jge
test
push
mov
ficomp
mov
shl
(bad)
push
out
sub
dec
cmp
in
jo
fprem1
imul
xor
js
loop
push
jle
jg
(bad)
pop
test
les
mov
call
pop
pop
imul
and
and
cli
sub
xchg
out
jae
or
jb
into
and
out
push
mov
jecxz
and
les
iret
cdq
loop
(bad)
loopne
stos
stos
dec
and
imul
out
sub
or
mov
popa
mov
shl
(bad)
test
(bad)
rcl
es
or
add
or
mov
xor
(bad)
mov
jmp
imul
xchg
jmp
dec
dec
lods
inc
xor
inc
movs
ins
aam
aas
mov
gs
or
bswap
xlat
js
mul
leave
(bad)
aad
xchg
add
jmp
lds
mov
mov
das
je
pop
out
lea
mov
cmc
add
in
mov
push
pop
(bad)
fmul
mov
and
iret
mov
sub
pop
mov
aas
jae
out
inc
in
jno
mov
inc
mov
cmc
mov
(bad)
cmp
imul
sub
fadd
loop
sbb
loope
inc
pop
test
or
lock
mov
add
jae
fisub
out
pop
ss
mov
mov
jbe
bound
lods
ficom
enter
cdq
mov
xlat
repz
aas
xchg
pop
arpl
add
mov
stos
jb
into
call
dec
mov
cmc
addr16
fnstsw
xor
dec
cmps
xchg
sbb
push
push
and
push
push
out
push
icebp
jl
add
mov
mov
pop
test
(bad)
out
push
in
sub
js
ret
or
xor
fist
add
inc
sbb
stos
scas
adc
jbe
int
jb
iret
jne
test
jno
imul
data16
mov
cmp
sub
sbb
aas
test
sahf
sti
rcr
test
mov
mov
(bad)
mov
mov
fiadd
in
outs
das
and
clc
mov
inc
dec
or
retf
into
mov
(bad)
jo
out
mov
ret
sub
push
mov
push
std
jmp
push
xor
or
stos
outs
lods
movs
xchg
jmp
jae
(bad)
xchg
lds
mov
shl
push
movs
dec
mov
and
icebp
push
jge
add
shl
push
mov
sub
(bad)
cmp
out
std
daa
loop
mov
mov
dec
pop
mov
sub
xor
jl
sbb
lock
adc
iret
ds
xchg
cs
jmp
fild
pop
mov
jg
pop
and
mov
xchg
into
add
pop
call
sub
jle
lods
push
mov
sub
test
adc
xchg
jle
xchg
js
cmp
test
lahf
and
ret
js
cmps
icebp
inc
sbb
popa
mov
lahf
pop
sahf
je
dec
pushf
push
cmp
clc
push
ins
pop
lods
jge
vzeroall
shr
loope
inc
mov
pop
gs
fdivr
es
clc
mov
cwde
inc
rcr
add
hlt
outs
mov
clc
inc
ror
xchg
cld
jmp
ret
clc
fadd
xor
push
aas
xor
xchg
push
fsub
sub
call
mov
push
fucomi
stos
aas
mov
out
inc
push
pop
sub
pop
jl
inc
dec
mov
cmp
arpl
xlat
popf
cdq
mov
mov
add
(bad)
inc
cmp
cwde
ja
dec
clc
and
and
cmp
push
aaa
xor
xchg
repnz
pushf
inc
ret
fnstcw
add
xlat
shl
rcr
push
movs
mov
ror
mov
xor
adc
jge
(bad)
rol
and
sub
or
jb
(bad)
push
pop
les
(bad)
mov
jne
rcr
sbb
mov
pushf
(bad)
jp
mov
jae
push
and
and
inc
xchg
cwde
dec
(bad)
mov
imul
mov
mov
mov
loope
ror
cli
cld
jne
push
dec
aaa
(bad)
mov
imul
jge
repz
dec
call
xor
inc
neg
or
and
iret
ins
inc
aad
sbb
sbb
dec
bound
sub
fwait
jbe
xchg
jmp
jmp
mov
jnp
xchg
push
sub
xchg
aam
adc
cli
mov
das
into
sbb
rcr
in
cwde
sub
jb
in
movs
inc
adc
sbb
fstp
push
sqrtps
or
call
enter
pop
push
mov
xor
pushf
pop
inc
imul
fcom
lahf
xchg
test
and
scas
ja
cmp
call
xor
sbb
pushf
sbb
ret
das
inc
aam
out
and
or
mov
rol
popa
adc
repz
inc
ret
das
mov
dec
inc
(bad)
rcr
dec
stos
push
shl
and
add
syscall
loopne
mov
(bad)
cmp
aad
push
ja
fsub
stos
mov
call
pop
inc
(bad)
lock
mov
ret
xchg
xchg
fadd
sub
mov
movs
jp
dec
dec
(bad)
xor
add
aas
daa
fisubr
and
and
pop
sbb
icebp
cli
sbb
jp
fistp
and
call
imul
fld
mov
dec
xchg
loopne
outs
ds
movs
adc
jge
push
sbb
jmp
mov
push
clc
adc
es
ins
mov
(bad)
mov
xchg
pop
xchg
pop
aad
dec
and
sbb
jb
rcr
mov
sbb
lods
das
std
adc
mov
sti
repz
pushf
adc
stos
aaa
add
push
and
mov
push
cli
jnp
pop
mov
add
and
lea
movsx
xor
adc
add
add
or
call
jle
das
mov
cmp
daa
ror
or
retf
(bad)
xchg
stos
ss
out
inc
fwait
sub
call
add
aas
fst
cmp
fidivr
jo
mov
pushf
xor
(bad)
mov
fimul
and
ds
aaa
cwde
jmp
jno
ror
stos
cmp
sahf
imul
mov
in
sbb
fwait
mov
(bad)
out
popa
xchg
rol
stos
(bad)
int3
sbb
loop
adc
popf
(bad)
outs
xor
mov
xlat
or
loopne
fisub
xchg
in
cmps
das
int3
or
mov
in
call
icebp
mov
sar
mov
or
mov
xchg
pop
pop
btr
into
leave
mov
inc
jle
imul
push
mov
cmp
jo
mov
or
into
js
sub
scas
mov
mov
mov
dec
inc
jb
dec
xchg
aaa
mov
push
push
lods
fs
mov
dec
cmp
push
mov
or
mov
stos
cmp
xor
mov
push
shr
repz
or
adc
or
(bad)
mov
loope
cmps
in
(bad)
in
test
cmp
mov
xchg
sub
or
pop
fcom
lock
cmp
(bad)
dec
fsub
into
out
dec
aam
mov
push
das
cs
cmp
loopne
sub
in
inc
inc
adc
scas
dec
jae
aad
popa
push
popa
repz
sub
mov
push
hlt
cdq
sbb
cmc
(bad)
pushf
pop
and
xchg
mov
cwde
out
cmp
das
sub
arpl
mov
inc
xchg
add
dec
mov
adc
test
repnz
enter
add
add
dec
push
or
loopne
jmp
mov
xchg
fistp
push
imul
mov
inc
hlt
inc
retf
inc
xchg
ins
and
mov
add
(bad)
jl
mov
adc
push
out
test
sbb
jns
(bad)
xor
data16
cmp
mov
adc
fst
out
and
pop
sti
add
stos
out
call
mov
lea
xlat
loopne
cmp
loop
fst
xor
xchg
sub
ret
out
or
push
cmp
iret
xor
je
pop
sbb
out
lods
das
cld
push
and
cmp
push
not
mov
aad
xor
mov
std
cmp
mov
outs
ins
test
mov
(bad)
scas
jns
lds
fwait
in
jnp
sub
enter
or
mov
cwde
call
mov
sbb
clc
sbb
scas
dec
push
rcr
jo
cmc
xor
sti
gs
adc
icebp
scas
sbb
ud1
gs
pop
push
mov
and
shr
je
lea
cmp
fistp
dec
int
push
xor
pop
mov
cmp
outs
cmps
mov
je
or
int
sub
mov
push
fwait
xchg
dec
scas
into
pop
cmc
adc
pop
xor
pop
adc
xlat
and
or
sahf
pop
in
out
daa
pop
shl
lahf
add
repz
xchg
lahf
adc
xor
aas
xor
into
mov
movs
adc
pop
inc
dec
scas
imul
inc
mov
and
and
ins
cmp
sar
push
inc
and
ror
and
pop
cmp
mov
les
loop
int
and
push
pop
sti
ins
mov
iret
loope
inc
arpl
or
ds
imul
add
mov
fsub
xor
fisttp
push
jo
fmul
ret
outs
maxps
adc
and
in
iret
jno
test
retf
pushf
scas
sbb
mov
dec
ds
aam
aam
mov
push
add
or
inc
nop
lods
stos
adc
les
fcomp
push
and
add
fsubp
sbb
xchg
dec
mov
pop
pop
mov
(bad)
cmp
cli
call
retf
inc
or
in
mov
stos
jnp
jmp
pop
scas
inc
adc
mov
and
mov
lea
shl
jp
fisub
cmps
push
mov
jle
push
jne
pop
pxor
inc
iret
push
(bad)
adc
paddsb
cmc
int3
pop
call
stc
mov
mov
loop
fincstp
iret
(bad)
jbe
xchg
mov
das
ror
and
pop
out
cmc
popa
cld
fld
mov
pusha
cmp
into
adc
aaa
cs
add
int3
pop
aad
and
outs
shl
mov
fmul
mov
push
adc
cmp
dec
xor
ins
dec
outs
repz
push
jl
arpl
movs
cmp
ja
adc
or
call
xchg
mov
popf
int
sbb
push
add
push
push
dec
mov
jle
inc
imul
jno
push
xor
test
div
jmp
pop
cdq
dec
mul
jle
mov
jge
aam
xor
leave
leave
out
sbb
aas
jecxz
das
adc
jmp
popf
push
into
inc
xchg
pop
(bad)
mov
inc
inc
push
test
shr
sub
movs
push
stc
cmp
push
hlt
test
iret
cmp
ss
std
aad
sbb
sbb
sub
dec
pop
and
dec
arpl
pop
pop
ds
in
mov
jns
mov
outs
jl
popf
mov
dec
sub
xchg
inc
xor
shl
in
shr
mov
pop
cmc
jle
rcl
imul
jb
push
pop
loopne
and
and
sub
push
sahf
cdq
push
mov
(bad)
pop
mov
dec
mov
mov
add
xor
mov
iret
pop
pop
xlat
jmp
frstor
aam
inc
cmp
mov
or
out
in
sbb
ret
das
adc
xchg
jl
push
mul
pop
xor
or
scas
rol
add
nop
(bad)
jbe
and
pusha
xor
lahf
sbb
in
pushf
call
ds
into
cdq
dec
and
fwait
dec
jae
cmc
repz
jle
cmp
imul
xor
test
daa
xchg
(bad)
and
not
push
aam
fsubr
and
test
clc
mov
cwde
into
in
xlat
jae
lds
es
pop
std
lahf
mov
push
inc
jnp
mov
mov
(bad)
sbb
in
add
sbb
adc
jae
repnz
ja
or
cwde
pop
push
test
cld
and
je
fld
bound
add
icebp
mov
pop
mov
stos
loopne
shl
adc
xchg
into
mov
dec
sbb
daa
add
sub
cmc
or
ss
test
jo
cdq
pop
dec
adc
sbb
movs
stos
cmp
push
call
xor
in
adc
mov
jmp
fld
adc
mov
in
xor
das
jecxz
xchg
push
sahf
je
js
fiadd
xor
pusha
call
std
and
mov
or
std
lods
ret
push
inc
mov
xchg
mov
rcl
jl
jecxz
fdivr
shl
fwait
loopne
sub
pop
out
mov
imul
dec
mov
(bad)
std
and
hlt
cmp
xor
cmp
pop
sbb
mov
fst
mov
sub
and
pop
out
push
les
jl
mov
fild
mov
inc
div
push
sub
fadd
add
push
fisubr
dec
jbe
mov
add
ret
dec
xchg
out
aad
sub
outs
cs
js
xor
mov
jmp
ret
ficomp
jg
and
sbb
cmp
xchg
sub
mov
out
lea
mov
inc
push
and
cmc
mov
movs
test
pop
stc
mov
out
jge
mov
dec
pop
retf
cdq
scas
xchg
cmp
jo
pop
mov
and
cmps
mov
pop
into
jmp
sti
and
sub
aas
popf
jne
sub
ss
add
pop
adc
or
inc
cmps
fidiv
xchg
jae
int
mov
sti
sbb
es
push
push
test
dec
pop
lahf
bound
scas
push
dec
cmp
in
pop
mov
pop
(bad)
mov
scas
mov
sbb
jge
xlat
out
rol
rcr
fwait
popf
es
fs
mov
fisubr
adc
int
mov
dec
push
adc
dec
(bad)
out
sti
sbb
dec
pop
fsub
add
jle
inc
std
push
xchg
je
cmp
cmps
push
cmp
cmp
stos
dec
pop
mov
push
or
dec
cmp
jns
inc
cdq
mov
lock
mov
cmps
aas
mov
sti
aam
inc
mov
add
jl
mov
movs
repz
jmp
int
push
cmp
jae
push
icebp
adc
sahf
mov
fld
test
sahf
sti
push
shl
in
icebp
in
xor
push
jmp
xor
int3
mov
mov
imul
sbb
test
push
repnz
loopne
push
ret
or
and
aas
test
inc
sub
add
jl
jge
jno
mul
jge
push
std
adc
js
inc
test
stos
xchg
or
test
xchg
retf
pop
retf
jno
adc
sub
test
cmps
mov
ds
cmp
sbb
inc
pop
loopne
aaa
data16
stos
or
lods
aaa
movs
cmp
idiv
sti
pop
sub
imul
pop
retf
int
pop
mov
push
js
sbb
push
jmp
movs
ins
mov
(bad)
loop
inc
(bad)
mov
jbe
xchg
movs
xchg
leave
add
adc
scas
shl
jecxz
cmp
int3
adc
(bad)
xchg
or
sbb
pop
dec
or
into
cli
sbb
mov
sbb
mov
lods
pop
add
daa
out
popf
push
mov
mov
out
mov
cld
jb
mov
inc
push
int3
arpl
dec
dec
xchg
arpl
aad
xor
mov
pop
in
les
mov
and
add
cmps
sti
lds
jle
fcom
in
in
out
ret
and
mov
or
gs
pop
ins
push
mov
popf
xchg
fnstsw
inc
push
jae
mov
inc
fidiv
pop
mov
iret
push
test
inc
xchg
jp
sti
mov
cmc
popa
cmc
xor
fild
sbb
popf
inc
pop
jp
fdivr
xchg
sub
mov
loopne
xor
retf
mov
clc
xor
ins
cs
dec
mov
jae
cld
jl
(bad)
neg
cld
loopne
add
or
pushf
push
xchg
cmc
rcr
lods
aas
sub
mov
or
out
mov
outs
std
xchg
std
inc
lods
loope
fwait
jle
sbb
pop
jl
mov
mov
and
xor
xlat
cmps
add
inc
aam
repnz
stos
cmp
add
rcr
or
mov
ja
fnstcw
and
icebp
aas
dec
mov
scas
(bad)
stc
mov
mov
cmp
push
add
pop
xor
pop
push
xlat
sbb
shl
mov
les
mov
hlt
or
lods
aaa
xchg
dec
xor
scas
cmps
scas
(bad)
jns
mov
xor
inc
pop
push
addr16
jb
inc
xor
sub
ss
or
test
fcom
loop
(bad)
and
stos
loope
or
sbb
sbb
cmp
movs
mov
sbb
pushf
cdq
adc
sti
cwde
stos
and
ss
dec
xchg
mov
and
and
sar
push
ret
sar
push
pop
scas
pushf
in
in
xchg
cld
movs
inc
arpl
add
sti
arpl
rol
shl
in
je
pop
enter
loop
out
xor
stos
cld
(bad)
movs
ret
add
sub
retf
jns
xchg
aas
inc
dec
lea
mov
mov
pop
leave
add
jl
retf
leave
shr
cmp
mov
das
and
xchg
lahf
adc
ja
push
and
movs
(bad)
dec
xchg
gs
ret
push
xchg
(bad)
loopne
shr
neg
dec
sub
push
mov
test
pop
stc
fnstcw
cs
mov
or
int
mov
clc
jle
push
push
(bad)
hlt
mov
and
and
mov
aam
shl
and
test
div
push
pop
inc
into
inc
sbb
sbb
mov
call
and
xchg
sbb
jmp
cmp
mov
loop
scas
les
(bad)
xor
jns
or
scas
sbb
inc
mov
push
adc
cmps
mov
cmc
push
dec
sbb
fdivr
mov
push
sbb
xchg
jns
jb
pop
xchg
mov
cmps
and
cmp
or
(bad)
and
adc
les
push
cmp
xchg
and
add
add
retf
xchg
jmp
sahf
aaa
stos
dec
in
(bad)
adc
push
ja
push
ja
sub
jl
leave
cdq
inc
das
or
in
int3
mov
test
lahf
xcrypt-cfb
cmps
popa
fistp
or
fimul
stos
sub
ret
adc
xor
cmp
ja
popa
rcl
push
cmp
sub
loopne
jmp
push
ss
push
and
jl
sub
cmp
fdivr
xor
add
mov
mov
and
arpl
pop
shl
les
mov
jge
data16
and
pop
inc
lods
cmp
xchg
mov
(bad)
mov
fwait
leave
lahf
ds
das
ret
movs
xor
sub
sbb
and
push
pop
xor
jl
mov
mov
int3
jnp
loop
sub
stos
das
pop
adc
add
push
mov
movs
ret
hlt
pop
xchg
xchg
or
xchg
addr16
inc
dec
cmp
mov
popa
test
mov
add
das
call
ja
das
lock
and
jns
jmp
cmp
xor
inc
inc
inc
aaa
mov
int
mov
in
out
and
inc
mov
dec
sbb
scas
mov
aam
pop
in
pushfw
fnstsw
push
jl
add
adc
mov
add
lds
push
cdq
fbstp
xor
cdq
loope
mov
aam
popf
xlat
sub
pop
mov
out
call
jb
sub
mov
loop
addr16
sub
fld
(bad)
aad
adc
xchg
dec
jmp
lea
aad
popa
je
xor
or
jge
mov
sub
pop
aas
nop
ja
cmc
mov
cmp
cmp
lds
aaa
sub
dec
cmp
nop
xrelease
jnp
dec
call
or
fidiv
iret
jns
jl
scas
das
lods
outs
cmp
out
jl
lds
inc
mov
jl
icebp
daa
int
jbe
add
ds
sub
sub
ret
push
int3
jp
arpl
push
jb
sbb
js
jbe
sub
cmp
jae
in
test
aas
(bad)
cli
das
sbb
push
cdq
loopne
mov
inc
shl
mov
or
sahf
in
bound
adc
adc
jecxz
mov
ficomp
mov
in
lods
push
cmps
or
data16
outs
pop
or
add
mov
mov
imul
push
test
mov
xor
bound
xchg
mov
push
rcl
cld
adc
pop
inc
dec
cmp
popw
inc
mov
jne
in
jmp
sub
loopne
mov
call
jmp
mov
(bad)
mov
pop
mov
sbb
fisubr
mov
sbb
lock
add
inc
dec
aad
out
cmp
iret
repnz
cmp
ds
mov
sti
movs
mov
inc
sbb
cmp
jg
and
cmp
and
call
inc
call
cmp
mov
or
mov
cmovp
inc
shr
jnp
enter
mov
data16
int
nop
lea
and
inc
enter
outs
mov
xchg
repz
mov
call
inc
or
(bad)
(bad)
stos
ins
adc
mov
push
ins
adc
(bad)
pop
mov
fcom
sub
fwait
(bad)
push
inc
cmp
mov
cmp
dec
inc
loop
dec
push
inc
jbe
inc
in
dec
mov
cmp
aam
lods
bound
addr16
jecxz
sbb
inc
mov
mov
sbb
test
ror
fnsave
int3
hlt
dec
movs
xchg
mov
(bad)
hlt
xlat
mov
clc
aad
call
inc
inc
ins
repnz
pop
lods
sub
mov
push
(bad)
test
and
cmps
push
jp
nop
retf
mov
push
or
shr
out
cdq
sub
dec
clc
xor
push
(bad)
mov
shr
xor
push
mov
in
pop
aaa
scas
push
dec
loopne
outs
je
test
add
fiadd
inc
cmp
movs
or
stos
movs
jmp
mov
xchg
or
stos
retf
xor
das
test
cli
pop
dec
push
xor
jmp
push
cdq
add
fistp
cmp
ret
test
fld
pop
pop
sbb
jbe
mov
dec
or
push
mov
scas
les
test
ins
call
push
or
inc
icebp
xchg
sub
push
jge
jecxz
neg
push
mov
or
push
mov
pop
nop
retf
mov
neg
rol
(bad)
fwait
popa
sub
pop
jbe
inc
cld
push
and
repz
lea
xor
pop
xor
fcom
(bad)
pop
xlat
popa
(bad)
ins
sub
mov
rcr
cmp
cmp
jp
mov
jno
aaa
outs
ficomp
scas
fld
mov
scas
fsubrp
cli
pcmpeqw
or
stc
jmp
add
add
xor
sub
dec
xchg
enter
inc
push
push
mov
jmp
out
les
mov
mov
fwait
mov
cli
lock
movs
test
inc
xchg
push
dec
jbe
ret
jmp
or
cmp
push
aas
and
jmp
outs
mov
sub
pop
jo
lods
into
stc
adc
ror
rep
out
call
sbb
or
pop
mov
mov
leave
cmp
(bad)
in
mov
or
icebp
rcr
add
dec
jecxz
add
inc
out
ins
nop
pusha
add
cmps
call
pusha
adc
in
lods
aas
jno
test
int3
mov
cmps
test
out
std
hlt
les
cmp
neg
or
or
retf
ss
nop
popa
lds
jae
pop
adc
sub
mov
imul
jno
nop
scas
cmps
int
xchg
ins
movs
dec
rcr
push
mov
mov
pop
adc
popa
adc
imul
shl
jg
test
cmp
leave
jnp
cld
sahf
das
mov
cmp
xlat
stc
mov
jp
nop
test
dec
shr
push
jnp
movs
cmp
int3
cmp
sbb
rcl
mov
sbb
jg
lahf
add
jb
push
lods
dec
test
addr16
dec
push
jae
cdq
repz
loope
jne
sbb
ret
sub
mov
mov
cmp
dec
jp
arpl
jbe
inc
inc
mov
push
or
cmps
sub
sbb
add
jmp
outs
ror
gs
or
mov
push
xor
shr
xchg
jns
mov
inc
mov
shl
int3
cdq
add
(bad)
(bad)
retf
out
xchg
popa
xor
sbb
(bad)
sbb
cdq
xor
xchg
add
sub
mov
add
mov
mov
inc
jmp
cwde
loopne
jnp
mov
(bad)
mov
dec
jecxz
iret
(bad)
test
jecxz
mov
out
shr
pop
outs
lods
je
test
xchg
ins
std
ss
repnz
mov
mov
addr16
call
repz
adc
cdq
add
push
repnz
push
scas
mov
(bad)
jmp
push
jl
push
or
mov
imul
and
cdq
or
movs
leave
inc
ins
and
and
shl
sub
mov
mov
inc
inc
or
(bad)
jle
mov
sub
xchg
cmp
push
pop
(bad)
addr16
xchg
sub
dec
aaa
pop
push
sar
mov
stc
les
cmp
and
dec
lahf
(bad)
sbb
aas
push
sar
adc
ja
(bad)
jmp
push
scas
and
mov
popa
push
pop
cmp
fild
les
jb
and
jo
ds
rcr
xor
enter
in
adc
mov
cmp
mov
cmovg
add
sub
mov
jno
jns
stc
mov
jbe
jmp
push
pop
cmc
cld
iret
repnz
mov
push
push
jne
dec
push
inc
xchg
jnp
bound
pop
push
dec
mov
lods
icebp
pop
call
ds
xchg
imul
dec
jnp
jbe
stos
stos
mov
call
adc
je
bswap
inc
stos
je
test
mov
out
js
cwde
mov
push
cmc
sbb
and
xchg
xchg
fldcw
sub
shl
and
xor
inc
mov
cmp
leave
fild
add
pusha
lods
rdpmc
imul
rcr
push
test
sub
cmc
or
pushf
sub
pusha
mov
jecxz
cmp
pop
(bad)
retf
inc
push
ds
mov
jbe
add
lock
adc
call
lods
bound
cli
pusha
arpl
sub
jnp
ror
pop
add
clc
xchg
mov
push
popa
dec
sub
fst
cmp
call
mov
rcr
outs
cmp
mov
and
jmp
dec
jmp
adc
sbb
or
imul
mov
push
lock
daa
gs
sbb
add
cmp
push
movs
inc
jg
mov
push
jns
cs
outs
outs
jle
or
int3
and
fucomp
xchg
cdq
bound
pop
mov
std
outs
aad
jo
add
cmc
xchg
jns
mov
add
sub
xor
sub
jle
stos
xor
jg
and
xor
aam
popf
iret
je
fld
xor
pop
in
xor
push
lods
fadd
xor
mov
add
(bad)
stos
adc
iret
add
jmp
enter
aas
sar
xchg
iret
dec
movs
pop
loope
ret
imul
cs
mov
push
xor
push
leave
gs
(bad)
mov
xor
push
push
sub
rol
push
ficom
lds
cmp
ja
xchg
out
jns
sti
mov
xlat
or
cmp
mov
pusha
test
and
dec
scas
add
dec
fild
clc
int
mov
adc
sbb
(bad)
mov
cmp
idiv
jno
mov
bound
add
pop
leave
int3
pop
stos
dec
in
test
xchg
mov
mov
or
shr
cmp
iret
scas
addr16
and
js
popf
js
ja
mov
mov
pushf
ja
icebp
cwde
jo
mov
mov
popf
ret
jae
adc
loope
mov
cli
aam
push
xchg
stos
fbld
leave
ins
rcr
in
or
cwde
iret
xchg
js
add
shl
sub
fdivr
ds
xchg
cdq
test
(bad)
outs
pop
movs
push
mov
ror
iret
es
inc
popf
ds
test
fldenv
dec
retf
and
rcr
jmp
xlat
or
xchg
sub
fstp
add
mov
xchg
(bad)
(bad)
cdq
out
imul
fnstsw
pop
cwde
je
mov
sub
mov
mov
aas
and
jle
push
je
inc
cdq
mov
test
pop
adc
loopne
jo
sbb
mov
dec
add
popf
and
cmp
aad
or
aad
sub
call
jne
cmp
mov
mov
lods
lahf
call
cmp
ror
or
mov
out
cmp
sbb
test
shrd
jmp
test
cli
and
push
push
retf
data16
sbb
adc
loopne
add
pop
push
sbb
stos
(bad)
mov
sbb
and
pop
aad
in
aad
in
ror
inc
ins
dec
mov
aaa
jo
cmps
push
sub
aad
push
push
cmp
les
jne
out
icebp
push
push
sub
sub
aas
pop
js
dec
into
pop
pushf
jge
or
ins
jae
add
test
cwde
inc
mov
int
mov
outs
call
ret
mov
loop
mov
push
cs
mov
test
ins
adc
jb
loop
mov
cmp
add
jmp
sbb
sbb
adc
das
inc
imul
aas
xor
aam
ror
jnp
pushf
xchg
xor
mov
int
test
loope
ss
xchg
xchg
lea
mov
fdiv
pop
repnz
add
icebp
lahf
gs
dec
cmp
aad
stos
popa
adc
mov
(bad)
pop
inc
and
cmc
push
faddp
pop
lds
xchg
jge
xlat
mov
js
gs
mov
mov
mov
fsubrp
fwait
push
test
mov
jp
mov
retf
lahf
jge
mov
xchg
out
popf
mov
lods
pop
push
sahf
inc
dec
xchg
lea
xchg
sub
scas
inc
push
std
sti
repz
sub
inc
pop
mov
push
xchg
ins
fwait
xchg
int
shr
mov
fmulp
cmp
jmp
adc
jns
rcr
clc
fdivr
imul
ins
mov
ins
ret
and
(bad)
bound
int3
mov
aaa
push
out
bound
sahf
mov
(bad)
xor
out
enter
push
jae
popa
and
or
fcomp
add
adc
pushf
pop
in
cmp
adc
xor
repnz
dec
add
popa
cli
jg
xor
and
addr16
dec
add
fcomip
cdq
and
xor
mov
call
push
lock
jge
dec
cs
push
mov
jge
scas
gs
lock
fidiv
retf
mov
addr16
xchg
sahf
les
mul
mov
fsubr
(bad)
into
or
movs
cmp
out
mov
cmps
sbb
mov
push
fwait
(bad)
mov
or
sahf
push
repz
and
pop
enter
add
test
psrlq
lods
test
xor
retf
or
xor
jbe
fstp
xor
jnp
pop
sub
mov
icebp
rcl
jp
cmps
mov
pop
lds
sub
rol
xor
es
jbe
shl
xchg
adc
sahf
mov
push
adc
imul
xor
sbb
adc
sbb
mov
ins
in
fisttp
push
adc
mov
scas
retf
sub
pop
cmc
mov
push
mov
sti
mov
lods
xchg
or
leave
xlat
mov
cmp
das
push
test
pop
dec
int
xchg
jmp
cmp
add
jecxz
jecxz
lahf
push
or
mov
in
loope
adc
mov
fcom
mov
push
shl
xor
out
pop
push
jl
sub
ss
jl
jp
cli
ins
fmul
xlat
lods
iret
mov
dec
jb
imul
test
gs
iret
stos
push
cli
xor
add
adc
and
adc
fcmovbe
repnz
cmp
sub
cli
ds
mov
rcl
mov
stc
mov
push
sbb
mov
out
(bad)
jmp
mov
xor
stos
mov
out
push
cdq
retf
int3
repz
ds
and
and
adc
std
adc
jb
cmp
or
fwait
xchg
ss
or
mov
stos
int3
and
mov
mov
sub
adc
call
xchg
jmp
lds
push
mov
in
push
lahf
rol
pop
into
jns
pop
ss
mov
movs
dec
aaa
stos
int3
jg
rcr
dec
mov
or
inc
pop
xchg
pop
cli
dec
movs
ins
mov
and
xchg
fs
xchg
(bad)
call
shl
mov
pop
or
fs
or
xchg
xchg
loope
push
ins
imul
mov
mov
lock
sbb
mov
popf
ins
xor
shld
add
test
push
jmp
ficomp
jg
lods
aad
(bad)
xchg
loopne
es
or
push
out
pop
cmps
xor
sub
lahf
or
and
dec
jmp
sbb
(bad)
adc
mov
mov
fild
cmps
mov
dec
movs
pop
xlat
cs
sbb
(bad)
shr
dec
add
lds
xchg
pushf
push
mov
rcl
lahf
mov
fnstsw
dec
popf
add
fild
in
test
xchg
adc
or
or
cmp
xlat
push
in
mov
sub
mov
fwait
stos
and
xor
(bad)
push
dec
int3
test
imul
sbb
jl
sub
push
out
leave
inc
adc
outs
cmp
or
or
loop
repnz
mov
lods
jnp
pop
out
in
fldcw
ret
mov
gs
mov
lods
add
add
enter
daa
push
sub
jae
or
inc
or
sar
mov
mov
js
sbb
mov
mov
cmp
jnp
adc
sahf
(bad)
data16
shl
jmp
ins
test
fadd
dec
sbb
movs
inc
shl
popa
ja
in
dec
or
loop
push
add
je
retf
sub
sub
sbb
jns
pop
add
mov
xchg
lods
or
jnp
and
lods
mov
out
shr
ja
mov
inc
xchg
ds
fdivr
or
dec
(bad)
(bad)
sub
xor
jmp
dec
push
jnp
dec
or
jmp
mov
add
mov
inc
jmp
pusha
hlt
in
adc
ins
rol
int3
rol
add
(bad)
jbe
jge
stos
clc
fild
sub
js
repnz
in
(bad)
mov
je
jmp
sub
pop
lods
lods
cld
or
push
push
nop
aas
dec
xchg
and
idiv
scas
jb
out
test
in
push
sub
cdq
xor
out
pop
sbb
imul
call
dec
push
mov
jl
push
ds
push
inc
test
and
adc
(bad)
sar
popa
pop
out
inc
jecxz
pop
arpl
sbb
mov
mov
adc
movs
jl
jne
jb
push
daa
pop
push
and
(bad)
push
inc
aam
test
mov
pop
(bad)
jmp
or
push
iret
or
and
int3
cwde
jmp
mov
mov
jae
lahf
sbb
pushf
test
mov
adc
xchg
pop
inc
mov
repnz
sbb
mov
mov
test
not
jns
jne
pusha
mov
mov
test
and
pop
je
and
leave
adc
fld
mov
dec
xlat
pslld
sbb
xor
dec
ins
jbe
or
rol
push
and
loopne
add
inc
and
sbb
fld
jno
pop
fcomp
and
unpcklps
out
lahf
int
cli
pop
fsubr
pop
sub
jp
jae
sub
js
jo
test
push
movs
mov
cmp
fstp
in
fdiv
out
and
mov
fbstp
retf
xchg
or
icebp
aaa
ds
(bad)
push
hlt
mov
ja
js
push
fstp
nop
scas
and
out
ss
cmp
pop
cmp
xor
cli
ret
inc
and
sbb
push
lds
jne
ret
dec
in
cs
xchg
lea
int
push
cmp
xchg
sbb
call
daa
aaa
xchg
pop
test
adc
out
add
jl
fneni(8087
cdq
cld
add
inc
sub
rol
scas
mov
loopne
adc
outs
pop
push
dec
es
fimul
push
mov
add
out
fdivr
out
dec
sub
mov
nop
mov
sub
call
test
and
mov
idiv
dec
arpl
das
dec
pop
xor
add
stc
cwde
rcr
xlat
push
jbe
(bad)
arpl
mov
cmp
jne
fwait
rol
neg
rsm
jmp
xor
adc
xchg
pop
neg
call
das
mov
lods
jecxz
jb
pop
in
and
nop
enter
mov
mov
dec
add
xchg
js
loope
inc
cwde
nop
movs
outs
push
jecxz
jne
adc
add
lock
add
bound
std
sub
cmp
sar
or
xor
or
or
add
cmp
push
xchg
pop
lods
das
sbb
fstp
enter
loope
xchg
lds
adc
jmp
push
in
shr
mov
aam
cmps
mov
dec
inc
push
add
cmps
jno
xor
sub
ficom
pop
nop
jb
sub
(bad)
sti
cmp
pop
xor
mov
in
xor
je
mov
fild
mov
mov
inc
pop
mov
add
push
je
jne
xor
(bad)
mov
sahf
maskmovq
scas
sub
ja
adc
mov
sub
jl
lods
push
arpl
pop
push
mov
ret
ins
or
xor
cmp
cmp
sbb
jne
data16
and
add
js
scas
jns
scas
not
add
xchg
lahf
shl
dec
or
or
dec
cmps
sub
(bad)
das
mov
jle
cmp
dec
sbb
mov
fidiv
hlt
repnz
jecxz
clc
inc
aad
jno
sub
ror
pusha
loope
and
xor
clc
jecxz
pop
cmp
inc
mov
test
sbb
mov
jns
in
sub
es
ret
cmp
mov
sub
xlat
stos
test
mov
dec
push
cdq
outs
inc
push
pusha
cmp
and
push
sub
in
jge
and
pop
add
std
shl
push
jmp
into
sub
mov
sub
aaa
cmps
push
push
xchg
mov
mov
popa
jp
popf
mov
push
mov
jle
xchg
sar
nop
mov
and
sar
push
js
out
inc
pop
mov
adc
adc
(bad)
xchg
jo
jge
setno
test
enter
adc
sbb
in
push
jae
in
cmp
mov
mov
cwde
in
clc
sahf
pop
(bad)
push
sar
push
sub
ins
in
mov
stos
dec
push
ins
xchg
dec
or
popf
or
xlat
ret
xchg
call
ret
jle
xchg
xchg
out
fist
mov
and
push
xchg
dec
icebp
cmp
xchg
pop
inc
xor
(bad)
xchg
or
sti
push
sub
outs
adc
dec
jmp
mov
mov
packssdw
sub
mov
imul
fsubr
stc
or
add
push
sbb
jl
xchg
add
push
loope
aad
scas
xor
(bad)
out
clc
sahf
test
aas
dec
fwait
and
rol
ins
outs
add
add
mov
movs
arpl
adc
fs
jge
inc
xlat
lea
sub
and
add
sub
cmp
xchg
ret
sar
xchg
cmp
leave
dec
xchg
dec
jmp
movs
repz
pusha
jmp
dec
dec
sub
les
je
aam
and
iret
retf
sbb
cmp
xchg
test
into
pop
add
(bad)
inc
jmp
dec
xchg
push
jge
cs
shl
push
jmp
fs
sbb
out
jbe
jecxz
inc
pop
pop
sbb
mov
jae
sub
sbb
xchg
mov
in
cs
sbb
popa
call
jns
gs
push
call
xor
xchg
jb
pop
xor
mov
in
mov
push
aas
sbb
test
jp
outs
sbb
mov
aam
push
or
sub
xchg
shr
xchg
dec
int
cli
hlt
xchg
mov
sub
stos
repz
aas
mov
jle
and
fadd
sbb
out
imul
mov
dec
jg
jno
cmp
(bad)
jge
jle
call
mov
push
push
push
or
stos
push
out
dec
leave
call
mov
daa
repz
sbb
or
jne
push
mov
mov
stos
out
lahf
pop
ret
mul
in
cmp
push
xlat
sub
inc
out
adc
sub
fsubr
sbb
in
lahf
mov
jge
inc
repz
adc
mov
aam
ins
fisttp
in
mov
adc
cld
sbb
sbb
paddsw
or
sub
dec
mov
addr16
add
ficomp
leave
push
stos
retf
adc
sub
out
xchg
popa
test
jns
repz
lock
inc
mov
inc
pushf
int3
pushf
xchg
fistp
and
mov
mov
and
fdiv
cld
inc
das
cmp
lahf
xchg
jmp
or
mov
das
out
inc
aas
push
mov
stc
sub
adc
aad
pop
cli
sbb
into
cmp
xor
mov
mov
in
hlt
push
or
in
mov
xchg
nop
jg
cwde
in
mov
(bad)
cdq
repz
shr
mov
mov
(bad)
into
pusha
xchg
loope
add
jg
loopne
(bad)
jmp
cmp
adc
mov
scas
cmp
sbb
test
fwait
int3
pop
in
outs
imul
arpl
mov
aaa
mov
xchg
repz
inc
xor
inc
jg
repz
dec
mov
push
out
jmp
mov
popa
mov
scas
das
pop
xchg
xor
cwde
sar
int3
cmp
pop
movs
dec
xchg
popa
mov
ja
cli
fwait
cmp
pop
stos
xor
cmp
gs
popf
retf
das
add
or
(bad)
sar
dec
in
sbb
adc
out
ret
retf
xor
cmps
or
inc
les
pushf
mov
mov
pop
jbe
(bad)
xchg
push
shr
hlt
inc
movs
mov
clc
pop
adc
outs
xchg
push
retf
pop
mov
pusha
out
add
push
xor
push
jle
popa
popa
sbb
(bad)
in
lock
mov
ins
cli
mov
sub
cwde
loope
out
dec
je
inc
and
mov
mov
jmp
xchg
test
ficom
inc
xor
outs
out
fucom
xor
mov
add
xchg
in
inc
iret
cmp
(bad)
sbb
push
push
(bad)
loop
test
jle
movs
and
mov
nop
jmp
jle
fld
jmp
retf
cmc
lea
lahf
retf
in
push
mov
in
sub
scas
push
(bad)
(bad)
sbb
call
fild
out
mov
and
(bad)
jmp
fbld
cmp
jns
jl
jmp
popf
jge
int
stos
and
xchg
lahf
and
cdq
adc
adc
aas
mov
xchg
(bad)
push
xor
and
xchg
jns
adc
pushf
ja
stos
pop
xchg
mov
int
jno
scas
push
mov
or
hlt
(bad)
pop
imul
pop
mov
mov
add
adc
xor
(bad)
dec
cmps
mov
ds
cs
push
(bad)
in
je
in
in
pop
lahf
sub
sar
in
cmc
lods
movs
ret
xchg
and
cld
xor
sbb
push
push
or
jmp
sahf
rcr
pop
xchg
mov
ja
pop
leave
push
and
jmp
hlt
xor
push
aad
xchg
and
mov
test
mov
jmp
outs
lds
and
popf
data16
(bad)
jae
and
cmp
sbb
fcom
cmp
push
jmp
sbb
push
into
aas
xor
adc
push
xchg
mov
mov
mov
sahf
xchg
int
mov
stos
jl
fisttp
push
jge
sub
jmp
jb
lock
gs
clc
push
or
or
add
jbe
rol
sbb
push
mov
out
adc
les
push
sbb
inc
stc
aad
and
or
inc
aas
mov
inc
outs
cwde
and
mov
and
lahf
mov
cmp
adc
out
neg
sar
ret
icebp
cmc
sub
mov
and
add
push
mov
jecxz
cwde
pushf
and
and
push
adc
(bad)
and
in
outs
jmp
cmp
loop
mov
cmovae
je
test
out
stos
pop
(bad)
mov
sub
mov
rcr
jbe
aaa
xchg
in
in
sub
mov
add
adc
out
xor
xor
fs
fmulp
xchg
mov
mov
jo
xchg
lods
add
cmp
push
add
inc
push
mov
adc
aas
xor
nop
les
(bad)
mov
mov
in
inc
mov
jns
test
arpl
je
sub
dec
(bad)
xchg
pop
icebp
dec
test
(bad)
sahf
(bad)
dec
jge
add
ins
js
mov
jo
jg
jns
pop
or
arpl
inc
adc
add
call
or
xor
mov
stos
push
xchg
int
inc
dec
mov
ins
shr
mov
(bad)
add
js
das
scas
jae
sub
mov
sbb
leave
sub
fyl2xp1
ret
in
mov
push
push
inc
push
mov
mov
jo
out
ror
sti
fmul
mov
inc
inc
xchg
ror
push
hlt
jmp
adc
cmp
add
out
xor
sti
in
and
dec
je
xchg
scas
mov
mov
push
out
or
xchg
call
xchg
jno
les
div
sub
js
call
cmc
inc
mul
inc
(bad)
sbb
mov
aas
sub
arpl
bound
fidiv
ss
iret
cli
jae
jmp
pushf
je
push
loope
mov
fld
test
and
inc
clc
imul
in
(bad)
pop
ja
jge
frstor
shr
mov
lods
sti
pop
movs
(bad)
mov
mov
mov
jge
or
(bad)
pop
in
fmul
lock
xchg
inc
cwde
les
dec
(bad)
popf
mov
nop
je
stc
inc
movs
sub
icebp
fdiv
pop
dec
xor
leave
je
mov
jmp
or
adc
xor
or
jb
inc
leave
lods
mov
push
mov
sub
ret
sbb
mov
and
jmp
pop
cdq
cs
ficomp
mov
in
(bad)
stos
sub
sbb
enter
or
and
fcomp
xor
scas
lods
nop
inc
xchg
xor
test
xchg
xor
cmp
mov
pop
rcr
pushf
pop
adc
imul
cs
and
xchg
xchg
je
stos
pop
jp
pop
fwait
shr
(bad)
icebp
dec
fdiv
(bad)
add
repz
add
in
std
push
shr
add
cmp
stos
call
inc
fidiv
aaa
jbe
jbe
int
xor
cli
icebp
jo
imul
push
sbb
push
push
mov
dec
mov
jbe
gs
mov
push
push
imul
gs
xchg
add
inc
xchg
fcomp
enter
jp
adc
sbb
aas
xchg
push
call
hlt
pop
sub
mov
mov
ss
(bad)
js
fxch
arpl
sub
cwde
and
cs
fdivr
mov
(bad)
mov
mov
xchg
xor
mov
(bad)
xor
lods
push
mov
xor
fs
pop
xor
mov
jge
xchg
mov
jae
retf
mov
cs
out
mov
sar
or
in
jmp
mov
xchg
mov
shl
ret
movs
icebp
sbb
into
dec
mov
pushf
fs
push
dec
call
mov
xor
cli
or
or
rcl
sbb
cmp
pop
xchg
(bad)
jnp
adc
les
mov
push
and
(bad)
adc
dec
sub
bnd
dec
test
pop
rol
push
jmp
ins
cmp
gs
add
enter
add
jbe
nop
jge
dec
and
js
jg
pop
ret
mov
fcom
push
cmps
(bad)
fsub
pushf
out
test
mov
ss
repz
or
(bad)
pop
inc
or
shr
pop
cdq
add
cwde
test
push
adc
sub
sbb
adc
rcr
jmp
std
sub
push
addr16
push
aas
daa
mov
and
test
fcom
movs
inc
or
inc
mov
and
ja
clc
ret
adc
and
cmps
push
add
dec
dec
test
push
push
xor
pop
hlt
push
arpl
mov
push
out
je
inc
aad
out
pop
fnstenv
test
mov
mov
and
push
mov
lods
stos
icebp
adc
iret
imul
mov
add
sub
ja
call
std
xchg
js
in
dec
pusha
lods
adc
cld
fstp
pop
mul
adc
lock
dec
jge
adc
push
cdq
cmp
(bad)
imul
fcmovb
inc
fistp
push
xchg
popa
inc
cmp
cmp
fwait
into
and
push
into
sub
mov
or
(bad)
movs
and
xchg
cmp
jbe
mov
and
xor
mov
jg
fiadd
test
jno
sti
xor
outs
xchg
inc
std
mov
mov
shl
or
mov
ficomp
repz
sbb
ja
ror
sub
cdq
mov
jns
js
mov
sahf
sub
in
inc
jmp
retf
xor
sahf
dec
sub
push
dec
dec
std
xor
je
outs
fidiv
xchg
call
inc
mov
fwait
sub
loopne
cmp
inc
or
aas
dec
sbb
xor
mov
test
gs
rcr
fimul
dec
stc
dec
stos
rcr
dec
(bad)
jmp
fld
test
mov
mov
dec
mov
iret
inc
mov
call
xlat
mov
add
rcr
mov
andps
dec
jne
cmp
adc
add
mov
retf
test
and
test
add
push
mov
xchg
cs
cmps
xor
xor
les
and
in
sub
mov
jmp
stos
jno
and
inc
ins
cmps
fld
fidiv
push
repnz
daa
mov
std
repnz
mov
jg
dec
mov
movs
add
aam
xlat
repz
inc
mov
sbb
cmp
xchg
cs
test
out
add
retf
sub
js
int3
loope
sbb
icebp
(bad)
or
dec
cmp
mov
mov
inc
xlat
sub
out
fldenv
push
scas
cmp
dec
(bad)
std
xlat
push
cmp
xchg
ds
push
xor
data16
js
test
jno
data16
(bad)
mov
lods
sbb
stos
dec
leave
popf
xor
outs
dec
sbb
cs
jmp
ret
cwde
scas
mov
(bad)
rol
sbb
xor
pushf
aam
push
adc
push
pop
fld
push
je
and
mov
test
sub
pop
inc
mov
sub
pop
movs
inc
das
cmps
dec
mov
push
loopne
sub
adc
icebp
jnp
pop
pop
cmp
dec
shl
cmp
or
mov
inc
mov
pop
xor
or
and
inc
aam
test
es
adc
pop
or
or
shr
leave
retf
xor
inc
and
or
psubsb
lea
xor
sbb
(bad)
fmul
aad
fdivr
and
pop
pop
xchg
mov
lea
loopne
ret
sbb
sbb
popf
int
push
xor
and
add
stos
inc
or
test
cvtdq2ps
pushf
pop
push
outs
arpl
lds
dec
repnz
and
fimul
dec
mov
pop
ror
popf
ret
jmp
cmp
jge
aas
dec
scas
inc
dec
cmp
(bad)
imul
push
sbb
fidiv
test
mov
mov
into
je
add
loope
movs
ins
or
ds
or
xchg
lds
jmp
repz
inc
lea
sahf
arpl
xor
add
ficomp
call
test
sti
push
icebp
add
sub
mov
inc
or
mov
ins
pop
call
jp
jecxz
mov
xor
cmps
clc
ins
not
sbb
cwde
nop
dec
jno
push
sbb
push
les
fiadd
xchg
dec
or
sbb
movs
das
dec
pop
rep
std
das
inc
sbb
test
(bad)
ins
into
lahf
enter
lods
stos
xlat
je
test
ss
ds
sahf
fidiv
push
cwde
or
(bad)
or
sub
pusha
cmp
pop
adc
rcl
aam
pop
sti
mov
sbb
mov
call
push
push
retf
jmp
xchg
adc
xor
in
sub
mov
or
mov
popa
and
xor
retf
jae
and
push
and
inc
imul
jmp
xor
(bad)
inc
dec
and
cmp
pop
inc
pop
call
push
inc
jge
sbb
mov
adc
mov
pop
pop
addr16
inc
xchg
pushf
icebp
sbb
pop
mov
jnp
push
xor
push
or
add
add
push
int
mov
mov
cs
jmp
xchg
js
dec
inc
dec
push
and
test
fcmovnu
in
mov
into
sub
sbb
cmc
xchg
or
xor
in
pusha
bound
sar
or
xor
nop
mov
popf
adc
arpl
mov
mov
repnz
pop
repz
cmps
xchg
iret
stos
adc
inc
jo
or
cmp
mov
sbb
mov
seto
pop
clc
inc
push
stos
or
jbe
aas
xor
xlat
and
aas
call
imul
(bad)
xor
shl
cmp
add
cmps
or
cmp
mov
stos
push
cmp
jae
xchg
test
(bad)
and
retf
mov
cwde
xor
sub
retf
fmul
xor
sbb
cmp
(bad)
push
iret
mov
in
add
ds
icebp
test
xchg
push
push
mov
imul
lds
fld
adc
adc
jge
jl
and
jbe
mov
test
pushf
push
jnp
xchg
adc
in
in
and
jp
xchg
sar
je
call
and
fwait
ins
mov
xchg
cmc
xor
xchg
inc
es
xchg
push
sub
repnz
aas
popf
leave
test
(bad)
lods
and
lock
push
jmp
in
clc
jmp
sahf
clc
aaa
sar
pop
ss
ret
stos
mov
dec
jecxz
push
pop
jns
mov
int3
ds
mov
sbb
xchg
ja
aam
fwait
retw
add
sub
ja
dec
fwait
jno
das
add
push
inc
sub
mov
ja
stos
in
jae
stos
and
je
aam
unpckhps
pop
sbb
inc
retf
xor
imul
pop
scas
cld
inc
dec
mov
lods
and
lods
mov
mov
aam
addr16
jne
es
fdiv
mov
jmp
cmp
jmp
xchg
enter
test
in
in
mov
lds
and
cmps
and
fwait
cmp
stc
sub
out
adc
sbb
imul
push
mov
leave
xchg
pop
xchg
data16
add
retf
jle
add
inc
test
cld
cmp
push
imul
rol
idiv
cmps
retf
cwde
jno
dec
div
xchg
dec
and
or
sahf
out
aas
dec
dec
push
(bad)
stc
sti
xchg
sbb
xor
test
test
xchg
fistp
cmp
ror
shl
rcr
and
fldcw
les
jle
enter
cmp
data16
push
daa
sub
fst
dec
movs
add
rol
(bad)
stos
imul
pop
push
jmp
stc
adc
in
pop
arpl
push
ret
shr
cmp
sbb
jno
call
aam
es
(bad)
xlat
xor
mov
ret
sti
sbb
add
push
(bad)
fwait
scas
js
pop
dec
add
jmp
or
repz
inc
push
sub
adc
cld
sbb
test
sub
xor
mov
iret
mov
jle
or
jbe
fbld
xor
icebp
jo
jnp
dec
mov
add
pusha
mov
sub
mov
test
inc
int
popa
inc
lahf
sub
test
mov
stc
ret
xchg
loope
mov
sbb
xor
je
cmc
inc
mov
or
mov
jp
mov
or
mov
or
pop
jle
ins
ret
aas
inc
add
fsubr
jmp
xor
fiadd
mov
xor
push
inc
test
xchg
mov
out
in
sti
sbb
loop
sub
dec
xchg
add
sbb
pop
loopne
adc
dec
ret
ret
fwait
adc
(bad)
repnz
ss
jae
mov
or
jno
push
mov
sub
inc
cli
or
jg
cmp
lea
lods
loop
pusha
stc
cli
add
xlat
test
dec
jge
add
into
scas
call
jnp
outs
popf
xchg
dec
int3
sub
jmp
in
fs
pusha
(bad)
std
cmc
or
movs
adc
inc
jns
mov
fldenv
ret
retf
push
and
lods
ins
adc
cld
cmps
arpl
pop
mov
cmp
gs
dec
movs
out
push
test
imul
iret
rcr
(bad)
pop
jmp
mov
cmp
ret
mov
cmp
les
lea
pop
call
stos
fldenv
mov
xchg
mov
cmps
jp
mov
cmp
mul
push
out
movs
sub
into
mov
mov
adc
push
sbb
arpl
imul
adc
mov
or
cmp
mov
test
adc
cmp
cdq
cmp
scas
cld
and
outs
retf
movs
xchg
fbstp
and
mov
mov
iret
jb
push
int3
push
or
stc
dec
repz
sbb
dec
sbb
(bad)
jge
fisttp
into
lds
add
lahf
add
leave
shl
fwait
jg
call
mov
pop
adc
leave
ret
aad
xlat
mov
das
jns
ds
pcmpgtd
mov
pop
add
and
inc
call
mov
fs
retf
pop
rdmsr
adc
pop
mov
jp
cmc
fstp
xchg
adc
xchg
jl
dec
xor
pop
jmp
outs
xor
sbb
ret
xchg
push
push
dec
adc
out
inc
shl
mov
pop
inc
jg
cli
inc
xor
das
mov
jb
shl
xchg
or
std
pop
xor
add
int
rcr
mov
(bad)
outs
rcl
mov
xchg
lds
int
dec
mov
inc
das
jmp
sbb
sub
mov
ret
pushf
inc
addr16
ins
push
or
mov
and
and
ss
fsub
ja
(bad)
clc
dec
dec
int3
data16
pop
mov
add
jns
rcl
int
fisttp
dec
and
xchg
inc
into
sub
adc
imul
leave
std
ds
loop
jnp
push
sbb
cmp
jo
mov
jecxz
fisttp
pop
or
pop
sbb
xchg
add
movs
mov
jae
scas
xlat
sbb
push
push
data16
bound
pop
movs
bnd
mov
inc
fld
push
cmp
jl
inc
cmc
aam
mov
jne
out
cld
mov
sub
popa
xchg
cmp
push
mov
mov
scas
pop
xchg
(bad)
out
jmp
push
add
lahf
inc
aas
bound
sar
or
mov
jno
es
and
movzx
stc
stos
repz
les
cmp
rcr
push
add
xchg
out
das
mov
jae
and
pop
jmp
nop
movs
inc
inc
xchg
dec
adc
scas
into
adc
cld
scas
or
jmp
ja
out
pop
fcomi
gs
cmp
cmps
sub
cmp
xchg
scas
xchg
pop
or
sbb
sub
aam
data16
dec
fwait
push
movs
cmps
int
mov
jb
movs
in
(bad)
adc
or
lock
nop
pop
mov
xchg
ror
dec
vcvtsi2ss
imul
push
cwde
(bad)
bound
xchg
imul
iret
push
jmp
jge
dec
add
mov
aaa
movs
mov
imul
dec
pusha
jb
cmp
movs
ds
bound
or
pop
xchg
into
sbb
ret
lock
pop
loop
and
or
imul
push
lock
idiv
iret
xadd
cmp
enter
xchg
add
mov
sar
bound
sbb
test
(bad)
inc
xor
dec
adc
das
fldz
std
(bad)
adc
sti
repz
add
adc
add
push
(bad)
iret
jmp
xor
jb
lods
sti
(bad)
ss
jmp
lahf
jmp
retf
push
or
out
shr
sar
add
sub
xchg
xor
inc
bound
(bad)
push
hlt
cmc
push
adc
add
pop
scas
cs
push
fst
test
out
cmc
and
fidivr
neg
mov
clc
popf
repnz
loopne
retf
adc
dec
jmp
xchg
mov
aad
jbe
rcr
add
jo
add
into
sbb
pop
ins
stos
adc
loop
inc
jl
data16
xor
mov
sub
push
loopne
xlat
mov
out
jmp
aas
(bad)
jg
dec
sti
xchg
xchg
pop
not
cld
xlat
lods
(bad)
daa
shl
aam
icebp
sbb
loop
lds
icebp
pop
or
test
and
add
loop
ins
(bad)
aam
push
cwde
loope
js
and
into
sub
into
xchg
fwait
mov
dec
or
rol
punpckldq
sbb
into
shl
pop
or
jns
push
leave
pop
add
fsubp
mov
rcl
pop
fcom
or
and
popf
int
outs
dec
fwait
xor
push
sub
sbb
pop
std
mov
push
inc
mov
and
sbb
sbb
sub
sub
stc
popf
jl
loope
fsub
daa
or
jp
sbb
cmps
sub
mov
jmp
imul
or
push
sbb
jnp
mov
lds
movs
mov
shr
shl
push
add
dec
fs
sti
push
cmc
jmp
aam
rcl
xchg
les
mov
stc
retf
ret
gs
push
add
adc
xor
arpl
out
sub
sub
mov
(bad)
push
sub
jle
icebp
or
dec
aam
mov
dec
(bad)
and
and
hlt
hlt
aad
sahf
ds
xchg
xchg
cmps
loopne
test
sub
imul
sub
or
pop
or
adc
xor
pop
sahf
(bad)
jge
lods
dec
call
xor
xor
pop
and
push
jne
xchg
push
cwde
pusha
sbb
loope
(bad)
xchg
sbb
mov
and
mov
pop
dec
adc
jae
cmc
inc
xchg
xlat
test
enter
std
xchg
lods
cmp
cmp
(bad)
out
outs
call
(bad)
pop
dec
ret
sub
bound
mul
sub
jle
cmp
xchg
mov
pop
retf
jl
and
push
mov
js
enter
imul
clc
popf
adc
out
lods
pop
(bad)
jecxz
je
pusha
stos
ret
lahf
data16
sbb
pop
test
sahf
(bad)
xchg
es
and
popa
push
cli
aad
test
push
mov
ror
push
mov
shr
call
add
sbb
imul
int3
test
and
push
xor
dec
ret
in
push
push
cld
and
xor
pop
dec
inc
call
mov
pop
sahf
inc
dec
add
rcr
dec
adc
push
or
dec
xlat
dec
and
xchg
adc
aad
retf
sbb
pop
loop
mov
xchg
mov
push
outs
test
cli
(bad)
fist
test
outs
stos
jbe
jge
and
mov
aam
xchg
mov
mov
popf
lds
or
pop
adc
fmulp
aam
in
ret
push
adc
hlt
shl
xchg
cdq
adc
push
daa
mov
call
sbb
push
lds
push
and
push
mov
mov
out
xchg
mov
lods
ret
sub
sub
loop
js
cli
or
xchg
outs
sub
test
and
mov
adc
sub
or
push
fidiv
add
cmp
mov
mov
cmp
inc
repnz
in
jecxz
rcr
ret
loopne
int
or
mov
fst
hlt
fdiv
inc
lods
mov
mov
(bad)
dec
sbb
in
fsubr
mov
in
repz
or
jecxz
push
mov
(bad)
cmp
sbb
test
repnz
cmp
test
arpl
lahf
mov
lds
add
data16
push
cmc
fldenv
stos
sbb
dec
mov
test
gs
(bad)
dec
jl
xor
in
fiadd
and
push
push
mov
jl
dec
push
push
les
call
out
mov
adc
test
fs
dec
sub
xor
repnz
and
add
mov
int
jl
and
or
push
(bad)
lea
cmp
pop
or
mov
ins
pop
or
pop
(bad)
lock
mov
sbb
push
add
js
pop
adc
sub
test
stos
adc
jns
pushf
pop
aam
in
dec
outs
jb
pop
fstp
or
dec
adc
add
adc
or
in
jo
add
mov
mov
repz
daa
int3
mov
push
aas
rol
pop
adc
mov
mov
cmps
dec
jg
add
jne
das
mov
das
xor
std
in
and
fimul
inc
adc
and
push
daa
jae
ror
or
adc
push
(bad)
(bad)
ret
add
pop
enter
popa
mov
scas
adc
stc
enter
pop
call
mul
inc
sub
cmps
popa
fs
ss
stc
and
aas
imul
cs
fidiv
jb
ja
pop
mov
mov
push
sbb
cwde
mov
mov
push
xchg
cdq
mov
in
dec
sti
dec
(bad)
fadd
retf
sbb
push
out
xor
movs
dec
xchg
cmp
sbb
jmp
lods
ins
push
call
iret
sbb
ret
xchg
in
fwait
mov
pop
dec
xchg
fsub
mov
(bad)
scas
cdq
inc
push
ds
sqrtps
in
movs
pop
pop
sar
cmove
call
cmp
pop
(bad)
xor
cmp
push
inc
repnz
xor
ret
jo
sub
aam
sub
jmp
js
loope
pop
(bad)
lods
push
jmp
mov
test
(bad)
(bad)
hlt
sbb
add
mov
pusha
(bad)
pop
js
jne
in
mov
jge
push
daa
fstp
std
xlat
xor
pop
xchg
lods
jle
jmp
scas
pop
inc
mov
data16
bswap
sbb
cmc
dec
outs
rcr
lahf
or
cmp
mov
pop
push
cld
or
adc
pop
fcom
mov
(bad)
shr
pop
pop
xor
xor
xor
cdq
add
push
or
pop
addr16
adc
inc
jne
ficom
lea
inc
ret
xor
aas
cld
or
mov
inc
out
pop
xchg
cmps
out
lahf
push
lds
xchg
popa
stc
sbb
adc
mov
stos
push
xchg
dec
inc
push
ror
xchg
mov
mov
mov
adc
xor
push
xor
mov
addr16
jge
and
pop
std
push
pusha
icebp
inc
in
scas
in
(bad)
(bad)
adc
clc
test
fadd
retf
inc
call
nop
fcom
sbb
xchg
movs
fisubr
fdivrp
jg
adc
pop
xchg
sub
dec
pop
(bad)
adc
mov
shl
and
mov
pop
retf
sbb
or
mov
sub
xor
xchg
add
mov
adc
test
cmc
cli
sbb
retf
sar
sbb
jecxz
shl
fild
je
je
call
xor
repnz
(bad)
out
mov
cld
retf
(bad)
loopne
push
cmp
or
mov
add
mov
jp
mov
jle
je
jbe
and
lds
lods
ret
shr
(bad)
std
fwait
lahf
movs
inc
out
and
inc
fild
addr16
inc
loopne
sub
or
push
push
jmp
pop
xchg
push
inc
xchg
nop
xchg
ror
sbb
lea
int
sbb
xchg
cmps
shr
push
dec
inc
lods
imul
movs
out
mov
int
add
adc
cld
icebp
xchg
bound
sti
ret
sub
jbe
popf
aaa
and
cmps
mov
ror
loope
cmps
(bad)
aam
push
mov
push
jne
inc
mov
adc
fcomi
in
outs
pop
ret
adc
sbb
or
cmp
mov
leave
inc
add
clc
push
ds
popf
pop
add
sbb
push
cs
and
arpl
test
test
mov
fdivrp
imul
mov
es
xchg
pop
push
ficomp
dec
mov
add
xlat
xchg
dec
jo
pusha
inc
(bad)
adc
adc
sbb
jge
addr16
pop
fs
shl
pop
mov
jecxz
cmp
int3
sub
and
mov
xchg
sbb
scas
inc
fisttp
mov
cmp
repz
jns
pop
jle
push
sbb
outs
lds
dec
adc
mov
pop
test
int3
(bad)
ffree
stc
sbb
stos
or
in
pop
jb
std
stos
rcl
jmp
sub
inc
xchg
loopne
repz
lahf
inc
mov
jb
test
inc
push
mov
add
(bad)
adc
sbb
mov
ja
loopne
int3
and
lds
(bad)
(bad)
or
mov
mov
inc
aam
cmp
(bad)
add
jmp
mov
xor
in
sbb
aas
in
bound
leave
loop
cs
shl
cmp
cmp
xchg
add
inc
adc
xor
popa
in
or
inc
mov
xor
cld
fiadd
sub
popf
sbb
add
or
lods
push
out
sti
xchg
sub
mov
mov
add
sahf
pushf
pop
or
enter
(bad)
imul
cmps
xchg
call
(bad)
lods
mov
push
sub
fistp
repnz
push
in
stc
push
mov
movs
push
pop
retf
inc
stc
aaa
and
and
dec
test
(bad)
pop
in
loop
outs
fiadd
inc
lahf
xchg
xor
popf
pop
std
mov
jns
xchg
adc
dec
add
lea
idiv
int3
bound
call
jno
mov
mov
dec
xchg
jmp
push
sqrtps
cwde
repnz
mov
inc
add
mov
xor
leave
daa
sbb
xor
loope
outs
push
adc
dec
pop
lock
dec
mov
xchg
inc
popf
mov
in
xchg
or
mov
xor
shl
pop
mov
mov
or
cld
xor
push
ins
loope
fisttp
lods
pusha
push
in
pop
in
sbb
jp
adc
push
leave
fisubr
fistp
xchg
(bad)
pop
lods
in
jecxz
mov
addr16
inc
mov
ja
mov
and
imul
xchg
fld
(bad)
xlat
(bad)
jmp
push
mov
frstor
xchg
ror
pop
cmp
mov
call
mov
and
or
loop
stc
pop
dec
out
in
mov
and
imul
lods
sbb
mov
shl
xchg
movs
inc
mov
sub
cmps
cld
add
xor
xlat
hlt
jo
ret
push
mov
xor
lea
sub
sahf
dec
cli
sub
imul
rcl
int
jno
les
aam
lods
dec
jle
jne
rol
pusha
cld
push
pop
cmps
xor
or
dec
cwde
xchg
add
pop
out
mov
add
sbb
iret
es
rcr
mov
adc
xchg
hlt
xchg
cmc
pop
ins
mov
mov
shr
or
cmp
cmc
push
xor
pop
jle
ins
hlt
inc
mov
jns
dec
bound
rcr
fld
and
enter
cmc
enter
outs
add
inc
add
push
ja
sub
lods
mov
pushf
fdiv
dec
mov
xchg
icebp
push
shl
sub
nop
(bad)
inc
ficom
push
std
lds
sub
pop
push
jecxz
jp
sub
and
dec
xlat
ret
jno
pop
pop
shr
sub
mov
fisub
xchg
outs
xor
mov
leave
lods
ret
mov
lds
xchg
fs
pop
and
call
cwde
xor
xor
loope
push
mov
dec
inc
out
mov
rep
mov
out
or
adc
ja
shl
mov
test
outs
sub
outs
sub
jns
cmp
lar
les
daa
dec
cmps
jp
stos
mov
rcr
sbb
xchg
jmp
(bad)
call
cwde
ficomp
leave
xchg
stc
add
mov
cmps
dec
leave
cmp
hlt
in
mov
mov
shl
iret
pop
icebp
aas
sbb
mov
fucomp
enter
sbb
cmp
inc
and
out
mov
test
add
mov
jp
out
mov
sbb
push
sub
jecxz
retf
pop
mov
outs
and
in
jmp
out
dec
mov
jecxz
add
pop
retf
sub
outs
(bad)
repnz
sbb
sub
pusha
in
mov
pop
push
adc
popf
or
fisubr
add
nop
sbb
pop
xlat
inc
stos
into
rol
jle
pop
in
daa
and
fld
outs
add
mov
and
jne
bound
shl
adc
inc
in
je
rcl
mov
clts
sbb
xchg
icebp
pushf
mov
mov
add
repz
push
sbb
fdivr
cmp
jp
mov
mov
pop
or
adc
jp
push
mul
repnz
in
sub
jno
hlt
pop
inc
sbb
fsubr
mov
loop
(bad)
dec
inc
push
jmp
jl
inc
dec
int
ret
test
test
sub
push
push
mov
(bad)
ins
inc
and
test
sbb
push
cmps
repnz
iret
cwde
lea
mov
add
pop
or
leave
mov
imul
and
push
inc
xor
sbb
outs
sbb
push
push
stos
add
out
push
xchg
push
jns
mov
pop
jmp
(bad)
adc
xor
jge
nop
outs
inc
sub
dec
test
and
add
cmp
out
jle
neg
pop
xchg
fimul
jno
inc
retf
inc
dec
retf
pop
fldenv
shl
jle
cmp
cmp
mov
sbb
xor
inc
jmp
cmp
xor
xor
retf
or
shl
sar
repz
mov
lods
xchg
jg
loop
movs
mov
ja
mov
scas
enter
sar
ins
jns
test
jnp
push
mov
dec
in
aaa
mov
imul
in
data16
ja
es
dec
adc
cli
lahf
ret
jb
jne
xchg
sti
cmp
xchg
mov
iret
add
cmp
mov
dec
mov
push
bswap
mov
pop
in
jo
addr16
int3
mov
pop
loopne
mov
mov
jb
addr16
pushf
jp
pop
xchg
(bad)
lea
imul
pop
(bad)
add
neg
mov
cmp
dec
aad
(bad)
mov
in
clc
mov
mov
data16
fisub
(bad)
xchg
movs
jbe
dec
fisubr
and
(bad)
lock
mov
xchg
data16
imul
data16
jmp
xchg
xor
iret
out
repz
call
fcomi
pushf
es
pop
fmul
mov
das
push
(bad)
sbb
in
in
add
hlt
ins
lods
xchg
xor
xchg
adc
sbb
fcom
adc
or
jb
push
inc
pop
inc
(bad)
cld
je
cmp
mov
mov
cmp
adc
dec
outs
mov
in
leave
fdivr
aam
xor
aas
cld
lods
inc
pop
lds
pop
icebp
cmps
ret
test
mov
add
lods
imul
cmps
sahf
stos
sbb
add
inc
add
xor
call
jle
add
(bad)
push
inc
mov
jmp
cmp
(bad)
pop
ds
pop
and
(bad)
aaa
cmp
add
mov
mov
imul
fsub
in
and
or
mov
repz
inc
jns
mov
push
enter
popa
xchg
enter
push
or
push
call
dec
push
imul
neg
add
push
shl
push
and
fs
rcl
stos
or
dec
sbb
cmp
mov
pop
add
in
sub
ss
inc
fs
or
dec
dec
ror
jge
mov
fstp
ins
loope
inc
inc
jp
test
mov
mov
push
cmp
jle
xor
stos
cmp
popf
enter
daa
mov
xchg
(bad)
int
push
sub
int3
jge
stos
dec
sub
std
pop
and
outs
dec
in
push
std
mov
iret
mov
stos
pop
cmp
test
xor
data16
lds
movs
mov
mov
mov
or
les
or
retf
aad
push
enter
stc
mov
daa
cmp
ins
inc
fsubr
mov
add
leave
adc
xor
test
sbb
pop
mov
mov
push
sub
stc
stos
adc
inc
inc
xor
inc
push
loop
mov
test
inc
call
aam
pop
sub
fcom
jg
call
xor
xchg
outs
idiv
sub
ret
jne
adc
mov
mov
or
xchg
dec
sahf
jns
add
data16
cwde
adc
inc
inc
in
xchg
ja
(bad)
into
xchg
push
sbb
pop
out
fdiv
jg
jo
hlt
xchg
mov
push
mov
pop
rcr
jg
outs
adc
ja
(bad)
not
adc
(bad)
cmp
mov
jp
and
call
xchg
jne
sti
adc
in
mov
neg
nop
inc
mov
cmp
bound
cmps
mov
imul
gs
sbb
out
mov
test
adc
dec
in
je
gs
inc
shr
push
nop
pop
push
shl
mov
xor
(bad)
ds
test
outs
lahf
cwde
fcmovu
rcl
and
mov
outs
and
push
sbb
mov
pop
push
das
in
sub
pop
(bad)
jo
push
xchg
int
idiv
pop
dec
jbe
int
mov
mov
pop
pop
fcmovu
sub
clc
adc
add
lea
gs
lods
sbb
adc
repz
cmc
std
leave
les
sti
lock
pop
and
frstor
ins
lock
jl
push
cmp
or
xor
cmps
mov
adc
cwde
sbb
xchg
sub
dec
enter
cdq
xlat
jmp
cmps
sub
mov
mov
xor
push
inc
jae
lods
cmp
or
cmp
mov
inc
mov
jmp
mov
test
sub
mov
in
adc
mov
(bad)
ja
inc
aaa
mov
xor
fbstp
xchg
dec
sbb
pop
or
push
sahf
jbe
mov
pcmpgtw
mov
(bad)
pusha
repnz
and
dec
(bad)
aad
rcr
and
je
loop
sahf
arpl
mov
or
popf
cmp
mov
push
mov
leave
in
adc
cmps
pop
shr
icebp
stc
or
(bad)
fld
inc
pop
in
loopne
adc
jg
mov
inc
ror
pop
lock
mov
mov
and
rcl
stos
ins
mov
neg
stc
mov
dec
loop
and
nop
imul
push
jmp
push
test
adc
push
add
cmps
mov
lock
scas
cdq
js
cmp
adc
cmps
push
xchg
mov
mov
sub
xchg
sti
fs
jle
ret
shl
and
inc
inc
and
add
test
hlt
jne
rol
xchg
stos
adc
pop
push
in
cli
inc
xchg
push
sbb
dec
repnz
sub
mov
mov
mov
pusha
dec
aaa
or
(bad)
mov
int3
fwait
push
scas
adc
fcmovne
pop
fiadd
(bad)
pop
or
xor
mov
xchg
inc
and
adc
push
dec
dec
and
dec
jg
int
pop
(bad)
xchg
int
cmps
sub
jbe
sbb
dec
repnz
sar
cmp
push
lods
push
les
pusha
jbe
(bad)
adc
inc
rcl
adc
jnp
hlt
out
push
pop
std
and
xchg
fbld
mov
sbb
bound
aas
mov
add
sbb
cdq
ins
lods
mov
fistp
sbb
out
out
sub
sbb
test
fs
(bad)
int
ret
xchg
stos
sbb
cmp
mov
nop
and
add
test
mov
loopne
popf
fbld
shl
jmp
loop
(bad)
or
push
sbb
out
mov
or
adc
push
in
in
pop
in
pop
or
ss
xchg
in
(bad)
jg
xchg
pop
aad
jle
or
mov
out
clc
sbb
jb
les
(bad)
mov
or
ds
rcr
imul
outs
rcr
xor
pop
sbb
push
and
stc
and
ret
push
sahf
ss
mov
dec
into
inc
add
pop
inc
ds
mov
cmp
inc
xor
shl
and
dec
sbb
cdq
and
dec
xchg
push
mov
inc
rcr
mov
push
in
inc
mov
inc
shl
shl
idiv
ja
aad
push
adc
loope
or
mov
cdq
jno
pop
push
or
das
es
xor
push
in
(bad)
imul
int
imul
mov
cmp
sar
cdq
data16
cmc
and
push
xchg
xchg
mov
out
in
mov
je
or
daa
in
dec
pop
add
outs
fdivr
(bad)
test
sub
push
pusha
sti
ret
cs
lods
add
scas
nop
jb
pop
mov
mov
or
and
ins
jle
cld
loope
(bad)
mov
mov
jb
ja
pop
rcl
inc
mov
adc
pop
inc
addr16
je
push
push
jnp
push
xchg
(bad)
inc
(bad)
push
ret
rol
push
jmp
(bad)
movs
aas
sbb
jmp
mov
into
sub
mov
cmp
jnp
dec
xor
shl
jae
xchg
fcom
ss
or
jg
dec
jno
dec
ficomp
movs
inc
push
xor
mov
xchg
out
ins
jb
loop
mov
or
test
or
(bad)
pop
jmp
add
ss
int3
in
dec
(bad)
jae
pop
scas
mov
jnp
add
dec
cmp
lahf
sbb
outs
outs
sbb
xchg
and
and
arpl
lds
ss
and
jg
cmp
push
add
fwait
jns
outs
cmp
scas
pop
push
adc
out
popa
add
rcl
leave
in
and
loope
xchg
test
imul
in
lock
push
and
call
adc
jnp
stos
rol
adc
ds
popa
sub
aas
loopne
test
iret
cmp
out
mov
jno
xchg
push
push
dec
jno
pop
xchg
fsub
fdivrp
(bad)
xchg
lds
pop
jge
sub
inc
js
cmp
sbb
push
xchg
jg
jg
in
mov
scas
sbb
repnz
gs
cs
mov
xchg
or
inc
cmc
fiadd
clc
in
(bad)
jge
into
jbe
jnp
imul
clc
je
frstor
add
mov
jnp
mov
hlt
inc
xchg
fneni(8087
push
scas
daa
retf
scas
push
shl
mov
imul
fidivr
adc
push
enter
out
and
jg
iret
add
cmp
xor
out
pop
inc
jg
mov
nop
cmp
adc
cmp
iret
daa
add
ds
ja
loop
and
jo
je
in
push
cmp
push
push
pop
repz
lea
cmps
cmp
rcr
sub
or
ss
outs
jo
push
mov
jmp
retf
ret
add
fisubr
pop
mov
inc
loope
imul
retf
into
mov
mov
shl
jbe
mov
aas
mov
je
sub
loop
cmps
and
pushf
in
cmp
jno
jo
jmp
sub
jno
inc
in
loop
cli
(bad)
scas
adc
fild
loop
test
retf
in
mov
test
pop
xchg
sar
pop
jb
(bad)
jns
or
call
cmp
inc
jg
mov
sti
retf
mov
jae
lods
sbb
mov
data16
fsub
cmp
ret
sbb
mov
addr16
(bad)
nop
in
pop
cmp
fwait
mov
and
sar
sbb
out
bound
sub
and
(bad)
push
mul
lds
mov
xlat
test
retf
repz
fisub
mov
jo
dec
inc
out
das
mov
mov
outs
cmps
jle
hlt
movs
or
add
movs
fnstenv
xchg
dec
test
mov
push
bound
sbb
dec
ins
and
mov
mov
(bad)
cmp
out
xor
cmp
inc
mov
mov
sub
mov
xor
mov
or
(bad)
rcr
nop
dec
movs
jno
sub
push
xor
div
cmps
aas
add
fstp
mov
dec
xchg
sub
int3
mov
fadd
iret
lock
iret
rcr
jno
sbb
pop
or
mov
aam
adc
mov
fnstsw
(bad)
xchg
mov
lds
enter
(bad)
xor
mov
jmp
xlat
sub
sub
iret
sub
xchg
test
or
ror
mov
pushf
pop
cmp
dec
mov
pop
mov
clc
sbb
mov
shl
cmps
jae
sbb
nop
fnsave
call
push
fnstenv
jmp
dec
xrelease
and
adc
div
movs
(bad)
shl
cwde
push
ds
imul
xchg
popa
inc
ins
xchg
mov
es
jb
push
adc
jmp
mov
loope
pop
fistp
in
sbb
or
or
cmp
cmps
hlt
push
shr
scas
xlat
lahf
push
sbb
cmc
(bad)
out
jle
dec
cmp
pop
inc
push
shr
mov
xchg
nop
in
aad
popa
retf
mov
retf
or
ficomp
scas
jmp
and
push
pop
ins
or
(bad)
aad
mov
xchg
mov
pusha
xor
es
(bad)
dec
fyl2x
pushf
xchg
jne
dec
mov
in
lods
fwait
xchg
pop
jbe
sub
add
mov
push
dec
daa
sbb
aam
sub
imul
lahf
bound
pop
jl
imul
adc
inc
(bad)
mov
push
jnp
jae
call
js
xchg
repnz
(bad)
mov
retf
push
xor
popf
sbb
sbb
rcl
jb
xchg
push
pop
dec
push
mov
jg
pop
inc
sub
das
fimul
pop
into
call
jne
pop
cli
or
(bad)
addr16
out
adc
fadd
sahf
loopne
xlat
loopne
sbb
adc
retf
movs
mov
pop
push
pop
retf
pop
movs
cmp
jp
lahf
ja
sbb
mov
call
jnp
mov
adc
cmp
push
push
jge
test
xchg
xchg
rcl
mov
cwde
xor
stc
sbb
loop
jo
mov
push
jl
in
jnp
scas
test
cmps
leave
add
jmp
iret
dec
(bad)
dec
rcl
lods
jae
std
movs
cmp
in
les
idiv
xchg
fadd
xchg
inc
pop
cdq
loopne
rol
xor
in
fst
cmp
xchg
xor
sbb
sbb
xor
push
cld
add
add
pop
mov
out
inc
(bad)
push
push
pop
jle
jns
and
or
(bad)
cmp
pusha
popa
cli
gs
(bad)
fs
lock
outs
inc
mov
jmp
push
es
loopne
outs
sub
int
mov
and
data16
sar
mov
cmps
enter
or
stc
push
cmp
stc
and
inc
xchg
push
cmp
or
sysret
mov
cmp
icebp
cwde
imul
inc
add
add
xlat
shr
mov
movs
daa
movs
mov
imul
aad
call
jb
xchg
mov
dec
ss
mov
(bad)
scas
xor
lahf
retf
ja
sahf
lds
cmp
out
aad
sbb
in
pop
repnz
imul
(bad)
mov
fcmovb
push
lock
movs
ins
mov
scas
jae
inc
mov
fsubr
or
mov
and
sub
jp
fwait
ins
fsubr
add
int3
mov
movs
out
das
(bad)
aas
rcr
pop
push
test
push
mov
fld
shl
icebp
push
ins
int
pop
or
inc
or
imul
test
outs
stos
test
pop
hlt
or
ss
push
ret
test
lods
mov
push
movs
dec
push
mov
(bad)
popa
pop
ss
jl
inc
push
cmp
les
loope
xor
sub
arpl
mov
mov
or
dec
inc
arpl
xchg
aam
std
in
add
out
test
ins
mov
stc
movs
and
mov
sbb
sbb
dec
das
pop
retf
mov
and
jmp
push
mov
inc
jns
jmp
cmp
lds
repnz
(bad)
cmp
inc
cs
pop
daa
out
movs
push
call
sbb
scas
or
mov
out
add
jecxz
inc
lds
(bad)
jmp
jl
mov
xor
push
aam
repnz
add
dec
add
xchg
pop
push
push
and
pop
push
cmp
in
loopne
ss
cmp
and
aaa
(bad)
aam
clc
sub
(bad)
retf
pop
and
jbe
jecxz
ss
mov
enter
dec
popf
fs
(bad)
and
sete
das
pop
cmp
mov
dec
call
dec
mov
xor
adc
mov
jne
shl
leave
lods
lods
and
dec
mov
pop
push
int3
xlat
lods
or
icebp
jnp
cmp
and
mov
sub
lds
loopne
and
icebp
push
jne
dec
mov
ins
or
fmul
js
adc
and
into
(bad)
and
lea
cmp
mov
rcl
xlat
std
fidiv
xchg
repz
leave
jo
mov
cmc
sbb
je
cmp
xor
into
ins
aaa
inc
or
mov
ds
outs
imul
fimul
outs
sub
repz
test
inc
jo
sbb
sbb
test
jo
in
cwde
jge
enter
outs
xlat
mov
inc
int3
push
pop
add
in
sub
sub
aad
imul
mov
xchg
push
sub
jns
mov
fs
add
out
ret
ds
sar
(bad)
out
jno
jb
mov
icebp
pop
(bad)
or
push
fdiv
std
out
loopne
or
jno
aad
arpl
adc
adc
jp
arpl
and
mov
je
cmc
jne
inc
lock
retf
mul
push
ja
sbb
xor
sbb
vunpckhps
mov
addr16
or
enter
mov
(bad)
xor
and
ins
xor
ret
adc
pop
inc
test
dec
inc
cmp
xchg
jb
cmp
cli
fimul
inc
jae
xchg
mov
and
in
imul
in
or
cmc
loope
xor
push
iret
(bad)
in
cmp
cmp
retf
nop
xor
jns
lods
ror
mov
mov
mov
(bad)
scas
sub
retf
lods
imul
or
xchg
jecxz
shl
outs
mov
xchg
xor
and
cmp
jo
repz
pop
jle
cmp
push
stc
sti
dec
int
push
scas
inc
bound
and
push
and
into
call
mov
or
into
cmps
jae
(bad)
and
out
aaa
out
mov
cld
inc
add
jg
jbe
test
cmps
inc
push
pop
add
jl
jge
fldenv
(bad)
stc
sub
pop
cwde
ror
in
bound
push
dec
sbb
add
sub
or
fs
dec
dec
push
in
jp
cmc
jg
loop
test
add
lods
repnz
mov
sbb
nop
xor
pop
repnz
add
pop
and
xchg
shl
jo
mov
mov
in
adc
mov
push
pop
dec
call
mov
sbb
xchg
pop
or
xor
and
popf
jo
dec
(bad)
ins
scas
pop
push
jns
dec
imul
pushf
retf
push
pushf
mov
leave
pop
dec
imul
mov
push
sub
inc
lea
mov
push
or
pop
fs
or
call
movs
shr
jb
jno
imul
aaa
stc
clc
pavgw
enter
in
div
and
adc
mov
ret
repz
test
rcl
gs
mov
xchg
lea
cmp
lds
pop
xchg
retf
sbb
sti
sbb
mov
and
cwde
mov
fimul
xchg
jbe
stos
ins
xor
in
xchg
je
or
jb
enter
or
xor
push
add
clc
dec
cmp
leave
loopne
xor
adc
bswap
and
fwait
add
test
movs
cmps
push
cmp
imul
push
popa
jno
xchg
jae
push
movs
ds
sbb
out
mov
mov
pop
sbb
dec
push
rol
ins
mov
jns
adc
cmc
add
cmp
mov
pop
add
pop
sbb
fdiv
or
rcr
movs
mov
out
ja
ret
fistp
xchg
gs
xor
sub
add
repnz
push
inc
xor
and
adc
mov
push
std
xchg
ret
(bad)
nop
push
in
cmp
js
fcomp
xchg
(bad)
add
repz
sub
retf
pop
lock
mov
repz
sbb
xchg
jo
sub
rcl
xor
xchg
and
cld
pusha
mov
cmp
xchg
mov
call
out
mov
(bad)
mov
lock
sbb
sbb
cmp
scas
xor
cld
scas
mov
cmp
mov
push
leave
add
and
add
cmc
test
sub
sbb
cld
out
call
frstor
arpl
mov
jg
les
adc
ds
add
cwde
inc
cmp
adc
adc
dec
std
movs
jg
jle
xchg
test
dec
mov
mov
mov
pop
imul
add
xchg
dec
mov
iret
xchg
or
or
xchg
add
in
ror
cmp
ror
adc
sbb
jge
push
out
(bad)
sub
outs
jmp
and
pop
mov
adc
sbb
mov
xchg
jae
sbb
adc
out
sbb
ja
ja
xchg
js
loopne
(bad)
jo
push
cmp
int
(bad)
xchg
sub
fsub
enter
pusha
fs
jl
stos
mov
sub
enter
and
or
cmps
add
xor
loopne
dec
movs
xchg
icebp
inc
rcr
push
mov
xchg
imul
aas
jle
mov
daa
movs
mov
push
push
enter
sbb
sub
aas
(bad)
stos
scas
mov
sub
dec
or
jnp
(bad)
sub
sub
test
stos
mov
movs
sbb
adc
xchg
fdiv
sbb
push
and
sub
shl
mov
jmp
add
push
pop
jg
call
sti
sbb
(bad)
mov
jecxz
push
ds
int
retf
arpl
xchg
cli
adc
xchg
mov
pushf
iret
and
push
test
popf
or
xor
push
data16
sbb
int
xchg
sbb
xchg
pop
pop
arpl
lock
inc
test
jnp
scas
inc
or
add
inc
mov
mov
jmp
ret
xor
mov
iret
jl
stos
daa
imul
xchg
test
shr
or
fisubr
rcr
push
dec
cmps
int
adc
lock
jo
imul
or
fld
idiv
or
scas
adc
inc
sbb
inc
fisubr
sub
pop
push
inc
iret
mov
pop
mov
push
data16
(bad)
test
mov
mov
int
jo
mov
mov
cmp
das
out
cmps
sub
mov
popf
ficomp
in
jmp
pop
xchg
cmps
test
jmp
cmp
fs
cmps
pop
xchg
aam
jp
repnz
mov
and
test
popa
add
xor
dec
add
daa
sub
mov
add
mov
push
jmp
push
jnp
std
imul
lea
push
mov
jbe
mov
mov
xchg
or
out
cmc
cmps
inc
dec
imul
push
ins
mov
mov
sbb
cmps
pop
mov
lods
and
stc
or
pop
xchg
mov
cmp
xchg
dec
inc
shl
add
push
pop
and
xchg
call
js
rcl
or
ins
xchg
mov
sbb
and
mov
jno
dec
in
mov
les
cmp
mov
push
shr
pusha
mov
mov
cs
xlat
sbb
dec
(bad)
div
push
(bad)
or
sbb
popa
inc
mov
push
sbb
arpl
call
imul
ret
mov
push
imul
hlt
fisttp
pop
rol
dec
mov
rcl
icebp
jne
sub
dec
jmp
mov
mov
fwait
dec
pop
or
retf
aas
gs
push
cmp
(bad)
cdq
add
mov
mov
jnp
mov
add
out
fbld
iret
rcl
or
push
sub
out
sahf
jg
and
dec
inc
test
xor
pushf
sub
or
fmul
test
xor
ins
pushf
mov
inc
jl
xor
retf
and
hlt
adc
jmp
cs
sub
addr16
xor
aam
push
js
(bad)
es
ins
iret
ja
bound
(bad)
add
retf
outs
bound
and
mov
inc
daa
cmp
out
fbstp
and
repnz
sub
and
call
sar
add
fnstenv
fstp
or
inc
je
sar
adc
add
addr16
add
adc
mov
pop
inc
xchg
jo
push
xchg
sbb
div
not
sub
lods
jg
inc
scas
test
loop
sbb
or
cmps
test
or
in
nop
mov
mov
out
dec
sbb
pop
pop
repnz
push
outs
push
xlat
push
add
lods
push
jmp
mov
xor
sub
jmp
pop
jne
xchg
adc
movs
shr
cmp
jne
aam
xchg
sub
jl
mov
cmp
push
adc
jmp
push
xor
jmp
(bad)
ret
dec
jb
inc
jno
inc
fwait
xor
mov
pop
mov
and
pop
gs
loopne
pop
push
imul
fisttp
outs
shl
pop
or
dec
cli
dec
mov
jmp
inc
fisttp
(bad)
stos
push
push
bound
pop
sub
cmc
xor
into
les
hlt
and
or
push
(bad)
add
nop
push
loope
push
xchg
adc
mov
sub
jge
ds
or
out
or
iret
sar
aad
mov
dec
dec
ins
cmp
dec
mov
iret
out
mov
fst
jbe
out
dec
mov
push
push
into
rol
push
adc
dec
jae
sub
rcl
sbb
repnz
mov
jne
aaa
fmul
mov
ss
dec
scas
or
ss
(bad)
stc
cmp
mov
mov
sbb
cdq
add
hlt
rol
loope
ins
neg
pop
xchg
div
shl
jmp
popa
inc
pop
movs
push
xchg
inc
cmp
in
lock
inc
js
dec
das
lods
ret
cld
adc
push
scas
sahf
pop
mov
out
xor
inc
fcomi
xchg
aam
dec
xor
neg
xor
mov
out
mov
loope
bound
adc
mov
jmp
popa
jno
sbb
sub
cs
add
imul
lds
pushf
mov
(bad)
dec
jmp
mov
dec
(bad)
jg
push
aam
out
jbe
movs
stos
cmps
aas
cmc
sbb
xchg
or
sbb
jnp
push
jge
xor
stc
jo
ficom
fnstsw
inc
cwde
out
add
jbe
mov
stos
push
jb
in
ins
test
(bad)
(bad)
mov
xchg
pop
imul
test
nop
xchg
sub
pusha
jle
mov
mov
leave
retf
inc
std
int3
js
inc
xor
sbb
ret
pusha
(bad)
jg
test
ret
mov
xor
mov
stos
call
dec
mov
xchg
add
aam
mov
ins
mov
xchg
pop
loope
sub
xchg
mov
xor
mov
stc
and
cmp
in
imul
inc
mov
cmps
jb
retf
mov
push
out
sti
imul
lods
xor
xor
dec
(bad)
pop
mov
pusha
mov
add
or
push
mov
loopne
cmps
les
jb
adc
jle
dec
sbb
(bad)
or
jns
add
and
jmp
pop
inc
sar
loop
test
xor
in
mov
xor
jmp
mov
aam
inc
mov
test
add
dec
jnp
(bad)
ds
inc
popf
mov
pop
(bad)
test
nop
add
or
jmp
pushf
inc
mov
xchg
xor
inc
sbb
out
dec
pushf
cmp
cmp
xchg
test
adc
cmp
or
(bad)
jo
xor
xchg
mov
stc
dec
pop
call
fmul
xchg
sar
hlt
lods
xor
add
into
mov
and
pop
cmps
jbe
lahf
stc
loopne
cmc
(bad)
push
jo
sub
jl
mov
in
stos
cmps
dec
cmp
loopne
dec
jl
out
lea
bound
cs
xor
jp
ret
dec
inc
sub
jno
dec
into
dec
ins
cmps
dec
shr
cmps
leave
inc
shl
mov
pop
push
lea
add
dec
rcr
mov
fnstcw
push
in
inc
jmp
fadd
and
repz
stos
cmp
(bad)
sbb
adc
pop
retf
cmp
imul
in
inc
(bad)
pop
jbe
outs
cli
mov
dec
push
push
or
ins
jecxz
xor
popf
lods
and
mov
mov
cmp
test
pop
cwde
repz
pop
fmulp
arpl
lods
add
sub
jmp
xchg
call
mov
jno
mov
sub
sbb
add
fwait
in
bound
sub
sub
mov
push
stos
or
push
push
pop
or
sbb
inc
push
pusha
aam
mov
repz
sti
dec
xor
xchg
outs
in
in
cli
outs
leave
mov
int
mov
out
xchg
push
sub
mov
jmp
inc
clc
cmp
int
pop
xchg
out
push
pop
sbb
(bad)
or
bound
xor
ins
adc
retf
push
icebp
fldlg2
jbe
mov
fnstcw
cmp
int
xor
imul
dec
jbe
loop
cmp
and
lahf
das
pop
or
mov
cli
stc
xchg
or
add
xor
jg
add
lods
sub
stos
sub
test
ds
lea
push
and
jne
outs
push
out
out
pop
loop
cld
repnz
stos
cmp
test
cmp
push
xor
aas
retf
sbb
pop
pop
outs
inc
push
pop
add
jae
cld
call
adc
push
pop
cwde
add
jmp
movs
sub
xor
scas
pop
iret
jno
adc
cmps
cli
mov
push
mov
in
push
retf
fisttp
fsub
push
gs
imul
sahf
stc
cmpps
in
mov
ss
jl
xchg
jp
jns
mov
cmovg
pop
adc
cmp
ficom
sub
leave
and
test
push
sbb
cmp
lods
push
adc
sbb
(bad)
sbb
mov
mov
fcomi
out
pop
xchg
popf
(bad)
jmp
cs
jg
cmp
jo
add
cmps
mov
or
sbb
sub
cmps
and
dec
clc
cmp
loope
fisubr
mov
mov
xchg
sahf
jle
xchg
sbb
push
retf
stos
ins
jge
int3
xchg
pop
mov
xor
sbb
imul
fst
call
mov
sbb
xchg
mov
movs
(bad)
cmps
push
aam
ret
scas
sti
xor
inc
adc
and
in
out
adc
jae
inc
sbb
lea
xor
repnz
cmps
xchg
mov
pop
dec
idiv
push
lds
pop
xor
sbb
cmp
in
jl
ja
mov
or
fcom
mov
popf
pop
push
inc
shl
push
out
test
aaa
mov
(bad)
fld
mov
mov
cmp
adc
mov
pop
jnp
addr16
fs
pop
std
call
cmc
jns
call
or
scas
retf
adc
mul
mov
sbb
aaa
gs
push
inc
lock
push
not
daa
pop
ror
enter
xchg
loop
leave
adc
cmp
mov
jnp
xchg
adc
fbstp
push
mov
sti
adc
loop
xchg
mov
outs
adc
dec
xlat
in
call
jecxz
pop
imul
(bad)
outs
push
push
cmps
gs
xchg
test
sub
bound
xchg
aam
cmp
dec
mov
dec
jno
(bad)
(bad)
jmp
lods
cmp
xchg
mov
push
aaa
movs
xor
(bad)
adc
mov
test
xor
repnz
push
or
cmp
add
jmp
fwait
out
sub
and
popa
stc
out
mov
sbb
(bad)
mov
sti
xor
aad
in
or
lea
call
fcom
xchg
mov
or
shl
popw
sbb
lods
jae
repnz
lds
out
dec
sbb
fsub
mov
das
rcr
arpl
shr
or
push
rcr
or
push
pop
pop
jnp
push
js
adc
cmp
lods
or
(bad)
mov
stos
ror
mov
inc
inc
and
fiadd
pop
stos
adc
sbb
inc
xor
stos
mov
xor
pop
fcomip
or
shl
mov
dec
mov
push
aad
xor
jg
fbstp
fnstsw
mov
stos
movs
int
mov
loop
fisubr
mov
or
jo
(bad)
or
inc
outs
push
fld
loopne
cmp
imul
pop
lods
xchg
out
xchg
jns
xor
aaa
sysexit
stos
pop
ss
dec
or
push
add
movs
jecxz
out
shl
sbb
out
out
mov
mov
push
jmp
sub
sbb
clc
mov
rcr
shl
push
push
das
loop
mov
out
fmul
shl
cmp
and
xor
outs
adc
cmp
push
sub
dec
cli
xor
push
ret
pop
push
cmp
pop
mov
arpl
mov
xchg
movs
stos
push
cmp
xor
into
mov
sub
and
std
jnp
push
adc
in
and
push
adc
cli
repnz
imul
xchg
in
mov
retf
repnz
xchg
xchg
ss
out
fisttp
sub
outs
mov
test
mov
and
inc
(bad)
int3
cmp
sahf
mov
and
std
push
sbb
pop
mov
pop
push
cmp
das
repz
out
push
test
or
cmps
xlat
sub
aam
into
cli
test
gs
adc
jmp
mov
out
nop
adc
xor
ins
xor
cwde
and
dec
cwde
cmp
enter
enter
inc
mov
mov
test
add
add
addr16
imul
pushf
aaa
push
mov
and
jecxz
inc
ins
and
jae
jbe
adc
cmps
mov
jl
cmps
push
mov
repnz
loop
clc
imul
xchg
nop
jmp
mov
cmp
popa
call
lea
pop
pop
jae
retf
sub
stc
inc
jns
cmc
pop
iret
out
(bad)
mov
addr16
adc
pusha
mov
aaa
pop
loop
dec
shl
jno
ss
push
test
xchg
pop
ja
cli
xor
pop
stos
cmps
imul
adc
sbb
int3
dec
pop
jecxz
jmp
in
pop
add
imul
jmp
jae
in
mov
pop
mov
js
adc
sahf
dec
mov
outs
adc
pop
add
iret
(bad)
leave
sub
cmp
aaa
cmps
repnz
(bad)
sbb
jnp
nop
or
repz
and
jbe
push
add
sub
bound
mov
add
jne
cli
pop
fmulp
sti
pop
mov
fwait
inc
pop
ret
std
shl
push
sbb
pop
js
test
lea
stos
fs
mov
push
cmp
mov
ins
bnd
fld
addr16
jle
jo
push
andnps
in
inc
das
stos
stos
pop
adc
jl
mov
popa
inc
add
(bad)
int
pusha
ins
and
loope
push
and
fwait
jp
cmps
mov
outs
xchg
and
cdq
sub
movs
pusha
inc
inc
and
jmp
add
jne
lahf
mov
in
popa
push
ffreep
sbb
repnz
aam
mov
pushf
push
adc
popa
adc
xchg
mov
mov
dec
loope
jmp
stos
fmul
test
xchg
add
popa
xlat
jbe
stos
das
mov
repz
and
fistp
popf
push
(bad)
push
fs
dec
ds
fdivp
movs
push
retf
mov
xchg
(bad)
fild
and
retf
pop
jbe
jmp
dec
mov
std
in
mov
cmps
jg
lods
in
hlt
and
mov
cmp
in
sub
ins
add
cmps
sbb
retf
push
jge
lds
jmp
cli
cmps
sub
adc
mov
clc
mov
inc
push
sub
rcr
into
std
dec
xchg
test
mov
jle
loop
movs
aad
and
aam
or
jl
jle
call
mov
cwde
xchg
ins
cli
pop
or
inc
popa
inc
mov
aaa
dec
out
fsubp
mov
cmp
adc
sbb
cmp
or
arpl
mov
sub
pop
jg
sbb
xor
aaa
jbe
cmps
and
inc
sbb
xchg
and
(bad)
xchg
sub
(bad)
ret
enter
iret
add
cmp
fnsave
mul
adc
scas
or
lea
mov
sbb
leave
xchg
mov
xchg
ficom
jb
mov
inc
aad
into
add
rcl
pop
outs
inc
mov
jmp
pusha
fisub
xchg
iret
mov
cs
bound
in
jmp
call
dec
rcr
mov
pusha
xchg
push
inc
les
mov
stos
test
sahf
shl
add
push
dec
xor
and
and
arpl
dec
fdivr
adc
mov
sti
fld
lds
push
outs
xchg
in
pop
icebp
fs
jbe
into
rol
les
iretw
(bad)
mov
lock
sub
pop
iret
mov
xchg
aam
add
fcomp
or
and
cmp
mov
es
fcom
jnp
fwait
daa
les
add
or
fidiv
or
xchg
das
sub
push
fwait
test
(bad)
fnstsw
mov
inc
enter
shr
push
pop
into
pop
arpl
hlt
and
or
or
inc
pop
add
xchg
sbb
aas
retf
gs
mov
jmp
jns
and
jle
sub
cmp
jmp
add
xchg
fimul
jnp
stos
sahf
pushf
push
addr16
mov
mov
push
cmp
adc
mov
mov
sbb
sub
aas
pop
scas
imul
fstp
(bad)
sti
stos
mov
int
dec
sti
repz
sub
fcomp
lods
add
pusha
jecxz
fistp
add
les
jno
imul
mov
inc
scas
jecxz
cmps
mov
clc
fs
mov
mov
enter
aam
jg
aad
sub
in
pop
out
and
or
add
jne
outs
pop
int3
ret
inc
push
int
jno
push
stos
cmp
mov
sbb
je
int
lds
xchg
cs
data16
jp
cmp
cmp
ss
mov
xor
xchg
and
xlat
(bad)
xor
sub
push
mov
mov
mov
pop
movs
xlat
cmp
out
mov
push
sbb
scas
nop
mov
or
(bad)
inc
lods
hlt
lock
(bad)
jp
dec
cmp
xchg
hlt
pop
mov
mov
and
test
mov
rol
sub
imul
push
jl
xchg
(bad)
sbb
clc
das
gs
pop
mov
mov
loopne
push
lock
fwait
inc
iret
jne
adc
je
push
xor
in
cdq
ror
or
inc
std
add
push
mov
pop
(bad)
fst
cwde
ins
test
mov
clc
cdq
xchg
dec
mov
pop
(bad)
fninit
push
sbb
or
dec
js
add
sub
mov
sti
adc
in
fisub
aas
and
sti
jmp
shr
mov
xor
mov
and
push
jns
shl
sbb
xor
outs
sub
out
mov
add
pop
rcl
inc
rcl
test
lods
pop
jp
inc
addr16
stos
ins
pop
jnp
out
mov
inc
test
pop
add
loop
lea
mov
mov
into
inc
fs
and
or
pop
shl
xor
mov
mov
mov
aaa
mov
inc
int
repnz
push
sbb
jmp
xor
fisubr
ds
sub
mov
jl
mov
push
mov
(bad)
add
popa
enter
pop
jno
in
les
mov
jmp
push
fst
adc
adc
pop
dec
sbb
adc
inc
xor
test
push
dec
ss
mov
xlat
jbe
ja
lock
xlat
xchg
xchg
pop
imul
loopne
inc
mov
and
jae
jle
inc
inc
sbb
xor
jmp
cmc
out
in
stos
scas
mov
scas
fcom
pop
mov
jmp
jnp
in
lea
test
movs
inc
push
call
pop
cmp
jp
or
retf
psadbw
sbb
mov
loop
(bad)
xchg
dec
dec
mov
std
pusha
mov
mov
dec
dec
jbe
in
mov
not
xchg
imul
dec
test
dec
ins
das
cmp
sub
inc
frstor
cmp
cdq
xor
cmp
fldcw
ss
cdq
jns
xchg
je
mov
ss
cmp
push
sub
pop
cli
xchg
mov
jnp
sub
ins
inc
lock
mov
jg
jne
(bad)
fld
fisubr
push
push
adc
loop
cld
test
or
movs
add
cmp
and
sub
(bad)
cwde
sahf
and
ror
add
iret
ret
imul
pusha
mov
or
out
push
xchg
or
in
push
jbe
dec
jge
fwait
inc
xor
mov
jne
shl
lahf
mov
out
sbb
sbb
js
loopne
xor
xchg
push
dec
stos
xchg
or
(bad)
repnz
lock
cmp
mov
xchg
adc
jns
cmp
fild
ja
ret
inc
arpl
inc
push
sub
pop
movs
rol
add
dec
cmp
fs
and
jne
inc
or
lds
arpl
mov
adc
jno
add
xchg
fs
xor
jne
mov
fcom
call
das
and
xchg
enter
test
pop
mov
jb
sbb
xor
dec
sbb
xchg
add
push
push
mov
sbb
out
inc
cs
call
mov
mov
fistp
sahf
mov
shl
mov
ret
(bad)
fimul
loopne
add
adc
ffreep
mov
mov
iret
add
or
leave
sbb
stos
xor
fs
jmp
push
or
cmpps
repz
pop
xor
arpl
pop
fsub
jnp
add
hlt
jmp
dec
loopne
push
jp
movs
ins
scas
or
stos
inc
fimul
repz
mov
out
call
jne
pop
popa
fwait
test
addr16
sbb
adc
pop
cmp
stc
pop
pop
pop
sub
fbstp
cld
add
and
xchg
push
add
vmovaps
inc
xor
xchg
push
or
adc
mov
jbe
popa
cwde
cmp
fisub
xchg
push
xchg
sub
dec
pop
lahf
pop
mov
out
popa
cli
cmp
push
ds
mov
lds
mov
fwait
out
mov
es
scas
add
leave
movs
std
sub
inc
movs
shr
cmc
fild
xor
push
xchg
inc
mov
lds
push
sub
jnp
fadd
dec
sub
not
call
mov
and
and
push
imul
and
xor
inc
jae
ss
mov
mov
pop
loope
jmp
cmc
and
xchg
pop
mov
dec
push
aaa
mov
scas
xchg
adc
adc
bswap
scas
out
in
fist
and
ret
xchg
fadd
into
jo
xor
je
lods
test
xor
sbb
push
inc
test
lahf
ins
dec
out
test
(bad)
cmp
mov
test
mov
and
(bad)
in
xchg
icebp
repz
mov
xor
pushf
push
cmp
cdq
sar
pop
xor
jmp
or
adc
(bad)
xor
outs
mov
jns
stos
lock
(bad)
inc
fs
cld
xor
pop
dec
or
adc
loope
sub
ins
jge
in
jae
mov
xchg
push
cmp
push
fst
sbb
add
xchg
in
ins
aam
test
dec
dec
mov
scas
cmp
or
push
pop
mov
sub
jge
clc
pop
cs
and
push
mov
(bad)
sub
mov
repz
xor
push
dec
mov
xor
and
adc
(bad)
adc
imul
stos
and
aad
(bad)
rcr
jmp
push
mov
pop
daa
dec
push
mov
mov
add
test
rcl
test
cwde
enter
ja
out
inc
jl
xor
mov
mov
xor
loop
add
or
sbb
mov
fstp
pop
inc
add
cmps
sub
aas
add
push
aas
mov
adc
iret
xor
dec
ret
popa
in
pusha
inc
cs
sar
imul
sbb
ds
aaa
push
or
jbe
sbb
not
loope
scas
xchg
or
push
pop
pusha
ss
xor
add
or
jl
push
arpl
jnp
mov
xor
add
cli
pop
mov
ja
sub
adc
sbb
jnp
bound
pop
retf
pop
mov
jl
test
scas
pop
mov
jno
push
pop
mov
in
inc
popf
out
in
stos
ficomp
push
sbb
loopne
jmp
mov
retf
mov
sbb
push
data16
mul
xchg
pop
push
enter
fistp
mov
scas
dec
aas
jg
inc
add
out
push
xor
or
inc
sub
xor
addr16
sbb
ds
and
stos
sbb
push
fmul
xchg
push
add
pop
cmps
mov
mov
sbb
xchg
pushf
dec
(bad)
dec
mov
jmp
fidivr
call
sbb
jmp
mov
push
rcr
in
push
cmp
mov
fdiv
push
lds
xchg
pushf
fsubp
mov
jns
mov
aam
pop
mov
or
out
mov
sub
test
mov
mov
inc
je
jns
int3
xchg
pop
sub
outs
push
jg
dec
and
sbb
jge
test
popa
addr16
sub
scas
call
pop
push
sbb
(bad)
(bad)
aaa
and
(bad)
scas
nop
sbb
adc
ins
cmps
or
in
les
jmp
imul
rcl
or
das
ins
xor
xchg
cmps
rcr
sbb
adc
or
inc
mov
retf
nop
jnp
push
fs
cmp
mov
mov
push
sar
or
das
imul
sahf
sbb
ret
push
aam
fs
pushf
add
cmp
pop
mov
sub
stos
adc
adc
fistp
sub
push
cld
psubd
(bad)
cmp
mov
sti
jl
cmp
in
jo
mov
fidivr
notrack
lods
mov
clc
ficomp
ror
and
je
rol
mov
mov
fiadd
stos
movs
sbb
repz
mov
(bad)
(bad)
jl
sub
(bad)
js
mov
loop
jb
or
aam
jb
sub
inc
(bad)
call
push
and
call
cmps
add
ficomp
(bad)
mov
mov
cmp
xchg
and
dec
loop
mov
sub
outs
ret
call
mov
ror
jne
out
les
ficomp
adc
jg
and
fisttp
icebp
or
dec
push
test
sub
repz
xchg
in
pop
jg
enter
inc
jbe
mov
or
imul
rcl
cld
and
and
mov
fld
push
inc
addr16
mov
inc
push
push
mov
dec
es
(bad)
lea
push
repnz
jae
add
push
or
in
out
(bad)
dec
(bad)
jno
cs
pop
je
mov
stc
mov
push
test
mov
jbe
ss
lea
jne
ja
xor
sub
or
and
jne
loopne
add
inc
test
sahf
ins
adc
inc
xchg
in
or
pop
xchg
vorps
ins
sahf
add
retf
hlt
cmp
mov
dec
cmc
cmp
xor
mov
lock
push
and
lahf
fimul
lock
xchg
mov
popf
jmp
jmp
add
dec
xor
repnz
cs
jno
pop
and
lahf
add
loope
out
ins
idiv
inc
cs
adc
push
imul
sbb
or
xchg
scas
sar
push
mov
popa
out
shr
in
pop
or
add
loope
pop
ds
ror
aaa
pop
retf
jg
aad
dec
adc
push
fisub
fld
mov
les
jns
xchg
popa
add
daa
add
adc
push
popa
mov
test
shr
cmovl
test
push
push
xor
lods
adc
adc
nop
mov
jle
cmc
jp
pusha
nop
in
call
das
popa
int3
aas
scas
inc
and
pop
pop
or
daa
adc
out
pusha
adc
or
jbe
ret
cmp
jmp
loope
xchg
jl
jmp
mov
inc
sbb
mov
movs
and
dec
and
and
xchg
dec
fisubr
dec
push
sbb
push
push
xor
inc
add
mov
fistp
jno
das
jle
(bad)
enter
jns
imul
sbb
movs
lahf
in
in
push
cmp
fbld
jecxz
test
cmps
mov
adc
jbe
icebp
scas
int
sub
xchg
mov
fsubr
retf
pop
jmp
mov
jl
adc
nop
mov
out
mov
into
daa
cmps
pusha
fwait
push
push
lods
add
repnz
clc
mov
push
dec
(bad)
mov
movs
add
xor
mov
(bad)
sub
icebp
shl
lods
mov
data16
push
stos
cmp
and
int3
push
inc
daa
cld
aad
add
xchg
add
stc
inc
inc
fmul
xchg
mov
sub
xor
cmp
xchg
pop
mov
hlt
and
dec
mov
cli
ret
mov
icebp
sub
and
das
in
jnp
mov
lahf
std
inc
in
ja
fisttp
enter
jbe
movs
iret
pop
aad
aam
adc
xchg
sbb
or
in
jge
in
pop
ins
popf
pop
in
in
test
movs
and
mov
out
stc
cmp
mov
inc
mov
cmp
pushf
and
arpl
inc
inc
jns
inc
mov
rcl
sub
jbe
in
fld
shr
mov
enter
inc
cmp
shl
or
add
repnz
add
test
mov
push
mov
hlt
jecxz
stc
jmp
mov
arpl
js
jle
mov
in
cmp
scas
sbb
add
fisub
dec
mov
dec
pop
test
mov
and
in
cs
mov
pop
push
push
inc
add
movs
pop
shl
xchg
push
dec
les
or
mov
aaa
and
nop
aam
adc
sbb
mov
rol
jle
retf
adc
sub
mov
lahf
nop
adc
test
cs
shl
add
dec
nop
in
pop
sub
mov
push
leave
shr
retf
pop
and
enter
cmp
or
nop
push
and
dec
scas
in
pop
mov
lods
sbb
adc
ss
(bad)
cmp
iret
fimul
xor
add
mov
jno
sub
lock
sub
fnstenv
pop
mov
aad
pop
clc
and
cmc
dec
les
pusha
aaa
jge
js
mov
lahf
pop
jg
jp
movs
inc
or
mov
loop
fst
add
ficom
ins
jp
mov
mov
mov
mov
jbe
pop
mov
gs
pop
enter
fcom
sbb
or
bound
or
xchg
retf
outs
xchg
pop
xchg
inc
sbb
jb
ss
stos
pop
pop
stos
or
ds
(bad)
push
aad
es
jns
add
xchg
push
or
push
in
cdq
hlt
dec
pop
stos
push
into
sub
push
or
xor
pop
mov
je
pop
and
jecxz
inc
or
test
jb
add
adc
loope
inc
mov
mov
push
and
ret
jle
mov
xchg
js
pop
mov
mov
inc
sbb
cmp
push
add
sub
sbb
iret
loope
rcr
cmp
or
cs
jb
call
jg
mov
int3
add
in
es
ins
call
inc
add
ds
ret
mov
fistp
retf
dec
ss
out
outs
mov
mov
rcl
inc
(bad)
imul
adc
retf
cmp
xchg
out
xor
ds
popf
lods
dec
das
pop
sbb
xchg
jecxz
pop
fild
(bad)
xchg
jl
loop
loop
daa
cmp
adc
inc
retf
repnz
(bad)
(bad)
cmp
jle
ds
xchg
sub
sahf
cmp
std
imul
add
or
push
es
jl
jp
mov
xchg
aad
in
pushf
test
mov
stc
xchg
sub
add
xchg
dec
lahf
push
jp
xchg
test
push
push
int3
push
push
push
loop
outs
ds
popf
pop
cs
inc
push
jl
sbb
or
je
mov
ja
push
pusha
ret
jmp
dec
dec
adc
pop
sbb
push
mov
test
pop
inc
in
int3
mov
pop
leave
ret
fwait
mov
xchg
shl
pop
jbe
sub
mov
mov
movs
sbb
jmp
lidtd
inc
rcr
or
fild
int
jp
mov
inc
cmp
ds
and
shl
icebp
movs
inc
outs
adc
les
das
pop
fldenv
in
(bad)
push
repz
push
jp
and
pop
or
fcomp
or
xor
(bad)
xchg
jp
div
adc
into
into
inc
js
es
dec
shr
mov
fldenv
icebp
fmul
stc
adc
fbstp
je
sub
ins
push
repz
pop
cmp
clc
or
add
cmp
or
ror
cmp
sar
sbb
call
fstp
(bad)
hlt
pushf
sahf
not
int
xor
mov
sti
sbb
xchg
pop
cmp
adc
add
int
pusha
lock
push
cld
xor
loope
push
mov
aam
add
test
mov
or
add
or
xor
in
stos
jp
div
jo
scas
mov
je
mov
push
xchg
jle
loop
pop
fwait
mov
lahf
imul
fstp
shl
hlt
(bad)
iret
sub
xchg
cs
ror
sub
xor
xchg
jo
adc
sahf
mov
adc
repnz
adc
out
dec
pop
fxch
rcl
out
push
lahf
sbb
or
sub
inc
repz
sar
dec
int3
mov
push
scas
dec
loope
jp
aam
mov
inc
push
cmps
push
xor
icebp
xor
pop
dec
sbb
mov
adc
xchg
jne
xor
scas
cmp
pusha
push
mov
nop
popa
pop
test
mov
popa
stos
pusha
(bad)
mov
loop
cld
pop
rol
add
mov
sbb
out
mov
daa
(bad)
push
adc
xchg
jge
out
out
sar
xor
mov
js
int
cwde
test
add
pop
in
ss
jo
pusha
dec
test
sahf
xlat
add
sar
sbb
xor
jo
jmp
dec
mov
inc
mov
aad
xor
mov
mov
or
or
xor
pop
(bad)
mov
in
xlat
xor
jbe
push
scas
mov
daa
or
and
dec
lods
fild
fcmovbe
js
xchg
add
sub
ss
mov
adc
add
xlat
mov
jmp
push
jns
ret
mov
dec
movs
(bad)
fwait
cmp
pop
hlt
xchg
bound
sbb
(bad)
sar
je
xchg
mov
ret
leave
pop
jmp
fiadd
retf
sbb
out
dec
repz
mov
mov
pop
sub
sbb
sti
xchg
cld
ds
adc
xchg
scas
clc
add
cwde
add
jne
call
cmp
jecxz
jmp
jg
cli
int3
sub
cmp
mov
stos
jnp
push
loopne
lds
lahf
in
jne
mov
shl
pop
pop
jp
out
js
jno
sbb
cmp
lock
fwait
cmp
pop
sub
jo
mov
rol
pushf
push
or
push
std
mov
repnz
jno
test
push
aas
jns
cdq
adc
sbb
jge
push
cmc
xchg
cmp
adc
mov
stos
mov
adc
stc
fwait
jae
mov
sbb
pop
test
sub
bound
loop
fist
push
jg
fnstenv
jnp
int
(bad)
mov
repz
sbb
lods
les
mov
dec
div
push
pop
lea
lds
jl
lahf
ja
outs
sub
sub
(bad)
cmps
jnp
or
mov
cmp
xor
imul
sub
push
imul
or
gs
mov
push
mov
xor
xor
in
mov
sar
sbb
pop
int
sub
outs
fimul
dec
inc
inc
dec
stc
sbb
xor
lods
fadd
call
(bad)
fld
lods
xchg
or
mov
imul
or
jno
push
sub
ficom
cmp
nop
mov
sub
jge
addr16
push
add
mov
(bad)
jmp
fldcw
cwde
cmp
push
cmp
popa
shl
ret
mov
js
not
loopne
test
adc
leave
xor
(bad)
add
cld
and
xlat
fneni(8087
imul
retf
ja
sahf
scas
push
jle
dec
ficom
mov
adc
iret
sbb
aad
and
lods
movs
push
dec
(bad)
and
mov
jo
adc
lock
je
inc
xchg
mov
rol
adc
nop
jno
mov
test
adc
add
gs
xor
jno
pop
gs
fiadd
addps
jecxz
pslld
aad
mov
outs
fnstsw
sbb
ficom
and
push
mov
adc
jl
xchg
test
aaa
fs
mov
shr
in
lahf
aam
imul
in
mov
xor
xchg
jge
enter
ret
(bad)
push
mov
cmp
mov
icebp
shr
sub
xor
push
xor
scas
pop
xchg
jl
popa
into
inc
scas
cmps
push
call
ficomp
add
jnp
xor
mov
and
std
mov
cs
dec
push
lods
jge
aad
sub
adc
scas
jmp
add
mov
mul
scas
adc
jle
stos
loop
xchg
xchg
add
jns
nop
dec
jns
dec
popa
loope
pop
sbb
jne
cmp
push
popa
dec
mov
xor
lds
stc
mov
loopne
adc
dec
cmp
out
pop
lods
jmp
add
cmp
sbb
adc
into
mov
call
mov
xchg
(bad)
and
movs
lds
xor
and
sbb
ins
jge
mov
push
sti
cmp
adc
xchg
data16
mov
jmp
jmp
cs
push
push
dec
ins
inc
dec
aad
nop
jo
fs
lahf
pop
add
(bad)
mov
cmps
and
es
xor
xor
(bad)
fsubr
dec
add
ficom
ds
(bad)
mov
mov
push
fistp
leave
sub
and
inc
mov
std
mov
push
fisubr
inc
in
fdiv
(bad)
sar
ja
sahf
xchg
mov
sbb
shr
add
adc
bound
lea
inc
ins
xchg
daa
push
lods
mov
mov
xchg
jbe
ret
out
mov
sub
xchg
xor
jns
and
push
jno
dec
xchg
or
pop
(bad)
sar
mov
xchg
add
or
jne
mov
lock
adc
stc
fs
mov
(bad)
iret
in
push
mov
jmp
xchg
das
movs
xchg
lea
in
loope
sub
xchg
fist
jnp
cmps
leave
mov
xor
adc
add
jo
cmp
jmp
push
(bad)
cdq
out
addr16
das
dec
jl
push
pop
jle
adc
mov
outs
jnp
dec
push
xor
mov
gs
shl
popf
and
sbb
test
inc
nop
retf
push
and
sub
fs
ficom
jp
jmp
std
ret
xor
repz
bound
sub
in
mov
xor
cmp
addr16
les
std
fnstcw
mov
rol
pop
push
inc
lods
ins
and
add
lods
jns
mov
test
rcl
add
enter
sub
lahf
cli
test
mov
repnz
movs
and
jecxz
xchg
add
int3
popf
xchg
into
or
mov
loope
dec
mov
repnz
hlt
xchg
out
stc
aaa
popf
in
call
ss
mov
jmp
adc
push
mov
(bad)
sbb
dec
mov
movs
dec
jbe
(bad)
enter
xchg
enter
and
mov
sbb
jns
jne
hlt
fwait
call
cmp
(bad)
inc
loopne
or
jmp
mov
mov
mov
or
mov
pusha
ret
fisub
jae
inc
jno
inc
popf
sbb
icebp
ret
aam
loop
retf
add
fist
dec
mov
gs
adc
out
test
out
mov
sbb
mov
mov
mov
sub
lods
loopne
std
mov
out
movs
push
popf
out
cwde
xor
dec
push
mov
pop
inc
pop
popf
es
in
stc
sti
push
cmp
pusha
cdq
xor
outs
rcr
xchg
or
test
push
popf
and
inc
jnp
ror
dec
fstp
in
mov
dec
xor
xchg
xchg
lods
dec
out
push
adc
popf
out
out
loopne
xchg
xchg
icebp
call
call
sahf
sahf
dec
pop
push
dec
mov
inc
pop
mov
sbb
lds
inc
or
sub
stos
lea
jnp
dec
int
and
lock
frstor
dec
jle
fistp
push
lahf
mov
mov
sub
mul
xchg
push
ins
retf
sbb
(bad)
das
sub
xor
pop
int3
xor
outs
or
sub
jbe
lods
mov
push
xchg
jge
stc
xlat
push
xchg
outs
out
cmp
inc
aas
and
xchg
jmp
mov
push
cmc
adc
sti
ja
ret
out
and
repnz
rol
sbb
jp
xacquire
dec
jae
dec
and
xchg
leave
and
daa
int
jmp
mov
sbb
enter
rcr
out
call
leave
mov
and
and
dec
out
fimul
jmp
and
inc
pop
inc
adc
cmp
xor
mov
rcl
xor
jae
inc
dec
fild
add
push
rcl
(bad)
lock
stc
dec
and
sbb
sbb
push
retf
jnp
push
xchg
jmp
sbb
in
sbb
sub
mov
xor
xchg
sub
mov
mov
add
mov
jmp
ret
xchg
mov
push
sbb
mov
mov
sbb
in
es
inc
fs
xor
push
xchg
inc
mov
cmp
inc
ins
aad
pop
out
add
xor
push
inc
leave
adc
sub
fmul
std
sub
push
mov
scas
jp
pop
jecxz
jmp
sahf
xchg
and
push
sahf
pop
xor
jge
cmc
pop
mov
xchg
fdivr
pop
retf
scas
xchg
pop
in
outs
sub
loopne
loope
in
pop
vpbroadcastw
cmp
adc
mov
(bad)
not
jo
add
ja
dec
adc
add
pop
push
mov
inc
jb
mov
test
or
mov
jb
popa
das
mov
out
sub
inc
add
dec
popa
jnp
dec
push
repnz
mov
jle
push
xchg
xlat
test
cld
movs
ror
mov
lods
aaa
jo
ins
fwait
loopne
mov
popf
xor
dec
xor
pop
mov
xor
js
pop
movs
lods
imul
sahf
es
loop
jge
sar
loop
scas
jmp
xor
jge
sub
mov
mov
outs
or
mov
adc
add
(bad)
call
mov
cs
mov
pop
sub
test
sbb
call
and
in
mov
ftst
xor
not
mov
sbb
shl
movs
pushf
imul
fsub
gs
dec
mov
xchg
call
jmp
xor
inc
fiadd
fs
jb
sbb
(bad)
int
pop
movs
aas
outs
mov
pusha
(bad)
jmp
data16
inc
repz
into
adc
test
stc
mov
jp
fiadd
or
fstp
ins
add
jmp
jecxz
mov
das
sahf
outs
dec
cmps
push
pop
push
and
call
ficom
popf
or
fisub
cwde
push
or
jb
ss
int3
mov
scas
pop
loope
pusha
push
repz
cwde
sub
push
aad
sub
xor
push
pusha
adc
inc
mov
mov
hlt
pop
add
xchg
icebp
jp
add
xor
out
sub
add
or
dec
aaa
and
stc
gs
adc
jecxz
imul
or
mov
or
xchg
dec
bound
rdtsc
mov
push
jl
jb
add
sub
mov
fnsave
mov
pop
outs
movs
mov
sbb
cmp
stos
das
ins
mov
mov
push
push
ret
pop
add
jmp
out
repz
jp
jecxz
push
mov
dec
jns
and
mov
pop
xor
xchg
ss
sub
jnp
out
mov
adc
mov
enter
test
jp
cmc
pop
adc
(bad)
(bad)
popf
shl
and
iret
test
fwait
(bad)
ficomp
cmp
cld
imul
imul
mov
inc
mov
xor
mov
iret
jg
inc
sub
and
mov
add
xlat
out
out
(bad)
std
xor
adc
test
cmps
(bad)
in
xchg
sbb
jp
je
loope
add
xor
xor
jnp
push
ja
and
aad
scas
and
leave
lea
std
mov
shl
xor
push
js
push
ds
xor
(bad)
ja
push
mov
pop
and
cmp
rcr
mov
hlt
call
test
movs
aas
mov
dec
adc
(bad)
sbb
cmps
sub
repz
add
cmc
ins
retf
xchg
mov
pop
das
sub
sub
jae
imul
je
adc
adc
push
mov
mov
mov
out
out
frstor
popa
outs
dec
cs
ss
lds
push
mov
aas
inc
jb
popf
cwde
mov
or
cwde
outs
movs
xchg
cmp
(bad)
ss
lods
add
jne
xor
push
or
inc
mov
cmp
xchg
sti
fld
xchg
aas
clc
pushw
dec
lods
lods
ins
pop
nop
pop
inc
inc
xor
stc
xor
int
mov
xor
xor
cmp
push
add
mov
stc
test
mov
fdiv
sbb
and
sub
(bad)
pop
int3
fist
dec
mov
js
jbe
or
or
enter
jl
dec
pop
cmp
rcl
lods
int
xchg
inc
call
imul
cmp
pop
dec
or
xor
add
lds
lods
dec
push
ja
dec
in
jns
inc
ret
ins
jmp
mov
out
aaa
cmc
push
sbb
push
mov
and
push
sahf
shl
cmp
popf
and
mov
data16
dec
jecxz
pop
cmp
rol
mov
repnz
sbb
aam
xchg
cmp
lea
push
mov
pop
dec
mov
repz
icebp
cwde
test
int
sbb
lahf
out
xchg
adc
mov
or
fist
out
iret
scas
outs
push
cli
mov
shl
lahf
sub
xor
pop
dec
inc
mov
cmp
ja
(bad)
mov
clc
sbb
push
lock
in
pop
jns
xor
imul
jnp
out
xchg
sbb
cld
fcom
xchg
cli
test
and
push
pcmpeqw
mov
ret
sbb
std
mov
mov
ss
sub
dec
inc
fidivr
mov
leave
mov
rcl
xchg
jle
mov
cmps
cmp
adc
in
call
pop
das
iret
cmps
stos
mov
pop
out
jmp
dec
inc
jg
retf
popf
mov
ds
int3
xchg
loope
iret
cmp
mov
inc
mov
adc
sub
mov
adc
test
xor
aam
xchg
push
sub
inc
inc
inc
mov
dec
stc
int
xor
jnp
out
jno
icebp
mov
call
not
test
mov
add
(bad)
mov
mov
rcl
movs
xchg
popf
ret
popf
pop
jns
call
in
or
mov
jbe
cdq
clc
sti
add
add
int
(bad)
addr16
fist
in
mov
inc
jge
jmp
imul
mov
cld
mov
out
call
jle
mov
add
std
rol
inc
(bad)
pop
cmps
out
or
or
jl
inc
ins
out
xchg
jo
sub
cmp
lods
push
dec
pusha
js
xor
mov
cdq
das
push
mov
into
jmp
sub
out
pop
sub
mov
int
ins
in
retf
out
test
fstp
pop
cmps
outs
sbb
sub
sahf
dec
xchg
(bad)
inc
sbb
std
pop
mov
mov
sub
xor
or
call
cmp
mov
cld
jae
movs
in
fs
and
xor
repz
mov
shl
inc
sbb
retf
out
pop
je
fidivr
mov
in
cs
ins
popf
rcl
sbb
jns
inc
push
jge
out
cmp
sti
test
jne
add
sub
aas
les
adc
sub
test
or
dec
dec
sbb
sbb
mov
cmp
add
jb
ret
adc
sar
out
and
or
sahf
or
jle
mov
mov
jno
dec
fistp
stos
sbb
(bad)
(bad)
adc
scas
ja
out
add
xchg
mov
test
add
inc
lods
mov
and
mov
mov
mov
xchg
and
inc
sbb
outs
push
push
mov
in
movs
out
iret
mov
cmp
xchg
mov
packsswb
fcomp
jmp
xor
add
xor
or
adc
(bad)
jmp
cld
call
add
(bad)
jmp
mov
mov
pop
adc
loopne
(bad)
popa
pop
sti
lock
sahf
push
push
test
data16
mov
adc
pop
xchg
dec
inc
mov
imul
cmp
(bad)
aam
pop
ret
sub
mov
and
lea
mov
sub
ss
and
les
leave
outs
ror
add
data16
mov
push
popa
xor
cli
jne
mov
inc
dec
mov
ja
hlt
in
test
inc
aas
test
out
pop
xchg
repz
xlat
mov
xchg
pop
pop
push
jae
mov
xor
cwde
push
push
inc
adc
push
stos
mov
js
add
adc
add
mov
pushf
cmp
adc
outs
mov
sbb
mov
int
sub
pop
jg
movs
aad
mov
mov
add
lea
mov
mov
add
ficomp
gs
mov
jge
and
lods
dec
in
jne
pop
pop
das
jne
dec
xchg
(bad)
push
(bad)
nop
and
mov
mov
(bad)
push
daa
cmc
mov
loope
jmp
jle
lds
les
test
sbb
ss
pop
cs
lahf
int
or
int3
fld
stos
dec
adc
ins
loopne
inc
les
mov
push
sub
aaa
inc
leave
sub
outs
sub
ins
jne
je
xchg
jbe
ins
push
scas
(bad)
stos
mov
add
xchg
mov
and
shl
stos
push
push
cmp
push
test
loopne
lods
push
inc
ror
mov
je
nop
jle
pop
jnp
push
pop
jge
enter
push
add
mov
jmp
inc
je
stos
inc
or
test
clc
push
push
jb
and
addr16
pop
add
jecxz
idiv
(bad)
push
or
mov
sub
retf
lods
jp
(bad)
icebp
fild
add
mov
mov
call
push
aaa
aad
data16
pop
add
outs
inc
push
dec
jb
mov
jae
and
jmp
dec
mov
out
jns
js
arpl
adc
jo
mov
inc
mov
sbb
(bad)
mov
std
sub
lds
push
mov
cmp
and
push
jg
std
add
push
lods
bound
bound
bound
or
mov
fistp
push
jecxz
sbb
pusha
and
fdivr
add
call
dec
xchg
sub
xchg
into
jmp
or
inc
leave
ins
mov
dec
mov
test
retf
lods
test
push
inc
call
ins
mov
sub
out
arpl
xchg
xor
mov
sub
inc
out
jno
cs
arpl
jb
inc
mov
sub
push
enter
and
mov
push
enter
ins
lock
jle
call
xchg
mul
(bad)
mov
inc
mov
ja
pop
cmc
xor
nop
inc
and
adc
xlat
xchg
xchg
ficom
pop
clc
or
mov
fs
pop
dec
xor
cli
push
sub
mov
sbb
and
or
jae
dec
jb
(bad)
loopne
loope
call
lds
adc
mov
mov
cmp
sub
daa
retf
xchg
push
xlat
gs
xchg
cs
or
cmp
push
jmp
loop
add
lods
aas
loope
add
xlat
ret
retf
add
xor
pop
or
xchg
pop
xor
xchg
push
sbb
jecxz
loop
inc
mov
sub
and
lods
jl
xor
xchg
aas
adc
xchg
enter
mov
adc
mov
adc
jne
and
mov
cmps
mov
retf
pop
rcr
xlat
xchg
inc
xchg
loopne
mov
sbb
(bad)
int
sub
add
out
(bad)
cmp
lods
jb
inc
jmp
inc
xchg
jno
cmps
sbb
pushf
enter
mov
pusha
mov
add
retf
or
gs
icebp
shr
sbb
xchg
cs
rol
push
inc
jns
popf
mov
loope
add
add
add
js
cmp
sbb
xor
xchg
retf
adc
daa
(bad)
push
arpl
adc
pop
lahf
xchg
ins
clc
mov
add
aad
jae
dec
jnp
cmp
(bad)
mov
dec
pop
jmp
fild
sub
sub
cmp
das
xor
inc
adc
(bad)
or
and
icebp
inc
mov
mov
xor
ror
gs
jbe
sbb
mov
xlat
addr16
in
or
xchg
cmp
out
dec
sbb
stos
xor
pop
sti
popf
int3
sub
pop
outs
retf
sbb
mov
hlt
or
add
fistp
shl
mov
daa
jmp
xlat
jl
pop
jno
call
mov
outs
iret
xlat
in
or
push
test
adc
push
add
or
jb
and
cmp
fstp
sub
xor
dec
dec
retf
in
loop
jl
cmp
out
aaa
enter
xchg
and
ret
ror
repz
retf
fdivr
pushf
sub
pop
fld
cli
mov
jmp
cmp
aam
push
sbb
xor
xchg
push
push
in
leave
mov
cld
test
inc
es
lods
push
outs
push
mov
adc
mov
mov
outs
push
mov
stos
push
or
pop
das
xchg
jmp
cmp
jmp
fcomp
cmc
pop
imul
jp
adc
mov
jle
popf
lahf
fcmovnu
pushf
loop
push
cmp
xor
ins
shr
bound
pop
pop
xlat
jno
nop
sbb
xor
and
fidivr
push
sbb
xor
sbb
jo
fs
in
jge
sub
mov
test
jmp
scas
pop
jmp
sub
cs
lods
sbb
jbe
aaa
in
inc
out
add
aas
or
std
sub
nop
mov
sbb
dec
mov
sub
lea
dec
cmps
fld
adc
call
push
xor
pop
pop
sbb
scas
jnp
(bad)
mov
and
or
sbb
xchg
test
in
dec
iret
imul
es
xor
imul
loopne
xchg
jbe
mov
mov
retf
popf
call
or
dec
cmp
mov
inc
xlat
lea
and
ja
cld
xchg
fdivr
jp
adc
pop
xor
cli
cmps
test
pushf
add
adc
adc
cwde
les
inc
into
or
and
cmp
push
push
aad
(bad)
cmps
adc
and
xchg
retf
imul
ds
arpl
jne
retf
xor
mov
stc
test
fstp
pop
jle
mov
mov
div
pop
js
cld
mov
xor
cmps
add
movs
mov
or
and
stos
sbb
fidivr
fsub
scas
or
push
in
int3
dec
xor
aad
cwde
push
xchg
nop
test
xor
or
sub
fmul
sbb
mov
cli
iret
pop
and
dec
mov
add
adc
nop
lea
(bad)
cmp
shl
jl
jno
push
pusha
jecxz
in
add
mov
mov
push
std
mov
xchg
leave
pop
fwait
or
add
dec
scas
jno
pop
add
test
bnd
in
sbb
das
out
and
dec
xchg
mov
pushf
fiadd
in
xchg
jns
cmp
or
mov
adc
cmp
adc
shr
cmp
sbb
icebp
mov
ss
pop
pop
cmp
nop
cmp
ror
pushf
add
xchg
add
cmc
sbb
push
(bad)
sbb
push
pop
jne
(bad)
pop
pop
mov
mov
mov
retf
aam
pop
(bad)
add
stc
(bad)
rol
cli
add
idiv
jl
out
das
xchg
enter
(bad)
cmc
sti
mov
inc
jns
adc
jl
imul
das
push
leave
call
dec
test
clc
inc
pop
ds
movs
push
mov
add
dec
pop
mov
or
aas
daa
cli
fist
xchg
pop
not
xchg
lods
jno
inc
movs
mov
leave
shl
ret
loopne
mov
dec
in
lods
lea
arpl
dec
sbb
ins
call
cs
loopne
stc
lods
in
out
mov
sub
adc
add
sub
jns
outs
fdivr
mov
pop
pop
push
xchg
retf
sbb
retf
add
adc
mov
mov
in
pop
sbb
xchg
and
dec
or
shr
adc
push
add
dec
pusha
(bad)
xor
cmp
retf
cmp
mov
dec
(bad)
lock
push
cmc
into
mov
push
cmp
pop
jo
xor
not
cmp
mov
imul
aam
or
jp
sub
jl
aas
mov
aas
sub
fbstp
and
cwde
mov
rcl
in
push
outs
adc
push
test
jg
in
jns
mov
add
or
pop
cli
inc
jmp
mul
cmps
cwde
push
mov
pop
and
(bad)
pop
das
loopne
aas
mov
stc
scas
pop
pop
jnp
sub
rol
jge
in
jnp
jae
test
fstp
daa
mov
pop
outs
push
cmp
add
imul
stos
or
jle
fs
mov
aad
fwait
cdq
out
lea
mov
mov
xor
cmc
arpl
pusha
jb
ins
les
clc
cmp
cmp
or
jge
sbb
shl
jnp
aad
mov
ds
jecxz
jns
pop
or
mov
jbe
fld
scas
sbb
pusha
dec
add
sbb
out
stos
or
sbb
cmp
sbb
std
sub
inc
fsubr
rcl
push
int3
sbb
out
mov
sbb
or
arpl
retf
pushf
xor
adc
mov
sbb
ss
mov
and
mov
enter
sbb
(bad)
fs
neg
mov
retf
les
call
add
sahf
fistp
mov
add
dec
in
mov
dec
mov
pop
ds
push
mov
(bad)
std
xor
mov
(bad)
and
shl
mov
lds
iret
cmp
nop
xchg
push
test
int3
(bad)
mov
mov
add
test
(bad)
into
cmc
dec
leave
push
xor
xor
cld
mov
mov
and
(bad)
xchg
fcomp
aam
punpckhbw
pop
xor
jno
aaa
mov
lods
(bad)
fild
iret
push
data16
addr16
std
int
mov
mov
push
sahf
or
addr16
out
jno
mov
or
xchg
sub
mov
mov
cmps
xor
addr16
adc
push
aaa
push
pusha
aas
dec
dec
adc
in
cs
rol
inc
push
ds
xor
mov
inc
inc
cwde
push
fidivr
jne
xchg
mov
xor
sub
sub
pusha
les
add
cmp
mov
or
stc
daa
fldenv
pop
inc
test
pop
xchg
inc
and
sbb
or
xor
movs
inc
bound
jno
lahf
sbb
jmp
dec
daa
ins
adc
pop
clc
movs
(bad)
rol
push
lods
xchg
sub
or
add
ror
movs
inc
jl
mov
ja
and
lods
je
add
dec
xor
adc
call
inc
jmp
in
push
mov
sbb
call
jecxz
cli
icebp
int3
sub
pushf
cmp
inc
pop
fistp
aaa
pop
pop
mov
jmp
outs
cmp
pop
inc
int3
and
sar
cld
in
and
cwde
outs
xor
mov
in
mov
mov
imul
pusha
push
jae
fsubp
repz
data16
out
mov
int
or
cmps
(bad)
xchg
jae
retf
pusha
or
mov
mov
inc
mov
xchg
pop
fnstenv
dec
out
jle
adc
xor
mov
xchg
xor
test
jo
pop
ficomp
retf
mov
scas
mov
fcom
iret
je
lahf
push
repnz
push
aam
add
popa
sbb
or
sub
jbe
adc
mov
cmp
jmp
and
(bad)
in
inc
inc
out
cmp
mov
mov
sub
dec
sub
icebp
ret
mov
inc
xchg
or
push
pop
out
ins
jo
cmp
xchg
cli
jne
dec
xor
xor
call
and
dec
fidiv
mov
ds
cld
cwde
push
fmul
in
dec
xchg
adc
mov
cld
add
mov
shl
xchg
mov
inc
movs
xchg
xchg
mov
popa
mov
movs
out
dec
mov
xchg
pusha
into
sbb
cs
je
out
add
shl
pop
ror
sbb
(bad)
outs
mov
jns
mov
push
jle
shr
sbb
rcl
int3
mov
cmps
add
and
push
sbb
adc
repnz
pop
sub
sbb
mov
call
mul
jns
mov
pop
and
sbb
cmc
ds
inc
movs
dec
in
jmp
cli
ins
dec
pop
in
pop
or
pop
scas
lahf
pop
ins
out
div
add
mov
mov
or
dec
dec
xor
sub
sub
mov
test
and
sub
shl
ror
ror
cmp
dec
jae
call
mov
push
cmp
xchg
(bad)
mov
jecxz
mov
add
fmul
xchg
(bad)
mov
fld
mov
out
ins
cmp
pop
push
js
pop
push
jae
call
call
pushf
aas
or
mov
jl
fistp
lods
pop
xor
fisubr
loop
retf
int3
nop
sbb
rcr
enter
mov
xor
js
inc
xor
jne
icebp
xor
ja
shl
jmp
push
pop
retf
adc
push
sbb
push
or
inc
mov
cmp
cli
pop
xor
fcom
jbe
xchg
jmp
or
loop
sbb
inc
mov
ret
adc
xor
les
fcom
popf
es
loop
inc
(bad)
push
(bad)
jno
pop
inc
repz
jl
movs
push
add
add
pop
aad
jno
out
out
xchg
outs
inc
fwait
pop
pop
or
into
scas
(bad)
(bad)
jnp
cmp
push
aas
jmp
idiv
sub
dec
in
enter
loope
sub
add
hlt
lods
retf
jp
les
inc
movs
or
sbb
inc
xlat
call
das
lock
cmps
mov
pop
xchg
es
shr
add
stos
fldcw
mov
pushf
xchg
retf
pushf
and
mov
loope
(bad)
test
ja
sahf
cmp
nop
and
dec
mov
imul
pop
je
pop
(bad)
adc
(bad)
fdivr
xchg
out
fidiv
push
test
loopne
xchg
cs
mov
xlat
inc
jmp
jp
rol
push
arpl
xlat
xlat
cmps
lahf
loopne
fldcw
dec
mov
adc
inc
pop
call
pop
or
lea
out
jl
sub
mov
dec
into
sahf
dec
xor
cmp
xchg
jmp
sbb
xchg
call
repnz
outs
mov
cmc
inc
and
and
outs
xor
and
popa
je
sahf
pop
or
sbb
inc
and
popf
fld
js
mov
xor
fistp
dec
xchg
or
xchg
ins
jae
out
daa
push
push
js
inc
(bad)
dec
stos
and
push
fild
daa
sbb
sbb
add
xor
xchg
iret
icebp
sahf
maskmovq
div
icebp
fcomp
enter
mov
mov
scas
xor
and
mov
int
add
repz
inc
call
test
jmp
movs
cmc
addr16
xchg
sub
sub
mov
cmp
mov
xor
jmp
stos
in
xor
not
xchg
ds
ins
sbb
addr16
cld
sub
imul
call
mov
push
mov
test
aad
cli
xor
adc
or
or
xlat
loope
loop
lock
fcomp
cs
sub
sbb
push
lds
out
dec
pop
leave
adc
mov
js
cli
xchg
div
pop
cmp
inc
fiadd
jl
adc
loop
xchg
jnp
aaa
sub
cmps
cmp
es
loop
or
fwait
pushf
pop
ror
imul
inc
push
pop
sub
or
enter
mov
lods
inc
jge
push
es
inc
adc
(bad)
nop
ins
adc
aaa
dec
stos
adc
jmp
imul
daa
lods
retf
sbb
mov
xchg
popa
ret
inc
mov
sub
retf
jnp
or
fistp
sub
call
mov
mov
inc
mov
inc
sub
jg
(bad)
ja
test
repz
(bad)
mov
das
add
test
pushf
jmp
xor
dec
data16
push
into
test
hlt
mov
inc
repnz
add
jl
adc
push
push
mov
ins
jae
test
es
cmp
mov
pop
inc
dec
or
into
popa
jmp
jl
fsubr
sub
(bad)
jne
clc
push
or
pop
pushf
and
(bad)
mov
fistp
enter
cmps
out
cmp
(bad)
stc
and
aas
mov
call
mov
jmp
bnd
push
mov
add
push
push
sub
gs
xor
pushf
popf
pop
jl
and
xor
push
inc
mov
jmp
test
iret
cmp
ret
inc
sub
mov
pushf
xlat
out
scas
daa
fbld
jnp
xchg
xor
xor
push
popa
jmp
out
test
repz
or
gs
add
and
xor
enter
ins
or
mov
push
xchg
ficom
and
adc
test
pushf
adc
sub
jnp
push
(bad)
shl
inc
xchg
out
jbe
fs
call
movs
pushf
fucomip
mov
mov
rcl
(bad)
cmp
sub
xchg
loop
push
pop
push
add
outs
push
and
in
or
enter
lock
sub
push
(bad)
adc
aas
inc
lock
aaa
outs
pop
jnp
stos
pop
into
or
inc
pop
sub
jle
push
lods
rcl
pop
shr
imul
js
cld
xchg
rcr
mov
dec
addr16
fimul
stos
dec
pop
inc
inc
test
movs
fild
xchg
xor
lds
xor
fs
pop
call
(bad)
gs
test
or
add
inc
aaa
add
and
cmp
lea
mov
(bad)
push
cmp
test
(bad)
jecxz
nop
xchg
mov
movs
test
enter
sahf
sbb
dec
jmp
cmp
shr
dec
mov
push
bound
xor
adc
adc
aaa
sub
dec
sub
xor
cmps
loopne
dec
repnz
loop
std
test
mov
sbb
jbe
and
leave
mov
push
mov
jecxz
retf
sbb
adc
ror
push
rcr
out
push
ss
in
xchg
cmp
mov
sbb
inc
dec
jb
pop
popf
fs
push
aad
ds
enter
pop
sti
dec
cmc
arpl
fldenv
test
or
pop
pop
inc
sub
jo
lahf
xchg
and
push
fsubr
sahf
sbb
bound
outs
push
push
xor
adc
sub
(bad)
add
jmp
imul
outs
or
imul
adc
xlat
add
mov
sub
push
scas
sbb
pop
pop
or
ins
cs
sub
scas
bnd
and
movs
dec
xchg
cmp
xchg
xchg
stos
(bad)
pop
cmp
ror
or
imul
inc
fucomip
bound
lods
out
ja
dec
outs
ins
add
pop
dec
enter
(bad)
jg
cmp
(bad)
sub
xchg
push
or
xchg
mov
sub
inc
cdq
cli
lods
(bad)
add
aam
xchg
dec
jl
popf
and
stos
data16
(bad)
std
test
sbb
xor
inc
adc
in
das
into
push
movs
adc
test
pop
add
push
jp
repnz
sbb
(bad)
xlat
cmp
mov
std
lods
out
xchg
cwde
in
xor
or
fist
sbb
(bad)
and
inc
loop
out
dec
mov
xor
xchg
xchg
es
mov
push
sbb
into
adc
imul
xor
scas
aas
push
jae
xchg
add
lods
sahf
and
mov
dec
enter
mov
gs
loope
pop
retf
xchg
sahf
scas
mov
xchg
daa
jbe
push
mov
dec
xchg
cld
adc
pop
lds
pop
shr
or
inc
repnz
call
sbb
add
push
ret
(bad)
cmp
and
in
mov
and
inc
das
bound
popa
add
je
daa
gs
adc
inc
or
mov
cld
cmps
or
into
xchg
nop
or
fadd
dec
fstp
das
imul
lods
push
cmp
or
xchg
rcl
jg
repz
add
and
imul
jle
retf
cmps
mov
aam
push
pop
fisubr
std
stos
sub
iret
shl
or
jl
cs
and
add
(bad)
cdq
push
push
add
dec
inc
(bad)
dec
or
sub
inc
(bad)
jmp
mov
(bad)
jb
arpl
push
fnsave
test
push
sqrtps
adc
std
xlat
(bad)
call
mov
jns
or
mov
xchg
(bad)
leave
mov
inc
popa
mov
rcr
mov
dec
in
(bad)
dec
and
jecxz
pop
mov
mov
je
dec
sub
sub
idiv
dec
jp
adc
retf
push
sbb
jno
push
mov
push
dec
pop
dec
pop
(bad)
cmc
sbb
jns
xchg
mov
bound
test
aas
pop
je
dec
push
out
jo
scas
push
sbb
lea
hlt
xor
ja
iret
les
dec
lahf
and
pop
loopne
shl
xchg
fwait
jp
adc
xor
lock
pop
sahf
lds
pop
push
xor
test
iret
mov
pop
sti
mov
aaa
add
idiv
dec
stc
arpl
or
push
(bad)
xchg
les
mov
cmp
mov
test
pop
aam
int3
cmp
mov
loop
and
js
cmp
cmp
sub
ds
aaa
std
inc
add
or
and
mov
iret
repnz
xor
pop
adc
lea
lds
sub
sub
mov
retf
push
test
aad
fbld
xor
jns
mov
xchg
int
in
dec
sbb
ins
fcmovb
out
or
adc
jmp
popa
xchg
xlat
pop
and
test
xor
sub
pop
mov
out
dec
cmp
xor
ins
imul
popa
adc
ret
or
mov
cmp
outs
mov
add
mov
jecxz
add
lds
sar
mov
outs
ds
pop
xchg
test
fimul
mov
mov
adc
jmp
sub
adc
mov
mov
ror
and
shl
rol
mov
mov
jbe
dec
test
dec
js
cmp
fiadd
push
dec
shl
in
jge
mov
jle
je
ds
cmp
clc
outs
dec
maskmovq
neg
push
in
cli
outs
(bad)
xchg
push
mov
push
mov
adc
adc
ja
mov
in
mov
movs
pop
lahf
ss
aad
push
cli
jne
call
popf
xor
cmc
arpl
sub
sbb
dec
rol
inc
imul
mov
int3
jmp
ins
shl
mov
cmc
sbb
mov
frstor
jno
(bad)
jo
mov
iret
clc
shr
data16
xchg
addr16
push
lods
mov
shl
test
jno
jp
loopne
aaa
push
loopne
push
sbb
rcr
mov
and
stc
push
pop
leave
retf
cmp
xchg
outs
ret
add
rcr
hlt
cld
cmp
pop
mov
test
jp
leave
les
lock
and
sbb
scas
sub
ficom
inc
imul
fldenv
aaa
ds
jns
fld1
sbb
jg
xchg
mov
(bad)
jecxz
and
imul
push
adc
dec
cmps
xor
mov
sbb
jb
push
pushf
jno
dec
push
jl
int
fild
ins
sub
mov
mov
lods
sar
sti
mov
sbb
jp
jne
add
mov
pop
in
imul
iret
ds
daa
jo
xchg
fs
hlt
retf
sar
xchg
int3
dec
dec
push
jb
mov
push
mov
jl
loopne
retf
retf
jbe
mov
or
call
retf
dec
lahf
jnp
inc
add
jecxz
shl
inc
lods
cmp
add
sbb
fwait
or
push
test
sub
mov
cmp
mov
cmp
mov
idiv
ret
shl
jns
das
lock
neg
mov
repnz
cs
pushf
repz
gs
out
push
aam
jb
inc
jae
mov
ja
xchg
clc
dec
mov
jle
inc
xor
and
and
test
pushf
test
icebp
jno
inc
jg
jbe
jmp
adc
cmp
(bad)
mov
retf
std
xchg
mov
enter
ins
imul
std
push
(bad)
fldcw
lds
add
and
stos
or
idiv
rcr
xor
nop
mov
(bad)
xor
sbb
and
cmp
sub
or
xor
jnp
repnz
leave
inc
xchg
jl
dec
ds
sub
ds
cld
outs
loopne
es
cmp
mov
xchg
leave
mov
fist
push
xchg
mov
into
and
pop
mov
(bad)
pop
jmp
or
mov
jnp
fs
(bad)
in
jne
push
sbb
call
lods
addr16
xchg
lahf
in
cmp
jae
xchg
rol
fwait
or
or
fdiv
(bad)
mov
shr
les
mov
mov
jp
cli
pushf
sbb
push
ret
mov
xchg
repnz
ja
les
stos
xchg
ficomp
cdq
pop
div
ud0
ret
mov
add
xor
xchg
ds
lods
scas
lahf
call
push
inc
mov
push
loopne
lock
iret
test
push
add
aas
sbb
push
mov
(bad)
aad
outs
ds
add
in
ins
mov
pop
jg
jmp
mov
int
js
ja
lods
loop
outs
and
and
and
xchg
cmp
fs
nop
ds
test
fdiv
loope
outs
test
jmp
fistp
shr
pop
aas
mov
dec
ja
fisttp
cmp
dec
rol
(bad)
mov
mov
mov
jmp
stc
push
ret
jns
mov
mov
push
(bad)
hlt
(bad)
or
(bad)
mov
mov
pop
(bad)
fisubr
mov
shl
dec
add
cmp
sbb
xor
test
mov
add
mov
xchg
pushf
std
mov
adc
pop
in
sub
or
mov
pop
push
sbb
js
or
xlat
test
xor
xchg
sti
outs
and
xor
pop
mov
retf
sbb
(bad)
mov
dec
sbb
out
pop
aad
cmp
jmp
lock
lds
arpl
les
dec
clc
int
jmp
mov
push
sbb
inc
sub
retf
rcl
push
fiadd
pop
retf
sar
inc
test
(bad)
popa
lds
test
inc
aaa
int
and
aam
clc
cmp
iret
dec
mov
cs
scas
jmp
inc
adc
dec
sbb
ss
sbb
dec
ret
clc
jbe
hlt
mov
fadd
mov
cmovl
pop
sbb
sbb
and
clc
jecxz
mov
jns
or
in
fcomp
mov
imul
into
dec
ja
icebp
sub
ret
push
(bad)
scas
mov
(bad)
sub
jp
cmp
mov
sti
jnp
xchg
cmp
imul
lock
dec
cs
ss
test
in
mov
jg
ins
mov
into
lods
nop
out
ja
mov
mov
jle
jmp
inc
cmp
int3
cmp
fbld
xchg
call
sbb
dec
ds
shr
mov
xchg
movs
pop
jl
sub
push
and
scas
int3
aam
out
cmps
scas
xchg
hlt
out
stc
jnp
cdq
sub
test
retf
mov
call
rcl
mov
mov
xchg
retf
pop
js
add
pop
test
inc
fsub
adc
sub
mov
sub
or
and
xor
mov
sub
sahf
sbb
adc
inc
lahf
mov
fdivr
popf
mov
dec
jmp
test
xor
lock
fmul
imul
dec
push
mov
mov
cmp
cld
daa
and
js
dec
mov
jecxz
jno
jg
cdq
cmp
shl
imul
icebp
inc
jl
outs
idiv
popf
jl
das
rol
jno
movs
mul
lock
outs
push
pop
sbb
in
pop
sbb
adc
(bad)
inc
scas
stos
icebp
dec
mov
(bad)
loope
xor
mov
movs
in
int
push
sbb
fcomp
clc
gs
retf
cli
cmps
shl
push
iret
test
ja
imul
shl
mov
inc
mov
ja
push
aaa
sbb
sbb
(bad)
sbb
loop
mov
retf
stc
mov
rcr
lods
adc
test
jo
cdq
loope
repz
sbb
sub
mov
push
push
cld
bound
cdq
mov
jge
dec
mov
adc
adc
cmp
sub
adc
outs
adc
cmp
xor
in
adc
add
movs
and
push
mov
outs
cmp
xchg
sub
add
and
lea
adc
jne
in
lahf
rcl
jp
popa
repnz
mov
cdq
std
push
mov
dec
mov
stc
(bad)
pop
leave
iret
bound
pushf
(bad)
(bad)
out
adc
push
push
xor
loop
mov
or
jmp
scas
repnz
leave
imul
mov
xor
ret
inc
add
cli
sar
in
addr16
retf
mov
cmp
daa
js
mov
sub
inc
mov
or
pop
aaa
lock
mov
push
mov
jns
data16
std
add
pop
mov
dec
stos
retf
mov
dec
fmulp
scas
cdq
stos
pop
xor
gs
jmp
cld
mov
popa
sub
(bad)
mov
mov
popa
sbb
movs
slwpcb
popf
dec
push
fadd
cmp
pop
dec
dec
pop
retf
xchg
and
or
pop
adc
pusha
adc
cmc
and
jns
dec
jnp
add
pop
push
scas
lods
repz
or
mov
outs
popf
test
lahf
stos
add
mov
arpl
mov
xchg
mov
push
adc
outs
shl
mov
in
clc
jne
stos
int3
fs
(bad)
pop
fimul
scas
push
dec
mov
fisttp
(bad)
ins
jmp
inc
jmp
shr
int3
jb
clc
in
cmc
add
fs
ror
in
in
sub
push
fimul
adc
sti
imul
nop
dec
cmp
mov
inc
mov
jge
imul
ins
mov
or
or
jmp
ds
pop
sub
rol
pop
aas
add
push
fadd
sub
inc
js
inc
dec
push
and
sti
in
mov
or
sbb
daa
jbe
aam
scas
test
push
jmp
sbb
in
rol
ds
adc
retf
jae
push
pop
cwde
lahf
mov
mov
adc
inc
sahf
xor
cwde
cmp
enter
mov
ds
xor
push
repnz
xchg
fadd
adc
fist
pop
clc
dec
fisub
add
and
sbb
xchg
lock
push
mov
shl
dec
(bad)
xor
lds
xor
icebp
stos
mov
jp
pop
dec
mov
sub
or
int
jae
repz
(bad)
jno
or
rol
rol
mov
cmp
cld
popa
sbb
or
fstp
mov
nop
pop
enter
jp
push
aam
mov
mov
sbb
adc
aam
push
lods
das
inc
je
push
jae
adc
shl
sub
push
push
push
sub
call
popf
int
scas
stos
(bad)
cmp
xchg
in
(bad)
out
cmp
sbb
pop
xor
pusha
stos
mov
gs
fld
dec
push
xchg
xchg
mov
(bad)
cdq
dec
leave
mov
(bad)
std
mov
inc
pusha
push
cmps
mov
enter
in
inc
ss
inc
inc
mov
rol
cmp
in
aas
fisub
xchg
sub
or
pushf
movs
aam
sub
js
or
pop
adc
in
fsubr
outs
inc
fsincos
pop
jle
out
retf
mov
es
lods
in
mov
xor
or
xor
pop
cwde
or
sbb
lahf
ins
add
jo
aaa
xrstors
gs
cmp
(bad)
adc
out
cmp
into
lds
push
pop
adc
bound
adc
dec
int
or
das
std
sub
ret
adc
enter
mul
pop
or
inc
ret
in
ret
(bad)
push
stos
push
mov
test
or
hlt
inc
mov
push
sub
cmps
bnd
lods
pop
lds
mov
mov
retf
gs
sbb
fcom
dec
add
mov
xchg
pop
(bad)
cdq
xor
cmp
adc
pop
(bad)
or
(bad)
xor
jmp
enter
xor
mov
jmp
sub
adc
sub
repz
je
jo
setle
lods
mov
stc
xor
js
in
ror
(bad)
rcr
push
repnz
cmps
or
mov
add
lods
add
fst
popf
xor
neg
scas
stos
mov
or
adc
cmp
xor
aam
mov
sbb
fwait
xor
mov
lods
jp
mov
into
stos
ret
movs
(bad)
js
sbb
mov
add
mov
lds
add
xlat
or
pushf
lea
jmp
pop
cmp
in
test
adc
(bad)
cld
mov
fs
leave
stc
test
jge
cmp
or
xor
jae
mov
ja
and
pop
retf
pushf
pop
jl
imul
popa
pushf
xchg
stos
push
daa
inc
inc
jne
(bad)
lock
call
sbb
addr16
enter
into
popa
sub
dec
dec
sbb
cmp
shl
jecxz
mov
adc
fnstsw
stos
cli
xor
test
shr
pop
push
pop
fwait
sub
push
dec
je
adc
hlt
pop
out
pop
mov
ja
sbb
ins
popf
dec
sub
or
add
sub
cmps
pusha
mov
jnp
cmc
js
dec
pop
mov
rol
dec
jae
scas
in
inc
xor
jns
push
push
pop
cld
jg
(bad)
sub
inc
mov
or
pop
mov
adc
pushf
push
and
mov
sar
fwait
(bad)
int3
out
jle
mov
ds
dec
pop
pop
adc
je
aas
mov
fsub
leave
adc
xchg
movs
jecxz
scas
ret
jl
xor
xor
out
sub
rol
fst
clc
mov
jge
call
ret
clc
aad
jecxz
jmp
push
inc
pop
imul
clc
es
loope
xchg
adc
fst
mov
sub
int3
adc
inc
popa
mov
mov
xor
dec
(bad)
push
sbb
or
enter
pop
mov
or
inc
inc
push
jle
jp
mov
clc
push
and
push
add
or
in
sbb
fidivr
inc
int
push
dec
push
pusha
jmp
pop
mov
mov
pop
dec
jb
pushf
mov
test
mov
add
jp
add
out
or
fdiv
scas
or
bound
mov
in
das
add
jge
dec
add
lea
dec
fidiv
mov
bound
add
jno
pop
or
push
mov
out
scas
movs
shl
or
loope
lods
sbb
inc
pop
int
hlt
pop
jge
mov
push
sti
enter
add
mov
test
fwait
pop
jmp
mov
rcl
add
pop
loopne
sub
(bad)
leave
hlt
or
push
inc
push
mov
arpl
adc
rcl
cmp
push
sub
into
jmp
mov
popa
loopne
inc
xchg
ret
push
repz
mov
loop
mov
mov
idiv
push
(bad)
jae
or
es
enter
pop
xchg
dec
mov
jp
int3
mov
jo
xchg
add
xchg
xor
stc
cmp
push
mov
jbe
aad
sub
gs
ss
or
mov
loop
mov
add
arpl
jl
inc
jmp
push
inc
sbb
fstp
in
add
jmp
pop
test
mov
xchg
push
out
pop
ss
mov
mov
mov
retf
or
shl
dec
xor
push
scas
xchg
das
fnstcw
cmps
or
cli
(bad)
pop
ja
sbb
xchg
leave
pop
out
ds
out
rol
int
montmul
cmps
xchg
add
or
pushf
xchg
dec
mov
cmp
js
(bad)
(bad)
rsm
pop
pop
push
jg
and
pop
add
imul
xlat
rcr
adc
fiadd
push
or
cmc
jmp
call
push
shl
xchg
mov
push
enter
mov
(bad)
mov
daa
mov
inc
mov
clc
stc
fs
mov
add
adc
das
popf
xlat
pop
and
ret
mov
retf
mov
push
test
or
popf
xor
lds
clc
mov
mov
inc
(bad)
movs
sub
pusha
push
sub
adc
cmp
movs
jmp
icebp
pushf
sbb
pushf
scas
xchg
cmp
cmc
daa
mov
cwde
cmps
fst
xchg
mov
adc
adc
outs
jl
pop
std
imul
rol
xor
ins
push
mov
pop
xlat
and
or
sbb
sbb
mov
mov
adc
and
in
cwde
xchg
aaa
mov
cmps
mov
ret
mov
jb
pushf
inc
out
retf
stc
lea
(bad)
mov
pop
out
mov
cmc
jecxz
jl
or
sbb
push
xor
sbb
popa
cmc
mov
push
ds
cmps
mov
dec
mov
sub
jle
icebp
push
sub
iret
test
loope
fcomp
(bad)
icebp
out
jae
rcl
inc
call
jo
xlat
inc
cli
call
mov
mov
inc
out
push
mov
xchg
jbe
lahf
mov
mov
adc
dec
sub
cmp
inc
lahf
cmp
mov
cld
push
fs
scas
shr
mov
hlt
lods
add
rcl
sub
add
xlat
sub
pop
test
loope
fwait
int
in
jl
(bad)
in
push
dec
inc
bound
dec
movs
xor
pop
loope
fs
sub
sahf
scas
pop
fnstcw
cs
mov
fsubr
cmp
arpl
mov
xchg
adc
mov
inc
shr
lea
rcr
jp
movs
dec
jne
jne
movs
mov
push
jb
xor
adc
or
lds
xchg
mov
pusha
inc
push
jns
inc
ficomp
shr
add
out
push
xor
into
xchg
push
jmp
sbb
and
mov
leave
int3
mov
sub
mov
in
and
mov
push
scas
jo
cwde
cdq
fild
push
test
add
mov
add
nop
in
or
fcomp
adc
arpl
mov
mov
fs
(bad)
inc
sbb
push
add
outs
dec
jle
inc
xor
jb
out
sub
ficomp
outs
imul
movs
jp
outs
mov
xor
inc
repz
pop
push
rcl
scas
push
movs
stos
xor
inc
adc
xchg
pop
shr
add
inc
(bad)
sbb
push
in
sbb
mov
add
jle
cs
mov
xor
add
sub
nop
xor
or
jnp
jmp
nop
stos
or
aam
into
mov
sub
push
dec
leave
mov
push
xchg
pop
cmp
inc
repz
mov
push
(bad)
jae
adc
sbb
and
mov
cwde
push
pop
test
mov
(bad)
cmps
iret
std
fsub
sbb
stc
push
aaa
pop
dec
pop
sbb
sbb
adc
movs
fstp
aaa
and
pop
ins
ror
xchg
pop
stos
std
mov
mov
outs
addr16
shl
arpl
cmps
(bad)
sahf
sub
xchg
fldcw
rcl
lahf
pop
aam
aad
call
push
push
mov
sbb
adc
adc
in
adc
sbb
push
push
mov
add
adc
pop
adc
xchg
stos
inc
jmp
stos
fnstcw
sub
jmp
rol
jl
cmp
jne
pop
scas
stos
inc
xchg
mov
xchg
or
or
or
push
fld
int3
add
fimul
sub
push
rol
add
lock
lahf
es
mov
adc
jmp
xor
xchg
mov
sub
xchg
push
neg
imul
fld
add
mov
std
fucomi
(bad)
loope
fmul
add
jo
and
add
xlat
jge
test
pop
jg
dec
or
add
pop
lds
out
fidiv
(bad)
cmp
pushf
pop
ss
inc
stos
push
les
movs
sahf
jmp
inc
cli
in
and
sub
cmps
pop
mov
fsubr
daa
add
shr
movs
js
rcl
pop
dec
fst
push
(bad)
retf
inc
out
xchg
push
ret
mov
fsubr
shl
in
test
and
push
inc
sub
dec
les
call
push
cmp
call
sbb
xchg
add
retf
out
call
out
push
add
sbb
xor
mov
mov
not
sbb
imul
bound
xchg
xor
popf
hlt
mov
hlt
pop
mov
pop
jp
sbb
sbb
sub
push
arpl
and
add
outs
loop
js
ss
leave
jmp
ins
mov
xchg
add
or
jne
push
es
inc
inc
gs
test
or
jge
clc
jnp
mov
ja
popa
pop
loop
imul
push
xrelease
popf
mov
mov
and
shr
out
jns
into
sub
daa
cld
pop
sbb
cli
(bad)
out
add
sahf
repz
push
aad
bound
sbb
fdivr
inc
ror
leave
int3
pop
jl
jo
adc
fwait
call
dec
cmp
dec
push
jns
lahf
cwde
xor
sub
jge
dec
xchg
ins
(bad)
shr
fsub
loope
or
lock
pop
mov
mov
xchg
mov
retf
clc
test
and
pop
sbb
mov
iret
jne
xor
jns
add
mov
pop
ret
and
cwde
pop
in
adc
xor
xchg
jl
xchg
xchg
or
inc
and
rcr
sub
mov
pop
ja
in
ins
jmp
cli
mov
(bad)
pop
ret
add
adc
jnp
int3
jp
sub
mov
and
inc
into
icebp
sub
scas
push
mov
fnsave
adc
dec
mov
ja
inc
adc
xor
jno
cld
lds
adc
mov
fimul
jmp
outs
mov
fcomp
mov
popf
(bad)
pop
ds
sahf
cmp
mov
or
push
cmp
xor
enter
add
add
neg
or
push
ins
jb
cmp
xchg
ror
(bad)
movs
test
dec
popf
inc
not
mov
inc
mov
mov
jge
jl
adc
cld
or
arpl
cmps
mov
dec
out
pop
sub
mov
dec
in
retf
mov
inc
cmp
and
xor
fidiv
gs
mov
icebp
or
into
rcr
xor
mov
jmp
adc
jbe
leave
pop
sbb
ja
inc
mov
dec
lds
cmc
in
cmp
xor
mov
mov
jns
adc
sub
leave
sbb
scas
pop
enter
add
add
sbb
icebp
xor
add
add
loop
or
clc
dec
test
mov
xor
jmp
or
movs
cdq
rcr
neg
mov
cmps
mov
ins
push
lods
mov
inc
int3
pop
sbb
inc
pop
mov
add
clc
fidiv
xchg
or
loope
jbe
call
call
retf
test
or
add
mov
mov
xor
jg
test
retf
lds
adc
repnz
ret
pop
push
jo
shl
or
lods
(bad)
sbb
clc
xchg
cdq
js
mov
aaa
call
(bad)
adc
mov
jle
inc
dec
sub
(bad)
and
stos
test
jb
pushf
repnz
add
int
ds
jge
ror
ss
and
adc
psubusb
mov
inc
sub
adc
fwait
pop
jg
mov
in
dec
fdivp
adc
int3
mov
cld
mov
cli
cmp
outs
mov
sti
pop
int3
cmp
clc
pop
pop
movs
ds
aam
sub
xor
or
xchg
clc
sahf
adc
mov
iret
in
clc
sar
sbb
push
lock
arpl
das
or
xchg
fdiv
cmp
jno
pop
leave
ret
mov
jmp
sbb
push
je
or
sbb
xchg
push
mov
add
jp
call
scas
or
jg
(bad)
sub
out
sub
(bad)
and
fdiv
and
dec
cmp
dec
mov
pop
mov
shl
xor
test
mov
mov
fisttp
(bad)
bound
mov
dec
or
loopne
add
inc
add
addr16
in
and
lea
out
retf
(bad)
lahf
fstp
inc
mov
outs
dec
jge
sbb
and
mov
leave
ja
test
push
cmps
jg
retf
ins
xor
out
mov
rol
push
inc
call
ins
jg
(bad)
mov
fs
add
call
cmp
add
js
cmp
jb
adc
sti
movs
sbb
mov
add
repnz
jno
cmc
loope
push
add
push
and
fcomip
sti
in
push
dec
cmp
xchg
pop
jb
jo
int3
or
add
jne
xchg
ins
int3
repz
fwait
inc
cmps
pop
jns
jne
and
pop
jne
pop
mov
js
pop
sahf
inc
push
test
cld
mov
inc
popf
mov
mov
sbb
cmp
cmps
loop
jae
xchg
outs
fild
fcomp
scas
outs
call
hlt
or
mov
cwde
fdiv
movs
retf
mov
add
ficomp
sbb
cmp
sbb
add
mul
pop
jne
cmp
cli
push
(bad)
cmp
push
jae
imul
xchg
loop
arpl
call
in
mov
pop
sbb
leave
addr16
rol
and
or
pop
cdq
je
push
pop
(bad)
cmc
dec
jnp
lods
je
xor
jmp
aas
call
out
nop
lds
shl
int3
dec
adc
repz
sub
inc
daa
jo
xchg
mov
mov
fisub
test
mov
ficom
or
and
jno
aam
test
ds
sahf
loope
outs
and
push
inc
mov
pslld
pop
xchg
gs
mov
mov
bound
mov
dec
sbb
add
push
jno
push
dec
fsubr
cmp
push
fidiv
movs
and
jp
push
and
pop
and
fiadd
sbb
cmp
cld
pop
xchg
jb
mov
rcr
int3
mov
sbb
mov
movs
je
xor
sbb
jbe
icebp
adc
(bad)
add
jl
shl
outs
retf
sub
mov
cs
or
cmp
out
out
sub
retf
sbb
mov
in
jge
sub
mov
mov
mov
jne
cwde
push
scas
js
in
jl
jge
and
dec
mov
push
jle
out
in
int3
into
bound
jl
adc
lods
adc
adc
ret
in
cmp
lods
cmp
fwait
cwde
in
jo
bnd
(bad)
pop
ror
sub
scas
xor
cmp
and
ret
pop
sahf
xor
xor
out
shl
das
out
sub
cmp
bound
mov
shl
out
push
sbb
fld
mov
inc
lods
test
adc
xor
nop
fcmovnu
mov
mov
dec
loope
div
push
mov
and
sbb
xor
stos
jg
cli
mov
dec
fs
adc
int3
dec
pop
(bad)
adc
inc
jp
(bad)
xchg
sub
icebp
dec
xchg
xlat
loopne
ret
(bad)
es
adc
enter
mov
les
je
(bad)
fcmovnu
(bad)
sub
loop
xchg
jp
jp
sub
sub
inc
lock
pushf
sub
sbb
pusha
fisttp
push
out
push
sbb
push
and
js
int
js
loopne
mov
push
mov
mov
ss
xlat
test
and
(bad)
jno
mov
fadd
inc
fisttp
jbe
sub
mov
add
ss
pop
mov
xchg
jb
xchg
xchg
push
or
cmp
mov
sub
xchg
popf
and
add
xchg
jbe
inc
pop
cmp
inc
and
test
jmp
pop
test
or
xchg
and
pop
jno
loop
sbb
cmps
push
loop
dec
jecxz
(bad)
xchg
push
aaa
cmc
rol
leave
in
mov
rcr
aam
sbb
inc
shr
push
stos
cmp
or
mov
fs
jno
inc
dec
div
scas
jbe
inc
cmps
(bad)
mov
mov
adc
les
dec
leave
neg
push
pop
sbb
pop
xchg
sti
loop
pop
stos
and
ins
push
paddusb
cmp
push
cld
rcr
push
movs
inc
js
push
loopne
inc
mov
jmp
xchg
aas
popf
sub
adc
push
pop
js
dec
mov
or
test
cmp
push
sahf
test
ins
dec
not
jmp
call
push
mov
repz
jg
jmp
push
retf
and
mov
daa
ds
push
fdivr
push
inc
xor
sar
push
mov
add
(bad)
jmp
nop
nop
xchg
mov
cmp
mov
(bad)
push
loop
cdq
fist
pop
mov
in
idiv
inc
mov
push
(bad)
lds
fisubr
sub
ror
adc
(bad)
sbb
dec
lahf
and
leave
mov
jmp
daa
mov
popa
mov
jle
aad
ss
imul
stos
mov
push
pop
fld
repnz
lahf
(bad)
cmp
cld
cmp
aas
jge
xor
sub
mov
retf
or
les
ss
rol
sub
test
mov
stos
inc
imul
jmp
addr16
dec
(bad)
fcomp
repz
imul
fistp
in
das
mov
xchg
mov
xchg
push
rol
xchg
xor
sbb
pop
inc
jae
add
push
dec
movs
or
mov
dec
sar
retf
add
(bad)
and
push
not
push
adc
cmps
mov
and
lahf
jp
loop
jle
push
mov
in
sar
mov
sbb
fs
mov
xchg
and
xlat
dec
enter
push
jmp
inc
add
fdecstp
(bad)
stc
cdq
or
js
sub
repz
imul
push
mov
mov
add
xlat
std
imul
xor
repz
dec
jle
adc
xor
adc
cmp
sub
lea
sbb
or
je
scas
js
shr
pushf
in
push
pusha
adc
and
(bad)
out
xor
gs
ja
sub
cli
dec
idiv
pop
adc
nop
popf
cmp
cs
ficom
jnp
or
and
es
mov
or
and
xor
add
and
fwait
retf
(bad)
iret
inc
sets
cld
loop
mov
in
or
repnz
arpl
jmp
pop
pop
sub
es
icebp
movs
dec
enter
jne
repnz
push
push
js
push
mov
push
mov
jns
ds
call
cld
sbb
ja
mov
call
and
mov
or
das
scas
fmul
test
push
fdivr
adc
shl
cmp
test
mov
jge
ror
ficomp
mov
or
xchg
adc
pusha
and
pop
mov
sub
mov
fidiv
cmp
ins
mul
push
cmp
jl
mov
mov
add
retf
outs
sbb
loop
int3
mov
cs
mov
stos
xor
mov
cmp
repnz
add
mov
add
stos
ds
mov
mov
addr16
mov
test
add
xchg
mov
imul
pop
test
push
sti
mov
sbb
sbb
mov
add
sahf
aad
ins
sbb
push
in
cmc
outs
cmove
mov
retf
(bad)
sub
sub
int3
adc
mov
scas
or
das
mov
scas
and
sub
cmp
(bad)
mov
ret
cwde
stos
adc
(bad)
mov
sub
mov
lahf
sar
sbb
dec
adc
xchg
inc
sub
push
mov
push
jne
int3
or
fisub
jp
xor
repnz
xchg
ins
pop
je
add
movs
gs
sub
jno
int
ja
scas
pop
xchg
movs
or
pop
lock
mov
mov
sub
adc
movs
mov
mov
into
out
push
or
test
aam
inc
jnp
ins
les
pop
int3
fmul
(bad)
loop
ficomp
out
(bad)
cs
jecxz
fcom
bswap
inc
inc
mov
dec
pop
sbb
mov
pop
sbb
and
lock
cwde
fld
sbb
mov
ror
imul
sub
sbb
mov
stos
mov
das
pop
and
in
or
add
cmp
mov
addr16
and
xor
imul
ror
(bad)
clc
cbw
mov
cmp
sub
repz
retf
movs
pop
icebp
inc
xchg
dec
lds
rcl
xchg
sbb
xchg
aam
mov
or
add
mov
mov
xor
outs
call
xor
addr16
sbb
and
mov
xchg
retf
loope
imul
mov
inc
push
cmp
sub
and
out
xchg
nop
dec
aad
in
xor
sub
icebp
mov
gs
xchg
ficomp
adc
jae
dec
clc
cmp
cli
repnz
add
aad
sub
daa
sbb
mov
fwait
mov
mov
sbb
imul
std
std
mov
pop
popf
pusha
rcr
mov
clc
in
dec
inc
cmp
loopne
das
inc
ror
pop
loop
call
cmp
xor
xor
jp
inc
iret
inc
or
xor
pop
push
mov
call
dec
mov
arpl
retf
cld
dec
push
jo
pop
and
or
and
call
pop
fs
test
cmp
mov
mov
and
mov
gs
mov
sar
js
(bad)
push
mov
push
ret
cmps
lods
stos
or
std
dec
or
dec
into
pop
ins
ins
dec
inc
mov
enter
pop
adc
mov
neg
ret
xchg
xchg
adc
aaa
ss
je
mov
xchg
xchg
test
sbb
scas
push
mov
sbb
cmps
jmp
xor
push
push
push
out
or
sbb
jns
cwde
mov
pop
ror
(bad)
fidivr
call
test
xchg
cmps
ds
fwait
xchg
test
or
sub
test
pop
call
cmps
adc
and
mov
clc
inc
sti
aas
fidiv
push
sbb
dec
adc
in
sbb
cli
add
popa
push
sahf
push
mov
int
push
sti
lds
or
and
popa
je
adc
add
aad
inc
das
shr
(bad)
sbb
jecxz
call
mov
mov
add
push
(bad)
push
adc
xor
cwde
add
out
nop
push
push
mov
adc
(bad)
jmp
push
mov
cmps
jecxz
and
fucomip
aam
cmp
mov
sub
jnp
add
clc
dec
xchg
xor
pushf
movs
inc
movs
dec
add
sbb
imul
adc
shr
(bad)
stos
mov
fwait
ds
adc
shl
xor
cmp
lds
gs
test
push
sub
or
stos
out
mov
ss
add
xor
fwait
mov
data16
retf
mov
mov
xor
inc
stc
mov
das
sub
and
mov
xchg
addr16
push
jae
push
les
inc
outs
sub
clc
adc
(bad)
inc
xchg
mov
inc
sub
inc
cdq
or
cdq
int
out
call
hlt
dec
mov
les
clc
inc
stc
xlat
shr
jmp
data16
retf
jae
and
mov
or
call
and
add
xor
mov
jo
(bad)
std
cmp
mov
jmp
adc
stos
sti
sbb
fbld
or
cmp
sub
out
jns
(bad)
out
fsubp
ins
mov
repz
push
outs
xor
call
adc
sub
mov
das
add
xor
sub
std
dec
loop
add
push
hlt
and
xchg
sbb
icebp
or
mov
fisttp
(bad)
adc
adc
enter
pop
shl
cli
sbb
push
xchg
push
rcr
or
cmp
jmp
pop
xor
or
add
cdq
lahf
add
sar
retf
push
add
mov
or
jae
ror
push
jecxz
or
loope
in
mov
add
add
(bad)
pop
pop
stc
sub
cmp
(bad)
mov
outs
dec
jbe
inc
sub
popf
ds
lds
ds
jno
ss
popa
fbld
ret
add
mov
rcr
xor
rcr
fsubr
xor
or
push
adc
ins
out
fcmovu
shl
mov
xor
and
inc
stos
mul
retf
sti
fwait
mov
gs
gs
cli
and
retf
or
aaa
lea
pop
xor
rol
stos
sti
dec
aad
mov
push
cmovl
js
xor
xchg
mov
sub
retf
loopne
or
add
fs
adc
pop
mov
cmp
xchg
jle
adc
jge
ficom
jp
mov
add
push
loope
lea
pop
dec
dec
cmps
lds
fisttp
xchg
out
aam
lods
repnz
pop
out
adc
cwd
das
cmp
and
jg
ror
push
sub
xor
dec
mov
jb
repz
or
xchg
imul
add
xchg
enter
outs
pop
xchg
mov
mov
retf
adc
js
jae
scas
in
add
push
adc
dec
and
les
mov
sub
movs
cmps
push
jl
sahf
(bad)
jno
scas
or
push
js
dec
pop
mov
jne
sub
dec
lock
outs
push
or
dec
sub
fucomip
sbb
jnp
cmp
cmp
push
in
stc
sar
and
add
ret
pop
push
ror
push
sbb
mov
xlat
bound
std
popa
out
xchg
jmp
mov
stc
sbb
fdivr
mov
push
mov
(bad)
push
(bad)
push
pop
jnp
pop
sub
ret
es
xchg
hlt
seta
sub
dec
into
cdq
mov
repnz
shl
pushf
cmp
sub
data16
clc
mov
lods
lods
dec
jecxz
inc
pusha
inc
test
pop
xchg
fcmovbe
adc
sub
sub
add
daa
jnp
sbb
dec
inc
mov
cdq
and
retf
pop
retf
(bad)
lock
mov
lock
je
add
pop
cmp
(bad)
mov
ret
mov
adc
sbb
scas
mov
sub
movs
mov
call
or
or
outs
mov
adc
inc
clc
icebp
in
not
cwde
jg
int3
inc
fild
xor
mov
mov
adc
shr
in
icebp
xor
aad
jae
in
dec
jbe
or
mov
fisttp
jp
push
mov
jne
(bad)
adc
xchg
jle
lods
jb
sub
adc
ror
icebp
int
loopne
sub
jns
clc
in
cmp
xlat
iret
adc
pushf
jbe
outs
and
lods
in
mov
push
lods
xor
fdivr
clc
jne
inc
rcr
or
xor
or
shl
sub
pop
cmps
shr
(bad)
fst
and
xchg
sub
xchg
cmp
mov
mov
out
shr
cs
data16
jl
hlt
cmps
mov
scas
push
in
xor
jmp
xor
fidiv
bound
or
in
call
push
outs
push
mov
sub
xchg
rcr
lahf
mov
jae
inc
jb
lahf
mov
adc
dec
dec
ret
inc
outs
add
mov
aad
int
in
cdq
shr
xor
pop
xchg
cmp
fsub
jmp
sahf
xor
jmp
xchg
js
mov
call
xlat
mov
push
xchg
repz
mov
or
ficom
adc
and
retf
sub
into
lahf
ror
(bad)
stos
sti
jmp
(bad)
in
ret
in
fs
loop
mov
clc
inc
scas
push
mov
pop
fisttp
ret
ins
push
out
push
cmps
mov
(bad)
dec
fadd
pop
(bad)
cmc
ins
push
mov
aad
cmp
dec
mov
lock
xchg
in
mov
pop
in
dec
push
dec
add
sbb
sub
lods
xor
dec
pop
icebp
ds
and
sbb
lea
lea
popa
push
adc
jbe
in
addr16
jmp
sub
mov
xchg
stos
sub
(bad)
mul
(bad)
dec
or
scas
add
xor
pop
and
xor
and
add
(bad)
xor
mov
loopne
jle
data16
fdivr
je
mov
jmp
stc
retf
push
scas
jmp
mov
mov
push
in
or
in
sbb
sar
loop
add
jne
rcl
mov
jg
cdq
sub
ret
repz
les
lods
popa
fimul
out
mov
js
mov
mov
addr16
jp
push
push
test
movs
inc
(bad)
aaa
scas
push
cwde
ins
adc
push
call
cmp
sub
loop
scas
sbb
aaa
jb
push
dec
aaa
push
xor
fdivr
and
ds
dec
mov
lds
gs
repz
jmp
mov
dec
loop
push
xor
retf
push
push
out
inc
fild
retf
xchg
mov
sar
sbb
mov
jle
inc
inc
jmp
test
outs
push
jnp
and
out
mul
ins
dec
push
in
cmp
(bad)
pop
bound
std
xlat
fs
jae
or
fmul
icebp
push
(bad)
imul
pop
or
cs
out
mov
xrelease
xchg
xor
(bad)
(bad)
cs
iret
ins
add
jmp
inc
pop
les
mov
and
gs
aaa
xchg
daa
in
cmp
add
push
addr16
loop
popf
ficom
add
movs
fs
pop
ins
std
pop
xchg
(bad)
call
pop
repz
inc
pop
pop
and
scas
lods
cmp
push
mov
fiadd
xchg
int3
je
inc
pop
inc
add
push
xchg
scas
movs
scas
or
ficomp
jnp
dec
sar
lea
lea
mov
or
repnz
or
mov
test
mov
aaa
in
or
jo
cmp
xor
sub
jecxz
test
test
push
push
fisub
jp
pop
clc
xchg
jnp
push
add
call
push
sbb
cdq
push
lock
stos
push
cmp
or
sbb
xchg
mov
dec
neg
neg
jns
jae
iret
aaa
xor
pop
add
gs
enter
sbb
adc
inc
sar
sub
jge
cwde
je
scas
gs
outs
push
aaa
inc
imul
sbb
js
and
and
mov
nop
sbb
xchg
ficom
addr16
mul
lahf
jp
idiv
jmp
and
pop
inc
icebp
adc
leave
and
pushf
jnp
adc
jo
dec
xor
outs
cli
std
jno
mov
out
mov
sub
inc
pusha
stos
ss
sbb
inc
adc
xchg
movs
mov
push
mov
inc
mov
shr
sbb
int
in
ins
sub
scas
aam
jmp
sbb
and
inc
inc
or
call
cmc
mov
dec
sbb
mov
iret
sbb
mov
mov
sbb
imul
xor
add
sub
add
pusha
pop
pop
mov
xchg
int3
push
mov
stos
dec
push
stos
test
cli
out
cdq
std
iret
xor
not
pop
int3
lods
imul
mov
aam
cmc
ret
repz
adc
push
popf
cdq
dec
repz
mov
adc
inc
loopne
mov
dec
out
inc
aaa
sub
xor
and
sub
(bad)
mov
shl
mov
cmp
xor
xchg
test
ror
retf
not
sbb
imul
pop
retf
mov
fimul
test
movs
mov
adc
jmp
push
inc
push
rcl
(bad)
mov
ds
lds
sub
push
or
mov
cmp
ins
in
idiv
inc
push
(bad)
mov
ret
or
xchg
(bad)
xor
fidiv
cwde
movs
shr
scas
push
xchg
jb
test
int3
jno
movs
mov
add
cmp
sar
cmp
test
push
xchg
push
sar
das
cdq
cmp
push
inc
pop
or
xchg
movs
out
mov
dec
cmps
fwait
stos
add
ins
pop
shl
cmp
sar
movs
push
outs
movs
jecxz
mov
test
out
mov
dec
and
scas
movs
mov
or
lahf
cmc
das
imul
jae
rcr
add
scas
cmc
jnp
aaa
mov
jge
cmp
std
scas
loope
leave
or
hlt
cdq
xor
jne
xchg
mov
rcr
fdivr
mov
jle
sbb
(bad)
dec
xchg
out
pusha
cmc
stos
adc
aaa
sbb
jge
call
repnz
sbb
(bad)
pop
imul
aam
sbb
xchg
push
xchg
xor
dec
adc
xor
jmp
add
arpl
jae
in
xor
jp
mov
or
jbe
lock
inc
adc
mov
clc
mov
popf
outs
add
mov
popa
cli
and
cmp
cmp
enter
sub
in
out
cli
out
mov
dec
cmc
fcomp
jp
push
push
sbb
fwait
dec
inc
mov
lea
sub
ja
pop
jbe
imul
mov
sub
push
mov
mov
sub
push
sbb
jmp
jmp
mov
mov
jmp
stos
mov
fstp
inc
loop
pop
fisubr
jno
mov
sar
icebp
dec
dec
jg
addr16
xor
scas
imul
hlt
mov
not
push
ja
pop
in
mov
xchg
fiadd
add
push
sbb
xor
fbld
add
cdq
inc
add
gs
shl
inc
mov
mov
lock
ret
(bad)
outs
int
push
lods
and
xchg
push
cli
jo
addr16
test
int
(bad)
imul
cmp
dec
push
outs
test
cmp
clc
mov
mov
and
inc
and
jb
nop
ss
sub
push
dec
pop
sub
daa
mov
and
adc
leave
or
pop
ja
or
sbb
popf
inc
or
jae
jp
stos
mov
popf
ss
loope
in
xchg
lock
aas
add
and
sub
sub
pop
cmp
cmp
cmp
push
push
and
mov
or
dec
and
in
and
or
ds
jmp
sahf
mov
(bad)
or
cli
mov
jno
cmps
ss
or
push
add
push
jb
jl
pop
stos
add
scas
xchg
sub
inc
cmps
popf
lahf
mov
pop
mov
mov
fadd
pushf
out
ins
jnp
cmps
inc
clc
pusha
lds
fwait
or
retf
les
and
rol
ds
retf
iret
outs
rol
jae
add
inc
in
or
inc
into
sbb
mov
mov
cld
in
push
imul
xchg
lahf
pop
dec
or
mov
rcr
hlt
and
push
in
inc
pop
and
xchg
mov
or
sub
call
arpl
iret
or
push
ins
in
les
fnstsw
or
scas
pop
jo
or
pop
stc
call
add
(bad)
movs
add
jge
sar
(bad)
dec
neg
popa
test
mov
push
xchg
jns
les
fisub
fcomp
mov
test
(bad)
jle
in
push
mov
pop
inc
loope
sbb
push
pop
call
cmps
mov
mov
outs
jge
les
mov
inc
neg
mov
retf
std
or
hlt
in
mov
ds
movs
je
les
pusha
and
xor
xchg
pushf
push
stos
push
dec
pop
enter
xor
not
jge
ret
call
mov
nop
mov
sbb
aas
push
test
fs
sar
popw
xor
dec
adc
dec
imul
je
mov
jo
ss
test
cli
jbe
push
es
sbb
std
dec
aam
push
int
popf
aas
js
xchg
push
cwde
push
sub
mov
out
jb
cmp
shl
pop
sbb
fisttp
mov
scas
mov
jge
cli
cmps
adc
out
push
outs
mov
mov
pop
sbb
xchg
not
outs
push
adc
jp
div
pop
aam
fdivr
pop
push
call
dec
mov
out
adc
sub
add
loope
(bad)
ror
xor
mov
sahf
pop
fidivr
pop
jmp
shl
or
dec
inc
nop
pusha
lods
sub
shr
sub
jno
mov
and
cmc
bnd
push
mov
pop
(bad)
fld
mov
hlt
in
mov
mov
and
pushf
mov
mov
dec
xor
push
xchg
jae
push
scas
dec
pop
pop
sbb
in
pop
xor
out
fidiv
xor
pop
inc
jb
aad
leave
mov
(bad)
adc
add
add
xchg
mov
mov
repnz
les
xchg
jne
mov
pushf
and
xchg
mov
xor
cmp
xor
pop
(bad)
fst
lods
retf
(bad)
sti
fisttp
jmp
inc
add
mov
shl
(bad)
xchg
cli
ss
(bad)
sub
call
or
imul
mov
icebp
adc
movs
xchg
enter
jmp
mov
pop
add
ret
jno
loopne
fwait
jecxz
out
outs
out
fadd
push
fistp
cmc
cwde
pop
mov
dec
(bad)
int3
mov
and
push
cmp
jbe
mov
adc
adc
jmp
std
sbb
mov
cmp
pop
push
inc
in
fcomip
sbb
jg
imul
fcom
xor
into
dec
push
mov
add
xchg
sbb
das
iret
pop
mov
fsub
push
fistp
in
daa
movs
mov
icebp
adc
fs
loope
pop
adc
sti
das
add
push
jno
cmp
xchg
icebp
jno
iret
fiadd
out
sbb
xchg
movs
xor
and
inc
shr
in
lea
in
pop
je
gs
mov
adc
sahf
add
pop
jmp
pop
div
enter
test
nop
retf
push
adc
lahf
out
ja
mov
push
ins
push
ficomp
into
(bad)
cmp
pop
ja
and
push
bound
out
inc
push
and
out
push
and
daa
mov
mov
jmp
and
pop
gs
jge
cwde
pop
pop
stc
nop
sbb
or
fwait
adc
pop
jl
popa
xchg
push
movs
adc
push
jns
xchg
test
push
les
jg
inc
mov
retf
or
pop
sbb
inc
jmp
ret
fsub
lods
es
inc
jb
fnclex
mov
push
fs
movs
popf
(bad)
push
bound
popf
call
sbb
lds
test
fld
retf
cmc
scas
mov
out
repz
les
loopne
or
scas
loope
imul
in
dec
dec
mov
gs
lock
pop
pop
jno
(bad)
lmsw
and
mov
add
xchg
fidiv
aam
xchg
test
cmp
stos
js
adc
dec
neg
mov
or
inc
cmovns
sahf
dec
jmp
je
cmc
cli
mov
dec
xor
push
in
fild
and
jns
loop
test
mov
jnp
out
inc
dec
jnp
add
pop
push
cmp
dec
and
test
push
sub
xor
fcom
mov
call
sub
mov
xchg
mov
(bad)
push
ret
pusha
das
ret
lods
out
sbb
mov
sub
inc
mov
lods
in
scas
fst
loope
jb
add
xor
jge
add
cwde
icebp
inc
pop
movs
add
mov
lock
jb
imul
adc
and
in
cmp
add
jb
jno
mov
outs
mov
xor
arpl
lea
and
jne
popa
mov
xor
fcmovbe
int
sbb
sub
aaa
jns
jecxz
repz
pop
cmp
inc
dec
push
push
mov
dec
sub
push
call
pushf
jmp
mov
ret
sub
xchg
lea
jp
push
xlat
and
clc
or
cdq
mov
adc
icebp
jmp
pop
shr
cmp
or
sub
sub
push
mov
xchg
fsubr
das
in
rol
dec
adc
xchg
pop
add
xchg
jno
sahf
xchg
bound
jmp
and
out
out
jbe
int
gs
inc
mov
stos
cld
cs
push
xor
sub
sbb
push
add
pop
jns
or
adc
push
inc
daa
mov
dec
popa
outs
stos
and
sahf
js
or
lods
xor
sub
pop
outs
imul
lds
pusha
enter
pop
les
int
sbb
cmp
sbb
push
cdq
mov
ds
daa
or
xchg
(bad)
push
and
cwde
cmp
or
mov
inc
adc
xor
stc
pop
stos
and
adc
xchg
add
sbb
inc
inc
adc
retf
retf
test
out
push
dec
mov
aaa
pop
jle
loop
cdq
pop
sbb
adc
retf
mov
int3
dec
(bad)
in
out
shl
add
and
or
aad
ret
or
xchg
adc
mov
adc
xor
hlt
adc
mov
sbb
and
mov
adc
fisttp
cmp
inc
pop
pop
and
cmps
imul
aad
scas
call
hlt
pop
push
fwait
into
xchg
out
repnz
aas
mov
shl
cmps
aam
fiadd
push
xlat
cwde
leave
aam
sbb
sub
add
jge
rcr
dec
idiv
sbb
(bad)
add
fwait
ins
add
inc
pop
in
mov
(bad)
jb
xor
sar
dec
mov
clc
leave
pop
dec
ret
mov
popf
in
dec
sbb
popa
xchg
shr
bound
mov
dec
fimul
outs
push
test
add
call
adc
shr
dec
test
in
cmp
jmp
xchg
mov
jae
cmp
xchg
push
shl
mov
loop
ins
lods
adc
mov
pop
clc
aaa
pusha
pop
hlt
call
sub
xchg
jbe
clc
mov
(bad)
loopne
dec
out
xchg
loop
sub
xor
outs
and
sbb
cmps
xchg
enter
jne
dec
nop
fst
cmps
sbb
cli
xor
inc
cmps
daa
inc
js
jp
icebp
sar
sbb
imul
lock
dec
inc
shl
mov
inc
mov
cmp
lock
adc
jge
fnstsw
(bad)
fisttp
sbb
aad
jmp
cmp
(bad)
in
adc
ins
gs
mov
ret
mov
mov
xor
sti
(bad)
jg
sbb
pop
and
jbe
arpl
mov
in
fnsave
pop
or
iret
call
cdq
mov
jecxz
ins
stc
das
jmp
sar
imul
sti
xor
xchg
aas
ret
mov
and
or
mov
adc
mov
jb
sahf
inc
repz
aam
jnp
aam
test
inc
ret
inc
mov
mov
daa
jb
add
jbe
xchg
retf
cli
jmp
push
jmp
es
mov
or
loope
popf
fwait
mov
sbb
xor
cs
add
xlat
pop
test
jmp
jns
in
in
cmp
leave
add
push
push
test
outs
sub
mov
add
add
movs
mov
fwait
lahf
test
or
sti
sub
mov
icebp
or
ret
push
jb
mov
xchg
mov
sahf
(bad)
into
mov
pop
xor
iret
cmp
pop
mov
rcr
fnstsw
clc
out
xchg
icebp
cmps
movs
fwait
call
jge
mov
xchg
jmp
mov
mov
push
push
push
pop
cmp
into
(bad)
dec
inc
xor
ins
stos
in
fisub
fstp
mov
lods
dec
out
mov
mov
shl
or
out
mov
stos
push
pop
outs
pop
mov
repz
or
mov
push
js
mov
mov
xchg
daa
fcmovne
inc
in
xchg
cmp
adc
lahf
sbb
fst
mov
loope
out
mov
cmp
shl
pop
mov
adc
das
(bad)
push
adc
jnp
mov
les
ins
pop
xchg
adc
mov
add
in
nop
sub
pop
cmp
dec
add
inc
and
push
mov
cmp
(bad)
jg
jmp
push
cwde
dec
adc
sbb
sub
fs
push
dec
push
push
sub
cdq
push
fidiv
sar
mov
pop
jae
mov
ins
and
pop
sbb
fist
jno
jbe
es
call
sti
retf
into
call
mov
sbb
cmp
mov
mov
cmps
jl
push
adc
sbb
add
(bad)
push
xor
shl
and
icebp
jne
sub
xor
outs
iret
push
mov
cmps
or
enter
ja
fs
add
mov
popa
sub
push
jb
imul
cmp
loope
pop
into
and
cmps
retf
push
push
inc
(bad)
jns
jno
out
in
sbb
push
aas
or
aaa
push
rcr
mov
or
stc
mov
pop
and
and
into
inc
mov
sub
scas
lock
sub
push
add
xchg
outs
add
sbb
arpl
mov
mov
fstp
hlt
ins
dec
dec
jae
jns
ds
jle
sub
mov
push
mov
les
cmp
or
je
fisubr
cmp
enter
add
retf
push
xchg
mov
fld
cmp
xor
ins
pop
adc
mov
pop
aas
adc
xor
mov
fisttp
jge
and
enter
scas
mov
sbb
ret
jmp
cmp
pusha
out
mov
mov
int
xchg
retf
push
int3
mov
pop
fstp
std
shl
pusha
push
out
push
push
pop
lock
in
mov
inc
arpl
and
je
adc
inc
loopne
leave
pop
mov
movs
pushf
xchg
xchg
jbe
jmp
bound
fldpi
movs
cdq
lods
jnp
xchg
cmp
mov
jo
jae
dec
xor
ins
jl
fnstenv
cmp
jg
mov
and
xor
(bad)
scas
clc
xchg
cmps
clc
xor
retf
(bad)
mov
cmp
pop
and
retf
ret
inc
sbb
mov
or
push
add
mov
das
popf
jno
mov
(bad)
(bad)
(bad)
add
pop
(bad)
movs
mov
jge
retf
pop
mov
push
ror
std
mov
inc
mov
cld
pop
daa
inc
int
test
test
sti
sub
lods
retf
jl
push
icebp
adc
pop
mov
mov
mov
or
mov
jg
add
bsr
sbb
mov
fs
mov
inc
push
(bad)
inc
xor
mov
jnp
les
ss
mov
aad
dec
lea
rep
mov
xchg
bound
je
mov
xor
push
repnz
add
mov
cmp
outs
call
dec
lods
scas
push
dec
gs
mov
xor
xor
jmp
mov
push
(bad)
sbb
sahf
jnp
movs
jae
fwait
jbe
lods
mov
cmp
jmp
gs
lock
mov
retf
add
pop
or
jp
fwait
dec
or
mov
sub
in
jp
(bad)
or
sbb
scas
popa
retf
jmp
jmp
loop
pop
cmp
push
mov
lahf
retf
(bad)
dec
arpl
jbe
jno
in
add
or
push
xor
and
mov
stos
mov
add
in
sbb
and
add
mov
mov
push
imul
dec
ret
sub
rcl
fcmovbe
cmps
add
fs
(bad)
pushf
loope
scas
adc
add
sub
and
cmp
mov
repz
in
js
add
cwde
pop
inc
lds
in
int3
pop
add
mov
mov
sub
(bad)
push
imul
xchg
hlt
mov
or
adc
sub
push
mov
xchg
cli
cmps
jl
mov
push
cld
adc
sbb
mov
xor
adc
addr16
push
retf
jle
and
sub
repnz
retw
clc
sbb
jmp
repnz
sub
mov
ficomp
cdq
push
test
shr
cmps
outs
cli
cli
or
adc
adc
xchg
fs
fwait
xlat
daa
cmps
push
cmps
fadd
call
add
fbstp
mov
shl
std
arpl
nop
scas
movs
mov
mov
loop
fcmovu
not
sbb
fcom
jno
jo
lock
sbb
pop
inc
adc
pop
ja
jecxz
in
adc
pop
cmp
sahf
retf
jae
div
pop
stos
sub
push
mov
lock
xchg
xchg
int3
sub
inc
icebp
shr
sar
(bad)
push
sub
test
stos
aad
in
call
xor
pop
push
xchg
mov
out
lds
movntq
out
jne
retf
popa
sbb
lock
push
add
mov
test
xchg
mov
(bad)
sub
enter
mov
mov
pop
retf
adc
push
test
jno
and
hlt
sbb
iret
int3
enter
cmp
popa
cmp
ror
and
cs
clc
and
fidivr
mov
pop
pop
aam
stos
loopne
or
and
cdq
call
push
cmp
shl
shl
xchg
sbb
xor
sbb
sbb
mov
lods
nop
ds
inc
pop
sti
fs
xor
in
out
arpl
mov
dec
push
call
ret
add
div
call
pushf
push
add
pop
stos
ret
xchg
fs
aad
dec
or
mov
into
sahf
xchg
pushf
jl
mov
fidiv
cmc
cmp
fs
lahf
cmp
in
sbb
cmp
pop
pushf
popa
jo
sub
mov
call
rcr
mov
mov
pop
pop
rcl
push
cmp
retf
mov
imul
fwait
retf
in
mov
ins
dec
lds
cs
mov
call
sahf
shl
dec
outs
mov
ret
ins
jp
(bad)
mov
push
movsx
push
or
mov
adc
stc
jl
pop
in
cmp
fnstcw
imul
call
push
mov
mov
pop
loope
push
popa
(bad)
cwde
mov
push
xor
mov
xor
jnp
test
int
cmc
dec
loope
adc
retf
xchg
daa
and
cdq
mov
jge
in
pop
inc
or
and
enter
shl
pop
pop
xchg
xor
imul
jno
sub
xchg
dec
and
push
shl
shl
fwait
inc
jg
adc
push
ins
jl
push
retf
push
push
mov
rol
repz
mov
pop
xchg
not
mov
cmp
cmp
add
das
jmp
loope
std
inc
xchg
nop
movs
push
sub
cmp
cmc
daa
and
or
or
in
scas
and
xor
cmp
cdq
pop
loop
stc
jae
cmc
cmps
and
and
cdq
inc
pop
jmp
inc
add
out
xchg
ror
je
push
stos
addr16
pop
pop
(bad)
loop
mov
icebp
mov
pop
jp
test
jo
or
adc
icebp
mov
ficomp
push
movs
pop
adc
sbb
test
gs
mov
es
out
cmps
push
inc
nop
pop
dec
dec
xlat
mov
jno
push
sbb
sar
jge
shl
outs
pop
jecxz
sub
push
adc
test
cmp
mov
jmp
imul
in
sub
movs
ins
xchg
push
neg
mov
add
imul
sbb
dec
leave
xchg
mov
mov
ret
dec
(bad)
std
dec
xlat
pop
nop
pushf
mov
sub
adc
and
hlt
and
enter
(bad)
xor
(bad)
sbb
mov
pop
loop
xor
mov
mov
xchg
imul
mov
in
mov
sbb
and
stos
push
and
add
or
gs
and
loopne
pop
mov
test
aas
aad
test
ja
leave
adc
push
mov
cmp
push
xchg
loop
mov
pusha
add
push
inc
and
adc
jmp
xchg
les
adc
xor
icebp
stos
jl
sub
cmp
pop
call
loop
rcr
xchg
fnstcw
cmp
ret
inc
sub
outs
sbb
cmp
mov
add
scas
movs
or
aas
xor
jne
ret
out
mov
dec
test
adc
(bad)
test
aam
fwait
mov
mov
xor
repz
repnz
push
jbe
push
js
push
(bad)
lods
test
jns
cmp
sub
push
rcl
sub
jbe
cli
inc
pop
ficom
jmp
ret
xor
inc
mov
inc
push
xlat
call
push
pop
xor
(bad)
cmp
scas
cmp
sub
dec
xor
bound
test
mov
cld
aas
and
dec
into
or
pop
dec
mov
shr
and
mov
gs
xchg
in
cld
fsub
ins
cmp
scas
lods
mov
fdivr
test
xor
out
push
jno
or
xor
cmp
mov
cmc
ret
inc
xchg
cmps
jmp
sub
add
xchg
lahf
sbb
push
fucompp
js
push
sbb
call
xchg
pop
mov
dec
cdq
pop
retf
lea
cmp
adc
fisub
and
pop
pop
(bad)
loopne
mov
int3
inc
rcr
icebp
jecxz
cld
rol
or
stc
loopne
rcl
cmc
repz
or
pop
leave
jne
push
cmp
dec
dec
dec
push
std
rol
push
push
inc
out
dec
aaa
mov
gs
inc
icebp
add
ja
test
bound
das
movs
mov
retf
dec
shr
mov
cmp
ror
cs
xchg
xchg
pop
and
es
xchg
xor
call
das
leave
inc
movs
push
xchg
add
psraw
push
fdivr
data16
ds
dec
jmp
addr16
ins
jns
sub
mov
sbb
nop
jae
dec
jno
int
enter
mov
mov
loop
es
shl
cwde
loope
pop
or
xor
xchg
xor
mov
rol
or
enter
ss
ds
xor
cmp
daa
int3
(bad)
or
mov
mov
movs
in
sub
ja
and
cmp
popf
mov
aaa
pop
mov
cmp
js
and
push
sti
adc
test
inc
and
jns
(bad)
adc
pop
mov
ins
std
cmps
push
mov
aaa
sub
push
inc
ins
mov
mov
push
movups
rcl
and
add
sbb
mov
and
jge
pop
faddp
xor
aas
pushf
mov
or
fs
mov
lock
mov
fstp
inc
add
and
mov
enter
sbb
jl
movs
mov
cld
imul
push
jle
dec
sbb
push
or
push
retf
xor
addr16
cmp
ret
xchg
dec
or
into
and
jle
stos
ret
push
cwde
fs
mov
xor
pop
push
iret
les
int
clc
sub
cmp
inc
mov
and
leave
pop
addr16
cmp
and
addr16
push
(bad)
and
fs
in
add
push
ret
mov
cli
mov
(bad)
pop
inc
lahf
ins
dec
adc
and
xchg
jbe
jnp
cwde
jae
cdq
movs
inc
inc
pop
test
mov
aaa
xchg
pop
jb
xchg
mov
sub
repz
je
mov
cdq
ins
inc
icebp
sahf
les
bnd
xlat
or
ret
jp
fld
in
sbb
fild
fdiv
jp
inc
dec
ja
dec
xlat
jp
xchg
pop
xor
adc
mov
das
ret
pop
in
jg
sub
push
sub
nop
imul
sub
pusha
inc
sub
jg
out
xor
fwait
(bad)
test
jb
jnp
dec
pop
hlt
aaa
dec
xor
out
xchg
movs
scas
aad
into
mov
jge
pop
gs
sbb
rcl
stc
add
add
test
jg
icebp
call
out
and
outs
pop
cmp
movs
or
pop
int
mov
add
cmp
cwde
shr
scas
xor
cmps
jne
imul
cld
adc
ds
mov
push
and
cmp
lahf
cmp
xlat
ret
mov
jmp
sbb
dec
leave
fdiv
in
aas
sbb
clc
cmp
add
cmc
add
jbe
add
jno
jno
mov
jnp
loop
add
dec
dec
mov
xor
loopne
mov
sub
jb
mov
(bad)
cdq
pop
repnz
add
dec
bound
pop
leave
cmp
push
sbb
je
(bad)
inc
jp
mov
xchg
outs
xlat
pop
mov
or
fadd
into
or
and
mov
fild
mov
clc
cvtdq2ps
lods
test
int
add
inc
jne
shr
pop
sbb
mov
jbe
jno
popf
xor
dec
repnz
adc
jmp
mov
dec
xor
xor
mov
pop
and
sub
cmp
sbb
xor
xchg
mov
hlt
sahf
enter
sbb
mov
pop
sub
test
mov
xchg
rcr
sub
mov
xchg
dec
mov
in
dec
jbe
mov
jecxz
cmc
loope
inc
adc
in
lahf
mov
loope
cmps
add
fcmovnb
mov
mov
ficom
push
sbb
and
rcl
jmp
popa
sub
sar
xor
mov
sbb
xor
lds
or
jg
mul
jne
in
neg
jo
(bad)
cmp
in
inc
inc
jne
mul
push
popa
dec
mov
xchg
fidivr
xchg
pop
mov
inc
(bad)
sub
imul
adc
and
inc
retf
add
adc
mov
shl
repz
gs
mov
sub
inc
in
(bad)
jb
das
mov
test
xor
pop
sbb
mov
xchg
out
cwde
add
loope
test
and
push
icebp
test
pushf
mov
cmp
push
fiadd
shr
pop
mov
adc
int
add
inc
add
mov
mov
movs
pop
xchg
ror
das
inc
adc
xor
sub
dec
add
stos
dec
in
push
cmc
mov
in
arpl
or
aaa
pop
(bad)
sub
lods
mov
adc
aaa
xor
rcl
mov
ffreep
fistp
adc
xor
popf
adc
mov
fidivr
ret
std
xor
je
scas
push
add
(bad)
lahf
(bad)
cld
lods
pushf
call
mov
cmc
ss
pop
mov
sub
mov
cmp
pop
xchg
xchg
add
mov
and
stos
and
sbb
mov
in
jae
jle
jmp
inc
popf
pop
fst
mov
jle
mov
lods
test
cmc
sub
loopne
out
pop
fcmovnu
cs
sbb
push
cs
push
jb
mov
sbb
jge
scas
push
xor
sbb
jne
das
sub
cmp
pop
push
jecxz
inc
inc
aas
add
sub
call
or
int3
inc
mov
add
push
ret
adc
xor
out
mov
xchg
adc
int
mov
jno
sbb
pusha
(bad)
out
das
mov
xor
sti
out
adc
out
out
adc
ret
sub
cmp
scas
(bad)
jno
and
mov
add
push
out
dec
loop
pop
inc
mov
inc
js
mov
pop
or
add
xchg
mov
pop
mov
mov
int
mov
loopne
div
retf
dec
push
shl
loop
jmp
movs
loopne
sbb
imul
inc
cmc
(bad)
jmp
pop
leave
push
dec
gs
sbb
sub
inc
xchg
and
jmp
adc
les
xchg
inc
jno
jns
jns
rol
push
pop
fmul
mov
xchg
add
inc
or
dec
out
bound
jbe
mov
or
dec
leave
mov
cmp
mov
inc
dec
div
xchg
inc
ds
sbb
not
push
or
test
push
imul
call
jl
stos
sbb
lods
repnz
dec
push
pushf
jg
cs
jo
cmp
xor
in
xor
leave
cmp
(bad)
call
mov
xchg
or
(bad)
xchg
cs
ja
stos
fisttp
iret
imul
sbb
xlat
dec
clc
add
or
pop
fwait
sbb
jp
cmp
cs
pop
vcvttss2si
popf
(bad)
movs
jg
mov
push
mov
pop
loope
mov
test
pop
ins
mov
shl
int
fimul
dec
sbb
xor
dec
or
sub
mov
xor
mov
outs
sub
xchg
adc
outs
sbb
jns
and
in
xor
cdq
ds
jmp
int3
push
aad
adc
fwait
clc
sub
mov
pop
jae
add
pop
xchg
mov
leave
push
mov
xor
adc
div
add
int3
pushf
mov
jno
data16
addr16
jae
mov
(bad)
enter
xchg
lds
loop
sbb
pop
dec
pop
add
push
push
sbb
and
mov
adc
push
scas
std
cmp
mov
stc
aas
add
mov
aas
mov
mov
xchg
or
(bad)
fld
(bad)
cmp
sbb
pop
(bad)
repnz
arpl
in
cmps
push
fiadd
lahf
sbb
(bad)
pop
adc
jmp
ins
pop
push
ja
mov
mov
dec
or
push
es
add
ret
adc
rol
aas
or
daa
jbe
sbb
add
nop
shl
jl
lods
or
outs
add
dec
or
jns
(bad)
xchg
call
pop
push
loop
adc
adc
cli
shr
outs
sub
iret
or
dec
xchg
jge
ins
mov
jmp
adc
mov
ss
adc
xor
dec
jp
enter
or
mov
xchg
mov
popf
cmc
pop
addr16
fcomp
sbb
stc
in
mov
and
xchg
aad
shl
push
leave
std
loopne
add
paddsw
pop
jmp
(bad)
ja
sbb
push
test
(bad)
and
jge
or
jnp
sbb
jb
push
movs
adc
inc
lds
fild
repnz
xchg
outs
pop
(bad)
sbb
cdq
adc
(bad)
(bad)
xlat
mov
das
sub
push
xchg
add
test
xchg
push
loopne
into
cmp
out
inc
mov
xor
stos
adc
(bad)
cld
lods
call
mov
xor
icebp
div
sbb
add
cmps
cwde
mov
and
xor
and
mov
mov
pop
or
fidivr
scas
mov
push
test
sbb
fist
xchg
shr
lds
cmp
mov
or
std
sub
pop
retf
xchg
test
xchg
jle
ins
sbb
jmp
mov
ja
loop
cmp
popf
cmp
lds
in
cmp
aas
xlat
pop
add
(bad)
in
sti
sub
xchg
push
enter
adc
inc
sahf
ret
hlt
div
mov
(bad)
cwde
xchg
cmp
sbb
mov
in
jnp
xor
cmp
mov
inc
cmps
in
mov
or
xor
inc
ja
movs
ret
cmc
sub
adc
mov
dec
push
(bad)
int
jmp
cld
dec
cmp
div
(bad)
pop
cmps
jne
or
ror
fisttp
fistp
out
sbb
addr16
(bad)
mov
in
gs
push
jg
push
das
pop
fist
lock
pop
call
hlt
cdq
jo
or
int
mov
xchg
call
in
cmp
add
into
imul
add
fs
mov
pushf
es
jecxz
mov
call
xchg
and
imul
cli
pop
dec
jnp
adc
and
int
cdq
xor
and
loopne
pop
test
es
icebp
movs
push
(bad)
sub
in
stos
inc
xchg
and
(bad)
mov
idiv
mov
pushf
(bad)
repnz
jnp
not
fwait
push
mov
sub
lds
mov
in
stos
shr
iret
popa
retf
mov
sub
push
add
pop
push
mov
repnz
xor
mov
bound
cwde
cmp
js
or
loop
pop
ja
mov
xor
pop
cmc
gs
not
ins
call
or
mov
icebp
or
dec
hlt
jo
jecxz
in
jg
sbb
std
cmp
int
aas
jp
dec
retf
test
repz
mov
data16
icebp
push
fistp
xchg
ss
sbb
add
leave
dec
dec
mov
in
imul
inc
cmp
std
cmps
xchg
mov
mov
int
adc
dec
adc
jp
pop
cmp
adc
push
cmp
dec
aas
and
mov
(bad)
and
icebp
imul
int3
out
and
mov
push
mov
sub
rol
push
out
test
(bad)
cs
sbb
cdq
jbe
into
jb
stc
sub
dec
mov
pop
inc
das
mov
push
adc
fdivr
stc
fcmove
les
mov
pop
in
xor
inc
push
xchg
inc
fdiv
pop
lahf
mov
out
jbe
mov
sbb
mov
pop
jle
xchg
mov
push
in
ficom
test
out
xor
dec
pop
push
xchg
mov
sub
xchg
imul
dec
dec
repnz
js
stos
pop
in
mov
cmps
xchg
lds
xor
cli
fild
xor
xor
dec
cld
pop
mov
mov
pop
out
jp
or
ret
sub
lods
push
sbb
sub
cli
mov
test
icebp
cmp
mov
add
mov
retf
ins
stos
fwait
sbb
icebp
rcl
psrad
cli
js
stc
inc
jg
enter
jl
enter
(bad)
sti
sub
mov
jno
adc
int3
push
in
xchg
fs
add
mov
cmp
and
and
mov
xor
pop
inc
dec
sub
xchg
adc
rcr
and
in
ret
mov
call
sbb
xor
dec
mov
push
(bad)
jge
mov
add
push
pop
sub
std
xor
inc
jae
sub
and
into
jmp
dec
je
xchg
mov
inc
jp
add
arpl
pop
mov
pusha
add
pop
ins
cs
cwde
jno
or
cmps
mov
fcomp
cmp
and
(bad)
jmp
sbb
stos
and
sub
jbe
and
or
loopne
adc
(bad)
bnd
outs
xor
cmc
sti
scas
xor
sbb
mov
jae
in
push
std
jl
jl
add
es
cdq
int
dec
adc
shr
lahf
inc
movs
mov
pop
adc
push
repz
sbb
in
outs
addr16
xchg
loope
test
sub
push
sub
call
in
cdq
(bad)
jmp
adc
int
mov
sahf
mov
add
shl
jecxz
push
add
int
cwde
lds
inc
mov
outs
or
jnp
and
fcom
scas
mov
movs
xchg
jo
sar
adc
cmp
shl
lods
aad
mov
mov
loop
pusha
and
cli
test
cmp
popa
stos
fwait
mov
icebp
repz
inc
push
dec
and
cs
xlat
and
mov
pop
inc
test
clc
lods
loopne
jge
jo
mov
mov
and
mov
cmp
rol
sub
sub
inc
push
test
mov
dec
xchg
hlt
sbb
test
jno
jno
movs
xor
lock
pop
loope
adc
jno
jno
ror
pop
lock
xchg
ds
jo
push
push
pop
dec
mov
xor
rcr
pop
xchg
sahf
lds
(bad)
push
push
xor
cmp
popf
ret
idiv
jmp
test
add
ret
enter
cmp
ret
sub
in
jle
call
inc
and
imul
fs
pop
xchg
xchg
ror
xchg
mov
jp
int3
sub
xor
cwde
out
imul
or
mov
mov
ins
or
sub
pop
jg
loop
sbb
iret
fisttp
pinsrw
inc
in
fwait
jo
or
adc
adc
push
add
jp
cmp
xor
fs
add
sbb
mov
test
div
imul
mov
mov
sbb
js
enter
sub
out
cs
sub
cmp
das
adc
xchg
adc
repnz
dec
int3
fs
dec
dec
nop
xor
stc
cmp
nop
sbb
int
push
adc
loopne
and
push
mov
or
cdq
cs
call
(bad)
pop
or
arpl
mov
push
sbb
jl
int
aas
jns
out
fstp
imul
mov
sub
add
jbe
ja
ret
inc
pop
sbb
fdiv
inc
test
ds
sub
add
ja
(bad)
jnp
cmps
jge
es
xor
xchg
jp
loope
daa
inc
rol
add
mov
dec
les
mov
repnz
daa
xchg
dec
xor
dec
add
inc
inc
dec
neg
daa
mov
pusha
das
dec
out
loop
xor
rcr
xor
inc
adc
lods
gs
jbe
loopne
cmp
xlat
sub
das
shl
test
mov
aam
jns
imul
shr
in
fnstsw
mov
mov
push
test
sbb
or
not
add
fsubr
jle
div
cmp
jge
enter
stos
jecxz
push
sahf
test
jns
rcl
pop
popf
lods
xchg
pop
mov
or
lahf
xchg
and
lahf
in
je
mov
sahf
loopne
push
cwde
(bad)
into
test
prefetcht0
pop
test
sub
imul
call
fsubr
and
pop
call
mov
aam
inc
out
push
jno
repnz
mov
shr
xor
lock
jmp
arpl
jge
rcr
and
es
test
popa
sub
pop
jnp
icebp
adc
(bad)
adc
mov
idiv
leave
scas
ins
jmp
sbb
mov
push
mov
sub
sar
popa
cmc
rcr
shr
pop
add
stc
fisttp
outs
ins
cmp
mov
daa
push
call
dec
xchg
test
inc
pop
rol
adc
dec
pop
das
mov
sub
lods
push
clc
pop
mov
jge
xlat
stc
mov
xchg
jmp
sbb
int3
cmps
test
outs
sub
loop
jae
adc
cmc
notrack
sub
aas
pushf
sub
fiadd
movs
movs
sbb
and
push
in
test
popa
mov
in
in
cmp
mov
test
mov
dec
push
cdq
mov
and
outs
jecxz
push
xchg
loop
loope
adc
jle
push
pop
hlt
xor
fdivr
div
or
mov
ins
shl
repz
cmp
dec
jle
pop
sub
mov
jb
push
sbb
xor
(bad)
mov
lea
xor
(bad)
test
xor
mov
sbb
adc
fcmovnbe
ins
daa
sti
call
jg
ds
out
push
xor
cmp
aad
loope
mov
out
enter
inc
push
mov
mov
xchg
out
sbb
add
and
scas
mov
das
mov
inc
jle
xchg
push
shl
scas
pop
fsub
aaa
loope
mov
fisttp
pop
lahf
xchg
xchg
fsubp
loopne
test
and
repz
lahf
test
mov
gs
mov
loopne
add
xor
lods
mov
jo
iret
arpl
sbb
mov
ss
lods
mov
(bad)
(bad)
fisub
lahf
adc
repz
pop
sbb
jnp
xchg
popa
fwait
and
mov
gs
mov
xor
xor
outs
adc
movs
mov
or
call
inc
mov
ret
dec
movs
and
sub
movs
cwde
out
ds
fwait
mov
adc
jle
sub
mov
jnp
xchg
xchg
movs
leave
bound
jge
or
cmp
neg
adc
mov
mov
jae
sbb
sbb
scas
ins
adc
retf
fs
push
adc
test
into
scas
mov
call
xlat
scas
mov
je
(bad)
jae
add
fnstenv
adc
stos
ret
push
jnp
lds
leave
test
jle
cli
cmp
pop
xchg
lods
mov
dec
dec
xlat
mov
cmp
(bad)
mov
out
je
leave
sbb
(bad)
lock
sub
add
popf
(bad)
mov
popa
bound
dec
adc
dec
sub
or
push
bound
mov
(bad)
retf
xchg
pop
mov
push
add
jg
cmps
mov
in
jmp
int3
dec
sbb
loop
dec
idiv
sbb
xchg
cmp
lock
aad
jmp
xor
mov
icebp
dec
add
sub
xor
mov
outs
imul
mov
ror
jmp
mul
jb
sub
out
push
retf
mov
ins
cmc
mov
or
cmp
call
jl
jo
ret
mov
dec
jecxz
cld
je
cmp
cmp
add
and
sbb
pop
cmp
jbe
scas
push
dec
pop
xor
nop
mov
add
fld
cmc
jbe
lock
enter
lods
gs
inc
cld
adc
int
enter
dec
push
es
cmp
call
and
adc
or
cwde
mov
pop
fdivr
and
mov
outs
call
push
(bad)
or
test
dec
inc
in
or
imul
sub
inc
inc
push
loop
mov
fnsave
xchg
(bad)
pusha
sbb
int3
pop
xchg
mov
imul
xor
jns
int
xchg
fisub
scas
addr16
cmp
jae
mov
or
jo
jno
inc
clc
aad
daa
mov
xor
jb
shl
pusha
mov
clc
jne
jge
xchg
cmp
dec
dec
xor
cmp
dec
mov
inc
mov
dec
neg
pop
popa
adc
bound
xor
nop
sbb
fisttp
sub
mov
in
push
cdq
fsub
repnz
gs
and
nop
pushf
test
retf
outs
fadd
test
test
call
mov
mov
dec
jp
add
les
cmp
mov
bound
dec
fwait
pushf
sub
mov
adc
mov
(bad)
cmp
lods
mov
loopne
add
cmp
inc
mov
in
fcmovne
cwde
fcmovnb
cmp
outs
dec
rcl
cmp
int3
adc
xchg
push
mov
cs
mov
xchg
es
jae
test
mov
outs
mov
or
and
sbb
ud0
adc
pusha
mov
out
inc
div
(bad)
xchg
loope
mov
clc
add
bound
out
(bad)
in
mov
xchg
and
add
dec
ins
fwait
test
test
inc
adc
sar
push
aaa
mov
popf
rol
call
(bad)
jle
dec
pop
xor
push
ror
out
cmp
jge
jle
gs
rcr
pop
jmp
sub
stos
push
je
idiv
popa
pop
lods
pop
dec
mov
adc
fsub
pop
aad
mov
adc
inc
pusha
mov
xchg
fs
push
movs
stos
stos
in
loopne
xor
dec
sbb
sub
cmc
hlt
fwait
xor
fsub
push
es
ffree
je
outs
loop
sub
adc
das
gs
idiv
adc
cmp
imul
outs
push
(bad)
sar
sub
leave
ret
sbb
inc
mov
or
adc
loopne
xor
out
loop
(bad)
sti
in
adc
push
push
aam
xchg
cdq
lods
out
gs
inc
inc
ins
fs
fidivr
clc
je
inc
adc
fldcw
mov
ret
nop
dec
dec
push
and
pop
movs
jmp
sahf
loopne
pop
or
sti
jmp
push
in
(bad)
add
je
nop
sub
push
fs
pop
sub
test
adc
mov
test
test
cwde
xchg
cmps
stos
mov
inc
push
mov
std
mov
enter
mov
jge
in
shl
inc
xchg
stos
not
push
pop
shl
push
outs
cwde
call
stos
xor
ja
sbb
push
mov
dec
bswap
repz
dec
inc
dec
push
inc
std
add
sti
adc
xor
or
lock
rcr
mov
xor
loopne
dec
inc
call
pop
pop
fidivr
call
mov
dec
mov
shr
sub
push
jg
retf
and
jp
sbb
loopne
mov
or
lds
mov
jecxz
cmps
push
cmp
adc
sub
push
push
stc
inc
pop
fild
push
and
mov
push
lods
and
pop
sbb
sub
icebp
adc
mov
add
sbb
xchg
mov
lods
mov
out
mov
push
retf
mov
adc
xchg
mov
xor
(bad)
pop
mov
or
fisub
dec
out
push
xlat
mov
or
inc
and
pop
cmp
clc
sbb
mov
outs
pop
push
pop
dec
dec
(bad)
ins
dec
xchg
addr16
pop
cmp
stos
(bad)
out
xor
div
sar
ficom
pop
(bad)
test
jmp
mov
iret
in
lahf
add
(bad)
add
mov
push
lea
pop
popa
(bad)
fisubr
sub
pop
repz
sahf
push
cmc
sbb
push
sbb
mov
int
loop
sar
scas
adc
arpl
test
xchg
fild
pusha
mov
rol
lods
push
mov
scas
ret
jae
mov
dec
xor
pop
frstor
out
(bad)
fsubr
cld
ret
mov
div
fisubr
movs
es
dec
loope
jae
jnp
xchg
mov
pop
lock
out
or
inc
cmp
sbb
lahf
push
and
leave
not
daa
icebp
mov
push
sbb
or
es
sub
xchg
pop
shld
jecxz
retf
inc
adc
int
xchg
jae
(bad)
xchg
push
out
shl
jno
bound
dec
popf
add
or
leave
sub
inc
mov
lahf
hlt
adc
mov
jb
fsubr
pop
mov
dec
sub
outs
fdivr
push
dec
mov
out
xor
scas
mov
aaa
or
mul
cmp
pop
ins
mov
(bad)
or
mov
arpl
lock
imul
leave
shr
sbb
ret
jmp
lds
add
cmc
mov
adc
push
pop
fdivr
daa
add
or
stos
aas
dec
dec
adc
pop
and
cmps
leave
mov
das
std
and
adc
aaa
in
rcl
in
dec
jp
stc
mov
aad
inc
daa
das
push
dec
push
dec
sub
mov
push
sbb
arpl
dec
mov
retf
arpl
dec
leave
inc
(bad)
mov
(bad)
dec
add
dec
repz
jecxz
hlt
leave
scas
(bad)
test
sub
aad
dec
or
jnp
iret
xlat
and
out
das
test
mov
and
jmp
pop
xchg
retf
call
outs
ror
mov
cmp
cdq
leave
adc
cmps
lock
aam
stos
leave
fadd
push
pop
cmc
sbb
mov
aad
pusha
mov
push
cld
add
cmc
adc
movs
xor
shr
mov
test
jmp
cmp
push
xchg
pop
push
and
and
fwait
jb
jg
sbb
leave
push
fidivr
in
push
(bad)
jmp
inc
pop
cli
(bad)
fisubr
jae
je
aam
jle
pop
inc
mov
ja
pop
fisubr
or
adc
push
mov
dec
xlat
jg
inc
fwait
pop
jle
aam
mov
add
hlt
xor
xchg
adc
cli
movs
(bad)
xor
fsubp
out
jno
xor
pusha
push
in
mov
jns
mov
jae
in
cmp
jge
loopne
dec
(bad)
xor
lods
or
sub
add
mov
aas
jle
inc
dec
jecxz
ins
in
loope
push
push
ficom
dec
cmps
ins
test
mov
adc
clc
dec
push
fidivr
jno
mov
cmp
xchg
sbb
pop
pop
or
fs
add
inc
bsf
and
jge
xlat
popf
shl
pushf
pop
inc
inc
jnp
in
shl
push
test
and
cmp
pop
mov
xchg
je
xchg
xchg
jne
mov
ficom
ffree
movs
lea
xlat
arpl
xchg
cmp
mov
fmul
add
jne
jae
sbb
push
xchg
cli
stc
or
fbld
jns
repz
mov
aaa
sub
sbb
mov
call
in
adc
jmp
aam
fadd
daa
adc
jns
and
out
xchg
and
mov
and
loop
dec
dec
jno
cmp
movs
push
xchg
pop
les
pop
iret
pop
cmp
aas
lea
enter
jns
cld
adc
ds
cmp
push
xchg
int3
inc
icebp
pop
out
xor
ins
je
int
bound
xor
rol
ret
ffree
sbb
test
cmps
pop
scas
sahf
push
jmp
aad
pop
jge
pop
pop
cmps
pop
or
add
mov
cmp
mov
cmp
fidiv
add
sub
popa
and
xchg
jne
add
pop
dec
mov
int
jne
jmp
test
dec
or
and
cs
aad
dec
int
dec
push
aad
(bad)
into
sbb
and
xor
jne
shl
add
mov
stos
ror
jge
xchg
scas
jecxz
add
ins
pop
popa
add
out
jle
xor
test
jmp
or
mov
ja
jmp
mov
aaa
adc
fiadd
xchg
adc
dec
mov
sub
popa
or
pop
js
dec
lock
mov
xor
pop
pop
ffree
(bad)
jns
push
aas
pop
pop
int
adc
jnp
push
mov
leave
sub
pop
stc
cmp
rcl
pop
jg
cmp
(bad)
clc
and
push
xchg
adc
jbe
addr16
mov
cmc
mov
and
sbb
ins
xchg
and
movs
pop
and
movs
lods
push
add
lods
sahf
dec
mov
mov
xchg
fsub
sti
mov
dec
mul
int
push
hlt
loop
or
fmul
pop
fimul
icebp
or
dec
inc
imul
hlt
shl
inc
mov
inc
call
fsub
pop
(bad)
pop
in
lods
and
fcom
cmp
xor
push
jg
idiv
cmp
mov
xchg
xor
popa
cwde
sub
mov
pop
add
imul
js
and
movs
add
or
jne
(bad)
popf
stos
add
mov
hlt
ret
hlt
int3
dec
je
mov
sbb
adc
xchg
mov
pop
aam
add
int
stos
mov
add
ror
mov
out
sub
and
es
adc
out
adc
fld
into
jecxz
pushf
fiadd
fistp
in
lahf
dec
cmp
jo
es
pop
adc
mov
cmp
xchg
sub
adc
pop
mov
std
fs
xchg
xchg
cmp
cmps
call
xor
xchg
(bad)
ja
push
add
cmps
adc
add
mov
lock
mov
inc
mov
lods
push
rol
cmps
cdq
inc
(bad)
mov
or
xor
mov
lahf
scas
xor
ins
mov
mov
popa
add
sti
mov
add
jmp
ins
and
dec
mov
das
scas
lock
int
ret
cmp
bound
cmp
fwait
or
loop
fwait
jp
bound
in
mov
mov
std
loope
cmp
fcmovnu
nop
and
xchg
or
inc
cmp
addr16
mov
rcl
jnp
push
test
mov
mov
mov
or
or
out
outs
neg
sar
sbb
jne
jge
ss
push
hlt
jns
retf
add
dec
in
das
pusha
das
stc
inc
ficom
call
btc
push
clc
adc
sar
jge
hlt
inc
(bad)
into
cld
adc
mov
retf
dec
pop
xchg
lods
dec
std
inc
and
pusha
adc
add
and
adc
cmp
sub
jg
or
popf
xchg
xchg
jecxz
cmp
jmp
mov
cmp
dec
retf
fwait
sub
inc
test
rcl
lahf
out
pop
jg
lods
adc
fs
xor
xor
mov
pop
cld
jl
push
in
(bad)
sbb
lahf
xchg
jae
je
sbb
outs
push
cmps
movs
pop
ds
pmulhw
jle
fnstenv
pop
cmc
pop
push
repnz
call
jae
cmp
push
je
pop
inc
sub
cmp
cmp
add
push
push
mov
sbb
xor
sti
mov
sbb
mov
mov
push
inc
or
sti
sbb
xor
dec
repnz
loope
mov
dec
repz
mov
out
and
stc
test
mov
pop
add
mov
enter
outs
mov
and
into
sub
pop
lods
xchg
imul
add
dec
mov
mov
mov
fiadd
test
cdq
jnp
ds
or
mov
ffreep
mov
(bad)
leave
loop
cmp
ins
ins
leave
scas
ret
(bad)
movs
mov
fstp
jmp
fwait
pop
jecxz
lock
jg
(bad)
mov
mov
out
lahf
fs
stc
stos
arpl
in
call
or
jae
aaa
shl
dec
sub
pop
scas
add
or
fcomip
and
xor
mov
imul
add
pop
cmps
xchg
dec
stos
cmp
(bad)
test
mov
adc
rol
xchg
loop
mov
add
sub
and
pop
pop
mov
addr16
adc
mov
xchg
mov
sub
outs
add
js
sub
cmp
cld
or
mov
push
sahf
xchg
push
xchg
or
adc
aas
mov
jmp
adc
mov
or
lods
jecxz
out
mov
mov
int
shl
mov
jns
aaa
sub
xchg
or
imul
xor
movs
jl
bound
mul
mov
rep
mov
loop
inc
lock
ds
mov
mov
stos
mov
pusha
mov
movs
pusha
and
sbb
(bad)
out
fucomip
push
sbb
mov
sub
nop
sbb
out
mov
call
pop
xor
les
fistp
sub
out
mov
int
mov
or
lds
enter
popa
jmp
inc
mov
mov
xor
retf
mov
xchg
xchg
(bad)
fdivr
cwde
popa
mov
add
inc
dec
in
adc
mov
sbb
jb
sti
js
aas
or
in
xor
mov
test
retf
pop
mov
jb
inc
fwait
inc
ins
retf
les
jg
scas
cmps
arpl
push
nop
cmc
rcl
(bad)
push
ss
or
inc
pop
dec
pop
jnp
cmc
push
aas
dec
sub
pop
jmp
sub
retf
mov
in
das
or
fmul
enter
jne
test
outs
test
xchg
and
dec
ins
adc
aas
push
sar
out
ficom
out
aad
js
popf
mov
mov
pop
cwde
mov
ret
imul
mov
loope
dec
int3
mov
sub
fcmovnu
sub
mov
std
out
jo
xor
rcr
cmp
push
test
sub
shl
jne
call
jns
aam
sbb
mov
sar
aad
(bad)
jbe
leave
adc
mov
int
cmp
push
or
(bad)
(bad)
lods
mov
mov
add
cmp
cmps
xchg
mov
cli
dec
fcom
pop
in
das
pop
mov
inc
xchg
pop
jge
add
and
xchg
jmp
idiv
mov
scas
fcomp
jne
clc
das
pushf
or
sub
(bad)
adc
out
sbb
mov
cmp
int3
jmp
cmps
jp
sbb
in
sbb
ins
rcl
iret
loopne
call
nop
pop
rcr
inc
stos
movs
ret
pop
scas
fcom
div
sbb
sbb
jnp
mov
dec
scas
test
or
jb
outs
mov
retf
imul
push
arpl
fist
and
fisub
aas
xchg
in
mov
bound
jbe
mov
out
loop
ins
ja
xchg
xchg
sub
scas
mov
aaa
sbb
xor
or
jns
cmp
cmp
or
xor
inc
xchg
push
leave
je
jne
(bad)
stos
in
cwde
jb
sub
pop
add
mov
sub
xlat
xchg
push
imul
lahf
xlat
jg
test
inc
dec
test
pop
aaa
lock
loop
jnp
push
std
dec
jmp
jne
jns
jmp
fidivr
ds
(bad)
push
mov
lock
ins
xlat
xor
xlat
dec
mov
mov
xor
out
int
shld
sub
push
in
dec
pop
or
adc
pop
sub
sahf
jno
arpl
pop
xchg
scas
or
mov
lods
jmp
push
push
int
adc
mov
mov
or
mov
clc
push
aas
cdq
(bad)
cli
pop
into
mov
push
jmp
mov
cmps
inc
popa
inc
leave
outs
inc
ds
push
inc
mul
ins
sti
pop
lods
push
sahf
ja
jle
and
xor
jecxz
xchg
dec
mov
push
pop
mov
shr
cmp
mov
pusha
out
inc
repz
retf
test
jmp
inc
adc
push
sti
lock
hlt
or
mov
lahf
leave
sti
shl
(bad)
xor
ret
sub
add
cmps
xchg
pop
mov
xchg
cmps
into
loope
sahf
dec
mov
aam
shl
pop
xor
add
mov
pusha
push
jp
in
outs
xchg
fdiv
cmp
popa
je
fst
pop
cmps
mov
inc
test
fiadd
ffreep
mov
cdq
and
popf
cmp
or
xchg
std
stos
movs
lea
es
sub
ins
jmp
pop
jle
fsubr
test
daa
xchg
out
dec
adc
pop
mov
or
push
mov
or
dec
inc
mov
xchg
out
pop
xor
mov
and
les
or
sbb
cmp
aaa
sbb
test
dec
lods
sbb
repz
cs
div
repnz
mov
fldcw
inc
push
hlt
xchg
pop
inc
test
cmp
ret
mov
mov
jae
and
inc
inc
push
and
getsec
(bad)
adc
xchg
push
rol
test
jne
mov
test
sbb
mov
sbb
fld
movs
enter
inc
pop
jmp
scas
out
mov
fld
push
clc
mov
or
cmps
out
dec
dec
sbb
cmp
add
xor
add
sti
(bad)
adc
pop
js
mov
cmp
and
jns
xchg
dec
inc
mov
js
pop
sub
fcmovu
sbb
dec
std
sbb
aaa
mov
sub
imul
(bad)
das
sub
out
clc
cwde
fcomp
pop
in
(bad)
push
xor
adc
sub
pop
shl
out
sub
push
mov
push
jecxz
fmul
cdq
sub
add
sub
iret
icebp
in
popf
inc
(bad)
repnz
mov
(bad)
clc
inc
xor
and
jmp
jmp
fdivr
retf
fcomp
fnstcw
lea
sbb
sub
dec
mov
pushf
in
aam
lds
pop
adc
push
das
pop
arpl
into
inc
xor
cmp
cdq
or
dec
sbb
inc
inc
nop
call
arpl
(bad)
sbb
in
xchg
cdq
int3
in
inc
imul
mov
outs
lahf
push
cdq
rcl
jp
sbb
push
test
cmc
enter
or
push
sub
inc
out
ret
inc
lods
out
sbb
mov
test
int
loop
(bad)
jp
cmp
xor
push
shr
movs
inc
xchg
jl
xchg
fsubp
mov
mov
mov
mov
into
outs
xor
icebp
cli
mov
retf
and
out
add
xlat
mov
cmps
fldpi
loope
outs
dec
push
or
cmps
ret
sub
mov
scas
rcl
dec
outs
xchg
lahf
adc
aam
mov
pop
cli
rcr
or
xchg
ins
mov
mov
and
mov
adc
mov
cs
aad
xchg
pop
js
in
clc
mov
lock
mov
sbb
stos
cmc
cmp
cmp
mov
jecxz
push
sahf
imul
aad
fwait
pop
loopne
push
dec
ret
data16
and
adc
sub
dec
inc
pusha
dec
pushf
push
data16
das
int3
ss
adc
adc
in
cmps
call
mov
jbe
aaa
and
ficom
pop
mov
sar
xchg
add
jbe
sub
dec
jmp
ss
outs
imul
clc
or
add
xchg
test
arpl
test
icebp
arpl
push
or
in
pop
xor
test
jns
dec
push
rcr
xchg
cmps
mov
inc
cmp
xchg
cmp
xchg
mov
test
rcr
popf
push
(bad)
jg
enter
jmp
(bad)
and
push
sbb
lock
lahf
fs
cmp
(bad)
cld
inc
xor
movs
adc
loop
push
xor
mov
(bad)
xlat
or
inc
fdiv
cmp
sbb
sub
jbe
or
xchg
inc
mov
mov
push
pop
and
aas
out
sbb
shr
push
loop
repnz
out
repnz
retf
pop
cmc
xor
outs
rcl
(bad)
les
les
ins
adc
int
mov
rol
je
push
xor
jecxz
sbb
dec
ss
cdq
push
imul
xchg
cmc
add
xor
out
ss
xchg
inc
dec
and
movaps
pop
arpl
shl
mov
and
xchg
das
bound
shl
shl
sar
frstor
dec
jge
idiv
dec
push
mov
inc
or
xchg
cld
test
xor
jmp
adc
imul
int
ss
push
cwde
xlat
ss
jl
push
mov
sbb
and
xchg
cdq
aad
sbb
lods
inc
jle
ret
mov
rcr
add
xlat
sahf
adc
jecxz
pop
imul
das
xor
outs
pop
es
fld
mov
fcmovne
mov
imul
push
jecxz
inc
ins
xor
dec
xor
mov
daa
xor
jae
jmp
bnd
xchg
push
retf
ss
dec
pop
ds
pop
xchg
ret
push
push
jne
adc
mov
call
inc
retf
ret
aas
aad
lea
and
into
lock
fdivr
jmp
inc
pop
or
dec
mov
sbb
pop
mov
rol
xchg
pop
xor
sbb
sbb
ds
pop
jl
cmp
fisttp
lods
leave
mov
data16
jbe
inc
sahf
call
std
in
xlat
ret
sbb
in
add
(bad)
rol
push
dec
lds
or
dec
mov
sub
lahf
push
call
gs
adc
pop
and
sbb
ret
push
add
std
cmp
(bad)
cmp
(bad)
mov
sbb
xchg
sbb
or
pusha
aad
mov
fsubr
test
call
not
sahf
fs
mov
movs
xchg
pushf
into
mov
xchg
and
ins
xchg
sub
or
push
fisub
xchg
pop
aas
test
sbb
sub
mov
xchg
pusha
ret
retf
aaa
mov
outs
or
call
fwait
sbb
mov
nop
xchg
cmp
rol
pop
push
mov
fcomp
test
mov
cmp
popf
xchg
or
xchg
loope
inc
movs
jno
sahf
repnz
aam
sti
xor
imul
mov
ret
dec
mov
mov
fisub
(bad)
test
jo
(bad)
gs
and
cmps
pop
dec
out
neg
popa
loop
sub
cmp
sub
push
nop
(bad)
xor
pop
pop
sahf
cmp
iret
pushf
xlat
push
loop
test
push
fst
imul
dec
int
lahf
push
stos
(bad)
dec
and
out
ins
push
or
in
sbb
push
daa
test
xchg
xchg
dec
outs
int
jns
aam
jp
addr16
push
inc
xor
dec
sbb
inc
push
mov
cmp
loop
not
iret
lock
pop
sti
ds
cmp
cli
fucomi
mov
adc
gs
push
rcr
jl
inc
aam
movs
popf
fisubr
jmp
bound
and
inc
sbb
shr
xor
mov
in
shl
add
dec
test
gs
and
cmovnp
sbb
(bad)
xor
scas
sub
ds
inc
pop
lods
movs
imul
add
xchg
add
daa
arpl
jg
xchg
pop
rol
add
pushf
mov
sub
or
ret
jo
mov
sub
lds
stos
sbb
mov
mov
adc
cmp
(bad)
mov
fild
push
fwait
mov
push
xor
or
dec
repz
loopne
out
iret
ins
mov
pop
mov
push
jne
or
or
mov
sbb
ins
xor
sbb
mov
call
xchg
mov
push
ds
or
jmp
xor
fisttp
mov
test
outs
xor
mov
popa
clc
(bad)
adc
out
adc
loope
inc
int
mov
lods
ds
mov
cdq
mov
ja
cs
and
aam
fild
mov
mov
fdiv
push
les
inc
xor
inc
jo
and
popa
ins
rol
sub
(bad)
mov
fucomi
(bad)
and
out
adc
xchg
and
jmp
out
scas
popa
pop
pop
or
and
xchg
cmp
mov
out
fcom
fucomp
push
adc
jns
frstor
retf
xchg
dec
adc
dec
dec
sbb
lahf
sub
xor
out
push
sub
mov
add
cmp
leave
dec
mov
cld
jecxz
inc
popa
movs
mov
sub
jp
cmp
fwait
into
ss
fsubrp
retf
arpl
sti
jl
jg
mov
sbb
cwde
mov
add
cmps
jmp
faddp
std
popa
dec
outs
cs
sub
add
popf
loopne
mov
ret
inc
cmp
sbb
pop
lahf
pop
jmp
or
push
cmp
sub
cmp
sub
cld
mov
xchg
pusha
rcl
int
mov
xor
das
mov
jp
jmp
add
aad
cmp
div
cmp
jecxz
hlt
xor
push
sub
out
push
jmp
aad
xchg
test
shl
sbb
cmp
cmp
in
and
sbb
cmp
push
mov
adc
pushw
sbb
push
jbe
jo
call
cmps
in
sar
xor
fwait
ds
pop
xchg
mov
bound
pop
mov
mov
aad
jl
fs
pop
pop
mov
sub
or
push
sbb
jns
imul
sub
rcl
dec
sbb
repz
cs
inc
sub
and
aam
(bad)
push
addr16
jb
xchg
or
test
addr16
push
mov
xor
sbb
(bad)
sbb
mov
lds
cmp
dec
xchg
mov
ret
test
aad
sub
pop
mov
push
(bad)
outs
mov
cmp
lea
sub
mov
mov
popa
mov
shl
idiv
je
ins
mov
push
shl
fild
push
push
adc
cmp
xchg
ret
xor
sbb
push
mov
xor
imul
stos
sub
sti
adc
popa
and
mov
iret
mov
in
xchg
xchg
pop
aad
and
or
movs
push
fisubr
add
push
adc
dec
outs
push
mov
js
push
into
inc
mov
add
cwde
fldenv
adc
mov
or
and
loopne
jnp
mov
into
fnsave
mov
inc
popf
adc
jle
sbb
and
ret
cmp
sub
fst
fs
xchg
adc
add
jo
sbb
lods
es
mov
sub
pop
push
mov
jae
aad
inc
and
push
adc
and
or
add
movs
dec
shr
imul
test
mov
outs
inc
pop
icebp
cmp
pop
cmp
push
lock
nop
inc
data16
add
(bad)
xor
jbe
mov
pop
or
xor
add
(bad)
push
test
xchg
xchg
mov
imul
inc
clc
xchg
or
call
jmp
and
out
adc
pop
fwait
cwde
jge
pop
jmp
or
pop
cs
dec
adc
int
adc
repz
test
jmp
xlat
or
(bad)
sti
pop
add
mov
cmp
and
mov
cmp
icebp
mov
mov
xchg
xor
xlat
cdq
ret
inc
mov
cld
movs
stc
adc
jge
xchg
sbb
jnp
push
dec
xchg
jg
inc
adc
push
and
xor
lahf
cmp
xchg
pop
cld
dec
repz
je
ret
jae
ror
lods
or
pop
push
std
and
fild
push
jne
dec
inc
push
or
ins
adc
loope
mov
mov
lods
outs
xor
fdivr
mov
outs
pop
test
jmp
jae
inc
addr16
mov
js
mov
mov
cmp
and
inc
rcr
call
mov
push
mov
mov
pushf
repnz
mov
pop
std
ins
sub
mov
cmc
fist
ret
jl
jnp
test
or
dec
fwait
mov
aas
aas
push
push
add
mov
or
lea
or
push
mov
xor
fnstsw
xchg
jmp
cdq
adc
dec
push
inc
push
adc
(bad)
icebp
dec
push
ror
ja
or
pushf
in
add
out
ret
jo
pop
adc
mov
inc
call
jecxz
bound
movs
adc
adc
mov
imul
rcl
aad
pop
cli
call
mov
mov
addr16
sub
xchg
mov
cwde
or
inc
or
dec
sbb
data16
fisubr
(bad)
icebp
and
add
jo
shr
or
cmc
test
arpl
xor
adc
mov
loop
inc
imul
es
sbb
add
aaa
call
push
adc
ds
mov
and
add
jmp
and
xlat
mov
pcmpeqb
push
add
dec
fisub
(bad)
mov
pop
mov
xor
adc
cmps
lods
in
dec
std
rcl
aad
xchg
push
push
enter
ret
push
jbe
test
popf
pop
pop
xor
and
movs
xchg
pcmpeqb
js
adc
dec
sbb
mov
sti
test
ins
and
pop
pusha
sub
xchg
push
adc
pop
retf
imul
ret
(bad)
outs
mov
sub
(bad)
jmp
xchg
sbb
mov
mov
xor
xlat
clc
call
das
ds
jl
fnstsw
repz
jmp
lahf
sbb
push
retf
dec
inc
pop
data16
in
or
mov
sbb
es
cdq
cdq
mov
inc
pop
adc
cmp
icebp
and
pop
jl
mov
mov
shl
(bad)
and
popa
cwde
fst
dec
cld
mov
aad
push
aam
cmps
jle
mov
shl
pop
lahf
xchg
pop
push
add
mov
sbb
add
xor
mov
movs
jne
arpl
repz
adc
(bad)
dec
lea
loope
sbb
pop
pop
(bad)
in
push
addr16
push
and
imul
or
dec
imul
push
ins
push
ret
sbb
dec
fadd
and
jnp
or
sub
xlat
ins
and
rcr
xor
inc
add
dec
pop
or
stos
push
aad
call
mov
int
fwait
mov
xor
inc
loopne
adc
fisubr
nop
daa
mov
inc
inc
addr16
fidivr
mov
retf
xchg
adc
xor
retfw
iret
loop
retf
add
jle
inc
jbe
sub
ds
pmulhuw
push
sar
(bad)
imul
and
test
nop
sub
and
pop
(bad)
rcl
jns
dec
mov
add
or
cmp
movs
loope
mov
aam
rol
sar
xchg
xor
add
test
nop
pop
xor
inc
ret
popf
sti
shl
cmc
jmp
inc
pop
cmps
and
pop
xor
jl
sub
test
cmps
ror
fs
and
int
mov
test
pop
ror
xor
js
mov
daa
push
add
jmp
sbb
in
sbb
(bad)
jb
mov
shl
jne
(bad)
mov
int3
imul
div
scas
(bad)
mov
(bad)
sub
inc
mov
push
dec
or
out
jae
enter
adc
push
jge
call
sahf
or
sub
add
call
cmp
sbb
rol
pop
dec
cmp
icebp
xchg
dec
lock
pop
ja
xchg
mov
in
xchg
mov
add
sbb
push
mov
das
lods
iret
dec
add
(bad)
fcmovne
mov
sar
push
hlt
ror
inc
adc
cli
ins
adc
jge
test
sub
fidivr
aas
popf
data16
pop
inc
aam
and
fwait
jb
inc
jae
add
fs
lods
fiadd
push
add
jge
push
pop
aaa
mov
and
lock
mov
ins
adc
aad
cmc
inc
clc
sub
jns
push
xor
sbb
idiv
and
sub
or
into
cwde
repnz
pop
popa
inc
pop
sti
and
out
xchg
scas
add
mov
scas
arpl
pushf
push
fmul
and
ret
loope
lds
les
pop
push
jne
push
push
push
adc
test
lahf
scas
lods
jno
cmp
repz
ret
outs
inc
pop
adc
mov
daa
pop
jle
xchg
mov
fs
les
or
xor
push
dec
call
(bad)
psllq
test
sub
into
test
cs
sub
adc
cmp
test
jecxz
cmc
fcmovu
fcmovne
leave
cmp
je
les
push
xchg
xor
xchg
dec
adc
in
push
xor
and
xlat
push
push
es
push
xchg
div
adc
fcomp
mov
jl
outs
aaa
dec
dec
icebp
sub
add
xchg
and
mov
xlat
out
jg
and
clc
adc
fist
pop
mov
je
leave
movs
lods
pushf
inc
xor
dec
mov
(bad)
sti
mov
sub
daa
jnp
shr
push
cmp
jnp
xor
out
ror
in
(bad)
jecxz
jbe
in
outs
add
stos
and
sub
jmp
add
retf
imul
arpl
mov
mov
cmp
add
ror
sub
inc
movs
adc
stc
fstp
xchg
addr16
sub
fistp
das
jno
lahf
xchg
and
test
xchg
fnsave
adc
pop
popa
jo
ret
retf
inc
mov
pop
ins
adc
xchg
ss
inc
int3
icebp
stos
aad
add
sbb
movs
inc
iret
sbb
pusha
jecxz
push
sbb
jle
xchg
mov
gs
arpl
push
sub
popf
les
ja
inc
add
lods
push
out
xchg
sub
add
arpl
gs
inc
jmp
pop
(bad)
pop
pop
lea
(bad)
and
shl
stos
sar
ret
lods
adc
data16
cmp
je
inc
cmp
push
sahf
dec
into
out
jl
jmp
jge
add
add
xor
ss
je
and
in
jmp
mov
es
jg
mov
xlat
xor
push
shl
fwait
dec
lea
dec
imul
pop
enter
ins
pop
std
rcr
mov
dec
add
leave
sub
mov
xor
mov
dec
jmp
xor
loopne
and
(bad)
(bad)
jmp
mov
ret
jl
mov
mov
std
add
fwait
xchg
frstor
into
je
and
test
push
call
sbb
sbb
not
push
cmc
int3
mov
or
into
inc
call
rcr
sbb
dec
and
mov
dec
xchg
inc
push
jae
loop
retf
imul
ret
and
adc
jecxz
cmp
mov
push
pop
add
stc
pop
ret
dec
mov
(bad)
adc
pop
jecxz
adc
dec
(bad)
jecxz
(bad)
dec
sub
test
fstp
mov
cmps
inc
cmp
and
mov
jg
dec
in
dec
dec
xlat
xor
call
sub
adc
pop
int3
out
leave
test
mov
cmp
ds
dec
loopne
xlat
loope
enter
pop
add
pop
das
stc
dec
fs
push
fchs
shr
and
cmp
fadd
(bad)
in
scas
pop
out
fild
les
add
aas
mov
sbb
mov
jl
mov
jmp
ins
xchg
push
sub
movs
and
data16
fstp
push
nop
outs
shr
push
int
stc
outs
push
icebp
mov
cmps
hlt
stos
cmp
sahf
sub
push
xchg
mov
bound
mov
mov
adc
fsubr
stos
dec
push
pop
ret
xor
push
mov
jmp
or
or
mov
lock
gs
fwait
add
or
ret
cmp
cmp
loope
(bad)
xchg
inc
fld
popf
cdq
or
cmps
xchg
push
inc
jp
ins
push
xor
pop
lahf
rcr
mov
cdq
jmp
push
sub
mov
push
or
dec
stc
clc
add
loopne
aaa
mov
mov
das
jno
std
out
xor
test
fsub
dec
retf
nop
mov
jg
movs
fisttp
in
ins
cmp
(bad)
aaa
jp
push
mov
out
in
scas
sbb
xchg
xchg
adc
xor
outs
mov
adc
fsubrp
fwait
sub
sar
xor
rol
test
cmps
outs
stos
psubb
xchg
and
cmp
mov
pop
bound
repz
call
cmps
adc
jle
lds
sbb
jmp
lahf
sub
xor
(bad)
cld
daa
fwait
mov
xlat
stc
(bad)
popf
cmp
xchg
lods
cs
mov
jns
sub
xor
in
sub
call
iret
sbb
push
imul
loope
add
daa
or
cmps
xor
imul
(bad)
arpl
mov
sub
adc
jae
bound
cmps
add
inc
ret
adc
jp
sbb
movs
dec
in
fist
jns
shl
or
loop
cs
xlat
std
in
sub
pop
cmp
jns
or
mov
push
cmps
or
sub
jecxz
iret
jmp
lods
dec
sub
or
sahf
mov
jnp
out
ins
retf
or
and
cmp
jge
imul
mov
das
movs
mov
adc
pop
pop
test
ffreep
inc
dec
in
dec
sti
mov
iret
sub
pop
out
adc
xchg
movs
test
mov
test
(bad)
stos
mov
outs
and
jae
gs
xchg
fidivr
cmp
sbb
dec
ds
cmps
dec
sbb
xchg
xor
pop
dec
mov
int3
push
bound
xchg
inc
aam
jnp
cwde
xor
rcl
and
and
sbb
fist
xor
int3
mov
repnz
add
sub
mov
cdq
sar
push
mov
int
(bad)
ss
mov
les
je
or
sub
sar
jae
test
adc
sbb
jmp
js
repnz
or
cmp
addr16
test
aad
push
xchg
mov
mov
aaa
mov
call
lea
outs
add
mov
and
mov
push
mov
loop
pop
int
test
fidiv
and
add
lock
fadd
push
and
mov
arpl
lock
add
data16
jns
lods
inc
fucom
dec
or
add
cmp
dec
fmul
xchg
sub
popf
sub
mov
push
and
jmp
sub
sbb
xor
mov
jg
imul
loop
pop
and
add
ror
lds
sbb
jmp
cs
pop
dec
ins
xchg
xchg
sbb
ins
mov
inc
es
push
inc
jno
outs
jns
jns
xor
dec
jns
scas
call
push
in
push
push
rcl
fwait
enter
lahf
popf
ins
mov
aam
mov
and
dec
int
movs
xchg
sbb
mov
add
adc
push
xchg
push
retf
(bad)
fs
fistp
in
jmp
and
ror
and
pop
loope
lock
iret
jmp
sub
fwait
adc
fwait
lock
imul
call
add
ins
jecxz
std
mov
xchg
jp
jmp
mov
outs
xor
sub
fs
fistp
jno
xor
push
cld
(bad)
int3
and
scas
leave
sbb
inc
xchg
sbb
push
jae
mov
(bad)
fcomp
aaa
push
jb
cmp
push
into
sbb
jnp
cmp
push
push
in
dec
push
jge
jbe
movs
cmp
sti
push
mov
add
mov
cld
outs
inc
out
mov
jge
(bad)
cdq
std
cmp
(bad)
jmp
test
movs
fdivrp
cmp
adc
sti
frstor
mov
adc
arpl
and
mov
movs
pop
aas
cmp
(bad)
into
sahf
adc
(bad)
push
mov
cmps
jne
push
jg
cmp
hlt
sub
out
ret
sahf
retf
test
neg
pop
pusha
push
addr16
mov
jns
cwde
xchg
test
dec
call
movs
push
push
or
lahf
out
jns
add
aad
jle
inc
imul
and
out
cld
(bad)
icebp
or
cmp
fistp
mov
jns
and
mov
sub
outs
nop
mov
movs
sbb
imul
or
aam
push
pop
jnp
(bad)
pusha
not
enter
sti
sbb
xchg
sbb
pop
mov
xor
loopne
jns
es
pop
push
js
push
sar
bound
cli
imul
cmp
dec
(bad)
pop
lock
gs
pop
xor
addr16
xor
mov
cmp
mov
je
add
fdivp
jmp
mov
fcom
retf
xor
movs
mov
xor
mov
or
mov
xor
dec
mov
cli
icebp
aaa
sti
inc
add
dec
icebp
inc
inc
repz
in
das
mov
aas
nop
aas
push
jns
sahf
dec
and
stc
es
retf
aaa
sbb
cs
cdq
pop
sub
dec
test
mov
or
imul
jecxz
loope
cwde
imul
aam
sub
call
mov
inc
xor
pop
in
mov
fcomp
ja
inc
aaa
inc
(bad)
std
arpl
mov
xor
ret
sub
jne
stc
xchg
in
pop
ins
mov
push
sub
push
ja
jmp
sti
mov
test
into
stos
mov
fyl2xp1
sub
sbb
cmp
xor
aad
enter
ror
cs
lahf
push
in
sti
loopne
pop
mov
and
ds
xor
cwde
jno
xor
mov
adc
xor
pop
mov
std
xchg
jns
jge
shl
or
test
cmp
sqrtps
vpsraw
jg
inc
jl
cmp
sbb
iret
add
cmp
aam
int3
xchg
sar
and
and
push
mov
inc
xchg
sbb
adc
mov
inc
daa
dec
imul
imul
xchg
das
xchg
lahf
pop
jle
int
mov
das
leave
addps
jg
jae
int
hlt
retf
jmp
or
cmp
in
rcl
std
cli
fstp
xor
bound
mov
cdq
aad
outs
stos
add
dec
jbe
sub
pop
push
sub
pop
ret
bound
sbb
jle
xchg
clc
push
xor
mov
sar
sahf
sub
cmps
and
outs
fs
mov
icebp
fild
jae
loope
ds
sahf
ret
or
xchg
aam
or
fsubr
and
mov
lahf
pop
add
shl
test
mov
dec
fsubr
movs
push
test
hlt
sbb
ds
sub
repnz
lods
inc
adc
hlt
ins
cmps
jecxz
sahf
pop
mov
sub
es
movs
aaa
in
pop
jle
(bad)
mov
imul
repz
jmp
or
pop
(bad)
adc
clc
mov
or
sbb
mov
ret
stc
push
xor
or
rol
jnp
jns
inc
push
xchg
pop
mov
jmp
mov
call
cmps
push
les
sbb
outs
sbb
cmps
dec
out
std
loop
aad
jecxz
xchg
add
ins
push
(bad)
jmp
mov
push
push
stos
push
leave
cs
jle
fidivr
xchg
xlat
push
and
in
cs
and
push
sub
mov
cmc
sbb
pop
inc
mov
push
out
push
pushf
gs
pop
sbb
mov
icebp
(bad)
push
cld
cmp
cld
imul
inc
pop
aad
cmp
inc
test
jmp
fwait
push
(bad)
adc
pop
or
pop
pop
imul
aaa
jecxz
mov
out
arpl
outs
call
hlt
mov
sbb
sub
ja
sub
dec
call
sbb
mov
xchg
mov
mov
push
add
sbb
inc
pop
jo
or
push
pop
push
(bad)
xor
icebp
add
pop
imul
push
and
pusha
or
aad
stos
mov
shl
mov
outs
mov
out
call
jge
mov
jne
push
scas
jae
push
mov
jmp
mov
in
call
mov
ja
mov
clc
inc
adc
test
inc
ds
inc
push
(bad)
xchg
mov
mov
bound
inc
add
ss
adc
clc
adc
sbb
sub
pop
mov
jnp
xlat
dec
or
(bad)
jl
mov
das
div
inc
inc
adc
or
sub
stos
fist
push
sub
data16
addr16
mov
jmp
out
out
mov
mov
bound
push
mov
and
mov
mov
cld
rcl
push
adc
fst
mov
retf
shl
fwait
stos
xchg
adc
test
ss
in
ins
push
dec
and
(bad)
movs
mov
jo
out
dec
repz
cs
sub
pop
stc
jecxz
pop
cmp
dec
iret
sbb
inc
ret
add
xchg
dec
mov
aam
fld
mov
inc
nop
mov
lock
fisub
cmp
push
data16
dec
mov
mov
adc
test
pop
sti
lahf
mov
ret
mov
sub
ret
das
mov
daa
xchg
out
loope
and
stc
fisub
adc
cmc
stos
push
and
mov
adc
outs
dec
mul
shl
cli
imul
inc
lock
dec
add
lods
mov
and
nop
jge
mov
xchg
mov
cmc
stos
scas
xchg
mov
icebp
fild
cmp
sbb
fst
fidiv
(bad)
pop
into
or
sub
inc
arpl
int
pop
ds
bound
clc
unpcklps
push
inc
fcomp
icebp
mov
add
push
mov
data16
push
daa
cmp
lahf
fistp
add
rol
pushf
add
mov
inc
mov
aad
mov
jae
bound
cmp
shl
inc
iret
mov
imul
cmps
pop
shl
sbb
xlat
cmp
addr16
mov
in
(bad)
adc
mov
test
push
sub
push
inc
scas
add
mov
cli
dec
dec
xlat
aas
sar
shl
mov
cdq
ds
(bad)
push
dec
sbb
out
xor
mov
dec
sbb
add
cmp
out
(bad)
xchg
mov
xor
or
pop
xor
dec
pusha
xchg
leave
imul
daa
and
gs
mov
or
into
mov
daa
mov
jns
fidivr
inc
mov
lds
ficom
arpl
in
jecxz
jb
aad
jp
xchg
je
imul
push
mov
sbb
add
mov
adc
pushf
out
pop
mov
retf
jmp
or
push
sti
and
arpl
mov
shl
sbb
or
pop
ja
iret
pop
in
loop
adc
leave
adc
fs
(bad)
and
aaa
xchg
mov
push
mov
jle
sub
and
in
in
mov
jp
jo
test
add
xor
sahf
push
jg
mov
mov
lds
imul
aaa
or
std
add
mov
imul
ss
cmc
(bad)
jae
push
into
inc
and
out
xor
push
and
stos
or
push
loop
jo
ret
jb
retf
es
cmp
mov
adc
out
sbb
adc
test
pop
(bad)
stos
test
sbb
out
jge
xchg
add
arpl
sti
mov
out
pusha
neg
sbb
fld
mov
in
sbb
shl
ss
ret
dec
adc
push
mov
hlt
jg
cmp
mov
outs
xor
pop
loope
nop
push
jl
or
sahf
jg
out
and
and
(bad)
xor
inc
and
pop
inc
mov
mov
bound
ja
test
test
in
pop
nop
aaa
push
cdq
lock
icebp
dec
cmp
in
imul
lahf
shl
xor
pop
test
in
in
xchg
pop
ret
ds
mov
inc
jb
jno
rol
fcomp
push
shl
cmp
jne
push
out
cmp
mov
add
mov
pop
ss
mov
and
pop
add
xchg
push
push
inc
int
retf
push
sbb
add
mov
inc
adc
ins
dec
cmp
mov
pop
or
ss
nop
jne
sbb
adc
pushf
shl
aaa
test
fmul
inc
jno
jb
dec
stos
adc
adc
lahf
fnsave
dec
xor
mov
push
jmp
pop
cld
fbstp
dec
js
jecxz
out
test
ja
lods
ret
popf
dec
je
in
jl
push
push
jecxz
sub
aas
fidivr
movs
ror
pop
adc
(bad)
jae
cli
and
icebp
pop
inc
cmps
sub
std
pop
hlt
ds
(bad)
mov
loop
fs
inc
xor
adc
and
in
mov
sbb
adc
das
mov
(bad)
repz
bound
xor
and
scas
add
cmp
xchg
(bad)
stc
push
or
int3
call
or
mov
add
xchg
mov
ror
cmp
mov
mov
adc
int
loope
outs
inc
push
mov
fisub
mov
and
movs
lods
fdivrp
loop
leave
xchg
and
or
inc
or
pusha
addr16
dec
popa
add
ss
rol
mov
pop
int3
jmp
test
retf
loope
dec
icebp
mov
push
jae
inc
xchg
push
sub
cmp
into
or
iret
jmp
frstor
repz
pop
imul
push
xor
fcomp
addr16
add
and
leave
in
lods
push
dec
repnz
lds
jecxz
cld
neg
icebp
mov
aas
pop
fs
call
adc
cld
xchg
sbb
pusha
in
xchg
inc
push
jg
sub
nop
dec
mov
mov
int
jmp
lods
xchg
bound
cmp
dec
shl
(bad)
mov
sti
(bad)
popf
push
xor
mov
lea
inc
dec
stos
ds
fstp
cmps
sbb
in
cmc
div
add
call
ret
mov
lods
mov
cmc
pop
mov
loopne
mov
sar
lods
xchg
daa
push
cmp
jl
push
push
cld
out
pop
(bad)
aad
imul
sub
lds
inc
aam
xchg
cdq
jo
fdiv
xchg
addr16
or
add
dec
mov
and
ror
inc
or
fwait
ds
pop
stc
call
mov
iret
movs
xchg
lods
mov
jmp
stos
push
sbb
ret
fistp
cld
cmps
mov
cmp
mov
rol
aad
add
std
xchg
push
in
scas
cdq
in
out
rol
cmp
mov
retf
js
push
push
bound
mov
nop
fcmovb
pop
repz
pop
data16
scas
stos
pop
dec
xor
ds
int
mov
int
lods
imul
xlat
hlt
xacquire
outs
in
stc
mov
sub
xor
add
sbb
xor
jbe
add
mov
in
mov
mov
mov
ja
sti
loop
fimul
or
and
jbe
ss
lods
pusha
sbb
(bad)
pop
ret
add
or
pop
lea
jge
fldcw
add
lods
(bad)
iret
and
or
shl
jp
cmp
add
cmp
pop
mov
retf
sahf
arpl
clc
xchg
retf
xchg
leave
mov
sub
hlt
adc
sbb
sub
mov
out
mov
iret
inc
inc
mov
test
ins
sti
dec
cli
sbb
rol
mov
aas
clts
and
cmp
add
cwd
mov
push
jne
call
int3
push
pop
stc
neg
loopne
idiv
ror
adc
popf
sar
jmp
push
inc
hlt
push
adc
cmp
push
ds
inc
and
in
jp
add
retf
and
and
mov
daa
fs
adc
adc
dec
xchg
out
sbb
popf
push
mov
int3
and
sbb
mov
mov
(bad)
adc
push
retf
(bad)
inc
repz
xchg
ficomp
cmp
and
cmovg
and
push
lahf
cmp
repz
outs
xor
fs
shr
jbe
push
inc
pop
xor
ins
imul
call
pop
inc
ss
shl
and
mov
or
sub
mov
repz
sbb
mov
adc
mov
add
cmp
in
sub
addr16
mov
lods
cmps
or
es
icebp
pop
popa
add
(bad)
stc
mov
push
and
push
jg
or
mov
mov
jo
inc
jns
aaa
mov
cmp
js
(bad)
cmp
or
cdq
popa
adc
ins
cmp
mov
add
test
retf
and
jno
hlt
jg
mov
mov
sub
shl
lahf
xor
mov
imul
or
(bad)
(bad)
in
aaa
push
add
mov
and
dec
inc
xchg
or
push
mov
pop
je
mov
loope
mov
inc
sti
mov
cli
push
xchg
mov
push
xchg
pop
enterw
sub
mov
daa
dec
mov
out
daa
stos
mov
fwait
mov
sub
pop
adc
test
or
xor
pop
and
sub
retf
sti
(bad)
rol
iret
cmp
jnp
pop
push
add
inc
shr
fistp
sbb
mov
inc
(bad)
lods
out
ins
mov
out
out
mov
jb
dec
shl
stos
loopne
gs
data16
or
retf
pushf
xor
adc
in
adc
das
xchg
push
push
mov
cdq
fisubr
int
mov
jl
push
fs
leave
cmc
add
in
sbb
data16
cmp
adc
xchg
lods
bound
mov
and
cmps
and
cmp
popf
mov
dec
rcl
sbb
out
dec
or
mul
or
bound
sbb
rcr
and
loop
add
mov
sub
mov
fimul
and
aad
add
lds
sbb
in
test
mov
inc
test
push
add
xlat
imul
rcl
jns
popf
and
in
imul
mov
outs
ja
iret
or
push
or
and
ins
fwait
sti
stos
jge
add
add
mov
mov
pop
(bad)
mov
cdq
jo
sub
push
or
lahf
inc
adc
imul
jo
xor
push
ds
call
mov
retf
out
and
stos
out
pop
mov
neg
rcr
and
push
sub
xchg
and
jp
rol
sbb
jg
mov
imul
aam
loope
out
add
repz
pop
(bad)
test
test
inc
sbb
sub
shr
std
ss
in
xor
cmp
fucomi
pop
(bad)
xor
dec
pushf
lahf
cmp
ret
nop
xchg
(bad)
test
dec
popf
sub
(bad)
repnz
or
in
out
pop
mov
push
int
or
retf
and
loopne
repz
adc
cmc
xor
fcomp
pop
mov
je
fsubr
mov
imul
jnp
lds
add
dec
fs
xlat
mov
push
and
xor
into
ins
clc
sbb
imul
inc
sahf
(bad)
jmp
addr16
sti
mov
mov
stos
mov
adc
test
or
push
dec
out
arpl
push
mov
jge
cmp
(bad)
aaa
and
call
inc
xor
fst
fadd
das
pop
sti
enter
add
clc
pop
iret
fst
xlat
fstp
add
mov
cdq
cmc
inc
jbe
adc
cmp
iret
adc
mov
push
cmc
jl
call
dec
sbb
bound
dec
mov
xchg
shl
cdq
fs
sbb
retf
and
xor
jo
xchg
pusha
call
icebp
sbb
lods
mov
mov
mov
popa
push
mov
or
imul
cmc
sbb
cmc
dec
pop
or
mov
lods
loope
and
stos
mov
pop
fcom
out
test
mov
mov
scas
jbe
xchg
xchg
stos
fimul
pop
xor
(bad)
mov
or
and
jb
or
mov
xor
bound
mov
and
xchg
add
in
imul
pop
mov
fs
jle
lods
data16
fdiv
pop
mov
push
stos
scas
dec
pop
retf
or
and
and
pop
and
jl
(bad)
mov
popa
call
sar
cmpxchg
cmps
aam
and
mov
fwait
enter
sbb
scas
js
in
pop
bswap
in
xchg
inc
cwde
std
add
fwait
mov
lods
js
inc
jl
and
sahf
call
repz
inc
adc
cmp
sbb
add
out
retf
repz
mov
shl
das
push
sub
adc
out
push
aad
lods
movs
retf
cmp
push
sbb
into
push
ror
lods
inc
test
(bad)
cmovns
mov
das
mov
xor
xlat
out
mov
or
test
fs
mov
mov
out
pusha
cmps
iret
xor
mov
call
mov
cdq
imul
sbb
in
cmp
or
sub
xchg
adc
idiv
bound
inc
int3
scas
ss
loope
dec
pop
cmp
cmp
mov
aam
and
pop
xchg
std
push
mov
or
adc
mov
xor
pop
add
sub
pop
imul
inc
imul
pusha
pop
pop
outs
lods
jecxz
jnp
push
test
in
jo
aam
pop
dec
inc
pop
or
inc
lods
and
sar
pop
jae
sti
cmps
inc
out
lds
xlat
out
cmp
sbb
push
mov
mov
adc
jge
call
sub
mov
jmp
mov
fidivr
repnz
inc
mov
lea
aaa
dec
cmps
pusha
out
push
in
mov
js
sub
stos
loopne
inc
ins
cmp
mov
or
cmp
mov
push
stos
ins
idiv
inc
or
dec
(bad)
test
int
push
cmps
or
or
and
push
push
sub
enter
imul
inc
repz
and
xchg
sbb
pop
and
leave
retf
sub
hlt
sahf
mov
jb
pop
test
cmps
or
xchg
lahf
fst
inc
cmp
rcl
pop
sub
outs
push
pop
cmp
push
pushf
jmp
jmp
inc
and
test
xchg
xchg
btr
(bad)
pop
xchg
jg
cs
cmps
fiadd
sbb
dec
inc
daa
cli
mov
pop
cmps
adc
popw
push
cmp
sbb
pop
push
or
(bad)
lahf
lods
xor
pop
movs
mov
cmp
sub
hlt
sub
aam
(bad)
div
mov
xchg
push
mov
push
xor
cmp
lods
mov
xchg
jmp
stos
fimul
dec
sbb
pop
aas
lods
aaa
jecxz
mov
sbb
in
adc
xor
pop
adc
jno
jae
inc
mov
test
nop
bound
sub
scas
mov
xchg
icebp
popf
jp
adc
or
mov
mov
pop
and
imul
imul
sub
ja
stos
or
cmp
and
imul
pop
and
clc
mov
fldcw
jmp
sti
aam
or
mov
cmp
xor
dec
pextrw
js
xor
xchg
xchg
cmc
mov
or
xchg
mov
je
mov
cwde
mov
repnz
popa
scas
enter
das
cwde
xchg
lock
retf
cmp
out
mov
jp
xor
sub
mov
cmp
xor
xchg
mov
loope
sti
addr16
adc
ins
adc
mov
push
clc
cmp
sar
pop
out
pop
jmp
or
jno
sahf
add
cmp
fwait
mov
int
(bad)
jb
leave
data16
sub
xchg
xor
mov
jle
jp
and
mul
test
clc
push
sub
shl
call
add
je
mov
xchg
jns
mov
mov
add
(bad)
pop
cmp
jno
or
sti
cmp
(bad)
jnp
or
lods
or
xor
push
cld
pop
push
xchg
xor
xchg
inc
sub
mov
sar
iret
sbb
pop
mov
sahf
mov
and
sbb
push
xchg
xor
and
pop
(bad)
(bad)
push
fldcw
mov
in
sub
add
dec
movs
or
mov
jl
cdq
mov
mov
jno
fisubr
or
outs
push
int3
mov
sti
pop
xor
outs
mov
adc
clc
(bad)
jmp
inc
xor
sbb
sbb
xchg
add
cmp
cmp
dec
and
in
popa
mov
stos
cmp
mov
cmp
rcl
mov
call
mov
mov
shr
sub
pop
retf
stc
in
pop
xor
dec
fistp
and
mov
repz
cmp
enter
inc
lahf
dec
in
retf
or
adc
fist
es
pusha
clc
(bad)
jae
xchg
(bad)
adc
in
pop
in
adc
cmp
sar
xor
mov
movs
fcomp
jg
cmp
mov
sub
mov
addr16
jne
cmc
mov
(bad)
(bad)
push
jae
jmp
pop
adc
pop
enter
(bad)
cli
dec
fst
push
inc
dec
xor
enter
jl
fisttp
push
(bad)
fild
push
adc
sub
mov
ds
adc
xchg
popa
mov
mov
pop
jns
ret
dec
push
loope
push
call
mov
dec
sbb
mov
jne
popf
aam
xchg
sbb
in
fsub
and
fild
loop
sbb
in
lea
mov
xor
(bad)
push
pop
inc
add
mov
push
sbb
sub
out
inc
or
outs
push
je
loopne
out
xchg
test
sub
sub
dec
xor
cmp
add
inc
jmp
or
dec
scas
dec
das
fcmovb
push
xchg
mov
fcomip
add
pushf
and
cwde
lahf
add
push
retf
sbb
jns
scas
add
mov
scas
push
and
jle
idiv
adc
out
stc
rcl
xchg
inc
pop
jle
and
add
inc
cwde
rcl
xchg
test
adc
pop
test
scas
cmp
jmp
mov
fstp
cli
dec
lahf
test
stos
loopne
rcr
add
xchg
inc
jmp
dec
ss
clc
and
jb
aam
lods
ror
pop
mov
pusha
fwait
jo
sahf
jge
dec
popa
xor
sahf
inc
jns
adc
dec
inc
pushf
jno
or
cmc
xor
and
add
mov
inc
imul
cmp
mov
dec
shr
sbb
sub
cmp
sbb
add
fnstcw
ins
dec
push
inc
xor
dec
jbe
stos
push
jg
call
repnz
leave
aas
hlt
sbb
or
xchg
fisttp
movs
cmp
sub
(bad)
out
mov
pop
adc
push
sub
mov
stos
add
(bad)
in
test
enter
cmp
loopne
add
repnz
push
pop
mov
jecxz
pop
ror
or
xchg
push
inc
mov
adc
cli
mov
inc
mov
pop
(bad)
clc
mov
mov
aam
push
popa
sbb
in
or
or
jle
adc
adc
icebp
std
out
jge
outs
(bad)
mov
adc
not
mov
adc
sub
stc
jmp
sub
and
and
cmp
retf
push
arpl
ret
push
sbb
lods
call
nop
mov
push
xchg
ins
out
outs
sbb
mov
popf
jg
jno
pushf
out
sub
fwait
mov
or
jmp
push
mov
jb
pavgb
shl
je
push
ja
mov
xchg
mov
jecxz
loopne
mov
addr16
jae
into
call
ins
cwde
mov
pop
(bad)
cmp
xor
sahf
ins
mov
push
mov
jge
hlt
push
mov
mov
ror
call
jge
cmp
loope
stos
xor
repz
adc
jmp
aaa
sbb
daa
pushf
imul
pushf
mov
mov
jmp
shl
stos
mov
rcr
shl
mov
inc
pop
(bad)
rcl
push
stc
jb
sub
xchg
and
sub
xchg
cmps
xchg
pop
adc
or
aas
mov
in
adc
sub
push
mov
rcr
je
test
jmp
imul
mov
pop
xchg
lea
leave
or
(bad)
in
dec
bound
mov
call
outs
js
dec
sub
cmp
cmps
sub
jmp
cs
cmp
mov
aam
scas
clc
jmp
mov
or
std
lds
fld
sti
jle
push
scas
out
aam
cmps
out
ins
jle
ret
jbe
jmp
inc
jecxz
rol
movs
sbb
push
add
adc
in
int3
js
fisub
and
push
inc
add
cmc
sbb
jne
mov
sub
div
or
xor
dec
rcr
ficomp
std
pop
or
bound
vzeroall
ja
jb
dec
rol
cdq
pop
stc
jae
hlt
mov
mov
lods
aas
imul
test
xchg
or
xchg
stos
cmp
out
mov
jnp
push
out
adc
cmps
adc
cmp
cmp
mov
fld
cmc
pop
mov
adc
aad
ins
aaa
cmps
push
out
push
jnp
pop
(bad)
sub
sub
jmp
jb
in
outs
cmp
mov
rcr
ret
int
and
ret
iret
or
mov
or
clc
rcl
cmp
mov
or
jno
or
push
cld
and
aad
outs
dec
cli
movs
icebp
fisubr
mov
adc
inc
(bad)
addr16
sbb
add
cmp
and
dec
pushf
rol
fld
dec
xor
pop
push
mov
int
popa
dec
loop
into
jecxz
lods
jle
or
outs
inc
dec
adc
jg
idiv
jo
cmps
xchg
icebp
ins
xchg
dec
xchg
jbe
adc
add
sahf
data16
retf
cmc
push
call
add
in
pop
xchg
ret
jno
jbe
call
data16
inc
mov
mov
pop
adc
test
loope
(bad)
in
pop
inc
dec
aaa
add
jnp
fstp
mov
pop
call
fadd
jg
xchg
mov
out
inc
in
mov
xor
cwde
shl
aam
(bad)
jmp
mov
jb
pop
shl
mov
sti
sbb
ret
(bad)
adc
scas
add
or
inc
test
in
pop
popa
mov
mov
dec
data16
sbb
push
pop
xchg
repz
jns
or
test
add
sub
pop
stos
mov
mov
pop
fmul
fistp
pusha
sbb
jmp
or
mov
mov
cli
cmp
jge
cmp
xlat
popa
fwait
out
pop
pop
inc
shl
pop
iret
loopne
fldenv
repz
mov
jl
mov
pop
add
push
(bad)
in
fisttp
lods
dec
adc
out
outs
inc
add
sbb
inc
in
cmps
jg
das
sbb
jecxz
popf
or
inc
mov
std
iret
mov
(bad)
sbb
(bad)
mov
pop
add
lock
or
or
inc
shl
in
add
mov
xchg
je
inc
pop
mov
or
jns
push
arpl
das
fs
mov
xchg
mov
ds
jne
jne
lock
xor
int
fdiv
or
daa
xor
or
add
out
sub
(bad)
push
ror
xchg
pop
stos
adc
mov
ret
push
je
cmp
mov
out
cmp
imul
aas
inc
shl
mov
int3
dec
rol
jp
rcr
push
pop
mov
mov
and
inc
or
add
neg
lods
enter
in
push
aam
inc
pop
fidiv
sar
mov
xchg
xor
stc
(bad)
ficom
test
sti
sti
sbb
xchg
sub
pop
hlt
cmp
call
cmp
in
fcomip
and
mov
hlt
ss
js
js
inc
mov
outs
add
cmp
mov
repz
sub
pop
pop
jae
pop
xor
shl
(bad)
push
sbb
idiv
in
mov
xchg
mov
sbb
das
sbb
in
fiadd
aaa
(bad)
inc
test
mov
pop
fiadd
cmps
mov
xor
nop
in
mov
dec
retf
mov
sub
call
dec
ja
and
imul
cmp
inc
xlat
mov
and
leave
dec
inc
adc
in
shl
push
cmp
adc
push
xchg
mov
jmp
lods
dec
add
mov
fs
popf
inc
jne
scas
sbb
fidivr
mov
or
or
shl
mov
mov
nop
xor
cwde
xchg
jl
lea
mov
xchg
adc
mov
je
jnp
jb
outs
loopne
in
mov
cmp
mov
jns
sbb
xchg
push
ins
fsub
bound
push
xlat
out
div
retf
imul
neg
jmp
sbb
sbb
popf
push
mov
sbb
jmp
out
and
jnp
lds
leave
mov
mov
push
jne
mov
mov
mov
push
dec
mov
push
cmps
push
icebp
cwde
loope
(bad)
icebp
call
xor
(bad)
sub
fldl2t
mov
inc
dec
add
fwait
call
out
pusha
repz
cmps
dec
les
ins
into
mov
pop
adc
pop
add
inc
push
or
mov
and
mov
nop
add
lods
outs
out
ja
push
mov
sub
repnz
cmp
adc
dec
fcmove
inc
mov
je
dec
neg
push
mov
or
dec
add
sub
xchg
cmp
ds
xor
pop
iret
loope
push
xchg
mov
sub
pop
ss
aas
fdiv
cmp
ret
icebp
mov
leave
ins
push
ja
push
xchg
imul
outs
fwait
push
enter
mov
aas
mov
inc
jb
or
aad
mov
mov
cmp
inc
sub
and
aad
xor
ds
ret
(bad)
fsub
loop
sbb
xor
xor
push
xor
movs
sbb
out
xor
mov
jl
sub
fnstenv
and
(bad)
sbb
fsubrp
mov
lods
icebp
aaa
push
out
ss
sbb
push
mov
jae
and
jno
jb
out
push
sar
xor
ror
dec
mov
js
int3
and
push
aad
xor
sub
xchg
test
pusha
pusha
int3
jle
push
xor
mov
adc
and
cmp
mov
inc
jp
js
mov
lock
push
jae
loope
scas
pop
clc
sbb
jge
mov
jb
cvttps2pi
mov
sbb
add
xchg
mov
inc
mov
out
hlt
add
push
and
mov
mov
pushf
add
lods
sahf
clc
sub
and
pop
(bad)
(bad)
fs
gs
pop
stos
in
lds
and
loopne
addr16
mov
sbb
add
cmp
fst
movs
push
test
adc
int3
test
(bad)
and
xor
ins
in
jecxz
in
or
movs
dec
mov
lock
jns
add
lea
clc
pop
xchg
je
xor
cmps
test
fs
outs
add
push
cld
jno
in
or
add
lock
pusha
(bad)
loop
mov
mul
mov
loop
mov
arpl
sti
test
fwait
pop
int
les
adc
fidivr
enter
mov
gs
in
mov
mov
aaa
sbb
mov
fdivr
test
ins
push
cld
lahf
mov
repnz
mov
pop
xor
add
jae
push
enter
dec
leave
and
ins
xlat
sbb
out
push
in
pusha
in
jno
mov
mov
icebp
mov
and
int
adc
sbb
mov
scas
sbb
mov
ret
xchg
inc
popa
lods
movs
loop
loop
dec
(bad)
mov
stos
push
popa
mov
scas
adc
pop
call
shl
mov
ror
ss
out
dec
aaa
add
scas
aad
movs
inc
leave
repnz
daa
push
movs
leave
cld
jle
jo
xor
iret
xor
loopne
ins
cmp
add
lahf
inc
fdiv
pop
and
lock
mov
dec
pop
jb
fidivr
in
imul
cs
in
aad
fiadd
add
xchg
add
mov
daa
ins
add
push
loopne
sbb
mov
xchg
lea
xchg
xchg
xchg
mov
mov
test
arpl
rcr
bound
xor
adc
jno
iret
das
sbb
(bad)
jge
or
push
cmp
and
mov
retf
out
push
xlat
mov
leave
popa
mov
cmps
mov
cmp
sub
sub
test
les
shr
ss
cli
jge
fild
int
add
(bad)
inc
pop
xlat
inc
aaa
xlat
jecxz
adc
aaa
push
cmp
inc
(bad)
adc
mov
outs
cwde
enter
or
(bad)
jmp
inc
inc
lods
or
dec
pop
out
push
scas
pop
loope
pop
lds
stos
(bad)
sbb
add
xchg
xchg
jg
xor
mov
pop
sti
dec
pop
pop
arpl
dec
mov
push
mov
int3
jo
rep
aad
jb
stc
and
xor
xchg
lds
movs
stos
pop
inc
sbb
lahf
jmp
fsub
fadd
je
gs
pop
popa
add
mov
cs
sbb
lds
xchg
aas
(bad)
enter
jno
xor
retf
cli
jl
inc
in
fild
retf
popf
iret
add
dec
inc
movs
jp
and
sti
arpl
dec
adc
and
(bad)
fsub
call
mov
clc
lea
or
(bad)
cli
out
sbb
popa
adc
mov
and
xor
xchg
mov
lods
nop
jns
pop
adc
or
(bad)
lock
lods
add
pop
fidiv
add
test
aas
daa
loop
shl
hlt
add
sti
add
push
in
or
and
fst
cmp
sub
scas
mov
loopne
jb
add
ins
mov
sub
pop
jmp
popa
jo
cmp
in
push
fisttp
test
dec
push
call
cmp
push
sti
push
mov
cmp
call
cwde
add
imul
xor
test
ins
lock
in
push
jecxz
push
mov
ja
cwde
mov
or
mov
lea
bound
popa
sbb
(bad)
movs
sub
mov
ret
and
iret
pusha
test
dec
xor
js
shr
inc
jmp
push
nop
(bad)
mov
dec
test
sbb
xor
pop
jmp
jg
xor
cld
xchg
inc
mov
jbe
mov
pop
mov
jecxz
sahf
jle
push
movs
icebp
lahf
ja
mov
xor
jp
pop
ins
aaa
pop
mov
loopne
jmp
js
mov
cs
mov
or
mov
add
shl
mov
push
(bad)
xchg
mov
cld
or
data16
adc
sub
pop
jl
fwait
jmp
fist
jmp
push
jae
sbb
sub
mov
ins
rol
lfs
xchg
(bad)
pop
repz
repz
or
xchg
in
dec
or
xchg
or
test
mov
sub
and
pop
sti
sub
pop
jl
pop
jecxz
(bad)
sub
and
aas
push
push
or
xchg
fucomi
mov
cld
sbb
das
imul
std
inc
imul
jmp
push
nop
adc
test
cmc
lods
loopne
ret
ret
sub
xchg
add
es
ja
out
cmps
fimul
push
hlt
stos
pop
enter
xor
mov
sbb
clc
movs
jmp
cld
and
push
in
push
bound
lahf
call
xor
adc
dec
mov
sub
add
shl
outs
sti
pusha
pusha
stos
xchg
and
(bad)
mov
add
xor
xor
mov
aaa
repnz
leave
sbb
test
mov
xchg
add
xchg
popf
arpl
xchg
cmp
jae
mov
push
iret
push
mov
fisubr
idiv
add
add
sbb
imul
xor
movs
or
js
or
fwait
(bad)
ror
loop
mov
or
sbb
scas
mov
stc
rcr
gs
push
enter
or
jecxz
int3
push
cmp
jae
or
mov
push
int3
adc
xchg
retf
push
add
retf
out
and
enter
lahf
mov
leave
div
pop
ja
xor
retf
push
test
mov
(bad)
shr
(bad)
in
xor
mov
adc
dec
popa
mov
loop
loopne
cmp
stos
call
xchg
jno
das
lods
push
sbb
(bad)
test
jo
mov
pop
aas
arpl
mov
jle
and
sub
loopne
inc
lods
jg
pop
gs
pop
int3
mov
test
push
pop
repz
ror
fiadd
mov
aad
stos
es
imul
stos
xor
and
jmp
sub
pop
loope
daa
mov
pop
(bad)
ror
xchg
ret
mov
shl
out
inc
and
or
iret
jns
adc
sub
mov
mov
mov
sub
fdivp
mov
call
daa
and
cmp
scas
test
imul
mov
jl
mov
mov
pop
dec
inc
fcomp
test
cmp
lock
xlat
sbb
retf
dec
cmp
mov
sbb
push
gs
cmp
(bad)
mov
mov
stc
or
in
cmp
xor
cdq
add
push
idiv
dec
or
jle
dec
test
push
das
shl
bnd
std
xchg
mov
dec
lahf
or
sub
inc
pop
fsub
push
cmp
(bad)
jmp
mov
push
add
push
cmc
jb
mov
mov
add
xlat
ret
imul
aas
test
cli
aam
call
ss
scas
sub
mov
fcmovne
mov
aas
outs
mov
retf
retf
cmc
outs
xlat
popa
movs
data16
cmps
cmp
dec
pop
adc
sahf
addr16
outs
jnp
retf
(bad)
pop
dec
pop
cmp
dec
cmp
xor
pop
pop
jo
and
mov
adc
push
cmp
nop
js
mov
fsub
cmp
inc
aam
cmp
push
loop
cs
std
or
cmp
popf
push
mov
popf
xchg
pop
fisttp
(bad)
or
clc
sbb
push
xor
leave
dec
xchg
ja
jo
imul
mov
push
cmp
push
popa
sbb
in
inc
daa
das
dec
movs
retf
jns
movs
or
jbe
jnp
pop
jb
(bad)
mov
mov
stc
data16
lock
test
add
stos
lds
fmul
push
stos
repz
stc
cmps
xchg
fst
adc
test
adc
stos
fdivr
fsubr
push
inc
push
cmp
push
add
popf
aas
mov
sahf
(bad)
jle
mov
inc
or
xchg
in
rol
jmp
and
inc
inc
ret
add
jl
add
scas
jmp
jno
adc
mov
cwde
or
test
and
sub
repz
dec
sub
clc
fdiv
rol
or
pop
jg
add
cmp
cwde
int3
popa
outs
jge
push
lods
cmps
mov
int3
outs
dec
mov
stc
pusha
ins
mov
cld
xchg
push
xchg
jnp
sti
push
shr
sub
movs
aad
push
dec
jae
shl
nop
add
shr
movs
pop
jg
into
adc
sbb
idiv
mov
pop
push
adc
xor
add
imul
adc
retf
cmp
or
mov
jbe
fs
hlt
inc
(bad)
scas
in
fdivr
cmp
pop
outs
mov
test
out
and
add
movs
addr16
rcl
pusha
sbb
push
push
call
ja
(bad)
retf
dec
cmps
aaa
push
jl
in
outs
cmp
adc
ja
neg
data16
call
dec
aam
push
xor
out
aam
movs
dec
aas
push
xchg
lea
push
mov
sbb
pop
or
dec
sti
jbe
pusha
stc
dec
xchg
mov
(bad)
xchg
dec
in
sbb
je
lods
jo
(bad)
push
sahf
add
out
aam
out
cmp
jnp
sbb
(bad)
lods
mov
mov
bound
retf
xlat
inc
adc
cld
call
call
(bad)
imul
hlt
dec
push
xor
rcr
lahf
out
loopne
jb
aas
fistp
jb
jae
cmp
into
sbb
jb
adc
cmps
shr
in
fldenv
shl
push
xor
cdq
adc
iret
xchg
sub
pusha
sub
fisttp
push
nop
or
(bad)
jb
adc
leave
js
xchg
and
dec
je
lock
cdq
add
jg
scas
(bad)
(bad)
aaa
es
sar
mov
(bad)
xlat
jp
cmp
push
dec
sahf
xchg
xlat
jl
lds
aam
pop
(bad)
in
mov
inc
cmp
sbb
das
sub
or
sbb
shld
add
or
add
int
sub
jne
push
push
jmp
out
adc
test
test
push
mov
cmp
mov
add
out
sbb
push
test
int3
pop
adc
pop
inc
add
cmps
sbb
mov
aaa
ror
pop
inc
paddq
or
outs
cmps
xor
and
test
xchg
jmp
jo
ins
mov
ret
xchg
hlt
neg
aas
fld
push
push
jne
imul
jl
mov
lods
jp
mov
sbb
dec
dec
pusha
fisttp
fsub
fimul
xchg
cdq
push
inc
and
mov
call
pop
cmc
les
xchg
and
sahf
mov
ins
fcom
xchg
arpl
pop
push
mov
pop
scas
pop
leave
in
cmp
push
add
inc
add
int3
dec
stos
imul
call
ins
inc
call
and
or
mov
aas
es
xchg
outs
push
iretw
jp
push
ffree
ret
data16
ja
mov
in
fldenv
xchg
dec
xchg
shr
loope
mov
movups
push
nop
rcl
inc
lea
xchg
idiv
dec
push
cwde
push
cmp
xchg
dec
cli
xchg
push
dec
inc
lods
adc
dec
mov
dec
in
push
imul
adc
xchg
js
inc
push
pop
push
rcl
imul
scas
(bad)
xchg
sbb
sub
pop
mov
push
jae
push
cmps
fisub
push
aas
ins
mov
rcl
add
and
repnz
out
xchg
cmp
adc
cmp
inc
jbe
pop
mov
ins
or
sbb
sbb
sub
icebp
scas
add
stos
shr
sub
jp
int3
fst
or
cmp
sub
imul
inc
dec
pop
call
nop
dec
cli
xor
rol
pop
mov
mov
or
jp
mov
outs
pop
sbb
mov
mov
sbb
mov
sbb
pop
mov
test
jg
test
jp
fdivr
enter
dec
je
dec
xor
cmp
retf
sub
les
scas
push
lds
mov
hlt
retf
mov
push
fnstsw
(bad)
dec
push
or
sahf
repnz
cld
sbb
dec
ret
push
mov
pop
(bad)
mov
sbb
cs
or
fdiv
movs
xor
gs
stos
adc
call
xchg
lock
movs
bound
stos
loopne
xchg
pshufw
stc
jl
xlat
js
(bad)
sub
repnz
push
sahf
add
ror
jmp
pop
clc
imul
int3
pusha
pushf
cmp
pop
xor
outs
and
ficomp
jmp
or
push
getsec
push
adc
jmp
xchg
cmps
inc
iret
inc
test
ret
cmp
(bad)
ja
and
mov
call
dec
xlat
mov
jp
test
sbb
scas
cmc
or
cmps
push
adc
fild
xor
and
mov
imul
jle
retf
xchg
out
or
in
add
mov
sub
push
and
xor
lahf
ss
adc
pop
ret
inc
xchg
mov
or
shl
xor
jecxz
pop
movs
add
movs
mov
mov
clc
ret
or
cmp
cli
enter
ins
inc
cmps
rcl
jno
adc
(bad)
sub
pop
inc
sar
xchg
sahf
mov
xor
dec
fcom
aad
(bad)
ds
arpl
ja
in
xor
adc
cli
ret
test
pop
call
js
mov
scas
ins
jl
fimul
imul
les
cli
movs
pop
mov
jb
call
arpl
fcmovnbe
pushf
sti
test
scas
je
jg
sub
addr16
jmp
int
xchg
das
sub
push
les
xchg
mov
cld
aad
aam
data16
icebp
test
or
mov
(bad)
out
bound
mov
jo
xchg
pop
test
sub
mov
outs
mov
dec
stos
and
inc
cs
fnsave
jl
test
xor
or
cmp
ret
push
stos
movs
pop
test
mov
rcl
ret
lahf
inc
js
add
mov
fsubr
push
aas
and
cmp
or
ja
iret
call
jecxz
call
cdq
das
dec
xor
mov
cmc
call
mov
push
sahf
mov
loopne
in
mov
xchg
push
retf
mov
(bad)
cdq
add
xchg
stc
cmps
dec
mov
xchg
clc
or
jge
pusha
test
and
push
jnp
popa
retf
inc
inc
loopne
jecxz
fisubr
adc
loope
loopne
dec
cld
ror
sub
imul
cmp
sahf
out
mov
cmp
jle
test
scas
lds
xchg
js
mov
fimul
jns
cmp
cmp
in
pop
imul
cs
xchg
scas
or
xchg
jae
fsubr
cmp
aaa
mov
stos
lods
js
in
jecxz
mov
push
jle
(bad)
cwde
or
mov
pop
ror
in
add
sahf
call
inc
call
mov
(bad)
imul
xchg
jno
ret
and
mov
not
mov
adc
in
push
imul
rol
ja
sbb
es
add
mov
bound
mov
sbb
mov
mov
sbb
neg
jg
hlt
aad
cmps
mov
ret
push
into
xchg
add
daa
mov
push
fisttp
out
mov
(bad)
push
xor
cmp
cmps
test
mov
mov
mov
vpunpckhqdq
pop
or
mov
out
xor
aaa
adc
jp
(bad)
fiadd
mov
fcmovnb
mov
mov
mov
and
or
stos
cwde
in
mov
pushf
sbb
push
in
(bad)
aam
push
cmps
stos
xor
lds
dec
dec
not
inc
jmp
or
loop
mov
jno
xchg
or
sub
pop
jb
xchg
data16
jp
inc
xlat
ror
arpl
sbb
cmp
stos
jns
rcr
ins
in
enter
mov
dec
xchg
pop
fistp
stc
mov
aad
push
jo
mov
mov
pop
ret
pop
mov
imul
inc
add
movs
mov
inc
mov
movs
sahf
aam
test
cmps
popf
push
or
xlat
fs
mul
stos
push
in
jmp
mov
pop
out
repnz
mov
dec
(bad)
imul
stos
hlt
test
push
adc
rcr
(bad)
mov
adc
repnz
cmps
aas
das
pop
pushf
(bad)
add
stos
jns
les
fisubr
pop
into
outs
scas
ja
jle
push
scas
(bad)
xchg
mov
jnp
inc
sbb
aaa
retf
push
icebp
add
jg
add
std
imul
out
ja
sub
xor
pop
push
inc
aaa
dec
inc
pop
stc
sbb
fbstp
test
clc
cmp
cli
fisttp
jle
movs
ja
test
jae
fdiv
in
cmp
dec
push
mov
addr16
push
push
fistp
xchg
mov
mov
scas
mov
cmp
shl
jecxz
push
cmp
enter
shr
add
idiv
arpl
xor
clc
test
aam
dec
xlat
loop
xchg
fmul
int
pop
mov
xor
ret
mov
movs
mov
popa
(bad)
xchg
jmp
inc
lock
pushf
je
les
test
xchg
div
jp
aas
(bad)
jmp
or
stos
sbb
xor
inc
mov
sub
mov
sub
push
jg
pusha
in
shr
icebp
adc
jae
shr
ror
aaa
(bad)
hlt
(bad)
data16
dec
or
icebp
call
xor
pop
pop
lods
xchg
sub
adc
add
add
fwait
outs
push
xchg
movs
out
cwde
ins
stc
pop
mov
jg
mov
cmp
imul
sub
jo
aas
or
int
outs
frstor
stc
dec
movs
mov
or
adc
add
int3
movs
add
cmc
div
in
mov
call
addr16
outs
stc
xor
in
add
adc
inc
arpl
mov
sub
icebp
mov
sub
fnstenv
scas
pop
jmp
popa
cwde
and
jl
inc
xor
loop
icebp
dec
outs
popf
jg
cmp
arpl
ja
sti
iret
(bad)
out
jns
dec
xor
lock
rcl
add
mov
cmp
push
fsubr
loope
dec
adc
jno
int
je
mov
or
in
jl
stos
arpl
test
xchg
sub
pop
mov
cmp
lea
shr
sub
nop
ret
test
mov
jns
push
sub
jg
call
iret
dec
cdq
push
mov
ins
ror
mov
mov
xchg
fs
mov
mov
mov
stos
call
(bad)
cs
xchg
cli
cmp
fldenv
inc
out
xor
call
or
imul
xlat
cld
daa
mov
fbstp
retf
dec
sbb
gs
dec
aaa
mov
mov
arpl
nop
jbe
mov
ins
ins
es
mov
sub
shl
inc
xchg
sbb
mov
iret
or
retf
into
pop
(bad)
std
dec
in
mov
push
aad
push
adc
and
adc
enter
int
sbb
shl
cs
lods
sub
pushf
push
pop
fimul
push
or
sti
loopne
push
dec
(bad)
dec
test
mov
mov
gs
in
call
dec
lods
repnz
cmp
pop
or
mov
push
repz
sbb
mov
ds
xlat
icebp
out
sub
mov
mov
cld
pop
cmc
retf
hlt
sbb
stos
add
mov
add
jge
cmp
and
lahf
mov
int3
(bad)
mov
lods
(bad)
xor
xor
pop
adc
add
(bad)
call
es
mov
sub
loop
mov
push
and
(bad)
fs
mov
mov
jmp
jbe
jae
pushf
(bad)
inc
sahf
adc
int3
cmp
or
adc
(bad)
mov
scas
xor
scas
mov
mov
dec
cmps
add
fcmovnb
mov
cs
pop
pop
stc
je
mov
les
jno
lahf
cmp
mov
sub
mov
fidivr
bound
loope
pop
adc
scas
cmp
bnd
(bad)
hlt
jae
outs
dec
or
call
icebp
shrd
fmul
jecxz
movs
inc
adc
cmps
fcom
enter
xchg
adc
dec
mov
sbb
std
add
pop
imul
(bad)
cmps
jno
mov
xlat
pop
fidiv
(bad)
out
pop
or
xchg
or
fcom
inc
and
push
mov
xchg
xchg
xor
rcl
jns
mov
jl
adc
dec
dec
aam
cdq
mov
and
jecxz
int
sbb
jnp
rcl
inc
movs
fbstp
dec
arpl
cmp
pop
(bad)
mov
xor
(bad)
xor
push
mov
bound
sub
sub
and
mov
cmp
sub
dec
pop
and
inc
pop
jne
inc
shl
mul
inc
ror
sbb
dec
scas
lock
jmp
fcomip
sub
xor
sti
aam
adc
mov
or
addr16
data16
or
ja
sub
dec
adc
mov
mov
in
mov
and
push
rol
fistp
jecxz
or
stc
dec
xchg
mov
lea
mov
sub
pop
fbstp
dec
jo
or
std
jne
mov
shr
pop
pop
inc
sbb
mov
mov
out
pop
cmp
push
jno
nop
xchg
data16
pop
jae
sbb
das
ja
pushf
cli
mov
mov
es
fdivr
xchg
stos
lock
sub
adc
adc
inc
sbb
push
or
cmps
fild
cmp
push
cmps
cmp
sahf
outs
stos
push
outs
(bad)
ret
sub
mov
pop
mov
or
sbb
or
pop
hlt
inc
xchg
mov
push
cs
sbb
(bad)
xor
push
sub
fnstsw
js
in
jmp
dec
sub
dec
add
mov
mov
fs
popf
push
cmc
out
out
iret
int3
xchg
js
sub
push
add
push
fcomp
xchg
aam
dec
dec
push
fsqrt
es
push
test
push
jno
pop
ret
mov
(bad)
dec
ret
dec
ds
and
push
and
out
cld
dec
fsub
jno
pop
pop
jne
mov
sub
fs
jmp
sub
pop
popf
cmps
nop
ss
and
outs
repnz
in
mov
sub
test
clc
mov
mov
xor
out
inc
mov
popf
iret
inc
sub
xchg
stos
hlt
pusha
je
dec
push
movs
lods
add
fstp
fisub
dec
lds
jle
loopne
test
test
cli
push
neg
inc
sar
cmp
pop
cmp
xor
scas
icebp
push
dec
and
call
add
fidivr
or
push
gs
or
dec
mov
das
inc
inc
adc
mov
jl
imul
scas
jmp
movs
sti
push
ins
jne
icebp
rol
jo
and
inc
add
cli
aas
adc
shr
xchg
sti
push
or
inc
(bad)
out
inc
mov
loop
std
std
mov
xchg
lods
fisttp
dec
mov
jmp
and
ins
cmp
pop
jo
xchg
xchg
cmp
in
mov
or
sar
push
fisub
xchg
sbb
and
mov
repz
test
aaa
add
imul
push
mov
jmp
xor
mov
add
cli
inc
(bad)
loop
cmc
ins
out
cmps
repz
push
inc
lods
hlt
shr
and
jp
nop
and
cmp
pop
jbe
mov
cs
inc
push
pop
push
inc
stos
mov
inc
div
ja
into
or
aas
inc
sti
fmul
mov
mov
pop
xor
ss
shr
sub
adc
cmp
add
int
cmp
aas
gs
push
cdq
cmps
out
stos
cvtpi2ps
add
stos
sbb
inc
mov
or
pop
jle
in
mov
inc
fisubr
jno
jmp
inc
pop
test
(bad)
sar
inc
dec
mov
scas
jae
stos
mov
add
jg
xor
lahf
popa
push
add
sahf
add
and
xor
mov
and
clc
retf
scas
inc
pop
push
outs
cmp
cli
sbb
retf
and
and
or
dec
fld
ins
(bad)
push
scas
cmp
and
jmp
jmp
xor
pop
ja
daa
jbe
push
enter
push
push
lods
mov
mov
shl
push
in
push
push
xor
mov
sub
and
jp
icebp
retf
jb
and
or
sub
dec
xchg
xor
push
jae
call
int3
jmp
in
inc
or
ret
or
jecxz
xor
das
fist
into
fimul
xor
aaa
fs
jl
ins
aaa
shl
(bad)
loopne
cmp
mov
int3
call
dec
mov
cdq
stc
xor
sbb
pop
push
lock
data16
stos
popf
ds
mov
mov
in
pop
repnz
mov
push
jge
xor
imul
arpl
inc
mov
cmp
xor
cs
lods
mul
pop
and
cdq
aad
loopne
arpl
cdq
cmps
lods
jnp
pop
jl
sbb
xor
mov
xchg
or
sar
out
or
mov
mov
and
xor
ds
les
pop
fisubr
lods
hlt
push
jmp
ins
lea
mov
dec
xor
or
dec
dec
inc
out
shl
movs
lods
cmp
(bad)
mov
addr16
shl
jle
and
sti
push
mov
sub
data16
ins
ret
clc
outs
call
mov
nop
pop
in
mov
sbb
retf
push
cmp
leave
sub
fldenv
mov
pop
fucomi
mov
emms
pop
dec
cmp
add
or
out
add
push
pop
cmp
movs
jae
iret
popa
mov
adc
sbb
repnz
stc
sti
retf
xor
cmc
dec
dec
lds
cmp
(bad)
sub
jae
es
stos
inc
dec
cwde
aas
sbb
out
jecxz
das
jno
pop
jmp
cmp
aam
or
pop
push
pop
sub
pop
mov
pop
push
sbb
sbb
xchg
(bad)
ret
xchg
mov
stos
jmp
std
loope
xor
leave
popa
int3
adc
and
cmp
fs
pop
movs
jge
jmp
push
push
dec
jae
jno
div
(bad)
stc
push
imul
mov
out
or
in
pop
or
dec
ja
pop
enter
ins
daa
sbb
fisttp
dec
clc
popf
cmp
rcl
cmp
cdq
enter
jle
inc
pop
sti
push
sub
jg
mov
xor
jno
mov
rcr
iret
mov
xor
xlat
fistp
or
imul
jg
shl
mov
add
ret
loopne
sub
inc
cmp
mov
mov
push
xchg
jbe
div
ret
xor
jb
pop
inc
dec
aas
mov
fiadd
test
pop
lods
pushf
out
xor
idiv
add
cwde
test
test
add
fxch
sbb
adc
aam
sbb
add
push
push
mov
sub
ficom
or
mov
stos
test
cmps
int
adc
xchg
jg
and
repz
sub
popf
out
cld
js
cmps
pop
test
jge
mov
gs
leave
push
xor
mov
iret
fimul
cmps
dec
xchg
sub
sahf
popa
aas
retf
dec
xchg
addr16
popf
iret
mov
push
push
or
mov
adc
cwde
push
out
pop
clc
and
adc
push
outs
xchg
mov
repz
mov
jmp
jb
push
popf
loop
or
enter
adc
sub
aam
jp
push
mov
pop
inc
sub
lock
sub
and
mov
mov
push
ror
shl
ret
ds
(bad)
pop
out
cmp
sahf
push
dec
mov
inc
int
xchg
out
sti
enter
sbb
pop
lods
pop
mov
mov
jmp
xchg
loope
ins
scas
push
arpl
mov
aaa
into
iret
dec
pop
imul
xchg
stc
fisttp
mov
leave
ficomp
jne
ins
repz
fld
inc
sub
pop
inc
sub
mov
lahf
enter
inc
mov
sub
sbb
cmp
sub
push
je
std
push
xor
jg
outs
pop
sbb
jmp
scas
mov
jb
mov
cmps
fstp
inc
mov
(bad)
loopne
xchg
cmps
cmps
push
xchg
pop
imul
jge
test
cmp
das
pop
push
push
xlat
js
jl
pop
add
jp
dec
xchg
mov
inc
in
mov
loop
icebp
mov
aas
icebp
mov
ret
in
ror
or
mov
inc
or
test
mov
clc
cmp
in
movs
repz
mov
inc
ss
sub
inc
xchg
fsubr
stos
mov
pop
fist
bound
mov
dec
cld
and
sti
jge
adc
dec
in
push
les
jnp
jmp
push
clc
xor
retf
adc
scas
(bad)
dec
inc
push
jb
out
imul
add
ficomp
je
retf
mov
dec
or
rcl
jmp
lahf
add
out
popa
inc
(bad)
push
adc
aad
out
out
mov
mov
in
pop
push
sbb
enter
mov
arpl
lds
jecxz
adc
mov
lock
pop
push
sahf
add
mov
jns
inc
adc
in
jnp
sub
sub
mov
retf
jo
jl
pop
sub
leave
ins
or
mov
movs
imul
fucomip
mov
jl
sub
ja
push
sbb
mov
jo
xchg
imul
push
pop
pop
cs
retf
add
jns
popf
jge
scas
mov
not
mov
lods
pop
cli
(bad)
jae
dec
and
xor
pushf
fsub
pop
xor
push
dec
add
out
pop
xchg
sbb
sub
xlat
fst
xor
mov
mov
pop
lock
xor
jp
pop
push
fdivr
pop
xchg
leave
pop
ins
mov
and
sub
adc
and
arpl
fsubr
mov
xchg
call
xchg
iret
in
ds
add
push
sub
daa
inc
push
pop
mov
inc
fmul
mov
jbe
or
das
xchg
movs
xor
cld
inc
and
mov
or
lds
mov
xchg
fdiv
lock
dec
imul
jmp
pushf
mov
loopne
dec
enter
and
rcr
movs
cs
ss
adc
xchg
lea
mov
ret
jb
ror
or
sbb
jnp
pushf
jae
sbb
movs
jae
sbb
or
mov
jmp
dec
outs
pusha
fld
jmp
cmps
inc
pop
sar
daa
fwait
mov
mov
cmp
lock
jge
sbb
pop
imul
cs
cmp
je
inc
push
mov
lea
scas
add
lock
stc
mov
sar
jl
ins
ins
call
push
ds
xor
cli
mov
and
clc
xchg
pop
call
mov
nop
mov
inc
gs
jae
lods
test
sbb
add
(bad)
les
div
aad
inc
inc
pop
arpl
popf
lahf
inc
aam
test
or
mov
scas
sbb
or
loopne
xor
xchg
adc
add
ret
jecxz
retf
inc
jb
mov
dec
aam
call
out
mov
sub
push
jp
cmp
mov
cmp
adc
addr16
test
mov
jge
sahf
add
cmp
rcr
xor
jo
dec
ja
dec
xchg
arpl
or
mov
dec
mov
cmp
call
pushf
cmp
enter
sub
(bad)
dec
inc
jmp
pop
out
xor
pop
loopne
add
ins
pop
jp
test
push
mov
cmp
das
dec
xor
pusha
into
mov
loop
popa
sahf
xor
leave
inc
shl
movs
push
cmp
lds
and
scas
cmc
imul
jmp
jo
xchg
ret
fild
xor
retf
mov
fst
push
iret
hlt
pop
loop
movs
adc
cli
push
inc
jo
and
inc
jne
jae
jge
mov
inc
push
stos
push
dec
mov
ins
lahf
cdq
mov
xor
add
add
cdq
popf
dec
idiv
sbb
ins
call
inc
dec
movs
daa
jmp
stos
ja
xchg
fidiv
ds
test
mov
mov
cs
lea
jmp
call
ds
mov
test
mov
enter
adc
pop
push
jmp
xchg
rcr
jg
mov
inc
mov
mov
fnstcw
sbb
push
sbb
into
adc
(bad)
and
push
mov
cmps
rcr
or
retf
inc
inc
or
push
add
jl
dec
mov
pushf
test
push
jp
ds
dec
in
dec
jb
xlat
jmp
adc
aaa
fnstenv
push
sub
add
scas
fistp
push
cdq
pop
mov
sbb
push
xor
push
outs
outs
nop
loop
and
ja
xchg
or
xchg
add
sbb
mov
dec
test
add
dec
xchg
enter
loope
xchg
dec
push
enter
lea
pop
repnz
dec
lahf
push
cmps
sub
xchg
test
adc
inc
ja
pushf
int3
adc
les
sbb
lods
xor
ins
in
fadd
mov
inc
sub
inc
push
dec
jp
jle
push
cmp
mov
repz
add
xor
ficom
sub
pop
mov
dec
mov
in
test
or
call
push
mov
lock
dec
cwde
mov
(bad)
mov
mov
sub
outs
jg
das
(bad)
out
lahf
xchg
sar
mov
or
jle
es
loope
and
and
mov
or
inc
ds
repnz
inc
sbb
push
fmul
into
retf
fisubr
or
cmps
and
fdiv
xor
mov
and
out
dec
shl
jae
push
test
sar
fcmovu
inc
int
xchg
sub
call
or
adc
repz
pushf
jbe
jmp
pop
cli
lods
iret
mov
cmp
hlt
(bad)
shl
and
adc
and
mov
inc
cmc
mov
clc
fcom
push
fstp
jnp
jno
repz
jne
cmc
rcl
loopne
and
lahf
sbb
jmp
push
stos
pop
jnp
into
or
pop
and
mov
bound
jns
(bad)
call
int
xor
scas
cmp
or
lahf
mov
jne
cmp
gs
pop
or
cs
sub
pop
dec
mov
dec
in
mov
or
rol
mov
add
or
sub
cmp
sar
aaa
mov
retf
mov
pop
cwde
dec
les
enter
imul
popa
in
cmp
aad
mov
out
sbb
sbb
pop
into
call
inc
and
lahf
imul
jnp
ror
ss
mov
mov
outs
mov
xchg
mov
outs
sub
jnp
ins
jmp
mov
mov
cli
pop
and
test
mov
popf
mov
ins
add
popa
jmp
xchg
in
outs
scas
sbb
call
xor
or
out
dec
jne
lock
cmp
adc
(bad)
daa
add
xor
xchg
cmps
add
stc
pop
inc
push
push
inc
xchg
pop
inc
aam
scas
int3
pusha
outs
jle
and
int3
imul
popa
add
movs
mov
shl
mov
pop
retf
jno
xchg
sbb
sub
inc
sbb
aad
dec
test
fcom
push
push
sub
adc
stos
add
aas
inc
es
test
and
outs
ret
push
and
jne
adc
dec
cwde
movs
and
lods
test
fcom
jmp
adc
sub
lods
fbstp
aas
(bad)
sbb
and
mov
jmp
enter
mov
inc
push
xor
jbe
sub
scas
repz
scas
push
mov
mov
sub
mov
sahf
mov
mul
adc
and
jae
xlat
and
rcl
clc
mov
jnp
dec
fwait
mov
(bad)
shl
or
test
inc
loop
xchg
test
add
dec
pop
outs
out
iret
fcmovbe
and
js
ja
(bad)
and
icebp
adc
jnp
sbb
lods
sbb
sub
addr16
xlat
int3
jg
mov
mov
mov
cmp
int3
or
retf
test
push
mov
outs
dec
push
dec
cmp
pop
ret
out
out
fstp
jge
jmp
adc
outs
in
test
inc
fwait
pusha
jge
add
xchg
pop
sub
add
in
(bad)
mov
cmp
xor
mov
xor
mov
push
mov
fidivr
inc
sub
repz
ret
pop
repnz
push
sub
mov
xchg
or
jb
cs
stc
rcr
pop
outs
ds
mov
lods
pop
and
addr16
sbb
xor
or
jns
cmp
aaa
mov
mov
sbb
int3
inc
test
pop
mov
out
aas
mov
aaa
dec
loopne
loope
aaa
repnz
fmul
mov
adc
push
xor
rol
rcl
xchg
nop
cwde
push
ror
dec
jo
adc
out
cmp
(bad)
out
push
jl
retf
into
es
cmps
jmp
dec
mov
pop
jnp
ja
adc
adc
sbb
and
mov
sahf
xchg
cmp
cli
add
mov
leave
push
mov
popa
jo
jnp
out
mov
xor
(bad)
xor
push
les
ds
lods
pop
sub
cs
jns
aas
jg
push
outs
fdiv
scas
cdq
inc
shr
and
push
adc
jno
mov
dec
jnp
(bad)
call
adc
stos
xchg
pop
pop
(bad)
mov
mov
xlat
mov
xor
xor
mov
sti
mov
cli
out
clc
std
dec
sbb
mov
retf
mov
dec
aas
inc
cmps
mov
xchg
mov
test
imul
mov
lods
inc
call
mov
jmp
and
rol
push
mov
xchg
icebp
or
mov
xor
loop
push
aad
adc
xor
imul
sub
cmp
fisubr
daa
retf
in
cmp
lock
fcom
fnstcw
mov
das
loop
jecxz
mov
pop
pop
sub
and
repnz
rol
popa
ret
test
test
sub
repz
push
xor
or
outs
inc
mov
shr
int
ins
daa
shr
mov
mov
rcl
xchg
push
jno
sbb
clc
arpl
adc
adc
pop
sbb
push
jmp
adc
mov
fdivr
push
mov
jb
es
add
std
xor
jne
or
xchg
inc
scas
xor
cmps
imul
and
pop
ret
push
or
imul
and
jb
push
adc
push
jg
jb
shr
(bad)
inc
xchg
mov
adc
mov
adc
pop
dec
mov
add
sbb
jp
or
cwde
nop
shl
shl
xor
mov
popa
jne
mov
xchg
xor
dec
leave
add
jle
jp
inc
scas
adc
fwait
inc
xor
jge
adc
jecxz
ds
cmps
mov
and
jae
push
repnz
or
xchg
cmp
adc
mov
push
call
cmc
sti
test
jmp
mov
sub
inc
out
mov
push
inc
adc
hlt
in
stc
xor
inc
(bad)
xor
sbb
mov
gs
sub
gs
scas
int3
push
push
pop
sub
ss
cwde
jmp
pop
mov
cmp
mov
jo
imul
or
shr
mov
cmp
jb
push
jbe
imul
nop
nop
push
push
dec
popa
adc
pop
dec
jl
inc
mov
mov
jle
pop
adc
sbb
dec
lock
cmps
in
mov
pushf
push
aaa
stc
push
xchg
sub
ja
mul
mov
aas
jp
or
ins
fild
add
dec
not
jo
dec
call
dec
pop
daa
cmp
pushf
mov
xchg
adc
fsub
add
ret
adc
add
dec
rol
pop
cwde
mov
cmc
pop
ss
add
mov
xor
aam
std
mov
and
cld
shr
dec
xor
mov
push
pop
inc
lods
in
add
mov
cmp
add
cmps
mov
push
mov
dec
test
add
loop
or
adc
addr16
xor
add
jle
inc
sub
fld
iret
fadd
push
or
and
xchg
out
(bad)
repz
inc
and
or
in
rcl
loope
pop
pop
and
mov
mov
push
jno
arpl
inc
addr16
jl
retf
or
fwait
mov
sti
lock
sub
jbe
push
and
inc
lods
pop
test
mov
cmp
ret
into
ror
xchg
clc
sub
scas
xchg
push
dec
repz
mov
xlat
popa
cmp
in
jne
xchg
cld
cli
cmp
cwde
mov
sbb
call
mov
clc
jno
lahf
jecxz
call
pop
dec
xor
dec
and
lods
cmp
adc
xor
xor
jnp
cli
fisubr
push
mov
xor
pop
in
pop
in
cmp
sub
fsubr
arpl
retf
and
push
jg
dec
popa
popa
push
inc
mov
mov
test
xlat
or
fdivr
into
mov
jl
fdiv
xor
cli
nop
adc
cmp
jmp
in
sahf
mov
test
push
ficomp
jb
mov
add
dec
ja
leave
lds
jb
mov
in
outs
cmc
aas
jecxz
imul
xchg
or
mov
icebp
ins
or
stos
int
dec
sub
fwait
daa
fcomp
xor
jo
aam
xchg
dec
fbld
xchg
bound
sti
cmp
cmp
or
jle
xor
jns
test
inc
mov
or
test
clc
(bad)
dec
or
pop
cmp
sub
push
outs
jge
sub
sbb
loopne
mov
push
lods
ja
dec
pop
sub
push
in
push
jae
xchg
mov
aaa
vpshlq
loopne
fstp
push
sub
lods
lock
(bad)
aaa
xor
in
xchg
jecxz
movs
jg
or
mov
sub
or
mov
cs
(bad)
loope
mov
or
data16
inc
pop
shl
jae
push
inc
js
xlat
xchg
scas
data16
xlat
lods
out
push
push
ret
push
je
or
cdq
cld
cld
out
clc
mov
loope
mov
mov
inc
jecxz
or
call
cli
cmp
pop
dec
ins
jno
shl
sbb
aad
addr16
mov
adc
jae
xor
cdq
add
xor
mov
and
or
push
cmc
aas
repz
out
imul
adc
dec
and
mov
push
pop
cs
and
jecxz
test
pop
pop
xor
jns
dec
jbe
push
cmp
dec
jmp
movs
sbb
and
aad
mov
mov
xor
es
xchg
cmp
mov
test
imul
push
aam
jle
mov
aam
shr
mov
xor
test
push
(bad)
retf
mov
inc
std
xlat
jno
aad
shl
add
shl
adc
sub
add
sti
push
mov
xchg
fs
mov
data16
sbb
out
pop
and
stos
mov
iret
test
movs
call
mov
mov
mov
jno
jge
popa
out
xor
es
ror
xor
stos
cmp
in
mov
sar
psllw
jbe
pop
(bad)
and
movs
inc
and
mov
inc
xor
les
xchg
add
(bad)
or
loopne
mov
retf
jl
in
fs
stos
(bad)
mov
mov
aad
in
or
fcmovnb
(bad)
cmp
push
inc
dec
cmp
jp
cmp
test
push
push
stos
popa
lds
lds
push
and
(bad)
mov
mov
push
mov
test
ror
adc
push
mov
xor
pop
mov
cdq
adc
mov
call
fmul
sbb
xchg
push
lods
fwait
sub
and
push
lods
imul
xor
out
ret
pusha
push
(bad)
(bad)
mov
enter
xchg
sub
pusha
iret
mov
lods
(bad)
cmp
mov
sahf
cmp
xor
jae
sub
push
mov
or
pop
and
cld
add
mov
xchg
xchg
in
adc
inc
je
sub
pop
mov
push
add
dec
xor
int
lods
sbb
sar
daa
add
shl
fidiv
test
and
mov
sub
sbb
arpl
das
xchg
mov
adc
ret
stc
stos
mov
mov
(bad)
jne
js
adc
cs
fdivr
dec
mov
mul
and
push
ds
sbb
push
inc
das
xchg
test
ins
sub
fcmovb
xchg
add
jmp
not
movs
mov
pop
push
or
add
in
les
adc
sbb
xchg
xor
(bad)
ror
dec
stos
cmp
mov
mov
mov
aas
loop
cmp
mov
jnp
dec
out
ficom
cmp
and
int3
enter
scas
dec
xchg
je
or
js
int
jo
cmp
test
ja
lods
bound
lea
sub
push
retf
mov
out
cmp
or
lock
ret
vmread
sub
push
(bad)
aam
sub
xor
icebp
jmp
add
mov
cmp
int3
(bad)
mov
ret
xchg
out
add
cmc
or
or
out
push
or
sub
pop
aas
adc
int
cmp
xchg
fs
lahf
pop
inc
enter
dec
lds
mov
and
and
fist
movs
push
dec
ds
std
xchg
sub
sti
inc
push
into
pusha
rcl
stos
rcr
dec
js
cmc
push
push
mov
jae
into
and
imul
xor
xchg
ret
mov
push
mov
pop
xor
push
inc
xchg
into
xchg
inc
push
dec
cs
aas
test
jns
call
ret
lods
jecxz
sbb
add
or
mov
adc
or
pop
xchg
or
bound
or
movs
jno
or
and
pop
inc
or
push
scas
mov
mov
and
cmp
adc
mov
and
and
and
sbb
xor
pop
ficom
ror
imul
inc
out
aad
out
iret
les
jmp
(bad)
cli
xchg
pop
(bad)
jg
inc
and
xchg
cmp
mov
adc
dec
fdiv
outs
out
push
inc
mov
std
std
or
(bad)
xchg
fstp
push
push
lock
stos
test
cmps
ds
cmp
les
(bad)
or
mov
je
sti
push
repnz
cli
sub
or
movs
js
jno
jns
add
xchg
cwde
(bad)
cli
jle
dec
or
stos
or
cdq
lea
jae
cli
xor
xor
mov
sbb
mov
xor
cmc
and
sub
inc
add
aad
inc
and
aad
mov
lock
dec
scas
push
lahf
loopne
loop
es
lods
pop
mov
cmp
lds
add
sub
pop
xchg
das
sbb
loopne
xchg
xchg
lods
sbb
popa
outs
jae
inc
int
fucomp
cmp
inc
push
das
jo
jb
sbb
lea
sbb
mov
push
iret
jl
inc
fwait
jbe
jp
pusha
jmp
and
xchg
clc
call
inc
(bad)
je
push
mov
sub
lea
out
sub
push
shl
xchg
sbb
adc
jae
pop
and
xor
seta
stos
in
js
add
xchg
push
mov
jns
push
adc
(bad)
mov
(bad)
js
add
gs
inc
(bad)
shl
fmul
out
adc
shl
sub
add
retf
adc
push
mov
jge
sbb
mov
pop
mov
data16
mov
pop
shl
mov
add
pop
jge
mov
pop
lea
mov
mov
push
push
gs
ins
jmp
cmp
mov
jecxz
jno
frstor
xor
fcmovbe
dec
xchg
pop
into
loopne
inc
mov
sub
dec
popf
xchg
hlt
fxch
mov
adc
cmp
pop
fimul
cmp
retf
outs
fwait
dec
push
and
jl
in
stc
xchg
imul
push
dec
pop
(bad)
addr16
sub
sbb
jl
es
push
clc
cs
add
mov
ficom
scas
adc
inc
xchg
adc
je
je
(bad)
pushf
ins
outs
cli
xor
dec
push
pop
cmps
sbb
ins
and
outs
lods
add
dec
sti
out
xchg
push
inc
fiadd
call
push
mov
out
inc
sbb
das
add
cmps
popa
add
shl
mov
push
call
pop
sub
lods
push
jecxz
mov
fmul
enter
or
outs
mov
sti
pop
push
cmp
cmp
add
clc
mov
retf
retf
push
dec
test
sahf
jnp
loope
movs
nop
xchg
ror
add
adc
stos
mov
mov
repnz
or
icebp
cmp
int3
add
stos
leave
push
or
jp
add
mov
enter
(bad)
nop
jle
fsubp
(bad)
fnsave
mov
adc
leave
lods
dec
in
sbb
nop
scas
mov
push
adc
icebp
frstor
outs
lock
cmp
scas
lea
mov
or
repz
retf
popa
sub
(bad)
push
add
xor
xor
xor
or
dec
nop
mov
retf
loop
push
push
imul
pop
outs
fidiv
push
adc
mov
div
repnz
into
jge
or
adc
loop
xor
sbb
jp
aas
leave
lahf
pusha
jne
mov
inc
and
rol
lods
mov
mov
test
inc
or
lock
rol
(bad)
fwait
dec
adc
add
lods
push
mov
or
sub
(bad)
sub
lea
sbb
xchg
jmp
xlat
and
push
sub
sbb
mov
loop
inc
je
ret
in
shl
sbb
xchg
stos
lahf
jo
mov
and
es
or
or
ins
dec
jnp
sbb
mov
shl
and
cdq
xchg
mov
jns
stc
xchg
or
ror
test
mov
sahf
test
imul
ins
xchg
or
xlat
jnp
imul
pop
mov
mov
cmp
and
sub
mov
outs
adc
into
mov
and
cmp
jp
sbb
xor
ror
aas
retf
and
fisub
mov
imul
imul
pop
imul
pop
mov
fs
adc
loop
outs
adc
shl
ret
mov
pop
jb
pop
adc
(bad)
jg
fwait
cli
mov
test
cmps
std
sub
cdq
leave
jbe
sub
push
sub
in
ja
pop
sbb
xchg
add
push
jl
push
scas
enter
scas
inc
or
inc
mov
xor
stos
mov
sbb
(bad)
out
mov
test
test
test
into
and
imul
adc
pop
sub
xchg
jmp
xor
(bad)
fnsave
inc
test
jne
popf
mov
iret
retf
inc
and
mov
xchg
mov
inc
sbb
call
adc
mov
mov
dec
fwait
sub
dec
cmps
and
sbb
es
push
cmp
inc
jmp
inc
jecxz
pop
dec
pop
dec
pop
std
dec
retf
cmp
cmp
cmp
addr16
rol
dec
nop
inc
imul
pop
mov
dec
pop
mov
stos
xchg
dec
xor
sbb
loope
std
pop
pop
sub
fcomi
out
jnp
rcr
sub
mov
shl
push
sti
hlt
popa
pusha
repnz
das
test
es
fstp
push
fadd
and
enter
cs
xchg
jb
scas
dec
or
int3
push
jmp
xor
aaa
fwait
pop
adc
and
dec
jp
cwde
pop
dec
sbb
cli
fcmovu
xlat
pop
call
(bad)
mov
lods
xchg
ds
clc
and
dec
mov
out
sub
rcr
ret
enter
imul
scas
std
je
xor
or
stos
aam
dec
jle
ds
jnp
outs
and
inc
xor
inc
inc
in
mov
loop
loope
cmps
bound
pop
ror
enter
fnstcw
jmp
xchg
inc
jmp
jbe
mov
mov
xchg
enter
xchg
mov
push
dec
or
aas
cld
inc
cmps
cmp
lds
and
xchg
dec
loope
and
xlat
pop
and
mov
cmp
shr
js
mov
cmp
hlt
call
jmp
inc
pop
jl
daa
fwait
shr
fcmovnu
mov
mov
push
aas
pop
sbb
shr
les
stc
push
lea
fcom
pop
repnz
out
dec
xchg
fst
add
into
lea
push
pop
(bad)
cld
adc
mov
jg
in
jbe
jno
push
std
add
pop
loopne
fcomi
ja
sbb
inc
dec
(bad)
or
push
dec
mov
push
iret
sbb
fwait
(bad)
jl
test
fldcw
ins
mov
cmp
loope
movs
xor
outs
or
mov
cmp
xor
cmp
mov
sbb
mov
push
mov
aaa
dec
out
inc
dec
popa
repnz
aam
cmp
jbe
or
inc
enter
fucomp
sbb
or
dec
xchg
fwait
rol
(bad)
jnp
imul
in
jae
in
aaa
in
pop
rcr
jae
pop
dec
cmp
hlt
or
lods
mov
dec
xor
int3
jl
ret
xlat
aas
dec
(bad)
out
mov
inc
xchg
lods
adc
xchg
or
mov
dec
rol
lahf
js
xchg
pop
mov
jne
pop
out
xchg
cmp
clc
pop
enter
jno
fistp
ror
(bad)
mov
ror
sbb
xchg
in
out
xlat
fisubr
out
retf
rcl
jecxz
push
shr
in
sbb
xchg
into
mov
icebp
inc
pop
lods
sahf
sbb
jmp
pop
push
xor
cmp
add
or
push
pop
xchg
pop
repz
xor
pop
mov
mov
adc
and
xor
xchg
(bad)
jo
and
pushf
add
les
mov
jb
mov
shl
(bad)
pop
cmp
pop
jecxz
sbb
aas
iret
jg
dec
(bad)
inc
es
out
dec
adc
dec
fstp
into
aaa
sti
ss
sbb
lock
xor
jbe
lds
or
xchg
cmps
sar
imul
mov
or
and
inc
xchg
fistp
cmc
and
(bad)
out
mov
mov
mov
xor
lea
inc
mov
or
inc
add
or
adc
mov
adc
es
arpl
pop
push
jnp
gs
mov
leave
(bad)
pop
imul
mov
loope
jge
retf
mov
adc
or
outs
(bad)
aad
jle
pusha
aam
fdiv
sub
lock
dec
or
lahf
sbb
nop
mov
iret
ja
push
(bad)
popf
std
mov
cmp
jl
mov
and
addr16
retf
mov
fwait
xchg
xchg
repz
aam
stos
sub
hlt
fild
sub
arpl
(bad)
idiv
cmp
lods
call
sbb
push
sbb
sti
mov
daa
push
cmp
adc
jg
in
js
add
loopne
sbb
stos
sbb
push
add
sbb
dec
out
aaa
adc
sbb
push
daa
dec
mov
mov
sbb
pop
cmp
ror
dec
pop
inc
adc
movs
xor
lock
(bad)
std
add
mov
push
xchg
and
or
and
cmp
hlt
(bad)
(bad)
arpl
xchg
or
call
mov
(bad)
addr16
and
push
rcl
ins
cmps
test
jne
pop
lds
pop
mov
or
int
xchg
sbb
push
cs
or
aaa
xchg
sub
fwait
mov
lods
push
jmp
mov
aad
rol
lods
xchg
pop
inc
fstp
push
push
lods
enter
stc
cmp
add
mov
nop
daa
push
mov
dec
cli
mov
popf
and
fsubr
push
xchg
cld
pop
ja
or
enter
xlat
int
mov
and
or
scas
cmps
jne
xchg
jb
data16
ja
into
ja
in
and
add
mov
inc
xchg
mov
mov
fstp
cmps
sub
mov
cwde
sbb
jb
cvttps2pi
scas
inc
or
ds
in
jns
jl
pushf
int
jg
inc
pop
mov
cmc
stc
push
or
mov
fwait
adc
iret
xor
mov
inc
pop
popa
dec
adc
sbb
scas
mov
pusha
je
xor
cmps
push
jne
inc
jb
cwde
in
nop
xchg
adc
cmc
(bad)
cmps
movs
cmp
mov
test
and
fcom
int3
dec
pop
out
test
std
cmps
jo
iret
cmc
and
inc
sub
das
lods
fadd
xor
mov
pop
mov
ret
dec
dec
dec
hlt
push
push
add
sbb
pop
sub
jl
pop
popf
push
mov
xor
jae
mov
(bad)
int3
and
sub
ins
adc
test
mov
lock
in
sbb
fmul
pop
cmps
mov
fist
jbe
dec
xor
in
mov
lahf
xchg
jg
in
add
stc
sti
ins
shl
lahf
in
jmp
mov
push
movs
push
sbb
mov
and
add
mov
sub
shr
mov
sub
in
(bad)
imul
pop
dec
mov
shl
jbe
aaa
adc
sbb
inc
or
xchg
jmp
call
icebp
jmp
ror
nop
mov
sti
pusha
loopne
loope
dec
mov
enter
repz
pushf
sub
(bad)
cwde
sub
inc
pop
dec
sbb
pushf
sub
in
push
ret
daa
sbb
push
mov
out
aaa
div
pop
repz
test
sbb
lahf
ins
push
pop
in
sbb
sub
(bad)
loope
xchg
push
mov
push
cmp
lods
test
and
mov
call
add
or
shr
js
inc
popa
add
pusha
int3
rcl
push
lea
mov
addr16
jno
push
jnp
(bad)
not
mov
cmc
outs
aad
jb
(bad)
lock
pop
addr16
pop
sti
inc
fadd
add
aam
and
sbb
lds
imul
jp
iret
cs
outs
les
and
push
or
mov
(bad)
repz
adc
iret
push
iret
(bad)
inc
sahf
dec
lahf
add
arpl
sub
xor
icebp
dec
call
and
jge
mov
sbb
ss
push
add
std
jne
xchg
cmps
repz
bound
test
inc
jns
scas
inc
pop
imul
xchg
mov
dec
mov
dec
(bad)
mov
mov
jmp
ss
fadd
mov
pop
div
pushf
sbb
fld
sub
arpl
add
xchg
pop
test
inc
sahf
popf
and
cmps
inc
pop
iret
rcr
cmp
call
daa
shr
int3
dec
cli
mov
fisub
push
jl
or
pop
psrld
or
cmps
(bad)
stos
sbb
test
push
pop
bound
ret
mov
pop
push
out
jnp
shr
jno
out
aaa
imul
push
cmp
jmp
push
idiv
mov
(bad)
popf
mov
cmps
(bad)
mov
ficom
popa
cmps
xlat
sahf
push
mov
dec
fist
je
lea
pop
scas
mov
out
mov
ins
les
mov
or
iret
mov
mov
shl
ror
mov
in
(bad)
(bad)
ss
call
and
call
gs
js
and
leave
(bad)
js
mov
inc
jae
cmp
cmp
pop
fnstcw
enter
rcl
je
mov
push
dec
push
popf
stos
sub
stos
pop
popa
(bad)
pop
and
push
fwait
and
fwait
jmp
movs
xchg
mov
jno
add
out
int3
pop
add
mov
cdq
pop
inc
cmps
adc
sar
push
xchg
in
cmp
push
popf
xchg
sbb
in
and
hlt
jge
and
and
dec
scas
in
je
jl
loop
test
scas
inc
ss
pop
xlat
jae
ds
or
pop
test
ds
push
ins
leave
mov
cli
movs
(bad)
cwde
add
xor
cmp
jae
xchg
test
sbb
inc
xchg
sub
cmp
mov
hlt
jbe
inc
xchg
lahf
jb
cwde
inc
repz
jo
or
out
xchg
jno
jne
scas
mov
out
adc
jae
adc
and
dec
fimul
sub
jge
stos
repnz
push
hlt
jecxz
outs
stc
or
cmc
push
pop
jl
dec
mov
mov
add
push
ret
stc
xor
sub
jle
add
xlat
adc
push
push
jmp
(bad)
push
sbb
rcr
and
push
push
xor
add
test
add
(bad)
call
test
in
pushf
cdq
int
sub
aad
pop
cmp
ja
mov
cmc
int3
mov
popf
js
daa
xor
sar
sar
iret
fist
xor
pop
outs
test
and
pop
(bad)
fisubr
lds
popf
jle
std
push
hlt
(bad)
iret
and
in
fild
mov
ret
out
mov
sbb
sub
dec
dec
adc
or
sti
call
out
daa
and
xor
cwde
enter
test
inc
mov
fsubrp
mov
fidivr
pop
les
pop
addr16
popf
xor
adc
in
jle
xchg
icebp
ss
pop
(bad)
iret
ins
mov
stos
sahf
jne
es
idiv
pushf
jg
push
repnz
or
nop
push
int
or
pushf
mov
int
shr
shl
lea
mov
push
out
push
sbb
ret
sbb
mov
and
inc
cmp
adc
add
pushf
adc
outs
xchg
cmps
pop
ss
pop
retf
dec
mov
clc
retf
or
and
push
xlat
clc
mov
push
mov
lods
lods
mov
inc
lds
mov
sub
cwde
inc
dec
inc
sub
inc
ins
rcl
out
pop
fdiv
jge
xchg
out
lea
and
pop
xchg
cmp
repnz
xor
adc
dec
adc
retf
fistp
rcl
pop
push
inc
jmp
cmp
fbld
test
sahf
pop
jno
dec
enter
les
pop
pop
pop
adc
(bad)
loopne
(bad)
pop
mov
inc
inc
mov
popa
call
xchg
mov
mov
pushf
adc
sar
(bad)
and
pop
clc
dec
sbb
movs
sub
push
dec
fxam
cmp
xchg
xor
mov
aas
enter
pop
sbb
aad
leave
cs
fisub
ret
xchg
in
mov
sar
retf
add
cld
mov
arpl
sub
in
sbb
mov
(bad)
jmp
pop
call
cmp
int
xor
and
and
ins
or
mov
or
mov
sub
push
mov
sbb
retf
mov
cmp
jo
fcomp
cdq
ja
fmul
xor
xlat
sbb
or
push
xchg
fadd
pop
pusha
les
ret
push
call
test
sti
push
std
das
pushf
jecxz
aas
xor
jo
add
pop
out
pop
or
xor
jmp
adc
xchg
inc
add
(bad)
dec
and
and
loopne
scas
pop
jle
mov
ret
sub
shr
rcr
fimul
xchg
cmps
mov
pop
add
xlat
mov
inc
pusha
cmps
ja
or
mov
imul
fidiv
popf
and
xor
inc
sti
sbb
cmp
mov
out
ins
ss
test
les
popa
icebp
mov
scas
mov
outs
jmp
inc
fdivrp
out
js
push
xchg
mov
dec
clc
xlat
xchg
(bad)
popa
dec
cmp
and
out
inc
jbe
leave
mov
lock
inc
xor
add
int3
or
sbb
jp
test
fwait
mov
jns
mov
std
xor
gs
iret
aam
push
or
sti
sbb
cdq
add
adc
push
cwde
mov
mov
fwait
call
aas
das
in
js
retf
mov
mov
lds
(bad)
retf
push
mov
mov
cmp
jg
inc
sbb
loope
retf
(bad)
mov
mov
or
push
pop
cmp
ret
jae
popa
shl
sti
mov
mov
fnstsw
pop
xor
stos
mov
scas
mov
hlt
daa
jnp
mov
imul
nop
inc
jae
int3
xchg
lahf
and
mov
mov
push
or
push
xor
inc
out
inc
retf
and
fist
ins
lods
and
mov
pop
(bad)
mov
pop
sub
mov
mov
mov
mov
mov
data16
inc
pop
iret
dec
movs
adc
pop
xor
inc
aaa
or
int
call
retf
adc
push
fld
mul
adc
xchg
stos
stos
mov
or
jle
inc
call
dec
inc
shr
jno
pop
daa
pop
push
xchg
std
out
push
push
test
mov
adc
loop
sahf
bound
inc
mov
xor
push
hlt
movs
push
clc
je
mov
pop
in
xchg
cmp
scas
mov
retf
inc
fild
call
inc
xchg
mov
inc
test
aam
mov
repz
mov
(bad)
int
inc
ins
outs
ret
(bad)
mov
mov
not
xchg
push
mov
lahf
div
movs
dec
aad
push
dec
cs
or
mov
and
adc
retf
aad
or
mov
lods
shl
and
sbb
sbb
xchg
sbb
xchg
stc
test
xchg
or
pop
lods
pop
int3
clc
inc
data16
(bad)
jns
xor
je
in
push
enter
or
repz
fidivr
xor
lds
js
push
mov
daa
addr16
jp
jp
push
cmp
ja
repnz
mov
cmp
(bad)
sub
lods
popa
xor
jo
push
sub
pop
mov
fistp
cwde
sub
in
mov
(bad)
cmp
dec
push
dec
pop
jbe
das
jge
mov
push
test
dec
cwde
pushf
jbe
push
push
(bad)
js
out
mov
(bad)
xor
push
movs
mov
xor
mov
and
push
mov
test
cmc
push
jp
test
push
pop
(bad)
and
xor
div
add
cmp
adc
sbb
sbb
add
add
xor
ds
jmp
mov
icebp
dec
adc
iret
imul
jo
adc
inc
push
xor
mov
or
ins
inc
aas
daa
push
cmps
sti
stos
ret
call
movs
cld
jbe
mov
test
mov
cli
adc
dec
cmp
pop
xchg
in
pop
and
inc
cmc
mov
hlt
pop
pusha
in
enter
xor
sub
xchg
mov
iret
jmp
mov
cmp
add
(bad)
lock
push
ins
fisubr
in
ret
cmp
and
push
add
sbb
cmp
outs
(bad)
xchg
leave
movs
cmp
icebp
inc
ins
addr16
mov
push
sbb
xor
out
cmc
lea
rol
xchg
bound
les
fld
push
jbe
adc
cld
lock
ret
and
loope
pop
jne
hlt
inc
arpl
push
sbb
jae
xlat
push
stos
dec
leave
out
sti
cmp
fnsavew
dec
cli
dec
repnz
mov
les
ds
rep
push
jg
in
cmp
lds
push
push
in
xchg
les
pop
les
jmp
rcl
push
jmp
cli
xor
pop
lock
aas
pop
fwait
sbb
movs
out
call
int
mov
rep
push
xchg
mov
xor
call
jg
stos
fdivr
fcmovb
aaa
dec
repnz
lods
pop
mov
push
push
sub
jl
nop
inc
ds
ins
mov
dec
jmp
cmp
es
cwde
jle
adc
cdq
aam
ss
ss
es
mov
sahf
aas
sub
jl
out
mov
push
mov
xchg
shr
loopne
jae
fild
push
stc
xor
sub
dec
out
add
cmp
leave
mov
mov
ret
or
xchg
push
mov
out
(bad)
push
mov
sti
xchg
pop
and
hlt
aad
stos
pop
sbb
fisub
je
pop
pop
or
sbb
jg
cmp
imul
mov
fld
sub
push
(bad)
jge
shl
sbb
imul
xchg
xchg
xchg
sbb
mov
sub
pop
aaa
inc
jmp
xchg
in
loopne
das
jl
xchg
jne
mul
int3
(bad)
data16
mov
sub
adc
inc
push
fsub
fwait
loope
xchg
mov
test
pushf
jnp
jae
inc
sahf
dec
test
popa
cs
push
dec
and
sbb
pop
cmp
dec
xchg
xlat
or
repnz
int3
repnz
div
aas
pop
ret
adc
jp
mov
neg
inc
test
int3
lock
jno
jp
in
mov
bound
aam
rol
jle
(bad)
or
jnp
sub
lock
push
cmp
clc
add
dec
pop
sub
enter
out
sbb
aad
in
rol
lods
retf
je
imul
adc
adc
mov
aad
and
inc
mov
outs
xor
retf
and
cdq
ret
ret
dec
test
sbb
das
mov
mov
push
int3
pop
sub
mov
sahf
jg
xor
stos
inc
jle
daa
xchg
std
jmp
adc
or
scas
pushw
mov
(bad)
jnp
inc
scas
mov
jp
dec
mov
leave
or
pop
int
xor
and
cli
movs
das
xor
push
mov
fnstcw
lds
adc
dec
and
jl
and
mov
mov
(bad)
in
sub
test
(bad)
push
or
test
mov
in
jno
push
ret
out
mov
outs
fcom
das
scas
shr
push
lahf
or
inc
xor
cmps
inc
cmp
xor
out
in
stc
fcomp
mov
(bad)
sub
iret
fisttp
popa
fs
(bad)
fidivr
lahf
adc
push
sub
pushf
jae
fnsave
add
scas
das
out
jmp
and
fld
xor
fs
ret
ins
push
sbb
icebp
fisttp
jns
int3
or
pop
retf
scas
jb
jns
sar
loope
jo
test
mov
idiv
sbb
test
call
mov
and
push
mov
mov
rcr
loop
add
je
hlt
imul
or
pop
iret
outs
imul
sti
lea
mov
shl
call
inc
loopne
int
jmp
punpckhbw
sub
inc
mov
aaa
out
popa
shl
mov
mov
das
jmp
sahf
and
mov
pop
mov
fucomip
and
push
test
adc
xor
mov
xor
std
adc
out
call
call
imul
push
in
fs
pop
imul
jmp
mov
inc
pushf
inc
jg
add
push
inc
jg
movs
push
push
shl
adc
rol
adc
sub
sub
ja
fs
jno
sub
and
js
fdivp
dec
in
sbb
(bad)
bound
sar
dec
repz
or
lock
or
or
sub
clc
push
mov
outs
jle
and
or
cmp
xlat
mov
adc
mov
cmp
adc
div
std
repz
dec
and
in
dec
dec
push
adc
jo
mov
fwait
es
fstp
(bad)
sbb
in
loopne
or
mov
inc
push
loopne
jge
xor
adc
ret
fcmovnb
test
push
inc
cwde
test
fsubr
sub
leave
neg
push
cmc
mov
stos
xchg
sbb
mov
lds
lds
out
xchg
pop
stc
cwde
bswap
shl
jl
pop
and
mov
imul
movs
push
das
xor
sub
mov
mov
retf
pop
xor
inc
jmp
push
xor
sub
popa
jg
inc
movs
push
in
cli
jnp
sbb
movs
jne
test
push
test
ror
nop
loope
adc
sbb
push
bound
outs
jnp
clc
retf
cmp
imul
sub
sub
xor
aas
or
add
mov
loop
call
sub
xor
icebp
cmp
sub
jmp
and
cbw
push
mov
stos
jmp
cmp
rcl
xlat
cmp
call
imul
in
dec
push
cwde
inc
inc
inc
dec
pop
call
sbb
out
mov
mov
imul
test
dec
test
mov
dec
push
outs
iret
sti
call
test
or
gs
shl
int
je
out
and
les
es
rcr
and
dec
scas
cmc
add
push
pop
inc
clc
jne
inc
fstp
xchg
jl
mov
dec
psubq
fisttp
xchg
dec
pop
mov
rol
jne
loop
pop
stc
mov
test
scas
xor
(bad)
add
adc
out
mov
dec
pop
push
dec
adc
mov
sbb
imul
pop
mov
jbe
jae
jmp
call
(bad)
out
daa
sbb
retf
adc
ret
sbb
es
out
pop
repnz
sbb
jns
aad
out
pop
adc
cmp
lods
xor
push
aas
xchg
mov
fisttp
bound
mov
inc
sar
push
or
mov
mov
jge
and
leave
push
aaa
push
mov
gs
sbb
dec
gs
xor
aas
add
sbb
or
pop
int3
test
jne
inc
mov
or
jmp
popf
fmul
jecxz
cmc
xor
xchg
and
out
pop
mov
mov
les
cmp
enter
dec
sub
pop
or
mov
jecxz
mov
xor
imul
lods
jp
and
inc
pop
ss
mov
enter
add
(bad)
lods
sbb
cli
dec
call
add
cmp
and
outs
fsubr
ja
repnz
xchg
aaa
lahf
inc
lahf
inc
pop
outs
pop
mov
push
and
(bad)
fstp
shr
mov
cmp
xor
jne
out
mov
cmc
les
push
into
adc
jb
adc
mov
sbb
out
ret
repz
jle
mov
lock
sub
lfs
out
pop
ret
xchg
cmp
sbb
ja
mov
test
pop
add
(bad)
fldcw
mov
(bad)
in
test
xchg
(bad)
in
sbb
xor
cmova
jle
call
inc
mov
cmps
fiadd
and
int3
or
mov
sub
xchg
mov
sub
cld
inc
js
in
cmp
scas
es
ror
mov
pusha
mov
clc
lea
addr16
sbb
arpl
outs
outs
int
or
aad
sbb
pop
scas
sub
scas
or
pop
push
repz
and
movs
sbb
lahf
(bad)
cmps
nop
xchg
inc
sub
dec
aad
xchg
and
leave
jb
je
movs
les
test
xchg
into
jnp
or
cwde
jge
iret
stos
div
pop
pusha
cld
mov
test
js
rcr
inc
fadd
xor
movs
push
mov
outs
imul
inc
jecxz
not
xor
loope
mov
cmp
cmp
xchg
cmc
push
dec
inc
inc
pop
sub
sub
out
inc
(bad)
lea
jae
adc
ds
add
jne
and
sub
xor
mov
xlat
sub
pop
or
push
les
and
je
(bad)
fcom
retf
xchg
sahf
retf
mov
pop
pushf
xor
pop
mov
fist
cwde
(bad)
fiadd
movs
and
mov
inc
add
(bad)
(bad)
jae
ins
imul
cwde
or
ss
dec
or
push
adc
dec
mov
sti
ret
ret
movs
mov
xor
test
cmps
clc
push
call
push
mov
ins
or
pusha
ss
xchg
jl
test
sub
inc
fs
xchg
sub
add
outs
loop
inc
pop
jnp
popf
mov
shl
xchg
arpl
lock
adc
retf
inc
stos
mov
cwde
pop
es
adc
xchg
pop
ror
dec
test
vpermd
pop
mov
scas
sub
in
pop
stos
test
test
mov
int3
push
shr
dec
inc
xchg
mov
dec
(bad)
mov
inc
lods
mov
bound
clc
sahf
adc
and
fld
(bad)
sub
add
jne
stos
push
sub
fisttp
retf
jmp
test
jb
pop
fimul
pop
push
mov
mov
cmp
cwde
dec
jl
jmp
out
xchg
adc
sub
ret
mov
pop
(bad)
jmp
jmp
mov
pop
cwde
popa
jl
add
neg
movs
push
pop
ja
mov
xchg
xor
cmps
mov
sbb
jle
push
push
test
and
(bad)
retf
jo
popf
out
cdq
sub
icebp
ja
push
stos
and
hlt
daa
stos
mov
ins
and
(bad)
push
xchg
sub
push
xor
push
lods
outs
mov
push
push
movs
stos
ins
out
jb
fstp
cmp
push
xor
mov
fnstsw
clc
js
and
xchg
xchg
hlt
repnz
fwait
icebp
dec
push
jl
sbb
cmp
sbb
test
stos
imul
movs
jg
repz
cmc
add
cld
mov
es
(bad)
pop
loopne
and
int3
repnz
pop
or
sbb
pop
jg
jmp
ret
je
xor
push
rcl
scas
lea
jp
xchg
xor
retf
pusha
jae
fadd
jg
dec
in
cmp
leave
xchg
xchg
push
(bad)
jl
int3
popf
(bad)
mov
fdiv
jne
xchg
push
sub
pop
push
sub
rol
inc
mov
jle
push
inc
ja
cmp
or
mov
dec
dec
in
(bad)
std
sbb
add
jle
stc
xor
mov
jno
ins
push
or
scas
dec
push
stos
std
or
mov
popf
sub
pushf
sub
lds
xor
cdq
(bad)
pushw
sub
jo
xor
xchg
call
lods
fisubr
jmp
aas
inc
mov
js
mov
fst
(bad)
out
mov
push
hlt
sub
iret
mov
mov
inc
xchg
push
xor
inc
jmp
jmp
daa
xchg
cmc
shl
(bad)
push
ins
fadd
test
or
xor
jbe
jae
mov
mov
cmps
jbe
sub
das
jl
sar
or
ins
mov
jge
aas
jbe
push
test
(bad)
into
push
inc
jns
test
cmps
in
shl
adc
mov
into
lods
aam
inc
dec
jns
in
repz
inc
lahf
stos
add
mov
js
lock
lea
push
test
or
xchg
std
sar
mov
out
data16
xchg
js
call
dec
mov
cmps
lea
rcr
dec
loope
xor
pushf
push
test
xchg
sub
push
ins
push
retf
inc
inc
pushf
xchg
imul
call
in
mov
lahf
lahf
mov
shl
ja
mov
jp
push
or
and
xor
(bad)
sti
shr
mov
sub
sub
dec
jo
xchg
xor
and
xor
hlt
adc
sub
ins
lds
data16
pop
ret
sbb
scas
imul
or
ja
lahf
mov
loop
jbe
les
adc
fst
cmp
fist
cmp
test
fld
adc
jb
adc
mov
es
jmp
iret
inc
popa
ja
out
dec
xchg
adc
xor
push
cmp
movs
clc
inc
test
push
test
mov
bound
push
push
push
adc
mov
push
ja
and
fdiv
xlat
(bad)
dec
xchg
ds
retf
cli
cmps
jbe
push
mov
fadd
mov
xor
push
int3
push
icebp
mov
push
shl
mov
daa
inc
into
jae
jg
gs
gs
xchg
mov
mov
adc
lock
fcomp
mov
or
sahf
cmp
aas
sub
pop
xlat
(bad)
je
jbe
push
push
xchg
mov
adc
call
mov
sti
adc
inc
xchg
cmps
ret
loopne
jne
pop
pop
inc
push
icebp
repz
and
cmp
bound
mov
loope
call
xor
stos
adc
inc
and
retf
mov
xchg
fist
cld
les
aam
sbb
adc
ret
loop
and
rcr
test
jo
(bad)
push
pop
retf
jns
imul
and
push
push
inc
push
icebp
mov
sti
test
pusha
ins
mov
loopne
push
aad
hlt
retf
int3
scas
ja
cmps
or
in
sbb
mov
aad
mov
push
mov
mov
cs
in
sbb
jg
mov
int3
jbe
bound
dec
jb
xor
push
out
(bad)
lea
loop
imul
cmp
in
xchg
push
sub
stc
inc
int3
in
mov
jb
jecxz
in
les
aad
call
repz
xor
adc
inc
test
sub
jo
jb
(bad)
test
fdivp
(bad)
and
ds
pop
mov
push
movs
cli
sbb
aad
jecxz
mov
daa
out
add
clc
bound
dec
sti
ret
jnp
out
mov
pusha
lods
jle
xchg
push
dec
adc
out
jge
jne
xchg
shr
xor
push
imul
mov
sti
jbe
stc
sub
push
ja
cmc
pop
xchg
or
inc
adc
addr16
jmp
add
stos
xchg
sbb
outs
add
rcl
mov
aam
lea
cwde
sbb
inc
ret
sbb
movs
dec
stc
push
mov
clc
jb
imul
sub
and
movs
push
fdivr
sub
jno
or
aas
out
inc
dec
sub
lea
push
mov
cmps
mov
cmps
jp
out
mov
pop
jo
(bad)
cmps
mov
out
fdivr
mov
fnstenv
call
inc
inc
cmps
xlat
(bad)
ficom
arpl
sbb
fild
dec
jnp
cmc
xchg
aas
xchg
or
dec
jnp
lea
inc
loop
jb
enter
jnp
test
inc
rcl
fbstp
out
arpl
push
aaa
add
mov
cmps
inc
push
ins
hlt
and
mov
(bad)
inc
xchg
and
mov
movs
test
push
jle
mov
out
popa
ins
add
int
and
pop
push
imul
jbe
popf
fimul
lock
jge
ins
data16
mov
imul
sbb
or
idiv
pop
aaa
ins
call
fbld
mov
mov
add
js
mov
arpl
enter
and
cs
pop
mov
mov
shl
rcl
jae
(bad)
jns
mov
sub
(bad)
dec
ss
jo
lea
jne
or
jge
pop
xchg
pop
mov
jmp
mov
pop
fsubr
cdq
sbb
fnsave
sbb
and
(bad)
es
jmp
mov
lahf
jg
xchg
mov
jns
cs
or
push
js
mov
adc
jnp
test
out
jo
cld
xchg
retf
pop
push
pop
sub
ret
popa
xchg
inc
pop
push
shl
inc
div
int3
in
sar
in
and
and
sbb
pusha
jne
xor
xchg
pop
loop
(bad)
out
or
mov
popa
mov
xor
cmp
and
pop
dec
ss
test
jecxz
sub
jmp
(bad)
jp
scas
cld
sbb
fdivr
mov
xlat
mov
aam
(bad)
pusha
popf
push
or
push
std
pminub
pusha
pop
(bad)
lahf
inc
stc
xchg
mov
imul
and
out
stos
mov
xor
clc
jns
scas
in
add
je
adc
popa
mov
mov
cdq
(bad)
hlt
in
mov
aad
cmp
out
and
dec
sub
mov
mov
add
in
or
ins
outs
sub
mov
push
pop
xchg
mov
cmp
test
lahf
leave
cmp
int
mov
dec
clc
sub
loopne
push
das
or
dec
push
or
mov
call
cs
hlt
pop
jb
fadd
xchg
jg
jns
mov
popf
mov
scas
dec
sbb
loopne
mov
popa
sti
add
aaa
jae
xchg
pop
or
jns
inc
mov
push
(bad)
sbb
push
stos
adc
jb
pop
fistp
mov
ret
push
test
xlat
pop
lahf
mov
jmp
mov
mov
out
outs
cmp
std
and
sub
adc
xchg
xlat
jmp
sub
bound
aaa
cs
pop
popf
adc
cmp
mov
push
add
and
outs
(bad)
jno
sbb
dec
cli
pop
enter
data16
lock
add
mov
imul
inc
or
aas
outs
shl
inc
xchg
dec
retf
jb
mov
cwde
aaa
pop
loopne
mov
shl
dec
repnz
mov
bound
xchg
pop
jge
mov
sbb
adc
and
add
test
push
add
outs
fsubr
cmps
(bad)
jp
ds
addr16
inc
in
sahf
push
rcl
mov
test
repz
imul
sub
mov
and
add
push
inc
mov
add
xchg
scas
sar
cwde
adc
xor
call
(bad)
in
lock
or
arpl
sub
jecxz
xchg
ins
adc
ds
cmp
jge
rep
xor
xor
adc
add
test
pop
dec
mov
xlat
arpl
and
rcr
jnp
retf
popa
and
mov
retf
sbb
sbb
stos
addr16
jmp
ret
ret
push
jae
sbb
mov
pop
dec
jge
ja
sub
mov
jp
fs
rcr
mov
lods
movs
adc
call
pop
sub
jecxz
jmp
shl
ror
cmp
popf
xlat
rcr
inc
mov
xor
je
test
aaa
sbb
int
mov
push
mov
es
jge
lock
retf
int3
mov
out
(bad)
fadd
sbb
pop
and
cmp
test
jae
retf
jg
or
ret
xchg
push
pop
and
push
jb
xor
ins
jecxz
or
dec
scas
lods
push
out
aas
pop
and
dec
lahf
xchg
das
repz
sbb
adc
jno
sub
and
in
mov
mov
mov
dec
js
in
mov
sub
sub
jmp
imul
in
call
into
add
jmp
sbb
popa
mov
and
test
in
push
int
mov
mov
lods
xor
cld
jmp
repz
cmps
mov
sub
jecxz
ret
outs
test
fsub
imul
ficomp
adc
scas
pop
gs
inc
addr16
test
jns
push
push
pop
or
pop
stos
mov
loop
call
xchg
mov
(bad)
fadd
push
leave
push
jp
nop
xor
add
mov
scas
es
or
popf
fisttp
rol
(bad)
es
in
sub
ins
push
call
jle
mov
mov
push
mov
xchg
mov
out
aaa
int3
movs
push
pusha
sahf
dec
dec
jmp
jmp
mov
xor
sub
cmp
sub
xlat
int
fsubr
push
cmps
sar
push
jo
or
addr16
daa
div
add
ror
jecxz
sar
pusha
shl
xchg
adc
cli
popa
sbb
outs
sub
push
rcr
aam
mov
pop
or
lahf
outs
push
ja
jnp
adc
cld
xchg
jmp
loop
into
icebp
jp
mov
sub
or
test
(bad)
in
mov
push
push
dec
popf
jmp
fstp
syscall
repz
cli
sbb
loope
dec
adc
gs
call
push
(bad)
mov
push
add
mov
ret
stc
rcl
sub
sub
(bad)
div
imul
jg
sbb
mov
loope
mov
clc
lahf
fisttp
jae
mov
cs
out
fcom
mov
aaa
dec
dec
pop
ja
arpl
push
into
mov
xchg
in
pop
push
movs
std
jle
sbb
cs
popa
call
ins
mov
stos
adc
xchg
jae
pusha
xchg
pop
rcl
rcl
xchg
jg
cmps
lock
stos
jecxz
push
cmp
sysret
cli
mov
fcomip
mov
popf
xor
shr
into
ja
std
out
cmc
pop
mul
and
sti
push
push
xchg
cmc
cs
loope
mov
dec
das
enter
loop
lods
jmp
xchg
jno
and
mov
popa
xor
and
stos
xor
arpl
fwait
dec
mov
inc
jge
mov
push
(bad)
xor
sar
add
pushf
dec
scas
loop
jl
js
sub
in
stos
add
int3
cmps
call
shl
sbb
ss
cmps
pop
mov
add
mov
(bad)
push
rol
inc
add
jmp
aas
push
scas
in
mov
fidivr
adc
ins
xchg
retf
pusha
pop
push
sbb
retf
fdivr
and
scas
je
sar
push
cmp
mov
dec
ds
call
cli
or
push
std
mov
cmp
bound
pusha
adc
cdq
into
jmp
adc
cmp
mov
and
and
sub
or
test
(bad)
cmp
mov
out
jb
out
cdq
xchg
scas
cmp
push
cdq
test
jg
xchg
test
in
aam
out
out
xchg
pop
mov
mov
or
iret
jae
cmp
lock
mov
or
ret
int3
lea
and
ret
xchg
in
cli
sar
xor
icebp
bnd
and
dec
(bad)
je
pop
ins
mov
mov
icebp
jmp
push
cmp
retf
xor
mov
push
mul
(bad)
or
retf
jge
int3
in
shl
pop
inc
xor
adc
push
repnz
mov
jns
aas
mov
popa
xor
neg
das
fs
mov
idiv
scas
mov
test
mov
scas
inc
sub
push
mov
out
outs
push
jle
ror
aaa
daa
pop
xchg
jle
cli
(bad)
lahf
call
sti
call
xlat
lock
sar
mov
sbb
pop
shl
jns
int
es
repnz
frstor
xchg
xchg
(bad)
mov
pop
mov
in
dec
cld
pop
cld
adc
and
sbb
into
sub
pushf
repnz
jmp
out
or
imul
loopne
dec
push
test
push
mov
sbb
cwde
shl
addr16
adc
(bad)
leave
lahf
(bad)
jns
fbstp
sbb
adc
(bad)
jmp
lods
adc
push
dec
push
mov
xchg
inc
sub
(bad)
stos
imul
add
inc
cmc
mov
cmp
lds
push
mov
lahf
call
mov
mov
and
inc
ret
mov
(bad)
sub
jno
mov
or
and
pop
push
push
cmps
jecxz
and
std
or
rol
mov
push
xchg
ins
rol
or
adc
mov
add
movs
xchg
scas
inc
lahf
out
sti
test
cdq
xchg
test
outs
jns
call
rol
pop
call
pop
nop
inc
mov
cli
adc
(bad)
or
fwait
fs
add
ins
sub
mov
mov
cmp
fs
mov
stos
sti
dec
or
ins
fwait
push
cmp
dec
icebp
mov
(bad)
jmp
(bad)
int3
adc
(bad)
fsubrp
inc
cmp
je
mov
les
sbb
add
xchg
ficomp
pop
arpl
loop
outs
sub
add
div
jbe
hlt
mov
push
movs
(bad)
ds
outs
loopne
repz
je
cmp
push
rcr
and
xchg
jp
sub
cmps
jle
fistp
inc
dec
mov
lahf
in
cwde
sar
dec
xchg
cli
add
(bad)
jbe
(bad)
sbb
ret
mov
adc
ins
push
das
fwait
or
and
and
or
pop
loop
mov
jno
cmc
push
jecxz
mov
push
or
gs
cdq
fidivr
movs
psraw
lods
test
push
push
inc
push
mov
sub
in
adc
xchg
or
sbb
outs
imul
pop
inc
cmp
pop
js
pop
xchg
push
je
scas
push
and
dec
adc
imul
xor
fdivp
in
push
dec
ss
push
sbb
(bad)
sub
push
mov
cmp
dec
scas
adc
out
test
ins
or
push
dec
mov
into
sub
gs
ss
mov
mov
jge
push
jne
lahf
mov
je
pusha
add
into
imul
sbb
sbb
repz
mov
adc
icebp
movs
cdq
mov
jl
and
test
sbb
cwde
(bad)
popf
sbb
rcl
arpl
push
jmp
inc
addr16
cmp
sub
jmp
push
cmp
call
mov
and
xor
mov
push
bound
sbb
pop
mov
sti
pushf
fwait
mov
xchg
xor
xor
xor
cld
test
in
imul
mov
mov
adc
and
dec
pop
scas
or
xchg
dec
sub
clc
loope
lock
cmp
or
jne
sub
xor
fwait
mov
daa
icebp
mov
shl
dec
mov
cmp
xor
xor
fnstcw
mov
and
call
lock
pop
mov
pop
ret
cmps
scas
cli
(bad)
jns
jge
into
jge
mov
pop
loope
(bad)
fidivr
push
in
lock
es
push
mov
push
call
and
adc
cwde
fidivr
call
sti
shl
and
dec
jp
ret
call
and
xor
jp
out
scas
jmp
mov
popf
and
test
push
cmp
fnstenv
pop
mov
leave
clc
out
push
retf
out
pop
xchg
jb
xor
xor
stos
mov
xor
mov
ja
pop
pop
imul
push
mov
xchg
retf
adc
mov
mov
adc
clc
ja
cmp
dec
cmp
xor
leave
outs
pop
or
pop
xchg
add
popf
xchg
pop
xlat
cmps
pop
push
mov
pop
add
adc
or
adc
inc
pop
test
mov
movs
stos
ja
sbb
xchg
mov
xchg
add
or
sbb
imul
mov
jns
test
sahf
ins
mov
push
nop
jmp
into
div
and
inc
and
cmc
aaa
popf
or
fxch
mov
test
and
mov
loopne
push
movs
mov
mov
out
fdiv
cmp
jbe
pusha
sbb
xor
imul
call
loop
ror
push
loope
xchg
into
pop
mov
mov
xor
or
jbe
jno
or
xchg
lds
xlat
xchg
pop
and
je
sbb
inc
adc
imul
inc
inc
and
inc
xor
cmc
mov
xor
call
inc
pop
clc
ja
fistp
rcl
fsubr
add
sbb
mov
rcr
jno
dec
jecxz
add
std
rol
shl
test
ins
push
and
jp
mov
inc
or
movs
dec
sbb
int
ret
in
out
dec
jge
xlat
test
sub
mov
sti
les
retf
xchg
aaa
cmp
mov
push
cmp
mov
fistp
mov
inc
dec
mov
xor
xchg
adc
sub
add
mov
leave
xor
shr
ds
xchg
outs
adc
es
adc
out
sahf
gs
inc
sbb
mov
push
inc
ret
cmp
clc
pusha
add
cmp
sub
into
loop
push
mov
push
jp
xor
jg
popa
in
jecxz
add
aam
adc
dec
dec
mov
into
jb
sar
jo
or
cmp
es
imul
out
pcmpeqw
adc
mov
jg
add
ret
rcl
mov
out
jnp
pop
lods
test
inc
retf
mov
ror
cmp
in
in
aam
fwait
mov
mov
daa
sub
sbb
shl
fcmovb
push
jg
cmp
pop
mov
daa
dec
adc
cld
aaa
cmc
imul
fstp
add
jmp
mov
pop
pop
push
loopne
adc
(bad)
sbb
or
cwde
arpl
cld
imul
ss
imul
inc
ins
mov
hlt
sub
sti
dec
nop
dec
mov
and
mov
mov
ds
sbb
mov
inc
dec
mov
pop
test
cvttps2pi
ret
stos
ret
mov
dec
ja
pop
ret
(bad)
add
shr
lea
cmp
js
(bad)
imul
rol
cmp
sbb
mov
mov
sbb
and
sub
jne
out
adc
leave
scas
sub
mov
adc
mov
out
and
push
add
pop
ins
idiv
sub
push
push
adc
loope
lods
aam
pop
cs
mov
das
sbb
jo
mov
int3
jns
rcr
inc
ss
pop
retf
mov
inc
inc
out
sub
je
push
jmp
mov
jns
fsub
or
js
sbb
(bad)
das
out
sbb
adc
push
dec
or
(bad)
push
imul
sti
push
fild
or
xchg
adc
movs
dec
ins
outs
loopne
sti
adc
cli
outs
(bad)
jae
xchg
ins
or
lods
push
call
sti
iret
sbb
das
sbb
loopne
rcl
jne
mov
dec
mov
sbb
mov
ret
sbb
and
popa
sbb
cld
aad
xchg
js
mov
fdiv
sbb
jbe
xchg
mov
punpckldq
pop
mov
push
jbe
lahf
cs
aas
not
pop
loopne
jnp
fistp
jmp
clc
lds
cmp
lea
inc
mov
push
xor
sub
loopne
pop
cmp
push
rcl
dec
ret
push
add
loope
(bad)
cdq
or
pop
test
hlt
pop
cmp
fld
push
outs
mov
jmp
dec
cmp
pop
nop
push
mov
jg
pop
mov
jmp
out
mov
pop
lods
pop
idiv
retf
mov
call
adc
ret
arpl
cmc
push
daa
mov
inc
lds
cmp
cmp
ja
pushf
jle
lods
cs
sahf
into
sbb
not
sbb
lods
out
retw
jb
xchg
jg
add
xor
clc
dec
xor
inc
std
pop
pop
les
neg
inc
rol
(bad)
(bad)
sbb
(bad)
pop
stc
imul
inc
leave
bound
call
and
cmp
test
and
cmp
and
stos
popf
popf
mov
mov
xor
sub
xor
std
mov
mov
xor
adc
fcom
add
pop
xchg
pop
cdq
sbb
outs
test
jne
lods
rcr
ins
add
adc
fiadd
test
adc
jl
(bad)
adc
ins
xchg
push
fwait
dec
fsubr
pop
sub
xor
nop
xchg
jnp
loop
jb
jg
ja
in
jne
mov
xchg
movs
pop
pop
add
pop
loopne
pop
push
add
xor
arpl
push
and
jp
dec
and
test
mov
or
cmp
cld
icebp
pushf
push
xor
add
push
dec
push
retf
cmp
jb
dec
sub
pop
push
and
mov
int3
test
fwait
xchg
jmp
dec
mov
push
mov
inc
xor
push
cmp
and
jb
adc
cli
retf
out
jno
fninit
inc
jge
ret
mov
daa
loopne
inc
fwait
dec
jle
jp
out
icebp
cmp
push
shr
cmp
inc
dec
and
jae
push
in
dec
sbb
cmp
test
jmp
jmp
fistp
sbb
es
out
jge
xor
es
mov
ja
xchg
(bad)
inc
add
call
stos
dec
and
cmp
cld
jmp
sar
cwde
not
xchg
je
add
cmps
dec
xchg
push
icebp
xor
bound
fldenv
and
push
out
jns
nop
adc
ins
mov
mov
rcl
sub
pop
push
fsubr
add
mov
xlat
mov
adc
jmp
js
push
dec
sbb
repnz
xor
aad
ret
push
xchg
test
rol
outs
(bad)
xchg
cmp
sbb
fnstcw
jl
mov
dec
lods
ss
cmc
neg
cmp
movs
clc
rcr
jle
ret
add
loopne
addr16
jnp
mov
pop
movs
data16
cmps
cdq
js
imul
pop
adc
adc
push
jmp
pop
(bad)
dec
jb
fyl2xp1
lock
or
pop
mov
pop
jmp
dec
sbb
(bad)
xor
xchg
into
lods
pop
adc
sahf
mov
dec
push
sub
enter
and
jo
xor
pop
imul
fwait
jp
ins
ins
dec
fdiv
movs
bound
das
mov
dec
lock
mov
sub
lock
inc
sahf
cli
add
cmp
repz
mov
movs
clc
mov
jmp
xor
dec
and
dec
add
and
push
jbe
dec
pop
jo
cdq
mov
or
test
pop
push
ins
jno
cmp
aad
loope
das
dec
js
frstor
cmp
out
retf
inc
jo
and
loope
sbb
and
out
aad
push
jo
inc
sbb
gs
bound
push
(bad)
cdq
mov
iret
inc
jns
pusha
or
scas
sar
in
add
xchg
pop
aad
inc
ror
rol
xor
cmp
xor
push
adc
fisubr
sar
outs
(bad)
daa
jg
dec
and
and
and
repz
sahf
cmp
repnz
imul
dec
sbb
add
dec
push
mov
push
mov
aam
clc
outs
cmc
js
jecxz
inc
adc
(bad)
jne
movs
pop
inc
out
push
sar
sbb
push
inc
xchg
cwde
sbb
test
push
jmp
dec
pop
push
push
mov
jbe
sbb
gs
es
rcl
jae
adc
and
sub
xor
mov
sub
jp
push
fild
arpl
sbb
dec
popa
hlt
xchg
xchg
das
mov
mov
test
movs
sahf
mov
call
xchg
aad
scas
push
data16
fs
add
inc
inc
mov
xchg
adc
int3
xchg
cmp
sahf
test
jnp
mov
popf
lahf
add
push
mov
xchg
es
pop
cld
xor
mov
dec
lea
mov
inc
(bad)
and
fdivr
movs
cmp
fldcw
(bad)
jg
cs
bound
imul
mov
mov
push
sar
mov
(bad)
in
test
adc
bound
cmp
pop
jno
(bad)
je
imul
cmps
or
sbb
ret
out
sahf
outs
jo
cmp
fstp
adc
pushf
jmp
xor
pop
in
loope
sbb
xor
shr
pop
xchg
jl
adc
dec
aaa
push
adc
xor
fxch
sub
imul
lock
inc
ret
jmp
jno
mov
in
mov
out
mov
sbb
mov
(bad)
int3
call
fisttp
les
(bad)
pop
leave
or
loope
out
(bad)
sub
add
test
rol
outs
shrd
pop
ret
std
arpl
(bad)
fadd
or
sub
lock
stos
std
int
mov
dec
mov
imul
outs
push
int
cmp
and
jbe
or
xor
push
lods
sahf
les
lods
imul
fisubr
enter
push
push
call
stos
jmp
or
int
aad
mov
sub
mov
xor
imul
pop
test
jnp
or
js
push
sub
rcl
pop
cmc
jbe
push
adc
mov
leave
shl
sub
xor
or
adc
cmp
pop
mov
push
adc
xchg
push
xchg
loope
stos
ret
pop
cmp
xlat
or
cmp
inc
ss
dec
sub
inc
or
adc
int3
iret
and
add
mov
dec
clc
push
fisub
add
and
mov
push
fcomp
int
ins
(bad)
and
inc
dec
ret
cmps
cld
mov
stos
aas
pusha
cmp
mov
imul
cmp
call
iret
sub
mov
mov
jne
sbb
jle
pop
push
push
mov
shl
cmps
or
into
shr
ins
es
ds
mov
popf
lds
mov
rol
(bad)
pop
je
call
inc
aas
(bad)
test
jno
pop
in
test
mov
mov
test
mov
or
lods
imul
mov
jg
xchg
mov
enter
nop
mov
in
cmp
pop
and
sub
xchg
stos
sub
stos
add
jecxz
cmp
repnz
fstp
outs
inc
and
or
dec
pop
pusha
xchg
or
jp
cmp
stos
shl
pop
repz
mov
or
dec
pop
and
loopne
and
push
cmc
mov
rol
jg
mov
(bad)
jae
clc
add
xchg
xor
add
xchg
or
ins
aam
cli
push
or
add
icebp
push
sbb
sub
sbb
sti
ret
xchg
pop
push
icebp
aam
inc
xchg
dec
dec
jmp
or
mov
add
jbe
out
or
jle
loope
gs
or
xor
xchg
(bad)
addr16
retf
fsubp
ds
dec
ins
lahf
nop
pop
es
xchg
mov
jecxz
and
pop
jo
xchg
test
inc
pusha
in
imul
and
dec
mov
adc
inc
and
push
jns
jmp
enter
bound
push
sub
jbe
mov
loope
mov
jle
mov
call
sahf
std
sbb
out
out
sub
mov
xlat
adc
fmul
mov
enter
icebp
xor
les
sar
shr
or
cld
add
repz
xchg
in
add
scas
jnp
in
mov
pop
xor
sti
es
inc
xchg
movs
cld
imul
ror
test
dec
pusha
xchg
and
inc
jb
xlat
pop
enter
xor
dec
iret
cmp
and
outs
sbb
pop
sub
xchg
jge
dec
pop
jnp
popf
lods
iret
add
push
int3
cmp
mov
fistp
mov
ret
test
cs
jmp
mov
push
(bad)
in
ret
aaa
cmps
mov
mov
dec
out
clc
dec
jae
inc
popa
push
aas
ds
scas
mov
ins
cmps
dec
in
imul
imul
shl
stc
mov
xchg
dec
xchg
and
std
mov
in
push
dec
fidivr
aas
xor
mov
adc
cmp
xlat
mov
stos
mov
iret
dec
sbb
ins
cmps
push
add
dec
xor
cld
jb
xchg
and
pusha
out
push
and
and
lods
sbb
mov
jae
push
mov
xor
ficom
and
mov
mov
jnp
aas
movs
in
das
ins
mov
ror
xchg
enter
and
or
or
and
adc
addr16
das
or
add
rcr
jae
gs
repz
je
and
cmp
mov
sbb
loope
mov
lea
int3
mov
es
xchg
sbb
mov
sbb
retf
das
mov
mov
std
mov
sar
push
add
sti
jge
jno
mov
inc
and
mov
hlt
addr16
inc
add
push
repz
(bad)
mov
push
mov
and
mov
popfw
jp
inc
add
lahf
js
pop
jge
repz
fisub
push
xchg
pop
xchg
test
mov
out
jl
fstp
pop
inc
lea
inc
add
out
pop
xchg
mov
adc
ffreep
enter
jae
pop
inc
adc
sub
in
imul
div
xchg
sbb
jp
xchg
in
push
je
test
into
cmps
std
cmp
movs
adc
jecxz
jmp
leave
cdq
jns
push
cdq
inc
push
fs
call
and
fwait
add
xor
mov
push
enter
lods
cs
jmp
jb
push
xlat
rcl
pop
add
out
ret
sub
mov
mov
and
push
arpl
rcr
in
fcmovnb
mov
cmp
div
mov
lock
push
inc
pop
jp
rcr
cmp
pushf
mov
push
mov
pop
fild
pushf
push
out
shl
fadd
fs
mov
xor
or
js
inc
leave
pop
int
test
jecxz
sar
jl
int3
loope
add
push
js
in
out
xchg
les
jno
xchg
sub
inc
and
movs
iret
shl
and
fstp
jbe
or
or
and
mov
fist
retf
iret
sub
jb
(bad)
cmp
or
sbb
in
mov
std
call
lock
push
enter
add
adc
loop
dec
jg
in
dec
pop
inc
jbe
xchg
fmul
push
add
jb
inc
int
shr
pusha
ds
daa
dec
ins
sbb
push
pop
call
aaa
jmp
jbe
lods
es
push
bound
call
nop
enter
add
repz
nop
dec
mov
dec
mov
(bad)
jmp
or
pop
loope
cwde
pushf
jmp
pop
xor
dec
sub
mov
idiv
xchg
cli
jnp
xor
xor
push
xchg
push
aam
sti
mov
addr16
(bad)
mov
iret
fwait
je
push
or
xor
outs
fisttp
call
dec
movs
xchg
mov
sbb
xchg
ins
ret
sbb
sbb
inc
sar
shl
push
sub
call
pop
cli
test
adc
pop
jno
loop
(bad)
fimul
push
and
fist
mov
jb
add
and
sbb
fsubrp
fwait
movs
push
push
sbb
xlat
iret
push
mov
sub
dec
mov
dec
jmp
dec
shl
or
mov
(bad)
lock
imul
es
jl
adc
out
mov
sbb
add
xor
retf
and
mov
mov
dec
scas
xchg
dec
rol
pushf
cmp
fbstp
fcmovu
pushf
or
mov
inc
jns
mov
les
jle
push
mov
iret
pop
fs
pop
inc
xor
jbe
jmp
hlt
retf
fwait
sbb
mov
ins
(bad)
adc
mov
outs
push
xchg
sahf
or
cmp
scas
dec
out
imul
mov
aad
jno
xor
or
ins
addr16
popa
cmps
shl
cdq
out
bound
or
push
pop
ja
jmp
bound
test
or
inc
jbe
loopne
enter
(bad)
adc
sub
ss
add
fidivr
add
das
pop
pushw
xchg
mov
or
imul
(bad)
xchg
jne
aaa
xor
(bad)
fdiv
dec
in
or
xchg
jno
pushf
fs
xlat
(bad)
cmp
xor
cmp
xor
pop
sbb
push
mov
or
dec
lods
lea
mov
add
add
cmp
loop
cld
aam
je
or
fwait
mov
dec
lea
add
std
fdivr
and
ins
sub
xor
lea
or
(bad)
dec
mov
std
xor
lods
jecxz
shr
loop
mov
push
enter
sub
outs
sub
adc
adc
loope
pop
sbb
ins
cmp
retf
mov
cmp
cmp
xor
cdq
imul
mov
(bad)
fwait
cbw
clc
lock
inc
(bad)
fstp
call
in
push
inc
add
sahf
aas
scas
pop
(bad)
add
neg
mov
out
sub
lock
add
retf
inc
and
jne
jmp
sbb
mov
mov
jle
dec
test
loope
and
mov
test
shl
sub
jecxz
ds
(bad)
(bad)
pop
into
aas
(bad)
or
and
cmps
jmp
jns
(bad)
sbb
dec
push
dec
mov
ins
retf
jb
add
sahf
scas
cmp
loopne
add
ret
pop
cli
ins
les
int
jno
adc
or
jbe
mov
pop
jae
add
xor
test
sbb
fimul
sahf
(bad)
ds
mov
add
scas
jo
jb
xchg
xor
xor
jmp
adc
push
push
repz
(bad)
cs
jg
and
std
sbb
hlt
mov
retf
dec
jmp
mov
cmp
mov
add
xor
pusha
out
(bad)
fcmove
leave
mov
scas
jp
(bad)
jmp
in
jb
or
or
sbb
sub
addr16
jne
sbb
pop
cmps
(bad)
ins
fist
ins
pop
scas
add
popa
sub
in
addr16
dec
or
ds
sub
add
inc
pushf
or
sub
pushf
scas
jmp
(bad)
retf
fstp
pusha
outs
jge
jp
or
push
not
hlt
cmp
(bad)
and
pop
adc
or
push
or
fist
dec
sub
stos
push
cmp
(bad)
pop
cmp
mov
pop
jbe
mov
fiadd
cli
fisttp
sub
ret
stos
in
or
movs
push
add
daa
cmp
out
sar
lods
leave
or
or
inc
imul
iret
mov
leave
imul
jbe
mov
loopne
imul
sahf
in
sub
xor
bound
fiadd
inc
dec
cmp
mov
shl
mov
and
scas
aad
xlat
or
adc
xchg
addr16
lea
js
xchg
fnstcw
lods
dec
leave
sbb
fdiv
xchg
xchg
jl
cmp
sbb
mov
mov
sub
mov
mov
sbb
lds
mov
nop
inc
and
inc
xor
mov
cmps
popf
(bad)
or
in
daa
mov
push
cmp
xchg
xchg
fld
cwde
mov
dec
out
pushf
jle
mov
cwde
outs
inc
stos
fisub
jne
dec
push
sbb
iret
inc
fucom
call
jg
test
dec
paddw
jp
lahf
jp
inc
mov
xlat
into
dec
mov
lods
inc
jg
mov
mov
mov
jmp
dec
mov
xor
fdiv
xchg
bound
mov
(bad)
xor
retf
int
int
add
add
jne
jecxz
pop
mov
sbb
xor
cmp
cdq
imul
mov
adc
pop
sub
fistp
pop
mov
push
push
cmps
jnp
test
sub
test
push
sbb
in
dec
and
push
sbb
jecxz
push
push
div
into
cmp
pop
adc
push
les
mov
adc
cmps
push
addr16
sbb
or
dec
jbe
xor
adc
mov
hlt
cli
aad
sub
mov
jg
mov
gs
pop
call
in
popa
inc
in
adc
pop
mov
cmp
jecxz
ret
dec
aad
repz
cli
imul
mov
pop
sub
cmp
mov
outs
sti
and
inc
fild
ss
retf
nop
xchg
jo
pop
cs
mov
mov
xor
in
sub
fs
mov
and
ds
ret
emms
(bad)
not
xor
adc
aam
mov
fsub
ins
adc
int
enter
mov
retf
fmul
mov
aad
sub
mov
jle
sub
(bad)
(bad)
(bad)
rcr
xor
mov
sbb
mov
leave
fisubr
test
inc
iret
sub
nop
jno
dec
xchg
test
and
xchg
ds
jg
arpl
imul
nop
cwde
adc
sub
jbe
sahf
movd
imul
sahf
scas
xchg
push
js
mov
and
sbb
int
add
xor
or
dec
ja
imul
mov
inc
xor
pop
jno
or
mov
xchg
repnz
pop
rcl
hlt
xchg
dec
sbb
imul
push
add
inc
xor
or
aaa
es
mov
sbb
mov
mov
pop
inc
ss
push
(bad)
cld
les
jge
les
cmc
add
mov
and
ja
and
cli
daa
push
push
nop
jg
in
pop
(bad)
push
arpl
xchg
cld
jge
push
test
and
ja
imul
and
loopne
out
mov
dec
mov
add
pop
or
xchg
push
sbb
dec
leave
jmp
hlt
js
repz
mov
push
xchg
loopne
xchg
pop
jp
fwait
cmp
je
les
lock
push
jnp
fistp
cwde
add
into
or
mov
clc
cdq
sbb
pushf
sbb
or
add
mov
(bad)
adc
mov
test
xor
call
pop
scas
push
out
ins
add
lods
fidiv
cmp
leave
scas
je
into
ret
lds
cmp
mov
ds
shr
call
sti
int3
std
adc
out
xchg
aad
das
leave
mov
lods
jns
icebp
pop
push
or
pop
xor
movs
es
jge
popf
pop
lock
pop
(bad)
mov
js
mov
fisttp
cmp
scas
mov
jnp
lea
mov
ret
into
js
rcr
sti
inc
idiv
into
mov
cmp
icebp
pop
sbb
js
sbb
jecxz
fimul
and
jmp
sbb
add
fstp
mov
xchg
imul
cmp
scas
loop
test
cmp
push
cdq
loope
push
fstp
test
pop
mov
icebp
mov
ins
and
sub
xlat
addr16
iret
xchg
mov
sbb
test
xor
or
test
mov
inc
shr
mov
ror
aam
mov
or
pusha
xchg
enter
dec
jne
adc
mov
(bad)
mov
and
(bad)
movs
in
sub
loope
leave
lods
leave
inc
imul
mov
stos
call
pop
scas
push
adc
aam
cmp
bound
les
and
(bad)
call
xlat
mov
pop
adc
out
ds
cli
int3
fistp
jmp
add
rcl
(bad)
in
int
pop
and
xchg
sub
sbb
popa
adc
les
xchg
(bad)
iret
nop
mov
adc
into
mov
lods
stc
in
pop
mov
test
clc
into
jmp
dec
iret
xchg
and
add
pushf
jge
out
stos
ss
test
dec
pop
jbe
jne
adc
or
outs
shl
fistp
xchg
xchg
jg
and
arpl
arpl
rol
ret
iret
movs
adc
fmul
out
pop
sub
(bad)
loope
fsubr
xchg
scas
(bad)
pusha
not
int3
inc
call
leave
aad
test
pop
fcom
rol
cmp
push
xor
sti
bound
pop
lock
inc
sub
jnp
or
pushf
push
fmul
sbb
dec
test
nop
or
mov
inc
in
mov
in
scas
std
mov
add
add
mov
sbb
(bad)
dec
xor
cmp
test
aas
push
cwde
out
out
push
adc
imul
mov
in
mov
outs
dec
mov
(bad)
jbe
cmp
jg
mov
add
inc
popa
and
cld
ret
in
dec
pop
ins
push
gs
shl
loope
(bad)
fwait
add
das
ja
dec
add
out
lock
pop
repz
call
mov
lods
clc
stos
fistp
repnz
(bad)
sub
mov
mov
jg
pop
scas
rol
pop
sbb
pop
jg
js
div
pop
push
cmp
call
pop
sub
xor
popf
xchg
inc
sub
xor
int3
push
dec
sbb
push
push
mov
sti
sbb
mov
das
es
(bad)
or
aas
mov
adc
ins
frstor
or
cld
mov
outs
adc
push
arpl
in
outs
mov
adc
dec
outs
xlat
inc
fcom
ins
das
icebp
repz
das
cmp
ficom
movs
inc
push
mov
jo
retf
pop
jle
adc
or
repz
js
cld
mov
out
loopne
mov
pusha
push
fdiv
xor
lahf
dec
mov
push
and
scas
fsub
fsub
inc
sub
dec
and
loop
sub
jmp
dec
pop
push
mov
popf
inc
div
ins
clc
je
cld
mov
scas
ins
jbe
leave
or
dec
adc
addr16
aad
in
jno
inc
mov
sub
retf
movups
imul
scas
jnp
mov
jmp
mov
push
pop
(bad)
lods
rcpps
mov
push
aas
push
stos
(bad)
data16
pop
int3
jmp
rcl
jns
hlt
lahf
out
aam
mov
rcl
mov
aaa
mov
ret
adc
pushf
adc
aad
es
or
pop
lahf
int
inc
ss
or
jno
cmps
add
fist
jp
sub
sub
in
push
daa
jno
(bad)
in
rcr
clc
mov
inc
movs
out
enter
inc
mov
cdq
sbb
xchg
dec
and
call
jecxz
jb
sub
leave
xchg
hlt
push
clc
mov
and
stos
push
cli
cld
ficomp
mov
pop
ret
xor
lods
mov
ja
shl
pop
lds
test
shl
aas
pop
(bad)
jge
bound
jecxz
mov
jbe
push
push
pop
jp
pop
mov
push
sar
lods
lahf
xor
int
push
in
test
iret
and
and
ja
fwait
xlat
es
cmc
mov
aaa
xor
mov
inc
mov
inc
out
lods
xchg
cmp
scas
dec
fisubr
arpl
xchg
iret
jge
xlat
sub
jae
cld
mov
jmp
xchg
mov
ds
shl
and
test
push
adc
cmp
jno
or
ss
pop
xchg
test
push
into
push
push
mov
push
pusha
pop
push
ds
and
imul
or
cdq
(bad)
repnz
mov
int3
lods
or
outs
fistp
xchg
sar
push
es
stc
and
mov
and
sbb
pop
enter
adc
enter
fcmovnb
(bad)
fst
or
adc
inc
aaa
cs
mov
push
(bad)
adc
int3
mov
ror
or
sar
lahf
jmp
or
mov
pop
sub
cmp
jo
dec
jne
sbb
jnp
pop
lods
add
mov
or
xchg
mov
adc
and
std
xor
clc
cli
dec
aaa
mov
push
add
shr
pop
ret
jp
inc
pushf
adc
push
repz
add
retf
mov
sbb
fs
mov
and
fs
jecxz
jle
mov
pop
jmp
add
outs
ins
ins
sar
xlat
xchg
add
shl
jl
cmp
dec
mov
int
movs
sti
outs
shl
or
int3
pop
jns
leave
(bad)
cmp
xlat
inc
cmp
loop
cs
pop
xchg
les
cmp
mov
or
add
cmps
sub
test
fisub
dec
xchg
push
pop
lods
add
lahf
xchg
fdivr
addr16
add
shr
test
pusha
dec
jbe
cmp
es
push
mov
jmp
sub
enter
ja
pop
inc
leave
mov
dec
cmp
pop
(bad)
xchg
mov
daa
mov
retf
xor
(bad)
cmp
xor
and
or
(bad)
mov
daa
lock
mov
or
cmp
mov
dec
sbb
in
mov
jo
xor
jne
sbb
mov
xlat
jle
or
or
push
clc
rcr
inc
push
mov
mov
popa
xchg
rcr
and
xchg
push
mov
sbb
jge
cli
cmps
mov
pop
sub
jnp
mov
mov
mov
sub
sbb
aaa
push
pop
push
retf
ret
test
and
and
movs
dec
test
popf
pusha
and
adc
out
movs
or
ins
int3
push
test
gs
dec
outs
mov
mov
aas
(bad)
movs
adc
lods
mov
and
mov
loopne
and
mov
sahf
je
inc
scas
test
mov
scas
lahf
ret
in
dec
xchg
cmp
fs
je
mov
jle
push
adc
rcl
push
xor
adc
xchg
push
not
fnstsw
leave
push
dec
mov
cli
cmps
push
stos
aad
push
pop
retf
test
dec
adc
shl
jbe
scas
stc
jg
push
dec
dec
xchg
xchg
ret
fstp
fstp
sar
xor
loopne
lods
es
sub
pop
inc
xor
inc
mov
rcl
pop
popa
push
gs
sbb
or
sbb
ror
test
xchg
sbb
mov
fstp
cmc
pop
sbb
jbe
add
loop
adc
push
movs
shr
lods
ret
fiadd
rcl
push
in
test
adc
sub
stos
mov
sbb
jne
pop
shl
in
rcl
into
inc
inc
jbe
scas
and
out
icebp
stos
mov
xor
rcl
sub
in
cli
sbb
inc
mov
pop
das
pop
les
pop
js
push
imul
xchg
or
jns
mov
pop
loop
stos
int
pop
inc
inc
lock
jge
int
pop
sub
jb
cs
or
lahf
lods
xlat
ficom
enter
push
mov
(bad)
lahf
jge
icebp
sub
sbb
mov
std
pop
mov
add
cmps
daa
jecxz
pop
sub
fsubp
int3
in
jb
clc
cmp
or
das
push
xchg
stos
add
sbb
xchg
les
dec
arpl
adc
pop
stos
sar
pop
jb
ins
fcmovu
sub
ins
jbe
adc
repnz
mov
add
out
mov
sub
test
lods
or
mov
push
leave
add
shl
cli
aam
mov
inc
lods
mov
xchg
push
sar
pop
repnz
(bad)
mov
dec
popf
mov
call
loope
mov
or
stos
pop
repnz
jg
out
xlat
lods
inc
ja
pop
(bad)
(bad)
xor
cmp
loop
adc
inc
clc
ret
mov
pop
or
neg
fstp
xchg
push
mov
cmove
(bad)
inc
sub
mul
inc
xchg
adc
test
movs
gs
loop
(bad)
std
xchg
mov
dec
add
cli
mov
jmp
es
scas
arpl
test
retf
pop
iret
call
xchg
lds
dec
jae
mov
ret
jbe
pop
cmp
mov
fstp
xchg
push
xor
adc
push
adc
cmps
dec
cdq
ret
test
add
mov
cmp
jl
sbb
pop
pop
fidiv
in
loop
add
out
pop
mov
cmp
pushf
dec
fist
sti
push
inc
outs
leave
inc
mov
push
jo
xor
dec
loop
ret
loopne
xchg
xchg
sbb
and
pop
test
mov
or
stos
or
mov
mov
mov
(bad)
fadd
sbb
in
aaa
pop
test
sbb
mov
les
(bad)
cmps
xor
cmp
fisubr
inc
sub
inc
mov
stc
adc
xor
dec
pop
div
jo
stc
neg
pop
push
loopne
movs
dec
push
add
ficomp
call
pop
mov
imul
repnz
cs
fwait
ins
cmp
or
jge
sbb
push
leave
dec
inc
imul
into
pop
push
nop
and
scas
jne
mov
mov
sbb
scas
add
ret
jbe
mov
pop
ret
stos
pop
mov
cs
mov
mov
mov
aad
sub
movs
shr
push
loopne
es
add
in
(bad)
and
std
pop
movs
mov
jmp
loop
xlat
mov
and
sub
mov
inc
js
cmp
stos
repnz
jge
and
lods
imul
mov
xchg
movs
ror
popf
and
inc
out
stc
fwait
dec
in
sub
fsubr
dec
jl
cwde
in
movs
pop
jae
jge
xor
fistp
clc
push
lea
in
arpl
ss
rcr
(bad)
ror
loope
sbb
repnz
and
fsub
pop
jns
adc
sbb
popf
xor
(bad)
fistp
cmp
loopne
les
mov
movs
push
add
jb
xor
nop
cmp
iret
pop
adc
(bad)
pop
mov
pusha
jmp
inc
mov
adc
out
push
clc
xchg
dec
scas
ins
inc
int
mov
fcmovne
mov
xchg
and
out
inc
cmps
pop
pop
and
test
cmps
fwait
shr
mov
shl
jle
push
pop
adc
cmc
(bad)
adc
xchg
inc
mov
sbb
loope
mov
cmp
(bad)
mov
inc
imul
add
adc
lods
push
mov
popa
(bad)
in
shl
adc
enter
mov
cmps
pop
jmp
mov
ret
popw
sahf
jmp
test
xor
and
push
pop
(bad)
bound
inc
lods
sub
push
jecxz
pop
xor
(bad)
jb
cdq
fwait
mov
ja
mov
lds
daa
push
xor
(bad)
pop
sahf
clc
dec
and
mov
outs
dec
inc
jns
push
mov
push
mov
pop
jecxz
mov
and
inc
add
add
pusha
and
in
xchg
mov
test
call
sbb
dec
outs
bound
fiadd
rcl
out
dec
test
fcom
or
scas
icebp
retf
jns
mov
cmp
(bad)
add
loop
iret
imul
jo
in
test
cdq
jl
cdq
lahf
push
fld
xchg
repz
outs
mov
rcr
retf
inc
idiv
imul
push
add
aaa
and
add
cmc
xlat
lock
cmp
inc
dec
xor
xchg
or
out
sub
jns
das
mov
push
aad
repz
imul
sub
fdiv
mov
mov
dec
push
scas
inc
aad
add
pop
sub
popf
je
addr16
fwait
pop
js
iret
lods
mov
movs
loopne
xchg
pop
fmulp
ficomp
test
mov
or
mov
cmp
test
pop
test
pop
cdq
pop
jno
lahf
push
jne
fist
or
mov
aaa
movs
mov
sbb
popf
fwait
out
imul
xor
outs
lahf
adc
xor
cmps
ficomp
mov
push
rcl
sbb
xchg
inc
adc
xchg
xchg
out
ss
push
jnp
shr
push
jecxz
mov
nop
push
mov
mov
pop
iret
ss
aaa
mov
or
and
pop
mov
jle
(bad)
movs
lock
leave
mov
in
push
xchg
xor
mov
mov
repz
jo
out
int3
sti
shl
cli
fst
jle
pop
mov
cld
inc
pop
mov
pop
cmp
mov
xor
xor
movs
test
dec
jmp
mov
out
(bad)
daa
int
mov
fmul
jle
sbb
adc
inc
mov
leave
ins
loop
pushf
cmps
mov
in
cmc
add
jge
add
mov
pop
ret
mov
and
(bad)
and
mov
leave
icebp
dec
pop
les
ficomp
pushf
(bad)
(bad)
sub
cs
jo
mov
cmp
in
jmp
xor
fwait
and
xchg
les
pop
ins
and
(bad)
sbb
mov
mov
jns
cs
popf
inc
mov
pop
pop
adc
ret
pop
jge
pop
rcl
sti
sub
inc
xor
add
stos
dec
out
mov
xchg
push
movs
jbe
push
enter
xchg
out
mov
mov
ins
cld
or
mov
aad
add
loope
and
xlat
xor
je
mov
loop
add
test
cmc
ss
push
xlat
pop
sbb
xchg
ss
inc
cs
nop
(bad)
jge
mov
ins
movs
push
inc
out
cli
or
push
imul
dec
fisubr
arpl
idiv
int3
mov
lods
mov
call
test
dec
pop
push
mov
lahf
rcl
fucomi
and
test
cmp
adc
push
aad
mov
xchg
(bad)
adc
cmps
xchg
fild
xor
push
cmp
in
or
int3
nop
dec
adc
mov
jno
cmp
jne
pop
dec
push
call
mov
add
adc
xchg
(bad)
add
and
sub
popa
jle
mov
push
xor
es
and
mov
shl
and
aaa
in
cwde
mov
imul
(bad)
sar
mov
adc
sub
movs
div
push
and
nop
out
sbb
xor
hlt
mov
cmp
aad
iret
mov
mov
inc
or
mov
xchg
adc
or
aaa
fidivr
pop
inc
scas
(bad)
sub
(bad)
or
jmp
dec
xor
pop
mov
sub
sti
mov
bnd
data16
jno
push
push
mov
and
scas
fsubr
mov
(bad)
in
mov
mov
(bad)
(bad)
outs
fcmovbe
and
fimul
mov
xchg
and
ds
movs
xchg
push
push
mov
dec
adc
enter
out
outs
sbb
out
xor
mov
addr16
repnz
jnp
mov
popa
xchg
cmp
and
mov
dec
xchg
or
sub
mov
inc
jb
push
aas
(bad)
pushf
data16
or
xor
aas
shl
gs
sbb
mov
add
es
pop
mov
std
add
jns
bound
movs
cmp
repz
iret
mov
jne
stc
add
repz
xor
loop
pop
add
push
out
(bad)
jl
push
pop
in
mov
dec
push
sbb
add
mov
mov
in
inc
test
aas
js
push
scas
rcl
shr
xor
mov
fsubp
test
mov
test
cmc
ins
mov
xor
jg
xchg
push
cdq
mov
outs
jo
jg
mov
push
xchg
sbb
int3
sbb
shl
push
mov
fwait
xchg
xchg
cmp
adc
push
dec
or
push
ret
pusha
aad
stos
add
mov
xchg
dec
mov
sbb
ds
add
sbb
mov
dec
push
fst
jnp
in
mov
imul
push
sub
xor
mov
inc
cmp
fsub
adc
aas
cmp
sti
fbstp
(bad)
int
mov
in
pop
jecxz
ss
inc
fidivr
xchg
(bad)
cwde
enter
jne
movs
fwait
popf
lds
out
stos
int3
mov
pop
ror
mov
sbb
and
or
pop
and
out
loop
test
pusha
leave
adc
push
dec
add
pop
mov
in
pusha
pop
fnstcw
mov
push
xlat
loope
sub
fwait
add
popf
push
inc
mov
sub
test
push
fild
pop
sbb
adc
jle
cmp
rol
popf
add
lods
imul
cwde
mov
push
fadd
daa
xchg
repnz
mov
popa
pop
push
out
cld
shl
add
outs
sub
out
cmc
fcomp
ins
lods
or
sub
enter
clc
pop
adc
mov
mov
mov
mov
jne
test
mov
js
rol
mov
lods
pop
add
stc
push
in
jl
add
push
loopne
enter
mov
cmp
sbb
cmps
repnz
jns
pop
sbb
push
vpaddw
and
out
icebp
or
adc
add
movs
out
jo
mul
cmps
xor
mov
xchg
pop
out
rcl
and
cmp
cmps
out
out
xchg
sti
or
sub
mov
push
adc
sub
outs
jge
lods
mov
push
cdq
pop
fisubr
mov
sub
cwde
pop
add
rcl
inc
sar
leave
loop
fcom
cs
aas
jmp
push
pop
cmps
jo
cmp
inc
mov
add
dec
aad
push
xor
xor
push
retf
sub
push
pop
pusha
add
jae
add
xor
cmc
imul
adc
xor
mov
sub
shl
arpl
mov
pop
call
mov
gs
mov
ins
mov
(bad)
jmp
loopne
inc
into
adc
mov
jge
xchg
and
cmps
fistp
xchg
scas
fldcw
stc
loop
out
add
pop
adc
adc
adc
test
or
out
mov
push
inc
ror
push
adc
rcr
pop
pop
xlat
outs
int
pop
inc
call
adc
mov
jl
not
jmp
mov
mov
fistp
stos
(bad)
push
clc
mov
pop
rcr
jmp
add
jl
jnp
push
inc
leave
in
and
hlt
xchg
xor
mov
push
mov
pop
cmc
into
push
out
aaa
(bad)
loope
cwde
call
cli
mov
into
retf
xchg
enter
cmp
movs
ins
ds
jo
adc
call
mov
sbb
mov
daa
mov
out
sar
mov
inc
gs
inc
pop
xchg
pop
dec
dec
imul
stos
stc
jle
mov
xchg
dec
loope
(bad)
in
cmp
mov
(bad)
enter
pop
adc
hlt
fld
pop
aad
out
ret
stc
leave
push
sub
push
and
je
idiv
mov
aaa
fmul
push
and
sbb
mov
cli
repnz
sbb
outs
pop
and
sub
repnz
fst
fistp
jl
ins
pop
pop
aas
fdiv
adc
jns
fisub
cs
call
pop
test
push
fs
inc
dec
inc
les
mov
cmp
adc
retf
cmp
adc
push
pop
fwait
repnz
xor
xor
(bad)
js
jp
(bad)
jo
rol
xchg
mov
xchg
cmp
add
pushf
fcmovbe
mov
aas
push
out
sar
inc
faddp
mov
push
or
inc
push
out
pop
fld
add
(bad)
fmul
out
cmp
cs
cmp
adc
mov
inc
outs
push
std
daa
(bad)
cmp
ins
jmp
inc
pop
pop
add
mov
fmul
mov
xor
sub
mov
int3
xlat
enter
mov
jb
jle
loopne
call
cli
add
cmp
cdq
push
xchg
test
les
daa
inc
div
gs
pop
ret
mov
push
push
lahf
pop
push
mov
sub
fisttp
and
xor
repnz
jbe
test
xchg
mov
and
js
pop
fisub
or
fcmovbe
push
fs
mov
in
mov
adc
push
push
ud0
loope
inc
out
push
lds
pop
neg
inc
adc
leave
movs
add
pop
es
xchg
and
pop
inc
dec
push
test
or
mov
sub
inc
test
retf
push
jle
push
in
mov
inc
add
or
mov
inc
scas
cs
adc
call
daa
aad
jb
push
dec
sar
fimul
xchg
mov
push
es
add
dec
push
and
pop
xor
into
pop
rcl
inc
fwait
icebp
add
mov
xor
mov
fst
inc
dec
jge
in
or
repz
xchg
mov
rcl
mov
sbb
fst
xor
xchg
pop
or
outs
mov
scas
jae
aam
add
out
mov
add
mov
push
sbb
in
mov
ja
cmp
sub
mov
stc
in
and
iret
dec
test
fwait
outs
jo
push
out
adc
xor
das
fcmovb
cs
sub
mov
inc
cmp
lods
sbb
cld
inc
and
xlat
mov
(bad)
out
pop
enter
jne
test
lea
or
push
cmp
pop
sub
call
sub
push
sub
sbb
xor
mov
mov
mov
pop
hlt
sbb
dec
or
jns
xor
lock
sub
xor
cmps
add
and
pop
inc
ror
cmp
rcr
leave
and
inc
enter
mov
nop
and
outs
xor
mov
xor
jns
scas
(bad)
push
mov
jb
xor
pop
les
jns
mov
out
xor
(bad)
jge
dec
add
xchg
jne
mov
dec
outs
out
movs
xchg
out
dec
xchg
xor
xor
mov
mov
retf
sub
pop
push
dec
cli
mov
aad
xor
push
and
sbb
fisubr
and
mov
push
pop
outs
scas
dec
sar
xor
or
dec
pop
xchg
fiadd
sbb
xor
adc
mov
mov
push
jne
aad
in
ins
dec
jo
ror
call
xchg
(bad)
cmp
cld
inc
bound
fidivr
ins
(bad)
test
sbb
sub
dec
int
sbb
cmp
popf
mov
mov
xchg
add
into
call
in
fnsave
adc
sahf
lahf
sbb
js
aas
jo
dec
inc
mov
stc
cmp
outs
les
ja
cmp
sahf
mov
imul
sub
repz
aad
xchg
sti
sbb
fstp
sub
push
xor
pop
ror
cmp
ds
repz
cmc
inc
call
xor
adc
jns
xor
mov
ins
dec
dec
stos
lods
dec
fwait
mov
(bad)
rol
pop
mov
add
test
xchg
cwde
sbb
mov
jo
test
(bad)
mov
mov
shr
test
sahf
in
push
mov
pop
xchg
inc
mov
fistp
cli
bound
sub
xchg
int
xor
les
sub
inc
aas
ss
loop
xor
add
mov
xchg
xchg
push
(bad)
in
sbb
mov
(bad)
pop
jg
cmp
mov
cmp
(bad)
dec
pusha
pop
jl
mov
cmp
cmp
test
mov
jg
arpl
push
push
mov
leave
sbb
fnstcw
outs
(bad)
dec
cmp
(bad)
aaa
dec
not
loope
stos
aad
jle
cmc
cmp
or
gs
jle
enter
fisubr
in
pop
or
popf
jl
aaa
jl
pushf
jns
cmps
or
or
out
mov
clc
cld
add
sub
sub
and
dec
pop
push
adc
xor
dec
fldcw
stos
(bad)
or
ins
and
clc
mov
popa
fs
mov
jge
leave
cmc
add
mov
mov
aas
mov
cmp
sub
fmul
adc
int
retf
iret
dec
(bad)
pop
cmp
rcr
jns
lock
cmp
mov
call
scas
jg
mov
sti
cmps
dec
jo
inc
into
pop
loop
mov
out
mov
pop
jg
push
daa
(bad)
in
pop
mov
sub
fidiv
sub
call
(bad)
inc
iret
jne
daa
mov
and
js
ins
aas
daa
sbb
pop
es
xor
mul
mov
sbb
add
fs
lea
pusha
cli
icebp
add
sbb
and
xlat
inc
or
xchg
cdq
inc
fcomp
xor
push
in
inc
adc
sub
in
jae
movs
jg
js
rol
lods
cmp
xor
fisttp
sbb
xor
xor
or
imul
int
mov
mov
cmc
jnp
sbb
jmp
inc
jno
add
xor
xchg
pop
cmp
mov
adc
ins
push
rol
mov
xchg
cmp
mov
adc
sub
and
loop
enter
lea
push
sub
push
aad
sbb
and
sub
mov
cld
xlat
mov
test
dec
mov
mov
fs
mov
retf
loope
mov
mov
repnz
stos
pusha
mov
sbb
loop
cmps
xor
mov
aad
push
xchg
inc
mov
dec
inc
ret
fadd
jb
and
inc
test
and
add
call
pop
scas
std
lahf
xchg
popf
push
dec
push
ins
into
inc
cmp
mov
iret
popf
(bad)
xor
mov
mov
mov
mov
and
iret
cmp
les
xchg
hlt
or
mov
pop
pop
test
fistp
mov
bound
nop
clc
and
cmp
ficomp
mov
mov
push
pop
shl
ja
mov
push
pop
pusha
adc
adc
sbb
mov
cmps
adc
adc
inc
enter
jo
xor
bound
ss
push
sub
(bad)
stc
jecxz
inc
dec
test
arpl
call
aas
sub
dec
mov
xchg
retf
outs
mov
xor
mov
fwait
in
test
pop
cmps
jmp
mov
sti
jb
les
movs
mov
dec
loop
xchg
lods
out
call
gs
out
fstp
jl
push
add
jle
jp
mov
jae
or
adc
dec
and
xchg
inc
in
aaa
je
iret
fimul
jmp
jb
mov
jp
sbb
movs
xchg
scas
jmp
call
xchg
or
dec
mov
call
leave
stos
push
(bad)
cmp
out
rcr
sbb
mov
repnz
dec
fs
cs
imul
aam
mov
cmp
jne
sub
sbb
lods
push
mov
cli
pushf
test
mov
dec
out
mov
inc
add
push
fdiv
add
push
cmc
repz
jl
dec
pop
inc
ret
pop
inc
mov
cmc
mov
daa
jle
stos
iret
adc
inc
xor
xchg
xor
push
and
push
clc
jge
(bad)
repnz
mov
data16
push
sbb
dec
out
jge
xlat
push
jns
int3
mov
xor
push
sub
es
push
push
or
sub
test
sbb
or
(bad)
fwait
or
mov
icebp
test
xchg
movs
add
(bad)
jmp
pop
(bad)
or
repnz
xchg
push
add
lahf
pop
add
mov
fld
sbb
clc
pop
outs
jg
sbb
pop
pop
jno
imul
(bad)
fmul
out
jnp
cli
aam
xor
mov
(bad)
sar
mov
pop
xchg
outs
sti
cs
jmp
xlat
or
nop
pop
pop
clc
cwde
mul
or
leave
add
xchg
inc
repz
loop
fbld
rcr
mov
sub
ss
mov
out
xchg
mov
add
int
push
adc
mov
inc
in
ss
adc
movs
xor
ins
ret
retf
push
mov
(bad)
neg
sti
mov
mov
mov
mov
fisubr
fsubr
loope
lods
jb
jg
mov
in
popf
mov
and
xor
push
mov
and
adc
and
cmps
(bad)
cdq
cmp
fnstcw
out
pusha
add
jbe
fs
mov
cmp
test
or
push
sub
fisubr
jo
pop
aas
adc
fs
adc
in
ds
push
sbb
js
cli
push
popa
sbb
mov
fidiv
add
mov
pop
je
adc
jge
push
out
sbb
mov
dec
retf
into
jecxz
neg
add
adc
and
jbe
aam
rcl
arpl
fadd
in
jmp
and
stos
adc
arpl
mov
test
cmp
jmp
jns
adc
push
aas
out
addr16
mov
ds
jge
push
sub
xchg
mov
mov
les
cmp
jge
fldcw
sahf
mov
jge
gs
addr16
cmp
mov
push
fsubr
jne
test
pop
jb
loop
xchg
xchg
int
(bad)
adc
inc
ror
xlat
idiv
push
jp
lods
mov
sti
cmp
and
mov
mov
push
pop
fadd
or
or
popa
call
stos
jecxz
mov
cs
mov
sub
push
push
jp
cmp
mov
push
ins
clc
mov
pop
mov
out
mov
jg
or
mov
fldenv
movs
jo
or
and
push
push
test
shl
jl
sbb
or
pop
and
int
pop
add
cs
retf
es
shl
add
jbe
shl
jae
sahf
cmp
ror
and
mov
movs
xchg
rcr
mov
enter
or
inc
test
jno
int
jb
jg
sbb
addr16
adc
sub
or
and
jl
jge
loope
mov
adc
call
jne
jl
out
jbe
and
xlat
dec
and
or
push
loopne
lea
je
inc
and
dec
jmp
cli
mov
xor
pop
popa
aas
repz
xchg
xor
mov
dec
and
sub
call
or
jl
mov
xor
repz
push
xor
pusha
int3
jb
fcmovb
sub
and
mov
ds
aaa
xor
sbb
xchg
sbb
mov
sub
pop
pop
lds
lock
pop
nop
sub
inc
add
mov
sti
ds
or
xor
pop
adc
xchg
push
retf
adc
(bad)
fcomp
sub
xor
(bad)
sub
ror
cli
cs
sbb
sahf
push
or
push
push
inc
push
push
xchg
aas
inc
daa
mov
cmps
out
ficom
jp
sub
jnp
mov
and
adc
lahf
mov
or
push
xchg
lods
mov
xchg
aad
je
mov
sub
pop
out
or
cli
push
sbb
fwait
popf
stos
inc
into
jmp
fnstcw
jnp
pusha
push
cdq
jge
push
fidiv
loop
cld
jl
sub
je
mov
sub
loop
cmp
loope
(bad)
movzx
ficomp
ds
pop
push
cli
pop
pop
ds
sub
daa
in
inc
bound
les
cdq
test
jecxz
aam
daa
cmc
(bad)
jmp
sub
sahf
retf
retf
and
ret
out
push
outs
data16
movs
mov
mov
adc
jae
xor
sar
sbb
and
jmp
push
ss
pop
adc
aaa
test
mov
inc
push
cmp
lahf
mov
daa
push
or
add
jbe
jmp
xchg
mov
sar
sar
outs
inc
mov
outs
or
dec
mov
xchg
mov
outs
xor
int3
stos
outs
sbb
or
lock
f2xm1
adc
rcr
pop
jno
mov
pop
clc
xor
jo
jnp
pusha
in
pop
dec
retf
xchg
jb
nop
xor
or
retf
ins
jnp
or
lods
ffree
sub
inc
cmovno
push
data16
retf
mov
mov
jl
into
add
(bad)
mov
add
addr16
cli
fdiv
js
pop
cmc
push
imul
fimul
sbb
or
mov
jge
call
xchg
loopne
repz
pop
rcl
xor
outs
fdivr
xchg
sub
jle
js
add
into
test
mov
out
ret
cdq
aas
cwde
and
inc
pop
pushf
mov
adc
aam
dec
push
push
(bad)
or
stos
repnz
arpl
ss
jbe
mov
ds
xchg
xchg
sbb
pushf
adc
push
fcomp
adc
std
shl
adc
test
(bad)
push
test
call
and
jmp
cwde
or
jnp
cli
pop
scas
mul
ins
call
xor
add
cs
pop
or
adc
retf
fdecstp
in
imul
push
shr
mov
cwde
and
arpl
bound
mov
shr
shl
(bad)
adc
and
jno
or
movs
cmc
sahf
lods
xchg
add
dec
lds
lea
push
cmp
jno
sar
mov
inc
mov
mov
cdq
sbb
cmp
xchg
sti
push
clc
pusha
repz
int3
xor
or
ret
arpl
mov
xor
fidiv
inc
stc
push
loopne
or
pop
cwde
loopne
pushf
mov
int3
mov
mov
mov
or
ins
test
(bad)
aas
sub
fldenv
int3
push
jbe
or
rol
sahf
addr16
into
mov
(bad)
xor
jo
mov
mov
jp
jle
adc
pop
dec
sbb
xchg
out
in
mov
add
out
(bad)
cdq
dec
xchg
retf
test
lahf
xor
xchg
dec
push
dec
or
mov
loop
sbb
js
fidivr
jbe
repnz
sbb
add
pop
mov
inc
cmp
cwde
loope
push
nop
scas
sbb
movs
ss
jnp
mov
leave
pop
mov
sbb
mov
aas
push
into
ror
ins
pop
pop
cli
mov
test
std
adc
aas
cmp
sti
and
and
je
sub
movs
in
jnp
cmp
xor
gs
loop
xchg
jp
out
and
lods
(bad)
outs
pushf
dec
rol
sub
sub
daa
adc
ja
sub
dec
lods
xchg
mov
cmp
cmp
in
push
fcom
or
adc
xor
mov
push
push
cdq
pop
dec
int3
test
mov
mov
addr16
inc
into
iret
out
lahf
pop
gs
sub
adc
ret
mov
shl
(bad)
(bad)
push
ins
dec
xor
ja
lea
mov
mov
xchg
jmp
lock
push
sub
ja
pushf
and
or
mov
mov
jg
sbb
dec
stos
and
aam
nop
xchg
add
jb
mov
mov
les
frstor
xor
push
xchg
sbb
and
aaa
lea
mov
inc
call
xchg
mov
xlat
popf
fcomp
cwde
scas
jb
xchg
jl
or
cmps
jno
pop
inc
sbb
in
xchg
xor
xor
scas
cli
mov
shr
retf
sar
and
iret
fwait
call
and
idiv
mov
xchg
nop
retf
sub
aaa
icebp
xor
ss
(bad)
cmc
jl
xor
cld
mov
xchg
into
or
cmp
in
pop
add
inc
cmp
out
xor
repz
sbb
jno
test
aas
cld
cmp
inc
pop
(bad)
mov
jmp
rcr
jle
xor
retf
clc
adc
dec
add
fwait
or
push
fs
inc
xor
jae
movs
(bad)
cmp
xchg
hlt
add
jns
in
popf
pusha
cmp
sbb
sub
sbb
in
jmp
jae
cmovns
sbb
xchg
daa
cmc
mov
mov
repz
push
int3
inc
or
sub
mov
mov
or
scas
(bad)
jmp
and
xor
retf
xchg
cmc
dec
outs
sub
jg
dec
cs
xchg
enter
or
ret
dec
pop
pop
inc
ins
shl
mov
movs
dec
lahf
cmc
in
test
and
inc
cmps
out
mov
sbb
out
add
(bad)
dec
xchg
sbb
sub
movs
sbb
add
mov
xor
adc
daa
dec
daa
inc
pop
jmp
ins
pop
push
fwait
cld
es
pop
mov
xchg
add
add
cwde
inc
lea
jge
push
mov
es
sbb
loop
mov
push
shr
dec
ins
push
dec
jmp
fstp
lds
jb
inc
sahf
fdivr
xchg
arpl
arpl
add
and
push
inc
jmp
mov
mov
sar
sub
ficomp
and
arpl
inc
dec
mov
xchg
(bad)
lds
push
and
cmp
(bad)
xor
icebp
pop
sbb
adc
xlat
sbb
mov
mov
mov
cmp
pop
fld
push
(bad)
adc
in
mov
adc
sbb
inc
pop
loopne
mov
mov
dec
inc
adc
mov
pop
inc
mov
mov
mov
fidiv
adc
pop
cmp
mov
fild
retf
inc
ret
and
push
pop
mov
cmp
mov
push
xor
adc
jne
add
xchg
inc
dec
jbe
(bad)
jb
hlt
fdivr
mov
add
sub
xor
sbb
lds
pop
xchg
mov
cmps
cmp
mov
pop
mov
jl
cwde
pusha
test
mov
cmp
mov
xor
push
add
out
mov
fst
jge
sub
into
not
xlat
jmp
std
cmp
fwait
in
fld
clc
(bad)
popa
dec
cmp
inc
mov
mov
not
sbb
(bad)
push
mov
lahf
xchg
add
(bad)
or
mov
mov
sbb
out
or
pop
mov
cmp
push
outs
jmp
mov
std
pop
fst
clc
sub
aad
jne
cld
and
aas
cmp
fisubr
aaa
adc
daa
and
add
jbe
xchg
jno
mov
push
dec
cwde
aas
xor
not
rol
jl
xchg
rol
cmp
in
cs
in
pop
add
in
sbb
enter
jp
ficomp
or
xlat
std
(bad)
in
add
ror
(bad)
jecxz
sti
and
xchg
add
mov
(bad)
out
in
and
daa
jnp
fwait
cmp
push
and
mov
dec
xchg
out
aas
adc
adc
add
add
out
imul
aam
pop
mov
jbe
fild
mov
xchg
out
mov
xlat
pop
pop
dec
jmp
in
ss
js
mov
mov
pop
and
arpl
jae
xor
sbb
call
ss
sub
jecxz
adc
xchg
enter
adc
sub
sbb
cld
mov
or
add
push
mov
xchg
sbb
bound
or
mov
mov
fnstcw
lods
pushw
sub
or
push
sahf
sbb
xor
fcomp
xchg
lds
sar
cmp
adc
lock
outs
jbe
xchg
xchg
shr
mov
cmp
pop
inc
pop
pop
xlat
popf
pop
push
jno
mov
xor
ins
dec
movs
dec
mov
sti
loopne
pop
sub
inc
jg
cmp
jmp
adc
rcl
xchg
adc
jge
push
bnd
(bad)
inc
cmp
or
mov
or
fidivr
mov
pop
cmp
dec
xchg
cs
sub
retf
out
sti
shr
mov
sbb
xchg
sub
popa
dec
push
jmp
mov
mov
push
add
xchg
sub
sbb
cmp
or
sbb
xchg
push
ret
sub
push
cmc
xchg
sub
pop
sbb
test
or
(bad)
js
sub
add
cmp
fwait
jbe
retf
sub
mov
ret
int3
int
inc
sub
jns
pop
arpl
fs
or
movs
dec
inc
ins
jp
and
icebp
jmp
jne
(bad)
cmp
call
call
or
sub
jl
cmp
pop
or
fld
outs
pushf
in
fmul
xchg
cmps
mov
iret
sahf
pop
push
push
icebp
dec
in
(bad)
jecxz
push
lahf
addr16
cwde
push
aam
xchg
out
out
add
(bad)
xlat
inc
loopne
xor
add
or
mov
push
lock
je
iret
fcomp
mov
push
xor
xchg
in
icebp
xor
mov
cld
sbb
mov
push
in
repz
add
cmp
ret
mov
sahf
lods
bswap
xchg
jle
cli
push
jno
into
out
out
fist
xlat
add
stc
or
sahf
xchg
not
mov
or
test
and
xchg
pop
popf
cli
cmp
sti
and
retf
(bad)
push
cmp
mov
int3
sbb
jb
dec
nop
jge
cmp
jne
popa
shl
test
ret
cld
ss
int3
jmp
mov
ret
adc
dec
jmp
push
jb
sub
push
pop
mov
or
jmp
dec
xor
in
scas
sub
mov
dec
bound
mov
pop
inc
sub
xor
arpl
dec
inc
add
aaa
sub
int3
sbb
dec
jnp
sahf
stos
sahf
adc
adc
stos
daa
mov
push
jns
iret
ds
mov
popa
popf
pop
cli
sub
mov
inc
ret
xlat
add
cmp
inc
fnstenv
push
pop
pop
xor
push
push
pop
fcomp
jg
(bad)
push
push
icebp
push
mov
les
mov
inc
xor
and
xor
pop
xor
stos
or
dec
inc
mov
imul
sub
xchg
cdq
push
pop
int3
test
or
daa
test
or
dec
jmp
test
ja
add
add
loopne
sbb
jns
and
getsec
pushf
test
ror
fst
dec
pushf
into
adc
push
push
ror
mov
mov
test
mov
dec
pop
push
pop
sub
mov
pusha
push
das
mov
push
sbb
lock
in
sub
mov
pop
sti
(bad)
jecxz
(bad)
mov
mov
js
popf
rol
add
lds
add
or
neg
mov
push
push
fcmovb
xor
mov
xor
es
mov
in
(bad)
loop
jbe
sbb
pop
fbstp
pop
or
cmp
mov
dec
cli
cmps
xor
outs
add
sti
xchg
mov
pop
addr16
cmp
in
xor
inc
sbb
std
es
xchg
bound
and
push
add
test
add
les
jp
adc
pop
(bad)
cmp
mov
mov
bound
and
iret
call
jmp
pop
dec
pop
inc
int3
outs
mov
lods
mov
rcr
imul
and
push
movs
sbb
dec
fidivr
inc
mov
jge
pop
and
mov
inc
out
push
ret
dec
inc
and
dec
mov
add
jnp
mov
jbe
test
lahf
or
mov
cmp
jb
xchg
ret
mov
sub
stc
in
ss
xchg
and
ror
test
and
pushf
imul
jbe
adc
xchg
std
mov
push
test
retf
pop
dec
inc
cmp
pushf
xlat
in
cmp
push
xchg
into
std
int3
sub
div
(bad)
(bad)
(bad)
and
xchg
cmp
and
mov
out
adc
jnp
test
int3
test
fwait
mov
pop
jns
xchg
and
pop
or
adc
and
outs
pushf
lock
shl
dec
mov
mov
outs
pop
add
mov
cs
fadd
in
ret
rcl
sti
push
push
popa
gs
cwde
out
test
dec
es
mov
gs
or
fucomip
jb
mov
jmp
fldcw
inc
mov
sub
xor
and
int
xor
xchg
xchg
loop
cld
xchg
cdq
mov
das
ret
push
shr
not
pusha
lods
pusha
jae
dec
adc
loop
test
xchg
push
or
add
add
in
retf
aaa
stos
adc
mov
mov
ror
push
cmp
mov
repnz
shr
mov
mov
dec
movs
imul
ror
sti
xor
div
repnz
neg
push
push
or
push
mov
and
mov
sub
movs
pop
mov
inc
aad
jle
cwde
test
pusha
and
int3
cmp
fcom
(bad)
sbb
mov
shl
sbb
ror
mov
lahf
jmp
les
mov
sbb
lock
add
popa
push
cmp
das
popa
fst
add
jmp
or
add
fadd
jle
xor
out
adc
or
mov
aas
push
xchg
sub
mov
call
rol
or
stos
mov
shr
dec
jmp
inc
test
cli
pop
cmp
adc
loopne
into
movs
in
clc
(bad)
outs
adc
pop
add
not
out
mov
xor
push
loop
fwait
aam
stc
jno
or
inc
jo
sub
in
pop
test
and
mov
shr
imul
push
jp
push
lods
mov
cmp
dec
fsubr
or
dec
xchg
xor
dec
push
cmp
leave
cmps
lods
mul
and
loope
test
fidivr
pusha
pop
fsub
imul
push
stc
in
cmp
jo
(bad)
jnp
outs
sub
fistp
sub
loope
shl
ins
lock
aas
loop
xchg
mov
lods
cli
lock
and
scas
pop
jmp
pop
dec
imul
cmp
mov
push
int
outs
inc
icebp
into
xchg
icebp
scas
jnp
mov
ficom
int3
xor
pushf
shl
(bad)
in
or
inc
mov
test
(bad)
loope
add
data16
sti
pop
js
loop
(bad)
adc
das
lods
js
sbb
imul
test
aam
scas
gs
loope
sub
push
adc
mov
ret
xlat
jae
stos
lods
dec
adc
mov
adc
aaa
dec
adc
xchg
add
jo
daa
pop
sub
sbb
mov
pop
pop
sub
repnz
data16
sbb
imul
dec
mov
in
jmp
repz
xchg
call
pop
push
mov
mov
gs
or
push
or
je
sbb
add
mov
push
popa
mov
int3
mov
xor
int3
jb
(bad)
(bad)
ins
push
mov
and
xchg
in
test
jp
dec
pop
jecxz
xor
mov
pop
cmp
cmp
sbb
pushf
or
cdq
inc
xchg
mov
inc
cmp
aaa
pop
add
jmp
pop
mov
jecxz
cmps
pop
push
xchg
je
sub
(bad)
cmp
fadd
imul
or
mov
mov
or
test
retf
out
(bad)
out
adc
push
mov
in
sbb
dec
(bad)
jmp
sbb
or
rcl
movs
sub
popf
xchg
pop
xor
jnp
ror
(bad)
in
pop
mov
lds
sub
iret
cmp
inc
mov
lods
das
je
push
jns
in
inc
sar
enter
inc
jo
(bad)
(bad)
neg
push
dec
push
pop
xor
pop
jl
leave
sbb
mov
pop
out
(bad)
mov
pop
outs
or
repz
gs
aaa
mov
call
xor
mov
icebp
cmp
scas
outs
iret
ss
shl
inc
(bad)
cs
nop
pop
mov
dec
inc
xchg
mov
xchg
shl
jmp
dec
fidivr
add
sbb
inc
xor
add
cdq
div
cmp
adc
push
fsubr
jb
sbb
push
pop
pop
sbb
movs
push
dec
sub
icebp
push
adc
mov
fucomip
pop
mov
pop
xchg
cmp
xchg
jge
(bad)
cmp
int
cmp
cli
(bad)
xor
inc
(bad)
adc
dec
bound
stos
adc
sbb
pusha
stos
js
cmp
mov
jle
daa
rcr
outs
int
mov
xchg
xor
retf
cmp
pop
fsub
pop
xchg
repnz
and
adc
push
dec
sbb
je
ror
fstp
out
movs
xor
mov
lahf
push
sbb
xchg
add
jmp
xchg
add
pop
push
mov
int
scas
mov
pop
test
jo
repz
push
sbb
mov
push
movs
mov
pusha
cli
sahf
ds
call
adc
push
xchg
movs
mov
popa
xor
mov
stos
sub
sub
ss
std
test
nop
push
pop
inc
test
fbstp
retf
aas
inc
jmp
cmps
inc
in
xor
adc
inc
popf
adc
adc
xchg
push
cmps
outs
cli
inc
inc
push
cmps
in
jo
and
ret
fnstsw
enter
xor
or
mov
out
dec
inc
(bad)
pop
mov
xor
mov
add
fwait
int
jg
lahf
jge
adc
call
dec
jmp
stos
inc
mov
pop
mov
xor
cmp
retf
ror
lds
mov
mov
or
(bad)
out
(bad)
cmp
or
icebp
out
sub
jmp
cmp
(bad)
and
cmp
mov
lea
add
loop
popa
mov
push
inc
in
retf
and
out
cwde
add
idiv
xlat
scas
into
cmc
xchg
jmp
cld
or
inc
bound
cmc
add
mov
dec
movs
pop
(bad)
bnd
hlt
sbb
xchg
cmp
sub
out
ins
push
(bad)
xlat
sub
(bad)
rcr
add
cld
push
sbb
in
int
and
ss
adc
xchg
or
sub
fs
cmp
sub
test
xchg
mov
push
jb
cli
stc
fistp
fs
pop
mov
(bad)
jns
test
xchg
out
stc
mov
fisttp
icebp
sahf
sub
pop
pusha
mov
xchg
mov
push
(bad)
and
test
pop
je
push
(bad)
cli
mov
add
and
pop
sub
cmp
xchg
lods
xchg
mov
cmps
jae
push
data16
aas
inc
and
iret
aaa
xchg
xchg
sbb
(bad)
adc
mov
mov
cmp
or
mov
cld
xchg
int3
div
xchg
aam
fcomp
add
dec
xchg
enter
aas
inc
lods
sar
fisub
test
ret
daa
ud1
loope
icebp
xchg
scas
js
add
cld
xchg
aas
mov
sbb
inc
fld
xlat
xor
mov
or
ret
shl
sub
jp
dec
sub
mov
cmp
(bad)
arpl
cmc
mov
inc
lahf
dec
dec
lahf
mov
pop
(bad)
outs
sub
imul
jmp
jmp
push
or
mov
add
sbb
xor
xor
pop
pop
push
cli
jg
push
mov
popa
out
(bad)
rcl
jo
xchg
or
mov
push
das
jae
pop
cmps
aas
mov
arpl
mov
push
in
inc
jle
enter
clc
inc
je
sbb
xor
outs
and
popf
je
push
outs
js
icebp
and
mov
cli
leave
jnp
lock
cwde
ins
add
and
cmp
nop
adc
add
push
jge
add
imul
cmp
in
pand
inc
and
fisub
xchg
dec
push
(bad)
or
ja
cmp
cmp
movs
pop
lods
xlat
je
loope
aad
test
addr16
sub
adc
mov
cmp
sahf
popf
leave
pop
in
xchg
xchg
xchg
(bad)
jnp
les
int3
and
aam
repz
sbb
clc
test
shl
xchg
inc
(bad)
mov
mov
retf
inc
adc
icebp
(bad)
aad
mov
and
xchg
xor
les
and
cmps
xor
lock
stos
mov
pop
xlat
mov
ss
(bad)
aad
mov
xor
int3
xlat
mov
in
adc
into
cmps
out
movs
mov
and
retf
dec
jl
stos
inc
(bad)
xchg
ins
pop
ud1
or
sbb
jmp
push
std
inc
add
sub
movs
cdq
push
bound
retf
push
mov
nop
aas
push
fidivr
mov
lods
sub
and
test
(bad)
fcom
sub
rcr
push
pusha
or
imul
push
and
dec
cs
mov
test
push
sub
fnstenv
mov
add
mov
gs
imul
adc
lods
push
cmp
lock
cmc
jno
and
movq
cmp
jmp
dec
ins
scas
adc
adc
loope
sub
push
outs
pusha
jo
push
cmps
mov
push
scas
add
cmc
not
adc
mov
jne
retf
je
sar
fwait
push
mov
sar
test
jns
in
(bad)
adc
or
jmp
sar
out
adc
cmc
fist
mov
xor
mov
fild
xchg
mov
add
cwde
je
out
(bad)
in
and
fucomi
mov
pop
adc
mov
dec
sub
bound
mov
push
dec
cli
add
add
js
jnp
pushf
adc
mov
call
fst
bound
ret
(bad)
mov
inc
or
dec
cmp
inc
mov
out
cmp
mul
clc
cmp
loopne
(bad)
sahf
mov
pop
push
pushaw
call
push
mov
idiv
data16
mov
repz
jmp
add
(bad)
out
out
call
fisttp
out
outs
inc
rol
jg
add
push
mov
pushf
fwait
mov
pop
jae
mul
js
int3
int
sbb
push
movs
jge
mov
sahf
ja
mov
loop
mov
pop
inc
out
cwde
mov
(bad)
pop
xchg
hlt
inc
scas
mov
sub
dec
jne
fdiv
push
xor
sub
pushf
call
int3
xor
aad
xor
or
mov
inc
xchg
xchg
jp
pop
scas
ret
imul
dec
and
prefetcht1
xchg
out
stos
fucom
loopne
jns
ds
pop
daa
jo
or
push
or
imul
pop
push
xchg
xchg
fbld
call
hlt
xor
lods
dec
retf
adc
cmp
mov
leave
outs
cmp
xor
xor
pop
hlt
retf
add
rol
scas
mov
push
aad
sbb
or
stc
lods
inc
or
sbb
adc
and
add
nop
pop
xor
mov
test
and
push
cmp
aam
inc
shr
xchg
int
push
jge
pop
push
and
cld
movs
dec
arpl
dec
mov
scas
call
movs
or
mov
fcomp
and
pop
das
loope
xor
sar
imul
popf
mov
icebp
push
lods
or
mov
mov
test
outs
loope
push
sbb
mov
fisttp
lock
mov
push
(bad)
in
loop
sbb
sbb
fwait
inc
xor
push
shl
int
dec
pop
daa
call
inc
mov
je
xchg
test
sti
pop
movs
and
pop
cwde
or
in
jecxz
jo
popf
dec
(bad)
into
push
dec
inc
rcl
inc
adc
jnp
adc
fistp
jo
imul
std
jmp
popa
cmps
xor
hlt
jno
rcr
inc
push
sti
jb
(bad)
in
(bad)
cmp
dec
sbb
cld
mov
data16
pop
dec
push
sub
dec
adc
stos
cmps
sbb
ss
mov
fcmove
and
iret
loope
push
cmp
mov
packsswb
dec
adc
sub
ret
sahf
cmp
push
fs
scas
and
xor
out
mov
lods
mov
or
push
sbb
sub
cwde
(bad)
mov
dec
cs
(bad)
push
fcmovb
dec
jle
jnp
sub
push
sbb
adc
dec
mov
lods
cmps
out
fmul
inc
dec
ins
lods
sub
aas
xor
test
sbb
loopne
retf
jns
and
dec
lahf
lods
xchg
arpl
sti
js
push
lea
das
inc
dec
leave
sub
or
call
xchg
cmp
setns
mov
(bad)
and
jmp
jmp
mov
cmps
xchg
xchg
fwait
xor
cmp
shl
addr16
iret
ret
iret
jmp
fwait
retf
pop
aas
lods
mov
push
and
pop
je
and
ret
aad
mov
push
or
mov
push
jmp
ins
jbe
outs
push
push
mov
imul
xor
data16
dec
push
loopne
xchg
arpl
es
mov
fadd
mov
sti
xor
sbb
or
xor
xchg
icebp
shr
clc
inc
fwait
adc
push
gs
(bad)
cmp
pop
fmul
lds
ins
mov
aam
sbb
imul
stos
jg
sahf
mov
xchg
jmp
xor
aad
(bad)
aad
dec
out
push
or
dec
icebp
pop
adc
pushf
repz
(bad)
fst
pushf
pop
fistp
or
out
jmp
int
shl
fstp
mov
adc
dec
mov
pushf
test
mov
mov
repnz
xor
pop
jnp
sub
inc
jae
dec
xchg
and
stos
retf
jns
in
add
clc
add
push
mov
dec
cmp
mov
or
mov
xchg
in
aaa
ja
cli
stos
push
pop
ror
xlat
fs
add
cmp
adc
mov
cdq
sub
lods
jne
popa
pop
aam
pop
xchg
pop
cmps
adc
jno
test
inc
push
cmp
sub
loopne
or
mov
jecxz
(bad)
xchg
push
fs
push
xsave
(bad)
jg
jle
aad
in
sub
adc
inc
push
fwait
or
mov
arpl
push
retf
xchg
cmp
cwde
stos
lods
iret
or
and
mov
cdq
mov
xchg
push
out
and
fs
retf
dec
pop
stos
sbb
push
mov
scas
ror
dec
(bad)
pop
clc
dec
jl
lock
adc
enter
std
shr
or
push
add
and
aas
pop
or
inc
and
fistp
int3
mov
mov
and
mov
mov
popf
or
jo
lahf
repnz
popf
sub
jnp
(bad)
xor
xchg
mov
and
out
leave
or
mov
cmp
into
scas
sub
lods
and
cdq
cmps
pusha
mov
clc
aad
cld
out
jmp
mov
jle
das
call
leave
test
cmps
mov
jl
dec
sti
out
rcr
xchg
pop
adc
aaa
push
jnp
adc
mov
test
test
push
inc
retf
das
mov
mov
push
pop
push
xchg
mov
and
mov
pop
movs
stc
(bad)
(bad)
out
mov
test
mov
sbb
mov
push
adc
ins
inc
into
fld
repz
inc
rcr
jg
jmp
cmp
mov
xchg
not
and
bound
daa
adc
mov
or
into
jno
test
in
push
pop
jl
enter
and
outs
xlat
push
push
int3
and
icebp
sub
xchg
pushf
jmp
lock
adc
in
cmps
nop
fs
lahf
and
fdiv
adc
inc
cmp
nop
sub
js
add
jae
mov
sbb
pop
shl
cmps
push
mov
scas
or
dec
cmps
aad
add
outs
mov
repz
jecxz
mov
add
or
and
js
test
mov
mov
mov
shr
out
lea
mov
popa
ds
fimul
aam
push
pop
fild
dec
mov
iret
sbb
xchg
xchg
xlat
sbb
add
mov
imul
add
dec
sbb
cmps
fwait
ins
shl
pop
adc
dec
sar
pop
cmp
shl
das
jne
ss
inc
pop
fsub
fwait
sbb
aaa
(bad)
fmul
cmp
sbb
imul
and
call
fidiv
push
jmp
cmp
shr
stos
push
pop
inc
push
aaa
inc
cdq
sub
stos
cmp
mov
mov
retf
loop
fadd
and
jecxz
jnp
fstp
dec
ret
jp
scas
xchg
jns
xchg
dec
jp
xchg
outs
popf
ss
jmp
sbb
mov
mov
lds
iret
jne
mov
xchg
xchg
pop
not
aaa
mov
inc
rcr
in
movs
out
pop
sub
sub
aas
push
inc
xchg
in
xchg
shl
sbb
fsub
inc
(bad)
sbb
aas
retf
push
test
mov
or
daa
mov
mov
add
push
hlt
(bad)
xchg
push
shr
sbb
test
mov
(bad)
sbb
iret
push
scas
js
mov
fst
mov
mov
dec
shr
mov
cwde
xor
fstp
adc
mov
loopne
pusha
dec
imul
sub
into
jnp
adc
dec
dec
cmp
rcl
xor
icebp
hlt
and
ins
cmc
add
jae
push
leave
(bad)
in
xchg
gs
pop
loop
out
bound
jge
pop
mov
stc
sti
push
mov
arpl
mov
lock
add
jl
sub
aaa
shl
sbb
sbb
jmp
in
das
icebp
mov
or
call
or
jmp
ja
jp
loopne
xlat
mov
pop
adc
jb
cmps
stc
cwde
mov
in
icebp
xchg
add
inc
mov
dec
(bad)
sub
cmp
pop
dec
ret
push
xchg
and
mov
inc
ins
scas
push
(bad)
xor
stc
pop
fisub
imul
add
push
call
pushf
adc
mov
cmp
xchg
jecxz
and
and
fsubrp
(bad)
push
and
cs
imul
sbb
mov
and
ins
pop
inc
sub
hlt
stos
xchg
mov
rcr
mov
mov
mov
dec
mov
mov
add
adc
mov
and
div
jnp
inc
sub
in
mov
adc
cmp
xchg
ficomp
ins
jbe
pop
mov
out
adc
dec
ja
out
or
dec
setno
and
mov
xchg
push
ret
xor
mov
retf
xchg
or
mov
mov
inc
cmc
ffree
jle
adc
mov
xchg
fdivp
movs
test
push
or
movs
dec
call
xor
inc
(bad)
in
pop
cli
lahf
pop
mov
jne
xchg
aad
push
push
out
push
xchg
fadd
ins
jo
mov
les
test
clc
mov
or
in
cdq
inc
mov
and
(bad)
in
xor
outs
cmovnp
fistp
ror
pop
mov
xlat
jbe
rol
shr
mov
(bad)
xor
les
inc
push
test
xor
popf
imul
sub
dec
xor
or
(bad)
scas
idiv
pop
xchg
lods
loopne
out
in
xor
mov
or
mov
xchg
or
and
cmc
sbb
jnp
adc
comiss
cmp
sbb
fnstcw
add
cmp
mov
out
xchg
test
fist
pop
cdq
shl
repnz
out
mov
push
imul
outs
ret
test
xchg
and
cs
jno
jo
leave
fldenv
jno
mov
sub
dec
inc
fmul
inc
fst
imul
ins
push
in
add
jnp
cmc
or
cmp
sbb
mov
sbb
pop
ja
test
sbb
push
and
cwde
add
sbb
mov
xor
cmp
(bad)
sbb
xor
jecxz
repz
pop
sbb
xor
jbe
push
cdq
inc
or
in
loope
pop
inc
scas
add
push
in
or
ja
jmp
xchg
call
xor
jne
lods
dec
inc
inc
xlat
jnp
test
popa
push
lds
jnp
mov
mov
loope
mov
fld
aad
xchg
pop
pop
add
cmps
or
es
dec
sub
add
rol
shr
mov
std
(bad)
faddp
mov
fiadd
je
sti
aad
(bad)
pop
push
sbb
xchg
jg
sbb
fdivrp
(bad)
pushf
mov
and
std
repnz
fmul
sub
cmps
jl
loope
mov
push
cmp
lods
mov
call
dec
add
cmps
call
pop
pop
xchg
or
push
(bad)
les
xor
test
sar
dec
fdivr
jnp
cmp
push
pop
(bad)
and
inc
ds
mov
stos
stos
nop
call
jae
dec
inc
adc
xchg
jecxz
jmp
out
stos
iret
lods
push
inc
je
push
ins
jnp
shl
sub
inc
push
sahf
xlat
adc
add
fnstenv
adc
loopne
cmp
pop
dec
cmc
mov
mov
push
std
pop
test
mov
out
adc
idiv
xchg
rol
(bad)
popa
xchg
fwait
mov
cmp
xor
xlat
pop
mov
xchg
mov
out
outs
(bad)
lahf
cmp
xor
out
into
repz
add
xor
jo
ret
and
push
mov
mov
xchg
pop
(bad)
pop
xor
mov
adc
fbstp
add
and
and
and
mov
sar
pop
cmp
mov
in
hlt
mov
pop
push
mov
test
add
sbb
mov
xchg
das
ret
mov
mov
leave
cmp
int3
ins
push
and
and
stc
jge
xor
mov
repz
mov
popf
jecxz
or
xor
pop
mov
aas
dec
or
je
mov
pop
retf
ror
arpl
dec
in
add
gs
add
xchg
push
push
mul
(bad)
mov
and
(bad)
pusha
out
(bad)
in
or
shl
mov
adc
mov
stos
xchg
cmp
scas
xchg
mov
dec
add
cmc
and
or
jne
int3
pop
adc
div
xchg
sbb
xor
ret
pusha
jo
or
mov
mov
or
imul
ins
jmp
popf
jnp
jmp
sbb
repnz
mov
movs
clc
iret
mov
sbb
pop
mov
push
inc
add
mov
jle
ror
ja
out
popf
xchg
xor
and
clc
adc
retf
sub
xchg
jb
iret
inc
sar
jl
mov
sub
pop
sub
inc
fcom
push
cdq
sub
pushf
mov
in
mov
sub
add
dec
out
inc
mov
push
stos
sub
das
cmps
sbb
repz
jp
call
inc
push
xor
sub
test
retf
inc
(bad)
pop
xor
and
xor
sub
scas
cmp
pop
push
fadd
sub
outs
pushf
and
xchg
cli
lods
jecxz
xchg
pop
rol
or
push
idiv
mov
jbe
aam
xor
(bad)
sahf
test
lock
pushf
jl
stos
dec
cwde
fs
mov
popa
xlat
je
adc
or
stos
dec
cmps
fsubrp
push
stos
fdivr
push
cmp
out
push
movs
cmp
xchg
sub
push
ret
(bad)
or
push
ret
mov
pop
movs
jae
pop
test
ficomp
jle
gs
movs
das
mov
push
gs
ror
xlat
loope
pop
xchg
adc
repnz
movs
pop
hlt
jae
push
daa
mov
jae
mov
xor
add
sub
xlat
movs
lds
jns
cld
jge
adc
and
sbb
sub
cmp
push
out
xor
call
dec
dec
cmc
pop
adc
rol
inc
iret
ins
sbb
and
mov
scas
pop
inc
(bad)
aad
cwde
imul
test
sbb
jb
mov
mov
lods
add
sbb
mov
mov
dec
xchg
jle
xchg
in
cmps
jle
movs
push
dec
jb
aas
push
ins
mov
lahf
mov
lahf
mov
or
cld
in
adc
clc
scas
mov
js
or
xchg
cmps
ins
mov
jo
mov
in
mov
dec
clc
fs
bswap
xchg
pop
pop
repz
stos
mov
out
fs
pop
adc
pop
dec
mov
in
push
and
in
in
(bad)
cld
cmp
setae
fidivr
inc
je
push
repz
ins
cld
out
mov
int
jp
pop
mov
bnd
pop
stos
dec
pop
out
nop
iret
cmp
pop
dec
shl
retf
stos
pop
(bad)
push
jle
icebp
shl
pop
pop
dec
xchg
mov
int
add
dec
in
movs
push
add
arpl
mov
fs
fwait
in
inc
adc
mov
fcomp
movs
push
dec
or
(bad)
cmc
addr16
lea
mov
imul
pop
ret
xor
arpl
pop
pop
sbb
pop
cmps
fmul
fiadd
sub
es
inc
and
jle
dec
mov
push
inc
popf
adc
jge
dec
std
dec
loope
pop
inc
lods
fistp
cmp
inc
xor
jle
cmp
cmp
data16
dec
aam
(bad)
add
xchg
in
xchg
arpl
pop
inc
xchg
dec
inc
xchg
(bad)
loope
inc
repz
push
retf
adc
div
rep
std
pop
push
dec
adc
mov
adc
push
out
mov
jg
mov
pop
jle
jecxz
sahf
mov
sub
call
inc
enter
fcmovb
ret
xchg
pop
(bad)
cwde
in
and
cmp
pusha
push
dec
pop
rcr
fidiv
and
pop
neg
(bad)
sub
inc
shr
test
pmovmskb
dec
sar
popa
pop
lock
aam
adc
(bad)
lods
not
ret
or
je
clc
or
clc
or
movs
imul
add
pop
pop
mov
outs
repnz
xchg
xchg
fisub
dec
xor
or
test
in
jg
sbb
clc
retf
popf
mov
ret
pusha
lock
or
loope
ins
or
into
mov
push
sub
adc
fwait
jae
adc
adc
dec
scas
js
cmp
fsub
ins
or
or
sbb
adc
xchg
hlt
shl
les
sub
adc
pop
imul
fs
les
xchg
jbe
push
sbb
mov
shl
adc
mov
jge
dec
dec
enter
jae
mov
pop
add
pop
jno
inc
jo
es
loope
mov
mov
or
pop
and
push
lods
adc
je
jg
ret
push
mov
sar
adc
jg
mov
xchg
cmp
mov
aaa
je
adc
stos
pusha
sbb
shl
sbb
out
inc
jg
jmp
fisttp
xchg
add
lahf
neg
cmps
pop
jecxz
dec
ret
push
pop
pop
fidiv
and
adc
xor
daa
outs
push
out
and
xchg
or
push
mov
jmp
push
xor
hlt
in
syscall
dec
mov
js
and
mov
cmp
xor
cmp
jno
aaa
enter
stos
neg
out
add
setg
jbe
sub
xor
mov
xor
cld
inc
gs
gs
loopne
sub
clc
cmp
dec
mov
daa
out
inc
sub
sub
xor
adc
xchg
jae
cmps
es
cmps
xchg
out
and
cdq
fs
xchg
int
ror
dec
fistp
sub
int
xchg
or
push
dec
cli
xchg
js
dec
out
in
dec
mov
adc
clc
test
jnp
or
imul
add
jmp
dec
adc
stc
mov
ins
test
pushfw
mov
test
mov
ja
addr16
mov
xor
and
cdq
or
aaa
xchg
dec
mov
jnp
dec
lock
xor
pop
push
ja
fs
ins
ja
add
prefetcht2
mov
inc
jmp
xor
lds
test
add
out
mov
mov
push
mov
leave
(bad)
jmp
sub
loopne
icebp
mov
cwde
sbb
fnstenv
rcr
mov
dec
and
dec
push
sub
icebp
sub
popa
cmps
cmc
mov
and
js
fwait
jge
cmp
or
inc
mov
cdq
test
xor
or
(bad)
lock
stc
mov
or
movs
daa
inc
mov
fimul
std
jge
popf
int3
imul
mov
int
cmp
mov
mov
cmps
jmp
xchg
fs
aaa
sbb
and
mov
cmps
mov
dec
add
outs
cmp
xchg
je
push
(bad)
fwait
jo
lods
pusha
fwait
sbb
inc
lea
mov
add
lods
dec
xchg
mov
xor
and
push
repz
adc
dec
js
idiv
cwde
fnstenv
pushf
dec
rcl
pop
add
mov
pusha
jle
(bad)
sbb
repnz
adc
and
iret
pushf
adc
inc
inc
jno
hlt
test
fcmovnbe
push
mov
out
cmp
adc
fwait
jge
retf
stc
out
mov
dec
and
push
daa
mov
mov
mov
loopne
dec
mov
sub
lss
retf
nop
add
mov
(bad)
ss
pop
jmp
lods
pop
pop
out
or
iret
movs
sti
out
mov
xchg
fiadd
jns
pushf
cmp
retf
ret
push
dec
adc
ror
and
iret
pop
pop
popf
adc
sbb
pop
push
push
jnp
popa
sbb
cdq
and
call
sbb
test
mov
lds
cmp
xor
xchg
in
retf
cmp
jns
mov
cld
out
fidivr
xchg
jmp
xchg
pop
pop
pop
jge
inc
addr16
push
and
xor
mov
pushf
enter
(bad)
out
add
lds
add
mov
mov
xchg
cld
scas
movs
(bad)
out
and
out
or
xor
pop
dec
mov
gs
aas
inc
imul
xor
test
pop
in
in
sbb
inc
push
retf
out
cmp
sbb
sub
add
fild
icebp
and
push
call
sub
sub
pop
jbe
cmps
out
fbld
mov
test
xchg
jb
or
icebp
pushf
pop
sub
(bad)
shl
or
lds
enter
mov
mov
scas
mov
movs
sbb
xor
iret
push
and
cmp
mov
sub
in
or
mov
fcom
ror
outs
ins
cmp
add
inc
int
pop
xor
sub
mov
loop
sbb
in
idiv
xchg
bnd
sbb
inc
(bad)
cld
pop
cdq
pop
jns
push
fcom
inc
in
shl
xor
mov
gs
imul
mov
sbb
pop
sub
or
add
push
pop
dec
shl
mov
xor
aam
aad
or
and
xchg
retf
mov
nop
(bad)
xor
cs
jg
daa
out
inc
pop
movs
stos
sub
stos
xchg
pushf
lahf
sbb
add
pushf
pop
nop
iret
mov
push
xchg
push
inc
mov
xchg
xor
dec
xchg
in
loopne
out
jl
ror
jp
inc
ds
addr16
mov
inc
cmp
pushf
dec
daa
cmp
aam
outs
push
ja
xor
retf
loopne
jne
add
sahf
dec
icebp
push
retf
jmp
pop
inc
or
jmp
ja
dec
xor
call
pushf
sbb
aad
push
cmp
mov
xchg
cs
and
add
push
pop
sbb
stc
cmp
pop
pop
nop
pop
out
aas
call
(bad)
mov
mov
mov
mov
stc
fnstenv
xchg
xchg
cmp
movs
cwde
loop
ficom
add
bound
xchg
imul
cmp
push
int
mov
nop
aaa
cli
xchg
xlat
inc
mov
call
xor
shr
fs
adc
push
or
jle
aaa
nop
sub
pop
test
push
dec
jle
and
mov
cdq
add
pop
lods
inc
adc
ret
or
fadd
jp
mov
pop
jl
cmp
(bad)
lock
rol
in
inc
ret
adc
or
mov
fimul
cmp
xchg
mov
cld
je
mov
sbb
repz
inc
fld
xlat
repnz
mov
add
adc
jp
jg
inc
cwde
or
scas
xor
int3
mov
xor
test
and
hlt
out
out
adc
call
popa
dec
cs
popa
test
and
sbb
jbe
inc
inc
stos
and
call
mov
(bad)
out
test
cld
jmp
movs
inc
cmp
jae
mov
xor
sub
popa
into
lods
repz
mov
mov
add
in
aad
sbb
mov
cmp
jmp
out
jmp
cli
pop
sbb
push
dec
loope
jmp
rcl
out
repnz
sbb
dec
loop
xchg
sbb
ja
sub
fadd
mov
jo
out
data16
sub
fst
js
mov
clc
(bad)
lods
pop
push
aaa
idiv
out
sbb
es
int
test
(bad)
pusha
sub
sub
mov
inc
popf
je
mov
fld
(bad)
mov
and
loope
fmulp
sbb
sub
push
fsub
sbb
ja
cmps
call
jb
cli
aad
stos
and
ja
ss
aad
ja
xchg
pushf
rol
jns
jmp
lock
fidiv
mov
loopne
push
rcr
(bad)
repz
into
mov
mov
xchg
inc
xchg
mov
xor
inc
xor
jne
sahf
cmps
mul
scas
leave
ins
repz
js
inc
rcr
add
int
or
fisttp
add
sbb
in
mov
inc
rcl
add
int3
mov
add
push
or
xchg
imul
mov
xchg
das
push
pop
addr16
push
or
sub
pop
fadd
and
push
dec
test
retf
or
aam
call
ffreep
neg
in
or
mov
and
fisubr
sub
cdq
jge
sbb
and
ror
test
out
adc
aad
test
shl
mov
xor
cmp
dec
test
inc
cmp
dec
test
inc
mov
test
mov
popf
mov
push
lahf
cdq
sbb
mov
sub
dec
mov
popa
std
or
movs
cmp
cmp
mov
or
mov
lods
xchg
fdivr
mov
clc
sti
call
jb
ss
mov
sbb
test
sub
cmp
cmp
cli
arpl
movs
loop
mov
int
test
sahf
setp
add
leave
xchg
adc
stos
mov
test
jne
ss
jge
aam
ins
jge
mov
jb
shl
cdq
sub
call
or
push
push
mov
mov
movs
xor
pop
and
aaa
pop
cmp
add
loopne
pop
fcmove
xor
outs
and
dec
jmp
leave
shl
dec
sbb
fwait
add
cmc
xor
push
stc
cli
out
jbe
dec
mov
jb
(bad)
(bad)
lods
mov
bound
mov
test
push
inc
int
xor
pop
les
dec
mov
mov
xchg
(bad)
xor
or
bound
adc
dec
xor
pop
xor
dec
xchg
add
rol
movs
mov
sar
aaa
shl
xor
sub
pop
dec
inc
stos
and
xor
leave
mov
inc
daa
dec
push
fwait
mov
mov
ficom
xchg
outs
cmp
add
jb
and
in
jmp
xchg
or
add
dec
loope
ins
push
jo
or
inc
dec
ins
enter
mov
dec
and
sub
mov
and
pop
mov
mov
div
cmp
iret
add
(bad)
jnp
add
mov
pop
lahf
lahf
int3
fst
cmp
mov
sub
xchg
sti
mov
jae
outs
mov
ins
in
add
jb
xchg
(bad)
data16
mov
mov
arpl
ret
dec
repz
lea
or
lea
jb
inc
hlt
ret
fsubrp
cmp
(bad)
cli
sub
mov
inc
loop
outs
inc
loop
mov
mov
sbb
sub
ds
push
xchg
jle
mov
and
or
sti
aaa
shl
sbb
xor
cmp
push
retf
inc
push
mov
mov
mov
in
pop
jmp
scas
inc
pusha
out
in
neg
pop
xor
sub
push
pop
pop
shl
ins
(bad)
into
pop
mov
retf
mov
enter
(bad)
in
adc
cmc
xor
shr
inc
inc
and
movs
sub
movs
bound
sub
pop
jle
mov
shl
adc
pusha
pop
sti
mov
mov
bound
or
xlat
dec
aas
push
daa
outs
or
lods
repnz
sub
cmp
push
aas
(bad)
xchg
(bad)
push
push
addr16
out
pushf
dec
pop
addr16
cmp
rcr
shl
sbb
push
push
mov
pop
push
pop
jmp
push
mov
leave
push
cmp
sahf
push
je
jbe
inc
jnp
cmp
pop
pop
dec
mov
leave
mov
or
mov
mov
out
cwde
jp
xchg
dec
arpl
xchg
jns
or
shl
jne
dec
pop
shr
movs
sub
add
scas
jl
mov
sub
fcmovnb
pop
out
les
jle
mov
je
leave
pop
adc
pusha
leave
inc
or
mov
xchg
cs
adc
jp
in
fnsave
call
fsubr
adc
int
addr16
ja
sub
add
std
inc
shl
xchg
clc
scas
loop
adc
dec
sub
cmps
in
push
add
dec
mov
mov
and
mov
mov
push
sub
shl
movs
les
mov
mov
loope
test
add
xor
and
lds
mov
int
shr
cs
jns
popa
ror
fwait
mov
add
dec
pop
mov
shr
fcomip
push
(bad)
mov
inc
call
mov
jecxz
xchg
(bad)
repnz
pop
shl
fst
fs
jl
std
(bad)
(bad)
lods
push
aad
lahf
cs
(bad)
or
jl
jge
jo
mov
push
out
mov
mov
xchg
push
rcr
mov
pop
sbb
mov
(bad)
cli
sbb
(bad)
xchg
iret
mov
inc
xor
into
xchg
test
fyl2x
sbb
jmp
and
and
cdq
out
loop
push
lahf
or
adc
int
mov
cmp
dec
cmp
cmp
std
pusha
adc
mov
jmp
xchg
xor
sub
(bad)
js
in
and
sbb
push
cmp
sub
or
ins
push
je
icebp
lahf
xchg
popf
es
mov
in
mov
aaa
jle
xor
(bad)
mov
jns
push
fadd
jnp
push
scas
and
(bad)
fucom
retf
dec
rcr
push
(bad)
cld
mov
jnp
pop
add
pop
lock
idiv
push
mov
dec
mov
icebp
test
pop
mov
sub
(bad)
sbb
mov
pop
jecxz
pop
pop
call
pusha
imul
call
in
dec
add
pop
xchg
in
in
mov
loop
sbb
lods
sbb
pop
test
push
loopne
adc
lods
popa
in
push
out
call
add
dec
xor
cdq
push
into
mov
fnstsw
xchg
jp
rol
les
sub
icebp
lods
jmp
lea
mov
ds
stc
imul
jmp
add
or
cmp
cwde
jmp
inc
mov
scas
mov
in
mov
stos
call
loopne
inc
cs
add
cmp
or
repz
int3
cmp
jne
fnstcw
add
mov
mov
inc
inc
push
xchg
pop
jbe
cmp
or
aam
test
adc
xor
xor
cmc
pop
xor
push
test
jns
jns
push
and
inc
mov
mov
ja
mov
xchg
ror
xchg
inc
ss
shl
add
fdiv
push
push
dec
pusha
mov
lods
and
or
adc
mov
popf
add
loopne
movs
ss
jb
std
mov
dec
mov
mov
mov
mov
mov
jno
enter
xor
repz
dec
sub
or
mov
nop
cs
pop
cmp
cmp
xchg
ins
lods
mov
jb
push
movs
jnp
int3
cmp
(bad)
out
mov
mov
addr16
add
je
(bad)
and
dec
movs
not
pop
fimul
fldcw
cmp
and
loopne
cmps
(bad)
xor
jle
cs
pop
div
cli
out
movs
rcr
(bad)
adc
xchg
dec
int
or
pop
mov
repz
data16
add
retf
sub
enter
in
xchg
xchg
repnz
mov
rcr
frstor
mov
test
sbb
mov
mov
addr16
daa
xchg
pop
or
in
das
add
mov
loop
sbb
and
push
xor
push
ins
pop
bound
jb
fnstsw
imul
ins
push
mov
adc
mov
scas
xor
ss
sub
lock
sbb
lock
mov
sub
sbb
push
(bad)
mov
xchg
inc
(bad)
(bad)
cld
retf
jl
not
or
mov
sbb
sbb
and
hlt
call
movs
pop
push
inc
add
fs
out
outs
sbb
pop
dec
in
repz
or
fwait
push
aas
jae
adc
jle
push
pop
test
aas
sbb
pop
enter
mov
cmp
test
fwait
mov
add
aaa
(bad)
jns
out
repz
sbb
xor
sub
test
jg
enter
mov
shr
push
inc
cmp
sub
sub
test
cmp
cmp
arpl
imul
xor
push
sar
leave
add
mov
jns
dec
clc
push
mov
push
dec
lahf
sbb
dec
inc
inc
imul
fs
push
mov
xor
cmps
and
xor
js
xchg
hlt
loopne
add
xlat
pop
hlt
dec
sbb
mov
inc
sbb
mov
jne
dec
popf
outs
(bad)
loope
adc
inc
or
mov
and
repnz
jmp
sbb
and
or
lds
pusha
bound
jnp
add
push
out
mov
loopne
dec
mov
clc
mov
adc
cmp
push
pop
xchg
rcr
daa
add
dec
int3
cs
test
pop
inc
sub
ins
cmps
adc
push
js
mov
xchg
fucomp
sub
push
and
bound
pop
mov
retf
mov
mov
loopne
out
clc
mov
lods
dec
pop
cs
xor
dec
jne
add
xchg
cmps
or
sbb
mov
sub
or
push
mov
ret
xchg
inc
cmc
adc
adc
test
in
jno
add
std
fdiv
inc
adc
aam
fistp
mov
retf
call
xchg
outs
jbe
push
push
test
push
sti
and
cmp
ficom
dec
int
mov
or
adc
jp
test
(bad)
lods
mov
or
xchg
imul
retf
inc
jnp
cwde
fcom
ficom
xchg
or
shl
imul
data16
push
repnz
push
fist
(bad)
mov
div
addr16
xor
mov
sahf
mov
add
mov
int3
or
push
ret
jmp
and
aas
inc
out
mov
push
xchg
in
dec
ja
in
test
call
dec
push
aad
or
adc
or
sub
(bad)
jmp
pop
retf
ficom
inc
pop
push
das
mov
call
dec
inc
shr
stc
bswap
ds
add
push
cmp
add
es
pop
add
sub
lea
or
cmp
mov
test
mov
pop
in
lock
mov
pusha
or
fsin
jns
cmp
cmp
xor
and
repz
add
mov
push
out
and
imul
out
stos
in
adc
cmp
jle
jo
mov
cmp
ror
pop
pop
adc
cmp
loope
loop
lods
cwde
add
mov
lock
add
rcr
outs
ret
fistp
mov
scas
call
cld
mov
add
ss
aam
cli
and
movs
push
jge
sub
push
mov
cmc
cs
cld
das
xor
retf
xchg
mov
lds
adc
mov
jae
or
add
mov
mov
(bad)
pop
push
fs
pop
adc
cmp
push
ss
xchg
xchg
outs
sti
mov
out
dec
jo
jnp
dec
xchg
stos
cld
hlt
sbb
shr
xchg
jecxz
fsubr
pusha
cmp
jl
dec
pop
fld
jp
xchg
jecxz
popa
cld
dec
(bad)
or
jge
mov
jae
jno
lods
push
mov
xlat
mov
hlt
pop
nop
and
(bad)
cmp
sbb
add
scas
mov
lock
lahf
test
sahf
pushf
(bad)
loop
mov
mov
mov
sbb
jno
inc
inc
and
mov
fisub
in
imul
mov
push
stc
pop
ja
push
or
add
pop
(bad)
dec
sbb
adc
shl
inc
mov
mov
add
dec
rcl
hlt
mov
xor
in
cs
pusha
inc
inc
add
push
loop
inc
vpmulhrsw
jl
fdiv
(bad)
cmps
mov
into
mov
ja
shr
jne
add
jp
fidiv
test
popf
data16
cmps
sub
mov
jge
jmp
or
push
mov
daa
mov
pop
and
inc
push
pushf
ds
and
pop
xor
dec
in
adc
adc
es
add
test
cmp
in
fisub
leave
or
ret
cmp
sub
inc
dec
mov
jge
mov
and
out
adc
fnstenv
mov
std
repnz
xchg
mul
add
nop
cmp
les
cli
fnstenv
inc
cs
ins
(bad)
cmps
dec
push
stos
out
pop
sub
lea
and
mov
fmul
(bad)
repnz
test
xor
pop
xchg
pop
or
mov
mov
sub
test
scas
mov
test
call
scas
jg
ror
out
sub
push
fnstenv
mov
retf
cmp
xor
lds
xchg
pusha
push
test
ror
call
scas
mov
inc
adc
pop
sub
sub
out
outs
mov
dec
add
shl
sbb
cmp
test
mov
fnstenv
jne
xchg
push
add
sub
mov
dec
mov
jg
sti
and
xchg
enter
dec
retf
popf
jle
mov
mov
sbb
and
jno
sub
jo
dec
ror
jp
aaa
jecxz
rcr
mov
lds
pop
scas
add
or
add
add
xchg
mov
mov
movs
jbe
push
ror
mov
out
jno
xlat
sbb
push
push
xor
mov
das
pop
xor
sbb
stos
pop
adc
push
or
inc
aas
cmps
or
scas
lock
inc
xor
retf
add
iret
out
sub
mov
sub
mov
jb
fist
add
cmps
lahf
aad
stos
pop
out
loopne
test
in
dec
repnz
jne
add
mov
int3
push
mov
aad
add
mov
push
inc
jb
sbb
jae
popfw
add
cmp
rol
(bad)
fs
in
add
cld
mov
pop
adc
sub
pop
(bad)
sahf
xlat
or
sub
pop
xlat
xchg
sbb
lock
or
cli
push
jge
mov
ret
mov
in
jg
test
cdq
mov
lock
movs
jge
mov
outs
sbb
mov
sub
xchg
inc
test
jmp
add
push
mov
std
sub
xor
sbb
sub
ficom
push
push
retf
pop
xor
ror
xchg
nop
mov
mov
jnp
sub
movs
jmp
xlat
xchg
(bad)
mov
out
loope
push
jmp
js
das
dec
add
pop
dec
or
mov
mov
bound
dec
mov
cmp
mov
inc
jg
retf
loopne
inc
dec
pop
xor
imul
std
sub
push
sar
cvttps2pi
mov
adc
fidivr
and
arpl
shl
dec
sub
dec
ret
fdivr
(bad)
repnz
inc
test
repnz
sti
dec
jg
xchg
add
mov
adc
fistp
inc
and
call
jbe
xchg
fistp
nop
push
and
or
xchg
in
dec
inc
test
ds
inc
je
in
adc
xchg
dec
scas
mov
adc
mov
sub
ss
xor
add
mov
mov
icebp
sbb
out
sar
mov
shr
aas
pop
mov
call
mov
ss
mov
jns
mov
fst
scas
cwde
fwait
test
add
leave
dec
xor
push
dec
(bad)
jns
jp
lea
in
sub
leave
jecxz
cld
out
sub
leave
call
test
xchg
icebp
and
mov
aas
call
daa
and
addr16
xchg
add
inc
in
in
mov
js
pop
cmp
jle
(bad)
mov
inc
jmp
dec
sahf
pop
es
mov
fmul
mov
or
(bad)
sbb
xor
cmp
push
jge
scas
mul
sub
dec
pop
icebp
loope
or
ins
lea
cs
retf
leave
xor
mov
add
shl
stc
mov
pop
xor
(bad)
jmp
mov
jge
loop
inc
jge
idiv
sbb
or
jl
cmp
repnz
movs
rep
pop
dec
adc
(bad)
and
daa
jo
add
cmp
sbb
ret
or
call
jne
mov
and
inc
icebp
retf
gs
add
and
int3
add
in
pop
mov
fild
cmp
inc
rcl
adc
or
(bad)
data16
ds
dec
mov
adc
aas
or
xor
retf
cmp
mov
clc
xchg
sar
adc
and
pop
mov
hlt
sbb
mov
mov
sti
xchg
daa
cmp
sbb
aad
cmp
sbb
dec
ss
adc
inc
retf
cmp
xchg
fstp
pop
push
repz
retf
stos
shl
xchg
push
sbb
jg
jp
xor
aad
add
(bad)
pushf
bound
mov
mov
dec
stos
jno
pop
cdq
cwde
ret
sub
test
jbe
das
or
or
nop
push
or
xchg
ret
mov
pusha
imul
call
inc
pop
das
xchg
cmps
daa
pop
and
das
inc
ds
fmul
mov
jo
imul
xchg
xchg
pop
into
add
in
add
test
cmp
mov
movs
mov
or
sub
cmp
imul
push
js
jp
adc
pop
retf
xlat
pop
enter
pop
sub
fadd
(bad)
repz
out
mov
jno
xchg
scas
movs
mov
imul
js
sahf
pop
mov
data16
adc
or
bound
fdiv
and
sub
imul
dec
mov
cmc
dec
xlat
(bad)
xlat
adc
jo
cld
fsub
lahf
(bad)
xor
into
je
stos
mov
pop
(bad)
loope
jp
outs
dec
pop
mov
xchg
je
fnstcw
mov
mov
rcl
fdivr
ins
add
xor
test
or
std
clc
(bad)
iret
jne
xor
popa
fs
or
repnz
scas
mov
or
inc
and
jmp
loopne
cdq
mov
pushf
repz
imul
arpl
sub
mov
cmps
cmp
add
fadd
xchg
mov
sub
cmp
or
pushf
or
(bad)
stc
je
stos
xor
jp
mov
imul
ret
and
jmp
pop
popa
push
dec
mov
retf
in
sbb
(bad)
pop
dec
add
sahf
and
loopne
xchg
loope
nop
in
call
xlat
or
sbb
call
sbb
mov
mov
cmp
test
cmp
hlt
aam
xlat
mov
jnp
sbb
xor
or
fwait
jb
jmp
fs
mov
pop
or
ret
mov
mov
ds
inc
outs
mov
repz
xchg
sub
mov
cmps
std
fsub
(bad)
(bad)
cmp
push
add
(bad)
mov
add
push
test
(bad)
xor
arpl
push
push
loopne
and
mov
and
cli
push
rcl
jne
jecxz
pushf
popf
mov
jmp
mov
sub
rcl
bound
(bad)
in
fild
cs
sar
adc
xchg
jns
popa
pop
xor
sub
cmp
test
clc
xchg
pop
mov
ss
inc
sbb
xchg
lea
pop
inc
cmp
push
add
test
adc
(bad)
out
retf
pushf
dec
imul
adc
cmp
jae
sbb
adc
jmp
pop
mov
jl
loop
and
nop
out
scas
hlt
xchg
cwde
cmp
and
ret
jnp
jmp
mov
ja
mov
jbe
das
fild
test
mov
adc
add
xchg
xchg
cs
nop
shl
sbb
xchg
and
lock
pop
outs
std
mov
pop
popf
cs
sbb
jo
addr16
or
dec
nop
jo
out
xlat
adc
jb
sbb
xchg
add
xor
js
cmp
mov
jmp
jmp
adc
mov
and
fmul
xchg
scas
icebp
imul
out
and
mov
dec
loopne
ds
xor
outs
xchg
stos
mov
mov
test
scas
ror
mov
stc
jle
movs
or
imul
test
add
pop
push
add
pop
jge
mov
int
add
mov
cmp
dec
popf
repnz
sub
add
add
(bad)
mov
loope
push
popf
pop
pop
arpl
and
mov
mov
ss
xor
cmp
or
movs
pop
mov
inc
out
jbe
pop
stc
pop
call
push
outs
fld
iret
sub
in
dec
or
inc
ret
inc
out
mov
or
movs
mov
mov
mov
lds
pop
imul
jbe
push
push
mov
push
and
lds
mov
(bad)
pop
mov
mov
into
adc
ss
out
loopne
mov
lods
(bad)
dec
sub
xor
inc
mov
push
in
jns
iret
cmps
mov
lods
push
dec
dec
xchg
xor
mov
retf
fldcw
inc
sbb
mov
jnp
ds
daa
std
inc
jne
mov
pop
stos
clc
mov
aaa
adc
dec
outs
pop
sbb
or
inc
inc
dec
or
and
movs
pusha
mov
in
(bad)
into
inc
or
aaa
xor
xlat
adc
xchg
or
loopne
enter
inc
xchg
movs
scas
dec
or
ss
mov
dec
pushf
aad
adc
bound
outs
xchg
or
xchg
arpl
in
pop
pushf
clc
clc
push
push
mov
rcr
fsub
mov
or
retf
xchg
rol
mov
mov
pop
jmp
inc
jp
pop
dec
jae
sub
inc
jnp
enter
mov
add
(bad)
lods
in
jnp
add
jge
mov
shl
mov
sbb
jl
xor
jg
(bad)
std
cmc
pop
call
dec
adc
aaa
sbb
lds
test
jp
inc
mov
ins
daa
mov
inc
sub
out
clc
add
mov
inc
mov
sbb
dec
outs
in
jle
rcl
push
call
add
or
mov
popf
cmp
adc
or
in
dec
mov
sbb
frstor
adc
xchg
dec
jae
cmc
xor
jmp
mov
mov
add
mov
push
cmc
(bad)
mov
fnstsw
mov
push
mov
(bad)
xlat
jecxz
cmp
daa
cmc
es
push
cdq
xchg
and
mov
call
jle
test
lods
sti
sub
mov
fistp
(bad)
or
add
fcom
dec
xchg
lock
popf
xor
pop
int
enter
or
(bad)
push
adc
mov
xchg
int
pusha
je
xor
add
mov
cmp
mov
mov
sbb
(bad)
lea
call
pop
cld
xor
xchg
push
or
daa
cmc
jnp
shr
xor
les
dec
push
stos
xchg
stc
sbb
in
xor
dec
(bad)
imul
adc
cmp
jno
dec
icebp
fld
mov
add
mov
or
aam
stos
das
out
mov
mov
(bad)
in
or
data16
addr16
jne
cwde
adc
(bad)
jns
pop
pop
mov
cmp
pop
inc
pop
mov
outs
(bad)
fist
outs
icebp
cmp
lock
jg
xor
ror
iret
pop
scas
pop
mov
icebp
xchg
mov
jmp
mov
adc
outs
mov
and
jbe
inc
dec
dec
clc
xlat
sahf
outs
shl
and
dec
push
mov
jmp
mov
test
dec
nop
sub
or
scas
dec
mov
enter
shl
aam
lods
or
jl
movs
inc
imul
into
mov
jmp
add
pop
data16
cmp
sub
inc
jl
pop
or
cmp
nop
jnp
sti
sbb
pop
retf
mov
not
enter
jmp
lahf
inc
enter
ret
jbe
xor
jl
out
sbb
test
mov
mov
sbb
aas
inc
daa
or
lds
cld
cld
add
xchg
lods
cmp
xchg
ret
jno
add
lock
les
or
cmp
mov
jp
sbb
repz
enter
popf
imul
cmp
int
leave
or
pop
ror
aad
push
cmp
jge
shl
sbb
mov
into
gs
push
pop
add
sub
clc
mov
je
xchg
std
jg
rol
fldenv
rcr
and
inc
sbb
xlat
movs
or
mov
clc
mov
xor
add
cmp
fist
dec
bound
push
out
clc
outs
xchg
daa
push
xchg
sub
and
(bad)
push
or
mov
xor
ret
dec
dec
or
fwait
dec
pop
sahf
ja
inc
test
xor
jp
and
cs
mov
sub
ins
enter
(bad)
aad
sub
rcr
imul
inc
push
retf
inc
dec
xchg
dec
jp
pop
(bad)
cmp
mov
fdivr
mov
lahf
mov
arpl
add
xchg
fnstsw
inc
jle
push
inc
sub
outs
scas
pop
jecxz
into
outs
or
out
arpl
repnz
lock
fisub
mov
and
xor
inc
push
lock
mov
out
sbb
cmps
xchg
dec
(bad)
xchg
push
cmp
jae
pop
cmp
bound
std
add
add
push
std
dec
dec
mov
cmp
loop
adc
jp
aaa
inc
push
mov
test
ret
rcl
adc
out
xchg
mov
aas
cld
jo
jmp
call
fcmovbe
mov
xchg
pop
fisttp
out
push
sub
imul
adc
inc
mov
cld
inc
inc
sahf
pop
lods
jmp
cli
daa
pop
or
je
imul
mov
or
mov
pop
cmp
std
dec
pop
adc
jmp
xor
shr
jle
push
xor
ja
in
outs
mov
lahf
mov
mov
cwde
adc
(bad)
sub
sbb
or
les
and
xlat
push
xchg
ror
addr16
xchg
sub
sub
scas
sbb
sar
fwait
mov
loop
and
movs
outs
call
(bad)
cld
bound
sahf
inc
xchg
xchg
cmp
sbb
xor
and
fwait
add
jns
xchg
das
lds
sub
pusha
in
xchg
adc
sbb
js
call
call
push
retf
mov
fwait
rcl
lea
xchg
call
jle
sar
fmul
aaa
sbb
stos
dec
push
mov
cmp
pop
nop
mov
dec
lea
mov
xlat
dec
xlat
fist
adc
push
cwde
xor
repz
movs
push
xor
or
adc
xor
mov
cld
in
aam
lds
fldenv
lock
or
mov
inc
mov
shl
sbb
mov
cld
mov
cmp
xor
adc
lea
mov
(bad)
in
pop
xchg
jp
or
xor
xchg
jo
push
and
(bad)
and
xchg
std
xchg
xchg
out
ret
and
(bad)
xor
push
adc
das
icebp
(bad)
xor
or
ds
loop
dec
cmp
lea
sbb
and
iret
inc
imul
add
clc
push
sub
push
or
jl
(bad)
and
pop
push
pop
push
mov
scas
mov
mov
popf
inc
xchg
popa
pop
out
push
push
gs
mov
or
pop
inc
jnp
pop
or
pop
imul
add
dec
mov
xor
pop
adc
or
jo
gs
cmp
shr
ss
or
dec
icebp
ss
and
mov
adc
adc
mov
fsub
mov
std
pop
pop
call
fdivr
or
dec
push
pushf
icebp
sbb
pop
mov
das
sub
push
fst
pop
(bad)
test
xchg
push
inc
mov
or
call
push
call
mov
imul
stos
cmp
loopne
jmp
retf
loope
aaa
inc
pusha
rcl
jecxz
mov
scas
or
int3
mov
add
(bad)
mov
or
lock
mov
jnp
call
sub
xor
mov
mov
pusha
push
ins
in
jl
xlat
and
mov
xlat
add
aaa
and
(bad)
stc
and
outs
mov
push
mov
sbb
cmp
jge
inc
xchg
cs
jno
mov
js
scas
fimul
(bad)
lahf
jg
jecxz
xlat
mov
lds
popf
shr
lds
aad
mov
fstp
test
push
pusha
and
xchg
in
inc
std
ret
mov
push
inc
xor
mov
xor
ins
mov
das
or
xor
xor
stc
std
arpl
in
repz
pop
lods
mov
stc
cwde
adc
push
pop
out
pop
in
sbb
fs
sub
fwait
dec
mov
mov
lar
mov
sahf
int3
sti
pushf
cmp
pop
and
loopne
jo
loope
test
jae
pop
aas
loop
inc
into
sti
rep
pushf
shl
pop
push
xor
fbstp
fld
(bad)
dec
jno
pop
and
cmps
and
cmp
arpl
pop
(bad)
scas
push
push
sub
cmps
in
cmp
lods
(bad)
jns
push
and
mov
call
fstp
adc
add
sbb
fdivrp
inc
push
push
int3
pop
icebp
in
retf
push
pusha
sbb
mov
or
ja
icebp
sbb
movs
pop
cmp
adc
pop
mov
(bad)
xchg
mov
aas
outs
pop
xor
mov
popf
mov
pushf
pop
mov
mov
lods
rol
lods
jnp
and
cmps
retf
(bad)
pop
xchg
inc
adc
arpl
sbb
push
sub
xchg
sbb
(bad)
fstp
push
mov
xor
dec
mov
into
add
inc
mov
add
inc
mov
and
fisttp
mov
aaa
icebp
lahf
cld
mov
imul
idiv
hlt
cdq
jl
xchg
xor
pop
aaa
or
int
jle
je
ja
ret
add
out
or
sti
call
out
test
add
shl
jne
fs
(bad)
sti
xchg
xchg
add
icebp
div
mov
xor
ret
xchg
pop
adc
mov
mov
xchg
or
or
push
gs
and
sub
or
xor
call
adc
xchg
jmp
push
xor
arpl
(bad)
jecxz
mov
cs
icebp
add
jmp
and
test
add
inc
sbb
pop
dec
xlat
mov
clc
push
fs
or
(bad)
mov
inc
sbb
(bad)
repnz
(bad)
aaa
or
mov
xchg
shl
add
sbb
and
mov
jecxz
fwait
push
daa
cmp
sub
add
addr16
cmp
push
pop
retf
imul
sbb
xchg
je
ins
pop
or
xchg
mov
adc
retf
fistp
mov
popa
iret
mov
and
sub
test
loop
add
hlt
(bad)
jle
nop
mov
aaa
xchg
add
stos
pop
cmp
ins
dec
push
jmp
jae
test
cmp
test
mov
jbe
call
pushf
data16
push
fstp
dec
adc
add
popf
cmp
test
dec
mov
mov
fcomp
icebp
sub
sub
push
js
test
cmc
add
dec
add
cmp
stc
cmp
scas
push
push
je
mov
inc
jmp
(bad)
jmp
push
(bad)
sbb
add
sub
popf
icebp
sbb
pushf
fimul
dec
xchg
icebp
imul
mov
dec
adc
repz
cmps
iret
icebp
push
es
retf
(bad)
inc
daa
lock
loope
xor
add
mov
and
cmps
out
inc
les
mov
dec
test
jns
mov
pop
inc
inc
ret
rcr
or
mov
mov
pop
xor
mov
in
cld
shr
int
hlt
fmulp
jbe
mov
xchg
cwde
(bad)
xor
dec
mov
push
xor
add
not
inc
add
cdq
loop
and
sub
sbb
push
dec
or
pop
xchg
les
int3
movs
movs
mov
inc
sti
(bad)
aad
push
mov
and
int
int3
(bad)
imul
push
(bad)
xchg
(bad)
xor
adc
in
adc
or
and
rol
dec
sub
pop
mov
(bad)
nop
xor
outs
mov
int3
mov
fdiv
loopne
add
jp
mov
retf
xchg
xchg
fsubr
retf
mov
shl
test
add
daa
lahf
cmps
xor
rcl
sub
sahf
sbb
mov
mov
loopne
movs
scas
pushf
fld
test
mov
fs
mov
sub
gs
inc
jmp
mov
pop
pop
rol
sub
lea
scas
jbe
(bad)
cld
ins
sub
leave
pusha
dec
std
sbb
mov
add
retf
hlt
cmps
leave
push
fadd
mov
jg
pop
out
push
add
cwde
cmc
sti
jle
cld
int3
sub
psubw
call
mov
dec
test
stos
xlat
ja
mov
loope
pop
pop
(bad)
sar
jnp
add
mov
or
pop
mov
rcl
int
mov
dec
(bad)
mov
adc
lea
jecxz
and
sbb
cmps
jmp
dec
in
ret
cld
rcr
pop
sub
retf
pop
push
enter
push
or
cmp
mov
dec
out
mov
cmp
icebp
test
loop
pop
lods
fsub
rol
daa
sub
stos
popa
sbb
fsubr
xor
hlt
sub
into
jle
(bad)
fmulp
jmp
int
jne
fisttp
cmp
dec
cmp
call
mov
jl
inc
fwait
(bad)
mov
pop
(bad)
imul
repnz
xor
cmp
clc
fiadd
outs
int3
(bad)
push
xor
pop
rcr
add
add
or
test
and
(bad)
dec
sbb
fst
xchg
cmp
pop
out
aaa
stos
xor
push
adc
cmp
icebp
push
call
xchg
push
sbb
xor
push
icebp
sub
js
pop
cs
out
push
jmp
stos
xor
je
and
or
jp
jae
adc
mov
js
push
sub
hlt
loop
mov
aam
push
clc
push
adc
popf
test
test
shr
jle
popf
add
xlat
xchg
sbb
xor
inc
mov
dec
aam
mov
sbb
xchg
out
rcr
xor
jle
lahf
xchg
xchg
es
jmp
lods
sbb
cmp
xor
and
inc
sub
ins
cmp
fild
and
add
push
lea
sbb
fcomip
push
and
push
push
mov
jmp
add
add
inc
jmp
fild
sahf
ret
in
cmp
sbb
nop
pop
lock
in
add
jo
xchg
xchg
arpl
mov
jnp
sbb
enter
(bad)
rol
or
cmps
into
ins
dec
ss
adc
bound
sbb
xor
sbb
stos
pop
fld
in
xchg
leave
ficomp
inc
stc
fcomp
lock
(bad)
and
cmps
(bad)
sbb
aas
xor
gs
xchg
iret
dec
mov
adc
out
leave
ins
shl
pop
rcl
int3
xor
push
repnz
mov
test
in
cwde
cmp
dec
xor
jne
mov
xor
je
int3
and
pusha
shr
mov
enter
nop
or
pop
je
jbe
cli
enter
and
and
imul
icebp
pop
inc
ret
push
jmp
pop
lss
test
and
out
shr
cmp
pop
adc
mov
scas
rcl
pop
rol
mov
sub
out
push
jl
sbb
sub
jle
(bad)
ss
nop
daa
das
sub
dec
pop
xor
cmp
mov
ins
push
jbe
fyl2x
jns
sar
inc
sub
add
(bad)
push
jo
cmp
fnsave
icebp
lds
test
jl
sub
push
inc
xor
ds
jo
loopne
daa
xchg
div
and
pop
push
adc
into
shl
ror
stos
daa
adc
movs
popa
adc
repnz
cmp
fs
ins
push
push
fsub
bound
das
pushaw
bound
and
dec
fwait
leave
mov
test
jns
fiadd
nop
(bad)
es
fadd
(bad)
pop
test
stc
inc
add
das
(bad)
shr
out
pop
or
push
and
xchg
mov
ret
push
cmp
dec
(bad)
pop
xlat
shl
lea
adc
and
sti
rcr
ficomp
pop
dec
xor
shl
mov
adc
cmp
mov
shl
adc
xor
hlt
mov
data16
jb
iret
inc
mov
cmp
and
gs
(bad)
jmpw
inc
retf
xor
jmp
inc
push
mov
cmp
pop
jbe
push
jle
retf
std
in
xchg
in
shl
xor
ret
psrad
mov
adc
jg
mov
jg
jae
cld
in
xchg
add
outs
or
fist
leave
push
xchg
(bad)
(bad)
scas
fldcw
lahf
jle
clc
xor
js
push
into
outs
mov
inc
fwait
cmp
push
imul
mov
lods
jmp
pop
scas
loop
or
xlat
cli
sbb
push
jmp
loope
mov
jmp
lock
es
test
lods
add
addr16
imul
rcl
sbb
shr
push
lock
dec
pop
ins
loopne
inc
aaa
jo
in
sbb
sbb
ja
popa
sbb
jno
or
pop
aam
movs
pop
push
cmps
(bad)
int
arpl
fistp
and
cld
inc
and
call
jecxz
(bad)
jmp
mov
jmp
cmc
dec
lock
lods
mov
mov
jmp
test
sbb
pop
pusha
loope
mov
(bad)
das
iret
mov
jae
sbb
adc
aam
xchg
rcr
jb
mov
lock
jbe
mov
rcr
sub
mov
xor
mov
jns
iret
push
mov
pop
ror
(bad)
out
or
aas
fimul
and
jo
and
cwde
ret
popf
scas
jmp
loopne
cmp
jbe
ret
popa
mov
xor
inc
jno
(bad)
jl
(bad)
jg
mov
mov
in
(bad)
sbb
mov
dec
leave
mov
jb
cmc
cli
data16
ds
sbb
sub
dec
movs
(bad)
or
cmp
add
bound
std
and
ins
cmp
(bad)
into
cmps
(bad)
cld
jo
je
cmps
jnp
mov
popa
xor
pop
lods
shl
jo
xchg
and
mov
dec
jno
and
dec
jnp
inc
push
dec
mov
push
fwait
jle
sub
and
in
inc
ror
push
clc
fwait
enter
lods
push
inc
idiv
data16
test
xchg
jg
adc
mov
push
test
sbb
adc
mov
lahf
xor
mov
pop
aam
imul
scas
(bad)
call
sub
fst
aad
arpl
or
nop
fstp
mov
icebp
sub
jp
into
push
in
data16
mov
ds
adc
dec
retf
pushf
cmp
jns
inc
xchg
add
aaa
jo
sbb
shr
das
jno
add
sub
xor
xor
scas
(bad)
shl
add
mov
int
aad
imul
pusha
or
sbb
xlat
imul
out
movzx
pop
mov
addr16
pop
into
(bad)
es
lahf
xor
jnp
nop
sahf
xchg
(bad)
jo
call
cmc
jg
bound
movs
xor
daa
jle
pop
fild
jecxz
xchg
sub
adc
fimul
es
pop
pop
adc
lock
nop
or
adc
shr
sar
retf
cmp
lods
int
or
maskmovq
not
add
mov
jbe
adc
xchg
ror
mov
hlt
scas
adc
or
les
data16
cmps
ss
mov
mov
inc
dec
add
push
lea
loopne
pop
jge
mov
dec
rcl
lock
imul
push
hlt
lea
pop
imul
(bad)
fs
mov
xor
push
test
dec
jmp
or
ins
and
ret
retf
pop
push
pusha
into
sub
xor
xor
push
retf
(bad)
jns
mov
xor
stos
neg
scas
test
sbb
mov
push
xchg
sub
add
xchg
add
mov
pop
mov
and
lods
push
mov
and
jecxz
mov
and
cmps
and
das
mov
push
xor
jl
adc
mov
pusha
mov
lods
leave
push
ret
pop
and
outs
fild
lods
jp
add
and
ins
aaa
jge
je
fdivr
sbb
and
adc
test
and
cmps
test
stos
jne
pushf
cmp
or
repz
sub
or
push
call
or
ja
adc
stos
cmps
push
arpl
jmp
mov
ins
jecxz
rcr
jae
jb
lock
cmp
and
scas
mov
sbb
jns
sar
pop
push
(bad)
xchg
test
cmp
push
pop
pop
push
cli
int3
ror
mov
outs
xchg
loop
sub
xor
imul
dec
adc
ret
in
in
fcomi
xor
add
shl
into
jle
fld
scas
mov
mov
adc
fdiv
dec
push
push
aam
push
cmps
scas
in
lea
mov
sbb
adc
pop
pop
mov
or
mov
sub
jbe
into
inc
xchg
jg
pop
mov
cmps
jo
jne
pop
sub
and
pop
lea
sbb
lods
stos
jb
push
mov
jo
(bad)
cmp
adc
cmps
and
xor
in
add
outs
dec
sbb
daa
mov
pop
addr16
sub
test
fs
pop
repz
or
(bad)
adc
mov
out
into
cmp
ret
sahf
movs
jns
movs
xlat
cmp
sub
pusha
loopne
(bad)
in
(bad)
retf
leave
aad
cmp
jno
xor
(bad)
mov
or
mov
or
leave
iret
call
inc
xor
pop
cmp
std
stos
clc
test
pop
inc
cmp
into
xor
xchg
out
cmp
mov
cdq
cmovns
sub
jle
push
mov
stc
inc
loopne
ret
int
xchg
sbb
adc
dec
adc
xor
dec
scas
hlt
mov
sti
test
call
jno
scas
les
cmp
daa
fbld
push
stos
lods
and
push
xchg
fsubr
scas
pop
in
loope
test
sbb
push
mov
push
mov
lods
cmps
fimul
mov
xchg
fist
jle
xor
adc
adc
movs
mov
mov
das
cmp
sub
or
stos
lock
jbe
jmp
cmp
mov
add
or
test
fld
(bad)
sar
shr
push
aaa
sbb
add
clc
cmp
xchg
or
fbstp
daa
bound
mov
arpl
ja
xor
push
(bad)
mov
xchg
es
adc
stc
addr16
adc
jne
jbe
adc
retf
int
shl
cwde
sbb
ins
add
jecxz
mov
push
ret
shr
mov
and
mov
imul
adc
mov
(bad)
(bad)
std
mov
daa
dec
add
xchg
push
xor
pop
push
sbb
stos
cmp
fs
xor
test
sbb
xchg
sti
jo
js
push
fbld
fadd
rcr
icebp
and
push
in
dec
retf
retf
lods
hlt
xor
mov
imul
retf
stos
inc
inc
cli
adc
inc
test
int3
sub
dec
adc
mov
mov
sahf
aam
add
mov
push
(bad)
in
fmul
into
aas
scas
cdq
cmp
retf
aaa
xlat
or
cs
inc
imul
fwait
xor
xchg
loope
pop
mov
stos
je
inc
adc
repz
or
sub
mov
xor
cmp
dec
ret
mov
sub
mov
lock
push
jmp
fadd
mov
std
cmp
push
jg
(bad)
lea
sbb
loopne
sub
fwait
mov
daa
ror
ror
sub
aad
mov
and
jle
inc
mov
outs
dec
push
mov
sbb
inc
fisttp
mov
jno
ret
sbb
stos
data16
sbb
cwde
div
mov
stos
cs
loopne
dec
shl
and
(bad)
shl
xchg
xchg
jle
xor
sbb
cmp
xchg
stos
mov
dec
lods
in
push
(bad)
div
push
or
test
push
in
xor
retf
cmp
cmp
es
mov
ud2
pushf
push
sahf
nop
fbld
pusha
add
dec
stc
mov
and
jae
xchg
add
xchg
scas
movs
jecxz
mov
dec
(bad)
loope
mov
or
retf
call
out
sub
sbb
jg
dec
and
ret
inc
mov
push
fld
out
and
shl
add
shl
push
rcr
dec
aas
xchg
(bad)
mov
lahf
xchg
adc
iret
int
es
jl
cli
push
adc
add
addr16
inc
cdq
lock
addr16
call
loope
shl
jne
dec
dec
jo
std
push
inc
cmp
or
add
fwait
lahf
loopne
jle
adc
cwde
inc
movs
mov
in
xor
mov
mov
xchg
xor
dec
in
popf
inc
push
mov
mov
pushf
dec
pop
leave
ret
mov
outs
push
stc
mov
dec
in
sbb
adc
mov
cmps
and
cmp
into
(bad)
dec
mov
jl
fs
mov
mov
lods
inc
sbb
or
ja
sbb
mov
stos
sbb
mov
sbb
and
dec
xor
aam
mov
popf
jp
fbstp
sub
ja
fs
ret
push
mov
sbb
add
clc
xor
in
mov
in
and
movs
jne
cld
jnp
cmp
rcr
loope
movs
adc
pop
or
ret
jecxz
lahf
sub
mov
cmp
xchg
inc
or
ret
cmp
jnp
or
arpl
in
pop
ja
ficomp
push
(bad)
sub
inc
cmc
push
xchg
retf
push
pop
int3
push
mov
adc
pop
ins
add
cmp
push
jecxz
scas
mov
sub
arpl
nop
int3
push
pop
repnz
mov
sbb
loope
push
repnz
retf
mov
movs
pop
dec
and
xchg
cmps
jecxz
imul
cmp
shl
movs
lds
or
xchg
ret
jecxz
and
add
mov
add
jo
call
enter
pop
cmps
repnz
pop
mov
imul
add
hlt
push
lods
cwde
icebp
cmp
fcom
adc
stos
fidiv
dec
sbb
lahf
xchg
sbb
inc
(bad)
and
test
jg
push
nop
mov
xor
je
push
push
xor
repnz
test
or
inc
mov
cmc
jmp
xchg
(bad)
mov
outs
aas
and
xor
mov
xchg
sub
(bad)
mov
(bad)
sub
push
pop
and
or
call
cmps
jae
mov
lods
rcr
aam
stos
es
dec
pusha
jg
(bad)
adc
inc
cmp
out
cmp
das
out
pop
mov
xchg
inc
xchg
daa
test
jbe
mov
xchg
hlt
ja
adc
(bad)
mov
pushf
pop
pop
lods
enter
enter
repnz
mov
push
and
imul
ret
mov
test
mov
stos
lods
dec
loope
lods
xor
xor
mov
ret
xchg
retf
popa
jno
fcom
sti
shl
sbb
xor
imul
mov
fsubr
(bad)
mov
ja
sbb
mov
pusha
jae
fst
sbb
xor
cmp
pop
mov
sbb
js
sbb
cmp
in
lock
and
jecxz
pop
push
add
into
mov
scas
outs
inc
fidiv
gs
retf
into
xor
dec
mov
test
int3
jne
lds
or
(bad)
inc
in
xchg
ror
ret
movs
jecxz
loop
mov
inc
pop
lahf
std
jne
jns
leave
or
cld
inc
ins
pushf
bound
daa
xor
sub
gs
aam
adc
test
cmp
jl
jae
xchg
push
cmp
ficomp
call
add
js
mov
push
adc
imul
fwait
mov
jae
mov
push
test
pop
push
fmul
das
adc
adc
cmc
mov
cmc
xor
dec
jmp
repnz
sub
mov
inc
cmp
shl
shl
mov
xchg
sti
pop
or
pop
add
movs
aad
or
ss
pop
jo
inc
pusha
push
cld
or
in
and
repz
sahf
and
mov
int
sub
mov
cmp
mov
(bad)
fisttp
jecxz
int3
jle
push
push
cdq
in
ins
pusha
fmul
xor
sbb
xchg
mov
fdivr
in
mov
je
push
jge
out
and
rcr
(bad)
push
mov
pop
outs
jno
add
pop
push
nop
inc
test
clc
jmp
push
movs
inc
mov
add
xor
or
in
xchg
and
lds
jne
jb
imul
enter
mov
push
iret
sahf
xor
popf
aaa
in
push
or
dec
adc
xor
pop
sbb
mov
dec
out
and
test
mov
push
cmp
xchg
cdq
daa
sub
sbb
mov
imul
enter
mov
and
sahf
scas
test
fisttp
jmp
jno
cmp
repz
loope
fstp
or
mov
fcmovbe
xchg
fdivr
and
xor
add
push
dec
int
push
xor
pop
int
xchg
(bad)
loop
push
js
fmul
pop
(bad)
xchg
scas
lahf
sbb
fild
sahf
dec
ss
mov
ficomp
mov
dec
add
add
jno
pop
cdq
add
(bad)
or
ror
fsubr
shl
pop
and
jge
shr
xor
aam
add
or
and
mov
adc
cwde
add
inc
iret
test
xor
scas
rcr
cld
nop
cmp
mov
test
xchg
and
dec
mov
jmp
cpuid
sub
xor
or
push
mov
xlat
sub
and
xchg
cwde
ficom
xchg
or
into
les
add
mov
fstp
jle
ds
mov
jns
out
or
dec
jnp
dec
mov
pop
dec
leave
push
popf
in
outs
dec
popa
add
jno
fdivrp
ja
jb
(bad)
fs
enter
sbb
(bad)
jge
outs
je
mov
ffreep
add
lahf
popa
pusha
inc
xor
sub
shld
jns
pop
fwait
push
sub
dec
(bad)
fidiv
adc
mov
pop
sbb
push
mov
sbb
inc
test
repnz
ror
xchg
xchg
pop
adc
mov
add
cmps
fptan
xlat
dec
call
sub
stos
jge
sub
daa
push
out
ss
es
shr
into
xchg
add
lods
std
xor
pop
nop
mov
aas
mov
sbb
mov
dec
les
jle
inc
cs
dec
fmul
jo
inc
or
les
adc
sub
jecxz
jle
aaa
jl
sbb
ret
(bad)
fadd
outs
fs
js
jmp
lock
in
or
jno
ss
popa
xchg
jno
mov
je
xor
jmp
pop
shl
adc
push
dec
inc
lock
loopne
lock
div
mov
or
cmc
dec
add
xchg
dec
sub
rol
jae
jns
sbb
xor
ret
js
fmulp
mov
dec
(bad)
sbb
mov
lea
dec
(bad)
enter
add
xor
mov
mov
enter
jnp
ret
pop
fs
adc
or
lock
push
out
rcr
xor
push
jns
xchg
or
jp
pop
(bad)
cmp
stc
sub
ror
mov
push
sbb
sbb
mov
xchg
call
fist
repnz
fisttp
and
jl
sbb
aam
sub
sub
mov
dec
cmp
pop
xchg
icebp
stc
enter
jecxz
mov
mov
and
or
mov
dec
push
(bad)
(bad)
cmp
ins
test
xchg
scas
jecxz
test
iret
icebp
inc
inc
push
jmp
in
pop
in
mov
js
pusha
push
xchg
popa
xchg
push
dec
mov
jb
adc
xchg
sub
push
push
mov
or
sub
shl
adc
adc
pop
shr
test
aad
nop
sahf
adc
enter
leave
imul
pushf
mov
xchg
add
xchg
mov
int3
and
xlat
cdq
sub
adc
ret
frstor
or
pop
push
mov
ss
add
sub
ficomp
mov
adc
loop
sbb
inc
add
mov
inc
jbe
dec
inc
in
xchg
and
jo
pop
sub
les
xor
jb
push
fwait
scas
xchg
jge
or
jmp
jae
lds
push
dec
cmp
xor
movs
jb
pushf
ss
dec
into
cmps
lock
sbb
jne
sub
pop
jo
push
pushf
js
lds
add
rcr
lea
test
sar
outs
fisub
test
aam
(bad)
js
and
xchg
pop
aaa
mov
mov
pushf
push
mov
jb
arpl
mov
neg
cmp
add
cmp
jge
inc
lods
mov
inc
xchg
jno
and
xor
retf
mov
icebp
push
pop
pop
popf
mov
xchg
movs
in
pop
pop
sub
jmp
xor
fistp
int
mov
fstp
mov
(bad)
loop
sub
leave
xor
xor
mov
mov
or
outs
and
xchg
xorps
int
sbb
push
jbe
dec
add
xchg
add
and
cli
inc
and
and
or
sub
nop
iret
xchg
jg
mov
call
leave
sbb
adc
sub
inc
push
lahf
xchg
xchg
add
ret
adc
jb
cli
out
mov
cmp
ins
xor
ret
(bad)
push
pop
mov
mov
(bad)
rcl
push
cmps
rcl
scas
jnp
enter
cmps
ds
jl
dec
leave
adc
fs
jne
sahf
dec
fdivr
cmp
cmps
push
addr16
es
(bad)
jae
push
dec
repz
rcr
inc
jo
add
and
es
xor
sub
xchg
cmps
data16
pop
xchg
repnz
dec
(bad)
fcom
dec
push
xchg
and
or
push
fs
repnz
sbb
jmp
xor
loope
or
stc
repnz
(bad)
mov
pop
jmp
leave
adc
adc
aaa
fcmovne
jl
and
cmp
les
pop
icebp
fwait
cli
sbb
sub
pop
sbb
add
mov
lahf
fstp
inc
jecxz
and
push
cmp
cmp
pusha
mov
popf
or
loopne
(bad)
(bad)
dec
sbb
scas
push
jbe
dec
mov
jecxz
xor
xor
fistp
mov
mov
fsubp
int
mov
movs
ja
shl
das
mov
jp
mov
mov
jecxz
cmp
int3
mov
xchg
outs
add
inc
pop
xor
stc
sbb
or
jne
(bad)
xchg
cmp
jp
sub
pop
pop
jno
sbb
fcom
out
sbb
sub
shl
cmp
test
adc
ret
dec
ja
xchg
and
jne
xor
pop
inc
and
leave
je
inc
loopne
adc
jae
popa
jecxz
fisubr
push
push
adc
in
mov
xor
(bad)
shl
sub
sbb
int3
(bad)
push
shl
pusha
clc
mov
and
mov
pop
mov
movs
in
daa
push
sbb
cdq
imul
push
leave
sub
pop
dec
loope
push
imul
sar
inc
test
mov
inc
div
jae
jecxz
sbb
(bad)
mov
in
std
mov
jp
cli
inc
push
push
xor
jecxz
dec
imul
loope
ss
mov
and
int3
push
imul
inc
mov
jl
jmp
sbb
test
mov
sbb
das
(bad)
rol
stos
idiv
daa
xor
or
xchg
rcl
nop
in
sbb
xchg
bound
adc
push
imul
int
cli
jnp
mov
rcr
outs
addr16
or
loopne
mov
mov
sbb
xchg
sar
lods
jecxz
xchg
xchg
xchg
fst
inc
pop
into
test
mov
(bad)
int
aam
leave
jmp
mov
test
cdq
or
adc
pusha
jmp
mov
or
imul
shl
inc
push
adc
mov
or
inc
popa
fstp
daa
ss
mov
nop
add
repnz
test
cmp
pop
add
inc
push
pushf
jbe
aas
xchg
sub
cli
fwait
mov
adc
js
scas
repnz
cwde
cmp
les
xchg
(bad)
pop
ret
pop
mov
ret
sbb
shr
leave
xchg
call
mov
sbb
dec
cmp
mov
inc
sbb
daa
aaa
ffreep
adc
adc
mov
call
sbb
jo
inc
mov
inc
mov
fwait
mov
push
iret
cmp
dec
lods
das
pusha
mov
jmp
pop
push
sar
cmc
jmp
xchg
inc
add
push
xchg
sti
pop
in
pop
ins
sbb
shl
dec
scas
jg
out
mov
dec
(bad)
xchg
pop
fild
dec
xor
jl
xchg
cwde
outs
loopne
cmc
sbb
fist
int3
inc
pop
mov
(bad)
out
repnz
js
inc
jb
mov
sbb
push
sbb
inc
bnd
addr16
add
mov
es
add
adc
stos
lea
add
pop
inc
js
mov
jmp
mov
inc
dec
lock
sub
mov
fild
jmp
(bad)
out
cmc
ja
mov
out
sbb
fild
push
xchg
popa
inc
dec
xchg
stos
(bad)
into
mov
call
arpl
mov
jmp
jl
mov
sub
std
push
mov
sbb
outs
sub
mov
jnp
sbb
add
jmp
(bad)
push
out
fdivr
fsubr
int3
imul
jecxz
mov
cmp
out
call
cmc
test
call
iret
movs
cdq
mov
dec
jno
jne
adc
ja
and
xchg
mov
ins
ret
clc
js
xor
jp
call
out
scas
popf
(bad)
mov
cwde
cmps
fcmovu
add
push
clc
sar
test
jle
push
lea
xchg
and
mov
sub
adc
clc
shl
imul
cmp
das
xchg
xor
xor
out
sar
sub
push
inc
fcom
mov
lahf
cmps
shr
push
add
push
fiadd
xchg
(bad)
rcr
xor
out
xchg
outs
imul
mov
and
mov
xchg
hlt
push
fimul
jle
imul
nop
lock
sbb
test
mov
cmc
in
sbb
call
shr
sbb
lds
inc
jnp
test
push
imul
imul
pop
test
in
pop
retf
outs
sahf
sub
sbb
sbb
(bad)
and
je
mov
sbb
movs
jg
outs
ins
mov
inc
adc
ret
loop
xor
jp
sub
call
xchg
dec
fisub
sub
mov
add
popa
inc
nop
fld1
xlat
mov
mov
cmps
adc
popf
inc
mov
pop
cwde
adc
inc
loope
jae
push
cmp
leave
je
call
(bad)
call
pushf
dec
cld
loop
test
xlat
popa
imul
pop
dec
hlt
(bad)
mov
pushf
mov
jne
xor
aad
mov
mov
and
(bad)
imul
stos
xchg
js
xchg
xchg
xlat
mov
in
fmul
jbe
sbb
mov
pop
sub
ins
(bad)
jmp
lar
movs
mov
or
mov
jp
xchg
sbb
mov
mov
int3
mov
pop
repnz
pusha
inc
or
(bad)
mov
pop
mov
icebp
xchg
sub
push
xchg
daa
sbb
(bad)
jne
xchg
push
cdq
add
xchg
dec
mov
data16
mov
pusha
daa
pushf
gs
sahf
sbb
jge
mov
dec
dec
xor
jns
sti
mov
shr
jno
sbb
daa
std
xor
sahf
xchg
into
mov
mov
mov
(bad)
push
fadd
in
cmp
dec
mov
pop
imul
jbe
push
out
sahf
dec
dec
ficom
out
xor
sub
fiadd
jp
popa
rcr
sti
fstp
adc
iret
add
fstp
cmp
mov
push
sub
mov
iret
clc
mov
fbld
stos
dec
mov
jns
xchg
cmp
adc
xlat
ins
scas
mov
cmp
dec
push
or
dec
inc
leave
stos
cwde
lds
mov
fist
sub
icebp
out
push
ins
mov
cmp
mov
and
out
and
aas
aad
mov
inc
std
or
push
ret
cdq
mov
fstp
mov
outs
fnstenv
xchg
add
add
mov
or
or
test
arpl
stc
test
pop
pop
sti
mov
push
sub
xchg
xor
leave
jmp
push
je
inc
fmul
xchg
xlat
mov
or
jmp
fmul
push
cmc
fdivr
leave
xchg
jb
mov
sar
xchg
adc
sbb
sub
and
loope
cmp
ret
sti
mov
inc
add
or
leave
cdq
cmp
popf
and
mov
sub
push
out
clc
xor
jno
push
(bad)
fcom
xchg
(bad)
enter
xchg
mov
mov
jae
retf
adc
int3
dec
and
je
mov
sub
repz
aad
or
nop
stos
jmp
push
xchg
icebp
or
or
js
lds
out
and
mov
outs
sbb
div
lods
das
icebp
push
push
pop
les
scas
sti
inc
out
pop
inc
cli
lods
add
dec
jne
pop
rcl
dec
xchg
mov
mov
and
stos
mov
not
lea
fist
std
lea
test
in
sbb
popa
push
push
(bad)
mov
push
push
mov
sub
sub
mov
xchg
aaa
mov
not
nop
mov
push
xchg
jg
movs
pop
scas
cmp
repz
mov
les
rol
fisttp
or
je
repz
fist
cmp
mov
add
dec
shl
cmp
clc
add
mov
cmps
and
shr
dec
push
retf
dec
arpl
pushf
pop
cmp
mov
hlt
adc
pop
jge
stos
lea
xchg
push
cli
sub
sbb
adc
push
imul
add
and
out
sub
xchg
js
xor
pop
mov
or
ja
xor
stos
cmp
jmp
dec
mov
loope
cmp
xlat
mov
mov
adc
cmp
aam
loope
fisttp
mov
inc
xchg
xor
mov
movs
(bad)
outs
xor
movs
push
hlt
add
jo
pop
pusha
or
(bad)
adc
push
cmc
xor
cmp
mov
sub
dec
sub
ret
jg
xor
call
xchg
out
mul
inc
mov
addr16
iret
fcomp
cmp
pop
xchg
xchg
mov
cld
adc
stos
mov
inc
sbb
repnz
push
ins
cmp
lock
cli
fwait
repz
dec
in
lock
sub
rcr
mov
push
or
popa
push
jmp
fnstsw
cld
rol
push
repnz
inc
ret
stos
ficomp
jp
dec
mov
lock
aas
adc
or
fisttp
sbb
dec
popa
out
rcr
jo
mov
pxor
push
dec
xor
fmul
adc
ret
mov
aas
(bad)
mov
outs
(bad)
loopne
xor
retf
sahf
cmp
mov
cmp
aas
xor
mov
pop
mov
lds
xchg
(bad)
dec
pop
pop
call
repz
cmp
int3
lods
inc
les
icebp
data16
ins
loopne
push
sub
rcl
call
fidiv
jl
pop
psubb
mov
ds
add
dec
mov
inc
cdq
jo
add
mov
into
lahf
jns
xchg
mov
or
mov
ja
push
outs
cmp
pop
in
sahf
shl
fadd
jmp
xor
xchg
out
add
mov
ror
pusha
pop
jmp
cwde
add
lea
and
jmp
pop
mov
shl
out
or
pop
adc
sub
adc
inc
inc
and
xchg
mov
bound
shl
push
bound
sub
test
jmp
sar
cld
sub
scas
dec
call
into
nop
add
lea
push
sub
loopne
add
push
xlat
mov
leave
dec
cdq
test
push
cmp
cmp
and
inc
(bad)
cmc
xor
lods
or
xchg
add
in
fsubr
ds
idiv
sub
pop
xchg
dec
jo
and
rol
sbb
gs
mov
lahf
std
push
xor
(bad)
data16
mov
int
xchg
ret
push
stc
test
pusha
lahf
dec
enter
cdq
mov
pop
mov
arpl
test
sbb
push
jae
out
mov
and
mov
push
movs
xor
sbb
lahf
jecxz
out
mov
cmp
cs
or
test
jno
test
or
popf
and
rol
sub
mov
pop
xor
mov
xor
push
add
jmp
xor
fiadd
aas
or
inc
xor
aas
or
dec
(bad)
ja
jne
std
inc
jb
add
pop
call
(bad)
ds
addr16
dec
dec
push
in
mov
js
rcl
(bad)
adc
push
(bad)
push
lock
popf
mov
pop
test
in
in
mov
int
es
jb
je
(bad)
sub
mov
cmp
aas
repz
or
inc
jecxz
outs
fwait
shl
loope
cmp
loopne
or
xor
(bad)
gs
iret
fbld
push
adc
fwait
mov
add
jp
xor
push
leave
popa
ins
xor
es
imul
cmps
fucomip
jmp
fnsetpm(287
xor
dec
xor
in
or
dec
imul
pop
aaa
retf
mov
ss
pop
(bad)
jecxz
das
dec
out
ins
cwde
mov
inc
addr16
pop
jno
sti
mov
test
in
pop
inc
mov
dec
ror
inc
or
addr16
cmc
lds
xor
add
mov
mov
inc
mov
mov
enter
std
sub
add
popa
jmp
or
outs
test
sbb
fwait
daa
mov
sbb
pop
int
xchg
xor
aaa
mov
scas
aam
sub
fnsave
pop
dec
dec
js
jo
pop
imul
mov
jae
xor
sub
and
or
pop
lds
add
jl
mov
inc
xchg
mov
(bad)
dec
hlt
cmp
pop
adc
and
dec
retf
push
pushf
push
push
dec
ret
mov
(bad)
arpl
dec
shr
sbb
popa
jle
xchg
fdivr
inc
push
shl
jmp
imul
sahf
add
push
mov
dec
cmps
and
leave
div
sahf
ds
or
pop
call
xor
nop
inc
imul
or
jno
mov
or
ret
jmp
idiv
cmp
add
es
lods
fwait
int3
push
sti
inc
pop
xor
sub
jl
pusha
pop
dec
loop
(bad)
xchg
mov
out
pop
push
cmp
jno
mov
sbb
pop
and
ins
jecxz
stos
mov
sar
add
clc
inc
push
test
and
pop
cld
dec
out
pop
jbe
xchg
icebp
mov
mov
and
jb
fdivr
ins
pop
pop
xor
dec
add
cmp
cmps
or
or
push
loope
loop
mov
adc
mov
xor
fdivr
pop
not
mov
popa
cmp
pop
sub
mov
pop
pop
nop
adc
pop
add
test
ds
out
fs
sub
jae
test
mov
(bad)
jmp
cld
nop
xchg
and
scas
mov
rol
retf
(bad)
lods
retf
pop
or
inc
xchg
pop
scas
jmp
add
test
xchg
jge
pop
and
lods
call
int3
pushf
(bad)
push
gs
push
out
push
sbb
xchg
mov
add
shl
sti
iret
shl
out
and
dec
push
xor
sub
sub
call
aaa
lea
in
adc
mov
mov
push
(bad)
dec
mov
push
pop
fucomip
inc
push
test
cmp
dec
outs
stos
add
(bad)
iret
pop
inc
retf
mov
cdq
ins
sbb
es
mov
dec
fadd
aaa
add
ret
out
sar
and
mov
dec
stos
cli
sub
loope
mov
lock
dec
lds
jae
cs
cmps
(bad)
sti
(bad)
push
mov
mov
lds
sbb
xchg
dec
fadd
sub
jno
or
jecxz
fstp
hlt
adc
mov
sbb
and
popf
aaa
mov
jnp
dec
cmp
mov
js
rcr
cmp
les
fld
or
mov
mov
dec
mov
fadd
and
arpl
aam
rcl
out
sbb
push
and
out
(bad)
mov
xchg
add
test
(bad)
sub
adc
pusha
movs
jo
rol
mov
or
fild
aad
pop
sub
movs
call
stos
push
fstp
sbb
and
mov
cmps
mov
or
pop
cmp
(bad)
test
inc
jmp
mov
lock
pop
pop
nop
inc
and
fwait
mov
das
fild
add
ja
push
loopne
mov
mov
imul
cmc
mov
fistp
nop
xor
sub
cmp
fidivr
hlt
inc
push
jnp
add
clc
outs
mov
inc
ds
and
pop
fimul
inc
pop
pushf
pop
retf
pusha
(bad)
xor
xchg
add
pop
cwde
mov
xchg
imul
jge
js
scas
xor
jmp
cmp
fbstp
cmps
jmp
or
xlat
scas
add
add
data16
sbb
xor
jne
push
sar
mov
inc
mov
repz
xchg
push
xor
movs
fmul
mov
push
aam
aam
(bad)
(bad)
adc
retf
arpl
fdivr
mov
stos
jmp
in
(bad)
jmp
iret
cmp
adc
push
sbb
stos
push
sub
mov
popf
stos
aas
pop
out
push
in
sbb
les
jge
mov
add
inc
jp
stos
das
mov
inc
movs
add
call
sahf
cwde
mov
cmp
mov
and
retf
cmps
(bad)
pop
mov
sbb
into
push
xchg
push
cdq
cmp
push
inc
dec
or
nop
add
and
mov
xchg
and
jl
cmp
mov
xor
nop
jns
gs
out
pop
bound
sub
mov
push
inc
ins
rcl
mov
inc
mov
lods
imul
add
pop
dec
adc
icebp
add
btr
ins
jne
xchg
mov
jmp
and
into
lock
test
jl
sbb
sbb
xor
cmp
xor
sbb
lahf
sbb
jl
scas
hlt
loopne
popa
mov
dec
out
jecxz
mov
add
and
arpl
sbb
push
mov
js
lds
in
add
add
repz
mov
ss
mov
mov
inc
or
aaa
ret
pop
hlt
loopne
pushf
cmp
jns
lods
mov
hlt
ins
or
sbb
add
jl
pop
lods
out
retf
fnstenv
mov
mov
ins
test
stos
pop
or
dec
and
xlat
dec
es
iret
std
cmp
jb
inc
push
shr
inc
or
(bad)
rol
or
mov
pop
mov
inc
mov
mov
push
ja
cmp
add
iret
stos
mov
inc
add
add
ss
movs
popf
fdiv
jmp
into
retf
push
cmp
xor
ins
xchg
jb
mov
and
hlt
cld
test
xor
js
fisttp
mov
dec
loop
ficomp
sbb
shl
pop
dec
jae
and
push
sub
dec
adc
inc
hlt
js
mov
js
push
cmp
push
and
mov
add
fstp
jo
test
(bad)
add
and
movs
lods
xor
jns
xor
call
sbb
pushf
xor
rol
pop
jns
add
add
imul
imul
shl
dec
sbb
xor
dec
cmp
pop
pop
cwde
pop
jecxz
jmp
cmps
inc
lock
bound
mov
gs
js
cmc
sbb
mov
cmp
jl
mov
inc
mov
or
ins
aad
pop
adc
xchg
cwde
pushf
pop
je
jge
retf
adc
data16
jno
pushf
or
xchg
push
mov
in
push
fucomp
std
jo
and
and
loope
push
jb
xor
test
vphsubdq
push
sbb
jnp
jb
push
das
xlat
loop
jnp
pop
aam
cs
xchg
ja
pop
(bad)
frstor
push
jns
jae
jp
fist
mov
bound
loope
fidivr
jmp
popa
outs
jmp
push
iret
rcr
mov
lds
test
sbb
rcpps
and
adc
mov
mov
fbld
or
(bad)
(bad)
add
in
cdq
adc
fisub
inc
pop
cmp
inc
sub
push
popa
sti
aaa
das
push
rol
add
repnz
(bad)
dec
out
arpl
jge
ficomp
add
xor
sub
(bad)
fldenv
popa
das
fidiv
mov
out
adc
(bad)
test
mov
jl
jp
pop
or
test
and
rcr
adc
sbb
jb
aad
fisttp
fldcw
lods
xor
adc
pop
xor
sbb
js
std
mov
dec
idiv
xor
stc
sti
test
or
and
xor
stos
ds
xchg
sub
out
xchg
cs
int3
mov
pop
sub
ss
add
popa
popf
cmp
dec
cmc
sbb
stc
mov
cwde
call
push
push
int
jl
retf
mov
outs
xchg
jns
sbb
cdq
push
push
xchg
add
pop
pop
jp
jg
mov
fld
jg
ret
jns
jmp
out
mov
lods
xchg
adc
and
jmp
cmc
fmul
ret
pusha
inc
in
(bad)
sbb
ror
fwait
pop
scas
shr
xor
bound
call
xchg
je
sbb
push
inc
xor
add
adc
mov
add
in
add
daa
mov
mov
xor
stos
mov
dec
xor
mov
jp
mov
ss
dec
in
nop
inc
in
jg
cmps
xor
das
xchg
or
(bad)
mov
retf
mov
dec
aad
inc
sti
pop
(bad)
sub
pop
test
stos
(bad)
out
call
retf
(bad)
out
cmp
sbb
jecxz
repz
pop
hlt
inc
add
rol
adc
cmp
adc
jecxz
add
cmc
out
clc
aaa
mov
xchg
iret
shr
mov
fwait
jo
adc
inc
dec
repnz
mov
das
out
push
(bad)
cmps
mov
repnz
sub
inc
mov
xchg
jle
cmps
nop
cmp
xchg
jle
and
pop
adc
adc
sub
test
jb
dec
leave
int3
xor
cmp
lahf
inc
mov
mov
adc
inc
pop
out
push
and
mov
in
add
mov
sbb
cld
jge
into
jno
jns
and
add
xor
pusha
xchg
mov
mov
sbb
out
jmp
das
stc
outs
fadd
(bad)
addr16
sbb
sti
xor
int
push
ss
cli
repnz
push
dec
in
daa
pop
mov
push
push
pop
lods
mov
or
retf
rcr
test
and
fndisi(8087
sbb
nop
mov
mov
mov
sub
jl
inc
mov
call
jmp
xor
aad
retf
das
lock
in
fs
mov
lahf
xlat
fcmovbe
jmp
inc
popf
push
mov
add
shl
stos
add
and
adc
or
sub
pop
push
ja
dec
(bad)
dec
pop
repz
ja
jmp
xor
shl
arpl
ret
shl
xor
adc
inc
ja
arpl
call
pushf
add
les
mov
mov
fndisi(8087
int3
cmp
aad
ins
in
addr16
dec
popf
in
lods
repnz
cmp
lods
add
in
push
inc
and
xor
push
pop
or
jp
mov
lock
mov
pusha
pop
cld
push
or
add
daa
jl
adc
lahf
fnstcw
pop
dec
adc
pop
mul
add
lea
jg
or
bound
mov
or
scas
mov
movs
ja
push
mov
pop
aas
dec
jg
or
out
mov
out
(bad)
int
daa
or
ss
repnz
mov
inc
test
nop
jmp
add
mov
pop
adc
adc
imul
add
xchg
mov
ins
dec
jb
iret
ficom
pop
(bad)
cmp
mov
xor
and
add
cmp
mov
cmp
movs
sbb
fsub
(bad)
mov
push
ds
sub
dec
call
ret
jns
jbe
cmc
or
mov
enter
jmp
les
fidiv
add
mov
pop
mov
mov
fdiv
inc
in
jl
call
je
ror
int3
and
imul
add
sub
sub
fdiv
into
ret
aaa
dec
int3
xor
jno
sbb
sbb
mov
es
ins
retf
add
dec
cmp
int3
xor
mov
fistp
jmp
cmps
add
ja
idiv
shl
nop
aaa
add
sub
aaa
inc
inc
dec
mov
(bad)
lahf
sbb
bound
cmp
mov
gs
ja
adc
sar
lods
ins
mov
jmp
addr16
fisttp
fsubr
pop
test
arpl
ins
sbb
cdq
rol
xchg
nop
in
ins
mov
sti
and
xlat
inc
push
add
cmp
clc
mov
sbb
test
sbb
push
sar
xchg
adc
jmp
cmp
and
call
xchg
mov
mov
and
sub
push
sbb
je
scas
in
sbb
jecxz
sub
and
pop
mov
push
gs
push
outs
call
sub
repz
js
nop
hlt
pop
xchg
jae
mov
cmp
or
push
(bad)
ins
mov
nop
adc
cld
out
icebp
mov
pusha
ret
pop
mov
ins
dec
dec
pop
(bad)
jns
or
int
faddp
fldcw
ja
push
imul
xlat
mov
out
lea
(bad)
(bad)
pop
xchg
or
outs
and
sub
jb
cs
mov
(bad)
imul
rol
mov
and
add
retf
cmp
xchg
aam
xor
dec
mov
push
push
mov
daa
mov
retf
out
adc
(bad)
ror
sbb
push
inc
iret
add
into
adc
mov
cld
in
lods
std
cli
xor
pop
push
retf
jge
adc
je
out
add
mov
lahf
outs
push
inc
mov
pop
sti
outs
push
mov
xchg
lahf
push
into
aad
mov
mov
rcl
adc
xor
ss
aas
mov
stc
push
repz
pop
dec
cmc
cdq
and
add
lock
cmps
aaa
dec
push
imul
mov
fimul
(bad)
push
fisubr
push
pop
stc
mov
xchg
popf
xchg
sti
ds
jae
sub
cmp
mov
pop
push
shl
repz
push
add
gs
push
fcom
add
stc
pop
scas
aas
mov
xchg
js
jbe
sbb
pop
and
xchg
mov
push
das
xchg
add
sbb
lahf
mov
scas
icebp
ss
lods
aas
mov
lock
loopne
addr16
pop
fcomp
xor
or
mov
jg
and
sub
add
fcom
movs
lock
ret
inc
sub
and
iret
les
loop
mov
addr16
mov
rcl
mov
lds
outs
dec
push
jecxz
mov
outs
xchg
mov
out
out
dec
(bad)
out
dec
pop
imul
fisubr
gs
mov
movs
imul
jecxz
mov
cmp
outs
push
pop
add
mov
pop
sbb
iret
pop
es
cmp
test
xchg
mov
xchg
jno
dec
lods
pop
xor
out
and
je
stos
pop
lea
mov
adc
adc
xchg
jne
mov
dec
jmp
lahf
pop
sbb
add
sub
adc
inc
and
xchg
jle
leave
sbb
test
ret
cmp
xchg
and
cwde
loop
and
ja
mov
sub
pusha
les
(bad)
stos
push
sbb
out
iret
imul
icebp
mov
fistp
xor
jnp
shr
bound
xor
movs
lea
popf
fidivr
fisttp
mov
lea
push
or
xchg
sar
cs
dec
cdq
popf
sti
loop
imul
mov
std
div
out
shl
mov
js
imul
call
add
enter
outs
and
and
jnp
mov
test
xchg
mov
inc
inc
popf
or
iret
mov
mov
loop
cmps
mov
xor
test
shr
xchg
shl
mov
adc
cli
mov
jb
data16
addr16
adc
pop
and
mov
dec
(bad)
daa
nop
imul
into
mov
xlat
dec
push
push
and
ret
lahf
push
jbe
pusha
sbb
ja
in
jp
mov
mov
adc
inc
ret
test
fs
int
mov
jae
jmp
dec
movs
inc
outs
lock
mov
clc
in
and
sbb
jb
xchg
xchg
ins
pop
call
push
pop
scas
leave
add
adc
ds
xor
xor
call
jmp
ins
xor
mov
mov
sub
sub
outs
dec
jnp
mov
inc
push
xchg
seta
mov
jge
push
pop
pop
push
test
lahf
sbb
adc
fimul
inc
loope
movs
lds
stc
sub
mov
xchg
push
dec
(bad)
test
call
enter
ds
inc
mov
fcom
pop
(bad)
out
sbb
out
xor
aas
scas
dec
imul
dec
sbb
dec
fs
idiv
(bad)
cli
mov
and
push
icebp
sbb
fmul
mov
xchg
ins
jecxz
adc
iret
and
adc
jb
ret
push
mov
stc
test
sub
and
stos
aam
ror
jno
cmp
pop
and
or
mov
add
mov
pusha
in
or
jle
mov
mov
pop
fnstsw
cs
add
and
push
sub
mov
mov
jbe
aam
fiadd
js
fisub
lods
push
and
(bad)
push
dec
cmp
pop
or
push
jge
sub
retf
aam
inc
pop
cmp
jmp
xchg
cmp
and
pop
lods
adc
cmp
xchg
mov
mov
xchg
leave
scas
lods
mov
or
sti
cmps
stos
jecxz
bound
outs
test
jecxz
nop
inc
shr
aam
lds
scas
les
bound
push
add
xor
jmp
jge
or
ret
mov
xor
test
or
mov
mov
in
and
pop
sbb
(bad)
jns
mov
jge
jmp
or
mov
inc
data16
inc
and
mov
mov
rol
sub
inc
or
inc
sbb
int
push
push
stos
pusha
jns
out
outs
aas
test
js
jmp
sub
sar
pop
dec
pop
stos
leave
jnp
xor
pop
or
or
cmp
mov
in
imul
daa
mov
test
fistp
fdivr
mov
sbb
add
lds
jbe
inc
test
inc
cmp
adc
cmps
dec
inc
and
cmp
fdivr
pop
adc
mov
popf
icebp
jbe
retf
dec
push
in
xor
jmp
inc
int3
test
mov
jecxz
and
clc
pop
mov
aad
inc
imul
js
(bad)
mov
inc
mov
cdq
push
mov
push
xchg
add
jb
sahf
push
inc
mov
cli
cmc
adc
das
xchg
adc
push
mov
retf
mov
jne
adc
sub
push
push
mov
push
imul
sti
test
std
out
sbb
jae
movs
mov
mov
stc
jno
add
(bad)
sbb
bound
repnz
and
pop
jg
inc
aas
bound
push
xor
(bad)
aad
cmp
pop
out
sub
ret
(bad)
sub
sbb
(bad)
addr16
outs
mov
xor
inc
mov
mov
mov
pop
push
and
std
in
inc
or
mov
out
nop
ja
or
es
data16
mov
add
pop
cwde
retf
ss
adc
imul
cwde
add
xchg
mov
cli
inc
ret
into
(bad)
adc
cmps
mov
inc
test
or
pop
lods
pop
scas
dec
inc
jne
mov
sbb
retf
bound
mov
mov
hlt
pop
cwde
sbb
push
test
fwait
je
cdq
mov
stos
cmps
push
rol
dec
stos
arpl
je
push
mov
jnp
icebp
out
arpl
repz
jmp
test
ds
repnz
xchg
adc
icebp
xchg
vpunpckhdq
pop
or
push
(bad)
push
sbb
xchg
sbb
retf
int3
sbb
xor
ds
loop
sub
scas
push
hlt
cmpxchg
adc
pushf
pop
xchg
mov
das
cmp
cmps
pop
xchg
test
lahf
sbb
cmp
inc
popf
loopne
repnz
in
jmp
mov
lea
lods
aad
mov
pop
cmp
mov
xor
shr
xor
mov
retf
in
inc
cs
adc
adc
outs
pop
adc
xchg
mov
push
xor
jo
add
and
test
xchg
outs
push
sub
cmps
sub
sub
aam
pop
and
jl
mov
cmp
cmc
sbb
push
dec
push
aas
pushf
fwait
sub
int3
daa
cmp
xchg
mov
movs
push
sbb
or
sbb
mov
outs
mov
rcl
daa
cli
repnz
mov
pop
addr16
xor
movs
ja
adc
xlat
es
jle
(bad)
movs
mov
xchg
(bad)
outs
add
and
fwait
sbb
push
mov
xor
cmp
imul
nop
(bad)
adc
imul
cmp
mov
rcl
mov
ins
repnz
jnp
stos
add
add
in
out
loopne
mov
pop
enter
xor
sti
psllq
cli
(bad)
stos
es
mov
addr16
and
pop
clc
or
jmp
je
fldenv
int3
inc
or
scas
sbb
xor
mov
xchg
fild
push
pop
inc
push
cmp
lea
sbb
add
pop
pop
adc
pop
and
pop
shr
push
sub
xor
cmp
push
mov
mov
cmp
push
(bad)
(bad)
push
movs
cmp
dec
jle
jne
or
mov
jp
stos
sahf
ret
push
(bad)
das
xor
shr
jnp
sub
cmps
inc
inc
test
jnp
rcl
jmp
jno
jae
cmps
dec
add
shr
mov
loope
jmp
jle
(bad)
push
call
enter
shl
mov
ss
mov
sbb
cs
sbb
das
in
mov
add
ds
sahf
mov
test
std
pop
or
fsub
sbb
(bad)
cmp
fstp
je
sub
shl
div
mov
js
sbb
test
and
aad
mov
ins
fwait
call
ret
inc
ins
aad
jbe
push
push
xchg
sub
test
clc
pop
and
push
mov
sub
jo
call
out
lods
bound
shr
mov
fiadd
lea
(bad)
pop
add
in
jb
sub
adc
(bad)
adc
fistp
adc
test
addr16
stos
jno
add
xchg
mov
into
test
or
mov
retf
mov
loopne
enter
popf
mov
mov
jmp
mov
outs
dec
adc
xchg
daa
aad
cld
ins
cmp
dec
push
hlt
outs
int
loope
sub
stos
lods
leave
pop
sbb
pop
xor
adc
dec
xchg
call
mov
jl
and
jle
pusha
(bad)
pop
popf
repz
movs
and
fdiv
jl
mul
addr16
ret
(bad)
jmp
loopne
jbe
rcl
jmp
jno
sbb
push
into
(bad)
push
push
fbstp
sbb
xchg
ret
shl
mov
inc
lds
sub
pop
and
jnp
out
or
mov
ret
ins
out
bound
into
mov
stos
add
mov
(bad)
out
call
push
or
xor
jbe
adc
cli
mov
call
push
jne
aaa
push
lds
in
imul
jmp
arpl
dec
sub
xor
std
or
cmc
pop
jno
pop
(bad)
mov
pop
inc
adc
(bad)
clc
adc
add
pop
retf
or
cs
cmp
pop
push
push
push
inc
fcom
(bad)
jmp
inc
push
rcr
rol
sysret
loopne
mov
sub
and
push
jmp
add
add
test
fidiv
jns
dec
in
(bad)
lea
mov
cmc
aam
ret
pop
add
aas
sub
jge
mov
lock
aam
jg
pop
aas
jbe
fcomp
jns
jl
push
mov
ret
push
mov
mov
pop
pop
xchg
in
jecxz
push
add
push
jne
dec
sub
ins
lahf
loope
pop
loopne
sti
lods
push
repnz
jae
xor
mov
cmps
jo
mov
jecxz
xchg
or
movs
loopne
xor
and
std
mov
lods
sub
nop
lock
pop
pop
fnstcw
sbb
rol
cs
dec
popa
faddp
aaa
cld
cmp
lea
pop
pusha
add
sbb
xlat
(bad)
mov
sbb
retf
and
sbb
test
addr16
or
fabs
push
in
rcr
jecxz
pop
idiv
dec
in
mov
sahf
push
lds
retf
pushf
popf
pop
popf
xchg
pushf
imul
data16
imul
xchg
pushf
pminub
cmp
stos
push
push
iret
aad
xchg
repnz
lea
outs
js
add
scas
cmp
sbb
cmp
into
pushf
int3
pop
ret
bound
jecxz
sbb
js
jecxz
xchg
add
xor
shl
and
mov
mov
cmp
dec
jecxz
jmp
es
rcr
repz
inc
adc
dec
sti
or
xlat
fwait
cwde
shl
shl
js
out
int3
pop
daa
jge
or
shl
js
inc
cmp
sub
loope
add
loopne
mov
neg
(bad)
ins
fisub
mov
shl
repz
ficomp
in
jns
inc
popf
nop
por
aas
jb
or
pop
cs
arpl
arpl
pop
stos
test
cmps
outs
rol
nop
dec
push
push
mov
sbb
cmp
sub
pop
and
addr16
sbb
and
pop
inc
or
pop
mov
stc
daa
add
mov
gs
jo
cmovns
jle
sbb
aad
in
(bad)
fdivr
cwde
xchg
stos
lock
fstp
jbe
fld
sbb
fist
ficom
out
inc
imul
cmp
cmp
in
lods
mov
cld
push
sbb
mov
cmp
mov
add
push
arpl
rcl
xchg
add
xlat
ds
add
pop
xchg
popa
loopne
repz
inc
test
adc
ret
sahf
inc
pushf
xor
repz
push
xor
cmp
mov
mov
push
xor
ins
sahf
(bad)
push
fs
xchg
test
sbb
aam
icebp
mov
xor
cli
inc
repnz
in
fwait
sbb
dec
or
jbe
add
mov
out
mov
retf
inc
pop
js
jmp
jno
push
and
jnp
aaa
mov
push
adc
mov
push
nop
jo
(bad)
ret
inc
jno
and
stos
mov
and
and
je
sbb
sub
fdivr
mov
adc
or
lods
out
cwde
xor
cs
or
or
hlt
sbb
jg
jae
hlt
xchg
mov
adc
ja
fmul
push
sbb
or
scas
or
xor
jl
mov
aam
lock
rcr
jmp
cmp
fnstenv
adc
leave
xchg
xchg
das
bnd
enter
mov
xchg
sbb
aam
xor
mov
mov
stc
mov
clc
xor
cmps
inc
test
pop
ja
adc
mov
xor
ret
inc
std
shl
stc
jbe
pop
xor
ins
push
ss
fild
retf
push
push
fidiv
cmc
pop
(bad)
push
mov
dec
popf
frstor
adc
(bad)
stc
cmc
punpckhdq
inc
sti
sbb
mov
mov
or
sbb
add
ins
ret
test
stos
es
jo
push
push
push
mov
mov
adc
jp
es
and
inc
pop
fcmovne
loop
lods
dec
repz
fs
xor
popa
adc
shl
fcom
retf
hlt
lock
sti
cli
rol
movs
jle
mov
dec
push
xor
dec
sahf
add
in
sbb
pusha
lods
inc
mov
imul
lock
ja
ret
inc
enter
jb
out
jne
jp
sbb
mov
fist
out
cwde
mov
(bad)
mov
mov
daa
add
cwde
stos
loopne
add
(bad)
push
push
mov
pop
call
mov
mov
push
repnz
inc
mov
sbb
jp
push
ins
or
cmp
add
cmp
lods
nop
repz
call
cmp
or
cwde
xor
push
adc
dec
outs
outs
mov
data16
mov
aad
stos
inc
dec
popa
pop
retf
int3
popa
in
xor
std
js
test
in
sbb
shr
imul
xor
jns
dec
jae
xlat
push
pop
push
out
fs
mov
ins
stos
movs
push
add
push
adc
sub
or
das
popa
dec
ins
loopne
add
int
daa
test
in
fs
jne
popa
cwde
es
or
push
pusha
cmp
hlt
std
push
mov
xchg
out
daa
(bad)
or
lods
out
movs
retf
int3
scas
xchg
add
je
lds
xchg
fdiv
push
lahf
movs
mov
dec
cdq
popa
enter
fst
ss
push
out
aas
jmp
pop
jmp
cmp
mov
adc
pop
sub
stos
add
aaa
movs
call
push
outs
mov
pop
pop
mov
cs
cmp
je
je
jle
repnz
scas
mov
dec
cmps
pop
shr
xchg
into
ins
pop
int3
sahf
fst
xchg
imul
push
call
out
pop
push
popf
inc
test
in
xor
push
scas
jne
out
popa
adc
imul
shr
xor
loopne
cdq
aaa
inc
jae
pop
ds
popa
cmp
xor
nop
jp
cmp
dec
movs
fdivr
out
jnp
pop
(bad)
sub
wbinvd
pop
rcr
and
jmp
inc
out
aas
cmp
sub
into
sub
je
addr16
call
mov
or
xor
sahf
add
lods
mov
iret
sbb
adc
sub
pop
push
sbb
enter
mov
jmp
jne
addr16
pop
sbb
repnz
mov
jmp
and
dec
mov
test
sbb
sti
pop
pusha
mov
(bad)
movs
(bad)
sbb
ss
push
inc
inc
fwait
loop
push
add
lds
mov
inc
jle
hlt
pop
mov
test
push
test
adc
test
dec
sub
addr16
mov
jne
cli
inc
in
sbb
ins
cmp
retf
adc
pop
jp
das
cmp
jb
loop
lock
ins
ret
mov
shr
jns
int
jmp
movs
cmc
and
push
push
inc
push
pop
cmp
rcl
scas
sbb
push
push
add
sbb
fstp
cs
or
add
or
jo
shl
aad
xchg
or
dec
mov
push
jle
aaa
loopne
in
push
push
mov
jae
sahf
test
fnstsw
popf
mul
pop
repnz
adc
out
mov
ret
push
gs
shl
je
xchg
add
and
pop
pusha
xchg
aaa
out
xchg
inc
push
pop
call
sub
adc
out
fidiv
dec
and
(bad)
mov
fstp
dec
or
inc
xor
lahf
nop
cld
xchg
das
push
lods
repz
imul
xchg
scas
ins
push
jl
or
mov
stos
push
cmp
mov
and
dec
call
arpl
lods
sbb
aad
xor
xchg
and
xor
dec
mov
dec
sbb
div
mov
into
cmp
repnz
out
dec
push
and
sar
adc
jb
xor
cli
adc
retf
push
mov
popa
adc
out
jo
imul
inc
xor
cmp
(bad)
xchg
xor
pop
jg
daa
pop
jl
out
nop
push
pushf
cmp
stc
push
sbb
dec
cmp
scas
les
mov
int3
std
retf
jecxz
test
jo
add
test
int3
jae
ins
adc
stos
sbb
cdq
and
call
dec
inc
dec
inc
xchg
jo
dec
push
aaa
retf
inc
ins
dec
add
test
ins
outs
push
iret
mov
xor
imul
add
lods
pop
mov
dec
inc
xor
cmp
es
clc
and
adc
or
push
push
jb
aaa
out
jae
xchg
pop
mov
aas
dec
out
sub
nop
xlat
push
popa
popa
not
sbb
mov
scas
cmps
mov
xchg
rol
mov
xchg
test
xchg
enter
sti
or
xchg
aas
sub
into
mov
fbld
mov
jae
and
leave
movs
xchg
mov
aam
and
xchg
pushf
(bad)
out
jb
arpl
aas
adc
test
push
and
ret
mov
sub
dec
mov
in
and
es
add
bnd
inc
iret
sub
push
push
xchg
xchg
test
aad
lods
and
jge
mov
popa
push
add
dec
xor
fcomp
retf
and
adc
jbe
js
icebp
stos
add
sub
push
pop
aam
call
xor
addr16
lock
rcr
jne
sub
scas
pop
pop
ds
mov
mov
retf
adc
sbb
jbe
daa
and
stos
out
jle
loope
aaa
xor
sbb
pop
test
pushf
(bad)
or
sub
cs
jecxz
inc
xor
fdivr
test
sbb
ret
jnp
mov
fs
das
ins
adc
loope
sti
cmp
xchg
cs
iret
in
sar
push
add
(bad)
sbb
mov
in
mov
pop
loope
lods
xchg
jo
retf
je
dec
clc
test
repnz
mov
sub
mov
daa
test
pop
jmp
scas
inc
fcom
lds
add
mov
in
inc
cmp
cmp
add
xchg
ret
(bad)
in
aad
and
mov
sub
add
jno
popa
xor
ror
mov
ret
loopne
adc
sbb
dec
int
sahf
ror
lahf
jne
jle
ins
loopne
sbb
(bad)
add
nop
(bad)
mov
cwde
cli
cmp
mov
sbb
jmp
add
retf
mov
jb
xlat
pop
shl
cmp
rol
push
sbb
sub
int3
jmp
and
(bad)
fwait
sahf
adc
xchg
aas
cmps
jecxz
test
rol
lds
into
cmp
scas
push
(bad)
aam
xor
test
frstor
fcmovnu
dec
xor
dec
sti
xchg
jb
sub
push
mov
call
pushf
retf
xchg
and
(bad)
push
fdivr
cld
sbb
or
popf
xor
sub
pop
gs
and
push
mov
aam
cmp
ret
pop
fisub
sub
xchg
and
in
enter
jb
(bad)
out
xor
int
mov
sbb
cmc
test
rcr
jle
fsubr
cmp
sbb
shl
(bad)
fnsave
or
mov
cmp
std
inc
pop
xlat
jmp
inc
or
sbb
outs
adc
mul
leave
outs
rol
je
xor
push
in
push
cmp
or
mov
inc
inc
imul
es
sbb
sar
popf
lea
pop
mov
or
shl
pusha
cld
jae
sub
sbb
aad
adc
(bad)
jbe
retf
scas
mov
cdq
xchg
inc
shl
lock
inc
xor
(bad)
popf
mov
or
xchg
or
test
adc
mov
cdq
xor
adc
xchg
xchg
push
call
cmp
adc
mov
dec
gs
arpl
push
push
mov
jg
push
xor
(bad)
mov
dec
inc
es
adc
scas
lods
ss
pop
pop
inc
push
fsubr
jb
cmp
fldcw
mov
int
(bad)
pop
sahf
cmp
and
in
hlt
pop
inc
or
dec
sub
xor
inc
and
pusha
sti
imul
push
pusha
in
and
imul
iret
lock
mov
popa
or
push
aas
mov
mov
sbb
xor
mov
fneni(8087
xor
popf
pop
test
pop
adc
clc
fstp
ja
loope
jle
int
ins
sub
fwait
cld
into
popf
jmp
inc
mov
sbb
jnp
fistp
jnp
mov
mov
pop
inc
dec
sub
push
ins
lock
dec
sbb
movs
test
add
repz
mov
push
pop
enter
sub
in
jns
mov
pusha
mov
in
and
sub
xchg
aaa
push
jno
clc
js
int
inc
jno
push
das
cli
mov
inc
cmp
stos
or
call
xchg
ins
ficomp
je
jbe
xlat
pop
cld
pop
xor
push
fwait
jge
out
retf
data16
or
and
and
inc
fdivr
adc
dec
movs
adc
and
sbb
mov
mov
fsub
loopne
jno
fwait
adc
in
call
dec
call
dec
dec
dec
xor
pop
stos
dec
or
mov
fdiv
pop
lea
ret
dec
lock
repz
jmp
daa
push
pop
outs
push
ins
arpl
ja
mul
sub
or
ror
loopne
fld
jp
mov
into
in
sbb
idiv
enter
mov
mov
(bad)
iret
pop
sar
fadd
pop
xchg
stos
pop
sbb
mov
dec
jb
inc
cmp
loop
outs
loop
out
xchg
mul
out
jmp
dec
mov
mov
sbb
inc
dec
rcr
das
sub
mov
fild
xchg
lock
adc
(bad)
pop
int
mov
daa
or
xchg
das
icebp
in
dec
ror
fisubr
jmp
inc
jbe
ss
nop
(bad)
inc
mov
ret
jp
pop
fnstsw
stos
mov
fcomp
jae
je
inc
mov
cmp
mov
popf
jne
test
inc
jle
dec
mov
retf
rcr
retf
jmp
out
dec
dec
inc
mov
in
push
and
dec
dec
enter
lods
add
out
(bad)
xor
fcom
test
sbb
pop
xchg
test
pop
pop
mov
pop
pusha
test
out
jo
or
movs
imul
push
call
push
fcom
jle
mov
push
mov
xor
ins
jae
mov
mov
fucomi
ins
popf
xor
push
rcr
les
adc
xchg
ins
movs
mov
out
xor
inc
fsub
cmps
ja
cmps
jg
jecxz
ins
sti
ficom
clc
ins
out
jl
dec
addr16
jg
jae
or
test
lea
jg
mov
sub
push
pop
jns
fldcw
fmul
dec
dec
inc
out
sbb
push
dec
les
lock
adc
je
out
adc
(bad)
and
outs
call
pop
sub
ret
int3
fld
lea
sub
arpl
push
mov
movs
call
or
inc
sahf
icebp
jne
mov
adc
shl
push
push
ja
adc
lock
cmps
mov
mov
loopne
shr
mul
or
xchg
add
popf
or
out
(bad)
out
xchg
add
xchg
fsub
push
(bad)
fistp
cwde
xor
and
and
lods
cld
fnstcw
jae
(bad)
leave
aam
je
loopne
ds
loopne
movhps
rcr
test
or
lea
xchg
fnstenv
fmul
test
out
(bad)
icebp
not
pop
mov
das
add
cmp
xor
or
fs
mov
fldcw
jmp
mov
pop
mov
into
ins
dec
sub
imul
rcl
sbb
add
pop
(bad)
popf
pop
out
adc
inc
fbstp
push
movs
inc
xchg
rcl
xor
jp
sbb
(bad)
mov
loop
jb
aad
sub
inc
cmp
push
fdivr
jge
sbb
pop
dec
stc
(bad)
ret
repnz
sar
push
pop
dec
je
xor
xchg
mov
adc
adc
add
adc
xchg
iret
cmp
retf
dec
push
pop
inc
call
(bad)
dec
(bad)
mov
and
sub
push
(bad)
jmp
mov
pop
rol
xchg
jae
test
cmp
and
mov
or
xor
jecxz
pop
jbe
sub
shl
cmc
mov
or
mov
fdivp
pop
add
sub
test
pop
or
adc
mov
inc
xchg
cmp
repz
sub
imul
mov
pop
cmps
out
ror
mov
call
out
pop
pop
shl
and
xchg
cs
test
cli
push
mov
push
(bad)
stc
ss
not
mov
leave
lock
lahf
test
dec
xlat
nop
mov
mov
pop
mov
cdq
xor
aas
jno
hlt
scas
jp
fwait
xor
daa
stos
add
add
sbb
repz
mov
int3
pushf
mov
adc
inc
pop
jmp
enter
ja
sbb
pop
cs
adc
scas
aaa
adc
push
xor
das
add
xor
cdq
not
in
mov
add
lods
js
test
push
pop
push
fs
xchg
repz
test
push
aad
add
mov
jb
ds
test
stos
push
pop
inc
push
in
int3
inc
mov
jle
addr16
xlat
lahf
loop
mov
cld
or
ins
dec
mov
pop
add
shl
scas
sub
iret
dec
push
sub
xchg
sti
mov
jle
jge
int3
ja
push
pop
jb
cdq
mov
cmps
popa
clc
push
adc
std
ficom
push
pop
lock
jbe
mov
fild
sbb
lahf
outs
ja
lahf
fcmovbe
je
add
inc
dec
mov
mov
data16
jbe
push
loope
fistp
mov
gs
or
je
cmp
jne
(bad)
or
mov
in
and
repnz
pusha
fcom
mov
pusha
jge
mov
(bad)
dec
xchg
jmp
repnz
in
sbb
jmp
loope
bound
push
jl
(bad)
jmp
rol
or
cmp
inc
in
jb
push
mov
mov
imul
or
addr16
mov
data16
xchg
(bad)
xor
out
ss
sub
xchg
jno
ror
test
int3
(bad)
add
jmp
pop
aaa
inc
or
push
(bad)
and
add
jecxz
cs
mov
sub
ror
jno
pop
jle
jmp
mov
sub
sti
ret
pop
aaa
push
pop
and
imul
xor
xchg
icebp
loope
ins
pusha
pop
pop
xor
xchg
and
je
pop
mov
aad
dec
lods
cmp
es
test
sar
movs
in
es
mov
sar
jmp
movs
ret
cld
fsub
and
ss
cmc
add
sub
push
mov
xlat
(bad)
ja
mov
xchg
dec
pop
lods
sub
fld
aas
dec
jne
jge
xor
aad
or
mov
fs
les
outs
cwde
cli
ss
test
mov
xor
push
ds
stc
mov
int3
jle
adc
dec
outs
ret
mov
sub
pop
sub
mov
mov
jmp
stos
cli
dec
sub
sbb
xor
jge
add
inc
aad
arpl
mov
retf
push
jle
cli
or
mov
jle
xchg
mov
dec
retf
push
inc
jnp
in
lods
sbb
sar
sbb
sbb
rcl
cmp
lock
xchg
rcl
push
(bad)
neg
mov
and
inc
push
stos
sbb
push
mov
mov
sbb
stc
jecxz
scas
and
test
mov
pop
or
dec
out
and
ds
lea
push
sub
cmp
or
adc
jp
or
mov
inc
pop
in
leave
cld
push
popf
inc
fcomp
lahf
int
pop
sub
lea
inc
and
leave
or
push
push
arpl
enter
xor
pusha
fsubr
les
mov
mov
in
inc
jno
cmps
movs
and
movs
enter
imul
test
sub
test
scas
loopne
sub
and
icebp
add
icebp
imul
pusha
dec
pop
shr
stos
cs
sub
cmc
scas
xor
lds
pop
btr
xchg
jae
xor
xor
adc
push
out
aam
pop
aas
jge
cmps
add
push
or
jmp
xor
mov
sti
xor
js
mov
sub
test
mov
sub
mov
ds
jne
int3
popa
cmp
sbb
and
retf
fld
or
mov
push
ins
into
(bad)
jnp
rol
mov
xchg
dec
cdq
ins
inc
xchg
scas
push
push
out
cdq
mov
mov
jb
xchg
jmp
psrlq
cmp
lods
cdq
(bad)
push
in
add
sbb
inc
dec
xor
inc
or
and
push
iret
jge
mov
mov
mov
out
rcl
xor
cmp
mov
fcomi
mov
not
out
daa
sub
push
mov
sub
push
xchg
(bad)
mov
popf
and
int3
cmp
sti
adc
dec
mov
scas
fistp
dec
adc
cwde
fimul
cmp
popf
xchg
pop
fxch
push
out
and
out
daa
cmp
sub
cmp
mov
pop
or
cmp
lods
push
int
pop
test
popf
mov
out
out
pop
push
sbb
ficomp
(bad)
out
mov
pop
ins
setp
pop
xchg
or
and
scas
mul
rol
and
sahf
sub
mov
test
adc
icebp
mov
mov
out
sub
jo
test
repz
cmps
out
mov
call
dec
jbe
and
dec
repnz
sub
daa
rcl
movs
adc
stos
xchg
xchg
mov
dec
ret
outs
scas
pop
out
repnz
push
xchg
fnstsw
test
daa
int
mov
mov
adc
in
mov
in
sbb
inc
inc
mov
push
sub
push
fwait
cwde
pop
cs
shl
sti
xchg
push
push
and
in
jl
inc
pop
retf
aas
cmc
jge
(bad)
inc
lock
or
pop
jl
jnp
jns
shl
loope
dec
js
imul
sbb
pop
mov
out
outs
push
fs
jmp
cmp
imul
movs
push
imul
dec
or
push
scas
movs
inc
mov
test
jo
loope
aam
xabort
mov
ret
hlt
je
cmps
push
mov
mov
and
(bad)
pop
movs
add
or
int
jbe
or
and
shl
mov
pop
icebp
lea
scas
push
retf
imul
adc
dec
retf
push
fnstsw
iret
(bad)
(bad)
sar
lods
xchg
push
xchg
sbb
push
ja
test
mov
and
ficomp
out
dec
mov
fiadd
push
adc
std
dec
movs
mov
or
fstp
and
call
leave
mov
shl
or
imul
pop
push
mov
inc
lock
xchg
dec
xchg
push
lods
inc
xor
int
rol
cmps
mov
cmp
mov
mov
mov
dec
mov
pop
fsubr
add
xchg
enter
data16
scas
push
mov
ja
push
aad
pop
in
gs
rcr
or
outs
pop
shl
mov
push
pop
or
and
fld
xor
xchg
leave
cmp
xchg
pop
sub
xor
jne
inc
call
shr
imul
dec
push
xchg
outs
int
inc
push
cld
dec
jnp
add
in
sbb
stos
fistp
add
test
push
in
leave
jnp
enter
es
ret
and
ret
dec
sub
mov
mov
ds
sti
repnz
shl
and
sub
jnp
dec
jl
add
es
adc
das
imul
mov
mov
dec
ss
sbb
loope
popa
or
sbb
das
and
mov
xor
pop
fst
xor
mov
out
lds
xor
hlt
aad
mov
push
mov
out
repnz
int3
mov
add
inc
jno
mov
and
dec
dec
mov
mov
in
aas
loop
dec
ror
fld
adc
loope
adc
das
mov
push
sub
and
out
pop
scas
mov
outs
int
xor
jp
sahf
xchg
jno
cmp
ins
in
lea
mov
test
push
jl
test
pop
retf
fldenv
push
xchg
mov
and
imul
add
add
ret
cwde
idiv
xchg
sahf
or
cmp
sbb
dec
daa
xchg
sub
sub
mov
sbb
icebp
push
iret
mov
ins
loope
stc
mov
(bad)
call
lea
inc
mov
fst
daa
cmps
stos
call
inc
pop
adc
or
mov
push
scas
(bad)
pop
fs
cwd
sbb
(bad)
icebp
ins
mov
mov
(bad)
mov
bnd
xchg
aaa
int3
pop
outs
pop
daa
aam
rol
add
mov
loop
js
jge
mov
fwait
xchg
push
xor
aam
test
les
mov
xchg
inc
inc
and
mov
sub
cli
adc
sbb
shl
push
and
data16
adc
cmp
dec
test
movs
pop
aas
push
dec
mov
push
mov
outs
into
(bad)
fadd
sub
call
(bad)
mov
jl
adc
dec
pop
test
xlat
aam
int
dec
(bad)
aad
mov
movs
cs
cmps
lock
js
cmp
out
sti
or
mov
stos
pop
fwait
pusha
in
mov
movs
popf
pop
es
cs
inc
push
frstor
fs
dec
hlt
pop
mov
add
repz
or
test
add
lock
or
call
das
mov
out
dec
ret
xchg
xor
pop
test
into
and
mov
fcom
jg
sbb
mov
xchg
ret
in
jnp
fldenv
pushf
jbe
jle
stos
jg
fistp
xchg
jle
sahf
mov
shl
hlt
mov
sar
push
movs
dec
shl
xor
sbb
daa
clc
aas
and
les
mov
(bad)
cmp
imul
sbb
sub
repz
jecxz
jmp
push
hlt
xor
xlat
jg
pop
test
sub
call
and
mov
ins
inc
out
stos
push
sub
ret
out
movs
xor
movs
bound
gs
pop
xchg
and
push
jp
jge
push
mov
in
push
and
cwde
jmp
mov
mov
cld
stc
xchg
jmp
pop
and
int3
add
jmp
nop
add
push
add
sub
ret
lea
dec
fxch
and
outs
nop
scas
xchg
popa
retf
pop
sub
mov
cmp
cs
mov
xchg
and
cmp
cdq
(bad)
adc
jp
mov
push
mov
shl
leave
mov
push
jne
movs
(bad)
test
mov
pop
pushf
sbb
hlt
mov
inc
loopne
xchg
mov
mov
xor
mov
jmp
jecxz
pop
fnstcw
(bad)
popa
dec
enter
or
xor
cmp
loop
jmp
call
out
xchg
(bad)
push
(bad)
xchg
loopne
and
bound
jnp
pop
mov
adc
and
adc
ins
daa
add
sbb
in
xchg
stos
shl
mov
outs
out
daa
xor
in
inc
loop
push
sahf
pop
sub
addr16
mov
push
xor
mov
sub
xchg
xlat
stos
adc
enter
mov
xchg
cmps
(bad)
xor
popa
sbb
dec
loop
out
imul
inc
pop
mov
pop
arpl
pop
inc
add
adc
jle
outs
inc
pop
inc
push
inc
stc
add
jnp
or
push
mov
mov
gs
in
rcr
add
das
neg
cdq
cwde
shl
xchg
in
push
gs
xchg
and
pop
or
in
adc
aaa
std
mov
xchg
mov
jae
test
inc
adc
adc
dec
xchg
movs
add
mov
add
cmp
int
repz
outs
loopne
sub
(bad)
fs
rcr
adc
mov
into
push
add
and
sub
xchg
xchg
sbb
inc
test
mov
xchg
pusha
xor
add
mov
xchg
cmp
mov
push
push
pop
push
test
scas
jge
push
dec
into
and
adc
pop
lods
retf
mov
ret
test
pop
es
add
jnp
jle
stc
dec
inc
repnz
xor
test
mov
sub
inc
inc
lahf
ficom
and
bound
mov
pop
test
jmp
pusha
fcomp
mov
push
lods
fs
dec
sbb
les
call
sub
sahf
ss
dec
inc
mov
jno
mov
or
dec
outs
xor
icebp
ss
pop
jno
rcl
cmc
mov
cmp
in
mov
mov
cmp
mov
jb
jl
push
outs
sbb
ror
xchg
arpl
scas
add
jo
dec
leave
or
fild
push
push
xchg
mov
push
sbb
cmp
add
xor
fucom
sub
aad
popf
add
xor
pop
sub
add
and
and
imul
or
inc
or
mov
xchg
push
es
inc
xor
mov
mov
mov
mov
data16
mov
clc
jle
sbb
lahf
dec
les
arpl
aad
(bad)
cmp
jb
addr16
out
push
and
call
sub
pop
dec
ret
adc
cmc
data16
into
and
in
scas
nop
imul
cmp
aas
dec
pop
adc
mov
mov
push
(bad)
xchg
jbe
rol
add
cmp
fld
cli
cdq
add
push
fdiv
gs
xor
outs
je
push
add
sbb
dec
dec
je
dec
mov
push
push
aad
mov
pop
sub
push
icebp
(bad)
in
mov
test
fisubr
xchg
out
enter
jbe
das
nop
and
and
pushf
jecxz
in
out
movs
bound
adc
push
(bad)
jmp
xchg
jge
push
in
sahf
mov
(bad)
retf
pop
aam
icebp
ins
in
ins
sub
sbb
adc
push
ss
and
dec
cld
shr
(bad)
and
lock
mov
and
mov
sub
ret
mov
dec
jecxz
enter
pop
dec
hlt
(bad)
mov
test
sbb
outs
sub
or
sbb
dec
pop
gs
shr
inc
add
loop
in
test
aaa
inc
aas
pusha
mov
mov
push
push
jmp
(bad)
rcr
fdivr
sahf
fcomp
pop
out
jb
inc
push
daa
pop
jae
pop
je
inc
sub
inc
sub
cld
test
dec
les
sbb
adc
jge
push
cmp
pop
not
test
or
cli
mov
popa
mov
fdiv
xor
push
push
mov
test
scas
je
nop
out
sbb
jns
inc
stos
xchg
add
stos
lahf
in
idiv
mov
cwde
lahf
dec
mov
stc
fild
sbb
icebp
mov
and
pop
cmp
add
sbb
rol
jmp
sub
rcr
or
gs
lock
sahf
fisub
and
cmc
push
mov
stos
es
xchg
(bad)
sbb
enter
add
sbb
jecxz
dec
sub
mov
js
jge
push
mov
mov
(bad)
jo
sbb
xor
mov
mov
or
xchg
mov
movs
test
xchg
(bad)
loopne
or
push
and
pop
fsubr
in
or
lods
rcl
jnp
rcl
hlt
mov
adc
pop
pop
imul
mov
dec
xchg
xchg
sbb
pusha
pop
adc
gs
push
fld
jg
fidivr
or
inc
shl
push
push
cmp
ret
cwde
mov
addr16
pop
sahf
cdq
jae
pop
test
cmps
in
push
loopne
push
sar
ret
cmp
jo
pop
and
pushw
inc
push
pop
daa
mov
lea
cmp
ss
dec
fwait
adc
dec
(bad)
movs
xchg
jbe
inc
idiv
iret
call
pop
lods
shr
xor
push
fst
leave
jg
nop
loop
outs
out
push
retf
xor
add
mov
mov
stc
jne
retf
fcompp
mov
cwde
inc
jb
les
clc
loopne
cmp
cs
int
(bad)
cmps
loopne
xor
fcom
scas
(bad)
gs
mov
sub
fdivr
mov
mov
push
jg
jae
test
push
sbb
inc
int3
pusha
or
in
arpl
fbstp
and
push
out
sub
mov
jae
push
push
je
fiadd
mov
retf
fst
pushf
add
push
pop
pop
(bad)
icebp
mov
inc
lods
arpl
cmp
dec
in
sbb
int
adc
les
cli
mov
or
ret
xor
lods
inc
pop
cmp
push
cmp
lods
test
bound
vpunpckhdq
dec
mov
lods
mov
dec
mov
xor
hlt
pop
je
in
popa
push
mov
jne
and
mov
xor
mov
pop
mov
clc
mov
lods
push
cmps
(bad)
(bad)
popa
fbstp
ficomp
test
int
bound
xor
lea
and
push
push
sub
(bad)
adc
out
xchg
sub
pusha
or
pop
lahf
cdq
ss
mov
push
jne
mov
adc
int3
dec
mov
pop
imul
aam
aam
or
adc
test
xchg
jno
or
cmp
push
(bad)
in
mov
cmp
jle
rcr
cmps
pop
mov
sbb
inc
aaa
in
mov
test
dec
jecxz
jl
neg
sbb
or
(bad)
ins
(bad)
add
sti
jecxz
jecxz
cmps
mov
push
inc
sub
sub
or
inc
or
pop
fst
call
add
mov
mov
inc
mul
ds
movs
xchg
jmp
jnp
jmp
sbb
add
lock
adc
loopne
jo
jmp
xchg
xchg
fsubr
sbb
mov
movs
js
cld
sub
pop
imul
mov
mov
ds
xchg
shl
rcl
mov
cmp
jns
ds
xor
(bad)
aas
xchg
mov
int
xchg
cmp
dec
jp
fadd
imul
test
push
pusha
mov
sbb
cld
pop
data16
inc
repz
cmp
push
std
inc
enter
lahf
in
xchg
pop
or
xchg
cli
loopne
or
cmp
xchg
and
and
push
dec
je
cmp
das
mov
movs
xchg
scas
cld
add
cmp
stos
enter
lea
jmp
xor
fbld
push
ret
stos
clc
add
push
aas
lods
(bad)
jo
ins
scas
shl
into
pop
cmp
push
inc
adc
jne
popa
shr
or
xor
iret
jecxz
out
mov
call
aas
aaa
xor
jmp
out
sahf
ja
in
inc
add
dec
or
pop
nop
call
or
and
cmp
iret
arpl
out
xor
fsubrp
inc
(bad)
scas
dec
mov
hlt
push
outs
xchg
(bad)
xor
cmp
cs
sub
mov
mov
sahf
imul
idiv
js
rol
shl
ins
into
cmp
stc
fsub
xor
add
dec
mov
jae
stc
xchg
dec
clc
(bad)
and
int3
mov
js
mov
dec
cs
lahf
cmp
cs
in
cwde
dec
ja
pop
clc
(bad)
push
cmp
jle
outs
nop
add
int
jmp
cld
jle
or
inc
pop
xchg
pop
imul
jae
xchg
dec
adc
or
inc
sahf
cdq
push
(bad)
out
loope
test
rcr
cmp
pop
xchg
xchg
mov
arpl
xchg
jb
aaa
int
push
call
fisttp
ret
(bad)
and
and
and
pop
xlat
cli
xchg
inc
aad
mov
inc
sub
adc
je
mov
sar
adc
imul
mov
movs
xchg
lahf
call
hlt
inc
dec
das
jnp
pop
neg
pop
adc
adc
je
pop
jno
push
into
test
in
int
mov
add
(bad)
pop
sbb
sub
add
sub
sbb
dec
out
pop
cli
mov
jmp
sub
jge
add
cmp
stos
or
(bad)
int3
fisub
sbb
push
jmp
push
fsub
mov
in
adc
popa
push
call
fcom
shr
cmp
pop
sub
cwde
pop
inc
adc
inc
jmp
and
and
call
aas
inc
add
mov
cli
loope
arpl
mov
imul
inc
lds
add
add
out
pop
jl
fild
adc
mov
cmps
dec
retf
xor
jp
and
mov
addr16
jmp
and
aad
repz
jp
(bad)
cmc
(bad)
(bad)
clc
xor
push
dec
xchg
in
xchg
push
in
cs
mov
sahf
je
sbb
push
sub
xor
cwde
imul
mov
repz
mov
enter
inc
xor
xchg
mov
xchg
mov
and
xor
loop
aas
or
cmp
lea
push
dec
mov
ds
mov
adc
mov
icebp
dec
aas
rol
jle
sub
mov
pusha
outs
xchg
test
hlt
fwait
pop
push
in
jg
mov
sti
push
and
test
(bad)
in
pop
lea
stos
mov
lahf
sti
mov
imul
jns
mov
out
fwait
add
jb
repz
add
mov
and
(bad)
rcl
ds
fmul
(bad)
movs
out
lahf
in
add
dec
mov
in
cmp
pop
call
dec
push
xchg
dec
arpl
adc
mov
rol
mov
xor
fs
push
test
daa
pop
test
cld
lods
pop
jmp
add
dec
imul
mov
adc
mov
pop
mov
xchg
inc
push
loop
jmp
in
std
jae
out
test
mov
sar
mov
mov
xor
cmps
cdq
push
ins
fs
data16
enter
outs
adc
shl
xchg
and
scas
dec
or
push
call
dec
(bad)
xchg
data16
xlat
dec
or
cmp
ds
push
pop
fs
xchg
inc
and
test
mov
jns
pushf
lods
adc
jecxz
sub
pop
push
add
ficom
das
in
call
std
and
and
pop
pushf
mov
mov
ins
pop
or
xchg
pop
and
inc
clc
pusha
fldcw
cwde
repnz
cmps
jne
popf
jns
mov
sti
les
xor
pop
mov
push
cmp
iret
aad
cmps
popa
pop
push
clc
movs
idiv
mov
sbb
mov
xchg
inc
jg
mov
mov
je
clc
pop
aad
jp
mov
pop
or
inc
clc
aaa
in
mov
call
fild
mov
jb
stc
pusha
outs
sti
jmp
add
stc
xchg
dec
xor
xchg
jmp
loop
out
jne
in
fbld
movs
test
and
mov
ret
daa
pop
jmp
(bad)
leave
ja
les
push
gs
fcom
xor
out
xlat
jl
pop
sbb
adc
movs
mov
jge
mov
aas
out
jecxz
jmp
push
dec
pop
outs
pop
(bad)
mov
ds
pop
ins
sti
in
sub
fwait
out
lock
sbb
inc
push
into
arpl
(bad)
mov
nop
mov
icebp
out
(bad)
and
inc
mov
adc
out
jns
jae
std
lock
call
jl
into
jle
test
cmc
dec
rcr
popa
shl
dec
sahf
pop
fnsave
and
cmp
and
es
sub
and
xchg
inc
sbb
xchg
pop
aam
mov
push
pop
fwait
lock
adc
sub
cmc
jno
mov
repz
mov
cli
xchg
mov
sar
mov
sti
push
jle
sub
cmp
cmps
jle
jno
inc
daa
rol
les
in
xchg
mov
fild
ret
mov
outs
stos
mov
cmps
aam
fs
int3
adc
sbb
mov
sub
mov
cmp
jmp
mov
imul
sbb
sbb
cmc
mov
add
jae
jecxz
out
mov
in
ds
lods
xchg
mov
aaa
mov
sar
jmp
adc
shl
std
push
ficomp
ret
out
cmp
pushf
push
mov
pop
mov
mov
addr16
int3
xor
cdq
inc
prefetchnta
sbb
sbb
jle
inc
xchg
sbb
shl
mov
stos
fistp
fs
cli
fcomp
xor
pusha
call
jb
sbb
mov
sbb
cmp
mov
mov
cmp
scas
add
daa
ret
loope
ret
xor
jecxz
dec
pop
out
add
add
cmp
dec
retf
cwde
push
mov
sub
xor
dec
(bad)
repz
das
mov
std
push
outs
xchg
or
popa
pop
daa
ja
mov
retf
shr
mov
mov
and
retf
cwde
(bad)
dec
loope
das
and
push
fnstenv
out
inc
aas
retf
jnp
mov
jne
icebp
xor
(bad)
shl
or
cmp
and
xor
and
xchg
mov
mov
sbb
daa
pop
sub
inc
pop
sbb
jge
push
pop
xchg
lock
jge
addr16
adc
xchg
shr
xlat
jmpw
xchg
push
push
addr16
addr16
cmp
test
loopne
fnstsw
dec
and
mov
dec
enter
sub
ss
jmp
hlt
cmp
enter
jle
pusha
or
fwait
sub
fiadd
into
in
dec
clc
mov
mov
imul
or
outs
scas
dec
out
adc
or
sbb
bswap
xor
xchg
mov
ja
and
fnsave
add
fld
pop
push
icebp
xlat
jge
adc
test
jo
pop
pop
pop
cmp
les
ins
mov
inc
mov
jmp
in
out
sub
jo
in
mov
cdq
sub
(bad)
jmp
sub
push
outs
push
mov
sub
mov
jbe
xor
pop
dec
dec
xor
in
mov
push
cmp
pop
push
(bad)
sti
xchg
push
sbb
cwde
cmp
sbb
dec
std
dec
retf
mov
xor
sub
jmp
sbb
dec
fild
jns
add
adc
pop
pop
adc
dec
dec
or
push
add
xor
jl
nop
push
or
dec
fdivr
pop
jecxz
movs
jo
lock
je
loop
cmp
sbb
ds
movs
push
mov
clc
sub
ja
jno
bound
(bad)
stc
loopne
sub
and
cmc
dec
push
or
and
pop
xchg
cs
mov
jb
sahf
xor
retf
bnd
cli
iret
ret
retf
js
(bad)
imul
rol
adc
mov
loopne
movs
jmp
xor
call
pop
add
jmp
xchg
jg
into
lock
xchg
icebp
fsubrp
mov
mov
test
enter
test
add
test
ins
cmp
ret
in
inc
imul
in
cdq
aad
pop
add
movs
sub
sub
cmp
or
loop
(bad)
test
inc
or
jb
jb
scas
mov
mov
sbb
cld
arpl
loopne
adc
jo
inc
xor
cdq
push
adc
mov
pusha
pop
push
jmp
add
or
pop
dec
mov
int
mov
and
pop
pop
popf
fcomp
cmps
mov
xor
and
repz
push
cmc
aam
clc
jo
out
dec
shr
ins
call
popa
inc
aaa
xor
inc
and
jb
cmps
fisttp
push
in
ds
adc
mov
(bad)
rcl
arpl
jns
mov
push
adc
aam
popa
mov
and
dec
hlt
xchg
jmp
sbb
or
fsub
(bad)
mov
sub
jb
(bad)
mov
adc
adc
cld
mov
(bad)
mov
cmp
mov
bound
sbb
pop
pop
fsub
repz
inc
xor
cmp
test
std
ins
add
mov
push
je
aaa
xor
sbb
call
lods
cmps
cmp
loopne
test
test
jle
inc
or
fimul
test
xor
sbb
jae
or
icebp
push
jne
loop
xor
jno
add
mov
stc
cmps
aad
addr16
mov
lds
int
cld
dec
or
dec
dec
arpl
lahf
frstor
aad
call
xor
jmp
sar
(bad)
loopne
mov
jae
fisub
movs
and
jno
pop
fwait
cmps
mov
(bad)
cmp
cmp
mov
push
cwde
sbb
(bad)
fdiv
stos
aas
push
push
sbb
pop
pop
(bad)
push
mov
jecxz
ror
sub
leave
mov
mov
mov
mov
inc
aad
add
inc
mov
dec
out
push
(bad)
fnstenv
xlat
adc
in
test
dec
mov
leave
add
xlat
xchg
mov
int3
out
jae
cmps
test
scas
xor
jae
ss
push
rcr
mov
xchg
ja
cmp
arpl
lea
fsubr
fs
or
mov
lods
inc
mov
scas
nop
add
test
ins
stos
pop
(bad)
jmp
sbb
(bad)
sbb
push
sbb
sti
xchg
add
jne
inc
loop
push
sar
loopne
jns
inc
sbb
sbb
pop
sbb
jns
(bad)
mov
pop
das
out
js
addr16
cmp
pop
mov
ret
retf
inc
loope
fadd
jb
popa
xor
std
or
push
push
xor
jno
dec
aas
sahf
mov
inc
aad
bound
rcr
fldenv
fisubr
mov
iret
sbb
push
xchg
mov
dec
int
push
sbb
jne
dec
rcl
mov
mov
adc
mov
pop
imul
push
xchg
lods
push
add
je
pop
shr
cmp
xor
stos
frstor
jge
inc
cs
ins
test
leave
cmc
test
jmp
aad
test
fstp
jmp
pop
scas
fwait
push
out
aas
jg
pop
jns
call
inc
and
cmp
xor
and
inc
fnsave
(bad)
fdivr
pop
lea
mov
push
dec
dec
cmp
stos
ja
out
xchg
call
or
push
sub
cmps
xchg
clc
pop
aas
jmp
outs
(bad)
pop
xlat
ds
lea
out
mov
dec
inc
or
mov
push
sub
(bad)
sub
sbb
scas
or
stos
or
lods
mov
imul
shl
mov
stos
shr
outs
fcom
pop
lea
packuswb
push
ds
sti
test
add
loopne
adc
mov
popf
cmp
xor
cmp
jmp
inc
pop
loop
jmp
(bad)
clc
inc
mov
pop
mov
dec
mov
sub
sar
movs
pop
jne
or
or
test
xor
xchg
ds
xchg
outs
or
mov
and
inc
xchg
fmul
and
jo
ins
mov
in
imul
jecxz
push
popf
jg
jl
push
mov
mov
dec
mov
aaa
mov
hlt
mov
mov
addr16
ja
stos
jne
sub
clc
or
sahf
jmp
pop
mov
inc
cli
jmp
outs
cmp
cmp
shl
push
fwait
out
jge
xor
push
call
dec
dec
mov
fild
adc
push
pop
push
loop
jns
stos
xchg
or
push
inc
or
xchg
mov
fmul
es
jae
rcl
jg
aam
ficomp
aaa
call
scas
es
pop
cs
mov
mov
repz
sar
dec
iret
push
out
dec
mov
sub
mov
int
loop
inc
jmp
or
cmp
inc
ficomp
jb
xor
jl
das
dec
mov
sbb
cs
test
inc
push
xor
cli
stc
or
gs
je
inc
or
lea
mov
rcr
cmp
fsubp
pushf
xor
jmp
into
(bad)
cld
or
jne
imul
cmp
loope
dec
mov
xchg
dec
test
lods
shr
xlat
mov
aaa
cli
daa
int3
out
add
sbb
sub
arpl
out
mov
fcmovnbe
mov
aaa
cwde
ud2
sub
sub
aas
aam
jno
aam
inc
std
mov
fcom
ds
test
je
jmp
or
mov
jne
xor
ja
fist
mov
jmp
out
xor
in
inc
loope
pop
xor
jle
dec
adc
xlat
fnsave
jne
jg
and
dec
dec
bound
(bad)
ffree
jae
adc
mov
add
sti
out
push
sub
inc
add
jne
leave
iret
jnp
js
lods
pop
jae
mov
shr
popf
xchg
mov
inc
in
push
mov
rcr
adc
sub
movs
xor
xchg
fwait
aaa
out
push
mov
jge
fwait
mov
ins
xchg
cmp
sbb
mov
dec
dec
dec
repz
xor
in
int3
jb
std
outs
pop
dec
push
and
xchg
aam
adc
xchg
test
cld
inc
test
stc
cmp
(bad)
loopne
mov
adc
lods
shl
and
mov
je
fdivr
ins
popf
inc
sbb
ins
lahf
dec
sbb
cdq
inc
aam
dec
xchg
out
pushf
pop
adc
sbb
ror
test
popa
xchg
sub
jg
retf
push
mov
mov
push
mov
adc
jle
call
dec
test
nop
sbb
ja
and
sub
pusha
pushf
aad
xor
mov
sub
fdivr
and
cmp
push
xor
ret
fs
mov
xchg
jmp
js
mov
dec
jmp
add
mov
ins
sbb
hlt
add
or
fs
sbb
push
pop
retf
not
push
imul
push
and
nop
inc
fsub
or
sbb
xchg
fwait
cli
sar
into
jb
cwde
jp
(bad)
cmp
mov
ds
frstor
ficom
daa
mov
imul
lods
add
or
jecxz
jl
mov
(bad)
in
jge
push
retf
ffreep
xchg
(bad)
push
adc
gs
mul
mov
outs
(bad)
dec
xor
cwde
repz
xchg
inc
pop
pop
push
cwde
nop
test
in
lahf
mov
mov
jmp
pop
test
push
mov
loopne
icebp
arpl
sti
test
pop
push
add
imul
and
cmp
ret
pusha
jp
xchg
ins
push
and
fst
sub
adc
push
mov
inc
in
(bad)
cwde
loop
enter
hlt
pop
out
(bad)
(bad)
xchg
fsubr
aad
and
lea
and
xlat
mov
mov
mov
lock
dec
or
mov
jmp
aam
xchg
(bad)
cmc
jmp
xor
xor
jle
and
rol
jno
(bad)
mov
es
aaa
wrmsr
cdq
xchg
jmp
mov
mov
inc
sub
repnz
or
hlt
dec
and
inc
retf
jnp
mov
push
pop
out
and
stc
fdiv
retf
jmp
sub
pop
imul
push
add
and
cmp
add
test
dec
jo
jp
jp
cwde
pop
ins
sub
(bad)
mov
pushf
bnd
scas
retf
jno
jecxz
nop
pop
push
movs
data16
outs
addr16
xchg
jne
loope
jns
xchg
retf
outs
sbb
lds
lods
pop
or
mov
in
scas
ins
icebp
fld
movs
dec
mov
es
xchg
(bad)
fs
pop
jb
sbb
push
mov
and
inc
push
cmp
sbb
xchg
inc
pop
gs
pop
aad
inc
xchg
mov
push
call
mov
scas
sub
out
push
cwde
push
stc
mov
pop
pop
dec
mov
fsub
xchg
rol
dec
xchg
fmul
xor
push
fist
xchg
adc
or
js
push
push
stos
adc
and
data16
or
icebp
fld
jecxz
std
pop
mov
bound
xchg
es
pop
fcmovu
mov
xor
aas
(bad)
xchg
jmp
push
(bad)
xor
mov
and
adc
je
pop
(bad)
mov
push
dec
sub
es
cmp
out
aaa
fdiv
adc
cwde
inc
add
pop
mov
push
(bad)
jbe
adc
cld
jns
push
ss
jge
sti
mov
jl
stos
fisub
sahf
jg
xor
or
adc
sub
and
loopne
es
dec
xchg
mov
mov
aad
and
popa
cmps
fnstcw
(bad)
pop
push
xchg
xchg
pop
stc
outs
pop
and
(bad)
cli
cwde
and
movs
mov
retf
sub
loop
mov
std
mov
dec
push
arpl
add
or
rcl
loop
mov
loopne
push
out
popa
adc
stos
add
adc
mov
repz
pop
mov
push
(bad)
in
cmp
cs
add
xchg
pop
push
jmp
pop
push
mov
(bad)
mov
test
repnz
test
stos
(bad)
pop
and
das
repnz
repz
jg
(bad)
jae
out
sub
xor
jl
fsub
ret
push
sub
push
sbb
repz
ret
sub
ret
ja
test
xor
mov
les
movs
in
out
data16
sub
mov
xor
mov
cmp
mov
mov
mov
jo
cmps
pusha
int
aad
loopne
pushf
add
lods
dec
inc
(bad)
jmp
(bad)
pop
repnz
movs
dec
sub
xor
sbb
pop
ror
(bad)
mov
add
mov
outs
push
sbb
jmp
ds
retf
xor
adc
outs
push
stos
push
jmp
pop
(bad)
ins
inc
movs
add
add
stos
jo
add
jecxz
rcr
fdiv
inc
(bad)
mov
jl
outs
nop
xor
popf
push
lods
ds
div
dec
mov
or
outs
xor
sbb
push
or
push
aaa
jno
aam
jns
jno
jmp
aaa
jae
or
aas
retf
aaa
je
popa
cmp
push
push
rol
xchg
int3
fbld
mov
pop
cmp
cmp
es
or
hlt
bound
cmp
cmp
out
rol
ds
cmp
test
fwait
jns
out
xlat
mov
pushf
loopne
test
mov
aas
repz
cmc
inc
(bad)
cmps
ret
sub
lds
test
and
pop
mov
in
call
xchg
adc
push
sbb
pop
mov
mov
mov
mov
jnp
dec
xor
div
dec
jge
push
xchg
cld
stos
jecxz
lods
test
ins
lods
sub
pushw
jo
repz
push
jmp
xor
push
mov
cmp
cwde
enter
mov
jge
mov
(bad)
call
xchg
add
mov
mov
lahf
icebp
dec
je
inc
cmps
push
pop
ror
(bad)
(bad)
and
adc
mov
mov
push
(bad)
cld
stos
ss
jg
mov
pop
fistp
push
call
in
rol
add
out
xchg
fsubrp
mov
mov
adc
xlat
cmps
clc
rol
in
and
mov
or
jb
pushf
inc
(bad)
es
push
sahf
stos
movs
sar
push
push
loope
inc
jl
movs
mov
pop
out
hlt
mov
in
sahf
cs
das
gs
xchg
pop
pop
add
cwde
icebp
cli
xchg
es
(bad)
or
imul
cld
jle
cmps
stc
cmp
push
mov
sub
sbb
inc
and
add
push
add
and
rol
xchg
(bad)
mov
cmps
sub
jne
fidiv
cwde
add
ror
not
sub
adc
and
setb
test
(bad)
fdivr
into
and
(bad)
loopne
rol
cwde
lds
pop
call
dec
pop
fldl2t
rcl
mov
mov
add
inc
dec
and
sbb
int
jmp
das
xor
push
xor
push
sbb
movs
jnp
fstp
std
mov
(bad)
cmp
div
(bad)
in
sbb
bound
fwait
leave
cmp
imul
fimul
cld
jae
movs
push
dec
xchg
sbb
jmp
loopne
fiadd
xchg
and
dec
or
sbb
cmp
shr
in
mov
popf
mov
xor
mov
fsub
sbb
ror
gs
mov
fnstcw
push
and
jb
jne
mov
mov
call
lods
mov
jmp
lods
mov
ins
std
fwait
mov
and
loop
inc
ins
jp
dec
sub
xchg
jne
outs
mov
aaa
jno
cmp
and
cmp
cmp
sub
js
mov
push
or
mov
call
or
sbb
sub
aaa
lahf
cmp
push
adc
or
mov
sub
pusha
jmp
add
pushf
and
push
or
or
add
or
lods
xor
popf
fimul
int
sbb
add
xchg
push
mov
cdq
int3
test
xchg
addr16
pop
xchg
sbb
rol
mov
add
(bad)
aas
add
and
fsubr
dec
arpl
mul
sbb
jmp
pop
add
std
inc
pop
push
and
jge
jmp
ins
pop
jecxz
pop
pusha
jp
dec
iret
lds
cli
dec
ins
outs
mov
repnz
adc
pop
push
pop
ss
aas
pop
adc
shl
mov
loopne
xchg
iret
xchg
les
aam
pop
or
fdivr
xchg
push
jge
sbb
inc
xchg
adc
cmp
mov
pop
lfs
imul
outs
dec
jge
test
sti
mov
mov
cmc
push
sub
retf
push
cwde
fld
jnp
stc
cmps
mov
push
adc
and
ins
mov
cmps
dec
shl
fs
sbb
sti
hlt
mov
(bad)
sti
sbb
inc
and
pop
sub
mov
adc
jo
push
xchg
jne
es
pop
inc
hlt
into
and
push
sbb
add
add
fisttp
mov
dec
inc
add
add
and
push
push
stos
(bad)
(bad)
dec
ficom
xchg
test
dec
fstp
mov
xchg
pushf
loope
jno
cdq
call
fadd
loop
add
mov
ds
jb
push
std
(bad)
js
mov
(bad)
in
push
popa
mov
sti
int3
push
clc
std
pop
pop
and
js
jecxz
fidivr
push
(bad)
outs
loope
fwait
mov
cdq
into
aam
pop
inc
fcom
mov
mov
sti
push
aaa
fwait
inc
outs
popf
aaa
pop
mul
test
std
idiv
fwait
sub
pop
push
mov
jns
inc
xor
and
mov
jg
out
movs
mov
(bad)
out
pop
pop
mov
out
aas
and
pop
ret
jge
sub
mov
addr16
out
jb
sbb
jbe
and
cmp
pop
mov
xchg
outs
and
js
lahf
in
(bad)
jle
lock
xor
(bad)
mov
jns
das
mov
jae
mov
lahf
dec
fistp
add
mov
add
sub
lock
in
adc
and
or
xchg
mov
dec
rcl
inc
mov
pop
pop
loop
pop
ins
in
jmp
xor
fndisi(8087
add
dec
mov
rcl
jmp
push
arpl
nop
aad
je
add
outs
xchg
imul
je
mov
stos
js
(bad)
xchg
sbb
push
adc
cmp
sbb
les
out
mov
mov
sub
lahf
sbb
xchg
aad
addr16
add
and
sub
adc
repz
jae
scas
jg
or
pusha
mov
outs
sbb
jge
popf
das
call
jmp
outs
sub
or
retf
fcmovnbe
or
jmp
mov
sub
int
shr
icebp
stos
inc
pop
fs
mov
fstp
ja
push
int3
loop
test
xchg
out
movs
jne
mov
cmps
cli
ret
movs
fucomi
mov
pop
push
xchg
lahf
inc
shl
xor
push
shl
dec
in
mov
xchg
sets
cmps
(bad)
in
pusha
mov
imul
adc
xchg
cwde
jecxz
inc
dec
sbb
test
aam
cmp
jmp
xor
jno
jle
ins
mov
xor
out
jno
aaa
in
inc
sbb
mov
test
cdq
cmp
mov
push
xor
test
add
clc
cdq
sbb
cmc
pop
aas
xchg
xor
test
dec
mov
imul
inc
inc
test
test
xchg
loopne
cmp
call
int3
jle
popf
cmp
xor
or
outs
jle
lahf
and
cld
cmc
pop
loope
shl
lods
mov
mov
jno
pop
cmc
imul
xchg
fist
cmc
ret
fcom
inc
leave
inc
mov
pop
cld
pusha
dec
dec
jae
pop
jno
push
pop
mov
push
pop
rol
sub
push
add
test
jg
pop
ins
in
and
adc
inc
es
mov
or
sub
fwait
xchg
cmc
out
jae
and
adc
push
cmp
sbb
jmp
push
(bad)
fisttp
scas
jl
mov
sar
jb
retf
or
xor
mov
ins
jbe
push
jecxz
call
adc
sbb
jb
jle
xor
out
jle
xor
mul
pop
int3
daa
icebp
test
sbb
cmps
mov
int
test
pop
stos
ja
pop
sub
test
or
dec
into
push
repz
mov
and
pop
xchg
ds
sbb
ins
and
icebp
test
ds
or
cmps
jo
fldenv
mov
add
mov
(bad)
fnstenv
and
inc
xchg
(bad)
vcvtps2pd
push
xchg
cmp
push
jmp
out
es
inc
(bad)
mov
mov
rcr
xor
cs
jns
sar
data16
(bad)
rcr
retf
jne
dec
sbb
jne
lods
and
adc
sbb
fneni(8087
xor
dec
(bad)
out
or
adc
xor
int
dec
sbb
in
pop
pop
or
cmp
sub
adc
xchg
jb
std
retf
or
and
jae
mov
cmp
mov
call
ret
(bad)
jmp
adc
sbb
enter
iret
stos
dec
ds
xchg
(bad)
movs
stc
jg
push
ins
repnz
lods
in
fisubr
adc
adc
lds
lods
cmp
or
sub
lods
out
gs
cmp
(bad)
push
dec
and
mov
clc
addr16
pop
or
pop
ror
mov
jp
jb
call
or
fsubr
(bad)
jne
cli
mov
mov
add
xor
loopne
aam
shl
pop
fidivr
movs
xchg
mov
stc
jmp
push
push
mov
sbb
jl
sbb
scas
in
cwde
imul
in
movs
mov
js
pop
mov
les
mov
and
dec
and
dec
dec
ret
push
jnp
fdiv
adc
clc
iret
inc
sar
fidivr
inc
or
xchg
jecxz
loope
mov
out
loop
cmp
cmp
mov
icebp
int
ret
and
sub
test
mov
retf
(bad)
sub
mov
(bad)
jns
or
mov
mov
test
add
push
pop
or
or
adc
test
(bad)
call
add
lods
xchg
call
mov
retf
xchg
sbb
retf
sbb
es
nop
pop
out
test
out
mov
out
data16
cwde
fwait
sbb
test
and
cwde
add
mov
inc
popa
retf
pop
xchg
pop
(bad)
jns
xor
in
out
pop
loope
pushf
jbe
das
sub
sub
or
jne
ss
pop
lods
xchg
clc
mov
js
xchg
jl
fcom
loopne
jnp
test
daa
adc
or
push
in
jl
ds
aaa
out
add
sbb
cmps
in
jb
loop
cli
loope
xor
adc
push
mov
add
inc
push
ds
mov
stos
and
shr
push
xchg
out
jg
call
lahf
icebp
and
movlps
inc
cld
jmp
xor
push
push
ins
lahf
sub
add
int3
xor
movs
add
scas
push
imul
pop
cld
or
cli
or
push
and
cmp
sub
sub
xchg
movs
inc
mov
pop
call
and
ror
sbb
cmp
mov
sar
adc
ins
cmp
into
sub
mul
mov
cld
push
fistp
fisubr
push
clc
or
xchg
nop
sbb
inc
and
mov
cli
(bad)
adc
mov
inc
mov
push
sub
shl
clc
mov
cmp
sbb
ficomp
xchg
add
cdq
test
sub
dec
mov
movs
inc
mov
out
push
and
jg
sar
iret
xor
test
shl
ss
adc
fst
inc
jmp
cwde
jnp
lods
je
or
cmc
pushf
arpl
cmc
cwde
xor
sub
in
aam
mov
or
lahf
pop
mov
bound
neg
ins
dec
sbb
mov
sub
in
(bad)
mov
xor
inc
adc
test
(bad)
xlat
imul
jecxz
xor
leave
aaa
pop
mov
test
xchg
jge
call
adc
mov
or
ds
add
mov
ins
rcr
add
cmp
and
and
sub
(bad)
call
popa
add
jmp
shr
rcr
repz
fidiv
aas
pop
sti
jne
repz
stc
push
dec
mov
popf
ds
clc
and
fiadd
jmp
fisub
inc
lds
push
and
or
cmps
add
cmp
int3
sbb
leave
adc
dec
dec
jae
add
adc
iret
add
xor
faddp
loope
enter
mov
rcr
fmul
jne
mov
sub
add
mov
sub
jle
int3
cmp
test
out
mov
mov
lock
mov
je
out
ret
aad
mov
loop
bound
inc
cmp
ret
iret
test
pop
cli
jle
mov
add
aam
xchg
jg
fidiv
enter
stc
ja
aaa
add
sub
pop
daa
outs
cs
outs
fwait
push
pop
adc
sub
sub
jns
and
ja
jae
shl
push
(bad)
ins
cmp
ret
mov
or
pop
xor
and
push
jmp
int
and
or
bound
test
cmps
xor
or
fidivr
in
(bad)
ins
(bad)
cld
xor
jecxz
int3
sahf
pop
mov
lods
nop
addr16
cwde
idiv
sbb
xchg
add
call
ss
aad
out
xor
dec
mov
mov
inc
inc
int
retf
adc
xchg
fcomp
lea
xchg
xor
cli
xor
scas
jb
(bad)
fcmove
ins
xchg
jb
icebp
ret
mov
retf
shl
inc
jmp
lods
fisttp
fwait
xor
es
jne
mov
push
retf
popf
movs
add
repz
push
inc
outs
clc
rcl
test
arpl
fidiv
xor
call
push
sub
dec
fcmovu
icebp
pushf
fptan
jmp
fs
mov
out
ret
mov
dec
push
pusha
jno
sub
mov
int
dec
mov
mov
and
aaa
push
mov
cmp
jmp
mov
data16
and
jmp
inc
and
pop
jp
cmp
into
addr16
mov
push
pop
into
frstor
mov
cmc
aam
ins
test
mov
test
or
add
ficomp
es
ret
dec
nop
adc
adc
sub
mov
inc
mov
or
xchg
xor
adc
aaa
jg
dec
add
sub
sub
push
mov
pop
xor
data16
xchg
mov
call
ss
mov
int3
outs
das
lods
scas
push
jo
mov
xchg
ja
add
mov
mov
shl
xor
test
jl
inc
cli
aas
clc
das
mov
popa
jo
mov
(bad)
jmp
push
jmp
mov
dec
(bad)
hlt
inc
dec
ret
in
fwait
inc
aas
mov
retf
cmp
xor
dec
fbstp
mov
mov
mov
jle
xchg
mov
pop
das
(bad)
daa
iret
dec
push
test
jns
sbb
mov
sbb
mov
push
jb
fwait
push
or
xor
mov
ret
je
fidiv
dec
hlt
sub
push
jnp
je
mov
mov
pop
inc
mov
ret
shr
je
(bad)
cmps
xlat
loop
jp
stos
or
out
jmp
loopne
lds
dec
mov
das
test
test
jecxz
jmp
fwait
xchg
xor
lock
js
adc
mov
adc
fs
test
sub
push
je
add
adc
aaa
inc
push
xchg
shr
aad
ret
dec
mov
dec
outs
shl
inc
sub
imul
rcr
pop
loopne
les
mov
mov
paddusb
mov
lods
dec
pop
xchg
(bad)
scas
out
inc
pop
adc
dec
int3
jmp
cmc
int
ins
call
sbb
mov
icebp
out
loop
lods
xchg
jle
dec
jg
pop
pop
stos
mov
ja
cmp
or
xor
add
sub
scas
mov
das
fdiv
sbb
lods
mov
add
fbstp
bnd
test
push
ficom
scas
add
cli
mov
xchg
dec
jns
fs
dec
sete
fs
mov
mov
in
in
pop
fidivr
pop
xchg
mov
outs
hlt
test
repnz
sbb
data16
sub
shl
pop
cmps
add
xlat
jnp
push
dec
adc
and
pop
sbb
hlt
in
fs
adc
dec
xor
into
add
cli
mov
(bad)
mov
xchg
scas
xor
add
xchg
fsub
add
cmp
inc
bound
push
xchg
or
jp
in
fidiv
push
fwait
shl
jne
cli
xor
inc
retf
arpl
scas
aaa
mov
sub
jmp
lods
int3
mov
xchg
cmc
jg
jle
mov
cmc
or
cmp
lahf
mov
bound
push
xlat
cmp
jae
hlt
adc
xchg
jmp
push
inc
fwait
mov
popf
jp
ficom
jg
and
inc
sub
mov
mov
test
lock
pop
(bad)
adc
mov
enter
popa
xor
fwait
rcl
jecxz
shr
fwait
sbb
push
sbb
jge
out
jmp
nop
jmp
adc
sub
fmul
stc
ins
dec
mov
push
repz
(bad)
sub
scas
jle
add
jp
sub
rcl
outs
out
jne
outs
call
aas
cmp
dec
or
mov
jmp
dec
cmps
mov
fcomp
jns
sub
xor
test
ja
lock
mov
dec
fucomp
xchg
jg
push
call
data16
sbb
add
push
out
cmp
adc
cmp
pop
cmps
xchg
scas
dec
push
sbb
xor
push
mov
ds
test
push
and
imul
mov
mov
pop
sbb
popa
push
dec
or
inc
or
dec
je
adc
xor
mov
call
or
icebp
cmps
add
or
xchg
aas
push
mov
and
retf
nop
imul
pop
or
lock
mov
mov
sbb
adc
xlat
mov
pushf
cli
push
pop
dec
scas
les
int3
clc
(bad)
jmp
xchg
xchg
test
pop
and
pop
dec
xchg
mov
fist
lock
xlat
lock
aad
out
cmp
xchg
imul
push
lahf
aas
inc
jl
fisubr
push
xchg
mov
cwde
dec
aam
xor
test
sbb
sub
popa
cmp
leave
xchg
ds
ds
xlat
push
ret
cmps
xor
or
loopne
dec
sbb
mov
or
xor
aad
out
ins
repz
movs
shr
push
or
arpl
inc
movs
shl
loop
rol
pop
stos
call
sbb
pop
setb
(bad)
push
pop
ret
jecxz
or
pusha
out
and
or
mov
clc
add
or
cld
pop
iret
mov
xchg
sbb
jae
sti
div
push
push
mov
sub
and
imul
inc
sub
cmp
mov
loopne
(bad)
aas
shr
leave
add
out
push
outs
cmp
ja
dec
mov
jae
pop
enter
fwait
xchg
shl
les
mov
and
sbb
fdiv
cmp
add
and
cld
scas
xor
adc
mov
(bad)
jmp
call
xchg
dec
cmp
clc
out
mov
cmps
retf
xor
daa
inc
test
outs
dec
push
movs
pop
fcom
fisubr
inc
cmp
xlat
sub
popf
das
mov
aas
shr
adc
pop
lea
mov
pop
cld
push
mov
imul
xor
jmp
mov
inc
mov
std
inc
jl
in
adc
dec
sub
aad
iret
shl
test
fucomip
icebp
dec
cmp
jle
pop
sar
inc
ret
xor
mov
mov
pop
ins
push
push
jbe
jae
inc
int3
(bad)
jmp
mov
out
pcmpeqd
sbb
popf
sbb
xor
fild
sub
mov
or
ja
mov
(bad)
stos
push
ss
pop
fwait
ror
int3
aad
mov
mov
call
stc
dec
in
jae
push
fistp
scas
sub
lds
add
xchg
stos
pop
sub
retf
(bad)
inc
out
in
mov
xchg
mov
pop
mov
stos
mov
xor
shr
mov
jmp
cs
loope
xchg
sub
jg
int3
mov
jge
pop
vunpckhps
pop
arpl
xchg
mov
cmp
mov
mov
sti
jns
mov
pop
xor
push
shl
iret
sbb
and
pop
dec
vpaddsb
mov
loop
or
popf
movs
lea
scas
inc
mov
sbb
out
mov
push
push
jge
ins
cmc
cdq
mov
or
or
retf
je
into
aaa
mov
mov
movs
and
(bad)
in
mov
fiadd
fnstcw
retf
popa
repz
sub
fsubr
pop
dec
leave
jo
dec
ins
inc
cs
stos
and
das
xor
jnp
dec
dec
xchg
test
or
hlt
outs
fs
mov
add
adc
stos
push
(bad)
jnp
loopne
xchg
jmp
in
sbb
cmp
cdq
cs
loop
xchg
xchg
ins
ds
fdivr
dec
aas
xchg
cmp
pop
cmc
mov
iret
xchg
fmul
cdq
call
cmp
mul
push
stos
loop
mov
mov
outs
inc
mov
mov
out
sub
adc
fimul
adc
fnsave
inc
mov
in
sbb
pop
pop
int
aas
pop
sar
lahf
add
jne
push
pop
inc
shl
sar
mov
mov
xchg
mov
sub
lock
arpl
mov
data16
aam
out
in
les
mov
adc
es
jno
adc
xchg
dec
in
outs
adc
adc
iret
xchg
arpl
mov
inc
and
jae
mov
aam
jl
aam
ret
or
es
jno
add
xchg
fld
push
movs
popa
fnstenv
sbb
lods
and
or
dec
mov
gs
lods
mov
pminsw
jecxz
dec
call
mov
or
and
sbb
and
pop
add
clc
jl
inc
mov
jge
pop
jmp
jmp
jmp
xlat
xor
out
retf
lock
inc
movs
mov
cmp
and
ret
adc
dec
fldz
pop
adc
loope
xchg
pop
cmps
dec
push
cmp
in
and
sub
aam
nop
sub
ret
callw
mov
cmps
pop
pop
ret
and
mov
mul
retf
push
cld
push
rcr
jle
push
shr
push
movs
and
pop
sub
outs
outs
mov
fdiv
ror
mov
ins
(bad)
out
in
cmc
clc
ja
sbb
aad
sub
xchg
inc
or
push
fdivrp
jbe
ja
cmp
ror
out
mov
pop
pop
adc
jg
cmp
jl
mov
pop
iret
xor
hlt
cmp
jns
sbb
and
pop
xor
fidivr
mov
mov
retf
push
loope
xor
mov
pop
dec
or
mov
mov
shr
cmp
adc
rcl
retf
out
dec
das
or
imul
sbb
lods
push
fdiv
xor
dec
outs
inc
mov
iret
cdq
js
mov
xor
jnp
dec
fmul
adc
cmps
xchg
ret
pushf
jg
(bad)
in
or
push
sbb
xchg
sbb
mov
in
fld
jmp
or
sub
jmp
imul
pusha
imul
outs
ins
mov
int
jb
sub
cmps
lods
rcl
cmc
push
mov
mov
cli
cmp
cmc
sbb
push
add
leave
xor
push
xor
das
fwait
(bad)
xor
pushf
sbb
sbb
sbb
push
adc
out
add
mov
cmps
cmp
pop
(bad)
enter
pop
jae
jnp
rcl
iret
xchg
rcl
aaa
lock
inc
mov
cs
push
xor
ficomp
dec
and
(bad)
cmps
jge
leave
hlt
enter
hlt
add
cld
aam
add
jg
cli
dec
outs
cmp
push
daa
pop
cmp
add
call
in
and
push
push
out
cmp
retf
call
cmp
xchg
xchg
jecxz
pop
sar
add
test
cmp
test
cs
test
mov
push
inc
push
mov
and
adc
les
xchg
mov
cmps
fisubr
inc
inc
mov
mov
sbb
cmp
shl
cwde
mov
jp
call
xor
sbb
jns
inc
pop
and
cmc
push
jno
add
(bad)
in
fild
test
xor
scas
adc
stos
pusha
push
hlt
std
std
and
xchg
mov
popa
inc
stos
pop
rol
or
in
dec
inc
and
mov
push
mov
inc
mov
sub
ret
push
inc
dec
pop
cld
test
push
movs
pop
std
cmp
cmp
push
nop
stos
sahf
in
xlat
(bad)
adc
xchg
test
jno
mov
enter
jo
lods
push
out
lahf
movs
mov
sub
and
lds
adc
nop
cmp
pusha
xchg
push
sahf
lock
add
inc
imul
rol
jmp
mov
lods
repnz
fistp
pop
xor
in
dec
add
(bad)
leave
cmp
xchg
sbb
mov
push
sbb
les
gs
outs
inc
mov
mov
lods
mov
cmp
add
add
or
jle
in
cmps
test
xor
xor
mov
pop
fimul
jmp
xchg
push
lods
mov
fs
sbb
enter
leave
push
mov
jp
lds
push
push
xchg
sbb
sbb
sbb
jae
outs
pop
cdq
arpl
mov
or
sbb
lods
mov
lods
out
and
mov
fs
loopne
mov
mov
ror
xchg
xor
adc
ror
pusha
pushf
xchg
cmp
call
lods
mov
sahf
outs
mov
jae
pop
push
push
hlt
inc
mov
icebp
xchg
add
rcl
test
or
in
push
push
clc
ds
stc
(bad)
cs
out
dec
(bad)
cmp
ins
es
inc
shl
shl
fnsave
and
popw
add
outs
dec
xor
or
sbb
or
loop
dec
cmps
sub
add
dec
mov
pop
mov
xchg
retf
test
out
lods
imul
in
out
cmp
dec
mov
add
add
pop
sub
in
xor
pop
sbb
mov
add
push
inc
xchg
and
and
and
adc
arpl
sbb
push
push
shr
sbb
dec
cli
shl
mov
dec
jl
(bad)
fnstcw
jnp
xchg
lock
mov
lods
sbb
test
and
mov
imul
cmps
mov
sahf
aas
in
enter
loopne
mov
dec
add
or
cmp
retf
mov
mov
jb
xor
ins
rol
xchg
retf
sbb
or
outs
enter
shl
add
outs
mov
inc
mov
in
xchg
dec
push
jecxz
outs
rcr
fs
ds
push
inc
lds
loop
mov
pushf
cmps
add
stos
and
xor
aaa
bsf
(bad)
mov
int3
lds
pop
xchg
jae
shl
xor
dec
scas
cli
sbb
aaa
pop
jp
dec
mov
addr16
mov
into
les
lods
pop
pop
cmps
sub
and
cmp
jno
test
jnp
xchg
inc
in
stos
ret
je
cs
shr
and
data16
aam
cmps
hlt
cwde
dec
xor
sub
sub
out
sbb
cld
test
fstp
or
inc
sbb
cmp
mov
jg
inc
mov
sub
mov
sub
mov
jno
loope
push
xor
out
ja
and
cmp
push
ret
cmps
inc
retf
dec
shr
push
inc
sbb
xchg
scas
clc
arpl
js
jge
ret
jmp
adc
js
int
addr16
and
pushf
push
lds
scas
aaa
push
sbb
push
rcr
adc
cmp
adc
rol
in
pop
jp
pop
std
push
es
mov
mov
add
xor
cmp
out
ja
dec
in
leave
xor
fld
ficomp
nop
jbe
jns
jmp
daa
popf
sbb
cmp
dec
cmp
in
pop
(bad)
push
mov
and
pop
loop
bound
arpl
je
jbe
jge
xchg
call
rcr
sbb
addr16
pusha
cmp
hlt
and
sub
inc
pop
jecxz
add
jbe
sub
xchg
pop
imul
pusha
aas
mov
or
stc
or
cmp
add
jnp
(bad)
inc
lods
xchg
xor
(bad)
sbb
repz
std
add
dec
xchg
xchg
cmps
jmp
cmps
lahf
rcr
fild
ds
mov
ror
test
inc
lods
cwde
cli
rol
mov
add
jmp
push
ja
test
cmp
sti
mov
xchg
rcl
dec
xchg
(bad)
inc
ins
mov
cwde
mov
popa
and
add
xchg
call
add
enter
jno
test
cwde
fcomp
cmp
out
cmp
xor
adc
outs
(bad)
xchg
add
cmp
xchg
jo
lock
in
dec
push
iret
das
jecxz
fimul
mov
out
xor
mov
jmp
(bad)
stc
and
xor
ja
xor
test
pushf
cli
js
adc
aad
xchg
jmp
repz
leave
test
add
in
pop
mov
mov
dec
int
xchg
bound
or
push
jge
jmp
jecxz
mov
arpl
outs
sub
int3
mov
mov
scas
push
stc
popf
cmp
shl
add
daa
outs
inc
imul
cmps
pop
bnd
mov
jmp
or
jmp
or
sbb
cs
or
dec
cmps
add
adc
push
and
ja
pop
pop
mov
or
shl
and
mov
mov
xchg
pushf
or
jo
(bad)
call
shl
xor
xchg
add
in
jb
jp
xor
into
cmc
lock
inc
and
push
mov
shr
repnz
push
fimul
jne
cmps
outs
iret
and
int
mov
jge
sar
pop
aas
mov
loope
iret
test
cmp
(bad)
xchg
aas
xchg
add
or
ins
cmps
xchg
mov
adc
sti
jle
popf
fcom
mov
cmps
pop
adc
fucom
popf
pop
retf
pop
movs
clc
xchg
push
push
aad
rcl
mov
out
mov
add
sti
adc
ja
int3
cmp
jns
rcl
mov
and
mov
mov
xor
lods
vxorps
mov
fmulp
fs
jae
dec
aaa
imul
sar
std
aaa
nop
pop
bound
sti
mov
push
jmp
test
(bad)
fincstp
xor
fcom
sub
iret
adc
leave
mov
jb
repnz
inc
sub
mov
fnstenv
mov
push
fcmovne
(bad)
sub
push
add
out
ret
sbb
test
sar
scas
cmp
sahf
repnz
(bad)
cmc
(bad)
jp
sub
and
loop
scas
dec
dec
in
rol
aas
push
(bad)
addr16
data16
or
inc
fisttp
push
inc
gs
int
in
jmp
cmp
ds
mov
cli
inc
or
pop
movs
xor
dec
jmp
aad
mov
add
sbb
xchg
cmp
add
enter
pop
in
fwait
(bad)
jno
xor
lock
and
cmp
dec
rol
and
sub
mov
xchg
rcr
daa
sub
aam
push
jne
(bad)
and
push
bound
shl
pop
add
cmps
push
hlt
loopne
ss
pop
fnsave
lods
fisub
dec
not
or
cmp
sbb
mov
movs
sub
adc
xchg
cmps
push
nop
and
add
cmp
xchg
jge
in
jno
dec
(bad)
dec
cli
sbb
imul
retf
or
data16
popf
ds
adc
imul
adc
mov
pop
bound
or
dec
mov
dec
enter
rep
mov
dec
or
into
and
(bad)
gs
retf
inc
jmp
push
data16
mov
xchg
or
mov
sub
cmp
sbb
sbb
(bad)
int3
jo
adc
pop
popa
and
loop
lea
in
ret
aad
mov
inc
mov
add
and
in
or
cmps
enter
sti
adc
push
adc
and
stos
out
dec
shl
daa
ror
dec
outs
xor
mov
fs
inc
push
jae
mov
pop
push
fwait
test
mov
dec
or
mov
push
into
jmp
mov
jmp
sub
fmulp
xchg
mov
lods
push
outs
pop
xor
add
sahf
call
jno
rol
push
xchg
mov
mov
ss
sub
jnp
mov
clc
push
jo
mov
fisttp
sub
into
xchg
pop
inc
fisttp
or
jbe
pusha
cdq
ins
imul
push
jb
jge
pushf
movs
mov
mov
mov
or
jge
sbb
retf
fstp
in
jbe
rcl
dec
sbb
add
push
xor
nop
mov
and
fucomip
popf
lock
je
or
cmp
ror
cmps
or
retf
iret
std
(bad)
ror
loope
mov
adc
inc
or
xchg
adc
and
(bad)
addr16
cmps
inc
mov
xor
outs
cmp
shl
test
bound
xchg
cmp
xor
mov
aam
shr
pop
mov
xor
mov
or
mov
adc
jl
test
add
jne
imul
enter
xor
or
cdq
mov
push
frstor
mov
or
loop
(bad)
lods
push
scas
mov
cwde
inc
or
inc
dec
or
out
dec
jl
jecxz
out
imul
xor
push
std
ret
(bad)
push
in
xchg
inc
outs
dec
ins
mov
cmp
cld
mov
adc
fstp
push
(bad)
jg
ficomp
fstp
xchg
clc
dec
push
and
xor
nop
pop
add
scas
jo
(bad)
sub
mov
in
loop
xchg
adc
(bad)
ins
data16
daa
pushf
ror
test
adc
ret
test
jae
bnd
push
jl
adc
mov
jae
loop
fwait
repz
pop
fbld
dec
inc
fs
push
mov
cmp
cs
xchg
mov
lods
pop
jl
mov
into
aad
and
push
dec
add
retf
xor
mov
rcl
test
mov
fstp
int3
nop
fisubr
mov
adc
(bad)
pop
pusha
fwait
stc
and
lock
ffreep
ja
rcl
repz
sbb
and
jo
in
shr
fmul
push
xchg
es
cmps
test
lods
pop
cmps
lods
and
test
retf
imul
cmp
lock
js
and
dec
sub
xor
retf
iret
xchg
retf
(bad)
ss
xlat
xor
fdivr
call
cdq
and
mov
fwait
les
mov
icebp
ins
or
cmp
sbb
psrlq
int
mov
test
xchg
jbe
nop
aas
inc
jmp
xor
(bad)
test
nop
mov
in
sub
mov
mov
mov
inc
call
mov
clc
pusha
mov
fisub
jne
(bad)
adc
adc
and
out
xchg
adc
sbb
sub
lahf
mov
add
jnp
cs
push
cli
sbb
jb
push
xor
(bad)
(bad)
cmp
loop
retf
mov
div
pushf
mov
push
(bad)
cmp
int3
pop
sti
jb
daa
xchg
cli
pop
adc
cmp
inc
arpl
(bad)
jmp
xchg
iret
mov
in
clc
jg
mov
dec
lds
imul
aad
and
lea
ret
stos
repnz
stos
ja
add
repnz
das
addr16
ret
mov
lahf
shl
cmp
adc
adc
push
repnz
jo
aaa
cmp
xchg
mov
mov
jmp
in
jbe
xor
test
repnz
mov
jne
xor
xor
xor
jo
jae
mov
jmp
lods
int3
xlat
imul
add
lods
push
mov
mov
dec
inc
push
xlat
outs
xchg
add
cwde
in
jo
inc
outs
je
les
inc
mov
inc
sub
mov
stc
stc
jno
pop
js
out
neg
stos
pop
and
ror
dec
jle
pop
add
cvttps2pi
mov
and
push
dec
sub
jno
rol
sbb
dec
in
sbb
jle
sahf
lock
int
data16
xor
and
repz
dec
fs
sub
pop
hlt
pop
push
rol
jns
dec
pop
shr
inc
mov
cs
cmp
mov
inc
jmp
scas
les
ins
and
nop
cmps
fcmovnb
push
cmp
xchg
js
add
sar
sub
fwait
mov
mov
fisubr
mov
push
lods
dec
stos
arpl
add
pop
sub
ret
pop
lea
pop
xor
jns
ret
jns
imul
xor
xchg
loope
scas
mov
lods
and
xchg
int3
cmp
sub
int3
repnz
out
nop
sub
es
jnp
push
pop
and
push
add
sub
pop
ret
js
fadd
mov
dec
out
push
adc
sub
dec
jae
or
sub
stc
adc
dec
cmp
pusha
pushf
pushf
xor
jbe
es
mov
push
sbb
sbb
jle
xor
inc
cmp
inc
sub
and
push
cwde
jg
(bad)
xchg
mov
movs
push
add
or
sbb
imul
div
ins
loop
pop
adc
and
add
addps
jmp
retf
mov
push
inc
xor
shl
aas
mov
pop
test
push
gs
inc
xchg
cmp
inc
push
mov
mov
inc
popf
pop
dec
(bad)
stc
inc
xchg
in
outs
adc
xor
fadd
es
xor
clc
fcomp
and
mov
mov
fcom
clc
adc
icebp
shl
pop
and
rcr
xor
movs
adc
call
mov
push
lock
jg
pushf
movs
ror
sbb
add
mov
mov
adc
(bad)
cwde
cmc
test
mov
fadd
les
sahf
repnz
loopne
pop
sbb
in
int
lock
dec
or
xchg
fbld
push
add
mov
popf
or
or
loop
rcr
pop
addr16
mov
(bad)
jns
dec
pop
pop
in
in
add
ret
ins
hlt
or
shl
jbe
or
jnp
cmc
dec
push
fwait
imul
shl
sbb
xor
push
and
sub
cmp
cmps
or
push
inc
inc
adc
cmp
ds
jnp
in
inc
(bad)
push
(bad)
dec
xor
inc
sub
ja
outs
aad
nop
test
cmp
inc
lahf
retf
dec
(bad)
mov
shl
retf
inc
jl
(bad)
dec
mov
mov
fmul
in
pushf
sahf
xchg
sub
cmp
sbb
shl
jg
bound
vmovaps
retf
jge
out
retf
mov
pop
add
inc
pop
xchg
pop
fild
shr
mov
xchg
inc
or
cwde
sub
dec
cmp
mov
mov
imul
pop
or
push
mov
and
pop
push
mov
add
jns
aas
push
shl
enter
iret
mov
inc
sub
pop
js
mov
jecxz
push
inc
ja
in
jns
mov
inc
in
pop
sub
sti
pop
fld
fwait
jecxz
jl
or
cmp
add
pop
push
xchg
iret
js
cld
enter
or
mov
into
sbb
fisubr
loop
xchg
and
cdq
dec
mov
ins
push
mov
cs
dec
ja
neg
cdq
add
daa
fldenv
push
ins
or
retf
mov
mov
fcmovne
not
fcom
hlt
call
mov
and
lods
cmps
ja
jo
ins
sub
ret
add
ins
inc
push
push
jg
aam
call
ins
dec
add
stos
jmp
adc
push
mov
sub
and
hlt
ret
in
pop
xor
dec
(bad)
adc
out
push
movs
sbb
xchg
inc
xor
push
push
push
ds
sbb
sub
and
cs
cwde
pop
ins
aam
jl
cmp
stos
xchg
jns
jo
mov
pop
idiv
or
aas
xor
lds
rol
cmp
daa
jmp
test
cmp
push
es
jg
mov
test
or
inc
(bad)
(bad)
xor
movs
call
sbb
jno
and
mov
ja
lock
lea
clc
imul
pop
sub
push
daa
mov
mov
jecxz
mov
mov
bound
sub
fidiv
fidivr
adc
mov
fld
inc
and
stc
out
pop
cwde
sbb
retf
ins
popa
jge
mov
cld
push
push
hlt
(bad)
daa
mov
mov
stc
pop
fcom
mov
pop
in
xchg
sub
xchg
inc
add
xchg
mov
mov
mov
loopne
sbb
pop
bound
fbld
aad
pop
pop
lds
inc
xchg
add
shl
push
and
sti
sub
pop
jecxz
or
test
stc
rcl
ss
in
scas
jmp
dec
dec
lea
dec
into
fstp
push
rcr
inc
cmps
xchg
add
mov
enter
xor
xchg
rol
sub
pop
sbb
xlat
outs
mov
inc
rol
pusha
retf
out
lds
ins
push
mov
fwait
jge
icebp
xchg
fild
test
addr16
dec
fwait
jle
outs
mov
cmp
(bad)
pop
aad
enter
aaa
shl
out
cld
xor
xchg
pop
mov
or
mov
and
out
sbb
jecxz
jae
mov
fimul
mov
cwde
enter
push
out
aam
popa
(bad)
repz
and
call
ds
aam
mov
pop
ret
fs
into
(bad)
push
(bad)
jg
and
mov
retf
scas
xchg
addr16
jl
pop
jl
repz
cwde
add
mov
cmp
jns
les
lods
(bad)
jbe
sbb
rcr
push
adc
jae
push
aad
test
enter
push
dec
in
call
(bad)
je
daa
push
fdiv
(bad)
and
xadd
movs
pop
test
hlt
xchg
push
ins
jg
js
xor
js
imul
fwait
psubusw
scas
stos
cmp
(bad)
sbb
jae
mov
ins
inc
add
not
xor
das
repz
cmp
scas
outs
retf
cmp
mov
bound
sti
fucom
addr16
adc
push
fld
stos
(bad)
pop
jmp
adc
movs
mov
fwait
mov
adc
enter
fisub
hlt
jmp
push
(bad)
scas
jo
add
mov
stos
(bad)
std
mov
daa
mov
dec
popa
popa
adc
and
jmp
ret
scas
mov
cmp
mov
mov
sbb
add
sar
xor
in
jno
aaa
inc
push
rol
push
sub
jnp
cmp
pop
and
add
movs
and
retf
add
in
xor
cmps
inc
es
call
cmp
push
mov
outs
cmp
out
xchg
mov
out
out
push
xchg
mov
cdq
add
repnz
lods
xor
and
lods
fnsave
in
and
mov
mov
xor
fist
add
or
je
hlt
mov
aad
and
sahf
iret
test
jae
loope
xor
imul
shl
(bad)
bound
xor
popa
push
pop
pop
ror
adc
mov
cmps
clc
dec
inc
addr16
ins
xchg
stos
dec
mov
pop
into
inc
add
dec
push
dec
adc
jmp
aas
imul
fstp
outs
push
rcr
pop
dec
arpl
sahf
cmp
not
int
pop
loop
pop
fisubr
mov
pop
adc
pop
addr16
imul
pop
(bad)
mov
sub
gs
cdq
sbb
mov
scas
popa
lods
and
jp
clc
cmps
push
sar
dec
push
or
lods
cwde
icebp
and
adc
push
xlat
test
(bad)
push
scas
(bad)
(bad)
daa
inc
jl
nop
bound
retf
mov
sar
pusha
aad
xor
push
xchg
sub
call
xchg
ror
pop
lods
mov
data16
pop
cwde
out
pop
(bad)
or
enter
jo
cmp
jne
or
push
xor
jmp
fnstcw
add
fwait
cmps
popa
into
pop
dec
pop
fisubr
xchg
and
fwait
xchg
jo
jmp
inc
mov
inc
loop
mov
push
xchg
ja
pop
ja
cmp
sub
or
xchg
imul
xchg
cld
dec
adc
ror
add
scas
add
push
jecxz
xor
inc
movs
je
cmp
repnz
cld
adc
outs
pop
(bad)
in
push
pop
sbb
mov
aam
test
imul
dec
mov
cmc
inc
sub
cld
dec
cmps
inc
cmps
arpl
jbe
ja
adc
xor
je
je
xchg
pushf
push
adc
and
adc
fbld
mov
mov
xor
repz
or
es
pop
sub
pop
push
inc
loope
jmp
lock
xchg
or
push
jecxz
out
or
sahf
jl
jnp
dec
mov
pushf
stos
mov
in
vorpd
shl
bound
jno
iret
xor
sbb
aad
ffree
imul
inc
inc
cs
adc
aas
cmp
adc
repz
sbb
in
inc
sub
sahf
mov
xor
mov
fisttp
jle
push
push
dec
push
stos
jo
jnp
sub
fadd
inc
jo
mov
pop
sahf
aas
icebp
scas
sbb
sbb
movs
mov
(bad)
addr16
clc
mov
push
outs
xor
xchg
jne
push
cmp
retw
mov
dec
fs
nop
ffreep
ret
imul
xor
jecxz
push
sub
jae
lods
mov
mov
fidiv
sub
popf
pushf
rcr
adc
in
aaa
scas
ja
imul
mov
jmp
xchg
adc
outs
inc
ja
dec
loopne
int3
icebp
adc
jnp
xor
scas
xchg
out
fisub
fwait
jmp
(bad)
sub
mov
stos
int
sahf
clc
ins
mov
fwait
xor
mov
sbb
movs
push
jmp
in
xor
idiv
and
or
std
add
in
movs
loope
repz
dec
pop
add
push
and
jo
jecxz
mov
pop
adc
mov
jl
ret
xor
loopne
int
add
cli
jecxz
inc
cmp
sbb
cli
xlat
mov
fld
xchg
push
pop
fistp
mov
push
jmp
inc
test
mov
test
stos
xor
and
std
fwait
xor
in
xor
sti
xchg
mov
aas
cmc
shl
cmc
xchg
or
in
fild
xor
inc
bound
jge
enter
(bad)
daa
mov
xchg
out
cmp
or
jg
xor
clc
pop
dec
xchg
xor
and
nop
sar
mov
sub
inc
es
test
cmp
dec
xchg
int
ins
add
into
or
mov
mov
and
push
nop
sub
jge
sbb
pop
pop
pop
push
outs
push
std
push
mov
mov
ret
cs
ret
ficom
imul
push
loope
lock
in
iret
fld
cmps
lods
arpl
das
std
popa
sbb
jg
jp
mov
and
outs
pop
iret
loopne
ja
dec
shl
ret
jmp
in
xor
ret
outs
inc
lods
(bad)
ds
sbb
cmp
sbb
popa
xchg
pop
ss
in
xor
cdq
mov
mov
mov
aas
pop
inc
inc
call
sbb
mov
ins
popa
jle
out
leave
cmp
fidiv
ss
mov
out
das
movs
mov
shr
clc
(bad)
fisub
and
movs
pusha
and
add
jbe
sbb
loope
pop
push
sbb
xchg
mov
xchg
xor
addr16
out
out
sar
cmp
(bad)
fiadd
jbe
jne
xor
xor
(bad)
mov
or
or
clc
(bad)
lahf
call
or
push
sub
test
dec
out
mov
xchg
(bad)
stc
je
fld
daa
outs
xchg
nop
cmp
inc
pop
jnp
repz
test
xor
or
mov
sub
add
mov
in
pop
xchg
movs
push
mov
and
jge
mov
popf
test
loop
fistp
mov
jge
push
mov
or
in
(bad)
mov
jg
movs
mov
jmp
xchg
cmp
jno
(bad)
scas
(bad)
cmp
mov
ret
push
rcr
je
mov
data16
xor
ficomp
scas
test
movs
lock
push
push
add
cmc
popa
int3
adc
mov
inc
imul
(bad)
mov
mov
mov
adc
jg
cli
cmps
and
ds
cmp
loop
std
lods
adc
int
mov
call
cmp
add
std
inc
pop
sub
push
loope
xchg
mov
test
ins
lods
adc
sub
js
into
cmp
(bad)
mov
jne
in
scas
pop
sbb
sbb
in
mov
nop
movs
xor
cmp
loope
cld
fnstenv
mov
call
cli
cmp
sub
fild
inc
adc
mov
idiv
aaa
pop
(bad)
out
mov
int3
sub
mov
sub
dec
sub
popf
leave
pop
cli
fldz
fsubr
push
inc
or
lock
or
call
retf
stc
sbb
and
in
jmp
(bad)
mov
fmul
mov
cmp
lahf
xchg
pop
push
pop
ficom
mov
fcmove
jl
sub
ss
sub
mov
push
mov
sbb
stos
fdiv
xor
dec
sbb
cmp
int
loop
push
xor
adc
bnd
push
hlt
stc
xor
imul
adc
xchg
shl
cmps
add
ret
dec
rep
ror
fs
pop
cdq
adc
pop
or
ja
sahf
in
sbb
outs
sbb
fwait
mov
addr16
fisttp
fnstsw
retf
jb
xor
(bad)
xchg
push
add
jecxz
pushw
mov
(bad)
lahf
stos
push
adc
addr16
push
iret
jae
ss
mov
js
pop
sbb
mov
mov
fstp
and
movs
push
sub
and
idiv
mov
jbe
pusha
mov
inc
cdq
jp
jbe
inc
jg
push
mov
sub
aas
xchg
add
mov
sbb
pop
pop
jg
inc
cmp
ja
test
mov
pop
ror
shr
jecxz
cmp
ror
mov
jp
xchg
inc
mov
jmp
jb
xchg
sbb
or
mov
mov
imul
dec
xchg
popf
cmps
ins
mov
repnz
in
sbb
(bad)
fist
test
xor
imul
loope
mov
xchg
adc
in
pop
leave
ret
cmp
or
mov
push
xor
fld
sub
add
push
mov
dec
test
xchg
cmp
jnp
clc
aaa
test
loope
push
(bad)
xor
pushf
sti
sub
or
rcl
mov
outs
fsubrp
add
imul
addr16
dec
cs
and
dec
retf
and
mov
loop
out
sbb
jb
pop
mov
pushf
xchg
rol
stc
sub
daa
std
call
fucom
mov
das
mov
xchg
inc
push
pop
mov
call
xor
push
push
mov
sbb
xlat
pusha
push
fst
cld
jle
mov
adc
jp
inc
pushf
sub
xchg
aas
mov
cmp
daa
test
(bad)
xchg
xchg
jns
sbb
push
mov
sbb
in
sbb
fimul
sbb
icebp
test
cld
movs
aas
and
dec
cmc
add
lahf
aad
add
imul
pushf
test
xchg
jo
jle
or
dec
jp
jae
mov
xor
adc
sub
inc
in
mov
or
adc
ss
jbe
cmp
push
lock
std
mov
iret
mov
and
fcmovnb
int3
lahf
(bad)
ror
lock
and
mov
sti
or
sub
sbb
dec
inc
retf
cwde
out
pop
sbb
aaa
daa
jge
or
test
call
push
dec
ins
mov
call
outs
aad
jo
mov
js
mov
cld
fist
dec
inc
inc
popa
aad
adc
icebp
test
jl
jge
add
mov
retf
mov
repnz
(bad)
jmp
jb
in
mov
cs
cmps
push
fild
inc
jno
movs
jo
jne
je
clc
or
lods
sub
pop
push
pop
add
cmp
jne
das
jb
stos
push
hlt
cs
xchg
and
sbb
inc
jge
adc
mov
mov
push
(bad)
fs
pop
loopne
ins
in
push
pop
jo
dec
lods
add
xor
fwait
pop
das
hlt
and
mov
bound
or
imul
mov
test
pop
jns
push
cmps
fistp
mov
xchg
or
in
jle
push
push
jnp
fdiv
fwait
les
jge
in
jbe
(bad)
and
out
fisubr
mov
aaa
cld
mov
mov
in
sbb
add
pop
mov
inc
cmp
call
pop
xor
test
lahf
fwait
push
les
fst
jecxz
mov
fisttp
mov
std
sar
mov
je
adc
xchg
rcr
aam
jb
add
jecxz
add
hlt
jge
push
and
test
mov
jmp
clc
mov
mov
ds
fisubr
mov
cmps
test
sub
jno
mov
sbb
and
sti
or
cli
lea
mov
jmp
sar
fcomp
pop
mov
cmp
fistp
jo
xor
daa
popa
and
(bad)
and
out
bound
(bad)
mov
iret
jno
mul
nop
shl
lea
outs
xor
and
cld
cmp
jge
sbb
sub
add
sbb
dec
and
fadd
adc
(bad)
adc
mov
push
(bad)
fmul
dec
movs
xor
cli
out
jbe
cwde
arpl
rcr
xchg
mov
iret
pop
push
out
sbb
dec
adc
sbb
mov
pop
add
ja
rcl
mov
retf
xor
and
xchg
and
push
push
cmp
jecxz
push
inc
sti
hlt
aad
mov
sbb
jns
jle
gs
push
lahf
(bad)
cmc
and
pop
push
ja
scas
popa
aaa
aas
xchg
and
es
xchg
cdq
jae
popf
call
sbb
jns
mov
jbe
jnp
cmp
sbb
dec
out
retf
clc
loop
push
jmp
add
cld
and
push
mov
icebp
mov
(bad)
lock
shr
addr16
les
dec
cwde
inc
and
in
mov
mov
push
test
rcl
movs
sbb
sub
mov
xchg
inc
out
out
inc
cmp
xor
outs
iret
mov
iret
push
lahf
xor
xchg
(bad)
(bad)
retf
mov
int3
cmp
xor
loop
mov
cmp
and
das
ins
sub
dec
daa
cmps
and
sub
sbb
xor
aam
sub
loopne
push
mov
jns
sub
jmp
and
imul
mov
ins
inc
pop
xor
lods
adc
add
into
sub
lahf
and
xor
cli
pop
adc
enter
adc
jle
lods
mov
jg
push
inc
movs
xor
sub
jmp
push
dec
sbb
xchg
xchg
div
hlt
xor
pop
in
iret
cli
adc
add
jae
aaa
cli
sti
aam
cmp
loop
imul
icebp
dec
cli
jge
ficomp
stos
jbe
loop
jp
mov
or
sti
and
pop
maskmovq
div
mov
xchg
adc
cmps
jno
mov
fwait
jmp
mov
imul
jmp
xor
mov
mov
out
jmp
sbb
bound
cmp
sub
in
adc
test
push
lods
sub
(bad)
cld
gs
dec
pop
cli
mov
pop
add
pusha
out
fnstenv
fdivr
pop
ror
aaa
mov
push
pop
pop
jge
call
sbb
pop
and
lock
sar
es
test
stc
xchg
mov
push
fistp
adc
andps
cld
cs
push
enter
neg
mov
aad
sbb
jo
call
xor
aaa
das
test
shr
dec
push
mov
stos
and
adc
and
sbb
aas
mov
mov
out
sti
mov
mov
and
mov
jl
push
int
test
push
push
ret
daa
xor
out
push
xlat
ret
cwde
fwait
cmp
mov
xchg
(bad)
lahf
mov
dec
out
jbe
in
in
addr16
aad
inc
jecxz
paddusw
sbb
sbb
into
pop
xchg
adc
lods
pushf
das
mov
push
fidivr
dec
sar
(bad)
sahf
mov
mov
cld
pop
jp
iret
xor
cmps
mov
adc
stos
js
or
call
add
mov
retf
aas
jnp
or
daa
mov
jmp
add
xchg
or
sbb
loopne
(bad)
adc
mov
jnp
xchg
mov
leave
lods
(bad)
sar
retf
stos
fwait
pop
call
rcl
and
jmp
loop
cwde
scas
push
and
jb
sub
sub
push
(bad)
pop
pop
in
and
ja
(bad)
mov
test
sbb
je
jnp
sar
(bad)
push
xchg
add
push
jmp
add
daa
out
cld
inc
add
(bad)
pop
jnp
pop
sub
sub
in
cld
lds
jl
adc
pop
addr16
jno
mov
in
mov
push
sbb
cmc
xor
mov
pop
aam
mov
inc
(bad)
outs
mov
xchg
leave
push
repnz
das
jle
rcl
fcomi
sbb
push
dec
lea
je
jb
std
dec
pop
icebp
call
retf
pop
sahf
rcr
arpl
scas
outs
out
rcl
lods
ja
out
mov
push
fld
loopne
aad
lds
xor
popa
xlat
jns
and
or
pusha
es
je
cmp
jae
loope
outs
and
lods
imul
aaa
jp
inc
cwde
ror
jge
in
fimul
int
and
sub
cdq
ins
daa
mov
not
mov
xor
aas
fcom
(bad)
inc
jmp
sub
fsub
mov
scas
and
add
cvtpi2ps
imul
(bad)
cmp
shr
push
mov
out
ret
aad
inc
repz
sahf
mov
aam
mov
pop
sbb
mov
jbe
test
sbb
push
(bad)
inc
int3
xlat
sbb
lock
dec
mov
popa
stos
cmp
shl
retf
mov
sub
lds
xor
push
ss
mov
jno
(bad)
scas
das
rol
fiadd
lock
inc
xor
xchg
jns
test
mov
lds
test
or
cmp
pop
dec
ins
add
fadd
(bad)
out
jmp
leave
repz
xlat
ds
js
aas
dec
push
nop
cmc
imul
ficom
xchg
mov
mov
jno
pop
sub
push
(bad)
push
shl
cwde
loope
pop
jmp
push
pop
aaa
test
mov
push
mov
or
cs
enter
jno
or
adc
lds
(bad)
xor
or
jno
fisubr
push
or
int
inc
fs
leave
mov
jnp
(bad)
retf
fnstenv
gs
repnz
leave
ret
outs
jge
inc
push
xor
xor
lods
movs
xor
jp
mov
sbb
or
pop
mov
pop
rol
lock
sar
sub
fnstcw
lea
stc
push
and
cmp
cli
das
aad
ja
std
hlt
and
repnz
fmul
loop
jne
xchg
sbb
add
mov
xor
mov
fsub
add
dec
ds
adc
mov
mov
jmp
lods
xchg
xor
loope
pop
push
test
jge
jnp
fwait
inc
push
mov
fiadd
add
ins
daa
adc
adc
ret
push
lahf
lock
fmul
das
out
fs
cmp
lahf
jns
pop
jae
mov
aam
inc
in
or
or
xor
adc
or
rol
mov
xor
pop
push
mov
push
cmps
dec
sti
or
int
jo
jge
loop
dec
punpcklbw
dec
and
or
es
xchg
jle
fldenv
pop
mov
add
mov
out
stos
in
inc
mov
mov
xor
mov
mov
push
dec
jb
fild
popa
mov
sahf
add
xchg
xor
mov
ret
std
jne
fisubr
inc
in
adc
cdq
mov
fisubr
std
imul
jge
cmp
daa
in
(bad)
push
ins
pushf
cs
jecxz
sbb
adc
int3
dec
stc
sbb
cmps
(bad)
xor
outs
in
xlat
lds
aam
test
addr16
loope
sub
lds
test
lds
pop
lahf
push
arpl
dec
mov
sbb
cmc
test
add
mov
iret
push
das
dec
dec
ret
adc
or
dec
icebp
mov
add
out
popa
and
add
adc
sbb
xchg
(bad)
pop
dec
aad
or
inc
mov
add
dec
or
aaa
rcl
jecxz
call
or
(bad)
(bad)
out
adc
and
jle
shl
int3
jmp
daa
lock
loope
sahf
dec
icebp
sbb
test
lea
out
nop
jecxz
push
jo
js
xchg
cmp
loop
fldenv
mov
cmp
ror
and
xchg
cmp
and
retf
add
cmc
push
js
aad
sbb
pop
mov
pop
and
test
add
mov
sbb
loop
jp
sahf
imul
dec
mov
loop
xchg
iret
ror
push
push
(bad)
repnz
sbb
iretw
scas
mov
movs
into
cmp
outs
pop
jmp
sbb
dec
jecxz
sbb
pushf
out
imul
xchg
jno
daa
add
adc
pop
cmc
add
jmp
mov
adc
mov
pop
xor
or
call
enter
ss
jo
mov
pop
cmp
xor
jno
pop
clc
bound
sbb
pop
in
or
imul
inc
data16
js
loop
mov
inc
dec
jno
push
mov
and
test
dec
push
or
ins
and
jmp
dec
(bad)
loopne
in
jae
cmps
rcl
xor
ins
pop
mov
xor
xchg
jns
adc
(bad)
ins
scas
scas
xchg
call
jg
mov
cmps
jae
lds
sub
fild
add
xor
mul
xor
ins
jmp
pop
lods
pop
sbb
dec
jb
add
sub
dec
and
ror
bound
pop
aad
xlat
adc
mov
push
fcom
sbb
fsubr
clc
mov
lock
lock
clc
jns
into
ja
dec
or
mov
inc
pop
popf
cmp
sti
icebp
test
push
in
sbb
cmp
(bad)
sbb
adc
fcomp
sub
mov
imul
pop
arpl
outs
jge
in
dec
jle
mov
lea
add
rcr
mov
test
stos
loop
pop
sbb
sbb
(bad)
in
loopne
jge
icebp
add
fwait
and
mov
in
xchg
movs
jno
iret
mov
fwait
fwait
lea
xlat
cmp
call
inc
push
inc
nop
frstor
iret
xor
je
test
push
xchg
cmp
dec
mov
pushf
movs
imul
add
mov
inc
jle
aaa
xor
aam
daa
push
push
push
cmp
sbb
dec
xchg
in
loop
inc
mov
les
adc
jno
ds
int
jl
test
dec
aam
push
loop
sbb
(bad)
fcom
stc
das
mul
psubsw
in
mov
jmp
int
jno
je
pop
mov
xlat
rol
mov
xchg
xchg
sbb
mov
outs
pop
mov
ret
push
push
xchg
ja
ins
les
cmp
out
or
jo
mov
and
div
inc
pop
jo
gs
sti
dec
adc
pop
xchg
mov
out
xor
lea
fmul
mov
xor
sbb
(bad)
jmp
sbb
mov
movs
jmp
rcr
int
inc
sbb
outs
in
out
mov
add
push
fist
jp
je
pop
mov
icebp
fmul
push
(bad)
lahf
or
jno
pop
jae
pop
shl
or
xchg
out
js
mov
mov
call
sti
cmps
adc
mov
or
push
aad
and
ret
push
ror
push
mov
mov
pop
sub
xchg
jecxz
ret
fwait
dec
arpl
add
dec
inc
in
push
jle
leave
pop
shl
in
push
mov
jns
aad
mov
mov
imul
xchg
ficomp
lea
mov
loop
clc
ins
cwde
pop
das
call
adc
retf
fwait
dec
inc
ds
cmp
in
les
daa
push
pop
xor
inc
in
call
add
add
stos
cmps
mov
gs
cmp
xor
xchg
mov
jb
stos
mov
call
push
pusha
mov
fnsave
fwait
or
aaa
(bad)
outs
push
mov
push
inc
es
jecxz
mov
(bad)
jecxz
cmp
cld
or
in
loopne
pop
data16
pmuludq
repnz
push
ret
inc
cmp
popa
mov
pop
sahf
retf
sbb
inc
mov
int3
(bad)
pusha
call
je
popa
add
inc
stos
xor
cmc
(bad)
int3
cmp
xchg
adc
xlat
imul
push
loopne
rcl
sub
jne
inc
movs
inc
xor
jns
sbb
xchg
aad
inc
jbe
fstp
jmp
sbb
mov
loope
mov
sub
jns
cs
dec
fisub
out
fldcw
mov
std
outs
sbb
mov
mov
dec
shl
jae
jnp
sbb
pop
mov
icebp
mov
pusha
hlt
jge
xchg
ins
dec
std
push
or
adc
loopne
or
pop
xchg
fisub
loope
jbe
in
lds
jp
pop
fstp
mov
or
mov
xor
cmp
imul
adc
hlt
js
jnp
test
jno
sahf
xor
mov
sti
stos
xchg
aaa
push
jnp
iret
mov
out
jmp
push
scas
mov
add
cli
jbe
movs
add
lds
pop
(bad)
adc
loop
cmp
cmp
ss
add
sbb
or
out
cld
arpl
repnz
jbe
push
inc
cmp
pop
jns
jbe
pop
(bad)
iret
pusha
vmread
mov
enter
add
ret
pop
push
cmp
sahf
cmp
add
test
jno
mov
or
push
jg
bound
scas
inc
outs
push
(bad)
xchg
add
mov
or
pop
or
outs
inc
retf
cld
and
outs
fbstp
xor
xor
xchg
cli
in
mov
(bad)
aas
scas
stos
shl
loope
jbe
jmp
xor
mov
sub
mov
(bad)
xor
dec
int
push
lods
jnp
mov
shr
push
fcmovnb
add
pop
pop
outs
jmp
daa
pop
jp
or
bound
push
and
(bad)
stc
std
in
inc
(bad)
adc
jb
in
add
test
js
lds
add
xor
push
frstor
xchg
push
rcl
ret
adc
fidiv
retf
imul
rol
adc
out
pop
shl
pop
cli
and
out
mov
jb
das
pop
dec
jl
xor
xchg
xchg
pushf
jae
int
xor
xchg
pop
pop
mov
dec
inc
jne
ins
ins
dec
retf
int
pop
(bad)
repz
cmps
mov
jo
lods
test
dec
cld
outs
les
push
icebp
inc
test
and
jns
les
lahf
mov
pop
inc
mov
and
mov
out
cwde
ficom
movs
ret
repz
movs
mov
jle
mov
jbe
sti
out
fwait
arpl
inc
dec
mov
pop
lods
cmp
mov
dec
pop
xchg
or
push
and
loope
xchg
jno
sub
out
imul
daa
loope
jns
xlat
test
inc
fsubr
daa
jne
mov
lock
andps
adc
shr
pop
mov
pop
fs
ret
mov
mov
dec
cwde
adc
jmp
scas
shl
mov
mov
lea
add
repz
mov
mov
mov
or
test
jbe
cmp
mov
jecxz
test
adc
(bad)
and
jmp
test
retf
int
out
scas
pop
jno
jp
movs
inc
ret
inc
ficomp
mov
popf
scas
popa
xlat
xor
push
sbb
add
sbb
push
xor
cs
pop
xor
in
and
daa
mov
adc
stos
fsub
and
mov
enter
out
test
dec
mov
mov
ja
test
aam
add
push
adc
loop
ret
call
imul
sub
ja
retf
pop
push
add
xchg
gs
lahf
sbb
dec
in
(bad)
jecxz
cmp
inc
in
or
or
pop
mov
push
cmp
cmp
or
xor
in
or
test
gs
mov
lods
aaa
jae
daa
out
push
sbb
das
or
retf
push
xchg
hlt
xchg
sbb
xor
aam
pushf
scas
xor
mov
enter
nop
stc
push
mov
sbb
mov
scas
imul
push
pop
fistp
mov
or
fisttp
iret
cdq
xchg
stc
and
inc
mov
jge
dec
mov
pop
fldcw
jno
ret
sub
mov
std
cmp
fadd
test
cmps
out
and
inc
loopne
sub
repnz
mov
rol
gs
loop
xchg
imul
mov
je
pop
popa
pop
pop
neg
mov
jge
hlt
inc
mov
and
leave
fs
dec
loope
jmp
sbb
movs
jns
retf
xor
sub
push
nop
repz
leave
adc
pop
fwait
sub
hlt
outs
movs
das
je
mov
sub
mov
je
nop
cmp
push
popa
xor
sbb
in
add
daa
or
pop
call
cs
xchg
adc
or
(bad)
pop
mov
sbb
mov
lock
or
pop
daa
cmp
mov
cmc
push
sub
jnp
mov
add
and
inc
dec
pop
jle
sub
pop
inc
mov
pop
pop
(bad)
push
mov
sub
je
(bad)
xchg
mov
jecxz
push
push
adc
ror
fmulp
jbe
inc
add
std
jge
(bad)
mov
call
sub
jae
in
out
ds
rcl
mov
xchg
sub
cld
push
inc
(bad)
arpl
loope
or
pop
pop
adc
sub
add
fwait
inc
out
in
out
xchg
cmp
stc
rol
xor
mov
scas
sar
xor
fsubr
push
adc
lahf
and
movs
inc
cmp
div
sub
mov
inc
xchg
movs
ret
dec
fcom
or
and
ror
adc
loopne
or
scas
xchg
push
(bad)
sar
lock
dec
scas
and
and
rol
pop
js
dec
sub
xlat
popf
jl
inc
or
imul
out
mov
sahf
inc
cmp
scas
int3
cmp
dec
xchg
cmp
out
or
mov
in
push
cmps
add
call
mov
lods
xor
fdiv
retf
mov
hlt
xchg
or
inc
scas
iret
pextrw
xor
in
push
pop
jae
xchg
cmc
mov
dec
add
pop
inc
pop
jno
imul
pushf
adc
hlt
pop
icebp
cld
dec
push
aaa
jnp
dec
loop
ror
jmp
adc
lahf
sub
(bad)
(bad)
fcom
fstp
mov
cmp
bnd
or
das
hlt
std
xchg
lods
mov
dec
jnp
pop
mov
jecxz
add
xchg
imul
scas
arpl
jns
je
mov
in
push
in
aaa
push
and
xchg
into
sub
js
cmp
push
nop
jl
mov
inc
and
dec
sbb
cmps
(bad)
or
jge
pop
push
or
test
int3
dec
loopne
das
pushf
jnp
mov
ret
push
cmp
ror
movs
mov
pop
inc
stc
add
fstp
dec
fmul
jmp
mov
div
fisub
fild
dec
ss
xlat
sahf
sub
sub
push
dec
loope
mov
cmp
enter
push
push
in
sti
cdq
in
push
jle
retf
in
adc
push
sbb
jae
mov
pop
aam
or
loopne
and
pop
xchg
call
sar
jmp
scas
cmp
dec
xchg
les
mov
ins
repz
repz
cmps
push
fcmovnu
lahf
and
adc
push
xchg
out
mov
mov
mov
pop
jo
add
loope
and
stc
cwde
sub
dec
inc
aas
adc
test
mov
fbld
mul
mov
inc
sbb
push
into
(bad)
call
fs
gs
hlt
neg
retf
inc
int3
push
xchg
pop
pop
fnstcw
ret
add
loope
lahf
cmp
and
fwait
xchg
cmps
jg
mov
popf
ja
into
cmpxchg
(bad)
loopne
inc
sub
xor
fld
dec
mov
aas
lds
mov
popf
xchg
out
aaa
cli
pop
jno
mov
jmp
lds
xchg
and
sti
enter
aad
jmp
loop
enter
pop
lods
mov
cmp
movs
ja
mov
xchg
nop
(bad)
push
stos
gs
cmp
pop
cmps
ficom
pop
out
shl
mov
mov
je
arpl
lock
dec
(bad)
scas
sbb
cmp
cmp
dec
imul
inc
(bad)
cmp
and
xchg
xor
inc
mov
mov
or
adc
xchg
in
mov
lock
adc
mov
and
dec
test
mov
mov
or
arpl
xchg
mov
rol
neg
add
in
loop
jb
xchg
in
xor
repz
sub
add
or
sbb
outs
jl
ss
retf
imul
pop
arpl
sbb
sub
mov
fwait
or
mov
xchg
mov
inc
test
and
xchg
nop
nop
dec
leave
fwait
jmp
fisubr
lahf
mov
pop
or
je
mov
jmp
sub
gs
cmp
add
mov
ja
jg
push
jmp
and
int3
cld
lock
jmp
adc
push
movs
and
mov
xor
movs
dec
pusha
fwait
push
retf
retf
daa
test
and
neg
in
dec
mov
mov
lea
dec
dec
and
jge
push
int
xchg
sahf
inc
adc
lds
inc
fwait
pop
sbb
je
ret
adc
and
dec
jmp
das
xchg
add
add
push
adc
mov
inc
dec
push
(bad)
jnp
xor
jae
rcr
push
mov
(bad)
pop
sub
inc
or
cdq
mov
aas
pop
mov
push
dec
sbb
inc
and
mov
mov
adc
in
loop
shl
mov
mov
push
fild
inc
in
add
xor
mov
add
gs
mov
loope
xchg
mov
loop
dec
arpl
stc
(bad)
or
cs
or
sbb
adc
shl
sbb
loop
xchg
sbb
mov
scas
pop
mov
test
cs
cmc
les
clc
fist
lods
stc
sub
add
fldenv
imul
xchg
lock
jl
leave
leave
push
xor
movs
sub
cs
mov
push
inc
stos
jl
(bad)
fcmovu
push
pop
ficom
shl
sbb
sub
jmp
push
add
xchg
aad
sti
adc
and
add
std
mov
ret
test
loope
push
add
dec
sbb
aas
scas
shr
push
pcmpeqd
loop
popf
push
sub
pop
rcr
dec
push
mov
push
aaa
or
lahf
mov
popa
jbe
js
push
dec
jb
lds
imul
loope
adc
out
ss
stos
loopne
into
dec
out
jl
push
dec
pop
dec
cli
mov
pop
es
rcl
mov
fsubr
dec
push
sbb
lods
enter
adc
xor
push
jo
or
mov
stos
out
imul
push
mov
xchg
mov
ret
mov
inc
jns
cmp
sbb
call
or
sub
and
sub
sub
jecxz
cli
mov
push
mov
xchg
pop
or
ror
movs
mov
scas
movs
xchg
or
fild
pop
inc
jmp
cmp
daa
cmp
mov
cmp
or
xlat
nop
adc
test
lock
in
adc
ss
dec
cmps
cmps
ja
adc
call
cmp
dec
sbb
push
mov
adc
cmp
cwde
xlat
fwait
scas
pusha
cld
(bad)
scas
loopne
or
(bad)
lahf
enter
inc
mov
xchg
jne
cmp
pop
and
pop
sub
shl
adc
out
xchg
cmp
out
sahf
pop
fadd
mov
scas
pop
test
xor
mov
dec
cmp
or
fnstsw
nop
dec
ins
and
xchg
ins
test
mov
cmps
and
and
and
rcr
xor
cmp
adc
ficom
mov
popa
inc
pop
cmp
push
ds
push
les
lods
pop
push
fmul
cmp
jns
mov
bound
das
or
adc
xchg
das
lahf
or
push
aam
fadd
adc
int
sub
out
mov
adc
in
adc
xchg
or
xor
test
push
clc
and
push
push
idiv
sbb
fnstsw
add
push
stc
dec
stos
pop
jg
jl
call
pop
xchg
cs
and
(bad)
jmp
(bad)
cmc
pusha
xchg
stos
sahf
daa
lock
(bad)
je
mov
mov
xchg
pop
xor
fs
aad
xchg
or
in
fwait
icebp
int
pusha
add
push
sbb
psubusw
mov
push
jmp
aas
add
cwde
popf
jge
scas
jo
std
mov
in
clc
xor
scas
ins
jne
lahf
cmp
cmp
popf
cdq
pop
cwde
push
adc
es
fisub
loopne
inc
out
stc
xchg
pushf
or
call
xchg
movs
call
jecxz
sub
dec
jp
or
sti
sti
retf
cwde
call
ss
ins
cmp
mov
lahf
int
and
les
cmp
outs
pop
stos
push
gs
adc
jne
(bad)
lods
repnz
outs
cmp
dec
fist
jo
and
repnz
pop
jne
and
push
pop
aad
mov
adc
sbb
adc
fld
push
mov
jns
jae
pop
ja
push
mov
pusha
push
lock
inc
sub
add
hlt
aad
mov
dec
ds
cmp
sub
lds
mov
cmps
aad
retf
pop
push
push
frstor
xchg
xor
push
dec
leave
in
adc
dec
gs
retf
bound
leave
cmp
jns
rol
sti
js
adc
sbb
inc
sbb
lds
loopne
adc
test
xchg
jne
mov
outs
data16
test
pushf
sbb
mov
js
adc
sahf
sbb
inc
fst
mov
and
adc
scas
retf
ret
mov
add
sti
sbb
xchg
add
push
mov
push
psubusw
pop
mov
xchg
jmp
scas
jbe
xor
daa
call
fstp
retf
mov
sbb
lahf
mov
ror
cs
mov
xchg
aam
mov
mov
lds
jp
adc
adc
enter
cli
pop
sbb
loope
push
test
cli
pop
inc
cdq
fisttp
jge
push
pop
shl
xchg
hlt
repz
pop
push
pushf
push
xor
out
ror
rol
push
and
leave
aad
aad
out
sbb
fcomp
test
sub
out
pop
dec
fstp
fmul
add
rcr
xchg
fcom
jno
and
adc
jecxz
jl
add
mov
mov
movs
das
pushf
xchg
in
mov
out
div
push
les
jne
mov
adc
fwait
iret
stos
aam
mov
(bad)
(bad)
aaa
ss
dec
fcom
cli
xor
jmp
mov
push
cmp
xchg
push
push
retf
xor
pop
int3
sbb
hlt
cs
mov
sub
sub
fdiv
or
mov
clc
ret
shr
cmp
les
aaa
test
pop
add
mov
inc
into
sbb
sub
and
jp
adc
xchg
jmp
mov
or
and
dec
movs
imul
jnp
dec
call
shl
out
(bad)
loopne
sbb
push
jl
mov
jne
lea
fwait
adc
mov
and
and
pop
push
adc
jnp
sub
mov
add
loopne
xchg
inc
and
cmp
pop
dec
out
test
movs
stos
fwait
shl
in
daa
out
shl
or
loopne
loopne
push
lods
lds
or
mul
xor
push
and
fstp
mov
in
mov
ja
ror
iret
cmp
pop
imul
loope
ss
add
sbb
lds
fild
xchg
push
(bad)
iret
test
test
fwait
add
sub
out
mov
hlt
jmp
fwait
fwait
sbb
scas
mov
xchg
jmp
in
fwait
inc
push
sub
mov
mov
pop
ror
(bad)
(bad)
fdivp
aad
pop
mov
dec
(bad)
ret
cli
cli
adc
(bad)
sti
and
xor
xor
mov
jae
inc
jbe
cmp
test
fld
xchg
xor
mov
lods
cmp
cmp
cmps
outs
rcr
(bad)
mov
out
scas
add
jno
adc
adc
cmp
push
es
pop
push
pop
jmp
dec
cmp
not
mov
push
mov
(bad)
jmp
mov
or
lods
jecxz
fsubr
xor
and
out
ds
jp
push
jecxz
dec
pop
sub
enter
js
or
and
pop
jo
push
in
xchg
sub
outs
nop
cld
aaa
sbb
stos
push
push
idiv
aad
mov
add
ins
dec
pop
push
jp
push
std
test
and
repz
setnp
fnstenv
(bad)
sti
outs
bnd
hlt
mov
cmp
sub
cmp
aaa
mov
cmp
daa
mov
or
mov
sbb
mul
add
dec
mov
mov
jnp
and
rol
pusha
sub
sbb
ror
and
inc
mov
cmp
(bad)
cmp
imul
std
pmullw
push
cmp
pushf
je
(bad)
cmp
mov
cli
push
fldcw
ja
mov
out
sbb
cmp
mov
test
pop
int3
js
mov
jae
mov
or
sbb
(bad)
shl
in
ja
stc
leave
and
or
pusha
outs
or
mov
xchg
cmp
jns
mov
cli
rcr
ins
inc
add
and
aad
call
cmc
ret
fs
pop
stos
xchg
add
or
xchg
out
sbb
mov
into
and
aaa
adc
sbb
sub
hlt
ins
ficom
int3
jg
mov
lods
popa
push
cmp
in
pop
cmp
jg
push
(bad)
ja
xor
nop
sbb
xor
scas
dec
dec
ret
scas
and
loope
mov
pop
rcr
stos
mov
out
mov
xor
adc
jns
dec
cld
dec
ror
xor
mov
popf
iret
xchg
cmps
push
mov
fs
inc
ins
daa
mov
add
mov
xor
lock
cmp
sbb
es
xor
adc
pop
fsin
cld
mov
shl
rcr
fisubr
sub
ss
jo
mov
pop
jmp
or
cmp
jle
push
loopne
mov
cmp
idiv
cmps
rcl
or
fsubrp
outs
mov
and
outs
mov
mov
push
(bad)
addr16
pop
push
mov
pop
std
pusha
push
std
imul
xchg
fidivr
popa
pop
out
iret
jb
scas
cmp
(bad)
shl
fldenv
pop
fisttp
sti
scas
mov
and
xchg
es
(bad)
adc
or
jle
stos
mov
cmp
je
out
ret
jns
lea
icebp
jg
jno
popf
cmp
mov
jl
adc
imul
pop
xchg
(bad)
xlat
or
jp
outs
push
ror
mov
and
push
jbe
loope
push
fdivr
push
test
test
jmp
retf
mov
sbb
adc
jae
out
pop
jno
adc
sbb
int
jnp
and
xchg
mov
pop
je
and
je
pop
int
lods
or
mov
rcr
add
mov
mov
cmp
sbb
adc
or
jmp
xchg
popf
sbb
lea
(bad)
mov
(bad)
pop
cmps
cwde
and
clc
jae
jge
scas
push
add
mov
jge
mov
jp
add
aam
out
outs
stos
mov
(bad)
mov
cdq
retf
mov
stc
out
add
in
cdq
ins
sub
movaps
push
xor
lahf
push
and
fisubr
std
and
cmp
lea
(bad)
sahf
loope
jp
outs
adc
dec
aaa
fdiv
pop
push
push
ret
cs
aam
ins
rcr
lock
or
(bad)
dec
push
jp
mov
xor
inc
cmp
pop
jmp
rcl
jle
(bad)
seto
push
aaa
sbb
jae
xchg
push
aaa
mov
add
add
retf
adc
ss
push
add
mov
mov
and
add
cwde
iret
pushf
mov
xchg
add
or
leave
ins
jmp
aad
mov
inc
adc
and
std
stos
shr
adc
lods
sbb
add
sbb
fucom
jmp
mov
adc
scas
out
fdivr
and
pop
lods
pop
inc
shl
push
aas
test
inc
and
repz
mov
sti
xchg
xchg
sahf
jg
jge
fdiv
mov
dec
xor
je
and
adc
call
out
lahf
mov
icebp
stos
add
cmc
xchg
fidivr
pop
mov
jle
fdiv
push
aas
ja
ins
sbb
hlt
stos
inc
fnsave
adc
pushf
mov
xchg
imul
ret
jo
jbe
sub
lods
lds
push
enter
or
mov
test
sub
push
ja
or
arpl
lods
adc
cmc
push
imul
daa
test
data16
(bad)
arpl
test
cmp
adc
lods
sbb
in
(bad)
xchg
mov
call
or
or
mov
clc
imul
mov
sub
pop
jle
dec
out
out
jns
sbb
or
rcl
neg
pop
shl
sbb
outs
cmp
cmp
fadd
or
mov
xchg
pop
pop
iret
push
std
divps
and
(bad)
pushf
add
fwait
das
(bad)
rcr
push
push
mov
pop
pop
loop
dec
outs
aaa
lock
in
movs
jae
mov
dec
aas
pusha
shl
jbe
je
xchg
inc
and
push
in
ss
aaa
pop
mov
xchg
nop
jo
add
mov
xchg
imul
sbb
sub
daa
shl
mov
sub
add
test
mov
jg
das
ins
and
scas
dec
test
out
and
in
imul
in
(bad)
iret
fwait
pop
mov
out
xchg
or
or
inc
push
pop
and
cmp
jb
sbb
push
pop
pop
pop
ror
adc
pop
shr
cmps
push
pop
fmul
push
popa
cld
pusha
repz
fcomi
movs
test
add
xor
pop
push
mov
push
ret
fidivr
imul
std
and
(bad)
xor
add
(bad)
je
mov
xlat
sbb
(bad)
jge
rcl
cdq
cmc
add
and
jns
mov
mov
dec
xor
enter
cmp
push
pop
je
imul
sar
movs
mov
sbb
test
scas
sbb
test
iret
retf
sti
int
shl
aas
sub
loope
xor
cmp
cmp
stos
push
jmp
ret
mov
jge
dec
(bad)
jecxz
pop
xchg
lock
mov
jg
nop
scas
sti
pop
push
mov
inc
pop
jg
xchg
and
dec
aaa
mov
mov
rol
cmp
dec
in
ds
lods
shl
xlat
jp
and
imul
into
mov
shr
xlat
fsub
inc
les
rol
sbb
lock
mov
or
or
cli
push
xchg
fcom
or
mov
adc
ret
(bad)
out
and
push
test
cwde
pop
mov
pop
xchg
loopne
mov
xor
test
pop
push
out
iret
loope
sbb
adc
ds
or
jbe
cmp
les
test
(bad)
into
and
repz
daa
enter
cmp
or
mov
leave
mov
pushf
sub
inc
pop
cld
xor
repnz
mov
sar
leave
xor
stc
or
int
cwde
out
inc
ins
add
iret
or
popf
(bad)
das
cwde
cmp
(bad)
(bad)
sbb
fchs
aas
test
int
jns
aad
push
movs
cld
ret
hlt
and
outs
xor
popa
lahf
in
fcmovb
cs
fcom
pop
sti
cmp
push
mov
out
mov
add
sbb
push
sahf
les
nop
out
bound
out
and
inc
pop
xor
xchg
or
je
(bad)
(bad)
push
scas
call
ror
(bad)
mov
popa
out
xor
mov
sbb
sbb
(bad)
(bad)
rcr
fst
fcomi
adc
xor
dec
inc
inc
sub
nop
sub
add
dec
stc
xchg
dec
in
enter
std
shr
xchg
jecxz
mov
xor
rol
out
pop
and
dec
test
neg
ins
mov
rcl
lahf
movs
sbb
(bad)
jge
add
sub
pop
push
mov
mov
xchg
xor
jne
inc
inc
push
cmp
add
xchg
es
ja
cmp
inc
or
cld
das
int3
mov
loopne
popa
and
fidiv
cmps
xchg
mov
ins
push
das
retf
sar
mov
out
nop
loop
xor
and
aas
fwait
mov
lods
shr
daa
cli
push
(bad)
fild
loop
sub
sbb
sub
(bad)
mov
out
mov
test
ins
es
outs
mov
xor
cmp
mov
shl
sub
gs
sbb
mov
fldcw
(bad)
jns
fsub
push
xor
rcl
test
mov
fisub
mov
aaa
mov
jl
jl
mov
scas
jp
sbb
mov
pushf
sbb
(bad)
sub
lods
xchg
push
das
push
fdiv
popf
push
sahf
and
push
icebp
(bad)
jl
sahf
in
xlat
gs
xchg
lods
test
add
repnz
xchg
xchg
dec
rcr
cmp
jnp
lds
pop
popa
scas
jge
js
pushf
xor
adc
inc
xchg
test
sbb
out
aad
pop
loope
jno
test
add
imul
shr
inc
stos
mov
jne
jl
inc
int3
push
add
mov
mov
dec
ret
mov
mov
adc
or
repnz
cmps
add
neg
ret
sbb
fadd
repz
inc
sbb
add
push
imul
jmp
mov
loopne
arpl
pop
xor
mov
mov
xor
and
pop
inc
adc
jp
jmp
jle
sbb
jl
mov
fucomp
mov
and
sub
mov
std
push
pop
cwde
mov
sub
mov
ins
xor
sub
or
pop
clc
mov
test
ds
jbe
cdq
add
cld
xchg
and
and
enter
cmp
jge
pushf
pop
cmps
cmc
neg
popf
push
push
cmp
jno
fstp
cmps
cwde
and
hlt
inc
push
push
sub
ror
lods
sub
rol
inc
jecxz
sti
mov
mov
mov
(bad)
repz
jg
and
dec
fucomip
jmp
inc
mov
and
sub
adc
xchg
(bad)
mov
cmc
jae
xor
push
pop
inc
mov
jle
clc
(bad)
dec
imul
sub
xor
add
dec
test
mov
sbb
xchg
repz
xchg
stc
mov
pop
mov
sub
xchg
mov
mov
(bad)
xchg
mov
pop
js
xchg
and
xlat
ins
(bad)
mov
xchg
stc
xchg
sbb
dec
aaa
mov
mov
repnz
cmc
lods
rcl
sub
cwde
fld
rol
inc
sub
xor
or
fs
ss
ror
movs
call
ss
loopne
and
mov
sub
addr16
push
adc
std
int3
sbb
inc
jge
arpl
dec
jl
inc
inc
aaa
jbe
cwde
xchg
add
xor
(bad)
std
das
xor
pop
pop
bound
sbb
jnp
aam
mov
ss
add
jecxz
aas
ins
in
sub
pop
fldcw
in
stos
mov
jno
rcl
add
lock
lahf
xchg
pop
jmp
xchg
inc
dec
xchg
fsub
mov
push
shl
gs
xchg
sub
out
sar
les
(bad)
xchg
clc
jne
je
cmc
(bad)
aam
mov
cmp
jae
mov
jnp
call
inc
fnstenv
mov
or
fimul
add
arpl
icebp
inc
cmp
or
sti
icebp
cdq
in
xor
arpl
mov
push
pop
loope
push
data16
jo
cld
addr16
mov
lods
nop
jne
je
aad
sbb
cmps
and
and
test
bnd
cli
or
mov
fs
cmp
add
in
and
(bad)
out
mov
push
push
push
std
sbb
loop
scas
adc
leave
or
sub
imul
aas
sub
inc
mov
test
aas
adc
shl
pop
xchg
push
jmp
mov
iret
pushf
adc
aas
adc
out
(bad)
xchg
xchg
cmp
mov
loopne
and
scas
add
pop
add
jecxz
out
add
adc
nop
jmp
popa
mov
ss
adc
dec
dec
imul
push
jmp
ss
push
in
movs
sti
xchg
out
push
pop
aad
sub
arpl
retf
xor
sub
not
(bad)
retf
push
movs
movs
cmp
lock
pop
sub
cmp
retf
mov
jb
inc
call
xlat
add
fcmovb
pop
lahf
push
imul
(bad)
push
sub
sub
(bad)
jp
cmp
pop
aaa
pusha
xor
test
pop
not
in
mov
pop
movs
ror
das
out
fistp
aad
pusha
add
sub
push
cli
outs
(bad)
and
add
cmp
inc
leave
sbb
rol
fdiv
call
fsub
sub
pop
into
aam
aam
daa
dec
sub
out
(bad)
mov
arpl
sbb
mov
cli
pop
leave
cli
call
ud2
shr
add
aad
xchg
call
cmp
ficom
or
add
int3
pop
bound
mov
repnz
inc
mov
(bad)
add
jne
jmp
cdq
fwait
xor
cmp
je
rcr
and
mov
push
mov
stos
jbe
mov
lea
scas
xor
add
shl
cmps
mov
stc
fiadd
rcr
jecxz
dec
in
adc
sub
loopne
or
mov
ss
loop
popf
leave
cmps
pop
std
fs
cmp
in
inc
rcl
mov
jbe
fild
xor
idiv
retf
test
scas
lods
das
jge
xor
sub
xchg
mov
cmp
pop
push
retf
and
fnstenv
inc
cmp
mov
or
sub
cwde
je
sti
in
push
jbe
mov
repz
mov
(bad)
neg
mov
jo
push
mov
adc
movs
push
les
mov
stc
cwde
sti
out
mov
inc
jnp
pop
inc
sub
fldcw
dec
mov
jo
push
ds
mov
mov
popa
call
inc
lock
cmp
fimul
fwait
cmp
inc
xor
mov
fwait
push
add
cmp
push
jecxz
stos
sbb
movs
dec
xor
mov
out
rcl
in
dec
lock
fwait
in
sbb
fs
xor
sbb
add
cmp
push
xor
enter
xchg
cwde
les
mov
hlt
in
call
sbb
jg
adc
movs
sbb
dec
call
inc
fucompp
or
push
inc
aad
inc
dec
call
dec
pushf
push
adc
(bad)
fnsave
popa
mov
addr16
cld
call
jns
jg
mov
fimul
dec
jo
dec
cwde
adc
mov
in
xchg
out
xor
mov
jo
cmp
(bad)
or
cld
test
sti
mov
xor
test
std
pop
scas
jecxz
mov
sbb
inc
or
or
jnp
outs
add
stos
add
and
jns
add
cmps
jge
enter
xchg
int3
jns
mov
xor
out
push
pop
sub
inc
dec
xlat
stos
cmp
push
mov
iret
or
add
jo
cwde
pusha
mov
adc
cmp
lods
dec
add
je
push
iret
inc
sti
push
movs
arpl
rcr
adc
mov
dec
mov
push
dec
pop
aas
mov
(bad)
dec
mov
xor
movs
in
rcr
or
outs
(bad)
cld
mov
inc
cs
inc
mov
mov
arpl
ret
mov
mov
aaa
xlat
ins
jp
jp
mov
cmp
fnstsw
cdq
push
sub
scas
push
in
and
enter
mov
adc
mov
or
into
push
leave
xchg
or
sbb
ins
push
mov
dec
sbb
jae
leave
movs
jecxz
out
loop
fstp
dec
push
or
jb
rol
(bad)
mov
mov
push
pop
push
jl
bound
call
sub
mov
push
or
sbb
xchg
lods
mov
popf
cmps
test
mov
inc
daa
mov
fcmovnbe
xor
fidivr
sbb
sub
lahf
ins
test
popf
movs
mov
or
push
movs
sbb
ret
adc
icebp
xor
push
das
rol
popf
nop
ds
jne
sub
xor
mov
mov
outs
sub
mov
adc
xchg
fs
push
pop
mov
push
and
idiv
push
ds
jnp
cmp
(bad)
faddp
adc
std
sbb
pop
scas
xlat
das
adc
repz
scas
addr16
or
cmp
and
movs
dec
aad
loope
jp
(bad)
mov
and
lea
push
in
repz
imul
cli
sbb
les
mov
pop
mov
loop
arpl
xor
imul
and
lds
bound
mov
adc
loope
icebp
push
push
add
fcomp
cli
pop
pop
xchg
nop
test
je
xchg
cmovg
jo
xor
and
inc
fwait
scas
daa
dec
inc
push
int
fcomp
iret
mov
add
cmps
adc
mov
and
jns
outs
data16
(bad)
popf
jo
sahf
mov
test
add
pusha
ja
retf
inc
xor
daa
imul
ret
jb
sysenter
mov
pop
and
pop
in
bound
sbb
fsubrp
cwde
mov
xchg
scas
xor
jg
loop
int3
in
adc
mov
lea
test
sahf
rcl
mov
dec
pop
(bad)
and
mov
mov
pusha
mov
jge
xchg
test
push
mov
mov
add
sbb
push
das
xchg
xchg
imul
add
icebp
aam
imul
mov
sbb
sahf
stc
mov
inc
lahf
cmps
mov
add
lahf
in
pop
(bad)
ja
outs
clc
call
mov
sub
lahf
pop
jl
pop
and
cmps
cld
pop
inc
sub
sbb
push
mov
sub
fstp
jne
pop
fsub
push
cwde
int
sahf
out
push
xor
sbb
push
scas
and
mov
lods
mov
sbb
cmps
mov
stos
push
into
push
popf
cdq
scas
cwde
stc
or
jmp
add
sub
push
adc
inc
or
and
fs
jmp
xchg
fisubr
fs
outs
xor
ret
cmp
xor
mov
dec
mov
xchg
xor
mov
out
add
mov
iret
inc
fwait
retf
fild
xchg
cmp
mov
call
and
in
xor
mov
cdq
cmps
pop
push
fwait
cmp
dec
loope
ja
outs
out
(bad)
and
into
pop
outs
mov
xor
pop
dec
enter
aad
sbb
adc
retf
mov
sub
jl
nop
sahf
mov
repnz
cmc
adc
cmc
add
cmp
push
dec
mov
aad
xlat
repz
mov
(bad)
mov
and
std
jge
xchg
mov
mov
iret
jnp
mov
test
and
adc
scas
xor
test
ret
into
pushf
inc
repz
scas
xchg
es
mov
mov
mov
xor
stos
mov
or
or
(bad)
ret
mov
neg
add
cmp
cdq
jb
inc
push
out
xlat
cmp
fadd
add
lods
cmp
mov
retf
sbb
pop
xchg
in
ja
(bad)
fisub
ins
(bad)
rcr
pop
popa
pop
push
(bad)
rcr
push
popa
mov
push
dec
xchg
or
hlt
out
or
push
int
pop
dec
mov
retf
retf
(bad)
jbe
dec
icebp
xchg
scas
adc
stos
cli
adc
adc
cmp
cmp
add
ins
jmp
loope
add
mov
mov
or
cmps
or
imul
ins
mov
into
mov
dec
mov
mov
cmps
jmp
jg
pop
jecxz
inc
jecxz
int
xor
or
push
std
jns
xor
pop
sbb
clc
mul
test
sub
in
inc
cdq
movs
sub
les
in
jb
sub
push
pusha
mov
jp
jae
add
dec
dec
pop
pop
xchg
adc
hlt
outs
in
adc
arpl
inc
push
jp
into
cli
movs
popa
out
or
sbb
mov
sbb
sti
aaa
push
adc
and
adc
cmp
cmp
and
push
sub
mov
jl
mov
cmp
mov
(bad)
sub
loope
out
sub
mov
inc
in
fidivr
arpl
hlt
loop
xchg
xor
into
jns
mov
dec
out
frstor
push
sti
inc
push
mov
aad
imul
pop
adc
(bad)
nop
jae
sub
xchg
rcr
(bad)
mov
mov
je
cmp
xor
cmp
fimul
test
iret
adc
adc
cmp
lods
jmp
or
into
in
or
ins
jmp
imul
(bad)
inc
leave
dec
mov
sti
lahf
mov
pusha
aas
xchg
in
sbb
mov
leave
jge
xchg
cmp
mov
ret
sar
sub
mov
inc
jg
scas
pop
out
add
aam
les
add
jne
push
stos
pop
add
sub
std
push
ss
test
sbb
repnz
fwait
add
fwait
lahf
fdivr
mov
xchg
aam
and
mov
mov
push
fild
mov
push
adc
jp
cmps
pop
pop
pop
lods
sub
cmp
jb
test
stos
popf
ret
cmp
mov
ss
mov
push
les
xchg
arpl
xor
popf
dec
ins
jecxz
inc
xchg
cmp
adc
fcomp
hlt
call
mov
mov
(bad)
xchg
mov
stc
jo
std
xchg
mov
(bad)
jmp
pop
xchg
jnp
xchg
inc
xor
out
xchg
mov
dec
pop
(bad)
cmp
push
test
(bad)
retf
mov
push
mov
daa
mov
mov
inc
mov
cdq
aam
push
jne
mov
mov
pop
das
fwait
test
jb
add
mov
pop
xchg
jo
xchg
sbb
popf
cmp
(bad)
jae
imul
pop
jg
(bad)
out
jmp
into
xor
enter
cmps
jle
cmp
pop
mov
xlat
call
daa
rcl
dec
inc
pop
cmps
or
imul
popa
test
mov
aad
mov
fwait
bsf
icebp
(bad)
fcmovnb
push
push
xchg
sub
std
fstp
data16
aaa
lsl
gs
icebp
call
adc
or
es
pop
scas
mov
cmp
scas
(bad)
sub
mov
xchg
jnp
inc
jg
int3
je
loope
pop
jle
and
xor
dec
jg
xchg
push
ja
gs
lea
shl
call
shl
(bad)
movs
dec
adc
pop
inc
add
pop
movs
(bad)
jecxz
je
xor
addr16
push
or
in
jmp
push
imul
cmp
loop
ins
xchg
movs
lea
je
mov
jmp
int
retf
or
enter
into
movs
lods
or
or
xchg
inc
fimul
pushf
stos
dec
mov
mov
in
stos
jl
not
jge
fistp
cs
(bad)
adc
int
push
pop
adc
das
push
mov
push
sub
jae
scas
pop
jmp
ins
sub
js
push
push
int
xor
mov
adc
mov
ins
sbb
(bad)
fdiv
xor
push
mov
jb
aam
mov
dec
jno
sbb
rcr
jl
mov
dec
lock
add
aas
retf
adc
mov
out
cmps
mov
cld
sbb
cld
cmp
inc
out
jg
and
into
add
ins
ins
inc
adc
xchg
pop
cmp
(bad)
sbb
stc
test
in
cld
cmp
enter
aaa
and
mov
inc
or
mov
rcr
imul
pop
mov
or
mov
xor
xor
cmp
xor
pop
cmps
rcl
dec
das
dec
inc
push
cmps
imul
cmp
lods
push
push
or
push
add
fneni(8087
fistp
xchg
cmp
jae
xor
enter
and
leave
sub
xor
mov
push
mov
leave
xor
cmc
mov
js
lds
adc
inc
sbb
push
cmp
int
inc
or
mov
sahf
sbb
fstp
lea
add
adc
cmp
add
fdiv
jbe
scas
and
aad
les
xor
(bad)
dec
out
into
sbb
jnp
rcl
jge
and
fidiv
mov
gs
pop
push
push
add
push
mov
inc
(bad)
cs
fxch
pop
push
xor
mov
cs
pop
inc
sub
mov
iret
inc
pusha
lahf
or
test
sub
lea
fstp
int
(bad)
cmp
xchg
in
cmc
pop
jno
or
push
pop
push
sub
inc
push
mov
ret
mov
add
xor
xlat
push
push
je
test
pop
push
inc
cmp
and
retf
pop
or
std
pushf
ret
popf
repz
jae
xchg
clc
retf
add
fsubr
out
inc
ins
mov
sbb
(bad)
fisub
sbb
stos
mov
xor
stos
pusha
jo
(bad)
test
pop
adc
push
cmp
fnstsw
repnz
jl
xchg
mov
dec
adc
cs
xchg
stc
bnd
fnsave
test
add
mov
xchg
mov
cli
pop
push
sbb
pop
mov
bound
xchg
sbb
fistp
inc
xchg
adc
cs
sub
sbb
lds
mov
ja
mov
js
sbb
add
jp
cmp
push
pop
dec
mov
lar
iret
or
push
sub
push
sub
mov
repz
inc
mov
movs
and
inc
pop
and
lods
cmp
dec
sar
xor
cmc
out
adc
int3
pop
dec
add
test
xchg
add
add
mov
jle
and
ret
icebp
and
mov
aas
stos
test
pop
shl
retf
jo
cmps
or
fsubr
mov
mov
dec
lock
pop
add
iret
std
int3
aaa
bound
xor
aas
xor
jnp
add
popf
mov
cld
out
cmps
cmps
sbb
addr16
push
mov
mov
lea
stos
or
cmp
mov
pop
bound
dec
pop
cmp
cdq
or
sub
mov
call
aaa
sbb
push
push
mov
mov
inc
xlat
imul
sbb
(bad)
and
mov
or
cli
adc
shl
call
rol
push
std
mov
mov
jmp
mov
push
addr16
mov
ror
adc
scas
cdq
pushf
sub
leave
push
jl
sub
inc
sub
fsubrp
adc
push
std
repz
xor
loope
xchg
sbb
xchg
cmp
pop
pop
fmulp
or
nop
aaa
faddp
stc
lds
pop
lahf
mov
pop
test
inc
pop
mov
jl
add
movs
(bad)
and
aas
test
scas
cdq
mov
pop
jns
fnstsw
mov
or
ja
and
les
add
xlat
pop
bound
jg
sub
jne
xlat
lock
scas
sbb
out
lea
fimul
push
xchg
fisub
pop
js
push
cmp
std
dec
dec
retf
inc
cmp
ret
xor
fistp
lods
jns
and
icebp
call
mov
jecxz
sahf
ja
mov
ins
lea
cli
add
cmp
mov
mov
(bad)
(bad)
sub
mov
xchg
mov
dec
adc
push
lock
or
(bad)
in
and
mov
inc
and
and
or
cwde
sbb
(bad)
rol
fsub
cmp
push
mov
pop
(bad)
lock
sbb
(bad)
fwait
mov
adc
mov
xchg
fldenv
ss
leave
das
or
sahf
loopne
imul
jo
push
and
fs
and
push
mov
imul
mov
jne
rep
cdq
sbb
setbe
fsub
and
add
push
gs
mov
add
in
cmp
push
lds
xchg
jmp
std
dec
pop
mov
xor
sahf
jle
sub
adc
adc
sub
fwait
test
adc
mov
retf
retf
add
pushf
(bad)
push
add
stc
(bad)
or
push
test
addr16
mul
mov
iret
mov
and
imul
sbb
push
and
add
stc
push
ret
pop
pop
popf
sbb
movs
and
xchg
out
add
jb
(bad)
out
(bad)
adc
outs
mov
dec
mov
call
or
lock
inc
mov
(bad)
stos
dec
mov
aas
ja
imul
adc
xchg
scas
push
push
call
or
dec
outs
(bad)
imul
or
mov
pop
xor
cmp
dec
hlt
mov
xchg
out
jle
mov
xchg
push
mov
cdq
test
dec
fsub
adc
int
and
data16
ins
ja
(bad)
pop
mov
sbb
cmp
pop
outs
lods
push
push
jnp
leave
sbb
sub
xchg
ins
addr16
fs
(bad)
jns
sub
lea
and
imul
mov
loopne
adc
(bad)
lock
in
inc
sbb
mov
outs
xor
stc
dec
pop
adc
pusha
ins
in
cmps
fs
inc
cmp
call
push
add
out
xchg
mov
jmp
adc
and
int3
ficom
sbb
sbb
cs
mov
mov
cmp
sub
xor
cmp
mov
pop
or
(bad)
sub
retf
jno
aaa
out
rcl
cmp
lods
push
pop
sub
and
jecxz
inc
cmp
cmp
mov
fisub
jp
or
js
cmp
cli
or
jmp
pop
mov
test
and
sbb
inc
leave
pop
lods
adc
and
fnsave
xchg
dec
add
fwait
add
test
arpl
mov
jmp
cs
mov
in
outs
sub
js
int3
push
rcr
ror
mov
sub
cmp
call
les
jns
jo
div
push
not
ficom
rcl
es
ja
adc
or
(bad)
pusha
in
fidiv
call
mov
movs
jge
sub
cdq
int
retf
outs
dec
sbb
ss
inc
push
push
mov
and
(bad)
scas
or
mov
pushf
mov
sbb
hlt
sub
(bad)
test
pop
push
in
xchg
dec
lea
mov
or
ret
leave
sbb
into
out
movs
aas
popa
push
cmp
scas
ret
movs
es
mov
adc
das
hlt
pop
sbb
xchg
and
mov
retf
or
push
mov
fsubr
test
test
call
pop
lea
mov
xor
stos
adc
in
mov
adc
out
jge
push
out
sahf
movs
pop
sbb
out
mov
sbb
dec
fcmovnbe
daa
lahf
mov
pusha
push
jbe
cmp
or
fmulp
xchg
jg
mov
inc
mov
gs
imul
xor
sbb
(bad)
mov
xor
std
inc
mov
jl
idiv
les
and
test
cmc
add
into
push
iret
adc
push
in
test
sbb
sti
xchg
dec
fmul
sbb
pusha
mov
xlat
mov
aam
xor
cli
stc
mov
xchg
jl
cmp
iret
pushf
dec
daa
add
push
pop
inc
and
hlt
or
daa
ss
out
pop
mov
js
push
stos
into
sub
xor
sbb
sbb
push
pusha
lock
jp
add
imul
(bad)
outs
int
adc
mov
js
mov
add
xor
mov
add
(bad)
jmp
cdq
add
lea
xor
cmp
push
movs
inc
jns
js
inc
add
add
or
sub
sub
cwde
cmc
aam
fcomip
sub
mov
push
pop
mov
xor
jecxz
inc
push
mov
loop
push
cmps
hlt
jno
lock
dec
mov
ins
test
dec
jge
mov
in
inc
fcomp
and
mov
xor
aad
inc
xor
ins
sbb
data16
cmp
jbe
xchg
ret
cmps
fdiv
add
dec
dec
push
out
inc
ja
and
retfw
pusha
jb
loop
push
push
scas
inc
xchg
(bad)
(bad)
lahf
aam
xor
pop
sbb
sahf
into
or
and
cmc
inc
daa
je
sub
test
inc
sbb
dec
fnsave
sbb
push
bound
sub
dec
add
shr
aas
jo
jae
aad
mov
mov
jo
clc
inc
scas
aas
or
mov
adc
fisubr
jp
adc
bound
into
lods
dec
mov
in
jle
repnz
js
inc
test
jae
ins
gs
lea
das
aam
cli
mov
mov
adc
scas
mov
lock
inc
cmp
in
sbb
aam
mov
pushf
mov
xchg
retf
cmp
inc
push
pusha
daa
gs
xor
enter
jecxz
inc
xor
mov
adc
shl
sub
call
jb
daa
mov
int3
hlt
enterw
lds
xlat
xlat
mov
sub
out
add
mov
daa
test
adc
sbb
and
mov
ins
loope
scas
fcom
dec
jle
scas
push
mov
pop
out
sub
hlt
jl
std
dec
int3
in
sub
mov
inc
pop
ja
push
loop
jmp
jg
xchg
push
xlat
sub
dec
dec
in
sub
sbb
pop
sub
addr16
and
add
or
adc
jns
lock
inc
jne
mov
mov
push
(bad)
dec
jno
cmp
mov
mov
cmp
cmps
pop
xor
int
cld
test
push
test
add
retf
ja
call
and
rol
test
dec
cdq
std
sbb
rcl
loopne
mov
jnp
pop
scas
sub
mov
dec
pop
mov
dec
bound
push
adc
add
sub
mov
enter
xchg
xchg
sbb
repz
adc
(bad)
jge
out
jle
mov
and
mov
push
jmp
ja
ret
adc
pop
std
js
fdivp
dec
cmc
and
add
mov
sub
ja
dec
cmp
(bad)
pop
adc
pop
inc
mov
sub
movnti
lock
sub
jno
mov
leave
test
cmp
inc
ins
test
or
out
pusha
mov
pop
xchg
and
das
pushf
aas
xchg
xor
idiv
mov
xchg
fxch
pusha
pop
xchg
mov
out
and
adc
dec
mov
adc
dec
outs
movs
xor
adc
test
mov
mov
xchg
xor
mov
fs
cwde
jmp
pop
and
sub
imul
add
mov
popa
mov
in
cmc
popf
arpl
xchg
xchg
out
fsubr
add
adc
push
ja
imul
retf
retf
add
mov
xchg
fistp
ret
xchg
ss
jb
dec
add
sub
dec
fcom
push
movs
add
jg
ins
pop
push
leave
pop
and
sub
dec
mov
pop
sub
js
cmp
push
in
push
into
jns
cmp
or
cdq
fdivr
das
(bad)
arpl
fsubr
clc
loope
mov
sbb
add
fld
dec
jecxz
aam
into
test
cdq
bound
inc
jl
pop
jle
sub
or
cmp
aas
aaa
mov
sbb
addr16
pushf
test
dec
les
cmp
cmp
mov
xor
xor
int3
jmp
repnz
mov
scas
or
and
pop
rcl
xchg
test
xor
push
fsub
and
(bad)
xor
leave
mov
push
push
icebp
mov
mov
das
cmps
adc
dec
in
adc
push
ds
inc
mov
std
push
mov
test
cmps
sahf
rol
xor
cmp
repnz
dec
xchg
sbb
xor
fsub
xchg
movs
push
scas
adc
mov
jg
loope
adc
xor
and
lods
dec
ss
sub
ret
inc
jb
pusha
stos
iret
pop
fldenv
jp
lods
xchg
ins
ror
xor
aaa
sub
sbb
int
push
icebp
mov
sub
cmp
sar
mov
cmp
jne
clc
adc
pop
lahf
js
dec
xlat
leave
popf
in
pop
loope
test
pushf
loop
xor
in
adc
push
pop
sbb
sbb
sbb
loopne
mov
pop
cwde
mov
mov
and
int3
adc
inc
into
sbb
popf
dec
mov
push
movs
or
inc
or
and
lahf
out
fwait
ja
push
aam
push
aas
test
rcr
xchg
retf
mov
push
int
fs
in
jmp
cmps
sub
fs
add
xchg
lock
and
movs
cli
loopne
pop
adc
push
ret
xlat
aaa
add
call
mov
and
fwait
lods
pop
(bad)
inc
xchg
jnp
fdiv
mov
or
jae
iret
jle
push
in
(bad)
add
xlat
jmp
loop
out
xchg
mov
inc
out
push
jb
arpl
fst
dec
inc
pop
dec
inc
das
xchg
cmp
xchg
push
movs
mov
add
adc
dec
icebp
mov
mov
push
pop
daa
pushf
mov
out
mov
xchg
retf
jb
and
aad
iret
int3
dec
nop
pop
pop
repnz
pop
lds
pop
mov
adc
cmps
jo
scas
(bad)
inc
call
outs
or
push
movs
loop
mov
popa
mov
inc
mov
jo
popf
push
pop
mov
nop
inc
scas
ret
test
fs
int
jp
mov
out
leavew
jl
inc
mov
scas
xor
in
mov
je
enter
mov
stos
(bad)
jbe
mov
call
mov
repz
shl
jne
shl
fild
fidivr
xchg
outs
and
jns
mov
adc
inc
cdq
cs
xchg
push
mov
sar
js
inc
push
or
xchg
nop
sub
pop
mov
cmp
aad
jle
inc
out
test
out
sbb
stc
fisub
push
sbb
inc
push
cmps
loope
inc
mov
dec
fadd
(bad)
imul
dec
sub
pop
arpl
cwde
xchg
movs
push
enter
push
mov
sahf
adc
lahf
mov
inc
outs
lock
xchg
mov
fwait
push
(bad)
rcl
mov
and
jmp
dec
shl
call
push
mov
pop
inc
inc
ins
pop
adc
add
pop
cli
and
jmp
outs
inc
ret
fldenv
dec
cmp
stc
enter
xchg
fwait
xchg
dec
out
or
cmp
jmp
pop
and
mul
xchg
inc
xor
pop
and
mov
dec
movs
mov
sub
mov
add
jns
js
xor
mov
les
or
clc
add
push
mov
std
xor
(bad)
jnp
xchg
or
hlt
int
mov
cld
aad
sub
jmp
mov
xor
xchg
push
popa
pusha
dec
push
add
add
daa
leave
or
mov
ret
in
fbld
and
ret
push
inc
jnp
test
adc
daa
je
fwait
je
cdq
rcr
pop
loope
je
fdiv
retf
loope
mov
mov
movs
out
xchg
(bad)
not
mov
jno
cwde
test
mov
lahf
sub
inc
stos
outs
mov
aas
adc
mov
iret
mov
xchg
int
sbb
fisttp
cmp
das
mov
pop
stos
mov
jns
inc
addr16
retf
mov
mov
xchg
inc
xchg
sbb
stos
xor
add
dec
neg
add
dec
cmp
sub
dec
dec
fs
or
pop
xor
inc
ins
and
stos
jge
cmps
xor
push
es
popa
cmp
sub
test
imul
pop
in
xor
push
int
pop
loope
push
inc
dec
aad
(bad)
mov
add
jg
or
in
loope
rol
ffreep
xlat
std
xchg
icebp
adc
xchg
popa
cdq
xchg
and
inc
outs
test
dec
mov
lods
(bad)
repz
jne
and
mov
jne
scas
lods
add
cli
pusha
inc
mov
mov
and
or
(bad)
adc
mov
rcr
movs
movs
inc
fild
jno
in
xor
and
sub
stos
aas
mov
inc
pop
cmp
call
into
(bad)
push
ja
icebp
or
stc
out
mov
ja
leave
bound
retf
loopne
push
inc
mov
jecxz
aam
int
jecxz
push
pusha
das
mov
push
ret
retf
mov
sbb
pop
jo
sbb
sub
cwde
arpl
fistp
mov
add
(bad)
outs
data16
sbb
sysenter
int3
mov
addr16
addr16
adc
je
sub
arpl
(bad)
and
jmp
pop
sbb
inc
dec
retf
or
push
xor
mov
mov
and
cdq
mov
(bad)
in
push
xchg
mov
mov
cwde
stos
arpl
or
sub
loope
dec
sub
cmc
mov
fdivr
pop
frstor
loopne
mov
rcl
aaa
add
das
(bad)
div
jg
inc
pop
mov
test
pop
jae
loop
sbb
or
aad
sbb
aas
test
fadd
jle
xor
jno
rol
mov
sbb
outs
clc
mov
pop
push
out
xor
mov
dec
jle
mov
repnz
or
retf
dec
lahf
push
int
jge
sbb
imul
scas
out
jae
ja
test
cmps
pop
adc
xlat
push
sbb
jae
clts
(bad)
call
and
xchg
dec
hlt
shl
jecxz
loope
jge
pop
pop
out
add
adc
clc
mov
push
lock
(bad)
arpl
sub
call
mov
xchg
mov
mov
mov
jecxz
sub
pop
daa
xchg
leave
inc
sub
pop
push
xchg
and
je
mov
push
or
ins
and
dec
cdq
out
add
cmps
outs
shl
int3
loope
xlat
pop
or
fstp
and
stos
ret
into
and
inc
ret
and
sub
int
shr
adc
call
mov
je
ss
js
add
cmp
push
fist
pop
fwait
into
mov
add
cmp
mov
lock
outs
inc
cmp
pop
mov
ret
jecxz
dec
pop
xlat
retf
mov
ins
fbld
jmp
aaa
lea
out
sbb
ret
std
push
hlt
hlt
icebp
jle
repz
dec
mov
push
mov
shl
sub
lahf
jmp
cmp
or
sub
ins
pop
jmp
mov
pop
adc
jp
neg
sbb
and
push
movs
fldenv
push
xor
xchg
rcl
xor
inc
pop
in
sub
xor
sub
cmc
or
outs
mov
call
call
les
arpl
mov
ss
jno
or
mov
mov
and
and
mov
xor
jae
fcmove
dec
jecxz
mov
push
sub
xchg
jmp
shl
call
push
pusha
or
repnz
push
stos
gs
or
sbb
pop
lods
xchg
add
push
aam
stc
ss
imul
mov
sbb
inc
cwde
sub
repnz
es
retf
mov
mov
sar
jae
jecxz
(bad)
pop
addr16
dec
adc
fmul
test
xor
inc
dec
sub
mov
mov
xchg
ds
pop
inc
inc
shl
add
cmp
movs
retf
or
std
stos
push
mov
jmp
jg
repz
pusha
adc
push
xor
xor
(bad)
push
pop
push
stc
dec
jae
js
ret
rol
int3
push
mov
call
jmp
xchg
ror
int3
push
rcl
daa
mov
pop
mov
(bad)
das
mov
pop
sub
cmp
inc
repnz
into
mov
call
mul
push
out
adc
js
jl
mov
jmp
mov
aad
dec
mov
test
int3
xor
int3
push
in
outs
jecxz
ins
sub
cmp
cmp
mov
xor
int
ins
loopne
mov
jge
call
mov
(bad)
cmps
push
cmps
mov
arpl
rcl
jae
movs
je
popf
inc
std
xor
mov
xchg
shl
and
daa
jns
cs
mov
and
stos
mov
inc
xchg
loop
cmc
scas
mov
ret
icebp
mov
(bad)
jp
fucomp
and
push
test
cli
sti
or
jnp
push
test
js
sub
(bad)
jg
xchg
xor
dec
cmp
mov
sbb
dec
pop
pop
and
sub
or
dec
and
pop
cmp
fidivr
jbe
pop
pop
fsub
sbb
lds
fwait
xchg
push
sar
cwde
aad
dec
xchg
in
cs
dec
sub
mov
scas
push
jbe
bound
and
push
cmps
repnz
mov
dec
add
popf
ret
push
jge
mov
or
rcl
jae
push
enter
cmp
div
mov
pushf
ret
dec
aam
(bad)
xor
sub
aam
call
fcomi
movs
fucomp
mov
sbb
jmp
es
mov
fcmovnu
xor
fcom
test
das
mov
pusha
ins
mov
jo
pop
shl
xor
call
jmp
cmp
sub
and
mov
jmp
mov
test
add
fld
jbe
loopne
int
jecxz
pop
fistp
adc
mov
jne
push
sub
jp
pop
mov
dec
push
ds
(bad)
cli
ret
js
mov
push
pusha
rcr
sbb
push
imul
mov
add
add
or
pop
or
mov
add
mov
mov
repz
xor
push
jo
out
and
iret
add
add
fsubr
daa
xchg
mov
mov
push
add
mov
xor
push
adc
inc
mov
sbb
push
ds
call
icebp
lds
jle
pop
stc
cmp
push
pop
push
fadd
fist
retf
lds
push
mov
and
xor
sub
cmps
or
xchg
cmp
sub
(bad)
dec
jmp
push
xor
inc
psrlw
mov
movs
mov
jb
(bad)
xchg
mov
out
iret
lds
test
adc
dec
sar
mov
xchg
jo
jo
push
aam
hlt
xchg
sub
into
loopne
push
ins
popf
push
mov
push
adc
daa
test
jnp
xchg
xchg
out
cmps
mov
sbb
std
adc
pop
mov
mov
(bad)
sbb
ss
jo
mov
cmp
in
xor
in
addr16
jmp
mov
push
nop
jmp
cmp
cli
cmp
enter
imul
imul
xchg
inc
mov
sbb
lods
inc
or
xor
or
xchg
mov
mov
adc
push
xlat
mul
fcmovnu
push
dec
jp
mov
(bad)
cmc
mov
in
outs
addr16
jae
add
pop
sub
inc
(bad)
mov
mov
push
fimul
fistp
add
aam
add
push
outs
dec
out
xor
mov
pushf
stos
jno
icebp
cdq
push
ret
and
push
fimul
enter
movs
setns
in
or
push
imul
(bad)
outs
int
fcmovnbe
pop
cs
cmp
hlt
sub
cmp
fdivr
popf
retf
pop
push
sbb
sub
test
or
fwait
stos
cmp
je
xchg
mov
out
sub
outs
neg
addr16
adc
inc
push
mov
mul
xor
xchg
or
and
repz
sti
lock
neg
shr
mov
xchg
int
sahf
rcr
ds
call
sar
in
and
and
sbb
add
cld
mov
mov
sahf
xchg
inc
push
cli
pushf
sbb
xchg
xlat
mov
jmp
imul
add
mov
and
push
pop
jge
jo
movs
adc
xor
test
xor
push
out
xor
(bad)
fistp
sub
mov
pop
sub
out
dec
pop
fisubr
hlt
(bad)
xor
ins
pop
mov
sahf
in
mov
mov
adc
gs
push
std
jge
mov
mov
cmp
mov
fstp
mov
push
pop
pusha
daa
stc
xchg
inc
dec
in
aad
add
pop
jmp
aad
mov
mov
cmp
popf
out
fbld
mov
sub
and
push
sbb
pusha
bound
fist
test
sar
jmp
fucomp
loop
sbb
imul
cs
add
es
pop
push
inc
dec
es
pop
inc
lods
xchg
push
test
dec
adc
sbb
aaa
push
mov
movs
xchg
mov
mov
xchg
jne
mov
mov
call
rol
mov
cwde
pop
dec
sbb
fld
bound
daa
into
mov
test
out
aam
dec
mov
sbb
mov
fdiv
pop
xor
cmps
cmp
sahf
mov
outs
and
mov
xchg
inc
jb
add
data16
cwde
ins
ja
dec
std
xchg
mov
in
(bad)
out
test
movs
enter
jno
mov
clc
pusha
cmp
cmps
ss
js
or
mov
pop
inc
fxch
mov
or
push
test
ins
adc
xor
inc
data16
int
push
(bad)
sub
and
add
ins
aaa
xor
mov
sbb
xchg
loop
jmp
arpl
and
xor
nop
push
pop
push
shr
or
mov
aam
into
arpl
lods
in
xchg
nop
adc
or
jp
mov
lods
mov
xchg
js
mov
add
out
add
dec
push
fwait
cmp
call
fnstsw
push
loope
xor
sahf
fwait
push
loopne
(bad)
lock
xchg
mov
mov
dec
inc
mov
mov
jp
fistp
daa
rol
add
mov
xchg
retf
pop
adc
dec
and
push
div
in
popf
mov
cmps
pop
ret
mov
cmp
addr16
mov
pushf
xor
pop
ret
outs
retf
call
ror
test
or
push
dec
pop
hlt
mov
mov
cmp
fidiv
cs
iret
addr16
jmp
jecxz
or
and
jecxz
mov
(bad)
pusha
xchg
ret
loopne
inc
retf
push
not
imul
aam
ins
jl
test
mov
es
jbe
mov
cmp
push
xlat
push
xor
repnz
sub
shl
call
mov
jae
xor
or
mov
sub
outs
ret
sub
mov
(bad)
fwait
mov
pusha
xchg
mov
pop
clc
adc
mov
xor
loop
sbb
(bad)
xchg
mov
repz
rep
xchg
imul
call
repnz
pop
adc
or
inc
cmp
std
dec
mov
out
aas
movsx
dec
int3
pop
fbld
mov
pop
(bad)
jns
fs
mov
xor
je
push
in
or
loop
inc
ss
(bad)
cmp
inc
aas
icebp
fiadd
xchg
into
mov
or
cmp
cmps
fwait
pop
push
xor
mov
jg
daa
pop
dec
stos
adc
pop
ja
stos
mov
pop
sar
or
mov
adc
inc
fs
stos
fs
mov
cmps
push
loope
xchg
(bad)
mov
shr
sbb
xor
xchg
adc
fcmovnu
jbe
sub
call
fld
and
fwait
pop
xchg
jmp
into
pop
add
and
or
fcmovnb
jne
cmp
xchg
mov
push
mul
pop
aas
pop
xchg
(bad)
jbe
mov
into
add
adc
loop
arpl
cmc
adc
sbb
(bad)
dec
test
adc
sub
lea
pop
enter
mov
bound
push
inc
fldenv
jbe
movs
sahf
sub
repnz
or
jae
and
fdivr
push
aaa
or
in
mov
cmp
dec
pop
je
lods
mov
fsubp
xor
inc
pushf
sub
mov
push
cmp
out
call
mov
pusha
dec
add
out
jb
scas
mov
sbb
repnz
out
sbb
cmc
adc
sbb
arpl
push
mov
fcom
xchg
mov
inc
xor
(bad)
cld
adc
pop
sbb
mov
push
xchg
cmc
out
mov
pop
sti
aam
adc
fild
inc
rcr
cmp
mul
cmp
scas
imul
cwde
fld
mov
mov
cmp
addr16
call
mov
inc
mov
je
add
mov
lods
push
cmp
adc
adc
xor
sbb
mov
jmp
pop
add
movs
cdq
mov
sbb
cli
cs
rcr
add
xchg
in
pop
push
dec
add
add
loop
fld
mov
gs
pop
ret
xor
mov
push
cmp
fistp
shl
add
mov
xor
aas
pop
pop
and
push
pusha
and
xlat
push
and
movs
or
or
mov
icebp
mov
sbb
es
pop
mov
jns
cmp
jge
and
test
loop
pop
rcr
aad
fs
addr16
add
ror
cmp
ss
outs
or
das
std
ret
das
popf
loopne
add
sbb
jmp
test
and
mov
mov
ja
xlat
add
push
dec
pushf
iret
mov
dec
shl
cli
pop
ins
mov
cmp
in
sbb
loop
aam
push
sbb
test
test
mov
inc
stc
jns
xchg
inc
sahf
sub
cs
sbb
pop
aam
inc
out
xchg
mov
add
idiv
inc
fdivr
popa
pop
or
aaa
repnz
(bad)
dec
push
ret
mov
repz
push
(bad)
(bad)
push
icebp
cmp
fstp
cli
call
jnp
add
in
xor
push
sti
jns
and
xor
mov
jne
popa
or
dec
sbb
mov
stos
aam
out
movs
fild
push
mov
arpl
call
mov
mov
pop
mov
test
ss
sub
xor
jne
fisttp
repz
lds
in
jno
sbb
popf
and
inc
dec
mov
dec
and
xchg
jns
mov
push
iret
fist
leave
test
ror
test
inc
imul
shr
inc
and
ret
xchg
into
ror
inc
sub
mov
aam
es
sbb
adc
adc
ret
push
pop
mov
jge
jne
and
(bad)
xor
xchg
adc
jae
sub
dec
mov
popf
or
add
arpl
fwait
enter
loopne
jns
sti
inc
mov
and
fwait
repnz
shl
xor
ret
hlt
sar
rcl
and
inc
stc
adc
cmp
(bad)
dec
and
jge
pushf
push
outs
or
leave
pop
addr16
jo
mov
xchg
inc
pop
aaa
mov
into
adc
inc
rcl
and
xchg
dec
or
popa
inc
inc
lods
cld
pushf
(bad)
pop
adc
fdiv
pusha
mov
push
shr
icebp
jecxz
lock
les
cmp
jecxz
stc
xor
push
scas
jns
es
or
icebp
(bad)
jle
not
fimul
push
mov
mov
stos
or
pop
jge
add
ins
mov
push
mov
mov
jno
lods
clc
inc
int3
mov
cmp
cmp
xchg
add
mov
clc
and
pushf
push
clc
mov
shl
ja
out
jne
mov
in
pop
add
or
scas
rol
xor
scas
jnp
sub
mov
jmp
xchg
and
mov
xchg
dec
mov
xchg
cmp
bnd
adc
mov
lds
or
mov
retf
fs
jnp
in
push
(bad)
cmc
or
je
jle
das
xor
test
das
bound
es
cmp
sbb
sub
push
jg
mov
lods
xor
jo
mov
(bad)
out
xchg
pop
gs
dec
and
xchg
add
dec
icebp
adc
in
mov
dec
xchg
cs
addr16
fadd
jecxz
add
add
pop
dec
xor
pop
and
pop
clc
add
pop
push
fstp
pop
mov
stos
push
or
fst
(bad)
sti
add
les
retf
rcr
inc
std
in
(bad)
pushf
xor
and
mov
jbe
xchg
sub
push
or
jge
mov
or
pop
or
fidiv
outs
sub
jmp
mov
nop
rol
xchg
jge
les
dec
adc
sar
test
(bad)
xchg
mov
retf
fild
test
jnp
cmp
push
push
icebp
icebp
repnz
cmp
sub
jl
cs
in
inc
sbb
icebp
push
sub
mov
test
dec
es
or
loop
xchg
xor
dec
call
lock
aaa
je
ret
cmps
and
stos
dec
rcl
mov
out
rcr
(bad)
in
and
mov
add
push
ss
pop
leave
stos
pop
mov
xor
inc
inc
into
mov
dec
mov
xor
adc
mov
inc
test
mov
iret
or
ficom
call
sahf
xor
clc
nop
retf
xchg
or
aaa
push
push
pop
add
aas
cmp
pushf
cmc
iret
mov
(bad)
jbe
call
inc
xchg
push
mov
mov
(bad)
push
sbb
push
pop
dec
sahf
jmp
lods
sub
imul
mov
add
bound
push
inc
data16
(bad)
pop
add
(bad)
test
add
outs
xchg
mov
es
call
add
sti
(bad)
imul
test
add
cmp
adc
sbb
inc
push
jg
jne
ret
inc
cmp
repz
push
rol
jmp
push
mov
(bad)
mov
xor
inc
xor
jmp
scas
stos
out
shl
cmps
lds
imul
mov
arpl
inc
sahf
rol
pop
jmp
movs
push
cmp
mov
and
mov
fwait
xchg
push
push
jno
es
aaa
inc
xor
in
dec
xchg
push
popf
xor
mov
retf
cld
mov
pop
cli
mov
and
imul
fild
ja
xchg
fs
jnp
(bad)
int
mov
and
cld
inc
aam
(bad)
adc
add
outs
jo
inc
lock
les
mov
or
push
or
and
adc
fsub
clc
add
and
cmc
pop
cmp
xor
mov
cwde
stos
loopne
xchg
sub
xor
in
cmp
pop
movs
push
rol
adc
dec
ds
add
or
or
and
sbb
dec
sar
adc
dec
ss
pop
clc
mov
cmp
and
jl
aas
dec
mov
repnz
sbb
add
inc
sbb
jns
jno
xlat
(bad)
jge
sub
mov
mov
aaa
enter
mov
hlt
fs
xchg
sahf
jnp
jnp
and
mov
aad
ins
xchg
jns
dec
sub
js
popa
jmp
sar
repz
test
mov
jbe
xchg
fldlg2
cli
popf
sub
ret
ror
mov
add
fdivr
cmp
fistp
loopne
pop
adc
mov
xchg
add
das
addr16
movs
jecxz
mov
je
sbb
sbb
mov
lea
(bad)
mov
rcr
retf
adc
jg
or
jge
(bad)
mov
xor
mov
sub
jl
or
push
in
lahf
pop
xchg
pop
cdq
push
call
shl
test
scas
jnp
imul
leave
or
ins
jne
ja
and
push
popf
test
cmps
and
inc
(bad)
movs
mov
(bad)
pop
xchg
jg
mov
lods
xor
xor
sbb
jmp
cmps
mov
bswap
fs
cdq
or
rcr
mov
mov
dec
sub
fbstp
inc
ficomp
je
jbe
lds
dec
sbb
sbb
in
cmp
cwde
mov
adc
shr
addr16
and
fistp
aam
test
ror
cmp
mov
jmp
add
adc
dec
neg
js
std
inc
xchg
leave
inc
dec
push
stos
ret
push
ror
arpl
dec
test
cmp
ret
pop
xchg
imul
outs
mov
fisubr
jno
rol
and
lods
rcr
retf
aam
into
inc
cwde
jno
dec
and
lds
mov
mov
pop
std
fs
call
(bad)
xor
cdq
jmp
rol
daa
test
jp
jmp
xor
dec
movs
add
mov
cmp
jno
cwde
(bad)
into
cdq
outs
das
aam
call
jmp
dec
loopne
outs
xchg
in
add
and
mov
push
inc
push
(bad)
push
das
cli
fidiv
std
dec
fs
nop
jo
pop
inc
sub
rcl
xchg
add
jl
pop
stos
retf
bound
rol
pop
jle
jmp
hlt
push
mov
inc
dec
ret
jecxz
push
ins
mov
pusha
out
arpl
test
jle
jg
and
xlat
popf
ss
int3
inc
ja
jns
xor
inc
fstp
outs
in
inc
pushf
sub
(bad)
in
adc
aad
ficomp
xor
mov
ins
fld
pop
shr
(bad)
cmp
push
mov
xchg
test
cmp
mov
sbb
lds
dec
addr16
xchg
lods
arpl
cmp
xor
or
inc
xchg
push
xchg
in
cld
jae
xchg
push
inc
mov
shr
(bad)
jmp
ds
outs
jl
(bad)
aad
and
stos
dec
cmp
retf
int
loopne
fisttp
ficom
add
inc
cld
or
ret
or
mov
call
scas
scas
addr16
stc
pusha
jbe
sahf
cwde
xor
push
stos
sub
div
sbb
sti
outs
shl
nop
and
fcomp
or
lods
mov
inc
outs
pop
push
push
test
inc
sub
cmp
pop
fmul
jbe
push
jno
stos
sbb
clc
xchg
(bad)
push
xor
push
ja
lods
mov
add
arpl
jmp
and
and
das
ret
test
ja
out
xor
es
fild
mov
cli
xor
data16
adc
int3
cmp
dec
pushf
ins
push
xchg
fsqrt
cdq
and
pop
xchg
(bad)
mov
inc
ja
data16
mov
popf
xor
je
nop
or
test
les
mov
cmp
int3
add
retf
push
popf
dec
sbb
repnz
dec
iret
les
mov
dec
call
ret
lods
out
cwde
dec
rep
arpl
cli
into
lahf
xchg
mov
push
push
(bad)
jns
(bad)
jle
imul
jne
sbb
aaa
add
xchg
push
adc
cs
push
daa
shr
push
test
fldenv
ror
mov
ins
(bad)
int3
and
dec
in
cmps
lods
dec
sahf
jecxz
dec
jns
adc
(bad)
lock
cmps
mov
dec
add
inc
mov
inc
dec
push
sahf
inc
cmp
sub
push
jmp
test
int3
inc
jle
jns
out
test
jno
shl
dec
add
stos
aaa
aad
mov
(bad)
das
adc
jl
jne
out
popf
hlt
ja
retf
cmc
nop
stc
add
test
pusha
or
loope
pop
mov
adc
mov
mov
into
stos
push
or
and
fwait
mov
sbb
add
xchg
or
std
pusha
les
mov
jg
test
out
out
imul
cmps
cmps
or
mov
popf
dec
cdq
pop
mov
or
sub
inc
iret
call
cmc
cmps
cmp
dec
outs
sub
sbb
xchg
das
jno
loop
add
adc
into
(bad)
scas
lahf
cwde
adc
push
loope
ins
add
push
push
movs
and
fstp
xchg
inc
or
stc
mov
mov
mov
or
icebp
and
ret
scas
xor
mov
call
sbb
mov
popa
rcl
xchg
or
mov
fdiv
sbb
xchg
adc
test
inc
loopne
sahf
sbb
adc
adc
aas
ds
inc
retf
and
leave
lods
leave
dec
pop
pop
or
ror
sub
call
mov
pop
fwait
xchg
and
hlt
xchg
mov
jmp
shl
stc
xor
jns
stos
sub
inc
add
pop
inc
cmps
push
ret
mov
out
push
adc
test
sbb
jge
add
stos
jnp
push
add
js
adc
xor
fisttp
imul
xchg
mov
sbb
inc
lock
lds
mov
xlat
xchg
dec
xor
pop
nop
inc
inc
adc
mov
push
daa
jo
inc
gs
hlt
retf
fnsave
mov
add
xchg
lods
or
aas
imul
sub
sub
add
imul
sub
ficom
adc
inc
sub
out
outs
aaa
mov
movs
mov
ja
cmp
ret
stc
ins
fcmovne
pop
in
push
pusha
hlt
adc
lock
fbld
cmp
xchg
test
dec
xchg
adc
mov
cmp
ret
scas
mov
xchg
stos
fmul
pop
js
call
enter
jnp
(bad)
sub
arpl
les
mov
cmp
inc
cmps
jo
cmp
and
aas
inc
xchg
adc
(bad)
cmp
or
dec
mov
pop
mov
ds
aam
and
call
(bad)
(bad)
dec
cmp
jp
mov
shl
sbb
test
mov
clc
mov
push
mov
jge
push
sbb
(bad)
shl
sbb
(bad)
ja
mov
or
jnp
inc
out
sub
outs
lds
xlat
test
enter
dec
mov
out
daa
xlat
mov
cmps
cli
push
push
cmp
xor
pop
jecxz
pop
sub
jno
push
loope
outs
mov
(bad)
or
inc
in
pop
rep
dec
xchg
pop
iret
outs
mov
cwde
cmp
ret
std
out
call
cwde
cmp
movs
xor
out
or
icebp
pop
mov
mov
mov
in
pop
jne
sbb
es
cmp
jle
push
or
xchg
push
ja
cli
es
fs
add
lods
xchg
out
xor
call
cmp
xchg
push
and
rcl
call
arpl
es
(bad)
and
lahf
inc
dec
jmp
int
sar
fwait
pushf
pop
ror
fild
lock
popf
out
fild
pop
cdq
test
cmp
test
fcmovbe
ss
arpl
loop
dec
inc
loopne
popa
int3
cld
test
iret
shl
movs
mov
(bad)
fwait
add
xchg
cmp
jecxz
dec
mov
and
xor
jbe
sbb
test
xor
cmp
fcmovnbe
cmp
adc
pop
ins
mov
mov
sbb
xor
cdq
pop
and
js
(bad)
les
dec
in
enter
retf
and
jo
jno
push
xor
mov
inc
das
rep
mov
xchg
mov
mov
sti
inc
test
and
das
das
mov
dec
jmp
sub
lds
les
or
mov
test
into
(bad)
std
inc
add
jns
push
retf
mov
call
cmp
mov
(bad)
mov
add
das
lods
test
sub
adc
fld
sahf
out
(bad)
push
cmps
xor
pop
imul
mov
retf
xchg
cmp
outs
mov
pushf
(bad)
out
xor
imul
repnz
rol
sbb
sub
and
cdq
inc
fwait
jmp
push
dec
fxch
sbb
lock
sbb
and
sub
jg
jmp
xchg
jb
and
xor
jmp
xchg
pop
push
cmps
sub
(bad)
jb
sti
sbb
or
lods
je
or
test
mov
outs
outs
lods
mov
sbb
mov
push
mov
ins
xor
adc
and
in
jmp
dec
shl
aam
scas
mov
ins
mov
mov
adc
leave
push
cwde
faddp
pop
xor
add
jno
cmp
in
div
cmp
out
int
push
jb
in
into
sahf
ja
movs
outs
push
push
jecxz
pop
out
pop
ret
xchg
in
pop
lods
je
adc
or
fidivr
pop
add
mov
inc
iret
mov
jno
push
pushf
push
push
jns
add
dec
or
jne
push
sbb
stos
push
xor
fdiv
mov
shr
add
cmc
xor
daa
ror
or
push
cs
jge
add
sti
jnp
in
sub
fsub
icebp
rcr
pop
cmp
jae
stos
sar
adc
jp
pop
cld
sbb
cs
shr
inc
dec
imul
lods
ds
and
(bad)
test
das
aaa
push
test
test
push
addr16
ret
imul
stos
test
popf
jl
movs
pop
push
push
retf
pop
cmp
loopne
pop
adc
(bad)
mov
cdq
cmps
jne
lods
jo
xchg
data16
lea
mov
rol
adc
lahf
push
mov
dec
jl
xlat
mov
jb
retf
xchg
xchg
jle
pop
and
mov
xchg
mov
or
pop
sub
inc
inc
pop
(bad)
adc
lds
push
je
pop
mov
clc
into
ficomp
imul
xchg
add
(bad)
xchg
sti
enter
sub
out
cmp
add
ja
or
(bad)
xchg
imul
jmp
or
retf
xlat
mov
ret
push
pop
dec
push
sti
test
sbb
mov
pushf
inc
shr
inc
adc
fadd
jbe
aam
lock
mov
xor
call
adc
outs
jg
push
or
imul
aad
addr16
or
pop
push
xchg
dec
mov
(bad)
lods
mov
daa
jmp
leave
lods
cdq
scas
sub
jbe
jns
enter
int
pop
xchg
cmp
cli
scas
xchg
call
inc
out
xchg
xlat
jmp
adc
add
mov
mov
dec
pusha
xchg
into
arpl
lds
mov
adc
ret
mov
sub
call
xor
aad
sti
test
cmp
cmp
add
sbb
jns
mov
inc
mov
inc
fdiv
jge
sti
das
mov
mov
outs
mul
nop
or
push
leave
retf
adc
in
pop
outs
dec
mov
jge
cmp
jbe
sbb
or
lds
jb
and
adc
ret
mov
in
adc
shr
in
push
gs
das
in
jbe
pop
mov
mov
ret
xchg
das
aam
mov
(bad)
mov
ret
inc
xchg
push
mov
cwde
xchg
cmp
loop
mov
(bad)
aaa
jle
cmp
leave
jae
pop
mov
(bad)
mov
dec
cmp
(bad)
push
out
xchg
mov
inc
arpl
mov
push
sbb
or
repz
cmc
add
(bad)
clc
movs
ja
or
outs
cdq
nop
es
loop
sub
sbb
out
loop
lea
shr
data16
movs
test
push
push
adc
adc
scas
setge
das
xor
add
dec
add
stos
jmp
inc
jnp
mov
add
sahf
and
fdivr
push
into
dec
xchg
pop
pushf
ins
mov
xchg
xchg
add
adc
pop
xchg
cmp
jge
ins
adc
cdq
js
and
xchg
push
int
mov
or
out
sub
in
xor
out
js
arpl
push
in
mov
add
mov
sti
iret
call
mov
xchg
add
push
jg
stos
in
stos
adc
add
inc
mov
(bad)
data16
push
daa
cdq
mov
(bad)
cld
call
dec
enter
dec
inc
push
repnz
inc
cdq
aaa
dec
mov
xchg
mov
les
in
daa
stos
in
js
xor
rol
gs
sbb
xchg
fst
imul
inc
outs
scas
data16
neg
ins
mov
es
jb
adc
(bad)
adc
rol
and
mov
dec
push
push
lds
(bad)
call
pop
pop
jmp
pushf
inc
cmp
push
push
jge
jbe
and
xor
cmps
retf
add
and
leave
lds
cmp
add
sbb
pop
and
pop
cmp
test
loop
movs
(bad)
out
out
push
jecxz
cmp
mov
fld
lods
(bad)
inc
leave
leave
push
add
mov
rcr
aas
jecxz
loope
cdq
push
jmp
cwde
(bad)
mov
call
ins
sbb
and
sbb
icebp
pop
test
aaa
clc
inc
push
push
fdivr
ficomp
pop
out
rcr
jmp
pushf
sar
sbb
push
mov
loopne
add
shl
ror
cmps
packssdw
xchg
mov
mov
sahf
imul
out
bound
je
cdq
dec
das
js
hlt
mov
(bad)
lods
mov
(bad)
sbb
std
mul
push
dec
mov
jl
and
fist
gs
xchg
pop
leave
push
pushf
add
mov
test
mov
push
cwde
shl
jle
out
and
mov
mov
cs
fnsave
retf
cmps
outs
call
aas
mov
je
jp
xor
xchg
mov
rcl
mov
or
pop
jmp
jmp
xor
jmp
push
mov
and
jno
lds
mov
in
adc
push
xchg
shl
aaa
add
idiv
or
mov
add
mov
call
scas
cmps
rol
cmp
add
aas
pop
sbb
inc
rcl
cmp
xchg
xchg
mov
sbb
cmp
mov
xchg
xor
add
ds
gs
dec
sbb
xor
lea
jmp
cmp
fwait
stos
ss
inc
retf
aas
dec
jle
mov
hlt
inc
test
leave
xchg
imul
jnp
aam
pop
jge
xchg
into
mov
dec
not
das
ud0
lea
cli
mov
and
fst
iret
nop
xchg
rcr
in
test
fwait
daa
sub
pushf
iret
or
or
cmp
leave
test
xchg
mov
loop
popa
(bad)
sub
les
jne
sbb
sbb
ins
jg
mov
shr
push
inc
outs
push
popf
movs
and
and
sub
popf
test
call
xchg
push
add
dec
js
jg
(bad)
daa
sub
add
div
dec
push
cmp
nop
dec
in
and
jg
mov
adc
cs
dec
xchg
jg
pop
sub
and
mov
stc
lds
xor
push
ror
cmps
adc
xchg
clc
lock
dec
lods
les
in
out
js
clc
adc
shl
push
jb
in
scas
ror
jecxz
in
(bad)
fsubr
in
cmp
push
and
mov
push
jbe
nop
and
mov
test
test
mov
xchg
mov
xchg
jecxz
xor
cmp
inc
sbb
lds
and
or
xchg
cwde
test
imul
cmc
pop
nop
pop
(bad)
and
sbb
jne
not
sbb
inc
pop
and
pop
jns
shl
add
popa
sub
xor
mov
out
xor
(bad)
adc
cwde
jo
mov
push
and
mov
call
or
bound
ja
jno
fidivr
ret
push
dec
cld
ret
cmp
add
imul
leave
inc
(bad)
retf
jge
lods
adc
fld
gs
fdivr
fsub
sub
inc
shl
ja
pop
lods
sbb
cdq
out
push
test
pop
add
cdq
les
pop
mov
jg
xor
movs
push
(bad)
push
call
in
sbb
int
push
or
sbb
sub
aam
xor
mov
jb
fnsave
push
stos
mov
clc
out
push
xchg
int3
cmp
js
inc
push
mov
mov
dec
(bad)
leave
add
outs
popf
cmp
ins
in
pop
dec
sbb
frstor
pop
ss
xchg
inc
in
mov
inc
repnz
imul
cmc
mov
pusha
cmp
call
pop
fimul
sub
add
(bad)
add
mov
pusha
test
mov
stc
imul
and
jne
popf
in
in
movs
arpl
mov
mov
jo
mov
xchg
out
test
dec
cmc
(bad)
es
xor
add
mov
(bad)
jmp
and
shr
push
sbb
bound
add
mov
fisub
cli
push
fwait
dec
aad
rcl
push
push
ret
movs
cmp
cdq
scas
stos
jne
test
cmp
inc
fnstsw
pop
hlt
scas
lods
mov
ffreep
into
jecxz
pop
jmp
push
jl
pop
mov
sub
rdpmc
or
xor
pop
ja
sbb
xor
jmp
add
xor
fwait
ins
push
ret
out
fiadd
lds
int
ds
xor
or
popa
mov
cld
xchg
pop
pop
ret
pop
das
test
daa
mov
push
fidivr
mov
(bad)
xor
pop
pop
call
test
mov
call
sti
pop
neg
jbe
sbb
xor
mov
or
adc
in
mul
inc
retf
les
xlat
adc
sbb
sahf
and
inc
js
sub
fwait
dec
xor
popf
sub
inc
jnp
clc
lods
push
dec
jb
xor
sahf
add
cmps
jge
pop
outs
aad
retf
test
test
xchg
push
sub
or
and
mov
test
sub
cmp
fs
cmp
push
hlt
xchg
jns
push
xor
addr16
xchg
mov
and
cmp
addr16
inc
or
stos
gs
cmps
int
pushf
loop
adc
neg
data16
or
xlat
(bad)
js
or
(bad)
or
add
and
loop
add
ins
movs
repz
push
fst
mov
jle
scas
pop
call
les
test
call
in
(bad)
jl
movs
test
(bad)
fisttp
lds
jne
fwait
push
or
mov
movaps
inc
sub
or
push
pop
mov
push
mov
pop
pop
or
outs
sub
pop
mov
inc
mov
dec
jbe
popa
retf
es
mov
jl
adc
dec
es
sbb
fcmovnb
adc
xor
out
push
lock
shr
dec
(bad)
aam
jb
sub
push
stos
in
mov
sub
xor
push
fldenv
mov
and
inc
jnp
inc
dec
cdq
in
jno
pushf
push
dec
push
inc
enterw
jmp
loopne
punpckldq
pusha
imul
rcl
and
fucomi
and
xor
mov
push
xchg
push
pop
pusha
shr
cmp
inc
iret
inc
fiadd
dec
cdq
je
xor
les
mov
je
xor
jnp
xor
stos
lods
sbb
mov
inc
repz
retf
xchg
test
cmc
pop
ss
jns
add
ret
jb
and
ret
pusha
jle
cmps
jae
jnp
pop
sub
popa
and
jecxz
mov
aam
fwait
mov
out
pop
pop
jg
clc
pop
popf
fstp
dec
mov
(bad)
setae
ret
mov
adc
js
or
jne
leave
jmp
or
rol
ins
movs
test
inc
push
inc
dec
call
rol
jl
dec
aad
mov
test
or
mov
dec
or
cwde
jnp
mov
push
cwde
mov
test
ja
xchg
(bad)
leave
pop
imul
pop
cmp
lahf
mov
sub
sti
xchg
mov
movs
mov
sub
jmp
sub
call
stos
add
mov
inc
push
mov
idiv
cmps
stos
cmp
and
jnp
fiadd
sub
sub
add
shr
sbb
sbb
mov
daa
add
xor
mov
jmp
fild
xor
sub
das
dec
pusha
pop
shl
and
mov
js
pop
pop
mov
(bad)
fst
(bad)
imul
jge
in
mov
jno
test
rol
inc
lock
dec
dec
outs
xchg
pop
repz
ret
xchg
rcl
fincstp
cmp
sub
(bad)
je
(bad)
js
fld
shl
test
and
add
add
aad
lods
adc
push
xchg
pop
xor
mov
push
sar
out
loopne
cmp
xchg
dec
not
jo
(bad)
ds
pushf
mov
push
xchg
mov
popf
les
sub
push
and
mov
push
inc
jl
or
and
add
ss
ins
xchg
xchg
jmp
and
nop
cmp
(bad)
je
scas
fucomp
outs
pop
daa
or
ret
arpl
test
mov
inc
push
mov
sub
(bad)
pop
adc
cld
or
jmp
rol
xor
data16
aad
lock
mov
mov
push
or
ret
sub
pop
into
mov
mov
imul
mov
imul
mov
nop
jb
mov
stos
push
dec
ss
dec
ss
adc
xchg
dec
sub
in
xor
nop
mov
jno
int
repz
popa
gs
hlt
xchg
or
adc
mov
xchg
out
lods
cli
gs
fnstcw
inc
ja
jle
inc
dec
out
clc
pop
cld
popf
mov
bound
add
xchg
mov
mov
sub
mov
jbe
idiv
jo
shl
xchg
adc
test
xor
or
xchg
mov
daa
pop
(bad)
data16
mov
mov
loop
sar
add
add
popa
mov
or
mov
adc
pop
adc
or
cmp
popa
pop
enter
(bad)
mov
xor
jb
mov
cwde
cli
leave
jno
cmp
test
mov
(bad)
into
xchg
inc
adc
es
sub
add
lods
fdiv
sub
xchg
mov
pop
pushf
mov
and
cs
out
call
ins
mov
mov
out
mov
hlt
fild
cmc
mov
aam
test
adc
es
cdq
rcr
and
scas
dec
or
(bad)
pusha
pop
lods
cs
jbe
mov
test
pop
cdq
repnz
cmp
xchg
es
cmp
out
lods
aaa
xchg
cmc
pushf
mov
jg
cmp
out
xchg
fbstp
dec
repz
jecxz
lahf
adc
fidivr
push
inc
iret
and
lahf
and
lahf
jle
scas
lods
loopne
in
ins
cmp
xor
dec
jno
push
xchg
mov
ins
int
in
mov
sbb
and
mov
mov
pop
mov
or
addr16
sbb
repnz
inc
in
cmp
lea
stc
mov
dec
sub
xor
outs
cmp
sub
pop
and
das
mov
jbe
sub
inc
sbb
add
mov
cmp
dec
push
push
cdq
jns
(bad)
mov
cmps
mov
mov
jno
mov
mov
dec
int3
cmp
mov
dec
sub
popf
adc
js
fsqrt
jnp
inc
mov
push
mov
loopne
imul
push
ins
iret
int
push
inc
leave
sub
sbb
adc
(bad)
jmp
push
pop
add
push
xchg
iret
cmc
xchg
imul
mov
inc
pushf
fmul
xor
cmp
pop
add
add
sti
inc
aas
mov
ss
popa
inc
sbb
pop
and
inc
test
loope
pop
fiadd
lock
imul
sbb
jbe
dec
mov
or
in
mov
sbb
stos
cmps
or
sbb
dec
jo
mov
stos
lock
inc
ficom
iret
or
stos
add
mov
(bad)
mov
fldenv
(bad)
out
xchg
popa
add
pop
mov
aaa
pop
das
rol
movs
cmp
cmp
outs
enter
jecxz
aad
int3
sar
test
in
in
sbb
stos
test
or
das
jns
cli
push
pop
popf
dec
inc
push
pop
hlt
out
mov
jno
jo
test
shl
add
push
stos
mul
add
adc
mov
in
add
adc
rcr
ss
add
and
push
inc
aas
dec
loopne
stc
psrld
ins
int
popf
(bad)
mov
lahf
nop
leave
sbb
push
ja
loopne
xchg
mov
out
inc
sti
pop
or
sbb
loop
dec
call
jno
adc
push
jno
and
xor
shl
cld
mov
push
cdq
xchg
je
aas
movs
cs
aaa
push
ins
mov
mov
jb
lahf
test
sub
push
(bad)
rcr
in
fisttp
pop
cld
sub
pusha
cmc
mov
pop
add
sti
mov
cdq
jns
or
jle
shl
xor
push
mov
dec
adc
add
sub
fsubr
gs
test
daa
cld
jmp
mov
out
mov
aaa
push
(bad)
iret
inc
cmp
inc
psrad
sar
rcr
push
out
push
clc
into
add
aaa
mov
sti
loop
das
xor
and
lahf
sbb
adc
sahf
lods
lods
ja
mov
sub
mov
ss
icebp
sbb
into
or
push
xchg
(bad)
mov
or
outs
pusha
in
inc
test
push
hlt
xor
arpl
cmps
je
dec
lea
pop
and
cmc
repnz
call
xor
sbb
and
aas
sbb
dec
or
out
push
mov
xor
sub
div
dec
xchg
dec
sbb
inc
adc
repnz
repz
xor
out
jp
in
pop
mov
pop
call
dec
pop
cli
pop
jb
inc
fldenv
xchg
test
mov
dec
setne
cmp
outs
inc
out
pusha
cmp
dec
lock
leave
pop
dec
push
cmc
or
or
call
jge
adc
push
push
ins
push
push
jns
ins
popa
call
sub
mov
repz
std
or
mov
outs
lock
aam
stc
outs
aaa
mov
push
out
daa
test
popa
int3
iret
stos
dec
cld
add
mov
push
jb
dec
rcl
fs
xlat
inc
les
leave
jo
mov
mov
loope
pop
inc
(bad)
(bad)
div
movs
outs
fldcw
or
or
lahf
add
into
jns
stos
sahf
or
xchg
pop
(bad)
xor
and
test
(bad)
icebp
sub
push
mov
out
pushf
ret
arpl
mov
imul
repz
cmps
enter
sub
adc
push
inc
in
jmp
popa
and
xor
inc
and
jp
test
fisub
xor
popf
push
push
fsub
fsubr
pushf
add
adc
mov
stos
les
adc
cmp
pop
jle
je
popf
adc
cmps
jbe
push
pop
scas
leave
xchg
ret
adc
push
and
cmp
xchg
outs
idiv
mov
cwde
outs
lea
cld
push
lds
mov
mov
ins
push
je
push
and
aas
sub
and
in
sbb
xchg
iret
scas
fcomp
dec
xlat
leave
cmp
inc
das
(bad)
push
push
cmp
jle
or
inc
dec
xchg
test
mov
sahf
add
je
and
sahf
xlat
pop
stos
inc
mov
mov
fisttp
add
or
imul
xchg
aas
fs
ja
xchg
jne
jmp
stos
inc
les
and
imul
mov
test
mov
inc
sbb
mov
xchg
pop
sbb
and
jnp
xor
stos
xchg
call
cmp
(bad)
or
fldln2
xchg
nop
stos
enter
add
xchg
retf
jp
ficom
xor
xor
sub
mov
sbb
inc
pop
xor
fmul
aad
mov
mov
arpl
mov
into
push
imul
movs
stos
mov
leave
retf
data16
cdq
cmp
movs
repz
repnz
or
inc
dec
sub
ror
cld
lds
xor
addr16
mov
pop
xchg
loopne
fstp
arpl
shl
fsubp
ficomp
push
loopne
loop
ret
pushf
xchg
add
out
add
sahf
add
rcr
jg
xor
dec
mov
ins
jecxz
pop
adc
pop
stos
adc
push
call
bound
cmp
in
push
pop
js
adc
pop
xlat
sub
retf
push
mov
loop
add
cmp
popa
retf
cmp
or
mov
test
outs
cmp
sub
clc
pop
xor
mov
mov
sar
mov
sbb
scas
mov
xchg
repz
aad
xchg
jmp
leave
loop
stos
(bad)
jge
gs
arpl
mov
test
jmp
dec
in
shr
mov
pop
scas
or
add
out
jae
std
adc
fst
int3
js
lock
sar
ret
push
cmp
loop
mov
addr16
ret
test
xlat
rcr
dec
dec
pop
mov
loopne
adc
sbb
cmp
ja
sub
mov
lods
pop
inc
jl
clc
in
sbb
jle
mov
add
lods
mov
test
sbb
movs
les
scas
aaa
cmp
test
fbld
loop
lahf
test
(bad)
aam
cmp
adc
out
ja
repz
cdq
jno
cwde
into
fidiv
cmps
push
je
aam
aad
das
jmp
hlt
sub
aas
mov
xchg
ds
cmps
adc
xor
test
mov
mov
mov
or
(bad)
or
enter
jbe
stos
imul
pop
or
jmp
pop
xchg
add
fwait
imul
push
cld
xchg
je
xor
hlt
lds
mov
add
mov
(bad)
sub
jecxz
push
xchg
retf
imul
cmc
mov
mov
rol
leave
and
push
je
mov
loopne
out
enter
add
outs
cwde
inc
cmc
cli
imul
mov
fwait
(bad)
cmc
imul
mov
jns
pop
repnz
xor
pop
scas
mov
xchg
sbb
or
sbb
imul
sbb
aas
mov
scas
daa
stc
inc
and
out
sbb
test
mov
pop
div
sar
retf
ficomp
js
dec
test
fiadd
add
(bad)
arpl
jno
mov
jmp
out
imul
and
call
xabort
inc
mov
cmp
hlt
neg
xchg
lea
pop
add
sahf
mov
fadd
jmp
add
imul
mov
std
sbb
aam
sbb
push
out
xchg
outs
lds
fs
dec
sbb
sbb
xor
pop
add
inc
jne
mov
dec
push
mov
clc
cdq
push
adc
pop
add
shl
adc
mov
(bad)
push
repz
(bad)
enter
cmp
xor
fs
fmul
ja
in
push
mov
loopne
call
loopne
or
out
fs
in
sub
test
fwait
pop
mov
or
mov
sub
pop
mov
xor
mov
leave
and
mov
mov
and
loopne
lds
xchg
jb
xchg
pop
cmp
pop
outs
add
or
push
push
xchg
retf
jnp
xor
push
xor
ret
fs
push
test
push
stc
mov
jo
dec
jmp
fmul
loop
call
inc
adc
mov
sbb
lahf
mov
mov
mov
aaa
xor
rcr
fstp
xor
or
sbb
test
stos
xor
pop
mov
ds
add
in
(bad)
pop
cmp
dec
mov
jmp
hlt
shl
cmp
jbe
sbb
out
cmp
(bad)
call
rcl
cmp
retf
adc
dec
inc
xchg
add
push
jo
jg
fld
fdivr
and
push
jb
lods
add
inc
dec
push
xchg
sbb
pop
inc
and
and
out
sub
sub
dec
mov
fisttp
pusha
inc
adc
das
cdq
xchg
pop
adc
sbb
jge
retf
pop
movs
add
ja
mov
shl
jge
sahf
cmp
inc
(bad)
xlat
push
(bad)
mov
test
loopne
mov
push
hlt
cmps
ins
mov
sahf
fst
jnp
jno
xchg
lods
jmp
loope
and
imul
push
shl
sti
xchg
repnz
mov
or
mov
or
(bad)
mov
dec
cmps
dec
in
rcl
iret
xor
mov
push
stc
mov
adc
fisub
cmp
in
or
sub
mov
mov
cld
ror
or
sub
fild
pop
and
jmp
inc
(bad)
repnz
mov
(bad)
sbb
scas
inc
add
inc
mov
or
jp
pop
pop
imul
and
or
loope
mov
sar
call
dec
jno
enter
aaa
sahf
stos
inc
mov
ror
adc
or
cmc
adc
es
adc
jg
call
iret
lahf
pop
jnp
out
ss
cmp
fidiv
jl
daa
and
pop
ret
push
es
jns
out
mov
nop
push
sub
sub
jmp
(bad)
cmp
sbb
push
mov
mov
xchg
lods
mov
pop
jge
inc
xchg
push
mov
or
sub
jge
jl
lds
adc
pop
or
call
lock
sbb
jmp
aam
adc
ficomp
fidiv
popf
push
jnp
sbb
jmp
sub
call
adc
jmp
inc
fdiv
inc
inc
mov
sbb
pop
outs
jnp
sar
jo
sbb
std
pop
inc
fdivr
aam
popf
xchg
xchg
imul
mov
cmp
jg
imul
(bad)
inc
mov
aad
ret
jp
mov
mov
sub
jnp
mov
ja
jge
and
outs
pop
imul
ror
fwait
(bad)
jl
daa
test
sub
fistp
aad
aam
cmp
xchg
dec
cs
cwde
push
pop
fdiv
in
sbb
jge
or
pop
sub
mov
mov
fcmovne
jns
lahf
xchg
mov
pop
cmp
adc
mov
pusha
loop
fdiv
adc
and
in
mov
pop
popa
or
mov
pop
and
pop
and
and
je
adc
ret
popa
scas
mov
retf
push
call
push
jmp
xchg
scas
div
add
mov
jg
test
std
imul
cmp
leave
mov
nop
imul
jp
inc
aad
cmp
shl
out
dec
and
fcom
xchg
inc
imul
push
clc
jo
shl
sbb
inc
cdq
std
mov
lods
jle
in
mov
movs
mov
fld
adc
mov
ja
movs
popa
in
lahf
jge
cs
ins
or
cmps
scas
aad
mov
imul
pop
mov
ret
cmc
rol
(bad)
cmp
xchg
adc
mov
mov
mov
sub
lds
push
lds
jnp
int3
test
adc
pusha
mov
fistp
push
jecxz
mov
jae
jno
add
cmp
jmp
and
out
fcmove
and
pop
ret
mov
jnp
rcr
sbb
sub
or
iret
ret
inc
in
imul
or
and
mov
or
out
pop
adc
push
xor
loop
hlt
pop
sbb
icebp
(bad)
sti
xlat
ins
pop
pushf
call
dec
mov
push
push
stos
xchg
inc
xchg
xchg
je
dec
and
test
push
or
rcl
rol
pop
bound
adc
inc
mov
xchg
push
retf
dec
add
shl
sbb
inc
pop
mov
inc
xchg
mov
mov
in
mov
ficomp
inc
xlat
loopne
leave
repnz
jns
call
mov
mov
std
test
shl
in
cmp
xor
and
retf
lods
dec
inc
mov
sbb
frstor
mov
lahf
lea
cs
xor
jnp
pop
daa
fist
inc
ds
adc
test
gs
xor
cmps
and
pusha
push
add
outs
push
mov
mov
mov
mov
xor
lods
adc
(bad)
mov
mov
jmp
loop
test
test
dec
add
in
cmp
dec
cmp
pop
call
and
mov
pop
loope
leave
shl
add
cs
xchg
mov
idiv
pusha
test
idiv
jmp
rcr
fstp
push
(bad)
aas
rcl
pushf
out
sub
nop
inc
test
xor
add
dec
or
mov
sbb
push
jo
xchg
mov
out
rcl
pop
cld
dec
ins
xchg
scas
data16
jp
ins
adc
inc
shr
mov
in
adc
test
push
sub
jmp
call
sbb
push
test
bound
pusha
mov
(bad)
call
mov
cmova
fcmovne
(bad)
pop
push
add
jmp
jne
push
add
push
shr
call
inc
test
xchg
mov
xor
mov
call
shl
ja
out
mov
(bad)
lahf
dec
in
xchg
cmp
das
cmc
fadd
test
push
sub
out
mov
shr
cmp
cmp
into
fnsave
mov
mov
add
in
pop
jno
cmp
inc
aad
aam
adc
bound
xchg
(bad)
pop
xor
cmps
repz
add
fild
cdq
sbb
ss
pop
xor
bts
ins
stos
inc
inc
jne
fcmovu
sub
jo
jns
or
mov
sub
out
jge
adc
add
out
pop
xchg
cmp
rol
and
shl
dec
cmp
push
dec
or
mov
aas
cmc
fist
lock
iret
shr
xchg
in
std
mov
inc
or
xchg
xchg
je
push
stos
fidiv
neg
loope
xacquire
fs
jge
rep
push
add
jl
(bad)
jge
push
push
or
out
and
mov
xchg
dec
adc
jnp
aaa
lock
cli
mov
adc
scas
je
out
ss
adc
dec
fiadd
dec
sbb
cmp
mov
mov
push
mov
movd
jno
fsubrp
test
mov
adc
jg
clc
mov
jo
adc
jo
les
sub
adc
jmp
ins
dec
cmp
push
mov
and
cli
jae
xor
mov
jne
inc
sub
mov
lea
sbb
adc
test
mov
push
adc
fdiv
dec
cmp
and
addr16
data16
sbb
push
cmp
int3
xor
xor
retf
inc
inc
inc
(bad)
jl
mul
scas
and
push
fadd
pushf
jecxz
in
xchg
cmp
sbb
popf
rcl
jl
or
jle
jge
push
iret
xor
das
lock
lods
lds
dec
imul
mul
sub
and
call
loop
pop
iret
mov
xor
sbb
out
mov
xchg
inc
cwde
mov
xor
and
mov
scas
std
sbb
(bad)
jbe
faddp
jne
push
dec
and
push
add
outs
add
in
lock
popa
out
xor
pop
js
push
cmp
(bad)
mov
rol
sub
stos
aas
sar
sub
inc
jnp
(bad)
aaa
jmp
ret
dec
jge
mov
and
and
loope
jg
ss
push
mov
cwde
sbb
ret
ss
jnp
in
cmp
popa
fmul
shl
inc
and
aam
mov
gs
outs
stc
push
or
inc
mov
retf
call
jne
fcmovnb
ds
xchg
push
jg
sub
push
dec
or
sbb
mov
mov
cmp
xchg
fadd
ja
adc
dec
repz
and
sub
and
test
in
jle
sbb
bound
push
jl
(bad)
loop
clc
fistp
xlat
test
adc
out
sub
shr
xchg
dec
loop
inc
fwait
cli
xor
add
lock
(bad)
je
inc
push
or
dec
std
inc
jge
sub
scas
stos
test
mov
cmp
lahf
daa
sbb
bound
sub
xor
(bad)
mov
test
xor
jb
jp
dec
ss
fidiv
mov
(bad)
in
loopne
ins
movs
sbb
jbe
xor
mov
pop
mov
pop
mov
shr
int3
xor
addr16
mov
inc
xor
dec
add
mov
mov
adc
ss
(bad)
popf
push
sbb
iret
mov
(bad)
jo
xchg
sub
test
xor
out
xor
adc
push
mov
adc
(bad)
push
out
cld
jo
mov
int3
adc
sbb
xchg
ret
xor
cmc
and
jle
add
ss
cmp
popa
in
pushf
push
or
popa
das
jno
std
jno
sbb
cmp
rcr
aaa
fcomp
lea
int
adc
or
dec
or
jae
scas
jnp
xchg
(bad)
fmul
mov
daa
and
inc
push
imul
pop
mov
mov
inc
or
aas
cmp
pushaw
dec
mov
sbb
pop
add
bound
and
add
ret
cmp
sub
mov
out
daa
(bad)
(bad)
loop
outs
imul
js
cmp
adc
jns
fist
cdq
icebp
adc
xor
cmp
xchg
mul
loope
fwait
outs
push
sub
pop
lahf
in
cmp
(bad)
stos
movs
fwait
jecxz
aaa
(bad)
cmp
push
dec
movs
cmp
pop
jge
mov
int
push
lea
push
aad
clc
dec
iret
inc
mov
les
ins
imul
mov
or
or
adc
push
dec
xor
xchg
xor
daa
sar
in
cmps
mov
pusha
mov
iret
clc
push
in
addr16
add
pop
mov
sahf
and
fdivrp
(bad)
add
xor
les
popa
enter
xchg
ja
call
(bad)
out
lea
sub
or
addr16
pop
inc
push
sbb
adc
push
sbb
mov
fs
cmp
lea
mov
rol
mov
lock
jo
arpl
dec
daa
jmp
sub
add
and
sbb
adc
add
fs
clc
sbb
dec
fistp
lahf
xor
fdivr
stc
movs
in
repnz
dec
call
ret
scas
add
into
add
cs
and
lods
mov
add
adc
mov
mov
jge
mov
(bad)
out
(bad)
sbb
cmp
dec
mov
mov
mov
call
mov
(bad)
out
pop
fisub
cld
movaps
jecxz
adc
rcr
jle
jae
and
ins
mov
shr
outs
push
push
das
and
cmps
mov
jmp
(bad)
mov
cmps
cmp
sub
(bad)
aam
lods
retf
add
push
or
test
clc
mov
push
fnsave
and
mov
push
mov
movs
sar
jns
or
adc
loopne
movs
shr
push
sti
and
hlt
dec
sbb
shl
ds
add
xchg
mov
xchg
xchg
mov
jecxz
add
mov
jle
stos
mov
repz
icebp
mov
mov
sar
cmp
and
sub
movs
das
gs
js
sub
nop
cmp
iret
in
call
(bad)
in
je
xor
and
push
scas
hlt
add
pop
ins
stc
mov
xor
call
or
leave
add
out
arpl
jb
sbb
sbb
rcl
hlt
outs
inc
push
pop
(bad)
(bad)
fimul
inc
ins
mov
push
dec
cwde
arpl
xchg
jne
int3
dec
add
jg
call
fwait
nop
dec
jo
test
mov
out
int
loop
mov
je
dec
nop
dec
dec
push
pop
pop
mov
cli
sti
jle
sbb
int3
outs
loopne
shr
out
dec
test
jp
inc
cmp
lods
jle
mov
aam
je
hlt
aas
add
dec
xchg
jecxz
jo
push
xor
dec
sar
xchg
leave
das
daa
sbb
addr16
lods
xchg
mov
sti
outs
push
cmp
push
leave
or
add
(bad)
sbb
pop
xchg
push
clc
call
lds
add
mov
cmp
dec
and
mov
cwde
pop
mov
aam
jbe
mov
xchg
push
mov
add
add
test
mov
mov
or
lods
pop
cmp
inc
call
jnp
(bad)
mov
xchg
icebp
test
scas
dec
mov
add
fst
call
dec
sub
inc
int3
and
push
mov
mov
pop
(bad)
jns
push
movs
sbb
pop
push
nop
add
arpl
sbb
imul
add
jnp
push
mov
mov
push
iret
cmp
pop
shl
push
add
bound
(bad)
int
aam
mov
dec
inc
mov
cmp
add
mov
push
lods
es
push
std
aad
fldenv
fs
pop
mov
retf
pop
push
ja
scas
lea
pop
xor
xor
xchg
ja
iret
rcr
(bad)
shr
sub
cmc
bound
or
xlat
mov
sahf
fadd
inc
inc
inc
lock
inc
aad
iret
cdq
ror
(bad)
mov
fdivr
sbb
jb
add
repnz
adc
sbb
out
stos
push
inc
movs
and
push
xchg
and
fnsave
xchg
stos
push
xchg
sbb
retf
push
add
test
sbb
or
or
xlat
jl
pop
shr
call
lods
outs
(bad)
std
aad
xor
add
mov
push
mov
pop
push
xchg
add
shl
call
fnsave
and
pusha
mov
out
sbb
(bad)
cmp
or
movs
pop
call
das
add
lahf
stos
pop
out
(bad)
jae
test
adc
dec
test
int
sbb
cmp
ins
mov
dec
inc
inc
mov
mov
mov
inc
inc
cmp
in
ja
adc
out
pop
jno
dec
dec
aam
mov
mov
pusha
enter
jno
scas
test
fdivr
sar
dec
jnp
test
mov
out
mov
xor
jmp
jnp
scas
mov
sbb
adc
jmp
test
push
(bad)
pop
cmp
jb
rol
call
mov
dec
push
cmc
pop
into
fidiv
push
jnp
fnstcw
jmp
data16
mov
jo
test
add
push
inc
ins
sub
loopne
shr
push
icebp
out
fisttp
stos
dec
or
sbb
gs
mov
lods
loop
mov
(bad)
jle
adc
mov
push
adc
push
pushf
jle
(bad)
fisub
cmps
call
xchg
and
push
mov
imul
(bad)
xchg
aad
ret
mov
(bad)
xchg
mov
and
loop
sbb
(bad)
in
out
cmp
mov
aaa
push
mov
stc
cmp
jb
adc
xor
mov
jmp
push
mov
shl
movs
and
fs
adc
fisub
xchg
pop
addr16
fistp
ret
jecxz
jnp
ss
push
push
jp
and
out
sbb
fwait
mov
mov
add
mov
add
xchg
xchg
clc
das
jno
pushf
fcomp
sub
ja
leave
sbb
rol
and
add
pop
shl
mov
cwde
push
sbb
cmc
icebp
nop
mov
pop
(bad)
stos
in
pop
aas
push
and
aam
xchg
movs
test
dec
cmc
das
ins
ret
aas
cli
fwait
pusha
dec
mov
bound
add
ss
inc
lahf
mov
jmp
dec
inc
or
sbb
jl
shl
inc
push
movs
ror
mov
scas
dec
ins
es
mov
fucomi
fs
xor
inc
push
std
sbb
cmp
and
jmp
in
test
mov
call
cmc
out
push
push
sub
data16
sub
mov
(bad)
fadd
mov
jne
mov
jnp
mov
pop
adc
imul
(bad)
cmp
mov
mov
call
test
lea
xchg
lds
enter
call
cmps
mov
lods
cmc
ins
popf
cmps
in
imul
fxch
cwde
add
adc
test
inc
cli
inc
dec
shr
push
mov
mov
and
push
test
jns
adc
rol
jae
icebp
xchg
leave
push
sub
into
gs
cli
data16
xor
jmp
xchg
inc
pushf
aas
sub
jno
and
xchg
sbb
and
pop
push
mov
add
dec
mov
push
aam
lds
fsub
std
or
dec
ins
sub
pushw
or
xor
fisttp
add
cmps
lods
fistp
daa
adc
cmp
push
push
hlt
int
int3
in
xor
ja
arpl
push
pop
inc
arpl
add
lods
and
jne
cmc
mov
mov
lods
(bad)
jno
push
jmp
mov
shl
in
sar
inc
cmp
mov
dec
xor
mov
push
pop
test
outs
cmps
push
(bad)
sub
lods
push
pop
adc
ins
fwait
mov
in
daa
sbb
xor
cmp
push
xchg
mov
sbb
mov
dec
jnp
xchg
cmps
out
jo
and
outs
out
mov
and
push
cmp
(bad)
mov
mov
in
inc
add
pop
pop
test
and
ins
cmp
dec
dec
or
jecxz
pop
ret
xchg
cli
cmp
mov
test
arpl
je
fidiv
or
fwait
ds
adc
cmp
rol
inc
call
clc
add
push
adc
dec
pushf
sub
pop
movs
mov
sub
adc
push
dec
mov
sbb
jne
inc
imul
test
jl
lods
loopne
call
movs
and
retf
mov
lds
mov
ja
cmpxchg
push
jmp
inc
adc
mov
ss
dec
mov
mov
mov
jae
pop
pop
fdivr
int3
mov
mov
scas
das
sub
(bad)
sbb
add
mov
pop
outs
mov
sbb
push
inc
jae
pop
add
lods
aam
in
mov
xchg
sbb
sbb
push
mov
mov
xor
sbb
test
fistp
stos
mov
imul
stos
movs
cmp
cmps
movs
test
dec
adc
lds
jge
mov
loop
jb
cdq
mov
aam
(bad)
add
cmp
movs
stc
fs
jmp
into
xor
xchg
dec
test
sbb
movs
popf
mov
popf
xchg
inc
fnsave
ins
loope
push
xor
add
cmc
adc
cmc
scas
mov
and
das
call
add
push
pusha
pushf
lea
js
xchg
ficom
mov
mov
pop
repnz
sbb
outs
or
fcmove
mov
ficomp
mov
nop
pop
add
out
push
dec
push
aad
lea
jne
add
and
mov
inc
pop
dec
jp
das
pop
xchg
cwde
daa
std
outs
setnp
xor
inc
dec
inc
ss
fnstcw
aam
fldcw
and
aam
les
xor
jno
push
imul
push
or
dec
push
push
jne
xor
stos
(bad)
sti
cmc
data16
ins
popa
jae
add
xlat
sbb
sub
cmp
mov
sub
push
push
inc
pop
(bad)
mov
(bad)
cmp
sub
imul
xor
push
mov
inc
data16
shl
inc
inc
mov
xor
icebp
push
pop
xchg
add
sub
int
pop
jle
inc
(bad)
fcmovu
frstor
push
push
inc
ror
fwait
inc
je
ret
test
dec
ret
pop
popa
loop
clc
xlat
mov
mov
push
push
lahf
mov
iret
hlt
lods
das
inc
push
icebp
out
fistp
sub
jns
loopne
sub
in
mul
mov
pusha
pop
jmp
in
sti
inc
pop
out
jg
push
dec
int3
outs
inc
inc
jl
rcr
push
out
mov
add
icebp
xchg
pusha
shr
cmp
bnd
int3
or
cli
sbb
sub
pop
(bad)
aas
aaa
jae
or
je
push
and
pop
adc
mov
xor
mov
sub
sbb
xchg
and
xor
es
xchg
jbe
outs
xor
(bad)
mov
(bad)
mov
sti
mov
sub
jmp
cmps
mov
loope
cli
call
inc
jbe
out
sub
outs
adc
ficomp
xchg
xchg
ficomp
fsub
add
and
pop
dec
dec
in
pextrw
ds
xor
mov
pop
cmp
repnz
add
mov
test
popf
inc
pop
pop
retf
cmp
adc
mov
mov
(bad)
push
xor
aaa
mov
mov
push
inc
jb
mov
inc
pop
enter
call
out
mov
lods
(bad)
test
jne
xchg
jb
inc
add
xchg
sahf
scas
xchg
popa
adc
sbb
std
and
mov
into
repnz
adc
fwait
movs
outs
push
push
push
mov
xor
mov
sbb
shl
jae
cld
sar
aam
sbb
sub
xchg
jecxz
jb
adc
inc
test
into
mov
pusha
xor
(bad)
punpckhwd
push
les
mov
and
dec
dec
sar
mov
and
scas
sbb
sbb
mov
outs
mov
or
mov
push
cmp
or
mov
(bad)
xor
ds
xchg
or
out
jae
pop
mov
jle
mov
iret
inc
push
stos
sbb
pop
(bad)
pop
mov
test
mov
mov
pop
leave
scas
(bad)
ficom
cmp
lds
bound
xchg
push
pop
pop
add
cdq
cwde
clc
xor
and
mov
lahf
adc
pusha
add
in
fwait
push
pop
je
push
(bad)
popf
ss
out
sub
fist
stos
retf
pop
inc
pop
ds
xlat
push
lods
add
icebp
stos
push
test
mov
and
loop
jne
adc
mov
(bad)
xor
pop
test
adc
call
push
push
retf
jecxz
iret
fwait
out
fidiv
leave
mov
xor
or
test
cli
pop
out
mov
retf
(bad)
cdq
fwait
mov
cmp
movs
in
pop
fistp
cld
bound
adc
repnz
test
dec
stos
loopne
add
rcl
cmps
and
push
paddb
jo
scas
clc
mov
sub
inc
aad
cmp
mov
popa
mov
jg
mov
movs
add
out
inc
and
pop
movs
push
mov
jl
outs
clc
ins
or
jae
sbb
mov
loope
popa
mov
add
mov
in
cmp
mov
adc
jecxz
fwait
mov
jno
jle
por
sub
add
adc
mov
iret
and
jmp
loope
popa
and
xor
mov
stos
mov
ins
xor
adc
call
fistp
sahf
pop
stos
bound
add
popf
mov
cmc
aad
shr
xchg
out
(bad)
loop
sbb
jmp
(bad)
adc
(bad)
(bad)
ins
sub
ins
call
cmp
mov
scas
push
sar
xchg
pop
and
scas
pop
mov
dec
mov
sbb
sbb
mov
sub
icebp
into
add
jg
test
fisttp
retf
in
repnz
test
aas
fcom
mov
aad
es
pop
ss
cmp
xchg
test
pop
fmulp
mov
int
out
cmp
mov
pop
cmp
push
std
jae
(bad)
sahf
popa
push
mov
fsqrt
call
jg
sub
mov
inc
lea
or
aad
jmp
add
int3
retf
retf
mov
test
nop
(bad)
repz
xor
adc
push
sbb
retf
cwde
lahf
mov
test
stos
test
inc
jl
lahf
push
popf
stc
call
pop
jae
stc
mov
rep
mov
add
js
ja
dec
outs
std
mov
movs
iret
test
add
(bad)
xor
je
inc
popa
dec
sub
mov
cli
mov
pop
xchg
jmp
stos
jmp
repnz
pop
ds
or
and
jae
iret
aaa
lods
dec
mov
inc
retf
inc
mov
je
lahf
(bad)
pop
je
push
ret
loopne
push
ss
retf
int3
push
pop
call
js
call
cmp
add
shl
dec
push
(bad)
in
ror
sbb
retf
out
adc
fdiv
cs
xchg
add
mov
xor
and
nop
jmp
jg
pushf
(bad)
cmp
data16
add
xchg
pusha
xchg
mov
inc
inc
push
pop
mov
mov
movntps
jne
or
jecxz
xchg
pop
mov
test
cld
inc
push
sti
rcl
inc
or
movs
(bad)
push
loop
test
pop
xchg
jg
loop
mov
aam
push
sub
xchg
dec
jo
pop
out
or
mov
dec
xlat
mov
jmp
pop
loop
cmp
outs
cmp
fist
je
jbe
scas
and
pop
fldcw
imul
push
(bad)
and
loope
mov
adc
sbb
or
and
sahf
ror
retf
jns
inc
adc
(bad)
outs
inc
jne
xchg
mov
sub
sar
or
mov
shl
loopne
pop
pop
xor
jbe
fldpi
dec
into
lock
pop
gs
loopne
clc
sbb
adc
adc
out
adc
pop
ins
jle
pop
push
mov
addr16
fnstcw
out
dec
pusha
mov
sub
sbb
pop
int3
add
and
scas
sub
ins
inc
pop
rcl
or
push
fldcw
dec
imul
lock
mov
cmp
imul
xor
cwde
mov
repnz
cmp
jns
retf
pop
pushf
xchg
cmp
jns
jmp
mov
mov
add
xlat
mov
lods
sbb
xor
push
iret
mov
popf
pop
sahf
test
cwde
cmp
std
cwde
mov
cld
mov
ins
inc
mov
push
inc
mov
jp
fimul
jg
push
js
jmp
rcr
mov
cmc
int3
inc
jo
jle
push
mov
mov
cmp
stos
xor
cmps
fwait
outs
sti
or
inc
xchg
pop
cld
es
jp
mov
int3
mov
mov
sbb
outs
rol
(bad)
arpl
or
lds
pop
and
mov
xchg
inc
shl
popa
cs
inc
push
xchg
into
mov
jbe
sub
sub
cwde
add
mov
pop
test
xor
ins
rol
test
jecxz
sar
es
mov
(bad)
dec
pop
sbb
popa
and
loopne
popa
adc
adc
imul
lods
imul
inc
and
lods
int3
mov
cdq
scas
cdq
mov
jle
int3
cwde
add
adc
sahf
sti
ss
xchg
enter
aaa
mov
or
out
js
clc
or
xchg
dec
cli
jbe
inc
and
cmp
es
mov
mov
mov
adc
ror
hlt
xor
shl
(bad)
pop
sub
in
sub
or
adc
xchg
call
xchg
mov
cmps
fdiv
sahf
pop
jae
jl
retf
fld
lods
(bad)
retf
jecxz
adc
sub
icebp
push
xchg
lock
sub
mov
mov
xchg
dec
aam
mov
enter
mov
cdq
test
xchg
xor
xor
pop
mov
or
or
ret
stc
push
fidiv
jne
push
sbb
fwait
xor
jl
fs
movs
adc
adc
retf
hlt
inc
fs
test
pop
pop
inc
out
aas
mov
and
loope
fst
fcomp
cmp
call
call
cmps
inc
mov
sub
adc
add
dec
fidiv
or
jns
or
int
sti
jnp
sbb
add
push
ficom
dec
nop
aam
pop
xor
stos
add
daa
jnp
pop
add
xchg
xchg
sbb
xlat
enter
(bad)
icebp
test
mov
mov
push
out
clc
jmp
add
jp
aad
sub
hlt
sub
out
mov
(bad)
pop
int3
(bad)
pop
jne
and
mov
lock
inc
mov
cmp
ds
adc
xchg
dec
sub
and
mov
and
ror
mov
cdq
ds
popf
xchg
sub
jne
adc
mov
in
mov
fcmovb
xchg
call
les
jnp
lea
leave
dec
sbb
jo
pop
push
stos
nop
out
push
scas
sub
rol
jp
cmp
push
jb
jnp
push
aas
minps
pop
stos
ror
(bad)
call
(bad)
push
dec
sbb
stos
test
adc
jp
add
lods
adc
and
sub
cli
fcom
mov
icebp
xchg
xchg
cmp
call
push
push
repnz
adc
mov
imul
(bad)
call
jmp
stc
in
cs
jle
sbb
push
jnp
cdq
push
adc
out
or
jl
mov
rol
nop
imul
pop
mov
mov
push
rcl
shl
loope
rcr
std
mov
cmp
mov
sbb
push
jl
cld
jns
not
or
cdq
sbb
imul
push
(bad)
and
add
mov
mov
xlat
add
adc
mov
sub
sbb
call
xchg
xchg
ja
add
(bad)
loope
push
test
sub
std
dec
aas
mov
pop
jge
cmp
xchg
cmp
dec
mov
fidivr
sbb
adc
push
popa
sbb
mov
movs
add
fmul
pop
loop
dec
jge
or
xchg
stos
inc
or
cmp
mov
rcl
pop
and
sub
mov
ins
cmp
(bad)
mov
mov
pop
sti
sbb
cwde
mov
sahf
aas
enter
movs
ins
pop
jmp
push
outs
pop
jae
push
addr16
test
xchg
stc
and
mov
out
mov
add
(bad)
mov
imul
pop
push
shl
outs
mov
jae
cdq
or
sti
(bad)
popf
xchg
retf
xlat
in
inc
sbb
retf
jb
sub
jne
jbe
rcl
push
pop
sub
adc
mov
mov
rcr
leave
js
inc
mov
inc
jl
push
jecxz
cdq
lods
ins
xor
jae
shr
sbb
cwde
pop
sub
xchg
ror
shr
or
fst
shr
das
adc
icebp
dec
les
add
loopne
push
mov
ds
xor
ja
add
in
mov
icebp
add
add
and
sbb
test
fbld
fs
add
ins
inc
xchg
adc
ja
loopne
clc
pop
or
and
leave
cdq
add
push
int
sub
jno
pop
xchg
in
push
hlt
mov
sbb
push
sbb
fadd
mov
add
pushf
mov
sbb
adc
lods
push
or
or
adc
fdiv
push
jge
out
or
loop
pushf
in
repnz
mov
pop
test
inc
test
and
out
(bad)
sbb
xchg
or
adc
inc
xor
jne
add
mov
adc
or
shl
mov
rol
repnz
cmp
jno
bound
bound
pop
mov
push
hlt
shl
dec
mov
mov
sbb
out
xor
dec
pop
or
pop
sub
mov
cwde
stos
pusha
jmp
jmp
mov
sar
(bad)
cmp
adc
mov
das
rcr
dec
rol
ins
adc
leave
popa
shl
stos
(bad)
mov
ja
icebp
jb
xchg
sbb
rcl
cmp
stos
push
imul
leave
int
sub
sub
scas
pop
fnstenv
in
gs
mov
jo
push
sar
adc
(bad)
sahf
es
bound
cmp
xchg
cvtps2pd
and
lods
in
cli
shr
and
mov
cdq
jmp
push
int3
sub
ss
and
xor
lahf
jecxz
push
push
mov
shr
aas
push
xor
in
adc
clc
pop
cwde
ins
dec
dec
mov
fs
mov
sub
shl
mov
mov
adc
jecxz
(bad)
sbb
sti
sub
sub
jo
xor
sub
jecxz
jmp
mov
push
xchg
jl
inc
fild
aam
adc
fdiv
sbb
fldcw
cmps
(bad)
stos
push
xchg
stos
hlt
mov
xchg
loopne
test
fs
ror
scas
(bad)
sbb
lock
hlt
dec
mov
mov
inc
mov
jbe
pushf
loopne
and
(bad)
movs
clc
inc
mov
aas
mov
pop
or
push
pop
aas
repz
fadd
scas
lods
imul
arpl
pop
xchg
daa
ja
ss
jbe
fs
hlt
test
inc
xchg
add
or
mov
dec
mov
repnz
sub
fdiv
sbb
mov
lds
sub
dec
push
rcl
or
dec
xchg
push
loop
mov
lock
xchg
push
fisub
ja
dec
add
push
pop
sbb
sub
nop
call
fadd
js
mov
dec
xchg
xor
shl
(bad)
inc
out
xor
(bad)
clc
mov
int3
dec
icebp
scas
and
js
loopne
(bad)
addr16
retf
jge
mov
add
pop
or
(bad)
inc
mov
rol
test
sbb
ins
test
sbb
hlt
in
rol
arpl
or
jmp
icebp
popa
pop
ins
fwait
aad
push
enter
std
jo
(bad)
jecxz
lods
std
retf
pop
pushf
jg
mov
ins
jns
call
and
xchg
cmc
xchg
push
dec
push
sub
mov
push
push
dec
mov
adc
mov
mov
cmp
ins
adc
jae
loopne
pop
iret
(bad)
and
dec
mov
and
in
les
retf
xor
into
xor
inc
shl
mov
leave
ret
pop
aas
xor
cmp
xor
xchg
or
add
stc
push
stos
jp
xor
movs
mov
mov
jge
scas
cmp
sti
cmp
pusha
in
into
pop
mov
jecxz
sub
outs
sub
jl
addr16
dec
jg
imul
push
jecxz
stc
mov
push
sub
cld
jl
js
call
in
pop
repz
inc
std
pop
xor
jnp
(bad)
jb
xor
adc
mov
hlt
int
push
mov
loop
jae
adc
ret
cmp
test
mov
jecxz
push
jmp
mov
sub
test
pop
jmp
sub
add
xchg
inc
adc
in
test
repz
das
xor
mov
test
sbb
xchg
scas
or
jae
jae
popa
xchg
(bad)
retf
fsubr
out
bound
fild
call
jb
push
ret
nop
mov
jns
push
jne
push
pusha
sbb
add
popf
jecxz
je
pop
inc
jb
loope
imul
dec
shr
mov
jmp
adc
jo
jp
mov
add
int3
cmp
pop
test
cmp
arpl
mov
frstor
jle
sbb
pop
mov
fst
nop
add
shl
xchg
out
sbb
leave
jae
out
xor
loop
add
jg
mov
push
loop
(bad)
adc
add
ins
pop
retf
shl
cdq
adc
test
add
cdq
call
jmp
mov
out
dec
cdq
dec
pushw
push
popf
sbb
icebp
sbb
push
adc
or
mov
rcr
jmp
iret
dec
sti
and
call
jle
add
inc
stc
fadd
xor
jno
add
or
scas
xor
mov
int3
cmc
ds
pop
pusha
adc
sbb
inc
inc
popa
gs
test
sub
cmp
mov
mov
int3
retf
inc
stc
rol
sbb
sbb
add
inc
or
mov
add
out
retf
xlat
cmp
jle
daa
mov
sbb
call
xchg
mov
mov
out
mov
hlt
jp
movs
inc
lahf
mov
rol
mov
cmp
adc
movs
pushf
xchg
push
js
aam
gs
into
rcr
popf
lods
dec
or
dec
adc
icebp
test
sbb
pushf
sbb
mov
mov
dec
aam
outs
and
(bad)
xor
jl
add
jge
(bad)
int
out
dec
mov
scas
or
mov
add
cmp
test
xor
xor
hlt
dec
cmp
clc
stos
(bad)
outs
pop
imul
sub
mov
das
rcl
jmp
ins
inc
mov
xchg
hlt
sub
adc
xchg
clc
pop
outs
mov
aas
mov
movs
ret
jb
dec
movs
add
pop
dec
jo
cld
cld
and
ins
mov
in
mov
push
add
movs
fldenv
jle
xor
shr
jmp
mov
and
mov
cld
xor
push
cmovae
sub
inc
push
aas
pop
xlat
mov
pop
or
in
mov
push
lock
std
adc
icebp
mov
and
popa
data16
std
and
dec
pop
or
ret
sti
or
jbe
and
xchg
sbb
fadd
xchg
xchg
out
mov
test
mov
or
xchg
adc
out
call
es
repz
jo
fucomp
xchg
push
jb
push
icebp
cmp
xchg
mov
mov
enter
sub
std
pop
jle
in
scas
push
repz
call
sub
addr16
jae
sub
sub
adc
inc
test
repnz
and
fbld
out
popf
jnp
repnz
or
push
out
push
stos
jo
pop
pushf
inc
xchg
mov
aas
invd
pop
iret
stc
sahf
aad
cmps
and
lea
adc
sbb
cs
in
arpl
loopne
adc
stos
cli
mov
les
sbb
retf
cld
mov
mov
adc
mov
jge
loope
enter
retf
(bad)
adc
in
aam
and
cmps
icebp
movs
aas
in
fnstcw
mov
jg
add
push
sbb
add
xor
cmp
pop
mov
xchg
ret
inc
mov
in
rcr
mov
mov
test
jno
xor
xor
ret
jmp
pop
in
add
and
mov
sbb
dec
mov
test
dec
cmp
call
ja
pop
scas
pop
(bad)
loop
jb
cmp
test
jp
xchg
nop
adc
cdq
pop
fwait
pop
pushf
sbb
adc
dec
inc
cs
aas
inc
mov
xor
loop
and
icebp
mov
cmps
movs
cmp
in
xchg
or
fld
sar
mov
pop
inc
ins
icebp
in
mov
pop
test
movs
jae
pusha
pop
pop
shl
sub
xchg
push
mov
and
stc
lods
cmp
movs
push
add
xchg
cmp
in
in
int
or
and
mov
adc
das
push
inc
jns
sub
xchg
jno
push
xor
mov
inc
mov
jns
xchg
mov
inc
mov
add
pop
jnp
sub
data16
ret
arpl
sbb
data16
cmps
push
mov
xchg
movs
mov
in
mov
mov
sub
rcr
clc
icebp
sbb
jne
dec
jno
xchg
pop
out
fdivr
std
jle
fild
sub
arpl
pop
(bad)
div
mov
cld
mov
in
fs
xor
and
cmp
sbb
jns
in
xchg
stos
sahf
xchg
add
pop
rcr
push
xchg
and
ja
and
pop
pop
mov
in
xchg
sub
fimul
addr16
or
dec
pop
stos
xchg
sahf
sub
mul
ja
mov
lahf
xor
or
ins
push
jp
pop
sbb
clc
ret
xor
and
pop
ss
scas
fsub
xchg
ja
xlat
popa
jno
pop
xchg
daa
faddp
mov
add
adc
and
jp
adc
dec
pop
out
int
icebp
adc
sbb
or
int
pop
sar
ja
or
loopne
retf
or
jge
dec
mov
push
jmp
adc
sub
or
add
pop
imul
into
or
sti
dec
or
and
xor
jmp
add
xor
xchg
(bad)
xchg
outs
push
mov
je
jecxz
ret
jbe
add
mov
jge
sub
push
add
mov
mov
(bad)
jno
ds
fidiv
daa
ins
int
js
or
cwde
arpl
sub
movs
jnp
mov
and
xchg
pop
cmp
jge
push
sub
sar
add
cmps
add
and
test
adc
dec
fidivr
mov
dec
and
or
fdivr
jno
test
pushf
cmp
inc
pop
or
stos
rcr
test
push
mov
inc
push
sbb
mov
mov
inc
(bad)
jmp
mov
and
(bad)
adc
lea
call
mov
out
cs
scas
leave
cli
mov
mov
jns
mov
push
add
es
mov
sbb
retf
fmul
adc
mov
mov
ins
fild
ret
push
pop
fidiv
push
jne
stos
mov
fisub
(bad)
dec
or
xor
mov
cdq
xchg
dec
clc
pushf
call
retf
std
xchg
xchg
mov
rol
dec
mov
outs
ins
pop
pop
push
imul
dec
imul
(bad)
mov
cmps
or
les
(bad)
repz
aad
xchg
push
jp
aaa
xchg
dec
push
retf
jmp
test
pushf
div
inc
push
ds
neg
xchg
add
dec
or
pop
pop
sbb
(bad)
stos
mov
or
pop
(bad)
ficomp
inc
jmp
rcl
jns
push
xor
mov
xchg
enter
into
ss
ins
rol
mov
ss
repz
xchg
jae
mov
lods
inc
imul
or
mov
sti
jbe
ja
inc
or
and
mov
mov
shr
add
mov
bound
fucomp
xor
out
cmp
js
fwait
and
xchg
ins
cmp
loop
inc
push
dec
sub
ins
mov
or
ss
or
bnd
sti
in
fimul
sub
ret
xor
sbb
data16
add
push
pop
es
iret
push
ja
aaa
push
mov
cwde
inc
push
fisubr
adc
jge
mov
fwait
push
pop
jl
mov
xor
inc
addr16
jle
std
add
outs
mov
(bad)
mov
movs
out
push
test
aam
or
dec
push
adc
mov
sbb
sub
add
mov
mov
int
cmc
jno
pushf
cmp
movs
dec
adc
sti
out
pusha
cmp
xlat
cdq
pusha
fucomi
rol
jl
scas
sub
mov
push
mov
push
das
xor
(bad)
(bad)
mov
dec
pusha
push
push
mov
push
repz
test
ja
add
jmp
ja
pushf
sar
ins
adc
xor
aaa
retf
cmc
fwait
push
test
push
mov
call
pop
sub
aad
loopne
adc
push
pop
or
inc
int
leave
mov
and
mov
fsubr
push
cli
hlt
scas
xlat
rol
adc
retf
ficom
or
inc
push
mov
pop
repz
push
adc
pop
enter
pop
jae
and
cmp
inc
mov
and
popf
mov
in
dec
dec
jno
jmp
mov
daa
or
aaa
popa
jno
jno
loop
push
jae
sbb
enter
jbe
jns
mov
sbb
push
test
add
sub
cmp
adc
mov
sti
sar
adc
les
shl
add
jmp
int3
fstp
adc
jle
push
ins
dec
call
retf
pop
add
pop
and
adc
xor
and
repnz
(bad)
out
sbb
cmps
(bad)
outs
cli
dec
cli
jne
pop
xor
push
mov
popa
inc
pop
(bad)
bound
pop
fisttp
sbb
add
jmp
loope
ror
or
xchg
cmc
int3
xor
enter
or
jg
mov
xchg
sbb
dec
and
mov
loopne
pop
into
and
repnz
(bad)
fiadd
sahf
xchg
adc
jne
push
cmp
inc
je
bound
ins
daa
fstp
ins
mov
stc
movs
movs
pushf
retf
fcmovnu
dec
dec
jne
and
jl
daa
dec
jmp
or
ffreep
int
jle
hlt
mov
mov
dec
pop
out
out
icebp
into
push
adc
test
sbb
mov
retf
ins
in
imul
imul
ja
jne
xchg
sbb
dec
retf
jbe
xchg
push
dec
fldcw
not
dec
mov
fnstcw
dec
sbb
ret
imul
or
sub
and
das
mov
cmp
pop
daa
lods
and
sbb
xchg
int
add
std
in
rol
xchg
pop
test
sbb
pop
test
jmp
add
enter
mov
add
push
mov
sub
aad
mov
pop
jp
test
jmp
std
rcr
outs
dec
aas
in
mov
nop
push
int
dec
inc
aad
jb
mov
mov
dec
dec
add
push
fidiv
sbb
das
mov
in
inc
fstp
in
ins
dec
lea
inc
pusha
in
out
push
sbb
inc
nop
mov
cmp
pop
fidiv
push
mov
mov
xor
jp
cmp
jmp
cmp
mov
(bad)
std
xchg
sti
or
in
push
push
lock
pop
or
push
dec
cmp
inc
repnz
pop
rcl
outs
fld
mov
jmp
clc
repz
xor
adc
adc
dec
daa
retf
pop
outs
out
int3
ror
dec
fcomi
leave
or
fidiv
outs
jmp
adc
mov
fs
movs
mov
(bad)
jbe
dec
sbb
sahf
xchg
movs
xchg
mov
mov
test
aaa
nop
ja
cwde
cdq
popa
sub
out
inc
pusha
addr16
jnp
mov
jge
push
lods
sbb
push
fbstp
add
xchg
out
enter
fisubr
and
adc
cmp
mov
cmp
ret
push
dec
jo
test
sbb
leave
(bad)
push
sub
push
push
sbb
pop
jl
rcr
add
mov
arpl
xchg
in
inc
(bad)
sti
(bad)
pop
dec
mov
loop
mov
aaa
mov
dec
dec
mov
and
jnp
cmp
out
stos
dec
mov
add
test
adc
mov
sub
mov
or
fadd
push
push
je
fnsave
add
das
add
in
jb
pop
push
or
add
ins
mov
cmps
or
int3
cmps
jne
add
mov
pop
dec
sbb
mov
adc
mov
inc
mov
lds
(bad)
sub
(bad)
sbb
push
imul
cli
inc
rcr
push
data16
xlat
mov
in
sub
push
and
lods
fs
adc
idiv
(bad)
adc
into
pop
aad
sub
inc
mov
sbb
loop
ins
test
dec
lahf
fwait
xchg
repz
mov
ret
test
and
mov
loope
xor
pop
sub
cmps
adc
call
push
or
ins
push
mov
push
pushf
mov
fbld
neg
mov
mov
mov
xor
mov
and
dec
shl
ror
mov
in
mov
push
out
mov
cli
lods
(bad)
out
pusha
pop
mov
jne
lahf
hlt
jmp
xchg
stc
mov
int
xlat
push
or
lock
inc
ins
mov
sbb
test
jle
call
lea
aam
mov
pop
xor
jns
out
cmps
sub
in
(bad)
retf
mov
or
push
push
push
in
adc
shl
data16
popf
dec
jmp
mov
cmp
rcl
popa
iret
das
icebp
mov
mov
jo
mov
jp
inc
cmp
push
xchg
outs
jb
dec
push
mov
aaa
cmp
repnz
xchg
push
fild
mov
pusha
mov
xchg
cmp
mov
scas
jbe
loope
xlat
(bad)
test
loopne
daa
aam
push
or
jl
shl
ret
sti
aad
adc
mov
xor
outs
dec
pop
jnp
xor
jne
daa
mov
sbb
mov
cmp
test
test
lahf
inc
mov
adc
mov
pop
xchg
cld
in
loopne
mov
arpl
js
push
sbb
ins
cwde
rcr
mov
(bad)
jnp
jp
scas
retf
cli
cmp
les
cmc
jge
adc
enter
addr16
mov
sub
jne
ficom
repz
cmp
or
inc
pop
ja
push
mov
test
cli
movhlps
sbb
(bad)
jmp
add
inc
cmp
test
imul
push
add
test
xor
jns
and
xchg
lods
sti
or
(bad)
mov
lds
cli
adc
and
mov
pop
je
inc
add
mov
jge
out
add
fs
(bad)
aam
push
test
pop
jbe
hlt
pushf
mov
dec
mov
iret
fisub
push
loopne
retf
xchg
jecxz
push
pop
sbb
xchg
sbb
repnz
arpl
sub
loop
mov
movs
dec
sahf
push
push
lock
and
aaa
dec
inc
inc
mov
pop
out
and
xchg
mov
repnz
sbb
mov
and
fcom
pop
in
xor
pusha
(bad)
ficom
add
inc
ds
in
add
xchg
dec
adc
pushf
jmp
je
push
push
pop
aad
mov
sbb
jmp
scas
xchg
mov
or
in
xor
mov
mov
xor
mov
or
popa
int3
je
fmul
mov
sbb
jmp
jmp
mov
aam
dec
(bad)
xchg
add
pop
mov
fnstcw
scas
xchg
and
mov
jo
cmp
addr16
mov
pushf
int
sbb
loope
xchg
test
xor
repnz
mov
es
dec
mov
lds
out
cld
ficomp
mov
fmul
in
ins
add
sbb
lods
(bad)
mov
test
adc
and
out
retf
imul
mov
mov
xlat
mov
xlat
pop
xor
es
push
outs
mov
loop
fdivr
mov
xor
add
xlat
mov
mov
add
outs
mov
sbb
enter
(bad)
(bad)
imul
jnp
imul
xchg
push
jno
sub
add
in
mul
daa
movs
mov
scas
jne
add
inc
(bad)
xor
xchg
or
or
mov
dec
adc
lds
pusha
or
add
in
mov
jmp
in
pop
push
mov
cli
movs
push
lods
mov
outs
test
sub
inc
add
jecxz
cld
sar
pop
xor
repnz
sbb
push
cmp
into
add
dec
idiv
mov
fld
adc
test
pop
or
inc
push
xor
inc
aas
scas
sub
pushf
cs
in
or
pusha
jmp
scas
xchg
xor
fcmovbe
or
add
(bad)
xlat
shl
in
jecxz
mov
xchg
pop
hlt
mov
mov
outs
(bad)
mov
aas
dec
aam
outs
mov
mov
pop
and
xor
cmps
cmp
imul
pop
adc
cdq
lock
fcmovbe
dec
cmp
jl
(bad)
sub
mov
sti
adc
(bad)
push
xchg
mov
lods
or
int
cli
xlat
dec
mov
add
dec
dec
pop
mov
cmp
dec
push
scas
and
fmulp
mov
pop
add
push
sti
cmps
sub
addr16
dec
mov
std
imul
mov
test
stos
xor
imul
loopne
xchg
in
or
jmp
jbe
(bad)
jbe
mov
movs
paddq
popf
mov
dec
idiv
push
cmp
mov
mov
fst
out
fnstenv
adc
ret
jecxz
mov
repnz
test
mov
xor
jnp
pop
test
sbb
outs
rol
data16
call
ror
or
mov
ret
cmps
jb
mov
aaa
ds
xchg
fdivr
int3
or
sub
push
pushf
int3
aam
push
push
cli
stos
xchg
lods
lock
and
xchg
ror
mov
inc
cmp
mov
call
sbb
enter
sbb
and
aam
lock
shr
fdiv
js
sbb
nop
or
inc
pushf
bound
cli
sahf
(bad)
fidiv
push
ins
and
test
mov
or
add
ret
sub
add
arpl
adc
and
push
pushf
jecxz
cwde
and
dec
inc
add
out
rcr
dec
add
push
xchg
hlt
adc
iret
sub
dec
lods
mov
dec
mov
shl
in
xlat
icebp
sub
push
out
push
lea
dec
call
out
call
lds
pop
xchg
es
xchg
movs
addr16
adc
pusha
movs
mov
mov
mov
pop
icebp
popf
ja
hlt
xor
fld
xor
sbb
sar
adc
mov
cmps
adc
ja
inc
ins
mov
rcr
imul
mov
pop
daa
cmp
mov
add
xor
dec
clc
lea
js
test
jb
xor
push
xor
dec
and
and
por
in
mov
and
loope
loopne
cmp
dec
outs
aad
adc
(bad)
(bad)
sti
inc
loopne
sbb
fs
sahf
ret
xlat
push
inc
rol
mov
and
(bad)
std
movs
fsub
and
pop
mov
test
mov
xor
inc
repz
shr
sar
mov
ret
xchg
pop
cmc
(bad)
sbb
loope
push
lods
mov
push
fwait
jmp
push
sbb
(bad)
xor
sbb
push
repnz
test
stos
(bad)
loopne
cmp
jmp
rcl
push
add
out
int
pop
les
or
add
push
pop
pcmpgtd
push
cmps
xchg
jmp
icebp
lods
dec
mov
movs
fwait
push
adc
ror
xor
xor
cmp
push
sbb
or
cdq
iret
lods
xchg
add
jo
adc
popa
and
int3
jb
push
xchg
add
jne
and
jb
cmp
push
leave
sub
sbb
or
dec
add
or
add
rcr
jne
loop
mov
mov
ret
addr16
js
jb
inc
ja
xor
cmps
pusha
call
adc
aas
loop
retf
jne
mov
sbb
sbb
in
clc
pop
jl
xor
cld
js
es
cmp
inc
pop
dec
ins
test
(bad)
xor
lahf
jnp
or
scas
popa
mov
fist
das
add
mov
lock
lds
xabort
scas
mov
add
inc
ins
iret
sbb
mov
rol
lahf
push
cmp
xor
outs
or
lods
fidiv
repnz
daa
loope
cmps
cmps
cmp
std
push
in
or
dec
lds
jg
iret
test
or
mov
dec
bound
in
and
(bad)
mov
imul
and
adc
sub
fsub
mov
js
mov
push
mov
adc
lods
enter
ins
stc
adc
cmp
cdq
dec
div
adc
xchg
pushf
push
lock
aam
nop
and
ror
xchg
stos
inc
sahf
inc
jae
mov
scas
sub
jge
mov
cmps
and
and
or
lods
and
xchg
mov
push
xor
pop
xchg
jb
jp
js
neg
inc
and
cmp
add
jle
aaa
aas
mov
xor
pop
push
mov
popf
and
pusha
(bad)
add
bound
cmp
mov
addr16
scas
inc
shl
sub
fisttp
xchg
fistp
pop
jne
clc
hlt
xlat
jno
dec
inc
xchg
in
shr
xor
leave
jg
push
cmp
mov
popa
add
stos
in
cmp
loope
dec
sbb
lock
mov
cmps
sbb
sbb
mov
xlat
addr16
push
xchg
sub
cmp
cmp
or
jae
push
stc
xchg
imul
sahf
pop
jg
push
aas
scas
xchg
in
dec
(bad)
cld
inc
add
push
sub
push
div
daa
pop
xchg
out
xchg
inc
(bad)
aad
jl
out
into
push
or
jmp
int
mov
loopne
aaa
dec
enter
jnp
mov
ds
sti
add
inc
push
adc
push
jne
nop
xchg
sti
cdq
stos
inc
xchg
or
xchg
inc
mov
sbb
retf
fs
icebp
(bad)
ins
aam
push
dec
dec
mov
add
repnz
(bad)
outs
jnp
dec
sbb
lods
mov
xchg
fidiv
and
and
and
inc
add
stos
lock
pop
cwde
add
mov
dec
or
pushf
xlat
rcl
(bad)
xchg
ficom
int
loope
push
aad
push
mov
xchg
xchg
dec
ret
adc
in
fcmovbe
fnsetpm(287
cmp
sar
sbb
popf
in
ja
mov
sbb
in
xor
push
cmp
xchg
mov
in
adc
call
or
mov
push
popa
dec
(bad)
std
les
push
ja
xchg
or
cmps
sub
leave
xchg
jecxz
(bad)
push
int3
sub
(bad)
retf
push
push
popa
lods
jmp
arpl
idiv
movs
aaa
push
push
push
jne
xor
or
add
scas
pop
popa
push
pop
cs
lea
outs
mov
loop
sbb
fcomp
cdq
xchg
pop
sbb
call
retw
into
std
dec
cmp
lahf
pop
lods
mov
(bad)
shl
addr16
mov
fisubr
scas
xor
arpl
xchg
adc
xor
add
in
cwde
lahf
movs
mov
sbb
fsubrp
(bad)
mov
sbb
shl
mov
jo
sahf
mov
inc
mov
in
iret
jg
ret
pop
pusha
clc
aam
mov
repnz
cmps
mov
hlt
(bad)
repz
xchg
ss
and
sahf
jo
jne
mov
(bad)
xlat
aas
in
and
ja
loope
add
mov
jae
cmp
fldenv
jmp
adc
ds
stos
retf
jge
inc
sbb
push
arpl
ja
pop
dec
sbb
ins
inc
bound
test
popa
mov
aaa
push
sbb
stos
lock
stc
int
je
popf
push
addr16
outs
pushf
jp
mov
mov
(bad)
cwde
pop
mov
push
adc
fld
cmp
lods
dec
retf
xchg
test
out
stc
inc
test
leave
mul
fld
xchg
les
mov
popa
test
aam
sub
movs
lea
je
sbb
cmps
push
pop
inc
shr
fld
rcl
push
mov
or
(bad)
jmp
cmp
inc
pop
std
and
or
cld
xor
xchg
pop
das
clc
inc
sbb
inc
ret
cmp
sbb
fwait
leave
add
xchg
or
xchg
int
adc
mov
add
jge
sar
xor
das
jb
mov
(bad)
(bad)
xor
ins
pop
cmp
fstp
inc
xchg
mov
sub
or
lock
in
inc
out
out
sub
into
call
cmps
fmul
mov
adc
adc
and
rdmsr
iret
inc
test
aad
jmp
popf
dec
test
fdiv
inc
xor
and
xchg
dec
jmp
mov
loopne
xor
mov
mov
pop
mov
sbb
mov
push
pop
cmp
sbb
fnstsw
add
nop
das
shl
push
push
xor
jge
aad
jge
pop
jmp
(bad)
inc
xchg
scas
ss
es
loop
repnz
fwait
iret
pop
ret
jecxz
add
clc
add
cs
jmp
xor
mov
pcmpeqd
dec
imul
sbb
in
in
and
hlt
dec
in
push
xor
pop
jmp
test
pop
mov
xchg
jmp
daa
push
ss
xchg
dec
xor
repz
dec
inc
mov
dec
jmp
push
cmps
sub
jge
mov
stc
fcomi
je
test
jbe
test
adc
cmp
js
sbb
out
es
je
xlat
je
sbb
jns
inc
mov
leave
std
adc
(bad)
adc
int3
sub
outs
xor
outs
shl
sahf
and
add
jno
inc
out
mov
inc
mov
fs
lea
or
test
cwde
fisttp
push
out
sub
popa
jo
mov
in
dec
movs
out
sub
and
cmps
iret
cmp
and
mov
std
repnz
sbb
out
test
int
jge
test
push
arpl
dec
mov
add
dec
(bad)
sub
sbb
mov
scas
cmp
xchg
xor
adc
ror
jmp
mov
aam
int3
push
adc
cwde
xor
xchg
mov
xchg
es
int3
and
addr16
stc
sar
hlt
cmc
xor
(bad)
mov
in
(bad)
sub
jns
ins
jae
popa
pop
xlat
pop
movs
push
mov
dec
je
pop
cs
adc
lds
cmp
(bad)
fsubr
cmp
or
cmc
enter
jmp
cmp
push
or
cld
xor
pop
push
dec
rcl
sbb
pop
jp
aas
xchg
shr
int3
mov
call
inc
imul
jno
lds
scas
dec
ins
sub
xchg
ret
cmps
das
and
loope
scas
lods
and
loop
add
mov
les
pusha
ss
sub
scas
add
les
and
hlt
jmp
stc
in
out
retf
movs
mov
outs
fisttp
pusha
in
xlat
xchg
inc
lahf
xor
cdq
jg
(bad)
dec
inc
aad
and
je
push
xor
push
test
pavgb
call
inc
pop
xor
and
in
into
adc
fsubp
fnstenv
jl
pop
ret
sbb
addr16
lods
push
retf
or
ror
popa
fdivr
test
int
mov
lds
loope
or
sub
dec
idiv
shr
pop
mov
inc
add
xchg
adc
dec
cmp
dec
jmp
clc
std
jmp
fisttp
loopne
fwait
jle
test
in
scas
imul
cmps
xchg
popa
xor
push
test
adc
sub
outs
xor
push
outs
mov
xchg
adc
pop
js
sub
sub
out
mov
lds
out
mov
out
lds
jecxz
arpl
aam
repnz
cmps
retf
xchg
ins
push
xor
pop
cld
mov
lds
xor
inc
mov
repnz
into
in
clc
adc
popa
mov
add
or
idiv
mov
pusha
and
out
(bad)
mov
push
and
cmps
push
push
jae
adc
mov
sahf
in
fwait
add
pop
push
mov
sbb
mov
outs
or
repz
xor
cmp
mov
mov
in
or
push
sub
dec
push
lock
movs
cmps
pusha
mov
outs
ret
xchg
ins
add
jg
aam
aas
iret
std
adc
icebp
sub
mov
xchg
mov
mov
or
pop
(bad)
fadd
std
out
shl
jbe
xchg
sbb
fsub
bextr
cdq
mov
in
mov
or
repz
pop
xor
test
scas
enter
loopne
fist
sar
pop
push
scas
ret
cmps
out
cmc
lods
jnp
jmp
and
leave
fistp
popa
push
rcr
jae
stos
shr
mov
xor
push
(bad)
pop
sbb
xchg
and
shl
(bad)
mov
xchg
xor
fisub
sbb
lods
js
mov
mov
or
dec
and
sbb
imul
gs
imul
cmps
(bad)
movs
pusha
xchg
sub
mov
retf
in
in
(bad)
not
mov
out
push
daa
out
ins
or
and
inc
js
movs
cwde
push
push
or
jne
retf
adc
ja
add
mov
(bad)
mov
push
(bad)
sahf
lods
mov
xor
dec
aam
xchg
mov
jmp
sti
repz
sub
fwait
adc
pop
xchg
mov
sbb
lock
pop
or
in
cmp
les
ja
lahf
xor
shr
xchg
xor
mov
movs
mov
add
rcr
imul
ins
dec
mov
sub
leave
add
dec
data16
mov
sahf
scas
ins
sbb
adc
sbb
push
xchg
or
iret
pop
pop
cmc
sbb
loopne
mov
sbb
bound
jg
sahf
dec
movs
int3
call
test
sbb
mov
mov
mov
mov
and
fistp
jbe
lods
leave
retf
ror
icebp
popf
bound
jle
inc
inc
out
pusha
adc
test
imul
cmps
rcl
cdq
sub
ja
push
(bad)
push
or
sub
xchg
xchg
sub
or
inc
sbb
push
outs
add
mov
sahf
add
cs
jle
jmp
lods
pop
xor
push
fdivr
adc
dec
mov
jne
pop
add
popf
fisttp
or
fist
hlt
bound
(bad)
jae
mov
imul
pop
pushf
fadd
mov
cs
xor
dec
pop
(bad)
idiv
sahf
mov
or
in
xchg
call
daa
or
add
jmp
pop
ficomp
out
adc
es
or
dec
hlt
movs
and
push
repz
jmp
shl
and
lods
and
and
jno
xor
inc
adc
or
mov
mov
xor
mov
add
sti
rcl
jmp
fs
call
sbb
in
into
push
aas
xchg
mov
xchg
xchg
(bad)
jmp
dec
push
push
sub
or
arpl
fisubr
mov
in
test
idiv
cld
mov
stc
test
dec
(bad)
and
dec
xchg
les
xor
shl
cmp
dec
mov
ss
push
or
imul
dec
adc
add
push
hlt
xor
cmp
xchg
xchg
daa
(bad)
pop
ss
xchg
mov
adc
adc
xchg
or
repnz
add
test
test
xor
xlat
movs
adc
mov
sbb
jl
daa
repz
xchg
mov
xchg
sbb
repnz
enter
push
mov
add
(bad)
and
call
fsub
mov
test
sub
stc
xchg
clc
stc
sbb
adc
dec
mov
cld
ror
pop
call
lods
jge
jmp
push
add
dec
dec
mov
push
or
xchg
jg
xor
mov
push
cld
push
push
jmp
or
lahf
add
mov
adc
cld
dec
xor
inc
les
xor
and
dec
scas
hlt
sbb
sub
xchg
mov
dec
mov
test
cld
dec
or
push
inc
inc
icebp
mov
sub
ret
xor
and
cmc
cli
add
fisub
xor
push
push
adc
xchg
xor
(bad)
adc
lahf
mov
ins
clc
ficomp
adc
or
sub
and
inc
push
mov
xchg
cmc
sub
add
dec
loop
pop
sub
sbb
push
jmp
lock
rol
(bad)
fsub
dec
cwde
or
add
jge
sub
mov
jb
loop
mov
in
popf
pextrw
maxps
add
shr
or
clc
clc
in
xchg
xor
pop
cmp
js
mov
hlt
lods
jg
adc
cmc
jno
(bad)
inc
jmp
mov
das
jo
add
xor
mov
jno
shl
jne
addr16
loop
scas
push
jecxz
lods
fnsave
adc
mov
or
inc
retf
pusha
xchg
and
jne
lock
mov
push
call
sbb
xchg
adc
ss
mul
shl
mov
bound
in
retf
mov
lds
pop
adc
es
icebp
aas
fisttp
out
push
nop
inc
leave
or
icebp
cmp
hlt
fs
jno
scas
fisub
sar
movs
cwde
sub
mov
aad
jmp
dec
pop
push
pop
add
inc
sbb
retf
pop
pop
adc
xchg
movs
mov
and
mov
lahf
stos
xchg
xchg
fcomp
(bad)
repz
(bad)
mov
sbb
test
push
mov
mov
jle
fnsave
loop
push
clc
jo
mov
add
into
loopne
mov
inc
test
jo
adc
mov
push
loope
dec
push
fcomp
sar
idiv
outs
push
mov
lods
fprem1
int3
dec
lock
mov
fldenv
jmp
imul
test
mov
pop
mov
test
arpl
inc
repz
aaa
repz
shl
enter
or
fwait
addr16
push
fst
outs
fst
popf
popa
(bad)
xor
lods
fcom
sahf
mov
dec
sub
xchg
pop
cmc
jne
cwde
loopne
mov
cmp
mov
add
add
xor
test
mov
jg
test
in
scas
dec
cld
icebp
scas
les
adc
add
ret
push
sub
push
cmp
inc
call
jg
imul
stos
fdiv
xchg
sbb
push
adc
movs
loop
and
sti
(bad)
(bad)
lea
inc
jge
lods
fbld
(bad)
cmp
ins
ins
sahf
lahf
add
adc
repz
push
jmp
scas
aaa
jnp
ss
lock
mov
aas
fidiv
adc
or
call
fwait
iret
movs
lods
fucomip
jmp
cmc
push
retf
jge
rcr
pusha
sbb
je
fdivr
mov
push
mov
mov
aas
fistp
lahf
mov
rol
inc
cmp
xchg
inc
sti
pushf
pop
call
xchg
in
jo
and
call
mov
fs
xor
bound
fsub
mov
jns
repz
ja
in
lea
ror
jmp
dec
xor
mov
mov
xchg
cmp
shl
xchg
mov
shr
jno
xchg
jecxz
mov
outs
push
call
out
jmp
xchg
xchg
adc
int
xor
or
retf
in
test
add
xor
mov
imul
in
dec
fs
in
mov
icebp
pop
add
mov
test
pop
and
loope
cli
cwde
imul
aam
rcr
inc
dec
outs
repnz
lock
inc
sub
push
add
adc
adc
shl
dec
popf
mov
fld
push
cs
neg
in
xor
push
push
ja
jg
jmp
sub
push
retf
bound
(bad)
dec
cs
ret
pusha
sbb
fld
pop
mov
aas
mov
sbb
pop
movs
or
mov
repz
mov
or
je
(bad)
fcom
xchg
popa
addr16
sahf
adc
push
shl
out
and
sbb
xchg
stos
shl
xchg
daa
mov
fnstsw
pop
(bad)
iret
jns
mov
jg
pop
imul
stos
lahf
add
sahf
pushf
jg
pop
shl
cdq
xor
inc
pop
into
pop
(bad)
aam
dec
mov
pop
aas
pop
adc
cmp
orps
sub
and
ss
xor
test
jge
fisub
inc
mov
popf
mov
in
ds
dec
xlat
sub
(bad)
mov
stos
in
pop
push
int
dec
dec
into
enter
loopne
and
cld
pop
pusha
cmp
pop
or
mov
test
or
dec
sub
xor
aaa
in
sbb
and
and
(bad)
outs
mov
in
sbb
cmc
enter
scas
ins
loop
inc
add
jnp
fwait
mov
jmp
mov
out
cs
cld
shr
jle
imul
xchg
push
call
xchg
(bad)
mov
pop
pop
lods
movs
pop
in
jle
push
mov
pop
push
mov
mov
or
dec
test
retf
fs
mov
xlat
test
rol
fimul
and
jnp
sahf
mov
sti
repz
pop
aad
dec
outs
or
inc
test
call
pop
jmp
fiadd
imul
xchg
add
movs
inc
sub
jb
mov
gs
(bad)
lods
mov
sbb
or
sub
pop
mov
cmc
cmp
dec
imul
mov
ja
mov
test
int
pop
and
(bad)
pop
mov
ja
jnp
mov
cmp
das
outs
cmc
push
fisubr
jle
jnp
in
xor
scas
pop
mov
jmp
lds
in
jmp
adc
jmp
mov
repz
loopne
pop
ficom
fld
scas
hlt
call
pop
xor
ret
push
movs
lods
stos
pop
lahf
xor
gs
and
cli
inc
xor
addr16
and
jl
jg
clc
jg
movs
fbstp
push
pop
sar
cmc
clc
fs
mov
jae
fisttp
mov
mov
rcr
sub
add
push
lds
dec
repz
jae
push
in
iret
push
inc
jl
adc
or
push
or
sbb
cld
xor
and
sbb
jno
jp
in
sbb
loopne
rcr
dec
sbb
inc
ret
sbb
es
pop
mov
push
inc
xor
int
gs
push
jecxz
push
mov
push
outs
pop
lahf
mov
jnp
inc
xor
mov
into
mov
push
lods
out
xor
cs
ret
mov
push
adc
bnd
(bad)
jns
cmp
sub
iret
pop
mul
add
push
pushf
test
adc
dec
pop
jnp
pop
mov
cmp
mov
pushf
test
int
les
aam
retf
iret
jmp
fwait
inc
pop
mov
shl
loope
pop
fwait
cli
popf
adc
jbe
icebp
mov
mov
mov
out
sub
cmp
mov
scas
add
ss
in
daa
test
or
sbb
clc
lahf
mov
lods
daa
jecxz
jbe
les
cmp
leave
scas
mov
(bad)
sbb
mov
cwde
pop
lock
shl
or
mov
int
out
inc
aad
shl
xchg
in
or
lock
punpckldq
retf
adc
loope
lea
jmp
push
lds
pop
ins
sbb
add
dec
dec
mov
add
push
xchg
or
cmp
outs
mov
not
sbb
in
jnp
ins
jecxz
nop
cmp
xor
and
mov
push
std
aad
mov
mov
in
sub
bound
cmp
aad
add
fst
or
sub
idiv
or
out
or
fs
(bad)
in
add
jnp
outs
mov
cmp
(bad)
das
jl
(bad)
and
popa
icebp
stos
pop
in
pusha
call
dec
push
pop
sub
loop
mov
ins
jbe
outs
jnp
push
cmps
mov
mov
pop
mov
pop
movs
push
jns
fs
pusha
in
pop
mov
cmp
aaa
cmp
and
mov
push
repz
shr
gs
les
xchg
sbb
dec
je
rcl
fdivr
enter
fwait
stos
pushf
test
in
(bad)
fidiv
pop
push
iret
xor
lea
push
and
and
pop
aaa
test
cmp
fnstcw
mov
(bad)
jg
inc
jnp
scas
dec
mov
inc
cmp
dec
outs
fimul
loopne
enter
stos
call
mov
in
in
inc
shr
jmp
xchg
icebp
in
inc
sbb
pop
pop
or
cmp
call
repnz
xchg
jle
shl
out
add
mov
pop
jno
sar
pop
fwait
inc
repz
jmp
push
shl
ds
mov
lds
cmp
rsqrtps
ror
mov
daa
aas
add
arpl
jl
push
sbb
jmp
sar
xchg
mov
push
nop
mov
jmp
pop
cmps
repnz
mov
test
mov
ins
mov
psraw
stos
jecxz
sub
es
inc
loope
xchg
and
not
ins
cmp
sub
mov
and
inc
in
idiv
sub
pusha
inc
(bad)
jp
retf
mov
gs
bound
adc
mov
mov
dec
ror
inc
cmp
mov
add
(bad)
in
jle
arpl
enter
(bad)
mov
mov
and
mov
(bad)
pop
mov
mov
rcr
push
mov
push
push
cmps
pop
fiadd
pop
scas
imul
lods
stc
xchg
pop
jmp
lods
popf
and
test
clc
jecxz
inc
out
cld
fisttp
mov
cmp
(bad)
adc
test
xchg
lds
inc
dec
dec
ja
xor
rol
jae
iret
cmc
jp
in
outs
mov
cmp
outs
mov
xlat
add
loop
xor
cmp
ficom
cmp
mov
sbb
rcl
xchg
push
cmps
jns
ja
xor
cmc
mov
or
cmps
ins
pop
in
xchg
sbb
sti
jae
xchg
ins
sub
xor
dec
int3
cmc
xor
and
mov
inc
mov
jmp
sbb
imul
aas
mov
add
pop
push
xor
push
movs
or
addr16
jnp
enter
dec
dec
nop
fcomp
ret
(bad)
sbb
(bad)
popf
mov
xor
cld
pop
dec
and
rcr
push
mov
sbb
push
arpl
sbb
mov
pushf
pusha
inc
xlat
cmp
rol
push
sub
inc
enter
or
xlat
repz
xchg
lahf
jle
jecxz
mov
xchg
data16
add
sbb
add
xor
and
mov
idiv
scas
enter
cmps
mov
pop
fiadd
mov
inc
aaa
cs
mov
adc
sub
mov
push
jge
fadd
cmps
add
mov
cld
jecxz
mov
cmps
test
xchg
fwait
push
pop
das
push
cmp
repz
push
mov
inc
adc
pop
(bad)
mov
push
shr
xchg
mov
test
lahf
mov
push
jnp
jb
cmp
xchg
cmp
jae
iret
sub
mov
imul
mov
push
pop
sti
jb
ja
push
cmp
inc
out
sbb
mov
pop
adc
shufps
and
daa
mov
jbe
cwde
xchg
jp
in
jl
fcomp
xchg
or
xor
inc
or
stos
das
mov
xchg
adc
mov
aam
imul
jecxz
les
fcomi
xor
idiv
inc
add
pushf
ret
ret
ret
int3
loop
inc
sbb
mov
dec
(bad)
cmps
pop
pop
cmps
int
inc
cmp
xchg
dec
mov
sbb
gs
sub
clc
xor
dec
xchg
inc
mov
mov
mov
xchg
mov
pop
out
and
xchg
mov
mov
int3
and
dec
jl
fcmovb
out
daa
pop
stos
xor
sahf
xchg
bound
xor
sbb
jb
popa
call
lea
push
or
out
sbb
mov
bound
movs
(bad)
(bad)
jnp
imul
fadd
push
mov
sub
pushf
pop
lods
lods
xor
stc
mov
pop
cwde
es
cld
mov
jmp
les
mov
iret
pop
mov
enter
gs
add
xchg
sub
dec
mov
aam
in
ror
(bad)
jp
sub
shl
in
pop
(bad)
cwde
adc
(bad)
into
xchg
mul
das
lock
enter
cmp
or
fs
xchg
test
das
and
arpl
push
(bad)
ds
add
rol
xchg
ret
sbb
call
or
add
je
xor
adc
rol
mov
repz
pop
data16
or
xor
punpckhbw
(bad)
nop
or
inc
retf
or
xchg
or
xor
imul
mov
fdivrp
adc
xchg
jmp
pop
scas
aam
or
(bad)
pop
xchg
xor
call
mov
push
out
inc
stos
pushf
repnz
mov
popf
test
leave
fild
je
mov
and
fsubr
sti
or
or
es
fwait
sbb
arpl
addr16
jnp
pop
stos
imul
in
pop
jle
inc
rcr
jmp
dec
push
and
mov
lods
mov
pop
jb
pop
jo
push
push
daa
xchg
js
push
int3
xchg
xchg
pusha
in
mov
push
add
cwde
xchg
icebp
mov
repz
xchg
adc
or
stc
mov
into
(bad)
int
sbb
inc
movs
cmp
movs
add
push
mov
shr
sbb
push
daa
adc
mov
icebp
gs
retf
sbb
daa
sub
jle
jmp
aaa
loopne
or
les
push
out
in
sub
sub
mov
and
addr16
jmp
outs
cmp
int
sbb
neg
pop
xchg
pusha
fabs
mov
shr
or
jle
xor
sub
cmp
mov
adc
mov
sbb
popf
jmp
push
push
mov
sar
cmp
jp
aam
daa
mov
out
in
push
mov
dec
jp
inc
adc
imul
jmp
xchg
jmp
sti
aam
or
xchg
cmp
shl
push
jbe
in
fucomp
sar
xchg
mov
rol
and
loopne
or
sub
into
push
dec
sbb
mov
jb
es
add
clc
retf
cmp
sub
push
push
or
sub
ffree
(bad)
imul
pop
outs
mov
dec
cmp
add
sbb
inc
mov
and
ret
icebp
into
stos
cmp
in
cwde
in
imul
mov
jmp
pop
xchg
push
stos
mov
mov
fs
sahf
sahf
test
setge
loopne
cs
sub
adc
jno
fisttp
cmp
mov
jns
xchg
retf
sbb
into
setl
sbb
mov
aad
push
xchg
and
push
push
pop
aaa
jle
fcmove
xchg
stos
push
jle
(bad)
xchg
fwait
call
cmps
(bad)
cmps
cmp
or
stc
inc
daa
xor
test
pop
sbb
aaa
cmp
aam
cmp
lds
call
sti
dec
popa
jbe
mov
mov
mov
jae
xchg
dec
stos
std
fcmovnb
popf
xor
mov
adc
add
push
mov
sub
out
out
mov
sub
cmp
dec
push
fimul
xchg
cmp
mov
fld
mov
icebp
add
sub
mov
lds
add
mov
cmp
shl
sar
push
xchg
push
popf
pushf
cdq
mov
fnsave
xchg
cli
gs
sbb
push
sbb
pop
adc
ret
hlt
mov
inc
pop
xor
fld
xchg
push
repz
popa
lods
mov
iret
jns
leave
neg
or
es
fxch
push
push
lds
cli
cs
int
daa
xchg
adc
or
push
pop
aaa
push
leave
xor
stos
mov
int3
mov
push
xor
pop
sub
add
sub
jp
or
ins
std
mov
(bad)
stc
stos
fidivr
xchg
mov
stos
push
mov
xor
sub
out
ret
inc
lods
xchg
jmp
mov
xchg
(bad)
sub
loope
mov
sbb
and
in
xchg
clc
stos
sbb
pop
cmp
loope
cmp
in
adc
out
adc
aas
cmp
mov
dec
pop
cmp
lds
jae
popa
fidiv
push
push
mov
add
mov
les
loopne
jmp
enter
pop
add
movs
outs
dec
test
mov
adc
fstp
xchg
mov
inc
stc
popf
gs
fwait
mov
pop
and
inc
cmps
ss
mov
mov
jns
adc
cmp
shr
(bad)
movs
mov
cmp
jmp
ja
test
xor
push
call
push
sub
mov
push
cs
xchg
loop
mov
ds
sub
div
mov
push
in
push
pop
sub
das
jle
sbb
outs
adc
jecxz
mov
(bad)
push
ss
cmp
push
xor
dec
sbb
out
adc
push
fisttp
mul
pop
mov
sti
xchg
fwait
pushf
nop
mov
cs
pop
mov
std
scas
sbb
fadd
jge
icebp
push
cmps
mov
pop
xchg
test
rcr
adc
lods
scas
arpl
data16
jl
xchg
aam
clc
lahf
outs
xor
arpl
mov
push
mov
out
repz
and
sbb
pushf
mov
dec
test
push
daa
and
inc
xchg
dec
cmp
icebp
add
retf
adc
dec
ds
fucomp
(bad)
cmp
dec
fdivr
mov
jne
and
mov
lahf
push
or
outs
xor
jo
push
pop
and
dec
jl
imul
fs
or
call
mov
and
scas
daa
inc
cmp
popa
cmp
pop
inc
sub
test
xchg
(bad)
sete
inc
inc
pop
xchg
pop
jo
pop
jle
aas
outs
or
ficom
js
xchg
stc
push
dec
les
jecxz
jmp
(bad)
or
hlt
out
inc
inc
cmp
(bad)
jg
fstp
cwde
xlat
mov
sbb
xchg
push
mov
(bad)
cmc
out
mov
hlt
mov
xor
add
push
int3
or
push
fwait
into
add
cld
and
repz
in
es
xor
add
sub
xor
int
mov
jecxz
pusha
js
push
dec
sbb
push
sbb
sub
cmp
mov
rol
add
cli
arpl
pop
sar
push
ret
xchg
push
pop
data16
dec
cmp
xor
jmp
sbb
adc
in
in
mov
repz
fst
mov
(bad)
jns
pop
arpl
sub
push
scas
mov
inc
fcmove
jle
(bad)
or
cwde
pop
pop
ins
xchg
test
xor
rol
mov
add
jo
sub
jns
add
repnz
cmp
and
push
pop
mov
mov
push
sbb
adc
pop
push
(bad)
pop
(bad)
out
sub
push
mov
enter
sub
clc
loop
sub
leave
arpl
ret
fcomp
xor
add
push
in
sar
adc
add
sub
push
xor
push
popa
je
mov
repnz
cmp
xchg
mov
jns
or
push
mov
repz
mov
xchg
into
shl
lods
pop
mov
sti
push
enter
mov
shr
je
in
ds
adc
enter
aas
mov
lods
jae
neg
pop
mov
es
arpl
pop
fucomi
xchg
mov
cli
ja
adc
je
lds
shl
or
outs
push
and
cdq
and
fdivr
fwait
js
adc
scas
or
ficom
idiv
jg
in
inc
call
cmp
jmp
pop
adc
loopne
pop
push
jnp
and
add
mov
inc
ror
fwait
inc
mov
adc
sbb
daa
ja
nop
lea
push
scas
add
mov
sbb
out
retf
shr
cmp
sbb
push
mov
imul
xor
out
or
jmp
mov
lods
aaa
mov
cmp
js
push
push
iret
xlat
sahf
lods
mov
and
imul
dec
mov
cmp
imul
mov
inc
fmul
pop
cld
mov
call
mul
or
jge
(bad)
jno
test
popa
stos
xchg
aas
or
inc
add
nop
xchg
mov
lods
adc
jmp
push
(bad)
inc
inc
dec
inc
cdq
stos
xchg
sbb
jmp
sbb
add
mov
sar
inc
int3
lds
js
adc
pop
jnp
jmp
into
add
or
addr16
(bad)
or
adc
or
cmps
mov
loop
cmp
repz
mov
lea
mov
test
mov
pop
pusha
xchg
fcomp
sbb
add
mov
mov
inc
ins
sbb
lods
or
push
inc
ds
pop
stos
sbb
loopne
gs
xchg
stos
pop
xchg
dec
push
jg
jnp
and
shl
dec
jg
or
gs
stc
mov
add
or
push
push
(bad)
xchg
out
icebp
lds
push
inc
movs
push
or
xlat
loopne
cmc
aam
ss
fsubp
iret
and
push
push
aam
arpl
push
adc
in
gs
imul
add
push
fbld
pop
addr16
pop
rcr
movs
mov
(bad)
ret
cli
(bad)
data16
(bad)
cld
or
mov
test
mov
arpl
jno
pushf
sahf
shl
bound
int
imul
clc
cmps
xchg
add
jmp
mov
(bad)
nop
test
iret
jbe
adc
mov
std
je
xor
gs
inc
push
xor
cmp
jmp
stc
icebp
cmc
add
lods
pop
mov
repz
pop
arpl
fucomip
movs
push
aam
test
jae
fdivrp
push
fadd
popa
fsubrp
scas
sub
mov
cmps
pop
push
call
fcmovbe
inc
les
sbb
pop
pop
mov
mov
xor
cld
adc
imul
push
or
pop
or
call
cmps
leave
aaa
xor
gs
fprem
jnp
xchg
xlat
addr16
sbb
shr
push
mov
cmp
lahf
xchg
sbb
push
sbb
mov
sub
out
aad
push
sahf
or
sub
pop
(bad)
sbb
lds
mov
add
int
add
in
sahf
push
adc
je
retf
pop
sub
aas
outs
nop
hlt
inc
add
(bad)
mov
imul
add
dec
jg
jl
xchg
xchg
xlat
sub
fsubrp
cmps
mov
dec
loopne
stos
call
mov
popa
das
ja
cmp
inc
jnp
in
call
cld
loope
scas
scas
pushf
jecxz
mov
mov
cmp
test
mov
xchg
movs
cmp
cmp
add
cmp
repnz
inc
je
pop
in
fwait
enter
cdq
mov
pushf
adc
mov
lds
js
das
inc
in
sbb
scas
and
retf
add
mov
push
push
mov
fcomip
dec
sub
inc
imul
dec
adc
(bad)
cmp
aaa
adc
inc
div
(bad)
arpl
adc
mov
stos
div
into
add
add
das
push
cmc
sub
mov
mov
push
cli
mov
cs
add
shr
sbb
mov
cmp
mov
ins
xlat
dec
jge
fdiv
loopne
push
stos
mov
or
dec
sahf
pop
push
and
xchg
mov
fisttp
int3
rol
dec
mov
daa
popa
mov
out
xor
push
call
push
lods
mov
aad
mov
pop
pusha
jmp
sbb
mov
add
mov
sub
cmp
fidivr
inc
inc
fld
add
stos
(bad)
cmp
inc
mov
sbb
push
loopne
out
cmp
dec
lahf
clc
inc
dec
jp
pop
xor
clc
jge
cmps
enter
add
xor
mov
imul
cwde
sbb
test
sub
push
pop
add
pop
xchg
mov
aad
popf
jne
push
mov
popf
xchg
ss
jae
cmp
pop
daa
icebp
cdq
outs
mov
jns
popf
rcr
lahf
fist
pop
xlat
mov
cmp
in
sbb
pop
shl
xor
inc
jne
hlt
ins
pop
in
loop
and
and
add
jb
cld
add
xor
sbb
jbe
and
lods
aaa
(bad)
stos
mov
movs
xor
cmps
lods
sbb
mov
pop
(bad)
ret
mov
add
dec
push
inc
not
lods
mov
pusha
es
push
aad
sub
mov
lahf
retf
cmp
xor
lods
pusha
sbb
shl
fwait
pop
cwde
add
cmp
add
retf
fimul
int3
into
pop
mov
bndstx
dec
outs
test
stos
bound
mov
popf
repnz
push
xchg
sub
shl
popf
fcmovne
and
lods
mov
push
push
inc
nop
add
aam
js
jo
adc
dec
stos
pushf
cmp
lea
xor
dec
loop
xchg
xor
inc
scas
and
dec
das
jno
out
lods
inc
mov
sbb
jmp
in
loopne
dec
stos
mov
test
adc
sub
jnp
sub
ret
inc
sbb
fild
nop
data16
adc
(bad)
(bad)
stos
push
jns
cld
pop
xchg
rcr
ret
lahf
in
jp
xor
xor
movs
imul
jge
add
jp
aam
icebp
iret
pop
arpl
mov
out
pop
cs
mov
arpl
mov
push
push
adc
or
mov
scas
push
sti
ss
dec
jl
out
lds
xor
inc
push
sahf
in
popf
cld
mov
dec
adc
repnz
and
cs
push
cdq
cmp
cmp
lds
xor
shr
pop
fild
jmp
push
jecxz
push
leave
mov
arpl
mov
in
in
mov
mov
jge
rcl
mov
out
shl
pop
shr
add
mov
xchg
out
test
mov
call
jge
cmp
xor
fild
pop
mov
idiv
jmp
nop
test
add
outs
scas
stos
mov
ret
lahf
gs
or
push
ds
cmp
(bad)
fsubr
add
fs
ss
cmps
(bad)
xlat
adc
xchg
lahf
retf
push
int3
out
or
cmps
cdq
(bad)
jae
leave
test
and
sti
lods
int
push
sub
cdq
gs
aad
test
xchg
sar
inc
iret
xchg
or
push
inc
add
cli
push
push
aam
test
imul
call
inc
cmp
push
xchg
cld
fdivr
xor
sbb
bound
pusha
jns
dec
ins
pushf
ret
aas
jmp
call
mov
sbb
jp
shl
clc
push
pop
jmp
(bad)
scas
xchg
sti
xchg
sbb
or
xchg
movs
mov
xor
dec
fs
adc
in
jecxz
sbb
and
push
or
mov
jns
(bad)
std
adc
push
dec
jo
out
sbb
retf
jmp
das
or
mov
jp
sub
push
jmp
jns
pop
enter
add
iret
lds
jle
call
jo
dec
inc
mov
mov
fdiv
(bad)
jp
xchg
inc
pop
and
popa
stos
mov
add
int3
mov
push
push
in
arpl
outs
and
movs
jae
push
int
cmps
test
(bad)
mov
cs
jae
dec
and
ftst
pop
xchg
sub
cmp
pop
adc
aas
and
jmp
outs
inc
lods
mov
jbe
ret
test
hlt
repnz
cdq
bound
xchg
cmp
jns
js
in
add
sbb
add
inc
cmp
shl
and
es
(bad)
jmp
jl
loopne
mov
(bad)
std
or
bound
les
jle
or
push
gs
mov
mov
imul
cdq
pop
cmp
sub
mov
pop
gs
leave
es
adc
inc
dec
nop
in
lahf
cmps
add
out
mov
jo
pop
jb
add
push
hlt
fsub
mov
stos
mov
imul
add
call
push
fcomp
dec
call
cs
jmp
xor
sbb
cld
pop
dec
retf
jp
jns
adc
or
or
(bad)
pop
(bad)
jae
xchg
fxch
fistp
clc
xchg
fsubr
and
jne
mov
stc
push
or
jmp
cmp
in
xchg
in
mov
fs
scas
and
cmp
sub
fiadd
leave
inc
adc
sbb
or
mov
push
jecxz
scas
ret
add
hlt
adc
adc
call
or
ror
add
ffreep
fisub
pop
sti
sar
sub
adc
pop
(bad)
fidivr
add
out
add
movs
aaa
cmps
(bad)
cmc
or
or
loope
lods
sub
jns
icebp
stc
test
aaa
push
imul
(bad)
cmps
mov
inc
sub
shl
out
lods
les
push
and
sbb
test
pop
cwde
(bad)
nop
sub
sub
xor
arpl
add
inc
lods
call
add
outs
add
xchg
stos
(bad)
js
sbb
aas
in
mov
pandn
retf
into
mov
scas
jno
je
lahf
sub
into
ja
jnp
icebp
xchg
sahf
mov
mov
stc
loope
xchg
and
outs
and
inc
clc
fsubr
xchg
adc
arpl
ret
stos
lea
mov
jmp
inc
push
and
(bad)
cld
ror
loope
icebp
jno
(bad)
cmp
cmps
dec
push
jb
jbe
imul
mov
stos
aaa
cdq
shl
mov
into
les
in
ret
cwde
imul
xor
lods
retfw
mov
xchg
cmc
test
mov
cs
(bad)
scas
mov
sub
imul
and
adc
mov
cmps
outs
adc
fisttp
add
sbb
push
sbb
mov
add
cmp
mov
jb
add
call
rcl
push
in
sti
imul
xor
inc
xchg
repz
xor
pop
fnstsw
shl
mov
fld
push
push
mov
mov
dec
pop
das
and
pop
movs
xchg
add
jg
iret
add
xor
push
ja
lods
pushf
pop
sahf
mov
stos
jp
sbb
xchg
xor
leave
pop
call
or
lods
outs
xor
push
(bad)
xchg
fadd
aam
adc
mov
cmp
hlt
cmp
dec
pop
jecxz
mov
int3
and
xchg
xor
jno
push
push
mov
jbe
jle
cmp
repz
xor
imul
fdivr
cmps
dec
leave
xchg
and
outs
outs
jp
mov
cmp
pop
mov
mov
or
xchg
inc
out
not
retf
or
xlat
jl
sbb
add
shr
pop
fcmove
cmp
sahf
ror
push
and
repnz
push
cwde
mov
sbb
icebp
scas
lods
fmul
mov
cmp
(bad)
cli
dec
int3
cmps
adc
aad
rol
shr
push
xchg
xor
mov
std
lds
je
in
mov
push
and
mov
dec
popf
mul
jp
jae
push
xchg
sub
and
dec
fisttp
cld
sub
pop
mov
cmp
aad
sbb
push
stos
sbb
and
fiadd
and
je
out
addr16
sbb
rol
retf
cli
gs
rcr
dec
cmps
aam
ret
enter
test
(bad)
lock
xchg
and
dec
fsubr
std
inc
inc
outs
imul
sbb
sub
mov
sbb
jae
xchg
std
mov
xchg
and
jmp
pop
ja
sub
inc
leave
addr16
retf
push
and
or
pop
rcl
jl
inc
jns
in
in
test
dec
dec
mov
push
ret
repz
jge
xor
mov
test
xchg
jmp
retf
(bad)
mov
pop
sbb
add
and
mov
sbb
pop
push
jb
xor
arpl
loop
scas
pop
adc
mov
test
movs
adc
repz
pop
enter
add
aad
pop
inc
stos
mov
xor
mov
int
pop
sub
(bad)
dec
push
and
push
mov
enter
sub
push
in
xor
inc
clc
les
retf
(bad)
cmc
gs
mov
pop
in
dec
dec
sar
in
mov
cmp
ins
mov
out
inc
mov
je
out
xchg
pop
popf
ret
stos
loope
leave
push
fsubr
leave
xor
mov
xor
cmps
adc
dec
xor
push
xchg
pop
stos
mov
popf
popf
add
into
imul
(bad)
test
fxch
sti
les
push
mov
lds
aad
loop
movs
ss
jo
adc
movs
adc
xor
pop
call
mov
in
push
js
or
fnsave
xor
and
ins
pop
mov
adc
mov
(bad)
and
or
ss
scas
shl
push
mov
pop
mul
adc
mov
adc
jmp
cmps
ins
mov
pop
les
pop
jp
fimul
xchg
mul
push
cmps
leave
jl
mov
xchg
mov
xor
sub
mov
cmp
hlt
mov
aam
jno
sbb
xchg
sbb
or
push
retf
and
jo
sub
push
div
pusha
test
mov
pusha
(bad)
cld
mov
mov
cdq
xchg
das
xor
mov
test
sbb
leave
icebp
fisubr
add
xor
pop
or
xchg
adc
cmp
inc
out
inc
les
jnp
push
pop
jnp
fisubr
add
push
add
dec
(bad)
fidivr
imul
mov
or
cli
or
xor
push
dec
cmp
cmps
fiadd
ror
sahf
dec
scas
jo
and
pop
xchg
dec
xchg
add
js
movs
pushf
aaa
pop
mov
sub
push
cdq
sbb
and
cmp
mov
mov
ret
test
in
movs
repz
gs
je
dec
outs
jle
pop
mov
cmp
fcmovb
sti
xchg
leave
jmp
imul
mov
(bad)
popf
(bad)
mov
fcom
push
cmps
sar
inc
jg
jle
jg
add
fmul
cmp
xor
test
and
(bad)
fbld
arpl
mov
jnp
out
xchg
jb
adc
into
and
jns
mov
cmc
adc
mov
xchg
dec
xchg
sub
dec
sub
rol
sub
sahf
and
adc
bound
pop
aaa
xor
jmp
xor
cwde
and
dec
mov
jmp
adc
or
and
test
mov
daa
arpl
add
cwde
push
rol
nop
and
jne
or
cmps
out
retf
loope
or
or
xor
daa
cmp
mov
adc
sar
xchg
xchg
add
xchg
enter
cmps
sub
das
sbb
xchg
ds
ds
add
adc
outs
sub
sbb
adc
xlat
ror
bnd
sub
imul
xor
adc
(bad)
xor
mov
repz
popf
add
mov
les
pop
clc
cdq
std
shl
stos
nop
les
or
adc
xor
mov
cld
or
mov
scas
xor
lods
xchg
icebp
std
sbb
cmp
aas
sub
xor
jmp
ficom
inc
sahf
fwait
cmc
adc
stos
jmp
addr16
cld
pop
push
sub
call
and
mov
retf
in
ins
pop
and
out
in
int3
test
mov
push
rol
(bad)
cmps
dec
cli
sub
mov
dec
aaa
(bad)
icebp
sbb
mov
data16
outs
or
mov
cmp
scas
and
in
sbb
pop
cli
push
cmp
into
dec
mov
les
out
cmp
mov
jb
popa
push
jo
loopne
fsub
shr
mov
js
or
push
(bad)
push
and
and
sub
sub
pop
push
adc
jbe
(bad)
popa
and
mov
mov
call
fcom
aas
popa
and
popa
mov
stos
mov
clc
test
pop
ds
mov
call
adc
jmp
dec
jle
xchg
stc
std
add
lds
jb
lods
loop
and
jbe
add
lds
cs
mov
mov
push
aas
mov
out
test
ret
cdq
and
mov
ins
sti
cmps
outs
pop
pop
xor
xchg
or
mov
xor
or
sbb
iret
inc
mov
jne
mov
loope
xor
shl
jb
mov
retf
ror
les
xor
push
int
jb
in
and
push
sbb
lahf
adc
pop
inc
add
nop
mov
push
test
jl
addr16
es
dec
jne
push
lahf
les
add
xchg
cld
das
jnp
fdiv
xor
push
in
jecxz
loop
rcr
loope
or
leave
jo
aad
jmp
std
test
es
imul
int3
stc
xor
mov
or
ror
jl
dec
xchg
lahf
inc
ja
inc
jae
sub
pop
jb
lods
or
sbb
inc
or
cmp
out
ins
adc
mov
and
test
js
mov
jno
(bad)
loopne
clc
dec
int3
jmp
stos
add
cmp
cmp
xor
shl
add
into
xor
xchg
frstor
sub
int3
mov
add
cld
scas
push
mov
loopne
sub
movs
ror
and
pop
mov
stos
sbb
inc
push
pop
push
ins
test
cwde
xchg
xor
jl
ror
fcmovnu
das
aad
mov
jp
jo
jl
or
leave
jbe
cmc
test
xor
push
lock
aam
ds
pop
ins
mov
adc
and
shr
push
push
and
test
cmp
stos
mov
sub
cdq
add
in
out
bound
mov
and
sbb
mov
xchg
sbb
push
xchg
cdq
pop
mov
jmp
loop
test
jle
jle
ins
mov
sbb
adc
(bad)
and
pop
xchg
in
movs
lods
jmp
push
cmp
push
or
mov
or
out
inc
lea
mov
(bad)
xor
or
les
add
add
push
mov
retf
sub
mov
and
(bad)
pusha
xor
addr16
cli
popa
inc
inc
mov
sbb
mov
(bad)
iret
sbb
mov
in
data16
jae
les
adc
sahf
push
push
mov
das
dec
jb
imul
push
jb
jmp
add
scas
in
fst
bt
adc
(bad)
push
mov
xchg
jmp
push
loope
xor
xlat
ret
ins
jmp
aad
out
lods
lods
(bad)
jg
add
mov
add
fbstp
sbb
xchg
pop
jg
cmp
adc
in
or
in
mov
jne
mov
int
mov
nop
jg
mov
retf
imul
mov
ins
push
xor
mov
pop
call
mov
seto
adc
inc
scas
xchg
inc
popf
leave
mov
xchg
mov
pop
stc
jmp
pop
(bad)
pop
test
xchg
jbe
das
and
cld
test
xchg
push
mov
push
aaa
fwait
sbb
ja
inc
call
pushf
sti
mov
mov
xchg
inc
pop
jmp
out
mov
sti
push
add
or
push
iret
fdivr
std
fsubr
mov
and
mov
jae
call
daa
test
jp
(bad)
adc
push
mov
sbb
in
fsub
test
jmp
add
repz
js
jle
adc
or
int
push
add
std
adc
mov
out
jecxz
pop
pop
lods
push
sbb
loope
out
pop
inc
adc
retf
jg
push
dec
sbb
xor
(bad)
sti
popa
call
or
jle
popa
aas
shr
xor
icebp
mov
or
stos
fldcw
sub
aad
clc
sub
xchg
sub
imul
mov
(bad)
mov
fild
or
adc
out
data16
into
cld
in
push
int3
push
shl
sbb
stos
mov
mov
pop
mov
dec
movs
imul
sar
mov
mov
mov
mov
mov
arpl
jle
popf
mov
or
mov
jge
or
loop
pop
ins
sahf
mov
or
fwait
mov
mov
add
shl
add
cmp
push
stc
xchg
sub
sbb
adc
add
pop
cmps
call
sub
push
loop
and
add
or
xchg
nop
sub
push
rcr
xchg
jb
mov
inc
rcl
daa
popa
pop
jp
adc
stc
in
mov
sbb
mov
loope
fidivr
mov
inc
je
or
mov
push
jg
outs
aad
(bad)
in
mov
(bad)
loopne
ret
push
push
cmp
and
or
out
ror
mov
movaps
sahf
adc
push
stos
mov
ins
(bad)
add
dec
pushf
push
in
xchg
out
loope
(bad)
xchg
lods
mov
fidivr
lock
sbb
jmp
in
mov
sahf
pusha
jmp
fwait
aam
std
or
add
cli
leave
add
push
jmp
pusha
fmul
jmp
iret
in
mov
push
mov
pop
push
or
xchg
and
lods
pusha
mov
shl
stc
popf
dec
and
lods
inc
aam
mov
jg
inc
sub
jae
mov
push
jmp
xchg
pop
dec
pop
dec
jnp
dec
jmp
xor
in
mov
imul
mov
addr16
stos
xchg
arpl
sub
(bad)
and
pushf
xchg
push
lds
loop
jbe
retf
mov
enter
lock
shr
push
scas
sbb
fnstcw
inc
push
data16
push
lahf
jmp
xchg
in
or
fsub
mov
fs
stos
jb
jno
fild
pushf
and
xchg
xor
add
inc
lods
stos
cwde
sub
xchg
add
in
sbb
int
jmp
arpl
or
movs
xchg
mov
mov
mov
stos
inc
into
je
mov
jg
sub
and
stos
sbb
pop
cmps
das
push
push
and
fnstenvw
cmp
in
inc
ror
call
inc
call
(bad)
shl
add
popf
sahf
fbstp
xchg
and
mov
mov
adc
add
xchg
pop
pop
cmp
arpl
call
iret
mov
sub
stc
add
jle
daa
lods
or
dec
lods
daa
clc
stos
pushf
pop
adc
sti
imul
jmp
adc
mov
mov
add
addr16
imul
sbb
aad
test
jge
mov
xor
scas
pmuludq
push
fwait
mov
ficomp
enter
fsubr
mov
fcmovne
shl
fidiv
(bad)
push
lods
ds
mov
outs
mov
lds
xchg
add
cmp
mov
pushf
xchg
mov
lock
sub
mov
movs
jae
adc
jb
jb
push
pop
out
fwait
scas
jmp
iret
test
adc
imul
fisub
pop
hlt
push
nop
xor
add
out
push
xchg
push
(bad)
addr16
test
into
fcmovu
mov
push
cmp
outs
movs
call
aas
jge
adc
sbb
mov
cmps
jnp
bound
mov
mov
xor
add
sahf
jl
aam
inc
into
shl
sahf
popa
adc
bnd
shl
retf
add
std
pop
dec
sbb
out
out
div
in
(bad)
sahf
add
xlat
jno
in
mov
int3
and
ds
push
sub
push
inc
mov
or
sub
sbb
mov
push
hlt
xchg
les
cwde
mov
mov
cld
scas
dec
sub
retf
jle
(bad)
std
cmovnp
pop
int3
jge
dec
pushf
cmps
repnz
sbb
aam
aaa
xor
les
aas
xor
sbb
hlt
div
push
into
sub
lods
inc
(bad)
mov
shl
sub
fwait
pop
dec
mov
outs
ret
xchg
dec
rol
shl
mov
call
cli
xor
dec
int
ins
in
jecxz
mov
add
dec
in
shl
fisubr
es
iret
leave
jno
pop
xchg
mov
out
inc
and
adc
retf
loopne
dec
mov
cld
shl
adc
cmp
jno
inc
cmps
sub
or
fld
jl
xor
sbb
ret
mov
mov
test
push
push
push
mov
adc
loope
shl
aaa
or
into
inc
in
cmp
xor
mov
shl
adc
popf
imul
fwait
loope
pop
call
(bad)
punpckhbw
aas
cmp
push
into
or
mov
sub
imul
mov
sub
ins
and
push
ror
pop
and
xor
fcmovnbe
pop
mov
inc
add
xor
push
fimul
nop
mov
mov
xchg
out
jns
inc
(bad)
cmp
push
das
daa
shl
jbe
add
test
xchg
jb
pushf
icebp
movs
ret
retf
(bad)
and
jmp
sub
stos
sbb
sahf
popa
inc
lock
aam
jp
test
leave
sahf
or
aas
scas
shl
and
jle
test
mov
mov
push
outs
pop
stos
fld1
out
mov
popa
js
pop
xor
mov
nop
in
inc
div
pop
cmc
jmp
mov
push
or
loope
inc
inc
mov
dec
clc
add
jo
pop
xor
loop
(bad)
(bad)
(bad)
mov
pop
push
mov
add
mov
mov
or
into
or
sar
xchg
addr16
stos
adc
xor
jp
cmps
sbb
ins
push
adc
and
sub
adc
out
cld
inc
mov
movs
cs
pop
pop
out
aad
jbe
jae
je
dec
pop
lds
cmp
and
fdiv
loopne
adc
ins
fidiv
cmps
sub
mov
mov
aaa
jbe
aam
dec
mov
sub
sub
aas
push
xchg
lods
jnp
push
loope
and
pop
(bad)
add
xlat
mov
mov
sub
push
xchg
dec
lods
or
call
adc
xchg
loop
mov
xor
push
rcr
mov
addr16
mov
(bad)
enter
clc
pop
push
mov
clc
mov
jmp
mov
jle
xchg
cmp
mul
(bad)
dec
fs
add
aam
std
mov
inc
mov
pop
ss
aam
xor
call
cmp
std
nop
sub
add
(bad)
in
push
shl
out
or
mov
adc
push
cmp
ja
sbb
mov
and
xchg
push
mov
pop
fs
or
xlat
mov
mov
test
xchg
cmp
pushf
sahf
call
out
dec
test
aas
xchg
(bad)
sbb
aas
pavgb
outs
scas
push
pop
imul
xchg
sbb
inc
mov
jle
jg
mov
int
pop
inc
sbb
fnstenv
mov
push
repz
and
nop
adc
push
iret
pusha
lea
fsub
xchg
je
dec
call
xor
xor
sub
movd
jge
out
add
jge
inc
mov
sbb
mov
outs
iret
stos
inc
mov
pop
or
gs
icebp
in
sti
or
mov
fild
inc
jns
icebp
cmp
fidiv
jo
push
sti
jno
jmp
inc
xlat
loope
int3
mov
jecxz
pop
fst
cmp
sbb
jmp
retf
mov
inc
inc
iret
cmp
dec
cmc
pop
enter
inc
cmp
push
jo
repnz
inc
add
add
into
mul
jl
jl
in
sbb
inc
push
pop
sbb
je
rol
mov
ja
or
(bad)
sub
jnp
adc
jnp
sbb
pop
ret
(bad)
mov
aam
je
jns
fucomp
cdq
inc
xor
inc
xor
jg
sub
fmul
imul
int3
or
mov
cmp
outs
outs
ret
arpl
aam
mov
pop
icebp
(bad)
aam
mov
push
pop
rol
daa
mov
sar
into
daa
mov
push
aas
dec
popa
cmc
in
(bad)
imul
arpl
jg
fimul
jg
pop
cmp
lods
adc
nop
add
cmp
dec
scas
or
cmp
adc
sub
or
jg
scas
push
cmp
push
rcl
ss
aad
xor
pop
or
fisttp
out
sub
xchg
pop
inc
mov
(bad)
(bad)
arpl
hlt
jns
cmc
(bad)
repnz
inc
mov
sbb
lahf
mov
loop
in
outs
scas
cwde
in
sar
push
sub
jmp
push
push
and
mul
das
pop
xchg
or
stc
adc
or
jae
sub
sub
add
sbb
adc
jno
aaa
sbb
shr
cmp
cdq
mov
cwde
movs
pop
push
dec
mov
and
call
sub
rol
mov
in
fstp
jmp
or
fnstenv
cmp
shr
dec
mov
dec
dec
xchg
rcr
(bad)
mov
sub
inc
xchg
out
xchg
outs
add
movs
std
xchg
movs
(bad)
push
gs
je
loop
in
push
add
out
fwait
(bad)
push
push
jmp
test
clc
sub
mov
aad
pop
call
xchg
inc
mov
cs
jb
imul
daa
pusha
pushf
in
dec
inc
and
push
out
sbb
and
adc
hlt
scas
cmp
cmp
aaa
mov
and
mov
sub
jnp
in
sar
stos
cmps
xchg
xor
test
(bad)
xchg
mov
mov
add
mov
out
les
push
and
mov
(bad)
xchg
xor
inc
xchg
hlt
pop
mov
cmc
jno
inc
jo
sbb
into
pusha
mov
sahf
sub
jae
inc
sar
cmp
into
cmp
cmp
lock
xor
and
push
pop
mov
adc
lock
mov
inc
mov
fbld
test
add
push
xchg
movs
and
in
fimul
push
add
ja
lods
lds
ret
lahf
and
fisub
pop
and
push
mov
add
cdq
pop
jbe
mov
mov
mov
push
cmp
adc
addr16
es
idiv
or
and
add
dec
pusha
loop
aad
imul
add
out
pop
call
ins
jge
in
gs
mov
sub
(bad)
pop
cli
fnstcw
es
xchg
cmp
fisub
sbb
dec
fistp
iret
lods
cdq
mov
jns
jnp
cdq
adc
add
iret
add
mov
in
xor
ds
ffreep
adc
mov
adc
fisub
clc
sahf
jnp
sti
lock
push
pop
pop
sbb
xchg
mov
adc
inc
lahf
leave
mov
dec
xor
cmp
inc
push
pop
nop
mov
add
ret
cli
add
(bad)
gs
test
or
pop
and
int
and
add
sub
cld
push
dec
sub
mov
mov
pop
push
(bad)
(bad)
dec
or
es
sahf
jns
mov
xor
mov
xchg
mov
imul
lods
dec
je
xchg
and
pop
fldenv
ss
jno
xchg
sbb
fs
xchg
inc
sti
pop
in
repnz
or
mov
jle
mov
or
inc
sub
and
push
ror
ret
(bad)
ficom
jno
jecxz
pop
xchg
pusha
lahf
mov
cmp
in
pop
push
pusha
stos
sub
nop
xchg
cmc
pop
mov
out
or
jge
(bad)
fnstcw
fbld
xchg
cdq
jmp
add
in
cs
pop
jo
jmp
inc
(bad)
gs
jno
sbb
clc
add
loope
test
mov
xor
lock
mov
or
movzx
push
rcr
mov
jns
jns
leave
xor
push
push
js
fdivp
aad
push
sub
js
inc
mov
cwde
jl
hlt
js
jb
(bad)
shl
div
sbb
ror
dec
mov
(bad)
push
imul
cmp
mov
mov
pop
push
addr16
xchg
stc
dec
sub
ret
mov
cmp
loop
push
icebp
xor
push
mov
ror
mov
mov
std
(bad)
adc
pop
jge
loopne
out
cmc
and
pop
mov
jg
xchg
lods
push
cmp
mov
adc
adc
sahf
iret
xchg
xlat
shr
xchg
loop
das
inc
lods
xor
pop
cdq
clc
cmp
jle
jp
fsub
dec
mov
xor
xchg
clc
fnstenv
xchg
mov
inc
(bad)
repnz
js
pop
sub
sub
mov
xlat
add
push
sub
enter
add
pop
sbb
jne
jo
lods
inc
ins
xchg
pop
xor
das
fmul
sub
icebp
sbb
scas
xchg
push
lea
xor
xchg
and
ins
sbb
cwde
sahf
adc
mov
retf
xor
or
imul
stc
imul
cld
out
(bad)
arpl
arpl
pop
cmp
add
fist
mov
cmp
stc
das
jg
fnstcw
pop
or
outs
cmc
dec
aad
xchg
int
add
inc
and
adc
cmp
jne
ja
jns
jb
cld
push
data16
les
pop
ret
xchg
neg
or
addr16
add
mov
cmp
fidivr
mov
out
xchg
fnstsw
nop
retf
mov
xor
fsub
and
je
cmp
into
cld
in
xor
clc
inc
popa
iret
lock
inc
mov
pop
ror
xor
jecxz
cmp
jmp
push
sar
das
xchg
jbe
ja
imul
sub
xor
std
and
push
and
cli
or
mov
icebp
mov
stos
pop
jle
fistp
call
dec
int3
data16
jp
neg
nop
pop
dec
dec
and
mov
inc
push
cmp
sub
mov
stc
retf
cmp
jmp
outs
ss
sub
or
call
aad
sub
mov
jecxz
jno
pop
repz
lsl
cmp
sub
adc
hlt
and
ret
xor
inc
sub
push
pushf
mov
pop
pop
in
retf
adc
adc
add
cmp
lds
jbe
ins
push
cmps
pop
outs
fwait
adc
inc
mov
imul
mov
jp
or
inc
sub
cdq
aam
jmp
push
in
pop
or
and
ss
les
mov
jp
sbb
popa
mov
je
test
rol
imul
adc
xchg
enter
xor
pop
cmp
imul
sti
loop
or
aaa
movs
ss
mov
push
push
inc
mov
arpl
inc
adc
jmp
push
and
ret
adc
mov
scas
mov
(bad)
cmp
out
and
jmp
retf
mov
mov
daa
retf
adc
mov
jae
jnp
in
and
retf
mov
ror
sub
add
sub
jne
cmps
xchg
leave
inc
jecxz
jecxz
mov
mov
icebp
mov
push
xor
inc
inc
or
dec
push
and
lods
call
icebp
std
adc
mov
(bad)
mov
imul
lods
xchg
mov
mov
div
sti
xchg
out
(bad)
cmp
out
and
cmp
cmp
(bad)
pop
addr16
and
ins
jle
sub
adc
or
shr
fnstcw
xor
(bad)
cdq
jne
sub
mov
push
dec
imul
ror
jb
in
loopne
xchg
pop
push
frstor
inc
dec
xchg
fsubr
cmp
inc
lods
in
add
ds
rcr
ret
std
dec
cmps
mov
fcomp
sahf
cmps
js
loopne
or
call
inc
push
push
rcl
sub
scas
xchg
repnz
int
xchg
imul
mov
adc
jmp
fimul
shl
add
(bad)
out
mov
mov
ds
push
inc
mov
icebp
js
dec
int
push
sbb
jo
or
(bad)
and
push
mov
sbb
and
jno
iret
movs
call
mov
dec
in
mov
shl
mov
fist
popf
pop
mov
sahf
dec
push
add
aaa
dec
or
adc
js
cmp
xchg
cmp
pop
repz
pop
shr
jmp
mov
and
jo
and
inc
jecxz
test
fstp
add
into
in
and
ret
xchg
jb
fstp
add
add
push
(bad)
and
in
call
mov
das
push
cmp
retf
xor
mov
mov
(bad)
rcl
fstp
lahf
cmp
(bad)
and
push
sahf
mov
dec
rcl
xor
stos
jo
or
push
dec
mov
(bad)
(bad)
jl
cmp
aaa
push
sbb
dec
movs
cmps
lea
cdq
jle
cwde
ins
or
in
je
pushf
stc
mov
or
fdiv
fcmovne
dec
jp
test
leave
mov
out
arpl
add
dec
in
sub
fld
push
and
and
inc
mov
pop
pop
inc
or
stos
xchg
jnp
xchg
cmps
sub
mov
arpl
scas
addr16
in
or
push
and
sub
mov
not
je
out
sti
int
xlat
jne
jge
out
push
xor
in
jae
inc
add
inc
sbb
fs
dec
scas
into
cmp
jmp
sbb
scas
xor
out
je
int
xchg
mov
adc
jne
cmp
or
jno
shl
enter
aad
aad
cwde
mov
aaa
int
xchg
mov
pushf
adc
jl
js
cld
hlt
stc
push
dec
mov
push
fidiv
test
adc
aas
push
push
les
cmp
mov
sbb
aam
dec
bound
jmp
(bad)
mov
or
retf
pop
cli
aad
pop
lods
leave
test
mov
mov
stos
xchg
sub
xor
lods
(bad)
dec
outs
arpl
(bad)
mov
jbe
cmp
xchg
fs
not
fcom
jg
mov
inc
ins
out
and
sbb
lods
ins
ds
mov
(bad)
outs
popf
and
mov
leave
ds
xchg
pop
push
cmp
fisttp
dec
pop
ins
ret
vandps
xor
pushf
adc
fld
jmp
loop
hlt
imul
lea
fdiv
ja
push
addr16
mul
push
repnz
mov
mov
int3
mov
test
and
repnz
(bad)
faddp
jecxz
sti
(bad)
mov
gs
xor
movs
jp
add
sbb
ins
ins
aaa
pop
lea
jb
(bad)
ss
pop
ret
ins
clc
int3
pop
push
(bad)
stos
mov
sub
xchg
jae
cdq
ss
push
sub
fdiv
or
stc
out
cmc
adc
push
lods
pop
imul
call
aad
shl
or
ins
ss
dec
jne
pop
retf
loope
dec
jns
out
adc
test
jb
iret
xor
call
imul
aam
mov
sub
dec
daa
pop
je
fdiv
popf
js
jbe
call
arpl
cmp
hlt
aad
mov
sbb
cmp
test
jo
hlt
pop
fcom
jp
adc
or
cmp
repz
psubd
clc
sbb
pop
xchg
mov
sub
sbb
xlat
mov
es
cmps
push
mov
test
das
or
iret
add
xchg
push
dec
das
jne
fucom
mov
aam
xor
cmps
mov
(bad)
sub
dec
pop
mov
cmp
scas
add
pushf
pop
out
scas
sub
mov
jmp
mov
sub
aam
or
pop
push
cld
sbb
lahf
and
sub
push
ret
ror
xchg
sbb
cmps
inc
add
adc
out
shl
icebp
adc
repnz
gs
in
or
add
cmps
scas
jge
int
dec
jmp
scas
sbb
clc
add
mov
or
jle
cs
mov
add
adc
mov
and
je
cld
popf
fldcw
inc
aas
(bad)
scas
dec
mov
and
call
adc
dec
out
cmc
fcmovnu
pop
xor
ds
popfw
retf
mov
xchg
add
mov
addr16
add
sub
fs
fild
mov
push
bswap
push
mov
xor
push
gs
ret
test
mov
mov
adc
mov
sbb
fld
les
xchg
(bad)
fmul
pop
fcomip
nop
inc
rep
imul
add
add
mov
push
cmp
sbb
stos
leave
(bad)
mov
and
outs
arpl
adc
cmp
jg
sub
xchg
sbb
(bad)
mov
sbb
push
xor
lods
out
mov
mov
xchg
imul
cmp
dec
in
or
xchg
mov
test
inc
push
xchg
and
ror
mov
imul
inc
sbb
adc
add
mov
lods
lods
loop
xchg
scas
(bad)
inc
jp
sbb
hlt
mov
(bad)
ja
add
dec
ins
enter
out
inc
adc
aam
pop
jge
push
fidiv
in
sub
hlt
xor
pop
dec
dec
daa
push
add
cmc
adc
enter
mov
dec
dec
dec
iret
lds
push
js
std
mov
mov
and
add
rcr
mov
movs
or
outs
shl
out
test
icebp
mov
inc
scas
mov
jo
outs
jle
stos
or
jg
test
mov
xlat
cs
ror
data16
(bad)
jae
xchg
outs
retf
cmp
(bad)
fs
lods
dec
div
xor
jg
test
ins
test
push
outs
popf
inc
xchg
or
mov
inc
scas
adc
fwait
jae
xchg
ja
and
or
jns
data16
sahf
int
cld
jp
adc
lss
aad
mov
push
rcr
gs
jno
sub
daa
sbb
mov
dec
sbb
cmp
mov
adc
sub
into
mov
dec
retf
xchg
jns
and
hlt
pop
out
inc
push
inc
adc
xor
sbb
aaa
sbb
mov
push
mov
repnz
or
fs
mov
popa
loope
mov
lea
inc
mov
dec
lods
sub
iret
add
jnp
pop
cmp
add
add
hlt
mov
stos
mov
inc
mov
xor
cmps
iret
(bad)
mul
les
out
(bad)
add
mov
xrelease
mov
(bad)
cdq
cmp
stos
cmp
sub
out
mov
repnz
inc
mov
lea
lods
ins
dec
push
pop
push
adc
pop
pop
add
xor
xchg
pop
lods
dec
inc
xchg
mov
mov
neg
test
xchg
mov
and
bound
(bad)
jnp
push
jle
mov
inc
xor
inc
(bad)
out
out
int3
lock
lea
push
or
cmps
sbb
xor
stos
fcmovu
cwde
pop
aad
adc
mov
icebp
mov
(bad)
inc
push
dec
adc
ror
mov
test
mov
add
cli
fistp
sbb
(bad)
and
int3
mov
fcos
cmps
push
lds
cmc
in
add
xchg
add
std
adc
loope
jb
pop
loopne
scas
mov
in
add
pop
out
pop
mov
xchg
lock
jp
or
add
mov
sbb
jge
adc
movs
jae
pop
shl
cmps
or
fisubr
dec
xor
loopne
push
cmp
fistp
dec
jb
cmc
push
dec
fs
ret
sahf
test
pop
lds
cmc
mov
inc
cmp
aam
sbb
ins
inc
loop
jno
xor
mov
sub
xchg
cmc
cs
and
push
imul
pop
loop
sub
mov
push
pop
jbe
sub
adc
or
or
fwait
into
xchg
or
add
push
mov
mov
out
and
mov
leave
cmp
loop
pop
sbb
in
inc
fistp
ror
js
popa
jbe
idiv
stc
xchg
mov
aaa
out
ss
xchg
dec
fiadd
mov
xchg
adc
mov
movs
stos
mov
push
stc
outs
xchg
sbb
pop
lea
aas
test
push
sar
jmp
mov
test
retf
mov
jbe
mov
mov
clc
sub
mov
imul
test
test
push
xchg
xor
(bad)
cmc
mov
ror
pop
daa
mov
(bad)
sti
repnz
nop
adc
push
push
push
mov
sbb
(bad)
aad
mov
mov
aam
or
jne
add
cmp
jae
and
lock
ins
jo
cmp
jne
pop
push
cmc
jg
stos
pop
push
push
lods
mov
jnp
mov
inc
fs
push
push
sbb
daa
pop
sbb
call
jno
dec
dec
add
loop
scas
add
adc
popf
aas
inc
cmp
cmp
(bad)
(bad)
cmp
inc
repnz
stos
arpl
mov
mov
jae
cmp
mov
add
cmp
dec
sbb
in
cdq
sar
xchg
adc
(bad)
push
mov
jnp
sub
fs
(bad)
aas
cwde
ret
xchg
xchg
mov
rcr
imul
pop
out
cmp
lods
dec
or
or
in
fs
fmul
dec
xchg
cwde
or
lods
cmp
es
ror
shl
xchg
xchg
xor
mov
jae
or
pop
in
push
loop
cwde
jmp
pop
mov
stc
not
inc
jmp
sbb
add
xchg
mov
mov
xor
sbb
xchg
repnz
mov
mov
mov
icebp
stos
push
push
loopne
loopne
dec
push
inc
xchg
out
rcr
push
jecxz
push
push
pop
loope
fwait
add
movs
dec
fild
mov
xor
add
rcr
je
movs
pop
bound
data16
out
xchg
pop
std
pushf
jb
or
dec
inc
jns
xor
(bad)
xchg
or
inc
cld
es
jge
lahf
or
jns
les
hlt
or
or
mov
(bad)
int
sub
outs
add
mov
mov
ja
or
popa
push
mov
dec
push
nop
and
mov
ret
sbb
arpl
jmp
jmp
cmp
mov
push
test
je
gs
and
mov
sahf
(bad)
fadd
arpl
add
je
js
shr
ins
cmp
xchg
call
rol
or
mov
pop
stos
add
mov
dec
cmps
sub
fcomp
xor
les
mov
test
sub
in
out
push
pop
stc
pop
sbb
lods
and
xchg
sar
aas
and
fcom
pushf
(bad)
mov
movs
adc
xchg
dec
out
(bad)
addr16
fsubr
pop
mov
jl
push
jl
or
test
je
daa
or
and
mov
lock
pop
jns
shl
sub
js
dec
shl
mov
ret
mov
jnp
dec
inc
inc
jg
push
and
aaa
and
adc
mov
movs
jmp
stc
sbb
sub
inc
xor
pusha
mov
popa
(bad)
out
icebp
outs
jne
and
push
mov
int
xlat
jno
cmps
scas
iret
cwde
mov
hlt
mov
repnz
xor
inc
mov
test
shr
mov
icebp
xor
in
sbb
inc
xchg
in
repz
mov
push
sbb
pop
jmp
fstp
pop
add
xchg
pop
jno
movs
mov
bound
push
cdq
and
sub
mov
lods
jecxz
cmps
jne
pop
ficom
call
jb
outs
add
test
jmp
fwait
mov
ret
fist
into
xor
jb
fisubr
das
hlt
or
aas
mov
(bad)
pop
cmp
xchg
mov
cs
mov
jne
stc
cld
xchg
cli
push
(bad)
shr
fcom
mov
adc
out
xor
adc
ffree
inc
fidivr
inc
dec
int3
jle
dec
jbe
and
xor
push
std
shl
stc
in
fst
sub
sar
xchg
sbb
dec
ja
push
and
in
arpl
sbb
arpl
rcr
test
gs
pop
lds
je
adc
jns
fadd
mov
cmps
pop
imul
fs
mov
add
xchg
sbb
xor
out
stc
mov
dec
cwde
adc
les
ss
push
add
xchg
aas
jb
pop
cmp
xchg
jns
mov
push
mov
and
mov
sub
sbb
popa
jo
sub
rcr
cmps
or
in
push
addr16
aad
inc
arpl
or
and
sbb
js
add
aaa
or
mov
cmc
loope
hlt
mov
rcr
test
adc
aam
jo
popa
das
fwait
rcl
xchg
dec
mul
call
push
inc
(bad)
push
arpl
jmp
push
test
cmp
mov
jle
xor
push
mov
pop
movs
sbb
adc
xchg
iret
addr16
adc
pop
dec
jmp
in
and
or
test
cwde
inc
test
push
ds
mov
push
fisttp
leave
jns
sbb
arpl
test
loope
sbb
or
sub
icebp
retf
cmp
sub
mov
test
jbe
mov
pop
or
(bad)
fstp
sbb
adc
xchg
cld
jl
cmp
jo
jb
fstp
sbb
jb
mov
add
out
icebp
jae
sbb
out
fimul
cld
lock
inc
fsubr
out
std
push
xor
or
(bad)
out
push
out
inc
out
test
and
inc
je
out
test
std
mov
add
or
dec
dec
out
xchg
mov
mov
and
jmp
popa
in
sbb
stos
sar
or
sub
xchg
push
jmp
xchg
xchg
arpl
and
iret
push
cmp
loop
jle
sahf
mov
(bad)
iret
sub
aaa
pop
cmps
xor
in
mov
adc
xor
ss
outs
movq
arpl
into
ss
push
ds
xchg
fwait
int
cld
dec
sbb
pop
in
dec
cmp
ret
jg
cmc
push
leave
rcr
push
fwait
xor
xchg
jp
std
push
mov
sub
sub
jge
add
cmps
fcom
push
dec
sbb
jecxz
mov
jecxz
and
into
out
and
cwde
dec
pushf
push
push
stc
lds
push
daa
jne
mov
ja
or
out
xor
push
pavgw
mov
push
loopne
dec
jg
cmp
jle
mov
(bad)
sti
je
aad
mov
mov
push
aas
lds
lock
lock
daa
dec
and
ss
aas
out
fimul
mov
cmp
iret
pop
push
dec
cmps
jb
jno
push
adc
xchg
mov
inc
mov
add
push
(bad)
sbb
jmp
jne
xchg
xor
imul
outs
mov
and
retf
cmp
sbb
call
push
cmc
xor
pop
sub
jo
mov
repnz
mov
pop
pop
scas
aas
and
xor
sub
mov
push
jg
push
int3
outs
lock
xor
mov
or
pop
pushf
pop
push
stos
(bad)
test
fadd
stc
dec
int
sti
mov
cmp
xor
lds
repnz
and
and
cmp
or
sar
loop
arpl
es
ja
jl
push
sti
or
out
dec
fld
or
sub
sub
fs
jl
dec
mov
movs
cmp
pop
adc
jb
std
out
fidiv
push
loop
outs
mov
call
xchg
loop
icebp
nop
xchg
push
out
cli
adc
stc
sbb
mov
jge
bound
mov
jp
ins
imul
shr
pusha
out
out
push
add
mov
mov
mov
test
mov
push
xchg
ficomp
repnz
aad
xchg
fcomp
mov
daa
jmp
push
sub
sbb
aam
sbb
int3
push
sti
cli
or
xchg
mov
xor
or
xchg
outs
push
xchg
add
daa
sbb
sub
push
push
(bad)
sbb
jmp
pop
dec
ja
add
popw
xchg
pop
push
adc
mov
mov
sub
out
fdiv
retf
jmp
lock
ss
mov
mov
pop
xor
xor
lock
(bad)
les
pop
mov
adc
iret
pop
push
push
test
xlat
outs
dec
ins
inc
and
shl
sub
sub
pop
sbb
mov
in
add
gs
pop
out
jo
or
cmovl
and
mov
mov
xchg
pusha
xchg
jl
cld
(bad)
jg
mov
mov
shr
sbb
xchg
in
test
inc
lods
inc
rol
jnp
sbb
fwait
jne
mov
retf
jg
(bad)
cmp
into
out
cs
push
adc
addr16
in
sti
cmp
dec
iret
pop
retf
(bad)
icebp
xchg
push
xchg
sub
stos
adc
adc
jge
fmul
daa
jle
fimul
xchg
mov
add
and
push
inc
retf
or
adc
jge
mov
fisttp
inc
push
bound
mov
div
loope
ret
sbb
fisubr
push
push
inc
(bad)
pusha
(bad)
(bad)
arpl
(bad)
mov
(bad)
dec
lock
cmps
imul
cmp
push
sub
into
dec
push
fisubr
jge
sub
test
outs
call
pop
fst
xchg
mov
dec
add
jecxz
sbb
sbb
jge
daa
jecxz
popf
mov
rcr
js
ret
rcl
daa
xor
stc
xchg
sub
or
jg
inc
ins
outs
add
xor
dec
xchg
stos
push
xchg
fisttp
ss
ja
mov
xchg
ret
or
cmp
inc
div
das
repz
das
cwde
out
mov
es
shr
mov
jns
rol
inc
mov
add
pop
pushfw
sub
out
pop
xchg
lea
jl
xlat
inc
call
or
xor
call
ds
daa
ds
mov
xchg
sbb
cs
cmp
mov
dec
push
push
retf
sahf
xlat
jae
iret
sbb
xchg
sub
data16
in
pop
hlt
add
mov
push
stos
mov
sbb
pop
fwait
push
adc
inc
cwde
je
daa
and
pop
lods
and
pop
xchg
icebp
popf
sbb
mov
lea
jge
(bad)
jle
js
cmp
cmp
in
fucomp
jb
fidiv
std
jecxz
stos
xchg
xor
push
xlat
or
shl
retf
retf
int
mov
jl
jne
sub
mov
pop
cmp
adc
retf
aas
adc
je
sar
add
nop
aas
test
mov
mov
push
add
in
push
mov
rol
mov
test
cmp
out
xor
out
cwde
in
cmps
jmp
jmp
add
data16
sub
inc
add
dec
or
pop
mov
jl
jbe
(bad)
out
enter
cmps
xchg
leave
fisub
jg
ins
mov
dec
scas
sbb
dec
xor
retf
popa
outs
imul
lea
inc
jbe
mov
adc
(bad)
arpl
push
jno
push
add
outs
adc
pop
mov
ret
or
aaa
(bad)
or
pop
mov
mov
mov
push
push
repz
sbb
fild
dec
sub
push
dec
fidiv
cmp
scas
repz
popf
cld
cs
mov
pop
mov
jo
fwait
inc
sub
sub
rcl
inc
xor
xchg
add
mov
std
shl
icebp
xor
mov
fwait
pop
adc
cmps
mov
setge
int3
jae
rcl
pop
les
add
ret
repnz
jno
or
cwde
xor
or
mov
sbb
add
jmp
popa
xchg
bnd
int3
mov
sbb
pop
and
sub
clc
adc
lods
pop
cdq
div
cdq
add
mov
mov
or
loopne
mov
jl
sar
jnp
push
cmc
test
mov
outs
and
aaa
fist
mov
adc
xchg
repz
sub
mov
adc
scas
out
sub
adc
mov
mov
mov
fwait
cdq
(bad)
clc
adc
cld
pop
imul
push
out
push
cmp
xchg
dec
pop
dec
retf
cdq
jmp
add
jmp
adc
dec
sbb
dec
xchg
sbb
mov
push
sbb
mov
ficom
inc
clc
iret
and
cmp
lock
out
imul
add
mov
nop
call
mov
mov
out
mov
mov
je
div
push
cwde
mov
repz
hlt
lods
pop
or
adc
sbb
ficomp
jle
mov
cmc
add
or
xor
pop
dec
std
dec
adc
mov
mov
(bad)
or
and
aam
push
int
xor
mov
and
int3
cmps
mov
mov
pop
retf
fbld
adc
jle
test
cmp
ja
ins
in
fdivr
push
pop
dec
in
loopne
dec
pop
adc
mov
lds
imul
(bad)
retf
push
imul
mov
mov
pop
pushf
fs
sti
add
or
lods
(bad)
gs
jp
push
jmp
rcr
test
pop
xor
cmp
stc
xlat
test
lods
rol
mov
in
xor
adc
out
repz
jns
mov
or
mov
call
popa
shl
adc
xor
inc
pxor
push
out
mov
or
(bad)
and
dec
sbb
push
dec
es
test
xlat
sbb
jbe
icebp
or
jae
pop
dec
icebp
(bad)
clc
in
pop
or
dec
imul
popf
(bad)
or
mov
jmp
push
retf
popf
push
push
hlt
add
jmp
dec
out
aam
inc
ret
push
popf
cmp
push
in
cmp
aam
push
jmp
sbb
sub
sbb
mov
out
push
stos
push
mov
sub
addr16
aas
mov
pushf
cmc
sub
mov
and
jmp
xchg
aam
pop
out
cs
mov
fmulp
xlat
and
inc
in
add
mov
sub
repnz
sbb
xor
in
out
(bad)
push
jg
call
ins
imul
jno
fild
in
(bad)
les
pop
mov
scas
mov
jp
neg
jge
pop
ds
dec
outs
cmps
out
lods
jbe
sub
outs
push
sub
sbb
pusha
ins
out
outs
jno
adc
jmp
xchg
nop
retf
or
add
in
sub
adc
outs
mov
dec
jmp
inc
loop
(bad)
mov
sbb
push
fnstenv
mov
ins
sbb
cmp
movs
inc
fsubr
stos
(bad)
ret
mov
add
and
push
mov
push
es
inc
dec
nop
mov
push
lea
rcl
or
leave
mov
pop
nop
xor
cmp
cmp
inc
fimul
sub
cmp
push
pop
test
sbb
adc
ror
mov
stc
mov
sbb
stos
pop
pop
lds
stc
xchg
or
stc
rol
pop
in
int
dec
jmp
add
inc
inc
outs
js
data16
ins
in
mov
in
in
retf
or
bound
rol
sub
(bad)
cmc
fisubr
sbb
mov
ins
lods
xchg
ja
mov
mov
icebp
inc
jecxz
cmp
les
ror
push
stmxcsr
jp
mov
cmps
adc
sti
xchg
push
ins
pop
jne
or
mov
ds
inc
xchg
xchg
pop
jl
push
je
dec
js
sub
adc
jo
dec
add
cld
cmc
xchg
push
cmp
ins
dec
cmp
repz
fs
jmp
xchg
dec
mov
call
push
cmp
sub
test
and
pop
mov
sbb
rcr
pushf
das
mov
bound
add
or
sub
scas
or
jne
jmp
or
and
sti
test
adc
mov
mov
jge
mov
sahf
add
mov
mov
leave
dec
sbb
mov
push
and
stc
add
xor
cdq
sub
mov
arpl
push
pop
xchg
dec
jbe
(bad)
loope
pop
mov
out
pop
dec
lds
jo
sbb
nop
retf
bound
aas
dec
sub
sbb
repz
or
loope
adc
inc
rol
inc
aam
jne
mov
cmp
ret
ss
push
rcl
mov
pop
xor
out
xchg
fwait
in
inc
dec
jge
dec
(bad)
fimul
mov
test
jle
xor
mov
in
cdq
popa
xchg
(bad)
in
mov
repnz
fadd
int
pop
add
outs
mov
adc
xchg
mov
add
(bad)
(bad)
push
add
sub
add
leave
xchg
or
pop
loopne
add
sbb
jae
ficom
pop
inc
addr16
or
add
dec
es
push
test
idiv
mov
xor
shr
xchg
lods
icebp
shr
push
leave
adc
es
sub
jb
xor
gs
data16
hlt
pop
mov
add
sub
rcr
repz
xchg
cmps
scas
jmp
jmp
jmp
repz
jns
enter
jnp
mov
jecxz
(bad)
imul
sub
adc
nop
push
jmp
fld
xor
lock
jno
fwait
push
(bad)
xor
(bad)
hlt
inc
test
jmp
fadd
loop
cld
shl
mov
loopne
dec
push
or
fild
enter
fcomp
daa
dec
mov
pop
mov
xor
les
test
and
cdq
adc
mov
std
dec
pop
mov
loope
push
stos
cmps
cmps
call
inc
je
xlat
(bad)
cld
stos
cmp
or
idiv
es
aad
(bad)
inc
mov
les
cld
and
outs
mov
push
pop
aam
jge
ror
xor
sub
cmc
nop
nop
cdq
add
in
js
mov
sub
aas
enter
xchg
fnsave
das
add
xor
mov
fdivrp
test
leave
test
pop
shl
or
ins
pop
xchg
loopne
fsub
daa
jb
fsubr
popf
dec
pop
in
xor
adc
mov
or
inc
idiv
inc
sbb
mov
in
adc
scas
jo
in
xchg
push
mov
in
inc
out
repnz
push
aaa
mov
cmps
ins
call
test
jge
dec
test
dec
aas
xor
push
mov
leave
into
stos
sbb
stc
xchg
ucomiss
ret
fisttp
loop
inc
sub
ret
dec
xchg
sbb
jmp
add
rcl
inc
lods
in
jmp
cmp
adc
jp
add
pop
pop
aad
jmp
stos
mov
daa
imul
cmc
es
mov
imul
mov
jp
inc
rcr
pop
and
jo
popa
mov
stos
cmp
in
jl
sbb
jne
fdivr
sub
in
imul
lods
lods
popa
dec
retf
iret
icebp
je
jge
sar
mov
dec
shl
push
arpl
lahf
jle
jmp
pop
sub
loope
lock
cdq
call
add
not
popf
leave
jbe
push
icebp
and
ret
cmp
frstor
sbb
mov
jo
shl
pushf
out
xchg
jl
lock
outs
or
int
and
jo
fwait
daa
cmp
mov
jp
sub
dec
jnp
xor
ret
and
mov
js
test
aaa
adc
xchg
cmp
xchg
outs
sub
jno
pop
lods
test
push
pusha
lahf
push
cmp
fistp
into
sti
inc
pop
lock
pushf
retf
or
add
stos
ret
imul
sub
add
push
imul
mov
mov
outs
ret
rcr
pop
aaa
inc
sahf
mov
int3
sub
mov
arpl
cwde
fbstp
nop
push
add
inc
ja
movs
lods
dec
push
xlat
mov
mov
mov
dec
(bad)
call
pop
push
leave
pop
and
lahf
pop
outs
cs
pop
inc
push
in
(bad)
retf
shl
add
jmp
(bad)
mov
or
dec
or
add
inc
cmp
dec
xchg
(bad)
sbb
popa
mov
loope
cdq
add
mov
in
add
or
mov
ficom
cmp
xchg
pop
pop
in
nop
popa
pop
clc
test
iret
repz
sahf
dec
pop
out
push
mov
pop
ds
div
arpl
dec
aam
cmc
cmp
movs
mov
and
test
lea
xor
dec
add
pop
push
dec
mov
push
lods
ins
(bad)
inc
dec
int
cmp
not
xor
addr16
or
(bad)
mov
mov
gs
in
pop
add
sub
mov
mov
mov
call
jnp
push
add
repz
call
loopne
fs
(bad)
xor
or
nop
mov
dec
enter
shl
xchg
scas
dec
mov
dec
dec
mov
cli
sub
aaa
mov
bswap
add
cmc
add
jae
mov
dec
inc
ins
test
mov
mov
sub
jmp
push
or
into
js
push
jl
lahf
inc
dec
ss
loopne
xor
ret
icebp
xlat
and
(bad)
ins
setne
sub
add
xor
cwde
fnstenv
imul
sbb
dec
or
add
mov
and
ficomp
inc
mov
cmps
(bad)
dec
daa
ins
push
xchg
xchg
dec
int3
sub
adc
mov
dec
cmp
jbe
nop
xchg
scas
sbb
and
xor
mov
push
mov
jae
push
(bad)
fwait
mov
addr16
lock
push
fwait
or
mov
fst
xchg
or
adc
add
or
push
mov
mov
and
pop
in
lock
and
(bad)
jne
repnz
mov
mov
or
inc
bound
pop
out
es
xor
fwait
sahf
mov
hlt
lods
mov
imul
push
scas
fs
cmp
movs
les
and
sar
xchg
out
call
std
out
xchg
repz
test
aad
in
arpl
push
push
les
mov
jp
jae
or
popf
call
cmp
cmp
pop
mov
pop
enter
lods
mov
lods
mov
cmp
xlat
sbb
stc
push
cmp
repnz
std
add
push
retf
cmovp
mov
mov
fisttp
and
fwait
mov
mov
jbe
out
out
lods
push
lock
cmp
mov
lahf
pushf
fcmovnbe
in
add
out
movs
je
sar
cld
in
ja
push
dec
(bad)
jp
lods
push
cli
pop
aaa
aas
mov
sub
ret
xchg
jno
faddp
rol
inc
retf
aas
xor
sub
xor
cmp
inc
lea
aaa
test
mov
and
push
sub
pop
ret
cmp
push
aas
cmps
fdiv
cdq
sub
inc
push
jg
arpl
dec
inc
mov
das
sahf
pop
stc
xchg
cmp
push
shl
popa
xchg
jl
imul
mov
mov
pop
pushf
mov
leave
test
(bad)
cmp
xchg
sbb
xor
cwde
(bad)
mov
lods
retf
gs
nop
adc
scas
sbb
out
inc
cmp
out
rol
lds
repnz
mov
ret
retf
sub
loop
leave
adc
mov
test
inc
jns
jo
push
or
out
sbb
adc
fisttp
int
rcl
pusha
fstp
push
stc
cli
gs
(bad)
js
je
push
xor
jmp
sub
arpl
out
fnsave
lea
pop
aaa
adc
fsubrp
aam
push
ins
bound
int
aas
(bad)
rcr
jmp
and
(bad)
xor
(bad)
xlat
in
xor
push
cld
mov
and
and
dec
pop
pop
and
gs
and
and
inc
mov
add
jge
mov
add
push
ds
cwde
std
adc
jno
jp
xchg
or
sar
mov
inc
pop
xor
retf
dec
adc
icebp
(bad)
test
pop
shl
ins
mov
adc
jbe
fdivr
ins
sbb
test
mov
sub
ret
pop
push
(bad)
movs
sbb
and
test
in
xchg
mov
mov
dec
(bad)
fisttp
lock
mul
gs
lods
xchg
add
inc
das
ret
scas
call
push
mov
jmp
(bad)
sbb
sbb
add
jae
jge
fdivrp
lods
stos
adc
cmp
ror
push
cmp
inc
mov
mov
repz
sbb
dec
in
ja
and
gs
jae
add
fwait
or
loopne
sbb
out
xor
jle
pop
inc
les
mov
fist
cmp
xchg
fst
test
pop
jne
mov
test
or
xchg
cmc
and
ins
sub
stos
pop
mov
mov
nop
and
jbe
fisubr
aaa
jae
add
xor
xchg
mov
mov
mov
dec
aam
aas
xor
jge
je
cs
fisttp
mov
mov
loop
xor
sti
inc
mov
push
pop
es
xchg
loope
scas
dec
push
loopne
inc
in
mov
test
shl
(bad)
push
add
mov
bound
jg
jge
cwde
mov
xchg
mov
mov
ret
pmaxsw
dec
sbb
push
ins
or
aas
push
sti
cmp
retf
into
idiv
jb
inc
xchg
icebp
mov
push
adc
scas
test
jns
inc
jno
bound
adc
dec
pop
iret
lahf
pop
daa
es
arpl
std
mov
pop
loope
lds
pop
and
adc
repnz
mov
in
(bad)
cli
(bad)
not
aaa
cwde
inc
daa
mov
fistp
jne
add
xor
jbe
xchg
push
scas
jl
jmp
repnz
(bad)
and
mov
fs
clc
fs
mov
add
xlat
aad
xchg
rcr
or
cmps
mov
mov
cmp
sub
inc
and
xor
cmc
jmp
jg
adc
mov
add
mov
add
sahf
test
repz
dec
fild
imul
ret
shl
pop
jae
hlt
xchg
sub
add
fnstsw
call
sbb
mov
ret
ins
idiv
mov
mov
push
leave
xchg
shr
movs
pop
les
pop
addr16
pop
gs
sub
out
icebp
dec
bound
fst
fcom
jne
popa
cld
in
cmp
clc
sbb
sub
int
aad
jmp
adc
aas
xchg
jle
xchg
cs
pop
out
cmp
adc
test
push
mov
mov
jno
fisubr
lds
addr16
test
and
hlt
sub
jno
mov
xchg
inc
inc
dec
call
jecxz
sbb
mov
imul
std
and
or
xor
xchg
hlt
rcl
loopne
or
(bad)
push
ret
scas
rcl
stos
clc
pop
jge
out
mov
pusha
cld
xchg
sbb
push
sbb
cmp
ret
lods
dec
xor
mov
pusha
jbe
sub
inc
in
pop
push
mov
cmps
or
adc
cmps
imul
test
inc
fs
mov
pop
ins
or
add
sub
loope
lea
out
ror
ret
popa
cmp
in
mov
imul
cld
cmp
leave
jle
jo
cmp
or
movs
cld
nop
rcl
or
stos
ds
add
js
int3
xor
push
in
mov
cmp
push
mov
stos
cmp
fwait
push
and
jmp
and
mov
imul
lock
push
jne
out
xor
movs
dec
cld
jae
cmp
test
sbb
xchg
inc
push
jne
and
cmp
nop
popa
dec
xor
add
mov
popa
jge
add
add
xchg
xor
mov
and
jbe
xchg
dec
scas
bound
test
gs
sbb
jns
and
adc
leave
add
xchg
hlt
adc
cld
idiv
in
aad
xchg
xchg
test
or
das
imul
or
lahf
(bad)
or
dec
sbb
in
ds
xor
shl
pushf
dec
pop
adc
sbb
push
cmp
loopne
call
jp
test
jnp
icebp
add
fstp
out
pop
add
push
loopne
push
xor
jns
(bad)
jecxz
jmp
mov
push
pop
jg
aas
jno
fnstsw
ds
pop
dec
push
shr
test
(bad)
loop
in
loope
jle
fs
mov
clc
popf
add
sbb
lods
and
and
fst
pop
cmp
adc
push
daa
mov
push
je
faddp
(bad)
cmp
sub
ds
xchg
adc
shl
je
mov
pop
xchg
jns
jg
aad
mov
and
ja
sub
or
or
xchg
inc
aas
sbb
(bad)
stc
jne
enter
pop
fld
bound
pop
std
dec
mov
lds
cwde
outs
ja
adc
in
popf
pusha
xor
repnz
or
mov
xchg
mov
imul
inc
ins
xor
(bad)
sti
in
popf
lahf
jg
sub
jl
(bad)
and
pop
cmps
fcom
dec
jmp
gs
pushf
xor
test
dec
stc
mov
xor
fdivr
dec
ffree
out
scas
out
(bad)
xor
pop
(bad)
cmp
pop
mov
cwde
aas
adc
ss
inc
pop
push
mov
add
sub
ss
xchg
jle
lods
push
loop
inc
(bad)
mov
pop
sbb
clc
or
push
mov
cli
fisubr
and
add
fcomp
jge
mov
mov
mov
add
test
xlat
lahf
mov
repnz
loope
push
push
js
or
mov
stos
lahf
sbb
test
push
out
pusha
cmc
and
stos
adc
adc
mov
mov
jge
cmps
xor
test
movs
dec
sbb
mov
in
cmps
in
mov
dec
aam
sub
jmp
inc
icebp
adc
mov
out
sbb
pop
inc
adc
fmulp
addr16
sahf
xchg
xchg
movs
cmps
imul
clc
mov
xchg
adc
xor
push
aas
dec
scas
loop
ins
(bad)
fiadd
(bad)
shl
dec
ds
sbb
outs
nop
mov
jmp
push
je
es
or
dec
push
and
xchg
pop
mov
sbb
sub
stos
out
mov
int
mov
outs
push
or
les
or
jnp
fisubr
adc
cmp
retf
and
fsubr
in
out
rcl
jmp
aad
add
nop
ins
push
inc
and
clc
enter
test
sbb
inc
ret
loope
inc
push
pop
retf
inc
and
adc
add
cmp
mov
dec
sbb
sub
(bad)
xor
repnz
cmp
mov
and
loopne
and
(bad)
shl
push
and
sbb
xor
lahf
gs
out
sbb
pusha
push
pop
mov
jge
push
jae
adc
ror
push
sbb
mov
(bad)
push
leave
jmp
push
or
xchg
mov
sub
hlt
dec
sub
jo
(bad)
pop
xlat
mov
push
or
sahf
cs
leave
sbb
jne
sub
sub
in
push
inc
pop
mov
sbb
xor
sbb
sahf
stos
adc
mov
loop
sbb
mov
jnp
icebp
mov
inc
mov
ret
mov
movs
push
ins
push
fadd
jae
xchg
pop
pop
mov
inc
mov
rcl
cmp
bound
mov
and
push
fdiv
retf
xchg
lahf
mov
mov
and
cmp
fmul
(bad)
sbb
popf
shl
inc
int
adc
sahf
mov
outs
jg
out
xor
or
test
inc
jge
out
mov
jg
aas
pop
jmp
hlt
je
add
xchg
(bad)
push
cmp
es
or
lock
icebp
ret
int
fild
jp
jo
jb
jns
sub
dec
shr
aas
pop
mov
call
outs
addr16
mov
xchg
pop
xchg
and
ss
jmp
push
hlt
pop
inc
ins
aaa
push
inc
test
imul
mov
jecxz
jl
(bad)
sbb
xor
repnz
std
mov
pop
add
sub
jb
fisub
xor
cmps
dec
test
sub
sub
jno
inc
aaa
dec
rol
pushf
fiadd
sbb
push
sbb
jnp
mov
sahf
pop
cwde
cmp
mov
xchg
iret
add
movs
sub
mov
sub
or
push
mov
add
cli
cmps
jp
xchg
(bad)
enter
icebp
xlat
mov
cdq
dec
mov
jl
movs
fwait
mov
adc
iret
dec
test
cmp
xor
ja
add
jg
(bad)
mov
pop
cld
pop
int
add
mov
adc
xor
popf
push
ror
jl
iret
ret
mov
push
inc
test
xchg
sub
stc
cmp
jmp
inc
push
stc
mov
popf
pop
shl
(bad)
fadd
xchg
ror
adc
jo
adc
out
sbb
cmp
pushf
popa
pop
out
pop
adc
inc
cmps
scas
push
sbb
and
push
icebp
and
pop
and
movs
sbb
inc
jl
mov
mov
xchg
clc
add
cdq
add
cmp
aaa
adc
leave
adc
sbb
test
fstp
in
push
in
out
and
dec
fiadd
push
and
lods
inc
pusha
rol
test
push
clc
inc
stos
cmps
sbb
ins
xor
nop
jge
(bad)
jbe
aas
jg
xchg
pop
ror
pop
fbld
xchg
sub
inc
rcl
out
les
jns
jae
sub
movs
jg
push
bound
push
paddd
sbb
xlat
fcomp
lock
jg
mov
aas
stos
mov
(bad)
adc
mov
lock
xchg
jae
cmps
ret
adc
stc
inc
mov
adc
lods
pop
hlt
loopne
inc
or
jl
jbe
jl
adc
fadd
mov
stos
ret
cmp
mov
mov
mov
mov
int
xchg
fmul
popa
jmp
popa
inc
les
les
cli
test
sbb
sahf
ret
xchg
bound
pop
data16
daa
imul
xchg
(bad)
fnsave
mov
stc
adc
data16
call
add
xor
clc
push
pop
in
fbstp
retf
and
and
cmp
push
retf
es
add
ret
lods
std
imul
pop
xchg
sub
int
loope
sbb
push
ins
int3
out
inc
rcl
sti
mov
or
ret
popf
push
mov
cmp
jbe
cmps
jae
scas
test
push
dec
push
mov
dec
cli
pop
add
mov
pop
jl
mov
mov
adc
aam
lds
sub
ins
sub
mov
or
sbb
inc
inc
dec
and
sbb
sbb
out
loope
shl
push
mov
pop
icebp
inc
lods
pusha
ja
mov
enter
dec
adc
push
lea
xor
setns
add
jecxz
xchg
es
cmp
inc
lock
(bad)
jo
inc
pop
dec
or
cmp
pusha
movs
idiv
and
and
xor
inc
test
pop
leave
lods
retf
(bad)
push
les
movs
push
test
int
or
pop
outs
test
xchg
push
lods
in
nop
test
cmp
hlt
loop
in
int3
fs
push
mov
push
sbb
fdivr
jmp
xchg
adc
sbb
inc
cmp
pop
(bad)
xchg
jb
je
lock
adc
pop
mov
mov
mov
jp
xlat
sub
inc
mov
push
xor
xchg
or
call
xchg
push
push
ins
sahf
push
mov
jbe
push
(bad)
sub
mov
mov
lds
xor
push
xchg
ins
and
inc
sahf
stos
fs
mov
xstore-rng
cmps
inc
pusha
aam
push
and
sub
stc
cmp
cli
loopne
scas
lods
sbb
mov
mov
test
adc
imul
jo
mov
lahf
dec
dec
mov
sub
mov
nop
in
mov
jg
and
in
push
cs
popa
push
nop
fild
retf
xor
mov
js
dec
sbb
jmp
mov
ret
pop
xchg
call
fadd
push
mov
xchg
dec
push
ficomp
jg
dec
pop
push
(bad)
and
mov
adc
jb
mov
pop
jno
pop
(bad)
nop
mov
or
and
dec
jbe
adc
pop
sbb
icebp
and
sbb
push
movs
push
test
push
(bad)
cli
cs
mov
repnz
es
jg
loop
jle
fs
je
or
sbb
rcl
mov
in
stc
scas
pop
sub
fnstenv
pop
fcomp
or
je
push
(bad)
pop
popa
sbb
xor
jb
push
loop
dec
jl
or
in
cmp
xlat
pop
bound
sub
(bad)
(bad)
fistp
cmp
out
sahf
jecxz
mov
sbb
js
push
push
sub
sbb
sbb
or
arpl
dec
add
int3
dec
repnz
sub
mov
cmp
scas
loope
cmp
js
sub
cmp
shl
cmp
test
in
(bad)
pop
inc
mov
and
mov
push
mov
add
shr
xchg
xchg
or
xor
dec
push
ins
mov
sbb
or
cmp
fidivr
dec
loope
xchg
in
mov
rol
mov
inc
xor
int
push
(bad)
mov
pop
(bad)
sbb
int3
addr16
hlt
fadd
pushf
pusha
add
add
sbb
or
add
out
jg
mov
das
fisubr
mov
add
pop
push
sbb
mov
sahf
aas
cmp
xor
pop
out
inc
xor
sub
loope
dec
inc
leave
fadd
add
sub
jmp
mov
push
aaa
(bad)
fnsave
bound
push
(bad)
hlt
pusha
add
cmps
fcmove
out
mov
call
stc
xchg
pop
cmc
ffree
push
inc
adc
pop
fisttp
stos
cmps
mov
addr16
repnz
in
popw
addr16
mov
rcr
(bad)
inc
dec
jle
jle
push
stos
sbb
adc
rol
cmp
jne
jnp
xor
adc
mov
mov
lods
pop
lods
and
enter
iret
shr
inc
into
xor
cmp
andps
inc
jl
cmp
pusha
sub
and
pop
(bad)
and
mov
adc
cs
aam
xor
cmp
dec
or
cwde
sbb
idiv
pop
ins
pop
rcl
shr
xor
xchg
out
cmp
into
imul
jle
sbb
mov
rcr
js
dec
or
lods
pop
test
jl
clc
das
popf
mov
sub
inc
aas
adc
inc
imul
daa
pop
into
or
retf
dec
pop
out
bound
hlt
or
outs
fcmovne
or
xor
cmp
add
mov
jnp
cmps
sbb
pop
adc
retf
jae
dec
retf
mov
(bad)
jns
aam
les
pop
dec
rcr
dec
mov
clc
adc
mov
jecxz
lds
out
mov
lods
adc
out
mov
sbb
(bad)
and
dec
add
fcmovbe
ffreep
test
mov
cmps
xchg
and
rol
arpl
mul
xchg
ins
or
ror
out
psrlq
out
aad
pop
je
and
mov
int
mov
mov
test
rcl
dec
jp
out
jecxz
push
pop
outs
mov
iret
rcl
jo
push
fstp
or
stc
icebp
fucom
test
ret
call
aaa
out
pop
sub
dec
outs
mov
push
test
lods
mov
aad
daa
(bad)
xchg
cmps
cdq
jmp
or
sub
(bad)
xchg
arpl
jl
cmp
dec
sbb
xor
mov
je
inc
xchg
adc
inc
cmp
je
xlat
in
add
dec
jnp
jle
sub
dec
mul
xor
cmps
mov
mov
jmp
jbe
in
test
add
out
sub
outs
test
loopne
xchg
mov
std
mov
xchg
jmp
pop
leave
in
and
xchg
mov
mov
popf
ins
fcom
and
pop
pop
sbb
in
int
adc
aas
retf
in
xchg
mov
jae
ror
mov
mov
push
dec
fprem1
sbb
xchg
dec
js
int
clc
dec
mov
call
mov
push
push
cmp
adc
dec
adc
fwait
into
or
xchg
jb
repz
cli
enter
dec
or
xor
leave
into
sbb
cmp
sbb
test
sbb
dec
pop
gs
pop
jbe
push
mov
mov
int3
mov
sti
loop
stos
dec
mov
hlt
sar
je
clc
mov
mov
mov
jnp
stos
jp
int
jne
mov
xor
aas
pusha
(bad)
loop
sbb
xchg
(bad)
enter
pop
je
fs
inc
jmp
mov
cmp
pushf
fldenv
call
nop
in
gs
ds
sar
cmp
(bad)
(bad)
push
and
data16
test
sar
and
jmp
(bad)
leave
(bad)
adc
nop
stos
cmp
test
cmps
and
sbb
aad
jmp
pop
xchg
add
or
inc
add
push
mov
cmps
ror
sbb
push
dec
js
lds
cmc
fidiv
clc
in
out
sbb
sub
sbb
ins
dec
shl
sub
add
push
rcl
sub
outs
dec
aad
xchg
adc
or
pop
mov
stc
enter
sti
call
fisttp
xor
cmp
sbb
jge
fs
iret
add
cs
fld
inc
(bad)
popa
(bad)
dec
sub
xchg
fisttp
inc
mov
rcr
aam
xchg
movs
repnz
retf
sub
push
jle
fst
mov
out
loop
xlat
jmp
js
lea
inc
jnp
into
mov
das
mov
ins
dec
pop
mov
into
dec
movs
push
mov
mov
mov
or
and
jecxz
cs
mov
movs
ja
test
xor
clc
movs
cmp
mov
sub
cmc
pop
mov
into
pcmpeqb
jbe
fisttp
call
cmp
cmps
not
hlt
nop
test
fwait
lods
or
(bad)
ds
add
push
dec
test
sbb
hlt
sbb
out
int
ror
lahf
xor
add
mov
retf
retf
xor
lock
sahf
je
mov
(bad)
xor
mov
sahf
adc
punpckhbw
cmp
pushw
push
pop
aas
add
out
jg
xchg
jnp
sbb
nop
or
stos
in
jmp
cwde
fcmovne
ret
jge
cmp
xchg
pop
and
sbb
add
in
pop
fidiv
dec
cmp
pop
aaa
jnp
push
xor
rcr
sub
sahf
out
pop
inc
xchg
rol
mov
std
pop
jb
out
call
sahf
mov
movs
push
call
mov
dec
sub
lods
or
movs
int
mov
add
mov
xchg
outs
into
inc
mov
push
pop
aam
and
add
inc
xor
cld
iret
and
fs
addr16
gs
cld
outs
sbb
cmps
aad
pop
xchg
mov
cmps
lds
jnp
imul
sahf
test
(bad)
nop
dec
cmc
outs
xor
(bad)
xor
or
pusha
add
popf
jmp
(bad)
cdq
pop
xchg
push
and
imul
jo
push
movs
fcom
sub
fadd
pop
and
in
cs
pop
popa
jns
pop
jp
(bad)
movs
das
inc
jmp
adc
es
add
or
jns
xchg
push
jp
gs
lods
dec
sbb
and
pop
and
repnz
cmp
leave
(bad)
dec
call
mov
stc
xchg
mov
popf
ror
inc
and
add
ja
aam
test
jmp
int3
fwait
mov
cli
bound
aaa
xor
loope
gs
fbld
je
cld
sbb
adc
pop
xchg
mov
retf
call
les
jge
adc
jp
and
aaa
dec
les
in
adc
jb
sub
push
sub
xchg
or
loope
lahf
test
dec
mov
xor
adc
cwde
call
pop
and
mov
sbb
test
cld
mov
idiv
jg
adc
iret
popf
mov
leave
jne
mov
repz
ret
xchg
xor
rcr
mov
iret
stc
xchg
lods
retf
lds
cs
mul
jns
xchg
or
rcl
inc
mov
cmp
mov
call
lea
hlt
push
jecxz
test
shl
and
mov
xor
cs
mov
cld
repz
push
jg
icebp
xor
adc
mov
test
sbb
pop
fs
lds
jg
dec
lock
call
(bad)
out
(bad)
dec
(bad)
push
(bad)
movs
pop
mov
mov
xchg
nop
add
mov
jb
cli
fistp
jo
out
(bad)
js
jnp
in
repz
loop
out
xchg
aad
mov
fs
loopne
ins
cmc
mov
cmp
call
xor
nop
xchg
std
push
xchg
call
xlat
pop
cmp
fs
iret
push
mov
pushf
xchg
mov
and
js
bound
pop
test
test
push
jo
mov
std
and
xor
cmp
inc
repz
sbb
adc
jg
pop
aad
push
sub
out
ins
inc
das
loope
xchg
ds
pop
pop
jmp
and
jle
or
mov
ja
cmp
fcom
stos
mov
call
sbb
cmp
push
sbb
add
int
popa
sbb
mov
jmp
pop
sbb
jmp
test
inc
mov
jmp
jge
xchg
pop
jmp
(bad)
and
gs
(bad)
cmp
sbb
xor
lods
test
retf
xchg
aaa
int
loope
jo
in
es
push
out
mov
cdq
call
in
aam
addr16
mov
bound
sub
and
jmp
mov
rcl
mov
repnz
xor
push
bound
ins
es
pusha
mov
loop
push
adc
shr
fcom
sahf
push
dec
adc
xchg
out
sub
and
inc
out
push
dec
movs
pusha
in
test
push
repz
int3
jl
rcr
addr16
pop
clc
repz
or
je
push
fdivp
mov
mov
mov
pop
or
jle
push
cld
sub
fsubr
rcr
jno
out
inc
push
push
xor
into
ror
pop
adc
jo
push
mov
add
adc
mov
add
stos
mov
mov
or
dec
movs
test
lock
shr
mov
sbb
popf
pop
inc
mov
cmp
jo
and
sub
xchg
shl
pop
xor
fist
jg
push
popf
jle
jmp
cmp
or
inc
pop
scas
xchg
bnd
inc
addr16
lods
jmp
add
mov
(bad)
in
xor
repz
push
imul
out
shl
jae
not
js
pop
cmc
neg
mov
(bad)
mov
outs
sub
sbb
ret
leave
in
mov
ja
inc
mov
jbe
push
mov
nop
sub
mov
or
hlt
fucom
push
lock
out
mov
cmp
mov
std
neg
loopne
jge
xlat
push
sahf
sub
pop
fistp
xchg
push
cld
aas
stc
sub
call
mov
mov
sub
cmp
pusha
sbb
(bad)
enter
cmps
jp
adc
cli
scas
retf
jae
cmc
xchg
dec
xlat
push
dec
repz
mov
nop
sar
lea
xchg
fld
(bad)
(bad)
imul
test
cmp
(bad)
jmp
data16
jb
push
xor
xor
popa
push
adc
inc
jo
sub
mov
sbb
sbb
dec
jns
mov
fdiv
fmul
and
adc
push
bnd
into
test
hlt
mov
call
mov
leave
inc
add
pop
adc
cmps
cli
add
xchg
or
and
jl
jmp
sbb
add
imul
or
push
jge
mov
pop
mov
mov
ret
adc
push
imul
lahf
cmp
xchg
addr16
push
and
mov
push
ds
sbb
je
retf
test
or
jae
in
xor
mov
xlat
xchg
mov
or
push
cmp
lods
cmp
sbb
jo
mov
ret
mov
test
inc
mov
add
xchg
es
push
jecxz
cmp
jns
xchg
mov
add
adc
cmc
or
lods
cmp
inc
dec
xchg
mov
push
shl
inc
inc
pop
retf
lahf
popa
icebp
push
mov
dec
sbb
cs
dec
mov
lock
test
test
(bad)
push
jb
sbb
cmp
adc
cdq
add
add
add
(bad)
movs
xor
cmc
vxorps
mov
sub
push
dec
call
jbe
sub
movs
cwde
test
sub
push
mov
scas
(bad)
xor
dec
cmp
adc
or
mov
mul
(bad)
in
sub
out
mov
push
jae
loop
enter
mov
push
in
mov
lods
push
pop
sti
dec
dec
jnp
int
gs
and
ret
push
inc
adc
and
add
call
loope
out
pop
add
adc
and
pop
push
jnp
lock
push
shl
ret
(bad)
xbegin
into
test
adc
mov
pop
pop
inc
movs
sub
mov
(bad)
sub
mov
cli
push
stc
inc
scas
call
scas
lahf
in
test
xlat
aaa
xchg
sbb
lea
cld
test
outs
push
sub
lahf
test
ret
(bad)
mov
test
adc
loope
xchg
and
sbb
dec
lock
jmp
stos
inc
xor
xor
test
sbb
call
lock
repz
cmps
js
dec
push
ins
mov
lods
call
out
inc
push
cmp
movs
push
add
lahf
adc
jns
sahf
rcl
int
aas
xchg
sbb
in
sbb
arpl
ror
cwde
xor
aam
mov
stos
mov
xor
add
invd
cmp
fmul
data16
std
push
imul
mov
stos
push
enter
cmps
sbb
jl
xor
out
push
lahf
popf
inc
add
enter
lea
xchg
sub
mov
test
pop
jmp
fistp
popf
xchg
push
cmp
cmc
ficom
xor
clc
jg
jno
mov
jae
mov
lods
idiv
stos
push
lods
std
ins
sub
shl
adc
std
pop
into
cli
jmp
mov
js
and
js
popa
in
inc
add
pushf
pop
pop
(bad)
loop
fwait
pop
or
and
cmp
retf
inc
add
popf
mov
jae
pop
sub
in
or
fadd
push
mov
loop
mov
pop
loop
pop
repz
mov
cmp
xchg
sub
int3
pop
pop
cmp
gs
cmps
in
xor
mov
mov
mov
shl
repnz
xchg
cmps
cmp
dec
int3
arpl
jae
push
aas
enter
sahf
push
cmp
and
adc
mov
or
push
mov
mov
push
cmps
add
push
fisubr
xchg
sbb
pop
xchg
out
int3
sub
jo
push
out
ins
jp
mov
adc
and
mov
jle
out
xor
fnstsw
lods
fld
adc
add
leave
out
pop
cmp
dec
cdq
fadd
(bad)
sti
jns
jns
scas
jae
scas
pop
lahf
pop
sbb
xor
imul
xor
or
rcr
and
xor
enter
push
add
jo
pop
mov
icebp
imul
mov
ds
ins
jp
and
and
test
dec
sub
not
retf
xchg
retf
push
xchg
push
push
gs
cmps
lds
std
cmp
lods
scas
int3
cmc
loopne
pop
push
aaa
mov
and
out
stc
mov
out
mov
mov
retf
into
sbb
mov
or
inc
dec
fcom
and
mul
gs
and
std
hlt
jl
popf
(bad)
movs
ret
jecxz
ss
sti
xchg
imul
and
and
loop
loopne
loop
aaa
mov
in
sar
jmp
popa
sbb
mov
jmp
fdiv
jp
pop
xor
mov
imul
mov
mov
pop
xor
bound
imul
xchg
(bad)
fistp
jl
cmc
scas
fistp
scas
stos
hlt
adc
xor
dec
leave
or
out
je
jo
sub
xor
in
push
inc
inc
fucomp
lods
mov
and
mov
xchg
shl
mov
adc
lods
cs
cld
cmp
cmps
sbb
push
imul
test
pop
in
mov
push
xchg
xor
or
jno
and
xor
add
pop
je
sub
into
pop
retf
xor
inc
sbb
xor
bound
test
outs
cdq
jecxz
xchg
(bad)
adc
xchg
inc
jecxz
fmul
xchg
jmp
lods
mov
inc
mov
stc
add
mov
aad
les
fbld
popa
test
xor
mov
push
pop
stos
aam
shl
test
mov
jbe
inc
push
jmp
scas
or
push
pop
out
jb
cmp
sti
ins
mov
pop
mov
xchg
outs
sbb
sub
jmp
push
test
xor
inc
sub
js
cmp
fs
adc
sbb
xchg
popa
jmp
xchg
sub
jo
outs
xchg
adc
adc
xor
inc
nop
(bad)
jmp
dec
xchg
cld
inc
lock
(bad)
pop
pop
push
int
mul
sbb
add
shl
pop
rcr
stos
xlat
cli
fld
sar
lea
mov
inc
fwait
cmp
jbe
push
les
add
cli
pop
sbb
mov
loope
xchg
dec
outs
bound
pop
or
and
pop
mov
lods
pop
adc
(bad)
lock
push
cmp
jo
inc
cmp
test
dec
mov
mov
loopne
(bad)
pop
imul
add
mov
or
push
aad
xor
xchg
int
stc
mov
jle
pushf
mov
hlt
pop
mov
mov
add
jne
mov
mov
push
mov
and
adc
sar
add
mov
mov
cli
popa
rcl
pop
das
jno
jb
pop
adc
or
xchg
lock
sbb
nop
ds
(bad)
cmps
adc
lahf
mov
dec
movs
jae
sub
sub
rol
(bad)
cmps
push
out
scas
jno
add
sti
shl
jl
cwde
inc
retf
jp
out
mov
push
cs
imul
mov
jb
gs
pop
sbb
mov
call
pop
cmp
int
add
jae
cmps
push
sub
das
push
and
outs
lea
jne
out
cmp
pop
sti
imul
popf
les
ss
mov
jb
push
test
jbe
cdq
out
fld
add
mov
mov
je
dec
sbb
in
shl
mov
xchg
rcl
jle
lds
popa
jb
scas
and
and
push
mov
and
cmp
jnp
movs
sub
sub
and
pop
lods
push
arpl
jmp
push
je
and
dec
daa
(bad)
pop
out
cmp
loop
daa
or
jns
dec
out
xor
repz
inc
jae
dec
stc
cli
aas
call
add
push
mov
xlat
repz
sub
mov
test
mov
or
jp
loope
jbe
fbld
xchg
inc
mov
or
xchg
loop
shl
imul
xor
fisttp
mov
outs
sub
and
mov
mov
cs
mov
in
fdivrp
sub
nop
sbb
pop
int
and
xor
sbb
jae
pusha
sub
xchg
retf
pop
mov
add
inc
test
mov
jle
inc
sbb
adc
icebp
xchg
mov
push
add
sub
mov
nop
cmp
mov
inc
out
(bad)
inc
mov
mov
push
pop
movs
les
cwde
inc
xchg
and
popa
dec
sbb
xchg
xchg
inc
xchg
push
or
jle
pop
adc
out
aaa
pop
mov
sub
inc
xchg
sub
mov
scas
cmp
xor
and
cdq
xchg
cdq
popf
dec
mov
push
cli
(bad)
js
lods
les
test
mov
sub
cld
into
pushf
mov
mov
pop
xor
pop
stos
es
dec
fdivr
aaa
aaa
fimul
xchg
test
cli
xor
retf
sbb
inc
jnp
cmp
ficom
dec
repz
push
fld
mov
mov
cmp
cmps
in
pop
mov
data16
or
adc
sbb
lds
pushf
push
push
ins
je
arpl
pop
xor
(bad)
call
xchg
sub
jnp
mov
jle
sub
ins
lahf
outs
push
push
sub
and
retf
jp
cwde
xor
xchg
mov
(bad)
ss
loop
push
cwde
push
int3
jnp
jp
call
sub
xor
mov
sub
inc
sbb
aas
je
jmp
arpl
out
out
jb
and
jle
retf
mov
push
lock
xchg
cmc
xchg
dec
rol
adc
cmc
leave
nop
lahf
mov
pop
push
fwait
inc
icebp
xchg
aad
cmp
ds
add
js
inc
sbb
int
jnp
adc
jge
cld
xadd
inc
dec
ss
mov
ds
fadd
out
mov
push
retf
shl
dec
retf
ins
dec
sub
jbe
dec
or
jmp
fild
neg
inc
pop
sbb
pop
and
sub
sbb
retf
inc
int
fdivr
pop
aad
lods
movs
add
das
dec
inc
arpl
fbld
fadd
dec
mov
push
pop
test
inc
ret
pop
nop
push
dec
popf
mov
jno
push
push
pop
ror
(bad)
daa
sbb
sbb
and
shl
adc
push
rcl
cmp
fsubr
inc
inc
icebp
pop
inc
pushf
shl
inc
xchg
push
cli
jmp
jecxz
fwait
add
test
push
mov
ins
jle
lods
cmp
adc
lea
test
add
pop
or
(bad)
sar
jl
pop
pop
mov
data16
cmps
xchg
punpckhbw
mov
cmp
sti
gs
pop
jge
in
dec
and
jmp
cld
out
js
push
pop
ja
and
addr16
or
sub
mov
nop
mov
mov
jbe
cmps
mov
pop
mov
sub
push
in
push
xchg
jge
pop
std
call
imul
mov
inc
movs
sbb
jmp
sbb
(bad)
lock
je
out
and
scas
pop
sub
ret
stos
xchg
push
xchg
sub
and
adc
fst
into
jl
loope
ja
clc
mov
test
xchg
mov
nop
mov
out
fistp
out
fadd
std
sub
ins
xchg
aad
iret
cld
sub
pop
int3
aas
mov
jo
cwde
js
adc
mov
push
adc
dec
dec
sbb
pop
jmp
jno
sub
dec
adc
mov
out
aaa
xchg
and
cmp
dec
(bad)
fs
popa
sti
sub
sar
out
loope
aas
xchg
nop
push
mov
sub
scas
inc
push
inc
fidiv
dec
in
xor
mov
out
lahf
icebp
pushf
movs
xchg
adc
dec
xor
adc
dec
mov
cmps
push
mov
aaa
lods
(bad)
jecxz
adc
xchg
dec
aad
xor
dec
jge
xchg
jmp
jge
pop
call
and
loopne
jnp
jns
xlat
cmps
out
lock
and
(bad)
fld
dec
gs
sub
out
scas
ins
push
mov
stos
add
(bad)
cdq
in
jl
jnp
iret
mov
aas
ror
cwde
xchg
push
in
daa
jmp
cmp
rcl
shl
dec
xor
cmp
and
scas
jo
rcr
mov
mov
mov
cmp
stc
int3
mov
fisub
sub
push
mov
push
cmp
clc
or
adc
push
adc
fidiv
xchg
call
cdq
cld
imul
loopne
xchg
pusha
das
fwait
ds
xchg
outs
shl
movs
jns
aam
stos
outs
fwait
cmp
cdq
jns
jne
cld
xor
gs
sub
fist
mov
cmp
loope
push
xchg
jmp
loop
mov
adc
inc
jle
mov
push
inc
sbb
int3
and
cmc
pop
inc
gs
es
bound
in
and
fnsave
lods
(bad)
or
loopne
jb
mov
(bad)
mov
mov
rol
ins
mov
xchg
pop
(bad)
clc
gs
pusha
dec
jmp
sar
stos
jge
iret
push
cmp
repnz
or
fimul
pushf
cmps
or
or
pop
into
hlt
mov
iret
sbb
mov
in
cmp
or
sbb
pop
retf
(bad)
gs
fwait
and
cmp
aas
sub
push
xor
out
pop
or
fxch
das
adc
jle
dec
lock
call
dec
add
ss
loope
mov
mov
mov
add
(bad)
sbb
out
push
imul
out
jecxz
xchg
test
jbe
add
es
cmp
pop
pop
outs
jae
scas
push
scas
retf
dec
dec
js
lahf
xchg
(bad)
shl
in
enter
mov
(bad)
and
push
xlat
and
popf
or
jmp
jmp
adc
mov
sub
fwait
adc
je
fstp
popf
jl
mov
(bad)
call
sbb
xor
rol
and
adc
jl
mov
out
dec
int3
push
mov
jl
push
sahf
aam
(bad)
icebp
mov
mov
sub
jae
ret
cld
cli
push
sti
push
pop
jb
dec
loopne
dec
mov
jecxz
push
enter
hlt
fdivr
fmul
ds
and
xor
retf
xor
nop
mov
rcr
mov
rcr
sahf
pop
enter
xchg
fnstcw
xor
dec
icebp
in
pop
out
mov
pop
add
pop
or
mov
into
jns
imul
xchg
xchg
loopne
mov
cmp
scas
das
imul
stos
and
sub
aaa
enter
into
sbb
pop
rcl
cmp
jge
in
xchg
iret
or
inc
mov
mov
cmp
test
push
scas
aam
mov
dec
test
mov
and
or
in
fs
aas
xor
mov
add
cmp
lock
push
jg
rcl
or
cmps
(bad)
mov
fdiv
bound
jno
inc
sub
mov
xor
psrld
xor
pop
cwde
enter
xchg
ret
dec
add
into
push
dec
out
and
and
mul
xchg
movs
cmp
xor
jnp
and
loope
add
ins
pop
aam
lock
and
(bad)
or
jo
xor
dec
sti
mov
outs
pop
xchg
es
jns
pusha
scas
popf
aad
push
add
fst
mov
xor
or
loope
jp
xchg
add
call
(bad)
in
mov
mov
mov
popa
test
leave
test
repz
xlat
cmps
mov
mov
or
mov
push
or
adc
xchg
into
dec
cmc
jp
fistp
push
xlat
sub
shr
xor
inc
outs
mov
lea
jmp
test
daa
mov
rol
cmp
add
xor
pop
push
sbb
lahf
adc
mov
outs
mov
adc
or
les
inc
mov
dec
sti
in
sar
jns
and
pop
shr
push
in
dec
dec
repz
sub
mov
je
test
movs
lds
or
add
loope
jl
adc
adc
or
dec
mov
test
(bad)
es
xchg
(bad)
arpl
aas
cmp
pop
jg
xor
dec
aad
(bad)
daa
add
cmps
inc
jae
fimul
(bad)
mov
mov
add
inc
mov
call
stc
pop
dec
bound
ins
call
pop
xchg
int3
iret
(bad)
ret
pop
ror
imul
adc
test
fcom
jmp
adc
pusha
push
mov
aad
or
lahf
xor
(bad)
sti
out
xchg
adc
jge
xor
movs
rol
out
(bad)
repz
test
fcom
sbb
or
rcr
sub
ret
xor
imul
popa
stc
out
cdq
dec
(bad)
aad
in
push
lahf
xor
dec
fsubp
mov
fwait
jmp
popa
mov
cmp
adc
push
adc
jmp
leave
rcr
je
fistp
cld
daa
jmp
xchg
aad
mov
mov
jge
xchg
push
mov
rcr
fist
cmp
into
mov
jle
add
or
pop
add
retf
sbb
das
cwde
(bad)
ret
ror
aad
ret
retf
neg
jmp
ror
bound
mov
pop
rcl
push
add
adc
push
mov
sbb
cld
daa
out
or
mov
sub
inc
shl
lock
cmc
es
in
imul
call
and
pop
pop
jle
xchg
es
or
mov
jg
test
jb
retf
fadd
popf
cmp
in
ret
enter
test
aaa
int
fsubrp
push
std
jecxz
ret
jb
mov
pop
(bad)
cmc
cmp
xlat
sbb
push
test
jg
pushf
rcr
in
pxor
fld
lods
aaa
adc
arpl
cmp
int3
pusha
pop
inc
repnz
cdq
mov
in
xchg
xchg
popf
mov
add
fucomi
cmp
daa
fcmovu
sub
retf
dec
iret
inc
and
sahf
mov
retf
stos
pop
mov
jne
jle
add
gs
shl
mov
or
fimul
or
xor
outs
jae
xchg
aam
addr16
adc
or
outs
rol
dec
retf
push
cmp
stos
fdivr
cwde
mov
mov
xchg
mov
shr
inc
jb
fwait
xchg
leave
mov
xchg
scas
loope
xchg
repz
push
push
lahf
add
int
sub
mov
sub
je
imul
retf
cli
pcmpeqb
cmp
retf
fld
nop
lahf
add
int
adc
inc
sbb
or
push
in
xor
lock
xor
pop
add
mov
rcr
js
fwait
push
xchg
pop
repnz
xchg
xor
in
iret
push
inc
lahf
in
sub
fisub
pop
or
jl
iret
cmp
fwait
mov
push
xor
fistp
addr16
push
dec
aaa
push
sbb
dec
sub
push
fyl2xp1
sbb
pop
pop
imul
cmc
dec
push
sbb
mov
cs
adc
(bad)
out
sbb
push
out
mov
mov
or
inc
in
mov
and
leave
mov
lods
lahf
ror
add
rcr
stos
repnz
jmp
mov
call
sti
xor
and
imul
pop
dec
int3
call
lods
in
sub
jle
and
ins
and
int
xor
inc
lock
xchg
call
mov
ins
sbb
(bad)
into
xchg
popf
fistp
pop
cld
aas
adc
dec
xchg
out
xor
(bad)
mov
xor
scas
add
pop
jmp
inc
pop
mov
inc
in
xor
or
or
(bad)
mov
sub
ins
in
rcl
inc
rcr
mov
pop
jg
fs
das
xor
aam
xchg
jle
movs
cmp
mov
inc
mov
movs
test
dec
std
mov
jge
mov
out
(bad)
in
push
sbb
int3
iret
stc
inc
jne
cmps
retf
mov
mov
pushf
out
cmp
enter
pop
mov
mov
jmp
shl
fwait
inc
jmp
and
and
dec
jp
dec
repz
adc
add
mov
daa
cmps
(bad)
pop
sub
push
daa
enter
cmp
mov
test
mov
out
not
and
hlt
mov
push
inc
xor
sbb
mov
inc
xchg
mov
ficom
xchg
shl
pop
mov
jle
fcom
or
scas
mov
shl
into
ds
out
pusha
adc
sbb
retf
lahf
fcomp
cwde
test
in
cwde
push
and
dec
xchg
sbb
mov
cmp
inc
jo
outs
pop
iret
aaa
cmp
in
sub
mov
imul
call
dec
jmp
mov
and
loope
dec
or
ds
cwde
inc
cmps
std
loop
pop
(bad)
bound
or
push
test
into
jae
movs
aaa
outs
stos
mov
jle
int3
jne
into
push
cmp
jmp
or
adc
mov
xchg
test
push
mov
jne
out
inc
xchg
outs
call
push
push
hlt
inc
adc
loopne
pop
repz
in
(bad)
jp
fwait
or
dec
jmp
xchg
lods
lds
pop
push
xor
fistp
add
aas
popa
pop
xchg
outs
mov
test
sbb
retf
icebp
cmc
loope
in
sbb
rol
mov
out
in
xchg
popa
sbb
adc
movs
or
mov
xchg
sub
mov
sub
pop
add
and
addr16
mov
fst
in
or
fstp
or
add
inc
aaa
icebp
xchg
rcr
sbb
(bad)
mov
dec
inc
div
xor
stos
shl
and
xor
add
cmc
fnstsw
cmp
(bad)
movs
pop
out
dec
add
pop
or
cmp
ret
cli
add
js
xchg
int
nop
fist
pop
push
aaa
fisttp
jnp
xchg
inc
push
outs
shl
jne
mov
jmp
xor
aad
inc
add
(bad)
push
pop
jmp
cmp
fcom
push
jp
clc
and
lahf
cmp
inc
jmp
dec
mov
add
std
mov
gs
iret
jb
sbb
scas
shl
in
push
mov
pop
sbb
mov
pop
push
xor
mov
ret
inc
xchg
fwait
mov
fs
xchg
movs
jmp
or
sub
mov
bound
inc
mov
cdq
retf
mov
in
mov
iret
add
or
mov
into
cli
(bad)
shl
jno
cmp
lds
scas
loope
sub
call
loop
(bad)
int
mov
jmp
and
shl
call
xor
mov
inc
ret
add
mov
shl
mov
cmps
ins
stos
mov
mov
out
cmp
outs
ror
mov
pop
push
mov
xor
fimul
into
and
test
inc
and
ds
dec
pop
jge
add
sbb
out
jg
mov
cmp
fsubr
mov
in
(bad)
(bad)
push
xchg
add
fwait
mov
push
fiadd
cmp
jbe
cwde
cdq
mov
push
ss
popf
mov
mov
xlat
je
(bad)
shl
pop
adc
scas
and
cld
pop
mov
inc
push
cld
dec
adc
das
pop
ss
xchg
mov
xchg
mov
or
push
jbe
movs
xor
or
xor
pop
or
sub
call
pop
mov
in
pop
es
xor
jnp
and
call
mov
sub
inc
sar
(bad)
jge
ret
mov
lahf
mov
fimul
jo
dec
not
mov
mov
test
and
mov
sbb
stos
and
in
and
cmp
cwde
cmp
dec
cmp
and
and
xchg
adc
nop
jl
cs
bound
(bad)
push
into
mov
daa
in
jg
(bad)
lea
das
mov
mov
mov
icebp
push
jp
movs
pusha
ja
movs
test
scas
mov
lds
adc
jle
add
jnp
lods
pusha
lahf
sub
scas
stos
xor
nop
cmp
daa
cmp
adc
pop
add
cld
repnz
dec
jno
mov
fs
sub
mov
mov
jne
cmp
lea
xchg
lods
movaps
pop
in
mov
lods
push
adc
and
jne
mov
pushf
cmp
add
mov
js
or
or
or
stos
or
dec
stos
sub
lock
imul
fld
jp
outs
mov
adc
jmp
cmp
nop
stos
sub
adc
test
mov
xor
lods
cmps
shl
imul
jns
fiadd
(bad)
xor
movs
rcr
inc
mov
iret
mov
jne
sub
test
dec
(bad)
or
xchg
mov
inc
xchg
in
scas
stos
push
adc
(bad)
push
(bad)
mov
imul
or
rol
cmp
test
std
jns
xor
and
fnstcw
and
and
xchg
fprem1
adc
fsub
adc
and
call
push
in
mov
sbb
sbb
inc
cld
mov
movlps
fdivr
jae
jle
rcr
add
xor
lea
pop
dec
and
push
jnp
cmp
ins
adc
test
int
mov
sbb
aas
xor
fwait
repnz
aaa
rcr
or
out
add
mov
sub
mov
mov
sub
lods
rol
sub
out
add
int3
fwait
mov
hlt
pusha
adc
aam
sbb
push
mov
sbb
jecxz
std
inc
lea
fdivr
jecxz
inc
cmp
stos
repz
outs
inc
push
dec
jecxz
add
retf
adc
rcr
mov
sbb
fwait
sbb
cmps
push
scas
push
dec
fidivr
sahf
icebp
enter
push
stos
dec
inc
inc
dec
jl
aad
cmc
aas
loopne
jnp
adc
loop
cdq
push
mov
js
(bad)
rcr
addr16
mov
push
outs
inc
retf
test
retf
scas
xchg
mov
sbb
sub
sbb
dec
call
mov
ret
xchg
shl
sar
call
lods
not
cmp
dec
imul
retf
push
push
fsub
xchg
mov
or
les
add
xor
xor
mov
dec
xor
sbb
inc
iret
imul
cwde
ja
jo
cmp
leave
or
mov
loopne
cmps
fnsave
lahf
mov
mov
sahf
dec
movs
loopne
jp
lea
lock
sub
scas
mov
and
push
sti
jbe
jle
clc
or
arpl
jne
jmp
(bad)
inc
aam
jo
push
mov
jb
and
jnp
pop
enter
xor
adc
les
add
ror
xchg
hlt
dec
scas
ins
mov
sub
add
jne
adc
ja
inc
in
xchg
mov
fdiv
rol
in
xchg
cmp
push
cli
and
enter
add
and
test
sbb
aam
stos
push
xchg
sbb
or
pusha
loop
push
ja
sbb
loop
adc
xchg
jge
push
addr16
xchg
inc
mov
xchg
xchg
sbb
data16
cs
xor
xor
cmp
fdivr
pusha
sti
xor
test
scas
fld
pop
sar
xchg
out
sub
cld
or
and
leave
or
push
test
jno
add
cmps
in
push
push
cld
jmp
xchg
or
pop
pop
out
popa
pop
mov
imul
mov
fldenv
xor
into
sub
adc
xchg
lods
mov
sub
shl
mov
(bad)
clc
(bad)
mov
cwde
inc
adc
pop
sar
pop
push
sbb
sbb
(bad)
out
dec
cmp
(bad)
mov
mov
out
push
sbb
(bad)
push
dec
dec
add
fisttp
mov
clc
mov
adc
or
(bad)
out
xchg
add
inc
jne
sbb
xor
cdq
leave
sbb
into
out
pop
xchg
cmps
int3
jmp
sbb
fild
out
push
stos
or
mov
popf
addr16
or
call
mov
je
xor
loope
ret
dec
outs
cmp
sbb
scas
movs
nop
pextrw
mov
out
jle
xor
ins
lock
sub
inc
dec
sbb
xor
test
aad
pop
pop
xor
adc
leave
std
test
mov
mov
call
and
loope
jge
imul
sti
pop
outs
jl
and
fld
sub
sub
xor
pusha
cmp
aas
add
pop
shl
dec
fdiv
jne
xor
les
mov
fidiv
add
ss
movs
or
ins
push
je
xlat
mov
or
mov
sar
jle
cmp
pop
mov
cmp
div
mov
add
jne
lea
push
fsub
xchg
popa
push
call
jnp
inc
xor
cmp
ret
test
jg
dec
lods
jle
shl
stos
dec
ds
pop
iret
jmp
fwait
lea
add
lea
sahf
fistp
je
push
aam
sbb
data16
inc
inc
(bad)
rcr
adc
cmp
mov
cmps
clc
xchg
push
xchg
in
push
xor
jl
adc
xchg
iret
pop
push
inc
jle
mov
sub
jb
dec
fild
or
pusha
(bad)
in
aaa
fsubr
dec
int3
push
loopne
movntq
dec
mov
jbe
sbb
xchg
outs
fimul
mov
inc
test
out
adc
jbe
ins
jl
pop
popa
mov
push
add
pop
imul
push
pop
imul
pusha
std
pop
mov
fs
xchg
mov
pop
pop
push
lock
pushf
lock
outs
ror
adc
ror
cmp
pop
add
shl
sahf
xchg
aaa
push
call
jb
jecxz
jg
popf
mov
xchg
cmp
js
cwde
cmp
ror
enter
adc
and
(bad)
in
test
push
jmp
fist
aad
add
in
add
(bad)
fdivr
daa
and
jns
dec
test
mov
jo
out
mov
out
popa
mov
dec
aam
sbb
loop
cmp
ficomp
loope
std
out
rdpmc
mov
sbb
pop
jae
sub
mov
and
mov
(bad)
push
dec
inc
jle
retf
pop
test
fstp
and
mov
push
pop
jnp
cmp
bound
xor
sub
mov
pop
out
jmp
cs
sub
pop
dec
xor
add
cmp
pop
iret
fs
dec
in
(bad)
mov
daa
jae
xchg
jmp
mov
add
cmp
mov
out
xchg
loopne
or
scas
pop
addr16
sub
xor
push
add
loopne
ja
push
push
xchg
inc
jg
and
push
add
cli
and
sar
ins
shr
in
xor
jne
inc
(bad)
sbb
push
cmc
jmp
pop
mov
sti
js
bound
jnp
xchg
sbb
push
lds
jo
loopne
retf
mov
inc
(bad)
ret
xchg
push
out
not
dec
inc
sub
pop
xchg
add
(bad)
lods
sub
jp
js
adc
stos
ins
mov
mov
mov
movs
pop
out
mov
inc
pop
sahf
sbb
das
pop
ja
retf
pop
xchg
mov
fxch
lahf
shl
or
ret
xchg
sbb
sbb
jecxz
xchg
stos
cmp
gs
gs
mov
add
lods
es
dec
jp
xor
enter
push
xchg
jno
xchg
xor
sete
arpl
fwait
ret
(bad)
mov
xor
add
xchg
std
nop
jle
in
add
(bad)
adc
popa
retf
mov
ret
jmp
pop
in
jg
es
push
dec
and
aas
or
pop
push
xor
jns
sbb
into
leave
jecxz
enter
or
movs
int
in
test
add
aad
inc
mov
imul
mov
xor
xchg
rol
push
out
sbb
pop
xchg
xchg
mov
and
sbb
sub
ficomp
hlt
push
aam
jmp
jg
out
ins
pop
pop
fsub
fidiv
stos
lahf
leave
stos
scas
pop
je
add
mov
mov
jb
pop
inc
lock
in
aaa
mov
ror
inc
or
das
mov
(bad)
gs
and
addr16
add
int3
into
int3
out
mov
(bad)
pop
inc
sub
js
or
add
mov
push
cmps
dec
dec
clc
push
dec
das
inc
(bad)
jbe
sbb
pop
cdq
cmps
jb
cmp
scas
stos
mov
in
cmps
jge
ret
fsub
sar
(bad)
pop
call
ja
pop
(bad)
push
fistp
fchs
mov
mov
cld
mov
xor
cmp
lds
cmp
push
dec
add
cmp
or
aad
das
fdivr
add
sub
mov
stos
cs
clc
add
xchg
pushf
lods
cmp
pop
xchg
(bad)
or
in
popa
xchg
fdivr
adc
nop
add
aas
popf
adc
gs
(bad)
mov
fisubr
cmp
push
es
sub
sbb
mov
mov
jnp
adc
fsubr
aas
adc
push
nop
mov
jle
gs
mov
add
inc
push
shl
jno
daa
dec
xchg
adc
das
xchg
push
inc
loopne
ret
inc
jp
inc
jmp
mov
test
stc
or
das
cmp
jns
sbb
and
fisttp
adc
xchg
fisub
push
push
loopne
pop
or
push
sbb
data16
ror
sbb
ret
jmp
inc
sub
stos
push
ja
push
loope
push
or
cmp
add
imul
push
jl
and
jno
imul
mov
xchg
mov
bound
sar
or
cmp
mov
fnsave
cmp
or
movs
jae
cld
(bad)
outs
call
inc
xor
cmp
pop
daa
outs
out
push
mov
sub
cmps
pop
mov
(bad)
ins
fsub
and
mov
push
jae
push
pop
xchg
inc
and
mov
mov
and
lahf
cdq
retf
xor
mov
or
mov
sub
test
sbb
mov
adc
aad
shl
in
icebp
retf
mov
repz
xchg
mov
mov
inc
dec
pop
outs
xchg
in
xor
jns
adc
or
into
lahf
xchg
fist
cmp
pop
aad
mov
jp
in
mov
test
push
cdq
out
(bad)
aaa
push
xchg
in
call
in
(bad)
mov
jae
retf
lock
rdtsc
add
and
into
aaa
mov
leave
int3
mov
sbb
cmps
mov
xor
adc
push
(bad)
or
pop
adc
push
dec
and
out
push
imul
(bad)
loope
and
cmp
(bad)
cmp
pop
jl
jge
xchg
ins
fiadd
jnp
pop
loopne
js
and
movs
sbb
outs
jb
scas
add
mov
cdq
nop
and
xor
lods
addr16
adc
xor
int
add
cmp
sub
imul
sub
xchg
in
lahf
inc
scas
xchg
add
push
dec
mov
mov
inc
into
jb
add
pop
or
dec
push
jl
push
inc
lock
into
jae
gs
mov
add
leave
das
adc
fisubr
add
push
loope
jmp
cs
shl
pop
in
jg
add
jmp
mov
mov
pop
pop
push
dec
fistp
inc
rcl
(bad)
push
add
mov
inc
mov
mov
arpl
jo
jmp
stc
inc
in
int3
or
ret
aaa
inc
lea
xor
pop
adc
inc
sub
shr
ficomp
mov
cmp
cmp
fs
mov
popf
inc
mov
aam
out
push
xor
xchg
ins
ret
aam
mov
adc
cmps
mov
cdq
mov
jbe
leave
outs
and
mov
out
xor
pop
sub
cmp
test
shl
in
pop
movs
adc
add
out
je
jnp
call
sbb
mov
ror
fmulp
into
fnsave
sar
jmp
mov
and
(bad)
and
fimul
inc
jne
call
(bad)
test
jae
(bad)
sub
outs
xchg
addr16
fisub
pop
adc
cmp
xchg
sbb
out
scas
sub
arpl
enter
(bad)
cmp
add
test
je
ss
rol
movs
sbb
or
push
stos
jg
dec
and
cmp
xor
sbb
xchg
retf
sbb
call
add
push
or
leave
cmps
pop
inc
jbe
neg
mov
dec
jns
jns
test
aaa
mov
and
pop
scas
push
or
ins
(bad)
rcr
dec
dec
mov
imul
mov
xchg
xor
sub
xchg
ins
jmp
loope
mov
pop
call
std
jb
mov
lods
xor
mov
mov
push
jbe
push
adc
jp
xor
inc
shl
shl
mov
dec
and
xchg
dec
push
ja
sbb
mov
jbe
push
sbb
pop
pop
cmc
and
pop
addr16
(bad)
aam
retf
push
mov
stc
inc
cld
aas
inc
dec
hlt
stc
lahf
mov
cmps
fisub
outs
push
inc
shr
jge
es
sar
shl
aad
data16
test
inc
fdiv
clc
cmps
and
fimul
and
push
xchg
stos
adc
pop
mov
adc
lds
test
push
inc
cmps
cmp
bound
cmps
pop
or
int
dec
xchg
outs
shl
cwde
pop
out
jo
aam
iret
mov
and
adc
or
pop
pop
and
outs
jg
mov
adc
gs
cli
jb
push
cmp
ror
sbb
cs
jae
sbb
jle
ret
mov
pop
cmps
mov
sbb
pusha
add
jns
and
mov
test
ficomp
cmps
mov
push
push
mov
fcomp
cmc
add
xor
and
or
mov
lea
imul
sbb
adc
icebp
pop
xor
movs
mov
mov
lods
mov
bound
mov
pop
adc
clc
(bad)
arpl
sub
adc
aaa
(bad)
je
cwde
outs
mov
jmp
ja
xor
mov
xlat
jb
pop
mov
pop
outs
out
repz
jne
mov
lock
sub
mov
test
push
gs
or
in
add
mov
and
sar
sub
mov
pop
ins
rol
retf
clc
stos
adc
jge
adc
jmp
popf
movs
cmp
jnp
inc
out
pop
int3
lds
data16
dec
push
je
call
js
outs
rcl
push
idiv
xor
lods
mov
ret
cmp
inc
ret
into
push
shr
stos
jecxz
sbb
fadd
mov
daa
sub
xor
scas
push
mov
in
mov
pusha
(bad)
adc
sti
dec
popa
rcr
call
call
mov
dec
and
imul
sub
push
push
sbb
imul
sbb
ins
clc
(bad)
frstor
mov
imul
repnz
ins
mov
leave
or
push
into
and
ficom
(bad)
dec
test
clc
jbe
push
pop
leave
hlt
dec
lods
mov
cmps
lds
xchg
inc
pop
lods
dec
mov
dec
sti
add
movs
fstp
xor
mov
dec
mov
aas
mov
cmp
pop
movs
cmps
scas
out
add
retf
dec
in
sahf
pop
scas
bound
dec
pop
xor
(bad)
cmp
iret
test
push
push
add
clc
adc
sbb
das
pop
jmp
outs
cmp
xlat
xchg
xchg
push
inc
clc
loop
es
cmps
scas
sub
nop
sbb
sbb
pop
xchg
inc
and
retf
fsub
xor
and
mov
cmp
add
ss
and
inc
nop
push
int
mov
xchg
sub
gs
jbe
cdq
ss
pop
call
jns
mov
dec
inc
cmp
and
mov
lahf
jmp
push
imul
jge
mov
aam
push
xchg
xor
lock
fs
jmp
dec
sbb
and
pop
push
fnsave
mov
or
mov
mov
nop
dec
fistp
inc
add
xchg
dec
cli
call
sbb
add
pop
shl
add
pushf
xchg
mov
inc
push
scas
mov
xchg
push
ds
adc
jmp
pop
in
imul
mov
mov
ret
jnp
cmps
ret
and
cmps
call
cmp
push
cli
lahf
test
bound
fistp
leave
push
or
sbb
xchg
icebp
pop
cwde
pop
and
dec
pop
mov
aaa
sbb
push
jmp
lds
mov
mov
add
mov
ja
or
(bad)
je
(bad)
fwait
cmp
dec
out
aam
movs
push
cmc
lds
loop
aaa
fabs
mov
push
pop
in
ss
into
ins
adc
lods
inc
aaa
inc
pop
repz
mov
sbb
pop
std
cwde
hlt
ror
test
pop
mov
jo
std
adc
jmp
call
cmp
push
mov
xchg
add
jbe
cmp
fwait
mov
push
stc
dec
mov
fwait
push
jmp
les
mov
fmul
jl
pusha
xor
mov
rcr
popf
lds
adc
cmp
adc
les
sbb
int3
daa
pop
gs
cmp
dec
jne
fadd
inc
mov
or
(bad)
jmp
or
mov
xor
push
mov
bound
cmp
test
dec
jae
push
ret
jne
cmp
popa
sub
pop
mov
outs
(bad)
push
sub
sub
and
shr
push
and
cmp
ret
out
cmp
sar
dec
pop
ins
mov
xchg
jmp
pop
pop
(bad)
dec
jmp
inc
test
(bad)
push
mov
imul
(bad)
xor
sub
arpl
repnz
xor
je
fstp
sahf
ins
stos
mov
test
shr
add
mov
call
xor
hlt
xor
aam
add
push
retf
cli
inc
or
mov
fsubr
dec
sahf
test
xor
in
ret
(bad)
loop
lahf
xor
inc
cmps
xchg
mov
mov
shl
(bad)
call
adc
jno
adc
popa
jmp
pop
add
(bad)
aaa
out
js
pushf
push
dec
cdq
inc
retf
(bad)
jmp
cmc
out
test
mov
jmp
jno
(bad)
loope
xchg
cmp
or
or
rol
retf
inc
loop
xchg
push
jo
clc
mov
and
inc
cmp
sbb
cwde
test
into
rcl
test
movs
bswap
xchg
pop
dec
stos
jle
repz
xor
ret
push
js
inc
call
cmp
retf
xchg
xchg
xchg
xor
sahf
pop
stos
or
shr
mov
cmp
test
nop
stos
xchg
clc
fstp
(bad)
mov
movs
xlat
lahf
shr
xchg
or
xor
int3
pop
cmps
mov
jge
outs
inc
ins
lock
sbb
movs
push
mov
fild
fwait
mov
call
mov
mov
mov
daa
push
in
rcr
lock
mov
cmp
in
in
inc
lods
adc
and
(bad)
cli
cmp
sub
lods
rol
and
cmp
movs
xchg
or
clc
dec
or
movs
mov
fsub
stos
push
icebp
call
dec
ins
mov
mov
sub
call
int
inc
jge
fidivr
out
mov
mov
jg
mov
push
pop
loopne
jle
sub
loope
sub
je
into
mov
nop
push
mov
add
int
and
in
mov
mov
pushf
xor
dec
push
mov
dec
inc
push
add
jae
sahf
push
jae
outs
cld
shl
add
sub
ret
int
ds
lods
and
xchg
aaa
xchg
push
pop
lds
and
dec
and
mov
mov
lea
ret
xor
push
xchg
pop
xchg
push
add
inc
mov
or
cmp
mov
cmp
out
fs
cld
xor
push
jmp
int
xlat
mov
les
inc
xchg
int3
inc
pop
mov
add
aam
jns
aaa
push
push
mov
(bad)
enter
jl
pop
mov
and
lock
add
(bad)
jns
jge
cmc
mov
jnp
push
jg
out
movs
fild
mov
sbb
mov
mov
pop
dec
jne
push
retf
lods
jne
repnz
(bad)
jmp
cmc
and
jae
xor
jecxz
xchg
je
pushf
jno
cmp
jmp
mov
mov
out
ins
data16
or
call
cmp
push
icebp
fsub
jne
daa
and
daa
cmps
fsub
arpl
clc
jmp
push
into
icebp
inc
les
sub
pop
sbb
push
test
loopne
xchg
fwait
daa
dec
test
in
add
stos
pop
shl
push
in
shl
out
sbb
scas
shl
push
sub
fsubr
jo
add
pop
xor
retf
aas
dec
sub
push
mov
mov
dec
mov
or
dec
sub
cmps
xor
cld
nop
aas
jns
push
and
inc
repnz
loope
fdivr
adc
xor
pop
xchg
push
jne
dec
fs
ror
xor
es
dec
jb
ret
sub
call
mov
dec
and
sub
and
sub
hlt
cmp
ins
xchg
push
push
jge
pop
(bad)
ins
outs
rcr
push
xlat
rcr
test
sub
inc
sub
icebp
dec
aaa
sbb
dec
scas
mov
dec
popf
cmps
in
push
push
(bad)
jge
inc
jle
mov
and
jl
jne
mov
lea
jle
mov
pop
nop
std
inc
jbe
or
sbb
sub
jo
add
inc
mov
push
mov
jo
cwde
mov
daa
sbb
and
and
test
imul
push
fdiv
xchg
sbb
push
repnz
jno
cs
rcr
jo
mov
cmp
add
jl
hlt
push
inc
ins
pop
popf
push
clc
imul
ss
jae
mov
jp
outs
pop
mov
ins
outs
or
jo
mov
dec
jge
xor
jnp
push
scas
ds
fcmovnu
xor
mov
(bad)
mov
pop
adc
pop
xchg
push
mov
mov
stos
push
sub
popa
cmps
push
in
mov
jp
sti
test
outs
pop
fisttp
jge
pop
cmp
lds
inc
xor
mov
pusha
das
and
das
test
jo
into
jge
daa
es
daa
mov
inc
xor
bound
add
add
push
push
stc
or
push
xchg
push
pop
(bad)
scas
mov
jb
add
hlt
xchg
out
ja
push
aas
pop
repz
mov
mov
aam
in
pop
mov
cmp
loope
iret
test
aaa
imul
lods
sbb
sub
leave
mov
push
cli
cmps
sub
add
add
mov
sub
fistp
aad
or
dec
push
jecxz
into
ss
ds
movs
mov
cmp
jo
int
retf
cdq
(bad)
or
stos
mov
stc
sbb
adc
pop
jns
jmp
mov
scas
inc
xchg
sbb
pop
and
js
mov
ret
mov
add
fist
mov
fnstsw
jb
pop
(bad)
jl
mov
xchg
leave
fbstp
ins
bound
jo
cmp
gs
es
dec
sbb
push
and
lods
or
mov
pop
loop
adc
push
(bad)
jmp
cmp
pop
and
xchg
sbb
push
sub
add
rol
loop
clc
xchg
sbb
call
xor
cmp
push
mov
in
out
jne
pop
loop
retf
out
push
mov
imul
pop
call
adc
mov
scas
lods
fnstenv
fs
clc
mov
jne
xor
ins
popa
call
setle
jle
fwait
test
mov
cld
cmp
mul
push
inc
sbb
nop
jl
pop
sar
adc
pushf
cmp
outs
or
fmulp
outs
adc
mov
mov
xchg
sbb
add
fisubr
push
pop
cmps
mov
repz
jmp
add
test
sub
or
xchg
adc
or
pop
loopne
jae
in
or
add
call
arpl
sub
cli
call
cs
imul
mov
cmps
call
push
push
pop
fsincos
data16
mov
or
mov
pop
lea
xor
mov
aam
bound
lahf
pop
cmps
bound
je
fldenv
lahf
(bad)
test
lahf
jp
cmp
pop
and
dec
pop
dec
cmp
xchg
aam
sub
jnp
ret
les
dec
(bad)
sbb
scas
outs
(bad)
sub
xchg
and
cmp
and
fldcw
sbb
pop
sbb
movs
or
rcl
std
loop
outs
aad
test
push
push
fst
pusha
mov
xlat
jnp
daa
stc
out
mov
das
data16
pop
cwde
das
movs
pop
cmps
push
imul
dec
add
xor
add
outs
(bad)
cmc
(bad)
pop
add
push
fistp
sub
pushf
cmp
test
inc
gs
jb
mov
pop
out
inc
aad
xchg
adc
xor
inc
out
(bad)
ror
mov
iret
adc
push
dec
sbb
or
push
or
cmp
sbb
ror
icebp
imul
dec
mul
mov
sbb
popf
out
pusha
aam
mov
push
imul
ins
mov
jecxz
sbb
rol
sbb
fidiv
mov
movs
jmp
push
fbstp
cmp
cmc
push
mov
xchg
jl
stos
jnp
or
dec
push
in
loopne
sbb
in
and
sar
fimul
mov
repz
fistp
sub
arpl
jno
fistp
ficom
push
les
aad
cs
pop
mov
xlat
cmp
aam
mov
int
sub
fcom
sbb
jge
out
idiv
data16
or
loop
pop
int
cmp
or
mov
pop
ror
jbe
out
jmp
cli
cmps
xchg
lods
movs
or
mov
mov
(bad)
lock
cs
sbb
push
or
pop
xor
xchg
dec
adc
or
mov
mov
cli
mov
inc
hlt
rsqrtps
mov
mov
aaa
sti
add
pop
call
call
movs
jb
xchg
mov
push
(bad)
push
or
icebp
pop
adc
in
add
push
sub
jae
push
rcl
int
adc
sub
(bad)
das
mov
(bad)
hlt
push
into
jp
xchg
mov
push
mov
push
pop
lods
cmp
ss
cld
jne
inc
sub
sub
push
pop
test
xchg
mov
cmp
sub
dec
cmps
or
mov
scas
(bad)
mov
or
int
sub
clc
leave
gs
pop
pop
(bad)
lds
inc
sbb
adc
and
jno
int3
ficomp
fs
mov
or
scas
cmp
sub
xor
add
fsub
rol
jbe
ss
outs
add
xor
xor
push
mov
cld
in
enter
pop
fsub
xchg
ficom
fisttp
lock
adc
loopne
sbb
jmp
jae
mov
mov
les
sbb
jecxz
in
cmps
retf
(bad)
hlt
dec
xor
push
lock
jp
xchg
push
adc
retf
pop
cwde
sbb
inc
aam
inc
pop
std
(bad)
movs
(bad)
push
jb
xchg
pushf
test
or
mov
and
adc
xchg
js
inc
cmp
cmps
jp
xor
movs
adc
and
mov
dec
inc
sub
mov
and
jl
clc
fiadd
inc
in
xchg
retf
out
ficomp
cmps
cmp
fisttp
in
jecxz
or
in
mov
outs
pop
adc
jae
out
jno
xchg
cmp
mov
popf
or
repz
aas
cmps
cmc
fimul
gs
xor
movs
mov
shr
nop
jbe
adc
shl
jecxz
pop
fchs
xor
cli
pop
je
stos
pop
ins
sub
dec
fistp
inc
sub
mov
int3
and
lahf
sbb
cld
pmulhuw
mov
sahf
hlt
mov
mov
or
enter
repnz
mov
out
mov
pop
cdq
out
dec
js
test
ds
fisubr
stc
outs
stos
jge
dec
sbb
shl
data16
js
inc
jg
cld
push
mov
or
adc
jmp
sbb
cld
jbe
leave
or
mov
inc
pop
fld
clc
inc
mov
test
xchg
sub
xor
das
mov
pop
sar
cmp
sub
push
retf
add
xchg
fistp
int
addr16
ins
sbb
jnp
push
cdq
sbb
dec
test
cs
and
xchg
or
adc
push
idiv
lds
add
sub
jmp
pop
in
dec
out
jmp
mov
inc
push
es
mov
jb
pop
xchg
add
ret
cmp
je
and
pop
or
das
ror
adc
pushf
fist
dec
adc
lahf
ret
mov
(bad)
jmp
push
jae
push
or
mov
mov
xchg
inc
and
rol
into
in
adc
faddp
inc
cmps
cmp
cmps
shl
into
push
ins
not
lds
push
adc
mov
ss
ds
iret
dec
nop
pop
ins
cmp
imul
pop
in
nop
ror
jb
loope
jl
sbb
ins
dec
movs
popa
push
les
sahf
ins
fs
scas
xor
inc
push
retf
retf
ss
fcomp
cld
pop
jnp
mov
sbb
adc
jge
pop
pop
pop
sub
cmp
call
jp
lods
push
dec
clc
pop
mov
push
inc
test
push
sub
or
xchg
xchg
jp
cli
fadd
mov
in
lock
bound
pop
sub
jle
ret
mov
sbb
pop
in
adc
pushf
push
stos
jne
sbb
add
sbb
stc
in
adc
cs
pop
inc
pushf
jmp
xchg
test
int3
fwait
push
pop
retf
cmps
sti
stos
sub
push
pop
and
xchg
xor
mov
push
xchg
jns
test
xor
retf
xor
and
and
push
add
jp
(bad)
xchg
mov
xor
adc
mov
add
enter
push
retf
pop
xor
(bad)
out
outs
cmp
add
push
lahf
and
addr16
in
mov
and
push
xchg
stc
and
les
iret
sbb
and
dec
popa
pushf
dec
shl
push
and
mov
neg
add
or
jp
xchg
push
cmp
fs
inc
imul
popa
adc
rcr
call
cmps
shr
xchg
xchg
jl
push
inc
push
dec
mov
ds
test
(bad)
sbb
jle
push
(bad)
out
adc
pop
xlat
fsub
(bad)
in
sbb
jmp
ja
mov
mov
xchg
clc
dec
and
mov
xchg
mov
fs
mov
pop
mov
psllq
movs
loopne
lods
ror
sbb
stc
ins
xchg
ficom
dec
stos
leave
mov
out
push
mov
dec
iret
ja
and
jbe
fisubr
xchg
add
xor
jno
adc
icebp
pushf
fimul
in
movs
jmp
sub
adc
sti
(bad)
icebp
cdq
in
faddp
pop
mov
push
bound
popf
sbb
int
and
fsubr
ds
les
out
out
popf
out
sub
or
jp
pop
jecxz
fs
pop
cmp
sbb
cmp
lods
or
sub
sub
xor
mov
outs
push
scas
mov
add
add
cdq
add
sub
fld
dec
jbe
or
fs
and
jl
lds
xchg
pop
mov
into
outs
fnstcw
cmp
cwde
add
inc
cs
sub
lods
fcom
neg
dec
and
or
ins
push
push
adc
mov
pop
data16
jl
pop
or
sti
jnp
rcl
and
mov
or
ror
cmp
mul
xchg
loope
push
sub
bound
jnp
cdq
xlat
mov
dec
xchg
cmps
das
je
movs
into
fcom
fldenv
ds
cli
pushf
int3
pop
clc
cwde
or
rol
xchg
icebp
push
pop
je
cmp
mov
retf
not
(bad)
sti
stos
inc
outs
stc
out
jl
mov
retf
popa
test
(bad)
dec
imul
ror
into
scas
xor
jns
daa
jns
and
mov
and
pop
pop
mov
movs
pop
mov
hlt
xor
jb
imul
popf
cmps
xor
pop
into
out
ret
mov
movs
dec
sub
xor
test
int
xor
in
xchg
cmps
pop
or
dec
mov
pop
repnz
mov
test
mov
(bad)
mov
or
xor
in
adc
shl
cli
jne
mov
in
or
add
popf
cmp
mov
adc
imul
mov
sbb
pop
jl
cli
stos
es
pop
ss
xor
and
sub
mov
or
movs
add
or
popa
iret
stos
fs
pop
inc
lea
icebp
xchg
add
stos
sbb
mov
out
mov
cs
pop
ja
std
xchg
scas
mov
in
mov
nop
push
pop
sub
push
add
and
sub
(bad)
idiv
call
cmps
xor
xchg
idiv
je
or
mov
lods
mov
inc
sbb
jmp
xor
dec
enter
cmp
xor
shl
or
sti
sbb
sub
iret
pop
test
(bad)
cmps
popa
pop
or
ins
or
inc
shr
push
outs
mov
jnp
add
das
push
adc
es
mov
cmp
xor
dec
push
mov
out
cs
mov
stos
clc
ins
int
vpcmpeqb
add
jg
and
scas
test
cmp
hlt
or
ret
arpl
or
dec
cmps
add
aaa
jno
cmp
xor
push
std
shl
(bad)
pop
mov
push
dec
mov
jb
mov
es
mov
jle
ss
in
sbb
mov
and
es
jecxz
mov
or
pop
add
jns
xchg
jbe
xchg
pop
cwde
lods
xchg
adc
pushf
fldenv
lods
pop
aad
or
call
sub
jmp
pop
jmp
jbe
pushf
jno
scas
jbe
and
sub
jae
outs
mov
cmps
inc
dec
and
mov
iret
out
(bad)
push
rcl
xor
push
and
inc
test
push
pop
mov
mov
xchg
mov
mov
jmp
mov
xchg
jp
mov
ret
imul
cli
(bad)
fadd
xchg
pop
push
mov
sar
sbb
loop
outs
clc
add
repnz
xor
jge
mov
mov
retf
test
mov
and
cmp
(bad)
xchg
xchg
nop
ds
out
mov
jecxz
add
jmp
sub
inc
xchg
repnz
daa
inc
push
or
push
push
xchg
ret
jg
push
nop
push
shl
out
fwait
push
rol
mov
sub
leave
xor
bound
jge
out
jae
pop
stos
bndstx
in
inc
(bad)
dec
lea
call
dec
mov
inc
xchg
retf
dec
das
je
test
int3
enter
xchg
ror
push
loop
movs
adc
scas
push
daa
ret
rol
or
pop
mov
int3
push
jg
jo
jns
pop
aad
movs
ret
pop
jg
cmps
out
aam
cmp
pop
repnz
jo
cmp
xor
leave
or
loop
call
and
push
jecxz
jbe
arpl
jg
sbb
ins
jle
(bad)
and
adc
inc
aaa
push
mov
xchg
adc
ins
out
aam
mov
jae
dec
cli
xchg
jmp
push
cmp
dec
jecxz
jnp
call
mov
cld
sbb
push
aas
push
sbb
enter
mov
popa
jnp
ins
mov
cmp
mov
mov
and
jle
and
loopne
or
ffree
adc
test
xchg
add
mov
inc
in
ds
mov
push
(bad)
jae
mov
ja
dec
outs
inc
scas
(bad)
retf
inc
push
mov
and
out
sbb
stos
aas
pusha
pop
cmp
loopne
inc
aas
push
mov
idiv
mov
ret
push
pop
(bad)
sub
aam
mov
cmps
pop
push
shr
das
cmp
loop
nop
adc
idiv
test
adc
push
sbb
jmp
adc
and
ins
jge
add
mov
int3
xchg
push
iret
addr16
pop
adc
ins
retf
push
push
arpl
xchg
jl
adc
(bad)
dec
xor
inc
dec
neg
push
repz
jmp
mov
out
fiadd
das
mov
add
out
hlt
outs
and
arpl
(bad)
in
lods
push
int
mov
sub
stc
and
ret
adc
out
cld
mov
jne
stos
inc
std
cli
push
lods
pop
jo
leave
push
lahf
push
cld
ins
mov
mov
jno
sub
test
mov
xchg
push
outs
ss
mov
iret
add
or
mov
cmps
stos
inc
fld
enter
rol
(bad)
ds
lahf
dec
xor
out
cmp
je
adc
into
test
xchg
mov
cmp
jmp
inc
adc
jge
dec
cs
push
inc
mov
into
fst
xor
push
cmc
out
cs
or
std
or
ins
jl
mov
sar
(bad)
sti
nop
lods
push
or
imul
cmp
dec
ds
sub
and
mov
dec
imul
cmp
lods
dec
sub
stos
dec
inc
loope
das
test
cmp
xor
sub
jb
cmc
pop
stc
pop
xchg
hlt
pop
cmp
mov
std
rcr
mov
data16
repz
js
pop
ret
iret
xor
and
clc
nop
mov
xchg
jne
ds
push
pop
int
inc
pop
test
pop
movs
fisttp
ja
pop
xor
dec
cmovnp
mov
bound
pop
inc
aaa
lock
xor
xlat
and
mov
sbb
lea
mov
mov
pop
cdq
xor
loopne
mov
add
mov
aam
mov
data16
enter
push
inc
daa
fcomp
mov
adc
cs
cs
add
mov
fucomi
cs
je
dec
jbe
dec
jbe
packsswb
add
cmps
sbb
mov
jo
mov
pop
sbb
es
jmp
and
je
ret
in
pop
dec
and
mov
mov
xlat
mov
sbb
pusha
mov
jbe
outs
test
lods
dec
jmp
dec
mov
into
and
aam
xor
fnstcw
rcr
push
xchg
pop
stos
pop
and
mov
arpl
sbb
test
fld
gs
and
hlt
cmp
imul
cli
push
je
mov
cmps
aaa
xchg
call
mov
rcl
mov
pop
aas
jp
dec
cmp
jge
ret
jmp
jae
sbb
mov
push
add
ret
fdivr
push
enter
cmp
add
xchg
fld
fild
pop
add
cs
mov
xor
cmps
fldenv
arpl
sbb
test
fwait
ror
cmp
popf
int3
fisttp
inc
cmc
cdq
pop
cmp
and
fisub
repnz
retf
(bad)
hlt
(bad)
in
(bad)
ins
xchg
popa
sbb
push
add
repz
das
stos
pushf
fwait
test
push
mov
dec
push
stc
xor
adc
ja
inc
lock
out
sub
mov
xor
and
push
mov
dec
cdq
dec
aas
sub
jb
jne
xlat
xchg
in
enter
xor
add
mov
js
push
addr16
adc
mov
mov
sti
or
add
mov
(bad)
inc
mov
shr
xrelease
lahf
fidiv
xchg
int3
sahf
mov
sub
scas
push
adc
ins
icebp
and
retf
push
into
fstp
xor
sbb
mov
dec
inc
pop
cmp
cmp
sub
inc
ret
bound
repz
out
pop
cmp
xor
dec
xchg
pop
add
imul
ins
xlat
adc
jns
dec
aas
add
jnp
shl
xlat
and
movs
xor
shl
ins
sbb
adc
mov
out
mov
jb
aad
pop
out
sti
lahf
xor
add
fnstsw
inc
adc
fstp
popf
xchg
addr16
fs
ret
jg
ins
xchg
push
shr
and
add
xor
sub
ins
cmp
sbb
int3
cdq
xchg
cmp
xchg
mov
sar
aad
mov
pop
retf
and
pop
cld
jp
cli
dec
sbb
add
fsub
stos
je
mov
movs
inc
inc
xchg
or
push
div
jae
dec
adc
outs
ja
pop
(bad)
out
fadd
push
idiv
add
jno
fs
in
xor
cli
push
cmps
mov
pop
ja
(bad)
outs
ret
setae
mov
stos
mov
call
sahf
cs
repz
out
(bad)
fdecstp
push
pop
ret
(bad)
shl
popa
ss
neg
mov
jns
jmp
icebp
and
jecxz
shl
mov
cmp
cmp
cmp
fcmove
les
and
sub
mov
pop
(bad)
mov
cwde
sub
into
retf
push
cmp
jmp
rcr
(bad)
fmul
loopne
or
xor
bound
ins
std
dec
unpcklps
dec
outs
mov
cld
xchg
push
test
aas
or
repz
adc
shl
in
lahf
pop
loope
mov
mov
stos
dec
addr16
pop
ret
ss
xor
xor
mov
cmp
and
mov
gs
and
push
scas
test
push
fisttp
ret
push
and
and
mov
add
pop
add
mov
pop
and
mov
xor
sub
movs
fild
jg
dec
bound
push
sub
in
leave
push
mov
or
sub
xchg
or
(bad)
out
push
pop
sub
(bad)
aaa
mov
pop
jmp
mov
sahf
xchg
in
retf
cmp
test
sbb
and
shl
outs
scas
dec
repnz
mov
push
xor
add
mov
gs
stos
xchg
mov
mov
in
fdivr
cmp
daa
stc
fisub
dec
sub
cmp
push
adc
enter
jmp
pop
ins
or
out
iret
mov
cmp
stc
aam
loop
mov
sbb
je
daa
add
nop
cmp
pop
jp
lds
test
and
push
push
lods
(bad)
push
dec
mov
inc
nop
std
ret
mov
sbb
mov
ror
add
mov
add
inc
fimul
shr
mov
jmp
rcr
mov
movs
xchg
adc
out
push
xor
sub
push
lods
dec
dec
enter
push
leave
loopne
stos
nop
xor
gs
adc
sbb
fsub
lea
mov
(bad)
ds
popf
inc
popf
fadd
mov
lahf
ret
call
stc
mov
jae
dec
and
ins
mov
mov
cld
push
pop
or
or
ret
test
mov
sti
lahf
sbb
lahf
mov
mov
ss
sti
neg
or
movs
fstp
mov
std
shl
push
pop
sti
cmp
int
or
or
inc
dec
fcom
mul
or
test
sub
rol
xchg
sbb
adc
sti
fistp
je
pop
lods
cmps
lahf
shl
xchg
pop
mov
inc
sbb
sti
cmp
or
and
pop
push
pop
sbb
adc
in
xchg
leave
scas
mov
rol
jnp
fisttp
pop
shr
mov
repnz
aam
pop
cmps
jmp
cmp
cmps
test
je
and
dec
or
inc
dec
mov
cmp
mov
sbb
or
and
jmp
xchg
fld
cmp
mov
stc
sub
mov
iret
pop
add
pop
cmp
push
xchg
out
fiadd
sahf
loope
je
out
sub
jne
not
retf
mov
nop
or
pop
mov
dec
adc
call
cdq
lods
xor
mov
xlat
mov
mov
push
or
adc
outs
loope
in
or
add
stos
xor
adc
add
jne
xchg
cmp
xchg
and
cmc
data16
xor
fnsave
xor
stos
ss
repz
mov
pop
fwait
jo
ins
mov
push
sub
xor
inc
mov
pusha
in
enter
call
or
(bad)
test
bts
push
and
sub
lahf
ret
frstor
sbb
cmp
les
jb
and
pop
adc
mov
mov
or
pop
fcomp
push
jmp
idiv
or
push
xor
sbb
stos
repz
jnp
and
lods
cmp
push
stos
cmp
xor
out
(bad)
mov
mov
adc
aam
xor
gs
adc
pop
fadd
ins
adc
mov
push
lahf
mov
scas
jmp
mov
xchg
jl
mov
fist
arpl
jmp
shr
jnp
jmp
add
pop
mov
cmp
scas
and
fld
push
fdivr
sar
clc
cs
and
mov
cmp
cmp
mov
sub
add
lock
popf
pop
push
lods
cld
outs
sbb
cli
mov
outs
test
popf
cmp
cld
pop
adc
(bad)
gs
inc
stos
pusha
sub
adc
mov
jl
push
mov
call
pop
out
xor
aas
mov
lock
inc
jg
xor
mov
push
xor
pushf
cmp
in
jl
popa
gs
mov
mov
jle
or
jae
jae
fisttp
cli
sbb
pop
aam
add
dec
loope
hlt
js
sbb
jb
nop
and
mov
ss
xchg
or
enter
out
xor
outs
shl
das
jne
xor
repnz
mov
jle
sbb
out
dec
lods
retf
dec
adc
daa
add
inc
xchg
fstp
(bad)
pop
ret
in
fidiv
test
call
movs
movs
or
ret
pop
fbld
add
not
rol
clc
stos
test
adc
inc
stc
or
fist
pusha
hlt
jnp
cdq
dec
adc
ins
idiv
movs
lods
jg
pop
cmps
and
fimul
mov
call
add
lods
test
imul
or
sbb
or
inc
lock
mov
mov
mov
jecxz
addr16
bound
aam
mov
cmp
add
or
jmp
addr16
in
hlt
pop
(bad)
jecxz
adc
iret
jg
xor
int3
adc
adc
adc
int
mov
pop
xor
and
fisubr
and
hlt
repz
clc
cmp
xlat
cmps
sub
push
lods
call
je
mov
mov
fnstenv
pop
ret
lea
std
test
or
mov
int
cmps
dec
cmps
sbb
movs
jle
ins
add
es
test
idiv
mov
and
or
push
(bad)
addr16
sub
test
stos
sub
fcmovne
popf
push
leave
sub
mov
xor
cmc
cmp
(bad)
mov
adc
jnp
jg
arpl
mov
jecxz
dec
ins
xor
mov
jge
sub
push
out
dec
and
xchg
jmp
sub
movs
adc
(bad)
in
dec
fwait
inc
test
(bad)
sbb
or
cmp
cdq
(bad)
aad
push
add
scas
out
adc
sahf
pop
adc
popf
jne
ds
std
int
dec
hlt
cmp
(bad)
in
repnz
fild
imul
test
jnp
xchg
dec
ror
rcl
iret
aad
mov
out
xchg
jp
fbld
ds
mov
mov
dec
aaa
pop
cmp
sar
test
pop
cmp
lds
push
add
dec
out
ret
fidivr
fnstcw
in
sub
jnp
ss
jno
fmul
adc
popa
sbb
dec
daa
cmp
cmps
xor
sbb
cmc
add
add
mov
int
shl
movs
test
bound
imul
test
imul
loop
retf
sbb
pop
pop
cmc
pusha
inc
mov
xor
aaa
xor
(bad)
imul
(bad)
jns
adc
ror
(bad)
adc
sbb
jmp
mov
cmps
push
ret
dec
call
jp
test
jne
aas
daa
iret
pop
inc
loop
call
ins
adc
cwde
push
in
dec
ror
mov
jle
push
sbb
fcom
dec
out
mov
xlat
mov
or
ins
push
push
inc
jmp
(bad)
jnp
ret
push
ret
mov
xlat
and
adc
scas
xchg
ss
outs
out
test
dec
add
cmps
mov
jbe
outs
add
nop
pop
aas
sbb
xor
xchg
xor
rol
mov
lock
mov
movs
out
mov
sbb
jns
mov
push
pop
retf
and
enter
das
imul
mov
(bad)
iret
test
popf
sahf
test
outs
btr
mov
int
sbb
sbb
mov
into
aam
paddsw
or
sbb
pop
mov
fdiv
nop
test
inc
sahf
inc
into
stos
dec
fmul
out
sar
inc
xchg
adc
xchg
rcl
aam
jp
jno
pusha
sub
dec
cmp
or
dec
cmp
jbe
fmul
push
iret
addr16
adc
adc
xchg
(bad)
pop
test
xor
dec
hlt
mov
frndint
test
add
or
mov
push
jmp
fsub
rdpkru
push
push
mov
mov
push
retf
push
mov
fiadd
rcl
test
les
adc
or
ror
outs
or
aad
push
outs
push
pop
(bad)
fsub
sbb
ja
mov
xrelease
(bad)
(bad)
out
dec
inc
jae
out
in
fwait
dec
(bad)
push
sub
fstp
iret
mov
lahf
xor
add
mov
mov
fldenv
out
imul
jp
inc
mov
mov
in
dec
adc
in
mov
jge
movs
adc
outs
push
pusha
mov
mov
in
adc
mov
push
(bad)
icebp
sub
jb
adc
sub
xor
xor
mov
in
sbb
lods
sbb
repz
test
into
aam
test
or
xor
mov
xor
sub
mov
das
lds
xor
in
lods
js
sar
cmp
in
scas
and
push
jne
push
cmp
xor
ins
cwde
xchg
adc
in
mov
ror
sbb
adc
jmp
out
daa
mov
leave
cmp
sbb
jnp
or
mov
dec
or
inc
jg
call
mov
shr
pop
pop
pop
sbb
adc
pop
cwde
mov
sub
add
mov
jo
xchg
cwde
in
clc
fisttp
call
jo
push
mov
pop
push
inc
add
push
mov
jne
scas
xor
mov
jmp
push
ficomp
pop
xor
xor
mov
or
push
push
jnp
int
out
xchg
daa
ret
jno
jmp
fnstenv
hlt
dec
and
push
push
adc
or
sbb
mov
mov
mov
aam
dec
das
jno
cmp
dec
aas
jne
inc
fs
dec
mov
xor
test
pop
(bad)
(bad)
mov
jne
sub
clc
ins
xor
fmul
and
(bad)
mov
jne
pop
mov
hlt
mov
dec
sti
scas
jo
mov
(bad)
out
add
sub
lds
cdq
sub
jb
out
shl
xor
push
ins
out
cmp
dec
mov
push
dec
xor
jbe
rcl
xchg
in
sub
push
iret
mov
pop
loope
cmp
pushf
inc
aad
(bad)
jae
jne
add
lahf
pop
shl
and
and
xchg
pop
ins
sub
ror
pop
xchg
mov
push
and
inc
test
std
sar
mov
pop
aas
jg
les
outs
mov
push
(bad)
aas
xchg
xchg
inc
outs
aaa
mov
xchg
cli
and
(bad)
jns
mov
loop
sub
cmp
xor
sbb
adc
rcl
not
adc
or
and
push
stc
out
jbe
mov
push
das
leave
jb
push
dec
or
push
cmp
sub
sbb
or
xor
mov
add
out
or
outs
imul
jmp
push
pop
jnp
xchg
bound
jp
inc
xchg
pop
aad
aaa
cmp
clc
inc
sub
fnsave
mov
and
inc
nop
jmp
jb
push
aam
jae
push
(bad)
or
fucomip
xchg
cwde
and
es
push
mov
test
sahf
test
mov
sub
sbb
stos
pop
mov
cmp
mov
pop
js
int3
add
push
dec
test
lahf
dec
loopne
sbb
ins
jbe
into
adc
add
push
pushf
adc
pop
test
sar
scas
(bad)
adc
adc
sub
fsub
fwait
sbb
(bad)
inc
retf
add
pop
retf
jb
mov
push
xor
test
adc
push
add
cwde
ror
and
mov
sbb
cwde
adc
ja
push
outs
(bad)
fdiv
mov
sub
mov
or
in
or
cmp
cwde
dec
pop
adc
adc
push
jnp
outs
arpl
icebp
adc
xor
pop
cmp
fwait
xchg
out
stc
mov
in
scas
xor
or
addr16
dec
push
push
fsub
jle
and
jns
jbe
jmp
aam
mov
mov
ins
fimul
loope
popa
dec
push
lea
sbb
cld
fs
in
or
retf
inc
repz
std
ffreep
pop
xchg
not
mov
es
lods
cmps
sti
lods
xor
js
sub
punpcklwd
dec
iret
popa
sub
jmp
xchg
out
and
inc
mov
sub
mov
repnz
mov
and
push
repz
aad
aam
arpl
adc
add
jecxz
sbb
push
aam
(bad)
jp
retf
jb
rol
pop
ins
hlt
push
dec
sub
mov
push
push
push
out
call
fs
bound
mov
(bad)
stc
sub
mov
push
std
xchg
es
(bad)
push
xor
ud1
mov
aam
clc
mov
out
jge
push
inc
jns
inc
sbb
mov
mov
fs
mov
rol
cwde
mov
mov
clc
push
xchg
retf
mov
(bad)
push
sbb
push
out
sub
js
js
add
repz
mov
push
mov
outs
inc
lock
cmp
mov
in
fdiv
neg
mul
dec
push
cmp
movs
or
fcmovnu
hlt
sbb
fsub
pop
and
xchg
xor
jmp
jnp
pushf
fsubr
mov
and
fiadd
mov
inc
dec
je
mov
pop
mov
mov
mov
fiadd
xchg
xchg
int
jle
test
inc
call
in
inc
loope
and
mov
push
xchg
sub
out
inc
clc
fsubr
sti
push
mov
and
add
iret
mov
sbb
or
push
addr16
and
lahf
adc
ror
adc
sub
test
xor
push
adc
xlat
xor
lods
push
adc
sbb
test
sbb
dec
push
movs
or
imul
xor
jno
cmp
jecxz
adc
xchg
push
sbb
icebp
xor
lea
pop
push
adc
je
test
dec
dec
cs
adc
jns
cmp
int3
jae
fsubr
cmp
xchg
call
and
jbe
mov
xor
outs
adc
fwait
or
mov
ret
jecxz
lds
fsubr
shl
lea
call
pop
adc
mov
push
movs
or
xchg
cmps
add
sahf
push
fmul
push
xchg
push
test
push
rcr
mov
fchs
fdiv
jl
cmp
cmp
mov
aaa
xor
ins
sbb
aad
inc
sub
aas
jl
add
adc
mov
inc
sub
and
or
push
add
nop
or
adc
push
stos
fcom
dec
and
pusha
in
dec
scas
in
pushf
sub
inc
mov
mov
push
push
xchg
xor
sub
(bad)
aad
out
fidivr
fcom
cs
sub
push
aaa
sbb
push
cld
xchg
pop
xor
inc
jns
jae
mov
call
lods
ja
out
inc
retf
outs
xchg
mov
test
push
es
adc
fld
idiv
adc
ror
ret
inc
fstp
mov
add
mov
loope
test
inc
test
dec
fbstp
jecxz
adc
mov
pop
out
pop
pop
icebp
scas
and
xchg
fist
fisttp
ds
dec
mov
addr16
sbb
jmp
movs
mov
push
lods
stos
(bad)
aas
test
(bad)
and
sub
es
and
and
mov
scas
xor
bound
fadd
stos
jmp
fwait
cmc
(bad)
(bad)
push
loop
es
pop
inc
in
mov
dec
push
adc
jp
xlat
arpl
aas
jmp
(bad)
aam
sysexit
and
xor
jb
icebp
lahf
pop
xor
inc
mov
sbb
aad
inc
jmp
push
and
lods
ret
fwait
xor
inc
pop
push
jge
pop
bound
hlt
das
add
sub
mov
fadd
popa
stc
or
mov
jecxz
and
outs
ins
jge
mov
lds
in
inc
sub
enter
push
mov
cwde
fdiv
mov
imul
adc
and
lds
mov
inc
sub
je
fwait
cmp
pop
out
mov
rol
movs
xor
(bad)
sbb
pop
jle
loop
(bad)
cmp
sbb
retf
or
icebp
or
and
retf
ds
push
add
icebp
mov
lods
int3
jecxz
push
fs
mov
ret
sub
callw
sub
mov
and
xchg
cli
shl
lahf
push
mov
ins
mov
and
sub
hlt
xlat
out
inc
pop
xchg
movs
and
fild
jae
test
sub
pop
rep
add
movs
jecxz
cwde
lods
pop
mov
stos
shl
shl
sahf
imul
mov
cmp
mov
in
push
mov
(bad)
mov
and
inc
push
add
mov
xchg
mov
and
aaa
ins
fs
jnp
clc
lock
retf
mov
add
rcl
jmp
fdiv
xchg
(bad)
push
sub
jo
hlt
xchg
jecxz
sub
sahf
xor
xor
outs
mov
in
and
mov
stos
aam
xchg
xchg
rcr
jl
cld
test
push
or
or
cs
and
not
test
sub
fcomp
(bad)
repnz
(bad)
mov
out
jmp
std
fadd
cmp
loop
adc
fild
push
sub
sub
xor
nop
cmp
test
jmp
rcr
push
pop
xchg
push
inc
adc
imul
mov
aaa
iret
cmps
fwait
imul
fmul
sub
(bad)
outs
lock
ror
stc
xlat
(bad)
jnp
xchg
fisub
int
xchg
mov
lods
fwait
out
and
cmp
jae
ret
(bad)
popa
ret
fcom
nop
push
xor
(bad)
in
or
movs
vcvtps2pd
cdq
mov
or
int3
add
retf
rcr
(bad)
fsubr
in
stos
push
ret
cmp
fs
mov
xchg
pop
dec
mov
pop
cwde
push
jge
outs
gs
leave
mov
cld
dec
xchg
repz
fsub
mov
ins
push
cli
fiadd
inc
xchg
jo
imul
je
push
mov
xor
xchg
cmp
mov
je
loope
mov
sbb
(bad)
mov
les
in
jb
mov
shl
push
lods
out
adc
and
inc
sub
jo
and
cld
aas
jge
out
imul
retf
iret
add
xchg
test
lahf
sbb
sub
loop
push
pop
shl
div
aad
and
pop
jecxz
cmp
test
cli
xchg
bound
and
pop
xchg
stos
push
hlt
adc
sub
pop
stc
(bad)
dec
out
dec
jno
cdq
rol
xor
add
cmp
cld
mov
mov
pop
fnstsw
dec
xchg
js
xor
cdq
test
mov
outs
jge
xlat
in
(bad)
push
jbe
push
les
xlat
imul
ja
adc
xchg
sti
adc
adc
addr16
shl
lea
shl
jae
(bad)
loope
bound
shr
mov
(bad)
(bad)
sub
fidiv
mov
push
(bad)
sub
fimul
call
jns
push
sbb
rep
xchg
pop
mov
push
loope
pop
test
sub
ror
pop
or
pop
pop
xor
sub
mov
sbb
(bad)
mov
int3
jg
mov
jae
aaa
push
cwde
ficom
inc
pop
pusha
mov
xlat
dec
xchg
xchg
mov
fiadd
das
push
cmp
hlt
stos
test
push
sub
loopne
add
test
pop
add
shl
into
loop
cmps
inc
stos
dec
loop
ss
stc
push
ss
jae
movs
inc
hlt
in
cwde
out
mov
dec
sbb
xor
inc
mov
stos
or
retf
icebp
(bad)
jmp
cmps
jae
cmps
rcl
in
push
add
add
add
sbb
mov
rcl
lds
in
xlat
repnz
xchg
test
ret
retf
mov
fs
test
icebp
ins
and
call
push
sub
xchg
pop
xchg
push
and
pop
shr
fcomp
mov
fsub
pusha
and
iret
fs
mov
pop
lods
dec
es
lods
call
mov
inc
jbe
jns
loope
add
imul
gs
pop
mov
fstp
pushf
fdivr
cs
movs
pop
aas
jmp
out
xchg
(bad)
push
jne
call
xor
hlt
sar
push
and
nop
pop
adc
retf
sbb
sbb
mov
scas
ss
mov
add
aad
pop
pushf
inc
pop
stos
push
cmp
call
dec
pop
cmp
mov
inc
mov
cmc
stc
fimul
cwde
js
(bad)
daa
adc
cmp
sub
xchg
push
aam
cli
or
adc
loope
mov
neg
pop
mov
dec
mov
mov
xchg
push
movs
ins
jmp
icebp
xchg
xchg
cmp
push
cs
mov
(bad)
rol
test
pop
push
pop
fsubr
mov
push
xchg
lods
sub
mov
pop
stos
xor
and
test
ss
(bad)
sub
rol
jo
out
and
ss
jb
xchg
push
lods
ret
mov
(bad)
(bad)
cwde
adc
nop
mov
movs
push
ret
xchg
fld
rol
xchg
jecxz
shr
sub
push
cli
jbe
scas
mov
or
jno
mov
or
shl
movs
(bad)
clc
push
ret
scas
mov
xor
mov
mov
xor
mov
cwde
or
jbe
jmp
call
and
or
fistp
dec
dec
fwait
call
mov
and
test
aad
dec
and
mov
ins
mov
inc
sbb
fcmovu
retf
in
inc
(bad)
stos
out
paddw
ret
(bad)
or
rcr
or
push
pop
xchg
adc
mov
cmps
call
fldcw
scas
inc
loope
lds
aam
mov
loope
out
jl
jp
push
int
ss
jmp
xchg
dec
or
sbb
test
or
popf
xchg
repnz
movs
mov
jb
dec
movs
sub
data16
arpl
mov
test
sub
sub
mov
xchg
jg
sub
(bad)
mov
cli
nop
inc
cmp
jo
ds
in
adc
mov
shl
mov
imul
pop
jns
adc
into
mov
add
das
jbe
adc
lods
mov
test
cmp
xchg
mov
aad
shl
stos
cmp
mov
imul
cmps
je
pop
movs
jl
or
xor
mov
test
adc
movs
arpl
jge
loop
cmp
adc
test
out
lahf
pop
enter
or
inc
js
movs
ins
inc
ins
in
in
mov
pop
sti
mov
daa
mov
outs
jle
inc
scas
xchg
mov
adc
mov
add
jp
aas
xchg
push
pop
out
or
ror
maxps
push
(bad)
stc
or
movs
ret
hlt
jp
add
mov
xor
into
test
loope
lods
pop
pop
(bad)
xor
repnz
or
xor
jp
inc
pop
mov
repnz
inc
arpl
xor
jp
in
fsubr
push
dec
xchg
cs
test
enter
xor
(bad)
dec
xchg
iret
sub
sbb
jecxz
push
mov
adc
mov
fdivr
jmp
test
repnz
mov
jnp
mov
xor
call
loop
mov
fwait
js
xchg
push
in
push
mov
sub
ret
rcr
xchg
or
pop
cmp
xchg
xor
mov
cmp
adc
adc
in
push
scas
fdivr
mov
and
mov
push
dec
hlt
cmp
ins
stos
push
loop
retf
sahf
pop
scas
jo
in
popa
push
mov
pusha
cmc
fdiv
push
mov
cmp
mov
cli
mov
pop
jmp
xor
(bad)
loop
sub
mov
jne
outs
and
aad
mov
and
xchg
jb
(bad)
and
out
push
movq
xor
add
jb
sbb
jg
xor
das
jge
scas
sub
out
fist
repz
xlat
adc
fwait
bound
in
aas
leave
sar
inc
sub
test
in
stos
mov
add
test
xor
and
inc
aas
sbb
sub
aas
ins
mov
out
ja
icebp
retf
in
ret
bound
cdq
adc
daa
sbb
cmps
fidivr
mov
pop
inc
cmp
push
stos
pop
and
mov
sub
(bad)
test
(bad)
cdq
aaa
repz
dec
call
xchg
mov
out
inc
xchg
aad
sti
xchg
(bad)
cmc
mov
or
sbb
(bad)
aad
cmp
xor
xlat
and
aaa
or
(bad)
jae
movs
jl
cmps
push
retf
and
hlt
(bad)
ret
dec
aad
ds
enter
loopne
inc
push
mov
push
sbb
loopne
jmp
pop
and
aad
and
pop
and
cli
in
sar
add
or
fmul
cmp
(bad)
xchg
imul
sub
pop
call
pop
cmps
cmc
imul
call
in
cmp
mov
aaa
(bad)
call
leave
inc
cmp
retw
sub
cwde
adc
int
cs
add
sbb
or
sbb
mov
and
iret
int3
scas
inc
inc
popa
xchg
add
sti
sbb
sub
pushf
enter
adc
ins
and
dec
and
push
cmp
mov
and
std
mov
and
jmp
mov
xor
pop
jecxz
stos
mov
movs
jge
(bad)
push
icebp
sub
test
or
xchg
and
push
stc
or
jmp
cwde
aad
push
or
sub
push
pminsw
mul
cs
les
fwait
int
xchg
aam
xchg
dec
out
xchg
sub
ds
call
nop
stos
stc
add
push
sbb
xor
inc
mov
das
xor
xchg
cmp
cmps
add
imul
imul
in
das
in
mov
or
es
inc
test
or
ins
xchg
inc
iret
dec
adc
in
sub
enter
dec
or
sbb
out
mov
nop
cmps
aas
std
scas
cmps
mov
mov
xchg
jmp
push
daa
dec
inc
stos
add
push
and
xchg
mov
out
xchg
inc
xor
inc
fimul
xchg
add
push
xchg
test
mov
xlat
clc
rsqrtps
xor
and
rcl
mov
jne
lock
out
sub
not
div
inc
ins
push
cmp
mov
xchg
jno
call
ret
xor
jne
push
pushf
bound
cmps
mov
(bad)
dec
cld
and
xor
and
call
jae
cld
push
or
jmp
es
fsubr
mov
test
std
lods
mov
mov
cwde
out
test
ds
out
inc
sub
sub
imul
retf
or
int
and
push
push
xor
retf
fstp
mov
mov
in
jge
sub
adc
(bad)
dec
loop
into
lea
sub
sub
stc
loop
movs
push
mov
mov
or
mov
nop
cdq
pop
dec
retf
adc
inc
pop
sbb
or
ss
mov
ret
fwait
das
sbb
fbstp
cdq
mov
rcr
js
pop
xchg
sub
pushf
jns
jl
sub
mov
dec
dec
jnp
clc
xchg
mov
xchg
pop
leave
mov
cmp
ror
lock
jb
repnz
and
mov
adc
add
mov
rol
call
or
cmp
cmc
xor
mov
inc
(bad)
cmp
or
pop
jmp
mov
sub
imul
data16
out
popa
cmps
and
mov
shl
xor
movs
xchg
and
add
sahf
in
pop
or
mov
xchg
xor
pop
(bad)
ficom
xchg
pop
sbb
call
outs
aad
sbb
in
fmulp
icebp
and
push
mov
pop
mov
and
aaa
gs
jge
pop
jno
sbb
iret
sbb
sbb
pop
jg
push
pusha
call
xchg
mov
mov
es
sbb
test
sub
sub
in
push
ss
mov
mov
mov
daa
xor
jg
popa
pop
and
imul
or
and
and
int3
add
sbb
iret
or
sub
mov
es
and
push
mov
lea
cmp
jne
pushf
sbb
add
cdq
inc
push
ins
xchg
stos
add
adc
jecxz
arpl
(bad)
adc
fdiv
cmp
pop
sbb
in
sub
cmp
mov
arpl
cmps
ret
mov
jge
sahf
test
push
mov
int3
lahf
inc
sub
enter
leave
xchg
ret
push
(bad)
cmps
sti
and
in
xchg
mov
push
dec
jl
sbb
not
popf
mov
ror
test
sysenter
adc
repnz
sbb
mov
lods
fcomp
adc
leave
and
and
inc
fild
mov
ins
xor
xchg
daa
and
(bad)
mov
xor
inc
mov
add
xor
out
fs
push
or
or
fdivr
inc
test
cwde
lds
add
mov
hlt
push
loopne
jnp
and
add
mov
jno
or
lea
pop
jo
cmp
aad
call
loopne
repz
mov
sub
jne
stc
and
cmp
jle
sub
mov
(bad)
xchg
popa
jbe
xchg
stos
ss
pop
jmp
scas
sbb
jp
cmp
fisub
adc
xchg
xchg
inc
mov
int
repnz
sub
push
or
jnp
push
mov
test
mov
sub
dec
fdivr
pop
cmp
push
pop
push
(bad)
cmp
fwait
sbb
or
dec
or
sub
mov
pushf
cmps
jne
sahf
adc
das
inc
add
sub
xchg
mov
retf
stc
(bad)
sub
mov
add
sahf
xchg
or
mov
jo
add
pop
fcmove
lods
mov
sbb
sbb
ds
test
mov
sysexit
out
mov
test
push
sti
fmul
push
and
mov
jno
fwait
jno
rcl
pushf
push
jmp
pop
int
hlt
leave
and
cdq
popf
mov
xchg
rol
pop
push
test
in
fist
push
and
add
sti
(bad)
add
test
push
or
push
aas
push
(bad)
xchg
test
int
pop
sub
clc
mov
out
mov
fisub
push
outs
inc
out
sub
or
pop
cmc
data16
outs
or
dec
and
cwde
fnstcw
pop
mov
out
outs
pop
or
fwait
adc
and
xchg
jmp
(bad)
dec
aas
phsubsw
or
iret
mov
arpl
aas
dec
sbb
retf
arpl
push
jmp
sti
lahf
cmp
push
jno
jge
stos
mov
(bad)
push
cdq
push
add
push
pusha
jo
jp
mov
jle
xor
push
mov
push
int
xchg
lock
or
fwait
xor
or
cmp
xor
mov
popf
push
mov
dec
cmp
shl
mov
sub
int
sbb
pop
xchg
data16
jns
xor
jg
xchg
and
cmp
cmp
mov
pusha
out
xor
add
cmp
mov
aas
sbb
mov
cmc
rcr
popf
push
dec
(bad)
jb
adc
pop
retf
in
loope
pop
out
mov
retf
cmps
cmc
shl
add
inc
cdq
mov
test
cmp
add
call
leave
ret
adc
xchg
in
(bad)
xchg
in
in
jg
lea
retf
aas
mov
push
addr16
mov
stos
imul
push
cmps
push
sbb
loope
out
out
ds
rcr
adc
add
movs
enter
arpl
stos
or
inc
or
add
inc
xor
daa
mov
icebp
int
push
mov
cmp
inc
leave
pop
sub
push
sahf
cmp
dec
mov
pop
jb
loopne
je
(bad)
push
dec
loop
xor
mov
xchg
icebp
sbb
add
sbb
push
imul
mov
jl
sbb
jge
data16
mov
mov
pop
lahf
mov
retf
cmp
cli
gs
jmp
sub
dec
or
fidivr
call
test
mov
daa
push
sbb
jmp
adc
bound
enter
dec
fs
pushf
sub
xchg
mov
lods
add
out
jmp
inc
xor
sub
aas
pop
outs
mov
shr
and
imul
(bad)
jecxz
add
inc
jl
out
xchg
sub
jno
xchg
adc
icebp
hlt
mov
xor
cld
aad
mov
ins
sti
pop
mov
add
test
add
xor
pushf
ds
cld
test
mov
push
dec
mov
mov
add
jb
pop
test
inc
les
jle
(bad)
push
mov
call
push
push
inc
pop
(bad)
loop
or
rcr
pop
pop
lock
call
sbb
pop
mov
jle
mov
xchg
(bad)
mov
dec
mov
into
fadd
in
adc
xchg
rcl
xchg
or
lods
ja
fld
fwait
sub
das
xor
xlat
inc
xor
jne
xor
mov
sbb
dec
and
loop
loop
push
scas
data16
(bad)
fimul
rcl
mov
fisttp
xchg
inc
dec
cmc
and
add
xchg
pop
test
test
es
in
push
cvttps2pi
push
mov
mov
pop
test
sbb
mov
jmp
sub
push
and
and
pop
push
les
inc
add
push
push
xchg
ins
dec
popf
inc
jnp
xor
mov
mov
pop
lahf
cli
std
ret
imul
fcom
nop
dec
jae
aas
push
scas
xchg
inc
add
outs
not
jp
inc
imul
add
mov
push
mov
lahf
sbb
(bad)
cwde
ins
adc
fcmovu
std
cmps
mov
push
push
mov
repz
outs
push
inc
inc
push
inc
mov
icebp
loope
sar
push
into
gs
and
lods
repnz
arpl
mov
pop
dec
mov
cmp
repz
mov
out
inc
push
inc
or
push
stos
ins
dec
inc
add
sub
fst
sub
and
(bad)
(bad)
xchg
das
push
xchg
add
jnp
pinsrw
push
jmp
outs
loop
mov
push
test
mov
mov
push
or
or
retf
add
jmp
jae
imul
cld
jne
mov
icebp
out
dec
sub
mov
xchg
cs
and
adc
inc
stc
add
push
outs
popf
sar
int
dec
icebp
add
rcl
cmp
push
aad
jbe
inc
pusha
add
push
cmc
cmps
sbb
dec
nop
pop
js
icebp
fimul
add
adc
lods
cmps
adc
adc
mov
mov
dec
xor
fdiv
lods
sbb
sbb
inc
aad
mov
fimul
jecxz
push
stc
cmp
xchg
shl
mov
xchg
or
pusha
add
push
sti
pop
sbb
inc
mov
dec
(bad)
pop
data16
dec
xchg
adc
cmp
or
fs
fmul
je
add
sbb
cdq
lock
js
int
cmp
push
mov
dec
xor
xchg
sub
clc
mov
mov
les
leave
in
(bad)
adc
xchg
(bad)
pop
jmp
sbb
xchg
imul
sub
gs
lea
jb
cmp
or
cmpxchg
add
jg
mov
jecxz
push
pop
or
xor
pop
aas
inc
xlat
add
cli
xlat
pop
and
and
fadd
loop
sub
gs
ret
enter
push
rcl
sbb
push
fist
jnp
push
and
dec
push
mov
fs
mov
push
ja
mov
or
shl
loopne
add
mov
mov
nop
pop
push
clc
xchg
fnsave
sbb
call
mov
or
std
jno
push
mov
xchg
mov
mov
mov
ds
sub
aad
cmp
push
pop
jno
xchg
add
jae
xchg
aas
retf
mov
fs
sub
iret
repz
and
and
add
out
jecxz
sub
xchg
add
fwait
sahf
add
xchg
inc
ja
stos
(bad)
push
stc
xor
dec
aaa
lahf
mov
cmp
popa
fwait
mov
cmc
out
push
pop
loope
stos
pop
mov
stos
shl
jbe
test
jae
sbb
in
push
xor
scas
dec
jae
jp
outs
repz
ret
jae
fisttp
mov
adc
sbb
adc
sub
jge
cmp
and
test
hlt
mov
int3
pop
pop
pusha
push
inc
bound
push
pushf
out
(bad)
movs
mov
daa
xchg
loopne
ins
inc
add
out
push
pop
adc
cmp
add
(bad)
sbb
xchg
push
mov
pop
fcomp
xchg
sub
xor
shl
pop
mov
cmp
aas
sahf
mov
inc
test
movs
inc
push
sti
mov
pop
adc
mov
push
and
ds
push
mov
rcl
sar
cmps
pop
dec
cmps
add
fxch
bound
push
sbb
mov
jmp
leave
inc
cmps
cmps
inc
(bad)
stos
loope
pop
xchg
imul
mov
test
cmp
fs
pusha
data16
lea
mov
xor
xchg
push
add
inc
int
inc
out
mov
xchg
mov
out
xchg
jle
shr
jmp
outs
cld
pop
cmp
jo
push
imul
mov
test
jl
or
dec
call
fmul
pop
xchg
ret
and
pop
xchg
mov
pop
pop
push
scas
xchg
xchg
outs
or
adc
lods
push
jge
sub
or
lds
mov
xchg
xor
imul
mov
cmps
cmp
mov
in
pop
shl
aam
iret
push
ins
mov
mov
cmp
cmp
mov
pop
and
rol
test
mov
xchg
inc
xchg
add
mov
(bad)
ins
mov
mov
push
clc
and
add
push
ret
leave
outs
mov
cld
hlt
(bad)
mov
inc
ret
mov
and
popa
ja
xor
pop
leave
adc
and
mov
test
loope
jg
jno
es
mov
inc
sub
loope
call
in
ret
aaa
cdq
loope
retf
xchg
fwait
mov
sbb
(bad)
loop
ror
fmul
and
mov
mov
xchg
test
cmp
sub
xlat
and
or
(bad)
xor
movs
js
inc
repz
jmp
add
mov
or
sbb
fistp
jg
jne
in
in
dec
inc
cwde
leave
jg
push
rcl
ja
pop
xchg
xchg
sahf
test
inc
imul
or
inc
mov
imul
lock
inc
adc
imul
pop
imul
push
push
pop
in
xor
popf
scas
mov
mov
jg
dec
xchg
xchg
jecxz
sub
or
cmp
cli
add
xor
sub
(bad)
jo
movs
jl
push
jnp
mov
out
jmp
sar
ins
push
adc
mov
push
cmp
cmp
clc
shl
sbb
(bad)
inc
xor
or
cmp
jmp
(bad)
repnz
in
mov
(bad)
sti
lods
xchg
clc
xchg
mov
sahf
pop
fwait
push
stos
repnz
pop
(bad)
ins
add
mov
icebp
cmc
and
rcr
addr16
sub
ins
call
adc
or
repz
aaa
mov
aad
and
jg
je
daa
mov
mov
or
and
sub
out
hlt
push
repnz
jecxz
scas
fmul
and
jl
test
ins
jle
push
scas
jns
mov
cmc
pop
mov
stc
cmps
mov
fmul
adc
ror
(bad)
and
iret
push
mov
sub
test
ror
cs
mov
bnd
mov
out
bound
stos
addr16
repz
cmps
bnd
out
lea
fdiv
ds
dec
xchg
sti
push
ror
xchg
push
dec
rcr
das
jae
pop
mov
in
jmp
repnz
mov
inc
inc
push
or
adc
stos
dec
ror
adc
enter
add
ret
dec
lods
add
xchg
or
push
jae
mov
mov
rcl
clc
pop
xor
or
loop
sbb
ror
mov
test
mov
sbb
xor
push
mov
imul
cmp
cmps
mov
xchg
hlt
stos
adc
xchg
add
mov
leave
xor
inc
mov
mov
int3
sar
test
stos
jge
adc
xlat
push
cmp
pop
call
push
jno
jbe
adc
rcl
push
repz
sub
loop
push
ret
push
jb
fs
mov
dec
movs
scas
push
or
je
xchg
push
and
inc
imul
mov
mov
cli
mov
push
test
lahf
cmp
pop
add
mov
push
push
rol
cmps
pop
pop
jb
cld
loope
cmp
ffree
pop
addr16
sar
and
jmp
in
push
sti
sbb
ficomp
mov
jb
inc
or
test
das
(bad)
popa
aad
mov
(bad)
lahf
jp
enter
cmps
out
in
sub
mov
shl
lods
push
pop
cmp
mov
js
mov
mov
push
mov
add
push
dec
jae
jp
popf
cmp
jge
out
sti
cmp
add
push
cli
push
pop
(bad)
out
or
cs
or
or
push
stc
inc
push
jp
(bad)
out
sbb
test
pop
stos
sbb
mov
push
repnz
push
cwde
jne
inc
loopne
push
outs
scas
dec
or
outs
sub
fsubr
pusha
lahf
lahf
push
repnz
mov
cs
dec
adc
adc
inc
fwait
imul
jnp
cs
clc
mov
xor
jo
sbb
jnp
push
mul
fld
test
jne
jb
mov
mov
retfw
aas
call
jmp
cmp
aas
and
scas
arpl
fwait
movs
jns
out
pop
adc
rcr
rcl
test
cmp
adc
inc
inc
out
xor
cmps
mov
fidiv
pop
push
adc
rcl
test
(bad)
test
iret
jae
cmp
and
jo
sub
dec
dec
lds
push
sub
push
sti
sbb
jl
mov
sub
jne
scas
xor
fs
ss
repnz
mov
stos
aam
adc
xchg
jno
rcr
add
mov
xchg
imul
movs
outs
pop
or
dec
or
vmaxsd
push
xchg
lea
push
loop
es
inc
mov
sub
jnp
popf
mov
cmc
(bad)
and
int
cmp
in
enter
xor
or
dec
or
clc
mov
pop
loopne
out
out
mov
inc
pushf
lea
shrd
enter
mov
call
pusha
xor
xor
push
retf
mov
jns
shr
or
call
dec
mov
test
mov
add
aam
mov
movd
icebp
std
sar
dec
pusha
jae
sub
outs
pushf
mov
xor
mov
cmp
mov
jae
sbb
dec
int3
call
mov
add
call
sub
sbb
pop
enter
loop
retf
scas
adc
jbe
sbb
jne
ds
sub
mov
pop
test
lock
dec
dec
jmp
cwde
push
repnz
push
iret
fbld
movs
and
loopne
outs
loopne
(bad)
pop
sbb
bound
ja
hlt
inc
cld
pop
xchg
inc
push
push
or
pop
mov
xor
test
(bad)
(bad)
fs
mov
out
ret
rcr
scas
xlat
jmp
fisttp
jg
mov
jne
ficom
and
lds
sub
push
bound
dec
cmp
jg
and
loop
and
jae
mov
aam
std
xchg
int3
inc
stc
aas
aad
sahf
out
fisttp
inc
ficom
xchg
scas
mov
stos
mov
aaa
and
retf
(bad)
cmp
(bad)
cvtps2pd
push
mov
sar
das
(bad)
scas
push
xor
add
mov
push
loopne
pop
push
call
xchg
test
icebp
movs
scas
fyl2x
push
retf
call
outs
mov
in
sbb
out
pushf
xchg
push
adc
fidivr
jl
leave
pcmpgtw
call
outs
repz
inc
push
cmps
mov
leave
jge
imul
arpl
push
pushf
lds
adc
or
cmp
repz
enter
fadd
sub
dec
jo
inc
xchg
jp
daa
jns
ins
xchg
jno
sub
xchg
add
jb
enter
gs
shl
(bad)
or
cmp
(bad)
lock
shl
push
push
fadd
push
sar
push
cdq
cmp
cmp
js
cmp
push
or
mov
ret
sbb
dec
push
xchg
outs
or
and
sbb
aad
pop
xchg
in
pusha
sahf
out
ret
xor
pop
mov
mov
pop
hlt
enter
push
test
or
aas
xchg
and
cld
pushf
ror
xor
push
mov
adc
adc
mov
pop
jecxz
mov
rol
add
call
ja
sbb
in
lds
test
pop
jno
or
push
jecxz
mov
dec
sar
jg
sub
pop
mov
pop
outs
fist
pop
fisubr
fdiv
jmp
cmp
faddp
add
test
add
mov
mov
mov
mov
adc
sub
rcl
cmp
pop
mov
enter
jmp
cld
cmp
loop
lea
lds
jmp
inc
shl
rol
and
fisttp
xor
pusha
(bad)
out
mov
xchg
into
mul
push
adc
or
push
mov
sub
inc
loope
scas
retf
fs
xor
push
jnp
or
xor
push
aaa
out
mov
mov
je
xlat
adc
int3
push
pusha
and
mov
rcl
mov
pop
mov
sbb
dec
lahf
fistp
int3
int3
xor
pop
add
pop
(bad)
repnz
mov
shl
scas
std
sti
ins
cmp
jg
cmps
adc
loope
mov
mov
das
xchg
out
xchg
shr
and
popa
adc
bound
(bad)
aaa
mov
mov
sub
inc
cmc
cmc
idiv
aaa
fmul
popf
adc
push
push
loope
imul
rcl
add
pop
sti
test
in
out
mov
and
paddusb
pop
inc
adc
xor
inc
mov
js
les
or
aas
pop
push
cs
shl
pop
adc
aaa
aas
outs
lea
fs
std
push
jnp
cmp
fild
ror
sbb
or
in
pop
daa
cdq
jle
bound
or
les
dec
jmp
out
fdiv
sub
lods
push
sti
retf
das
or
jecxz
inc
cli
or
inc
data16
mov
sbb
call
loop
pop
inc
(bad)
push
mov
mov
cmp
test
adc
inc
or
adc
retf
and
pop
sub
loopne
pop
retf
adc
lods
nop
fsubrp
sub
ja
sbb
add
(bad)
gs
push
iret
and
fisub
inc
pushf
fisttp
jb
mov
sub
adc
or
and
inc
jge
iret
call
dec
mov
sub
or
mov
das
cli
jne
inc
int
ret
ss
jl
jne
cdq
mov
sub
popf
and
push
jae
adc
lds
sub
out
pop
push
sub
aaa
ins
clc
dec
mov
outs
cmp
push
inc
jp
mov
scas
sub
and
out
ss
fdiv
or
retf
and
push
push
dec
push
push
out
or
ins
mov
sbb
out
sar
aad
push
xor
test
jmp
enter
xor
ret
sub
callw
aas
clc
or
xor
(bad)
mov
jo
sub
add
sbb
push
inc
dec
arpl
ins
sti
push
icebp
push
outs
adc
sahf
push
das
fist
(bad)
test
adc
xor
jns
mov
cmp
add
mov
mov
repnz
dec
mov
dec
into
adc
adc
mov
dec
mov
inc
sbb
cmps
xor
cwde
jle
jbe
std
dec
xor
ins
ficom
push
imul
fst
inc
enter
pop
jecxz
pushf
div
and
sbb
ins
sub
aam
sub
jne
repz
pop
repnz
jae
mov
inc
adc
mov
dec
ss
pushf
fist
lea
fdivr
lea
push
mov
inc
movs
cmp
pop
pop
jo
das
daa
std
inc
push
xor
(bad)
dec
lods
outs
mov
cmp
sahf
push
stos
out
les
pop
xor
cmp
mov
sub
mov
xchg
adc
fwait
or
enter
inc
hlt
jecxz
fadd
jecxz
push
pop
pusha
and
and
push
retf
mov
jecxz
out
loope
xchg
inc
and
pop
loopne
adc
mov
and
cmp
fchs
retf
hlt
pop
cmp
out
test
fcmovu
push
rcl
mov
sub
jmp
(bad)
mov
adc
mov
test
fcomp
cmp
ins
push
arpl
cmp
cld
push
out
jae
adc
imul
and
push
mov
sti
pop
sub
rcl
cmp
leave
aaa
or
cmp
cmp
shl
adc
rcr
pop
xor
adc
and
jle
mov
jno
icebp
jo
push
push
(bad)
stc
mov
loopne
fld
adc
adc
mov
mov
and
mov
mov
cmp
pop
cmp
and
retf
addr16
je
or
daa
jns
ins
(bad)
cmp
xchg
pop
push
mov
mov
rcl
cmps
pop
daa
lock
pop
push
jge
push
int
cmc
xor
mov
pusha
xchg
jge
sbb
and
push
jp
and
cwde
push
ret
dec
fisttp
mov
mov
imul
mov
popf
sbb
or
add
cmp
in
jae
scas
scas
mov
add
mov
rcl
sbb
xchg
dec
inc
push
pop
jno
sti
dec
cs
out
xlat
cmp
cld
pop
push
push
jg
shl
js
in
cmps
or
jnp
aaa
es
stc
push
jle
leave
stc
sub
imul
pop
inc
xor
(bad)
jb
hlt
adc
leave
mov
push
sub
dec
vpcmpeqd
or
add
inc
cmp
jnp
mov
mov
adc
das
pop
les
mov
in
ret
repz
mov
inc
jb
mov
(bad)
pop
pop
mov
pop
lods
xchg
cmps
cmp
jle
stc
xchg
jae
ds
rcl
sbb
leave
mov
movs
pop
adc
sahf
sub
jno
xor
les
clc
clc
out
xlat
leave
xchg
cmp
(bad)
out
shl
jle
(bad)
push
dec
repz
xchg
mov
or
pusha
pushf
ds
ins
ret
movs
or
inc
inc
sub
rcr
call
addr16
fadd
add
xchg
jg
xchg
in
add
es
xchg
jb
mov
add
mov
ret
or
sbb
xor
or
xchg
loopne
mov
sbb
mov
mov
cs
rcl
(bad)
ss
arpl
fild
jne
push
or
xchg
mov
xor
sbb
mov
add
div
fisttp
mov
popf
xchg
inc
sub
mov
pop
test
call
mov
mov
mov
add
mov
sub
in
xchg
mov
call
stos
mov
fdivr
scas
aam
das
pop
repz
inc
rol
jp
dec
aaa
push
or
call
cmps
scas
mov
cmp
xor
sub
mov
sbb
sbb
dec
vcvtsi2ss
xor
loopne
push
push
jns
jmp
mov
xor
xchg
into
sub
jge
ror
mov
xchg
retf
lods
loopne
cmp
ja
test
jns
sub
pop
rol
mov
ffree
pop
jge
pop
movs
fxch
cmp
adc
leave
mov
pop
sar
cmp
mov
jge
cmp
xor
(bad)
push
or
xlat
and
aam
in
mov
push
mov
mov
mov
mov
add
and
inc
pop
inc
in
pushf
sub
outs
es
scas
xor
xchg
cli
movs
add
pop
fisub
xchg
and
push
in
push
sbb
push
push
imul
hlt
mov
xchg
mov
pop
rol
out
fmul
mov
icebp
or
nop
dec
(bad)
adc
pop
sbb
sbb
cmp
outs
adc
call
push
cmc
mov
jne
mov
out
hlt
into
leave
pop
adc
and
sub
inc
es
sbb
add
test
cdq
ins
mov
sbb
(bad)
retf
cli
sub
push
fwait
jl
sub
inc
arpl
sbb
cmc
out
into
mov
jnp
shl
sub
push
(bad)
cld
lods
scas
lea
into
cli
mov
mov
adc
ficom
adc
jecxz
test
out
xchg
jns
xchg
xor
xchg
dec
stos
icebp
xor
jge
add
adc
cmp
and
xchg
fwait
jl
pop
or
cmp
push
sub
mov
stos
inc
cdq
jecxz
sub
jecxz
jne
in
adc
or
jle
(bad)
clc
dec
pop
ja
in
mov
pop
popf
inc
and
mov
push
push
add
out
add
adc
es
dec
sub
fild
mov
mov
jle
outs
mov
out
cmp
daa
push
mov
retf
push
xor
pushf
leave
inc
adc
pop
pusha
jl
adc
and
mov
adc
dec
adc
in
mov
pop
retf
fnstsw
adc
xor
mov
dec
ret
lods
adc
mov
(bad)
les
jnp
cld
adc
inc
mov
stc
shl
sti
cmp
clc
scas
jae
stos
and
mov
stc
push
cmp
hlt
xor
inc
xchg
mov
je
mov
lahf
popa
jle
sub
aaa
(bad)
sbb
out
(bad)
jmp
int
lods
imul
movs
popf
mov
lods
cli
jecxz
cmp
cmp
or
shl
dec
cmp
mov
pop
or
lds
mov
imul
sbb
ret
loopne
jl
and
and
or
rcl
clc
mov
fsubr
jl
mov
inc
jns
outs
push
xchg
add
scas
les
pop
sbb
pop
push
into
fild
in
mov
cmp
retf
fild
mov
push
retf
lahf
mul
jge
or
xor
and
xor
xor
inc
lods
mov
test
int3
pop
push
fistp
fmul
jne
mov
shl
in
mov
ficomp
push
pop
pop
inc
jbe
lock
int
fstp
mov
int3
div
adc
inc
rcl
push
add
jl
cmp
jb
pushf
iret
mov
(bad)
stos
je
clc
mov
inc
add
inc
add
ficom
push
fbld
mov
pop
and
(bad)
loop
gs
loope
test
cmps
les
sub
push
push
mov
xchg
lods
retf
fstp
dec
data16
rcr
dec
lods
dec
(bad)
adc
inc
hlt
and
test
out
xchg
sahf
pop
and
push
sub
dec
ss
and
xchg
shl
xchg
pop
pushf
mov
jle
outs
xor
mov
sahf
call
and
loop
mov
xchg
jne
lods
dec
and
sbb
cmp
rcl
shl
mov
sbb
outs
in
push
cs
lods
sbb
pop
ins
into
mov
mov
mov
arpl
xlat
lock
sbb
cmp
clc
xor
mov
xchg
jg
jno
cmp
mov
add
push
push
mov
repz
mov
dec
aad
cwde
mov
pop
mov
and
aaa
xchg
push
ss
fwait
repnz
and
mov
shl
mov
mov
loope
dec
popa
inc
mov
mul
daa
ja
pop
test
test
inc
adc
add
or
pop
es
stc
add
or
fst
pop
arpl
dec
lods
sbb
and
or
jmp
adc
inc
xchg
cmp
(bad)
scas
into
loopne
sub
je
mov
or
push
mov
push
push
jnp
mov
test
xor
into
repnz
add
les
leave
mov
jge
dec
push
repnz
xor
or
aam
aaa
adc
cwde
stos
mov
pop
mov
sub
push
ss
cmp
or
lock
lods
sub
pop
lds
les
jg
xor
fisub
(bad)
mov
ja
aad
pusha
(bad)
(bad)
jmp
cli
adc
sub
inc
mov
or
es
aas
sub
ds
mov
aam
or
fistp
lahf
gs
cdq
inc
ja
mov
adc
xor
rcr
jno
or
shl
jne
mov
loope
xor
pop
push
shl
iret
pop
fnstenv
add
cmp
int3
(bad)
mov
cmp
xor
je
inc
push
cmp
fldenv
xor
scas
ficomp
test
or
out
push
jmp
cmp
mov
dec
(bad)
pop
sub
cmp
sub
(bad)
mov
fcmovnb
ret
sbb
neg
je
bound
sub
sti
das
call
pop
jl
mov
(bad)
jmp
call
sbb
(bad)
mov
(bad)
mov
sbb
js
pop
pop
out
std
mov
xchg
not
addr16
test
dec
jg
jo
push
sub
sbb
push
jb
sub
outs
popa
(bad)
aaa
or
and
and
jnp
cmps
push
mov
data16
lahf
cmp
icebp
fmul
sbb
loopne
stc
dec
push
jb
pop
adc
push
xchg
xor
idiv
adc
or
call
das
jl
xor
lock
or
jae
pop
lock
cmp
gs
xlat
repnz
jmp
pop
fwait
jp
push
adc
fisub
inc
jns
cmp
loop
pop
ret
movs
(bad)
add
es
sub
xor
mov
(bad)
sub
adc
loopne
xchg
ficomp
in
dec
les
scas
lock
cdq
nop
mov
int
xchg
mov
fmul
cli
pop
out
push
fist
xor
inc
push
rol
cld
pop
mov
pop
fistp
(bad)
or
push
lds
popa
xchg
shl
les
fisttp
jne
outs
(bad)
popf
pop
imul
xlat
test
cli
push
dec
mov
mov
or
(bad)
fmul
jmp
ins
and
(bad)
loope
mov
jecxz
xchg
add
out
inc
lea
mov
push
mov
sbb
cmp
(bad)
mov
cdq
movs
cmp
mov
push
outs
iret
fisttp
cwde
pop
rcr
xchg
fcom
retf
int
ficom
pop
jle
cdq
shl
es
inc
outs
leave
cdq
outs
into
or
mov
mov
or
dec
xor
sub
es
add
add
or
retf
sbb
es
xchg
out
sub
call
dec
inc
mov
out
xor
ins
aam
pop
adc
xor
cmp
cli
retf
nop
fbld
outs
xlat
cmp
mov
dec
les
sub
popa
movnti
jle
or
pop
enter
mov
mov
fisub
rcr
push
jmp
cs
pop
mov
sub
jmp
imul
pop
mov
popf
pusha
sbb
int3
push
mov
mov
cmc
je
and
sub
or
fwait
dec
sub
or
pop
xor
hlt
outs
pop
(bad)
in
push
fimul
in
or
or
scas
repz
ret
into
into
jns
or
mov
or
mov
(bad)
mov
mov
mov
(bad)
or
jg
clc
xchg
cmp
out
mov
(bad)
xchg
sbb
pop
leave
call
aam
xchg
dec
iret
add
jp
out
xchg
outs
add
mov
pop
test
inc
jmp
aas
pop
and
pop
lock
std
xlat
xor
add
adc
mov
int3
loopne
jnp
mov
movs
imul
inc
je
add
jno
mov
jecxz
pushf
aad
inc
test
mov
jge
jno
xor
xlat
js
xor
sbb
add
mov
inc
movs
push
cmp
adc
mov
mov
outs
push
jnp
les
fstp
dec
mov
cs
push
lahf
aaa
int
dec
sbb
call
or
(bad)
pop
xchg
xor
mov
mov
(bad)
mov
cmp
(bad)
fld
es
mov
das
fidivr
dec
pop
fcomp
pop
sbb
push
push
ror
out
or
test
pop
pop
les
xchg
sbb
scas
or
adc
sub
push
mov
iret
pop
test
sub
and
imul
test
jg
push
jbe
xchg
pop
test
and
push
js
loope
xor
retf
sub
xchg
fs
or
sahf
xor
mov
(bad)
fild
or
cdq
out
jb
inc
xchg
mov
push
mov
sbb
adc
cmp
hlt
fs
mov
add
xchg
sub
fadd
out
mov
stc
fnsave
test
test
ss
das
(bad)
in
mov
push
xor
shr
movs
jp
mov
test
shl
retf
xchg
push
inc
inc
int3
rcl
(bad)
ss
ror
push
and
pop
sti
pushf
pop
lea
movs
shl
jb
sub
jmp
mov
jb
sub
js
cmp
in
daa
mov
push
ficomp
push
mov
in
push
push
mov
adc
mov
imul
div
inc
xor
rol
mov
push
loop
out
stc
jbe
popa
hlt
outs
mov
ret
lods
and
sbb
xchg
pop
ja
lods
cmp
lock
push
inc
fwait
fwait
push
ins
mov
mov
mov
lahf
je
idiv
xor
push
mov
inc
jae
inc
jo
or
(bad)
in
inc
dec
dec
mov
pop
call
shr
mov
dec
push
cmps
mov
out
cmps
mov
pop
imul
push
and
cmps
and
mov
imul
cld
call
cmp
(bad)
xchg
nop
in
jmp
ror
shl
pop
xor
hlt
stc
sbb
jge
sahf
imul
aam
jmp
popa
inc
pushf
dec
xor
add
xor
sbb
mov
sub
adc
pop
in
pop
cmp
push
adc
into
push
push
in
cld
pop
repz
xor
gs
imul
push
mov
or
mov
jle
data16
pop
sub
mov
out
push
lock
in
jp
ds
mov
imul
push
sub
inc
ror
test
cs
adc
loop
cs
mov
push
pop
mov
aas
push
xchg
mov
add
jb
movs
push
jg
nop
lods
lahf
call
jns
or
add
idiv
stc
mov
fild
fild
sub
cmp
add
jno
inc
inc
shr
cmps
call
mov
fmulp
push
rol
dec
cdq
add
call
pop
pop
xchg
sahf
pop
in
xchg
aas
stos
sbb
ds
or
je
xchg
mov
psubb
shr
add
sbb
jb
add
xor
mov
push
sub
mov
cs
std
mov
xchg
sub
bswap
xor
xor
and
adc
sbb
push
test
rol
and
push
adc
cmp
(bad)
popa
stos
in
into
mov
mov
jb
out
(bad)
rol
fdecstp
inc
pop
leave
gs
mov
test
mov
data16
aas
stc
in
aad
push
xor
retf
movs
pop
inc
les
push
dec
sub
xor
out
mov
shr
mov
outs
fnstenv
lock
rcl
gs
aaa
shr
repz
cmp
inc
and
sub
mov
std
mov
clc
jo
(bad)
sbb
shl
or
retf
adc
push
lods
aas
lods
dec
jl
xchg
dec
in
xlat
mov
ficomp
cmp
retf
aad
dec
mov
inc
int3
(bad)
scas
mov
sbb
jae
jne
dec
out
pop
xor
jno
jl
and
out
ror
add
push
nop
loop
push
jge
test
dec
in
mov
ins
cmp
imul
in
movs
inc
sbb
xor
xor
into
xchg
sti
lahf
stos
mov
add
call
push
jb
js
(bad)
iret
and
xchg
xchg
xchg
push
jecxz
inc
xchg
pop
loop
adc
icebp
mov
out
aad
add
mov
leave
xchg
ret
push
pop
add
repz
fisubr
pop
and
movs
push
sahf
loopne
inc
xor
push
pop
push
adc
and
into
jno
jmp
sub
mov
jle
add
(bad)
cmove
pop
cli
out
and
cmc
dec
fidivr
sbb
cmp
pop
inc
and
shl
loope
cdq
hlt
xlat
or
int3
fsubr
cmc
pop
fxch
jbe
xor
ret
and
imul
add
jmp
push
mov
add
test
ds
movs
add
mov
pop
and
(bad)
mov
pop
retf
or
pop
out
cld
ret
xlat
mov
inc
pop
and
sbb
add
call
pusha
xor
push
push
ret
rol
mov
fadd
jbe
cmps
jle
dec
push
inc
ja
adc
inc
xor
adc
mov
xchg
pop
(bad)
jbe
cmp
mov
and
pop
dec
and
mov
sar
xchg
sub
nop
inc
aas
jp
sar
stc
and
mov
retf
xor
and
jbe
mov
test
inc
sub
pop
jae
ret
ja
xor
adc
in
or
cli
fcomip
aaa
pop
jp
sub
cmp
pop
sti
test
xchg
test
xchg
sbb
stc
cmc
or
pop
mov
cwde
xor
mov
xor
scas
and
in
pop
push
fmul
jp
jbe
lods
mov
xchg
fild
adc
inc
stc
shl
fstp
pop
push
push
jmp
xchg
cmps
xor
xlat
dec
out
ins
xchg
call
dec
fs
sbb
sbb
fmulp
sbb
mov
in
cld
cdq
mov
jl
dec
mov
adc
jmp
jp
add
lods
mov
arpl
call
mov
leave
mov
sub
rcr
sub
cmp
sub
fnsave
inc
cld
sub
xchg
gs
pop
mov
push
xor
pushf
fsubrp
mov
mov
in
fst
pcmpeqd
dec
test
iret
adc
sti
aas
inc
shl
add
adc
push
sub
mov
js
rcl
push
data16
imul
sti
xor
outs
aad
sbb
push
(bad)
loope
inc
push
push
les
dec
loope
test
(bad)
fdivp
dec
fidiv
inc
loope
(bad)
test
lods
sbb
mov
int3
sbb
pop
jg
pop
adc
out
retf
and
push
xor
sahf
push
sub
cdq
or
pushf
inc
ins
jmp
add
xor
mov
sbb
mov
outs
aam
enter
ret
xchg
sti
cld
std
mov
stos
test
pop
adc
xchg
dec
and
pop
cmps
add
sbb
adc
push
jmp
int
jmp
push
mov
dec
sub
dec
es
(bad)
in
es
mov
mov
mov
lea
or
jg
xchg
xchg
in
jbe
add
rcr
push
pusha
fcom
add
stos
inc
mov
js
stos
push
and
sub
cmp
mov
adc
sub
fild
dec
sub
jo
cdq
mov
ins
(bad)
stc
push
push
sbb
in
jmp
xlat
addr16
jne
test
std
int
mov
adc
and
dec
dec
ret
sub
hlt
ins
push
or
js
out
cli
rcr
lock
inc
mov
adc
and
and
iret
scas
retf
rcr
adc
les
xchg
mov
jo
sar
outs
fstp
sbb
jle
mov
(bad)
mov
xor
mov
shl
or
fxch
into
data16
pop
jmp
sub
js
fcmovnbe
test
(bad)
jo
mov
lea
imul
adc
mov
nop
xlat
adc
cmps
inc
adc
(bad)
sbb
mov
dec
push
fist
loope
xchg
data16
xor
cmp
cmps
xchg
in
out
ja
and
jl
rol
shl
enter
sub
jno
popa
mov
aad
pop
dec
sar
xchg
stos
cmc
mov
mov
cmp
ja
retf
stc
ss
or
pop
outs
pop
cmp
loope
std
or
retf
xchg
mov
clc
pop
and
cli
aas
retf
and
test
xchg
push
adc
sbb
mov
scas
pop
fdivr
arpl
cmp
add
scas
loope
(bad)
dec
cvtpi2ps
or
std
pop
or
push
or
pop
and
jno
nop
inc
in
inc
stos
mov
cmp
fcomp
mov
inc
jns
mov
in
mov
lods
inc
cmps
pop
xor
mov
fstp
int
imul
fcom
lods
fwait
sbb
push
or
repnz
dec
cwde
cmp
push
icebp
sub
cmp
adc
pop
out
gs
jno
dec
lahf
jl
jecxz
ret
fbld
fisub
dec
add
fistp
scas
or
movs
bound
stos
and
add
add
data16
stc
in
mov
daa
jnp
dec
push
nop
pop
call
shl
dec
mov
pop
or
cdq
mov
mov
xchg
pop
jnp
(bad)
stos
jmp
add
clc
sub
xchg
iret
pop
dec
out
jmp
add
outs
push
aas
mov
aam
mov
and
ret
add
inc
pop
push
cmps
(bad)
nop
imul
ffree
cdq
or
mov
nop
ja
push
adc
stos
out
adc
jns
out
sahf
mov
jmp
jb
xor
cdq
repz
dec
pop
movs
in
push
call
jnp
aas
mov
fidivr
push
mov
mov
adc
(bad)
jnp
mov
mov
xchg
push
aam
mov
xchg
cld
fist
neg
xlat
push
inc
mov
sub
cmps
scas
mov
popf
sbb
fadd
stos
adc
shl
sub
mov
out
sub
add
aaa
push
sti
jg
xchg
and
mov
inc
ret
gs
sub
mov
in
xchg
jecxz
pushf
inc
xor
cmps
(bad)
(bad)
rcr
jp
push
jmp
mov
sub
adc
out
imul
and
cmp
mov
cwde
mov
push
pop
or
pushf
clc
mov
fstp
mov
test
mov
mov
fild
and
out
or
fcomp
mov
inc
jmp
inc
rcl
sbb
inc
mov
out
xor
mov
mov
or
dec
stos
cmp
repnz
repnz
mov
push
scas
dec
xchg
les
mov
push
ins
mov
xchg
inc
iret
jbe
add
mov
cmp
in
inc
inc
sub
fisttp
lea
mov
sub
fld
fdiv
xchg
dec
sbb
push
int3
retf
mov
and
arpl
and
repz
push
int
gs
cwde
mov
xchg
sub
xor
shl
(bad)
loop
popf
pop
mov
inc
(bad)
shl
loop
(bad)
stc
int3
mov
xchg
jb
adc
pop
iret
cdq
call
dec
dec
cmp
adc
jecxz
mul
xchg
mov
mov
pop
sbb
stos
sub
(bad)
jnp
mov
jmp
scas
mov
add
push
adc
push
shl
adc
xchg
fistp
xor
adc
es
inc
test
shl
sub
test
jo
lods
jae
arpl
push
pop
je
sub
out
mov
loopne
dec
sub
add
bound
pop
(bad)
popf
enter
loop
out
sbb
pop
sub
lahf
imul
scas
icebp
movs
mov
stos
pop
in
ror
dec
test
or
mov
jno
dec
and
pop
dec
jecxz
dec
ins
or
pop
add
mov
ror
dec
or
pop
es
dec
setne
or
scas
lods
jge
pop
dec
sbb
repnz
retf
jmp
retf
lea
(bad)
repnz
pop
pop
push
loope
out
test
je
shl
out
out
stc
test
repnz
rcr
cs
dec
ror
dec
popa
dec
test
ins
push
clc
sub
mov
cmp
scas
ror
cmp
nop
sub
sti
movs
push
mov
mov
pop
xor
adc
push
std
or
sub
(bad)
in
dec
sbb
dec
fbstp
xor
pushf
add
in
pop
es
mov
std
xchg
(bad)
(bad)
ja
js
sti
and
jmp
jle
push
xchg
pop
xchg
sub
lock
out
out
mov
popw
pop
jb
or
xchg
stos
inc
dec
dec
shr
call
rcl
mov
lods
mov
data16
inc
sbb
sahf
xchg
loope
add
cmc
mov
push
in
mov
pusha
fild
jl
in
sahf
cmp
push
add
adc
jle
xchg
xor
lds
sub
test
mov
push
mov
or
fs
sbb
dec
pop
data16
adc
adc
and
imul
inc
cwde
push
mov
daa
movs
push
out
xor
xor
add
xor
test
or
adc
sub
sbb
or
adc
dec
sbb
add
jp
sbb
jmp
mov
push
sbb
xchg
jp
or
fwait
stos
retf
xor
and
add
movs
jmp
pop
xor
xchg
cmp
fwait
sbb
add
push
gs
dec
cwde
jbe
fldenv
or
push
cmps
inc
test
pop
add
rcl
into
nop
cld
jmp
mov
test
mov
in
outs
jae
pop
(bad)
fst
dec
mov
loopne
out
retf
pop
not
push
imul
cdq
xlat
loope
into
mov
xor
dec
rol
adc
mul
pop
and
sub
xor
addr16
pushf
dec
sar
pop
inc
mov
test
lods
pop
inc
mov
jl
ss
pop
out
sbb
cld
xchg
fadd
cmp
dec
call
inc
pusha
int
(bad)
mov
in
movs
in
mov
and
ss
xor
xor
scas
fcom
push
mov
xchg
(bad)
mov
dec
or
push
mov
scas
(bad)
mov
add
mov
inc
push
dec
and
push
hlt
push
nop
inc
pushf
sbb
mov
and
mov
mov
mov
cli
inc
test
shl
lock
cmps
inc
jp
adc
mov
je
pop
iret
shr
sbb
and
(bad)
xlat
pop
sbb
(bad)
loope
cmp
mov
sbb
jnp
jmp
xor
mov
stos
repnz
fisttp
jecxz
mov
push
pop
cmps
loope
sub
(bad)
or
stos
bnd
fs
mov
cmp
pop
(bad)
push
cmp
sub
stos
sub
imul
das
and
movs
mov
or
mov
mov
adc
xor
push
xchg
ins
mov
fwait
loope
mov
iret
in
ss
js
inc
inc
or
cmp
mov
jmp
mov
call
add
fdiv
out
imul
push
out
jo
add
and
jbe
cmp
pop
cmp
sbb
sub
fdiv
mov
xchg
stos
mov
test
clc
push
stos
sbb
adc
pushf
(bad)
shl
je
jnp
imul
cwde
sub
imul
addr16
cmp
hlt
cmc
push
push
adc
pop
jbe
in
pop
ds
jae
pop
pusha
mov
fimul
enter
out
fcom
movs
adc
add
jecxz
or
mov
sub
loope
xchg
and
aaa
addr16
jecxz
jge
pop
out
cmp
mov
sub
rcr
into
cmps
jnp
lods
cwde
les
in
mov
shl
frstor
adc
mov
ds
dec
mov
shr
push
dec
and
std
cmp
les
or
or
pop
mov
popa
fadd
cdq
inc
xchg
push
int
(bad)
pop
mov
push
ret
cmp
ds
add
aas
or
mov
xchg
pop
pop
or
fstp
lock
mov
jg
retf
ret
inc
mov
push
lods
pop
cmp
(bad)
dec
and
sub
cmp
hlt
call
fsubrp
mov
scas
stos
fmul
pop
aas
xor
push
scas
std
xchg
adc
jle
push
xor
pusha
push
call
sti
std
(bad)
ins
daa
movs
sbb
mov
jo
jp
aam
dec
xchg
je
popa
xchg
and
or
shr
sbb
jbe
and
or
mov
fadd
ret
adc
loopne
jns
push
ss
mov
push
sub
sub
fwait
pop
call
ins
pop
and
jne
push
push
fsub
aad
mov
cmp
rol
(bad)
push
mov
fisttp
lea
stc
push
xor
test
shl
inc
pop
cmp
sub
rol
cli
sbb
sti
daa
lds
int3
push
pop
add
out
mov
retf
sub
jae
bound
mov
repz
movs
sub
leave
sub
xor
(bad)
into
out
aad
cmps
mov
int
ror
(bad)
push
test
in
int3
fadd
or
aam
mov
pop
cld
in
mov
xor
cld
pop
sbb
pushf
mov
sub
shl
loope
mov
xlat
(bad)
mov
and
int3
add
rcl
xor
inc
stos
jo
cmp
xchg
out
shl
fwait
mov
lock
(bad)
and
mov
xchg
sbb
mov
in
fsub
std
push
add
jp
test
stos
in
sub
fst
pop
jne
cmps
imul
xlat
in
xchg
push
mov
push
stos
pop
jb
lods
mov
int3
inc
cdq
xchg
test
inc
push
pop
out
xchg
addr16
retf
sar
out
loop
add
xor
sbb
dec
icebp
push
xor
xchg
scas
ja
out
inc
ds
and
fdivr
div
cmp
imul
push
jne
cmc
shr
mov
(bad)
mov
pop
mov
call
jb
push
push
cli
rol
mov
stos
xor
retf
movs
loopne
mov
imul
sbb
xor
or
inc
jne
push
mov
cmp
and
sar
sub
inc
dec
loopne
adc
or
je
mov
(bad)
popf
mov
(bad)
call
add
inc
xchg
cmps
ins
pop
sub
and
pop
and
(bad)
dec
dec
pop
lods
dec
fcom
sbb
leave
pop
jp
mov
pop
lods
clc
loop
add
ss
clc
sub
out
out
out
fcom
mov
push
test
adc
and
gs
clc
movs
jp
push
pusha
scas
xchg
jbe
push
nop
(bad)
jecxz
in
sar
je
inc
and
bound
push
dec
dec
call
sbb
ins
scas
add
jne
xchg
cmp
xchg
cmp
(bad)
les
fwait
in
xor
xchg
imul
repz
repnz
mov
cdq
aam
ss
adc
ja
(bad)
mov
adc
call
fild
xchg
jnp
mov
add
in
and
jb
jbe
mov
arpl
mov
js
dec
repnz
or
ret
paddb
or
fwait
mov
aam
sahf
in
ficomp
adc
push
xlat
jb
jae
call
sub
jle
mov
cs
push
in
sub
pushf
xchg
mov
sbb
pop
pop
mov
mov
sbb
push
xor
pop
rcr
fadd
test
jecxz
shr
jns
sahf
xor
lea
xchg
addr16
dec
and
or
cld
mov
adc
(bad)
fadd
and
movs
into
jg
add
push
add
inc
dec
out
inc
mov
aas
inc
pusha
add
or
cdq
push
sub
xchg
shr
and
leave
jbe
add
test
xchg
lods
nop
stos
daa
movs
xchg
movs
mov
ins
in
div
or
adc
out
inc
sbb
(bad)
xlat
arpl
aaa
loope
cli
div
test
cwde
nop
call
mov
(bad)
iret
loope
cmps
xchg
dec
sub
popf
jno
(bad)
shr
das
jp
and
int3
jp
popf
ss
cmp
sub
mov
frstor
push
mov
or
jmp
ins
mov
out
clc
aam
imul
mov
sti
hlt
pop
adc
das
mov
mov
jl
sti
loope
in
pop
or
xor
adc
mov
mov
hlt
cld
aad
pop
jns
nop
add
and
push
pop
aaa
add
push
jge
mov
cld
ror
shr
jbe
mov
inc
dec
mov
mov
shr
push
loop
mov
xchg
imul
addr16
pop
or
inc
or
bound
xor
hlt
adc
enter
outs
popa
push
sets
cmp
jmp
bound
or
push
xchg
mov
stc
pop
jmp
stos
cmp
mov
jbe
mov
out
cmp
xor
cmp
dec
dec
or
into
es
sahf
clc
xchg
mov
pop
sbb
sub
cs
das
in
jae
aad
lock
in
pop
rcl
xor
mov
jns
call
in
push
and
inc
hlt
fnstenv
cdq
call
mov
rcr
enter
and
das
mov
and
jae
fwait
pusha
xchg
js
push
out
add
pop
dec
push
cli
std
sbb
(bad)
lahf
and
xor
adc
lea
xchg
loop
int3
inc
add
xor
test
dec
sbb
js
adc
adc
push
mov
jp
mov
scas
mov
mov
jecxz
out
pop
fistp
cmp
pop
push
outs
cmc
or
sbb
mov
aas
stos
mov
mov
arpl
clc
outs
fnstsw
movs
push
mov
sbb
stos
test
jmp
push
in
xchg
iret
outs
mov
dec
push
test
inc
mov
into
loopne
addr16
mov
cmp
ret
dec
mov
xchg
adc
call
nop
ja
in
pop
cmp
sbb
jb
mov
jb
ror
sub
jg
fisubr
inc
jge
mov
or
mov
mov
pusha
outs
or
jnp
adc
in
ror
or
pop
mov
leave
xchg
lods
mov
mov
into
hlt
in
hlt
mov
mov
jmp
cmp
cmp
xchg
jmp
xor
cwde
pop
mov
and
icebp
(bad)
fdiv
jp
and
js
jno
cmp
iret
js
dec
xchg
sbb
add
int3
jg
icebp
pop
imul
add
shl
xchg
cmc
xor
inc
xor
fnsave
jmp
xlat
xor
and
xchg
adc
cmc
cmp
push
xchg
das
retf
popf
inc
sar
int3
mov
pusha
mov
mov
mov
std
pop
sbb
push
shl
add
hlt
pop
mov
mov
out
and
push
sbb
fucom
movs
add
repnz
rol
xor
loope
or
and
lahf
dec
mov
movs
pop
scas
push
mov
xchg
mov
cmp
xlat
cmp
dec
jmp
jno
push
xor
in
push
or
(bad)
popf
loop
arpl
jnp
(bad)
jae
xchg
loop
xchg
fisttp
pop
ffree
or
dec
mov
dec
adc
leave
mov
jae
push
cmp
xchg
cwde
sbb
cdq
shl
(bad)
cmp
mov
adc
outs
mov
jae
hlt
push
pop
push
dec
jbe
sub
adc
es
mov
aas
shl
pusha
and
test
aaa
xchg
inc
jp
inc
test
dec
mov
int3
call
out
inc
fs
loopne
fdivrp
sbb
cmp
or
(bad)
cmc
daa
lea
mov
push
mov
bound
add
sub
add
fistp
push
jb
sub
popf
fldenv
add
sub
gs
xchg
test
loope
int
mov
pop
call
mov
cmp
inc
push
pop
mov
sbb
shl
dec
inc
les
fcomp
xor
mov
mov
rcl
lock
push
jge
and
xor
adc
mov
and
clc
push
pop
fist
add
pop
push
enter
jmp
jmp
push
cli
shl
aad
mov
ja
out
xchg
inc
jl
cmps
lahf
inc
dec
mov
imul
mov
push
movs
(bad)
out
mov
add
shl
xchg
xor
jp
sbb
jecxz
push
mov
mul
xor
(bad)
cmp
push
jge
das
int
lahf
push
loope
mov
repnz
leave
and
dec
in
loopne
mov
in
movs
cmp
fwait
xchg
cmp
jne
jge
cmp
popf
adc
ss
sub
xchg
push
outs
jb
lods
sbb
in
adc
dec
mov
push
test
pop
xchg
imul
lahf
lods
out
std
shr
(bad)
or
mov
repz
stos
xor
or
jb
pop
mov
out
sub
shr
into
jne
gs
pop
dec
fld
sbb
hlt
mov
cmp
in
fld
rcr
ror
mov
push
fwait
(bad)
or
push
mov
pushf
ins
push
and
xchg
pop
fsub
sbb
stos
push
add
inc
test
movs
xor
or
and
push
cmp
popa
imul
js
cs
pop
add
pcmpgtd
test
fwait
mov
xchg
adc
mov
fimul
add
adc
pop
jmp
out
pop
daa
test
outs
mov
ret
scas
clc
int3
dec
sbb
stos
das
jecxz
repz
js
dec
push
add
pop
sahf
dec
xlat
addr16
cmp
movs
repz
in
je
sbb
or
inc
mov
test
push
(bad)
mov
push
push
data16
jp
and
cmps
outs
sbb
sub
jl
push
and
outs
stos
daa
sub
lods
xchg
dec
sti
repz
mov
pusha
mov
jno
mov
sahf
jp
lock
dec
scas
xlat
es
movs
cmp
scas
fwait
call
dec
push
aad
inc
push
and
int3
mov
jg
jecxz
stc
sbb
dec
xchg
ins
fcom
sbb
ja
hlt
push
mov
hlt
out
jno
ins
je
and
mov
inc
ja
loope
(bad)
adc
push
or
setl
cmps
pushfw
xor
jge
cmp
fwait
push
cwde
and
loop
jmp
aad
nop
fdiv
aam
jne
dec
scas
mov
dec
cmp
imul
frstor
imul
and
xlat
jl
xchg
retf
fild
repz
dec
scas
mov
inc
cdq
enter
popf
xchg
pop
repnz
pop
dec
adc
and
xchg
stc
xchg
popf
jp
leave
ret
lods
fcmovnbe
lea
mov
push
out
or
mov
pop
int3
add
bound
mov
xchg
push
int
pop
std
cwde
popa
int3
inc
or
es
xor
div
stc
mov
std
sbb
je
ficomp
add
(bad)
mov
sbb
jecxz
mov
imul
loop
push
mov
push
mov
add
jno
sub
jae
pop
xchg
sbb
inc
push
sub
xchg
sti
dec
mov
aaa
out
lods
hlt
imul
inc
xchg
enter
outs
out
mov
dec
inc
cs
pop
test
mov
addr16
or
aaa
inc
(bad)
jmp
mov
sub
jb
popf
ret
ror
shl
pop
aad
rol
fwait
mov
adc
ret
into
mov
(bad)
and
or
enter
adc
jno
mov
cmp
cmps
pop
sub
pop
mov
mov
cmp
jb
ins
sub
mov
dec
fldcw
das
and
push
(bad)
and
ins
mov
lahf
mov
fcom
sahf
inc
xlat
push
test
add
jge
fs
cdq
inc
rcr
inc
fs
xchg
inc
jae
push
movs
xchg
(bad)
and
(bad)
sahf
add
add
cdq
test
or
dec
addr16
cmp
jmp
mov
into
imul
mov
add
dec
mov
int
or
sbb
sub
mov
addr16
dec
mov
dec
cmps
inc
mov
call
dec
push
ins
xchg
or
push
repz
mov
adc
das
ret
lods
xor
jg
fisttp
je
push
dec
push
push
bound
jg
stos
fsubr
outs
test
gs
stc
(bad)
xor
not
mov
dec
cli
imul
sar
in
jl
(bad)
pop
jmp
call
mov
inc
cmps
ret
xchg
adc
cmc
in
lods
comiss
cdq
dec
mov
mov
shr
lea
es
sahf
pslld
pushf
ja
mov
sbb
(bad)
jecxz
je
fwait
mov
call
ins
dec
cdq
stos
outs
sub
jae
inc
xchg
imul
mov
imul
fsubrp
push
push
lahf
enter
jbe
rol
pop
and
movs
jmp
xor
pop
jb
push
in
push
aaa
sbb
lods
fcmovnu
adc
in
xchg
repz
mov
xchg
clc
push
cwde
jo
cmovns
inc
sub
jne
jle
mov
jne
cmp
add
ret
sbb
sub
cli
scas
cli
bswap
lea
and
addr16
repz
jge
cmp
imul
outs
in
sti
mov
push
out
arpl
inc
push
int
pop
jno
dec
push
dec
and
adc
aaa
div
pop
lods
mov
xchg
test
cli
pushf
mov
adc
mov
dec
imul
imul
pop
mov
xor
(bad)
nop
mov
jne
fisubr
sub
pusha
inc
push
add
(bad)
push
inc
mov
andps
mov
add
pop
shl
aaa
mov
xchg
arpl
enter
xchg
aaa
in
in
ss
inc
sahf
mov
pop
js
xchg
shr
jle
arpl
jg
pusha
and
cdq
fimul
pop
jle
dec
xor
inc
xchg
ins
ror
mov
shld
int
sahf
lahf
rcl
jg
xchg
lock
sub
ins
jl
and
out
or
jg
add
lods
xor
adc
retf
loope
jl
popf
(bad)
fidivr
and
ins
arpl
push
mov
xlat
sbb
mov
pop
and
sub
xchg
ficom
mov
inc
je
mov
retf
and
cmps
sti
push
shl
(bad)
bound
test
lock
stos
push
mov
loopne
rcr
adc
jb
push
jno
mov
paddq
mov
int
ror
(bad)
imul
arpl
pop
xor
sbb
shl
adc
push
leave
std
cli
mov
and
mov
nop
cmp
imul
sbb
pop
das
push
sbb
mov
fild
imul
mov
jl
jp
sbb
push
ret
ror
lea
jl
push
in
xchg
shl
dec
pop
nop
loope
jmp
adc
lods
and
push
jb
ret
mov
retf
pop
jmp
dec
std
add
mov
ja
mov
xchg
push
mov
ret
(bad)
aam
jg
push
jle
xor
call
pushf
lds
pop
mov
sub
xor
adc
icebp
inc
(bad)
rcl
stc
pop
ds
movs
or
rol
push
ins
sub
hlt
out
xchg
cmps
xor
jno
pusha
xchg
mov
sbb
mov
cmp
cmps
push
sub
out
sar
mov
rcl
outs
xor
retf
xchg
movs
lods
mov
test
loop
or
rcl
push
in
inc
and
push
cmp
popa
jecxz
xchg
aas
outs
scas
jmp
add
in
pop
pushf
movs
cmps
aad
push
or
scas
push
sub
xchg
push
mov
and
xlat
hlt
cmps
out
push
in
sub
xor
adc
adc
inc
mov
cmp
outs
test
mov
test
out
scas
jne
(bad)
gs
dec
loopne
ins
sub
add
or
aam
aad
pushf
lahf
push
lods
daa
inc
test
sbb
mov
lods
adc
jo
fiadd
push
mov
fs
movs
pmaxsw
push
push
xchg
xor
ror
sub
mov
das
inc
in
leave
fild
ds
jp
pop
js
dec
inc
fwait
not
mov
test
adc
jno
pop
mov
ins
in
loopne
and
aas
arpl
xchg
gs
or
mov
inc
retf
in
jbe
jnp
xor
int3
stos
add
cmp
cmp
sbb
adc
and
push
ss
lea
inc
jle
inc
fist
(bad)
mov
sub
jg
pop
es
jbe
ins
jno
cmp
mov
(bad)
push
sub
push
dec
mov
dec
sub
dec
test
into
adc
jmp
iret
out
and
nop
sbb
push
mov
(bad)
push
mov
push
lods
fidivr
and
mov
imul
sbb
sub
cmp
aad
out
test
push
and
imul
pop
dec
cmp
sub
loopne
mov
pop
sub
mov
cwd
mov
push
mov
or
fild
jnp
push
sub
movs
xchg
sbb
push
and
ins
arpl
mov
adc
ds
cmp
rol
mov
add
sub
jp
xchg
es
mov
cmp
cmp
mov
fst
xchg
popa
xchg
sar
sar
mov
inc
sbb
jmp
inc
test
mov
dec
xchg
in
daa
div
ja
sub
mov
or
xchg
xor
test
xchg
and
mov
mov
cmps
jmp
add
lods
scas
mov
inc
popf
dec
push
jb
nop
sub
sbb
scas
pop
aaa
cs
sbb
imul
out
sahf
aam
push
in
imul
pop
jmp
pop
lea
pop
int3
sahf
and
sub
cs
xchg
dec
jb
ins
stos
mov
mov
cmc
retfw
or
cmc
retf
mov
lods
mov
(bad)
jne
jg
pop
jnp
addr16
pop
in
pop
fst
and
test
stc
mov
and
mov
mov
xchg
push
sar
inc
mov
neg
xlat
aaa
cmp
xor
mov
fucom
mov
and
fimul
ror
mov
shl
xchg
xchg
push
cmp
scas
pop
loopne
mov
mov
leave
(bad)
jge
movq
js
inc
xlat
pop
cmp
and
imul
cmp
inc
jl
push
in
adc
imul
loop
js
cmp
mov
ds
push
mov
repz
mov
add
mov
push
or
pop
rcr
test
(bad)
mov
pop
cdq
call
mov
mov
ret
aas
ror
cli
out
add
pop
or
pop
imul
cmc
sub
jb
mov
xchg
das
mov
dec
shr
aad
pop
das
xchg
dec
inc
ret
cmp
and
sub
or
fmulp
mov
fiadd
mov
pop
pavgb
rep
xchg
pop
leave
mov
push
sbb
cli
ins
ror
int
jne
inc
or
xchg
xchg
pop
ins
std
xchg
cmp
mov
push
das
push
push
js
jb
test
or
rol
and
in
pop
shl
add
xchg
jns
mov
and
pop
push
inc
fisub
pop
repnz
push
push
jmp
call
fdivr
(bad)
out
add
mov
adc
mov
pop
in
cld
daa
bound
add
mov
out
pop
stc
push
push
cmp
adc
fist
sub
inc
push
mov
xor
jo
cmp
retf
or
lahf
cli
mov
shl
add
cmp
rcl
hlt
mov
dec
sti
jnp
xlat
xchg
pop
mov
mov
pop
(bad)
js
cmp
mov
addr16
inc
dec
adc
jp
cdq
in
mov
mov
mov
pop
push
xchg
add
xor
pop
jnp
mov
cld
xchg
push
dec
repnz
sbb
in
int
xchg
dec
push
mov
mov
nop
lock
ret
sahf
sub
sti
fwait
(bad)
and
cli
and
xor
cmp
push
(bad)
sub
ja
mov
icebp
aas
shr
jmp
cmp
sti
inc
push
adc
aam
xchg
push
push
sub
fwait
add
shl
pop
repz
ror
cmp
xchg
inc
sti
aam
out
adc
div
sbb
cs
lods
pop
iret
lds
aas
jae
aam
add
xlat
rcr
jbe
push
(bad)
pop
inc
icebp
(bad)
and
ret
sbb
test
sbb
inc
outs
inc
dec
xor
daa
aad
xchg
cmp
xor
std
call
mov
aam
enter
outs
pop
and
in
neg
inc
sbb
outs
and
and
inc
adc
aam
pusha
or
inc
in
and
xor
fcom
repnz
test
push
jge
lahf
mov
out
out
pop
daa
fcmovnb
(bad)
scas
into
in
ret
rcl
sar
cmp
cdq
cmp
mov
cmp
adc
jecxz
mov
ss
or
dec
jmp
and
daa
or
sub
sub
gs
into
shl
cmps
mov
jne
mov
jne
jmp
pop
add
sub
iret
(bad)
lahf
mov
call
mov
fisttp
inc
stos
lds
dec
xchg
or
add
lods
mov
loope
call
push
xrelease
in
adc
inc
push
les
sub
add
call
dec
cmps
mov
rcr
stc
mov
aam
loopne
std
inc
aad
mov
(bad)
hlt
dec
mov
lds
outs
jp
jmp
push
xor
retf
ror
fwait
loopne
cmp
mov
push
jecxz
add
or
bound
jae
push
sbb
mov
jbe
imul
(bad)
out
dec
loop
stc
mov
outs
int3
jg
imul
enter
add
jl
mov
xchg
jmp
mov
mov
push
js
and
inc
imul
jg
sub
xchg
je
cmp
jno
push
add
xor
cmp
lea
fcom
mov
loopne
popf
jno
or
repz
mov
test
mov
adc
jns
push
mov
pop
dec
mov
xchg
stos
push
popa
int3
(bad)
jo
fwait
mov
and
fimul
pop
mov
push
jb
ret
ret
push
fadd
(bad)
jae
test
jo
jmp
sbb
push
dec
mov
push
mov
jbe
mov
mov
popa
daa
das
fcomi
adc
jne
dec
mov
rol
das
cmp
xchg
adc
cmp
cmp
stos
das
cmp
jmp
lock
clc
sbb
or
sbb
stos
scas
mov
and
rol
cmp
pop
leave
sar
push
imul
daa
dec
pop
jns
call
mov
rcl
jecxz
pop
sbb
cmc
rcr
or
pusha
lods
pushf
xlat
retf
cwde
cwde
mov
mov
fadd
js
mov
movs
cmc
outs
mov
mov
push
in
out
sub
push
mov
int
cli
push
xchg
stos
loop
test
push
shr
add
daa
and
(bad)
clc
jge
lock
clc
ficomp
add
push
js
inc
push
mov
jmp
or
pop
mov
aad
cmp
xchg
int
sbb
sub
cli
or
jmp
in
pop
xor
jecxz
cmp
inc
cmp
ins
mov
ret
mov
into
clc
or
push
mov
shl
aas
enter
inc
jae
sub
lea
dec
je
pop
ret
add
adc
add
xchg
cmp
mov
test
and
shr
mov
xchg
pop
mov
xchg
adc
sbb
stos
inc
leave
push
inc
xchg
cs
and
push
call
dec
ret
(bad)
and
bound
ins
dec
push
pop
addr16
cmp
dec
nop
jl
xchg
popf
and
stos
mov
lahf
fisttp
or
dec
dec
mov
push
sbb
shr
jno
das
mov
xchg
dec
sub
mov
and
inc
mov
jne
inc
(bad)
pop
or
inc
push
jmp
jecxz
ror
push
push
lahf
cmp
inc
mov
or
(bad)
call
mov
data16
ret
je
and
popf
test
push
mov
daa
inc
push
xor
push
(bad)
stos
sbb
xor
ss
xchg
add
out
popf
aad
test
inc
test
xor
std
call
es
sub
cdq
push
cmp
outs
push
in
or
xchg
js
cmp
test
scas
mov
fisub
scas
ror
std
push
in
test
mov
xor
pushf
les
jl
and
jo
xchg
mov
xor
pushf
pop
jae
call
mov
cli
or
adc
fdiv
fldenv
stc
outs
test
sub
ror
lock
jecxz
xor
push
cmps
and
mov
lea
add
mov
stos
mov
vmovntps
div
push
mov
mov
dec
add
out
dec
xor
xchg
mov
mov
sub
stos
jae
push
add
pop
adc
outs
scas
jae
retf
ss
and
cmp
(bad)
jmp
out
push
sbb
movs
mov
cmp
inc
scas
(bad)
in
jp
pop
ret
mov
out
or
jl
xor
mov
or
sar
push
adc
lds
and
fidivr
push
aas
push
adc
repz
mov
xor
add
cli
adc
or
adc
or
dec
rol
(bad)
fimul
aas
xchg
fst
mov
cmp
mov
ret
or
popf
loopne
jle
iret
in
icebp
jnp
sub
ret
push
mov
leave
out
mov
ins
jecxz
mov
ins
mov
xchg
enter
dec
fldcw
dec
mov
test
xor
jmp
push
mov
nop
in
in
push
(bad)
popf
adc
call
fwait
mov
sbb
(bad)
stos
mov
cmps
dec
pop
push
xor
dec
xchg
cmp
sbb
push
clc
push
popa
clc
jae
jmp
lahf
enter
pop
and
scas
cmp
mov
call
push
push
bound
push
stc
call
ret
cmp
xor
jne
int
ins
ror
mov
sti
push
push
jmp
mov
dec
arpl
jns
pop
adc
sbb
sar
jge
and
dec
stos
test
xor
push
scas
(bad)
adc
inc
xchg
xor
shr
cwde
mov
mov
adc
jl
cmp
pushf
dec
test
inc
and
xor
pushf
push
cli
dec
in
sbb
loop
pop
mov
mov
cmp
repnz
add
push
ret
ret
cmp
and
xor
jo
call
add
add
push
xor
(bad)
imul
(bad)
mov
icebp
addr16
or
dec
int
pop
mov
call
test
arpl
pushf
jnp
push
daa
push
mov
jbe
dec
push
add
sets
jo
ins
push
scas
in
jecxz
cdq
adc
retf
scas
and
enter
dec
pop
fldcw
popa
je
inc
sti
mov
dec
bound
scas
add
xor
sbb
and
dec
adc
test
push
or
or
sbb
push
idiv
xchg
dec
arpl
lock
js
and
mov
inc
ins
lock
fimul
jmp
inc
leave
(bad)
pop
std
pop
mov
imul
cmps
jmp
xchg
dec
push
mov
inc
push
ja
shr
add
mov
push
pop
lds
scas
lods
enter
mov
dec
leave
ret
or
pop
jmp
scas
sbb
in
jns
add
mov
mov
scas
shl
pusha
or
cwde
(bad)
cmp
aas
(bad)
sbb
mov
jno
xor
lahf
(bad)
loope
sar
or
bound
das
loope
mov
fmul
push
mov
push
add
sar
shl
mov
xor
aas
or
jmp
shl
mov
mov
mov
popf
enter
dec
xchg
cmps
sbb
dec
cmps
pop
jecxz
mov
cmp
adc
cmp
les
inc
jecxz
or
jns
dec
push
push
mov
imul
das
dec
test
(bad)
(bad)
mov
xor
out
pop
(bad)
clc
xchg
stos
mov
xor
into
dec
in
test
xchg
je
movs
and
(bad)
loopne
pop
scas
sbb
pop
mov
dec
idiv
fcmove
gs
addr16
adc
jmp
or
icebp
test
mov
mov
dec
popa
add
loop
ja
sbb
jnp
dec
cmp
sub
cmps
xor
int
pop
cld
call
pop
fdivrp
jne
test
sbb
cmp
cmp
lds
cld
and
ins
fdivr
push
adc
lahf
iret
add
inc
out
push
movs
cmps
clc
fcomip
inc
push
adc
aaa
ins
xchg
mov
test
xchg
fbstp
cmp
mov
shr
xor
cmp
xchg
mov
lahf
neg
into
out
dec
add
mov
popf
sub
aam
daa
and
push
jmp
cmps
pop
add
rcl
xchg
cld
pop
pop
(bad)
sbb
shr
(bad)
jge
loop
push
lods
jne
call
sub
imul
add
aaa
mov
adc
lock
adc
aas
xchg
les
clc
and
bound
out
sbb
mov
push
pop
bound
repz
clc
inc
scas
cmp
push
(bad)
cmp
into
stos
and
or
sub
and
lahf
push
xchg
rcr
pop
inc
dec
push
mov
stos
fmul
fcomp
in
mov
and
cld
in
popf
aam
sbb
adc
aaa
jne
inc
mov
in
cdq
pushf
sub
jl
fdivr
push
mov
mov
enter
ja
ret
pop
fdivr
test
into
xor
cli
bswap
jle
inc
xchg
sar
fldcw
shr
movs
cld
add
out
dec
rcr
or
dec
inc
gs
adc
repz
int3
call
and
rcl
jl
pop
cmp
or
daa
retf
pop
jg
inc
xchg
inc
jg
ficomp
sbb
cs
ffree
(bad)
aas
sbb
mov
cld
push
mov
push
(bad)
adc
push
(bad)
sbb
sub
jmp
mov
mov
fcmovnbe
inc
pop
test
jecxz
mov
inc
int3
leave
adc
fmul
inc
mov
add
addr16
repz
inc
(bad)
inc
pusha
mov
neg
cmp
adc
dec
adc
cld
lock
(bad)
fcomi
ins
pop
jbe
ja
cmovle
into
xchg
jecxz
sbb
pushf
xchg
out
pop
mov
cmp
xlat
push
stos
rcl
aas
sub
pushf
(bad)
bound
out
in
(bad)
cmovge
jb
out
jecxz
icebp
mov
push
mov
in
movs
mov
jmp
hlt
pop
cmps
(bad)
dec
or
add
sub
outs
xchg
or
sti
dec
mov
sahf
cli
sti
mov
shr
nop
jmp
les
xchg
adc
pusha
inc
cmp
sbb
and
cmp
ret
ds
push
cmp
or
fisubr
mov
mov
mov
jle
xlat
sub
mov
js
lahf
xor
loopne
out
movs
mov
call
mov
mov
ret
pop
mov
or
js
cli
cli
jmp
xlat
clc
mov
sbb
std
outs
mov
dec
jmp
inc
pop
addr16
retf
xor
xor
addr16
jle
or
cmps
jle
enter
add
(bad)
(bad)
in
cmp
out
or
xor
fldenv
pusha
add
or
push
sbb
shl
or
sub
mov
lods
cmp
imul
movs
sbb
out
mov
rcr
sub
sbb
in
gs
sub
test
arpl
rcl
xor
xchg
sbb
mov
mov
sub
std
daa
sbb
xchg
stos
(bad)
fist
inc
xchg
pop
fild
in
mov
inc
inc
not
pop
jb
mov
cmp
cwde
repnz
fnstsw
sub
fnsave
test
adc
mov
stos
mov
in
add
int3
jmp
push
mov
es
or
jae
push
sub
iret
mov
idiv
mov
lds
pop
pop
lea
or
and
scas
scas
imul
dec
cmp
lods
retf
sbb
in
adc
push
movs
js
scas
xchg
out
and
popa
scas
je
and
pop
adc
(bad)
jecxz
adc
dec
push
repnz
inc
pusha
call
lock
(bad)
adc
rol
pop
pop
add
xchg
jge
shl
sbb
aad
mov
xor
sti
outs
scas
push
(bad)
jo
cs
loopne
jbe
or
int
test
inc
div
xchg
cmp
rcr
cmp
je
inc
enter
in
mov
int
arpl
push
jmp
stc
mov
shr
mov
cmp
inc
scas
mov
or
(bad)
or
(bad)
jb
adc
ja
ds
mov
nop
dec
mov
mov
rcr
sbb
les
sbb
xchg
je
sub
ret
and
popa
xor
in
xchg
data16
or
add
cmp
data16
xchg
test
mov
pop
adc
mov
hlt
js
bswap
mov
movs
clc
xchg
pop
les
xor
outs
and
lods
repz
seto
jbe
bound
sbb
adc
ins
adc
mov
repnz
sar
jae
jmp
call
out
inc
sbb
das
adc
push
pop
ss
dec
sub
addr16
xor
sbb
xor
mov
mov
dec
add
xchg
hlt
in
sub
jmp
add
sub
imul
inc
cmps
bound
stos
mov
push
call
jnp
add
mov
dec
mov
lock
das
loopne
(bad)
or
cmps
add
inc
fsub
pop
ret
mov
and
xchg
and
cmp
and
adc
(bad)
jmp
in
neg
lods
xchg
aas
and
adc
sbb
push
ins
enter
repz
loop
xchg
fild
rol
stos
fnstenv
pop
and
pop
rol
shr
sub
clc
adc
and
call
adc
sub
sbb
aad
das
mov
cmp
sti
cld
cli
arpl
(bad)
push
fsub
out
jb
push
ss
dec
in
fwait
push
mov
push
inc
inc
xchg
movs
pop
ja
jp
jnp
test
lock
cli
jmp
lahf
jo
add
test
fs
jmp
ja
scas
mov
fadd
pop
dec
outs
(bad)
fldenv
cmp
push
xor
xor
arpl
xlat
xlat
fwait
cld
dec
(bad)
dec
mov
push
imul
outs
xor
test
sbb
push
cmc
js
fisttp
(bad)
dec
(bad)
in
movs
pop
test
adc
dec
cwde
sub
dec
pushf
fidiv
mov
das
retf
fwait
pop
jns
and
das
enter
xchg
push
or
sahf
(bad)
mov
xor
xor
inc
mov
test
popa
inc
jo
lock
xchg
fxch
jmp
pusha
jl
mov
repz
push
add
jno
in
(bad)
mov
and
cmp
hlt
adc
repnz
out
add
push
fild
push
xchg
sub
cld
nop
test
iret
cmp
xor
push
popa
aam
mov
pop
and
xchg
cmp
inc
xlat
or
in
jecxz
sahf
add
sub
pop
cdq
cwde
mov
cmp
fstp
adc
call
stos
outs
js
into
or
cwde
test
outs
pop
add
dec
mov
and
popa
iret
pop
vpsadbw
and
cwde
or
jg
adc
inc
scas
out
and
push
add
out
das
dec
cmps
fs
imul
les
push
and
icebp
push
adc
push
div
mov
or
jl
push
jmp
sub
push
mov
xchg
xchg
jb
cld
jmp
adc
push
xor
and
mov
stc
icebp
test
in
lods
rcl
aam
inc
fdiv
nop
fdiv
loopne
push
sbb
jne
mov
inc
sub
push
in
jns
cmps
sbb
pop
icebp
sbb
test
pop
push
xchg
ficomp
jmp
cdq
imul
dec
int
xchg
mov
mov
sbb
hlt
ja
fwait
jns
aam
push
je
lock
cmp
xlat
xor
int
jno
pop
mov
movs
cmp
ret
push
and
inc
and
inc
scas
add
mov
push
push
mov
xor
or
stos
iret
mov
cmp
jmp
mov
scas
mov
pop
cmp
xchg
jmp
mov
js
call
push
mov
stc
sbb
arpl
mov
mov
popf
je
xchg
mov
retf
(bad)
and
pop
ins
xor
xor
mov
in
and
movs
icebp
jo
cld
pop
mov
fild
sahf
cmc
add
sti
stc
adc
rol
mov
shr
rep
xchg
or
leave
leave
out
aam
and
jg
(bad)
mov
cmps
lods
xchg
add
sub
dec
sub
mov
push
mov
scas
bound
sbb
add
cwde
lock
scas
jecxz
sbb
psubusb
push
pop
cmp
jae
lea
out
imul
adc
out
(bad)
sub
mov
mov
enter
adc
jae
xor
imul
xchg
xchg
xor
or
je
sbb
imul
lea
sbb
sub
xchg
dec
(bad)
sub
stos
bound
int
call
and
fisttp
cli
lea
push
mov
pop
sbb
popa
inc
cdq
pop
xlat
loopne
and
jno
xchg
and
je
cld
push
push
aaa
pop
adc
or
pusha
stos
fs
ret
mov
ficom
fs
adc
sub
jmp
mov
sbb
loopne
jmp
fstp
repnz
dec
sub
in
popa
inc
and
pop
dec
shl
push
push
sbb
inc
loope
mov
cmc
repz
pop
arpl
or
rol
sti
jmp
(bad)
sub
xchg
gs
lahf
xchg
int
mov
push
jb
and
popa
fdivr
cwde
arpl
dec
sbb
xlat
xor
sbb
std
or
xchg
and
xor
mov
or
(bad)
jl
out
fwait
jl
sbb
cs
aaa
add
push
movs
aas
mov
stos
int3
lock
xchg
mov
daa
mov
xor
popa
movs
add
mov
dec
cmp
jl
dec
or
xchg
fidivr
pop
or
in
retf
push
inc
mov
test
stos
(bad)
hlt
mov
(bad)
dec
dec
add
jg
sti
cmps
push
jmp
xor
or
xchg
lods
enter
aaa
lds
xor
xchg
sub
test
loope
sar
push
inc
jg
test
hlt
call
inc
imul
and
jno
push
mov
rcl
ss
inc
jo
fstp
or
or
cmps
or
jnp
push
retf
jle
cmp
retf
and
dec
sbb
or
xor
fsubrp
fs
cmc
adc
aad
imul
xor
dec
les
lahf
neg
or
stos
mov
mov
out
xor
xor
pop
ja
jo
ror
sbb
and
sti
inc
loopne
dec
ret
jbe
mov
xchg
dec
mov
(bad)
bound
and
xor
jecxz
iret
mov
push
scas
cmps
fidivr
repz
xor
or
jb
or
dec
push
es
inc
or
das
mov
imul
pop
xchg
cmp
out
pop
mov
scas
cmp
pop
fsub
jns
jmp
sti
out
sbb
rcr
xor
arpl
add
sub
adc
jmp
arpl
inc
mov
sbb
xor
shr
bound
popa
stos
std
xchg
in
(bad)
pop
lock
mov
inc
jge
xchg
test
popa
popa
ret
scas
leave
test
or
loopne
popf
(bad)
and
push
push
fcmovnb
push
pop
sahf
in
mul
(bad)
and
xchg
rcl
cmc
aaa
pop
mov
adc
test
pusha
xlat
stc
outs
outs
fsincos
mov
push
xchg
sbb
icebp
xchg
mov
add
push
cmp
ins
scas
mov
or
stc
pop
pop
dec
cmp
loope
pop
enter
adc
call
cmps
(bad)
stc
pop
movs
mov
and
dec
stos
dec
ret
(bad)
inc
mov
push
rol
cmps
ffree
adc
mov
push
fistp
cmp
push
inc
and
bound
mov
sbb
nop
cmp
addr16
aaa
rol
fs
jecxz
or
jo
ins
push
test
cmps
loopne
push
scas
pop
(bad)
cmp
or
enter
dec
jp
jbe
jge
dec
stos
test
adc
or
shl
xor
jbe
or
mov
(bad)
jg
pop
inc
imul
push
xchg
add
cmps
pop
mov
mov
pop
ins
mov
in
jmp
pop
lock
push
and
aas
sub
pop
pop
sbb
call
mov
pusha
xor
cmp
(bad)
rcl
mov
retf
inc
xchg
mov
je
std
xor
push
retf
mov
mov
xchg
mov
div
add
xchg
sbb
cmp
int
aaa
imul
(bad)
shr
jge
ret
(bad)
pushf
jbe
mov
jmp
pop
aaa
push
leave
sub
cmc
add
or
iret
fstp
and
jl
pusha
(bad)
jae
outs
cmp
jle
ins
mov
test
pop
je
stc
loopne
pop
cmp
mov
cmps
mov
jge
call
and
fbstp
stos
jecxz
xor
(bad)
(bad)
pop
out
or
push
retf
adc
xor
pop
call
out
add
test
sti
pop
adc
jo
push
iret
push
mov
ficom
pop
xlat
imul
sbb
out
mov
popf
nop
mov
test
dec
mov
mov
(bad)
xor
push
test
jno
je
cmc
les
cs
mov
and
das
out
ss
call
jmp
pop
or
xchg
popa
lock
es
fsubr
ror
sub
adc
dec
xchg
fsub
rcl
int3
retf
out
cmp
test
pusha
(bad)
mov
out
cmp
mov
add
cmc
pop
or
push
or
push
nop
push
mov
push
cmp
retf
mov
(bad)
adc
mov
daa
into
addr16
in
adc
jo
pop
test
mov
and
repz
xlat
stos
mov
nop
sub
stos
es
push
and
inc
xchg
mov
sbb
ds
mov
loope
jmp
sbb
and
inc
sbb
jp
xor
call
movs
jb
shl
xor
adc
xchg
(bad)
imul
int3
sub
jmp
rcr
and
lea
or
jecxz
cmp
pushf
sub
dec
inc
cmp
bound
mov
sub
dec
in
mov
les
xchg
js
mov
(bad)
xchg
or
jge
fld
mov
adc
(bad)
mov
outs
adc
mov
or
jns
mov
inc
jnp
cli
adc
cmp
stos
lds
cs
(bad)
arpl
nop
cmps
aam
pushf
lea
mov
pop
dec
xchg
loopne
cmc
cmp
fwait
push
sub
aaa
jmp
pop
ins
cdq
mov
in
(bad)
aaa
add
dec
sub
adc
push
data16
test
cmp
jne
fild
fcomp
call
xlat
repz
loop
push
sbb
scas
shr
push
ss
ins
rcl
jg
or
idiv
mov
nop
test
pushf
mov
push
mov
ss
dec
das
mov
inc
jle
rcr
push
and
fs
push
cmp
sub
out
mov
mov
dec
loope
div
mov
or
jge
add
xor
mov
lock
mov
fcmovne
or
mov
pop
sub
cmp
mov
mov
pop
jl
mov
xor
jne
loop
fwait
rcl
cmps
xor
cmc
iret
xchg
xchg
and
jl
ds
or
push
pop
scas
push
xchg
push
jo
out
jecxz
in
lods
(bad)
mov
jns
nop
fsub
aam
pop
jbe
retf
jno
(bad)
pop
sbb
mov
mov
and
lods
jge
or
movs
div
out
dec
ss
mov
test
push
mov
add
push
scas
or
push
pmulhuw
xchg
gs
pop
iret
inc
xchg
dec
(bad)
jmp
imul
sbb
add
push
pop
mov
xor
bound
je
dec
sbb
lods
(bad)
push
push
xor
je
(bad)
and
imul
cli
mov
jae
lods
pushf
or
arpl
push
push
xchg
dec
push
out
mov
cmp
push
mov
shl
retf
js
(bad)
int
aam
mov
leave
xor
mov
fcomp
sub
xchg
mov
xor
out
mov
pop
jmp
stos
popa
cmc
test
dec
pusha
gs
lock
xchg
es
cmp
sub
push
fdiv
add
rcl
mov
push
xchg
ins
pop
jno
lea
test
push
xor
clts
sub
mov
sbb
repnz
xchg
into
loope
fbstp
or
mov
ds
jl
mov
mul
mov
cmp
hlt
(bad)
sbb
leave
pop
xchg
(bad)
cli
hlt
push
mov
mov
fisub
ret
lea
cmp
aam
es
aad
sub
das
rol
or
mov
xchg
and
jb
sub
daa
rcl
jne
cwde
cmps
xchg
xor
cs
or
and
inc
mov
dec
cmps
adc
push
lods
jno
jg
inc
call
adc
pusha
fwait
adc
pop
loop
push
cmp
call
mov
sti
sbb
mov
xor
pop
sub
fsubr
inc
ins
sub
inc
pop
out
pop
mov
push
xchg
arpl
into
(bad)
es
mov
loope
xchg
addr16
ins
jp
call
ss
sub
and
rol
mov
sar
out
shr
xor
(bad)
loopne
sub
lds
sti
in
pusha
pop
and
pusha
add
(bad)
xchg
dec
fs
xchg
sbb
push
pop
out
mov
mov
mov
inc
adc
enter
push
call
xor
cmp
test
scas
jae
push
fisubr
cmp
mov
adc
xchg
adc
dec
loop
fidivr
loop
clts
fisub
lea
stos
ds
add
fcomi
mov
jl
mov
push
ins
mov
mov
(bad)
je
jo
fnsave
sbb
sub
and
iret
or
loopne
daa
xor
rsqrtps
(bad)
lea
inc
leave
pop
in
ins
ret
mov
in
pop
mov
aam
stos
xor
out
inc
jl
adc
cmps
in
ja
jmp
and
cmp
inc
jns
and
mov
lods
xlat
push
call
push
sbb
iret
push
pusha
sbb
dec
(bad)
pop
lods
and
add
adc
push
mov
push
and
jae
es
cmp
lahf
inc
les
imul
jne
aad
arpl
cs
jne
test
and
mov
inc
lods
dec
lock
or
push
inc
inc
adc
aad
dec
pusha
scas
rol
in
pop
stos
pop
bswap
daa
or
rol
sbb
pop
hlt
lahf
add
pop
dec
cmps
mov
adc
pop
mov
dec
xchg
fcmovne
pop
pop
sub
in
inc
(bad)
out
in
es
mov
adc
cmc
sub
xor
mov
or
add
sbb
scas
into
or
mov
xlat
pop
es
ja
jp
and
int
shr
and
and
mov
in
sub
(bad)
cmp
cmp
mov
push
dec
inc
je
sbb
xchg
adc
lahf
xor
adc
repz
cmps
out
andnps
iret
cmp
cld
push
rcl
cmp
test
aad
shr
push
cwde
sub
fisttp
ins
inc
ins
push
enter
jmp
mov
cmp
pop
dec
outs
sub
pop
jns
xor
add
cli
sbb
cmp
mov
dec
out
test
test
daa
pop
shr
add
scas
xor
repnz
aaa
mov
sub
adc
test
daa
and
pop
mov
ffree
inc
es
int3
mov
mov
dec
aas
imul
loope
xchg
sub
or
jp
movs
clc
jmp
repz
jl
out
popa
aam
xor
inc
mov
outs
mov
and
jae
mov
and
add
in
inc
outs
lds
in
movs
shr
pop
repnz
loopne
adc
arpl
ret
stos
jg
mov
mul
imul
mov
cmp
mov
loop
xchg
aad
jecxz
xchg
stc
leave
xchg
inc
sbb
pushf
or
xchg
cmps
cmp
adc
mov
popa
push
mov
aas
sub
push
aam
out
cmp
das
ins
xchg
or
std
jle
sbb
mov
arpl
iret
xchg
mov
repnz
mov
pop
cli
lds
push
push
daa
sbb
pop
out
je
fnstcw
imul
xchg
jmp
push
stc
(bad)
sbb
mov
not
jecxz
dec
aaa
mov
add
sub
push
jmp
cmp
inc
jmp
and
ds
inc
push
movs
fistp
(bad)
into
add
fdiv
or
inc
ins
dec
xchg
rol
and
ins
jbe
jbe
inc
mov
xchg
cmps
sub
add
(bad)
enter
or
mov
ret
sar
and
loope
push
mov
mov
sub
rcr
mov
push
cmp
mov
push
and
shl
or
mov
fwait
inc
sbb
(bad)
adc
mov
ffreep
movs
xchg
int3
lods
mov
add
and
rcl
sub
popf
mov
pushf
mov
ins
stos
add
scas
pop
movs
leave
scas
aam
hlt
sub
ret
imul
je
jae
sub
je
and
pop
sub
scas
add
adc
xor
jge
icebp
iret
lods
jns
test
sub
or
add
pop
inc
xor
sbb
pop
in
jp
pop
dec
test
xchg
mov
pop
fwait
sub
fdivr
sub
in
inc
hlt
fst
fimul
loop
hlt
mov
scas
mov
adc
push
or
inc
scas
push
mov
test
jae
push
ss
mov
movs
sahf
loop
rol
stos
adc
mov
shl
add
lds
add
rcr
push
pop
mov
mov
push
sub
push
ins
dec
and
mov
stc
ins
or
popf
faddp
inc
les
mov
jne
stos
dec
push
aas
cld
test
and
mov
mov
ins
jp
cmc
jae
cmc
ss
repz
sub
je
mov
mov
hlt
push
pop
xor
and
dec
test
arpl
and
adc
xor
dec
int3
xchg
jl
rcr
test
mov
stos
mov
(bad)
and
dec
ins
pusha
or
popa
push
pushf
sbb
add
push
aad
push
or
xor
cmp
ins
inc
in
mov
dec
or
lock
cmps
mov
and
add
fild
inc
sbb
push
and
jmp
cdq
clc
rol
(bad)
inc
jg
aad
call
xor
mov
lahf
arpl
es
or
int3
xchg
jmp
sbb
(bad)
leave
sub
and
dec
xor
pop
inc
push
jns
and
inc
retf
fwait
pop
fisttp
adc
rcr
inc
shr
cmp
movs
outs
ins
bound
jg
adc
jno
push
cmp
xor
pop
ds
inc
jmp
push
(bad)
mov
mov
pslld
fistp
pop
(bad)
mov
gs
movs
cmp
mov
dec
movs
ins
mov
mov
in
stos
mov
or
jmp
sbb
mov
mov
popf
xchg
and
int3
mov
cld
shr
cmc
dec
popa
xchg
je
fsubr
fild
add
mov
fidivr
in
test
cmps
pop
cs
rol
rol
pop
sub
cmp
mov
inc
sbb
(bad)
mov
xor
cmc
push
mov
mov
ret
pop
sbb
lods
push
pusha
rcl
or
dec
imul
sbb
jmp
pop
into
sbb
pop
add
sbb
fmul
and
ins
sbb
test
mov
xor
mov
xchg
jle
ret
popa
pop
jnp
(bad)
jbe
stc
add
loopne
popf
(bad)
mov
cmp
cmp
not
push
adc
or
(bad)
xor
adc
jne
sbb
mov
mov
rcl
jl
mov
push
cmc
test
jmp
pop
pop
mov
repnz
push
adc
test
pop
adc
enter
cmps
daa
push
cdq
xor
fisub
cmp
push
inc
icebp
mov
loopne
out
mov
xor
leave
sub
mov
shr
mov
ror
xchg
adc
aas
rol
in
fadd
retf
push
div
arpl
sar
add
imul
xlat
and
mov
popa
in
inc
call
sub
or
pop
mov
lods
adc
pushf
cmps
fs
je
popf
jmp
mov
xchg
cmps
ret
push
jno
(bad)
mov
mov
push
push
fsub
inc
push
mov
addr16
xchg
adc
or
nop
cwde
sbb
adc
rcr
xchg
push
mov
mov
jmp
push
repz
push
mov
stc
arpl
fwait
inc
and
xchg
xchg
jae
sar
cmp
out
pop
or
xchg
and
xchg
and
mov
sbb
sbb
jb
and
stos
arpl
add
mov
arpl
xchg
or
xlat
imul
pop
and
adc
push
and
mov
int
mov
or
mov
aam
inc
sbb
jecxz
jb
scas
retf
add
adc
ror
(bad)
mov
test
jmp
inc
push
mov
pop
daa
fild
ficom
xchg
cli
or
xor
int
outs
and
and
or
arpl
mov
stos
in
adc
lahf
inc
add
ficomp
popf
push
(bad)
outs
pop
jno
cmp
jno
icebp
mov
push
call
inc
ror
sbb
mov
dec
or
jbe
arpl
jg
push
fwait
aas
push
test
aas
vpunpcklwd
out
mov
sbb
(bad)
repnz
ja
push
xor
shl
adc
or
fbstp
cmps
sub
stos
outs
dec
push
popf
je
jno
sbb
ror
xchg
mov
dec
inc
loopne
add
iret
sub
mov
icebp
and
cli
aaa
and
inc
jle
outs
or
or
mov
popa
or
or
fistp
sar
into
cmps
add
mov
gs
lods
jp
jbe
cmp
stc
push
mov
aaa
add
or
mov
sub
rcl
lock
mov
or
push
icebp
dec
pop
sahf
in
sub
arpl
mov
adc
fisubr
push
cmp
mov
push
push
push
cmps
mov
scas
add
xor
adc
mov
push
sbb
int
aad
std
and
xchg
mov
ficomp
outs
adc
cmp
aas
je
pushf
shl
hlt
inc
sti
inc
popf
inc
push
pushf
rcl
xchg
mov
push
cmp
loope
xchg
add
pop
mov
pop
out
add
(bad)
and
push
in
rcl
in
lea
fbld
xchg
xor
mov
and
cld
ss
rol
push
lock
sbb
test
hlt
jle
retf
fsubr
mov
dec
out
xchg
cmp
dec
inc
jo
and
sbb
repz
jmp
arpl
cmp
inc
sub
mov
loopne
push
stos
mov
ror
pop
daa
out
pop
lods
out
pop
mov
jmp
mov
xor
out
fstp
or
loopne
mov
ret
add
pusha
xchg
lock
outs
dec
dec
mov
mov
test
hlt
fisubr
iret
mov
pusha
mov
sub
dec
cdq
mov
pusha
xchg
icebp
lock
push
mov
pop
jl
xor
repnz
(bad)
or
aas
inc
movs
iret
mov
and
jg
jnp
repz
into
and
fld
mov
and
in
inc
pop
ror
sub
push
inc
pop
jp
icebp
imul
enter
adc
cs
pop
inc
mov
sahf
jmp
xchg
and
hlt
out
or
mov
call
add
ins
mov
imul
arpl
int3
xchg
pushf
or
add
inc
mov
leave
mov
aas
cmps
add
mov
add
push
inc
push
xor
inc
(bad)
popa
les
dec
in
ins
aam
in
and
cmps
call
das
(bad)
xor
dec
test
(bad)
jnp
pop
das
loopne
mov
inc
dec
rcl
std
outs
paddsb
pop
daa
or
(bad)
test
mov
aad
test
clc
jne
push
aad
xchg
adc
and
iret
and
nop
cmc
in
mov
adc
iret
mov
ret
in
mov
sub
(bad)
jmp
out
scas
int
bound
add
test
out
bound
jg
pop
jecxz
and
stos
or
add
lods
and
xor
imul
sub
xor
mov
adc
hlt
aaa
(bad)
sub
xor
sbb
ins
add
adc
add
and
jg
cmps
dec
lea
dec
and
test
sbb
mov
or
jl
adc
pop
test
cdq
xchg
pushf
xchg
fsub
mov
imul
stos
ret
out
imul
mov
rol
sub
lods
cmps
sbb
out
aad
lock
mov
sbb
scas
xchg
movs
imul
f2xm1
fadd
xor
fisubr
shl
addr16
out
pop
jl
test
xor
stos
lea
js
outs
push
aaa
jg
xchg
adc
out
pop
fild
inc
sub
and
mov
pop
push
xor
inc
retf
stos
or
popf
aaa
scas
das
sbb
add
imul
pop
std
lods
jle
fist
mov
sub
test
test
add
dec
mov
lds
dec
inc
fist
in
sub
in
shl
(bad)
push
inc
les
in
mov
popa
xlat
xchg
mov
push
out
xchg
imul
mov
(bad)
and
add
jmp
fdivr
cmp
push
dec
push
jno
outs
imul
cmp
add
jecxz
pop
pop
les
mov
mov
push
sbb
daa
mov
xor
and
dec
addr16
jle
fs
xor
sub
sbb
pop
jo
xor
mov
jl
add
mov
inc
jns
add
pop
in
ja
or
shr
dec
and
inc
fs
jb
sbb
adc
sti
fwait
jae
(bad)
sub
dec
movs
fwait
icebp
push
pop
aas
jb
int3
ins
inc
push
jp
jl
mov
loopne
xor
or
test
fnsave
inc
xor
push
iret
xor
(bad)
jnp
scas
adc
rcpps
in
pop
scas
lods
adc
mov
mov
pmullw
movs
bound
test
and
ret
mov
inc
jmp
(bad)
mov
add
(bad)
and
jae
mov
adc
lock
icebp
adc
inc
pop
xchg
inc
xchg
sbb
add
or
imul
dec
pop
pop
and
gs
inc
icebp
(bad)
push
in
cli
push
xchg
clc
mov
retf
xchg
ret
test
lds
ret
call
stos
out
xchg
repnz
fldenv
mov
movs
push
add
in
das
fidiv
repz
push
mov
inc
add
lods
push
pop
loop
mov
fs
(bad)
adc
pushf
in
mov
(bad)
mov
popf
jb
(bad)
adc
movs
in
mov
inc
pusha
dec
popa
or
shl
cwde
mov
ja
pop
in
shl
xor
mov
dec
sar
(bad)
dec
xchg
xchg
cmp
cmp
mov
cli
mov
jbe
fmulp
mov
std
fdivr
mov
sbb
xchg
scas
jmp
in
(bad)
fnstsw
shl
jae
xor
stos
mov
or
ret
add
mov
fs
hlt
sub
or
or
inc
movs
cmp
pusha
fisttp
pushf
xchg
pop
pop
mov
enter
mov
(bad)
and
ror
or
lds
mov
into
rcr
pop
loope
cmc
ret
sub
fmul
add
bound
cmp
and
dec
leave
dec
jbe
cmp
xchg
in
rcr
mov
sahf
scas
xchg
xchg
fucom
rcr
pop
jmp
bound
mov
mov
cmp
cmp
jmp
scas
sub
mov
retf
pop
mov
aaa
pop
in
dec
jae
xchg
arpl
or
mov
lock
lds
movs
out
xor
dec
sub
jbe
cmc
mov
pop
xchg
mov
jecxz
mov
dec
(bad)
int
repnz
hlt
nop
jmp
fcomp
and
dec
xchg
fsubr
pop
inc
fucomi
pop
loope
fstp
push
icebp
sbb
xlat
daa
clc
mov
mov
call
cmp
or
xchg
cdq
xor
sbb
(bad)
pop
shr
mov
aad
sbb
lea
cwde
push
add
inc
(bad)
cwde
push
jno
call
pop
adc
ss
stc
cld
stos
iret
clc
fisub
in
cmp
lahf
test
int
sub
push
inc
jb
dec
and
ins
xchg
inc
scas
and
das
cmp
test
fadd
dec
out
jnp
ficomp
clc
in
push
cmp
sbb
aam
pop
sti
ins
xchg
push
adc
fwait
outs
inc
pop
outs
add
fld
(bad)
inc
lds
in
push
stc
push
fimul
das
test
pop
stos
pop
cwde
or
iret
inc
stos
loopne
or
add
push
add
in
(bad)
and
das
shl
push
daa
mov
jnp
ret
add
sub
test
fwait
scas
mov
in
retf
ror
cmp
sub
xchg
cli
call
in
mov
lahf
mov
les
int
xchg
sub
fcmovnb
lahf
rol
cmp
imul
lods
mov
rol
jbe
aas
jle
add
adc
cmp
ret
pop
jl
sbb
and
inc
cwde
sbb
jnp
jle
sub
jecxz
push
(bad)
scas
shr
push
and
xchg
jmp
mov
or
xor
mov
push
xchg
push
mov
fst
call
mov
lods
jnp
mul
mul
jno
xchg
jmp
add
cmp
popa
(bad)
in
mov
fild
clc
cmp
mov
lock
pop
xor
cmp
in
aas
ret
mov
mov
dec
cmp
int
jmp
imul
and
(bad)
into
mov
mov
xchg
pop
in
and
mov
outs
(bad)
mov
cs
or
sub
sbb
imul
jbe
jg
pop
xlat
sub
(bad)
mov
push
add
fsub
push
test
pop
mov
or
bound
mov
int
fdiv
mov
sub
mov
(bad)
or
std
sub
mov
fs
push
fadd
mov
lds
loop
xchg
ret
add
inc
pop
jp
scas
adc
cmp
in
and
ja
mov
dec
data16
mov
movs
push
pop
gs
sbb
or
test
int3
xchg
outs
push
and
jae
push
mov
jo
inc
sti
sub
sbb
sbb
ss
lods
not
retf
jge
hlt
imul
aad
push
cmp
pop
adc
or
xchg
sub
lds
sub
mov
test
shr
hlt
inc
push
test
xchg
int3
sbb
jae
loop
shl
jl
(bad)
mov
rol
int3
cmp
nop
dec
fimul
das
sbb
xor
push
in
cmc
call
jge
or
sub
push
inc
xchg
adc
mov
out
(bad)
cmp
loop
scas
enter
retf
pop
pop
test
inc
ds
jo
dec
push
mov
addr16
pop
push
dec
imul
jno
loopne
ror
das
xchg
inc
movs
data16
jne
cmp
cmc
fwait
movs
sub
xchg
dec
stc
cli
int
xchg
retf
sbb
add
cdq
cs
cmps
pop
cmps
shl
sbb
jae
fild
mov
push
fisttp
icebp
icebp
stos
cwde
mov
dec
sbb
loop
mov
xlat
dec
dec
jns
in
fist
inc
jns
call
mov
xlat
ss
scas
imul
xchg
fild
fldcw
fwait
shl
inc
push
jmp
icebp
cwde
cmps
sub
in
loope
aas
loope
rcr
outs
pop
adc
jno
lea
sub
icebp
mov
push
fisttp
mov
dec
mov
ja
fs
inc
pop
pop
leave
xor
sub
xchg
sub
xor
lods
out
ins
loopne
loopne
xor
push
repz
dec
cld
push
mov
or
into
daa
pop
pop
std
adc
jecxz
mov
lea
sub
and
pop
sbb
jmp
call
inc
(bad)
movs
add
cmp
test
(bad)
sbb
jmp
mov
test
fucomip
(bad)
mov
push
test
fst
cwde
ja
mov
iret
dec
mov
push
test
mov
sbb
ja
(bad)
mov
std
movs
jno
aam
mov
jne
and
pop
jb
mov
test
fdiv
mov
rcl
das
sbb
cmc
mov
pop
nop
adc
and
arpl
push
popa
imul
lds
mov
mov
not
or
xchg
pop
and
(bad)
mov
push
jp
jg
jb
out
or
jl
sbb
and
or
jne
mov
push
add
sbb
cli
std
or
add
xchg
jl
lds
ja
sahf
pop
sub
ins
lahf
pusha
movs
mov
and
loopne
mov
std
xchg
(bad)
pop
daa
fnsave
rol
fild
jl
cmp
dec
les
xor
sub
bound
xchg
das
xor
jbe
rcl
adc
nop
into
not
sbb
or
mov
cmp
and
mov
out
cli
mov
push
add
pop
cmps
xor
pop
imul
pop
sbb
ins
not
repz
repz
sar
dec
jmp
jmp
ins
xlat
pop
pop
mov
and
retf
leave
es
std
xchg
or
pop
add
out
adc
jl
adc
mov
cmps
(bad)
pop
ins
sub
sbb
mov
inc
jb
(bad)
gs
shl
ins
out
inc
movs
push
push
xchg
pop
sub
cmp
sbb
fisttp
out
and
xchg
xchg
popf
mov
jnp
cmps
sub
adc
cmp
xchg
sahf
mov
mov
ficomp
pop
inc
inc
es
je
loope
mov
inc
es
add
aaa
test
std
mov
or
sbb
adc
or
mov
or
neg
cdq
fist
movs
rcpps
mov
cmp
out
cmps
xor
arpl
out
cli
xchg
out
or
ffree
dec
sahf
scas
inc
push
imul
repnz
sahf
pop
inc
in
jno
lahf
xchg
inc
das
call
sbb
sar
stos
sbb
cmp
sahf
sbb
cwde
xchg
stos
aad
repnz
jne
jg
adc
inc
shl
int
sti
adc
dec
not
int3
sub
fwait
cs
loopne
repz
add
and
(bad)
fcomip
cmc
loop
cmp
mov
test
fisttp
pop
jnp
retf
inc
mov
fdivr
xchg
movs
mov
adc
or
retf
aas
aas
arpl
stc
or
cmps
daa
adc
cmp
test
or
ret
addr16
inc
movs
test
ins
stc
fst
cmp
jg
movq
mov
lods
inc
mov
mov
js
rcl
daa
dec
mov
(bad)
ins
mov
push
or
jge
jae
mov
out
dec
xor
out
inc
dec
ins
fistp
sub
and
shl
pop
test
out
mov
push
xchg
daa
les
call
and
and
jb
add
into
and
scas
pop
shr
std
sub
jl
mov
adc
cmp
movs
push
icebp
lods
jl
icebp
dec
mov
dec
imul
bound
add
or
push
aaa
jle
mov
ins
xchg
inc
and
cmps
dec
jle
jp
push
mov
xchg
popf
lahf
xor
ins
scas
adc
xchg
and
mov
or
adc
add
retf
ds
or
sub
cmps
mov
pop
mov
dec
daa
repz
jg
xchg
xor
mov
(bad)
jmp
sub
mov
test
enter
sbb
mov
data16
cwde
leave
mov
adc
xchg
lods
mov
pop
das
(bad)
loop
movs
mov
jmp
xchg
sti
inc
cmp
sub
mov
sbb
add
adc
push
jmp
adc
rcr
cmp
mov
sti
das
ja
inc
ret
and
mov
xchg
sub
pop
push
mov
fdivr
mov
push
in
imul
add
dec
dec
cli
pop
push
push
sti
rcr
lods
mov
sub
dec
mov
ror
and
out
sub
ficomp
retf
imul
mov
adc
xchg
mov
sbb
and
loope
inc
xor
mov
out
lods
push
ins
fstp
pusha
ins
jae
push
addr16
and
leave
fdivr
xchg
gs
cli
call
mov
mov
ffree
jl
mov
addr16
fcom
nop
jmp
mov
imul
sbb
rcl
jp
add
and
loopne
das
mov
hlt
shr
scas
pop
pushf
shl
add
ret
lock
pop
in
mov
sbb
inc
lea
adc
jne
mov
int
sub
add
cmp
addr16
pop
loop
icebp
sar
jbe
(bad)
mov
pop
xchg
lahf
and
or
dec
dec
jmp
sbb
inc
add
aas
retf
scas
data16
sbb
jp
sbb
sahf
cmps
sbb
mov
fldcw
nop
hlt
pop
or
sub
adc
mov
shl
popa
sub
scas
push
lahf
mov
test
and
mov
mov
out
sub
jne
cmp
mov
xchg
out
dec
inc
icebp
add
adc
retf
pusha
pop
out
cmp
xor
add
leave
shl
jle
xchg
imul
mov
mov
or
rcr
jecxz
mov
shl
mov
mov
mov
daa
inc
test
adc
adc
das
int3
mov
or
dec
shl
fmul
xchg
sbb
cmp
and
adc
(bad)
mov
add
lock
xchg
pop
xor
mov
jmp
dec
pop
jl
loop
mov
lds
mov
inc
dec
pop
pusha
or
dec
jmp
std
push
icebp
pop
outs
iret
mov
cwde
daa
sbb
dec
jbe
push
out
mov
add
aaa
xchg
fbstp
add
fisubr
jns
mov
dec
arpl
arpl
test
push
xchg
movs
dec
mov
xchg
repz
sahf
loopne
cmp
jl
add
aam
cmp
imul
mov
sub
rcr
frstor
test
retf
fdiv
pop
sbb
pop
cmp
push
mov
add
aaa
or
add
ror
push
mov
(bad)
or
cmp
jno
and
add
inc
pop
inc
jp
push
pop
or
mov
movs
and
xchg
lahf
jle
jns
cmp
arpl
cmps
cmp
jge
pop
popf
in
or
scas
outs
cwde
fwait
push
cdq
mov
sbb
hlt
(bad)
xor
adc
sbb
outs
jle
dec
imul
mov
and
sbb
rcr
push
icebp
js
sbb
inc
xchg
scas
xor
jmp
jecxz
rcl
sbb
mov
jmp
imul
xor
jne
dec
add
vrsqrtss
ds
cs
push
pop
or
or
leave
pop
test
sbb
cmps
jmp
cmp
inc
lahf
or
mov
mov
scas
mov
jb
adc
(bad)
lods
cli
push
jmp
repnz
imul
mov
xor
jecxz
les
lahf
and
mov
mov
fst
ja
jecxz
mov
dec
fs
xchg
and
imul
enter
ret
mov
out
mov
xor
inc
push
retf
test
inc
cmp
cwde
je
push
cmp
es
stc
je
xchg
push
mov
pop
(bad)
int
(bad)
and
jnp
nop
add
or
nop
xchg
mov
xchg
cmp
push
jecxz
cmp
test
fistp
fadd
cmp
xchg
sbb
cli
mov
arpl
jnp
push
(bad)
sti
push
xchg
ds
into
stos
inc
push
nop
inc
cdq
repz
add
or
jae
bound
push
dec
mov
stos
jmp
pop
adc
xchg
cmp
pusha
in
aam
hlt
ins
outs
pop
dec
int
or
iret
lods
mov
loope
(bad)
jno
cli
push
sbb
xchg
sbb
icebp
pop
xor
std
pop
cli
ret
imul
js
mov
cmp
stos
fcmovnb
into
and
push
mov
sbb
pop
jo
mov
sub
cli
mov
adc
les
dec
ret
xor
push
push
pushf
inc
cmp
pop
add
jne
enter
out
out
push
adc
shl
xchg
scas
add
enter
ins
out
stos
ins
and
xchg
retf
inc
ror
jb
or
or
call
cmp
bound
or
jmp
in
scas
enter
xor
jo
retf
dec
and
push
les
in
pop
adc
int
inc
ins
fst
pop
fidivr
out
pop
shl
sub
sar
leave
add
ror
mov
jmp
ret
shl
mov
fs
push
bound
mov
div
adc
pop
enter
sub
daa
and
push
add
mov
aam
mov
enter
or
mov
sbb
repz
or
(bad)
out
clc
daa
jmp
int
or
sub
push
cli
fsub
clc
movs
jns
xlat
push
pop
adc
mov
std
add
aaa
lahf
adc
and
xchg
xchg
aaa
fs
xchg
out
or
sbb
int3
jp
hlt
jmp
mov
xor
mov
or
inc
sbb
daa
cmp
xchg
(bad)
int3
adc
cmp
into
call
push
bound
sub
sub
xchg
mov
sub
fidiv
and
add
pop
inc
fcom
lods
dec
pop
aam
lods
daa
fnstenv
adc
aam
lds
imul
std
cmp
addr16
movs
jne
cwde
adc
in
xor
cmc
fdivr
ret
pop
js
sbb
mov
pop
in
sbb
pop
inc
jne
pop
cmp
fld
sub
pop
loopne
lods
lods
xchg
xor
idiv
rcr
int
das
dec
cmps
mov
rol
ins
or
xor
je
imul
and
push
mov
lods
xor
jb
scas
jge
dec
xchg
in
mov
xchg
out
not
fldcw
loope
icebp
pop
xchg
addr16
out
adc
cmp
retf
pop
lods
call
sub
mov
imul
neg
push
cmp
inc
xor
cmp
xchg
rcr
ficomp
ret
pop
mov
and
jge
pop
movzx
lods
sbb
fst
clc
mov
sbb
push
fcom
ins
daa
test
xor
addr16
bound
or
into
xchg
sub
in
dec
jmp
mov
cmps
inc
je
jl
cmp
in
and
cli
jge
js
add
sbb
inc
bound
pop
pop
xchg
cmp
inc
js
sbb
es
inc
rcr
fsub
push
inc
add
pop
xor
mov
jnp
imul
loop
adc
xchg
jae
pop
or
xlat
add
loopne
xor
mov
fiadd
ja
or
mov
adc
js
int3
ret
not
pop
lock
lods
mov
dec
dec
ror
jmp
xchg
sbb
xor
sti
inc
out
(bad)
iret
inc
inc
mov
arpl
push
rcl
push
out
js
aaa
dec
test
(bad)
lods
scas
xor
push
add
push
cli
xchg
cmp
or
out
(bad)
jg
inc
jl
mov
mov
(bad)
push
out
jo
dec
out
inc
mov
loop
les
scas
jmp
clc
mov
mov
jmp
leave
inc
pop
add
test
movs
xor
lds
fisub
sbb
in
int
repnz
ins
xchg
leave
mov
icebp
aas
mov
aam
and
xchg
jmp
jmp
push
in
lods
xlat
and
ins
xchg
mov
add
fucomi
jns
and
jns
inc
dec
ret
pop
(bad)
pop
cli
repz
add
xchg
or
add
int
sti
les
inc
xchg
push
jl
movs
stos
mov
call
push
cmps
mov
xlat
repz
lods
das
clc
mov
sbb
fistp
inc
mov
(bad)
xor
lods
mov
nop
shr
int
arpl
xchg
sbb
lods
(bad)
aam
fstp
cmp
rcl
inc
fdiv
lahf
lahf
xchg
push
hlt
sub
mov
outs
pop
ret
sub
push
rcr
fimul
loopne
repz
ret
cdq
(bad)
arpl
js
push
sub
cmps
push
call
cmp
std
mov
and
sub
or
push
sbb
shl
scas
hlt
sub
adc
ds
retf
cmp
test
arpl
bnd
fadd
push
mov
xchg
sub
sbb
scas
push
aas
loop
or
jecxz
fwait
add
loop
jge
ja
hlt
mov
das
(bad)
movs
les
pop
adc
test
xor
mov
push
sub
addr16
lahf
inc
push
sahf
mov
push
sub
mov
fidiv
push
sbb
adc
jle
outs
aad
inc
outs
mov
jo
cwde
jl
xchg
mov
sub
lods
aad
xor
aaa
or
mov
pop
adc
xchg
mov
adc
cmp
add
pop
neg
push
fadd
pushf
sbb
fxch
retf
movs
sub
dec
add
xor
es
pop
sub
ja
into
adc
lahf
call
cwde
int
dec
xor
and
loopne
push
dec
inc
icebp
(bad)
push
dec
ja
pop
(bad)
ins
cwde
sub
test
or
pop
hlt
xlat
test
adc
fwait
addr16
fadd
in
or
test
ja
dec
xor
movs
idiv
and
and
push
push
xor
(bad)
adc
mov
mov
mov
sub
fisub
mov
cmps
jae
std
or
ss
pop
movs
nop
out
jmp
xchg
std
adc
sbb
stos
jnp
xor
ret
js
call
ja
xchg
retf
ins
mov
push
jle
mov
outs
int3
mov
fnsave
cmp
std
inc
pop
and
cmps
push
jne
test
dec
test
movs
(bad)
mov
pop
cmp
push
xor
mov
or
and
bnd
js
sub
test
push
xchg
sub
nop
cmps
imul
stos
call
inc
inc
and
fimul
scas
lods
cmps
dec
daa
xchg
jb
(bad)
into
xchg
(bad)
lea
ficom
cli
xor
mov
jae
mov
mov
push
jmp
cli
int3
push
sub
jp
sbb
pop
pop
xor
inc
push
cmps
push
call
lea
xor
lods
shr
ret
jp
mov
xchg
cmps
dec
mov
lea
in
cmps
push
movs
call
in
xchg
fld
push
(bad)
jno
ins
push
push
out
dec
cli
in
inc
xlat
test
shl
dec
jnp
mov
xchg
mov
rcl
shl
sub
cmp
push
clc
stc
mov
imul
push
out
mov
pop
inc
loopne
fs
xchg
cmp
add
fnstcw
nop
jae
rcl
mov
sub
xchg
scas
dec
lea
pop
not
ret
mov
xchg
and
rol
cli
pop
xor
repz
or
lock
hlt
int3
outs
jl
and
add
adc
movs
pop
or
call
push
retf
aam
rol
inc
cld
out
loop
(bad)
arpl
add
scas
add
mov
mov
mov
xchg
inc
push
or
mov
mov
sbb
fnstcw
enter
mov
retf
mov
push
je
xchg
and
push
and
and
inc
xor
bound
bound
jns
lds
call
sub
(bad)
leave
test
sahf
test
or
xor
fidivr
jecxz
out
in
and
xchg
xchg
test
lds
cmp
repz
leave
dec
mov
cmps
or
add
dec
sbb
pop
xchg
sar
(bad)
sub
pop
and
or
push
dec
imul
rcr
pusha
out
adc
xor
cdq
nop
push
call
lds
dec
lock
mov
addr16
mov
or
add
cmp
xchg
repnz
mov
dec
test
out
jmp
or
pop
adc
clc
fsubr
cmp
data16
daa
or
lds
sub
jne
xchg
push
add
xlat
pop
ficom
adc
xchg
mov
mov
loopne
paddsb
stos
setae
ins
sbb
das
jnp
pushf
push
cdq
and
push
dec
nop
add
shl
mov
daa
js
sar
les
inc
in
int3
push
out
xor
mov
sub
shl
lds
in
jp
rcl
dec
bound
imul
into
sbb
dec
cwde
mov
xor
test
push
dec
or
sub
dec
adc
push
call
ror
aam
lahf
push
je
sub
jl
push
arpl
or
(bad)
push
mov
arpl
mov
test
cmc
imul
in
nop
mov
cmp
xor
out
clc
pop
inc
and
jo
retf
or
lods
sub
cmp
jb
pop
fidiv
add
or
pop
stos
jns
repnz
mov
xor
xchg
jns
sub
mov
dec
pop
dec
leave
add
pop
loop
push
mov
push
in
(bad)
cmp
mov
popa
pop
cld
xor
pop
mov
jo
rol
dec
jne
outs
enter
fwait
je
jge
xchg
push
in
dec
sub
inc
inc
sub
aaa
sbb
jne
in
cld
popa
jne
popf
xchg
inc
sti
or
pusha
dec
dec
lahf
cmp
sbb
call
popa
adc
pop
rol
rcl
bound
div
pop
es
(bad)
cmp
jns
mov
pop
mov
and
aad
dec
jo
sbb
pop
stos
lahf
cmp
test
movs
mov
or
push
dec
cdq
sar
aam
(bad)
cli
(bad)
bound
jg
pop
and
ret
and
ret
daa
movs
rol
es
xor
cmp
ins
mov
or
cld
sub
jbe
mov
rcr
cld
dec
add
adc
push
jnp
adc
dec
add
cmc
into
inc
addr16
xor
out
inc
and
in
adc
and
xchg
pushf
push
mov
mov
test
sbb
mov
adc
jnp
dec
mov
aaa
mov
test
iret
(bad)
adc
cmps
test
cmp
xchg
or
push
ret
push
mov
and
movs
mov
mov
jg
sbb
dec
fmul
dec
add
stos
mov
icebp
push
dec
pop
cmps
add
push
lods
xor
cmp
or
aaa
fild
lds
cwde
push
push
repnz
jmp
mov
into
mov
ffreep
inc
sahf
mov
(bad)
inc
push
ins
fnstcw
rcr
sahf
cmp
aas
mov
shl
or
pop
jno
sub
sub
dec
jb
test
mov
sub
bound
ud2
sti
jnp
jae
hlt
mov
mov
ins
fwait
xor
jp
xchg
movs
test
ffreep
loope
add
fld
push
xchg
add
mov
fadd
mov
loopne
dec
jno
sub
jle
mov
out
pushf
(bad)
and
add
jo
addr16
fimul
cmp
xor
aaa
jg
(bad)
fist
enter
add
lods
fadd
fcmovnu
imul
cmp
sbb
es
(bad)
stc
sub
cmp
sub
aaa
adc
mov
test
cmp
sbb
nop
mov
push
mov
add
or
popf
and
push
out
cwde
sbb
add
out
xchg
ins
or
mov
sahf
in
or
or
xchg
xchg
xlat
fidiv
mov
out
pop
rcl
adc
clc
cld
adc
add
ins
(bad)
loope
fwait
cmp
push
adc
mov
jp
fnstenv
cmps
mov
cdq
xchg
sub
mov
mov
xchg
out
loopne
loopne
(bad)
pop
js
cmp
mov
jb
push
iret
push
test
push
inc
mov
stos
arpl
xor
push
gs
ja
add
cmp
cmp
test
mov
test
sub
imul
outs
cli
sbb
inc
in
into
es
add
mov
icebp
sub
xchg
adc
mov
icebp
jbe
jp
xchg
cmps
xor
sub
or
dec
mov
sbb
pop
(bad)
(bad)
jne
ss
mov
jle
adc
mov
cmp
loope
sub
loopne
retf
add
call
test
xchg
loop
inc
and
imul
or
push
leave
shl
shr
sub
or
loop
iret
or
ja
repnz
arpl
xchg
fsubr
dec
in
loop
ds
inc
cmp
adc
into
xchg
pop
sub
loope
xchg
and
cld
adc
pop
test
inc
mov
sub
xchg
scas
push
push
jmp
adc
push
inc
stos
(bad)
mov
dec
ret
jbe
sti
in
call
pop
pop
fisttp
pop
cwde
mov
push
sub
stos
dec
jge
dec
ret
mov
jp
pop
inc
cmp
shr
cmp
ins
lds
(bad)
fadd
test
shl
sbb
aaa
aad
in
pop
xlat
arpl
or
mov
sbb
lock
cmp
arpl
jg
sbb
xlat
fisttp
(bad)
repz
dec
aas
pop
cld
or
js
and
pushf
or
ss
xchg
cmp
outs
pop
retf
(bad)
in
push
ror
xor
push
stos
mov
mov
push
pop
xchg
sub
fsubr
sub
sbb
ror
ficom
fs
cdq
xchg
adc
xor
push
inc
data16
test
outs
jne
fs
nop
push
mov
scas
push
vmovddup
les
cmp
add
xor
stos
mov
lods
pop
cmp
gs
xchg
adc
inc
adc
daa
mov
add
mov
sub
or
xor
xchg
cmps
sub
movs
or
les
cmp
cwde
mov
(bad)
push
movs
in
mov
test
jle
(bad)
stos
(bad)
fwait
push
mov
or
fcomi
sub
mov
add
pop
mov
or
adc
fstp
lahf
xchg
in
lea
push
je
pop
sub
and
jbe
jmp
not
aas
pop
cmp
or
aas
add
int
cmp
cdq
sub
fild
pop
hlt
mov
xchg
or
daa
cmps
jle
jecxz
xchg
sub
sahf
lods
jb
aam
push
xchg
repnz
sub
fistp
dec
loop
fimul
and
sbb
add
mov
mov
xchg
retf
dec
xchg
pusha
inc
mov
mov
test
(bad)
jmp
xchg
retf
mov
pop
inc
aad
jmp
fnstenv
and
mov
xlat
mov
sbb
push
cmps
xchg
mov
pop
dec
test
xchg
or
call
rcr
js
inc
in
out
fsubr
xor
and
imul
mov
pop
je
push
or
sub
js
imul
daa
lods
pop
add
in
pop
rcr
addr16
inc
jb
pop
mov
pop
fmul
xor
sub
sub
(bad)
ds
test
push
outs
xchg
pop
inc
mov
sub
enter
in
imul
jmp
sbb
sub
shl
lds
loopne
pop
std
ins
add
or
adc
mov
push
ja
push
das
movs
add
sub
cld
jne
mov
aam
xor
fs
adc
inc
or
(bad)
add
mov
les
sbb
test
imul
mov
popf
outs
hlt
lods
xor
enter
fmul
push
cmp
fnstsw
xor
sti
mov
sbb
push
push
mov
push
pop
jo
or
aas
loopne
dec
cmp
imul
cmp
arpl
je
jae
stc
shl
mov
lds
xchg
call
jg
inc
jg
push
xchg
inc
or
cmc
sub
add
push
cmps
lods
push
pop
cmp
js
popa
mov
test
adc
adc
cdq
jnp
cld
ret
test
pop
in
xchg
mov
icebp
pop
push
push
mov
ficomp
dec
rcl
jo
inc
arpl
stos
sahf
xchg
pop
xor
cdq
icebp
or
jmp
outs
and
push
jnp
jno
dec
mov
cmp
(bad)
int3
mov
or
test
stos
sub
mov
adc
push
jae
dec
or
mov
mov
xchg
mov
xchg
call
daa
ds
cmp
stos
sub
cmps
cli
mov
inc
repz
lods
lock
push
fs
dec
mov
cwde
jbe
addr16
ret
push
retf
mov
outs
sbb
add
inc
inc
mov
bnd
pop
lods
inc
test
push
aaa
xor
enter
popf
test
scas
(bad)
cmps
push
pushf
js
jbe
pop
xor
cld
push
sbb
(bad)
out
(bad)
jnp
and
xchg
mov
lahf
or
fwait
(bad)
leave
(bad)
push
scas
pop
jne
mov
mov
and
mov
sahf
sub
inc
inc
inc
sbb
movs
rol
jg
dec
jne
push
push
fwait
mov
sub
cmps
xor
outs
daa
or
rcl
and
pusha
pop
fistp
mov
mov
mov
and
xor
sbb
jb
mov
in
dec
mov
(bad)
cmp
repz
add
jnp
sub
(bad)
jmp
pop
and
movs
daa
mov
lahf
xor
sub
push
aam
loopne
mov
xor
adc
or
les
inc
adc
and
aas
stos
ret
leave
push
ins
cli
aas
or
mov
adc
(bad)
fild
sbb
retf
fistp
cld
xor
sub
xor
or
add
jp
add
sti
dec
pop
dec
add
nop
mov
adc
cld
lods
add
(bad)
cmp
xor
mov
inc
xchg
and
movs
inc
mov
das
mov
cwde
fimul
push
mov
add
in
fiadd
fist
hlt
test
adc
sahf
push
out
cmp
xor
movs
std
xchg
dec
mov
xchg
mov
xor
(bad)
neg
dec
mov
jl
and
add
aaa
adc
sti
mov
iret
add
pop
mov
cli
lods
int3
cmp
xchg
sbb
dec
loopne
stc
cdq
mov
xor
stos
mov
iret
test
cmp
sub
xchg
in
dec
jg
dec
fisub
pop
inc
or
push
xchg
sti
retf
stos
inc
jp
inc
lahf
repnz
xor
pop
xchg
into
jg
mov
(bad)
push
retf
mov
in
mov
jo
cmp
lahf
scas
dec
mov
pop
stos
dec
loop
and
jl
xor
pop
call
outs
jae
out
shl
push
scas
push
cdq
push
jle
icebp
fmul
add
loope
rcl
sbb
cdq
(bad)
jge
es
jns
scas
sbb
sub
or
adc
xchg
and
xor
cli
imul
jae
and
jbe
popf
shl
inc
ret
in
mov
bound
pop
das
scas
cld
sar
adc
mov
and
sub
push
mov
clc
iret
ret
mov
arpl
jb
mov
pop
inc
xor
js
adc
add
pop
imul
shr
push
mov
cld
pop
rcl
cs
dec
rol
inc
(bad)
sub
cli
mov
outs
cmps
gs
ret
push
adc
pop
mov
outs
rcl
or
jae
addr16
xchg
sbb
aad
push
hlt
repz
adc
outs
dec
sub
mov
test
outs
push
lods
cmps
push
xchg
(bad)
xor
shl
call
ins
push
mov
nop
jge
call
ss
test
or
test
inc
mov
jmp
cmp
push
test
push
jnp
bound
retf
or
jbe
retf
xchg
hlt
call
adc
pop
pop
lahf
outs
add
aam
dec
ja
shl
adc
jno
xor
(bad)
adc
mov
ja
add
aad
sbb
mov
gs
dec
gs
inc
(bad)
sahf
jg
mov
adc
add
jno
inc
cdq
adc
xchg
call
inc
test
lds
es
dec
test
mov
repnz
aas
enter
sbb
mov
(bad)
enter
rcr
inc
or
mov
pop
pushf
(bad)
add
test
mov
out
and
mov
mov
sahf
pop
sub
inc
add
lods
cmp
(bad)
stos
push
imul
ret
dec
mov
dec
jecxz
sub
test
sub
loope
js
icebp
push
lock
and
push
cwde
mov
nop
pop
fld
push
dec
popf
pop
les
fs
pop
jl
inc
(bad)
fadd
adc
pop
test
je
adc
sbb
jle
or
or
push
sti
push
push
out
sahf
movs
popa
sub
push
scas
imul
test
iret
inc
ss
jnp
lods
mov
imul
iret
push
pop
sbb
in
cmp
mul
lahf
push
mov
imul
and
rol
out
add
pop
sbb
cmp
mov
dec
cmps
fs
mov
jb
movs
popa
aad
jp
shr
rol
ja
pop
fwait
mov
sti
pop
dec
(bad)
sbb
inc
sbb
xchg
in
xor
out
data16
jno
sub
xor
push
cwde
pop
retf
and
adc
mov
xor
sar
inc
pop
aad
daa
retf
(bad)
sub
data16
lea
test
sub
add
loop
cmc
adc
pusha
test
pop
mov
push
(bad)
int
jne
test
icebp
cmps
les
outs
fstp
scas
std
inc
adc
and
test
repz
popa
pop
pop
shr
hlt
adc
pop
push
outs
xor
leave
retf
repz
push
and
pop
pop
mov
dec
nop
xchg
and
pop
jmp
inc
xor
shl
jbe
push
dec
pusha
in
stos
pop
rcr
cld
jecxz
jle
test
mov
daa
mov
sub
mov
scas
and
pop
stc
xchg
fs
in
add
or
xor
sti
mov
daa
out
xor
repnz
std
fcmovbe
shl
cld
mov
arpl
minps
ret
and
jno
push
shl
das
jb
push
test
pop
push
push
nop
out
mov
outs
cmp
jnp
in
not
inc
add
cmp
inc
scas
das
pop
push
dec
push
in
inc
jle
in
xchg
iret
pop
pop
clc
ret
inc
mov
data16
outs
and
(bad)
push
sti
push
pinsrw
(bad)
push
ret
iret
aaa
sar
dec
mov
xchg
ins
xchg
push
inc
repnz
test
jmp
cmp
je
fcom
mov
lds
jecxz
jmp
inc
push
dec
into
push
add
sti
div
sbb
retf
dec
pushf
push
sub
sahf
jb
call
jp
(bad)
sahf
scas
fwait
sub
pop
or
cld
push
inc
pop
movs
jmp
fst
sbb
rcl
and
aaa
or
jecxz
test
out
es
dec
push
mov
imul
shr
sbb
inc
xor
dec
shr
xchg
adc
xor
xor
pop
sbb
jg
test
retf
pop
cs
jae
ins
inc
iret
dec
and
add
dec
dec
adc
pop
clc
push
arpl
test
dec
mov
mov
faddp
jae
pop
pop
mov
mov
pop
ror
data16
jne
lods
add
lods
mov
xor
jae
dec
call
jns
std
adc
aaa
je
mov
jno
xor
mov
mov
add
fidivr
rol
cmps
adc
xlat
cdq
stc
jl
movs
jae
add
or
adc
push
adc
dec
fwait
hlt
(bad)
cmps
js
repnz
push
lock
hlt
ss
jb
into
push
popa
pop
dec
pop
sahf
addr16
clc
dec
fsub
cwde
jo
ret
cdq
outs
sbb
adc
not
cdq
inc
cli
nop
mov
xchg
mov
mov
and
js
xor
adc
dec
loope
mov
mov
jg
jmp
popa
test
cwde
(bad)
cmp
jecxz
or
cmp
mov
call
jp
adc
sbb
adc
lods
loopne
sbb
add
lahf
pop
cmps
mov
or
(bad)
xchg
addr16
inc
jo
xor
shl
push
pop
sbb
inc
sub
sbb
mov
popf
stc
cmc
mov
adc
dec
sub
mov
cmp
sub
push
popf
mov
mov
xchg
in
or
lods
je
aas
jmp
enter
xchg
enter
shr
test
mov
ins
fild
inc
or
retf
xchg
sti
in
ret
fdiv
ror
jno
jecxz
aaa
lea
dec
stos
cmp
hlt
daa
pop
cmp
mov
push
test
pushw
jo
mov
pop
mov
in
push
(bad)
lods
mov
xor
sub
mov
adc
push
adc
sub
pop
loope
xor
ret
sbb
(bad)
mov
(bad)
mov
cmp
(bad)
scas
test
loopne
sysret
sub
mov
sbb
add
xchg
fcomp
jo
aad
aad
xchg
cmps
(bad)
jb
xchg
cmp
rcl
test
jnp
cmp
pop
dec
dec
imul
ret
je
ins
movs
or
fs
jo
out
imul
sub
fidiv
js
push
(bad)
mov
popf
imul
ss
cmp
pop
cmp
mov
addr16
int3
cmps
jmp
inc
int
or
push
and
out
mov
outs
jmp
hlt
stos
loop
pop
ds
data16
std
sbb
es
mov
outs
stos
add
mov
pop
adc
fisub
int
jge
std
pop
sub
das
and
repnz
js
test
add
idiv
xchg
push
push
or
lods
jmp
call
and
popf
xchg
cmp
lods
sbb
or
pop
add
or
out
enter
jo
je
mov
cmp
mul
popf
into
(bad)
push
push
push
mul
xor
dec
mov
pusha
mov
push
sub
test
shl
inc
xchg
(bad)
into
movs
adc
ins
add
lahf
mov
add
adc
retf
rcl
pusha
jg
jb
dec
xor
and
mov
jmp
jle
in
(bad)
pusha
pusha
outs
or
jo
(bad)
mov
and
dec
call
fild
mov
aaa
std
(bad)
cdq
ins
dec
movs
inc
and
iret
mov
xchg
xchg
mov
ret
pop
gs
enter
inc
sti
mov
mov
sub
mov
mov
and
jb
dec
outs
mov
add
sbb
int3
sbb
push
out
test
ss
xchg
daa
ss
je
in
mov
cld
push
jae
push
mov
inc
pop
pop
test
(bad)
push
xchg
loopne
lahf
std
fsubr
pop
ror
mov
xor
(bad)
pop
push
call
dec
add
fcom
and
mov
aaa
inc
(bad)
jmp
xchg
enter
outs
xor
cmp
stc
push
aaa
je
inc
lds
arpl
loop
(bad)
pop
jle
cld
movs
or
imul
jle
xor
dec
xlat
cmp
add
movs
mov
add
std
ins
push
fcom
fistp
(bad)
xchg
sub
jmp
and
mov
mov
mov
fst
(bad)
fcomp
sub
repnz
dec
jmp
fwait
addr16
stc
and
mov
inc
xor
mov
outs
xchg
out
or
stos
ror
mov
push
dec
stos
sbb
inc
and
ror
fs
dec
loopne
in
xor
xor
into
ret
add
enter
scas
pop
bound
clc
push
mov
mov
fwait
cmp
jge
ja
ja
shl
mov
add
fstp
mov
mov
leave
or
sub
in
mov
and
push
mov
ret
inc
leave
outs
scas
in
loopne
mov
push
xor
int3
and
jge
push
les
xchg
nop
xchg
jp
cmps
sbb
or
dec
inc
(bad)
out
stc
mov
adc
push
xchg
not
aad
das
lahf
in
bound
inc
mov
jle
loope
imul
arpl
adc
outs
xchg
enter
stos
dec
leave
loopne
mov
je
imul
sub
les
fcmovnbe
cwde
jo
inc
test
pushf
repnz
sub
and
lock
mov
or
fldenv
sbb
mov
(bad)
movs
shl
and
fbstp
cmp
icebp
cs
pop
sbb
sub
or
sub
cmp
push
dec
inc
aad
out
or
jmp
fadd
outs
arpl
and
jb
out
daa
xchg
xchg
add
pop
cmp
inc
(bad)
(bad)
mov
push
ins
sahf
sti
pop
sub
and
and
or
stos
add
in
mov
mov
aam
fistp
sahf
adc
pop
lods
push
ret
cmp
jmp
push
dec
dec
movs
push
mov
cmp
mov
(bad)
iret
and
fwait
(bad)
pusha
sti
mov
pop
scas
jns
in
xchg
cmc
inc
sub
popa
add
aad
add
mov
fcmovu
retf
fild
add
dec
mov
pop
or
les
xor
push
loopne
or
add
pop
adc
in
pop
pop
adc
push
mov
adc
xchg
xchg
fistp
push
mov
add
test
jg
test
clc
aam
pop
scas
ror
cmp
xchg
jecxz
pop
push
ror
adc
or
add
ret
not
aaa
jnp
retf
cmps
mov
repnz
aaa
shl
xor
(bad)
add
dec
pop
cmps
pushf
fild
mov
xlat
xchg
ret
and
dec
sbb
pcmpeqw
sub
inc
ja
mov
inc
xor
ja
inc
test
xor
jmp
xor
hlt
leave
sub
fst
and
mov
sbb
jnp
xchg
aad
cmove
xchg
inc
adc
cmp
leave
mov
cmp
imul
push
nop
pushf
(bad)
mov
shl
jns
icebp
inc
retf
je
xor
ins
dec
and
ss
nop
fs
xchg
add
pop
aas
add
das
pop
leave
int3
or
aam
pop
xchg
pop
push
ds
jecxz
fs
jns
ds
test
stc
pop
push
mov
pop
cmp
push
mov
ins
lea
jl
cmp
data16
outs
xchg
fild
adc
mov
pop
cmps
lock
out
pop
out
jp
out
dec
pushf
add
mov
outs
jne
shr
(bad)
jns
fisub
mov
mov
(bad)
mov
stos
lds
scas
pop
outs
pop
test
sub
retf
movs
xor
push
pop
adc
pop
(bad)
ins
and
inc
inc
cmp
addr16
mov
jnp
adc
push
jl
arpl
jae
rcl
adc
jle
sbb
and
xor
ins
outs
inc
xor
push
push
aas
push
movs
push
gs
(bad)
mov
pop
rol
xchg
sti
sub
out
repz
push
into
stc
mov
push
sbb
and
add
outs
popa
dec
mov
call
push
imul
dec
add
jl
bound
mov
aam
dec
mov
dec
pop
or
pop
mov
dec
dec
mov
adc
push
loopne
sbb
sbb
sbb
push
mov
cmp
ss
popa
and
dec
adc
dec
in
and
movs
shl
in
jnp
dec
push
sub
test
imul
dec
xor
push
mov
test
sub
adc
pop
pop
adc
lds
stos
push
jle
call
clc
js
sub
adc
xchg
xor
out
test
mov
push
mov
push
cmp
mov
fwait
das
sahf
and
sbb
mov
mov
popf
xchg
push
cs
dec
jp
or
jmp
add
adc
(bad)
add
cs
jne
jo
xchg
mov
adc
push
jp
add
push
mov
and
dec
jmp
xchg
int3
sbb
enter
gs
push
mov
mov
int
lahf
pop
dec
pop
into
sub
sub
std
inc
add
test
retf
cmp
add
mov
imul
movs
into
sti
test
xor
std
mov
mov
mov
int3
inc
xchg
push
pop
inc
dec
cmp
add
mov
jbe
hlt
mov
outs
repz
in
stos
push
(bad)
daa
mov
xchg
xchg
pop
in
pop
sub
mov
inc
push
out
or
inc
mov
in
imul
jb
mov
jno
or
(bad)
push
frstor
into
or
pop
push
les
rcl
test
jge
popf
into
scas
sub
inc
mov
mov
and
sub
cmp
sub
repnz
push
shr
repnz
add
mov
push
loope
push
test
inc
in
pop
rol
iret
ja
imul
jbe
pop
stc
cmp
push
adc
into
sub
pop
leave
fist
pop
movs
in
dec
sbb
pop
int3
adc
rol
push
inc
xchg
dec
pop
fwait
push
xchg
ret
movs
mov
aam
out
inc
(bad)
fs
inc
out
stc
mov
add
and
cs
pop
jns
(bad)
jp
jp
xchg
bndstx
xor
pusha
push
adc
hlt
and
movs
mov
cdq
lods
iret
cmp
scas
femms
mov
push
pop
sub
dec
loopne
pushf
scas
test
into
mov
jno
test
fs
dec
mov
or
pop
mov
in
stos
cmp
push
mov
das
push
jp
inc
add
pop
lock
xchg
adc
fwait
daa
sub
xor
inc
dec
mov
pop
mov
cmp
inc
xchg
add
fcom
add
mov
jp
orps
xor
push
popf
call
inc
mov
mov
dec
(bad)
in
xor
adc
repnz
xor
in
shr
(bad)
mov
(bad)
movs
cmps
xchg
ds
scas
fwait
adc
ror
mov
cmc
in
adc
or
int3
mov
or
mov
ret
mov
xchg
loop
popa
fsub
test
xor
out
add
sbb
or
add
fcomp
test
fcom
popa
jmp
sub
fadd
mov
cmp
pop
and
mov
add
mov
int3
daa
push
xor
push
ins
in
or
mov
sbb
adc
lods
std
inc
cld
iret
dec
mov
pop
das
mov
ret
fisubr
ror
pop
xlat
cmp
dec
push
je
push
dec
jae
clc
or
push
lods
imul
out
jb
dec
retf
push
lahf
push
add
inc
xchg
pop
and
mov
das
cwde
movs
pop
cmp
inc
fsub
mov
jns
cld
xchg
nop
adc
scas
aam
inc
mov
inc
jo
mov
jp
dec
out
mov
shl
jb
add
sbb
mov
pop
mov
xor
fist
lds
inc
jecxz
push
adc
push
dec
(bad)
cmp
fisub
adc
mov
fisub
pop
or
fcomp
sbb
xor
inc
retf
jne
cmp
adc
sti
ror
cmp
sbb
push
mov
gs
outs
push
dec
aas
enter
push
sub
mov
call
addr16
sti
mov
inc
das
inc
fimul
leave
out
fld
stos
into
add
mov
jmp
loopne
inc
je
cmp
ins
mov
adc
cwde
test
sub
cmc
jbe
stos
cmc
scas
cld
arpl
hlt
cmp
inc
mov
daa
aad
test
addr16
fnstcw
sar
scas
addr16
xchg
hlt
out
in
aaa
stc
nop
stos
stc
mov
jo
cmp
and
push
leave
or
dec
clc
mov
or
push
inc
push
mov
adc
jg
sahf
mov
sub
fdivr
inc
pushf
addr16
cmp
and
es
leave
call
aaa
mov
or
cdq
ret
neg
xchg
lods
jge
les
mov
les
(bad)
cli
mov
xchg
jno
fld
rol
mov
push
dec
push
pushf
arpl
sbb
add
bts
and
fnsave
inc
sti
in
in
add
pop
icebp
jle
jl
fcomp
movs
(bad)
xor
sahf
xlat
retf
push
jecxz
jae
mov
(bad)
pop
inc
or
cmp
dec
jo
cli
jb
or
dec
js
out
add
add
mov
dec
jns
jnp
daa
dec
mov
dec
into
mov
aas
sbb
stos
cmp
inc
cmps
push
mov
mov
push
ins
add
inc
test
outs
call
push
add
cmps
inc
sub
jmp
mov
in
retf
clc
pop
mov
xlat
xchg
sub
call
mov
jecxz
out
retf
ficomp
push
fmul
call
jno
int3
mov
sub
push
xlat
or
and
mov
mov
xchg
pusha
cmps
cmovl
xor
sub
and
aaa
adc
inc
out
adc
arpl
jb
je
adc
push
and
push
sbb
mov
stc
and
dec
aam
inc
outs
pop
sub
out
call
mov
adc
sbb
pop
mov
call
test
mov
or
stos
in
jl
dec
shr
repnz
push
mov
(bad)
aaa
pop
stc
ss
data16
adc
adc
jb
imul
imul
out
mov
sar
out
or
jg
adc
shl
xchg
je
sub
loopne
adc
sbb
les
pop
pop
shl
add
mov
mov
es
in
enter
aas
scas
pop
lds
repz
xchg
aas
jl
dec
xor
cmp
ficomp
into
cmp
pop
sti
int3
pop
adc
sub
push
cli
mov
adc
dec
pop
inc
mov
ja
leave
sbb
mov
jg
xchg
mov
addr16
js
inc
add
or
retf
das
dec
mov
inc
cmp
mov
add
jno
push
imul
rcr
add
aam
stos
ins
mov
dec
sbb
jp
mov
retf
or
retf
push
enter
or
data16
les
or
sub
fsub
mov
pop
bound
push
push
sysret
jg
call
movs
fld
nop
(bad)
jbe
mov
cdq
mov
adc
scas
sbb
test
adc
add
pop
jb
xor
mov
jl
push
(bad)
push
outs
push
(bad)
xchg
pop
popf
imul
cmp
in
test
in
adc
pushf
and
fcom
nop
sbb
call
push
jmp
test
leave
outs
mov
in
repz
(bad)
xchg
mov
and
sub
faddp
xor
xchg
cmp
sbb
(bad)
push
mov
shr
dec
call
fild
xor
lods
loopne
lahf
sub
push
ds
lods
push
sbb
push
sub
out
retf
fsub
jo
sbb
xchg
ins
or
cmp
xchg
dec
pushf
jnp
xchg
xlat
ins
mov
mov
pusha
adc
cs
mov
(bad)
int3
jne
sub
into
dec
push
and
add
(bad)
sbb
xchg
jb
hlt
push
mov
les
push
fiadd
add
loope
lahf
cmp
cmp
cmp
jo
repnz
fidivr
sti
scas
mov
loope
fnstcw
inc
jl
test
xlat
xlat
movs
inc
movs
or
ss
call
pop
jp
bound
mov
clc
stos
packuswb
xlat
cmp
xchg
clc
push
xchg
cmp
mov
scas
inc
xor
lahf
test
lds
fmulp
mov
xor
or
fmul
or
inc
aam
mov
pop
fld
mov
out
fistp
xchg
mov
rcr
jmp
add
xlat
call
xchg
push
ror
push
imul
jl
movs
add
out
aaa
ins
adc
adc
js
cli
enter
push
pushf
sub
fwait
mov
jbe
outs
ret
mov
inc
(bad)
xor
mov
jecxz
retf
adc
xor
ja
loopne
pop
and
dec
pop
fwait
jge
fisttp
push
cdq
aaa
loope
and
mov
jae
dec
(bad)
adc
mov
stc
std
sbb
inc
sub
mov
imul
push
je
out
retf
gs
not
push
test
cli
cmp
(bad)
xor
add
push
adc
es
push
out
addr16
lock
pop
js
push
loopne
je
(bad)
push
sti
dec
ja
dec
add
mov
inc
and
mov
gs
xchg
or
cmp
mov
mov
ins
xchg
test
js
mov
jmp
ja
nop
shr
sub
jb
push
dec
pop
fdivr
jmp
ficomp
lods
cmp
inc
mov
sbb
sub
add
and
int
xchg
lods
pop
out
loopne
jp
out
jg
fmul
pop
mov
fadd
leave
inc
sbb
xlat
das
popf
ins
mov
mov
mov
popa
fsubr
repz
bswap
dec
push
jp
add
xor
mov
pop
fs
pushf
xchg
int3
lods
(bad)
ficomp
call
addr16
dec
xchg
(bad)
pop
mov
pushf
aam
jg
mov
sub
jne
retf
lea
imul
sub
cdq
xchg
cdq
cmps
inc
sub
mov
and
ror
fst
adc
cld
sbb
ins
scas
add
cli
test
pop
sub
lds
cmp
and
push
lock
js
gs
bound
imul
out
adc
dec
cmp
sub
aad
cmp
pop
jecxz
ds
imul
std
out
nop
dec
inc
cs
adc
or
lds
cwde
ret
inc
cmps
xchg
jnp
xor
(bad)
hlt
imul
or
mov
loope
scas
add
adc
jns
add
das
je
push
lods
sbb
sbb
arpl
js
pop
pop
xor
outs
lea
xchg
push
jns
dec
push
cmps
mov
and
sub
xchg
or
leave
mov
adc
out
daa
(bad)
adc
push
add
movs
sub
jbe
dec
pop
or
jno
int
jp
dec
je
and
dec
psrlw
ror
xchg
inc
jb
jg
(bad)
pushf
cmp
pop
mov
cwde
icebp
mov
mov
fld
repnz
add
les
inc
push
cmp
arpl
or
mov
std
jnp
fwait
mov
retf
(bad)
mov
adc
(bad)
xchg
cmp
in
sub
imul
stc
test
cmp
ss
inc
test
icebp
das
mov
sbb
add
add
sbb
jecxz
jmp
xchg
pop
out
cdq
nop
adc
enter
add
push
and
sahf
cmp
test
pushf
dec
jle
fs
inc
loope
mov
mov
sub
inc
(bad)
and
test
inc
(bad)
push
call
nop
ficom
lahf
mov
fs
jns
test
or
in
sbb
jmp
(bad)
out
add
sub
pop
adc
ficomp
addr16
ds
fisttp
jg
xor
xchg
inc
sub
xor
mov
sahf
sub
mov
adc
imul
ja
neg
push
mov
jnp
cli
push
inc
inc
xchg
fwait
sub
or
or
cmp
inc
gs
and
push
mov
add
xor
cmp
mov
mov
bnd
ins
lods
and
xlat
mov
sar
cli
xor
not
sub
push
dec
pop
fs
xor
ret
and
fcom
or
aas
cmp
mov
cmps
xchg
jb
mov
push
adc
popf
imul
cdq
bound
pop
hlt
inc
inc
mov
push
push
in
jl
push
inc
popa
xor
pop
mov
cld
lds
cmps
cwde
stc
iret
lods
daa
jno
(bad)
push
sti
pushf
(bad)
xchg
mov
push
std
and
cwde
frstor
test
pop
sub
out
or
test
pop
je
dec
or
(bad)
jmp
mov
lods
mov
sbb
inc
leave
ins
in
pop
leave
inc
aas
rcl
call
fwait
xchg
dec
add
out
pop
cmp
test
lahf
or
std
(bad)
or
adc
dec
xor
popf
fdivr
in
cmps
les
ror
test
mov
ror
jmp
cmps
sub
inc
jno
pushf
xor
std
(bad)
jo
adc
fdivr
push
cs
fmul
inc
movs
add
jbe
adc
add
mov
dec
ss
jp
or
test
fcom
std
xor
shr
stc
adc
push
inc
and
mov
fsqrt
xchg
test
shl
data16
add
into
dec
add
adc
mov
out
sti
inc
xor
mov
(bad)
adc
ret
in
loopne
out
cmp
fdiv
add
loope
xchg
add
add
or
out
and
xor
loopne
sbb
ss
ja
movs
jne
xchg
fs
sub
in
lahf
and
and
xchg
cdq
aam
push
cwde
aam
hlt
or
xchg
jbe
(bad)
les
aam
sar
cmps
aad
nop
push
xor
add
clc
mov
movs
loopne
cmp
jg
mov
inc
lahf
pop
xor
loop
dec
xchg
test
xchg
jb
cmp
or
add
(bad)
shl
dec
cmp
sub
aas
adc
sub
fist
sbb
sub
pop
aad
add
xchg
aad
iret
cmp
icebp
add
mov
cmp
or
and
test
popf
jecxz
imul
mov
dec
nop
lds
add
pop
fldenv
mov
in
gs
in
jne
mov
mov
adc
xor
jno
enter
xor
jns
sub
adc
lods
sub
cld
cmp
shl
xchg
int3
jmp
cmp
xchg
adc
jecxz
jg
push
dec
std
je
mov
dec
sbb
dec
in
(bad)
xor
xchg
imul
rcl
fldcw
mov
inc
pop
add
outs
fcomp
pop
mov
mov
ds
test
icebp
pop
or
or
arpl
loopne
mov
leave
pop
mov
pop
mov
pushf
call
sbb
aam
or
jg
mov
(bad)
jl
or
lds
adc
sar
and
pop
jbe
jecxz
add
es
out
popa
cmp
test
jo
sub
and
mov
rcl
push
fisubr
add
mov
pop
and
mov
push
shr
sbb
xchg
and
arpl
push
and
sbb
pushf
sub
ins
lods
xor
retf
hlt
sub
xchg
in
jmp
out
stos
push
xor
xor
sub
lea
cmp
int
or
shr
jo
cmc
push
mov
and
xor
pop
or
pop
ins
enter
inc
ins
(bad)
and
xlat
inc
cdq
imul
mov
(bad)
pushf
addr16
ror
imul
fistp
jmp
push
loop
jge
cli
xlat
pop
out
aas
pop
adc
fild
sub
imul
mov
clc
pop
mov
push
or
loopne
mov
(bad)
retf
mov
outs
or
pusha
add
(bad)
jo
xchg
outs
add
push
in
jge
dec
frstor
hlt
cmp
outs
mov
push
or
fdivr
inc
adc
(bad)
int
jns
rcpps
test
test
test
jae
cmp
mov
fwait
cmp
dec
mov
and
ins
xchg
outs
aaa
sahf
push
in
aam
cmp
test
neg
adc
out
outs
jbe
or
sahf
xor
mov
inc
mov
into
pop
inc
ss
mov
inc
shr
xchg
pop
aam
fist
out
loopne
pop
add
or
push
add
add
or
aaa
int3
iret
movs
repz
into
fisttp
or
sbb
xchg
data16
inc
repnz
xor
cld
sub
addr16
fstp
adc
cmp
mov
pop
xchg
or
mov
repz
inc
sbb
mov
lds
jno
(bad)
addr16
xor
cmps
pushf
fwait
(bad)
sar
cli
bound
push
push
and
popa
in
bound
mov
cmp
add
sbb
test
add
ins
scas
aas
pop
cmp
mov
popa
pop
lock
es
xacquire
jne
loop
stos
ficomp
xor
movs
pop
inc
std
pusha
inc
inc
mov
pop
std
test
ins
push
or
iret
pop
idiv
sbb
fbld
pop
mov
dec
mov
les
dec
push
shl
bound
(bad)
mov
loop
xor
popf
clc
sbb
ror
in
dec
movs
mov
cmp
sub
aad
mov
popa
jno
dec
inc
ret
mov
sbb
push
int
lock
cmp
adc
push
inc
jnp
cmp
popa
inc
ss
push
pop
dec
rcr
cmps
js
jbe
sbb
xlat
cmc
xchg
pop
pop
test
cs
adc
fsubrp
test
aad
sbb
cld
fucomp
shl
mov
inc
add
jecxz
sbb
test
sub
out
add
dec
mov
sbb
sbb
xchg
pop
xchg
fdivr
mov
fisttp
arpl
mov
push
ret
repnz
mov
or
movs
call
movs
cdq
test
aad
into
movs
inc
add
mov
or
sti
pop
add
(bad)
aaa
and
cmc
jmp
in
shl
jo
cli
aad
inc
sti
and
push
(bad)
js
inc
outs
adc
rcr
dec
jns
dec
stos
cmp
aad
jnp
and
mov
aam
aad
(bad)
sbb
pusha
xchg
fadd
mov
lds
mov
stc
push
aam
inc
add
mov
stos
dec
add
cmps
nop
cmps
repnz
and
lds
push
cld
or
mov
sahf
mov
hlt
bound
xchg
or
inc
xchg
loop
jb
sbb
not
pop
test
inc
cmps
and
ss
daa
aad
sbb
dec
dec
bound
sub
out
xchg
rcl
fld
pop
mov
mov
sar
add
fnstcw
out
sbb
jne
push
mov
retf
sub
in
ss
jnp
popf
and
aas
jnp
jge
sub
ins
xchg
mov
(bad)
sti
xor
push
add
les
push
cld
repnz
mov
push
fld
cld
adc
sbb
push
pop
cmp
mul
jecxz
mov
call
xchg
sub
fnstsw
xchg
imul
(bad)
enter
hlt
adc
lock
pop
xor
sbb
jb
cmps
out
rcr
fdiv
jg
lods
loope
and
outs
aad
fbstp
stc
fist
int
arpl
or
imul
lods
add
pop
neg
stos
cli
clc
sbb
lahf
ret
scas
jb
lahf
outs
enter
lds
pop
call
out
test
pop
xor
test
clc
xchg
mov
and
test
call
jno
nop
xchg
aam
or
sub
and
ror
into
mov
data16
inc
arpl
add
and
jle
or
inc
loop
daa
sub
movs
sbb
stos
sbb
into
popa
in
shl
aam
add
mov
dec
add
gs
(bad)
pop
pop
cli
ins
pop
fld
test
movs
outs
aam
ficom
mov
or
or
je
mov
sahf
fimul
or
add
(bad)
mov
(bad)
mov
dec
leave
hlt
or
(bad)
adc
dec
dec
out
leave
fyl2x
pop
adc
fld
xchg
fadd
mov
(bad)
out
inc
sub
(bad)
sbb
xchg
shl
mov
jo
data16
pop
sub
mov
icebp
cdq
mov
rcr
ret
pop
ds
into
xlat
mov
push
xchg
popa
mov
ret
fist
rcl
dec
sub
mov
jecxz
jne
test
bound
add
inc
dec
mov
mov
fnstcw
popf
jno
sub
cdq
in
(bad)
push
arpl
je
mov
xchg
and
imul
inc
scas
and
shl
cld
arpl
dec
sar
(bad)
fisubr
(bad)
xlat
mov
mov
dec
push
iret
repz
lods
fs
mov
loope
(bad)
cmp
scas
and
sahf
fisubr
bound
pop
test
pop
jnp
adc
pop
push
jo
js
sahf
lods
mov
mov
mov
mov
inc
push
aas
fiadd
loopne
push
xor
pop
xor
jl
mov
test
dec
(bad)
loope
inc
enter
jo
sub
in
sub
or
push
and
inc
mov
xor
cmc
dec
sbb
adc
or
and
xor
mov
mov
pop
jo
cs
in
jmp
mov
add
mov
fst
sti
movs
add
pop
adc
jnp
pop
enter
push
outs
aam
jp
addr16
dec
call
ins
out
fmul
adc
in
push
loope
outs
push
or
lock
adc
pop
push
jecxz
xor
inc
daa
outs
sbb
pop
in
and
aam
adc
dec
movs
sub
aaa
add
cmp
(bad)
mov
jbe
mov
inc
push
mov
xor
popa
sti
mov
sub
push
in
jb
xchg
cmp
mov
adc
imul
mov
adc
or
mov
stos
mov
inc
inc
(bad)
adc
xchg
call
pusha
pusha
adc
das
jmp
mov
wbinvd
push
jg
popa
fiadd
dec
bound
sbb
or
les
adc
inc
mov
pop
ins
lds
cmp
push
inc
test
sahf
jmp
mov
xchg
sub
les
and
push
sbb
pushf
cmc
inc
ret
pop
inc
leave
pop
pop
std
pop
adc
scas
cmp
rcl
or
mov
out
sub
xor
arpl
jb
outs
sbb
mov
outs
xchg
stos
xchg
push
or
wrmsr
cld
add
or
mov
mov
add
sti
ror
cdq
mov
clc
(bad)
inc
out
not
sbb
fdivrp
add
or
das
xchg
mov
outs
push
outs
add
out
sti
xchg
mov
push
push
mov
pop
pop
sub
or
xlat
cmp
popa
sbb
sti
jbe
ret
inc
test
gs
jbe
cmp
cmovl
xlat
mov
push
stc
inc
inc
std
mov
jno
dec
ins
inc
xor
push
cmp
add
std
mov
lods
push
out
jno
cmc
rcl
add
mov
sub
movs
xchg
ins
jle
enter
jmp
stos
sbb
or
cmp
test
icebp
xchg
adc
sub
xor
rcr
fimul
mov
and
(bad)
enter
pop
mov
imul
cmp
cld
inc
mov
inc
xor
add
loop
clc
ds
scas
mov
pop
xor
fst
jae
mov
cmp
fadd
out
mov
or
push
jne
hlt
lock
jmp
adc
addr16
pop
fsubr
cmps
sahf
mov
xchg
xor
out
xchg
xlat
fadd
jne
pop
mov
pop
add
add
fnstcw
mov
stos
movs
mov
add
ins
movs
add
push
push
daa
pop
push
pop
push
(bad)
or
loop
cld
sub
mov
sub
stos
sahf
repnz
push
rcr
xchg
stos
xchg
popf
mov
aas
xchg
mov
mov
out
pusha
je
mov
hlt
jns
stc
mov
aaa
jb
fstp
xchg
mov
add
movs
fwait
pop
outs
fnclex
fdivp
xor
mov
cmps
ja
popa
popf
adc
(bad)
jo
shl
cld
inc
and
lods
mov
sbb
push
push
add
mov
shl
movs
jl
frstor
mov
test
add
(bad)
in
sbb
in
aam
cmp
into
sti
int3
cmc
in
mov
pop
movs
outs
int
or
sbb
pop
push
ins
mov
cli
mov
outs
sub
inc
cmps
std
movs
sbb
adc
sbb
pop
xor
push
or
or
adc
add
movs
xchg
icebp
outs
icebp
enter
lds
arpl
jns
pop
push
retf
sbb
les
xchg
cld
mov
xor
mov
movs
aad
idiv
test
inc
cmp
ror
mov
mov
inc
adc
dec
cmp
pop
cld
mov
out
leave
fs
xor
ss
or
(bad)
add
ds
lahf
popf
inc
push
inc
xor
dec
pop
fstp
or
jne
mov
enter
mov
jae
into
popa
sbb
ds
es
arpl
inc
loope
xchg
dec
sbb
call
(bad)
mov
adc
jb
ret
fwait
xchg
inc
mov
ja
jns
popa
xlat
out
xchg
call
dec
loop
test
mov
and
add
push
mov
adc
inc
cmp
xchg
or
or
push
pop
mov
inc
cli
js
or
sub
lods
mov
pusha
sub
xchg
in
test
adc
rcr
sbb
and
mov
add
icebp
les
push
imul
repz
xor
ins
ja
aad
add
aaa
and
xchg
or
aaa
retf
mov
mov
sbb
push
rcr
fst
clc
or
sub
fistp
addr16
fmul
(bad)
movs
inc
xor
jle
jns
cmp
inc
xlat
xchg
inc
int3
movs
sub
xor
dec
add
push
mov
(bad)
lea
addr16
call
(bad)
and
in
shl
icebp
and
cmp
dec
or
rcr
or
push
add
pushf
add
xor
mov
shl
(bad)
or
(bad)
enter
loopne
pop
(bad)
repz
add
xlat
movs
or
out
and
or
pushf
aam
lock
jmp
ja
mov
mov
cli
jmp
repnz
mov
scas
sbb
dec
fwait
and
and
mov
dec
clc
sub
(bad)
cmp
xor
xchg
jl
movs
dec
int
fild
adc
xor
mov
pop
xchg
loope
sub
sbb
add
loope
int
mov
cmp
cmp
shr
call
sti
xor
dec
(bad)
out
inc
pop
pop
cdq
inc
movs
jmp
cmps
loop
(bad)
jecxz
fiadd
mov
lds
scas
xchg
fdiv
mov
add
mov
ret
add
ja
xchg
cmp
or
fsubr
xchg
test
mov
(bad)
iret
and
js
ficom
jg
and
(bad)
xchg
sub
(bad)
in
stos
mov
clc
xor
jl
mov
push
sbb
mov
jnp
aam
mov
and
adc
xor
idiv
fild
push
nop
gs
sub
fucomi
mov
cmp
add
sbb
imul
jo
es
data16
popa
jge
mov
inc
mov
dec
inc
leave
int
loopne
test
ins
inc
fs
(bad)
or
lea
jnp
out
push
sub
daa
mov
daa
sbb
je
das
test
shl
iret
inc
fcom
or
sbb
test
pop
push
sbb
rcr
jecxz
mov
xchg
stos
xchg
cmp
cmp
adc
inc
jnp
mov
mov
test
inc
or
in
movs
mov
inc
repnz
xchg
lock
mov
loop
xchg
pop
mov
cdq
sub
imul
jl
inc
jae
test
sub
cld
loopne
ja
aas
or
mov
inc
fimul
dec
cmp
test
and
xor
jp
jle
movs
lahf
call
xchg
mov
mov
(bad)
fdivr
dec
enter
sub
push
loop
adc
nop
and
fidiv
cli
inc
daa
dec
nop
add
ficomp
pusha
dec
pop
mov
(bad)
aam
ins
push
pusha
push
push
mov
adc
ds
ret
leave
jns
mov
or
int
aad
enter
and
mov
add
not
daa
mov
push
push
add
jbe
sbb
mov
mov
and
repz
add
cmc
sub
in
ss
xchg
enter
mov
jge
push
data16
pop
call
fidiv
ret
sub
inc
bnd
xchg
(bad)
iret
mov
repnz
scas
addr16
fs
xchg
mov
daa
push
mov
sub
xlat
jae
jg
(bad)
mov
mov
int
mov
mul
adc
cmp
into
or
push
dec
fistp
inc
sbb
xchg
aad
or
imul
xchg
(bad)
cmp
add
mov
fidiv
fs
in
in
div
xchg
scas
pop
jb
icebp
loop
jmp
pop
ja
mov
loope
imul
addr16
sub
sbb
aam
gs
push
push
push
cli
adc
jbe
pop
mov
xor
cmp
mov
fimul
repz
lods
outs
adc
push
mov
fisubr
xchg
call
loopne
mov
adc
fmul
or
jno
dec
cmp
dec
sub
sbb
jecxz
ins
adc
inc
movs
into
mov
test
pop
jbe
sub
or
dec
sub
nop
pop
push
sbb
or
clc
lahf
push
dec
cmp
fcomi
cmp
jnp
inc
arpl
outs
int
out
imul
sahf
or
mov
mov
imul
fcompp
push
nop
(bad)
mov
adc
fidiv
xor
sbb
add
and
lods
jno
movs
aad
aam
ds
outs
out
repz
xchg
jns
push
jl
test
mov
sub
add
jmp
in
inc
in
test
jno
mov
pop
adc
push
xchg
cmp
leave
sub
jp
stos
push
popf
xchg
cmps
inc
icebp
mov
inc
and
(bad)
repz
mov
xchg
or
out
cmc
pushf
gs
cmp
mov
add
cld
sub
fcomp
mov
and
sbb
xchg
leave
dec
adc
push
xor
jle
pop
pop
fstp
movs
and
retf
push
test
aad
push
aam
dec
xlat
sub
mov
out
les
repnz
mov
inc
xchg
cmps
addr16
mov
add
(bad)
jmp
and
jo
push
xchg
daa
(bad)
xchg
lahf
mov
jl
dec
iret
xor
outs
retf
call
daa
enter
inc
ja
outs
sub
dec
pop
cmps
push
es
lods
into
mov
adc
leave
ret
xchg
jnp
and
cdq
in
add
mov
sub
mov
and
mov
push
jge
mov
inc
je
ss
or
out
add
jmp
jmp
pop
jmp
arpl
jmp
call
loope
add
or
add
push
push
cmp
mov
je
xchg
adc
(bad)
popa
push
xchg
ja
in
cld
push
(bad)
aas
inc
adc
mov
out
fs
les
mov
sbb
lea
scas
fstp
push
je
cld
ficom
lea
mov
aas
inc
push
push
mov
adc
jae
push
movs
dec
push
test
dec
repz
daa
jo
stos
aaa
pop
pop
mov
int
(bad)
mov
xchg
push
pop
inc
shl
xor
jmp
dec
mov
sub
repz
fwait
pop
xchg
cmp
mov
hlt
fidivr
aam
sub
loope
icebp
ins
xchg
add
xor
pusha
lea
jp
and
sbb
adc
cmp
jmp
add
fisttp
adc
dec
jl
and
mov
xor
pop
popa
mov
aam
sbb
inc
mov
mov
movs
cld
xchg
stos
out
fmul
xor
cmp
sbb
aad
movs
push
mov
shl
mov
xchg
dec
mov
mov
or
pop
retf
cmc
jg
cmp
movs
dec
inc
fisttp
retf
adc
add
test
repnz
inc
test
call
fstp
pop
pop
bound
cmp
jb
inc
popa
and
addr16
pop
add
fwait
pop
and
or
xchg
mov
push
and
mov
mov
stos
out
push
cmps
push
aam
push
sbb
loop
ror
inc
test
push
sub
popf
jae
(bad)
mov
xchg
mov
xor
popf
jle
fisttp
pusha
dec
push
in
push
sbb
ds
popa
or
xchg
scas
test
cmp
push
xchg
cmp
in
retf
xchg
out
pop
xchg
stc
in
sub
pushf
loop
inc
shr
cli
repnz
push
test
mov
mov
adc
and
dec
mov
mov
sahf
pop
mov
repz
mov
xor
repnz
push
int
pop
sbb
cmp
pushf
mov
mov
pop
push
ret
xchg
stos
and
nop
sar
mov
test
int3
fwait
outs
popa
mov
sbb
aas
dec
aas
in
std
jl
jo
xchg
jo
ret
inc
(bad)
rcr
and
imul
(bad)
stos
dec
mov
addr16
sbb
sub
test
mov
cli
sar
inc
rcr
ror
push
mov
cmp
inc
pushf
pop
hlt
mov
shl
out
aaa
aad
mov
or
call
jmp
aas
adc
ret
add
jle
adc
lock
and
mov
scas
mov
mov
ins
sar
mov
les
and
mov
clc
fsubr
cmps
hlt
adc
add
or
loopne
push
ds
lods
les
test
lea
aas
stos
mov
pop
mov
inc
and
mov
dec
cmps
and
xchg
jmp
hlt
test
pop
pop
pop
cmp
ins
popf
retf
xor
or
push
push
cli
jnp
imul
lods
icebp
pop
scas
sub
fs
arpl
int
cdq
dec
mov
jmp
cmp
mov
(bad)
call
xor
jbe
aam
test
sbb
jb
scas
cmp
sbb
xchg
aad
loopne
clc
arpl
adc
xchg
out
sub
add
ret
adc
push
(bad)
fwait
or
(bad)
lahf
xchg
cmp
iret
mov
dec
ret
scas
outs
cdq
ret
or
pop
jbe
cmp
fisubr
stos
sbb
mov
dec
mov
inc
or
cmp
mov
add
xor
xchg
add
out
mov
test
ja
push
and
cmps
retf
outs
jge
sti
cmp
or
sub
push
dec
mov
pusha
jo
pusha
das
sbb
xchg
retf
mul
sbb
in
jbe
aaa
mov
push
mov
sti
cmc
adc
rcl
sbb
fld
sar
xchg
out
mov
sti
cmp
popf
mov
in
sub
retf
es
std
call
or
lods
sub
shl
mov
adc
inc
movs
dec
inc
fsubr
push
js
sub
pop
xchg
outs
jle
inc
xchg
cdq
mov
xchg
xchg
cmp
fisubr
pop
adc
jp
sub
dec
or
scas
add
scas
repz
mov
jbe
rcr
xchg
mov
xchg
inc
push
shl
sbb
sub
gs
loopne
movs
aam
mov
add
call
ins
xchg
mov
aaa
sbb
xchg
mov
jb
mov
out
push
retf
adc
dec
shl
mov
inc
xor
add
ror
push
ficomp
push
xchg
cmp
sbb
add
shr
push
dec
mov
aad
push
leave
(bad)
fwait
cmp
xchg
(bad)
ds
jbe
jb
ret
rcr
adc
mov
cmp
and
aaa
xchg
cmp
xlat
movs
sbb
xlat
ror
sti
sbb
fstp
xor
xchg
jl
push
xor
sbb
jecxz
xchg
jns
js
sub
cmc
test
dec
vcmpss
out
neg
jp
mov
cmp
adc
scas
cld
call
jnp
popf
(bad)
out
add
test
leave
push
out
lea
es
rcl
test
adc
pop
add
jmp
scas
pushf
movs
cld
mov
pop
pushf
adc
mov
xlat
jmp
lock
inc
cmps
sbb
out
mov
sub
sbb
sub
inc
mov
leave
or
scas
ror
sub
stc
cmc
fidiv
sub
add
out
fidivr
(bad)
cmp
mov
push
jnp
adc
mov
cwde
cmp
adc
jae
jbe
enter
ins
push
outs
mov
out
imul
pop
push
xor
shl
loope
sub
push
sar
out
mov
out
xchg
push
enter
jmp
pop
jno
push
xchg
lea
fsubr
cli
add
aad
sub
mov
push
or
cmp
test
or
ret
adc
cmp
repz
ja
dec
rol
and
fucompp
loopne
or
push
popa
movs
jmp
xor
into
in
cmp
xor
push
xor
mov
pop
ins
iret
sub
jno
pop
or
add
or
nop
loop
sbb
dec
adc
(bad)
scas
dec
lods
ss
mov
bnd
daa
sub
stos
outs
inc
jg
push
add
cmp
jno
neg
lock
inc
cs
mov
movs
(bad)
cmps
imul
ja
inc
(bad)
in
call
dec
imul
retf
cli
dec
scas
jp
retf
mov
mov
adc
xlat
sar
scas
cmp
add
arpl
scas
and
int3
adc
(bad)
cwde
cmp
pushf
xchg
push
jnp
clc
lahf
jno
dec
aas
pop
and
dec
jg
sub
test
xor
js
bnd
xchg
or
push
lock
stos
xor
push
push
daa
leave
test
nop
in
fild
(bad)
inc
mov
iret
pop
inc
dec
and
in
fcmovbe
mov
sub
fxch
rcl
xchg
cwde
stc
xchg
xchg
loope
cdq
repz
push
mov
add
mov
or
pop
mov
push
xor
hlt
dec
xchg
(bad)
or
xchg
pop
clc
xchg
arpl
sub
inc
es
rol
push
popa
add
jmp
scas
cmps
fldcw
and
dec
movs
in
mov
push
adc
sub
mov
cmps
jle
cmp
and
scas
cmp
(bad)
fcmovbe
out
scas
pop
add
jmp
test
ins
test
mov
test
fstp
test
daa
add
push
out
das
mul
jge
pop
cmp
jmp
iret
(bad)
out
call
push
pop
push
push
xor
inc
test
cmps
jae
jg
mov
pop
iret
push
stos
lea
(bad)
pop
imul
and
pop
jae
mov
push
xor
cs
repz
cdq
mov
adc
and
repnz
or
outs
mov
stos
inc
cmp
add
and
mov
cmp
aam
push
ja
mov
or
outs
inc
xor
push
fsub
xor
or
push
push
fidivr
imul
mov
(bad)
cmps
xlat
in
ret
ret
dec
aas
outs
int3
mov
sub
xchg
shl
cld
jns
or
inc
adc
adc
movs
or
push
xlat
data16
repnz
pop
inc
mov
(bad)
or
push
pop
out
pop
xchg
pop
jo
pop
aad
push
sub
bound
mov
hlt
sbb
jge
cmps
je
test
popa
hlt
push
jne
inc
enter
aad
test
jae
mov
mov
push
ins
mov
xchg
fild
repnz
movs
jmp
push
(bad)
repnz
or
jmp
(bad)
aaa
sbb
int
xchg
ss
xlat
fs
stos
and
pop
push
test
dec
or
stc
ficomp
shl
push
jmp
das
xchg
dec
sti
lahf
and
jl
retf
mov
cmps
xchg
or
add
cs
nop
out
daa
pop
jno
ins
push
dec
xor
lock
inc
push
into
inc
pop
loope
(bad)
mov
retf
sub
and
test
sbb
mov
pop
inc
dec
sub
add
jae
dec
adc
jmp
rcl
hlt
mov
call
and
sbb
in
arpl
jg
lock
sti
xchg
cmp
ja
xchg
xchg
xlat
pushf
xlat
sbb
xor
push
(bad)
jae
or
stos
inc
ja
shr
int
sub
add
das
dec
test
loopne
xchg
outs
sub
lahf
jbe
mov
mov
(bad)
call
sub
mov
js
mov
pop
gs
inc
imul
je
and
and
or
sub
xor
jle
mov
mov
cmp
loope
sub
add
xchg
xor
jbe
std
out
mov
or
mov
and
pushf
adc
adc
push
out
xor
cmp
dec
push
push
inc
pop
xchg
pop
(bad)
xchg
(bad)
sbb
loope
loope
cli
sub
jmp
xor
push
jecxz
in
push
(bad)
sbb
icebp
dec
sbb
adc
loop
dec
mov
jb
(bad)
cs
sub
lock
ret
ja
mov
test
test
sbb
jp
outs
adc
sub
dec
push
xchg
cmps
inc
stos
jg
rol
cli
push
push
xchg
sub
lock
push
data16
je
xchg
jmp
iret
aad
loope
in
mov
add
pop
out
inc
fbld
aaa
test
fwait
xchg
cs
(bad)
test
and
add
sub
lea
(bad)
sbb
mov
mov
push
sbb
jmp
jmp
inc
leave
std
ins
inc
ins
push
cmp
jb
dec
sbb
clc
cmps
inc
pop
sar
shl
das
adc
sub
lock
jl
xchg
movs
ins
push
xchg
loopne
stos
cwde
fld
xchg
stos
fnstsw
test
push
pushf
stos
xor
sti
jecxz
cdq
or
js
xor
imul
or
paddsb
stos
or
mov
iret
clc
aad
cmps
xor
mov
or
jnp
loope
bound
fmul
or
cmc
jae
daa
mov
push
cmp
loop
sbb
add
aad
gs
scas
fisttp
ja
xor
ret
stos
movs
push
xchg
aad
push
mov
pop
je
out
pusha
jbe
mov
push
in
mov
test
repnz
test
cmp
or
jno
in
pop
int
std
outs
(bad)
pushf
imul
adc
mov
jmp
push
pushf
movs
and
push
not
and
mov
mov
push
arpl
cmp
fcomp
dec
ret
push
scas
jg
stos
cld
stos
mov
add
ins
xor
dec
jecxz
call
xchg
test
or
jmp
adc
js
adc
or
mov
sbb
xchg
or
sub
sub
and
pop
icebp
sahf
pop
loopne
pop
add
cld
push
xchg
push
cdq
aas
mov
jns
or
and
xchg
mov
sub
scas
mov
sub
(bad)
into
call
ds
sti
or
xor
adc
fcomp
push
fucompp
stc
test
inc
jbe
out
stos
sub
adc
fist
cli
scas
xchg
mov
mov
sub
xor
shr
sbb
mov
mov
lds
cmp
fistp
jae
aad
call
and
xchg
and
adc
stos
xchg
and
sbb
xchg
cmp
inc
(bad)
in
dec
adc
push
loop
rcl
pusha
and
xor
ret
js
dec
xor
xchg
popa
xor
fstp
mov
out
sub
xor
jecxz
pushf
hlt
data16
mov
push
add
or
xor
shr
lds
(bad)
cdq
mov
add
repnz
ja
adc
daa
pop
data16
test
pop
ins
cmps
loopne
mul
or
mov
and
mov
int3
pusha
shl
pop
mov
scas
and
jp
sahf
xchg
repz
call
pop
les
lea
jge
ficom
push
fiadd
push
jno
ror
fwait
or
repnz
add
sub
(bad)
xchg
sbb
inc
jle
loopne
out
mov
or
adc
sbb
add
mov
out
es
shl
sbb
aaa
sbb
loope
vmovd
mov
push
mov
xor
call
fdivp
push
imul
jl
dec
pop
stos
inc
xchg
pop
fbstp
mov
push
inc
push
or
dec
xor
adc
clc
sub
sbb
push
lods
shl
aad
fld
add
and
stos
push
out
in
and
push
test
add
add
cwde
rcl
mov
das
out
jno
xchg
and
xchg
xchg
jno
xor
push
sbb
sbb
and
fsub
idiv
push
xor
mov
arpl
(bad)
jne
or
ret
xor
pop
mov
dec
sub
sbb
ss
out
out
imul
and
push
outs
xchg
test
mov
in
jae
inc
int
pop
xor
loop
mov
cmp
(bad)
pusha
je
repnz
les
jb
push
fsub
push
data16
add
mul
mov
call
pop
call
and
stos
mov
fimul
imul
icebp
cmp
push
addr16
and
mov
movs
loop
lods
add
mov
and
xchg
call
mov
js
loop
dec
pop
adc
push
adc
or
into
mov
jbe
and
js
cmp
mov
mov
inc
add
in
cmp
pop
js
enter
cmp
jge
fwait
or
out
(bad)
lods
add
pushf
sbb
cwde
inc
sub
retf
xchg
mov
fdivr
xor
hlt
lock
and
mov
(bad)
push
ja
sub
inc
jge
mov
push
cli
clc
sub
xor
cdq
jno
and
(bad)
pop
arpl
fld
icebp
inc
xlat
loop
jmp
or
bound
push
mov
ret
shl
dec
xchg
out
mov
jae
call
xchg
out
push
sti
scas
jmp
hlt
cmps
push
mov
xchg
push
into
mov
out
les
js
icebp
(bad)
cld
mov
loope
mov
sbb
and
shr
adc
sti
push
add
mov
out
(bad)
push
push
in
shl
mov
sbb
cli
iret
pushf
inc
hlt
inc
jb
inc
dec
fisttp
or
ja
dec
pushf
jp
loop
cmp
mov
push
mov
xchg
sbb
pop
inc
fimul
or
in
dec
in
push
mov
xchg
test
push
mov
in
fst
test
cmp
mul
lods
mov
jne
das
cmps
jb
sahf
add
mov
dec
jl
(bad)
aaa
movups
psubw
cmps
mov
ins
fxch
ds
inc
inc
adc
inc
mov
cmps
mov
and
icebp
sub
cmps
ror
adc
fst
jne
int
mov
popa
adc
(bad)
sti
or
adc
test
mov
mov
pop
frstor
fcmovnb
test
sub
shl
ins
pusha
xchg
mov
cmc
pop
scas
clc
cmp
mov
popf
add
clc
sbb
add
imul
rcr
cmp
xor
outs
fiadd
fsubr
imul
lahf
or
inc
gs
movhps
pop
jge
jmp
loope
(bad)
pop
push
sar
mov
ret
pop
aas
adc
pop
xor
mov
mov
fiadd
fmul
add
sub
sbb
daa
outs
adc
push
dec
jo
xlat
dec
retf
ja
loopne
mov
sti
imul
adc
jnp
add
mov
clc
adc
mov
enter
arpl
mov
stos
lds
mul
in
js
test
loop
loope
scas
mov
pop
sbb
sub
cld
add
xor
inc
sti
cmp
call
mov
scas
jmp
cli
ja
sub
sbb
bound
xchg
(bad)
in
or
adc
xchg
pusha
cmc
mov
pop
sbb
cld
push
jbe
push
loope
out
loop
add
pop
adc
retf
push
mov
es
retf
add
lods
adc
pusha
repz
push
pop
dec
dec
xor
jno
lea
pop
aad
es
and
jp
or
cmp
xor
cmps
and
cld
or
out
mov
pop
iret
xchg
adc
xchg
mov
in
aas
dec
aas
mov
mov
xchg
inc
cmp
sub
mov
and
je
test
cmp
xchg
loope
dec
pop
dec
fs
inc
or
cmps
loop
cwde
outs
addr16
mov
push
lea
push
push
rol
and
arpl
shl
push
lock
(bad)
je
mov
scas
iret
movs
sbb
sub
call
jnp
dec
in
popa
lock
jae
popf
or
add
sahf
sub
lahf
mov
ror
arpl
std
sub
mov
ja
mov
inc
push
lods
mov
jae
dec
dec
jbe
or
jns
and
mov
dec
mov
rcl
mov
stos
or
xor
pop
push
push
pop
inc
mov
push
ja
out
and
loopne
xchg
add
popa
test
loop
push
push
pop
repnz
(bad)
inc
es
or
cmp
jo
div
test
js
sub
inc
sbb
xor
inc
fst
and
outs
dec
int3
pop
jbe
or
lock
scas
sub
add
xor
ret
test
pop
movs
scas
push
mov
movs
cmp
retf
xchg
xor
inc
jle
xor
mov
jg
jnp
jmp
pop
test
xchg
cmps
inc
mov
sar
daa
stos
xchg
mov
inc
jl
inc
mov
push
push
mov
and
add
movs
loop
loop
xor
sub
jns
xchg
sub
cmp
sbb
loop
mov
imul
jle
in
sub
ins
scas
xor
cwde
pop
and
aaa
add
jae
dec
pop
jnp
xor
je
add
inc
gs
dec
outs
add
shr
jb
frstor
sub
sub
cld
lahf
popf
popa
jmp
lds
fld
cmp
push
prefetcht2
jo
inc
loope
xor
inc
and
clc
sub
jg
(bad)
test
imul
adc
jb
pop
cs
sub
pop
leave
stos
repnz
or
inc
aam
xchg
xchg
xchg
mov
mov
mov
ret
mov
ds
push
aad
cmp
aas
test
sbb
pop
jmp
xor
push
ja
cmp
fld
scas
sub
mov
shr
push
(bad)
sahf
dec
push
xor
xchg
shl
mov
and
push
ret
mov
pop
push
test
test
push
inc
ret
fwait
jbe
push
mov
xchg
jb
xchg
xor
sar
jns
fucomi
test
cmps
adc
inc
mov
adc
mov
pusha
fs
jnp
std
mov
(bad)
in
jmp
call
inc
das
xchg
add
jp
mov
inc
push
or
mov
dec
je
sub
and
inc
movs
jns
nop
sbb
test
push
arpl
outs
sbb
sti
cmp
inc
mov
adc
outs
fldcw
popa
mov
in
sahf
xchg
push
rcr
inc
inc
(bad)
ins
aaa
lods
inc
iret
jae
xor
retf
mov
add
and
dec
jae
cdq
fist
into
adc
jns
enter
out
add
xor
push
mov
sbb
xor
test
pop
cmp
or
shr
push
dec
sub
jns
aaa
sub
dec
mov
(bad)
arpl
jnp
jo
dec
sahf
popf
fsubr
in
sbb
aaa
mov
pop
fist
sub
dec
mov
loop
stc
pop
dec
cmps
mov
pop
ficomp
dec
xchg
cmps
shl
push
sub
and
std
xor
retf
jl
cdq
jno
cld
mov
out
xchg
add
add
mov
mov
aaa
rol
mov
add
in
or
or
sbb
js
pop
cli
jb
push
clc
sbb
cmp
pop
jne
xchg
addr16
rol
dec
mov
fcomp
mov
xlat
jg
push
ins
mov
xchg
cdq
sar
fisubr
fst
fisub
fisttp
push
ret
pushf
mov
mov
scas
add
cmc
sbb
clc
in
jmp
or
xor
ins
mov
lgs
das
inc
stos
mov
ret
movs
(bad)
adc
inc
retf
into
sar
xchg
hlt
mov
xchg
je
cld
in
inc
pop
add
test
nop
and
push
pop
adc
push
jle
or
ror
sti
jno
pop
cbw
test
arpl
ret
push
mov
push
into
xchg
arpl
test
jo
iret
add
push
jp
stos
or
retf
and
and
sbb
test
push
mov
js
jle
repz
rcr
or
cmp
xor
xchg
fcomp
mov
pop
repz
cmp
ins
shr
mov
mov
pop
add
in
adc
dec
cmps
jmp
data16
cmp
or
cwde
and
loope
xchg
cmps
jns
fcomp
pop
aaa
sbb
inc
outs
inc
push
repnz
cmp
or
or
lods
cmp
ret
inc
ret
fild
sub
sub
popa
(bad)
loop
or
shl
push
pop
popf
ss
dec
les
push
mov
add
mov
std
in
sbb
sahf
loopne
inc
push
pop
sub
repz
mov
pop
movs
stos
popf
adc
adc
push
xchg
mov
mov
retf
adc
and
xchg
cmps
dec
adc
adc
daa
mov
mov
out
stc
fbstp
arpl
cmc
mov
sub
jns
xchg
rcl
dec
sti
popf
dec
icebp
ja
add
jns
mov
inc
cwde
adc
pop
in
rcr
adc
push
pop
xchg
fldenv
mov
neg
retf
loope
push
sbb
cs
cmp
inc
stc
or
pop
retf
sbb
mov
pop
stos
popw
out
push
sub
mov
loopne
call
ja
adc
xchg
lods
xchg
add
pop
(bad)
js
mov
cmp
movs
cld
je
inc
dec
mov
adc
js
mov
and
jb
mov
mov
or
call
aad
pop
and
icebp
mov
enter
xor
pusha
sar
jmp
std
outs
mov
test
cld
adc
jle
stc
pop
(bad)
mov
and
test
push
push
dec
pop
dec
mov
mov
(bad)
mov
pusha
leave
mov
aam
push
add
cs
out
popa
sub
sub
cmp
pop
out
fidivr
mov
cmp
pushf
push
ss
jmp
mov
jno
xchg
(bad)
js
xor
popa
mov
je
(bad)
push
inc
(bad)
push
icebp
shl
mov
and
and
pop
pop
jno
ficomp
xor
sbb
mov
pop
xchg
repz
jle
pop
(bad)
(bad)
xchg
cmp
push
cmps
mov
(bad)
fisttp
cmp
test
jp
test
jmp
xlat
ss
sbb
aam
loopne
outs
mov
xchg
lahf
pop
sbb
dec
inc
mov
cmp
cmp
mov
imul
inc
neg
ja
ret
and
ins
pop
out
test
jl
(bad)
sti
mov
adc
cmp
sar
or
pop
pop
and
sub
stc
and
mov
mov
loop
add
pop
push
retf
dec
loope
push
movs
mov
xchg
lea
popa
icebp
push
jnp
xchg
push
inc
sbb
sbb
fcom
push
loop
push
push
pop
adc
test
or
sahf
dec
call
int
je
add
push
pop
and
dec
jge
jae
pushf
push
arpl
cmc
add
sbb
dec
xor
out
pcmpgtd
imul
pop
sub
mov
inc
clc
push
push
bound
inc
inc
cmp
sbb
push
ds
stos
fistp
jmp
lds
retf
in
adc
jb
pop
aam
lods
scas
mov
popf
and
(bad)
cmp
lds
iret
xor
add
sub
xchg
sbb
xchg
std
nop
inc
into
test
cmovo
loope
fdiv
xor
outs
mov
cs
mov
cdq
iret
push
push
loope
mov
es
daa
retf
out
retf
test
movs
lea
lods
or
call
outs
push
test
cwde
test
mov
pop
sub
cmps
push
gs
inc
sbb
pop
jnp
jns
jmp
bound
pop
daa
push
sbb
shr
fbld
mov
stc
mov
inc
fwait
ret
in
xchg
jo
xchg
jle
mov
(bad)
cmp
test
pushaw
push
mov
dec
movs
pop
jg
cmp
or
push
stos
fstp
mov
adc
cmp
pop
add
sbb
inc
arpl
aam
jnp
or
dec
or
push
cmp
sub
out
(bad)
sbb
jne
test
sub
rcl
jne
push
gs
adc
add
lock
adc
push
adc
ins
pop
inc
int
sub
repnz
cmp
enter
retf
mov
sub
ja
add
pop
sub
loope
(bad)
xor
dec
retw
mov
sub
jmp
ds
push
mov
add
shl
in
repnz
imul
mov
repnz
jle
and
jb
sbb
movs
or
outs
lods
(bad)
jmp
pop
movs
rol
adc
inc
inc
pop
pop
lods
pop
and
mov
imul
push
js
mov
jge
mov
iret
xor
push
pop
mov
push
fbld
iret
mov
jecxz
mov
std
(bad)
add
sub
and
adc
add
push
adc
inc
sbb
mul
scas
and
sti
pop
adc
xor
jmp
xchg
xor
test
in
rol
fstp
add
outs
(bad)
jno
sbb
repz
out
(bad)
outs
cdq
add
adc
sti
jnp
in
adc
hlt
mov
das
lods
fucomp
cdq
pop
loop
inc
xchg
sbb
lea
rol
out
jg
(bad)
mov
jns
jp
ror
xor
or
cmp
mov
fisttp
cmp
(bad)
mov
jle
push
cmp
push
inc
(bad)
shl
mov
stos
jne
push
cmp
add
lea
jo
aam
cmp
and
imul
pop
hlt
mov
sub
popf
lahf
pop
inc
inc
jg
jns
mov
dec
daa
push
push
sar
into
xor
add
sub
pop
push
(bad)
mov
fisubr
xlat
sbb
push
push
sbb
iret
lods
add
jns
shr
inc
leave
fwait
mov
arpl
bound
xor
sub
ds
xlat
cli
sbb
sub
xchg
dec
mov
pushf
scas
jbe
jmp
xchg
not
(bad)
push
test
test
xlat
aaa
scas
inc
sub
push
in
mov
inc
popa
xchg
push
cmp
nop
inc
mov
adc
lahf
xor
pop
xchg
mov
mov
std
dec
ret
lock
(bad)
mov
rcl
add
jle
pushf
ds
cmps
jmp
int3
ror
inc
xchg
scas
push
outs
mov
ret
add
mov
jl
fwait
int
ror
add
cmp
jns
movs
ds
loope
xchg
inc
dec
sub
imul
call
jns
jae
and
ffree
mov
aad
pop
stc
sar
add
add
jbe
sbb
lds
int3
mov
adc
mov
xchg
mov
nop
cmp
sbb
inc
jg
xor
or
cli
cmc
mov
fneni(8087
movs
pop
pop
xor
inc
cld
jo
loopne
cmc
xchg
jae
mov
or
adc
sub
dec
clc
cdq
mov
add
cmp
and
mov
shl
rol
and
dec
mov
mov
das
addr16
(bad)
cli
(bad)
cmc
stos
inc
fwait
pop
sar
sub
xchg
clc
mov
inc
ss
out
fucomi
fwait
mov
movs
push
inc
and
test
sahf
sbb
shr
addr16
loop
(bad)
pop
mov
shl
leave
mov
rcl
pop
fiadd
leave
sbb
sbb
test
dec
popf
jno
xchg
mov
dec
push
stos
xchg
stos
mov
je
mov
rol
stc
call
stos
or
mov
add
push
ret
xor
das
cmp
mov
xor
sar
dec
cdq
ins
mov
rcr
inc
xchg
push
xchg
adc
add
ret
or
popa
shl
test
ret
mov
inc
add
or
ds
sti
pop
ret
xchg
ror
gs
push
xor
jg
bound
sbb
push
leave
mov
ror
movs
dec
fidivr
test
mov
jo
xlat
jp
sbb
daa
sbb
and
mov
cmp
cwde
retf
sub
push
stc
into
pop
push
je
(bad)
cmps
test
sbb
retf
jb
leave
fistp
data16
pop
cmp
and
mov
cmp
js
push
ja
dec
push
jo
cmp
cs
xor
dec
test
pop
push
jmp
jge
mov
nop
sub
pop
push
ins
push
pop
sar
inc
hlt
lahf
mov
inc
nop
mov
retf
add
call
popa
loope
mov
push
xchg
bound
cmp
cmp
loop
fsubp
xlat
and
cwd
pop
jge
out
int
xor
es
sbb
jl
jmp
jne
sub
mov
push
mov
repnz
in
push
ss
xor
sbb
push
adc
aam
cdq
cmpxchg
lods
jl
rcr
cmps
xchg
ins
imul
(bad)
dec
jmp
sub
stos
xchg
rcl
retf
xchg
scas
add
js
sbb
idiv
out
imul
dec
(bad)
lods
cmp
xchg
pop
adc
or
je
sub
mov
xchg
add
or
push
xor
jns
xor
push
adc
lahf
pop
pop
lea
mov
sbb
pop
dec
dec
mov
ins
das
lds
mov
fs
adc
jae
out
(bad)
mov
pop
mov
cmc
retf
hlt
push
xchg
in
fisttp
stos
not
into
mov
xchg
mov
js
jne
lods
inc
jmp
(bad)
loope
mov
add
or
mov
push
or
loop
in
xorps
test
mov
pop
test
out
outs
ficom
lahf
popf
movs
rcl
mov
pop
arpl
ja
dec
nop
sbb
sbb
loopne
sub
in
shl
test
jnp
out
mov
jns
xchg
ins
retf
jae
pop
mov
dec
ret
loopne
hlt
mov
daa
int3
jae
jecxz
xchg
icebp
imul
and
fidiv
scas
aaa
aam
test
int3
movs
pop
movs
mov
cmp
mov
ins
jge
dec
mov
mov
add
test
fwait
jl
sbb
sbb
(bad)
pop
mov
ja
xchg
lods
test
and
lahf
jecxz
aaa
jl
jmp
stos
mov
cmc
push
ins
lock
inc
xchg
mov
mov
dec
and
pop
add
push
xchg
jb
in
cmps
dec
dec
jb
bound
icebp
(bad)
(bad)
adc
ret
ftst
lds
mov
cmc
scas
and
cmc
mov
int3
popf
fidivr
out
cmp
mov
fst
lods
and
mov
jmp
call
sbb
(bad)
xchg
aam
dec
or
cli
ret
vpshuflw
rcr
int3
add
movs
push
stc
adc
fcmovb
pop
mov
pop
jmp
pop
sbb
dec
shl
stos
call
aad
ins
retf
test
aad
push
repnz
aad
ret
jmp
inc
jnp
clc
(bad)
nop
pushf
stos
hlt
test
pushf
sbb
shr
fxsave
(bad)
inc
lods
aas
xor
adc
or
or
cs
mov
and
(bad)
mov
mov
rol
in
shl
sahf
jbe
mov
xlat
mov
xchg
adc
push
pop
and
pop
xchg
sub
jbe
sbb
dec
jne
xchg
push
ret
stc
test
push
and
xchg
test
dec
in
push
movs
sbb
xor
mov
mov
or
mov
add
aas
repz
mov
add
jae
or
push
xchg
sub
enter
jg
and
or
mov
leave
adc
xchg
repnz
in
sub
shl
cmp
dec
lock
pop
fldcw
or
rep
and
add
xor
in
xchg
ins
inc
mov
int
inc
adc
popa
lock
(bad)
int
repz
cmp
(bad)
push
mov
popa
out
dec
sbb
add
jbe
pop
out
mov
and
mov
xor
pop
sub
call
out
xlat
out
loopne
adc
adc
push
push
js
sub
xlat
sub
mov
cmp
push
hlt
cwde
push
in
cmp
jmp
ret
loop
mov
icebp
mov
dec
jbe
mov
popa
scas
fsubr
inc
pop
sbb
inc
xchg
les
add
arpl
into
push
retf
pop
cmc
jecxz
sti
or
mov
xor
movs
jp
sbb
aaa
or
movs
mov
in
dec
mov
leave
jg
mov
xchg
sbb
add
call
sub
enter
fistp
out
jp
mov
jge
in
push
dec
outs
jns
mov
retf
mov
cmp
mov
sahf
idiv
or
nop
movs
lods
fstp
call
push
or
jmp
inc
sub
mov
shl
inc
push
inc
cdq
pushf
mov
mov
rcr
fmul
xchg
pop
push
addr16
sub
lahf
mov
xlat
pop
mov
push
shl
xchg
loopne
ss
cli
ss
inc
pop
cmp
sbb
or
mov
int3
test
push
push
lea
inc
mov
shl
aas
pop
xor
imul
test
inc
adc
pop
xchg
and
mov
data16
sbb
xchg
mov
jne
push
xor
dec
(bad)
mov
or
add
retf
out
push
mov
in
sub
or
mov
rol
outs
dec
inc
jno
pop
les
shl
jl
push
xchg
ins
adc
mov
clc
pcmpgtw
retf
mov
iret
lods
rcl
mov
jne
cmps
lods
stos
das
ret
cs
sub
mov
jns
clc
push
ss
mov
and
xchg
adc
scas
inc
sahf
shl
mov
add
mul
popf
cmp
not
dec
adc
ret
sbb
leave
mov
scas
and
out
lds
das
add
jno
cwde
scas
mov
xor
test
out
pop
or
jno
mov
rcr
jnp
push
and
sbb
in
popf
std
lods
jecxz
or
sbb
ins
pop
in
add
dec
into
dec
add
jae
add
jp
or
push
and
jne
iret
inc
ins
cs
sub
clc
or
cwde
aam
pop
jg
mov
mov
inc
dec
mov
mov
add
and
adc
data16
adc
cld
xchg
xchg
lods
aam
and
push
mov
in
dec
add
js
jbe
xor
iret
mov
jae
mov
pop
in
xor
(bad)
push
sti
repnz
ret
(bad)
aaa
or
pop
dec
pop
xchg
test
call
and
push
jl
xor
push
fmul
jbe
jp
cwde
mov
into
dec
ret
dec
scas
fcom
(bad)
fisub
xor
retf
(bad)
or
pop
movs
push
push
shr
jmp
pop
popf
xchg
nop
pop
cs
jo
ret
pop
lds
xchg
adc
jns
sub
out
std
fmul
xchg
mov
pusha
xor
dec
(bad)
outs
test
inc
shl
push
jmp
push
test
xchg
ret
jle
push
pop
test
imul
cld
xchg
add
pushf
sahf
mov
jbe
add
ins
xchg
call
dec
mov
out
mov
sbb
test
sbb
adc
test
push
xor
xchg
inc
mov
test
push
lea
inc
jp
xor
mov
jb
pop
jnp
pop
stc
fiadd
dec
jecxz
add
mov
mov
scas
xchg
rcr
nop
xchg
(bad)
into
sbb
mov
call
arpl
outs
jle
mov
dec
out
jae
pop
sbb
lahf
xor
pop
pushf
push
rcr
pop
or
int3
pmulhw
ja
(bad)
call
push
in
xor
push
enter
arpl
or
add
push
mov
xchg
jb
test
fisubr
sti
ss
jmp
ss
jmp
lea
jbe
gs
repnz
jg
mov
cmp
stc
fsub
pop
and
pop
dec
fsubp
adc
cmp
mov
dec
mov
loop
inc
iret
xor
mov
ins
scas
in
jmp
ins
pop
fldcw
nop
pop
fisub
pop
stos
scas
mov
arpl
mov
inc
cmp
ins
jbe
inc
push
inc
mov
push
cmc
not
inc
mov
ds
adc
jp
cmp
into
and
ror
push
push
out
jl
fcom
hlt
in
mov
xor
sub
fcom
stos
popf
fsub
gs
add
and
sub
sbb
pop
dec
add
add
or
sbb
(bad)
loop
jp
ins
or
fsub
cmps
mov
inc
loopne
add
add
and
into
lods
loopne
enter
cld
xor
push
test
mov
jge
pop
fild
(bad)
stc
por
imul
test
hlt
cdq
ss
sahf
cli
scas
rcl
popf
int3
test
jmp
pop
movs
xchg
jo
lock
push
scas
loope
mov
loopne
lods
cli
aaa
xchg
mov
movs
sbb
push
mov
pop
cmc
jns
in
push
aad
fwait
add
xchg
shl
cmp
and
adc
sbb
mov
mov
jae
cld
mov
xor
nop
iret
mov
into
shl
iret
jl
js
test
mov
jl
push
push
or
lahf
inc
fadd
sub
ficom
cmp
js
xchg
sar
and
ret
in
add
js
lods
mov
cmp
add
iret
add
es
(bad)
aaa
jne
dec
dec
xor
sbb
scas
mov
xchg
imul
sub
pop
pop
gs
jns
fadd
jmp
fwait
xor
aaa
sbb
mov
push
push
mov
pop
repz
inc
dec
and
mov
jmp
ret
stc
pop
xchg
bound
jbe
fxam
out
cmc
push
and
scas
out
popa
in
leave
and
(bad)
(bad)
out
mov
mov
retf
add
bound
mov
rcl
jbe
jg
dec
pop
fist
mov
movs
pop
mov
int
ja
fcmovnu
and
adc
or
sub
in
xchg
aad
iret
nop
jae
xchg
in
mov
outs
xor
adc
lds
stc
ss
xchg
out
cmp
pop
es
ss
dec
pop
lahf
sub
iret
or
inc
mov
int
sub
pop
push
xor
test
xchg
jge
daa
lods
cmps
pop
cs
test
and
mov
dec
xlat
fisttp
lea
popf
push
sbb
and
xor
and
mov
fst
dec
ss
outs
adc
sahf
mov
sar
jne
das
adc
xchg
jbe
or
xchg
ftst
mov
xor
rol
xor
xor
mov
addr16
xchg
xor
in
inc
(bad)
or
xchg
push
inc
(bad)
out
pop
inc
(bad)
mov
stc
pop
add
dec
gs
adc
rcr
arpl
ds
cdq
mov
pop
or
jg
nop
or
inc
or
pop
test
mov
ins
and
push
lds
sub
scas
push
sub
sbb
mov
add
mov
and
js
pop
xor
aas
push
push
popf
inc
cmp
sahf
jb
sub
sub
sub
xor
fsubr
jne
arpl
push
pop
(bad)
dec
mov
sub
int
dec
lods
cli
int
sbb
pop
and
xchg
sub
sub
mov
icebp
div
daa
lods
in
arpl
leave
mov
pop
js
pop
inc
jecxz
adc
popa
(bad)
shl
cmp
mov
or
xchg
mov
lock
out
pushf
repz
sbb
stos
mov
aaa
cmp
xlat
xor
cmp
jle
jp
test
out
jb
mov
ins
cmps
fwait
aam
sbb
outs
push
xchg
jg
bound
pop
call
add
icebp
(bad)
call
mov
sub
into
or
sub
or
lods
sbb
fcomp
ret
inc
fcmovbe
pop
out
cmp
mov
in
jnp
mov
cli
je
movs
fsub
mov
pop
mov
aaa
jmp
out
mov
aaa
mov
mov
sub
inc
jecxz
cld
dec
dec
mov
out
loope
shl
inc
mov
or
pushf
mul
pop
mov
inc
test
cmp
mov
jmp
mov
jns
sar
mov
fidivr
and
out
fst
ins
fsubr
push
cwde
test
daa
and
mov
jge
cmp
mov
mov
jge
leave
pop
daa
fistp
sub
xchg
push
adc
jmp
add
xchg
and
sub
out
add
out
(bad)
mov
shl
sub
ins
add
xlat
ins
jae
inc
ror
add
pop
scas
or
inc
push
pop
dec
push
out
in
or
jp
scas
push
jp
rcl
inc
in
sub
clc
and
push
mov
pop
jp
lock
lods
pop
call
push
daa
mov
sub
stos
adc
push
inc
aas
gs
ins
jg
jae
(bad)
lods
ins
mov
xchg
mov
jl
or
xchg
arpl
neg
dec
sti
mov
nop
sahf
mov
lods
cmp
out
adc
out
add
push
in
scas
sub
jnp
rol
push
into
or
lahf
div
jo
pop
jae
(bad)
jl
fisubr
sub
sbb
je
mov
lods
inc
inc
cmp
(bad)
stc
xchg
pop
push
in
pop
dec
jmp
adc
or
sub
neg
dec
mov
fbld
test
lahf
sar
pop
pop
xchg
push
std
cwde
xchg
pop
ins
(bad)
lods
mov
inc
js
leave
add
sub
add
jbe
in
xchg
sbb
mov
call
mov
jnp
fs
mov
xor
add
scas
xchg
or
fld
jle
pop
sbb
or
lock
push
out
pop
ror
mov
push
call
cld
bound
enter
cmp
push
fcom
cdq
adc
mov
mov
loope
cmps
xor
ins
jge
pop
clc
mov
adc
push
outs
int
enter
cmp
bound
mov
mov
inc
iret
les
lahf
add
jbe
aad
rol
aad
out
scas
or
out
xchg
or
aaa
sbb
xor
adc
cwde
ins
aaa
(bad)
(bad)
retf
jmp
aam
xchg
mov
or
jnp
pop
movs
sbb
inc
sti
push
cmp
adc
jle
adc
push
pop
push
jbe
cmp
jmp
jnp
cs
leave
adc
or
cmps
mov
fbstp
sti
xchg
mov
jo
nop
push
(bad)
icebp
fidiv
sahf
mov
aaa
pop
sub
ds
retf
clc
xor
lock
dec
xchg
pop
xlat
jp
lods
sti
shl
or
sub
cld
scas
retf
push
iret
mov
aad
mov
add
push
lods
shl
jecxz
ja
sbb
pop
sbb
dec
fs
dec
jmp
jl
daa
aad
rcl
nop
iret
ins
loopne
bound
fucom
push
add
ja
call
sti
push
cmp
push
cmp
mov
and
stos
cmp
add
xchg
in
adc
mov
iret
aas
es
sbb
cmp
(bad)
fild
sub
sbb
jmp
mov
cs
mov
lock
stos
ret
push
movs
jecxz
call
mov
jmp
(bad)
lock
jg
mov
jno
mov
fst
mov
mov
clc
push
mov
jge
or
push
xchg
int
(bad)
sti
test
mov
arpl
push
retf
mov
jge
bound
movs
test
inc
xchg
mov
shr
push
mov
sbb
mov
outs
adc
das
in
xchg
(bad)
(bad)
mov
jmp
ins
pop
dec
sbb
xor
cmc
jl
cmp
call
add
dec
xchg
sar
mov
mov
in
mov
cli
add
jle
daa
jbe
jbe
push
and
jae
ss
mov
dec
dec
aam
int
repz
sub
jns
mov
sbb
test
scas
test
or
sar
push
shr
scas
sbb
movs
jl
bound
mov
adc
pop
rcl
ja
mov
xchg
neg
xor
dec
and
cmp
std
adc
xor
cld
ins
icebp
mov
sar
out
push
adc
sbb
pop
shr
mov
mov
and
and
and
xchg
gs
sub
icebp
movs
das
stos
retf
xor
jecxz
pop
mov
or
addr16
xchg
loop
sbb
mov
push
dec
idiv
push
or
mov
fild
sub
sub
in
test
jnp
sbb
mov
(bad)
jmp
sbb
outs
(bad)
jge
in
mov
push
das
dec
xlat
or
test
or
and
idiv
rcl
mov
pop
mov
or
mov
(bad)
pop
xchg
je
adc
jmp
sbb
mov
add
sbb
sbb
cli
shl
ja
out
sbb
cmp
dec
mov
ret
into
nop
sbb
jb
push
adc
jmp
cmp
sub
mov
mov
adc
mov
leave
imul
pop
push
bound
adc
call
or
cmp
xor
outs
sbb
mov
(bad)
mov
push
xor
add
icebp
sub
xor
jne
xlat
xlat
aad
and
or
mov
out
mov
rcr
mov
mov
pop
mov
push
shl
mov
clc
push
pop
sbb
sub
call
clc
mov
ins
pusha
into
xchg
inc
cwde
adc
adc
stc
pushf
jge
and
mov
mov
mov
fnsave
cmc
(bad)
loopne
mov
out
lock
pop
push
dec
ins
ror
stc
dec
xchg
addr16
ins
jge
add
ins
dec
cmp
cmp
mov
(bad)
mov
aaa
xor
test
iret
in
into
inc
dec
imul
mov
mov
into
daa
or
jb
jl
jp
mov
adc
es
cmps
xlat
paddusw
sbb
loope
jo
pop
in
in
sti
inc
stos
lods
stos
inc
or
ficom
test
pop
push
js
cwde
imul
loop
retf
test
fimul
push
sub
repz
xor
cmps
test
xchg
int3
stc
fs
mov
cmovns
jmp
dec
xchg
(bad)
rol
push
sbb
and
sub
mov
xor
pop
pop
or
popf
jbe
fdivr
pop
mov
ja
add
ret
loopne
dec
dec
add
out
in
enter
or
inc
ds
movs
ins
xchg
jb
aaa
inc
cmp
sbb
sahf
pop
mov
xchg
loopne
mul
sbb
push
inc
dec
call
mov
fnstsw
cmp
or
add
into
test
retf
mov
out
xor
mov
and
(bad)
jns
movs
lds
jno
out
dec
mov
retf
push
inc
mov
sub
icebp
sub
ret
jle
inc
fs
mov
mov
stos
lea
or
dec
dec
adc
pop
xchg
loop
push
enter
hlt
mov
xchg
inc
pop
dec
xchg
and
jo
or
es
xchg
js
push
sbb
lea
nop
out
inc
and
push
rcr
sbb
jmp
and
xor
ret
loopne
ins
(bad)
jmp
jmp
stc
inc
pop
inc
jb
inc
push
fs
pop
cli
sub
cmps
imul
bswap
dec
pop
into
mov
and
xchg
daa
mov
outs
(bad)
mov
push
jmp
mov
fs
inc
rcr
mov
dec
mov
(bad)
cmp
daa
aad
ficomp
xlat
adc
aas
pop
js
adc
sbb
and
scas
call
in
sahf
inc
xor
shr
mov
push
outs
mov
mov
sbb
sub
ins
jbe
out
push
sbb
dec
and
xchg
pop
sub
les
mov
mov
lock
mov
test
cmp
nop
dec
es
ja
outs
test
cmps
out
aas
addr16
or
bound
add
lods
cmp
mov
mov
push
dec
ins
addr16
mov
addr16
bound
cli
imul
push
jg
fsub
hlt
cwde
aas
es
push
cs
mov
jecxz
jns
pop
cmps
xchg
scas
jmp
pusha
jo
sar
fdivr
fisubr
ficom
sub
shl
add
mov
ficom
iret
out
add
xchg
push
shl
in
mov
pop
dec
dec
dec
or
xchg
mov
(bad)
cmps
sar
sar
fwait
mov
mov
lods
add
outs
push
outs
hlt
jb
cs
mov
outs
cwde
sbb
pusha
ffreep
add
pop
xchg
retf
shl
js
jae
inc
icebp
mov
scas
out
fwait
std
inc
jb
mov
xchg
jl
mov
stc
mov
sbb
stos
inc
fistp
xor
push
popa
in
daa
cmp
adc
(bad)
mov
and
scas
inc
jmp
pusha
aaa
jae
inc
test
repnz
xlat
aas
sub
jb
add
cwde
retf
inc
sbb
pop
xchg
cmp
fst
sub
or
cmp
pop
xchg
xchg
mov
cmc
dec
daa
dec
aaa
call
and
ds
adc
dec
aaa
sub
addr16
sub
imul
push
xchg
cdq
sar
mov
sti
dec
add
pop
push
mov
xlat
ja
xchg
retf
movs
iret
sbb
std
ficom
retf
aad
ja
clc
add
mov
out
ficomp
mov
cmc
jg
(bad)
out
or
cmp
xchg
pop
push
ret
xor
add
xor
les
inc
add
sti
xchg
push
jne
add
out
imul
scas
mov
sar
push
inc
repz
aas
call
shl
jge
fisttp
pop
or
push
call
push
mov
out
imul
cmp
outs
push
je
mov
into
loope
sbb
jp
test
jno
mov
ss
mov
lahf
fmul
push
pxor
add
(bad)
push
lds
stc
mov
hlt
test
dec
jb
mov
mov
std
out
xchg
test
jle
mov
cmps
lds
xchg
inc
jno
xchg
sbb
push
popf
mov
cmc
mov
pop
sub
int3
mov
sub
outs
dec
mov
loopne
pop
sub
ja
sbb
nop
call
sub
mov
pop
xchg
(bad)
mov
(bad)
dec
inc
sbb
pop
idiv
mov
ret
mov
inc
movs
lsl
pop
call
ror
ret
and
sub
mov
fidivr
xor
movs
jbe
aas
add
push
jne
aam
xor
pop
jg
in
cli
std
pop
cmps
xor
sbb
add
dec
push
icebp
scas
cli
push
hlt
adc
and
pop
push
mov
or
repnz
loopne
test
mov
jg
jo
dec
jl
bound
gs
imul
mov
jle
aam
repz
mov
mov
(bad)
(bad)
popa
sub
dec
lods
or
mov
cdq
mov
mov
stc
rol
iret
dec
and
or
and
in
popa
jl
in
aad
adc
and
ja
pop
pop
xor
and
popf
inc
mov
mov
jmp
mov
stos
pop
mov
jmp
ss
mov
and
imul
cld
dec
push
sbb
outs
dec
mov
xchg
retf
je
fnsave
mov
cs
ins
or
outs
in
add
mov
inc
jb
mul
mov
outs
lea
repz
out
push
fidivr
pop
ins
inc
fisttp
jle
(bad)
in
or
inc
inc
into
jl
cmp
push
outs
xchg
lock
pop
add
fnsave
sub
fs
sbb
sub
and
add
inc
xor
mov
add
sahf
pop
jg
xchg
mov
jl
mov
push
pop
add
cli
sub
xlat
and
stos
jnp
inc
repz
sti
rcl
cmp
xor
pop
inc
mov
cmp
inc
and
movs
jmp
sbb
adc
retf
jmp
leave
pop
mov
ror
icebp
jp
movs
shl
mov
jmp
xchg
retf
mov
mov
mov
int
cld
mov
and
int3
sar
pop
hlt
pop
xchg
into
cmp
inc
lock
enter
cmp
inc
lea
mov
sbb
cli
ret
rol
mov
mov
push
pop
jl
cmc
cmp
addr16
mov
stos
sar
fsub
jo
mul
lock
xchg
gs
dec
movs
inc
inc
xchg
mov
aaa
xchg
fadd
lea
call
jp
loop
push
dec
icebp
sbb
ror
cmps
adc
aam
mov
xchg
jb
std
inc
dec
xchg
cld
adc
les
ja
scas
pop
xor
jne
or
push
into
push
gs
lods
fsub
fcomp
and
xchg
mov
xor
in
pop
and
mov
sub
stos
fwait
mov
sub
movs
inc
fistp
sub
outs
push
add
sbb
cmc
push
icebp
shr
ret
lods
(bad)
cmps
out
ror
pushf
push
sbb
loope
pop
out
aaa
pop
cmp
xor
int3
sub
adc
cmp
loop
loopne
dec
cmp
jle
out
mov
xor
leave
inc
jp
ins
gs
jae
push
ret
pop
mov
dec
jne
inc
xor
retf
xor
retf
adc
repnz
daa
pop
std
fnstsw
fcom
loope
clc
in
repnz
push
or
movs
aas
dec
std
inc
jae
fst
out
mov
dec
mov
ror
mov
lods
jo
fisttp
mov
push
les
and
push
cmp
mov
mov
pop
movs
test
sbb
inc
inc
retf
sbb
js
rcl
loope
stos
or
retf
sbb
jo
push
es
sub
mov
push
movs
out
mov
mov
xchg
aad
xlat
fmul
xor
push
adc
inc
push
in
scas
movs
mov
in
fwait
test
loope
xchg
sbb
mov
jno
sar
pusha
test
(bad)
cmp
std
ficomp
call
pop
aaa
push
push
stos
jl
fisub
mov
nop
fcmovnb
lods
lods
bound
dec
sahf
(bad)
and
jno
jns
push
or
xor
retf
or
push
and
dec
inc
dec
push
pop
jo
sub
or
retf
shl
and
rcl
fbld
cmp
out
mov
sbb
fwait
add
sbb
pop
sbb
ja
test
push
dec
sub
movs
push
sub
fild
jo
xor
mov
inc
clc
adc
outs
push
inc
inc
(bad)
frstor
pop
lahf
pop
push
fisubr
xchg
mov
push
xchg
lds
ds
pop
inc
fwait
mov
push
fisubr
imul
(bad)
mov
pushf
pop
mov
loopne
xor
sub
mov
or
movs
imul
push
retf
movs
imul
mov
dec
push
ret
adc
cwde
jmp
jmp
and
ret
dec
mov
(bad)
dec
aas
jle
ins
daa
lods
mov
add
fiadd
mov
aam
retf
mov
bound
cdq
es
jmp
pop
cmp
mov
push
jle
addr16
test
pop
sub
shl
lods
loope
outs
out
add
test
outs
retf
jg
ja
jae
pop
pop
inc
(bad)
dec
out
adc
rcr
sub
mov
mov
aas
and
cmp
inc
sbb
(bad)
scas
xchg
lods
fptan
dec
test
fsubr
xor
das
popf
aam
fisub
scas
fld
pop
aas
inc
sbb
adc
cmp
cdq
mov
fisub
scas
mov
(bad)
jbe
pop
xlat
xor
sbb
sbb
add
inc
xor
xchg
arpl
xlat
stos
xchg
iret
jnp
cmps
jbe
or
jae
or
fisub
push
mov
lahf
popf
notrack
je
les
outs
imul
outs
call
dec
clc
scas
int3
movs
ret
cmp
xor
rol
fild
into
or
data16
cmp
loope
mov
test
pop
sar
push
and
jae
add
sbb
enter
dec
cdq
dec
jbe
retf
movs
jns
push
ret
xchg
(bad)
cmp
scas
mov
xchg
adc
ret
fdivp
mov
enter
jno
cmps
cwde
popa
push
stc
shl
out
call
or
push
(bad)
(bad)
fimul
dec
out
xor
popf
mov
popf
xchg
add
sbb
push
push
xchg
daa
jg
cdq
pop
fild
mov
imul
into
clc
retf
stos
mov
scas
or
imul
call
add
inc
push
imul
outs
push
dec
cli
push
pop
push
sbb
sub
pop
retf
int
pop
shl
fs
sub
lock
xchg
pop
add
inc
mov
(bad)
jmp
out
pop
cmc
push
mov
dec
cmp
mov
mov
(bad)
xor
and
daa
mov
icebp
retf
and
mov
ja
sbb
imul
out
xor
fwait
push
mov
push
jns
inc
movs
mov
pop
pop
xor
dec
scas
push
cmp
shl
gs
adc
test
sub
mov
inc
mov
jle
pushf
add
jmp
scas
call
pop
push
push
scas
icebp
adc
(bad)
sbb
add
dec
push
push
test
add
outs
outs
rol
pop
adc
sub
popa
sbb
cmp
fucom
dec
addr16
retf
ds
lds
jmp
mov
nop
adc
inc
pop
and
scas
or
dec
stos
dec
and
es
test
imul
clc
(bad)
shl
cmp
retf
jp
and
xlat
rcl
xor
push
or
mov
addr16
and
jo
mov
scas
pop
outs
lods
stos
push
into
test
mov
or
add
ins
pop
fisttp
mov
aad
cmp
jmp
adc
ins
sub
inc
mov
dec
imul
xchg
push
aad
push
push
outs
pusha
pop
xor
adc
fwait
das
ins
cmp
mov
mov
sbb
lds
icebp
pop
loopne
or
shl
mov
int3
repz
mov
popf
pop
loopne
rcr
enter
mov
(bad)
sbb
stos
jg
mov
aas
inc
sub
push
jle
jmp
(bad)
leave
xchg
ins
clc
loopne
mov
arpl
and
outs
rcl
outs
cmp
jae
mov
movs
sub
fwait
dec
cmp
push
or
int3
push
cld
clc
ficomp
icebp
sbb
(bad)
sub
dec
pop
fnstsw
cmc
dec
imul
int
xchg
loopne
repnz
pop
inc
jnp
add
sbb
adc
inc
add
je
mov
push
inc
fiadd
fidivr
adc
loope
and
outs
jno
jmp
xor
add
or
jnp
fist
(bad)
ror
push
jnp
mov
imul
pop
xchg
sub
fwait
movs
imul
pop
and
cmps
test
sbb
enter
sbb
xchg
out
push
dec
(bad)
xchg
sbb
pop
loope
push
sbb
jmp
jns
outs
sbb
pop
inc
test
sub
es
push
sti
xchg
bound
sub
lods
adc
fild
adc
mov
retf
xchg
dec
rol
mov
rcr
(bad)
aaa
pop
bound
jmp
jo
mov
rcr
ja
sbb
dec
add
xor
mov
scas
sub
rcr
inc
out
mov
or
in
rcr
ret
pop
jb
dec
sbb
out
js
lock
dec
sar
loopne
in
int3
bound
inc
pop
inc
lods
fdivr
adc
ror
mov
mov
dec
cmps
or
mov
daa
pushf
call
and
push
sub
cmp
mov
pop
pop
xchg
push
leave
das
jecxz
into
pop
fiadd
jge
pop
push
ds
(bad)
popf
adc
mov
add
sar
lahf
or
out
mov
sbb
mov
stos
jo
push
mov
sub
pop
aam
outs
mov
repnz
inc
test
and
cmp
cli
jmp
add
mov
fld
jmp
jecxz
xchg
cmp
inc
push
mov
ja
and
push
clc
xor
jnp
xor
fbld
mov
pop
add
jmp
popf
and
or
dec
popa
repz
and
cdq
loope
gs
pop
mov
pop
sbb
test
imul
les
pushf
and
adc
repz
mov
pop
retf
and
pop
jns
cmp
div
sub
xchg
test
cmp
cdq
mov
xor
xchg
mov
loop
fsubr
lock
loope
mov
dec
jl
fcmovnu
outs
mov
or
sbb
aas
adc
jmp
mov
dec
jg
xchg
pop
mov
fld
xchg
mov
popf
pop
sub
movs
sub
xor
call
push
movs
(bad)
sbb
mov
xchg
inc
clc
xchg
jns
rcr
js
xchg
jns
pop
fcomp
push
movs
dec
fbld
pop
lods
push
push
pusha
pop
mov
js
rol
jle
inc
out
fdivr
adc
mov
frstor
add
js
add
pop
mov
repnz
and
aad
mov
mov
push
adc
mov
inc
mov
dec
retf
fild
movs
ret
xchg
mov
jl
jno
fisttp
js
test
pop
inc
out
sub
mov
or
inc
adc
shr
sar
(bad)
mov
mov
cmp
sahf
sub
retf
(bad)
aam
imul
(bad)
jae
lods
mov
pop
and
js
inc
xchg
es
cdq
push
ret
stc
jle
cwde
xor
sti
cmps
and
pop
int3
inc
lahf
fisttp
and
out
mov
xlat
mov
into
lods
xor
pop
and
out
cmp
test
xor
aaa
cmp
mov
jns
mov
cmp
out
leave
daa
hlt
outs
out
popf
pop
retf
shl
mov
mul
or
jle
int3
fst
xchg
(bad)
pop
vmovq
pop
add
int3
loop
mov
adc
fst
push
mov
fdiv
mov
push
and
cli
mov
push
mov
mov
aas
ja
jge
nop
xchg
ja
jp
sbb
xchg
mov
or
jno
xchg
aas
and
loopne
push
mov
pop
inc
adc
mov
pushf
xlat
mov
xchg
loop
pop
cli
les
loope
jmp
out
int3
jp
jecxz
js
jae
and
add
sbb
mov
retf
jp
pop
push
repz
sbb
xlat
push
mov
add
mov
popa
mov
mov
iret
xchg
ss
imul
dec
push
out
sub
fmul
das
cmp
mov
xchg
mov
cld
movq
push
add
jnp
inc
or
add
dec
mov
mov
mov
mov
and
sbb
xchg
call
fld
xlat
ja
push
nop
(bad)
xlat
add
in
dec
movs
movaps
xchg
shl
mov
stos
rdtsc
inc
jo
sbb
xor
or
or
fldenv
in
pop
fldenv
sub
dec
je
lods
jecxz
ds
xor
repz
sub
test
push
or
push
movs
inc
ficom
imul
cmp
jne
fadd
enter
sub
repz
hlt
cdq
cld
pop
inc
xlat
or
mov
in
imul
inc
cmps
push
cli
xor
push
pop
pop
jae
dec
mov
ficom
scas
in
dec
xchg
sbb
pop
stc
cmp
mov
inc
sub
sahf
mov
mov
mov
xor
push
sbb
sbb
fnstenv
mov
(bad)
outs
pop
mov
push
iret
sbb
pop
ficomp
pop
and
je
dec
(bad)
pop
lahf
aad
push
mov
je
stos
jmp
dec
jp
idiv
je
imul
les
stos
stos
hlt
cmp
xchg
sti
retf
mov
das
fmul
jge
adc
aas
inc
pop
adc
cli
cmp
(bad)
hlt
add
loopne
rol
shl
jecxz
jnp
sar
rcl
inc
popa
imul
jmp
mov
jmp
push
cmp
mul
gs
cwde
fimul
fwait
shr
(bad)
xor
imul
mov
out
xchg
xchg
fidivr
retf
lods
repz
enter
mov
cwde
or
push
mov
call
or
pop
fsubrp
jg
cmp
clc
(bad)
and
test
fcom
mov
mov
xor
std
sbb
adc
cwde
fsubr
(bad)
aas
lock
push
and
sbb
pop
mov
mov
in
leave
sub
sbb
aad
sbb
sar
push
cmp
popf
in
xor
aas
mov
dec
or
dec
ss
int3
cs
cmp
push
adc
lea
stc
and
pop
xor
movs
adc
ds
xor
mov
enter
and
push
add
je
lea
jl
pop
and
outs
xor
cmp
stc
push
adc
sub
jg
dec
je
sub
fwait
nop
mov
cld
mov
xor
scas
adc
dec
or
hlt
leave
out
add
xchg
push
fst
push
aas
inc
nop
hlt
fsubr
dec
mov
jbe
cmp
cli
nop
outs
js
add
in
cmps
adc
mov
xor
fdiv
mov
or
pop
sub
cmp
iret
aad
adc
cmc
rol
out
(bad)
and
add
outs
push
add
and
sub
je
xor
or
cmp
sbb
adc
push
fimul
or
pop
cld
out
pop
loop
sub
test
and
mov
mov
mov
push
sub
mov
jo
sub
push
add
inc
pop
and
mov
(bad)
fiadd
adc
test
push
push
mov
hlt
inc
cmps
sbb
outs
add
cmc
ins
pushf
push
jmp
scas
mov
add
mov
xchg
and
stos
call
out
sti
jo
mov
pop
and
(bad)
push
(bad)
fild
call
arpl
stos
lea
sbb
int
loope
inc
pop
sbb
inc
or
xchg
outs
mov
int3
inc
out
pop
fldenv
outs
cmp
jmp
mov
repnz
lods
mov
pushf
test
mov
mov
jle
or
div
lea
xor
je
nop
cmc
sub
inc
push
outs
fidivr
pop
shl
test
iret
sbb
mov
stos
push
xchg
xchg
ror
out
sbb
dec
mov
and
sbb
aas
cmps
sub
lods
push
leave
push
call
push
and
add
and
jge
jge
cmp
adc
aad
cmp
iret
jne
sbb
outs
add
mov
gs
loopne
ret
sbb
pop
cmp
or
into
jno
mov
rcl
fist
retf
or
dec
mov
xor
xchg
loop
mov
xchg
pop
into
loope
push
std
mov
movs
and
mov
jns
into
xor
fnsave
sub
fbld
dec
mov
push
lods
shr
inc
push
push
(bad)
aam
jns
sub
sub
cmc
lods
or
cmp
adc
inc
retf
mov
iret
dec
pop
mov
outs
cmps
jbe
push
in
jge
push
pop
adc
lock
push
cmc
or
clc
rcl
out
popf
sbb
mov
adc
add
ret
pop
sahf
clc
mov
or
jnp
aam
jno
dec
add
inc
push
ror
sbb
test
jbe
push
xchg
(bad)
pusha
ins
cwde
(bad)
xor
push
cmp
mov
cmp
movs
push
lods
add
popf
dec
inc
or
push
shl
cmc
sub
and
dec
inc
fsubp
fisubr
adc
scas
outs
in
idiv
push
fs
adc
jle
out
push
and
shl
pop
clc
mov
int3
adc
test
test
sub
add
add
jmp
or
call
xchg
inc
pop
cmp
das
mov
mov
cmps
jle
sub
retf
xchg
ds
cmps
jl
call
js
jne
xor
jnp
cmp
test
or
sbb
cmp
inc
pop
ds
add
iret
ror
mov
mov
mov
mov
sti
test
dec
sbb
mov
or
ja
push
js
jp
das
mov
nop
xor
mov
pop
jnp
mov
push
call
imul
je
sub
and
icebp
push
dec
ss
add
jb
test
push
in
ret
and
mov
sbb
cmps
add
cmp
cwde
or
ins
pop
sub
cld
test
cdq
inc
frstor
js
xchg
icebp
loopne
cld
adc
add
retf
mov
inc
mov
xchg
mov
int3
cmp
pop
fdivr
clc
mov
fmul
push
xlat
or
and
mov
outs
adc
(bad)
wbinvd
out
lods
mov
js
movs
(bad)
dec
add
mov
mov
pop
sahf
iret
add
jns
push
js
adc
aam
fabs
sub
dec
(bad)
in
int3
pushf
mov
mov
xchg
or
mov
pop
push
and
(bad)
jmp
mov
stc
dec
push
jg
inc
retf
enter
in
repnz
sub
xchg
das
inc
(bad)
clc
pop
xchg
ja
loop
push
pop
mov
pop
imul
and
pusha
inc
push
jne
pop
mov
push
cmps
ret
movs
pop
rcr
rcr
shr
popf
es
xchg
and
ret
dec
(bad)
push
xor
jge
pusha
and
inc
adc
lea
int3
int3
or
test
sub
sti
sbb
into
movs
push
movs
pushf
and
mov
sbb
dec
push
js
pop
pop
sahf
xchg
push
scas
push
sub
mov
cli
xchg
mov
daa
aam
pushf
jmp
add
rcl
jmp
sti
push
cdq
dec
imul
cli
sub
xchg
adc
push
push
push
and
jae
fistp
push
imul
int3
retf
mov
test
in
pusha
stos
pop
cdq
push
add
or
dec
mov
rcr
jg
cs
pop
sub
retf
inc
test
xchg
popa
jp
aas
popa
lods
inc
sbb
mov
inc
(bad)
dec
push
aas
push
popf
std
mov
dec
je
jnp
and
mov
imul
out
add
dec
mov
je
aaa
repz
inc
aaa
inc
retf
cmp
jmp
retf
fstp
dec
pop
mov
(bad)
es
jb
je
retf
std
fstp
adc
imul
aaa
mov
jo
inc
sahf
arpl
(bad)
cmp
maskmovq
div
mov
jge
test
test
stos
mov
jbe
test
adc
call
mov
inc
fstp
cmps
retf
das
aad
jnp
out
fstp
xor
aad
jno
rcl
pop
loopne
mov
dec
sbb
pop
pop
lods
nop
loope
cwde
cmp
mov
nop
adc
mov
jnp
add
jo
sub
pop
cmp
xchg
cmp
bound
xchg
scas
sub
jg
mov
or
adc
test
addr16
outs
ds
retf
fs
mov
cmp
ss
jne
jns
movs
add
in
mov
xchg
call
fisttp
dec
mov
sahf
mov
sub
jmp
lock
ja
mov
lods
and
adc
pop
mov
out
rol
adc
xchg
add
cmps
repz
jmp
stc
inc
jmp
inc
mov
fisubr
ror
setp
icebp
mov
outs
ror
test
aam
aas
jnp
dec
(bad)
pop
and
push
lods
dec
callw
nop
iret
and
lods
inc
es
or
push
popa
mov
cli
sub
cmp
stos
fidivr
(bad)
push
mov
enter
cli
inc
xchg
ins
pop
int3
iret
repz
cmp
fcmove
cli
ret
mov
scas
out
mov
xchg
ss
jmp
mov
cmp
daa
add
ins
scas
pop
pop
dec
ret
test
div
jl
data16
in
xor
stos
sbb
jp
and
and
(bad)
sub
cmp
dec
push
scas
sub
hlt
jb
push
iret
push
inc
aad
jbe
xchg
or
inc
sbb
fs
cs
mov
bound
push
shr
jbe
mov
xor
add
retf
iret
cmps
pop
movs
lods
xchg
pushf
imul
push
push
into
lea
arpl
in
jno
cmps
mov
mov
cmp
push
ds
inc
xlat
inc
cmp
ds
and
and
dec
popa
or
bound
imul
out
call
gs
inc
xchg
jbe
adc
mov
movs
cmp
sbb
outs
out
mov
jl
cmp
scas
and
scas
and
push
xchg
aam
loop
pusha
mov
in
xchg
das
stos
adc
mov
mov
and
sahf
adc
lds
push
fsubr
jmp
add
icebp
fs
lods
add
cs
mov
movs
or
jg
test
mov
lods
repz
xchg
std
jo
xchg
jge
stos
in
aad
mov
push
cmps
std
clc
push
xchg
iret
xor
push
and
fsubr
mov
call
xchg
push
mov
mov
cs
push
push
or
add
xor
mov
sbb
cmp
push
movhlps
arpl
pop
lahf
daa
call
jnp
xor
mov
pop
push
test
leave
jmp
stos
outs
cld
dec
push
sbb
inc
out
fdivr
cmc
rol
xchg
or
stos
aaa
cdq
and
sbb
cmp
cmps
sar
setnp
inc
cdq
inc
ret
test
(bad)
mov
jmp
inc
cmp
jmp
es
es
fs
cmp
inc
daa
mov
mov
int3
lods
ret
retf
fcom
dec
vpsubusb
shl
mov
in
popf
arpl
cmp
jb
xor
retf
adc
inc
sub
push
sbb
sbb
pusha
(bad)
(bad)
mov
mov
iret
fcmovnbe
or
leave
pushf
jg
in
add
add
jle
test
xor
jmp
xor
(bad)
pop
jge
jnp
mov
fld
out
je
imul
fstp
mov
outs
(bad)
mov
ins
sbb
add
repnz
adc
adc
push
(bad)
pop
ror
stc
jne
mov
call
into
xchg
daa
xor
fadd
popa
or
xor
lods
inc
sub
xchg
mov
stc
(bad)
dec
fstp
jge
pop
mov
pusha
sbb
xor
mov
in
add
in
pop
mov
push
or
or
sub
js
pop
dec
or
mov
js
mov
mov
push
sub
sbb
ret
xchg
mov
mov
cwde
pop
fcmovnbe
(bad)
mov
rcl
rol
iret
jno
dec
mov
sti
xor
ds
inc
mov
sti
adc
call
cmp
lahf
jbe
xor
call
call
test
test
test
pop
jle
test
ret
lahf
jmp
jns
repnz
dec
xor
mov
cs
cmc
mov
retf
movs
out
popf
jl
scas
fcom
add
shl
or
jbe
shl
jnp
outs
imul
imul
ficom
scas
sti
and
push
movs
mov
pop
ret
addr16
test
sub
aaa
jmp
mov
test
fnsave
fisttp
push
mov
dec
inc
jecxz
add
pop
xchg
rcl
inc
out
xchg
add
rol
mov
leave
test
rcr
mov
xchg
js
jmp
aaa
fmul
pop
push
xchg
cmps
inc
shr
cmp
dec
sbb
sub
xchg
adc
xor
inc
pop
repz
(bad)
sbb
mov
retf
int3
add
hlt
retf
jmp
xor
arpl
rcr
int
xchg
call
lahf
add
sbb
fisubr
xor
loope
ret
pusha
leave
(bad)
rcr
inc
sahf
pop
aas
push
jns
sbb
cli
scas
shl
pushf
xor
push
cmp
imul
sar
push
mov
dec
sub
or
into
xchg
lock
dec
and
pop
fidiv
imul
in
mov
fidivr
fadd
mov
dec
pop
(bad)
ins
loope
and
mov
pop
or
sub
pop
inc
xchg
(bad)
mov
jae
xor
push
pushf
jnp
(bad)
jnp
(bad)
push
cmp
pop
leave
mov
ret
sbb
es
std
jae
pop
pop
pop
cmp
mov
cmp
cmps
jmp
jb
mov
mov
sub
mov
sub
fiadd
(bad)
fild
fldenv
xor
xor
leave
xchg
popf
jecxz
pusha
dec
lds
mov
es
cwde
cmc
pushf
sbb
(bad)
leave
es
aas
inc
sub
in
xor
or
mov
into
xchg
(bad)
push
jnp
add
stos
ud2
jmp
aas
jp
cmc
jns
dec
and
fist
pop
jp
jnp
xchg
mov
add
adc
mov
xor
jae
xchg
in
cmc
and
loop
sub
es
jmp
cld
or
pop
cmp
imul
in
das
scas
sub
xchg
ret
loope
and
fnstenv
pop
jno
or
mov
xchg
and
in
mov
jo
dec
scas
ds
xor
into
arpl
jmp
push
sbb
push
pop
mov
sbb
ins
cmp
sub
bound
and
jle
cmp
ds
es
xor
data16
ret
repz
test
jmp
xchg
(bad)
mov
xor
pop
fxch
mov
sub
icebp
pop
inc
and
xor
xchg
std
xchg
popa
(bad)
ror
imul
loopne
inc
or
or
adc
test
in
sti
fs
or
adc
cdq
xor
cs
mov
std
xor
mov
(bad)
push
pusha
pop
and
xchg
mov
imul
adc
nop
stos
gs
aas
jge
push
pop
mov
push
std
out
pop
mov
mov
pop
push
std
call
push
mov
pop
aam
test
add
push
hlt
rcr
or
popa
call
test
ss
mov
ins
sub
(bad)
and
outs
add
das
mov
pop
mov
xchg
dec
cmp
sbb
xchg
push
and
pop
mov
js
not
pop
adc
bswap
lods
cmp
cdq
push
mov
int
pop
mov
scas
and
sub
push
sbb
and
add
sub
cmp
sti
sub
(bad)
or
scas
push
gs
adc
adc
movs
and
cli
ins
ret
jbe
mov
pop
sar
adc
retf
or
sub
push
sti
imul
cdq
add
not
(bad)
mov
or
bound
and
shr
es
mov
add
mov
inc
adc
ror
xchg
popa
popa
(bad)
inc
js
(bad)
scas
addr16
cmp
pop
repnz
jmp
sub
lods
shl
neg
and
test
rcl
add
pop
xchg
xchg
inc
mov
inc
popf
mov
sbb
popa
fisubr
adc
jecxz
movs
sub
dec
ficomp
in
retf
jae
push
cmp
daa
xchg
out
push
mov
xchg
rol
pop
dec
rol
dec
xor
data16
jmp
jbe
cmp
xor
popa
pop
ja
mov
dec
data16
loope
rol
stos
call
xor
imul
sub
and
sahf
sbb
iret
popf
retf
repz
dec
dec
in
or
cmps
les
sub
add
dec
xchg
dec
jo
(bad)
bound
mov
mov
shr
mov
dec
push
jb
mov
icebp
xor
xor
pop
sub
and
pushf
mov
shl
sbb
pushf
sbb
repnz
out
popf
and
inc
pop
int3
and
xchg
xlat
ja
inc
lahf
mov
fist
jmp
jo
sbb
xor
lds
pop
jmp
cmp
xchg
inc
stos
movs
psubsb
cmc
cmp
pop
lods
aas
sub
pop
mov
clc
push
popa
out
xor
daa
daa
test
call
addr16
jge
cmps
(bad)
je
mov
push
arpl
or
in
retf
mov
bound
dec
and
jmp
popa
js
xlat
(bad)
mov
and
and
fld
pop
push
rep
xchg
push
repnz
xor
rcl
jo
sub
sbb
ret
and
(bad)
or
loope
push
jb
retf
push
lods
das
in
aaa
cmp
pop
cmps
outs
cli
inc
mov
adc
push
adc
dec
push
jp
sbb
stos
(bad)
scas
sub
mov
lock
test
pushf
mov
mov
in
cmc
es
retf
leave
xchg
pushf
mov
das
inc
ss
mov
outs
shr
inc
cmp
lahf
sub
out
mov
xchg
mov
xor
call
aas
(bad)
in
push
lock
jp
jecxz
fist
lock
pop
and
mov
out
cld
cmp
cmp
sub
fnstsw
je
cld
mov
sub
clc
aam
mov
sti
sahf
mov
ret
test
mov
cld
sub
imul
fistp
shl
cs
sti
mov
sahf
enter
mov
push
add
into
movs
jo
std
push
xor
clc
imul
mov
mov
aam
xchg
cmp
mov
imul
pusha
cmps
aaa
sbb
xchg
fwait
ret
in
arpl
dec
(bad)
jnp
mov
imul
int3
cmp
in
adc
scas
add
ins
push
xchg
pextrw
xor
adc
dec
not
out
and
fmulp
xor
movs
pop
sbb
inc
cdq
enter
xchg
pop
data16
daa
push
xchg
inc
push
pop
jmp
jno
out
push
jbe
dec
or
int3
mov
cmp
inc
xchg
pop
or
test
dec
js
xor
es
movs
push
fist
ds
mov
rcl
daa
cmc
int
fiadd
dec
int
cmp
xor
shl
mov
sub
jl
mov
fcomp
lock
iret
jmp
test
mov
and
jnp
mov
push
add
dec
adc
or
xchg
or
xor
sub
xor
push
ins
cwde
dec
ss
neg
mov
ror
dec
cmp
enter
movs
inc
push
cmp
leave
xlat
and
push
add
jno
scas
push
jae
xor
pop
sahf
sub
mov
sar
enter
ja
inc
cdq
rcl
in
and
and
(bad)
shr
ins
retf
enter
bound
or
mov
xchg
mov
(bad)
adc
sbb
cwde
lds
add
repz
mov
mov
jnp
js
lahf
pop
cmps
dec
mov
xchg
xchg
add
(bad)
stc
popf
add
movs
pushf
stc
outs
and
cmps
mov
aaa
inc
cmp
mov
xchg
jb
ret
xchg
popa
icebp
sub
or
mov
pop
bnd
mov
pop
fs
lea
and
mov
mov
movs
xchg
loop
jns
lds
xchg
outs
xchg
push
jno
loop
push
dec
and
arpl
inc
xchg
pop
jne
test
out
cld
lods
outs
arpl
fiadd
scas
(bad)
iret
retf
pop
xor
int3
(bad)
push
jle
cs
mov
out
fwait
sub
sbb
xlat
sahf
hlt
sub
lock
outs
sub
data16
cld
ss
ficom
int3
or
cmp
jns
and
sub
pop
add
sub
test
fisubr
sti
adc
stos
in
ds
lods
ror
push
xlat
mov
sbb
push
pop
fisttp
cs
sbb
call
loop
popa
xchg
push
lods
shl
dec
scas
pop
in
inc
xor
adc
or
pop
data16
push
xchg
(bad)
pop
aam
pushf
adc
arpl
push
mov
gs
pop
shl
lock
loopne
fwait
xor
jl
out
xchg
pcmpeqd
sbb
xor
bnd
push
out
mov
or
jnp
inc
scas
jmp
jno
out
(bad)
jle
push
ret
xor
sbb
mov
ret
xchg
or
repz
nop
jecxz
and
sbb
rcl
push
arpl
jl
jnp
ficom
stos
jle
in
pop
cmp
hlt
mov
add
push
jno
cld
dec
ins
inc
sub
jo
mov
xor
stc
mov
sub
outs
mov
dec
fisub
jnp
fnstcw
sub
movs
cmp
icebp
inc
stos
cs
push
cdq
stc
adc
pushf
(bad)
cmp
jl
clc
and
pop
ss
jne
push
inc
pop
push
ret
jnp
pop
sbb
sub
les
adc
int3
je
sbb
push
jmp
push
push
mov
js
push
repz
loopne
imul
add
inc
mov
loop
pop
test
mov
pop
push
xor
xchg
out
adc
pushf
jle
shr
push
adc
hlt
cmovs
rcl
and
or
icebp
(bad)
adc
add
inc
out
mov
sub
or
ret
dec
mov
mov
dec
gs
inc
dec
push
cmp
and
dec
sar
and
outs
jge
aad
lahf
imul
jp
inc
xchg
push
push
ret
cmp
xor
out
popa
and
dec
xchg
cs
arpl
xor
out
sar
mov
fild
rcl
cld
fidiv
xchg
(bad)
out
inc
push
push
aad
or
arpl
addr16
icebp
(bad)
adc
push
mov
inc
add
test
adc
mul
inc
imul
leave
xchg
pop
sub
sar
pop
pop
fimul
test
fwait
repz
jmp
mov
mov
ficomp
jnp
xchg
fldcw
retf
clc
inc
push
outs
adc
inc
or
retf
and
xchg
test
cmps
dec
into
mov
rcr
clc
pop
es
xchg
or
xchg
xchg
(bad)
ror
mov
cmp
repz
dec
ss
mov
retf
or
lahf
jmp
ret
sahf
mov
(bad)
sub
outs
xor
dec
or
(bad)
adc
out
out
inc
clc
inc
shl
movs
jge
adc
inc
inc
ret
cmp
(bad)
adc
pop
jg
sbb
jmp
mov
mov
pop
shl
sar
je
test
mov
xor
mov
(bad)
aaa
fs
ja
adc
pop
or
test
push
add
movs
fwait
jmp
call
popa
jns
ficomp
int
jl
push
and
sbb
dec
fld
mov
pusha
mov
cmp
aaa
pop
call
lea
pop
stos
jne
jnp
or
std
pop
mov
pop
jle
imul
jns
cmp
cmp
cld
xor
add
jmp
in
icebp
jne
dec
ds
xrelease
xlat
(bad)
jl
imul
jb
mov
mov
shl
stos
mov
clc
jge
fs
cmp
jecxz
xchg
or
push
sub
sub
and
call
cmps
fsub
inc
xor
xchg
ret
mov
cmp
nop
add
stos
rol
(bad)
and
adc
out
retf
std
(bad)
xor
add
test
or
add
jmp
sbb
inc
mov
push
in
sub
push
dec
hlt
shr
sahf
sar
and
inc
leave
cmp
(bad)
scas
jnp
fisttp
sub
push
jmp
dec
iret
mov
xchg
mov
rcr
test
mov
sbb
or
xchg
adc
pop
int
stos
dec
xchg
jp
outs
out
out
in
jp
cmp
xor
bswap
mov
push
mov
inc
mov
push
pusha
mov
jmp
cli
test
outs
in
mov
sbb
icebp
xor
sbb
enter
sub
fdiv
mov
cdq
jae
push
or
test
mov
jmp
mov
sub
or
outs
mov
pop
mov
test
or
pop
aam
(bad)
mov
pop
adc
lock
push
lds
mov
xchg
mov
jnp
jg
jge
xchg
dec
jge
xchg
mov
outs
adc
jg
(bad)
fcomip
mov
mov
and
push
imul
sub
jb
or
dec
push
jmp
sub
dec
or
jb
push
lods
dec
dec
test
mov
shr
cmp
ss
xchg
or
mov
and
sub
and
out
out
or
popfw
jne
mov
mov
ret
add
xchg
hlt
idiv
xor
iret
(bad)
iret
lods
dec
pop
test
xor
inc
jle
mul
push
test
sbb
sysret
fcomp
ficom
mov
pop
inc
hlt
in
stos
xor
inc
mov
add
daa
je
mov
sahf
clc
pinsrw
xchg
les
movs
mov
xor
es
jp
out
xchg
das
push
fadd
aas
ret
lahf
cwde
mov
sbb
(bad)
into
mov
fadd
push
lods
mov
push
jnp
xchg
mov
cs
not
stc
sbb
mov
xchg
sbb
pop
je
loopne
movs
or
daa
sbb
cmp
push
iret
inc
push
mov
aad
in
cld
adc
sbb
add
xchg
lahf
or
inc
scas
in
rcr
loopne
mov
sub
inc
mov
pop
inc
sub
call
call
pop
lock
pushf
mov
sar
loop
fwait
enter
shl
and
dec
inc
rcr
repnz
push
xchg
pop
push
not
sti
or
pop
ins
aad
loop
dec
sbb
and
(bad)
cli
mov
adc
in
loopne
mov
push
fisttp
jno
push
mov
jnp
(bad)
clc
test
sbb
enter
mov
push
xchg
mov
sub
jmp
mov
inc
inc
mov
mov
jg
test
pushf
xchg
add
jbe
mul
outs
nop
js
cwde
mov
mov
enter
loopne
inc
xor
inc
jno
out
std
add
cwde
xchg
outs
pop
(bad)
in
imul
ins
pushf
aaa
je
inc
mov
mov
sar
xlat
mov
mov
mov
enter
pop
push
fist
xor
test
mov
lods
scas
mov
sub
dec
out
retf
inc
test
lock
(bad)
icebp
neg
mov
mov
mov
sub
mov
jo
aaa
mov
ds
scas
into
mul
mov
or
add
stos
mov
xchg
icebp
icebp
popa
mov
add
aas
cmp
xor
inc
idiv
loopne
icebp
pop
cmc
ins
push
nop
xor
imul
add
jge
cld
push
inc
inc
repnz
popf
or
mov
and
sub
imul
xchg
mov
inc
push
mov
push
retf
mov
pop
dec
xor
and
rol
cs
xchg
pop
inc
clc
jmp
pusha
or
js
fadd
mov
or
lock
jmp
(bad)
jecxz
sar
(bad)
cmc
movs
jo
and
dec
call
push
cmp
lahf
imul
(bad)
out
sbb
call
jg
push
push
jne
mov
mov
bound
lds
popf
jmp
mov
or
sub
jae
inc
and
mov
mov
dec
popa
push
ins
or
aad
jbe
xor
pop
mov
popa
push
sub
jmp
movs
cli
sti
sub
inc
sbb
das
(bad)
xlat
lods
fs
mov
rcr
push
push
push
or
aam
dec
(bad)
mov
pop
adc
inc
loopne
aas
jmp
lahf
adc
fidivr
sbb
lea
mov
bnd
lock
cld
sub
xchg
jle
dec
sbb
push
mov
xor
mov
test
cmc
dec
(bad)
sub
popf
pusha
dec
xlat
or
xor
xchg
dec
repnz
and
inc
daa
fmul
xor
or
and
sub
push
out
mov
loope
mov
or
loop
pop
aaa
push
xchg
mov
daa
push
xor
in
and
enter
mov
mov
int3
sub
popf
icebp
and
dec
xor
sbb
lahf
sbb
and
popf
mov
outs
test
pop
cs
leave
mov
jecxz
pusha
out
cmp
scas
xchg
sbb
lods
xchg
inc
je
iret
jae
fimul
pusha
movs
inc
out
fs
lods
popa
je
call
(bad)
push
dec
lods
(bad)
sbb
fisub
adc
cmp
push
imul
lock
or
jg
mov
int
dec
cmp
shr
(bad)
in
repz
xor
daa
int3
or
sbb
out
movs
pop
or
shufps
loope
repz
enter
add
push
add
inc
shl
or
push
jb
jnp
xchg
adc
stos
jg
jns
cmps
dec
mov
dec
out
mov
cld
es
ja
(bad)
sub
sbb
and
rcl
in
cmp
inc
mov
jae
cmps
xchg
push
ss
mov
xchg
popf
loope
stos
movs
test
lods
cmps
ja
out
and
sti
addr16
dec
pop
mov
in
std
adc
xchg
clc
int3
loop
dec
aam
cmp
xchg
loop
aam
xlat
ins
std
lahf
dec
adc
xor
lea
lds
cmp
mov
push
xchg
ret
mov
jno
dec
add
cmp
arpl
out
mov
lock
loopne
es
fadd
xchg
mov
push
(bad)
ds
jo
sbb
mov
rcl
sbb
jnp
pop
ror
test
pop
dec
pusha
and
xor
jns
cli
out
data16
mov
sub
pop
clc
or
sub
iret
out
jno
ja
nop
shufps
mov
retf
jecxz
mov
daa
inc
je
mov
mov
test
sbb
in
push
push
mov
fwait
adc
jl
inc
call
test
dec
int3
retf
pcmpgtd
fsubrp
retf
cmp
idiv
leave
ret
push
xor
and
xchg
push
cdq
mov
ds
(bad)
fcmovne
fs
ins
adc
ret
sub
mov
mov
and
xchg
(bad)
jbe
jb
outs
das
push
cmps
and
pop
fidiv
mov
enter
xlat
lods
mov
stos
jne
and
cmp
jo
mov
mov
in
hlt
fwait
xchg
xor
mov
ret
(bad)
ja
adc
pop
les
bound
fucomip
jb
out
nop
xor
push
iret
in
add
loopne
enter
sar
xor
ins
(bad)
inc
cmp
adc
push
dec
outs
push
cmp
xchg
inc
sti
mov
mov
add
mov
sahf
retf
pushf
and
xchg
cwde
into
or
dec
xor
(bad)
bswap
add
in
nop
and
popa
dec
jmp
or
inc
mov
js
data16
adc
sbb
shl
cmps
xchg
or
loopne
mov
push
or
mov
sub
or
ret
dec
inc
sub
jmp
jns
stos
les
outs
pop
in
call
ss
call
or
mov
xor
xor
sbb
mov
push
mov
or
ss
(bad)
mov
xor
mov
jnp
test
retf
add
fdiv
call
push
test
push
mov
cwde
repz
out
mov
xor
shr
mov
repz
add
sub
mov
lock
mov
movs
sub
je
mov
cld
cmps
jmp
stos
pop
add
ds
push
pop
(bad)
and
adc
xor
pop
inc
or
pcmpeqw
out
jg
call
adc
ret
icebp
or
mov
daa
push
cmp
stos
icebp
add
ret
or
es
retf
jb
aad
aam
cmp
cld
fiadd
push
fild
jne
pop
xor
movs
addr16
icebp
cmp
idiv
(bad)
jae
cmp
ss
ja
jbe
pop
lock
scas
fisub
pop
push
ror
mov
pop
jnp
adc
mov
inc
pop
jg
fld
fwait
loop
mov
in
adc
std
(bad)
jp
or
(bad)
fild
push
add
ds
das
add
pop
or
imul
cmc
int3
es
lahf
daa
scas
int3
or
sub
lods
jge
dec
jns
pop
and
sbb
cmp
mov
jb
aaa
cmp
fild
jle
add
push
(bad)
mov
fidivr
ret
push
and
sbb
in
call
or
ror
les
sbb
outs
mov
scas
loope
dec
popa
sahf
push
or
cmp
lods
rol
(bad)
mov
push
sbb
call
mov
jbe
test
in
push
int
xor
sub
adc
jle
push
push
sbb
cmps
shl
mov
push
sbb
mov
test
movs
xor
ret
cmp
cmp
in
ins
test
add
arpl
rol
push
cmps
das
adc
ss
inc
add
jo
cmp
aad
mov
daa
test
arpl
pop
dec
(bad)
stos
jno
out
fist
xchg
lock
mov
shr
xchg
loopne
sub
stos
cmc
imul
adc
mov
call
inc
je
aas
lods
mov
out
mov
push
push
xchg
mov
js
add
xchg
inc
retf
and
pop
sbb
(bad)
nop
pop
mov
push
lods
mov
mov
popf
sub
(bad)
pop
test
mov
cwde
push
lock
push
cmp
outs
sbb
icebp
jbe
push
out
fld
xchg
movs
outs
push
retf
xchg
loope
fadd
push
pop
popa
push
xchg
xor
in
out
mov
ss
xchg
mov
not
and
pop
push
test
adc
sub
(bad)
cmc
fs
(bad)
push
push
lods
dec
add
in
jle
test
pop
out
outs
or
arpl
inc
fild
ja
sbb
jp
call
fsubr
inc
ja
adc
aad
movs
push
fwait
push
sbb
push
mov
inc
or
cmp
push
sub
xchg
pop
fs
push
cmp
add
add
inc
dec
es
cdq
or
loope
dec
jae
pushf
cwde
ds
dec
push
xlat
or
add
jp
push
shl
xchg
mov
out
fild
imul
pop
adc
xor
ret
test
mov
imul
sbb
xchg
ret
data16
push
das
cmp
cmps
mov
das
loop
mov
out
(bad)
cmp
mov
ja
loop
jmp
cs
icebp
sub
fldenv
dec
xchg
cld
repnz
inc
xchg
inc
jns
lds
mov
fistp
cmc
xchg
test
jae
xor
in
mov
jle
cwde
test
aaa
retf
jnp
mov
pop
mov
gs
push
adc
stc
cmp
call
idiv
mov
mov
mov
iret
push
sub
mov
jae
or
ret
sub
retf
aam
fs
aas
retf
inc
mov
rol
int3
adc
imul
pop
rcr
jne
out
jge
push
jo
mov
pop
shl
imul
in
movs
and
jp
loopne
add
mov
mov
test
and
dec
dec
pusha
pop
add
mov
int
dec
mov
push
sub
and
mov
jge
cmp
imul
cld
mov
pusha
nop
inc
stos
jle
mov
and
enter
xchg
sbb
iret
fcomp
and
pop
push
inc
push
bound
bound
(bad)
xor
arpl
xchg
popa
in
jle
sbb
xchg
call
pop
sub
add
ja
cmps
dec
shr
mov
pop
add
lds
out
pop
mov
add
push
movs
jb
ss
cld
cmp
lea
push
pop
les
mov
cmc
or
inc
mov
xor
int3
xor
cs
test
hlt
pop
int
test
mov
scas
out
and
mov
push
pop
mov
mov
mov
fcom
xor
xchg
fist
addr16
inc
out
ficom
dec
movs
sahf
mov
mov
repnz
mov
ficomp
ss
adc
xor
or
push
idiv
pop
mov
push
lock
inc
scas
push
ds
dec
dec
int3
cmps
fwait
movs
cmps
clc
push
mov
dec
adc
adc
and
dec
inc
pop
pop
pop
jns
cmp
(bad)
js
inc
outs
daa
loopne
pop
out
out
inc
inc
dec
jmp
push
ins
xchg
push
lods
ss
in
cmp
sar
jmp
(bad)
dec
pop
cmp
out
pop
xor
and
(bad)
mov
jp
jbe
adc
idiv
call
mov
adc
add
popf
test
loope
inc
shr
les
jne
hlt
into
and
in
pop
loopne
bound
popf
daa
and
and
das
adc
push
je
sbb
cmp
je
or
or
je
int
adc
push
mov
dec
sub
cdq
adc
inc
fisub
sbb
call
push
nop
aam
aaa
jle
test
daa
arpl
mov
mov
out
lods
mov
xor
sbb
test
fucomi
or
aaa
xchg
or
fild
sbb
mov
adc
mov
mov
scas
or
pusha
lds
mov
push
dec
and
mov
mov
mov
jecxz
or
out
dec
push
mov
add
jg
dec
clc
add
retf
(bad)
cmp
dec
call
add
add
xlat
int
ja
daa
xchg
sub
mov
into
jmp
jno
jg
sbb
or
iret
push
cmp
jmp
stos
or
cmp
adc
lock
jp
xor
sbb
mov
or
push
fs
fdiv
(bad)
xor
rcr
sbb
cli
js
mov
fsubr
cmp
dec
loopne
mov
pop
push
sar
jle
stc
add
add
jb
sbb
mov
cli
call
daa
rcr
jge
adc
mov
add
jmp
jbe
jbe
in
adc
and
das
pop
jmp
add
jo
imul
dec
test
push
aam
retf
rcr
in
scas
and
dec
xchg
gs
shr
push
mov
scas
push
bound
inc
enter
mov
mov
dec
loopne
pop
inc
dec
jno
add
jle
xor
dec
cs
ds
dec
mov
xor
dec
stos
xor
jmp
fisttp
popf
sahf
jmp
lods
and
and
or
test
out
xchg
test
repz
and
fld
dec
xchg
pusha
push
sub
cmp
addr16
push
jns
shl
push
push
jae
aaa
out
movs
repz
imul
imul
add
bound
pop
cmps
ins
and
call
out
scas
mov
inc
retf
and
(bad)
popf
rol
dec
out
aas
sub
push
ss
push
ret
mov
shl
sub
in
popf
mov
(bad)
adc
xor
popf
stc
jno
push
push
aas
push
xor
sub
gs
jmp
mov
push
xchg
add
sbb
xor
fwait
adc
xchg
push
int
mov
rcl
(bad)
out
xor
xchg
xchg
or
out
fdiv
js
xchg
test
dec
ins
sbb
addr16
mov
ss
add
fs
mov
and
jmp
repz
stos
idiv
pusha
cwde
mov
pop
clc
call
jns
ret
(bad)
push
jp
xor
cmp
imul
out
sbb
fcomp
sbb
jb
cmp
into
push
das
cmps
fidiv
xchg
aam
xor
adc
cmp
and
fs
adc
xor
or
fdivr
pop
fisttp
cmps
not
dec
add
retf
clc
fdivp
inc
mov
aaa
or
mov
scas
cmp
jnp
jl
rcr
test
das
push
lock
out
jmp
jne
shl
cmp
xor
inc
and
xor
mov
mov
mov
idiv
xor
lahf
or
pop
fiadd
push
sbb
xlat
fiadd
pop
sub
xchg
mov
sub
clc
aas
lahf
mov
stos
fsub
xchg
dec
jno
jecxz
lods
js
add
adc
out
jns
jge
inc
push
pusha
cmps
enter
fucomip
mov
out
int3
arpl
xchg
mov
inc
(bad)
loope
(bad)
fild
js
shr
repnz
xchg
pop
add
adc
dec
jmp
sbb
cmp
(bad)
sti
jp
fwait
hlt
(bad)
cmp
jmp
popf
aas
lock
push
nop
fsub
call
push
(bad)
mov
sbb
mov
ins
es
in
mov
pop
push
jnp
sbb
mov
pop
dec
and
jo
fsub
out
repz
cmp
fldcw
lods
pop
scas
or
sbb
push
xor
cmps
cmp
jp
sbb
jbe
pusha
int3
jne
repnz
mov
inc
les
adc
inc
mov
and
adc
pop
or
iret
leave
paddsb
jbe
call
xchg
inc
mov
adc
es
movs
jle
xchg
aam
aaa
mov
fnstenv
ins
fsub
daa
xor
dec
or
outs
xchg
test
mov
int
mov
sbb
or
jns
pop
xor
push
gs
jle
in
out
scas
and
add
es
imul
jmp
(bad)
retf
dec
or
rcl
(bad)
popa
jo
ja
mov
mov
push
xchg
pop
push
in
sbb
popf
cmp
push
rcr
and
dec
ret
xchg
push
arpl
call
jl
ds
jg
add
or
popa
push
mov
ja
adc
sub
data16
test
loope
push
adc
(bad)
adc
jnp
ss
push
and
popa
jl
push
mov
fimul
dec
retf
lahf
mov
test
lods
and
imul
sbb
inc
sbb
xchg
mov
lahf
(bad)
aaa
dec
movs
sbb
sbb
mov
les
mov
(bad)
clc
in
mov
lea
loop
ss
xor
xor
inc
or
add
mov
cmc
out
or
cmp
test
mov
out
fcom
pop
inc
mov
pop
cli
pushf
jbe
sub
jns
jg
pop
movs
xchg
ror
cmp
and
push
mov
inc
dec
out
inc
ja
pop
dec
ret
cld
sbb
nop
pop
push
inc
add
inc
int3
(bad)
mov
inc
je
push
je
loope
sub
or
mov
jp
pop
repnz
in
cld
pop
ja
mov
or
or
push
jle
ins
mov
add
retf
ret
pushw
js
shl
sbb
dec
leave
loopne
imul
push
(bad)
add
dec
push
shl
fstp
add
out
movs
aaa
ds
fwait
adc
mov
mov
and
cmc
xchg
cmp
ret
out
push
mov
push
pop
xor
xchg
jl
loope
pop
pop
dec
js
pop
ret
jecxz
div
inc
test
dec
dec
loopne
fisttp
inc
retf
pop
fcmovnb
dec
inc
push
xor
retf
adc
xlat
fmul
out
call
test
xchg
mov
clc
loopne
leave
das
lock
mov
jo
or
ja
mov
js
mov
(bad)
lock
js
cmps
in
sbb
mov
icebp
sbb
inc
mov
hlt
sbb
adc
in
add
inc
aad
inc
sti
jge
dec
mov
or
pop
inc
and
push
dec
push
mov
jg
jns
cwde
call
mov
sahf
xor
call
adc
pop
push
pusha
call
mov
add
scas
cmp
(bad)
cmp
test
bound
shr
xlat
add
cli
in
xchg
mov
pop
dec
add
add
std
inc
or
jg
adc
push
push
js
cmps
mov
adc
push
je
xor
mov
inc
das
popa
dec
clc
test
daa
push
cmp
inc
or
fwait
loopne
and
fnsave
dec
sbb
xlat
bound
loop
mov
dec
jnp
sahf
call
retf
add
test
xor
int3
sbb
fnstcw
or
jp
cmp
les
test
pop
jmp
cmp
mul
(bad)
cld
popf
or
inc
popa
nop
outs
cmps
inc
mov
mov
dec
adc
lods
xchg
fidiv
sub
mov
movs
and
mov
mov
fwait
loopne
ficomp
pop
test
retf
mov
and
scas
adc
les
or
(bad)
mov
scas
ja
mov
jnp
cmp
mov
add
or
xchg
cmps
fld
and
cli
std
pop
ret
cmps
cmp
ins
and
arpl
fst
xchg
std
mov
fwait
mov
mov
add
cmp
mov
sbb
in
push
add
xor
loopne
or
mov
xchg
dec
add
cmc
xor
fild
fcmovnu
add
addr16
in
add
xchg
or
aad
adc
inc
mov
cmp
ret
neg
xchg
adc
fdivr
movs
xchg
test
push
mov
pop
out
pop
jno
push
mov
in
(bad)
xchg
xor
cmps
aas
or
lods
in
mov
lods
retf
adc
fisubr
in
sub
xchg
mov
int
mov
fs
adc
jo
xchg
imul
sub
cli
mov
dec
lds
push
loope
sub
jae
pushf
mov
js
leave
cwde
xchg
jge
repnz
push
cld
ret
test
xor
inc
in
add
movntps
mov
loop
div
shl
or
lods
scas
mov
xor
out
push
sbb
mov
mov
jmp
push
dec
jp
inc
mov
sub
xchg
shl
dec
jns
lock
(bad)
pop
inc
mov
cmp
mov
dec
movs
cmp
into
fimul
retf
adc
daa
xlat
cld
test
movs
std
daa
out
cmp
or
push
cmp
fldcw
out
and
aaa
fisubr
rcr
mov
mov
mov
jge
mov
test
sti
mov
fld
mov
test
sub
push
movs
scas
push
lds
es
push
dec
pop
inc
fwait
popf
sbb
lock
mov
mov
arpl
in
mov
xor
aam
popf
adc
xor
mov
jecxz
test
repz
jle
inc
cmp
mov
aas
inc
mov
outs
sub
rcl
dec
mov
fisttp
xchg
mov
loop
and
jae
dec
or
scas
inc
jle
mov
xor
push
jo
xchg
mov
outs
sub
retf
std
lds
jp
inc
sbb
out
mov
cmc
or
lds
stos
inc
mov
xor
push
push
ror
pop
lahf
sbb
sahf
push
and
xor
cmp
xchg
push
mov
xchg
sbb
sub
or
xor
push
dec
pop
int3
xor
mov
stc
sar
add
mov
jge
fild
cmp
fs
cmp
and
push
xor
ret
scas
push
jecxz
cmps
test
xchg
int3
rcr
mov
xor
jae
mov
jae
inc
dec
sahf
pop
test
pop
push
jmp
das
mov
add
leave
mov
fdivr
sbb
pop
xor
ja
aad
xor
xchg
test
ret
out
lahf
xor
xchg
jae
add
push
cmps
mov
movs
in
mov
nop
and
push
loop
sti
add
cld
jle
mov
jge
nop
or
add
mov
popa
popa
xor
cld
xor
xchg
cmc
outs
js
sub
test
(bad)
inc
cld
and
shl
outs
mul
jo
nop
dec
(bad)
sub
pop
fsubr
pop
inc
js
xor
mul
lods
sar
into
push
add
inc
mov
fistp
mov
popa
imul
add
xor
aaa
(bad)
mov
lahf
xor
sub
sbb
xchg
or
fwait
movs
sar
in
(bad)
cli
neg
and
adc
push
stos
fadd
and
inc
gs
loopne
retf
out
arpl
dec
xchg
loopne
pop
add
xlat
sbb
push
dec
shr
sub
jg
sub
add
inc
push
out
jnp
addr16
lds
pop
or
and
push
or
loopne
sub
fs
fcomp
outs
xor
repz
stos
mov
mov
mov
retf
sbb
xor
inc
sti
jnp
cvtps2pd
aad
xor
pop
push
imul
push
aaa
lods
imul
add
and
mov
mov
in
leave
push
adc
dec
xchg
or
clc
bound
cld
fimul
shl
inc
xchg
or
sbb
mov
sbb
inc
xchg
arpl
test
push
(bad)
mov
(bad)
xor
xlat
cmc
xchg
ret
int
fucom
rol
xchg
xchg
jecxz
cmp
cmps
call
mov
fist
iret
inc
fwait
in
enter
sbb
mov
dec
mov
jo
push
fisub
movs
dec
mov
mov
xlat
jns
cli
push
cld
push
sti
dec
cmp
jno
das
inc
stos
mov
(bad)
or
mov
in
xor
test
shl
stos
sbb
jns
addr16
push
test
fisttp
scas
xor
popa
sub
cmps
push
push
adc
inc
or
pop
hlt
xor
or
xor
mov
sbb
jb
ins
fisubr
and
dec
cmp
jecxz
xchg
loope
leave
mov
ret
aam
cmp
mov
xchg
aam
xchg
adc
retf
scas
enter
inc
and
dec
lds
and
jo
jne
adc
ret
int3
test
stos
jns
jo
cmp
mov
shr
sti
aam
test
adc
or
(bad)
imul
and
cmp
popa
pop
shr
xchg
shl
ret
pop
lahf
mov
jmp
mov
(bad)
jle
inc
out
mov
mov
jmp
cmp
push
hlt
cwde
imul
cld
ficomp
lock
push
adc
sub
test
in
pushf
dec
inc
call
sub
ret
sbb
in
mov
daa
aaa
inc
cmp
add
int
sub
xchg
es
sbb
or
rcr
jmp
push
test
pavgb
mov
jp
xlat
xor
lds
jae
dec
fisttp
clc
sub
out
xor
(bad)
aas
or
jmp
push
js
cmp
ret
call
mov
ds
adc
cli
sbb
(bad)
and
popf
rol
les
(bad)
cld
outs
fnsave
in
scas
jbe
repnz
mov
mov
and
add
and
push
loope
jbe
pop
(bad)
jecxz
sbb
dec
jg
inc
pop
in
pop
iret
jo
in
push
push
ficom
aam
mov
lock
aam
jb
mov
jmp
(bad)
ror
or
pop
xchg
pop
aad
mov
repz
enter
push
mov
gs
aam
add
sbb
loope
xchg
into
das
int
std
imul
push
lods
rcl
pop
adc
leave
fsubr
aad
ins
shl
pop
inc
mov
outs
fidiv
fcom
jo
mov
inc
stos
xchg
repz
ds
imul
les
ja
and
xchg
lds
mov
icebp
ror
xor
push
push
mov
add
xor
mov
leave
mov
jge
(bad)
lock
adc
inc
popf
movs
add
or
ret
xchg
mov
test
xchg
xchg
mov
sub
loop
es
(bad)
(bad)
outs
stc
aaa
or
gs
aaa
jae
sub
mov
adc
inc
(bad)
movs
fbstp
out
inc
jmp
sbb
ds
(bad)
imul
jbe
in
add
cmp
mov
mov
xchg
xor
push
xchg
out
inc
and
outs
mov
fwait
pop
push
pop
mov
rcl
aaa
shr
sub
in
shl
xor
movs
mov
sahf
inc
(bad)
cld
retf
pushf
jmp
clc
(bad)
dec
mov
cli
jb
and
enter
movs
mov
fimul
push
adc
mov
scas
aam
mov
cmp
mov
cli
stos
jle
test
movs
sub
stos
sti
movs
lods
xchg
pop
mov
jns
sti
dec
xor
fld
(bad)
int3
aam
and
sub
pop
adc
hlt
pop
jo
mov
push
lods
jmp
pop
xchg
xchg
or
repnz
jle
cmp
(bad)
test
cmp
mov
ja
mov
std
pop
xchg
mov
ror
sub
push
ret
pusha
icebp
jns
pop
jp
adc
dec
loopne
push
mov
js
jmp
push
scas
mov
out
mov
xchg
out
popa
jl
push
outs
xor
pop
fsubr
lods
fadd
and
adc
hlt
mov
push
pop
cmp
jle
aad
inc
fist
and
push
daa
push
jbe
xchg
dec
cmp
outs
cmp
lock
shr
add
rcr
sbb
xor
mov
mov
enter
fsubr
dec
jle
inc
pop
xor
inc
cli
stc
pop
sbb
or
adc
stos
(bad)
repnz
push
loopne
clc
sub
push
push
adc
pop
jg
mov
cmp
push
push
data16
mov
fcomp
pop
lea
imul
adc
iret
ja
jmp
mov
sub
cmp
push
xchg
xor
sbb
in
push
mov
mov
xor
dec
sub
adc
and
ret
out
pop
outs
mov
mov
pop
xchg
pop
add
adc
(bad)
jg
and
(bad)
ret
jnp
ret
mov
leave
sbb
or
xchg
mov
pop
push
cmps
and
dec
xchg
mov
xchg
push
aad
cmp
sub
fwait
pop
ror
cmp
not
stos
stos
shl
int3
xchg
out
arpl
inc
or
(bad)
pop
sahf
fcom
push
pop
stc
jbe
cmp
push
stos
pop
rcr
ret
loope
push
lods
retf
xchg
push
test
loope
cmp
(bad)
ror
repnz
dec
cli
push
mov
(bad)
stc
push
cwde
xchg
cld
(bad)
(bad)
mov
scas
lock
mov
and
repnz
jl
lock
cmp
nop
mov
repz
and
mov
jb
cmp
push
mov
fwait
leave
mov
js
jne
outs
adc
mov
jno
popf
or
(bad)
je
in
adc
test
gs
inc
fistp
adc
or
icebp
lahf
and
mov
retf
xor
xor
ins
xchg
add
out
sub
fdivr
inc
mov
scas
and
call
and
out
mov
jo
sbb
mov
movs
push
fxch
icebp
mov
mov
out
jmp
aam
stos
pushf
mov
stos
pushf
or
repnz
cli
xchg
inc
fdiv
leave
scas
dec
outs
xchg
test
push
or
in
rcr
je
stc
add
and
lds
hlt
dec
and
dec
fild
into
rol
cmc
(bad)
jp
mov
jp
mov
xor
and
jp
(bad)
fistp
outs
mov
es
mov
das
test
adc
jge
push
mov
int3
pop
add
adc
pop
scas
inc
sub
(bad)
adc
inc
(bad)
xchg
sbb
xchg
ja
and
pushf
or
sbb
or
sbb
push
dec
movs
sub
aad
jp
mov
lahf
fwait
inc
fwait
out
daa
sbb
jp
movs
adc
lds
mov
mov
jae
or
xor
push
cld
iret
repz
stc
cmp
push
dec
xchg
fdivr
cmp
scas
jae
cld
xlat
(bad)
in
std
(bad)
in
sbb
std
clc
neg
fsub
cmp
shl
mov
movs
outs
inc
dec
cmp
inc
sbb
or
add
lock
xor
pop
push
xlat
loop
or
fsub
pop
int3
push
dec
mov
ret
xor
cmp
mov
and
dec
adc
mov
enter
call
and
retw
cmc
jno
dec
fmul
sub
dec
xchg
ror
mov
jnp
push
fcomp
lods
and
inc
and
pusha
mov
push
add
add
(bad)
xor
add
sar
loop
xchg
or
cdq
arpl
popa
test
mov
mov
mov
push
push
mov
and
xchg
lock
or
jns
es
push
div
aad
push
jle
scas
adc
adc
ins
lods
and
mov
jle
call
fnstsw
mov
adc
repz
ins
add
push
outs
pop
lahf
lock
(bad)
cld
push
fucomip
add
mov
std
inc
shr
jnp
outs
pusha
gs
mov
stos
xor
int
into
jl
(bad)
jns
jb
sbb
ja
mov
jmp
mov
sub
cs
cmp
xchg
div
mov
cs
cmp
mov
inc
pop
clc
dec
push
inc
std
jae
cmp
jo
dec
lds
fbstp
mov
push
mov
jb
frstor
aas
push
jae
icebp
xor
mov
std
cmp
xchg
add
jne
call
dec
inc
xchg
push
in
rcl
push
add
jp
mov
outs
int3
jp
or
rcl
mov
add
or
push
daa
outs
jo
xor
cmps
outs
stc
loop
in
out
and
pop
push
movs
in
cwde
ss
mov
retf
fmul
leave
jbe
je
adc
dec
jl
adc
test
fiadd
(bad)
aad
xchg
scas
mov
ss
mov
push
sub
(bad)
jmp
sbb
mov
int3
sub
je
out
in
fdiv
ins
pop
sbb
mov
jp
dec
sbb
sub
or
xchg
ficomp
cld
pop
clc
fsin
aaa
movs
mov
hlt
popf
mov
jb
pop
scas
test
sub
dec
xor
adc
push
add
outs
and
mov
mov
dec
jne
jb
shl
push
jge
or
mov
ins
mov
or
test
add
jae
sub
in
add
je
into
or
clc
fdivr
enter
hlt
adc
mov
pusha
stc
or
inc
(bad)
jge
push
(bad)
add
or
fsubr
dec
sahf
inc
pop
jmp
in
and
fnstcw
addr16
and
mov
aaa
fcmovnu
mov
call
enter
or
mov
xchg
or
inc
jbe
pop
xlat
sbb
fld
stos
aas
add
sub
fwait
ret
add
jb
retf
push
faddp
cmp
pusha
sahf
dec
xor
add
jo
dec
sub
xchg
sub
xchg
mov
inc
xlat
hlt
inc
int3
jle
cld
dec
js
add
les
push
jbe
cmp
loope
test
adc
adc
je
pop
inc
cmp
cli
lods
out
mov
fadd
in
xor
inc
jns
stos
retf
jne
and
sbb
xor
cmp
pusha
jg
dec
add
jbe
les
ins
fidivr
or
push
mov
xor
test
bound
cmp
int3
sbb
adc
lahf
je
inc
adc
cs
icebp
ret
adc
loopne
mov
dec
lock
fstp
sbb
cmc
es
gs
out
call
ds
pop
loope
(bad)
dec
mov
mov
scas
outs
out
adc
mov
fsubrp
xchg
sub
mov
dec
mov
in
mov
fbstp
push
mov
int
xor
add
dec
dec
sbb
and
mov
push
aad
stc
outs
sub
sar
(bad)
(bad)
cmp
retf
stos
fstp
outs
xlat
cs
or
mov
pop
inc
in
mov
call
push
out
fadd
or
icebp
(bad)
mov
and
push
xchg
ja
fistp
scas
rcr
popf
(bad)
retf
pop
vmovntps
mov
sahf
or
(bad)
(bad)
aaa
jae
rol
pop
mov
(bad)
dec
or
aam
popf
loope
out
add
mov
imul
fiadd
lods
adc
or
add
cmp
in
push
or
lods
mov
and
adc
sbb
fsub
mov
jecxz
mov
lahf
int
pop
lds
push
sbb
mov
pop
int3
lock
movq
push
sbb
fs
int3
add
les
not
sbb
sub
icebp
call
lods
inc
aaa
and
int
outs
inc
dec
outs
es
shr
pop
pop
int3
jle
add
cli
jmp
pusha
ss
cmp
or
sbb
jmp
in
sbb
loop
adc
jnp
mov
pop
sbb
movs
push
cmps
mov
jle
data16
shr
ss
jnp
or
out
aad
dec
test
xchg
push
mov
adc
je
and
ret
mov
cdq
mov
sub
pusha
popa
and
mov
movs
pusha
sbb
shl
mov
mov
inc
add
cs
dec
xchg
cs
ret
sahf
lds
jne
movs
mov
test
(bad)
sbb
jg
arpl
std
cmps
inc
add
add
sbb
retf
inc
jne
sub
hlt
jbe
test
mov
gs
cmp
inc
(bad)
jmp
inc
pop
outs
sub
inc
in
xchg
(bad)
mov
imul
std
icebp
daa
mov
dec
ds
lods
add
inc
cdq
cs
(bad)
fimul
inc
adc
out
ss
loopne
das
add
out
or
sub
or
ror
scas
dec
xchg
sahf
fnstsw
push
retf
scas
and
xchg
jnp
aaa
sahf
push
punpcklwd
loope
inc
jns
or
jmp
repz
ret
stc
and
enter
add
and
push
out
aam
in
mov
adc
(bad)
pop
pop
fld
jge
mov
pushf
push
jno
cmc
xor
nop
(bad)
ins
cmp
test
jmp
mov
scas
xor
jmp
and
scas
neg
push
pop
xchg
inc
test
call
dec
clc
(bad)
les
xor
xor
test
fimul
mov
lock
out
push
in
sbb
retf
cmp
inc
sbb
aas
scas
mov
fwait
dec
push
aas
std
jmp
loope
(bad)
mov
fidivr
sub
call
int3
call
inc
(bad)
ds
outs
ss
ins
jp
push
sbb
pop
loope
bound
and
xchg
daa
scas
jb
mov
sub
add
jne
mov
popf
lahf
cwde
adc
into
jo
xor
fcmovnb
adc
cs
int3
fidiv
pop
test
mov
mov
cwde
sti
retf
mov
xchg
or
test
mov
add
ja
mov
add
imul
cwde
mov
dec
push
jp
xor
add
push
inc
lea
dec
ret
adc
pop
xor
movs
sbb
xchg
mov
mov
mov
movs
dec
and
stc
(bad)
pop
int
enter
jecxz
les
lods
jnp
int
addr16
pop
inc
cs
test
add
xor
and
mov
stos
mov
scas
retf
lods
hlt
mov
fucomi
push
adc
or
pop
and
mov
adc
popf
add
pop
pop
mov
add
cmps
xchg
cmc
or
pushf
xchg
imul
jl
shr
cmp
xchg
lahf
pand
mov
or
dec
xlat
pop
into
retf
jecxz
je
sbb
xchg
cdq
dec
(bad)
call
push
sub
adc
mov
cmp
inc
mov
enter
lahf
popa
cld
call
data16
out
pop
(bad)
xchg
loop
xchg
pop
or
sar
in
pop
xchg
or
jnp
xor
js
leave
lods
and
lods
inc
sbb
push
inc
mov
in
jle
arpl
mov
sbb
push
pop
scas
and
sub
xchg
out
loopne
ins
icebp
sub
std
xor
(bad)
test
mov
sbb
cmp
jo
jbe
mov
adc
fld
in
(bad)
jae
(bad)
sub
movq
mov
mov
(bad)
mov
arpl
hlt
pop
cdq
out
not
enter
es
inc
and
mov
or
shl
push
idiv
out
add
dec
sbb
sbb
(bad)
xor
xchg
lds
gs
stc
mov
mov
mov
test
mov
mov
adc
pusha
xchg
jnp
cld
out
out
call
jg
retf
cmp
cld
ror
jbe
(bad)
je
mov
sti
movs
cmc
mov
imul
int3
ret
or
sbb
ret
inc
lods
xchg
sub
xor
add
movs
stc
loop
pop
push
icebp
out
jb
shl
fucom
je
fmul
push
int
mov
or
ins
cdq
cld
fidiv
popa
out
test
int
test
push
mov
jp
dec
shl
imul
(bad)
mov
iret
mov
mov
jbe
out
push
cmp
shl
pop
or
push
repnz
add
retf
adc
jp
sub
std
xchg
jno
or
cmc
mov
pusha
mov
ins
test
repnz
xchg
mov
fld
adc
iret
out
lock
push
mov
adc
rcl
jne
push
mov
test
dec
or
out
sbb
je
out
push
lea
dec
pop
inc
ss
in
ret
loopne
jo
aad
dec
mov
data16
sub
call
jno
or
inc
pop
mov
hlt
popa
addr16
(bad)
lods
mov
push
jmp
loopne
mov
sub
add
mov
popa
nop
(bad)
ja
xor
ja
or
ret
mov
ss
bound
jae
rol
cmp
in
fisttp
xchg
mov
push
enter
push
fdivr
cmps
push
cli
and
jbe
mov
mov
rol
add
push
mov
xchg
and
inc
mov
data16
mov
out
mov
enter
movs
outs
pop
test
in
adc
push
in
bound
and
xchg
mov
push
push
mov
cdq
mov
lds
cmc
dec
les
and
stos
adc
mov
aaa
cmp
pop
sbb
pop
mov
imul
or
xor
test
pop
fsub
or
cmps
add
sub
icebp
mov
imul
xchg
fcmovbe
push
cwde
popf
(bad)
add
iret
out
jbe
cmp
cdq
pushf
shl
push
xchg
add
dec
cmc
lods
add
mov
xchg
inc
retf
into
lahf
push
push
cwde
xchg
mov
ja
pop
jecxz
iret
enter
mov
mov
dec
adc
push
push
inc
adc
lock
and
imul
push
clc
std
inc
mov
add
mov
icebp
mov
jmp
or
sub
cmps
mov
or
or
jecxz
pop
jb
(bad)
jbe
test
call
fbstp
jge
xchg
adc
and
pop
scas
jae
loop
mov
adc
mov
gs
mov
jne
adc
enter
inc
inc
jo
push
jge
test
nop
(bad)
jmp
and
shl
mov
shl
mov
jmp
pop
ror
in
in
pop
data16
mov
xchg
jbe
adc
jnp
or
jne
cmp
loopne
ins
inc
or
ins
mov
add
cmp
lahf
imul
jle
sbb
add
jno
retf
adc
xor
mov
push
pop
cmps
push
and
repz
inc
sbb
or
in
pop
scas
rol
imul
jmp
cmp
or
movs
add
push
lods
mov
fild
dec
sbb
cmps
out
add
loopne
repz
or
clc
sbb
sbb
jbe
(bad)
lds
(bad)
sar
dec
and
xor
fidiv
mov
and
shr
jno
test
cmp
cmp
pop
retf
and
movs
pushf
out
xor
int
and
mov
mov
xchg
jae
push
cli
test
or
sti
daa
imul
aaa
mov
or
fmulp
pop
lods
cmp
dec
movs
lea
outs
fdiv
ds
imul
mov
or
or
loope
mov
(bad)
xor
inc
mov
jno
jae
in
inc
add
inc
xchg
sar
cmp
cmp
inc
je
push
icebp
int
cmps
or
add
mov
dec
scas
xchg
adc
sbb
btr
dec
(bad)
fist
aas
or
repz
jae
mov
popf
adc
(bad)
stc
stos
std
adc
push
jmp
(bad)
or
xlat
std
fdivr
or
retf
pop
push
mov
xor
cmps
pop
adc
cwde
call
jg
sbb
sahf
ror
inc
ja
mov
mov
sub
push
stos
int
dec
arpl
popa
xchg
mov
add
dec
out
inc
cld
adc
out
fcom
ds
scas
ds
repnz
pop
dec
or
add
mov
ins
scas
sub
fidiv
data16
mov
xchg
idiv
test
mov
test
and
mov
call
scas
aad
sbb
inc
inc
push
ins
pop
dec
jns
aas
sahf
and
mov
rol
jae
out
jns
outs
inc
cmp
pop
jne
mov
sbb
cmc
push
push
fst
adc
mov
cmc
popa
inc
cwde
ret
data16
and
pop
call
popa
fsincos
and
push
add
adc
js
or
jge
sub
stos
adc
cmp
rol
(bad)
push
lods
test
ds
imul
cwde
(bad)
jnp
iret
xor
adc
sub
sahf
push
sar
(bad)
movs
xchg
(bad)
dec
mov
jae
cs
scas
xchg
pop
jae
inc
retf
push
in
int3
loop
popf
lods
push
mov
or
div
movs
cld
pop
(bad)
aam
fwait
pop
in
push
gs
cmp
repnz
cdq
mov
add
adc
adc
addr16
push
inc
mov
retf
add
dec
scas
xchg
popa
or
pop
sub
fisttp
push
and
ss
fcomp
and
bound
adc
(bad)
pop
push
cmc
es
xor
xchg
gs
add
lods
(bad)
test
adc
in
push
addr16
mov
ret
je
sub
push
add
mov
hlt
sahf
not
fldcw
and
int3
sub
mov
out
and
int
mov
dec
daa
cmp
pop
fs
popf
push
cmp
and
arpl
shr
hlt
xchg
jl
adc
fwait
mov
cmps
xor
scas
movs
jecxz
rol
out
loope
rcr
push
popa
dec
scas
dec
jno
gs
arpl
in
jno
or
mov
call
mov
dec
ins
ret
xor
aam
sub
sbb
xchg
lods
addr16
aas
xor
hlt
jnp
cli
mov
cdq
mov
jne
sbb
xchg
pop
push
not
test
mov
fwait
jb
sub
and
hlt
push
push
loop
lods
adc
dec
jp
sub
mov
or
fstp
pusha
sbb
movs
div
sub
mov
xchg
ficom
icebp
sar
inc
in
ss
push
pop
pop
stc
push
addr16
js
xchg
mov
sub
gs
pop
xor
mov
arpl
mov
cmp
or
hlt
fcomi
nop
(bad)
ds
pop
inc
and
or
clc
push
and
and
adc
outs
jmp
inc
xchg
xchg
xor
ins
inc
pop
and
dec
loop
dec
cdq
call
mov
xlat
fisub
ins
sbb
test
loope
or
pop
mov
xor
cmp
jae
cdq
add
call
(bad)
daa
ror
pop
gs
jl
sub
mov
inc
inc
jnp
mov
int
xchg
cmp
aam
mov
call
push
(bad)
xchg
push
mov
es
in
out
pminub
add
or
stos
push
int
or
xchg
and
xchg
fistp
popf
test
add
xchg
dec
xor
shl
push
scas
imul
fidiv
stc
pop
cli
push
mov
(bad)
xchg
mov
fsub
sub
push
jp
dec
adc
xchg
mov
fiadd
push
xor
aas
cmp
pop
mov
add
xor
popf
clc
jae
cs
mov
mov
iret
test
into
ja
sbb
lods
jg
imul
jp
dec
push
cdq
inc
dec
xchg
jo
jo
pop
sbb
jns
sub
sbb
dec
lods
sub
rol
fcmovne
and
inc
leave
pushf
pop
cmp
cdq
aad
stos
scas
cmps
pop
push
push
jp
xor
pusha
ja
sar
test
mov
jbe
xor
pop
jb
jmp
push
in
sar
mov
mov
dec
push
shl
scas
push
cs
(bad)
fs
dec
xor
cmp
std
repnz
outs
test
test
xchg
jecxz
adc
add
ror
xlat
and
stos
mov
popf
inc
sbb
pop
sub
(bad)
push
and
mov
xor
xchg
pusha
push
mov
aaa
push
and
gs
jg
es
sub
movs
cwde
inc
and
adc
xor
stos
mov
xchg
sahf
and
ret
xor
ret
push
nop
cwde
gs
jbe
mov
push
sbb
push
push
jge
mov
ret
data16
sub
repz
lds
cmp
inc
inc
add
pop
neg
xor
mov
sbb
mov
cmp
jg
add
sbb
imul
sbb
xlat
and
(bad)
icebp
xchg
push
(bad)
xchg
lock
xor
in
data16
hlt
push
in
test
fbstp
lods
lahf
jnp
cmp
and
outs
jns
dec
repz
in
lea
ficom
fninit
jg
push
mov
pushf
retf
inc
jo
xor
pop
pop
inc
adc
push
pop
not
pusha
mov
sub
pop
sar
fldcw
xchg
ss
mov
inc
popf
xlat
mov
cmp
sbb
pusha
stos
cmp
mov
lea
sub
lahf
mov
mov
nop
lds
sar
mov
repz
out
inc
loope
out
jbe
stos
xchg
out
test
cmps
lahf
mov
jle
ds
jp
mov
push
mov
mov
int3
mov
mov
pop
in
retf
dec
scas
(bad)
jmp
jecxz
idiv
or
xchg
sbb
shr
repnz
fistp
shl
jae
(bad)
in
dec
fisttp
xor
push
mov
retf
and
call
cmps
sbb
inc
xor
loop
call
(bad)
retf
push
mov
jne
cld
mov
adc
enter
push
lea
es
out
call
xchg
inc
pop
push
xor
jnp
inc
into
push
js
inc
sub
mov
jb
push
and
xor
xchg
xor
in
cmp
nop
scas
dec
aam
call
jno
add
bnd
push
or
jl
(bad)
mov
pop
fwait
outs
mov
fldenv
add
mov
xchg
movs
gs
sbb
mov
fwait
cmp
xor
jno
std
mov
js
cmp
sbb
pop
jle
xchg
sub
mov
outs
test
rcl
adc
mov
inc
scas
mov
add
cmp
out
dec
cmp
sub
pop
inc
jns
jmp
fsub
jl
cmc
mov
push
call
int
jno
out
mov
(bad)
sub
pop
push
loope
es
dec
idiv
xchg
add
and
movs
popa
jmp
push
aas
pop
movs
jnp
test
mov
pop
aam
jnp
dec
add
mov
pop
(bad)
outs
aas
cmp
iret
arpl
inc
ret
jae
repz
stc
movs
push
daa
jo
sub
sub
fistp
push
push
push
jp
arpl
sub
popa
ss
sub
repnz
ss
sub
xchg
mov
push
fistp
add
cmps
xchg
and
xchg
jb
mov
scas
pop
ja
popa
sti
cld
int
xchg
xchg
push
cmp
sub
(bad)
dec
test
daa
pop
cmp
test
dec
xchg
es
ficom
shr
adc
inc
sbb
sbb
jno
sti
pop
push
sub
dec
sbb
jecxz
shl
xchg
ds
mov
adc
out
push
stc
loop
cmps
lods
push
mov
inc
mov
stos
and
jle
pop
mov
mov
aaa
pop
inc
ja
js
fidivr
sub
push
mov
pushf
mov
push
pop
and
xor
fbld
and
sub
xor
sti
aas
jbe
cmp
stos
xor
mov
sbb
mov
sub
mov
shl
lahf
lods
and
sti
push
mov
sbb
jg
movs
pop
loopne
jge
mov
push
gs
cwde
nop
enter
sti
test
es
mov
push
aam
(bad)
(bad)
pusha
cmc
cs
xchg
mov
adc
or
ficomp
data16
and
pop
cmp
push
and
sbb
sub
movs
and
pop
push
dec
shl
inc
inc
out
cs
mov
fstp
push
cmp
mov
jecxz
jbe
inc
repnz
shr
or
lss
or
jns
push
fisubr
mov
fisttp
mov
pop
mov
int3
adc
add
inc
lea
pop
out
repz
lea
xchg
add
mov
and
les
hlt
jp
stc
mov
pop
xlat
mov
sbb
push
imul
push
xor
aas
jecxz
je
push
pop
fistp
out
add
sahf
out
xlat
ins
addr16
shl
setnp
push
jo
out
lock
mov
int3
inc
mov
es
add
rcl
push
xor
lods
(bad)
mov
dec
rcl
push
lds
lahf
fcmovb
xor
ja
shr
adc
pop
fnsave
imul
sahf
xchg
sbb
movs
rcr
je
aam
in
and
xor
xor
mov
push
dec
xchg
stos
jmp
and
pop
or
or
fsub
dec
jno
call
mov
leave
aas
cld
xor
pushf
or
push
sbb
in
sbb
jmp
fist
sbb
fdivr
mov
adc
aam
and
push
cwde
mov
push
jle
pop
push
mov
imul
int3
bswap
mov
test
ins
test
mov
cmp
mov
jbe
xchg
mov
inc
push
retf
xchg
aaa
mov
pop
stc
pop
jge
adc
fsubr
mov
popa
push
and
and
(bad)
mov
cmp
mov
ja
inc
into
cmps
pop
retf
loope
sub
enter
retf
repnz
inc
push
test
in
adc
xchg
aad
aas
dec
(bad)
cs
jbe
lds
dec
add
and
ins
jns
scas
add
(bad)
rcl
adc
jns
sti
bound
sahf
mov
jmp
and
jbe
jp
and
out
iret
mov
lea
stc
pop
sbb
or
call
add
int
leave
ins
xchg
dec
loopne
ret
mov
jl
ret
daa
mov
out
aaa
call
mov
xchg
push
sub
jne
ins
mov
inc
repz
dec
sub
lds
call
fnstsw
lock
push
sbb
fsub
std
jo
pop
lods
and
cli
or
mov
jecxz
dec
jne
adc
xchg
outs
and
mov
inc
sub
xor
es
scas
(bad)
push
aam
push
pop
call
inc
lods
lods
pop
js
or
or
retf
mov
repz
mov
mov
test
adc
(bad)
std
fs
das
add
pop
cmp
adc
stc
cmp
sub
cmp
mov
ins
lock
jbe
mov
or
jmp
dec
sbb
xchg
xor
stc
mov
fidivr
fsub
leave
mov
mov
idiv
addr16
pop
js
cli
inc
mov
pop
add
pop
(bad)
sbb
push
cmp
jne
mov
je
push
fisub
fs
jo
ja
ins
and
out
cli
in
je
lods
fisttp
outs
into
fimul
or
xchg
push
stc
aaa
scas
push
(bad)
adc
ss
cmp
ret
mov
fwait
xor
jae
inc
ins
inc
lea
mov
repz
sbb
dec
pop
mov
ja
and
inc
sub
dec
or
adc
cmps
dec
pop
push
inc
out
sbb
add
jle
fstp
fsub
mov
jne
stos
mov
in
sbb
(bad)
xor
out
lea
cmp
mov
pop
push
pop
xchg
inc
cmc
jo
lock
mov
loop
mul
movs
movs
push
pop
sti
div
call
aas
stc
xor
push
jecxz
loope
in
mov
xor
sbb
clc
inc
loop
fdivr
daa
daa
xchg
mov
pushf
outs
cmps
xor
sbb
in
inc
mov
sbb
shl
sar
cli
int3
rcl
popf
jmp
sub
adc
rcl
mov
sbb
scas
mov
ret
and
outs
les
xlat
leave
xchg
gs
jnp
add
cmp
fisubr
leave
outs
mov
popa
scas
lock
pusha
sub
xor
add
jecxz
jnp
mov
ret
imul
jle
das
loopne
scas
cmc
xor
sar
movs
jmp
cmp
ret
jg
or
xor
out
out
inc
pusha
adc
cmp
ret
(bad)
lds
inc
inc
or
call
pop
adc
sub
aaa
outs
mov
dec
dec
daa
outs
inc
mov
push
fwait
adc
or
xchg
cmp
xchg
in
or
mov
popf
and
mov
fimul
sub
ins
mov
lahf
mov
cmp
sub
mov
out
in
lods
adc
enter
ret
ja
cdq
outs
loopne
scas
sub
inc
pop
dec
in
out
jnp
push
pushf
mov
es
repnz
xchg
int
sti
sahf
mov
stos
fwait
dec
jnp
jb
test
enter
jg
cmps
jmp
inc
cs
out
loop
loop
sbb
jmp
jecxz
cmp
test
(bad)
or
test
icebp
and
jmp
lock
cmc
push
or
retf
outs
push
ret
dec
mov
dec
push
outs
rcr
(bad)
call
rcl
xor
