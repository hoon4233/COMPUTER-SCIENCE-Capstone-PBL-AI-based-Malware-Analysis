iret
xchg
leave
mov
mov
push
std
aas
jne
lods
cmp
lods
and
xor
(bad)
push
mov
lods
add
cdq
pusha
xchg
lods
loope
out
adc
xor
push
in
mov
(bad)
fmul
adc
fcom
cmp
test
lds
lods
adc
dec
add
mov
test
jne
test
mov
loope
fmul
cmp
outs
movs
nop
fdivr
stos
cmp
and
mov
aam
mov
nop
jne
ja
or
test
stos
fcom
cmp
push
adc
mov
push
mov
(bad)
pop
or
(bad)
push
mov
out
fcmove
int3
pop
ret
dec
jb
fmulp
enter
mov
not
ja
icebp
xlat
and
(bad)
push
add
mov
cmc
mov
test
add
out
fmul
fdiv
add
pop
arpl
(bad)
fcomp
fdiv
sub
adc
or
adc
and
push
mov
(bad)
fdivr
pop
fidiv
ret
addr16
jb
or
outs
add
push
xor
or
dec
inc
(bad)
sub
fcom
lods
jbe
jge
lea
push
nop
ja
add
dec
cmp
(bad)
mov
repnz
fnstsw
jae
(bad)
mov
add
gs
cdq
pop
add
popa
movs
add
xor
push
cdq
lock
push
jecxz
push
mov
(bad)
ror
not
dec
xor
not
xor
mov
mov
(bad)
push
mov
fnop
jno
mov
iret
retf
inc
dec
jb
mov
or
imul
fadd
xchg
lea
mov
mov
movs
lock
jmp
xor
push
(bad)
fcomp
dec
jb
cmp
xor
push
mov
sub
sub
(bad)
push
mov
mov
iret
xchg
dec
dec
jb
cmp
and
jbe
xor
push
or
out
add
addr16
popa
pusha
daa
outs
lods
push
jg
lods
xor
mov
pop
(bad)
cmp
xor
cmp
lods
dec
push
mov
retf
jnp
jb
lods
mov
iret
retf
jae
jb
fisubr
sar
mov
jge
xchg
add
fcmovb
int3
scas
mov
inc
repz
xor
pop
fisub
fdivr
cmp
test
cdq
cwde
ficom
fimul
sti
(bad)
dec
jb
shr
(bad)
(bad)
shr
enter
mov
scas
mov
(bad)
lods
mov
mov
mov
jne
cmp
inc
inc
mov
cs
mov
fwait
jbe
jle
mov
mov
cdq
iret
mov
push
les
mov
push
mov
jge
jbe
jle
mov
mov
jbe
push
fmul
cmp
or
add
or
push
cld
leave
(bad)
push
jno
js
jbe
(bad)
push
bound
jg
push
and
movs
call
(bad)
push
mov
inc
std
mov
lods
add
add
xchg
or
add
mov
into
add
dec
add
sbb
add
dec
jb
fmul
cmp
or
add
or
push
cld
leave
(bad)
xchg
(bad)
cmp
(bad)
mov
add
fucomi
fidiv
push
fcomp
cmp
mov
add
mov
add
or
add
jbe
add
mov
add
or
add
jns
jp
mov
add
iret
add
jbe
add
stc
xor
or
imul
fdivr
test
add
xchg
int3
int3
fnstenv
add
jg
jne
jmp
mov
or
mov
jne
or
adc
jae
aas
stos
xchg
sbb
pop
imul
popf
pop
mov
jmp
jge
push
jle
add
int3
enter
mov
out
(bad)
outs
movs
call
repnz
addr16
test
mov
xor
fwait
scas
add
fcmove
int3
iret
movs
bound
push
mov
xor
fdiv
cmp
push
out
add
icebp
or
jo
xlat
cdq
add
cmps
fimul
cmp
add
adc
add
fimul
cmp
fmul
add
lock
xchg
lea
(bad)
jmp
jno
push
jle
add
int3
les
jne
mov
fisubr
add
addr16
cdq
mov
add
out
les
jne
xor
push
sbb
(bad)
adc
pop
aaa
xor
fidiv
or
les
in
popf
and
cmp
iret
xchg
leave
fucomi
adc
out
xor
(bad)
fwait
scas
add
fcmove
int3
iret
xchg
(bad)
outs
movs
call
lods
add
ss
lea
mov
add
mov
pop
loope
or
mov
push
int3
int3
jne
test
cmp
ret
(bad)
(bad)
scas
jbe
scas
fcom
int3
mov
scas
jbe
jge
lods
fcomi
fidiv
sbb
int3
enter
outs
movs
call
test
jecxz
mov
les
iret
mov
mov
push
mov
(bad)
cmp
(bad)
push
fisub
sbb
cld
mov
ja
mov
ja
dec
xor
push
add
mov
push
add
lods
add
ss
add
icebp
xor
shl
mov
lock
arpl
fmul
xor
and
fidivr
ja
mov
add
sub
add
xor
push
add
jge
lods
arpl
in
pop
jo
cmp
enter
idiv
mov
cmp
out
xor
cmp
xor
jns
xchg
pop
jnp
(bad)
mov
add
ja
mov
lock
cld
ins
test
jge
mov
push
add
push
add
push
push
mov
and
push
popa
cmp
es
push
ror
scas
cmp
mov
add
add
xor
push
mov
(bad)
push
jle
ja
ins
mov
and
push
imul
adc
inc
mov
xor
movs
outs
mov
test
jle
add
imul
fdivr
call
sub
test
xor
call
test
xor
repnz
jne
pop
or
mov
adc
mov
adc
lock
data16
lods
lock
call
add
mov
add
jbe
repnz
jecxz
xchg
fs
(bad)
fimul
add
jb
add
dec
cmp
lods
jbe
(bad)
test
(bad)
push
pusha
and
push
mov
cmp
fmul
cmp
lea
imul
fcmove
int3
jge
jge
icebp
xlat
data16
push
or
push
xchg
jge
jno
jg
aas
adc
push
jecxz
push
add
xor
or
call
cwde
xchg
int3
sar
push
add
fcmove
fdiv
jns
jae
imul
(bad)
mov
add
add
sgdtd
mov
or
ja
ja
or
push
cld
popa
xchg
xchg
dec
jb
cmp
jne
add
or
inc
mov
(bad)
push
mov
mov
call
sub
mov
lods
ja
scas
repnz
lock
lods
push
movs
(bad)
push
mov
mov
jne
push
in
add
push
xor
fimul
ret
xchg
dec
jb
push
std
cmp
dec
jb
add
add
add
add
push
enter
iret
add
xor
ficom
sbb
lods
jbe
cmp
nop
fdivr
test
ss
cmc
sub
mov
add
xor
fidiv
sbb
int3
enter
xor
jecxz
xchg
push
mov
mov
fsub
xor
fimul
cld
cmp
lea
mov
jge
jbe
jle
mov
mov
add
add
fcmove
mov
fcomp
dec
ds
push
jecxz
jae
jne
xchg
push
loope
or
mov
push
and
or
outs
mov
fisubr
push
mov
push
mov
fbld
cmp
bound
(bad)
je
add
xor
push
or
add
jbe
add
popa
inc
lods
jbe
not
mov
ja
mov
xor
lock
(bad)
mov
add
scas
fimul
add
je
add
dec
cmp
mov
or
(bad)
daa
inc
mov
push
mov
or
ja
ja
add
push
lods
ja
scas
repnz
lock
lods
fidivr
push
jne
ds
jnp
jbe
add
dec
mov
add
loope
or
mov
add
add
add
xor
push
mov
icebp
(bad)
outs
ss
push
add
or
ja
ja
mov
mov
lods
ja
scas
repnz
lock
lods
fimul
push
jne
ds
or
clc
push
mov
int3
enter
dec
iret
add
mov
pop
add
mov
lods
jbe
jnp
jbe
add
cmp
fcmovnb
sub
xor
aaa
iret
add
xor
das
add
pop
dec
aas
jnp
(bad)
xor
xor
ja
(bad)
pop
or
mov
scas
jbe
add
mov
push
mov
xchg
push
loope
or
mov
add
popa
xor
cmp
neg
lods
jbe
es
push
mov
push
lods
ja
ret
lods
jbe
(bad)
pop
or
aas
dec
(bad)
and
add
iret
add
xor
and
xor
ror
icebp
in
call
cmp
cmp
and
add
outs
(bad)
push
jecxz
icebp
in
call
inc
lock
int3
enter
jle
add
dec
cmp
lods
jbe
(bad)
daa
xchg
mov
add
loope
jno
mov
xchg
scas
jbe
jge
sbb
fimul
dec
(bad)
and
add
iret
jae
mov
adc
mov
push
mov
fdivr
add
jle
ja
and
add
into
add
push
lods
ja
jle
mov
adc
iret
add
iret
scas
cmp
mov
lods
jbe
cmp
repz
mov
cmp
je
add
xor
pop
push
(bad)
push
add
iret
mov
repz
push
iret
add
into
add
add
add
lock
(bad)
jge
(bad)
push
or
call
iret
add
into
add
add
add
mov
icebp
(bad)
dec
xor
push
or
(bad)
jmp
pop
(bad)
push
jle
ja
and
add
iret
add
into
add
mov
jg
jge
(bad)
push
out
idiv
jbe
add
jnp
jbe
add
xor
fimul
add
adc
add
into
add
add
add
popf
xor
fimul
add
jnp
(bad)
fmul
add
jbe
ret
push
mov
(bad)
fcmove
int3
not
mov
jae
pop
iret
add
into
add
add
add
pop
xor
push
add
jmp
xor
push
jle
ja
or
repz
jne
icebp
(bad)
jp
(bad)
push
add
push
lods
ja
scas
fmul
add
jbe
(bad)
fcmove
int3
not
mov
inc
or
xor
movs
push
jnp
jbe
add
dec
fcmovnu
fimul
add
push
iret
add
or
jne
es
mov
(bad)
pop
or
std
push
mov
(bad)
fimul
add
popa
iret
add
adc
push
jne
ds
or
std
push
mov
jnp
jbe
add
dec
mov
mov
jbe
push
lods
ja
xchg
jecxz
jno
fimul
push
movs
and
(bad)
ror
jge
gs
add
xor
mov
jnp
jbe
add
dec
iret
dec
mov
or
add
jnp
(bad)
fimul
push
mov
dec
and
mov
idiv
jbe
add
mov
add
or
add
jbe
add
add
jle
ja
jge
cdq
mov
(bad)
push
jp
jae
or
add
mov
push
mov
or
lods
ja
test
jg
jne
ficom
sbb
lods
jbe
cmp
pop
or
cld
push
mov
add
call
jae
adc
pop
cmp
sbb
mov
(bad)
push
mov
ja
jne
ds
or
cld
push
mov
cmp
lods
jbe
jne
adc
mov
ja
jne
ds
or
call
mov
repz
add
mov
push
mov
mov
sar
cmp
lods
ja
cld
push
add
iret
mov
repz
sub
add
iret
jae
stc
iret
add
into
add
and
xor
push
mov
pop
fidivr
add
add
inc
push
mov
(bad)
mov
jbe
add
sgdtd
lock
(bad)
shl
push
or
(bad)
ficom
fimul
jnp
jbe
add
loope
or
mov
add
add
add
xor
push
mov
icebp
(bad)
jo
(bad)
push
or
(bad)
pop
or
mov
add
jecxz
add
jge
add
iret
scas
fdiv
jne
ficom
sbb
lods
jbe
cmp
pop
or
(bad)
push
mov
out
fxch
add
xor
shl
add
adc
(bad)
push
add
mov
je
scas
lods
cmp
add
jbe
jge
cmp
jg
retf
pop
(bad)
push
or
(bad)
daa
stc
idiv
jbe
add
xor
lods
cmp
add
jbe
add
loope
or
mov
add
popa
loope
push
mov
mov
mov
jae
je
add
or
push
cld
leave
ja
jno
add
iret
jae
(bad)
iret
add
into
add
or
iret
scas
mov
or
repnz
cdq
push
mov
add
xor
lock
(bad)
push
add
scas
fdivr
mov
lods
ja
jne
adc
add
iret
icebp
sar
bound
iret
test
or
pop
mov
jne
sbb
mov
add
gs
add
iret
(bad)
(bad)
gs
add
iret
jge
jns
add
int
lods
jbe
ja
mov
mov
lods
ja
scas
fdivr
lea
lods
ja
(bad)
daa
test
add
add
add
lahf
xor
shl
add
add
scas
fdivr
mov
lods
ja
scas
fdivr
mov
lods
ja
scas
fdivr
repz
xor
imul
into
lods
fistp
pop
and
iret
add
imul
fdivr
daa
xchg
retf
xor
aaa
sub
(bad)
push
mov
fisubr
adc
test
fdivr
push
ins
sub
mov
outs
(bad)
push
dec
jne
push
mov
(bad)
sar
aam
dec
mov
xchg
or
xchg
(bad)
push
or
cli
mov
add
fidiv
sbb
int3
shl
imul
(bad)
es
fcmovne
xchg
int3
int3
add
jne
push
mov
(bad)
fmul
sar
push
push
and
fisttp
enter
jne
fdiv
call
bound
iret
mov
push
jns
pop
push
mov
inc
inc
repnz
push
fdivr
test
add
enter
jne
fimul
mov
loopne
adc
xor
test
fmul
xor
loopne
xor
ror
xchg
xchg
dec
jb
cmp
adc
push
popa
jge
push
mov
sbb
int3
enter
fsubr
or
ins
test
jnp
stos
add
jge
dec
lock
bound
shl
nop
mov
daa
lea
ds
push
jno
rol
mov
es
cmp
dec
xor
push
jbe
repnz
or
repnz
push
fimul
call
xor
fisubr
add
addr16
test
inc
es
xor
movs
outs
mov
add
lock
es
mov
lods
pop
push
mov
sbb
xor
mov
jne
fimul
and
mov
arpl
neg
lea
jbe
cwde
mov
push
mov
mov
mov
ja
ret
fcomp
and
pop
call
inc
dec
xor
fidivr
push
fimul
adc
xor
or
imul
fdivr
call
sub
mov
add
and
or
lods
mov
sub
xor
sar
jmp
xor
lods
mov
stos
fbstp
(bad)
shr
add
in
int3
add
xor
mov
(bad)
mov
push
jnp
jne
add
dec
mov
mov
test
lods
mov
or
ja
ja
loope
or
mov
xor
xor
push
iret
add
aaa
(bad)
push
loope
movups
into
add
add
not
push
iret
add
mov
cmp
push
mov
jne
pop
iret
add
iret
xchg
push
jecxz
xchg
push
add
or
jbe
lods
ja
ja
jno
sti
(bad)
dec
jb
pop
dec
inc
out
cmp
add
mov
ja
mov
ja
mov
xor
ficom
fimul
mov
push
jne
daa
push
push
mov
jne
add
jae
inc
iret
add
iret
mov
ja
ja
jno
ds
xchg
iret
dec
mov
add
add
pop
xchg
(bad)
xor
ror
loope
mov
sti
(bad)
dec
jb
ficom
fimul
jnp
jbe
add
mov
repnz
into
add
(bad)
mov
mov
add
add
and
iret
dec
fwait
jbe
add
mov
cmp
iret
add
inc
movs
fmul
add
int3
int3
ja
mov
lock
mov
add
iret
imul
enter
mov
jg
cmp
push
or
neg
mov
add
iret
add
xor
lds
mov
jne
jge
(bad)
fcmove
int3
jg
mov
lock
mov
add
or
add
add
and
iret
mov
ja
ja
jno
es
push
mov
add
mov
mov
lods
ja
scas
fimul
add
jbe
bound
sub
jne
lods
or
add
jbe
add
(bad)
xor
xchg
std
pcmpeqw
adc
xor
jne
movs
push
jnp
jne
add
dec
mov
neg
mov
add
iret
imul
enter
dec
(bad)
push
pusha
cmps
add
jb
fmul
les
add
ficom
sbb
lods
jbe
cmp
xchg
fnstsw
add
jbe
add
jecxz
jae
and
add
into
add
jecxz
add
jge
imul
into
add
int3
enter
iret
add
mov
add
dec
mov
add
mov
dec
test
add
ja
add
add
lods
ja
scas
cmp
into
add
mov
lods
ja
jg
dec
iret
add
xor
xchg
std
pcmpeqw
xor
add
mov
xor
push
add
add
xor
add
iret
ja
jno
push
lods
jbe
inc
mov
push
jnp
jne
add
dec
mov
ja
jne
cmp
ror
jne
add
xchg
push
add
xchg
or
add
jbe
or
mov
or
mov
dec
mov
mov
lods
jbe
(bad)
fimul
add
and
add
into
add
jecxz
add
jge
imul
into
add
int3
enter
mov
jg
js
(bad)
push
or
mov
das
jne
add
mov
add
add
adc
rol
jbe
add
adc
add
iret
scas
fimul
add
jbe
or
mov
push
retf
xor
cmp
into
add
popa
cmc
popa
push
mov
or
ja
ja
loope
call
pop
(bad)
fimul
add
push
xor
cmp
xor
and
add
xor
icebp
int3
add
mov
arpl
mov
xchg
push
loope
(bad)
push
mov
add
jecxz
add
jne
mov
std
int3
add
mov
xchg
lods
mov
(bad)
fimul
add
jbe
add
jecxz
xchg
lods
mov
(bad)
fimul
add
jbe
lods
ja
push
jl
iret
add
dec
push
add
gs
add
cmp
daa
xor
push
cld
xor
(bad)
cmp
xor
adc
add
iret
jge
test
icebp
xlat
int3
xor
push
jecxz
xchg
mov
jb
fidiv
add
arpl
add
dec
cmp
lods
jbe
(bad)
pop
or
mov
add
div
(bad)
pop
or
cld
push
mov
jp
mov
(bad)
shl
xor
pop
or
cld
push
mov
cmp
(bad)
push
add
or
rol
jbe
dec
mov
add
add
jb
fimul
add
pusha
iret
add
dec
adc
lods
jbe
(bad)
pop
or
pop
cld
cmp
push
add
push
lods
ja
scas
mov
or
repnz
jbe
(bad)
push
std
cs
push
loope
movups
into
add
popa
inc
pop
lods
jbe
cmp
mov
sti
ja
add
call
add
pop
iret
add
iret
call
xor
int
add
je
lods
jbe
inc
push
jge
add
je
lods
jbe
imul
into
add
repnz
sbb
iret
iret
xchg
or
(bad)
pop
sbb
int3
add
iret
jne
jns
add
je
lods
jbe
dec
ror
lods
push
mov
add
add
push
lods
ja
scas
cmp
push
jbe
idiv
or
out
fmul
cmp
mov
add
jo
outs
mov
mov
ja
jae
(bad)
xor
sbb
add
pop
iret
add
xor
mov
add
popa
mov
cmp
iret
add
inc
loopne
mov
mov
and
add
iret
jge
test
jp
and
add
into
add
adc
(bad)
int
add
into
add
ds
int
add
into
add
mov
scas
ja
jne
jns
add
je
lods
jbe
xor
lods
jbe
jae
and
add
xor
es
jge
cdq
mov
cmps
mov
(bad)
fmul
cmp
leave
int3
add
jo
outs
mov
mov
ja
jae
(bad)
xor
cmp
add
mov
add
lock
lods
jbe
es
push
mov
ja
or
add
or
push
cld
leave
ja
jne
dec
mov
add
add
or
ja
jne
int
add
iret
add
gs
or
cli
push
mov
test
add
in
sbb
push
stos
add
add
lock
push
mov
icebp
in
xor
pop
fnstcw
add
popa
leave
gs
mov
(bad)
pop
ds
xchg
or
iret
(bad)
fimul
add
jb
fimul
add
xor
lods
mov
adc
iret
xor
mov
int3
add
xor
fidiv
push
fimul
dec
adc
jne
add
iret
add
add
add
dec
sar
iret
scas
mov
or
retf
into
add
mov
push
mov
fimul
cmp
mov
add
mov
ficomp
add
dec
xor
scas
dec
jb
fadd
jp
ja
add
jne
pop
ds
pop
movs
add
mul
jg
xchg
sub
push
xchg
add
int3
adc
jb
bound
adc
stos
add
add
lock
xchg
xor
adc
test
cmp
shl
push
mov
sti
(bad)
dec
jb
jmp
cmp
push
jle
ja
jno
cmp
mov
(bad)
push
jecxz
push
aam
xor
lock
(bad)
cmp
sar
mov
ficom
pop
pop
mov
daa
cmps
(bad)
push
add
shr
jge
jne
mov
or
jne
fimul
(bad)
cmp
iret
(bad)
push
mov
cmp
fsub
(bad)
mov
iret
lods
bound
push
xor
(bad)
ja
outs
jne
mov
mov
imul
mov
pop
stos
dec
jb
or
imul
fdivr
lods
add
out
mov
cwde
push
scas
mov
xor
mov
jne
fimul
sti
(bad)
dec
jb
cmp
pop
(bad)
cmp
lock
sbb
ja
jns
bound
cmp
mov
mov
out
fimul
xor
lds
push
add
call
xchg
push
add
adc
jbe
push
add
dec
cmps
(bad)
push
jbe
push
retf
xor
idiv
or
push
pusha
cmp
push
mov
jge
jbe
jle
mov
mov
fsubr
add
lock
mov
jne
fmul
loopne
nop
dec
jne
push
mov
(bad)
xchg
int3
sar
push
mov
adc
shl
mov
clc
push
or
jae
mov
icebp
in
out
scas
cmp
shr
outs
iret
add
dec
and
xchg
cld
aas
ja
mov
ja
add
xchg
lea
repz
dec
xor
pop
or
cld
fcmove
call
ja
jbe
push
fmul
enter
or
push
sbb
call
icebp
in
out
scas
lods
cld
cmp
push
jno
mov
mov
or
repnz
ds
push
int3
int3
jne
jno
mov
pop
jbe
add
push
sbb
fimul
mov
xchg
lea
hlt
lods
int3
int3
iret
lods
bound
jne
test
dec
push
push
mov
jmp
dec
out
and
bound
cmp
in
and
push
jge
jl
ja
add
pop
(bad)
fmulp
fsubr
push
jno
push
add
push
mov
(bad)
into
(bad)
mov
jg
ret
xor
push
jbe
push
mov
(bad)
outs
movs
call
test
fs
push
mov
add
lock
stos
add
jae
jne
xchg
ins
mov
(bad)
cmp
inc
idiv
loope
(bad)
push
mov
mov
xor
cld
int3
push
sub
xor
lods
cld
int3
push
add
xor
jmp
inc
(bad)
push
jle
ja
jno
cmp
rep
fisubr
inc
fimul
ja
jle
ja
jge
cmp
mov
cmp
int3
int3
scas
cmp
xor
es
mov
sub
mov
mov
inc
out
int3
enter
iret
mov
inc
add
xor
adc
sbb
int3
shl
inc
add
add
mov
mov
or
outs
aaa
nop
fdivr
call
arpl
mov
xor
mov
jne
fimul
pop
(bad)
mov
ja
add
xlat
stos
add
xchg
inc
add
push
add
fdivr
mov
xchg
push
loope
movups
fdivr
jbe
jge
test
icebp
xlat
and
(bad)
push
add
jmp
push
pusha
test
scas
movs
(bad)
push
add
js
in
ret
sub
xor
pop
or
(bad)
push
mov
push
outs
sbb
(bad)
push
cld
inc
xchg
push
(bad)
out
mov
ja
xor
fcom
(bad)
sbb
int3
call
jae
jns
test
lahf
movs
(bad)
push
or
add
jnp
cs
mov
dec
jne
push
bound
xchg
push
(bad)
sbb
mov
ja
or
push
add
outs
mov
shl
movs
push
mov
push
mov
xchg
push
loope
cld
push
mov
xor
xor
cmp
xor
add
mov
sti
(bad)
dec
jb
fmul
aam
push
push
or
mov
jne
js
rol
lods
mov
(bad)
daa
stos
mov
and
xor
push
xchg
jne
popa
sbb
push
mov
jnp
mov
(bad)
fmul
aam
push
push
or
icebp
(bad)
dec
mov
push
add
ror
mov
xchg
xor
(bad)
push
add
jge
push
xor
mov
add
ja
mov
inc
sub
mov
jo
xor
fimul
mov
cmp
xor
fimul
mov
xor
gs
xor
push
bound
xchg
push
(bad)
push
ror
sub
outs
add
pushaw
mov
fmulp
shr
mov
jnp
mov
(bad)
shl
ror
mov
nop
sbb
(bad)
pop
dec
aas
jp
mov
(bad)
fidiv
push
fimul
(bad)
push
mov
jae
xor
pushw
and
xor
fmulp
in
scas
add
mov
mov
mov
jmp
(bad)
sbb
or
add
clc
call
mov
jno
cmp
jne
js
shr
push
ins
sbb
add
js
clc
lods
js
hlt
scas
cmp
mov
lods
jbe
scas
cmp
xor
pop
sbb
mov
xchg
xor
movs
outs
mov
add
dec
pop
out
mov
add
cmp
inc
inc
mov
jbe
ds
jecxz
xchg
push
loope
(bad)
push
mov
fcomp
xor
pop
dec
inc
out
cmp
xor
push
jbe
inc
mov
add
iret
stos
add
xchg
push
jecxz
xchg
mov
popa
push
ins
push
mov
add
mov
mov
add
push
mov
dec
sub
mov
push
fimul
jg
lea
jbe
push
retf
xor
cmp
sar
pop
call
mov
movs
jb
add
jle
(bad)
push
mov
mov
js
(bad)
cmp
xor
push
or
sub
sbb
je
adc
xor
cmp
mov
mov
xor
cmp
sar
pop
in
retf
xor
mov
or
mov
mov
addr16
mov
div
(bad)
push
jle
ja
jne
cmp
add
iret
stos
add
xchg
test
pop
inc
jae
xor
data16
mov
push
mov
nop
fdivr
lods
add
out
mov
out
sar
cmp
pop
cli
fmulp
and
mov
or
repnz
mov
push
dec
jb
xchg
int3
(bad)
sti
ror
adc
dec
push
test
or
dec
push
mov
stos
mov
dec
es
mov
push
jbe
(bad)
xchg
ja
ja
add
pop
ds
jbe
xor
push
add
ror
retf
iret
sti
push
dec
jb
cmp
(bad)
scas
fmul
cmp
and
xor
xchg
ja
push
mov
stc
cmp
jae
xor
mov
fisub
fdiv
cmp
es
mov
push
movs
pop
jg
fidivr
push
or
dec
inc
mov
xchg
push
popa
mov
jge
jne
add
xor
shl
add
movs
add
jne
add
iret
add
xor
add
movs
add
jne
add
iret
add
mov
cmp
lods
jbe
jge
jge
add
les
lods
jbe
jnp
jne
add
xor
iret
jge
jge
add
les
lods
jbe
jnp
jne
add
cmp
iret
jge
jno
add
mov
add
dec
mov
stos
je
add
cli
and
jno
add
iret
ja
sbb
add
iret
add
cli
and
jno
add
iret
ja
sbb
add
jb
ficom
fimul
pop
mov
dec
mov
scas
jbe
call
dec
(bad)
push
add
push
scas
jbe
scas
fimul
add
int
lods
fnstcw
add
jecxz
push
sub
xor
fimul
add
mov
icebp
xlat
daa
xor
push
add
push
scas
jbe
lods
add
std
je
mov
ds
or
pop
(bad)
cmp
(bad)
push
add
pop
scas
ja
scas
add
mov
add
jno
mov
fdivr
(bad)
pusha
(bad)
push
mov
xor
lods
mov
adc
iret
add
and
push
add
iret
mov
repz
xchg
pusha
dec
call
mov
add
ja
(bad)
lods
mov
adc
mov
scas
ja
scas
add
fnstenv
mov
lods
cld
sub
mov
xor
xlat
push
mov
sbb
lods
jbe
cmp
push
mov
jae
jne
add
xor
pop
dec
aas
jp
mov
(bad)
ficomp
add
mov
icebp
xlat
sub
(bad)
push
jecxz
xchg
lods
jbe
(bad)
fimul
add
sti
mov
push
scas
jbe
jge
jbe
loop
popa
xor
mov
push
mov
or
ja
ja
mov
xor
shl
add
xor
test
push
or
lods
push
mov
iret
xchg
pusha
cmp
mov
sti
push
dec
jb
fmul
add
int3
add
mov
dec
mov
or
add
fwait
mov
add
cdq
addr16
fadd
xor
ror
rcl
ds
jne
add
(bad)
stos
fimul
push
add
icebp
mov
push
mov
sbb
lods
jbe
cmp
push
mov
adc
jg
jle
(bad)
push
add
or
popa
sub
ds
cwde
addr16
add
(bad)
ficom
fimul
adc
pop
mov
dec
fcomi
ficom
sbb
lods
jbe
cmp
nop
fdivr
test
add
in
mov
repnz
fistp
push
(bad)
icebp
mov
push
cld
or
test
mov
xor
mov
mov
popa
ja
mov
out
cmp
sar
mov
cwde
push
mov
sbb
int3
shl
lock
xchg
retf
xor
mov
(bad)
movs
outs
mov
add
icebp
mov
push
or
sbb
xor
mov
push
push
dec
jne
push
xor
sbb
int3
fdiv
jecxz
ja
or
xchg
add
add
popa
xor
mov
mov
int3
into
je
(bad)
mov
xchg
pop
add
or
jbe
cli
mov
or
fwait
adc
outs
aaa
nop
fdivr
lock
cmp
aas
dec
push
test
es
jge
add
sti
push
dec
jb
fidiv
push
fimul
mov
add
test
cmp
fcom
sar
in
mov
sti
push
dec
jb
shl
jae
sar
mov
add
lods
mov
adc
iret
sti
push
dec
jb
fidiv
push
fimul
inc
jbe
cmp
not
leave
fistp
test
mov
in
je
in
jne
in
icebp
sbb
and
in
aas
dec
add
into
aas
dec
call
dec
or
mov
push
mov
add
icebp
mov
and
xchg
xchg
imul
sub
mov
bound
mov
fisubr
add
ss
call
xor
lods
mov
adc
iret
add
jecxz
xchg
push
jecxz
push
enter
fimul
mov
push
mov
aad
xor
push
mov
jg
out
(bad)
push
xchg
(bad)
aam
xor
out
mov
(bad)
fmul
dec
ja
add
(bad)
push
jbe
cli
xchg
retf
xor
fwait
pusha
(bad)
push
jecxz
ja
mov
in
xor
push
popa
loope
push
mov
ds
lods
iret
sti
push
dec
jb
fidiv
sbb
int3
int3
ja
jecxz
test
in
add
sbb
fimul
adc
add
icebp
mov
js
xor
jbe
jge
add
aaa
nop
fdivr
call
arpl
in
movs
xor
push
or
sbb
(bad)
jp
add
mov
add
dec
iret
sti
push
dec
jb
shr
add
dec
(bad)
push
or
mov
scas
ja
add
mov
arpl
iret
add
xor
pop
stos
ja
add
mov
lods
jbe
scas
cmp
int3
add
push
js
mov
sti
push
dec
jb
ror
mov
mov
add
jbe
cli
mov
xor
dec
jecxz
xchg
push
add
or
lods
push
jo
xor
shl
leave
push
mov
in
mov
adc
mov
call
xor
adc
mov
dec
(bad)
jp
add
xor
movs
outs
mov
add
dec
outs
mov
fisubr
inc
mov
push
test
xor
add
addr16
xor
or
xchg
xchg
xor
shl
jo
es
iret
sti
push
dec
jb
add
add
inc
jne
jno
cmp
dec
mov
inc
lods
jbe
jge
cmp
jge
push
xor
lods
sar
jbe
xchg
je
push
push
mov
(bad)
lea
int3
enter
bnd
jno
(bad)
cmp
(bad)
push
add
and
xor
add
(bad)
bound
pop
sbb
xor
fdivp
shl
test
mov
push
mov
pop
lods
mov
adc
xor
ss
mov
add
add
iret
add
dec
mov
int3
lods
jbe
ja
add
ror
enter
xor
lods
or
out
fimul
lods
adc
dec
mov
call
mov
mov
adc
add
dec
cmp
xchg
pusha
jmp
sti
push
dec
jb
fmul
enter
bnd
jno
mov
push
mov
mov
cmp
lods
or
mul
fst
mov
jne
jno
cmp
dec
mov
test
dec
xlat
cld
fdiv
or
jg
jno
loopne
mov
div
or
bnd
int
test
mov
pop
aas
jae
adc
jne
shl
(bad)
shr
movs
xor
push
dec
jne
push
mov
(bad)
mov
je
add
add
fimul
stos
dec
int
mov
push
int3
xor
mov
stos
adc
(bad)
push
fcmovu
mov
jbe
ja
add
add
add
bnd
dec
sti
push
dec
jb
shl
or
daa
test
(bad)
push
cld
xor
xchg
bound
in
jno
or
add
scas
add
fdivr
mov
xor
adc
aaa
add
inc
jge
mov
cmp
div
daa
or
jge
mov
imul
xor
shl
cmp
daa
or
jge
mov
cmp
aaa
mov
push
mov
mov
xchg
mov
push
je
xor
lods
mov
adc
add
mov
mov
or
outs
mov
mov
pusha
lods
add
aaa
retf
mov
mov
add
jbe
add
icebp
mov
mov
push
mov
push
mov
(bad)
pop
ds
add
jl
mov
js
mov
jne
icebp
mov
(bad)
fidivr
push
fimul
sti
push
dec
jb
cmp
xor
push
fxch
mov
mov
ds
test
dec
adc
pusha
add
pop
mov
lods
jbe
cmp
lock
push
add
iret
mov
jbe
idiv
xor
arpl
cli
xchg
retf
xor
mov
xchg
sub
ins
test
lods
or
out
jmp
inc
(bad)
push
jle
ja
jno
cmp
jo
sub
ficom
mov
add
icebp
mov
das
fxch
mov
jecxz
test
lods
or
out
xchg
int3
int3
out
push
mov
jae
jne
ja
mov
and
fcom
ror
mov
lods
std
aam
mov
jbe
cli
xchg
retf
xor
in
cmps
(bad)
push
mov
pop
or
(bad)
fimul
dec
mov
iret
dec
retf
mov
(bad)
cmp
addr16
out
jge
add
dec
and
xchg
bound
ja
jle
ja
jno
cmp
imul
fdivr
lods
add
aas
inc
ja
mov
call
sbb
int3
enter
inc
test
mov
add
icebp
mov
push
mov
test
jno
add
mov
mov
movs
xor
bound
test
push
retf
shl
mov
and
mov
mov
(bad)
fmul
mov
test
daa
retf
add
xor
xchg
retf
xor
mov
ja
(bad)
sub
dec
inc
fsubr
xor
push
(bad)
pop
cmps
jbe
jge
test
mov
leave
jle
mov
or
mov
push
cld
sbb
lods
sar
ds
iret
mov
inc
repnz
jbe
cmp
inc
cli
mov
add
xlat
stos
add
test
stos
int
lods
rol
ds
movs
xor
or
imul
lea
stos
fisubr
dec
fisub
in
fsubr
sub
enter
test
push
or
(bad)
cmp
fdivr
ror
jb
xor
mov
cmp
mov
jbe
mov
ja
jns
dec
push
and
fdivr
mov
ja
out
mov
jae
gs
add
mov
mov
lods
mov
fdivr
mov
not
xor
push
movs
outs
mov
iret
xchg
leave
fld
push
mov
add
icebp
mov
mov
jne
fimul
sti
pop
dec
jb
push
add
iret
stos
add
cwde
xchg
int3
into
(bad)
push
bound
icebp
in
into
xchg
xchg
sub
or
push
pop
jo
push
std
aas
cwde
lods
int3
into
icebp
in
into
ret
push
mov
(bad)
das
push
mov
cmps
cmp
(bad)
push
std
cmp
jbe
test
mov
ja
mov
ja
dec
jne
inc
mov
(bad)
fmulp
fsubr
cmp
(bad)
push
mov
mov
push
xor
mov
add
jg
out
arpl
push
or
add
cmp
sti
push
dec
jb
pop
ds
cmp
(bad)
push
mov
mov
lods
loopne
pop
push
mov
ja
pushf
add
adc
pop
test
xor
mov
mov
ins
leave
xor
or
(bad)
fimul
push
bound
cmp
popa
mov
mov
in
jbe
mov
push
mov
mov
fdiv
add
out
mov
movs
mov
mov
or
iret
sti
push
dec
jb
sar
(bad)
push
mov
push
adc
xchg
mov
aas
adc
xor
mov
or
push
xor
xor
ror
add
icebp
mov
jb
xor
jne
xchg
push
jecxz
xchg
pop
leave
jo
cmp
mov
push
add
ja
mov
fcom
ror
icebp
mov
stos
add
xchg
push
popa
jmp
jle
xor
pop
lods
mov
adc
mov
icebp
in
cmp
adc
gs
or
out
fistp
rcl
inc
mov
adc
xor
mov
or
(bad)
shr
jge
imul
sub
jno
push
mov
(bad)
jmp
pop
(bad)
push
jle
ja
jne
aas
xchg
mov
js
mov
push
mov
pop
push
(bad)
(bad)
pop
aas
xor
not
mov
ret
lods
mov
(bad)
pop
push
dec
cld
push
mov
fcmovbe
test
cmp
mov
push
jbe
push
retf
xor
xchg
or
ficomp
mov
imul
push
sub
js
push
mov
(bad)
adc
(bad)
pop
or
cld
push
mov
sti
push
(bad)
(bad)
push
std
cmp
(bad)
push
mov
lods
mov
sbb
xor
mov
jbe
pop
int3
enter
mov
(bad)
lods
mov
mov
aaa
iret
xchg
pusha
jbe
push
mov
(bad)
rol
pop
push
(bad)
(bad)
icebp
gs
mov
lods
jbe
sti
mov
aaa
iret
xchg
pusha
sub
push
mov
aas
rol
pop
inc
jbe
add
mov
mov
pop
stos
mov
(bad)
fiadd
fimul
xrelease
xor
mov
pop
mov
iret
add
mov
mov
pop
lahf
mov
(bad)
fiadd
fimul
xrelease
xor
cld
push
mov
pop
jmp
mov
push
mov
xor
fiadd
fimul
xrelease
xor
cld
push
mov
jg
mov
mov
sti
(bad)
dec
jb
lods
mov
icebp
fdiv
(bad)
rol
pop
pop
mov
(bad)
repnz
mov
pop
int3
enter
in
(bad)
movs
push
icebp
jle
sbb
fstp
push
mov
pop
sub
jno
ror
call
scas
mov
push
mov
call
dec
mov
push
mov
call
scas
mov
push
mov
sti
(bad)
dec
jb
ror
pop
icebp
mov
(bad)
shl
in
mov
(bad)
push
pusha
mov
ds
or
(bad)
dec
fiadd
adc
sub
pop
aas
xor
not
or
lods
mov
xchg
retf
xor
ror
or
adc
dec
jb
rol
adc
xchg
retf
xor
adc
jno
mov
push
jno
jmp
data16
push
jle
ja
popa
mov
jno
mov
pop
mov
xor
shl
lods
push
mov
sti
(bad)
dec
jb
movs
mov
xlat
dec
xor
push
add
mov
repz
xor
mov
xchg
xchg
sub
jbe
xor
push
add
pop
aas
xor
jge
mov
mov
push
mov
jp
mov
(bad)
shl
(bad)
mov
mov
jno
sar
mov
aas
dec
push
jle
jle
mov
mov
call
sti
mov
jno
shl
mov
dec
or
bound
jg
mov
or
cld
mov
lea
rol
ja
mov
ja
add
mov
fmul
xor
in
inc
jne
mov
or
hlt
(bad)
sti
test
stc
ror
jg
js
(bad)
push
or
(bad)
mov
add
je
add
stos
or
(bad)
lods
mov
adc
xchg
push
cs
popa
dec
mov
fwait
jle
ja
jge
aas
shr
adc
fcomp
(bad)
fisttp
xor
push
popa
dec
mov
adc
jno
and
sti
(bad)
dec
jb
fidivr
lock
push
mov
mov
aas
or
add
scas
add
into
dec
jg
and
push
jbe
push
retf
xor
mov
add
xchg
lock
jb
add
mov
jg
pop
and
push
loope
cmp
mov
xor
xor
lock
cmp
mov
add
xor
lock
cmp
mov
adc
xor
lock
or
pop
adc
mov
mov
mov
call
jle
mov
lods
add
fs
ja
adc
adc
xor
and
inc
xor
jne
dec
mov
(bad)
ficom
sbb
nop
or
push
add
push
fcmove
sar
jge
(bad)
push
mov
or
dec
mov
stos
mov
sti
(bad)
dec
jb
shr
loopne
ficom
fimul
fwait
xchg
xor
push
dec
jne
push
mov
(bad)
shl
mov
push
dec
jb
fcmove
rol
push
sbb
jne
push
mov
(bad)
ficom
sbb
nop
dec
jne
push
mov
(bad)
shr
mov
ficom
sbb
nop
add
inc
fdivrp
loopne
push
mov
(bad)
mov
fstp
push
(bad)
xor
ins
pusha
add
mov
mov
(bad)
sbb
nop
add
bound
jecxz
jae
sub
xor
ins
fsubr
mov
jae
sub
es
pop
(bad)
mov
jbe
push
retf
xor
mov
cmp
aam
and
xor
ror
mov
mov
in
push
mov
sti
(bad)
dec
jb
fmulp
fsubr
push
ins
pusha
add
mov
sbb
mov
or
dec
outs
mov
fisubr
ja
jne
in
stc
push
(bad)
in
jmp
push
test
out
fcmovb
enter
xor
add
fcom
add
push
add
push
cmp
pop
add
scas
mov
mov
add
fcmove
ror
ss
mov
add
fimul
ja
mov
ja
jbe
push
retf
xor
sbb
adc
xor
or
rep
fisubr
pop
fisub
fdivr
cmp
test
sti
(bad)
dec
jb
bound
dec
push
mov
add
xor
mov
mov
xchg
push
mov
mov
xchg
push
mov
mov
xchg
push
mov
icebp
xlat
xor
push
add
fmulp
xor
fstp
idiv
push
jbe
dec
push
mov
adc
or
or
(bad)
push
mov
jmp
xor
push
add
jge
mov
dec
inc
lahf
or
repnz
icebp
in
es
xchg
cld
pop
ja
or
cli
pop
aas
xor
outs
popa
xor
push
cld
outs
icebp
in
iret
xchg
xchg
xchg
mov
sub
iret
xchg
sbb
pusha
push
adc
xor
fcmove
enter
mov
in
push
mov
jge
lea
cs
int3
enter
mov
out
fmulp
xor
push
jno
push
push
add
ficomp
xor
lods
loop
jmp
xor
daa
xchg
leave
lods
jbe
add
lock
push
cld
fs
shl
fidiv
push
push
or
push
cld
jo
stos
or
std
shl
mov
icebp
in
ss
and
in
mov
(bad)
daa
cmp
outs
(bad)
adc
inc
add
std
push
cdq
mov
adc
or
stc
fimul
xor
mov
mov
add
mov
mov
cld
es
push
shl
jle
(bad)
xor
mov
mov
fidiv
push
push
xchg
(bad)
push
mov
pusha
xor
push
cld
pop
jge
jbe
stos
inc
add
in
push
mov
jge
lea
cs
push
mov
push
add
fmul
and
mov
cli
fcomp
enter
xor
push
mov
lods
fidiv
jle
(bad)
xor
mov
mov
fidiv
push
push
or
push
cld
add
or
cli
pop
aas
xor
outs
mov
lock
ja
(bad)
push
std
aaa
ret
lods
mov
(bad)
es
fcomp
push
cdq
mov
add
arpl
push
pushf
xor
push
mov
lods
mov
push
xchg
mov
push
add
jge
test
add
xor
jne
sbb
stc
shl
ja
lods
popa
xor
push
inc
jg
popa
xor
push
cli
and
mov
dec
inc
es
or
hlt
lods
mov
push
cdq
icebp
sbb
add
mov
push
mov
push
or
add
jbe
push
retf
xor
in
das
ret
mov
scas
or
mov
push
add
ds
mov
fstp
iret
mov
adc
fcom
fisttp
xor
add
fidivr
and
pop
mov
cs
les
xchg
xor
jge
out
push
xchg
xor
push
sti
mov
or
push
sbb
fidiv
and
pop
mov
push
add
xchg
lea
pop
fmulp
cs
fcomp
enter
xor
jge
jbe
push
(bad)
cs
push
pop
mov
push
add
xchg
mov
ja
mov
(bad)
push
mov
pop
aas
gs
xchg
imul
addr16
fdiv
adc
iret
jge
test
or
stos
fisubr
jbe
xor
push
fbld
xchg
add
jbe
push
clc
push
(bad)
outs
mov
(bad)
sar
aaa
cmp
push
add
iret
add
xor
jle
push
add
mov
mov
mov
adc
lea
daa
call
lods
or
mov
cld
xor
mov
sbb
and
cmp
fwait
inc
jb
add
mov
mov
add
lea
icebp
in
ret
adc
cmp
cmp
dec
sar
ficomp
and
mov
push
popa
std
mov
mov
add
lea
jle
jp
add
fild
lods
loop
loopne
mov
nop
fwait
retf
xor
pop
or
add
iret
add
xchg
iretw
add
pushf
rol
adc
push
xchg
add
pushf
sar
mov
add
mov
mov
iret
add
mov
push
mov
push
popa
jo
add
or
and
jb
fcomp
and
es
mov
mov
mov
mov
bound
xchg
push
cdq
xor
add
mov
mov
aas
mov
mov
add
xor
push
jbe
sub
or
and
xor
lods
mov
mov
pusha
mov
add
fild
lods
jbe
mov
push
inc
jae
add
dec
cmp
push
jne
ds
jmp
pop
rcl
add
lods
jle
jbe
adc
mov
cld
xchg
imul
push
jne
retf
(bad)
cli
push
jbe
mov
mov
push
lea
(bad)
and
lods
mov
(bad)
and
and
push
add
adc
inc
mov
jg
mov
(bad)
push
inc
in
test
or
adc
mov
add
iret
(bad)
push
mov
adc
iret
add
xor
out
out
add
fnstcw
in
ret
adc
and
mov
sbb
adc
iret
add
movs
or
mov
aas
mov
xor
fiadd
iret
jne
jge
add
icebp
pop
push
dec
sar
push
(bad)
int3
call
or
adc
iret
add
xor
and
iret
sti
(bad)
dec
jb
shl
and
fidiv
adc
xor
sub
add
or
push
mov
add
dec
dec
std
push
add
jne
sub
add
iret
jge
xchg
xor
fimul
and
iret
add
sbb
and
mov
jnp
push
iret
add
or
and
iret
add
xchg
mov
add
jbe
and
xor
fmul
and
iret
add
retf
xchg
push
iret
add
or
and
iret
add
xor
and
xor
push
test
test
lods
jbe
adc
fstp
add
test
call
movs
push
mov
adc
xchg
retf
xor
in
ret
adc
mov
aad
pop
out
add
jno
pop
aas
movs
or
mov
mov
mov
mov
cdq
xor
add
lea
mov
add
aas
jnp
mov
(bad)
shl
cmp
pop
or
mov
add
ret
mov
xchg
jp
mov
(bad)
mov
add
jne
mov
(bad)
push
mov
cld
push
add
cmp
sub
add
iret
add
test
mov
ja
shl
mov
mov
mov
sar
mov
push
cld
and
mov
mov
mov
sar
mov
push
std
cmp
(bad)
dec
jb
pop
aas
movs
pop
lea
aas
mov
mov
add
iret
call
ret
mov
lahf
mov
(bad)
push
or
add
int
cli
fimul
and
fcomi
fmul
adc
mov
(bad)
out
add
out
add
out
add
and
cmp
ret
xor
push
mov
shl
xor
es
mov
outs
mov
(bad)
push
mov
shl
xor
xor
push
mov
(bad)
clc
icebp
in
xchg
and
mov
pop
mov
aas
mov
mov
cmp
and
iret
add
or
repnz
and
xchg
or
les
lods
jbe
sbb
add
aas
mov
mov
fmul
iret
ja
cwde
iret
jnp
iretw
add
xor
adc
inc
lods
mov
scas
jbe
jle
jp
add
fild
lods
loop
loopne
mov
nop
fwait
retf
xor
pop
or
add
or
stos
fisubr
add
jne
xor
inc
cmp
or
lods
and
xor
push
sbb
xchg
lods
mov
xor
mov
int3
int3
icebp
in
cmp
push
cdq
inc
mov
(bad)
dec
jb
pop
ds
cmp
jge
mov
adc
xchg
shr
xor
fidiv
sbb
int3
enter
stc
cmp
add
mov
mov
seto
or
iret
sti
(bad)
dec
jb
pop
ds
cmp
add
and
adc
xor
jne
sti
(bad)
dec
jb
pop
ds
cmp
jge
mov
mov
mov
mov
xchg
xchg
lea
call
xor
pop
loop
jmp
xor
fidiv
push
fimul
aaa
nop
fdivr
test
fcmove
cmp
mov
sbb
int3
enter
xor
jge
(bad)
cli
mov
jmp
xor
push
bound
stos
mov
ja
out
mov
adc
enter
dec
nop
mov
push
jno
cmp
pop
aaa
(bad)
push
jecxz
xchg
inc
push
mov
or
repnz
int3
scas
cmp
gs
push
popa
or
jmp
xor
les
(bad)
movs
outs
mov
xchg
push
popa
lds
dec
nop
mov
lods
mov
push
dec
nop
mov
push
add
jge
xchg
test
ins
cmps
adc
div
push
sbb
iret
pop
xlat
mov
(bad)
jmp
xor
push
jle
ja
jne
ret
inc
mov
shl
xor
daa
in
iret
sti
(bad)
dec
jb
fidivr
sbb
int3
enter
and
push
mov
sbb
int3
les
mov
mov
mov
loop
mov
inc
inc
mov
(bad)
movs
outs
mov
sti
inc
push
mov
xor
push
mov
sbb
int3
fdivr
mov
adc
shl
and
push
mov
sbb
int3
fdivr
mov
mov
mov
mov
sar
iret
add
pop
(bad)
cmp
push
mov
mov
pop
or
test
(bad)
cli
mov
push
mov
(bad)
push
or
sub
xchg
push
jbe
out
retf
xor
lock
(bad)
lods
mov
fcomp
cmp
sbb
outs
aaa
nop
fdivr
lods
add
push
js
stos
mov
ja
or
shl
sbb
ss
push
jecxz
push
test
xor
lock
cli
mov
stos
add
cwde
xchg
int3
fdivr
push
xchg
inc
popa
push
xchg
push
mov
adc
in
sar
dec
or
out
fmulp
fsubr
adc
xor
lods
mov
fsub
push
ins
cmp
daa
xchg
idiv
xchg
sub
push
xor
mov
(bad)
sbb
int3
in
ja
popa
push
add
xor
push
dec
nop
mov
mov
or
in
mov
add
lock
add
cli
cdq
retf
xor
enter
fimul
add
into
(bad)
push
bound
xchg
xchg
popf
mov
push
cdq
inc
mov
shl
xor
daa
call
xor
ds
shl
add
xor
es
pushw
xor
xor
fidiv
sbb
int3
in
ja
bound
xchg
xchg
popf
mov
mov
push
mov
sbb
int3
in
ja
out
mov
cmp
cwde
fimul
xor
push
sbb
jne
add
xor
in
into
xchg
xchg
popf
mov
mov
or
xor
out
inc
popa
test
int3
lods
jbe
jg
dec
dec
(bad)
push
(bad)
outs
movs
call
mov
fbld
es
pop
jg
ins
jg
xor
(bad)
push
jbe
push
retf
xor
int3
stos
scas
mov
or
bnd
es
push
jle
ja
sbb
cwde
(bad)
lods
mov
leave
or
add
or
push
cld
leave
scas
(bad)
stos
lods
mov
add
xlat
stos
add
xchg
push
loope
or
mov
call
mov
(bad)
push
cld
cmp
jbe
add
or
push
cld
inc
xchg
push
loope
push
adc
fadd
call
test
es
jge
jbe
mov
stos
jle
ja
sbb
mov
inc
xchg
out
add
fstp
push
add
ja
dec
push
ja
push
or
sar
cmp
xor
add
jbe
cmp
repnz
fcmovu
into
adc
lods
mov
adc
lods
add
out
add
fstp
push
add
ja
dec
push
ja
push
or
shl
mov
xor
add
jbe
cmp
repnz
fcmovu
into
icebp
in
into
jle
(bad)
pop
mov
iret
mov
jbe
push
retf
xor
mov
and
iret
add
dec
cmp
xchg
out
mov
mov
push
mov
jno
sbb
add
or
lds
xor
in
into
cmp
xor
in
test
lods
jbe
(bad)
daa
leave
aas
dec
push
adc
push
nop
out
dec
add
fidiv
sbb
int3
mov
outs
push
std
das
xchg
push
add
outs
add
jmp
hlt
repnz
ds
xchg
lea
(bad)
fidiv
push
fimul
sti
(bad)
dec
jb
add
mov
push
fimul
and
lods
jbe
adc
stos
add
add
lock
fmul
imul
fdivr
clc
push
popa
sbb
test
xor
xchg
clc
mov
jnp
jb
add
dec
iret
sti
(bad)
dec
jb
ficom
fimul
cmp
jnp
add
shl
adc
repz
cmp
add
cdq
retf
xor
mov
(bad)
mov
jg
add
iret
add
call
jge
gs
add
js
lods
dec
mov
lods
ja
call
xor
stc
xor
movs
push
jnp
jb
add
dec
mov
add
loope
cwde
push
or
push
and
xor
lods
mov
mov
rcr
cmp
(bad)
push
add
add
cmp
arpl
cdq
push
mov
add
add
jge
jno
add
cmp
in
cmp
mov
rcr
mov
add
xlat
mov
repz
jno
add
xor
fmul
add
je
xor
push
mov
iret
pop
(bad)
push
cld
and
dec
adc
iret
add
jecxz
push
sbb
xor
lods
mov
pop
or
push
xchg
jge
cdq
iret
mov
add
push
test
iret
jge
jbe
jle
mov
mov
ja
inc
fs
(bad)
movs
push
jnp
jb
add
or
add
lods
cmp
add
jb
add
add
add
pop
(bad)
push
or
repnz
add
jbe
add
xor
scas
jbe
icebp
xlat
sub
(bad)
push
add
or
fwait
jbe
jle
mov
mov
ja
ja
mov
test
lods
ja
jae
jp
add
into
add
popa
dec
xchg
push
mov
push
lods
ja
cmp
mov
add
int3
into
(bad)
push
bound
icebp
in
into
ja
mov
je
pushf
les
scas
jbe
push
jp
add
xchg
mov
pop
dec
sub
push
mov
dec
(bad)
jnp
add
iret
mov
add
pop
mov
mov
cmp
mov
ja
sbb
call
jg
pop
aaa
(bad)
push
xchg
jne
cmp
push
je
iret
add
jecxz
push
mov
push
xor
fimul
stc
lods
jbe
push
movs
out
xor
fdiv
cmp
cmp
add
xor
push
out
idiv
inc
xchg
sti
lods
jbe
add
sbb
iret
cwde
lods
int3
into
icebp
in
into
(bad)
iret
add
aas
(bad)
push
out
idiv
inc
xchg
sti
cmps
jbe
add
sbb
iret
cwde
lods
int3
into
icebp
in
into
icebp
in
mov
jbe
cs
push
push
cmp
ja
(bad)
mov
ja
dec
(bad)
jg
add
mov
retf
add
or
iret
cwde
lods
int3
into
icebp
in
into
(bad)
iret
add
mov
jbe
jnp
jbe
add
or
add
push
jnp
jb
add
dec
push
cmp
jg
add
iret
add
into
add
xor
fimul
add
aas
iret
add
dec
cmp
lods
jbe
(bad)
daa
xor
push
std
xor
(bad)
lods
mov
mov
xchg
add
loope
push
adc
into
add
popa
aad
lods
jbe
cmp
iret
add
aas
jp
mov
(bad)
pop
aas
mov
lods
ja
scas
cmp
sar
iret
scas
mov
or
repnz
jbe
(bad)
push
cld
pop
cwde
fmul
add
ja
fistp
add
or
loope
mov
add
xchg
movs
jbe
add
enter
or
das
inc
aas
dec
(bad)
jg
add
iret
cwde
fimul
add
jbe
inc
push
xor
movs
push
jnp
jb
add
dec
mov
mov
pusha
(bad)
lods
jbe
sti
(bad)
dec
jb
xchg
or
add
xor
or
je
not
jp
add
into
add
or
add
(bad)
jp
add
xor
jbe
add
iret
jge
test
add
jo
(bad)
push
jle
ja
sbb
repz
in
into
ret
lods
jbe
(bad)
pop
or
aas
dec
(bad)
jp
add
jb
fimul
add
cmp
cmp
xchg
out
mov
add
(bad)
(bad)
std
push
mov
dec
(bad)
jge
add
inc
repz
add
jge
add
into
add
ja
(bad)
pop
ds
fiadd
iret
jge
jbe
jle
mov
mov
mov
in
into
jae
mov
add
xor
add
jp
add
xor
test
cmp
lods
je
icebp
in
les
lods
jbe
dec
push
ja
xor
int
push
je
icebp
in
les
lods
jbe
jnp
jbe
add
xchg
dec
(bad)
jge
add
into
add
mov
lods
ja
(bad)
jmp
pop
(bad)
push
jle
ja
sbb
add
add
pop
popf
ja
add
xor
add
xlat
xor
add
jb
fimul
add
cmp
add
dec
cmp
xchg
out
mov
add
dec
mov
push
mov
dec
(bad)
jge
add
inc
icebp
pop
ds
lods
ja
cmp
mov
add
jbe
add
or
push
cld
leave
ja
jno
add
xor
jno
add
iret
add
retf
popa
xor
cmp
sar
iret
scas
mov
or
out
dec
push
ja
ja
(bad)
pop
mov
or
jae
ja
xchg
add
inc
iret
xor
(bad)
jmp
ds
fstp
iret
jbe
mov
add
ja
dec
push
ja
imul
loopne
mov
xor
fimul
add
cmp
add
dec
cmp
xchg
out
mov
iret
mov
repz
in
into
ret
lods
jbe
(bad)
daa
in
pop
(bad)
cmp
xchg
lods
jbe
add
popa
xchg
dec
lods
jbe
cmp
idiv
mov
out
jge
add
mov
test
iret
ja
bound
icebp
in
into
icebp
in
les
lods
jbe
aas
push
pop
mov
add
into
add
ds
fcomp
add
cmc
loopne
push
loope
push
adc
into
add
popa
jne
lods
jbe
cmp
neg
xchg
fdiv
(bad)
movs
push
jnp
jb
add
dec
aas
dec
push
ja
add
iret
mov
addr16
(bad)
pop
ds
fimul
iret
scas
mov
or
repnz
cmp
mov
add
jp
ret
fcmovnu
pop
ds
pop
movs
or
loope
mov
add
xchg
lods
ja
mov
fiadd
add
leave
mov
push
mov
fimul
add
dec
jb
cmp
into
add
add
lods
jne
scas
mov
or
repnz
sbb
test
jb
add
dec
idiv
jbe
add
xor
fimul
add
cmp
add
dec
cmp
lods
jbe
(bad)
daa
xchg
pop
(bad)
cmp
ret
add
add
add
xchg
or
iret
(bad)
cmp
xor
jbe
add
iret
jge
test
mov
mov
lods
jne
call
xor
out
iret
add
iret
scas
fimul
add
(bad)
jbe
add
sub
lods
jbe
cmp
mov
lods
jne
jge
jbe
sti
shl
mov
or
add
sahf
pop
outs
push
mov
jae
jbe
add
enter
mov
pop
or
stos
adc
iret
add
xor
push
add
add
cmp
or
aas
dec
adc
iret
add
jecxz
push
sbb
xor
ficom
fimul
sti
(bad)
dec
jb
shl
add
or
xor
push
retf
add
into
add
popa
popa
dec
lods
jbe
cmp
mov
lods
ja
ja
jle
ja
or
add
add
jae
push
retf
add
or
push
cld
leave
jae
jbe
add
iret
jle
mov
cmp
push
retf
add
xchg
jbe
add
or
repnz
lods
leave
mov
push
mov
fimul
cmp
lea
lods
ja
ja
mov
ja
add
and
jbe
jle
mov
mov
ja
std
out
iret
add
clc
add
jns
(bad)
fidiv
push
(bad)
in
xor
ror
add
lock
push
jecxz
push
pusha
xlat
xor
fdiv
cmp
lea
cmp
lods
jne
cld
push
xchg
add
popa
lea
xor
jne
jne
popa
iret
add
iret
xchg
inc
add
lods
jne
scas
fmul
cmp
and
xor
jno
add
iret
(bad)
daa
lds
push
mov
jae
jbe
add
push
clc
push
mov
jmp
push
sbb
jne
pop
ds
add
adc
xor
adc
(bad)
ficom
sbb
test
jb
add
dec
mov
mov
cld
push
mov
mov
repz
push
retf
add
adc
or
push
cld
leave
xchg
push
fnstcw
add
dec
imul
xor
fimul
add
shl
add
xor
outs
mov
cmp
aaa
popa
cmp
push
bound
add
fstp
lods
cld
cmp
cmp
push
(bad)
push
(bad)
fimul
xor
gs
add
iret
add
mov
cmp
test
mov
lods
leave
mov
push
mov
cmp
retf
add
pop
jbe
push
nop
aad
(bad)
fimul
add
shl
add
iret
push
movs
shl
(bad)
outs
mov
mov
cmps
jbe
xchg
aaa
popa
dec
pushf
push
mov
jg
or
xor
out
iret
add
iret
scas
fmul
cmp
and
xor
and
add
xchg
retf
xor
jbe
jnp
jge
add
mov
fst
aas
jnp
jge
add
in
fcom
xor
outs
mov
fisubr
push
lea
push
dec
aam
inc
fbld
jne
adc
push
mov
sti
(bad)
dec
jb
ficom
fimul
pop
mov
or
(bad)
shr
add
fcom
push
out
idiv
jbe
add
idiv
push
add
add
loope
cwde
push
or
cli
mov
dec
mov
lods
jne
(bad)
lods
mov
mov
rcr
cmp
(bad)
push
add
add
cmp
and
xor
jne
push
or
mov
lods
jne
not
jno
add
iret
mov
jne
pop
ds
add
adc
mov
inc
jbe
(bad)
mov
jbe
push
retf
xor
jne
mov
jne
shl
jne
pop
ds
add
adc
mov
inc
jbe
(bad)
mov
xor
test
fimul
add
hlt
int3
add
(bad)
(bad)
daa
popf
mov
pop
scas
xor
daa
test
(bad)
pop
or
add
xchg
mov
xor
add
add
fcomp
add
jbe
push
retf
xor
mov
(bad)
pop
ds
lods
je
not
mov
iret
lods
bound
je
mov
add
pusha
iret
add
scas
cmc
fdiv
jle
ja
ins
iret
add
lods
bound
je
mov
add
ja
add
iret
add
iret
adc
scas
jbe
add
jae
cmp
or
iret
jbe
pushf
into
add
jne
pop
pop
ds
lods
je
std
push
jne
mov
scas
jbe
add
mov
(bad)
mov
(bad)
fmul
int3
cmp
mov
add
sbb
lea
lods
jne
(bad)
es
pop
(bad)
cmp
sar
iret
scas
mov
or
repnz
jbe
(bad)
push
cld
xor
(bad)
cmp
xor
ja
add
iret
ja
xor
mov
mov
sbb
scas
jbe
cmp
mov
ja
add
iret
jge
xchg
mov
add
jbe
add
inc
stos
outs
jbe
(bad)
push
cld
jge
in
int3
add
ds
lods
je
ja
mov
into
add
je
add
iret
add
dec
es
ds
lods
je
std
push
jne
ja
jne
add
mov
sub
xor
ficom
fimul
mov
je
scas
fimul
push
and
xor
lods
cld
int3
jae
je
add
xor
push
sbb
xor
fimul
push
enter
ror
ret
lods
jbe
(bad)
sar
jnp
jbe
add
dec
pop
(bad)
lods
cld
int3
jae
ja
add
add
lods
shl
(bad)
fimul
add
cld
es
push
mov
cmp
mov
out
add
pop
ds
add
adc
jbe
xchg
push
popa
cmp
rol
mov
lods
ja
scas
mov
or
repnz
cmp
shl
add
inc
jmp
inc
xor
push
add
outs
mov
dec
clc
adc
dec
add
bound
jp
je
add
or
push
dec
mov
scas
jbe
add
call
jae
mov
add
xlat
xor
fimul
add
sar
iret
scas
mov
add
jg
and
(bad)
push
jecxz
xchg
and
(bad)
fimul
add
and
add
dec
sub
(bad)
gs
add
xor
lods
jne
jne
jne
add
pop
mov
push
add
adc
lods
jne
jne
jne
imul
mov
push
add
add
lock
mov
ja
imul
jne
jne
jnp
jbe
add
mov
mov
je
scas
fmul
cmp
arpl
test
mov
jno
mov
aad
push
mov
mov
push
push
cmp
xor
or
jne
jne
jnp
jbe
add
add
fcmove
cmp
push
sbb
lods
add
ins
mov
or
jne
ja
(bad)
outs
movs
call
test
push
cdq
push
ja
cdq
(bad)
fnstenv
pop
ins
jg
sbb
xor
cwde
shl
and
cld
ds
jmp
jb
add
mov
iret
stos
add
cwde
shl
and
cld
ds
pop
data16
add
mov
jge
jbe
jle
mov
mov
add
lods
mov
xor
cmp
push
(bad)
outs
movs
push
dec
gs
or
jmp
mov
in
push
jg
fs
push
or
push
push
mov
jae
outs
fidivr
add
ja
popa
fldenv
push
jmp
scas
fimul
adc
jae
aas
stos
xchg
sbb
pop
imul
jae
imul
push
fimul
mov
mov
xchg
mov
cdq
popa
ja
jle
aas
test
mov
mov
jbe
mov
add
mov
mov
jbe
(bad)
mov
add
or
or
add
iret
add
mov
add
jb
cmp
push
add
add
mov
jecxz
xchg
push
jecxz
xchg
push
jecxz
xchg
push
mov
mov
lods
jbe
push
pop
shl
(bad)
fimul
add
icebp
and
mov
js
xor
fidivr
push
fimul
(bad)
fimul
add
xor
cmp
test
scas
jbe
push
(bad)
shl
(bad)
lods
cmp
add
xor
push
sbb
pop
cmp
jbe
add
xor
push
jp
push
add
add
cmp
mov
lods
jbe
scas
cmp
je
push
mov
sti
(bad)
dec
jb
cmp
fidivr
mov
add
loope
(bad)
push
or
fst
xor
mov
pop
stos
mov
addr16
cmp
cmp
push
mov
movs
call
repnz
addr16
popf
(bad)
jecxz
stc
push
jg
mov
(bad)
push
jbe
push
retf
xor
mov
ja
or
push
add
push
add
xchg
ins
mov
(bad)
cmp
iret
mov
inc
idiv
add
jmp
or
add
or
push
cld
leave
ja
jno
mov
mov
mov
inc
add
add
or
les
jbe
add
(bad)
outs
movs
call
lods
add
ss
fwait
add
mov
mov
jne
fimul
int3
adc
add
fimul
add
xor
add
or
add
or
push
cld
leave
ja
bound
jle
mov
mov
leave
push
mov
clc
sbb
iret
jmp
outs
mov
fisubr
add
cdq
das
jg
retf
jl
push
add
iret
stos
add
xchg
push
loope
(bad)
push
mov
cmp
xor
xchg
jbe
idiv
add
jge
jbe
cli
bound
(bad)
fidiv
push
fimul
cld
cmp
gs
fmulp
int3
scas
lods
cld
and
test
xchg
fidiv
inc
mov
adc
ja
jle
ja
jno
cmp
stc
cmp
mov
ss
push
ret
jp
mov
jle
mov
xchg
push
jecxz
xchg
push
loope
(bad)
push
or
mov
icebp
test
mov
mov
dec
repnz
std
ss
test
mov
(bad)
sbb
int3
les
mov
xor
push
add
jge
cdq
pusha
xchg
adc
test
mov
or
pop
(bad)
shl
cmp
daa
cmp
mov
lods
cld
shr
out
data16
push
or
push
mov
test
iret
gs
push
add
mov
jno
cmp
imul
fdivr
test
ss
les
mov
(bad)
push
jle
ja
jno
cmp
mov
push
mov
xchg
push
jecxz
xchg
push
loope
(bad)
push
dec
iret
mov
xor
cmp
ja
mov
lock
push
jecxz
test
mov
enter
div
test
mov
es
cmp
scas
(bad)
test
aam
xor
cmp
pop
cld
cmp
fmul
mov
or
int
mov
inc
push
mov
dec
imul
fdivr
lods
add
mov
jg
je
(bad)
push
out
idiv
ss
popa
xor
ins
xor
jnp
retf
popa
outs
jb
jmp
jg
addr16
out
push
cld
ss
xchg
int3
shl
push
add
pop
ds
fcmovne
iret
adc
mov
repz
in
iret
icebp
in
xor
call
gs
lods
mov
shl
fdivr
ficom
fimul
xchg
lods
mov
das
fmul
cmp
in
xor
ja
xlat
ror
xchg
push
mov
dec
push
ja
dec
pop
mov
jge
xchg
xor
push
cld
xor
ds
xor
mov
pop
add
dec
add
loope
push
test
dec
push
add
pop
ds
and
xchg
push
mov
icebp
in
shl
cld
dec
xor
push
mov
sbb
nop
add
fiadd
mov
mov
shl
push
xor
pop
ds
fcomp
cmp
in
xlat
add
cmp
int3
aam
push
test
dec
adc
xchg
ins
mov
mov
push
ins
fcomi
ficom
sbb
nop
(bad)
outs
movs
call
mov
push
xor
cmp
or
(bad)
(bad)
xchg
int3
iret
(bad)
fdivp
aam
data16
mov
push
mov
pop
fmul
enter
bnd
jno
add
xor
mov
(bad)
mov
add
mov
push
mov
(bad)
mov
fcom
push
or
cdq
es
jae
push
jbe
jne
jno
mov
movs
in
clc
ja
dec
mov
or
es
xchg
jmp
cld
ss
jbe
adc
push
or
inc
sti
aam
es
mov
idiv
push
mov
je
xchg
jmp
xchg
jle
jbe
inc
xchg
out
xor
movs
in
enter
mov
mov
push
mov
pop
aas
jae
jbe
xor
push
or
mov
lods
mov
dec
adc
aaa
jge
lea
jae
mov
enter
mov
lods
mov
(bad)
push
xchg
call
mov
jle
jbe
icebp
in
xor
xchg
mov
(bad)
outs
or
(bad)
push
cld
xor
push
jbe
icebp
in
or
mov
jae
imul
jle
jbe
jg
jno
rcl
mov
movs
mov
jl
jbe
add
lahf
mov
or
and
mov
ror
(bad)
hlt
(bad)
ins
mov
ss
mov
pop
aas
xor
ror
mov
lods
mov
dec
push
jbe
mov
ret
sbb
out
adc
jo
ret
xor
out
cmp
mov
outs
ret
std
push
outs
ret
sbb
outs
ret
leave
mov
mov
ret
leave
mov
mov
ret
mov
outs
ret
sbb
outs
ret
xor
adc
jb
ret
xor
fbld
sbb
outs
ret
sbb
outs
ret
or
cli
ret
sbb
outs
ret
cld
fsubr
sbb
outs
ret
out
fnstenv
jne
cmp
ret
sbb
push
mov
dec
sbb
popa
and
xor
int3
inc
mov
ret
sbb
outs
ret
sbb
outs
bound
mov
push
sbb
outs
ret
sbb
sbb
outs
ret
sbb
outs
es
mov
outs
ret
sbb
imul
out
adc
aaa
out
cmp
xor
adc
fbld
sbb
out
adc
mov
outs
ret
sbb
outs
ret
std
bound
sbb
inc
add
outs
ret
sbb
outs
ret
mov
mov
outs
ret
add
outs
ret
sbb
outs
ret
sbb
cmps
ret
sbb
out
cmp
mov
outs
ret
mov
outs
ret
sbb
outs
ret
xor
adc
mov
outs
ret
sbb
inc
add
outs
ret
sbb
outs
ret
mov
mov
outs
ret
add
outs
ret
sbb
outs
ret
sbb
cmps
ret
sbb
fbld
sbb
outs
ret
sbb
outs
ret
call
mov
add
mov
dec
fisub
fmul
cmp
fcmove
cmp
nop
mov
ficom
fimul
sbb
nop
mov
(bad)
(bad)
push
pusha
sar
push
mov
scas
mov
sar
ja
jle
ja
gs
(bad)
es
idiv
mov
add
jmp
dec
(bad)
push
ss
(bad)
push
mov
dec
push
jbe
pop
jp
test
jne
popa
test
jbe
ja
mov
outs
stc
inc
jmp
test
int3
cmp
mov
xchg
jbe
add
pop
aas
xor
outs
imul
push
cld
and
xor
out
pop
aas
jge
jp
mov
fimul
idiv
sbb
(bad)
push
add
or
popa
(bad)
jbe
jne
xor
or
add
pusha
push
xchg
(bad)
(bad)
cmp
mov
scas
mov
or
fcmovu
push
(bad)
sbb
nop
or
clc
xor
ds
sbb
iret
add
gs
or
into
add
addr16
(bad)
cli
fidivr
push
fimul
bound
mov
inc
pop
mov
add
icebp
or
test
pop
dec
mov
mov
jg
cld
xor
push
or
(bad)
test
ds
or
push
pop
mov
jae
imul
stos
jbe
jge
cmp
(bad)
pop
aas
dec
adc
mov
sbb
mov
jmp
out
(bad)
fadd
mov
(bad)
movs
outs
mov
test
xchg
outs
xor
addr16
sbb
mov
sbb
mov
mov
xor
cmp
xor
xlat
outs
jb
push
int3
fsubr
push
or
out
add
mov
mov
shl
(bad)
ficom
mov
mov
xor
inc
or
push
sub
sti
fild
(bad)
push
int3
mov
mov
ja
mov
fcomp
out
shl
nop
push
mov
push
retf
xor
push
adc
mov
and
jbe
mov
ja
push
fdivr
mov
jne
push
aas
dec
lods
add
icebp
in
icebp
sbb
and
outs
sbb
mov
push
mov
scas
push
mov
add
dec
aas
dec
or
ret
iret
outs
jb
fidivr
push
fimul
mov
push
add
std
push
or
mov
add
xchg
jbe
retf
xor
jge
jmp
push
mov
jne
sbb
mov
push
jge
pop
fld
(bad)
push
mov
cmps
sti
jmp
(bad)
fcmove
rcl
jns
jmp
outs
jb
bound
mov
jge
jns
pop
(bad)
outs
jb
push
mov
mov
mov
xor
in
fild
mov
and
rep
jb
fadd
repnz
(bad)
sbb
int3
loopne
xchg
add
std
outs
or
xchg
inc
sbb
sbb
mov
(bad)
fiadd
xor
dec
xchg
es
mov
aam
iret
add
dec
cmp
mov
xor
jecxz
xchg
push
mov
mov
je
xor
fcmove
aam
mov
jecxz
jae
popa
pusha
add
imul
push
mov
add
ins
fadd
sbb
xor
push
fcmovu
inc
pop
mov
iret
xchg
leave
outs
mov
fisubr
in
push
cmp
xor
mov
jno
push
fimul
mov
adc
xor
mov
ja
mov
jne
add
xor
cmp
mov
push
popa
dec
mov
mov
fadd
xor
or
rep
fisubr
in
or
jnp
enter
idiv
or
(bad)
lods
mov
fdivr
sbb
into
(bad)
push
bound
movs
cdq
add
push
xchg
ficom
xor
or
icebp
in
into
xchg
xchg
test
and
add
fdiv
mov
icebp
in
into
xchg
xchg
test
and
jge
cdq
xor
daa
nop
aas
dec
push
ja
ds
xor
fcomp
mov
fsub
lods
int3
into
icebp
in
into
jge
mov
cmp
mov
push
sbb
pop
(bad)
push
or
dec
rep
fisubr
jmp
iret
fwait
add
jge
or
adc
lods
mov
adc
lods
loopne
ficom
xor
or
icebp
in
into
adc
lods
xchg
int3
das
pop
mov
mov
fwait
jbe
cmp
add
test
cmp
popa
aad
test
jns
sbb
int3
enter
inc
test
mov
mov
out
push
std
jle
xchg
int3
into
(bad)
push
bound
icebp
in
into
jle
mov
mov
xchg
pxor
mov
sbb
into
(bad)
nop
cmc
in
jg
mov
(bad)
push
xchg
ret
inc
test
adc
xor
ror
adc
lods
mov
adc
lods
or
paddb
icebp
in
into
cmp
pop
cwde
lods
int3
into
test
push
xchg
or
div
in
into
mov
mov
shl
cmp
push
ja
cmp
xor
push
add
test
pop
or
xlat
mov
jge
or
add
fnstsw
push
mov
xchg
push
jbe
idiv
or
repnz
mov
push
mov
push
rol
xor
fidiv
push
fimul
mov
shl
lods
add
and
jg
xchg
push
(bad)
push
dec
jne
inc
mov
(bad)
sar
(bad)
push
mov
(bad)
fidiv
push
fimul
mov
push
jbe
imul
retf
xor
je
xor
cmp
fadd
adc
cmp
shr
(bad)
(bad)
jmp
adc
push
jle
ja
ins
mov
push
push
mov
scas
mov
add
cwde
fcmovu
ret
add
push
add
cs
xor
jl
xor
ror
repnz
mov
lods
mov
fadd
inc
jecxz
jae
jns
push
in
lds
(bad)
ror
ja
mov
jne
add
cs
xor
mov
xor
fimul
adc
lods
xor
shl
icebp
xlat
add
mov
lods
jbe
cmp
pavgb
ficom
xor
or
push
fimul
mov
cmp
call
xor
pop
xor
add
scas
jbe
mov
cmp
xor
push
loope
adc
mov
jae
xor
fcomp
mov
or
xor
ror
adc
push
mov
xchg
inc
jecxz
jae
jns
push
inc
lds
(bad)
ror
ja
jle
ja
imul
movs
call
not
xor
and
sub
div
add
ror
scas
fimul
add
xor
ror
ja
mov
jne
push
bound
icebp
in
iret
jle
mov
add
xchg
lods
ja
add
jne
push
add
add
jecxz
(bad)
push
xchg
sbb
jb
fimul
add
iret
add
dec
push
ja
jne
add
jb
fimul
add
iret
add
dec
push
ja
jae
add
xor
in
int3
add
into
add
into
add
iret
add
enter
div
jbe
add
gs
mov
add
add
cdq
xor
push
add
jbe
jo
add
div
jbe
add
iret
add
int
inc
popa
cmc
mov
mov
jbe
jno
add
iret
add
pop
lods
jbe
icebp
in
icebp
sbb
(bad)
icebp
in
outs
mov
fisubr
pop
mov
inc
fbld
ret
mov
dec
push
int3
push
mov
or
iret
ja
add
shl
xor
jne
add
pusha
push
pop
jne
add
dec
cmp
xchg
int3
xor
movs
outs
mov
add
dec
mov
add
popa
sbb
jp
jb
add
mov
add
add
ror
scas
mov
jbe
repnz
add
jb
fimul
add
xor
ror
ja
mov
mov
lods
jbe
scas
mov
add
ja
or
call
jb
mov
ret
das
mov
adc
add
xor
cmp
xor
loope
(bad)
push
or
add
popa
in
push
mov
push
fimul
add
jb
mov
jecxz
scas
cmp
ins
imul
xor
mov
ja
bound
stos
mov
xor
push
fstp
mov
jne
add
xor
test
cmp
or
add
xor
cmp
into
add
pop
push
jl
xor
add
mov
or
stos
fisubr
pop
mov
inc
pop
jb
stos
mov
enter
jne
shl
xor
jne
add
pusha
push
div
add
dec
cmp
xchg
fisttp
(bad)
push
add
add
pop
jbe
push
dec
mov
test
iret
add
or
jbe
scas
fmul
cmp
xchg
pusha
push
and
add
into
add
xor
jne
add
xor
xchg
mov
add
mov
add
popa
push
mov
daa
retf
scas
ja
add
loope
adc
mov
add
popa
stc
mov
mov
jmp
jno
add
xor
je
add
mov
xor
adc
xor
retf
xor
or
(bad)
push
or
mov
or
ins
mov
pop
mov
inc
mov
xlat
ja
jge
add
mov
lods
jbe
scas
fmul
cmp
xchg
pusha
push
repz
add
jno
push
fimul
mov
mov
lods
jbe
scas
cmp
fidivr
jbe
scas
mov
or
loop
or
add
xor
fimul
add
xor
mov
fimul
adc
jne
add
xor
jno
add
int3
add
xor
pop
dec
inc
cmps
cmp
pop
mov
add
sub
adc
push
push
xor
xor
fidiv
push
fimul
test
or
add
xor
pop
dec
inc
fidivr
xchg
fidivr
mov
add
sub
adc
push
push
jl
xor
fidiv
push
fimul
fdivr
cdq
fidivr
mov
add
and
adc
push
push
pop
enter
jle
test
call
jmp
mov
int3
cmp
mov
shl
xor
jge
add
lock
popa
mov
lods
jbe
push
movs
outs
mov
add
dec
iret
mov
mov
lods
jbe
scas
cmp
fidivr
jbe
scas
mov
or
loop
or
add
xor
fimul
cmp
imul
test
jae
adc
imul
jge
add
xor
mov
cmp
xor
adc
scas
mov
add
shl
mov
and
adc
xor
retf
xor
or
(bad)
push
pusha
mov
push
mov
or
jbe
ja
loope
adc
mov
jmp
pop
(bad)
mov
or
(bad)
push
loope
jle
mov
mov
add
xchg
push
loope
jle
mov
push
or
rcl
cmp
xor
(bad)
push
jle
ja
gs
add
xor
cld
mov
int3
enter
iret
mov
mov
inc
fmul
cmp
and
xor
pop
dec
(bad)
push
loope
adc
mov
data16
pop
or
or
(bad)
push
fcmovu
xchg
mov
add
jne
pop
adc
dec
(bad)
push
(bad)
outs
movs
call
jmp
mov
stos
xchg
icebp
mov
cmp
mov
jle
cmps
inc
int3
cmp
iret
add
add
adc
fmul
movs
jbe
jge
test
(bad)
fimul
add
xor
xchg
or
iret
(bad)
mov
or
add
lock
popa
mov
lods
jbe
push
movs
outs
mov
add
dec
iret
mov
mov
lods
jbe
scas
cmp
fidivr
jbe
scas
mov
or
loop
mov
push
mov
xchg
push
jecxz
xchg
push
loope
(bad)
push
or
add
popa
fnstsw
stos
or
add
movs
pop
out
mov
retf
xor
cmp
jb
lods
mov
xor
xchg
xor
movs
outs
mov
add
dec
fstp
mov
xchg
push
addr16
mov
jecxz
scas
cmp
add
and
sbb
fimul
(bad)
ror
jne
push
mov
mov
ror
enter
xor
fidiv
sbb
or
add
int3
(bad)
daa
lahf
pop
(bad)
lods
cld
int3
test
cli
xor
js
xor
fidiv
push
fimul
cmp
xor
cmp
mov
push
mov
add
(bad)
adc
mov
int
mov
(bad)
push
add
or
iret
ja
(bad)
push
adc
fdiv
adc
stc
cmp
ret
mov
(bad)
mov
fisub
call
xor
push
mov
sbb
lods
jbe
cmp
push
mov
add
mov
mov
push
mov
or
ins
mov
xchg
mov
pop
jno
push
jecxz
scas
cmp
mov
lods
mov
xor
ja
scas
fmul
cmp
xchg
pusha
push
ja
iret
add
dec
cmp
mov
or
push
cld
sub
add
xor
icebp
int
lods
(bad)
pop
adc
fneni(8087
lods
cld
cmp
(bad)
icebp
int
lods
fstp
mov
icebp
int
lods
(bad)
jp
mov
jge
cdq
mov
sti
jecxz
(bad)
shl
cmp
es
pop
sub
enter
mov
xchg
fdiv
cmp
and
fadd
outs
mov
adc
lods
ja
(bad)
fimul
add
int
lods
(bad)
mov
(bad)
and
dec
repnz
xchg
stos
jbe
jp
mov
(bad)
fimul
add
into
add
xor
mov
(bad)
push
add
adc
ds
lods
jbe
scas
pop
ds
lods
jbe
scas
pop
ds
lods
jbe
scas
pop
lea
iret
aas
mov
mov
add
iret
add
xor
add
loop
lods
cdq
aas
push
add
xchg
out
stc
int
lods
mov
pop
imul
into
add
xor
lods
mov
cmp
lods
jbe
push
je
xor
cmp
into
add
inc
cli
mov
add
lods
jbe
scas
lods
cmp
add
mov
not
mov
jg
push
xor
push
add
dec
lods
jbe
scas
fimul
add
xor
fimul
add
mov
lods
jbe
icebp
in
mov
lods
jbe
icebp
in
xchg
lods
jbe
icebp
in
add
jbe
sbb
mov
sub
add
test
lods
jbe
jne
dec
into
add
mov
inc
xchg
lods
jbe
inc
and
fs
rol
movs
adc
mov
add
jmp
cmp
rep
pop
mov
jae
cmp
add
xor
ja
add
dec
imul
xor
mov
jbe
push
lods
ja
push
loopne
xor
ficom
fimul
mov
mov
loope
adc
mov
fisubr
xchg
push
fstp
mov
or
(bad)
push
(bad)
outs
movs
call
jmp
mov
repnz
lods
popa
cmp
xor
out
mov
sbb
or
add
dec
(bad)
push
jle
ja
jns
add
mov
lods
jbe
scas
fidivr
ds
(bad)
and
mov
jge
mov
push
mov
jle
mov
icebp
(bad)
add
(bad)
push
or
push
xchg
jae
jae
add
xor
mov
bound
out
mov
jg
mov
(bad)
push
add
jge
xchg
pusha
push
and
xor
fimul
ja
ja
mov
shl
add
jl
add
stos
mov
ja
xchg
sti
test
iret
add
xor
or
loop
add
add
jbe
scas
mov
or
repnz
or
adc
xor
in
into
not
pusha
sahf
(bad)
push
mov
jle
mov
mov
loope
movups
iret
add
popa
push
mov
pop
xor
jmp
mov
sbb
or
add
mov
push
mov
jecxz
loope
movups
iret
add
popa
add
cmp
mul
mov
adc
test
loope
adc
mov
add
popa
and
inc
add
iret
stos
add
jae
jae
add
xor
jbe
fdivr
mov
scas
fimul
add
iret
add
dec
cmp
stos
mov
lock
or
imul
fdivr
lods
add
ss
mov
push
jno
cmp
(bad)
pop
(bad)
cmp
xor
lea
(bad)
cmp
shr
or
repnz
mov
cmp
test
jmp
cmp
fidivr
ds
(bad)
sub
xor
jge
out
fmulp
shr
mov
(bad)
shl
mov
dec
repnz
cld
cmp
es
pushw
pop
jb
add
dec
cmp
test
mov
inc
out
add
jbe
cmp
test
test
mov
out
add
jbe
cmp
sub
mov
jecxz
scas
cmp
push
push
lock
(bad)
lods
push
jo
xor
fidiv
sbb
int3
fdiv
(bad)
outs
movs
call
loop
mov
lods
add
ss
lea
lahf
xor
fidiv
push
fimul
lahf
mov
or
iret
ja
loope
adc
mov
mov
mov
xchg
push
fstp
mov
popa
jne
push
mov
cmp
mov
scas
jbe
scas
lods
mov
xor
add
xlat
stos
add
mul
jbe
stc
add
push
lods
jbe
cmp
mov
xor
jne
add
movs
add
jle
ja
jns
add
mov
scas
jbe
scas
fimul
add
lods
mov
(bad)
cmp
xor
mov
add
iret
jge
xchg
or
mov
xor
fimul
add
iret
add
dec
cmp
xlat
mov
add
dec
(bad)
push
jecxz
xchg
and
or
add
iret
add
dec
cmp
lods
jbe
(bad)
daa
xchg
pop
(bad)
cmp
fnstsw
jbe
scas
mov
or
repnz
or
iret
(bad)
fmul
add
add
(bad)
(bad)
push
imul
adc
je
pop
or
dec
fild
addr16
push
mov
icebp
fild
xor
push
mov
mov
test
xor
mov
mov
cmps
add
aas
jp
lea
(bad)
sub
or
icebp
xlat
add
(bad)
push
pusha
push
cli
push
mov
icebp
xlat
inc
xor
push
pusha
(bad)
cli
push
mov
mov
neg
lods
pop
or
dec
out
outs
fisub
xchg
jg
xor
outs
fnstenv
add
xor
dec
lea
(bad)
outs
lds
pop
xchg
inc
mov
mov
pop
mov
(bad)
mov
mov
cmps
add
aas
jp
mov
(bad)
mov
jecxz
xchg
daa
fs
fimul
add
iret
add
dec
cmp
lods
jbe
(bad)
daa
in
clc
cmp
fnstsw
jbe
lods
mov
or
repnz
jbe
(bad)
push
cld
jg
(bad)
jne
add
iret
add
popa
inc
push
lods
jbe
mov
add
jne
add
cmp
mov
or
out
cmp
fnstsw
mov
add
pop
adc
mov
int
xchg
(bad)
push
pusha
dec
std
push
mov
mov
mov
(bad)
cmp
jb
lods
mov
xor
mov
ja
pusha
imul
mov
jp
mov
(bad)
shl
mov
or
xchg
fdivr
add
popa
test
push
mov
add
jle
cdq
push
mov
jnp
jae
add
xor
mov
jae
add
dec
mov
push
add
fistp
iret
add
popa
retf
add
(bad)
(bad)
popa
retf
sti
jecxz
out
(bad)
int3
add
pop
inc
popa
ret
add
pop
bound
add
xor
lods
or
repnz
push
fimul
dec
push
mov
jle
test
mov
mov
scas
jbe
jge
mov
push
fcmovu
dec
test
iret
jge
test
(bad)
mov
or
push
std
and
add
xor
lods
or
repnz
push
fimul
xchg
push
mov
jae
mov
add
fsubr
xchg
cmp
ror
scas
cmp
fnstsw
jbe
scas
mov
or
repnz
ficom
mov
add
popa
cdq
(bad)
push
mov
add
lods
lods
mov
xor
inc
mov
(bad)
cmp
mov
inc
loope
adc
mov
int
or
push
pusha
ret
call
mov
push
jne
add
pop
jae
mov
add
fdiv
xchg
or
push
test
pusha
repz
pop
out
mov
mov
(bad)
cmp
jb
lods
mov
xor
test
add
mov
scas
jbe
jge
mov
mov
or
not
adc
mov
adc
xchg
push
jg
(bad)
push
jecxz
scas
cmp
add
mov
jmp
enter
not
mov
jecxz
scas
cmp
fnstsw
mov
add
push
mov
enter
xchg
adc
mov
jecxz
scas
cmp
fnstsw
mov
je
push
mov
in
push
mov
xchg
inc
addr16
mov
jecxz
scas
cmp
add
sar
dec
(bad)
push
jle
ja
popa
retf
add
pop
mov
xor
ficom
ds
fstp
mov
jne
add
xor
test
or
iret
ja
add
add
mov
xor
lods
jbe
add
sbb
push
mov
fs
mov
xchg
jl
jb
mov
jecxz
scas
cmp
add
pop
mov
outs
rcl
xchg
or
add
arpl
pushf
iretw
add
dec
cmp
rcl
out
(bad)
int3
add
fnstsw
mov
add
adc
adc
add
push
bound
xchg
inc
fs
mov
jecxz
scas
cmp
add
clc
mov
call
out
(bad)
fnstsw
mov
add
xor
adc
add
push
add
iret
stos
add
pop
imul
aaa
nop
fdivr
test
ss
push
lock
aaa
mov
or
iret
mov
xor
mov
sbb
int3
enter
(bad)
mov
lock
mov
add
test
fild
push
add
adc
stos
add
mov
push
add
jg
jmp
test
sub
dec
or
and
xor
cmp
sub
add
or
iret
ja
or
not
xor
mov
add
xchg
lea
inc
popa
int
push
mov
fwait
push
mov
mov
dec
into
add
mov
add
dec
fdivr
jbe
push
pushf
mov
clc
add
add
mov
or
jg
mov
xchg
push
jecxz
add
jbe
cmp
push
into
add
sahf
adc
mov
mov
pop
int3
push
mov
cmp
jae
mov
sub
push
into
add
iret
add
cmp
es
fld
jbe
add
pop
into
add
iret
not
mov
jmp
lods
or
add
iret
add
jbe
push
lods
jbe
icebp
in
out
lods
jbe
test
push
fdivr
mov
jge
xchg
mov
cmp
ja
add
add
iret
stos
add
add
dec
into
add
aas
dec
(bad)
pop
into
add
gs
xor
push
mov
pop
bound
mov
(bad)
jbe
mov
cmp
mov
aam
xor
shr
int3
(bad)
cmp
xor
push
mov
add
xor
jne
add
xor
xchg
std
cmp
jne
call
inc
in
lods
mov
xor
mov
sbb
fimul
(bad)
fmulp
int3
scas
cmp
iret
mov
push
int
mov
ds
or
mov
scas
mov
cmp
pop
(bad)
cmp
and
adc
sbb
fimul
sub
xor
bound
xchg
push
add
add
loope
mov
scas
test
add
ja
fimul
sub
dec
add
iret
push
inc
mov
(bad)
sbb
or
sub
pusha
jae
jne
add
xor
or
inc
lods
jbe
add
rcl
mov
cmp
fucomi
shl
pop
push
dec
cmps
xor
mov
xchg
xor
mov
(bad)
outs
movs
call
jge
test
add
inc
neg
aam
inc
and
std
neg
jno
push
fimul
push
add
xor
push
inc
sti
bound
adc
fcmovne
retf
ja
mov
xor
push
jbe
repnz
mov
mov
jb
cli
dec
xor
sbb
int3
les
add
or
imul
fdivr
cli
push
mov
add
inc
imul
nop
dec
inc
sub
enter
idiv
mov
push
(bad)
sub
xor
lods
mov
xor
push
rcr
fst
xor
ins
pop
(bad)
push
add
add
mov
xor
jo
cmp
add
push
(bad)
arpl
enter
xor
fimul
add
mov
push
mov
add
jno
mov
lock
push
push
pop
cmps
xor
cmp
iret
add
jecxz
xchg
retf
gs
lods
(bad)
cmp
add
xor
jmp
pop
(bad)
push
jle
ja
jno
add
xor
push
rol
ds
add
cmp
mov
add
xlat
ja
jno
add
jb
fimul
add
xor
ror
not
leave
xor
cmp
fmul
arpl
fcomp
test
iret
cmps
fidiv
push
fimul
push
mov
mov
lods
mov
xor
bound
add
fimul
clc
cmp
fdivr
jbe
scas
mov
or
repnz
dec
aas
jnp
mov
(bad)
ficomp
add
xor
shl
icebp
fld
push
or
(bad)
fidiv
push
fimul
jnp
jb
add
loope
adc
mov
add
dec
ss
mov
or
repnz
add
jns
inc
adc
mov
xchg
bound
pop
mov
popa
push
rcl
mov
xchg
(bad)
xor
mov
or
jno
mov
add
jne
add
imul
inc
xlat
fdivr
jbe
adc
mov
jge
add
iret
add
jne
add
mov
add
popa
pop
int
mov
(bad)
scas
jbe
scas
mov
jecxz
scas
ficomp
add
fst
push
mov
iret
fidiv
push
fimul
jnp
jne
add
popa
loope
push
mov
ficomp
add
ficomp
add
fcom
mov
jg
jo
(bad)
push
pusha
aaa
add
repnz
push
fdivr
lods
add
pop
pop
inc
mov
xor
movs
outs
mov
iret
stos
add
xchg
fwait
mov
(bad)
cmp
xor
clc
mov
cmp
sub
xor
movs
outs
mov
xchg
push
jecxz
xchg
push
popa
inc
rcl
mov
(bad)
fidiv
push
fimul
dec
push
and
fimul
ja
addr16
cmp
gs
cmp
arpl
loopne
xor
pop
dec
inc
call
push
mov
mov
xchg
pusha
(bad)
(bad)
push
mov
add
aad
mov
cmp
xor
jle
ja
push
mov
scas
fmulp
fsubr
push
mov
(bad)
jmp
xor
push
jle
add
int3
call
js
mov
mov
jne
shl
int3
hlt
and
sub
jns
push
mov
movs
fidiv
sbb
int3
in
xchg
xor
push
mov
fwait
scas
add
fidivr
xor
jle
ja
pop
mov
scas
cmp
xor
ss
mov
inc
(bad)
inc
loope
ins
adc
fdivr
mov
scas
mov
add
or
fldcw
or
mov
mov
pusha
test
cmp
mov
jae
jne
xchg
push
jbe
idiv
mul
push
popa
jno
push
mov
sbb
xor
jmp
add
push
jle
ja
jno
cmp
rep
fisubr
and
test
cmp
popf
mov
mov
jp
mov
stos
push
mov
mov
push
dec
jne
push
mov
(bad)
shr
test
cmp
mov
push
ror
scas
mov
add
xlat
stos
add
xchg
push
add
dec
add
sar
pusha
jae
and
xor
cmp
mov
push
ror
scas
mov
jecxz
xchg
push
add
inc
add
into
push
mov
fiadd
xor
push
xor
mov
push
fmul
xchg
ja
jne
push
movs
outs
mov
jne
and
jne
push
mov
(bad)
xor
mov
mov
cmp
pop
(bad)
cmp
jno
push
cld
cmp
ret
fdivr
mov
mov
mov
xor
push
add
fcmove
xor
mov
jbe
mov
(bad)
push
jbe
push
mov
or
dec
and
xor
es
xor
es
xor
lea
mov
lock
sbb
outs
mov
fisubr
add
inc
imul
imul
stos
add
add
mov
add
mov
add
mov
jg
sub
push
jecxz
add
mov
add
mov
xchg
inc
jecxz
test
xor
(bad)
push
or
repnz
sbb
int3
int3
ja
(bad)
outs
aaa
nop
fdivr
shr
cmp
xor
cmp
iret
mov
inc
repnz
cld
cmp
bound
sub
mov
(bad)
xor
dec
dec
ja
mov
ja
jecxz
xchg
push
add
jmp
cmp
es
jge
xchg
outs
mov
shl
test
adc
add
jg
push
push
(bad)
push
add
push
add
xchg
push
mov
(bad)
cmp
iret
mov
inc
idiv
xor
push
mov
inc
out
cld
and
es
pop
(bad)
lods
cld
and
es
xchg
jge
xor
xchg
std
cmp
es
(bad)
jge
xor
xchg
bound
inc
(bad)
cmc
xor
movs
outs
mov
add
jne
fidivr
xor
xchg
leave
outs
aaa
nop
fdivr
test
add
fmul
sub
out
shr
mov
cmp
jle
ja
jns
cmp
int3
int3
scas
cmp
xor
es
mov
rcl
push
mov
ds
lea
ds
fldenv
push
jecxz
add
cdq
iret
mov
mov
ds
test
mov
mov
ds
popa
xchg
rcl
mov
mov
in
sub
fisubr
add
adc
jg
mov
or
(bad)
daa
mov
xor
push
add
fidiv
push
fimul
push
mov
xor
push
jno
retf
bound
adc
adc
xor
mov
cmp
fdivr
mov
ja
mov
lock
lock
mov
xor
xor
int3
inc
dec
cdq
xor
movs
outs
mov
jne
jne
mov
xor
ss
push
add
add
int
retf
xor
xor
test
add
in
rol
cmp
add
jne
test
mov
es
push
jp
mov
ja
mov
xor
jbe
out
mov
or
repnz
fst
mov
jne
cdq
idiv
push
mov
(bad)
fidiv
ds
bound
shl
mov
pop
mov
mov
(bad)
es
mov
std
pop
cld
and
cdq
idiv
push
or
sbb
xor
test
addr16
std
push
test
and
or
inc
in
push
xor
inc
popa
stc
fst
mov
adc
mov
(bad)
outs
movs
push
dec
gs
or
fiadd
fbld
push
xor
lds
xor
not
(bad)
fwait
mov
int3
shr
add
fmul
shl
mov
push
fcmove
shl
jns
sub
addr16
adc
xlat
push
mov
adc
pusha
or
(bad)
pop
dec
inc
hlt
pop
aas
xor
sar
jbe
mov
inc
sbb
cld
sar
xor
push
bound
in
into
icebp
in
or
xor
(bad)
push
mov
jge
call
sub
push
mov
or
fsubr
ja
or
lahf
add
dec
or
sbb
adc
xor
ror
cwde
lods
int3
into
icebp
in
into
lds
jno
push
fmul
les
push
add
inc
outs
mov
(bad)
mov
fisub
in
mov
sar
add
jge
jge
add
int
push
add
or
je
ja
add
add
cmp
sbb
ror
ja
sub
push
mov
xor
shl
add
fcmovu
call
icebp
std
push
mov
mov
ins
xlat
push
mov
add
nop
xor
push
jle
add
iret
add
iret
xchg
out
push
iret
add
int
fidiv
xor
jnp
xor
jno
add
(bad)
sbb
or
add
cld
cmp
mov
or
and
mov
jne
cmp
lods
leave
mov
push
mov
fimul
neg
sbb
add
popa
and
lods
jbe
cmp
pop
adc
mov
mov
jge
push
mov
out
lods
cld
adc
xchg
bound
cmp
mov
lods
ja
push
pop
mov
and
ret
bound
lods
cld
and
(bad)
jno
add
xor
push
or
jmp
cmp
push
mov
jnp
jbe
add
xor
mov
or
mov
mov
cmp
mov
add
int
push
bound
(bad)
inc
iret
add
iret
(bad)
iret
add
imul
add
std
out
inc
iret
add
enter
xor
retf
jge
call
sub
push
mov
or
sbb
add
dec
push
test
lods
jbe
xchg
jg
jb
fidiv
(bad)
lods
jbe
push
sbb
xor
ror
add
inc
iret
add
iret
jle
mov
icebp
shl
iret
add
iret
add
xchg
mov
add
add
scas
cmp
fstp
mov
jge
xchg
mov
push
mov
or
je
ja
or
jle
mov
add
jge
add
iret
(bad)
(bad)
inc
iret
add
iret
ja
gs
add
mov
add
sbb
push
pusha
xor
push
mov
add
mov
push
mov
jg
(bad)
adc
push
add
push
mov
(bad)
push
mov
add
xor
push
add
ja
gs
add
pop
mov
or
and
inc
jle
mov
mov
rcr
mov
lods
je
scas
mov
or
repnz
lods
push
mov
add
inc
iret
mov
es
cmp
je
jae
mov
add
iret
add
int
add
fst
mov
pop
rol
jbe
push
pop
jne
add
dec
xor
(bad)
jns
add
xor
lods
(bad)
or
or
add
jbe
add
iret
add
iret
scas
cmp
fstp
mov
jge
xchg
mov
cmp
fsub
(bad)
jge
add
iret
scas
lods
cmp
add
jae
add
dec
cmp
(bad)
jne
add
into
add
iret
dec
stos
jbe
add
or
neg
jns
push
fimul
(bad)
cmp
pop
(bad)
cmp
inc
idiv
add
add
jno
add
pop
(bad)
fidiv
add
cmp
add
jbe
add
add
xlat
mov
ins
iret
add
iret
dec
stos
jbe
add
add
jmp
and
push
add
adc
cmp
stc
cmp
mov
fimul
ja
mov
jne
push
bound
stos
jle
ja
jno
add
iret
scas
cmp
fidivr
jbe
scas
mov
jecxz
xchg
fisub
(bad)
fimul
add
xor
mov
add
mov
mov
lods
mov
mov
jecxz
xchg
push
(bad)
fidivr
or
and
pop
js
(bad)
cmp
push
loope
pop
adc
mov
ret
add
dec
adc
jo
(bad)
push
(bad)
stc
cmp
mov
fisub
in
dec
push
pop
or
enter
idiv
adc
mov
cmp
int3
cmp
mov
push
or
(bad)
fimul
add
xor
push
mov
(bad)
fimul
add
xor
mov
mov
scas
jbe
ja
mov
mov
test
pop
adc
push
add
(bad)
xor
adc
movs
pop
scas
jbe
ja
jle
ja
icebp
int
lods
add
test
call
push
add
add
sub
add
mov
mov
xor
ficomp
add
xor
fimul
add
iret
add
add
add
adc
add
mov
mov
xor
lods
add
hlt
push
add
cld
push
retf
mov
add
dec
std
loop
mov
mov
xor
lock
xor
fimul
add
mov
(bad)
fimul
add
xor
mov
(bad)
ret
xor
fimul
add
jb
cmp
fnstcw
or
in
movs
jbe
jge
lods
cmp
es
bound
xchg
xor
mov
fiadd
lods
jbe
cli
push
mov
jae
jne
add
iret
add
popa
stc
ficom
iret
dec
(bad)
je
add
iret
dec
fbstp
lods
cmp
add
iret
add
data16
cmp
fmul
xchg
test
iret
add
inc
in
add
mov
cmp
fsincos
push
mov
xchg
hlt
pusha
jb
fimul
add
xor
fidiv
push
fimul
jnp
je
add
add
add
or
or
iret
add
jle
jmp
mov
cmp
iret
add
popa
cmp
cmp
not
add
xor
add
mov
lods
jbe
call
xor
lods
jbe
(bad)
sar
out
push
mov
add
sub
xchg
or
add
sbb
fimul
jnp
ja
add
popa
cmp
lods
jbe
jae
sub
mov
add
jecxz
xchg
push
jecxz
xchg
push
jecxz
xchg
push
add
add
mov
fidiv
xor
xchg
xchg
out
int
lods
popa
dec
ficom
mov
inc
mov
or
iret
ja
jbe
push
jbe
xchg
xchg
bound
cmp
mov
lods
jbe
scas
mov
or
out
xchg
or
add
mul
(bad)
jne
add
xor
adc
xor
fimul
ds
pop
push
push
mov
push
and
xor
ror
add
int
lods
mov
mov
loope
xchg
fsub
movs
mov
(bad)
push
or
(bad)
daa
sbb
mov
push
ins
test
(bad)
cmp
mov
lods
jbe
scas
add
fist
pop
(bad)
cmp
fnstcw
jbe
scas
mov
or
repnz
jbe
(bad)
push
cld
sbb
adc
mov
cmp
je
add
enter
not
scas
jbe
(bad)
shl
xchg
push
mov
add
popa
inc
fist
pushw
adc
xor
fimul
(bad)
lods
cmp
add
xor
out
int
lods
popa
imul
iret
je
add
jno
cmp
imul
lea
stos
fisubr
dec
fisub
fcom
and
inc
fwait
std
cld
fidiv
sbb
int3
shl
enter
inc
idiv
add
cwde
fcmovu
into
add
test
sbb
xor
out
mov
out
mov
add
cwde
fcmovu
(bad)
ja
jle
ja
gs
ficom
mov
or
add
add
aas
dec
push
jg
cs
ds
int
(bad)
add
xor
aam
xor
fimul
ds
sub
pop
sbb
mov
rcl
pop
cli
fmulp
sub
mov
or
repnz
cld
cmp
or
sti
add
jecxz
mov
cmp
into
jae
(bad)
xor
jecxz
mov
mov
xchg
push
xchg
out
push
(bad)
mov
pop
ds
fmulp
ss
pop
ds
aas
dec
push
jg
mov
je
xor
fmulp
enter
xchg
jp
jo
cmp
adc
push
add
ja
mov
iret
test
dec
das
(bad)
push
add
push
add
fdivr
dec
mov
test
xchg
(bad)
push
add
jmp
jno
mov
fisubr
dec
mov
push
in
xor
add
addr16
or
ja
mov
ja
dec
mov
mov
iret
mov
stos
jle
ja
xor
add
rol
lods
fnstcw
add
loope
pop
adc
xor
xor
xlat
sbb
(bad)
push
add
xlat
stos
add
lods
lods
cmp
push
lods
jbe
xchg
jb
xor
cmp
dec
fwait
imul
push
xor
jo
xor
mov
cmp
xor
das
(bad)
push
or
inc
push
xor
mov
add
(bad)
pop
dec
mov
not
cmp
push
lods
jbe
out
mov
jge
cmp
dec
fwait
imul
push
pop
xchg
xor
fidiv
push
fimul
adc
adc
push
or
movs
pop
mov
mov
push
add
inc
pop
test
sub
push
fisub
fdivr
cmp
fcomip
cdq
fidiv
push
fimul
push
fimul
xchg
push
mov
(bad)
mov
xor
out
mov
sbb
or
and
mov
lods
leave
mov
push
mov
fimul
neg
js
das
add
xchg
lods
jbe
cmp
pop
adc
mov
push
test
(bad)
ror
add
test
mov
hlt
adc
mov
mov
add
xor
popf
mov
cmp
mov
cmp
pop
(bad)
push
mov
mov
add
jg
mov
(bad)
push
add
(bad)
mov
iret
scas
mov
jecxz
jae
jne
add
rol
lods
fbld
pop
xchg
xor
add
loop
mov
(bad)
jmp
xor
push
bound
ja
jle
ja
jge
add
iret
ja
(bad)
outs
movs
call
jle
mov
lods
add
daa
imul
or
(bad)
fidiv
push
fimul
or
aam
jg
jae
(bad)
push
fcmovu
inc
dec
mov
jne
cmp
add
jno
push
fimul
add
xor
push
popa
(bad)
or
xor
mov
mov
test
iret
ja
loope
sbb
mov
ror
xor
sub
add
not
sub
fsubr
mov
xchg
push
mov
(bad)
fimul
add
jb
cmp
fnstcw
or
pop
mov
lods
cmp
pop
or
pop
cli
push
mov
jae
jne
add
iret
add
popa
inc
in
mov
cmp
arpl
cmp
fcomp
lods
jbe
jge
test
ds
or
pop
pop
mov
jne
add
xor
test
mov
scas
jbe
scas
fimul
add
xor
mov
add
jg
sbb
jecxz
xchg
push
add
inc
lods
jbe
scas
mov
or
loop
jno
push
fimul
jnp
ja
add
mov
(bad)
xchg
or
add
mov
retf
je
add
adc
add
or
push
jle
ja
or
add
into
add
iret
cmps
fimul
add
into
add
pop
fidivr
mov
cmp
iret
add
jecxz
push
lods
xchg
xor
pop
dec
aas
jp
mov
(bad)
lods
cmp
add
xor
mov
test
jbe
xchg
xchg
bound
cmp
mov
lods
jbe
scas
mov
or
out
xchg
or
add
jge
(bad)
push
push
mov
jae
jne
add
xor
js
xor
fimul
ds
pop
push
push
mov
push
or
mov
lods
jbe
je
or
add
(bad)
icebp
xlat
xchg
(bad)
push
loope
push
push
mov
(bad)
dec
mov
xchg
push
mov
(bad)
fimul
add
sub
push
or
movs
mov
xchg
push
loope
pop
adc
iret
add
popa
int
lods
jbe
cmp
iret
add
aas
jp
mov
(bad)
fimul
add
mov
or
neg
aas
jp
mov
(bad)
cmp
iret
add
or
add
mov
or
add
int
lods
popa
dec
cmp
fidiv
push
fimul
dec
(bad)
je
add
loope
push
adc
xor
push
(bad)
dec
dec
mov
jge
popf
cmp
mov
xor
lods
xchg
xor
fcom
add
mov
add
sbb
cmp
bound
jne
adc
fmul
add
iret
dec
(bad)
je
add
or
repnz
push
fimul
push
loopne
xor
fidiv
push
fimul
jnp
je
add
xor
fimul
add
xor
fidiv
push
fimul
(bad)
lods
cmp
add
xor
mov
test
jbe
push
hlt
xchg
xor
fmul
add
repnz
push
fdivr
lods
add
ss
xlat
popf
mov
cmp
imul
push
add
lods
cld
cmp
ins
xchg
xor
fcomp
les
mov
lods
cmp
fsub
dec
mov
ja
fisub
fs
xor
add
in
mov
mov
fs
push
fcmovnu
fiadd
ja
mov
ja
fcmovu
mov
xor
jne
xchg
push
fistp
hlt
leave
xor
xchg
xor
fimul
add
mov
or
mov
push
clc
sahf
xor
add
mov
inc
nop
mov
mov
mov
push
add
scas
add
test
and
adc
mov
push
std
sbb
mov
jno
and
enter
iret
mov
stc
in
mov
mov
sub
xor
rcl
(bad)
mov
rcr
es
mov
ret
push
mov
jle
mov
xor
and
fdivr
mov
ja
jno
push
jp
mov
(bad)
push
jecxz
scas
lods
fmul
xchg
jecxz
jb
cmp
scas
mov
lods
jbe
cmp
das
add
popf
iret
mov
inc
repnz
cld
cmp
or
xor
mov
mov
or
outs
mov
push
fdivr
test
cmp
push
int
jle
ret
mov
repz
mov
test
ss
fcmovu
int3
lods
add
add
lock
xor
push
jecxz
push
mov
dec
js
push
mov
or
cli
push
fdivr
test
xor
(bad)
shl
mov
jne
adc
(bad)
mov
(bad)
sahf
dec
mov
inc
add
xor
movs
outs
mov
jae
ins
pusha
push
add
xor
cmp
mov
repnz
mov
not
(bad)
mov
sar
dec
repnz
push
fdivr
(bad)
push
popa
sbb
push
mov
add
pusha
call
push
jns
cmp
jg
test
mov
or
xor
shl
popf
push
mov
or
jbe
ja
or
test
iret
sti
(bad)
dec
jb
sar
fst
fdiv
mov
popa
stos
jnp
jbe
inc
push
mov
ja
mov
push
mov
inc
dec
mov
jge
xor
iret
xchg
pusha
test
push
mov
fist
xor
fimul
or
xor
jmp
imul
jle
ja
adc
div
jns
add
or
push
cld
leave
ja
or
sti
xchg
or
iret
popf
cmp
fdivr
mov
add
loope
popa
adc
iret
jge
xchg
mov
push
std
cmp
mov
loope
push
adc
xor
fimul
push
lods
jbe
push
fcom
add
fimul
(bad)
fimul
push
lods
jbe
push
(bad)
iret
add
dec
sub
jns
add
xor
push
mov
push
std
push
mov
add
mov
push
mov
jle
jne
add
xor
cmp
xor
jne
add
iret
jge
test
cmps
jbe
jg
test
(bad)
push
xchg
add
iret
(bad)
push
xchg
in
stos
or
int3
add
jno
rol
mov
es
cmp
dec
xor
fmulp
xor
jne
add
iret
jge
cdq
mov
push
xchg
lods
or
or
les
lods
add
sti
scas
jne
add
add
gs
iret
scas
mov
or
push
adc
aam
lods
fnstcw
add
popa
or
push
mov
mov
xor
add
xor
push
or
les
call
idiv
jne
add
fidiv
adc
enter
pop
imul
int3
add
xor
test
add
sbb
jo
xor
jmp
fdivr
add
dec
leave
loope
inc
mov
mov
lods
jbe
jns
mov
(bad)
ror
les
mov
mov
cld
jle
push
lea
(bad)
fimul
push
lods
jbe
push
test
sbb
push
jle
ja
adc
add
enter
pop
je
retf
xor
jne
add
xor
fimul
push
lods
jbe
push
mov
xor
ror
adc
push
mov
add
popa
loope
push
mov
cmp
or
push
lods
jbe
xchg
and
(bad)
fimul
add
xor
cmp
fdivr
jbe
scas
mov
or
jmp
pusha
push
js
xor
jmp
dec
(bad)
push
jle
ja
adc
add
int3
add
mov
stos
jbe
scas
cmp
fdivr
jbe
scas
mov
or
out
cmp
iret
add
popa
popf
jmp
xor
cmp
xor
jne
add
iret
jge
test
ds
or
call
mov
add
dec
xor
(bad)
push
sar
add
jno
icebp
aad
xor
push
or
test
iret
sti
(bad)
dec
jb
lods
cmp
push
lods
jbe
push
loope
xor
fimul
push
lods
jbe
push
in
xor
ror
jg
inc
adc
push
loope
dec
adc
iret
add
popa
jns
push
mov
add
popa
sbb
jnp
jge
add
jge
add
xor
iret
shl
cdq
mov
add
jbe
(bad)
mov
jge
add
xor
or
test
stos
jbe
jae
jne
add
xor
jne
add
xor
cdq
mov
cmp
or
push
lods
jbe
push
nop
call
lods
jbe
inc
scas
ja
add
sub
(bad)
jge
add
cmc
aaa
out
add
jo
fcomp
les
lods
jbe
adc
xor
fimul
push
lods
jbe
add
jge
add
mov
add
popa
inc
in
push
mov
add
lea
stos
jbe
jae
mov
test
push
add
push
stos
jbe
scas
cmp
iret
add
mov
xor
mov
xor
xor
fidivr
push
fimul
jnp
jne
add
fcmove
dec
mov
xor
add
cmp
pop
or
add
iret
add
or
in
mov
mov
push
mov
mov
addr16
movs
rcr
sar
mov
(bad)
dec
jb
pop
pop
adc
add
lock
jns
xor
jne
xchg
push
jecxz
xchg
lea
pop
(bad)
mov
(bad)
sbb
xor
push
add
jg
int
(bad)
push
fbld
jb
dec
cdq
jmp
add
push
jle
ja
inc
into
add
not
fimul
add
dec
mov
push
mov
cmp
mov
push
mov
xchg
push
jecxz
xchg
push
jecxz
jae
inc
into
add
xor
add
push
add
xor
mov
jae
jns
jae
jno
push
enter
jmp
es
push
jle
ja
dec
into
add
pusha
jae
jns
push
fadd
jne
push
mov
out
mov
inc
popf
mov
mov
add
dec
pop
(bad)
fmulp
loopne
fmulp
shr
lods
or
repnz
retf
test
movs
jl
xor
mov
mov
lods
jbe
ja
bound
xchg
push
aas
jb
cmp
movups
mov
push
ins
iret
add
jno
push
fimul
cs
xor
cmp
xor
push
or
fdiv
test
and
push
add
jg
popf
xor
push
fisub
in
sub
cmp
enter
test
lods
jbe
ja
loope
(bad)
push
mov
mov
add
jg
mov
es
adc
xor
fimul
add
xor
ror
das
jbe
lock
xchg
retf
xor
lods
add
shl
xchg
aas
dec
push
jne
xchg
push
mov
inc
jbe
scas
mov
or
fcmovbe
mov
je
mov
mov
fcom
sub
ja
jne
dec
push
jne
xchg
push
mov
inc
jbe
scas
mov
or
jmp
pushw
xchg
xchg
(bad)
ror
das
jbe
lock
xchg
retf
xor
loope
push
adc
xor
mov
or
jmp
int3
(bad)
fidiv
sbb
or
add
iret
mov
mov
fmulp
xor
fimul
add
iret
add
dec
sub
xor
ja
pop
hlt
mov
popa
jb
cmp
cmp
inc
add
or
iret
ja
or
test
iret
sti
(bad)
dec
jb
sar
cdq
push
mov
or
stos
fisubr
inc
mov
push
push
test
inc
or
jg
push
or
push
or
test
iret
sti
(bad)
dec
jb
shl
loope
mov
jnp
addr16
add
xor
fidivr
push
fimul
sar
inc
mov
push
mov
icebp
xlat
add
(bad)
push
or
xchg
js
xor
fimul
or
xor
cmp
iret
add
popa
add
(bad)
push
add
xlat
mov
mov
(bad)
push
mov
ja
mov
ja
add
ret
iret
scas
mov
add
add
out
(bad)
push
add
icebp
in
enter
addr16
in
(bad)
or
les
lods
jbe
jne
mov
add
mov
adc
inc
xor
jae
aas
stos
xchg
sbb
add
inc
xchg
retf
xor
pop
ds
test
xchg
retf
xor
push
add
jae
mov
or
fiadd
lods
(bad)
mov
mov
test
not
cmp
fidivr
jbe
scas
mov
add
add
inc
ds
push
jecxz
jae
mov
add
iret
add
addr16
mov
add
add
add
adc
xchg
push
loope
push
adc
xor
jne
add
iret
add
popa
pop
adc
mov
movs
jbe
jg
pop
cmp
push
add
add
add
(bad)
push
or
(bad)
daa
cwde
iret
sti
jmp
jb
sar
xchg
push
mov
adc
jge
xor
mov
push
jns
cmp
outs
mov
mov
fdiv
push
mov
test
dec
add
or
iret
ja
loope
push
adc
xor
fimul
add
xor
fimul
add
jb
mov
or
out
jno
push
fimul
aaa
xchg
lea
stos
fisubr
in
icebp
cmp
pushf
push
mov
jae
jne
xchg
push
jecxz
xchg
mov
mov
mov
(bad)
sbb
xor
push
add
scas
add
jae
and
mov
cmp
mov
jbe
lock
xchg
retf
xor
cmp
jg
push
loope
aad
mov
retf
mov
(bad)
ds
push
or
pop
or
jo
cmp
inc
in
loope
rcl
iret
retf
mov
outs
cmp
add
jecxz
xchg
push
loope
push
adc
fsub
mov
add
jmp
mov
ror
fdivr
pop
mov
mov
mov
fcomp
mov
lods
add
and
ja
mov
fcmovnu
js
xor
sbb
loope
(bad)
dec
jb
lods
mov
push
mov
jae
jge
add
cmp
push
add
dec
add
call
les
lods
jbe
push
xchg
xor
fcmove
enter
aas
jp
mov
(bad)
cmp
lods
hlt
push
mov
cmp
xor
push
pop
test
(bad)
ficom
fimul
(bad)
fimul
add
mov
lods
jbe
scas
lods
cld
enter
xor
shl
add
inc
push
mov
add
iret
mov
repz
cli
mov
(bad)
sar
xchg
push
mov
add
int3
int3
xchg
push
jbe
push
mov
jecxz
xchg
push
add
aad
jne
add
jno
pop
pop
mov
add
jne
mov
push
add
ja
jns
add
xor
jbe
scas
fmul
int3
jge
mov
lods
cld
enter
xor
bound
out
aaa
xor
pop
dec
inc
icebp
shl
mov
mov
fs
xchg
fisttp
int3
jge
mov
cmp
push
mov
(bad)
dec
jb
pop
pop
adc
add
lock
fwait
jbe
jle
mov
mov
mov
cmp
in
push
mov
or
jbe
jne
jmp
repz
or
add
or
push
cld
leave
jae
mov
jae
or
add
or
push
cld
leave
ja
or
inc
ficomp
fmul
xor
rol
pop
or
add
or
push
cld
leave
jae
mov
jg
or
(bad)
push
add
jge
jbe
jle
mov
mov
mov
cmp
mov
push
mov
jge
jbe
jle
mov
mov
popa
pop
repz
mov
push
xchg
retf
xor
or
add
or
push
cld
leave
jae
mov
jg
pop
cmp
push
popa
jne
push
mov
push
xchg
retf
xor
or
add
or
push
cld
leave
jae
mov
jae
or
add
or
push
cld
leave
ja
or
inc
ficomp
fmulp
xor
mov
dec
cmp
mov
ja
aad
add
iret
ja
add
jge
jbe
jle
mov
mov
add
jge
jbe
jle
mov
mov
mov
cmp
cdq
repnz
mov
jge
jbe
jle
mov
mov
add
jge
jbe
jle
mov
mov
mov
cmp
mov
push
mov
adc
xor
or
add
or
push
cld
leave
jae
mov
test
push
or
cli
lock
call
jae
or
add
or
push
cld
leave
jae
mov
test
push
or
cli
lock
mov
fwait
jbe
jle
mov
mov
or
iret
jo
xor
push
or
cli
lock
test
lods
jbe
push
pushf
xor
int
mov
mov
mov
(bad)
pop
pop
adc
add
lock
call
adc
xor
sbb
or
mov
sar
mov
adc
jg
in
pusha
(bad)
push
popa
or
push
mov
xchg
retf
xor
mov
jp
mov
ja
pop
int
lods
xor
addr16
icebp
stc
push
mov
jnp
jne
add
dec
fsubr
push
mov
add
pop
int
lods
popa
inc
stc
push
mov
mov
add
or
jbe
ja
loope
call
pop
push
loope
xor
cmp
add
fimul
xchg
scas
mov
loope
call
mov
add
jbe
sbb
enter
mov
(bad)
cmp
xor
pop
int
lods
(bad)
call
cmp
pop
or
mov
(bad)
dec
jb
pop
xor
(bad)
push
mov
fcmovnb
dec
jb
fimul
add
xchg
retf
xor
pop
sbb
ror
add
ja
popa
leave
hlt
push
mov
ja
jle
aas
test
mov
idiv
jl
iret
add
jns
sbb
or
add
xchg
or
add
icebp
hlt
push
mov
dec
out
mov
add
mov
add
dec
leave
loope
inc
mov
jbe
mov
add
iret
add
mov
scas
jbe
ret
idiv
(bad)
mov
fdivr
mov
ja
jg
jmp
xchg
jnp
jne
add
mov
scas
jbe
int3
fidivr
push
fimul
jnp
jne
add
loope
dec
adc
xor
mov
fcomp
push
add
aad
jbe
scas
fimul
add
xor
fimul
add
and
iret
add
jns
sbb
or
add
fimul
add
iret
add
dec
sub
jbe
scas
mov
add
or
jbe
ja
jecxz
push
mov
cmp
pop
dec
int3
retf
xor
mov
addr16
mov
mov
jb
fcmove
int3
pop
mov
jno
fcmove
fdiv
in
mov
fidivr
push
fimul
(bad)
sub
xor
mov
adc
push
push
push
dec
jne
push
mov
(bad)
fidivr
push
fimul
mov
push
or
push
or
push
or
ret
xor
push
pusha
push
cwde
mov
(bad)
ror
std
push
mov
sti
(bad)
dec
jb
cmp
jno
cmp
pop
(bad)
cmp
xor
push
or
push
inc
xor
cmp
mov
dec
xor
mov
adc
fdiv
mov
mov
add
int3
add
xor
inc
mov
(bad)
cmp
mov
adc
xor
mov
dec
sbb
mov
fmul
xor
int3
mov
(bad)
cmp
xlat
mov
adc
xor
cmp
mov
std
push
mov
cmp
(bad)
xlat
mov
adc
xor
cmp
mov
push
mov
sti
mov
jno
(bad)
mov
(bad)
fidivr
push
fimul
push
fxch
xor
loopne
xor
bnd
mov
adc
iret
push
cmp
push
ja
and
neg
mov
push
add
xor
fimul
ja
and
mov
push
mov
add
loope
sbb
mov
mov
xor
mov
or
ficomp
inc
mov
cmp
stos
lods
jbe
or
(bad)
xor
fimul
add
jno
cmp
mov
adc
xor
cmp
mov
adc
mov
dec
push
iret
add
dec
sbb
lods
jbe
scas
cmp
mov
cld
push
mov
dec
push
and
mov
shl
in
pushf
adc
iret
add
addr16
nop
push
mov
popa
and
xchg
enter
cmp
mov
adc
iret
add
popa
xchg
stc
push
mov
cmp
or
add
xor
cmp
pop
(bad)
mov
loope
dec
adc
xor
lods
mov
fsubr
mov
jg
test
push
loope
dec
adc
xor
lods
mov
fmul
mov
jecxz
xchg
push
jecxz
xchg
push
popa
cs
jbe
retf
out
jb
mov
or
je
mov
add
lock
lods
jbe
cmp
outs
movs
call
mov
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
mov
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
stos
fisubr
mov
add
jle
stos
inc
fnstsw
stos
mov
adc
xor
cmp
mov
ins
test
ja
in
mov
ds
mov
adc
push
xor
push
or
fisub
jp
(bad)
mov
jecxz
test
ds
add
repz
shl
out
push
mov
jnp
lods
or
lea
lods
iret
pop
push
mov
jne
lods
cmp
xchg
xor
add
(bad)
daa
faddp
iret
jne
lods
cmp
cmc
adc
mov
add
dec
cmp
push
mov
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
push
sbb
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
xor
(bad)
push
mov
add
ss
push
mov
add
ss
push
mov
add
ss
push
mov
add
ss
push
mov
add
ss
push
mov
