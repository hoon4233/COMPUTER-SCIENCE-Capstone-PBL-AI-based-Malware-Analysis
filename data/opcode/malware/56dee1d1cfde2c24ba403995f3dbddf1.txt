xor
inc
call
adc
call
jb
ret
(bad)
hlt
add
pushf
hlt
add
add
add
add
add
inc
add
inc
add
dec
inc
add
cmp
inc
pop
dec
push
push
inc
mov
dec
jecxz
sbb
add
push
je
dec
xor
outs
jae
pop
popa
fs
data16
jne
sub
xor
or
push
clc
dec
js
push
gs
ds
cli
mul
inc
outs
inc
jae
adc
ins
sub
test
aaa
jne
xor
mov
fstp
jbe
mov
xor
mov
imul
je
dec
jne
push
xor
pop
sahf
push
shl
jae
push
cmp
jne
push
push
xchg
or
add
jns
in
sub
mov
push
(bad)
outs
scas
inc
cmps
arpl
jno
sub
mov
jae
je
sub
aam
and
jns
push
fadd
lds
adc
jne
je
gs
or
sub
rcr
xor
mov
inc
jb
cmp
sbb
jne
arpl
sti
push
and
arpl
inc
jecxz
addps
call
movs
and
pop
leave
or
push
or
jo
cmp
or
jbe
or
ja
dec
sbb
pop
pushf
sub
ins
gs
out
sub
cmp
add
pop
push
dec
stos
dec
scas
icebp
inc
push
xchg
imul
dec
jb
jno
inc
outs
jne
fs
(bad)
popa
sti
inc
ins
jo
sub
inc
push
test
dec
outs
pop
mov
pushf
jnp
push
and
jno
cmovae
cmps
inc
dec
inc
mov
push
jbe
xor
mov
pop
mov
mov
mov
mov
in
xchg
add
mov
inc
bound
movs
popa
and
dec
icebp
fist
pop
popa
shl
cmp
push
je
(bad)
push
jne
pop
jns
xor
arpl
mov
imul
and
movs
push
push
pop
dec
and
inc
aad
movs
push
fs
enter
pop
cmp
xor
pop
mov
pop
fcom
ins
mov
push
sbb
fnstenv
jno
and
pop
or
fist
movs
ret
sub
push
dec
push
leave
sub
adc
dec
jo
imul
push
inc
pop
into
add
push
adc
arpl
sub
sub
mov
(bad)
(bad)
sbb
or
std
and
xor
dec
cmp
lods
adc
xchg
popf
jo
jne
jo
movs
lea
xchg
sub
inc
or
les
in
dec
inc
xchg
inc
mov
xor
adc
inc
(bad)
jp
fcmovne
jnp
sar
je
fs
sbb
sahf
ins
loop
add
inc
sbb
mov
js
sub
push
clc
mov
inc
ins
data16
leave
pop
jo
push
stos
dec
enter
add
hlt
inc
add
add
call
push
mov
adc
add
or
out
movzx
cmp
test
add
pop
pop
ret
push
xor
xor
push
mov
or
push
push
icebp
fcmovbe
out
enter
(bad)
jb
sub
or
or
adc
out
sub
test
std
inc
add
pop
mov
inc
mov
test
(bad)
movzx
shr
fsubr
or
clc
jae
mov
ins
data16
jo
mov
sar
add
mov
mov
cmp
or
cmp
mov
adc
aaa
clc
and
push
fld
(bad)
mov
sub
pop
cwde
or
push
push
push
cdq
fcmovb
sbb
(bad)
orps
or
ds
add
aam
cld
sbb
pop
inc
mov
add
shl
pop
sub
leave
in
loope
cmp
mov
clc
xor
cmp
cmp
cld
sbb
push
js
inc
inc
or
call
iret
dec
adc
shl
or
xor
dec
jl
pop
bound
inc
push
push
mov
out
pop
shl
nop
pop
or
mov
add
dec
sbb
retf
mov
adc
cmp
ret
inc
add
fiadd
xchg
pop
call
jmp
mov
jge
ins
dec
and
in
call
or
ret
pop
jle
push
(bad)
enter
arpl
test
jne
cli
inc
sbb
push
xchg
adc
pop
lea
xor
jecxz
jmp
mov
ds
add
aas
and
push
jne
dec
adc
mov
add
push
mov
call
test
jecxz
inc
inc
push
lods
mov
fadd
cmp
or
inc
jne
add
cmp
push
push
and
mov
mov
sti
or
pop
add
test
and
lock
push
or
call
neg
and
mov
into
and
lea
rol
add
enter
loop
call
sbb
rol
mov
lea
dec
sbb
xor
mov
jl
(bad)
mov
or
cmp
or
mov
and
push
call
adc
sar
jne
cli
pop
xchg
int3
gs
push
or
mov
xchg
rol
int3
call
adc
in
or
call
fadd
jae
ret
das
mov
inc
cld
clc
cwde
in
xor
mov
and
loop
xor
int3
adc
inc
ror
iret
inc
sub
retf
jne
stos
popa
pop
call
dec
and
repz
sub
cwde
out
gs
jns
mov
mov
jmp
mov
nop
or
popa
add
dec
push
test
sbb
test
pop
in
iret
xor
addr16
(bad)
das
es
fist
addr16
cmp
cmps
pop
mov
fadd
fisttp
and
jne
bound
or
or
call
add
xchg
jl
ret
dec
fst
push
inc
out
push
add
cld
and
mov
sbb
stc
(bad)
out
dec
icebp
iret
add
fisttp
push
jge
lods
push
sub
rol
enter
pop
add
jmp
and
pop
sti
push
push
xor
xchg
push
push
cdq
adc
inc
test
dec
test
dec
sub
jmp
loopne
jae
sub
inc
aam
hlt
push
scas
sti
jbe
fs
add
fld
jb
pop
lods
xchg
adc
pop
call
inc
add
mov
out
seto
shr
retf
xchg
ror
add
add
add
cli
inc
add
add
add
inc
add
outs
add
add
add
inc
cmp
sti
or
inc
push
enter
ja
call
jge
repz
call
or
mov
jmp
mov
mov
or
push
sub
test
adc
into
push
(bad)
sbb
es
pop
hlt
sub
inc
rol
mov
aas
cwde
xchg
mov
shr
push
cmp
into
fmul
jp
js
nop
ffree
mov
mov
inc
push
pop
sub
jno
mov
ja
sub
aas
mov
lea
mov
jmp
stos
push
push
sbb
adc
inc
or
divps
shl
cmps
jp
xor
sub
out
mov
cmp
lds
aaa
adc
jecxz
dec
int
jg
lods
mov
push
cmp
shl
fdiv
es
outs
jne
and
fisttp
out
inc
adc
inc
mov
xchg
repnz
jmp
loope
test
jge
(bad)
jp
xor
push
sahf
mov
dec
inc
mov
dec
push
pop
pop
sbb
sub
daa
arpl
pop
shl
aaa
imul
dec
jmp
cmps
imul
loope
cs
in
das
int3
inc
fiadd
sbb
int3
or
mov
or
shl
add
in
jg
dec
and
addr16
adc
push
mov
int3
addr16
das
xchg
inc
aam
popf
in
loopne
mov
lods
add
sbb
aaa
stos
icebp
call
sub
dec
pop
inc
in
ja
inc
cs
mov
jmp
cmp
push
pop
jp
loop
std
push
cmp
push
dec
lea
popa
popf
repnz
pop
pop
mov
xor
cs
mov
ss
in
mov
pop
xchg
sub
inc
aaa
mov
jns
test
jbe
mov
ins
std
pop
sub
(bad)
sti
sbb
test
nop
mov
fcomp
pop
fcom
(bad)
les
ins
jl
push
and
leave
add
cmps
adc
out
adc
mov
sub
push
test
bound
mov
mov
iret
sar
jae
mov
pop
sub
int3
retf
xchg
cdq
ror
cmp
or
lods
movs
shl
loopne
arpl
dec
pushf
inc
xor
and
loop
dec
ja
sbb
addr16
mov
xor
cdq
sbb
sub
das
scas
mov
cmp
rcl
mov
lea
dec
repnz
sub
test
outs
js
sbb
aaa
push
(bad)
pop
xor
sub
outs
daa
xor
pop
or
test
stos
ins
push
xor
and
xor
lds
inc
(bad)
jmp
aad
addr16
and
or
adc
clc
mul
aad
mov
push
xor
sbb
repz
sub
cmp
lea
jmp
lods
iret
mov
out
inc
fcmovnu
popf
sahf
jb
lahf
push
lea
rol
repnz
jg
and
inc
mov
lea
push
mov
movs
loop
push
cdq
mov
aam
dec
pop
pop
out
jns
pop
test
imul
out
stc
jo
jae
jmp
cmp
mov
fdiv
or
cmps
jnp
cli
lock
outs
push
push
dec
xor
inc
sbb
ja
jo
test
cmc
mov
not
jo
jne
retf
pushf
cmc
jle
ins
shr
adc
jne
dec
pop
shl
jns
jle
in
jnp
stos
cdq
xchg
rcr
mov
jne
into
cwde
sbb
xchg
dec
fadd
(bad)
sahf
adc
test
cmp
cdq
scas
mov
pusha
addr16
mov
fabs
idiv
dec
jg
dec
inc
jecxz
rol
dec
jge
sbb
xchg
jg
mov
mov
mov
adc
lock
push
jo
push
not
jo
loope
sbb
aad
xor
ds
xchg
movs
mov
xor
xchg
(bad)
(bad)
inc
pusha
jmp
adc
xchg
shl
sub
pop
pop
mov
call
into
mov
rcl
mov
in
and
stos
mov
sahf
ret
test
ins
ds
sub
cmp
or
push
mov
call
or
call
cs
mov
outs
pop
(bad)
rol
stc
int
xor
xor
jmp
xchg
fldenv
iret
xchg
sti
push
movs
dec
mov
in
xor
movs
(bad)
inc
or
fistp
imul
mov
pop
lods
dec
sub
call
(bad)
xor
jnp
jmp
ins
or
adc
push
cmp
lods
add
xor
xlat
scas
sbb
push
mov
not
pop
mov
cmp
or
xor
inc
mov
inc
mov
fild
xchg
(bad)
jns
imul
push
pop
int
push
jb
and
and
syscall
add
push
aaa
sbb
repnz
out
pop
rcr
sbb
xchg
test
sub
and
dec
cmp
cwde
inc
movs
xchg
repnz
dec
pop
push
pusha
in
xchg
call
xchg
shl
jae
jmp
mov
adc
xchg
mov
cmps
cmps
push
test
aad
add
pop
repnz
fld
std
loop
int3
pushf
ret
inc
in
ds
hlt
loope
bound
in
mov
fldenv
test
jno
xchg
push
push
xor
and
sub
mov
fld
cdq
sub
imul
stos
jmp
or
jns
cdq
popa
into
test
stos
mov
loopne
fistp
das
xor
cmc
(bad)
into
imul
pop
out
clc
les
xor
sub
pusha
(bad)
ret
popf
mov
cmc
loop
out
clc
inc
test
mov
enter
pop
int
sub
dec
mov
test
inc
cs
pop
xlat
aaa
enter
add
in
sbb
mov
inc
mov
cmp
add
mov
mov
cmp
retf
dec
jno
hlt
(bad)
icebp
sub
pop
adc
fcmovne
sub
arpl
add
add
out
(bad)
mov
stos
retf
jmp
je
call
cmps
dec
daa
xor
pushf
adc
sbb
pop
call
shl
fadd
push
inc
ss
call
pop
mov
cmp
xor
push
je
std
jno
xor
cmp
xor
xchg
xlat
(bad)
xchg
sbb
mov
jmp
sbb
aas
mov
xchg
inc
and
lds
sub
in
cli
jb
call
add
bound
jl
stos
addr16
mov
hlt
cwde
std
mov
or
enter
xor
sahf
push
cmps
add
xchg
or
in
leave
adc
das
(bad)
pop
push
in
xor
xchg
mov
fcom
sub
xchg
sub
mov
pop
mov
adc
das
popa
cmp
sbb
fdivr
mov
adc
imul
leave
rcl
adc
jno
pop
jmp
ins
xchg
ret
push
mov
xchg
pushf
enter
xor
ja
outs
ret
push
movs
(bad)
pop
jmp
imul
sub
ror
jo
jle
sub
jo
push
adc
add
jmp
xor
inc
mov
dec
sbb
add
sub
mov
lds
inc
sti
cli
or
out
sbb
je
call
enter
aaa
cwde
dec
fidivr
mov
mov
daa
adc
jle
fnstsw
(bad)
movs
xor
xchg
loopne
jge
and
leave
push
pop
es
retf
push
jmp
inc
fldcw
lea
shl
stc
popa
jge
xor
xchg
adc
retf
std
push
cmps
inc
test
or
xlat
mov
stos
and
sbb
fs
ins
and
or
mov
mov
jo
lds
int
std
ins
ja
test
clc
ds
jns
cmps
inc
mov
es
imul
(bad)
das
icebp
inc
ds
repnz
mov
shl
cdq
mov
call
pop
jno
sahf
lods
arpl
btc
inc
cld
pop
sub
jbe
movs
imul
dec
and
pushf
mov
add
rol
outs
mov
ss
fmul
pushf
add
cmp
cmp
(bad)
shl
lahf
inc
in
mov
test
sbb
xchg
add
dec
data16
jecxz
inc
data16
aas
into
xchg
mov
or
dec
in
into
adc
inc
ins
mov
cmp
daa
(bad)
(bad)
push
xchg
(bad)
xor
nop
mov
test
add
jle
inc
inc
rol
adc
sub
xor
fsub
jmp
and
xor
adc
dec
jmp
int3
hlt
dec
outs
in
mov
mov
add
outs
pop
push
mov
mov
inc
pop
and
movs
jb
scas
fild
ja
lods
jecxz
sbb
test
jbe
pop
mov
sti
mov
xor
push
shl
scas
(bad)
in
dec
cs
into
scas
loop
movs
test
out
pop
mov
les
stc
cmp
sbb
ins
jmp
pop
lods
or
lea
and
fucompp
rcr
neg
mov
sub
repz
pop
and
aam
mov
pop
ret
mov
enter
mov
jg
pop
fld
inc
jns
jbe
push
call
scas
dec
cwde
ficomp
outs
pop
sbb
xchg
add
aaa
jecxz
js
(bad)
push
mov
stc
add
test
test
stos
(bad)
ror
push
lea
fmulp
or
ss
dec
mov
popa
hlt
out
lods
popf
inc
je
bound
xor
sti
retf
and
push
sub
jae
aas
shl
mov
outs
jle
fdivr
xchg
(bad)
arpl
cmps
imul
mov
fidivr
and
cmps
dec
stos
in
push
jne
mov
popf
push
pop
in
stos
cmp
enter
jl
sbb
ffree
in
pop
mov
mov
jmp
retf
rol
(bad)
(bad)
sub
mov
out
pop
sahf
and
cmp
jo
jno
cmp
fimul
jle
repnz
push
push
xlat
jl
jl
aad
rcr
retf
xchg
or
out
mov
adc
or
xchg
push
push
inc
sbb
mov
into
pop
cmp
mov
into
das
data16
ror
(bad)
push
scas
fs
mov
clc
xchg
sahf
push
icebp
repnz
sahf
dec
or
aam
xor
push
mul
lods
inc
xchg
(bad)
xchg
cmp
mov
mov
pop
aam
movs
mov
mov
out
cmp
sbb
fwait
and
xor
arpl
xor
mov
adc
xor
sub
pop
jmp
xor
adc
ror
out
mov
xchg
das
stos
push
stos
aaa
jo
cdq
repz
mov
movs
and
fs
call
mov
inc
ins
sub
mov
mov
imul
sbb
xor
adc
jae
sub
mov
rcr
cmp
repnz
cmps
imul
fcomip
lea
mov
fbld
ret
add
mul
dec
ficomp
and
div
mov
adc
push
mov
and
fisttp
sub
shl
lock
jge
iret
(bad)
arpl
adc
dec
xchg
movs
cmp
sbb
sbb
in
dec
add
add
cs
int
lea
loop
inc
movntps
cdq
fwait
aad
mov
hlt
je
stos
cwde
mov
pop
push
add
dec
sahf
fadd
(bad)
jno
pop
adc
fsubp
pop
xchg
and
fistp
inc
pop
push
dec
cmp
xchg
push
fwait
add
jmp
inc
jae
sub
ret
repz
adc
xchg
push
mov
or
push
lea
pop
mov
dec
mov
jne
xchg
dec
sahf
mov
sub
push
test
rcr
mov
dec
call
dec
xchg
mov
pop
stc
jb
ja
into
jl
jnp
or
iret
adc
movs
jl
mov
cmp
ins
jl
mov
mov
mov
dec
xchg
or
and
jnp
inc
leave
rol
jmp
mov
mov
cmc
cmp
push
mov
mov
push
loopne
and
xlat
dec
push
xchg
scas
bound
pop
out
aas
sbb
cmps
and
xor
clc
rcr
shl
pop
push
lahf
mov
mov
aas
loope
mov
xor
js
inc
popf
retf
(bad)
sub
sub
pop
ds
cli
jnp
xor
loopne
loopne
cmc
repnz
sbb
jns
inc
jle
pop
sub
test
div
cmps
jnp
cs
(bad)
pop
dec
bound
push
lods
test
scas
xchg
and
adc
cmps
(bad)
and
push
ds
mov
es
iret
add
pop
xchg
push
xchg
xchg
fwait
ins
mov
sbb
jmp
mov
aaa
sub
leave
je
clc
and
(bad)
sahf
sub
iret
jne
ins
inc
cli
ss
aas
iret
call
mov
(bad)
cmc
ss
idiv
aas
xor
xchg
push
mov
and
pop
pop
add
dec
ror
idiv
sub
mov
mov
sub
add
mov
inc
jle
ret
mov
in
pslld
call
add
mov
pusha
shl
jno
sub
xor
clc
addr16
sub
mov
in
xor
add
mov
mov
or
fadd
cwde
mov
cli
loope
jmp
and
clc
popa
cmp
pop
rcl
cmp
scas
push
fcomp
push
mov
(bad)
mov
in
xor
ss
loopne
push
adc
js
or
fmul
into
dec
push
mov
clc
aam
int
jge
sub
rcr
dec
inc
sbb
int3
fidiv
mov
inc
push
push
add
xor
xor
pop
cs
sub
cmp
inc
inc
ds
addr16
pop
stos
mov
mov
ret
cmps
mov
int
mov
in
xchg
xchg
je
fwait
or
lahf
outs
mov
or
lds
mov
dec
add
push
fld
(bad)
jae
cdq
sar
loope
mov
jno
lods
lahf
js
sbb
mov
cmp
test
sub
sub
stos
jmp
mov
repnz
mov
iret
outs
pusha
push
mov
pop
jmp
rcr
ins
sbb
lea
cvttps2pi
push
ret
or
imul
mov
xor
dec
add
xchg
imul
out
jbe
into
cdq
adc
out
sbb
adc
push
sub
sub
add
(bad)
nop
aam
dec
cmp
sub
lds
and
(bad)
clc
in
es
cdq
push
push
mov
rcl
shl
(bad)
push
xchg
shl
push
adc
and
clc
sbb
cli
push
daa
mov
fisub
ror
xchg
mov
repz
jg
xchg
iret
and
xlat
das
jg
adc
cs
pop
inc
mov
arpl
sub
aam
sti
(bad)
nop
or
shl
shl
push
lds
cmp
sbb
lods
js
scas
test
push
add
push
call
addr16
mov
mov
scas
mov
aad
jne
or
mov
(bad)
cmc
jbe
adc
bound
fsubp
lods
mov
ins
icebp
das
push
sti
xchg
dec
fs
add
fs
cmps
mov
or
sub
aas
sar
fwait
popa
dec
(bad)
leave
and
jmp
cmps
sbb
fisub
hlt
jp
jo
test
sub
sub
test
cli
int
push
adc
dec
sbb
mov
or
jae
sbb
pop
stos
and
loopne
gs
mov
(bad)
and
lds
out
out
outs
inc
das
mov
cmp
frstor
cmp
sbb
stos
pusha
imul
cmps
xlat
fs
(bad)
pop
arpl
sbb
outs
adc
inc
retf
aad
clc
shl
mov
loopne
adc
lods
sbb
cld
push
stc
mov
nop
jg
outs
mov
sahf
ds
lods
cwde
jp
xor
aam
daa
in
push
mov
ret
mov
and
rcl
call
cmp
push
loop
jns
push
aad
into
jnp
mov
ja
inc
(bad)
out
minps
or
cmp
loopne
cmp
lds
xor
cmp
into
jg
shl
mov
and
cmps
mov
lods
dec
push
jle
in
sti
sbb
fdivr
xor
out
rcr
xor
(bad)
mov
sub
inc
mov
mov
je
mov
xor
lock
cli
xchg
or
into
sbb
cli
gs
jmp
out
fs
jmp
jle
sbb
popf
fisubr
xor
adc
pop
mov
inc
and
mov
in
mov
cmp
push
push
lock
sub
fcom
popa
ds
jne
dec
push
mov
mov
popf
add
sub
mov
xor
push
push
xchg
hlt
pop
push
jns
jnp
bound
pop
imul
adc
movs
xchg
or
push
test
jne
outs
mov
mov
inc
clc
shl
mov
jo
test
scas
xchg
adc
shl
jo
fisub
iret
in
sahf
into
jmp
outs
xchg
pop
stos
mov
cmp
xor
mov
mov
shr
outs
xor
stos
jge
inc
gs
push
aas
jbe
pushf
push
(bad)
enter
sahf
cld
pop
not
mov
outs
sub
push
into
shl
out
sbb
pusha
jge
jno
lods
or
out
jecxz
dec
lds
nop
(bad)
call
iret
xchg
mov
int
fdiv
(bad)
imul
mov
or
je
pop
and
xchg
test
jl
movs
movs
fistp
push
mov
out
outs
cdq
mov
pop
stos
call
(bad)
in
int3
dec
xor
lods
jle
mov
xchg
ins
jmp
div
jb
cmc
pop
lods
or
ret
sbb
or
inc
dec
fistp
dec
add
(bad)
out
ds
test
jno
test
bound
jmp
push
sar
mov
mov
jl
jge
sbb
aaa
push
dec
ja
iret
pop
repnz
das
mul
add
xlat
imul
jmp
mov
sbb
add
sbb
and
sbb
mov
cmp
fsubr
xchg
jecxz
aam
sub
(bad)
scas
in
add
cwde
add
mov
pop
stos
push
stos
imul
mov
pop
lea
call
push
jmp
js
push
jl
imul
adc
rcl
adc
enter
mov
fsub
pop
cmp
push
dec
mov
jmp
std
add
add
je
in
rcl
add
mov
mov
mov
fld
push
add
adc
lahf
and
pop
shr
mov
mov
ss
and
retf
ds
mov
push
jns
shr
mov
ds
add
arpl
(bad)
dec
fild
lods
or
mov
mov
ss
test
fcmovbe
cdq
or
push
shr
nop
repz
out
jmp
xchg
pop
fstp
cmp
jno
mov
(bad)
sbb
jb
xor
daa
xchg
push
ffreep
hlt
(bad)
push
xchg
cwde
test
pop
mov
mov
sub
dec
xor
push
and
jl
pop
mov
sbb
cmp
je
iret
xor
push
sahf
add
and
(bad)
fstp
and
in
mov
(bad)
addr16
xchg
outs
outs
adc
adc
push
hlt
adc
sub
jp
outs
sub
rol
adc
jge
adc
jb
imul
cs
repz
arpl
pop
rcr
adc
push
push
push
inc
fs
sti
add
xchg
aaa
mov
bound
mov
xchg
outs
xor
push
iret
xchg
mov
aas
inc
shld
test
hlt
and
arpl
pop
xchg
scas
clc
shr
jae
repnz
(bad)
loope
push
or
xor
inc
or
arpl
gs
cs
int3
mov
repz
sub
ret
push
icebp
sbb
cmp
iret
mov
xchg
xchg
inc
inc
ret
pop
adc
mov
jo
mov
(bad)
pop
mov
ret
xchg
icebp
sub
pop
mov
(bad)
dec
aas
or
xchg
popa
and
loop
and
ret
in
loope
adc
lods
gs
repnz
mov
mov
push
add
cmp
dec
push
pop
xor
pop
mov
mov
mov
cld
mov
out
mov
sub
or
arpl
add
sbb
xchg
int
cli
stos
push
inc
pop
jb
sbb
pop
scas
cmps
ror
or
inc
ss
mov
or
jp
inc
nop
push
sbb
loop
fild
pop
adc
mov
fdivr
sub
xor
int3
add
and
mov
cwde
ins
cmp
idiv
jns
sub
push
and
inc
cli
imul
and
or
test
push
mov
sub
outs
sub
add
jmp
out
int3
fld
pop
(bad)
adc
and
data16
jl
aad
mov
stos
pop
rol
add
scas
xor
adc
inc
lea
arpl
inc
mov
retf
sub
shl
pop
fs
fstp
add
xchg
pop
je
xchg
cmp
push
cwde
sbb
inc
adc
pop
ret
and
jmp
rol
(bad)
aam
repz
pop
jno
push
adc
ins
xchg
pop
xchg
(bad)
jne
in
mov
push
dec
cdq
xchg
pushw
mov
stc
aas
xchg
adc
sub
inc
push
push
in
outs
jae
mov
or
test
jne
ficomp
in
lahf
hlt
pop
call
push
les
stc
out
push
pop
cmp
in
pusha
test
gs
icebp
fwait
xor
aad
lds
or
shr
xor
dec
(bad)
xchg
aas
aas
in
sbb
jecxz
aaa
cli
and
cdq
jbe
test
xchg
sar
sub
add
mov
mov
cwde
cmp
mov
dec
push
test
stc
rcl
scas
push
xchg
inc
int
shr
mov
dec
test
mov
popf
pop
repz
add
js
std
and
rcr
les
movs
cmp
adc
jmp
in
lds
leave
clc
enter
pop
in
push
(bad)
push
hlt
hlt
mov
mov
pop
lahf
cmp
mov
fcmove
and
popf
rcl
popf
js
movs
dec
icebp
xor
inc
mul
test
pop
call
mov
mov
shr
movs
xchg
push
mov
cwde
or
xor
out
and
test
pop
fisub
pop
fucom
mov
mov
test
push
push
scas
dec
xchg
cwde
imul
or
dec
ret
(bad)
cwde
fld
ins
lods
jge
stc
inc
pop
loopne
sbb
test
inc
xor
xor
sti
xchg
sbb
push
jle
jmp
sub
std
or
fsin
shl
lods
ds
(bad)
cmc
jo
sbb
(bad)
push
cmps
xor
push
jb
ret
mov
call
mov
sar
add
test
push
shl
adc
shl
dec
mov
lds
and
daa
pop
ins
(bad)
push
xor
fcmovne
mov
jb
jno
imul
mov
cdq
dec
out
mov
lea
and
jge
dec
fsub
mov
aad
add
sub
stos
mov
iret
cmps
dec
lahf
mov
sbb
jo
leave
push
xchg
xchg
xchg
dec
das
cld
popf
xchg
div
repz
test
sbb
(bad)
ror
xor
sbb
add
cmp
push
arpl
or
xor
in
and
movs
xchg
push
add
push
cmp
push
dec
jns
mov
loope
fcom
leave
adc
mov
jge
test
mov
fadd
in
push
xlat
sbb
imul
or
ja
xor
ins
ins
rol
sbb
sbb
mov
jne
add
adc
fucom
stc
dec
out
repnz
pop
lods
jge
fs
aad
adc
mov
(bad)
out
dec
loop
scas
test
arpl
jl
sub
or
cmps
cli
out
jbe
stos
xchg
inc
outs
xor
outs
mov
and
mov
aam
mov
xchg
pop
mov
xor
cmp
jb
jecxz
add
add
ins
mov
std
fiadd
aam
jno
(bad)
xchg
xor
inc
sbb
fmulp
loopne
sbb
inc
pop
stos
mov
jg
xchg
je
inc
scas
or
and
adc
aad
mov
push
inc
or
in
jg
dec
xor
daa
imul
daa
fisub
xchg
ror
lock
scas
jb
xor
int3
sahf
add
jo
rcr
in
xchg
ret
jle
add
loope
js
mov
(bad)
enter
xor
aas
movs
sub
sti
inc
iret
cmps
xchg
sbb
push
or
ds
adc
retf
jns
pop
repnz
jb
mov
add
jmp
imul
repz
xor
aaa
movs
std
cmp
bound
mov
mov
add
push
(bad)
or
sar
shl
mov
inc
ins
or
mov
(bad)
out
xor
add
push
inc
imul
call
int
aaa
xchg
pop
rcr
sbb
(bad)
aas
fsub
xor
mov
or
or
or
add
add
xchg
retf
sti
jl
push
xor
out
or
fstp
cmp
jl
je
xchg
jecxz
sub
inc
add
inc
and
dec
xchg
lds
ror
lock
pop
iret
jb
sub
adc
les
xchg
test
push
mov
cmp
and
jbe
out
outs
in
repnz
mov
fdivr
dec
push
scas
fstp
outs
mov
adc
mov
scas
mov
mov
gs
ja
ds
jl
fdivrp
jl
fwait
pop
es
mov
fcompp
ss
add
cld
fidivr
(bad)
fdivr
movs
frstor
inc
mov
cld
adc
popf
mov
and
sbb
jns
xchg
and
mov
or
retf
pop
cmp
jle
or
add
jbe
imul
in
imul
outs
add
xchg
hlt
sbb
jne
pop
jle
fstp
mov
jmp
mov
rcr
dec
jno
dec
lods
mov
mov
shl
fcomp
mov
cmp
(bad)
loope
fiadd
call
push
ins
mov
aas
lods
stc
mov
mov
pop
mov
push
jno
fst
sub
mov
movs
and
sahf
xor
cld
mov
fsubr
and
adc
aad
pusha
mov
xlat
cmp
jmp
mov
xchg
cmp
(bad)
int
dec
push
fwait
cmp
mov
int
je
add
jbe
rol
mov
adc
pop
jmp
rcl
loop
xor
cmp
cmps
push
shr
push
push
xchg
dec
mov
dec
pop
stos
inc
sbb
mov
(bad)
fist
jmp
aaa
pop
or
jnp
mov
bound
movs
xchg
(bad)
pop
test
js
push
daa
test
mov
js
inc
pop
mov
retf
mov
out
loop
mov
out
test
pop
ds
cs
lahf
inc
aas
jno
movs
jbe
mov
cmp
rcr
out
sbb
daa
pop
add
arpl
add
out
aad
dec
(bad)
mov
popf
lea
inc
push
jno
shl
(bad)
lods
xor
jae
mov
mov
xor
test
lods
in
and
retf
enter
push
inc
(bad)
pop
imul
(bad)
(bad)
in
jecxz
pop
xchg
lds
rcr
data16
jge
ins
das
and
in
jns
rol
addr16
jle
jge
cmc
jecxz
or
dec
repnz
cmps
(bad)
pop
adc
xor
mov
jmp
dec
pop
and
adc
lock
in
js
cmp
xor
call
call
pop
sahf
sbb
mov
out
sbb
shr
loopne
mov
mov
imul
mov
jno
(bad)
and
daa
stos
movs
mov
push
outs
pop
sub
adc
(bad)
aam
add
out
sbb
xor
jle
xor
sti
xchg
retf
and
add
mov
inc
into
imul
mov
ins
mov
or
jnp
mov
or
sub
arpl
aam
popf
mov
pushf
outs
add
imul
ror
mov
popa
movs
xor
in
add
pop
pop
fdivr
mov
out
sub
jnp
xor
mov
test
js
pop
mov
ja
jmp
jge
(bad)
fs
in
je
sbb
repz
sbb
dec
add
out
fwait
mov
push
imul
cmp
lods
fdivp
adc
leave
bndstx
mov
cld
cdq
xor
or
xor
iret
loop
pop
dec
sub
xchg
pop
xchg
jge
cmps
mov
and
mov
mov
fnstenv
daa
pop
sub
xchg
jbe
test
push
aam
lahf
inc
dec
aaa
and
retf
dec
daa
push
push
jmp
scas
mov
sar
pop
mov
div
scas
jle
add
sub
das
into
push
mov
sub
or
adc
fwait
popa
sbb
sub
jnp
mov
pop
dec
mov
fmul
jb
jg
jne
fcom
push
imul
xor
jns
cmp
push
mov
jmp
leave
mov
mov
sbb
sbb
ja
pop
mov
ror
mov
nop
jns
push
shl
inc
leave
sbb
call
call
xchg
or
fiadd
out
retf
mov
jle
lock
addr16
call
mov
aaa
adc
pop
cmp
test
mov
push
rcr
imul
or
cmp
inc
lds
jge
movs
add
rcl
xlat
pop
pusha
lock
test
nop
fstp
and
pop
mov
jmp
jp
lahf
inc
mov
dec
pop
out
movs
dec
aas
ret
int
in
mov
loop
sub
add
aaa
mov
xor
scas
hlt
scas
into
xchg
pop
call
jle
ds
lahf
aam
cmp
xor
xchg
xchg
iret
push
sbb
or
mov
daa
pusha
push
fwait
mov
cmp
test
fadd
push
sub
cmp
into
dec
popa
frstor
adc
and
and
data16
and
and
ins
jecxz
or
pop
jl
shl
data16
dec
push
mov
ret
cdq
rcr
out
mov
cmps
jp
jmp
movs
clc
ret
pop
push
add
lods
and
mov
or
dec
sbb
ret
pop
js
add
sbb
xor
cmp
jmp
scas
pushf
mov
sub
push
js
inc
loopne
leave
lods
loope
in
xchg
mov
mov
mov
jne
leave
and
ror
push
adc
les
mov
push
mov
xor
in
pop
mov
inc
jbe
dec
stos
mov
inc
test
push
cwde
dec
mov
add
loope
cmp
or
fidiv
jne
pop
mov
idiv
sbb
fucomp
xor
int
jmp
mov
pop
mov
add
inc
jmp
in
ja
sahf
sub
mov
lea
inc
dec
iret
sbb
cmp
imul
mov
and
adc
xor
scas
push
dec
jmp
jp
ret
int3
pop
faddp
dec
adc
cdq
mov
add
push
stc
outs
popf
or
and
mov
rcl
dec
fcomp
data16
ret
jns
in
jl
or
out
cmp
(bad)
sbb
sub
add
add
sti
retf
push
mov
pushf
inc
or
(bad)
stc
and
bound
lds
cmp
mov
ss
sub
add
fld
idiv
jns
or
enter
fst
pop
inc
dec
xor
sti
mov
push
mov
sar
ins
retf
daa
inc
test
and
pop
fist
fdivrp
js
(bad)
adc
sub
fwait
stos
(bad)
fst
xchg
jp
mov
pushf
push
jo
(bad)
(bad)
pop
add
ja
or
and
mov
jg
jns
sar
sbb
imul
mov
mov
(bad)
shl
pop
sub
out
ret
adc
aam
jle
ds
cs
loopne
lahf
clc
xor
adc
cli
clc
lock
push
mov
iret
dec
inc
inc
pusha
adc
lods
inc
test
adc
mov
dec
sti
xchg
pop
mov
repz
push
dec
inc
add
sbb
stos
mov
mov
inc
jae
adc
out
jnp
xchg
mov
add
push
inc
(bad)
les
hlt
icebp
out
aad
inc
out
xor
adc
outs
push
mov
lock
and
cmp
inc
jns
dec
jge
xchg
xor
lods
fmulp
jmp
sti
add
mov
adc
icebp
call
icebp
xor
xor
out
outs
enter
mov
push
loopne
scas
adc
ror
rol
mov
les
push
ins
rcr
jmp
das
imul
scas
jo
dec
mov
lahf
lods
xchg
test
xchg
adc
mov
(bad)
or
pop
ret
add
xor
sbb
or
mov
push
es
fistp
je
jae
add
ret
loope
ror
mov
mov
dec
hlt
dec
inc
test
sub
inc
jge
test
stc
fidiv
mov
ret
sahf
sub
or
(bad)
jne
mov
fwait
xchg
loopne
sti
sub
outs
test
adc
or
add
shr
jge
and
(bad)
mov
mov
addr16
or
movs
cli
fadd
scas
rcr
inc
outs
pop
xchg
in
(bad)
xor
push
adc
test
xchg
mov
lods
(bad)
rcr
data16
outs
fnsave
lods
jmp
test
mov
pusha
cli
sar
loop
mov
jge
mov
add
mov
pop
test
repnz
fnstenv
add
mov
push
jecxz
jne
jmp
fldcw
adc
mov
mov
pop
retf
jp
add
jecxz
arpl
or
xchg
aaa
lahf
(bad)
xor
and
mov
loope
clc
(bad)
cli
mov
dec
dec
movs
push
jo
in
push
and
cld
loop
pushf
lods
cmp
jns
xchg
fdivp
add
rol
jmp
cld
cs
inc
pusha
sub
add
ds
mov
daa
addr16
cdq
inc
pushf
adc
add
push
push
hlt
int3
and
lock
sbb
sub
sbb
stos
cmp
cli
outs
fisttp
add
sti
inc
lods
push
shl
test
push
and
jae
cmp
rcl
inc
lds
xor
and
dec
and
dec
or
outs
xchg
int
mov
jo
sub
cmp
pop
jmp
xchg
cmpxchg
adc
pop
loopne
xor
xchg
shl
fstp
sub
inc
mov
lds
xchg
jnp
loop
mov
push
pop
clc
add
std
ffree
mov
shl
aaa
cli
adc
nop
xor
jmp
ret
cmp
(bad)
int3
and
pop
ret
in
mov
mov
cmp
pop
jno
pop
mov
loop
or
ror
xchg
sbb
cmp
mov
pusha
dec
xchg
sub
cmp
jmp
push
gs
retf
jg
imul
xor
lock
and
js
push
push
xor
stos
xchg
adc
mov
xchg
adc
fistp
sbb
or
cmp
mov
dec
daa
pop
cmp
jmp
xchg
mul
out
stos
jp
enter
xor
sti
mov
xchg
pop
add
xchg
pusha
xchg
or
stos
pop
sbb
mov
movs
jge
ins
inc
paddsw
arpl
out
sub
jns
in
paddusb
lahf
scas
pusha
int
add
shr
call
sti
jl
into
add
mov
push
std
pop
push
(bad)
jb
lds
push
mov
xchg
jp
dec
rol
scas
mov
sbb
(bad)
outs
push
int3
fdivr
arpl
and
mov
xchg
or
xchg
test
mov
ins
or
xchg
jle
hlt
cmp
pop
jg
std
loopne
out
ret
mov
or
clc
fst
stc
pcmpgtb
jecxz
cmp
arpl
mov
es
lods
data16
inc
call
sub
cwde
std
or
mov
adc
and
cmps
mov
inc
inc
xor
or
dec
fidivr
sub
(bad)
lahf
pushf
sub
adc
mul
pop
sub
adc
xor
sub
inc
stos
cmps
inc
xchg
mov
mov
lds
jg
clc
dec
mov
ds
push
cli
push
mov
add
test
or
inc
or
push
inc
sub
and
xor
ja
sar
dec
outs
ins
mov
sub
push
stos
sub
mov
out
stos
adc
push
xor
mov
retf
push
adc
push
(bad)
sbb
push
into
jge
cmp
loopne
(bad)
push
xchg
cs
int3
pop
sbb
mov
pop
mov
pop
xor
jecxz
add
loop
cmp
inc
sahf
ret
jecxz
data16
repz
adc
push
and
mov
hlt
sbb
out
sub
bound
push
aam
popaw
arpl
pop
cmps
movs
xchg
sbb
stos
pop
in
adc
leave
fwait
mov
test
aaa
fadd
leave
imul
rcl
inc
nop
adc
hlt
add
add
pop
adc
pop
lods
imul
xor
xchg
sahf
and
jno
push
inc
in
push
jae
add
sub
call
rol
jecxz
and
std
mov
dec
das
jne
pushf
je
fs
xor
push
ds
ins
push
sub
ja
loope
(bad)
scas
and
or
or
sbb
ficomp
js
mov
xlat
mov
pop
mov
lahf
leave
cmc
adc
lea
push
imul
or
out
push
xchg
(bad)
hlt
iret
add
jmp
test
lods
adc
mov
and
xchg
add
shr
call
push
jge
and
stos
push
out
pop
ror
int3
cmps
fwait
sbb
jecxz
mov
dec
int
jecxz
sar
aam
sbb
mov
jo
int
add
jnp
fadd
fdivr
repz
pop
push
sub
lock
cmp
bound
gs
stos
or
(bad)
int
or
out
pop
and
call
sub
sahf
mov
aad
adc
pop
aaa
(bad)
(bad)
sub
cmp
xor
aas
cmp
inc
mov
fmul
(bad)
fdiv
mov
int3
aad
int3
mov
ret
push
lock
adc
data16
(bad)
or
adc
aad
daa
mov
dec
std
cwde
xchg
repnz
mov
mov
and
ret
push
nop
mov
outs
pop
jns
fwait
jns
test
(bad)
retf
dec
ss
hlt
ret
mov
popa
(bad)
sti
jge
xor
add
in
mov
and
push
mov
or
pop
test
fwait
dec
retf
sbb
xor
cmp
jns
stos
mov
shl
or
add
inc
leave
cmp
(bad)
push
imul
sub
loope
mov
(bad)
jmp
xchg
jp
pop
mov
scas
and
fstp
dec
(bad)
fcom
arpl
scas
lahf
xor
lods
out
pop
sbb
call
jbe
adc
aas
adc
mov
mov
out
fstp
add
rcr
call
ins
jmp
and
xor
bound
pop
pop
push
add
out
call
pop
sbb
ficom
add
xrstor
int
inc
xchg
neg
retf
push
mov
imul
push
jo
xor
(bad)
or
sbb
cld
clc
mov
jge
cmp
xlat
add
sub
movs
push
call
add
or
lods
shl
or
lahf
mov
mov
int3
inc
hlt
in
test
mov
jns
xor
rcr
sti
jmp
or
jns
xchg
lds
pop
dec
adc
mov
add
push
(bad)
lds
ds
stos
dec
fistp
aad
add
xchg
jne
mov
nop
inc
dec
mov
xor
cwde
or
mov
out
xor
out
inc
adc
xor
cs
in
and
adc
jo
lahf
cwde
jb
mov
cli
xchg
stc
pop
popf
or
cdq
adc
mov
(bad)
loopne
call
mov
leave
inc
mov
rol
mov
mov
xor
aaa
push
lahf
in
pop
stc
pop
pop
pop
fsubp
int
imul
(bad)
sub
popw
jo
addr16
test
mov
call
pop
addr16
mov
sub
daa
cld
pop
aaa
xchg
and
adc
je
call
inc
shl
das
inc
lock
loope
inc
add
lods
cwde
mov
(bad)
xor
aaa
jo
test
pop
sbb
mov
push
fisubr
cmc
mov
movs
adc
ss
mov
pop
push
sbb
xor
jmp
scas
dec
stc
and
sub
inc
gs
addr16
cmps
mov
iret
mov
push
fiadd
pop
add
lods
jecxz
xor
xor
mov
xor
jae
enter
cmp
add
call
or
inc
sub
inc
bound
xor
sbb
ds
dec
idiv
jo
dec
jnp
mov
in
adc
scas
fldcw
push
and
std
retf
dec
xchg
scas
mov
gs
add
outs
aad
les
fucomip
dec
inc
or
iret
mov
and
(bad)
rol
int
loope
fstp
cmc
cld
pusha
xor
cld
push
xor
inc
std
xor
test
sub
repnz
cmp
bound
sbb
ret
out
or
sub
or
xor
push
call
and
data16
mov
cmp
fisttp
xchg
out
cmp
dec
mov
add
and
das
sahf
repnz
pusha
mov
pushf
or
imul
mov
sub
into
enter
ins
mov
jb
mov
or
cmp
adc
cmp
adc
jecxz
stos
int
xchg
cwde
xchg
sub
add
push
xor
push
mov
xlat
aaa
into
mov
movs
ins
addr16
inc
mov
push
xchg
shl
fidivr
adc
mov
cmc
cmps
pop
mov
inc
pop
cmp
mov
rcr
sub
frstpm(287
neg
or
rcl
mov
gs
jae
sti
repnz
clc
lock
add
xchg
test
cld
scas
mov
sbb
repnz
lds
(bad)
adc
or
cmp
pop
pop
sub
jne
(bad)
aaa
cmc
(bad)
mov
sub
mov
jns
cmp
retf
cwde
aaa
pop
dec
inc
retf
lahf
repnz
adc
and
mov
call
sahf
jl
or
adc
mov
sub
mov
lea
inc
ja
xchg
sub
(bad)
lods
dec
outs
jmp
fadd
jae
sub
mov
sbb
pusha
inc
and
mov
shr
mov
add
mov
outs
fdivr
and
sub
and
jnp
mov
loopne
pop
pop
pop
aas
mov
and
or
pop
leave
cmps
jbe
lods
pop
adc
xchg
adc
fs
sub
fs
add
mov
movs
push
ss
repz
fild
xor
xchg
add
mov
xchg
pop
repnz
xor
pop
or
push
rcl
cmc
int3
add
popa
(bad)
jp
push
or
in
in
clc
jge
ja
mov
mov
push
jno
and
into
xor
jns
test
ror
imul
cmps
ss
retf
dec
jle
cwde
movs
nop
or
sbb
test
mov
mov
jbe
push
jne
imul
idiv
(bad)
(bad)
jno
fsub
cld
pushw
push
cmp
(bad)
imul
cmp
mov
bound
push
cmp
aad
mov
sub
mov
aam
ins
push
pushf
dec
test
mov
adc
mov
push
popf
pop
(bad)
adc
jmp
je
or
pop
and
pop
sti
call
pop
add
pop
adc
(bad)
enter
fstp
movs
push
add
jne
pushf
loope
(bad)
pusha
call
out
sbb
jp
jno
data16
dec
push
adc
jae
jp
fdiv
inc
popa
out
jl
xchg
js
adc
dec
push
daa
adc
inc
and
aam
xor
ret
add
mov
push
lea
mov
mov
add
loope
adc
push
adc
sbb
jno
loop
cmps
or
dec
mov
lock
mov
mov
push
dec
mov
rcl
inc
add
stc
lahf
and
push
retf
pop
pushf
shl
aaa
lock
pop
sbb
xchg
in
mov
push
shr
lock
lahf
(bad)
int
movs
sub
sbb
push
push
scas
jp
cmp
pop
xor
and
dec
or
push
clc
xor
cmps
js
push
dec
ds
mov
sbb
xchg
sti
loop
xor
pusha
scas
dec
inc
xor
xchg
cmp
xchg
nop
mov
jbe
mov
mov
jge
xor
pushf
push
xor
pop
adc
cmp
adc
mov
xor
mov
mov
retf
or
scas
sbb
inc
jle
jmp
xor
or
repz
stos
gs
nop
inc
push
push
bnd
lds
jne
push
test
xor
mov
ja
hlt
and
mov
mov
cld
jg
adc
ret
push
cmp
mov
dec
(bad)
lahf
fist
popf
jno
sahf
neg
xchg
xchg
mov
cmp
jb
sar
fimul
pop
xchg
mov
jno
cwde
jp
das
jmp
cmp
mov
mov
cmps
xchg
and
xchg
inc
iret
xchg
in
test
ins
cdq
stos
sub
sbb
and
mov
lods
pop
xchg
out
mov
push
sub
xor
arpl
push
or
gs
shr
mov
mov
test
sbb
int3
push
push
test
mov
push
leave
inc
ret
fild
aaa
and
ror
push
and
imul
jne
iret
aaa
inc
push
sbb
mov
clc
dec
xchg
mov
imul
fnstenv
xor
add
mov
outs
sar
xor
xchg
neg
and
xchg
sbb
bt
mov
pop
xlat
jg
or
inc
and
mov
jns
sbb
xor
fnstcw
mov
sahf
cmps
aam
mov
jmp
in
cs
jp
sub
adc
sub
mov
in
shl
pop
outs
mov
xchg
jo
inc
rol
dec
cmc
repz
fcom
xor
or
je
or
(bad)
imul
(bad)
mov
xor
pop
xor
(bad)
pushf
movs
jb
xchg
in
xchg
repz
ficom
sbb
inc
int
lods
loope
mov
imul
rep
cmps
int
loop
pop
mov
and
repz
xor
jp
pop
xor
and
cmps
dec
mov
adc
test
push
fs
(bad)
jne
cmp
add
(bad)
pop
or
mov
popf
fwait
and
push
sbb
jae
or
jno
fisubr
or
jle
xor
push
pop
mov
shl
sbb
out
mov
mov
push
rcl
lea
pusha
or
scas
mov
sub
mov
adc
fstp
jae
inc
gs
scas
dec
xor
ret
mov
and
push
xchg
bound
mov
movs
jl
sub
pop
aam
adc
mov
xchg
push
push
test
mov
xor
adc
test
sbb
pop
fstp
mov
jnp
shl
mov
shr
sbb
aam
jbe
dec
jnp
dec
aam
xor
pop
inc
in
xor
ja
mov
popa
repnz
fdivr
cmc
mov
movs
sub
cmp
and
push
inc
cdq
ror
popf
aas
and
pop
stc
xor
dec
retf
cmps
je
stc
inc
cmps
and
in
clc
mov
and
repnz
mov
pop
jmp
mov
pop
test
and
pop
sub
sbb
dec
jae
mov
cmp
push
pop
ja
or
sub
(bad)
mov
retf
ret
dec
mov
ret
lea
aam
not
mov
jge
dec
and
mov
jno
(bad)
mov
jmp
xlat
ror
dec
stc
iret
push
out
mov
jg
ja
(bad)
mov
(bad)
fstp
cmp
not
xlat
arpl
stos
dec
jp
mov
cmps
ja
inc
adc
pop
push
call
sub
cmp
xor
scas
cdq
cmc
test
mov
imul
std
inc
xchg
icebp
nop
sub
adc
inc
adc
pop
push
dec
mul
xchg
(bad)
push
pop
(bad)
stos
inc
dec
daa
or
cwde
jbe
cli
jne
(bad)
cmp
and
sar
rol
xlat
mov
repz
adc
(bad)
sbb
cmps
rcl
mov
inc
add
(bad)
mov
shl
int3
jecxz
jae
xor
push
push
inc
scas
pushf
lds
test
call
sub
cmp
pop
add
push
add
pushf
push
dec
mov
pop
cmp
push
cmp
push
pusha
mov
dec
cmps
popf
push
xor
imul
push
xchg
cmp
mov
jb
repz
dec
sahf
hlt
pop
into
loop
xor
jg
ret
or
je
rcr
jno
adc
int3
mov
pop
jne
test
add
call
sub
sar
sahf
xor
sub
xor
mov
lock
retf
stc
dec
jno
(bad)
adc
push
sahf
fimul
out
jg
push
xlat
inc
test
in
imul
int3
xchg
inc
and
stos
cld
enter
ja
data16
dec
push
cmp
cld
(bad)
gs
ss
lahf
repnz
xor
fld
and
out
sub
sbb
ins
shr
call
(bad)
retf
or
pusha
and
mov
lea
lock
in
push
sti
inc
cwde
jbe
xor
adc
ss
popa
mov
adc
sbb
mov
mov
and
cmp
nop
outs
push
inc
fisubr
mov
add
add
in
sub
or
js
xor
xchg
mov
sbb
pop
outs
jecxz
sar
cli
xchg
xor
daa
(bad)
jo
push
(bad)
mov
shl
jb
mov
test
leave
push
shl
es
xor
xor
pop
sbb
sbb
and
ds
add
jne
jnp
adc
bndldx
mov
dec
outs
cmc
mov
or
clc
pop
push
stc
stos
sti
mov
repz
xchg
push
mov
add
push
fisttp
mov
aam
popf
xchg
pushf
xchg
in
clc
cs
xchg
cs
outs
cmps
shl
test
pushf
fnstenv
(bad)
ficom
test
jno
xlat
or
inc
push
mov
add
mov
jmp
daa
mov
pop
gs
call
rol
inc
fisub
mov
xchg
out
adc
(bad)
push
loope
dec
push
in
mov
fld
test
mov
and
xor
add
int
stc
sbb
or
hlt
pop
and
ja
or
outs
sahf
repz
cmps
in
ja
sbb
icebp
fnstenv
push
iret
xor
jl
sub
fdivr
push
aas
and
add
mov
cmps
jp
addr16
mov
loop
sbb
cwde
sbb
push
daa
ret
adc
repnz
xchg
fidiv
jp
inc
xor
sub
or
data16
call
inc
rcl
pushf
les
enter
xor
adc
mov
dec
sbb
dec
nop
enter
into
mov
add
outs
movs
jecxz
cmc
adc
sbb
cwde
pop
push
and
mov
mov
popa
arpl
jmp
push
pop
cmc
fistp
cmp
(bad)
rcl
or
pop
adc
(bad)
in
push
sar
pop
dec
jns
pop
cmp
jno
psubb
pop
sub
xchg
popa
push
adc
arpl
mov
jmp
daa
add
dec
dec
xchg
mov
call
mov
sub
(bad)
adc
xchg
cwde
or
rcr
push
ret
fldenv
rol
xor
sahf
mov
jg
(bad)
in
mov
clc
outs
xchg
xor
aad
in
fnstsw
cmps
cmp
or
shl
sub
xor
in
scas
inc
jo
and
nop
push
loop
xor
jb
sub
mov
mov
movs
jno
out
movs
je
sti
test
in
mov
xchg
cmps
sahf
ror
cmp
or
ins
dec
dec
cmp
sbb
idiv
out
jle
jg
sbb
jg
sbb
ret
push
hlt
fnstenv
fstp
cmp
stos
mov
sub
inc
mov
pop
fidiv
jb
repnz
pop
adc
mov
sbb
mov
or
xor
mov
inc
sbb
cmp
inc
jecxz
jb
push
cli
fucomip
inc
nop
and
mov
mov
mov
inc
pop
leave
push
push
loop
push
xor
or
pop
sub
xchg
dec
adc
xchg
or
jge
neg
sbb
xor
shl
sbb
mov
ret
ficomp
xchg
clc
fidiv
and
mov
xor
push
sub
rol
xchg
mov
inc
call
xchg
cli
repnz
push
int3
adc
jae
sbb
xchg
mov
(bad)
(bad)
inc
outs
mov
cwde
cmc
adc
cdq
out
add
sbb
mov
scas
psrad
in
jnp
aad
out
sahf
nop
mov
mov
pusha
and
mov
pop
jo
push
out
aas
xchg
in
push
jns
retf
ss
dec
dec
das
dec
cmps
fimul
cli
scas
imul
cmp
gs
xchg
clc
mov
cdq
mov
int
inc
mov
lds
js
call
fistp
fild
test
xchg
mov
or
pop
add
inc
add
or
test
pop
call
sar
pop
pop
dec
jmp
xor
mov
sbb
out
jo
pop
mov
pop
sub
fnstcw
shl
sbb
mov
cmp
xchg
xchg
movs
mov
ins
dec
inc
ret
jmp
push
bsf
sbb
scas
cmp
mov
inc
(bad)
and
mov
dec
or
mov
adc
in
ficom
sbb
xchg
sbb
add
pop
pop
adc
outs
loope
xor
pushf
mov
mov
aad
frstpm(287
mov
call
mov
in
in
or
(bad)
rol
iret
mov
mov
jp
aas
inc
leave
out
dec
pop
stos
les
and
fsubr
xor
sbb
inc
jmp
inc
mov
xchg
test
jbe
mov
jne
jp
push
popa
iret
jns
inc
mov
and
icebp
sub
jecxz
lods
sbb
cmp
sbb
inc
push
stos
imul
fldenv
add
push
popf
jno
adc
xor
xlat
ret
(bad)
int3
dec
test
ret
inc
cmp
jp
nop
jnp
cs
ret
sahf
jmp
into
adc
push
fcmovnu
repz
dec
lahf
sbb
leave
hlt
inc
arpl
lds
scas
cmp
pop
iret
or
cmp
cmp
aas
enter
cmps
sti
xchg
pop
jb
sbb
add
mov
in
mov
fiadd
pop
xchg
add
cmp
(bad)
daa
leave
dec
pop
dec
inc
sar
mov
rol
push
test
sbb
pop
popf
inc
in
mov
fbstp
es
xchg
adc
call
cmp
cmps
into
dec
in
(bad)
call
push
retf
xor
fimul
ins
stos
xor
lods
in
jp
pop
push
and
loope
rcl
xor
or
(bad)
xlat
enter
out
push
rcl
movs
and
hlt
(bad)
cmps
sub
test
repnz
test
mov
add
jbe
sbb
test
dec
push
pushf
shr
movs
jae
daa
mov
mov
movs
sub
out
shl
push
retf
into
das
xor
mov
push
cli
and
pop
cmp
push
sbb
adc
daa
inc
int
jae
jp
xchg
cmp
sub
mov
mov
leave
(bad)
mov
or
je
or
into
pop
pusha
add
push
mov
jae
inc
into
xor
loope
fimul
cdq
push
push
es
and
in
jmp
pop
retf
jo
dec
mov
call
repnz
adc
in
hlt
repz
push
idiv
sbb
push
stos
fs
mov
mov
pop
retf
adc
mov
sbb
movs
mov
mov
xchg
inc
(bad)
add
jne
fwait
daa
pop
add
mov
repz
xor
sub
mov
jmp
pop
jge
jl
xchg
out
push
adc
repnz
iret
ja
add
mov
(bad)
mov
aam
mov
jle
jp
shr
ret
hlt
cs
inc
aaa
outs
in
add
and
jbe
mov
ret
retf
and
scas
pop
out
out
(bad)
js
dec
and
std
jbe
or
mov
mov
imul
popf
into
cmp
sub
mov
add
in
fld
(bad)
xchg
imul
lock
push
mov
outs
mov
sub
ins
bound
daa
lds
aaa
enter
pop
or
inc
addr16
sub
gs
(bad)
retf
inc
jle
dec
test
and
xor
jge
popa
cdq
test
or
std
out
and
or
daa
rcl
aaa
cmp
lods
das
mov
enter
lock
xor
adc
and
enter
add
mov
test
jg
shl
jne
mov
retf
lods
mov
add
adc
push
sahf
ins
retf
jge
jmp
fistp
imul
add
aaa
(bad)
mov
push
lods
push
in
aam
sub
pop
xchg
sahf
cmp
pusha
jo
xchg
cmps
push
sbb
inc
fld
cmp
cmps
test
jne
cmp
add
leave
cld
mov
add
push
bound
add
pop
add
cmp
adc
je
or
jle
loope
cmps
jmp
push
retf
mov
retf
or
jecxz
mov
sub
jmp
shr
mov
cwde
movs
iret
mov
rcr
cmp
in
pop
das
imul
(bad)
xor
lds
push
adc
out
inc
mov
sub
pop
daa
mov
ret
and
call
mov
(bad)
out
retf
mov
ins
in
inc
mov
das
sahf
cmp
jb
mov
dec
sub
mov
bswap
das
xchg
mov
je
call
mov
ror
pop
(bad)
in
shr
xchg
cmp
mov
fnstsw
das
sbb
ror
mov
stos
dec
fild
mov
out
pop
rcr
not
inc
fs
xor
stos
push
xor
jo
xchg
enter
int
push
mov
mov
sub
scas
repnz
loopne
inc
or
scas
fbstp
jl
imul
lods
mov
and
xchg
mov
lods
jae
dec
push
in
jmp
xor
add
sub
sub
btc
dec
fbstp
sbb
inc
xchg
push
pushf
push
mov
jno
fbld
xchg
loope
outs
sbb
je
xor
retf
pop
ret
or
sbb
test
aam
push
and
adc
inc
or
adc
(bad)
shl
stos
shl
aam
jmp
mov
inc
iret
or
jmp
ret
jge
repz
fild
fmul
in
mov
(bad)
mov
repz
and
ins
sbb
cld
mov
in
imul
inc
fcomi
inc
or
inc
mov
pmaxsw
cmp
push
xchg
sbb
mov
mov
pop
jb
cmps
dec
mov
outs
xchg
repz
hlt
stos
and
mov
or
imul
mov
addr16
ret
ja
push
popf
mov
mov
pop
retf
loopne
cmp
sub
ja
clc
sbb
out
add
dec
cmp
(bad)
mov
ins
jnp
adc
adc
xchg
xchg
pop
dec
pop
push
push
pop
cmps
aas
jns
push
fsubr
lods
pop
(bad)
xor
gs
fbstp
fwait
mov
cmp
leave
and
arpl
xchg
mov
fcomp
inc
shr
push
push
cmp
sbb
mov
dec
dec
out
adc
sub
ror
jbe
jmp
cmp
mov
lods
cmp
lods
popa
cmps
sbb
rcl
retf
mov
mov
adc
sub
(bad)
je
push
enter
dec
push
mov
dec
mov
not
outs
or
aas
add
pop
sub
add
adc
jl
dec
call
shl
adc
push
jp
out
test
rol
mov
ins
in
mov
lock
movs
cmps
adc
sar
ins
cdq
xchg
cmp
aas
in
xchg
mov
push
aam
enter
push
test
mov
out
inc
rol
mov
jne
mov
mov
into
jo
movs
jg
xor
(bad)
in
in
or
ret
(bad)
or
ret
ja
mov
inc
cli
mov
in
ret
adc
xor
dec
xchg
loope
add
int3
adc
inc
mov
arpl
add
cmp
dec
jmp
xchg
mov
cmp
cdq
fsubr
shl
scas
sbb
bound
mov
mov
popf
dec
lock
lahf
leave
sbb
call
sti
and
rcr
stc
arpl
loop
jbe
lea
and
jg
pop
clc
loopne
movs
mov
test
pop
push
inc
test
pop
jbe
movs
test
in
push
pop
out
ror
pop
out
sub
jg
shl
and
out
fdivr
daa
lods
into
lock
rcl
mov
into
xchg
sahf
mov
mov
adc
mov
pop
jmp
dec
push
sub
addr16
push
dec
inc
in
ds
rcl
imul
(bad)
pop
loop
aas
cmp
ins
leave
dec
mov
push
mov
jae
sbb
clc
sbb
mov
mov
ds
inc
das
inc
jo
fucom
fild
mov
loopne
add
mov
cld
fldenv
test
mov
add
arpl
cmp
shl
out
int
pop
jp
add
pmuludq
scas
sbb
jl
fdiv
scas
std
ja
sbb
mov
loopne
sub
icebp
sub
mov
scas
mov
retf
movs
call
jo
div
push
ret
cs
adc
out
adc
adc
std
mov
dec
fisub
pushf
sar
pushf
(bad)
push
mov
sbb
sub
or
out
(bad)
movs
xor
sub
bound
mov
das
xchg
scas
xchg
dec
xchg
adc
ja
xchg
stos
jno
mov
cdq
fdivp
xchg
pop
cmps
xor
push
jmp
push
dec
mov
and
and
repnz
xor
adc
std
sbb
lods
ret
xchg
loope
out
xchg
fucomp
aam
add
lock
mov
sub
pop
cmp
mov
push
call
(bad)
inc
mov
dec
vpsubusw
and
scas
out
pop
mov
push
jge
shl
push
xchg
sti
pop
addr16
dec
rcl
sub
inc
mov
jns
xchg
sub
push
ror
push
scas
pop
cli
sbb
push
call
imul
jns
cmp
imul
and
push
shr
inc
sahf
jle
leave
cmc
ja
xchg
add
mov
sub
mov
scas
sbb
shl
sub
dec
dec
outs
je
adc
(bad)
jmp
push
mov
xchg
mov
sub
xchg
ds
and
or
dec
mov
xchg
mov
jb
mov
daa
mov
mov
ja
sbb
pop
rol
pop
add
mov
mov
aas
lds
out
push
mov
sbb
push
bound
stc
shl
cdq
hlt
cmp
sub
mov
mov
cmp
fist
jnp
lea
fsubp
cmps
arpl
cs
xchg
add
cs
aaa
rcr
pop
jg
adc
loopne
pop
mov
fcom
mov
jle
mov
mov
or
and
rcr
fmul
mov
mov
mov
add
xchg
mov
dec
and
xor
ss
mov
(bad)
mov
movs
sti
pop
fistp
sbb
dec
dec
mov
popf
xor
js
arpl
cmp
sbb
out
push
mov
popa
call
(bad)
add
iret
fild
cmps
jmp
out
inc
adc
pushf
or
jg
fcomp
mov
ins
sub
repz
outs
mov
nop
cld
sub
and
div
inc
xlat
pop
(bad)
and
and
jne
pop
ja
outs
(bad)
in
fs
jecxz
pop
pop
js
add
xor
cli
aaa
xor
sbb
xor
out
mov
inc
stos
pushf
cmc
xor
jnp
jecxz
cmp
leave
shl
xor
cmps
inc
in
and
repz
push
fxam
adc
test
sti
adc
fwait
cdq
sub
dec
aad
dec
fst
retf
sub
outs
pop
push
adc
cmps
pushf
out
call
imul
dec
rcr
sbb
loop
xlat
inc
or
mov
mov
xchg
(bad)
fcomp
mov
andps
dec
push
scas
xchg
jmp
in
mov
scas
in
scas
nop
scas
jp
jne
push
jp
pop
rol
sbb
add
add
test
jge
mov
cmc
out
cmp
push
adc
cmp
xchg
iret
fidivr
fcom
push
mov
and
movs
loop
mov
fdiv
mov
call
sbb
out
or
mov
inc
out
inc
mov
outs
(bad)
sti
sbb
(bad)
pop
xchg
xor
pusha
imul
repz
icebp
mov
jmp
jle
jbe
arpl
push
fnstenv
les
sub
push
adc
inc
test
mov
(bad)
leave
das
(bad)
movs
iret
mov
dec
dec
fld
inc
jo
loop
adc
rcr
cvtdq2ps
pop
mov
mov
scas
pop
(bad)
int3
xchg
xor
cmp
jecxz
(bad)
scas
push
arpl
cmp
xchg
imul
mov
mov
inc
fwait
lods
fbstp
push
mov
popa
inc
xchg
jns
scas
mov
jne
fadd
pop
inc
jbe
or
mov
les
sar
jo
push
pop
enter
shl
mov
(bad)
sbb
push
xchg
repnz
add
sbb
ficom
xchg
test
pop
mov
(bad)
jo
pop
and
nop
dec
mov
xlat
jg
and
repnz
bound
aad
sbb
jmp
callw
ds
dec
sub
dec
mov
in
sub
xlat
cmc
ins
adc
(bad)
aad
jmp
dec
movs
mov
ja
jbe
lods
jmp
ret
and
stos
stos
call
fadd
in
cwde
cmp
arpl
adc
xchg
cmps
add
lods
or
(bad)
mov
jmp
and
sub
pop
retf
mov
in
xor
sbb
jmp
mov
xor
cs
push
dec
movs
(bad)
addr16
pop
je
ins
(bad)
(bad)
jae
mov
jmp
xor
repz
pop
adc
cmp
xor
pop
add
rol
cli
xchg
or
inc
cmp
lahf
cld
pop
add
dec
push
or
push
out
cmp
outs
xor
xchg
jns
jns
cmps
and
ja
es
mov
xor
nop
(bad)
adc
pop
fiadd
or
rol
sub
scas
cli
rcl
(bad)
(bad)
and
aas
mov
je
stos
xchg
mov
pop
sub
xor
push
fld
loopne
push
mov
add
xchg
test
cmps
jle
imul
cmp
push
jg
lods
aad
pop
int3
pop
scas
pop
cwde
clc
shl
js
and
stos
les
psubw
fwait
scas
push
add
lods
scas
add
outs
in
jl
inc
or
imul
gs
(bad)
sbb
int3
mov
or
ret
xchg
dec
in
test
push
dec
out
cmp
cli
mov
enter
sub
aas
fimul
mov
cld
push
sbb
xchg
sar
fisttp
loopne
xchg
xor
adc
xor
adc
icebp
sub
loop
xchg
int
out
lahf
add
gs
sbb
mov
push
mov
dec
daa
icebp
push
pop
push
popa
jecxz
hlt
mov
movs
mov
adc
icebp
mov
imul
or
fistp
cmp
test
loop
daa
sbb
neg
(bad)
jl
mov
repz
ja
movs
jg
fnsave
je
retf
js
test
mov
and
xchg
jo
scas
xchg
jae
daa
rcl
leave
out
mov
xor
push
mov
in
jae
sbb
scas
dec
rcl
push
mov
repz
stos
movs
mov
mov
push
(bad)
mov
dec
ja
inc
and
and
jmp
ins
mov
sbb
pop
mov
pop
mov
mov
xchg
or
xchg
sbb
mov
call
int
pop
shr
mov
and
mov
mov
mov
push
nop
dec
mov
sub
in
pop
mov
jne
mov
sub
scas
jbe
shl
dec
push
xor
ret
jne
adc
push
adc
add
aas
xor
ret
imul
in
jmp
movs
pop
xlat
(bad)
xchg
hlt
jle
scas
mov
in
jmp
cwde
dec
mov
inc
sbb
push
and
(bad)
and
mov
add
or
push
imul
ins
(bad)
in
fwait
push
scas
mov
scas
jne
cmps
add
jp
or
sub
jbe
stos
rcr
or
loopne
ds
(bad)
cmc
mov
xchg
ja
cld
leave
push
dec
(bad)
bswap
stos
or
jno
lea
dec
mov
pop
push
and
jae
adc
xchg
mov
dec
mov
dec
retf
mov
call
mov
jmp
repz
enter
dec
cmp
ficomp
mov
dec
xchg
loopne
loopne
in
out
ficom
out
addr16
xlat
mov
mov
cmps
dec
stos
call
pushw
mov
xchg
scas
mov
inc
cmp
jle
mov
add
inc
scas
sub
pop
je
mov
js
ins
push
mov
pop
shr
add
lahf
pop
xchg
inc
stc
xchg
xchg
jno
(bad)
sub
aam
shl
pushf
in
mov
pop
cmp
pusha
repnz
sub
js
in
test
cli
mov
cmp
add
mov
jb
push
jmp
and
ins
sbb
jle
movs
and
in
cmp
jmp
adc
fs
jmp
sbb
inc
inc
jns
push
inc
mov
cmp
in
nop
data16
adc
(bad)
mov
jae
stc
js
test
jne
(bad)
pop
enter
jae
xor
icebp
xlat
xor
mov
fwait
dec
call
jecxz
cmp
xchg
jns
or
lea
add
xchg
dec
cmps
pop
ds
add
daa
out
mov
adc
add
repz
jb
fisttp
xlat
dec
enter
or
mov
js
(bad)
sub
or
(bad)
rcr
inc
and
mov
or
shr
mov
fstp
jns
mov
outs
ret
nop
sbb
xchg
shl
adc
xchg
fmul
fdiv
or
adc
inc
mov
dec
in
xor
pop
mov
dec
mov
mov
adc
add
pop
pusha
lods
sub
mov
inc
and
mov
mov
or
(bad)
shl
mov
call
pop
loope
loope
cld
dec
shr
leave
or
stos
and
in
jl
out
cs
(bad)
mov
popa
adc
or
mov
retf
cdq
or
mov
out
pusha
push
cld
(bad)
iret
mov
in
je
sub
pop
in
jns
out
call
dec
hlt
add
clc
jmp
mov
retf
loope
inc
in
cs
pusha
push
adc
jmp
stos
xchg
(bad)
dec
cmp
inc
pop
clc
in
loope
mov
inc
jp
stos
popa
mov
int3
sbb
push
fs
sar
pushf
pushf
mov
out
int3
aad
mov
sub
mov
xor
dec
cmp
ficomp
bound
mov
and
pop
push
dec
sub
lea
sti
je
mov
outs
xchg
in
push
push
inc
out
push
cmc
(bad)
in
mov
xchg
or
fisub
or
test
cmc
ret
dec
add
gs
mov
or
lock
mov
mov
ins
xor
sbb
sti
or
in
pop
pop
cmps
mov
dec
xor
aas
add
pop
sub
jmp
xor
out
das
lahf
adc
pushf
xor
xchg
aaa
sbb
pushf
push
push
imul
addr16
dec
or
int3
iret
xchg
xchg
jmp
ds
jo
mov
mov
adc
js
jmp
repnz
mov
inc
sbb
test
add
xor
ja
dec
adc
shl
scas
and
sbb
mov
jmp
push
sub
daa
jp
aas
mov
ret
call
add
push
pop
stos
push
push
cmp
inc
(bad)
mov
xchg
bound
jecxz
jbe
cdq
cmc
sub
into
(bad)
and
int3
jl
aad
addr16
xchg
pushf
xchg
iret
add
ins
into
or
mov
psubsw
jno
inc
test
adc
in
push
cmp
fnstcw
(bad)
fld
push
adc
inc
mov
scas
mov
ror
int3
mov
lahf
cdq
int
xor
bound
adc
or
mov
inc
push
icebp
cmp
aaa
pop
mov
jns
scas
push
push
lds
push
call
icebp
fist
sub
ds
xor
jmp
push
ficom
adc
or
sub
jne
push
sti
call
inc
pop
cmps
adc
(bad)
pop
adc
sti
stc
rcl
in
xlat
xchg
cs
push
mov
pop
test
ret
or
mov
add
pop
out
xchg
cdq
push
aaa
aaa
jnp
and
adc
je
aam
jae
mov
in
sbb
mov
adc
or
push
repnz
or
ins
test
aad
(bad)
into
rcl
in
sti
aas
pop
les
pop
sar
dec
mov
mov
xor
scas
cmp
jmp
push
sub
lock
cmp
xchg
xlat
and
sub
data16
leave
mov
dec
and
xor
loope
shl
inc
cmp
cmps
gs
xchg
xchg
jo
push
adc
jae
mov
push
sbb
add
outs
mov
nop
add
jnp
mov
jmp
int3
cmp
dec
and
retf
cwde
pop
ins
ds
hlt
sub
and
dec
mov
cli
test
mov
fwait
test
jl
(bad)
cmps
mov
mov
(bad)
cld
push
sahf
ds
in
jecxz
(bad)
xor
jp
xchg
cmps
push
or
fldcw
xchg
push
sbb
out
outs
test
sub
fild
jg
push
mov
into
lods
mov
shl
outs
dec
das
mov
leave
xchg
xchg
and
aam
cmp
add
fs
mov
imul
jae
test
dec
jae
lds
dec
mov
data16
(bad)
pusha
clc
pop
retf
adc
xor
clc
mov
repz
aas
adc
mov
and
add
cmp
imul
inc
jg
mov
into
ss
push
pop
lahf
add
and
lahf
call
lea
jno
cmps
cmp
jl
jo
inc
push
in
adc
sbb
mov
movs
pop
xchg
sub
sbb
rcl
dec
cdq
loop
outs
sub
mov
xchg
int
push
cdq
bound
mov
dec
cli
jbe
popf
test
imul
outs
shl
or
stos
or
jns
cli
mov
jp
cmc
(bad)
mov
adc
cmp
or
cmp
ins
test
daa
sub
aad
sti
repz
int3
or
add
dec
jmp
scas
dec
jg
mov
loopne
sbb
jl
fbld
mov
shl
and
xchg
mov
pusha
xchg
push
(bad)
int
sub
add
jb
bound
push
adc
into
mov
int
cmp
aaa
mov
sub
sbb
mov
mov
fisub
mov
add
inc
outs
jbe
jo
pop
sbb
push
pushf
xchg
sbb
add
shr
and
xlat
add
fstp
mov
or
dec
in
mov
cmc
mov
mov
adc
idiv
nop
call
jb
xor
mov
cmp
jmp
mov
jnp
sub
(bad)
into
cmp
cmp
ins
adc
push
cmp
aas
mov
ffree
int3
outs
or
out
push
cdq
pop
lahf
retf
(bad)
retf
mov
sbb
cmp
mov
cld
lods
ds
ins
imul
(bad)
cmp
add
out
out
(bad)
and
mov
add
popa
cmp
call
aad
shl
jnp
jp
(bad)
aam
imul
mov
cli
mov
pop
dec
pop
(bad)
adc
(bad)
xor
jns
out
lahf
adc
loop
loop
push
arpl
test
sbb
fucomp
dec
inc
loopne
fisubr
mov
ret
scas
adc
sub
adc
leave
pop
arpl
push
loopne
mov
sub
fmulp
xor
mov
mov
xor
mov
dec
addr16
sahf
adc
inc
inc
mov
sub
xor
iret
or
out
retf
pop
dec
push
sahf
sub
lds
int
inc
cwde
and
mov
inc
ror
in
jmp
push
pop
icebp
adc
cmps
mov
dec
inc
xchg
add
xchg
inc
dec
and
outs
addr16
adc
push
in
ins
iret
push
popf
out
adc
and
jb
lods
add
xchg
jl
or
movs
outs
sbb
xchg
add
xchg
or
xor
iret
es
mov
and
pop
push
ja
(bad)
retf
add
loopne
mov
adc
pushf
int
gs
(bad)
scas
inc
push
ins
jmp
call
lahf
stos
mov
idiv
jp
(bad)
cmp
icebp
pop
adc
sub
imul
adc
adc
es
cmps
ds
call
mov
cwde
ds
push
sbb
fld
jbe
inc
xchg
mov
pop
mov
pop
pop
xor
mov
inc
lods
aad
jo
cmp
xor
std
jmp
mov
lods
jmp
pop
mov
inc
cmp
addr16
rcl
inc
mov
mov
fistp
mov
je
gs
dec
xor
ffreep
mov
and
retf
add
loope
sbb
test
sbb
leave
mov
mov
ret
mov
mov
imul
or
mov
mov
adc
nop
loopne
test
scas
les
mov
fsubr
xchg
dec
aas
stc
sbb
mov
mov
inc
es
fstp
push
pop
popf
outs
jno
retf
cmp
test
dec
adc
push
test
js
fwait
push
mov
mov
xchg
fldenv
pusha
std
and
mov
movs
cwde
mov
pop
rcl
(bad)
imul
or
jmp
std
movs
mov
test
sbb
xchg
dec
test
int
inc
outs
jge
mov
push
scas
cmp
xchg
fs
or
inc
in
mov
push
and
xor
out
xchg
fwait
retf
call
out
and
sub
enter
or
pop
rcl
cmp
clc
scas
mov
and
test
mov
mov
stos
mov
cs
aas
xlat
fs
sbb
mov
fwait
push
out
or
dec
xlat
xchg
ss
cdq
ja
(bad)
icebp
xchg
in
xchg
mov
push
push
in
add
adc
and
test
cmp
jns
pop
inc
adc
jl
or
in
and
in
xlat
xor
mov
cdq
cmps
ret
cmp
xchg
inc
fiadd
test
imul
cmp
mov
fwait
lock
push
mov
ins
ret
dec
dec
jns
repz
in
cmp
adc
es
cmp
aam
in
icebp
dec
pop
stos
call
adc
or
jns
mov
jecxz
ficom
(bad)
movs
or
xor
ds
push
ror
lea
icebp
xchg
jge
pop
push
leave
xor
cs
dec
and
xor
add
mov
out
mov
jo
repnz
pop
fwait
mov
ja
mov
add
jb
sbb
or
push
mov
call
fstp
(bad)
sub
xlat
pusha
sahf
icebp
xchg
clc
pop
ret
ret
pop
(bad)
jmp
push
sbb
jns
cmp
popf
jnp
cmps
sub
xor
and
push
jmp
jb
ins
aas
repnz
ins
and
push
sbb
mov
popf
dec
xor
jbe
add
sbb
fwait
cmp
mov
xor
cli
in
pushf
loope
add
lds
push
mov
(bad)
outs
icebp
sub
call
bound
hlt
popa
push
push
mov
imul
xchg
enter
je
in
iret
test
mov
dec
sbb
mov
cmp
cdq
cmp
xchg
add
movs
ret
fabs
push
jns
and
dec
lahf
push
fcomp
mov
(bad)
(bad)
xchg
ret
fisttp
mov
retf
and
mov
sbb
test
add
jb
sub
xchg
or
push
(bad)
arpl
gs
jnp
jno
inc
lods
push
aas
xchg
mov
pop
movs
cmp
fidiv
cdq
pop
out
stc
sub
push
gs
pop
fstp
retf
dec
(bad)
fisubr
lods
jmp
dec
icebp
retf
out
xchg
xchg
or
fst
fwait
add
push
(bad)
repnz
ds
outs
ret
and
inc
rcr
ret
adc
or
shl
mov
(bad)
iret
xor
arpl
out
sbb
(bad)
lds
push
or
jnp
aas
stc
cwde
mov
sbb
gs
retf
in
add
in
sbb
(bad)
js
mov
std
mov
inc
push
into
pop
aad
(bad)
jecxz
(bad)
or
pop
movs
mov
jmp
fucomi
sub
shl
shr
adc
into
sar
in
sub
leave
(bad)
push
add
cli
add
sar
fld
xchg
(bad)
(bad)
(bad)
jle
mov
(bad)
adc
mov
(bad)
lea
ss
push
and
inc
das
ins
sub
and
pop
add
mov
pusha
jmp
stos
pop
out
pop
inc
xchg
xor
lahf
xor
push
inc
es
outs
ds
daa
and
xchg
mov
or
dec
test
xor
mov
jle
out
sbb
ror
mov
fbstp
cs
mov
arpl
xchg
sub
mov
pop
ds
outs
hlt
mov
and
jl
inc
push
popa
adc
ins
enter
push
(bad)
fbld
in
pop
inc
add
mov
add
jbe
lds
imul
fadd
push
add
or
mov
push
jns
inc
push
cmc
sub
mov
push
out
hlt
xor
mov
jmp
push
idiv
aaa
les
inc
cli
aaa
or
fsub
mov
xor
inc
dec
dec
push
mov
dec
jp
dec
cmps
mov
rcl
(bad)
mov
test
popa
push
inc
xchg
daa
or
or
dec
mov
push
mov
dec
and
jae
das
xchg
add
xchg
adc
push
xor
stc
dec
ret
gs
mov
and
jns
add
jmp
mov
daa
clc
mov
sub
adc
jge
xchg
call
cmp
ficomp
push
inc
add
add
sbb
pop
stos
in
pop
sbb
pop
dec
sbb
pop
out
xchg
ret
inc
mov
dec
in
(bad)
cli
aas
(bad)
dec
loopne
pop
(bad)
in
add
jbe
mov
(bad)
leave
or
loopne
add
movs
push
into
cdq
lock
and
xor
pop
mov
sbb
(bad)
sub
sbb
cmp
sbb
sub
push
jnp
popa
fldln2
loope
jmp
dec
mov
in
test
sbb
cdq
(bad)
mov
leave
std
pop
mov
sub
in
sbb
and
sub
loope
pop
dec
jmp
cmp
mov
pop
pop
(bad)
addr16
enter
and
fs
push
xchg
push
jmp
out
(bad)
out
imul
test
add
jecxz
pusha
push
sub
dec
mov
jo
adc
mov
xor
xor
sub
inc
cdq
aad
cmps
and
inc
xchg
popa
adc
stos
add
call
push
pop
adc
aad
iret
out
dec
dec
sub
and
pop
xchg
push
jb
mov
mov
dec
xchg
aaa
retf
ss
shl
jbe
mov
jbe
or
cmc
jnp
in
cmps
cmc
mov
adc
sbb
xchg
call
das
cdq
push
sbb
jl
or
in
test
ins
xor
dec
push
pop
sbb
sbb
sbb
es
inc
sub
sub
out
(bad)
cli
out
mov
scas
dec
sti
arpl
in
jae
out
(bad)
jb
mov
or
repnz
push
outs
mov
ret
mov
dec
xchg
hlt
lods
loopne
push
shl
mov
mov
mov
dec
repnz
sar
das
neg
mov
jnp
push
mov
cwde
jle
scas
add
mov
mov
inc
jno
push
dec
(bad)
cdq
fsub
jb
fdiv
push
and
mov
rcl
push
js
jae
aaa
pop
int
xchg
inc
and
dec
xor
sub
dec
sub
pop
push
fst
les
xchg
in
xor
inc
cld
ja
in
sbb
test
mov
(bad)
leave
movs
xchg
jne
scas
(bad)
or
or
dec
mov
ret
and
stos
jb
and
add
xchg
jb
and
inc
push
fs
mov
jns
aad
lods
ds
test
dec
or
bound
out
cmp
lds
and
and
mov
movd
mov
call
ja
or
or
scas
fsubr
xchg
ins
out
daa
mov
retf
pop
and
int3
xor
dec
add
test
inc
jne
inc
shl
adc
enter
xchg
push
fwait
jge
outs
fxch
inc
xor
ret
pop
mov
cmp
adc
inc
clc
pop
das
stos
dec
add
xor
dec
ds
add
dec
cmps
sahf
dec
or
call
movs
or
jns
fadd
pop
out
cli
pop
cmp
hlt
jae
cld
test
pop
push
add
ror
or
inc
cmp
gs
dec
xchg
mov
cli
dec
push
fimul
sahf
cmp
gs
emms
out
or
sbb
pop
xchg
loopne
mov
mov
shr
call
mov
or
mov
jnp
out
mov
cdq
fs
in
add
enter
cdq
imul
(bad)
cmps
mov
mov
xor
mov
popf
cmp
mov
jecxz
popf
inc
dec
pop
call
out
mov
push
in
outs
adc
lahf
inc
movs
les
ins
cmp
mov
and
loop
fcmovne
jecxz
inc
rcr
xor
repnz
mov
pop
and
fst
ins
or
mov
fisttp
sbb
xchg
add
mov
(bad)
fadd
sub
or
mov
cwde
movs
cmp
jb
data16
js
pop
jp
push
icebp
(bad)
inc
and
xchg
ds
cmc
data16
lock
out
leave
int
push
dec
xchg
pop
adc
repnz
call
push
add
retf
mov
ds
push
and
jmp
outs
ss
inc
arpl
sub
ret
lahf
dec
sahf
bound
mov
rcl
add
inc
jle
or
jmp
sbb
shl
sbb
jp
fld
add
mov
jmp
gs
sub
imul
add
xchg
daa
fistp
fcomi
test
movs
push
sub
dec
xor
ins
mov
jne
jl
dec
xor
mov
jg
ins
jmp
push
mov
test
push
xchg
push
sub
ret
xor
pop
fbstp
call
es
pop
mov
pop
scas
cmp
push
jecxz
pop
movs
cld
mov
dec
dec
cld
ins
fwait
pusha
popf
xchg
ror
loop
cmp
sub
je
nop
push
xor
addr16
les
or
sbb
cmp
ret
fsubr
aas
cwde
loope
mov
inc
aas
int3
jp
push
out
adc
inc
retf
mov
adc
jno
lods
rcr
mov
cmp
pop
std
and
mov
mov
retf
out
ja
mov
jns
xchg
lods
inc
sbb
xor
fiadd
cmps
outs
rcr
in
adc
stc
sbb
pop
fstp
fs
cmps
stos
inc
(bad)
ins
out
sub
cmps
std
pop
jb
push
xchg
cmp
mov
lea
add
xchg
std
xchg
scas
das
xor
mov
jge
inc
imul
sbb
cmp
mov
push
(bad)
sahf
push
sbb
add
jle
fwait
xchg
dec
mov
mov
sub
mov
scas
xor
jle
out
dec
jmp
test
std
mov
mov
mov
imul
add
movs
adc
and
hlt
and
out
in
int3
pop
imul
cmps
xor
out
mov
add
cld
xchg
sbb
out
shr
mov
cdq
cdq
xchg
mov
push
xchg
mov
dec
ins
ret
das
cli
xchg
xor
ss
pop
aaa
pusha
ss
jo
adc
in
adc
jns
lock
test
ficom
in
xlat
repnz
cmps
mov
sti
stc
cmp
es
push
test
mov
pusha
test
jle
out
ds
repnz
push
loop
rcl
lock
cwde
inc
dec
mov
in
iret
int
movs
mov
cmp
mov
pop
ss
popf
pop
sahf
je
dec
(bad)
pop
xor
cdq
and
mov
loope
jl
sbb
test
pop
popa
mov
mov
shl
jbe
jae
ja
jmp
dec
dec
push
iret
push
mov
sub
inc
push
mov
hlt
sbb
int3
loop
cld
sub
inc
push
add
test
jmp
cmps
movs
pop
js
and
cmc
push
pop
fucomp
inc
sar
add
mov
xor
cmc
or
fst
fistp
sbb
and
pop
(bad)
(bad)
pusha
lods
fsub
sub
les
dec
iret
jne
mov
sub
push
into
pushf
das
jmp
sub
dec
lods
jle
push
add
shr
xor
sub
sub
jnp
daa
jmp
inc
push
xchg
cdq
push
mov
xor
xchg
(bad)
push
mov
sbb
das
(bad)
and
call
xchg
push
mov
jg
jmp
sbb
jns
pushf
mov
into
xchg
fsub
pop
pusha
es
pop
les
icebp
test
dec
mov
cmp
dec
mov
(bad)
scas
sahf
div
clc
sar
aad
add
aaa
fcomp
out
movs
out
hlt
movs
imul
pop
lods
bound
mov
jno
stos
cmp
jmp
cmp
inc
adc
pop
xchg
jbe
mov
add
icebp
scas
sbb
mov
jge
xlat
jmp
add
jmp
fldenv
test
add
mov
daa
push
and
es
ds
stc
mov
or
leave
rol
in
sub
dec
dec
lods
mov
push
mov
jno
int
push
inc
mov
jg
xor
jb
(bad)
mov
rol
rol
sub
cmp
cdq
aaa
not
add
fs
inc
repnz
arpl
fnstcw
and
repz
jmp
stos
retf
jmp
(bad)
xchg
sbb
inc
inc
dec
jp
sub
fidivr
adc
inc
or
fsubr
loop
sub
outs
lock
dec
cmp
repnz
inc
cmps
out
(bad)
jle
scas
shr
xlat
shl
lahf
jg
pop
pop
sbb
pop
inc
add
jb
inc
pusha
cld
sar
loop
xor
push
imul
aad
ret
retf
cdq
sub
xchg
out
sub
cmp
add
cmp
jmp
and
pop
mov
mov
jbe
fwait
and
fist
scas
mov
les
je
ret
pop
xchg
into
xor
inc
dec
xchg
add
sbb
cmp
sbb
or
or
lahf
sbb
cs
mov
sub
and
outs
mov
popf
and
push
jne
jp
pushf
daa
test
ret
inc
jne
aas
adc
cmps
daa
mov
stos
stos
dec
scas
retf
mov
xor
jg
mov
add
call
push
cmps
or
gs
push
and
adc
shl
scas
xor
les
aad
jp
push
xchg
data16
sbb
jo
(bad)
and
push
cmovnp
cmc
xor
xchg
add
jecxz
mov
jl
pusha
loop
or
mov
xchg
pop
add
fsubr
adc
cmc
and
iret
aas
or
sub
add
xor
add
pusha
add
add
add
add
add
add
sbb
add
xchg
mov
aam
add
jbe
fmul
sahf
into
sbb
pop
js
data16
ja
xchg
mov
int
int
fstp
jbe
fsub
test
sub
add
and
cmp
pop
arpl
ins
ins
xchg
stos
stos
stos
int
int
fstp
fs
movs
out
ins
sar
ins
sar
data16
cld
dec
shr
mov
push
movs
(bad)
add
sbb
adc
data16
ja
mov
mov
add
add
lods
shr
stos
fldenv
jmp
ins
sar
ins
sar
ins
sar
ins
sar
ins
sar
pop
retf
repz
jecxz
test
add
mov
addr16
data16
ja
xchg
mov
cmp
in
push
push
push
push
push
push
push
push
push
push
push
call
repz
mov
pop
rol
cdq
int3
adc
inc
ins
js
imul
xchg
mov
add
add
lods
ror
sahf
into
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
stc
dec
shr
mov
push
movs
(bad)
add
and
cmp
push
imul
jl
jl
xchg
xchg
stos
stos
stos
add
add
test
add
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
push
call
jmp
mov
add
sbb
(bad)
ja
ja
stos
stos
add
sahf
into
add
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
call
repz
ret
mov
add
mov
add
cdq
int3
add
mov
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
dec
repnz
add
cdq
int3
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
repnz
ja
aam
add
es
fimul
sahf
into
fcomi
cwde
jmp
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cld
add
int
int
add
stos
fisub
mov
fcomi
cwde
jmp
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
pop
imul
add
add
fldcw
stos
fstp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
cld
sub
fild
js
stos
stos
add
add
fldcw
stos
fnstcw
jmp
repnz
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
or
(bad)
jo
mov
add
(bad)
in
idiv
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
pop
retf
jbe
xchg
xchg
xchg
add
add
out
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
xlat
jmp
jl
xchg
mov
out
mov
retf
xchg
sti
call
call
call
call
call
call
call
call
call
call
call
call
call
cld
(bad)
out
adc
fstp
fld
add
add
fcomp
out
mov
int3
cld
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
cwde
jmp
or
aam
aam
add
add
fcomp
out
(bad)
mov
aad
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
int3
cld
inc
cdq
int3
data16
int
add
add
fadd
repnz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
int3
cld
dec
sahf
into
push
push
jbe
fcom
repnz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
aad
push
js
stos
stos
inc
mov
xchg
xlat
repnz
adc
int3
cld
(bad)
mov
push
push
push
push
push
push
push
push
push
push
push
push
cld
(bad)
call
fild
jbe
pushf
pushf
pushf
cmp
in
dec
sahf
into
pop
mov
in
stc
(bad)
in
stc
(bad)
loop
(bad)
(bad)
call
sti
call
sti
dec
cld
inc
std
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
cld
(bad)
push
out
jbe
xchg
xchg
xchg
in
in
cmp
in
jmp
hlt
sub
fild
cdq
int3
adc
ins
(bad)
in
shr
mov
icebp
(bad)
cld
in
stc
(bad)
in
stc
(bad)
loop
dec
cld
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
jmp
cld
loop
dec
movs
xchg
add
lods
rcl
repnz
dec
jge
stc
outs
(bad)
dec
(bad)
out
mov
sbb
(bad)
add
dec
mov
in
stc
(bad)
aad
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
jmp
cld
in
stc
(bad)
scas
out
adc
fstp
fld
ss
(bad)
bnd
xchg
sti
call
call
call
call
cmc
push
int
adc
in
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cld
in
stc
(bad)
(bad)
repnz
ins
aam
aam
add
stos
(bad)
call
call
call
call
call
call
loop
lahf
iret
jmp
push
std
(bad)
in
stc
(bad)
in
stc
(bad)
loop
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
cld
cmc
std
push
std
inc
cdq
int3
data16
add
cdq
int3
jecxz
std
stos
(bad)
call
call
call
call
call
call
(bad)
cmp
inc
mov
jge
out
shr
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cmc
std
push
std
push
std
(bad)
in
stc
(bad)
in
stc
(bad)
in
stc
(bad)
data16
cld
cld
cld
cld
cld
cld
cld
adc
mov
mov
add
(bad)
cdq
(bad)
call
call
call
call
call
jmp
(bad)
jge
cmc
xlat
jmp
int
xor
add
xor
retf
out
aad
mov
(bad)
cld
cld
cld
cld
cld
cld
(bad)
repnz
cld
cld
cld
cld
cld
cld
inc
mov
dec
jns
mov
add
add
fstp
call
call
call
call
call
jmp
(bad)
in
stc
(bad)
(bad)
call
sti
inc
std
(bad)
mov
call
cld
je
repnz
jmp
int
xor
add
inc
mov
push
mov
mov
icebp
xor
fstp
pop
movs
shl
cmc
std
(bad)
cdq
(bad)
call
call
call
call
jmp
(bad)
inc
jmp
dec
mov
test
in
mov
icebp
(bad)
repnz
std
push
std
(bad)
(bad)
call
sti
inc
std
push
call
stc
je
repnz
ss
push
mov
frstpm(287
call
add
add
fnstsw
out
stc
(bad)
cdq
(bad)
call
call
call
call
jmp
cmc
std
mov
mov
in
test
in
ret
fdivr
lods
shr
cmps
rcr
movs
sar
in
retf
out
fdivp
mov
icebp
cmc
std
(bad)
in
stc
(bad)
(bad)
call
lahf
iret
mov
add
lahf
iret
jmp
cld
cld
cld
cld
loop
jmp
(bad)
dec
cld
inc
std
push
(bad)
cld
cld
cld
push
mov
fstp
fld
add
add
js
fimul
aad
lods
rol
cdq
int3
add
add
pop
mov
inc
mov
pop
mov
(bad)
shr
mov
cmc
cld
cld
cld
cld
cld
cld
(bad)
shr
and
add
add
in
test
in
ret
fcom
sar
lods
shr
cmps
rol
cdq
int3
sbb
int
fcomp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
aas
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
pop
(bad)
(bad)
inc
add
ror
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
sbb
add
add
add
sub
sub
sub
sub
sub
add
add
dec
mov
and
sub
sub
sub
sub
add
add
jnp
jmp
call
test
adc
sub
sub
sub
sub
sub
add
add
test
div
push
push
push
push
jmp
dec
out
xor
or
sub
sub
sub
sub
add
add
mov
push
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
push
call
idiv
mov
sbb
sub
sub
sub
add
sahf
into
xor
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
jmp
test
adc
add
add
movs
out
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
push
jmp
jns
add
add
movs
out
inc
test
inc
test
inc
test
inc
test
inc
test
inc
jae
jmp
jns
add
add
mov
inc
test
inc
test
inc
test
inc
test
inc
test
inc
sub
add
add
(bad)
repz
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
jnp
inc
fisubr
jns
sahf
into
sub
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
inc
(bad)
out
jns
sahf
into
sub
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
jae
jmp
jns
sahf
into
xor
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
jnp
imul
jns
sahf
into
pop
ret
out
fcomip
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
mov
jmp
jns
sahf
into
pop
ret
out
out
lods
sti
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
adc
add
jnp
out
sti
call
sti
dec
sti
inc
sti
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
fisubr
jns
add
xor
cmp
pushf
xlat
out
mov
imul
sti
jmp
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
call
inc
mov
sub
add
mov
dec
imul
dec
iret
out
mov
imul
out
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
imul
sub
add
xchg
sti
call
xchg
sti
call
xchg
sti
jmp
mov
jnp
out
sti
(bad)
out
sti
(bad)
out
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
dec
add
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
dec
sub
pop
mov
lods
fucomip
mov
(bad)
(bad)
(bad)
push
sti
inc
out
(bad)
fdivp
(bad)
mov
xchg
add
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
sti
call
sti
inc
sti
(bad)
mov
idiv
test
and
cmp
jnp
out
shr
sub
add
movs
(bad)
call
pushf
(bad)
call
(bad)
sti
call
add
add
(bad)
jmp
fdivrp
call
sti
inc
sti
push
out
sahf
into
add
sahf
into
out
sti
jmp
sti
dec
sti
dec
sti
push
dec
out
test
add
sahf
into
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
aas
(bad)
push
add
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
pop
clc
add
jg
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
imul
imul
imul
imul
imul
imul
imul
imul
cmp
sbb
xor
sbb
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
inc
ficomp
sbb
xor
sbb
test
inc
test
inc
test
inc
movs
idiv
sbb
xor
sbb
xchg
sti
call
xchg
sti
call
xchg
sti
dec
pushf
(bad)
call
mov
sahf
mov
mov
(bad)
call
movs
idiv
pushf
(bad)
call
pushf
(bad)
jmp
call
sbb
xor
sbb
idiv
push
sti
push
sti
push
sti
push
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
xor
test
call
mov
mov
mov
mov
mov
mov
add
xor
mov
dec
mov
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jge
add
sahf
mov
(bad)
call
pushf
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
add
add
sahf
mov
(bad)
(bad)
(bad)
(bad)
push
sti
push
sahf
mov
add
sahf
mov
sahf
mov
add
inc
add
add
add
add
add
pop
add
add
add
cmp
add
(bad)
inc
add
inc
add
add
add
add
xor
add
add
add
jne
and
add
add
add
jne
adc
add
add
add
add
xor
add
add
mov
add
add
add
add
add
add
add
or
add
rol
add
add
pop
daa
mov
add
add
add
add
jne
add
add
jo
add
cwde
add
add
add
pop
daa
mov
add
add
add
add
add
add
add
pushf
mov
test
add
mov
add
pop
daa
mov
add
add
add
add
add
add
jecxz
add
add
add
mov
add
add
add
add
add
add
out
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
pop
daa
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
ins
add
fs
imul
add
je
jb
arpl
fs
jae
add
mov
push
add
test
add
or
add
