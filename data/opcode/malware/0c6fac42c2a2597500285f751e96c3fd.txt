inc
sbb
cmp
mov
inc
pop
inc
ja
das
dec
cld
pop
jg
cld
pop
jg
inc
inc
ja
pop
and
adc
add
mov
inc
ja
aas
retf
pop
inc
ja
pop
addr16
enter
xor
mov
add
ja
enter
movq
or
or
pop
inc
add
xchg
adc
pop
inc
ja
pop
shl
push
retf
or
sub
leave
push
aaa
inc
movs
ss
xor
sbb
sbb
scas
sub
fsubr
and
push
dec
cld
push
push
loopne
repz
pop
retf
repz
inc
pop
inc
ja
fdivrp
ja
pop
retf
rol
addr16
aam
jmp
ja
push
mov
add
sar
jg
movs
mov
ja
(bad)
dec
add
daa
int3
jae
das
and
(bad)
sub
push
scas
cld
inc
rol
jae
add
push
scas
cld
inc
clc
ja
add
xor
add
and
loop
ja
pop
into
dec
jg
add
outs
ja
add
ror
data16
add
dec
ja
add
add
mov
aam
sub
fwait
aaa
pop
cmp
or
or
hlt
xchg
sbb
or
mov
cli
dec
sub
add
bswap
jg
and
dec
sub
and
test
push
cli
sub
mov
mov
mov
inc
mov
dec
repz
inc
xor
shl
ja
lahf
dec
jle
bound
repz
inc
pop
inc
sbb
inc
pop
shl
jecxz
ja
pop
test
shl
inc
push
jmp
ja
adc
ja
fadd
mov
pop
inc
hlt
xchg
jbe
pop
inc
sub
xor
ja
xor
sti
pop
inc
ja
mov
(bad)
outs
jmp
ja
push
mov
ja
pop
test
daa
cli
inc
ja
pop
push
(bad)
cmps
xor
sub
push
aaa
inc
or
(bad)
pop
inc
ja
fsubr
(bad)
es
scas
jg
and
je
ja
hlt
xchg
ja
pop
sub
sbb
addr16
ja
jnp
xor
inc
pop
mov
ja
outs
mov
jmp
ja
jle
mov
pop
inc
hlt
xchg
mov
stos
adc
ja
xchg
adc
pop
inc
ja
cwde
inc
and
mov
inc
lahf
in
sub
adc
sti
cmp
push
retf
nop
retf
les
pop
sub
pop
sub
pop
sub
pop
ret
pop
arpl
add
dec
cmp
rol
ja
mov
mov
mov
sub
lock
mov
jbe
(bad)
(bad)
(bad)
lock
mov
add
ret
bound
adc
jb
sub
out
sbb
(bad)
outs
mov
lahf
fs
inc
ja
lahf
dec
dec
mov
pop
jb
add
sti
cdq
sbb
and
inc
mov
sub
shl
enter
dec
ret
adc
into
xor
or
ja
fs
js
xor
inc
xor
ss
mov
push
inc
pop
retf
pushf
or
pop
dec
xor
gs
arpl
ss
and
retf
add
pop
dec
xor
dec
ror
pop
ss
pop
inc
ja
mov
test
aaa
sbb
mov
push
adc
fstp
jecxz
adc
pop
mov
retf
inc
pop
ja
pop
sub
cs
mov
push
stos
and
pop
inc
inc
push
pushf
jne
outs
mov
inc
sub
cs
mov
cmps
stos
aaa
cmp
inc
inc
cmp
push
mov
inc
push
pushf
dec
push
aaa
test
retf
mov
test
sbb
mov
adc
mov
mov
enter
add
pop
aaa
ret
add
adc
pop
test
jb
enter
xor
pop
aaa
ret
add
mov
pop
mov
leave
inc
pop
dec
leave
push
gs
ss
add
mov
mov
inc
cs
mov
scas
enter
push
xor
enter
jl
jnp
inc
ja
ds
xor
xchg
mov
ja
mov
mov
jg
call
inc
pop
mov
mov
mov
sbb
sbb
sti
addr16
pop
inc
lahf
js
inc
ja
or
enter
(bad)
mov
ds
(bad)
cmps
mov
pop
adc
mov
xor
retf
mov
inc
pop
mov
xor
ja
movs
inc
pushf
or
mov
push
sar
jg
dec
jns
xlat
pop
inc
ja
movs
add
pushf
daa
test
mov
mov
mov
mov
mov
mov
mov
pop
inc
ja
movs
inc
cli
(bad)
pop
inc
mov
push
(bad)
cmps
fsubr
cld
push
push
test
mov
jecxz
push
inc
pop
mov
mov
push
mov
lahf
je
inc
ja
es
int
push
and
rol
jo
mov
xchg
cs
mov
rcl
add
rol
jg
pop
pop
ja
push
mov
xor
push
scas
inc
cmps
sbb
sbb
adc
adc
test
mov
rol
mov
cdq
jb
retf
inc
mov
gs
mov
ja
es
int
push
and
rol
jo
mov
xchg
cs
mov
rcl
add
jecxz
inc
inc
pop
mov
mov
push
mov
xor
test
ja
add
retf
or
cld
push
dec
test
mov
rol
mov
cdq
jb
retf
mov
div
pop
rol
jg
in
dec
retf
test
push
dec
js
dec
push
dec
xchg
das
inc
inc
sbb
jns
bound
xchg
sbb
ja
fwait
sbb
sbb
adc
adc
cld
mov
mov
movs
inc
add
sbb
ss
sub
mov
sbb
push
mov
push
dec
xor
xor
lahf
jo
mov
mov
or
mov
lahf
addr16
dec
sar
(bad)
sub
xchg
and
mov
adc
push
push
cld
call
add
leave
xor
mov
retf
rol
aaa
pop
inc
inc
xor
mov
xor
mov
push
dec
ja
lods
movs
inc
mov
jo
retf
sub
xchg
and
mov
enter
xor
add
sbb
inc
ja
data16
add
add
(bad)
add
cld
pop
movs
adc
sbb
enter
dec
cld
inc
movs
jne
pop
movs
adc
mov
mov
pop
inc
pop
sbb
sbb
rcr
cs
enter
push
retf
(bad)
push
inc
fsub
lahf
loopne
inc
ja
push
mov
sub
xor
inc
pop
retf
mov
jb
dec
or
push
fwait
dec
fwait
and
pop
sub
pop
into
xor
pop
inc
inc
push
fbstp
sub
(bad)
mov
xor
jecxz
add
jno
ins
enter
push
ja
pop
inc
inc
pop
inc
inc
adc
fistp
add
push
aaa
test
retf
mov
inc
mov
sbb
(bad)
cmps
jecxz
ja
pop
stos
ret
xor
and
or
cli
xor
ins
(bad)
fwait
jb
inc
sbb
mov
fsub
neg
inc
ja
and
xor
dec
fisttp
xor
cmp
add
mov
inc
inc
ja
data16
add
add
(bad)
add
cld
jae
adc
es
pop
rcl
add
xor
mov
movs
ss
lds
ja
xor
mov
add
fisub
lahf
push
lahf
dec
dec
mov
push
rcl
add
mov
jbe
pop
ret
push
inc
ja
test
and
pop
into
xor
rol
jae
sar
adc
retf
fdivr
add
inc
inc
pop
inc
hlt
cmps
inc
js
jb
ja
fsub
pop
jle
neg
inc
mov
fwait
and
mov
or
sbb
push
scas
jp
aas
out
add
pop
rcl
add
cli
aas
ret
add
xor
pop
inc
sbb
inc
pop
sbb
fwait
push
inc
pop
inc
cld
push
mov
aas
ret
add
xor
fsubr
jae
pop
inc
test
sar
jg
and
and
fs
mov
xor
movs
retf
es
jmp
sbb
cmp
daa
enter
jle
inc
ja
rol
mov
ss
retf
scas
retf
repnz
movs
mov
aam
pop
adc
jnp
aam
inc
pop
inc
inc
cmps
dec
mov
dec
test
out
add
movs
inc
ja
push
dec
dec
mov
div
fdivr
loopne
inc
ja
push
loop
loopne
inc
daa
enter
dec
movs
push
(bad)
dec
push
mov
mov
aam
pop
inc
iret
add
ja
mov
mov
sub
xchg
and
mov
adc
jg
fisubr
mov
mov
mov
push
ja
fsub
mov
push
jg
addr16
dec
(bad)
ja
pop
dec
lods
ss
test
mov
shl
inc
mov
retf
or
mov
push
dec
std
pop
pop
inc
dec
ja
dec
dec
jbe
inc
hlt
cmps
inc
cld
push
push
into
xor
adc
sar
add
inc
xor
fadd
nop
retf
inc
inc
ja
xor
add
fsub
mov
mov
adc
pop
sti
add
aas
div
mov
fsub
mov
cwde
(bad)
mov
mov
dec
lods
aaa
pop
jp
ss
test
enter
inc
imul
pop
jg
ds
rcl
pop
retf
mov
push
jg
addr16
dec
fidiv
mov
pop
ror
pop
aaa
js
cs
pop
jae
add
mov
ja
mov
test
sbb
inc
xor
inc
pop
inc
aaa
sub
ss
mov
sbb
retf
xor
inc
xor
stos
ins
sub
inc
rol
jg
call
inc
pop
ss
cdq
sub
push
mov
adc
lahf
cmp
inc
ja
pop
into
xor
stos
mov
(bad)
stos
xor
inc
sar
xchg
push
mov
test
ja
add
sub
cwde
push
(bad)
cmps
jecxz
ja
pop
stos
push
cs
inc
and
or
adc
inc
pop
iret
lock
retf
movs
mov
mov
push
inc
ja
fidivr
pop
cmps
mov
das
ja
rol
cmp
mov
mov
repz
push
inc
ja
xor
cwde
sub
jne
ja
mov
sbb
retf
movs
mov
scas
retf
ret
mov
mov
mov
dec
hlt
jle
loopne
inc
pop
aaa
mov
inc
lods
mov
mov
mov
jmp
sbb
enter
or
push
mov
ss
xor
movs
retf
ficomp
pop
and
mov
cld
jnp
push
dec
inc
pop
inc
ja
push
mov
inc
dec
pop
inc
test
(bad)
mov
movs
mov
xor
mov
cmps
dec
mov
fiadd
inc
pop
sub
jecxz
inc
mov
fwait
mov
mov
test
retf
mov
movs
mov
xor
fwait
rol
mov
inc
daa
enter
aas
rol
mov
dec
repnz
pop
inc
ja
fdivr
leave
mov
(bad)
jne
pop
ret
retf
mov
jmp
sbb
repnz
mov
cmp
in
mov
popa
inc
ja
in
(bad)
sar
inc
ja
fistp
inc
pop
dec
rol
mov
cli
(bad)
cmps
mov
daa
jecxz
inc
lahf
mov
lahf
dec
js
fsubp
mov
or
ss
pop
rcl
movs
mov
sbb
sbb
dec
fiadd
mov
jle
ja
pop
sub
adc
add
jno
mov
mov
sbb
add
retf
mov
cmp
aaa
jge
fsubrp
mov
pop
sub
call
add
lahf
mov
mov
mov
inc
pop
cli
mov
mov
lahf
mov
dec
dec
mov
push
test
jmp
mov
ja
pop
sub
mov
sti
add
std
mov
mov
movs
mov
sbb
add
retf
mov
cmp
mov
aaa
jge
fsubrp
mov
pop
sub
clc
mov
xlat
add
adc
push
jle
mov
xor
cli
mov
mov
lahf
add
mov
dec
mov
push
test
jmp
mov
ja
xor
movs
retf
pop
sub
mov
sti
add
dec
mov
mov
movs
mov
mov
repz
ja
xor
sar
ss
mov
cmp
mov
aaa
jge
fsubrp
mov
pop
sub
and
xlat
add
mov
xchg
mov
inc
pop
cli
mov
mov
lahf
in
scas
mov
dec
mov
inc
sub
sub
mov
mov
mov
movs
mov
mov
repz
ja
fidiv
hlt
(bad)
repz
popa
test
ret
add
cli
(bad)
cmps
mov
fistp
dec
test
out
add
cli
pop
xlat
add
adc
sbb
fwait
push
inc
movs
mov
ja
fidiv
cli
mov
repnz
movs
mov
mov
retf
push
cmp
inc
ja
(bad)
(bad)
iret
mov
ficomp
cld
jnp
adc
retf
(bad)
fwait
pop
fwait
inc
push
(bad)
mov
pop
inc
hlt
out
mov
test
adc
sar
mov
jecxz
mov
inc
ja
cwde
push
mov
ret
mov
mov
sti
mov
ja
(bad)
(bad)
(bad)
mov
(bad)
mov
cmp
or
mov
mov
mov
out
sbb
(bad)
retf
mov
dec
mov
pop
inc
inc
cmps
dec
mov
fidivr
inc
pop
into
repnz
movs
mov
mov
enter
xchg
pop
inc
ja
push
mov
inc
push
(bad)
ja
pop
inc
cli
(bad)
mov
mov
mov
mov
retf
push
cmp
inc
ja
fidiv
pushf
ins
(bad)
(bad)
lahf
mov
ficomp
cld
jnp
adc
retf
iret
arpl
inc
ja
mov
mov
or
pop
inc
ja
fisub
cld
(bad)
mov
mov
inc
scas
jb
retf
es
je
pop
ret
aas
inc
ja
(bad)
mov
mov
mov
adc
add
repnz
mov
sbb
shl
movs
mov
ja
xor
test
inc
ja
test
xor
mov
mov
fidivr
pop
es
mov
lahf
jl
inc
ja
lahf
push
(bad)
fwait
jb
inc
movs
mov
repnz
movs
mov
mov
movs
mov
(bad)
mov
dec
retf
pop
inc
ja
test
cli
not
mov
addr16
jae
pop
inc
test
sar
lahf
mov
fs
mov
dec
repnz
inc
ja
(bad)
out
mov
movs
or
inc
(bad)
(bad)
sar
mov
jmp
movs
mov
arpl
inc
ja
rol
mov
dec
repnz
pop
inc
ja
test
cs
pop
into
repnz
mov
sar
mov
mov
dec
repnz
(bad)
jmp
mov
pop
inc
ja
pop
stos
mov
pop
inc
cs
scas
retf
mov
sub
(bad)
repz
bsf
mov
ret
mov
(bad)
movs
loop
ja
pop
mov
into
out
xor
push
shl
mov
enter
mov
mov
retf
jecxz
and
mov
retf
mov
es
jbe
pop
rcl
movs
mov
repz
sub
idiv
mov
ja
rol
mov
dec
repnz
pop
inc
ja
out
mov
push
inc
ja
(bad)
(bad)
pop
mov
pop
mov
mov
faddp
mov
movs
adc
retf
(bad)
fwait
jb
inc
push
(bad)
lods
inc
pop
inc
adc
out
mov
xchg
inc
ja
fdivr
pop
mov
fild
repnz
movs
mov
pop
mov
test
mov
lahf
dec
inc
mov
jge
pop
ret
retf
mov
clc
inc
pop
inc
mov
stos
mov
ja
xor
div
mov
mov
mov
mov
sub
fadd
mov
sbb
dec
inc
pop
ss
fidivr
pushf
pop
inc
inc
ja
out
sbb
push
movs
mov
(bad)
mov
pop
mov
lahf
fdiv
inc
ja
lahf
dec
sbb
mov
add
mov
sub
fadd
xor
ror
movs
mov
cld
(bad)
fstp
mov
lods
mov
mov
mov
xlat
mov
repz
jp
movs
mov
mov
dec
cld
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
iret
pop
inc
ja
mov
mov
repnz
movs
mov
mov
movs
mov
cld
(bad)
mov
mov
(bad)
mov
jnp
ficom
cld
jae
adc
mov
movs
adc
mov
movs
adc
scas
retf
repnz
shl
adc
movs
mov
mov
shl
ret
add
in
push
sbb
loop
inc
ja
or
(bad)
pop
inc
ja
fsubr
(bad)
es
xor
fisubr
xchg
in
pop
inc
ja
push
mov
test
mov
pop
sub
inc
pop
inc
lahf
dec
xor
rcr
mov
retw
ret
add
add
cmps
mov
pop
test
mov
cld
push
mov
test
lahf
inc
and
retf
mov
cs
pushf
icebp
pushf
push
mov
sbb
enter
loopne
inc
ja
retf
inc
pop
push
(bad)
cmps
or
adc
popa
and
mov
mov
ret
add
ja
pop
sub
sbb
inc
xor
sub
inc
ja
pushf
adc
movs
cmp
sbb
and
mov
adc
or
and
mov
mov
test
(bad)
call
ja
stos
inc
xchg
popf
rcl
add
fsub
fcomp
inc
ja
jle
out
pop
inc
mov
mov
ss
pop
inc
ja
pushf
inc
xor
sbb
inc
pop
inc
dec
sbb
ss
push
cmc
jb
ret
dec
fwait
dec
sti
cmp
movs
inc
ja
push
int3
add
pop
inc
mov
rol
add
jp
les
ja
mov
jne
pop
mov
ja
fwait
ret
dec
arpl
or
mov
pop
jnp
add
dec
inc
pop
inc
test
mov
jnp
(bad)
pop
inc
pop
inc
add
aaa
jp
mov
ss
pop
inc
dec
fcomp
inc
pushf
inc
movs
inc
dec
fcomp
inc
(bad)
mov
movs
inc
scas
retf
pop
inc
ja
movs
inc
dec
fcomp
inc
sahf
mov
pop
aaa
ret
add
jb
les
ja
das
inc
inc
xor
cmp
push
xlat
add
add
dec
shl
inc
mov
mov
add
das
inc
inc
xor
add
pop
inc
sahf
dec
movs
mov
call
inc
push
sahf
mov
popf
and
pop
ret
jp
les
ja
sti
add
add
aaa
jecxz
inc
sahf
mov
pop
pop
call
inc
push
sahf
neg
ja
stos
push
retf
jp
les
ja
pushf
inc
ficomp
inc
jne
pop
inc
sahf
hlt
movs
mov
call
inc
push
sahf
retf
ja
mov
js
pop
ret
jp
les
ja
pushf
inc
xor
sbb
inc
pop
inc
sahf
enter
mov
pop
mov
ja
stos
inc
xchg
popf
ret
jp
les
ja
mov
jbe
pop
loop
ficomp
inc
jbe
arpl
ss
jecxz
sbb
pop
mov
retf
inc
sbb
stos
mov
scas
jmp
inc
dec
fcomp
inc
sahf
lea
ja
pop
fidiv
inc
pop
inc
jg
sbb
std
pop
inc
ja
mov
ss
pop
inc
dec
fcomp
inc
sahf
in
pop
inc
ja
pop
aaa
ret
add
jb
les
ja
mov
ja
pop
retf
stos
retf
pop
jnp
add
sahf
leave
pop
inc
ja
fwait
stos
mov
dec
inc
fdiv
inc
jnp
mov
push
inc
ja
xchg
add
inc
stc
adc
add
rol
xor
pop
fdivr
push
(bad)
retf
sti
xor
inc
pop
aas
ss
inc
ja
and
mov
add
pop
ret
jp
les
ja
mov
mov
div
scas
mov
inc
pop
jnp
add
push
mov
pop
retf
stos
retf
push
pop
call
dec
push
sahf
adc
ja
lods
jmp
inc
pop
mov
ja
pop
pop
call
(bad)
lahf
inc
ja
ror
pop
loop
inc
(bad)
mov
mov
test
xor
add
fwait
inc
ja
rol
mov
pop
loop
inc
hlt
mov
push
cmc
xor
pop
dec
repz
ja
es
jb
retf
add
mov
xor
push
mov
inc
add
pop
out
add
jb
retf
add
popw
out
add
add
mov
adc
mov
inc
jg
sbb
test
ret
or
push
pop
call
mov
mov
test
mov
leave
pop
loope
ficomp
inc
js
pop
cmps
jmp
push
(bad)
ret
es
or
pop
dec
out
pop
inc
(bad)
mov
mov
test
data16
sbb
test
retf
rcl
rcr
inc
std
inc
rol
jnp
add
pop
dec
out
pop
loop
rcr
inc
dec
inc
push
shl
inc
sub
ja
fsub
rcr
inc
ja
inc
retf
rcl
rcr
inc
std
inc
rol
jmp
add
pop
dec
out
pop
loop
fcomp
inc
dec
inc
push
shl
inc
sub
xor
fwait
clc
inc
out
pop
jb
add
retf
or
mov
(bad)
xor
mov
retf
inc
sbb
dec
loope
ja
sub
test
push
loope
ja
mov
sub
loopne
jecxz
inc
pop
imul
ja
mov
sub
loopne
fcomp
inc
iret
add
ja
mov
test
jle
add
mov
sub
loopne
ficomp
inc
pop
or
add
mov
sub
loopne
fcomp
inc
pop
sbb
mov
sub
loopne
jecxz
inc
sub
mov
adc
jno
rcr
mov
div
add
xor
or
test
stos
outs
inc
pop
inc
(bad)
fwait
pop
fwait
inc
(bad)
push
(bad)
push
mov
push
scas
add
pop
ret
addr16
ja
ds
ja
pop
aaa
ret
add
adc
or
sar
ja
push
fwait
jbe
pop
inc
mov
xchg
inc
pop
sti
adc
and
into
jb
loope
ja
push
mov
xor
inc
pop
inc
ja
xor
ja
lods
mov
mov
push
div
pop
inc
hlt
es
cli
ds
add
pop
mov
into
push
stos
daa
sub
jno
(bad)
push
xchg
adc
(bad)
fwait
push
inc
xor
push
call
sbb
inc
xor
ss
inc
cli
push
sti
adc
repz
jbe
stc
and
movs
inc
add
sbb
inc
movs
xlat
sub
ja
pop
sub
cmps
lahf
cmp
inc
ja
nop
add
lods
mov
mov
cmps
lahf
lods
push
inc
ja
pop
aaa
ret
add
xor
(bad)
push
xchg
adc
cld
push
mov
out
inc
pop
sbb
sbb
rcr
pop
add
inc
mov
es
retf
inc
cmps
enter
push
xchg
push
push
dec
mov
jb
retf
inc
mov
jae
pop
sub
push
mov
daa
mov
(bad)
push
adc
mov
bound
add
push
mov
inc
fisubr
mov
inc
ja
cwde
push
(bad)
cmps
or
inc
cmp
retf
(bad)
jb
out
add
cs
sbb
fcomp
inc
iret
movs
and
mov
retf
rol
cmps
fsubr
cld
ss
enter
inc
add
sbb
mov
mov
pop
ss
dec
in
pop
inc
inc
mov
pop
ss
dec
in
pop
inc
inc
mov
pop
imul
inc
mov
pop
ss
in
pop
inc
inc
mov
pop
dec
repz
pop
inc
ja
push
push
cli
pop
pop
inc
std
push
gs
arpl
push
mov
cmc
xor
push
jge
cmp
sar
popa
jp
dec
repnz
pop
inc
ja
mov
cmc
arpl
add
test
dec
jp
ss
inc
js
pop
inc
dec
stos
pop
inc
ja
add
sub
sub
add
mov
sub
dec
rcl
sub
xchg
out
ja
or
inc
mov
push
addr16
(bad)
jb
mov
xchg
je
mov
push
or
push
cli
pop
pop
inc
jbe
fsubr
(bad)
push
pop
inc
ja
pop
test
dec
in
push
mov
fwait
push
idiv
xchg
retf
add
add
mov
je
mov
out
add
addr16
ss
(bad)
or
jg
inc
cs
mov
addr16
jae
sbb
pop
mov
idiv
inc
add
mov
rol
pop
aaa
dec
jle
inc
pop
inc
add
mov
dec
inc
jg
popa
retf
xor
pop
dec
inc
fsubr
inc
inc
ja
pop
ret
dec
jge
ss
mov
inc
add
sar
dec
inc
pop
ss
lahf
inc
fstp
inc
cs
jae
in
inc
jno
mov
ja
das
inc
dec
stos
pop
inc
ja
je
mov
into
(bad)
jb
mov
xchg
jbe
fsubr
cld
push
dec
into
xor
inc
pop
mov
cld
push
mov
inc
ja
fstp
inc
cs
mov
pop
ss
lahf
inc
fstp
inc
cs
mov
addr16
jbe
push
inc
js
pop
inc
dec
jle
dec
dec
mov
pop
jle
inc
pop
inc
add
jmp
(bad)
pop
fs
pop
mov
jae
pop
inc
ja
sbb
mov
inc
ja
fxtract
mov
and
mov
adc
ret
add
add
pop
inc
mov
gs
add
ret
pop
inc
ja
stos
ret
pop
inc
ja
dec
add
lahf
inc
pop
inc
dec
test
inc
ja
popf
dec
mov
div
push
call
rcr
inc
inc
cwde
sar
repz
mov
ret
add
rol
lahf
inc
pop
inc
add
ja
pop
aaa
push
sar
ja
push
retf
push
mov
arpl
push
mov
pop
shl
inc
bound
mov
mov
push
leave
pop
pop
inc
into
xor
ja
push
mov
pop
xchg
sar
inc
scas
into
xor
enter
push
je
pop
shl
inc
fdivr
mov
cdq
jb
(bad)
mov
fsubr
mov
push
inc
cld
push
mov
aaa
ret
add
mov
pop
inc
inc
jbe
fsubr
mov
mov
jae
pop
inc
ja
or
mov
pop
mov
xor
mov
add
sub
cwde
push
(bad)
cmps
jecxz
push
inc
pop
stos
mov
adc
movs
mov
mov
inc
dec
inc
pop
inc
div
pop
test
mov
popf
mov
aaa
ret
add
idiv
mov
ss
in
mov
and
add
add
(bad)
xchg
pushf
movs
mov
rol
lods
mov
add
cs
pushf
sbb
mov
mov
into
jmp
mov
(bad)
dec
jp
out
ja
mov
cs
pop
enter
mov
daa
ficomp
inc
js
into
mov
mov
(bad)
dec
jp
loopne
ja
call
mov
or
ss
mov
das
inc
pop
enter
mov
push
rcr
inc
test
pop
dec
rol
lods
mov
inc
test
dec
fimul
mov
mov
loop
mov
mov
dec
arpl
add
js
rol
push
cmc
loop
mov
mov
dec
adc
add
loop
test
add
retf
mov
loopne
pop
inc
lahf
jl
mov
test
movs
mov
ja
into
xchg
test
movs
retf
mov
mov
dec
retf
pop
inc
aaa
inc
rol
sub
pop
inc
dec
inc
ja
mov
das
inc
pop
retf
lods
inc
mov
pop
retf
mov
ret
dec
inc
ja
(bad)
mov
mov
faddp
test
sbb
inc
ja
pop
aaa
ret
add
shr
mov
ja
pop
sub
div
imul
dec
mov
dec
inc
cmps
dec
mov
cmp
rol
test
popf
movs
mov
(bad)
cdq
call
push
cmps
enter
movs
jae
out
dec
dec
sbb
mov
inc
ja
xchg
mov
retf
pop
push
ja
rol
neg
fiadd
idiv
sub
stos
jl
movs
mov
cwde
mov
pop
enter
mov
ja
(bad)
(bad)
fwait
lods
movs
mov
mov
inc
mov
sbb
pop
stos
aaa
inc
pop
inc
js
into
mov
mov
rcl
arpl
add
into
mov
mov
mov
mov
(bad)
sub
scas
xor
cmp
xlat
push
lahf
pushf
movs
mov
mov
sbb
push
mov
jne
fidiv
retf
mov
ja
in
mov
ja
out
test
movs
inc
add
xor
fist
sti
popf
mov
jg
inc
pop
retf
test
inc
rol
out
popf
movs
mov
mov
mov
jne
(bad)
test
jecxz
mov
test
retf
test
out
test
mov
test
sti
test
pushf
movs
mov
ja
ficom
repnz
xacquire
test
movs
inc
repnz
test
mov
xor
inc
jnp
ja
into
imul
dec
or
loop
test
sub
jbe
movs
(bad)
fistp
inc
add
sbb
cmc
into
mov
mov
ror
stos
pushf
movs
mov
mov
add
in
(bad)
test
enter
shl
inc
rcl
sub
ja
mov
and
retf
test
and
ja
es
ja
fistp
inc
pop
enter
mov
dec
stos
pop
inc
ja
push
ret
or
dec
repz
inc
ja
inc
inc
ja
rol
sub
ja
pop
rcr
rol
xchg
pushf
movs
mov
mov
mov
xchg
pushf
movs
mov
dec
inc
cs
fsubr
add
mov
stos
pop
ret
dec
inc
cs
(bad)
mov
stos
jae
arpl
dec
shl
dec
inc
das
dec
cmp
out
add
in
(bad)
aam
movs
mov
ret
push
call
aam
movs
mov
dec
stos
pop
inc
ja
dec
enter
inc
ja
fsubr
jae
fisub
cmc
retf
js
fidiv
(bad)
pusha
retf
dec
add
(bad)
mov
stos
imul
clc
popf
mov
popf
mov
push
rcr
pop
ret
dec
jle
inc
ja
pop
ss
ret
addr16
inc
pop
inc
ja
inc
ret
dec
jle
inc
ja
pop
ss
addr16
inc
pop
inc
ja
push
ret
dec
jle
inc
ja
pop
aaa
je
mov
js
fsubp
test
cmp
ret
or
aaa
imul
lods
movs
mov
test
movs
mov
mov
fadd
test
movs
inc
add
fsub
sub
cwde
mov
rcr
xchg
inc
pop
push
mov
fist
pushf
movs
mov
repnz
mov
cwde
mov
pop
xor
add
pop
mov
test
mov
lods
mov
inc
test
dec
fisubr
movs
sbb
sbb
rcr
push
dec
mov
mov
ret
dec
daa
ja
popf
push
mov
ds
into
outs
aaa
retf
cli
inc
pop
inc
test
rol
(bad)
inc
xchg
mov
(bad)
rol
mov
push
mov
inc
(bad)
out
ja
push
inc
ja
test
cli
ds
inc
xlat
out
ja
pop
inc
ja
test
imul
mov
ret
dec
and
dec
xor
push
mov
inc
mov
test
leave
pop
dec
rcl
jns
push
mov
mov
xor
dec
xor
stos
sti
inc
ja
rol
cmc
push
mov
js
xlat
inc
ja
fiadd
pop
sbb
ret
push
mov
jbe
fwait
inc
ja
and
sbb
sbb
shl
mov
cmc
xor
rol
lea
dec
hlt
mov
mov
push
mov
cmc
xor
lods
add
cs
hlt
mov
cs
test
mov
retf
push
cmc
xor
jle
ja
pop
jle
inc
pop
inc
add
push
mov
cmc
je
lods
inc
ja
cs
add
fild
mov
push
mov
mov
and
inc
pushf
push
rol
cmc
push
mov
add
push
mov
dec
test
cmps
inc
add
jmp
in
inc
dec
rcr
ss
ret
xor
sbb
sbb
adc
adc
ss
jmp
stos
or
pop
inc
pop
mov
xor
inc
or
retf
mov
inc
pop
ss
pushf
test
ret
addr16
ss
test
je
inc
pushf
inc
adc
mov
scas
(bad)
fwait
push
inc
cwde
push
(bad)
cmps
jecxz
push
inc
pop
stos
push
adc
and
sti
sbb
(bad)
mov
retf
test
retf
add
mov
ja
movs
mov
ja
(bad)
(bad)
ja
movs
mov
ja
fadd
(bad)
sbb
pop
fisubr
lods
in
dec
pop
inc
sbb
ss
sub
lds
ja
add
mov
shl
and
jmp
pop
dec
ret
pop
inc
ja
pop
sub
inc
pop
inc
sbb
inc
xor
inc
fstp
inc
pop
retf
movs
mov
jnp
das
inc
cld
push
push
rcl
mov
or
jb
test
sub
mov
es
pop
retf
fwait
push
daa
sub
stos
mov
pop
inc
inc
cmps
ret
pop
inc
ja
pop
ror
pop
aaa
jg
push
dec
inc
scas
test
into
push
mov
add
or
inc
and
rol
mov
mov
sbb
adc
adc
pop
imul
test
inc
pop
sub
pop
sub
pop
inc
ja
movs
ss
and
ja
rol
ja
fdivr
mov
or
jne
pop
sub
mov
es
pop
enter
xor
movs
add
jg
inc
add
(bad)
push
mov
or
adc
sbb
adc
inc
pop
mov
add
mov
es
pop
ret
jae
ja
mov
daa
inc
pop
sti
jbe
pop
inc
sub
shl
and
call
pusha
xor
mov
retf
inc
inc
ja
pop
sub
pop
sub
pop
or
pop
inc
inc
rol
or
ror
mov
sbb
inc
or
inc
sbb
adc
and
sar
and
push
aaa
sbb
mov
or
test
mov
fisubr
mov
jge
ja
or
test
dec
rol
mov
pusha
ds
scas
adc
mov
or
ret
fiadd
pop
inc
pop
js
add
xor
ja
fadd
fs
in
inc
imul
pop
stos
and
pop
inc
hlt
xchg
dec
push
push
aas
lahf
jb
test
ret
addr16
ss
test
jne
dec
ds
aas
xchg
pop
stos
pop
adc
hlt
xchg
xor
rcl
mov
retf
or
cld
ss
test
mov
fiadd
mov
pusha
mov
and
mov
pop
js
sub
xor
inc
pop
shl
mov
push
mov
or
sbb
push
mov
cdq
inc
mov
push
mov
mov
shl
and
ret
cmp
retf
or
and
pop
rcl
pop
rcl
pop
rcl
pop
into
or
sbb
inc
pop
inc
ja
(bad)
sti
jmp
push
stos
retf
or
ss
pushf
push
xchg
pop
pop
enter
hlt
aaa
inc
rol
mov
pop
inc
and
dec
rol
dec
rol
mov
add
scas
fstp
mov
inc
hlt
cs
imul
fld
mov
mov
mov
push
push
dec
rol
retf
xor
mov
cmc
xor
stos
shl
es
sbb
pop
ret
or
xor
rol
jnp
in
inc
cld
push
push
dec
rcl
push
xor
ja
push
hlt
and
push
cmps
(bad)
fwait
pop
fwait
inc
xchg
push
cmp
pop
cmps
rol
jnp
in
add
push
dec
js
or
xchg
push
hlt
and
push
cmps
cld
push
push
dec
rol
enter
hlt
and
push
mov
inc
(bad)
fwait
pop
fwait
inc
cwde
and
ror
shl
sti
pop
push
aaa
inc
retf
clc
repz
inc
out
and
retf
(bad)
mov
retf
shl
aaa
jne
out
retf
jb
ror
shl
add
shl
ror
add
ror
shl
add
shl
ror
add
ror
shl
jp
shl
ror
lods
ror
shl
sti
pop
repz
mov
sbb
mov
retf
(bad)
mov
retf
shl
aaa
inc
shl
ror
jb
ror
shl
rcr
scas
ror
shl
ss
out
retf
and
ror
shl
and
retf
movs
adc
retf
shl
sar
ja
pop
inc
das
ror
shl
rcr
dec
add
pop
arpl
ja
rcr
ror
sar
or
out
rcl
jg
retf
rol
retf
shl
rcr
xor
ror
retf
shl
shl
scas
out
retf
shl
adc
rcr
jnp
ror
rol
mov
shl
sar
shl
ror
rcl
stos
call
push
aaa
inc
(bad)
aaa
inc
and
pop
repz
inc
sbb
mov
cwde
and
ror
shl
sti
pop
push
aaa
inc
retf
sub
retf
shl
sbb
shl
ror
ror
or
out
retf
clc
repz
inc
out
adc
ror
push
ror
shl
jb
shl
ror
adc
ror
shl
retf
out
retf
mov
ror
shl
ror
shl
ror
sbb
ror
shl
std
and
retf
jb
ror
shl
inc
mov
mov
out
pop
repz
inc
retf
shl
aaa
or
out
retf
clc
cmps
mov
adc
ror
push
ror
shl
jb
shl
ror
adc
ror
shl
retf
out
retf
mov
ror
shl
ror
shl
ror
sbb
ror
shl
std
sbb
mov
retf
jb
ror
shl
inc
mov
mov
out
retf
shl
ror
and
js
mov
(bad)
cmps
fsubr
cld
push
push
enter
retf
pushf
push
mov
push
mov
(bad)
push
cmps
jb
and
pop
stos
lods
inc
pop
inc
(bad)
fwait
pop
mov
stos
lds
retf
push
mov
add
push
lea
imul
mov
pop
inc
ja
push
cmc
and
ret
retf
xor
cdq
retf
and
pop
mov
mov
push
mov
pop
xor
or
retf
stos
add
dec
dec
ror
push
retf
dec
dec
rol
xchg
inc
pop
inc
add
fwait
jbe
sbb
push
cmc
cmp
fiadd
mov
and
sub
out
pop
inc
cli
push
test
inc
ja
in
push
mov
rcr
xor
pop
xchg
daa
stos
ror
cli
push
test
mov
stos
and
push
rcr
dec
inc
pop
and
rol
or
push
shr
mov
mov
shl
and
and
ret
jno
ja
xor
dec
ja
fwait
adc
sub
and
cs
and
inc
ja
pop
jb
stos
pop
inc
ja
(bad)
push
xchg
adc
mov
dec
mov
fild
inc
pop
dec
sar
adc
out
ja
dec
jle
(bad)
sbb
xchg
adc
or
mov
nop
inc
movs
ja
jmp
add
lods
inc
dec
xchg
add
mov
cmp
sub
pop
retf
pop
xchg
add
xor
pop
inc
hlt
xchg
mov
push
cmps
test
ret
add
pop
retf
push
mov
xor
push
cmps
inc
(bad)
mov
add
pop
(bad)
jp
mov
out
ja
push
mov
and
pop
mov
retf
inc
mov
add
dec
shl
pop
loop
(bad)
sbb
inc
cmp
inc
bound
(bad)
xor
inc
inc
xchg
cld
xchg
rol
xchg
push
push
xchg
(bad)
jle
(bad)
xor
je
inc
lahf
add
inc
ja
push
fwait
lahf
js
inc
ja
es
js
movs
retf
in
xchg
mov
dec
dec
mov
add
aaa
sub
(bad)
xor
inc
fwait
(bad)
xor
cvtdq2ps
xchg
mov
push
scas
test
ret
inc
inc
pop
retf
push
mov
push
mov
xor
push
scas
inc
(bad)
mov
add
pop
(bad)
jp
mov
call
push
mov
push
shl
bound
dec
shl
pop
loop
(bad)
sbb
inc
cmp
inc
bound
xchg
test
add
retf
dec
rcl
xchg
xchg
enter
(bad)
sbb
dec
mov
xor
retf
dec
xchg
add
in
push
cwde
xchg
mov
(bad)
xor
(bad)
sbb
dec
popa
ret
push
inc
ja
lods
jbe
pop
rcr
inc
dec
rol
adc
mov
inc
mov
sbb
stos
idiv
jg
pop
sub
pop
sub
pop
sub
pop
add
or
inc
mov
inc
ja
pop
into
xor
or
ds
pop
mov
aas
inc
pop
adc
ja
fwait
add
pop
mov
retf
inc
cwde
push
(bad)
cmps
fisubr
and
or
test
std
and
mov
retf
cmps
mov
jb
out
add
pop
inc
ja
inc
mov
xchg
retf
in
ja
loope
cmp
dec
adc
sub
pop
jb
(bad)
xchg
add
mov
pushf
add
mov
movs
mov
pushf
ins
mov
cmp
pop
dec
sar
stc
movs
push
cmp
retf
popf
and
mov
sbb
jle
mov
movs
inc
std
push
movs
jg
xor
movs
mov
cmp
pop
retf
cdq
inc
add
(bad)
jb
movs
mov
mov
sbb
(bad)
(bad)
mov
retf
loop
inc
xor
repnz
mov
cmp
pop
sub
pop
sub
pop
sub
pop
inc
ja
(bad)
(bad)
mov
mov
inc
rol
cmp
sti
dec
pop
or
xor
(bad)
stos
mov
jbe
pop
inc
pop
mov
out
mov
mov
pop
inc
(bad)
mov
mov
test
lahf
sbb
ret
add
pop
sahf
test
ja
fidivr
cld
adc
into
fidivr
pop
lahf
test
ja
fidivr
inc
pop
inc
imul
jecxz
ds
pop
mov
retf
mov
aaa
ret
add
mov
sbb
mov
mov
inc
imul
or
sbb
add
pop
inc
ja
mov
ja
pop
shl
pop
inc
sub
shl
and
ss
imul
outs
sar
mov
div
movs
rol
or
rcl
pop
into
xor
or
ja
fs
js
xor
inc
xor
ss
mov
ds
pop
retf
xchg
mov
ja
mov
ss
adc
movs
ss
adc
ret
dec
inc
pop
mov
aas
inc
pop
sbb
sbb
adc
fdiv
es
ss
pop
mov
xor
sub
movs
arpl
mov
ja
pop
shl
shl
dec
jo
retf
mov
test
push
dec
adc
dec
movs
ss
pop
inc
ja
fadd
and
mov
sti
and
mov
mov
daa
sub
jno
pop
inc
sbb
inc
movs
ss
cs
lahf
sbb
inc
ja
fwait
aaa
jae
fwait
test
mov
dec
mov
mov
dec
mov
aas
inc
pop
dec
mov
push
mov
aas
inc
pop
jb
test
retf
mov
mov
ja
fwait
add
mov
scas
addr16
rol
outs
and
loopne
mov
add
pop
retf
mov
mov
jne
xor
ss
mov
xor
dec
mov
pop
jb
test
into
xor
adc
mov
dec
mov
xor
dec
mov
push
mov
xor
jb
test
mov
xor
dec
rol
test
sti
mov
ja
lods
movs
inc
stos
retf
add
cmps
adc
outs
ret
adc
pop
ror
add
das
pusha
lahf
inc
pop
inc
ja
mov
xor
retf
sar
(bad)
mov
push
mov
aaa
test
sub
pushf
inc
ja
xor
inc
xor
and
ja
clc
mov
adc
ja
fwait
ss
fwait
test
mov
pop
stos
aas
add
cmps
test
ret
ins
inc
pop
sbb
mov
push
dec
rol
push
inc
(bad)
push
push
pushf
sbb
adc
and
mov
enter
push
jnp
push
mov
cld
push
cmps
retf
cdq
retf
rcr
dec
cs
(bad)
mov
stos
inc
scas
adc
ja
fadd
scas
enter
inc
pop
inc
(bad)
mov
xor
xor
sbb
dec
jge
ss
xor
ret
addr16
ss
retf
fstp
dec
cs
cld
push
dec
test
fiadd
mov
jle
ja
add
jne
mov
fwait
or
inc
inc
ja
movs
aaa
push
stos
inc
scas
adc
ja
rol
mov
cdq
push
retf
(bad)
fwait
pop
mov
sub
shl
and
push
jg
push
mov
arpl
inc
div
stos
addr16
inc
pop
adc
retf
inc
adc
add
retf
push
pushf
push
push
cmc
jae
fdiv
jge
in
inc
inc
shr
dec
mov
mov
jg
inc
adc
or
es
(bad)
mov
pop
fiadd
test
adc
ja
pop
stc
cmp
call
xchg
fadd
adc
sbb
cmp
push
adc
mov
fmul
push
mov
sbb
shl
ja
and
adc
mov
movs
jae
(bad)
mov
mov
mov
mov
mov
jnp
shl
retf
xchg
retf
xor
jb
stos
pop
dec
pop
inc
hlt
(bad)
mov
ss
mov
xor
stos
dec
dec
ja
movs
arpl
rol
scas
mov
pop
inc
ja
(bad)
mov
repnz
movs
mov
mov
movs
mov
mov
jmp
jae
pop
adc
add
retf
movs
mov
add
mov
jbe
pop
stos
iret
add
(bad)
mov
mov
test
push
jg
ficom
mov
xchg
mov
ja
mov
enter
mov
lahf
sub
mov
pop
push
test
ja
cs
lahf
int3
push
inc
ja
lahf
dec
pop
or
out
mov
das
push
pop
inc
hlt
xchg
dec
push
pop
inc
into
dec
pop
inc
ja
lods
mov
sub
test
push
inc
ja
lahf
dec
(bad)
mov
mov
test
cli
jge
pop
inc
out
mov
ror
pop
inc
ja
cmp
inc
ret
adc
dec
sub
xor
pop
pop
inc
hlt
xchg
scas
pop
pop
inc
into
dec
pop
inc
ja
lods
mov
sub
test
pop
inc
ja
lahf
dec
pop
je
add
out
mov
xchg
pop
pop
inc
hlt
xchg
xlat
pop
pop
inc
into
dec
pop
inc
ja
lods
mov
sub
test
pop
inc
ja
lahf
dec
lahf
cmp
inc
ja
push
inc
ja
ret
shl
xor
cli
adc
pop
inc
out
mov
adc
(bad)
cmps
mov
dec
pushf
sbb
stos
cmp
xchg
cs
push
test
ja
fidivr
pop
bound
xor
shl
pop
inc
lahf
pusha
pop
inc
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
xor
mov
pop
inc
ja
lahf
dec
lahf
test
inc
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
xor
mov
sbb
rcr
ja
push
inc
ja
ret
shl
xor
pop
cli
adc
pop
inc
out
mov
adc
(bad)
cmps
mov
dec
pushf
sbb
stos
lds
ja
fadd
ja
lods
movs
inc
xchg
mov
lahf
sub
inc
ja
mov
ja
ret
adc
mov
retf
mov
xor
pop
into
repnz
movs
mov
addr16
mov
test
ja
mov
xor
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
sbb
cli
cmp
inc
ret
adc
dec
sub
xor
add
hlt
xchg
xchg
mov
xchg
pop
inc
into
dec
pop
inc
ja
lods
mov
sub
test
sbb
rcr
ja
push
inc
ja
ret
shl
test
mov
mov
ja
fadd
ja
loop
ja
pop
fiadd
ds
sub
mul
xchg
dec
shl
pop
aam
add
cs
cld
(bad)
cmps
mov
in
popf
sbb
stos
and
xchg
add
dec
ja
pop
fiadd
ds
sub
cmps
mov
xor
dec
mov
xor
inc
pop
inc
out
mov
ror
mov
mov
das
add
hlt
xchg
arpl
pop
inc
into
dec
pop
inc
ja
lods
mov
push
stos
pop
add
loop
ja
pop
fiadd
mov
xor
add
lahf
mov
lahf
push
hlt
ds
js
fild
inc
fsub
mov
cmps
mov
ja
popf
(bad)
ja
movs
mov
add
pop
rcl
movs
mov
cld
(bad)
lahf
mov
mov
cmps
mov
mov
mov
mov
cmps
mov
(bad)
mov
pop
fiadd
adc
mov
ja
adc
mov
lods
mov
loop
movs
mov
mov
or
retf
mov
test
pop
into
retf
mov
ss
pop
shl
pop
mov
retf
mov
fiadd
retf
mov
ja
fnstenv
mov
mov
cli
(bad)
pop
inc
mov
mov
test
pop
sbb
rcr
ja
push
inc
ja
ret
shl
test
mov
inc
add
fadd
ja
loop
ja
pop
fiadd
ds
sub
cmps
mov
aaa
inc
pop
shl
rol
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
mov
pop
mov
mov
fidivr
xacquire
mov
mov
xchg
retf
mov
and
inc
rol
imul
mov
ds
pop
inc
idiv
pop
inc
mov
inc
ja
stos
jb
retf
xor
inc
mov
mov
fadd
repnz
fisubr
add
sbb
mov
mov
aaa
inc
pop
shl
cmps
mov
idiv
inc
add
out
mov
stos
retf
fiadd
mov
fiadd
repz
scas
mov
push
js
inc
cli
(bad)
scas
mov
(bad)
mov
pop
retf
movs
mov
mov
movs
test
cmps
mov
adc
std
jl
inc
fadd
ja
loop
ja
pop
fiadd
ds
sub
popf
sbb
mul
out
inc
pop
shl
rol
ja
push
inc
ja
ret
shl
test
mov
and
fadd
ja
loop
ja
pop
fiadd
ds
sub
mul
push
dec
inc
pop
shl
cmps
mov
ja
popf
add
pop
mov
mov
fiadd
mov
mov
stos
pop
mov
mov
repnz
fwait
dec
repnz
popf
xor
mov
fs
ja
lahf
dec
lahf
and
cli
push
inc
ja
ret
shl
test
mov
mov
xchg
lds
inc
loop
ja
pop
fiadd
ds
sub
cmps
mov
dec
inc
pop
shl
rol
mov
cmps
mov
dec
inc
pop
cli
jge
pop
inc
out
mov
ror
mov
mov
sti
jge
inc
hlt
xchg
inc
popf
sbb
mul
cmp
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
gs
ja
cmp
inc
ret
adc
dec
sub
xor
jge
inc
hlt
xchg
ja
pop
inc
into
dec
pop
inc
ja
lods
mov
sub
popf
xor
mov
gs
ja
lahf
dec
div
mov
dec
inc
pop
cli
jge
pop
inc
out
mov
ror
test
ja
out
mov
cmp
hlt
xchg
(bad)
jle
inc
into
dec
pop
inc
ja
lods
mov
sub
test
inc
ja
lahf
dec
lahf
enter
cli
push
inc
ja
ret
shl
dec
inc
pop
cli
adc
pop
inc
out
mov
adc
(bad)
cmps
mov
dec
pushf
sbb
stos
sub
xchg
jb
xor
mov
inc
ja
lahf
dec
(bad)
mov
mov
test
cli
jge
pop
inc
out
mov
ror
mov
mov
sub
inc
hlt
xchg
imul
mov
dec
inc
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
mov
mov
push
jle
inc
hlt
xchg
ins
popf
sbb
mul
push
dec
inc
pop
shl
pop
inc
lahf
test
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
mov
cmps
mov
jne
sbb
stos
std
jg
inc
fadd
ja
loop
ja
pop
fiadd
ds
sub
mul
out
inc
pop
shl
pop
mov
mov
fadd
ja
loop
ja
pop
fiadd
ds
sub
mul
cs
inc
pop
shl
pop
mov
retf
mov
inc
jg
inc
loop
je
pop
fiadd
test
ja
or
retf
mov
stos
add
lahf
dec
addr16
ja
lahf
push
lahf
lods
pusha
inc
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
xor
mov
pusha
inc
ja
lahf
dec
lahf
hlt
pusha
inc
ja
push
inc
ja
ret
shl
xchg
add
ret
mov
ja
fadd
xor
stos
sti
js
inc
into
dec
pop
inc
ja
lods
mov
push
stos
and
inc
loop
ja
pop
fiadd
mov
xor
add
lahf
xor
inc
ja
lahf
push
pop
xchg
xchg
ja
out
mov
(bad)
js
inc
hlt
xchg
ja
pop
sub
pop
sub
pop
inc
ja
movs
ss
pop
jnp
inc
rol
lahf
mov
ret
inc
movs
test
arpl
sub
retf
mov
ret
mov
mov
pop
inc
mov
mov
mov
mov
mov
shl
and
int
ja
rol
fwait
mov
add
imul
or
ds
push
dec
(bad)
mov
mov
test
js
cmc
xor
inc
cli
(bad)
movs
mov
ret
jns
inc
(bad)
mov
xor
lds
mov
pop
inc
pop
inc
imul
fadd
jbe
push
mov
sbb
add
cmp
inc
pop
inc
imul
xor
lods
lahf
sbb
test
add
pop
inc
ja
mov
xchg
lods
sub
pop
inc
sub
fisubr
and
or
fmul
xor
mov
fsub
jmp
movs
mov
idiv
dec
jecxz
fsub
mov
inc
jb
pop
inc
ja
fmulp
mov
retf
or
dec
rol
lahf
or
enter
pop
pop
inc
xor
mov
ins
inc
ja
fidivr
mov
mov
ja
rcl
jg
(bad)
aas
mov
into
and
add
(bad)
ret
mov
jbe
rol
inc
rol
movsx
mov
retf
cmps
mov
mov
inc
cld
push
push
enter
mov
jb
(bad)
aaa
mov
into
and
add
(bad)
sar
adc
inc
pop
inc
lea
ja
in
ja
rol
jecxz
movs
mov
ja
xor
inc
(bad)
(bad)
sar
pop
jp
inc
mov
inc
inc
pop
adc
sub
ja
(bad)
mov
movs
mov
xor
add
jne
pop
ret
lahf
push
stos
mov
jle
cs
and
push
sahf
sbb
push
mov
jbe
pop
into
repnz
(bad)
mov
movs
mov
ja
movs
mul
mov
retf
mov
sti
mov
sar
out
mov
sti
mov
repnz
or
mov
rol
jmp
movs
mov
and
push
sahf
mov
inc
ja
sti
lahf
xor
mov
icebp
jnp
inc
sar
cli
(bad)
out
mov
repnz
mov
dec
inc
pop
stos
xchg
mov
sbb
mov
dec
jnp
inc
fadd
(bad)
repnz
movs
mov
ja
fisub
ja
pop
and
mov
mov
imul
mov
push
(bad)
jecxz
mov
mov
mov
mov
ja
pop
sub
pop
sub
pop
into
repnz
xor
mov
inc
ja
fwait
dec
repz
mov
inc
(bad)
mov
movs
mul
mov
test
ja
es
xor
mov
icebp
je
inc
fadd
mov
mov
push
pop
inc
cli
(bad)
cmps
mov
add
outs
inc
ja
cwde
dec
mov
inc
sub
sub
ja
fidiv
mov
mov
add
push
xor
inc
pop
stos
cmp
inc
hlt
dec
mov
jge
pop
mov
inc
mov
inc
inc
pop
sub
pop
inc
cli
(bad)
cmps
mov
lahf
hlt
outs
inc
ja
pop
sub
(bad)
cmps
mov
xor
movs
mov
mov
out
mov
inc
rcl
cmps
mov
push
dec
fsub
jmp
movs
mov
inc
inc
pop
into
repnz
push
inc
inc
pop
sti
loopne
pop
inc
and
inc
inc
sbb
mov
push
out
mov
pop
inc
cld
mov
mov
inc
ja
mov
mov
sub
xchg
xor
mov
and
or
sub
lds
sbb
retf
cs
lahf
mov
ja
cdq
and
(bad)
jb
retf
cs
lahf
clc
push
and
add
out
inc
inc
pop
retf
rcl
adc
pop
retf
rcl
or
dec
in
push
mov
dec
rcl
inc
cmps
dec
in
push
or
push
pop
adc
inc
lahf
clc
imul
adc
fwait
ror
pop
dec
jecxz
rol
xchg
pop
sub
push
pop
daa
retf
daa
stos
loope
ja
fadd
(bad)
mov
xor
jp
inc
pop
mov
xor
sbb
lahf
fs
ja
mov
mov
xor
push
hlt
and
or
and
in
push
mov
pop
inc
jb
in
push
mov
dec
rcl
into
xor
adc
into
push
mov
pop
mov
pop
sub
mov
test
lods
movs
addr16
xor
inc
(bad)
push
(bad)
adc
inc
and
rol
(bad)
sbb
sbb
sti
pop
pop
ja
mov
inc
inc
pop
adc
adc
push
jg
mov
mov
iret
leave
push
inc
ja
mov
mov
repnz
mov
inc
ja
fdivrp
xchg
mov
fwait
mov
adc
je
ja
popf
dec
mov
(bad)
ja
pop
ret
dec
inc
ja
movs
div
int3
outs
inc
ja
lahf
dec
jle
cs
mov
xchg
mov
jnp
jne
ja
sar
ret
mov
push
aaa
test
test
(bad)
mov
inc
ja
fdivrp
xchg
mov
fwait
mov
lahf
sub
inc
ja
fwait
aaa
inc
retf
bextr
inc
pop
shl
movs
idiv
ss
stos
mov
sbb
jge
mov
ds
pop
test
jb
sbb
sbb
sti
arpl
inc
lahf
shl
adc
std
fcomp
scas
sbb
test
ja
shl
and
pop
inc
ja
mov
inc
inc
pop
retf
xchg
mov
ja
mov
retf
mov
mov
pop
push
test
ja
mov
inc
inc
pop
shl
pop
inc
(bad)
mov
mov
test
or
repnz
mov
inc
inc
inc
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
push
dec
lahf
clc
push
inc
ja
ret
shl
inc
inc
pop
cli
adc
pop
inc
out
mov
adc
(bad)
pop
mov
das
lahf
sbb
(bad)
pop
mov
xlat
jo
inc
hlt
xchg
div
inc
into
dec
pop
inc
ja
lods
mov
arpl
stos
mov
ja
movs
mov
ja
fadd
xchg
popf
sub
sbb
(bad)
pop
mov
repz
inc
hlt
xchg
aaa
jo
inc
into
dec
pop
inc
ja
lods
mov
arpl
stos
mov
ja
movs
mov
ja
fadd
ja
loop
ja
pop
fiadd
ds
jg
pop
inc
into
and
ja
lods
mov
xchg
mov
xchg
ja
out
xchg
mov
imul
ss
sub
sbb
(bad)
pop
mov
push
pushf
sbb
(bad)
pop
mov
stos
jno
inc
hlt
xchg
xchg
mov
(bad)
jno
inc
into
dec
pop
inc
ja
lods
mov
arpl
stos
mov
ja
movs
mov
ja
fadd
xor
mov
loope
ja
fadd
ja
loop
ja
pop
fiadd
ds
sub
(bad)
pop
mov
jecxz
pop
inc
hlt
xchg
je
sbb
(bad)
pop
mov
div
inc
hlt
xchg
xchg
mov
inc
jno
inc
into
dec
pop
inc
ja
lods
mov
pop
stos
inc
jno
inc
loop
ja
pop
fiadd
inc
mov
sbb
inc
mov
push
inc
inc
pop
shl
pop
into
repnz
mov
inc
inc
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
push
ja
lahf
dec
pop
or
inc
xchg
mov
push
ja
lahf
dec
(bad)
mov
mov
test
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
push
ja
lahf
dec
pop
pop
test
ja
fiadd
mov
push
ja
lahf
dec
lahf
and
inc
ja
push
inc
ja
ret
shl
xchg
add
repnz
mov
mov
shl
pop
inc
mov
push
into
repnz
mov
ins
stos
add
repnz
mov
jle
inc
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
push
ja
lahf
dec
pop
inc
test
ja
fiadd
mov
push
ja
lahf
dec
lahf
mov
push
inc
ja
ret
shl
xchg
add
repnz
mov
inc
inc
inc
pop
shl
pop
mov
retf
test
movs
retf
cmc
jae
inc
loop
je
pop
fiadd
test
ja
or
retf
mov
stos
add
retf
mov
inc
inc
pop
shl
pop
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
imul
lahf
dec
pop
popf
xchg
ja
fiadd
mov
imul
lahf
dec
imul
mov
inc
inc
pop
cli
jge
pop
inc
out
mov
ror
mov
inc
xchg
mov
imul
lahf
dec
lahf
push
imul
push
inc
ja
ret
shl
inc
inc
pop
cli
adc
pop
inc
out
mov
adc
(bad)
pop
mov
das
lahf
sbb
(bad)
pop
mov
mov
hlt
xchg
cmps
sahf
sbb
(bad)
pop
mov
jnp
pop
inc
hlt
xchg
ja
pop
sub
pop
sub
pop
inc
ja
or
inc
cmps
pushf
mov
inc
cli
(bad)
pop
mov
jnp
pop
inc
sbb
pushf
movs
mov
ja
movs
mov
test
movs
stos
xchg
outs
pop
inc
mov
cmps
pushf
mov
jb
add
mov
test
(bad)
cmps
fisubr
and
or
cdq
mov
movs
inc
fistp
hlt
out
mov
add
pop
enter
stos
xlat
outs
pop
inc
cld
push
push
into
and
retf
cmps
mov
nop
retf
mov
push
inc
ins
pop
inc
lahf
jnp
mov
inc
inc
pop
sub
sbb
xor
inc
ja
fsubp
mov
into
repnz
mov
pop
inc
pop
sub
pop
inc
cli
(bad)
out
mov
fcomp
xchg
ja
pop
inc
ja
mov
xchg
mov
push
cmp
inc
ja
xor
inc
pop
into
repnz
(bad)
mov
movs
mov
ja
sar
mov
sti
mov
repnz
push
mov
push
cmp
inc
ja
xor
stos
add
repnz
mov
pop
inc
pop
into
repnz
(bad)
mov
int
ja
mov
xchg
mov
cmps
mov
(bad)
xor
pop
into
repnz
movs
mov
pop
inc
pop
shl
pop
inc
mov
jecxz
mov
(bad)
xchg
mov
pop
inc
hlt
inc
mov
imul
mov
add
pop
inc
cli
(bad)
jecxz
mov
mov
mov
mov
ja
pop
sub
pop
sub
pop
into
repnz
xor
mov
fwait
dec
repz
mov
movs
stos
mov
pop
inc
(bad)
mov
movs
not
mov
test
ja
es
xor
mov
jmp
xchg
fidivr
mov
fiadd
(bad)
cmps
mov
add
jo
ja
popf
dec
mov
inc
sub
xor
ja
fidivr
mov
and
mov
mov
(bad)
push
inc
ja
xor
inc
pop
stos
daa
imul
inc
into
repnz
stos
mov
inc
xor
stos
add
repnz
push
les
mov
repz
ja
fmulp
mov
mov
mov
fwait
dec
repz
pop
inc
ja
pop
mov
mov
fmulp
mov
inc
ja
lods
cmp
inc
pop
into
repnz
mul
mov
mov
xlat
cmps
mov
ja
xor
add
imul
daa
sub
xor
outs
pop
inc
hlt
xchg
mov
jb
jl
sbb
mov
(bad)
fisttp
jns
retf
test
mov
iret
mov
scas
mov
mov
cld
mov
mov
mov
mov
fadd
sbb
pop
adc
ja
(bad)
mov
into
repnz
mov
pop
retf
mov
mov
mov
movs
not
mov
jae
ja
(bad)
mov
dec
adc
sbb
retf
mov
and
or
sub
mov
bound
ret
or
push
pop
inc
pop
retf
movs
ss
adc
inc
rcl
(bad)
into
cmovno
xor
lahf
cmp
ja
popf
adc
stos
jge
ja
jecxz
cmp
mov
retf
inc
inc
mov
push
into
and
adc
adc
into
xor
xor
sub
pop
sub
pop
stos
addr16
inc
inc
in
ja
sar
xchg
pushf
into
xor
jl
ja
mov
push
inc
pop
enter
sbb
(bad)
cmps
jecxz
addr16
pop
stos
jecxz
pop
inc
and
xor
mov
ins
inc
ja
pop
mov
pop
inc
pop
retf
mov
dec
xor
sbb
mov
cli
(bad)
pop
mov
mov
jae
ja
pop
mov
jbe
movs
mov
mov
mov
(bad)
mov
push
div
inc
and
rol
mov
shl
loopne
fidiv
test
mov
js
push
mov
xor
adc
ret
add
into
push
mov
sub
xor
pop
inc
mov
loop
inc
mov
pop
inc
pop
dec
rol
shl
sbb
push
scas
adc
rcr
sbb
inc
pop
mov
ja
mov
mov
xor
into
sbb
or
xchg
shl
dec
pop
xor
sahf
dec
pop
inc
and
sub
pop
sub
pop
sub
pop
sub
pop
sub
retf
inc
ja
xor
inc
xor
push
mov
pop
inc
pop
retf
aaa
dec
ja
lods
movs
inc
mov
adc
jae
jbe
loop
inc
lahf
int3
jae
ja
pop
adc
jae
jbe
ficomp
inc
lahf
cmp
inc
ja
pop
adc
jae
jbe
loop
inc
lahf
sub
inc
ja
pop
adc
jae
jbe
fcomp
inc
lahf
sbb
inc
ja
pop
adc
jae
jbe
(bad)
sbb
or
inc
ja
mov
and
sub
xor
jbe
fdiv
inc
mov
pop
inc
pop
sub
xor
jbe
fdiv
inc
mov
pop
inc
pop
sub
xor
jbe
loopne
inc
mov
pop
inc
pop
sub
xor
jbe
loop
inc
mov
pop
inc
pop
retf
stos
retf
pop
adc
jae
jbe
ficomp
inc
lahf
mov
inc
ja
pop
adc
jae
jbe
ficomp
inc
lahf
mov
pop
adc
jae
jbe
loopne
inc
lahf
nop
jl
ja
pop
adc
jae
jbe
loopne
inc
lahf
cmp
out
imul
movs
inc
scas
retf
add
sub
ret
push
inc
ja
cmps
mov
ja
sbb
arpl
add
les
inc
sbb
ficomp
inc
lahf
js
inc
ja
cmps
mov
ja
jns
ja
clc
jg
add
les
inc
sbb
loop
inc
lahf
push
jl
ja
lods
add
pop
sub
add
(bad)
gs
inc
aam
les
ja
dec
les
inc
xor
ss
mov
push
inc
pop
sub
add
mov
inc
retf
add
dec
les
inc
xor
aaa
inc
mov
push
inc
pop
sub
add
(bad)
gs
inc
aam
cli
add
dec
les
inc
xor
ss
mov
push
inc
pop
sub
add
sti
gs
inc
aam
ret
sub
aaa
inc
xor
ss
mov
push
inc
pop
retf
mov
mov
ja
cmp
inc
clc
pop
call
les
inc
sbb
loop
inc
lahf
adc
inc
ja
cwde
push
(bad)
cmps
fsubr
cmp
pop
imul
mov
add
add
ror
sub
stos
hlt
mov
dec
loopne
fcomp
inc
sbb
gs
inc
div
push
xchg
or
inc
sbb
fcomp
inc
sbb
mov
rol
(bad)
daa
sub
ja
pop
inc
not
xor
xchg
cwde
sbb
inc
pop
inc
ja
gs
clc
pop
xlat
add
ja
outs
ja
add
ja
xor
push
mov
stos
adc
xor
push
xor
ret
or
mov
sbb
cdq
add
sub
jg
pop
inc
aam
les
ja
mov
sub
outs
ja
add
ja
outs
pop
xlat
add
out
pop
inc
cld
push
mov
stos
adc
xor
sbb
ret
or
stos
pushf
sbb
cdq
add
sub
mov
pop
inc
aam
sti
add
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
inc
pop
inc
sbb
dec
xor
inc
jge
ja
popf
sub
xor
jbe
fdiv
inc
mov
push
inc
pop
sub
outs
ja
add
ja
outs
pop
xlat
add
sub
ja
xor
sbb
inc
or
sbb
add
sub
das
pop
inc
aam
cli
add
lods
jae
inc
pop
sub
outs
ja
add
ja
outs
pop
xlat
add
sub
ja
xor
sbb
inc
or
outs
cwde
sbb
cdq
add
sub
imul
aam
clc
add
pop
mov
ja
pop
mov
ja
dec
sub
jecxz
inc
ja
jae
ja
pop
adc
lea
cwde
xor
mov
push
fdiv
inc
xor
jbe
fdiv
inc
xor
jbe
jecxz
inc
xor
cmp
ja
in
ja
xor
inc
pop
inc
daa
sub
cdq
xor
add
ja
icebp
addr16
clc
push
call
mov
pop
sub
outs
and
add
adc
aas
sub
inc
pop
inc
sbb
ret
or
stos
pushf
sbb
mov
add
inc
aam
mov
ret
push
inc
pop
sub
inc
xor
jbe
pop
adc
sub
cdq
xor
add
ja
outs
stos
jmp
inc
sbb
fcomp
inc
sbb
jecxz
inc
pop
outs
pop
inc
ja
imul
sbb
ret
or
stos
pushf
sbb
mov
jnp
pop
inc
aam
cli
add
pushf
pop
xor
sub
outs
ja
add
ja
outs
and
add
pop
inc
pop
inc
sbb
inc
pop
sub
inc
pop
inc
pop
inc
pop
ret
daa
sub
(bad)
lods
add
ja
xchg
pusha
ja
clc
outs
call
mov
movs
jbe
fcomp
inc
sbb
jecxz
inc
sbb
movs
pop
inc
ja
xor
inc
xor
inc
or
sbb
sbb
cdq
add
sub
sti
pusha
pop
inc
aam
clc
add
mov
scas
inc
fdiv
inc
xor
jbe
jecxz
inc
xor
ret
ja
movs
inc
ja
xor
inc
pop
sub
pop
adc
adc
cwde
xor
add
inc
ja
das
loop
inc
xor
jbe
fdiv
inc
xor
jbe
jecxz
inc
xor
and
pop
jbe
pop
sub
pop
inc
daa
sub
cdq
xor
add
ja
push
pusha
ja
clc
jae
add
ja
outs
ja
add
ja
outs
pop
xlat
add
sub
inc
xor
inc
pop
sub
sub
ja
xor
add
lods
cwde
sbb
inc
mov
push
inc
pop
loopne
ficomp
inc
sbb
fcomp
inc
sbb
jecxz
inc
sbb
or
ja
sti
inc
ja
xor
inc
or
jno
sbb
cdq
add
sub
jmp
pop
inc
aam
clc
add
pop
mov
ja
pop
mov
ja
inc
sub
pop
inc
pop
rcr
ja
dec
sub
fist
pop
lahf
test
ja
pop
cdq
xor
inc
pop
stos
pop
popa
pop
inc
aam
cli
add
pop
mov
ja
pop
mov
ja
inc
sub
inc
pop
inc
pop
sbb
sub
ja
fist
pop
sar
add
pop
cdq
xor
inc
pop
stos
push
popa
pop
inc
aam
into
add
mov
sub
outs
ja
add
ja
outs
and
add
outs
sub
stos
inc
pop
inc
sbb
ret
or
stos
pushf
sbb
inc
add
ja
mov
push
inc
pop
loopne
fcomp
inc
sbb
fcomp
inc
sbb
jecxz
inc
sbb
mov
inc
ja
dec
sub
fist
pop
lahf
test
ja
pop
cdq
xor
inc
pop
stos
(bad)
inc
aam
les
ja
pop
mov
ja
pop
mov
ja
dec
sub
inc
pop
inc
pop
jmp
ja
fist
pop
mov
mov
inc
lahf
xor
ja
ret
loopne
inc
mov
(bad)
mov
mov
mov
mov
shl
sbb
jb
retf
scas
cwde
xor
stos
jb
mov
add
mov
cmp
call
push
retf
pop
mov
ja
pop
bound
(bad)
push
xchg
or
inc
sbb
fcomp
inc
sbb
mov
rol
(bad)
daa
sub
ja
pop
inc
not
xor
xchg
cwde
sbb
inc
pop
inc
ja
mov
inc
clc
pop
xlat
add
ja
outs
ja
add
ja
xor
push
mov
stos
adc
xor
push
xor
ret
or
mov
cdq
add
sub
jmp
pop
inc
aam
les
ja
mov
xor
sub
outs
ja
add
ja
outs
pop
xlat
add
pop
inc
pop
inc
cld
push
mov
stos
adc
xor
sbb
ret
or
stos
pushf
sbb
cdq
add
sub
das
arpl
aam
sti
add
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
inc
pop
inc
sbb
dec
xor
fdivr
ja
popf
sub
xor
jbe
fdiv
inc
mov
push
mov
pop
sub
outs
and
add
adc
aas
sub
dec
sub
adc
lahf
test
ja
ficomp
lahf
lods
inc
inc
ja
mov
ss
fisubr
cmp
sub
pop
inc
daa
stos
cmc
pop
ja
xor
lods
add
ja
sbb
inc
movs
jbe
ficomp
inc
lahf
aam
inc
ja
rcl
add
add
inc
sbb
inc
pop
mov
ja
and
mov
sbb
or
outs
stos
jmp
inc
sbb
fcomp
inc
sbb
jecxz
inc
pop
outs
pop
inc
ja
imul
je
fist
pop
lahf
test
ja
ficomp
lahf
adc
inc
ja
fnclex
xor
mov
movs
jbe
fcomp
inc
sbb
jecxz
inc
pop
outs
pop
inc
ja
sub
cmc
inc
ja
xor
ret
or
stos
pushf
sbb
mov
outs
pop
pop
inc
aam
les
ja
and
mov
fdiv
inc
xor
jbe
jecxz
inc
xor
ret
ja
xor
inc
pop
inc
pop
inc
daa
sub
cdq
xor
add
ja
sbb
add
ja
outs
ja
add
ja
outs
pop
xlat
add
sub
sub
inc
pop
inc
pop
sbb
sub
ja
xor
lods
add
lods
cwde
sbb
inc
mov
imul
inc
iret
stos
imul
scas
rol
fcomp
inc
sbb
jecxz
inc
sbb
inc
pop
sub
inc
pop
inc
sbb
inc
or
fs
sbb
cdq
add
sub
sub
inc
aam
mov
sub
inc
ja
add
pop
mov
ja
dec
sub
sub
inc
ja
xor
ja
pop
sub
pop
adc
inc
add
xor
pusha
inc
inc
ja
iret
loopne
inc
xor
jbe
fdiv
inc
xor
jbe
jecxz
inc
xor
cmps
pop
inc
ja
mov
pop
pop
inc
pop
inc
daa
sub
cdq
lods
add
ja
mov
ja
clc
aas
(bad)
add
ja
outs
ja
add
ja
outs
pop
xlat
add
sub
inc
xor
sub
ja
xor
add
lods
cwde
sbb
inc
mov
push
pop
loopne
loopne
inc
sbb
fcomp
inc
sbb
jecxz
inc
sbb
inc
pop
sub
dec
sub
fist
pop
sar
add
pop
cdq
xor
inc
pop
stos
divps
aam
into
add
lods
ror
pop
sub
outs
ja
add
ja
outs
and
add
outs
sub
xor
dec
sub
fist
pop
lahf
test
ja
pop
cdq
xor
inc
pop
stos
dec
pop
pop
inc
aam
les
ja
pop
mov
ja
pop
mov
ja
inc
sub
sub
arpl
pop
inc
not
xor
jbe
sbb
inc
pop
inc
ja
pop
pop
ja
clc
arpl
add
ja
outs
ja
add
ja
outs
pop
xlat
add
pusha
sub
inc
ja
xor
jbe
pop
sub
pop
inc
not
xor
lea
mov
imul
out
loopne
inc
lahf
imul
adc
lods
movs
inc
mov
mov
xor
or
xchg
shl
push
jne
dec
(bad)
mov
mov
mov
pop
sub
inc
pop
inc
sbb
inc
xor
inc
fstp
inc
pop
retf
movs
mov
ja
xor
stos
rcr
rol
ja
fsub
mov
push
add
ja
mov
stos
inc
push
adc
push
mov
movs
sub
xor
inc
fld
hlt
xchg
sub
movs
mov
or
scas
add
add
ss
xchg
outs
retf
jle
das
pusha
sbb
push
mov
sub
sbb
inc
pop
inc
imul
fadd
(bad)
sub
xchg
and
mov
inc
ja
or
daa
(bad)
mov
mov
test
lods
les
jmp
ja
fiadd
mov
inc
inc
ja
mov
dec
ja
pop
fiadd
push
movs
ret
or
repz
mov
ins
pop
ja
shl
idiv
movs
inc
add
fwait
mov
movs
mov
outs
inc
pop
ret
or
repz
mov
pop
pop
ja
fstp
mov
push
pop
push
jmp
mov
dec
inc
ja
stos
inc
xchg
popf
ret
or
repnz
mov
xchg
push
ja
fstp
mov
push
pop
or
add
fiadd
mov
dec
inc
ja
es
adc
sbb
(bad)
pop
mov
xlat
push
pop
inc
idiv
movs
dec
add
rol
pop
into
repnz
movs
mov
pusha
inc
pop
retf
stos
retf
es
aad
sbb
(bad)
pop
mov
sbb
idiv
movs
dec
add
pushf
mov
into
repnz
movs
mov
pusha
inc
pop
ret
or
icebp
xor
mov
gs
ja
fstp
mov
push
pop
(bad)
jmp
inc
mov
inc
ja
es
dec
icebp
sbb
(bad)
pop
mov
addr16
pop
inc
(bad)
mov
movs
inc
cmps
mov
idiv
movs
dec
add
push
lds
pop
into
repnz
movs
mov
popa
inc
pop
sub
pop
sub
or
inc
mov
add
mov
mov
sub
repnz
add
add
pop
mov
push
dec
pop
stos
xchg
inc
hlt
xchg
xchg
mov
push
mov
xchg
xor
or
cld
nop
inc
leave
adc
mov
shl
inc
(bad)
pop
jno
or
lahf
dec
mov
mov
lahf
dec
jle
das
dec
sbb
pop
pop
inc
sub
pop
push
(bad)
cmps
fisubr
and
or
jno
sbb
mov
das
ja
fisubr
pop
xor
add
fisubr
lahf
push
popf
pop
ja
loop
ja
pop
fiadd
mov
test
mov
icebp
xor
mov
mov
ja
(bad)
test
dec
sub
(bad)
mov
mov
inc
idiv
test
mov
icebp
xor
mov
mov
ja
jecxz
inc
pop
mov
retf
cmp
(bad)
mov
xor
add
repnz
lods
mov
bound
ret
retf
mov
pop
pop
call
scas
cmp
ja
out
(bad)
mov
xor
add
repnz
lods
mov
bound
ret
retf
mov
pop
or
add
fisubr
lahf
adc
ja
stos
inc
xchg
popf
ret
retf
mov
pop
das
call
scas
cmp
ja
out
(bad)
mov
xor
les
pop
into
repnz
lods
mov
bound
ret
retf
mov
pop
jmp
fisubr
lahf
mov
out
(bad)
mov
xor
repnz
lods
mov
arpl
retf
mov
mov
retf
mov
pop
stos
call
scas
cmp
ja
out
(bad)
mov
xor
add
repnz
lods
mov
arpl
ret
retf
mov
pop
arpl
add
fisubr
lahf
enter
sub
jecxz
inc
(bad)
(bad)
call
scas
mov
(bad)
stos
mov
mov
xlat
add
clc
icebp
sbb
mov
lahf
push
inc
mov
mov
mov
retf
mov
dec
inc
pop
inc
imul
shl
scas
mov
mov
inc
xor
xlat
add
and
scas
mov
dec
repnz
pop
inc
ja
pop
inc
ja
(bad)
mov
fisttp
retf
mov
dec
inc
pop
inc
idiv
movs
mov
repnz
pop
inc
ja
fidivr
or
ja
mov
mov
repnz
xor
add
repnz
mov
outs
inc
pop
shl
movs
mov
aaa
pop
pop
inc
int
int3
pop
adc
test
mov
xchg
cs
dec
(bad)
mov
les
inc
pop
inc
hlt
jle
fidiv
inc
pop
ss
sub
loop
inc
xor
add
repnz
mov
outs
inc
pop
retf
stos
retf
retf
loop
inc
xor
pop
into
repnz
mov
pusha
inc
pop
shl
pop
inc
ja
fidivr
lahf
pusha
dec
inc
ja
call
movs
inc
mov
(bad)
cmps
mov
addr16
mov
inc
pop
inc
add
into
fidivr
lahf
mov
rcr
mov
inc
cli
(bad)
cmps
mov
jae
(bad)
(bad)
mov
mov
(bad)
mov
and
fadd
repnz
mov
arpl
sub
scas
fwait
xor
mov
and
mov
dec
repnz
ja
fidivr
mov
or
cs
(bad)
mov
mov
mov
retf
mov
inc
inc
pop
inc
mov
mov
rcl
add
xchg
fwait
sbb
(bad)
cmps
mov
ja
pop
inc
hlt
xchg
clc
icebp
sbb
(bad)
cmps
mov
inc
push
pop
inc
cli
(bad)
cmps
mov
inc
push
pop
inc
inc
(bad)
mov
mov
(bad)
mov
mov
movs
mov
cld
(bad)
(bad)
mov
mov
movs
mov
mov
(bad)
mov
mov
movs
mov
xchg
mov
ret
mov
mov
add
fidivr
lahf
cmp
inc
ja
lahf
push
cli
(bad)
cmps
mov
mov
pop
inc
inc
xchg
mov
mov
movs
mov
ja
sar
mov
aas
pop
push
and
sbb
inc
scas
mov
fcom
inc
cli
(bad)
cmps
mov
ret
mov
ja
(bad)
(bad)
mov
sub
dec
enter
mov
pop
adc
adc
ja
fidivr
sbb
mov
sub
ja
pop
sub
add
inc
or
cli
(bad)
cmps
mov
mov
mov
mov
shl
push
(bad)
jge
movs
mov
mov
ret
adc
ja
sbb
inc
mov
bound
sbb
sbb
sbb
retf
adc
inc
lahf
clc
dec
inc
ja
or
mov
scas
retf
jecxz
sbb
inc
xor
pop
pop
stos
push
push
pop
inc
inc
jmp
add
stos
daa
push
pop
inc
sbb
inc
pop
sbb
test
jnp
inc
rol
jg
outs
fdiv
inc
pushf
inc
daa
ficomp
inc
jecxz
pop
inc
(bad)
fwait
lods
mov
mov
add
cmp
inc
xor
loop
inc
lahf
pusha
dec
inc
ja
ins
push
ja
or
imul
xor
inc
pop
into
repnz
mov
movs
ss
xchg
push
ja
xor
sar
add
fdivp
cdq
mov
sar
movs
inc
ja
ficomp
inc
pop
shl
add
mov
neg
inc
mov
div
pop
pop
inc
lahf
loopne
inc
ja
mov
adc
mov
or
xchg
retf
rol
retf
into
loopne
mov
mov
mov
jne
xor
ja
in
inc
scas
movs
mov
addr16
add
mov
xchg
cs
mov
shl
call
mov
les
sub
aaa
ja
popf
(bad)
fsubr
jge
ja
rol
jns
fsubrp
call
scas
mov
mov
(bad)
add
mov
mov
mov
inc
div
xor
mov
mov
mov
addr16
pop
into
repnz
add
repnz
mov
mov
movs
shl
les
jae
pop
inc
sbb
inc
pop
ret
jge
ja
out
xor
add
mov
sbb
add
add
stc
push
ja
(bad)
(bad)
adc
jbe
xchg
xor
inc
pop
mov
out
imul
loop
inc
pop
test
jecxz
inc
mov
fs
pop
retf
or
into
out
cdq
mov
lea
ja
inc
inc
ja
test
shr
lock
xor
add
mov
sbb
arpl
add
sbb
inc
(bad)
(bad)
xchg
scas
movs
mov
xor
inc
pop
mov
out
loope
add
out
sbb
test
fnsave
inc
mov
fs
pop
shl
movs
mov
xor
inc
pop
mov
retf
scas
retf
ja
pop
sub
pop
sub
pop
inc
ja
xor
add
out
dec
pop
inc
inc
out
sub
pop
sub
mov
js
pop
test
sti
movs
dec
ja
(bad)
push
iret
adc
mov
movs
mov
ja
(bad)
into
ret
mov
idiv
inc
add
jecxz
daa
into
out
cwde
mov
out
stos
stos
dec
pop
inc
sbb
adc
inc
pop
mov
add
neg
ret
xor
test
sti
movs
dec
ja
(bad)
push
iret
adc
mov
movs
mov
ja
(bad)
into
ret
mov
idiv
inc
add
jecxz
daa
into
out
cwde
mov
out
stos
repz
pop
inc
sbb
adc
inc
pop
mov
add
neg
mov
push
inc
ja
(bad)
xor
lods
mov
mov
mov
xchg
cwde
sbb
push
mov
inc
inc
xchg
into
jb
add
push
sbb
and
ja
pop
stos
retf
dec
pop
inc
inc
(bad)
sub
inc
sbb
inc
pop
retf
fisubr
mov
xchg
inc
pop
sub
leave
push
ja
rol
scas
test
push
inc
(bad)
fwait
jb
inc
pop
inc
ja
push
mov
pop
inc
cli
push
out
lahf
rcl
sub
inc
ja
add
pop
sub
pop
sub
pop
sub
pop
inc
mov
add
xchg
cwde
sbb
inc
mov
addr16
pop
loopne
fcomp
inc
pop
xlat
jmp
ja
pop
sub
sbb
inc
xor
loope
mov
lahf
xor
ja
pop
inc
ja
sub
add
stos
inc
dec
ja
xor
lahf
fs
inc
ja
fsubrp
call
inc
ja
cdq
dec
ja
xor
mov
movs
test
out
mov
mov
inc
ja
sub
cwde
into
repnz
mov
mov
(bad)
(bad)
fld
aaa
div
add
daa
neg
inc
pop
inc
pop
inc
imul
fadd
jo
jle
ret
add
mov
aaa
div
inc
mov
fistp
retf
fsubrp
cdq
mov
xor
scas
sub
ja
pop
sub
push
dec
ja
or
cli
(bad)
rep
mov
sub
sbb
inc
xor
lods
push
inc
ja
mov
jnp
pop
sub
scas
inc
ja
xor
jbe
fdiv
inc
mov
jns
pop
test
into
push
cmps
daa
stos
loope
ja
fiadd
cli
push
mov
inc
ja
pop
sub
pop
into
xor
pop
inc
jle
cs
sub
pop
push
(bad)
cmps
fisubr
and
or
outs
jg
and
test
inc
ja
rol
jnp
mov
inc
ja
and
hlt
mov
pop
inc
ja
xchg
dec
ja
push
jbe
pop
dec
repz
ja
dec
inc
ja
das
pop
dec
push
pop
inc
ja
xlat
out
jg
pop
jle
inc
pop
inc
js
and
fidivr
pop
ror
add
push
(bad)
mov
mov
add
outs
sub
add
dec
cmps
movs
mov
mov
test
scas
add
mov
movs
stos
push
cmps
movs
mov
repnz
cmps
mov
mov
mov
jp
pop
dec
mov
ffreep
ja
pop
into
repnz
jbe
jecxz
inc
lahf
mov
inc
ja
fwait
aaa
sbb
fisub
repnz
cmps
mov
cld
(bad)
mov
mov
xchg
cs
cld
(bad)
mov
(bad)
stos
mov
pop
enter
mov
mov
sub
fisub
repnz
cmps
mov
xchg
mov
cmp
sub
inc
pop
sti
add
icebp
dec
ja
fidiv
jle
div
sbb
aas
div
add
xor
ja
jle
ret
add
idiv
div
adc
sbb
jle
div
iret
pop
inc
ja
outs
sub
add
or
and
sar
(bad)
inc
les
ja
push
dec
js
cmp
ja
xor
inc
push
inc
ja
add
cli
inc
call
dec
cs
mov
push
stos
arpl
inc
iret
pop
jbe
ja
mov
mov
inc
inc
pop
inc
cld
push
dec
retf
movs
mov
pop
inc
pop
js
sar
add
pop
js
aaa
cli
add
addr16
jae
add
outs
js
mov
add
ja
jb
clc
add
jg
jb
cli
add
inc
js
jecxz
add
dec
js
dec
les
ja
push
js
push
les
ja
ficomp
ja
cs
lahf
mov
fidivr
jb
cli
add
dec
js
jecxz
add
push
js
ja
add
push
sub
push
dec
inc
mov
dec
stos
iret
dec
pop
inc
pop
mov
cs
lahf
fcom
ja
jbe
ja
lods
movs
inc
cmp
out
mov
shl
(bad)
(bad)
stos
mov
aad
ja
rol
lahf
mov
fistp
inc
mov
jno
pop
retf
mov
inc
ja
(bad)
(bad)
jbe
movs
mov
jmp
inc
idiv
pop
mov
push
sub
ja
or
lahf
adc
inc
ja
outs
stos
jmp
inc
sahf
mov
inc
ja
mov
leave
repnz
movs
mov
mov
mov
pop
neg
inc
jbe
fcompp
ja
pop
sub
(bad)
pop
mov
inc
(bad)
cli
add
fisttp
inc
(bad)
into
jbe
movs
mov
idiv
inc
add
inc
sub
add
fidiv
movs
mov
mov
mov
sbb
jo
add
pop
stos
mov
jbe
loop
inc
mov
jge
pop
stos
adc
inc
iret
lds
ja
mov
mov
repnz
movs
mov
cmp
fwait
xor
mov
(bad)
inc
fadd
ja
(bad)
(bad)
jbe
movs
mov
loop
pop
stos
fwait
dec
pop
inc
idiv
pop
mov
push
sub
ja
push
fwait
xor
adc
inc
ja
outs
pop
loop
pop
stos
jae
pop
inc
sahf
mov
inc
ja
(bad)
inc
mov
ret
dec
inc
pop
ss
mov
inc
sbb
add
ja
jns
ja
movs
jbe
(bad)
sbb
mov
ja
call
mov
dec
rol
mov
jb
movs
mov
jae
bound
ja
mov
inc
lahf
mov
outs
pop
loop
pop
stos
out
pop
inc
sahf
rcr
ret
fiadd
mov
pop
mov
add
mov
pop
mov
repnz
mov
scas
add
repnz
mov
jl
pop
shl
pop
into
repnz
movs
mov
mul
sbb
mov
out
mov
inc
sbb
add
ja
xor
inc
movs
jbe
loop
inc
lahf
push
push
inc
ja
push
inc
ja
fisubr
(bad)
pop
mov
repnz
mov
scas
add
repnz
mov
jl
pop
shl
pop
into
repnz
movs
mov
pop
fcomp
inc
lahf
aam
inc
ja
out
mov
inc
sbb
add
ja
pop
dec
ja
movs
jbe
fcomp
inc
lahf
in
push
inc
ja
cli
inc
ja
sar
cli
(bad)
pop
mov
repnz
mov
mov
mov
mov
jge
pop
shl
pop
into
repnz
movs
mov
pop
fcomp
inc
lahf
ins
push
inc
ja
out
mov
inc
sbb
add
ja
ror
movs
jbe
fcomp
inc
lahf
add
inc
ja
bound
inc
(bad)
into
jbe
movs
mov
idiv
inc
add
jnp
ja
pop
sub
sbb
inc
mov
jg
pop
mov
ja
dec
dec
ja
mov
je
pop
test
mov
mov
js
fidivr
inc
pop
mov
or
jp
arpl
inc
sbb
add
ja
jge
ja
movs
jbe
fcomp
inc
lahf
nop
pop
inc
ja
sahf
inc
ja
fcmovnb
mov
fidivr
xor
retf
mov
inc
mov
mov
pop
fwait
sbb
(bad)
scas
mov
scas
dec
pop
inc
hlt
xchg
mov
inc
cli
(bad)
pop
mov
inc
arpl
add
sbb
(bad)
jbe
movs
mov
ja
pop
sub
sbb
inc
mov
jo
pop
mov
ja
add
mov
jne
pop
test
mov
mov
js
fidivr
repz
pop
mov
or
jp
arpl
inc
sbb
add
ja
xor
jbe
fcomp
inc
lahf
pop
pop
inc
ja
push
inc
ja
fcmovnb
mov
(bad)
inc
mov
ret
dec
inc
pop
mov
mov
sub
(bad)
mov
(bad)
(bad)
jbe
movs
mov
mov
add
fidiv
lahf
dec
push
inc
ja
lahf
push
iret
std
pop
inc
ja
mov
mov
mov
sub
pop
sub
pop
sub
pop
add
add
add
int
ja
rol
cmp
inc
sbb
mov
pop
inc
ja
xor
add
add
dec
inc
ficomp
inc
hlt
mov
add
(bad)
(bad)
xchg
xor
add
ret
mov
ja
xor
(bad)
stos
mov
jne
stos
mov
cmp
inc
ja
(bad)
mov
mov
sbb
dec
inc
pop
mov
pop
into
loop
cmps
mov
jmp
test
pop
inc
ja
pop
into
repnz
mov
pop
mov
add
out
mov
mov
pop
inc
mov
scas
mov
jae
pop
mov
ja
in
ja
xor
inc
xor
inc
xor
inc
pop
inc
aaa
sub
aaa
inc
mov
jae
pop
retf
movs
mov
nop
retf
mov
mov
jne
pop
sub
out
mov
mov
pop
inc
cli
dec
retf
loope
inc
fmul
jbe
cs
cli
(bad)
stos
mov
pop
sar
add
out
mov
mov
pop
inc
sbb
mov
pop
sub
imul
call
movs
mov
ja
pushf
inc
sbb
sbb
inc
pop
inc
(bad)
mov
xor
inc
xor
ret
add
push
fwait
sbb
adc
add
pop
inc
ja
mov
sti
mov
xor
jbe
fdiv
inc
mov
jb
pop
sti
fistp
inc
and
inc
mov
jnp
cs
lahf
mov
add
inc
and
mov
adc
enter
adc
retf
xor
inc
jbe
pop
dec
repnz
pop
inc
ja
es
jle
fiadd
(bad)
cli
add
push
mov
ja
lds
inc
sar
(bad)
inc
stos
mov
ss
mov
ja
fld
inc
pusha
jbe
loop
inc
add
jbe
fcomp
inc
lahf
sub
inc
ja
outs
outs
call
mov
pop
stos
sub
inc
(bad)
mov
scas
retf
outs
pop
loop
pop
ss
outs
imul
pop
stos
aaa
inc
pop
inc
dec
jbe
fdiv
inc
cs
mov
fdiv
inc
mov
jae
pop
js
arpl
add
dec
ret
dec
xor
add
cs
mov
fidiv
inc
mov
jae
pop
js
arpl
add
inc
ret
dec
xor
add
cs
mov
loop
inc
mov
je
pop
test
retf
nop
retf
inc
fidiv
inc
cs
cld
pop
jnp
aaa
inc
pusha
jbe
loop
inc
add
pop
dec
fcomp
inc
dec
jbe
fdiv
inc
cs
cld
pop
jg
ss
fisubr
jbe
(bad)
aaa
inc
cs
cld
pop
pop
shl
inc
pusha
jbe
fcomp
inc
add
pop
psrad
inc
dec
jbe
fdiv
inc
cs
cld
pop
ja
aaa
inc
pusha
jbe
loop
inc
add
pop
imul
inc
jle
das
push
mov
dec
mov
jnp
or
pushf
inc
fiadd
sbb
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
and
mov
inc
ja
rol
sub
pop
or
hlt
xchg
xor
rol
jl
aaa
lea
pop
dec
mov
pop
ror
sbb
leave
inc
push
add
fdivr
ja
popf
inc
ja
xor
sub
lahf
js
mov
cs
addr16
pop
outs
ja
pop
inc
repnz
jg
ja
pop
inc
add
jb
repnz
jg
xchg
inc
pop
inc
cld
pop
jg
inc
and
mov
mov
into
adc
enter
mov
aad
xchg
rol
push
inc
cdq
dec
ja
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
mov
mov
inc
retf
shl
pop
inc
