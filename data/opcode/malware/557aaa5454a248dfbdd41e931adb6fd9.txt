sti
(bad)
(bad)
call
in
sub
push
push
push
push
xor
push
push
call
mov
adc
aaa
jg
adc
mov
call
lea
push
push
fld
call
adc
fstp
std
jne
lea
adc
pusha
add
add
daa
sti
popa
pop
(bad)
push
or
add
sbb
js
sbb
je
mov
sub
jmp
push
call
je
(bad)
frstor
(bad)
sub
push
push
push
push
push
push
ffree
sbb
cmp
jne
xor
pop
pop
pop
leave
ret
push
lea
out
fdivr
clc
push
push
push
push
call
push
call
test
pop
je
fdivr
fwait
out
xor
inc
sbb
mov
jmp
push
call
push
fdivrp
fidivr
push
mov
push
lea
(bad)
out
cmp
popa
lea
push
push
push
push
cmp
xchg
fidivr
jne
jb
push
cmp
(bad)
(bad)
cld
mov
call
xor
(bad)
mov
inc
mov
jmp
push
(bad)
sub
cmp
ja
aaa
idiv
mov
pop
pop
pop
leave
ret
xchg
sub
mov
xchg
push
xchg
fcom
(bad)
adc
add
outs
or
shr
lea
adc
push
cld
call
into
mov
and
fldpi
push
mov
jo
pop
adc
mov
popf
push
pop
ret
push
push
push
call
add
adc
out
or
rol
cmp
jl
add
xchg
mov
sub
jg
push
lea
add
ja
(bad)
out
sub
scas
invlpg
cmp
push
dec
fst
add
out
cmp
je
lea
push
push
cmp
in
adc
pop
movs
or
mov
(bad)
jmp
cmp
jne
push
push
mov
arpl
pop
int3
lea
bound
addr16
mov
adc
add
mov
or
(bad)
mov
push
push
cmp
xor
push
push
add
mov
je
cmp
je
mov
(bad)
jmp
push
push
push
call
push
lea
push
push
inc
push
mov
mov
not
mov
push
neg
test
sbb
pop
test
push
mov
sub
xlat
cmps
pop
in
jge
adc
and
sbb
push
jne
call
cld
out
ret
or
jmp
iret
push
push
and
call
add
xchg
cmp
lahf
sti
fld
imul
movs
dec
jle
ja
addr16
das
mov
mov
mov
mov
out
inc
je
push
call
or
(bad)
inc
mov
rep
lea
xor
push
movs
mov
xlat
(bad)
(bad)
out
je
neg
dec
loopne
retf
mov
mov
mov
mov
mov
fbstp
mov
repz
dec
lock
jne
fist
jne
cmp
jne
push
lea
push
push
dec
push
les
neg
(bad)
(bad)
dec
enter
mov
add
mov
in
xor
jo
xor
in
jecxz
cmp
or
mov
(bad)
std
(bad)
dec
jne
xor
push
lea
sub
or
push
les
call
into
mov
lea
add
popf
push
push
and
inc
fcom
sbb
mov
loop
push
ja
adc
sahf
inc
push
sub
outs
clc
cmp
pop
cmp
xor
hlt
push
jne
lock
push
sldt
add
inc
cmp
jl
jmp
mov
imul
pop
mov
mov
xor
cmp
adc
ds
mov
lea
push
test
push
test
leave
sbb
add
into
adc
mov
mov
or
inc
hlt
mov
mov
out
(bad)
inc
jmp
mov
test
jle
mov
add
lea
cld
mov
dec
sub
mov
leave
jg
inc
mov
inc
add
cmp
(bad)
cmp
or
lock
clc
jl
or
add
fdiv
test
jne
adc
or
inc
test
adc
jg
pop
dec
adc
pop
mov
shl
push
push
(bad)
(bad)
aas
jecxz
pop
in
and
test
mov
mov
jle
lea
mov
cmp
(bad)
(bad)
js
add
mov
cmp
jne
mov
mov
aaa
adc
mov
add
xchg
add
or
(bad)
jle
sub
int
dec
bnd
mov
sub
push
mov
movs
push
or
cwde
xor
mov
jmp
mov
cmps
and
cld
push
mov
add
xor
cmp
pop
mov
jle
push
lea
push
push
push
cld
add
push
inc
add
jl
jmp
mov
imul
push
mov
clc
adc
cld
lea
cmp
cmc
out
leave
adc
inc
clc
cmp
jne
and
inc
call
push
pop
idiv
dec
jne
adc
dec
(bad)
xor
sbb
inc
sbb
movs
cmp
dec
jp
and
lea
inc
popa
fs
push
ss
adc
mov
fwait
inc
and
sbb
jnp
clc
inc
and
push
sub
push
lea
push
(bad)
dec
pusha
ja
inc
and
and
adc
xlat
(bad)
rcl
adc
mov
or
adc
or
push
dec
lods
push
iret
fdivp
dec
in
pop
add
test
call
and
pusha
mov
push
xor
jmp
mov
and
mov
xchg
mov
add
mov
push
push
push
adc
pop
or
imul
mov
(bad)
push
push
push
push
mov
or
call
xor
jne
fbld
and
xchg
mov
adc
not
push
jmp
mov
fdiv
fstp
loopne
sar
xor
and
adc
ja
mov
cld
add
xlat
pop
ret
(bad)
add
call
and
push
push
push
add
jmp
push
push
adc
mov
lock
mov
sub
and
xor
sub
xor
and
bound
adc
pop
inc
push
mov
enter
xor
inc
push
xchg
call
or
call
adc
or
dec
xor
(bad)
push
push
push
test
mov
push
mov
out
out
fidiv
enter
add
sub
mov
sbb
popf
xor
aam
xchg
push
sbb
xor
push
dec
cwde
mov
or
mov
cmp
outs
mov
test
xchg
seta
fldcw
adc
repz
jne
inc
cmp
adc
or
fisttp
dec
pop
fcom
inc
push
pshufw
pop
je
and
adc
adc
xchg
adc
es
fld
push
adc
mov
jg
xor
jo
cmp
fld
fbld
mov
add
push
and
clc
xchg
jnp
adc
push
inc
mov
popa
lahf
fild
je
scas
jmp
xchg
push
jne
xor
push
push
push
push
mov
mov
call
mov
sbb
pushf
test
test
mov
or
mov
cmp
mov
jg
dec
call
add
push
mov
push
push
ins
clc
push
jbe
adc
push
in
sbb
pop
adc
add
jmp
add
cmp
adc
fs
shr
inc
je
jne
loope
sti
add
adc
push
fcomp
push
lods
push
adc
iret
cmp
mov
sub
pushf
fdivp
into
jge
xor
test
iret
push
mov
out
cmp
push
call
cmp
and
sbb
mov
jne
jno
mov
jmp
inc
(bad)
pop
ja
setle
push
sbb
ins
popa
xchg
out
add
push
jb
test
fadd
jno
and
push
push
pop
ret
mov
ret
pop
ja
cmp
jnp
punpcklwd
inc
or
mov
xchg
call
inc
cwde
mov
iret
pop
std
test
sub
jae
push
in
lds
iret
cmp
je
shr
add
(bad)
cdq
or
jp
xor
dec
add
clc
pusha
mov
mov
or
jo
pop
idiv
jo
pop
xchg
push
popa
adc
(bad)
pop
stos
add
push
push
xor
push
add
push
mov
adc
rep
fs
add
xchg
pop
leave
ret
outs
add
sub
mov
pop
inc
fdivr
dec
inc
dec
dec
adc
shl
inc
inc
dec
cmp
ja
cmp
mov
sbb
add
add
in
mov
sub
push
dec
pop
mov
cmp
pop
sbb
in
out
dec
add
cmp
inc
hlt
xchg
std
scas
(bad)
jae
pop
aaa
push
mov
mov
loop
mov
inc
push
add
mov
cmp
jae
mov
aas
push
daa
cs
jne
mov
jmp
inc
jmp
stos
cmps
test
or
(bad)
jg
neg
push
mov
push
add
dec
cmp
jb
cmp
mov
add
add
and
mov
sub
mov
inc
cld
dec
mov
sbb
mov
mov
jmp
or
pusha
cmps
or
push
jo
ret
clc
and
mov
and
sahf
scas
iret
xor
cmp
xor
or
add
add
jne
push
sub
pusha
iret
inc
(bad)
sub
outs
xor
cs
push
mov
rol
push
adc
sbb
push
push
sbb
xlat
xchg
mov
and
push
jmp
call
ss
jmp
jmp
arpl
inc
add
out
das
and
jmp
add
inc
idiv
and
fcomp
or
adc
clc
and
push
push
dec
dec
inc
dec
inc
dec
dec
add
add
(bad)
mov
ins
popa
push
jb
push
outs
xor
xor
add
imul
ins
(bad)
(bad)
jg
and
data16
imul
add
add
imul
push
add
scas
sti
jg
add
add
sbb
jb
(bad)
(bad)
out
fwait
adc
pop
dec
outs
outs
addr16
popa
inc
jne
push
outs
fs
ins
popa
jae
(bad)
mov
ins
gs
or
dec
jns
jne
jo
jb
gs
(bad)
(bad)
push
jo
jae
adc
xor
fs
ins
add
inc
bound
push
jb
jbe
fnstcw
imul
xor
ins
jns
outs
gs
js
push
outs
jb
(bad)
std
idiv
pop
ja
outs
outs
ja
add
ins
dec
push
outs
imul
inc
dec
outs
and
and
arpl
ja
mov
imul
gs
push
arpl
jb
jae
je
lds
mov
popa
jb
push
jb
js
(bad)
mov
add
dec
inc
inc
fs
test
inc
enter
arpl
sar
jp
js
arpl
xor
inc
and
and
ret
test
dec
(bad)
(bad)
(bad)
call
jae
out
arpl
repnz
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
(bad)
(bad)
jmp
movs
jb
mov
xchg
es
test
jno
xor
sbb
(bad)
inc
adc
jne
sub
outs
pop
mov
sub
das
test
add
and
mov
(bad)
(bad)
(bad)
jmp
mov
iret
shr
stos
sti
inc
dec
xor
push
cmp
test
mov
cmp
(bad)
(bad)
(bad)
(bad)
mov
push
ror
or
in
pop
xchg
inc
pop
les
sbb
or
(bad)
(bad)
(bad)
inc
mov
fneni(8087
xor
or
and
ret
bound
enter
aad
test
ins
push
hlt
jmp
and
(bad)
call
mov
mov
dec
add
push
(bad)
(bad)
(bad)
jmp
push
mov
loope
cwde
adc
mov
push
sub
mov
inc
push
inc
cdq
sub
push
push
or
xor
movs
cmp
repz
sti
jl
cmp
(bad)
(bad)
(bad)
push
inc
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
mov
(bad)
(bad)
push
mov
and
xchg
push
aam
pop
int3
pop
gs
ins
jo
push
std
in
mov
call
inc
push
cmps
lea
add
pop
add
shr
(bad)
add
(bad)
(bad)
inc
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
xor
jmp
stc
aaa
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
(bad)
sar
(bad)
(bad)
(bad)
call
int
hlt
pop
(bad)
xor
sub
pusha
push
jg
sbb
(bad)
jmp
leave
pushf
out
mov
sub
mov
jmp
cmp
push
cdq
popa
pop
sub
mov
(bad)
(bad)
jmp
imul
xabort
idiv
(bad)
ficom
out
dec
in
(bad)
pop
mov
out
mov
sti
(bad)
(bad)
(bad)
inc
pop
inc
and
fwait
jne
cmp
sub
stc
loop
bound
or
or
(bad)
(bad)
(bad)
dec
and
(bad)
dec
jg
adc
mov
movs
jbe
jge
fstp
cmps
mov
jns
(bad)
(bad)
(bad)
call
lea
xchg
cwde
mov
mov
call
mov
pop
add
(bad)
(bad)
jmp
scas
inc
and
std
mov
mov
push
cld
jp
mov
sahf
mov
(bad)
(bad)
(bad)
dec
push
lods
(bad)
xchg
or
mov
cmp
shl
aad
outs
fiadd
mov
dec
(bad)
(bad)
(bad)
(bad)
fsubr
adc
dec
pop
cmp
xchg
retf
mov
or
int3
nop
push
neg
(bad)
(bad)
inc
push
imul
jmp
and
test
adc
movs
add
sbb
test
(bad)
(bad)
(bad)
inc
test
sub
test
push
push
add
call
leave
or
(bad)
(bad)
(bad)
in
addr16
jmp
scas
push
inc
add
hlt
xor
xchg
jae
aas
or
gs
sub
(bad)
dec
ss
cmp
sbb
out
sti
test
jnp
jno
cmc
push
enter
(bad)
(bad)
mov
aam
dec
imul
push
vandnps
inc
mov
mov
(bad)
(bad)
(bad)
ffreep
jne
xor
push
ins
dec
adc
das
loope
int3
cmp
add
sub
data16
cmp
(bad)
dec
sub
cmp
loop
jbe
push
dec
push
fisttp
ins
in
outs
out
cmps
test
aaa
mov
inc
pop
mov
fs
(bad)
(bad)
(bad)
push
jmp
jb
icebp
(bad)
push
and
fstp
xchg
fadd
(bad)
jmp
pop
daa
mov
mov
and
jp
clc
adc
xor
mov
ret
mov
adc
cld
(bad)
cmp
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
(bad)
(bad)
(bad)
push
xor
cmp
cmp
inc
inc
inc
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
pop
pusha
bound
push
outs
(bad)
(bad)
(bad)
push
je
js
jl
add
mov
call
test
lods
scas
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
enter
rcl
aam
fcomp
(bad)
loopne
in
call
(bad)
(bad)
push
repnz
idiv
cli
cld
(bad)
sbb
pop
sbb
or
prefetch
add
add
xor
aaa
xor
sub
das
sub
pop
pop
pop
pop
push
push
push
push
dec
dec
dec
dec
inc
inc
inc
inc
jnp
jg
jae
ja
(bad)
(bad)
(bad)
jmp
outs
ins
arpl
gs
cdq
lahf
popf
xchg
xchg
xchg
xchg
mov
xchg
mov
mov
(bad)
(bad)
(bad)
jmp
mov
(bad)
rcl
xlat
aad
leave
iret
int
rol
sti
stc
(bad)
std
repz
div
(bad)
(bad)
(bad)
(bad)
jmp
out
in
jecxz
out
add
adc
and
ss
dec
inc
pop
push
ins
gs
nop
cdq
or
(bad)
(bad)
(bad)
fcom
retf
cmc
out
out
xor
and
push
or
push
stos
mov
popf
xchg
(bad)
(bad)
(bad)
jmp
jmp
jbe
fs
push
pop
inc
dec
ds
sub
sbb
or
out
hlt
std
ret
fcos
(bad)
(bad)
jmp
sbb
imul
push
and
xor
fst
iret
(bad)
stc
lock
(bad)
(bad)
(bad)
call
mov
(bad)
test
lods
mov
or
addr16
push
dec
inc
(bad)
(bad)
(bad)
push
add
xlat
faddp
int3
repz
loope
lahf
xchg
lea
dec
push
pop
arpl
js
(bad)
(bad)
dec
push
sbb
xor
mov
movs
rcr
ror
jmp
in
or
sbb
cs
cmp
(bad)
(bad)
(bad)
inc
push
pop
outs
je
mov
mov
repnz
(bad)
xor
and
adc
(bad)
(bad)
(bad)
jns
imul
dec
inc
add
push
sbb
pop
push
dec
inc
je
bound
mov
mov
call
iret
rcr
jnp
ins
push
pop
inc
dec
and
xor
adc
rcr
out
icebp
cli
(bad)
(bad)
(bad)
call
mov
mov
fcmovbe
int3
(bad)
scas
movs
mov
lahf
inc
dec
push
pop
push
jl
(bad)
(bad)
(bad)
call
adc
and
lea
mov
aad
ret
enter
in
sub
adc
pop
or
(bad)
(bad)
jmp
jae
dec
inc
pop
push
idiv
loope
fcmovnbe
int
scas
movs
mov
sahf
inc
dec
push
pop
imul
(bad)
(bad)
(bad)
call
adc
add
cmp
xchg
mov
ffreep
leave
clc
repz
in
aaa
sub
adc
push
or
outs
jb
dec
inc
pop
push
add
pop
sbb
cmp
pop
push
dec
inc
jne
arpl
mov
mov
jmp
into
rcr
jp
ins
addr16
pop
inc
dec
and
xor
push
add
(bad)
out
lock
(bad)
(bad)
(bad)
call
mov
mov
xor
and
jb
pop
push
inc
dec
rcr
retf
jmp
(bad)
(bad)
mov
adc
cwde
rcr
leave
(bad)
out
std
lock
pop
push
inc
dec
(bad)
(bad)
(bad)
inc
push
sbb
cmp
jp
push
inc
dec
add
cmp
es
test
call
fmul
ret
sti
not
fcmovne
shl
clc
cmc
mov
xchg
adc
aas
sub
outs
arpl
push
inc
dec
fcmovbe
ror
jecxz
stc
mov
test
xchg
adc
(bad)
(bad)
(bad)
jmp
js
push
pop
dec
inc
popa
ins
jnp
push
pop
dec
inc
or
push
cmp
mov
lahf
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
ret
into
in
loopne
cli
mov
lods
mov
(bad)
(bad)
out
cld
addr16
jo
pop
dec
inc
(bad)
(bad)
(bad)
dec
add
sub
add
sbb
xor
jle
push
pop
dec
inc
(bad)
(bad)
retf
call
(bad)
(bad)
push
call
ss
jo
ins
bound
push
pop
loopne
cld
repnz
(bad)
retf
(bad)
call
cmps
mov
fcmovnbe
(bad)
leave
jecxz
push
stos
movs
mov
xchg
popf
pop
add
(bad)
dec
push
pop
jae
outs
popa
lods
mov
mov
in
stc
test
imul
xor
das
add
js
fs
inc
push
pop
push
or
adc
xor
sub
cwde
mov
(bad)
(bad)
jmp
call
ret
dec
pop
push
jns
imul
sub
sbb
xchg
test
rcr
int
jmp
xchg
xchg
jmp
sar
push
(bad)
(bad)
(bad)
dec
add
sbb
cmp
and
loop
(bad)
aam
enter
or
add
push
xor
sub
(bad)
(bad)
(bad)
(bad)
jl
pusha
outs
inc
dec
pop
push
aaa
cmp
and
inc
dec
pop
push
jg
arpl
fxch
(bad)
repz
inc
call
mov
lea
add
add
adc
inc
sbb
and
inc
inc
gs
or
add
pop
xlat
std
add
add
dec
or
dec
pop
or
aas
adc
pop
nop
add
loope
add
int3
jne
call
or
add
(bad)
mov
pop
mov
int
mov
push
push
(bad)
jmp
jo
outs
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
mov
out
fs
add
leave
add
test
push
add
mov
adc
push
push
pop
pop
test
push
je
inc
mov
push
pop
jp
sahf
push
pop
xchg
jno
pop
push
imul
psubq
push
inc
add
dec
add
shl
add
and
add
add
or
into
jne
adc
add
pop
push
test
add
sbb
sbb
cmps
in
mov
sbb
aaa
pop
out
add
fwait
add
add
add
das
dec
and
ret
add
push
int
adc
neg
pop
and
sahf
(bad)
cs
js
sbb
or
jmp
sti
mov
inc
pusha
cs
popa
je
stos
out
je
push
adc
add
add
or
sti
sahf
in
add
or
xor
add
cld
push
pop
add
shr
pop
addr16
gs
outs
arpl
add
popf
or
add
and
push
inc
push
add
jg
and
in
push
cmp
sbb
mov
mov
mov
je
jmp
pop
push
ss
push
(bad)
(bad)
(bad)
(bad)
push
push
push
push
push
push
push
push
call
pop
leave
ret
mov
inc
hlt
inc
adc
sub
jge
das
into
add
push
sub
fwait
int3
mov
test
jne
cmp
and
inc
mov
bound
call
mov
pop
pop
mov
lds
test
push
in
inc
in
repnz
and
adc
pop
add
call
lods
and
sti
(bad)
inc
add
add
xor
mov
ja
mov
popf
sub
cmp
mov
mov
ja
push
push
mov
jg
mov
jmp
pop
lea
(bad)
(bad)
fucomp
lea
fist
movs
call
mov
xor
cmp
pop
dec
cmp
inc
mov
lea
mov
or
stc
cmp
xchg
jl
jmp
push
mov
imul
lea
push
call
(bad)
fistp
jge
lea
push
lea
push
lea
mov
push
mov
call
test
div
lods
push
and
adc
jne
call
pusha
outs
jmp
adc
je
push
out
sub
paddq
shl
lea
neg
out
dec
in
cmp
mov
push
push
sar
mov
xchg
mov
movs
call
pop
and
jne
mov
mov
mov
cmp
mov
xor
ror
inc
pop
pop
xor
pop
call
sbb
ret
jg
sti
add
xor
add
(bad)
test
jne
push
dec
sahf
leave
push
stos
movs
leave
mov
mov
lea
dec
sahf
jle
outs
aam
sahf
dec
sahf
pusha
in
lock
fstp
adc
iret
and
and
adc
iret
push
xor
add
cdq
in
call
xchg
in
retf
cdq
in
fwait
ins
push
js
popf
cdq
in
in
mov
in
jo
popa
cdq
in
in
push
rol
cdq
in
xor
and
in
lock
test
cwde
in
clc
leave
push
cdq
in
jmp
in
in
retf
xor
inc
in
in
lods
dec
sahf
pop
inc
xchg
in
(bad)
fs
pop
ins
push
push
mov
repnz
pop
push
dec
push
and
push
repnz
repnz
sbb
clc
aas
push
mov
and
pop
ret
fnstenv
mov
xor
pop
gs
ret
(bad)
fistp
pop
or
add
xor
mov
push
push
call
and
jnp
adc
sar
mov
sti
(bad)
mov
and
inc
ret
cmp
mov
mov
push
push
call
test
je
pop
aad
lock
push
(bad)
push
call
mov
push
pop
pop
inc
xchg
inc
add
xor
jmp
mov
int3
xchg
add
push
jb
xchg
inc
shr
push
mov
ret
scas
sbb
push
jl
add
mov
ret
div
call
mov
fdivr
call
push
xchg
inc
pusha
pusha
retf
jle
mov
(bad)
adc
xchg
test
ds
push
std
or
jne
jo
or
push
xor
dec
or
retf
outs
or
outs
pop
push
xchg
adc
(bad)
xchg
cld
call
mov
aas
int3
jmp
add
and
adc
sbb
and
and
cmp
shl
repz
xchg
fwait
sub
scas
in
mov
mov
sbb
stc
xor
mov
xchg
and
sbb
add
cld
xor
inc
add
stc
out
mov
mov
sahf
mov
add
mov
mov
test
jmp
fstp
in
xor
fmul
call
adc
jbe
mov
and
adc
js
sti
fcmovnu
add
adc
and
jne
and
sti
sti
int3
pop
push
sbb
push
leave
call
and
inc
add
and
add
xor
add
add
inc
push
bound
mov
mov
add
push
not
add
sbb
sub
jae
adc
dec
add
and
aaa
sti
adc
push
push
stos
js
or
js
jns
daa
jnp
pop
xor
xor
or
aaa
in
jle
xor
push
add
jae
aaa
ss
push
outs
imul
push
or
sti
leave
mov
add
arpl
cmp
mov
jge
cmp
cmp
jo
push
or
add
xor
das
ins
ins
daa
sti
mov
pop
xor
aaa
and
ss
mov
js
jno
push
mov
(bad)
fs
push
jp
test
mov
cmp
imul
dec
inc
and
cmp
verw
je
xor
ja
cmp
jnp
cmp
and
jns
or
(bad)
xor
stos
add
cmp
sub
fst
xor
xor
push
pop
push
rcl
jmp
and
in
xchg
mov
fs
add
xor
sbb
addr16
xor
xor
cmc
add
sti
das
loope
jp
arpl
outs
jo
outs
addr16
ins
outs
gs
jnp
jns
or
xor
outs
inc
(bad)
dec
jno
ins
and
outs
fs
gs
outs
outs
imul
fs
popa
je
pop
cld
mov
hlt
inc
jb
ins
dec
sbb
arpl
cwde
loope
cwde
and
call
add
xor
lahf
add
adc
mov
pusha
xor
std
inc
xor
inc
ins
outs
jae
loop
push
add
gs
je
inc
imul
gs
add
add
ins
or
ins
outs
jb
add
cmovge
gs
(bad)
and
add
je
gs
outs
imul
movs
add
(bad)
(bad)
fnstenv
ds
add
jb
outs
inc
add
clc
add
outs
bound
inc
ins
(bad)
(bad)
fild
outs
popa
fs
imul
add
jno
inc
gs
push
dec
popa
jae
inc
jb
outs
inc
mov
arpl
fs
cld
aas
pop
inc
jmp
add
mov
fdivr
push
scas
inc
outs
jbe
jb
outs
ins
outs
je
je
imul
pop
mov
mov
push
dec
inc
dec
xor
cs
lock
add
add
jo
je
inc
add
out
push
out
and
cli
inc
js
mov
rcl
pop
in
call
inc
add
add
ins
ins
dec
gs
and
push
push
inc
jg
(bad)
mov
push
dec
add
inc
shl
push
popa
fstp
std
sti
je
add
dec
adc
push
je
arpl
jae
adc
cmp
push
push
gs
imul
inc
in
test
outs
add
jmp
gs
js
gs
loop
push
fsub
ins
dec
jg
cmp
mov
jae
addr16
inc
push
movaps
xchg
inc
es
mov
add
es
mov
xor
inc
pop
push
xchg
add
jmp
std
adc
add
pop
add
add
xor
loope
mov
dec
pusha
and
sti
sar
add
push
in
test
lods
call
mov
xlat
dec
sbb
xchg
jg
inc
dec
sub
sbb
push
xor
inc
xor
(bad)
push
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
dec
xor
jae
js
(bad)
(bad)
push
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
(bad)
(bad)
push
ja
xchg
xchg
xor
shl
loopne
out
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
(bad)
(bad)
push
push
xor
imul
xor
mov
xor
(bad)
(bad)
push
jmp
mov
sbb
aaa
test
mov
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
jno
jbe
jl
xchg
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
js
or
out
jl
or
ret
inc
or
xchg
push
aam
xchg
aas
jbe
xchg
js
out
xchg
jae
and
fs
cmp
pusha
xchg
jo
repz
mov
and
jl
jmp
fsub
aas
push
adc
xchg
js
push
adc
daa
push
adc
test
push
mov
mov
add
sub
add
xor
jnp
jnp
mov
add
add
add
fsubp
dec
verr
xor
adc
add
jae
imul
(bad)
add
push
push
cmp
add
movs
or
pop
add
into
or
das
xor
rol
add
pop
and
dec
pusha
or
xchg
rcr
rol
aaa
or
jmp
adc
push
add
add
pusha
pop
cmc
or
ret
mov
add
push
inc
mov
sbb
fsub
add
or
shl
add
shr
ins
jo
leave
sub
jae
mov
pop
sub
xor
loopne
mov
add
shr
pop
out
and
dec
inc
push
add
jg
mov
in
and
sub
(bad)
inc
add
sbb
push
push
push
lea
ja
mov
push
push
inc
cdq
test
mov
mov
xor
lea
sbb
push
adc
clc
add
test
add
add
inc
cld
mov
xor
cmp
out
fs
fcom
call
jmp
fwait
add
add
sti
movs
mov
rcr
push
call
add
dec
xor
test
in
nop
mov
mov
ja
jg
and
add
inc
les
cmp
jne
mov
xor
clc
bound
push
cmp
jne
mov
rcr
or
add
and
sub
call
sar
adc
cwde
add
call
sub
push
push
adc
mov
lock
mov
loope
mov
xor
add
call
cli
cdq
dec
push
push
lea
fdiv
adc
jno
add
adc
aad
fsub
ror
(bad)
push
lea
fdivp
mov
sub
push
add
and
jl
fst
mov
sub
out
jle
add
adc
mov
xor
adc
and
jmp
adc
add
fld
sbb
idiv
ins
(bad)
dec
clc
sbb
push
call
push
lea
mov
sti
sbb
sbb
(bad)
adc
call
xor
push
fwait
(bad)
and
call
jg
clc
dec
gs
push
push
ja
arpl
int
push
inc
mov
punpckhdq
push
jg
(bad)
std
mov
call
hlt
mov
call
cld
mov
je
out
mov
je
movzx
push
add
or
push
das
shr
clc
cmps
cmp
push
push
add
and
aas
sti
(bad)
jge
add
push
lea
and
add
push
hlt
jle
addr16
push
mov
call
or
call
ins
mov
sbb
mov
sbb
jmp
or
sbb
mov
or
pop
push
pushf
jno
jecxz
ret
push
sub
pop
je
mov
pop
pop
xor
pop
leave
ret
adc
push
outs
(bad)
(bad)
fistp
cmp
jne
mov
adc
adc
jg
inc
mov
inc
jne
xor
inc
pop
ret
xor
pop
ret
push
push
push
dec
add
call
(bad)
inc
add
enter
jne
push
pusha
pusha
add
clc
mov
call
jmp
repz
pushf
pushf
push
pop
push
push
lea
jmp
fimul
add
cmc
sub
call
or
push
out
jl
pushf
movsx
call
jae
sahf
mov
call
mov
clc
cbw
jmp
stc
inc
add
(bad)
xchg
or
add
lods
sar
mov
push
and
adc
mov
jmp
xor
bsf
mov
mov
pusha
add
call
add
jl
add
push
add
dec
and
xlat
mov
jmp
test
(bad)
(bad)
inc
inc
add
(bad)
jmp
fsub
mov
rcr
xor
call
out
jg
ins
add
pushf
mov
jmp
fs
outs
mov
push
jmp
les
(bad)
fbstp
add
sahf
mov
inc
pushf
pushf
push
mov
mov
jns
jmp
in
mov
add
push
fwait
push
push
push
inc
mov
mov
out
jne
punpckhbw
pop
push
pusha
sbb
add
push
call
cmp
call
mov
jmp
pusha
pushf
mov
cld
(bad)
mov
add
call
mov
add
jmp
in
jbe
call
sub
outs
add
call
pop
popf
popa
push
lea
xor
and
mov
add
jmp
mov
popf
popa
push
lea
jmp
call
mov
push
mov
jmp
lea
mov
mov
mov
mov
inc
cmp
jb
mov
(bad)
fdivrp
outs
ds
mov
and
add
push
call
xor
outs
(bad)
sbb
icebp
and
dec
push
or
mov
mov
(bad)
inc
and
sbb
mov
out
clc
call
mov
repz
pop
push
and
shr
pushf
data16
(bad)
mov
mov
mov
xchg
shl
ror
stc
mov
mov
jmp
shl
mov
shrd
push
inc
adc
jmp
push
test
push
add
shl
repz
dec
fnstsw
clc
cmc
dec
sub
jmp
jl
sub
in
push
fcmovnb
out
btc
outs
or
(bad)
sar
mov
mov
dec
inc
jbe
btr
cmc
jno
jmp
into
pop
ds
cmps
fs
btc
xor
shl
data16
add
sbb
call
pop
pop
add
jl
lods
add
sub
add
pushf
mov
(bad)
icebp
ja
stos
or
dec
jmp
dec
imul
push
lds
add
rol
setae
lea
sub
cmp
(bad)
call
repnz
neg
adc
cmp
rol
mov
call
in
mov
push
pusha
dec
inc
jmp
jp
mov
fild
add
les
sub
call
je
ret
stc
psadbw
push
fyl2xp1
cmp
test
add
pusha
(bad)
fcomip
ror
(bad)
ret
xor
sub
mov
push
sub
psubd
cmps
(bad)
mov
inc
fdivr
inc
rcl
xor
jmp
outs
jmp
jno
dec
mov
mov
cmp
inc
mov
add
pop
add
test
fwait
mov
pop
ror
sbb
adc
cmp
js
adc
push
call
push
dec
push
push
call
push
xor
cmp
mov
or
mov
inc
push
jbe
pop
adc
jl
inc
pushf
xor
fwait
pop
inc
sub
pop
push
out
or
adc
fwait
(bad)
inc
ins
popf
popa
lea
push
mov
jmp
jbe
(bad)
(bad)
call
pusha
pushf
cmp
jne
mov
mov
add
mov
add
sub
or
push
out
xchg
retf
push
mov
popa
cmp
jmp
mov
xor
mov
add
mov
mov
(bad)
(bad)
adc
add
mov
or
push
sbb
sbb
mov
jnp
or
(bad)
cmp
xor
fstp
cmp
sbb
fild
sub
fstp
push
jmp
mov
scas
popf
or
lds
and
inc
fucomip
inc
das
out
mov
jnp
and
iret
push
jg
add
add
lea
hlt
mov
les
hlt
and
out
add
rol
sbb
fbstp
pushf
test
test
clc
call
data16
call
and
and
xchg
mov
out
(bad)
es
and
pushf
mov
push
sbb
aad
clc
cmps
mov
sbb
cmc
xor
lds
jmp
push
sbb
add
call
xor
and
dec
stc
pushf
ja
and
jmp
push
outs
pop
ins
es
cmp
xor
pushw
(bad)
(bad)
dec
mov
inc
pushf
mov
stc
cmp
lea
clc
stc
data16
out
mov
xor
adc
call
out
rcr
mov
aaa
fbld
mov
cs
call
clc
mov
pusha
add
setg
mov
push
ret
jg
dec
ret
inc
or
hlt
or
ins
xor
fdiv
call
into
repz
ins
inc
pop
and
pushf
loope
jmp
push
data16
sbb
pop
jmp
(bad)
push
pop
loop
call
cmc
or
or
shl
leave
mov
sbb
stos
sbb
sbb
mov
jle
out
clc
cli
sub
inc
std
(bad)
jmp
lahf
sbb
lea
cmp
rol
adc
sub
add
xlat
pushf
lea
data16
jmp
push
pop
fist
jp
(bad)
fistp
mov
call
cmc
not
dec
mov
sbb
call
inc
clc
pushf
ror
push
jmp
jmp
ja
pushf
mov
mov
pushf
pop
mov
add
pushf
or
ror
out
cmp
sahf
push
out
push
call
ret
ret
mov
call
pop
xor
ret
push
add
jmp
cld
mov
jnp
add
sbb
dec
jno
(bad)
(bad)
aam
jecxz
xor
sub
or
xchg
add
cld
add
add
(bad)
mov
imul
adc
mov
push
inc
cmp
adc
mov
retf
or
sub
sbb
mov
mov
test
push
xchg
pusha
ror
xchg
push
mov
sub
push
and
test
sub
lds
pusha
pop
inc
sbb
in
jmp
dec
pusha
mov
xor
jmp
lock
mov
out
cld
pop
ret
push
aad
movzx
xchg
lock
in
aad
lea
ja
sbb
adc
lds
loope
mov
xchg
add
jmp
cs
je
xor
icebp
test
mov
ja
mov
push
call
xchg
mov
or
mov
add
test
test
pop
je
push
fadd
add
sub
outs
mov
into
movs
daa
mov
xor
add
fsubr
das
adc
outs
call
add
push
out
sub
jecxz
add
and
sub
fisttp
iret
mov
pusha
nop
fidivr
jmp
push
pop
push
pushf
and
test
mov
push
jmp
cmp
add
call
jmp
cmp
pushf
pop
call
xchg
cmc
jmp
call
loope
clc
shl
call
sbb
neg
pop
sub
push
push
in
push
jno
ror
lea
lds
test
int3
push
add
neg
or
inc
mul
dec
jmp
add
shr
dec
call
test
(bad)
xor
lea
pusha
cmps
aas
(bad)
sbb
xchg
rcl
pop
ror
dec
jo
sbb
push
pop
stc
add
jge
(bad)
out
cmp
sbb
mov
stos
cli
sub
loop
test
sbb
popa
pop
mov
jbe
add
sbb
or
mov
add
or
int3
cmp
or
dec
idiv
or
pop
cld
xchg
sbb
test
mov
in
pop
pop
aaa
add
xor
push
mov
rol
shl
jmp
and
push
push
data16
xor
push
fld
jle
rcl
mov
or
mov
and
cmp
pushf
jmp
ja
call
pop
pop
pop
ja
jmp
pushf
mov
(bad)
cmc
push
mov
stc
loop
pop
cld
inc
xchg
add
rcr
mov
cmps
xchg
jge
mov
pushf
push
aam
loope
imul
int
(bad)
call
mov
xchg
iret
aam
push
bswap
mov
outs
call
adc
xor
push
push
pop
sti
sbb
stc
shl
shl
fld
jg
loope
jmp
call
lahf
rcr
dec
icebp
or
sbb
stos
cli
jmp
ja
shl
mov
jmp
js
push
call
out
push
ins
jmp
push
pushf
in
or
imul
clc
test
stc
test
js
cmc
xchg
or
fild
inc
test
xchg
mov
mov
rcr
push
repz
jmp
jmp
add
rcr
push
repnz
xor
call
fist
cmc
sub
shl
add
pushf
and
add
(bad)
push
push
xchg
cld
xor
movs
inc
add
cmc
call
jbe
aas
sbb
jmp
aaa
shr
cwde
out
or
mov
icebp
mov
add
shld
and
dec
imul
(bad)
mov
frstor
mov
fnstsw
aam
not
add
xchg
sar
fstp
sub
shr
or
inc
push
add
mov
push
push
mov
pusha
sbb
sti
not
xor
sbb
cmp
dec
add
bts
inc
cmp
rcr
cmc
and
xchg
adc
pop
sti
push
call
xchg
cmp
cmps
pushf
cmc
cwde
stc
(bad)
pushf
call
lahf
icebp
ror
cli
pop
not
push
sar
dec
std
or
xadd
inc
pop
adc
xchg
jle
fcmovnb
xchg
adc
test
fcomip
jg
call
rcl
rcr
setle
and
mov
push
dec
pop
out
dec
std
pushf
not
inc
movs
pushf
cmc
call
dec
in
cli
aam
jmp
icebp
adc
jg
add
aas
add
test
jnp
add
sbb
xchg
and
or
pop
xor
hlt
loope
inc
lahf
mov
or
jno
push
pop
outs
or
mov
call
aas
jno
pushf
clc
pop
mov
pop
lock
(bad)
dec
pop
xlat
cdq
jp
mov
or
jmp
mov
rcr
(bad)
pusha
or
cs
outs
loopne
test
pop
mov
into
xor
pusha
adc
std
(bad)
(bad)
(bad)
cmp
cmc
xor
cmc
cmp
cmc
stc
sub
jmp
mov
repnz
cwde
ja
clc
(bad)
fsubr
xchg
push
bts
lea
js
mov
xchg
sbb
mov
cmp
ss
(bad)
cmp
mov
cmp
int
pusha
push
pushf
pushf
ins
ret
mov
std
sub
fisttp
add
pop
call
dec
cli
xbegin
add
pushf
jmp
pusha
jns
stc
push
std
jne
outs
das
sbb
outs
xchg
outs
add
dec
jmp
into
xor
mov
pushf
push
daa
xor
cmps
pop
ja
ja
jmp
sub
test
push
xchg
xor
add
ror
cmps
ss
inc
inc
sbb
lock
xchg
(bad)
call
jo
jae
div
dec
retf
mov
add
pop
push
pop
mov
push
pushf
scas
mov
fiadd
sbb
xor
mov
nop
(bad)
aam
cmp
clc
push
push
dec
inc
int3
sbb
adc
pop
adc
outs
sbb
call
call
lods
clc
cs
push
call
push
push
jno
sbb
sub
les
mov
popf
sbb
sbb
cli
int3
in
dec
call
rol
add
mov
mov
push
cs
push
mov
or
clc
add
add
add
in
lahf
mov
mov
add
call
cmp
data16
nop
sti
adc
push
in
xor
push
sti
pop
or
sbb
cmp
mov
jge
sti
mov
jbe
dec
call
mov
lods
xor
cli
arpl
xchg
call
mov
out
call
out
(bad)
daa
mov
loop
push
pop
sub
push
mov
clc
(bad)
xor
add
dec
jne
pop
inc
push
push
xchg
mov
push
(bad)
(bad)
(bad)
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
retf
dec
jne
and
clc
add
mov
out
(bad)
(bad)
dec
dec
movzx
std
movzx
mov
jo
fiadd
shr
mov
push
and
mov
or
mov
or
pop
dec
mov
xor
out
(bad)
ja
add
cmc
xor
mov
push
add
inc
add
sub
push
add
cmp
xor
(bad)
(bad)
in
adc
mov
xor
mov
mov
shl
inc
mov
mov
push
icebp
sar
cmp
sbb
jb
mov
add
(bad)
push
mov
lea
call
pop
or
fnstsw
inc
or
call
je
or
(bad)
(bad)
mov
xor
pop
mov
shl
mov
mov
add
(bad)
mov
add
push
inc
inc
cmp
jb
into
lock
movzx
mov
movzx
add
std
mov
movzx
adc
and
jl
or
or
inc
mov
or
nop
out
and
add
add
sbb
or
nop
out
out
pop
push
add
nop
out
or
or
sti
aaa
cmp
or
push
movzx
mov
(bad)
(bad)
dec
push
movzx
push
movzx
xor
xor
jo
cmp
pushf
sti
add
mov
sub
sbb
sbb
div
and
sub
sbb
xor
out
fstp
xor
pop
mov
mov
mov
mov
pop
jnp
enter
sbb
sbb
bound
add
js
jo
or
mov
jnp
inc
jnp
sbb
std
sbb
sahf
sub
sub
add
xor
aaa
mov
xor
out
fisttp
sti
push
mov
js
mov
inc
jnp
out
into
sbb
mov
sbb
ins
cdq
cmp
icebp
sbb
aas
gs
xor
dec
lock
pop
(bad)
push
mov
sub
pop
movzx
adc
jne
jg
mov
aas
mov
mov
mov
push
or
fadd
mov
jmp
add
push
je
call
mov
test
mov
ret
mov
mov
ret
xor
adc
fadd
ret
and
jmp
call
jmp
in
sti
call
cmps
aaa
lea
xor
push
mov
mov
call
(bad)
mov
add
dec
push
push
in
mov
add
mov
cmp
push
xor
push
call
push
jg
jbe
lea
retf
call
push
out
jg
inc
add
cmp
jb
dec
mov
fnstsw
add
mov
movs
add
sub
or
fild
xor
push
push
push
push
mov
call
add
adc
push
call
mov
mov
mov
adc
mov
add
xlat
push
mov
out
out
dec
scas
lock
adc
add
xor
inc
jmp
cmp
(bad)
(bad)
inc
add
adc
rol
dec
and
add
push
cmp
mov
jne
call
mov
mov
imul
pop
(bad)
inc
add
cdq
and
add
sar
imul
cmps
mov
add
push
push
(bad)
(bad)
fcomip
mov
xchg
mov
mov
mov
mov
mov
sbb
pop
test
pop
lods
mov
mov
call
adc
lock
dec
mov
test
sti
out
(bad)
mov
pop
lea
push
rep
call
mov
mov
add
sbb
add
jne
lar
mov
call
mov
xlat
adc
(bad)
push
push
shl
jg
pop
clc
je
push
stos
or
add
cli
scas
cmp
push
push
push
push
xor
(bad)
std
cmps
add
bound
xor
call
push
mov
push
lea
push
add
push
jmp
dec
mov
mov
add
mov
add
inc
lock
and
mov
jmp
jb
push
fs
popa
dec
call
mov
out
push
push
jo
xor
push
push
loopne
jle
add
mov
mov
lea
lahf
pusha
or
or
push
push
jnp
pop
add
call
push
jmp
call
mov
pop
pop
fild
xchg
sub
push
push
mov
add
adc
jmp
xor
adc
inc
add
mov
ins
call
lea
call
or
cld
or
ins
test
jne
loop
xchg
(bad)
or
push
pop
or
cmp
lock
push
push
cmp
pop
or
ja
lock
mov
mov
mov
jmp
mov
adc
(bad)
lea
call
(bad)
xor
rcl
jne
adc
call
call
and
call
mov
add
mov
adc
xor
inc
(bad)
(bad)
xor
ret
or
jno
pop
jno
xchg
frstor
shl
adc
xor
adc
rcr
ret
mov
adc
jno
aas
lahf
push
add
and
clc
sti
sti
scas
dec
in
add
jge
add
dec
jne
cmp
and
clc
mov
sti
out
mov
add
call
jne
cmp
push
rcl
jmp
push
fs
neg
sub
call
add
or
pop
sbb
push
push
push
push
mov
push
pop
sbb
or
adc
ins
jmp
xor
jmp
cmp
je
jae
mov
pop
add
(bad)
call
mov
mov
test
je
test
je
mov
xor
shr
je
mov
push
sar
or
adc
inc
cmp
jb
adc
mov
push
mov
add
out
inc
(bad)
cmc
std
sar
inc
push
call
(bad)
cmp
xor
or
add
fisttp
(bad)
call
fstp
ret
push
push
je
mov
push
push
mov
xor
or
or
mov
adc
pop
pusha
call
lea
adc
cmp
push
call
add
pop
test
idiv
rcl
mov
cmp
mov
je
es
xor
out
out
fistp
and
push
push
push
cmp
call
mov
jo
pop
je
sbb
fdivr
mov
push
lea
push
call
test
xchg
call
add
out
fdivr
mov
push
clc
and
mov
jns
outs
clc
inc
inc
sub
sub
push
and
lea
jmp
cmps
fwait
bswap
dec
adc
(bad)
adc
mov
jl
or
ret
in
or
mov
adc
sbb
add
cmp
ror
push
sbb
not
(bad)
(bad)
mov
les
cmp
push
or
pusha
mov
cmc
inc
mov
(bad)
push
or
aad
enter
sbb
dec
bts
shld
lea
not
sub
sbb
movs
iret
or
(bad)
ja
push
lea
add
cmp
(bad)
call
shrd
bsf
and
mov
test
jne
rcr
seta
(bad)
(bad)
(bad)
jmp
mov
bsr
add
sub
sete
push
neg
mov
movzx
mov
cmp
cmp
and
add
mov
dec
jbe
btr
and
shl
lods
bt
lea
rol
fdivrp
add
jns
or
mov
sar
(bad)
and
add
pushf
push
in
pushf
jg
adc
pushf
push
push
xchg
dec
jmp
sbb
dec
adc
in
js
jmp
push
mov
cs
mov
les
mov
pusha
retf
sub
jge
pop
mov
neg
xor
lea
and
not
shrd
btc
sar
xor
cmp
pop
shl
sub
movzx
(bad)
sti
(bad)
fcomip
mov
bt
or
push
pusha
mov
fs
test
add
(bad)
out
inc
bt
pusha
clc
cmp
xor
sub
clc
stc
pushf
xchg
test
cmp
mov
sbb
push
and
push
jmp
outs
in
movsx
push
push
push
bswap
jmp
add
jmp
clc
out
add
pushf
idiv
xor
shr
mov
loope
jmp
mov
call
jmp
push
mov
mov
pop
pop
cli
aas
add
jb
in
mov
mov
scas
(bad)
inc
cmp
je
cmp
je
mov
inc
vpandn
mov
popf
add
jmp
aas
hlt
fadd
add
cs
inc
xor
scas
jle
leave
mov
inc
or
inc
or
out
jle
outs
sub
pop
or
movzx
jmp
mov
add
lods
jne
add
push
pusha
push
adc
or
adc
rcr
jge
les
cmp
inc
scas
or
gs
or
xor
and
sahf
sub
nop
rcl
not
push
push
mov
mov
mov
imul
add
(bad)
je
push
mov
(bad)
cmc
mul
aaa
push
mov
adc
push
xor
cld
je
inc
push
push
add
jmp
xor
je
mov
cmp
je
mov
call
(bad)
fld
(bad)
jne
xor
call
sub
jmp
mov
cmp
je
idiv
push
dec
sub
push
add
push
call
sar
and
jmp
inc
(bad)
sbb
ret
mov
mov
pop
jne
sar
out
(bad)
shl
push
je
and
cmp
or
jne
or
inc
hlt
pop
enter
cli
sub
fsubr
fisubr
clc
jmp
adc
mov
jmp
adc
add
xchg
and
pusha
(bad)
mov
ret
in
push
pushf
cmp
push
lds
(bad)
lea
ja
mov
add
test
outs
mov
sub
xor
or
ss
ja
aaa
xor
xadd
and
call
clc
stc
sbb
(bad)
stc
mov
cwde
dec
jmp
cmps
aaa
push
and
xor
ja
cli
out
dec
jmp
jmp
into
sub
add
mov
mov
std
sub
jl
pushf
sub
jbe
push
sub
add
(bad)
mov
fdivr
inc
add
fiadd
scas
jg
mov
fwait
repnz
rol
mov
test
or
add
(bad)
aas
mov
out
mov
xchg
xor
add
pop
sar
out
sbb
loopne
push
jmp
clc
rdtsc
bsf
setp
(bad)
push
xchg
lea
mov
inc
test
rcr
cmc
mov
pushf
cmp
xor
stc
push
test
stc
shld
pusha
mov
push
aas
sub
and
mov
pusha
in
dec
jmp
out
outs
out
xor
dec
or
and
xor
bts
sbb
sbb
(bad)
neg
test
out
lds
xor
cmp
add
in
stos
add
xlat
movq
stc
rcl
rcl
add
and
retf
shl
cmc
les
cmp
arpl
rcl
fcomip
addr16
je
popf
jmp
mov
std
mov
stos
adc
push
cmp
mov
loopne
stos
sub
(bad)
call
std
(bad)
test
jmp
mov
iret
imul
jnp
inc
push
mov
(bad)
cmp
sbb
jmp
stc
pusha
xor
pop
std
(bad)
(bad)
stc
cmp
not
test
pushf
cmc
bt
xor
pusha
jmp
pusha
xchg
add
out
dec
enter
aam
ror
mov
(bad)
pop
add
mov
pushf
call
and
jne
mov
pushf
jge
add
dec
sub
jmp
icebp
jle
mov
cmps
add
or
or
fstp
pop
movzx
mov
sub
inc
loopne
cmc
sti
cmp
mov
lea
add
jmp
cmp
outs
adc
or
mov
cmp
jne
inc
mov
aad
lock
and
iret
je
movzx
movzx
aas
add
sub
jbe
or
mov
outs
mov
fwait
jg
mov
mov
call
mov
push
inc
or
cmp
je
jge
inc
cmp
(bad)
jmp
pop
jne
and
push
mov
add
cmp
mov
mov
clc
clc
jae
push
jb
adc
fcomip
cmp
call
mov
jne
jmp
push
retf
mov
call
cmp
pop
je
call
cmp
je
add
xor
ret
add
sbb
dec
jno
pop
fdiv
mov
push
lea
pop
call
inc
inc
adc
loop
cmp
movs
add
rol
inc
cmp
shl
push
push
out
cs
jmp
xor
jmp
not
or
(bad)
jmp
scas
push
add
scas
cwde
jecxz
push
push
mov
scas
shr
sbb
adc
out
dec
test
adc
pop
adc
jp
stc
cwde
sub
stos
adc
call
popf
sbb
or
or
or
outs
cli
call
jbe
inc
call
test
je
movzx
jmp
cmp
jmp
add
mov
out
das
xor
mov
movzx
inc
cmp
jl
jmp
jb
popa
mov
fdiv
sahf
ss
data16
cdq
imul
outs
pop
dec
movs
xor
adc
dec
sbb
push
or
push
loopne
xchg
pop
push
movs
sar
aas
pop
das
push
push
push
xor
xor
cmp
je
cmp
je
cmp
jle
out
(bad)
(bad)
jmp
mov
pop
cmp
jge
mov
mov
mov
sub
cmp
jbe
or
(bad)
jg
popa
or
cmp
ja
mov
jmp
cmp
jne
mov
inc
cmp
inc
and
pop
adc
sub
add
push
mov
add
add
add
cld
inc
cmp
push
mov
in
gs
xor
mov
add
sbb
sub
inc
(bad)
cmp
int
(bad)
or
clc
pop
or
add
adc
call
imul
fnstcw
dec
add
jmp
or
shl
inc
into
add
and
ror
inc
test
(bad)
call
inc
push
push
xor
xor
loop
mov
cmp
ja
cmp
jae
cmp
je
xor
inc
push
cld
inc
add
je
push
call
je
cmp
jne
adc
dec
mov
jmp
push
call
pop
mov
xor
xchg
inc
add
ins
add
and
add
pop
dec
adc
gs
xlat
scas
fucomip
or
or
(bad)
jmp
out
cli
(bad)
out
push
add
fild
call
aad
lds
jmp
ret
ss
or
les
jmp
add
shl
add
aaa
hlt
cmp
pop
xchg
stc
pusha
cmc
pushf
cmp
stc
and
clc
cmps
sbb
ret
inc
call
push
and
jmp
cmp
loopne
push
pushf
push
mov
les
(bad)
push
fdivr
test
neg
jb
dec
(bad)
dec
aaa
xor
jmp
test
jns
(bad)
call
not
mov
push
jmp
push
mov
jmp
ja
fimul
xor
int3
out
jmp
iret
xor
mov
mov
dec
ror
jmp
jne
add
pusha
push
push
outs
push
xor
push
cmp
mov
pushf
push
outs
out
xchg
(bad)
(bad)
dec
fst
cmp
jnp
push
sbb
xor
jmp
push
fdiv
(bad)
cld
jmp
ror
push
mov
inc
lock
jecxz
(bad)
out
cli
pop
dec
sub
call
and
arpl
sbb
add
adc
call
popf
cmp
jmp
aad
(bad)
shrd
sar
ror
stos
mov
imul
push
jl
xchg
ins
cmc
mov
popa
pushf
jmp
loopne
neg
test
call
and
xor
ret
cmp
jmp
in
push
(bad)
lock
in
(bad)
jg
and
je
sub
xor
push
push
add
jg
std
inc
lods
retf
cmp
jmp
aaa
push
call
adc
into
fiadd
add
int3
clc
pop
jmp
test
std
mov
jmp
loope
jmp
aas
pusha
mov
mov
or
je
xchg
add
repz
call
lea
add
inc
cmp
jbe
dec
mov
cmp
je
mov
inc
jo
imul
sbb
mov
rcl
mov
xor
ins
ja
out
xchg
and
push
lea
push
call
lea
pushf
test
inc
mov
call
mov
push
call
call
sar
jae
and
mov
aas
aad
or
sub
push
sti
jo
adc
sbb
push
push
push
xlat
or
push
push
pop
add
xor
sti
(bad)
in
sbb
adc
mov
sub
sar
mov
(bad)
mov
jmp
mov
xchg
mov
add
cmp
jb
push
lea
push
dec
push
jae
int
aas
es
scas
xor
adc
lea
jmp
sti
pusha
mov
push
mov
or
xchg
push
or
(bad)
mov
mov
mov
mov
jle
(bad)
mov
cmps
cld
mov
ja
push
mov
push
pop
wbinvd
push
call
inc
xor
movs
inc
adc
or
pop
inc
xchg
and
out
jge
adc
ret
in
inc
lock
pop
int3
and
jl
sbb
mov
or
add
jle
push
push
cmp
jne
mov
mov
leave
cmp
jmp
sbb
push
ficomp
add
mov
shl
or
int3
out
sub
or
sbb
or
aas
addr16
push
inc
or
imul
bound
aas
ror
cmp
call
sbb
jnp
adc
sub
sbb
adc
out
rol
xor
sar
cmps
add
inc
adc
add
push
add
call
test
je
mov
dec
popa
cmps
jmp
push
inc
(bad)
fcom
scas
or
adc
cmp
mov
nop
cmps
shl
inc
clc
push
push
push
(bad)
xchg
cld
call
call
test
mov
fs
jl
fs
pop
pop
push
fs
cli
push
fs
sar
and
aam
and
and
aam
jmp
(bad)
jmp
and
jmp
fisttp
neg
out
into
mov
dec
sahf
fimul
jmp
popa
add
adc
sub
(bad)
add
cmps
imul
imul
into
ins
hlt
pop
imul
(bad)
mov
imul
imul
imul
call
fs
fdivr
imul
add
mov
pop
add
repnz
add
scas
imul
inc
(bad)
jg
call
(bad)
ins
iret
push
add
inc
lods
push
add
add
fld
test
cwde
lods
mov
jmp
add
add
add
dec
adc
or
call
or
add
add
imul
inc
mov
pop
sbb
pushf
fstp
push
add
je
ins
outs
arpl
std
lahf
sti
es
xor
outs
jo
data16
dec
div
dec
dec
add
dec
push
dec
dec
add
pop
jne
ins
sbb
ins
cmp
add
(bad)
(bad)
or
imul
fdiv
dec
or
jne
cmp
add
fs
(bad)
fild
jp
mov
and
pushf
in
sub
or
(bad)
call
mov
das
add
dec
imul
imul
sub
push
(bad)
(bad)
cmp
jecxz
push
outs
jne
imul
outs
pop
(bad)
(bad)
mov
arpl
jne
je
das
gs
add
jae
dec
imul
add
xor
add
lds
push
popa
gs
gs
mov
or
fdivr
fcom
dec
outs
pop
inc
jb
imul
out
or
jae
inc
outs
ja
add
pop
inc
outs
je
aas
idiv
imul
inc
imul
mov
xchg
(bad)
(bad)
(bad)
call
inc
rol
hlt
or
sbb
(bad)
xor
outs
mov
jno
cwde
mov
lahf
mov
dec
ins
sbb
out
pop
std
inc
jmp
imul
fist
or
jb
pop
add
mov
(bad)
aaa
cld
(bad)
push
retf
jmp
repnz
mov
and
test
shl
(bad)
(bad)
call
cli
xor
popa
pop
mov
push
nop
sbb
add
adc
ret
xor
out
shr
and
lds
sbb
cmp
js
and
in
inc
mov
xchg
(bad)
mov
jg
(bad)
out
(bad)
jmp
push
dec
aas
jno
push
sbb
mov
add
push
xchg
aas
(bad)
(bad)
(bad)
call
push
fiadd
sub
bndldx
add
call
add
xlat
push
add
rol
(bad)
fnsave
push
add
pop
sbb
jnp
add
(bad)
out
call
mov
cmp
pusha
mov
add
xchg
cmp
arpl
(bad)
cmp
ja
sbb
lea
add
push
add
pop
sti
sub
xor
jnp
add
add
add
xor
fistp
jle
jbe
add
pop
add
cwde
add
imul
sbb
add
(bad)
movhps
in
fsubr
add
mov
ror
bound
add
add
arpl
add
sar
outs
add
movlps
cli
pop
xlat
in
and
imul
xchg
inc
cmp
add
xor
dec
pop
fild
and
sbb
ja
add
dec
push
sbb
out
das
add
add
das
dec
mov
xor
ins
js
imul
sbb
jge
addr16
push
out
data16
imul
or
push
add
xor
push
and
lahf
xchg
pop
adc
xchg
cld
(bad)
call
and
jp
fwait
jmp
jp
add
loopne
cmps
ds
jp
fiadd
or
adc
pop
add
ins
outs
popa
mov
xor
loop
mov
pop
ins
jecxz
outs
into
add
adc
fcomp
stos
idiv
(bad)
call
in
pop
test
bnd
mov
lods
in
dec
stos
and
aaa
(bad)
(bad)
(bad)
jg
push
jmp
icebp
bound
imul
mov
scas
ss
loope
jl
loope
dec
push
inc
sub
inc
jmp
test
std
sub
stc
bound
push
scas
mov
sbb
dec
pop
pop
xor
not
cdq
mov
call
or
inc
inc
push
dec
test
inc
ins
popa
addr16
jb
cs
push
dec
pop
push
pusha
pop
sbb
add
popa
jae
adc
or
(bad)
(bad)
add
push
mov
call
lock
xor
add
add
add
or
test
call
popa
daa
add
mov
adc
sbb
(bad)
out
add
stos
(bad)
call
push
push
call
add
inc
add
mov
add
ror
ret
pop
add
cmp
pop
(bad)
jmp
dec
add
xor
dec
sbb
push
scas
test
push
jb
add
add
add
nop
aas
lods
fst
inc
dec
inc
dec
push
push
dec
inc
pop
add
ins
add
addr16
jo
add
das
add
jo
jo
jae
arpl
jbe
(bad)
jg
add
add
mov
test
mov
fisttp
cli
enter
mov
and
out
xchg
movs
push
add
push
add
push
cmc
add
push
jae
(bad)
(bad)
aaa
lock
inc
addr16
push
push
das
xor
xor
and
jne
(bad)
mov
or
daa
and
xchg
pop
mov
inc
inc
pop
sbb
mov
gs
arpl
popa
je
cmp
js
adc
(bad)
mov
add
outs
gs
jo
mov
add
je
in
sar
imul
pop
sub
outs
pop
and
xor
sub
jns
(bad)
(bad)
dec
fst
inc
cwde
or
jae
mov
xchg
mov
pusha
jne
adc
retf
dec
fcomip
(bad)
call
inc
mov
mov
push
or
sub
ror
add
hlt
(bad)
dec
or
jle
outs
pop
pop
dec
fst
dec
fist
xchg
mov
xlat
stos
test
push
(bad)
inc
mov
push
jmp
dec
or
ret
shl
popa
stos
mov
and
cmc
inc
jo
inc
cmp
(bad)
out
(bad)
inc
retf
push
jmp
adc
cdq
adc
(bad)
sti
iret
xchg
pop
and
int3
jne
or
cmp
adc
aam
sbb
adc
fist
rcr
rcl
outs
sar
mov
inc
adc
daa
mov
adc
dec
xor
and
pop
add
ins
pop
retf
aaa
pop
ret
inc
dec
jae
add
stos
mov
add
outs
add
fnstcw
outs
outs
outs
pop
inc
add
call
gs
fs
imul
jo
jo
outs
push
gs
stc
pop
div
jae
daa
pop
adc
outs
fs
and
sub
pop
(bad)
xchg
or
mov
dec
inc
push
pop
(bad)
jg
pop
imul
ins
jne
push
push
cli
cmps
mov
adc
ins
popa
addr16
test
cmc
dec
inc
dec
neg
inc
gs
inc
outs
sahf
sar
jb
push
imul
loop
in
fadd
pop
push
popa
jbe
xor
outs
gs
add
lahf
inc
cmp
push
je
ret
in
fnsave
bound
add
xchg
adc
imul
jge
add
ins
pop
push
popa
ins
gs
gs
add
xchg
or
adc
cs
inc
jmp
out
inc
add
inc
dec
inc
imul
imul
push
(bad)
jg
add
inc
inc
add
inc
inc
dec
(bad)
push
push
adc
xchg
adc
iret
mov
jae
jae
add
push
gs
outs
jbe
test
jo
arpl
dec
push
inc
push
dec
(bad)
(bad)
inc
mov
sbb
push
sbb
add
jmp
cli
push
test
xor
(bad)
(bad)
inc
mov
adc
push
inc
popf
scas
sbb
scas
jmp
inc
jnp
es
mov
jmp
ins
jno
xchg
outs
push
aam
fdiv
jns
push
jl
outs
jmp
addr16
outs
popf
or
es
rol
add
sbb
aaa
or
add
adc
inc
xlat
sbb
add
aad
imul
fs
gs
inc
adc
lods
std
hlt
shl
aas
mov
dec
outs
cmp
mov
pop
je
outs
ins
inc
fsub
pop
gs
mov
xchg
loope
xor
jns
aas
adc
mov
mov
xor
ret
aas
(bad)
stos
push
push
imul
jno
push
outs
add
ins
adc
(bad)
aaa
fild
fld
jne
je
add
push
ins
gs
add
jo
mov
mov
cli
(bad)
popa
mov
imul
push
movs
xchg
jo
outs
addr16
imul
dec
popa
ins
mov
adc
add
imul
jb
scas
shl
jecxz
ins
jo
and
rcpps
je
ins
push
imul
xchg
add
mov
push
inc
and
cmps
daa
xchg
dec
jns
mov
rol
jne
dec
jne
je
loopne
(bad)
inc
je
push
outs
push
imul
or
mov
jmp
fcomip
dec
jae
popa
les
push
je
add
dec
jnp
jmp
test
gs
in
aas
sub
dec
outs
outs
inc
add
and
lahf
adc
je
je
jae
add
call
gs
add
mov
push
int
and
(bad)
mov
outs
inc
sbb
add
test
(bad)
inc
mov
outs
add
je
outs
jb
adc
mov
xchg
ins
gs
push
arpl
push
shl
mov
add
add
pusha
pop
shl
add
mov
cwde
retf
add
hlt
or
mov
retf
add
out
adc
dec
inc
push
add
inc
xor
push
pop
xor
jp
ss
mov
push
gs
or
push
cld
(bad)
aas
pop
pop
cs
push
push
popa
ins
inc
jb
jbe
xor
inc
and
pop
push
push
pop
add
movs
pop
fnstenv
push
add
les
ret
(bad)
(bad)
(bad)
mov
cmps
and
fsubr
adc
outs
pop
inc
jno
mov
add
or
(bad)
(bad)
(bad)
(bad)
cmp
mov
imul
adc
clc
mov
cmps
sub
sbb
outs
leave
(bad)
(bad)
(bad)
dec
cmps
rcr
loope
add
sbb
mov
fwait
mov
fld
cmp
imul
(bad)
call
call
loope
push
mov
sbb
mov
jge
lahf
push
xchg
jnp
dec
xchg
(bad)
(bad)
(bad)
(bad)
aas
and
sub
std
sbb
dec
ror
sbb
fsincos
cmp
jb
in
dec
mov
xlat
(bad)
(bad)
(bad)
inc
fs
or
push
test
cmp
ds
inc
data16
mov
push
pop
rcr
add
and
aas
leave
in
pop
leave
je
lods
and
lock
(bad)
jp
xor
lods
into
shr
or
xor
mov
xor
pop
adc
loop
inc
add
(bad)
(bad)
push
cmc
mov
mov
ss
xor
push
or
add
dec
or
or
add
mov
push
add
add
enter
add
cmp
(bad)
clc
pop
add
mov
sub
sub
add
xor
pop
(bad)
fsubrp
push
call
dec
push
pop
pop
jmp
sti
fprem
scas
adc
xor
adc
(bad)
mov
add
sub
fcomp
push
jae
mul
daa
arpl
into
inc
mov
mov
cmp
rcl
das
ret
mov
pop
jg
lock
push
or
and
add
add
out
test
add
por
mov
ja
sub
popa
idiv
rcl
sub
sbb
test
sbb
imul
xchg
fidivr
jecxz
pop
aaa
ja
push
mov
cmps
adc
xchg
iret
loopne
pop
pop
ja
sub
push
adc
mov
outs
addr16
push
mov
inc
aas
xchg
fidivr
outs
psubq
aaa
loope
fidivr
imul
sub
out
sbb
adc
mov
out
popf
and
popa
out
mov
dec
add
push
std
jnp
ficomp
das
ja
mov
sbb
bswap
cmovg
jnp
aaa
ret
xcrypt-ctr
cmps
pop
daa
ret
jnp
lock
(bad)
seta
and
add
out
lock
daa
arpl
(bad)
idiv
xor
pop
jecxz
out
fwait
nop
push
pop
bswap
outs
fidivr
or
xlat
fidivr
sbb
add
ret
jnp
pop
adc
cmp
jnp
imul
pop
adc
loope
fidiv
mov
out
adc
sbb
add
aas
fisttp
daa
or
(bad)
mov
pop
sub
ss
sub
test
(bad)
cs
push
mov
add
(bad)
(bad)
call
imul
lea
sub
sub
cmc
idiv
(bad)
(bad)
(bad)
fsub
stc
sub
pushf
btr
ror
rol
dec
movsx
lea
dec
(bad)
(bad)
(bad)
jmp
loope
add
jp
sub
pusha
jmp
cld
pushf
rep
xadd
push
(bad)
call
jl
sub
(bad)
shl
rol
mov
bt
push
popf
mov
jnp
idiv
add
jae
lea
jmp
clc
push
rcr
dec
test
push
bswap
jbe
add
idiv
(bad)
(bad)
jmp
ret
pusha
sub
push
mov
push
push
aaa
fild
jg
jmp
aas
lahf
setbe
and
loope
loope
out
out
mov
dec
add
cmc
pusha
cmc
lock
dec
pop
test
jnp
mov
popf
push
cmp
pop
jo
push
(bad)
aas
inc
and
ds
(bad)
jmp
fisttp
gs
jmp
jno
ss
inc
and
sbb
sub
bsr
mov
call
add
pushf
call
mov
mov
call
call
enter
call
pushf
mov
pusha
std
fnstsw
dec
and
jmp
mov
pushf
push
cmc
xchg
retf
jg
ja
jne
jp
fstp
mov
and
movs
add
ins
dec
aaa
cld
fnstsw
ins
(bad)
(bad)
stc
ja
shr
xchg
jl
rcr
mov
shr
neg
xchg
cmp
std
shl
mov
call
mov
ja
inc
bswap
lea
pushf
not
jmp
and
ret
jmp
call
mov
add
lock
add
or
clc
rol
clc
push
cmp
ja
lds
pushf
push
cdq
or
test
call
out
cmp
iret
push
mov
sbb
inc
addr16
(bad)
jmp
mov
sub
inc
sbb
and
call
jmp
adc
xchg
cmc
ins
ins
add
(bad)
in
cdq
inc
jmp
outs
cmp
or
mov
pushf
pushf
repz
jle
out
(bad)
out
(bad)
call
jne
imul
sub
not
dec
sbb
dec
mov
bswap
add
cmc
(bad)
repnz
(bad)
sti
dec
not
rcr
push
ror
cmc
ror
pop
loop
dec
dec
add
not
add
neg
pop
ja
fisub
mov
aad
jmp
cld
(bad)
call
cmp
cmp
pusha
cmc
not
clc
stc
not
cmp
push
or
(bad)
or
fdivp
loopne
and
xchg
jg
cs
xor
in
jbe
mov
scas
cmp
cmps
fbld
xor
and
jo
cmc
cmp
(bad)
(bad)
(bad)
xor
call
pushf
xor
clc
jmp
xchg
pushf
call
cli
fcomip
dec
mov
mov
or
add
or
sar
and
add
inc
jmp
mov
inc
jmp
call
dec
adc
call
push
pop
bt
pushf
cmovno
cmps
jmp
add
call
inc
std
out
fsub
push
pushf
add
and
ja
pushf
jmp
mov
je
pop
add
je
and
std
(bad)
fucomip
(bad)
jp
dec
pusha
push
ja
rcl
xor
add
(bad)
jmp
sub
idiv
ret
call
push
mov
mov
pop
leave
movsx
data16
aas
or
jl
ins
and
(bad)
in
sub
mov
sar
pop
inc
fisttp
xor
jl
jmp
jne
mov
inc
movs
loope
mov
pop
mov
ror
dec
rol
mov
jnp
dec
bswap
cmp
or
retf
pop
call
pusha
push
imul
xor
mov
shr
pusha
rcr
mov
stc
jmp
clc
xor
or
test
or
out
jmp
scas
xchg
add
shl
(bad)
sub
inc
mov
xor
adc
jle
and
test
or
ret
jbe
dec
or
test
pusha
int
push
mov
and
scas
sbb
not
jmp
pusha
cmps
(bad)
out
jbe
call
and
seto
setle
call
sbb
mov
jns
cmp
and
sar
push
push
cmp
movs
(bad)
jecxz
clc
mov
add
aad
cmc
cmp
repnz
push
aam
test
cmp
movs
rol
jmp
scas
sub
mov
push
je
test
pop
push
jo
jmp
push
sti
out
mov
sub
and
mov
pushf
push
add
out
fdivr
fidivr
jmp
sbb
call
ja
pushf
pushf
cmc
bswap
jmp
sub
cmp
sub
inc
cmp
mov
(bad)
(bad)
mov
jmp
ret
add
jmp
jg
(bad)
sub
cmp
test
sub
dec
(bad)
movsx
hlt
(bad)
call
inc
stc
xor
push
neg
sbb
shl
and
cmp
jb
fidiv
(bad)
mov
or
fild
jmp
clc
stos
pushf
or
mov
movs
fldenv
shl
add
xchg
jbe
push
fnstsw
xlat
lds
pop
xor
sbb
pushf
cwde
rol
pop
dec
out
add
shrd
pushf
fidivr
setae
movs
add
jecxz
xor
popf
jmp
call
test
xor
jmp
sar
pushf
add
(bad)
dec
xor
loopne
shr
cmp
shl
sahf
adc
jl
(bad)
bts
fld
xadd
xchg
jmp
dec
sub
cmp
shr
jmp
hlt
sub
add
add
mov
push
sbb
out
dec
lea
dec
xchg
mov
leave
mov
movzx
dec
mov
or
push
inc
pusha
sub
dec
ss
lea
cwde
das
push
lea
mov
mov
fbstp
test
test
and
shl
add
sbb
(bad)
push
inc
sub
lea
mov
pushf
mov
pop
jmp
cwde
cwde
and
inc
mov
fcomip
mov
and
cmc
sub
cmc
call
pushf
call
cli
pop
(bad)
call
in
mul
fbld
out
or
ins
xlat
sbb
jmp
shld
or
sbb
sub
add
(bad)
jmp
out
mov
push
push
mov
cmp
jmp
(bad)
cmp
dec
retf
add
or
rol
clc
add
jnp
mov
loopne
or
jmp
movs
stos
repnz
jge
inc
add
shl
shl
neg
add
aaa
mov
pop
aad
cmc
clc
push
mov
push
mul
pushf
jmp
into
pop
neg
xor
cmp
pushf
neg
pusha
and
lahf
js
rep
retf
sub
btr
mov
lock
outs
pushf
test
call
add
lock
dec
sub
bound
icebp
mov
lods
cmp
call
stc
and
not
loope
call
jge
push
mov
pusha
call
and
test
ret
push
jmp
adc
xchg
jmp
lea
cmp
clc
(bad)
test
cmp
test
bswap
stc
cmc
mov
pusha
(bad)
dec
jmp
js
pop
sub
push
jne
mov
mov
in
sub
push
cmps
push
std
mov
sub
(bad)
sub
adc
clc
bt
jg
xchg
btc
stc
out
or
(bad)
mov
icebp
ffreep
and
sub
sub
lsl
rol
lods
in
(bad)
ror
ror
arpl
jb
jmp
cwde
xor
mov
xlat
cmc
idiv
and
aas
cmp
clc
cmp
shl
pushf
call
(bad)
jg
push
lea
not
mov
scas
js
(bad)
outs
jp
lea
push
pusha
call
sar
aas
dec
mov
call
adc
pop
fcomp
outs
ss
not
cld
or
inc
pusha
call
into
stc
fs
pusha
shl
inc
pusha
jg
dec
push
jg
or
out
stc
xor
inc
or
(bad)
out
sar
hlt
test
sub
lea
pushf
inc
push
sbb
adc
cmp
xchg
ror
clc
and
jmp
jp
xchg
pusha
bswap
lea
jmp
sbb
inc
jb
stc
(bad)
call
stc
ficom
ret
jmp
jmp
pushf
xchg
jge
call
push
or
cmc
pusha
not
cmp
xor
push
cmp
cmp
cmp
jge
push
mov
pop
imul
fcomip
jmp
cmp
xchg
sbb
dec
sbb
sub
fsubr
call
pop
xor
dec
sub
mov
mov
mov
push
push
dec
out
outs
cmp
fwait
sbb
jmp
sbb
jbe
sbb
pop
cmp
cbw
push
cwde
jmp
xchg
(bad)
sub
xlat
pusha
(bad)
pusha
call
push
xchg
fstp
xor
mov
aam
cmp
call
cmps
fld
mov
jmp
dec
adc
ja
pop
inc
or
ds
push
mov
push
or
loopne
(bad)
or
cmp
jmp
shl
movs
or
outs
cmp
mov
adc
sti
or
call
shl
fimul
(bad)
jmp
mov
cld
mov
rcr
call
and
jg
ret
cs
adc
inc
jmp
xlat
pop
(bad)
inc
lock
cmp
test
jmp
leave
clc
push
ja
fwait
idiv
loopne
mov
lds
xor
add
push
jmp
jo
adc
dec
sar
cmp
adc
aas
mov
stc
cmc
call
mov
and
sub
lea
stc
push
loopne
out
dec
test
movzx
lea
mov
push
and
sub
jmp
xlat
aaa
ins
or
in
add
dec
pushf
call
fild
add
cmc
push
or
cmp
sar
push
dec
push
and
movs
es
clc
data16
jg
shl
fisttp
mov
inc
pusha
push
mov
out
pop
cdq
popf
cmp
jo
xor
jmp
dec
or
call
xchg
test
mov
pusha
jae
or
push
sbb
and
test
jmp
sub
jl
fisub
out
inc
not
mov
pop
inc
or
add
lock
and
mov
sbb
cmc
and
jp
adc
rol
xor
clc
jg
mov
data16
(bad)
je
or
fidivr
out
in
arpl
push
mov
stc
push
inc
test
adc
(bad)
and
jmp
sar
cmp
enter
call
xor
test
test
inc
push
neg
pushf
pushf
call
inc
loopne
mov
pusha
xchg
mov
jmp
adc
(bad)
mov
sbb
jno
jmp
push
push
jmp
call
jg
mov
call
aas
cmp
fucomip
or
sbb
movzx
clc
xchg
jmp
rcr
cmp
mov
pop
imul
scas
sbb
out
aaa
lock
xadd
clc
aaa
or
neg
adc
inc
sbb
add
push
aam
lock
icebp
mov
pusha
jae
lods
inc
jmp
test
fbld
aad
out
(bad)
inc
add
mov
call
lea
shld
fdivr
inc
test
pop
sbb
push
btc
pop
call
add
stc
xchg
mov
sbb
retf
sbb
cmc
adc
enter
loopne
mov
mov
add
mov
mov
and
add
add
call
adc
lods
or
or
sbb
pop
jmp
or
pushf
jmp
fdivr
cmp
xor
test
add
je
test
clc
sbb
pushf
setb
sete
mov
push
call
pop
(bad)
call
stos
cmovl
aad
mov
add
outs
clc
cmps
sbb
inc
and
dec
push
or
mov
fcmovnu
mov
cdq
push
add
movs
jmp
inc
xchg
cli
popf
mov
push
mov
or
jmp
push
jb
jmp
jbe
call
sub
cmp
push
mov
dec
add
mov
push
fdiv
(bad)
ficomp
std
outs
push
add
pushf
jmp
cdq
lahf
jecxz
pop
adc
out
(bad)
jmp
iret
cld
xchg
(bad)
jg
mov
in
shl
mov
xor
pop
xor
rol
xor
dec
mov
(bad)
cdq
out
pop
jmp
fidiv
inc
cmc
bound
mov
or
cmps
xchg
push
inc
sbb
dec
sahf
mov
fist
les
cmc
dec
je
js
inc
jnp
dec
lods
pusha
xor
clc
push
clc
push
neg
clc
sub
loopne
out
loopne
pop
xor
cmc
call
mov
pushf
fucomip
xchg
jmp
or
cwde
shr
jnp
push
(bad)
jbe
and
mov
add
fsubrp
fldenv
(bad)
cmp
test
call
test
or
add
pop
push
nop
pop
and
jmp
lock
test
add
cmc
inc
push
sbb
jmp
js
pop
inc
add
mov
cmc
sar
push
xchg
adc
rcl
shr
ror
(bad)
fild
adc
mov
std
cwde
dec
(bad)
mov
out
jo
rcr
fs
pop
or
or
test
into
xor
or
mov
push
push
fidivr
daa
lock
fs
xchg
wrmsr
ror
ror
clc
arpl
mov
je
aad
jno
iret
jno
xchg
sub
std
adc
clc
pop
cmp
or
bswap
call
inc
xchg
pusha
test
xor
push
dec
and
push
mov
push
sub
mov
xlat
push
cdq
in
sbb
(bad)
cmp
or
lea
addr16
fucomi
out
cmp
sub
pusha
sub
outs
retf
add
pushf
jmp
jmp
pusha
push
mov
xchg
pop
adc
popa
ja
mov
scas
and
and
fcmovnbe
stc
stc
out
inc
mov
icebp
lahf
int
dec
iret
pop
xlat
call
jmp
jp
jmp
into
in
xor
test
out
push
push
and
sbb
dec
in
clc
mov
aam
pushf
inc
dec
in
(bad)
out
and
jmp
mov
mov
cmp
jg
(bad)
mov
popa
adc
mov
ds
mov
jmp
(bad)
(bad)
(bad)
jmp
xchg
add
xchg
and
pop
adc
fidiv
sbb
dec
aaa
or
(bad)
(bad)
jmp
sbb
jo
dec
stc
pop
mov
adc
sbb
inc
jbe
add
test
push
mov
(bad)
clc
mov
jle
push
ret
popf
dec
or
int3
jnp
lock
aaa
lea
jmp
add
push
push
adc
sbb
and
stos
shl
push
cmp
jmp
sbb
inc
lods
sbb
jne
inc
or
jmp
mov
popa
lods
adc
ret
mov
add
and
sti
cdq
(bad)
out
(bad)
dec
cdq
jecxz
addr16
push
(bad)
or
mov
dec
in
mov
stos
test
(bad)
(bad)
(bad)
mov
dec
call
xor
es
test
retf
xor
(bad)
(bad)
jmp
sbb
cmp
dec
add
push
lds
movs
enterw
out
mov
(bad)
(bad)
(bad)
call
dec
arpl
pop
push
cmp
call
pop
(bad)
(bad)
(bad)
jmp
movs
xlat
xchg
mov
fwait
sub
xchg
rol
push
push
push
adc
rol
(bad)
(bad)
push
hlt
xor
loopne
mov
cmp
in
inc
xchg
pop
retf
add
(bad)
in
pusha
cmp
adc
sar
lahf
mov
cmp
cwde
xor
cmp
(bad)
call
jnp
mov
lahf
adc
xor
inc
pop
pop
sbb
sti
retf
jl
jg
(bad)
(bad)
(bad)
jmp
jecxz
cmp
dec
pop
push
mov
dec
rcl
into
std
or
mov
(bad)
(bad)
(bad)
jmp
aad
arpl
stc
lea
pop
cld
push
pop
(bad)
rcl
fwait
pop
bound
ins
xchg
in
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
cld
in
mov
mov
(bad)
rol
(bad)
or
jno
and
lock
(bad)
(bad)
(bad)
call
repnz
and
es
adc
fadd
lahf
mov
mov
inc
aas
lods
and
xchg
fimul
xchg
fst
sub
(bad)
inc
jae
out
(bad)
push
shr
push
ja
mov
xor
fistp
(bad)
call
daa
cli
mov
mov
and
xor
mov
ror
ins
push
mov
xor
das
hlt
sub
in
mov
mov
xchg
jle
arpl
inc
mov
jmp
arpl
js
fild
repz
pop
stos
fbstp
movs
in
cmp
test
ret
(bad)
(bad)
(bad)
jmp
xchg
dec
cmp
or
(bad)
aad
in
sbb
jns
shr
sub
mov
(bad)
call
xor
call
jmp
rcl
ret
mov
std
out
sub
inc
out
(bad)
(bad)
call
mov
xchg
add
pop
xor
into
mov
je
mov
jl
(bad)
(bad)
(bad)
ds
jle
and
jge
pop
jge
fistp
fistp
sti
xchg
pop
xchg
(bad)
(bad)
fnstsw
fs
adc
inc
or
mov
retf
loop
(bad)
stos
loope
cld
adc
(bad)
jle
in
bound
nop
cmp
ins
cmovne
pop
in
jl
or
or
(bad)
(bad)
(bad)
jmp
jae
sbb
cld
lods
pop
or
rol
xor
mov
in
out
inc
fs
aaa
mov
imul
or
and
(bad)
(bad)
(bad)
call
dec
push
jmp
push
or
outs
shl
inc
sub
mov
xchg
mov
jecxz
(bad)
(bad)
call
fnstcw
jno
add
adc
and
in
inc
adc
jnp
iret
push
cmp
(bad)
jmp
add
adc
push
and
xchg
cmp
inc
ja
xchg
sub
addr16
(bad)
(bad)
(bad)
jg
fstp
aaa
idiv
(bad)
(bad)
outs
dec
push
das
rol
pop
lea
je
or
(bad)
(bad)
(bad)
inc
xor
pop
jge
fisubr
xchg
(bad)
sub
iret
inc
and
aam
push
les
push
mov
retf
push
push
push
jne
es
test
push
into
xor
popf
dec
push
jmp
sar
(bad)
dec
cmps
std
stos
pop
je
jb
ins
jo
lahf
or
and
dec
adc
adc
(bad)
(bad)
(bad)
call
out
loope
adc
(bad)
test
mov
jmp
or
mov
(bad)
mov
(bad)
(bad)
jmp
cmps
mov
shl
scas
sub
fld
mov
popf
xor
cs
(bad)
(bad)
(bad)
push
sahf
and
imul
jno
jb
inc
sbb
xor
mov
dec
(bad)
(bad)
(bad)
call
arpl
xlat
aaa
lods
frstor
imul
jge
imul
xchg
repnz
lds
jmp
je
repz
jo
jecxz
mov
push
mov
popf
sbb
dec
cmps
or
arpl
add
pop
or
out
or
inc
nop
je
out
xlat
mov
cli
retf
int
jb
dec
pop
xchg
xchg
in
(bad)
(bad)
call
lods
pop
jae
inc
(bad)
and
mov
lahf
add
jmp
inc
nop
ret
(bad)
jmp
push
ds
in
lahf
cmps
cdq
into
ror
(bad)
or
xor
add
lods
(bad)
(bad)
(bad)
jmp
fsub
mov
xchg
jmp
xchg
inc
ins
mov
arpl
xor
inc
mov
(bad)
repnz
lahf
adc
int3
mov
mov
xor
in
data16
jg
(bad)
(bad)
(bad)
jmp
sti
pop
retf
push
inc
ins
int3
fs
xchg
not
sub
xlat
mov
imul
push
(bad)
(bad)
(bad)
dec
ret
mov
cdq
add
stos
jg
push
push
stos
in
nop
out
fist
adc
xor
das
aaa
or
push
(bad)
xchg
mov
mov
add
push
adc
dec
fnstenv
(bad)
sti
(bad)
(bad)
out
call
mov
cmps
rcl
cmp
add
xor
stos
xchg
and
push
repz
mov
xor
(bad)
(bad)
(bad)
inc
or
mov
or
test
mov
dec
mov
enter
nop
out
in
fstp
(bad)
call
mov
sub
pushf
retf
jmp
xor
push
stc
mov
push
aas
clc
jmp
dec
jmp
and
dec
jl
outs
sbb
push
xchg
and
jmp
sbb
add
add
jp
cld
out
and
test
in
sbb
push
jge
or
or
inc
cld
(bad)
call
pusha
sbb
pop
mov
aad
mov
ds
sti
inc
loope
sub
xor
jmp
push
hlt
mov
ret
imul
add
sbb
int3
xchg
addr16
(bad)
fcomip
call
fwait
xchg
cmps
in
or
ins
inc
in
inc
mov
xchg
lahf
add
pop
(bad)
(bad)
(bad)
jmp
push
dec
repnz
jns
jmp
in
lds
mov
lahf
xchg
movs
mov
(bad)
(bad)
(bad)
jmp
and
pop
ret
fstp
or
push
pop
and
pusha
jno
cmps
out
(bad)
(bad)
(bad)
dec
sar
cmp
push
push
xor
cmp
dec
cmp
adc
push
test
add
(bad)
(bad)
(bad)
dec
movs
push
js
mov
test
int
push
ret
mov
mov
and
imul
mov
xor
push
inc
mov
or
jl
push
cmp
sbb
push
and
clc
ror
rcl
out
push
icebp
adc
sub
nop
in
mov
adc
dec
xchg
scas
es
push
pop
pop
pop
xchg
add
dec
data16
xchg
mov
out
(bad)
(bad)
dec
std
adc
pop
jb
pop
dec
cmp
adc
jo
mov
(bad)
push
out
iret
cs
bound
stc
rol
mov
movs
pop
xchg
push
call
daa
out
(bad)
(bad)
(bad)
inc
int3
or
pop
dec
inc
ins
pop
movs
daa
or
cmp
mov
mov
pop
(bad)
(bad)
(bad)
call
iret
out
pop
adc
cmps
lahf
jno
and
cmp
fs
test
jmp
test
push
sbb
cmps
cdq
mov
out
mov
push
and
mov
mov
push
sbb
outs
cmp
jg
div
mov
clc
nop
test
jl
(bad)
(bad)
jmp
sub
pop
(bad)
out
sbb
xchg
dec
jg
out
imul
cmps
scas
mov
mov
(bad)
(bad)
jmp
mov
div
call
ds
xor
inc
bound
jnp
mov
(bad)
(bad)
(bad)
call
ss
mov
xchg
fldcw
xor
call
jle
xchg
jp
push
fisttp
mov
(bad)
(bad)
jmp
add
add
mul
hlt
gs
dec
arpl
mov
sbb
mov
(bad)
(bad)
call
mov
neg
mov
aam
in
and
lods
dec
ror
xor
sub
dec
jne
(bad)
(bad)
call
mov
(bad)
mov
in
xor
mov
xchg
mov
adc
push
cmps
aaa
hlt
jmp
in
mov
js
enter
(bad)
sbb
push
sub
xor
aam
fisttp
push
push
stc
xor
(bad)
out
mov
call
jmp
adc
jae
(bad)
(bad)
(bad)
jns
xor
jbe
leave
and
(bad)
cmp
outs
xor
xchg
pop
xchg
clc
cdq
ja
outs
mov
xor
repnz
push
inc
inc
push
sub
test
popa
lds
(bad)
adc
inc
fsubp
(bad)
(bad)
(bad)
jmp
mov
cmp
sbb
mov
mov
repnz
sbb
add
dec
mov
in
(bad)
(bad)
(bad)
inc
jmp
sub
test
sbb
add
dec
sahf
inc
dec
sbb
add
in
inc
add
dec
xor
xchg
mov
push
(bad)
and
fwait
retf
cmp
jmp
(bad)
fild
mov
mov
cmp
(bad)
cdq
mov
gs
jmp
sub
jg
jecxz
(bad)
icebp
jge
cmp
mov
(bad)
(bad)
jmp
xlat
ret
mov
sub
in
(bad)
leave
pop
lds
pop
test
(bad)
jg
repnz
shr
mov
std
inc
repnz
mov
mov
imul
mov
ins
push
aad
push
dec
das
adc
mov
cmc
dec
jmp
js
lahf
lea
dec
add
add
pushf
xlat
or
(bad)
jmp
push
fs
lds
rcl
out
(bad)
(bad)
(bad)
jmp
lods
jno
add
and
mov
shl
ror
adc
pop
mov
test
mov
inc
(bad)
addr16
std
xor
(bad)
call
adc
sbb
and
mov
test
pusha
outs
jae
rcr
push
(bad)
cld
std
(bad)
stos
fcomip
out
(bad)
jge
mov
inc
aaa
sbb
push
int
jl
arpl
(bad)
cli
jmp
repz
jl
push
pop
and
xchg
clc
jecxz
push
test
and
jno
push
cmp
or
loopne
hlt
pushf
loope
fistp
jmp
push
pushf
call
jmp
inc
jmp
cli
add
push
push
(bad)
(bad)
mov
repz
(bad)
call
imul
xlat
xor
mov
(bad)
(bad)
call
or
retf
mov
inc
mov
mov
mov
jae
mov
lods
mov
(bad)
(bad)
(bad)
dec
push
cmp
aam
jnp
pop
and
arpl
mov
jmp
mov
fdivr
test
cmp
mov
and
cmp
sub
jmp
(bad)
(bad)
(bad)
out
mov
retf
fsub
xor
xchg
in
cmp
(bad)
pop
xlat
(bad)
test
(bad)
(bad)
(bad)
(bad)
js
mov
pop
test
adc
jmp
popa
inc
sbb
xchg
xchg
dec
aaa
jne
das
cwde
sbb
add
mov
arpl
nop
sub
das
mov
into
(bad)
inc
xor
hlt
push
sub
inc
cmp
out
pop
xlat
ss
or
std
enter
push
(bad)
(bad)
(bad)
call
fidiv
in
and
ins
or
data16
movs
mov
mov
add
imul
into
xchg
or
pop
cmc
or
inc
outs
xor
lock
ret
sbb
(bad)
(bad)
call
add
fwait
leave
jle
mov
pop
fcomp
rol
inc
loope
jae
mov
xor
stc
push
mov
xchg
pop
mov
inc
fldenv
pop
push
(bad)
(bad)
(bad)
jmp
inc
out
xchg
enter
scas
xor
mov
add
ins
repz
int
jb
mov
(bad)
call
and
sbb
adc
sbb
rol
xchg
and
popf
js
pop
sub
call
cmp
mov
and
inc
jae
lea
(bad)
xor
pop
in
js
fistp
push
or
(bad)
(bad)
(bad)
jmp
leave
leave
ss
jns
and
add
mov
cli
cmps
or
loop
sti
(bad)
inc
enter
std
mov
fwait
(bad)
fisub
sub
add
aad
mov
or
in
(bad)
mov
push
fdivr
mov
dec
mov
add
ins
pushf
xchg
(bad)
(bad)
jg
leave
push
jmp
pop
adc
jmp
fmul
retf
loop
repnz
(bad)
pop
mov
(bad)
(bad)
(bad)
fld
mov
push
jg
mov
sbb
and
mov
or
jmp
(bad)
dec
add
mov
in
xlat
mov
popa
sub
cld
mov
push
call
clc
jmp
sub
push
imul
(bad)
(bad)
(bad)
in
jmp
call
mov
xchg
and
retf
ror
jl
mov
js
(bad)
(bad)
(bad)
inc
imul
dec
arpl
icebp
mov
sbb
mov
and
mov
(bad)
out
(bad)
inc
or
push
js
dec
pop
jge
outs
fcomp
push
xchg
pushf
pop
jmp
jns
daa
cld
(bad)
(bad)
(bad)
dec
dec
jg
arpl
mov
mov
shl
clc
in
fsub
xlat
fs
cmps
(bad)
(bad)
(bad)
dec
test
ja
add
cmp
sub
in
ret
loope
arpl
inc
(bad)
call
retf
dec
push
sti
iret
rcl
out
and
sbb
mov
(bad)
(bad)
(bad)
jmp
xchg
(bad)
mov
or
pusha
int3
stos
outs
pop
xor
rol
fwait
jg
test
(bad)
(bad)
cmp
inc
adc
mov
adc
xchg
push
pop
outs
dec
cmp
(bad)
and
(bad)
jmp
inc
movs
lds
mul
and
push
and
(bad)
(bad)
dec
mov
jns
sub
in
in
enter
and
ror
iret
mov
sbb
dec
addr16
adc
(bad)
(bad)
(bad)
dec
add
sbb
push
xor
add
or
cmp
ret
mov
js
sti
adc
mov
idiv
into
mov
inc
retf
fcomp
ins
mov
xchg
jo
in
cmp
(bad)
(bad)
jg
mov
xchg
add
cs
push
outs
sbb
dec
fldenv
bnd
or
(bad)
mov
leave
jae
icebp
mov
es
mov
lods
dec
dec
cmp
fmul
cmp
jns
test
adc
mov
pop
cld
test
jmp
sub
jmp
(bad)
(bad)
(bad)
(bad)
jge
sbb
scas
sub
xchg
ret
retf
es
mov
es
movs
mov
cmp
(bad)
(bad)
(bad)
jge
cmp
mov
mov
movs
leave
clc
adc
push
add
push
and
movs
pusha
daa
(bad)
(bad)
(bad)
dec
out
nop
mov
pop
(bad)
mov
dec
into
jno
xor
mov
sbb
jl
lods
xchg
inc
dec
push
sbb
ret
sbb
dec
call
(bad)
(bad)
(bad)
(bad)
fild
xchg
call
pop
mov
bound
add
(bad)
(bad)
push
mov
retf
(bad)
push
xor
ss
cdq
dec
lods
icebp
lahf
inc
inc
xor
lahf
das
std
xchg
(bad)
out
push
sti
int3
mov
dec
outs
iret
ins
adc
pop
cmp
dec
stos
in
push
or
(bad)
(bad)
jmp
sub
ins
and
jbe
shr
xor
je
aaa
repz
cmp
(bad)
jmp
bound
inc
pop
pop
add
les
mov
pop
(bad)
lods
jbe
mov
xor
jle
(bad)
call
mov
pushf
inc
iret
jmp
rcr
mov
fild
sbb
dec
jnp
xchg
jp
mov
loop
pop
cmp
aad
pop
inc
sar
inc
outs
mov
jbe
ffree
test
shr
enter
lea
fsubp
out
jmp
cmp
xchg
pop
or
dec
test
imul
xlat
and
inc
cmp
cmp
or
repz
dec
ror
and
and
lds
jle
out
call
cmps
pop
fstp
adc
rcr
es
clc
pop
stos
jae
jge
leave
mov
repnz
inc
movs
sub
pop
dec
repz
cmp
mov
inc
lock
nop
leave
mov
lods
outs
mov
and
loopne
mov
sub
or
push
mov
scas
imul
add
xchg
jo
test
daa
repz
aas
pop
out
outs
sbb
push
repnz
pushf
in
adc
xchg
mov
pushf
mov
imul
inc
lock
in
cmp
rol
jmp
mov
or
fild
mov
je
fisub
mov
adc
mov
pop
jb
mov
mov
fild
sub
es
aad
enter
pushf
mov
and
cli
(bad)
call
xchg
(bad)
(bad)
(bad)
jmp
sbb
mov
ins
sbb
xor
mov
(bad)
and
out
shr
push
je
(bad)
(bad)
call
sar
jo
sar
aas
cli
ror
jecxz
out
bound
xchg
add
mov
(bad)
(bad)
(bad)
jmp
pop
sbb
addr16
sub
or
sbb
movs
sbb
xlat
xchg
(bad)
call
mov
mov
xchg
jge
jp
fidivr
(bad)
ins
sbb
fidivr
mov
out
outs
mov
test
pop
(bad)
shr
lock
adc
xchg
jnp
cli
arpl
mov
xor
stos
dec
dec
or
test
sahf
xor
or
outs
shl
retf
push
sbb
ja
mov
popf
lods
jno
pop
dec
clc
xor
mov
sbb
pop
dec
dec
push
push
aaa
lods
stos
adc
xchg
mov
add
sub
out
in
xchg
clc
ret
jae
push
mov
ja
jp
cmc
jecxz
pop
xchg
jbe
lods
repz
(bad)
sti
mov
test
inc
jecxz
sub
and
cwde
loope
out
xor
pop
sub
pop
jnp
inc
jns
and
and
add
sub
std
mov
in
xchg
pop
mov
retf
ins
or
out
xchg
jno
and
lds
push
and
clc
adc
dec
cmp
mov
fwait
cmps
push
into
addr16
out
push
sbb
sbb
jbe
inc
in
comiss
(bad)
xor
jae
(bad)
cli
xor
stos
add
ja
add
lea
outs
(bad)
(bad)
ret
idiv
fwait
jns
fnstenv
or
int
test
fs
fdiv
cmp
adc
xor
(bad)
xchg
sub
cli
(bad)
jle
int3
js
les
sbb
fcmove
ss
pcmpgtd
pop
std
clc
dec
lea
sbb
inc
pop
mov
mov
in
dec
es
(bad)
(bad)
(bad)
call
int
or
aam
adc
cmp
jp
pop
test
sbb
rol
int
mov
cmp
(bad)
(bad)
dec
movs
ins
jnp
dec
mov
jg
stc
pop
js
daa
inc
cmp
stos
jne
cs
loopne
(bad)
call
xchg
fs
or
aaa
ficomp
sbb
cmp
cmps
inc
daa
ds
inc
mov
pop
ret
stos
inc
cmps
cld
xchg
es
cmc
rol
dec
push
(bad)
(bad)
inc
loopne
nop
inc
and
movs
sbb
pop
add
scas
(bad)
ret
(bad)
(bad)
call
sub
inc
hlt
and
push
pushf
adc
lods
mov
hlt
mov
(bad)
(bad)
(bad)
jmp
cmp
jmp
pop
jae
lods
jmp
shl
mov
sub
push
fld
stos
in
sbb
jle
into
mov
jl
repnz
cld
stos
cmps
clc
stos
push
mov
inc
sbb
jmp
sub
(bad)
sbb
daa
add
mov
das
sbb
mov
iret
inc
ins
not
test
pop
popa
pusha
enter
aam
dec
repnz
push
in
jmp
sub
add
jp
sbb
(bad)
dec
popf
xlat
xor
js
adc
int
push
or
inc
fld
out
pop
cli
das
ret
mov
pop
mov
jns
cmps
fcomp
fild
(bad)
jmp
mov
jne
fldenv
add
mov
mov
cmp
or
adc
mov
(bad)
push
ret
ror
jmp
ficomp
jp
div
mov
gs
jmp
cmp
pop
adc
(bad)
fwait
retf
pushf
and
add
(bad)
mov
fisub
mov
(bad)
aas
fidivr
into
push
retf
pop
int3
pop
test
(bad)
(bad)
(bad)
(bad)
jmp
cwde
jle
xchg
loope
dec
lods
push
cmp
add
push
fwait
push
dec
and
(bad)
jmp
out
jne
pushf
cmp
add
sbb
push
xchg
sbb
call
(bad)
jmp
sbb
ret
cmp
inc
out
ror
rol
adc
jae
ins
add
(bad)
(bad)
dec
sbb
dec
mov
add
cmp
int3
jnp
call
sub
in
mov
(bad)
(bad)
push
push
add
fs
mov
mov
mov
rcr
xchg
pop
and
(bad)
(bad)
jmp
or
int
pop
pop
arpl
mov
neg
mov
(bad)
call
jae
mov
ret
inc
push
add
add
xchg
xchg
sbb
aas
and
popf
xchg
mov
(bad)
(bad)
call
fstp
pop
xchg
or
loop
ror
ins
add
stos
pop
les
mov
inc
jae
int
inc
or
lea
enter
(bad)
(bad)
(bad)
(bad)
inc
movs
sti
jmp
or
cmp
push
sbb
rcr
nop
icebp
bound
(bad)
(bad)
call
mov
dec
jns
push
pop
mov
mov
in
and
jmp
adc
(bad)
(bad)
(bad)
call
retf
bound
cld
push
loop
retf
lods
cmp
sub
xchg
ror
cmp
(bad)
(bad)
push
mov
mov
mov
jl
xchg
add
xchg
xor
(bad)
(bad)
(bad)
(bad)
fucomp
daa
dec
lods
out
retf
das
mov
mov
mov
ds
aam
dec
jns
(bad)
(bad)
(bad)
jmp
sub
es
mov
mov
stos
cmp
and
mov
inc
cmc
(bad)
pop
imul
stc
lds
push
ds
out
sub
in
lods
jmp
(bad)
(bad)
cmp
cdq
cmp
push
dec
dec
ja
loopne
mov
cmp
xlat
js
mov
fwait
and
mov
in
and
sti
mov
or
xor
ret
scas
dec
mov
inc
push
jmp
loop
(bad)
(bad)
(bad)
dec
je
xchg
cmp
xor
fsubr
popf
mov
loop
(bad)
into
add
lahf
stc
pushf
dec
(bad)
(bad)
(bad)
call
mov
xchg
sbb
fs
lea
sbb
xor
lock
daa
push
test
inc
pop
pop
pusha
push
(bad)
(bad)
(bad)
out
call
add
stos
push
cmp
into
(bad)
call
clc
cli
cmp
(bad)
(bad)
(bad)
call
mov
xor
push
leave
mov
jae
xor
popf
sti
(bad)
mov
(bad)
inc
mov
int3
sar
pop
pop
xchg
hlt
inc
mov
sub
pop
dec
inc
and
cmps
(bad)
(bad)
(bad)
dec
cmp
sub
or
push
mov
(bad)
retf
pop
(bad)
(bad)
(bad)
jmp
and
xor
cdq
aas
shr
movs
pinsrw
push
or
dec
ja
(bad)
(bad)
(bad)
call
add
mov
(bad)
dec
test
xlat
dec
sbb
icebp
lea
and
(bad)
(bad)
call
ja
add
ror
sbb
sub
hlt
ret
in
rcl
pusha
jne
(bad)
(bad)
jmp
or
shl
(bad)
js
xchg
outs
pop
movs
mov
scas
js
test
loopne
adc
ds
push
mov
outs
lds
inc
jno
pop
add
sub
push
xor
mov
cdq
jmp
mov
pop
or
(bad)
(bad)
jmp
cmp
(bad)
xlat
(bad)
jmp
xchg
int3
push
sbb
loopne
lock
mov
(bad)
(bad)
(bad)
jmp
adc
call
(bad)
aad
fld
call
scas
adc
cwde
cwde
cld
hlt
lods
(bad)
(bad)
(bad)
call
jecxz
call
push
sti
dec
jmp
sub
push
cmp
push
fsubr
mov
clc
imul
inc
adc
fwait
cmp
shl
sub
retf
cmp
repz
(bad)
(bad)
(bad)
call
aam
push
push
jno
fistp
jl
(bad)
xor
retf
or
mov
sbb
call
pop
sbb
cli
mov
loopne
ror
jmp
xchg
(bad)
(bad)
(bad)
(bad)
inc
popa
sbb
sbb
mov
ja
out
mov
fs
dec
retf
out
cmp
push
mov
(bad)
(bad)
push
jge
inc
pop
movs
daa
dec
or
stos
pop
mov
adc
xchg
push
aad
adc
cwde
aad
pushf
add
(bad)
(bad)
(bad)
(bad)
cmp
movs
das
pop
push
pop
ins
sbb
imul
mov
fdiv
aas
sbb
(bad)
(bad)
(bad)
jnp
inc
mov
mov
mov
test
inc
mov
mov
mov
sub
add
pop
out
jnp
popf
movs
sub
or
(bad)
call
daa
adc
push
inc
cli
hlt
or
xchg
test
adc
hlt
call
xor
scas
bound
cmp
ficom
shr
xchg
retf
imul
(bad)
jmp
xchg
int
mov
or
mov
popa
cli
imul
xchg
hlt
cmc
push
lods
push
idiv
(bad)
(bad)
dec
cmp
sub
mov
shl
and
pop
mov
mov
cs
fcomip
inc
(bad)
in
out
add
dec
scas
mov
pop
loopne
push
push
mov
xlat
lahf
adc
movs
(bad)
(bad)
inc
push
call
xchg
shl
popa
aad
mov
mov
int
call
das
fs
js
popf
cmp
and
ds
mov
call
outs
out
pushf
jmp
jmp
jecxz
call
(bad)
(bad)
(bad)
call
pop
shl
ins
mov
add
std
jbe
cs
adc
or
dec
sbb
lds
sbb
xor
fcomp
mov
(bad)
sti
sub
push
fild
or
sti
(bad)
jmp
stos
test
cmp
sub
addr16
mov
add
stc
fnstcw
(bad)
sti
jmp
(bad)
inc
add
lea
jl
adc
loopne
or
add
int3
daa
lea
inc
push
push
(bad)
(bad)
(bad)
(bad)
jns
inc
mov
adc
push
fimul
stos
mov
xchg
imul
mov
js
xchg
or
add
movs
dec
jae
fcmovbe
daa
pop
ret
sub
movs
dec
fcomp
les
(bad)
(bad)
(bad)
call
xor
int
or
aam
mov
rol
push
fdiv
jle
push
jbe
aam
push
outs
(bad)
(bad)
(bad)
inc
test
into
aas
sub
dec
mov
fcomp
mov
pop
mov
(bad)
jmp
adc
aas
loop
lahf
aad
sub
ds
(bad)
std
adc
iret
pop
jecxz
push
stos
pop
dec
and
mov
imul
(bad)
out
add
mov
pop
imul
std
or
and
mov
jge
ror
and
jmp
cmp
jmp
enter
fld
neg
stos
lock
mov
sub
or
and
(bad)
(bad)
inc
mov
and
cmp
fist
stc
or
push
loopne
out
ret
mov
(bad)
(bad)
jmp
js
fistp
mov
ss
pop
push
mov
stc
fimul
jnp
dec
cmp
mov
ret
cmp
inc
scas
loopne
aad
jne
push
mov
daa
lea
cli
pop
(bad)
dec
js
leave
or
add
out
scas
mov
push
adc
inc
mov
push
hlt
mov
dec
pushf
mov
cs
ret
aam
mov
or
mov
xchg
sbb
pop
pop
dec
jp
push
xchg
ret
inc
enter
(bad)
dec
jmp
cld
pop
cmps
mov
push
adc
in
push
xchg
loop
push
ret
sub
(bad)
(bad)
call
inc
packuswb
lea
sub
mov
lods
cmps
mov
(bad)
(bad)
fisubr
jb
adc
inc
add
test
jmp
(bad)
(bad)
(bad)
(bad)
jmp
mov
jmp
mul
js
nop
movs
sbb
test
(bad)
xchg
call
push
pop
adc
pop
loopne
out
(bad)
(bad)
clc
das
rol
jnp
or
call
(bad)
call
movs
inc
das
pop
mov
push
fcom
mov
iret
call
dec
and
cwde
inc
jmp
scas
mov
es
outs
(bad)
(bad)
(bad)
(bad)
jmp
test
xchg
pop
pop
push
mov
inc
inc
je
jnp
xchg
retf
sbb
(bad)
(bad)
call
sub
fbstp
and
and
in
push
mov
push
ins
add
sub
(bad)
(bad)
call
xor
stos
int3
call
in
ficomp
pushf
ss
sbb
les
(bad)
(bad)
dec
mov
add
xor
out
adc
cwde
mov
mov
(bad)
jb
(bad)
(bad)
(bad)
(bad)
inc
mov
sub
cmps
mov
xlat
dec
jp
push
inc
jecxz
(bad)
(bad)
call
imul
mov
sbb
jnp
sub
and
dec
and
fisttp
test
(bad)
(bad)
(bad)
push
mov
sub
pusha
(bad)
call
mov
xchg
(bad)
(bad)
out
(bad)
std
xchg
aam
ret
cli
imul
push
stc
in
push
aas
mov
idiv
jmp
jmp
mov
mov
xor
jg
jo
in
and
mov
push
adc
jmp
(bad)
(bad)
(bad)
(bad)
out
xchg
popf
jae
rol
fcmovbe
cs
or
pop
cld
aaa
ins
jae
mov
(bad)
(bad)
(bad)
dec
outs
dec
scas
pop
(bad)
arpl
mov
nop
ss
and
std
dec
cld
adc
sub
(bad)
(bad)
(bad)
stc
retf
int
xlat
cli
jnp
pop
jns
fld
jge
sbb
pusha
ins
add
(bad)
mov
(bad)
(bad)
jg
sti
sahf
adc
ss
jbe
xchg
push
mov
daa
out
clc
push
mov
loop
outs
mov
xchg
out
cmc
and
xor
mov
xchg
(bad)
ds
push
ss
xor
(bad)
(bad)
(bad)
jmp
addr16
push
call
out
int3
mov
repz
cmc
std
jle
repnz
or
scas
jnp
(bad)
(bad)
call
lods
inc
sbb
icebp
arpl
inc
xor
les
stos
gs
(bad)
(bad)
(bad)
dec
jge
dec
cld
cmc
loop
add
mov
cdq
int
xchg
mov
inc
mov
mov
inc
cs
lahf
std
out
(bad)
inc
push
add
mov
or
add
mov
popf
dec
(bad)
(bad)
push
ror
sub
daa
jne
add
or
lahf
leave
sti
jmp
adc
(bad)
fcom
daa
(bad)
(bad)
(bad)
(bad)
(bad)
retf
push
add
ret
mov
or
arpl
jns
push
mov
cmp
aad
scas
mov
(bad)
jne
adc
cs
mov
add
scas
clc
pop
xchg
(bad)
fidivr
repnz
cmps
(bad)
(bad)
(bad)
dec
mov
mov
adc
jp
fadd
pop
push
pop
(bad)
(bad)
(bad)
call
je
adc
mov
out
xchg
pusha
push
repz
out
ins
or
aaa
pop
mov
sbb
ror
in
mov
cmp
mov
(bad)
mov
lds
mov
cwde
stos
mov
out
shl
(bad)
push
shl
rcr
mov
cmp
cmp
jmp
call
call
in
jbe
loopne
or
mov
or
pusha
call
mov
outs
jb
(bad)
and
push
ins
pop
fldcw
jmp
cs
jmp
xchg
pop
mulps
loope
adc
sbb
xor
fiadd
(bad)
(bad)
(bad)
push
mov
mov
sbb
xchg
pop
je
add
pop
mov
xor
(bad)
(bad)
call
add
data16
mov
retf
and
ficom
daa
mov
iret
xchg
(bad)
(bad)
(bad)
(bad)
jmp
lahf
outs
jle
mov
outs
ds
fadd
mov
dec
jle
xchg
int3
loope
xor
jp
(bad)
mov
stos
mov
pop
and
add
test
test
scas
fidiv
(bad)
(bad)
push
cmc
(bad)
push
xchg
test
cmp
popa
jo
pop
mov
clc
xchg
push
(bad)
(bad)
(bad)
(bad)
clc
mov
cmp
fimul
cs
inc
cld
sub
jnp
bound
outs
push
fsincos
cmps
push
ror
push
(bad)
ja
das
push
fisttp
rol
mov
aam
ret
mov
add
fwait
cmp
(bad)
(bad)
inc
mul
sub
nop
aaa
and
loopne
sub
rcr
test
and
call
(bad)
(bad)
call
mov
mov
in
inc
adc
test
jae
sahf
jnp
es
cmp
(bad)
(bad)
(bad)
(bad)
jl
adc
push
push
leave
int3
mov
mul
ins
ins
or
or
pop
add
xchg
and
sub
cld
out
cli
inc
xlat
shl
push
mov
xor
push
cmp
or
sahf
dec
push
push
cld
or
cmp
sub
jl
adc
and
(bad)
push
cmp
mov
(bad)
dec
push
(bad)
push
pop
ja
loop
push
out
pop
iret
(bad)
(bad)
(bad)
(bad)
jg
mov
fisubr
dec
jmp
stc
sbb
daa
unpcklps
xchg
mov
sti
sbb
in
(bad)
(bad)
(bad)
call
call
nop
mov
mov
or
mov
into
sbb
xchg
sub
xor
push
adc
ins
cmc
test
inc
jne
cwde
sbb
dec
inc
sbb
push
push
popf
mov
add
loope
mov
sbb
(bad)
(bad)
jle
add
dec
and
pop
mov
loopne
mov
retf
and
je
ins
mov
sbb
call
sti
test
test
ror
xchg
repz
xchg
push
aaa
(bad)
(bad)
(bad)
jmp
pop
mov
lea
clc
cld
fisub
imul
mov
ja
(bad)
(bad)
(bad)
push
aad
fcom
fcomp
jge
sub
inc
scas
fs
jb
stc
ins
(bad)
(bad)
(bad)
(bad)
mov
add
pop
sti
cmp
fwait
cmps
or
neg
data16
(bad)
(bad)
jmp
rol
pusha
rcl
adc
stc
sub
pop
aaa
push
outs
cmp
mov
loopne
dec
movs
push
jmp
scas
pushf
cmp
popf
out
loope
clc
mov
addr16
ret
aas
adc
sbb
(bad)
(bad)
call
mov
cld
or
dec
test
xor
add
xchg
loop
in
clc
sbb
(bad)
(bad)
(bad)
(bad)
jp
rcr
call
or
rol
pop
dec
cdq
enter
dec
stos
pop
pushf
retf
lahf
(bad)
(bad)
(bad)
call
push
out
(bad)
push
dec
out
lahf
retf
cdq
adc
push
mov
pop
cmp
or
xor
(bad)
(bad)
(bad)
jmp
loope
icebp
jo
cmps
or
sub
push
das
push
pop
test
cdq
cmp
fnstenv
and
ud0
retf
in
push
jle
outs
mov
mov
icebp
pusha
lods
cmp
daa
outs
mov
xor
cmp
xor
cmps
push
clc
idiv
inc
or
iret
xor
jmp
sub
xor
scas
inc
and
mov
pop
cld
aas
adc
mov
pushf
push
push
jns
xor
mov
or
pop
std
(bad)
jmp
xchg
lock
push
(bad)
(bad)
sub
mov
push
es
inc
sub
loop
out
fsubr
dec
add
int3
fst
(bad)
push
or
push
lods
(bad)
(bad)
(bad)
(bad)
js
mov
adc
add
push
in
mov
pop
lods
mov
(bad)
sub
sub
xchg
(bad)
(bad)
(bad)
(bad)
fisttp
dec
sub
into
pop
jne
pop
jecxz
and
sub
pop
bnd
in
sub
(bad)
(bad)
call
xchg
xor
pop
inc
push
xchg
stos
pusha
cmp
out
mov
mov
pop
inc
(bad)
(bad)
(bad)
inc
mov
mov
jle
out
sbb
out
leave
jg
and
or
(bad)
(bad)
dec
mov
(bad)
or
ds
jnp
outs
test
pop
leave
cmp
cld
stos
out
mov
sar
(bad)
(bad)
jmp
jl
ret
mov
add
mov
push
or
mov
push
jb
(bad)
(bad)
(bad)
push
std
nop
fwait
rcl
cli
pusha
xor
pop
iret
inc
in
cmp
cmp
xlat
pop
(bad)
(bad)
(bad)
(bad)
mov
lods
or
scas
mov
(bad)
fs
int
repnz
mov
sbb
jmp
jmp
sub
sti
lahf
ins
rcr
enter
add
xchg
fnstenv
cmps
fwait
repnz
mov
lock
xor
(bad)
(bad)
(bad)
dec
sub
add
mov
xchg
(bad)
fistp
fdivr
push
adc
xchg
aam
idiv
inc
jle
cmp
jl
dec
repnz
cmps
pop
test
ss
sbb
xchg
(bad)
(bad)
inc
mov
ja
dec
(bad)
pushf
pop
mov
push
jno
test
adc
int3
sub
sbb
(bad)
call
retf
fmul
out
jmp
jne
data16
test
cmp
out
(bad)
(bad)
(bad)
dec
xlat
sub
addr16
sti
pop
fcom
jge
and
and
(bad)
jmp
ret
aas
mov
cmps
push
call
push
clc
jne
jecxz
(bad)
jge
jno
pop
(bad)
(bad)
(bad)
inc
pop
pop
mov
mov
cmp
sahf
cli
cdq
mov
mov
(bad)
(bad)
call
(bad)
dec
mov
xor
out
loope
jns
ins
cli
out
cmp
pop
mov
daa
xlat
(bad)
(bad)
(bad)
call
sbb
mov
inc
retf
imul
mov
mov
iret
imul
jmp
fstp
test
push
xchg
and
out
(bad)
ss
lahf
movs
sbb
xor
(bad)
(bad)
(bad)
dec
test
push
ror
or
and
ss
sbb
cmp
(bad)
(bad)
call
cmp
xor
and
mov
int
pushf
and
cmp
(bad)
(bad)
mov
aad
push
out
jmp
sbb
or
fld
jno
lock
(bad)
js
(bad)
(bad)
call
pop
loop
mov
std
add
int3
imul
xchg
leave
or
std
scas
or
fidivr
dec
jmp
mov
es
push
repz
rcl
and
jmp
push
(bad)
hlt
or
aaa
aas
daa
call
rol
pop
cs
push
mov
test
je
je
std
xchg
neg
retf
jecxz
mov
movs
sahf
pop
xor
(bad)
(bad)
jmp
je
in
dec
ja
mov
sbb
pop
pop
cmovp
int
cdq
aam
mov
xchg
(bad)
(bad)
jg
fcom
in
aad
push
into
(bad)
out
js
lock
mov
inc
mov
test
(bad)
(bad)
jmp
dec
mov
adc
fiadd
test
jl
xchg
int3
cmp
fist
(bad)
(bad)
(bad)
jmp
ret
mov
mov
or
adc
sub
and
or
mov
cmps
pop
(bad)
(bad)
(bad)
jmp
loope
dec
out
sub
mov
data16
mov
stos
dec
stos
(bad)
(bad)
(bad)
call
scas
arpl
lock
and
je
pop
jne
shr
fwait
into
outs
fs
mov
(bad)
(bad)
call
adc
xchg
scas
and
add
addr16
int
dec
inc
iret
jbe
cmp
(bad)
(bad)
out
inc
jo
stos
(bad)
out
pop
pushf
cld
arpl
xchg
loop
xchg
mov
xchg
test
adc
aam
(bad)
(bad)
(bad)
call
xor
add
mov
ja
out
lea
dec
rcr
inc
sub
jne
shl
add
movs
loop
outs
cmp
cld
lock
add
inc
jmp
hlt
(bad)
shr
push
or
add
stos
lock
and
(bad)
daa
mov
or
iret
fiadd
popf
enter
mov
add
pop
inc
pop
pop
inc
jmp
mov
and
icebp
xchg
shl
mov
fs
call
jmp
cmp
outs
mov
jae
jmp
je
(bad)
(bad)
(bad)
jmp
mov
je
xor
aas
jb
sbb
aaa
sahf
jmp
adc
add
lds
push
jo
cmp
mov
(bad)
(bad)
jmp
sar
repnz
mov
sbb
push
dec
test
dec
or
xchg
inc
sbb
mov
cmp
(bad)
(bad)
(bad)
dec
or
js
mov
ret
xor
repz
cmps
scas
cli
jmp
std
xor
mov
cdq
jmp
mov
xchg
sahf
add
enter
ficom
lds
call
sbb
movs
outs
pop
mov
shr
mov
(bad)
(bad)
mov
jmp
scas
pop
jmp
mov
and
xchg
call
popa
rol
(bad)
(bad)
(bad)
call
mov
pusha
cmps
fwait
test
ds
ret
or
add
mov
aaa
mov
(bad)
(bad)
call
aad
add
xlat
movs
adc
js
inc
inc
fnstcw
cmp
fld
adc
(bad)
sbb
mov
add
(bad)
(bad)
dec
cmps
jl
daa
adc
imul
addr16
es
adc
xor
ins
js
(bad)
(bad)
(bad)
(bad)
jmp
or
shr
cmp
ins
mov
push
dec
retf
xchg
sbb
(bad)
(bad)
(bad)
call
push
pop
push
add
ins
cld
add
push
adc
inc
outs
ja
xor
cmps
inc
in
loopne
hlt
addr16
xor
add
add
pop
mul
mov
or
pusha
das
sahf
scas
js
xchg
(bad)
call
mov
das
add
sbb
mov
frstor
(bad)
push
pushf
pusha
call
cwde
out
js
test
add
or
xor
loopne
sar
add
mov
clc
mov
(bad)
(bad)
fdivrp
addr16
icebp
mov
sub
mov
dec
mov
sti
ss
leave
push
in
(bad)
(bad)
(bad)
inc
mov
pusha
push
stos
dec
mov
fsubr
and
mov
jo
movs
inc
push
jge
(bad)
(bad)
(bad)
inc
ss
adc
push
retf
add
jns
lahf
push
sbb
outs
xchg
mov
inc
mov
fdivr
fadd
cmp
jmp
les
add
js
(bad)
jmp
xchg
mov
add
mov
jbe
push
mov
(bad)
(bad)
(bad)
jmp
cmps
fdivp
xchg
or
mov
jb
ret
sub
inc
fcom
das
cli
xor
and
(bad)
(bad)
(bad)
(bad)
call
popa
js
ins
shl
sub
inc
fist
jle
fs
aam
and
cs
adc
arpl
xor
(bad)
(bad)
jmp
in
pop
and
mov
sti
sub
mov
loope
lahf
sahf
repz
adc
jecxz
(bad)
(bad)
(bad)
(bad)
jmp
cmc
sbb
gs
mov
push
nop
adc
ss
scas
leave
(bad)
(bad)
mov
popa
(bad)
mov
pop
mov
into
adc
call
call
mov
(bad)
(bad)
cdq
nop
jne
and
jg
aam
(bad)
xor
(bad)
(bad)
(bad)
dec
push
dec
cmps
les
xchg
mov
in
pop
jle
adc
inc
and
clc
xor
(bad)
(bad)
(bad)
call
test
test
sbb
adc
jle
not
sbb
mov
jge
(bad)
(bad)
(bad)
jmp
sub
push
out
fisttp
imul
out
jnp
pop
pop
aad
call
in
and
(bad)
(bad)
(bad)
inc
push
leave
and
sub
jp
nop
dec
scas
mov
test
(bad)
call
gs
retf
mov
fsub
rcr
pop
arpl
jb
adc
adc
xor
mov
dec
mov
jmp
mov
dec
xchg
jae
xor
call
pusha
pusha
fwait
adc
scas
test
shl
(bad)
iret
adc
(bad)
(bad)
jmp
call
pop
clc
xchg
cmp
sub
in
push
mov
(bad)
(bad)
inc
mov
adc
fsub
gs
in
(bad)
cmc
jle
dec
pop
sub
call
(bad)
(bad)
dec
cmp
cs
mov
mov
fwait
cli
das
mov
fs
(bad)
push
fimul
ds
(bad)
(bad)
(bad)
jmp
inc
mov
pop
mov
or
iret
and
je
fist
in
shr
aas
je
dec
jl
int3
and
xchg
test
hlt
cmp
sbb
push
(bad)
xor
fisttp
sbb
adc
out
loopne
leave
dec
jmp
loopne
int
sub
sahf
(bad)
(bad)
(bad)
jmp
push
inc
push
(bad)
mov
cmps
or
int3
cmp
xor
push
stos
add
clc
in
(bad)
outs
ins
mov
xlat
cs
push
mov
fnstsw
add
xor
cmp
dec
mov
xor
dec
inc
outs
loopne
ins
(bad)
bound
and
xchg
rcr
std
add
xchg
adc
xlat
push
addr16
pushf
(bad)
(bad)
inc
jb
jmp
jge
push
call
(bad)
fld
(bad)
(bad)
call
jmp
rcr
ins
nop
mov
xchg
mov
shl
imul
stc
rol
pop
into
ins
or
push
clc
stos
out
into
mov
popa
cld
adc
aas
pop
sub
icebp
mov
sbb
(bad)
out
(bad)
call
xchg
retf
jmp
(bad)
mov
or
or
enter
(bad)
call
js
(bad)
xor
ins
sti
adc
fs
test
add
push
mov
(bad)
(bad)
out
xor
jb
and
dec
daa
sub
jecxz
mov
out
mov
(bad)
(bad)
(bad)
(bad)
mov
ins
imul
hlt
sbb
and
and
mov
jl
jnp
dec
fisttp
(bad)
(bad)
(bad)
push
adc
dec
test
nop
fnstsw
stos
and
mov
cmp
and
mov
fcmove
(bad)
(bad)
(bad)
jmp
mov
icebp
inc
xchg
and
or
push
mov
jo
ret
iret
outs
shr
call
div
cmps
cs
in
stos
or
pop
cmp
dec
das
into
in
sti
fwait
inc
sbb
arpl
cmp
ret
(bad)
call
xchg
pop
adc
cmp
and
push
stc
retf
cli
sbb
ficom
mov
(bad)
fadd
(bad)
ja
pop
mov
call
add
adc
(bad)
jmp
and
data16
sub
rol
add
cwde
pusha
rcl
fs
ss
(bad)
(bad)
dec
push
pop
sbb
call
mov
inc
dec
mov
inc
xor
sbb
inc
sub
dec
outs
push
icebp
(bad)
(bad)
dec
imul
lods
test
mov
fmul
mov
sbb
scas
add
or
(bad)
mov
inc
jg
test
jge
add
test
add
xor
(bad)
push
mov
repnz
jnp
xor
and
push
retf
cdq
sar
test
push
(bad)
mov
(bad)
out
arpl
xchg
jge
std
pusha
(bad)
out
bound
iret
sar
es
xchg
cmp
out
and
xchg
out
(bad)
(bad)
(bad)
(bad)
fld
sbb
sbb
or
daa
push
push
pop
inc
rol
push
jecxz
pop
pop
hlt
(bad)
(bad)
(bad)
inc
mov
mov
lock
scas
sbb
jno
xor
mov
or
les
(bad)
(bad)
(bad)
(bad)
jle
aas
cdq
pop
popa
jno
retf
iret
aas
(bad)
and
pop
push
loopne
sub
in
sub
mov
movs
(bad)
(bad)
(bad)
push
nop
stos
xor
adc
cli
xor
xchg
push
push
or
nop
push
push
inc
xor
(bad)
(bad)
mov
mov
pop
mov
add
rcl
and
pop
push
retf
(bad)
(bad)
jmp
xchg
call
icebp
or
push
stc
jle
xor
in
push
sbb
gs
mov
stos
add
cld
(bad)
jmp
xor
cdq
xor
and
pop
and
mov
frstpm(287
add
dec
mov
dec
mov
(bad)
ffreep
(bad)
and
push
aaa
cld
inc
fidivr
jmp
inc
icebp
dec
(bad)
(bad)
(bad)
inc
cmc
mov
mov
pop
mov
rol
pop
add
pop
mov
(bad)
jmp
ror
dec
dec
xor
imul
lds
bound
(bad)
data16
or
mov
push
push
(bad)
retf
jmp
pop
mov
ret
adc
xor
mov
cmp
push
aas
push
push
mov
add
xor
sahf
dec
data16
into
(bad)
(bad)
(bad)
dec
xlat
pop
dec
(bad)
(bad)
sbb
cmc
pop
int3
aam
into
(bad)
cwde
(bad)
mov
repnz
adc
dec
mov
push
pop
pop
hlt
outs
inc
icebp
jg
mov
add
shr
jmp
div
nop
inc
and
mov
ror
dec
call
call
mov
cld
jp
add
push
ins
sub
inc
jmp
(bad)
out
xor
call
sti
mov
aam
add
out
mov
(bad)
(bad)
(bad)
(bad)
call
movs
adc
xor
fwait
loopne
hlt
xchg
pushw
sahf
loopne
outs
push
sbb
push
add
sar
pop
inc
or
retf
xlat
push
push
and
cmp
jge
mov
adc
(bad)
(bad)
(bad)
mov
jo
inc
mov
jmp
iret
and
jae
nop
sub
pusha
shr
(bad)
(bad)
(bad)
jmp
xor
mov
xchg
icebp
imul
loope
cmp
add
pop
pop
shr
mov
jle
scas
push
retf
cmp
pop
cld
jb
or
fs
(bad)
(bad)
(bad)
(bad)
call
stos
cs
sub
mov
xor
mov
ds
into
push
mov
outs
dec
add
and
jnp
test
and
cmps
or
inc
xor
scas
call
(bad)
hlt
hlt
aaa
(bad)
(bad)
(bad)
push
addr16
in
call
(bad)
iret
addr16
sub
sbb
jne
pop
xchg
fmul
fld
push
sbb
ficom
test
lahf
sbb
inc
ins
icebp
retf
les
std
movs
ds
loop
inc
out
(bad)
(bad)
mov
pop
mov
test
jl
sbb
pop
cs
add
(bad)
dec
out
or
mov
jmp
push
jg
xor
push
std
mov
cmovno
(bad)
dec
(bad)
jg
inc
mov
xor
or
add
jp
sub
or
xor
into
stc
repz
lods
cmp
(bad)
inc
rcl
push
mov
add
or
dec
ret
mov
cmp
(bad)
(bad)
(bad)
dec
je
icebp
fsub
sti
mov
leave
ja
ins
(bad)
jo
xlat
test
dec
ret
loope
mov
(bad)
(bad)
call
leave
jl
leave
push
jne
xchg
xor
sub
les
jbe
adc
stos
lahf
push
jmp
outs
movs
jge
in
out
(bad)
cmp
xor
xchg
call
inc
out
push
push
(bad)
call
in
aaa
pop
sub
retf
js
jl
ins
fs
pop
popf
push
fidiv
pop
hlt
icebp
bound
xor
(bad)
(bad)
inc
and
add
pop
jl
int
jae
adc
cmps
popf
leave
shr
les
inc
nop
mov
pop
sub
std
(bad)
shl
or
adc
in
jns
jg
(bad)
(bad)
dec
cwde
fs
xlat
into
sti
cmc
xor
cs
cwde
test
jge
pop
dec
hlt
data16
das
mov
(bad)
(bad)
(bad)
jmp
fsub
add
ja
pop
mov
into
or
push
outs
xor
push
mov
(bad)
call
aam
stos
lea
xchg
add
fdiv
lods
rol
(bad)
(bad)
jmp
mov
cmps
mov
cdq
imul
(bad)
leave
jmp
and
test
add
xchg
push
pop
mov
call
cmp
data16
push
cmc
es
xor
adc
(bad)
(bad)
(bad)
fdivr
into
jo
jb
das
bound
dec
push
sbb
aas
xor
jae
push
jp
mov
xchg
inc
aaa
(bad)
(bad)
(bad)
(bad)
mov
les
mov
cmc
pop
in
sbb
lds
mov
test
nop
out
(bad)
(bad)
push
inc
push
popa
sub
xchg
mov
inc
jmp
or
pop
dec
push
es
movs
jmp
and
into
mov
xchg
jmp
pop
pusha
daa
clc
jp
call
mov
ss
dec
adc
retf
loope
jmp
ror
aam
adc
(bad)
call
dec
movs
xlat
(bad)
(bad)
ins
xor
sbb
iret
xchg
mov
jmp
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jle
lahf
sahf
dec
test
call
xchg
cmp
inc
aaa
sub
pop
mov
(bad)
(bad)
(bad)
jmp
jecxz
arpl
adc
add
cmp
int
imul
push
out
(bad)
(bad)
(bad)
inc
mov
and
in
add
daa
mov
sti
int
lods
js
loopne
aas
sub
cmps
and
(bad)
inc
adc
xchg
lods
or
les
xchg
sar
(bad)
jg
add
mov
out
xchg
aam
jmp
mov
in
jecxz
cmp
xchg
inc
xlat
lock
mov
mov
mov
scas
pop
mov
or
fucom
ins
and
jnp
in
enter
(bad)
(bad)
jmp
sub
cmp
loope
mov
aam
repnz
xchg
std
fisubr
sub
fdivr
(bad)
(bad)
(bad)
call
dec
popf
ror
inc
mov
(bad)
sub
data16
sub
(bad)
jmp
jmp
(bad)
jmp
pop
mov
rol
dec
mov
mov
shl
ficom
loope
(bad)
(bad)
(bad)
call
mov
inc
jecxz
fsubr
sbb
rcl
sub
int
scas
and
(bad)
(bad)
push
in
mov
and
enter
adc
xor
mov
pop
fcomp
xlat
jmp
xchg
shl
jnp
stos
lock
psubd
pop
jg
aaa
ror
push
lods
xor
call
(bad)
(bad)
(bad)
jmp
rcr
movs
fwait
mov
int
hlt
hlt
xchg
mov
shl
mov
xchg
std
xchg
or
arpl
(bad)
(bad)
call
pop
leave
pop
fs
sbb
je
push
ja
es
out
mov
cmp
(bad)
(bad)
call
cmp
mov
push
call
loopne
inc
mov
push
jmp
jg
pusha
jle
add
fbstp
movs
nop
inc
pop
hlt
sbb
pop
inc
scas
clc
aas
clc
sub
pop
inc
and
mov
icebp
jmp
jg
or
push
lods
sub
leave
pop
(bad)
inc
push
js
pop
cmp
and
adc
iret
fcmovne
call
shl
in
add
(bad)
(bad)
(bad)
call
push
(bad)
or
xchg
pop
mov
sbb
and
add
xor
dec
sti
(bad)
js
ja
sub
cmp
mov
jmp
cmp
inc
push
hlt
test
jnp
ja
fwait
push
int
fwait
mov
mov
fwait
mov
daa
(bad)
(bad)
(bad)
call
inc
pop
lods
or
iret
push
xor
ins
shl
adc
(bad)
(bad)
(bad)
jmp
jecxz
shr
retf
jg
pop
in
mov
fcompp
cmp
les
xchg
mov
(bad)
(bad)
(bad)
dec
and
daa
loop
lods
inc
cld
lahf
mov
je
(bad)
cmp
hlt
sub
(bad)
(bad)
(bad)
push
ret
in
ret
in
mov
cdq
retf
stos
or
(bad)
orps
jbe
jns
(bad)
(bad)
(bad)
jmp
adc
inc
and
movs
loope
jae
xchg
(bad)
arpl
sbb
xor
adc
jp
inc
jbe
xor
(bad)
(bad)
inc
clc
jne
sbb
call
mov
inc
into
loopne
add
movs
gs
(bad)
(bad)
jmp
or
enter
(bad)
jg
xor
loop
xor
mov
pushf
cld
pop
push
scas
or
(bad)
(bad)
call
pop
int3
mov
daa
aas
test
std
fcom
pop
repz
out
inc
test
push
mov
call
xor
lods
cmps
sbb
jbe
retf
push
ss
xor
(bad)
(bad)
(bad)
(bad)
aas
out
into
mov
dec
inc
not
inc
mov
popa
lds
jb
and
cmps
push
test
jo
(bad)
(bad)
jmp
add
icebp
dec
push
jmp
push
mov
inc
out
add
jmp
bsr
icebp
jbe
sbb
cmp
inc
div
mov
cmps
jb
sbb
or
jmp
add
jg
jmp
pop
lahf
dec
mov
push
es
mul
push
pushf
push
(bad)
dec
pop
mov
jmp
sti
xor
int3
inc
mov
sub
mov
(bad)
(bad)
(bad)
call
in
movs
inc
mov
repnz
inc
dec
ins
cmovne
sub
push
(bad)
out
test
(bad)
(bad)
jmp
(bad)
(bad)
data16
and
inc
dec
cmp
outs
clc
mov
push
push
cli
push
loopne
pop
jo
jecxz
(bad)
fstp
(bad)
jnp
(bad)
jmp
out
dec
cs
inc
inc
inc
out
fadd
cmp
sti
jbe
or
jle
out
jo
imul
lahf
xor
push
popf
call
jge
jmp
call
push
inc
call
mov
push
cmp
sub
adc
pop
and
cmp
aam
test
add
lock
jmp
(bad)
(bad)
(bad)
fbld
into
jmp
mov
mov
mov
ins
xor
cmp
retf
outs
(bad)
(bad)
(bad)
push
in
push
or
mul
ret
mov
dec
cmp
pop
or
xchg
xor
popf
xor
stos
lds
cdq
mov
mov
shl
push
dec
push
fwait
add
dec
test
(bad)
(bad)
(bad)
mov
mov
and
push
dec
mov
rcl
mov
xchg
or
mov
(bad)
(bad)
(bad)
(bad)
fisttp
aam
xor
cmp
add
pop
retf
aam
pop
clc
pop
bound
add
sbb
mov
es
jl
and
mov
xor
daa
mov
lock
or
mov
mov
inc
(bad)
jmp
jmp
jae
add
sub
mov
add
retf
pop
mov
test
(bad)
(bad)
dec
jmp
rcr
push
ins
cld
pusha
xor
scas
pop
imul
dec
sbb
jmp
call
xchg
test
mov
cmp
das
mov
jbe
adc
test
or
mov
xchg
mov
mov
or
xchg
xchg
jbe
mov
mov
adc
jne
in
dec
cdq
in
scas
aas
test
in
push
retf
ret
fiadd
add
cld
xchg
and
xchg
in
dec
pusha
pushf
int3
inc
jmp
(bad)
(bad)
(bad)
call
call
(bad)
adc
add
(bad)
dec
mov
daa
je
stc
in
gs
xchg
or
(bad)
(bad)
jmp
xchg
jne
jae
inc
ins
ss
jle
ret
mov
xchg
movs
inc
mov
(bad)
(bad)
(bad)
push
dec
pop
jg
(bad)
stos
test
stc
adc
repz
add
lock
(bad)
mov
mov
push
(bad)
mov
dec
test
out
rol
jo
sahf
and
std
(bad)
(bad)
(bad)
call
shr
retf
ret
xor
inc
stos
retf
aam
mov
adc
test
retf
mov
jns
cmp
(bad)
(bad)
push
sbb
sbb
out
jl
scas
mov
dec
pop
and
mov
push
or
dec
inc
xchg
mov
(bad)
(bad)
xchg
jge
nop
push
sbb
xchg
add
jmp
jmp
test
cmps
add
popa
inc
cld
ja
mov
aam
mov
pushf
mov
(bad)
(bad)
(bad)
(bad)
fnsave
ss
clc
pop
iret
imul
xor
aaa
cmps
inc
adc
push
je
loopne
inc
repnz
es
ins
push
cdq
pushf
push
inc
add
push
xchg
mov
(bad)
aam
jmp
sub
out
pusha
mov
(bad)
(bad)
(bad)
fistp
jmp
retf
cmp
sbb
test
fadd
cmps
nop
mov
sbb
add
(bad)
(bad)
(bad)
call
inc
mov
lds
and
call
mov
lock
jp
fwait
(bad)
(bad)
(bad)
jmp
enter
(bad)
pushf
cmp
xor
mov
add
shl
(bad)
(bad)
(bad)
dec
push
ror
test
or
mov
mov
fisttp
ins
sub
push
(bad)
(bad)
(bad)
inc
fwait
shl
cld
xor
lods
inc
add
xchg
clc
mov
mov
popa
(bad)
mov
mov
adc
cmps
adc
cld
test
arpl
pop
xchg
addr16
(bad)
jmp
mov
imul
cmps
mov
or
mov
enter
pop
xor
mov
add
xchg
push
and
mov
jae
(bad)
ins
inc
imul
xor
push
lock
(bad)
(bad)
push
xor
sar
push
in
into
mov
mov
sub
add
fistp
jecxz
pop
or
sbb
push
add
xor
(bad)
(bad)
(bad)
jp
out
sbb
mov
or
add
loopne
call
add
rcl
das
(bad)
(bad)
push
int3
dec
ret
sub
mov
cmp
scas
or
push
fdivr
sahf
push
mov
or
(bad)
(bad)
dec
jae
xchg
push
cmp
sbb
mov
sbb
test
out
xor
(bad)
(bad)
call
jl
pop
cmp
(bad)
ja
(bad)
mov
leave
or
leave
fisttp
xlat
cli
(bad)
(bad)
dec
inc
and
call
loop
imul
fcom
inc
test
rcl
loop
fistp
stos
mov
and
sti
sub
(bad)
dec
adc
dec
mov
cld
xor
jbe
pop
jle
(bad)
(bad)
(bad)
call
stos
xor
sti
cwde
and
test
jns
in
mov
test
inc
call
(bad)
(bad)
inc
ins
pop
data16
adc
xchg
sar
cmp
pusha
jo
or
xchg
adc
mov
(bad)
dec
push
inc
cmp
mov
stc
dec
xchg
jge
lock
mov
push
arpl
and
xchg
(bad)
(bad)
(bad)
mov
jo
fcom
in
mov
into
cld
test
(bad)
int3
and
push
(bad)
(bad)
call
jno
mov
xchg
mov
mov
fstp
mov
sub
(bad)
(bad)
call
test
dec
sbb
enter
mov
ret
mov
jmp
mov
mov
ja
or
(bad)
pushf
jmp
outs
clc
ja
cmp
xor
call
(bad)
(bad)
jmp
jmp
mov
(bad)
push
add
call
test
(bad)
(bad)
(bad)
jmp
jp
outs
and
daa
sbb
push
pushf
shl
aam
mov
inc
(bad)
(bad)
(bad)
jmp
scas
xchg
mov
test
outs
mov
sbb
ret
sbb
push
retf
adc
(bad)
(bad)
(bad)
cmp
out
cmc
mov
call
xor
or
pop
mov
push
cmp
ja
call
repz
jg
cmp
push
hlt
sahf
stos
(bad)
jb
pusha
(bad)
(bad)
(bad)
inc
fisttp
jo
add
mov
xor
push
repnz
fs
or
sub
(bad)
(bad)
(bad)
out
and
fwait
scas
push
mov
pop
adc
aaa
and
repz
cld
and
xor
(bad)
(bad)
dec
scas
loop
das
or
jp
cdq
pop
(bad)
mov
arpl
andps
mov
jl
inc
out
pop
or
push
lahf
mov
mov
mov
sbb
inc
movnti
and
fst
pop
aam
and
lock
sar
cwde
popf
dec
push
or
inc
jecxz
jge
xchg
out
jne
cmp
mov
cmp
fdivr
sahf
dec
push
sbb
adc
ins
mov
jmp
in
aad
sub
and
pop
jp
jmp
(bad)
mov
fnstenv
pop
xlat
or
retf
mov
pop
mov
fistp
pop
call
(bad)
(bad)
(bad)
jns
mov
mov
jmp
adc
jp
dec
add
pop
popf
(bad)
mov
xor
stos
adc
daa
mov
sbb
bound
xchg
and
push
lock
inc
mov
jo
inc
fistp
fidivr
or
pop
cmc
ins
mov
das
sub
push
inc
test
push
daa
jnp
jge
pusha
mov
js
mov
jmp
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
mov
stos
test
mov
pusha
fndisi(8087
in
shl
stc
pop
mov
fwait
or
adc
(bad)
inc
ficom
jecxz
test
fsub
xchg
dec
add
mov
pop
and
(bad)
(bad)
inc
jnp
jg
fsubr
add
lock
sbb
dec
mov
call
jl
pushf
dec
(bad)
(bad)
(bad)
call
mov
pop
icebp
mov
mov
push
or
mov
push
adc
ret
fimul
out
cmp
adc
gs
nop
cs
xor
daa
adc
dec
cmp
sbb
popa
fs
(bad)
(bad)
(bad)
jmp
dec
or
retf
idiv
in
outs
mov
scas
and
test
test
(bad)
(bad)
inc
cmp
inc
inc
ja
xor
cmp
ds
movs
or
sub
mov
(bad)
aas
fsubr
jg
and
jno
mov
aas
cld
(bad)
mov
packsswb
pop
icebp
sti
sub
xchg
or
inc
xor
call
inc
(bad)
leave
inc
mov
sbb
ds
out
in
add
cdq
movs
mov
push
pop
add
xor
js
aas
pop
cs
not
pop
xor
push
and
lods
(bad)
pop
sub
mov
lea
(bad)
jg
jmp
hlt
(bad)
aad
stos
and
mov
push
jns
in
cdq
cmc
pop
(bad)
(bad)
(bad)
call
repnz
sbb
push
pop
cmp
shr
in
and
mov
sub
(bad)
(bad)
jmp
add
mov
xor
cmps
aas
test
push
mov
mov
mov
mov
(bad)
add
(bad)
push
aas
adc
jl
jle
inc
dec
test
push
and
dec
mov
int3
jae
fisttp
mov
leave
out
popf
add
adc
cmp
(bad)
(bad)
call
shl
hlt
inc
int
lods
bound
das
dec
movs
inc
cmps
shr
push
push
push
pushf
lock
(bad)
(bad)
(bad)
push
retf
hlt
test
xchg
aaa
jmp
retf
fst
cmp
sub
(bad)
(bad)
dec
(bad)
dec
dec
inc
call
jmp
pushf
enter
lock
sub
jecxz
or
(bad)
(bad)
dec
scas
dec
aaa
dec
ja
imul
jmp
dec
(bad)
rcr
cmps
pop
sbb
cmp
add
sub
fwait
(bad)
fcos
(bad)
(bad)
push
xor
mov
fimul
xor
pop
mov
mov
out
push
cmp
dec
jecxz
iret
cmp
aad
xor
ss
cmp
sub
loop
sbb
ins
aas
(bad)
(bad)
(bad)
call
(bad)
xlat
fcomp
call
xchg
mov
stc
ret
cmps
loopne
fld
and
(bad)
(bad)
call
cmp
outs
(bad)
adc
repnz
inc
lods
fcomi
push
enter
jbe
(bad)
(bad)
(bad)
jmp
fdivr
shl
pop
mov
aad
mov
mov
mov
(bad)
(bad)
(bad)
cmp
mov
das
rcl
add
add
pop
aaa
jo
ja
mov
cmps
mov
dec
in
loop
(bad)
(bad)
(bad)
inc
xchg
repz
adc
jne
xor
pushf
dec
mov
ret
mov
rcl
jo
cmp
(bad)
cld
fwait
jbe
es
xchg
rcl
xor
mov
sti
(bad)
pop
aaa
jb
jnp
call
stos
mov
(bad)
(bad)
call
or
xchg
cmp
jo
xchg
mov
lahf
xchg
xchg
cmp
push
jbe
adc
test
(bad)
(bad)
call
shr
ss
cmp
or
call
in
or
sti
and
and
cdq
(bad)
(bad)
push
cmp
mov
push
clc
sbb
lods
cmc
mov
popf
dec
data16
jl
js
mov
(bad)
(bad)
(bad)
jmp
jle
gs
sub
in
jb
dec
rcr
jne
movs
stc
jg
pop
dec
(bad)
(bad)
mov
outs
ret
xchg
sbb
mov
int3
lods
pop
push
pop
sbb
into
out
repnz
add
(bad)
(bad)
dec
bound
or
icebp
and
sbb
add
aad
repz
dec
je
sbb
sti
dec
dec
mov
iret
cli
aam
mov
xchg
sar
mov
sbb
adc
pop
mov
(bad)
(bad)
(bad)
jg
and
daa
sub
(bad)
out
test
pop
sar
push
retf
stos
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
xor
ja
or
pop
iret
int3
mov
dec
stos
pop
sar
push
gs
mov
es
mov
mov
popf
(bad)
dec
push
mov
retf
popf
dec
call
in
push
sub
jmp
sub
inc
loop
mov
enter
mov
cmps
call
fnstcw
cmps
movs
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fmulp
xchg
lds
sbb
movs
in
js
pop
or
mov
add
push
jbe
sbb
(bad)
jmp
xchg
add
sbb
cmp
cwde
inc
bound
out
pop
je
imul
inc
push
jnp
mov
push
sti
inc
ficom
mov
icebp
mov
jecxz
fld
(bad)
cs
(bad)
(bad)
cmp
xchg
addr16
int3
jl
mov
(bad)
stos
xor
cld
push
pop
sub
add
lahf
and
.byte
