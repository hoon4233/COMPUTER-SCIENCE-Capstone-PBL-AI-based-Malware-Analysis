les
add
add
add
add
add
add
add
add
add
push
and
add
add
sbb
add
xchg
pop
test
mov
add
add
add
add
sbb
out
js
outs
leave
xor
xor
stc
jp
stos
or
stos
push
xor
jl
jge
sahf
retf
(bad)
mov
sub
xchg
pop
(bad)
rcl
jae
data16
pop
xor
sub
(bad)
jnp
mov
repnz
cmp
jne
jl
(bad)
loopne
xchg
jmp
mov
sbb
(bad)
xchg
mov
in
adc
lock
cmps
cmp
pop
jae
mov
sbb
jmp
add
jo
es
mov
test
or
fild
fmul
mov
mov
shl
fidiv
push
or
push
leave
jmp
add
int
sub
(bad)
stos
pop
rep
inc
mov
cmp
add
or
js
inc
mov
push
dec
adc
mov
stc
cmp
adc
fidiv
push
cdq
div
jbe
les
jp
mov
sbb
fadd
pusha
retf
jl
mov
jmp
outs
mov
sahf
and
jg
push
cmp
rcl
lods
shl
push
dec
or
leave
sub
jmp
xor
jle
scas
pop
movs
sbb
cld
call
push
xchg
xor
push
ss
jns
xchg
jno
push
imul
adc
call
aaa
mov
mov
xchg
sti
mov
mov
push
mov
inc
scas
lahf
push
mov
sbb
push
call
std
sbb
or
ret
xor
out
leave
mov
xor
xlat
out
imul
push
add
aas
and
adc
repnz
fs
lods
leave
add
fucomi
mov
int3
jl
sbb
jae
mov
jns
and
das
cmps
mov
inc
or
sbb
mov
adc
mov
call
in
mov
in
ret
aaa
mov
jb
push
add
(bad)
leave
xor
push
fnstcw
mov
cmc
push
mov
jle
repnz
jne
push
test
iret
stc
add
fistp
xchg
rcl
pop
shl
xchg
push
fwait
inc
inc
adc
inc
test
mov
retf
add
xor
jl
jne
pop
dec
loop
ins
fnclex
dec
xor
repnz
mov
cmp
shr
cwde
jno
jmp
frstor
and
call
cmc
popf
adc
adc
adc
dec
sti
dec
adc
repz
outs
stos
repnz
jne
and
cmp
inc
mov
xchg
xchg
test
dec
mov
add
mov
push
push
pop
mov
add
in
in
ret
xor
lds
fisubr
fadd
sub
and
or
fwait
jl
imul
sti
jb
ret
mov
xor
cmp
pusha
mov
and
test
dec
std
mov
aam
aas
jo
pop
ror
adc
xor
lock
test
mov
retf
mov
inc
jae
shl
sbb
mov
bound
inc
push
mul
movs
fldcw
pop
sub
out
lea
xor
loop
fbld
pop
sub
cmps
in
scas
inc
cwde
retf
loopne
pop
addr16
shl
movs
popf
add
dec
add
lock
sbb
jnp
les
clc
test
mov
scas
shr
dec
sub
out
out
fwait
and
jge
cld
aam
stos
fsub
in
or
push
and
into
pop
out
es
fs
addr16
push
push
or
jb
cwde
sbb
jbe
jmp
in
test
jmp
mov
xor
add
pop
cld
adc
inc
fstp
and
pop
test
cmc
xchg
cdq
push
div
dec
or
jbe
mov
mov
retf
mov
mov
push
arpl
pop
pusha
cld
rcl
ins
in
mov
dec
and
mov
std
cmps
cli
pushf
(bad)
sar
push
jo
nop
mov
xchg
sbb
push
dec
ret
cmp
in
and
and
ins
lods
add
jg
xchg
push
mov
cmp
inc
mov
xchg
mov
mov
or
(bad)
jno
cdq
stos
aaa
cmp
ss
repz
or
sti
inc
inc
mov
mov
push
inc
sbb
imul
jno
out
nop
inc
test
jno
sbb
vandps
mov
(bad)
adc
loop
shl
pusha
out
and
fwait
mov
ins
mov
clc
arpl
push
js
shr
aas
xchg
add
jne
mov
sbb
(bad)
mov
retf
mov
stos
inc
cmp
test
mov
fadd
shl
outs
xor
(bad)
add
in
test
pop
js
sahf
loopne
scas
xor
xor
aad
and
sti
adc
gs
daa
cmp
dec
mov
and
mov
leave
cmp
bound
pop
or
cmc
adc
lds
call
or
mov
js
cmp
lock
push
aas
imul
pop
retf
add
clc
adc
push
cli
adc
or
stc
dec
pop
or
add
jb
movs
jge
rol
add
mov
adc
cmc
mov
sub
and
loopne
and
cmps
mov
ds
and
mov
mov
add
pusha
mov
aad
cmps
adc
mov
jecxz
cmp
xor
outs
les
or
mov
fs
push
cmps
out
pop
push
sub
iret
pop
and
inc
sbb
mov
outs
push
push
push
out
push
hlt
dec
fsub
xchg
popf
pop
mov
(bad)
xor
test
push
adc
popf
dec
icebp
dec
push
lock
xchg
hlt
int
cli
jmp
(bad)
movs
cdq
sbb
retf
jno
out
retf
mov
xor
daa
shl
je
dec
fldcw
inc
mov
lock
out
add
js
jecxz
jmp
gs
push
cmps
cmc
and
sub
mov
xchg
and
xor
cmp
push
aas
mov
mov
sbb
in
aam
add
pop
stos
mov
mul
pusha
xchg
dec
shl
(bad)
sbb
push
out
sbb
out
add
leave
add
jnp
fs
clc
(bad)
enter
dec
das
mov
frstor
add
fs
sub
test
push
cld
int
mov
pusha
jg
movs
sbb
lods
aad
mov
test
fadd
cmp
push
popf
sub
push
xlat
push
pop
ret
cmps
mov
dec
ficom
aad
fwait
js
cld
sub
jb
jae
jo
push
scas
inc
les
inc
dec
fldlg2
cmp
adc
ror
mov
mov
xchg
mov
scas
push
mov
cmp
mov
in
movs
test
sub
stos
add
pop
fcom
mov
in
jecxz
hlt
jno
bound
inc
sbb
cmp
cmps
cld
mov
push
cmc
neg
push
xchg
mov
dec
sti
ficomp
mov
cdq
cmp
mov
scas
hlt
xor
and
fisub
xchg
adc
fimul
push
add
mov
sub
into
jne
mov
push
ja
adc
pop
out
mov
pop
out
rol
fild
xor
shr
or
out
arpl
fisub
mov
inc
add
and
push
pop
xchg
dec
movs
pop
je
shl
scas
stos
jae
cmp
jo
lock
retf
sub
jge
mov
lods
xchg
or
sub
mov
ds
and
aam
mov
das
out
mov
sbb
jne
ror
cmp
inc
xchg
loope
retf
stos
push
out
retf
sub
int
mov
ss
jnp
shr
mov
fwait
(bad)
fwait
retf
nop
inc
mov
mov
cmps
idiv
imul
clc
jno
and
and
repz
in
test
cs
xchg
xchg
cmp
add
jg
fs
out
ins
mov
pop
ins
mov
jl
push
and
data16
fild
inc
push
mov
movs
adc
xor
data16
into
shl
loopne
xchg
sub
mov
aaa
xchg
pusha
fsubr
push
sbb
xchg
pop
(bad)
push
inc
mov
into
imul
inc
lods
sbb
sbb
les
mov
les
cdq
stos
int
jmp
aad
jne
jp
inc
rcr
stos
imul
stos
out
mov
adc
and
adc
ins
cmp
loop
outs
add
push
mov
jg
sbb
xor
pop
jns
sbb
outs
cmp
daa
shr
xor
ja
push
or
xor
cli
pushf
and
stos
pop
or
idiv
jns
adc
(bad)
out
jp
int
mov
sbb
mov
(bad)
cmp
jb
lahf
out
mov
mov
sbb
add
jg
xor
(bad)
adc
jno
sbb
add
jecxz
fldenv
pushf
inc
pushf
or
xchg
push
mov
or
pop
stc
movs
repnz
sti
jg
add
add
dec
cmp
sbb
sbb
scas
and
adc
dec
pop
sahf
pop
cli
mov
div
xor
jnp
call
or
pop
cmp
add
inc
fild
out
xchg
add
movs
inc
jp
xor
dec
lds
cmp
cmps
pop
loope
in
popf
cmps
mov
shl
test
mov
jo
aaa
fnop
mov
loope
mov
fbstp
adc
repz
fist
cwde
sub
lods
push
aad
add
in
mov
rcr
xor
xlat
jns
adc
mov
cs
leave
das
pop
aad
imul
ja
mov
shl
ret
lahf
jmp
rcr
xchg
jmp
cs
mov
movs
xchg
cmp
or
pop
push
sti
xor
int3
ja
push
ret
js
pushf
push
mov
(bad)
std
pop
jmp
lods
es
dec
rcl
fld
fnsetpm(287
cmc
fistp
jne
mov
loopne
add
xlat
sbb
jne
mov
shr
cli
out
xor
mov
or
or
(bad)
cmp
iret
sub
mov
jmp
push
loopne
div
fisubr
sbb
stc
retf
xchg
cs
test
movs
and
fadd
sub
mov
repnz
push
mov
stos
gs
jno
inc
movs
out
pop
mov
jg
mov
scas
dec
arpl
cmp
bnd
(bad)
movs
into
cli
sub
and
jb
mov
movs
popf
xlat
mov
loop
sbb
xor
popa
cmps
scas
xchg
pusha
pop
sti
leave
inc
jle
and
jp
icebp
ins
call
push
or
retf
mov
cmp
xor
dec
dec
xor
(bad)
hlt
mov
and
call
push
and
lds
rcl
add
popa
rcr
push
push
ret
and
repz
test
cmc
sub
mov
test
dec
xchg
popf
sar
dec
dec
popa
pop
call
ret
iret
test
mov
push
cwde
shr
inc
dec
test
not
xchg
pop
mov
push
outs
iret
cmp
mov
in
and
jl
icebp
mov
cdq
pop
add
mov
push
les
je
fist
shr
dec
or
jg
scas
out
imul
aam
iret
arpl
xchg
mov
push
mov
in
ret
shl
in
sub
pop
add
lds
fwait
xor
clc
or
sub
std
loopne
xor
sbb
cmps
ins
inc
mov
jnp
sub
jp
outs
sbb
pop
popa
outs
pop
stos
mov
retf
in
rol
add
adc
shl
(bad)
or
test
int3
cs
sub
push
jno
rol
pop
outs
mov
lock
aas
xchg
add
imul
movs
jmp
clc
stos
add
inc
loope
jbe
call
loope
cmp
xchg
pop
je
aaa
daa
mov
ret
xor
jp
daa
cmp
lods
and
xor
add
mov
pop
mov
out
fidiv
fisub
out
out
or
add
add
vmwrite
pop
(bad)
jge
adc
or
pshufw
fist
fistp
mov
or
jg
ds
pusha
outs
mov
cdq
inc
or
ins
mov
or
dec
push
jmp
jecxz
dec
nop
je
out
mov
mov
push
jg
mov
call
cmp
push
push
sub
jmp
fldcw
pushf
or
cmp
xchg
mov
call
mov
std
pop
(bad)
xchg
and
into
(bad)
mov
mov
push
lea
in
add
jp
xor
pop
outs
call
push
imul
mov
icebp
call
sub
pop
mov
cs
add
int
jae
fcomp
or
mov
fbstp
ret
sbb
add
int
leave
rcr
dec
sbb
jae
and
push
ficom
ret
dec
dec
sbb
(bad)
or
test
sbb
xchg
test
xchg
jnp
loop
cmp
retf
movs
pop
int
lea
pop
pop
test
(bad)
mov
in
adc
sar
inc
add
ficom
es
adc
out
and
pop
mov
mov
xchg
ds
sub
and
out
(bad)
adc
pmulhuw
mov
dec
iret
push
aaa
sbb
ret
aam
popf
stos
mov
movs
sbb
test
and
or
outs
pop
imul
dec
sub
push
out
xor
mov
dec
dec
outs
cmp
(bad)
das
mov
add
cmc
leave
std
mov
add
fwait
push
xchg
mov
jecxz
outs
test
push
js
cmp
sub
mov
pop
push
and
xchg
int
popf
pop
imul
mov
jno
or
sbb
sub
test
cdq
sbb
pop
pusha
je
and
mov
jo
dec
(bad)
fisttp
dec
xor
cmps
pop
inc
add
popa
sub
rcr
frstor
ret
outs
mov
xchg
adc
(bad)
xor
inc
enter
lods
bound
enter
outs
test
(bad)
lahf
test
dec
leave
and
addr16
mov
xchg
push
or
(bad)
gs
mov
and
xchg
daa
jae
xlat
jnp
inc
aaa
xchg
jnp
movs
adc
mov
pop
test
sbb
aas
pop
jle
pop
mov
mov
lea
cli
dec
xor
pop
jp
and
push
fisttp
shl
and
or
cmp
cmp
cmp
xchg
or
push
cmp
sub
inc
mov
mov
push
and
sahf
ds
mov
dec
and
(bad)
add
repz
fsin
ret
add
sub
xchg
xchg
xor
inc
arpl
std
lods
or
jo
add
cmp
outs
in
scas
xor
xchg
js
or
es
les
les
std
in
xor
in
shl
jmp
movs
dec
rol
mov
mov
(bad)
and
scas
stc
fucomp
mov
repz
sub
mov
shl
push
jmp
adc
jmp
xor
imul
xlat
jne
jmp
cmps
push
das
movs
xor
cwde
in
ret
xlat
popa
push
dec
pop
mov
cmp
mov
sbb
jne
push
rol
scas
inc
ins
mov
push
int
aam
jae
push
push
cmps
ins
jle
sti
cmp
in
stc
sbb
clc
mov
push
outs
fst
push
inc
repz
mov
enter
inc
ss
xchg
push
mov
cmp
inc
cdq
jge
and
cmp
push
aad
sub
add
mov
outs
cmp
les
or
dec
pop
push
add
xchg
ins
aas
retf
sahf
lea
pop
(bad)
(bad)
pop
or
(bad)
rcl
(bad)
retf
xor
movs
inc
jbe
movs
cmc
dec
or
mov
in
sahf
mov
das
cmps
inc
inc
std
fld
and
mov
cwde
jecxz
xchg
pmuludq
bound
lahf
xchg
sub
xchg
mov
pop
icebp
(bad)
lods
mov
rol
jbe
ret
fild
adc
aas
scas
lods
adc
fbstp
pop
inc
mov
jg
(bad)
adc
(bad)
bound
in
or
ror
inc
int
adc
test
mov
and
mov
ins
ret
inc
cmp
sbb
push
setg
fild
jp
mov
fsubrp
mov
and
xor
sub
mov
icebp
out
test
xchg
es
test
jb
loop
mov
mov
popf
lahf
repz
sbb
mov
mov
or
fstp
bound
test
rcl
mov
and
xchg
push
ins
pop
sbb
shl
jmp
mov
and
pop
addr16
pop
add
out
sahf
add
mov
cmps
add
into
pop
xchg
dec
ja
sub
popf
inc
cmp
adc
xor
mov
sbb
ja
sbb
mov
test
mov
ret
fneni(8087
ret
out
pop
leave
mov
mov
cmp
mov
mov
push
fwait
mov
mov
push
outs
shl
adc
add
jmp
dec
dec
mov
sub
lea
aam
and
pop
es
test
dec
sub
arpl
jp
mov
xchg
cmps
push
jmp
and
mov
push
push
xor
inc
gs
mov
pop
xlat
imul
add
sub
jbe
fdivr
or
xor
push
jl
das
add
adc
sub
dec
shl
int
dec
push
lea
push
add
lods
clc
int3
shl
inc
sahf
movsx
les
outs
bound
cmc
imul
add
(bad)
lock
fild
sub
fnstenv
pop
hlt
addr16
mov
inc
imul
add
ret
gs
jae
sbb
mov
xor
mov
stos
imul
cmp
jnp
jbe
ja
mov
or
pop
fs
ret
jns
jno
push
js
nop
mov
fwait
clc
enter
sub
nop
cmp
leave
push
iret
sub
sbb
mov
cmp
or
cwde
das
in
and
es
int
cmp
jg
test
or
add
mov
in
mov
inc
dec
add
stc
fcom
xor
jb
pop
mov
pushf
jmp
test
push
cmps
push
ja
pop
push
loope
fdivr
inc
jg
dec
mov
xchg
mov
ret
cld
inc
inc
enter
test
test
aad
pop
push
adc
cmp
add
jmp
xchg
cmp
inc
shl
push
sbb
jl
lea
sub
scas
sbb
xchg
adc
jg
or
pop
xchg
cmp
scas
xor
(bad)
imul
ins
in
mov
sbb
mov
retf
pop
jmp
push
jns
(bad)
pusha
jmp
loopne
repnz
or
or
outs
pop
fcom
xchg
xchg
jp
jp
sbb
sub
pop
mov
loopne
arpl
rcl
fcomp
fadd
scas
mov
retf
aad
(bad)
ins
and
or
inc
icebp
retf
fiadd
cmp
mov
mov
pop
ins
ins
inc
mov
mov
mov
mov
adc
cmp
jo
jp
xchg
or
pop
jmp
mov
stc
push
mov
mov
xor
ret
sbb
push
outs
dec
sti
inc
and
mov
leave
push
daa
push
mov
inc
sbb
cwde
cmps
jne
dec
push
mov
(bad)
stos
and
sbb
push
adc
xor
ss
pop
sbb
push
ficom
mov
inc
idiv
push
mov
add
sar
pop
mov
dec
in
jmp
loop
push
(bad)
bound
jg
imul
xlat
mov
push
or
stos
scas
rcr
sub
or
lods
into
(bad)
repnz
cmp
mov
sbb
or
pop
dec
dec
and
add
xchg
sub
sbb
push
jb
jl
ins
sbb
call
sbb
mov
test
xor
shl
xchg
xor
les
inc
mov
popa
jmp
(bad)
loope
out
and
test
imul
mov
clc
stc
pop
mov
stc
xchg
mov
jne
add
mov
mov
es
iret
(bad)
cmp
test
xchg
lods
xor
mov
cld
xor
pop
es
dec
push
mov
aaa
xchg
adc
sbb
leave
test
mov
das
jp
(bad)
sbb
add
xchg
cmp
shl
and
(bad)
dec
mov
pop
das
pop
pop
push
or
clc
int3
or
sub
push
push
mov
leave
jno
scas
aad
stos
popf
xor
adc
aaa
clc
sub
test
scas
daa
push
mov
imul
sbb
outs
mov
aaa
add
mov
sbb
dec
es
push
mov
dec
xor
dec
pop
leave
sub
adc
jp
inc
fs
sbb
cmp
and
mov
cmp
popf
hlt
call
mov
fimul
add
addr16
add
sub
daa
js
cmps
xor
dec
push
cmp
cmp
jae
bound
jg
mov
hlt
cmp
pop
inc
retf
sar
aad
push
loop
sub
ftst
ret
jnp
test
and
mov
mov
xchg
scas
int3
ret
nop
sar
dec
jmp
mov
pusha
inc
pop
inc
retf
movs
jb
dec
iret
xor
aad
mov
and
lods
nop
adc
popa
lock
xchg
stc
sar
mov
dec
cmc
movs
inc
add
mov
in
int
pop
inc
adc
pop
mov
mov
mov
dec
dec
enter
add
call
iret
dec
lods
ror
bound
sub
cmps
xor
loopne
loop
push
rol
aad
gs
jbe
sub
jmp
xchg
test
jo
aaa
push
sub
jmp
mov
xlat
cmp
je
sbb
or
adc
adc
lods
xchg
mov
shl
or
daa
add
mov
aas
xor
cwde
jl
add
retf
adc
shl
xchg
pop
add
and
and
vmread
ds
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
jg
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
ins
popa
addr16
imul
popa
ins
gs
and
jae
gs
cs
imul
inc
outs
jb
jae
and
jb
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
inc
push
inc
inc
push
push
retf
dec
adc
fwait
call
fldcw
(bad)
in
push
shr
dec
(bad)
stc
or
add
mov
mov
mov
fst
inc
pop
cmp
inc
aam
loop
cmps
(bad)
push
fnstcw
data16
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
jp
add
je
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
jae
add
arpl
outs
add
add
add
ds
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
outs
add
jb
jb
outs
add
dec
add
popa
add
gs
test
jne
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
ins
add
inc
add
je
je
outs
add
dec
add
popa
add
add
inc
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
ins
add
inc
add
je
je
outs
add
push
add
popa
add
dec
add
popa
add
gs
sti
add
inc
inc
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
ins
add
dec
add
add
add
dec
add
popa
add
add
std
add
cmp
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
ins
add
push
add
jo
dec
add
popa
add
add
inc
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
add
ins
add
push
add
jo
push
add
popa
add
dec
add
popa
add
gs
add
add
inc
add
jae
je
outs
add
push
add
jb
outs
add
add
popa
add
xor
add
jo
inc
add
jb
outs
add
dec
add
popa
add
add
add
add
dec
add
popa
add
add
add
je
push
add
bound
jae
add
ins
add
add
push
add
add
popa
add
sti
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
adc
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
sbb
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
add
push
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
daa
add
pusha
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
add
pusha
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
xor
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
imul
add
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
fcomi
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
mov
add
and
add
add
add
fadd
add
sbb
add
add
add
call
add
add
and
push
repnz
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
mov
dec
inc
inc
push
js
in
mov
jne
jp
lods
mov
imul
adc
add
fild
mov
xchg
(bad)
into
ds
cmp
out
in
cdq
dec
pop
data16
fwait
mov
xor
mov
mov
test
or
stos
jnp
stc
lahf
out
cmp
fisubr
cmc
sub
adc
pop
jne
push
aad
mov
push
xor
pusha
leave
pop
in
das
shl
or
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
lea
imul
scas
jmp
scas
push
stos
sub
iret
aad
cmp
fwait
jo
mov
jne
push
lods
push
pop
bound
fs
mov
pop
in
out
fsub
(bad)
sub
xchg
pop
pop
mov
in
in
sahf
out
dec
(bad)
and
out
enter
aam
cmp
fbstp
mov
dec
dec
jnp
push
repz
scas
lock
mov
sbb
(bad)
mov
(bad)
jmp
add
xor
xor
jno
ins
cmps
and
jge
aas
data16
xchg
add
sbb
inc
jl
add
pop
jbe
dec
xor
rol
test
mov
cs
ins
rcr
cmps
add
loop
repz
sbb
shl
js
(bad)
cmp
in
push
lods
push
or
jle
(bad)
iret
mov
inc
mov
fcom
mov
push
ror
clc
pop
stos
push
jl
stos
xchg
jmp
jb
cld
leave
icebp
jl
adc
push
es
sbb
dec
imul
pop
push
scas
aad
fwait
aad
call
imul
mov
push
mov
cmps
call
cmp
jecxz
(bad)
pop
cmp
out
xor
jo
sbb
(bad)
out
and
rol
add
or
movs
pop
xchg
dec
jmp
xor
xor
mov
xlat
mov
add
(bad)
aad
mov
inc
movs
dec
xchg
inc
xchg
and
pop
pop
or
dec
aas
cmp
inc
jecxz
jecxz
mov
popa
js
jb
xor
sbb
je
cmp
fdivr
jmp
dec
xchg
std
xor
leave
js
int
xchg
test
repz
in
jle
loope
jbe
jp
dec
jge
scas
push
xchg
out
dec
add
psubsb
fs
sti
cli
cli
fimul
cmps
int3
out
push
sub
cmc
pop
test
popf
inc
inc
inc
imul
ds
xchg
pop
jge
retf
xor
add
add
icebp
xor
sub
add
or
pushf
add
mov
cmp
push
xchg
repz
stc
daa
or
lahf
lods
jp
push
xchg
imul
fst
add
popa
pop
mov
fstp
pop
pop
out
outs
outs
outs
jg
cwde
jl
in
mov
cs
sub
xor
add
add
enter
jecxz
(bad)
nop
mov
inc
mov
jns
push
and
in
arpl
jne
add
lods
test
fs
add
(bad)
sub
lahf
mov
and
push
sub
cmp
cmp
mov
xlat
mov
push
push
adc
into
inc
fidiv
imul
sub
icebp
jno
in
xlat
ficom
and
pop
out
cmps
xchg
mov
loopne
add
pop
cmps
add
clts
(bad)
xchg
imul
das
shl
add
mov
push
out
jno
rcl
sbb
jne
es
push
imul
nop
dec
push
data16
xchg
jge
dec
in
in
stc
retf
xchg
xlat
mov
cmps
push
adc
into
adc
call
cs
aad
push
pop
stc
imul
cli
mov
inc
inc
pusha
retf
xor
sti
push
pushf
jo
arpl
xor
jbe
sub
push
xchg
js
fnsave
sub
mov
jle
or
add
adc
add
aam
aam
pop
movs
pop
popf
shl
sub
adc
push
adc
aas
fwait
int
sbb
inc
jnp
pop
xor
xor
stc
js
mov
and
sbb
loopne
sbb
sbb
add
inc
pop
sbb
push
push
cdq
in
jne
sar
push
adc
push
cdq
cmp
cmp
pop
mov
pop
mov
push
dec
ja
dec
shl
mov
out
loopne
mov
lock
retf
xor
inc
out
jmp
jecxz
shr
rcr
lahf
or
cli
mov
add
adc
repnz
pushf
loopne
loop
hlt
dec
cs
cmp
jmp
push
mov
movs
test
nop
das
jl
mov
iret
lahf
call
pop
dec
popf
call
(bad)
fcmovnu
repz
cmp
mov
ja
dec
cmps
test
fisubr
push
std
jecxz
(bad)
rcr
(bad)
std
mov
sub
add
mov
mov
xor
sub
(bad)
(bad)
pop
sbb
add
sub
pop
mov
int3
or
mov
jnp
and
mov
mov
push
repnz
arpl
pop
push
xchg
lds
or
aam
fnstcw
btc
pop
xor
(bad)
aam
fcmove
dec
rol
push
sti
lahf
fdivr
aaa
xor
or
test
js
xor
jle
repz
push
add
leave
sbb
mov
push
xchg
mov
push
mov
inc
int3
(bad)
jbe
mov
mov
xchg
test
cmp
movs
push
stc
push
fwait
cmp
pusha
ins
out
lds
or
aam
shl
mov
fnstenv
test
mov
ss
sub
call
movs
pop
push
ficomp
addr16
icebp
and
xlat
(bad)
jmp
lods
ins
xchg
int
lds
punpckldq
adc
pop
inc
jecxz
jae
add
stos
xchg
sub
ret
scas
ret
imul
shr
fdivr
and
test
inc
push
mov
call
pop
sub
jmp
mov
addr16
sar
xchg
mov
(bad)
pop
fcomp
popf
dec
fcomp
push
inc
les
(bad)
or
pop
jb
loope
jo
add
dec
pop
and
pop
add
and
icebp
sahf
push
cmp
mov
loop
and
jecxz
xor
sbb
imul
ds
call
(bad)
dec
aad
in
sbb
inc
std
ins
dec
xor
pop
jl
popf
popf
popf
add
pop
jle
dec
add
movs
push
mov
sub
jmp
add
cwde
daa
retf
xlat
ja
jne
or
(bad)
xchg
js
inc
dec
fild
jmp
and
imul
dec
mov
gs
or
gs
hlt
aad
dec
sbb
jne
scas
add
shl
int3
xchg
rcr
jge
adc
adc
gs
ja
mov
clc
aaa
jne
mov
mov
add
pop
sub
bound
call
mov
add
pop
es
mov
in
mov
push
aad
push
cwde
and
ss
loop
stos
test
xchg
push
xor
dec
fs
jne
push
dec
imul
nop
clc
xchg
frstor
add
dec
jmp
bound
cmp
stos
adc
inc
adc
sbb
bound
push
out
es
int3
(bad)
stc
clc
clc
clc
mov
jnp
pop
or
add
mov
lods
lods
lods
outs
addr16
cld
(bad)
stc
jbe
cwde
mov
cwde
test
cmp
(bad)
pop
jg
or
aas
jns
js
icebp
call
add
mov
mov
mov
ins
cld
jmp
or
xor
cmps
and
sbb
jbe
repnz
mov
xlat
cld
mov
pop
mov
or
fst
push
imul
dec
jno
and
jl
push
es
mov
xor
xor
inc
mov
sub
std
iret
push
push
rcr
jnp
jnp
in
loopne
adc
les
movs
xor
aad
jmp
jecxz
fldlg2
pusha
cld
shl
sbb
sbb
ficomp
mov
out
xor
xor
in
fs
test
push
popa
adc
xchg
call
ds
xchg
push
sar
cmp
mov
mov
clc
dec
dec
iret
das
xor
into
dec
in
xchg
xchg
enter
cdq
add
sub
fimul
or
rcr
add
xchg
or
das
push
or
repnz
into
lock
sbb
add
pop
cmp
repnz
cld
mov
(bad)
push
jl
xor
xchg
adc
mov
xor
aas
bound
and
sti
cli
cli
inc
or
mov
aaa
xor
repz
retf
or
sahf
xor
cld
cs
adc
and
imul
sbb
js
loop
xchg
aam
push
pop
pushf
sahf
mov
inc
pop
xchg
cmp
data16
xchg
adc
jle
pop
sub
adc
int
inc
mov
jno
push
rcr
mov
idiv
cdq
ins
mov
mov
adc
retf
mov
sub
scas
push
xchg
outs
test
mov
test
mov
mov
and
xor
lahf
dec
retf
jecxz
idiv
ins
adc
xor
jo
add
xchg
inc
retf
call
sti
and
mov
xor
stc
push
dec
jp
and
mov
or
shl
(bad)
das
jg
lahf
pop
imul
inc
lods
sub
jp
stos
cli
mov
lds
mov
pop
dec
xor
test
fst
adc
jg
repnz
(bad)
mov
push
out
in
addr16
mov
repnz
cld
add
outs
cmp
data16
in
add
push
sbb
movs
ss
sub
dec
jmp
xchg
repnz
inc
dec
call
test
cmp
pop
sub
retf
cmps
jae
call
sbb
adc
cmp
mov
cdq
mov
les
mov
dec
movs
xchg
xor
add
push
pop
or
adc
push
push
pop
sbb
cmps
lahf
into
scas
lahf
retf
fwait
(bad)
rol
cmp
es
ins
shl
or
mov
lods
inc
jl
cs
jno
stos
in
push
pop
cmp
add
lock
add
xchg
leave
xor
inc
push
rcr
ss
pop
xor
es
add
fcmovnu
leave
out
sti
dec
lods
out
test
in
std
jne
push
adc
mov
dec
es
(bad)
js
stc
push
ficom
xchg
inc
(bad)
sbb
cmp
or
or
jp
jnp
cmc
repnz
rcl
and
xor
adc
ss
notrack
mov
rcl
push
fstp
jae
push
xchg
push
dec
cs
add
pop
neg
pusha
sub
jno
jge
leave
ds
adc
xchg
dec
and
fild
bound
lds
mov
lea
fimul
imul
pop
leave
or
es
fwait
jo
rcr
push
test
mov
xor
cmps
out
mov
cli
in
imul
jns
xlat
fst
shl
imul
cmp
push
adc
mov
jmp
data16
mov
mov
call
jle
add
icebp
vmovntdq
pop
or
add
mov
mul
stos
add
scas
xchg
or
dec
pushf
xchg
push
dec
or
dec
dec
aam
push
scas
pop
lock
aad
xchg
jmp
pop
iret
and
nop
in
mov
dec
fmul
mov
lds
stos
dec
push
dec
mov
or
fbstp
mov
retf
sar
push
sub
mov
enter
or
xchg
or
add
push
daa
loopne
add
repz
xchg
loop
(bad)
and
pop
jmp
mov
(bad)
(bad)
fcom
fisttp
ret
mov
sub
and
pop
test
jge
hlt
repz
mov
clc
mov
ja
push
cli
sti
test
jns
dec
pop
xor
fs
fisttp
int3
clc
into
jp
inc
popf
mov
stos
cmp
mov
jne
dec
and
or
mov
and
push
adc
pop
mov
into
add
iret
(bad)
hlt
xor
pop
sbb
xor
cli
es
shl
into
(bad)
(bad)
aas
(bad)
fiadd
cmps
mov
jno
xlat
bound
xchg
pop
pop
dec
cmp
shr
sar
adc
clc
jp
ss
imul
pop
mov
in
leave
stc
fadd
add
sahf
cld
cmp
or
mov
push
sbb
test
clc
or
adc
js
outs
ins
dec
ins
cwde
rol
pop
mov
mov
push
(bad)
lahf
into
jae
xchg
lods
aas
xchg
add
dec
and
dec
mov
mov
add
ret
adc
dec
push
stos
loop
fs
pop
fldln2
in
fsubr
(bad)
add
add
mov
dec
sub
jge
push
mov
lods
sbb
push
movs
pop
stc
jmp
mov
mov
shl
mov
int3
loopne
icebp
or
sub
cdq
gs
mov
test
jl
pushf
adc
mov
sbb
fldcw
sbb
aad
lahf
mov
add
out
and
je
(bad)
mov
push
hlt
dec
test
inc
mul
popa
dec
push
xor
jmp
jecxz
xor
cmp
xchg
clc
or
int3
dec
adc
daa
jae
clc
mov
(bad)
xor
aas
jbe
jbe
loop
imul
pop
fucomp
dec
cmps
push
pop
popa
push
(bad)
fild
shl
mov
and
mov
xchg
call
and
dec
dec
mov
or
pop
sub
jl
jp
add
mov
pop
aaa
pop
iret
jmp
mov
xchg
test
hlt
pop
shl
out
mov
loopne
cmc
call
or
push
sbb
push
dec
dec
fimul
inc
mov
inc
repnz
adc
add
sub
lods
cli
out
jp
sbb
cmc
clc
xor
sub
mov
in
cmp
jecxz
aaa
push
cmp
lock
push
pop
test
imul
fnstsw
mov
pushf
xchg
inc
cmp
leave
add
jp
ins
cwde
jle
mov
fld
rcl
dec
or
mov
arpl
mov
ins
dec
cmps
push
sbb
or
and
cmps
popf
and
mov
int3
mov
loop
lock
mov
ins
pop
pushf
pop
jae
nop
retf
in
bound
aam
and
test
popa
inc
sub
das
cdq
or
in
jae
dec
or
xchg
clc
call
jmp
or
lahf
mov
and
cli
js
sbb
jmp
pop
cmp
aam
cdq
ficom
gs
loopne
xchg
inc
and
sub
ins
scas
mov
xor
add
jmp
daa
mov
adc
out
dec
add
add
sub
push
xchg
pop
xor
rcl
fnstenv
(bad)
aaa
dec
(bad)
mov
arpl
imul
inc
gs
adc
or
clc
enter
outs
shl
cmps
push
push
aas
stos
into
iret
fs
dec
(bad)
adc
adc
mov
mov
push
mov
sbb
push
jns
push
mov
test
fild
(bad)
rep
data16
sub
sub
(bad)
fimul
aad
fiadd
add
idiv
popf
jmp
stc
outs
xchg
mov
scas
cdq
popa
cwde
mov
gs
paddsw
mov
dec
ins
xchg
sar
ret
xchg
xchg
mov
mov
fist
out
fwait
lods
mov
mov
xor
out
jbe
shl
fs
jmp
mov
stc
push
jmp
inc
int
adc
add
pop
es
push
aam
dec
and
aaa
push
xor
or
lods
add
(bad)
aad
lods
xor
dec
mov
xchg
pop
sub
mov
add
imul
pop
fistp
mov
and
movs
pop
rep
rol
add
pop
(bad)
or
(bad)
adc
enter
sar
loop
cs
push
pop
mov
push
pop
movs
mov
add
mov
shr
xchg
xor
cdq
add
mov
stc
inc
pop
add
pop
not
push
sbb
cli
and
mov
pop
jmp
xchg
mov
sub
(bad)
xchg
out
mov
popf
and
inc
pop
inc
pop
jnp
xchg
std
in
cmp
sub
adc
movs
loop
repz
xor
push
push
test
icebp
add
scas
inc
aad
sub
dec
xchg
pop
inc
sbb
outs
adc
pop
jns
cwde
enter
lahf
dec
pop
out
ins
in
(bad)
jmp
mov
add
push
fistp
pop
cmp
sbb
cmps
repz
sbb
rcr
shl
ss
aam
sbb
add
mov
rcr
dec
ret
mov
repz
jae
jl
xor
(bad)
push
not
(bad)
lahf
push
push
in
enter
inc
pop
outs
outs
outs
xor
js
(bad)
jmp
push
imul
xchg
push
cwde
call
push
sbb
xor
jae
cmps
jmp
jg
xor
out
scas
movs
cmc
jmp
dec
sbb
sub
dec
xlat
push
sub
je
inc
hlt
mov
dec
add
pop
inc
inc
imul
mov
aad
ret
xchg
pop
sbb
inc
or
or
les
pusha
pop
pop
leave
pushf
inc
jno
jp
mov
dec
push
dec
in
out
cld
fnstsw
pop
loopne
dec
out
add
mov
in
adc
adc
lock
mov
shl
lods
push
pop
aam
mov
scas
mov
mov
inc
mov
and
sub
xor
loopne
add
arpl
gs
test
cmp
adc
in
(bad)
cmp
outs
sbb
or
shl
xchg
push
loopne
add
cmp
dec
mov
mov
push
test
(bad)
cmp
sar
or
jge
jge
lods
mov
movzx
jg
push
(bad)
out
pusha
inc
adc
jp
and
push
xchg
jl
or
test
pop
popf
imul
and
jle
mov
xchg
cs
jb
hlt
cld
addr16
add
adc
sti
inc
add
cmp
stc
stos
ror
adc
int
in
into
mov
sbb
mov
call
lock
pop
in
mov
out
add
in
rcl
(bad)
lahf
xchg
test
push
mov
sbb
sbb
fidiv
rcr
add
sbb
xor
fdivr
rol
das
pop
mov
ja
pop
outs
inc
cdq
adc
fwait
mov
cmps
repnz
push
adc
lahf
mov
mov
repz
add
or
jmp
push
and
sahf
dec
cdq
(bad)
mov
sbb
push
cmps
mov
push
jmp
fistp
cmp
and
neg
(bad)
mov
mov
xor
inc
cmps
sahf
xor
fs
or
stc
and
nop
inc
data16
mov
cmc
mov
loope
sbb
ja
dec
rcr
mov
nop
add
pop
or
(bad)
out
xor
cmp
and
jg
(bad)
cmp
push
int
rol
dec
shl
popa
xchg
pop
fld
jle
call
faddp
out
mov
add
ja
(bad)
push
xchg
push
(bad)
out
jnp
mov
xor
jns
mov
test
ja
inc
lods
movs
in
inc
sbb
mov
and
int
xor
mov
adc
(bad)
cs
mov
addr16
int3
xor
cmp
enter
jmp
cmc
jge
or
pushf
(bad)
iret
add
dec
inc
shr
mov
and
mov
lds
repz
and
leave
mov
sub
or
jns
out
jmp
mul
pusha
jg
es
xchg
retf
jl
mov
fdiv
les
xchg
shl
mov
ror
xchg
rcr
pusha
xor
xor
cwde
hlt
test
dec
lds
jmp
mov
xlat
push
push
or
mov
sti
fst
int
sbb
adc
sbb
sahf
push
add
cmp
mov
xchg
pop
dec
add
xlat
out
add
mov
out
dec
inc
xchg
addr16
xchg
mov
add
add
add
xchg
dec
push
stos
mov
out
or
inc
add
(bad)
cdq
jg
xchg
in
fnsave
pop
mov
retf
push
xchg
out
jo
imul
dec
(bad)
aas
(bad)
cmp
mov
aad
leave
mov
mov
mov
pop
mov
cmp
mov
mov
jle
stos
jbe
iret
pusha
ss
cmp
es
shl
aas
sbb
int3
xchg
hlt
lahf
jmp
inc
add
mov
xor
pushf
sub
pop
adc
and
int
add
fidiv
das
mov
scas
push
cmp
and
movs
aaa
xor
aas
jmp
cmp
mov
or
jg
cdq
ja
stc
mov
ret
ins
fbld
pushf
push
test
jp
cli
hlt
in
mov
call
imul
ja
ret
pop
jbe
gs
neg
lds
(bad)
leave
cmp
sbb
sbb
leave
xor
and
pusha
mov
dec
pop
add
mov
lods
or
jl
ret
fld
add
jg
xchg
xor
movs
jbe
xor
or
cs
(bad)
das
fdiv
inc
ins
fcmovbe
cwde
pop
rol
test
sub
push
scas
xlat
fidiv
pop
jo
pusha
cmc
out
jl
sub
loop
ja
jno
pop
aam
dec
imul
fst
jg
dec
push
cwde
adc
ror
or
xchg
jbe
div
mov
out
fwait
inc
shl
sub
dec
(bad)
and
pop
mov
jge
jge
mov
cmp
popa
ss
push
inc
add
add
sbb
or
add
dec
xchg
adc
imul
push
cmp
lods
xor
sub
(bad)
rol
add
ja
loopne
mov
stc
out
and
xor
adc
cld
addr16
jnp
xor
cmp
mov
cmp
(bad)
sbb
lahf
add
fprem
push
sbb
dec
or
cdq
jnp
ins
ret
jmp
ss
lods
jle
shl
in
cmp
mov
and
mov
add
rcl
push
or
push
stos
enter
fisub
or
iret
add
add
div
mov
push
fisub
xchg
out
js
fwait
enter
xchg
popa
(bad)
call
ret
push
jge
push
mov
push
fbstp
je
popf
ja
jp
xor
sti
shl
xor
jecxz
shl
jae
fsub
add
inc
repnz
jne
hlt
call
rol
shr
and
add
and
ins
test
fnstenv
xchg
test
mov
and
out
je
pop
leave
inc
out
lock
pop
fs
mov
add
mov
ds
jg
cmp
mov
push
sar
dec
jle
push
xor
movs
out
add
xchg
jmp
jge
push
xor
mov
ror
scas
shl
push
add
stc
rcl
ins
push
cld
mov
push
inc
push
es
dec
fbstp
mov
add
xlat
call
inc
cwde
mov
sub
pushf
xchg
adc
pause
jmp
fimul
add
pop
push
sub
lods
dec
sub
fcmovnb
imul
add
fbld
dec
mov
sahf
scas
fidivr
cmc
xchg
push
pop
test
enter
movs
fnstcw
sti
inc
cmp
cld
jmp
in
ret
jmp
mov
cmp
pop
pop
add
shl
adc
xlat
jecxz
jp
gs
add
loopne
jl
push
sar
cmp
js
stos
add
add
lods
push
push
(bad)
mov
dec
mov
adc
lods
cmp
out
shl
cli
fimul
cmp
xor
and
jne
or
lock
dec
imul
sub
retf
add
fst
push
inc
mov
push
pusha
ins
push
outs
es
retf
arpl
shl
std
mov
pop
or
and
pop
mov
xor
(bad)
(bad)
inc
sub
sub
xchg
les
addr16
lods
std
(bad)
pop
cmps
xor
cmps
(bad)
jmp
sbb
std
cmc
jl
jb
mov
xor
sub
out
(bad)
jne
cmps
mov
cmps
bound
fdiv
xchg
stc
out
ins
leave
add
or
mov
mov
inc
jl
cmp
(bad)
sbb
cmps
push
cli
fidiv
pop
cwde
sbb
add
imul
test
mul
cdq
fsub
xor
and
ja
mov
gs
push
or
add
clc
mov
fbstp
imul
inc
and
xchg
mov
or
xchg
mov
push
dec
mov
mov
in
(bad)
hlt
out
call
adc
jp
sar
pop
pop
fdiv
pop
xor
xor
dec
aad
ds
div
cli
add
add
jo
in
cmp
(bad)
and
fldenv
fmul
adc
push
fs
inc
pushf
test
xchg
test
lods
sbb
cwde
sbb
add
popf
dec
out
std
push
int
xor
xchg
jg
cmp
test
cs
xchg
and
pop
lods
rcr
dec
stos
scas
ror
(bad)
fwait
hlt
push
push
add
inc
push
mov
retf
sub
scas
ret
push
test
cmp
aas
adc
cmp
ds
jecxz
push
jp
shr
and
cmc
repz
in
jae
add
and
fbld
test
enter
xor
mov
cmp
popf
ins
popf
mov
mov
add
adc
or
mov
and
xor
cmp
pop
cmp
lds
rol
lea
pop
aaa
sahf
dec
repnz
retf
mov
xlat
(bad)
fdivr
xchg
pop
std
xchg
mov
sub
fcmove
out
jae
in
jg
hlt
mov
add
pop
or
fidivr
(bad)
(bad)
pop
paddq
add
cmp
dec
jle
dec
enter
iret
adc
mov
scas
adc
(bad)
outs
outs
outs
xchg
sti
dec
(bad)
repnz
cmp
cmps
dec
jmp
push
mov
mov
test
sti
push
adc
sar
xor
inc
or
sbb
jg
arpl
sbb
imul
gs
jge
cmp
or
jecxz
mov
jne
add
cmp
cld
sahf
test
push
and
rcr
pop
pop
data16
jmp
mov
jns
cwde
cmps
(bad)
jecxz
inc
sbb
sub
or
cli
pop
pop
das
jge
lock
leave
xchg
daa
daa
fs
cs
movs
div
push
aaa
pop
xor
xchg
call
fbld
fldenv
cmp
add
and
mov
mov
mov
mov
sub
test
inc
xor
cmc
xchg
je
dec
jnp
jl
pop
icebp
arpl
test
add
cmp
fcom
loopne
push
adc
movs
(bad)
cld
pusha
pop
mov
lock
clc
sbb
cli
cld
xor
cmp
mov
xchg
add
push
lds
push
add
into
arpl
add
into
test
push
push
in
pop
mov
mov
fisub
add
pop
add
push
push
inc
jecxz
xchg
dec
cld
leave
fidiv
push
jg
ins
std
push
add
fiadd
dec
mov
and
add
cmp
outs
mov
mov
retf
mov
adc
pop
in
mov
jmp
mov
stc
and
xchg
pop
mov
int
mov
stc
jnp
mov
mov
add
fcom
jno
xlat
lods
mov
dec
aam
and
sahf
sahf
mov
fsub
aam
scas
pop
mov
push
das
call
add
and
(bad)
pfcmpgt
jp
test
cmp
jl
jne
jne
add
jecxz
mov
jmp
cmp
out
fnsave
loopne
sar
cli
sbb
pop
aad
pop
int
popf
mov
mov
add
dec
xor
sahf
nop
fcom
add
sbb
pop
dec
(bad)
rol
iret
or
test
(bad)
mov
cmp
mov
pusha
imul
cmp
add
stos
xor
inc
stc
cmp
sub
jg
add
fcomip
cmp
cli
mov
adc
pop
inc
outs
dec
es
mov
push
jmp
stos
push
movs
push
or
nop
and
popa
cli
cs
ret
ins
and
leave
leave
ss
sub
sub
inc
dec
xor
outs
mov
jno
mov
sbb
mov
xor
pop
push
js
shl
out
(bad)
iret
add
xchg
std
lods
(bad)
stos
xchg
push
xchg
jns
inc
pop
push
loopne
(bad)
cmc
add
(bad)
aam
shl
mov
ds
and
mov
jnp
cmp
cmc
not
pop
mov
inc
test
sub
mov
cli
push
leave
adc
and
pop
dec
and
(bad)
sti
cli
iret
iret
jmp
int3
cld
stos
clc
bound
stos
into
mov
pop
xchg
mov
(bad)
cmp
and
scas
xor
ss
pusha
push
sub
mov
or
adc
xchg
mov
add
iret
aaa
cmp
push
sbb
rol
xchg
test
lods
aaa
mov
aad
retf
jnp
mov
sub
inc
pop
jnp
cmps
pushf
dec
and
add
std
dec
mov
add
jg
dec
addr16
inc
add
dec
fwait
outs
inc
add
push
sbb
mov
cmp
sbb
mov
add
out
aam
push
cli
xchg
neg
jns
and
push
mov
cld
dec
push
jmp
fcmovb
adc
lods
popa
ds
cli
add
add
dec
movs
pop
std
(bad)
pop
pop
test
pop
push
add
pop
pushf
loop
icebp
mov
fisttp
mov
scas
dec
pop
fs
ja
jne
ja
jp
cs
and
sbb
or
add
adc
and
popa
pusha
jmp
lds
inc
add
fs
dec
mov
push
stos
cmp
add
or
adc
fcom
sbb
dec
retf
rcl
dec
dec
jne
push
out
jl
cmps
cmp
nop
test
out
cmp
sub
or
adc
shl
aas
inc
(bad)
mov
xchg
cmps
mov
out
lds
and
mov
xor
(bad)
shl
cwde
dec
inc
xor
jecxz
add
test
inc
pop
adc
pop
retf
stc
jns
sub
or
int3
test
movs
inc
and
push
mov
push
out
or
rcr
dec
sub
ret
mov
cwde
add
pop
dec
mov
scas
pop
dec
popf
(bad)
jecxz
push
or
xor
jo
lds
xchg
sub
sbb
into
leave
fld
add
adc
rol
mov
je
(bad)
popa
jecxz
push
add
sbb
inc
popf
or
jmp
aaa
ficomp
stc
add
add
and
repz
adc
dec
(bad)
(bad)
in
xlat
xchg
xchg
(bad)
popf
mov
jns
test
dec
aam
push
adc
dec
pusha
push
movs
and
xchg
cli
sbb
(bad)
push
test
xor
xor
push
xor
mov
mov
lock
int3
cmps
xchg
pop
and
adc
xchg
retf
xor
mov
push
mov
inc
push
sar
imul
sub
ret
pop
mov
jno
pop
cmp
arpl
in
int
inc
push
pop
cmp
sbb
mov
sbb
(bad)
loope
xchg
xor
sbb
pop
mov
push
pop
xchg
rol
out
fld1
cwde
mov
in
dec
cmp
fdiv
ins
aam
xor
dec
pop
imul
jmp
frstor
or
push
jmp
adc
out
imul
iret
pop
or
js
mov
rcl
jl
xor
rcl
adc
jnp
mov
xor
int
ss
aas
jmp
ret
inc
jmp
and
inc
add
cmp
fdivrp
xor
push
add
std
int3
test
fs
scas
xchg
sahf
jle
jmp
inc
push
ja
adc
(bad)
(bad)
mov
inc
clc
out
sbb
xor
test
cmp
rcl
fiadd
inc
ret
hlt
retf
mov
das
mov
push
mov
or
jmp
std
sbb
mov
pop
mov
push
push
test
mov
dec
lds
test
or
(bad)
cli
mov
(bad)
into
aaa
repz
xlat
popa
lahf
and
xor
scas
push
ss
daa
fsub
lods
fst
dec
inc
lahf
outs
push
jns
or
and
cwde
cs
mov
fcmovu
inc
imul
and
out
ror
inc
jmp
mov
cmp
call
sub
sti
cs
dec
daa
arpl
push
fidiv
mov
xchg
jmp
shl
sbb
adc
add
jmp
stc
stc
push
fucomi
mov
(bad)
imul
jmp
add
ficomp
outs
ins
ins
or
test
mov
jecxz
scas
scas
mov
xchg
je
sbb
loope
inc
call
or
fcmovb
(bad)
cli
cdq
jle
sahf
inc
fcom
xchg
jle
fs
ins
xor
add
ficomp
scas
fimul
fnsave
fs
in
aas
adc
inc
jmp
daa
xchg
shl
push
fbstp
cmc
pop
test
mov
in
je
aas
pop
add
fwait
cdq
mov
std
push
inc
movs
cmp
sub
push
pop
jbe
scas
popf
icebp
or
pop
lds
shl
test
mov
cmp
cmp
push
pop
lahf
xchg
rcr
jno
jns
fs
rcl
dec
mov
retf
mov
test
add
jg
movs
stos
ds
dec
cmp
xchg
mov
mov
xor
cmps
sbb
mov
packssdw
xlat
and
enter
loope
stos
or
adc
mov
mov
jle
imul
and
fcomp
mov
je
int3
fiadd
mov
shl
mov
fistp
or
nop
add
shl
mov
call
cdq
punpcklwd
std
add
clc
repnz
iret
out
cmp
mov
dec
adc
or
pop
sbb
mov
retf
mov
mov
loopne
sub
in
sub
xchg
push
nop
je
adc
sti
movs
das
add
inc
inc
xchg
dec
mov
push
int3
pop
test
pop
(bad)
(bad)
rcl
mov
lock
scas
icebp
add
arpl
push
jmp
cmp
and
or
pop
fcmovbe
adc
scas
dec
(bad)
jp
icebp
arpl
pop
pusha
popa
pop
add
pop
inc
clc
push
fisttp
mov
cmp
cmp
aaa
mov
inc
or
pop
push
jns
push
mul
(bad)
mov
sbb
sbb
inc
aas
cli
adc
retf
dec
movs
leave
xchg
jno
dec
and
adc
and
test
mov
jmp
ror
adc
fnstcw
mov
out
fdiv
cmp
cmps
jnp
push
scas
mov
or
cwde
stc
cmc
cmp
scas
and
hlt
div
retf
jg
jp
jno
xor
add
jb
jae
mov
shl
jge
mov
mov
ret
push
xor
mov
and
ret
imul
enter
inc
xchg
pushf
inc
sub
cmp
rol
lds
cli
sbb
(bad)
rcl
jnp
pop
add
cld
dec
cld
clc
arpl
inc
into
fcmovnb
adc
mov
ja
add
pusha
movs
jg
add
shr
sbb
inc
outs
gs
rcl
retf
cmps
and
xor
jmp
push
(bad)
mov
(bad)
ret
inc
jmp
popf
cmp
cmp
cmp
call
xchg
ins
xor
outs
push
cmp
mov
in
(bad)
pop
outs
movs
retf
pop
mov
nop
mov
mov
enter
jle
stc
add
ds
test
js
and
mov
jo
sub
xor
xchg
shl
arpl
add
adc
iret
or
add
push
xlat
dec
cld
xor
stc
in
(bad)
inc
sbb
pop
xor
adc
ds
loop
push
add
inc
sbb
mov
out
test
pop
retf
fcmovnu
xor
int3
inc
dec
jnp
sbb
ret
clc
loope
jg
shl
sbb
mov
pop
add
xchg
add
xchg
or
loop
cmc
dec
mov
mov
mov
retf
sbb
sub
add
shr
movs
mov
cmc
push
mov
loope
pop
cmps
scas
jl
sub
fucom
(bad)
sbb
std
jmp
cmp
mov
mov
out
adc
pop
inc
dec
add
add
jne
dec
jns
sbb
clc
push
jae
push
adc
add
out
inc
inc
sbb
(bad)
mov
add
adc
out
sbb
adc
gs
stc
es
or
bound
loopne
adc
ins
es
inc
aas
ss
loope
sbb
sbb
sub
call
or
pop
dec
jp
sbb
outs
xor
inc
out
dec
push
(bad)
clc
mov
retf
clc
adc
add
add
cmp
push
xor
(bad)
fistp
icebp
adc
sahf
mov
nop
addr16
aas
cli
fmul
icebp
adc
sbb
or
push
mov
aas
(bad)
xlat
js
outs
repnz
push
loope
xor
(bad)
jmp
pop
cli
adc
cmp
xchg
in
test
adc
in
daa
pop
retf
and
sahf
inc
add
fwait
jecxz
xor
std
jp
std
neg
inc
and
mov
sahf
scas
bnd
(bad)
cli
(bad)
xor
inc
inc
and
and
push
leave
shl
add
ds
popa
pusha
fdiv
test
cwde
dec
cmp
scas
mov
fdivr
push
cmp
cmp
lea
sbb
gs
jbe
sub
jle
push
cmps
cdq
jle
movs
test
inc
sbb
jle
add
xchg
add
jnp
mov
retf
and
addr16
jmp
mov
or
and
mov
mov
jnp
pop
dec
dec
xchg
sbb
repz
in
mul
outs
stos
(bad)
cmp
pushf
adc
push
idiv
fwait
xor
mov
rol
ficomp
pop
jl
inc
mov
xchg
adc
adc
pop
lock
jle
xchg
jmp
call
fnstenv
(bad)
hlt
jns
iret
jecxz
mov
cmp
add
or
shl
push
or
and
push
push
mov
add
pusha
or
test
imul
ja
mov
popf
cmp
ret
(bad)
bound
cmc
shr
bound
inc
xchg
cmp
adc
mov
and
sbb
repnz
sbb
adc
xchg
in
and
pop
aaa
aad
(bad)
pop
shr
icebp
cmp
jl
push
jmp
loopne
xchg
pop
daa
enter
push
pop
mov
xchg
xchg
cmc
daa
sub
jle
push
std
enter
jg
sar
mov
into
add
cld
mov
or
or
pop
cmps
jnp
scas
push
loop
out
(bad)
(bad)
pop
adc
(bad)
adc
ins
pop
xchg
mov
popa
adc
enter
std
mov
cmps
int3
popa
arpl
cmc
add
sub
pop
dec
std
add
hlt
mov
stc
out
ds
sub
out
rcr
cmp
mov
mov
mov
fldcw
sbb
shl
cmp
movs
movs
ja
in
inc
aad
les
jmp
xchg
int
push
div
out
ja
pop
or
repz
fimul
sti
sub
jne
dec
int3
loope
mul
test
mov
push
pop
mov
cmc
sub
push
scas
int
cmp
cwde
mov
sbb
xchg
ret
in
inc
(bad)
rcl
rol
jmp
jno
stc
(bad)
cld
sbb
dec
frndint
out
gs
in
jno
in
ds
pop
cmps
lahf
dec
jp
icebp
mov
sub
cmps
add
or
std
xlat
fild
or
(bad)
js
pop
dec
(bad)
loop
scas
mov
mov
xchg
jmp
pop
neg
add
sub
jg
jl
pop
push
mov
adc
add
test
cwde
(bad)
or
fistp
push
movs
shl
push
outs
mov
fwait
adc
cmp
rep
jp
(bad)
adc
iret
ins
sbb
ss
inc
mov
fisttp
inc
add
mov
dec
shl
jmp
add
stos
fsubr
and
cmc
fbstp
dec
push
fld
xchg
cli
mov
jge
pop
imul
mov
push
and
pop
pop
pop
pop
mov
jle
es
loop
mov
(bad)
repnz
es
lock
jmp
fsubr
out
and
jmp
imul
jmp
mov
dec
lahf
ret
mov
pop
add
call
aaa
push
cmc
test
lods
shr
je
std
push
rcl
(bad)
out
mov
cmp
xchg
cmp
test
xor
fsub
sar
repz
jbe
hlt
pop
out
push
dec
(bad)
repnz
xor
jns
retf
aam
shr
jge
inc
test
mov
jne
and
add
loopne
les
ret
inc
lods
push
pop
shl
mov
cld
loope
rcl
scas
cmps
inc
push
jp
mov
rol
mov
dec
mov
push
or
sub
inc
fldenv
or
fcmovnu
sbb
push
and
int3
xor
or
jecxz
pusha
or
lahf
jbe
pushf
or
aaa
cwde
push
or
add
fdivr
out
idiv
xor
out
fcmovu
fld
xchg
leave
dec
rcr
scas
fs
jno
add
adc
rcl
fnstcw
(bad)
int
in
(bad)
mov
std
popf
nop
mov
mov
test
(bad)
cmp
ret
dec
nop
mov
loop
fnstenv
push
repnz
stc
ds
movs
lods
sbb
ds
daa
aas
clc
mov
sub
gs
pop
jg
in
mov
dec
ror
xchg
xchg
mov
or
adc
cmp
add
pop
cdq
aas
int
jg
call
popf
hlt
jmp
call
push
cmc
pusha
adc
jg
lock
pop
mov
xchg
nop
in
cmp
dec
inc
jmp
xor
popa
jge
push
in
jmp
cmp
xor
out
push
sbb
retf
mov
je
in
fdiv
and
xacquire
dec
fdiv
iret
nop
cmp
or
scas
and
lea
mov
out
jl
sub
outs
xchg
test
in
or
pop
test
fmul
and
cwde
add
rcr
fcomp
pop
mov
jmp
jp
aad
jmp
mov
jmp
mov
adc
mov
pusha
jecxz
xor
in
(bad)
inc
mov
rcr
cmp
mov
cld
xor
fnstcw
jb
xchg
jp
xor
icebp
jle
xchg
stc
jecxz
(bad)
(bad)
faddp
inc
iret
pusha
ret
repz
and
fbld
lea
out
pop
retf
pop
or
(bad)
out
cmps
iret
aas
jle
sar
inc
out
retf
sbb
cmp
add
repz
cmp
pop
add
and
dec
mov
and
pop
cmc
cmps
pop
jge
bound
cmp
enter
push
jl
fisubr
lahf
cmps
or
sub
ss
stc
call
inc
push
cmp
fist
and
aas
dec
jecxz
xor
leave
or
sbb
push
dec
loopne
(bad)
xchg
jno
out
push
rcr
sahf
xor
fnstsw
and
sar
int
xchg
rcl
adc
push
inc
retf
mov
mov
mov
movs
test
test
stos
xchg
aas
xlat
cdq
pop
mov
mov
push
aad
outs
pop
dec
cmp
cdq
mov
adc
stc
pop
cmp
(bad)
mov
lea
aaa
or
loop
(bad)
lods
cmps
and
inc
dec
js
and
js
mul
fdiv
add
sbb
xchg
bound
adc
enter
inc
mov
fld
in
pop
sub
scas
pop
js
stc
inc
(bad)
(bad)
inc
hlt
sub
lods
mov
cmc
pop
inc
je
sbb
repnz
mov
in
jg
dec
out
out
cmps
enter
dec
add
jb
add
or
fdivp
int3
fbld
in
hlt
test
(bad)
pop
enter
inc
adc
rcl
fist
and
xor
lahf
scas
mov
loop
xor
xor
or
or
xchg
cmp
xchg
retf
jle
or
(bad)
pop
int3
scas
jb
call
hlt
inc
sub
add
stos
push
retf
xchg
int
jbe
imul
push
or
pop
pop
mov
lods
add
(bad)
and
add
pop
ror
(bad)
pushf
retf
xor
adc
xchg
pop
pop
sub
push
aad
es
push
popa
mov
ins
(bad)
or
mov
inc
repz
mov
xor
push
loopne
repnz
mov
xor
push
outs
mov
out
adc
in
xor
pushf
in
jmp
repnz
jb
fisub
or
loope
daa
js
mov
jnp
(bad)
jmp
fidiv
xor
pop
inc
add
cmp
(bad)
push
sub
cld
fcos
call
ins
nop
into
xchg
inc
add
loopne
mov
add
outs
mov
fcomp
cmps
test
(bad)
hlt
jecxz
iret
sar
mov
popf
jne
sbb
add
add
mov
mov
inc
add
bound
push
lods
into
das
cmp
pop
cwde
or
bound
jp
nop
add
push
xchg
aad
inc
fcom
mov
push
fdivrp
and
je
ins
mov
in
fistp
push
cmp
js
sbb
in
push
mov
aas
(bad)
push
out
push
jmp
xor
dec
push
lods
cmps
pop
jbe
out
pushf
jmp
pop
add
xchg
inc
sbb
add
mov
aam
pop
xchg
stc
add
push
mov
hlt
inc
and
popa
shr
ret
lods
mov
aad
(bad)
xchg
std
mov
lds
and
imul
pop
pop
loope
jmp
(bad)
jecxz
in
rcr
jg
scas
jge
fsub
cwde
and
pop
jmp
dec
pop
cmps
pop
(bad)
(bad)
jo
movs
stc
out
push
mov
jne
xchg
repnz
repz
je
mov
cwde
icebp
xlat
pop
dec
aam
add
sub
sti
ss
fcmove
push
cli
jo
repnz
lahf
out
mov
dec
(bad)
(bad)
(bad)
mov
sub
add
inc
add
add
rcr
bound
sahf
jg
mov
jle
ds
lahf
pushf
retf
or
daa
les
jns
and
lds
enter
add
test
loope
sbb
pop
int
mov
push
arpl
xchg
int
int3
imul
and
call
inc
xchg
pop
mov
cli
mov
inc
test
xchg
sbb
or
icebp
rcl
adc
ror
jo
ss
shr
repnz
mov
cmps
pop
mov
popf
xchg
pop
xchg
arpl
jb
add
retf
pop
sub
js
(bad)
repz
outs
add
fdivr
(bad)
fistp
leave
rcr
shl
popa
mov
call
aad
mov
aaa
fbld
(bad)
cmp
loope
arpl
movs
add
jge
sbb
sbb
sbb
jmp
adc
push
inc
in
jmp
or
cmp
sahf
push
aam
mov
cli
jmp
retf
retf
or
fcomp
dec
hlt
loopne
call
sbb
imul
(bad)
mov
mov
lods
lahf
repz
or
cld
mov
lock
cmp
jmp
sti
and
repnz
mov
je
inc
mov
mov
lods
sar
aam
imul
vpmacswd
push
or
push
or
pusha
ret
cmp
push
mov
sub
or
fimul
lds
xor
pop
rol
mov
xchg
lahf
mov
push
push
push
repnz
aam
and
inc
cmps
stos
or
pop
inc
jae
xchg
daa
in
int3
add
jge
ffree
sub
push
loopne
pop
and
pushf
repz
in
int
sbb
dec
push
xchg
push
push
adc
inc
movs
pop
arpl
push
mov
mov
xor
jae
js
xchg
and
outs
cmps
xchg
jp
push
js
mov
mov
arpl
stos
inc
adc
inc
push
dec
inc
imul
sbb
mov
(bad)
xor
ss
cmp
push
cld
aad
sbb
ins
mov
in
mov
mov
cmps
push
mov
mov
inc
movs
js
mov
and
loopne
sub
inc
repz
sub
rcl
test
arpl
pop
jmp
jle
cmps
xlat
fist
test
jg
retf
cmc
mov
inc
scas
mov
sar
mov
mov
jno
cs
lock
add
mov
cmp
movs
dec
outs
jecxz
stos
mov
xchg
pop
add
dec
cwde
adc
mov
mov
enter
dec
test
ror
xlat
jge
and
jbe
iret
xchg
pop
icebp
sub
adc
cmps
pushf
inc
retf
aas
adc
mov
and
add
push
stos
out
cs
sub
test
imul
pop
retf
jbe
adc
mov
sub
ja
jge
aas
cld
pop
(bad)
mov
clc
sbb
dec
enter
loopne
imul
dec
xchg
mov
jmp
shl
and
mov
sbb
pop
xor
jl
out
pop
nop
mov
js
inc
adc
dec
std
jne
pop
in
jne
leave
xor
push
mov
hlt
jmp
mov
add
mov
in
jle
add
add
inc
out
xor
pop
mov
add
aad
ss
call
std
jae
pop
sbb
aad
inc
(bad)
dec
scas
out
fsubr
push
jno
das
aam
mov
test
or
mov
mov
scas
fimul
ffreep
cmps
arpl
data16
add
test
mov
je
cld
mov
mov
push
and
add
push
les
pop
push
inc
jnp
outs
ror
adc
rcr
hlt
loopne
mov
add
jl
arpl
mov
push
cmp
ret
xchg
fist
xchg
sar
pusha
or
pop
test
mov
rcr
push
push
retf
sar
sbb
fwait
leave
dec
jmp
jge
in
gs
mov
stc
dec
cli
shr
jle
dec
call
inc
xor
jnp
push
cmp
add
clc
jp
or
fimul
neg
fcom
sub
(bad)
or
mov
aaa
pop
dec
je
fwait
mov
jmp
out
in
jecxz
cmp
adc
out
pop
sar
mov
inc
ds
dec
clc
daa
mov
pop
daa
sub
inc
cmps
bsf
je
push
add
jne
dec
dec
or
in
push
fnsave
jg
mov
seta
push
ins
mov
(bad)
mov
fsubr
(bad)
sub
jns
aam
push
jbe
inc
pop
jle
dec
das
loopne
mov
add
pop
xchg
das
add
int3
or
or
xor
aas
add
add
pushf
arpl
mov
dec
pop
mov
stos
pop
ss
add
pop
adc
sbb
jnp
mov
adc
cwde
adc
pushf
jae
push
sub
(bad)
cs
pop
cdq
add
mov
pop
pop
add
push
aam
lods
rol
push
and
xor
(bad)
icebp
leave
mov
sbb
adc
ja
xchg
cs
(bad)
jge
jbe
mov
pop
jb
rcr
fnstsw
dec
aas
test
mov
ficomp
stos
in
adc
mov
cmp
scas
das
mov
mov
shl
jg
imul
ffree
add
stos
cld
retf
dec
cwde
jns
push
inc
iret
push
imul
(bad)
rcl
add
leave
sbb
pop
mov
or
cmps
pop
in
aas
int
fwait
pop
cmc
pop
jg
fstp
adc
jo
out
adc
(bad)
outs
fldenv
jb
cli
ret
rcl
cmc
fwait
aaa
icebp
test
dec
aam
xchg
scas
outs
mov
mov
jl
pop
cmp
ss
or
and
cwde
imul
adc
jecxz
mov
add
cli
add
dec
push
fwait
pop
sub
retf
mov
xor
push
or
lea
sti
mov
mov
add
sbb
adc
sub
dec
(bad)
adc
or
ins
outs
adc
mov
xchg
push
sub
es
shr
(bad)
pusha
and
jmpw
sub
mov
gs
push
xchg
cmp
inc
stos
nop
cli
ins
lods
ins
push
gs
aad
dec
mov
les
mov
ds
pop
mov
ds
icebp
(bad)
or
mov
mov
pop
pop
popf
ja
sub
push
les
xchg
imul
sahf
idiv
movs
mov
ins
sbb
mov
loope
cld
jle
and
stos
js
push
xchg
pop
retf
jp
aad
mov
(bad)
gs
push
and
push
cmps
dec
pop
sub
sbb
dec
or
mov
pop
sub
fbstp
sbb
xor
into
adc
push
cwde
xor
xchg
into
mov
pop
imul
push
call
xor
add
loope
rcr
mov
outs
mov
mov
lods
inc
jne
adc
push
jge
daa
les
push
jnp
jno
out
xchg
mov
mov
push
cwde
sbb
push
rol
inc
pop
mov
or
ret
call
stos
or
fdiv
lea
and
js
sbb
push
mov
mov
xor
and
mov
xor
sahf
addr16
sbb
cmps
mov
fs
dec
scas
adc
fnstenv
and
adc
shl
xor
arpl
mov
push
ins
dec
jp
pop
mov
mov
pop
retf
dec
lods
mov
shr
mov
aaa
mov
jnp
xchg
out
mov
jmp
xor
xlat
data16
mov
push
pop
lods
dec
loope
xchg
pop
and
pop
sub
mov
jns
in
xor
mov
(bad)
test
mov
add
mov
(bad)
sub
out
sub
scas
mov
ds
icebp
bound
std
xor
fild
xlat
mov
xor
stc
push
(bad)
lock
adc
cmp
std
call
inc
cdq
aas
test
cmp
jp
inc
ficomp
sub
cwde
sbb
cmc
add
xor
(bad)
aas
leave
sub
jb
lods
sub
jp
mov
ins
pop
inc
je
add
retf
cmp
mov
xor
test
movs
cmp
hlt
int
inc
jmp
ins
adc
test
aaa
cmp
bound
add
pop
adc
ret
or
pop
jle
fiadd
xchg
arpl
jno
cld
cmp
cs
repnz
or
jno
add
sbb
mov
jno
fidivr
cwde
cmps
and
jae
loop
jmp
stos
add
ret
shl
and
add
lahf
int
xchg
pop
scas
stos
push
xor
adc
lea
ret
in
ds
jle
jg
mov
frstor
out
test
push
or
mov
stos
mov
or
push
dec
push
mov
sar
hlt
stc
xor
push
xor
jge
mov
retf
aas
out
sbb
in
fidiv
pop
mov
fbstp
pop
pusha
xchg
jmp
pop
repnz
js
out
fstp
out
scas
in
xchg
dec
xchg
iret
loopne
loop
sub
fsubp
sub
inc
pop
fmul
or
out
sti
mov
mov
lds
outs
iret
or
nop
lahf
jbe
add
or
xor
ja
xchg
out
stc
dec
outs
(bad)
loopne
pop
ret
xchg
add
mov
loop
rcr
jb
out
xchg
or
sub
test
sub
pop
mov
fdivr
xor
mov
call
ja
lods
shr
test
dec
repnz
add
mov
inc
je
adc
sub
aam
push
and
or
mov
mov
and
jl
aam
xchg
sub
aas
ror
les
jbe
jge
es
inc
fisub
jmp
int
rcr
cmp
push
or
push
jp
dec
cmps
call
mov
pop
lods
sub
into
rcl
lods
scas
mov
pop
and
shl
adc
jl
jno
pop
repnz
pop
mov
sahf
js
aam
mov
dec
cdq
sub
xchg
call
cdq
aad
jmp
popf
xor
mov
aad
ins
jle
lods
ins
dec
scas
(bad)
in
retf
ficom
fisubr
sub
int3
jbe
xchg
test
(bad)
clc
mov
imul
loope
adc
cld
push
jl
push
(bad)
pop
push
jmp
sub
loopne
mov
jle
cmp
adc
push
dec
sbb
add
xor
aad
sar
add
scas
cld
jo
fld
popa
cmc
lldt
pop
lods
aam
push
sub
jne
adc
mov
jl
jnp
repz
sbb
add
and
nop
call
mov
mov
and
aaa
sbb
adc
or
inc
add
arpl
or
call
and
daa
pop
or
cmp
shl
inc
cmp
daa
mov
shl
popf
cdq
push
sbb
push
inc
jge
in
imul
inc
inc
push
call
push
or
xchg
push
or
repz
and
lds
mov
sub
shr
sbb
loope
mov
mov
push
mov
inc
xchg
push
mov
cwde
outs
dec
pop
jecxz
cmp
xchg
adc
les
jle
xlat
mov
retf
aad
test
mov
xchg
inc
sub
shl
int3
pop
xor
pop
in
fild
stos
ins
dec
je
cli
clc
push
mov
in
je
xor
xchg
mov
xor
(bad)
dec
leave
test
jnp
mov
lahf
out
addr16
aad
cmps
sahf
icebp
push
cmp
sbb
pop
jnp
mov
fwait
push
(bad)
std
iret
pop
out
(bad)
ficomp
add
loope
pusha
fnstcw
pop
xchg
jns
dec
inc
inc
scas
aaa
outs
gs
jno
mov
mov
fbld
jns
pop
mov
imul
inc
clc
mov
fld
lods
inc
aaa
pop
mov
int
mov
jmp
push
xor
sbb
int3
stos
mov
cmp
dec
(bad)
mov
sbb
pop
dec
movs
dec
ins
add
xchg
dec
inc
fild
fnstcw
or
sbb
adc
mov
test
pusha
fcmovnb
fcomp
(bad)
je
dec
das
out
es
push
out
les
mov
jge
adc
and
add
scas
cmps
inc
shl
adc
test
shl
popa
es
loop
adc
stc
es
outs
(bad)
stc
or
addr16
sbb
dec
lds
inc
retf
mul
xchg
pop
sbb
(bad)
cmp
dec
cmps
mov
cmp
or
sbb
push
movs
bswap
mov
(bad)
cld
fs
popa
xchg
dec
lock
call
sbb
call
imul
call
sbb
(bad)
retf
fbstp
imul
inc
cli
ficomp
sub
pusha
cld
cwde
icebp
dec
xchg
add
mov
stos
adc
idiv
int
dec
add
int
aaa
sbb
cmp
add
and
sub
outs
lods
jmp
das
arpl
psrld
adc
sbb
push
mov
test
pop
(bad)
mov
ins
fisttp
jmp
xchg
pop
bound
call
aam
mov
std
xchg
repz
cmp
leave
sub
cli
push
dec
push
sub
mov
mov
jge
adc
push
fwait
xor
add
js
or
in
test
pop
sbb
and
lods
inc
and
inc
and
outs
pushf
dec
push
xor
sbb
push
sar
dec
or
nop
imul
aad
ret
pop
in
cmp
pop
cmp
push
xor
mov
ins
add
jle
imul
xor
xchg
in
mov
add
(bad)
ins
jmp
push
adc
in
jge
hlt
out
adc
mov
aaa
repz
fdiv
and
movs
rcr
xchg
inc
sti
ja
shl
(bad)
rcl
div
rcl
pop
or
in
mov
jecxz
or
cmp
push
retf
in
lock
pop
sub
out
sbb
mov
aam
dec
add
xchg
rol
inc
pop
jae
sub
aas
std
aad
(bad)
das
div
cmps
lds
add
ss
mov
test
stos
adc
mov
mov
shl
ret
pop
popa
jbe
mov
jo
inc
push
(bad)
sahf
movs
pop
jnp
mov
cmp
xchg
push
sbb
mov
cmp
ins
ds
fldenv
(bad)
call
push
popa
retf
lea
(bad)
jp
push
pop
ror
jmp
and
cli
sub
inc
adc
sbb
fwait
mov
xchg
mov
call
or
cdq
nop
stos
add
mov
cmc
pushf
jno
cdq
mov
adc
cmp
sbb
adc
(bad)
loope
mov
ds
in
mov
dec
dec
xor
sub
xor
cmp
call
lods
(bad)
jmp
stc
cmps
cmp
call
popa
xor
pop
addr16
sar
jmp
nop
cld
mov
lahf
mov
aas
(bad)
cs
ror
mov
aaa
fdivr
stos
cld
scas
arpl
je
mov
pop
or
push
jp
(bad)
xchg
hlt
in
cmp
(bad)
cmp
test
or
sti
dec
cmp
loopne
mov
(bad)
sbb
in
pop
enter
js
xchg
cmc
pop
enter
or
mov
(bad)
scas
call
mov
mov
xor
mov
jns
or
sub
es
not
retf
je
fwait
dec
mov
pop
dec
fldcw
pop
sbb
or
mov
(bad)
loopne
mov
stos
jl
(bad)
(bad)
mov
mov
retf
rol
(bad)
ja
lods
sti
adc
push
ja
and
fstp
xchg
pop
call
sbb
inc
inc
ret
mov
cwde
ss
clc
add
loopne
cmc
lds
xor
add
sub
aam
rcr
cwde
add
enter
stos
pop
dec
mov
ret
test
test
and
xor
jae
adc
add
(bad)
fst
xchg
fprem1
push
dec
pop
(bad)
(bad)
jmp
repnz
mov
clc
js
clc
mov
ins
jge
xor
pop
test
mov
or
movs
fst
cmp
cmovo
sbb
sbb
sar
mov
ror
mov
arpl
cdq
inc
dec
js
fiadd
lock
sub
cmp
or
retf
push
pop
mov
cld
sbb
push
cmovp
test
pop
jnp
dec
ds
and
fst
cmps
xchg
sar
mov
retf
ins
ins
js
add
(bad)
lods
jecxz
jg
aam
sub
jg
in
(bad)
mov
jb
add
sbb
or
adc
stos
std
sub
outs
pop
dec
mov
mov
movs
pop
sbb
int3
adc
cmp
inc
aas
jns
push
idiv
push
pusha
scas
scas
cmps
pop
sub
test
pop
mul
lock
ins
sub
aam
pop
aas
inc
fdiv
data16
outs
ins
jo
retf
ins
inc
aaa
cs
add
and
sub
test
inc
add
(bad)
sbb
or
mov
icebp
push
test
ror
xor
les
or
xchg
jb
push
mov
inc
sbb
shl
retf
mov
es
cmps
xchg
fst
jmp
test
mov
aad
mov
sbb
cmps
ja
or
in
retf
pop
lea
jmp
cmp
ins
outs
aas
mov
in
mov
jae
dec
mov
or
pop
test
sbb
mov
call
loope
in
stos
cmps
test
mov
in
jl
sbb
rol
and
jnp
rcl
outs
cmp
jns
(bad)
out
test
ret
pusha
sub
mov
ror
jge
dec
das
cmp
push
or
push
not
call
jmp
adc
sub
fadd
push
cs
(bad)
jmp
jmp
mov
sub
mov
mov
std
or
repz
xchg
sahf
popa
popf
int3
gs
ror
sub
pop
inc
push
fs
shr
add
and
and
repnz
addr16
xor
sbb
out
nop
pop
adc
xchg
dec
das
(bad)
outs
add
std
add
or
aad
jg
cmp
and
loopne
jno
and
(bad)
mov
cmp
cli
sub
clc
and
mov
int
movs
ds
push
idiv
cmp
push
retf
out
or
jb
and
mov
mov
push
out
leave
stc
sub
sbb
cmps
sub
clc
xchg
mov
aaa
push
rol
push
mov
fmulp
adc
or
aaa
in
push
sbb
bnd
retf
call
xchg
cwde
imul
in
sbb
dec
and
pop
add
jmp
sbb
fistp
(bad)
jbe
stos
jg
sbb
jbe
dec
retf
push
scas
cmp
adc
ins
pop
push
add
cmc
dec
cmps
ds
rcl
and
mov
and
jp
pop
fmul
(bad)
loop
fld
pop
dec
mov
scas
xor
(bad)
(bad)
or
les
icebp
xchg
mov
adc
dec
shl
cmp
add
sub
xchg
or
or
add
repz
add
jnp
or
fimul
jmp
imul
adc
jo
lahf
dec
(bad)
lahf
xor
gs
aad
es
mov
push
lea
jge
outs
sub
push
jne
add
out
fist
imul
fcom
sbb
syscall
dec
cmp
mov
and
jb
adc
jl
fistp
pop
xor
ror
xor
pop
ffree
call
addr16
fsub
push
fbld
idiv
test
neg
dec
dec
outs
fmul
inc
test
dec
fist
pop
(bad)
retf
and
out
jg
xchg
movs
outs
mov
aas
pushf
enter
and
lods
das
jno
adc
sub
sbb
les
adc
and
mov
scas
jnp
sub
add
mov
jmp
jae
ins
cs
stos
ret
push
sub
sub
add
jb
loope
add
pusha
push
adc
pushf
pop
lods
push
not
retf
hlt
out
jno
mov
in
xor
inc
mov
ins
dec
adc
mov
lea
shl
lods
fxam
xor
ret
mov
adc
neg
add
cmp
mov
sbb
mov
in
jle
adc
cmps
and
and
adc
call
test
cwde
sbb
pop
cmp
sgdtd
data16
out
cwde
jns
std
pop
es
retf
mov
fidiv
push
pusha
xor
sbb
test
aam
pushf
xor
sub
mov
cmp
sub
repnz
cmp
femms
dec
cwde
adc
movs
push
pop
adc
mul
int
leave
mov
jl
dec
test
inc
mov
adc
sub
xor
aad
(bad)
cld
popf
psrld
neg
mov
push
imul
sbb
add
retf
mov
popa
mov
(bad)
call
icebp
or
push
out
popf
adc
mov
mov
out
pop
jae
mov
sahf
jmp
inc
or
pusha
jecxz
dec
or
push
sahf
imul
xor
cmps
mov
push
adc
mov
mov
mov
push
sbb
push
stc
add
clc
xchg
mov
mov
adc
inc
hlt
icebp
mov
sete
mov
enter
mov
ret
push
add
or
sbb
inc
sbb
and
out
mov
xor
add
aam
xor
cdq
jle
or
ret
inc
call
out
jo
pop
mov
dec
ror
cmps
xchg
loop
test
inc
xor
or
test
cmp
or
clc
mov
idiv
fiadd
dec
cmp
jp
(bad)
ret
push
mov
repnz
hlt
jmp
mov
(bad)
mov
cs
jns
mov
cmp
pop
jecxz
pop
cmp
loop
aam
enter
xchg
and
movs
adc
fs
push
xchg
ins
cmps
or
mov
push
repnz
(bad)
fcom
pop
dec
fidivr
daa
add
xor
cld
inc
push
inc
imul
clc
add
nop
jl
(bad)
setnp
inc
int3
or
mov
not
lea
jno
int3
or
jge
cmp
ds
pop
sub
add
into
addr16
or
fwait
data16
jbe
mov
cmps
adc
out
jne
jp
sub
cmp
xor
mov
scas
sbb
pop
mov
test
or
inc
dec
imul
jbe
call
imul
repnz
aas
xlat
es
add
dec
xlat
fs
jmp
les
xchg
out
add
pop
jmp
stos
lea
mov
punpckhwd
(bad)
sbb
leavew
into
mov
jge
and
jg
je
outs
fisubr
imul
xchg
lock
cdq
jmp
retf
out
cmps
dec
jmp
fcomp
sub
out
sbb
addr16
call
fnsave
cmp
push
es
dec
stos
mov
aam
cmp
in
dec
xchg
test
ja
popa
jle
fimul
and
jnp
ja
pop
add
fmul
pop
out
retf
pop
shl
add
std
mov
pop
ror
push
xor
stc
lods
add
mov
je
lods
rcr
xor
mov
scas
es
mov
(bad)
mov
shl
adc
pop
ds
or
adc
xchg
iret
mov
rcr
pop
scas
int
xor
inc
push
xor
or
cli
or
add
retf
add
or
cmp
sbb
adc
clc
shl
pop
scas
inc
ret
outs
int
and
push
imul
xor
push
sub
leave
add
aad
jle
adc
mov
test
inc
push
jle
mov
sahf
dec
bound
pop
sbb
lea
test
sar
xor
xlat
or
ds
push
rol
pop
push
pop
sub
addr16
retf
lods
mov
mov
pop
pop
sbb
mov
das
shl
mov
stos
shl
jg
jmp
push
mov
mov
es
mov
mov
jg
arpl
adc
ds
das
push
jg
xor
pushf
add
mov
sti
pop
bound
xchg
pop
les
ins
cmps
lods
xchg
cmc
lds
call
mov
ins
sub
rcl
push
mov
fdivr
mov
or
sbb
out
ret
(bad)
jns
in
mov
out
mov
dec
or
xchg
or
(bad)
lods
outs
add
gs
cmp
sub
repnz
jle
or
pop
xchg
shr
adc
sar
and
sbb
jge
(bad)
imul
test
mov
(bad)
lea
add
or
push
cmps
and
clc
js
aad
xlat
xchg
add
sbb
dec
adc
cli
pop
aas
mov
jmp
mov
pop
sbb
and
inc
pop
xor
dec
jae
aad
scas
adc
xor
dec
pop
call
(bad)
call
ins
lahf
mov
lods
repnz
jbe
dec
push
loop
in
loope
test
add
xchg
sub
test
xlat
add
xor
test
out
test
adc
mov
aas
enter
or
outs
push
cmp
add
aam
fucomp
arpl
mov
add
push
mov
add
pop
sub
inc
mov
xor
lods
aad
ror
mov
mov
in
xchg
movs
xchg
fnstsw
(bad)
xor
popa
into
pop
adc
cwde
add
fistp
dec
iret
mov
das
popa
cmps
(bad)
aas
mov
test
test
mov
call
(bad)
push
and
cmp
adc
aam
sub
mov
cmp
ins
sbb
rol
das
es
xchg
test
bndldx
xor
or
mov
es
adc
sbb
dec
sub
lods
jmp
push
(bad)
dec
push
and
sub
ret
out
xchg
xor
jmp
jmp
xor
jb
sub
mov
mov
fwait
cmp
pop
ror
lds
dec
cwde
mov
stc
cmp
and
loope
mov
mov
lahf
jecxz
push
in
xor
out
xor
iret
push
fistp
add
xchg
cld
shr
dec
mov
out
loopne
idiv
(bad)
jae
add
xchg
dec
push
jne
mov
and
retf
je
aad
fcomp
mov
and
and
adc
jle
dec
cdq
xor
rcl
outs
mov
push
sar
int
mov
and
push
xchg
pop
and
mov
out
mov
push
or
add
sbb
inc
and
in
inc
add
mov
cmps
jne
ficomp
cmp
cmp
jno
mov
mov
inc
es
mov
xchg
push
xchg
movs
pushf
call
(bad)
sbb
imul
shr
fisubr
pop
mov
stos
add
shl
push
shr
and
icebp
imul
je
ss
rcl
fisttp
or
shl
xor
pop
nop
retf
pop
xor
push
push
jl
int
addr16
mov
pop
pop
iret
pop
pop
push
(bad)
push
fadd
inc
jg
jns
daa
push
cmps
out
repnz
jle
xchg
push
std
push
or
fstp
mov
jb
mov
push
dec
and
int
cwde
mov
mov
jno
movs
push
sbb
push
add
cmp
mov
inc
jmp
add
push
shl
stos
mov
dec
ror
(bad)
mul
push
movs
sub
or
fisubr
cs
mov
xchg
imul
inc
test
add
push
icebp
jmp
pop
movs
xchg
js
loopne
retf
(bad)
gs
lock
jno
and
dec
test
test
xor
mov
and
test
or
xor
mul
inc
addr16
or
sub
cmp
xlat
or
xchg
xchg
imul
jae
div
les
adc
xchg
lods
xchg
add
and
out
cmp
repnz
out
xchg
loop
mov
or
aad
xchg
(bad)
insertq
mov
repnz
mov
cli
jge
push
adc
lds
(bad)
cmp
mov
scas
xor
and
push
adc
sbb
push
xchg
jle
test
lahf
and
jecxz
inc
add
mov
ja
or
in
mov
pcmpgtd
add
scas
stc
arpl
bound
lods
aaa
push
and
cmp
(bad)
cmp
retf
stos
push
cmps
jmp
sub
mov
popa
adc
add
jge
xchg
arpl
cmp
mov
ror
arpl
xor
ins
xchg
xchg
sub
cmc
adc
push
pop
dec
jo
mov
pop
cmps
pop
and
dec
call
cmp
xor
fist
jmp
mov
test
jecxz
cmp
pusha
mov
cmp
jbe
ss
mov
xor
push
popa
inc
sbb
aas
arpl
cwde
pop
xor
cmp
cwde
xlat
xchg
xor
js
in
xchg
xchg
mov
in
xor
stos
idiv
lds
loopne
les
pop
sub
(bad)
or
mov
mov
(bad)
mov
xchg
in
xor
jmp
(bad)
jmp
daa
mov
or
add
rol
test
scas
fdivr
call
cmc
dec
mov
(bad)
fs
and
pop
mov
dec
inc
out
add
data16
dec
dec
retf
pop
xor
dec
push
mov
dec
mov
cmp
and
or
push
inc
xor
std
bound
fst
xchg
outs
fidiv
retf
das
xor
push
fsubr
mov
icebp
icebp
xchg
mov
in
mov
ja
push
imul
add
add
loopne
pushf
out
fs
lods
xchg
shl
sets
inc
int
pop
pop
push
in
or
cmp
jge
xlat
(bad)
sbb
mov
jae
mov
popf
mov
repnz
in
cmp
cmp
enter
(bad)
sar
xor
cmp
jecxz
jo
jb
xor
(bad)
pop
stos
test
sub
cmp
sbb
cmps
mov
push
mov
fnsave
stos
jg
cli
ja
add
nop
jle
jae
jge
enter
sub
push
repnz
cmp
jmp
(bad)
out
aam
stos
sub
imul
mov
pop
clc
fs
mov
aam
jbe
adc
lahf
bound
clc
(bad)
movs
pop
jb
adc
jns
icebp
popa
jmp
ss
stos
cmp
adc
and
ins
shl
fwait
sub
push
out
fst
sub
mov
ins
and
fwait
add
and
hlt
add
ds
dec
out
fisttp
jb
dec
add
sub
dec
adc
jns
loop
mov
dec
stos
adc
je
mov
sub
popa
cmp
and
push
xchg
xchg
xor
ds
cmc
jmp
repz
out
lahf
adc
jbe
lea
aaa
imul
data16
mov
or
push
lods
into
repz
sar
xchg
mov
xor
aad
mov
aaa
inc
popa
mov
mov
retf
pop
bound
imul
cli
sbb
push
call
das
rcr
cmp
scas
hlt
lds
shl
cmp
imul
push
inc
cmps
popa
pop
jb
sub
jl
(bad)
je
fidivr
sub
cdq
xchg
mov
rcr
jmp
aad
cmps
out
div
mov
call
shr
stos
cli
iret
adc
test
sbb
add
les
or
mov
sar
lods
push
call
lea
mov
sbb
mov
cmp
jnp
int3
test
add
pop
jns
or
ror
sbb
adc
inc
push
or
loop
mov
popa
sub
push
bnd
dec
inc
xor
ret
mov
jmp
lods
lahf
jno
adc
and
(bad)
sti
outs
scas
dec
arpl
pop
or
inc
lahf
mov
or
clc
enter
mov
inc
mov
xchg
ret
mov
outs
int3
push
(bad)
scas
leave
call
daa
push
shl
aad
cld
cmc
bound
jae
pmulhw
cdq
mov
cs
and
sbb
xor
out
movs
sub
out
aad
cmps
push
dec
mov
cmp
xor
test
pop
(bad)
iret
ins
mul
scas
mov
(bad)
sbb
(bad)
push
sbb
ret
leave
test
xor
pop
xor
sbb
fwait
retf
(bad)
dec
add
or
aas
enter
retf
loopne
jbe
jno
loop
xor
(bad)
ror
scas
and
lods
push
mov
call
sbb
or
daa
ja
inc
(bad)
aas
dec
dec
xchg
dec
fnstenv
pushf
mov
xor
int3
add
fild
pushf
test
sub
imul
lea
pusha
scas
cmps
pop
jno
mov
ins
sub
das
ret
aaa
xchg
aas
xor
mov
cld
mov
jmp
loopne
xor
xor
lods
add
fwait
inc
mov
lods
mov
test
fdivr
sahf
scas
push
jmp
adc
je
push
inc
push
pop
outs
sbb
cmps
int
or
call
fisttp
sbb
imul
aaa
dec
cmp
sti
ins
bound
cs
pusha
jmp
xchg
jnp
mov
mov
out
out
inc
mov
inc
mov
add
mov
xchg
fst
jnp
mov
rol
inc
xor
and
add
xor
mov
addr16
sbb
outs
aad
lods
mov
xlat
stos
push
pop
lea
and
inc
or
mov
mov
inc
sahf
(bad)
push
movs
sub
mov
ror
data16
rcl
stos
cdq
add
mov
or
mov
imul
mov
sbb
cwde
adc
or
cli
enter
mov
adc
sbb
push
mov
fst
push
rcl
xor
enter
in
and
add
mov
jnp
scas
xchg
dec
push
daa
xchg
or
aam
mov
dec
push
fbstp
and
push
inc
stos
cdq
cmp
arpl
lods
dec
xlat
jb
inc
push
and
mov
xchg
call
mov
leave
jmp
or
push
int3
jecxz
and
pop
enter
fist
loopne
jno
lock
sar
rcr
add
push
mov
mov
xor
mov
rcl
aaa
out
loopne
ret
(bad)
adc
dec
ret
loopne
lds
dec
xlat
repnz
sub
sub
leave
jno
cwde
add
fbld
jg
gs
int
inc
icebp
lds
rcr
xchg
dec
sub
mov
dec
xor
lods
mov
dec
add
mov
inc
dec
add
push
pop
loop
loope
inc
loop
push
test
cmp
add
hlt
and
test
and
les
jmp
mov
(bad)
out
sub
outs
push
in
cmps
dec
lahf
mov
mov
inc
pop
xchg
pop
dec
icebp
ins
aaa
adc
xor
mov
inc
pop
sbb
dec
inc
pop
jg
(bad)
popa
call
sbb
es
in
(bad)
jle
jae
lods
shr
aaa
push
imul
dec
gs
imul
call
sbb
stc
loope
jle
mov
mov
iret
adc
add
lea
cmp
neg
cmp
mul
sbb
dec
xor
movs
dec
cmps
inc
les
jno
(bad)
jg
or
add
sub
in
jne
cmps
jg
mov
xlat
pop
mov
int3
push
dec
movs
sub
shr
loop
imul
mov
cmc
std
adc
ss
add
stos
mov
dec
mov
xor
push
and
jo
sub
dec
dec
fbstp
daa
dec
add
leave
push
pusha
lock
mov
sub
and
dec
jae
sbb
add
inc
cmps
jecxz
neg
jbe
(bad)
jp
ins
fiadd
stc
cmp
push
mov
jbe
stc
scas
(bad)
out
pop
ins
push
jo
rcr
push
arpl
sahf
jge
push
jg
(bad)
jno
dec
stc
fs
mov
data16
outs
cmp
dec
jle
ret
test
jne
stc
ins
mul
inc
xor
dec
jae
inc
adc
cld
push
sbb
mov
or
cmp
add
aad
fdivrp
test
add
cmp
and
mov
mov
pop
aam
mov
adc
sbb
mov
lds
xchg
push
ins
mov
ss
and
sbb
hlt
ret
mov
inc
push
es
sub
daa
bound
push
ror
pop
enter
pop
xor
rcl
push
lock
cmp
cmp
das
add
test
xchg
inc
and
adc
push
add
push
aam
mov
push
int3
or
ja
mov
xor
push
push
xor
pop
ds
sbb
add
movs
shl
stos
push
mov
jmp
add
div
add
push
mov
and
push
sbb
(bad)
inc
push
lahf
push
aas
out
int3
mul
push
jg
push
lods
cld
jecxz
ins
call
add
fcmovu
dec
push
(bad)
out
pusha
add
out
je
xor
mov
adc
xor
(bad)
xchg
sti
cmp
mov
cmps
pop
movs
mov
xchg
jb
mov
inc
imul
cmps
outs
mov
push
cmp
ror
lods
sbb
out
push
xchg
xor
aaa
call
add
adc
enter
enter
push
and
mov
add
lea
dec
mov
call
sbb
pop
mov
push
xchg
dec
dec
das
sti
pushf
or
mov
jg
stos
inc
ds
enter
mov
inc
into
or
xor
aam
cmp
xchg
dec
pop
xchg
cmp
fsub
(bad)
shl
sbb
inc
cmp
loope
mov
cli
sub
loopne
pushf
and
ins
and
ins
mul
and
mov
jge
mov
iret
adc
inc
adc
test
or
jle
das
in
(bad)
(bad)
(bad)
sbb
pushf
xor
sub
popa
ret
mov
leave
inc
pop
jmp
adc
imul
push
not
test
mov
sub
movs
mov
pop
and
push
dec
ror
lahf
cmp
pop
xor
mov
bound
fcmovbe
push
dec
in
xchg
and
sti
mov
add
xchg
mov
jle
data16
add
loope
ins
aam
sbb
sbb
dec
push
push
inc
pop
jne
lahf
outs
cdq
fimul
and
sub
icebp
(bad)
jmp
xchg
scas
fnstsw
rcl
(bad)
mov
push
xchg
bnd
out
hlt
in
cmps
jmp
dec
data16
mov
cmp
fisub
adc
lods
les
cld
cmps
mov
sbb
fild
inc
add
adc
lea
pop
and
push
sbb
sub
push
addr16
jbe
or
outs
mov
dec
sbb
rcr
pop
aas
or
sub
cmp
push
adc
sbb
ds
adc
sbb
mov
hlt
mov
mov
retf
out
hlt
ror
jnp
sbb
adc
add
pop
xchg
lock
sbb
popa
xchg
mov
jge
ffreep
mov
not
inc
inc
inc
and
or
sbb
(bad)
sub
jno
sub
jp
out
pushf
scas
int3
pop
dec
fs
xchg
push
lods
cmp
cmc
adc
mov
hlt
jae
daa
xchg
enter
lock
inc
cmps
shl
mov
popf
sub
pusha
leave
pop
push
inc
cwde
jmp
xor
retf
in
in
test
pop
mov
push
pop
and
(bad)
fsub
pop
das
mov
std
pop
in
inc
cmp
sub
sub
mov
movs
fisttp
add
mov
mov
iret
cmp
sbb
pop
inc
lods
jb
mov
mov
rcr
fimul
in
fisttp
clc
cmps
(bad)
ins
aas
pop
aaa
(bad)
and
and
push
sub
cld
xor
addr16
es
imul
jb
add
jb
cmc
arpl
or
and
fist
mov
push
mov
sub
in
xchg
lahf
data16
add
out
hlt
stc
jl
mov
cmp
stos
xor
imul
sbb
cmps
mov
add
aad
dec
popf
xchg
or
xlat
push
jae
and
cdq
mov
xor
mov
pushf
adc
fiadd
push
not
mov
rol
push
pop
adc
stos
xor
outs
rcl
fdiv
(bad)
fwait
js
jg
fld
data16
das
pop
and
add
xor
rcl
lea
popa
mov
(bad)
pop
mov
xor
cmp
sbb
xlat
aas
mov
iret
inc
mov
sub
mov
dec
jle
dec
pop
pushf
fstp
hlt
stc
jo
inc
pop
jg
leave
adc
fst
xor
lahf
jbe
inc
out
dec
scas
loopne
outs
mul
jge
retf
jecxz
cmp
call
shl
ror
or
push
out
das
xor
gs
or
pop
fisttp
leave
in
rol
jno
lds
(bad)
std
cmp
outs
adc
not
jnp
inc
mov
out
add
pusha
fisubr
xchg
mov
test
xchg
dec
arpl
xor
inc
int
mov
mov
lods
and
push
jb
(bad)
xchg
xchg
push
js
and
outs
fld
jecxz
sbb
mov
lds
xor
push
cmps
or
cmp
lahf
push
mov
fnstenv
xchg
stos
fsub
and
loopne
fld
aam
gs
pop
hlt
mov
push
dec
(bad)
lock
ficom
jbe
jb
jns
je
add
ror
out
dec
xor
xor
fldenv
ret
xchg
push
push
in
out
mov
sahf
pop
mov
fld
jl
add
sar
shl
jno
test
push
or
mov
inc
jmp
xor
mov
ret
pop
mov
in
push
(bad)
xor
add
lods
cmc
in
call
sbb
xchg
stc
push
(bad)
xchg
arpl
arpl
adc
dec
sbb
inc
and
repnz
in
bound
daa
push
sub
cmps
and
(bad)
in
jne
imul
xor
sub
sahf
add
adc
out
sub
and
ins
mov
push
mov
inc
fsubr
xor
ret
push
xchg
sbb
pop
sub
add
imul
push
test
push
add
popf
xchg
iret
outs
test
pop
pop
push
loope
add
push
iret
adc
adc
inc
mov
jge
int3
stos
aam
leave
out
hlt
enter
pop
(bad)
push
mov
ins
setle
cld
push
adc
cld
in
mov
ds
inc
lods
in
dec
int
fs
xchg
in
and
outs
enter
(bad)
(bad)
sbb
fxam
mov
jmp
popa
push
imul
mov
jnp
mov
or
add
fiadd
sbb
or
daa
(bad)
adc
push
outs
dec
and
dec
jecxz
rcl
dec
cmp
add
xchg
bound
jl
dec
xlat
jae
xchg
adc
dec
in
dec
pusha
adc
fsubr
inc
gs
stos
mov
imul
push
sub
sub
movs
xchg
ds
push
pop
or
shr
add
addr16
test
adc
sar
imul
push
xchg
(bad)
sub
sar
xor
mov
stos
cs
jp
push
sahf
dec
(bad)
outs
pusha
xlat
imul
cld
and
cmp
mov
lods
cmc
sti
push
popa
(bad)
ins
loope
dec
rcr
xchg
sub
sbb
ins
or
movs
(bad)
and
mov
(bad)
test
dec
fisubr
out
sub
je
retf
jmp
jmp
add
imul
(bad)
sbb
or
bound
xchg
into
inc
adc
xchg
and
cs
popa
loop
push
in
pushf
mov
mov
pop
and
xor
and
mov
mov
mov
sbb
lock
mov
mov
shr
sbb
lods
adc
mov
mov
mov
or
mov
imul
popf
xchg
stc
stc
jne
xchg
ret
or
retf
add
iret
cmp
cmp
ins
pop
fsub
repz
sti
pushf
fwait
lods
and
lea
out
enter
mov
ja
gs
xor
xor
loopne
fs
js
xchg
push
mov
add
inc
inc
add
lods
in
dec
scas
cdq
sti
dec
add
push
imul
add
shr
lock
inc
(bad)
or
mov
and
cmp
mov
sbb
add
xor
stos
mov
int
sub
jo
xchg
xchg
lds
ds
add
les
test
mov
add
test
inc
inc
int
mov
or
sub
mov
mov
and
cmp
movs
mov
mov
mov
add
mov
add
jo
in
mov
push
ds
cmp
clc
add
pop
mov
cmp
inc
shl
sub
cmp
xchg
adc
add
mov
adc
add
dec
and
(bad)
arpl
retf
es
stc
push
in
mov
repz
stos
in
stos
mov
in
pop
pop
mov
adc
mov
add
shl
adc
adc
or
fldcw
pop
in
push
clc
aad
add
mov
dec
pop
loopne
jne
in
sub
inc
xchg
cmp
mov
enter
ret
in
fnsave
xchg
and
pop
mov
push
push
mov
cli
adc
push
mov
push
pop
or
icebp
into
mov
adc
push
mov
mov
repnz
loopne
aas
jb
test
ins
loope
or
add
pop
sub
mov
xor
xchg
xchg
fcomi
cmp
ins
or
rol
pop
aas
add
imul
(bad)
iret
push
test
cmp
xchg
add
movs
aas
xor
jne
out
or
movs
icebp
in
add
inc
ins
sbb
mov
jnp
pop
add
outs
mov
cs
dec
inc
and
sub
inc
imul
push
sbb
push
adc
dec
pop
pop
pop
nop
sbb
push
ja
test
mov
ds
int3
jno
jecxz
cmp
xchg
lds
push
pushf
aaa
sbb
push
inc
loop
fs
inc
aam
movs
sbb
inc
xor
das
iret
aaa
sub
scas
push
mov
push
repz
push
(bad)
pop
push
adc
stos
inc
aas
mov
dec
pop
jg
mov
pop
mov
ret
cmp
push
icebp
out
jmp
mov
pop
hlt
mov
inc
int3
lahf
xchg
jmp
fcmovbe
xor
push
xchg
and
mov
cmp
and
fdivr
stc
xchg
or
jbe
out
rcl
pusha
mov
lds
iret
(bad)
jl
imul
xor
inc
mov
pop
and
scas
loope
mov
scas
mov
and
es
mov
pop
scas
pushf
pop
shr
pop
mov
cld
loope
or
inc
mov
inc
dec
mov
ins
js
cmp
jg
cmp
sub
mov
sbb
punpckhbw
mov
and
xchg
adc
xchg
jmp
(bad)
lea
(bad)
jbe
cmp
loop
and
call
sbb
add
movs
dec
xor
imul
fsub
out
and
push
mov
mov
lea
or
lods
aam
dec
push
sbb
lea
dec
fist
aaa
pop
lods
aas
(bad)
dec
or
movs
(bad)
push
outs
out
movs
and
lahf
push
iret
cmc
jns
sbb
xchg
ficomp
pop
or
jmp
fild
dec
(bad)
rol
add
cmps
pop
imul
loop
dec
mov
jb
stos
es
adc
dec
pop
dec
pop
retf
dec
mov
inc
lock
and
shl
(bad)
pop
int
and
pop
loopne
fadd
fild
fimul
lds
icebp
in
(bad)
sbb
mov
scas
pop
fmul
mov
(bad)
mov
push
leave
test
popa
into
sub
shr
nop
dec
in
cli
adc
sbb
or
add
stc
std
cmps
cs
xchg
out
(bad)
mov
(bad)
in
clc
dec
ret
push
int
shl
add
dec
cmp
cld
fwait
adc
gs
pusha
pop
add
call
jne
sbb
cmp
sub
jmp
jne
pop
fwait
inc
in
syscall
pop
jmp
and
cmp
in
sbb
leave
aad
cmps
imul
leave
jg
inc
mov
stos
loop
std
cmp
ins
jns
ins
in
xlat
inc
sbb
sub
popa
ins
add
pusha
xor
outs
nop
cmp
mov
shl
stos
inc
outs
mov
jae
out
sahf
ins
push
mov
sar
sub
sub
fst
dec
and
ins
mov
jle
aas
mov
mov
pop
stc
into
xchg
push
mov
xor
sbb
sub
xor
shl
xchg
loop
call
stos
jmp
stos
sub
cmps
or
loopne
das
fwait
inc
pop
mov
into
es
fstp
mov
pop
xor
sti
xor
adc
in
test
clc
dec
in
sub
loop
pop
xor
imul
lods
add
push
rcr
mov
dec
fcomp
jg
imul
cmp
cdq
cmp
test
push
pop
nop
mov
mov
test
(bad)
jbe
mov
js
and
clc
mov
dec
clc
movs
mov
arpl
sub
or
push
fdiv
xchg
inc
or
push
jmp
inc
jmp
push
push
cmps
xchg
jp
clc
movs
sbb
pop
dec
shl
fisub
sub
ins
cmp
xor
(bad)
ror
inc
push
sti
jmp
cmps
lods
sub
push
jns
and
xchg
into
adc
pusha
stos
and
adc
mov
lock
or
fnstcw
movs
call
jp
push
pop
cmps
lahf
inc
add
xor
mov
inc
add
mov
jnp
dec
push
repz
shl
or
mov
movs
adc
sbb
or
inc
movs
in
mov
xlat
jbe
inc
fucomp
adc
popa
xor
jo
or
idiv
mov
xchg
sub
lds
pop
dec
sub
pop
push
gs
jno
fnstsw
dec
popa
sar
lods
(bad)
push
aas
sbb
pusha
mov
movs
and
in
enter
shl
jne
inc
xchg
pop
xchg
gs
leave
sbb
icebp
into
mov
mov
ins
add
pop
mov
fs
mov
and
adc
rcr
mov
mov
or
xor
xor
inc
mov
add
sub
test
sub
test
dec
and
test
push
sar
inc
mov
xlat
imul
add
outs
out
mov
mov
out
jb
and
nop
repnz
les
mov
jge
pushf
inc
vphaddudq
pop
xchg
stc
cmps
mov
fs
fimul
mov
push
sbb
jmp
cli
mov
pop
repnz
int3
bound
pop
sub
sub
xlat
pusha
js
pop
lods
icebp
sti
push
cdq
push
push
add
sbb
sti
jae
shr
add
mov
retf
xchg
push
sub
jge
cmp
imul
push
xchg
aad
mov
dec
xchg
jecxz
jl
mov
mov
dec
mov
mov
mov
mov
out
ret
xor
sbb
and
scas
rcl
xchg
std
pop
sub
add
mov
aas
mov
xchg
(bad)
aas
iret
popf
jnp
fbstp
in
loop
mov
pop
mov
or
ret
push
xor
push
loope
jne
mov
mov
fsub
ins
jo
ins
inc
pushf
stos
cli
sbb
rcl
or
jno
push
add
jbe
push
je
arpl
pusha
fild
cli
mov
ret
inc
mov
(bad)
push
call
add
mov
mov
mov
ret
fcom
mov
pusha
and
pop
xor
sub
jle
add
pop
pop
or
icebp
fdiv
es
mov
xchg
mov
mov
outs
test
push
call
mov
aas
popf
sub
outs
cmp
ins
mul
dec
(bad)
nop
(bad)
xchg
push
stos
in
adc
(bad)
cmp
jge
sahf
popf
or
(bad)
mov
xor
adc
mov
cs
sbb
inc
fld
leave
jbe
aas
xor
sar
ja
imul
popf
js
fs
stos
or
inc
adc
pop
in
jg
test
aaa
pavgw
xor
xor
pop
fs
hlt
pop
lea
cmp
push
repnz
dec
jmp
sub
jmp
inc
inc
cmp
pop
xor
add
inc
cmp
dec
jae
push
cmp
add
cs
and
(bad)
mov
pop
es
mov
xchg
xor
(bad)
movs
icebp
sub
jl
sar
test
call
jb
sbb
dec
dec
inc
and
sbb
sahf
xor
add
arpl
jp
or
inc
push
mov
test
aas
mov
enter
xor
add
or
in
inc
pop
neg
jo
popa
test
jg
xor
ds
adc
cli
repz
or
popa
out
jb
ret
xor
add
aam
aam
mov
shl
xor
popf
and
mov
dec
imul
jl
fdiv
rol
jecxz
retf
cmps
inc
outs
pop
cmp
cmps
jo
push
mov
dec
cmp
xchg
fdivr
clc
(bad)
rcl
ja
(bad)
jno
jmp
mov
inc
cli
dec
bound
rcr
jbe
jg
mov
(bad)
ficomp
or
pop
out
int3
std
xor
mov
shr
push
(bad)
push
adc
cli
jne
and
test
push
xor
cmp
xor
jp
daa
(bad)
pusha
sbb
mov
pop
dec
adc
and
sahf
sub
and
add
sbb
jl
aaa
pop
add
xor
repz
arpl
dec
sbb
in
mov
pop
xchg
mov
adc
adc
test
lods
inc
aas
repnz
mov
xchg
pop
cmps
adc
ret
loop
js
xor
xchg
mov
in
inc
cmps
cmp
add
test
test
sbb
mov
push
xor
and
cmps
les
imul
mov
sbb
out
sbb
fld
sbb
sbb
cmp
sbb
or
dec
push
dec
cmp
retf
xchg
fsub
mov
call
lock
loope
cmp
sbb
add
push
(bad)
mov
fs
mov
fsubr
mov
ja
mov
sub
rol
sub
dec
ins
(bad)
sar
test
pop
push
pop
add
add
fcomp
dec
sub
inc
ror
sub
sbb
mov
dec
push
dec
jmp
mov
cmps
popf
add
mov
mov
xchg
dec
xchg
mov
call
sub
inc
dec
mov
jle
cmp
jno
ror
jmp
out
xchg
inc
add
or
div
fcomi
cmp
mov
les
nop
dec
pop
sub
mov
imul
cmp
iret
icebp
cli
cld
mov
pop
ss
jecxz
lahf
or
imul
add
mov
mov
je
push
repz
cmps
adc
dec
mov
push
in
push
push
push
mov
(bad)
in
mov
aaa
ins
icebp
iret
cdq
mov
jge
popa
sub
dec
mul
fimul
xor
aas
fld
mov
pop
daa
pusha
scas
pop
shr
xor
aaa
cmps
call
fld
stos
pop
sub
pop
loope
adc
jo
cdq
cmp
je
sub
ror
mov
sub
cmp
xor
xor
push
lods
xchg
das
scas
clc
mov
ins
pop
or
lahf
sti
not
mov
mov
(bad)
fdivr
cs
sti
in
movs
cmc
mov
adc
and
adc
push
jg
pusha
jl
outs
(bad)
js
jge
add
cmps
mov
movs
in
xor
ins
jl
(bad)
or
es
sub
pop
sahf
fs
sub
in
mov
xchg
int
lock
pop
gs
movs
imul
shl
or
stos
inc
in
aad
push
pop
sahf
addr16
in
cli
mov
mov
push
rol
inc
sub
aad
mov
imul
or
jl
js
addr16
fs
ins
push
ins
je
xlat
xchg
jne
jbe
xor
or
add
fcmovne
jns
inc
cmp
stos
loopne
pop
dec
xor
dec
and
cmps
mov
mov
sti
fwait
ror
pop
int
lods
fdivrp
in
hlt
mov
or
(bad)
xchg
shl
ins
js
(bad)
aaa
in
mov
xor
xor
(bad)
xchg
fmulp
(bad)
cld
xor
addr16
cmp
out
xor
xchg
add
sub
push
mov
cmp
sbb
sub
out
fnstenv
xchg
pop
out
inc
sub
rol
inc
and
cwde
js
push
pop
push
(bad)
pop
or
rol
cli
cmp
xor
iret
fisttp
imul
lods
lods
test
in
jg
(bad)
jge
push
sub
add
mov
inc
inc
pop
cmp
test
sub
cmp
xchg
mov
sbb
fadd
scas
lahf
shr
ret
push
scas
fnstenv
adc
jno
(bad)
fnstenv
movs
imul
sahf
retf
out
xor
sahf
ja
xchg
jge
fsubp
push
movs
adc
jle
cs
fiadd
mov
push
xchg
nop
retf
push
lods
mov
pop
(bad)
fdiv
mul
lods
neg
add
jmp
repnz
(bad)
mov
ins
clc
xlat
test
xchg
into
gs
fs
cld
cmp
jne
mov
stc
cld
mul
stc
daa
cmp
out
ret
aam
retf
loop
xor
(bad)
jno
dec
lods
pop
sub
js
xor
out
jb
jns
ins
lods
retf
push
xchg
loop
sbb
mov
aad
add
call
aad
and
loope
inc
mov
aaa
sbb
sbb
inc
mov
dec
mov
std
xor
push
pushf
aam
xchg
call
scas
cs
cs
mov
mov
jae
xor
mul
shr
inc
stos
mov
cmp
jnp
push
add
sbb
pop
mov
jne
imul
dec
or
push
sbb
loope
int3
das
pop
pushf
xchg
xor
mov
ins
sar
mov
mov
enter
mov
jl
cmp
aad
xor
jg
mov
(bad)
outs
dec
ds
mov
or
or
mov
es
(bad)
mov
daa
dec
popa
pushf
fld
and
mov
adc
sbb
movs
stos
ficomp
sbb
addr16
int3
cmp
sub
daa
and
pop
mov
pop
push
repz
in
je
imul
mov
movs
push
fsubr
ss
out
xor
xor
or
inc
ss
sbb
(bad)
jle
fnstcw
pop
call
js
je
pop
or
ret
push
jne
stc
and
stc
mov
add
rcr
mul
mov
jge
(bad)
sbb
mov
fwait
xchg
and
retf
out
(bad)
mov
cmc
sbb
stos
outs
cmp
sti
popa
fwait
dec
shr
dec
loop
sbb
(bad)
popf
mov
cs
pop
std
mov
xor
pop
xor
sti
inc
sub
mov
sbb
iret
jecxz
push
xor
add
or
rol
pop
mov
clc
cmp
ja
dec
int
jg
jns
aad
loope
pop
in
sbb
add
jp
xchg
int
mov
add
cmp
imul
in
mov
mov
push
fs
leavew
loop
xor
dec
add
pop
test
arpl
push
and
inc
out
and
mov
gs
jno
pop
ret
push
cmc
cli
imul
hlt
inc
dec
mov
mov
std
pushf
loop
cmp
js
jg
sub
aaa
test
fldcw
in
jecxz
pop
cmp
pop
mov
dec
gs
xchg
retf
or
add
mov
pushf
clc
cli
rol
dec
inc
js
mov
cmps
nop
add
int
add
mov
dec
pop
add
stos
mov
fadd
(bad)
scas
pop
jbe
push
clc
xchg
xchg
pop
movs
test
shl
js
cmps
aaa
inc
add
mov
mov
mov
pop
mov
in
arpl
push
outs
(bad)
mov
in
ret
jmp
imul
xchg
mov
dec
ret
and
xor
jo
mov
push
inc
add
movs
daa
lods
pusha
retf
xor
enter
mov
dec
pop
jmp
xor
enter
mov
cdq
cld
std
pop
in
inc
inc
loopne
pop
mov
sahf
cmp
adc
rcl
mov
jmp
(bad)
mov
pop
or
retf
js
sbb
aad
mov
push
push
test
mov
xchg
jmp
aam
mov
clc
xchg
push
jge
jecxz
daa
(bad)
sub
das
pop
add
xchg
movs
outs
mov
or
or
imul
add
mov
in
nop
jg
mov
daa
jmp
and
popf
in
xor
or
popa
jmp
inc
xrelease
xor
mov
ds
inc
jmp
imul
jecxz
xchg
mov
scas
ret
and
std
(bad)
jp
icebp
xchg
sbb
out
xchg
inc
or
adc
push
iret
jge
and
inc
pop
cmp
mov
xchg
jmp
pop
ret
cmps
sub
ins
xchg
fucomip
enter
xchg
add
loop
into
jno
test
je
xchg
js
mov
nop
std
shr
idiv
mov
cmps
cmp
les
pop
stos
sub
or
not
call
push
dec
dec
sub
fwait
in
push
test
jb
adc
pop
and
push
repnz
mov
or
pusha
xor
or
loop
mov
add
(bad)
and
and
nop
imul
dec
push
or
cld
je
das
mov
loopne
ins
ins
enter
cwde
(bad)
pushf
stc
push
mov
or
mov
ret
js
sbb
jp
pop
cld
es
test
scas
jmp
data16
push
mov
inc
or
mov
call
in
(bad)
fptan
aas
mov
test
pop
mov
mov
fnstenv
fbstp
clc
mov
mov
jp
adc
(bad)
or
ds
popf
mov
stc
(bad)
sbb
mov
mov
add
adc
pop
or
push
test
mov
aas
out
xchg
sub
loope
mov
fstp
mov
jnp
push
(bad)
inc
bound
test
leave
xchg
pop
adc
pop
mov
dec
test
jl
mov
pop
stc
xor
cs
or
or
jne
mov
cld
mov
jnp
sbb
test
jl
mov
enter
das
add
(bad)
mov
add
cmp
jle
fcmovu
sub
inc
loop
sub
nop
cmp
aam
mov
jne
push
in
mov
loopne
xchg
pusha
inc
fdivr
scas
outs
fild
push
lock
fs
and
outs
xor
xchg
pop
in
(bad)
sar
cmc
ja
or
lods
call
push
pop
push
imul
or
push
jmp
fisubr
aas
pop
int
popf
aas
inc
mov
and
icebp
xor
and
je
mov
push
xor
sbb
sub
lahf
xchg
mov
adc
in
sub
push
cmps
xchg
pop
push
scas
xlat
push
cli
mov
aas
rcl
sbb
push
sub
fwait
ins
jmp
std
jnp
inc
sub
dec
arpl
mov
xchg
mov
adc
adc
mov
jmp
dec
xor
test
mov
mov
mov
neg
(bad)
fadd
xchg
xlat
mov
in
cmp
hlt
pop
sbb
push
xchg
int
cmp
sub
(bad)
mov
adc
imul
shr
add
sti
cmc
push
inc
fld
icebp
add
inc
out
outs
or
clc
sti
push
neg
leave
mov
ja
pop
inc
xor
add
mov
sbb
shl
sub
inc
rcr
push
movs
mov
dec
and
cmp
jp
sar
push
push
xlat
popf
je
and
jns
and
ret
imul
cs
bound
ror
pusha
mul
dec
jmp
aas
pop
mov
xor
jae
add
xchg
add
stos
mov
scas
outs
fld
jb
ficomp
aas
cdq
mov
sbb
pusha
cmp
xor
mov
jmp
add
cmps
not
(bad)
cli
mov
push
mov
dec
sbb
cwde
jl
dec
jnp
ja
imul
pusha
pop
ds
or
add
ins
outs
cmp
pop
hlt
movs
push
and
imul
fdiv
xchg
nop
enter
aaa
sub
cmp
sahf
sar
or
add
movs
dec
sbb
fwait
cld
sbb
pusha
sub
mov
pop
aaa
ss
aad
push
repz
xchg
and
aas
out
inc
mov
mov
cli
ins
and
data16
frstor
aas
bound
stc
push
pushf
and
int
adc
mov
call
mov
stos
jb
adc
mov
in
jo
push
jle
xor
hlt
arpl
jno
cld
mov
bound
dec
shl
std
pushf
jecxz
jmp
mov
or
into
sahf
dec
mov
sub
scas
and
jo
movs
pusha
ror
(bad)
fs
in
rcl
retf
in
and
xor
mov
jo
lahf
mov
xor
test
jno
(bad)
jmp
pop
add
cmp
dec
gs
lods
fwait
dec
cmps
aas
pop
mov
movs
adc
sub
call
xor
mov
mov
and
cdq
mov
rcr
inc
test
imul
lahf
sub
and
push
sbb
jg
mov
add
sub
ins
ret
rcl
inc
and
lahf
mov
fbstp
into
adc
mov
test
xchg
sbb
out
cmc
sar
imul
jno
xchg
lds
push
bound
in
mov
(bad)
test
jo
xchg
lods
test
push
inc
inc
std
mov
jg
out
loop
xchg
push
inc
mov
pusha
call
mov
stos
or
sbb
cli
cld
mov
xlat
mov
mov
mov
push
dec
mov
aad
imul
mov
addr16
scas
pop
mov
loope
jle
xor
int3
adc
popa
inc
mov
inc
(bad)
cld
enter
int3
clc
adc
(bad)
sub
imul
pop
ja
push
(bad)
mov
push
add
dec
and
retf
jecxz
ret
xchg
int
mov
(bad)
data16
jg
xchg
stc
jg
call
sub
mov
popf
sub
xor
test
aad
cmc
lahf
mov
xor
test
gs
loope
sub
cmp
inc
push
mov
and
inc
jl
gs
jl
push
popa
or
je
push
lods
mov
ret
popa
loopne
or
cli
or
dec
sub
push
sbb
jle
arpl
lock
jnp
mov
mov
(bad)
mov
xor
mov
cli
or
or
stos
stos
cli
hlt
mov
push
lods
mov
xor
cld
mov
data16
adc
sbb
std
fist
jo
retf
(bad)
cld
mov
bound
mov
adc
xor
or
sbb
ds
aam
test
std
mov
inc
je
sbb
(bad)
fistp
pop
push
inc
mov
popf
xchg
fdiv
dec
mov
mov
add
int
jno
cli
cmc
dec
and
nop
push
xor
add
pop
in
jg
sbb
js
outs
cmps
jno
out
push
adc
mov
imul
fild
cwde
(bad)
in
shl
ror
call
add
jecxz
shl
(bad)
xrelease
push
(bad)
ret
jno
lods
rcr
icebp
jnp
mov
lahf
inc
call
ds
inc
imul
mov
ffree
pop
pop
ins
outs
cli
mov
mov
(bad)
loopne
(bad)
dec
dec
pop
test
mov
adc
pop
in
test
outs
das
outs
jp
inc
cld
jbe
xchg
sub
jp
ret
jbe
data16
add
mov
push
sti
push
sub
ss
mov
mov
dec
mov
push
fld
je
jmp
stos
fdiv
xchg
xchg
lock
test
bound
inc
xor
in
cmps
push
sub
sub
adc
push
out
mov
je
(bad)
mov
push
add
mov
stc
cmp
icebp
xor
dec
pushf
and
push
enter
inc
mov
jns
and
movs
mov
add
sbb
sub
push
test
mov
clc
fsubr
xchg
pop
xchg
adc
inc
cmp
popf
pop
and
nop
and
add
mov
and
call
add
push
jp
adc
adc
adc
dec
out
stos
outs
shr
lahf
and
or
push
in
test
sbb
movs
dec
js
cli
adc
fild
aaa
adc
mov
and
stc
cmp
in
push
dec
xchg
sub
dec
inc
adc
fcom
sbb
aaa
adc
les
or
sub
ds
loopne
cmps
lods
sar
movs
xor
cmps
pop
or
imul
std
neg
mov
pop
or
push
shl
inc
arpl
add
push
mov
fcomp
and
ds
int
fwait
xchg
cdq
mov
jg
je
call
loop
mov
retf
or
rcl
lock
aas
sar
imul
arpl
adc
ins
test
add
(bad)
jns
es
add
into
inc
arpl
inc
mov
xor
mov
out
aam
icebp
(bad)
mov
push
inc
fsub
sar
lods
(bad)
aad
xchg
mov
in
xchg
cmp
ret
movs
stc
adc
clc
ret
add
and
mov
(bad)
mov
dec
xchg
or
or
rcl
fadd
jle
sti
push
inc
stc
sbb
ror
and
pop
inc
dec
pop
push
popf
push
and
and
mov
loop
pop
and
fcom
call
aam
jmp
and
fmulp
data16
in
xchg
loope
js
or
add
cli
mov
dec
cmp
push
or
dec
jp
cwde
(bad)
adc
test
or
jnp
outs
jl
imul
stos
xor
xor
jae
jp
xchg
or
jmp
mov
pop
psrad
pop
push
loopne
push
stos
cmp
shl
bound
and
mov
add
xor
iret
mov
pusha
mov
jmp
mov
dec
or
mov
or
aad
out
mov
lock
xchg
arpl
jo
mov
sub
and
sti
or
sub
xor
or
jno
jmp
mov
fcomp
loopne
ror
scas
pmaxub
jg
push
iret
in
and
packuswb
fidiv
fnstcw
pop
or
pop
sbb
out
movs
cmp
adc
arpl
out
out
lds
and
pop
or
jecxz
push
xor
sbb
test
test
mov
pop
mov
jb
out
icebp
test
jno
arpl
lds
jge
lock
movaps
push
or
(bad)
cmc
and
mov
sub
inc
push
fst
fadd
dec
or
fmul
dec
add
add
xchg
xlat
(bad)
jle
jge
cmc
in
push
mov
shl
and
pop
dec
rcr
es
gs
nop
push
or
mov
lock
mov
push
int3
js
mov
or
add
leave
loopne
mov
mov
out
mov
leave
jmp
cmp
iret
int3
dec
mov
out
outs
push
cs
or
or
mov
mov
movs
sti
bound
repz
das
dec
xchg
in
fs
(bad)
jmp
ficomp
mul
inc
sti
(bad)
fstp
inc
jmp
mov
pop
clc
dec
mov
cdq
add
mov
mov
test
or
aas
mov
xchg
ror
data16
mov
pop
nop
and
icebp
dec
(bad)
nop
sbb
xlat
adc
dec
stos
jg
in
mov
ins
mov
dec
add
cmp
pushf
cmp
(bad)
mov
fsubr
daa
jg
inc
lahf
test
ja
sbb
and
retf
nop
out
sar
push
test
retf
and
inc
or
jle
(bad)
out
jecxz
icebp
aad
leave
in
fistp
clc
aas
dec
or
outs
jne
push
idiv
cmps
or
jmp
cmp
test
shr
ja
fidivr
pop
fld
push
cli
adc
sti
adc
xchg
xor
in
xor
std
pop
imul
rol
je
xchg
fld
(bad)
leave
mov
pop
push
int3
and
adc
xlat
mov
ins
(bad)
and
cmp
out
cmp
or
out
mov
mov
push
movs
dec
jg
push
add
inc
stc
jne
pslld
jne
cld
or
repnz
sub
nop
mov
cdq
dec
(bad)
sahf
push
call
xchg
call
std
push
push
dec
and
xor
cmp
fadd
test
aad
(bad)
xchg
inc
or
dec
(bad)
or
data16
aaa
outs
sub
mov
add
test
jae
out
add
mov
ins
fld
or
aad
mov
and
ror
jne
dec
mov
lods
cdq
clc
retf
bound
dec
pushf
xchg
push
ret
call
jnp
mov
loope
xor
lods
xchg
xchg
enter
dec
and
and
sbb
cld
push
mov
ja
and
or
mov
popf
xlat
jl
mov
out
les
push
ja
xor
xchg
addr16
add
outs
adc
inc
loope
mov
sbb
fs
inc
dec
(bad)
aas
fidivr
add
test
dec
xor
arpl
cmps
sbb
pop
adc
(bad)
ds
sbb
jo
fwait
cs
loop
js
jl
inc
add
scas
push
(bad)
scas
inc
dec
inc
mov
(bad)
adc
mov
leave
lea
les
icebp
clc
mov
shr
mov
out
mov
inc
add
mov
rol
addr16
pop
pop
sti
icebp
sub
mov
push
jb
gs
cli
out
rcl
in
mov
adc
mov
cdq
jle
shl
out
in
adc
mov
gs
sbb
cmp
sbb
lock
retf
and
push
dec
shl
push
xchg
jge
cmp
fild
pop
sub
push
xor
mov
sub
inc
sub
pop
sti
imul
mov
dec
cmc
idiv
adc
(bad)
jge
scas
out
jecxz
cwde
mov
(bad)
and
stos
mov
and
pop
add
dec
mov
test
sti
loope
sbb
cs
cmp
and
lods
aaa
rol
push
gs
ror
ins
push
mulps
sbb
test
fcom
adc
xor
or
inc
cmps
sbb
ss
fdiv
cmp
(bad)
aam
aaa
inc
mov
das
push
aaa
pop
mov
xor
cld
or
jmp
ds
push
jne
and
(bad)
xor
retf
test
dec
(bad)
jnp
das
cli
jmp
nop
push
jle
in
rol
(bad)
push
retf
movs
sub
cmp
pusha
lahf
inc
xor
ins
cwde
xchg
jg
mov
into
sar
inc
xchg
and
aaa
cdq
jae
lahf
pop
out
adc
aaa
lods
pop
push
ja
dec
sub
xor
push
add
jecxz
outs
cmps
or
outs
out
jmp
cmps
adc
shl
bound
cld
cli
shl
or
or
mov
call
out
das
pop
pop
popf
xor
sbb
sbb
not
out
sbb
dec
sti
fadd
jg
test
jge
idiv
das
cld
jmp
mov
aas
rol
push
inc
xor
mov
xor
add
lods
or
addr16
pop
or
mov
hlt
jo
adc
add
pop
jb
push
mov
cmp
mov
dec
jge
nop
shl
adc
loop
ins
clc
jmp
dec
mov
rcr
add
adc
int
inc
mov
mov
and
out
(bad)
mov
(bad)
jecxz
mov
xchg
adc
adc
jmp
icebp
shr
mov
movs
stc
dec
aad
fist
jecxz
jo
mov
clc
xor
(bad)
sub
xor
add
std
jp
dec
mov
int3
call
(bad)
dec
jl
xchg
sar
sbb
out
repnz
xchg
sub
aad
call
rcr
xchg
repnz
test
adc
or
loopne
jl
jmp
mov
or
pusha
mov
add
mov
push
pop
adc
sti
jno
inc
out
loope
sahf
mov
push
imul
mov
xchg
adc
icebp
je
dec
(bad)
mov
movs
cmp
cmps
jg
loope
pop
jecxz
jge
cmp
jmp
cmc
cld
jae
mov
dec
or
fimul
jnp
enter
rcr
(bad)
adc
icebp
psubsw
dec
hlt
or
jne
in
xchg
stos
jmp
aas
jp
lea
sub
pop
xchg
pushf
mov
fisub
cmps
ss
loopne
fsubp
adc
mov
les
fld
push
xchg
xchg
add
pop
add
adc
inc
stos
int
xor
and
clc
jl
(bad)
mov
outs
ds
js
dec
sub
outs
enter
add
jo
xchg
fcom
rcl
jmp
ja
pop
and
(bad)
mov
sub
imul
lahf
rcr
mov
pop
mov
cmps
mov
mov
aas
xchg
bnd
out
mov
jb
addr16
add
mov
jecxz
or
mov
adc
mul
xchg
(bad)
pop
inc
xor
sbb
jb
add
cmps
loope
fimul
loopne
sar
shl
cdq
lods
addr16
fist
jnp
and
daa
fs
fwait
mov
xor
inc
sti
aaa
cmps
push
mov
inc
mov
cmp
test
arpl
push
mov
cmc
jmp
mov
push
and
std
inc
cs
xlat
aad
inc
jmp
pushf
test
retf
loopne
mov
sbb
sti
movs
mov
(bad)
test
rcr
pushf
movntq
or
mov
(bad)
dec
cwde
xchg
xchg
ret
or
rol
pop
pop
push
shl
mov
cmp
lahf
pop
mov
or
js
and
(bad)
sbb
inc
pop
inc
sbb
mov
xchg
xchg
imul
int
cmp
inc
and
ret
push
push
nop
test
dec
pop
cmp
add
push
imul
add
mov
and
sti
inc
cmp
jg
movs
mov
mov
jecxz
push
adc
jmp
xchg
add
loope
sti
icebp
icebp
in
cmp
sbb
pop
inc
(bad)
sbb
push
pusha
push
jecxz
add
mov
retf
inc
idiv
leave
movs
retf
xor
loop
test
mov
shl
mov
ret
jmp
sahf
mov
paddb
push
std
or
neg
shr
sbb
movs
add
sbb
add
adc
sbb
out
pop
jnp
inc
ret
lods
imul
sbb
cmc
jecxz
and
fbld
pop
sar
cld
mov
and
scas
sahf
repz
mov
cmp
movs
les
mov
jl
xor
xor
push
inc
jo
mov
stos
cwde
call
fldenv
popf
ds
sub
xchg
pop
or
push
dec
xor
pop
jno
dec
movs
jo
sub
fbld
jge
int
div
jmp
in
clc
sub
lds
imul
imul
lods
xchg
mov
pop
dec
sbb
mov
xor
ins
push
pop
jp
dec
rol
pop
jns
aad
(bad)
cmps
sbb
cld
or
lahf
and
xchg
fisubr
loopne
ret
bound
neg
cmp
retf
out
ds
xor
mov
push
add
jle
rol
fwait
mov
adc
in
addr16
dec
dec
in
mov
fwait
js
es
adc
cmp
push
xchg
cmc
std
loope
js
sar
xor
jg
fwait
std
add
inc
lahf
rol
loopne
add
add
push
jnp
jg
jnp
ret
jnp
xor
push
sub
push
adc
rcr
mov
pop
add
retf
add
xor
(bad)
test
(bad)
xchg
cmp
xor
add
mov
push
jecxz
inc
or
sub
push
mov
cli
push
sbb
mul
dec
mov
sbb
out
mov
dec
cli
sub
inc
loope
repnz
adc
cmp
mov
js
push
jnp
or
shl
xor
xlat
int
and
jmp
and
in
(bad)
xchg
(bad)
lahf
jecxz
aad
js
add
sub
or
pop
jp
sbb
(bad)
xor
cli
es
jmp
jle
push
rcl
ja
jg
(bad)
jbe
(bad)
sub
unpckhps
fcomp
mov
mov
pop
cs
cli
rol
cmp
les
lahf
rcr
std
je
sbb
in
ret
arpl
mov
push
cmp
fistp
in
dec
jg
add
push
xor
add
mov
sbb
(bad)
mov
pop
mov
data16
fisub
(bad)
jle
cmp
cmp
clc
jmp
and
fadd
push
or
cmp
sbb
push
out
xor
ror
pop
jl
rep
in
cmps
mov
xrelease
xchg
icebp
mov
enter
inc
ss
adc
jae
xchg
jecxz
cmps
push
xor
xor
jl
mov
mov
ins
lods
xchg
push
cmp
xlat
daa
pop
jnp
cmp
movs
iret
jl
sbb
out
push
ds
jge
adc
lods
stc
dec
mov
out
or
add
(bad)
in
fiadd
inc
push
jnp
call
lds
jg
(bad)
sub
neg
add
xor
inc
imul
call
jmp
daa
test
pop
adc
add
or
xor
mov
mov
mov
idiv
xchg
xchg
sub
sbb
retf
es
(bad)
add
aam
push
pop
in
mov
xchg
sub
jl
(bad)
mov
adc
cmp
dec
idiv
cmp
cmp
mov
mov
outs
cmps
stos
add
dec
pushf
and
fcmove
std
inc
jge
pop
mov
icebp
loope
lock
fstp
test
outs
mov
push
js
not
xor
cmps
sub
and
(bad)
(bad)
xchg
shl
out
ret
sub
dec
inc
inc
add
mov
sbb
rol
add
loope
xchg
loope
js
dec
stos
xchg
inc
and
lock
or
int
mov
div
loopne
push
or
out
sub
jge
mov
retf
sti
clc
inc
mov
sbb
cld
enter
add
cs
out
fidiv
pop
fst
test
test
mov
xlat
(bad)
fucom
jno
imul
fistp
sbb
imul
loopne
adc
js
sub
int
pop
retf
mov
add
pop
mov
iret
fs
push
scas
clc
dec
dec
dec
clc
leave
repnz
(bad)
fs
mov
movs
std
ror
jo
add
fwait
int
jnp
cmp
int
cld
dec
adc
daa
xchg
xchg
mov
sub
ret
jmp
(bad)
into
fistp
mov
jmp
jno
push
sar
into
hlt
stc
jmp
xchg
hlt
inc
cmps
dec
pop
sahf
cmc
pop
jg
imul
sbb
ins
jp
cmps
add
dec
pusha
mov
sti
xchg
daa
push
adc
aas
mov
addr16
sub
mov
cwde
dec
mov
add
mov
scas
fdiv
jae
addr16
xchg
sub
inc
push
push
ficom
jge
clc
xor
pmulhuw
jg
or
mov
das
mov
sbb
daa
jbe
and
gs
psubsw
mov
scas
xor
call
enter
pop
adc
jl
stos
fcmovu
push
mov
inc
daa
mov
sbb
fdivr
inc
lods
cmp
or
retf
xchg
adc
xor
addr16
shl
inc
pop
pop
pop
ds
daa
jle
enter
fmul
inc
sub
xchg
sti
dec
mov
jl
fstp
cmps
fistp
or
or
lock
jle
(bad)
and
addr16
aas
mov
enter
cmp
out
add
jle
adc
jg
fsin
(bad)
das
rol
jae
pop
push
test
xchg
sbb
mov
int3
jecxz
and
mov
leave
fisttp
mov
jg
ret
mov
pop
pop
pop
in
fsub
fld
adc
in
dec
adc
or
nop
inc
mov
call
adc
lods
and
sbb
push
and
sbb
(bad)
movs
cmc
aas
xor
xor
not
lock
xchg
repz
pop
xor
mov
rcr
in
jge
icebp
repz
lahf
hlt
cmc
cmp
pop
ficom
pop
xor
sub
jp
sbb
sub
sbb
out
cli
mov
scas
scas
popf
out
and
loope
push
mov
ja
push
mov
mov
pop
pop
inc
or
or
mov
dec
sub
shl
jmp
loop
mov
cwde
pop
add
rep
dec
aas
add
dec
(bad)
(bad)
call
(bad)
mov
jmp
movs
out
sar
cld
shl
xor
mov
mov
jo
cmp
call
and
jl
jmp
jecxz
inc
push
add
je
push
mov
push
xchg
sti
mov
jnp
jl
repnz
(bad)
jle
shl
jae
mov
ret
repz
pop
mov
and
test
mov
pop
mov
mov
out
pop
pop
cmp
test
mov
fadd
push
repz
push
adc
retf
and
shr
push
lods
inc
sbb
leave
(bad)
lea
pop
pop
mov
cmp
push
push
mul
test
pop
out
mov
fst
jb
mov
sar
sar
sar
stos
or
fcomp
rol
cmps
iret
xor
jg
arpl
inc
das
repnz
jmp
dec
mov
inc
mov
mov
mov
and
pop
movs
or
pushf
mov
in
add
ins
xchg
or
fdiv
ss
mov
mov
push
jmp
xchg
add
xchg
out
sbb
adc
dec
xor
sbb
lock
jl
xor
loopne
inc
jb
retf
je
pop
add
pop
dec
shl
test
adc
mov
gs
dec
cmp
mov
inc
cli
inc
das
fs
ficom
and
ins
xchg
xor
add
add
mov
sbb
loop
je
stc
cmps
sub
jl
out
mov
pop
daa
mov
(bad)
sbb
cmps
dec
xlat
sar
push
dec
stos
std
xchg
push
sbb
and
shl
push
and
mov
and
inc
movs
mov
mov
mov
mov
xchg
push
push
sub
lea
or
or
test
add
cs
jge
popf
ficom
out
std
out
sar
and
mov
int3
jg
stos
or
pop
sub
int3
imul
mov
xchg
ds
(bad)
push
ins
xchg
ja
cdq
mov
jae
in
test
add
xchg
(bad)
cli
movs
jmp
popa
out
in
loop
and
and
rcr
xchg
add
xor
shl
lds
dec
or
jno
mov
mov
add
jb
mov
(bad)
push
aam
es
leave
jge
fucomip
in
ret
push
xor
iret
sub
inc
hlt
xchg
enter
lahf
inc
mov
icebp
sbb
or
rcl
jo
adc
gs
in
and
stos
in
ds
mov
icebp
mov
js
xor
lods
push
dec
jl
data16
push
xchg
sahf
stos
daa
ret
mov
or
je
mov
cwde
lea
add
cmp
sub
sbb
cmp
jl
xor
sub
retf
sub
mov
shr
nop
lods
add
cld
cmp
and
je
jno
out
call
ror
jecxz
sub
and
enter
pushf
mov
jecxz
std
inc
or
ret
and
mov
rol
stc
scas
or
loopne
(bad)
cdq
push
adc
int3
adc
sbb
jnp
test
in
fmul
pusha
movs
inc
rcr
adc
nop
loope
ret
or
jp
lock
jle
sub
fwait
sbb
sub
xchg
nop
mov
mov
sub
mov
and
mov
daa
enter
xchg
test
or
xor
cmp
test
adc
and
mov
ror
ja
mov
out
mov
(bad)
(bad)
fnstcw
jle
push
mov
pushf
test
cdq
ret
fiadd
inc
pop
rcr
fcomp
retf
cmp
pop
inc
xchg
fdiv
je
cdq
enter
ins
loopne
dec
icebp
out
push
dec
jbe
add
and
add
xchg
push
nop
or
loop
cmps
enter
and
bnd
lahf
lahf
xor
push
(bad)
hlt
jne
sub
call
xor
repz
cmp
bound
ja
out
mov
aam
ficom
mov
sub
pop
or
sar
xlat
(bad)
(bad)
scas
in
mov
enter
pushf
cmp
cmp
ins
inc
and
adc
retf
ret
aam
(bad)
outs
scas
or
lods
mov
dec
xchg
inc
inc
mov
lods
and
(bad)
add
je
sbb
push
sub
stc
xchg
sub
nop
push
mov
or
xor
adc
bound
or
fild
mov
mov
outs
sbb
adc
int
test
push
jp
ins
pop
jmp
push
add
or
xor
mov
cmp
mov
and
inc
jae
adc
xchg
pusha
adc
jne
or
cdq
(bad)
cmp
ret
ins
cmp
(bad)
scas
sti
sti
test
in
jno
loope
sbb
lods
and
cmp
jns
jle
ret
(bad)
fdivr
push
adc
bnd
fcomp
mov
test
mov
cmp
(bad)
rcr
daa
sti
cli
les
ss
pushf
dec
mov
ja
ret
add
cmp
push
out
cmp
cmp
(bad)
sub
add
fcmovu
mov
loopne
int
xchg
sub
sub
jo
pop
cmp
push
mov
and
adc
std
jbe
add
add
xchg
int
add
repz
xchg
inc
or
out
add
hlt
shl
xor
mov
stc
pushf
pop
jns
pop
sbb
neg
(bad)
out
xchg
scas
stos
mov
sar
out
rol
mov
pop
or
add
(bad)
sub
fcomp
pusha
and
xor
dec
(bad)
push
jnp
mov
and
xchg
lahf
jl
mov
pop
enter
push
in
dec
fstp
ret
cdq
cs
fild
repz
imul
ret
jae
mov
aas
retf
ret
dec
dec
mov
inc
adc
adc
loopne
enter
out
es
sub
jb
xor
adc
sahf
lahf
push
sti
cmp
daa
pop
jns
ror
xchg
or
cli
(bad)
xor
jmp
jbe
mov
jbe
cld
mov
sub
sub
clc
xchg
push
addr16
xor
adc
lock
jne
xor
jge
ins
mov
xor
es
das
imul
sbb
loopne
scas
bound
push
mov
ret
push
jle
in
push
xor
push
imul
or
pushf
sub
das
lea
fcom
ja
add
mov
or
push
mov
push
sbb
lock
movs
dec
xor
add
fsubr
(bad)
push
sar
call
dec
cmp
cmp
pushf
out
pop
ret
and
stc
bound
lds
(bad)
push
jg
test
xor
mov
fidiv
pop
sbb
fnstenv
push
enter
fisttp
mov
push
sub
pop
xor
adc
mov
push
push
cmp
inc
cmp
sub
mov
mov
fisttp
jnp
std
jmp
cmp
imul
retf
sbb
rcl
mov
cmp
shl
aad
test
jmp
out
gs
sub
sub
addr16
push
div
jecxz
pop
xchg
inc
outs
retf
add
sbb
pop
(bad)
nop
dec
xchg
push
jg
ds
sbb
iret
call
mov
mov
xor
ret
sbb
lahf
loope
fidivr
pop
std
in
cmps
jns
out
ds
pop
or
sbb
scas
push
fmul
cmp
push
aaa
inc
cmp
push
test
xor
and
add
les
int
pop
imul
mov
mov
fisttp
jmp
mov
and
fwait
xor
fnstenv
std
pusha
jmp
mov
leave
xlat
aas
mov
inc
and
add
lahf
pop
cmp
sbb
and
test
dec
daa
mov
fwait
repnz
ret
fisttp
shl
inc
xchg
into
push
icebp
clc
mov
cld
das
mov
loopne
(bad)
mov
push
cmp
push
xchg
cs
mov
push
mov
sbb
mov
pop
add
mov
inc
sbb
iret
sub
scas
cmp
xor
cmp
push
test
or
or
in
daa
push
pop
(bad)
lea
in
ret
xchg
push
je
pusha
shl
rol
bound
lds
cdq
cli
out
push
iret
sub
shl
out
or
sub
cwde
loop
(bad)
test
push
ja
test
push
xor
sahf
xchg
and
sbb
cdq
sahf
add
add
dec
push
add
icebp
movs
pop
cwde
push
xor
mov
mov
push
adc
test
out
fiadd
neg
les
sbb
cmp
daa
fcomip
xchg
adc
cs
and
or
mov
cmps
mov
sub
pop
jl
or
mov
mov
pop
xchg
xchg
xor
mov
pop
das
push
xlat
aad
lods
mov
rol
jbe
clc
clc
sbb
out
pop
sub
sub
jecxz
aas
cmp
and
cmc
sbb
mov
les
jnp
sub
icebp
shr
movs
arpl
jecxz
xchg
enter
leave
jg
cmps
fist
(bad)
push
jg
test
jno
mov
daa
rcr
test
cmc
or
adc
retf
adc
dec
(bad)
add
sar
(bad)
loopne
int
and
loopne
sbb
cmp
adc
ds
add
and
int3
(bad)
mov
adc
loope
xor
mov
das
jb
adc
inc
mov
in
push
jp
in
stc
jnp
jecxz
test
mov
loopne
or
lds
dec
sahf
mov
push
setle
add
fst
repnz
xor
lods
jmp
rol
test
addr16
out
mov
add
cmps
sti
jl
fstp
jmp
mov
and
dec
adc
jno
jo
imul
dec
inc
xor
call
repnz
sub
int
jbe
mov
fld
addr16
xlat
add
sbb
retf
mov
(bad)
mov
push
repnz
cmp
jp
jle
sbb
fucom
call
fild
pop
sub
push
add
stc
enter
sti
or
cmp
fst
fdivr
addr16
dec
jae
mov
xor
mov
xchg
xor
push
outs
lods
gs
out
sub
sub
or
mov
(bad)
sub
js
inc
or
inc
dec
emms
sub
push
dec
pop
sub
sub
and
lock
out
cmp
sub
jnp
popf
mov
into
std
cmp
test
pop
jns
movs
aas
aaa
cld
pop
push
movs
xchg
push
push
add
not
push
out
push
pop
call
xor
mov
cmp
pop
and
aas
cmp
push
lock
cdq
push
cmps
or
xchg
loope
sbb
jae
rcr
push
xchg
or
mov
lahf
dec
enter
frstor
adc
pop
mov
push
or
fild
aam
(bad)
outs
and
bound
push
cld
pop
cmp
add
out
lahf
into
icebp
pop
push
cmc
stc
(bad)
xchg
stos
add
xchg
mov
jbe
(bad)
mov
arpl
dec
xor
dec
scas
mov
loope
rcl
pop
call
cmp
addr16
cdq
jb
int3
add
xor
outs
adc
ds
xchg
mov
jg
cmp
xor
add
je
xchg
or
jmp
or
mov
add
cld
cmp
mov
cwde
mov
sub
mov
(bad)
sub
outs
dec
repz
jge
jno
stos
add
ins
or
scas
(bad)
pusha
arpl
pop
lods
cmc
jnp
jb
test
mov
mov
mov
xlat
scas
pop
cmp
pop
popa
enter
jno
cmps
dec
sub
shr
sahf
jle
(bad)
jmp
xchg
cdq
mov
xchg
scas
add
icebp
push
inc
loopne
mov
ret
rol
enter
xchg
push
mov
dec
mov
movs
jmp
hlt
enter
mov
add
cmp
(bad)
xor
daa
xchg
push
xor
mov
repnz
inc
push
push
and
repz
repnz
or
inc
in
cmp
adc
mov
add
out
das
imul
sbb
mov
xchg
leave
pop
es
les
dec
and
cmp
dec
and
mov
cmp
jmp
xor
rcl
fisttp
(bad)
add
xor
mov
cli
cmp
pop
add
sbb
mov
inc
xchg
int
(bad)
jmp
jae
cld
jne
xor
push
enter
sub
push
cdq
pop
xor
add
cld
add
mov
ret
mov
test
sbb
rcl
pop
test
daa
movs
scas
iret
jle
adc
push
add
iret
daa
pusha
dec
shr
dec
dec
cmp
pop
mov
mov
dec
call
mov
sbb
xchg
xor
sbb
jbe
mov
mov
sub
mov
shl
pop
in
stc
sti
ja
inc
cmp
ret
ds
call
adc
jl
or
inc
(bad)
mov
hlt
mov
push
test
or
push
sti
clc
daa
adc
rcl
mov
idiv
mov
jb
xlat
(bad)
mov
fnstcw
or
cdq
inc
ret
pop
add
mov
sbb
and
jns
mov
mov
mov
push
mov
call
xor
xor
jecxz
dec
fsubr
ror
leave
out
push
pop
arpl
cmps
push
int
dec
cmp
sbb
xor
iret
jp
sbb
lea
cmc
jp
add
xor
or
xor
adc
push
push
sub
rcr
pop
or
and
adc
or
and
sbb
sbb
(bad)
fwait
dec
ins
in
cwde
dec
bound
mov
ss
retf
loop
aas
imul
loop
dec
push
add
mov
(bad)
jle
add
pushf
sub
pop
arpl
mov
leave
pushf
xchg
(bad)
and
shl
xor
into
or
sub
nop
mov
sub
mov
pop
add
mov
rdmsr
out
inc
cmp
jmp
xchg
leave
in
and
pop
nop
mov
xor
test
rol
dec
fst
rcr
jecxz
jbe
sti
int3
adc
push
fucomip
data16
mov
and
data16
leave
mov
pusha
(bad)
xlat
stc
cmp
inc
push
sbb
sub
add
std
fld
fimul
(bad)
out
iret
pop
es
arpl
fs
(bad)
fisubr
imul
pop
ins
or
loopne
add
bound
or
sub
adc
or
push
inc
shl
inc
mov
dec
ret
sbb
mov
test
ret
mov
lahf
out
out
enter
int3
movs
aaa
xchg
add
out
inc
sbb
pop
fnstenv
mov
ror
adc
movs
jne
inc
sub
stos
ja
data16
out
cmp
add
sub
jb
(bad)
sub
(bad)
popf
leave
in
iret
dec
inc
out
cmps
sub
sbb
fidivr
out
push
repz
push
sub
sti
dec
mov
sub
hlt
jae
sbb
adc
(bad)
fsubr
outs
ins
cmp
mov
sub
out
add
and
neg
fst
and
sub
hlt
mov
adc
inc
(bad)
outs
jns
div
(bad)
xor
dec
xchg
xchg
stos
add
xchg
popf
shl
xlat
xchg
rol
imul
pop
lods
js
retf
sbb
inc
xchg
stos
xor
test
movs
imul
arpl
imul
test
add
push
adc
xor
stos
add
push
add
lea
movs
imul
arpl
imul
les
and
add
add
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
and
push
push
and
add
add
add
pop
add
or
adc
(bad)
clc
(bad)
packuswb
or
dec
in
push
es
push
push
and
add
pop
and
push
into
xor
mov
pop
pop
jmp
jnp
(bad)
call
(bad)
idiv
xor
ret
call
adc
push
and
add
sbb
push
jg
cmp
lock
(bad)
std
ins
ins
(bad)
std
ja
(bad)
dec
imul
dec
dec
(bad)
(bad)
cmp
(bad)
call
pop
jp
add
add
add
sbb
or
cmp
cmp
(bad)
(bad)
cmp
(bad)
push
ss
or
add
inc
add
inc
and
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
sbb
dec
add
adc
push
ins
jmp
inc
inc
(bad)
std
ss
(bad)
nop
or
add
or
or
or
or
or
or
or
pop
std
push
add
dec
or
std
cmp
idiv
cmp
(bad)
jmp
and
arpl
add
add
or
add
add
lea
inc
(bad)
inc
(bad)
jmp
pop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
add
add
add
xor
(bad)
cmp
(bad)
(bad)
and
mov
jge
add
add
add
sub
push
rcl
fdivr
inc
inc
(bad)
(bad)
aas
aas
repz
adc
dec
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
jmp
sub
jmp
sub
inc
pop
sub
add
sbb
xchg
cli
push
push
(bad)
dec
(bad)
push
xor
std
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
pop
inc
add
std
and
xchg
(bad)
cmp
(bad)
std
sub
(bad)
or
ds
push
daa
add
add
add
pop
cmp
dec
(bad)
inc
(bad)
call
sbb
pop
pop
add
or
or
or
dec
or
dec
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
dec
or
inc
add
call
sbb
aaa
aaa
(bad)
jmp
out
push
push
dec
retf
es
add
dec
push
push
jne
dec
dec
icebp
inc
(bad)
ss
or
add
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
or
or
or
add
add
push
push
inc
std
xor
(bad)
jmp
out
call
adc
add
sbb
add
add
pop
sbb
xchg
cmp
scas
jmp
(bad)
inc
(bad)
call
push
std
pop
pop
add
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
or
or
push
std
or
or
push
or
std
or
or
or
or
push
push
add
or
and
std
sub
hlt
call
add
add
add
or
or
dec
(bad)
popa
(bad)
(bad)
dec
retf
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
pop
std
pop
pop
pop
dec
or
std
or
or
or
add
pop
push
push
std
sub
loope
sub
clc
call
sbb
cmp
add
aaa
adc
push
iret
push
push
(bad)
call
jmp
sub
add
add
or
or
or
or
or
dec
or
or
dec
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
and
jmp
std
jmp
and
add
add
add
add
add
jg
xor
in
inc
inc
cld
dec
(bad)
std
or
add
or
or
or
or
std
or
or
or
or
or
or
std
or
or
or
or
or
push
dec
or
std
pop
or
std
add
xor
std
add
xor
dec
or
std
pop
or
std
or
or
or
or
or
or
or
or
or
std
or
or
or
or
std
pop
or
call
sbb
call
pop
xchg
jmp
add
add
add
add
add
add
sbb
into
jmp
or
add
or
or
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
sbb
add
aaa
inc
or
es
mov
dec
pop
loopne
pop
outs
icebp
std
push
fs
es
add
push
std
push
or
or
or
or
or
or
or
or
or
dec
push
push
std
or
femms
dec
or
std
and
fwait
std
xor
(bad)
dec
or
add
add
add
add
add
add
add
push
add
xchg
or
dec
or
dec
or
dec
or
or
dec
or
dec
adc
or
sub
add
call
cmp
(bad)
cmp
dec
loopne
jl
(bad)
inc
sbb
dec
or
or
or
or
or
(bad)
ud0
push
push
call
adc
dec
(bad)
ud0
adc
dec
(bad)
call
push
in
add
add
add
adc
add
add
add
add
or
out
push
push
push
dec
push
push
dec
push
push
std
push
push
push
dec
push
push
std
push
push
push
std
push
push
or
dec
push
and
add
inc
call
movs
std
jg
(bad)
std
ins
jle
dec
sbb
add
cmp
std
add
inc
std
add
pop
call
test
adc
inc
add
pop
dec
push
paddw
adc
std
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
cmp
add
add
add
add
add
cmp
pi2fd
or
ud0
(bad)
paddw
(bad)
ud0
femms
std
(bad)
prefetch
or
std
or
or
std
add
icebp
inc
cs
add
dec
inc
and
pop
or
std
or
or
or
push
std
pop
pop
or
pop
or
inc
or
std
add
std
pop
outs
hlt
jmp
idiv
add
dec
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
sub
add
add
add
lar
add
adc
dec
push
push
call
adc
call
adc
call
adc
call
(bad)
ud0
unpckhps
or
inc
pop
pop
push
lahf
(bad)
(bad)
cmp
add
popa
inc
pop
sub
dec
pop
pop
inc
pop
push
inc
pop
pop
inc
pop
pop
inc
pop
pop
inc
push
add
inc
or
jmp
cmp
inc
push
xchg
dec
or
sbb
adc
adc
adc
adc
adc
adc
adc
pop
or
or
adc
dec
(bad)
paddw
adc
call
adc
std
adc
adc
movups
push
mov
call
std
add
inc
or
std
or
or
or
push
inc
pop
pop
std
or
or
or
or
or
or
or
push
push
add
std
pop
or
add
(bad)
(bad)
jp
(bad)
std
xor
std
add
dec
call
adc
std
adc
adc
pop
std
pop
pop
pop
call
adc
mov
add
add
(bad)
jo
adc
adc
adc
adc
adc
push
std
or
jp
pop
jo
std
js
(bad)
std
adc
pushf
inc
add
push
or
std
or
or
or
push
std
or
pop
std
pop
push
pop
dec
push
push
std
or
or
push
push
push
call
adc
std
adc
adc
adc
adc
sbb
sbb
adc
adc
add
add
pop
pop
or
inc
add
std
push
addr16
std
popa
je
inc
or
xor
pop
sbb
sbb
pop
std
sbb
sbb
adc
add
add
adc
call
adc
dec
adc
inc
or
dec
int3
inc
mov
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
inc
pop
pop
inc
add
adc
adc
sbb
pop
pop
call
sbb
push
push
push
call
sbb
call
sbb
jmp
and
call
sbb
inc
push
add
push
pop
or
pop
or
jmp
aaa
mov
call
push
mov
adc
call
sbb
call
sbb
call
push
adc
add
sbb
aad
pop
sub
push
or
sbb
movs
(bad)
jns
(bad)
std
dec
pop
(bad)
add
xor
pop
or
pop
pop
push
std
or
or
or
or
add
or
pop
jmp
and
std
adc
adc
or
or
or
or
or
std
adc
adc
sbb
sbb
sbb
sbb
sbb
and
std
or
or
add
or
std
add
xor
pop
adc
xor
dec
dec
std
sbb
std
sbb
adc
add
or
iret
add
sbb
dec
sbb
std
gs
inc
adc
push
or
std
or
or
pop
pop
pop
std
pop
pop
push
dec
or
std
or
or
or
or
push
sbb
and
movups
dec
or
std
or
push
push
dec
or
push
push
push
std
or
or
std
sbb
sbb
sbb
sbb
and
and
sbb
push
adc
std
push
pop
or
add
daa
std
add
pop
std
dec
(bad)
out
push
jmp
std
sbb
das
call
pop
dec
cmp
adc
jmp
inc
push
mov
call
sub
inc
or
dec
pop
or
inc
pop
push
dec
or
dec
or
dec
(bad)
ud0
push
sbb
and
and
push
push
adc
or
or
or
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
movups
pop
pop
pop
(bad)
cmp
cmp
sub
sub
push
push
push
dec
or
inc
or
inc
add
jmp
mov
imul
dec
nop
jae
push
fadd
add
jmp
push
(bad)
inc
add
or
std
pop
or
inc
pop
pop
std
push
push
add
std
or
or
sbb
and
and
pop
adc
sbb
push
push
push
std
or
or
push
push
push
dec
or
or
or
push
push
push
dec
or
or
or
or
or
or
or
std
adc
adc
adc
adc
or
sub
std
sub
sub
and
and
adc
adc
add
add
pop
or
inc
push
xor
push
adc
push
and
or
adc
mov
add
inc
or
std
pop
pop
pop
std
push
push
add
or
or
adc
adc
push
push
push
std
aas
aas
aas
std
es
adc
adc
es
xor
xor
sub
sub
and
and
sbb
or
or
or
or
push
push
push
dec
or
or
or
or
or
std
or
or
or
or
adc
adc
sub
sub
or
or
adc
adc
and
and
and
push
pop
std
pop
push
push
inc
push
or
add
add
movs
mov
adc
add
push
or
inc
add
or
pop
pop
pop
call
sbb
jmp
cs
sub
or
or
es
inc
(bad)
cmp
cmp
xor
xor
sub
sub
es
and
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
inc
adc
push
dec
or
sbb
sbb
es
and
adc
push
inc
pop
inc
pop
adc
push
push
adc
pop
pop
pop
mov
or
call
push
push
std
sub
sub
sub
sub
push
push
push
call
pop
pop
std
dec
dec
dec
std
dec
dec
dec
std
inc
inc
inc
(bad)
cmp
cmp
xor
xor
das
das
das
jmp
sub
std
and
and
sbb
adc
or
dec
or
or
or
or
or
std
or
or
or
or
or
or
or
or
push
push
push
std
or
or
(bad)
(bad)
ud0
or
std
(bad)
(bad)
paddw
push
push
jmp
and
sbb
sbb
push
push
add
inc
add
add
sbb
fisubr
sub
push
sbb
call
adc
dec
dec
dec
jmp
pusha
call
push
dec
inc
(bad)
aas
aas
aas
(bad)
cmp
cmp
xor
xor
sub
sub
and
and
sbb
sbb
call
adc
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
add
or
or
or
or
or
or
adc
adc
pop
pop
pop
call
pop
pop
dec
or
dec
or
add
add
pop
pop
pop
cli
inc
inc
inc
(bad)
aas
aas
aas
std
sbb
sbb
inc
inc
inc
push
jno
bound
call
std
push
push
push
std
dec
dec
dec
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
xor
sub
sub
es
push
push
push
call
sbb
std
adc
or
or
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
or
or
or
or
or
adc
sbb
jo
add
add
or
xchg
call
sbb
call
sbb
std
outs
outs
outs
push
jb
data16
pop
std
pop
pop
pop
std
push
push
push
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
cs
daa
daa
daa
std
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
inc
add
or
or
or
or
or
add
add
xor
dec
cmp
cmp
pop
pop
pop
inc
add
jmp
and
call
pop
jmp
push
call
push
dec
dec
inc
(bad)
cmp
cmp
xor
cs
es
and
call
sbb
call
push
push
call
adc
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
pop
pop
inc
push
push
inc
add
add
add
add
or
or
push
push
push
test
add
add
push
push
dec
sbb
sbb
push
push
push
inc
add
call
push
std
pop
pop
pop
std
dec
dec
dec
inc
std
cmp
xor
jmp
cs
es
and
and
sbb
sbb
adc
adc
dec
pi2fw
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
add
inc
push
push
dec
or
or
or
adc
adc
adc
(bad)
or
or
add
add
adc
adc
aas
aas
aas
dec
dec
std
cmp
xor
cs
daa
daa
daa
std
and
and
sbb
sbb
push
push
push
std
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
pop
pop
pop
std
add
add
add
add
or
or
push
push
push
in
or
jnp
or
adc
add
add
push
or
mov
add
add
or
or
xor
xor
cmp
cmp
sub
and
and
sbb
sbb
adc
adc
adc
adc
or
push
push
dec
or
or
or
dec
or
or
or
add
add
or
or
adc
adc
adc
adc
adc
mov
sbb
cmps
push
push
push
inc
pop
pop
inc
and
std
sub
sub
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
push
dec
or
std
add
add
pop
pop
pop
call
sbb
fcom
adc
imul
add
sbb
sbb
cs
inc
inc
inc
call
pop
pop
inc
add
(bad)
push
push
push
call
sbb
std
adc
adc
adc
adc
push
push
push
std
or
or
add
add
adc
adc
sub
sub
and
sbb
xor
add
add
xor
or
sub
or
inc
add
dec
push
push
inc
pop
pop
inc
push
sbb
sub
sub
and
push
push
add
add
add
and
sbb
pop
pop
les
adc
loopne
adc
int
sbb
mov
push
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
call
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
push
add
inc
add
jmp
add
inc
add
inc
add
inc
add
add
(bad)
cld
add
aas
inc
add
clc
add
pop
inc
add
lock
pop
inc
add
rol
add
add
inc
add
inc
add
add
add
cld
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rol
add
pop
add
rol
add
aas
add
rol
add
aas
add
loopne
add
add
add
lock
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
push
add
pop
inc
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
push
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
adc
add
pop
fs
cmp
test
or
add
push
and
or
inc
mov
outs
outs
(bad)
inc
cmp
dec
dec
(bad)
call
or
or
add
pop
xor
and
cmp
push
xor
inc
add
inc
add
call
ds
call
xchg
jmp
or
xor
sar
inc
inc
(bad)
call
sbb
pop
pop
add
or
or
or
or
or
or
push
add
and
cmp
(bad)
jmp
and
xor
add
add
and
push
push
(bad)
push
ss
dec
or
dec
or
or
or
or
or
or
or
or
or
or
or
push
push
add
push
push
or
xor
repz
daa
retf
inc
add
add
add
push
cmp
mov
jmp
and
push
push
add
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
pop
add
add
add
sub
sar
sub
in
push
push
sub
add
add
push
and
adc
dec
test
cmp
jecxz
push
push
adc
dec
or
or
dec
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
inc
add
jmp
and
dec
or
add
add
xor
es
call
sub
push
add
or
or
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
pop
inc
pop
pop
inc
pop
pop
dec
or
inc
sbb
dec
add
cmp
sub
jmp
push
cli
call
adc
inc
pop
add
or
or
or
dec
or
or
or
or
push
push
or
add
pop
add
dec
or
dec
or
dec
or
dec
or
dec
or
call
adc
xor
(bad)
call
adc
add
add
add
add
sub
add
or
or
or
or
or
dec
or
dec
or
inc
add
test
cmp
(bad)
ds
mov
inc
add
dec
or
dec
or
dec
or
or
push
push
dec
add
adc
aaa
push
ss
dec
or
add
add
add
add
add
add
sub
or
or
dec
or
or
or
or
or
or
or
inc
sbb
jge
call
out
sub
mov
sub
ins
lock
loope
add
or
push
or
push
call
adc
call
adc
call
adc
call
pop
cwde
fild
add
or
add
and
add
push
push
dec
(bad)
ud0
femms
dec
ud2
dec
or
inc
or
dec
pusha
(bad)
pop
jo
inc
add
add
add
inc
add
call
push
xchg
gs
dec
sbb
or
call
adc
call
adc
call
adc
call
adc
imul
add
add
pop
pop
xchg
adc
call
adc
call
femms
dec
push
ud0
pop
xor
sub
jge
call
and
and
pop
push
push
inc
pop
add
pop
pop
push
inc
pop
add
inc
dec
call
repnz
cmp
call
adc
adc
push
push
call
adc
pfrsqit1
adc
ud0
adc
dec
or
call
sbb
(bad)
push
mov
inc
pop
add
or
pop
dec
or
adc
adc
adc
adc
adc
adc
adc
push
inc
daa
push
inc
mov
dec
push
inc
call
pop
sbb
sbb
pop
call
pop
adc
add
push
adc
(bad)
(bad)
inc
or
(bad)
dec
pop
(bad)
add
push
inc
add
dec
pop
add
inc
push
push
call
sbb
call
sbb
call
sbb
call
pop
pop
call
sbb
inc
add
adc
call
call
and
sbb
pop
std
adc
cmp
xor
call
idiv
or
jne
add
sbb
pop
push
add
dec
or
dec
push
push
call
pop
pop
call
push
push
dec
or
or
or
call
push
push
call
and
dec
or
inc
add
inc
dec
out
sub
mov
call
push
cmp
add
xor
imul
and
add
inc
add
add
call
adc
call
sbb
sbb
sbb
or
or
or
push
push
dec
push
push
dec
push
push
dec
or
or
adc
jmp
das
call
adc
add
add
and
sub
mov
inc
push
into
inc
mov
add
in
inc
add
xor
add
inc
push
add
or
or
and
and
sub
sub
sbb
sbb
daa
daa
jmp
sub
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
or
dec
or
call
sbb
adc
adc
and
and
and
and
or
pop
inc
add
call
sbb
push
and
add
add
add
dec
pf2iw
sbb
jmp
sbb
jmp
das
das
inc
inc
push
xor
sub
sub
and
and
pop
pop
pop
dec
or
push
push
push
dec
push
push
dec
or
dec
or
inc
push
push
dec
pi2fd
or
sbb
es
inc
add
inc
add
add
adc
xchg
and
das
sub
sbb
sub
sub
pop
pop
pop
dec
dec
inc
inc
(bad)
cmp
cmp
das
das
das
jmp
and
sbb
adc
dec
push
push
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
dec
or
dec
sbb
call
sbb
or
add
push
push
push
pushf
push
push
push
call
push
push
jmp
jmp
imul
pop
pop
call
push
inc
inc
(bad)
cmp
cmp
xor
xor
sub
sub
sbb
push
push
dec
push
push
dec
push
push
dec
or
dec
or
dec
or
dec
or
inc
push
push
inc
add
add
or
call
adc
call
push
pop
inc
add
add
inc
inc
test
adc
jmp
and
call
jmp
call
push
dec
dec
(bad)
ds
xor
jmp
sub
call
push
push
call
push
push
call
adc
dec
or
or
or
or
or
or
pop
pop
pop
inc
pop
pop
inc
add
add
add
add
add
or
or
push
add
add
and
and
add
call
sbb
dec
dec
dec
dec
(bad)
aas
aas
aas
push
xor
jmp
sub
jmp
and
call
push
push
call
adc
dec
or
or
or
or
or
or
or
or
add
add
or
or
or
adc
adc
(bad)
(bad)
setb
push
pop
call
adc
push
xor
push
ss
sub
call
pop
pop
call
adc
dec
or
or
or
or
add
push
dec
or
dec
or
or
or
or
add
add
adc
or
sbb
sbb
sbb
(bad)
pf2iw
sbb
call
push
push
call
adc
dec
push
push
dec
or
dec
or
call
pop
pop
sahf
adc
adc
dec
dec
dec
jo
and
out
or
or
push
push
push
inc
pop
pop
dec
push
push
into
sub
sub
and
add
add
add
sbb
pop
adc
adc
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
ud0
lock
(bad)
jmp
add
inc
add
inc
add
inc
add
add
aas
lock
pop
loopne
add
rol
pop
add
xadd
add
loopne
add
lock
(bad)
add
(bad)
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
clc
add
paddd
add
inc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
ja
pop
pop
(bad)
call
(bad)
call
sbb
add
add
add
pop
sub
sub
(bad)
adc
pop
inc
add
std
or
adc
xor
(bad)
pop
pop
mov
or
sbb
inc
(bad)
jmp
and
or
add
or
or
or
or
or
add
std
sub
mov
jmp
add
add
sbb
ss
inc
inc
out
call
adc
dec
or
std
or
or
or
or
or
or
or
or
or
pop
inc
add
std
push
push
mov
sub
fincstp
push
push
sub
adc
inc
jbe
dec
cli
jmp
sub
dec
or
std
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
add
add
adc
sub
dec
or
inc
add
add
push
push
je
push
push
stc
call
sbb
dec
or
dec
or
std
or
or
add
std
push
push
add
pop
pop
add
pop
pop
pop
dec
or
dec
or
std
adc
cmp
sub
jmp
add
or
xor
fdivrp
or
add
or
push
dec
or
std
or
or
or
or
or
std
add
adc
pushf
(bad)
and
xchg
add
sbb
or
add
or
or
or
or
or
add
(bad)
xor
jmp
adc
add
cmp
add
scas
or
push
push
std
push
push
or
dec
or
std
pop
push
inc
dec
loope
dec
push
sar
pop
sub
dec
popa
jmp
push
adc
pop
dec
push
or
adc
adc
adc
or
adc
pop
into
add
add
(bad)
(bad)
ud0
push
or
inc
or
aaa
inc
mov
dec
pop
jecxz
pop
or
add
add
add
inc
add
std
inc
push
sar
sub
cdq
dec
adc
adc
ud0
adc
adc
adc
add
add
push
or
dec
or
std
push
daa
jnp
dec
(bad)
in
call
and
add
or
dec
or
dec
push
or
dec
add
jmp
das
xchg
inc
sar
or
sub
pop
push
adc
push
push
adc
add
adc
push
(bad)
cmp
std
add
push
add
(bad)
(bad)
paddw
sbb
std
push
push
push
(bad)
adc
pop
pop
(bad)
sbb
push
std
add
add
or
push
inc
loop
sbb
pop
(bad)
sbb
adc
add
dec
dec
test
inc
pop
ss
add
add
or
add
adc
push
std
sbb
sbb
adc
adc
or
or
or
or
or
push
push
std
sbb
sbb
sub
sub
or
push
std
add
pop
push
inc
(bad)
jmp
mov
or
xchg
daa
add
push
sbb
add
push
std
or
add
std
push
push
push
std
and
and
and
and
push
push
push
std
or
or
or
or
or
(bad)
(bad)
paddw
sbb
std
and
and
sbb
adc
add
or
pop
sub
push
jmp
add
or
dec
or
add
sbb
sbb
sbb
sub
inc
inc
(bad)
cmp
cmp
sub
sub
push
push
push
dec
push
push
dec
or
or
or
std
or
or
or
or
or
or
pop
pop
pop
jmp
and
dec
pop
add
add
es
add
add
cmp
jmp
push
push
std
pop
pop
pop
dec
dec
(bad)
cmp
das
das
jmp
and
call
push
push
dec
or
or
or
or
or
or
push
push
push
std
push
push
push
dec
or
sbb
sbb
adc
push
mov
add
add
push
push
sbb
ds
and
call
pop
jmp
arpl
dec
dec
dec
std
inc
inc
inc
(bad)
xor
xor
and
and
pop
pop
pop
std
(bad)
pi2fw
or
std
or
or
or
or
or
or
pop
pop
pop
inc
add
add
add
push
push
push
dec
or
mov
add
add
sbb
inc
push
push
push
enter
inc
inc
inc
std
xor
xor
and
and
pop
pop
pop
dec
pi2fw
or
dec
or
or
or
or
or
push
push
push
inc
pop
pop
dec
or
cmps
or
or
(bad)
pi2fw
or
mov
and
and
and
and
pop
pop
pop
dec
pi2fd
or
or
or
or
or
adc
push
or
add
sub
sub
cmp
cmp
push
push
push
dec
or
call
adc
cld
and
and
and
and
adc
adc
adc
add
add
(bad)
inc
jmp
inc
inc
jg
inc
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
shl
in
call
add
add
adc
xor
call
add
call
and
add
add
or
xor
dec
or
dec
or
dec
or
inc
adc
and
add
or
add
add
or
cmc
push
pop
dec
or
dec
or
dec
pop
add
pop
pop
add
push
push
add
or
and
and
shr
push
sub
add
add
or
add
or
pop
dec
or
dec
rdtsc
jmp
or
dec
pop
add
or
push
dec
adc
es
and
push
push
or
or
add
pop
or
push
lods
push
inc
stos
call
push
pop
push
scas
jmp
sub
or
add
call
adc
aad
add
add
or
or
and
push
inc
mov
inc
add
or
add
pop
push
add
adc
inc
mov
adc
sbb
push
push
pandn
add
add
inc
mov
inc
add
dec
push
or
adc
adc
adc
adc
sbb
sbb
pop
pop
ud0
and
xor
call
and
inc
sbb
sbb
sub
add
call
sbb
sbb
sbb
or
or
or
or
call
sbb
jmp
and
jmp
cs
add
push
add
pop
push
jmp
and
(bad)
ds
aas
aas
aas
jmp
sub
call
adc
or
or
dec
or
dec
or
call
pop
push
call
adc
inc
or
pop
or
pop
and
xor
pop
pop
pop
jmp
popa
inc
jmp
sbb
dec
push
push
dec
or
dec
or
inc
pop
pop
inc
add
dec
or
dec
push
or
add
add
or
imul
jmp
das
das
call
sbb
dec
push
push
dec
or
or
or
or
or
or
or
pop
pop
pop
pop
sub
sub
adc
adc
or
or
sbb
sbb
sbb
or
add
add
add
adc
adc
adc
(bad)
inc
add
aas
add
clc
sldt
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
sldt
(bad)
jg
add
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sbb
add
add
or
or
add
or
add
add
add
add
or
add
add
cld
adc
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
cmp
cld
(bad)
(bad)
aas
add
add
(bad)
(bad)
fwait
fwait
pop
jecxz
inc
fldenv
adc
fsubp
retf
clc
shl
mov
hlt
loop
inc
xor
sbb
dec
imul
sub
mov
xchg
jecxz
test
leave
(bad)
pop
push
clc
sub
xchg
and
mov
aad
push
aas
lods
xacquire
stos
pop
in
pop
in
movs
sub
pop
aad
das
not
adc
mov
test
and
sbb
adc
jne
clc
xchg
lea
xor
daa
imul
add
nop
or
dec
cmp
jle
sbb
cmp
(bad)
out
add
mov
or
retf
stos
sub
xchg
jmp
or
mov
pop
add
nop
add
add
push
aad
cmp
lods
iret
hlt
fcomp
sar
ret
and
xor
push
imul
mov
jbe
jmp
iret
jae
xor
in
out
adc
xor
jmp
shr
dec
jne
ss
in
(bad)
idiv
mov
mov
js
sub
xchg
jp
xchg
add
repnz
push
push
jle
pop
in
or
push
jg
mov
aaa
pop
push
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
sbb
pusha
and
add
add
add
lahf
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
or
or
add
or
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
sbb
fs
pusha
pop
mov
xor
push
jg
(bad)
(bad)
inc
ret
ret
add
cli
sub
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
cmp
nop
pop
jae
inc
adc
dec
push
and
mov
push
sbb
test
test
pop
push
mov
mov
aas
ins
ins
jmp
push
(bad)
sbb
test
dec
jl
loope
and
cmps
adc
sub
test
xchg
cmp
movaps
mov
mov
rcl
sub
neg
mov
test
lea
jae
dec
pop
sub
mov
gs
ss
sub
aad
cmc
inc
jmp
loopne
retf
movs
scas
jmp
test
imul
sti
ds
shl
push
sbb
pop
int3
push
cwde
ret
cmp
int
dec
xor
clc
xor
ret
cmp
sub
fcom
dec
cdq
fwait
dec
es
neg
cmps
int3
(bad)
std
adc
lea
push
lea
sar
fdivr
mov
daa
sub
aad
bnd
jmp
jge
clc
xchg
loop
sahf
jl
arpl
fucom
pop
pop
mov
inc
ins
je
jno
rcr
pusha
mov
ror
das
test
leave
div
jp
call
fidiv
(bad)
out
imul
cdq
jmp
mov
sbb
sub
pop
(bad)
imul
mov
mov
push
(bad)
xchg
dec
dec
lds
xchg
out
mov
or
(bad)
bound
(bad)
cwde
imul
retf
sbb
mov
scas
pop
push
cwde
dec
mov
out
adc
mov
push
mov
dec
or
gs
cdq
mov
pop
movs
mov
leave
pop
shl
dec
mov
push
shr
shl
rol
enter
jae
ins
push
(bad)
dec
in
xor
pop
mov
in
fldcw
dec
push
cmp
cs
dec
cmps
xchg
sub
cmp
pop
jne
mov
out
icebp
add
jno
push
popf
dec
loop
dec
jo
add
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
mov
inc
or
add
or
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
sbb
pusha
and
add
add
add
lahf
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
add
add
or
or
add
or
add
add
or
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
sbb
fs
pusha
clc
(bad)
std
cmp
sbb
xor
bound
in
pop
add
ins
pop
mov
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
and
add
add
or
or
add
or
add
add
add
add
or
add
add
cld
adc
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
cmp
cld
(bad)
(bad)
aas
add
add
fldenv
add
adc
jmp
mov
(bad)
idiv
mov
mov
js
sub
xchg
mov
push
cmp
out
mov
xchg
sbb
ds
cmc
(bad)
jl
fwait
or
enter
add
jge
inc
xor
cmps
cmp
mov
aas
rcr
sub
or
fldcw
mov
adc
mov
inc
push
cmps
inc
jmp
mov
retf
nop
add
add
dec
sub
pop
aaa
inc
out
retf
pop
pusha
mov
enter
adc
mov
cli
(bad)
jne
push
stos
pop
xor
fcom
dec
mov
(bad)
push
sbb
pop
mov
mov
push
or
mov
movs
xchg
inc
retf
cmp
test
push
add
or
cmp
jle
in
ror
push
mov
add
adc
and
adc
push
or
cs
push
add
mov
ss
push
add
scas
enter
cmp
push
add
loopne
push
and
scas
rol
cli
outs
scas
in
stc
add
or
repz
addr16
daa
loop
imul
fdivr
fwait
fwait
pop
jecxz
inc
pop
cmp
test
push
add
cmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
imul
inc
outs
jb
jae
and
jb
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
es
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
ins
popa
addr16
imul
popa
ins
gs
add
add
popa
je
pop
add
add
add
add
add
lsl
add
cmps
or
add
dec
push
inc
je
dec
add
add
add
add
add
add
add
sgdtd
add
add
add
add
add
or
add
dec
add
pop
add
add
add
add
add
add
lsl
add
add
add
add
or
add
into
add
add
add
inc
add
add
and
pop
add
pop
add
aaa
add
add
dec
add
inc
add
dec
add
inc
add
add
add
adc
add
sub
pop
sbb
unpckhps
add
add
inc
add
into
add
add
add
add
inc
add
dec
add
add
add
xor
js
add
add
add
add
pop
add
push
add
dec
add
inc
add
xchg
sbb
push
or
add
add
and
add
add
add
add
jno
add
aaa
add
or
add
add
add
push
add
add
add
add
add
or
add
add
pop
add
add
add
add
xor
inc
add
dec
add
push
add
je
js
imul
xor
jae
jge
and
xor
add
arpl
pop
add
dec
add
cmp
dec
add
add
sbb
add
lods
add
add
inc
add
xor
inc
or
aas
add
add
pusha
push
add
adc
nop
add
add
adc
add
test
add
add
add
pop
add
add
lods
add
add
add
(bad)
sub
dec
add
add
add
ja
add
add
add
jmp
xor
add
pop
add
add
popa
add
xor
xor
mov
jnp
jl
push
add
popa
add
cmp
add
push
add
pop
add
push
add
inc
add
daa
add
add
add
and
add
movs
add
add
add
add
add
add
add
add
add
repnz
push
add
dec
add
add
cld
add
add
add
add
adc
add
int3
add
or
sbb
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
xor
add
sub
xor
push
add
ins
add
bound
ins
add
pop
add
add
jle
xchg
cmp
dec
add
add
add
add
pusha
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
cdq
add
or
adc
and
xchg
add
add
inc
add
push
add
add
pop
add
push
add
sbb
push
add
cmps
add
add
add
add
add
add
add
pop
sub
push
add
add
add
add
pop
add
jnp
jle
dec
add
and
cmp
dec
add
pop
add
ins
add
add
push
add
add
push
add
add
xchg
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
hlt
add
add
xor
add
push
add
add
add
add
add
lea
dec
add
pop
add
sub
aas
add
pop
add
jb
add
pop
add
inc
add
add
pop
add
add
add
add
fld
pushf
add
add
fld
pushf
add
or
adc
stos
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
sbb
add
sub
push
add
add
push
add
add
cdq
add
add
data16
add
dec
add
bound
arpl
jno
add
add
inc
add
push
add
add
push
add
or
(bad)
add
add
retf
add
add
add
add
add
add
add
inc
add
test
or
add
add
fiadd
add
add
jno
dec
add
add
dec
add
add
add
add
je
add
add
das
add
dec
add
push
add
je
bound
jo
inc
add
push
add
daa
add
or
add
int
sbb
or
add
add
add
add
mov
or
inc
add
mov
add
add
add
and
add
add
add
add
add
sub
xor
push
add
add
push
add
add
pop
add
add
js
inc
add
add
dec
add
add
add
add
arpl
jb
cmp
cmp
add
jnp
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
push
add
loopne
add
add
pop
add
add
xchg
add
xor
add
jg
xchg
add
data16
add
add
add
add
aas
add
arpl
xor
inc
add
add
add
jnp
jo
jge
pop
add
xor
cmp
inc
add
add
add
fild
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
add
mov
add
jnp
mov
add
add
add
mov
mov
or
add
add
add
add
add
add
add
fild
add
add
add
pop
add
add
add
push
add
jne
xor
mov
add
push
add
pop
add
pop
add
inc
add
jl
aaa
add
push
add
js
test
jle
mov
jns
js
test
push
add
mov
add
add
add
add
addr16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
rol
mov
add
sbb
sbb
xchg
pop
add
adc
add
add
push
add
add
add
xlat
add
add
add
add
add
add
add
add
add
call
add
jp
cmp
add
dec
add
inc
add
push
add
add
add
pusha
add
inc
add
jne
jbe
jne
add
add
pop
add
push
add
add
add
pop
adc
or
push
add
jb
jae
push
add
mov
add
loopne
cmp
add
ja
test
sub
add
ss
add
add
add
push
add
xchg
push
add
add
add
add
add
add
add
add
add
add
dec
add
popa
add
cmp
jno
jl
xor
jbe
add
push
add
add
add
push
add
popa
add
pop
add
dec
add
add
add
int
add
add
adc
popa
add
adc
rol
add
add
adc
add
add
add
add
add
push
add
push
add
pusha
add
pop
add
add
add
and
add
add
inc
add
ds
add
add
add
add
add
add
lsl
add
add
add
add
add
inc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
adc
add
mov
inc
or
add
or
add
add
add
push
or
add
add
cmp
inc
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
jl
inc
inc
push
js
in
pop
pop
cwde
push
inc
sar
mov
out
sub
jb
out
inc
inc
xor
stos
bound
inc
add
int3
mov
and
xor
or
or
mov
add
xchg
mov
ins
neg
fucomip
int3
hlt
int3
mov
sub
mov
cmp
out
into
je
jne
aad
aad
aad
mov
aas
xchg
and
add
inc
test
retf
xchg
or
adc
or
push
jecxz
mov
jge
popf
aam
pop
mov
mov
ins
aad
sti
scas
fucomi
push
aaa
xor
pop
xor
repnz
push
jnp
xor
pop
mov
loope
daa
lock
xor
pop
stos
jae
dec
test
xor
in
fisub
(bad)
pop
imul
push
lea
xor
js
push
les
jae
in
push
jg
imul
cli
hlt
xchg
dec
xor
fcomip
outs
mov
repnz
sbb
mov
cld
push
cmp
(bad)
cwde
fidivr
(bad)
cmp
sub
(bad)
in
pop
test
fstp
push
addr16
packuswb
sub
mov
xchg
mov
or
int
mov
fadd
ss
mov
lock
pop
jecxz
sbb
pop
mov
call
xor
cmc
(bad)
pop
jns
fucomip
cmps
fidivr
(bad)
cli
je
and
jmp
rol
mov
out
aad
cmp
loopne
int
pop
es
pop
movs
mov
jmp
movs
dec
test
jle
mov
fiadd
bound
imul
jns
push
ja
(bad)
std
pop
cmps
addr16
xor
(bad)
mov
nop
das
mov
ja
mov
mov
mov
inc
sbb
jno
xchg
icebp
(bad)
popa
mov
sbb
cli
lock
aam
mov
mov
pop
aam
fcomp
repz
(bad)
mov
pop
add
xchg
pop
jle
mul
mov
xchg
test
fwait
add
ror
or
xchg
push
pop
dec
dec
sub
into
in
(bad)
inc
(bad)
sbb
xor
mov
inc
pop
stos
jmp
out
mov
call
pop
sbb
mov
push
pop
(bad)
aad
or
mov
xor
cwde
aam
lods
pop
mov
cli
lods
ret
cwde
sub
test
(bad)
cli
fist
mov
out
mov
adc
test
or
jo
clc
or
cwde
xor
mov
push
aad
stos
fsub
push
shl
fimul
fnstenv
outs
sbb
rcr
fstp
cmc
in
cmps
stos
mov
fistp
fstp
add
das
unpcklps
mov
cmp
cli
imul
jmp
mov
mov
push
(bad)
push
stos
push
cmp
(bad)
mov
sbb
(bad)
pop
repnz
je
call
shl
sbb
dec
or
dec
test
xchg
cs
cmc
xlat
pop
aad
or
xchg
push
sub
push
push
and
inc
cmp
lods
scas
mov
imul
push
outs
por
mov
dec
outs
imul
push
(bad)
fidiv
sub
popa
mov
cmc
repnz
popa
ja
in
sub
cmp
je
call
push
lods
xor
pop
mov
mov
push
int
jmp
jecxz
icebp
and
cmp
xor
call
mov
pop
cmp
pusha
add
cmps
dec
fwait
adc
je
add
retf
stos
pop
inc
dec
push
add
aad
add
xor
jge
js
or
mov
jns
xchg
icebp
lea
test
mov
das
mov
dec
std
test
sbb
in
mov
push
mov
pop
jno
sbb
(bad)
xchg
pop
mov
and
(bad)
out
pop
scas
(bad)
fs
cmp
sub
and
xor
pop
or
push
(bad)
outs
and
fild
ins
and
fidiv
ja
pop
mov
(bad)
cmps
(bad)
mov
inc
outs
popf
jno
push
scas
js
scas
mov
adc
xchg
inc
test
jmp
sub
pop
retf
retf
xor
test
add
jb
jo
hlt
sub
pmulhw
mov
inc
sbb
push
int
repz
aad
pop
jbe
dec
nop
lea
push
mov
test
push
push
jecxz
jmp
idiv
nop
movs
mov
push
and
popf
or
mov
push
idiv
andps
inc
rcr
pop
test
cli
or
stos
dec
(bad)
in
mov
jp
jo
in
push
sub
or
add
sbb
mov
add
cld
add
sub
and
xor
call
xor
stc
ret
inc
mov
leave
nop
imul
daa
ins
inc
sbb
sub
cmp
(bad)
jne
add
daa
sbb
push
ss
(bad)
mov
call
xchg
mov
sbb
aaa
sub
ss
cmp
clc
fiadd
add
clc
dec
add
xchg
or
xor
or
push
xor
cmp
inc
enter
je
movs
data16
push
add
mov
mov
adc
mov
std
adc
sub
(bad)
mov
aam
add
mov
mov
jg
jno
xor
inc
inc
shl
es
cs
mul
lods
sbb
or
imul
(bad)
gs
out
hlt
lea
inc
cli
xor
mov
add
xchg
gs
xchg
lock
adc
cmp
retf
xchg
test
and
xor
imul
cmp
xor
mov
(bad)
fiadd
out
mov
mov
pop
in
ret
sbb
and
mov
add
daa
sahf
push
xor
fiadd
sbb
cs
xlat
ret
mov
xchg
mov
jg
pop
mov
mov
(bad)
sbb
loop
in
jno
hlt
jmp
push
(bad)
f2xm1
xchg
rcl
mov
ins
push
adc
hlt
pop
or
daa
dec
hlt
js
xlat
mov
or
call
dec
popa
or
xor
mov
jo
adc
push
push
jbe
test
dec
(bad)
pop
scas
bound
popa
es
mov
lods
aas
sbb
mov
fldcw
inc
ins
sbb
dec
lods
in
fcom
ds
addr16
data16
adc
cmps
inc
inc
test
inc
adc
push
iret
pop
lods
push
inc
fcmovbe
xor
ins
xor
rcl
in
fiadd
sbb
or
adc
data16
(bad)
out
ins
arpl
mov
fwait
xor
stos
or
retf
inc
out
jg
in
pop
bnd
(bad)
sub
sub
jl
pop
or
test
repz
test
inc
dec
add
cmp
and
or
push
leave
jmp
loop
push
lahf
or
loopne
mov
add
sbb
mov
pusha
fidiv
jl
loopne
xor
mov
xchg
dec
in
stc
out
sub
mov
or
cmp
cmc
push
pop
inc
xchg
out
shl
push
out
dec
sbb
inc
lea
pop
jnp
inc
xchg
or
cmc
repz
cmp
mov
stc
ret
cmps
cmp
sbb
loopne
div
icebp
adc
mov
sbb
test
cmp
imul
int3
mov
pop
and
bound
jae
dec
mov
xor
rol
adc
sub
fwait
cmps
dec
push
jae
int3
jne
mov
fstp
dec
and
mov
lds
sub
inc
inc
dec
inc
sub
sti
out
push
or
imul
push
jecxz
aaa
cli
sub
dec
nop
add
xchg
outs
mov
push
loopne
or
fwait
popf
repz
jge
clc
clc
adc
inc
popf
dec
das
jmp
inc
out
scas
and
mov
or
mov
mov
sbb
push
add
cmp
dec
sti
mov
or
cmp
jecxz
aas
js
(bad)
sbb
cmp
mov
and
mov
xor
mov
mov
pop
inc
popa
pop
pop
cmp
and
(bad)
mov
lods
aas
sbb
call
cs
push
mov
aam
adc
mov
mov
popa
jne
add
mov
cmps
dec
ja
aas
or
call
dec
push
mov
mov
cs
sub
push
fild
xor
fcom
aam
hlt
lods
or
emms
and
shl
(bad)
fs
int3
in
out
or
and
stos
inc
mov
in
call
movs
outs
mov
or
jmp
adc
inc
add
dec
mov
test
fldenv
adc
sub
cmp
sbb
repz
aas
jecxz
lea
pop
rol
push
test
repnz
movs
ja
popf
ja
sub
arpl
jp
test
pop
inc
ret
mov
fisub
sub
push
push
xor
mov
jge
push
jle
mov
xchg
jl
into
lds
repz
mov
jmp
test
sahf
add
shl
adc
add
enter
pop
add
jno
xor
mov
imul
mov
in
sahf
pop
fstp
dec
aaa
mov
pop
out
sub
and
ret
cdq
cmp
repnz
fmul
loope
push
mov
popa
movs
enter
dec
fwait
lds
cs
test
push
inc
jge
cmc
xlat
stos
inc
imul
stos
icebp
lea
les
imul
lods
mov
sub
sbb
or
imul
out
add
mov
pop
jg
jge
dec
pop
loopne
mov
into
test
call
gs
mov
push
fldenv
ins
push
jns
test
enter
(bad)
push
int
scas
push
je
push
nop
rcr
xor
xchg
fwait
repnz
cmc
scas
enter
xchg
jne
addr16
nop
mov
xor
test
mov
pop
jns
cdq
addr16
popf
fisttp
or
scas
xchg
in
lds
test
out
jmp
adc
and
mov
mov
(bad)
sub
or
inc
inc
aas
xor
imul
mov
sub
add
into
ss
adc
out
jp
in
mov
inc
pop
jbe
and
cli
fs
fcomp
pop
xchg
shr
jne
jmp
sahf
lods
loopne
push
add
or
adc
(bad)
mov
shufps
mov
into
add
jnp
call
cmp
fcom
jb
xchg
sbb
or
stos
iret
inc
lods
rol
add
shr
jo
sti
in
(bad)
retf
arpl
cli
mov
inc
cwde
add
adc
xchg
bound
mov
repnz
out
mov
in
inc
stos
cmp
in
or
push
add
cs
cdq
sbb
cwde
xchg
mov
mov
cmc
mov
(bad)
mov
(bad)
retf
jb
inc
call
fldl2e
push
dec
mov
push
ds
in
mov
add
jo
mov
inc
repnz
cwde
mov
add
adc
aad
lods
mov
add
lahf
push
neg
inc
or
inc
or
retf
pop
sub
iret
or
ja
(bad)
dec
(bad)
adc
and
in
jmp
push
add
mov
lahf
jle
add
and
in
and
xchg
arpl
ret
push
movs
jl
stos
scas
data16
mov
xchg
lahf
mov
xchg
bound
sub
xor
jecxz
jle
dec
xchg
test
movs
and
xor
out
xchg
and
icebp
adc
fcomp
loope
loope
in
adc
push
imul
fistp
clc
jecxz
ss
mov
fiadd
pop
(bad)
jge
push
jnp
cld
add
adc
and
vaddps
div
test
push
ret
inc
retf
add
bound
(bad)
inc
mov
cmp
loope
(bad)
mov
repz
push
mov
sub
daa
jge
jo
xchg
inc
iret
mov
cdq
sti
inc
push
inc
test
int
lahf
push
mov
hlt
(bad)
icebp
(bad)
cmp
add
sub
(bad)
adc
es
sub
pusha
dec
jns
inc
inc
repnz
and
lahf
push
xor
(bad)
push
sub
in
mov
daa
int
xchg
fild
add
scas
jp
sahf
pop
or
jp
dec
ins
mov
jle
test
dec
(bad)
mov
(bad)
cmp
lods
rcr
adc
(bad)
iret
loopne
mov
test
dec
into
mov
push
add
mov
mov
jbe
sbb
or
adc
das
cmp
pop
popa
sub
(bad)
fiadd
lahf
dec
mov
add
retf
and
repnz
sub
xchg
xlat
sub
jno
call
ret
dec
mov
xor
cmp
mov
cmp
jmp
sti
fdiv
or
mov
sub
repz
xor
outs
sub
ins
cwde
js
or
mov
jmp
push
lods
and
aad
cmc
mov
adc
loop
fisttp
lea
sbb
mov
scas
stc
retf
ret
sbb
adc
mov
cmps
dec
cdq
cmp
add
add
(bad)
push
idiv
cmp
cmp
xchg
movs
daa
xor
xor
retf
adc
test
dec
inc
mov
mov
cmp
add
in
loopne
out
adc
add
ja
enter
push
arpl
sbb
popf
jl
std
jp
sub
scas
gs
cld
sbb
inc
mov
push
push
shr
and
jns
add
xor
lods
ja
dec
cmp
ss
outs
inc
adc
call
inc
ret
popa
out
(bad)
adc
imul
sub
icebp
xor
sbb
aaa
mov
aad
test
jno
and
icebp
sbb
xchg
lock
arpl
mov
leave
xor
int3
inc
lock
or
sbb
mov
mov
int
push
xsha256
cmps
rcl
in
cmp
mov
pushf
jecxz
shl
std
or
retf
sbb
inc
and
loopne
(bad)
out
xchg
jecxz
xor
push
xor
add
(bad)
fdiv
push
aad
add
leave
sbb
inc
xchg
adc
or
and
adc
idiv
sbb
cmps
mov
sub
push
jno
inc
and
sub
test
push
push
out
push
call
popa
jecxz
inc
jo
adc
cld
mov
dec
xchg
ss
ret
dec
jecxz
int3
(bad)
fidiv
jmp
jne
xor
std
mov
stos
fcomp
lds
or
inc
mov
lahf
xor
mov
cmp
mov
xchg
inc
sbb
iret
add
jmp
iret
call
cmps
mov
inc
mov
xchg
dec
cmp
(bad)
jecxz
nop
jge
cmp
jp
adc
sbb
cmp
test
push
or
repnz
sbb
data16
xor
daa
sub
pop
xchg
mov
test
cmc
add
out
push
aam
add
or
fwait
(bad)
xor
xor
out
jns
jmp
das
out
fidiv
aas
lods
sub
push
bts
fsubr
daa
and
div
imul
mov
dec
cmp
sub
test
sbb
ins
add
pop
jmp
pop
fwait
cmp
dec
and
imul
xchg
lea
jnp
popa
arpl
mov
push
jne
xor
dec
call
add
xchg
retf
fs
pushf
mov
stos
outs
in
xchg
mov
out
ret
mov
dec
leave
inc
push
push
in
fwait
fwait
adc
mov
scas
leave
lods
(bad)
out
clc
sbb
mov
stos
mov
sysenter
lahf
dec
fstp
ret
add
in
imul
and
inc
fcom
cmp
cli
repz
mov
lods
ret
test
xor
or
dec
adc
jnp
mov
xor
imul
xchg
lahf
jge
cli
sbb
sbb
sub
inc
sub
jae
imul
push
shr
add
sub
dec
add
mov
test
aas
mov
mov
fdiv
je
mov
test
inc
fdivr
outs
dec
and
add
les
push
ins
or
mov
fs
jno
dec
and
sub
call
jnp
int
data16
mov
jae
mov
jle
jg
mov
cmps
sbb
call
adc
jge
push
xor
adc
adc
xchg
pop
lods
jmp
xchg
out
push
pop
mov
mov
jmp
sub
mov
shr
shl
or
test
inc
dec
icebp
aad
stos
stos
movs
adc
or
(bad)
xchg
out
push
mov
push
test
sub
mov
inc
aam
sub
scas
xor
ret
pushf
pop
mov
add
pop
les
mov
out
repz
ret
pop
sub
mov
call
add
jge
mov
sbb
sub
dec
sbb
mov
(bad)
mov
push
ret
push
outs
enter
das
repz
data16
lds
mov
dec
push
mov
inc
push
jo
ret
jae
cmps
add
pop
xchg
outs
or
and
mov
js
rcr
sti
dec
(bad)
add
dec
cli
in
push
push
hlt
ror
jle
mov
and
out
pusha
loop
adc
push
jo
jae
pop
sbb
add
(bad)
out
aam
sub
test
jmp
gs
iret
sbb
(bad)
mov
xchg
mov
inc
pushf
sti
repnz
jno
inc
inc
test
jecxz
sahf
fistp
pop
pop
ficom
or
inc
mov
(bad)
(bad)
mov
adc
bound
mov
fidivr
adc
rol
cmc
test
mov
call
add
push
imul
sar
addr16
jge
add
mov
iret
jecxz
and
cmp
ret
hlt
stos
dec
scas
cmps
jo
gs
xchg
mov
sub
sub
and
(bad)
mov
dec
mov
cmc
daa
sahf
jp
sub
test
inc
xchg
popf
mov
scas
neg
pop
mov
push
pop
ins
pop
cmp
add
pop
mov
jno
cs
jae
xor
cmp
jo
jecxz
imul
popf
xor
iret
mov
fbld
in
add
xor
test
or
fwait
stos
pop
ds
test
lods
mov
aaa
and
retf
cmp
xchg
inc
cmp
cmp
push
add
addr16
cmp
add
bound
clc
xor
add
lock
and
outs
dec
das
rcl
out
dec
shl
dec
fdiv
xchg
cmp
jb
imul
hlt
dec
and
push
cmps
add
repnz
outs
sbb
dec
xchg
dec
fsub
adc
js
or
inc
fdiv
ret
fdivrp
out
mov
adc
xor
popa
jne
add
adc
call
jno
inc
mov
cmp
inc
xor
fst
or
mov
arpl
sbb
and
cmp
lods
icebp
gs
jl
ror
fcom
xchg
adc
add
jecxz
aaa
fild
hlt
ret
jl
lock
aam
arpl
sti
lea
sbb
jecxz
retf
mov
pop
push
and
jmp
das
jmp
loop
cmp
dec
retf
push
inc
popf
fs
movs
mov
(bad)
ins
cmp
cmp
cld
push
mov
inc
push
lds
cmp
add
popa
outs
jge
mov
imul
inc
(bad)
sub
jmp
pop
or
jo
pop
cmp
test
xor
xchg
rol
push
cmc
repnz
retf
add
jmp
icebp
or
inc
cmps
fld
aad
mov
jb
in
cwde
ins
add
lds
leave
push
adc
popa
js
pushf
outs
lock
pop
jo
jne
ret
and
fistp
gs
mov
arpl
stos
imul
test
dec
mov
push
mov
adc
and
sbb
jae
mov
adc
fs
xchg
ins
mul
and
and
add
movs
in
mov
daa
pop
pop
mov
jno
cmp
and
inc
jle
imul
ja
jmp
ja
push
pop
dec
(bad)
aaa
cmp
pop
cmc
repz
movs
sbb
sbb
push
cmps
in
dec
(bad)
stc
pop
les
mov
scas
mov
add
mov
and
and
pushf
mov
iret
adc
stc
xor
into
cdq
into
push
dec
sti
mov
dec
push
movups
jo
xchg
lea
or
sbb
cmp
cli
ror
xor
icebp
xlat
add
ss
pop
data16
lods
int3
xchg
jl
gs
xor
(bad)
(bad)
in
add
push
mov
sbb
adc
xchg
mov
or
xor
add
push
fdiv
or
dec
push
adc
xchg
add
fld
jmp
add
and
fs
mov
and
addr16
or
test
add
sbb
add
push
lea
or
sub
xchg
inc
xlat
aaa
dec
int
cmp
dec
loopne
pop
add
jno
fs
adc
sub
and
repz
pop
(bad)
pop
(bad)
add
push
btr
pop
push
mov
mov
in
xrelease
inc
test
push
adc
shl
stc
xlat
and
add
push
adc
cli
ficomp
and
xchg
sbb
adc
xchg
adc
mov
jecxz
sti
test
adc
movs
mov
gs
in
cmp
or
sbb
mov
sub
pop
int3
cli
fwait
jno
jns
xchg
sub
mov
ja
mov
inc
shl
leave
push
mov
sub
pop
in
add
mov
mov
dec
outs
sub
stos
dec
mov
rcl
cmp
aaa
in
mov
popa
jl
je
sahf
inc
push
pusha
add
pop
je
push
mov
xor
xchg
sub
mov
inc
dec
pop
push
std
mov
push
cmp
jo
adc
aas
xchg
push
in
pop
or
scas
jp
add
cmp
gs
mov
lods
jge
xchg
nop
icebp
mov
ret
pop
inc
xchg
mov
add
xor
icebp
retf
pop
adc
xchg
pop
cmp
outs
push
fist
jmp
cdq
xchg
(bad)
mov
and
repnz
add
fs
mov
mov
xchg
xor
inc
push
sahf
inc
sub
pop
gs
out
add
cmp
mov
push
ja
jge
hlt
xor
and
sbb
inc
mov
pusha
ins
ins
adc
adc
stos
(bad)
jl
clc
loope
les
daa
xchg
frstor
pop
in
pop
xchg
adc
lds
ins
inc
loopne
popf
cmps
mov
xor
push
push
or
push
add
xchg
rcl
and
or
ret
cmp
retf
(bad)
into
and
in
cmc
arpl
test
ret
test
add
stos
fistp
outs
outs
pop
push
mov
arpl
ret
inc
dec
les
jbe
loopne
ins
out
rol
loope
mov
or
sub
outs
sub
test
out
es
adc
test
movs
xadd
(bad)
pop
and
gs
loope
jno
mov
addr16
jb
ret
mov
pop
ds
and
test
push
jno
out
xor
push
stc
mov
stos
and
out
ss
push
js
lahf
and
out
ret
add
sti
rol
add
(bad)
cs
add
adc
or
cdq
lods
dec
retf
push
add
xchg
ficom
adc
mov
shr
mov
fld
inc
pop
aas
dec
sub
mov
xchg
stc
dec
sbb
scas
out
jbe
pop
lds
push
mov
pop
or
popa
sub
scas
adc
xor
int3
jb
add
scas
xchg
stos
push
lds
add
outs
pop
fsubr
(bad)
sahf
sbb
mov
xchg
mov
mov
out
xchg
aad
mov
stc
add
rcr
into
mov
mov
nop
cmp
test
sbb
xchg
icebp
(bad)
pop
sub
sbb
cmp
push
pop
pop
xchg
xchg
ror
scas
and
mov
inc
jo
retf
out
push
add
and
add
jecxz
or
jl
jno
out
out
pmaxub
cmc
je
xchg
mov
and
or
add
sbb
sbb
into
or
addr16
jne
mov
dec
adc
lock
jecxz
dec
pusha
cmp
aas
(bad)
movs
or
out
and
je
pop
mov
xchg
cs
push
enter
and
fdivp
sub
jbe
mov
mov
mov
add
test
pop
sar
push
pop
xor
daa
dec
fimul
or
mov
jg
in
test
pmuludq
jo
adc
sub
jno
push
inc
dec
push
mov
inc
dec
pop
or
loop
shr
sbb
push
adc
sahf
jb
sar
push
mov
retf
push
stos
cmc
dec
ja
in
out
sbb
test
push
sub
inc
cmp
sar
mov
pushf
imul
inc
push
pushf
das
shl
lods
dec
push
not
fld
outs
lock
jle
jmp
stos
mov
add
sbb
or
pop
in
add
stos
mov
out
outs
inc
ror
jno
pop
xchg
retf
xor
(bad)
out
xor
rcr
xchg
mov
lock
test
push
iret
adc
sub
les
pop
or
loop
adc
add
pop
sub
(bad)
push
mov
jl
sub
xchg
push
cmp
inc
cld
clc
popf
rcr
leave
mov
call
push
rcr
loop
mov
mov
pop
xor
jae
jg
pop
cli
xor
aad
pop
leave
and
cmp
stos
out
(bad)
hlt
push
xchg
mov
xor
mov
loope
inc
inc
dec
mov
ins
adc
add
cli
cmp
adc
test
fld
mov
sub
push
jecxz
rcl
stos
outs
dec
pop
sub
mov
popf
xchg
mov
mov
inc
mov
sub
ins
jns
in
call
js
mov
sbb
adc
jno
pop
add
and
in
xchg
retf
xor
rol
jo
repnz
rcr
jle
mov
cmp
push
fdiv
pop
push
shl
jmp
sbb
xchg
dec
or
ds
loopne
movs
dec
cdq
lahf
outs
(bad)
mov
fnstenv
loop
(bad)
cmc
pop
xchg
cmp
cmp
mov
das
inc
popf
mov
sbb
xor
adc
in
pop
xor
loopne
fnstsw
dec
push
xchg
cmp
inc
js
enter
repnz
adc
push
data16
xchg
fild
mov
xchg
in
mov
cmp
inc
sbb
mov
jb
xor
lds
add
ror
xchg
dec
stos
mov
cmc
xor
adc
int
mov
jno
in
jmp
add
ss
ins
inc
jo
cdq
or
pop
mov
push
dec
pop
dec
aas
fwait
gs
adc
add
out
adc
in
fwait
out
push
sub
mov
or
dec
popa
jne
sar
cmp
and
adc
xchg
xchg
cmps
les
and
es
and
or
ins
icebp
inc
xchg
imul
inc
push
push
je
add
xchg
mov
fwait
mov
jbe
fld
cmps
adc
mov
bnd
addr16
mov
inc
sub
jb
mov
mov
(bad)
neg
add
add
shr
xchg
stos
pop
jne
push
and
push
pop
in
add
mov
repz
inc
jbe
mov
inc
inc
cli
scas
aam
push
mov
adc
movs
mov
push
addr16
adc
retf
xor
push
rcr
loop
iret
cmps
popa
imul
or
mov
and
frstor
mov
mov
adc
add
and
fimul
pushf
out
in
jp
in
aam
retf
fwait
xor
hlt
in
aad
int
int
and
and
fs
inc
cmp
push
add
push
imul
fdivr
retf
pop
and
inc
lods
sar
xor
cmp
and
push
jns
sti
push
mov
add
jne
rol
inc
or
clc
push
and
aaa
mov
jmp
adc
xchg
push
test
outs
xor
adc
or
in
mov
or
mov
jnp
pop
test
into
(bad)
mov
call
pop
pop
je
jp
rcr
fcom
pusha
data16
push
adc
in
dec
dec
or
dec
jmp
mov
add
popa
push
cmp
add
repz
imul
add
aad
mov
sar
fisub
shl
adc
ins
mov
inc
loopne
das
push
adc
(bad)
sbb
jge
xchg
cmovnp
ret
mov
jle
sbb
(bad)
fld
cmp
invd
scas
jp
and
mul
movs
fist
mov
jp
xlat
mul
xor
xor
sub
or
out
mov
cmp
adc
pop
jp
lds
inc
jmp
loopne
xchg
mov
ds
jmp
in
pop
cs
jae
jb
jmp
out
xchg
add
mov
ins
sbb
mov
retf
pusha
hlt
add
pop
cmp
cmc
mov
sbb
mov
and
fs
fcomp
stos
sahf
jl
arpl
dec
sar
sub
adc
jns
shl
mov
xor
push
xchg
cmp
invd
scas
jp
inc
shl
cwde
fimul
mov
aaa
xlat
cmp
adc
jne
inc
jo
jne
inc
jnp
ret
fdiv
(bad)
adc
cwde
add
push
test
scas
arpl
das
pop
adc
repz
pop
les
adc
std
cwde
and
and
mov
dec
dec
je
mov
sub
or
and
sbb
adc
cwde
retf
mov
adc
adc
add
xor
popf
xchg
jno
and
loop
mov
pop
push
and
pop
lea
dec
sub
cmps
sar
mov
and
mov
stc
add
in
in
inc
xor
xchg
les
sub
dec
jge
int
and
mov
sbb
fbld
inc
cmp
sbb
sbb
xlat
sbb
ds
push
in
xchg
dec
aaa
fsub
cdq
pop
mov
dec
pop
std
mov
mov
push
stos
in
mov
dec
add
push
or
sub
pop
sbb
push
jge
sub
repnz
xchg
popa
push
and
mov
adc
fs
ja
xchg
sbb
fnstenv
fdiv
out
iret
out
jo
adc
add
cmp
push
in
daa
or
cwde
cwde
(bad)
aad
push
movs
fisttp
scas
add
push
fnstcw
xor
jns
mov
ret
sbb
retf
fild
rcl
mov
pop
in
inc
add
sub
pusha
scas
mov
adc
out
add
and
and
and
pop
adc
in
inc
lods
sub
mov
mov
cmp
jge
mov
pushf
push
or
mov
stos
jne
xchg
inc
push
and
out
fwait
cmc
inc
sbb
test
pop
nop
mov
push
(bad)
or
test
mov
xor
push
gs
fcmovbe
sub
dec
add
mov
scas
jp
xlat
add
je
sar
jnp
stos
aad
(bad)
mov
(bad)
jmp
mov
inc
shr
add
gs
jb
sar
and
dec
add
cmp
sahf
cmps
inc
push
jns
call
popa
and
or
stc
lds
loope
out
sub
enter
cmp
popa
xor
je
mov
adc
and
pop
and
push
fwait
jno
rcl
add
outs
inc
lock
adc
mov
imul
or
stos
jmp
scas
pushf
shl
retf
mov
sbb
jmp
jno
rcr
cld
cmovno
inc
pushf
xor
popa
add
mov
cmp
cwde
and
adc
or
jnp
outs
mov
dec
ins
test
sub
mov
push
push
xchg
adc
(bad)
icebp
or
daa
popa
sbb
into
pop
cmc
loopne
xchg
gs
xchg
movs
fdivp
adc
sar
repnz
adc
pop
ins
mov
fdiv
in
stos
daa
or
mov
jl
add
retf
push
push
sbb
jbe
and
mov
jl
add
outs
xlat
stos
add
cwde
icebp
push
push
adc
cmp
jge
pop
lahf
(bad)
outs
test
add
and
xchg
test
ins
pop
jne
int
or
xor
xlat
adc
cmp
ja
outs
ret
pop
mov
mov
mov
push
retf
out
and
add
inc
jo
dec
(bad)
out
and
push
fbstp
dec
loope
dec
retf
fstp
mov
sbb
mov
xchg
adc
cmps
jbe
imul
pop
cmps
jl
aaa
test
retf
loopne
dec
cmp
and
jle
and
jmp
dec
adc
sti
jl
scas
mov
jno
xor
inc
mov
jne
add
pop
(bad)
cmp
mov
data16
mov
ins
add
out
mov
inc
or
aad
add
mov
sahf
movs
dec
popf
cmc
cmp
jge
(bad)
and
pop
les
(bad)
shr
call
inc
adc
adc
pop
mov
and
clc
fwait
movs
into
aaa
movs
add
mov
jle
fbstp
mov
aaa
arpl
add
add
mov
adc
mov
mov
hlt
xchg
fisub
mov
inc
(bad)
sbb
push
inc
adc
(bad)
cmp
push
retf
pop
(bad)
int
push
pop
outs
sti
fldcw
fild
icebp
loope
test
fst
fistp
dec
push
(bad)
movs
add
fwait
mov
add
loop
out
int
sbb
ins
test
rcl
jge
push
jmp
out
mov
daa
pop
jg
cdq
out
dec
add
jbe
rcl
ret
add
or
mov
sub
aad
push
call
mov
mov
sbb
inc
mov
je
or
xchg
and
mov
pop
jnp
dec
dec
enter
aaa
adc
add
fst
les
sbb
pushf
push
rol
mov
out
cmp
mov
add
inc
sub
(bad)
sti
pop
jae
and
mov
push
in
mov
fimul
aad
stos
into
xchg
sbb
or
sbb
lods
mov
clc
jne
inc
pusha
jb
das
lock
cdq
movs
pop
jmp
pop
gs
cmp
shl
or
pusha
xor
cs
mov
pop
push
and
mov
inc
dec
pop
mov
inc
and
sar
sub
mov
pop
mov
cmp
inc
xchg
jge
inc
add
inc
push
int3
test
hlt
fcom
mov
xchg
test
mov
inc
sub
inc
cwde
retf
mov
enter
das
and
sub
iret
lds
jb
lock
int3
adc
mov
jmp
push
jae
loopne
rol
or
iret
jbe
pop
int
dec
dec
push
pop
out
jmp
sar
jle
adc
mov
lea
fimul
sub
xchg
sbb
nop
mov
adc
dec
or
loope
jne
hlt
rol
mov
into
in
int3
into
in
push
push
mov
stos
xlat
sub
cdq
das
jecxz
shr
shr
fnstsw
jnp
cmps
jae
data16
mov
aas
stc
movs
xchg
(bad)
retf
inc
jo
push
mov
daa
xchg
mov
mov
std
loop
mov
ins
mov
sar
(bad)
das
cmp
sub
jmp
adc
dec
sbb
hlt
or
leave
add
jbe
cdq
addr16
add
je
retf
rol
mov
retf
cmp
add
push
(bad)
pop
adc
jno
cmp
fcom
fiadd
fsubp
in
jmp
rcl
add
cmp
call
sbb
mov
dec
xchg
test
mov
out
push
jae
retf
xchg
mov
jp
push
xchg
in
push
int3
inc
cmp
xor
adc
push
inc
mov
mov
mov
mov
dec
add
inc
push
push
stos
retf
cmp
adc
sbb
in
jae
in
cmp
lea
sbb
mov
cmp
xor
or
adc
inc
retf
mov
or
test
mov
xor
fistp
and
cmp
add
test
mov
and
cs
mov
add
adc
cli
jnp
std
icebp
leave
mov
adc
iret
sbb
jae
loop
(bad)
hlt
arpl
add
sub
add
jnp
mov
push
sbb
push
in
lods
ret
inc
cmp
neg
jae
(bad)
aam
mov
test
call
retf
mov
push
fist
pop
mov
aam
xchg
xlat
pop
into
es
retf
lea
xchg
mov
mov
push
aaa
pop
inc
lea
inc
xchg
jecxz
mov
(bad)
shr
mov
loopne
mov
dec
push
ret
test
ins
pop
in
cld
mov
push
movs
inc
inc
test
push
cmp
shl
int
ror
jo
mov
add
xor
fisubr
inc
bound
jo
xor
iret
mov
inc
jmp
or
push
aam
fnstenv
in
sbb
push
mov
ja
mov
enter
pop
or
fld
add
cmp
push
push
xchg
sbb
out
push
stc
xchg
dec
(bad)
repz
ins
(bad)
jg
jmp
in
(bad)
inc
sub
pop
ins
mov
retf
lods
imul
je
mov
pop
jb
out
jle
fld
gs
mov
retf
jno
les
je
xor
addr16
pop
aas
jbe
test
out
xchg
add
mov
adc
test
add
push
add
mov
or
cld
jbe
push
stc
cs
test
add
ret
push
add
(bad)
scas
mov
test
sbb
(bad)
(bad)
in
mov
iret
call
les
jb
and
iret
mov
out
pop
pusha
dec
scas
or
jne
xor
and
mov
cdq
jl
ins
sbb
hlt
sahf
push
call
outs
mov
adc
jne
dec
sbb
push
push
dec
cmp
aad
lahf
add
xor
lock
test
(bad)
(bad)
fidivr
xchg
cmps
cmp
rcl
or
xor
pop
lds
out
aas
(bad)
loope
outs
cmp
inc
sbb
bound
inc
sub
push
aaa
mov
push
loope
mov
lods
mov
je
(bad)
push
outs
sub
sub
bound
call
sub
mov
arpl
js
std
cmp
nop
and
imul
adc
pusha
lods
cdq
jecxz
dec
push
and
inc
and
ds
in
lock
cld
and
clc
jp
lock
pop
adc
add
mov
les
test
aam
or
cmps
push
test
pop
xchg
aam
pop
add
scas
ss
add
add
pop
mov
add
popf
dec
lahf
jae
shl
(bad)
sbb
rcr
inc
loopne
push
sbb
add
rcl
add
sbb
dec
repnz
int
pop
jnp
pop
pop
adc
dec
or
pop
push
ret
mov
sub
leave
leave
icebp
jl
jp
lock
sti
ja
push
ins
inc
lock
xchg
mov
js
push
clc
sub
fld
add
addr16
lods
mov
sbb
cmps
pop
jle
mov
sub
sub
push
sub
fucomp
add
retf
scas
jbe
add
mov
xor
mov
stc
addr16
inc
sbb
and
xor
adc
sub
cwde
cmc
pop
cmc
(bad)
jge
add
xor
call
inc
add
lock
mov
ret
pop
mov
lock
fcomp
outs
retf
mov
dec
push
cdq
add
inc
sub
inc
mov
mov
fisttp
stc
clc
adc
fistp
mov
shl
and
push
mov
adc
pop
mov
je
pop
sahf
aas
imul
push
int
sub
test
movs
and
adc
or
fs
sbb
mov
sbb
fwait
dec
add
adc
loop
mov
lods
sub
inc
iret
cmp
pop
or
mov
or
add
test
jg
cmps
jb
ficom
les
adc
jo
in
jp
cdq
mov
jno
std
rol
sbb
xor
xchg
retf
cmp
pushf
xor
cmp
mov
push
push
jno
vphaddubd
mov
js
imul
dec
les
add
or
mov
gs
mov
lds
data16
in
jmp
dec
sub
sbb
stos
push
push
add
nop
sbb
rcl
sbb
pusha
jle
inc
(bad)
imul
and
cmps
add
jle
loopne
jle
mov
adc
adc
lahf
and
push
in
movs
(bad)
cmc
icebp
push
out
mov
cmp
ror
mov
daa
cmp
pop
pop
hlt
jg
inc
jo
adc
pop
outs
xchg
cmp
inc
(bad)
push
jo
in
cmp
ins
adc
(bad)
scas
daa
es
icebp
enter
fwait
retf
pop
mov
shl
pop
call
mov
lods
stos
outs
adc
lahf
test
int
xor
js
xor
rcr
mov
inc
sbb
mov
dec
in
push
adc
push
popf
mov
cmp
ret
ror
jns
gs
ins
aad
add
mov
sbb
pop
aas
and
or
stos
sbb
daa
push
rcr
adc
stos
mov
adc
leave
xchg
daa
sub
nop
nop
or
inc
call
cmps
jo
imul
pushf
adc
dec
cmova
inc
mov
(bad)
sbb
jle
push
in
fcmovu
icebp
push
jb
cmp
xchg
or
pop
mov
call
dec
xor
mov
pop
xor
cmp
inc
test
les
inc
mov
dec
enter
mov
add
inc
in
sbb
lods
retf
scas
mov
add
add
out
cmp
mov
sbb
mov
jne
sbb
pusha
stc
cmp
xchg
mov
rol
dec
pop
mov
cmp
(bad)
and
popf
mov
ja
das
sbb
xchg
pusha
add
mov
mov
std
sbb
out
inc
pop
fcmovb
dec
inc
imul
xlat
ds
jmp
mov
sub
call
dec
(bad)
mov
mov
pop
xor
and
xchg
inc
dec
adc
arpl
push
rcr
jge
movs
mov
mov
stos
jg
jo
int
int
test
add
mov
mov
xlat
pop
jge
mov
jbe
jmp
adc
mov
ins
imul
pop
mov
test
mov
xor
out
and
mov
retf
ror
movs
pop
add
hlt
inc
out
or
pop
xchg
loop
adc
jns
int3
int
mov
cmps
add
xchg
xor
inc
les
dec
ret
jmp
cwde
icebp
or
lea
push
bound
xchg
mov
test
mov
idiv
xlat
pop
jns
mov
pop
inc
and
sbb
mov
call
xor
dec
xchg
pop
push
sbb
lahf
in
pop
cli
cmp
out
ret
outs
imul
mov
xabort
cmp
xor
sbb
enter
jg
xor
fisubr
cmp
sub
mov
pop
(bad)
(bad)
mov
adc
out
mov
jns
repz
pushf
mov
or
rol
ror
pop
cld
shl
xchg
mov
adc
push
mov
xor
and
xor
ror
shr
in
pop
cli
xchg
cmp
das
out
adc
lods
inc
push
fisttp
outs
pusha
int3
nop
cmp
mov
fwait
sub
sar
call
mov
popa
cmp
shl
out
pop
sar
sti
pop
ficom
or
shl
cwde
pop
lahf
xor
call
xor
jle
lods
mov
test
hlt
add
call
push
jge
xor
les
jp
mov
lock
mov
jp
pop
repz
ret
shl
mov
int3
into
ret
mov
test
stc
pop
mov
icebp
sub
rol
xor
std
gs
jb
ins
xor
out
mov
or
cmp
push
pop
aaa
stos
cmp
xchg
syscall
add
mov
mov
nop
das
jno
ds
(bad)
ins
add
push
popa
aas
jle
xchg
xchg
pop
shr
rcr
xlat
adc
cmp
push
add
addr16
jb
mov
addr16
imul
mov
stc
adc
fnstsw
jne
lahf
inc
(bad)
(bad)
mov
dec
or
xchg
shl
jg
or
cld
cld
jo
xchg
inc
es
inc
call
mov
hlt
mov
push
imul
movs
mov
or
fld
daa
ja
outs
into
mov
arpl
mov
add
repnz
lds
jp
(bad)
fcmovb
std
pop
fmul
inc
neg
fiadd
adc
mov
repz
pop
(bad)
cli
and
sbb
imul
add
pop
mov
(bad)
pop
push
pushf
inc
sbb
pop
repnz
aad
cmc
aaa
adc
pushf
xlat
xor
add
jne
lock
and
ins
push
sahf
push
loope
jl
mov
mov
mov
in
(bad)
sbb
cmp
mov
pop
and
in
in
xlat
cmp
sub
enter
jne
aaa
xchg
mul
lds
adc
in
clc
xor
fs
mov
mov
pop
daa
adc
ficom
cmp
call
daa
aam
jp
jns
xchg
adc
in
clc
push
sbb
paddb
adc
adc
mov
addr16
fcmovnu
cld
(bad)
sbb
sub
mov
jne
cdq
and
xchg
lar
je
push
mov
mov
outs
jb
aad
pop
xchg
daa
jmp
and
adc
push
adc
push
push
ret
adc
and
xchg
ss
add
aaa
or
inc
sub
in
nop
jle
and
mov
icebp
les
jo
sti
add
sub
repnz
push
adc
jns
sbb
xor
cmp
stos
mov
pushf
scas
jmp
cmps
inc
mov
adc
pop
add
cmp
ror
sub
retf
retf
sub
enter
fucomip
push
ja
sti
leave
out
movs
repnz
inc
or
mov
add
ins
adc
adc
pop
in
adc
dec
add
adc
cmps
outs
lahf
loop
out
loopne
sar
jp
fldcw
mov
or
mov
sub
add
sbb
push
adc
cs
cmp
je
retf
dec
(bad)
adc
jecxz
or
movs
sub
push
les
add
sbb
adc
cli
lock
cmp
and
fisttp
inc
cld
lock
fcmovbe
inc
mov
sbb
sahf
repz
pop
into
ds
mov
mov
pop
hlt
xchg
mov
lods
inc
mov
mov
pop
pop
jns
pop
enter
adc
xlat
push
mov
hlt
movs
test
lods
add
jle
add
mov
jns
push
jns
call
push
adc
push
pop
fbstp
mov
cmp
pusha
jae
xor
push
cmps
les
xchg
fisttp
jge
sahf
push
mov
das
sti
mov
xchg
stc
sbb
sub
push
or
and
daa
data16
retf
dec
inc
mov
or
jnp
fldcw
xchg
sbb
retf
pop
jle
add
sub
inc
leave
mov
std
or
shl
outs
or
mov
mov
leave
xchg
and
or
clc
mov
push
fsubr
push
nop
jnp
inc
scas
cmp
add
sub
sub
mov
aas
add
push
xor
out
push
cmp
mov
push
sahf
push
aaa
dec
push
or
jnp
pop
or
inc
jmp
ret
xor
imul
adc
jle
mov
lods
xchg
cmc
out
stos
fbstp
rol
loop
xchg
push
or
int3
xor
push
cli
xor
mov
aas
adc
mov
mov
call
add
pop
or
in
sub
outs
cld
out
orps
js
ror
mov
jno
jecxz
hlt
outs
push
mov
int3
xor
sub
retf
and
jle
ins
push
cmc
jno
int
cmp
repz
ds
sbb
and
cld
inc
pop
pusha
jno
or
adc
pop
mov
and
shl
bound
lock
adc
jns
call
cmp
jbe
lods
movs
add
adc
or
push
push
mov
xor
jns
vorps
pop
xchg
add
cdq
mov
(bad)
sahf
(bad)
sub
xor
push
retf
inc
pop
dec
push
add
cmp
mov
and
cmp
xor
sahf
add
std
add
lods
mov
add
jle
mov
jp
jnp
mul
pop
xchg
cmc
loopne
or
sbb
out
push
add
and
aaa
jo
(bad)
aad
jg
repz
fistp
mov
out
cmp
je
jmp
rcl
(bad)
leave
call
sbb
push
push
ret
enter
or
push
dec
or
xor
jg
mov
rcl
mov
addr16
add
adc
add
sbb
xchg
cmp
jns
jle
cmp
out
inc
cld
jg
add
fbld
pop
add
inc
mov
(bad)
imul
mov
mov
pop
scas
cmp
inc
lahf
(bad)
(bad)
xor
sub
adc
in
push
cli
in
mov
sbb
call
or
popa
int
inc
inc
repz
out
les
popa
gs
call
push
dec
xor
and
loope
mov
lods
out
push
aad
sar
cmp
shr
ror
ins
outs
pop
push
xchg
outs
jno
jo
push
stc
fdivr
mov
(bad)
cmp
xchg
mov
mov
jno
xchg
fstp
adc
inc
popa
inc
add
sub
ss
outs
adc
mov
das
test
xchg
push
xchg
inc
cld
cmc
fstp
mov
xchg
xlat
cmp
repnz
mov
or
mov
sub
dec
push
icebp
aaa
neg
jmp
dec
cwde
inc
jmp
sub
neg
mov
cs
gs
cmp
retf
outs
into
mov
mov
xlat
pop
mov
cmp
cmps
ds
xchg
ins
adc
js
sbb
mov
xchg
inc
sti
jno
and
and
adc
pop
adc
call
xchg
push
ror
add
sub
lea
pop
jge
cmp
push
cmp
repnz
test
(bad)
push
dec
jge
ret
ja
call
scas
adc
sbb
aaa
repz
repnz
arpl
bnd
inc
pop
pop
jg
mov
imul
out
sub
add
dec
jg
scas
mov
enter
out
and
sar
adc
cmps
(bad)
cmp
aaa
daa
outs
div
adc
mov
push
pop
add
mov
push
cmps
jmp
es
movs
ins
jo
test
aas
lods
inc
hlt
push
xor
sti
sub
inc
std
fwait
test
xor
or
jae
xchg
std
xchg
sub
fst
loope
loopne
xchg
mov
push
cli
(bad)
jmp
test
mov
pop
stc
push
(bad)
mov
(bad)
popf
or
ja
(bad)
jb
outs
shr
(bad)
and
push
pop
stc
mov
pop
add
ins
lods
mov
icebp
adc
aad
pop
or
mov
cmps
add
movs
dec
mov
mov
(bad)
test
mov
cwde
cld
call
scas
bound
sub
pop
(bad)
cld
outs
xchg
xor
enter
imul
ret
out
(bad)
sbb
in
clc
ss
ret
xchg
and
xchg
cmp
mov
test
sbb
sub
pop
push
xor
fdivr
jp
(bad)
loopne
sub
cmc
fsubr
gs
xchg
gs
shl
(bad)
clc
fldenv
push
mov
jmp
outs
or
in
pop
jne
sbb
mov
enter
sbb
jo
mov
mov
add
xor
xor
cdq
jg
inc
loope
out
cld
retf
mov
jmp
mov
lock
mov
jg
mov
cld
sahf
test
frstor
ret
sti
cmp
mov
xor
out
rol
xchg
mov
repz
adc
xchg
idiv
es
into
sti
add
iret
test
(bad)
ja
sahf
jmp
clc
(bad)
jb
ss
cmp
aad
xchg
fild
loop
fxch
repz
shr
fmul
ror
inc
add
test
retf
stc
(bad)
js
inc
loope
mov
pop
adc
cld
mov
push
(bad)
das
and
dec
ret
mov
iret
mov
repz
popf
cmp
sub
inc
movs
xor
xor
ins
std
mov
aaa
jmp
shr
cli
rol
arpl
pop
fcomi
sahf
xchg
cmps
mov
test
push
cmp
and
(bad)
cmps
inc
fild
mov
sub
mov
push
js
nop
mov
fcomp
xchg
jne
jmp
mov
hlt
rcl
xchg
test
mov
es
or
fdiv
sbb
xor
jnp
sti
cs
mov
sub
(bad)
(bad)
fst
jle
ror
aaa
xor
lods
int
mov
and
sub
cmp
xchg
cld
jo
mov
in
dec
cmps
adc
add
inc
sti
adc
aaa
sub
xchg
add
out
sbb
repz
cmp
int
adc
ds
pusha
fild
adc
xchg
jns
sti
adc
jge
ret
push
jbe
pop
inc
mov
cmc
mov
inc
(bad)
fwait
add
retf
mov
mov
fild
and
xchg
out
mov
imul
out
ret
outs
push
iret
jno
gs
fwait
and
imul
pop
mov
ds
or
or
mov
ja
dec
gs
push
ja
adc
int3
push
or
ss
pop
dec
sub
aaa
mov
fucomp
(bad)
sub
cmp
adc
dec
sahf
retf
xchg
cmps
mov
test
push
jno
cmp
fldcw
xchg
mov
mov
push
sub
xchg
or
sbb
clc
dec
xor
sub
pop
jbe
sub
clc
jg
aam
lahf
pop
mov
repz
add
dec
inc
dec
inc
scas
inc
pusha
or
adc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
fcomi
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
mov
add
and
add
add
add
fadd
add
sbb
add
add
add
call
add
add
and
push
repnz
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
mov
dec
inc
inc
push
js
in
mov
jne
jp
lods
mov
imul
adc
add
fild
mov
xchg
(bad)
into
ds
cmp
out
in
cdq
dec
pop
data16
fwait
mov
xor
mov
mov
test
or
stos
jnp
stc
lahf
out
cmp
fisubr
cmc
sub
adc
pop
jne
push
aad
mov
push
xor
pusha
leave
pop
in
das
shl
or
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
lea
imul
scas
jmp
scas
push
stos
sub
iret
aad
cmp
fwait
jo
mov
jne
push
lods
push
pop
bound
fs
mov
pop
in
out
fsub
(bad)
sub
xchg
pop
pop
mov
in
in
sahf
out
dec
(bad)
and
out
enter
aam
cmp
fbstp
mov
dec
dec
jnp
push
repz
scas
lock
mov
sbb
(bad)
mov
(bad)
jmp
add
xor
xor
jno
ins
cmps
and
jge
aas
data16
xchg
add
sbb
inc
jl
add
pop
jbe
dec
xor
rol
test
mov
cs
ins
rcr
cmps
add
loop
repz
sbb
shl
js
(bad)
cmp
in
push
lods
push
or
jle
(bad)
iret
mov
inc
mov
fcom
mov
push
ror
clc
pop
stos
push
jl
stos
xchg
jmp
jb
cld
leave
icebp
jl
adc
push
es
sbb
dec
imul
pop
push
scas
aad
fwait
aad
call
imul
mov
push
mov
cmps
call
cmp
jecxz
(bad)
pop
cmp
out
xor
jo
sbb
(bad)
out
and
rol
add
or
movs
pop
xchg
dec
jmp
xor
xor
mov
xlat
mov
add
(bad)
aad
mov
inc
movs
dec
xchg
inc
xchg
and
pop
pop
or
dec
aas
cmp
inc
jecxz
jecxz
mov
popa
js
jb
xor
sbb
je
cmp
fdivr
jmp
dec
xchg
std
xor
leave
js
int
xchg
test
repz
in
jle
loope
jbe
jp
dec
jge
scas
push
xchg
out
dec
add
psubsb
fs
sti
cli
cli
fimul
cmps
int3
out
push
sub
cmc
pop
test
popf
inc
inc
inc
imul
ds
xchg
pop
jge
retf
xor
add
add
icebp
xor
sub
add
or
pushf
add
mov
cmp
push
xchg
repz
stc
daa
or
lahf
lods
jp
push
xchg
imul
fst
add
popa
pop
mov
fstp
pop
pop
out
outs
outs
outs
jg
cwde
jl
in
mov
cs
sub
xor
add
add
enter
jecxz
(bad)
nop
mov
inc
mov
jns
push
and
in
arpl
jne
add
lods
test
fs
add
(bad)
sub
lahf
mov
and
push
sub
cmp
cmp
mov
xlat
mov
push
push
adc
into
inc
fidiv
imul
sub
icebp
jno
in
xlat
ficom
and
pop
out
cmps
xchg
mov
loopne
add
pop
cmps
add
clts
(bad)
xchg
imul
das
shl
add
mov
push
out
jno
rcl
sbb
jne
es
push
imul
nop
dec
push
data16
xchg
jge
dec
in
in
stc
retf
xchg
xlat
mov
cmps
push
adc
into
adc
call
cs
aad
push
pop
stc
imul
cli
mov
inc
inc
pusha
retf
xor
sti
push
pushf
jo
arpl
xor
jbe
sub
push
xchg
js
fnsave
sub
mov
jle
or
add
adc
add
aam
aam
pop
movs
pop
popf
shl
sub
adc
push
adc
aas
fwait
int
sbb
inc
jnp
pop
xor
xor
stc
js
mov
and
sbb
loopne
sbb
sbb
add
inc
pop
sbb
push
push
cdq
in
jne
sar
push
adc
push
cdq
cmp
cmp
pop
mov
pop
mov
push
dec
ja
dec
shl
mov
out
loopne
mov
lock
retf
xor
inc
out
jmp
jecxz
shr
rcr
lahf
or
cli
mov
add
adc
repnz
pushf
loopne
loop
hlt
dec
cs
cmp
jmp
push
mov
movs
test
nop
das
jl
mov
iret
lahf
call
pop
dec
popf
call
(bad)
fcmovnu
repz
cmp
mov
ja
dec
cmps
test
fisubr
push
std
jecxz
(bad)
rcr
(bad)
std
mov
sub
add
mov
mov
xor
sub
(bad)
(bad)
pop
sbb
add
sub
pop
mov
int3
or
mov
jnp
and
mov
mov
push
repnz
arpl
pop
push
xchg
lds
or
aam
fnstcw
btc
pop
xor
(bad)
aam
fcmove
dec
rol
push
sti
lahf
fdivr
aaa
xor
or
test
js
xor
jle
repz
push
add
leave
sbb
mov
push
xchg
mov
push
mov
inc
int3
(bad)
jbe
mov
mov
xchg
test
cmp
movs
push
stc
push
fwait
cmp
pusha
ins
out
lds
or
aam
shl
mov
fnstenv
test
mov
ss
sub
call
movs
pop
push
ficomp
addr16
icebp
and
xlat
(bad)
jmp
lods
ins
xchg
int
lds
punpckldq
adc
pop
inc
jecxz
jae
add
stos
xchg
sub
ret
scas
ret
imul
shr
fdivr
and
test
inc
push
mov
call
pop
sub
jmp
mov
addr16
sar
xchg
mov
(bad)
pop
fcomp
popf
dec
fcomp
push
inc
les
(bad)
or
pop
jb
loope
jo
add
dec
pop
and
pop
add
and
icebp
sahf
push
cmp
mov
loop
and
jecxz
xor
sbb
imul
ds
call
(bad)
dec
aad
in
sbb
inc
std
ins
dec
xor
pop
jl
popf
popf
popf
add
pop
jle
dec
add
movs
push
mov
sub
jmp
add
cwde
daa
retf
xlat
ja
jne
or
(bad)
xchg
js
inc
dec
fild
jmp
and
imul
dec
mov
gs
or
gs
hlt
aad
dec
sbb
jne
scas
add
shl
int3
xchg
rcr
jge
adc
adc
gs
ja
mov
clc
aaa
jne
mov
mov
add
pop
sub
bound
call
mov
add
pop
es
mov
in
mov
push
aad
push
cwde
and
ss
loop
stos
test
xchg
push
xor
dec
fs
jne
push
dec
imul
nop
clc
xchg
frstor
add
dec
jmp
bound
cmp
stos
adc
inc
adc
sbb
bound
push
out
es
int3
(bad)
stc
clc
clc
clc
mov
jnp
pop
or
add
mov
lods
lods
lods
outs
addr16
cld
(bad)
stc
jbe
cwde
mov
cwde
test
cmp
(bad)
pop
jg
or
aas
jns
js
icebp
call
add
mov
mov
mov
ins
cld
jmp
or
xor
cmps
and
sbb
jbe
repnz
mov
xlat
cld
mov
pop
mov
or
fst
push
imul
dec
jno
and
jl
push
es
mov
xor
xor
inc
mov
sub
std
iret
push
push
rcr
jnp
jnp
in
loopne
adc
les
movs
xor
aad
jmp
jecxz
fldlg2
pusha
cld
shl
sbb
sbb
ficomp
mov
out
xor
xor
in
fs
test
push
popa
adc
xchg
call
ds
xchg
push
sar
cmp
mov
mov
clc
dec
dec
iret
das
xor
into
dec
in
xchg
xchg
enter
cdq
add
sub
fimul
or
rcr
add
xchg
or
das
push
or
repnz
into
lock
sbb
add
pop
cmp
repnz
cld
mov
(bad)
push
jl
xor
xchg
adc
mov
xor
aas
bound
and
sti
cli
cli
inc
or
mov
aaa
xor
repz
retf
or
sahf
xor
cld
cs
adc
and
imul
sbb
js
loop
xchg
aam
push
pop
pushf
sahf
mov
inc
pop
xchg
cmp
data16
xchg
adc
jle
pop
sub
adc
int
inc
mov
jno
push
rcr
mov
idiv
cdq
ins
mov
mov
adc
retf
mov
sub
scas
push
xchg
outs
test
mov
test
mov
mov
and
xor
lahf
dec
retf
jecxz
idiv
ins
adc
xor
jo
add
xchg
inc
retf
call
sti
and
mov
xor
stc
push
dec
jp
and
mov
or
shl
(bad)
das
jg
lahf
pop
imul
inc
lods
sub
jp
stos
cli
mov
lds
mov
pop
dec
xor
test
fst
adc
jg
repnz
(bad)
mov
push
out
in
addr16
mov
repnz
cld
add
outs
cmp
data16
in
add
push
sbb
movs
ss
sub
dec
jmp
xchg
repnz
inc
dec
call
test
cmp
pop
sub
retf
cmps
jae
call
sbb
adc
cmp
mov
cdq
mov
les
mov
dec
movs
xchg
xor
add
push
pop
or
adc
push
push
pop
sbb
cmps
lahf
into
scas
lahf
retf
fwait
(bad)
rol
cmp
es
ins
shl
or
mov
lods
inc
jl
cs
jno
stos
in
push
pop
cmp
add
lock
add
xchg
leave
xor
inc
push
rcr
ss
pop
xor
es
add
fcmovnu
leave
out
sti
dec
lods
out
test
in
std
jne
push
adc
mov
dec
es
(bad)
js
stc
push
ficom
xchg
inc
(bad)
sbb
cmp
or
or
jp
jnp
cmc
repnz
rcl
and
xor
adc
ss
notrack
mov
rcl
push
fstp
jae
push
xchg
push
dec
cs
add
pop
neg
pusha
sub
jno
jge
leave
ds
adc
xchg
dec
and
fild
bound
lds
mov
lea
fimul
imul
pop
leave
or
es
fwait
jo
rcr
push
test
mov
xor
cmps
out
mov
cli
in
imul
jns
xlat
fst
shl
imul
cmp
push
adc
mov
jmp
data16
mov
mov
call
jle
add
icebp
vmovntdq
pop
or
add
mov
mul
stos
add
scas
xchg
or
dec
pushf
xchg
push
dec
or
dec
dec
aam
push
scas
pop
lock
aad
xchg
jmp
pop
iret
and
nop
in
mov
dec
fmul
mov
lds
stos
dec
push
dec
mov
or
fbstp
mov
retf
sar
push
sub
mov
enter
or
xchg
or
add
push
daa
loopne
add
repz
xchg
loop
(bad)
and
pop
jmp
mov
(bad)
(bad)
fcom
fisttp
ret
mov
sub
and
pop
test
jge
hlt
repz
mov
clc
mov
ja
push
cli
sti
test
jns
dec
pop
xor
fs
fisttp
int3
clc
into
jp
inc
popf
mov
stos
cmp
mov
jne
dec
and
or
mov
and
push
adc
pop
mov
into
add
iret
(bad)
hlt
xor
pop
sbb
xor
cli
es
shl
into
(bad)
(bad)
aas
(bad)
fiadd
cmps
mov
jno
xlat
bound
xchg
pop
pop
dec
cmp
shr
sar
adc
clc
jp
ss
imul
pop
mov
in
leave
stc
fadd
add
sahf
cld
cmp
or
mov
push
sbb
test
clc
or
adc
js
outs
ins
dec
ins
cwde
rol
pop
mov
mov
push
(bad)
lahf
into
jae
xchg
lods
aas
xchg
add
dec
and
dec
mov
mov
add
ret
adc
dec
push
stos
loop
fs
pop
fldln2
in
fsubr
(bad)
add
add
mov
dec
sub
jge
push
mov
lods
sbb
push
movs
pop
stc
jmp
mov
mov
shl
mov
int3
loopne
icebp
or
sub
cdq
gs
mov
test
jl
pushf
adc
mov
sbb
fldcw
sbb
aad
lahf
mov
add
out
and
je
(bad)
mov
push
hlt
dec
test
inc
mul
popa
dec
push
xor
jmp
jecxz
xor
cmp
xchg
clc
or
int3
dec
adc
daa
jae
clc
mov
(bad)
xor
aas
jbe
jbe
loop
imul
pop
fucomp
dec
cmps
push
pop
popa
push
(bad)
fild
shl
mov
and
mov
xchg
call
and
dec
dec
mov
or
pop
sub
jl
jp
add
mov
pop
aaa
pop
iret
jmp
mov
xchg
test
hlt
pop
shl
out
mov
loopne
cmc
call
or
push
sbb
push
dec
dec
fimul
inc
mov
inc
repnz
adc
add
sub
lods
cli
out
jp
sbb
cmc
clc
xor
sub
mov
in
cmp
jecxz
aaa
push
cmp
lock
push
pop
test
imul
fnstsw
mov
pushf
xchg
inc
cmp
leave
add
jp
ins
cwde
jle
mov
fld
rcl
dec
or
mov
arpl
mov
ins
dec
cmps
push
sbb
or
and
cmps
popf
and
mov
int3
mov
loop
lock
mov
ins
pop
pushf
pop
jae
nop
retf
in
bound
aam
and
test
popa
inc
sub
das
cdq
or
in
jae
dec
or
xchg
clc
call
jmp
or
lahf
mov
and
cli
js
sbb
jmp
pop
cmp
aam
cdq
ficom
gs
loopne
xchg
inc
and
sub
ins
scas
mov
xor
add
jmp
daa
mov
adc
out
dec
add
add
sub
push
xchg
pop
xor
rcl
fnstenv
(bad)
aaa
dec
(bad)
mov
arpl
imul
inc
gs
adc
or
clc
enter
outs
shl
cmps
push
push
aas
stos
into
iret
fs
dec
(bad)
adc
adc
mov
mov
push
mov
sbb
push
jns
push
mov
test
fild
(bad)
rep
data16
sub
sub
(bad)
fimul
aad
fiadd
add
idiv
popf
jmp
stc
outs
xchg
mov
scas
cdq
popa
cwde
mov
gs
paddsw
mov
dec
ins
xchg
sar
ret
xchg
xchg
mov
mov
fist
out
fwait
lods
mov
mov
xor
out
jbe
shl
fs
jmp
mov
stc
push
jmp
inc
int
adc
add
pop
es
push
aam
dec
and
aaa
push
xor
or
lods
add
(bad)
aad
lods
xor
dec
mov
xchg
pop
sub
mov
add
imul
pop
fistp
mov
and
movs
pop
rep
rol
add
pop
(bad)
or
(bad)
adc
enter
sar
loop
cs
push
pop
mov
push
pop
movs
mov
add
mov
shr
xchg
xor
cdq
add
mov
stc
inc
pop
add
pop
not
push
sbb
cli
and
mov
pop
jmp
xchg
mov
sub
(bad)
xchg
out
mov
popf
and
inc
pop
inc
pop
jnp
xchg
std
in
cmp
sub
adc
movs
loop
repz
xor
push
push
test
icebp
add
scas
inc
aad
sub
dec
xchg
pop
inc
sbb
outs
adc
pop
jns
cwde
enter
lahf
dec
pop
out
ins
in
(bad)
jmp
mov
add
push
fistp
pop
cmp
sbb
cmps
repz
sbb
rcr
shl
ss
aam
sbb
add
mov
rcr
dec
ret
mov
repz
jae
jl
xor
(bad)
push
not
(bad)
lahf
push
push
in
enter
inc
pop
outs
outs
outs
xor
js
(bad)
jmp
push
imul
xchg
push
cwde
call
push
sbb
xor
jae
cmps
jmp
jg
xor
out
scas
movs
cmc
jmp
dec
sbb
sub
dec
xlat
push
sub
je
inc
hlt
mov
dec
add
pop
inc
inc
imul
mov
aad
ret
xchg
pop
sbb
inc
or
or
les
pusha
pop
pop
leave
pushf
inc
jno
jp
mov
dec
push
dec
in
out
cld
fnstsw
pop
loopne
dec
out
add
mov
in
adc
adc
lock
mov
shl
lods
push
pop
aam
mov
scas
mov
mov
inc
mov
and
sub
xor
loopne
add
arpl
gs
test
cmp
adc
in
(bad)
cmp
outs
sbb
or
shl
xchg
push
loopne
add
cmp
dec
mov
mov
push
test
(bad)
cmp
sar
or
jge
jge
lods
mov
movzx
jg
push
(bad)
out
pusha
inc
adc
jp
and
push
xchg
jl
or
test
pop
popf
imul
and
jle
mov
xchg
cs
jb
hlt
cld
addr16
add
adc
sti
inc
add
cmp
stc
stos
ror
adc
int
in
into
mov
sbb
mov
call
lock
pop
in
mov
out
add
in
rcl
(bad)
lahf
xchg
test
push
mov
sbb
sbb
fidiv
rcr
add
sbb
xor
fdivr
rol
das
pop
mov
ja
pop
outs
inc
cdq
adc
fwait
mov
cmps
repnz
push
adc
lahf
mov
mov
repz
add
or
jmp
push
and
sahf
dec
cdq
(bad)
mov
sbb
push
cmps
mov
push
jmp
fistp
cmp
and
neg
(bad)
mov
mov
xor
inc
cmps
sahf
xor
fs
or
stc
and
nop
inc
data16
mov
cmc
mov
loope
sbb
ja
dec
rcr
mov
nop
add
pop
or
(bad)
out
xor
cmp
and
jg
(bad)
cmp
push
int
rol
dec
shl
popa
xchg
pop
fld
jle
call
faddp
out
mov
add
ja
(bad)
push
xchg
push
(bad)
out
jnp
mov
xor
jns
mov
test
ja
inc
lods
movs
in
inc
sbb
mov
and
int
xor
mov
adc
(bad)
cs
mov
addr16
int3
xor
cmp
enter
jmp
cmc
jge
or
pushf
(bad)
iret
add
dec
inc
shr
mov
and
mov
lds
repz
and
leave
mov
sub
or
jns
out
jmp
mul
pusha
jg
es
xchg
retf
jl
mov
fdiv
les
xchg
shl
mov
ror
xchg
rcr
pusha
xor
xor
cwde
hlt
test
dec
lds
jmp
mov
xlat
push
push
or
mov
sti
fst
int
sbb
adc
sbb
sahf
push
add
cmp
mov
xchg
pop
dec
add
xlat
out
add
mov
out
dec
inc
xchg
addr16
xchg
mov
add
add
add
xchg
dec
push
stos
mov
out
or
inc
add
(bad)
cdq
jg
xchg
in
fnsave
pop
mov
retf
push
xchg
out
jo
imul
dec
(bad)
aas
(bad)
cmp
mov
aad
leave
mov
mov
mov
pop
mov
cmp
mov
mov
jle
stos
jbe
iret
pusha
ss
cmp
es
shl
aas
sbb
int3
xchg
hlt
lahf
jmp
inc
add
mov
xor
pushf
sub
pop
adc
and
int
add
fidiv
das
mov
scas
push
cmp
and
movs
aaa
xor
aas
jmp
cmp
mov
or
jg
cdq
ja
stc
mov
ret
ins
fbld
pushf
push
test
jp
cli
hlt
in
mov
call
imul
ja
ret
pop
jbe
gs
neg
lds
(bad)
leave
cmp
sbb
sbb
leave
xor
and
pusha
mov
dec
pop
add
mov
lods
or
jl
ret
fld
add
jg
xchg
xor
movs
jbe
xor
or
cs
(bad)
das
fdiv
inc
ins
fcmovbe
cwde
pop
rol
test
sub
push
scas
xlat
fidiv
pop
jo
pusha
cmc
out
jl
sub
loop
ja
jno
pop
aam
dec
imul
fst
jg
dec
push
cwde
adc
ror
or
xchg
jbe
div
mov
out
fwait
inc
shl
sub
dec
(bad)
and
pop
mov
jge
jge
mov
cmp
popa
ss
push
inc
add
add
sbb
or
add
dec
xchg
adc
imul
push
cmp
lods
xor
sub
(bad)
rol
add
ja
loopne
mov
stc
out
and
xor
adc
cld
addr16
jnp
xor
cmp
mov
cmp
(bad)
sbb
lahf
add
fprem
push
sbb
dec
or
cdq
jnp
ins
ret
jmp
ss
lods
jle
shl
in
cmp
mov
and
mov
add
rcl
push
or
push
stos
enter
fisub
or
iret
add
add
div
mov
push
fisub
xchg
out
js
fwait
enter
xchg
popa
(bad)
call
ret
push
jge
push
mov
push
fbstp
je
popf
ja
jp
xor
sti
shl
xor
jecxz
shl
jae
fsub
add
inc
repnz
jne
hlt
call
rol
shr
and
add
and
ins
test
fnstenv
xchg
test
mov
and
out
je
pop
leave
inc
out
lock
pop
fs
mov
add
mov
ds
jg
cmp
mov
push
sar
dec
jle
push
xor
movs
out
add
xchg
jmp
jge
push
xor
mov
ror
scas
shl
push
add
stc
rcl
ins
push
cld
mov
push
inc
push
es
dec
fbstp
mov
add
xlat
call
inc
cwde
mov
sub
pushf
xchg
adc
pause
jmp
fimul
add
pop
push
sub
lods
dec
sub
fcmovnb
imul
add
fbld
dec
mov
sahf
scas
fidivr
cmc
xchg
push
pop
test
enter
movs
fnstcw
sti
inc
cmp
cld
jmp
in
ret
jmp
mov
cmp
pop
pop
add
shl
adc
xlat
jecxz
jp
gs
add
loopne
jl
push
sar
cmp
js
stos
add
add
lods
push
push
(bad)
mov
dec
mov
adc
lods
cmp
out
shl
cli
fimul
cmp
xor
and
jne
or
lock
dec
imul
sub
retf
add
fst
push
inc
mov
push
pusha
ins
push
outs
es
retf
arpl
shl
std
mov
pop
or
and
pop
mov
xor
(bad)
(bad)
inc
sub
sub
xchg
les
addr16
lods
std
(bad)
pop
cmps
xor
cmps
(bad)
jmp
sbb
std
cmc
jl
jb
mov
xor
sub
out
(bad)
jne
cmps
mov
cmps
bound
fdiv
xchg
stc
out
ins
leave
add
or
mov
mov
inc
jl
cmp
(bad)
sbb
cmps
push
cli
fidiv
pop
cwde
sbb
add
imul
test
mul
cdq
fsub
xor
and
ja
mov
gs
push
or
add
clc
mov
fbstp
imul
inc
and
xchg
mov
or
xchg
mov
push
dec
mov
mov
in
(bad)
hlt
out
call
adc
jp
sar
pop
pop
fdiv
pop
xor
xor
dec
aad
ds
div
cli
add
add
jo
in
cmp
(bad)
and
fldenv
fmul
adc
push
fs
inc
pushf
test
xchg
test
lods
sbb
cwde
sbb
add
popf
dec
out
std
push
int
xor
xchg
jg
cmp
test
cs
xchg
and
pop
lods
rcr
dec
stos
scas
ror
(bad)
fwait
hlt
push
push
add
inc
push
mov
retf
sub
scas
ret
push
test
cmp
aas
adc
cmp
ds
jecxz
push
jp
shr
and
cmc
repz
in
jae
add
and
fbld
test
enter
xor
mov
cmp
popf
ins
popf
mov
mov
add
adc
or
mov
and
xor
cmp
pop
cmp
lds
rol
lea
pop
aaa
sahf
dec
repnz
retf
mov
xlat
(bad)
fdivr
xchg
pop
std
xchg
mov
sub
fcmove
out
jae
in
jg
hlt
mov
add
pop
or
fidivr
(bad)
(bad)
pop
paddq
add
cmp
dec
jle
dec
enter
iret
adc
mov
scas
adc
(bad)
outs
outs
outs
xchg
sti
dec
(bad)
repnz
cmp
cmps
dec
jmp
push
mov
mov
test
sti
push
adc
sar
xor
inc
or
sbb
jg
arpl
sbb
imul
gs
jge
cmp
or
jecxz
mov
jne
add
cmp
cld
sahf
test
push
and
rcr
pop
pop
data16
jmp
mov
jns
cwde
cmps
(bad)
jecxz
inc
sbb
sub
or
cli
pop
pop
das
jge
lock
leave
xchg
daa
daa
fs
cs
movs
div
push
aaa
pop
xor
xchg
call
fbld
fldenv
cmp
add
and
mov
mov
mov
mov
sub
test
inc
xor
cmc
xchg
je
dec
jnp
jl
pop
icebp
arpl
test
add
cmp
fcom
loopne
push
adc
movs
(bad)
cld
pusha
pop
mov
lock
clc
sbb
cli
cld
xor
cmp
mov
xchg
add
push
lds
push
add
into
arpl
add
into
test
push
push
in
pop
mov
mov
fisub
add
pop
add
push
push
inc
jecxz
xchg
dec
cld
leave
fidiv
push
jg
ins
std
push
add
fiadd
dec
mov
and
add
cmp
outs
mov
mov
retf
mov
adc
pop
in
mov
jmp
mov
stc
and
xchg
pop
mov
int
mov
stc
jnp
mov
mov
add
fcom
jno
xlat
lods
mov
dec
aam
and
sahf
sahf
mov
fsub
aam
scas
pop
mov
push
das
call
add
and
(bad)
pfcmpgt
jp
test
cmp
jl
jne
jne
add
jecxz
mov
jmp
cmp
out
fnsave
loopne
sar
cli
sbb
pop
aad
pop
int
popf
mov
mov
add
dec
xor
sahf
nop
fcom
add
sbb
pop
dec
(bad)
rol
iret
or
test
(bad)
mov
cmp
mov
pusha
imul
cmp
add
stos
xor
inc
stc
cmp
sub
jg
add
fcomip
cmp
cli
mov
adc
pop
inc
outs
dec
es
mov
push
jmp
stos
push
movs
push
or
nop
and
popa
cli
cs
ret
ins
and
leave
leave
ss
sub
sub
inc
dec
xor
outs
mov
jno
mov
sbb
mov
xor
pop
push
js
shl
out
(bad)
iret
add
xchg
std
lods
(bad)
stos
xchg
push
xchg
jns
inc
pop
push
loopne
(bad)
cmc
add
(bad)
aam
shl
mov
ds
and
mov
jnp
cmp
cmc
not
pop
mov
inc
test
sub
mov
cli
push
leave
adc
and
pop
dec
and
(bad)
sti
cli
iret
iret
jmp
int3
cld
stos
clc
bound
stos
into
mov
pop
xchg
mov
(bad)
cmp
and
scas
xor
ss
pusha
push
sub
mov
or
adc
xchg
mov
add
iret
aaa
cmp
push
sbb
rol
xchg
test
lods
aaa
mov
aad
retf
jnp
mov
sub
inc
pop
jnp
cmps
pushf
dec
and
add
std
dec
mov
add
jg
dec
addr16
inc
add
dec
fwait
outs
inc
add
push
sbb
mov
cmp
sbb
mov
add
out
aam
push
cli
xchg
neg
jns
and
push
mov
cld
dec
push
jmp
fcmovb
adc
lods
popa
ds
cli
add
add
dec
movs
pop
std
(bad)
pop
pop
test
pop
push
add
pop
pushf
loop
icebp
mov
fisttp
mov
scas
dec
pop
fs
ja
jne
ja
jp
cs
and
sbb
or
add
adc
and
popa
pusha
jmp
lds
inc
add
fs
dec
mov
push
stos
cmp
add
or
adc
fcom
sbb
dec
retf
rcl
dec
dec
jne
push
out
jl
cmps
cmp
nop
test
out
cmp
sub
or
adc
shl
aas
inc
(bad)
mov
xchg
cmps
mov
out
lds
and
mov
xor
(bad)
shl
cwde
dec
inc
xor
jecxz
add
test
inc
pop
adc
pop
retf
stc
jns
sub
or
int3
test
movs
inc
and
push
mov
push
out
or
rcr
dec
sub
ret
mov
cwde
add
pop
dec
mov
scas
pop
dec
popf
(bad)
jecxz
push
or
xor
jo
lds
xchg
sub
sbb
into
leave
fld
add
adc
rol
mov
je
(bad)
popa
jecxz
push
add
sbb
inc
popf
or
jmp
aaa
ficomp
stc
add
add
and
repz
adc
dec
(bad)
(bad)
in
xlat
xchg
xchg
(bad)
popf
mov
jns
test
dec
aam
push
adc
dec
pusha
push
movs
and
xchg
cli
sbb
(bad)
push
test
xor
xor
push
xor
mov
mov
lock
int3
cmps
xchg
pop
and
adc
xchg
retf
xor
mov
push
mov
inc
push
sar
imul
sub
ret
pop
mov
jno
pop
cmp
arpl
in
int
inc
push
pop
cmp
sbb
mov
sbb
(bad)
loope
xchg
xor
sbb
pop
mov
push
pop
xchg
rol
out
fld1
cwde
mov
in
dec
cmp
fdiv
ins
aam
xor
dec
pop
imul
jmp
frstor
or
push
jmp
adc
out
imul
iret
pop
or
js
mov
rcl
jl
xor
rcl
adc
jnp
mov
xor
int
ss
aas
jmp
ret
inc
jmp
and
inc
add
cmp
fdivrp
xor
push
add
std
int3
test
fs
scas
xchg
sahf
jle
jmp
inc
push
ja
adc
(bad)
(bad)
mov
inc
clc
out
sbb
xor
test
cmp
rcl
fiadd
inc
ret
hlt
retf
mov
das
mov
push
mov
or
jmp
std
sbb
mov
pop
mov
push
push
test
mov
dec
lds
test
or
(bad)
cli
mov
(bad)
into
aaa
repz
xlat
popa
lahf
and
xor
scas
push
ss
daa
fsub
lods
fst
dec
inc
lahf
outs
push
jns
or
and
cwde
cs
mov
fcmovu
inc
imul
and
out
ror
inc
jmp
mov
cmp
call
sub
sti
cs
dec
daa
arpl
push
fidiv
mov
xchg
jmp
shl
sbb
adc
add
jmp
stc
stc
push
fucomi
mov
(bad)
imul
jmp
add
ficomp
outs
ins
ins
or
test
mov
jecxz
scas
scas
mov
xchg
je
sbb
loope
inc
call
or
fcmovb
(bad)
cli
cdq
jle
sahf
inc
fcom
xchg
jle
fs
ins
xor
add
ficomp
scas
fimul
fnsave
fs
in
aas
adc
inc
jmp
daa
xchg
shl
push
fbstp
cmc
pop
test
mov
in
je
aas
pop
add
fwait
cdq
mov
std
push
inc
movs
cmp
sub
push
pop
jbe
scas
popf
icebp
or
pop
lds
shl
test
mov
cmp
cmp
push
pop
lahf
xchg
rcr
jno
jns
fs
rcl
dec
mov
retf
mov
test
add
jg
movs
stos
ds
dec
cmp
xchg
mov
mov
xor
cmps
sbb
mov
packssdw
xlat
and
enter
loope
stos
or
adc
mov
mov
jle
imul
and
fcomp
mov
je
int3
fiadd
mov
shl
mov
fistp
or
nop
add
shl
mov
call
cdq
punpcklwd
std
add
clc
repnz
iret
out
cmp
mov
dec
adc
or
pop
sbb
mov
retf
mov
mov
loopne
sub
in
sub
xchg
push
nop
je
adc
sti
movs
das
add
inc
inc
xchg
dec
mov
push
int3
pop
test
pop
(bad)
(bad)
rcl
mov
lock
scas
icebp
add
arpl
push
jmp
cmp
and
or
pop
fcmovbe
adc
scas
dec
(bad)
jp
icebp
arpl
pop
pusha
popa
pop
add
pop
inc
clc
push
fisttp
mov
cmp
cmp
aaa
mov
inc
or
pop
push
jns
push
mul
(bad)
mov
sbb
sbb
inc
aas
cli
adc
retf
dec
movs
leave
xchg
jno
dec
and
adc
and
test
mov
jmp
ror
adc
fnstcw
mov
out
fdiv
cmp
cmps
jnp
push
scas
mov
or
cwde
stc
cmc
cmp
scas
and
hlt
div
retf
jg
jp
jno
xor
add
jb
jae
mov
shl
jge
mov
mov
ret
push
xor
mov
and
ret
imul
enter
inc
xchg
pushf
inc
sub
cmp
rol
lds
cli
sbb
(bad)
rcl
jnp
pop
add
cld
dec
cld
clc
arpl
inc
into
fcmovnb
adc
mov
ja
add
pusha
movs
jg
add
shr
sbb
inc
outs
gs
rcl
retf
cmps
and
xor
jmp
push
(bad)
mov
(bad)
ret
inc
jmp
popf
cmp
cmp
cmp
call
xchg
ins
xor
outs
push
cmp
mov
in
(bad)
pop
outs
movs
retf
pop
mov
nop
mov
mov
enter
jle
stc
add
ds
test
js
and
mov
jo
sub
xor
xchg
shl
arpl
add
adc
iret
or
add
push
xlat
dec
cld
xor
stc
in
(bad)
inc
sbb
pop
xor
adc
ds
loop
push
add
inc
sbb
mov
out
test
pop
retf
fcmovnu
xor
int3
inc
dec
jnp
sbb
ret
clc
loope
jg
shl
sbb
mov
pop
add
xchg
add
xchg
or
loop
cmc
dec
mov
mov
mov
retf
sbb
sub
add
shr
movs
mov
cmc
push
mov
loope
pop
cmps
scas
jl
sub
fucom
(bad)
sbb
std
jmp
cmp
mov
mov
out
adc
pop
inc
dec
add
add
jne
dec
jns
sbb
clc
push
jae
push
adc
add
out
inc
inc
sbb
(bad)
mov
add
adc
out
sbb
adc
gs
stc
es
or
bound
loopne
adc
ins
es
inc
aas
ss
loope
sbb
sbb
sub
call
or
pop
dec
jp
sbb
outs
xor
inc
out
dec
push
(bad)
clc
mov
retf
clc
adc
add
add
cmp
push
xor
(bad)
fistp
icebp
adc
sahf
mov
nop
addr16
aas
cli
fmul
icebp
adc
sbb
or
push
mov
aas
(bad)
xlat
js
outs
repnz
push
loope
xor
(bad)
jmp
pop
cli
adc
cmp
xchg
in
test
adc
in
daa
pop
retf
and
sahf
inc
add
fwait
jecxz
xor
std
jp
std
neg
inc
and
mov
sahf
scas
bnd
(bad)
cli
(bad)
xor
inc
inc
and
and
push
leave
shl
add
ds
popa
pusha
fdiv
test
cwde
dec
cmp
scas
mov
fdivr
push
cmp
cmp
lea
sbb
gs
jbe
sub
jle
push
cmps
cdq
jle
movs
test
inc
sbb
jle
add
xchg
add
jnp
mov
retf
and
addr16
jmp
mov
or
and
mov
mov
jnp
pop
dec
dec
xchg
sbb
repz
in
mul
outs
stos
(bad)
cmp
pushf
adc
push
idiv
fwait
xor
mov
rol
ficomp
pop
jl
inc
mov
xchg
adc
adc
pop
lock
jle
xchg
jmp
call
fnstenv
(bad)
hlt
jns
iret
jecxz
mov
cmp
add
or
shl
push
or
and
push
push
mov
add
pusha
or
test
imul
ja
mov
popf
cmp
ret
(bad)
bound
cmc
shr
bound
inc
xchg
cmp
adc
mov
and
sbb
repnz
sbb
adc
xchg
in
and
pop
aaa
aad
(bad)
pop
shr
icebp
cmp
jl
push
jmp
loopne
xchg
pop
daa
enter
push
pop
mov
xchg
xchg
cmc
daa
sub
jle
push
std
enter
jg
sar
mov
into
add
cld
mov
or
or
pop
cmps
jnp
scas
push
loop
out
(bad)
(bad)
pop
adc
(bad)
adc
ins
pop
xchg
mov
popa
adc
enter
std
mov
cmps
int3
popa
arpl
cmc
add
sub
pop
dec
std
add
hlt
mov
stc
out
ds
sub
out
rcr
cmp
mov
mov
mov
fldcw
sbb
shl
cmp
movs
movs
ja
in
inc
aad
les
jmp
xchg
int
push
div
out
ja
pop
or
repz
fimul
sti
sub
jne
dec
int3
loope
mul
test
mov
push
pop
mov
cmc
sub
push
scas
int
cmp
cwde
mov
sbb
xchg
ret
in
inc
(bad)
rcl
rol
jmp
jno
stc
(bad)
cld
sbb
dec
frndint
out
gs
in
jno
in
ds
pop
cmps
lahf
dec
jp
icebp
mov
sub
cmps
add
or
std
xlat
fild
or
(bad)
js
pop
dec
(bad)
loop
scas
mov
mov
xchg
jmp
pop
neg
add
sub
jg
jl
pop
push
mov
adc
add
test
cwde
(bad)
or
fistp
push
movs
shl
push
outs
mov
fwait
adc
cmp
rep
jp
(bad)
adc
iret
ins
sbb
ss
inc
mov
fisttp
inc
add
mov
dec
shl
jmp
add
stos
fsubr
and
cmc
fbstp
dec
push
fld
xchg
cli
mov
jge
pop
imul
mov
push
and
pop
pop
pop
pop
mov
jle
es
loop
mov
(bad)
repnz
es
lock
jmp
fsubr
out
and
jmp
imul
jmp
mov
dec
lahf
ret
mov
pop
add
call
aaa
push
cmc
test
lods
shr
je
std
push
rcl
(bad)
out
mov
cmp
xchg
cmp
test
xor
fsub
sar
repz
jbe
hlt
pop
out
push
dec
(bad)
repnz
xor
jns
retf
aam
shr
jge
inc
test
mov
jne
and
add
loopne
les
ret
inc
lods
push
pop
shl
mov
cld
loope
rcl
scas
cmps
inc
push
jp
mov
rol
mov
dec
mov
push
or
sub
inc
fldenv
or
fcmovnu
sbb
push
and
int3
xor
or
jecxz
pusha
or
lahf
jbe
pushf
or
aaa
cwde
push
or
add
fdivr
out
idiv
xor
out
fcmovu
fld
xchg
leave
dec
rcr
scas
fs
jno
add
adc
rcl
fnstcw
(bad)
int
in
(bad)
mov
std
popf
nop
mov
mov
test
(bad)
cmp
ret
dec
nop
mov
loop
fnstenv
push
repnz
stc
ds
movs
lods
sbb
ds
daa
aas
clc
mov
sub
gs
pop
jg
in
mov
dec
ror
xchg
xchg
mov
or
adc
cmp
add
pop
cdq
aas
int
jg
call
popf
hlt
jmp
call
push
cmc
pusha
adc
jg
lock
pop
mov
xchg
nop
in
cmp
dec
inc
jmp
xor
popa
jge
push
in
jmp
cmp
xor
out
push
sbb
retf
mov
je
in
fdiv
and
xacquire
dec
fdiv
iret
nop
cmp
or
scas
and
lea
mov
out
jl
sub
outs
xchg
test
in
or
pop
test
fmul
and
cwde
add
rcr
fcomp
pop
mov
jmp
jp
aad
jmp
mov
jmp
mov
adc
mov
pusha
jecxz
xor
in
(bad)
inc
mov
rcr
cmp
mov
cld
xor
fnstcw
jb
xchg
jp
xor
icebp
jle
xchg
stc
jecxz
(bad)
(bad)
faddp
inc
iret
pusha
ret
repz
and
fbld
lea
out
pop
retf
pop
or
(bad)
out
cmps
iret
aas
jle
sar
inc
out
retf
sbb
cmp
add
repz
cmp
pop
add
and
dec
mov
and
pop
cmc
cmps
pop
jge
bound
cmp
enter
push
jl
fisubr
lahf
cmps
or
sub
ss
stc
call
inc
push
cmp
fist
and
aas
dec
jecxz
xor
leave
or
sbb
push
dec
loopne
(bad)
xchg
jno
out
push
rcr
sahf
xor
fnstsw
and
sar
int
xchg
rcl
adc
push
inc
retf
mov
mov
mov
movs
test
test
stos
xchg
aas
xlat
cdq
pop
mov
mov
push
aad
outs
pop
dec
cmp
cdq
mov
adc
stc
pop
cmp
(bad)
mov
lea
aaa
or
loop
(bad)
lods
cmps
and
inc
dec
js
and
js
mul
fdiv
add
sbb
xchg
bound
adc
enter
inc
mov
fld
in
pop
sub
scas
pop
js
stc
inc
(bad)
(bad)
inc
hlt
sub
lods
mov
cmc
pop
inc
je
sbb
repnz
mov
in
jg
dec
out
out
cmps
enter
dec
add
jb
add
or
fdivp
int3
fbld
in
hlt
test
(bad)
pop
enter
inc
adc
rcl
fist
and
xor
lahf
scas
mov
loop
xor
xor
or
or
xchg
cmp
xchg
retf
jle
or
(bad)
pop
int3
scas
jb
call
hlt
inc
sub
add
stos
push
retf
xchg
int
jbe
imul
push
or
pop
pop
mov
lods
add
(bad)
and
add
pop
ror
(bad)
pushf
retf
xor
adc
xchg
pop
pop
sub
push
aad
es
push
popa
mov
ins
(bad)
or
mov
inc
repz
mov
xor
push
loopne
repnz
mov
xor
push
outs
mov
out
adc
in
xor
pushf
in
jmp
repnz
jb
fisub
or
loope
daa
js
mov
jnp
(bad)
jmp
fidiv
xor
pop
inc
add
cmp
(bad)
push
sub
cld
fcos
call
ins
nop
into
xchg
inc
add
loopne
mov
add
outs
mov
fcomp
cmps
test
(bad)
hlt
jecxz
iret
sar
mov
popf
jne
sbb
add
add
mov
mov
inc
add
bound
push
lods
into
das
cmp
pop
cwde
or
bound
jp
nop
add
push
xchg
aad
inc
fcom
mov
push
fdivrp
and
je
ins
mov
in
fistp
push
cmp
js
sbb
in
push
mov
aas
(bad)
push
out
push
jmp
xor
dec
push
lods
cmps
pop
jbe
out
pushf
jmp
pop
add
xchg
inc
sbb
add
mov
aam
pop
xchg
stc
add
push
mov
hlt
inc
and
popa
shr
ret
lods
mov
aad
(bad)
xchg
std
mov
lds
and
imul
pop
pop
loope
jmp
(bad)
jecxz
in
rcr
jg
scas
jge
fsub
cwde
and
pop
jmp
dec
pop
cmps
pop
(bad)
(bad)
jo
movs
stc
out
push
mov
jne
xchg
repnz
repz
je
mov
cwde
icebp
xlat
pop
dec
aam
add
sub
sti
ss
fcmove
push
cli
jo
repnz
lahf
out
mov
dec
(bad)
(bad)
(bad)
mov
sub
add
inc
add
add
rcr
bound
sahf
jg
mov
jle
ds
lahf
pushf
retf
or
daa
les
jns
and
lds
enter
add
test
loope
sbb
pop
int
mov
push
arpl
xchg
int
int3
imul
and
call
inc
xchg
pop
mov
cli
mov
inc
test
xchg
sbb
or
icebp
rcl
adc
ror
jo
ss
shr
repnz
mov
cmps
pop
mov
popf
xchg
pop
xchg
arpl
jb
add
retf
pop
sub
js
(bad)
repz
outs
add
fdivr
(bad)
fistp
leave
rcr
shl
popa
mov
call
aad
mov
aaa
fbld
(bad)
cmp
loope
arpl
movs
add
jge
sbb
sbb
sbb
jmp
adc
push
inc
in
jmp
or
cmp
sahf
push
aam
mov
cli
jmp
retf
retf
or
fcomp
dec
hlt
loopne
call
sbb
imul
(bad)
mov
mov
lods
lahf
repz
or
cld
mov
lock
cmp
jmp
sti
and
repnz
mov
je
inc
mov
mov
lods
sar
aam
imul
vpmacswd
push
or
push
or
pusha
ret
cmp
push
mov
sub
or
fimul
lds
xor
pop
rol
mov
xchg
lahf
mov
push
push
push
repnz
aam
and
inc
cmps
stos
or
pop
inc
jae
xchg
daa
in
int3
add
jge
ffree
sub
push
loopne
pop
and
pushf
repz
in
int
sbb
dec
push
xchg
push
push
adc
inc
movs
pop
arpl
push
mov
mov
xor
jae
js
xchg
and
outs
cmps
xchg
jp
push
js
mov
mov
arpl
stos
inc
adc
inc
push
dec
inc
imul
sbb
mov
(bad)
xor
ss
cmp
push
cld
aad
sbb
ins
mov
in
mov
mov
cmps
push
mov
mov
inc
movs
js
mov
and
loopne
sub
inc
repz
sub
rcl
test
arpl
pop
jmp
jle
cmps
xlat
fist
test
jg
retf
cmc
mov
inc
scas
mov
sar
mov
mov
jno
cs
lock
add
mov
cmp
movs
dec
outs
jecxz
stos
mov
xchg
pop
add
dec
cwde
adc
mov
mov
enter
dec
test
ror
xlat
jge
and
jbe
iret
xchg
pop
icebp
sub
adc
cmps
pushf
inc
retf
aas
adc
mov
and
add
push
stos
out
cs
sub
test
imul
pop
retf
jbe
adc
mov
sub
ja
jge
aas
cld
pop
(bad)
mov
clc
sbb
dec
enter
loopne
imul
dec
xchg
mov
jmp
shl
and
mov
sbb
pop
xor
jl
out
pop
nop
mov
js
inc
adc
dec
std
jne
pop
in
jne
leave
xor
push
mov
hlt
jmp
mov
add
mov
in
jle
add
add
inc
out
xor
pop
mov
add
aad
ss
call
std
jae
pop
sbb
aad
inc
(bad)
dec
scas
out
fsubr
push
jno
das
aam
mov
test
or
mov
mov
scas
fimul
ffreep
cmps
arpl
data16
add
test
mov
je
cld
mov
mov
push
and
add
push
les
pop
push
inc
jnp
outs
ror
adc
rcr
hlt
loopne
mov
add
jl
arpl
mov
push
cmp
ret
xchg
fist
xchg
sar
pusha
or
pop
test
mov
rcr
push
push
retf
sar
sbb
fwait
leave
dec
jmp
jge
in
gs
mov
stc
dec
cli
shr
jle
dec
call
inc
xor
jnp
push
cmp
add
clc
jp
or
fimul
neg
fcom
sub
(bad)
or
mov
aaa
pop
dec
je
fwait
mov
jmp
out
in
jecxz
cmp
adc
out
pop
sar
mov
inc
ds
dec
clc
daa
mov
pop
daa
sub
inc
cmps
bsf
je
push
add
jne
dec
dec
or
in
push
fnsave
jg
mov
seta
push
ins
mov
(bad)
mov
fsubr
(bad)
sub
jns
aam
push
jbe
inc
pop
jle
dec
das
loopne
mov
add
pop
xchg
das
add
int3
or
or
xor
aas
add
add
pushf
arpl
mov
dec
pop
mov
stos
pop
ss
add
pop
adc
sbb
jnp
mov
adc
cwde
adc
pushf
jae
push
sub
(bad)
cs
pop
cdq
add
mov
pop
pop
add
push
aam
lods
rol
push
and
xor
(bad)
icebp
leave
mov
sbb
adc
ja
xchg
cs
(bad)
jge
jbe
mov
pop
jb
rcr
fnstsw
dec
aas
test
mov
ficomp
stos
in
adc
mov
cmp
scas
das
mov
mov
shl
jg
imul
ffree
add
stos
cld
retf
dec
cwde
jns
push
inc
iret
push
imul
(bad)
rcl
add
leave
sbb
pop
mov
or
cmps
pop
in
aas
int
fwait
pop
cmc
pop
jg
fstp
adc
jo
out
adc
(bad)
outs
fldenv
jb
cli
ret
rcl
cmc
fwait
aaa
icebp
test
dec
aam
xchg
scas
outs
mov
mov
jl
pop
cmp
ss
or
and
cwde
imul
adc
jecxz
mov
add
cli
add
dec
push
fwait
pop
sub
retf
mov
xor
push
or
lea
sti
mov
mov
add
sbb
adc
sub
dec
(bad)
adc
or
ins
outs
adc
mov
xchg
push
sub
es
shr
(bad)
pusha
and
jmpw
sub
mov
gs
push
xchg
cmp
inc
stos
nop
cli
ins
lods
ins
push
gs
aad
dec
mov
les
mov
ds
pop
mov
ds
icebp
(bad)
or
mov
mov
pop
pop
popf
ja
sub
push
les
xchg
imul
sahf
idiv
movs
mov
ins
sbb
mov
loope
cld
jle
and
stos
js
push
xchg
pop
retf
jp
aad
mov
(bad)
gs
push
and
push
cmps
dec
pop
sub
sbb
dec
or
mov
pop
sub
fbstp
sbb
xor
into
adc
push
cwde
xor
xchg
into
mov
pop
imul
push
call
xor
add
loope
rcr
mov
outs
mov
mov
lods
inc
jne
adc
push
jge
daa
les
push
jnp
jno
out
xchg
mov
mov
push
cwde
sbb
push
rol
inc
pop
mov
or
ret
call
stos
or
fdiv
lea
and
js
sbb
push
mov
mov
xor
and
mov
xor
sahf
addr16
sbb
cmps
mov
fs
dec
scas
adc
fnstenv
and
adc
shl
xor
arpl
mov
push
ins
dec
jp
pop
mov
mov
pop
retf
dec
lods
mov
shr
mov
aaa
mov
jnp
xchg
out
mov
jmp
xor
xlat
data16
mov
push
pop
lods
dec
loope
xchg
pop
and
pop
sub
mov
jns
in
xor
mov
(bad)
test
mov
add
mov
(bad)
sub
out
sub
scas
mov
ds
icebp
bound
std
xor
fild
xlat
mov
xor
stc
push
(bad)
lock
adc
cmp
std
call
inc
cdq
aas
test
cmp
jp
inc
ficomp
sub
cwde
sbb
cmc
add
xor
(bad)
aas
leave
sub
jb
lods
sub
jp
mov
ins
pop
inc
je
add
retf
cmp
mov
xor
test
movs
cmp
hlt
int
inc
jmp
ins
adc
test
aaa
cmp
bound
add
pop
adc
ret
or
pop
jle
fiadd
xchg
arpl
jno
cld
cmp
cs
repnz
or
jno
add
sbb
mov
jno
fidivr
cwde
cmps
and
jae
loop
jmp
stos
add
ret
shl
and
add
lahf
int
xchg
pop
scas
stos
push
xor
adc
lea
ret
in
ds
jle
jg
mov
frstor
out
test
push
or
mov
stos
mov
or
push
dec
push
mov
sar
hlt
stc
xor
push
xor
jge
mov
retf
aas
out
sbb
in
fidiv
pop
mov
fbstp
pop
pusha
xchg
jmp
pop
repnz
js
out
fstp
out
scas
in
xchg
dec
xchg
iret
loopne
loop
sub
fsubp
sub
inc
pop
fmul
or
out
sti
mov
mov
lds
outs
iret
or
nop
lahf
jbe
add
or
xor
ja
xchg
out
stc
dec
outs
(bad)
loopne
pop
ret
xchg
add
mov
loop
rcr
jb
out
xchg
or
sub
test
sub
pop
mov
fdivr
xor
mov
call
ja
lods
shr
test
dec
repnz
add
mov
inc
je
adc
sub
aam
push
and
or
mov
mov
and
jl
aam
xchg
sub
aas
ror
les
jbe
jge
es
inc
fisub
jmp
int
rcr
cmp
push
or
push
jp
dec
cmps
call
mov
pop
lods
sub
into
rcl
lods
scas
mov
pop
and
shl
adc
jl
jno
pop
repnz
pop
mov
sahf
js
aam
mov
dec
cdq
sub
xchg
call
cdq
aad
jmp
popf
xor
mov
aad
ins
jle
lods
ins
dec
scas
(bad)
in
retf
ficom
fisubr
sub
int3
jbe
xchg
test
(bad)
clc
mov
imul
loope
adc
cld
push
jl
push
(bad)
pop
push
jmp
sub
loopne
mov
jle
cmp
adc
push
dec
sbb
add
xor
aad
sar
add
scas
cld
jo
fld
popa
cmc
lldt
pop
lods
aam
push
sub
jne
adc
mov
jl
jnp
repz
sbb
add
and
nop
call
mov
mov
and
aaa
sbb
adc
or
inc
add
arpl
or
call
and
daa
pop
or
cmp
shl
inc
cmp
daa
mov
shl
popf
cdq
push
sbb
push
inc
jge
in
imul
inc
inc
push
call
push
or
xchg
push
or
repz
and
lds
mov
sub
shr
sbb
loope
mov
mov
push
mov
inc
xchg
push
mov
cwde
outs
dec
pop
jecxz
cmp
xchg
adc
les
jle
xlat
mov
retf
aad
test
mov
xchg
inc
sub
shl
int3
pop
xor
pop
in
fild
stos
ins
dec
je
cli
clc
push
mov
in
je
xor
xchg
mov
xor
(bad)
dec
leave
test
jnp
mov
lahf
out
addr16
aad
cmps
sahf
icebp
push
cmp
sbb
pop
jnp
mov
fwait
push
(bad)
std
iret
pop
out
(bad)
ficomp
add
loope
pusha
fnstcw
pop
xchg
jns
dec
inc
inc
scas
aaa
outs
gs
jno
mov
mov
fbld
jns
pop
mov
imul
inc
clc
mov
fld
lods
inc
aaa
pop
mov
int
mov
jmp
push
xor
sbb
int3
stos
mov
cmp
dec
(bad)
mov
sbb
pop
dec
movs
dec
ins
add
xchg
dec
inc
fild
fnstcw
or
sbb
adc
mov
test
pusha
fcmovnb
fcomp
(bad)
je
dec
das
out
es
push
out
les
mov
jge
adc
and
add
scas
cmps
inc
shl
adc
test
shl
popa
es
loop
adc
stc
es
outs
(bad)
stc
or
addr16
sbb
dec
lds
inc
retf
mul
xchg
pop
sbb
(bad)
cmp
dec
cmps
mov
cmp
or
sbb
push
movs
bswap
mov
(bad)
cld
fs
popa
xchg
dec
lock
call
sbb
call
imul
call
sbb
(bad)
retf
fbstp
imul
inc
cli
ficomp
sub
pusha
cld
cwde
icebp
dec
xchg
add
mov
stos
adc
idiv
int
dec
add
int
aaa
sbb
cmp
add
and
sub
outs
lods
jmp
das
arpl
psrld
adc
sbb
push
mov
test
pop
(bad)
mov
ins
fisttp
jmp
xchg
pop
bound
call
aam
mov
std
xchg
repz
cmp
leave
sub
cli
push
dec
push
sub
mov
mov
jge
adc
push
fwait
xor
add
js
or
in
test
pop
sbb
and
lods
inc
and
inc
and
outs
pushf
dec
push
xor
sbb
push
sar
dec
or
nop
imul
aad
ret
pop
in
cmp
pop
cmp
push
xor
mov
ins
add
jle
imul
xor
xchg
in
mov
add
(bad)
ins
jmp
push
adc
in
jge
hlt
out
adc
mov
aaa
repz
fdiv
and
movs
rcr
xchg
inc
sti
ja
shl
(bad)
rcl
div
rcl
pop
or
in
mov
jecxz
or
cmp
push
retf
in
lock
pop
sub
out
sbb
mov
aam
dec
add
xchg
rol
inc
pop
jae
sub
aas
std
aad
(bad)
das
div
cmps
lds
add
ss
mov
test
stos
adc
mov
mov
shl
ret
pop
popa
jbe
mov
jo
inc
push
(bad)
sahf
movs
pop
jnp
mov
cmp
xchg
push
sbb
mov
cmp
ins
ds
fldenv
(bad)
call
push
popa
retf
lea
(bad)
jp
push
pop
ror
jmp
and
cli
sub
inc
adc
sbb
fwait
mov
xchg
mov
call
or
cdq
nop
stos
add
mov
cmc
pushf
jno
cdq
mov
adc
cmp
sbb
adc
(bad)
loope
mov
ds
in
mov
dec
dec
xor
sub
xor
cmp
call
lods
(bad)
jmp
stc
cmps
cmp
call
popa
xor
pop
addr16
sar
jmp
nop
cld
mov
lahf
mov
aas
(bad)
cs
ror
mov
aaa
fdivr
stos
cld
scas
arpl
je
mov
pop
or
push
jp
(bad)
xchg
hlt
in
cmp
(bad)
cmp
test
or
sti
dec
cmp
loopne
mov
(bad)
sbb
in
pop
enter
js
xchg
cmc
pop
enter
or
mov
(bad)
scas
call
mov
mov
xor
mov
jns
or
sub
es
not
retf
je
fwait
dec
mov
pop
dec
fldcw
pop
sbb
or
mov
(bad)
loopne
mov
stos
jl
(bad)
(bad)
mov
mov
retf
rol
(bad)
ja
lods
sti
adc
push
ja
and
fstp
xchg
pop
call
sbb
inc
inc
ret
mov
cwde
ss
clc
add
loopne
cmc
lds
xor
add
sub
aam
rcr
cwde
add
enter
stos
pop
dec
mov
ret
test
test
and
xor
jae
adc
add
(bad)
fst
xchg
fprem1
push
dec
pop
(bad)
(bad)
jmp
repnz
mov
clc
js
clc
mov
ins
jge
xor
pop
test
mov
or
movs
fst
cmp
cmovo
sbb
sbb
sar
mov
ror
mov
arpl
cdq
inc
dec
js
fiadd
lock
sub
cmp
or
retf
push
pop
mov
cld
sbb
push
cmovp
test
pop
jnp
dec
ds
and
fst
cmps
xchg
sar
mov
retf
ins
ins
js
add
(bad)
lods
jecxz
jg
aam
sub
jg
in
(bad)
mov
jb
add
sbb
or
adc
stos
std
sub
outs
pop
dec
mov
mov
movs
pop
sbb
int3
adc
cmp
inc
aas
jns
push
idiv
push
pusha
scas
scas
cmps
pop
sub
test
pop
mul
lock
ins
sub
aam
pop
aas
inc
fdiv
data16
outs
ins
jo
retf
ins
inc
aaa
cs
add
and
sub
test
inc
add
(bad)
sbb
or
mov
icebp
push
test
ror
xor
les
or
xchg
jb
push
mov
inc
sbb
shl
retf
mov
es
cmps
xchg
fst
jmp
test
mov
aad
mov
sbb
cmps
ja
or
in
retf
pop
lea
jmp
cmp
ins
outs
aas
mov
in
mov
jae
dec
mov
or
pop
test
sbb
mov
call
loope
in
stos
cmps
test
mov
in
jl
sbb
rol
and
jnp
rcl
outs
cmp
jns
(bad)
out
test
ret
pusha
sub
mov
ror
jge
dec
das
cmp
push
or
push
not
call
jmp
adc
sub
fadd
push
cs
(bad)
jmp
jmp
mov
sub
mov
mov
std
or
repz
xchg
sahf
popa
popf
int3
gs
ror
sub
pop
inc
push
fs
shr
add
and
and
repnz
addr16
xor
sbb
out
nop
pop
adc
xchg
dec
das
(bad)
outs
add
std
add
or
aad
jg
cmp
and
loopne
jno
and
(bad)
mov
cmp
cli
sub
clc
and
mov
int
movs
ds
push
idiv
cmp
push
retf
out
or
jb
and
mov
mov
push
out
leave
stc
sub
sbb
cmps
sub
clc
xchg
mov
aaa
push
rol
push
mov
fmulp
adc
or
aaa
in
push
sbb
bnd
retf
call
xchg
cwde
imul
in
sbb
dec
and
pop
add
jmp
sbb
fistp
(bad)
jbe
stos
jg
sbb
jbe
dec
retf
push
scas
cmp
adc
ins
pop
push
add
cmc
dec
cmps
ds
rcl
and
mov
and
jp
pop
fmul
(bad)
loop
fld
pop
dec
mov
scas
xor
(bad)
(bad)
or
les
icebp
xchg
mov
adc
dec
shl
cmp
add
sub
xchg
or
or
add
repz
add
jnp
or
fimul
jmp
imul
adc
jo
lahf
dec
(bad)
lahf
xor
gs
aad
es
mov
push
lea
jge
outs
sub
push
jne
add
out
fist
imul
fcom
sbb
syscall
dec
cmp
mov
and
jb
adc
jl
fistp
pop
xor
ror
xor
pop
ffree
call
addr16
fsub
push
fbld
idiv
test
neg
dec
dec
outs
fmul
inc
test
dec
fist
pop
(bad)
retf
and
out
jg
xchg
movs
outs
mov
aas
pushf
enter
and
lods
das
jno
adc
sub
sbb
les
adc
and
mov
scas
jnp
sub
add
mov
jmp
jae
ins
cs
stos
ret
push
sub
sub
add
jb
loope
add
pusha
push
adc
pushf
pop
lods
push
not
retf
hlt
out
jno
mov
in
xor
inc
mov
ins
dec
adc
mov
lea
shl
lods
fxam
xor
ret
mov
adc
neg
add
cmp
mov
sbb
mov
in
jle
adc
cmps
and
and
adc
call
test
cwde
sbb
pop
cmp
sgdtd
data16
out
cwde
jns
std
pop
es
retf
mov
fidiv
push
pusha
xor
sbb
test
aam
pushf
xor
sub
mov
cmp
sub
repnz
cmp
femms
dec
cwde
adc
movs
push
pop
adc
mul
int
leave
mov
jl
dec
test
inc
mov
adc
sub
xor
aad
(bad)
cld
popf
psrld
neg
mov
push
imul
sbb
add
retf
mov
popa
mov
(bad)
call
icebp
or
push
out
popf
adc
mov
mov
out
pop
jae
mov
sahf
jmp
inc
or
pusha
jecxz
dec
or
push
sahf
imul
xor
cmps
mov
push
adc
mov
mov
mov
push
sbb
push
stc
add
clc
xchg
mov
mov
adc
inc
hlt
icebp
mov
sete
mov
enter
mov
ret
push
add
or
sbb
inc
sbb
and
out
mov
xor
add
aam
xor
cdq
jle
or
ret
inc
call
out
jo
pop
mov
dec
ror
cmps
xchg
loop
test
inc
xor
or
test
cmp
or
clc
mov
idiv
fiadd
dec
cmp
jp
(bad)
ret
push
mov
repnz
hlt
jmp
mov
(bad)
mov
cs
jns
mov
cmp
pop
jecxz
pop
cmp
loop
aam
enter
xchg
and
movs
adc
fs
push
xchg
ins
cmps
or
mov
push
repnz
(bad)
fcom
pop
dec
fidivr
daa
add
xor
cld
inc
push
inc
imul
clc
add
nop
jl
(bad)
setnp
inc
int3
or
mov
not
lea
jno
int3
or
jge
cmp
ds
pop
sub
add
into
addr16
or
fwait
data16
jbe
mov
cmps
adc
out
jne
jp
sub
cmp
xor
mov
scas
sbb
pop
mov
test
or
inc
dec
imul
jbe
call
imul
repnz
aas
xlat
es
add
dec
xlat
fs
jmp
les
xchg
out
add
pop
jmp
stos
lea
mov
punpckhwd
(bad)
sbb
leavew
into
mov
jge
and
jg
je
outs
fisubr
imul
xchg
lock
cdq
jmp
retf
out
cmps
dec
jmp
fcomp
sub
out
sbb
addr16
call
fnsave
cmp
push
es
dec
stos
mov
aam
cmp
in
dec
xchg
test
ja
popa
jle
fimul
and
jnp
ja
pop
add
fmul
pop
out
retf
pop
shl
add
std
mov
pop
ror
push
xor
stc
lods
add
mov
je
lods
rcr
xor
mov
scas
es
mov
(bad)
mov
shl
adc
pop
ds
or
adc
xchg
iret
mov
rcr
pop
scas
int
xor
inc
push
xor
or
cli
or
add
retf
add
or
cmp
sbb
adc
clc
shl
pop
scas
inc
ret
outs
int
and
push
imul
xor
push
sub
leave
add
aad
jle
adc
mov
test
inc
push
jle
mov
sahf
dec
bound
pop
sbb
lea
test
sar
xor
xlat
or
ds
push
rol
pop
push
pop
sub
addr16
retf
lods
mov
mov
pop
pop
sbb
mov
das
shl
mov
stos
shl
jg
jmp
push
mov
mov
es
mov
mov
jg
arpl
adc
ds
das
push
jg
xor
pushf
add
mov
sti
pop
bound
xchg
pop
les
ins
cmps
lods
xchg
cmc
lds
call
mov
ins
sub
rcl
push
mov
fdivr
mov
or
sbb
out
ret
(bad)
jns
in
mov
out
mov
dec
or
xchg
or
(bad)
lods
outs
add
gs
cmp
sub
repnz
jle
or
pop
xchg
shr
adc
sar
and
sbb
jge
(bad)
imul
test
mov
(bad)
lea
add
or
push
cmps
and
clc
js
aad
xlat
xchg
add
sbb
dec
adc
cli
pop
aas
mov
jmp
mov
pop
sbb
and
inc
pop
xor
dec
jae
aad
scas
adc
xor
dec
pop
call
(bad)
call
ins
lahf
mov
lods
repnz
jbe
dec
push
loop
in
loope
test
add
xchg
sub
test
xlat
add
xor
test
out
test
adc
mov
aas
enter
or
outs
push
cmp
add
aam
fucomp
arpl
mov
add
push
mov
add
pop
sub
inc
mov
xor
lods
aad
ror
mov
mov
in
xchg
movs
xchg
fnstsw
(bad)
xor
popa
into
pop
adc
cwde
add
fistp
dec
iret
mov
das
popa
cmps
(bad)
aas
mov
test
test
mov
call
(bad)
push
and
cmp
adc
aam
sub
mov
cmp
ins
sbb
rol
das
es
xchg
test
bndldx
xor
or
mov
es
adc
sbb
dec
sub
lods
jmp
push
(bad)
dec
push
and
sub
ret
out
xchg
xor
jmp
jmp
xor
jb
sub
mov
mov
fwait
cmp
pop
ror
lds
dec
cwde
mov
stc
cmp
and
loope
mov
mov
lahf
jecxz
push
in
xor
out
xor
iret
push
fistp
add
xchg
cld
shr
dec
mov
out
loopne
idiv
(bad)
jae
add
xchg
dec
push
jne
mov
and
retf
je
aad
fcomp
mov
and
and
adc
jle
dec
cdq
xor
rcl
outs
mov
push
sar
int
mov
and
push
xchg
pop
and
mov
out
mov
push
or
add
sbb
inc
and
in
inc
add
mov
cmps
jne
ficomp
cmp
cmp
jno
mov
mov
inc
es
mov
xchg
push
xchg
movs
pushf
call
(bad)
sbb
imul
shr
fisubr
pop
mov
stos
add
shl
push
shr
and
icebp
imul
je
ss
rcl
fisttp
or
shl
xor
pop
nop
retf
pop
xor
push
push
jl
int
addr16
mov
pop
pop
iret
pop
pop
push
(bad)
push
fadd
inc
jg
jns
daa
push
cmps
out
repnz
jle
xchg
push
std
push
or
fstp
mov
jb
mov
push
dec
and
int
cwde
mov
mov
jno
movs
push
sbb
push
add
cmp
mov
inc
jmp
add
push
shl
stos
mov
dec
ror
(bad)
mul
push
movs
sub
or
fisubr
cs
mov
xchg
imul
inc
test
add
push
icebp
jmp
pop
movs
xchg
js
loopne
retf
(bad)
gs
lock
jno
and
dec
test
test
xor
mov
and
test
or
xor
mul
inc
addr16
or
sub
cmp
xlat
or
xchg
xchg
imul
jae
div
les
adc
xchg
lods
xchg
add
and
out
cmp
repnz
out
xchg
loop
mov
or
aad
xchg
(bad)
insertq
mov
repnz
mov
cli
jge
push
adc
lds
(bad)
cmp
mov
scas
xor
and
push
adc
sbb
push
xchg
jle
test
lahf
and
jecxz
inc
add
mov
ja
or
in
mov
pcmpgtd
add
scas
stc
arpl
bound
lods
aaa
push
and
cmp
(bad)
cmp
retf
stos
push
cmps
jmp
sub
mov
popa
adc
add
jge
xchg
arpl
cmp
mov
ror
arpl
xor
ins
xchg
xchg
sub
cmc
adc
push
pop
dec
jo
mov
pop
cmps
pop
and
dec
call
cmp
xor
fist
jmp
mov
test
jecxz
cmp
pusha
mov
cmp
jbe
ss
mov
xor
push
popa
inc
sbb
aas
arpl
cwde
pop
xor
cmp
cwde
xlat
xchg
xor
js
in
xchg
xchg
mov
in
xor
stos
idiv
lds
loopne
les
pop
sub
(bad)
or
mov
mov
(bad)
mov
xchg
in
xor
jmp
(bad)
jmp
daa
mov
or
add
rol
test
scas
fdivr
call
cmc
dec
mov
(bad)
fs
and
pop
mov
dec
inc
out
add
data16
dec
dec
retf
pop
xor
dec
push
mov
dec
mov
cmp
and
or
push
inc
xor
std
bound
fst
xchg
outs
fidiv
retf
das
xor
push
fsubr
mov
icebp
icebp
xchg
mov
in
mov
ja
push
imul
add
add
loopne
pushf
out
fs
lods
xchg
shl
sets
inc
int
pop
pop
push
in
or
cmp
jge
xlat
(bad)
sbb
mov
jae
mov
popf
mov
repnz
in
cmp
cmp
enter
(bad)
sar
xor
cmp
jecxz
jo
jb
xor
(bad)
pop
stos
test
sub
cmp
sbb
cmps
mov
push
mov
fnsave
stos
jg
cli
ja
add
nop
jle
jae
jge
enter
sub
push
repnz
cmp
jmp
(bad)
out
aam
stos
sub
imul
mov
pop
clc
fs
mov
aam
jbe
adc
lahf
bound
clc
(bad)
movs
pop
jb
adc
jns
icebp
popa
jmp
ss
stos
cmp
adc
and
ins
shl
fwait
sub
push
out
fst
sub
mov
ins
and
fwait
add
and
hlt
add
ds
dec
out
fisttp
jb
dec
add
sub
dec
adc
jns
loop
mov
dec
stos
adc
je
mov
sub
popa
cmp
and
push
xchg
xchg
xor
ds
cmc
jmp
repz
out
lahf
adc
jbe
lea
aaa
imul
data16
mov
or
push
lods
into
repz
sar
xchg
mov
xor
aad
mov
aaa
inc
popa
mov
mov
retf
pop
bound
imul
cli
sbb
push
call
das
rcr
cmp
scas
hlt
lds
shl
cmp
imul
push
inc
cmps
popa
pop
jb
sub
jl
(bad)
je
fidivr
sub
cdq
xchg
mov
rcr
jmp
aad
cmps
out
div
mov
call
shr
stos
cli
iret
adc
test
sbb
add
les
or
mov
sar
lods
push
call
lea
mov
sbb
mov
cmp
jnp
int3
test
add
pop
jns
or
ror
sbb
adc
inc
push
or
loop
mov
popa
sub
push
bnd
dec
inc
xor
ret
mov
jmp
lods
lahf
jno
adc
and
(bad)
sti
outs
scas
dec
arpl
pop
or
inc
lahf
mov
or
clc
enter
mov
inc
mov
xchg
ret
mov
outs
int3
push
(bad)
scas
leave
call
daa
push
shl
aad
cld
cmc
bound
jae
pmulhw
cdq
mov
cs
and
sbb
xor
out
movs
sub
out
aad
cmps
push
dec
mov
cmp
xor
test
pop
(bad)
iret
ins
mul
scas
mov
(bad)
sbb
(bad)
push
sbb
ret
leave
test
xor
pop
xor
sbb
fwait
retf
(bad)
dec
add
or
aas
enter
retf
loopne
jbe
jno
loop
xor
(bad)
ror
scas
and
lods
push
mov
call
sbb
or
daa
ja
inc
(bad)
aas
dec
dec
xchg
dec
fnstenv
pushf
mov
xor
int3
add
fild
pushf
test
sub
imul
lea
pusha
scas
cmps
pop
jno
mov
ins
sub
das
ret
aaa
xchg
aas
xor
mov
cld
mov
jmp
loopne
xor
xor
lods
add
fwait
inc
mov
lods
mov
test
fdivr
sahf
scas
push
jmp
adc
je
push
inc
push
pop
outs
sbb
cmps
int
or
call
fisttp
sbb
imul
aaa
dec
cmp
sti
ins
bound
cs
pusha
jmp
xchg
jnp
mov
mov
out
out
inc
mov
inc
mov
add
mov
xchg
fst
jnp
mov
rol
inc
xor
and
add
xor
mov
addr16
sbb
outs
aad
lods
mov
xlat
stos
push
pop
lea
and
inc
or
mov
mov
inc
sahf
(bad)
push
movs
sub
mov
ror
data16
rcl
stos
cdq
add
mov
or
mov
imul
mov
sbb
cwde
adc
or
cli
enter
mov
adc
sbb
push
mov
fst
push
rcl
xor
enter
in
and
add
mov
jnp
scas
xchg
dec
push
daa
xchg
or
aam
mov
dec
push
fbstp
and
push
inc
stos
cdq
cmp
arpl
lods
dec
xlat
jb
inc
push
and
mov
xchg
call
mov
leave
jmp
or
push
int3
jecxz
and
pop
enter
fist
loopne
jno
lock
sar
rcr
add
push
mov
mov
xor
mov
rcl
aaa
out
loopne
ret
(bad)
adc
dec
ret
loopne
lds
dec
xlat
repnz
sub
sub
leave
jno
cwde
add
fbld
jg
gs
int
inc
icebp
lds
rcr
xchg
dec
sub
mov
dec
xor
lods
mov
dec
add
mov
inc
dec
add
push
pop
loop
loope
inc
loop
push
test
cmp
add
hlt
and
test
and
les
jmp
mov
(bad)
out
sub
outs
push
in
cmps
dec
lahf
mov
mov
inc
pop
xchg
pop
dec
icebp
ins
aaa
adc
xor
mov
inc
pop
sbb
dec
inc
pop
jg
(bad)
popa
call
sbb
es
in
(bad)
jle
jae
lods
shr
aaa
push
imul
dec
gs
imul
call
sbb
stc
loope
jle
mov
mov
iret
adc
add
lea
cmp
neg
cmp
mul
sbb
dec
xor
movs
dec
cmps
inc
les
jno
(bad)
jg
or
add
sub
in
jne
cmps
jg
mov
xlat
pop
mov
int3
push
dec
movs
sub
shr
loop
imul
mov
cmc
std
adc
ss
add
stos
mov
dec
mov
xor
push
and
jo
sub
dec
dec
fbstp
daa
dec
add
leave
push
pusha
lock
mov
sub
and
dec
jae
sbb
add
inc
cmps
jecxz
neg
jbe
(bad)
jp
ins
fiadd
stc
cmp
push
mov
jbe
stc
scas
(bad)
out
pop
ins
push
jo
rcr
push
arpl
sahf
jge
push
jg
(bad)
jno
dec
stc
fs
mov
data16
outs
cmp
dec
jle
ret
test
jne
stc
ins
mul
inc
xor
dec
jae
inc
adc
cld
push
sbb
mov
or
cmp
add
aad
fdivrp
test
add
cmp
and
mov
mov
pop
aam
mov
adc
sbb
mov
lds
xchg
push
ins
mov
ss
and
sbb
hlt
ret
mov
inc
push
es
sub
daa
bound
push
ror
pop
enter
pop
xor
rcl
push
lock
cmp
cmp
das
add
test
xchg
inc
and
adc
push
add
push
aam
mov
push
int3
or
ja
mov
xor
push
push
xor
pop
ds
sbb
add
movs
shl
stos
push
mov
jmp
add
div
add
push
mov
and
push
sbb
(bad)
inc
push
lahf
push
aas
out
int3
mul
push
jg
push
lods
cld
jecxz
ins
call
add
fcmovu
dec
push
(bad)
out
pusha
add
out
je
xor
mov
adc
xor
(bad)
xchg
sti
cmp
mov
cmps
pop
movs
mov
xchg
jb
mov
inc
imul
cmps
outs
mov
push
cmp
ror
lods
sbb
out
push
xchg
xor
aaa
call
add
adc
enter
enter
push
and
mov
add
lea
dec
mov
call
sbb
pop
mov
push
xchg
dec
dec
das
sti
pushf
or
mov
jg
stos
inc
ds
enter
mov
inc
into
or
xor
aam
cmp
xchg
dec
pop
xchg
cmp
fsub
(bad)
shl
sbb
inc
cmp
loope
mov
cli
sub
loopne
pushf
and
ins
and
ins
mul
and
mov
jge
mov
iret
adc
inc
adc
test
or
jle
das
in
(bad)
(bad)
(bad)
sbb
pushf
xor
sub
popa
ret
mov
leave
inc
pop
jmp
adc
imul
push
not
test
mov
sub
movs
mov
pop
and
push
dec
ror
lahf
cmp
pop
xor
mov
bound
fcmovbe
push
dec
in
xchg
and
sti
mov
add
xchg
mov
jle
data16
add
loope
ins
aam
sbb
sbb
dec
push
push
inc
pop
jne
lahf
outs
cdq
fimul
and
sub
icebp
(bad)
jmp
xchg
scas
fnstsw
rcl
(bad)
mov
push
xchg
bnd
out
hlt
in
cmps
jmp
dec
data16
mov
cmp
fisub
adc
lods
les
cld
cmps
mov
sbb
fild
inc
add
adc
lea
pop
and
push
sbb
sub
push
addr16
jbe
or
outs
mov
dec
sbb
rcr
pop
aas
or
sub
cmp
push
adc
sbb
ds
adc
sbb
mov
hlt
mov
mov
retf
out
hlt
ror
jnp
sbb
adc
add
pop
xchg
lock
sbb
popa
xchg
mov
jge
ffreep
mov
not
inc
inc
inc
and
or
sbb
(bad)
sub
jno
sub
jp
out
pushf
scas
int3
pop
dec
fs
xchg
push
lods
cmp
cmc
adc
mov
hlt
jae
daa
xchg
enter
lock
inc
cmps
shl
mov
popf
sub
pusha
leave
pop
push
inc
cwde
jmp
xor
retf
in
in
test
pop
mov
push
pop
and
(bad)
fsub
pop
das
mov
std
pop
in
inc
cmp
sub
sub
mov
movs
fisttp
add
mov
mov
iret
cmp
sbb
pop
inc
lods
jb
mov
mov
rcr
fimul
in
fisttp
clc
cmps
(bad)
ins
aas
pop
aaa
(bad)
and
and
push
sub
cld
xor
addr16
es
imul
jb
add
jb
cmc
arpl
or
and
fist
mov
push
mov
sub
in
xchg
lahf
data16
add
out
hlt
stc
jl
mov
cmp
stos
xor
imul
sbb
cmps
mov
add
aad
dec
popf
xchg
or
xlat
push
jae
and
cdq
mov
xor
mov
pushf
adc
fiadd
push
not
mov
rol
push
pop
adc
stos
xor
outs
rcl
fdiv
(bad)
fwait
js
jg
fld
data16
das
pop
and
add
xor
rcl
lea
popa
mov
(bad)
pop
mov
xor
cmp
sbb
xlat
aas
mov
iret
inc
mov
sub
mov
dec
jle
dec
pop
pushf
fstp
hlt
stc
jo
inc
pop
jg
leave
adc
fst
xor
lahf
jbe
inc
out
dec
scas
loopne
outs
mul
jge
retf
jecxz
cmp
call
shl
ror
or
push
out
das
xor
gs
or
pop
fisttp
leave
in
rol
jno
lds
(bad)
std
cmp
outs
adc
not
jnp
inc
mov
out
add
pusha
fisubr
xchg
mov
test
xchg
dec
arpl
xor
inc
int
mov
mov
lods
and
push
jb
(bad)
xchg
xchg
push
js
and
outs
fld
jecxz
sbb
mov
lds
xor
push
cmps
or
cmp
lahf
push
mov
fnstenv
xchg
stos
fsub
and
loopne
fld
aam
gs
pop
hlt
mov
push
dec
(bad)
lock
ficom
jbe
jb
jns
je
add
ror
out
dec
xor
xor
fldenv
ret
xchg
push
push
in
out
mov
sahf
pop
mov
fld
jl
add
sar
shl
jno
test
push
or
mov
inc
jmp
xor
mov
ret
pop
mov
in
push
(bad)
xor
add
lods
cmc
in
call
sbb
xchg
stc
push
(bad)
xchg
arpl
arpl
adc
dec
sbb
inc
and
repnz
in
bound
daa
push
sub
cmps
and
(bad)
in
jne
imul
xor
sub
sahf
add
adc
out
sub
and
ins
mov
push
mov
inc
fsubr
xor
ret
push
xchg
sbb
pop
sub
add
imul
push
test
push
add
popf
xchg
iret
outs
test
pop
pop
push
loope
add
push
iret
adc
adc
inc
mov
jge
int3
stos
aam
leave
out
hlt
enter
pop
(bad)
push
mov
ins
setle
cld
push
adc
cld
in
mov
ds
inc
lods
in
dec
int
fs
xchg
in
and
outs
enter
(bad)
(bad)
sbb
fxam
mov
jmp
popa
push
imul
mov
jnp
mov
or
add
fiadd
sbb
or
daa
(bad)
adc
push
outs
dec
and
dec
jecxz
rcl
dec
cmp
add
xchg
bound
jl
dec
xlat
jae
xchg
adc
dec
in
dec
pusha
adc
fsubr
inc
gs
stos
mov
imul
push
sub
sub
movs
xchg
ds
push
pop
or
shr
add
addr16
test
adc
sar
imul
push
xchg
(bad)
sub
sar
xor
mov
stos
cs
jp
push
sahf
dec
(bad)
outs
pusha
xlat
imul
cld
and
cmp
mov
lods
cmc
sti
push
popa
(bad)
ins
loope
dec
rcr
xchg
sub
sbb
ins
or
movs
(bad)
and
mov
(bad)
test
dec
fisubr
out
sub
je
retf
jmp
jmp
add
imul
(bad)
sbb
or
bound
xchg
into
inc
adc
xchg
and
cs
popa
loop
push
in
pushf
mov
mov
pop
and
xor
and
mov
mov
mov
sbb
lock
mov
mov
shr
sbb
lods
adc
mov
mov
mov
or
mov
imul
popf
xchg
stc
stc
jne
xchg
ret
or
retf
add
iret
cmp
cmp
ins
pop
fsub
repz
sti
pushf
fwait
lods
and
lea
out
enter
mov
ja
gs
xor
xor
loopne
fs
js
xchg
push
mov
add
inc
inc
add
lods
in
dec
scas
cdq
sti
dec
add
push
imul
add
shr
lock
inc
(bad)
or
mov
and
cmp
mov
sbb
add
xor
stos
mov
int
sub
jo
xchg
xchg
lds
ds
add
les
test
mov
add
test
inc
inc
int
mov
or
sub
mov
mov
and
cmp
movs
mov
mov
mov
add
mov
add
jo
in
mov
push
ds
cmp
clc
add
pop
mov
cmp
inc
shl
sub
cmp
xchg
adc
add
mov
adc
add
dec
and
(bad)
arpl
retf
es
stc
push
in
mov
repz
stos
in
stos
mov
in
pop
pop
mov
adc
mov
add
shl
adc
adc
or
fldcw
pop
in
push
clc
aad
add
mov
dec
pop
loopne
jne
in
sub
inc
xchg
cmp
mov
enter
ret
in
fnsave
xchg
and
pop
mov
push
push
mov
cli
adc
push
mov
push
pop
or
icebp
into
mov
adc
push
mov
mov
repnz
loopne
aas
jb
test
ins
loope
or
add
pop
sub
mov
xor
xchg
xchg
fcomi
cmp
ins
or
rol
pop
aas
add
imul
(bad)
iret
push
test
cmp
xchg
add
movs
aas
xor
jne
out
or
movs
icebp
in
add
inc
ins
sbb
mov
jnp
pop
add
outs
mov
cs
dec
inc
and
sub
inc
imul
push
sbb
push
adc
dec
pop
pop
pop
nop
sbb
push
ja
test
mov
ds
int3
jno
jecxz
cmp
xchg
lds
push
pushf
aaa
sbb
push
inc
loop
fs
inc
aam
movs
sbb
inc
xor
das
iret
aaa
sub
scas
push
mov
push
repz
push
(bad)
pop
push
adc
stos
inc
aas
mov
dec
pop
jg
mov
pop
mov
ret
cmp
push
icebp
out
jmp
mov
pop
hlt
mov
inc
int3
lahf
xchg
jmp
fcmovbe
xor
push
xchg
and
mov
cmp
and
fdivr
stc
xchg
or
jbe
out
rcl
pusha
mov
lds
iret
(bad)
jl
imul
xor
inc
mov
pop
and
scas
loope
mov
scas
mov
and
es
mov
pop
scas
pushf
pop
shr
pop
mov
cld
loope
or
inc
mov
inc
dec
mov
ins
js
cmp
jg
cmp
sub
mov
sbb
punpckhbw
mov
and
xchg
adc
xchg
jmp
(bad)
lea
(bad)
jbe
cmp
loop
and
call
sbb
add
movs
dec
xor
imul
fsub
out
and
push
mov
mov
lea
or
lods
aam
dec
push
sbb
lea
dec
fist
aaa
pop
lods
aas
(bad)
dec
or
movs
(bad)
push
outs
out
movs
and
lahf
push
iret
cmc
jns
sbb
xchg
ficomp
pop
or
jmp
fild
dec
(bad)
rol
add
cmps
pop
imul
loop
dec
mov
jb
stos
es
adc
dec
pop
dec
pop
retf
dec
mov
inc
lock
and
shl
(bad)
pop
int
and
pop
loopne
fadd
fild
fimul
lds
icebp
in
(bad)
sbb
mov
scas
pop
fmul
mov
(bad)
mov
push
leave
test
popa
into
sub
shr
nop
dec
in
cli
adc
sbb
or
add
stc
std
cmps
cs
xchg
out
(bad)
mov
(bad)
in
clc
dec
ret
push
int
shl
add
dec
cmp
cld
fwait
adc
gs
pusha
pop
add
call
jne
sbb
cmp
sub
jmp
jne
pop
fwait
inc
in
syscall
pop
jmp
and
cmp
in
sbb
leave
aad
cmps
imul
leave
jg
inc
mov
stos
loop
std
cmp
ins
jns
ins
in
xlat
inc
sbb
sub
popa
ins
add
pusha
xor
outs
nop
cmp
mov
shl
stos
inc
outs
mov
jae
out
sahf
ins
push
mov
sar
sub
sub
fst
dec
and
ins
mov
jle
aas
mov
mov
pop
stc
into
xchg
push
mov
xor
sbb
sub
xor
shl
xchg
loop
call
stos
jmp
stos
sub
cmps
or
loopne
das
fwait
inc
pop
mov
into
es
fstp
mov
pop
xor
sti
xor
adc
in
test
clc
dec
in
sub
loop
pop
xor
imul
lods
add
push
rcr
mov
dec
fcomp
jg
imul
cmp
cdq
cmp
test
push
pop
nop
mov
mov
test
(bad)
jbe
mov
js
and
clc
mov
dec
clc
movs
mov
arpl
sub
or
push
fdiv
xchg
inc
or
push
jmp
inc
jmp
push
push
cmps
xchg
jp
clc
movs
sbb
pop
dec
shl
fisub
sub
ins
cmp
xor
(bad)
ror
inc
push
sti
jmp
cmps
lods
sub
push
jns
and
xchg
into
adc
pusha
stos
and
adc
mov
lock
or
fnstcw
movs
call
jp
push
pop
cmps
lahf
inc
add
xor
mov
inc
add
mov
jnp
dec
push
repz
shl
or
mov
movs
adc
sbb
or
inc
movs
in
mov
xlat
jbe
inc
fucomp
adc
popa
xor
jo
or
idiv
mov
xchg
sub
lds
pop
dec
sub
pop
push
gs
jno
fnstsw
dec
popa
sar
lods
(bad)
push
aas
sbb
pusha
mov
movs
and
in
enter
shl
jne
inc
xchg
pop
xchg
gs
leave
sbb
icebp
into
mov
mov
ins
add
pop
mov
fs
mov
and
adc
rcr
mov
mov
or
xor
xor
inc
mov
add
sub
test
sub
test
dec
and
test
push
sar
inc
mov
xlat
imul
add
outs
out
mov
mov
out
jb
and
nop
repnz
les
mov
jge
pushf
inc
vphaddudq
pop
xchg
stc
cmps
mov
fs
fimul
mov
push
sbb
jmp
cli
mov
pop
repnz
int3
bound
pop
sub
sub
xlat
pusha
js
pop
lods
icebp
sti
push
cdq
push
push
add
sbb
sti
jae
shr
add
mov
retf
xchg
push
sub
jge
cmp
imul
push
xchg
aad
mov
dec
xchg
jecxz
jl
mov
mov
dec
mov
mov
mov
mov
out
ret
xor
sbb
and
scas
rcl
xchg
std
pop
sub
add
mov
aas
mov
xchg
(bad)
aas
iret
popf
jnp
fbstp
in
loop
mov
pop
mov
or
ret
push
xor
push
loope
jne
mov
mov
fsub
ins
jo
ins
inc
pushf
stos
cli
sbb
rcl
or
jno
push
add
jbe
push
je
arpl
pusha
fild
cli
mov
ret
inc
mov
(bad)
push
call
add
mov
mov
mov
ret
fcom
mov
pusha
and
pop
xor
sub
jle
add
pop
pop
or
icebp
fdiv
es
mov
xchg
mov
mov
outs
test
push
call
mov
aas
popf
sub
outs
cmp
ins
mul
dec
(bad)
nop
(bad)
xchg
push
stos
in
adc
(bad)
cmp
jge
sahf
popf
or
(bad)
mov
xor
adc
mov
cs
sbb
inc
fld
leave
jbe
aas
xor
sar
ja
imul
popf
js
fs
stos
or
inc
adc
pop
in
jg
test
aaa
pavgw
xor
xor
pop
fs
hlt
pop
lea
cmp
push
repnz
dec
jmp
sub
jmp
inc
inc
cmp
pop
xor
add
inc
cmp
dec
jae
push
cmp
add
cs
and
(bad)
mov
pop
es
mov
xchg
xor
(bad)
movs
icebp
sub
jl
sar
test
call
jb
sbb
dec
dec
inc
and
sbb
sahf
xor
add
arpl
jp
or
inc
push
mov
test
aas
mov
enter
xor
add
or
in
inc
pop
neg
jo
popa
test
jg
xor
ds
adc
cli
repz
or
popa
out
jb
ret
xor
add
aam
aam
mov
shl
xor
popf
and
mov
dec
imul
jl
fdiv
rol
jecxz
retf
cmps
inc
outs
pop
cmp
cmps
jo
push
mov
dec
cmp
xchg
fdivr
clc
(bad)
rcl
ja
(bad)
jno
jmp
mov
inc
cli
dec
bound
rcr
jbe
jg
mov
(bad)
ficomp
or
pop
out
int3
std
xor
mov
shr
push
(bad)
push
adc
cli
jne
and
test
push
xor
cmp
xor
jp
daa
(bad)
pusha
sbb
mov
pop
dec
adc
and
sahf
sub
and
add
sbb
jl
aaa
pop
add
xor
repz
arpl
dec
sbb
in
mov
pop
xchg
mov
adc
adc
test
lods
inc
aas
repnz
mov
xchg
pop
cmps
adc
ret
loop
js
xor
xchg
mov
in
inc
cmps
cmp
add
test
test
sbb
mov
push
xor
and
cmps
les
imul
mov
sbb
out
sbb
fld
sbb
sbb
cmp
sbb
or
dec
push
dec
cmp
retf
xchg
fsub
mov
call
lock
loope
cmp
sbb
add
push
(bad)
mov
fs
mov
fsubr
mov
ja
mov
sub
rol
sub
dec
ins
(bad)
sar
test
pop
push
pop
add
add
fcomp
dec
sub
inc
ror
sub
sbb
mov
dec
push
dec
jmp
mov
cmps
popf
add
mov
mov
xchg
dec
xchg
mov
call
sub
inc
dec
mov
jle
cmp
jno
ror
jmp
out
xchg
inc
add
or
div
fcomi
cmp
mov
les
nop
dec
pop
sub
mov
imul
cmp
iret
icebp
cli
cld
mov
pop
ss
jecxz
lahf
or
imul
add
mov
mov
je
push
repz
cmps
adc
dec
mov
push
in
push
push
push
mov
(bad)
in
mov
aaa
ins
icebp
iret
cdq
mov
jge
popa
sub
dec
mul
fimul
xor
aas
fld
mov
pop
daa
pusha
scas
pop
shr
xor
aaa
cmps
call
fld
stos
pop
sub
pop
loope
adc
jo
cdq
cmp
je
sub
ror
mov
sub
cmp
xor
xor
push
lods
xchg
das
scas
clc
mov
ins
pop
or
lahf
sti
not
mov
mov
(bad)
fdivr
cs
sti
in
movs
cmc
mov
adc
and
adc
push
jg
pusha
jl
outs
(bad)
js
jge
add
cmps
mov
movs
in
xor
ins
jl
(bad)
or
es
sub
pop
sahf
fs
sub
in
mov
xchg
int
lock
pop
gs
movs
imul
shl
or
stos
inc
in
aad
push
pop
sahf
addr16
in
cli
mov
mov
push
rol
inc
sub
aad
mov
imul
or
jl
js
addr16
fs
ins
push
ins
je
xlat
xchg
jne
jbe
xor
or
add
fcmovne
jns
inc
cmp
stos
loopne
pop
dec
xor
dec
and
cmps
mov
mov
sti
fwait
ror
pop
int
lods
fdivrp
in
hlt
mov
or
(bad)
xchg
shl
ins
js
(bad)
aaa
in
mov
xor
xor
(bad)
xchg
fmulp
(bad)
cld
xor
addr16
cmp
out
xor
xchg
add
sub
push
mov
cmp
sbb
sub
out
fnstenv
xchg
pop
out
inc
sub
rol
inc
and
cwde
js
push
pop
push
(bad)
pop
or
rol
cli
cmp
xor
iret
fisttp
imul
lods
lods
test
in
jg
(bad)
jge
push
sub
add
mov
inc
inc
pop
cmp
test
sub
cmp
xchg
mov
sbb
fadd
scas
lahf
shr
ret
push
scas
fnstenv
adc
jno
(bad)
fnstenv
movs
imul
sahf
retf
out
xor
sahf
ja
xchg
jge
fsubp
push
movs
adc
jle
cs
fiadd
mov
push
xchg
nop
retf
push
lods
mov
pop
(bad)
fdiv
mul
lods
neg
add
jmp
repnz
(bad)
mov
ins
clc
xlat
test
xchg
into
gs
fs
cld
cmp
jne
mov
stc
cld
mul
stc
daa
cmp
out
ret
aam
retf
loop
xor
(bad)
jno
dec
lods
pop
sub
js
xor
out
jb
jns
ins
lods
retf
push
xchg
loop
sbb
mov
aad
add
call
aad
and
loope
inc
mov
aaa
sbb
sbb
inc
mov
dec
mov
std
xor
push
pushf
aam
xchg
call
scas
cs
cs
mov
mov
jae
xor
mul
shr
inc
stos
mov
cmp
jnp
push
add
sbb
pop
mov
jne
imul
dec
or
push
sbb
loope
int3
das
pop
pushf
xchg
xor
mov
ins
sar
mov
mov
enter
mov
jl
cmp
aad
xor
jg
mov
(bad)
outs
dec
ds
mov
or
or
mov
es
(bad)
mov
daa
dec
popa
pushf
fld
and
mov
adc
sbb
movs
stos
ficomp
sbb
addr16
int3
cmp
sub
daa
and
pop
mov
pop
push
repz
in
je
imul
mov
movs
push
fsubr
ss
out
xor
xor
or
inc
ss
sbb
(bad)
jle
fnstcw
pop
call
js
je
pop
or
ret
push
jne
stc
and
stc
mov
add
rcr
mul
mov
jge
(bad)
sbb
mov
fwait
xchg
and
retf
out
(bad)
mov
cmc
sbb
stos
outs
cmp
sti
popa
fwait
dec
shr
dec
loop
sbb
(bad)
popf
mov
cs
pop
std
mov
xor
pop
xor
sti
inc
sub
mov
sbb
iret
jecxz
push
xor
add
or
rol
pop
mov
clc
cmp
ja
dec
int
jg
jns
aad
loope
pop
in
sbb
add
jp
xchg
int
mov
add
cmp
imul
in
mov
mov
push
fs
leavew
loop
xor
dec
add
pop
test
arpl
push
and
inc
out
and
mov
gs
jno
pop
ret
push
cmc
cli
imul
hlt
inc
dec
mov
mov
std
pushf
loop
cmp
js
jg
sub
aaa
test
fldcw
in
jecxz
pop
cmp
pop
mov
dec
gs
xchg
retf
or
add
mov
pushf
clc
cli
rol
dec
inc
js
mov
cmps
nop
add
int
add
mov
dec
pop
add
stos
mov
fadd
(bad)
scas
pop
jbe
push
clc
xchg
xchg
pop
movs
test
shl
js
cmps
aaa
inc
add
mov
mov
mov
pop
mov
in
arpl
push
outs
(bad)
mov
in
ret
jmp
imul
xchg
mov
dec
ret
and
xor
jo
mov
push
inc
add
movs
daa
lods
pusha
retf
xor
enter
mov
dec
pop
jmp
xor
enter
mov
cdq
cld
std
pop
in
inc
inc
loopne
pop
mov
sahf
cmp
adc
rcl
mov
jmp
(bad)
mov
pop
or
retf
js
sbb
aad
mov
push
push
test
mov
xchg
jmp
aam
mov
clc
xchg
push
jge
jecxz
daa
(bad)
sub
das
pop
add
xchg
movs
outs
mov
or
or
imul
add
mov
in
nop
jg
mov
daa
jmp
and
popf
in
xor
or
popa
jmp
inc
xrelease
xor
mov
ds
inc
jmp
imul
jecxz
xchg
mov
scas
ret
and
std
(bad)
jp
icebp
xchg
sbb
out
xchg
inc
or
adc
push
iret
jge
and
inc
pop
cmp
mov
xchg
jmp
pop
ret
cmps
sub
ins
xchg
fucomip
enter
xchg
add
loop
into
jno
test
je
xchg
js
mov
nop
std
shr
idiv
mov
cmps
cmp
les
pop
stos
sub
or
not
call
push
dec
dec
sub
fwait
in
push
test
jb
adc
pop
and
push
repnz
mov
or
pusha
xor
or
loop
mov
add
(bad)
and
and
nop
imul
dec
push
or
cld
je
das
mov
loopne
ins
ins
enter
cwde
(bad)
pushf
stc
push
mov
or
mov
ret
js
sbb
jp
pop
cld
es
test
scas
jmp
data16
push
mov
inc
or
mov
call
in
(bad)
fptan
aas
mov
test
pop
mov
mov
fnstenv
fbstp
clc
mov
mov
jp
adc
(bad)
or
ds
popf
mov
stc
(bad)
sbb
mov
mov
add
adc
pop
or
push
test
mov
aas
out
xchg
sub
loope
mov
fstp
mov
jnp
push
(bad)
inc
bound
test
leave
xchg
pop
adc
pop
mov
dec
test
jl
mov
pop
stc
xor
cs
or
or
jne
mov
cld
mov
jnp
sbb
test
jl
mov
enter
das
add
(bad)
mov
add
cmp
jle
fcmovu
sub
inc
loop
sub
nop
cmp
aam
mov
jne
push
in
mov
loopne
xchg
pusha
inc
fdivr
scas
outs
fild
push
lock
fs
and
outs
xor
xchg
pop
in
(bad)
sar
cmc
ja
or
lods
call
push
pop
push
imul
or
push
jmp
fisubr
aas
pop
int
popf
aas
inc
mov
and
icebp
xor
and
je
mov
push
xor
sbb
sub
lahf
xchg
mov
adc
in
sub
push
cmps
xchg
pop
push
scas
xlat
push
cli
mov
aas
rcl
sbb
push
sub
fwait
ins
jmp
std
jnp
inc
sub
dec
arpl
mov
xchg
mov
adc
adc
mov
jmp
dec
xor
test
mov
mov
mov
neg
(bad)
fadd
xchg
xlat
mov
in
cmp
hlt
pop
sbb
push
xchg
int
cmp
sub
(bad)
mov
adc
imul
shr
add
sti
cmc
push
inc
fld
icebp
add
inc
out
outs
or
clc
sti
push
neg
leave
mov
ja
pop
inc
xor
add
mov
sbb
shl
sub
inc
rcr
push
movs
mov
dec
and
cmp
jp
sar
push
push
xlat
popf
je
and
jns
and
ret
imul
cs
bound
ror
pusha
mul
dec
jmp
aas
pop
mov
xor
jae
add
xchg
add
stos
mov
scas
outs
fld
jb
ficomp
aas
cdq
mov
sbb
pusha
cmp
xor
mov
jmp
add
cmps
not
(bad)
cli
mov
push
mov
dec
sbb
cwde
jl
dec
jnp
ja
imul
pusha
pop
ds
or
add
ins
outs
cmp
pop
hlt
movs
push
and
imul
fdiv
xchg
nop
enter
aaa
sub
cmp
sahf
sar
or
add
movs
dec
sbb
fwait
cld
sbb
pusha
sub
mov
pop
aaa
ss
aad
push
repz
xchg
and
aas
out
inc
mov
mov
cli
ins
and
data16
frstor
aas
bound
stc
push
pushf
and
int
adc
mov
call
mov
stos
jb
adc
mov
in
jo
push
jle
xor
hlt
arpl
jno
cld
mov
bound
dec
shl
std
pushf
jecxz
jmp
mov
or
into
sahf
dec
mov
sub
scas
and
jo
movs
pusha
ror
(bad)
fs
in
rcl
retf
in
and
xor
mov
jo
lahf
mov
xor
test
jno
(bad)
jmp
pop
add
cmp
dec
gs
lods
fwait
dec
cmps
aas
pop
mov
movs
adc
sub
call
xor
mov
mov
and
cdq
mov
rcr
inc
test
imul
lahf
sub
and
push
sbb
jg
mov
add
sub
ins
ret
rcl
inc
and
lahf
mov
fbstp
into
adc
mov
test
xchg
sbb
out
cmc
sar
imul
jno
xchg
lds
push
bound
in
mov
(bad)
test
jo
xchg
lods
test
push
inc
inc
std
mov
jg
out
loop
xchg
push
inc
mov
pusha
call
mov
stos
or
sbb
cli
cld
mov
xlat
mov
mov
mov
push
dec
mov
aad
imul
mov
addr16
scas
pop
mov
loope
jle
xor
int3
adc
popa
inc
mov
inc
(bad)
cld
enter
int3
clc
adc
(bad)
sub
imul
pop
ja
push
(bad)
mov
push
add
dec
and
retf
jecxz
ret
xchg
int
mov
(bad)
data16
jg
xchg
stc
jg
call
sub
mov
popf
sub
xor
test
aad
cmc
lahf
mov
xor
test
gs
loope
sub
cmp
inc
push
mov
and
inc
jl
gs
jl
push
popa
or
je
push
lods
mov
ret
popa
loopne
or
cli
or
dec
sub
push
sbb
jle
arpl
lock
jnp
mov
mov
(bad)
mov
xor
mov
cli
or
or
stos
stos
cli
hlt
mov
push
lods
mov
xor
cld
mov
data16
adc
sbb
std
fist
jo
retf
(bad)
cld
mov
bound
mov
adc
xor
or
sbb
ds
aam
test
std
mov
inc
je
sbb
(bad)
fistp
pop
push
inc
mov
popf
xchg
fdiv
dec
mov
mov
add
int
jno
cli
cmc
dec
and
nop
push
xor
add
pop
in
jg
sbb
js
outs
cmps
jno
out
push
adc
mov
imul
fild
cwde
(bad)
in
shl
ror
call
add
jecxz
shl
(bad)
xrelease
push
(bad)
ret
jno
lods
rcr
icebp
jnp
mov
lahf
inc
call
ds
inc
imul
mov
ffree
pop
pop
ins
outs
cli
mov
mov
(bad)
loopne
(bad)
dec
dec
pop
test
mov
adc
pop
in
test
outs
das
outs
jp
inc
cld
jbe
xchg
sub
jp
ret
jbe
data16
add
mov
push
sti
push
sub
ss
mov
mov
dec
mov
push
fld
je
jmp
stos
fdiv
xchg
xchg
lock
test
bound
inc
xor
in
cmps
push
sub
sub
adc
push
out
mov
je
(bad)
mov
push
add
mov
stc
cmp
icebp
xor
dec
pushf
and
push
enter
inc
mov
jns
and
movs
mov
add
sbb
sub
push
test
mov
clc
fsubr
xchg
pop
xchg
adc
inc
cmp
popf
pop
and
nop
and
add
mov
and
call
add
push
jp
adc
adc
adc
dec
out
stos
outs
shr
lahf
and
or
push
in
test
sbb
movs
dec
js
cli
adc
fild
aaa
adc
mov
and
stc
cmp
in
push
dec
xchg
sub
dec
inc
adc
fcom
sbb
aaa
adc
les
or
sub
ds
loopne
cmps
lods
sar
movs
xor
cmps
pop
or
imul
std
neg
mov
pop
or
push
shl
inc
arpl
add
push
mov
fcomp
and
ds
int
fwait
xchg
cdq
mov
jg
je
call
loop
mov
retf
or
rcl
lock
aas
sar
imul
arpl
adc
ins
test
add
(bad)
jns
es
add
into
inc
arpl
inc
mov
xor
mov
out
aam
icebp
(bad)
mov
push
inc
fsub
sar
lods
(bad)
aad
xchg
mov
in
xchg
cmp
ret
movs
stc
adc
clc
ret
add
and
mov
(bad)
mov
dec
xchg
or
or
rcl
fadd
jle
sti
push
inc
stc
sbb
ror
and
pop
inc
dec
pop
push
popf
push
and
and
mov
loop
pop
and
fcom
call
aam
jmp
and
fmulp
data16
in
xchg
loope
js
or
add
cli
mov
dec
cmp
push
or
dec
jp
cwde
(bad)
adc
test
or
jnp
outs
jl
imul
stos
xor
xor
jae
jp
xchg
or
jmp
mov
pop
psrad
pop
push
loopne
push
stos
cmp
shl
bound
and
mov
add
xor
iret
mov
pusha
mov
jmp
mov
dec
or
mov
or
aad
out
mov
lock
xchg
arpl
jo
mov
sub
and
sti
or
sub
xor
or
jno
jmp
mov
fcomp
loopne
ror
scas
pmaxub
jg
push
iret
in
and
packuswb
fidiv
fnstcw
pop
or
pop
sbb
out
movs
cmp
adc
arpl
out
out
lds
and
pop
or
jecxz
push
xor
sbb
test
test
mov
pop
mov
jb
out
icebp
test
jno
arpl
lds
jge
lock
movaps
push
or
(bad)
cmc
and
mov
sub
inc
push
fst
fadd
dec
or
fmul
dec
add
add
xchg
xlat
(bad)
jle
jge
cmc
in
push
mov
shl
and
pop
dec
rcr
es
gs
nop
push
or
mov
lock
mov
push
int3
js
mov
or
add
leave
loopne
mov
mov
out
mov
leave
jmp
cmp
iret
int3
dec
mov
out
outs
push
cs
or
or
mov
mov
movs
sti
bound
repz
das
dec
xchg
in
fs
(bad)
jmp
ficomp
mul
inc
sti
(bad)
fstp
inc
jmp
mov
pop
clc
dec
mov
cdq
add
mov
mov
test
or
aas
mov
xchg
ror
data16
mov
pop
nop
and
icebp
dec
(bad)
nop
sbb
xlat
adc
dec
stos
jg
in
mov
ins
mov
dec
add
cmp
pushf
cmp
(bad)
mov
fsubr
daa
jg
inc
lahf
test
ja
sbb
and
retf
nop
out
sar
push
test
retf
and
inc
or
jle
(bad)
out
jecxz
icebp
aad
leave
in
fistp
clc
aas
dec
or
outs
jne
push
idiv
cmps
or
jmp
cmp
test
shr
ja
fidivr
pop
fld
push
cli
adc
sti
adc
xchg
xor
in
xor
std
pop
imul
rol
je
xchg
fld
(bad)
leave
mov
pop
push
int3
and
adc
xlat
mov
ins
(bad)
and
cmp
out
cmp
or
out
mov
mov
push
movs
dec
jg
push
add
inc
stc
jne
pslld
jne
cld
or
repnz
sub
nop
mov
cdq
dec
(bad)
sahf
push
call
xchg
call
std
push
push
dec
and
xor
cmp
fadd
test
aad
(bad)
xchg
inc
or
dec
(bad)
or
data16
aaa
outs
sub
mov
add
test
jae
out
add
mov
ins
fld
or
aad
mov
and
ror
jne
dec
mov
lods
cdq
clc
retf
bound
dec
pushf
xchg
push
ret
call
jnp
mov
loope
xor
lods
xchg
xchg
enter
dec
and
and
sbb
cld
push
mov
ja
and
or
mov
popf
xlat
jl
mov
out
les
push
ja
xor
xchg
addr16
add
outs
adc
inc
loope
mov
sbb
fs
inc
dec
(bad)
aas
fidivr
add
test
dec
xor
arpl
cmps
sbb
pop
adc
(bad)
ds
sbb
jo
fwait
cs
loop
js
jl
inc
add
scas
push
(bad)
scas
inc
dec
inc
mov
(bad)
adc
mov
leave
lea
les
icebp
clc
mov
shr
mov
out
mov
inc
add
mov
rol
addr16
pop
pop
sti
icebp
sub
mov
push
jb
gs
cli
out
rcl
in
mov
adc
mov
cdq
jle
shl
out
in
adc
mov
gs
sbb
cmp
sbb
lock
retf
and
push
dec
shl
push
xchg
jge
cmp
fild
pop
sub
push
xor
mov
sub
inc
sub
pop
sti
imul
mov
dec
cmc
idiv
adc
(bad)
jge
scas
out
jecxz
cwde
mov
(bad)
and
stos
mov
and
pop
add
dec
mov
test
sti
loope
sbb
cs
cmp
and
lods
aaa
rol
push
gs
ror
ins
push
mulps
sbb
test
fcom
adc
xor
or
inc
cmps
sbb
ss
fdiv
cmp
(bad)
aam
aaa
inc
mov
das
push
aaa
pop
mov
xor
cld
or
jmp
ds
push
jne
and
(bad)
xor
retf
test
dec
(bad)
jnp
das
cli
jmp
nop
push
jle
in
rol
(bad)
push
retf
movs
sub
cmp
pusha
lahf
inc
xor
ins
cwde
xchg
jg
mov
into
sar
inc
xchg
and
aaa
cdq
jae
lahf
pop
out
adc
aaa
lods
pop
push
ja
dec
sub
xor
push
add
jecxz
outs
cmps
or
outs
out
jmp
cmps
adc
shl
bound
cld
cli
shl
or
or
mov
call
out
das
pop
pop
popf
xor
sbb
sbb
not
out
sbb
dec
sti
fadd
jg
test
jge
idiv
das
cld
jmp
mov
aas
rol
push
inc
xor
mov
xor
add
lods
or
addr16
pop
or
mov
hlt
jo
adc
add
pop
jb
push
mov
cmp
mov
dec
jge
nop
shl
adc
loop
ins
clc
jmp
dec
mov
rcr
add
adc
int
inc
mov
mov
and
out
(bad)
mov
(bad)
jecxz
mov
xchg
adc
adc
jmp
icebp
shr
mov
movs
stc
dec
aad
fist
jecxz
jo
mov
clc
xor
(bad)
sub
xor
add
std
jp
dec
mov
int3
call
(bad)
dec
jl
xchg
sar
sbb
out
repnz
xchg
sub
aad
call
rcr
xchg
repnz
test
adc
or
loopne
jl
jmp
mov
or
pusha
mov
add
mov
push
pop
adc
sti
jno
inc
out
loope
sahf
mov
push
imul
mov
xchg
adc
icebp
je
dec
(bad)
mov
movs
cmp
cmps
jg
loope
pop
jecxz
jge
cmp
jmp
cmc
cld
jae
mov
dec
or
fimul
jnp
enter
rcr
(bad)
adc
icebp
psubsw
dec
hlt
or
jne
in
xchg
stos
jmp
aas
jp
lea
sub
pop
xchg
pushf
mov
fisub
cmps
ss
loopne
fsubp
adc
mov
les
fld
push
xchg
xchg
add
pop
add
adc
inc
stos
int
xor
and
clc
jl
(bad)
mov
outs
ds
js
dec
sub
outs
enter
add
jo
xchg
fcom
rcl
jmp
ja
pop
and
(bad)
mov
sub
imul
lahf
rcr
mov
pop
mov
cmps
mov
mov
aas
xchg
bnd
out
mov
jb
addr16
add
mov
jecxz
or
mov
adc
mul
xchg
(bad)
pop
inc
xor
sbb
jb
add
cmps
loope
fimul
loopne
sar
shl
cdq
lods
addr16
fist
jnp
and
daa
fs
fwait
mov
xor
inc
sti
aaa
cmps
push
mov
inc
mov
cmp
test
arpl
push
mov
cmc
jmp
mov
push
and
std
inc
cs
xlat
aad
inc
jmp
pushf
test
retf
loopne
mov
sbb
sti
movs
mov
(bad)
test
rcr
pushf
movntq
or
mov
(bad)
dec
cwde
xchg
xchg
ret
or
rol
pop
pop
push
shl
mov
cmp
lahf
pop
mov
or
js
and
(bad)
sbb
inc
pop
inc
sbb
mov
xchg
xchg
imul
int
cmp
inc
and
ret
push
push
nop
test
dec
pop
cmp
add
push
imul
add
mov
and
sti
inc
cmp
jg
movs
mov
mov
jecxz
push
adc
jmp
xchg
add
loope
sti
icebp
icebp
in
cmp
sbb
pop
inc
(bad)
sbb
push
pusha
push
jecxz
add
mov
retf
inc
idiv
leave
movs
retf
xor
loop
test
mov
shl
mov
ret
jmp
sahf
mov
paddb
push
std
or
neg
shr
sbb
movs
add
sbb
add
adc
sbb
out
pop
jnp
inc
ret
lods
imul
sbb
cmc
jecxz
and
fbld
pop
sar
cld
mov
and
scas
sahf
repz
mov
cmp
movs
les
mov
jl
xor
xor
push
inc
jo
mov
stos
cwde
call
fldenv
popf
ds
sub
xchg
pop
or
push
dec
xor
pop
jno
dec
movs
jo
sub
fbld
jge
int
div
jmp
in
clc
sub
lds
imul
imul
lods
xchg
mov
pop
dec
sbb
mov
xor
ins
push
pop
jp
dec
rol
pop
jns
aad
(bad)
cmps
sbb
cld
or
lahf
and
xchg
fisubr
loopne
ret
bound
neg
cmp
retf
out
ds
xor
mov
push
add
jle
rol
fwait
mov
adc
in
addr16
dec
dec
in
mov
fwait
js
es
adc
cmp
push
xchg
cmc
std
loope
js
sar
xor
jg
fwait
std
add
inc
lahf
rol
loopne
add
add
push
jnp
jg
jnp
ret
jnp
xor
push
sub
push
adc
rcr
mov
pop
add
retf
add
xor
(bad)
test
(bad)
xchg
cmp
xor
add
mov
push
jecxz
inc
or
sub
push
mov
cli
push
sbb
mul
dec
mov
sbb
out
mov
dec
cli
sub
inc
loope
repnz
adc
cmp
mov
js
push
jnp
or
shl
xor
xlat
int
and
jmp
and
in
(bad)
xchg
(bad)
lahf
jecxz
aad
js
add
sub
or
pop
jp
sbb
(bad)
xor
cli
es
jmp
jle
push
rcl
ja
jg
(bad)
jbe
(bad)
sub
unpckhps
fcomp
mov
mov
pop
cs
cli
rol
cmp
les
lahf
rcr
std
je
sbb
in
ret
arpl
mov
push
cmp
fistp
in
dec
jg
add
push
xor
add
mov
sbb
(bad)
mov
pop
mov
data16
fisub
(bad)
jle
cmp
cmp
clc
jmp
and
fadd
push
or
cmp
sbb
push
out
xor
ror
pop
jl
rep
in
cmps
mov
xrelease
xchg
icebp
mov
enter
inc
ss
adc
jae
xchg
jecxz
cmps
push
xor
xor
jl
mov
mov
ins
lods
xchg
push
cmp
xlat
daa
pop
jnp
cmp
movs
iret
jl
sbb
out
push
ds
jge
adc
lods
stc
dec
mov
out
or
add
(bad)
in
fiadd
inc
push
jnp
call
lds
jg
(bad)
sub
neg
add
xor
inc
imul
call
jmp
daa
test
pop
adc
add
or
xor
mov
mov
mov
idiv
xchg
xchg
sub
sbb
retf
es
(bad)
add
aam
push
pop
in
mov
xchg
sub
jl
(bad)
mov
adc
cmp
dec
idiv
cmp
cmp
mov
mov
outs
cmps
stos
add
dec
pushf
and
fcmove
std
inc
jge
pop
mov
icebp
loope
lock
fstp
test
outs
mov
push
js
not
xor
cmps
sub
and
(bad)
(bad)
xchg
shl
out
ret
sub
dec
inc
inc
add
mov
sbb
rol
add
loope
xchg
loope
js
dec
stos
xchg
inc
and
lock
or
int
mov
div
loopne
push
or
out
sub
jge
mov
retf
sti
clc
inc
mov
sbb
cld
enter
add
cs
out
fidiv
pop
fst
test
test
mov
xlat
(bad)
fucom
jno
imul
fistp
sbb
imul
loopne
adc
js
sub
int
pop
retf
mov
add
pop
mov
iret
fs
push
scas
clc
dec
dec
dec
clc
leave
repnz
(bad)
fs
mov
movs
std
ror
jo
add
fwait
int
jnp
cmp
int
cld
dec
adc
daa
xchg
xchg
mov
sub
ret
jmp
(bad)
into
fistp
mov
jmp
jno
push
sar
into
hlt
stc
jmp
xchg
hlt
inc
cmps
dec
pop
sahf
cmc
pop
jg
imul
sbb
ins
jp
cmps
add
dec
pusha
mov
sti
xchg
daa
push
adc
aas
mov
addr16
sub
mov
cwde
dec
mov
add
mov
scas
fdiv
jae
addr16
xchg
sub
inc
push
push
ficom
jge
clc
xor
pmulhuw
jg
or
mov
das
mov
sbb
daa
jbe
and
gs
psubsw
mov
scas
xor
call
enter
pop
adc
jl
stos
fcmovu
push
mov
inc
daa
mov
sbb
fdivr
inc
lods
cmp
or
retf
xchg
adc
xor
addr16
shl
inc
pop
pop
pop
ds
daa
jle
enter
fmul
inc
sub
xchg
sti
dec
mov
jl
fstp
cmps
fistp
or
or
lock
jle
(bad)
and
addr16
aas
mov
enter
cmp
out
add
jle
adc
jg
fsin
(bad)
das
rol
jae
pop
push
test
xchg
sbb
mov
int3
jecxz
and
mov
leave
fisttp
mov
jg
ret
mov
pop
pop
pop
in
fsub
fld
adc
in
dec
adc
or
nop
inc
mov
call
adc
lods
and
sbb
push
and
sbb
(bad)
movs
cmc
aas
xor
xor
not
lock
xchg
repz
pop
xor
mov
rcr
in
jge
icebp
repz
lahf
hlt
cmc
cmp
pop
ficom
pop
xor
sub
jp
sbb
sub
sbb
out
cli
mov
scas
scas
popf
out
and
loope
push
mov
ja
push
mov
mov
pop
pop
inc
or
or
mov
dec
sub
shl
jmp
loop
mov
cwde
pop
add
rep
dec
aas
add
dec
(bad)
(bad)
call
(bad)
mov
jmp
movs
out
sar
cld
shl
xor
mov
mov
jo
cmp
call
and
jl
jmp
jecxz
inc
push
add
je
push
mov
push
xchg
sti
mov
jnp
jl
repnz
(bad)
jle
shl
jae
mov
ret
repz
pop
mov
and
test
mov
pop
mov
mov
out
pop
pop
cmp
test
mov
fadd
push
repz
push
adc
retf
and
shr
push
lods
inc
sbb
leave
(bad)
lea
pop
pop
mov
cmp
push
push
mul
test
pop
out
mov
fst
jb
mov
sar
sar
sar
stos
or
fcomp
rol
cmps
iret
xor
jg
arpl
inc
das
repnz
jmp
dec
mov
inc
mov
mov
mov
and
pop
movs
or
pushf
mov
in
add
ins
xchg
or
fdiv
ss
mov
mov
push
jmp
xchg
add
xchg
out
sbb
adc
dec
xor
sbb
lock
jl
xor
loopne
inc
jb
retf
je
pop
add
pop
dec
shl
test
adc
mov
gs
dec
cmp
mov
inc
cli
inc
das
fs
ficom
and
ins
xchg
xor
add
add
mov
sbb
loop
je
stc
cmps
sub
jl
out
mov
pop
daa
mov
(bad)
sbb
cmps
dec
xlat
sar
push
dec
stos
std
xchg
push
sbb
and
shl
push
and
mov
and
inc
movs
mov
mov
mov
mov
xchg
push
push
sub
lea
or
or
test
add
cs
jge
popf
ficom
out
std
out
sar
and
mov
int3
jg
stos
or
pop
sub
int3
imul
mov
xchg
ds
(bad)
push
ins
xchg
ja
cdq
mov
jae
in
test
add
xchg
(bad)
cli
movs
jmp
popa
out
in
loop
and
and
rcr
xchg
add
xor
shl
lds
dec
or
jno
mov
mov
add
jb
mov
(bad)
push
aam
es
leave
jge
fucomip
in
ret
push
xor
iret
sub
inc
hlt
xchg
enter
lahf
inc
mov
icebp
sbb
or
rcl
jo
adc
gs
in
and
stos
in
ds
mov
icebp
mov
js
xor
lods
push
dec
jl
data16
push
xchg
sahf
stos
daa
ret
mov
or
je
mov
cwde
lea
add
cmp
sub
sbb
cmp
jl
xor
sub
retf
sub
mov
shr
nop
lods
add
cld
cmp
and
je
jno
out
call
ror
jecxz
sub
and
enter
pushf
mov
jecxz
std
inc
or
ret
and
mov
rol
stc
scas
or
loopne
(bad)
cdq
push
adc
int3
adc
sbb
jnp
test
in
fmul
pusha
movs
inc
rcr
adc
nop
loope
ret
or
jp
lock
jle
sub
fwait
sbb
sub
xchg
nop
mov
mov
sub
mov
and
mov
daa
enter
xchg
test
or
xor
cmp
test
adc
and
mov
ror
ja
mov
out
mov
(bad)
(bad)
fnstcw
jle
push
mov
pushf
test
cdq
ret
fiadd
inc
pop
rcr
fcomp
retf
cmp
pop
inc
xchg
fdiv
je
cdq
enter
ins
loopne
dec
icebp
out
push
dec
jbe
add
and
add
xchg
push
nop
or
loop
cmps
enter
and
bnd
lahf
lahf
xor
push
(bad)
hlt
jne
sub
call
xor
repz
cmp
bound
ja
out
mov
aam
ficom
mov
sub
pop
or
sar
xlat
(bad)
(bad)
scas
in
mov
enter
pushf
cmp
cmp
ins
inc
and
adc
retf
ret
aam
(bad)
outs
scas
or
lods
mov
dec
xchg
inc
inc
mov
lods
and
(bad)
add
je
sbb
push
sub
stc
xchg
sub
nop
push
mov
or
xor
adc
bound
or
fild
mov
mov
outs
sbb
adc
int
test
push
jp
ins
pop
jmp
push
add
or
xor
mov
cmp
mov
and
inc
jae
adc
xchg
pusha
adc
jne
or
cdq
(bad)
cmp
ret
ins
cmp
(bad)
scas
sti
sti
test
in
jno
loope
sbb
lods
and
cmp
jns
jle
ret
(bad)
fdivr
push
adc
bnd
fcomp
mov
test
mov
cmp
(bad)
rcr
daa
sti
cli
les
ss
pushf
dec
mov
ja
ret
add
cmp
push
out
cmp
cmp
(bad)
sub
add
fcmovu
mov
loopne
int
xchg
sub
sub
jo
pop
cmp
push
mov
and
adc
std
jbe
add
add
xchg
int
add
repz
xchg
inc
or
out
add
hlt
shl
xor
mov
stc
pushf
pop
jns
pop
sbb
neg
(bad)
out
xchg
scas
stos
mov
sar
out
rol
mov
pop
or
add
(bad)
sub
fcomp
pusha
and
xor
dec
(bad)
push
jnp
mov
and
xchg
lahf
jl
mov
pop
enter
push
in
dec
fstp
ret
cdq
cs
fild
repz
imul
ret
jae
mov
aas
retf
ret
dec
dec
mov
inc
adc
adc
loopne
enter
out
es
sub
jb
xor
adc
sahf
lahf
push
sti
cmp
daa
pop
jns
ror
xchg
or
cli
(bad)
xor
jmp
jbe
mov
jbe
cld
mov
sub
sub
clc
xchg
push
addr16
xor
adc
lock
jne
xor
jge
ins
mov
xor
es
das
imul
sbb
loopne
scas
bound
push
mov
ret
push
jle
in
push
xor
push
imul
or
pushf
sub
das
lea
fcom
ja
add
mov
or
push
mov
push
sbb
lock
movs
dec
xor
add
fsubr
(bad)
push
sar
call
dec
cmp
cmp
pushf
out
pop
ret
and
stc
bound
lds
(bad)
push
jg
test
xor
mov
fidiv
pop
sbb
fnstenv
push
enter
fisttp
mov
push
sub
pop
xor
adc
mov
push
push
cmp
inc
cmp
sub
mov
mov
fisttp
jnp
std
jmp
cmp
imul
retf
sbb
rcl
mov
cmp
shl
aad
test
jmp
out
gs
sub
sub
addr16
push
div
jecxz
pop
xchg
inc
outs
retf
add
sbb
pop
(bad)
nop
dec
xchg
push
jg
ds
sbb
iret
call
mov
mov
xor
ret
sbb
lahf
loope
fidivr
pop
std
in
cmps
jns
out
ds
pop
or
sbb
scas
push
fmul
cmp
push
aaa
inc
cmp
push
test
xor
and
add
les
int
pop
imul
mov
mov
fisttp
jmp
mov
and
fwait
xor
fnstenv
std
pusha
jmp
mov
leave
xlat
aas
mov
inc
and
add
lahf
pop
cmp
sbb
and
test
dec
daa
mov
fwait
repnz
ret
fisttp
shl
inc
xchg
into
push
icebp
clc
mov
cld
das
mov
loopne
(bad)
mov
push
cmp
push
xchg
cs
mov
push
mov
sbb
mov
pop
add
mov
inc
sbb
iret
sub
scas
cmp
xor
cmp
push
test
or
or
in
daa
push
pop
(bad)
lea
in
ret
xchg
push
je
pusha
shl
rol
bound
lds
cdq
cli
out
push
iret
sub
shl
out
or
sub
cwde
loop
(bad)
test
push
ja
test
push
xor
sahf
xchg
and
sbb
cdq
sahf
add
add
dec
push
add
icebp
movs
pop
cwde
push
xor
mov
mov
push
adc
test
out
fiadd
neg
les
sbb
cmp
daa
fcomip
xchg
adc
cs
and
or
mov
cmps
mov
sub
pop
jl
or
mov
mov
pop
xchg
xchg
xor
mov
pop
das
push
xlat
aad
lods
mov
rol
jbe
clc
clc
sbb
out
pop
sub
sub
jecxz
aas
cmp
and
cmc
sbb
mov
les
jnp
sub
icebp
shr
movs
arpl
jecxz
xchg
enter
leave
jg
cmps
fist
(bad)
push
jg
test
jno
mov
daa
rcr
test
cmc
or
adc
retf
adc
dec
(bad)
add
sar
(bad)
loopne
int
and
loopne
sbb
cmp
adc
ds
add
and
int3
(bad)
mov
adc
loope
xor
mov
das
jb
adc
inc
mov
in
push
jp
in
stc
jnp
jecxz
test
mov
loopne
or
lds
dec
sahf
mov
push
setle
add
fst
repnz
xor
lods
jmp
rol
test
addr16
out
mov
add
cmps
sti
jl
fstp
jmp
mov
and
dec
adc
jno
jo
imul
dec
inc
xor
call
repnz
sub
int
jbe
mov
fld
addr16
xlat
add
sbb
retf
mov
(bad)
mov
push
repnz
cmp
jp
jle
sbb
fucom
call
fild
pop
sub
push
add
stc
enter
sti
or
cmp
fst
fdivr
addr16
dec
jae
mov
xor
mov
xchg
xor
push
outs
lods
gs
out
sub
sub
or
mov
(bad)
sub
js
inc
or
inc
dec
emms
sub
push
dec
pop
sub
sub
and
lock
out
cmp
sub
jnp
popf
mov
into
std
cmp
test
pop
jns
movs
aas
aaa
cld
pop
push
movs
xchg
push
push
add
not
push
out
push
pop
call
xor
mov
cmp
pop
and
aas
cmp
push
lock
cdq
push
cmps
or
xchg
loope
sbb
jae
rcr
push
xchg
or
mov
lahf
dec
enter
frstor
adc
pop
mov
push
or
fild
aam
(bad)
outs
and
bound
push
cld
pop
cmp
add
out
lahf
into
icebp
pop
push
cmc
stc
(bad)
xchg
stos
add
xchg
mov
jbe
(bad)
mov
arpl
dec
xor
dec
scas
mov
loope
rcl
pop
call
cmp
addr16
cdq
jb
int3
add
xor
outs
adc
ds
xchg
mov
jg
cmp
xor
add
je
xchg
or
jmp
or
mov
add
cld
cmp
mov
cwde
mov
sub
mov
(bad)
sub
outs
dec
repz
jge
jno
stos
add
ins
or
scas
(bad)
pusha
arpl
pop
lods
cmc
jnp
jb
test
mov
mov
mov
xlat
scas
pop
cmp
pop
popa
enter
jno
cmps
dec
sub
shr
sahf
jle
(bad)
jmp
xchg
cdq
mov
xchg
scas
add
icebp
push
inc
loopne
mov
ret
rol
enter
xchg
push
mov
dec
mov
movs
jmp
hlt
enter
mov
add
cmp
(bad)
xor
daa
xchg
push
xor
mov
repnz
inc
push
push
and
repz
repnz
or
inc
in
cmp
adc
mov
add
out
das
imul
sbb
mov
xchg
leave
pop
es
les
dec
and
cmp
dec
and
mov
cmp
jmp
xor
rcl
fisttp
(bad)
add
xor
mov
cli
cmp
pop
add
sbb
mov
inc
xchg
int
(bad)
jmp
jae
cld
jne
xor
push
enter
sub
push
cdq
pop
xor
add
cld
add
mov
ret
mov
test
sbb
rcl
pop
test
daa
movs
scas
iret
jle
adc
push
add
iret
daa
pusha
dec
shr
dec
dec
cmp
pop
mov
mov
dec
call
mov
sbb
xchg
xor
sbb
jbe
mov
mov
sub
mov
shl
pop
in
stc
sti
ja
inc
cmp
ret
ds
call
adc
jl
or
inc
(bad)
mov
hlt
mov
push
test
or
push
sti
clc
daa
adc
rcl
mov
idiv
mov
jb
xlat
(bad)
mov
fnstcw
or
cdq
inc
ret
pop
add
mov
sbb
and
jns
mov
mov
mov
push
mov
call
xor
xor
jecxz
dec
fsubr
ror
leave
out
push
pop
arpl
cmps
push
int
dec
cmp
sbb
xor
iret
jp
sbb
lea
cmc
jp
add
xor
or
xor
adc
push
push
sub
rcr
pop
or
and
adc
or
and
sbb
sbb
(bad)
fwait
dec
ins
in
cwde
dec
bound
mov
ss
retf
loop
aas
imul
loop
dec
push
add
mov
(bad)
jle
add
pushf
sub
pop
arpl
mov
leave
pushf
xchg
(bad)
and
shl
xor
into
or
sub
nop
mov
sub
mov
pop
add
mov
rdmsr
out
inc
cmp
jmp
xchg
leave
in
and
pop
nop
mov
xor
test
rol
dec
fst
rcr
jecxz
jbe
sti
int3
adc
push
fucomip
data16
mov
and
data16
leave
mov
pusha
(bad)
xlat
stc
cmp
inc
push
sbb
sub
add
std
fld
fimul
(bad)
out
iret
pop
es
arpl
fs
(bad)
fisubr
imul
pop
ins
or
loopne
add
bound
or
sub
adc
or
push
inc
shl
inc
mov
dec
ret
sbb
mov
test
ret
mov
lahf
out
out
enter
int3
movs
aaa
xchg
add
out
inc
sbb
pop
fnstenv
mov
ror
adc
movs
jne
inc
sub
stos
ja
data16
out
cmp
add
sub
jb
(bad)
sub
(bad)
popf
leave
in
iret
dec
inc
out
cmps
sub
sbb
fidivr
out
push
repz
push
sub
sti
dec
mov
sub
hlt
jae
sbb
adc
(bad)
fsubr
outs
ins
cmp
mov
sub
out
add
and
neg
fst
and
sub
hlt
mov
adc
inc
(bad)
outs
jns
div
(bad)
xor
dec
xchg
xchg
stos
add
xchg
popf
shl
xlat
xchg
rol
imul
pop
lods
js
retf
sbb
inc
xchg
stos
xor
test
movs
imul
arpl
imul
test
add
push
adc
xor
stos
add
push
add
lea
movs
imul
arpl
imul
les
and
add
add
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
and
push
push
and
add
add
add
pop
add
or
adc
(bad)
clc
(bad)
packuswb
or
dec
in
push
es
push
push
and
add
pop
and
push
into
xor
mov
pop
pop
jmp
jnp
(bad)
call
(bad)
idiv
xor
ret
call
adc
push
and
add
sbb
push
jg
cmp
lock
(bad)
std
ins
ins
(bad)
std
ja
(bad)
dec
imul
dec
dec
(bad)
(bad)
cmp
(bad)
call
pop
jp
add
add
add
sbb
or
cmp
cmp
(bad)
(bad)
cmp
(bad)
push
ss
or
add
inc
add
inc
and
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
sbb
dec
add
adc
push
ins
jmp
inc
inc
(bad)
std
ss
(bad)
nop
or
add
or
or
or
or
or
or
or
pop
std
push
add
dec
or
std
cmp
idiv
cmp
(bad)
jmp
and
arpl
add
add
or
add
add
lea
inc
(bad)
inc
(bad)
jmp
pop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
add
add
add
xor
(bad)
cmp
(bad)
(bad)
and
mov
jge
add
add
add
sub
push
rcl
fdivr
inc
inc
(bad)
(bad)
aas
aas
repz
adc
dec
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
jmp
sub
jmp
sub
inc
pop
sub
add
sbb
xchg
cli
push
push
(bad)
dec
(bad)
push
xor
std
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
pop
inc
add
std
and
xchg
(bad)
cmp
(bad)
std
sub
(bad)
or
ds
push
daa
add
add
add
pop
cmp
dec
(bad)
inc
(bad)
call
sbb
pop
pop
add
or
or
or
dec
or
dec
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
dec
or
inc
add
call
sbb
aaa
aaa
(bad)
jmp
out
push
push
dec
retf
es
add
dec
push
push
jne
dec
dec
icebp
inc
(bad)
ss
or
add
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
or
or
or
add
add
push
push
inc
std
xor
(bad)
jmp
out
call
adc
add
sbb
add
add
pop
sbb
xchg
cmp
scas
jmp
(bad)
inc
(bad)
call
push
std
pop
pop
add
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
or
or
push
std
or
or
push
or
std
or
or
or
or
push
push
add
or
and
std
sub
hlt
call
add
add
add
or
or
dec
(bad)
popa
(bad)
(bad)
dec
retf
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
pop
std
pop
pop
pop
dec
or
std
or
or
or
add
pop
push
push
std
sub
loope
sub
clc
call
sbb
cmp
add
aaa
adc
push
iret
push
push
(bad)
call
jmp
sub
add
add
or
or
or
or
or
dec
or
or
dec
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
and
jmp
std
jmp
and
add
add
add
add
add
jg
xor
in
inc
inc
cld
dec
(bad)
std
or
add
or
or
or
or
std
or
or
or
or
or
or
std
or
or
or
or
or
push
dec
or
std
pop
or
std
add
xor
std
add
xor
dec
or
std
pop
or
std
or
or
or
or
or
or
or
or
or
std
or
or
or
or
std
pop
or
call
sbb
call
pop
xchg
jmp
add
add
add
add
add
add
sbb
into
jmp
or
add
or
or
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
sbb
add
aaa
inc
or
es
mov
dec
pop
loopne
pop
outs
icebp
std
push
fs
es
add
push
std
push
or
or
or
or
or
or
or
or
or
dec
push
push
std
or
femms
dec
or
std
and
fwait
std
xor
(bad)
dec
or
add
add
add
add
add
add
add
push
add
xchg
or
dec
or
dec
or
dec
or
or
dec
or
dec
adc
or
sub
add
call
cmp
(bad)
cmp
dec
loopne
jl
(bad)
inc
sbb
dec
or
or
or
or
or
(bad)
ud0
push
push
call
adc
dec
(bad)
ud0
adc
dec
(bad)
call
push
in
add
add
add
adc
add
add
add
add
or
out
push
push
push
dec
push
push
dec
push
push
std
push
push
push
dec
push
push
std
push
push
push
std
push
push
or
dec
push
and
add
inc
call
movs
std
jg
(bad)
std
ins
jle
dec
sbb
add
cmp
std
add
inc
std
add
pop
call
test
adc
inc
add
pop
dec
push
paddw
adc
std
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
cmp
add
add
add
add
add
cmp
pi2fd
or
ud0
(bad)
paddw
(bad)
ud0
femms
std
(bad)
prefetch
or
std
or
or
std
add
icebp
inc
cs
add
dec
inc
and
pop
or
std
or
or
or
push
std
pop
pop
or
pop
or
inc
or
std
add
std
pop
outs
hlt
jmp
idiv
add
dec
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
sub
add
add
add
lar
add
adc
dec
push
push
call
adc
call
adc
call
adc
call
(bad)
ud0
unpckhps
or
inc
pop
pop
push
lahf
(bad)
(bad)
cmp
add
popa
inc
pop
sub
dec
pop
pop
inc
pop
push
inc
pop
pop
inc
pop
pop
inc
pop
pop
inc
push
add
inc
or
jmp
cmp
inc
push
xchg
dec
or
sbb
adc
adc
adc
adc
adc
adc
adc
pop
or
or
adc
dec
(bad)
paddw
adc
call
adc
std
adc
adc
movups
push
mov
call
std
add
inc
or
std
or
or
or
push
inc
pop
pop
std
or
or
or
or
or
or
or
push
push
add
std
pop
or
add
(bad)
(bad)
jp
(bad)
std
xor
std
add
dec
call
adc
std
adc
adc
pop
std
pop
pop
pop
call
adc
mov
add
add
(bad)
jo
adc
adc
adc
adc
adc
push
std
or
jp
pop
jo
std
js
(bad)
std
adc
pushf
inc
add
push
or
std
or
or
or
push
std
or
pop
std
pop
push
pop
dec
push
push
std
or
or
push
push
push
call
adc
std
adc
adc
adc
adc
sbb
sbb
adc
adc
add
add
pop
pop
or
inc
add
std
push
addr16
std
popa
je
inc
or
xor
pop
sbb
sbb
pop
std
sbb
sbb
adc
add
add
adc
call
adc
dec
adc
inc
or
dec
int3
inc
mov
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
inc
pop
pop
inc
add
adc
adc
sbb
pop
pop
call
sbb
push
push
push
call
sbb
call
sbb
jmp
and
call
sbb
inc
push
add
push
pop
or
pop
or
jmp
aaa
mov
call
push
mov
adc
call
sbb
call
sbb
call
push
adc
add
sbb
aad
pop
sub
push
or
sbb
movs
(bad)
jns
(bad)
std
dec
pop
(bad)
add
xor
pop
or
pop
pop
push
std
or
or
or
or
add
or
pop
jmp
and
std
adc
adc
or
or
or
or
or
std
adc
adc
sbb
sbb
sbb
sbb
sbb
and
std
or
or
add
or
std
add
xor
pop
adc
xor
dec
dec
std
sbb
std
sbb
adc
add
or
iret
add
sbb
dec
sbb
std
gs
inc
adc
push
or
std
or
or
pop
pop
pop
std
pop
pop
push
dec
or
std
or
or
or
or
push
sbb
and
movups
dec
or
std
or
push
push
dec
or
push
push
push
std
or
or
std
sbb
sbb
sbb
sbb
and
and
sbb
push
adc
std
push
pop
or
add
daa
std
add
pop
std
dec
(bad)
out
push
jmp
std
sbb
das
call
pop
dec
cmp
adc
jmp
inc
push
mov
call
sub
inc
or
dec
pop
or
inc
pop
push
dec
or
dec
or
dec
(bad)
ud0
push
sbb
and
and
push
push
adc
or
or
or
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
movups
pop
pop
pop
(bad)
cmp
cmp
sub
sub
push
push
push
dec
or
inc
or
inc
add
jmp
mov
imul
dec
nop
jae
push
fadd
add
jmp
push
(bad)
inc
add
or
std
pop
or
inc
pop
pop
std
push
push
add
std
or
or
sbb
and
and
pop
adc
sbb
push
push
push
std
or
or
push
push
push
dec
or
or
or
push
push
push
dec
or
or
or
or
or
or
or
std
adc
adc
adc
adc
or
sub
std
sub
sub
and
and
adc
adc
add
add
pop
or
inc
push
xor
push
adc
push
and
or
adc
mov
add
inc
or
std
pop
pop
pop
std
push
push
add
or
or
adc
adc
push
push
push
std
aas
aas
aas
std
es
adc
adc
es
xor
xor
sub
sub
and
and
sbb
or
or
or
or
push
push
push
dec
or
or
or
or
or
std
or
or
or
or
adc
adc
sub
sub
or
or
adc
adc
and
and
and
push
pop
std
pop
push
push
inc
push
or
add
add
movs
mov
adc
add
push
or
inc
add
or
pop
pop
pop
call
sbb
jmp
cs
sub
or
or
es
inc
(bad)
cmp
cmp
xor
xor
sub
sub
es
and
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
inc
adc
push
dec
or
sbb
sbb
es
and
adc
push
inc
pop
inc
pop
adc
push
push
adc
pop
pop
pop
mov
or
call
push
push
std
sub
sub
sub
sub
push
push
push
call
pop
pop
std
dec
dec
dec
std
dec
dec
dec
std
inc
inc
inc
(bad)
cmp
cmp
xor
xor
das
das
das
jmp
sub
std
and
and
sbb
adc
or
dec
or
or
or
or
or
std
or
or
or
or
or
or
or
or
push
push
push
std
or
or
(bad)
(bad)
ud0
or
std
(bad)
(bad)
paddw
push
push
jmp
and
sbb
sbb
push
push
add
inc
add
add
sbb
fisubr
sub
push
sbb
call
adc
dec
dec
dec
jmp
pusha
call
push
dec
inc
(bad)
aas
aas
aas
(bad)
cmp
cmp
xor
xor
sub
sub
and
and
sbb
sbb
call
adc
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
add
or
or
or
or
or
or
adc
adc
pop
pop
pop
call
pop
pop
dec
or
dec
or
add
add
pop
pop
pop
cli
inc
inc
inc
(bad)
aas
aas
aas
std
sbb
sbb
inc
inc
inc
push
jno
bound
call
std
push
push
push
std
dec
dec
dec
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
xor
sub
sub
es
push
push
push
call
sbb
std
adc
or
or
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
or
or
or
or
or
adc
sbb
jo
add
add
or
xchg
call
sbb
call
sbb
std
outs
outs
outs
push
jb
data16
pop
std
pop
pop
pop
std
push
push
push
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
cs
daa
daa
daa
std
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
inc
add
or
or
or
or
or
add
add
xor
dec
cmp
cmp
pop
pop
pop
inc
add
jmp
and
call
pop
jmp
push
call
push
dec
dec
inc
(bad)
cmp
cmp
xor
cs
es
and
call
sbb
call
push
push
call
adc
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
pop
pop
inc
push
push
inc
add
add
add
add
or
or
push
push
push
test
add
add
push
push
dec
sbb
sbb
push
push
push
inc
add
call
push
std
pop
pop
pop
std
dec
dec
dec
inc
std
cmp
xor
jmp
cs
es
and
and
sbb
sbb
adc
adc
dec
pi2fw
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
add
inc
push
push
dec
or
or
or
adc
adc
adc
(bad)
or
or
add
add
adc
adc
aas
aas
aas
dec
dec
std
cmp
xor
cs
daa
daa
daa
std
and
and
sbb
sbb
push
push
push
std
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
pop
pop
pop
std
add
add
add
add
or
or
push
push
push
in
or
jnp
or
adc
add
add
push
or
mov
add
add
or
or
xor
xor
cmp
cmp
sub
and
and
sbb
sbb
adc
adc
adc
adc
or
push
push
dec
or
or
or
dec
or
or
or
add
add
or
or
adc
adc
adc
adc
adc
mov
sbb
cmps
push
push
push
inc
pop
pop
inc
and
std
sub
sub
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
push
dec
or
std
add
add
pop
pop
pop
call
sbb
fcom
adc
imul
add
sbb
sbb
cs
inc
inc
inc
call
pop
pop
inc
add
(bad)
push
push
push
call
sbb
std
adc
adc
adc
adc
push
push
push
std
or
or
add
add
adc
adc
sub
sub
and
sbb
xor
add
add
xor
or
sub
or
inc
add
dec
push
push
inc
pop
pop
inc
push
sbb
sub
sub
and
push
push
add
add
add
and
sbb
pop
pop
les
adc
loopne
adc
int
sbb
mov
push
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
call
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
push
add
inc
add
jmp
add
inc
add
inc
add
inc
add
add
(bad)
cld
add
aas
inc
add
clc
add
pop
inc
add
lock
pop
inc
add
rol
add
add
inc
add
inc
add
add
add
cld
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rol
add
pop
add
rol
add
aas
add
rol
add
aas
add
loopne
add
add
add
lock
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
push
add
pop
inc
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
push
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
adc
add
pop
fs
cmp
test
or
add
push
and
or
inc
mov
outs
outs
(bad)
inc
cmp
dec
dec
(bad)
call
or
or
add
pop
xor
and
cmp
push
xor
inc
add
inc
add
call
ds
call
xchg
jmp
or
xor
sar
inc
inc
(bad)
call
sbb
pop
pop
add
or
or
or
or
or
or
push
add
and
cmp
(bad)
jmp
and
xor
add
add
and
push
push
(bad)
push
ss
dec
or
dec
or
or
or
or
or
or
or
or
or
or
or
push
push
add
push
push
or
xor
repz
daa
retf
inc
add
add
add
push
cmp
mov
jmp
and
push
push
add
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
pop
add
add
add
sub
sar
sub
in
push
push
sub
add
add
push
and
adc
dec
test
cmp
jecxz
push
push
adc
dec
or
or
dec
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
inc
add
jmp
and
dec
or
add
add
xor
es
call
sub
push
add
or
or
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
pop
inc
pop
pop
inc
pop
pop
dec
or
inc
sbb
dec
add
cmp
sub
jmp
push
cli
call
adc
inc
pop
add
or
or
or
dec
or
or
or
or
push
push
or
add
pop
add
dec
or
dec
or
dec
or
dec
or
dec
or
call
adc
xor
(bad)
call
adc
add
add
add
add
sub
add
or
or
or
or
or
dec
or
dec
or
inc
add
test
cmp
(bad)
ds
mov
inc
add
dec
or
dec
or
dec
or
or
push
push
dec
add
adc
aaa
push
ss
dec
or
add
add
add
add
add
add
sub
or
or
dec
or
or
or
or
or
or
or
inc
sbb
jge
call
out
sub
mov
sub
ins
lock
loope
add
or
push
or
push
call
adc
call
adc
call
adc
call
pop
cwde
fild
add
or
add
and
add
push
push
dec
(bad)
ud0
femms
dec
ud2
dec
or
inc
or
dec
pusha
(bad)
pop
jo
inc
add
add
add
inc
add
call
push
xchg
gs
dec
sbb
or
call
adc
call
adc
call
adc
call
adc
imul
add
add
pop
pop
xchg
adc
call
adc
call
femms
dec
push
ud0
pop
xor
sub
jge
call
and
and
pop
push
push
inc
pop
add
pop
pop
push
inc
pop
add
inc
dec
call
repnz
cmp
call
adc
adc
push
push
call
adc
pfrsqit1
adc
ud0
adc
dec
or
call
sbb
(bad)
push
mov
inc
pop
add
or
pop
dec
or
adc
adc
adc
adc
adc
adc
adc
push
inc
daa
push
inc
mov
dec
push
inc
call
pop
sbb
sbb
pop
call
pop
adc
add
push
adc
(bad)
(bad)
inc
or
(bad)
dec
pop
(bad)
add
push
inc
add
dec
pop
add
inc
push
push
call
sbb
call
sbb
call
sbb
call
pop
pop
call
sbb
inc
add
adc
call
call
and
sbb
pop
std
adc
cmp
xor
call
idiv
or
jne
add
sbb
pop
push
add
dec
or
dec
push
push
call
pop
pop
call
push
push
dec
or
or
or
call
push
push
call
and
dec
or
inc
add
inc
dec
out
sub
mov
call
push
cmp
add
xor
imul
and
add
inc
add
add
call
adc
call
sbb
sbb
sbb
or
or
or
push
push
dec
push
push
dec
push
push
dec
or
or
adc
jmp
das
call
adc
add
add
and
sub
mov
inc
push
into
inc
mov
add
in
inc
add
xor
add
inc
push
add
or
or
and
and
sub
sub
sbb
sbb
daa
daa
jmp
sub
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
or
dec
or
call
sbb
adc
adc
and
and
and
and
or
pop
inc
add
call
sbb
push
and
add
add
add
dec
pf2iw
sbb
jmp
sbb
jmp
das
das
inc
inc
push
xor
sub
sub
and
and
pop
pop
pop
dec
or
push
push
push
dec
push
push
dec
or
dec
or
inc
push
push
dec
pi2fd
or
sbb
es
inc
add
inc
add
add
adc
xchg
and
das
sub
sbb
sub
sub
pop
pop
pop
dec
dec
inc
inc
(bad)
cmp
cmp
das
das
das
jmp
and
sbb
adc
dec
push
push
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
dec
or
dec
sbb
call
sbb
or
add
push
push
push
pushf
push
push
push
call
push
push
jmp
jmp
imul
pop
pop
call
push
inc
inc
(bad)
cmp
cmp
xor
xor
sub
sub
sbb
push
push
dec
push
push
dec
push
push
dec
or
dec
or
dec
or
dec
or
inc
push
push
inc
add
add
or
call
adc
call
push
pop
inc
add
add
inc
inc
test
adc
jmp
and
call
jmp
call
push
dec
dec
(bad)
ds
xor
jmp
sub
call
push
push
call
push
push
call
adc
dec
or
or
or
or
or
or
pop
pop
pop
inc
pop
pop
inc
add
add
add
add
add
or
or
push
add
add
and
and
add
call
sbb
dec
dec
dec
dec
(bad)
aas
aas
aas
push
xor
jmp
sub
jmp
and
call
push
push
call
adc
dec
or
or
or
or
or
or
or
or
add
add
or
or
or
adc
adc
(bad)
(bad)
setb
push
pop
call
adc
push
xor
push
ss
sub
call
pop
pop
call
adc
dec
or
or
or
or
add
push
dec
or
dec
or
or
or
or
add
add
adc
or
sbb
sbb
sbb
(bad)
pf2iw
sbb
call
push
push
call
adc
dec
push
push
dec
or
dec
or
call
pop
pop
sahf
adc
adc
dec
dec
dec
jo
and
out
or
or
push
push
push
inc
pop
pop
dec
push
push
into
sub
sub
and
add
add
add
sbb
pop
adc
adc
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
ud0
lock
(bad)
jmp
add
inc
add
inc
add
inc
add
add
aas
lock
pop
loopne
add
rol
pop
add
xadd
add
loopne
add
lock
(bad)
add
(bad)
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
clc
add
paddd
add
inc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
ja
pop
pop
(bad)
call
(bad)
call
sbb
add
add
add
pop
sub
sub
(bad)
adc
pop
inc
add
std
or
adc
xor
(bad)
pop
pop
mov
or
sbb
inc
(bad)
jmp
and
or
add
or
or
or
or
or
add
std
sub
mov
jmp
add
add
sbb
ss
inc
inc
out
call
adc
dec
or
std
or
or
or
or
or
or
or
or
or
pop
inc
add
std
push
push
mov
sub
fincstp
push
push
sub
adc
inc
jbe
dec
cli
jmp
sub
dec
or
std
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
add
add
adc
sub
dec
or
inc
add
add
push
push
je
push
push
stc
call
sbb
dec
or
dec
or
std
or
or
add
std
push
push
add
pop
pop
add
pop
pop
pop
dec
or
dec
or
std
adc
cmp
sub
jmp
add
or
xor
fdivrp
or
add
or
push
dec
or
std
or
or
or
or
or
std
add
adc
pushf
(bad)
and
xchg
add
sbb
or
add
or
or
or
or
or
add
(bad)
xor
jmp
adc
add
cmp
add
scas
or
push
push
std
push
push
or
dec
or
std
pop
push
inc
dec
loope
dec
push
sar
pop
sub
dec
popa
jmp
push
adc
pop
dec
push
or
adc
adc
adc
or
adc
pop
into
add
add
(bad)
(bad)
ud0
push
or
inc
or
aaa
inc
mov
dec
pop
jecxz
pop
or
add
add
add
inc
add
std
inc
push
sar
sub
cdq
dec
adc
adc
ud0
adc
adc
adc
add
add
push
or
dec
or
std
push
daa
jnp
dec
(bad)
in
call
and
add
or
dec
or
dec
push
or
dec
add
jmp
das
xchg
inc
sar
or
sub
pop
push
adc
push
push
adc
add
adc
push
(bad)
cmp
std
add
push
add
(bad)
(bad)
paddw
sbb
std
push
push
push
(bad)
adc
pop
pop
(bad)
sbb
push
std
add
add
or
push
inc
loop
sbb
pop
(bad)
sbb
adc
add
dec
dec
test
inc
pop
ss
add
add
or
add
adc
push
std
sbb
sbb
adc
adc
or
or
or
or
or
push
push
std
sbb
sbb
sub
sub
or
push
std
add
pop
push
inc
(bad)
jmp
mov
or
xchg
daa
add
push
sbb
add
push
std
or
add
std
push
push
push
std
and
and
and
and
push
push
push
std
or
or
or
or
or
(bad)
(bad)
paddw
sbb
std
and
and
sbb
adc
add
or
pop
sub
push
jmp
add
or
dec
or
add
sbb
sbb
sbb
sub
inc
inc
(bad)
cmp
cmp
sub
sub
push
push
push
dec
push
push
dec
or
or
or
std
or
or
or
or
or
or
pop
pop
pop
jmp
and
dec
pop
add
add
es
add
add
cmp
jmp
push
push
std
pop
pop
pop
dec
dec
(bad)
cmp
das
das
jmp
and
call
push
push
dec
or
or
or
or
or
or
push
push
push
std
push
push
push
dec
or
sbb
sbb
adc
push
mov
add
add
push
push
sbb
ds
and
call
pop
jmp
arpl
dec
dec
dec
std
inc
inc
inc
(bad)
xor
xor
and
and
pop
pop
pop
std
(bad)
pi2fw
or
std
or
or
or
or
or
or
pop
pop
pop
inc
add
add
add
push
push
push
dec
or
mov
add
add
sbb
inc
push
push
push
enter
inc
inc
inc
std
xor
xor
and
and
pop
pop
pop
dec
pi2fw
or
dec
or
or
or
or
or
push
push
push
inc
pop
pop
dec
or
cmps
or
or
(bad)
pi2fw
or
mov
and
and
and
and
pop
pop
pop
dec
pi2fd
or
or
or
or
or
adc
push
or
add
sub
sub
cmp
cmp
push
push
push
dec
or
call
adc
cld
and
and
and
and
adc
adc
adc
add
add
(bad)
inc
jmp
inc
inc
jg
inc
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
shl
in
call
add
add
adc
xor
call
add
call
and
add
add
or
xor
dec
or
dec
or
dec
or
inc
adc
and
add
or
add
add
or
cmc
push
pop
dec
or
dec
or
dec
pop
add
pop
pop
add
push
push
add
or
and
and
shr
push
sub
add
add
or
add
or
pop
dec
or
dec
rdtsc
jmp
or
dec
pop
add
or
push
dec
adc
es
and
push
push
or
or
add
pop
or
push
lods
push
inc
stos
call
push
pop
push
scas
jmp
sub
or
add
call
adc
aad
add
add
or
or
and
push
inc
mov
inc
add
or
add
pop
push
add
adc
inc
mov
adc
sbb
push
push
pandn
add
add
inc
mov
inc
add
dec
push
or
adc
adc
adc
adc
sbb
sbb
pop
pop
ud0
and
xor
call
and
inc
sbb
sbb
sub
add
call
sbb
sbb
sbb
or
or
or
or
call
sbb
jmp
and
jmp
cs
add
push
add
pop
push
jmp
and
(bad)
ds
aas
aas
aas
jmp
sub
call
adc
or
or
dec
or
dec
or
call
pop
push
call
adc
inc
or
pop
or
pop
and
xor
pop
pop
pop
jmp
popa
inc
jmp
sbb
dec
push
push
dec
or
dec
or
inc
pop
pop
inc
add
dec
or
dec
push
or
add
add
or
imul
jmp
das
das
call
sbb
dec
push
push
dec
or
or
or
or
or
or
or
pop
pop
pop
pop
sub
sub
adc
adc
or
or
sbb
sbb
sbb
or
add
add
add
adc
adc
adc
(bad)
inc
add
aas
add
clc
sldt
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
sldt
(bad)
jg
add
inc
add
add
add
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
sub
adc
sub
and
les
nop
scas
and
push
add
stos
sbb
call
nop
lahf
cmp
(bad)
mov
std
ins
pop
mov
mov
enter
pop
xchg
pop
fnsave
out
stos
lods
mov
(bad)
int
(bad)
xor
cmp
int3
pop
es
int3
xor
dec
mov
fidivr
push
stos
mov
in
imul
bound
out
lock
je
(bad)
mov
test
out
jge
mov
adc
or
outs
or
adc
jg
jle
in
sub
inc
adc
daa
pop
fst
jmp
mov
out
jne
sahf
sbb
or
and
fsubr
dec
shl
aaa
pushf
stos
cmp
sahf
mov
mov
inc
mov
mov
dec
xchg
mov
and
stos
cmc
push
pop
mov
daa
jo
arpl
xchg
les
retf
pusha
std
imul
ins
mov
jmp
mov
jne
fcomi
jbe
inc
daa
js
inc
mov
in
fyl2x
jge
and
add
add
scas
sbb
add
add
mov
add
dec
adc
add
not
add
pop
add
add
add
sahf
add
add
add
stos
add
add
push
add
mov
add
fstp
add
(bad)
or
add
jbe
add
xor
add
mov
add
or
add
outs
sbb
add
adc
add
or
add
adc
add
add
les
add
int3
pop
add
xlat
sbb
add
push
add
push
or
add
add
mov
or
add
and
add
add
add
add
add
fwait
adc
add
sbb
add
xchg
add
mov
add
pop
and
add
or
add
sbb
add
adc
add
pop
add
jne
add
add
add
fmul
add
(bad)
sbb
add
sub
add
ds
add
add
add
mov
push
add
cmc
push
add
repnz
add
add
add
push
add
das
add
add
add
add
and
add
add
aam
add
adc
add
mul
add
lea
add
jo
add
in
add
push
adc
add
add
add
adc
add
sldt
and
add
test
add
loope
add
cld
sbb
add
sub
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
fs
popa
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
push
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
add
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
addr16
push
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
fs
ins
add
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
jne
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
imul
arpl
imul
add
popa
add
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
addr16
js
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
push
add
add
add
jae
popa
add
ins
add
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
push
add
add
add
jb
ins
add
ins
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
push
add
add
add
add
jae
add
add
pusha
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
push
add
add
add
popa
add
imul
add
add
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
outs
add
push
add
add
add
jb
ins
add
ins
add
mov
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
outs
add
push
add
add
add
add
jae
add
pop
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
ins
add
je
arpl
push
add
popa
add
add
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
pusha
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
popf
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
mov
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
cmps
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
stos
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
imul
je
outs
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
scas
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
push
add
add
add
jae
popa
add
ins
add
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
push
add
add
add
jb
ins
add
ins
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
push
add
add
add
add
jae
add
mov
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
push
add
add
add
popa
add
imul
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
outs
add
push
add
add
add
jae
popa
add
ins
add
fs
mov
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
outs
add
push
add
add
add
jb
ins
add
ins
add
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
outs
add
push
add
add
add
add
jae
add
les
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
je
outs
add
push
add
add
add
add
popa
add
add
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
add
pop
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
rol
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
fild
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
fild
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
inc
add
popa
add
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
jecxz
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
fs
out
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
jmp
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
in
add
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
addr16
out
add
outs
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
fs
repnz
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
cli
add
outs
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jbe
jne
ins
add
add
popa
add
imul
je
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
addr16
std
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
pop
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
adc
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
adc
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
dec
add
jo
outs
add
imul
dec
add
arpl
imul
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
sbb
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
pop
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
and
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
and
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
sub
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
sub
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
das
add
push
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
imul
add
outs
add
add
jns
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
xor
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
cmp
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
addr16
aas
add
jo
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
fs
inc
add
ins
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
add
outs
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
dec
add
jo
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
imul
je
jns
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
add
add
pusha
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
add
bound
jb
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
push
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
add
add
push
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
add
fs
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
popa
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
add
push
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
add
jb
imul
dec
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
add
add
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jae
popa
add
ins
add
fs
imul
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
jb
ins
add
ins
add
outs
add
push
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
add
jae
add
jno
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
push
add
add
add
popa
add
imul
add
addr16
je
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jae
popa
add
ins
add
add
add
push
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
jb
ins
add
ins
add
dec
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
add
jae
add
jg
add
add
jns
jo
je
outs
add
inc
add
add
imul
add
js
push
add
popa
add
je
imul
inc
add
outs
add
add
ins
add
add
ins
add
add
jae
add
outs
add
push
add
add
add
popa
add
imul
add
addr16
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
mov
inc
or
add
or
add
add
add
add
push
add
add
in
inc
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
or
add
or
aas
inc
and
add
pusha
xchg
dec
inc
inc
push
js
in
mov
cdq
xor
inc
dec
or
mov
data16
adc
test
xor
dec
or
add
xor
or
cdq
inc
fs
mov
add
adc
pop
in
inc
xor
jmp
test
pop
jmp
jmp
mov
jnp
cmps
imul
out
push
popf
jae
mov
outs
out
cmp
(bad)
mov
fdivr
cmp
sbb
push
adc
leave
jmp
push
shr
out
lahf
aas
test
xor
aas
call
loopne
push
mov
scas
dec
push
cmp
and
dec
push
sub
loopne
pop
add
sbb
scas
(bad)
cli
scas
fs
fcom
mov
push
pusha
pop
xor
xor
ins
ins
push
mov
mov
arpl
fcomp
(bad)
leave
pop
arpl
sub
movs
arpl
and
(bad)
mov
push
(bad)
jbe
fdiv
or
dec
sbb
jge
ds
(bad)
jbe
scas
les
scas
mov
leave
mov
fdivr
ret
sbb
fs
inc
mov
inc
in
mov
fnstcw
std
imul
into
add
ins
shr
sub
adc
xchg
or
test
in
mov
cwde
int
shr
add
push
arpl
xor
or
ins
rcr
into
leave
out
outs
pop
mov
or
data16
jle
in
mov
cmp
shr
ins
and
xor
iret
ins
stos
fs
fstp
sub
pusha
push
cmp
add
cdq
sbb
dec
cmp
ins
outs
push
data16
repz
pop
nop
cld
je
popa
repnz
fsub
dec
inc
int
fst
(bad)
lods
(bad)
das
loopne
push
mov
ror
cwde
stc
shl
or
fnstcw
popa
out
leave
adc
mov
add
int3
fmul
pusha
mov
mov
pop
cdq
cmp
jmp
xor
sbb
in
xor
push
ja
sbb
retf
push
cwde
stc
adc
ins
shr
adc
hlt
int3
xchg
xor
adc
and
data16
dec
or
ficomp
ret
int3
mov
scas
pop
cmp
jg
mov
jns
jns
pop
pop
add
and
or
cmp
sahf
pop
push
add
sbb
int3
popf
shl
repz
in
call
sahf
js
sbb
push
es
add
aad
repnz
jae
fwait
add
or
mov
pop
xor
pushf
pop
add
xchg
fistp
(bad)
cli
push
aad
sub
pusha
ss
loope
dec
fcom
and
or
es
sub
test
(bad)
mov
xor
fdivr
int
jne
xor
sti
pop
mov
push
jne
or
jb
pop
ret
aaa
xchg
fcmovnb
in
sub
jno
xchg
add
rol
cli
int3
out
iret
ins
push
cli
int3
out
xor
add
xchg
outs
add
(bad)
fadd
imul
stos
imul
xor
pop
shr
data16
int
call
aam
scas
(bad)
aam
and
cdq
test
shr
or
jns
leave
add
sbb
xor
popa
out
in
jbe
into
ins
xchg
icebp
add
mov
pop
fxch
iret
add
enter
into
aam
xor
cmp
fwait
data16
cdq
fldenv
mov
in
pushf
add
inc
inc
iret
sub
add
cwde
cmp
shl
aad
pushw
add
(bad)
pushf
fldenv
pop
into
dec
pusha
push
pop
xor
fcom
jl
idiv
sbb
push
in
int3
adc
mov
jns
sbb
cdq
repnz
cmp
out
ror
ins
imul
inc
add
rdpmc
fstp
int
sbb
push
into
dec
dec
mov
cdq
mov
cwde
mov
jae
test
or
adc
out
mov
push
int
xchg
cmp
int3
dec
(bad)
mov
push
(bad)
out
xchg
mov
lds
fxch
pushf
iret
sub
int
(bad)
cdq
mov
add
rcl
movs
test
or
sti
jbe
imul
pushf
xchg
jl
popa
add
outs
call
(bad)
mov
sbb
mov
je
ss
push
int
xor
cmp
in
out
out
loopne
ror
int
add
or
xor
test
adc
daa
add
adc
jb
lds
mov
push
push
pushw
(bad)
mov
daa
shr
imul
xor
cmp
cmps
fxch
jno
cwde
xor
retf
outs
add
arpl
cwde
add
xchg
xor
xchg
pushf
icebp
bound
fnsave
inc
and
ds
std
jp
mov
pop
dec
add
cmp
dec
mov
cdq
adc
int
jl
jle
sti
push
fldcw
ins
mov
int
push
mov
cdq
mov
add
aam
sbb
enter
xor
cmp
pop
cmps
shr
std
js
add
int
iret
lods
dec
popf
sub
int3
retf
cld
cmps
mul
inc
and
rcr
cmp
mov
mov
mov
int
imul
push
jmp
into
pusha
mov
lods
addr16
cmps
pop
(bad)
cwde
and
lods
fwait
leave
xor
push
scas
inc
push
pusha
out
mov
push
push
add
cmps
cmps
fstp
scas
cwde
iret
sub
xor
addr16
sbb
(bad)
lods
add
retf
mov
aas
idiv
fadd
es
jecxz
push
mov
add
shl
mov
add
mov
inc
rcr
sbb
pop
pusha
outs
add
pop
mov
mov
frstor
cmp
addr16
cmp
dec
jg
dec
in
leave
out
xlat
outs
jb
mov
mov
xor
lods
sbb
int
and
lods
sbb
mov
cmp
mov
fld
sbb
gs
jb
mov
xor
xor
lods
gs
rcl
in
mov
aas
(bad)
jecxz
outs
sub
shr
addr16
jge
(bad)
mov
mov
into
cmp
jae
(bad)
xchg
push
pop
div
(bad)
sbb
(bad)
mov
pop
jns
xchg
or
dec
aad
imul
clc
sahf
jle
add
lods
cmp
in
shl
xor
cdq
outs
mov
mov
loopne
out
cmc
xor
ds
push
out
movs
and
push
mov
fwait
out
(bad)
sti
mov
(bad)
fsubr
ja
xor
idiv
idiv
xor
sub
mov
dec
mov
int
nop
imul
fwait
ss
sbb
push
scas
daa
mov
out
cmps
not
pop
ds
fstp
sahf
pushf
mov
add
in
pop
popa
xchg
aam
xor
arpl
fldcw
push
ds
cmc
push
mov
fwait
pop
jmp
xchg
mov
cdq
and
jae
push
mov
xchg
(bad)
clc
mov
clc
lahf
(bad)
stc
lahf
inc
add
outs
loopne
scas
popa
sar
jns
jns
mov
aaa
cmps
(bad)
xchg
jg
or
outs
jl
inc
inc
lock
mov
scas
pop
not
add
push
fbld
sub
mov
push
test
jbe
out
int
fsubr
inc
sbb
mov
pop
add
lahf
push
int3
in
fcomip
cmp
mov
fcom
xor
aad
pop
shl
push
cmps
pop
mov
test
xchg
or
retf
outs
sub
cmp
pusha
pop
add
stos
push
xor
sub
mov
call
int3
in
jle
adc
jmp
jge
pop
in
push
jo
inc
fbld
je
icebp
cmp
ja
and
push
dec
inc
xor
mov
and
fldpi
iret
xlat
js
jns
adc
movs
sar
retf
push
xchg
in
icebp
ja
sub
into
jg
jg
pop
sbb
enter
sbb
ins
inc
fisttp
mov
mov
out
stc
dec
ss
add
scas
xchg
jge
mov
sar
(bad)
iret
bnd
out
jl
jg
xchg
xchg
cwde
mov
into
hlt
and
fldlg2
in
aad
dec
push
sub
jmp
cdq
in
sbb
cmp
enter
cmp
xchg
fstp
mov
pop
pop
sbb
fist
add
cwde
mov
lds
xor
cmp
into
sbb
dec
adc
test
sbb
mov
clc
push
pusha
sub
aad
cmp
ror
add
es
mov
pop
jg
adc
(bad)
jg
jge
pop
mov
lods
add
sahf
xchg
into
xchg
aas
arpl
mov
(bad)
out
int
mov
and
retf
or
sbb
xlat
int3
test
(bad)
fdiv
hlt
aam
daa
pop
fbld
xchg
leave
iret
mov
push
push
cmp
mov
cmp
xchg
out
dec
into
cwde
imul
int3
cmp
cwde
lds
test
adc
add
stos
mov
xchg
leave
test
outs
xchg
sub
mov
imul
xchg
sbb
fbld
xchg
retf
imul
dec
ss
cmc
loop
adc
sti
jmp
inc
pop
mov
idiv
adc
and
in
cli
jae
in
aam
xor
cli
ds
sub
(bad)
das
retf
in
stos
cwde
mov
scas
stos
int3
ss
fistp
dec
mov
mov
xor
and
dec
mov
xor
(bad)
aas
call
in
mov
sub
sti
in
sbb
or
iret
dec
stc
int3
jb
jae
data16
inc
sub
int3
retf
jl
jmp
xchg
add
or
xor
(bad)
iret
fldenv
(bad)
sub
cmc
or
inc
aaa
test
add
fwait
cmp
out
outs
retf
mov
cmps
jo
out
movs
xchg
cld
pop
cdq
out
adc
mov
scas
jae
ds
adc
mov
leave
inc
mov
push
or
mov
pushf
clc
jp
xchg
pop
rol
sti
mov
add
cmp
push
jl
ins
cmp
mov
inc
mov
mov
stc
leave
xlat
xchg
lahf
pushf
mov
mov
fst
jb
inc
lea
scas
cmps
push
jae
xchg
cmp
je
cdq
xor
add
scas
mov
xchg
pop
jecxz
mov
fadd
mov
fisttp
cwde
or
xor
push
jbe
xchg
test
inc
sahf
inc
in
cdq
adc
cmp
ficomp
mov
popf
loop
mov
and
and
jle
sub
mov
mov
outs
mov
jb
jns
nop
loop
arpl
mov
in
adc
jg
jp
lock
jmp
imul
jb
stos
push
(bad)
lds
add
pop
push
or
rcr
push
push
test
xor
nop
sbb
mov
sbb
into
pop
xchg
pop
push
xor
mov
xor
mov
sub
mov
mov
mov
sbb
repnz
mov
sub
lods
xchg
adc
in
stc
mov
das
push
(bad)
push
lds
push
movs
aaa
idiv
retf
push
and
(bad)
mov
cdq
outs
loopne
fwait
xchg
fmul
pusha
(bad)
test
sbb
repnz
pop
sub
sbb
ret
xlat
aam
adc
jecxz
adc
pop
mov
mov
dec
out
(bad)
dec
mov
sahf
xchg
jnp
ss
movs
cmp
outs
pushw
data16
std
add
mov
mov
mov
cli
jno
sti
cmp
pop
dec
push
pop
jle
jb
pushf
pop
xchg
outs
add
push
add
jge
and
push
sahf
cdq
stos
inc
mov
(bad)
adc
fadd
sbb
fmul
jmp
les
cdq
adc
fsubr
sub
ror
jge
fwait
mov
xor
inc
and
scas
scas
call
push
hlt
nop
shl
push
mov
jp
sub
pop
out
fisttp
nop
(bad)
in
jns
std
and
imul
pusha
ss
outs
retf
mov
js
ins
(bad)
mov
xor
sub
add
(bad)
mov
ret
xor
dec
shl
xor
arpl
or
cs
aad
or
in
lods
out
outs
dec
dec
xchg
addr16
scas
dec
mov
xor
add
push
jecxz
out
sti
int3
bound
mov
cmp
inc
dec
outs
stos
mov
adc
sub
(bad)
es
push
addr16
mov
sbb
inc
mov
sahf
pushf
repnz
adc
gs
fbld
es
push
ins
dec
sub
scas
test
out
mov
imul
push
clc
and
mov
and
cld
cmp
cwde
xor
movs
mov
into
xchg
dec
and
scas
pop
fwait
sbb
fdivr
cli
fisttp
int
test
aas
jns
mov
outs
and
cld
or
sbb
mov
movs
jne
outs
stos
mov
(bad)
imul
or
jp
bound
jmp
xlat
call
add
push
pop
mov
pop
or
inc
popa
loopne
adc
jbe
sub
mov
fs
(bad)
sti
jp
lahf
stc
inc
out
std
push
xor
fsubr
xchg
mov
mov
es
xor
inc
scas
adc
sahf
fldcw
sti
movs
aad
sti
push
pop
aad
int
add
dec
adc
xor
cwde
pop
test
out
retf
les
adc
neg
jg
cmp
sub
cs
cld
sbb
adc
push
push
lahf
pop
pop
int
jge
arpl
mul
cdq
cmp
retf
dec
dec
scas
pop
mov
repnz
push
int
push
fnstsw
out
add
fidivr
cmp
enter
pop
(bad)
mov
xchg
int3
jge
or
sahf
mov
cwde
add
cld
movs
in
ret
mov
inc
cwde
jns
fidiv
jp
jb
inc
bound
fs
lock
fdiv
or
lahf
mov
pop
mov
jmp
fwait
jnp
fld
push
pushf
int
or
jns
fxch
dec
test
or
fdiv
xchg
stc
xor
aam
jg
inc
cmp
xchg
test
add
fiadd
pusha
out
out
pop
mov
inc
ins
mov
cdq
int3
cdq
fldcw
or
dec
dec
sti
and
and
jns
ret
push
aad
sub
sahf
pop
mov
pop
test
test
jmp
addr16
or
xor
popw
cs
inc
jmp
jne
pusha
push
mov
xchg
and
sbb
retf
ret
mov
add
sbb
nop
lods
xchg
aaa
or
fild
cwde
std
add
out
out
cdq
mov
or
push
jae
int
cmp
fwait
scas
pop
jno
cmp
retf
ins
rcr
xor
jae
shl
push
push
fnstenv
sar
imul
(bad)
in
lock
hlt
ret
ins
fdivr
iret
lock
mov
jnp
outs
add
pop
cwde
int
mov
push
xor
and
pop
pop
mov
ins
out
out
mov
into
imul
push
add
jl
xor
xchg
xchg
jg
lahf
cdq
aas
xchg
fwait
jle
sti
(bad)
fsub
popf
sbb
fs
mov
stc
and
xor
lods
in
and
stc
imul
cmps
cmps
cmp
xchg
lahf
dec
mov
add
push
not
pop
xor
cmp
pop
mov
cmps
ins
mov
jbe
ret
iret
ins
cmp
adc
pop
mov
lods
push
mov
cmp
leave
sbb
data16
cwde
xor
fxch
pop
ret
sub
mov
push
xlat
(bad)
cdq
cmp
push
out
std
dec
shr
push
call
retf
cdq
sbb
add
pop
int
repz
jo
loopne
push
xlat
and
sar
pop
mov
fst
retf
in
(bad)
pop
cmp
sbb
in
push
pop
das
pop
scas
pop
ins
and
add
cli
int3
test
ins
inc
mov
or
aas
inc
test
lds
and
xor
jae
repz
add
fdiv
mov
jecxz
sbb
mov
aas
mov
xor
movs
addr16
mov
mov
popa
cld
jge
adc
test
int
adc
ins
int
add
scas
data16
xor
add
mov
push
imul
aaa
and
pop
(bad)
push
mov
int3
xchg
data16
pop
adc
ds
cwde
xor
dec
imul
and
sub
stos
sbb
popa
pushw
imul
leave
es
mov
ret
push
xor
mov
(bad)
scas
clc
dec
jb
rol
xchg
xor
or
and
jb
xchg
push
sbb
arpl
jnp
push
mov
iret
retf
jle
fbld
out
or
pusha
retf
jl
ja
loop
daa
cmp
std
pop
cmp
data16
dec
push
or
sub
stos
or
loop
and
sub
lahf
in
jmp
out
push
pop
add
adc
hlt
int3
cmp
popa
sahf
mov
xor
add
lea
leave
and
jbe
call
fisttp
in
arpl
cdq
dec
pop
inc
mov
xor
xor
(bad)
(bad)
pop
gs
fdivr
mov
push
mov
or
loopne
sbb
inc
aas
fild
add
sti
cmp
arpl
xchg
icebp
addr16
fld
dec
xchg
pop
(bad)
andnps
fsubr
mov
shr
pop
xor
push
mov
jo
inc
repz
iret
cs
adc
pop
pusha
retf
js
or
fsubrp
push
sbb
xor
and
out
xchg
addr16
cmps
dec
ret
mov
fs
movs
mov
inc
in
xchg
out
add
or
mov
push
hlt
aaa
mov
mov
jg
or
jmp
mov
fistp
pop
imul
mov
stc
imul
arpl
push
dec
daa
inc
(bad)
mov
fisubr
add
jle
ret
mov
mov
dec
lahf
mov
jns
add
xor
jb
repnz
mov
sti
add
inc
shl
(bad)
fnstenv
into
adc
into
cmp
pop
mov
(bad)
mov
pop
adc
jns
jl
pusha
or
ret
mov
inc
popa
sub
push
cmps
ss
pop
xor
dec
in
mov
sbb
dec
dec
sub
dec
js
fadd
and
lods
repz
xor
daa
int
test
fmul
mov
in
xchg
pop
inc
xchg
adc
dec
dec
xchg
mov
xor
(bad)
iret
int
imul
and
int3
cmp
sub
xchg
xor
dec
push
cmp
dec
(bad)
mov
push
jb
jns
cmps
dec
pop
loopne
ret
sbb
xor
test
lods
cmp
mov
pop
mov
push
ror
jnp
outs
mov
daa
scas
cmp
push
arpl
jbe
loope
xchg
or
aas
add
icebp
jno
shl
xor
(bad)
mov
lea
jmp
daa
lea
test
xchg
inc
jg
enter
or
lods
out
in
mov
pop
fist
outs
pop
int3
lods
outs
ror
shl
iret
ins
jmp
shr
dec
aas
mov
in
xchg
sbb
sub
daa
add
cmps
ret
inc
test
jmp
or
xchg
pop
pop
sti
mov
jp
dec
das
sbb
mov
mov
mov
pop
leave
jnp
clc
mov
sti
fnstenv
dec
pop
add
inc
call
mov
cmp
call
repz
dec
sbb
push
inc
lods
cmp
jo
jp
repnz
xor
enter
data16
dec
sub
addr16
rcl
lea
out
call
jecxz
aaa
and
or
jbe
(bad)
call
das
fnstenv
sub
mov
cmp
cmps
push
mov
or
clc
push
and
xchg
cmps
xor
outs
push
js
ss
adc
out
adc
icebp
dec
push
xor
aad
lods
rcl
pop
jecxz
in
mov
ins
jne
cmc
fidiv
daa
add
std
ins
sbb
into
jno
sub
enter
fsubr
dec
inc
adc
addr16
or
push
add
test
leave
pushf
(bad)
adc
jno
iret
and
cmp
dec
jns
inc
lahf
push
push
int
pop
ss
xchg
mov
dec
enter
xor
xchg
jecxz
pop
out
imul
push
int3
cmps
xchg
add
enter
int
sti
mov
movs
xchg
xor
imul
imul
xchg
dec
sub
iret
push
aaa
int
popa
es
cdq
jbe
mov
fcmovne
je
imul
das
pop
mov
repz
out
int3
stos
cdq
das
and
cld
ins
push
int
cmp
sub
dec
push
and
add
cld
sbb
das
jecxz
cmp
pop
inc
out
addr16
push
retf
mov
test
mov
cmp
sbb
jns
push
inc
add
mov
push
jae
outs
add
adc
push
fistp
and
js
cmc
(bad)
mov
push
retf
pop
hlt
adc
push
(bad)
sub
jle
mov
nop
mov
ss
adc
test
jno
xchg
mov
jbe
(bad)
cdq
ss
popa
pushf
mov
shr
repnz
dec
mov
cmps
adc
or
mov
int
mov
pusha
cld
sbb
test
lods
xlat
ds
stc
sbb
neg
data16
mov
lds
adc
stc
jge
mov
out
push
aad
retf
out
add
xor
jp
mov
outs
push
mov
jecxz
fnstcw
cdq
shr
add
jle
mov
fiadd
cmp
jbe
xor
in
ins
call
mov
adc
int3
enter
shr
test
adc
push
aad
push
or
(bad)
cld
dec
pop
fmul
sub
scas
mov
pop
mov
cmc
iret
mov
inc
movs
mov
sbb
adc
fwait
xlat
pop
cli
int3
xor
jo
(bad)
cdq
cmp
int
mov
inc
outs
and
sub
fidivr
in
jae
mov
ficomp
xor
ror
out
sti
imul
cmps
cli
xor
jmp
pushf
cdq
test
inc
out
shl
(bad)
cdq
dec
jmp
and
repz
jg
cdq
aas
inc
cwde
sbb
cdq
pop
sar
pop
scas
lods
imul
cmc
imul
sub
test
sub
sub
jl
retf
ret
enter
and
(bad)
push
jno
mov
jg
cs
mov
push
movs
jecxz
cmp
dec
movs
jecxz
mov
into
mov
jns
sbb
pop
neg
fisubr
jb
inc
pop
cwde
imul
ins
test
iret
clc
sbb
iret
fidiv
sub
hlt
add
mov
push
xor
pop
lock
pop
dec
pop
xor
sbb
xlat
ins
mov
mov
addr16
push
xor
clc
int3
jle
and
push
or
mov
test
cmp
add
xor
adc
stos
cmps
(bad)
scas
pop
push
push
xor
pushf
fxam
push
out
add
movs
mov
jecxz
sar
out
mul
sti
sub
add
mov
fsubrp
pop
(bad)
stc
jle
cmps
jno
sbb
sub
add
xor
cdq
test
or
ret
add
sub
inc
push
xor
add
add
push
add
pop
add
lahf
sbb
addr16
add
jecxz
shr
call
mov
stos
add
inc
add
addr16
clc
cmp
inc
push
xchg
inc
xor
ret
push
(bad)
jge
jecxz
aaa
and
pop
inc
mov
rcr
mov
aam
sbb
push
jb
fld
pop
or
inc
fdiv
push
pop
xor
and
and
iret
fxch
fist
push
or
mov
push
rcl
add
gs
pop
scas
in
jo
outs
retf
sar
jnp
mov
int3
cdq
xchg
xor
dec
fidivr
cmp
dec
inc
aas
outs
neg
inc
rol
jmp
cmp
xchg
pop
mov
(bad)
and
retf
cmc
dec
(bad)
aas
add
ret
dec
add
jno
inc
add
or
int3
cld
inc
sbb
sbb
iret
imul
pusha
ja
cwde
jno
push
popa
imul
push
addr16
cmp
add
or
dec
fwait
mov
mov
dec
mov
test
int
imul
ss
push
add
ja
dec
add
stc
jg
retf
xchg
loopne
lds
jbe
cmps
popf
jns
mov
mov
stc
xchg
(bad)
repz
stc
or
in
jmp
xor
xor
jnp
ins
test
ror
or
stc
int3
jle
cdq
mov
fisub
loope
imul
add
(bad)
jnp
ins
pop
push
pmaxub
std
call
xor
data16
dec
jns
repz
sar
xor
retf
push
adc
cwde
mov
jecxz
mov
sti
add
adc
push
retf
ret
add
cs
pop
pop
jl
mov
adc
imul
push
mov
jmp
out
mov
jmp
test
adc
jnp
cmp
dec
mov
(bad)
jmp
neg
in
cdq
add
test
jno
inc
nop
in
(bad)
jp
into
hlt
mov
xor
lods
sbb
mov
adc
xor
cmps
pop
and
and
jecxz
push
jnp
jl
pop
mov
adc
and
and
cmp
mov
jle
mov
inc
jns
add
inc
sbb
push
ja
repz
mov
xlat
mov
popw
shl
sub
adc
fiadd
sbb
inc
sar
mov
add
xchg
lods
add
call
cdq
xor
call
push
js
sti
lea
leave
mov
push
ror
jl
icebp
cli
lock
push
mov
daa
call
or
(bad)
xchg
ins
scas
sub
popf
cmp
scas
jae
stos
lods
ds
xor
das
pusha
in
dec
mov
hlt
aaa
fidiv
nop
xor
int3
mov
xor
xchg
data16
dec
mov
fcom
pop
mov
arpl
xor
loopne
in
inc
add
xchg
addr16
aaa
push
mov
ss
test
mov
xor
shl
ins
ret
mov
sti
arpl
jecxz
in
rol
dec
xor
pop
and
(bad)
neg
(bad)
mov
ret
fbstp
stc
pusha
rcr
mov
pop
pop
scas
push
inc
xlat
jp
mov
cmps
mov
pop
ret
(bad)
sub
xor
dec
push
shl
in
inc
popa
out
sbb
jecxz
mov
int3
in
push
xor
loop
shl
fmul
cmp
aad
mov
out
outs
add
ins
dec
(bad)
cdq
cs
cwde
lods
dec
ror
cmps
add
cmps
push
bound
inc
and
fwait
mov
dec
jnp
xor
jmp
out
and
mov
mov
jle
jmp
(bad)
or
sbb
xor
ror
adc
push
mov
pop
cwde
(bad)
mov
cmps
aaa
clc
ds
sbb
or
cmps
mov
dec
scas
lods
int
in
xor
add
add
and
int
add
push
clc
test
cmp
mov
or
dec
jg
inc
xor
add
sti
xchg
push
xor
dec
add
xor
xchg
cmp
shl
inc
and
dec
je
inc
pusha
inc
fistp
movs
cs
sar
add
stos
dec
push
inc
push
push
pop
mov
shr
or
mov
add
fabs
xor
cmc
call
add
mov
xchg
(bad)
push
add
sbb
fucomp
xor
sbb
jg
add
cmps
data16
adc
cwde
fstp
cmp
call
fcomp
or
mov
xchg
fisttp
icebp
int3
stos
ror
lods
div
jle
dec
mov
pop
ret
int3
cmp
jecxz
(bad)
fwait
inc
ss
loop
icebp
fsubr
(bad)
ss
pusha
(bad)
imul
jb
and
(bad)
pop
inc
into
sub
into
pushw
add
xor
adc
cwde
add
jns
add
ror
in
jns
mov
xor
in
mov
in
test
push
movs
imul
js
push
jmp
mov
mov
push
out
imul
cdq
cmp
stos
pop
retf
add
or
push
sub
sub
icebp
js
lds
ss
cmp
outs
xor
pop
fwait
arpl
cld
add
mov
mov
shl
aam
pop
or
int3
call
repnz
mov
add
fs
in
scas
dec
cmp
(bad)
push
daa
add
or
push
fwait
sti
mov
sbb
sbb
and
ins
mov
dec
(bad)
pop
inc
adc
cmp
sbb
(bad)
jmp
inc
or
pop
iret
dec
inc
shl
push
sub
xor
jnp
lock
cmp
stos
push
sbb
xchg
aam
pushf
inc
jmp
xor
jnp
push
or
imul
add
fdivr
cmp
pop
sbb
int3
cmp
pop
sahf
sbb
xor
xor
call
and
jecxz
add
test
sub
add
add
loope
adc
fwait
ret
adc
jo
mov
sbb
push
push
xchg
jno
jbe
add
inc
mov
push
sbb
sbb
imul
nop
lock
stos
neg
popa
cmps
stos
sahf
cmp
iret
iret
xchg
sub
ja
pusha
data16
aaa
jne
arpl
enter
fldenv
dec
adc
push
xor
cmp
mov
mov
sti
and
inc
and
sbb
data16
xlat
jcxz
dec
(bad)
enter
add
mov
loopne
push
adc
int3
fcomp
popa
add
cmp
fisub
neg
cli
or
int
inc
cld
sbb
jne
movs
add
mov
idiv
jo
cdq
xor
and
push
shl
ins
data16
(bad)
mov
retf
cmp
pusha
jbe
shr
int
sbb
mov
push
int3
aad
jl
fdivr
cmps
test
xor
add
push
int3
xor
neg
sbb
mov
not
lahf
add
push
xor
sahf
pop
or
fnstenv
jnp
cmps
push
mov
jns
xchg
int3
mov
and
icebp
call
jmp
cmps
hlt
pop
test
int3
dec
int
xor
rdtsc
(bad)
hlt
and
gs
add
scas
and
or
in
push
js
pop
gs
out
ret
and
add
inc
ins
repz
inc
or
inc
ss
xor
pushf
xchg
push
jae
cmp
ficom
fisttp
arpl
jmp
data16
lods
pop
add
in
cli
int3
xor
push
sub
ret
sbb
loope
icebp
cmps
sahf
or
(bad)
inc
xor
inc
loope
sub
mov
int3
mov
jne
mov
rcr
xor
scas
add
mov
in
sub
add
jnp
outs
add
in
mov
dec
dec
fwait
dec
iret
mov
retf
sar
pop
js
repnz
lock
ror
jnp
mov
add
cmp
ins
je
(bad)
cwde
jp
xchg
int3
call
into
ret
xor
xchg
mov
jl
out
xchg
es
sbb
xor
cmp
jae
sub
lods
and
stos
cdq
das
mov
popa
cmps
aas
lea
mov
bound
mov
ins
popf
neg
cdq
mov
dec
cmp
ins
sub
aaa
daa
mov
mov
sbb
mov
(bad)
mul
mul
loop
sub
(bad)
in
or
adc
stc
dec
(bad)
fisttp
int
xor
addr16
or
fs
ja
or
inc
pop
(bad)
imul
cmp
and
ror
popf
sbb
adc
push
pusha
es
push
(bad)
dec
fdiv
enter
js
push
addr16
pusha
xor
or
in
dec
test
cwde
jns
lods
xchg
inc
pushf
mov
dec
ins
cmc
imul
mov
dec
add
push
push
aas
mov
int3
push
push
arpl
arpl
imul
ins
inc
out
sub
in
cmps
call
xlat
out
add
sti
xchg
mov
ins
gs
push
aaa
add
cmovno
aas
cmp
jo
sbb
sbb
cvttps2pi
in
outs
inc
cwde
stc
inc
dec
int3
mov
add
pusha
inc
adc
mov
mov
push
cmp
sub
neg
mov
cmp
out
daa
(bad)
pop
scas
add
dec
sbb
cmc
xlat
nop
jbe
lods
dec
je
jmp
ds
cmp
mov
repz
mov
and
and
stos
cdq
xlat
mov
cdq
pop
popa
dec
xchg
dec
mov
and
and
cmp
inc
lods
pop
xchg
push
xchg
test
or
aad
ret
and
push
add
je
(bad)
push
cmp
cli
fild
popf
lods
shl
sahf
call
mov
push
(bad)
sti
jns
jmp
data16
dec
xor
into
call
(bad)
jbe
imul
enter
(bad)
cdq
enter
mov
xor
add
pop
das
mov
push
dec
cmp
mov
inc
in
xlat
sub
mov
push
push
push
mov
mov
dec
and
push
xor
dec
cdq
daa
dec
js
movs
(bad)
loope
dec
mov
loope
sahf
rcl
sub
dec
and
mov
mov
xor
pop
mov
out
push
int3
hlt
jnp
jb
or
gs
push
jmp
sets
stos
mov
sub
cbw
add
xchg
retf
shl
jg
pop
int
push
ficomp
sbb
popf
add
cmp
nop
sti
int3
stos
pop
data16
inc
cmps
sbb
movs
mov
(bad)
jb
dec
add
jmp
ret
mov
add
dec
sahf
ret
arpl
(bad)
jae
jno
push
aad
loopne
adc
(bad)
add
or
jne
stc
mov
sbb
xor
(bad)
fsubr
sub
outs
es
mov
mov
es
sub
push
test
add
pop
xor
ins
or
int3
xchg
mov
inc
ins
movs
std
and
cli
push
cmp
jne
std
inc
test
pop
imul
xchg
(bad)
xor
mov
aam
pop
adc
or
in
mov
push
scas
pop
jp
jns
add
sub
mov
fcomp
xor
ret
not
xor
xor
pusha
cmps
out
mov
mov
outs
add
cmp
adc
js
mov
pop
das
pop
jnp
xchg
clc
mov
enter
aad
nop
lea
jmp
test
dec
xchg
mov
pusha
or
out
xchg
and
lods
call
test
pushw
sbb
adc
bound
daa
jae
add
mov
test
push
cmp
cmp
addr16
mov
add
retf
imul
adc
cmp
mov
bound
(bad)
dec
aaa
xchg
dec
sbb
jp
retf
sbb
ret
jae
lahf
test
gs
or
pop
popa
mov
fbstp
shl
rcr
and
into
jmp
dec
psrlw
sbb
(bad)
aas
pop
xchg
inc
xlat
dec
imul
pop
mov
pop
fnstcw
mov
sub
xor
and
sbb
rol
ret
dec
xor
add
mov
sub
dec
sub
lock
pop
lock
sub
cdq
in
add
sbb
xchg
add
outs
test
cmp
add
push
push
mov
test
mov
pop
xchg
pop
test
push
neg
sub
and
dec
(bad)
popf
fistp
push
adc
les
sti
add
(bad)
pop
ret
mov
pop
fnstcw
mov
jmp
xchg
jmp
push
mov
cmps
xlat
push
mov
jmp
cmp
dec
xchg
xor
xchg
push
aas
in
sbb
inc
imul
iret
or
mov
pop
add
pop
xchg
fucom
aam
xor
loopne
xchg
sti
mov
aaa
cmp
lahf
inc
ins
(bad)
pop
push
mov
hlt
jecxz
(bad)
or
aam
stos
ret
jge
sub
fcomp
inc
adc
mov
xchg
or
iret
cmp
aad
cwde
leave
bound
into
out
mov
lods
in
mov
push
add
test
add
in
jae
xchg
mov
pop
adc
adc
add
not
xor
shr
xchg
int
es
cdq
cmp
add
push
imul
fstp
xor
xor
mov
cmp
test
rcr
outs
cs
and
inc
scas
lds
or
dec
cmp
xchg
jns
ror
mov
scas
sub
push
or
sahf
in
call
inc
sbb
jg
mov
retf
fucomi
lea
pop
xchg
xchg
cmc
(bad)
scas
in
imul
adc
das
ins
dec
cmp
sar
adc
mov
dec
out
(bad)
out
fwait
inc
lods
pop
jge
xor
data16
aas
addr16
ficomp
cwde
xor
xor
iret
mov
lods
cmp
leave
push
into
inc
int
sub
cmp
adc
ins
call
inc
aad
retf
ins
pop
push
pop
dec
(bad)
stos
xlat
mov
add
imul
int3
or
dec
cdq
cmps
or
mov
mov
cli
jle
fisub
sub
or
dec
fidiv
sub
ret
sti
pop
and
xchg
mov
addr16
out
ins
or
pop
das
cmp
das
popa
cmps
neg
ja
sahf
pop
sar
in
xchg
in
stos
js
jl
loope
fwait
add
data16
xor
or
aas
(bad)
(bad)
aas
mov
dec
stos
popf
leave
test
mov
neg
call
cmp
push
xor
cmp
fcomp
cmps
mov
shr
mov
pop
mov
imul
push
(bad)
ret
jns
jl
mov
ins
lahf
imul
shl
mov
(bad)
mov
or
out
inc
or
shr
or
ja
sub
adc
dec
inc
or
and
call
xor
int3
jle
movs
sbb
shl
scas
(bad)
cli
and
push
stos
xchg
jno
loope
sub
pop
xor
mov
add
fild
data16
pop
sbb
adc
fldpi
lea
sub
fwait
clc
ja
xchg
jmp
std
jge
nop
ins
fiadd
sbb
pop
aad
shl
ja
mov
ss
or
test
xor
pusha
sub
shr
push
aaa
xor
cmp
retf
cld
xchg
test
xor
data16
mov
inc
jmp
movs
test
push
fmul
inc
test
pop
mov
add
add
in
in
push
inc
imul
jb
inc
out
jae
inc
mov
xchg
ins
mov
out
pop
and
outs
cli
inc
cli
not
sub
xchg
aaa
push
or
pusha
ins
and
pop
cdq
dec
add
imul
int
inc
xchg
xchg
push
sar
clc
mov
add
jecxz
xor
adc
or
or
cdq
mov
mov
or
repz
data16
ret
mov
cmp
es
xor
dec
fadd
pop
mov
jmp
in
xchg
push
add
xchg
lods
sbb
add
stos
cdq
gs
aas
inc
inc
jae
sub
push
jb
retf
out
dec
jae
pushf
add
xor
jb
lods
aas
rcr
jno
cwde
fidiv
adc
add
mov
fwait
sbb
imul
sbb
pop
add
cmp
mov
bound
fstp
xchg
jl
aad
inc
xor
mov
push
xchg
add
ds
xor
jns
push
add
xchg
xchg
push
shr
rcl
sti
sub
ja
repnz
ins
aaa
cmps
aad
stc
leave
mov
cdq
mov
addr16
test
pop
and
fwait
aaa
outs
outs
aad
sbb
add
in
xor
call
mov
int3
mov
test
jno
dec
sbb
xchg
cdq
ja
mov
dec
(bad)
mov
mov
cmp
dec
add
pop
and
sbb
rol
jo
repz
mov
enter
mov
xor
(bad)
sar
xor
cmp
and
movs
push
daa
cmps
and
ds
xor
ss
stc
add
scas
add
dec
jnp
std
neg
xor
daa
clc
jo
loopne
frstor
cdq
adc
es
retf
dec
retf
(bad)
ins
rcr
xor
fnstenv
ins
xchg
enter
add
into
dec
inc
dec
mov
cmp
out
inc
out
ins
adc
cmp
neg
jnp
ror
stos
test
push
addr16
jecxz
or
push
add
jl
sub
(bad)
out
mov
push
fld
xor
xor
ins
neg
sbb
sbb
jle
ins
stc
jne
(bad)
sub
mov
cmps
pop
lds
inc
mov
inc
jmp
add
xor
adc
push
dec
add
pop
js
retf
add
das
cmp
jmp
fdivr
sub
in
pop
lock
cmp
push
jmp
rol
loop
xor
leave
scas
push
es
out
xor
cmc
push
in
mov
cmp
pop
popf
enter
push
push
adc
stos
repnz
loopne
cdq
in
dec
out
call
and
mov
loopne
sub
repz
xchg
pop
add
ja
pushf
inc
test
popa
in
(bad)
into
jae
mov
push
test
mov
mov
(bad)
push
inc
mov
daa
xlat
jmp
mov
not
outs
shr
jb
ret
clc
dec
jge
xor
xor
out
jmp
sbb
push
nop
ins
xchg
lods
enter
xor
in
sub
xor
repnz
cli
int3
push
pop
int
jecxz
out
pop
or
cdq
push
sub
imul
sbb
pusha
es
xchg
data16
(bad)
and
push
push
sbb
pusha
es
jle
push
mov
add
test
int3
and
mov
adc
add
sbb
adc
mov
rcl
ror
iret
pop
imul
mov
int
test
stos
test
sub
lods
mov
mov
pop
cwde
fdivr
repnz
jl
inc
inc
retf
add
add
pop
add
sbb
pop
xchg
jno
out
jle
push
push
jnp
fdivp
jp
mov
jno
clc
cmp
jl
fisttp
(bad)
arpl
lds
test
int3
push
(bad)
lock
es
sbb
aam
retfw
scas
mov
pop
mov
cli
retf
ficomp
(bad)
gs
push
imul
retf
mov
mov
adc
(bad)
jecxz
test
out
retf
ja
sbb
push
int3
or
add
ret
ficomp
add
xchg
xor
cmova
leave
xor
je
(bad)
xor
sbb
cmp
push
xor
arpl
enter
lock
jb
cmp
inc
fwait
inc
pop
cmps
fwait
push
and
sar
pop
jno
cmp
push
lds
cdq
adc
retf
push
mov
mov
aaa
sbb
jns
push
ret
xor
scas
(bad)
iret
popa
stos
shl
jp
pop
sbb
xor
dec
add
xor
xor
cmp
into
daa
mov
sbb
scas
xchg
aad
mov
dec
cmp
cwde
lods
mov
dec
mov
icebp
jl
in
dec
add
sub
sub
and
mov
xchg
or
call
mov
and
addr16
and
mov
inc
in
out
and
int3
fcom
xchg
into
and
mov
pop
push
sub
loop
mov
nop
(bad)
and
mov
jl
add
sub
mov
mov
and
clc
mov
mov
mov
(bad)
idiv
jecxz
lods
lahf
jae
aad
es
sti
stos
je
jmp
sub
jmp
xor
sbb
lods
movs
shl
pop
je
pop
(bad)
mov
into
dec
test
jns
push
or
dec
(bad)
lahf
sbb
cdq
repnz
data16
adc
sbb
pop
icebp
repz
clc
std
push
push
daa
addr16
out
popa
(bad)
and
fld
mov
jle
dec
cmp
cs
xchg
push
mov
mov
or
sbb
(bad)
jmp
mov
mov
int3
(bad)
loopne
or
loop
pop
inc
sub
push
ds
sub
aad
cmps
xor
es
retf
jb
repnz
in
push
lods
xchg
std
fild
or
lods
pop
cmps
and
mov
push
shr
std
call
jl
push
adc
push
add
(bad)
dec
ins
and
movs
mov
cwde
jge
jl
cmp
int
xor
test
add
mov
xor
pop
xor
add
dec
xchg
fnsave
rol
fimul
pop
push
aas
add
mov
mov
mov
ror
mov
sar
int3
bound
jge
jo
call
push
aaa
inc
jl
lds
cmc
add
cmc
std
sub
das
or
sub
sbb
lods
cmp
scas
pop
popf
push
addr16
pop
ror
aad
cmps
jmp
popf
pop
adc
repnz
mov
mov
ins
popf
pop
adc
arpl
cld
dec
jne
das
inc
(bad)
out
pop
loopne
daa
cwde
cmp
iret
test
leave
push
or
stc
push
mov
ins
iret
cwde
lahf
jl
sub
or
iret
sub
xchg
push
ins
das
add
add
scas
enter
fidivr
int3
add
stos
xchg
dec
mov
add
in
push
call
and
push
ss
rol
xchg
aas
push
push
aad
pop
and
push
xlat
lods
imul
nop
cmps
pop
cmps
lds
fisubr
push
scas
lea
pop
adc
into
scas
retf
mov
cmp
jnp
popf
in
mov
aaa
fs
loopne
test
pop
add
cmp
int
out
mov
add
sti
stc
jno
mov
adc
mov
xchg
push
call
loopne
add
cmp
mov
or
or
and
lahf
inc
adc
in
cmp
xchg
xor
bound
dec
cs
into
dec
sbb
sub
cdq
jno
cld
(bad)
lahf
shl
test
cmps
mov
sbb
js
dec
lock
mov
cmc
jle
jg
in
xlat
imul
xor
sub
xor
cmp
push
cdq
addr16
setp
ds
pusha
pop
adc
mov
xchg
add
popf
jmp
sbb
ja
lahf
out
dec
ror
add
popf
xchg
movs
icebp
fild
out
mov
lods
sub
outs
arpl
pop
sub
arpl
push
push
test
imul
push
jmp
scas
jns
push
inc
fistp
out
(bad)
or
int
xchg
mov
out
cdq
shl
dec
ror
movs
pop
movs
lods
sbb
imul
adc
fcomp
cwde
pop
mov
pop
mov
pop
neg
fnstcw
lea
icebp
call
jns
lock
aas
or
jle
(bad)
in
out
(bad)
in
hlt
imul
xor
xlat
clc
mov
in
pop
add
cmp
mov
loopne
out
jne
pushw
xchg
out
pop
or
popf
xor
cmp
imul
ins
jle
sub
js
fild
mov
sbb
add
cmc
sahf
adc
retf
fwait
pop
jl
das
out
push
jmp
push
mov
sbb
iret
sub
add
xchg
cdq
adc
imul
and
pusha
(bad)
cdq
dec
mov
popf
cwde
mov
int
inc
shl
leave
stos
je
xor
mov
dec
iret
int3
ret
dec
daa
out
xchg
cwde
outs
nop
and
(bad)
jmp
or
or
test
fiadd
sub
pop
sar
xchg
cmp
pop
fstp
bound
shl
add
cmp
je
inc
mov
hlt
retf
or
mov
sbb
(bad)
cli
xlat
mov
test
arpl
rcr
mov
int
test
mov
and
out
cwde
add
xchg
call
stc
seto
arpl
sub
into
test
ds
mov
mov
sbb
outs
or
cmps
cmp
jb
ins
and
int3
mov
push
fs
jae
loope
push
jnp
and
inc
scas
dec
aad
xor
xchg
adc
in
pushf
push
sahf
xchg
push
call
push
(bad)
jns
into
fmul
inc
sar
mov
adc
inc
lock
cld
jbe
imul
add
daa
scas
sbb
in
fwait
cwde
add
lods
out
sar
fxch
fwait
push
cmp
in
cmp
inc
not
sub
neg
retf
scas
in
aaa
add
in
cmp
(bad)
aad
rcl
mov
push
mov
and
test
lods
xchg
xor
into
addr16
(bad)
add
test
je
add
dec
push
xor
add
scas
fst
shr
fild
mov
in
xor
or
and
sub
xor
fld
jns
pop
xor
mov
xor
data16
add
pop
fnstsw
fwait
add
and
pushf
fst
push
cdq
jmp
or
jns
sbb
addr16
adc
add
call
iret
arpl
mov
dec
jle
test
mov
movs
shl
data16
add
jae
repz
or
leave
jo
push
xor
pop
loopne
jns
gs
mov
in
cmp
pusha
(bad)
jno
adc
sbb
int
shl
cmc
or
or
inc
xor
add
mov
in
xor
inc
jge
popa
rcr
add
data16
in
gs
or
push
pop
jne
ret
int
push
outs
bound
jae
je
repz
or
inc
xchg
popa
nop
xor
div
cmc
cmc
lods
arpl
fwait
gs
lds
xchg
ins
pushf
fnsave
or
push
inc
mov
lods
sbb
sub
adc
dec
das
(bad)
fwait
call
jg
add
sub
xor
fdiv
jb
jns
ror
call
stos
xchg
lahf
xchg
pushf
add
(bad)
ret
adc
mov
into
bound
push
xor
test
arpl
mov
mov
pushf
setae
rol
bound
xchg
call
xchg
pop
popf
mov
sub
mov
fucomip
shl
ss
scas
into
adc
int3
shl
into
movs
cmps
fst
ret
push
fnstcw
loopne
pop
mov
add
add
das
jns
int
add
cdq
and
not
retf
pop
pop
cli
fs
mov
cdq
das
mov
ffreep
shr
cmp
scas
jg
pop
sahf
sbb
sub
hlt
jnp
cli
pop
jbe
sbb
pop
mov
ror
repnz
ror
push
add
movs
add
std
iret
lods
and
inc
cmp
and
das
aas
add
or
sti
xchg
xchg
icebp
(bad)
push
add
pcmpgtd
mov
push
pop
mov
jle
aaa
mov
scas
mov
ss
test
es
cmp
fisttp
sbb
cmp
mov
popa
pushf
mov
shr
gs
inc
cwde
jns
push
int
int
cmp
cwde
xchg
cmp
sub
push
or
ss
add
je
mov
mov
out
int3
jb
push
sbb
sahf
js
and
icebp
fwait
(bad)
popa
es
retf
jge
gs
or
int3
adc
pop
lea
or
std
pushf
fwait
movs
jmp
lea
loope
jns
add
cwde
sbb
inc
cwde
sub
and
mov
push
lds
and
call
sub
sub
xor
and
dec
push
xchg
xchg
sub
pop
xor
lods
enter
and
dec
aaa
dec
push
add
mov
cmps
adc
add
popf
pop
sub
(bad)
repz
arpl
dec
ficomp
jp
scas
pop
adc
sub
add
shr
cwde
add
sbb
mov
pop
jp
push
das
pop
push
out
xchg
xchg
mov
hlt
cdq
adc
bound
cmp
mov
cmp
ins
jl
sahf
sbb
cmps
cmp
inc
cwde
(bad)
clc
jge
les
or
fidiv
data16
dec
cld
mov
outs
int
in
sti
sbb
dec
not
pop
into
mov
outs
xchg
inc
jnp
cmc
leave
xchg
imul
add
jb
mov
lahf
xor
and
pusha
in
bound
xchg
add
fcom
pusha
adc
gs
xor
mov
lds
fnstenv
cmp
stos
les
cmp
(bad)
dec
in
jmp
(bad)
test
sbb
arpl
cdq
xor
adc
pop
xor
int
(bad)
idiv
pop
leave
push
dec
cmovle
add
mov
int3
dec
add
ins
ins
cmp
xor
popf
add
ret
int3
add
push
inc
or
nop
mov
xchg
add
sti
or
add
sub
adc
imul
in
xlat
xor
pusha
test
fnstenv
add
scas
out
xor
es
mov
ins
fild
mov
mov
add
jecxz
pop
mov
sub
dec
sahf
add
jno
push
call
and
fld
and
cmp
fxch
pop
test
call
popa
mov
xchg
cmps
inc
shl
clc
pop
mov
push
mov
add
sub
push
aas
out
xor
mov
push
mov
cmp
and
mov
cmps
pop
push
aam
cdq
test
xor
sbb
push
(bad)
fs
adc
sbb
cwde
xor
jle
aas
out
xor
fnstcw
cmp
lea
xchg
imul
shl
jmp
add
in
push
movs
int
aam
pusha
add
mov
js
add
push
addr16
mov
push
xor
cmp
cwde
cmp
cmc
mov
ins
jbe
addr16
(bad)
fxch
inc
sbb
add
fs
mov
xchg
ror
in
xor
dec
iret
ins
test
add
das
test
cmp
pop
iret
inc
mov
sbb
(bad)
add
and
cmp
add
pushf
fnstcw
add
add
in
fs
pop
adc
mov
or
(bad)
push
lea
iret
int3
or
jge
jge
cmc
cdq
mov
cmp
int3
cmp
add
add
shl
xor
sub
cs
xor
dec
jge
aaa
mov
cdq
(bad)
cdq
xchg
xor
(bad)
out
(bad)
out
xor
jno
cmps
fwait
sbb
ins
(bad)
cmp
lahf
inc
push
out
xchg
fmul
icebp
icebp
in
jge
dec
mov
aam
test
jns
sub
or
mov
mov
int3
leave
sbb
fxtract
sbb
fild
pop
(bad)
addr16
or
mov
fimul
and
or
cmps
mov
add
mov
retf
mov
jp
movs
int3
xor
(bad)
jp
lock
push
imul
xor
mov
mov
jle
mov
xchg
sbb
xor
pusha
div
ins
and
int3
es
stc
jns
enter
fild
mov
repz
sbb
cld
add
outs
and
or
inc
sub
sub
(bad)
test
sahf
xchg
push
dec
popa
es
cdq
cs
mov
inc
sub
push
fsub
jne
repz
mov
aas
pop
xor
add
or
xor
mov
dec
enter
xor
pop
lods
sbb
addr16
retf
xchg
fstp
push
add
arpl
into
(bad)
(bad)
inc
mov
test
xchg
pop
pop
lods
into
hlt
or
pop
sub
dec
dec
inc
add
adc
in
lds
addr16
into
or
(bad)
sub
out
jnp
cmp
adc
push
cdq
push
aaa
jae
add
inc
out
fldcw
imul
xor
int3
inc
add
mov
int3
fdiv
repz
retf
ins
mov
call
popa
leave
pop
jmp
fs
loopne
daa
adc
push
add
cld
mov
jb
pop
xor
in
or
(bad)
std
jmp
add
push
test
pop
xchg
adc
pop
xor
fldenv
add
xor
lahf
fst
xor
cwde
pop
push
xor
lods
aad
lock
pop
mov
push
pop
mov
sub
loopne
shl
add
cwde
int
ds
fcomp
jnp
or
popf
jge
je
mov
leave
add
das
dec
push
retf
clc
int3
add
jecxz
push
and
dec
int
mov
xor
es
out
es
inc
pop
(bad)
xchg
push
data16
cmc
call
add
arpl
dec
adc
iret
dec
and
sbb
(bad)
push
outs
in
cmp
outs
inc
aas
dec
xor
data16
xor
add
movs
add
push
js
push
pop
(bad)
mov
xchg
sub
call
out
add
js
jg
ins
idiv
int
aaa
mov
or
add
mov
int3
cdq
int
test
popa
mov
mov
mov
dec
pop
das
fdivr
shl
aas
mov
test
add
dec
jb
shl
pop
nop
xchg
xor
mov
mov
data16
pop
ret
loop
mov
pusha
inc
iret
dec
lods
sbb
lods
sbb
inc
aaa
repz
pushf
inc
call
mov
xchg
cmp
add
lods
sbb
xor
adc
sub
jl
and
je
add
add
jle
mov
fld
retf
fst
lods
into
hlt
ret
xor
(bad)
jnp
outs
add
imul
(bad)
xchg
pop
and
(bad)
xor
cwde
lods
sbb
mov
push
aaa
repz
jno
dec
scas
data16
push
jb
jbe
fwait
out
ss
pop
int
cmp
(bad)
mov
fimul
fnstenv
or
in
retf
jmp
push
xor
xor
jg
stc
xor
cdq
jns
rol
pop
je
adc
push
xor
jmp
mov
movs
addr16
sub
test
sbb
shr
sbb
jb
xchg
adc
sahf
xchg
in
cmp
and
pop
pop
cmps
mov
lahf
pop
out
cdq
ins
xchg
jb
push
fnstsw
pushf
popf
fdivr
neg
push
cdq
stos
mov
dec
fwait
mov
call
inc
dec
mov
ins
cmps
adc
mov
add
sbb
push
jb
push
cmp
sbb
pushf
mov
pusha
xchg
sub
(bad)
and
sbb
fild
ss
aaa
push
inc
pushf
shl
enter
cmps
retf
fpatan
inc
lahf
jge
inc
cmp
jns
mov
mov
je
sub
hlt
push
repnz
out
mov
fscale
dec
xor
jg
xchg
popf
lea
mov
outs
mov
mov
xchg
dec
xor
addr16
xchg
push
out
add
push
fisub
iret
mov
cmp
loopne
inc
out
ror
in
and
fstp
test
pop
xor
imul
pop
test
fstp
shr
inc
xor
aas
shr
add
cdq
xor
add
jmp
bnd
push
ret
xor
stos
cdq
aas
dec
shr
out
xor
cmp
add
data16
int3
or
pop
bound
lock
in
ja
push
mov
das
mov
sahf
sbb
jbe
xchg
call
out
enter
jnp
int
cmp
add
cmp
xor
xchg
ss
retf
bound
add
dec
fwait
mov
or
(bad)
or
fs
mov
aaa
ret
pop
jge
fistp
add
dec
ss
sbb
sar
xchg
int
dec
cdq
fistp
jne
push
push
xchg
outs
fnstenv
mov
jmp
mov
add
out
inc
mov
pop
repnz
aas
cmp
fist
fldcw
add
int
xor
add
call
outs
dec
xor
cdq
int
nop
mov
(bad)
sti
xchg
jne
and
scas
mov
aam
arpl
sahf
dec
jle
dec
scas
fwait
into
xlat
stos
popf
cmc
stos
scas
data16
enter
stc
mov
xor
add
addr16
xor
push
div
(bad)
movs
dec
mov
mov
mov
mov
loope
cmp
repz
and
add
sbb
cmp
pop
cmp
mov
in
xlat
jne
pop
xlat
jle
int
inc
add
xchg
inc
adc
push
retf
dec
and
dec
test
mov
xchg
call
inc
ret
sti
add
add
jle
xor
sbb
out
mov
mov
int3
bnd
adc
or
jecxz
add
xor
ss
mov
arpl
adc
ss
(bad)
test
add
adc
fistp
jge
int3
fadd
scas
jnp
jmp
or
popf
mov
sbb
into
clc
or
jne
jo
xor
pop
rol
pop
push
inc
mov
and
adc
sbb
in
mov
jae
outs
(bad)
test
mov
out
mov
mov
mov
dec
push
sar
and
(bad)
add
add
in
push
sbb
and
pusha
out
inc
jecxz
xchg
lods
jnp
dec
mov
mov
add
add
and
nop
ror
imul
ins
push
push
data16
iret
ins
jp
popf
or
pop
pushw
mov
mov
xchg
mov
mov
push
repz
add
and
sbb
in
sub
xor
add
iret
sahf
xor
outs
ret
cwde
jge
rcr
scas
jmp
mov
dec
movs
mov
mov
int3
into
pop
repnz
in
es
call
cmps
shr
mov
jae
outs
int
sbb
fistp
dec
scas
jg
cwde
add
mov
jns
stos
cdq
out
sti
mov
dec
aam
add
lahf
fst
pop
add
(bad)
add
out
add
jae
retf
jle
jl
pop
sbb
call
dec
ja
sub
jbe
and
cdq
xchg
call
add
sub
mov
pop
xor
lahf
fstp
sub
add
(bad)
fiadd
addr16
(bad)
cdq
or
aad
xor
xor
loopne
in
cwde
xor
fild
call
cwde
out
sahf
cmp
out
sbb
cwde
add
in
sbb
addr16
xor
push
(bad)
xor
push
int3
xchg
add
nop
mov
stc
ins
mov
fidivr
mov
push
xor
xchg
or
add
and
mov
cmp
add
push
int
cwde
jge
pusha
mul
jb
iret
cmps
mov
and
xor
or
xchg
pop
add
add
(bad)
mov
jmp
pop
mov
jb
pushf
popf
xor
lock
lock
into
inc
xor
add
addr16
out
(bad)
xchg
iret
jae
xor
shr
push
jae
add
enter
lds
and
or
inc
cld
xchg
popa
cmps
ins
call
xor
mov
inc
hlt
fwait
les
or
jne
inc
xor
add
iret
pop
xor
mov
or
cdq
mov
stos
xchg
add
cmps
jmp
dec
push
pop
icebp
xchg
in
or
int3
ror
int3
jl
adc
pop
int
dec
int
sub
add
mov
inc
xor
cdq
add
inc
outs
fldl2t
or
scas
inc
push
pop
inc
idiv
shr
jnp
out
pop
sar
xor
fldcw
jecxz
outs
int
dec
ret
mov
cmps
ins
mov
int
pushf
fnstcw
sbb
and
fprem1
scas
sbb
shr
int
adc
pop
test
adc
cld
not
dec
add
adc
imul
pushf
ror
std
mov
in
mov
jecxz
cdq
lods
data16
pop
ror
xor
inc
imul
stos
xlat
es
sub
and
mov
sbb
xchg
into
data16
xor
sbb
push
mov
sub
xor
adc
sbb
cmp
xchg
sub
xchg
cld
aas
pop
mov
retf
xchg
neg
sub
inc
adc
and
pop
add
fwait
jo
imul
cmc
je
test
add
and
sbb
sbb
stos
jns
pop
xor
xor
nop
xchg
ror
add
(bad)
div
sbb
jae
rcr
call
xor
hlt
int3
sahf
test
stos
cdq
das
add
mov
mov
sbb
movs
add
push
ds
in
(bad)
test
fnsave
jne
jae
outs
into
nop
std
pop
cli
mov
sub
jb
jg
jge
invlpg
or
arpl
cmc
shl
into
in
test
push
call
or
sti
push
shr
hlt
fwait
push
aas
xchg
int3
sbb
pop
xchg
outs
mov
out
pusha
out
push
aaa
add
(bad)
mov
adc
loope
mov
cdq
outs
popa
dec
xchg
or
ins
call
fwait
jge
sub
xchg
pushf
jnp
inc
div
sahf
mov
stc
jmp
(bad)
jmp
mov
gs
es
int3
inc
shr
cmp
repz
cwde
xor
adc
out
leave
cdq
sbb
cmps
addr16
push
dec
or
pop
pop
scas
in
and
movs
add
add
add
lock
adc
xor
push
and
xchg
div
mov
test
repz
xor
inc
push
xchg
sahf
fst
scas
sbb
xor
iret
cwde
jmpw
cdq
out
inc
imul
and
adc
xchg
(bad)
cdq
push
int
sbb
or
(bad)
pop
add
and
movs
aam
add
push
and
sbb
fild
and
inc
imul
cmps
pop
mul
fcomp
push
jp
call
sbb
out
adc
cdq
sbb
mov
int3
pop
loopne
sbb
cmp
imul
add
and
repz
clc
add
sbb
xchg
sti
jae
sub
xor
cdq
jge
pusha
(bad)
in
add
data16
inc
add
jae
repz
cld
cld
sub
add
or
js
ror
xor
xor
xor
ins
jp
pop
mov
fmul
xchg
xor
add
iret
movs
aas
sub
cmp
inc
ins
add
inc
xor
sub
add
xor
idiv
add
xchg
inc
jbe
ja
push
mov
enter
imul
dec
shl
cdq
dec
pop
int
cwde
mov
mov
mov
mov
add
mov
movs
int
cmp
sbb
test
lahf
scas
jg
lahf
pop
push
cwde
or
sbb
xor
cmp
sub
pop
jbe
xchg
dec
xlat
add
fwait
into
outs
cmp
xor
xlat
add
or
mov
cwde
sbb
daa
mov
and
dec
add
sbb
pop
int3
lahf
dec
cmp
pop
es
lea
cmp
mov
mov
mov
mov
daa
inc
adc
fisttp
dec
xchg
cwde
mov
inc
in
cwde
dec
xchg
jmp
fsubr
nop
fisttp
jmp
xor
lahf
dec
mov
stos
or
add
sbb
test
mov
dec
les
stos
xchg
bound
inc
ficomp
popf
rcr
mov
mov
je
leave
cld
jnp
(bad)
imul
adc
sbb
retf
xor
iret
sbb
pushf
mov
push
gs
mov
xor
pusha
mov
pusha
inc
jmp
std
es
dec
loop
jns
pop
out
(bad)
mov
fst
data16
shl
pop
add
lds
and
mov
jl
pop
(bad)
je
jl
pop
leave
jl
popa
out
add
cwde
jns
xchg
dec
sbb
fld
sbb
or
(bad)
push
cwde
sbb
ins
pop
test
push
mov
adc
mov
enter
call
movs
cld
(bad)
cmp
scas
mov
mov
mov
mov
cmps
xlat
test
inc
popf
test
xor
fdivr
lods
pusha
adc
fcom
cmp
sub
add
mov
push
pop
mov
pop
stos
cdq
pushf
add
aas
cmp
add
mov
rol
call
dec
push
xor
popf
push
popa
shr
add
sti
jbe
addr16
ins
mov
add
lods
sub
cmp
jmp
setle
xor
sub
int3
add
hlt
int3
sub
int3
inc
jae
int
daa
mov
mov
push
pop
data16
add
shr
xor
push
ret
pushf
pop
add
das
add
mov
jae
outs
push
ss
ret
int3
popf
(bad)
data16
shl
stos
cwde
jnp
mov
lods
data16
int3
xchg
pop
add
sub
jns
js
sub
int3
mov
pop
jo
adc
or
sub
or
xor
lods
mov
lods
lods
add
pushf
cdq
pop
add
cwde
pop
xor
jle
shl
mov
and
cdq
in
test
mov
pop
add
xchg
add
call
repz
push
jmp
jae
data16
and
mov
sbb
sti
int3
cmp
or
sbb
stos
lea
test
into
xchg
dec
add
aad
dec
iret
in
hlt
je
cmp
xor
call
mov
fdivr
ins
int
xor
outs
pusha
pop
jno
adc
jb
mov
or
sub
cdq
jno
xor
das
call
add
loop
mov
cmp
jl
rol
add
mov
pop
jmp
cmps
fstp
mov
add
add
xchg
dec
add
cdq
aas
cdq
pop
jnp
sti
dec
ds
jl
lods
add
sub
push
pop
pusha
xchg
adc
sub
int3
inc
cwde
sbb
cdq
inc
cwde
jmp
push
bound
lods
fiadd
sahf
(bad)
cdq
int3
pop
enter
xor
jl
and
xor
shr
xor
push
(bad)
hlt
mul
jl
fistp
cmp
shl
cmp
adc
rcl
cdq
cmp
fwait
movs
popf
fwait
les
lds
sti
int3
repnz
cwde
pop
lds
jle
dec
mov
lods
push
mov
imul
push
cwde
int
pop
inc
imul
mov
mov
jmp
fdivr
jne
push
xor
ins
es
add
pop
xor
or
jmp
xchg
iret
data16
mov
popa
jb
push
mov
out
cdq
ins
xchg
sub
nop
stc
and
clc
jge
inc
xor
int
ss
enter
xor
ins
mov
dec
fwait
in
and
(bad)
push
jbe
ja
push
xor
dec
xor
data16
xor
sbb
push
mov
(bad)
inc
fmul
scas
(bad)
xor
outs
das
sbb
sbb
outs
int
pusha
popw
int
iret
dec
adc
xor
pushf
shr
pop
je
adc
fcomp
data16
cmp
jmp
in
add
call
mov
inc
add
and
xchg
fs
cli
jns
pop
aad
or
or
sti
adc
neg
push
loop
sbb
lods
pop
add
imul
mov
push
test
aam
cs
loopne
add
stc
cdq
outs
push
addr16
xchg
pop
mov
cmps
sahf
out
xlat
cmp
mov
and
sub
int3
(bad)
ins
out
push
jne
shl
add
inc
mov
pop
int
and
les
xor
cmps
push
inc
add
dec
into
enter
add
out
add
mov
xor
mov
stc
mov
call
mov
sbb
cdq
push
aaa
xor
cmp
lods
add
fild
cwde
test
in
or
add
cmp
pushf
cdq
xor
ret
out
sbb
inc
ds
cld
pop
out
lea
pop
(bad)
loop
repz
movs
out
push
pop
add
fsub
jno
push
cdq
test
mov
iret
mov
jb
xor
fwait
cdq
mov
ja
int
mov
scas
add
retf
cli
rcl
iret
iret
cmp
lods
add
mov
push
pop
imul
into
xor
int
push
xor
in
scas
or
mov
sub
ss
ror
dec
rcr
jmp
fidiv
mov
sub
add
(bad)
mov
fmulp
mov
(bad)
jno
push
fld
add
out
xor
data16
mov
xor
out
xor
cmp
add
lods
sbb
cwde
xor
hlt
int3
test
(bad)
cmp
je
outs
lds
out
mov
sbb
add
daa
add
aaa
int
xor
sub
pop
shr
xor
or
sbb
inc
sub
mov
mov
in
jecxz
add
dec
jp
add
pop
repnz
mov
dec
cld
jbe
clc
jle
daa
(bad)
jne
pop
mov
imul
int
(bad)
cmp
cmp
(bad)
fld
pop
mov
push
ins
or
mov
stos
call
mov
dec
mov
into
call
mov
cmps
xlat
test
cdq
add
rdpmc
in
test
add
stos
xor
call
out
add
ins
pusha
call
lods
sbb
add
mov
jae
addr16
fsub
idiv
mov
adc
sub
int
push
jae
add
int
cmps
pop
pop
xor
xor
mov
inc
cwde
add
xor
add
js
add
jecxz
mov
jbe
inc
jae
retf
push
(bad)
push
cmp
fwait
sbb
inc
repz
add
pop
fnstsw
xchg
mov
clc
push
mov
shl
add
addr16
push
int
call
popfw
jecxz
inc
and
cmp
sahf
pop
test
outs
pop
in
rol
add
inc
add
sbb
dec
imul
mov
ja
cli
call
mov
mov
add
shr
dec
or
int3
pushf
pushf
rcr
iret
int3
ins
mov
int3
enter
push
add
shr
fnsave
int3
and
loop
(bad)
lock
push
mov
stos
test
jae
data16
add
push
and
jb
inc
fwait
popf
dec
add
cmps
(bad)
mov
xor
xchg
jnp
sahf
xor
cmps
mov
mov
push
out
cdq
lds
add
ss
pushf
xor
int
push
jae
add
xrelease
sar
clc
sbb
mov
mov
out
js
shl
push
jae
iret
lods
pop
add
in
mov
and
stos
movs
out
rol
inc
int3
cmp
ins
mov
pushf
test
data16
ins
push
stos
cdq
sbb
jno
push
pop
rcr
std
cmp
jmp
fld
call
xchg
gs
data16
repz
fs
ja
push
imul
call
into
mov
lods
sbb
jecxz
jne
stos
je
or
out
dec
fwait
pop
fcomp
xor
repz
pop
mov
push
pop
mov
stos
jno
pop
sar
int
aad
inc
add
cmps
add
jecxz
push
or
stc
int3
push
addr16
fidiv
inc
frstor
div
dec
sub
jmp
add
adc
out
(bad)
int
es
call
sub
int
xor
data16
ja
push
(bad)
or
cmps
fnstcw
imul
int3
cwde
xor
ins
cmps
push
addr16
cdq
popf
mov
mov
fadd
int3
cmp
clc
jp
(bad)
jp
out
inc
adc
mov
ja
pop
lock
adc
out
dec
inc
lods
sbb
push
shr
inc
mov
shl
or
mov
pop
daa
shr
jmp
or
push
shl
stos
iret
ins
push
jmp
push
jmp
xor
sub
in
ins
shr
test
data16
ins
data16
or
add
lea
call
pop
sbb
into
dec
mov
rol
and
add
cdq
push
mov
dec
pop
add
sbb
rcr
mov
call
pop
pusha
int
ret
int3
outs
inc
repz
int3
shr
dec
in
mov
pushf
sbb
ins
scas
ror
imul
jl
add
sub
xor
dec
mov
sbb
push
push
add
cwde
cmp
add
and
push
jl
lds
and
mov
dec
mov
fwait
jmp
mov
push
rcr
or
adc
xor
adc
push
popa
cmps
cmp
addr16
xor
jo
jae
jae
push
add
push
xor
pop
cmp
xchg
repz
adc
out
xor
outs
shr
jae
pushf
neg
sbb
pushf
add
add
mov
cdq
data16
repz
popf
test
cdq
ds
aaa
mov
mov
push
pop
dec
dec
xor
add
jmp
test
inc
cwde
jmp
push
or
cmp
mov
add
(bad)
cmps
fnstenv
jae
data16
xor
pop
mov
push
push
add
mov
jge
mov
push
ds
push
inc
add
lods
sbb
pop
les
push
cli
jns
mov
dec
sbb
arpl
addr16
push
cdq
data16
push
xor
shr
jp
xchg
mov
pop
mov
outs
jne
stos
fxch
call
push
shl
adc
mov
cmp
mov
cmp
daa
mov
push
mov
sbb
mov
inc
into
addr16
ds
data16
cdq
xor
cmp
pop
xchg
push
add
add
jmp
dec
xor
aam
retf
cmp
lea
in
out
xor
cdq
jne
xor
sub
xor
out
xchg
mov
jne
sbb
mov
popa
out
js
inc
mov
jne
pop
xor
or
icebp
mov
popa
mov
fsubr
ins
dec
or
lods
add
into
dec
sar
xor
cli
int3
bound
and
int3
xor
retf
jmp
pusha
out
shl
cwde
data16
xor
(bad)
shr
cdq
int3
cdq
sbb
sar
stc
ins
cmps
sbb
(bad)
fcmovne
push
fcmovnu
cmp
cmp
inc
add
test
nop
iret
data16
add
jnp
push
ins
push
ins
outs
add
pop
sub
adc
push
das
pushf
jnp
push
(bad)
lock
sti
int3
and
(bad)
xor
push
data16
push
pop
xor
ins
data16
sub
sbb
sbb
arpl
jae
dec
jg
cmp
add
sbb
push
neg
mov
je
int
cwde
jmp
mov
xor
mov
shr
jl
rcr
es
ja
push
xor
pop
push
int
mov
adc
out
hlt
int3
mov
int3
push
and
inc
jecxz
daa
add
add
pusha
cli
ds
fbld
in
mov
int3
sub
int
xor
xor
cdq
add
jg
mov
inc
jbe
sbb
push
adc
jb
loop
int3
pop
cli
int3
repnz
pop
pop
xor
xor
xor
ds
in
xchg
call
lahf
pop
add
pusha
(bad)
(bad)
or
jne
push
ss
inc
mov
cmp
ror
movs
pushf
cdq
xor
xchg
push
aaa
mov
int3
int3
pop
xor
add
cmp
ins
mov
xor
arpl
xchg
xor
les
xor
lock
leave
mov
outs
test
cwde
xor
inc
xchg
shl
stos
xor
xor
outs
int
xor
ins
mov
xor
sti
int3
jb
(bad)
into
add
xor
mov
xor
jo
outs
lds
repz
cmp
or
mov
jno
dec
into
cwde
aaa
int
sbb
jns
pusha
dec
ret
mov
sbb
xchg
xor
jbe
lahf
cdq
dec
add
or
shl
mov
adc
repz
sub
or
es
fisub
xchg
mov
mov
push
outs
data16
adc
mov
sub
cdq
jne
data16
cmp
mov
popf
add
pushf
cdq
(bad)
push
in
outs
add
inc
inc
add
imul
into
dec
inc
into
test
es
xor
ds
sub
cdq
sbb
fcom
cmc
push
cld
mov
or
xor
data16
movs
add
ins
call
int3
outs
test
clc
int3
mov
scas
mov
add
ss
xor
test
add
inc
sbb
pop
ins
jbe
add
sub
mov
mov
clc
dec
clc
shr
dec
aas
mov
aad
retf
lods
mov
(bad)
sbb
or
popf
mov
dec
sub
add
ret
cld
gs
xor
mov
fadd
mov
push
cwde
cmp
jmp
int
or
mov
in
lds
lds
scas
popf
lock
sbb
daa
test
add
xor
int3
mov
sub
xor
test
push
ret
outs
fdivrp
jg
jmp
int
int3
outs
add
adc
movs
fwait
mov
ins
add
sub
dec
shl
push
add
out
int3
jb
inc
push
xor
mov
sbb
jbe
call
sbb
ror
scas
mov
jmp
mov
out
fxch
lods
adc
jae
in
lods
cmp
int
imul
pop
xor
add
scas
pop
cwde
fstp
push
add
mov
add
scas
scas
mov
jg
mov
mov
aam
xor
xor
cmp
cmc
int3
dec
(bad)
call
jp
mov
out
dec
mov
mov
fcomp
mov
pop
mov
jle
ins
icebp
xchg
sbb
daa
xchg
add
fild
cwde
sub
loopne
add
int3
push
int
fs
pushf
int
jl
in
sub
xchg
xchg
jbe
inc
in
call
fldenv
add
sbb
cld
ret
aas
cld
add
aas
test
jp
cmp
aam
not
add
sbb
fisub
and
and
aas
call
xor
aaa
mov
movzx
aaa
mov
add
and
add
(bad)
jo
push
xor
inc
ss
out
mov
jbe
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
sbb
sub
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
ss
pop
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
sti
add
or
add
lahf
sbb
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
fwait
leave
outs
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
std
add
or
add
pop
or
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
xor
call
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
into
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
cld
add
or
add
add
gs
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
dec
mov
dec
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
inc
add
inc
out
js
add
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
dec
inc
inc
push
cmp
pusha
mov
fsub
les
or
inc
xor
es
push
clc
pop
xor
stc
aas
xchg
sub
ds
ret
inc
ja
dec
pop
pop
icebp
aas
fs
jg
ss
inc
push
push
inc
ins
push
sub
repz
je
push
mov
jmp
mov
dec
repnz
pop
mov
or
inc
sub
data16
mov
arpl
(bad)
neg
stc
pop
(bad)
mov
pop
and
push
aas
sbb
xor
add
mov
iret
inc
jne
out
ror
push
sbb
std
scas
xchg
sub
or
into
(bad)
enter
test
aam
leave
(bad)
out
icebp
(bad)
out
push
outs
cmc
sbb
or
(bad)
xlat
xchg
cmp
call
jg
sti
cmc
call
retf
mov
imul
lods
(bad)
xchg
in
mov
lahf
mov
and
adc
inc
idiv
iret
fsub
idiv
repnz
icebp
jg
mov
test
mov
pop
mov
fsub
mov
jmp
mov
cld
neg
sti
pop
xor
in
fsubr
jmp
pop
cld
pminub
lahf
dec
mov
mov
xchg
out
push
fild
aas
push
jmp
jmp
xlat
cmp
dec
cmp
test
pusha
(bad)
rol
xor
je
cld
push
retf
dec
(bad)
lods
inc
xor
lahf
jb
out
mov
mov
add
push
repnz
retf
(bad)
jns
add
leave
add
out
adc
adc
mov
push
cmp
push
lock
xor
mov
xchg
jnp
add
jl
repnz
dec
xor
push
xchg
push
add
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cld
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
(bad)
enter
add
inc
inc
push
cmp
push
pop
dec
push
jno
aas
mov
aaa
cdq
clc
xor
jle
adc
adc
daa
mov
mov
mov
lds
sbb
in
leave
cmp
dec
loopne
inc
cwde
lods
xor
lea
arpl
xchg
or
(bad)
cmp
xchg
fnstsw
(bad)
jnp
pop
out
into
stc
std
into
and
pop
cmps
xor
sbb
daa
mov
xchg
xor
cmp
sbb
xor
aaa
loop
inc
push
cmps
ds
in
ss
adc
mov
loop
loop
add
jmp
sbb
adc
push
sti
out
retf
test
add
rcl
push
xor
sar
(bad)
xchg
mov
sub
jne
(bad)
sbb
sub
aaa
fwait
inc
(bad)
rcl
(bad)
jae
movs
dec
cmps
adc
dec
add
lods
pop
xchg
ror
jae
and
stos
sub
adc
jp
mov
cmp
mov
jle
xor
add
add
fsub
in
das
stos
stos
movs
movs
mov
loope
mov
dec
psrlw
push
ins
fldln2
mov
xor
popa
cmp
sbb
call
out
inc
jecxz
xchg
out
and
bound
sub
push
or
(bad)
mov
sub
and
in
xor
lods
or
push
in
imul
or
and
add
ds
lds
jmp
push
jg
lods
(bad)
iret
ficomp
loopne
lea
mov
fcompp
mov
lods
in
and
sti
movs
movs
pop
out
pop
(bad)
scas
mov
jmp
lods
sub
xchg
jae
jp
sub
loopne
int3
les
xchg
dec
mov
scas
cdq
repz
retf
iret
inc
lods
mov
hlt
sub
dec
mov
cmp
loopne
inc
pushf
dec
sub
adc
ins
mov
mov
je
test
sahf
sub
xor
mov
jb
or
jmp
adc
movs
sub
in
jle
int3
ds
out
pop
cs
pop
jecxz
in
mov
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
test
push
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
add
stos
repnz
adc
cld
jmp
add
lods
nop
jno
jle
aad
sub
es
add
jno
shr
jmp
add
add
add
add
add
sbb
add
xchg
add
add
add
and
add
mov
add
add
add
add
add
adc
add
inc
add
pop
add
dec
add
add
add
add
add
add
push
add
push
add
push
add
add
je
add
dec
add
bound
bound
jns
mov
popa
add
popa
add
mov
bound
ins
add
outs
add
(bad)
mov
add
add
popa
add
je
pop
add
jne
ins
add
add
arpl
pop
add
popa
add
jae
ja
outs
add
add
add
or
jne
ins
add
add
outs
add
ins
add
outs
add
push
add
or
add
jo
jns
xor
xor
inc
xchg
add
add
jo
jns
add
dec
test
adc
add
imul
add
ins
add
push
or
add
add
ja
push
inc
push
add
add
add
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
call
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
pusha
mov
outs
and
jmp
and
jmp
sub
call
push
outs
sub
call
js
daa
call
jmp
nop
popa
outs
es
jp
and
imul
push
inc
add
dec
add
dec
loopne
add
or
or
add
add
add
add
inc
xor
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
inc
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
retf
add
inc
mov
add
add
cs
js
add
add
xchg
add
add
add
add
add
and
add
jb
popa
je
add
bound
add
add
add
add
add
inc
add
inc
cs
je
add
add
loopne
add
push
add
add
add
inc
add
shr
jae
arpl
add
rol
add
add
add
add
add
rol
add
add
jb
ins
outs
arpl
add
add
add
add
add
add
add
add
inc
add
inc
mov
jmp
int3
int3
int3
int3
int3
push
mov
mov
call
test
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
mov
xor
push
lea
mov
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
ret
lea
ret
int3
int3
push
mov
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
mov
call
test
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
push
call
xor
mov
push
lea
mov
lea
push
mov
mov
push
mov
call
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
push
call
mov
mov
push
push
mov
call
push
push
mov
call
mov
mov
push
push
call
mov
mov
call
push
call
add
call
push
call
add
push
call
xor
push
mov
call
add
cmp
je
lea
mov
jmp
xor
push
push
mov
mov
mov
mov
mov
call
lea
mov
push
push
mov
call
cmp
jne
lea
push
push
call
cmp
jne
jmp
lea
lea
lea
mov
mov
mov
lea
mov
inc
cmp
jne
sub
push
lea
push
lea
call
lea
push
lea
call
mov
cmp
jb
mov
push
call
add
lea
call
cmp
jb
mov
jmp
add
push
lea
push
call
test
sete
cmp
jb
mov
push
call
add
test
je
mov
mov
mov
lea
push
push
call
xor
cmp
je
mov
push
call
cmp
je
mov
cmp
je
mov
cmp
je
lea
lea
cmp
jb
mov
push
call
add
mov
mov
mov
add
lea
cmp
jne
mov
push
call
add
mov
push
mov
mov
mov
call
jmp
call
push
call
mov
add
push
call
push
call
int3
int3
mov
push
mov
mov
push
mov
mov
mov
lea
nop
mov
inc
test
jne
sub
push
push
mov
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
xor
mov
push
mov
mov
push
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
test
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
mov
mov
mov
mov
push
push
push
push
mov
call
add
add
mov
pop
pop
pop
add
ret
cmp
jbe
call
mov
mov
push
push
push
lea
push
mov
call
pop
pop
pop
add
ret
int3
push
mov
push
mov
push
push
mov
cmp
jae
call
mov
mov
sub
cmp
jae
mov
cmp
jne
push
add
push
mov
call
push
push
mov
call
pop
mov
pop
pop
pop
ret
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
pop
mov
mov
pop
pop
pop
ret
lea
pop
mov
mov
pop
pop
pop
ret
lea
mov
lea
cmp
jb
mov
jmp
mov
push
add
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
push
mov
mov
sub
mov
imul
add
sar
mov
shr
add
jne
xor
jmp
cmp
jbe
call
mov
mov
test
je
cmp
je
call
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
mov
push
push
push
mov
call
mov
cmp
jbe
call
mov
mov
mov
test
jne
call
xor
lea
sub
lea
cmp
ja
test
je
mov
jmp
mov
jmp
xor
cmp
jae
call
mov
mov
pop
pop
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
test
je
mov
lea
cmp
jb
mov
jmp
mov
cmp
jb
cmp
jb
mov
jmp
mov
mov
add
cmp
jbe
cmp
jb
mov
mov
push
sub
push
push
mov
call
pop
pop
pop
ret
mov
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
push
lea
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
pop
mov
mov
pop
pop
ret
lea
pop
mov
mov
pop
pop
ret
mov
push
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
cmp
jae
call
mov
mov
sub
cmp
jae
mov
test
jbe
mov
push
lea
cmp
jb
mov
mov
jmp
mov
cmp
jb
mov
jmp
mov
sub
push
mov
add
add
push
sub
push
add
push
call
mov
sub
add
cmp
mov
jb
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
mov
mov
mov
mov
test
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
sub
mov
imul
add
sar
mov
shr
add
mov
sub
cmp
jae
call
inc
cmp
jae
mov
shr
mov
sub
cmp
jae
xor
jmp
add
cmp
jae
mov
mov
call
mov
sub
mov
mov
imul
add
sar
mov
xor
mov
shr
add
mov
lea
mov
sub
lea
mov
mov
mov
push
mov
push
push
push
mov
mov
call
mov
add
mov
mov
mov
push
mov
push
push
mov
mov
call
mov
mov
inc
lea
sub
lea
add
mov
mov
push
mov
push
mov
push
mov
call
mov
mov
sub
mov
imul
add
sar
mov
shr
add
lea
mov
test
je
mov
mov
push
mov
call
mov
add
push
call
mov
add
mov
lea
sub
lea
mov
lea
sub
lea
mov
mov
jmp
cmp
mov
mov
jle
mov
lea
sub
push
lea
mov
call
add
cmp
jle
mov
lea
push
lea
sub
lea
sub
lea
lea
call
add
push
call
add
push
push
call
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
mov
push
lea
call
mov
mov
mov
mov
mov
mov
push
mov
push
lea
push
call
mov
mov
mov
sub
mov
imul
add
sar
mov
shr
add
add
mov
mov
push
mov
sub
mov
push
lea
push
push
call
mov
add
mov
mov
add
lea
lea
call
mov
jmp
mov
mov
mov
push
mov
add
add
call
add
push
push
call
mov
push
lea
call
mov
mov
mov
mov
mov
push
push
lea
push
mov
mov
call
mov
mov
mov
add
call
mov
lea
lea
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
mov
xor
push
lea
mov
push
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
test
ja
xor
lea
sub
add
add
push
call
add
add
ret
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
or
cmp
jbe
mov
jmp
mov
mov
mul
mov
shr
shr
cmp
jae
mov
sub
cmp
ja
lea
xor
lea
mov
cmp
ja
xor
push
call
add
mov
jmp
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
mov
mov
mov
inc
mov
push
mov
call
mov
mov
ret
mov
mov
mov
test
jbe
cmp
jb
mov
jmp
lea
mov
push
push
lea
push
push
call
add
cmp
jb
mov
push
call
add
mov
lea
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
cmp
jb
mov
push
call
add
push
mov
mov
push
mov
call
int3
int3
mov
sub
test
ja
xor
push
call
add
add
ret
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
push
push
push
mov
call
add
cmp
jne
pop
ret
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
push
push
push
push
push
mov
call
sub
mov
imul
add
sar
mov
shr
add
lea
sub
add
add
add
mov
sub
pop
pop
ret
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
xor
mov
mov
cmp
jbe
mov
cmp
je
mov
push
push
mov
mov
push
mov
mov
call
dec
add
mov
mov
jmp
mov
mov
cmp
je
call
add
cmp
jne
xor
push
push
call
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
cmp
je
push
xor
lea
cmp
jb
mov
push
call
add
mov
mov
mov
add
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
mov
mov
push
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
add
jmp
mov
mov
cmp
je
lea
call
add
cmp
jne
push
push
call
cmp
jb
mov
push
call
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
cmp
je
push
push
push
push
lea
sub
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
pop
pop
pop
pop
mov
xor
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
je
dec
mov
cmp
jbe
call
cmp
mov
jae
mov
cmp
je
cmp
jbe
call
cmp
mov
jae
mov
cmp
je
cmp
jbe
call
cmp
mov
jae
mov
mov
mov
inc
inc
mov
cmp
jne
xor
jmp
lea
mov
lea
mov
call
mov
inc
cmp
jl
mov
mov
add
mov
shr
and
add
add
mov
mov
mov
shr
mov
and
shl
shl
add
xor
xor
mov
mov
mov
jmp
lea
mov
mov
sub
cmp
ja
call
mov
inc
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
mov
lea
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
mov
jmp
lea
mov
jmp
mov
mov
mov
cmp
jb
mov
jmp
mov
mov
mov
inc
cmp
mov
jl
mov
mov
xor
test
jne
test
je
cmp
jge
mov
sub
push
lea
push
push
call
add
xor
mov
mov
lea
mov
call
mov
inc
cmp
jl
mov
mov
add
mov
shr
and
add
add
mov
mov
mov
shr
mov
shl
add
and
shl
dec
xor
mov
mov
mov
mov
test
jle
mov
mov
or
sub
cmp
ja
call
mov
inc
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
mov
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
mov
jmp
lea
mov
jmp
lea
mov
mov
cmp
jb
mov
jmp
lea
mov
mov
mov
inc
cmp
mov
jl
mov
mov
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
jbe
cmp
jb
cmp
mov
jae
mov
movsx
push
push
push
call
add
test
je
movzx
movzx
sub
je
sar
or
je
sub
lea
lea
movsx
push
push
push
call
add
test
jne
pop
or
pop
ret
cmp
mov
jae
mov
pop
sub
pop
ret
int3
jmp
jmp
jmp
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
jmp
mov
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
push
mov
call
push
lea
call
and
lea
push
lea
call
push
lea
push
call
int3
push
mov
call
push
lea
call
and
lea
push
lea
call
push
lea
push
call
int3
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
cmp
jne
repz
jmp
mov
push
mov
mov
push
push
xor
cmp
je
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
push
push
call
add
xor
pop
pop
pop
ret
mov
and
and
mov
ret
mov
push
mov
push
mov
push
push
mov
mov
mov
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
mov
mov
pop
pop
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
and
mov
pop
ret
mov
push
mov
push
mov
push
mov
mov
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
jmp
mov
pop
mov
pop
pop
pop
ret
cmp
mov
je
push
call
pop
ret
mov
test
jne
mov
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
xor
push
push
push
push
push
call
add
ret
mov
push
mov
pop
jmp
mov
push
mov
push
mov
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jb
push
push
push
call
add
jmp
push
push
push
call
add
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
pop
pop
pop
pop
ret
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
add
push
add
push
call
neg
pop
sbb
pop
inc
pop
ret
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
push
push
mov
call
mov
mov
pop
ret
mov
push
mov
sub
jmp
push
call
pop
test
je
push
call
pop
test
je
leave
ret
test
mov
jne
or
mov
call
push
call
pop
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
mov
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
jmp
xor
inc
ret
mov
mov
mov
call
ret
call
jmp
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
test
je
mov
lea
push
push
push
push
call
leave
ret
mov
push
mov
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
leave
ret
pop
pop
xchg
jmp
mov
push
mov
push
push
push
push
push
mov
mov
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
push
push
push
push
push
call
add
mov
pop
pop
pop
mov
mov
pop
ret
mov
push
mov
push
cld
mov
mov
xor
call
push
push
push
push
push
push
push
push
call
add
pop
pop
ret
mov
push
mov
sub
push
cmp
jne
mov
mov
mov
xor
inc
jmp
and
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
push
mov
push
call
pop
pop
and
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
leave
ret
mov
push
mov
push
push
cld
mov
mov
xor
call
mov
mov
and
je
mov
mov
xor
inc
jmp
jmp
push
mov
push
mov
push
mov
push
push
push
mov
push
push
call
add
mov
cmp
jne
push
push
call
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
mov
jmp
xor
inc
pop
leave
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
mov
jmp
cmp
jne
call
mov
dec
mov
imul
add
mov
cmp
jge
cmp
jle
cmp
jne
dec
mov
mov
cmp
jge
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
mov
imul
add
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
mov
call
mov
mov
call
mov
mov
pop
pop
ret
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
test
jne
inc
pop
ret
xor
pop
ret
mov
push
mov
push
call
mov
cmp
jne
call
mov
mov
pop
pop
ret
call
mov
jmp
mov
cmp
je
mov
cmp
jne
pop
pop
jmp
mov
mov
jmp
mov
push
mov
sub
mov
and
lea
xor
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
leave
ret
push
push
lea
sub
push
push
push
mov
mov
mov
xor
push
push
mov
lea
mov
ret
push
push
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
push
mov
lea
mov
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sbb
inc
add
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jmp
inc
add
cmp
sar
inc
add
cmp
sar
add
cmp
test
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
inc
add
cmp
sub
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
movs
cmp
enter
lock
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
ins
cmp
je
inc
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
cmp
mov
cmp
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
int3
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
cmp
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
mov
call
cmp
jne
push
push
push
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
je
inc
add
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
adc
inc
add
dec
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
call
push
call
pop
and
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
push
call
pop
and
mov
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
call
mov
test
je
call
jmp
push
push
call
push
call
pop
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
pop
mov
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
push
lea
push
mov
call
mov
mov
pop
pop
ret
mov
jmp
mov
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
test
je
lea
cmp
je
mov
mov
cmp
je
add
push
push
call
pop
pop
test
je
xor
jmp
test
je
test
je
mov
mov
test
je
test
je
test
je
test
je
xor
inc
pop
pop
pop
ret
mov
push
mov
mov
mov
mov
cmp
je
cmp
jne
call
and
jmp
call
cmp
jle
call
add
dec
xor
pop
ret
push
push
call
mov
mov
cmp
jg
movsx
jmp
mov
mov
call
add
inc
and
cmp
je
cmp
jle
cmp
jl
call
mov
shl
mov
add
mov
mov
mov
cmp
je
mov
push
push
mov
push
call
and
jmp
push
call
pop
ret
mov
and
mov
mov
mov
mov
jmp
mov
call
cmp
je
call
mov
call
ret
mov
mov
call
cmp
jle
call
add
dec
ret
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
xor
inc
mov
mov
ret
xor
ret
push
push
call
mov
test
je
cmp
jne
mov
test
je
mov
test
je
and
push
push
call
mov
call
ret
xor
cmp
setne
ret
mov
call
int3
mov
push
mov
mov
mov
push
mov
add
cmp
jl
mov
mov
mov
mov
add
add
pop
pop
ret
mov
push
mov
sub
test
jne
call
call
and
cmp
mov
jle
push
push
mov
mov
mov
mov
lea
test
jle
mov
shl
mov
mov
push
mov
push
mov
add
push
call
add
test
jne
dec
add
test
jg
jmp
mov
inc
mov
cmp
jl
pop
pop
mov
leave
ret
push
mov
call
call
cmp
je
call
and
call
or
call
call
mov
push
push
mov
call
int3
push
push
call
mov
mov
mov
mov
and
mov
mov
push
lea
push
call
pop
pop
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
and
xor
inc
mov
mov
push
push
push
push
push
call
add
mov
and
jmp
mov
call
ret
mov
call
and
mov
mov
cmp
jg
movsx
jmp
mov
mov
and
mov
cmp
jae
imul
add
mov
cmp
jle
cmp
jg
mov
mov
push
push
push
push
call
add
and
and
mov
mov
mov
call
mov
call
ret
inc
jmp
mov
mov
mov
mov
push
call
pop
call
mov
mov
call
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
push
call
pop
test
je
push
push
call
pop
pop
ret
push
push
call
xor
mov
mov
mov
cmp
je
cmp
je
mov
cmp
jne
test
je
mov
mov
test
js
lea
mov
xor
inc
push
test
je
mov
push
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
mov
push
test
je
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
mov
push
push
call
add
cmp
jne
mov
test
je
add
push
jmp
cmp
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
add
push
mov
push
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
call
pop
test
je
test
push
pop
setne
inc
mov
jmp
call
mov
mov
jmp
xor
inc
ret
mov
call
xor
call
ret
push
push
call
mov
test
je
mov
jmp
mov
mov
lea
and
mov
push
push
push
mov
push
call
add
dec
je
dec
jne
push
lea
push
push
call
pop
pop
push
push
push
call
jmp
lea
push
push
call
pop
pop
push
push
push
call
mov
call
ret
xor
inc
ret
mov
call
int3
mov
push
mov
cmp
je
push
push
push
push
call
add
cmp
push
jne
push
jmp
push
call
push
push
push
push
call
mov
push
push
inc
push
mov
push
mov
push
push
call
add
test
je
push
push
call
pop
ret
mov
push
mov
push
push
push
mov
cmp
je
push
call
cmp
je
call
lea
call
cmp
je
cmp
je
push
push
push
push
push
push
push
call
add
test
jne
mov
cmp
jne
call
mov
lea
push
lea
push
push
push
push
call
mov
mov
add
cmp
jae
push
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmp
jne
lea
test
jne
push
mov
push
push
push
push
push
push
call
mov
add
inc
mov
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
mov
cmp
push
push
mov
jg
movsx
jmp
mov
cmp
mov
jl
cmp
jl
call
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
cmp
je
call
mov
mov
call
mov
push
push
mov
call
pop
pop
test
jne
call
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
call
cmp
je
call
mov
call
push
xor
mov
call
pop
test
jne
xor
cmp
jle
mov
mov
push
call
test
jne
inc
add
cmp
jl
call
push
push
call
pop
pop
push
lea
call
push
lea
push
call
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
lea
push
lea
push
push
push
push
call
add
mov
mov
cmp
jae
mov
cmp
jg
cmp
jg
mov
mov
mov
mov
test
jle
mov
mov
lea
mov
mov
test
jle
push
mov
push
push
mov
call
add
test
jne
dec
add
cmp
jg
dec
add
cmp
jg
jmp
push
mov
push
mov
push
push
push
push
push
mov
call
mov
add
inc
add
jmp
mov
cmp
je
push
push
call
pop
pop
cmp
jne
mov
and
cmp
jb
mov
test
je
push
call
pop
test
jne
call
call
call
mov
call
cmp
mov
mov
push
jne
push
jmp
push
call
mov
push
push
push
push
call
add
push
call
mov
cmp
jbe
cmp
jne
push
push
push
push
push
push
push
push
call
add
call
cmp
je
call
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
push
mov
push
push
push
call
cmp
mov
mov
mov
mov
mov
jne
mov
cmp
je
cmp
je
mov
and
cmp
jb
test
jne
test
je
cmp
je
cmp
jne
push
push
push
push
call
add
jmp
cmp
jne
mov
and
cmp
jb
cmp
je
cmp
jne
cmp
jb
cmp
jbe
mov
mov
test
je
movzx
push
push
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
push
call
add
xor
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
push
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmp
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
mov
call
mov
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
mov
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
mov
mov
call
ret
push
push
call
mov
test
jne
push
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmp
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
mov
call
cmp
jne
test
jne
inc
add
and
mov
push
push
push
push
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
mov
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
push
push
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
push
call
mov
push
call
pop
test
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
mov
call
add
or
pop
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
test
push
je
push
call
pop
call
test
je
push
call
pop
test
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
mov
mov
mov
call
lea
push
call
push
call
int3
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
xor
inc
cmp
jne
xor
pop
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
mov
cmp
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
and
je
and
mov
jmp
ret
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
mov
mov
jmp
add
mov
(bad)
add
(bad)
(bad)
add
call
(bad)
add
add
add
adc
add
and
add
xlat
add
dec
xlat
add
jo
add
test
add
cwde
xlat
add
mov
add
rcl
add
out
add
cli
xlat
add
or
add
sbb
add
sub
add
fadd
add
add
push
fadd
add
add
jb
add
sbb
add
add
movs
fadd
add
add
loop
add
cli
fadd
add
fld
add
fld
add
fld
add
fld
add
add
push
fld
add
fld
add
fld
add
fld
add
fiadd
add
add
fiadd
add
add
add
pusha
fiadd
add
add
mov
add
movs
fiadd
add
add
into
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fild
add
fild
add
fild
add
add
push
fild
add
mov
inc
add
inc
add
ins
inc
add
add
push
inc
add
int3
inc
add
adc
sub
add
adc
add
inc
add
inc
add
adc
add
inc
add
inc
add
inc
add
adc
jae
jb
outs
and
outs
and
add
jbe
ins
imul
and
jae
je
outs
outs
add
sub
sub
add
imul
outs
and
arpl
je
outs
outs
add
add
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outs
add
add
add
add
add
ins
loopne
add
add
add
add
add
add
add
add
clc
in
inc
add
inc
add
arpl
gs
outs
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outs
fs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outs
ins
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outs
outs
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
ins
je
outs
data16
ins
ins
imul
dec
push
dec
dec
sub
imul
ins
jb
and
outs
arpl
outs
and
outs
ins
and
outs
popa
je
jbe
and
outs
jae
jb
arpl
and
and
outs
ins
and
dec
popa
imul
push
xor
xor
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
arpl
and
outs
jb
popa
je
outs
outs
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outs
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
push
push
jo
ins
imul
and
jae
jb
jno
gs
gs
and
outs
je
ins
and
je
jb
imul
je
imul
outs
jne
jne
ins
and
jns
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
jo
jb
and
je
ins
outs
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
or
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
inc
add
retf
inc
add
pop
inc
add
popa
and
arpl
je
outs
outs
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
inc
outs
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
inc
ins
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
and
and
arpl
jo
outs
jb
add
add
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
add
add
pusha
fs
popa
ins
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
ins
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
pusha
outs
ins
outs
imul
jae
addr16
add
and
gs
pop
pop
add
add
outs
gs
pop
add
pusha
ins
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
outs
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outs
jo
and
outs
jae
jb
arpl
and
outs
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
ins
and
jo
popa
arpl
outs
je
ins
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outs
addr16
add
add
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outs
data16
add
add
pusha
jbe
popa
ins
ins
daa
add
bound
ins
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outs
gs
add
add
jne
popa
ins
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
ins
ins
add
add
popaw
jae
arpl
ins
add
pop
pop
je
imul
add
jae
arpl
ins
add
add
jo
jae
popa
ins
add
add
pop
pop
arpl
ins
add
bound
gs
add
add
add
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
inc
add
inc
add
mov
inc
add
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
je
jae
jb
bound
arpl
outs
jb
popa
je
outs
outs
inc
add
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
inc
push
xor
cs
dec
dec
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
add
add
outs
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
and
ins
outs
arpl
imul
dec
jns
inc
inc
jp
ins
push
xor
push
cmp
add
gs
arpl
je
outs
popa
arpl
je
jb
gs
arpl
add
jbe
arpl
cmp
and
and
add
add
add
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
dec
add
add
inc
add
inc
add
add
add
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fs
inc
add
in
inc
add
int
add
inc
add
retf
inc
add
add
add
retf
inc
add
retf
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
enter
pop
in
add
int3
inc
add
add
add
int3
inc
add
inc
add
add
pop
in
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
inc
add
add
add
add
add
add
add
int3
inc
add
add
pop
in
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
int3
inc
add
inc
add
add
add
inc
add
add
cmp
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
lods
int3
inc
add
add
int3
inc
add
add
add
int
add
inc
add
add
and
inc
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
inc
add
add
jl
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
int3
inc
add
xor
add
xor
add
inc
add
add
add
push
lahf
add
sbb
add
lahf
add
clc
lahf
add
cmp
add
lea
add
add
add
(bad)
(bad)
(bad)
jmp
inc
add
add
add
ror
add
add
add
add
add
inc
add
add
add
int
add
add
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sub
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
xor
das
xor
(bad)
(bad)
(bad)
push
xor
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
ds
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
jnp
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
push
inc
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
push
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
inc
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
dec
pop
inc
add
pop
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
pusha
inc
add
pusha
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
popa
inc
add
add
hlt
popa
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
xchg
sbb
add
add
add
movs
rol
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
gs
add
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
inc
add
add
add
pop
inc
add
add
add
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
bound
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jnp
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
test
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
add
add
(bad)
(bad)
inc
add
add
add
movaps
add
add
cmp
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
sbb
add
je
inc
add
inc
add
inc
add
add
add
adc
add
add
nop
rol
add
add
jl
inc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
inc
add
add
add
rol
add
add
add
inc
add
add
add
rol
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
outs
push
inc
add
add
fistp
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
rol
and
add
call
add
add
rol
add
add
(bad)
(bad)
(bad)
inc
lahf
inc
add
add
add
je
inc
add
add
add
(bad)
(bad)
push
lahf
inc
add
add
add
mov
add
add
add
add
(bad)
(bad)
jmp
mov
xchg
sbb
add
add
rol
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
sti
pop
inc
add
add
add
add
add
add
add
add
add
aam
add
add
add
clc
rol
add
add
and
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
pop
aam
add
add
add
add
add
add
add
(bad)
(bad)
inc
mov
xchg
sbb
add
add
aam
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
mov
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
mov
add
jp
inc
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
add
add
hlt
aam
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
add
(bad)
(bad)
add
call
(bad)
add
add
add
adc
add
and
add
xlat
add
dec
xlat
add
jo
add
test
add
cwde
xlat
add
mov
add
rcl
add
out
add
cli
xlat
add
or
add
sbb
add
sub
add
fadd
add
add
push
fadd
add
add
jb
add
sbb
add
add
movs
fadd
add
add
loop
add
cli
fadd
add
fld
add
fld
add
fld
add
fld
add
add
push
fld
add
fld
add
fld
add
fld
add
fiadd
add
add
fiadd
add
add
add
pusha
fiadd
add
add
mov
add
movs
fiadd
add
add
into
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fild
add
fild
add
fild
add
add
push
fild
add
add
add
ins
jae
jb
ins
jo
add
bound
inc
jb
gs
imul
xchg
add
outs
arpl
jae
xor
jb
je
add
gs
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outs
popa
fs
imul
add
xchg
add
outs
arpl
jae
xor
js
add
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
push
add
outs
jae
dec
popa
outs
fs
gs
add
je
jne
jb
outs
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
ins
add
rol
jb
imul
outs
arpl
jae
add
add
je
jne
jb
outs
je
jb
arpl
jae
rol
fs
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outs
je
sbb
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
sbb
inc
js
je
jb
arpl
jae
xchg
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
je
jb
jne
dec
outs
outs
inc
add
jae
inc
js
gs
imul
push
je
push
outs
ja
outs
fs
add
popa
jo
ins
ins
outs
arpl
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jo
jb
add
mov
je
popa
ins
jne
add
add
ins
jae
ins
ins
outs
arpl
add
add
ins
jae
gs
popa
ins
jne
add
add
ins
jae
jb
gs
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
push
gs
popa
jae
inc
jb
outs
jb
add
add
je
jne
jb
outs
je
push
dec
add
jmp
dec
outs
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
popa
jo
imul
push
jb
je
inc
imul
je
je
dec
popa
outs
fs
add
adc
inc
gs
outs
fs
gs
imul
add
rol
inc
gs
gs
inc
jb
je
arpl
push
arpl
outs
add
add
jbe
inc
jb
je
arpl
push
arpl
outs
add
out
add
je
jb
jb
je
arpl
push
arpl
outs
add
jecxz
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
pusha
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
outs
add
gs
popa
outs
fs
gs
outs
jne
je
add
add
je
imul
int
dec
gs
jo
jb
popa
je
add
in
add
imul
jb
add
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
xchg
add
je
imul
je
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
imul
ins
ins
outs
arpl
add
add
popa
jo
gs
ins
ins
outs
arpl
jb
inc
gs
push
dec
outs
outs
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
ins
imul
add
add
je
outs
arpl
gs
outs
outs
inc
add
data16
je
je
imul
inc
add
add
ins
je
inc
jns
gs
outs
push
imul
imul
je
imul
push
add
sub
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
inc
add
add
cs
inc
push
outs
jne
pop
outs
pop
jb
outs
addr16
jae
fs
inc
add
push
retf
mov
add
add
aas
inc
push
je
jo
pop
imul
jmp
add
add
add
add
add
inc
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
mov
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
add
add
je
inc
add
add
add
add
adc
inc
add
add
add
mov
add
add
add
add
add
inc
add
add
add
inc
add
add
add
mov
add
add
lods
mov
add
add
pushf
mov
add
add
mov
add
mov
add
js
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
inc
add
mov
mov
inc
add
mov
add
add
pop
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
add
add
cs
inc
push
bound
pop
gs
gs
imul
inc
inc
add
ret
inc
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
rol
mov
mov
nop
in
add
add
add
in
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
inc
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
add
add
add
add
lock
ret
inc
add
add
add
retf
sbb
inc
add
retf
adc
inc
add
retf
or
inc
add
retf
add
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
leave
inc
add
inc
add
leave
inc
add
inc
add
inc
add
add
add
leave
inc
add
inc
add
leave
inc
add
inc
add
leave
inc
add
inc
add
enter
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
js
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
icebp
(bad)
inc
add
add
push
add
push
add
jmp
add
in
inc
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
inc
add
inc
add
add
add
add
add
add
cs
inc
push
gs
gs
imul
inc
inc
add
add
cs
inc
push
ins
outs
imul
jb
jae
fs
inc
add
add
add
cs
inc
push
ins
outs
addr16
pop
gs
outs
jb
jae
fs
inc
add
mov
add
add
aas
inc
push
bound
pop
popa
ins
ins
outs
arpl
je
inc
inc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
add
add
add
in
add
add
add
cmp
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
add
add
pusha
add
add
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jno
arpl
lods
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cli
cmp
jg
xchg
aas
test
add
add
add
aam
add
cmps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shl
sub
ss
inc
ss
ss
cwde
mov
fidiv
div
pop
aaa
and
call
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
outs
cmp
mov
lds
jmp
ds
ds
jp
test
mov
test
pop
aas
data16
jb
jg
scas
aas
mov
mov
aas
add
add
xor
add
movs
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
xor
pop
xor
xor
xor
xor
ss
ss
aaa
mov
mov
xchg
aaa
call
aaa
mov
mov
aaa
shl
fnstenv
loope
jmp
aaa
add
or
adc
sbb
daa
cmp
cmp
cmp
dec
cmp
pop
cmp
jbe
stos
cmp
cmp
cmp
cmp
cmp
adc
adc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
mov
xchg
cmp
cmp
cmp
cmp
cmp
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
sar
ss
ds
bound
outs
cmp
ds
movs
ds
sar
fnstsw
jmp
aas
sbb
and
cmp
inc
aas
dec
aas
push
aas
gs
imul
aas
cmp
aas
xchg
aas
mov
aas
mov
aas
in
aas
repz
add
add
add
add
and
cmp
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
sbb
xor
xor
xor
dec
xor
pop
xor
jns
jg
mov
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ins
xor
mov
ss
ss
aaa
pop
aaa
nop
aaa
sbb
dec
cmp
outs
cmp
jl
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
xor
pop
cmp
cmp
test
lods
cmp
cmp
or
or
pop
cmp
jge
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
cwde
cmp
call
ds
ds
ds
ds
mov
xchg
ds
mov
ds
ds
or
das
aas
les
in
out
aas
hlt
aas
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
sub
dec
ss
ss
fidiv
out
sub
cmp
jno
jnp
retf
aaa
(bad)
aaa
loopne
icebp
aaa
cld
aaa
scas
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
ins
cmp
cmp
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
adc
pop
ds
ds
ds
arpl
imul
ds
mov
fistp
cmps
aas
add
add
add
int
(bad)
xor
xor
cmp
jbe
je
sub
icebp
cmp
add
lods
add
add
inc
xor
bound
xor
jg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
rdtsc
adc
sbb
and
sub
xor
inc
xor
push
xor
imul
test
mov
movs
xor
xor
xor
xor
xor
ins
ss
test
(bad)
cmp
cmp
cmp
cmp
ins
cmp
cmp
cmp
cmp
dec
ds
ds
jp
ret
fistp
jmp
aas
arpl
ins
aas
cmp
aas
fstp
add
add
add
adc
and
xchg
xor
xor
xor
xor
xor
xor
xor
scas
xor
xor
xor
sub
xor
add
pop
xor
xor
xor
xor
mov
pop
ss
mov
xchg
mov
cmp
cmp
cmp
cmp
or
sbb
pop
cmp
cmp
inc
cmp
pop
cmp
imul
aam
icebp
cmp
pusha
cmp
lahf
cmp
cmp
cmp
cmp
cmp
add
add
add
and
xor
jge
(bad)
xor
xor
xor
xor
pusha
xor
jno
jns
xchg
lea
mov
xor
xor
shl
add
xor
xor
xor
jmp
cmp
cmp
sti
cmp
cmp
cmp
jp
xchg
aas
mov
fidivr
add
add
add
or
dec
xor
test
xor
xor
xor
push
xor
bound
jb
jp
mov
xchg
xor
xor
xor
xor
xor
xor
add
mov
add
add
add
xor
sbb
sbb
and
and
inc
xor
xor
xor
xor
xor
xor
xor
mov
xor
enter
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
in
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pop
cmp
jo
je
js
jl
test
pushf
cmp
les
aam
fdivr
loopne
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sub
cmp
inc
cmp
les
clc
cmp
or
adc
and
inc
ds
ds
cmp
mov
test
enter
hlt
adc
sbb
cmp
pop
aas
js
xchg
aas
cwde
aas
mov
mov
aas
clc
aas
add
add
mov
add
adc
sbb
xor
cmp
pop
xor
xor
xor
xor
xor
xor
xor
sbb
and
cmp
inc
xor
push
xor
pop
xor
xor
fdiv
clc
xor
xor
xor
push
xor
xor
mov
xchg
xor
xor
shl
aam
fdiv
in
adc
and
cmp
dec
xor
pusha
xor
test
movs
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
je
jl
add
add
add
add
add
add
add
and
sub
sub
inc
xor
lock
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
fdiv
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
jo
je
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
js
jl
cmp
cmp
cmp
test
push
cmp
cmp
cmp
cmp
cmp
jl
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
adc
add
add
or
or
add
or
add
add
add
add
or
add
add
mov
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
inc
inc
push
cmp
pusha
sbb
loopne
(bad)
push
inc
pop
cpuid
popa
mov
(bad)
cli
js
or
movs
(bad)
aas
pop
bound
bound
mov
icebp
les
sub
mov
cld
push
jmp
cmp
or
xor
les
mov
push
mov
push
dec
mov
jne
out
les
sbb
aam
and
and
xor
mov
inc
pop
adc
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
add
push
add
add
add
add
add
add
add
pushf
add
add
add
add
add
mov
add
add
add
add
inc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
adc
add
add
add
adc
add
add
add
add
add
mov
add
add
add
adc
add
add
add
or
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
add
add
add
add
pusha
cs
jb
add
add
inc
add
rol
add
add
add
add
inc
add
inc
cs
ins
outs
arpl
add
add
add
add
add
add
add
add
inc
add
inc
jo
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
and
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
adc
add
xor
add
adc
add
jle
add
add
sub
add
or
jb
add
jo
or
add
sub
add
or
add
or
add
or
pop
or
add
or
add
add
xor
add
add
add
or
add
add
push
add
sub
push
sub
add
or
add
or
add
sub
add
or
sub
add
push
add
cmp
add
sub
pop
add
push
outs
cmp
or
and
add
outs
add
or
sbb
add
dec
add
add
add
adc
add
add
ds
add
add
pop
sub
add
or
sub
add
jle
add
add
sbb
pop
add
push
adc
push
and
add
jae
add
or
add
or
or
add
pop
pop
sub
add
fdivr
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
adc
and
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
inc
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
inc
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
inc
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
inc
add
or
add
adc
add
pop
add
add
add
add
add
add
add
xor
add
add
add
add
add
jge
add
add
jb
add
jo
sub
add
jnp
add
add
jnp
add
add
pop
add
jnp
add
add
sbb
add
jb
add
jo
sub
add
jnp
add
add
jnp
add
add
or
add
add
add
sbb
add
outs
inc
add
or
adc
add
pop
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
or
add
jo
dec
add
or
add
add
add
jnp
add
add
ss
add
jge
add
add
jnp
add
add
ss
add
jge
add
add
jnp
add
add
ss
add
jge
add
add
outs
inc
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
or
add
jo
dec
add
or
add
add
add
jnp
add
add
xor
add
jge
add
add
jnp
add
add
xor
add
jge
add
add
jnp
add
add
xor
add
jge
add
add
outs
inc
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
jnp
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
sub
jb
add
jo
dec
add
or
add
add
add
outs
inc
add
or
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sub
jb
add
jo
dec
add
or
add
add
add
outs
inc
add
or
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
jge
add
add
jnp
add
add
sbb
outs
and
outs
dec
add
or
outs
daa
add
push
push
outs
dec
add
or
cmp
jnp
add
add
adc
add
add
or
cmp
jge
add
add
or
pop
les
add
add
outs
and
outs
dec
add
or
outs
daa
add
push
push
outs
dec
add
or
outs
inc
add
or
add
adc
add
or
add
sub
add
add
add
add
sub
xor
add
add
add
add
add
xor
jb
add
jo
dec
add
or
add
and
add
outs
and
dec
add
or
add
add
push
push
outs
dec
add
or
outs
and
jnp
add
add
outs
dec
add
or
outs
and
outs
dec
add
or
adc
outs
and
jnp
add
add
outs
dec
add
or
outs
inc
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
sub
xor
add
add
add
add
add
xor
jb
add
jo
dec
add
or
add
and
add
outs
daa
add
push
outs
dec
add
or
add
add
push
push
outs
dec
add
or
outs
daa
add
push
add
add
add
outs
dec
add
or
outs
daa
add
push
pop
outs
dec
add
or
adc
outs
daa
add
push
add
add
add
outs
dec
add
or
outs
inc
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
(bad)
sub
add
(bad)
sub
add
(bad)
sub
add
sub
add
jge
add
add
outs
inc
add
or
add
add
xor
add
add
sub
add
add
add
add
push
add
or
dec
add
add
add
outs
push
add
or
outs
inc
add
or
adc
add
pop
add
add
jnp
add
add
add
add
jge
add
add
outs
inc
add
or
add
xor
add
add
add
add
adc
sub
add
sub
push
add
sub
or
jnp
add
add
outs
push
add
or
add
add
xor
add
add
add
add
adc
sub
add
sub
push
add
sub
add
add
add
add
outs
push
add
or
add
add
xor
add
add
xor
add
add
add
add
push
add
or
add
add
add
outs
pop
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
add
jnp
add
add
les
lar
outs
dec
add
or
cmp
jge
add
add
outs
inc
add
or
adc
add
pop
add
add
add
adc
sub
add
sub
and
add
pop
add
or
add
add
xor
add
add
add
add
adc
sub
add
sub
and
add
pop
add
or
add
add
xor
add
add
add
add
add
pop
add
or
add
add
sub
add
sub
add
adc
add
pop
add
add
sub
add
sub
and
add
pusha
add
or
add
add
xor
add
add
add
add
adc
sub
add
sub
and
add
bound
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
sub
and
add
add
or
add
add
xor
add
add
add
add
adc
sub
add
sub
and
add
data16
or
add
add
xor
add
add
add
add
adc
sub
add
sub
and
add
push
add
add
xor
add
add
add
add
adc
sub
add
sub
and
add
push
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
sub
and
add
ins
add
or
add
add
xor
add
add
add
add
add
ins
add
or
add
add
sub
add
sub
add
adc
add
pop
add
add
sub
add
sub
and
add
jo
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
sub
and
add
jb
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
sub
and
add
je
add
sub
add
adc
add
pop
add
add
add
add
jne
add
sub
and
add
jbe
add
sub
add
adc
add
pop
add
add
add
add
ja
add
sub
and
add
js
add
sub
add
adc
add
add
add
add
jns
add
add
mov
add
and
mov
add
sub
add
jge
add
add
and
add
add
retf
add
retf
add
jp
add
jge
add
add
and
add
add
jmp
add
sub
add
jge
add
add
and
add
add
fild
add
and
add
add
jp
add
jge
add
add
and
add
add
repz
add
repz
add
jp
add
jge
add
add
pop
aaa
and
add
add
cmp
jp
add
jge
add
add
and
add
add
cld
add
add
sub
add
jge
add
add
and
add
add
push
sub
add
jge
add
add
and
inc
add
and
add
add
inc
add
sub
add
jge
add
add
sbb
add
add
and
add
add
add
add
add
add
and
add
add
add
jge
add
add
and
add
add
add
add
add
add
and
add
add
add
sbb
add
and
add
add
adc
sbb
add
pop
jge
add
add
push
jge
add
add
push
jge
add
add
pop
adc
jge
add
add
and
jge
add
add
pop
les
add
add
sbb
add
add
push
jge
add
add
push
jge
add
add
jae
add
or
add
push
add
add
or
add
push
add
add
or
add
add
jb
add
jo
sub
add
jb
add
jo
jge
add
add
add
xor
add
pop
movaps
add
push
outs
jg
add
add
add
add
pop
outs
add
or
and
and
add
outs
add
or
pop
adc
outs
add
or
sbb
outs
add
or
and
or
add
outs
add
or
sub
data16
push
add
add
push
add
add
add
outs
dec
add
or
outs
and
outs
dec
add
or
outs
daa
add
push
add
add
add
outs
dec
add
or
outs
daa
add
push
push
outs
dec
add
or
outs
add
or
jnp
add
add
pop
sbb
add
or
sub
add
or
adc
push
push
sub
outs
xchg
add
pop
jb
add
jo
jge
add
pop
adc
and
add
add
movaps
add
push
outs
jg
add
pop
push
outs
xchg
add
pop
pop
and
add
or
push
outs
push
add
or
add
add
or
jnp
add
add
mov
add
add
outs
mov
add
sub
xor
add
add
add
sub
add
push
add
add
or
outs
mov
add
ins
and
add
add
add
inc
pop
and
add
add
add
inc
pop
sub
sub
add
add
add
or
add
add
add
inc
pop
sub
add
add
or
outs
mov
add
ins
add
add
or
add
add
add
inc
pop
pop
sub
sub
or
outs
jl
add
or
or
outs
jl
add
or
add
add
add
jnp
add
add
jae
add
or
add
outs
nop
add
or
add
outs
xchg
add
or
or
add
pop
adc
xchg
add
or
or
jnp
add
add
jnp
add
add
jae
add
or
add
add
adc
add
fimul
add
outs
xchg
add
or
add
add
add
test
adc
add
add
add
inc
add
add
push
sbb
add
rol
add
jnp
add
add
adc
jnp
add
add
add
cmp
xchg
add
or
push
sub
add
add
add
add
cmp
xchg
add
or
push
add
add
add
add
add
or
outs
dec
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
sub
ficom
pop
sub
add
ins
and
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
sub
adc
add
add
or
push
adc
push
adc
add
add
or
add
or
jnp
add
add
inc
rol
add
jnp
add
add
adc
jnp
add
add
add
cmp
xchg
add
or
push
sub
add
add
add
add
cmp
xchg
add
or
push
add
add
add
add
add
or
outs
dec
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
sub
ficom
pop
sub
add
ins
and
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
sub
adc
add
add
or
push
adc
push
adc
add
add
or
add
or
add
add
add
mov
or
add
add
add
add
jecxz
or
add
add
xor
add
or
add
push
adc
and
mov
and
add
aas
adc
aas
adc
add
add
or
outs
xchg
add
or
outs
nop
add
or
or
outs
dec
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
adc
add
add
add
xor
jnp
add
add
inc
add
add
add
inc
pusha
sub
add
add
add
jnp
add
add
das
add
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
adc
adc
adc
adc
lea
add
mov
fiadd
add
add
add
add
cmp
add
adc
add
add
or
adc
lea
add
mov
pop
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
inc
add
add
add
inc
pusha
sub
add
add
add
jnp
add
add
or
outs
jl
add
adc
sub
add
movhps
add
push
adc
sub
add
movhps
add
push
adc
adc
add
add
or
adc
lea
add
mov
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
inc
add
add
add
inc
pusha
sub
add
add
add
jnp
add
add
adc
adc
pop
outs
jl
add
adc
cmp
add
add
adc
pop
outs
jp
add
adc
cmp
add
add
adc
pop
outs
jl
add
adc
cmp
add
add
movhps
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
inc
add
add
add
inc
pusha
sub
add
add
add
jnp
add
add
or
outs
jl
add
adc
sub
add
movhps
add
push
adc
sub
add
movhps
add
push
adc
adc
pop
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
inc
add
add
add
inc
pusha
sub
add
add
add
jnp
add
add
or
outs
jl
add
adc
sub
add
push
pop
outs
jns
add
adc
sub
add
push
pop
outs
jl
add
adc
add
jnp
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
add
inc
add
add
add
inc
push
inc
pop
cmp
add
add
jnp
add
add
xor
jnp
add
add
jnp
add
add
leave
add
add
add
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
add
jnp
add
add
inc
test
add
add
add
add
jnp
add
add
xor
add
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
add
jnp
add
add
xor
add
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
pop
jae
add
or
adc
outs
nop
add
or
adc
or
add
or
or
adc
adc
outs
xchg
add
or
adc
push
pop
pop
jae
add
or
adc
outs
nop
add
or
adc
or
add
or
or
adc
adc
outs
xchg
add
or
add
add
add
inc
add
add
add
inc
pusha
add
add
add
inc
pop
cmp
add
add
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
adc
add
add
add
xor
add
jnp
add
add
das
add
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
adc
adc
adc
adc
adc
add
add
add
lock
pop
adc
adc
adc
adc
adc
lea
add
mov
ds
add
add
jnp
add
add
xor
lar
add
or
adc
lea
add
mov
ins
adc
pop
sub
pop
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
xor
add
add
add
jnp
add
add
or
outs
jns
add
adc
sub
add
movhps
add
push
adc
sub
add
movhps
add
push
adc
adc
add
add
or
adc
lea
add
mov
ins
adc
pop
sub
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
xor
add
add
add
jnp
add
add
adc
adc
pop
outs
jns
add
adc
cmp
add
add
adc
pop
outs
jnp
add
adc
cmp
add
add
adc
pop
outs
jns
add
adc
cmp
add
add
movups
sub
pop
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
xor
add
add
add
jnp
add
add
or
outs
jp
add
adc
sub
add
movhps
add
push
adc
sub
add
movhps
add
push
adc
adc
adc
sub
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
jnp
add
add
xor
add
add
add
jnp
add
add
or
outs
jp
add
adc
sub
add
push
pop
outs
jnp
add
adc
sub
add
push
pop
outs
jp
add
adc
add
jnp
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
pop
jae
add
or
adc
outs
nop
add
or
adc
or
add
or
or
adc
adc
outs
xchg
add
or
adc
push
pop
pop
jae
add
or
adc
outs
nop
add
or
adc
or
add
or
or
adc
pop
adc
xchg
add
or
add
add
add
inc
add
add
add
inc
pop
cmp
add
add
add
or
add
add
add
inc
pop
add
add
add
jnp
add
add
pop
add
add
add
jnp
add
add
pop
adc
adc
adc
adc
adc
add
add
add
lock
pop
adc
adc
sub
push
ds
add
add
add
add
int
add
adc
add
add
or
adc
lea
add
mov
ins
adc
pop
sub
pop
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
adc
pop
outs
jns
add
adc
adc
add
add
or
adc
lea
add
mov
ins
adc
pop
sub
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
adc
pop
outs
jns
add
adc
cmp
movups
sub
pop
adc
sub
add
add
or
add
add
add
inc
pop
and
add
add
add
aas
pop
sub
sub
adc
pop
outs
jp
add
adc
adc
adc
sub
add
add
or
add
add
add
inc
pop
sub
adc
sub
add
add
or
mov
add
ins
and
add
add
add
inc
pop
pop
and
add
add
add
aas
pop
sub
sub
adc
pop
outs
jp
add
adc
add
jnp
add
add
add
jge
add
or
jnp
add
add
add
jnp
add
add
add
push
or
add
add
add
push
outs
jge
add
or
pop
jae
add
or
adc
add
adc
add
or
or
adc
outs
xchg
add
or
adc
push
pop
pop
jae
add
or
push
add
add
or
push
adc
outs
xchg
add
or
or
push
sub
adc
outs
xchg
add
or
adc
dec
add
or
fiadd
outs
mov
add
pop
fisubr
mov
add
add
or
add
adc
add
add
add
xchg
add
or
pop
add
add
or
pop
adc
outs
cwde
add
or
or
pop
sub
adc
outs
xchg
add
or
add
add
add
inc
push
inc
add
add
or
inc
pop
cmp
sbb
jnp
add
add
pop
cmp
outs
mov
add
sub
sbb
call
add
push
jae
add
or
sbb
jae
add
or
sbb
sbb
lea
sbb
sbb
(bad)
or
add
add
add
sbb
(bad)
or
jnp
add
add
or
sbb
(bad)
or
jnp
add
add
or
sbb
(bad)
or
add
add
add
sbb
pushf
add
or
sbb
lea
add
adc
add
add
mov
add
add
mov
call
sbb
add
cmp
adc
or
sbb
sbb
add
or
sbb
sbb
outs
dec
add
or
fiadd
outs
mov
add
sbb
sub
sbb
jnp
add
add
add
add
add
lock
pop
add
add
add
jnp
add
add
pop
add
add
or
lea
add
mov
lahf
add
or
jnp
add
add
adc
dec
add
or
sbb
mov
sub
sbb
mov
inc
adc
sub
inc
pop
adc
sub
inc
pop
adc
sub
inc
pop
sub
add
add
push
pop
xor
add
adc
outs
mov
outs
nop
add
or
sbb
sbb
add
or
outs
nop
add
or
add
or
jnp
add
add
push
add
or
inc
add
add
jnp
add
add
pop
inc
add
add
add
add
add
in
add
add
jnp
add
add
xor
add
add
add
add
add
add
pop
inc
pop
add
add
add
jnp
add
add
pop
sub
adc
fnstsw
jnp
add
add
add
add
add
pop
inc
pop
add
add
add
jnp
add
add
pop
sub
adc
fisttp
jnp
add
add
sub
jnp
add
add
add
add
add
pop
inc
pop
add
add
add
jnp
add
add
pop
sub
adc
ficomp
sbb
add
add
add
add
pop
inc
pop
add
add
add
jnp
add
add
pop
sub
adc
fidiv
jnp
add
add
add
add
add
pop
inc
pop
add
add
add
jnp
add
add
pop
sub
adc
fimul
add
or
sub
add
fiadd
add
add
add
jnp
add
add
fadd
add
or
cmps
add
or
cmps
add
or
add
or
jnp
add
add
outs
dec
add
or
add
or
add
add
add
adc
or
add
add
add
or
add
add
add
pop
adc
or
add
add
add
or
sub
or
add
add
add
adc
or
add
add
add
or
add
add
add
or
in
or
add
add
add
or
add
add
xor
add
add
add
add
(bad)
sub
fs
or
add
sub
add
adc
lods
add
or
sub
adc
pop
add
add
inc
add
adc
add
or
pop
(bad)
sub
add
scas
add
or
and
add
and
add
or
(bad)
sub
add
mov
add
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
(bad)
outs
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
mov
add
(bad)
sub
add
mov
(bad)
sub
add
mov
outs
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
mov
(bad)
sub
add
mov
add
(bad)
sub
add
mov
outs
mov
add
pop
(bad)
sub
add
scas
add
or
add
mov
add
add
and
add
inc
outs
mov
add
pop
sub
add
xor
add
add
add
add
jae
add
or
pop
(bad)
sub
add
scas
add
or
(bad)
sub
add
scas
add
or
add
or
(bad)
sub
add
scas
add
or
add
scas
add
or
(bad)
sub
mov
add
pop
(bad)
sub
add
mov
add
(bad)
sub
add
add
xchg
add
mov
outs
mov
add
pop
(bad)
sub
add
mov
add
(bad)
sub
add
mov
add
add
and
add
add
add
mov
outs
mov
add
pop
(bad)
sub
(bad)
(bad)
sub
add
mov
(bad)
sub
add
scas
add
or
add
mov
outs
mov
add
pop
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
add
scas
add
or
add
mov
add
outs
mov
add
pop
sub
add
xor
add
add
adc
add
or
pop
(bad)
sub
add
scas
add
or
(bad)
sub
add
scas
add
or
add
or
(bad)
sub
add
scas
add
or
add
scas
add
or
(bad)
sub
mov
add
pop
(bad)
sub
add
mov
add
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
(bad)
outs
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
mov
add
(bad)
sub
add
mov
(bad)
sub
add
mov
outs
mov
add
pop
(bad)
sub
add
mov
(bad)
sub
add
mov
(bad)
sub
add
mov
add
(bad)
sub
add
mov
outs
mov
add
pop
(bad)
sub
(bad)
(bad)
sub
add
mov
(bad)
sub
add
scas
add
or
add
mov
outs
mov
add
pop
(bad)
sub
add
scas
add
or
add
mov
(bad)
sub
add
scas
add
or
add
mov
add
outs
mov
add
pop
sub
xor
add
add
add
add
jae
add
or
pop
(bad)
sub
add
scas
add
or
and
add
and
add
or
(bad)
sub
add
mov
add
(bad)
sub
add
add
xchg
add
mov
outs
mov
add
pop
(bad)
sub
add
mov
add
(bad)
sub
add
mov
add
add
and
add
add
add
mov
outs
mov
add
pop
(bad)
sub
add
scas
add
or
add
mov
add
add
and
add
inc
outs
mov
add
pop
(bad)
sub
add
scas
add
or
add
mov
add
(bad)
sub
add
scas
add
or
pop
(bad)
outs
mov
add
pop
sub
xor
rol
add
add
add
add
add
xor
add
(bad)
sub
add
imul
add
imul
sub
add
imul
and
add
add
or
add
cmp
pop
pop
or
cmp
pop
pop
or
and
add
or
and
add
jg
or
pop
or
and
add
or
pop
or
and
add
push
pop
add
push
pop
or
and
add
ss
and
add
or
jg
ss
and
add
or
and
add
ss
and
add
or
add
mov
add
or
add
or
add
or
add
or
or
adc
add
pop
add
add
add
add
outs
daa
add
push
push
outs
dec
add
or
jnp
add
add
cs
add
add
push
pop
outs
dec
add
or
cmp
outs
and
outs
dec
add
or
outs
daa
add
push
push
outs
dec
add
or
jnp
add
add
adc
add
add
or
cmp
jge
add
add
or
pop
les
add
add
add
add
xor
add
add
add
add
add
outs
and
outs
dec
add
or
jnp
add
add
cmp
jnp
add
add
inc
add
jnp
add
add
fidivr
add
add
jnp
add
add
les
sbb
add
or
cmp
jge
add
add
outs
daa
add
push
pop
outs
dec
add
or
dec
add
add
push
pop
outs
dec
add
or
add
jnp
add
add
(bad)
jge
add
add
jnp
add
add
outs
dec
add
or
push
add
les
add
add
outs
daa
add
push
pop
outs
dec
add
or
or
outs
and
outs
dec
add
or
outs
inc
add
or
cmp
outs
and
outs
dec
add
or
outs
daa
add
push
push
outs
dec
add
or
jnp
add
add
adc
add
add
or
cmp
jge
add
add
or
pop
les
add
add
add
xor
add
add
add
add
add
add
push
sub
add
or
adc
cmp
add
adc
sbb
sbb
sub
add
or
outs
ret
or
add
add
or
add
jge
add
add
add
adc
add
or
add
dec
add
adc
jnp
add
add
sub
add
sub
add
add
add
outs
sub
add
sub
add
xor
add
add
dec
add
adc
jnp
add
add
sub
add
sub
add
add
add
outs
sub
add
sub
add
xor
add
add
dec
add
adc
jnp
add
add
sub
add
add
add
outs
add
push
sub
add
xor
add
add
dec
add
adc
jnp
add
add
das
add
push
sub
add
add
add
outs
xor
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
xor
add
sub
add
add
add
outs
xor
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
xor
add
sub
add
add
add
outs
xor
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
xor
add
add
add
outs
add
push
sub
add
xor
add
add
push
add
adc
jnp
add
add
aaa
add
push
sub
add
add
add
outs
cmp
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
cmp
add
sub
add
add
add
outs
cmp
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
cmp
add
sub
add
add
add
outs
cmp
add
sub
add
xor
add
add
push
add
adc
jnp
add
add
cmp
add
add
add
outs
add
push
sub
add
xor
add
add
push
add
adc
jnp
add
add
aas
add
push
sub
add
add
add
outs
inc
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
inc
add
push
sub
add
add
add
outs
inc
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
inc
add
push
sub
add
add
add
outs
inc
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
inc
add
push
sub
push
xor
jb
add
jo
dec
add
or
jnp
add
add
outs
inc
add
push
sub
add
adc
add
or
add
pop
add
adc
jnp
add
add
inc
add
push
sub
add
add
add
outs
dec
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
dec
add
push
sub
add
add
add
outs
dec
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
dec
add
push
sub
add
add
add
outs
dec
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
dec
add
push
sub
add
add
add
outs
dec
add
push
sub
add
xor
add
add
pop
add
adc
jnp
add
add
dec
add
push
sub
add
add
add
outs
push
add
push
sub
add
xor
add
add
pusha
add
adc
jnp
add
add
push
add
push
sub
add
add
add
outs
push
add
push
sub
add
xor
add
add
popa
add
adc
jnp
add
add
push
add
push
sub
add
add
add
outs
push
add
push
sub
add
xor
add
add
adc
outs
ret
add
or
outs
les
add
sub
add
add
outs
ret
add
or
lds
add
sub
add
add
outs
ret
add
or
mov
or
add
sbb
add
sbb
add
add
add
sub
add
or
add
add
fiadd
fsubr
pop
add
push
add
add
or
add
add
or
add
add
add
add
add
add
xchg
add
sub
add
add
outs
add
pop
outs
push
add
or
push
outs
pop
add
or
push
outs
or
add
sub
add
inc
add
or
add
outs
or
add
outs
or
add
sub
add
add
sldt
or
into
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
adc
add
xor
add
add
add
add
adc
add
add
push
add
or
add
xor
add
add
add
add
adc
add
add
pop
add
or
add
xor
add
add
add
add
jle
add
add
sbb
add
sub
adc
add
or
add
add
add
sbb
add
sub
adc
add
sbb
add
push
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
sbb
add
jl
add
add
add
add
sub
add
xor
loop
add
pop
add
adc
mov
add
sbb
(bad)
(bad)
push
add
add
outs
push
add
or
les
add
jle
add
add
sub
pop
add
add
add
add
sub
add
or
add
or
jb
add
jo
lea
and
add
jae
add
or
and
add
add
add
pop
add
add
add
add
sub
add
or
and
add
sub
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
or
or
add
or
add
or
add
or
or
add
or
add
or
pop
add
add
add
add
sub
add
or
add
or
sub
add
push
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
sub
add
add
add
adc
push
add
push
add
sub
adc
add
or
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
pop
add
or
add
xor
add
add
add
add
add
xor
add
sub
adc
add
or
add
adc
add
add
or
das
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
push
add
add
pop
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
sub
adc
add
sbb
add
adc
add
jle
add
or
or
add
add
xor
or
add
or
push
add
sub
add
enter
add
and
add
jae
add
or
retf
or
outs
mov
add
sub
add
sbb
add
and
add
add
add
add
add
add
add
or
jnp
add
add
xchg
add
or
or
add
retf
add
or
sub
add
add
add
add
add
sbb
or
add
add
xor
add
add
arpl
add
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
mov
add
add
add
or
outs
mov
add
adc
and
add
add
push
sub
outs
xchg
add
add
add
push
jb
add
jo
jge
add
add
add
push
adc
pop
dec
pop
pop
sub
add
pop
outs
jg
add
add
add
push
pop
outs
xchg
add
add
add
push
push
outs
int
add
add
add
push
jb
add
jo
into
add
or
outs
mov
add
pop
outs
iret
add
or
outs
mov
add
push
outs
push
add
or
outs
mov
add
pop
outs
rol
add
add
add
push
jb
add
jo
add
inc
inc
push
sbb
jae
add
or
add
or
outs
mov
add
sub
push
add
or
outs
mov
add
adc
push
pop
or
test
add
push
outs
xchg
add
add
add
push
jb
add
jo
jge
add
add
add
push
adc
pop
push
pop
adc
jle
add
pop
outs
jg
add
add
add
push
sbb
add
or
outs
mov
add
jb
add
jo
test
add
add
add
push
adc
push
push
sub
add
pop
outs
pop
add
push
add
add
push
adc
push
push
sub
add
pop
outs
pop
add
push
add
add
push
sub
data16
push
add
add
push
pop
outs
cmp
add
add
add
push
push
outs
xor
add
add
add
push
and
rol
add
push
sub
add
outs
dec
add
push
add
add
push
pop
outs
inc
add
push
add
add
push
and
add
add
add
push
add
add
push
adc
pop
or
sub
or
outs
xchg
add
add
add
push
jb
add
jo
jge
add
add
add
push
sbb
add
push
add
add
push
pop
outs
dec
add
push
add
add
push
and
add
add
push
sub
add
outs
add
push
add
add
push
and
add
add
push
sub
add
outs
cmp
add
add
add
push
and
add
add
push
sub
add
outs
cmp
add
add
add
push
adc
and
add
add
sbb
jle
add
pop
outs
jg
add
add
add
push
push
outs
xchg
add
add
add
push
push
outs
int
add
add
add
push
pop
and
add
push
add
add
add
rol
add
sub
add
or
outs
rol
add
add
outs
aam
add
add
aad
add
outs
(bad)
add
or
adc
and
add
add
outs
sub
add
pop
outs
xlat
add
or
push
outs
fadd
add
add
add
or
outs
mov
add
outs
mov
add
add
add
or
outs
mov
add
outs
mov
add
add
add
or
outs
mov
add
outs
mov
add
add
outs
fld
add
add
outs
fiadd
add
add
outs
fild
add
add
add
jo
jge
add
add
outs
fadd
add
add
outs
fld
add
add
outs
fiadd
add
add
add
jo
fild
add
add
outs
loopne
add
add
outs
mov
add
add
add
or
add
add
xor
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
loop
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
jecxz
add
sub
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
rol
add
add
add
add
add
push
jb
add
add
or
in
add
jb
add
add
or
in
add
sub
sub
add
or
add
add
or
out
add
sub
add
or
add
add
or
in
add
sub
sub
add
push
outs
out
add
sub
add
or
add
add
or
add
add
or
jae
add
or
add
add
jnp
add
add
and
add
jae
add
or
add
or
jnp
add
add
and
add
jae
add
or
add
or
jnp
add
add
mov
out
add
or
in
add
jb
push
add
cmps
add
or
add
or
add
jnp
add
add
sub
add
add
add
or
add
outs
mov
add
add
icebp
add
or
add
push
sub
xor
add
add
adc
repnz
or
mov
add
add
add
push
jb
push
add
test
add
sub
add
or
push
add
cmps
add
or
add
or
push
add
repnz
or
add
or
add
or
outs
test
or
outs
test
add
or
push
add
cmps
add
or
in
add
sub
sub
add
or
push
add
cmps
add
or
out
add
sub
add
or
add
add
or
in
add
sub
sub
add
push
outs
out
add
sub
add
or
add
add
or
push
add
call
outs
mov
add
pop
outs
push
add
or
test
add
outs
mov
add
jb
pop
add
test
add
sub
add
or
in
add
jb
push
add
cmps
add
or
in
add
sub
sub
add
push
outs
out
add
sub
add
or
push
add
cmps
add
or
push
add
call
in
add
jb
add
add
or
out
add
and
stc
add
or
in
add
jb
add
add
or
cli
add
or
fisub
sub
add
or
add
add
push
jb
pop
add
test
add
sub
add
or
push
add
cmps
add
or
add
or
pop
outs
sub
add
outs
cmc
add
or
outs
test
or
outs
test
add
add
sub
add
add
add
push
pop
outs
push
add
or
sub
add
ficom
add
add
add
sub
add
add
add
or
add
add
add
bound
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
sub
add
jle
add
add
jo
add
and
jb
outs
addr16
add
add
dec
add
loopne
add
and
add
add
add
inc
push
dec
inc
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
sbb
add
add
add
add
add
add
add
test
add
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
or
in
add
add
add
add
add
add
push
add
add
add
arpl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
pop
and
push
add
or
push
add
or
push
add
inc
add
inc
add
and
push
add
and
push
add
add
or
add
add
and
push
add
or
add
add
or
add
add
add
inc
add
mov
psadbw
push
add
and
push
add
and
adc
ficom
enter
sub
and
adc
sahf
adc
adc
adc
adc
add
add
add
add
add
adc
adc
and
enter
cmp
enter
adc
push
add
add
add
add
adc
add
adc
add
add
xor
add
test
add
add
add
adc
add
add
adc
adc
add
adc
add
add
xor
add
test
add
add
add
adc
not
sub
or
push
add
push
popf
adc
je
push
add
add
add
push
fst
push
add
add
or
and
push
pop
mov
pop
and
push
add
sbb
add
add
sbb
add
add
inc
add
add
push
add
mov
add
sbb
add
add
sbb
sbb
push
add
sbb
push
add
sbb
add
add
sbb
sbb
push
add
sbb
push
add
add
test
add
enter
outs
sbb
push
add
add
add
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
sbb
add
add
sbb
add
add
popa
sbb
add
add
sbb
add
add
sbb
push
add
sbb
add
add
sbb
add
inc
add
and
push
add
and
push
add
add
jae
imul
mov
xchg
sbb
xchg
adc
add
push
enter
push
push
test
add
enter
mov
add
add
push
add
adc
jecxz
jle
or
icebp
push
fst
push
add
adc
popf
adc
je
push
add
add
add
pop
je
push
add
pop
je
push
add
je
push
add
add
je
add
add
add
add
add
add
add
add
add
sub
aaa
add
add
add
add
aaa
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
fild
jge
cmp
add
add
add
fild
adc
add
add
add
add
add
xor
xor
arpl
inc
add
add
add
add
add
add
add
add
add
add
add
add
int
adc
mov
jmp
adc
ret
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
iret
add
fld
in
push
add
add
add
clc
add
adc
push
add
add
push
out
add
add
push
out
add
add
adc
add
push
push
adc
push
adc
push
sbb
add
ja
sbb
add
xchg
out
add
add
mov
and
add
cli
push
and
add
xor
xor
add
cmp
add
push
jmp
sbb
push
xor
or
push
xor
or
push
cmp
or
push
push
jmp
sbb
push
add
adc
push
add
adc
push
adc
adc
push
push
jmp
sbb
push
sbb
add
adc
add
xor
sbb
push
push
jmp
sbb
push
add
add
adc
pop
add
add
mov
add
jmp
add
adc
adc
xor
add
test
rol
dec
add
add
adc
scas
add
add
add
add
add
push
sbb
add
add
add
add
add
add
add
add
push
sbb
add
add
add
adc
add
sbb
dec
add
add
adc
or
and
add
mov
add
add
adc
xor
add
add
dec
add
add
adc
pop
add
add
add
dec
add
add
adc
js
dec
add
add
dec
add
add
adc
call
dec
add
add
push
or
add
add
cmp
add
push
or
add
add
add
adc
push
add
dec
add
add
add
inc
add
dec
add
add
push
sbb
add
inc
add
add
add
pushf
add
dec
add
add
add
add
dec
add
add
inc
add
add
dec
add
add
inc
add
add
add
add
inc
add
sub
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
add
add
inc
add
dec
add
add
push
sbb
add
add
mov
add
push
sbb
add
and
add
add
or
add
add
and
add
add
or
(bad)
add
add
add
add
adc
ins
add
add
add
add
add
adc
add
sbb
and
add
add
sbb
add
add
add
add
add
add
add
add
add
or
add
int3
and
add
add
or
add
loopne
add
add
inc
or
push
daa
add
hlt
and
add
add
xlat
push
sub
or
inc
and
add
add
or
daa
add
add
add
sbb
sub
or
add
add
or
cmp
push
add
push
or
cmp
and
add
add
or
cmp
verw
add
add
push
or
cmp
and
add
add
or
cmp
adc
mov
add
or
add
and
push
or
add
push
or
add
push
or
add
and
push
or
pop
inc
add
add
add
add
push
or
pop
dec
add
add
add
add
or
pop
push
add
add
add
add
or
pop
push
add
and
or
or
adc
nop
and
push
or
or
adc
add
add
or
or
adc
add
add
or
push
add
add
and
push
or
pop
add
add
and
push
or
popa
add
add
and
push
or
add
add
and
push
or
add
add
add
push
or
dec
add
add
push
or
or
add
add
add
add
or
or
add
add
push
or
or
add
add
or
or
sbb
and
add
add
push
or
or
daa
add
add
push
or
add
push
or
or
daa
add
add
push
or
ja
sbb
cmp
add
add
push
or
push
add
add
add
or
pop
add
add
add
or
inc
add
add
push
or
inc
add
add
add
or
add
push
or
add
sub
add
add
mov
add
sub
add
add
retf
or
and
clc
sub
add
add
fimul
xchg
and
or
add
add
inc
or
or
add
add
push
or
or
sub
add
add
or
or
sub
add
add
or
add
add
add
push
or
add
add
cmp
add
inc
or
inc
add
test
add
add
inc
or
inc
add
add
add
push
add
sub
add
add
or
add
add
sub
add
add
or
add
sub
add
add
or
add
sub
add
add
or
or
add
add
inc
or
or
sub
add
add
in
or
sub
add
add
add
inc
add
add
add
add
inc
or
or
sub
dec
sub
add
add
or
or
sub
add
add
or
or
sub
add
add
pop
or
sub
add
add
imul
mov
add
add
inc
or
push
add
pushf
sub
add
add
mov
pop
add
test
add
add
inc
or
mov
add
mov
into
add
add
add
ror
aam
cs
sub
add
add
jmp
sub
add
add
or
or
add
add
sub
add
add
or
or
add
add
sub
add
add
inc
or
add
add
add
add
inc
or
out
add
add
sub
add
add
or
inc
add
add
add
add
push
or
add
add
add
inc
or
add
add
add
movs
or
add
add
add
add
inc
or
add
add
add
lds
add
add
add
sbb
add
add
add
inc
add
or
add
and
add
add
inc
add
or
add
add
add
dec
add
add
add
add
add
add
inc
add
add
add
gs
and
add
add
add
ja
add
cmp
fadd
add
add
add
add
inc
add
add
add
xchg
or
nop
inc
add
add
add
in
adc
inc
add
inc
add
add
add
cli
or
in
inc
add
add
push
sbb
add
inc
add
add
push
or
cmp
inc
add
add
add
push
or
cmp
inc
add
add
push
or
cmp
inc
add
add
add
push
or
cmp
inc
add
add
push
or
cmp
inc
add
add
or
add
add
or
add
inc
add
add
push
or
add
inc
add
add
push
or
add
inc
add
add
push
or
pop
inc
add
clc
inc
add
add
push
or
pop
dec
add
adc
add
add
or
pop
push
add
and
add
add
or
pop
push
add
cmp
add
add
or
or
dec
add
add
add
push
or
or
dec
add
add
add
push
or
or
dec
add
add
add
push
or
push
add
mov
add
add
or
pop
add
cwde
dec
add
add
push
or
popa
add
mov
add
add
push
or
add
ror
add
push
or
add
dec
add
add
push
or
call
add
or
or
add
add
add
add
or
or
dec
add
add
push
or
or
add
dec
add
add
push
or
or
push
add
dec
add
add
push
or
or
dec
add
add
push
or
add
add
add
push
or
or
dec
add
add
push
or
ja
push
add
add
or
push
add
dec
add
add
push
or
pop
add
dec
add
add
push
or
inc
add
fmul
add
add
or
inc
add
call
add
or
add
dec
add
add
push
or
add
dec
add
add
inc
or
add
dec
add
add
inc
or
or
push
add
dec
add
add
inc
or
or
dec
add
add
inc
or
or
add
add
push
or
or
dec
add
add
push
or
or
dec
add
add
push
or
add
add
or
add
add
dec
add
int3
dec
add
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
push
sbb
add
dec
add
add
inc
add
add
dec
add
add
add
hlt
adc
add
mov
add
add
adc
cdq
add
mov
add
pop
adc
push
add
add
inc
or
test
push
add
and
inc
or
scas
add
or
add
add
inc
or
mov
popa
add
push
add
and
inc
or
add
add
add
add
stos
adc
add
or
add
add
add
mov
add
push
add
add
add
jmp
int
data16
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
pop
add
add
add
add
add
add
or
jmp
push
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
or
or
prefetch
add
add
add
add
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
mov
add
add
ret
or
add
or
add
or
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
js
add
add
adc
add
add
add
add
add
push
add
add
jmp
push
add
add
add
or
add
or
add
or
add
or
in
add
add
icebp
add
add
add
add
add
adc
or
fcom
inc
add
add
adc
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
add
add
adc
es
dec
adc
pop
adc
outs
adc
mov
add
sbb
adc
mov
sbb
sbb
mov
add
adc
xchg
add
add
add
add
icebp
add
add
add
add
add
add
add
and
es
sub
adc
mov
add
add
add
add
push
sbb
and
out
mov
mov
pop
xchg
add
mov
pop
push
push
jno
ins
pop
push
push
add
js
sbb
rol
mov
add
add
add
add
add
add
add
add
pop
aas
push
add
int
inc
add
add
pop
inc
add
add
add
or
add
fimul
xchg
add
out
mov
jns
add
xchg
add
(bad)
xchg
add
add
add
inc
add
pop
or
inc
add
inc
add
jl
popf
add
xchg
or
or
or
or
or
or
popa
add
or
popa
add
or
or
or
or
add
add
push
add
add
add
mov
into
add
add
or
add
add
or
add
adc
add
and
add
add
jmp
add
add
inc
add
add
add
add
add
add
or
add
mov
add
pop
jg
jno
mov
add
add
pop
add
add
add
sbb
sbb
sbb
sbb
add
add
call
push
cdq
add
add
lods
add
add
ja
add
call
adc
cmps
sbb
inc
add
or
add
add
add
sbb
add
add
sbb
push
xchg
add
sbb
push
cdq
add
add
add
sbb
push
xchg
add
add
xchg
add
pop
jno
mov
add
add
add
add
add
mov
push
pop
add
loope
fcomp
ja
loope
(bad)
pop
cmps
add
add
sbb
loope
mov
add
sbb
pop
xchg
add
sbb
pop
xchg
add
sbb
add
pop
test
pop
jns
and
add
add
sbb
xchg
add
add
sbb
xchg
add
sbb
fld
mov
add
cmps
add
add
sbb
sbb
sbb
sbb
push
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
stc
add
in
adc
add
or
add
add
add
add
add
add
add
sbb
adc
add
add
add
sbb
dec
add
sbb
sbb
jns
ud2
inc
add
adc
mov
add
and
popa
add
sub
imul
sub
mov
pop
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
and
add
add
sbb
xor
sbb
add
inc
sbb
dec
sbb
pop
sbb
js
arpl
add
mov
(bad)
sbb
aad
and
sbb
mov
add
add
jae
mov
add
jp
test
add
add
adc
sbb
mov
mov
cmps
add
add
add
add
add
push
add
add
sbb
rol
adc
add
add
push
sbb
push
mov
rol
jmp
mov
fld
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
jp
or
mov
jg
or
mov
add
add
or
les
jp
or
int3
add
or
rol
jp
or
aam
jg
or
fadd
test
or
loopne
jne
and
imul
add
add
add
add
jne
sub
jecxz
mov
add
or
add
or
cs
pop
or
add
or
add
sbb
dec
adc
add
or
adc
add
or
cs
pop
rcl
cs
pop
fcom
cs
pop
sti
adc
jae
jne
inc
add
add
push
add
add
jecxz
mov
pusha
add
jne
arpl
push
add
add
pop
add
add
jecxz
iret
add
add
add
add
add
add
add
add
add
pop
add
add
add
jne
ret
add
add
pop
add
add
jne
loope
fwait
add
jecxz
stos
add
add
pop
add
add
jne
add
mov
jne
add
fwait
add
add
fild
jne
add
mov
jne
add
rol
jne
add
pop
add
add
rol
jne
or
push
add
add
add
jne
and
pop
add
add
add
add
add
add
arpl
jne
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
push
mov
add
add
jne
leave
add
add
retf
add
mov
add
add
add
ret
add
arpl
jne
loopne
push
add
add
add
add
retf
add
ret
add
rol
mov
dec
or
add
add
pop
add
add
push
add
or
rol
fild
mov
mov
or
retf
add
mov
add
add
push
add
add
add
pop
jne
sub
ret
add
mov
stos
or
add
add
retf
add
rol
mov
add
pop
add
mov
add
add
ret
add
retf
add
rol
mov
in
pusha
add
pop
add
rol
mov
pop
or
repz
ret
add
retf
add
mov
add
jne
add
add
add
or
add
sbb
(bad)
or
or
or
add
add
add
sbb
or
or
or
or
add
jne
rol
add
add
add
add
add
ret
add
mov
add
leave
add
add
retf
add
arpl
jne
loopne
push
add
add
add
add
retf
add
rol
repz
mov
add
add
jne
or
ret
add
fild
mov
add
add
add
retf
add
arpl
jne
sub
rol
mov
add
add
mov
xchg
or
add
add
fild
arpl
jne
inc
add
pop
add
repz
mov
add
add
rol
mov
out
dec
add
add
arpl
jne
imul
imul
imul
imul
imul
imul
add
add
add
add
or
dec
sbb
sbb
push
or
or
or
or
add
sbb
sub
test
push
leave
add
add
mov
lods
push
leave
add
add
mov
add
add
jmp
sbb
cs
add
add
ret
add
retf
add
rol
mov
jmp
or
add
mov
add
add
rol
repz
mov
mov
add
ret
add
rol
mov
add
add
rol
jne
inc
add
add
add
mov
pop
adc
mov
add
add
retf
add
rol
mov
add
add
retf
add
jmp
sbb
push
or
rol
ret
add
ret
add
jecxz
dec
or
add
add
jecxz
ja
jmp
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
or
or
add
sbb
or
or
or
add
or
or
or
add
cmp
leave
push
mov
mov
leave
push
mov
push
rol
ret
add
retf
add
rol
mov
stos
or
push
mov
push
jmp
push
or
push
ret
add
retf
add
ret
add
rol
mov
in
or
mov
pop
jmp
sbb
sbb
sbb
pop
or
pop
mov
pop
repz
ret
add
retf
add
mov
(bad)
or
mov
pop
repz
ret
add
retf
add
rol
jecxz
mov
add
retf
add
repz
mov
pop
ret
add
rol
jecxz
ret
pop
ret
add
mov
pop
rol
retf
add
mov
add
mov
repz
jecxz
scas
adc
add
pop
or
pop
ret
add
mov
pop
mov
lahf
or
add
cs
pop
fild
ret
add
retf
add
rol
mov
inc
or
pop
retf
add
mov
xchg
or
pop
rol
mov
pop
fild
ret
add
mov
or
add
rol
mov
out
or
repz
ret
add
retf
add
mov
pop
or
sbb
or
or
add
ret
add
mov
ret
or
add
mov
or
add
ret
add
retf
add
mov
or
add
ret
add
retf
add
rol
mov
pop
push
mov
retf
add
rol
mov
or
add
ret
add
mov
lods
push
test
or
add
sbb
imul
push
or
push
leave
or
add
retf
add
mov
mov
add
repz
ret
add
rol
mov
fild
jmp
pop
jmp
or
or
add
mov
or
add
rol
ret
add
mov
pop
adc
or
add
mov
xchg
sub
mov
or
add
jmp
sbb
sbb
jne
inc
push
jae
jne
push
outs
add
add
loope
and
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
sbb
push
and
and
and
xor
push
sub
sub
sub
xor
and
and
ss
cmp
add
push
xor
push
dec
push
push
push
xor
add
push
push
push
pop
push
xor
push
sub
imul
push
jne
jp
xor
push
cmps
push
jmp
inc
pop
push
push
xchg
pop
xchg
pop
xchg
pop
xchg
pop
fwait
pop
repz
push
and
and
xor
push
sub
sub
sub
xor
and
and
ss
cmp
add
push
xor
push
dec
push
push
push
xor
adc
dec
adc
adc
add
add
add
add
add
add
add
add
add
add
adc
xor
adc
dec
add
add
add
add
enter
add
push
add
add
add
add
fiadd
jbe
add
pusha
add
add
add
add
add
add
add
out
add
pop
add
sub
add
add
adc
sbb
add
and
sbb
add
or
push
add
add
add
push
push
add
add
push
and
add
dec
push
and
add
pop
push
add
add
sub
add
jns
sub
add
xchg
sub
add
xchg
push
xor
add
movs
push
push
add
add
ror
xor
push
cmp
add
out
cmp
add
lock
sub
add
cli
push
and
add
or
add
add
movntps
add
(bad)
inc
add
add
add
mov
add
cmp
and
add
inc
mov
add
push
cmovge
add
popa
cmovge
add
jae
push
add
add
sbb
push
add
add
pop
add
add
add
add
add
imul
add
or
add
add
add
cmovge
add
fimul
dec
add
add
add
add
add
add
push
push
add
add
push
and
add
dec
push
and
add
pop
push
add
add
sub
add
jns
sub
add
xchg
sub
add
xchg
push
xor
add
movs
push
push
add
add
ror
xor
push
cmp
add
out
cmp
add
lock
sub
add
cli
push
and
add
or
add
add
movntps
add
(bad)
inc
add
add
add
mov
add
xor
add
adc
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
add
aaa
add
add
cmp
add
inc
add
add
add
cmp
add
inc
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
popa
add
add
popa
add
add
arpl
add
jo
arpl
add
jno
add
add
add
add
add
add
add
add
add
add
add
xchg
ins
add
add
add
add
add
add
add
mov
jae
add
lea
jne
add
mov
jne
add
pop
ja
add
nop
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
cwde
add
add
xchg
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
or
add
fild
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
and
add
add
add
add
add
test
add
add
add
add
add
add
add
or
add
mov
add
add
pop
add
add
add
pop
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
dec
add
add
add
add
add
adc
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
push
gs
jne
arpl
add
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
gs
inc
popa
jb
push
dec
push
pop
push
jo
popa
je
pop
dec
outs
bound
add
jb
inc
popa
jb
gs
outs
je
add
jb
inc
popa
jb
ins
outs
ja
outs
fs
dec
gs
inc
popa
jb
gs
outs
je
addr16
popa
ins
arpl
popa
je
outs
outs
dec
outs
fs
dec
gs
inc
popa
jb
outs
ins
outs
jb
push
dec
outs
fs
dec
gs
inc
popa
jb
outs
outs
ins
push
je
imul
push
jo
popa
je
jb
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
add
arpl
add
inc
jb
popa
je
dec
popa
imul
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
push
jo
popa
je
jb
ins
pop
push
jo
popa
je
jb
jae
je
push
jo
popa
je
jb
push
popa
ins
jne
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
push
jns
je
ins
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
jne
add
ins
je
jb
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jbe
outs
je
jb
jae
inc
jne
outs
push
popa
jbe
push
gs
imul
outs
fs
add
je
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
gs
outs
outs
je
outs
ins
add
jae
gs
cs
jb
ja
outs
add
ins
outs
jb
pop
bound
fs
outs
ins
outs
jb
pop
bound
imul
popa
imul
arpl
gs
popa
imul
arpl
gs
popa
imul
arpl
gs
popa
imul
ins
outs
je
inc
outs
ins
outs
jb
pop
jae
ins
outs
je
inc
outs
ins
outs
jb
pop
jae
ins
outs
je
inc
outs
ins
outs
jb
pop
ins
outs
ja
outs
ins
outs
jb
pop
jae
ins
outs
je
outs
jne
je
pop
jbe
ins
jne
add
popa
js
popa
ins
jne
add
imul
add
gs
outs
je
push
je
jb
push
push
outs
ins
add
gs
outs
je
push
je
jb
push
push
outs
ins
add
jb
ja
push
outs
ins
fs
pop
arpl
outs
jb
push
outs
ins
fs
pop
ins
outs
ja
outs
fs
ins
outs
ja
jo
gs
ins
outs
ja
popa
jne
add
ins
outs
ja
outs
jae
je
outs
outs
add
gs
outs
je
addr16
outs
fs
imul
gs
pop
arpl
outs
addr16
outs
fs
jae
gs
cs
imul
imul
ins
jb
outs
imul
outs
ja
addr16
je
jb
outs
imul
outs
ja
jae
je
je
jb
outs
imul
outs
ja
push
imul
jae
popa
ins
jne
add
ins
jb
ins
outs
ja
popa
jne
add
je
je
jb
ins
outs
ja
popa
jne
add
je
je
jb
ins
outs
ja
popa
jne
add
gs
add
push
gs
outs
je
jae
outs
outs
dec
popa
jb
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
je
dec
popa
js
popa
ins
jne
add
je
dec
popa
js
popa
ins
jne
add
je
dec
imul
add
je
dec
imul
add
je
inc
jb
ja
push
outs
ins
fs
jae
je
inc
jb
ja
push
outs
ins
fs
addr16
inc
outs
ins
outs
jb
push
outs
ins
fs
jae
je
inc
outs
ins
outs
jb
push
outs
ins
fs
addr16
push
gs
outs
je
outs
jne
je
jae
je
push
gs
outs
je
outs
jne
je
addr16
push
gs
outs
je
inc
outs
ins
outs
jb
jae
je
push
gs
outs
je
inc
outs
ins
outs
jb
addr16
push
gs
outs
je
inc
outs
ins
outs
jb
jae
je
push
gs
outs
je
inc
outs
ins
outs
jb
addr16
push
gs
outs
je
inc
outs
ins
outs
jb
jae
je
push
gs
outs
je
inc
outs
ins
outs
jb
addr16
inc
outs
ins
outs
jb
push
dec
outs
fs
je
inc
outs
ins
outs
jb
push
dec
outs
fs
je
push
gs
outs
je
push
je
jb
push
push
outs
ins
add
je
push
gs
outs
je
push
je
jb
push
push
outs
ins
add
je
push
gs
outs
je
push
je
jb
push
push
outs
ins
add
je
push
gs
outs
je
push
je
jb
push
push
outs
ins
add
je
inc
ins
outs
ja
outs
fs
je
inc
ins
outs
ja
outs
fs
je
inc
ins
outs
ja
jo
gs
je
inc
ins
outs
ja
jo
gs
je
inc
ins
outs
ja
popa
jne
add
je
inc
ins
outs
ja
popa
jne
add
je
inc
ins
outs
ja
outs
ins
outs
jb
jae
je
inc
ins
outs
ja
outs
ins
outs
jb
addr16
push
gs
outs
je
addr16
push
gs
push
gs
outs
je
addr16
push
gs
push
gs
outs
je
addr16
popa
jae
fs
outs
add
je
push
gs
outs
je
addr16
popa
jae
fs
outs
add
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
inc
outs
outs
je
addr16
inc
outs
outs
je
jae
je
inc
outs
outs
je
inc
outs
outs
je
outs
je
ins
imul
add
je
push
gs
inc
ins
imul
pop
push
gs
inc
ins
imul
pop
push
imul
gs
jae
je
push
imul
gs
addr16
inc
ins
ins
outs
ja
jb
jo
jae
je
inc
ins
ins
outs
ja
jb
jo
addr16
inc
jne
outs
push
arpl
ins
ins
add
je
inc
jne
outs
push
arpl
ins
ins
add
jp
add
je
inc
jne
outs
push
arpl
ins
ins
dec
popa
jb
imul
inc
jne
outs
push
arpl
ins
ins
dec
popa
jb
imul
inc
jne
outs
push
arpl
ins
ins
dec
imul
jae
je
inc
jne
outs
push
arpl
ins
ins
dec
imul
push
outs
imul
pop
inc
jne
outs
push
arpl
ins
ins
dec
data16
je
jae
je
inc
jne
outs
push
arpl
ins
ins
dec
data16
je
addr16
inc
jne
outs
push
imul
pop
inc
jne
outs
push
imul
outs
push
imul
add
je
inc
jne
outs
push
imul
add
je
inc
jne
outs
push
imul
add
je
push
popa
ins
imul
je
inc
jne
outs
push
popa
ins
imul
je
inc
jne
outs
push
popa
ins
imul
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
dec
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
addr16
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
gs
je
ins
add
outs
je
js
dec
outs
jne
je
imul
inc
outs
outs
je
js
dec
outs
jne
je
imul
inc
outs
outs
je
js
dec
outs
jne
je
imul
inc
popa
jne
gs
popa
ins
imul
jae
je
inc
popa
jne
gs
popa
ins
imul
addr16
dec
popa
js
ins
jne
push
imul
pop
dec
popa
js
ins
jne
push
imul
pop
dec
imul
imul
pop
dec
imul
imul
outs
je
jbe
outs
je
jb
jae
dec
outs
push
popa
imul
addr16
jne
add
push
popa
imul
push
jb
data16
gs
imul
jo
jae
fs
imul
je
ins
cs
jb
ja
outs
addr16
jb
ja
outs
xor
inc
jb
jo
imul
add
arpl
ins
add
je
gs
outs
jne
fs
popa
je
add
fs
push
push
imul
outs
fs
popa
je
add
je
outs
push
outs
jne
fs
popa
je
add
je
outs
jne
fs
popa
je
add
gs
je
inc
outs
ins
outs
jb
imul
arpl
dec
imul
jae
outs
jb
imul
outs
jb
arpl
jb
arpl
outs
inc
popa
arpl
add
popa
jo
gs
jbe
outs
je
jb
jae
je
jb
ins
outs
ja
popa
jne
gs
inc
ins
popa
jo
gs
inc
outs
imul
outs
ja
inc
ins
popa
jo
gs
inc
outs
imul
outs
ja
je
jb
ins
outs
ja
popa
jne
add
js
popa
ins
jne
add
outs
push
popa
ins
jne
add
ja
push
outs
ins
fs
inc
outs
ins
outs
jb
push
outs
ins
fs
push
gs
outs
je
outs
jne
je
push
gs
outs
je
inc
outs
ins
outs
jb
push
gs
outs
je
inc
outs
ins
outs
jb
push
gs
outs
je
inc
outs
ins
outs
jb
inc
outs
ins
outs
jb
push
dec
outs
fs
ins
outs
je
push
je
jb
push
push
outs
ins
add
ins
outs
je
push
je
jb
push
push
outs
ins
add
outs
ja
outs
fs
outs
ja
jo
gs
outs
ja
popa
jne
add
outs
ja
outs
ins
outs
jb
push
gs
outs
je
addr16
push
gs
outs
je
addr16
popa
jae
fs
outs
add
jb
inc
outs
ins
outs
jb
push
gs
inc
ins
imul
push
gs
inc
ins
ins
outs
ja
jb
jo
inc
jne
outs
push
arpl
ins
ins
add
je
push
arpl
ins
ins
dec
popa
jb
imul
push
arpl
ins
ins
dec
imul
inc
jne
outs
push
arpl
ins
ins
dec
data16
je
inc
jne
outs
push
imul
imul
outs
jb
inc
popa
arpl
jb
jne
fs
ins
popa
add
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
jne
gs
popa
ins
imul
dec
popa
js
ins
jne
push
imul
imul
add
jne
add
ins
jne
pop
pop
add
add
add
gs
outs
add
outs
addr16
jae
dec
outs
ins
jns
push
push
popa
jb
push
gs
outs
je
xor
push
gs
outs
je
pop
xor
add
outs
ins
gs
outs
outs
je
outs
ins
add
ins
outs
je
add
ins
push
je
imul
outs
ins
dec
outs
jae
add
gs
inc
popa
jb
arpl
jae
jb
imul
jp
add
outs
je
outs
ins
add
push
jne
jae
jb
bound
outs
outs
je
outs
ins
inc
jbe
outs
je
add
dec
outs
push
outs
jae
bound
jb
bound
outs
outs
je
outs
ins
inc
jbe
outs
je
add
jo
jae
add
jo
jae
outs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
pop
dec
gs
inc
popa
jb
add
je
dec
gs
inc
popa
jb
add
je
dec
gs
inc
popa
jb
add
je
outs
outs
add
jne
je
outs
inc
ins
outs
jae
add
je
inc
jne
je
outs
inc
ins
outs
jae
add
je
inc
jne
je
outs
inc
ins
outs
jae
add
popa
bound
dec
gs
popa
addr16
addr16
dec
popa
bound
dec
gs
popa
addr16
jae
je
dec
popa
bound
dec
gs
popa
addr16
push
jns
je
ins
cs
gs
push
bound
imul
add
fs
je
jb
dec
outs
popa
add
je
outs
outs
inc
ins
outs
jae
pop
inc
ins
imul
outs
ins
outs
popa
fs
jb
addr16
jae
inc
push
fs
jbe
outs
je
jb
jae
dec
outs
inc
outs
ja
ins
outs
popa
fs
jb
addr16
jae
inc
push
add
jns
arpl
ins
jo
gs
fs
jbe
outs
je
jb
jae
dec
outs
inc
imul
outs
popa
fs
outs
ins
jo
gs
add
jb
inc
popa
jb
add
je
outs
outs
inc
ins
outs
jae
add
gs
dec
gs
popa
addr16
addr16
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
pop
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jae
gs
cs
push
imul
imul
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
imul
gs
jbe
outs
je
popa
outs
fs
gs
jb
ins
outs
jbe
pop
inc
ins
popa
jo
gs
fs
inc
ins
popa
jo
gs
jbe
ins
imul
je
inc
outs
popa
bound
add
je
push
imul
pop
inc
outs
popa
bound
add
je
dec
outs
je
jb
popa
ins
add
je
push
add
je
inc
add
je
inc
add
outs
ins
inc
jb
bound
addr16
push
imul
jae
je
push
imul
push
arpl
ins
ins
popa
bound
outs
outs
je
outs
ins
add
je
dec
popa
ins
add
je
push
imul
je
outs
ins
push
je
ins
gs
push
gs
je
ins
add
je
push
jb
outs
jae
popa
jb
outs
je
push
jne
jo
outs
fs
popa
jns
jne
add
imul
ins
add
je
inc
outs
arpl
push
jns
je
ins
inc
outs
ins
outs
jb
add
je
inc
outs
outs
je
outs
ins
push
gs
add
je
dec
outs
arpl
imul
pop
push
popa
bound
fs
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
push
gs
ins
gs
popa
jns
jne
add
jne
push
add
je
dec
imul
je
add
jne
add
gs
jb
jb
imul
jae
add
gs
jb
jb
imul
add
popa
jo
imul
pop
inc
jb
jo
imul
ins
push
popa
je
add
imul
ins
add
ja
imul
outs
jb
ins
outs
add
outs
outs
je
imul
add
je
push
ins
outs
outs
je
imul
add
je
jb
outs
ins
popa
je
outs
outs
dec
outs
fs
je
dec
outs
je
jb
outs
ins
popa
je
outs
outs
dec
outs
fs
ja
popa
je
add
je
inc
gs
outs
dec
outs
fs
je
push
push
jae
je
inc
outs
ins
outs
jb
add
outs
ins
add
je
push
outs
jae
je
outs
outs
jae
jae
je
dec
outs
je
jb
outs
ins
popa
je
outs
outs
inc
outs
ins
outs
jb
add
je
push
imul
pop
pop
add
je
ins
imul
push
arpl
ins
add
jae
je
ins
imul
xor
inc
outs
jb
popa
je
inc
outs
outs
arpl
add
je
push
gs
add
je
dec
imul
je
pop
add
je
pop
add
fs
jb
add
fs
imul
pop
inc
add
popa
jne
je
jb
jo
jb
jns
je
jb
bound
add
ins
bound
inc
imul
jb
bound
add
jb
popa
ins
imul
je
jb
bound
add
arpl
jo
imul
imul
popa
je
outs
jb
inc
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
outs
fs
bound
je
jb
bound
add
popa
ins
imul
je
jb
bound
add
popa
jne
je
popa
ins
jne
inc
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
fs
ins
push
je
imul
jae
je
push
popa
fs
pop
inc
outs
outs
je
outs
ins
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
gs
outs
add
ins
push
je
imul
gs
outs
gs
jbe
imul
jns
je
jb
bound
add
ins
push
je
imul
gs
outs
gs
jbe
imul
jns
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
jp
inc
add
je
push
popa
bound
outs
jo
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
popa
arpl
jae
je
inc
ins
imul
add
je
inc
outs
outs
je
outs
ins
inc
outs
js
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
outs
jo
outs
jae
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
pop
push
je
jb
jne
push
popa
je
add
jae
gs
cs
dec
add
ins
add
imul
ins
gs
add
jb
gs
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
ins
gs
jns
je
ins
push
jb
js
add
je
inc
imul
ins
add
outs
popa
ins
gs
imul
ins
outs
popa
fs
jb
addr16
jae
inc
push
fs
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
outs
ja
ins
outs
popa
fs
jb
addr16
jae
inc
push
add
jns
arpl
ins
jo
gs
fs
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
outs
ja
ins
outs
popa
fs
imul
gs
add
imul
ins
outs
popa
fs
imul
add
outs
jae
add
outs
addr16
jae
inc
push
fs
jbe
outs
je
jb
jae
addr16
push
jb
addr16
jae
push
gs
outs
je
add
jb
popa
ins
push
jb
je
jb
addr16
inc
jb
outs
jb
push
gs
push
jb
je
jb
push
jb
je
dec
imul
jbe
outs
je
add
gs
add
gs
push
jb
arpl
jae
push
je
jb
add
imul
outs
gs
je
fs
je
jb
bound
add
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
jo
popa
je
jb
jb
jae
jne
arpl
add
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
jne
arpl
cs
jae
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
dec
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
add
add
inc
push
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
push
add
push
add
add
je
add
dec
add
bound
bound
jns
add
add
outs
add
jb
arpl
add
add
add
add
add
jne
and
arpl
popa
add
daa
add
add
add
add
popa
add
and
jbe
popa
add
add
and
je
outs
add
add
and
jbe
popa
add
add
and
je
push
add
add
jb
and
add
jne
popa
add
add
add
add
imul
jbe
popa
add
add
and
add
add
and
arpl
popa
add
daa
add
add
add
add
imul
jbe
popa
add
add
and
je
outs
add
add
and
jbe
popa
add
add
and
push
add
add
and
je
push
add
add
jb
and
add
jne
popa
add
add
add
add
popa
add
and
jbe
popa
add
add
and
add
add
add
add
je
and
xor
and
push
add
add
je
and
push
add
jb
add
push
add
add
jne
jae
je
and
bound
add
add
add
add
add
and
ins
add
outs
add
add
outs
add
add
popa
add
and
jbe
popa
add
add
add
add
add
add
je
and
xor
and
push
add
add
je
and
push
add
jb
add
push
add
add
jne
jae
je
and
bound
add
add
add
add
add
and
ins
add
outs
add
add
outs
add
add
popa
add
and
jbe
popa
add
add
add
add
add
add
ins
add
ja
push
add
add
add
add
popa
add
add
and
arpl
popa
add
outs
add
je
and
bound
add
add
add
outs
add
add
jb
and
outs
add
add
je
imul
add
add
add
add
ins
add
ja
push
add
jne
jae
add
add
popa
add
add
and
arpl
popa
add
outs
add
je
and
bound
add
add
add
outs
add
add
jb
and
outs
add
add
je
imul
add
dec
add
jb
outs
add
popa
add
add
push
add
jb
arpl
add
je
dec
add
bound
add
or
xor
jge
and
add
je
je
outs
add
inc
add
add
add
or
ins
add
jae
add
sub
imul
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
dec
add
bound
add
add
jae
jae
popa
add
add
add
dec
add
jae
jae
popa
add
add
add
dec
add
jb
outs
add
popa
add
xor
add
push
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
jo
add
je
add
dec
add
bound
bound
jns
add
inc
add
ja
outs
add
add
add
outs
add
and
jb
add
jne
imul
add
add
jo
add
je
add
add
and
add
push
add
add
bound
jns
add
js
add
add
popa
add
add
pop
add
dec
add
dec
add
bound
bound
jns
add
js
add
and
dec
add
dec
add
bound
bound
jns
add
js
add
add
popa
add
add
add
add
add
add
add
imul
ins
add
je
imul
ins
add
je
outs
add
jae
jo
outs
add
je
jae
add
outs
add
outs
add
add
jo
add
je
add
add
dec
add
dec
add
bound
bound
jns
push
add
add
add
dec
add
dec
add
bound
bound
jns
add
js
add
sub
add
push
add
add
bound
jns
add
js
add
add
jo
add
je
add
outs
push
add
add
je
add
add
popa
add
ins
add
add
add
add
push
add
and
push
add
add
je
add
inc
add
jb
outs
add
add
add
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
and
add
add
je
add
inc
add
jb
outs
add
add
add
add
push
add
push
add
add
bound
jns
add
js
add
inc
push
add
add
je
add
add
outs
add
jo
ins
add
je
add
add
add
add
je
popa
add
je
imul
and
ins
add
bound
bound
jns
add
add
add
add
add
add
add
add
outs
add
push
add
bound
bound
jns
add
add
push
add
and
push
add
add
je
add
inc
add
jb
outs
add
add
add
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
add
add
or
test
test
dec
or
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
add
add
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
adc
add
adc
or
adc
add
add
inc
add
adc
add
adc
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
sbb
add
add
inc
add
add
add
add
push
adc
add
add
add
push
adc
add
adc
and
add
and
adc
and
add
and
add
add
push
sbb
add
add
sub
and
or
adc
push
adc
add
or
add
or
push
or
push
adc
add
adc
push
adc
add
add
cmp
cmp
push
adc
and
or
or
add
add
add
add
xor
xor
add
xor
adc
cmp
and
add
cmp
and
adc
xor
and
add
add
add
cmp
cmp
add
inc
add
inc
add
add
inc
add
inc
add
add
dec
add
dec
add
add
dec
add
dec
add
add
push
add
push
add
add
push
add
push
add
add
pop
add
pop
add
add
pop
add
pop
add
add
popa
add
popa
add
add
gs
gs
imul
adc
and
adc
jno
pop
and
adc
and
add
jne
sub
adc
add
add
add
add
xor
add
xor
cmp
sub
adc
sub
or
add
cmp
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
popa
add
add
gs
add
add
add
add
add
add
add
add
push
adc
and
add
add
add
add
sub
and
add
sub
push
adc
adc
add
or
add
cmp
lea
and
add
sub
sbb
adc
adc
adc
mov
add
cmp
add
add
add
push
push
and
add
sbb
and
adc
adc
add
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
add
add
push
adc
or
adc
or
adc
adc
adc
adc
adc
sbb
add
or
pop
add
or
add
adc
add
adc
pop
add
sbb
add
push
adc
add
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
jns
inc
outs
jb
jae
add
add
dec
jns
push
jae
jb
add
add
inc
add
add
inc
pop
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
sub
and
adc
add
adc
add
pop
add
add
adc
pop
add
add
add
add
add
add
add
add
add
sbb
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
sbb
and
adc
add
adc
adc
adc
add
add
and
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
sbb
and
add
push
and
add
sbb
and
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
cmp
xor
xor
xor
add
add
and
add
or
cs
gs
imul
pop
add
cmp
and
add
sbb
add
xor
add
xor
cmp
pop
add
xor
and
add
xor
add
add
cmp
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
popa
add
add
gs
add
adc
and
add
or
and
add
and
add
adc
adc
adc
cmp
add
add
or
or
add
adc
xor
inc
add
dec
or
add
adc
and
add
xor
add
cmp
adc
or
ins
adc
jno
jno
xor
and
add
adc
sbb
cmp
add
sbb
add
sbb
add
adc
jno
and
add
xor
add
push
inc
pop
pop
adc
adc
adc
ins
adc
or
adc
adc
adc
adc
adc
adc
add
sbb
and
add
or
or
push
pop
add
ins
adc
pop
add
adc
add
add
push
and
add
sbb
sbb
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
inc
popa
jb
outs
gs
bound
bound
add
push
add
sbb
and
jb
outs
je
and
js
and
outs
je
add
sgdtd
or
jo
popa
jb
outs
arpl
add
add
add
adc
push
jb
inc
popa
jb
jae
jbe
ins
jne
add
or
add
dec
gs
inc
popa
jb
add
add
add
add
sbb
push
jb
inc
popa
jb
jae
ins
popa
js
ins
jne
and
ins
jne
add
or
add
add
add
add
add
adc
add
ins
jb
ins
outs
ja
popa
jne
add
and
add
push
jb
inc
popa
jb
jae
ins
imul
jbe
ins
jne
add
cmp
add
gs
jb
imul
and
and
gs
outs
ins
fs
jae
outs
jne
and
and
outs
ja
and
and
je
add
arpl
add
gs
jb
imul
and
and
gs
outs
ins
fs
jae
outs
jne
and
and
ins
outs
jb
and
arpl
imul
je
and
ins
arpl
and
ins
outs
je
arpl
outs
jb
outs
jb
outs
outs
je
add
adc
add
je
jb
outs
imul
outs
ja
add
add
push
push
ins
bound
and
and
ins
outs
je
and
ja
outs
and
and
and
gs
xor
add
push
dec
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
inc
popa
jb
dec
gs
inc
popa
jb
gs
outs
je
add
add
and
add
push
push
ins
outs
jb
outs
data16
and
jb
je
jae
ins
outs
je
add
js
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
ins
outs
jb
and
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
or
xor
sub
xor
add
push
ins
outs
jb
outs
data16
and
arpl
and
ins
outs
je
add
js
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
ins
outs
jb
and
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
or
xor
xor
add
and
add
push
push
ins
outs
jb
outs
data16
and
jb
and
ins
outs
je
add
jbe
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
ins
outs
jb
and
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
or
xor
sub
xor
add
add
gs
jb
imul
and
and
dec
dec
inc
and
jb
jae
outs
jne
and
popa
outs
and
ins
outs
jb
ja
outs
and
gs
outs
ins
and
and
jae
gs
and
ins
jns
je
and
js
and
ins
outs
je
add
add
xor
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
inc
popa
jb
dec
gs
inc
popa
jb
outs
ins
outs
jb
push
dec
outs
fs
push
gs
outs
je
add
inc
add
ds
push
ja
jb
je
jb
jae
outs
ins
and
jae
popa
jb
imul
imul
data16
and
arpl
and
ins
outs
je
add
or
add
add
add
add
add
add
ins
outs
ja
jb
je
jb
jae
outs
ins
and
jae
popa
jb
imul
imul
data16
and
jb
and
ins
outs
je
add
or
add
add
add
adc
add
add
inc
gs
jb
imul
and
and
jb
inc
popa
jb
jae
outs
jne
and
jbe
and
and
imul
ins
outs
ja
outs
jb
outs
outs
je
add
xor
add
push
dec
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
inc
popa
jb
dec
gs
inc
popa
jb
ins
outs
ja
outs
fs
dec
outs
outs
add
pop
add
push
push
push
ins
and
je
gs
and
and
outs
ja
popa
fs
outs
arpl
and
and
ins
ins
imul
jae
and
gs
jbe
ins
jne
and
addr16
jo
gs
arpl
add
or
add
add
add
cmp
add
push
push
jne
and
je
gs
and
and
outs
ja
popa
outs
imul
jae
imul
imul
jae
add
or
add
add
add
push
push
ins
outs
jb
outs
data16
and
imul
ins
outs
ja
add
jg
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
ins
outs
jb
and
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
adc
xor
xor
xor
xor
add
cmp
gs
imul
and
outs
addr16
jae
and
jb
outs
je
and
outs
jne
and
and
outs
ja
and
and
je
add
jge
add
gs
jb
imul
and
outs
addr16
jae
and
jb
outs
je
and
outs
jne
and
and
ins
arpl
popa
je
and
jae
and
and
and
ins
outs
je
imul
jae
ins
outs
je
jae
and
and
and
outs
ins
and
outs
je
outs
ins
and
fs
add
dec
add
cmp
push
pop
push
jo
popa
je
pop
dec
outs
bound
cs
gs
inc
popa
jb
dec
gs
inc
popa
jb
gs
outs
je
addr16
popa
ins
arpl
popa
je
outs
outs
dec
outs
fs
push
gs
outs
je
pop
xor
pop
xor
add
add
and
outs
jb
arpl
outs
jb
outs
data16
and
jb
outs
je
and
js
add
js
add
jns
je
ins
cs
jb
ja
outs
addr16
outs
ins
outs
jb
and
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
or
outs
je
outs
ins
push
gs
add
sub
add
popa
ins
imul
and
and
and
jb
outs
je
and
js
add
push
add
dec
dec
data16
gs
je
and
jb
ja
ins
ins
and
and
ins
ins
gs
outs
ins
and
addr16
and
je
imul
and
and
je
je
and
addr16
or
add
dec
gs
bound
add
push
and
add
or
add
or
add
sldt
add
add
and
add
sbb
test
add
or
and
add
and
and
add
cmp
pop
add
dec
adc
and
adc
adc
adc
add
add
push
add
add
push
add
leave
push
and
add
or
adc
add
adc
add
push
add
adc
add
sbb
sbb
dec
gs
inc
popa
jb
add
adc
add
ins
dec
gs
popa
addr16
add
add
or
je
outs
outs
inc
ins
outs
jae
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
xor
xor
xor
add
add
and
xor
xor
bound
aaa
sub
sub
sub
sub
arpl
aaa
xor
arpl
add
pop
add
adc
jo
jb
addr16
and
xor
xor
add
adc
dec
push
pop
push
jo
popa
je
pop
dec
outs
bound
add
or
add
push
dec
push
add
adc
jo
popa
je
jae
push
dec
push
dec
outs
bound
add
add
add
jle
add
add
add
jo
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
add
add
mov
add
lock
push
add
add
mov
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
mov
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
nop
add
add
add
add
add
add
add
add
bound
xor
add
cmp
adc
add
inc
add
ins
add
add
je
jae
add
push
add
add
je
add
and
push
add
push
add
add
bound
jns
add
add
sub
add
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
push
add
push
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
push
add
push
add
add
je
add
dec
add
bound
bound
jns
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
dec
add
pop
add
jo
add
je
add
dec
add
bound
bound
jns
add
js
add
add
add
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
push
add
push
add
add
je
add
dec
add
bound
bound
jns
add
js
add
add
add
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
push
add
push
add
push
add
add
je
add
dec
add
bound
bound
jns
add
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
data16
mov
dec
inc
inc
push
js
in
mov
jne
jp
lods
mov
imul
adc
add
fild
mov
xchg
(bad)
into
ds
cmp
out
in
cdq
dec
pop
data16
fwait
mov
xor
mov
mov
test
or
stos
jnp
stc
lahf
out
cmp
fisubr
cmc
sub
adc
pop
jne
push
aad
mov
push
xor
pusha
leave
pop
in
das
shl
or
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
lea
imul
scas
jmp
scas
push
stos
sub
iret
aad
cmp
fwait
jo
mov
jne
push
lods
push
pop
bound
fs
mov
pop
in
out
fsub
(bad)
sub
xchg
pop
pop
mov
in
in
sahf
out
dec
(bad)
and
out
enter
aam
cmp
fbstp
mov
dec
dec
jnp
push
repz
scas
lock
mov
sbb
(bad)
mov
(bad)
jmp
add
xor
xor
jno
ins
cmps
and
jge
aas
data16
xchg
add
sbb
inc
jl
add
pop
jbe
dec
xor
rol
test
mov
cs
ins
rcr
cmps
add
loop
repz
sbb
shl
js
(bad)
cmp
in
push
lods
push
or
jle
(bad)
iret
mov
inc
mov
fcom
mov
push
ror
clc
pop
stos
push
jl
stos
xchg
jmp
jb
cld
leave
icebp
jl
adc
push
es
sbb
dec
imul
pop
push
scas
aad
fwait
aad
call
imul
mov
push
mov
cmps
call
cmp
jecxz
(bad)
pop
cmp
out
xor
jo
sbb
(bad)
out
and
rol
add
or
movs
pop
xchg
dec
jmp
xor
xor
mov
xlat
mov
add
(bad)
aad
mov
inc
movs
dec
xchg
inc
xchg
and
pop
pop
or
dec
aas
cmp
inc
jecxz
jecxz
mov
popa
js
jb
xor
sbb
je
cmp
fdivr
jmp
dec
xchg
std
xor
leave
js
int
xchg
test
repz
in
jle
loope
jbe
jp
dec
jge
scas
push
xchg
out
dec
add
psubsb
fs
sti
cli
cli
fimul
cmps
int3
out
push
sub
cmc
pop
test
popf
inc
inc
inc
imul
ds
xchg
pop
jge
retf
xor
add
add
icebp
xor
sub
add
or
pushf
add
mov
cmp
push
xchg
repz
stc
daa
or
lahf
lods
jp
push
xchg
imul
fst
add
popa
pop
mov
fstp
pop
pop
out
outs
outs
outs
jg
cwde
jl
in
mov
cs
sub
xor
add
add
enter
jecxz
(bad)
nop
mov
inc
mov
jns
push
and
in
arpl
jne
add
lods
test
fs
add
(bad)
sub
lahf
mov
and
push
sub
cmp
cmp
mov
xlat
mov
push
push
adc
into
inc
fidiv
imul
sub
icebp
jno
in
xlat
ficom
and
pop
out
cmps
xchg
mov
loopne
add
pop
cmps
add
clts
(bad)
xchg
imul
das
shl
add
mov
push
out
jno
rcl
sbb
jne
es
push
imul
nop
dec
push
data16
xchg
jge
dec
in
in
stc
retf
xchg
xlat
mov
cmps
push
adc
into
adc
call
cs
aad
push
pop
stc
imul
cli
mov
inc
inc
pusha
retf
xor
sti
push
pushf
jo
arpl
xor
jbe
sub
push
xchg
js
fnsave
sub
mov
jle
or
add
adc
add
aam
aam
pop
movs
pop
popf
shl
sub
adc
push
adc
aas
fwait
int
sbb
inc
jnp
pop
xor
xor
stc
js
mov
and
sbb
loopne
sbb
sbb
add
inc
pop
sbb
push
push
cdq
in
jne
sar
push
adc
push
cdq
cmp
cmp
pop
mov
pop
mov
push
dec
ja
dec
shl
mov
out
loopne
mov
lock
retf
xor
inc
out
jmp
jecxz
shr
rcr
lahf
or
cli
mov
add
adc
repnz
pushf
loopne
loop
hlt
dec
cs
cmp
jmp
push
mov
movs
test
nop
das
jl
mov
iret
lahf
call
pop
dec
popf
call
(bad)
fcmovnu
repz
cmp
mov
ja
dec
cmps
test
fisubr
push
std
jecxz
(bad)
rcr
(bad)
std
mov
sub
add
mov
mov
xor
sub
(bad)
(bad)
pop
sbb
add
sub
pop
mov
int3
or
mov
jnp
and
mov
mov
push
repnz
arpl
pop
push
xchg
lds
or
aam
fnstcw
btc
pop
xor
(bad)
aam
fcmove
dec
rol
push
sti
lahf
fdivr
aaa
xor
or
test
js
xor
jle
repz
push
add
leave
sbb
mov
push
xchg
mov
push
mov
inc
int3
(bad)
jbe
mov
mov
xchg
test
cmp
movs
push
stc
push
fwait
cmp
pusha
ins
out
lds
or
aam
shl
mov
fnstenv
test
mov
ss
sub
call
movs
pop
push
ficomp
addr16
icebp
and
xlat
(bad)
jmp
lods
ins
xchg
int
lds
punpckldq
adc
pop
inc
jecxz
jae
add
stos
xchg
sub
ret
scas
ret
imul
shr
fdivr
and
test
inc
push
mov
call
pop
sub
jmp
mov
addr16
sar
xchg
mov
(bad)
pop
fcomp
popf
dec
fcomp
push
inc
les
(bad)
or
pop
jb
loope
jo
add
dec
pop
and
pop
add
and
icebp
sahf
push
cmp
mov
loop
and
jecxz
xor
sbb
imul
ds
call
(bad)
dec
aad
in
sbb
inc
std
ins
dec
xor
pop
jl
popf
popf
popf
add
pop
jle
dec
add
movs
push
mov
sub
jmp
add
cwde
daa
retf
xlat
ja
jne
or
(bad)
xchg
js
inc
dec
fild
jmp
and
imul
dec
mov
gs
or
gs
hlt
aad
dec
sbb
jne
scas
add
shl
int3
xchg
rcr
jge
adc
adc
gs
ja
mov
clc
aaa
jne
mov
mov
add
pop
sub
bound
call
mov
add
pop
es
mov
in
mov
push
aad
push
cwde
and
ss
loop
stos
test
xchg
push
xor
dec
fs
jne
push
dec
imul
nop
clc
xchg
frstor
add
dec
jmp
bound
cmp
stos
adc
inc
adc
sbb
bound
push
out
es
int3
(bad)
stc
clc
clc
clc
mov
jnp
pop
or
add
mov
lods
lods
lods
outs
addr16
cld
(bad)
stc
jbe
cwde
mov
cwde
test
cmp
(bad)
pop
jg
or
aas
jns
js
icebp
call
add
mov
mov
mov
ins
cld
jmp
or
xor
cmps
and
sbb
jbe
repnz
mov
xlat
cld
mov
pop
mov
or
fst
push
imul
dec
jno
and
jl
push
es
mov
xor
xor
inc
mov
sub
std
iret
push
push
rcr
jnp
jnp
in
loopne
adc
les
movs
xor
aad
jmp
jecxz
fldlg2
pusha
cld
shl
sbb
sbb
ficomp
mov
out
xor
xor
in
fs
test
push
popa
adc
xchg
call
ds
xchg
push
sar
cmp
mov
mov
clc
dec
dec
iret
das
xor
into
dec
in
xchg
xchg
enter
cdq
add
sub
fimul
or
rcr
add
xchg
or
das
push
or
repnz
into
lock
sbb
add
pop
cmp
repnz
cld
mov
(bad)
push
jl
xor
xchg
adc
mov
xor
aas
bound
and
sti
cli
cli
inc
or
mov
aaa
xor
repz
retf
or
sahf
xor
cld
cs
adc
and
imul
sbb
js
loop
xchg
aam
push
pop
pushf
sahf
mov
inc
pop
xchg
cmp
data16
xchg
adc
jle
pop
sub
adc
int
inc
mov
jno
push
rcr
mov
idiv
cdq
ins
mov
mov
adc
retf
mov
sub
scas
push
xchg
outs
test
mov
test
mov
mov
and
xor
lahf
dec
retf
jecxz
idiv
ins
adc
xor
jo
add
xchg
inc
retf
call
sti
and
mov
xor
stc
push
dec
jp
and
mov
or
shl
(bad)
das
jg
lahf
pop
imul
inc
lods
sub
jp
stos
cli
mov
lds
mov
pop
dec
xor
test
fst
adc
jg
repnz
(bad)
mov
push
out
in
addr16
mov
repnz
cld
add
outs
cmp
data16
in
add
push
sbb
movs
ss
sub
dec
jmp
xchg
repnz
inc
dec
call
test
cmp
pop
sub
retf
cmps
jae
call
sbb
adc
cmp
mov
cdq
mov
les
mov
dec
movs
xchg
xor
add
push
pop
or
adc
push
push
pop
sbb
cmps
lahf
into
scas
lahf
retf
fwait
(bad)
rol
cmp
es
ins
shl
or
mov
lods
inc
jl
cs
jno
stos
in
push
pop
cmp
add
lock
add
xchg
leave
xor
inc
push
rcr
ss
pop
xor
es
add
fcmovnu
leave
out
sti
dec
lods
out
test
in
std
jne
push
adc
mov
dec
es
(bad)
js
stc
push
ficom
xchg
inc
(bad)
sbb
cmp
or
or
jp
jnp
cmc
repnz
rcl
and
xor
adc
ss
notrack
mov
rcl
push
fstp
jae
push
xchg
push
dec
cs
add
pop
neg
pusha
sub
jno
jge
leave
ds
adc
xchg
dec
and
fild
bound
lds
mov
lea
fimul
imul
pop
leave
or
es
fwait
jo
rcr
push
test
mov
xor
cmps
out
mov
cli
in
imul
jns
xlat
fst
shl
imul
cmp
push
adc
mov
jmp
data16
mov
mov
call
jle
add
icebp
vmovntdq
pop
or
add
mov
mul
stos
add
scas
xchg
or
dec
pushf
xchg
push
dec
or
dec
dec
aam
push
scas
pop
lock
aad
xchg
jmp
pop
iret
and
nop
in
mov
dec
fmul
mov
lds
stos
dec
push
dec
mov
or
fbstp
mov
retf
sar
push
sub
mov
enter
or
xchg
or
add
push
daa
loopne
add
repz
xchg
loop
(bad)
and
pop
jmp
mov
(bad)
(bad)
fcom
fisttp
ret
mov
sub
and
pop
test
jge
hlt
repz
mov
clc
mov
ja
push
cli
sti
test
jns
dec
pop
xor
fs
fisttp
int3
clc
into
jp
inc
popf
mov
stos
cmp
mov
jne
dec
and
or
mov
and
push
adc
pop
mov
into
add
iret
(bad)
hlt
xor
pop
sbb
xor
cli
es
shl
into
(bad)
(bad)
aas
(bad)
fiadd
cmps
mov
jno
xlat
bound
xchg
pop
pop
dec
cmp
shr
sar
adc
clc
jp
ss
imul
pop
mov
in
leave
stc
fadd
add
sahf
cld
cmp
or
mov
push
sbb
test
clc
or
adc
js
outs
ins
dec
ins
cwde
rol
pop
mov
mov
push
(bad)
lahf
into
jae
xchg
lods
aas
xchg
add
dec
and
dec
mov
mov
add
ret
adc
dec
push
stos
loop
fs
pop
fldln2
in
fsubr
(bad)
add
add
mov
dec
sub
jge
push
mov
lods
sbb
push
movs
pop
stc
jmp
mov
mov
shl
mov
int3
loopne
icebp
or
sub
cdq
gs
mov
test
jl
pushf
adc
mov
sbb
fldcw
sbb
aad
lahf
mov
add
out
and
je
(bad)
mov
push
hlt
dec
test
inc
mul
popa
dec
push
xor
jmp
jecxz
xor
cmp
xchg
clc
or
int3
dec
adc
daa
jae
clc
mov
(bad)
xor
aas
jbe
jbe
loop
imul
pop
fucomp
dec
cmps
push
pop
popa
push
(bad)
fild
shl
mov
and
mov
xchg
call
and
dec
dec
mov
or
pop
sub
jl
jp
add
mov
pop
aaa
pop
iret
jmp
mov
xchg
test
hlt
pop
shl
out
mov
loopne
cmc
call
or
push
sbb
push
dec
dec
fimul
inc
mov
inc
repnz
adc
add
sub
lods
cli
out
jp
sbb
cmc
clc
xor
sub
mov
in
cmp
jecxz
aaa
push
cmp
lock
push
pop
test
imul
fnstsw
mov
pushf
xchg
inc
cmp
leave
add
jp
ins
cwde
jle
mov
fld
rcl
dec
or
mov
arpl
mov
ins
dec
cmps
push
sbb
or
and
cmps
popf
and
mov
int3
mov
loop
lock
mov
ins
pop
pushf
pop
jae
nop
retf
in
bound
aam
and
test
popa
inc
sub
das
cdq
or
in
jae
dec
or
xchg
clc
call
jmp
or
lahf
mov
and
cli
js
sbb
jmp
pop
cmp
aam
cdq
ficom
gs
loopne
xchg
inc
and
sub
ins
scas
mov
xor
add
jmp
daa
mov
adc
out
dec
add
add
sub
push
xchg
pop
xor
rcl
fnstenv
(bad)
aaa
dec
(bad)
mov
arpl
imul
inc
gs
adc
or
clc
enter
outs
shl
cmps
push
push
aas
stos
into
iret
fs
dec
(bad)
adc
adc
mov
mov
push
mov
sbb
push
jns
push
mov
test
fild
(bad)
rep
data16
sub
sub
(bad)
fimul
aad
fiadd
add
idiv
popf
jmp
stc
outs
xchg
mov
scas
cdq
popa
cwde
mov
gs
paddsw
mov
dec
ins
xchg
sar
ret
xchg
xchg
mov
mov
fist
out
fwait
lods
mov
mov
xor
out
jbe
shl
fs
jmp
mov
stc
push
jmp
inc
int
adc
add
pop
es
push
aam
dec
and
aaa
push
xor
or
lods
add
(bad)
aad
lods
xor
dec
mov
xchg
pop
sub
mov
add
imul
pop
fistp
mov
and
movs
pop
rep
rol
add
pop
(bad)
or
(bad)
adc
enter
sar
loop
cs
push
pop
mov
push
pop
movs
mov
add
mov
shr
xchg
xor
cdq
add
mov
stc
inc
pop
add
pop
not
push
sbb
cli
and
mov
pop
jmp
xchg
mov
sub
(bad)
xchg
out
mov
popf
and
inc
pop
inc
pop
jnp
xchg
std
in
cmp
sub
adc
movs
loop
repz
xor
push
push
test
icebp
add
scas
inc
aad
sub
dec
xchg
pop
inc
sbb
outs
adc
pop
jns
cwde
enter
lahf
dec
pop
out
ins
in
(bad)
jmp
mov
add
push
fistp
pop
cmp
sbb
cmps
repz
sbb
rcr
shl
ss
aam
sbb
add
mov
rcr
dec
ret
mov
repz
jae
jl
xor
(bad)
push
not
(bad)
lahf
push
push
in
enter
inc
pop
outs
outs
outs
xor
js
(bad)
jmp
push
imul
xchg
push
cwde
call
push
sbb
xor
jae
cmps
jmp
jg
xor
out
scas
movs
cmc
jmp
dec
sbb
sub
dec
xlat
push
sub
je
inc
hlt
mov
dec
add
pop
inc
inc
imul
mov
aad
ret
xchg
pop
sbb
inc
or
or
les
pusha
pop
pop
leave
pushf
inc
jno
jp
mov
dec
push
dec
in
out
cld
fnstsw
pop
loopne
dec
out
add
mov
in
adc
adc
lock
mov
shl
lods
push
pop
aam
mov
scas
mov
mov
inc
mov
and
sub
xor
loopne
add
arpl
gs
test
cmp
adc
in
(bad)
cmp
outs
sbb
or
shl
xchg
push
loopne
add
cmp
dec
mov
mov
push
test
(bad)
cmp
sar
or
jge
jge
lods
mov
movzx
jg
push
(bad)
out
pusha
inc
adc
jp
and
push
xchg
jl
or
test
pop
popf
imul
and
jle
mov
xchg
cs
jb
hlt
cld
addr16
add
adc
sti
inc
add
cmp
stc
stos
ror
adc
int
in
into
mov
sbb
mov
call
lock
pop
in
mov
out
add
in
rcl
(bad)
lahf
xchg
test
push
mov
sbb
sbb
fidiv
rcr
add
sbb
xor
fdivr
rol
das
pop
mov
ja
pop
outs
inc
cdq
adc
fwait
mov
cmps
repnz
push
adc
lahf
mov
mov
repz
add
or
jmp
push
and
sahf
dec
cdq
(bad)
mov
sbb
push
cmps
mov
push
jmp
fistp
cmp
and
neg
(bad)
mov
mov
xor
inc
cmps
sahf
xor
fs
or
stc
and
nop
inc
data16
mov
cmc
mov
loope
sbb
ja
dec
rcr
mov
nop
add
pop
or
(bad)
out
xor
cmp
and
jg
(bad)
cmp
push
int
rol
dec
shl
popa
xchg
pop
fld
jle
call
faddp
out
mov
add
ja
(bad)
push
xchg
push
(bad)
out
jnp
mov
xor
jns
mov
test
ja
inc
lods
movs
in
inc
sbb
mov
and
int
xor
mov
adc
(bad)
cs
mov
addr16
int3
xor
cmp
enter
jmp
cmc
jge
or
pushf
(bad)
iret
add
dec
inc
shr
mov
and
mov
lds
repz
and
leave
mov
sub
or
jns
out
jmp
mul
pusha
jg
es
xchg
retf
jl
mov
fdiv
les
xchg
shl
mov
ror
xchg
rcr
pusha
xor
xor
cwde
hlt
test
dec
lds
jmp
mov
xlat
push
push
or
mov
sti
fst
int
sbb
adc
sbb
sahf
push
add
cmp
mov
xchg
pop
dec
add
xlat
out
add
mov
out
dec
inc
xchg
addr16
xchg
mov
add
add
add
xchg
dec
push
stos
mov
out
or
inc
add
(bad)
cdq
jg
xchg
in
fnsave
pop
mov
retf
push
xchg
out
jo
imul
dec
(bad)
aas
(bad)
cmp
mov
aad
leave
mov
mov
mov
pop
mov
cmp
mov
mov
jle
stos
jbe
iret
pusha
ss
cmp
es
shl
aas
sbb
int3
xchg
hlt
lahf
jmp
inc
add
mov
xor
pushf
sub
pop
adc
and
int
add
fidiv
das
mov
scas
push
cmp
and
movs
aaa
xor
aas
jmp
cmp
mov
or
jg
cdq
ja
stc
mov
ret
ins
fbld
pushf
push
test
jp
cli
hlt
in
mov
call
imul
ja
ret
pop
jbe
gs
neg
lds
(bad)
leave
cmp
sbb
sbb
leave
xor
and
pusha
mov
dec
pop
add
mov
lods
or
jl
ret
fld
add
jg
xchg
xor
movs
jbe
xor
or
cs
(bad)
das
fdiv
inc
ins
fcmovbe
cwde
pop
rol
test
sub
push
scas
xlat
fidiv
pop
jo
pusha
cmc
out
jl
sub
loop
ja
jno
pop
aam
dec
imul
fst
jg
dec
push
cwde
adc
ror
or
xchg
jbe
div
mov
out
fwait
inc
shl
sub
dec
(bad)
and
pop
mov
jge
jge
mov
cmp
popa
ss
push
inc
add
add
sbb
or
add
dec
xchg
adc
imul
push
cmp
lods
xor
sub
(bad)
rol
add
ja
loopne
mov
stc
out
and
xor
adc
cld
addr16
jnp
xor
cmp
mov
cmp
(bad)
sbb
lahf
add
fprem
push
sbb
dec
or
cdq
jnp
ins
ret
jmp
ss
lods
jle
shl
in
cmp
mov
and
mov
add
rcl
push
or
push
stos
enter
fisub
or
iret
add
add
div
mov
push
fisub
xchg
out
js
fwait
enter
xchg
popa
(bad)
call
ret
push
jge
push
mov
push
fbstp
je
popf
ja
jp
xor
sti
shl
xor
jecxz
shl
jae
fsub
add
inc
repnz
jne
hlt
call
rol
shr
and
add
and
ins
test
fnstenv
xchg
test
mov
and
out
je
pop
leave
inc
out
lock
pop
fs
mov
add
mov
ds
jg
cmp
mov
push
sar
dec
jle
push
xor
movs
out
add
xchg
jmp
jge
push
xor
mov
ror
scas
shl
push
add
stc
rcl
ins
push
cld
mov
push
inc
push
es
dec
fbstp
mov
add
xlat
call
inc
cwde
mov
sub
pushf
xchg
adc
pause
jmp
fimul
add
pop
push
sub
lods
dec
sub
fcmovnb
imul
add
fbld
dec
mov
sahf
scas
fidivr
cmc
xchg
push
pop
test
enter
movs
fnstcw
sti
inc
cmp
cld
jmp
in
ret
jmp
mov
cmp
pop
pop
add
shl
adc
xlat
jecxz
jp
gs
add
loopne
jl
push
sar
cmp
js
stos
add
add
lods
push
push
(bad)
mov
dec
mov
adc
lods
cmp
out
shl
cli
fimul
cmp
xor
and
jne
or
lock
dec
imul
sub
retf
add
fst
push
inc
mov
push
pusha
ins
push
outs
es
retf
arpl
shl
std
mov
pop
or
and
pop
mov
xor
(bad)
(bad)
inc
sub
sub
xchg
les
addr16
lods
std
(bad)
pop
cmps
xor
cmps
(bad)
jmp
sbb
std
cmc
jl
jb
mov
xor
sub
out
(bad)
jne
cmps
mov
cmps
bound
fdiv
xchg
stc
out
ins
leave
add
or
mov
mov
inc
jl
cmp
(bad)
sbb
cmps
push
cli
fidiv
pop
cwde
sbb
add
imul
test
mul
cdq
fsub
xor
and
ja
mov
gs
push
or
add
clc
mov
fbstp
imul
inc
and
xchg
mov
or
xchg
mov
push
dec
mov
mov
in
(bad)
hlt
out
call
adc
jp
sar
pop
pop
fdiv
pop
xor
xor
dec
aad
ds
div
cli
add
add
jo
in
cmp
(bad)
and
fldenv
fmul
adc
push
fs
inc
pushf
test
xchg
test
lods
sbb
cwde
sbb
add
popf
dec
out
std
push
int
xor
xchg
jg
cmp
test
cs
xchg
and
pop
lods
rcr
dec
stos
scas
ror
(bad)
fwait
hlt
push
push
add
inc
push
mov
retf
sub
scas
ret
push
test
cmp
aas
adc
cmp
ds
jecxz
push
jp
shr
and
cmc
repz
in
jae
add
and
fbld
test
enter
xor
mov
cmp
popf
ins
popf
mov
mov
add
adc
or
mov
and
xor
cmp
pop
cmp
lds
rol
lea
pop
aaa
sahf
dec
repnz
retf
mov
xlat
(bad)
fdivr
xchg
pop
std
xchg
mov
sub
fcmove
out
jae
in
jg
hlt
mov
add
pop
or
fidivr
(bad)
(bad)
pop
paddq
add
cmp
dec
jle
dec
enter
iret
adc
mov
scas
adc
(bad)
outs
outs
outs
xchg
sti
dec
(bad)
repnz
cmp
cmps
dec
jmp
push
mov
mov
test
sti
push
adc
sar
xor
inc
or
sbb
jg
arpl
sbb
imul
gs
jge
cmp
or
jecxz
mov
jne
add
cmp
cld
sahf
test
push
and
rcr
pop
pop
data16
jmp
mov
jns
cwde
cmps
(bad)
jecxz
inc
sbb
sub
or
cli
pop
pop
das
jge
lock
leave
xchg
daa
daa
fs
cs
movs
div
push
aaa
pop
xor
xchg
call
fbld
fldenv
cmp
add
and
mov
mov
mov
mov
sub
test
inc
xor
cmc
xchg
je
dec
jnp
jl
pop
icebp
arpl
test
add
cmp
fcom
loopne
push
adc
movs
(bad)
cld
pusha
pop
mov
lock
clc
sbb
cli
cld
xor
cmp
mov
xchg
add
push
lds
push
add
into
arpl
add
into
test
push
push
in
pop
mov
mov
fisub
add
pop
add
push
push
inc
jecxz
xchg
dec
cld
leave
fidiv
push
jg
ins
std
push
add
fiadd
dec
mov
and
add
cmp
outs
mov
mov
retf
mov
adc
pop
in
mov
jmp
mov
stc
and
xchg
pop
mov
int
mov
stc
jnp
mov
mov
add
fcom
jno
xlat
lods
mov
dec
aam
and
sahf
sahf
mov
fsub
aam
scas
pop
mov
push
das
call
add
and
(bad)
pfcmpgt
jp
test
cmp
jl
jne
jne
add
jecxz
mov
jmp
cmp
out
fnsave
loopne
sar
cli
sbb
pop
aad
pop
int
popf
mov
mov
add
dec
xor
sahf
nop
fcom
add
sbb
pop
dec
(bad)
rol
iret
or
test
(bad)
mov
cmp
mov
pusha
imul
cmp
add
stos
xor
inc
stc
cmp
sub
jg
add
fcomip
cmp
cli
mov
adc
pop
inc
outs
dec
es
mov
push
jmp
stos
push
movs
push
or
nop
and
popa
cli
cs
ret
ins
and
leave
leave
ss
sub
sub
inc
dec
xor
outs
mov
jno
mov
sbb
mov
xor
pop
push
js
shl
out
(bad)
iret
add
xchg
std
lods
(bad)
stos
xchg
push
xchg
jns
inc
pop
push
loopne
(bad)
cmc
add
(bad)
aam
shl
mov
ds
and
mov
jnp
cmp
cmc
not
pop
mov
inc
test
sub
mov
cli
push
leave
adc
and
pop
dec
and
(bad)
sti
cli
iret
iret
jmp
int3
cld
stos
clc
bound
stos
into
mov
pop
xchg
mov
(bad)
cmp
and
scas
xor
ss
pusha
push
sub
mov
or
adc
xchg
mov
add
iret
aaa
cmp
push
sbb
rol
xchg
test
lods
aaa
mov
aad
retf
jnp
mov
sub
inc
pop
jnp
cmps
pushf
dec
and
add
std
dec
mov
add
jg
dec
addr16
inc
add
dec
fwait
outs
inc
add
push
sbb
mov
cmp
sbb
mov
add
out
aam
push
cli
xchg
neg
jns
and
push
mov
cld
dec
push
jmp
fcmovb
adc
lods
popa
ds
cli
add
add
dec
movs
pop
std
(bad)
pop
pop
test
pop
push
add
pop
pushf
loop
icebp
mov
fisttp
mov
scas
dec
pop
fs
ja
jne
ja
jp
cs
and
sbb
or
add
adc
and
popa
pusha
jmp
lds
inc
add
fs
dec
mov
push
stos
cmp
add
or
adc
fcom
sbb
dec
retf
rcl
dec
dec
jne
push
out
jl
cmps
cmp
nop
test
out
cmp
sub
or
adc
shl
aas
inc
(bad)
mov
xchg
cmps
mov
out
lds
and
mov
xor
(bad)
shl
cwde
dec
inc
xor
jecxz
add
test
inc
pop
adc
pop
retf
stc
jns
sub
or
int3
test
movs
inc
and
push
mov
push
out
or
rcr
dec
sub
ret
mov
cwde
add
pop
dec
mov
scas
pop
dec
popf
(bad)
jecxz
push
or
xor
jo
lds
xchg
sub
sbb
into
leave
fld
add
adc
rol
mov
je
(bad)
popa
jecxz
push
add
sbb
inc
popf
or
jmp
aaa
ficomp
stc
add
add
and
repz
adc
dec
(bad)
(bad)
in
xlat
xchg
xchg
(bad)
popf
mov
jns
test
dec
aam
push
adc
dec
pusha
push
movs
and
xchg
cli
sbb
(bad)
push
test
xor
xor
push
xor
mov
mov
lock
int3
cmps
xchg
pop
and
adc
xchg
retf
xor
mov
push
mov
inc
push
sar
imul
sub
ret
pop
mov
jno
pop
cmp
arpl
in
int
inc
push
pop
cmp
sbb
mov
sbb
(bad)
loope
xchg
xor
sbb
pop
mov
push
pop
xchg
rol
out
fld1
cwde
mov
in
dec
cmp
fdiv
ins
aam
xor
dec
pop
imul
jmp
frstor
or
push
jmp
adc
out
imul
iret
pop
or
js
mov
rcl
jl
xor
rcl
adc
jnp
mov
xor
int
ss
aas
jmp
ret
inc
jmp
and
inc
add
cmp
fdivrp
xor
push
add
std
int3
test
fs
scas
xchg
sahf
jle
jmp
inc
push
ja
adc
(bad)
(bad)
mov
inc
clc
out
sbb
xor
test
cmp
rcl
fiadd
inc
ret
hlt
retf
mov
das
mov
push
mov
or
jmp
std
sbb
mov
pop
mov
push
push
test
mov
dec
lds
test
or
(bad)
cli
mov
(bad)
into
aaa
repz
xlat
popa
lahf
and
xor
scas
push
ss
daa
fsub
lods
fst
dec
inc
lahf
outs
push
jns
or
and
cwde
cs
mov
fcmovu
inc
imul
and
out
ror
inc
jmp
mov
cmp
call
sub
sti
cs
dec
daa
arpl
push
fidiv
mov
xchg
jmp
shl
sbb
adc
add
jmp
stc
stc
push
fucomi
mov
(bad)
imul
jmp
add
ficomp
outs
ins
ins
or
test
mov
jecxz
scas
scas
mov
xchg
je
sbb
loope
inc
call
or
fcmovb
(bad)
cli
cdq
jle
sahf
inc
fcom
xchg
jle
fs
ins
xor
add
ficomp
scas
fimul
fnsave
fs
in
aas
adc
inc
jmp
daa
xchg
shl
push
fbstp
cmc
pop
test
mov
in
je
aas
pop
add
fwait
cdq
mov
std
push
inc
movs
cmp
sub
push
pop
jbe
scas
popf
icebp
or
pop
lds
shl
test
mov
cmp
cmp
push
pop
lahf
xchg
rcr
jno
jns
fs
rcl
dec
mov
retf
mov
test
add
jg
movs
stos
ds
dec
cmp
xchg
mov
mov
xor
cmps
sbb
mov
packssdw
xlat
and
enter
loope
stos
or
adc
mov
mov
jle
imul
and
fcomp
mov
je
int3
fiadd
mov
shl
mov
fistp
or
nop
add
shl
mov
call
cdq
punpcklwd
std
add
clc
repnz
iret
out
cmp
mov
dec
adc
or
pop
sbb
mov
retf
mov
mov
loopne
sub
in
sub
xchg
push
nop
je
adc
sti
movs
das
add
inc
inc
xchg
dec
mov
push
int3
pop
test
pop
(bad)
(bad)
rcl
mov
lock
scas
icebp
add
arpl
push
jmp
cmp
and
or
pop
fcmovbe
adc
scas
dec
(bad)
jp
icebp
arpl
pop
pusha
popa
pop
add
pop
inc
clc
push
fisttp
mov
cmp
cmp
aaa
mov
inc
or
pop
push
jns
push
mul
(bad)
mov
sbb
sbb
inc
aas
cli
adc
retf
dec
movs
leave
xchg
jno
dec
and
adc
and
test
mov
jmp
ror
adc
fnstcw
mov
out
fdiv
cmp
cmps
jnp
push
scas
mov
or
cwde
stc
cmc
cmp
scas
and
hlt
div
retf
jg
jp
jno
xor
add
jb
jae
mov
shl
jge
mov
mov
ret
push
xor
mov
and
ret
imul
enter
inc
xchg
pushf
inc
sub
cmp
rol
lds
cli
sbb
(bad)
rcl
jnp
pop
add
cld
dec
cld
clc
arpl
inc
into
fcmovnb
adc
mov
ja
add
pusha
movs
jg
add
shr
sbb
inc
outs
gs
rcl
retf
cmps
and
xor
jmp
push
(bad)
mov
(bad)
ret
inc
jmp
popf
cmp
cmp
cmp
call
xchg
ins
xor
outs
push
cmp
mov
in
(bad)
pop
outs
movs
retf
pop
mov
nop
mov
mov
enter
jle
stc
add
ds
test
js
and
mov
jo
sub
xor
xchg
shl
arpl
add
adc
iret
or
add
push
xlat
dec
cld
xor
stc
in
(bad)
inc
sbb
pop
xor
adc
ds
loop
push
add
inc
sbb
mov
out
test
pop
retf
fcmovnu
xor
int3
inc
dec
jnp
sbb
ret
clc
loope
jg
shl
sbb
mov
pop
add
xchg
add
xchg
or
loop
cmc
dec
mov
mov
mov
retf
sbb
sub
add
shr
movs
mov
cmc
push
mov
loope
pop
cmps
scas
jl
sub
fucom
(bad)
sbb
std
jmp
cmp
mov
mov
out
adc
pop
inc
dec
add
add
jne
dec
jns
sbb
clc
push
jae
push
adc
add
out
inc
inc
sbb
(bad)
mov
add
adc
out
sbb
adc
gs
stc
es
or
bound
loopne
adc
ins
es
inc
aas
ss
loope
sbb
sbb
sub
call
or
pop
dec
jp
sbb
outs
xor
inc
out
dec
push
(bad)
clc
mov
retf
clc
adc
add
add
cmp
push
xor
(bad)
fistp
icebp
adc
sahf
mov
nop
addr16
aas
cli
fmul
icebp
adc
sbb
or
push
mov
aas
(bad)
xlat
js
outs
repnz
push
loope
xor
(bad)
jmp
pop
cli
adc
cmp
xchg
in
test
adc
in
daa
pop
retf
and
sahf
inc
add
fwait
jecxz
xor
std
jp
std
neg
inc
and
mov
sahf
scas
bnd
(bad)
cli
(bad)
xor
inc
inc
and
and
push
leave
shl
add
ds
popa
pusha
fdiv
test
cwde
dec
cmp
scas
mov
fdivr
push
cmp
cmp
lea
sbb
gs
jbe
sub
jle
push
cmps
cdq
jle
movs
test
inc
sbb
jle
add
xchg
add
jnp
mov
retf
and
addr16
jmp
mov
or
and
mov
mov
jnp
pop
dec
dec
xchg
sbb
repz
in
mul
outs
stos
(bad)
cmp
pushf
adc
push
idiv
fwait
xor
mov
rol
ficomp
pop
jl
inc
mov
xchg
adc
adc
pop
lock
jle
xchg
jmp
call
fnstenv
(bad)
hlt
jns
iret
jecxz
mov
cmp
add
or
shl
push
or
and
push
push
mov
add
pusha
or
test
imul
ja
mov
popf
cmp
ret
(bad)
bound
cmc
shr
bound
inc
xchg
cmp
adc
mov
and
sbb
repnz
sbb
adc
xchg
in
and
pop
aaa
aad
(bad)
pop
shr
icebp
cmp
jl
push
jmp
loopne
xchg
pop
daa
enter
push
pop
mov
xchg
xchg
cmc
daa
sub
jle
push
std
enter
jg
sar
mov
into
add
cld
mov
or
or
pop
cmps
jnp
scas
push
loop
out
(bad)
(bad)
pop
adc
(bad)
adc
ins
pop
xchg
mov
popa
adc
enter
std
mov
cmps
int3
popa
arpl
cmc
add
sub
pop
dec
std
add
hlt
mov
stc
out
ds
sub
out
rcr
cmp
mov
mov
mov
fldcw
sbb
shl
cmp
movs
movs
ja
in
inc
aad
les
jmp
xchg
int
push
div
out
ja
pop
or
repz
fimul
sti
sub
jne
dec
int3
loope
mul
test
mov
push
pop
mov
cmc
sub
push
scas
int
cmp
cwde
mov
sbb
xchg
ret
in
inc
(bad)
rcl
rol
jmp
jno
stc
(bad)
cld
sbb
dec
frndint
out
gs
in
jno
in
ds
pop
cmps
lahf
dec
jp
icebp
mov
sub
cmps
add
or
std
xlat
fild
or
(bad)
js
pop
dec
(bad)
loop
scas
mov
mov
xchg
jmp
pop
neg
add
sub
jg
jl
pop
push
mov
adc
add
test
cwde
(bad)
or
fistp
push
movs
shl
push
outs
mov
fwait
adc
cmp
rep
jp
(bad)
adc
iret
ins
sbb
ss
inc
mov
fisttp
inc
add
mov
dec
shl
jmp
add
stos
fsubr
and
cmc
fbstp
dec
push
fld
xchg
cli
mov
jge
pop
imul
mov
push
and
pop
pop
pop
pop
mov
jle
es
loop
mov
(bad)
repnz
es
lock
jmp
fsubr
out
and
jmp
imul
jmp
mov
dec
lahf
ret
mov
pop
add
call
aaa
push
cmc
test
lods
shr
je
std
push
rcl
(bad)
out
mov
cmp
xchg
cmp
test
xor
fsub
sar
repz
jbe
hlt
pop
out
push
dec
(bad)
repnz
xor
jns
retf
aam
shr
jge
inc
test
mov
jne
and
add
loopne
les
ret
inc
lods
push
pop
shl
mov
cld
loope
rcl
scas
cmps
inc
push
jp
mov
rol
mov
dec
mov
push
or
sub
inc
fldenv
or
fcmovnu
sbb
push
and
int3
xor
or
jecxz
pusha
or
lahf
jbe
pushf
or
aaa
cwde
push
or
add
fdivr
out
idiv
xor
out
fcmovu
fld
xchg
leave
dec
rcr
scas
fs
jno
add
adc
rcl
fnstcw
(bad)
int
in
(bad)
mov
std
popf
nop
mov
mov
test
(bad)
cmp
ret
dec
nop
mov
loop
fnstenv
push
repnz
stc
ds
movs
lods
sbb
ds
daa
aas
clc
mov
sub
gs
pop
jg
in
mov
dec
ror
xchg
xchg
mov
or
adc
cmp
add
pop
cdq
aas
int
jg
call
popf
hlt
jmp
call
push
cmc
pusha
adc
jg
lock
pop
mov
xchg
nop
in
cmp
dec
inc
jmp
xor
popa
jge
push
in
jmp
cmp
xor
out
push
sbb
retf
mov
je
in
fdiv
and
xacquire
dec
fdiv
iret
nop
cmp
or
scas
and
lea
mov
out
jl
sub
outs
xchg
test
in
or
pop
test
fmul
and
cwde
add
rcr
fcomp
pop
mov
jmp
jp
aad
jmp
mov
jmp
mov
adc
mov
pusha
jecxz
xor
in
(bad)
inc
mov
rcr
cmp
mov
cld
xor
fnstcw
jb
xchg
jp
xor
icebp
jle
xchg
stc
jecxz
(bad)
(bad)
faddp
inc
iret
pusha
ret
repz
and
fbld
lea
out
pop
retf
pop
or
(bad)
out
cmps
iret
aas
jle
sar
inc
out
retf
sbb
cmp
add
repz
cmp
pop
add
and
dec
mov
and
pop
cmc
cmps
pop
jge
bound
cmp
enter
push
jl
fisubr
lahf
cmps
or
sub
ss
stc
call
inc
push
cmp
fist
and
aas
dec
jecxz
xor
leave
or
sbb
push
dec
loopne
(bad)
xchg
jno
out
push
rcr
sahf
xor
fnstsw
and
sar
int
xchg
rcl
adc
push
inc
retf
mov
mov
mov
movs
test
test
stos
xchg
aas
xlat
cdq
pop
mov
mov
push
aad
outs
pop
dec
cmp
cdq
mov
adc
stc
pop
cmp
(bad)
mov
lea
aaa
or
loop
(bad)
lods
cmps
and
inc
dec
js
and
js
mul
fdiv
add
sbb
xchg
bound
adc
enter
inc
mov
fld
in
pop
sub
scas
pop
js
stc
inc
(bad)
(bad)
inc
hlt
sub
lods
mov
cmc
pop
inc
je
sbb
repnz
mov
in
jg
dec
out
out
cmps
enter
dec
add
jb
add
or
fdivp
int3
fbld
in
hlt
test
(bad)
pop
enter
inc
adc
rcl
fist
and
xor
lahf
scas
mov
loop
xor
xor
or
or
xchg
cmp
xchg
retf
jle
or
(bad)
pop
int3
scas
jb
call
hlt
inc
sub
add
stos
push
retf
xchg
int
jbe
imul
push
or
pop
pop
mov
lods
add
(bad)
and
add
pop
ror
(bad)
pushf
retf
xor
adc
xchg
pop
pop
sub
push
aad
es
push
popa
mov
ins
(bad)
or
mov
inc
repz
mov
xor
push
loopne
repnz
mov
xor
push
outs
mov
out
adc
in
xor
pushf
in
jmp
repnz
jb
fisub
or
loope
daa
js
mov
jnp
(bad)
jmp
fidiv
xor
pop
inc
add
cmp
(bad)
push
sub
cld
fcos
call
ins
nop
into
xchg
inc
add
loopne
mov
add
outs
mov
fcomp
cmps
test
(bad)
hlt
jecxz
iret
sar
mov
popf
jne
sbb
add
add
mov
mov
inc
add
bound
push
lods
into
das
cmp
pop
cwde
or
bound
jp
nop
add
push
xchg
aad
inc
fcom
mov
push
fdivrp
and
je
ins
mov
in
fistp
push
cmp
js
sbb
in
push
mov
aas
(bad)
push
out
push
jmp
xor
dec
push
lods
cmps
pop
jbe
out
pushf
jmp
pop
add
xchg
inc
sbb
add
mov
aam
pop
xchg
stc
add
push
mov
hlt
inc
and
popa
shr
ret
lods
mov
aad
(bad)
xchg
std
mov
lds
and
imul
pop
pop
loope
jmp
(bad)
jecxz
in
rcr
jg
scas
jge
fsub
cwde
and
pop
jmp
dec
pop
cmps
pop
(bad)
(bad)
jo
movs
stc
out
push
mov
jne
xchg
repnz
repz
je
mov
cwde
icebp
xlat
pop
dec
aam
add
sub
sti
ss
fcmove
push
cli
jo
repnz
lahf
out
mov
dec
(bad)
(bad)
(bad)
mov
sub
add
inc
add
add
rcr
bound
sahf
jg
mov
jle
ds
lahf
pushf
retf
or
daa
les
jns
and
lds
enter
add
test
loope
sbb
pop
int
mov
push
arpl
xchg
int
int3
imul
and
call
inc
xchg
pop
mov
cli
mov
inc
test
xchg
sbb
or
icebp
rcl
adc
ror
jo
ss
shr
repnz
mov
cmps
pop
mov
popf
xchg
pop
xchg
arpl
jb
add
retf
pop
sub
js
(bad)
repz
outs
add
fdivr
(bad)
fistp
leave
rcr
shl
popa
mov
call
aad
mov
aaa
fbld
(bad)
cmp
loope
arpl
movs
add
jge
sbb
sbb
sbb
jmp
adc
push
inc
in
jmp
or
cmp
sahf
push
aam
mov
cli
jmp
retf
retf
or
fcomp
dec
hlt
loopne
call
sbb
imul
(bad)
mov
mov
lods
lahf
repz
or
cld
mov
lock
cmp
jmp
sti
and
repnz
mov
je
inc
mov
mov
lods
sar
aam
imul
vpmacswd
push
or
push
or
pusha
ret
cmp
push
mov
sub
or
fimul
lds
xor
pop
rol
mov
xchg
lahf
mov
push
push
push
repnz
aam
and
inc
cmps
stos
or
pop
inc
jae
xchg
daa
in
int3
add
jge
ffree
sub
push
loopne
pop
and
pushf
repz
in
int
sbb
dec
push
xchg
push
push
adc
inc
movs
pop
arpl
push
mov
mov
xor
jae
js
xchg
and
outs
cmps
xchg
jp
push
js
mov
mov
arpl
stos
inc
adc
inc
push
dec
inc
imul
sbb
mov
(bad)
xor
ss
cmp
push
cld
aad
sbb
ins
mov
in
mov
mov
cmps
push
mov
mov
inc
movs
js
mov
and
loopne
sub
inc
repz
sub
rcl
test
arpl
pop
jmp
jle
cmps
xlat
fist
test
jg
retf
cmc
mov
inc
scas
mov
sar
mov
mov
jno
cs
lock
add
mov
cmp
movs
dec
outs
jecxz
stos
mov
xchg
pop
add
dec
cwde
adc
mov
mov
enter
dec
test
ror
xlat
jge
and
jbe
iret
xchg
pop
icebp
sub
adc
cmps
pushf
inc
retf
aas
adc
mov
and
add
push
stos
out
cs
sub
test
imul
pop
retf
jbe
adc
mov
sub
ja
jge
aas
cld
pop
(bad)
mov
clc
sbb
dec
enter
loopne
imul
dec
xchg
mov
jmp
shl
and
mov
sbb
pop
xor
jl
out
pop
nop
mov
js
inc
adc
dec
std
jne
pop
in
jne
leave
xor
push
mov
hlt
jmp
mov
add
mov
in
jle
add
add
inc
out
xor
pop
mov
add
aad
ss
call
std
jae
pop
sbb
aad
inc
(bad)
dec
scas
out
fsubr
push
jno
das
aam
mov
test
or
mov
mov
scas
fimul
ffreep
cmps
arpl
data16
add
test
mov
je
cld
mov
mov
push
and
add
push
les
pop
push
inc
jnp
outs
ror
adc
rcr
hlt
loopne
mov
add
jl
arpl
mov
push
cmp
ret
xchg
fist
xchg
sar
pusha
or
pop
test
mov
rcr
push
push
retf
sar
sbb
fwait
leave
dec
jmp
jge
in
gs
mov
stc
dec
cli
shr
jle
dec
call
inc
xor
jnp
push
cmp
add
clc
jp
or
fimul
neg
fcom
sub
(bad)
or
mov
aaa
pop
dec
je
fwait
mov
jmp
out
in
jecxz
cmp
adc
out
pop
sar
mov
inc
ds
dec
clc
daa
mov
pop
daa
sub
inc
cmps
bsf
je
push
add
jne
dec
dec
or
in
push
fnsave
jg
mov
seta
push
ins
mov
(bad)
mov
fsubr
(bad)
sub
jns
aam
push
jbe
inc
pop
jle
dec
das
loopne
mov
add
pop
xchg
das
add
int3
or
or
xor
aas
add
add
pushf
arpl
mov
dec
pop
mov
stos
pop
ss
add
pop
adc
sbb
jnp
mov
adc
cwde
adc
pushf
jae
push
sub
(bad)
cs
pop
cdq
add
mov
pop
pop
add
push
aam
lods
rol
push
and
xor
(bad)
icebp
leave
mov
sbb
adc
ja
xchg
cs
(bad)
jge
jbe
mov
pop
jb
rcr
fnstsw
dec
aas
test
mov
ficomp
stos
in
adc
mov
cmp
scas
das
mov
mov
shl
jg
imul
ffree
add
stos
cld
retf
dec
cwde
jns
push
inc
iret
push
imul
(bad)
rcl
add
leave
sbb
pop
mov
or
cmps
pop
in
aas
int
fwait
pop
cmc
pop
jg
fstp
adc
jo
out
adc
(bad)
outs
fldenv
jb
cli
ret
rcl
cmc
fwait
aaa
icebp
test
dec
aam
xchg
scas
outs
mov
mov
jl
pop
cmp
ss
or
and
cwde
imul
adc
jecxz
mov
add
cli
add
dec
push
fwait
pop
sub
retf
mov
xor
push
or
lea
sti
mov
mov
add
sbb
adc
sub
dec
(bad)
adc
or
ins
outs
adc
mov
xchg
push
sub
es
shr
(bad)
pusha
and
jmpw
sub
mov
gs
push
xchg
cmp
inc
stos
nop
cli
ins
lods
ins
push
gs
aad
dec
mov
les
mov
ds
pop
mov
ds
icebp
(bad)
or
mov
mov
pop
pop
popf
ja
sub
push
les
xchg
imul
sahf
idiv
movs
mov
ins
sbb
mov
loope
cld
jle
and
stos
js
push
xchg
pop
retf
jp
aad
mov
(bad)
gs
push
and
push
cmps
dec
pop
sub
sbb
dec
or
mov
pop
sub
fbstp
sbb
xor
into
adc
push
cwde
xor
xchg
into
mov
pop
imul
push
call
xor
add
loope
rcr
mov
outs
mov
mov
lods
inc
jne
adc
push
jge
daa
les
push
jnp
jno
out
xchg
mov
mov
push
cwde
sbb
push
rol
inc
pop
mov
or
ret
call
stos
or
fdiv
lea
and
js
sbb
push
mov
mov
xor
and
mov
xor
sahf
addr16
sbb
cmps
mov
fs
dec
scas
adc
fnstenv
and
adc
shl
xor
arpl
mov
push
ins
dec
jp
pop
mov
mov
pop
retf
dec
lods
mov
shr
mov
aaa
mov
jnp
xchg
out
mov
jmp
xor
xlat
data16
mov
push
pop
lods
dec
loope
xchg
pop
and
pop
sub
mov
jns
in
xor
mov
(bad)
test
mov
add
mov
(bad)
sub
out
sub
scas
mov
ds
icebp
bound
std
xor
fild
xlat
mov
xor
stc
push
(bad)
lock
adc
cmp
std
call
inc
cdq
aas
test
cmp
jp
inc
ficomp
sub
cwde
sbb
cmc
add
xor
(bad)
aas
leave
sub
jb
lods
sub
jp
mov
ins
pop
inc
je
add
retf
cmp
mov
xor
test
movs
cmp
hlt
int
inc
jmp
ins
adc
test
aaa
cmp
bound
add
pop
adc
ret
or
pop
jle
fiadd
xchg
arpl
jno
cld
cmp
cs
repnz
or
jno
add
sbb
mov
jno
fidivr
cwde
cmps
and
jae
loop
jmp
stos
add
ret
shl
and
add
lahf
int
xchg
pop
scas
stos
push
xor
adc
lea
ret
in
ds
jle
jg
mov
frstor
out
test
push
or
mov
stos
mov
or
push
dec
push
mov
sar
hlt
stc
xor
push
xor
jge
mov
retf
aas
out
sbb
in
fidiv
pop
mov
fbstp
pop
pusha
xchg
jmp
pop
repnz
js
out
fstp
out
scas
in
xchg
dec
xchg
iret
loopne
loop
sub
fsubp
sub
inc
pop
fmul
or
out
sti
mov
mov
lds
outs
iret
or
nop
lahf
jbe
add
or
xor
ja
xchg
out
stc
dec
outs
(bad)
loopne
pop
ret
xchg
add
mov
loop
rcr
jb
out
xchg
or
sub
test
sub
pop
mov
fdivr
xor
mov
call
ja
lods
shr
test
dec
repnz
add
mov
inc
je
adc
sub
aam
push
and
or
mov
mov
and
jl
aam
xchg
sub
aas
ror
les
jbe
jge
es
inc
fisub
jmp
int
rcr
cmp
push
or
push
jp
dec
cmps
call
mov
pop
lods
sub
into
rcl
lods
scas
mov
pop
and
shl
adc
jl
jno
pop
repnz
pop
mov
sahf
js
aam
mov
dec
cdq
sub
xchg
call
cdq
aad
jmp
popf
xor
mov
aad
ins
jle
lods
ins
dec
scas
(bad)
in
retf
ficom
fisubr
sub
int3
jbe
xchg
test
(bad)
clc
mov
imul
loope
adc
cld
push
jl
push
(bad)
pop
push
jmp
sub
loopne
mov
jle
cmp
adc
push
dec
sbb
add
xor
aad
sar
add
scas
cld
jo
fld
popa
cmc
lldt
pop
lods
aam
push
sub
jne
adc
mov
jl
jnp
repz
sbb
add
and
nop
call
mov
mov
and
aaa
sbb
adc
or
inc
add
arpl
or
call
and
daa
pop
or
cmp
shl
inc
cmp
daa
mov
shl
popf
cdq
push
sbb
push
inc
jge
in
imul
inc
inc
push
call
push
or
xchg
push
or
repz
and
lds
mov
sub
shr
sbb
loope
mov
mov
push
mov
inc
xchg
push
mov
cwde
outs
dec
pop
jecxz
cmp
xchg
adc
les
jle
xlat
mov
retf
aad
test
mov
xchg
inc
sub
shl
int3
pop
xor
pop
in
fild
stos
ins
dec
je
cli
clc
push
mov
in
je
xor
xchg
mov
xor
(bad)
dec
leave
test
jnp
mov
lahf
out
addr16
aad
cmps
sahf
icebp
push
cmp
sbb
pop
jnp
mov
fwait
push
(bad)
std
iret
pop
out
(bad)
ficomp
add
loope
pusha
fnstcw
pop
xchg
jns
dec
inc
inc
scas
aaa
outs
gs
jno
mov
mov
fbld
jns
pop
mov
imul
inc
clc
mov
fld
lods
inc
aaa
pop
mov
int
mov
jmp
push
xor
sbb
int3
stos
mov
cmp
dec
(bad)
mov
sbb
pop
dec
movs
dec
ins
add
xchg
dec
inc
fild
fnstcw
or
sbb
adc
mov
test
pusha
fcmovnb
fcomp
(bad)
je
dec
das
out
es
push
out
les
mov
jge
adc
and
add
scas
cmps
inc
shl
adc
test
shl
popa
es
loop
adc
stc
es
outs
(bad)
stc
or
addr16
sbb
dec
lds
inc
retf
mul
xchg
pop
sbb
(bad)
cmp
dec
cmps
mov
cmp
or
sbb
push
movs
bswap
mov
(bad)
cld
fs
popa
xchg
dec
lock
call
sbb
call
imul
call
sbb
(bad)
retf
fbstp
imul
inc
cli
ficomp
sub
pusha
cld
cwde
icebp
dec
xchg
add
mov
stos
adc
idiv
int
dec
add
int
aaa
sbb
cmp
add
and
sub
outs
lods
jmp
das
arpl
psrld
adc
sbb
push
mov
test
pop
(bad)
mov
ins
fisttp
jmp
xchg
pop
bound
call
aam
mov
std
xchg
repz
cmp
leave
sub
cli
push
dec
push
sub
mov
mov
jge
adc
push
fwait
xor
add
js
or
in
test
pop
sbb
and
lods
inc
and
inc
and
outs
pushf
dec
push
xor
sbb
push
sar
dec
or
nop
imul
aad
ret
pop
in
cmp
pop
cmp
push
xor
mov
ins
add
jle
imul
xor
xchg
in
mov
add
(bad)
ins
jmp
push
adc
in
jge
hlt
out
adc
mov
aaa
repz
fdiv
and
movs
rcr
xchg
inc
sti
ja
shl
(bad)
rcl
div
rcl
pop
or
in
mov
jecxz
or
cmp
push
retf
in
lock
pop
sub
out
sbb
mov
aam
dec
add
xchg
rol
inc
pop
jae
sub
aas
std
aad
(bad)
das
div
cmps
lds
add
ss
mov
test
stos
adc
mov
mov
shl
ret
pop
popa
jbe
mov
jo
inc
push
(bad)
sahf
movs
pop
jnp
mov
cmp
xchg
push
sbb
mov
cmp
ins
ds
fldenv
(bad)
call
push
popa
retf
lea
(bad)
jp
push
pop
ror
jmp
and
cli
sub
inc
adc
sbb
fwait
mov
xchg
mov
call
or
cdq
nop
stos
add
mov
cmc
pushf
jno
cdq
mov
adc
cmp
sbb
adc
(bad)
loope
mov
ds
in
mov
dec
dec
xor
sub
xor
cmp
call
lods
(bad)
jmp
stc
cmps
cmp
call
popa
xor
pop
addr16
sar
jmp
nop
cld
mov
lahf
mov
aas
(bad)
cs
ror
mov
aaa
fdivr
stos
cld
scas
arpl
je
mov
pop
or
push
jp
(bad)
xchg
hlt
in
cmp
(bad)
cmp
test
or
sti
dec
cmp
loopne
mov
(bad)
sbb
in
pop
enter
js
xchg
cmc
pop
enter
or
mov
(bad)
scas
call
mov
mov
xor
mov
jns
or
sub
es
not
retf
je
fwait
dec
mov
pop
dec
fldcw
pop
sbb
or
mov
(bad)
loopne
mov
stos
jl
(bad)
(bad)
mov
mov
retf
rol
(bad)
ja
lods
sti
adc
push
ja
and
fstp
xchg
pop
call
sbb
inc
inc
ret
mov
cwde
ss
clc
add
loopne
cmc
lds
xor
add
sub
aam
rcr
cwde
add
enter
stos
pop
dec
mov
ret
test
test
and
xor
jae
adc
add
(bad)
fst
xchg
fprem1
push
dec
pop
(bad)
(bad)
jmp
repnz
mov
clc
js
clc
mov
ins
jge
xor
pop
test
mov
or
movs
fst
cmp
cmovo
sbb
sbb
sar
mov
ror
mov
arpl
cdq
inc
dec
js
fiadd
lock
sub
cmp
or
retf
push
pop
mov
cld
sbb
push
cmovp
test
pop
jnp
dec
ds
and
fst
cmps
xchg
sar
mov
retf
ins
ins
js
add
(bad)
lods
jecxz
jg
aam
sub
jg
in
(bad)
mov
jb
add
sbb
or
adc
stos
std
sub
outs
pop
dec
mov
mov
movs
pop
sbb
int3
adc
cmp
inc
aas
jns
push
idiv
push
pusha
scas
scas
cmps
pop
sub
test
pop
mul
lock
ins
sub
aam
pop
aas
inc
fdiv
data16
outs
ins
jo
retf
ins
inc
aaa
cs
add
and
sub
test
inc
add
(bad)
sbb
or
mov
icebp
push
test
ror
xor
les
or
xchg
jb
push
mov
inc
sbb
shl
retf
mov
es
cmps
xchg
fst
jmp
test
mov
aad
mov
sbb
cmps
ja
or
in
retf
pop
lea
jmp
cmp
ins
outs
aas
mov
in
mov
jae
dec
mov
or
pop
test
sbb
mov
call
loope
in
stos
cmps
test
mov
in
jl
sbb
rol
and
jnp
rcl
outs
cmp
jns
(bad)
out
test
ret
pusha
sub
mov
ror
jge
dec
das
cmp
push
or
push
not
call
jmp
adc
sub
fadd
push
cs
(bad)
jmp
jmp
mov
sub
mov
mov
std
or
repz
xchg
sahf
popa
popf
int3
gs
ror
sub
pop
inc
push
fs
shr
add
and
and
repnz
addr16
xor
sbb
out
nop
pop
adc
xchg
dec
das
(bad)
outs
add
std
add
or
aad
jg
cmp
and
loopne
jno
and
(bad)
mov
cmp
cli
sub
clc
and
mov
int
movs
ds
push
idiv
cmp
push
retf
out
or
jb
and
mov
mov
push
out
leave
stc
sub
sbb
cmps
sub
clc
xchg
mov
aaa
push
rol
push
mov
fmulp
adc
or
aaa
in
push
sbb
bnd
retf
call
xchg
cwde
imul
in
sbb
dec
and
pop
add
jmp
sbb
fistp
(bad)
jbe
stos
jg
sbb
jbe
dec
retf
push
scas
cmp
adc
ins
pop
push
add
cmc
dec
cmps
ds
rcl
and
mov
and
jp
pop
fmul
(bad)
loop
fld
pop
dec
mov
scas
xor
(bad)
(bad)
or
les
icebp
xchg
mov
adc
dec
shl
cmp
add
sub
xchg
or
or
add
repz
add
jnp
or
fimul
jmp
imul
adc
jo
lahf
dec
(bad)
lahf
xor
gs
aad
es
mov
push
lea
jge
outs
sub
push
jne
add
out
fist
imul
fcom
sbb
syscall
dec
cmp
mov
and
jb
adc
jl
fistp
pop
xor
ror
xor
pop
ffree
call
addr16
fsub
push
fbld
idiv
test
neg
dec
dec
outs
fmul
inc
test
dec
fist
pop
(bad)
retf
and
out
jg
xchg
movs
outs
mov
aas
pushf
enter
and
lods
das
jno
adc
sub
sbb
les
adc
and
mov
scas
jnp
sub
add
mov
jmp
jae
ins
cs
stos
ret
push
sub
sub
add
jb
loope
add
pusha
push
adc
pushf
pop
lods
push
not
retf
hlt
out
jno
mov
in
xor
inc
mov
ins
dec
adc
mov
lea
shl
lods
fxam
xor
ret
mov
adc
neg
add
cmp
mov
sbb
mov
in
jle
adc
cmps
and
and
adc
call
test
cwde
sbb
pop
cmp
sgdtd
data16
out
cwde
jns
std
pop
es
retf
mov
fidiv
push
pusha
xor
sbb
test
aam
pushf
xor
sub
mov
cmp
sub
repnz
cmp
femms
dec
cwde
adc
movs
push
pop
adc
mul
int
leave
mov
jl
dec
test
inc
mov
adc
sub
xor
aad
(bad)
cld
popf
psrld
neg
mov
push
imul
sbb
add
retf
mov
popa
mov
(bad)
call
icebp
or
push
out
popf
adc
mov
mov
out
pop
jae
mov
sahf
jmp
inc
or
pusha
jecxz
dec
or
push
sahf
imul
xor
cmps
mov
push
adc
mov
mov
mov
push
sbb
push
stc
add
clc
xchg
mov
mov
adc
inc
hlt
icebp
mov
sete
mov
enter
mov
ret
push
add
or
sbb
inc
sbb
and
out
mov
xor
add
aam
xor
cdq
jle
or
ret
inc
call
out
jo
pop
mov
dec
ror
cmps
xchg
loop
test
inc
xor
or
test
cmp
or
clc
mov
idiv
fiadd
dec
cmp
jp
(bad)
ret
push
mov
repnz
hlt
jmp
mov
(bad)
mov
cs
jns
mov
cmp
pop
jecxz
pop
cmp
loop
aam
enter
xchg
and
movs
adc
fs
push
xchg
ins
cmps
or
mov
push
repnz
(bad)
fcom
pop
dec
fidivr
daa
add
xor
cld
inc
push
inc
imul
clc
add
nop
jl
(bad)
setnp
inc
int3
or
mov
not
lea
jno
int3
or
jge
cmp
ds
pop
sub
add
into
addr16
or
fwait
data16
jbe
mov
cmps
adc
out
jne
jp
sub
cmp
xor
mov
scas
sbb
pop
mov
test
or
inc
dec
imul
jbe
call
imul
repnz
aas
xlat
es
add
dec
xlat
fs
jmp
les
xchg
out
add
pop
jmp
stos
lea
mov
punpckhwd
(bad)
sbb
leavew
into
mov
jge
and
jg
je
outs
fisubr
imul
xchg
lock
cdq
jmp
retf
out
cmps
dec
jmp
fcomp
sub
out
sbb
addr16
call
fnsave
cmp
push
es
dec
stos
mov
aam
cmp
in
dec
xchg
test
ja
popa
jle
fimul
and
jnp
ja
pop
add
fmul
pop
out
retf
pop
shl
add
std
mov
pop
ror
push
xor
stc
lods
add
mov
je
lods
rcr
xor
mov
scas
es
mov
(bad)
mov
shl
adc
pop
ds
or
adc
xchg
iret
mov
rcr
pop
scas
int
xor
inc
push
xor
or
cli
or
add
retf
add
or
cmp
sbb
adc
clc
shl
pop
scas
inc
ret
outs
int
and
push
imul
xor
push
sub
leave
add
aad
jle
adc
mov
test
inc
push
jle
mov
sahf
dec
bound
pop
sbb
lea
test
sar
xor
xlat
or
ds
push
rol
pop
push
pop
sub
addr16
retf
lods
mov
mov
pop
pop
sbb
mov
das
shl
mov
stos
shl
jg
jmp
push
mov
mov
es
mov
mov
jg
arpl
adc
ds
das
push
jg
xor
pushf
add
mov
sti
pop
bound
xchg
pop
les
ins
cmps
lods
xchg
cmc
lds
call
mov
ins
sub
rcl
push
mov
fdivr
mov
or
sbb
out
ret
(bad)
jns
in
mov
out
mov
dec
or
xchg
or
(bad)
lods
outs
add
gs
cmp
sub
repnz
jle
or
pop
xchg
shr
adc
sar
and
sbb
jge
(bad)
imul
test
mov
(bad)
lea
add
or
push
cmps
and
clc
js
aad
xlat
xchg
add
sbb
dec
adc
cli
pop
aas
mov
jmp
mov
pop
sbb
and
inc
pop
xor
dec
jae
aad
scas
adc
xor
dec
pop
call
(bad)
call
ins
lahf
mov
lods
repnz
jbe
dec
push
loop
in
loope
test
add
xchg
sub
test
xlat
add
xor
test
out
test
adc
mov
aas
enter
or
outs
push
cmp
add
aam
fucomp
arpl
mov
add
push
mov
add
pop
sub
inc
mov
xor
lods
aad
ror
mov
mov
in
xchg
movs
xchg
fnstsw
(bad)
xor
popa
into
pop
adc
cwde
add
fistp
dec
iret
mov
das
popa
cmps
(bad)
aas
mov
test
test
mov
call
(bad)
push
and
cmp
adc
aam
sub
mov
cmp
ins
sbb
rol
das
es
xchg
test
bndldx
xor
or
mov
es
adc
sbb
dec
sub
lods
jmp
push
(bad)
dec
push
and
sub
ret
out
xchg
xor
jmp
jmp
xor
jb
sub
mov
mov
fwait
cmp
pop
ror
lds
dec
cwde
mov
stc
cmp
and
loope
mov
mov
lahf
jecxz
push
in
xor
out
xor
iret
push
fistp
add
xchg
cld
shr
dec
mov
out
loopne
idiv
(bad)
jae
add
xchg
dec
push
jne
mov
and
retf
je
aad
fcomp
mov
and
and
adc
jle
dec
cdq
xor
rcl
outs
mov
push
sar
int
mov
and
push
xchg
pop
and
mov
out
mov
push
or
add
sbb
inc
and
in
inc
add
mov
cmps
jne
ficomp
cmp
cmp
jno
mov
mov
inc
es
mov
xchg
push
xchg
movs
pushf
call
(bad)
sbb
imul
shr
fisubr
pop
mov
stos
add
shl
push
shr
and
icebp
imul
je
ss
rcl
fisttp
or
shl
xor
pop
nop
retf
pop
xor
push
push
jl
int
addr16
mov
pop
pop
iret
pop
pop
push
(bad)
push
fadd
inc
jg
jns
daa
push
cmps
out
repnz
jle
xchg
push
std
push
or
fstp
mov
jb
mov
push
dec
and
int
cwde
mov
mov
jno
movs
push
sbb
push
add
cmp
mov
inc
jmp
add
push
shl
stos
mov
dec
ror
(bad)
mul
push
movs
sub
or
fisubr
cs
mov
xchg
imul
inc
test
add
push
icebp
jmp
pop
movs
xchg
js
loopne
retf
(bad)
gs
lock
jno
and
dec
test
test
xor
mov
and
test
or
xor
mul
inc
addr16
or
sub
cmp
xlat
or
xchg
xchg
imul
jae
div
les
adc
xchg
lods
xchg
add
and
out
cmp
repnz
out
xchg
loop
mov
or
aad
xchg
(bad)
insertq
mov
repnz
mov
cli
jge
push
adc
lds
(bad)
cmp
mov
scas
xor
and
push
adc
sbb
push
xchg
jle
test
lahf
and
jecxz
inc
add
mov
ja
or
in
mov
pcmpgtd
add
scas
stc
arpl
bound
lods
aaa
push
and
cmp
(bad)
cmp
retf
stos
push
cmps
jmp
sub
mov
popa
adc
add
jge
xchg
arpl
cmp
mov
ror
arpl
xor
ins
xchg
xchg
sub
cmc
adc
push
pop
dec
jo
mov
pop
cmps
pop
and
dec
call
cmp
xor
fist
jmp
mov
test
jecxz
cmp
pusha
mov
cmp
jbe
ss
mov
xor
push
popa
inc
sbb
aas
arpl
cwde
pop
xor
cmp
cwde
xlat
xchg
xor
js
in
xchg
xchg
mov
in
xor
stos
idiv
lds
loopne
les
pop
sub
(bad)
or
mov
mov
(bad)
mov
xchg
in
xor
jmp
(bad)
jmp
daa
mov
or
add
rol
test
scas
fdivr
call
cmc
dec
mov
(bad)
fs
and
pop
mov
dec
inc
out
add
data16
dec
dec
retf
pop
xor
dec
push
mov
dec
mov
cmp
and
or
push
inc
xor
std
bound
fst
xchg
outs
fidiv
retf
das
xor
push
fsubr
mov
icebp
icebp
xchg
mov
in
mov
ja
push
imul
add
add
loopne
pushf
out
fs
lods
xchg
shl
sets
inc
int
pop
pop
push
in
or
cmp
jge
xlat
(bad)
sbb
mov
jae
mov
popf
mov
repnz
in
cmp
cmp
enter
(bad)
sar
xor
cmp
jecxz
jo
jb
xor
(bad)
pop
stos
test
sub
cmp
sbb
cmps
mov
push
mov
fnsave
stos
jg
cli
ja
add
nop
jle
jae
jge
enter
sub
push
repnz
cmp
jmp
(bad)
out
aam
stos
sub
imul
mov
pop
clc
fs
mov
aam
jbe
adc
lahf
bound
clc
(bad)
movs
pop
jb
adc
jns
icebp
popa
jmp
ss
stos
cmp
adc
and
ins
shl
fwait
sub
push
out
fst
sub
mov
ins
and
fwait
add
and
hlt
add
ds
dec
out
fisttp
jb
dec
add
sub
dec
adc
jns
loop
mov
dec
stos
adc
je
mov
sub
popa
cmp
and
push
xchg
xchg
xor
ds
cmc
jmp
repz
out
lahf
adc
jbe
lea
aaa
imul
data16
mov
or
push
lods
into
repz
sar
xchg
mov
xor
aad
mov
aaa
inc
popa
mov
mov
retf
pop
bound
imul
cli
sbb
push
call
das
rcr
cmp
scas
hlt
lds
shl
cmp
imul
push
inc
cmps
popa
pop
jb
sub
jl
(bad)
je
fidivr
sub
cdq
xchg
mov
rcr
jmp
aad
cmps
out
div
mov
call
shr
stos
cli
iret
adc
test
sbb
add
les
or
mov
sar
lods
push
call
lea
mov
sbb
mov
cmp
jnp
int3
test
add
pop
jns
or
ror
sbb
adc
inc
push
or
loop
mov
popa
sub
push
bnd
dec
inc
xor
ret
mov
jmp
lods
lahf
jno
adc
and
(bad)
sti
outs
scas
dec
arpl
pop
or
inc
lahf
mov
or
clc
enter
mov
inc
mov
xchg
ret
mov
outs
int3
push
(bad)
scas
leave
call
daa
push
shl
aad
cld
cmc
bound
jae
pmulhw
cdq
mov
cs
and
sbb
xor
out
movs
sub
out
aad
cmps
push
dec
mov
cmp
xor
test
pop
(bad)
iret
ins
mul
scas
mov
(bad)
sbb
(bad)
push
sbb
ret
leave
test
xor
pop
xor
sbb
fwait
retf
(bad)
dec
add
or
aas
enter
retf
loopne
jbe
jno
loop
xor
(bad)
ror
scas
and
lods
push
mov
call
sbb
or
daa
ja
inc
(bad)
aas
dec
dec
xchg
dec
fnstenv
pushf
mov
xor
int3
add
fild
pushf
test
sub
imul
lea
pusha
scas
cmps
pop
jno
mov
ins
sub
das
ret
aaa
xchg
aas
xor
mov
cld
mov
jmp
loopne
xor
xor
lods
add
fwait
inc
mov
lods
mov
test
fdivr
sahf
scas
push
jmp
adc
je
push
inc
push
pop
outs
sbb
cmps
int
or
call
fisttp
sbb
imul
aaa
dec
cmp
sti
ins
bound
cs
pusha
jmp
xchg
jnp
mov
mov
out
out
inc
mov
inc
mov
add
mov
xchg
fst
jnp
mov
rol
inc
xor
and
add
xor
mov
addr16
sbb
outs
aad
lods
mov
xlat
stos
push
pop
lea
and
inc
or
mov
mov
inc
sahf
(bad)
push
movs
sub
mov
ror
data16
rcl
stos
cdq
add
mov
or
mov
imul
mov
sbb
cwde
adc
or
cli
enter
mov
adc
sbb
push
mov
fst
push
rcl
xor
enter
in
and
add
mov
jnp
scas
xchg
dec
push
daa
xchg
or
aam
mov
dec
push
fbstp
and
push
inc
stos
cdq
cmp
arpl
lods
dec
xlat
jb
inc
push
and
mov
xchg
call
mov
leave
jmp
or
push
int3
jecxz
and
pop
enter
fist
loopne
jno
lock
sar
rcr
add
push
mov
mov
xor
mov
rcl
aaa
out
loopne
ret
(bad)
adc
dec
ret
loopne
lds
dec
xlat
repnz
sub
sub
leave
jno
cwde
add
fbld
jg
gs
int
inc
icebp
lds
rcr
xchg
dec
sub
mov
dec
xor
lods
mov
dec
add
mov
inc
dec
add
push
pop
loop
loope
inc
loop
push
test
cmp
add
hlt
and
test
and
les
jmp
mov
(bad)
out
sub
outs
push
in
cmps
dec
lahf
mov
mov
inc
pop
xchg
pop
dec
icebp
ins
aaa
adc
xor
mov
inc
pop
sbb
dec
inc
pop
jg
(bad)
popa
call
sbb
es
in
(bad)
jle
jae
lods
shr
aaa
push
imul
dec
gs
imul
call
sbb
stc
loope
jle
mov
mov
iret
adc
add
lea
cmp
neg
cmp
mul
sbb
dec
xor
movs
dec
cmps
inc
les
jno
(bad)
jg
or
add
sub
in
jne
cmps
jg
mov
xlat
pop
mov
int3
push
dec
movs
sub
shr
loop
imul
mov
cmc
std
adc
ss
add
stos
mov
dec
mov
xor
push
and
jo
sub
dec
dec
fbstp
daa
dec
add
leave
push
pusha
lock
mov
sub
and
dec
jae
sbb
add
inc
cmps
jecxz
neg
jbe
(bad)
jp
ins
fiadd
stc
cmp
push
mov
jbe
stc
scas
(bad)
out
pop
ins
push
jo
rcr
push
arpl
sahf
jge
push
jg
(bad)
jno
dec
stc
fs
mov
data16
outs
cmp
dec
jle
ret
test
jne
stc
ins
mul
inc
xor
dec
jae
inc
adc
cld
push
sbb
mov
or
cmp
add
aad
fdivrp
test
add
cmp
and
mov
mov
pop
aam
mov
adc
sbb
mov
lds
xchg
push
ins
mov
ss
and
sbb
hlt
ret
mov
inc
push
es
sub
daa
bound
push
ror
pop
enter
pop
xor
rcl
push
lock
cmp
cmp
das
add
test
xchg
inc
and
adc
push
add
push
aam
mov
push
int3
or
ja
mov
xor
push
push
xor
pop
ds
sbb
add
movs
shl
stos
push
mov
jmp
add
div
add
push
mov
and
push
sbb
(bad)
inc
push
lahf
push
aas
out
int3
mul
push
jg
push
lods
cld
jecxz
ins
call
add
fcmovu
dec
push
(bad)
out
pusha
add
out
je
xor
mov
adc
xor
(bad)
xchg
sti
cmp
mov
cmps
pop
movs
mov
xchg
jb
mov
inc
imul
cmps
outs
mov
push
cmp
ror
lods
sbb
out
push
xchg
xor
aaa
call
add
adc
enter
enter
push
and
mov
add
lea
dec
mov
call
sbb
pop
mov
push
xchg
dec
dec
das
sti
pushf
or
mov
jg
stos
inc
ds
enter
mov
inc
into
or
xor
aam
cmp
xchg
dec
pop
xchg
cmp
fsub
(bad)
shl
sbb
inc
cmp
loope
mov
cli
sub
loopne
pushf
and
ins
and
ins
mul
and
mov
jge
mov
iret
adc
inc
adc
test
or
jle
das
in
(bad)
(bad)
(bad)
sbb
pushf
xor
sub
popa
ret
mov
leave
inc
pop
jmp
adc
imul
push
not
test
mov
sub
movs
mov
pop
and
push
dec
ror
lahf
cmp
pop
xor
mov
bound
fcmovbe
push
dec
in
xchg
and
sti
mov
add
xchg
mov
jle
data16
add
loope
ins
aam
sbb
sbb
dec
push
push
inc
pop
jne
lahf
outs
cdq
fimul
and
sub
icebp
(bad)
jmp
xchg
scas
fnstsw
rcl
(bad)
mov
push
xchg
bnd
out
hlt
in
cmps
jmp
dec
data16
mov
cmp
fisub
adc
lods
les
cld
cmps
mov
sbb
fild
inc
add
adc
lea
pop
and
push
sbb
sub
push
addr16
jbe
or
outs
mov
dec
sbb
rcr
pop
aas
or
sub
cmp
push
adc
sbb
ds
adc
sbb
mov
hlt
mov
mov
retf
out
hlt
ror
jnp
sbb
adc
add
pop
xchg
lock
sbb
popa
xchg
mov
jge
ffreep
mov
not
inc
inc
inc
and
or
sbb
(bad)
sub
jno
sub
jp
out
pushf
scas
int3
pop
dec
fs
xchg
push
lods
cmp
cmc
adc
mov
hlt
jae
daa
xchg
enter
lock
inc
cmps
shl
mov
popf
sub
pusha
leave
pop
push
inc
cwde
jmp
xor
retf
in
in
test
pop
mov
push
pop
and
(bad)
fsub
pop
das
mov
std
pop
in
inc
cmp
sub
sub
mov
movs
fisttp
add
mov
mov
iret
cmp
sbb
pop
inc
lods
jb
mov
mov
rcr
fimul
in
fisttp
clc
cmps
(bad)
ins
aas
pop
aaa
(bad)
and
and
push
sub
cld
xor
addr16
es
imul
jb
add
jb
cmc
arpl
or
and
fist
mov
push
mov
sub
in
xchg
lahf
data16
add
out
hlt
stc
jl
mov
cmp
stos
xor
imul
sbb
cmps
mov
add
aad
dec
popf
xchg
or
xlat
push
jae
and
cdq
mov
xor
mov
pushf
adc
fiadd
push
not
mov
rol
push
pop
adc
stos
xor
outs
rcl
fdiv
(bad)
fwait
js
jg
fld
data16
das
pop
and
add
xor
rcl
lea
popa
mov
(bad)
pop
mov
xor
cmp
sbb
xlat
aas
mov
iret
inc
mov
sub
mov
dec
jle
dec
pop
pushf
fstp
hlt
stc
jo
inc
pop
jg
leave
adc
fst
xor
lahf
jbe
inc
out
dec
scas
loopne
outs
mul
jge
retf
jecxz
cmp
call
shl
ror
or
push
out
das
xor
gs
or
pop
fisttp
leave
in
rol
jno
lds
(bad)
std
cmp
outs
adc
not
jnp
inc
mov
out
add
pusha
fisubr
xchg
mov
test
xchg
dec
arpl
xor
inc
int
mov
mov
lods
and
push
jb
(bad)
xchg
xchg
push
js
and
outs
fld
jecxz
sbb
mov
lds
xor
push
cmps
or
cmp
lahf
push
mov
fnstenv
xchg
stos
fsub
and
loopne
fld
aam
gs
pop
hlt
mov
push
dec
(bad)
lock
ficom
jbe
jb
jns
je
add
ror
out
dec
xor
xor
fldenv
ret
xchg
push
push
in
out
mov
sahf
pop
mov
fld
jl
add
sar
shl
jno
test
push
or
mov
inc
jmp
xor
mov
ret
pop
mov
in
push
(bad)
xor
add
lods
cmc
in
call
sbb
xchg
stc
push
(bad)
xchg
arpl
arpl
adc
dec
sbb
inc
and
repnz
in
bound
daa
push
sub
cmps
and
(bad)
in
jne
imul
xor
sub
sahf
add
adc
out
sub
and
ins
mov
push
mov
inc
fsubr
xor
ret
push
xchg
sbb
pop
sub
add
imul
push
test
push
add
popf
xchg
iret
outs
test
pop
pop
push
loope
add
push
iret
adc
adc
inc
mov
jge
int3
stos
aam
leave
out
hlt
enter
pop
(bad)
push
mov
ins
setle
cld
push
adc
cld
in
mov
ds
inc
lods
in
dec
int
fs
xchg
in
and
outs
enter
(bad)
(bad)
sbb
fxam
mov
jmp
popa
push
imul
mov
jnp
mov
or
add
fiadd
sbb
or
daa
(bad)
adc
push
outs
dec
and
dec
jecxz
rcl
dec
cmp
add
xchg
bound
jl
dec
xlat
jae
xchg
adc
dec
in
dec
pusha
adc
fsubr
inc
gs
stos
mov
imul
push
sub
sub
movs
xchg
ds
push
pop
or
shr
add
addr16
test
adc
sar
imul
push
xchg
(bad)
sub
sar
xor
mov
stos
cs
jp
push
sahf
dec
(bad)
outs
pusha
xlat
imul
cld
and
cmp
mov
lods
cmc
sti
push
popa
(bad)
ins
loope
dec
rcr
xchg
sub
sbb
ins
or
movs
(bad)
and
mov
(bad)
test
dec
fisubr
out
sub
je
retf
jmp
jmp
add
imul
(bad)
sbb
or
bound
xchg
into
inc
adc
xchg
and
cs
popa
loop
push
in
pushf
mov
mov
pop
and
xor
and
mov
mov
mov
sbb
lock
mov
mov
shr
sbb
lods
adc
mov
mov
mov
or
mov
imul
popf
xchg
stc
stc
jne
xchg
ret
or
retf
add
iret
cmp
cmp
ins
pop
fsub
repz
sti
pushf
fwait
lods
and
lea
out
enter
mov
ja
gs
xor
xor
loopne
fs
js
xchg
push
mov
add
inc
inc
add
lods
in
dec
scas
cdq
sti
dec
add
push
imul
add
shr
lock
inc
(bad)
or
mov
and
cmp
mov
sbb
add
xor
stos
mov
int
sub
jo
xchg
xchg
lds
ds
add
les
test
mov
add
test
inc
inc
int
mov
or
sub
mov
mov
and
cmp
movs
mov
mov
mov
add
mov
add
jo
in
mov
push
ds
cmp
clc
add
pop
mov
cmp
inc
shl
sub
cmp
xchg
adc
add
mov
adc
add
dec
and
(bad)
arpl
retf
es
stc
push
in
mov
repz
stos
in
stos
mov
in
pop
pop
mov
adc
mov
add
shl
adc
adc
or
fldcw
pop
in
push
clc
aad
add
mov
dec
pop
loopne
jne
in
sub
inc
xchg
cmp
mov
enter
ret
in
fnsave
xchg
and
pop
mov
push
push
mov
cli
adc
push
mov
push
pop
or
icebp
into
mov
adc
push
mov
mov
repnz
loopne
aas
jb
test
ins
loope
or
add
pop
sub
mov
xor
xchg
xchg
fcomi
cmp
ins
or
rol
pop
aas
add
imul
(bad)
iret
push
test
cmp
xchg
add
movs
aas
xor
jne
out
or
movs
icebp
in
add
inc
ins
sbb
mov
jnp
pop
add
outs
mov
cs
dec
inc
and
sub
inc
imul
push
sbb
push
adc
dec
pop
pop
pop
nop
sbb
push
ja
test
mov
ds
int3
jno
jecxz
cmp
xchg
lds
push
pushf
aaa
sbb
push
inc
loop
fs
inc
aam
movs
sbb
inc
xor
das
iret
aaa
sub
scas
push
mov
push
repz
push
(bad)
pop
push
adc
stos
inc
aas
mov
dec
pop
jg
mov
pop
mov
ret
cmp
push
icebp
out
jmp
mov
pop
hlt
mov
inc
int3
lahf
xchg
jmp
fcmovbe
xor
push
xchg
and
mov
cmp
and
fdivr
stc
xchg
or
jbe
out
rcl
pusha
mov
lds
iret
(bad)
jl
imul
xor
inc
mov
pop
and
scas
loope
mov
scas
mov
and
es
mov
pop
scas
pushf
pop
shr
pop
mov
cld
loope
or
inc
mov
inc
dec
mov
ins
js
cmp
jg
cmp
sub
mov
sbb
punpckhbw
mov
and
xchg
adc
xchg
jmp
(bad)
lea
(bad)
jbe
cmp
loop
and
call
sbb
add
movs
dec
xor
imul
fsub
out
and
push
mov
mov
lea
or
lods
aam
dec
push
sbb
lea
dec
fist
aaa
pop
lods
aas
(bad)
dec
or
movs
(bad)
push
outs
out
movs
and
lahf
push
iret
cmc
jns
sbb
xchg
ficomp
pop
or
jmp
fild
dec
(bad)
rol
add
cmps
pop
imul
loop
dec
mov
jb
stos
es
adc
dec
pop
dec
pop
retf
dec
mov
inc
lock
and
shl
(bad)
pop
int
and
pop
loopne
fadd
fild
fimul
lds
icebp
in
(bad)
sbb
mov
scas
pop
fmul
mov
(bad)
mov
push
leave
test
popa
into
sub
shr
nop
dec
in
cli
adc
sbb
or
add
stc
std
cmps
cs
xchg
out
(bad)
mov
(bad)
in
clc
dec
ret
push
int
shl
add
dec
cmp
cld
fwait
adc
gs
pusha
pop
add
call
jne
sbb
cmp
sub
jmp
jne
pop
fwait
inc
in
syscall
pop
jmp
and
cmp
in
sbb
leave
aad
cmps
imul
leave
jg
inc
mov
stos
loop
std
cmp
ins
jns
ins
in
xlat
inc
sbb
sub
popa
ins
add
pusha
xor
outs
nop
cmp
mov
shl
stos
inc
outs
mov
jae
out
sahf
ins
push
mov
sar
sub
sub
fst
dec
and
ins
mov
jle
aas
mov
mov
pop
stc
into
xchg
push
mov
xor
sbb
sub
xor
shl
xchg
loop
call
stos
jmp
stos
sub
cmps
or
loopne
das
fwait
inc
pop
mov
into
es
fstp
mov
pop
xor
sti
xor
adc
in
test
clc
dec
in
sub
loop
pop
xor
imul
lods
add
push
rcr
mov
dec
fcomp
jg
imul
cmp
cdq
cmp
test
push
pop
nop
mov
mov
test
(bad)
jbe
mov
js
and
clc
mov
dec
clc
movs
mov
arpl
sub
or
push
fdiv
xchg
inc
or
push
jmp
inc
jmp
push
push
cmps
xchg
jp
clc
movs
sbb
pop
dec
shl
fisub
sub
ins
cmp
xor
(bad)
ror
inc
push
sti
jmp
cmps
lods
sub
push
jns
and
xchg
into
adc
pusha
stos
and
adc
mov
lock
or
fnstcw
movs
call
jp
push
pop
cmps
lahf
inc
add
xor
mov
inc
add
mov
jnp
dec
push
repz
shl
or
mov
movs
adc
sbb
or
inc
movs
in
mov
xlat
jbe
inc
fucomp
adc
popa
xor
jo
or
idiv
mov
xchg
sub
lds
pop
dec
sub
pop
push
gs
jno
fnstsw
dec
popa
sar
lods
(bad)
push
aas
sbb
pusha
mov
movs
and
in
enter
shl
jne
inc
xchg
pop
xchg
gs
leave
sbb
icebp
into
mov
mov
ins
add
pop
mov
fs
mov
and
adc
rcr
mov
mov
or
xor
xor
inc
mov
add
sub
test
sub
test
dec
and
test
push
sar
inc
mov
xlat
imul
add
outs
out
mov
mov
out
jb
and
nop
repnz
les
mov
jge
pushf
inc
vphaddudq
pop
xchg
stc
cmps
mov
fs
fimul
mov
push
sbb
jmp
cli
mov
pop
repnz
int3
bound
pop
sub
sub
xlat
pusha
js
pop
lods
icebp
sti
push
cdq
push
push
add
sbb
sti
jae
shr
add
mov
retf
xchg
push
sub
jge
cmp
imul
push
xchg
aad
mov
dec
xchg
jecxz
jl
mov
mov
dec
mov
mov
mov
mov
out
ret
xor
sbb
and
scas
rcl
xchg
std
pop
sub
add
mov
aas
mov
xchg
(bad)
aas
iret
popf
jnp
fbstp
in
loop
mov
pop
mov
or
ret
push
xor
push
loope
jne
mov
mov
fsub
ins
jo
ins
inc
pushf
stos
cli
sbb
rcl
or
jno
push
add
jbe
push
je
arpl
pusha
fild
cli
mov
ret
inc
mov
(bad)
push
call
add
mov
mov
mov
ret
fcom
mov
pusha
and
pop
xor
sub
jle
add
pop
pop
or
icebp
fdiv
es
mov
xchg
mov
mov
outs
test
push
call
mov
aas
popf
sub
outs
cmp
ins
mul
dec
(bad)
nop
(bad)
xchg
push
stos
in
adc
(bad)
cmp
jge
sahf
popf
or
(bad)
mov
xor
adc
mov
cs
sbb
inc
fld
leave
jbe
aas
xor
sar
ja
imul
popf
js
fs
stos
or
inc
adc
pop
in
jg
test
aaa
pavgw
xor
xor
pop
fs
hlt
pop
lea
cmp
push
repnz
dec
jmp
sub
jmp
inc
inc
cmp
pop
xor
add
inc
cmp
dec
jae
push
cmp
add
cs
and
(bad)
mov
pop
es
mov
xchg
xor
(bad)
movs
icebp
sub
jl
sar
test
call
jb
sbb
dec
dec
inc
and
sbb
sahf
xor
add
arpl
jp
or
inc
push
mov
test
aas
mov
enter
xor
add
or
in
inc
pop
neg
jo
popa
test
jg
xor
ds
adc
cli
repz
or
popa
out
jb
ret
xor
add
aam
aam
mov
shl
xor
popf
and
mov
dec
imul
jl
fdiv
rol
jecxz
retf
cmps
inc
outs
pop
cmp
cmps
jo
push
mov
dec
cmp
xchg
fdivr
clc
(bad)
rcl
ja
(bad)
jno
jmp
mov
inc
cli
dec
bound
rcr
jbe
jg
mov
(bad)
ficomp
or
pop
out
int3
std
xor
mov
shr
push
(bad)
push
adc
cli
jne
and
test
push
xor
cmp
xor
jp
daa
(bad)
pusha
sbb
mov
pop
dec
adc
and
sahf
sub
and
add
sbb
jl
aaa
pop
add
xor
repz
arpl
dec
sbb
in
mov
pop
xchg
mov
adc
adc
test
lods
inc
aas
repnz
mov
xchg
pop
cmps
adc
ret
loop
js
xor
xchg
mov
in
inc
cmps
cmp
add
test
test
sbb
mov
push
xor
and
cmps
les
imul
mov
sbb
out
sbb
fld
sbb
sbb
cmp
sbb
or
dec
push
dec
cmp
retf
xchg
fsub
mov
call
lock
loope
cmp
sbb
add
push
(bad)
mov
fs
mov
fsubr
mov
ja
mov
sub
rol
sub
dec
ins
(bad)
sar
test
pop
push
pop
add
add
fcomp
dec
sub
inc
ror
sub
sbb
mov
dec
push
dec
jmp
mov
cmps
popf
add
mov
mov
xchg
dec
xchg
mov
call
sub
inc
dec
mov
jle
cmp
jno
ror
jmp
out
xchg
inc
add
or
div
fcomi
cmp
mov
les
nop
dec
pop
sub
mov
imul
cmp
iret
icebp
cli
cld
mov
pop
ss
jecxz
lahf
or
imul
add
mov
mov
je
push
repz
cmps
adc
dec
mov
push
in
push
push
push
mov
(bad)
in
mov
aaa
ins
icebp
iret
cdq
mov
jge
popa
sub
dec
mul
fimul
xor
aas
fld
mov
pop
daa
pusha
scas
pop
shr
xor
aaa
cmps
call
fld
stos
pop
sub
pop
loope
adc
jo
cdq
cmp
je
sub
ror
mov
sub
cmp
xor
xor
push
lods
xchg
das
scas
clc
mov
ins
pop
or
lahf
sti
not
mov
mov
(bad)
fdivr
cs
sti
in
movs
cmc
mov
adc
and
adc
push
jg
pusha
jl
outs
(bad)
js
jge
add
cmps
mov
movs
in
xor
ins
jl
(bad)
or
es
sub
pop
sahf
fs
sub
in
mov
xchg
int
lock
pop
gs
movs
imul
shl
or
stos
inc
in
aad
push
pop
sahf
addr16
in
cli
mov
mov
push
rol
inc
sub
aad
mov
imul
or
jl
js
addr16
fs
ins
push
ins
je
xlat
xchg
jne
jbe
xor
or
add
fcmovne
jns
inc
cmp
stos
loopne
pop
dec
xor
dec
and
cmps
mov
mov
sti
fwait
ror
pop
int
lods
fdivrp
in
hlt
mov
or
(bad)
xchg
shl
ins
js
(bad)
aaa
in
mov
xor
xor
(bad)
xchg
fmulp
(bad)
cld
xor
addr16
cmp
out
xor
xchg
add
sub
push
mov
cmp
sbb
sub
out
fnstenv
xchg
pop
out
inc
sub
rol
inc
and
cwde
js
push
pop
push
(bad)
pop
or
rol
cli
cmp
xor
iret
fisttp
imul
lods
lods
test
in
jg
(bad)
jge
push
sub
add
mov
inc
inc
pop
cmp
test
sub
cmp
xchg
mov
sbb
fadd
scas
lahf
shr
ret
push
scas
fnstenv
adc
jno
(bad)
fnstenv
movs
imul
sahf
retf
out
xor
sahf
ja
xchg
jge
fsubp
push
movs
adc
jle
cs
fiadd
mov
push
xchg
nop
retf
push
lods
mov
pop
(bad)
fdiv
mul
lods
neg
add
jmp
repnz
(bad)
mov
ins
clc
xlat
test
xchg
into
gs
fs
cld
cmp
jne
mov
stc
cld
mul
stc
daa
cmp
out
ret
aam
retf
loop
xor
(bad)
jno
dec
lods
pop
sub
js
xor
out
jb
jns
ins
lods
retf
push
xchg
loop
sbb
mov
aad
add
call
aad
and
loope
inc
mov
aaa
sbb
sbb
inc
mov
dec
mov
std
xor
push
pushf
aam
xchg
call
scas
cs
cs
mov
mov
jae
xor
mul
shr
inc
stos
mov
cmp
jnp
push
add
sbb
pop
mov
jne
imul
dec
or
push
sbb
loope
int3
das
pop
pushf
xchg
xor
mov
ins
sar
mov
mov
enter
mov
jl
cmp
aad
xor
jg
mov
(bad)
outs
dec
ds
mov
or
or
mov
es
(bad)
mov
daa
dec
popa
pushf
fld
and
mov
adc
sbb
movs
stos
ficomp
sbb
addr16
int3
cmp
sub
daa
and
pop
mov
pop
push
repz
in
je
imul
mov
movs
push
fsubr
ss
out
xor
xor
or
inc
ss
sbb
(bad)
jle
fnstcw
pop
call
js
je
pop
or
ret
push
jne
stc
and
stc
mov
add
rcr
mul
mov
jge
(bad)
sbb
mov
fwait
xchg
and
retf
out
(bad)
mov
cmc
sbb
stos
outs
cmp
sti
popa
fwait
dec
shr
dec
loop
sbb
(bad)
popf
mov
cs
pop
std
mov
xor
pop
xor
sti
inc
sub
mov
sbb
iret
jecxz
push
xor
add
or
rol
pop
mov
clc
cmp
ja
dec
int
jg
jns
aad
loope
pop
in
sbb
add
jp
xchg
int
mov
add
cmp
imul
in
mov
mov
push
fs
leavew
loop
xor
dec
add
pop
test
arpl
push
and
inc
out
and
mov
gs
jno
pop
ret
push
cmc
cli
imul
hlt
inc
dec
mov
mov
std
pushf
loop
cmp
js
jg
sub
aaa
test
fldcw
in
jecxz
pop
cmp
pop
mov
dec
gs
xchg
retf
or
add
mov
pushf
clc
cli
rol
dec
inc
js
mov
cmps
nop
add
int
add
mov
dec
pop
add
stos
mov
fadd
(bad)
scas
pop
jbe
push
clc
xchg
xchg
pop
movs
test
shl
js
cmps
aaa
inc
add
mov
mov
mov
pop
mov
in
arpl
push
outs
(bad)
mov
in
ret
jmp
imul
xchg
mov
dec
ret
and
xor
jo
mov
push
inc
add
movs
daa
lods
pusha
retf
xor
enter
mov
dec
pop
jmp
xor
enter
mov
cdq
cld
std
pop
in
inc
inc
loopne
pop
mov
sahf
cmp
adc
rcl
mov
jmp
(bad)
mov
pop
or
retf
js
sbb
aad
mov
push
push
test
mov
xchg
jmp
aam
mov
clc
xchg
push
jge
jecxz
daa
(bad)
sub
das
pop
add
xchg
movs
outs
mov
or
or
imul
add
mov
in
nop
jg
mov
daa
jmp
and
popf
in
xor
or
popa
jmp
inc
xrelease
xor
mov
ds
inc
jmp
imul
jecxz
xchg
mov
scas
ret
and
std
(bad)
jp
icebp
xchg
sbb
out
xchg
inc
or
adc
push
iret
jge
and
inc
pop
cmp
mov
xchg
jmp
pop
ret
cmps
sub
ins
xchg
fucomip
enter
xchg
add
loop
into
jno
test
je
xchg
js
mov
nop
std
shr
idiv
mov
cmps
cmp
les
pop
stos
sub
or
not
call
push
dec
dec
sub
fwait
in
push
test
jb
adc
pop
and
push
repnz
mov
or
pusha
xor
or
loop
mov
add
(bad)
and
and
nop
imul
dec
push
or
cld
je
das
mov
loopne
ins
ins
enter
cwde
(bad)
pushf
stc
push
mov
or
mov
ret
js
sbb
jp
pop
cld
es
test
scas
jmp
data16
push
mov
inc
or
mov
call
in
(bad)
fptan
aas
mov
test
pop
mov
mov
fnstenv
fbstp
clc
mov
mov
jp
adc
(bad)
or
ds
popf
mov
stc
(bad)
sbb
mov
mov
add
adc
pop
or
push
test
mov
aas
out
xchg
sub
loope
mov
fstp
mov
jnp
push
(bad)
inc
bound
test
leave
xchg
pop
adc
pop
mov
dec
test
jl
mov
pop
stc
xor
cs
or
or
jne
mov
cld
mov
jnp
sbb
test
jl
mov
enter
das
add
(bad)
mov
add
cmp
jle
fcmovu
sub
inc
loop
sub
nop
cmp
aam
mov
jne
push
in
mov
loopne
xchg
pusha
inc
fdivr
scas
outs
fild
push
lock
fs
and
outs
xor
xchg
pop
in
(bad)
sar
cmc
ja
or
lods
call
push
pop
push
imul
or
push
jmp
fisubr
aas
pop
int
popf
aas
inc
mov
and
icebp
xor
and
je
mov
push
xor
sbb
sub
lahf
xchg
mov
adc
in
sub
push
cmps
xchg
pop
push
scas
xlat
push
cli
mov
aas
rcl
sbb
push
sub
fwait
ins
jmp
std
jnp
inc
sub
dec
arpl
mov
xchg
mov
adc
adc
mov
jmp
dec
xor
test
mov
mov
mov
neg
(bad)
fadd
xchg
xlat
mov
in
cmp
hlt
pop
sbb
push
xchg
int
cmp
sub
(bad)
mov
adc
imul
shr
add
sti
cmc
push
inc
fld
icebp
add
inc
out
outs
or
clc
sti
push
neg
leave
mov
ja
pop
inc
xor
add
mov
sbb
shl
sub
inc
rcr
push
movs
mov
dec
and
cmp
jp
sar
push
push
xlat
popf
je
and
jns
and
ret
imul
cs
bound
ror
pusha
mul
dec
jmp
aas
pop
mov
xor
jae
add
xchg
add
stos
mov
scas
outs
fld
jb
ficomp
aas
cdq
mov
sbb
pusha
cmp
xor
mov
jmp
add
cmps
not
(bad)
cli
mov
push
mov
dec
sbb
cwde
jl
dec
jnp
ja
imul
pusha
pop
ds
or
add
ins
outs
cmp
pop
hlt
movs
push
and
imul
fdiv
xchg
nop
enter
aaa
sub
cmp
sahf
sar
or
add
movs
dec
sbb
fwait
cld
sbb
pusha
sub
mov
pop
aaa
ss
aad
push
repz
xchg
and
aas
out
inc
mov
mov
cli
ins
and
data16
frstor
aas
bound
stc
push
pushf
and
int
adc
mov
call
mov
stos
jb
adc
mov
in
jo
push
jle
xor
hlt
arpl
jno
cld
mov
bound
dec
shl
std
pushf
jecxz
jmp
mov
or
into
sahf
dec
mov
sub
scas
and
jo
movs
pusha
ror
(bad)
fs
in
rcl
retf
in
and
xor
mov
jo
lahf
mov
xor
test
jno
(bad)
jmp
pop
add
cmp
dec
gs
lods
fwait
dec
cmps
aas
pop
mov
movs
adc
sub
call
xor
mov
mov
and
cdq
mov
rcr
inc
test
imul
lahf
sub
and
push
sbb
jg
mov
add
sub
ins
ret
rcl
inc
and
lahf
mov
fbstp
into
adc
mov
test
xchg
sbb
out
cmc
sar
imul
jno
xchg
lds
push
bound
in
mov
(bad)
test
jo
xchg
lods
test
push
inc
inc
std
mov
jg
out
loop
xchg
push
inc
mov
pusha
call
mov
stos
or
sbb
cli
cld
mov
xlat
mov
mov
mov
push
dec
mov
aad
imul
mov
addr16
scas
pop
mov
loope
jle
xor
int3
adc
popa
inc
mov
inc
(bad)
cld
enter
int3
clc
adc
(bad)
sub
imul
pop
ja
push
(bad)
mov
push
add
dec
and
retf
jecxz
ret
xchg
int
mov
(bad)
data16
jg
xchg
stc
jg
call
sub
mov
popf
sub
xor
test
aad
cmc
lahf
mov
xor
test
gs
loope
sub
cmp
inc
push
mov
and
inc
jl
gs
jl
push
popa
or
je
push
lods
mov
ret
popa
loopne
or
cli
or
dec
sub
push
sbb
jle
arpl
lock
jnp
mov
mov
(bad)
mov
xor
mov
cli
or
or
stos
stos
cli
hlt
mov
push
lods
mov
xor
cld
mov
data16
adc
sbb
std
fist
jo
retf
(bad)
cld
mov
bound
mov
adc
xor
or
sbb
ds
aam
test
std
mov
inc
je
sbb
(bad)
fistp
pop
push
inc
mov
popf
xchg
fdiv
dec
mov
mov
add
int
jno
cli
cmc
dec
and
nop
push
xor
add
pop
in
jg
sbb
js
outs
cmps
jno
out
push
adc
mov
imul
fild
cwde
(bad)
in
shl
ror
call
add
jecxz
shl
(bad)
xrelease
push
(bad)
ret
jno
lods
rcr
icebp
jnp
mov
lahf
inc
call
ds
inc
imul
mov
ffree
pop
pop
ins
outs
cli
mov
mov
(bad)
loopne
(bad)
dec
dec
pop
test
mov
adc
pop
in
test
outs
das
outs
jp
inc
cld
jbe
xchg
sub
jp
ret
jbe
data16
add
mov
push
sti
push
sub
ss
mov
mov
dec
mov
push
fld
je
jmp
stos
fdiv
xchg
xchg
lock
test
bound
inc
xor
in
cmps
push
sub
sub
adc
push
out
mov
je
(bad)
mov
push
add
mov
stc
cmp
icebp
xor
dec
pushf
and
push
enter
inc
mov
jns
and
movs
mov
add
sbb
sub
push
test
mov
clc
fsubr
xchg
pop
xchg
adc
inc
cmp
popf
pop
and
nop
and
add
mov
and
call
add
push
jp
adc
adc
adc
dec
out
stos
outs
shr
lahf
and
or
push
in
test
sbb
movs
dec
js
cli
adc
fild
aaa
adc
mov
and
stc
cmp
in
push
dec
xchg
sub
dec
inc
adc
fcom
sbb
aaa
adc
les
or
sub
ds
loopne
cmps
lods
sar
movs
xor
cmps
pop
or
imul
std
neg
mov
pop
or
push
shl
inc
arpl
add
push
mov
fcomp
and
ds
int
fwait
xchg
cdq
mov
jg
je
call
loop
mov
retf
or
rcl
lock
aas
sar
imul
arpl
adc
ins
test
add
(bad)
jns
es
add
into
inc
arpl
inc
mov
xor
mov
out
aam
icebp
(bad)
mov
push
inc
fsub
sar
lods
(bad)
aad
xchg
mov
in
xchg
cmp
ret
movs
stc
adc
clc
ret
add
and
mov
(bad)
mov
dec
xchg
or
or
rcl
fadd
jle
sti
push
inc
stc
sbb
ror
and
pop
inc
dec
pop
push
popf
push
and
and
mov
loop
pop
and
fcom
call
aam
jmp
and
fmulp
data16
in
xchg
loope
js
or
add
cli
mov
dec
cmp
push
or
dec
jp
cwde
(bad)
adc
test
or
jnp
outs
jl
imul
stos
xor
xor
jae
jp
xchg
or
jmp
mov
pop
psrad
pop
push
loopne
push
stos
cmp
shl
bound
and
mov
add
xor
iret
mov
pusha
mov
jmp
mov
dec
or
mov
or
aad
out
mov
lock
xchg
arpl
jo
mov
sub
and
sti
or
sub
xor
or
jno
jmp
mov
fcomp
loopne
ror
scas
pmaxub
jg
push
iret
in
and
packuswb
fidiv
fnstcw
pop
or
pop
sbb
out
movs
cmp
adc
arpl
out
out
lds
and
pop
or
jecxz
push
xor
sbb
test
test
mov
pop
mov
jb
out
icebp
test
jno
arpl
lds
jge
lock
movaps
push
or
(bad)
cmc
and
mov
sub
inc
push
fst
fadd
dec
or
fmul
dec
add
add
xchg
xlat
(bad)
jle
jge
cmc
in
push
mov
shl
and
pop
dec
rcr
es
gs
nop
push
or
mov
lock
mov
push
int3
js
mov
or
add
leave
loopne
mov
mov
out
mov
leave
jmp
cmp
iret
int3
dec
mov
out
outs
push
cs
or
or
mov
mov
movs
sti
bound
repz
das
dec
xchg
in
fs
(bad)
jmp
ficomp
mul
inc
sti
(bad)
fstp
inc
jmp
mov
pop
clc
dec
mov
cdq
add
mov
mov
test
or
aas
mov
xchg
ror
data16
mov
pop
nop
and
icebp
dec
(bad)
nop
sbb
xlat
adc
dec
stos
jg
in
mov
ins
mov
dec
add
cmp
pushf
cmp
(bad)
mov
fsubr
daa
jg
inc
lahf
test
ja
sbb
and
retf
nop
out
sar
push
test
retf
and
inc
or
jle
(bad)
out
jecxz
icebp
aad
leave
in
fistp
clc
aas
dec
or
outs
jne
push
idiv
cmps
or
jmp
cmp
test
shr
ja
fidivr
pop
fld
push
cli
adc
sti
adc
xchg
xor
in
xor
std
pop
imul
rol
je
xchg
fld
(bad)
leave
mov
pop
push
int3
and
adc
xlat
mov
ins
(bad)
and
cmp
out
cmp
or
out
mov
mov
push
movs
dec
jg
push
add
inc
stc
jne
pslld
jne
cld
or
repnz
sub
nop
mov
cdq
dec
(bad)
sahf
push
call
xchg
call
std
push
push
dec
and
xor
cmp
fadd
test
aad
(bad)
xchg
inc
or
dec
(bad)
or
data16
aaa
outs
sub
mov
add
test
jae
out
add
mov
ins
fld
or
aad
mov
and
ror
jne
dec
mov
lods
cdq
clc
retf
bound
dec
pushf
xchg
push
ret
call
jnp
mov
loope
xor
lods
xchg
xchg
enter
dec
and
and
sbb
cld
push
mov
ja
and
or
mov
popf
xlat
jl
mov
out
les
push
ja
xor
xchg
addr16
add
outs
adc
inc
loope
mov
sbb
fs
inc
dec
(bad)
aas
fidivr
add
test
dec
xor
arpl
cmps
sbb
pop
adc
(bad)
ds
sbb
jo
fwait
cs
loop
js
jl
inc
add
scas
push
(bad)
scas
inc
dec
inc
mov
(bad)
adc
mov
leave
lea
les
icebp
clc
mov
shr
mov
out
mov
inc
add
mov
rol
addr16
pop
pop
sti
icebp
sub
mov
push
jb
gs
cli
out
rcl
in
mov
adc
mov
cdq
jle
shl
out
in
adc
mov
gs
sbb
cmp
sbb
lock
retf
and
push
dec
shl
push
xchg
jge
cmp
fild
pop
sub
push
xor
mov
sub
inc
sub
pop
sti
imul
mov
dec
cmc
idiv
adc
(bad)
jge
scas
out
jecxz
cwde
mov
(bad)
and
stos
mov
and
pop
add
dec
mov
test
sti
loope
sbb
cs
cmp
and
lods
aaa
rol
push
gs
ror
ins
push
mulps
sbb
test
fcom
adc
xor
or
inc
cmps
sbb
ss
fdiv
cmp
(bad)
aam
aaa
inc
mov
das
push
aaa
pop
mov
xor
cld
or
jmp
ds
push
jne
and
(bad)
xor
retf
test
dec
(bad)
jnp
das
cli
jmp
nop
push
jle
in
rol
(bad)
push
retf
movs
sub
cmp
pusha
lahf
inc
xor
ins
cwde
xchg
jg
mov
into
sar
inc
xchg
and
aaa
cdq
jae
lahf
pop
out
adc
aaa
lods
pop
push
ja
dec
sub
xor
push
add
jecxz
outs
cmps
or
outs
out
jmp
cmps
adc
shl
bound
cld
cli
shl
or
or
mov
call
out
das
pop
pop
popf
xor
sbb
sbb
not
out
sbb
dec
sti
fadd
jg
test
jge
idiv
das
cld
jmp
mov
aas
rol
push
inc
xor
mov
xor
add
lods
or
addr16
pop
or
mov
hlt
jo
adc
add
pop
jb
push
mov
cmp
mov
dec
jge
nop
shl
adc
loop
ins
clc
jmp
dec
mov
rcr
add
adc
int
inc
mov
mov
and
out
(bad)
mov
(bad)
jecxz
mov
xchg
adc
adc
jmp
icebp
shr
mov
movs
stc
dec
aad
fist
jecxz
jo
mov
clc
xor
(bad)
sub
xor
add
std
jp
dec
mov
int3
call
(bad)
dec
jl
xchg
sar
sbb
out
repnz
xchg
sub
aad
call
rcr
xchg
repnz
test
adc
or
loopne
jl
jmp
mov
or
pusha
mov
add
mov
push
pop
adc
sti
jno
inc
out
loope
sahf
mov
push
imul
mov
xchg
adc
icebp
je
dec
(bad)
mov
movs
cmp
cmps
jg
loope
pop
jecxz
jge
cmp
jmp
cmc
cld
jae
mov
dec
or
fimul
jnp
enter
rcr
(bad)
adc
icebp
psubsw
dec
hlt
or
jne
in
xchg
stos
jmp
aas
jp
lea
sub
pop
xchg
pushf
mov
fisub
cmps
ss
loopne
fsubp
adc
mov
les
fld
push
xchg
xchg
add
pop
add
adc
inc
stos
int
xor
and
clc
jl
(bad)
mov
outs
ds
js
dec
sub
outs
enter
add
jo
xchg
fcom
rcl
jmp
ja
pop
and
(bad)
mov
sub
imul
lahf
rcr
mov
pop
mov
cmps
mov
mov
aas
xchg
bnd
out
mov
jb
addr16
add
mov
jecxz
or
mov
adc
mul
xchg
(bad)
pop
inc
xor
sbb
jb
add
cmps
loope
fimul
loopne
sar
shl
cdq
lods
addr16
fist
jnp
and
daa
fs
fwait
mov
xor
inc
sti
aaa
cmps
push
mov
inc
mov
cmp
test
arpl
push
mov
cmc
jmp
mov
push
and
std
inc
cs
xlat
aad
inc
jmp
pushf
test
retf
loopne
mov
sbb
sti
movs
mov
(bad)
test
rcr
pushf
movntq
or
mov
(bad)
dec
cwde
xchg
xchg
ret
or
rol
pop
pop
push
shl
mov
cmp
lahf
pop
mov
or
js
and
(bad)
sbb
inc
pop
inc
sbb
mov
xchg
xchg
imul
int
cmp
inc
and
ret
push
push
nop
test
dec
pop
cmp
add
push
imul
add
mov
and
sti
inc
cmp
jg
movs
mov
mov
jecxz
push
adc
jmp
xchg
add
loope
sti
icebp
icebp
in
cmp
sbb
pop
inc
(bad)
sbb
push
pusha
push
jecxz
add
mov
retf
inc
idiv
leave
movs
retf
xor
loop
test
mov
shl
mov
ret
jmp
sahf
mov
paddb
push
std
or
neg
shr
sbb
movs
add
sbb
add
adc
sbb
out
pop
jnp
inc
ret
lods
imul
sbb
cmc
jecxz
and
fbld
pop
sar
cld
mov
and
scas
sahf
repz
mov
cmp
movs
les
mov
jl
xor
xor
push
inc
jo
mov
stos
cwde
call
fldenv
popf
ds
sub
xchg
pop
or
push
dec
xor
pop
jno
dec
movs
jo
sub
fbld
jge
int
div
jmp
in
clc
sub
lds
imul
imul
lods
xchg
mov
pop
dec
sbb
mov
xor
ins
push
pop
jp
dec
rol
pop
jns
aad
(bad)
cmps
sbb
cld
or
lahf
and
xchg
fisubr
loopne
ret
bound
neg
cmp
retf
out
ds
xor
mov
push
add
jle
rol
fwait
mov
adc
in
addr16
dec
dec
in
mov
fwait
js
es
adc
cmp
push
xchg
cmc
std
loope
js
sar
xor
jg
fwait
std
add
inc
lahf
rol
loopne
add
add
push
jnp
jg
jnp
ret
jnp
xor
push
sub
push
adc
rcr
mov
pop
add
retf
add
xor
(bad)
test
(bad)
xchg
cmp
xor
add
mov
push
jecxz
inc
or
sub
push
mov
cli
push
sbb
mul
dec
mov
sbb
out
mov
dec
cli
sub
inc
loope
repnz
adc
cmp
mov
js
push
jnp
or
shl
xor
xlat
int
and
jmp
and
in
(bad)
xchg
(bad)
lahf
jecxz
aad
js
add
sub
or
pop
jp
sbb
(bad)
xor
cli
es
jmp
jle
push
rcl
ja
jg
(bad)
jbe
(bad)
sub
unpckhps
fcomp
mov
mov
pop
cs
cli
rol
cmp
les
lahf
rcr
std
je
sbb
in
ret
arpl
mov
push
cmp
fistp
in
dec
jg
add
push
xor
add
mov
sbb
(bad)
mov
pop
mov
data16
fisub
(bad)
jle
cmp
cmp
clc
jmp
and
fadd
push
or
cmp
sbb
push
out
xor
ror
pop
jl
rep
in
cmps
mov
xrelease
xchg
icebp
mov
enter
inc
ss
adc
jae
xchg
jecxz
cmps
push
xor
xor
jl
mov
mov
ins
lods
xchg
push
cmp
xlat
daa
pop
jnp
cmp
movs
iret
jl
sbb
out
push
ds
jge
adc
lods
stc
dec
mov
out
or
add
(bad)
in
fiadd
inc
push
jnp
call
lds
jg
(bad)
sub
neg
add
xor
inc
imul
call
jmp
daa
test
pop
adc
add
or
xor
mov
mov
mov
idiv
xchg
xchg
sub
sbb
retf
es
(bad)
add
aam
push
pop
in
mov
xchg
sub
jl
(bad)
mov
adc
cmp
dec
idiv
cmp
cmp
mov
mov
outs
cmps
stos
add
dec
pushf
and
fcmove
std
inc
jge
pop
mov
icebp
loope
lock
fstp
test
outs
mov
push
js
not
xor
cmps
sub
and
(bad)
(bad)
xchg
shl
out
ret
sub
dec
inc
inc
add
mov
sbb
rol
add
loope
xchg
loope
js
dec
stos
xchg
inc
and
lock
or
int
mov
div
loopne
push
or
out
sub
jge
mov
retf
sti
clc
inc
mov
sbb
cld
enter
add
cs
out
fidiv
pop
fst
test
test
mov
xlat
(bad)
fucom
jno
imul
fistp
sbb
imul
loopne
adc
js
sub
int
pop
retf
mov
add
pop
mov
iret
fs
push
scas
clc
dec
dec
dec
clc
leave
repnz
(bad)
fs
mov
movs
std
ror
jo
add
fwait
int
jnp
cmp
int
cld
dec
adc
daa
xchg
xchg
mov
sub
ret
jmp
(bad)
into
fistp
mov
jmp
jno
push
sar
into
hlt
stc
jmp
xchg
hlt
inc
cmps
dec
pop
sahf
cmc
pop
jg
imul
sbb
ins
jp
cmps
add
dec
pusha
mov
sti
xchg
daa
push
adc
aas
mov
addr16
sub
mov
cwde
dec
mov
add
mov
scas
fdiv
jae
addr16
xchg
sub
inc
push
push
ficom
jge
clc
xor
pmulhuw
jg
or
mov
das
mov
sbb
daa
jbe
and
gs
psubsw
mov
scas
xor
call
enter
pop
adc
jl
stos
fcmovu
push
mov
inc
daa
mov
sbb
fdivr
inc
lods
cmp
or
retf
xchg
adc
xor
addr16
shl
inc
pop
pop
pop
ds
daa
jle
enter
fmul
inc
sub
xchg
sti
dec
mov
jl
fstp
cmps
fistp
or
or
lock
jle
(bad)
and
addr16
aas
mov
enter
cmp
out
add
jle
adc
jg
fsin
(bad)
das
rol
jae
pop
push
test
xchg
sbb
mov
int3
jecxz
and
mov
leave
fisttp
mov
jg
ret
mov
pop
pop
pop
in
fsub
fld
adc
in
dec
adc
or
nop
inc
mov
call
adc
lods
and
sbb
push
and
sbb
(bad)
movs
cmc
aas
xor
xor
not
lock
xchg
repz
pop
xor
mov
rcr
in
jge
icebp
repz
lahf
hlt
cmc
cmp
pop
ficom
pop
xor
sub
jp
sbb
sub
sbb
out
cli
mov
scas
scas
popf
out
and
loope
push
mov
ja
push
mov
mov
pop
pop
inc
or
or
mov
dec
sub
shl
jmp
loop
mov
cwde
pop
add
rep
dec
aas
add
dec
(bad)
(bad)
call
(bad)
mov
jmp
movs
out
sar
cld
shl
xor
mov
mov
jo
cmp
call
and
jl
jmp
jecxz
inc
push
add
je
push
mov
push
xchg
sti
mov
jnp
jl
repnz
(bad)
jle
shl
jae
mov
ret
repz
pop
mov
and
test
mov
pop
mov
mov
out
pop
pop
cmp
test
mov
fadd
push
repz
push
adc
retf
and
shr
push
lods
inc
sbb
leave
(bad)
lea
pop
pop
mov
cmp
push
push
mul
test
pop
out
mov
fst
jb
mov
sar
sar
sar
stos
or
fcomp
rol
cmps
iret
xor
jg
arpl
inc
das
repnz
jmp
dec
mov
inc
mov
mov
mov
and
pop
movs
or
pushf
mov
in
add
ins
xchg
or
fdiv
ss
mov
mov
push
jmp
xchg
add
xchg
out
sbb
adc
dec
xor
sbb
lock
jl
xor
loopne
inc
jb
retf
je
pop
add
pop
dec
shl
test
adc
mov
gs
dec
cmp
mov
inc
cli
inc
das
fs
ficom
and
ins
xchg
xor
add
add
mov
sbb
loop
je
stc
cmps
sub
jl
out
mov
pop
daa
mov
(bad)
sbb
cmps
dec
xlat
sar
push
dec
stos
std
xchg
push
sbb
and
shl
push
and
mov
and
inc
movs
mov
mov
mov
mov
xchg
push
push
sub
lea
or
or
test
add
cs
jge
popf
ficom
out
std
out
sar
and
mov
int3
jg
stos
or
pop
sub
int3
imul
mov
xchg
ds
(bad)
push
ins
xchg
ja
cdq
mov
jae
in
test
add
xchg
(bad)
cli
movs
jmp
popa
out
in
loop
and
and
rcr
xchg
add
xor
shl
lds
dec
or
jno
mov
mov
add
jb
mov
(bad)
push
aam
es
leave
jge
fucomip
in
ret
push
xor
iret
sub
inc
hlt
xchg
enter
lahf
inc
mov
icebp
sbb
or
rcl
jo
adc
gs
in
and
stos
in
ds
mov
icebp
mov
js
xor
lods
push
dec
jl
data16
push
xchg
sahf
stos
daa
ret
mov
or
je
mov
cwde
lea
add
cmp
sub
sbb
cmp
jl
xor
sub
retf
sub
mov
shr
nop
lods
add
cld
cmp
and
je
jno
out
call
ror
jecxz
sub
and
enter
pushf
mov
jecxz
std
inc
or
ret
and
mov
rol
stc
scas
or
loopne
(bad)
cdq
push
adc
int3
adc
sbb
jnp
test
in
fmul
pusha
movs
inc
rcr
adc
nop
loope
ret
or
jp
lock
jle
sub
fwait
sbb
sub
xchg
nop
mov
mov
sub
mov
and
mov
daa
enter
xchg
test
or
xor
cmp
test
adc
and
mov
ror
ja
mov
out
mov
(bad)
(bad)
fnstcw
jle
push
mov
pushf
test
cdq
ret
fiadd
inc
pop
rcr
fcomp
retf
cmp
pop
inc
xchg
fdiv
je
cdq
enter
ins
loopne
dec
icebp
out
push
dec
jbe
add
and
add
xchg
push
nop
or
loop
cmps
enter
and
bnd
lahf
lahf
xor
push
(bad)
hlt
jne
sub
call
xor
repz
cmp
bound
ja
out
mov
aam
ficom
mov
sub
pop
or
sar
xlat
(bad)
(bad)
scas
in
mov
enter
pushf
cmp
cmp
ins
inc
and
adc
retf
ret
aam
(bad)
outs
scas
or
lods
mov
dec
xchg
inc
inc
mov
lods
and
(bad)
add
je
sbb
push
sub
stc
xchg
sub
nop
push
mov
or
xor
adc
bound
or
fild
mov
mov
outs
sbb
adc
int
test
push
jp
ins
pop
jmp
push
add
or
xor
mov
cmp
mov
and
inc
jae
adc
xchg
pusha
adc
jne
or
cdq
(bad)
cmp
ret
ins
cmp
(bad)
scas
sti
sti
test
in
jno
loope
sbb
lods
and
cmp
jns
jle
ret
(bad)
fdivr
push
adc
bnd
fcomp
mov
test
mov
cmp
(bad)
rcr
daa
sti
cli
les
ss
pushf
dec
mov
ja
ret
add
cmp
push
out
cmp
cmp
(bad)
sub
add
fcmovu
mov
loopne
int
xchg
sub
sub
jo
pop
cmp
push
mov
and
adc
std
jbe
add
add
xchg
int
add
repz
xchg
inc
or
out
add
hlt
shl
xor
mov
stc
pushf
pop
jns
pop
sbb
neg
(bad)
out
xchg
scas
stos
mov
sar
out
rol
mov
pop
or
add
(bad)
sub
fcomp
pusha
and
xor
dec
(bad)
push
jnp
mov
and
xchg
lahf
jl
mov
pop
enter
push
in
dec
fstp
ret
cdq
cs
fild
repz
imul
ret
jae
mov
aas
retf
ret
dec
dec
mov
inc
adc
adc
loopne
enter
out
es
sub
jb
xor
adc
sahf
lahf
push
sti
cmp
daa
pop
jns
ror
xchg
or
cli
(bad)
xor
jmp
jbe
mov
jbe
cld
mov
sub
sub
clc
xchg
push
addr16
xor
adc
lock
jne
xor
jge
ins
mov
xor
es
das
imul
sbb
loopne
scas
bound
push
mov
ret
push
jle
in
push
xor
push
imul
or
pushf
sub
das
lea
fcom
ja
add
mov
or
push
mov
push
sbb
lock
movs
dec
xor
add
fsubr
(bad)
push
sar
call
dec
cmp
cmp
pushf
out
pop
ret
and
stc
bound
lds
(bad)
push
jg
test
xor
mov
fidiv
pop
sbb
fnstenv
push
enter
fisttp
mov
push
sub
pop
xor
adc
mov
push
push
cmp
inc
cmp
sub
mov
mov
fisttp
jnp
std
jmp
cmp
imul
retf
sbb
rcl
mov
cmp
shl
aad
test
jmp
out
gs
sub
sub
addr16
push
div
jecxz
pop
xchg
inc
outs
retf
add
sbb
pop
(bad)
nop
dec
xchg
push
jg
ds
sbb
iret
call
mov
mov
xor
ret
sbb
lahf
loope
fidivr
pop
std
in
cmps
jns
out
ds
pop
or
sbb
scas
push
fmul
cmp
push
aaa
inc
cmp
push
test
xor
and
add
les
int
pop
imul
mov
mov
fisttp
jmp
mov
and
fwait
xor
fnstenv
std
pusha
jmp
mov
leave
xlat
aas
mov
inc
and
add
lahf
pop
cmp
sbb
and
test
dec
daa
mov
fwait
repnz
ret
fisttp
shl
inc
xchg
into
push
icebp
clc
mov
cld
das
mov
loopne
(bad)
mov
push
cmp
push
xchg
cs
mov
push
mov
sbb
mov
pop
add
mov
inc
sbb
iret
sub
scas
cmp
xor
cmp
push
test
or
or
in
daa
push
pop
(bad)
lea
in
ret
xchg
push
je
pusha
shl
rol
bound
lds
cdq
cli
out
push
iret
sub
shl
out
or
sub
cwde
loop
(bad)
test
push
ja
test
push
xor
sahf
xchg
and
sbb
cdq
sahf
add
add
dec
push
add
icebp
movs
pop
cwde
push
xor
mov
mov
push
adc
test
out
fiadd
neg
les
sbb
cmp
daa
fcomip
xchg
adc
cs
and
or
mov
cmps
mov
sub
pop
jl
or
mov
mov
pop
xchg
xchg
xor
mov
pop
das
push
xlat
aad
lods
mov
rol
jbe
clc
clc
sbb
out
pop
sub
sub
jecxz
aas
cmp
and
cmc
sbb
mov
les
jnp
sub
icebp
shr
movs
arpl
jecxz
xchg
enter
leave
jg
cmps
fist
(bad)
push
jg
test
jno
mov
daa
rcr
test
cmc
or
adc
retf
adc
dec
(bad)
add
sar
(bad)
loopne
int
and
loopne
sbb
cmp
adc
ds
add
and
int3
(bad)
mov
adc
loope
xor
mov
das
jb
adc
inc
mov
in
push
jp
in
stc
jnp
jecxz
test
mov
loopne
or
lds
dec
sahf
mov
push
setle
add
fst
repnz
xor
lods
jmp
rol
test
addr16
out
mov
add
cmps
sti
jl
fstp
jmp
mov
and
dec
adc
jno
jo
imul
dec
inc
xor
call
repnz
sub
int
jbe
mov
fld
addr16
xlat
add
sbb
retf
mov
(bad)
mov
push
repnz
cmp
jp
jle
sbb
fucom
call
fild
pop
sub
push
add
stc
enter
sti
or
cmp
fst
fdivr
addr16
dec
jae
mov
xor
mov
xchg
xor
push
outs
lods
gs
out
sub
sub
or
mov
(bad)
sub
js
inc
or
inc
dec
emms
sub
push
dec
pop
sub
sub
and
lock
out
cmp
sub
jnp
popf
mov
into
std
cmp
test
pop
jns
movs
aas
aaa
cld
pop
push
movs
xchg
push
push
add
not
push
out
push
pop
call
xor
mov
cmp
pop
and
aas
cmp
push
lock
cdq
push
cmps
or
xchg
loope
sbb
jae
rcr
push
xchg
or
mov
lahf
dec
enter
frstor
adc
pop
mov
push
or
fild
aam
(bad)
outs
and
bound
push
cld
pop
cmp
add
out
lahf
into
icebp
pop
push
cmc
stc
(bad)
xchg
stos
add
xchg
mov
jbe
(bad)
mov
arpl
dec
xor
dec
scas
mov
loope
rcl
pop
call
cmp
addr16
cdq
jb
int3
add
xor
outs
adc
ds
xchg
mov
jg
cmp
xor
add
je
xchg
or
jmp
or
mov
add
cld
cmp
mov
cwde
mov
sub
mov
(bad)
sub
outs
dec
repz
jge
jno
stos
add
ins
or
scas
(bad)
pusha
arpl
pop
lods
cmc
jnp
jb
test
mov
mov
mov
xlat
scas
pop
cmp
pop
popa
enter
jno
cmps
dec
sub
shr
sahf
jle
(bad)
jmp
xchg
cdq
mov
xchg
scas
add
icebp
push
inc
loopne
mov
ret
rol
enter
xchg
push
mov
dec
mov
movs
jmp
hlt
enter
mov
add
cmp
(bad)
xor
daa
xchg
push
xor
mov
repnz
inc
push
push
and
repz
repnz
or
inc
in
cmp
adc
mov
add
out
das
imul
sbb
mov
xchg
leave
pop
es
les
dec
and
cmp
dec
and
mov
cmp
jmp
xor
rcl
fisttp
(bad)
add
xor
mov
cli
cmp
pop
add
sbb
mov
inc
xchg
int
(bad)
jmp
jae
cld
jne
xor
push
enter
sub
push
cdq
pop
xor
add
cld
add
mov
ret
mov
test
sbb
rcl
pop
test
daa
movs
scas
iret
jle
adc
push
add
iret
daa
pusha
dec
shr
dec
dec
cmp
pop
mov
mov
dec
call
mov
sbb
xchg
xor
sbb
jbe
mov
mov
sub
mov
shl
pop
in
stc
sti
ja
inc
cmp
ret
ds
call
adc
jl
or
inc
(bad)
mov
hlt
mov
push
test
or
push
sti
clc
daa
adc
rcl
mov
idiv
mov
jb
xlat
(bad)
mov
fnstcw
or
cdq
inc
ret
pop
add
mov
sbb
and
jns
mov
mov
mov
push
mov
call
xor
xor
jecxz
dec
fsubr
ror
leave
out
push
pop
arpl
cmps
push
int
dec
cmp
sbb
xor
iret
jp
sbb
lea
cmc
jp
add
xor
or
xor
adc
push
push
sub
rcr
pop
or
and
adc
or
and
sbb
sbb
(bad)
fwait
dec
ins
in
cwde
dec
bound
mov
ss
retf
loop
aas
imul
loop
dec
push
add
mov
(bad)
jle
add
pushf
sub
pop
arpl
mov
leave
pushf
xchg
(bad)
and
shl
xor
into
or
sub
nop
mov
sub
mov
pop
add
mov
rdmsr
out
inc
cmp
jmp
xchg
leave
in
and
pop
nop
mov
xor
test
rol
dec
fst
rcr
jecxz
jbe
sti
int3
adc
push
fucomip
data16
mov
and
data16
leave
mov
pusha
(bad)
xlat
stc
cmp
inc
push
sbb
sub
add
std
fld
fimul
(bad)
out
iret
pop
es
arpl
fs
(bad)
fisubr
imul
pop
ins
or
loopne
add
bound
or
sub
adc
or
push
inc
shl
inc
mov
dec
ret
sbb
mov
test
ret
mov
lahf
out
out
enter
int3
movs
aaa
xchg
add
out
inc
sbb
pop
fnstenv
mov
ror
adc
movs
jne
inc
sub
stos
ja
data16
out
cmp
add
sub
jb
(bad)
sub
(bad)
popf
leave
in
iret
dec
inc
out
cmps
sub
sbb
fidivr
out
push
repz
push
sub
sti
dec
mov
sub
hlt
jae
sbb
adc
(bad)
fsubr
outs
ins
cmp
mov
sub
out
add
and
neg
fst
and
sub
hlt
mov
adc
inc
(bad)
outs
jns
div
(bad)
xor
dec
xchg
xchg
stos
add
xchg
popf
shl
xlat
xchg
rol
imul
pop
lods
js
retf
sbb
inc
xchg
stos
xor
test
movs
imul
arpl
imul
test
add
push
adc
xor
stos
add
push
add
lea
movs
imul
arpl
imul
les
and
add
add
add
dec
inc
scas
inc
pusha
add
add
add
add
add
add
add
add
and
add
add
and
add
and
push
push
and
add
add
add
pop
add
or
adc
(bad)
clc
(bad)
packuswb
or
dec
in
push
es
push
push
and
add
pop
and
push
into
xor
mov
pop
pop
jmp
jnp
(bad)
call
(bad)
idiv
xor
ret
call
adc
push
and
add
sbb
push
jg
cmp
lock
(bad)
std
ins
ins
(bad)
std
ja
(bad)
dec
imul
dec
dec
(bad)
(bad)
cmp
(bad)
call
pop
jp
add
add
add
sbb
or
cmp
cmp
(bad)
(bad)
cmp
(bad)
push
ss
or
add
inc
add
inc
and
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
sbb
dec
add
adc
push
ins
jmp
inc
inc
(bad)
std
ss
(bad)
nop
or
add
or
or
or
or
or
or
or
pop
std
push
add
dec
or
std
cmp
idiv
cmp
(bad)
jmp
and
arpl
add
add
or
add
add
lea
inc
(bad)
inc
(bad)
jmp
pop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
add
add
add
xor
(bad)
cmp
(bad)
(bad)
and
mov
jge
add
add
add
sub
push
rcl
fdivr
inc
inc
(bad)
(bad)
aas
aas
repz
adc
dec
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
jmp
sub
jmp
sub
inc
pop
sub
add
sbb
xchg
cli
push
push
(bad)
dec
(bad)
push
xor
std
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
pop
inc
add
std
and
xchg
(bad)
cmp
(bad)
std
sub
(bad)
or
ds
push
daa
add
add
add
pop
cmp
dec
(bad)
inc
(bad)
call
sbb
pop
pop
add
or
or
or
dec
or
dec
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
dec
or
inc
add
call
sbb
aaa
aaa
(bad)
jmp
out
push
push
dec
retf
es
add
dec
push
push
jne
dec
dec
icebp
inc
(bad)
ss
or
add
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
or
or
or
add
add
push
push
inc
std
xor
(bad)
jmp
out
call
adc
add
sbb
add
add
pop
sbb
xchg
cmp
scas
jmp
(bad)
inc
(bad)
call
push
std
pop
pop
add
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
or
or
push
std
or
or
push
or
std
or
or
or
or
push
push
add
or
and
std
sub
hlt
call
add
add
add
or
or
dec
(bad)
popa
(bad)
(bad)
dec
retf
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
pop
std
pop
pop
pop
dec
or
std
or
or
or
add
pop
push
push
std
sub
loope
sub
clc
call
sbb
cmp
add
aaa
adc
push
iret
push
push
(bad)
call
jmp
sub
add
add
or
or
or
or
or
dec
or
or
dec
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
and
jmp
std
jmp
and
add
add
add
add
add
jg
xor
in
inc
inc
cld
dec
(bad)
std
or
add
or
or
or
or
std
or
or
or
or
or
or
std
or
or
or
or
or
push
dec
or
std
pop
or
std
add
xor
std
add
xor
dec
or
std
pop
or
std
or
or
or
or
or
or
or
or
or
std
or
or
or
or
std
pop
or
call
sbb
call
pop
xchg
jmp
add
add
add
add
add
add
sbb
into
jmp
or
add
or
or
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
sbb
add
aaa
inc
or
es
mov
dec
pop
loopne
pop
outs
icebp
std
push
fs
es
add
push
std
push
or
or
or
or
or
or
or
or
or
dec
push
push
std
or
femms
dec
or
std
and
fwait
std
xor
(bad)
dec
or
add
add
add
add
add
add
add
push
add
xchg
or
dec
or
dec
or
dec
or
or
dec
or
dec
adc
or
sub
add
call
cmp
(bad)
cmp
dec
loopne
jl
(bad)
inc
sbb
dec
or
or
or
or
or
(bad)
ud0
push
push
call
adc
dec
(bad)
ud0
adc
dec
(bad)
call
push
in
add
add
add
adc
add
add
add
add
or
out
push
push
push
dec
push
push
dec
push
push
std
push
push
push
dec
push
push
std
push
push
push
std
push
push
or
dec
push
and
add
inc
call
movs
std
jg
(bad)
std
ins
jle
dec
sbb
add
cmp
std
add
inc
std
add
pop
call
test
adc
inc
add
pop
dec
push
paddw
adc
std
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
cmp
add
add
add
add
add
cmp
pi2fd
or
ud0
(bad)
paddw
(bad)
ud0
femms
std
(bad)
prefetch
or
std
or
or
std
add
icebp
inc
cs
add
dec
inc
and
pop
or
std
or
or
or
push
std
pop
pop
or
pop
or
inc
or
std
add
std
pop
outs
hlt
jmp
idiv
add
dec
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
sub
add
add
add
lar
add
adc
dec
push
push
call
adc
call
adc
call
adc
call
(bad)
ud0
unpckhps
or
inc
pop
pop
push
lahf
(bad)
(bad)
cmp
add
popa
inc
pop
sub
dec
pop
pop
inc
pop
push
inc
pop
pop
inc
pop
pop
inc
pop
pop
inc
push
add
inc
or
jmp
cmp
inc
push
xchg
dec
or
sbb
adc
adc
adc
adc
adc
adc
adc
pop
or
or
adc
dec
(bad)
paddw
adc
call
adc
std
adc
adc
movups
push
mov
call
std
add
inc
or
std
or
or
or
push
inc
pop
pop
std
or
or
or
or
or
or
or
push
push
add
std
pop
or
add
(bad)
(bad)
jp
(bad)
std
xor
std
add
dec
call
adc
std
adc
adc
pop
std
pop
pop
pop
call
adc
mov
add
add
(bad)
jo
adc
adc
adc
adc
adc
push
std
or
jp
pop
jo
std
js
(bad)
std
adc
pushf
inc
add
push
or
std
or
or
or
push
std
or
pop
std
pop
push
pop
dec
push
push
std
or
or
push
push
push
call
adc
std
adc
adc
adc
adc
sbb
sbb
adc
adc
add
add
pop
pop
or
inc
add
std
push
addr16
std
popa
je
inc
or
xor
pop
sbb
sbb
pop
std
sbb
sbb
adc
add
add
adc
call
adc
dec
adc
inc
or
dec
int3
inc
mov
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
inc
pop
pop
inc
add
adc
adc
sbb
pop
pop
call
sbb
push
push
push
call
sbb
call
sbb
jmp
and
call
sbb
inc
push
add
push
pop
or
pop
or
jmp
aaa
mov
call
push
mov
adc
call
sbb
call
sbb
call
push
adc
add
sbb
aad
pop
sub
push
or
sbb
movs
(bad)
jns
(bad)
std
dec
pop
(bad)
add
xor
pop
or
pop
pop
push
std
or
or
or
or
add
or
pop
jmp
and
std
adc
adc
or
or
or
or
or
std
adc
adc
sbb
sbb
sbb
sbb
sbb
and
std
or
or
add
or
std
add
xor
pop
adc
xor
dec
dec
std
sbb
std
sbb
adc
add
or
iret
add
sbb
dec
sbb
std
gs
inc
adc
push
or
std
or
or
pop
pop
pop
std
pop
pop
push
dec
or
std
or
or
or
or
push
sbb
and
movups
dec
or
std
or
push
push
dec
or
push
push
push
std
or
or
std
sbb
sbb
sbb
sbb
and
and
sbb
push
adc
std
push
pop
or
add
daa
std
add
pop
std
dec
(bad)
out
push
jmp
std
sbb
das
call
pop
dec
cmp
adc
jmp
inc
push
mov
call
sub
inc
or
dec
pop
or
inc
pop
push
dec
or
dec
or
dec
(bad)
ud0
push
sbb
and
and
push
push
adc
or
or
or
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
movups
pop
pop
pop
(bad)
cmp
cmp
sub
sub
push
push
push
dec
or
inc
or
inc
add
jmp
mov
imul
dec
nop
jae
push
fadd
add
jmp
push
(bad)
inc
add
or
std
pop
or
inc
pop
pop
std
push
push
add
std
or
or
sbb
and
and
pop
adc
sbb
push
push
push
std
or
or
push
push
push
dec
or
or
or
push
push
push
dec
or
or
or
or
or
or
or
std
adc
adc
adc
adc
or
sub
std
sub
sub
and
and
adc
adc
add
add
pop
or
inc
push
xor
push
adc
push
and
or
adc
mov
add
inc
or
std
pop
pop
pop
std
push
push
add
or
or
adc
adc
push
push
push
std
aas
aas
aas
std
es
adc
adc
es
xor
xor
sub
sub
and
and
sbb
or
or
or
or
push
push
push
dec
or
or
or
or
or
std
or
or
or
or
adc
adc
sub
sub
or
or
adc
adc
and
and
and
push
pop
std
pop
push
push
inc
push
or
add
add
movs
mov
adc
add
push
or
inc
add
or
pop
pop
pop
call
sbb
jmp
cs
sub
or
or
es
inc
(bad)
cmp
cmp
xor
xor
sub
sub
es
and
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
inc
adc
push
dec
or
sbb
sbb
es
and
adc
push
inc
pop
inc
pop
adc
push
push
adc
pop
pop
pop
mov
or
call
push
push
std
sub
sub
sub
sub
push
push
push
call
pop
pop
std
dec
dec
dec
std
dec
dec
dec
std
inc
inc
inc
(bad)
cmp
cmp
xor
xor
das
das
das
jmp
sub
std
and
and
sbb
adc
or
dec
or
or
or
or
or
std
or
or
or
or
or
or
or
or
push
push
push
std
or
or
(bad)
(bad)
ud0
or
std
(bad)
(bad)
paddw
push
push
jmp
and
sbb
sbb
push
push
add
inc
add
add
sbb
fisubr
sub
push
sbb
call
adc
dec
dec
dec
jmp
pusha
call
push
dec
inc
(bad)
aas
aas
aas
(bad)
cmp
cmp
xor
xor
sub
sub
and
and
sbb
sbb
call
adc
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
add
or
or
or
or
or
or
adc
adc
pop
pop
pop
call
pop
pop
dec
or
dec
or
add
add
pop
pop
pop
cli
inc
inc
inc
(bad)
aas
aas
aas
std
sbb
sbb
inc
inc
inc
push
jno
bound
call
std
push
push
push
std
dec
dec
dec
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
xor
sub
sub
es
push
push
push
call
sbb
std
adc
or
or
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
or
or
or
or
or
adc
sbb
jo
add
add
or
xchg
call
sbb
call
sbb
std
outs
outs
outs
push
jb
data16
pop
std
pop
pop
pop
std
push
push
push
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
cs
daa
daa
daa
std
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
inc
add
or
or
or
or
or
add
add
xor
dec
cmp
cmp
pop
pop
pop
inc
add
jmp
and
call
pop
jmp
push
call
push
dec
dec
inc
(bad)
cmp
cmp
xor
cs
es
and
call
sbb
call
push
push
call
adc
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
pop
pop
inc
push
push
inc
add
add
add
add
or
or
push
push
push
test
add
add
push
push
dec
sbb
sbb
push
push
push
inc
add
call
push
std
pop
pop
pop
std
dec
dec
dec
inc
std
cmp
xor
jmp
cs
es
and
and
sbb
sbb
adc
adc
dec
pi2fw
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
add
inc
push
push
dec
or
or
or
adc
adc
adc
(bad)
or
or
add
add
adc
adc
aas
aas
aas
dec
dec
std
cmp
xor
cs
daa
daa
daa
std
and
and
sbb
sbb
push
push
push
std
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
pop
pop
pop
std
add
add
add
add
or
or
push
push
push
in
or
jnp
or
adc
add
add
push
or
mov
add
add
or
or
xor
xor
cmp
cmp
sub
and
and
sbb
sbb
adc
adc
adc
adc
or
push
push
dec
or
or
or
dec
or
or
or
add
add
or
or
adc
adc
adc
adc
adc
mov
sbb
cmps
push
push
push
inc
pop
pop
inc
and
std
sub
sub
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
push
dec
or
std
add
add
pop
pop
pop
call
sbb
fcom
adc
imul
add
sbb
sbb
cs
inc
inc
inc
call
pop
pop
inc
add
(bad)
push
push
push
call
sbb
std
adc
adc
adc
adc
push
push
push
std
or
or
add
add
adc
adc
sub
sub
and
sbb
xor
add
add
xor
or
sub
or
inc
add
dec
push
push
inc
pop
pop
inc
push
sbb
sub
sub
and
push
push
add
add
add
and
sbb
pop
pop
les
adc
loopne
adc
int
sbb
mov
push
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
call
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
push
add
inc
add
jmp
add
inc
add
inc
add
inc
add
add
(bad)
cld
add
aas
inc
add
clc
add
pop
inc
add
lock
pop
inc
add
rol
add
add
inc
add
inc
add
add
add
cld
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rol
add
pop
add
rol
add
aas
add
rol
add
aas
add
loopne
add
add
add
lock
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
push
add
pop
inc
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
push
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
adc
add
pop
fs
cmp
test
or
add
push
and
or
inc
mov
outs
outs
(bad)
inc
cmp
dec
dec
(bad)
call
or
or
add
pop
xor
and
cmp
push
xor
inc
add
inc
add
call
ds
call
xchg
jmp
or
xor
sar
inc
inc
(bad)
call
sbb
pop
pop
add
or
or
or
or
or
or
push
add
and
cmp
(bad)
jmp
and
xor
add
add
and
push
push
(bad)
push
ss
dec
or
dec
or
or
or
or
or
or
or
or
or
or
or
push
push
add
push
push
or
xor
repz
daa
retf
inc
add
add
add
push
cmp
mov
jmp
and
push
push
add
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
pop
add
add
add
sub
sar
sub
in
push
push
sub
add
add
push
and
adc
dec
test
cmp
jecxz
push
push
adc
dec
or
or
dec
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
inc
add
jmp
and
dec
or
add
add
xor
es
call
sub
push
add
or
or
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
pop
inc
pop
pop
inc
pop
pop
dec
or
inc
sbb
dec
add
cmp
sub
jmp
push
cli
call
adc
inc
pop
add
or
or
or
dec
or
or
or
or
push
push
or
add
pop
add
dec
or
dec
or
dec
or
dec
or
dec
or
call
adc
xor
(bad)
call
adc
add
add
add
add
sub
add
or
or
or
or
or
dec
or
dec
or
inc
add
test
cmp
(bad)
ds
mov
inc
add
dec
or
dec
or
dec
or
or
push
push
dec
add
adc
aaa
push
ss
dec
or
add
add
add
add
add
add
sub
or
or
dec
or
or
or
or
or
or
or
inc
sbb
jge
call
out
sub
mov
sub
ins
lock
loope
add
or
push
or
push
call
adc
call
adc
call
adc
call
pop
cwde
fild
add
or
add
and
add
push
push
dec
(bad)
ud0
femms
dec
ud2
dec
or
inc
or
dec
pusha
(bad)
pop
jo
inc
add
add
add
inc
add
call
push
xchg
gs
dec
sbb
or
call
adc
call
adc
call
adc
call
adc
imul
add
add
pop
pop
xchg
adc
call
adc
call
femms
dec
push
ud0
pop
xor
sub
jge
call
and
and
pop
push
push
inc
pop
add
pop
pop
push
inc
pop
add
inc
dec
call
repnz
cmp
call
adc
adc
push
push
call
adc
pfrsqit1
adc
ud0
adc
dec
or
call
sbb
(bad)
push
mov
inc
pop
add
or
pop
dec
or
adc
adc
adc
adc
adc
adc
adc
push
inc
daa
push
inc
mov
dec
push
inc
call
pop
sbb
sbb
pop
call
pop
adc
add
push
adc
(bad)
(bad)
inc
or
(bad)
dec
pop
(bad)
add
push
inc
add
dec
pop
add
inc
push
push
call
sbb
call
sbb
call
sbb
call
pop
pop
call
sbb
inc
add
adc
call
call
and
sbb
pop
std
adc
cmp
xor
call
idiv
or
jne
add
sbb
pop
push
add
dec
or
dec
push
push
call
pop
pop
call
push
push
dec
or
or
or
call
push
push
call
and
dec
or
inc
add
inc
dec
out
sub
mov
call
push
cmp
add
xor
imul
and
add
inc
add
add
call
adc
call
sbb
sbb
sbb
or
or
or
push
push
dec
push
push
dec
push
push
dec
or
or
adc
jmp
das
call
adc
add
add
and
sub
mov
inc
push
into
inc
mov
add
in
inc
add
xor
add
inc
push
add
or
or
and
and
sub
sub
sbb
sbb
daa
daa
jmp
sub
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
or
dec
or
call
sbb
adc
adc
and
and
and
and
or
pop
inc
add
call
sbb
push
and
add
add
add
dec
pf2iw
sbb
jmp
sbb
jmp
das
das
inc
inc
push
xor
sub
sub
and
and
pop
pop
pop
dec
or
push
push
push
dec
push
push
dec
or
dec
or
inc
push
push
dec
pi2fd
or
sbb
es
inc
add
inc
add
add
adc
xchg
and
das
sub
sbb
sub
sub
pop
pop
pop
dec
dec
inc
inc
(bad)
cmp
cmp
das
das
das
jmp
and
sbb
adc
dec
push
push
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
dec
or
dec
sbb
call
sbb
or
add
push
push
push
pushf
push
push
push
call
push
push
jmp
jmp
imul
pop
pop
call
push
inc
inc
(bad)
cmp
cmp
xor
xor
sub
sub
sbb
push
push
dec
push
push
dec
push
push
dec
or
dec
or
dec
or
dec
or
inc
push
push
inc
add
add
or
call
adc
call
push
pop
inc
add
add
inc
inc
test
adc
jmp
and
call
jmp
call
push
dec
dec
(bad)
ds
xor
jmp
sub
call
push
push
call
push
push
call
adc
dec
or
or
or
or
or
or
pop
pop
pop
inc
pop
pop
inc
add
add
add
add
add
or
or
push
add
add
and
and
add
call
sbb
dec
dec
dec
dec
(bad)
aas
aas
aas
push
xor
jmp
sub
jmp
and
call
push
push
call
adc
dec
or
or
or
or
or
or
or
or
add
add
or
or
or
adc
adc
(bad)
(bad)
setb
push
pop
call
adc
push
xor
push
ss
sub
call
pop
pop
call
adc
dec
or
or
or
or
add
push
dec
or
dec
or
or
or
or
add
add
adc
or
sbb
sbb
sbb
(bad)
pf2iw
sbb
call
push
push
call
adc
dec
push
push
dec
or
dec
or
call
pop
pop
sahf
adc
adc
dec
dec
dec
jo
and
out
or
or
push
push
push
inc
pop
pop
dec
push
push
into
sub
sub
and
add
add
add
sbb
pop
adc
adc
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
ud0
lock
(bad)
jmp
add
inc
add
inc
add
inc
add
add
aas
lock
pop
loopne
add
rol
pop
add
xadd
add
loopne
add
lock
(bad)
add
(bad)
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
clc
add
paddd
add
inc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
ja
pop
pop
(bad)
call
(bad)
call
sbb
add
add
add
pop
sub
sub
(bad)
adc
pop
inc
add
std
or
adc
xor
(bad)
pop
pop
mov
or
sbb
inc
(bad)
jmp
and
or
add
or
or
or
or
or
add
std
sub
mov
jmp
add
add
sbb
ss
inc
inc
out
call
adc
dec
or
std
or
or
or
or
or
or
or
or
or
pop
inc
add
std
push
push
mov
sub
fincstp
push
push
sub
adc
inc
jbe
dec
cli
jmp
sub
dec
or
std
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
add
add
adc
sub
dec
or
inc
add
add
push
push
je
push
push
stc
call
sbb
dec
or
dec
or
std
or
or
add
std
push
push
add
pop
pop
add
pop
pop
pop
dec
or
dec
or
std
adc
cmp
sub
jmp
add
or
xor
fdivrp
or
add
or
push
dec
or
std
or
or
or
or
or
std
add
adc
pushf
(bad)
and
xchg
add
sbb
or
add
or
or
or
or
or
add
(bad)
xor
jmp
adc
add
cmp
add
scas
or
push
push
std
push
push
or
dec
or
std
pop
push
inc
dec
loope
dec
push
sar
pop
sub
dec
popa
jmp
push
adc
pop
dec
push
or
adc
adc
adc
or
adc
pop
into
add
add
(bad)
(bad)
ud0
push
or
inc
or
aaa
inc
mov
dec
pop
jecxz
pop
or
add
add
add
inc
add
std
inc
push
sar
sub
cdq
dec
adc
adc
ud0
adc
adc
adc
add
add
push
or
dec
or
std
push
daa
jnp
dec
(bad)
in
call
and
add
or
dec
or
dec
push
or
dec
add
jmp
das
xchg
inc
sar
or
sub
pop
push
adc
push
push
adc
add
adc
push
(bad)
cmp
std
add
push
add
(bad)
(bad)
paddw
sbb
std
push
push
push
(bad)
adc
pop
pop
(bad)
sbb
push
std
add
add
or
push
inc
loop
sbb
pop
(bad)
sbb
adc
add
dec
dec
test
inc
pop
ss
add
add
or
add
adc
push
std
sbb
sbb
adc
adc
or
or
or
or
or
push
push
std
sbb
sbb
sub
sub
or
push
std
add
pop
push
inc
(bad)
jmp
mov
or
xchg
daa
add
push
sbb
add
push
std
or
add
std
push
push
push
std
and
and
and
and
push
push
push
std
or
or
or
or
or
(bad)
(bad)
paddw
sbb
std
and
and
sbb
adc
add
or
pop
sub
push
jmp
add
or
dec
or
add
sbb
sbb
sbb
sub
inc
inc
(bad)
cmp
cmp
sub
sub
push
push
push
dec
push
push
dec
or
or
or
std
or
or
or
or
or
or
pop
pop
pop
jmp
and
dec
pop
add
add
es
add
add
cmp
jmp
push
push
std
pop
pop
pop
dec
dec
(bad)
cmp
das
das
jmp
and
call
push
push
dec
or
or
or
or
or
or
push
push
push
std
push
push
push
dec
or
sbb
sbb
adc
push
mov
add
add
push
push
sbb
ds
and
call
pop
jmp
arpl
dec
dec
dec
std
inc
inc
inc
(bad)
xor
xor
and
and
pop
pop
pop
std
(bad)
pi2fw
or
std
or
or
or
or
or
or
pop
pop
pop
inc
add
add
add
push
push
push
dec
or
mov
add
add
sbb
inc
push
push
push
enter
inc
inc
inc
std
xor
xor
and
and
pop
pop
pop
dec
pi2fw
or
dec
or
or
or
or
or
push
push
push
inc
pop
pop
dec
or
cmps
or
or
(bad)
pi2fw
or
mov
and
and
and
and
pop
pop
pop
dec
pi2fd
or
or
or
or
or
adc
push
or
add
sub
sub
cmp
cmp
push
push
push
dec
or
call
adc
cld
and
and
and
and
adc
adc
adc
add
add
(bad)
inc
jmp
inc
inc
jg
inc
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
shl
in
call
add
add
adc
xor
call
add
call
and
add
add
or
xor
dec
or
dec
or
dec
or
inc
adc
and
add
or
add
add
or
cmc
push
pop
dec
or
dec
or
dec
pop
add
pop
pop
add
push
push
add
or
and
and
shr
push
sub
add
add
or
add
or
pop
dec
or
dec
rdtsc
jmp
or
dec
pop
add
or
push
dec
adc
es
and
push
push
or
or
add
pop
or
push
lods
push
inc
stos
call
push
pop
push
scas
jmp
sub
or
add
call
adc
aad
add
add
or
or
and
push
inc
mov
inc
add
or
add
pop
push
add
adc
inc
mov
adc
sbb
push
push
pandn
add
add
inc
mov
inc
add
dec
push
or
adc
adc
adc
adc
sbb
sbb
pop
pop
ud0
and
xor
call
and
inc
sbb
sbb
sub
add
call
sbb
sbb
sbb
or
or
or
or
call
sbb
jmp
and
jmp
cs
add
push
add
pop
push
jmp
and
(bad)
ds
aas
aas
aas
jmp
sub
call
adc
or
or
dec
or
dec
or
call
pop
push
call
adc
inc
or
pop
or
pop
and
xor
pop
pop
pop
jmp
popa
inc
jmp
sbb
dec
push
push
dec
or
dec
or
inc
pop
pop
inc
add
dec
or
dec
push
or
add
add
or
imul
jmp
das
das
call
sbb
dec
push
push
dec
or
or
or
or
or
or
or
pop
pop
pop
pop
sub
sub
adc
adc
or
or
sbb
sbb
sbb
or
add
add
add
adc
adc
adc
(bad)
inc
add
aas
add
clc
sldt
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
sldt
(bad)
jg
add
inc
add
add
add
add
add
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
add
add
add
add
push
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
jae
ins
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
or
mov
add
add
nop
cmp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
mov
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
dec
inc
inc
push
cmp
xchg
dec
dec
adc
sbb
fisttp
bound
fs
adc
bound
pop
lods
jns
inc
lock
mov
daa
mov
and
mov
mov
dec
or
aas
mov
test
xchg
dec
cmp
stc
sahf
aas
pop
out
int3
jl
pop
in
test
loope
in
inc
mov
(bad)
mov
ins
mov
jle
cmps
xchg
jg
push
shl
addr16
fwait
in
fld
stc
jmp
repz
ins
adc
or
pop
(bad)
clc
sub
pop
pop
xor
mov
clc
leave
fimul
cmp
push
cdq
mov
jge
into
dec
aaa
fadd
stos
int3
paddsw
aas
push
out
hlt
jl
test
loope
and
sahf
outs
mov
outs
xor
icebp
rol
mov
inc
add
fs
mov
jge
and
scas
xlat
cld
jo
ror
scas
jmp
adc
xchg
xchg
lods
retf
out
pop
jmp
xor
ds
imul
mov
fst
repnz
ins
stos
iret
mov
xchg
out
cwde
xchg
or
loop
js
enter
inc
dec
outs
outs
inc
iret
not
pop
out
add
and
jbe
vrsqrtps
repz
dec
repz
add
and
test
xchg
pop
jecxz
mov
jge
mov
enter
push
movs
xchg
sub
les
xchg
xchg
mov
and
adc
nop
lods
push
adc
jne
cmp
scas
mov
cwde
or
(bad)
push
pop
cli
arpl
add
mov
xor
in
pop
cmp
xlat
cmp
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
loope
add
add
or
or
add
or
add
add
add
add
or
add
add
mov
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
inc
inc
push
cmp
xchg
mov
test
or
dec
and
sub
inc
cli
rcr
sbb
pop
mov
pop
sbb
fcmovu
sbb
sub
or
mov
(bad)
push
sbb
mov
xchg
jmp
inc
(bad)
loopne
xchg
sbb
xchg
sub
icebp
ret
inc
adc
cmps
lods
mov
or
jmp
jl
or
stos
shl
cmps
dec
fwait
pop
cmp
cdq
sbb
aam
(bad)
jmp
scas
je
push
jl
sar
push
movs
sub
imul
pop
retf
(bad)
pop
mov
and
(bad)
sahf
icebp
cmps
xchg
lods
shl
inc
lods
dec
cmps
loope
out
(bad)
loope
push
aad
add
pushf
lds
inc
lods
dec
(bad)
arpl
pushf
inc
das
mov
sti
cmp
shl
inc
lods
dec
leave
mov
sahf
je
and
xor
xor
xchg
(bad)
cli
sub
inc
fldcw
sbb
adc
push
mov
mov
aad
xchg
aad
sti
push
leave
jo
pop
cmp
xor
mov
jmp
dec
rcl
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
push
dec
push
push
add
add
pop
pop
add
inc
dec
push
push
add
add
add
add
add
add
inc
push
inc
inc
add
add
or
add
add
add
xor
adc
add
add
push
inc
dec
inc
add
add
sub
add
inc
add
add
push
add
add
xor
add
adc
add
rol
add
and
inc
inc
add
add
add
add
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
mov
data16
jmp
cwde
xchg
add
or
add
jno
add
bound
imul
jne
add
or
add
addr16
fs
bound
jb
add
add
(bad)
inc
add
add
inc
add
add
popa
ins
jo
dec
jne
je
pop
inc
outs
ins
fs
add
add
add
add
add
add
popa
ins
jo
pop
outs
ins
fs
ins
jne
je
ins
popa
imul
add
(bad)
inc
add
add
inc
add
add
arpl
addr16
gs
add
or
add
int
(bad)
dec
(bad)
(bad)
inc
adc
add
add
add
add
add
mov
cmp
add
add
cmc
(bad)
dec
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
popa
jb
pop
ins
jbe
data16
pop
jb
arpl
add
add
add
inc
add
add
inc
add
add
arpl
addr16
gs
add
or
add
inc
std
(bad)
jmp
add
add
add
add
add
add
add
pop
mov
cmp
add
add
(bad)
jmp
add
and
(bad)
jmp
add
pop
add
sub
add
pop
add
sub
add
pop
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
popa
jb
pop
ins
jbe
bound
pop
jb
arpl
add
add
add
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
dec
gs
xor
add
or
add
into
(bad)
(bad)
inc
add
add
add
add
add
into
(bad)
(bad)
inc
add
add
add
add
add
pop
add
enter
pop
add
enter
outs
adc
cmp
add
outs
adc
cmp
add
add
add
je
ins
jbe
ins
data16
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
dec
gs
xor
add
or
add
into
(bad)
(bad)
inc
add
add
add
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
add
add
pop
add
enter
pop
add
enter
outs
adc
cmp
cmp
adc
popa
jb
pop
ins
jbe
ins
data16
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
dec
gs
xor
add
or
add
add
add
outs
adc
cmp
add
add
add
add
add
into
(bad)
(bad)
inc
add
add
add
add
add
pop
add
enter
pop
add
enter
int
dec
outs
adc
cmp
add
add
add
je
ins
jbe
ins
data16
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
dec
gs
xor
add
add
add
add
add
cmp
add
add
add
mov
add
add
add
pop
add
enter
pop
add
enter
outs
adc
cmp
cmp
adc
popa
jb
pop
ins
jbe
ins
data16
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
dec
gs
xor
add
or
add
sbb
add
add
add
outs
adc
cmp
add
add
add
pop
add
enter
pop
add
enter
lods
lds
aaa
lods
lds
aaa
lods
lds
aaa
lods
lds
aaa
add
add
je
ins
jbe
ins
data16
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
push
imul
add
add
add
add
add
add
add
add
and
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
int3
dec
outs
adc
cmp
xlat
mov
add
add
je
ins
jbe
jb
je
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
push
imul
add
add
add
add
add
add
mov
add
add
add
nop
add
add
add
add
add
add
add
add
int3
int3
cmp
int
int3
cmp
add
add
je
ins
jbe
jb
je
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
push
imul
add
add
add
add
add
add
outs
adc
cmp
add
add
add
add
add
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
int3
int3
cmp
int
int3
cmp
add
add
je
ins
jbe
jb
je
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
jbe
outs
addr16
jne
jbe
push
imul
add
add
add
add
add
add
outs
adc
cmp
add
add
add
add
add
mov
add
add
add
add
add
add
daa
aaa
lods
lds
aaa
lods
lds
aaa
add
add
je
ins
jbe
jb
je
arpl
jbe
add
(bad)
inc
add
add
inc
add
add
ins
gs
arpl
push
push
add
add
add
add
sub
add
add
add
outs
adc
cmp
add
add
add
add
add
pop
add
add
add
enter
pop
add
enter
outs
adc
cmp
add
outs
adc
cmp
add
add
add
je
ins
jbe
xor
add
add
(bad)
inc
add
add
inc
add
add
popa
fs
inc
add
add
add
add
pushf
idiv
inc
add
add
or
add
add
add
cmp
add
add
add
pushf
idiv
call
add
call
add
cmp
adc
cmp
cmp
add
popa
jb
pop
ins
jbe
ins
popa
jb
gs
je
gs
fs
popa
add
(bad)
inc
add
add
inc
add
add
popa
fs
inc
add
add
add
add
popf
(bad)
(bad)
inc
add
add
or
add
add
add
cmp
add
add
add
popf
(bad)
(bad)
call
add
call
add
cmp
adc
cmp
cmp
add
popa
jb
pop
ins
jbe
ins
popa
jb
gs
je
gs
fs
bound
add
inc
add
add
inc
add
add
popa
fs
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
popa
jb
pop
ins
jbe
jae
popa
ins
ins
pop
je
gs
add
add
(bad)
inc
add
add
inc
add
add
ins
gs
popa
jb
add
add
add
popa
jb
pop
je
je
gs
bound
pop
je
jo
(bad)
inc
add
add
inc
add
add
ins
gs
popa
jo
dec
outs
outs
add
add
add
add
add
add
(bad)
(bad)
inc
add
popa
jb
pop
je
je
gs
jo
jo
pop
ins
outs
outs
add
add
inc
add
add
inc
add
add
ins
gs
popa
ins
gs
outs
outs
add
add
add
add
add
add
add
popa
jb
pop
je
je
gs
addr16
ins
gs
ins
outs
outs
add
add
inc
add
add
inc
add
add
ins
add
add
add
add
add
popa
jb
pop
je
je
gs
ins
jne
je
jo
popa
jns
jb
(bad)
inc
add
add
inc
add
add
ins
gs
popa
jb
add
add
add
add
add
add
add
popa
jb
pop
je
je
gs
bound
pop
bound
add
inc
add
add
inc
add
add
jo
outs
jae
add
(bad)
inc
add
add
inc
add
add
inc
popa
jb
outs
outs
outs
arpl
outs
dec
gs
outs
fs
ins
ins
outs
ja
add
add
add
add
add
jae
popa
ins
jo
pop
push
pop
ss
add
add
add
add
add
add
fs
outs
outs
outs
arpl
outs
dec
gs
outs
fs
ins
ins
outs
ja
add
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
sub
add
add
add
add
add
add
inc
outs
outs
outs
arpl
outs
dec
gs
outs
fs
ins
ins
outs
ja
add
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
sub
push
add
add
pop
add
add
add
imul
arpl
add
add
add
(bad)
(bad)
(bad)
call
add
imul
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
add
add
sbb
add
add
add
push
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
add
add
sbb
add
add
add
ins
push
gs
gs
jo
gs
sldt
add
add
add
add
(bad)
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
add
add
sbb
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
add
add
sbb
add
add
add
ins
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
(bad)
(bad)
dec
add
add
add
sldt
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
push
add
add
add
je
addr16
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
push
add
add
add
jae
ins
push
gs
gs
jo
gs
sldt
add
push
add
add
add
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
or
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
or
add
daa
add
je
addr16
popa
js
ins
popa
jns
jb
xor
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
or
add
daa
add
jae
ins
dec
popa
js
ins
popa
jns
jb
xor
add
or
or
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
(bad)
(bad)
dec
add
add
add
sldt
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
or
add
xor
add
add
add
push
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
or
add
xor
add
add
add
ins
push
gs
gs
jo
gs
sldt
add
or
or
add
(bad)
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
or
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
or
add
xor
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
or
add
xor
add
add
add
ins
dec
popa
js
ins
popa
jns
jb
xor
add
or
or
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
(bad)
(bad)
dec
add
add
add
sldt
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
push
add
add
add
je
addr16
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
push
add
add
add
jae
ins
push
gs
gs
jo
gs
sldt
add
push
add
add
add
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
adc
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
adc
add
aas
add
je
addr16
popa
js
ins
popa
jns
jb
xor
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
adc
add
aas
add
jae
ins
dec
popa
js
ins
popa
jns
jb
xor
add
adc
adc
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
(bad)
(bad)
dec
add
add
add
sldt
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
adc
add
dec
add
je
addr16
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
adc
add
dec
add
jae
ins
push
gs
gs
jo
gs
sldt
add
adc
adc
add
(bad)
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
adc
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
adc
add
dec
add
je
addr16
popa
js
ins
popa
jns
jb
xor
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
adc
add
dec
add
jae
ins
dec
popa
js
ins
popa
jns
jb
xor
add
adc
adc
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
(bad)
(bad)
dec
add
add
add
sldt
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
push
add
add
add
add
add
push
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
push
add
add
add
add
add
ins
push
gs
gs
jo
gs
sldt
add
push
add
add
add
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
adc
add
add
add
add
add
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
sbb
add
push
add
je
addr16
popa
js
ins
popa
jns
jb
xor
add
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
sbb
add
push
add
jae
ins
dec
popa
js
ins
popa
jns
jb
xor
add
sldt
add
sbb
sbb
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
xor
add
adc
add
cld
(bad)
(bad)
dec
add
add
add
or
add
xor
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
sbb
add
arpl
add
add
add
push
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
sbb
add
arpl
add
add
add
ins
push
gs
gs
jo
gs
sldt
add
sbb
sbb
add
(bad)
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
add
adc
add
add
add
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
sbb
add
arpl
add
add
add
dec
popa
js
ins
popa
jns
jb
add
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
sbb
add
arpl
add
add
add
ins
dec
popa
js
ins
popa
jns
jb
add
sldt
add
sbb
sbb
inc
add
add
dec
popa
js
ins
popa
jns
jb
add
adc
add
cld
(bad)
(bad)
dec
add
add
add
or
add
xor
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
imul
arpl
add
add
add
add
add
adc
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
gs
arpl
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
push
gs
gs
jo
gs
adc
add
add
add
add
add
inc
add
add
push
gs
gs
jo
gs
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
push
add
add
add
add
add
push
gs
gs
jo
gs
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
push
add
add
add
add
add
ins
push
gs
gs
jo
gs
sldt
add
push
add
add
add
inc
add
add
push
gs
gs
jo
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
dec
popa
js
ins
popa
jns
jb
aaa
add
adc
add
add
add
add
add
inc
add
add
dec
popa
js
ins
popa
jns
jb
aaa
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
enter
and
add
outs
add
je
addr16
popa
js
ins
popa
jns
jb
aaa
add
add
fs
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
add
add
add
and
add
outs
add
jae
ins
dec
popa
js
ins
popa
jns
jb
aaa
add
sldt
add
and
and
add
(bad)
inc
add
add
dec
popa
js
ins
popa
jns
jb
aaa
add
adc
add
cld
(bad)
(bad)
dec
add
add
add
or
add
xor
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
add
inc
popa
jb
gs
gs
outs
outs
add
add
add
add
jae
popa
ins
jo
pop
push
pop
xor
xor
add
add
add
add
add
add
fs
gs
gs
outs
outs
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
cs
add
add
jp
add
add
add
push
gs
gs
outs
outs
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
cs
add
add
jp
add
add
add
popa
jb
dec
jne
je
push
gs
gs
outs
outs
or
add
add
add
sbb
add
popa
ins
jo
pop
arpl
jb
pop
ins
jne
je
pop
jae
jb
gs
imul
add
add
add
add
add
add
fs
gs
gs
popa
ins
add
add
add
add
add
xor
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
push
add
add
add
add
jge
add
add
add
push
gs
gs
popa
ins
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
cmp
add
add
add
add
add
add
add
add
add
push
gs
gs
popa
ins
add
add
add
or
add
add
add
aas
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
cmp
add
add
add
add
add
add
add
add
fs
outs
outs
outs
arpl
outs
push
jns
add
add
add
add
add
xor
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
push
add
add
add
add
jg
add
add
add
inc
outs
outs
outs
arpl
outs
push
jns
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
cmp
add
add
add
add
add
add
add
add
add
inc
outs
outs
outs
arpl
outs
push
jns
add
add
add
or
add
add
add
aas
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
cmp
add
add
add
add
add
add
add
add
fs
outs
arpl
imul
add
add
add
add
xor
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
push
add
add
add
add
add
add
dec
outs
arpl
imul
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
cmp
add
add
add
add
add
add
add
add
dec
outs
arpl
imul
add
add
or
add
add
add
aas
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
cmp
add
add
add
add
add
add
add
add
fs
outs
jae
push
popa
jae
ja
jb
add
add
add
add
xor
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
push
add
add
add
add
jge
add
add
add
dec
outs
jae
push
popa
jae
ja
jb
add
add
add
add
xor
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
ss
add
add
add
add
jge
add
add
add
jae
push
popa
jae
ja
jb
add
add
or
add
add
add
aas
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
ss
add
dec
push
popa
jae
ja
jb
add
add
add
add
add
add
add
imul
dec
popa
je
outs
arpl
add
add
add
(bad)
(bad)
(bad)
push
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
ja
fs
pop
arpl
bound
pop
outs
pop
add
add
js
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
xor
add
push
add
add
fs
pop
arpl
bound
pop
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
inc
outs
dec
popa
js
popa
je
outs
arpl
(bad)
(bad)
(bad)
inc
add
ins
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
jae
pop
popa
jb
outs
ja
ins
data16
outs
add
add
fs
pop
jae
pop
popa
jb
outs
ja
ins
data16
push
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
ins
data16
jae
add
ja
fs
pop
jae
pop
popa
jb
outs
ja
ins
data16
add
cmp
add
add
add
add
add
add
outs
push
jo
popa
js
popa
je
outs
arpl
add
je
addr16
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
jae
pop
popa
jb
outs
ja
jb
je
outs
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jb
je
push
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jb
je
jae
add
ja
fs
pop
jae
pop
popa
jb
outs
ja
jb
je
add
cmp
add
add
add
add
add
add
dec
popa
js
popa
je
outs
arpl
add
add
add
add
(bad)
(bad)
inc
add
add
js
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
daa
add
cmp
add
add
add
add
add
arpl
dec
outs
addr16
push
add
add
(bad)
(bad)
(bad)
dec
add
imul
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
ja
fs
pop
arpl
bound
pop
outs
pop
add
add
js
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
sbb
add
push
add
add
fs
pop
arpl
bound
pop
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
popa
js
popa
je
outs
arpl
add
add
add
fadd
add
and
add
xor
inc
cmp
xor
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
add
add
add
add
jmp
add
jb
fs
popa
js
ins
popa
jae
popa
ins
ins
outs
ja
add
adc
add
add
add
add
add
inc
add
add
js
push
add
add
add
add
add
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
(bad)
inc
add
add
js
xor
add
add
add
add
add
adc
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
js
xor
add
add
add
add
add
adc
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
fs
imul
popa
ins
ins
outs
ja
add
adc
add
add
add
add
add
inc
add
add
outs
inc
push
add
add
add
add
add
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
(bad)
inc
add
add
outs
inc
xor
add
add
add
add
add
adc
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
outs
inc
xor
add
add
add
add
add
adc
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
jb
imul
ja
fs
pop
jb
imul
add
add
fs
pop
jb
imul
ins
jne
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xchg
add
add
add
jo
ins
imul
push
(bad)
jmp
add
(bad)
inc
add
add
popa
jb
push
gs
arpl
outs
outs
arpl
outs
add
add
add
add
add
add
add
jae
popa
ins
jo
pop
arpl
jb
pop
ins
jne
je
pop
jae
ins
arpl
outs
outs
outs
and
add
add
add
add
add
fs
outs
outs
outs
arpl
popa
dec
gs
imul
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
inc
push
and
add
cdq
add
add
add
inc
outs
outs
outs
arpl
popa
dec
gs
imul
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
inc
push
add
jle
and
add
cdq
add
add
add
inc
outs
outs
outs
arpl
popa
add
add
and
and
inc
add
add
inc
outs
outs
outs
arpl
popa
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
add
jle
dec
add
add
add
add
add
inc
outs
outs
outs
arpl
popa
add
add
add
add
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
jle
add
add
and
add
add
add
ins
inc
outs
outs
outs
arpl
popa
add
add
and
add
inc
add
add
inc
outs
outs
outs
arpl
popa
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
jo
outs
je
jns
imul
push
and
daa
add
add
inc
add
add
dec
push
inc
fs
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
jg
daa
add
add
add
add
jo
push
inc
fs
add
add
add
add
add
add
add
fiadd
add
xor
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
jg
add
add
daa
add
add
add
add
dec
push
pop
push
jne
outs
gs
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
add
daa
add
add
add
add
jo
push
pop
push
jne
outs
gs
add
add
add
add
add
add
add
fiadd
add
xor
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
adc
add
add
add
daa
add
add
add
ins
bound
pop
dec
outs
fs
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
add
add
add
add
add
imul
outs
fs
add
add
add
add
add
add
out
add
xor
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
adc
add
add
add
add
add
add
inc
ins
imul
gs
adc
add
add
add
add
add
inc
add
add
inc
ins
imul
gs
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
daa
add
adc
add
dec
add
add
add
add
add
add
inc
ins
imul
gs
add
add
das
add
je
ja
jbe
add
add
fs
jae
ja
jbe
add
add
ja
fs
pop
fs
jo
outs
ja
pop
outs
add
add
fs
pop
fs
jo
outs
ja
pop
push
add
add
fs
pop
fs
jo
outs
ja
pop
jae
add
ja
fs
pop
fs
jo
outs
ja
pop
add
adc
add
add
add
sub
add
cdq
add
add
add
ins
inc
ins
imul
gs
sldt
add
sub
sub
add
(bad)
inc
add
add
inc
ins
imul
gs
adc
add
cld
(bad)
(bad)
dec
add
add
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
xor
xor
xor
data16
add
js
cmp
cmp
xor
add
add
add
inc
add
add
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
add
gs
ins
imul
gs
add
add
add
icebp
(bad)
(bad)
call
add
adc
add
test
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
ins
pop
je
bound
add
ja
fs
pop
jae
ins
pop
bound
add
add
fs
pop
jae
ins
pop
je
bound
add
add
add
add
add
jne
inc
ins
imul
gs
add
add
add
(bad)
(bad)
inc
add
add
add
add
jae
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
add
add
add
add
add
add
add
add
ins
imul
gs
add
add
add
add
add
jae
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
push
jne
bound
add
add
add
add
add
add
js
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
add
daa
add
add
add
add
jo
push
jne
bound
add
add
add
add
add
add
add
lods
add
add
js
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
adc
add
add
add
daa
add
add
add
add
inc
popa
jb
fs
jae
inc
outs
outs
imul
add
or
add
ja
add
sub
add
popa
ins
jo
pop
push
pop
xor
xor
add
add
add
add
add
add
inc
arpl
fs
jae
inc
outs
outs
imul
add
add
add
add
add
add
jae
popa
ins
jo
pop
je
bound
popa
fs
jae
add
and
add
mov
add
add
add
fs
fs
jae
inc
outs
outs
imul
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
inc
push
and
add
mov
add
add
add
inc
fs
jae
inc
outs
outs
imul
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
inc
push
add
test
add
add
add
mov
add
add
add
fs
popa
ins
add
add
add
add
add
add
add
js
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
and
add
mov
add
add
add
dec
popa
ins
add
add
add
add
add
add
add
js
inc
inc
inc
inc
inc
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
and
add
mov
add
add
add
fs
popa
ins
add
add
add
add
add
add
add
js
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
and
add
mov
add
add
add
dec
popa
ins
add
add
add
add
add
add
add
js
inc
inc
inc
inc
inc
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
and
add
mov
add
add
add
jb
ins
ins
inc
fs
jae
bound
imul
add
and
sub
add
(bad)
inc
add
add
inc
fs
jae
bound
imul
adc
add
adc
add
daa
add
add
add
outs
add
add
js
data16
add
xor
bound
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
add
ret
jg
(bad)
(bad)
(bad)
(bad)
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
jo
ins
imul
jae
outs
outs
imul
add
add
add
(bad)
(bad)
inc
add
ja
fs
pop
je
ins
pop
jae
ins
pop
bound
pop
xor
sub
add
mov
add
add
gs
fs
jae
bound
imul
add
add
add
add
add
add
add
sub
add
or
jae
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
ins
pop
je
bound
add
ja
fs
pop
jae
ins
pop
bound
add
add
fs
pop
jae
ins
pop
je
bound
add
add
add
add
add
outs
inc
fs
jae
bound
imul
add
add
add
add
or
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
add
add
add
add
add
add
add
jne
inc
fs
jae
bound
imul
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
add
add
add
add
add
add
add
add
add
add
add
inc
push
outs
popa
ins
add
add
add
add
add
add
add
add
jae
popa
ins
jo
pop
arpl
jb
pop
ins
jne
je
pop
jb
outs
popa
ins
add
add
add
add
mov
data16
add
add
inc
fs
outs
outs
imul
jne
add
add
add
add
add
js
inc
cmp
xor
xor
xor
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
add
add
add
rol
add
jo
fs
outs
outs
imul
jne
add
add
or
add
add
add
adc
add
xor
data16
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
sldt
add
add
rol
add
add
outs
inc
fs
outs
outs
imul
popa
ins
add
add
add
ins
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
bound
jb
outs
popa
ins
gs
outs
add
ja
fs
pop
bound
jb
outs
popa
ins
gs
push
add
ja
fs
pop
bound
jb
outs
popa
ins
gs
jae
add
fs
pop
bound
jb
outs
popa
ins
gs
add
add
add
add
add
mov
add
add
add
outs
inc
fs
outs
outs
imul
add
add
je
addr16
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
bound
popa
fs
outs
add
fs
pop
bound
popa
fs
push
add
fs
pop
bound
popa
fs
jae
ja
fs
pop
bound
popa
fs
add
add
xchg
add
add
add
ret
add
bound
fs
outs
outs
imul
je
add
add
je
addr16
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
bound
fs
gs
pop
outs
add
ja
fs
pop
bound
fs
gs
pop
push
add
ja
fs
pop
bound
fs
gs
pop
jae
add
fs
pop
bound
fs
gs
pop
add
add
add
add
add
les
add
add
add
popa
jb
push
popa
jae
ja
jb
inc
ins
imul
add
or
add
push
add
add
add
popa
ins
jo
pop
arpl
jb
pop
ins
jne
je
pop
arpl
popa
jae
ja
jb
add
add
add
add
add
add
fs
ins
imul
jae
outs
jb
add
add
add
add
add
xor
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
push
add
add
and
add
mov
add
inc
ins
imul
jae
outs
jb
add
add
add
add
add
add
js
inc
cmp
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
push
add
test
add
add
add
add
add
mov
add
imul
jae
outs
jb
add
add
add
or
add
add
add
loopne
add
xor
xor
xor
xor
data16
add
js
xor
xor
xor
data16
add
js
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
test
add
popa
jae
ja
jb
add
add
add
add
enter
add
add
inc
popa
jb
outs
arpl
inc
popa
ins
gs
or
add
push
add
add
add
jae
popa
ins
jo
pop
push
pop
aaa
xor
add
and
add
add
add
add
add
fs
outs
arpl
inc
popa
ins
gs
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
dec
push
and
add
retf
add
dec
outs
arpl
inc
popa
ins
gs
add
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
dec
push
add
mov
add
add
add
retf
add
dec
outs
push
popa
arpl
inc
outs
jne
add
add
add
add
add
js
inc
xor
xor
xor
add
ins
jne
pop
arpl
pop
bound
xor
add
aam
and
add
int3
add
push
bound
imul
je
outs
imul
add
add
add
add
add
add
jae
popa
ins
jo
pop
je
bound
ins
jne
je
push
imul
add
add
add
retf
add
push
outs
jb
dec
popa
jb
gs
add
add
add
add
xor
xor
xor
xor
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
(bad)
inc
add
add
outs
inc
gs
gs
gs
add
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
dec
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
push
popa
jae
ja
jb
add
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
dec
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
dec
gs
outs
jb
push
jns
add
add
add
aaa
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
lea
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
dec
outs
jae
add
add
add
add
sldt
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
mov
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
push
jb
arpl
add
add
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
add
add
add
add
add
and
add
into
add
add
add
outs
push
ins
popa
jns
jb
add
add
add
dec
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
mov
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
push
popa
je
outs
addr16
add
add
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
dec
popa
jo
add
add
add
add
sldt
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
(bad)
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
inc
popa
ins
popa
add
add
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
nop
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
pop
gs
ins
outs
ja
ins
popa
addr16
add
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
inc
imul
jne
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
push
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
dec
popa
jb
inc
outs
jb
dec
outs
fs
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
inc
outs
ins
jo
je
jb
jo
outs
outs
outs
je
add
add
leave
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
inc
jb
jbe
outs
addr16
outs
fs
add
add
fld
add
sldt
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
push
imul
gs
outs
arpl
add
add
out
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
dec
popa
js
popa
je
outs
arpl
add
add
add
fadd
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
out
push
add
or
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
outs
push
imul
add
add
add
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
xchg
push
add
add
add
add
add
add
add
add
and
add
into
add
add
add
outs
push
je
je
jae
add
add
add
and
add
sldt
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
pop
push
add
cwde
push
add
add
add
add
add
add
and
add
into
add
add
add
jb
ins
ins
dec
outs
arpl
inc
popa
ins
add
add
add
and
sub
add
(bad)
inc
add
add
dec
outs
arpl
inc
popa
ins
gs
add
adc
add
adc
add
xor
add
scas
add
add
add
xor
data16
add
xor
bound
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
add
arpl
xor
add
add
add
add
adc
or
add
add
add
mov
push
add
aaa
add
add
inc
push
and
add
add
js
or
add
xchg
add
add
cmps
add
add
mov
or
add
add
add
add
add
inc
push
and
add
add
add
add
(bad)
(bad)
(bad)
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
ins
imul
ins
gs
add
add
add
add
(bad)
(bad)
dec
add
ja
fs
pop
je
ins
pop
jae
ins
pop
bound
pop
xor
sub
add
jecxz
add
add
add
gs
outs
arpl
inc
popa
ins
gs
add
add
add
add
add
add
sub
add
or
jae
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
ins
pop
je
bound
add
ja
fs
pop
jae
ins
pop
bound
add
add
fs
pop
jae
ins
pop
je
bound
add
add
add
add
add
add
add
outs
arpl
inc
popa
ins
gs
add
add
add
add
add
or
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
add
add
add
add
add
add
add
add
add
dec
outs
arpl
inc
popa
ins
gs
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
add
add
add
add
add
add
add
add
add
add
add
bound
gs
gs
add
add
add
push
add
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
adc
add
add
add
add
add
add
and
add
add
(bad)
inc
add
add
outs
inc
outs
outs
outs
arpl
inc
popa
ins
gs
popa
outs
addr16
add
add
inc
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
ja
fs
pop
bound
addr16
ins
gs
outs
addr16
outs
add
ja
fs
pop
bound
addr16
ins
gs
outs
addr16
push
add
add
add
ja
fs
pop
bound
addr16
ins
gs
outs
addr16
jae
add
fs
pop
bound
addr16
ins
gs
outs
addr16
add
add
add
(bad)
inc
add
add
inc
add
add
outs
inc
outs
outs
outs
arpl
inc
ins
imul
add
add
add
je
outs
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
ja
fs
pop
bound
jb
arpl
jae
gs
popa
pop
outs
add
fs
pop
bound
jb
arpl
jae
gs
popa
pop
push
add
add
add
fs
pop
bound
jb
arpl
jae
gs
popa
pop
jae
ja
fs
pop
bound
jb
arpl
jae
gs
popa
pop
add
add
sbb
(bad)
inc
add
add
inc
add
add
outs
dec
ins
je
outs
outs
imul
add
add
je
addr16
gs
je
ja
jbe
add
add
je
addr16
gs
jae
ja
jbe
add
add
ja
fs
pop
bound
arpl
imul
pop
outs
add
add
fs
pop
bound
arpl
imul
pop
push
add
add
add
add
fs
pop
bound
arpl
imul
pop
jae
add
ja
fs
pop
bound
arpl
imul
pop
add
sbb
add
inc
add
add
inc
add
add
outs
inc
fs
outs
arpl
add
add
add
add
inc
add
add
add
jbe
outs
arpl
bound
je
outs
pop
je
ja
jbe
add
add
popa
fs
outs
arpl
bound
je
outs
pop
jae
ja
jbe
add
add
xor
xor
xor
xor
add
xor
arpl
xor
xor
add
xor
arpl
xor
xor
add
xor
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
xor
add
pop
push
add
add
add
add
add
add
add
add
(bad)
inc
add
add
inc
add
add
outs
inc
popa
arpl
add
add
idiv
(bad)
inc
add
arpl
bound
je
outs
pop
je
ja
jbe
add
add
add
add
arpl
bound
je
outs
pop
jae
ja
jbe
add
add
add
add
js
cmp
cmp
xor
add
js
bound
xor
data16
add
js
bound
xor
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
pop
daa
add
push
push
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
fs
outs
imul
je
add
adc
add
add
jmp
add
(bad)
inc
add
add
imul
add
add
add
add
add
add
je
bound
cs
jbe
add
add
add
add
pop
jae
ja
jbe
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
je
bound
jne
je
push
imul
ja
fs
pop
je
bound
jne
je
push
imul
xor
xor
xor
xor
data16
add
jb
pop
ins
pop
bound
pop
xor
add
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
adc
push
add
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
jae
add
add
lahf
add
add
je
bound
cs
jbe
add
add
add
add
pop
jae
ja
jbe
add
add
add
add
js
data16
add
xor
bound
xor
add
xor
inc
cmp
xor
xor
add
xor
cmp
cmp
xor
add
ja
fs
pop
je
bound
jne
je
push
outs
add
add
fs
pop
je
bound
jne
je
push
jae
add
xor
xor
xor
xor
data16
add
jb
pop
ins
pop
bound
pop
xor
add
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
push
push
add
sbb
add
add
add
add
add
or
add
add
add
add
add
add
add
add
(bad)
inc
add
add
jo
outs
fs
push
je
je
jae
add
(bad)
jmp
inc
add
add
arpl
popa
je
jae
ins
addr16
imul
add
add
add
add
add
add
add
add
adc
add
push
sub
add
inc
add
add
popa
je
jae
ins
addr16
imul
add
add
add
add
add
add
add
add
je
fs
addr16
ins
ins
je
jae
popa
je
jae
add
add
add
inc
add
add
fs
outs
fs
push
je
je
jae
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
add
sub
add
add
add
dec
outs
fs
push
je
je
jae
add
add
add
add
add
add
add
add
xor
inc
inc
inc
inc
inc
xor
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
add
sub
add
add
add
dec
outs
fs
push
je
je
jae
add
or
add
pop
add
add
add
jb
add
jl
add
adc
add
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
outs
dec
outs
fs
push
je
je
jae
popa
outs
arpl
add
add
rol
add
scas
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
popa
push
add
add
add
add
add
add
add
add
sub
add
add
add
jo
dec
push
inc
add
(bad)
jmp
add
add
inc
add
add
arpl
push
inc
inc
ins
addr16
imul
add
add
add
add
add
add
add
adc
add
push
add
add
add
inc
add
add
push
inc
inc
ins
addr16
imul
add
add
add
add
add
add
add
add
add
je
fs
addr16
ins
ins
je
ins
outs
je
add
add
add
add
inc
add
add
fs
dec
push
inc
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
add
add
add
add
add
add
dec
dec
push
inc
add
add
add
add
add
add
add
add
xor
inc
inc
inc
inc
inc
xor
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
add
add
add
add
add
add
ins
dec
dec
push
inc
push
gs
add
add
add
add
inc
add
add
dec
dec
push
inc
add
or
add
sbb
add
add
add
add
add
xor
data16
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
add
add
add
add
add
jo
gs
popa
addr16
push
push
add
or
add
stos
add
add
add
add
add
fs
pop
je
ins
pop
jae
ins
pop
bound
pop
ins
outs
je
add
das
add
add
add
add
add
gs
dec
push
inc
push
ins
imul
add
or
add
add
add
add
add
jp
add
adc
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
ins
pop
je
bound
add
ja
fs
pop
jae
ins
pop
bound
add
add
fs
pop
jae
ins
pop
je
bound
add
add
add
add
add
add
add
dec
dec
push
push
push
ins
imul
or
add
add
add
push
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
jne
pop
add
add
add
add
add
add
add
add
add
dec
push
push
push
ins
imul
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
ins
pop
je
ja
jbe
add
add
add
add
ins
pop
jae
ja
jbe
add
add
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
outs
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
push
ja
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
jae
add
add
fs
pop
jae
pop
popa
jb
outs
ja
outs
pop
add
add
add
add
add
add
add
add
add
add
add
bound
dec
push
inc
dec
dec
add
add
add
add
add
add
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
pop
daa
add
add
add
add
add
add
add
add
add
add
add
outs
dec
dec
push
inc
inc
popa
outs
arpl
add
add
add
add
add
add
bound
je
outs
pop
je
ja
jbe
add
add
bound
je
outs
pop
jae
ja
jbe
add
add
xor
inc
inc
inc
inc
inc
xor
add
xor
bound
xor
add
xor
xor
bound
bound
data16
add
js
cmp
cmp
xor
add
xor
xor
xor
xor
data16
add
jae
jb
pop
ins
pop
bound
pop
xor
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
push
add
add
add
add
add
inc
add
add
imul
add
add
add
add
add
add
add
arpl
bound
pop
je
ja
jbe
add
add
arpl
bound
pop
jae
ja
jbe
add
add
xor
data16
add
xor
data16
add
xor
data16
add
xor
cmp
cmp
xor
add
ja
fs
pop
arpl
bound
pop
outs
add
ja
fs
pop
arpl
bound
pop
jae
ja
fs
pop
arpl
bound
pop
outs
pop
add
add
js
xor
xor
xor
data16
add
pop
jae
outs
jae
bound
xor
add
add
ins
jne
pop
jae
outs
jae
bound
xor
add
add
inc
push
add
add
fs
pop
arpl
bound
pop
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
add
add
mov
inc
or
add
or
add
add
add
add
or
add
add
dec
sub
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
dec
inc
inc
push
cmp
xchg
dec
dec
push
popa
adc
iret
mov
ss
and
and
inc
loop
test
jae
or
dec
inc
leave
inc
enter
pop
cdq
inc
aam
adc
mov
sub
(bad)
push
and
popf
into
out
mov
ret
(bad)
(bad)
pop
fistp
out
pop
xor
outs
jne
inc
dec
inc
push
(bad)
std
sub
fcos
jns
mov
scas
gs
push
jg
(bad)
sbb
sbb
push
pop
pop
mov
loope
xor
dec
(bad)
in
ret
mov
mov
push
inc
push
jo
cmp
jle
mov
adc
sub
call
shl
add
and
push
lds
mov
(bad)
push
je
aad
cmp
pop
push
loopne
js
enter
stos
lea
sti
mov
cmps
dec
outs
jmp
cmp
push
sbb
int
rcr
mov
sbb
out
shr
cmp
fs
fsubr
mov
rcr
pop
dec
pop
js
mov
adc
and
pop
inc
(bad)
jbe
je
inc
ret
lods
add
push
mov
adc
fidiv
or
rcl
enter
xchg
pop
mov
sbb
(bad)
in
push
add
jg
pop
add
inc
fstp
ret
sti
sbb
add
jne
sar
xchg
repz
arpl
sbb
mov
inc
cdq
push
sbb
jb
inc
ret
and
div
pop
not
or
out
mov
add
dec
inc
scas
inc
pusha
or
add
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
clc
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
inc
ds
add
pop
clc
push
pop
pop
clc
push
pop
pop
clc
push
push
daa
ins
push
or
push
push
daa
jl
xor
clc
push
push
daa
jnp
jne
clc
push
les
push
add
push
cmps
push
add
daa
imul
clc
push
pop
pop
stc
push
jae
clc
push
sbb
clc
push
push
daa
jb
add
push
push
daa
push
push
pop
clc
push
push
daa
imul
imul
push
inc
add
dec
add
add
add
add
add
add
add
and
add
add
push
add
add
add
add
add
adc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
shr
add
ins
movs
add
mov
add
add
add
add
add
add
mov
add
dec
xchg
add
inc
pusha
add
pushf
add
add
je
js
add
add
dec
add
add
add
add
add
add
add
add
pusha
cs
popa
je
add
cmp
add
pusha
add
add
add
push
add
inc
add
inc
cs
je
add
add
stos
add
add
add
add
add
add
cs
popa
je
add
inc
add
add
pusha
add
add
add
add
add
inc
add
shr
jb
jb
add
add
add
add
jo
add
add
add
xor
add
add
jb
ins
outs
arpl
add
cmp
add
add
add
add
add
add
inc
add
inc
mov
jmp
int3
int3
int3
int3
int3
push
mov
mov
call
test
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
dec
cmp
jbe
call
cmp
lea
jb
mov
jmp
mov
mov
cmp
je
cmp
jbe
call
mov
cmp
jb
mov
jmp
mov
cmp
je
cmp
jbe
call
mov
cmp
jb
mov
mov
mov
inc
inc
mov
cmp
jne
xor
mov
lea
mov
call
mov
inc
cmp
jl
mov
mov
add
add
mov
shr
and
add
mov
mov
mov
shr
mov
and
shl
shl
add
xor
xor
mov
mov
mov
lea
mov
mov
sub
cmp
ja
call
mov
inc
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
mov
lea
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
mov
jmp
lea
mov
jmp
mov
mov
mov
cmp
jb
mov
jmp
mov
mov
mov
inc
cmp
mov
jl
mov
xor
cmp
jne
test
je
cmp
jge
mov
sub
push
lea
push
push
call
add
xor
lea
mov
lea
mov
call
mov
inc
cmp
jl
mov
mov
add
mov
shr
and
add
add
mov
mov
mov
shr
mov
shl
add
and
shl
dec
xor
mov
mov
mov
mov
test
jle
mov
mov
or
sub
cmp
ja
call
mov
inc
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
mov
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
mov
jmp
lea
mov
jmp
lea
mov
mov
cmp
jb
mov
jmp
lea
mov
mov
mov
inc
cmp
mov
jl
mov
mov
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
mov
mov
lea
nop
mov
inc
test
jne
sub
push
push
mov
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
xor
mov
push
mov
mov
push
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
cmp
jae
call
mov
mov
sub
cmp
jae
mov
cmp
jne
push
add
push
mov
call
push
push
mov
call
pop
mov
pop
pop
pop
ret
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
pop
mov
mov
pop
pop
pop
ret
lea
pop
mov
mov
pop
pop
pop
ret
lea
mov
lea
cmp
jb
mov
jmp
mov
push
add
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
test
jbe
cmp
jb
cmp
mov
jae
mov
movsx
push
push
push
call
add
test
je
movzx
movzx
sub
je
sar
or
je
sub
lea
lea
movsx
push
push
push
call
add
test
jne
pop
or
pop
ret
cmp
mov
jae
mov
pop
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
test
je
mov
lea
cmp
jb
mov
jmp
mov
cmp
jb
cmp
jb
mov
jmp
mov
mov
add
cmp
jbe
cmp
jb
mov
mov
push
sub
push
push
mov
call
pop
pop
pop
ret
mov
cmp
jbe
call
mov
cmp
jae
mov
push
push
mov
call
test
jbe
mov
push
lea
cmp
jb
mov
jmp
test
jne
mov
cmp
jb
mov
pop
mov
mov
pop
pop
ret
lea
pop
mov
mov
pop
pop
ret
mov
push
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
cmp
jae
call
mov
mov
sub
cmp
jae
mov
test
jbe
mov
push
lea
cmp
jb
mov
mov
jmp
mov
cmp
jb
mov
jmp
mov
sub
push
mov
add
add
push
sub
push
add
push
call
mov
sub
add
cmp
mov
jb
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
or
cmp
jbe
mov
jmp
mov
mov
mul
mov
shr
shr
cmp
jae
mov
sub
cmp
ja
lea
xor
lea
mov
cmp
ja
xor
push
call
add
mov
jmp
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
mov
mov
mov
inc
mov
push
mov
call
mov
mov
ret
mov
mov
mov
test
jbe
cmp
jb
mov
jmp
lea
mov
push
push
lea
push
push
call
add
cmp
jb
mov
push
call
add
mov
lea
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
cmp
jb
mov
push
call
add
push
mov
mov
push
mov
call
int3
int3
mov
sub
test
ja
xor
push
call
add
add
ret
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
je
push
lea
call
mov
test
jbe
cmp
jae
dec
mov
push
mov
neg
sbb
not
lea
and
call
test
je
mov
mov
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
cmp
jb
mov
ret
lea
ret
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
mov
xor
push
lea
mov
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
cmp
jb
mov
ret
lea
ret
int3
int3
push
mov
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
mov
call
test
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
push
call
xor
mov
push
lea
mov
lea
push
mov
mov
push
mov
call
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jbe
sub
cmp
seta
ret
sub
mov
cmp
seta
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
push
push
call
push
test
mov
mov
push
je
mov
call
pop
pop
pop
ret
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
xor
call
add
ret
sub
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
call
add
ret
sub
push
push
mov
push
mov
xor
push
mov
lea
mov
mov
mov
mov
mov
cmp
jne
call
mov
call
test
je
mov
mov
call
cmp
mov
jb
mov
jmp
mov
xor
mov
mov
cmp
jb
mov
mov
jmp
mov
mov
test
je
cmp
jb
mov
jmp
mov
cmp
ja
cmp
jb
mov
mov
lea
cmp
jbe
call
mov
lea
cmp
jb
mov
jmp
mov
mov
lea
test
je
cmp
jb
mov
jmp
mov
cmp
ja
cmp
jb
mov
jmp
mov
add
cmp
jbe
call
mov
mov
cmp
jb
mov
jmp
mov
test
je
cmp
jb
mov
jmp
mov
cmp
ja
cmp
jb
mov
mov
add
cmp
jbe
call
mov
push
mov
mov
mov
mov
push
push
push
push
push
lea
push
mov
call
add
pop
pop
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
xor
mov
mov
mov
mov
lea
push
push
call
push
call
test
je
lea
push
push
push
call
test
jne
mov
push
call
mov
pop
ret
mov
mov
push
push
push
lea
push
mov
mov
push
push
mov
mov
mov
call
mov
push
call
mov
pop
ret
int3
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
call
push
push
push
call
push
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
call
push
push
push
call
push
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
call
push
push
push
call
push
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
call
push
push
push
call
push
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
call
push
push
push
call
push
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
xor
mov
cmp
je
mov
mov
push
mov
push
push
push
call
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
call
add
lea
push
mov
push
push
push
mov
mov
call
mov
mov
cmp
jae
push
call
mov
add
push
call
mov
add
lea
push
mov
push
push
push
mov
call
mov
mov
xor
cmp
je
push
call
add
jmp
mov
mov
cmp
je
lea
cmp
jbe
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
or
cmp
mov
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
or
cmp
mov
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
or
cmp
mov
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
or
cmp
jb
mov
jmp
add
mov
push
push
call
mov
test
jne
mov
test
jns
and
cmp
jb
mov
push
call
add
xor
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
mov
jmp
mov
test
je
and
cmp
jb
mov
push
call
add
xor
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
xor
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
xor
mov
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
cmp
je
mov
add
jmp
mov
mov
lea
cmp
jbe
mov
jmp
cmp
je
mov
push
lea
push
push
call
add
mov
add
mov
mov
add
cmp
jne
mov
cmp
jbe
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
mov
or
mov
cmp
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
or
cmp
mov
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
mov
or
cmp
mov
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
lea
push
mov
or
mov
mov
call
add
or
cmp
jb
mov
jmp
add
mov
push
push
call
mov
test
jne
mov
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
and
call
test
je
lea
call
cmp
je
cmp
je
mov
test
je
mov
sub
mov
mov
jmp
mov
sub
mov
sub
lea
cmp
jbe
mov
jmp
cmp
je
push
mov
add
push
push
call
add
mov
mov
push
call
mov
add
test
je
mov
mov
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
push
mov
and
push
push
mov
push
push
mov
call
mov
xor
mov
push
push
push
mov
xor
push
lea
mov
lea
push
push
lea
push
call
lea
push
call
xor
push
mov
push
mov
call
mov
lea
push
push
mov
call
lea
cmp
jne
lea
push
push
call
cmp
jne
jmp
lea
nop
lea
mov
mov
mov
lea
lea
mov
inc
cmp
jne
sub
push
lea
push
lea
call
lea
push
lea
mov
call
mov
cmp
jb
mov
push
call
add
push
lea
call
add
cmp
jb
mov
jmp
add
push
lea
push
call
test
sete
cmp
jb
mov
push
call
add
test
je
mov
mov
mov
lea
push
push
call
xor
cmp
je
mov
push
call
push
lea
call
add
cmp
jb
mov
jmp
add
push
push
call
cmp
jb
mov
push
call
add
mov
cmp
je
mov
mov
push
call
mov
add
push
call
add
mov
push
mov
mov
mov
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
push
push
push
call
ret
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
call
cmp
jne
mov
push
push
push
push
call
mov
test
jne
lea
push
call
push
push
mov
call
lea
mov
push
push
mov
call
cmp
jne
lea
push
push
call
cmp
jne
lea
xor
lea
mov
mov
mov
lea
mov
inc
cmp
jne
sub
push
lea
push
lea
call
lea
push
lea
call
cmp
jb
mov
push
call
add
push
lea
call
add
cmp
jb
mov
jmp
add
push
lea
push
call
test
sete
cmp
jb
mov
push
call
add
test
je
mov
mov
mov
lea
push
push
call
cmp
je
mov
call
mov
push
push
push
call
push
mov
call
push
push
call
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
call
cmp
jne
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
push
mov
xor
push
lea
mov
mov
xor
mov
cmp
jne
mov
mov
call
push
call
push
push
push
call
push
call
push
call
push
lea
call
add
mov
mov
mov
cmp
jb
mov
jmp
add
push
push
call
mov
test
je
push
lea
call
add
mov
mov
cmp
jb
mov
jmp
add
push
push
call
test
je
push
lea
call
add
mov
mov
cmp
jb
mov
jmp
add
push
push
call
test
je
push
lea
call
add
mov
cmp
jb
mov
jmp
add
push
push
call
mov
test
jne
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
test
je
and
cmp
jb
mov
push
call
add
mov
mov
mov
or
mov
test
je
cmp
jb
mov
push
call
add
cmp
je
push
lea
call
add
cmp
jb
mov
jmp
add
push
push
call
test
sete
cmp
jb
mov
push
call
add
cmp
je
push
lea
call
add
cmp
jb
mov
jmp
add
push
push
call
mov
cmp
jb
mov
push
call
add
push
push
mov
mov
mov
call
jmp
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
mov
push
push
lea
mov
mov
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
cmp
jb
mov
push
call
add
push
push
lea
mov
mov
mov
call
push
lea
mov
call
lea
lea
mov
call
mov
cmp
jb
mov
push
call
add
mov
mov
mov
cmp
jb
mov
push
call
add
jmp
cmp
jne
push
push
push
call
push
call
push
call
push
lea
call
add
mov
mov
mov
cmp
jb
mov
jmp
add
mov
push
push
call
test
je
push
lea
call
add
mov
mov
cmp
jb
mov
jmp
add
push
push
call
test
je
push
lea
call
add
mov
mov
cmp
jb
mov
jmp
add
push
push
call
test
je
push
lea
call
add
mov
mov
call
push
push
call
mov
test
jne
mov
test
je
and
lea
call
test
je
and
lea
call
test
je
and
lea
call
mov
test
je
lea
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
mov
mov
mov
pop
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
mov
xor
push
lea
mov
mov
push
call
xor
add
cmp
je
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
push
mov
test
je
mov
push
mov
push
call
mov
push
call
add
pop
mov
push
mov
mov
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
test
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
mov
mov
mov
mov
push
push
push
push
mov
call
add
add
mov
pop
pop
pop
add
ret
cmp
jbe
call
mov
mov
push
push
push
lea
push
mov
call
pop
pop
pop
add
ret
int3
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
push
mov
mov
sub
mov
imul
add
sar
mov
shr
add
jne
xor
jmp
cmp
jbe
call
mov
mov
test
je
cmp
je
call
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
mov
push
push
push
mov
call
mov
cmp
jbe
call
mov
mov
mov
test
jne
call
xor
lea
sub
lea
cmp
ja
test
je
mov
jmp
mov
jmp
xor
cmp
jae
call
mov
mov
pop
pop
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
push
mov
call
lea
sub
lea
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
cmp
jb
mov
mov
mov
ret
add
mov
mov
ret
cmp
push
jb
mov
jmp
lea
test
jbe
mov
movzx
mov
shl
or
shr
rep
adc
rep
pop
ret
push
mov
cmp
jbe
call
mov
cmp
jae
mov
push
push
push
call
xor
cmp
sbb
neg
pop
ret
test
jne
mov
cmp
jb
mov
xor
xor
cmp
sbb
mov
neg
pop
ret
add
xor
mov
xor
cmp
sbb
neg
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
mov
mov
mov
mov
test
jne
xor
jmp
mov
sub
mov
imul
add
sar
mov
shr
add
mov
mov
sub
mov
imul
add
sar
mov
shr
add
mov
sub
cmp
jae
call
inc
cmp
jae
mov
shr
mov
sub
cmp
jae
xor
jmp
add
cmp
jae
mov
mov
call
mov
sub
mov
mov
imul
add
sar
mov
xor
mov
shr
add
mov
lea
mov
sub
lea
mov
mov
mov
push
mov
push
push
push
mov
mov
call
mov
add
mov
mov
mov
push
mov
push
push
mov
mov
call
mov
mov
inc
lea
sub
lea
add
mov
mov
push
mov
push
mov
push
mov
call
mov
mov
sub
mov
imul
add
sar
mov
shr
add
lea
mov
test
je
mov
mov
push
mov
call
mov
add
push
call
mov
add
mov
lea
sub
lea
mov
lea
sub
lea
mov
mov
jmp
cmp
mov
mov
jle
mov
lea
sub
push
lea
mov
call
add
cmp
jle
mov
lea
push
lea
sub
lea
sub
lea
lea
call
add
push
call
add
push
push
call
sub
mov
imul
add
sar
mov
shr
add
cmp
jae
mov
push
lea
call
mov
mov
lea
push
mov
push
call
mov
mov
mov
sub
mov
imul
add
sar
mov
shr
add
mov
sub
lea
call
mov
add
mov
mov
lea
lea
call
mov
jmp
mov
mov
mov
mov
push
add
add
call
add
push
push
call
mov
push
lea
call
mov
mov
push
lea
push
mov
call
mov
mov
mov
call
mov
lea
lea
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
mov
xor
push
lea
mov
push
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
test
ja
xor
lea
sub
add
add
push
call
add
add
ret
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
mov
or
cmp
jbe
mov
jmp
mov
mov
mul
mov
shr
shr
cmp
jae
mov
sub
cmp
ja
lea
xor
lea
mov
cmp
ja
xor
lea
push
call
add
mov
jmp
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
mov
lea
mov
mov
mov
call
mov
mov
ret
mov
mov
mov
mov
test
jbe
cmp
jb
mov
jmp
lea
add
push
push
lea
push
push
call
mov
add
cmp
jb
mov
push
call
mov
add
lea
xor
mov
mov
mov
cmp
jb
mov
xor
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
cmp
jb
mov
push
call
add
xor
push
mov
mov
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
test
ja
xor
lea
push
call
add
add
ret
or
xor
div
cmp
jae
lea
push
lea
mov
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
mov
xor
push
lea
mov
mov
call
push
mov
call
mov
mov
mov
push
push
push
mov
push
mov
call
mov
test
jne
lea
push
lea
mov
call
push
lea
push
call
mov
add
mov
cmp
jae
lea
lea
push
lea
call
add
mov
add
mov
cmp
jb
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
push
push
mov
push
push
push
mov
xor
push
lea
mov
mov
mov
cmp
je
cmp
je
mov
mov
mov
test
jne
call
xor
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
mov
push
push
push
call
mov
mov
mov
mov
call
mov
push
call
add
mov
call
mov
push
call
add
mov
mov
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
sub
push
mov
push
lea
push
push
push
push
call
test
jne
xor
pop
pop
mov
pop
ret
mov
mov
mov
push
push
push
call
mov
mov
add
lea
push
mov
push
push
push
call
lea
mov
call
lea
push
lea
call
mov
mov
push
push
call
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmp
push
push
push
jne
lea
push
lea
mov
call
push
lea
push
call
mov
mov
mov
test
jne
call
xor
cmp
jne
call
mov
push
push
lea
push
call
pop
pop
mov
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
mov
xor
mov
mov
push
lea
push
push
lea
push
push
push
push
push
push
mov
call
add
cmp
jne
xor
xor
test
jbe
mov
lea
lea
cmp
jae
add
inc
add
cmp
jb
pop
mov
xor
call
add
ret
cmp
jae
or
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
cmp
push
push
mov
jb
mov
jmp
add
push
call
cmp
mov
jb
mov
jmp
lea
push
push
call
mov
test
je
push
call
mov
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
lea
push
lea
push
mov
mov
call
mov
mov
mov
test
je
cmp
je
call
cmp
je
test
jne
call
cmp
jne
call
mov
lea
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
mov
jmp
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
mov
push
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
push
push
push
mov
call
add
cmp
jne
pop
ret
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
push
push
push
push
push
mov
call
sub
mov
imul
add
sar
mov
shr
add
lea
sub
add
add
add
mov
sub
pop
pop
ret
int3
int3
int3
push
push
mov
push
mov
xor
push
lea
mov
mov
call
mov
push
call
add
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
xor
push
lea
mov
mov
mov
call
mov
push
call
add
mov
mov
pop
pop
add
ret
push
mov
and
sub
push
push
mov
mov
cmp
mov
mov
mov
jne
mov
mov
cmp
mov
setb
mov
test
je
mov
jmp
mov
cmp
je
mov
mov
mov
mov
test
je
mov
test
je
cmp
je
call
cmp
jne
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
lea
call
mov
mov
mov
mov
cmp
jae
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
pop
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
push
mov
xor
push
lea
mov
mov
cmp
je
push
xor
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
lea
mov
call
mov
cmp
je
mov
jmp
mov
cmp
je
mov
jmp
mov
mov
lea
cmp
jne
cmp
mov
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
cmp
jne
cmp
je
mov
jmp
mov
cmp
mov
jne
lea
mov
mov
cmp
je
mov
mov
cmp
jne
cmp
je
mov
mov
mov
jmp
mov
call
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
add
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
jne
mov
mov
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
add
cmp
jbe
sub
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
lea
call
mov
mov
mov
mov
mov
mov
push
push
push
push
push
lea
call
mov
mov
add
push
push
push
push
lea
push
mov
call
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
cmp
push
push
mov
push
mov
jne
mov
jmp
lea
cmp
jae
mov
jmp
mov
mov
cmp
je
mov
mov
mov
mov
test
je
cmp
je
call
cmp
je
mov
cmp
jb
lea
jmp
mov
mov
mov
mov
lea
mov
mov
mov
pop
pop
mov
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
int3
int3
int3
push
push
mov
push
mov
xor
push
lea
mov
push
call
add
test
je
mov
jmp
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
push
mov
xor
push
lea
mov
mov
cmp
jb
push
xor
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
mov
mov
push
push
push
push
call
mov
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
mov
jmp
cmp
je
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
lea
mov
cmp
jne
lea
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
ret
mov
cmp
jne
mov
mov
mov
ret
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
lea
mov
mov
cmp
je
ret
int3
int3
int3
int3
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
ret
mov
cmp
jne
mov
mov
mov
ret
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
push
push
push
lea
call
mov
push
call
add
xor
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
xor
push
lea
mov
mov
push
call
add
test
je
mov
jmp
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
mov
push
mov
mov
test
je
cmp
je
call
mov
mov
cmp
jne
mov
mov
mov
test
je
cmp
je
call
mov
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
test
je
cmp
je
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
cmp
je
call
jmp
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
nop
cmp
jne
mov
mov
mov
cmp
je
mov
push
push
lea
push
push
call
mov
mov
jmp
mov
pop
mov
pop
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
push
push
lea
push
mov
call
mov
push
call
add
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
mov
push
test
je
cmp
je
call
mov
mov
cmp
jne
mov
mov
test
je
cmp
je
call
mov
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
test
je
cmp
je
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
cmp
je
call
jmp
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
mov
push
push
lea
push
call
mov
mov
jmp
mov
pop
mov
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
push
mov
xor
push
lea
mov
mov
mov
cmp
je
push
xor
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
mov
lea
mov
call
mov
cmp
je
mov
jmp
mov
cmp
je
mov
jmp
mov
mov
lea
cmp
jne
cmp
mov
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
cmp
jne
cmp
je
mov
jmp
mov
cmp
mov
jne
mov
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
je
mov
mov
jmp
mov
call
mov
jmp
mov
mov
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
lea
add
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
nop
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
push
mov
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
mov
push
mov
mov
call
jmp
cmp
jne
mov
push
mov
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
push
mov
call
mov
mov
mov
mov
mov
push
mov
mov
call
mov
mov
push
call
mov
add
test
jbe
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
mov
jne
mov
mov
lea
mov
cmp
jae
mov
jmp
cmp
je
cmp
jae
mov
mov
mov
cmp
je
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jae
mov
mov
jmp
mov
cmp
je
mov
pop
pop
pop
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jne
call
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
lea
mov
mov
cmp
je
mov
ret
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
add
test
je
mov
lea
test
je
mov
lea
test
je
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmp
mov
mov
jne
mov
push
mov
call
mov
push
call
add
cmp
mov
je
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
ret
mov
cmp
jne
mov
mov
mov
ret
mov
mov
mov
ret
int3
int3
int3
int3
mov
cmp
jne
lea
mov
mov
cmp
je
ret
int3
int3
int3
int3
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
ret
mov
cmp
jne
mov
mov
mov
ret
mov
mov
mov
ret
push
call
add
test
je
mov
lea
test
je
mov
lea
test
je
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
call
mov
cmp
je
mov
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
ret
mov
cmp
jne
lea
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
jmp
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmp
mov
mov
jne
mov
push
mov
call
mov
push
call
add
cmp
mov
je
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
call
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
lea
mov
mov
cmp
je
mov
ret
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
mov
mov
sub
mov
cmp
je
test
jne
call
mov
cmp
lea
jb
mov
jmp
mov
mov
lea
mov
lea
cmp
ja
cmp
jb
mov
cmp
jae
call
mov
mov
lea
mov
mov
mov
mov
cmp
je
movsx
mov
inc
add
cmp
jne
pop
pop
mov
pop
add
ret
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
push
mov
push
lea
mov
test
je
cmp
je
call
cmp
je
test
jne
call
xor
cmp
jne
call
mov
cmp
je
test
jne
call
cmp
je
call
jmp
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
test
jne
call
xor
cmp
jne
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
mov
test
jne
mov
mov
push
push
mov
call
test
jne
push
mov
call
jmp
push
mov
call
mov
mov
cmp
jne
xor
pop
pop
pop
mov
pop
ret
lea
push
push
push
push
mov
call
test
je
call
push
mov
push
push
call
add
cmp
push
mov
push
je
mov
mov
call
mov
lea
push
lea
push
mov
mov
call
jmp
mov
mov
call
mov
lea
push
mov
lea
push
mov
call
mov
lea
push
push
push
push
call
mov
mov
push
push
call
push
call
movzx
mov
neg
sbb
and
add
push
push
call
push
call
mov
mov
lea
mov
push
lea
mov
mov
mov
mov
mov
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
xor
mov
mov
cmp
jbe
mov
mov
mov
cmp
je
mov
push
push
mov
mov
push
mov
mov
call
dec
add
mov
mov
jmp
mov
mov
cmp
je
jmp
lea
call
add
cmp
jne
xor
push
push
call
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
push
xor
lea
cmp
jb
mov
push
call
add
mov
mov
mov
add
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
cmp
mov
push
mov
jne
mov
mov
lea
cmp
mov
setb
mov
test
je
mov
jmp
mov
cmp
je
mov
mov
mov
mov
test
je
mov
mov
test
je
cmp
je
call
cmp
jne
mov
push
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
call
mov
mov
mov
mov
cmp
jae
push
mov
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
sub
push
push
push
push
mov
xor
push
lea
mov
mov
mov
cmp
jb
push
xor
push
lea
mov
mov
mov
call
lea
push
lea
mov
call
push
lea
push
mov
call
mov
mov
push
push
push
call
mov
mov
mov
add
xor
mov
cmp
jne
mov
mov
mov
mov
jmp
cmp
je
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
lea
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
cmp
jne
call
mov
cmp
je
mov
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
mov
ret
mov
cmp
jne
lea
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
jmp
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
sub
mov
xor
mov
push
push
push
push
lea
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
je
push
push
lea
mov
mov
push
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
add
jmp
mov
mov
cmp
je
call
add
cmp
jne
push
push
call
cmp
jb
mov
push
call
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
cmp
je
push
push
push
push
lea
sub
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
pop
pop
pop
pop
mov
xor
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
cmp
je
call
mov
cmp
je
inc
cmp
jne
call
mov
cmp
je
call
jmp
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
cmp
jne
lea
cmp
jne
mov
mov
mov
cmp
je
mov
mov
jmp
ret
push
mov
push
mov
mov
test
jge
pop
mov
pop
ret
mov
test
je
cmp
je
cmp
jne
push
mov
test
je
mov
test
je
test
jne
pop
lea
pop
pop
ret
mov
cmp
jae
pop
pop
mov
pop
ret
push
push
mov
push
push
mov
push
push
push
push
call
add
pop
pop
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
mov
je
mov
sub
je
sub
je
sub
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
je
sub
je
sub
jne
mov
test
jne
mov
and
cmp
je
test
je
test
je
mov
ret
test
je
xor
ret
test
je
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
xor
push
push
mov
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
add
test
je
cmp
mov
jne
test
je
jmp
test
jne
mov
test
je
cmp
je
test
je
mov
movzx
mov
mov
call
sub
jns
xor
mov
add
add
adc
test
je
test
je
cmp
jae
xor
cmp
je
mov
movzx
mov
cmp
jne
cmp
jne
mov
not
test
je
mov
test
je
or
cmp
jne
and
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
test
je
cmp
je
mov
lea
push
mov
push
mov
push
push
movzx
push
push
push
movzx
push
lea
push
lea
push
lea
push
call
add
mov
test
je
mov
test
je
cmp
je
lea
push
mov
mov
call
mov
mov
lea
push
mov
push
movzx
push
push
movzx
push
push
push
push
push
lea
push
lea
push
call
add
mov
test
je
test
je
mov
test
je
cmp
je
lea
push
mov
mov
call
mov
mov
lea
push
mov
push
movzx
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
test
je
test
je
lea
push
mov
mov
call
mov
mov
lea
push
mov
push
movzx
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
test
jne
xor
mov
cmp
jb
cmp
jne
mov
add
xor
cmp
je
test
je
lea
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
sub
mov
cmp
mov
mov
mov
jg
cmp
je
test
je
movzx
mov
cmp
jb
xor
jmp
lea
call
mov
sub
jns
xor
add
add
adc
jmp
mov
cmp
je
mov
mov
cmp
jne
mov
test
je
or
push
mov
jmp
mov
mov
test
je
test
je
or
mov
mov
call
jmp
mov
test
je
test
je
or
push
mov
mov
call
mov
mov
and
cmp
jne
mov
mov
mov
push
and
or
push
call
add
test
jne
mov
movsx
push
lea
mov
call
jmp
cmp
jne
mov
movsx
push
lea
mov
call
jmp
mov
movsx
push
lea
mov
call
jmp
mov
and
cmp
jne
mov
movsx
push
lea
mov
call
mov
mov
and
je
mov
or
push
push
call
add
test
je
cmp
mov
jne
mov
mov
mov
mov
inc
jmp
mov
mov
mov
push
push
push
push
call
add
test
jne
test
je
test
jne
and
or
mov
movsx
push
lea
mov
call
cmp
jne
test
mov
mov
jne
mov
mov
mov
mov
inc
test
je
mov
test
je
or
jmp
cmp
jne
test
je
and
or
mov
test
je
cmp
jae
mov
movsx
push
jmp
test
je
mov
movsx
push
lea
mov
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
add
mov
jmp
mov
movsx
push
lea
mov
call
cmp
jne
test
mov
mov
jne
mov
mov
mov
mov
inc
test
je
mov
test
je
or
mov
mov
mov
mov
mov
inc
jmp
test
je
test
je
cmp
jae
mov
movsx
push
jmp
test
je
mov
movsx
push
lea
mov
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
add
mov
movsx
push
jmp
test
je
cmp
je
test
je
or
mov
jmp
mov
movsx
push
lea
mov
call
cmp
jne
mov
test
je
test
je
or
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
inc
mov
test
je
mov
test
je
or
mov
mov
mov
mov
mov
inc
jmp
test
je
test
je
and
cmp
jne
or
mov
mov
mov
mov
mov
inc
jmp
mov
mov
mov
mov
cmp
jne
mov
add
mov
adc
mov
mov
lea
mov
call
push
mov
mov
call
jmp
mov
add
mov
adc
mov
mov
movzx
lea
lea
call
push
mov
mov
call
movzx
mov
call
mov
mov
mov
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
xor
push
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jle
jmp
mov
xor
mov
mov
push
lea
push
push
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
push
push
call
add
test
je
mov
push
lea
push
push
push
call
mov
mov
sub
add
mov
cmp
je
mov
sub
add
cmp
ja
mov
cmp
jae
mov
imul
add
jmp
mov
inc
mov
add
push
mov
mov
mov
call
movzx
mov
call
mov
mov
movzx
lea
lea
call
mov
mov
mov
add
mov
add
mov
adc
sub
add
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
test
jle
add
add
mov
adc
cmp
jne
mov
test
je
mov
lea
cmp
je
and
jmp
mov
test
je
and
and
mov
lea
cmp
ja
cmp
mov
jbe
mov
mov
mov
push
imul
mov
add
lea
push
mov
push
push
push
push
mov
call
add
test
je
mov
cmp
jae
jmp
lea
movzx
lea
call
mov
mov
mov
mov
inc
inc
cmp
jb
lea
push
lea
push
call
mov
add
test
jbe
mov
lea
cmp
ja
dec
mov
mov
lea
rep
xor
test
jbe
mov
imul
add
inc
mov
push
mov
mov
add
call
movzx
mov
call
movzx
lea
lea
mov
mov
call
mov
mov
inc
mov
mov
mov
cmp
jb
jmp
mov
add
mov
mov
sub
mov
test
jle
mov
add
cmp
ja
dec
mov
mov
lea
rep
mov
cmp
jae
mov
imul
add
inc
mov
push
mov
mov
add
call
movzx
mov
call
mov
mov
movzx
lea
lea
call
mov
mov
inc
mov
add
mov
adc
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
imul
add
mov
lea
mov
inc
rep
mov
mov
mov
sub
add
mov
mov
adc
add
add
mov
mov
mov
mov
lea
push
mov
lea
mov
mov
call
mov
inc
push
lea
push
push
call
add
jmp
mov
imul
mov
mov
add
push
mov
lea
push
push
push
push
push
call
mov
mov
mov
mov
mov
sub
add
add
mov
adc
add
mov
cmp
mov
mov
mov
jg
jmp
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
mov
mov
sub
add
cmp
ja
mov
cmp
jae
mov
imul
add
jmp
lea
mov
mov
add
push
mov
mov
inc
mov
call
movzx
mov
call
mov
mov
movzx
lea
lea
call
mov
mov
inc
mov
add
mov
adc
mov
mov
mov
cmp
jb
mov
mov
mov
pop
pop
pop
xor
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
and
mov
mov
mov
mov
add
ret
and
cmp
jae
lea
mov
mov
mov
add
ret
mov
lea
mov
mov
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
mov
and
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
and
lea
cmp
mov
jae
mov
mov
mov
mov
add
ret
add
push
mov
mov
mov
mov
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
mov
shr
and
mov
movzx
mov
mov
and
movzx
mov
mov
shr
movzx
shr
mov
and
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
lea
shr
and
mov
mov
xor
add
test
je
mov
mov
mov
mov
shr
and
mov
or
je
mov
mov
inc
mov
shr
and
mov
or
je
mov
mov
inc
and
mov
mov
inc
lea
add
pop
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
lea
mov
mov
mov
shr
and
movzx
mov
mov
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
movzx
shr
mov
and
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
lea
xor
mov
mov
add
mov
lea
mov
mov
shr
and
mov
or
je
mov
mov
inc
sub
jne
and
mov
mov
inc
lea
add
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
lea
mov
mov
mov
shr
and
movzx
mov
mov
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
movzx
mov
shr
and
movzx
mov
mov
mov
shr
and
movzx
mov
mov
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
and
movzx
mov
mov
shr
movzx
shr
mov
and
movzx
pop
mov
mov
pop
ret
int3
int3
int3
push
push
mov
push
mov
mov
push
push
lea
xor
mov
mov
mov
add
mov
mov
shr
and
mov
or
je
mov
mov
inc
sub
cmp
jne
mov
mov
mov
mov
shr
and
mov
or
je
mov
mov
inc
sub
jne
and
mov
mov
inc
lea
add
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
lea
push
push
xor
mov
mov
mov
add
mov
lea
mov
mov
mov
call
mov
mov
mov
cdq
and
xor
or
or
or
je
mov
mov
inc
sub
jne
mov
and
mov
mov
inc
lea
add
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
lea
mov
inc
test
jne
sub
mov
inc
push
push
add
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
inc
push
push
add
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
lea
push
push
lea
push
call
add
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
push
mov
push
mov
mov
push
mov
push
mov
test
jle
movzx
mov
movzx
mov
mov
mov
mov
test
je
mov
cmp
jne
mov
call
sub
js
mov
mov
mov
inc
add
mov
adc
cmp
mov
mov
mov
jne
cmp
mov
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
mov
call
dec
test
jle
mov
mov
inc
mov
mov
mov
add
mov
adc
mov
movzx
mov
mov
mov
shr
pop
and
movzx
mov
pop
pop
pop
add
ret
cmp
jne
mov
call
dec
test
jle
movzx
inc
add
adc
mov
cmp
jae
shr
and
mov
jmp
mov
call
sub
js
inc
add
adc
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
mov
call
cmp
je
dec
test
jle
movzx
mov
inc
add
adc
call
mov
mov
mov
mov
mov
inc
jmp
mov
dec
test
jle
mov
movzx
mov
movzx
mov
mov
mov
inc
add
adc
mov
test
je
cmp
jne
movzx
cmp
jne
call
mov
mov
mov
mov
mov
inc
sub
js
mov
mov
inc
mov
mov
add
mov
adc
mov
pop
mov
pop
pop
mov
pop
add
ret
mov
cmp
jne
movzx
call
sub
js
mov
mov
inc
mov
mov
add
mov
adc
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
movzx
call
dec
test
jle
mov
mov
mov
inc
mov
mov
add
mov
adc
mov
movzx
mov
mov
shr
pop
and
movzx
mov
mov
pop
pop
pop
add
ret
cmp
jne
movzx
call
dec
test
jle
mov
mov
mov
movzx
inc
mov
add
adc
mov
shr
and
mov
movzx
mov
mov
test
je
test
jne
cmp
jae
mov
jmp
cmp
jb
mov
movzx
mov
mov
cmp
je
mov
test
jne
mov
call
sub
js
inc
add
adc
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
pop
pop
add
ret
cmp
jne
movzx
call
sub
js
mov
movzx
mov
movzx
mov
mov
inc
add
adc
mov
test
je
mov
cmp
jne
mov
call
sub
js
mov
mov
inc
mov
mov
jmp
cmp
je
cmp
jne
mov
call
sub
js
mov
movzx
mov
movzx
mov
mov
inc
mov
test
je
cmp
jne
mov
call
sub
js
mov
mov
inc
mov
mov
add
jmp
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
cmp
jae
mov
test
je
lea
cmp
ja
movzx
jmp
movzx
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
add
mov
add
add
jmp
mov
dec
mov
inc
add
mov
adc
mov
mov
push
push
push
push
push
push
call
xor
add
cmp
je
cmp
je
add
mov
jmp
dec
mov
mov
sub
je
sub
je
sub
jne
and
mov
jmp
and
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
push
push
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
movzx
movzx
mov
push
mov
test
je
cmp
jne
mov
call
add
js
inc
add
mov
pop
adc
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
dec
cmp
ja
jmp
mov
push
mov
call
ret
mov
push
mov
call
ret
mov
push
mov
call
ret
mov
push
mov
call
ret
mov
push
mov
call
ret
mov
push
mov
call
ret
nop
jno
add
sbb
adc
add
(bad)
cdq
add
sub
mov
mov
mov
push
push
mov
mov
shr
shr
and
and
and
cmp
mov
mov
mov
mov
mov
je
mov
movzx
mov
mov
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
inc
add
cmp
je
mov
and
je
or
mov
mov
push
push
call
mov
add
dec
cmp
jne
neg
sbb
and
add
add
lea
lea
jmp
neg
sbb
and
add
add
lea
lea
jmp
cmp
je
mov
and
je
or
mov
mov
push
push
call
mov
add
dec
cmp
jne
neg
sbb
and
add
lea
lea
jmp
neg
sbb
and
add
lea
lea
mov
mov
mov
mov
mov
mov
mov
add
test
je
or
add
cmp
je
cmp
jne
cmp
je
mov
mov
mov
mov
inc
mov
mov
push
push
call
add
cmp
lea
jne
mov
mov
lea
mov
mov
mov
mov
mov
add
jmp
mov
mov
lea
mov
mov
mov
mov
mov
add
mov
lea
mov
lea
mov
mov
mov
mov
mov
add
mov
sub
je
sub
je
sub
jne
mov
add
js
mov
mov
mov
call
cmp
mov
setl
lea
mov
mov
mov
inc
mov
cdq
xor
sub
mov
jmp
mov
add
js
mov
movzx
mov
call
cmp
mov
setl
lea
mov
mov
mov
inc
movsx
cdq
xor
sub
mov
mov
call
mov
inc
mov
add
jmp
cmp
jne
mov
add
jns
pop
xor
pop
add
ret
mov
mov
mov
call
cmp
jne
mov
mov
call
mov
add
mov
add
adc
mov
mov
mov
pop
mov
inc
mov
pop
add
ret
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
movzx
mov
cmp
jne
mov
add
cmp
ja
movzx
jmp
mov
mov
push
push
mov
push
push
call
add
sub
je
mov
sub
je
sub
jne
cmp
mov
jne
mov
and
or
test
je
or
test
je
or
add
lea
lea
jmp
mov
and
or
mov
test
je
or
mov
add
lea
lea
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
and
or
test
mov
je
or
mov
add
lea
lea
jmp
test
je
or
jmp
mov
test
je
or
add
cmp
jne
mov
and
cmp
je
lea
test
je
or
lea
jmp
test
je
or
add
mov
test
je
or
lea
lea
jmp
test
je
or
add
lea
lea
jmp
test
je
or
and
dec
movzx
neg
sbb
and
add
add
lea
lea
jmp
lea
lea
jmp
lea
lea
jmp
test
je
or
add
lea
lea
jmp
test
je
or
add
cmp
jne
lea
lea
jmp
push
mov
push
call
add
test
mov
jne
sub
je
sub
je
sub
jne
mov
mov
and
or
cmp
jne
test
je
mov
mov
sub
js
movzx
mov
call
mov
push
push
call
mov
push
push
push
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
add
cmp
setl
lea
mov
mov
mov
inc
movsx
cdq
xor
sub
mov
mov
call
mov
mov
mov
mov
inc
add
add
adc
jmp
mov
mov
and
or
cmp
jne
test
je
mov
mov
sub
js
movzx
mov
call
mov
push
push
call
mov
push
push
push
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
add
cmp
setl
lea
mov
mov
mov
inc
movsx
cdq
xor
sub
mov
mov
call
mov
mov
mov
mov
inc
inc
add
adc
jmp
mov
mov
and
or
cmp
jne
test
je
mov
mov
cmp
jne
sub
js
movzx
mov
call
mov
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
inc
movzx
add
mov
call
mov
mov
mov
mov
inc
add
add
adc
jmp
mov
push
push
call
mov
push
push
push
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
add
mov
inc
jmp
sub
je
mov
sub
je
sub
jne
mov
mov
and
or
cmp
jne
test
je
mov
mov
cmp
jne
sub
js
movzx
mov
mov
call
mov
mov
mov
push
push
push
push
lea
push
lea
inc
add
push
lea
adc
push
mov
mov
mov
call
add
test
jne
pop
pop
pop
add
ret
sub
js
mov
mov
call
mov
push
push
call
mov
push
push
push
call
add
test
je
or
add
mov
mov
push
push
call
add
cmp
lea
jne
mov
mov
lea
mov
mov
mov
mov
mov
add
jmp
mov
mov
lea
mov
mov
mov
mov
mov
add
cmp
mov
setl
lea
mov
mov
mov
inc
mov
cdq
xor
sub
mov
mov
call
mov
mov
mov
mov
inc
add
add
adc
jmp
mov
mov
and
or
cmp
jne
test
je
mov
mov
cmp
jne
sub
js
movzx
mov
mov
call
mov
mov
mov
push
push
push
push
lea
push
lea
inc
add
push
lea
adc
push
mov
mov
mov
call
add
test
jne
pop
pop
pop
add
ret
sub
js
movzx
mov
call
mov
push
push
call
mov
push
push
push
call
add
test
je
or
add
mov
mov
push
push
call
add
cmp
lea
jne
mov
mov
lea
mov
mov
mov
mov
mov
add
jmp
mov
mov
lea
mov
mov
mov
mov
mov
add
cmp
mov
setl
lea
mov
mov
mov
inc
movsx
cdq
xor
sub
mov
mov
call
mov
mov
mov
mov
inc
inc
add
adc
jmp
mov
mov
and
or
cmp
jne
test
je
mov
mov
cmp
jne
sub
js
movzx
mov
mov
call
mov
mov
mov
push
push
push
push
lea
push
inc
add
lea
push
adc
lea
mov
push
mov
mov
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
jne
or
sub
js
mov
mov
call
mov
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
inc
add
mov
cmp
jne
push
mov
call
cmp
mov
setl
lea
mov
mov
mov
inc
mov
cdq
xor
sub
mov
mov
jmp
mov
call
mov
mov
mov
mov
inc
add
add
adc
jmp
mov
push
push
call
mov
push
push
push
call
add
test
je
or
add
mov
mov
push
push
call
add
cmp
lea
jne
mov
mov
lea
mov
mov
mov
mov
mov
add
jmp
mov
mov
lea
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
mov
pop
add
ret
clc
sahf
add
ficomp
add
push
sahf
add
fs
add
stos
sahf
add
bound
add
inc
lahf
add
iret
movs
add
add
add
add
or
or
push
push
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
or
or
int3
sub
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
shr
and
mov
shr
mov
mov
and
xor
and
mov
mov
test
je
mov
movzx
mov
mov
dec
cmp
ja
jmp
sub
js
mov
movzx
mov
call
movzx
mov
call
inc
add
mov
adc
jmp
mov
mov
mov
push
push
push
push
call
add
test
jne
and
or
sub
js
mov
movzx
mov
call
movzx
mov
call
add
add
mov
adc
jmp
mov
push
push
push
push
call
add
cmp
jne
and
cmp
jne
or
mov
sub
js
mov
mov
mov
call
mov
mov
call
add
add
mov
adc
jmp
and
or
mov
sub
js
mov
mov
mov
call
cmp
mov
jne
cmp
jge
mov
mov
mov
mov
inc
mov
cdq
xor
sub
mov
jmp
mov
call
add
add
mov
adc
jmp
sub
js
mov
movzx
mov
call
mov
cmp
je
mov
movzx
call
inc
add
mov
adc
jmp
sub
js
mov
movzx
mov
call
mov
mov
test
je
test
je
or
mov
test
je
jle
cmp
jg
mov
jmp
mov
push
mov
call
cmp
jge
mov
mov
mov
mov
inc
movsx
cdq
xor
sub
mov
mov
call
inc
add
mov
adc
jmp
test
je
or
and
xor
cmp
setne
dec
and
add
lea
lea
jmp
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
test
je
or
add
lea
lea
jmp
mov
mov
mov
push
push
push
push
call
add
sub
je
sub
je
sub
jne
mov
or
and
xor
cmp
setne
dec
and
add
mov
lea
lea
jmp
test
je
or
add
lea
lea
jmp
and
or
lea
lea
jmp
and
or
test
mov
je
or
mov
add
lea
lea
jmp
test
je
or
add
lea
lea
jmp
mov
test
je
or
add
cmp
jne
mov
and
cmp
je
test
lea
je
or
lea
jmp
test
je
or
add
lea
lea
jmp
mov
test
je
or
add
lea
lea
jmp
mov
test
je
or
add
cmp
lea
mov
mov
jne
lea
jmp
lea
jmp
lea
lea
jmp
mov
lea
lea
jmp
test
je
or
add
lea
lea
jmp
mov
test
je
or
add
lea
lea
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
cmp
jne
test
je
mov
mov
mov
mov
mov
push
push
push
push
call
add
cmp
jne
or
mov
jmp
mov
mov
mov
push
push
push
push
call
add
sub
je
sub
je
sub
jne
and
cmp
jne
or
mov
jmp
and
or
mov
jmp
and
or
mov
jmp
mov
mov
mov
push
push
push
push
call
add
cmp
jne
test
jmp
mov
cmp
jne
mov
mov
pop
pop
pop
xor
pop
add
ret
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jne
jmp
cmp
jne
mov
jmp
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
push
push
and
or
push
push
call
add
cmp
je
mov
mov
push
push
push
push
call
add
cmp
jne
test
jne
or
mov
jmp
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
je
mov
and
or
mov
jmp
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
mov
push
push
push
push
call
add
cmp
jne
and
lea
cmp
jne
or
jmp
mov
test
je
or
mov
jmp
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
pop
neg
pop
sbb
pop
neg
pop
add
ret
test
je
or
add
jmp
cmp
jne
mov
test
je
add
or
cmp
jae
lea
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
cmp
je
cmp
je
lea
lea
jmp
cmp
jne
cmp
je
cmp
ja
lea
lea
jmp
mov
test
je
or
mov
cmp
jne
push
mov
jmp
push
mov
call
mov
and
cmp
ja
je
cmp
je
cmp
je
cmp
jne
push
mov
mov
call
jmp
push
mov
mov
call
jmp
push
mov
mov
call
jmp
push
mov
mov
call
jmp
cmp
je
cmp
jne
push
mov
mov
call
jmp
push
mov
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
and
mov
mov
mov
mov
push
push
push
push
call
add
test
jne
and
or
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
push
push
push
push
call
add
cmp
jne
mov
and
or
mov
mov
mov
mov
mov
mov
mov
add
jmp
not
test
je
and
or
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
mov
push
push
push
push
call
and
or
add
test
jne
mov
sub
js
mov
movzx
mov
mov
call
movzx
mov
call
mov
test
je
push
mov
mov
call
movzx
mov
call
mov
mov
mov
mov
inc
movzx
mov
call
add
add
mov
adc
jmp
mov
sub
js
mov
mov
mov
mov
call
movzx
mov
call
mov
test
je
push
mov
mov
call
movzx
mov
call
mov
mov
mov
mov
inc
mov
mov
call
add
add
mov
adc
jmp
sub
js
mov
movsx
mov
movzx
call
mov
test
jge
cdq
xor
sub
cdq
mov
mov
mov
mov
sub
sbb
jmp
cdq
add
adc
mov
add
adc
push
push
call
inc
add
adc
jmp
mov
mov
mov
push
push
push
push
call
and
or
add
test
jne
mov
sub
js
mov
movsx
mov
movzx
call
mov
test
je
push
mov
mov
call
mov
test
jge
cdq
xor
sub
cdq
mov
mov
sub
mov
sbb
add
adc
mov
jmp
cdq
add
adc
add
adc
mov
movzx
mov
call
add
add
adc
jmp
mov
sub
js
mov
mov
mov
mov
call
mov
test
je
push
mov
mov
call
mov
test
jge
cdq
xor
sub
cdq
mov
mov
mov
mov
sub
sbb
jmp
cdq
add
adc
add
adc
push
push
mov
call
add
add
adc
jmp
mov
push
push
call
add
test
jne
and
or
mov
sub
js
mov
movzx
mov
call
push
mov
push
push
call
mov
mov
mov
mov
inc
movzx
add
mov
call
mov
mov
mov
add
mov
inc
add
mov
adc
jmp
push
push
call
add
cmp
jne
and
or
mov
sub
js
mov
mov
mov
call
push
mov
push
push
call
mov
mov
mov
mov
inc
mov
add
mov
call
mov
mov
mov
add
mov
inc
add
mov
adc
jmp
mov
sub
js
mov
mov
mov
call
push
mov
push
push
call
mov
mov
mov
mov
inc
add
mov
mov
call
mov
mov
mov
add
mov
inc
add
mov
adc
jmp
mov
push
mov
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
movzx
mov
push
mov
mov
and
call
mov
mov
mov
mov
inc
mov
add
mov
mov
mov
inc
mov
mov
jmp
mov
movzx
mov
push
mov
mov
and
call
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
mov
inc
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
movzx
mov
push
mov
mov
and
call
mov
mov
mov
mov
inc
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
inc
push
mov
mov
call
push
mov
mov
call
jmp
mov
movzx
and
test
lea
je
or
lea
jmp
mov
test
je
or
lea
jmp
lea
jmp
and
mov
mov
mov
movzx
mov
push
push
push
push
and
call
add
sub
je
sub
je
sub
jne
mov
test
je
test
jne
test
je
or
add
lea
lea
jmp
or
mov
and
dec
movzx
neg
sbb
and
add
add
lea
lea
jmp
test
mov
lea
je
or
lea
jmp
and
or
lea
jmp
and
or
test
mov
je
or
add
lea
mov
lea
jmp
mov
mov
mov
and
and
jne
pop
pop
pop
mov
pop
add
ret
mov
mov
and
or
mov
test
je
mov
and
or
mov
and
mov
cmp
je
or
and
cmp
je
mov
mov
push
push
push
push
call
add
test
jne
mov
jmp
mov
mov
push
push
push
push
call
add
cmp
jne
test
je
or
push
mov
jmp
push
mov
jmp
mov
and
cmp
je
or
and
cmp
je
mov
push
mov
mov
call
push
push
push
call
mov
mov
mov
push
mov
inc
push
call
add
test
jne
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
and
and
je
mov
mov
and
or
mov
test
mov
je
and
mov
or
mov
cmp
je
mov
and
cmp
je
mov
mov
push
push
push
push
call
add
test
jne
mov
jmp
mov
mov
push
push
push
push
call
add
cmp
jne
test
je
or
push
mov
jmp
push
mov
jmp
and
cmp
je
or
and
cmp
je
mov
push
mov
mov
call
push
push
push
call
mov
mov
mov
push
mov
inc
push
call
add
test
jne
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
test
je
mov
and
cmp
je
test
je
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
jmp
test
je
mov
mov
and
or
push
mov
mov
call
mov
push
push
push
call
mov
mov
mov
push
mov
inc
push
call
add
test
jne
mov
mov
mov
mov
mov
mov
mov
add
jmp
push
push
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
jmp
or
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
push
mov
inc
push
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
jmp
push
push
call
and
or
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
mov
mov
mov
pop
mov
mov
mov
mov
pop
pop
mov
mov
mov
pop
add
ret
lea
xor
add
push
add
cmp
add
mov
test
add
ret
stos
add
fisubr
add
imul
add
adc
lods
add
in
lods
add
ret
scas
add
ss
add
imul
adc
add
jae
add
pushf
lods
add
mov
add
enter
sub
add
add
scas
add
add
scas
add
repnz
add
pop
mov
adc
mov
adc
mov
adc
mov
adc
add
xchg
add
lahf
mov
adc
mov
adc
lods
add
mov
add
jl
add
lods
add
std
lods
add
aaa
mov
adc
mov
adc
mov
add
fs
add
adc
add
xor
add
cld
mov
add
xor
add
jb
add
sub
adc
add
add
scas
add
mov
scas
add
aam
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
cmp
ja
movzx
jmp
xor
cmp
sete
ret
mov
ret
xor
ret
rol
pop
rol
ins
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
jne
test
jne
test
je
or
test
jne
or
test
jne
or
test
jne
or
cmp
jae
mov
cmp
jae
mov
cmp
jae
mov
cmp
je
mov
pop
pop
ret
int3
int3
mov
mov
add
mov
mov
cmp
ja
movzx
jmp
cmp
jne
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
lea
aas
ret
adc
ret
xor
add
rol
add
dec
ret
pop
ret
imul
add
jmp
add
stc
rol
pop
ret
test
add
add
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
push
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
push
mov
xor
sub
jns
mov
sub
cmp
jl
mov
movzx
push
lea
push
push
call
mov
add
cmp
je
mov
cmp
ja
jmp
mov
test
je
mov
and
mov
cmp
je
cmp
jae
and
mov
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
mov
push
mov
push
mov
mov
mov
call
or
add
mov
inc
jmp
or
mov
inc
jmp
mov
test
je
mov
and
mov
cmp
je
cmp
jae
and
mov
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
mov
mov
push
push
mov
mov
mov
call
or
add
mov
inc
jmp
or
mov
inc
jmp
mov
test
je
mov
cmp
je
cmp
jae
and
mov
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
mov
push
mov
push
jmp
or
mov
mov
inc
jmp
mov
test
je
mov
cmp
je
cmp
jae
and
mov
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
mov
push
mov
push
jmp
or
mov
mov
inc
jmp
mov
test
je
mov
cmp
je
cmp
jae
and
mov
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
cmp
je
cmp
jae
and
mov
mov
mov
push
mov
push
mov
mov
mov
call
add
mov
inc
jmp
or
mov
mov
inc
jmp
mov
pop
pop
pop
pop
add
ret
mov
icebp
ret
add
mov
add
lds
adc
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
test
je
or
cmp
mov
je
test
je
or
mov
mov
test
je
mov
test
jne
or
mov
mov
mov
not
and
mov
mov
cmp
je
test
je
mov
mov
mov
push
test
je
mov
mov
mov
inc
mov
test
je
mov
mov
mov
inc
mov
test
je
mov
mov
inc
mov
test
je
mov
mov
inc
mov
cmp
jbe
mov
lea
mov
xor
mov
mov
cmp
jbe
mov
mov
inc
cmp
jb
add
sub
jne
mov
xor
pop
cmp
jbe
lea
mov
mov
mov
inc
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
and
je
cmp
push
je
cmp
ja
je
cmp
je
cmp
jne
or
mov
mov
push
mov
call
mov
mov
mov
mov
inc
pop
ret
or
mov
mov
push
mov
call
mov
mov
mov
mov
inc
pop
ret
or
mov
jmp
cmp
jne
or
mov
jmp
cmp
je
cmp
jne
or
mov
jmp
or
mov
mov
push
mov
call
mov
mov
mov
mov
inc
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
call
push
lea
call
and
lea
push
lea
call
push
lea
push
call
int3
push
mov
call
push
lea
call
and
lea
push
lea
call
push
lea
push
call
int3
mov
push
push
mov
call
test
jne
push
mov
push
call
add
cmp
pop
jl
pop
mov
pop
ret
push
call
test
jge
push
mov
push
call
add
cmp
pop
jl
pop
ret
mov
push
mov
mov
cmp
push
mov
mov
jge
imul
add
push
call
pop
mov
pop
pop
ret
mov
cmp
jge
imul
add
push
call
pop
ret
mov
push
mov
pop
jmp
mov
push
push
push
mov
push
push
call
mov
test
je
push
mov
call
push
call
pop
pop
mov
test
jne
add
cmp
jl
pop
pop
pop
ret
push
call
neg
sbb
pop
and
ret
jmp
mov
inc
mov
test
je
call
mov
cmp
jb
ret
mov
push
mov
push
call
pop
ret
mov
push
mov
push
call
pop
ret
mov
push
mov
push
call
pop
ret
mov
push
mov
push
call
pop
ret
cmp
jne
repz
jmp
mov
push
mov
mov
push
push
xor
cmp
je
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
push
push
call
add
xor
pop
pop
pop
ret
mov
and
and
mov
ret
mov
push
mov
push
mov
push
push
mov
mov
mov
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
mov
mov
pop
pop
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
and
mov
pop
ret
mov
push
mov
push
mov
push
mov
mov
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
jmp
mov
pop
mov
pop
pop
pop
ret
cmp
mov
je
push
call
pop
ret
mov
test
jne
mov
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
xor
push
push
push
push
push
call
add
ret
mov
push
mov
pop
jmp
mov
push
mov
push
mov
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jb
push
push
push
call
add
jmp
push
push
push
call
add
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
pop
pop
pop
pop
ret
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
add
push
add
push
call
neg
pop
sbb
pop
inc
pop
ret
mov
push
push
push
mov
call
mov
mov
pop
ret
mov
push
mov
sub
jmp
push
call
pop
test
je
push
call
pop
test
je
leave
ret
test
mov
jne
or
mov
call
push
call
pop
push
lea
call
push
lea
push
call
int3
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
pop
jmp
push
call
pop
test
je
call
push
call
push
push
call
add
jmp
mov
push
mov
push
push
mov
push
xor
or
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jge
or
jmp
mov
cmp
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
test
je
mov
mov
call
ret
push
call
pop
mov
push
call
pop
mov
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
mov
push
push
cmp
jne
push
call
pop
test
jne
xor
jmp
call
test
jne
call
jmp
call
call
mov
call
mov
call
test
jge
call
jmp
call
test
jl
call
test
jl
push
call
pop
test
jne
inc
jmp
call
jmp
xor
cmp
jne
cmp
jle
dec
cmp
jne
call
cmp
jne
call
call
call
jmp
cmp
jne
call
push
push
call
mov
pop
pop
cmp
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
jmp
cmp
jne
push
call
pop
xor
inc
pop
pop
pop
ret
push
push
call
mov
mov
mov
xor
inc
mov
test
jne
cmp
je
and
cmp
je
cmp
jne
mov
test
je
push
push
push
call
mov
cmp
je
push
push
push
call
mov
test
je
push
push
push
call
mov
cmp
jne
test
jne
push
push
push
call
push
push
push
call
mov
test
je
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmp
je
mov
test
je
push
push
push
call
mov
mov
mov
jmp
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
xor
call
ret
mov
push
mov
cmp
jne
call
push
mov
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
test
je
mov
lea
push
push
push
push
call
leave
ret
mov
push
mov
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
leave
ret
pop
pop
xchg
jmp
mov
push
mov
push
push
push
push
push
mov
mov
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
push
push
push
push
push
call
add
mov
pop
pop
pop
mov
mov
pop
ret
mov
push
mov
push
cld
mov
mov
xor
call
push
push
push
push
push
push
push
push
call
add
pop
pop
ret
mov
push
mov
sub
push
cmp
jne
mov
mov
mov
xor
inc
jmp
and
mov
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
push
mov
push
call
pop
pop
and
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
leave
ret
mov
push
mov
push
push
cld
mov
mov
xor
call
mov
mov
and
je
mov
mov
xor
inc
jmp
jmp
push
mov
push
mov
push
mov
push
push
push
mov
push
push
call
add
mov
cmp
jne
push
push
call
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
mov
jmp
xor
inc
pop
leave
ret
mov
push
mov
push
push
push
push
mov
mov
mov
mov
mov
jmp
cmp
jne
call
mov
dec
mov
imul
add
mov
cmp
jge
cmp
jle
cmp
jne
dec
mov
mov
cmp
jge
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
mov
imul
add
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
mov
call
mov
mov
call
mov
mov
pop
pop
ret
mov
push
mov
call
mov
jmp
mov
cmp
je
mov
test
jne
inc
pop
ret
xor
pop
ret
mov
push
mov
push
call
mov
cmp
jne
call
mov
mov
pop
pop
ret
call
mov
jmp
mov
cmp
je
mov
cmp
jne
pop
pop
jmp
mov
mov
jmp
mov
push
mov
sub
mov
and
lea
xor
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
lea
mov
push
push
push
call
mov
mov
mov
mov
leave
ret
push
push
lea
sub
push
push
push
mov
mov
mov
xor
push
push
mov
lea
mov
ret
push
push
lea
sub
push
push
push
mov
mov
mov
xor
push
mov
push
mov
lea
mov
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
test
push
je
push
call
pop
call
test
je
push
call
pop
test
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
mov
mov
mov
call
lea
push
call
push
call
int3
mov
push
mov
mov
mov
mov
and
not
and
or
mov
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
push
push
call
mov
test
je
push
call
pop
and
mov
test
je
push
call
test
jne
mov
cmp
je
push
call
pop
mov
call
cmp
je
push
call
pop
mov
push
call
pop
mov
test
je
cmp
jne
cmp
je
push
call
pop
mov
call
mov
mov
mov
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
mov
push
lea
push
mov
call
mov
mov
pop
pop
ret
mov
jmp
mov
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
test
je
lea
cmp
je
mov
mov
cmp
je
add
push
push
call
pop
pop
test
je
xor
jmp
test
je
test
je
mov
mov
test
je
test
je
test
je
test
je
xor
inc
pop
pop
pop
ret
mov
push
mov
mov
mov
mov
cmp
je
cmp
jne
call
and
jmp
call
cmp
jle
call
add
dec
xor
pop
ret
push
push
call
mov
mov
cmp
jg
movsx
jmp
mov
mov
call
add
inc
and
cmp
je
cmp
jle
cmp
jl
call
mov
shl
mov
add
mov
mov
mov
cmp
je
mov
push
push
mov
push
call
and
jmp
push
call
pop
ret
mov
and
mov
mov
mov
mov
jmp
mov
call
cmp
je
call
mov
call
ret
mov
mov
call
cmp
jle
call
add
dec
ret
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
xor
inc
mov
mov
ret
xor
ret
push
push
call
mov
test
je
cmp
jne
mov
test
je
mov
test
je
and
push
push
call
mov
call
ret
xor
cmp
setne
ret
mov
call
int3
mov
push
mov
mov
mov
push
mov
add
cmp
jl
mov
mov
mov
mov
add
add
pop
pop
ret
mov
push
mov
sub
test
jne
call
call
and
cmp
mov
jle
push
push
mov
mov
mov
mov
lea
test
jle
mov
shl
mov
mov
push
mov
push
mov
add
push
call
add
test
jne
dec
add
test
jg
jmp
mov
inc
mov
cmp
jl
pop
pop
mov
leave
ret
push
mov
call
call
cmp
je
call
and
call
or
call
call
mov
push
push
mov
call
int3
push
push
call
mov
mov
mov
mov
and
mov
mov
push
lea
push
call
pop
pop
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
and
xor
inc
mov
mov
push
push
push
push
push
call
add
mov
and
jmp
mov
call
ret
mov
call
and
mov
mov
cmp
jg
movsx
jmp
mov
mov
and
mov
cmp
jae
imul
add
mov
cmp
jle
cmp
jg
mov
mov
push
push
push
push
call
add
and
and
mov
mov
mov
call
mov
call
ret
inc
jmp
mov
mov
mov
mov
push
call
pop
call
mov
mov
call
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
push
call
pop
test
je
push
push
call
pop
pop
ret
push
push
call
xor
mov
mov
mov
cmp
je
cmp
je
mov
cmp
jne
test
je
mov
mov
test
js
lea
mov
xor
inc
push
test
je
mov
push
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
mov
push
test
je
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
mov
push
push
call
add
cmp
jne
mov
test
je
add
push
jmp
cmp
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
add
push
mov
push
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
push
call
pop
test
je
test
push
pop
setne
inc
mov
jmp
call
mov
mov
jmp
xor
inc
ret
mov
call
xor
call
ret
push
push
call
mov
test
je
mov
jmp
mov
mov
lea
and
mov
push
push
push
mov
push
call
add
dec
je
dec
jne
push
lea
push
push
call
pop
pop
push
push
push
call
jmp
lea
push
push
call
pop
pop
push
push
push
call
mov
call
ret
xor
inc
ret
mov
call
int3
mov
push
mov
cmp
je
push
push
push
push
call
add
cmp
push
jne
push
jmp
push
call
push
push
push
push
call
mov
push
push
inc
push
mov
push
mov
push
push
call
add
test
je
push
push
call
pop
ret
mov
push
mov
push
push
push
mov
cmp
je
push
call
cmp
je
call
lea
call
cmp
je
cmp
je
push
push
push
push
push
push
push
call
add
test
jne
mov
cmp
jne
call
mov
lea
push
lea
push
push
push
push
call
mov
mov
add
cmp
jae
push
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmp
jne
lea
test
jne
push
mov
push
push
push
push
push
push
call
mov
add
inc
mov
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
mov
cmp
push
push
mov
jg
movsx
jmp
mov
cmp
mov
jl
cmp
jl
call
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
cmp
je
call
mov
mov
call
mov
push
push
mov
call
pop
pop
test
jne
call
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
call
call
cmp
je
call
mov
call
push
xor
mov
call
pop
test
jne
xor
cmp
jle
mov
mov
push
call
test
jne
inc
add
cmp
jl
call
push
push
call
pop
pop
push
lea
call
push
lea
push
call
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
lea
push
lea
push
push
push
push
call
add
mov
mov
cmp
jae
mov
cmp
jg
cmp
jg
mov
mov
mov
mov
test
jle
mov
mov
lea
mov
mov
test
jle
push
mov
push
push
mov
call
add
test
jne
dec
add
cmp
jg
dec
add
cmp
jg
jmp
push
mov
push
mov
push
push
push
push
push
mov
call
mov
add
inc
add
jmp
mov
cmp
je
push
push
call
pop
pop
cmp
jne
mov
and
cmp
jb
mov
test
je
push
call
pop
test
jne
call
call
call
mov
call
cmp
mov
mov
push
jne
push
jmp
push
call
mov
push
push
push
push
call
add
push
call
mov
cmp
jbe
cmp
jne
push
push
push
push
push
push
push
push
call
add
call
cmp
je
call
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
push
mov
push
push
push
call
cmp
mov
mov
mov
mov
mov
jne
mov
cmp
je
cmp
je
mov
and
cmp
jb
test
jne
test
je
cmp
je
cmp
jne
push
push
push
push
call
add
jmp
cmp
jne
mov
and
cmp
jb
cmp
je
cmp
jne
cmp
jb
cmp
jbe
mov
mov
test
je
movzx
push
push
push
push
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
push
call
add
xor
inc
pop
pop
pop
pop
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
dec
repz
je
add
cwde
repz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sbb
add
or
add
add
add
clc
repz
lock
call
repz
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
hlt
add
pop
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
aam
add
clc
hlt
add
and
add
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
cmc
add
pushf
cmc
add
movs
cmc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
mov
cmp
je
cmp
jne
push
push
mov
call
test
je
push
push
call
call
mov
pop
push
push
push
call
pop
call
push
call
mov
cmp
je
push
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
cmp
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
mov
call
cmp
jne
push
push
push
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
and
ret
push
push
call
push
call
pop
and
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
push
call
pop
and
mov
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
cmp
jne
push
xor
cmp
push
mov
jle
push
mov
add
push
push
push
call
push
push
push
call
add
inc
cmp
jl
pop
push
push
push
call
pop
pop
push
call
and
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
push
pop
xor
mov
push
mov
sar
mov
mov
and
shl
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jl
pop
xor
pop
ret
call
cmp
je
call
push
call
pop
ret
mov
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
add
push
call
pop
pop
ret
mov
push
mov
mov
cmp
jge
add
push
call
mov
or
pop
pop
ret
mov
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
mov
cmp
mov
jge
and
add
push
call
pop
pop
ret
add
push
call
pop
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
mov
push
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
shl
pop
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
test
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
push
push
mov
mov
test
je
lea
jmp
cmp
je
lea
push
call
mov
add
add
cmp
jb
push
call
and
pop
add
cmp
jl
pop
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
mov
mov
cmp
jne
push
push
call
pop
pop
pop
ret
xor
pop
ret
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
call
mov
test
je
call
jmp
push
push
call
push
call
pop
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
push
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
xor
inc
cmp
jne
xor
pop
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
mov
cmp
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmp
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
mov
call
mov
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
mov
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
mov
mov
call
ret
push
push
call
mov
test
jne
push
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmp
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
mov
call
cmp
jne
test
jne
inc
add
and
mov
push
push
push
push
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
mov
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
mov
cmp
jne
call
test
je
push
call
pop
jmp
mov
sar
mov
and
shl
lea
and
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
call
mov
xor
mov
mov
push
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
push
push
mov
mov
sar
lea
mov
and
shl
add
mov
add
sar
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
xor
cmp
je
test
je
call
mov
mov
xor
mov
cmp
jbe
mov
mov
test
jne
mov
mov
xor
cmp
sete
mov
mov
add
cmp
je
mov
mov
mov
and
push
lea
push
jmp
movsx
push
call
pop
test
je
mov
sub
add
xor
inc
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
mov
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
cmp
jb
jmp
mov
mov
inc
mov
mov
mov
jmp
xor
mov
add
test
je
mov
mov
test
jne
mov
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
mov
cmp
jne
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
push
pop
mov
inc
inc
add
add
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
push
pop
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
mov
sub
pop
pop
mov
xor
pop
call
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
cmp
jne
call
mov
xor
pop
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
and
sar
mov
shl
movsx
and
pop
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
mov
push
xor
cmp
push
push
jl
cmp
jae
mov
sar
mov
lea
mov
and
shl
add
test
je
cmp
je
cmp
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
mov
or
pop
pop
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
and
call
mov
or
pop
ret
push
xor
cmp
jl
cmp
jae
mov
and
sar
mov
shl
add
test
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
mov
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
mov
inc
mov
call
cmp
je
mov
sar
and
shl
mov
lea
push
call
mov
call
ret
xor
mov
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
mov
shl
lea
push
call
pop
ret
mov
push
mov
sub
push
push
push
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
push
call
mov
push
call
pop
test
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
mov
call
add
or
pop
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
mov
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
mov
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
xor
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
mov
cmp
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
xor
push
push
push
push
push
push
push
call
mov
ret
mov
push
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
pop
ret
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
mov
and
je
and
mov
jmp
ret
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
mov
push
call
add
ret
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
int3
int3
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
lea
mov
xor
call
add
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
lea
mov
xor
call
mov
jmp
int3
jmp
mov
add
push
call
ret
mov
add
jmp
mov
jmp
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
mov
add
push
call
ret
mov
add
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
and
je
and
lea
jmp
ret
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
int3
int3
int3
push
push
mov
call
push
call
pop
ret
push
call
pop
ret
mov
call
push
call
pop
ret
mov
call
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
int3
int3
cmp
jb
mov
push
call
add
xor
mov
mov
mov
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
add
add
add
adc
add
add
add
add
add
mov
lods
add
xchg
lods
add
sbb
add
sub
add
dec
cmps
add
pop
cmps
add
push
add
js
add
mov
add
ret
add
cmps
add
out
cmps
add
(bad)
cmps
add
push
test
add
add
cmp
add
data16
add
add
lods
add
lods
add
push
lods
add
inc
lods
add
mov
add
into
stos
add
xor
add
je
add
mov
add
mov
test
add
hlt
test
add
and
add
cmp
add
pop
stos
add
jbe
add
mov
add
cmps
stos
add
mov
stos
add
in
stos
add
cld
stos
add
or
add
sbb
add
cmp
add
push
stos
add
pop
stos
add
outs
stos
add
jp
add
mov
add
movs
stos
add
mov
add
mov
stos
add
loopne
add
out
stos
add
add
add
lods
add
dec
lods
add
data16
add
sub
stos
lods
add
mov
lods
add
fsubr
add
lods
add
or
add
xchg
cmps
add
add
add
scas
cmps
add
add
add
into
test
add
test
add
test
add
add
add
cmps
add
cld
cmps
add
repnz
add
(bad)
cmps
add
int3
cmps
add
push
test
add
add
add
mov
adc
pop
add
jge
add
and
inc
pop
add
pusha
pop
add
sbb
pop
add
rcr
pop
add
add
adc
pop
add
inc
pop
add
pusha
pop
add
pop
int
adc
xor
adc
cmp
adc
add
add
add
add
add
push
adc
adc
add
add
dec
dec
push
add
add
push
dec
dec
push
push
pop
inc
add
dec
dec
push
pop
pop
inc
add
dec
dec
push
pop
pop
inc
push
add
add
add
push
push
dec
add
add
pop
xor
ja
and
add
push
push
inc
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
inc
dec
push
add
add
inc
dec
push
add
add
add
dec
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
or
push
inc
push
xor
add
add
dec
dec
push
push
xor
add
add
dec
add
add
add
push
add
push
push
dec
push
inc
dec
push
add
push
push
dec
push
inc
dec
push
add
add
push
dec
dec
push
inc
push
push
add
push
add
add
push
add
add
push
add
add
push
add
or
push
push
push
push
xor
add
inc
push
push
push
push
xor
add
add
push
add
add
push
add
add
push
add
pop
push
push
push
push
push
push
push
add
add
push
push
push
push
push
push
push
add
inc
push
push
push
push
xor
add
add
inc
push
push
push
push
push
xor
add
pop
dec
dec
push
dec
push
push
push
add
add
or
push
push
dec
xor
add
add
dec
dec
push
push
dec
inc
push
push
add
add
dec
dec
push
push
dec
inc
push
push
add
add
push
add
add
push
add
or
push
push
inc
xor
add
pop
dec
dec
push
inc
push
xor
add
add
inc
inc
inc
push
push
inc
push
push
add
add
push
inc
add
dec
push
push
inc
push
push
add
dec
inc
inc
inc
push
push
add
dec
dec
push
inc
push
push
push
add
add
pop
push
push
dec
push
inc
dec
push
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
or
push
push
inc
xor
add
add
inc
add
add
inc
add
push
push
push
push
push
push
inc
add
xor
add
inc
push
push
push
inc
xor
add
add
inc
push
push
push
push
inc
xor
add
pop
dec
dec
push
dec
push
push
inc
add
add
or
push
push
dec
xor
add
add
dec
dec
push
inc
inc
push
push
add
add
add
inc
add
add
dec
push
xor
add
pop
dec
dec
push
and
push
add
add
add
push
add
add
add
inc
dec
dec
add
add
dec
push
push
add
add
add
add
pop
add
add
pop
add
add
inc
pop
pop
add
add
dec
dec
push
add
add
pop
add
push
dec
dec
dec
push
dec
pop
add
inc
inc
dec
dec
dec
push
add
inc
push
inc
dec
dec
dec
push
add
add
add
push
add
add
inc
dec
inc
add
add
push
add
push
inc
inc
dec
push
push
push
add
push
add
push
inc
push
push
inc
push
push
add
inc
inc
dec
dec
push
push
add
push
add
add
push
add
push
inc
push
inc
dec
dec
push
add
dec
add
add
inc
add
push
inc
dec
push
push
push
push
add
inc
dec
push
inc
push
inc
add
inc
push
push
push
dec
push
add
dec
add
push
inc
push
inc
dec
dec
dec
add
inc
push
inc
push
push
dec
add
inc
dec
dec
dec
dec
push
add
inc
dec
inc
dec
inc
pop
add
inc
inc
inc
dec
push
dec
add
inc
dec
dec
add
add
inc
inc
dec
dec
push
dec
push
add
add
or
dec
dec
push
dec
inc
inc
add
add
inc
inc
dec
dec
push
dec
inc
add
add
pop
inc
inc
dec
dec
push
dec
inc
add
add
add
push
add
add
dec
push
push
add
add
inc
dec
push
push
push
push
add
dec
dec
inc
add
add
inc
push
inc
dec
dec
push
push
add
add
push
inc
inc
dec
dec
push
push
add
inc
inc
dec
dec
push
inc
inc
add
add
push
inc
inc
dec
dec
push
inc
add
inc
inc
dec
dec
push
inc
add
inc
dec
inc
dec
push
push
add
push
add
push
inc
dec
push
push
inc
push
add
inc
add
push
inc
dec
inc
dec
dec
push
add
dec
add
add
dec
add
add
inc
add
add
inc
dec
push
add
add
push
dec
dec
add
add
inc
push
inc
inc
dec
inc
add
inc
push
dec
inc
dec
dec
push
add
add
pop
inc
push
dec
dec
inc
dec
push
add
add
add
push
add
pop
inc
pop
dec
xor
xor
add
add
dec
add
pop
inc
dec
dec
inc
push
push
push
add
add
pop
inc
inc
inc
inc
push
push
push
add
add
push
inc
push
push
inc
dec
xor
pop
inc
pop
push
push
inc
inc
push
add
add
push
inc
push
inc
push
inc
dec
add
dec
add
add
pop
add
add
xor
add
dec
inc
pop
add
add
inc
dec
inc
dec
dec
xor
push
inc
dec
inc
dec
inc
xor
add
dec
add
push
inc
dec
inc
dec
xor
push
inc
dec
inc
dec
xor
inc
dec
inc
xor
add
add
pop
inc
dec
add
add
push
push
push
add
add
inc
inc
push
add
add
inc
dec
push
add
add
dec
dec
push
add
add
pop
inc
dec
add
add
inc
dec
push
push
inc
push
add
inc
dec
push
push
inc
dec
push
add
add
add
push
add
push
inc
dec
inc
inc
dec
push
add
push
push
push
add
add
inc
push
push
add
add
add
inc
add
add
add
push
add
add
inc
dec
push
add
add
push
add
add
push
push
inc
add
add
push
add
add
inc
dec
dec
add
add
dec
push
dec
add
add
inc
inc
inc
add
add
dec
inc
push
add
add
inc
dec
inc
add
add
inc
inc
inc
add
add
add
dec
add
add
add
push
inc
push
add
add
dec
push
dec
add
add
dec
dec
push
add
add
add
xor
add
inc
push
inc
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
inc
inc
push
add
add
dec
inc
push
add
add
push
dec
push
add
add
dec
push
push
add
add
add
add
inc
dec
inc
add
add
inc
dec
inc
add
add
dec
push
inc
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
pop
add
add
push
add
push
inc
push
push
inc
dec
push
add
inc
inc
dec
dec
and
push
add
add
inc
push
dec
add
add
add
push
add
add
add
inc
add
add
add
inc
push
inc
add
add
push
inc
inc
add
add
inc
inc
push
add
add
add
add
add
add
inc
dec
inc
add
add
inc
push
push
add
add
push
push
push
add
add
dec
dec
push
add
add
or
push
dec
dec
dec
push
inc
push
push
add
dec
dec
push
dec
push
inc
push
add
add
or
push
push
push
inc
xor
add
inc
inc
inc
push
push
inc
push
inc
add
add
push
dec
inc
dec
inc
inc
push
add
add
push
push
dec
push
inc
push
inc
add
push
inc
add
dec
push
push
inc
push
inc
add
dec
inc
inc
inc
push
inc
add
push
add
push
push
push
dec
dec
inc
push
add
push
push
push
dec
inc
push
add
push
push
dec
push
inc
inc
add
dec
dec
push
inc
push
inc
add
push
push
dec
push
inc
dec
dec
push
inc
push
add
push
push
dec
push
inc
dec
dec
push
inc
push
add
inc
add
add
inc
add
add
inc
add
add
inc
add
or
push
push
push
xor
add
or
push
push
inc
xor
add
add
inc
add
add
inc
add
add
inc
add
add
push
push
inc
add
add
inc
dec
inc
dec
push
inc
add
inc
add
push
push
push
push
push
push
inc
add
dec
dec
push
dec
push
dec
push
inc
add
add
push
inc
dec
push
dec
push
push
push
dec
add
or
dec
push
dec
push
push
push
dec
add
or
dec
push
inc
push
push
push
dec
add
or
dec
push
inc
push
push
push
dec
add
pop
dec
push
push
inc
inc
inc
push
add
add
add
push
push
inc
add
add
push
push
push
add
add
push
dec
dec
push
push
push
add
push
dec
dec
push
push
inc
add
dec
dec
push
inc
push
push
push
push
add
add
push
dec
dec
push
push
inc
add
inc
pop
push
push
inc
inc
push
push
push
add
push
push
inc
pop
push
push
push
add
push
inc
pop
push
push
inc
add
push
inc
pop
push
push
inc
add
push
inc
dec
inc
dec
inc
push
add
add
pop
inc
dec
inc
dec
inc
push
inc
add
add
pop
inc
dec
inc
dec
inc
push
push
add
add
pop
push
dec
push
dec
inc
push
inc
add
add
pop
push
dec
push
dec
inc
push
push
add
add
pop
push
dec
push
dec
inc
push
inc
add
add
pop
push
dec
push
dec
inc
push
push
add
add
or
dec
dec
dec
push
dec
push
push
push
add
push
dec
push
dec
dec
inc
add
push
dec
inc
pop
push
inc
add
push
dec
inc
pop
push
push
add
push
dec
inc
pop
push
inc
add
push
dec
inc
pop
push
inc
add
push
dec
dec
dec
push
inc
add
push
dec
dec
dec
push
push
add
push
dec
dec
dec
push
inc
add
push
dec
dec
dec
push
inc
add
push
inc
dec
push
inc
push
push
add
add
or
dec
push
pop
pop
inc
push
add
add
push
dec
dec
push
pop
pop
push
push
add
add
push
dec
dec
push
pop
pop
push
inc
add
add
push
dec
dec
push
pop
pop
inc
push
add
add
push
dec
dec
push
pop
pop
inc
inc
add
add
push
dec
dec
push
pop
pop
inc
push
add
add
push
inc
inc
dec
push
push
inc
push
add
add
dec
dec
push
dec
push
inc
push
inc
add
add
push
inc
dec
push
inc
push
push
add
add
push
push
dec
push
dec
inc
push
add
push
dec
dec
push
push
pop
inc
push
add
add
push
dec
dec
push
push
pop
push
push
add
add
push
dec
dec
push
push
pop
push
inc
add
add
push
dec
dec
push
push
pop
inc
push
add
add
push
dec
dec
push
push
pop
inc
inc
add
add
push
dec
dec
push
push
pop
inc
push
add
add
push
add
or
inc
dec
inc
push
push
inc
add
add
inc
dec
inc
dec
inc
push
push
push
add
add
push
inc
dec
inc
dec
inc
push
inc
add
add
inc
dec
dec
dec
push
inc
add
push
inc
dec
dec
dec
push
inc
add
add
or
push
push
inc
xor
add
add
inc
push
push
push
push
inc
xor
add
pop
dec
dec
push
dec
push
push
inc
add
add
or
push
push
dec
xor
add
add
dec
dec
push
inc
push
inc
add
dec
dec
push
dec
push
inc
add
push
dec
push
inc
dec
dec
push
inc
add
add
push
dec
push
inc
dec
dec
push
inc
add
add
dec
dec
push
dec
push
inc
add
dec
dec
push
push
push
inc
add
inc
add
add
dec
push
inc
add
add
inc
add
add
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
or
push
dec
dec
dec
push
push
add
add
push
push
inc
inc
inc
push
add
push
dec
inc
inc
inc
push
inc
add
add
pop
push
dec
push
dec
push
inc
push
add
add
add
pop
dec
push
add
add
push
dec
inc
pop
push
push
add
push
inc
inc
inc
push
push
add
push
inc
inc
inc
push
inc
add
push
dec
push
add
add
push
push
dec
dec
dec
push
push
add
push
push
push
inc
push
push
add
push
push
push
inc
push
inc
add
dec
dec
push
dec
push
push
add
push
dec
push
dec
dec
push
add
push
dec
push
dec
dec
push
push
add
add
add
push
add
add
inc
add
add
dec
add
push
push
dec
inc
pop
push
inc
add
push
inc
inc
inc
push
push
push
add
add
pop
push
inc
inc
inc
push
push
inc
add
add
add
inc
dec
inc
add
add
push
dec
dec
dec
push
inc
add
push
push
push
inc
push
push
push
add
add
pop
push
push
push
inc
push
push
inc
add
add
or
dec
push
dec
push
dec
inc
add
add
push
dec
push
dec
dec
push
add
push
add
add
push
add
pop
push
dec
push
push
push
push
push
add
add
pop
push
dec
push
push
push
dec
inc
add
add
or
push
pop
inc
dec
inc
xor
inc
add
inc
dec
push
pop
inc
dec
inc
cmp
add
push
dec
push
inc
push
push
add
push
inc
pop
push
push
push
add
push
dec
dec
push
push
push
add
dec
dec
push
dec
push
dec
add
push
push
add
inc
dec
push
add
add
add
inc
inc
inc
add
add
pop
add
add
push
add
add
add
inc
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
inc
dec
push
pop
inc
dec
inc
add
add
add
dec
push
dec
add
add
push
inc
inc
dec
inc
inc
add
dec
inc
inc
dec
inc
inc
add
dec
inc
inc
dec
inc
inc
add
inc
dec
inc
dec
push
push
dec
add
add
pop
push
push
dec
pop
inc
push
push
add
add
pop
dec
inc
dec
pop
inc
push
push
add
add
pop
inc
pop
push
push
push
dec
push
add
add
push
inc
pop
push
inc
push
inc
add
dec
push
inc
add
add
inc
push
push
add
add
add
dec
add
add
add
dec
dec
inc
add
add
inc
push
add
inc
add
add
inc
push
inc
add
add
inc
add
add
inc
add
add
inc
push
dec
add
add
push
add
add
inc
push
push
add
add
push
add
add
inc
push
push
add
add
inc
push
inc
add
add
inc
add
add
pop
add
add
inc
push
pop
add
add
inc
add
add
inc
push
inc
add
add
dec
add
add
inc
push
dec
add
add
dec
inc
add
dec
dec
inc
add
add
add
inc
add
add
add
add
dec
dec
push
add
add
add
add
dec
dec
push
add
add
add
add
dec
inc
add
dec
inc
inc
add
add
add
pop
add
add
add
add
dec
inc
inc
add
add
add
add
dec
dec
dec
add
add
add
add
push
dec
push
push
dec
push
inc
add
add
push
push
dec
push
inc
inc
inc
add
add
pop
push
inc
dec
push
inc
push
inc
add
add
pop
push
inc
dec
push
inc
push
push
add
add
pop
push
inc
dec
push
inc
push
inc
add
add
add
push
add
add
push
add
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
push
add
add
push
add
push
push
push
dec
push
inc
push
add
add
add
dec
push
inc
add
add
push
inc
inc
dec
push
push
inc
push
add
add
push
push
dec
push
inc
dec
dec
inc
push
add
or
dec
push
inc
dec
dec
push
inc
add
or
dec
push
inc
dec
dec
inc
push
add
or
inc
dec
push
push
push
inc
add
add
push
inc
dec
push
inc
push
inc
add
add
pop
push
inc
dec
push
inc
push
push
add
add
pop
push
inc
dec
push
inc
push
inc
add
add
or
inc
dec
push
push
push
inc
add
add
push
push
dec
push
inc
dec
dec
inc
push
add
or
dec
push
inc
dec
dec
push
inc
add
or
dec
push
inc
dec
dec
inc
push
add
add
push
add
add
push
add
add
push
add
add
push
add
or
push
inc
push
xor
add
add
inc
push
push
push
push
xor
add
add
push
add
add
push
add
add
push
add
add
push
push
push
add
add
inc
dec
inc
dec
push
push
add
push
add
add
push
add
pop
push
push
push
push
push
push
push
add
add
push
push
push
push
push
push
push
add
dec
dec
push
dec
push
dec
push
push
add
add
inc
add
push
inc
dec
dec
push
dec
inc
add
inc
dec
dec
push
inc
inc
add
dec
add
push
inc
dec
dec
push
dec
push
add
push
add
push
inc
dec
dec
push
dec
push
add
push
add
add
inc
add
push
inc
dec
dec
push
inc
inc
add
inc
dec
dec
push
dec
pop
add
pop
add
push
inc
dec
dec
push
inc
inc
add
inc
add
push
inc
dec
dec
push
dec
dec
add
dec
add
pop
push
inc
dec
dec
inc
dec
push
add
add
add
inc
add
add
push
add
add
inc
add
or
push
dec
dec
push
push
push
add
add
push
push
dec
inc
dec
inc
add
push
push
dec
inc
dec
push
add
push
push
dec
inc
dec
inc
add
push
dec
push
push
inc
push
push
add
add
push
push
dec
push
push
inc
inc
add
push
dec
push
push
inc
push
add
push
dec
inc
inc
inc
push
inc
push
push
add
pop
push
dec
inc
inc
inc
push
push
add
add
push
push
dec
inc
inc
inc
inc
add
push
dec
inc
inc
inc
push
add
push
push
dec
push
inc
inc
add
push
pop
push
inc
pop
dec
push
add
add
or
push
inc
dec
push
inc
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
push
inc
dec
dec
dec
push
push
add
push
inc
dec
dec
dec
push
push
add
add
or
push
push
push
xor
add
add
inc
push
push
push
push
push
xor
add
pop
dec
dec
push
dec
push
push
push
add
add
or
push
push
dec
xor
add
add
dec
dec
push
inc
push
push
add
dec
dec
push
add
add
or
inc
inc
inc
push
inc
dec
push
xor
or
inc
inc
inc
push
inc
dec
push
xor
or
inc
inc
inc
push
inc
dec
push
xor
or
inc
inc
inc
push
inc
dec
dec
push
inc
add
add
push
dec
dec
push
dec
push
push
add
dec
dec
push
dec
dec
push
push
add
add
or
push
inc
dec
dec
push
push
add
add
push
dec
push
inc
dec
dec
push
push
add
add
add
add
dec
dec
push
dec
push
push
add
dec
dec
push
dec
dec
push
push
add
add
push
dec
dec
push
push
push
push
add
push
inc
push
inc
push
push
inc
add
add
push
push
push
push
inc
push
inc
add
push
dec
push
dec
dec
push
push
add
add
or
push
inc
push
dec
push
xor
add
add
dec
add
pop
push
inc
inc
dec
push
inc
push
add
add
add
inc
add
push
push
inc
push
push
inc
push
add
push
inc
push
push
push
dec
push
xor
add
or
push
inc
push
dec
push
xor
add
add
pop
add
pop
push
inc
inc
dec
push
inc
push
add
add
add
inc
add
add
inc
add
pop
push
inc
push
push
push
push
push
add
add
add
push
add
add
dec
add
pop
push
inc
inc
dec
push
inc
inc
add
add
pop
push
inc
push
dec
inc
inc
inc
add
add
push
push
inc
dec
inc
inc
inc
add
inc
add
add
push
add
add
inc
add
add
push
add
add
push
add
or
inc
inc
inc
push
inc
dec
push
add
or
inc
inc
inc
push
inc
dec
add
add
push
inc
xor
add
add
push
inc
dec
dec
push
inc
add
dec
push
inc
add
add
push
pop
push
push
inc
push
add
dec
push
push
add
add
push
pop
push
inc
inc
dec
dec
add
add
add
add
add
add
add
add
push
push
inc
push
push
inc
push
add
push
push
inc
push
inc
push
add
dec
dec
push
dec
push
inc
inc
add
add
push
push
dec
dec
dec
dec
push
add
dec
inc
dec
add
add
push
inc
dec
add
add
push
dec
push
inc
push
inc
add
push
dec
dec
dec
inc
inc
add
push
dec
dec
inc
inc
dec
dec
add
add
add
dec
add
add
push
add
pop
dec
dec
dec
dec
push
dec
push
add
add
push
push
dec
pop
dec
inc
inc
add
push
dec
push
inc
push
push
dec
inc
add
add
push
dec
dec
inc
push
dec
inc
dec
add
add
push
dec
inc
inc
dec
dec
add
dec
dec
push
dec
push
inc
add
dec
push
push
add
add
dec
push
push
add
add
dec
inc
push
add
add
inc
inc
push
add
add
dec
inc
push
add
add
inc
inc
push
add
add
inc
push
push
add
add
inc
push
push
add
add
dec
push
push
add
add
add
dec
inc
push
add
add
push
push
push
add
add
add
dec
inc
push
add
add
dec
push
add
push
dec
push
add
add
add
push
push
dec
add
add
inc
inc
inc
add
add
cmp
add
jb
add
in
xchg
add
rcr
add
rcr
adc
add
rcr
adc
adc
sbb
adc
sbb
adc
jb
outs
and
outs
and
add
jbe
ins
imul
and
jae
je
outs
outs
add
(bad)
(bad)
jmp
add
add
int3
add
jb
add
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
add
add
add
arpl
loopne
add
add
add
add
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
loope
adc
xchg
add
test
int3
add
bound
and
arpl
je
outs
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
call
cmp
adc
arpl
gs
outs
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outs
fs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outs
add
add
add
add
add
add
jne
ins
add
add
add
add
outs
jne
ins
sub
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
arpl
add
inc
sub
push
push
inc
sub
add
add
push
dec
dec
inc
dec
inc
inc
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outs
ins
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outs
outs
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
ins
je
outs
data16
ins
ins
imul
dec
push
dec
dec
sub
imul
ins
jb
and
outs
arpl
outs
and
outs
ins
and
outs
popa
je
jbe
and
outs
jae
jb
arpl
and
and
outs
ins
and
dec
popa
imul
push
xor
xor
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
arpl
and
outs
jb
popa
je
outs
outs
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outs
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
push
push
jo
ins
imul
and
jae
jb
jno
gs
gs
and
outs
je
ins
and
je
jb
imul
je
imul
outs
jne
jne
ins
and
jns
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
jo
jb
and
je
ins
outs
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
or
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
inc
outs
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
inc
ins
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
and
and
arpl
jo
outs
jb
add
add
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
add
add
pusha
fs
popa
ins
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
ins
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
pusha
outs
ins
outs
imul
jae
addr16
add
and
gs
pop
pop
add
add
outs
gs
pop
add
pusha
ins
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
outs
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outs
jo
and
outs
jae
jb
arpl
and
outs
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
ins
and
jo
popa
arpl
outs
je
ins
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outs
addr16
add
add
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outs
data16
add
add
pusha
jbe
popa
ins
ins
daa
add
bound
ins
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outs
gs
add
add
jne
popa
ins
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
ins
ins
add
add
popaw
jae
arpl
ins
add
pop
pop
je
imul
add
jae
arpl
ins
add
add
jo
jae
popa
ins
add
add
pop
pop
arpl
ins
add
bound
gs
add
add
mov
adc
mov
adc
mov
adc
add
pushf
mov
adc
mov
adc
adc
add
leave
xchg
add
mov
mov
adc
mov
adc
adc
add
pusha
mov
adc
mov
adc
add
push
mov
adc
add
dec
mov
adc
add
cmp
add
cmp
add
xor
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
add
add
clc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
lea
adc
add
or
adc
add
inc
lea
adc
lea
adc
lea
adc
mov
adc
mov
adc
add
pop
mov
adc
add
adc
add
clc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
push
mov
adc
mov
adc
mov
adc
mov
adc
add
mov
adc
add
adc
add
call
mov
adc
xchg
add
push
add
add
add
adc
add
test
xor
or
sub
cmp
add
add
xor
push
push
mov
add
and
or
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
inc
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
je
jae
jb
bound
arpl
outs
jb
popa
je
outs
outs
inc
add
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
inc
push
xor
cs
dec
dec
add
push
jne
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
dec
dec
push
push
and
bound
and
ins
outs
arpl
imul
add
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
add
add
push
inc
push
push
pop
push
inc
jb
ins
push
xor
push
cmp
add
push
jne
dec
dec
jo
inc
cmp
pop
push
add
jns
inc
inc
jp
add
add
push
jns
pop
dec
jne
pop
push
add
xor
cmp
outs
imul
push
add
jns
inc
inc
jp
ins
push
xor
push
cmp
add
cmp
push
jne
pop
push
add
jns
inc
inc
jp
ins
push
xor
push
inc
jno
jp
cmp
push
inc
fs
push
push
cmp
ins
push
xor
push
cmp
add
inc
bound
push
jb
jbe
ins
gs
add
push
jns
dec
outs
imul
add
add
gs
xor
fs
ins
add
inc
outs
fs
popa
jae
add
ins
imul
outs
arpl
jae
add
add
jb
gs
xor
cs
ins
add
add
inc
bound
inc
arpl
gs
jb
arpl
jae
add
imul
jae
dec
gs
outs
jb
add
inc
jb
popa
je
push
jb
arpl
jae
add
inc
jb
popa
je
push
jb
arpl
jae
add
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
add
inc
outs
jne
push
jb
arpl
jae
jae
add
push
jae
jo
cs
ins
add
add
jne
push
jb
arpl
jae
outs
fs
gs
add
push
jne
jb
push
jns
je
ins
dec
outs
outs
jb
popa
je
outs
outs
add
add
dec
je
ins
ins
cs
ins
add
add
arpl
cmp
and
and
add
push
outs
popa
bound
je
and
ins
outs
arpl
and
ins
jo
ins
imul
outs
jb
and
add
dec
outs
and
ins
jo
ins
imul
arpl
popa
jbe
imul
add
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
xchg
add
inc
sbb
adc
add
cmp
rol
adc
sbb
adc
add
rcr
adc
sbb
adc
add
inc
and
add
sbb
add
pusha
aaa
add
test
add
int3
and
add
add
add
enter
rcl
add
and
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
add
add
add
add
adc
add
push
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
jl
add
dec
xchg
add
add
add
pop
xchg
add
pushf
xchg
add
push
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
add
add
add
add
add
xchg
xchg
add
push
add
add
adc
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
xchg
add
cwde
aaa
add
int3
xchg
add
add
add
fcom
add
xor
add
cwde
aaa
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
xchg
add
mov
xchg
add
add
add
sub
add
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
fdiv
add
pusha
xchg
add
add
add
jo
add
adc
adc
add
add
add
fdiv
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
xchg
add
sbb
add
mov
add
add
add
rcl
adc
add
push
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
cld
aaa
add
add
add
add
add
add
add
adc
add
push
add
add
aaa
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
(bad)
add
push
xlat
add
rol
add
adc
add
dec
add
push
push
add
mov
push
add
adc
add
push
add
pop
push
add
mov
add
push
add
jecxz
add
sbb
add
add
js
add
mov
add
call
pop
add
push
pop
add
ficomp
add
pop
add
(bad)
(bad)
(bad)
jmp
add
and
add
mov
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
int
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
rol
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
jae
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
adc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
loope
adc
add
add
loopne
adc
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
loope
adc
loope
adc
add
enter
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cwde
add
and
add
add
add
add
add
adc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
in
adc
add
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
in
adc
in
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
out
adc
add
add
add
add
cdq
add
add
add
rcr
add
add
add
pushf
daa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ss
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
test
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
stc
add
(bad)
(bad)
(bad)
inc
add
add
stc
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sbb
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sbb
adc
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
adc
sbb
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
fsub
add
loopne
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sub
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
aaa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
add
pop
cmp
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
cmp
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
pusha
aaa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
add
add
add
jl
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
adc
add
add
popf
add
add
add
add
add
add
add
add
add
cmp
add
add
add
fdiv
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
aaa
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
adc
add
add
add
je
add
add
add
add
add
pusha
sbb
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
add
je
add
add
add
add
add
pusha
sbb
adc
add
add
popf
add
add
add
add
add
add
add
pop
int3
add
add
add
in
popf
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
lahf
pop
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
and
add
add
add
add
add
inc
sahf
add
add
add
(bad)
(bad)
(bad)
inc
push
add
and
add
nop
sahf
add
add
add
(bad)
(bad)
(bad)
inc
push
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
add
add
add
add
add
add
add
sahf
add
and
add
mov
add
add
sahf
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
(bad)
aas
add
inc
add
add
aas
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
dec
lahf
add
and
add
sbb
add
add
add
pop
lahf
add
add
add
(bad)
(bad)
(bad)
call
add
and
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
aam
add
add
add
(bad)
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sub
xchg
sbb
mov
add
cmp
add
add
add
(bad)
(bad)
(bad)
push
push
add
add
add
adc
adc
add
add
add
add
add
push
push
add
add
add
js
add
add
add
call
add
(bad)
(bad)
ficom
adc
add
add
push
add
or
add
es
add
or
add
dec
push
add
or
add
je
add
or
add
cwde
push
add
or
add
mov
add
add
jo
add
add
add
(bad)
(bad)
(bad)
call
pop
add
and
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
and
add
xor
add
add
add
(bad)
(bad)
(bad)
push
add
and
add
pop
mov
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
cmp
adc
add
out
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
and
add
mov
add
fsub
add
add
add
(bad)
(bad)
(bad)
jmp
pop
add
and
add
and
add
add
add
(bad)
(bad)
(bad)
call
pop
add
add
add
sbb
adc
add
add
push
mov
add
add
add
(bad)
(bad)
(bad)
jmp
add
and
add
test
add
add
add
(bad)
(bad)
(bad)
call
add
add
mov
add
add
add
(bad)
(bad)
(bad)
push
add
add
add
add
pop
add
add
add
int
add
(bad)
(bad)
(bad)
call
pop
add
and
add
fsub
add
add
add
(bad)
(bad)
(bad)
inc
pop
add
add
add
add
add
add
pop
add
and
add
sub
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
bound
adc
add
add
(bad)
jmp
add
add
(bad)
(bad)
(bad)
mov
add
add
pop
add
(bad)
(bad)
(bad)
call
pop
add
pop
add
add
pop
add
(bad)
(bad)
(bad)
(bad)
call
add
add
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
pop
add
or
add
or
adc
(bad)
(bad)
call
add
or
pop
add
(bad)
(bad)
(bad)
jmp
pop
add
sldt
add
(bad)
(bad)
inc
add
adc
add
dec
pop
add
(bad)
(bad)
(bad)
call
add
adc
add
popa
pop
add
(bad)
(bad)
(bad)
jmp
adc
pop
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
add
add
pop
add
and
add
push
add
add
add
add
add
movs
cmps
add
pop
popa
add
pop
cmps
add
shl
add
add
adc
add
or
add
add
add
mov
add
pusha
cmps
add
hlt
test
add
add
clc
movs
add
inc
test
add
adc
add
add
add
add
add
mov
lods
add
xchg
lods
add
sbb
add
sub
add
dec
cmps
add
pop
cmps
add
push
add
js
add
mov
add
ret
add
cmps
add
out
cmps
add
(bad)
cmps
add
push
test
add
add
cmp
add
data16
add
add
lods
add
lods
add
push
lods
add
inc
lods
add
mov
add
into
stos
add
xor
add
je
add
mov
add
mov
test
add
hlt
test
add
and
add
cmp
add
pop
stos
add
jbe
add
mov
add
cmps
stos
add
mov
stos
add
in
stos
add
cld
stos
add
or
add
sbb
add
cmp
add
push
stos
add
pop
stos
add
outs
stos
add
jp
add
mov
add
movs
stos
add
mov
add
mov
stos
add
loopne
add
out
stos
add
add
add
lods
add
dec
lods
add
data16
add
sub
stos
lods
add
mov
lods
add
fsubr
add
lods
add
or
add
xchg
cmps
add
add
add
scas
cmps
add
add
add
into
test
add
test
add
test
add
add
add
cmps
add
cld
cmps
add
repnz
add
(bad)
cmps
add
int3
cmps
add
push
test
add
push
add
jne
push
jb
arpl
jae
jae
push
push
inc
push
dec
cs
dec
dec
add
push
je
imul
add
push
dec
dec
push
inc
push
dec
cs
ins
add
add
gs
arpl
add
inc
dec
je
jne
jb
push
jns
je
ins
dec
outs
outs
jb
popa
je
outs
outs
add
hlt
add
gs
jae
je
add
add
gs
arpl
add
scas
add
popa
jne
ins
jae
jb
add
fs
ins
cs
ins
add
ins
jae
jb
ins
jo
add
bound
inc
jb
gs
imul
rol
gs
jne
jb
outs
je
jb
arpl
jae
xchg
add
outs
arpl
jae
xor
jb
je
add
add
imul
jb
add
outs
push
jb
arpl
jae
rol
jb
imul
outs
arpl
jae
add
ins
jae
jb
ins
jo
add
pop
add
jne
push
jb
arpl
outs
inc
popa
arpl
add
inc
gs
jb
arpl
fs
jae
add
jmp
je
popa
ins
inc
ins
ins
outs
arpl
add
add
popa
bound
push
dec
imul
popa
ins
ins
jae
cmp
dec
outs
popa
fs
imul
add
xchg
add
outs
arpl
jae
xor
js
add
add
je
outs
fs
gs
imul
add
adc
dec
outs
fs
gs
popa
outs
fs
gs
add
out
add
imul
jb
je
arpl
mov
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
push
add
outs
jae
dec
popa
outs
fs
gs
add
je
jne
jb
outs
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
ins
add
test
push
imul
retf
gs
imul
js
inc
add
add
push
outs
push
imul
outs
outs
imul
into
add
je
imul
outs
outs
imul
add
inc
popa
ins
ins
dec
gs
dec
outs
outs
imul
add
inc
push
xor
cs
ins
add
test
push
jb
arpl
jae
outs
imul
add
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
push
jae
push
outs
imul
jb
jbe
ins
gs
inc
inc
push
inc
push
dec
xor
cs
ins
add
push
add
ins
push
outs
ja
outs
add
add
inc
push
dec
jne
je
inc
jns
gs
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
add
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
je
jb
outs
arpl
fs
js
push
add
dec
jne
je
inc
jns
gs
outs
push
imul
mov
push
ins
gs
loop
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
add
add
gs
inc
jb
je
arpl
push
arpl
outs
add
add
je
jb
jb
je
arpl
push
arpl
outs
add
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
rol
fs
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outs
je
add
inc
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jo
jb
add
lds
inc
gs
jne
jb
outs
je
push
dec
add
xchg
inc
gs
outs
ins
ins
popa
outs
fs
imul
push
popa
imul
jo
imul
inc
gs
push
dec
outs
outs
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
popa
jo
ins
ins
outs
arpl
sbb
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
mov
je
popa
ins
jne
add
add
ins
jae
ins
ins
outs
arpl
add
add
ins
jae
gs
popa
ins
jne
add
add
ins
jae
jb
add
push
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jo
imul
inc
js
je
jb
arpl
jae
int
dec
gs
jo
jb
popa
je
add
into
add
popa
jo
gs
jb
jns
rol
dec
gs
jo
gs
ins
ins
outs
arpl
and
je
inc
imul
je
je
dec
popa
outs
fs
add
outs
add
gs
popa
outs
fs
gs
outs
jne
je
add
add
je
imul
bound
inc
gs
je
jb
jne
dec
outs
outs
inc
add
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
cmps
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
xchg
add
je
imul
je
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
gs
je
imul
inc
add
imul
je
imul
push
add
push
inc
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
ins
imul
add
add
je
outs
arpl
gs
outs
outs
inc
add
jecxz
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
data16
gs
imul
gs
add
inc
outs
outs
jae
ins
gs
push
add
lods
add
je
outs
outs
jae
ins
gs
outs
fs
mov
inc
jb
popa
je
inc
imul
gs
je
dec
popa
outs
fs
add
push
add
jne
push
inc
jne
data16
add
sbb
gs
outs
outs
jae
ins
gs
add
inc
outs
outs
jae
ins
gs
jne
jo
je
push
add
and
push
jb
je
inc
outs
outs
jae
ins
gs
add
add
add
scas
add
add
add
add
add
add
add
clc
lods
add
add
add
adc
add
sub
add
sub
add
scas
add
sub
add
add
add
add
jo
jo
xor
cs
ins
add
gs
arpl
je
jb
gs
arpl
je
outs
popa
arpl
add
add
add
add
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
and
xor
and
xor
add
xor
cmp
and
popa
add
xor
arpl
and
add
xor
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
ss
add
cmp
and
cmp
and
popa
add
bound
and
arpl
and
add
ss
data16
aaa
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
aaa
aaa
add
aaa
cmp
and
cmp
and
popa
add
aaa
bound
and
arpl
and
add
aaa
add
aaa
data16
cmp
add
cmp
add
cmp
add
cmp
add
cmp
and
xor
add
cmp
add
cmp
add
cmp
add
cmp
and
bound
and
arpl
and
add
cmp
and
data16
cmp
add
cmp
add
cmp
add
cmp
add
cmp
and
xor
add
cmp
add
cmp
add
cmp
add
cmp
and
bound
and
arpl
and
add
cmp
and
data16
popa
xor
and
add
popa
xor
and
add
popa
xor
and
add
popa
add
popa
aaa
add
popa
cmp
and
add
popa
popa
add
popa
bound
and
add
popa
add
popa
add
popa
data16
bound
add
bound
add
bound
add
bound
add
bound
and
add
bound
add
bound
add
bound
add
bound
add
bound
and
add
bound
and
add
bound
and
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
and
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
and
add
arpl
and
add
arpl
and
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
xor
and
add
xor
and
add
gs
add
gs
add
cmp
and
add
gs
add
bound
and
add
gs
gs
data16
data16
and
add
data16
and
add
data16
and
add
data16
data16
add
data16
and
add
popaw
add
bound
and
add
data16
data16
data16
xor
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
js
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
ss
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
aaa
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
cmp
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
cmp
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
popa
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
bound
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
arpl
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
fs
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
gs
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
data16
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
popa
bound
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
dec
inc
add
add
add
add
dec
dec
push
inc
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
xor
add
add
inc
push
xor
add
add
add
add
inc
push
xor
add
add
add
add
inc
push
xor
add
add
inc
push
cmp
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
push
push
add
add
add
add
add
inc
push
add
add
add
add
add
inc
push
add
add
add
add
add
inc
push
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
push
dec
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
inc
pop
add
add
add
add
add
inc
pop
add
add
add
add
add
inc
pop
add
add
add
add
add
push
push
add
add
add
add
add
inc
push
add
add
add
add
add
push
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
add
add
add
add
aaa
add
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
pop
dec
dec
add
add
add
add
pop
dec
dec
aaa
add
add
add
add
pop
dec
dec
cmp
add
add
add
pop
dec
dec
cmp
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
pop
sub
add
push
add
add
pop
sub
add
add
add
push
sub
add
push
add
add
push
sub
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
push
push
add
add
add
add
pop
inc
inc
push
add
add
add
add
pop
inc
push
dec
add
add
add
add
pop
inc
inc
dec
add
add
add
add
pop
push
cmp
add
add
add
pop
push
cmp
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
add
add
push
xor
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
push
push
add
add
add
add
pop
push
inc
push
add
add
add
add
pop
push
push
dec
add
add
add
add
pop
push
inc
dec
add
add
add
add
pop
push
cmp
add
add
add
add
pop
push
cmp
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
pop
push
xor
add
add
inc
inc
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
xor
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
add
add
js
add
push
add
push
inc
pop
push
inc
and
inc
push
push
dec
push
inc
and
add
inc
push
dec
push
inc
and
add
dec
push
inc
and
add
push
inc
and
add
dec
push
inc
and
dec
dec
inc
dec
and
add
push
inc
push
and
add
add
push
dec
pop
and
add
add
push
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
dec
dec
push
push
and
add
inc
dec
dec
and
add
inc
inc
and
add
dec
push
add
add
add
or
cmp
add
add
add
add
adc
xor
adc
add
pop
add
sub
adc
bound
adc
add
add
add
bound
adc
add
add
or
inc
inc
bound
adc
add
add
add
andps
adc
add
add
add
adc
adc
add
add
add
pop
push
ja
adc
add
add
add
or
adc
add
add
add
and
adc
add
add
add
and
ja
adc
add
add
add
and
adc
add
add
add
and
adc
add
add
add
cmovo
adc
add
add
add
adc
add
adc
add
add
sysret
inc
ja
adc
add
add
add
or
add
adc
add
add
add
inc
ja
adc
add
add
add
and
ja
adc
add
add
add
and
adc
add
adc
ja
adc
add
add
add
adc
ja
adc
add
add
add
adc
ja
adc
add
add
add
adc
ja
adc
add
add
add
adc
ja
adc
add
add
add
adc
ja
adc
add
add
add
sub
ja
adc
add
add
add
sub
ja
adc
add
add
add
sub
jbe
adc
add
add
add
sub
jbe
adc
add
add
add
sbb
add
add
add
add
loopne
add
add
add
add
add
fdiv
adc
add
add
push
add
shl
adc
add
add
push
add
les
adc
add
add
push
add
mov
add
add
push
add
mov
add
or
add
add
add
movs
jbe
adc
add
add
add
add
add
add
add
xchg
jbe
adc
add
add
sldt
mov
adc
add
add
(bad)
cmp
add
add
(bad)
cmp
add
or
add
add
add
jo
add
or
add
add
add
push
add
add
(bad)
cmp
add
or
add
add
cmp
push
jbe
adc
add
add
add
add
adc
add
or
add
add
adc
add
or
add
or
add
add
add
add
adc
xor
add
add
add
add
add
sub
adc
add
add
add
add
jbe
adc
add
add
add
add
jbe
adc
add
add
add
add
jbe
adc
add
add
add
add
jbe
adc
add
add
add
add
jbe
adc
add
add
or
sub
jne
adc
add
add
or
sub
jne
adc
add
add
or
add
jne
adc
add
add
or
add
or
and
add
inc
shl
adc
add
add
or
add
or
and
add
inc
shl
or
and
add
add
or
and
add
add
or
and
add
inc
mov
add
add
or
inc
cwde
jne
adc
add
add
or
inc
nop
jne
adc
add
add
or
inc
test
adc
add
add
or
inc
jl
add
or
and
add
inc
je
add
or
and
add
inc
push
add
add
or
inc
pusha
jne
adc
add
add
or
inc
push
jne
adc
add
add
or
inc
dec
jne
adc
add
add
or
inc
inc
jne
adc
add
add
or
inc
cmp
adc
add
add
or
inc
sub
add
or
and
add
inc
and
add
or
and
add
inc
sbb
adc
add
add
or
inc
or
add
or
and
add
add
or
and
add
inc
clc
je
adc
add
add
add
add
or
add
add
add
or
add
add
add
or
or
add
fdiv
fdiv
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
lods
je
adc
je
adc
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
sbb
adc
add
add
add
push
jo
add
or
adc
add
pop
push
jo
add
or
adc
add
push
push
jo
add
or
adc
add
push
pop
jo
add
or
adc
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
sbb
add
or
add
add
add
adc
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
clc
jae
adc
add
add
jae
adc
add
inc
in
add
or
add
add
inc
inc
fdiv
adc
add
add
or
aam
add
or
add
add
inc
inc
enter
or
add
add
inc
inc
mov
add
add
or
mov
add
or
add
add
inc
inc
lods
jae
adc
add
add
or
mov
add
add
or
cwde
jae
adc
add
add
or
nop
jae
adc
add
add
or
mov
adc
add
add
or
jl
add
or
add
add
inc
inc
je
add
or
add
add
inc
inc
ins
jae
adc
add
add
or
fs
adc
add
add
or
pop
jae
adc
add
add
add
je
adc
je
adc
add
add
or
add
or
add
add
adc
dec
jae
adc
add
add
add
or
add
or
add
add
adc
cmp
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jae
adc
add
add
add
or
jb
adc
add
add
add
or
jb
adc
add
add
add
or
jb
adc
add
add
add
or
jb
adc
add
add
add
or
jb
adc
add
add
add
add
or
adc
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
je
add
or
add
add
dec
inc
push
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
inc
cmp
add
or
add
add
inc
xor
adc
add
add
add
inc
and
add
or
add
add
inc
sbb
adc
add
add
add
inc
or
add
or
add
add
inc
add
adc
add
add
add
inc
hlt
jno
adc
add
add
add
inc
call
add
add
add
inc
fdiv
adc
add
add
add
inc
shl
adc
add
add
add
inc
les
adc
add
add
add
inc
mov
add
add
add
inc
mov
add
or
add
add
fdiv
test
add
add
add
inc
test
add
or
add
add
add
or
add
add
fdiv
fdiv
add
add
inc
cwde
jno
adc
add
add
add
inc
nop
jno
adc
add
add
add
inc
mov
adc
add
add
add
inc
xor
or
adc
add
inc
js
add
or
adc
add
inc
jo
add
or
adc
add
inc
push
add
add
add
inc
pusha
jno
adc
add
add
add
inc
push
jno
adc
add
add
add
inc
dec
jno
adc
add
add
add
inc
cmp
add
or
add
add
add
add
or
add
add
or
sub
add
or
add
add
adc
jno
adc
add
add
add
adc
add
pop
add
fdiv
test
add
add
add
inc
test
add
or
add
add
add
sbb
add
or
add
add
add
adc
add
or
add
add
add
adc
adc
add
add
add
sub
jno
adc
add
add
add
sub
add
or
add
add
add
cld
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
(bad)
jo
adc
add
add
add
cmpxchg
adc
add
add
add
push
jo
adc
add
add
add
push
jo
adc
add
add
add
sets
adc
add
add
add
seto
adc
add
add
add
js
add
add
add
jo
add
add
add
vmread
adc
add
add
add
pshufw
or
add
add
add
push
add
add
add
punpcklbw
adc
add
add
add
addps
adc
add
add
add
(bad)
jo
adc
add
add
add
cmovs
adc
add
add
add
cmovo
adc
add
add
add
and
adc
or
add
add
and
adc
or
add
add
add
jo
adc
add
add
add
adc
add
or
add
add
or
sub
add
or
add
add
fdiv
fdiv
add
add
or
sub
add
or
add
xor
fdiv
fdiv
add
add
add
dec
ja
adc
adc
add
add
and
adc
adc
add
add
add
add
or
add
add
or
sbb
add
sbb
add
add
or
adc
add
or
add
add
fdiv
fdiv
add
add
or
adc
add
or
add
xor
fdiv
fdiv
add
add
add
or
add
or
add
add
add
add
adc
add
add
add
sub
outs
add
or
add
add
add
call
add
add
add
sub
outs
add
or
add
add
add
aam
add
or
add
add
add
int3
outs
add
or
add
add
add
les
adc
add
add
add
or
add
add
pop
cmpxchg
adc
add
add
add
adc
add
add
add
or
add
add
add
adc
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
jbe
adc
add
add
add
adc
add
or
add
add
add
sbb
add
sbb
add
add
add
mov
add
add
add
adc
add
add
add
adc
add
add
add
or
add
or
add
add
adc
jo
add
or
add
add
wbinvd
push
add
add
add
or
add
or
add
add
pop
punpcklbw
adc
add
add
add
adc
add
sbb
add
add
add
or
inc
add
add
adc
je
adc
add
push
or
dec
outs
add
or
add
add
add
or
add
add
fdiv
fdiv
add
add
add
or
adc
add
fdiv
fdiv
add
add
add
or
add
add
fdiv
fdiv
add
add
add
sub
adc
add
pop
add
fdiv
sbb
add
add
add
add
adc
adc
add
add
push
add
add
add
or
add
add
add
or
add
add
inc
cwde
jno
adc
add
add
add
inc
xor
or
add
add
inc
push
add
add
push
dec
inc
hlt
outs
add
or
add
add
inc
in
outs
add
or
add
add
add
or
adc
add
inc
aam
add
or
add
add
inc
enter
or
add
add
add
or
add
add
inc
mov
add
add
add
inc
lods
outs
add
or
add
add
inc
mov
add
add
add
add
or
add
add
inc
nop
outs
add
or
add
add
add
or
add
add
inc
nop
jno
adc
add
add
add
inc
js
add
or
add
add
add
or
add
add
add
or
add
add
inc
ins
outs
add
or
add
add
add
or
add
add
inc
pop
outs
add
or
add
add
inc
push
outs
add
or
add
add
add
or
add
add
inc
inc
outs
add
or
add
add
inc
cmp
add
or
add
add
inc
xor
add
or
add
add
add
or
add
add
inc
and
add
or
add
add
inc
mov
adc
add
add
add
inc
jo
add
or
add
add
inc
pusha
jno
adc
add
add
push
inc
inc
sbb
adc
add
add
add
inc
or
add
or
add
add
add
or
add
add
add
or
adc
add
inc
lock
add
or
add
add
inc
call
add
add
add
inc
loopne
add
or
add
add
inc
inc
fsubr
adc
add
add
add
inc
shr
adc
add
add
add
inc
enter
or
add
add
inc
shr
or
add
add
pop
(bad)
ins
add
adc
add
add
or
mov
add
add
add
pop
mov
add
add
add
or
add
add
add
and
add
add
add
and
ins
add
add
add
add
add
dec
ja
adc
add
and
adc
add
cmpxchg
adc
add
add
add
adc
add
add
add
pop
mov
add
adc
add
add
adc
mov
add
adc
add
add
add
mov
add
add
add
add
add
ins
add
add
add
add
add
dec
ja
adc
add
and
adc
add
push
ins
add
adc
add
add
or
test
add
adc
add
add
sysret
test
add
adc
add
add
adc
test
add
adc
add
add
add
test
add
add
add
add
add
ins
add
add
add
add
add
mov
add
sets
adc
add
add
add
adc
add
add
add
pop
cwde
ins
add
adc
add
add
adc
cwde
ins
add
adc
add
add
add
cwde
ins
add
add
add
add
add
ins
add
add
add
add
add
nop
ins
add
add
add
add
js
add
add
add
adc
add
add
add
pop
mov
adc
add
add
add
or
add
add
add
and
add
add
add
and
ins
add
add
add
add
add
sub
add
add
add
addps
adc
add
add
add
adc
add
add
add
add
sysret
pop
outs
add
add
add
add
adc
pop
outs
add
add
add
add
add
pop
outs
add
add
add
add
add
outs
add
add
add
add
add
js
add
add
add
add
ss
add
add
add
add
ss
add
ss
ja
adc
add
add
add
ss
ja
adc
add
add
add
add
add
add
add
pop
ins
add
add
sub
push
ins
add
add
add
add
adc
add
add
add
add
dec
inc
dec
ins
add
or
add
add
inc
dec
dec
ins
add
or
add
add
cs
inc
ins
add
or
add
add
inc
cs
ins
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
adc
add
add
push
cs
and
adc
add
add
push
inc
and
adc
add
add
push
dec
inc
sbb
adc
add
add
push
inc
dec
sbb
adc
add
add
push
inc
inc
or
add
or
add
add
inc
das
add
adc
add
add
push
dec
inc
hlt
ins
add
or
add
add
dec
inc
call
add
add
push
dec
inc
fsubr
or
add
add
dec
inc
aam
add
or
add
add
dec
inc
in
add
or
add
add
dec
inc
fdiv
adc
add
add
or
aam
add
or
add
add
dec
inc
enter
or
add
add
dec
inc
mov
add
add
or
mov
add
or
add
add
dec
inc
lods
jae
adc
add
add
or
mov
add
add
or
cwde
jae
adc
add
add
or
nop
jae
adc
add
add
or
mov
adc
add
add
or
jl
add
or
add
add
dec
inc
enter
or
add
dec
add
je
adc
je
adc
add
or
mov
add
add
fdiv
fdiv
add
add
dec
inc
mov
add
or
add
dec
add
je
adc
je
adc
add
or
test
add
or
add
add
dec
inc
je
add
or
add
add
dec
inc
ins
jae
adc
add
add
or
fs
adc
add
add
or
pushf
ins
add
or
add
add
inc
inc
nop
ins
add
or
add
add
inc
inc
test
or
add
add
dec
inc
js
add
or
add
add
inc
inc
ins
ins
add
or
add
add
dec
inc
pusha
ins
add
or
add
add
dec
inc
pop
ins
add
or
add
add
dec
inc
dec
ins
add
or
add
add
das
inc
inc
ins
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
or
add
add
inc
inc
sbb
add
or
add
add
inc
inc
adc
or
add
add
dec
inc
add
add
or
add
add
inc
inc
clc
imul
or
add
add
dec
inc
in
imul
or
add
add
dec
inc
loopne
add
or
add
add
dec
inc
fsubr
adc
add
add
or
shr
adc
add
add
or
enter
or
add
add
dec
inc
shr
or
add
add
dec
inc
mov
add
add
or
mov
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
mov
add
add
or
cwde
imul
or
add
add
dec
inc
mov
adc
add
add
or
sub
or
add
add
fdiv
fdiv
add
add
dec
inc
je
add
or
add
add
fdiv
fdiv
add
add
inc
inc
push
add
add
add
je
adc
je
adc
add
or
pop
imul
or
add
add
fdiv
fdiv
add
add
dec
inc
push
imul
or
add
add
fdiv
fdiv
add
add
dec
inc
inc
imul
or
add
add
fdiv
fdiv
add
add
dec
inc
cmp
adc
add
add
add
je
adc
je
adc
add
or
pop
jae
adc
add
add
add
je
adc
je
adc
add
or
imul
or
add
add
fdiv
fdiv
add
add
inc
sbb
outs
add
or
add
add
fdiv
fdiv
add
add
inc
adc
imul
or
add
add
je
adc
imul
add
add
inc
adc
add
or
add
add
fdiv
fdiv
add
add
sbb
add
or
add
add
fdiv
fdiv
add
add
inc
inc
add
adc
add
add
add
je
adc
je
adc
add
or
inc
clc
push
adc
add
add
add
je
adc
push
adc
add
or
call
add
add
add
je
adc
je
adc
add
or
loopne
add
or
add
add
fdiv
fdiv
add
add
dec
inc
aam
add
or
add
add
fdiv
fdiv
add
add
dec
inc
enter
or
add
add
fdiv
fdiv
add
add
dec
inc
mov
add
add
add
je
adc
je
adc
add
or
mov
add
or
add
add
fdiv
fdiv
add
add
dec
inc
movs
push
adc
add
add
add
je
adc
je
adc
add
push
inc
or
add
add
push
dec
inc
nop
push
adc
add
add
push
dec
inc
mov
adc
add
add
push
dec
inc
sub
or
add
add
dec
inc
js
add
or
add
add
dec
inc
jo
add
or
add
add
dec
inc
push
add
add
push
dec
inc
pusha
push
adc
add
add
push
dec
inc
push
push
adc
add
add
push
dec
inc
dec
push
adc
add
add
push
dec
inc
inc
push
adc
add
add
push
dec
inc
cmp
adc
add
add
push
dec
inc
xor
adc
add
add
push
dec
inc
sub
adc
add
add
push
dec
inc
cmp
add
or
add
add
dec
inc
xor
adc
add
add
push
dec
inc
and
add
or
add
add
dec
inc
sbb
adc
add
add
push
dec
inc
or
add
or
add
add
dec
inc
add
adc
add
add
push
dec
inc
hlt
jno
adc
add
add
push
dec
inc
call
add
add
push
dec
inc
fdiv
adc
add
add
push
dec
inc
shl
adc
add
add
push
dec
inc
les
adc
add
add
push
dec
inc
mov
add
add
push
dec
inc
sbb
add
or
add
add
dec
inc
adc
adc
add
add
push
adc
add
or
add
add
fdiv
test
add
add
add
dec
inc
or
adc
add
add
push
dec
inc
add
adc
add
add
add
je
adc
je
adc
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
jno
adc
add
add
push
add
imul
add
push
add
jno
adc
add
add
push
add
imul
add
push
dec
inc
push
jno
adc
add
add
push
dec
inc
dec
jno
adc
add
add
push
dec
inc
cmp
add
or
add
add
add
imul
add
add
je
adc
je
adc
add
or
call
add
add
pop
dec
inc
loopne
add
or
add
add
dec
inc
fsubr
adc
add
add
push
inc
adc
add
pop
add
fdiv
test
add
add
add
inc
dec
or
adc
add
add
push
dec
inc
pop
outs
add
or
inc
add
add
imul
adc
add
push
sbb
add
or
add
add
fdiv
fdiv
add
add
inc
or
add
or
adc
add
fdiv
fdiv
add
add
dec
inc
int3
imul
add
add
je
adc
je
adc
add
push
add
shr
or
add
add
dec
inc
mov
add
or
add
add
dec
inc
cwde
jno
adc
add
add
push
dec
inc
xor
or
add
add
dec
inc
push
add
add
push
dec
inc
hlt
outs
add
or
add
add
dec
inc
in
outs
add
or
add
add
inc
dec
test
add
or
add
add
inc
or
outs
add
or
adc
add
dec
inc
aam
add
or
add
add
dec
inc
enter
or
add
add
dec
inc
shr
or
add
add
dec
inc
mov
add
add
push
dec
inc
lods
outs
add
or
add
add
dec
inc
mov
add
add
push
dec
inc
cwde
outs
add
or
add
add
dec
inc
nop
outs
add
or
add
add
dec
inc
mov
adc
add
add
push
dec
inc
nop
jno
adc
add
add
push
dec
inc
js
add
or
add
add
dec
inc
sub
or
add
add
dec
inc
je
add
or
add
add
dec
inc
ins
outs
add
or
add
add
dec
inc
test
add
or
add
add
inc
das
pushf
imul
add
push
dec
inc
pop
outs
add
or
add
add
dec
inc
push
outs
add
or
add
add
dec
inc
dec
outs
add
or
add
add
dec
inc
inc
outs
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
and
add
or
add
add
dec
inc
mov
adc
add
add
push
dec
inc
jo
add
or
add
add
dec
inc
pusha
jno
adc
add
add
push
dec
inc
sbb
adc
add
add
push
dec
inc
or
add
or
add
add
dec
inc
add
add
or
add
add
inc
inc
nop
imul
add
push
dec
inc
lock
add
or
add
add
dec
inc
call
add
add
push
dec
inc
loopne
add
or
add
add
dec
inc
fsubr
adc
add
add
push
dec
inc
shr
adc
add
add
push
dec
inc
enter
or
add
add
dec
inc
shr
or
add
add
add
dec
ja
adc
add
add
add
or
add
add
fdiv
fdiv
add
add
add
dec
ja
adc
and
add
add
or
add
add
fdiv
fdiv
add
add
cmp
mov
adc
add
add
cmp
mov
adc
add
add
cmp
add
add
add
cmp
add
add
add
sub
add
add
add
add
add
adc
add
add
add
add
add
adc
adc
add
add
add
sub
jno
adc
add
add
add
sub
add
add
add
add
add
cld
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
sub
jo
adc
add
add
add
andps
adc
add
add
add
cmovo
adc
add
add
add
(bad)
ins
add
adc
add
add
add
mov
add
adc
add
add
add
test
add
adc
add
add
add
cwde
ins
add
adc
add
add
add
mov
adc
add
add
add
addps
adc
add
add
add
adc
adc
add
add
add
adc
add
adc
add
add
add
mov
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
push
andps
adc
add
cmovo
adc
add
(bad)
ins
add
adc
add
add
cmpxchg
adc
add
push
ins
add
adc
add
add
sets
adc
add
js
add
addps
adc
add
adc
adc
add
add
add
adc
add
sbb
add
add
push
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
pop
vmread
adc
add
add
add
adc
add
add
add
add
pop
pshufw
adc
add
add
or
jo
add
adc
add
add
pop
pshufw
add
add
add
adc
add
add
add
add
sysret
jo
add
add
add
add
adc
jo
add
add
add
add
and
add
add
add
sub
push
add
add
add
and
add
add
add
add
add
inc
ja
adc
add
add
add
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
and
jo
add
add
add
add
add
pusha
imul
add
add
add
push
imul
add
add
add
add
add
add
add
cmp
adc
add
add
daa
sub
add
add
add
add
sub
add
or
add
add
add
sbb
add
or
add
add
add
adc
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
cld
push
add
add
add
cld
push
add
add
add
hlt
push
add
add
add
in
push
add
add
add
in
add
add
add
add
add
fsubr
adc
add
add
add
and
add
add
add
add
xor
je
adc
add
add
add
xor
add
add
add
add
and
jo
add
add
add
add
add
aam
add
pusha
add
add
add
cmp
push
add
add
add
int3
push
add
add
add
int3
push
add
add
add
js
add
add
add
add
add
imul
add
add
cmp
push
add
add
add
les
adc
add
add
aaa
mov
add
add
add
aaa
mov
add
add
add
cmp
add
add
add
mov
add
fs
add
add
xor
je
adc
add
add
add
ss
add
add
add
add
add
lods
push
add
add
add
movs
push
add
add
add
pushf
push
add
add
add
xchg
push
add
add
add
mov
adc
add
add
add
je
add
add
add
(bad)
push
add
add
add
je
add
add
add
add
add
lods
push
add
add
add
movs
push
add
add
add
pushf
push
add
add
add
xchg
push
add
add
add
mov
adc
add
add
add
adc
add
add
add
jl
add
add
add
add
add
je
add
add
add
add
add
ins
push
add
add
add
ins
push
add
add
or
adc
add
or
adc
add
pshufw
add
add
add
adc
add
add
add
add
add
push
push
add
add
add
dec
push
add
add
add
inc
push
add
add
add
inc
push
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
lods
push
add
add
xor
movs
push
add
add
xor
pushf
push
add
add
xor
xchg
push
add
add
xor
mov
adc
add
add
add
je
add
add
add
(bad)
push
add
add
xor
je
add
add
add
add
xor
lods
push
add
add
xor
movs
push
add
add
xor
pushf
push
add
add
xor
xchg
push
add
add
xor
mov
adc
add
add
add
adc
add
add
xor
jl
add
add
add
add
xor
je
add
add
add
add
xor
lods
push
add
add
xor
movs
push
add
add
xor
pushf
push
add
add
xor
xchg
push
add
add
xor
mov
adc
add
add
add
je
add
add
add
(bad)
push
add
add
xor
je
add
add
add
add
xor
lods
push
add
add
xor
movs
push
add
add
xor
pushf
push
add
add
xor
xchg
push
add
add
xor
mov
adc
add
add
add
adc
add
add
xor
jl
add
add
add
add
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
cld
add
add
add
add
add
hlt
add
add
add
add
add
in
add
add
add
add
add
in
add
add
add
add
add
fsub
adc
add
add
add
push
aam
add
add
add
add
add
int3
add
add
add
add
add
les
adc
add
add
add
ds
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
fsub
adc
add
add
add
ds
add
add
add
add
add
int3
add
add
add
add
add
les
adc
add
add
add
push
mov
add
add
add
push
mov
add
add
add
add
add
lods
add
add
add
add
add
movs
add
add
add
add
add
pushf
add
add
add
add
add
nop
add
add
add
add
add
mov
adc
add
add
add
cmp
add
add
add
add
add
add
add
add
and
add
add
add
add
js
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
cmp
adc
add
add
add
add
add
add
add
add
add
sub
adc
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
in
add
add
add
add
add
loopne
add
add
add
add
add
aam
add
add
add
add
add
int3
add
add
add
add
add
shl
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
add
js
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
push
pusha
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
inc
add
or
add
add
add
cmp
adc
add
add
add
ds
add
or
add
add
add
and
add
or
add
add
add
sbb
adc
add
add
add
push
adc
adc
add
add
pop
add
or
adc
add
add
add
push
add
adc
add
add
add
push
clc
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
in
add
or
add
add
add
loopne
add
or
add
add
add
aam
add
or
add
add
add
enter
or
add
add
add
shl
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
or
add
add
add
nop
add
or
add
add
add
cld
add
add
add
add
add
hlt
add
add
add
add
add
in
add
add
add
add
add
in
add
add
add
add
add
fsub
adc
add
add
add
pop
aam
add
add
add
add
add
int3
add
add
add
add
add
les
adc
add
add
add
aas
cld
add
add
add
add
add
hlt
add
add
add
add
add
aam
add
add
add
add
add
fsub
adc
add
add
add
aas
les
adc
add
add
add
aas
int3
add
add
add
add
add
mov
add
add
pop
add
or
adc
add
add
add
pop
mov
add
add
add
add
add
lods
add
add
add
add
add
mov
adc
add
add
add
sub
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
cmp
adc
add
add
add
add
add
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
and
adc
add
add
add
pop
adc
adc
add
add
add
sbb
add
add
add
add
add
clc
add
add
add
add
add
js
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
cld
add
add
add
add
add
hlt
add
add
add
add
add
in
add
add
add
add
add
in
add
add
add
add
add
aam
add
add
add
add
shl
add
add
add
add
add
add
add
and
enter
add
add
add
and
adc
add
add
add
sub
add
add
add
add
add
mov
add
add
add
daa
lods
add
add
add
add
sub
add
add
add
and
add
add
add
add
cmp
add
add
add
and
enter
add
add
add
and
adc
add
add
add
add
add
add
dec
inc
pushf
add
or
add
add
inc
dec
pushf
add
or
add
add
dec
inc
nop
add
or
add
add
adc
add
or
add
add
inc
cs
add
or
add
add
dec
or
add
or
add
add
dec
or
add
or
add
add
(bad)
pop
add
or
add
add
adc
add
or
add
add
dec
inc
push
add
or
add
add
dec
inc
dec
add
or
add
add
dec
inc
inc
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
and
add
or
add
add
dec
inc
sbb
add
or
add
add
dec
inc
adc
add
or
add
add
dec
inc
or
or
add
add
fdiv
fdiv
add
add
inc
inc
cld
arpl
adc
add
add
add
je
adc
je
adc
add
or
cld
arpl
adc
add
add
pop
dec
inc
hlt
arpl
adc
add
add
pop
dec
inc
in
arpl
adc
add
add
push
dec
inc
pop
outs
add
or
inc
add
add
arpl
adc
je
adc
add
pop
dec
inc
fsub
adc
add
add
push
inc
inc
shl
adc
add
add
push
dec
inc
les
adc
add
add
pop
sub
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
pushf
arpl
adc
add
add
add
add
or
add
add
inc
sub
arpl
adc
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
inc
inc
xor
add
or
add
add
dec
inc
sub
adc
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
add
adc
add
add
push
dec
inc
hlt
bound
adc
add
add
add
je
adc
je
adc
add
push
dec
inc
test
add
or
add
add
inc
dec
add
adc
add
add
or
or
bound
adc
add
add
add
or
bound
adc
add
add
add
add
or
inc
add
add
bound
adc
je
adc
add
push
add
fsub
adc
add
add
push
inc
inc
int3
bound
adc
add
add
push
dec
inc
shl
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
vmread
adc
add
add
add
push
bound
adc
add
add
add
sets
adc
add
add
add
seto
adc
add
add
add
bsf
adc
add
add
add
js
add
add
add
jo
add
add
add
adc
add
add
add
add
add
mov
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
mov
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
bound
adc
add
add
add
add
add
add
add
add
add
jo
add
adc
add
add
add
push
add
add
add
adc
add
adc
add
add
add
push
add
add
add
shl
add
add
add
es
add
add
add
add
dec
adc
add
add
add
lods
add
add
add
add
add
dec
ja
adc
add
add
add
add
push
pop
add
add
add
test
adc
test
adc
add
pop
test
adc
je
add
jl
add
add
add
add
add
test
adc
test
add
mov
add
add
add
add
add
add
ins
test
js
add
test
add
nop
test
pushf
test
test
add
mov
add
add
test
adc
add
add
add
add
push
pop
add
add
sbb
add
and
add
xor
add
cmp
add
dec
test
push
test
pusha
test
add
test
adc
add
add
add
shl
add
add
clc
add
cmp
add
add
add
add
add
add
add
add
add
or
or
add
add
adc
add
add
add
pop
sbb
add
add
add
add
sbb
add
add
add
sbb
add
sbb
add
hlt
add
cwde
hlt
add
movs
hlt
add
mov
add
mov
hlt
add
aam
add
loopne
add
in
hlt
add
clc
hlt
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
cmc
add
dec
cmc
add
pop
cmc
add
fs
add
jo
add
mov
add
xchg
cmc
add
mov
cmc
add
mov
clc
add
fdiv
add
call
push
clc
add
push
stc
add
add
add
add
add
add
add
stc
add
hlt
cmc
add
add
stc
add
fdivr
add
add
add
add
add
adc
add
add
cli
add
lock
add
add
add
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
repz
and
add
xor
add
cmp
add
dec
repz
push
repz
pusha
repz
cld
sti
add
test
add
nop
repz
pushf
repz
test
add
mov
add
shl
adc
repz
fdiv
add
in
add
cld
repz
adc
add
and
add
sub
add
cmp
add
push
hlt
add
pop
hlt
add
push
hlt
add
add
cld
add
or
add
add
add
add
add
adc
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
or
adc
adc
push
pop
sbb
mov
icebp
add
aam
add
loopne
add
in
icebp
add
clc
icebp
add
add
add
adc
add
sbb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
adc
inc
adc
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
add
add
add
sbb
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
add
add
shl
adc
lock
fdiv
add
in
add
lock
cld
lock
or
add
adc
add
and
add
sub
add
and
add
and
add
and
add
and
add
and
add
and
add
cmp
add
inc
icebp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
push
icebp
add
pop
icebp
add
push
icebp
add
pop
icebp
add
pop
icebp
add
pop
icebp
add
pop
icebp
add
pop
icebp
add
je
add
xor
adc
adc
adc
adc
adc
adc
adc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
movs
icebp
add
mov
add
movs
icebp
add
movs
icebp
add
movs
icebp
add
movs
icebp
add
movs
icebp
add
movs
icebp
add
add
inc
adc
add
add
add
add
add
or
or
add
add
add
adc
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
sbb
add
and
add
xor
add
cmp
add
dec
lock
push
lock
pusha
lock
ins
lock
ins
lock
ins
lock
ins
lock
ins
lock
ins
lock
ins
lock
ins
lock
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
nop
lock
pushf
lock
nop
lock
nop
lock
nop
lock
nop
lock
nop
lock
nop
lock
test
add
mov
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
adc
add
adc
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
add
add
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
add
add
add
jl
add
mov
add
xchg
out
add
mov
out
add
mov
out
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
call
out
add
call
out
add
call
out
add
call
out
add
hlt
out
add
hlt
out
add
hlt
out
add
hlt
out
add
hlt
out
add
hlt
out
add
hlt
out
add
hlt
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
add
or
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
add
add
xor
xor
ss
cmp
cmp
movs
out
add
mov
add
mov
out
add
aam
add
loopne
add
in
out
add
in
out
add
in
out
add
in
out
add
in
out
add
in
out
add
in
out
add
in
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
clc
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sub
add
xor
add
inc
out
add
dec
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
pop
out
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
add
add
adc
add
adc
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
add
out
add
adc
add
and
add
sub
add
cmp
add
inc
out
add
push
out
add
pop
out
add
push
out
add
push
out
add
push
out
add
push
out
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
sub
adc
out
add
sub
adc
out
add
sub
adc
out
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cwde
out
add
add
add
adc
add
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
add
sbb
add
sbb
add
and
add
sub
sub
cs
xor
xor
add
add
inc
in
add
dec
in
add
pop
in
add
fs
add
jo
add
jl
add
mov
add
xchg
in
add
xchg
in
add
xchg
in
add
xchg
in
add
xchg
in
add
xchg
in
add
xchg
in
add
xchg
in
add
mov
in
add
mov
in
add
mov
in
add
mov
in
add
mov
in
add
shr
add
fsubr
add
call
in
add
add
add
or
add
sbb
add
and
add
xor
add
cmp
add
dec
in
add
push
in
add
pusha
in
add
ins
in
add
js
add
test
add
nop
in
add
pushf
in
add
test
add
mov
add
shr
adc
in
add
fsubr
add
in
add
lock
add
cld
in
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
je
add
sub
adc
add
movs
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
add
clc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
in
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
add
mov
add
add
add
add
push
pop
in
add
lock
or
add
adc
add
and
add
sub
add
cmp
add
add
pop
add
aam
add
add
add
add
add
add
nop
jmp
test
add
mov
add
shr
adc
jmp
add
or
adc
or
adc
add
add
add
add
push
pop
and
add
xor
add
cmp
add
dec
jmp
pusha
jmp
js
add
add
add
cmp
add
add
add
add
add
add
shr
add
fsubr
add
call
jmp
add
or
add
sbb
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
or
adc
add
add
add
add
push
pop
mov
call
add
loopne
add
in
call
add
add
add
adc
add
add
or
adc
or
adc
add
add
add
add
push
pop
pop
call
add
je
add
sub
adc
add
movs
call
add
add
or
adc
or
adc
add
add
add
dec
out
adc
inc
or
adc
add
add
add
add
add
out
adc
add
add
adc
adc
add
sbb
add
and
add
add
add
js
add
add
add
add
add
out
adc
add
add
or
adc
add
add
add
add
add
add
add
add
push
or
adc
mov
add
mov
add
add
add
add
add
add
add
or
adc
or
adc
add
add
add
add
push
pop
je
add
and
adc
add
movs
in
adc
in
adc
in
adc
in
or
adc
or
adc
add
add
add
add
push
pop
adc
add
and
add
sub
add
cmp
add
inc
in
adc
add
pop
in
adc
add
add
or
add
add
add
add
add
add
shl
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
push
or
add
add
add
add
add
add
pusha
in
adc
adc
add
test
add
nop
in
adc
add
add
or
add
add
add
add
add
add
add
loopne
adc
mov
or
add
add
add
loopne
adc
fmul
add
add
add
add
add
add
add
add
add
fild
adc
fild
adc
fild
adc
fild
adc
hlt
or
add
add
add
add
add
add
add
add
add
fild
adc
fild
adc
sbb
add
and
add
add
add
add
add
add
add
add
add
add
movs
fild
adc
inc
push
add
dec
push
add
add
add
add
add
push
pop
or
add
add
or
or
add
add
add
add
add
add
adc
add
adc
push
lock
adc
fadd
adc
fadd
adc
fadd
adc
add
push
fadd
adc
fadd
adc
fadd
adc
fadd
adc
fadd
adc
fld
adc
fld
adc
add
pop
fld
adc
add
mov
add
mov
fld
adc
fld
adc
fld
adc
push
lar
add
add
add
add
push
pop
or
or
or
add
add
lldt
add
add
adc
adc
adc
push
pop
sbb
add
sbb
sbb
add
add
push
pop
and
and
add
sub
sub
add
movs
fld
adc
fld
adc
fld
adc
fld
adc
fld
adc
fld
adc
fld
adc
add
adc
add
sbb
add
sub
add
xor
add
dec
fiadd
adc
adc
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fild
adc
add
sbb
add
and
add
xor
add
cmp
add
dec
fild
adc
adc
add
ins
fild
adc
add
test
add
nop
fild
adc
add
mov
add
rcr
adc
fild
adc
fild
adc
fild
adc
ror
add
rcl
add
add
add
add
add
push
pop
or
add
add
or
or
push
movups
add
add
add
add
add
add
adc
add
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
add
cmp
add
cmp
add
add
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
arpl
addr16
ins
outs
outs
jo
add
add
in
add
lock
adc
fadd
adc
fld
adc
add
and
add
sub
add
cmp
add
inc
fld
adc
add
pop
fld
adc
add
je
add
sbb
adc
add
mov
add
les
add
add
add
or
add
sbb
add
and
add
xor
add
cmp
add
dec
fiadd
adc
adc
add
ins
fiadd
adc
add
test
add
nop
fiadd
adc
add
mov
add
rcr
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fiadd
adc
fild
adc
add
and
add
sub
add
cmp
add
inc
fild
adc
add
push
fild
adc
add
xor
add
adc
add
add
add
adc
add
sbb
add
call
loopne
adc
adc
add
fs
adc
adc
loopne
adc
loopne
adc
or
add
add
add
or
add
sbb
add
and
add
xor
add
cmp
add
dec
loope
adc
adc
add
ins
loope
adc
add
test
add
nop
loope
adc
add
mov
add
shl
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loop
adc
add
and
add
sub
add
cmp
add
inc
loop
adc
add
pop
loop
adc
add
je
add
and
adc
add
movs
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
add
adc
add
add
adc
adc
add
pop
adc
adc
push
adc
add
add
add
add
add
add
add
add
dec
aam
adc
add
add
adc
add
add
add
add
add
add
add
adc
add
pop
rol
adc
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adc
add
test
add
nop
rol
adc
add
mov
add
rcl
adc
adc
add
add
add
add
add
add
add
add
add
iret
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
pushf
iret
add
add
add
push
add
add
add
add
add
add
add
pusha
iret
add
ins
iret
add
js
add
add
add
add
add
add
add
int3
add
add
pop
add
add
add
add
add
add
add
push
pop
or
or
or
add
add
add
add
add
push
int3
add
pusha
int3
add
ins
int3
add
js
add
test
add
nop
int3
add
pushf
int3
add
test
add
mov
add
ror
adc
int3
add
fmul
add
in
add
lock
add
add
pop
add
rcr
adc
add
add
add
fs
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
inc
retf
add
dec
retf
add
pop
retf
add
add
sbb
adc
sbb
adc
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
adc
add
add
add
add
add
add
adc
pop
add
add
pushf
leave
add
test
add
mov
add
ror
adc
leave
add
fmul
add
in
add
lock
add
cld
leave
add
or
add
adc
add
and
add
sub
add
cmp
add
inc
retf
push
retf
pop
retf
push
retf
or
adc
add
movs
retf
mov
add
add
add
push
sbb
adc
add
add
add
js
add
test
add
add
sbb
adc
sbb
adc
add
add
add
or
or
add
add
add
push
movups
adc
adc
push
pop
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
or
add
add
sbb
adc
sbb
adc
add
add
add
add
add
add
aam
add
loopne
add
in
mov
adc
xchg
sbb
adc
add
add
add
add
add
add
add
add
or
push
movups
adc
adc
push
add
add
add
pop
sbb
sbb
add
add
sbb
push
pop
and
and
and
es
sub
add
sub
sub
add
add
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
add
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
enter
int3
int
iret
add
rcl
rcl
aad
xlat
fcomp
fcmovu
(bad)
add
add
add
sbb
adc
leave
add
and
add
xor
add
cmp
add
dec
leave
add
push
leave
add
pusha
leave
add
ins
leave
add
aam
add
nop
leave
add
mov
add
mov
retf
aam
add
in
retf
clc
retf
add
add
adc
add
sub
add
inc
sbb
adc
add
jo
add
jl
add
mov
add
xchg
retf
add
mov
retf
add
mov
retf
add
ror
add
fmul
add
call
retf
add
add
add
or
add
sbb
add
and
add
xor
add
cmp
add
add
add
mov
add
adc
add
and
add
sub
add
cmp
add
inc
int
adc
add
pop
int
adc
add
je
add
or
adc
add
movs
int
adc
int
adc
int
adc
int
adc
int
adc
int
adc
int
adc
add
adc
add
sbb
add
sub
add
xor
add
inc
into
add
dec
into
add
pop
into
add
fs
add
jo
add
jl
add
mov
add
xchg
into
add
mov
into
add
mov
into
add
ror
add
fmul
add
call
into
add
add
add
or
add
sbb
add
and
add
cmp
add
dec
iret
add
pushf
push
add
js
add
push
push
add
ror
adc
iret
add
fmul
add
in
add
lock
add
cld
iret
add
or
add
and
add
sub
add
cmp
add
inc
rol
adc
add
pop
rol
adc
add
je
add
adc
adc
add
movs
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
add
adc
add
sbb
add
sub
add
xor
add
inc
rol
adc
adc
add
rol
adc
add
jl
add
mov
add
xchg
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
add
sbb
add
and
add
xor
add
cmp
add
push
rol
adc
add
int3
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
add
and
add
sub
add
cmp
add
mov
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
rol
adc
add
sbb
add
xchg
adc
add
fs
adc
adc
adc
adc
adc
adc
adc
add
jl
add
mov
add
xchg
aam
adc
aam
adc
aam
adc
aam
adc
aam
adc
aam
adc
aam
adc
aad
adc
add
and
add
xor
add
cmp
add
dec
aad
adc
adc
add
ins
aad
adc
add
test
add
nop
aad
adc
add
mov
add
rcl
adc
aad
adc
aad
adc
aad
adc
aad
adc
aad
adc
(bad)
add
adc
add
and
add
sub
add
cmp
add
inc
(bad)
add
push
(bad)
add
pop
(bad)
add
push
enter
enter
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
add
sub
sub
sub
add
das
xor
xor
xor
xor
cmp
add
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
add
popa
add
fs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
in
out
out
lock
repnz
cmc
div
clc
add
add
or
add
adc
add
and
add
sub
add
cmp
add
inc
mov
adc
adc
add
je
add
add
adc
add
movs
mov
adc
add
je
add
adc
adc
add
movs
(bad)
add
mov
add
mov
(bad)
add
aam
add
loopne
add
in
(bad)
add
clc
(bad)
add
add
add
adc
add
sbb
add
sub
add
xor
add
inc
xlat
add
dec
xlat
add
pop
xlat
add
xlat
add
jo
add
jl
add
mov
add
xchg
xlat
add
mov
xlat
add
mov
xlat
add
rcl
add
(bad)
add
call
xlat
add
add
add
or
add
sbb
add
and
add
xor
add
cmp
add
dec
fadd
adc
adc
add
ins
fadd
adc
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
nop
fadd
adc
fadd
adc
fadd
adc
fadd
adc
fadd
adc
add
pushf
fadd
adc
add
pushf
fadd
adc
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
add
rcr
adc
fadd
adc
fadd
adc
add
sbb
add
sub
add
inc
jecxz
adc
adc
adc
add
jl
add
mov
add
xchg
jecxz
adc
jecxz
adc
jecxz
adc
jecxz
adc
jecxz
adc
jecxz
adc
jecxz
adc
in
adc
add
sbb
add
and
add
xor
add
cmp
add
dec
in
adc
or
add
adc
add
aam
add
loopne
add
in
in
adc
in
adc
add
adc
add
sbb
add
sub
add
xor
add
inc
out
adc
adc
or
adc
adc
add
jl
add
mov
add
xchg
out
adc
out
adc
out
adc
out
adc
out
adc
or
adc
adc
add
ins
out
adc
add
test
add
nop
out
adc
add
mov
add
shl
adc
out
adc
out
adc
out
adc
out
adc
out
adc
call
add
and
add
sub
add
cmp
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
push
call
add
push
call
add
push
call
add
push
call
add
xor
add
cld
or
adc
add
sub
add
xor
add
inc
jmp
add
lods
or
adc
adc
add
jl
add
mov
add
xchg
jmp
add
lods
jmp
add
nop
or
adc
adc
or
adc
pop
add
inc
jmp
adc
add
pop
jmp
adc
add
rol
adc
add
and
add
fadd
add
mov
add
adc
add
inc
repnz
dec
repnz
pop
repnz
repnz
jl
add
mov
add
xchg
repnz
mov
repnz
mov
repnz
shl
add
fdiv
add
call
repnz
add
add
or
add
mov
add
in
add
add
add
or
add
and
add
lock
adc
test
fdiv
add
in
add
lock
cld
test
mov
test
add
push
and
adc
add
inc
mov
add
je
add
add
add
je
add
(bad)
(bad)
(bad)
push
adc
adc
adc
add
add
jo
jb
addr16
sub
xor
cmp
sub
and
and
dec
and
popa
jne
gs
and
outs
jae
and
and
imul
popa
jb
sub
dec
je
and
dec
and
inc
dec
push
push
and
push
inc
push
push
inc
inc
add
je
add
je
add
loopne
add
add
add
cs
inc
push
je
jo
pop
imul
je
add
add
add
and
add
push
cmp
adc
add
push
cmp
adc
add
push
cmp
adc
jg
jg
jg
in
and
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
mov
add
je
add
loopne
add
add
add
cs
inc
push
bound
pop
gs
gs
imul
inc
inc
add
jnp
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
adc
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
in
and
add
add
add
mov
add
cmp
adc
add
and
add
add
add
and
add
pop
das
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
in
add
or
add
mov
add
add
xchg
adc
add
add
test
adc
add
add
test
adc
add
add
add
add
adc
add
add
add
adc
add
sbb
add
fadd
add
add
jl
add
push
add
add
adc
add
add
add
and
add
rol
add
add
and
add
sub
add
sbb
add
or
add
clc
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
dec
mov
adc
adc
add
cmp
add
cmp
add
xor
add
and
add
or
add
add
add
in
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
test
add
mov
mov
adc
mov
adc
mov
adc
mov
adc
adc
add
push
mov
adc
add
dec
mov
adc
add
sub
add
and
add
add
add
add
add
nop
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
dec
add
sub
adc
dec
add
sub
adc
dec
add
sub
adc
dec
add
sub
adc
dec
add
sub
adc
add
add
xor
add
add
lock
(bad)
inc
add
add
push
add
push
add
xor
adc
xor
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
adc
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
ja
adc
add
add
aas
inc
push
bound
pop
popa
ins
ins
outs
arpl
je
inc
inc
add
ja
adc
add
add
aas
inc
push
inc
jb
push
je
jb
dec
inc
xor
inc
inc
add
loopne
add
add
add
cs
inc
push
inc
jb
push
je
jb
inc
outs
ins
ins
outs
outs
inc
inc
add
add
loopne
add
add
add
cs
inc
push
outs
jne
pop
outs
pop
jb
outs
addr16
jae
fs
inc
add
loopne
add
add
add
cs
inc
push
ins
outs
imul
jb
jae
fs
inc
add
add
ja
adc
add
add
aas
inc
push
ins
outs
addr16
pop
gs
outs
jb
jae
fs
inc
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
jo
add
add
in
add
add
add
cmp
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
add
add
add
add
xor
xor
xor
xor
pop
xor
div
or
mov
xchg
aaa
mov
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
lock
addr16
jle
xchg
movs
ds
xlat
ds
out
ds
aas
adc
aas
inc
aas
dec
aas
imul
lock
add
add
add
test
add
sub
ins
xor
xor
xor
xor
xor
xor
movs
xor
xor
xor
(bad)
xor
xor
aaa
lea
mov
fidivr
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
stc
cmp
dec
ds
test
lods
fstp
sbb
inc
aas
jno
mov
xlat
aas
add
add
add
js
add
push
xor
ins
xor
xor
jb
cdq
xor
xor
xor
xor
call
xor
xchg
(bad)
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
inc
xor
(bad)
xor
fidiv
and
cmp
cmp
cmp
push
outs
xchg
cwde
ds
aas
sub
dec
aas
add
add
add
add
xor
arpl
je
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
lods
xor
std
xor
dec
bound
test
popf
ss
aad
in
add
daa
aaa
das
aaa
aas
aaa
dec
aaa
(bad)
aaa
iret
aaa
fbstp
jmp
cmp
mov
pop
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
imul
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
idiv
push
aas
inc
aas
push
aas
mov
aas
add
add
add
push
xor
(bad)
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xchg
fwait
xor
xor
xor
adc
xor
xor
xor
xor
xor
xor
xor
cld
xor
out
in
ss
aaa
xor
inc
aaa
inc
cmp
jae
jge
cwde
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
add
pusha
add
xor
add
div
add
adc
sbb
int
fidiv
in
jmp
cmp
pop
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
popf
xor
shl
xor
add
(bad)
sub
xor
inc
ss
xor
dec
aaa
pop
aaa
gs
imul
aaa
fdiv
fnsave
out
lock
add
or
adc
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
jle
test
(bad)
cmp
idiv
add
adc
sbb
int
fidivr
in
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
push
ds
ds
ds
cmps
ds
sar
ds
in
stc
ds
ds
(bad)
sub
xor
inc
aas
ja
cmp
add
add
pop
xor
imul
xor
xor
xor
xor
xor
xor
xor
and
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
jle
test
(bad)
xor
div
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
les
hlt
xor
dec
ss
cmp
jnp
stos
cmp
cmp
cmp
add
add
add
xor
push
xor
xor
movs
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
mov
ss
mov
aaa
aaa
aaa
dec
aaa
lea
ja
mov
cmp
cmp
out
cmp
cmp
(bad)
cmp
sub
cmp
push
ds
ds
ds
or
push
aas
dec
aas
pop
aas
imul
aas
xchg
aas
movs
aas
mov
les
add
add
adc
and
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
fbstp
icebp
xor
jge
dec
xor
scas
xor
cmp
js
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
fidivr
mov
ds
aas
pop
aas
cmp
mov
add
sbb
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
ja
ret
xor
xor
xor
shl
xlat
ss
ss
ss
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
sub
and
sub
xchg
cmp
cmp
arpl
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
add
add
sub
cmp
inc
xor
xor
xor
xor
xor
jbe
mov
call
xor
xor
xor
xor
data16
jl
jecxz
pop
xor
xor
ss
shl
fnsave
div
inc
aaa
push
aaa
popa
aaa
mov
repz
add
cmp
push
cmp
cmp
cmp
and
push
cmp
cmp
cmp
cmp
cmp
jnp
xchg
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
nop
cmp
mov
cmp
push
sbb
pop
ds
xchg
mov
sar
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
fadd
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
push
xor
jo
je
js
(bad)
xor
xor
xor
mov
xor
mov
les
enter
shl
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
inc
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
sahf
cmp
cmp
cmp
cmp
cmp
cmp
ja
mov
retf
ds
loop
std
ds
sbb
fdivr
add
add
nop
add
add
xor
xor
ins
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xchg
xor
xor
xor
xor
nop
ss
lods
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
xor
dec
ds
ds
sar
idiv
cmp
xchg
aas
mov
loopne
add
add
jnp
mov
xor
(bad)
xor
dec
cmp
cmp
mov
cmp
cmp
cmp
es
xchg
cmp
sti
ds
add
add
add
les
add
dec
xor
xor
xor
xor
xor
xor
jle
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
sub
xor
xor
inc
xor
pop
xor
imul
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
enter
shl
aam
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
fs
jo
mov
xor
xor
ss
call
aaa
push
aaa
sahf
aaa
movs
aaa
scas
aaa
mov
aaa
jmp
repnz
sbb
pop
cmp
cmp
cmp
push
cmp
ins
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
cmp
push
cmp
hlt
cmp
cmp
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
ins
cmp
fdivr
push
ds
mov
mov
ds
aas
inc
aas
push
aas
pusha
aas
gs
jne
jg
xchg
xchg
aas
call
aas
loope
jmp
add
add
add
add
add
xor
pop
xor
xor
xor
pop
xor
shl
lods
xor
cmp
dec
xor
ja
jl
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
cmp
jne
xor
xor
out
out
xor
mov
ss
xor
aas
cmp
pop
cmp
cmp
cmp
les
retf
cmp
cmp
cmp
cmp
cmp
adc
sbb
pop
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
ds
or
das
aas
imul
add
add
enter
xor
cmps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ins
xor
test
xor
xor
jb
jnp
xor
xor
inc
ss
ss
ss
mov
ss
cs
inc
aaa
outs
aaa
mov
cmp
dec
cmp
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
cwde
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
aas
aaa
aas
aas
aas
inc
aas
dec
aas
push
aas
mov
aas
jecxz
cli
aas
add
add
enter
push
xor
xor
xor
mov
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
arpl
outs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
ss
aaa
dec
aaa
push
aaa
pop
aaa
pop
aaa
data16
imul
aaa
jecxz
jmp
cmp
push
cmp
jp
mov
sahf
cmp
cmp
mov
sti
cmp
cmp
pop
cmp
jle
mov
mov
cmp
and
pop
lea
mov
aas
jne
loope
add
add
add
mov
add
add
jne
xor
shl
xor
xor
xor
xor
xor
xor
cdq
xor
xor
test
ss
mov
into
ss
loopne
xor
aaa
or
adc
bound
push
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
jecxz
aas
ds
ds
ds
ds
inc
add
lods
add
add
xor
xor
xor
xor
xor
xor
sbb
mov
loope
inc
aaa
bound
outs
aaa
xchg
aaa
mov
aaa
in
aaa
push
cmp
aad
out
cmp
cmp
cmp
cmp
jne
retf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
jns
mov
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
mov
sar
fdivr
icebp
ds
ds
ds
das
aas
aam
add
add
add
inc
xor
inc
xor
push
xor
push
push
xor
xor
xor
xor
xor
xor
call
cmp
mov
int3
cmp
cmp
jp
cmps
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
inc
cmp
arpl
jle
mov
stos
cmp
fidivr
stc
cmp
sub
xor
cmp
inc
ds
ds
ds
mov
xchg
ds
mov
les
leave
sar
fidivr
jmp
hlt
ds
add
or
sbb
and
sub
xor
cmp
dec
aas
push
aas
pop
aas
bound
push
jnp
test
mov
xchg
aas
call
aas
mov
aas
fnstsw
call
aas
add
add
add
add
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xor
aaa
mov
mov
aaa
fdiv
loopne
mov
nop
cmp
add
add
mov
ds
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xor
xor
enter
fdiv
add
adc
adc
and
sub
xor
dec
ss
ss
ss
ss
je
js
xor
ss
lods
ss
ss
call
ss
adc
adc
sbb
xor
mov
cmp
cmp
pop
cmp
cmp
cmp
aam
in
cmp
cmp
cmp
xor
cmp
push
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
dec
cmp
jo
js
mov
pushf
cmp
mov
enter
aam
fdivr
lock
xor
inc
ds
ds
ds
mov
ds
add
or
dec
aas
pop
aas
ins
aas
cmp
aas
xchg
aas
lods
aas
mov
aas
add
add
add
add
adc
xor
dec
xor
xor
xor
pushf
xor
mov
xor
xor
xor
xor
xor
xor
inc
xor
ins
xor
aam
call
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
cmp
dec
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
add
rol
pushf
add
add
fdiv
out
jmp
aaa
sbb
and
xor
cmp
dec
aaa
push
aaa
pusha
aaa
ins
aaa
js
test
nop
aaa
pushf
aaa
test
mov
shl
aaa
fdiv
in
lock
cld
aaa
or
adc
and
sub
cmp
inc
cmp
pop
cmp
je
cmp
cmp
cmp
loopne
in
cmp
cmp
adc
sbb
sub
xor
inc
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
dec
cmp
cmp
cmp
test
mov
sar
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
inc
cmp
pop
cmp
je
cmp
cmp
cmp
loopne
in
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
ins
cmp
nop
cmp
mov
sar
cmp
or
adc
and
sub
cmp
inc
ds
ds
ds
mov
cwde
movs
ds
mov
ds
in
ds
ds
adc
sbb
sub
xor
ss
inc
aas
dec
aas
push
aas
pop
aas
fs
jo
jl
mov
xchg
aas
mov
aas
les
sar
fdivr
call
rol
add
add
add
xor
push
xor
xor
xor
cmp
dec
xor
xor
xor
test
mov
shl
xor
xor
xor
xor
xor
xor
and
sub
cmp
inc
xor
pop
xor
je
xor
xor
xor
loopne
jmp
xor
xor
xor
sub
xor
inc
xor
dec
xor
bound
data16
jl
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
cmp
dec
xor
xor
xor
test
mov
shl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
dec
xor
jo
jl
mov
lods
xor
shl
hlt
xor
sbb
and
xor
cmp
dec
ss
ss
ss
ss
test
nop
ss
ss
mov
shl
fdiv
in
lock
or
adc
and
sub
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
mov
cwde
aaa
movs
aaa
mov
mov
aaa
loopne
in
aaa
clc
aaa
add
adc
sbb
sub
xor
inc
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
dec
cmp
cmp
cmp
test
mov
sar
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cmp
inc
cmp
push
cmp
pop
cmp
jb
jbe
cmp
cmp
cmp
loopne
in
cmp
cmp
adc
sbb
sub
xor
inc
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
ss
dec
cmp
cmp
je
jle
cmp
cmp
mov
mov
cmp
loop
in
cmp
add
adc
sbb
sub
xor
inc
ds
ds
ds
jl
mov
xchg
mov
les
sar
fdivr
call
aas
or
sbb
and
xor
cmp
dec
aas
push
aas
pop
aas
bound
ins
aas
js
cmp
aas
nop
aas
pushf
aas
test
mov
sar
aas
fdivr
in
lock
cld
aas
add
add
add
enter
or
adc
and
sub
xor
xor
xor
xor
jbe
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
sub
xor
inc
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
sbb
and
xor
cmp
dec
xor
xor
xor
test
mov
shl
xor
xor
xor
xor
xor
xor
and
sub
xor
xor
xor
pop
xor
je
xor
xor
xor
loopne
in
xor
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
push
xor
js
test
test
mov
shl
xor
or
adc
and
sub
cmp
inc
ss
ss
ss
mov
cwde
movs
ss
mov
ss
ss
jmp
aaa
adc
sbb
sub
xor
inc
aaa
dec
aaa
pop
aaa
fs
jo
jl
mov
xchg
aaa
mov
aaa
les
shl
fdiv
call
cmp
sbb
and
xor
cmp
dec
cmp
cmp
cmp
test
mov
sar
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cmp
inc
cmp
pop
cmp
je
cmp
cmp
cmp
loopne
in
cmp
cmp
adc
sbb
sub
xor
inc
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
dec
cmp
cmp
cmp
test
mov
sar
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
jo
jl
mov
lods
cmp
sar
hlt
cmp
sbb
and
xor
cmp
dec
ds
ds
ds
ds
test
nop
ds
ds
mov
sar
fdivr
in
lock
or
adc
and
sub
cmp
inc
aas
push
aas
pop
aas
push
aas
mov
cwde
aas
movs
aas
mov
mov
aas
loopne
in
aas
clc
aas
add
add
add
mov
add
add
adc
sbb
sub
xor
inc
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
sbb
and
xor
cmp
dec
xor
xor
xor
test
mov
shl
xor
xor
xor
xor
xor
xor
and
sub
cmp
inc
xor
pop
xor
jb
jbe
xor
xor
xor
loopne
in
xor
xor
adc
sbb
sub
xor
inc
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
cmp
pop
xor
jle
xor
xor
(bad)
xor
loopne
in
xor
adc
sbb
sub
xor
inc
ss
ss
ss
jl
mov
xchg
mov
les
shl
fdiv
call
aaa
or
sbb
and
xor
cmp
dec
aaa
push
aaa
pusha
aaa
ins
aaa
xor
aaa
mov
mov
nop
aaa
xchg
aaa
cwde
aaa
popf
aaa
mov
aaa
mov
aaa
fdiv
fdiv
loopne
in
call
aaa
cmc
aaa
or
or
adc
adc
sbb
sbb
and
and
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
pop
cmp
push
cmp
test
mov
lea
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
movs
aas
test
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
push
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
xor
xor
cwde
xor
movs
xor
mov
mov
mov
xor
int3
xor
fdiv
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shl
aam
fdiv
fdiv
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xor
aaa
mov
mov
nop
aaa
xchg
aaa
cwde
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
lds
aam
fdiv
fdiv
loopne
in
call
aaa
cmc
aaa
stc
aaa
or
or
adc
adc
sbb
sbb
and
and
sub
sub
cmp
cmp
cmp
cmp
popa
cmp
je
js
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sbb
and
and
sub
sub
xor
xor
cmp
pusha
cmp
cmp
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sub
xor
cmp
inc
cmp
pop
cmp
push
cmp
jge
cmp
mov
cmp
mov
enter
sar
in
cmp
or
or
adc
adc
xor
xor
ds
ds
ds
ds
ds
aas
jo
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
lds
leave
aas
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
test
lods
xor
xor
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
mov
mov
mov
xor
sbb
and
and
sub
sub
xor
xor
ss
ss
ss
ss
ss
je
jns
jge
nop
ss
ss
ss
mov
aaa
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmp
cmp
cwde
cmp
movs
cmp
mov
mov
mov
cmp
int3
cmp
fdivr
in
call
cmp
cld
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
js
jl
cmp
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
push
xor
pop
xor
xor
ins
xor
je
js
jl
xor
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
inc
xor
pop
xor
les
in
in
xor
clc
xor
add
or
or
adc
sbb
xchg
aaa
cwde
aaa
pushf
aaa
mov
aaa
fdiv
loopne
in
js
mov
cwde
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
mov
movs
cmp
mov
cmp
in
in
cmp
add
or
adc
sbb
and
sub
xor
cmp
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
dec
aas
add
add
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
hlt
xor
add
add
pusha
aaa
jl
cwde
aaa
mov
aaa
sbb
and
and
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
call
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
setge
das
dec
cld
lea
lea
lea
sbb
lea
or
lea
push
jl
cld
lea
mov
lea
push
jl
cld
lea
pop
jl
cld
lea
pop
jl
cld
lea
sbb
dec
cld
lea
arpl
cld
lea
add
push
inc
add
xchg
add
add
add
add
lock
and
add
add
mov
add
push
add
pop
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
imul
add
add
mov
add
add
add
add
add
inc
add
rcl
add
add
add
add
in
push
add
add
add
cmp
add
cs
js
add
add
mov
add
adc
add
mov
add
add
add
add
pusha
cs
popa
je
add
mov
rol
add
je
add
mov
add
inc
add
inc
cs
je
add
add
out
add
push
add
add
add
inc
add
shr
fs
je
add
rcl
add
push
add
add
add
inc
add
inc
cs
popa
je
add
dec
add
add
pusha
add
add
add
add
add
inc
add
shr
jb
jb
add
add
add
add
jo
add
add
add
add
add
add
jb
ins
outs
arpl
add
add
add
add
add
add
add
add
add
add
dec
mov
jmp
int3
dec
mov
push
dec
sub
dec
lea
mov
dec
mov
dec
mov
call
test
je
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
xor
inc
mov
dec
mov
inc
mov
dec
mov
dec
mov
inc
mov
mov
dec
mov
dec
mov
dec
mov
dec
test
je
xchg
dec
dec
dec
mov
dec
cmp
jbe
call
dec
mov
dec
cmp
jb
dec
lea
dec
mov
jmp
dec
lea
dec
mov
cmp
je
dec
cmp
jbe
call
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
mov
movzx
test
jne
cmp
je
cmp
jne
dec
cmp
jbe
call
dec
mov
dec
cmp
jb
dec
mov
movzx
mov
inc
inc
dec
inc
dec
inc
dec
mov
dec
cmp
jne
dec
mov
dec
mov
movzx
dec
test
je
dec
cmp
jb
dec
lea
dec
cmp
dec
cmovae
inc
movsx
dec
mov
inc
mov
dec
mov
call
dec
mov
dec
test
je
nop
inc
cmp
je
dec
sub
dec
lea
dec
lea
dec
mov
inc
mov
dec
mov
call
dec
mov
dec
test
jne
dec
mov
jmp
dec
lea
dec
cmp
dec
cmovae
dec
sub
dec
mov
jmp
dec
mov
dec
or
inc
mov
dec
inc
dec
cmp
jl
movzx
movzx
shr
and
movzx
shl
add
mov
movzx
movzx
shr
and
shl
xor
mov
shl
add
mov
inc
xor
dec
mov
movzx
dec
or
dec
sub
dec
cmp
ja
call
dec
mov
dec
inc
dec
cmp
jbe
call
dec
mov
dec
cmp
jae
dec
mov
dec
mov
dec
mov
call
jmp
dec
test
jne
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
jmp
dec
test
je
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
dec
inc
dec
cmp
jl
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
jne
inc
test
je
dec
arpl
inc
cmp
jge
dec
lea
inc
mov
dec
sub
xor
call
dec
mov
dec
mov
nop
inc
movzx
dec
test
je
dec
cmp
jb
dec
lea
dec
cmp
dec
cmovae
inc
movsx
dec
mov
inc
mov
dec
mov
call
dec
mov
dec
test
je
nop
inc
cmp
je
dec
sub
dec
lea
dec
lea
dec
mov
inc
mov
dec
mov
call
dec
mov
dec
test
jne
dec
mov
jmp
dec
lea
dec
cmp
dec
cmovae
dec
sub
dec
mov
jmp
dec
mov
dec
or
inc
mov
dec
inc
dec
cmp
jl
movzx
movzx
shr
and
movzx
shl
add
mov
movzx
movzx
shr
and
shl
xor
mov
shl
add
mov
inc
lea
test
jle
dec
lea
inc
mov
inc
xor
data16
movzx
dec
or
dec
sub
dec
cmp
ja
call
dec
mov
dec
inc
dec
cmp
jbe
call
dec
mov
dec
cmp
jae
dec
mov
dec
mov
dec
mov
call
jmp
dec
test
jne
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
jmp
dec
test
je
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
inc
mov
dec
inc
dec
sub
jne
dec
mov
jmp
dec
mov
jmp
dec
mov
jmp
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
mov
dec
or
xor
dec
mov
repnz
dec
not
dec
lea
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
or
inc
xor
dec
mov
mov
call
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
cmp
dec
mov
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jae
call
dec
mov
dec
sub
dec
cmp
dec
cmovb
dec
cmp
jne
dec
lea
dec
or
dec
mov
call
dec
mov
xor
dec
mov
call
jmp
dec
cmp
jbe
call
dec
mov
dec
cmp
jae
dec
mov
dec
mov
dec
mov
call
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
test
jne
dec
mov
dec
cmp
jb
dec
mov
inc
mov
jmp
dec
lea
mov
jmp
dec
lea
dec
mov
dec
lea
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
lea
dec
mov
call
dec
cmp
dec
mov
jb
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
test
je
dec
mov
dec
cmp
jb
dec
mov
dec
lea
jmp
dec
lea
dec
mov
dec
cmp
jb
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
add
dec
cmp
jbe
dec
cmp
jb
dec
mov
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
jmp
dec
cmp
jbe
call
dec
mov
dec
cmp
jae
dec
mov
dec
mov
dec
mov
call
dec
test
je
dec
mov
dec
mov
dec
cmp
jb
dec
mov
dec
lea
jmp
dec
test
jne
dec
mov
dec
cmp
jb
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
lea
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
lea
dec
mov
dec
mov
dec
mov
call
dec
cmp
dec
mov
jb
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
cmp
jae
call
dec
mov
dec
sub
dec
cmp
dec
cmovb
dec
test
je
dec
mov
dec
mov
dec
cmp
jb
dec
mov
dec
lea
jmp
dec
lea
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
lea
dec
lea
dec
sub
dec
add
dec
sub
call
dec
mov
dec
sub
dec
cmp
dec
mov
jb
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
or
dec
cmp
jbe
dec
mov
jmp
dec
mov
dec
mov
dec
shr
dec
mov
stos
stos
stos
stos
dec
mul
dec
shr
dec
cmp
jae
dec
mov
dec
sub
dec
cmp
ja
dec
lea
dec
lea
dec
test
je
xor
dec
or
dec
div
dec
cmp
jae
xor
dec
mov
dec
lea
dec
lea
call
dec
lea
dec
mov
dec
lea
dec
lea
call
call
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
dec
mov
dec
mov
call
dec
cmp
jb
dec
mov
call
dec
lea
mov
dec
mov
dec
mov
dec
mov
dec
cmp
dec
cmovae
mov
dec
add
inc
pop
pop
pop
pop
ret
dec
sub
dec
mov
dec
test
jne
dec
mov
call
dec
add
ret
xor
dec
or
dec
div
dec
cmp
jae
inc
xor
dec
lea
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
call
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
test
je
dec
lea
xor
dec
mov
call
dec
mov
dec
test
je
dec
cmp
jae
dec
dec
dec
mov
xor
dec
lea
dec
cmp
dec
cmove
call
dec
test
je
dec
mov
mov
dec
mov
call
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
cmp
jb
dec
mov
ret
dec
lea
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
lea
dec
mov
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
dec
mov
mov
dec
add
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
lea
mov
dec
mov
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
dec
mov
mov
call
inc
test
je
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
mov
dec
or
inc
xor
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
mov
dec
or
inc
xor
call
nop
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
cmp
jbe
dec
sub
dec
cmp
seta
ret
dec
sub
dec
mov
dec
cmp
seta
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
test
dec
mov
dec
mov
dec
mov
je
dec
mov
dec
mov
dec
add
pop
dec
jmp
dec
mov
dec
mov
dec
add
pop
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
xor
dec
mov
dec
lea
mov
inc
sub
inc
sub
inc
mov
mov
mov
movzx
mov
dec
mov
dec
xor
call
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
lea
dec
mov
ret
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
xor
dec
mov
dec
lea
mov
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
movzx
mov
dec
mov
dec
xor
call
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
push
inc
push
inc
push
dec
sub
xor
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
lea
dec
mov
mov
mov
call
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
cmp
ja
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
mov
dec
lea
dec
cmp
jbe
call
dec
mov
dec
mov
dec
cmp
jb
dec
mov
dec
lea
jmp
dec
lea
dec
mov
dec
mov
dec
lea
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
cmp
ja
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
add
dec
cmp
jbe
call
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
cmp
ja
dec
cmp
jb
dec
mov
dec
mov
dec
lea
dec
cmp
jbe
call
dec
mov
dec
mov
dec
mov
dec
sub
dec
cmp
je
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
mov
dec
lea
dec
mov
dec
lea
dec
cmp
ja
dec
cmp
jb
dec
mov
dec
cmp
jae
call
dec
mov
dec
cmp
je
nop
movsx
dec
inc
dec
add
mov
dec
cmp
jne
dec
mov
dec
add
inc
pop
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
xor
mov
mov
mov
mov
call
dec
lea
dec
mov
mov
call
test
je
dec
lea
dec
lea
xor
call
dec
mov
test
je
dec
mov
dec
lea
xor
dec
mov
xor
mov
dec
mov
inc
lea
mov
dec
mov
call
dec
mov
call
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
call
call
xor
inc
mov
mov
call
xor
dec
mov
call
xor
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
inc
mov
xor
mov
mov
cmp
je
inc
mov
call
jmp
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
mov
call
inc
mov
inc
cmp
jae
dec
mov
call
mov
call
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
mov
call
inc
mov
inc
test
je
dec
mov
call
inc
mov
jmp
dec
mov
mov
mov
inc
cmp
je
dec
mov
cmp
jbe
dec
lea
dec
lea
call
nop
or
mov
dec
mov
dec
lea
call
nop
or
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
or
mov
dec
mov
dec
lea
call
nop
or
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
or
mov
dec
mov
dec
lea
call
nop
or
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
or
mov
dec
mov
dec
lea
call
bts
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
inc
xor
jmp
inc
mov
test
jns
btr
dec
cmp
jb
dec
mov
call
dec
mov
xor
dec
mov
mov
jmp
xor
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
inc
test
je
mov
add
dec
add
jmp
mov
lea
inc
cmp
jbe
inc
mov
jmp
inc
cmp
je
dec
mov
mov
dec
add
dec
mov
call
mov
add
dec
mov
dec
add
cmp
jne
dec
mov
cmp
jbe
dec
lea
dec
lea
call
nop
bts
mov
dec
mov
dec
lea
call
nop
bts
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
bts
mov
dec
mov
dec
lea
call
nop
bts
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
bts
mov
dec
mov
dec
lea
call
nop
bts
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
dec
lea
dec
lea
call
nop
bts
mov
dec
mov
dec
lea
call
bts
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
mov
call
test
je
inc
xor
jmp
inc
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
dec
mov
xor
dec
mov
mov
jmp
xor
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
btr
dec
cmp
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
bt
jae
dec
cmp
jb
dec
mov
call
xor
inc
test
je
inc
cmp
je
dec
test
je
mov
inc
sub
dec
mov
mov
jmp
mov
sub
sub
lea
inc
cmp
jbe
inc
mov
jmp
inc
cmp
je
inc
mov
mov
dec
mov
dec
add
dec
mov
call
mov
dec
mov
call
dec
mov
dec
test
je
inc
mov
inc
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
inc
push
inc
push
inc
push
inc
push
mov
call
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
xor
dec
mov
dec
lea
mov
dec
lea
call
mov
call
inc
xor
dec
test
je
dec
lea
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
xor
lea
call
dec
mov
dec
lea
dec
mov
call
cmp
jne
dec
lea
dec
mov
call
cmp
jne
dec
mov
data16
dec
mov
dec
mov
mov
xor
dec
or
dec
lea
repnz
dec
not
dec
lea
dec
lea
dec
lea
call
nop
dec
mov
dec
test
jne
dec
mov
jmp
dec
mov
dec
sub
dec
mov
dec
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
dec
cmp
jae
xor
mov
mov
dec
lea
dec
lea
lea
dec
mov
call
dec
lea
dec
mov
jmp
dec
mov
dec
cmp
jbe
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
jne
dec
mov
jmp
dec
cmp
jbe
call
dec
mov
dec
test
je
dec
cmp
je
call
dec
sub
dec
mov
dec
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
movaps
movdqa
dec
lea
inc
mov
dec
lea
dec
lea
call
dec
mov
dec
cmp
jbe
call
dec
mov
dec
test
jne
call
dec
mov
jmp
dec
mov
dec
lea
dec
lea
dec
cmp
ja
dec
test
je
dec
mov
jmp
dec
mov
dec
cmp
jae
call
nop
dec
cmp
jb
dec
mov
call
dec
lea
dec
lea
call
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
inc
sete
dec
cmp
jb
dec
mov
call
mov
inc
test
cmovne
mov
dec
lea
dec
mov
call
cmp
je
dec
mov
call
dec
lea
dec
lea
call
dec
cmp
jb
dec
mov
jmp
dec
lea
xor
call
dec
cmp
jb
dec
mov
call
nop
dec
mov
dec
test
je
dec
mov
dec
cmp
je
dec
lea
nop
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
dec
lea
dec
cmp
jne
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
xor
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
dec
mov
dec
mov
mov
dec
mov
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
mov
call
cmp
jne
dec
mov
inc
xor
dec
lea
inc
lea
call
dec
mov
dec
test
jne
dec
mov
lea
dec
mov
dec
mov
call
inc
xor
dec
test
je
dec
lea
dec
mov
jmp
dec
mov
xor
dec
mov
dec
mov
lea
dec
mov
dec
mov
dec
mov
mov
call
dec
lea
dec
mov
dec
mov
call
cmp
jne
dec
lea
dec
mov
call
cmp
jne
movzx
inc
mov
dec
mov
dec
mov
dec
mov
data16
mov
nop
dec
or
xor
dec
lea
repnz
dec
lea
dec
mov
dec
not
dec
mov
inc
mov
dec
lea
dec
lea
call
dec
mov
dec
test
jne
dec
mov
jmp
dec
mov
dec
mov
dec
sub
dec
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
dec
mov
dec
mov
dec
mov
dec
sub
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
dec
cmp
jae
xor
dec
lea
dec
lea
mov
lea
dec
mov
mov
call
dec
lea
dec
mov
jmp
dec
mov
dec
cmp
jbe
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
data16
sub
dec
mov
dec
mov
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
jne
dec
mov
jmp
dec
cmp
jbe
call
dec
mov
dec
test
je
dec
cmp
je
call
dec
sub
dec
mov
data16
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
movaps
dec
lea
dec
lea
dec
lea
inc
mov
movdqa
call
dec
mov
dec
cmp
jbe
call
dec
mov
dec
test
jne
call
dec
mov
jmp
dec
mov
dec
lea
dec
lea
dec
cmp
ja
dec
test
je
dec
mov
jmp
dec
mov
dec
cmp
jae
call
dec
mov
data16
dec
mov
data16
cmp
jb
dec
mov
call
dec
lea
dec
lea
call
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
inc
sete
dec
cmp
jb
dec
mov
call
dec
lea
inc
test
dec
mov
inc
cmovne
call
cmp
je
dec
mov
dec
mov
dec
mov
jmp
inc
mov
call
inc
mov
xor
mov
call
dec
mov
dec
mov
call
xor
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
test
je
dec
mov
dec
cmp
je
dec
lea
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
inc
mov
dec
add
dec
lea
dec
cmp
jne
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
xor
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
mov
call
cmp
jne
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
xor
mov
cmp
jne
dec
mov
call
dec
mov
call
xor
call
dec
mov
inc
mov
dec
lea
call
dec
lea
call
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
inc
xor
jmp
inc
mov
test
je
and
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
dec
cmp
jb
dec
mov
call
inc
test
je
dec
lea
dec
lea
call
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
sete
dec
cmp
jb
dec
mov
call
test
je
dec
lea
dec
lea
call
dec
cmp
jb
dec
mov
jmp
dec
lea
xor
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
lea
dec
mov
call
mov
jmp
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
cmp
dec
cmovae
call
dec
mov
dec
lea
dec
cmp
dec
cmovae
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
cmp
jb
dec
mov
call
jmp
test
jne
xor
call
dec
mov
inc
mov
dec
lea
call
dec
lea
call
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
nop
mov
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
dec
lea
dec
lea
call
mov
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
call
test
je
inc
xor
jmp
inc
mov
test
jns
btr
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
and
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
test
je
dec
cmp
jb
dec
mov
call
inc
test
je
mov
jmp
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
dec
lea
dec
lea
call
mov
dec
lea
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
cmp
dec
mov
jb
dec
mov
call
xor
dec
mov
dec
mov
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
call
dec
mov
dec
add
pop
jmp
int3
int3
int3
int3
int3
dec
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
cmp
jne
call
inc
xor
dec
mov
dec
mov
call
test
je
dec
cmp
jne
dec
cmp
jb
dec
mov
dec
lea
mov
mov
jmp
dec
lea
mov
mov
dec
mov
jmp
dec
cmp
dec
mov
jb
dec
mov
dec
lea
jmp
dec
lea
dec
mov
dec
test
je
mov
movzx
dec
mov
rep
dec
mov
dec
cmp
dec
mov
jb
dec
mov
xor
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
xor
dec
mov
dec
test
je
dec
mov
dec
mov
dec
cmp
je
nop
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
inc
mov
dec
add
dec
cmp
jne
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
(bad)
(bad)
(bad)
jg
mov
dec
mov
dec
cmp
jbe
call
dec
mov
xor
dec
cmp
jae
dec
mov
dec
mov
dec
mov
call
jmp
dec
test
jne
dec
mov
dec
cmp
jb
dec
mov
jmp
dec
add
mov
dec
test
dec
mov
dec
mov
setne
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
cmp
je
push
dec
sub
dec
mov
dec
mov
dec
mov
xor
dec
lea
nop
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
inc
mov
dec
add
dec
lea
dec
cmp
jne
dec
mov
dec
mov
dec
add
pop
repz
int3
int3
int3
int3
inc
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
jne
inc
xor
dec
mov
dec
mov
data16
dec
mov
dec
sub
dec
mov
data16
mov
dec
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
inc
xor
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
dec
mov
data16
dec
mov
dec
sub
dec
cmp
jae
call
int3
dec
inc
dec
cmp
jae
dec
mov
dec
shr
dec
sub
dec
cmp
jae
dec
mov
jmp
dec
add
dec
cmp
dec
cmovb
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
mov
dec
sar
dec
mov
dec
shr
dec
add
dec
mov
inc
mov
dec
lea
dec
lea
xor
mov
movzx
mov
dec
lea
dec
mov
inc
mov
dec
mov
call
inc
mov
xor
mov
movzx
mov
dec
lea
dec
mov
dec
mov
dec
mov
call
mov
dec
lea
dec
lea
xor
mov
movzx
mov
dec
lea
dec
mov
dec
mov
call
nop
dec
mov
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
lea
dec
test
je
dec
mov
dec
mov
call
dec
mov
call
dec
lea
dec
lea
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
jmp
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
dec
cmp
jae
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
mov
dec
lea
call
nop
dec
mov
dec
lea
xor
mov
movzx
mov
dec
lea
dec
mov
call
nop
dec
mov
dec
mov
dec
sub
dec
mov
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
inc
mov
dec
sub
xor
mov
movzx
mov
dec
lea
dec
lea
dec
mov
dec
mov
call
nop
dec
add
dec
mov
dec
add
dec
mov
dec
cmp
je
nop
dec
or
inc
xor
dec
lea
dec
mov
call
dec
add
dec
cmp
jne
dec
cmp
jb
dec
mov
call
jmp
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
mov
dec
lea
call
nop
dec
mov
xor
dec
lea
mov
movzx
mov
dec
mov
dec
mov
dec
lea
call
dec
mov
xor
mov
movzx
mov
inc
movzx
dec
mov
dec
lea
dec
mov
call
dec
mov
dec
lea
dec
cmp
je
data16
dec
or
inc
xor
dec
lea
dec
mov
call
dec
add
dec
cmp
jne
dec
cmp
jb
dec
mov
call
dec
mov
dec
xor
call
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
mov
dec
mov
mov
inc
mov
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
test
jne
dec
lea
dec
shl
call
dec
add
ret
xor
dec
or
dec
div
dec
cmp
jae
inc
xor
dec
lea
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
mov
dec
or
inc
xor
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
or
dec
mov
(bad)
(bad)
(bad)
jg
cmp
jbe
dec
mov
jmp
dec
mov
dec
mov
dec
shr
dec
mov
stos
stos
stos
stos
dec
mul
dec
shr
dec
cmp
jae
dec
sub
dec
cmp
ja
dec
lea
dec
lea
dec
test
jne
xor
dec
mov
jmp
xor
dec
or
dec
div
dec
cmp
jae
xor
dec
mov
dec
lea
dec
lea
call
dec
lea
dec
mov
dec
lea
dec
lea
call
xor
dec
add
call
dec
mov
jmp
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
jb
dec
mov
jmp
dec
lea
dec
lea
dec
lea
dec
mov
call
dec
cmp
jb
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
cmp
dec
cmovae
inc
mov
dec
add
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
test
jne
dec
lea
call
dec
add
ret
xor
dec
or
dec
div
dec
cmp
jae
inc
xor
dec
lea
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
call
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
call
nop
dec
lea
dec
mov
mov
call
dec
test
je
dec
mov
jmp
xor
dec
mov
dec
mov
call
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
mov
dec
lea
dec
mov
mov
mov
xor
inc
lea
inc
mov
call
dec
mov
dec
mov
dec
test
jne
dec
lea
dec
mov
dec
lea
dec
lea
call
dec
lea
dec
lea
call
int3
dec
mov
dec
add
dec
cmp
jae
nop
dec
lea
dec
lea
dec
mov
call
inc
mov
dec
add
dec
mov
dec
mov
dec
add
dec
cmp
jb
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
push
dec
sub
dec
mov
dec
lea
dec
mov
cmp
je
dec
cmp
je
nop
dec
mov
dec
mov
dec
mov
dec
test
jne
call
inc
xor
jmp
dec
mov
dec
cmp
jne
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
je
dec
mov
dec
mov
dec
mov
call
dec
lea
inc
mov
dec
mov
dec
mov
call
dec
lea
dec
lea
call
dec
lea
dec
lea
dec
mov
call
call
dec
mov
dec
mov
dec
mov
call
dec
cmp
jne
xor
inc
mov
dec
mov
call
nop
dec
lea
dec
mov
dec
lea
call
nop
dec
mov
call
nop
dec
mov
dec
add
pop
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
sub
dec
cmp
jne
dec
lea
dec
lea
dec
lea
dec
mov
call
dec
lea
dec
lea
call
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
jne
call
inc
xor
jmp
dec
mov
dec
cmp
jne
call
movaps
dec
mov
dec
lea
dec
lea
dec
lea
movdqa
call
dec
mov
dec
mov
dec
add
ret
int3
dec
mov
push
mov
call
dec
sub
dec
mov
dec
xor
dec
mov
xor
dec
lea
inc
mov
dec
mov
dec
lea
inc
lea
inc
lea
xor
mov
dec
mov
mov
call
cmp
je
or
jmp
mov
test
je
mov
dec
lea
cmp
jae
add
inc
dec
add
cmp
jb
jmp
cmp
jb
mov
dec
mov
dec
xor
call
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
push
push
dec
sub
dec
mov
dec
lea
dec
mov
dec
mov
cmp
jne
dec
cmp
jae
dec
mov
jmp
dec
mov
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
mov
dec
cmp
je
dec
cmp
jb
dec
lea
jmp
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
cmp
je
dec
test
jne
call
inc
xor
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
jne
dec
mov
dec
add
pop
pop
pop
ret
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
lea
dec
mov
dec
mov
call
dec
lea
dec
lea
call
dec
lea
dec
lea
dec
lea
call
call
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
push
push
dec
sub
dec
mov
dec
lea
dec
mov
dec
mov
cmp
jne
dec
cmp
jae
dec
mov
jmp
dec
mov
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
mov
dec
cmp
je
dec
cmp
jb
dec
lea
jmp
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
cmp
je
dec
test
jne
call
inc
xor
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
jne
dec
mov
dec
add
pop
pop
pop
ret
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
lea
dec
mov
dec
mov
call
dec
lea
dec
lea
call
dec
lea
dec
lea
dec
lea
call
call
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
push
push
dec
sub
dec
mov
dec
lea
dec
mov
dec
mov
cmp
jne
dec
cmp
jae
dec
mov
jmp
dec
mov
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
mov
dec
cmp
je
dec
cmp
jb
dec
lea
jmp
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
cmp
je
dec
test
jne
call
inc
xor
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
jne
dec
mov
dec
add
pop
pop
pop
ret
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
lea
dec
mov
dec
mov
call
dec
lea
dec
lea
call
dec
lea
dec
lea
dec
lea
call
call
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
sub
dec
mov
dec
lea
dec
mov
call
nop
dec
mov
dec
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
lea
dec
mov
mov
call
dec
test
je
dec
mov
jmp
xor
dec
mov
dec
mov
call
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
cmp
jne
dec
mov
xchg
dec
cmp
dec
mov
inc
setb
inc
test
je
dec
mov
jmp
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
inc
test
je
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
jne
inc
mov
dec
lea
dec
lea
dec
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
jmp
dec
test
jne
call
cmp
je
dec
mov
dec
mov
cmp
je
call
jmp
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
dec
cmp
jne
dec
mov
dec
mov
dec
mov
cmp
je
cmp
je
call
jmp
dec
mov
dec
mov
dec
mov
dec
cmp
jae
inc
movzx
jmp
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
ret
int3
int3
int3
int3
int3
dec
mov
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
je
dec
mov
xor
dec
mov
mov
inc
lea
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
dec
mov
call
dec
mov
inc
cmp
je
dec
mov
jmp
dec
mov
cmp
je
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
dec
mov
cmp
jne
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
cmp
je
dec
mov
jmp
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
cmp
jne
cmp
je
dec
mov
jmp
dec
mov
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
lea
dec
lea
dec
cmp
je
inc
movzx
movzx
inc
mov
mov
cmp
jne
dec
mov
dec
cmp
je
nop
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
cmp
jne
mov
mov
dec
mov
dec
lea
call
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
mov
dec
mov
jmp
cmp
jne
mov
mov
dec
mov
dec
lea
call
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
mov
dec
mov
dec
mov
dec
mov
dec
cmp
je
jmp
dec
mov
cmp
jne
dec
mov
mov
mov
dec
mov
dec
lea
call
dec
mov
movzx
mov
mov
dec
mov
mov
dec
mov
dec
lea
call
jmp
dec
mov
cmp
jne
dec
mov
mov
mov
dec
mov
dec
lea
call
dec
mov
movzx
mov
mov
dec
mov
mov
dec
mov
dec
lea
call
mov
dec
mov
call
dec
mov
dec
test
je
dec
dec
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
movaps
movdqa
movaps
movdqa
dec
lea
dec
lea
dec
lea
call
dec
mov
call
inc
xor
dec
mov
dec
mov
dec
mov
dec
add
pop
jmp
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
dec
sub
dec
mov
dec
lea
dec
mov
call
dec
mov
dec
mov
dec
lea
dec
lea
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
je
dec
inc
dec
test
jne
call
cmp
je
call
jmp
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
jmp
dec
mov
cmp
jne
dec
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
lea
dec
lea
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
jmp
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
inc
movzx
dec
mov
dec
mov
(bad)
(bad)
call
dec
cmp
jb
dec
mov
xor
dec
mov
mov
inc
lea
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
call
dec
mov
dec
inc
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
jmp
inc
test
je
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
lea
dec
mov
cmp
jne
nop
dec
mov
dec
mov
dec
cmp
jne
dec
mov
inc
cmp
jne
mov
inc
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
jmp
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
jmp
dec
mov
inc
cmp
jne
mov
inc
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
jmp
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
cmp
je
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
mov
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
mov
dec
mov
ret
int3
int3
int3
dec
mov
dec
sub
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
movaps
movdqa
dec
mov
dec
mov
dec
lea
movaps
movdqa
dec
lea
dec
lea
call
dec
mov
call
inc
xor
dec
mov
dec
mov
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
jne
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
jne
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
jmp
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
cmp
dec
mov
je
dec
cmp
dec
lea
dec
mov
dec
mov
dec
mov
jne
call
dec
mov
cmp
je
call
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
data16
dec
mov
dec
mov
cmp
je
jmp
dec
mov
cmp
jne
nop
dec
mov
dec
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
movaps
dec
lea
dec
lea
dec
mov
movdqa
call
jmp
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
dec
mov
dec
cmp
je
call
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
jne
dec
lea
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
jmp
xchg
dec
mov
dec
test
je
dec
cmp
je
call
dec
mov
dec
cmp
dec
mov
je
dec
cmp
dec
lea
dec
mov
dec
mov
dec
mov
jne
call
dec
mov
cmp
je
call
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
nop
dec
mov
dec
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
movaps
dec
lea
dec
lea
dec
lea
movdqa
call
jmp
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
call
dec
mov
dec
test
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
je
dec
mov
xor
dec
mov
mov
inc
lea
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
dec
mov
call
dec
mov
inc
cmp
je
dec
mov
jmp
dec
mov
cmp
je
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
dec
mov
cmp
jne
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
cmp
je
dec
mov
jmp
dec
mov
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
dec
mov
dec
mov
dec
cmp
jne
cmp
je
dec
mov
jmp
dec
mov
dec
mov
cmp
jne
data16
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
lea
dec
lea
dec
cmp
je
inc
movzx
movzx
inc
mov
mov
cmp
jne
dec
mov
dec
cmp
je
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
cmp
jne
mov
mov
dec
mov
dec
mov
call
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
mov
dec
mov
jmp
cmp
jne
mov
mov
dec
mov
dec
mov
call
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
mov
dec
mov
dec
mov
dec
mov
dec
cmp
je
jmp
dec
mov
cmp
jne
dec
mov
mov
mov
dec
mov
dec
mov
call
dec
mov
movzx
mov
mov
dec
mov
mov
dec
mov
dec
mov
call
jmp
dec
mov
cmp
jne
dec
mov
mov
mov
dec
mov
dec
mov
call
dec
mov
movzx
mov
mov
dec
mov
mov
dec
mov
dec
mov
call
mov
dec
mov
call
dec
mov
dec
test
je
dec
dec
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
call
dec
mov
dec
mov
call
cmp
dec
mov
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
cmp
jae
dec
mov
jmp
inc
cmp
je
dec
cmp
dec
cmovb
dec
mov
dec
mov
cmp
je
inc
cmp
je
dec
mov
dec
mov
jmp
dec
mov
cmp
jne
dec
mov
nop
dec
cmp
jae
dec
mov
dec
mov
jmp
dec
mov
cmp
je
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
cmp
dec
mov
jne
call
dec
mov
cmp
je
dec
add
pop
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
dec
mov
dec
add
pop
ret
dec
mov
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
cmp
jne
xchg
dec
mov
dec
lea
call
dec
mov
dec
mov
call
cmp
dec
mov
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
mov
call
dec
mov
dec
test
je
xor
dec
mov
jmp
xor
dec
lea
dec
test
je
dec
mov
dec
lea
dec
test
je
dec
mov
mov
mov
dec
add
ret
int3
dec
mov
dec
mov
push
dec
sub
cmp
dec
mov
dec
mov
dec
mov
jne
xchg
dec
mov
dec
mov
call
dec
mov
dec
mov
call
cmp
dec
mov
je
dec
mov
dec
mov
dec
add
pop
ret
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
mov
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
ret
dec
mov
dec
mov
dec
mov
ret
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
mov
call
dec
mov
dec
test
je
xor
dec
mov
jmp
xor
dec
lea
dec
test
je
dec
mov
dec
lea
dec
test
je
dec
mov
mov
mov
dec
add
ret
int3
dec
mov
dec
mov
push
dec
sub
cmp
dec
mov
dec
mov
dec
mov
jne
xchg
dec
mov
dec
mov
call
dec
mov
dec
mov
call
cmp
dec
mov
je
dec
mov
dec
mov
dec
add
pop
ret
inc
push
dec
sub
dec
cmp
dec
mov
jne
call
dec
mov
cmp
je
dec
add
pop
jmp
dec
mov
cmp
jne
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
dec
mov
dec
add
pop
ret
dec
mov
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
dec
mov
cmp
je
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
push
push
inc
push
dec
sub
dec
mov
dec
mov
inc
xor
dec
mov
dec
mov
dec
mov
dec
mov
movaps
movdqa
dec
mov
dec
mov
nop
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
je
dec
test
jne
call
dec
mov
jmp
dec
mov
dec
cmp
jne
call
dec
cmp
je
dec
test
jne
call
inc
cmp
je
call
jmp
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
je
jmp
dec
mov
inc
cmp
jne
xchg
dec
cmp
jne
dec
mov
dec
mov
inc
cmp
je
dec
mov
jmp
dec
test
jne
call
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
movzx
dec
mov
dec
mov
dec
mov
inc
mov
dec
lea
inc
lea
inc
test
jne
dec
mov
dec
lea
dec
mov
dec
mov
call
test
jne
dec
lea
inc
mov
dec
mov
call
mov
jmp
dec
lea
inc
mov
dec
mov
call
inc
mov
mov
cmp
je
mov
dec
lea
dec
mov
inc
lea
inc
mov
call
test
jne
xor
jmp
dec
lea
call
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
test
je
dec
mov
dec
lea
dec
mov
dec
mov
inc
call
dec
mov
dec
lea
dec
lea
dec
lea
call
jmp
dec
mov
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
lea
dec
lea
dec
lea
call
inc
mov
dec
lea
mov
dec
mov
call
mov
call
dec
mov
dec
mov
dec
mov
call
inc
test
dec
cmovne
call
dec
mov
dec
mov
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
push
push
inc
push
dec
sub
dec
mov
dec
mov
inc
xor
dec
mov
dec
mov
dec
mov
dec
mov
movaps
movdqa
dec
mov
dec
mov
nop
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
je
dec
test
jne
call
dec
mov
jmp
dec
mov
dec
cmp
jne
call
dec
cmp
je
dec
test
jne
call
inc
cmp
je
call
jmp
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
je
jmp
dec
mov
inc
cmp
jne
xchg
dec
cmp
jne
dec
mov
dec
mov
inc
cmp
je
dec
mov
jmp
dec
test
jne
call
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
movzx
dec
mov
dec
mov
dec
mov
inc
mov
dec
lea
inc
lea
inc
test
jne
dec
mov
dec
lea
dec
mov
dec
mov
call
test
jne
dec
lea
inc
mov
dec
mov
call
mov
jmp
dec
lea
inc
mov
dec
mov
call
inc
mov
mov
cmp
je
mov
dec
lea
dec
mov
inc
lea
inc
mov
call
test
jne
xor
jmp
dec
lea
call
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
test
je
dec
mov
dec
lea
dec
mov
dec
mov
inc
call
dec
mov
dec
lea
dec
lea
dec
lea
call
jmp
dec
mov
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
lea
dec
lea
dec
lea
call
inc
mov
dec
lea
mov
dec
mov
call
mov
call
dec
mov
dec
mov
dec
mov
call
inc
test
dec
cmovne
call
dec
mov
dec
mov
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
push
push
inc
push
dec
sub
dec
mov
dec
mov
inc
xor
dec
mov
dec
mov
dec
mov
dec
mov
movaps
movdqa
dec
mov
dec
mov
nop
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
je
dec
test
jne
call
dec
mov
jmp
dec
mov
dec
cmp
jne
call
dec
cmp
je
dec
test
jne
call
inc
cmp
je
call
jmp
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
jne
dec
mov
dec
mov
inc
cmp
je
jmp
dec
mov
inc
cmp
jne
xchg
dec
cmp
jne
dec
mov
dec
mov
inc
cmp
je
dec
mov
jmp
dec
test
jne
call
jmp
dec
mov
dec
cmp
jne
call
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
movzx
dec
mov
dec
mov
dec
mov
inc
mov
dec
lea
inc
lea
inc
test
jne
dec
mov
dec
lea
dec
mov
dec
mov
call
test
jne
dec
lea
inc
mov
dec
mov
call
mov
jmp
dec
lea
inc
mov
dec
mov
call
inc
mov
mov
cmp
je
mov
dec
lea
dec
mov
inc
lea
inc
mov
call
test
jne
xor
jmp
dec
lea
call
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
test
je
dec
mov
dec
lea
dec
mov
dec
mov
inc
call
dec
mov
dec
lea
dec
lea
dec
lea
call
jmp
dec
mov
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
lea
dec
lea
dec
lea
call
inc
mov
dec
lea
mov
dec
mov
call
mov
call
dec
mov
dec
mov
dec
mov
call
inc
test
dec
cmovne
call
dec
mov
dec
mov
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
xor
nop
dec
test
je
dec
mov
dec
mov
dec
test
je
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
mov
dec
mov
call
nop
dec
dec
dec
add
dec
mov
jmp
dec
mov
dec
add
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
push
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
cmp
jne
dec
mov
data16
dec
cmp
dec
mov
inc
setb
inc
test
je
dec
mov
jmp
dec
mov
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
inc
test
je
dec
mov
dec
mov
dec
mov
dec
test
je
dec
cmp
je
call
dec
cmp
dec
mov
jne
dec
mov
dec
mov
inc
mov
dec
lea
dec
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
jmp
dec
test
jne
call
cmp
je
dec
mov
dec
mov
cmp
je
call
jmp
dec
mov
cmp
jne
dec
mov
dec
mov
cmp
jne
nop
dec
mov
dec
mov
cmp
je
dec
mov
jmp
dec
mov
cmp
jne
xchg
dec
cmp
jne
dec
mov
dec
mov
dec
mov
cmp
je
cmp
je
call
jmp
dec
mov
dec
mov
dec
mov
dec
cmp
jae
dec
mov
dec
mov
inc
movzx
jmp
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
pop
pop
ret
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
movzx
dec
mov
dec
mov
dec
mov
data16
dec
cmp
jb
dec
mov
xor
dec
mov
mov
inc
lea
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
inc
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
jmp
inc
test
je
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
lea
dec
mov
cmp
jne
data16
dec
mov
dec
mov
dec
cmp
jne
dec
mov
inc
cmp
jne
mov
inc
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
jmp
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
jmp
dec
mov
inc
cmp
jne
mov
inc
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
jmp
dec
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
cmp
jne
dec
mov
jmp
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
cmp
je
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
call
dec
mov
dec
mov
dec
test
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
inc
push
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
xor
dec
mov
inc
mov
dec
cmp
je
dec
mov
dec
mov
dec
test
je
dec
mov
dec
mov
mov
dec
or
inc
xor
dec
lea
dec
mov
call
nop
dec
cmp
je
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
dec
mov
dec
add
jmp
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
dec
xor
call
dec
mov
dec
add
inc
pop
pop
pop
ret
int3
int3
int3
int3
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
je
dec
sub
dec
sub
dec
cmp
je
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jne
dec
mov
dec
mov
dec
xor
call
dec
add
ret
int3
int3
dec
sub
dec
mov
dec
mov
inc
mov
inc
test
js
inc
test
je
inc
cmp
je
inc
cmp
jne
dec
test
je
dec
mov
dec
test
je
inc
test
jne
inc
lea
dec
add
ret
mov
cmp
jae
mov
dec
add
ret
dec
mov
mov
dec
mov
dec
mov
call
dec
add
ret
mov
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
bt
jae
mov
test
je
sub
je
cmp
jne
mov
ret
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
test
je
inc
sub
je
inc
cmp
jne
bt
jb
inc
and
inc
cmp
je
bt
jae
inc
test
jne
mov
ret
mov
ret
bt
jae
xor
ret
mov
bt
cmovb
mov
ret
int3
int3
int3
int3
int3
int3
int3
dec
mov
mov
dec
mov
push
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
xor
dec
mov
dec
mov
xor
inc
mov
dec
mov
dec
mov
inc
mov
mov
mov
mov
mov
mov
mov
call
inc
mov
dec
lea
dec
lea
dec
lea
dec
lea
inc
mov
dec
mov
call
dec
mov
dec
test
je
mov
inc
cmp
jne
bt
jae
xor
dec
mov
jmp
bt
jae
xor
jmp
movzx
test
je
cmp
je
test
je
dec
mov
dec
lea
inc
movzx
inc
mov
call
sub
dec
mov
dec
cmovs
dec
inc
dec
inc
dec
test
je
bt
jae
inc
cmp
dec
cmovb
cmp
je
dec
mov
movzx
mov
dec
lea
dec
cmp
jne
inc
cmp
jne
mov
not
test
je
dec
lea
test
je
or
dec
lea
dec
cmp
jne
and
dec
mov
dec
mov
mov
mov
dec
mov
dec
mov
dec
test
je
movzx
test
je
cmp
je
movzx
inc
movzx
dec
lea
dec
mov
mov
inc
mov
dec
mov
inc
mov
mov
xor
dec
lea
dec
lea
mov
mov
dec
lea
call
mov
test
jne
dec
mov
jmp
movzx
test
je
cmp
je
dec
lea
dec
lea
inc
mov
call
inc
movzx
inc
movzx
dec
lea
dec
lea
dec
lea
dec
mov
mov
inc
mov
dec
mov
inc
mov
mov
dec
lea
mov
inc
mov
call
mov
test
jne
xor
dec
mov
jmp
bt
jae
movzx
test
je
cmp
je
dec
lea
dec
lea
inc
mov
call
inc
movzx
dec
lea
dec
mov
mov
inc
mov
dec
mov
inc
mov
mov
xor
dec
lea
dec
lea
dec
lea
mov
mov
call
mov
test
jne
xor
dec
mov
jmp
bt
jae
dec
lea
dec
lea
inc
mov
call
inc
movzx
dec
lea
dec
mov
mov
inc
mov
dec
mov
inc
mov
mov
xor
dec
lea
dec
lea
dec
lea
mov
mov
call
mov
test
mov
dec
cmove
jmp
xor
mov
cmp
jb
add
cmp
jne
mov
add
dec
test
je
bt
jae
dec
lea
dec
lea
call
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
mov
dec
sub
dec
mov
dec
cmp
jg
dec
test
je
bt
jae
movzx
mov
cmp
jb
dec
mov
jmp
dec
lea
mov
call
dec
mov
mov
dec
mov
sub
dec
cmovs
dec
inc
dec
inc
dec
mov
mov
dec
mov
dec
test
je
cmp
mov
mov
jne
test
je
or
inc
mov
dec
lea
jmp
mov
test
je
test
je
or
dec
lea
dec
mov
call
jmp
test
je
test
je
or
inc
mov
dec
lea
dec
mov
call
inc
mov
inc
mov
and
cmp
jne
mov
inc
mov
mov
and
or
call
dec
mov
test
jne
dec
mov
inc
movsx
dec
inc
call
dec
mov
mov
mov
sub
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
pop
ret
cmp
jne
dec
mov
jmp
dec
mov
jmp
inc
mov
and
cmp
jne
dec
mov
dec
mov
inc
movsx
dec
inc
call
mov
mov
and
je
or
inc
mov
call
test
je
mov
dec
mov
cmp
jne
jmp
mov
mov
inc
mov
inc
mov
inc
mov
call
test
jne
inc
bt
jae
inc
test
jne
and
or
dec
mov
dec
mov
inc
movsx
dec
inc
call
cmp
jne
test
mov
movzx
jne
movzx
mov
mov
inc
mov
inc
bt
jae
bt
dec
mov
jae
or
movzx
mov
mov
mov
inc
mov
inc
jmp
cmp
jne
inc
bt
dec
mov
jae
and
or
mov
bt
jae
inc
cmp
jae
dec
mov
jmp
bt
jae
dec
mov
dec
inc
inc
movsx
call
mov
inc
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
dec
mov
add
dec
mov
jmp
dec
mov
inc
movsx
dec
inc
call
cmp
jne
test
mov
movzx
jne
movzx
mov
mov
inc
mov
inc
bt
jae
bt
dec
mov
jae
or
mov
movzx
mov
mov
inc
mov
inc
jmp
inc
test
je
inc
bt
jae
dec
mov
inc
cmp
jae
dec
mov
jmp
inc
bt
jae
dec
mov
dec
mov
inc
movsx
dec
inc
call
mov
inc
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
dec
mov
dec
mov
jmp
inc
bt
jae
cmp
je
test
je
or
dec
mov
dec
mov
jmp
dec
mov
dec
mov
inc
movsx
dec
inc
call
cmp
jne
mov
test
je
bt
jae
or
movzx
jmp
movzx
jmp
movzx
mov
mov
mov
inc
mov
inc
mov
bt
jae
mov
bt
jae
or
movzx
mov
mov
mov
inc
mov
inc
jmp
bt
jae
test
je
dec
mov
and
cmp
jne
or
mov
movzx
mov
mov
inc
mov
inc
jmp
mov
dec
mov
mov
inc
cmp
dec
lea
dec
lea
dec
mov
jne
dec
lea
call
dec
lea
inc
mov
dec
mov
call
xor
mov
jmp
inc
movzx
dec
lea
dec
lea
call
dec
lea
inc
mov
dec
mov
call
inc
movzx
dec
mov
call
xor
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
xor
inc
mov
inc
mov
inc
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
test
jle
inc
mov
nop
xor
dec
lea
dec
mov
inc
lea
dec
mov
mov
mov
call
mov
dec
mov
dec
mov
movzx
inc
xor
inc
mov
call
test
je
inc
mov
dec
lea
inc
mov
dec
mov
call
inc
mov
dec
mov
inc
sub
inc
mov
dec
cmp
je
mov
inc
mov
dec
sub
dec
add
dec
cmp
jg
dec
mov
dec
arpl
dec
cmp
jae
dec
imul
dec
lea
dec
add
data16
dec
mov
dec
lea
inc
mov
dec
mov
inc
dec
add
call
inc
movzx
dec
mov
call
mov
mov
inc
movzx
dec
lea
dec
lea
call
dec
inc
dec
mov
dec
inc
inc
dec
dec
inc
mov
dec
cmp
jb
inc
mov
dec
mov
dec
mov
inc
mov
dec
mov
mov
dec
mov
inc
sub
inc
mov
inc
test
jle
inc
mov
dec
add
dec
add
dec
mov
mov
cmp
jne
mov
bt
jae
dec
mov
dec
lea
dec
cmp
je
btr
jmp
mov
test
je
btr
and
mov
mov
lea
inc
cmp
ja
dec
lea
dec
mov
inc
mov
inc
test
je
inc
mov
mov
dec
imul
dec
add
dec
mov
mov
dec
mov
call
test
je
dec
mov
dec
cmp
jae
nop
movzx
dec
lea
call
inc
mov
dec
inc
inc
mov
mov
inc
mov
inc
dec
cmp
jb
dec
lea
dec
lea
call
mov
test
je
mov
lea
cmp
ja
dec
lea
dec
mov
inc
mov
call
dec
inc
xor
dec
arpl
test
je
dec
mov
dec
imul
dec
lea
dec
add
dec
lea
nop
dec
mov
dec
lea
inc
mov
dec
mov
inc
dec
add
call
inc
movzx
dec
mov
call
inc
movzx
dec
lea
dec
lea
mov
mov
call
inc
inc
dec
inc
mov
dec
mov
inc
cmp
jb
dec
mov
inc
mov
inc
mov
inc
mov
dec
lea
inc
mov
inc
dec
imul
dec
add
dec
mov
call
inc
mov
inc
mov
dec
lea
inc
sub
dec
add
dec
add
inc
add
dec
lea
inc
mov
inc
mov
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
lea
dec
lea
inc
inc
call
inc
mov
jmp
mov
dec
mov
dec
mov
dec
add
dec
mov
dec
mov
dec
sub
dec
test
jle
mov
dec
mov
dec
sub
dec
add
dec
cmp
jg
dec
lea
dec
mov
inc
mov
call
dec
dec
arpl
dec
cmp
jae
dec
mov
dec
imul
dec
lea
dec
add
data16
dec
mov
dec
lea
inc
mov
dec
mov
inc
dec
add
call
movzx
dec
mov
call
mov
mov
movzx
dec
lea
dec
lea
call
dec
inc
dec
mov
dec
inc
mov
dec
cmp
jb
dec
mov
dec
mov
inc
mov
dec
mov
inc
xor
mov
jmp
mov
mov
dec
imul
dec
add
dec
mov
mov
dec
mov
call
mov
dec
mov
inc
sub
dec
add
dec
add
inc
mov
dec
mov
dec
mov
mov
inc
test
jle
dec
mov
jmp
mov
jmp
dec
mov
mov
inc
mov
dec
sub
dec
add
dec
cmp
jg
dec
arpl
dec
cmp
jae
dec
imul
dec
add
dec
sub
data16
dec
mov
dec
lea
inc
mov
dec
mov
inc
dec
add
call
movzx
dec
mov
call
mov
mov
movzx
dec
lea
dec
lea
dec
lea
call
dec
lea
dec
inc
mov
dec
mov
dec
cmp
jb
dec
mov
mov
mov
dec
mov
dec
xor
call
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
lea
inc
movzx
mov
inc
movzx
mov
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
dec
mov
cmp
jae
mov
dec
lea
dec
lea
inc
mov
mov
add
ret
mov
dec
lea
dec
lea
mov
inc
mov
inc
mov
inc
mov
inc
add
ret
int3
int3
int3
int3
int3
int3
int3
inc
movzx
mov
dec
lea
inc
mov
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
movzx
dec
mov
dec
lea
cmp
jae
mov
dec
lea
inc
mov
mov
mov
mov
add
ret
mov
dec
lea
inc
mov
inc
mov
inc
mov
inc
movzx
inc
mov
inc
add
ret
int3
int3
inc
mov
dec
mov
dec
lea
inc
lea
mov
inc
mov
mov
shr
and
inc
movzx
inc
mov
mov
mov
and
dec
shr
inc
movzx
and
inc
mov
mov
dec
shr
inc
movzx
inc
mov
inc
movzx
inc
mov
inc
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
mov
inc
mov
inc
xor
dec
lea
inc
shr
dec
mov
inc
and
inc
mov
inc
mov
dec
lea
je
inc
movzx
inc
mov
inc
mov
mov
shr
and
mov
inc
or
je
mov
dec
arpl
inc
inc
movzx
inc
mov
mov
shr
and
mov
inc
or
je
mov
dec
arpl
inc
inc
movzx
inc
mov
mov
dec
arpl
inc
inc
and
movzx
dec
mov
inc
mov
inc
lea
inc
add
dec
arpl
inc
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
dec
mov
dec
lea
inc
lea
mov
inc
mov
mov
shr
and
inc
movzx
inc
mov
mov
mov
and
dec
shr
inc
movzx
and
inc
mov
mov
dec
shr
and
inc
movzx
inc
mov
mov
dec
shr
and
inc
movzx
inc
mov
mov
dec
shr
and
inc
movzx
inc
mov
mov
dec
shr
and
inc
movzx
inc
mov
mov
dec
shr
inc
movzx
inc
mov
inc
movzx
inc
mov
inc
mov
ret
dec
mov
dec
mov
mov
dec
mov
inc
mov
dec
lea
inc
xor
dec
lea
inc
mov
inc
mov
dec
lea
mov
inc
mov
shr
and
mov
inc
or
je
movzx
inc
inc
dec
inc
inc
mov
sub
jne
inc
mov
dec
arpl
inc
inc
and
movzx
dec
mov
inc
mov
inc
lea
add
dec
mov
dec
arpl
inc
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
movzx
inc
movzx
inc
mov
dec
lea
inc
shl
dec
mov
inc
or
movzx
inc
shl
inc
or
movzx
inc
shl
inc
or
inc
lea
mov
inc
mov
inc
mov
shr
and
movzx
inc
mov
inc
mov
and
movzx
inc
mov
inc
mov
shr
and
dec
cwde
movzx
inc
mov
inc
mov
shr
and
dec
cwde
movzx
inc
mov
inc
mov
shr
and
dec
cwde
movzx
inc
mov
inc
mov
shr
and
dec
cwde
movzx
inc
mov
inc
mov
inc
shr
shr
inc
and
movzx
inc
mov
dec
arpl
movzx
inc
mov
movzx
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
mov
shr
and
movzx
inc
mov
mov
and
movzx
inc
mov
mov
shr
and
dec
cwde
movzx
inc
mov
mov
shr
and
dec
cwde
movzx
inc
mov
mov
shr
and
dec
cwde
movzx
inc
mov
mov
shr
and
dec
cwde
movzx
inc
mov
mov
shr
shr
and
movzx
inc
mov
dec
arpl
movzx
dec
mov
inc
mov
inc
mov
ret
dec
mov
dec
mov
dec
mov
dec
mov
movzx
inc
movzx
inc
xor
inc
shl
inc
mov
dec
mov
inc
or
movzx
dec
mov
inc
shl
dec
lea
inc
or
movzx
inc
shl
inc
or
mov
mov
dec
lea
inc
mov
mov
dec
add
dec
mov
nop
inc
mov
shr
and
mov
inc
or
je
dec
arpl
inc
inc
dec
inc
movzx
inc
mov
sub
cmp
jne
movzx
inc
movzx
dec
arpl
inc
shl
inc
or
movzx
inc
shl
inc
or
movzx
inc
shl
inc
or
dec
add
inc
mov
inc
mov
shr
and
mov
inc
or
je
dec
arpl
inc
inc
dec
inc
movzx
inc
mov
inc
sub
jne
dec
mov
inc
mov
dec
arpl
and
inc
inc
movzx
dec
mov
mov
inc
lea
add
dec
mov
dec
arpl
inc
mov
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
lea
inc
xor
dec
lea
inc
mov
inc
mov
dec
lea
mov
data16
dec
mov
dec
arpl
dec
shr
and
dec
or
je
movzx
inc
inc
dec
inc
inc
mov
sub
jne
dec
arpl
inc
inc
inc
and
inc
movzx
dec
mov
inc
mov
inc
lea
add
dec
mov
dec
arpl
inc
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
or
xor
dec
mov
repnz
dec
not
dec
dec
inc
mov
inc
lea
dec
lea
dec
add
pop
jmp
int3
inc
mov
dec
add
inc
inc
jmp
int3
dec
mov
push
dec
sub
mov
dec
mov
inc
mov
dec
lea
inc
inc
call
add
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
dec
mov
dec
mov
push
push
push
inc
push
inc
push
dec
sub
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
test
jg
xor
dec
mov
dec
add
inc
pop
inc
pop
pop
pop
pop
ret
dec
mov
dec
mov
inc
movzx
inc
movzx
dec
mov
dec
mov
dec
mov
dec
test
je
inc
movzx
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
dec
lea
dec
mov
dec
lea
inc
mov
dec
mov
inc
cmp
jne
cmp
dec
lea
dec
lea
dec
cmove
jmp
cmp
jne
inc
mov
dec
mov
call
dec
test
jle
dec
mov
dec
inc
dec
lea
dec
mov
inc
mov
jmp
cmp
jne
inc
mov
dec
mov
call
dec
test
jle
inc
movzx
dec
inc
dec
inc
inc
cmp
jae
inc
shr
inc
and
jmp
inc
mov
dec
mov
call
sub
js
dec
inc
dec
inc
inc
add
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
inc
movzx
dec
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
cmp
je
dec
test
jle
movzx
dec
inc
dec
mov
dec
inc
call
inc
mov
inc
mov
mov
inc
mov
inc
dec
test
jle
dec
mov
inc
movzx
inc
movzx
dec
mov
dec
mov
dec
test
je
inc
cmp
jne
inc
cmp
jne
inc
mov
dec
mov
call
inc
mov
inc
mov
mov
inc
mov
inc
sub
js
dec
mov
dec
lea
dec
mov
dec
lea
inc
mov
dec
mov
dec
lea
jmp
inc
movzx
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
dec
lea
dec
mov
dec
lea
inc
mov
dec
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
dec
test
jle
dec
mov
dec
add
dec
lea
dec
mov
inc
mov
dec
mov
dec
mov
movzx
dec
shr
and
movzx
dec
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
dec
test
jle
movzx
dec
mov
dec
mov
dec
add
mov
dec
add
dec
shr
and
inc
movzx
dec
mov
dec
test
je
inc
test
jne
cmp
jae
jmp
cmp
jb
lea
inc
movzx
dec
mov
dec
test
je
inc
test
jne
dec
mov
call
sub
js
dec
inc
dec
inc
dec
mov
dec
mov
dec
mov
inc
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
inc
movzx
inc
movzx
dec
mov
dec
mov
dec
test
je
inc
movzx
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
dec
test
jle
dec
mov
dec
add
dec
lea
dec
mov
inc
mov
dec
mov
dec
mov
movzx
dec
shr
and
movzx
dec
mov
dec
mov
jmp
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
inc
movzx
inc
movzx
dec
mov
dec
mov
dec
test
je
inc
cmp
jne
inc
mov
dec
mov
call
sub
js
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
jmp
xor
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
pop
pop
pop
ret
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
jae
inc
mov
inc
test
je
dec
lea
dec
cmp
ja
movzx
jmp
movzx
cmp
je
cmp
je
cmp
jne
inc
test
je
dec
lea
dec
mov
add
dec
add
jmp
dec
lea
dec
mov
inc
dec
dec
mov
dec
mov
dec
mov
mov
mov
dec
mov
mov
call
dec
test
je
cmp
je
dec
add
mov
jmp
dec
dec
mov
sub
je
sub
je
cmp
jne
and
dec
mov
jmp
and
dec
mov
jmp
dec
mov
inc
mov
inc
mov
dec
mov
inc
mov
dec
mov
dec
test
jne
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
call
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
movzx
dec
mov
inc
movzx
dec
mov
dec
mov
dec
test
je
cmp
jne
dec
mov
call
add
js
dec
inc
dec
inc
dec
mov
dec
mov
dec
add
pop
ret
xor
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
cmp
ja
dec
lea
dec
arpl
inc
mov
dec
add
jmp
dec
lea
inc
mov
dec
add
jmp
dec
lea
inc
mov
dec
add
jmp
dec
lea
inc
mov
dec
add
jmp
dec
lea
inc
mov
dec
add
jmp
dec
lea
inc
mov
dec
add
jmp
dec
lea
inc
mov
call
dec
add
ret
nop
jbe
add
mov
add
mov
mov
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
inc
mov
dec
mov
mov
inc
mov
xor
mov
inc
mov
inc
shr
shr
inc
and
inc
and
and
dec
mov
mov
mov
cmp
je
dec
mov
movzx
mov
dec
mov
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
inc
mov
inc
mov
inc
mov
mov
inc
inc
mov
inc
inc
cmp
je
mov
and
mov
je
or
mov
mov
call
mov
cmp
mov
jne
cmp
cmove
inc
add
dec
lea
jmp
cmp
cmove
inc
add
dec
lea
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
inc
test
je
mov
and
mov
je
or
mov
mov
call
mov
cmp
mov
jne
cmp
cmove
lea
dec
cwde
dec
lea
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
cmp
cmove
lea
dec
lea
dec
cwde
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
dec
lea
test
je
or
inc
add
inc
cmp
je
inc
test
jne
inc
cmp
je
mov
mov
mov
inc
mov
inc
mov
mov
call
mov
dec
lea
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
dec
lea
mov
mov
mov
mov
mov
mov
add
inc
test
je
inc
sub
je
inc
cmp
jne
inc
add
js
movzx
movzx
dec
mov
shl
or
movzx
shl
or
movzx
shl
or
call
movzx
inc
movzx
inc
shl
mov
inc
or
movzx
inc
shl
inc
or
movzx
inc
shl
inc
or
mov
cmovge
mov
mov
mov
inc
mov
inc
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
cdq
xor
sub
mov
jmp
inc
add
js
movzx
dec
mov
call
cmp
mov
mov
cmovge
mov
mov
mov
dec
mov
inc
mov
inc
movsx
cdq
xor
sub
mov
call
dec
mov
dec
mov
dec
inc
dec
inc
jmp
inc
cmp
jne
inc
add
jns
xor
jmp
movzx
movzx
dec
mov
shl
or
movzx
shl
or
movzx
shl
or
call
movzx
inc
cmp
je
movzx
shl
or
movzx
shl
or
movzx
shl
or
mov
mov
cmovge
mov
mov
mov
inc
mov
inc
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
cdq
xor
sub
mov
jmp
movzx
shl
or
movzx
shl
or
movzx
shl
or
dec
mov
call
dec
mov
dec
mov
dec
add
dec
add
mov
mov
mov
inc
mov
inc
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
inc
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
inc
mov
dec
mov
inc
mov
xor
dec
mov
inc
mov
inc
mov
inc
test
je
dec
mov
inc
movzx
mov
cmp
jne
inc
lea
cmp
ja
dec
lea
dec
cwde
movzx
mov
dec
add
jmp
inc
mov
mov
inc
mov
inc
mov
call
test
je
sub
je
cmp
jne
cmp
jne
inc
and
inc
or
bt
jae
or
inc
test
je
mov
or
add
jmp
mov
dec
lea
mov
mov
mov
mov
mov
mov
mov
add
jmp
inc
and
inc
or
mov
inc
test
je
bts
mov
mov
add
dec
lea
mov
mov
mov
mov
mov
mov
mov
add
jmp
mov
jmp
inc
and
inc
or
mov
inc
test
je
bts
mov
mov
add
jmp
mov
dec
lea
mov
mov
mov
mov
mov
mov
mov
add
jmp
inc
test
je
or
jmp
mov
inc
test
je
or
add
cmp
jne
mov
and
cmp
jne
mov
jmp
mov
dec
lea
inc
test
je
or
jmp
inc
test
je
mov
or
add
jmp
mov
inc
bt
dec
lea
jae
or
jmp
inc
test
je
mov
or
add
jmp
inc
test
je
or
mov
inc
and
inc
cmp
mov
cmove
add
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
inc
test
je
mov
or
add
jmp
mov
mov
dec
lea
mov
mov
mov
mov
mov
mov
add
jmp
inc
test
je
mov
or
add
jmp
mov
cmp
jne
jmp
mov
inc
mov
call
test
jne
test
je
sub
je
cmp
jne
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
inc
sub
js
movzx
dec
mov
shl
movzx
movzx
or
call
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
mov
inc
mov
dec
lea
dec
lea
inc
mov
mov
mov
mov
mov
mov
mov
add
movzx
movzx
mov
shl
or
mov
inc
cmovge
inc
mov
mov
inc
mov
inc
movzx
movzx
shl
cwde
or
cdq
xor
sub
mov
jmp
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
inc
sub
js
movzx
dec
mov
call
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
mov
inc
mov
dec
lea
dec
lea
inc
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
inc
cmovge
dec
mov
inc
mov
mov
inc
mov
inc
movsx
cdq
xor
sub
mov
call
inc
mov
dec
inc
inc
mov
mov
inc
mov
inc
dec
inc
jmp
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
mov
cmp
jne
inc
sub
js
movzx
dec
mov
shl
movzx
movzx
or
call
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
inc
mov
inc
mov
mov
inc
mov
inc
movzx
shl
movzx
movzx
or
dec
mov
call
inc
mov
dec
add
inc
mov
mov
inc
mov
inc
dec
add
jmp
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
mov
dec
lea
dec
lea
mov
mov
mov
mov
mov
mov
jmp
test
je
sub
je
cmp
jne
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
cmp
jne
inc
sub
inc
mov
js
movzx
dec
mov
mov
dec
mov
call
mov
dec
lea
mov
mov
mov
mov
mov
dec
lea
dec
lea
dec
inc
dec
inc
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
jne
jmp
inc
sub
js
movzx
movzx
dec
mov
shl
or
movzx
shl
or
movzx
shl
or
call
mov
dec
mov
call
mov
dec
mov
inc
mov
dec
mov
call
inc
test
je
or
mov
add
jmp
mov
inc
mov
mov
call
mov
dec
lea
cmp
mov
dec
lea
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
movzx
movzx
shl
inc
mov
or
movzx
shl
or
movzx
shl
or
mov
mov
inc
cmovge
inc
mov
mov
inc
mov
inc
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
dec
mov
cdq
xor
sub
mov
call
inc
mov
inc
mov
jmp
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
cmp
jne
inc
sub
inc
mov
js
movzx
dec
mov
mov
dec
mov
call
mov
dec
lea
mov
mov
mov
mov
mov
dec
lea
dec
lea
dec
inc
dec
inc
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
jne
xor
jmp
inc
sub
js
movzx
dec
mov
call
mov
dec
mov
call
mov
dec
mov
inc
mov
dec
mov
call
inc
test
je
or
mov
add
jmp
mov
inc
mov
mov
call
mov
dec
lea
cmp
mov
dec
lea
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
cmp
mov
mov
inc
mov
inc
cmovge
dec
mov
inc
mov
mov
inc
mov
inc
movsx
cdq
xor
sub
mov
call
inc
mov
dec
inc
inc
mov
mov
inc
mov
inc
dec
inc
jmp
inc
mov
and
or
cmp
jne
inc
test
je
dec
mov
mov
mov
cmp
jne
inc
sub
inc
mov
js
movzx
dec
mov
mov
dec
mov
call
mov
dec
lea
mov
mov
mov
mov
mov
dec
lea
dec
lea
dec
inc
dec
inc
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
test
je
dec
mov
inc
mov
dec
mov
jmp
cmp
jne
or
inc
sub
js
movzx
movzx
dec
mov
shl
or
movzx
shl
or
movzx
shl
or
call
mov
dec
mov
call
mov
dec
mov
inc
mov
dec
mov
call
inc
mov
dec
mov
inc
mov
mov
inc
mov
inc
cmp
jne
inc
lea
dec
lea
call
movzx
inc
movzx
inc
shl
mov
inc
mov
inc
or
movzx
inc
shl
inc
or
movzx
inc
shl
inc
or
mov
inc
cmovge
inc
mov
mov
inc
mov
inc
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
dec
mov
cdq
xor
sub
mov
jmp
movzx
movzx
shl
or
movzx
shl
or
movzx
shl
or
call
mov
mov
mov
dec
add
inc
mov
inc
dec
add
jmp
mov
dec
mov
call
mov
dec
mov
inc
mov
dec
mov
call
inc
test
je
or
mov
add
jmp
mov
inc
mov
mov
call
mov
dec
lea
cmp
mov
dec
lea
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
inc
dec
mov
dec
mov
inc
mov
dec
mov
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
fsubr
add
mov
stos
add
es
add
jge
add
fldcw
add
lea
add
add
add
add
or
or
push
push
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
inc
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
mov
dec
mov
inc
xor
dec
mov
inc
mov
dec
mov
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
and
shr
inc
shr
mov
and
inc
and
inc
mov
inc
mov
inc
mov
mov
inc
test
je
dec
mov
inc
movzx
mov
dec
cmp
ja
dec
cwde
dec
lea
mov
dec
lea
dec
add
mov
jmp
sub
mov
js
inc
movzx
dec
mov
call
inc
movzx
dec
mov
call
dec
inc
dec
inc
jmp
mov
inc
mov
inc
mov
inc
mov
inc
mov
mov
call
test
jne
mov
dec
mov
and
or
sub
mov
js
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
inc
movzx
inc
movzx
inc
shl
dec
mov
inc
movzx
or
call
dec
add
dec
add
jmp
inc
mov
inc
mov
mov
inc
mov
call
cmp
jne
and
cmp
jne
inc
mov
or
inc
sub
js
dec
mov
dec
mov
call
dec
mov
dec
mov
call
dec
add
dec
add
jmp
mov
dec
mov
and
or
jmp
inc
mov
sub
mov
js
inc
movzx
inc
movzx
dec
mov
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
call
inc
movzx
inc
cmp
jne
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
jge
mov
mov
mov
inc
mov
inc
inc
movzx
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
cdq
xor
sub
mov
jmp
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
dec
mov
call
dec
add
dec
add
jmp
sub
mov
js
inc
movzx
dec
mov
call
inc
movzx
inc
cmp
je
inc
movzx
dec
mov
call
dec
inc
dec
inc
jmp
sub
mov
js
inc
movzx
dec
mov
call
bt
jae
bt
jae
mov
or
test
je
jle
cmp
jg
dec
lea
jmp
dec
lea
inc
mov
dec
mov
call
inc
cmp
jge
mov
mov
mov
inc
inc
mov
inc
inc
movsx
dec
mov
cdq
xor
sub
mov
call
dec
inc
dec
inc
jmp
dec
lea
inc
test
je
or
inc
and
mov
inc
cmp
inc
cmove
inc
add
dec
lea
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
mov
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
mov
mov
inc
mov
mov
call
test
je
sub
je
cmp
jne
or
dec
lea
inc
and
inc
cmp
mov
mov
cmove
mov
inc
add
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
jmp
and
or
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
and
or
mov
inc
test
je
bts
mov
jmp
inc
test
je
or
inc
add
dec
lea
mov
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
cmp
jne
mov
and
cmp
je
dec
lea
inc
mov
dec
lea
inc
test
je
or
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
dec
lea
jmp
inc
test
je
or
inc
add
cmp
mov
inc
mov
dec
lea
dec
lea
jne
jmp
dec
lea
mov
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
dec
lea
jmp
inc
test
je
or
inc
add
dec
lea
mov
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
test
je
or
inc
add
dec
lea
jmp
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
cmp
jne
inc
test
je
dec
mov
mov
mov
inc
mov
mov
inc
mov
mov
call
cmp
jne
or
lea
jmp
mov
jmp
mov
jmp
mov
jmp
inc
mov
mov
inc
mov
inc
mov
mov
call
test
je
sub
je
cmp
jne
inc
mov
and
cmp
jne
or
mov
inc
xor
mov
cmp
jne
dec
mov
inc
mov
xor
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
and
or
mov
jmp
and
mov
or
jmp
inc
mov
mov
inc
mov
inc
mov
mov
call
cmp
jne
inc
bt
jb
jmp
mov
jmp
mov
jmp
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
jne
cmp
jne
jmp
cmp
jne
lea
jmp
mov
mov
jmp
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
mov
mov
and
inc
mov
inc
mov
or
mov
call
cmp
je
mov
inc
mov
inc
mov
mov
call
cmp
jne
inc
bt
jb
or
mov
jmp
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
je
mov
and
or
mov
jmp
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
inc
mov
mov
inc
mov
inc
mov
mov
call
cmp
jne
mov
lea
inc
mov
and
cmp
jne
or
jmp
bt
mov
jae
or
mov
jmp
mov
jmp
mov
mov
dec
mov
mov
inc
mov
inc
mov
dec
mov
mov
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
mov
dec
mov
dec
mov
inc
mov
dec
mov
mov
call
test
mov
setne
jmp
inc
test
je
or
inc
add
jmp
cmp
jne
test
je
inc
add
or
inc
cmp
jae
dec
lea
dec
lea
inc
cmp
je
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
inc
cmp
je
inc
cmp
je
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
cmp
jne
inc
cmp
je
inc
cmp
ja
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
bt
jae
or
dec
mov
cmp
jne
inc
mov
dec
lea
jmp
inc
mov
dec
lea
call
mov
and
cmp
ja
je
cmp
je
cmp
je
cmp
jne
dec
lea
inc
mov
dec
mov
call
jmp
dec
lea
inc
mov
dec
mov
call
jmp
dec
lea
inc
mov
dec
mov
call
jmp
dec
lea
inc
mov
dec
mov
call
jmp
cmp
je
cmp
jne
dec
lea
inc
mov
dec
mov
call
jmp
dec
lea
inc
mov
dec
mov
call
jmp
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
inc
and
mov
inc
mov
inc
mov
inc
mov
inc
mov
mov
call
test
jne
and
or
mov
mov
mov
mov
mov
mov
mov
add
jmp
inc
mov
inc
mov
mov
inc
mov
call
cmp
jne
and
or
mov
mov
mov
mov
mov
mov
mov
add
jmp
not
bt
jae
and
or
mov
mov
mov
mov
mov
mov
mov
add
jmp
inc
mov
mov
inc
mov
mov
call
inc
mov
and
or
test
jne
inc
sub
js
inc
movzx
dec
mov
shl
dec
mov
movzx
inc
movzx
or
call
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
test
je
dec
lea
inc
mov
dec
mov
call
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
inc
mov
dec
mov
inc
mov
mov
inc
mov
inc
inc
movzx
shl
movzx
inc
movzx
or
call
dec
add
dec
add
jmp
inc
sub
js
inc
movzx
inc
movzx
dec
mov
shl
dec
mov
or
inc
movzx
shl
or
inc
movzx
shl
or
call
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
test
je
dec
lea
inc
mov
dec
mov
call
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
inc
mov
dec
mov
inc
mov
mov
inc
mov
inc
inc
movzx
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
call
dec
add
dec
add
jmp
sub
mov
js
dec
movsx
dec
mov
movzx
call
test
jns
mov
dec
mov
cdq
xor
sub
dec
mov
dec
cwde
dec
sub
dec
inc
call
dec
inc
dec
inc
jmp
dec
lea
dec
mov
call
dec
inc
dec
inc
jmp
inc
mov
mov
inc
mov
mov
call
inc
mov
and
or
test
jne
inc
sub
js
inc
movzx
dec
mov
shl
movsx
inc
movzx
or
movzx
call
test
je
dec
lea
inc
mov
dec
mov
call
test
jns
mov
dec
mov
cdq
xor
sub
dec
cwde
dec
sub
dec
add
jmp
dec
arpl
dec
lea
movzx
dec
mov
call
dec
add
dec
add
jmp
inc
sub
js
inc
movzx
inc
movzx
dec
mov
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
mov
call
test
je
dec
lea
inc
mov
dec
mov
call
test
jns
mov
cdq
xor
sub
dec
mov
dec
cwde
dec
sub
dec
add
jmp
dec
arpl
dec
lea
dec
mov
call
dec
add
dec
add
jmp
inc
mov
mov
inc
mov
call
test
jne
inc
mov
and
or
inc
sub
js
inc
movzx
dec
mov
shl
movzx
inc
movzx
or
call
inc
mov
dec
mov
dec
mov
call
inc
mov
dec
mov
inc
mov
mov
inc
inc
mov
inc
inc
movzx
shl
movzx
inc
movzx
or
call
inc
mov
dec
add
inc
mov
mov
inc
inc
mov
inc
dec
add
jmp
mov
inc
mov
call
inc
mov
cmp
jne
and
or
inc
sub
js
inc
movzx
inc
movzx
dec
mov
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
call
inc
mov
dec
mov
dec
mov
call
inc
mov
dec
mov
inc
mov
mov
inc
inc
mov
inc
inc
movzx
inc
movzx
shl
or
inc
movzx
shl
or
inc
movzx
shl
or
call
inc
mov
dec
add
inc
mov
mov
inc
inc
mov
inc
dec
add
jmp
inc
sub
js
dec
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
inc
mov
dec
mov
inc
mov
mov
dec
mov
inc
inc
mov
inc
call
inc
mov
dec
add
inc
mov
mov
inc
inc
mov
inc
dec
add
jmp
dec
lea
inc
mov
dec
mov
call
jmp
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
inc
movzx
dec
lea
inc
mov
dec
mov
and
call
inc
mov
add
inc
mov
mov
inc
inc
mov
inc
mov
mov
mov
inc
inc
mov
inc
mov
mov
mov
inc
inc
mov
jmp
inc
movzx
mov
dec
lea
inc
mov
dec
mov
and
call
dec
lea
inc
mov
dec
mov
call
dec
lea
inc
mov
dec
mov
call
inc
mov
add
inc
mov
mov
inc
mov
inc
mov
mov
mov
inc
mov
inc
mov
mov
jmp
inc
movzx
mov
dec
lea
inc
mov
dec
mov
and
call
inc
mov
add
inc
mov
mov
dec
lea
inc
inc
mov
dec
mov
mov
inc
mov
mov
mov
inc
mov
inc
mov
mov
mov
inc
mov
inc
call
dec
lea
inc
mov
dec
mov
call
jmp
inc
movzx
dec
lea
and
inc
test
je
or
add
dec
lea
jmp
inc
mov
dec
lea
inc
test
je
or
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
btr
inc
movzx
inc
mov
mov
inc
mov
inc
mov
mov
and
call
test
je
sub
je
cmp
jne
inc
bt
jae
inc
bt
jb
inc
test
je
or
add
dec
lea
mov
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
or
inc
and
mov
inc
cmp
mov
cmove
add
dec
lea
jmp
inc
mov
dec
lea
inc
test
je
or
lea
dec
lea
jmp
and
dec
lea
or
mov
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
and
or
mov
inc
test
je
bts
add
mov
mov
dec
lea
dec
lea
inc
mov
mov
inc
mov
mov
mov
inc
mov
add
jmp
mov
mov
mov
and
and
jne
mov
jmp
inc
mov
mov
and
or
inc
test
je
mov
and
or
mov
mov
and
cmp
je
bts
and
cmp
je
inc
mov
inc
mov
mov
inc
mov
call
test
jne
dec
lea
jmp
inc
mov
inc
mov
mov
inc
mov
call
cmp
jne
bt
jae
or
inc
lea
dec
lea
jmp
inc
mov
dec
lea
jmp
mov
and
cmp
je
bts
and
cmp
je
dec
lea
inc
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
inc
mov
mov
inc
mov
mov
inc
mov
inc
mov
inc
call
test
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
inc
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
and
and
je
inc
mov
mov
and
or
inc
test
je
mov
and
mov
or
mov
cmp
je
mov
and
cmp
je
inc
mov
inc
mov
mov
inc
mov
call
test
jne
dec
lea
jmp
inc
mov
inc
mov
mov
inc
mov
call
cmp
jne
bt
jae
or
inc
lea
dec
lea
jmp
inc
mov
dec
lea
jmp
mov
and
cmp
je
bts
and
cmp
je
dec
lea
inc
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
call
inc
mov
mov
inc
mov
mov
inc
mov
inc
mov
inc
call
test
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
inc
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
test
je
mov
and
cmp
je
test
je
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
mov
mov
inc
mov
mov
mov
mov
mov
mov
add
jmp
test
je
mov
dec
lea
inc
mov
and
dec
mov
or
call
mov
inc
mov
dec
mov
dec
mov
call
inc
mov
mov
inc
mov
mov
mov
inc
mov
inc
call
test
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
or
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
inc
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
inc
inc
mov
mov
inc
mov
call
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
call
and
or
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
inc
inc
mov
dec
mov
mov
dec
mov
inc
mov
dec
mov
jmp
nop
fwait
mov
add
mov
add
loopne
add
retf
add
mov
add
sub
add
imul
add
add
xchg
mov
add
mov
add
push
rol
sti
rol
and
add
rol
mov
add
(bad)
mov
add
sar
add
rol
jge
add
icebp
rol
out
add
sbb
add
xchg
ret
ffree
add
xor
add
dec
les
add
add
lahf
les
add
mov
add
test
add
pushf
mov
add
mov
add
fnstsw
add
mov
add
retf
retf
in
add
arpl
add
cli
int3
add
dec
add
arpl
add
lock
add
cmc
rol
add
rol
add
rol
add
retf
add
loopne
add
retf
add
mov
add
mov
mov
add
icebp
rol
sbb
rol
test
add
mov
int3
int3
int3
int3
add
cmp
ja
dec
lea
inc
movzx
inc
mov
dec
add
jmp
xor
cmp
sete
ret
mov
ret
xor
ret
xchg
xor
add
sub
add
aaa
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
or
dec
test
jne
dec
test
jne
dec
test
jne
dec
test
jne
dec
mov
ret
dec
mov
dec
test
dec
cmove
dec
test
dec
cmove
dec
test
dec
cmove
dec
cmp
dec
cmovb
dec
cmp
dec
cmovb
dec
cmp
dec
cmovb
dec
cmp
dec
cmove
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
add
mov
mov
cmp
ja
dec
lea
inc
movzx
inc
mov
dec
add
jmp
inc
cmp
jne
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
repz
and
(bad)
add
or
add
pop
xlat
add
mov
xlat
add
inc
xlat
add
dec
xlat
add
pop
xlat
add
rcl
add
(bad)
add
in
(bad)
add
push
add
add
or
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
add
add
add
add
or
or
or
or
or
or
or
or
or
or
push
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
inc
mov
dec
mov
mov
dec
mov
dec
mov
xor
sub
jns
dec
mov
dec
sub
dec
cmp
jl
movzx
dec
lea
inc
mov
call
dec
mov
inc
cmp
je
mov
test
je
sub
je
sub
je
sub
je
cmp
jne
inc
mov
inc
test
je
dec
mov
dec
test
je
dec
cmp
jae
and
dec
mov
inc
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
inc
dec
mov
jmp
inc
or
dec
mov
dec
inc
inc
mov
jmp
inc
mov
inc
test
je
dec
mov
dec
test
je
dec
cmp
jae
and
dec
mov
inc
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
mov
jmp
inc
or
dec
mov
dec
inc
inc
mov
jmp
inc
mov
inc
test
je
dec
mov
dec
test
je
dec
cmp
jae
and
dec
mov
inc
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
mov
dec
mov
jmp
inc
or
dec
mov
dec
inc
inc
mov
jmp
inc
mov
test
je
dec
mov
and
inc
mov
dec
test
je
dec
cmp
jae
and
dec
mov
inc
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
or
dec
inc
dec
mov
jmp
inc
or
dec
mov
dec
inc
jmp
inc
mov
test
je
dec
mov
and
inc
mov
dec
test
je
dec
cmp
jae
and
dec
mov
inc
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
test
je
dec
cmp
jae
inc
and
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
or
dec
inc
dec
mov
jmp
inc
or
dec
mov
dec
inc
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
xor
inc
xor
dec
mov
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
or
mov
dec
cmp
je
inc
test
je
bts
mov
dec
mov
dec
test
je
mov
test
jne
bts
mov
mov
inc
mov
mov
not
and
mov
cmp
je
bt
jae
dec
mov
inc
mov
dec
mov
bt
jae
inc
mov
dec
mov
dec
mov
lea
inc
mov
test
je
inc
mov
dec
mov
dec
mov
lea
inc
mov
test
je
inc
mov
dec
mov
inc
inc
mov
bt
jae
inc
mov
dec
mov
inc
inc
mov
inc
cmp
jbe
dec
mov
inc
mov
dec
mov
dec
mov
dec
lea
nop
dec
lea
dec
mov
nop
dec
mov
dec
mov
dec
cmp
jbe
dec
mov
dec
mov
dec
add
dec
sub
jne
dec
add
dec
sub
jne
dec
mov
dec
mov
inc
cmp
jbe
dec
lea
nop
dec
mov
inc
inc
dec
inc
movzx
dec
add
mov
inc
cmp
jb
dec
add
pop
ret
int3
int3
inc
push
dec
sub
mov
dec
mov
and
je
inc
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
dec
lea
jmp
or
dec
lea
jmp
or
dec
lea
jmp
or
dec
lea
jmp
cmp
je
cmp
jne
or
dec
lea
jmp
or
dec
lea
inc
mov
call
inc
mov
inc
mov
mov
inc
mov
inc
dec
add
pop
ret
jmp
jmp
jmp
jmp
jmp
dec
sub
dec
mov
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
int3
int3
dec
sub
dec
mov
dec
mov
dec
and
mov
dec
lea
call
dec
mov
dec
lea
dec
lea
call
nop
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
nop
dec
lea
dec
mov
dec
lea
dec
lea
call
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
lock
jne
dec
lea
mov
dec
mov
call
dec
add
dec
sub
jne
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
push
dec
sub
lock
jns
dec
lea
mov
dec
mov
call
dec
add
dec
sub
jne
dec
mov
dec
add
pop
ret
int3
int3
int3
inc
push
dec
sub
cmp
dec
mov
mov
jge
dec
arpl
dec
lea
dec
lea
dec
lea
call
dec
mov
dec
add
pop
ret
dec
sub
cmp
jge
dec
arpl
dec
lea
dec
lea
dec
lea
call
dec
add
ret
int3
int3
int3
jmp
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
lea
mov
xor
dec
xchg
dec
test
je
dec
mov
dec
mov
call
dec
mov
call
dec
mov
dec
test
jne
dec
add
dec
sub
jne
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
sub
dec
lea
call
neg
sbb
and
dec
add
ret
dec
jmp
int3
dec
jmp
int3
dec
jmp
int3
dec
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
cmp
jne
dec
rol
test
jne
repz
dec
ror
jmp
int3
inc
push
dec
sub
dec
mov
dec
test
je
dec
test
jne
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
jmp
dec
test
je
dec
cmp
jae
call
mov
jmp
dec
mov
dec
mov
call
xor
dec
add
pop
ret
int3
int3
int3
dec
and
and
dec
lea
dec
mov
dec
mov
ret
int3
dec
mov
dec
mov
push
dec
sub
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
test
je
call
dec
mov
dec
lea
call
dec
mov
dec
test
je
dec
mov
dec
lea
dec
mov
call
jmp
dec
and
dec
mov
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
lea
dec
mov
dec
mov
and
dec
mov
dec
mov
ret
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
lea
dec
mov
dec
mov
dec
mov
mov
mov
test
je
dec
mov
dec
test
je
call
dec
mov
dec
lea
call
dec
mov
dec
test
je
dec
mov
dec
lea
dec
mov
call
jmp
dec
and
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
sub
cmp
dec
lea
dec
mov
je
dec
mov
call
dec
add
ret
int3
int3
dec
mov
dec
test
jne
dec
lea
ret
int3
int3
int3
dec
mov
push
dec
sub
mov
dec
mov
call
test
je
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
test
je
cmp
je
dec
inc
dec
sub
jne
dec
neg
dec
sbb
dec
and
ret
inc
push
dec
sub
mov
lea
call
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
test
jne
lea
jmp
dec
and
xor
dec
add
pop
ret
int3
int3
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
call
nop
dec
mov
call
dec
mov
dec
mov
call
dec
mov
dec
cmp
jb
dec
mov
dec
sub
dec
lea
dec
cmp
jb
dec
mov
call
dec
mov
dec
cmp
jae
mov
dec
cmp
dec
cmovb
dec
add
dec
cmp
jb
dec
mov
call
xor
dec
cmp
jne
jmp
xor
dec
lea
dec
cmp
jb
dec
mov
call
dec
cmp
je
dec
sar
dec
lea
dec
mov
call
dec
mov
dec
mov
call
dec
mov
dec
lea
call
dec
mov
dec
mov
jmp
xor
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
ret
int3
int3
int3
dec
sub
call
dec
neg
sbb
neg
dec
dec
add
ret
int3
dec
mov
ret
inc
push
dec
sub
and
dec
lea
xor
inc
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
lea
dec
mov
inc
xor
call
dec
test
je
dec
and
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
xor
call
jmp
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
mov
mov
dec
mov
call
xor
mov
call
dec
lea
call
test
jne
test
jne
lea
call
call
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
call
dec
test
je
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
jmp
mov
call
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
sub
dec
and
inc
xor
inc
xor
xor
xor
call
dec
add
ret
int3
int3
jmp
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
test
jne
xor
jmp
dec
test
jne
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
jmp
dec
test
je
dec
cmp
jb
dec
mov
dec
mov
call
jmp
dec
mov
xor
call
dec
test
je
dec
cmp
jae
call
mov
jmp
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
push
dec
sub
dec
lea
mov
dec
mov
dec
mov
call
test
je
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
sub
dec
mov
dec
lea
dec
lea
call
xor
cmp
sete
dec
add
ret
inc
push
dec
sub
dec
mov
jmp
dec
mov
call
test
je
dec
mov
call
dec
test
je
dec
add
pop
ret
mov
inc
mov
dec
lea
inc
test
jne
inc
or
dec
lea
dec
lea
mov
call
dec
lea
dec
mov
call
dec
lea
dec
lea
call
dec
lea
dec
lea
dec
mov
call
int3
int3
int3
int3
dec
test
je
push
dec
sub
dec
mov
dec
mov
xor
call
test
jne
call
dec
mov
call
mov
call
mov
dec
add
pop
ret
int3
int3
int3
jmp
int3
int3
int3
dec
sub
dec
mov
call
dec
test
je
call
mov
call
mov
xor
call
dec
add
jmp
int3
int3
dec
mov
push
dec
sub
or
dec
mov
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
or
jmp
test
je
call
dec
mov
mov
call
dec
mov
call
mov
call
test
jns
or
jmp
dec
mov
dec
test
je
call
dec
and
and
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
or
xor
dec
test
setne
test
jne
call
mov
dec
and
inc
xor
inc
xor
xor
xor
call
mov
jmp
test
je
and
jmp
call
nop
dec
mov
call
mov
dec
mov
call
mov
dec
mov
dec
add
pop
ret
int3
int3
inc
push
dec
sub
dec
mov
cmp
jne
mov
call
test
jne
xor
jmp
call
test
jne
call
jmp
call
call
dec
mov
call
dec
mov
call
test
jns
call
jmp
call
test
js
call
test
js
xor
call
test
jne
inc
jmp
call
jmp
test
jne
mov
test
jle
dec
mov
cmp
jne
call
dec
test
jne
call
call
call
jmp
cmp
jne
call
mov
mov
call
dec
mov
dec
test
je
mov
dec
mov
call
dec
mov
test
je
xor
call
call
dec
or
mov
jmp
call
jmp
cmp
jne
xor
call
mov
dec
add
pop
ret
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
mov
mov
dec
mov
mov
test
jne
cmp
jne
xor
jmp
cmp
je
cmp
jne
dec
mov
dec
test
je
inc
call
mov
test
je
dec
mov
mov
dec
mov
call
mov
test
je
dec
mov
mov
dec
mov
call
mov
mov
cmp
jne
test
jne
dec
mov
xor
dec
mov
call
dec
mov
xor
dec
mov
call
dec
mov
dec
test
je
dec
mov
xor
dec
mov
inc
call
test
je
cmp
jne
dec
mov
mov
dec
mov
call
neg
sbb
and
mov
mov
je
dec
mov
dec
test
je
dec
mov
mov
dec
mov
call
mov
mov
mov
jmp
xor
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
dec
mov
dec
mov
push
dec
sub
dec
mov
mov
dec
mov
cmp
jne
call
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
mov
dec
cmp
jb
movzx
dec
mov
add
add
dec
imul
dec
cmp
jb
dec
neg
and
je
dec
sub
dec
mov
dec
add
dec
mov
dec
and
dec
shr
jne
dec
mov
dec
and
dec
shr
je
data16
nop
dec
mov
dec
add
dec
dec
jne
dec
test
je
mov
dec
inc
dec
dec
jne
ret
nop
data16
data16
dec
cmp
jae
dec
mov
dec
mov
dec
mov
dec
add
dec
mov
dec
mov
dec
dec
dec
mov
dec
mov
dec
mov
jne
jmp
nop
dec
movnti
dec
movnti
dec
movnti
dec
add
dec
movnti
dec
movnti
dec
dec
dec
movnti
dec
movnti
dec
movnti
jne
lock
jmp
int3
int3
inc
push
dec
sub
inc
mov
dec
mov
dec
mov
inc
and
inc
test
dec
mov
je
inc
mov
dec
arpl
neg
dec
add
dec
arpl
dec
and
dec
arpl
dec
mov
dec
mov
mov
dec
add
test
je
movzx
and
dec
cwde
dec
add
dec
xor
dec
mov
dec
add
pop
jmp
int3
dec
sub
dec
mov
dec
mov
dec
mov
call
mov
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
mov
dec
sub
jb
dec
cmp
jb
test
je
test
je
mov
dec
dec
mov
dec
inc
test
je
mov
dec
sub
mov
dec
add
test
je
mov
dec
sub
mov
dec
add
dec
mov
dec
shr
jne
dec
mov
dec
shr
je
dec
mov
dec
mov
dec
add
dec
dec
jne
dec
and
dec
test
jne
dec
mov
ret
nop
mov
mov
dec
inc
dec
dec
jne
dec
mov
ret
data16
data16
data16
dec
cmp
jae
dec
mov
dec
mov
dec
add
dec
mov
dec
mov
dec
mov
dec
mov
dec
dec
dec
mov
dec
mov
jne
dec
and
jmp
data16
xchg
dec
cmp
jb
mov
prefetchnta
prefetchnta
dec
add
dec
jne
dec
sub
mov
dec
mov
dec
mov
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
add
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
dec
movnti
dec
movnti
jne
dec
sub
dec
cmp
jae
lock
jmp
data16
data16
data16
xchg
dec
add
dec
cmp
jb
test
je
test
je
dec
dec
mov
dec
dec
mov
test
je
dec
sub
mov
dec
sub
mov
test
je
dec
sub
mov
dec
sub
mov
dec
mov
dec
shr
jne
dec
mov
dec
shr
je
dec
sub
dec
mov
dec
dec
dec
mov
jne
dec
and
dec
test
jne
dec
mov
ret
nop
dec
dec
mov
dec
dec
mov
jne
dec
mov
ret
data16
data16
data16
dec
cmp
jae
dec
mov
dec
mov
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
dec
dec
mov
dec
mov
jne
dec
and
jmp
data16
xchg
dec
cmp
ja
mov
dec
sub
prefetchnta
prefetchnta
dec
jne
dec
add
mov
dec
mov
dec
mov
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
sub
dec
movnti
dec
movnti
dec
mov
dec
mov
dec
dec
movnti
dec
movnti
jne
dec
sub
dec
cmp
jae
lock
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
mov
dec
neg
dec
test
je
xchg
mov
dec
inc
test
je
test
jne
dec
mov
(bad)
(bad)
(bad)
jle
mov
add
add
mov
dec
add
dec
add
dec
not
dec
xor
dec
and
je
dec
mov
test
je
test
je
dec
shr
test
je
test
je
dec
shr
test
je
test
je
shr
test
je
test
jne
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
lea
ret
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
test
je
test
mov
je
mov
jmp
mov
dec
test
cmove
mov
inc
mov
mov
mov
dec
lea
call
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
inc
mov
test
je
dec
lea
dec
lea
dec
arpl
dec
add
dec
add
inc
cmp
jle
inc
cmp
jg
dec
mov
dec
lea
inc
xor
call
dec
arpl
inc
mov
dec
add
inc
mov
xor
inc
test
je
dec
lea
dec
arpl
dec
cmp
je
inc
dec
add
inc
cmp
jb
inc
cmp
jb
dec
sub
add
je
jmp
dec
mov
dec
lea
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
dec
sub
call
dec
mov
dec
add
ret
int3
int3
int3
dec
sub
call
dec
mov
dec
add
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
call
dec
mov
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
call
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
dec
sub
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
call
dec
arpl
mov
test
je
dec
lea
dec
lea
call
dec
arpl
dec
mov
dec
add
dec
add
cmp
jle
cmp
jle
dec
sub
add
jne
xor
dec
test
jne
inc
or
jmp
inc
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
pop
ret
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
call
dec
mov
dec
mov
call
dec
mov
inc
mov
dec
lea
dec
mov
dec
add
xor
dec
mov
mov
dec
mov
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
mov
dec
mov
xor
dec
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
call
dec
mov
dec
mov
dec
mov
dec
mov
lea
dec
mov
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
and
dec
mov
dec
mov
call
dec
mov
dec
lea
mov
inc
call
mov
jmp
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
dec
sub
dec
arpl
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
xor
call
mov
test
jne
call
dec
mov
dec
mov
inc
or
inc
mov
mov
inc
mov
test
je
dec
arpl
dec
lea
dec
lea
dec
mov
dec
lea
inc
cmp
jle
inc
cmp
jle
dec
sub
inc
add
jne
test
je
lea
dec
lea
dec
arpl
dec
lea
dec
add
xor
test
je
inc
xor
dec
arpl
dec
add
dec
add
dec
test
je
mov
cmp
jle
mov
cmp
jg
inc
cmp
jl
inc
cmp
jg
inc
cmp
jne
inc
mov
lea
inc
mov
inc
dec
add
cmp
jb
inc
cmp
je
inc
mov
dec
lea
dec
arpl
dec
lea
dec
add
jmp
inc
and
inc
and
xor
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
pop
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
cmp
jae
call
dec
mov
jmp
xor
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
call
dec
mov
jmp
dec
cmp
je
dec
mov
dec
test
jne
lea
dec
add
pop
ret
xor
jmp
int3
int3
dec
mov
push
dec
sub
dec
mov
call
dec
cmp
je
call
call
dec
mov
jmp
dec
cmp
je
dec
mov
dec
test
jne
call
dec
mov
dec
add
pop
ret
call
dec
mov
dec
mov
jmp
int3
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
lea
dec
lea
inc
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
arpl
dec
lea
dec
lea
dec
mov
dec
mov
inc
xor
dec
mov
movzx
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
dec
lea
xor
dec
mov
inc
lea
cmp
je
inc
dec
add
cmp
jb
lea
cmp
ja
mov
ret
add
mov
cmp
inc
cmovbe
ret
dec
cwde
inc
mov
ret
int3
dec
sub
call
dec
test
jne
dec
lea
jmp
dec
add
dec
add
ret
dec
sub
call
dec
test
jne
dec
lea
jmp
dec
add
dec
add
ret
inc
push
dec
sub
mov
call
dec
test
jne
dec
lea
jmp
dec
add
mov
call
dec
lea
dec
test
je
dec
lea
mov
call
inc
mov
dec
add
pop
ret
int3
int3
dec
sub
test
je
mov
call
call
dec
test
je
mov
call
test
je
dec
lea
call
dec
lea
xor
inc
mov
call
dec
mov
xor
dec
mov
dec
lea
mov
dec
mov
dec
lea
dec
mov
call
dec
lea
call
mov
call
int3
int3
int3
int3
mov
inc
mov
and
inc
not
inc
and
inc
or
inc
mov
ret
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
test
je
dec
lea
dec
cmp
je
dec
mov
dec
test
je
cmp
jne
dec
mov
dec
test
je
cmp
jne
call
dec
mov
call
dec
mov
dec
test
je
cmp
jne
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
dec
test
je
cmp
jne
dec
mov
dec
sub
call
dec
mov
mov
dec
sub
call
dec
mov
dec
sub
call
dec
mov
call
dec
mov
dec
lea
dec
cmp
je
cmp
jne
call
dec
mov
call
dec
lea
mov
dec
lea
dec
cmp
je
dec
mov
dec
test
je
cmp
jne
call
dec
cmp
je
dec
mov
dec
test
je
cmp
jne
call
dec
add
dec
sub
jne
dec
mov
dec
mov
dec
mov
dec
add
pop
jmp
int3
int3
lock
dec
mov
dec
test
je
lock
dec
mov
dec
test
je
lock
dec
mov
dec
test
je
lock
dec
mov
dec
test
je
lock
dec
lea
inc
mov
dec
lea
dec
cmp
je
dec
mov
dec
test
je
lock
dec
cmp
je
dec
mov
dec
test
je
lock
dec
add
dec
sub
jne
dec
mov
lock
ret
int3
int3
int3
dec
test
je
inc
or
lock
add
dec
mov
dec
test
je
lock
add
dec
mov
dec
test
je
lock
add
dec
mov
dec
test
je
lock
add
dec
mov
dec
test
je
lock
add
dec
lea
inc
mov
dec
lea
dec
cmp
je
dec
mov
dec
test
je
lock
add
dec
cmp
je
dec
mov
dec
test
je
lock
add
dec
add
dec
sub
jne
dec
mov
lock
add
dec
mov
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
test
je
dec
test
je
dec
mov
dec
cmp
je
dec
mov
dec
mov
call
dec
test
je
dec
mov
call
inc
cmp
jne
dec
lea
dec
cmp
je
call
dec
mov
jmp
xor
dec
add
pop
ret
int3
inc
push
dec
sub
call
dec
mov
mov
test
je
dec
cmp
je
call
dec
mov
jmp
mov
call
nop
dec
lea
dec
mov
call
dec
mov
mov
call
dec
test
jne
lea
call
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
test
je
push
dec
sub
dec
mov
mov
call
nop
dec
mov
dec
test
je
lock
jne
dec
mov
dec
lea
dec
cmp
je
call
nop
mov
call
dec
cmp
je
mov
call
nop
dec
mov
call
dec
mov
dec
test
je
cmp
jne
dec
lea
dec
cmp
je
call
nop
mov
call
mov
dec
mov
dec
mov
dec
mov
call
dec
add
pop
ret
int3
dec
lea
dec
mov
jmp
int3
dec
mov
push
dec
sub
dec
lea
mov
dec
mov
dec
mov
call
test
je
dec
mov
call
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
mov
xor
dec
mov
dec
mov
dec
mov
cmp
je
dec
arpl
call
dec
lea
jmp
dec
mov
dec
cmp
je
cmp
je
dec
arpl
call
dec
lea
jmp
dec
mov
inc
cmp
je
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
call
dec
mov
dec
arpl
dec
add
dec
cmp
je
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
call
dec
lea
dec
mov
dec
arpl
dec
lea
call
cmp
je
xor
jmp
mov
test
je
test
je
inc
test
je
test
je
inc
test
je
test
je
inc
test
je
test
je
mov
mov
jmp
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
dec
sub
dec
mov
cmp
je
cmp
jne
call
and
call
int3
call
cmp
jle
call
dec
xor
dec
add
ret
int3
int3
int3
dec
mov
inc
mov
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
inc
mov
dec
mov
dec
mov
dec
mov
call
mov
call
dec
mov
dec
mov
call
inc
cmp
je
inc
cmp
jle
cmp
jle
cmp
jl
call
dec
arpl
call
dec
arpl
dec
lea
mov
mov
call
dec
arpl
dec
lea
cmp
je
call
dec
arpl
dec
lea
dec
arpl
call
dec
add
dec
mov
jmp
xor
dec
test
je
inc
mov
dec
mov
dec
mov
dec
mov
call
call
dec
arpl
dec
lea
cmp
je
call
dec
arpl
dec
lea
dec
arpl
call
dec
add
jmp
xor
inc
mov
dec
mov
dec
mov
call
dec
mov
call
jmp
inc
mov
dec
mov
dec
mov
dec
mov
mov
mov
dec
mov
jmp
call
cmp
jle
call
dec
cmp
je
inc
cmp
jle
call
inc
mov
dec
mov
dec
mov
dec
mov
call
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
dec
test
je
mov
dec
sub
cmp
jne
dec
mov
dec
test
je
cmp
je
dec
arpl
dec
mov
dec
add
dec
mov
call
jmp
call
nop
dec
add
ret
int3
int3
dec
arpl
dec
add
cmp
jl
dec
arpl
dec
arpl
dec
mov
dec
arpl
dec
add
dec
add
ret
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
test
jne
call
call
int3
xor
inc
xor
cmp
jle
call
dec
mov
dec
mov
dec
arpl
dec
lea
call
dec
mov
dec
mov
dec
arpl
inc
mov
test
jle
dec
arpl
dec
lea
call
dec
mov
dec
arpl
dec
add
call
dec
arpl
dec
mov
dec
lea
dec
mov
dec
add
call
test
jne
dec
dec
add
test
jg
jmp
inc
mov
inc
cmp
jl
dec
mov
dec
mov
dec
mov
inc
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
inc
push
push
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
inc
xor
inc
mov
inc
and
dec
and
dec
and
call
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
cmp
je
mov
call
dec
mov
dec
mov
call
dec
mov
inc
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
jmp
mov
call
and
cmp
je
mov
dec
mov
dec
mov
call
dec
mov
dec
lea
inc
mov
inc
mov
inc
mov
call
jmp
dec
mov
dec
lea
inc
mov
mov
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
test
jne
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
dec
mov
call
test
je
mov
dec
mov
call
call
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
arpl
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
xor
inc
mov
inc
cmp
je
dec
arpl
call
dec
lea
jmp
dec
mov
dec
cmp
je
inc
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
inc
cmp
je
cmp
jne
bt
jae
bt
jb
dec
arpl
dec
add
dec
mov
test
je
mov
mov
dec
mov
call
cmp
je
mov
dec
mov
call
cmp
je
dec
mov
dec
mov
dec
lea
call
dec
mov
jmp
call
jmp
mov
inc
test
je
mov
dec
mov
call
cmp
je
mov
dec
mov
call
cmp
je
dec
arpl
dec
mov
dec
mov
call
cmp
jne
dec
cmp
je
dec
lea
dec
mov
call
dec
mov
jmp
call
jmp
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
dec
cmp
jne
mov
dec
mov
call
cmp
je
mov
dec
mov
call
cmp
je
dec
arpl
dec
lea
dec
mov
call
dec
mov
dec
mov
dec
mov
call
jmp
call
jmp
mov
dec
mov
call
cmp
je
mov
dec
mov
call
cmp
je
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
call
cmp
je
mov
and
neg
sbb
neg
add
mov
mov
jmp
call
nop
mov
jmp
call
nop
xor
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
ret
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
inc
bt
jae
dec
mov
jmp
dec
arpl
dec
add
call
sub
je
cmp
jne
inc
xor
inc
cmp
je
call
dec
mov
dec
arpl
dec
add
dec
lea
dec
mov
call
dec
mov
inc
mov
dec
mov
inc
call
jmp
inc
xor
inc
cmp
je
call
dec
arpl
dec
add
dec
lea
dec
mov
call
dec
mov
dec
mov
inc
call
jmp
call
nop
dec
mov
dec
mov
dec
add
pop
ret
dec
mov
dec
mov
dec
mov
push
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
test
je
dec
mov
dec
mov
dec
mov
call
call
dec
arpl
dec
mov
dec
add
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
mov
dec
mov
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
pop
pop
ret
int3
int3
int3
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
cmp
dec
mov
dec
mov
dec
mov
dec
mov
je
call
inc
mov
dec
mov
dec
cmp
je
call
dec
mov
call
dec
cmp
je
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
dec
mov
call
test
jne
cmp
jne
call
inc
mov
dec
lea
dec
mov
dec
mov
dec
lea
inc
mov
inc
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
mov
jmp
inc
cmp
jl
inc
cmp
jg
call
dec
arpl
dec
lea
dec
arpl
dec
lea
cmp
je
call
dec
arpl
dec
lea
dec
arpl
dec
lea
dec
arpl
call
dec
add
jmp
xor
dec
test
je
call
dec
arpl
dec
lea
dec
arpl
dec
lea
cmp
je
call
dec
arpl
dec
lea
dec
arpl
dec
lea
dec
arpl
call
dec
add
jmp
xor
cmp
jne
call
dec
arpl
dec
lea
dec
arpl
dec
lea
test
jne
call
mov
dec
mov
mov
mov
dec
dec
arpl
dec
mov
dec
lea
dec
lea
dec
arpl
dec
mov
dec
add
dec
mov
dec
mov
inc
mov
dec
mov
dec
and
dec
mov
dec
mov
dec
mov
call
mov
inc
dec
add
mov
cmp
jb
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
dec
mov
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
inc
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
inc
mov
inc
mov
call
dec
lea
dec
mov
dec
mov
dec
mov
mov
call
dec
mov
dec
mov
dec
mov
call
dec
mov
dec
mov
cmp
jle
dec
lea
inc
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
call
jmp
dec
mov
call
mov
cmp
jl
cmp
jl
call
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
dec
cmp
jne
call
dec
cmp
je
call
dec
mov
call
dec
mov
dec
mov
mov
dec
mov
call
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
dec
cmp
jne
call
call
dec
cmp
je
call
dec
mov
call
dec
mov
dec
mov
dec
mov
call
inc
cmp
jne
inc
cmp
inc
mov
jle
dec
mov
call
dec
arpl
dec
add
inc
cmp
je
call
dec
arpl
dec
add
dec
arpl
call
dec
add
jmp
dec
mov
dec
lea
dec
mov
call
inc
cmp
jne
inc
inc
dec
add
inc
cmp
jl
call
int3
mov
dec
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
lea
dec
mov
call
int3
dec
mov
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
inc
cmp
jbe
inc
mov
dec
lea
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
mov
cmp
jae
cmp
jg
cmp
jg
call
dec
arpl
inc
mov
dec
add
inc
cmp
jle
call
dec
mov
dec
arpl
dec
lea
dec
mov
call
dec
mov
dec
arpl
inc
mov
jmp
call
dec
mov
dec
mov
dec
arpl
dec
add
dec
mov
dec
mov
dec
mov
call
test
jne
inc
dec
dec
add
inc
test
jg
inc
dec
dec
add
inc
xor
jmp
mov
dec
mov
inc
mov
mov
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
mov
inc
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
xor
jmp
inc
mov
dec
mov
mov
mov
inc
dec
add
mov
cmp
jb
inc
cmp
jne
mov
and
cmp
jb
mov
inc
cmp
je
dec
arpl
call
dec
add
jmp
dec
mov
dec
cmp
je
inc
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
dec
mov
dec
mov
call
inc
cmp
jne
dec
lea
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
mov
dec
mov
dec
mov
or
dec
mov
dec
mov
dec
mov
dec
mov
call
call
dec
cmp
je
call
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
inc
cmp
jbe
inc
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
call
jmp
call
int3
int3
int3
inc
push
dec
sub
dec
mov
call
dec
lea
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
mov
cmp
mov
inc
mov
inc
mov
inc
mov
jne
cmp
je
inc
cmp
jne
cmp
jne
dec
cmp
je
inc
cmp
je
mov
and
cmp
jb
inc
test
jne
mov
test
je
cmp
je
cmp
jne
and
je
inc
cmp
jne
dec
mov
dec
mov
dec
mov
call
cmp
mov
jl
cmp
jl
call
inc
mov
dec
mov
dec
mov
dec
mov
call
jmp
test
je
inc
cmp
jne
mov
cmp
jl
cmp
jl
call
dec
mov
inc
mov
jmp
dec
mov
dec
mov
dec
mov
call
jmp
cmp
jne
mov
and
cmp
jb
cmp
je
call
dec
arpl
dec
add
jmp
xor
dec
test
je
cmp
jne
cmp
jb
cmp
jbe
dec
mov
cmp
je
call
dec
mov
dec
arpl
dec
add
jmp
inc
xor
dec
test
je
movzx
dec
mov
dec
mov
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
mov
dec
mov
inc
call
jmp
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
mov
mov
dec
mov
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
pop
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
dec
test
jne
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
cmp
je
mov
test
jne
call
dec
mov
dec
mov
dec
cmp
je
dec
mov
mov
test
jne
call
dec
mov
dec
mov
test
jne
or
mov
jmp
movdqu
movdqu
dec
mov
dec
add
pop
ret
int3
int3
int3
inc
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
xor
dec
mov
inc
mov
mov
xor
dec
mov
dec
mov
inc
mov
inc
mov
mov
dec
mov
inc
lea
inc
cmp
jne
dec
lea
inc
mov
mov
xor
mov
dec
mov
call
cmp
je
inc
mov
inc
mov
jmp
call
inc
mov
cmp
inc
cmove
inc
mov
dec
mov
inc
mov
inc
cmp
jle
inc
mov
dec
mov
inc
sub
inc
cmp
je
dec
add
cmp
jne
or
inc
mov
sub
inc
sub
inc
cmp
jge
inc
lea
inc
mov
jmp
inc
mov
mov
inc
cmp
je
inc
cmp
je
inc
cmp
jne
inc
mov
mov
inc
cmp
jne
dec
mov
inc
mov
neg
dec
mov
inc
mov
sbb
mov
dec
mov
and
inc
add
call
dec
arpl
inc
cmp
je
dec
mov
(bad)
(bad)
dec
inc
mov
inc
mov
jle
xor
dec
lea
dec
div
dec
cmp
jb
dec
lea
dec
cmp
ja
dec
lea
dec
cmp
ja
dec
mov
dec
and
call
dec
sub
dec
lea
dec
test
je
mov
jmp
call
dec
mov
dec
test
je
inc
mov
dec
add
dec
test
je
inc
mov
dec
mov
mov
inc
mov
inc
mov
dec
mov
call
xor
cmp
je
mov
mov
dec
mov
mov
inc
mov
dec
mov
call
inc
xor
dec
arpl
inc
cmp
je
inc
mov
inc
bt
jae
mov
inc
cmp
je
cmp
jg
mov
mov
dec
mov
inc
mov
dec
mov
inc
mov
dec
mov
call
jmp
inc
cmp
jle
xor
dec
lea
dec
div
dec
cmp
jb
dec
lea
dec
cmp
ja
dec
lea
dec
cmp
ja
dec
mov
dec
and
call
dec
sub
dec
lea
dec
cmp
je
mov
jmp
call
inc
xor
dec
mov
dec
cmp
je
inc
mov
dec
add
inc
mov
jmp
dec
mov
dec
cmp
je
mov
inc
mov
dec
mov
inc
mov
mov
dec
mov
call
xor
cmp
je
mov
xor
dec
mov
inc
mov
dec
mov
dec
mov
cmp
jne
mov
dec
mov
jmp
mov
dec
mov
dec
mov
inc
mov
call
mov
dec
lea
inc
cmp
jne
call
dec
lea
inc
cmp
jne
call
mov
jmp
dec
mov
dec
mov
inc
cmp
jne
dec
mov
inc
mov
inc
mov
mov
test
jne
dec
mov
mov
inc
mov
call
inc
mov
cmp
jne
xor
jmp
dec
mov
dec
mov
cmp
je
xor
dec
lea
mov
mov
mov
dec
mov
call
dec
mov
dec
cmp
je
inc
mov
mov
dec
mov
inc
mov
mov
dec
mov
call
dec
arpl
inc
mov
inc
cmp
jne
mov
jmp
inc
cmp
inc
mov
jle
dec
mov
dec
cmp
ja
dec
add
dec
cmp
ja
dec
lea
dec
cmp
ja
dec
mov
(bad)
(bad)
dec
dec
and
dec
mov
call
dec
sub
dec
lea
dec
test
je
mov
jmp
call
dec
mov
dec
test
je
inc
mov
dec
add
inc
mov
dec
test
jne
xor
jmp
dec
arpl
xor
dec
mov
call
inc
mov
inc
mov
mov
mov
inc
mov
dec
mov
dec
mov
call
mov
test
jne
xor
jmp
mov
dec
lea
dec
mov
mov
mov
inc
mov
dec
mov
call
mov
dec
mov
xor
dec
cmp
cmove
dec
lea
inc
cmp
jne
call
jmp
mov
inc
mov
mov
mov
inc
mov
dec
mov
call
mov
xor
dec
cmp
je
dec
mov
call
dec
cmp
je
dec
cmp
je
dec
mov
call
mov
dec
mov
dec
xor
call
dec
mov
dec
mov
dec
mov
dec
lea
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
mov
dec
mov
dec
lea
dec
mov
inc
mov
call
mov
inc
mov
dec
lea
inc
mov
mov
mov
mov
dec
mov
dec
mov
dec
mov
mov
inc
mov
mov
mov
call
cmp
je
dec
mov
and
dec
lea
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
inc
push
dec
sub
cmp
dec
arpl
jne
dec
mov
movzx
and
jmp
dec
lea
xor
call
dec
mov
cmp
jle
dec
lea
mov
mov
call
inc
mov
jmp
dec
mov
inc
movzx
inc
and
cmp
je
dec
mov
and
inc
mov
dec
add
pop
ret
int3
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
xor
dec
mov
or
dec
mov
call
dec
mov
dec
test
jne
cmp
jbe
mov
call
inc
lea
inc
cmp
inc
mov
cmova
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
xor
dec
mov
dec
mov
inc
or
inc
xor
dec
mov
dec
mov
call
dec
mov
dec
test
jne
cmp
jbe
mov
call
inc
lea
inc
cmp
inc
mov
inc
cmova
inc
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
xor
dec
mov
dec
mov
inc
or
dec
mov
dec
mov
call
dec
mov
dec
test
jne
dec
test
je
cmp
jbe
mov
call
inc
lea
inc
cmp
inc
mov
inc
cmova
inc
cmp
jne
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
int3
dec
mov
dec
sub
dec
lea
call
dec
mov
dec
mov
inc
xor
dec
lea
dec
mov
call
dec
mov
dec
cmp
je
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
xor
call
jmp
dec
mov
dec
mov
dec
lea
dec
add
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
mov
mov
call
xor
call
dec
lea
call
cmp
jne
mov
call
call
mov
dec
mov
call
dec
add
ret
int3
int3
inc
push
dec
sub
dec
test
je
dec
test
je
dec
test
jne
inc
mov
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
dec
add
pop
ret
dec
mov
inc
mov
dec
inc
inc
mov
dec
inc
test
je
dec
sub
jne
dec
test
jne
mov
call
mov
jmp
xor
jmp
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
cmp
ja
mov
dec
test
dec
cmovne
dec
mov
dec
test
jne
call
mov
call
mov
call
dec
mov
dec
mov
xor
call
dec
mov
dec
test
jne
cmp
je
dec
mov
call
test
je
jmp
call
mov
call
mov
dec
mov
jmp
call
call
mov
xor
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
jmp
int3
xor
dec
jmp
int3
int3
int3
dec
jmp
int3
xor
ret
int3
dec
sub
mov
cmp
je
call
or
dec
add
jmp
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
lea
dec
mov
mov
mov
mov
mov
dec
lea
dec
mov
mov
call
nop
dec
mov
lock
mov
call
mov
call
nop
dec
mov
dec
test
jne
dec
mov
dec
mov
dec
mov
call
nop
mov
call
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
push
dec
sub
call
mov
mov
call
dec
mov
dec
test
jne
lea
mov
call
dec
mov
dec
test
je
mov
dec
mov
call
dec
mov
test
je
xor
call
call
dec
or
mov
jmp
call
xor
mov
call
dec
mov
dec
mov
dec
add
pop
ret
inc
push
dec
sub
call
dec
mov
dec
test
jne
lea
call
dec
mov
dec
add
pop
ret
dec
test
je
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
test
je
call
dec
mov
dec
lea
dec
cmp
je
call
mov
call
nop
dec
mov
dec
mov
dec
test
je
lock
jne
dec
lea
dec
mov
dec
cmp
je
call
nop
mov
call
mov
call
nop
dec
mov
dec
test
je
dec
mov
call
dec
cmp
je
dec
lea
dec
cmp
je
cmp
jne
dec
mov
call
nop
mov
call
dec
mov
call
dec
mov
dec
add
pop
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
cmp
je
dec
test
jne
call
mov
dec
mov
xor
call
dec
mov
call
dec
add
pop
ret
int3
int3
inc
push
dec
sub
call
call
test
je
dec
lea
call
mov
cmp
je
mov
mov
call
dec
mov
dec
test
je
mov
dec
mov
call
test
je
xor
dec
mov
call
call
dec
or
mov
mov
jmp
call
xor
dec
add
pop
ret
int3
int3
int3
dec
sub
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
dec
or
jmp
dec
mov
dec
mov
xor
call
dec
add
ret
int3
int3
inc
push
dec
sub
mov
call
mov
call
dec
mov
call
mov
dec
add
pop
dec
jmp
int3
int3
int3
inc
push
dec
sub
mov
dec
lea
call
dec
test
je
dec
lea
dec
mov
call
dec
test
je
mov
call
dec
add
pop
ret
int3
int3
int3
inc
push
dec
sub
mov
call
mov
call
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
dec
cmp
jae
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
test
je
call
dec
add
dec
cmp
jb
dec
mov
dec
add
pop
ret
int3
dec
mov
push
dec
sub
xor
dec
mov
dec
mov
dec
cmp
jae
test
jne
dec
mov
dec
test
je
call
dec
add
dec
cmp
jb
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
push
dec
sub
dec
cmp
mov
je
dec
lea
call
test
je
mov
call
call
dec
lea
dec
lea
call
test
jne
dec
lea
call
dec
lea
dec
lea
jmp
dec
mov
dec
test
je
call
dec
add
dec
cmp
jb
dec
cmp
je
dec
lea
call
test
je
inc
xor
xor
inc
lea
call
xor
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
inc
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
inc
mov
mov
inc
mov
mov
call
nop
cmp
je
mov
inc
mov
test
jne
dec
mov
call
dec
mov
dec
mov
dec
test
je
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
sub
dec
mov
dec
cmp
jb
call
dec
cmp
jne
jmp
dec
cmp
jb
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
dec
mov
call
dec
cmp
jne
dec
cmp
je
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
jmp
dec
lea
dec
lea
call
dec
lea
dec
lea
call
nop
inc
test
je
mov
call
inc
test
jne
mov
inc
lea
call
inc
mov
call
inc
mov
call
int3
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
inc
xor
inc
lea
jmp
xor
xor
inc
lea
jmp
int3
int3
int3
inc
push
dec
sub
call
dec
mov
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
lea
call
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
sub
test
dec
mov
dec
mov
dec
mov
jne
xor
dec
mov
dec
mov
cmp
jbe
dec
lea
mov
dec
cmp
jb
mov
dec
cmp
jae
cmp
je
cmp
je
mov
dec
lea
dec
mov
dec
add
call
test
js
jle
inc
cmp
jne
dec
cmp
je
dec
lea
call
test
je
mov
dec
mov
call
mov
inc
mov
dec
mov
dec
add
call
dec
mov
mov
dec
arpl
dec
mov
dec
mov
dec
add
dec
mov
dec
mov
dec
mov
call
call
inc
dec
add
cmp
jae
jmp
xor
jmp
dec
mov
xor
dec
sub
cmp
jbe
dec
lea
mov
dec
cmp
jb
mov
dec
cmp
jae
dec
cmp
jb
dec
cmp
jae
inc
test
jne
cmp
je
mov
dec
cmp
je
jmp
dec
mov
dec
add
mov
dec
mov
inc
mov
dec
add
inc
call
inc
dec
add
cmp
jb
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
int3
and
ret
inc
push
dec
sub
dec
mov
mov
call
nop
dec
mov
dec
test
je
dec
mov
dec
mov
dec
lea
dec
test
je
dec
cmp
jne
dec
mov
dec
mov
call
jmp
dec
mov
dec
mov
jmp
dec
mov
call
dec
and
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
sub
dec
mov
test
je
mov
inc
mov
cmp
jne
dec
inc
test
je
dec
test
jne
nop
dec
mov
add
add
and
cmp
ja
dec
mov
dec
mov
dec
cmp
jne
dec
mov
(bad)
(bad)
(bad)
jle
add
dec
xor
dec
add
dec
xor
dec
test
je
jmp
dec
sbb
dec
sbb
ret
xor
ret
data16
test
je
test
je
dec
shr
test
je
test
je
dec
shr
test
je
test
je
shr
test
je
test
jne
xor
ret
dec
sbb
dec
sbb
ret
dec
mov
ret
inc
push
dec
sub
dec
mov
dec
mov
call
dec
test
je
dec
mov
call
test
je
mov
jmp
xor
dec
add
pop
ret
int3
int3
mov
dec
sub
inc
xor
mov
xor
call
dec
mov
dec
test
je
dec
lea
inc
mov
xor
dec
mov
mov
call
mov
dec
add
ret
dec
sub
dec
mov
call
dec
and
dec
add
ret
int3
int3
inc
push
dec
sub
mov
mov
test
jne
mov
jmp
cmp
cmovl
dec
arpl
mov
mov
call
dec
mov
dec
test
jne
lea
dec
mov
mov
call
dec
mov
dec
test
jne
mov
jmp
xor
dec
lea
dec
mov
dec
add
dec
add
dec
sub
je
dec
mov
jmp
inc
xor
dec
lea
inc
lea
dec
mov
dec
lea
dec
mov
dec
sar
and
dec
mov
dec
imul
dec
mov
dec
cmp
je
dec
cmp
je
dec
test
jne
mov
dec
inc
dec
add
dec
sub
jne
xor
dec
add
pop
ret
int3
int3
dec
sub
call
cmp
je
call
dec
mov
dec
add
jmp
int3
inc
push
dec
sub
dec
mov
dec
lea
dec
cmp
jb
dec
lea
dec
cmp
ja
dec
mov
dec
mov
stos
stos
stos
sub
ror
jmp
retf
jmp
adc
in
pop
add
bts
jmp
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
cmp
dec
mov
jge
add
call
bts
jmp
dec
lea
call
dec
add
pop
ret
int3
int3
int3
dec
sub
dec
lea
dec
cmp
jb
dec
lea
dec
cmp
ja
btr
dec
sub
dec
mov
stos
stos
stos
sub
jmp
dec
mov
dec
shr
lea
call
jmp
dec
add
call
dec
add
ret
int3
int3
dec
sub
cmp
jge
btr
add
call
jmp
dec
lea
call
dec
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
sub
dec
xor
dec
xor
dec
mov
dec
mov
call
dec
add
ret
int3
int3
int3
int3
int3
int3
nop
dec
mov
dec
mov
inc
mov
dec
mov
jmp
int3
int3
int3
int3
int3
int3
xchg
ret
int3
int3
int3
int3
int3
int3
nop
ret
int3
int3
int3
dec
sub
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
or
jmp
mov
dec
add
ret
int3
int3
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
lea
mov
xor
dec
mov
cmp
je
inc
dec
add
cmp
jb
cmp
jae
mov
call
cmp
je
mov
call
test
jne
cmp
je
cmp
je
dec
lea
inc
mov
dec
lea
dec
mov
dec
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
lea
inc
mov
xor
mov
call
test
jne
dec
lea
dec
lea
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
lea
call
dec
inc
dec
cmp
jbe
dec
lea
call
dec
lea
dec
lea
dec
lea
inc
mov
dec
sub
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
lea
dec
mov
dec
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
arpl
dec
mov
dec
mov
dec
add
dec
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
lea
inc
mov
dec
mov
call
jmp
mov
call
dec
mov
dec
test
je
dec
cmp
je
dec
arpl
dec
add
dec
mov
call
dec
mov
dec
and
dec
lea
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
int3
dec
sub
mov
call
cmp
je
mov
call
test
jne
cmp
jne
mov
call
mov
call
dec
add
ret
int3
dec
mov
ret
dec
mov
push
dec
sub
dec
arpl
mov
call
dec
cmp
je
dec
mov
mov
cmp
jne
inc
test
jne
cmp
jne
test
je
call
mov
dec
mov
call
dec
cmp
je
mov
call
dec
mov
call
test
jne
call
mov
jmp
xor
mov
call
dec
mov
dec
mov
dec
sar
inc
and
dec
lea
dec
mov
dec
imul
inc
mov
test
je
mov
call
or
jmp
xor
dec
mov
dec
add
pop
ret
dec
mov
dec
mov
mov
push
inc
push
inc
push
dec
sub
dec
arpl
cmp
jne
call
xor
mov
call
mov
or
jmp
xor
cmp
jl
cmp
jae
dec
mov
dec
mov
dec
sar
dec
lea
and
dec
imul
dec
mov
movsx
and
jne
call
mov
call
mov
dec
mov
inc
xor
inc
xor
xor
xor
call
or
jmp
mov
call
nop
dec
mov
test
je
mov
call
mov
jmp
call
mov
or
mov
call
mov
jmp
call
mov
call
mov
dec
mov
inc
xor
inc
xor
xor
xor
call
or
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
pop
ret
inc
push
dec
sub
test
dec
mov
je
test
je
dec
mov
call
and
xor
dec
mov
dec
mov
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
push
dec
sub
mov
xor
dec
mov
and
cmp
jne
test
je
mov
sub
test
jle
call
dec
mov
inc
mov
mov
call
cmp
jne
mov
test
jns
and
mov
jmp
or
or
dec
mov
and
mov
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
test
jne
call
jmp
call
test
je
or
jmp
bt
jae
dec
mov
call
mov
call
neg
sbb
jmp
xor
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
inc
mov
inc
xor
xor
lea
call
nop
xor
mov
inc
or
cmp
jge
dec
arpl
dec
mov
dec
cmp
je
dec
mov
test
je
mov
call
nop
dec
mov
dec
mov
test
je
inc
cmp
jne
call
inc
cmp
je
inc
inc
inc
mov
jmp
inc
test
jne
test
je
call
inc
cmp
inc
cmove
mov
dec
mov
dec
mov
mov
call
inc
mov
jmp
mov
call
inc
cmp
inc
cmove
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
ret
mov
jmp
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
lea
call
nop
mov
inc
lea
dec
mov
call
dec
mov
inc
xor
dec
cmp
jne
or
jmp
dec
mov
inc
mov
mov
dec
add
dec
cmp
jae
inc
mov
dec
or
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
add
dec
mov
dec
add
dec
cmp
jb
mov
inc
cmp
je
dec
mov
dec
cmp
je
dec
lea
dec
arpl
dec
add
mov
cmp
cmovl
mov
cmp
jge
dec
lea
mov
dec
mov
call
dec
mov
dec
cmp
je
dec
mov
mov
inc
add
mov
dec
lea
dec
cmp
jae
inc
mov
dec
or
inc
mov
inc
mov
inc
and
inc
mov
inc
mov
inc
mov
inc
mov
dec
add
dec
mov
dec
add
dec
cmp
jb
mov
dec
inc
cmp
jl
jmp
mov
jmp
dec
lea
inc
mov
inc
cmp
jle
dec
cmp
je
dec
cmp
je
inc
test
je
inc
test
jne
dec
mov
call
inc
cmp
je
dec
arpl
dec
mov
dec
sar
inc
and
dec
imul
dec
add
dec
mov
dec
mov
inc
mov
inc
mov
dec
lea
mov
call
inc
cmp
je
inc
inc
jmp
or
jmp
inc
dec
inc
dec
add
cmp
jl
inc
mov
dec
mov
dec
mov
dec
imul
dec
add
dec
cmp
je
dec
cmp
je
or
jmp
mov
inc
lea
neg
sbb
add
mov
inc
cmp
cmove
call
dec
mov
dec
cmp
je
dec
cmp
je
dec
mov
call
inc
cmp
je
dec
mov
movzx
cmp
jne
or
jmp
cmp
jne
or
dec
lea
mov
call
inc
cmp
je
inc
jmp
or
jmp
or
dec
mov
inc
inc
dec
inc
dec
cmp
jl
mov
call
xor
jmp
or
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
ret
int3
int3
int3
dec
mov
push
dec
sub
dec
lea
dec
mov
dec
test
je
dec
lea
jmp
cmp
je
dec
lea
call
dec
mov
dec
add
dec
add
dec
cmp
jb
dec
mov
call
dec
and
dec
lea
dec
add
dec
cmp
jl
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
cmp
jne
call
dec
mov
xor
dec
test
jne
or
jmp
cmp
je
inc
dec
mov
call
dec
lea
mov
test
jne
lea
mov
dec
arpl
call
dec
mov
dec
mov
dec
test
je
dec
mov
cmp
je
dec
mov
call
cmp
lea
je
dec
arpl
mov
dec
mov
call
dec
mov
dec
test
je
dec
mov
dec
mov
dec
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
add
dec
arpl
dec
add
cmp
jne
dec
mov
dec
mov
call
dec
and
dec
and
mov
xor
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
mov
call
dec
and
jmp
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
inc
and
dec
mov
dec
mov
inc
mov
dec
test
je
dec
mov
dec
add
xor
cmp
jne
xor
test
inc
mov
sete
dec
inc
mov
jmp
inc
inc
dec
test
je
mov
mov
dec
inc
movzx
dec
inc
mov
call
test
je
inc
inc
dec
test
je
mov
mov
dec
inc
dec
inc
inc
test
je
test
jne
inc
cmp
je
inc
cmp
jne
dec
test
je
mov
jmp
dec
dec
xor
cmp
je
cmp
je
cmp
jne
dec
inc
jmp
cmp
je
dec
test
je
dec
mov
dec
add
inc
inc
mov
xor
jmp
dec
inc
inc
cmp
je
cmp
jne
test
jne
test
je
dec
lea
cmp
jne
dec
mov
jmp
xor
xor
test
sete
mov
shr
jmp
dec
dec
test
je
mov
dec
inc
inc
inc
test
jne
mov
test
je
test
jne
cmp
je
cmp
je
test
je
movsx
call
dec
test
je
test
je
mov
dec
inc
mov
dec
inc
inc
inc
mov
mov
dec
inc
jmp
test
je
dec
inc
inc
inc
inc
inc
dec
inc
jmp
dec
test
je
mov
dec
inc
inc
inc
jmp
dec
test
je
dec
and
inc
inc
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
ret
int3
dec
mov
dec
mov
push
dec
sub
cmp
jne
call
dec
lea
inc
mov
xor
dec
mov
mov
call
dec
mov
dec
mov
dec
test
je
cmp
jne
dec
mov
dec
lea
dec
lea
inc
xor
xor
dec
mov
dec
mov
call
dec
arpl
dec
mov
(bad)
(bad)
call
dec
cmp
jae
dec
arpl
dec
cmp
jae
dec
lea
dec
cmp
jb
dec
mov
call
dec
mov
dec
test
je
dec
lea
dec
lea
dec
lea
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
mov
inc
dec
xor
inc
mov
jmp
or
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
mov
inc
xor
dec
mov
inc
lea
inc
cmp
jne
call
dec
mov
dec
cmp
je
mov
jmp
call
mov
cmp
cmove
mov
cmp
jne
dec
cmp
jne
call
dec
mov
dec
cmp
jne
xor
jmp
dec
mov
inc
cmp
je
dec
add
inc
cmp
jne
dec
add
inc
cmp
jne
dec
mov
dec
mov
dec
sub
dec
sar
dec
mov
xor
inc
lea
xor
inc
mov
dec
mov
call
dec
arpl
inc
cmp
je
dec
mov
call
dec
mov
dec
cmp
je
dec
mov
dec
mov
inc
lea
dec
mov
xor
xor
mov
dec
mov
call
inc
cmp
jne
dec
mov
call
dec
mov
dec
mov
call
dec
mov
jmp
cmp
je
inc
cmp
jne
call
dec
mov
dec
cmp
je
inc
cmp
je
dec
inc
inc
cmp
jne
dec
inc
inc
cmp
jne
sub
inc
dec
arpl
dec
mov
call
dec
mov
dec
cmp
jne
dec
mov
call
jmp
dec
mov
dec
mov
dec
mov
call
dec
mov
call
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
dec
mov
push
dec
sub
dec
lea
dec
lea
jmp
dec
mov
dec
test
je
call
dec
add
dec
cmp
jb
dec
mov
dec
add
pop
ret
dec
mov
push
dec
sub
dec
lea
dec
lea
jmp
dec
mov
dec
test
je
call
dec
add
dec
cmp
jb
dec
mov
dec
add
pop
ret
ret
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
mov
call
inc
xor
dec
mov
dec
cmp
je
dec
mov
dec
arpl
dec
mov
cmp
je
dec
mov
dec
add
dec
shl
dec
add
dec
cmp
jb
dec
mov
dec
shl
dec
add
dec
cmp
jae
cmp
je
dec
mov
dec
cmp
je
dec
mov
dec
cmp
je
dec
cmp
jne
dec
mov
inc
lea
jmp
dec
cmp
jne
or
jmp
dec
mov
dec
mov
mov
cmp
jne
dec
arpl
mov
inc
add
dec
mov
inc
cmp
jge
dec
shl
dec
mov
inc
inc
dec
add
dec
mov
mov
mov
add
inc
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
mov
inc
call
mov
jmp
dec
mov
inc
call
dec
mov
jmp
xor
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
sub
mov
cmp
jne
mov
call
jmp
xor
dec
add
ret
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
and
dec
mov
cdq
sub
add
(bad)
je
dec
not
dec
mov
jmp
dec
lea
call
dec
mov
call
inc
mov
dec
xor
call
inc
mov
dec
xor
call
dec
lea
inc
mov
dec
xor
call
dec
mov
dec
xor
dec
mov
(bad)
inc
add
dec
mov
cdq
sub
add
dec
cmove
dec
mov
dec
not
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
test
jne
call
dec
arpl
mov
dec
add
jne
call
xor
test
je
dec
mov
dec
arpl
dec
lea
dec
arpl
dec
add
dec
cmp
jl
inc
dec
add
cmp
jb
test
je
lea
dec
lea
inc
mov
jmp
or
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
jmp
dec
sub
dec
arpl
dec
mov
dec
mov
inc
mov
cmp
jne
dec
mov
dec
mov
call
dec
add
ret
int3
dec
arpl
dec
mov
inc
mov
ret
dec
mov
push
dec
sub
inc
mov
dec
lea
dec
mov
call
dec
mov
dec
arpl
dec
mov
cmp
jle
mov
dec
mov
dec
add
pop
ret
int3
inc
push
dec
sub
dec
lea
dec
mov
call
dec
mov
dec
arpl
dec
mov
mov
dec
add
pop
ret
int3
int3
int3
dec
sub
call
dec
mov
dec
test
je
call
jmp
call
dec
add
ret
int3
dec
sub
dec
mov
call
dec
test
je
call
jmp
call
int3
dec
add
ret
dec
sub
dec
lea
call
dec
mov
dec
add
ret
inc
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
xor
dec
mov
inc
mov
mov
xor
dec
mov
inc
mov
dec
mov
lea
inc
cmp
jne
dec
lea
dec
lea
inc
mov
mov
call
cmp
je
mov
jmp
call
inc
mov
cmp
inc
cmove
inc
mov
inc
cmp
je
inc
cmp
je
inc
cmp
jne
mov
cmp
jne
dec
mov
mov
neg
inc
mov
dec
mov
sbb
mov
mov
and
dec
mov
add
call
dec
arpl
inc
cmp
je
inc
mov
jle
dec
mov
(bad)
(bad)
(bad)
jg
cmp
ja
dec
lea
dec
cmp
ja
dec
lea
dec
cmp
ja
dec
mov
(bad)
(bad)
dec
dec
and
call
dec
sub
dec
lea
dec
cmp
je
mov
jmp
call
dec
mov
dec
cmp
je
inc
mov
dec
add
jmp
dec
mov
dec
cmp
je
dec
mov
xor
dec
mov
dec
add
call
inc
mov
dec
mov
mov
mov
inc
mov
dec
mov
call
cmp
je
dec
mov
inc
mov
dec
mov
inc
mov
call
mov
dec
lea
inc
cmp
jne
call
mov
jmp
inc
mov
dec
mov
inc
cmp
jne
dec
mov
inc
mov
mov
cmp
jne
dec
mov
mov
inc
mov
call
cmp
jne
xor
jmp
cmp
je
dec
lea
dec
mov
mov
mov
mov
dec
mov
call
dec
mov
dec
cmp
je
dec
mov
dec
mov
inc
mov
dec
mov
inc
mov
inc
mov
dec
mov
call
mov
dec
cmp
je
dec
mov
call
mov
dec
mov
dec
xor
call
dec
mov
dec
mov
dec
mov
dec
lea
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
dec
mov
dec
mov
push
dec
sub
mov
dec
mov
dec
lea
inc
mov
dec
mov
call
mov
inc
mov
dec
lea
inc
mov
mov
mov
mov
dec
mov
inc
mov
dec
mov
mov
dec
mov
call
cmp
je
dec
mov
and
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
ret
int3
int3
int3
dec
mov
jmp
dec
mov
dec
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
mov
xor
mov
xor
mov
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
sub
je
cmp
je
call
mov
dec
and
inc
xor
inc
xor
xor
xor
call
or
jmp
dec
lea
dec
mov
mov
mov
jmp
dec
lea
dec
mov
mov
mov
jmp
dec
lea
dec
mov
mov
mov
jmp
call
dec
mov
dec
test
jne
or
jmp
dec
mov
dec
mov
dec
arpl
cmp
je
dec
add
dec
mov
dec
shl
dec
add
dec
cmp
jb
dec
mov
dec
shl
dec
add
dec
cmp
jae
cmp
je
xor
dec
lea
dec
mov
jmp
dec
lea
dec
mov
mov
mov
call
dec
mov
dec
cmp
jne
xor
jmp
dec
test
jne
inc
lea
call
int3
test
je
xor
call
nop
cmp
je
cmp
je
cmp
je
dec
mov
inc
mov
jmp
dec
mov
dec
mov
dec
and
cmp
jne
inc
mov
mov
jmp
inc
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
dec
arpl
dec
add
dec
mov
dec
and
inc
mov
mov
jmp
call
dec
mov
test
je
xor
call
mov
cmp
jne
mov
mov
inc
call
jmp
mov
inc
call
cmp
je
cmp
je
cmp
jne
dec
mov
cmp
jne
inc
mov
xor
dec
lea
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
int3
dec
test
je
push
dec
sub
dec
mov
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
mov
call
dec
add
pop
ret
int3
int3
dec
test
je
push
dec
sub
dec
mov
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
add
pop
ret
dec
test
je
push
dec
sub
dec
mov
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
mov
dec
cmp
je
call
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
lea
xor
xor
dec
mov
cmp
jne
dec
arpl
mov
inc
dec
lea
dec
lea
dec
lea
dec
mov
call
test
je
dec
lea
dec
add
inc
dec
cmp
jl
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
dec
arpl
dec
add
dec
and
xor
jmp
int3
int3
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
lea
dec
lea
dec
mov
dec
mov
dec
test
je
cmp
je
dec
mov
call
dec
mov
call
dec
and
dec
add
dec
cmp
jl
dec
mov
dec
test
je
cmp
jne
call
dec
add
dec
cmp
jl
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
dec
arpl
dec
lea
dec
add
dec
mov
dec
jmp
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
arpl
mov
dec
cmp
jne
call
lea
call
mov
call
dec
mov
dec
add
dec
lea
dec
cmp
je
mov
jmp
mov
call
dec
mov
dec
test
jne
call
mov
xor
jmp
mov
call
nop
dec
cmp
jne
mov
dec
mov
call
test
jne
dec
mov
call
call
mov
xor
jmp
dec
mov
jmp
dec
mov
call
nop
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
dec
mov
push
dec
sub
dec
arpl
dec
lea
dec
add
dec
cmp
jne
call
test
jne
lea
call
dec
mov
dec
mov
dec
add
pop
dec
jmp
dec
mov
dec
mov
dec
mov
push
dec
sub
dec
lea
dec
mov
mov
dec
mov
dec
mov
xor
call
inc
xor
dec
lea
inc
lea
inc
movzx
inc
mov
inc
mov
inc
mov
rep
dec
lea
dec
sub
mov
mov
dec
inc
dec
sub
jne
dec
lea
mov
mov
mov
dec
inc
dec
sub
jne
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
mov
dec
lea
call
mov
test
je
xor
dec
lea
mov
inc
dec
inc
cmp
jb
mov
mov
dec
lea
jmp
movzx
inc
movzx
inc
cmp
ja
inc
sub
dec
mov
dec
lea
inc
lea
mov
call
dec
add
mov
test
jne
mov
and
dec
lea
mov
mov
inc
mov
mov
dec
lea
mov
xor
dec
mov
call
and
mov
mov
mov
dec
lea
mov
dec
mov
dec
lea
inc
mov
xor
mov
call
and
mov
mov
mov
dec
lea
mov
dec
mov
dec
lea
inc
mov
xor
mov
call
dec
lea
dec
lea
xor
inc
test
je
or
mov
jmp
inc
test
je
or
mov
mov
jmp
mov
dec
inc
dec
inc
dec
add
dec
sub
jne
jmp
xor
dec
lea
inc
lea
inc
lea
cmp
ja
or
lea
jmp
inc
cmp
ja
or
lea
mov
jmp
mov
inc
dec
inc
cmp
jb
dec
mov
dec
xor
call
dec
lea
dec
mov
dec
mov
dec
mov
pop
ret
int3
dec
mov
push
dec
sub
call
dec
mov
mov
test
je
dec
cmp
je
dec
mov
jmp
mov
call
nop
dec
mov
dec
mov
dec
cmp
je
dec
test
je
lock
jne
dec
lea
dec
mov
dec
cmp
je
call
dec
mov
dec
mov
dec
mov
dec
mov
lock
dec
mov
mov
call
dec
test
jne
lea
call
dec
mov
dec
mov
dec
add
pop
ret
inc
push
dec
sub
mov
dec
lea
xor
call
and
cmp
jne
mov
call
cmp
je
dec
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
dec
mov
mov
mov
jmp
cmp
je
dec
mov
and
mov
dec
add
pop
ret
dec
mov
push
push
push
inc
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
call
xor
mov
cmp
jne
dec
mov
call
jmp
dec
lea
mov
dec
mov
dec
mov
inc
mov
cmp
je
inc
add
dec
add
dec
add
cmp
jb
cmp
je
cmp
je
movzx
call
cmp
je
dec
lea
mov
call
cmp
je
dec
lea
xor
inc
mov
call
mov
mov
inc
cmp
jbe
dec
lea
cmp
je
cmp
je
movzx
movzx
cmp
ja
sub
dec
lea
inc
add
or
dec
add
dec
sub
jne
dec
add
cmp
jne
dec
lea
mov
or
dec
add
dec
sub
jne
mov
sub
je
sub
je
sub
je
inc
cmp
je
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
inc
mov
jmp
mov
dec
lea
movzx
mov
rep
jmp
cmp
jne
or
jmp
dec
lea
xor
inc
mov
call
dec
lea
dec
lea
dec
add
inc
mov
dec
lea
dec
mov
inc
cmp
je
cmp
je
movzx
movzx
cmp
ja
dec
lea
inc
mov
inc
add
inc
or
movzx
dec
add
cmp
jbe
dec
add
cmp
jne
dec
add
dec
add
dec
sub
jne
mov
sub
inc
mov
je
sub
je
sub
je
inc
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
mov
dec
lea
dec
lea
mov
movzx
dec
add
mov
dec
add
dec
sub
jne
dec
mov
call
xor
dec
mov
dec
xor
call
dec
mov
dec
add
inc
pop
inc
pop
pop
pop
pop
ret
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
mov
inc
or
call
dec
mov
call
dec
mov
mov
call
inc
mov
cmp
je
mov
call
dec
mov
xor
dec
cmp
je
dec
mov
dec
mov
inc
mov
call
mov
dec
mov
inc
mov
call
inc
mov
cmp
jne
dec
mov
lock
jne
dec
mov
dec
lea
dec
cmp
je
call
jmp
dec
lea
dec
mov
lock
test
jne
test
jne
mov
call
nop
mov
mov
mov
mov
mov
mov
mov
mov
dec
lea
cmp
jge
dec
arpl
movzx
inc
mov
inc
mov
jmp
mov
mov
cmp
jge
dec
arpl
mov
inc
mov
inc
mov
jmp
mov
cmp
jge
dec
arpl
mov
inc
mov
inc
mov
jmp
dec
mov
lock
jne
dec
mov
dec
cmp
je
call
dec
mov
lock
mov
call
jmp
cmp
jne
dec
lea
dec
cmp
je
dec
mov
call
call
mov
jmp
xor
inc
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
dec
sub
cmp
jne
mov
call
mov
xor
dec
add
ret
inc
push
dec
sub
dec
mov
dec
test
je
dec
test
je
dec
test
jne
inc
mov
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
dec
add
pop
ret
cmp
je
dec
inc
dec
sub
jne
dec
test
jne
inc
mov
jmp
inc
mov
dec
inc
mov
dec
inc
test
je
dec
sub
jne
dec
test
jne
inc
mov
call
mov
jmp
xor
jmp
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
test
jne
dec
test
jne
dec
test
jne
xor
jmp
dec
test
je
dec
test
je
dec
test
jne
inc
mov
jmp
dec
test
jne
inc
mov
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
dec
add
pop
ret
dec
mov
dec
mov
dec
cmp
jne
inc
mov
dec
inc
inc
mov
dec
inc
test
je
dec
sub
jne
jmp
inc
mov
dec
inc
inc
mov
dec
inc
test
je
dec
sub
je
dec
sub
jne
dec
test
jne
inc
mov
dec
test
jne
dec
cmp
jne
inc
mov
inc
lea
jmp
mov
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
sub
dec
cmp
jb
test
je
xchg
mov
cmp
jne
dec
inc
dec
dec
test
jne
dec
mov
dec
shr
jne
dec
test
je
mov
cmp
jne
dec
inc
dec
dec
jne
dec
xor
ret
sbb
sbb
ret
nop
dec
shr
je
dec
mov
dec
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
dec
cmp
jne
dec
mov
dec
cmp
jne
dec
add
dec
dec
jne
dec
and
dec
mov
dec
shr
je
dec
mov
dec
cmp
jne
dec
add
dec
dec
jne
dec
and
jmp
dec
add
dec
add
dec
add
dec
mov
dec
bswap
dec
bswap
dec
cmp
sbb
sbb
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
test
je
dec
sub
dec
mov
dec
mov
add
add
pop
mov
inc
mov
dec
inc
cmp
jne
dec
dec
je
test
je
dec
test
jne
dec
lea
and
cmp
ja
dec
mov
dec
mov
dec
cmp
jne
dec
add
dec
sub
dec
mov
(bad)
(bad)
(bad)
jle
adc
lock
dec
xor
dec
test
je
jmp
dec
xor
ret
dec
sbb
dec
sbb
ret
test
je
test
je
dec
shr
test
je
test
je
dec
shr
test
je
test
je
shr
test
je
test
jne
dec
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
dec
mov
ret
dec
neg
sbb
and
ret
int3
int3
int3
dec
sub
dec
mov
dec
xor
dec
mov
dec
lea
inc
mov
mov
mov
call
test
jne
or
jmp
dec
lea
call
dec
mov
dec
xor
call
dec
add
ret
int3
inc
push
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
lea
dec
mov
dec
xor
dec
mov
dec
mov
inc
mov
xor
dec
mov
dec
mov
mov
dec
mov
inc
mov
inc
mov
dec
mov
cmp
je
dec
lea
call
cmp
je
cmp
jne
dec
lea
inc
mov
call
cmp
je
cmp
jne
mov
inc
cmp
je
inc
mov
test
jle
dec
arpl
dec
mov
(bad)
(bad)
(bad)
jg
cmp
ja
dec
lea
dec
cmp
ja
dec
lea
dec
cmp
ja
dec
mov
(bad)
(bad)
dec
dec
and
call
dec
sub
dec
lea
dec
test
je
mov
jmp
dec
mov
call
lea
jmp
inc
mov
dec
mov
mov
inc
mov
mov
dec
mov
call
mov
test
jne
xor
jmp
call
dec
mov
dec
test
je
mov
dec
add
jmp
xor
dec
test
je
dec
arpl
xor
dec
mov
dec
add
call
dec
mov
inc
mov
mov
inc
mov
mov
dec
mov
call
inc
xor
inc
cmp
je
dec
cmp
je
mov
dec
mov
dec
mov
mov
inc
mov
dec
mov
xor
inc
mov
dec
mov
call
inc
cmp
je
dec
mov
jmp
inc
cmp
jne
dec
mov
dec
mov
inc
mov
dec
mov
xor
inc
mov
inc
mov
dec
mov
call
mov
inc
cmp
je
dec
arpl
mov
call
dec
mov
dec
cmp
je
dec
mov
dec
mov
inc
mov
dec
mov
xor
inc
mov
mov
dec
mov
call
inc
cmp
jne
dec
mov
call
dec
mov
jmp
inc
cmp
je
dec
mov
mov
dec
lea
cmp
jne
call
dec
mov
dec
mov
dec
xor
call
dec
lea
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
dec
mov
dec
mov
push
dec
sub
dec
arpl
mov
dec
lea
dec
mov
call
inc
lea
inc
cmp
ja
dec
mov
dec
mov
movzx
jmp
mov
dec
lea
sar
inc
movzx
call
mov
test
je
inc
mov
inc
mov
mov
inc
lea
jmp
inc
mov
mov
inc
mov
dec
mov
mov
dec
lea
mov
mov
mov
dec
lea
mov
dec
lea
dec
mov
call
test
jne
cmp
je
dec
mov
and
xor
jmp
movzx
and
cmp
je
dec
mov
and
dec
lea
dec
mov
dec
mov
dec
mov
pop
ret
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
test
je
xor
dec
lea
dec
div
dec
cmp
jae
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
xor
jmp
dec
imul
mov
dec
test
dec
cmove
xor
dec
cmp
ja
dec
mov
lea
dec
mov
call
dec
test
jne
cmp
je
dec
mov
call
test
jne
dec
test
je
mov
jmp
dec
test
je
mov
dec
mov
dec
add
pop
ret
int3
dec
mov
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
test
jne
dec
mov
call
jmp
dec
test
jne
call
jmp
dec
cmp
ja
dec
mov
mov
dec
test
dec
cmove
dec
mov
xor
dec
mov
call
dec
mov
dec
test
jne
cmp
je
dec
mov
call
test
je
dec
cmp
jbe
dec
mov
call
call
mov
xor
dec
mov
dec
mov
dec
add
pop
ret
call
dec
mov
call
mov
call
mov
jmp
call
dec
mov
call
mov
call
mov
dec
mov
jmp
int3
dec
mov
push
dec
sub
dec
lea
mov
dec
mov
call
dec
mov
dec
add
dec
sub
jne
dec
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
mov
cmp
je
xor
ret
dec
arpl
dec
add
xor
cmp
jne
mov
cmp
sete
repz
int3
dec
arpl
inc
xor
dec
mov
dec
add
inc
movzx
inc
movzx
dec
lea
inc
test
je
mov
dec
cmp
jb
mov
add
dec
cmp
jb
inc
inc
dec
add
inc
cmp
jb
xor
ret
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
mov
dec
lea
dec
mov
call
test
je
dec
sub
dec
mov
dec
mov
call
dec
test
je
mov
shr
not
and
jmp
xor
dec
add
ret
int3
int3
int3
dec
mov
ret
dec
mov
ret
dec
sub
call
mov
jmp
cmp
jne
mov
call
xor
mov
dec
add
ret
int3
int3
int3
dec
mov
push
dec
sub
dec
arpl
inc
mov
dec
mov
mov
call
dec
cmp
jne
call
mov
dec
or
jmp
mov
dec
lea
inc
mov
dec
mov
call
mov
cmp
jne
call
test
je
mov
call
jmp
dec
mov
dec
mov
dec
lea
dec
sar
and
dec
mov
dec
imul
and
dec
mov
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
mov
call
dec
sub
dec
mov
dec
xor
dec
mov
xor
xor
inc
mov
dec
mov
dec
arpl
mov
inc
test
jne
xor
jmp
dec
test
jne
call
and
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
or
jmp
dec
mov
dec
mov
dec
lea
dec
sar
inc
and
dec
mov
dec
mov
dec
imul
inc
mov
inc
add
inc
sar
inc
cmp
je
inc
cmp
jne
inc
mov
not
test
je
inc
test
je
xor
mov
inc
lea
call
mov
call
test
je
dec
lea
dec
mov
inc
test
je
call
xor
dec
lea
dec
mov
dec
lea
cmp
dec
mov
dec
mov
sete
call
test
je
test
je
inc
test
je
call
and
dec
mov
mov
inc
test
je
inc
mov
mov
inc
test
jne
dec
mov
mov
inc
xor
cmp
dec
lea
dec
mov
inc
sete
inc
cmp
je
inc
mov
mov
inc
mov
mov
inc
and
dec
lea
jmp
movsx
call
test
je
dec
mov
dec
sub
dec
add
dec
cmp
jle
dec
lea
inc
mov
dec
mov
call
cmp
je
dec
inc
jmp
inc
mov
dec
mov
dec
lea
call
cmp
je
dec
and
dec
and
mov
dec
lea
dec
lea
inc
mov
xor
mov
dec
inc
dec
mov
call
mov
test
je
dec
mov
dec
and
dec
lea
dec
mov
dec
lea
dec
lea
dec
mov
inc
mov
call
test
je
mov
inc
sub
add
cmp
jl
mov
inc
test
je
dec
mov
dec
and
inc
mov
dec
lea
dec
lea
inc
lea
dec
mov
dec
lea
dec
mov
call
test
je
cmp
jl
inc
inc
jmp
inc
cmp
je
inc
cmp
jne
movzx
inc
xor
cmp
mov
inc
sete
dec
add
inc
cmp
je
inc
cmp
jne
movzx
call
cmp
jne
add
inc
test
je
mov
mov
call
cmp
jne
inc
inc
mov
inc
sub
inc
cmp
jb
mov
dec
mov
mov
test
jne
test
je
cmp
jne
call
mov
call
mov
jmp
mov
dec
mov
inc
dec
mov
inc
mov
dec
mov
inc
mov
mov
jmp
call
mov
jmp
mov
jmp
dec
lea
dec
mov
inc
test
je
xor
dec
mov
inc
test
jne
inc
test
je
lea
inc
mov
dec
lea
xor
mov
inc
sub
inc
cmp
jae
mov
dec
inc
cmp
jne
mov
inc
inc
dec
inc
dec
inc
dec
inc
mov
dec
inc
dec
cmp
jb
dec
and
dec
lea
inc
mov
inc
sub
dec
lea
inc
mov
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
call
test
je
add
dec
lea
dec
sub
dec
arpl
dec
cmp
jl
mov
mov
inc
sub
inc
cmp
jb
jmp
call
mov
jmp
inc
cmp
jne
inc
test
je
mov
inc
mov
dec
lea
xor
mov
inc
sub
inc
cmp
jae
movzx
dec
add
cmp
jne
mov
inc
add
dec
add
dec
add
dec
add
mov
dec
add
dec
cmp
jb
dec
and
dec
lea
inc
mov
inc
sub
dec
lea
inc
mov
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
call
test
je
add
dec
lea
dec
sub
dec
arpl
dec
cmp
jl
mov
mov
inc
sub
inc
cmp
jb
jmp
inc
test
je
inc
mov
dec
lea
xor
mov
inc
sub
inc
cmp
jae
movzx
dec
add
cmp
jne
inc
mov
dec
add
dec
add
dec
add
mov
dec
add
dec
cmp
jb
dec
and
dec
and
dec
lea
sub
dec
lea
mov
mov
mov
cdq
sub
xor
sar
inc
mov
dec
lea
dec
mov
call
inc
mov
test
je
xor
dec
mov
dec
and
dec
arpl
dec
lea
inc
mov
dec
lea
dec
mov
dec
lea
inc
sub
dec
mov
call
test
je
add
inc
cmp
jg
jmp
call
mov
inc
cmp
jg
mov
inc
mov
inc
sub
inc
cmp
jb
jmp
dec
mov
dec
and
dec
lea
inc
mov
dec
mov
call
test
je
mov
xor
jmp
call
mov
jmp
mov
call
jmp
dec
lea
dec
mov
inc
test
je
inc
cmp
je
call
mov
call
and
jmp
sub
mov
dec
mov
dec
xor
call
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
dec
mov
dec
mov
mov
push
inc
push
inc
push
inc
push
inc
push
dec
sub
inc
mov
dec
mov
dec
arpl
cmp
jne
call
xor
mov
call
mov
or
jmp
xor
cmp
jl
cmp
jae
dec
mov
dec
mov
dec
sar
dec
lea
and
dec
imul
dec
mov
movsx
and
jne
call
mov
call
mov
dec
mov
inc
xor
inc
xor
xor
xor
call
or
jmp
mov
call
nop
dec
mov
test
je
inc
mov
dec
mov
mov
call
mov
jmp
call
mov
call
mov
or
mov
call
mov
jmp
call
mov
call
mov
dec
mov
inc
xor
inc
xor
xor
xor
call
or
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
ret
int3
int3
int3
dec
sub
cmp
jne
call
mov
jmp
test
js
cmp
jae
dec
arpl
dec
lea
dec
mov
and
dec
sar
dec
imul
dec
mov
movsx
and
jmp
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
xor
dec
add
ret
int3
inc
push
dec
sub
mov
dec
lea
call
dec
mov
inc
movzx
dec
mov
inc
movzx
and
cmp
je
dec
mov
and
dec
add
pop
ret
int3
int3
int3
inc
push
dec
sub
mov
dec
lea
xor
call
dec
mov
inc
movzx
dec
mov
inc
movzx
and
cmp
je
dec
mov
and
dec
add
pop
ret
int3
dec
mov
dec
mov
inc
push
dec
sub
xor
lea
call
nop
lea
mov
cmp
jge
dec
arpl
dec
mov
dec
cmp
je
dec
mov
test
je
call
cmp
je
inc
mov
cmp
jl
dec
mov
dec
mov
dec
add
call
dec
mov
dec
mov
call
dec
mov
dec
and
inc
mov
jmp
mov
call
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
dec
mov
dec
mov
push
dec
sub
test
js
cmp
jae
dec
arpl
dec
lea
dec
mov
and
dec
sar
dec
imul
dec
mov
test
je
dec
cmp
je
cmp
jne
test
je
sub
je
cmp
jne
mov
jmp
mov
jmp
mov
xor
call
dec
mov
dec
or
xor
jmp
call
mov
call
and
or
dec
mov
dec
mov
dec
add
pop
ret
dec
sub
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
dec
arpl
dec
lea
dec
mov
and
dec
sar
dec
imul
dec
mov
test
je
dec
mov
jmp
call
and
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
dec
or
dec
add
ret
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
arpl
dec
mov
dec
sar
dec
lea
and
dec
imul
dec
mov
mov
cmp
jne
lea
call
nop
cmp
jne
dec
lea
mov
call
neg
sbb
and
inc
mov
call
test
je
dec
mov
dec
lea
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
int3
dec
arpl
dec
lea
dec
mov
and
dec
sar
dec
imul
dec
mov
dec
lea
dec
jmp
dec
mov
dec
mov
push
push
inc
push
inc
push
inc
push
dec
sub
inc
mov
dec
mov
dec
mov
call
xor
dec
mov
dec
cmp
jne
dec
lea
call
dec
mov
dec
test
je
dec
lea
dec
mov
call
dec
test
je
dec
mov
call
dec
lea
dec
mov
dec
mov
call
dec
mov
call
dec
lea
dec
mov
dec
mov
call
dec
mov
call
dec
lea
dec
mov
dec
mov
call
dec
mov
call
dec
mov
dec
mov
dec
test
je
dec
lea
dec
mov
call
dec
mov
call
dec
mov
jmp
dec
mov
jmp
dec
mov
dec
mov
dec
cmp
je
dec
cmp
je
dec
mov
call
dec
mov
dec
mov
call
dec
mov
dec
test
je
dec
test
je
call
dec
test
je
dec
lea
inc
mov
dec
lea
dec
mov
inc
lea
dec
mov
inc
call
test
je
test
jne
bts
jmp
dec
mov
dec
cmp
je
call
dec
test
je
call
dec
mov
dec
test
je
dec
mov
dec
cmp
je
call
dec
test
je
dec
mov
call
dec
mov
dec
mov
call
dec
test
je
inc
mov
dec
mov
dec
mov
dec
mov
call
jmp
xor
dec
mov
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
pop
pop
ret
dec
sub
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
or
dec
add
ret
dec
mov
mov
push
push
inc
push
dec
sub
dec
arpl
cmp
jne
call
mov
or
jmp
test
js
cmp
jae
dec
mov
dec
mov
dec
sar
dec
lea
and
dec
imul
dec
mov
movsx
and
jne
call
mov
dec
and
inc
xor
inc
xor
xor
xor
call
or
jmp
mov
call
nop
dec
mov
test
je
mov
call
dec
mov
call
test
jne
call
mov
jmp
xor
test
je
call
mov
call
mov
or
mov
call
mov
jmp
call
mov
dec
and
inc
xor
inc
xor
xor
xor
call
or
dec
mov
dec
add
inc
pop
pop
pop
ret
int3
dec
mov
dec
mov
push
dec
sub
mov
dec
mov
dec
lea
inc
mov
inc
mov
call
dec
mov
inc
movzx
inc
test
jne
test
je
dec
mov
dec
mov
inc
movzx
and
jmp
xor
test
je
mov
cmp
je
dec
mov
and
dec
mov
dec
mov
dec
add
pop
ret
int3
mov
inc
mov
inc
xor
xor
jmp
int3
int3
xor
inc
lea
jmp
int3
mov
jmp
int3
int3
dec
sub
dec
mov
dec
xor
dec
mov
cmp
mov
je
dec
mov
dec
cmp
jne
call
dec
mov
dec
cmp
je
dec
and
dec
lea
dec
lea
inc
mov
call
test
jne
cmp
jne
call
cmp
jne
and
call
dec
and
dec
and
mov
dec
lea
dec
lea
inc
mov
xor
mov
dec
mov
call
dec
mov
dec
cmp
je
dec
and
dec
lea
dec
lea
inc
mov
call
test
je
mov
jmp
mov
jmp
mov
dec
mov
dec
xor
call
dec
add
ret
dec
mov
dec
mov
dec
mov
push
dec
sub
xor
dec
mov
dec
mov
dec
mov
dec
cmp
je
dec
cmp
je
inc
cmp
jne
dec
cmp
je
mov
xor
dec
mov
dec
mov
dec
mov
dec
add
pop
ret
dec
lea
dec
mov
call
dec
mov
inc
cmp
jne
dec
cmp
je
movzx
mov
inc
cmp
je
dec
mov
and
mov
jmp
movzx
dec
lea
call
cmp
je
dec
mov
inc
mov
inc
cmp
jle
inc
cmp
jl
mov
mov
dec
cmp
setne
dec
mov
mov
mov
dec
mov
call
dec
mov
cmp
jne
dec
arpl
dec
cmp
jb
inc
cmp
je
mov
inc
cmp
je
dec
mov
and
jmp
call
mov
inc
cmp
je
dec
mov
and
or
jmp
mov
inc
mov
dec
cmp
setne
inc
lea
dec
mov
mov
dec
mov
dec
mov
mov
call
cmp
jne
jmp
int3
int3
int3
inc
xor
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
call
dec
test
je
dec
mov
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
cmp
jmp
inc
test
je
inc
cmp
jl
inc
cmp
jg
inc
mov
dec
mov
xor
dec
lea
inc
cmp
jle
dec
lea
inc
movzx
mov
call
dec
mov
jmp
dec
mov
inc
movzx
movzx
and
test
je
inc
mov
dec
inc
jmp
mov
inc
cmp
jne
or
jmp
inc
cmp
jne
inc
mov
dec
inc
inc
test
js
inc
cmp
je
inc
cmp
jg
inc
test
jne
inc
cmp
je
inc
mov
jmp
cmp
je
cmp
je
inc
mov
jmp
inc
mov
jmp
inc
cmp
jne
inc
cmp
jne
cmp
je
cmp
jne
inc
mov
dec
add
dec
mov
xor
or
inc
div
inc
mov
inc
movzx
inc
movzx
inc
test
je
inc
movsx
sub
jmp
inc
test
je
lea
inc
movsx
cmp
ja
sub
add
inc
cmp
jae
or
inc
cmp
jb
jne
cmp
jbe
or
dec
test
jne
dec
dec
inc
test
jne
dec
test
dec
cmovne
xor
jmp
inc
imul
add
inc
mov
dec
inc
jmp
mov
inc
test
jne
inc
test
jne
mov
and
je
cmp
ja
test
jne
cmp
jbe
call
mov
inc
test
je
or
jmp
inc
mov
and
neg
sbb
neg
add
dec
test
je
dec
mov
inc
test
je
neg
cmp
je
dec
mov
and
mov
jmp
dec
test
je
dec
mov
inc
cmp
je
dec
mov
and
xor
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
ret
int3
int3
dec
sub
xor
inc
mov
dec
mov
mov
dec
mov
cmp
jne
dec
lea
jmp
xor
call
dec
add
ret
dec
mov
push
dec
sub
dec
arpl
dec
lea
call
cmp
jae
dec
mov
cmp
jle
dec
lea
mov
mov
call
dec
mov
jmp
dec
mov
movzx
and
test
je
dec
mov
movzx
jmp
cmp
je
dec
mov
and
mov
jmp
dec
mov
cmp
jle
mov
dec
lea
sar
inc
movzx
call
test
je
inc
mov
inc
mov
mov
mov
jmp
call
mov
mov
inc
mov
mov
dec
mov
mov
dec
lea
mov
inc
mov
mov
dec
lea
mov
dec
mov
mov
mov
dec
lea
call
test
je
cmp
movzx
je
movzx
shl
or
cmp
je
dec
mov
and
dec
mov
dec
add
pop
ret
dec
sub
cmp
jne
lea
cmp
ja
add
mov
jmp
xor
call
dec
add
ret
dec
sub
dec
and
and
inc
mov
dec
lea
inc
xor
mov
inc
mov
call
dec
mov
dec
add
ret
int3
dec
sub
dec
mov
dec
cmp
je
dec
cmp
je
call
dec
mov
dec
cmp
je
dec
cmp
je
call
dec
add
ret
int3
jmp
jmp
jmp
jmp
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
call
inc
mov
inc
mov
inc
mov
inc
and
inc
mov
inc
and
inc
and
inc
cmove
inc
test
je
dec
mov
dec
mov
dec
mov
dec
mov
call
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
dec
add
inc
pop
ret
int3
dec
lea
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
dec
mov
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
ret
int3
int3
jmp
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
movsx
call
cmp
je
dec
inc
movzx
call
test
jne
movsx
call
cmp
jne
dec
add
dec
mov
mov
dec
mov
dec
mov
mov
mov
dec
inc
mov
mov
mov
mov
dec
inc
test
jne
cmp
je
dec
mov
and
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
dec
lea
call
inc
mov
dec
mov
inc
test
je
dec
mov
dec
mov
mov
inc
cmp
je
dec
inc
inc
mov
inc
test
jne
mov
dec
inc
test
je
jmp
cmp
je
cmp
je
dec
inc
mov
test
jne
dec
mov
dec
dec
cmp
je
dec
mov
dec
mov
mov
cmp
jne
dec
dec
mov
dec
inc
dec
inc
mov
test
jne
cmp
je
dec
mov
and
dec
add
pop
ret
int3
int3
int3
movsd
comisd
jb
mov
ret
xor
ret
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
test
je
dec
lea
call
dec
mov
dec
mov
jmp
dec
lea
call
inc
mov
inc
mov
dec
add
pop
ret
int3
int3
inc
xor
jmp
xor
jmp
int3
xor
jmp
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
lea
inc
mov
dec
arpl
call
inc
xor
dec
cmp
jne
call
inc
lea
inc
xor
inc
xor
xor
xor
mov
dec
mov
call
inc
cmp
je
dec
mov
and
mov
jmp
dec
cmp
ja
call
mov
inc
xor
inc
xor
xor
xor
mov
dec
mov
call
inc
cmp
je
dec
mov
and
jmp
inc
mov
inc
cmp
cmovg
add
dec
cwde
dec
cmp
ja
call
mov
jmp
dec
mov
inc
cmp
je
cmp
dec
mov
inc
sete
dec
add
test
inc
setg
inc
test
je
dec
mov
call
dec
arpl
dec
mov
dec
lea
dec
add
call
inc
xor
cmp
dec
mov
jne
mov
dec
lea
inc
cmp
jle
mov
mov
dec
mov
dec
inc
dec
mov
dec
mov
mov
mov
inc
cmp
dec
mov
dec
lea
sete
dec
add
dec
add
dec
sub
dec
cmp
dec
mov
dec
lea
dec
cmove
call
inc
cmp
je
inc
xor
inc
xor
xor
xor
dec
mov
call
dec
lea
inc
cmp
je
mov
dec
mov
cmp
je
inc
mov
inc
sub
jns
inc
neg
mov
inc
cmp
jl
mov
inc
imul
sar
mov
shr
add
add
imul
inc
add
inc
cmp
jl
mov
inc
imul
sar
mov
shr
add
add
imul
inc
add
inc
add
test
je
cmp
jne
dec
lea
inc
mov
call
inc
cmp
je
dec
mov
and
xor
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
ret
int3
inc
push
push
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
inc
mov
dec
lea
dec
lea
dec
mov
call
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
inc
mov
call
inc
mov
jmp
dec
test
je
dec
or
dec
cmp
je
xor
cmp
dec
mov
sete
dec
sub
xor
test
setg
dec
sub
xor
cmp
inc
lea
sete
xor
test
setg
dec
add
dec
lea
dec
add
call
test
je
mov
jmp
dec
mov
inc
mov
inc
mov
dec
mov
dec
lea
dec
mov
dec
mov
mov
dec
mov
call
dec
mov
dec
xor
call
dec
add
inc
pop
pop
pop
pop
ret
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
lea
inc
mov
dec
mov
inc
mov
inc
mov
call
inc
xor
inc
cmp
inc
cmovl
dec
cmp
jne
call
inc
lea
inc
xor
inc
xor
xor
xor
mov
dec
mov
call
inc
cmp
je
dec
mov
and
mov
jmp
dec
cmp
ja
call
mov
inc
xor
inc
xor
xor
xor
mov
dec
mov
call
inc
cmp
je
dec
mov
and
jmp
lea
inc
mov
dec
arpl
dec
cmp
ja
call
mov
jmp
dec
mov
mov
dec
shr
dec
and
dec
cmp
jne
dec
lea
dec
cmp
dec
lea
inc
mov
dec
mov
dec
cmove
dec
mov
inc
mov
call
inc
cmp
je
inc
mov
inc
cmp
je
dec
mov
and
jmp
cmp
jne
mov
dec
inc
mov
mov
mov
mov
neg
sbb
and
add
mov
dec
lea
call
dec
cmp
je
neg
sbb
and
add
mov
inc
mov
inc
cmp
jmp
dec
mov
add
add
je
mov
dec
inc
inc
mov
inc
mov
dec
mov
(bad)
dec
add
rol
fadd
rcr
and
add
neg
dec
mov
add
lock
ror
loopne
jmp
push
inc
mov
dec
mov
dec
add
dec
and
dec
neg
dec
sbb
inc
and
jmp
mov
dec
add
inc
xor
dec
mov
dec
inc
inc
cmp
jne
inc
mov
jmp
dec
mov
dec
mov
dec
mov
mov
inc
mov
dec
test
jbe
dec
mov
add
sldt
jmp
inc
mov
dec
and
dec
and
dec
shr
inc
add
cmp
jbe
add
inc
add
mov
dec
shr
dec
inc
dec
inc
cmp
jge
inc
cmp
jl
dec
mov
inc
mov
dec
and
dec
and
dec
shr
cmp
jbe
dec
lea
cmp
je
cmp
jne
inc
mov
dec
dec
jmp
dec
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
inc
cmp
jle
inc
mov
inc
mov
dec
mov
mov
call
inc
mov
dec
add
inc
xor
inc
lea
inc
cmp
dec
cmove
inc
neg
sbb
and
add
mov
dec
mov
dec
shr
and
dec
sub
js
mov
dec
add
jmp
mov
dec
add
dec
neg
dec
cmp
dec
mov
inc
mov
jl
dec
mov
movs
fwait
les
dec
imul
dec
sar
dec
mov
dec
shr
dec
add
inc
lea
dec
imul
mov
dec
inc
dec
add
dec
cmp
jne
dec
cmp
jl
dec
mov
cmp
imul
dec
add
dec
sar
dec
mov
dec
shr
dec
add
inc
lea
dec
imul
mov
dec
inc
dec
add
dec
cmp
jne
dec
cmp
jl
dec
mov
data16
imul
dec
sar
dec
mov
dec
shr
dec
add
inc
lea
dec
imul
mov
dec
inc
dec
add
inc
add
inc
cmp
mov
inc
mov
je
dec
mov
and
xor
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
pop
inc
pop
inc
pop
ret
int3
int3
int3
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
push
dec
sub
inc
mov
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
dec
inc
mov
call
dec
test
jne
call
dec
and
lea
inc
xor
inc
xor
xor
xor
mov
call
inc
cmp
je
dec
mov
and
mov
jmp
dec
test
jne
call
dec
and
lea
inc
xor
inc
xor
xor
xor
mov
call
inc
cmp
je
dec
mov
and
jmp
cmp
je
cmp
jne
xor
inc
cmp
dec
arpl
sete
dec
add
mov
mov
inc
cmp
jne
mov
dec
inc
inc
cmp
jg
dec
mov
call
dec
lea
dec
mov
dec
lea
call
mov
dec
inc
jmp
dec
arpl
dec
add
test
jle
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
lea
call
dec
mov
dec
mov
dec
mov
mov
mov
inc
mov
test
jns
neg
cmp
jne
mov
mov
cmp
cmovge
test
je
dec
mov
call
dec
arpl
dec
mov
dec
lea
dec
add
call
dec
arpl
mov
dec
mov
call
cmp
je
dec
mov
and
xor
dec
mov
dec
mov
dec
mov
dec
mov
dec
add
inc
pop
ret
int3
inc
push
push
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
inc
mov
dec
lea
dec
lea
dec
mov
call
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
inc
mov
call
inc
mov
jmp
dec
test
je
dec
or
dec
cmp
je
xor
cmp
dec
mov
sete
dec
sub
inc
mov
xor
dec
lea
inc
add
cmp
sete
dec
add
call
test
je
mov
jmp
dec
mov
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
mov
call
dec
mov
dec
xor
call
dec
add
inc
pop
pop
pop
pop
ret
int3
int3
inc
push
push
push
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
mov
dec
lea
dec
lea
dec
mov
call
dec
test
jne
call
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
jmp
dec
test
je
inc
mov
xor
inc
dec
cmp
sete
dec
or
dec
lea
dec
cmp
je
dec
mov
dec
sub
dec
lea
inc
mov
dec
mov
call
test
je
mov
jmp
mov
dec
inc
cmp
setl
cmp
jl
cmp
jge
test
je
mov
dec
inc
test
jne
mov
dec
mov
dec
lea
inc
mov
dec
mov
dec
mov
dec
mov
mov
call
jmp
dec
mov
inc
mov
inc
mov
dec
mov
dec
lea
dec
mov
dec
mov
mov
dec
mov
call
dec
mov
dec
xor
call
dec
add
inc
pop
pop
pop
pop
pop
ret
dec
sub
inc
cmp
je
inc
cmp
je
inc
cmp
jne
dec
mov
inc
mov
dec
mov
call
jmp
inc
cmp
je
inc
cmp
je
dec
mov
inc
mov
dec
mov
mov
mov
call
jmp
dec
mov
inc
mov
dec
mov
mov
mov
call
jmp
dec
mov
inc
mov
dec
mov
mov
mov
call
dec
add
ret
int3
int3
int3
dec
sub
mov
dec
and
mov
mov
mov
call
dec
add
ret
dec
mov
inc
xor
mov
dec
inc
inc
cmp
jne
dec
dec
dec
cmp
je
cmp
jne
cmp
dec
cmove
dec
mov
ret
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
mov
and
and
and
dec
lea
inc
xor
dec
mov
call
dec
lea
dec
mov
mov
call
mov
test
jne
cmp
jne
cmp
je
dec
mov
and
mov
jmp
cmp
jne
cmp
je
dec
mov
and
mov
jmp
test
jne
test
je
cmp
je
dec
mov
and
jmp
cmp
je
dec
mov
and
xor
dec
mov
dec
xor
call
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
lea
dec
mov
call
dec
lea
dec
lea
dec
mov
and
and
and
dec
lea
inc
xor
dec
mov
call
dec
lea
dec
mov
mov
call
mov
test
jne
cmp
jne
cmp
je
dec
mov
and
mov
jmp
cmp
jne
cmp
je
dec
mov
and
mov
jmp
test
jne
test
je
cmp
je
dec
mov
and
jmp
cmp
je
dec
mov
and
xor
dec
mov
dec
xor
call
dec
mov
dec
add
pop
ret
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
test
jne
call
mov
dec
and
inc
xor
inc
xor
xor
xor
mov
call
mov
jmp
dec
test
je
xor
inc
test
mov
inc
cmovg
inc
dec
cwde
dec
cmp
ja
call
mov
jmp
mov
dec
lea
jmp
inc
cmp
je
inc
movsx
dec
inc
jmp
mov
mov
dec
inc
inc
dec
inc
test
jg
mov
js
inc
cmp
jl
jmp
mov
dec
dec
cmp
je
inc
cmp
jne
inc
inc
jmp
dec
lea
call
dec
lea
dec
mov
dec
lea
call
xor
dec
mov
dec
add
pop
ret
int3
int3
int3
dec
mov
dec
mov
inc
movzx
inc
mov
mov
inc
mov
inc
and
mov
inc
shr
inc
and
dec
mov
mov
inc
and
mov
inc
movzx
test
je
cmp
je
mov
inc
add
jmp
inc
mov
jmp
inc
test
jne
test
jne
inc
and
inc
and
jmp
mov
inc
add
xor
mov
inc
shl
shl
shr
inc
mov
inc
or
or
bt
inc
mov
jb
inc
mov
inc
mov
add
mov
shr
or
lea
inc
mov
mov
inc
mov
inc
add
bt
jae
inc
or
dec
mov
dec
mov
inc
mov
ret
int3
int3
inc
push
push
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
dec
mov
dec
lea
dec
lea
dec
mov
dec
mov
call
dec
lea
dec
lea
dec
mov
inc
xor
dec
lea
dec
mov
movzx
inc
lea
dec
lea
inc
mov
call
dec
lea
dec
mov
mov
movsx
dec
mov
mov
movsx
mov
call
test
je
dec
and
inc
xor
inc
xor
xor
xor
call
dec
mov
dec
mov
dec
mov
dec
xor
call
dec
add
pop
pop
pop
ret
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
movzx
xor
inc
mov
mov
and
lea
mov
mov
and
mov
mov
sub
mov
movzx
shl
mov
cmp
jne
inc
mov
dec
mov
cmp
jne
dec
add
dec
cmp
jl
jmp
dec
mov
mov
mov
jmp
inc
mov
dec
lea
inc
mov
dec
mov
inc
or
mov
dec
mov
mov
inc
mov
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
inc
sar
sub
dec
arpl
inc
sub
inc
mov
inc
bt
jae
inc
mov
inc
mov
dec
arpl
shl
not
inc
test
jne
inc
lea
dec
cwde
jmp
cmp
jne
dec
add
dec
cmp
jl
jmp
inc
lea
inc
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
sub
dec
arpl
inc
mov
shl
lea
cmp
jb
cmp
jae
inc
mov
inc
sub
inc
mov
dec
arpl
dec
cmp
jl
inc
cmp
je
mov
inc
mov
inc
lea
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
dec
sub
jns
inc
mov
inc
mov
shl
inc
and
inc
lea
dec
arpl
dec
cmp
jge
dec
lea
inc
mov
dec
sub
xor
dec
shl
call
inc
cmp
je
add
mov
mov
sub
cmp
jge
dec
mov
mov
inc
mov
mov
jmp
cmp
jg
sub
dec
lea
inc
mov
dec
mov
inc
mov
inc
mov
dec
mov
mov
mov
cdq
mov
dec
mov
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
mov
inc
shl
inc
sub
inc
not
inc
mov
mov
mov
shr
inc
mov
inc
or
inc
and
mov
inc
mov
dec
add
inc
mov
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
inc
mov
inc
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
inc
sar
sub
dec
arpl
inc
sub
inc
mov
inc
bt
jae
inc
mov
inc
mov
dec
arpl
shl
not
inc
test
jne
inc
lea
dec
cwde
jmp
cmp
jne
dec
add
dec
cmp
jl
jmp
inc
lea
inc
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
sub
dec
arpl
inc
mov
inc
shl
mov
inc
lea
cmp
jb
inc
cmp
jae
mov
inc
sub
inc
mov
dec
arpl
dec
cmp
jl
cmp
je
mov
mov
inc
lea
inc
cmp
jb
inc
cmp
jae
mov
inc
mov
dec
sub
jns
inc
mov
inc
mov
shl
inc
and
inc
lea
dec
arpl
dec
cmp
jge
dec
lea
inc
mov
dec
sub
xor
dec
shl
call
mov
inc
mov
inc
mov
inc
dec
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
inc
mov
inc
shl
inc
sub
inc
not
inc
mov
inc
mov
mov
shr
inc
mov
inc
or
inc
and
mov
inc
mov
dec
add
inc
mov
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
dec
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
inc
mov
mov
jmp
mov
cdq
inc
and
add
cmp
jl
inc
mov
inc
and
mov
sub
dec
mov
bts
mov
inc
sar
mov
inc
shl
inc
mov
inc
mov
inc
not
dec
mov
sub
inc
mov
inc
mov
inc
mov
and
shr
mov
inc
or
mov
inc
mov
inc
mov
dec
add
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
mov
inc
mov
mov
inc
add
jmp
inc
mov
btr
inc
mov
inc
and
inc
add
inc
mov
sub
inc
sar
inc
mov
mov
mov
dec
mov
inc
shl
inc
sub
inc
not
inc
mov
mov
inc
mov
and
shr
inc
mov
inc
or
mov
inc
mov
inc
mov
dec
add
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
dec
mov
inc
sub
inc
mov
inc
shl
neg
sbb
and
inc
or
mov
inc
or
cmp
jne
mov
inc
mov
mov
jmp
cmp
jne
inc
mov
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
movzx
xor
inc
mov
mov
and
lea
mov
mov
and
mov
mov
sub
mov
movzx
shl
mov
cmp
jne
inc
mov
dec
mov
cmp
jne
dec
add
dec
cmp
jl
jmp
dec
mov
mov
mov
jmp
inc
mov
dec
lea
inc
mov
dec
mov
inc
or
mov
dec
mov
mov
inc
mov
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
inc
sar
sub
dec
arpl
inc
sub
inc
mov
inc
bt
jae
inc
mov
inc
mov
dec
arpl
shl
not
inc
test
jne
inc
lea
dec
cwde
jmp
cmp
jne
dec
add
dec
cmp
jl
jmp
inc
lea
inc
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
sub
dec
arpl
inc
mov
shl
lea
cmp
jb
cmp
jae
inc
mov
inc
sub
inc
mov
dec
arpl
dec
cmp
jl
inc
cmp
je
mov
inc
mov
inc
lea
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
dec
sub
jns
inc
mov
inc
mov
shl
inc
and
inc
lea
dec
arpl
dec
cmp
jge
dec
lea
inc
mov
dec
sub
xor
dec
shl
call
inc
cmp
je
add
mov
mov
sub
cmp
jge
dec
mov
mov
inc
mov
mov
jmp
cmp
jg
sub
dec
lea
inc
mov
dec
mov
inc
mov
inc
mov
dec
mov
mov
mov
cdq
mov
dec
mov
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
mov
inc
shl
inc
sub
inc
not
inc
mov
mov
mov
shr
inc
mov
inc
or
inc
and
mov
inc
mov
dec
add
inc
mov
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
inc
mov
inc
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
inc
sar
sub
dec
arpl
inc
sub
inc
mov
inc
bt
jae
inc
mov
inc
mov
dec
arpl
shl
not
inc
test
jne
inc
lea
dec
cwde
jmp
cmp
jne
dec
add
dec
cmp
jl
jmp
inc
lea
inc
mov
inc
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
sub
dec
arpl
inc
mov
inc
shl
mov
inc
lea
cmp
jb
inc
cmp
jae
mov
inc
sub
inc
mov
dec
arpl
dec
cmp
jl
cmp
je
mov
mov
inc
lea
inc
cmp
jb
inc
cmp
jae
mov
inc
mov
dec
sub
jns
inc
mov
inc
mov
shl
inc
and
inc
lea
dec
arpl
dec
cmp
jge
dec
lea
inc
mov
dec
sub
xor
dec
shl
call
mov
inc
mov
inc
mov
inc
dec
mov
cdq
inc
and
add
inc
mov
inc
and
sub
inc
sar
mov
inc
mov
inc
shl
inc
sub
inc
not
inc
mov
inc
mov
mov
shr
inc
mov
inc
or
inc
and
mov
inc
mov
dec
add
inc
mov
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
dec
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
inc
mov
mov
jmp
mov
cdq
inc
and
add
cmp
jl
inc
mov
inc
and
mov
sub
dec
mov
bts
mov
inc
sar
mov
inc
shl
inc
mov
inc
mov
inc
not
dec
mov
sub
inc
mov
inc
mov
inc
mov
and
shr
mov
inc
or
mov
inc
mov
inc
mov
dec
add
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
mov
inc
mov
mov
inc
add
jmp
inc
mov
btr
inc
mov
inc
and
inc
add
inc
mov
sub
inc
sar
inc
mov
mov
mov
dec
mov
inc
shl
inc
sub
inc
not
inc
mov
mov
inc
mov
and
shr
inc
mov
inc
or
mov
inc
mov
inc
mov
dec
add
inc
shl
dec
cmp
jl
dec
arpl
dec
lea
mov
dec
mov
dec
shl
dec
sub
dec
cmp
jl
mov
mov
jmp
mov
dec
sub
dec
sub
dec
cmp
jge
dec
mov
inc
sub
inc
mov
inc
shl
neg
sbb
and
inc
or
mov
inc
or
cmp
jne
mov
inc
mov
mov
jmp
cmp
jne
inc
mov
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
dec
mov
xor
inc
mov
inc
lea
dec
mov
dec
mov
dec
lea
mov
mov
inc
mov
inc
mov
mov
inc
mov
mov
mov
mov
dec
cmp
jne
call
inc
xor
inc
xor
xor
xor
dec
mov
mov
call
xor
jmp
dec
mov
inc
mov
cmp
je
cmp
je
cmp
je
cmp
jne
dec
add
jmp
inc
mov
dec
add
cmp
jg
je
inc
mov
cmp
je
mov
inc
sub
je
inc
sub
je
inc
sub
je
inc
cmp
jne
dec
mov
inc
mov
inc
mov
cmp
jne
jmp
inc
mov
inc
sub
dec
add
cmp
je
jmp
cmp
jg
cmp
jae
sub
inc
add
inc
mov
dec
add
inc
sub
inc
mov
dec
add
cmp
jge
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
mov
jmp
dec
sub
mov
jmp
dec
mov
mov
inc
mov
jmp
cmp
jg
cmp
jae
sub
inc
add
inc
mov
dec
add
jmp
inc
add
inc
mov
dec
add
cmp
jge
dec
mov
dec
mov
dec
mov
cmp
jne
mov
jmp
lea
cmp
ja
mov
inc
mov
dec
sub
jmp
dec
mov
dec
mov
dec
mov
cmp
jne
mov
inc
mov
jmp
cmp
jne
inc
mov
inc
mov
jmp
dec
mov
lea
inc
mov
cmp
ja
mov
jmp
dec
mov
dec
mov
dec
mov
cmp
je
cmp
je
cmp
je
cmp
je
jmp
lea
cmp
jbe
dec
mov
dec
mov
dec
mov
cmp
je
cmp
je
cmp
je
cmp
je
inc
mov
dec
sub
jmp
mov
mov
jmp
mov
mov
jmp
sub
inc
mov
cmp
ja
mov
jmp
inc
mov
inc
sub
je
mov
inc
sub
je
inc
sub
je
inc
sub
je
inc
cmp
jne
cmp
je
dec
lea
cmp
je
cmp
jne
or
mov
dec
mov
jmp
dec
mov
inc
mov
jmp
inc
mov
dec
add
cmp
je
sub
cmp
ja
mov
jmp
lea
cmp
ja
mov
jmp
cmp
jne
mov
jmp
lea
dec
lea
cmp
jbe
cmp
je
cmp
jne
or
mov
jmp
mov
cmp
je
jmp
dec
mov
jmp
dec
mov
dec
mov
jmp
dec
mov
jmp
dec
mov
inc
mov
inc
mov
jmp
cmp
jg
lea
movsx
lea
cmp
jg
inc
mov
dec
add
inc
cmp
jge
jmp
mov
jmp
cmp
jg
inc
mov
dec
add
inc
cmp
jge
jmp
dec
mov
inc
mov
dec
mov
inc
cmp
je
cmp
jbe
mov
cmp
jl
inc
add
mov
dec
sub
mov
inc
add
cmp
jbe
dec
sub
inc
or
jmp
inc
add
inc
add
dec
sub
inc
cmp
je
dec
lea
dec
lea
mov
call
cmp
jge
neg
add
inc
cmp
jne
add
cmp
jne
sub
cmp
jg
cmp
jl
dec
lea
dec
sub
cmp
je
jge
dec
lea
neg
dec
sub
cmp
jne
mov
cmp
je
mov
inc
mov
inc
mov
mov
dec
add
sar
and
dec
mov
mov
cmp
je
dec
cwde
inc
mov
dec
lea
dec
lea
inc
cmp
jb
dec
mov
dec
lea
dec
mov
mov
dec
lea
mov
dec
mov
dec
shr
inc
sub
mov
movzx
mov
movzx
inc
movzx
inc
and
mov
inc
xor
inc
and
mov
inc
and
inc
lea
mov
inc
cmp
jae
inc
cmp
jae
inc
mov
inc
cmp
ja
inc
mov
inc
cmp
ja
mov
jmp
cmp
jne
mov
inc
add
btr
cmp
jne
cmp
jne
cmp
jne
mov
jmp
cmp
jne
mov
inc
add
btr
cmp
jne
cmp
jne
cmp
je
mov
inc
mov
dec
lea
inc
lea
inc
cmp
inc
lea
inc
mov
dec
arpl
jle
inc
mov
dec
lea
dec
lea
and
inc
movzx
inc
movzx
inc
mov
inc
imul
mov
inc
lea
cmp
jb
inc
cmp
jae
inc
mov
mov
inc
cmp
je
add
inc
mov
dec
add
dec
sub
inc
sub
inc
cmp
inc
mov
jg
inc
sub
dec
add
inc
add
inc
cmp
jg
inc
mov
inc
mov
mov
inc
add
inc
mov
inc
cmp
jle
inc
bt
jb
inc
mov
inc
mov
inc
add
shr
inc
add
inc
mov
shr
inc
lea
inc
add
or
inc
or
inc
cmp
mov
inc
mov
inc
mov
jg
inc
cmp
jg
inc
add
jns
inc
movzx
neg
movzx
inc
add
inc
test
je
add
inc
mov
inc
mov
inc
shr
inc
mov
shl
inc
shr
shl
inc
or
inc
shr
inc
or
dec
sub
inc
mov
inc
mov
jne
mov
xor
inc
mov
mov
cmp
je
inc
movzx
or
mov
inc
mov
jmp
mov
dec
mov
inc
mov
mov
inc
cmp
ja
inc
and
inc
cmp
jne
mov
inc
or
inc
mov
inc
cmp
jne
mov
mov
inc
cmp
jne
movzx
mov
inc
cmp
jne
inc
mov
inc
add
jmp
inc
add
mov
jmp
inc
add
mov
inc
mov
jmp
inc
add
mov
jmp
inc
mov
mov
inc
mov
inc
cmp
jae
movzx
inc
or
inc
mov
mov
mov
inc
mov
mov
jmp
inc
neg
sbb
and
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shr
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
dec
mov
or
inc
mov
mov
inc
mov
inc
mov
inc
mov
dec
mov
dec
xor
call
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
int3
int3
int3
dec
mov
dec
mov
push
push
push
inc
push
inc
push
inc
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
movzx
inc
mov
inc
mov
dec
mov
inc
mov
movzx
inc
and
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
lea
inc
lea
inc
xor
and
mov
dec
mov
inc
mov
mov
lea
inc
cmp
je
mov
jmp
mov
inc
cmp
jne
inc
cmp
jne
inc
cmp
jne
inc
cmp
cmove
mov
inc
mov
inc
mov
mov
inc
mov
jmp
cmp
jne
mov
inc
mov
inc
cmp
jne
inc
cmp
je
inc
bt
jb
dec
lea
jmp
inc
cmp
je
inc
cmp
jne
inc
cmp
jne
dec
lea
jmp
inc
cmp
jne
inc
cmp
jne
dec
lea
dec
lea
mov
call
inc
cmp
je
inc
xor
inc
xor
xor
xor
dec
mov
call
mov
mov
jmp
dec
lea
dec
lea
mov
call
inc
cmp
je
inc
xor
inc
xor
xor
xor
dec
mov
call
mov
inc
mov
jmp
inc
movzx
inc
mov
inc
mov
shr
inc
mov
inc
mov
shr
dec
lea
inc
mov
inc
imul
lea
dec
sub
mov
inc
mov
inc
mov
mov
imul
inc
lea
mov
sar
inc
movsx
mov
inc
neg
inc
cmp
je
jge
dec
lea
inc
neg
dec
sub
inc
cmp
je
inc
mov
mov
inc
mov
dec
add
inc
sar
and
dec
mov
inc
mov
inc
cmp
je
dec
cwde
dec
lea
dec
lea
dec
mov
inc
cmp
jb
dec
mov
dec
lea
dec
mov
mov
dec
lea
mov
dec
mov
dec
mov
dec
shr
inc
sub
mov
movzx
movzx
inc
mov
movzx
inc
and
inc
mov
xor
inc
and
inc
mov
inc
and
inc
mov
inc
mov
inc
lea
mov
inc
cmp
jae
inc
cmp
jae
inc
cmp
ja
mov
inc
cmp
ja
inc
mov
jmp
inc
cmp
jne
mov
inc
add
btr
inc
cmp
jne
inc
cmp
jne
inc
cmp
jne
inc
mov
jmp
inc
cmp
jne
mov
inc
add
btr
inc
cmp
jne
inc
cmp
jne
inc
cmp
je
inc
mov
dec
lea
inc
mov
inc
cmp
lea
inc
mov
dec
arpl
jle
inc
mov
dec
lea
dec
lea
inc
and
xor
inc
movzx
inc
movzx
inc
mov
imul
inc
mov
lea
cmp
jb
cmp
jae
inc
mov
inc
mov
inc
cmp
je
inc
add
inc
sub
dec
add
dec
sub
inc
cmp
jg
dec
mov
inc
xor
inc
sub
dec
add
inc
add
inc
cmp
jg
inc
mov
inc
mov
mov
inc
add
inc
mov
inc
cmp
jle
inc
bt
jb
mov
inc
mov
inc
add
shr
inc
add
mov
shr
lea
inc
add
or
inc
or
inc
cmp
mov
inc
mov
inc
mov
jg
inc
cmp
jg
inc
add
jns
inc
movzx
neg
movzx
inc
add
inc
test
je
inc
add
mov
inc
mov
inc
shr
mov
shl
shr
shl
or
inc
shr
inc
or
dec
sub
mov
inc
mov
jne
inc
mov
inc
cmp
je
inc
movzx
inc
or
mov
inc
mov
jmp
mov
inc
mov
inc
cmp
ja
inc
and
inc
cmp
jne
mov
or
cmp
jne
mov
inc
mov
cmp
jne
movzx
inc
mov
inc
cmp
jne
inc
mov
inc
add
jmp
inc
add
mov
jmp
inc
add
mov
inc
mov
jmp
inc
add
mov
mov
inc
mov
mov
mov
inc
cmp
jb
mov
inc
mov
inc
mov
neg
inc
mov
mov
sbb
and
add
mov
inc
mov
jmp
movzx
inc
mov
mov
mov
mov
mov
inc
mov
mov
inc
or
inc
mov
jmp
neg
mov
sbb
and
add
mov
inc
mov
inc
mov
inc
mov
mov
inc
mov
dec
mov
inc
cmp
jne
dec
mov
mov
jmp
inc
mov
mov
mov
inc
mov
shr
inc
cmp
jb
inc
add
inc
mov
inc
mov
mov
movzx
inc
mov
inc
movzx
and
inc
mov
inc
xor
and
inc
mov
inc
and
inc
lea
cmp
jae
cmp
jae
inc
cmp
ja
inc
cmp
ja
inc
mov
jmp
inc
cmp
jne
mov
inc
add
btr
inc
cmp
jne
inc
cmp
jne
inc
cmp
jne
inc
mov
jmp
inc
cmp
jne
mov
inc
add
btr
inc
cmp
jne
inc
cmp
jne
inc
cmp
je
inc
mov
dec
lea
lea
xor
inc
mov
inc
cmp
dec
arpl
jle
inc
mov
dec
lea
dec
lea
inc
and
movzx
movzx
inc
mov
imul
mov
inc
lea
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
inc
cmp
je
inc
add
inc
sub
dec
add
dec
sub
inc
cmp
jg
inc
mov
inc
sub
inc
xor
dec
add
inc
add
inc
cmp
inc
mov
jg
inc
mov
inc
mov
mov
inc
add
mov
inc
cmp
jle
inc
bt
jb
mov
inc
mov
inc
add
shr
inc
add
mov
shr
lea
inc
add
or
inc
or
inc
cmp
mov
inc
mov
inc
mov
jg
inc
cmp
jg
inc
add
jns
inc
movzx
neg
movzx
inc
add
inc
test
je
inc
add
mov
inc
mov
inc
shr
mov
shl
shr
shl
or
inc
shr
inc
or
dec
sub
mov
inc
mov
jne
inc
mov
inc
cmp
je
inc
movzx
inc
or
mov
inc
mov
jmp
mov
dec
mov
inc
mov
inc
cmp
ja
inc
and
inc
cmp
jne
mov
or
cmp
jne
mov
inc
mov
cmp
jne
movzx
inc
mov
cmp
jne
inc
mov
inc
add
jmp
inc
add
mov
jmp
inc
add
mov
inc
mov
jmp
inc
add
mov
inc
mov
inc
cmp
jb
inc
neg
inc
mov
inc
mov
sbb
and
add
mov
jmp
movzx
inc
or
inc
mov
mov
mov
inc
mov
mov
inc
mov
mov
jmp
inc
neg
sbb
and
add
mov
inc
mov
inc
mov
inc
mov
mov
mov
mov
inc
test
je
cwde
add
inc
cmp
jg
inc
cmp
mov
lea
cmove
jmp
inc
mov
mov
inc
mov
inc
mov
cmp
lea
cmovg
inc
shr
inc
sub
inc
mov
mov
inc
add
inc
add
shr
shr
inc
or
inc
or
add
dec
sub
jne
inc
cmp
inc
mov
mov
inc
mov
jge
inc
neg
inc
movzx
inc
cmp
jle
inc
mov
inc
mov
shr
inc
shr
shl
shl
inc
sub
inc
shr
inc
or
or
inc
cmp
jg
inc
mov
mov
inc
mov
lea
dec
lea
inc
cmp
dec
mov
jle
inc
add
dec
lea
dec
lea
dec
mov
dec
mov
mov
inc
mov
mov
mov
inc
add
shr
shr
add
inc
or
inc
or
mov
inc
mov
shr
inc
add
inc
or
dec
mov
add
shr
inc
add
inc
lea
inc
or
inc
cmp
jb
inc
cmp
jae
inc
lea
xor
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
test
je
inc
add
dec
shr
inc
lea
inc
cmp
jb
cmp
jae
inc
add
inc
add
inc
mov
inc
lea
shr
inc
xor
inc
lea
inc
or
mov
inc
lea
shr
inc
sub
mov
or
inc
mov
mov
shr
inc
mov
add
inc
mov
dec
add
inc
cmp
jle
inc
mov
jmp
dec
sub
inc
mov
dec
sub
cmp
jl
jmp
inc
cmp
jne
inc
mov
dec
sub
dec
cmp
jae
dec
cmp
jae
dec
add
inc
add
inc
add
inc
sub
inc
sub
dec
movsx
inc
mov
inc
mov
inc
mov
dec
mov
dec
xor
call
dec
mov
dec
add
inc
pop
inc
pop
inc
pop
inc
pop
pop
pop
pop
ret
inc
cmp
jne
dec
sub
dec
cmp
jae
dec
cmp
jae
inc
cmp
mov
mov
lea
cmove
jmp
int3
dec
mov
dec
mov
push
push
inc
push
dec
sub
dec
mov
dec
xor
dec
mov
inc
and
inc
and
inc
and
dec
mov
mov
dec
mov
mov
test
je
inc
mov
dec
mov
inc
mov
dec
lea
dec
mov
mov
inc
add
mov
mov
mov
inc
lea
mov
inc
lea
inc
mov
shr
inc
mov
inc
or
inc
shr
inc
lea
inc
or
inc
mov
shr
shr
inc
add
inc
add
inc
or
mov
inc
or
inc
lea
xor
mov
inc
mov
inc
mov
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
test
je
inc
lea
xor
inc
cmp
jb
inc
cmp
jae
inc
mov
mov
test
je
inc
lea
mov
mov
dec
mov
xor
dec
shr
inc
lea
inc
cmp
jb
inc
cmp
jae
inc
mov
inc
mov
test
je
inc
add
mov
inc
mov
inc
add
add
mov
shr
inc
mov
inc
add
add
shr
or
inc
mov
inc
or
mov
inc
xor
inc
mov
movsx
inc
lea
mov
inc
cmp
jb
cmp
jae
inc
mov
mov
inc
test
je
inc
lea
xor
inc
cmp
jb
inc
cmp
jae
inc
mov
mov
test
je
lea
mov
dec
add
add
jne
cmp
jne
mov
mov
inc
mov
mov
shl
shr
inc
shr
shl
or
mov
inc
mov
add
mov
mov
inc
test
je
bt
jb
mov
mov
mov
add
inc
mov
mov
lea
shr
or
inc
shr
mov
mov
mov
add
add
inc
or
bt
mov
jae
mov
dec
mov
dec
xor
call
dec
mov
dec
mov
dec
add
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
data16
dec
sub
dec
mov
dec
mov
inc
mov
dec
mov
dec
mov
call
call
call
dec
mov
dec
mov
dec
mov
inc
mov
call
dec
add
ret
int3
int3
int3
int3
int3
int3
data16
dec
sub
dec
mov
dec
mov
dec
xor
dec
lea
dec
sub
dec
cmovb
gs
mov
dec
cmp
jae
inc
and
fwait
add
(bad)
inc
add
dec
cmp
jne
dec
mov
dec
mov
dec
add
ret
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
call
cmp
jle
call
dec
dec
add
pop
ret
inc
push
dec
sub
dec
mov
xor
cmp
setne
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
mov
dec
mov
cmp
jne
dec
mov
cmp
jne
dec
mov
cmp
je
dec
mov
cmp
je
dec
mov
cmp
jne
dec
mov
dec
mov
dec
mov
dec
cmp
jne
mov
dec
mov
cmp
jne
dec
mov
cmp
jne
dec
mov
cmp
je
dec
mov
cmp
je
dec
mov
cmp
jne
dec
mov
dec
cmp
jne
call
mov
mov
mov
jmp
mov
mov
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
push
dec
sub
dec
mov
dec
mov
call
cmp
jne
dec
mov
cmp
jne
cmp
jne
cmp
je
cmp
je
cmp
jne
dec
mov
call
test
je
mov
dec
mov
call
call
dec
mov
dec
mov
call
dec
mov
dec
mov
dec
add
pop
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
cmp
je
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
arpl
dec
mov
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
cmp
je
xor
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
xor
cmp
sete
mov
mov
dec
add
pop
ret
inc
push
dec
sub
dec
mov
dec
mov
xor
cmp
sete
mov
mov
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
inc
push
dec
sub
dec
mov
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
call
xor
xor
call
nop
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
call
xor
xor
call
nop
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
call
xor
xor
call
nop
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
call
xor
xor
call
nop
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
inc
dec
mov
call
dec
mov
dec
lea
dec
add
pop
ret
int3
int3
int3
int3
int3
dec
mov
push
push
dec
sub
dec
mov
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
xor
dec
mov
mov
xor
call
nop
dec
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
dec
mov
push
push
push
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
cmp
je
xor
nop
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
inc
mov
dec
add
dec
cmp
jne
xor
xor
call
nop
dec
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
inc
dec
mov
call
dec
mov
dec
lea
dec
add
pop
ret
int3
int3
int3
int3
int3
dec
mov
push
push
push
dec
sub
dec
mov
dec
mov
dec
cmp
jb
dec
mov
call
dec
mov
xor
dec
mov
mov
xor
xor
call
nop
dec
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
dec
mov
push
push
push
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
cmp
je
xor
nop
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
inc
mov
dec
add
dec
cmp
jne
xor
xor
call
nop
dec
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
push
push
push
inc
push
dec
sub
dec
mov
inc
mov
inc
cmp
jle
dec
mov
dec
lea
dec
mov
dec
lea
dec
mov
dec
mov
dec
mov
call
jmp
dec
mov
dec
mov
dec
mov
inc
test
jle
dec
lea
dec
lea
dec
lea
dec
lea
dec
mov
call
dec
mov
call
xor
xor
call
nop
dec
add
inc
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
dec
mov
push
dec
sub
dec
mov
dec
mov
dec
mov
dec
add
dec
mov
dec
mov
dec
add
call
xor
xor
call
nop
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
add
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
add
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
add
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
mov
dec
add
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
inc
push
dec
sub
dec
mov
mov
and
test
je
and
dec
lea
call
dec
add
pop
ret
int3
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
sub
dec
lea
dec
lea
inc
mov
call
dec
lea
dec
add
jmp
int3
int3
int3
dec
lea
jmp
dec
sub
dec
lea
call
dec
lea
dec
add
jmp
dec
sub
dec
lea
call
dec
lea
dec
add
jmp
dec
lea
jmp
int3
int3
int3
int3
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
lea
jmp
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
int3
int3
int3
int3
dec
sub
dec
cmp
jb
dec
mov
call
dec
mov
dec
mov
mov
dec
add
ret
dec
lea
jmp
dec
lea
jmp
dec
lea
jmp
inc
push
dec
sub
dec
mov
dec
cmp
jae
dec
lea
dec
mov
dec
inc
dec
mov
dec
test
je
call
dec
mov
dec
cmp
jb
dec
add
pop
ret
dec
lea
dec
lea
dec
mov
jmp
add
inc
cmp
add
xor
add
pop
cmp
add
ss
add
add
add
dec
cmp
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
stos
cmp
add
add
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
cmp
add
add
add
add
add
add
jl
add
add
add
cwde
cmp
add
add
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
in
inc
add
add
add
and
add
add
add
add
add
add
fiadd
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
cmp
add
(bad)
cmp
add
adc
add
add
add
sbb
add
add
add
cmp
add
add
add
push
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
fidivr
add
add
add
jmp
add
aas
add
add
add
push
aas
add
add
add
and
add
add
add
xor
add
add
add
ds
add
add
add
pop
aas
add
add
add
push
add
add
add
jp
add
add
add
mov
add
add
add
cwde
aas
add
add
add
mov
add
add
add
add
add
add
aas
add
add
add
fidivr
add
add
add
in
aas
add
add
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
sub
add
add
add
inc
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
ins
inc
add
add
add
xchg
add
add
add
add
add
add
add
inc
add
add
add
in
inc
add
add
add
cld
inc
add
add
add
push
inc
add
add
add
sub
add
add
add
inc
add
add
add
inc
inc
add
add
add
push
inc
add
add
add
bound
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
jmp
add
cmp
add
cmp
add
add
add
add
add
add
add
cmp
add
fidivr
add
test
add
pushf
rol
add
add
mov
add
add
rol
add
add
nop
rol
add
add
cmp
add
add
add
mov
add
adc
add
inc
mov
add
jo
add
mov
add
add
mov
add
add
add
xor
add
pusha
rol
add
add
mov
add
pop
sub
add
add
adc
add
add
sub
add
or
add
add
cmp
add
add
push
add
add
push
dec
dec
push
push
pop
inc
add
dec
dec
push
pop
pop
inc
add
dec
dec
push
pop
pop
inc
push
add
add
add
push
push
dec
add
add
add
add
pop
xor
ja
and
add
push
push
inc
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
inc
dec
push
add
add
inc
dec
push
add
add
add
dec
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
or
push
inc
push
xor
add
add
add
add
dec
dec
push
push
xor
add
add
dec
add
add
add
push
add
push
push
dec
push
inc
dec
push
add
push
push
dec
push
inc
dec
push
push
dec
dec
push
inc
push
push
add
push
add
add
push
add
add
push
add
add
push
add
or
push
push
push
push
xor
add
add
add
inc
push
push
push
push
xor
add
add
push
add
add
push
add
add
push
add
add
add
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
inc
push
push
push
push
xor
add
add
add
add
inc
push
push
push
push
push
xor
add
add
add
pop
dec
dec
push
dec
push
push
push
or
push
push
dec
xor
add
add
add
add
dec
dec
push
push
dec
inc
push
push
add
add
add
add
dec
dec
push
push
dec
inc
push
push
add
add
push
add
add
push
add
add
add
or
push
push
inc
xor
add
add
add
pop
dec
dec
push
inc
push
xor
add
add
add
add
inc
inc
inc
push
push
inc
push
push
add
add
push
inc
add
dec
push
push
inc
push
push
add
dec
inc
inc
inc
push
push
add
dec
dec
push
inc
push
push
push
pop
push
push
dec
push
inc
dec
push
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
or
push
push
inc
xor
add
add
inc
add
add
inc
add
add
add
push
push
push
push
push
push
inc
add
xor
add
inc
push
push
push
inc
xor
add
add
add
add
inc
push
push
push
push
inc
xor
add
add
add
pop
dec
dec
push
dec
push
push
inc
or
push
push
dec
xor
add
add
add
add
dec
dec
push
inc
inc
push
push
add
add
add
inc
add
add
dec
push
xor
add
add
add
pop
dec
dec
push
and
push
add
add
add
push
add
add
add
inc
dec
dec
add
add
dec
push
push
add
add
add
add
pop
add
add
pop
add
add
inc
pop
pop
add
add
dec
dec
push
add
add
pop
add
push
dec
dec
dec
push
dec
pop
add
inc
inc
dec
dec
dec
push
add
inc
push
inc
dec
dec
dec
push
add
add
add
push
add
add
inc
dec
inc
add
add
push
add
add
add
push
inc
inc
dec
push
push
push
add
push
add
push
inc
push
push
inc
push
push
add
inc
inc
dec
dec
push
push
add
push
add
add
push
add
push
inc
push
inc
dec
dec
push
add
dec
add
add
inc
add
push
inc
dec
push
push
push
push
add
inc
dec
push
inc
push
inc
add
inc
push
push
push
dec
push
add
dec
add
push
inc
push
inc
dec
dec
dec
add
inc
push
inc
push
push
dec
add
inc
dec
dec
dec
dec
push
add
inc
dec
inc
dec
inc
pop
add
inc
inc
inc
dec
push
dec
add
inc
dec
dec
add
add
inc
inc
dec
dec
push
dec
push
or
dec
dec
push
dec
inc
inc
add
add
add
add
inc
inc
dec
dec
push
dec
inc
pop
inc
inc
dec
dec
push
dec
inc
add
add
add
push
add
add
dec
push
push
add
add
add
add
inc
dec
push
push
push
push
add
dec
dec
inc
add
add
inc
push
inc
dec
dec
push
push
push
inc
inc
dec
dec
push
push
add
inc
inc
dec
dec
push
inc
inc
push
inc
inc
dec
dec
push
inc
add
inc
inc
dec
dec
push
inc
add
inc
dec
inc
dec
push
push
add
push
add
push
inc
dec
push
push
inc
push
add
inc
add
push
inc
dec
inc
dec
dec
push
add
dec
add
add
dec
add
add
inc
add
add
inc
dec
push
add
add
push
dec
dec
add
add
inc
push
inc
inc
dec
inc
add
inc
push
dec
inc
dec
dec
push
pop
inc
push
dec
dec
inc
dec
push
add
add
add
push
add
add
add
pop
inc
pop
dec
xor
xor
add
add
dec
add
add
add
pop
inc
dec
dec
inc
push
push
push
pop
inc
inc
inc
inc
push
push
push
push
inc
push
push
inc
dec
xor
pop
inc
pop
push
push
inc
inc
push
push
inc
push
inc
push
inc
dec
add
dec
add
add
pop
add
add
xor
add
dec
inc
pop
add
add
inc
dec
inc
dec
dec
xor
push
inc
dec
inc
dec
inc
xor
add
dec
add
push
inc
dec
inc
dec
xor
push
inc
dec
inc
dec
xor
inc
dec
inc
xor
add
add
pop
inc
dec
add
add
push
push
push
add
add
inc
inc
push
add
add
inc
dec
push
add
add
dec
dec
push
add
add
pop
inc
dec
add
add
inc
dec
push
push
inc
push
add
inc
dec
push
push
inc
dec
push
add
add
add
push
add
add
add
push
inc
dec
inc
inc
dec
push
add
push
push
push
add
add
inc
push
push
add
add
add
inc
add
add
add
push
add
add
inc
dec
push
add
add
push
add
add
push
push
inc
add
add
push
add
add
inc
dec
dec
add
add
dec
push
dec
add
add
inc
inc
inc
add
add
dec
inc
push
add
add
inc
dec
inc
add
add
inc
inc
inc
add
add
add
dec
add
add
add
push
inc
push
add
add
dec
push
dec
add
add
dec
dec
push
add
add
add
xor
add
inc
push
inc
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
dec
add
add
add
inc
inc
push
add
add
dec
inc
push
add
add
push
dec
push
add
add
dec
push
push
add
add
add
add
inc
dec
inc
add
add
inc
dec
inc
add
add
dec
push
inc
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
pop
add
add
push
add
push
inc
push
push
inc
dec
push
add
inc
inc
dec
dec
and
push
add
add
inc
push
dec
add
add
add
push
add
add
add
inc
add
add
add
inc
push
inc
add
add
push
inc
inc
add
add
inc
inc
push
add
add
add
add
add
add
inc
dec
inc
add
add
inc
push
push
add
add
push
push
push
add
add
dec
dec
push
or
push
dec
dec
dec
push
inc
push
push
add
add
add
dec
dec
push
dec
push
inc
push
or
push
push
push
inc
xor
add
add
add
inc
inc
inc
push
push
inc
push
inc
add
add
add
add
push
dec
inc
dec
inc
inc
push
push
push
dec
push
inc
push
inc
add
push
inc
add
add
add
dec
push
push
inc
push
inc
add
dec
inc
inc
inc
push
inc
add
push
add
push
push
push
dec
dec
inc
push
add
push
push
push
dec
inc
push
add
push
push
dec
push
inc
inc
add
dec
dec
push
inc
push
inc
add
push
push
dec
push
inc
dec
dec
push
inc
push
add
add
add
push
push
dec
push
inc
dec
dec
push
inc
push
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
or
push
push
push
xor
add
add
add
or
push
push
inc
xor
add
add
inc
add
add
inc
add
add
inc
add
add
push
push
inc
add
add
add
add
inc
dec
inc
dec
push
inc
add
inc
add
push
push
push
push
push
push
inc
add
dec
dec
push
dec
push
dec
push
inc
add
add
add
add
push
inc
dec
push
dec
push
push
push
dec
add
add
add
or
dec
push
dec
push
push
push
dec
add
add
add
or
dec
push
inc
push
push
push
dec
add
add
add
or
dec
push
inc
push
push
push
dec
add
add
add
pop
dec
push
push
inc
inc
inc
push
add
add
add
push
push
inc
add
add
push
push
push
add
add
add
add
push
dec
dec
push
push
push
add
push
dec
dec
push
push
inc
add
dec
dec
push
inc
push
push
push
push
add
add
add
add
push
dec
dec
push
push
inc
add
inc
pop
push
push
inc
inc
push
push
push
add
add
add
push
push
inc
pop
push
push
push
add
push
inc
pop
push
push
inc
add
push
inc
pop
push
push
inc
add
push
inc
dec
inc
dec
inc
push
pop
inc
dec
inc
dec
inc
push
inc
pop
inc
dec
inc
dec
inc
push
push
pop
push
dec
push
dec
inc
push
inc
pop
push
dec
push
dec
inc
push
push
pop
push
dec
push
dec
inc
push
inc
pop
push
dec
push
dec
inc
push
push
or
dec
dec
dec
push
dec
push
push
push
add
add
add
push
dec
push
dec
dec
inc
add
push
dec
inc
pop
push
inc
add
push
dec
inc
pop
push
push
add
push
dec
inc
pop
push
inc
add
push
dec
inc
pop
push
inc
add
push
dec
dec
dec
push
inc
add
push
dec
dec
dec
push
push
add
push
dec
dec
dec
push
inc
add
push
dec
dec
dec
push
inc
add
push
inc
dec
push
inc
push
push
or
dec
push
pop
pop
inc
push
add
add
add
add
push
dec
dec
push
pop
pop
push
push
add
add
add
add
push
dec
dec
push
pop
pop
push
inc
add
add
add
add
push
dec
dec
push
pop
pop
inc
push
add
add
add
add
push
dec
dec
push
pop
pop
inc
inc
add
add
add
add
push
dec
dec
push
pop
pop
inc
push
add
add
add
add
push
inc
inc
dec
push
push
inc
push
add
add
add
add
dec
dec
push
dec
push
inc
push
inc
add
add
add
add
push
inc
dec
push
inc
push
push
push
push
dec
push
dec
inc
push
add
push
dec
dec
push
push
pop
inc
push
add
add
add
add
push
dec
dec
push
push
pop
push
push
add
add
add
add
push
dec
dec
push
push
pop
push
inc
add
add
add
add
push
dec
dec
push
push
pop
inc
push
add
add
add
add
push
dec
dec
push
push
pop
inc
inc
add
add
add
add
push
dec
dec
push
push
pop
inc
push
add
add
push
add
add
add
or
inc
dec
inc
push
push
inc
add
add
add
add
inc
dec
inc
dec
inc
push
push
push
add
add
add
add
push
inc
dec
inc
dec
inc
push
inc
add
add
add
add
inc
dec
dec
dec
push
inc
add
push
inc
dec
dec
dec
push
inc
or
push
push
inc
xor
add
add
add
add
inc
push
push
push
push
inc
xor
add
add
add
pop
dec
dec
push
dec
push
push
inc
or
push
push
dec
xor
add
add
add
add
dec
dec
push
inc
push
inc
add
dec
dec
push
dec
push
inc
add
push
dec
push
inc
dec
dec
push
inc
add
add
add
add
push
dec
push
inc
dec
dec
push
inc
add
add
add
add
dec
dec
push
dec
push
inc
add
dec
dec
push
push
push
inc
add
inc
add
add
dec
push
inc
add
add
inc
add
add
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
or
push
dec
dec
dec
push
push
add
add
add
add
push
push
inc
inc
inc
push
add
push
dec
inc
inc
inc
push
inc
pop
push
dec
push
dec
push
inc
push
add
add
add
pop
dec
push
add
add
add
add
push
dec
inc
pop
push
push
add
push
inc
inc
inc
push
push
add
push
inc
inc
inc
push
inc
add
push
dec
push
add
add
push
push
dec
dec
dec
push
push
add
push
push
push
inc
push
push
add
push
push
push
inc
push
inc
add
dec
dec
push
dec
push
push
add
push
dec
push
dec
dec
push
add
push
dec
push
dec
dec
push
push
add
add
add
push
add
add
inc
add
add
dec
add
add
add
push
push
dec
inc
pop
push
inc
add
push
inc
inc
inc
push
push
push
pop
push
inc
inc
inc
push
push
inc
add
add
add
inc
dec
inc
add
add
add
add
push
dec
dec
dec
push
inc
add
push
push
push
inc
push
push
push
pop
push
push
push
inc
push
push
inc
or
dec
push
dec
push
dec
inc
add
add
add
add
push
dec
push
dec
dec
push
add
push
add
add
push
add
pop
push
dec
push
push
push
push
push
pop
push
dec
push
push
push
dec
inc
or
push
pop
inc
dec
inc
xor
inc
add
add
add
inc
dec
push
pop
inc
dec
inc
cmp
add
add
add
push
dec
push
inc
push
push
add
push
inc
pop
push
push
push
add
push
dec
dec
push
push
push
add
dec
dec
push
dec
push
dec
add
push
push
add
inc
dec
push
add
add
add
inc
inc
inc
add
add
pop
add
add
push
add
add
add
inc
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
pop
inc
dec
push
pop
inc
dec
inc
add
add
add
dec
push
dec
add
add
add
add
push
inc
inc
dec
inc
inc
add
dec
inc
inc
dec
inc
inc
add
dec
inc
inc
dec
inc
inc
add
inc
dec
inc
dec
push
push
dec
pop
push
push
dec
pop
inc
push
push
pop
dec
inc
dec
pop
inc
push
push
pop
inc
pop
push
push
push
dec
push
push
inc
pop
push
inc
push
inc
add
dec
push
inc
add
add
inc
push
push
add
add
add
dec
add
add
add
dec
dec
inc
add
add
inc
push
add
inc
add
add
inc
push
inc
add
add
inc
add
add
inc
add
add
inc
push
dec
add
add
push
add
add
inc
push
push
add
add
push
add
add
inc
push
push
add
add
inc
push
inc
add
add
inc
add
add
pop
add
add
inc
push
pop
add
add
inc
add
add
inc
push
inc
add
add
dec
add
add
inc
push
dec
add
add
dec
inc
add
dec
dec
inc
add
add
add
inc
add
add
add
add
dec
dec
push
add
add
add
add
dec
dec
push
add
add
add
add
dec
inc
add
dec
inc
inc
add
add
add
pop
add
add
add
add
dec
inc
inc
add
add
add
add
dec
dec
dec
add
add
add
add
add
add
push
dec
push
push
dec
push
inc
push
push
dec
push
inc
inc
inc
add
add
pop
push
inc
dec
push
inc
push
inc
pop
push
inc
dec
push
inc
push
push
pop
push
inc
dec
push
inc
push
inc
add
add
add
push
add
add
push
add
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
push
add
add
push
add
add
add
push
push
push
dec
push
inc
push
add
add
add
dec
push
inc
add
add
push
inc
inc
dec
push
push
inc
push
add
add
add
add
push
push
dec
push
inc
dec
dec
inc
push
add
add
add
or
dec
push
inc
dec
dec
push
inc
add
add
add
or
dec
push
inc
dec
dec
inc
push
add
add
add
or
inc
dec
push
push
push
inc
add
add
add
add
push
inc
dec
push
inc
push
inc
pop
push
inc
dec
push
inc
push
push
pop
push
inc
dec
push
inc
push
inc
or
inc
dec
push
push
push
inc
add
add
add
add
push
push
dec
push
inc
dec
dec
inc
push
add
add
add
or
dec
push
inc
dec
dec
push
inc
add
add
add
or
dec
push
inc
dec
dec
inc
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
or
push
inc
push
xor
add
add
add
add
inc
push
push
push
push
xor
add
add
push
add
add
push
add
add
push
add
add
push
push
push
add
add
add
add
inc
dec
inc
dec
push
push
add
push
add
add
push
add
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
dec
dec
push
dec
push
dec
push
push
add
add
inc
add
add
add
push
inc
dec
dec
push
dec
inc
add
inc
dec
dec
push
inc
inc
add
dec
add
push
inc
dec
dec
push
dec
push
add
push
add
push
inc
dec
dec
push
dec
push
add
push
add
add
inc
add
push
inc
dec
dec
push
inc
inc
add
inc
dec
dec
push
dec
pop
add
pop
add
push
inc
dec
dec
push
inc
inc
add
inc
add
push
inc
dec
dec
push
dec
dec
add
dec
add
pop
push
inc
dec
dec
inc
dec
push
add
add
add
inc
add
add
push
add
add
inc
add
add
add
or
push
dec
dec
push
push
push
add
add
add
add
push
push
dec
inc
dec
inc
add
push
push
dec
inc
dec
push
add
push
push
dec
inc
dec
inc
add
push
dec
push
push
inc
push
push
push
push
dec
push
push
inc
inc
add
push
dec
push
push
inc
push
add
push
dec
inc
inc
inc
push
inc
push
push
add
add
add
pop
push
dec
inc
inc
inc
push
push
push
push
dec
inc
inc
inc
inc
add
push
dec
inc
inc
inc
push
add
push
push
dec
push
inc
inc
add
push
pop
push
inc
pop
dec
push
or
push
inc
dec
push
inc
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
add
push
inc
dec
dec
dec
push
push
add
push
inc
dec
dec
dec
push
push
or
push
push
push
xor
add
add
add
add
inc
push
push
push
push
push
xor
add
add
add
pop
dec
dec
push
dec
push
push
push
or
push
push
dec
xor
add
add
add
add
dec
dec
push
inc
push
push
add
dec
dec
push
add
add
or
inc
inc
inc
push
inc
dec
push
xor
add
add
or
inc
inc
inc
push
inc
dec
push
xor
add
add
or
inc
inc
inc
push
inc
dec
push
xor
add
add
or
inc
inc
inc
push
inc
dec
dec
push
inc
add
add
push
dec
dec
push
dec
push
push
add
dec
dec
push
dec
dec
push
push
or
push
inc
dec
dec
push
push
add
add
add
add
push
dec
push
inc
dec
dec
push
push
add
add
add
add
dec
dec
push
dec
push
push
add
dec
dec
push
dec
dec
push
push
push
dec
dec
push
push
push
push
add
push
inc
push
inc
push
push
inc
push
push
push
push
inc
push
inc
add
push
dec
push
dec
dec
push
push
or
push
inc
push
dec
push
xor
add
add
dec
add
add
add
pop
push
inc
inc
dec
push
inc
push
add
add
add
inc
add
add
add
push
push
inc
push
push
inc
push
add
push
inc
push
push
push
dec
push
xor
add
add
add
or
push
inc
push
dec
push
xor
add
add
pop
add
add
add
pop
push
inc
inc
dec
push
inc
push
add
add
add
inc
add
add
inc
add
add
add
pop
push
inc
push
push
push
push
push
add
add
add
push
add
add
dec
add
add
add
pop
push
inc
inc
dec
push
inc
inc
pop
push
inc
push
dec
inc
inc
inc
push
push
inc
dec
inc
inc
inc
add
inc
add
add
push
add
add
inc
add
add
push
add
add
push
add
or
inc
inc
inc
push
inc
dec
push
add
add
add
or
inc
inc
inc
push
inc
dec
add
add
push
inc
xor
add
add
add
add
push
inc
dec
dec
push
inc
add
dec
push
inc
add
add
push
pop
push
push
inc
push
add
dec
push
push
add
add
push
pop
push
inc
inc
dec
dec
add
add
add
add
add
add
push
push
inc
push
push
inc
push
add
push
push
inc
push
inc
push
add
dec
dec
push
dec
push
inc
inc
push
push
dec
dec
dec
dec
push
add
dec
inc
dec
add
add
push
inc
dec
add
add
push
dec
push
inc
push
inc
add
push
dec
dec
dec
inc
inc
add
push
dec
dec
inc
inc
dec
dec
add
add
add
dec
add
add
push
add
add
add
pop
dec
dec
dec
dec
push
dec
push
push
push
dec
pop
dec
inc
inc
add
push
dec
push
inc
push
push
dec
inc
add
add
add
add
push
dec
dec
inc
push
dec
inc
dec
add
add
add
add
push
dec
inc
inc
dec
dec
add
dec
dec
push
dec
push
inc
add
dec
push
push
add
add
dec
push
push
add
add
dec
inc
push
add
add
inc
inc
push
add
add
dec
inc
push
add
add
inc
inc
push
add
add
inc
push
push
add
add
inc
push
push
add
add
dec
push
push
add
add
add
dec
inc
push
add
add
push
push
push
add
add
add
dec
inc
push
add
add
dec
push
add
push
dec
push
add
add
add
push
push
dec
add
add
inc
inc
inc
mov
add
add
adc
add
add
push
jecxz
add
add
fcom
add
and
add
add
mov
add
push
adc
add
and
add
add
mov
add
enter
add
add
and
add
add
mov
add
and
add
call
add
add
add
add
add
mov
add
add
add
add
add
add
jb
outs
and
outs
and
add
add
add
call
add
add
add
add
add
clc
pop
add
and
add
add
add
add
add
imul
and
jb
outs
and
jae
je
outs
outs
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
push
jecxz
add
add
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
add
add
add
add
add
arpl
loopne
add
add
add
add
add
and
add
sub
add
sldt
add
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
add
add
add
and
add
clc
inc
add
add
push
jecxz
add
add
bound
and
arpl
je
outs
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
call
adc
add
add
jo
add
inc
outs
jb
js
je
jb
arpl
jae
add
jae
arpl
outs
add
add
add
add
add
add
jne
ins
add
add
add
add
outs
jne
ins
sub
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
add
add
arpl
add
inc
sub
add
add
push
push
inc
sub
push
dec
dec
inc
dec
inc
inc
add
outs
je
ins
and
jb
jb
add
or
add
add
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outs
ins
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outs
outs
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
ins
je
outs
data16
ins
ins
imul
dec
push
dec
dec
sub
imul
ins
jb
and
outs
arpl
outs
and
outs
ins
and
outs
popa
je
jbe
and
outs
jae
jb
arpl
and
and
outs
ins
and
dec
popa
imul
push
xor
xor
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
arpl
and
outs
jb
popa
je
outs
outs
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outs
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
add
add
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
add
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
add
or
jae
popa
jo
ins
imul
and
jae
jb
jno
gs
gs
and
outs
je
ins
and
je
jb
imul
je
imul
outs
jne
jne
ins
and
jns
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
add
add
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
add
add
push
xor
xor
ins
outs
popa
je
outs
and
imul
jo
jb
and
je
ins
outs
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
or
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
fs
dec
dec
dec
dec
and
and
jns
add
add
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
add
add
inc
arpl
bound
dec
outs
jbe
ins
bound
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
add
add
inc
bound
popa
jb
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
add
push
push
popa
jns
add
add
add
add
outs
gs
popa
jns
add
add
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
add
add
inc
outs
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
add
add
inc
ins
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
add
add
and
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
add
add
and
and
arpl
jo
outs
jb
add
add
add
add
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
add
add
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
pusha
fs
popa
ins
imul
imul
and
jb
daa
add
add
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
ins
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
add
add
pusha
outs
ins
outs
imul
jae
addr16
add
and
gs
pop
pop
add
add
outs
gs
pop
add
add
add
pusha
ins
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
add
outs
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
add
add
fs
jb
je
jb
imul
outs
jo
and
outs
jae
jb
arpl
and
outs
jae
jb
daa
add
add
add
pusha
gs
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
pusha
jbe
jb
jne
ins
and
jo
popa
arpl
outs
je
ins
popa
jo
add
add
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
add
add
pusha
jae
jb
outs
addr16
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outs
data16
pusha
jbe
popa
ins
ins
daa
add
bound
ins
gs
add
add
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
add
gs
je
jb
add
add
add
and
add
and
add
cmp
add
ds
add
add
and
gs
add
outs
gs
add
add
jne
popa
ins
imul
add
add
jb
jae
jb
arpl
add
add
pop
pop
jo
jb
xor
pop
pop
arpl
popa
ins
ins
add
add
add
add
popaw
jae
arpl
ins
add
add
add
pop
pop
je
imul
add
add
add
jae
arpl
ins
add
add
add
add
jo
jae
popa
ins
pop
pop
arpl
ins
add
bound
gs
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
inc
add
add
xor
add
and
add
xor
add
adc
add
lock
add
add
fdivr
add
mov
add
add
add
add
add
add
adc
add
nop
out
add
or
add
add
add
add
add
cld
add
add
add
clc
add
add
add
hlt
add
add
add
call
add
add
add
add
add
loopne
add
fadd
add
add
fadd
add
add
aam
add
rol
add
add
int3
add
add
add
enter
add
add
les
add
add
rol
add
add
mov
add
add
add
add
add
mov
add
lods
add
add
add
test
add
movs
add
add
add
mov
add
add
add
cwde
add
add
add
xchg
add
add
add
nop
add
add
add
mov
add
add
mov
add
add
test
add
add
add
add
add
jl
add
js
add
je
add
jo
add
ins
add
add
add
pusha
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
add
and
add
add
adc
add
add
clc
add
add
add
fadd
add
mov
add
add
add
add
add
pop
add
add
add
xor
add
adc
add
call
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
push
add
add
add
sub
add
sbb
add
adc
add
add
add
loopne
add
rol
add
add
cwde
add
add
add
jo
add
dec
add
add
add
sbb
add
clc
add
add
add
rol
add
test
add
js
add
dec
add
add
add
sub
add
xor
add
push
add
add
add
adc
add
test
xor
or
sub
cmp
add
add
xor
push
push
mov
add
and
or
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
je
jae
jb
bound
arpl
outs
jb
popa
je
outs
outs
inc
add
add
add
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
add
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
add
add
inc
push
xor
cs
dec
dec
add
add
add
push
jne
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
dec
dec
push
push
and
bound
and
ins
outs
arpl
imul
add
add
add
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
push
inc
push
push
pop
push
inc
jb
ins
push
xor
push
cmp
add
push
jne
dec
dec
jo
inc
cmp
pop
push
add
add
add
jns
inc
inc
jp
add
add
add
add
push
jns
pop
dec
jne
pop
push
add
add
add
xor
cmp
outs
imul
push
add
add
add
jns
inc
inc
jp
ins
push
xor
push
cmp
add
add
add
cmp
push
jne
pop
push
add
jns
inc
inc
jp
ins
push
xor
push
inc
jno
jp
cmp
push
inc
fs
push
push
cmp
ins
push
xor
push
cmp
add
add
add
inc
bound
push
jb
jbe
ins
gs
add
add
add
push
jns
dec
outs
imul
add
add
gs
xor
fs
ins
add
add
add
inc
outs
fs
popa
jae
add
ins
imul
outs
arpl
jae
add
add
add
add
jb
gs
xor
cs
ins
add
add
inc
bound
inc
arpl
gs
jb
arpl
jae
add
add
add
imul
jae
dec
gs
outs
jb
add
add
add
inc
jb
popa
je
push
jb
arpl
jae
add
inc
jb
popa
je
push
jb
arpl
jae
add
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
add
add
add
inc
outs
jne
push
jb
arpl
jae
jae
add
push
jae
jo
cs
ins
add
add
add
add
jne
push
jb
arpl
jae
outs
fs
gs
add
add
add
push
jne
jb
push
jns
je
ins
dec
outs
outs
jb
popa
je
outs
outs
dec
je
ins
ins
cs
ins
add
add
add
add
arpl
cmp
and
and
add
add
add
push
outs
popa
bound
je
and
ins
outs
arpl
and
ins
jo
ins
imul
outs
jb
and
add
dec
outs
and
ins
jo
ins
imul
arpl
popa
jbe
imul
add
jbe
ins
imul
gs
push
and
gs
je
jb
add
add
ins
popa
jo
jae
je
push
and
and
add
add
add
add
jo
add
mov
add
add
call
add
int3
call
add
jo
add
jo
add
mov
add
add
push
add
pusha
push
add
and
add
fsub
add
add
add
mov
add
push
add
add
and
add
add
add
add
add
add
add
add
add
fsub
add
add
add
cmp
add
push
add
add
add
and
add
add
add
add
add
and
add
fsub
add
add
add
mov
add
add
and
add
add
add
add
add
add
add
add
add
fsub
add
add
add
nop
and
add
add
add
add
add
add
add
add
add
add
add
fsub
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
jl
add
add
add
test
add
add
add
add
add
and
add
in
and
add
les
add
add
add
and
add
add
add
add
add
and
add
fsub
add
add
add
add
add
add
sub
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
daa
add
and
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
daa
add
and
add
add
add
add
add
and
add
mov
add
add
add
in
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
je
add
sbb
sub
add
add
add
add
add
add
and
add
in
sub
add
sub
add
add
add
add
add
add
add
add
add
test
add
add
sub
add
add
add
add
add
add
and
add
in
sub
add
sub
add
add
add
add
add
add
add
add
add
test
add
add
sub
add
add
add
add
add
add
and
add
pushf
sub
add
add
lods
sub
add
add
add
add
add
add
add
add
add
push
add
add
sub
add
cwde
sub
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
cwde
das
add
add
add
mov
add
add
add
add
add
add
add
add
enter
add
add
shr
add
and
add
add
add
add
add
and
add
enter
add
add
clc
das
add
and
add
add
add
add
add
and
add
xor
add
push
add
add
add
add
add
add
add
add
add
add
add
cwde
xor
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
in
xor
add
add
add
add
add
add
add
add
add
call
add
add
cmp
add
add
sub
xor
add
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
inc
or
add
adc
add
add
add
add
add
lock
rcl
add
test
add
add
add
call
add
add
add
add
adc
add
lock
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
add
add
sbb
add
dec
adc
add
adc
add
add
add
add
js
add
clc
adc
add
repz
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
adc
add
add
add
add
enter
mov
add
add
add
add
adc
add
add
clc
adc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
add
add
add
cmp
add
clc
adc
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
add
nop
or
add
adc
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cwde
adc
add
add
add
adc
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
adc
add
add
add
or
add
add
push
adc
add
add
add
add
add
add
add
add
add
or
add
(bad)
(bad)
inc
add
add
add
js
add
add
add
adc
add
lock
add
adc
add
add
add
adc
add
add
add
sub
add
clc
adc
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
lock
add
add
add
add
js
add
push
adc
add
add
add
nop
adc
add
add
add
mov
add
xor
add
clc
adc
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
add
add
add
cmp
add
add
add
fcom
add
add
add
sbb
add
xor
add
clc
adc
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
and
adc
sbb
sbb
push
rcl
adc
pusha
adc
xor
or
adc
cmp
or
rol
rol
add
add
add
enter
add
add
or
add
add
add
add
add
add
pcmpgtb
add
push
add
add
push
add
push
xor
jo
or
or
add
xor
jo
pop
or
pop
aam
add
or
adc
xor
lock
push
add
add
ltr
push
add
or
lock
loopne
rcl
rcl
add
or
and
add
push
pop
lock
rcl
push
pusha
adc
add
xor
add
mov
lock
rcl
push
pusha
adc
add
xor
add
rcr
lock
rcl
push
pusha
adc
add
or
adc
or
adc
or
adc
adc
add
add
fld
add
sbb
add
or
or
add
fadd
add
add
sbb
add
adc
add
pop
add
add
add
loopne
add
(bad)
(bad)
(bad)
inc
fild
add
add
add
add
add
fild
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
push
lods
add
add
add
push
lods
add
dec
fild
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
push
push
add
adc
or
sbb
sbb
sbb
add
xor
rcl
add
add
add
push
in
add
in
add
add
add
add
add
add
or
mov
add
clts
add
or
sysenter
or
rsqrtps
jo
or
or
add
push
push
jo
(bad)
add
xor
add
push
or
and
add
out
add
icebp
jmp
add
add
add
or
or
adc
xor
add
and
add
jns
add
inc
in
add
xchg
lods
add
inc
in
add
add
add
or
add
mov
jo
sbb
add
or
add
or
sbb
sbb
push
loopne
rcl
rcl
add
or
sbb
sbb
sbb
add
xor
adc
adc
clts
add
fs
sysenter
or
(bad)
or
adc
add
or
adc
or
adc
or
adc
adc
push
add
push
jb
push
or
add
sbb
add
add
add
psadbw
add
test
mov
add
das
test
add
or
sbb
sbb
sbb
add
xor
adc
adc
pop
or
pop
fs
add
xor
add
add
add
add
pop
add
add
fs
add
xor
add
xor
jo
push
add
push
xor
xor
and
add
pop
inc
add
lods
add
add
add
adc
add
push
xor
xor
and
add
pop
inc
add
scas
add
add
add
pushf
inc
add
inc
add
scas
add
add
add
sbb
or
and
lock
sbb
sbb
push
jo
pusha
adc
shl
add
sub
add
ret
add
add
add
add
add
add
add
add
add
add
or
add
shl
add
pop
add
add
add
push
lods
add
outs
add
add
sbb
add
or
sbb
or
sbb
or
sbb
sbb
push
loopne
rcl
rcl
add
add
pop
inc
add
xor
add
adc
add
add
add
lock
push
rol
add
xor
and
add
pop
add
add
lods
add
test
add
add
or
add
add
add
or
or
sbb
sbb
sbb
add
push
adc
rcl
add
add
add
cs
add
mov
add
add
push
add
fs
add
xor
add
xor
jo
and
add
lock
add
bound
add
add
add
bound
add
add
or
pop
push
adc
pop
xor
add
xchg
adc
adc
xadd
sbb
add
xor
add
rcl
ror
ror
add
or
and
add
add
sbb
sbb
push
rcl
adc
pusha
adc
add
sbb
add
fs
add
push
or
add
jb
loopne
rcl
add
add
push
xor
xor
sub
adc
sbb
pop
xor
add
inc
push
mov
lock
push
rol
add
add
out
add
pop
add
add
clts
add
adc
sysenter
adc
psrld
jo
adc
add
or
adc
pop
add
push
add
adc
or
add
adc
adc
add
or
add
xor
jo
and
add
mov
push
add
stc
scas
add
add
add
ficomp
add
add
add
sbb
add
adc
add
adc
add
xor
jo
and
add
pop
and
add
add
add
add
mov
and
add
scas
add
add
add
add
add
sysenter
push
add
xor
jo
sbb
add
ltr
push
add
sbb
push
loopne
rcl
rcl
shl
add
out
and
add
and
add
scas
add
add
add
add
or
and
and
and
add
jb
lock
sbb
push
rcl
push
add
push
push
add
shl
add
nop
daa
add
frstor
add
push
scas
add
add
add
add
add
or
add
add
add
pop
add
pop
add
add
je
add
push
adc
adc
or
pop
fs
add
push
adc
adc
pshufw
add
add
add
pop
xor
add
add
fwait
mov
add
add
add
sbb
add
les
sbb
sbb
sbb
lock
adc
shl
add
shl
add
sbb
add
ins
scas
add
add
add
call
add
add
add
and
add
je
add
fs
add
xor
add
add
add
lock
loopne
rol
add
and
add
nop
xor
add
add
cmp
or
adc
or
adc
or
adc
or
adc
adc
sbb
or
sbb
push
or
sbb
xor
loopne
rcl
add
or
sysenter
or
rsqrtps
jo
sbb
add
je
add
fs
sbb
sbb
add
jb
rol
add
or
add
xor
jo
add
add
add
shl
add
aad
add
fnstcw
add
add
add
fnstcw
add
or
add
add
shl
add
stc
aas
add
std
aas
add
add
add
std
aas
add
sbb
or
add
ltr
xor
add
xor
jb
lock
or
or
push
push
add
add
add
cmp
add
add
push
add
str
xor
add
mov
jo
push
add
push
push
add
pop
or
pop
adc
pop
xor
add
jb
lock
(bad)
or
and
add
les
push
inc
add
mov
add
add
add
add
add
or
push
xor
push
add
push
xor
xor
adc
or
adc
xor
add
adc
or
adc
xor
add
and
add
xor
add
add
shr
add
sbb
add
fs
adc
add
add
add
out
add
jo
add
adc
add
or
add
xor
jo
and
add
xchg
dec
add
jmp
add
out
scas
add
add
add
sbb
or
adc
add
jb
ror
ror
pop
pusha
push
push
add
add
cmp
add
adc
or
sbb
or
sbb
sbb
sbb
add
push
adc
add
add
add
push
add
mov
scas
add
add
add
add
add
add
sbb
add
add
add
add
add
sub
add
sbb
or
inc
adc
adc
or
rol
rol
add
add
out
add
jo
add
add
add
add
add
add
add
push
add
adc
andps
add
mov
jo
add
add
add
shl
add
xchg
pop
add
retf
add
mov
add
pop
add
or
add
add
shl
add
call
pop
add
xor
add
sbb
or
sbb
add
adc
push
loopne
ror
ror
pop
pusha
push
push
add
add
add
and
add
adc
or
sbb
sbb
lock
ror
shl
add
shl
icebp
add
push
mov
add
add
add
add
add
add
adc
push
add
or
adc
add
push
or
shl
add
pop
add
shl
add
add
add
add
add
push
add
push
pop
add
xor
add
xor
jo
sbb
add
les
add
je
add
fs
add
xor
add
xor
add
add
add
add
mov
add
add
add
push
or
push
push
lldt
xor
add
jb
loopne
ror
ror
pusha
adc
push
add
xor
add
push
or
pusha
shl
add
(bad)
ins
add
or
add
add
add
clts
add
or
sysenter
or
(bad)
or
adc
add
add
add
add
push
add
add
adc
add
push
add
or
add
adc
sbb
adc
sbb
push
ltr
xchg
sbb
pop
rcl
add
push
adc
or
push
jo
and
push
add
add
push
jo
add
out
add
nop
adc
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
or
add
sbb
add
or
push
push
mov
or
add
add
add
mov
or
add
add
add
add
add
add
add
les
add
inc
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
outs
add
(bad)
(bad)
(bad)
(bad)
cld
outs
add
add
add
and
add
(bad)
(bad)
inc
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
xor
push
mov
or
add
add
add
mov
or
add
add
add
add
add
add
add
dec
and
add
add
lock
add
add
add
(bad)
(bad)
call
add
ret
add
(bad)
(bad)
push
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
xor
push
mov
or
push
add
or
adc
or
push
push
add
hlt
add
js
add
add
add
add
add
int3
and
add
add
and
add
mov
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
jmp
mov
add
add
add
add
add
add
add
add
and
add
xor
add
inc
sbb
add
add
and
pop
add
sbb
add
add
push
add
add
sbb
add
add
and
push
add
sbb
add
add
add
push
add
or
andps
add
xor
jo
or
add
xor
push
mov
or
push
add
or
adc
or
push
push
add
hlt
add
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
(bad)
(bad)
(bad)
call
add
fiadd
(bad)
call
add
add
add
pop
mov
add
add
add
add
add
add
and
add
push
inc
add
pop
inc
add
adc
add
or
or
add
inc
add
pop
inc
add
adc
add
or
add
xor
jo
add
add
add
pop
inc
add
cmp
add
and
push
add
add
pop
inc
add
cmp
add
add
push
add
push
or
sysenter
pop
add
xor
jo
or
add
inc
pop
push
push
xor
add
add
sbb
add
or
push
push
mov
or
add
rcl
adc
xor
add
add
add
add
add
add
les
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
sbb
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
sbb
add
je
add
or
sbb
sbb
add
xor
rcl
or
and
push
adc
sbb
mov
lock
or
push
rol
hlt
add
lock
(bad)
call
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
or
or
pusha
pop
push
push
xor
add
add
sbb
push
add
xor
add
jo
pusha
mov
push
add
add
add
add
add
add
add
add
add
fsub
add
pusha
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
dec
jp
add
add
add
jp
add
add
add
jnp
add
add
add
(bad)
(bad)
jmp
add
add
add
jo
add
add
add
mov
add
add
add
sbb
add
or
push
push
xor
add
sbb
add
or
push
push
mov
push
add
sbb
push
add
xchg
push
rcl
adc
pusha
adc
mov
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
inc
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
dec
dec
add
add
add
xor
add
(bad)
(bad)
(bad)
inc
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
and
add
add
loop
add
cmp
add
and
push
add
inc
add
cmp
add
add
add
or
add
xor
pusha
and
add
rcr
add
push
add
xchg
daa
add
and
add
int
add
(bad)
push
add
and
add
add
sldt
push
add
(bad)
push
add
and
add
add
push
add
push
add
int
add
xchg
daa
add
add
add
rol
xor
add
sbb
sbb
add
push
push
jo
hlt
add
push
(bad)
(bad)
push
mov
add
sbb
(bad)
jmp
add
push
sbb
(bad)
call
sbb
sbb
add
push
push
jo
hlt
add
nop
push
add
nop
sbb
add
(bad)
(bad)
push
add
out
add
(bad)
(bad)
(bad)
jmp
add
add
add
adc
add
cmp
add
and
add
add
pusha
pop
add
adc
add
cmp
add
and
push
add
add
adc
add
cmp
add
add
push
add
push
or
sysenter
pop
add
xor
pusha
sbb
add
add
add
add
add
adc
add
sbb
or
pusha
pop
push
push
xor
add
add
sbb
pop
add
add
add
pusha
add
pop
jne
add
add
add
add
add
add
add
add
add
add
test
add
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
jo
add
add
add
lock
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
add
add
repz
call
add
add
add
add
mov
add
add
add
sbb
sbb
add
push
push
jo
hlt
add
loopne
add
lock
add
(bad)
(bad)
(bad)
call
add
add
add
inc
dec
add
(bad)
(bad)
(bad)
call
sub
cmp
sbb
lock
adc
adc
push
jo
pusha
or
add
mov
lar
(bad)
(bad)
(bad)
call
mov
add
add
add
add
add
add
jo
add
add
add
mov
add
add
mov
add
add
add
add
xor
(bad)
jmp
add
pop
add
add
add
add
mov
add
add
add
mov
add
add
add
add
or
add
mov
add
add
mov
add
add
(bad)
(bad)
(bad)
push
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
inc
and
add
and
add
add
add
and
add
and
add
add
jne
add
add
add
movs
and
add
add
add
and
add
add
add
and
add
pop
and
(bad)
push
and
add
or
add
add
add
or
add
imul
add
test
add
add
add
or
add
add
add
or
daa
add
or
add
into
daa
add
or
add
push
sub
add
add
add
sub
add
add
add
add
or
add
mov
add
pop
add
add
sub
add
(bad)
(bad)
call
and
add
sbb
sbb
pop
add
xor
add
add
add
add
mov
lar
(bad)
(bad)
(bad)
jmp
mov
add
add
add
add
loopne
add
(bad)
(bad)
(bad)
dec
add
add
add
push
jge
add
add
add
add
add
(bad)
(bad)
jmp
add
add
jnp
add
add
and
push
add
jnp
add
add
add
or
push
push
adc
push
xor
add
jb
lock
push
ror
pusha
adc
add
sbb
and
sbb
sbb
lgdtd
or
push
rol
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
xor
add
(bad)
(bad)
inc
add
add
add
add
push
add
jmp
(bad)
(bad)
call
sbb
add
pop
add
xor
add
add
add
add
mov
lar
pusha
pop
add
(bad)
(bad)
(bad)
inc
pop
add
add
add
iret
pop
add
add
add
or
add
add
pusha
add
(bad)
(bad)
(bad)
inc
sbb
add
adc
sbb
sbb
add
mov
rcl
rcl
adc
sbb
and
sbb
xor
add
adc
add
hlt
add
test
add
jo
add
(bad)
(bad)
(bad)
dec
pop
add
add
add
ficomp
add
add
add
pop
add
add
add
ss
add
(bad)
(bad)
(bad)
inc
push
or
push
je
add
fs
add
push
or
add
jb
loopne
rcl
rol
add
dec
xor
add
mov
add
pop
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
mov
add
dec
add
(bad)
(bad)
(bad)
dec
dec
add
add
add
sbb
add
add
add
add
add
add
sbb
add
or
push
mov
lar
sbb
push
add
push
or
or
pusha
pop
push
push
xor
add
sbb
or
adc
adc
or
or
or
push
rol
pusha
add
add
pop
jne
add
lar
mov
add
add
add
add
add
push
sub
add
add
add
add
add
add
add
inc
sub
add
nop
mov
add
inc
add
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
mov
add
(bad)
(bad)
(bad)
(bad)
fld
add
add
add
add
(bad)
(bad)
(bad)
call
dec
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
dec
add
add
dec
add
(bad)
(bad)
(bad)
jmp
mov
add
add
add
mov
add
add
add
add
add
add
popf
mov
add
les
add
and
add
adc
add
data16
jl
add
and
add
add
inc
add
xor
add
add
data16
jl
add
and
add
data16
or
add
pop
add
and
push
add
les
adc
or
data16
or
add
pop
add
and
or
aas
xor
add
hlt
inc
add
in
add
aam
add
add
data16
jl
add
sbb
add
or
inc
add
jo
add
out
add
lock
add
dec
or
add
push
dec
add
xor
add
add
or
or
push
rol
add
add
add
adc
add
adc
add
(bad)
(bad)
push
mov
(bad)
call
mov
add
xor
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
dec
sub
add
add
add
sub
add
add
add
add
add
add
inc
sub
(bad)
jmp
adc
add
hlt
push
add
aam
add
add
lahf
js
add
add
and
push
add
hlt
push
add
aam
add
add
outs
jne
add
add
add
push
add
repnz
or
pusha
pop
push
push
xor
adc
add
hlt
push
add
aam
add
jno
add
jb
add
add
add
or
sbb
sbb
sbb
sbb
add
xchg
push
rol
add
pop
mov
add
or
or
mov
adc
add
(bad)
(bad)
call
add
nop
pop
add
(bad)
(bad)
(bad)
jmp
add
add
pop
add
(bad)
(bad)
(bad)
call
adc
add
push
push
xor
add
(bad)
(bad)
(bad)
push
add
inc
push
add
(bad)
(bad)
(bad)
(bad)
jl
add
add
add
mov
(bad)
(bad)
call
adc
add
bound
add
add
lock
add
(bad)
(bad)
(bad)
dec
push
add
add
add
adc
add
(bad)
(bad)
(bad)
inc
push
push
add
xor
add
rcl
jo
pusha
adc
adc
or
pusha
push
xor
add
(bad)
(bad)
(bad)
call
add
add
add
add
mov
(bad)
inc
mov
add
(bad)
(bad)
(bad)
push
add
ror
add
add
add
dec
add
add
add
in
dec
add
add
add
test
(bad)
(bad)
(bad)
call
sbb
sbb
add
jb
jo
hlt
add
call
(bad)
(bad)
jmp
mov
add
inc
mov
add
pusha
mov
add
cmp
add
(bad)
(bad)
dec
add
add
add
jbe
add
add
add
mov
add
add
add
ror
add
add
add
add
(bad)
(bad)
inc
push
add
push
xor
push
adc
pop
add
fs
add
xor
add
add
add
add
mov
adc
add
(bad)
(bad)
jmp
add
add
mov
add
add
(bad)
push
mov
add
push
mov
(bad)
push
add
add
mov
(bad)
push
add
add
mov
(bad)
push
mov
add
adc
push
mov
add
push
mov
(bad)
push
add
or
mov
(bad)
push
add
add
mov
(bad)
push
mov
add
adc
(bad)
push
mov
add
push
mov
(bad)
push
add
adc
mov
(bad)
push
add
add
mov
(bad)
push
mov
add
and
add
push
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
add
add
leave
xor
add
add
add
add
add
add
add
add
xor
add
(bad)
(bad)
jmp
xor
add
or
add
add
add
jo
add
add
add
xchg
add
(bad)
(bad)
(bad)
call
add
add
add
push
add
add
add
add
aaa
add
(bad)
(bad)
(bad)
inc
aaa
add
pop
add
add
aaa
add
or
add
push
cmp
add
add
add
add
(bad)
(bad)
(bad)
push
add
add
cmp
add
add
add
add
or
add
imul
add
(bad)
(bad)
jmp
add
add
cmp
add
add
cmp
add
or
add
pop
cmp
add
(bad)
(bad)
call
add
add
cmp
add
add
add
cmp
add
cmp
add
(bad)
(bad)
dec
add
mov
add
adc
add
sbb
add
sldt
add
add
(bad)
(bad)
(bad)
(bad)
jle
add
adc
add
test
add
add
cmp
add
xor
(bad)
push
add
adc
add
fwait
cmp
add
add
add
adc
add
and
(bad)
(bad)
jmp
add
adc
add
push
add
add
add
adc
aas
add
(bad)
(bad)
(bad)
call
add
add
add
add
sbb
add
in
add
pop
add
add
inc
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
inc
add
sbb
add
xchg
inc
add
sbb
add
rol
sbb
add
in
inc
add
(bad)
(bad)
(bad)
inc
add
add
add
add
or
sbb
sbb
sbb
sbb
add
xor
add
jb
xor
sbb
adc
sbb
push
ltr
xchg
sbb
pop
rcl
add
rol
pusha
add
add
add
jo
add
add
adc
sbb
push
ltr
xchg
sbb
pop
loopne
rol
sbb
add
je
add
fs
add
push
or
add
xchg
adc
add
loop
rol
pusha
add
add
add
add
pusha
add
add
sbb
pop
rol
add
add
add
jo
add
add
add
add
sbb
add
repnz
jo
out
add
js
add
sbb
add
or
add
add
xor
out
add
jo
add
add
add
adc
push
loopne
ror
ror
pop
pusha
push
xor
sub
add
xor
add
add
add
lock
push
ror
or
pusha
or
add
out
add
mov
sub
add
xor
add
add
add
lock
push
ror
or
pusha
or
add
out
add
mov
and
add
push
or
adc
add
xor
ror
or
out
add
adc
add
call
add
add
add
add
add
pop
xor
add
sbb
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
push
add
add
(bad)
(bad)
inc
add
add
add
add
sbb
add
add
add
xor
add
add
add
add
add
shl
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
nop
sbb
add
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
or
add
xor
add
xor
add
sbb
add
add
add
add
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
lock
add
add
add
cwde
add
xor
add
xor
add
sbb
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
cmp
add
cmp
add
add
rcl
add
add
add
add
add
add
rol
add
aaa
add
mov
rol
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
add
inc
cmp
add
xor
add
pop
cmp
add
ss
add
add
add
dec
cmp
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
stos
cmp
add
add
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
cmp
add
add
add
add
add
add
jl
add
add
add
cwde
cmp
add
add
add
add
add
inc
add
add
add
adc
add
add
add
inc
add
add
add
in
inc
add
add
add
and
add
add
add
add
add
add
fiadd
add
add
add
inc
add
add
add
mov
add
add
add
add
add
add
cmp
add
(bad)
cmp
add
adc
add
add
add
sbb
add
add
add
cmp
add
add
add
push
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
fidivr
add
add
add
jmp
add
aas
add
add
add
push
aas
add
add
add
and
add
add
add
xor
add
add
add
ds
add
add
add
pop
aas
add
add
add
push
add
add
add
jp
add
add
add
mov
add
add
add
cwde
aas
add
add
add
mov
add
add
add
add
add
add
aas
add
add
add
fidivr
add
add
add
in
aas
add
add
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
sub
add
add
add
inc
add
add
add
dec
inc
add
add
add
pop
inc
add
add
add
ins
inc
add
add
add
xchg
add
add
add
add
add
add
add
inc
add
add
add
in
inc
add
add
add
cld
inc
add
add
add
push
inc
add
add
add
sub
add
add
add
inc
add
add
add
inc
inc
add
add
add
push
inc
add
add
add
bound
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
jmp
add
cmp
add
cmp
add
add
add
add
add
add
add
cmp
add
fidivr
add
test
add
push
add
jne
push
jb
arpl
jae
jae
push
push
inc
push
dec
cs
dec
dec
add
push
je
imul
add
push
dec
dec
push
inc
push
dec
cs
ins
add
jne
jb
push
jns
je
ins
dec
outs
outs
jb
popa
je
outs
outs
add
outs
je
ins
ins
cs
ins
add
jae
jb
ins
jo
add
push
gs
imul
mov
gs
jne
jb
outs
je
jb
arpl
jae
xchg
add
outs
arpl
jae
xor
jb
je
add
add
imul
jb
add
outs
push
jb
arpl
jae
into
add
gs
imul
outs
arpl
jae
add
ins
jae
jb
ins
jo
add
pop
add
jne
push
jb
arpl
outs
inc
popa
arpl
add
gs
jb
arpl
fs
jae
add
clc
add
imul
ins
ins
outs
arpl
add
add
popa
bound
push
dec
imul
popa
ins
ins
jae
add
fs
imul
add
cdq
add
outs
arpl
jae
xor
js
add
add
je
outs
fs
gs
imul
add
sbb
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
inc
imul
jb
je
arpl
mov
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
push
add
outs
jae
dec
popa
outs
fs
gs
add
je
jne
jb
outs
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
ins
add
test
push
imul
rol
push
gs
imul
js
inc
add
or
push
outs
push
imul
outs
outs
imul
(bad)
add
je
imul
outs
outs
imul
add
inc
popa
ins
ins
dec
gs
dec
outs
outs
imul
add
inc
push
xor
cs
ins
add
test
push
jb
arpl
jae
outs
imul
add
imul
jb
jbe
ins
gs
popa
ins
jne
inc
add
add
push
jae
push
outs
imul
jb
jbe
ins
gs
inc
inc
push
inc
push
dec
xor
cs
ins
add
lock
je
push
imul
outs
ja
outs
add
add
je
dec
outs
outs
imul
jne
arpl
outs
inc
outs
je
jns
add
push
je
inc
popa
jo
jne
gs
outs
outs
je
js
add
add
je
push
arpl
imul
jb
fld
je
push
outs
ja
outs
fs
js
and
inc
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outs
push
imul
rol
gs
jmp
popa
ins
imul
imul
je
outs
outs
add
add
gs
inc
jb
je
arpl
push
arpl
outs
add
add
je
jb
jb
je
arpl
push
arpl
outs
add
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
loop
push
outs
push
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outs
je
or
inc
gs
popa
jae
inc
jb
outs
jb
add
add
popa
jo
jb
add
retf
add
je
jne
jb
outs
je
push
dec
add
pop
add
jae
gs
popa
ins
jne
add
outs
ins
ins
popa
outs
fs
imul
push
popa
imul
jo
imul
inc
gs
push
dec
outs
outs
add
popa
jo
je
imul
add
popa
jo
je
imul
add
popa
jo
ins
ins
outs
arpl
out
add
arpl
gs
outs
imul
add
outs
fs
outs
imul
add
jae
gs
popa
ins
jne
add
inc
ins
jae
jb
add
dec
popa
jae
inc
jb
outs
jb
add
inc
ins
jae
ins
ins
outs
arpl
add
add
popa
jo
imul
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
pop
add
imul
jae
fild
dec
gs
jo
gs
outs
outs
jb
popa
je
outs
outs
add
aad
dec
gs
jo
jb
popa
je
add
(bad)
add
popa
jo
gs
jb
jns
xor
push
jb
je
inc
imul
je
je
dec
popa
outs
fs
add
jl
push
gs
popa
outs
fs
gs
outs
jne
je
add
add
je
imul
imul
je
jb
jne
dec
outs
outs
inc
add
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
test
jb
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
call
arpl
outs
jne
je
add
push
jns
je
ins
push
imul
ins
gs
imul
gs
je
imul
inc
add
jo
inc
gs
je
imul
push
add
outs
add
je
inc
push
add
add
je
inc
dec
inc
push
add
or
dec
jae
popa
ins
imul
add
add
je
outs
arpl
gs
outs
outs
inc
add
fiadd
dec
gs
jo
gs
ins
ins
outs
arpl
jmp
dec
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
je
push
gs
imul
gs
add
inc
outs
outs
jae
ins
gs
push
add
mov
inc
gs
outs
outs
jae
ins
gs
outs
fs
mov
inc
jb
popa
je
inc
imul
gs
je
dec
popa
outs
fs
add
pop
add
jne
push
inc
jne
data16
add
sub
gs
outs
outs
jae
ins
gs
add
inc
outs
outs
jae
ins
gs
jne
jo
je
push
add
xor
gs
outs
outs
jae
ins
gs
add
add
add
add
add
add
add
add
add
add
add
test
add
add
nop
xor
add
add
mov
inc
add
mov
add
add
add
add
jo
jo
ss
fs
ins
add
gs
arpl
je
jb
gs
arpl
je
outs
popa
arpl
add
add
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
and
xor
add
xor
add
xor
add
xor
add
xor
and
bound
and
arpl
and
add
xor
and
data16
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
and
xor
and
xor
add
xor
cmp
and
popa
add
xor
arpl
and
add
xor
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
ss
add
cmp
and
cmp
and
popa
add
bound
and
arpl
and
add
ss
data16
aaa
xor
and
xor
and
xor
and
xor
and
xor
and
xor
add
aaa
aaa
add
aaa
cmp
and
cmp
and
popa
add
aaa
bound
and
arpl
and
add
aaa
add
aaa
data16
cmp
add
cmp
add
cmp
add
cmp
add
cmp
and
xor
add
cmp
add
cmp
add
cmp
add
cmp
and
bound
and
arpl
and
add
cmp
and
data16
cmp
add
cmp
add
cmp
add
cmp
add
cmp
and
xor
add
cmp
add
cmp
add
cmp
add
cmp
and
bound
and
arpl
and
add
cmp
and
data16
popa
xor
and
add
popa
xor
and
add
popa
xor
and
add
popa
add
popa
aaa
add
popa
cmp
and
add
popa
popa
add
popa
bound
and
add
popa
add
popa
add
popa
data16
bound
add
bound
add
bound
add
bound
add
bound
and
add
bound
add
bound
add
bound
add
bound
add
bound
and
add
bound
and
add
bound
and
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
and
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
and
add
arpl
and
add
arpl
and
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
xor
and
add
xor
and
add
gs
add
gs
add
cmp
and
add
gs
add
bound
and
add
gs
gs
data16
data16
and
add
data16
and
add
data16
and
add
data16
data16
add
data16
and
add
popaw
add
bound
and
add
data16
data16
data16
xor
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
add
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
xor
js
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
ss
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
aaa
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
cmp
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
cmp
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
popa
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
bound
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
arpl
add
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
fs
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
gs
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
and
js
xor
data16
xor
aaa
add
xor
cmp
and
js
cmp
and
js
popa
add
xor
bound
and
js
arpl
and
js
add
xor
add
xor
data16
xor
xor
popa
bound
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
dec
inc
add
add
add
add
dec
dec
push
inc
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
xor
add
add
inc
push
xor
add
add
add
add
inc
push
xor
add
add
add
add
inc
push
xor
add
add
inc
push
cmp
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
push
push
add
add
add
add
add
inc
push
add
add
add
add
add
inc
push
add
add
add
add
add
inc
push
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
push
dec
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
inc
pop
add
add
add
add
add
inc
pop
add
add
add
add
add
inc
pop
add
add
add
add
add
push
push
add
add
add
add
add
inc
push
add
add
add
add
add
push
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
push
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
dec
dec
xor
add
add
add
add
add
add
add
add
aaa
add
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
add
pop
dec
dec
xor
add
add
pop
dec
dec
add
add
add
add
pop
dec
dec
aaa
add
add
add
add
pop
dec
dec
cmp
add
add
add
pop
dec
dec
cmp
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
dec
dec
xor
add
add
pop
sub
add
push
add
add
pop
sub
add
add
add
push
sub
add
push
add
add
push
sub
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
inc
pop
add
add
add
add
pop
inc
push
push
add
add
add
add
pop
inc
inc
push
add
add
add
add
pop
inc
push
dec
add
add
add
add
pop
inc
inc
dec
add
add
add
add
pop
push
cmp
add
add
add
pop
push
cmp
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
inc
add
add
push
xor
add
add
push
xor
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
inc
pop
add
add
add
add
pop
push
push
push
add
add
add
add
pop
push
inc
push
add
add
add
add
pop
push
push
dec
add
add
add
add
pop
push
inc
dec
add
add
add
add
pop
push
cmp
add
add
add
add
pop
push
cmp
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
add
pop
push
xor
add
add
add
pop
push
xor
add
add
inc
inc
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
inc
add
add
add
add
push
xor
add
add
add
add
push
xor
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
add
add
xor
add
add
add
add
push
xor
add
add
add
xor
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
add
add
push
inc
pop
push
inc
and
inc
push
push
dec
push
inc
and
add
inc
push
dec
push
inc
and
add
dec
push
inc
and
add
push
inc
and
add
add
add
dec
push
inc
and
dec
dec
inc
dec
and
add
push
inc
push
and
add
add
push
dec
pop
and
add
add
push
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
push
dec
dec
push
push
and
add
inc
dec
dec
and
add
inc
inc
and
add
dec
push
add
add
add
or
inc
aam
add
add
add
add
add
adc
cmp
add
add
add
add
xor
add
sub
add
add
add
add
add
add
and
add
add
add
add
inc
push
aam
add
add
or
and
add
pop
pmuludq
add
adc
add
add
or
hlt
jmp
add
add
adc
add
add
sysret
hlt
jmp
add
add
adc
add
add
adc
hlt
jmp
add
add
adc
add
add
add
hlt
jmp
add
add
add
add
add
add
jmp
add
add
add
add
add
add
in
jmp
add
add
add
add
add
and
jmp
add
add
add
add
add
pavgb
add
adc
add
add
or
loopne
add
adc
add
add
sysret
loopne
add
adc
add
add
adc
loopne
add
adc
add
add
add
loopne
add
add
add
add
add
jmp
add
add
add
add
add
add
in
jmp
add
add
add
add
add
adc
jmp
add
add
add
add
add
add
shr
add
add
add
add
add
enter
add
add
add
add
add
add
shr
add
add
or
add
add
add
mov
add
add
add
add
add
adc
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
sbb
add
add
add
add
add
add
sub
add
add
add
add
add
add
js
add
or
add
add
add
jo
add
or
add
add
add
pusha
jmp
add
add
or
add
add
add
push
jmp
add
add
or
add
add
add
dec
jmp
add
add
or
add
add
add
cmp
add
or
add
add
add
sub
add
or
add
add
add
and
add
or
add
add
add
sbb
add
or
add
add
add
adc
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
clc
jmp
or
add
add
add
lock
or
add
add
cmp
loopne
add
or
add
add
add
fsubr
add
add
add
add
add
shr
add
add
add
add
adc
(bad)
jmp
add
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
sub
add
or
add
add
sub
add
or
add
add
add
add
add
add
add
add
or
and
add
inc
push
jmp
or
and
add
add
or
and
add
inc
inc
jmp
or
and
add
add
or
and
add
add
or
and
add
inc
sbb
add
or
and
add
inc
or
add
or
and
add
inc
add
add
or
and
add
inc
clc
jmp
add
or
and
add
inc
in
jmp
add
or
and
add
inc
in
add
or
and
add
inc
fsubr
add
or
and
add
inc
int3
jmp
add
or
and
add
inc
shr
add
add
or
and
add
inc
mov
add
or
and
add
inc
test
add
or
and
add
inc
pushf
jmp
add
or
and
add
inc
nop
jmp
add
or
and
add
inc
test
add
or
and
add
inc
js
add
or
and
add
inc
push
add
add
add
add
or
add
or
and
add
inc
push
jmp
add
or
and
add
add
or
add
add
add
or
add
add
add
or
or
add
xor
add
sub
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
clc
call
add
sub
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
and
add
add
add
add
push
push
mov
add
or
adc
add
pop
push
mov
add
or
adc
add
push
push
mov
add
or
adc
add
push
pop
mov
add
or
adc
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
inc
call
add
or
add
add
add
cmp
add
or
add
add
add
xor
add
or
add
add
add
sub
add
or
add
add
add
and
add
or
add
add
add
call
add
or
add
or
or
add
or
add
add
inc
inc
add
add
or
add
add
inc
inc
clc
out
add
add
or
add
add
inc
inc
call
add
add
add
add
or
fsub
add
or
add
add
inc
inc
shl
add
or
add
add
inc
inc
enter
add
add
or
add
add
inc
inc
mov
add
add
add
add
or
mov
add
or
add
add
inc
inc
test
add
or
add
add
inc
inc
mov
add
add
add
add
or
nop
out
add
add
or
add
add
inc
inc
test
add
or
add
add
inc
inc
jl
add
or
add
add
inc
inc
je
add
or
add
add
inc
inc
push
add
add
add
add
add
add
sub
add
add
add
add
add
adc
pusha
out
add
add
or
add
add
adc
pop
out
add
add
or
add
add
adc
push
out
add
add
or
add
add
adc
dec
out
add
add
or
add
add
adc
inc
out
add
add
or
add
add
adc
cmp
add
or
add
add
adc
xor
add
or
add
add
adc
sub
add
or
add
add
adc
and
add
or
add
add
adc
sbb
add
or
add
add
adc
adc
add
or
add
add
adc
or
add
or
add
add
adc
add
add
or
add
add
adc
clc
out
add
add
or
add
add
adc
lock
add
add
or
add
add
adc
in
add
or
add
add
add
or
adc
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
js
add
or
add
add
dec
inc
push
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
inc
cmp
add
or
add
add
inc
sub
add
or
add
add
inc
sbb
add
or
add
add
inc
or
add
or
add
add
inc
clc
in
add
add
or
add
add
inc
call
add
add
add
add
add
inc
fsub
add
or
add
add
inc
enter
add
add
or
add
add
inc
mov
add
add
add
add
add
inc
test
add
or
add
add
inc
cwde
in
add
add
or
add
add
inc
mov
add
or
add
add
inc
and
add
add
or
add
add
sub
add
js
add
add
add
add
add
inc
js
add
or
add
add
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
fs
add
add
or
adc
add
inc
pop
in
add
add
or
adc
add
inc
push
in
add
add
or
adc
add
inc
dec
in
add
add
or
adc
add
inc
inc
in
add
add
or
adc
add
inc
cmp
add
or
adc
add
inc
xor
add
or
adc
add
inc
sub
add
or
adc
add
inc
and
add
or
add
add
inc
adc
add
or
add
add
inc
add
add
or
add
add
add
in
add
add
or
add
add
or
lock
add
add
or
add
add
adc
in
add
add
or
add
add
adc
add
add
add
pop
add
sub
add
js
add
add
add
add
add
inc
js
add
or
add
add
add
fsub
add
or
add
add
add
shl
add
or
add
add
add
int3
in
add
add
or
add
add
add
(bad)
in
add
add
or
add
add
add
shl
add
add
or
add
add
add
mov
add
add
add
add
add
sub
add
add
add
add
add
sub
add
or
add
add
add
test
add
or
add
add
add
mov
add
add
add
add
add
sub
add
or
add
add
add
xchg
in
add
add
or
add
add
add
nop
in
add
add
or
add
add
add
mov
add
or
add
add
add
and
add
add
or
add
add
add
jl
add
or
add
add
add
je
add
or
add
add
add
ins
in
add
add
or
add
add
add
fs
add
add
or
add
add
add
pop
in
add
add
or
add
add
add
push
in
add
add
or
add
add
add
dec
in
add
add
or
add
add
add
inc
in
add
add
or
add
add
add
cmp
add
or
add
add
add
xor
add
or
add
add
add
sub
add
or
add
add
add
and
add
or
add
add
add
sbb
add
or
add
add
add
adc
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
cld
jecxz
add
add
or
add
add
add
in
jmp
add
add
or
add
add
add
in
add
or
add
add
add
hlt
jecxz
add
add
or
add
add
or
lock
add
add
or
add
add
or
call
add
add
add
add
add
add
sub
add
add
add
add
add
or
call
add
add
add
add
add
add
sub
add
add
add
add
add
add
in
jmp
add
add
or
add
add
add
in
add
or
add
add
add
loopne
add
or
add
add
or
fsub
add
sbb
add
add
or
shl
add
or
add
add
sub
add
sub
add
add
add
add
add
or
shl
add
or
add
xor
sub
add
sub
add
add
add
add
add
add
enter
add
add
or
add
add
add
mov
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
jo
add
or
add
add
adc
fs
add
add
or
add
add
pop
addps
add
sbb
add
add
or
pop
jecxz
add
add
sbb
add
add
or
add
add
or
add
add
or
inc
jecxz
add
add
sbb
add
add
or
add
or
add
add
or
add
or
add
add
wbinvd
sub
add
or
add
add
adc
sub
add
or
add
add
add
test
add
or
add
add
add
lock
add
add
or
add
add
add
fsub
add
sbb
add
add
add
inc
jecxz
add
add
sbb
add
add
add
and
add
sbb
add
add
or
and
add
sbb
add
add
adc
sbb
add
or
add
add
adc
adc
add
or
add
add
wbinvd
or
add
or
add
add
adc
or
add
or
add
add
pop
(bad)
jecxz
add
add
sbb
add
add
or
add
add
sbb
add
add
add
or
inc
add
add
loop
add
add
sub
add
add
add
add
add
or
lock
add
add
or
add
add
add
or
add
add
sub
add
sub
add
add
add
add
add
add
or
adc
add
sub
add
sub
add
add
add
add
add
add
or
add
add
sub
add
sub
add
add
add
add
add
add
enter
add
add
sbb
add
add
sub
add
mov
add
push
add
test
add
or
add
add
add
cwde
loop
add
add
or
add
add
add
add
add
or
add
add
inc
fs
add
add
or
add
add
inc
dec
in
add
add
or
add
add
inc
xor
add
or
add
add
dec
inc
mov
add
or
add
add
inc
and
add
add
or
add
add
add
or
adc
add
inc
pusha
loop
add
add
or
add
add
inc
push
loop
add
add
or
add
add
add
or
add
add
inc
cmp
add
or
add
add
inc
xor
add
or
add
add
inc
and
add
or
add
add
add
or
add
add
inc
or
add
or
add
add
add
or
add
add
inc
pop
in
add
add
or
add
add
inc
inc
in
add
add
or
add
add
add
or
add
add
add
or
add
add
inc
call
add
add
add
add
add
add
or
add
add
inc
fsub
add
or
add
add
inc
shl
add
or
add
add
add
or
add
add
inc
shl
add
add
or
add
add
inc
mov
add
add
add
add
add
inc
mov
add
or
add
add
add
or
add
add
inc
pushf
loope
add
add
or
add
add
inc
push
in
add
add
or
add
add
inc
cmp
add
or
add
add
inc
sub
add
or
add
add
inc
inc
nop
loope
add
add
or
add
add
inc
and
add
add
or
add
add
add
or
add
add
add
or
adc
add
inc
pusha
loope
add
add
or
add
add
inc
pop
loope
add
add
or
add
add
inc
push
loope
add
add
or
add
add
inc
inc
dec
loope
add
add
or
add
add
inc
inc
loope
add
add
or
add
add
inc
cmp
add
or
add
add
inc
xor
add
or
add
add
pop
movaps
add
adc
add
add
or
sub
add
adc
add
add
sysret
sub
add
adc
add
add
adc
sub
add
adc
add
add
add
sub
add
add
add
add
add
loope
add
add
add
add
add
add
in
jmp
add
add
add
add
add
and
jmp
add
add
add
add
add
mov
add
adc
add
add
or
and
add
adc
add
add
sysret
and
add
adc
add
add
adc
and
add
adc
add
add
add
and
add
add
add
add
add
loope
add
add
add
add
add
add
in
jmp
add
add
add
add
add
and
jmp
add
add
add
add
add
(bad)
loope
add
add
adc
add
add
or
sbb
add
adc
add
add
sysret
sbb
add
adc
add
add
adc
sbb
add
adc
add
add
add
sbb
add
add
add
add
add
loope
add
add
add
add
add
add
adc
add
add
add
add
invd
loope
add
add
adc
add
add
or
or
add
adc
add
add
sysret
or
add
adc
add
add
adc
or
add
adc
add
add
add
or
add
add
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
psubb
add
adc
add
add
or
clc
loopne
add
add
adc
add
add
sysret
clc
loopne
add
add
adc
add
add
adc
clc
loopne
add
add
adc
add
add
add
clc
loopne
add
add
add
add
add
add
loopne
add
add
add
add
add
add
lock
add
add
add
add
add
paddb
add
add
add
add
or
cld
loop
add
add
add
add
add
sysret
cld
loop
add
add
add
add
add
adc
cld
loop
add
add
add
add
add
add
cld
loop
add
add
add
add
add
add
loop
add
add
add
add
add
add
call
add
add
add
ss
add
add
add
add
ss
add
add
add
add
ss
jmp
add
add
add
add
add
add
in
add
add
add
add
add
shl
add
add
add
enter
add
add
add
sub
shl
add
add
add
add
add
adc
add
add
add
add
add
dec
inc
mov
add
add
add
add
push
inc
dec
mov
add
add
add
add
push
cs
mov
add
or
add
add
inc
cs
add
or
add
add
dec
inc
mov
add
add
add
add
push
dec
inc
nop
loopne
add
add
or
add
add
cs
mov
add
or
add
add
inc
cs
add
or
add
add
dec
inc
and
add
add
or
add
add
inc
dec
and
add
add
or
add
add
inc
inc
jo
add
or
add
add
inc
das
pusha
loopne
add
add
or
add
add
dec
inc
push
loopne
add
add
or
add
add
dec
inc
inc
loopne
add
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
or
add
or
add
add
dec
inc
add
add
or
add
add
dec
inc
clc
out
add
add
or
add
add
dec
inc
call
add
add
add
add
or
fsub
add
or
add
add
dec
inc
shl
add
or
add
add
dec
inc
enter
add
add
or
add
add
dec
inc
mov
add
add
add
add
or
mov
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
mov
add
add
add
add
or
nop
out
add
add
or
add
add
dec
inc
sbb
add
or
add
dec
add
add
sub
add
add
add
add
add
dec
inc
or
add
or
add
dec
add
add
sub
add
add
add
add
add
dec
inc
clc
fild
add
add
or
add
dec
add
add
sub
add
add
add
add
add
dec
inc
in
fild
add
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
jl
add
or
add
add
dec
inc
je
add
or
add
add
dec
inc
loopne
add
or
add
add
inc
inc
rcr
add
or
add
add
inc
inc
rcr
add
add
or
add
add
dec
inc
mov
add
or
add
add
inc
inc
mov
add
add
add
add
or
nop
fild
add
add
or
add
add
dec
inc
mov
add
or
add
add
dec
inc
js
add
or
add
add
das
inc
push
add
add
add
add
or
pop
fild
add
add
or
add
add
dec
inc
dec
fild
add
add
or
add
add
inc
inc
cmp
add
or
add
add
inc
inc
sub
add
or
add
add
dec
inc
sbb
add
or
add
add
inc
inc
or
add
or
add
add
dec
inc
clc
fiadd
add
add
or
add
add
dec
inc
call
add
add
add
add
or
loopne
add
or
add
add
dec
inc
fcomp
add
or
add
add
dec
inc
rcr
add
or
add
add
dec
inc
enter
add
add
or
add
add
dec
inc
rcr
add
add
or
add
add
dec
inc
mov
add
add
add
add
or
mov
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
mov
add
add
add
add
or
nop
fiadd
add
add
or
add
add
dec
inc
sbb
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
jo
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
inc
pusha
fiadd
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
push
fiadd
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
inc
fiadd
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
xor
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
and
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
push
add
add
add
add
add
add
sub
add
add
add
add
add
inc
sbb
fiadd
add
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
sbb
loop
add
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
adc
fiadd
add
add
or
add
add
add
or
add
add
add
add
add
inc
adc
fld
add
add
or
add
add
sub
add
sub
add
add
add
add
add
sbb
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
inc
loopne
add
or
add
add
sub
add
sub
add
add
add
add
add
adc
add
or
add
add
add
rcr
add
add
add
add
add
dec
inc
(bad)
fld
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
mov
add
add
add
add
add
add
sub
add
add
add
add
add
dec
inc
mov
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
mov
add
add
add
add
add
add
sub
add
add
add
add
add
dec
inc
nop
fld
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
sbb
add
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
jo
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
or
add
or
adc
add
dec
inc
pop
fld
add
add
or
add
add
dec
inc
push
fld
add
add
or
add
add
dec
inc
dec
fld
add
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
and
add
or
add
add
dec
inc
sbb
add
or
add
add
dec
inc
or
add
or
add
add
dec
inc
cld
fadd
add
add
or
add
add
dec
inc
hlt
fadd
add
add
or
add
add
dec
inc
in
fadd
add
add
or
add
add
dec
inc
in
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
sbb
add
or
add
add
dec
inc
or
add
or
add
add
dec
inc
clc
in
add
add
or
add
add
dec
inc
call
add
add
add
add
push
dec
inc
fsub
add
or
add
add
dec
inc
enter
add
add
or
add
add
dec
inc
mov
add
add
add
add
push
dec
inc
test
add
or
add
add
dec
inc
cwde
in
add
add
or
add
add
dec
inc
mov
add
or
add
add
dec
inc
fcomp
add
or
add
add
dec
inc
enter
add
add
or
add
add
adc
add
or
add
add
sub
add
js
add
add
add
add
add
dec
inc
rcr
add
add
or
add
add
dec
inc
mov
add
add
add
add
add
add
sub
add
add
add
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
in
add
add
or
add
add
add
fadd
add
add
or
add
add
add
in
add
add
or
add
add
add
fadd
add
add
or
add
add
dec
inc
and
add
or
add
add
dec
inc
adc
add
or
add
add
dec
inc
add
add
or
add
add
add
fadd
add
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
inc
mov
add
add
add
add
pop
dec
inc
cwde
fadd
add
add
or
add
add
dec
inc
nop
fadd
add
add
or
add
add
inc
adc
add
add
add
pop
add
sub
add
js
add
add
add
add
add
inc
dec
rcr
add
add
or
add
add
dec
inc
cld
loop
add
add
or
inc
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
or
loop
add
add
or
adc
add
sub
add
sub
add
add
add
add
add
dec
inc
sbb
add
add
or
add
add
sub
add
sub
add
add
add
add
add
add
jo
add
or
add
add
dec
inc
pusha
fadd
add
add
or
add
add
dec
inc
fs
add
add
or
add
add
dec
inc
dec
in
add
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
mov
add
or
add
add
dec
inc
and
add
add
or
add
add
inc
dec
js
add
or
add
add
inc
or
add
or
adc
add
dec
inc
pusha
loop
add
add
or
add
add
dec
inc
push
loop
add
add
or
add
add
dec
inc
dec
loop
add
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
and
add
or
add
add
dec
inc
sbb
add
or
add
add
dec
inc
or
add
or
add
add
dec
inc
add
add
or
add
add
dec
inc
pop
in
add
add
or
add
add
dec
inc
inc
in
add
add
or
add
add
dec
inc
cld
loope
add
add
or
add
add
dec
inc
lock
add
add
or
add
add
dec
inc
call
add
add
add
add
push
dec
inc
push
fadd
add
add
or
add
add
inc
das
inc
fadd
add
add
or
add
add
dec
inc
fsub
add
or
add
add
dec
inc
shl
add
or
add
add
dec
inc
enter
add
add
or
add
add
dec
inc
shl
add
add
or
add
add
dec
inc
mov
add
add
add
add
push
dec
inc
mov
add
or
add
add
dec
inc
test
add
or
add
add
dec
inc
pushf
loope
add
add
or
add
add
dec
inc
push
in
add
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
sub
add
or
add
add
dec
inc
nop
loope
add
add
or
add
add
dec
inc
and
add
add
or
add
add
dec
inc
js
add
or
add
add
inc
inc
xor
add
or
adc
add
dec
inc
pusha
loope
add
add
or
add
add
dec
inc
pop
loope
add
add
or
add
add
dec
inc
push
loope
add
add
or
add
add
dec
inc
dec
loope
add
add
or
add
add
dec
inc
inc
loope
add
add
or
add
add
dec
inc
cmp
add
or
add
add
dec
inc
xor
add
or
add
add
add
in
jmp
add
add
add
add
add
adc
fs
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
in
jmp
add
add
add
add
add
adc
fs
add
add
add
add
add
sub
add
sub
add
add
add
add
add
cmp
and
add
pusha
add
add
add
cmp
add
fs
add
add
cmp
add
pusha
add
add
add
cmp
add
add
add
add
sub
in
add
add
add
add
add
add
shl
add
add
add
add
add
int3
in
add
add
add
add
add
add
(bad)
in
add
add
add
add
add
add
shl
add
add
add
add
add
add
mov
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
add
add
sub
add
add
add
add
add
xchg
in
add
add
add
add
add
add
nop
in
add
add
add
add
add
add
mov
add
add
add
add
add
and
add
add
add
add
add
add
jl
add
add
add
add
add
hlt
jmp
add
add
adc
add
add
add
loopne
add
adc
add
add
add
sub
add
adc
add
add
add
and
add
adc
add
add
add
sbb
add
adc
add
add
add
or
add
adc
add
add
add
clc
loopne
add
add
adc
add
add
add
cld
loop
add
add
add
add
add
add
hlt
jmp
add
add
adc
add
add
add
loopne
add
adc
add
add
add
sub
add
adc
add
add
add
and
add
adc
add
add
add
sbb
add
adc
add
add
add
or
add
adc
add
add
add
clc
loopne
add
add
adc
add
add
add
cld
loop
add
add
add
add
add
push
pmuludq
add
adc
add
add
pavgb
add
adc
add
add
movaps
add
adc
add
add
mov
add
adc
add
add
(bad)
loope
add
add
adc
add
add
invd
loope
add
add
adc
add
add
psubb
add
adc
add
add
paddb
add
add
add
add
adc
jmp
add
add
adc
add
add
push
adc
jmp
add
add
sbb
add
add
push
adc
loope
add
add
adc
add
add
push
adc
loope
add
add
adc
add
add
push
adc
loope
add
add
sbb
add
add
push
adc
loope
add
add
adc
add
add
push
adc
loopne
add
add
sbb
add
add
push
adc
loop
add
add
add
add
add
pop
unpcklps
add
add
add
add
or
adc
add
add
add
add
pop
(bad)
fadd
add
add
adc
add
add
or
or
add
adc
add
add
pop
cmpxchg
add
add
add
add
or
mov
add
add
add
add
sysret
mov
add
add
add
add
adc
mov
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
adc
mov
add
add
add
add
add
in
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
and
or
add
add
add
add
add
cld
fild
add
add
add
add
add
fild
add
add
in
fild
add
add
add
in
add
add
add
add
fild
add
add
aam
add
add
add
add
add
add
enter
add
add
add
add
add
sub
fild
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
add
add
add
js
add
add
add
add
xor
mov
add
add
add
add
xor
call
add
add
add
add
and
mov
add
add
add
add
and
mov
add
add
add
add
add
jo
add
pusha
add
add
add
cmp
add
fs
add
add
aaa
push
add
add
add
add
add
push
add
add
add
add
and
add
add
add
add
add
fadd
add
add
add
add
add
add
pusha
fild
add
add
pusha
add
add
add
cmp
add
fs
add
add
aaa
pop
fild
add
add
pusha
add
add
add
aaa
pop
fild
add
add
add
add
add
cmp
add
pusha
add
add
add
cmp
add
fs
add
add
xor
call
add
add
add
add
add
mov
add
add
add
add
add
dec
fild
add
add
add
add
add
add
inc
fild
add
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
dec
fild
add
add
add
add
add
add
inc
fild
add
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
fild
add
add
add
add
add
or
fiadd
add
add
add
add
add
cmpxchg
add
add
add
add
add
mov
add
add
add
add
add
lock
add
add
add
add
add
add
call
add
add
add
add
add
add
fiadd
add
add
add
add
loopne
add
add
add
fcomp
add
add
add
add
add
rcr
add
add
add
add
add
enter
add
add
add
add
add
add
fiadd
add
add
add
xor
dec
fild
add
add
add
add
add
xor
inc
fild
add
add
add
add
add
xor
cmp
add
add
add
add
xor
xor
add
add
add
add
xor
sub
add
add
add
add
xor
and
add
add
add
add
xor
sbb
add
add
add
add
xor
adc
add
add
add
add
xor
dec
fild
add
add
add
add
add
xor
inc
fild
add
add
add
add
add
xor
cmp
add
add
add
add
xor
xor
add
add
add
add
xor
sub
add
add
add
add
xor
and
add
add
add
add
xor
sbb
add
add
add
add
xor
adc
add
add
add
add
xor
dec
fild
add
add
add
add
add
xor
inc
fild
add
add
add
add
add
xor
cmp
add
add
add
add
xor
xor
add
add
add
add
xor
sub
add
add
add
add
xor
and
add
add
add
add
xor
sbb
add
add
add
add
xor
adc
add
add
add
add
xor
dec
fild
add
add
add
add
add
xor
inc
fild
add
add
add
add
add
xor
cmp
add
add
add
add
xor
xor
add
add
add
add
xor
sub
add
add
add
add
xor
and
add
add
add
add
xor
sbb
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
push
cwde
fiadd
add
add
add
add
add
add
nop
fiadd
add
add
add
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
js
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
add
add
push
pusha
fiadd
add
add
add
add
add
add
cwde
fiadd
add
add
add
add
add
add
nop
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
js
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
add
add
ds
fiadd
add
add
add
add
add
add
pop
fiadd
add
add
add
add
add
add
push
fiadd
add
add
add
add
add
add
dec
fiadd
add
add
add
add
add
add
inc
fiadd
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
clc
fld
add
add
add
add
add
add
lock
add
add
add
add
add
add
call
add
add
add
add
add
add
fld
add
add
add
add
add
add
fcomp
add
add
add
add
add
rcr
add
add
add
add
add
enter
add
add
add
add
add
add
rcr
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
fld
add
add
add
add
add
add
push
fld
add
add
add
add
add
add
dec
fld
add
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
clc
fadd
add
add
add
add
add
add
lock
add
add
add
add
add
add
call
add
add
add
add
add
push
loopne
add
add
add
add
add
fcomp
add
add
add
add
add
rcr
add
add
add
add
add
enter
add
add
add
add
add
add
rcr
add
add
or
add
add
add
mov
add
add
add
add
add
ds
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
add
sbb
add
add
or
add
add
add
je
add
add
add
add
add
ins
fadd
add
add
add
add
add
add
pop
fiadd
add
add
add
add
add
add
dec
fiadd
add
add
add
add
add
add
pusha
fadd
add
add
or
add
add
add
push
fadd
add
add
or
add
add
add
inc
fadd
add
add
or
add
add
add
xor
add
or
add
add
add
sub
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
clc
xlat
add
or
add
add
add
cwde
fiadd
add
add
add
add
add
add
nop
fiadd
add
add
add
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
js
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
add
add
add
pop
pusha
fiadd
add
add
add
add
add
add
cwde
fiadd
add
add
add
add
add
add
nop
fiadd
add
add
add
add
add
add
jo
add
add
add
add
add
js
add
add
add
add
add
pusha
fiadd
add
add
add
add
add
add
push
add
add
add
add
add
pop
pop
fiadd
add
add
add
add
add
add
sbb
add
add
or
add
add
add
push
fiadd
add
add
add
add
add
add
dec
fiadd
add
add
add
add
add
add
lock
add
add
add
add
add
call
add
add
add
add
add
sub
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
add
add
add
add
add
rcl
add
add
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
add
add
add
add
add
add
rcl
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
test
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
aas
cwde
xlat
add
add
add
add
add
cwde
xlat
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
add
add
jl
add
add
add
add
add
ins
fadd
add
add
add
add
add
add
loopne
add
add
add
add
add
jo
add
or
add
add
add
push
add
add
add
add
add
sub
add
add
add
add
add
pop
xlat
add
add
add
add
add
push
xlat
add
add
add
add
add
dec
xlat
add
add
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
and
sub
add
add
add
add
and
add
add
add
add
add
add
and
add
add
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
sub
add
add
add
add
cmp
xor
add
add
add
add
cmp
add
add
add
add
add
and
sub
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
dec
inc
cld
(bad)
add
or
add
add
inc
dec
cld
(bad)
add
or
add
add
dec
inc
lock
add
or
add
add
adc
add
or
add
add
inc
cs
add
or
add
add
dec
or
(bad)
add
or
add
add
dec
or
(bad)
add
or
add
add
(bad)
test
add
or
add
add
adc
(bad)
add
or
add
add
dec
inc
mov
add
add
add
add
push
dec
inc
xchg
(bad)
add
or
add
add
dec
inc
mov
add
or
add
add
dec
inc
adc
add
add
or
add
add
dec
inc
je
add
or
add
add
dec
inc
ins
(bad)
add
or
add
add
dec
inc
fs
add
or
add
add
dec
inc
pop
(bad)
add
or
add
add
dec
inc
push
(bad)
add
or
add
add
sub
add
sub
add
add
add
add
add
inc
inc
inc
(bad)
add
or
push
add
add
add
sub
add
add
add
add
add
inc
inc
inc
(bad)
add
or
adc
add
dec
inc
cmp
add
or
add
add
dec
inc
xor
add
or
add
add
dec
inc
cld
loop
add
add
or
inc
add
add
add
sub
add
add
add
add
add
dec
inc
and
add
or
add
add
inc
inc
adc
add
or
adc
add
dec
inc
add
add
or
add
add
sub
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
loopne
add
or
add
add
dec
inc
rcl
add
or
add
add
add
or
add
add
inc
sub
aad
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
inc
inc
push
aad
add
add
or
add
add
dec
inc
inc
aad
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
dec
inc
sbb
add
or
add
add
dec
inc
or
add
or
add
add
sub
add
sub
add
add
add
add
add
dec
inc
js
add
or
add
add
inc
dec
sbb
add
or
add
add
adc
add
add
or
add
add
adc
clc
aam
add
add
add
add
add
add
or
inc
add
add
aam
add
add
sub
add
add
add
add
add
add
in
aam
add
add
or
add
add
inc
inc
loopne
add
or
adc
add
dec
inc
rcl
add
or
add
add
add
(bad)
aam
add
add
or
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
lods
aam
add
add
adc
add
add
add
movs
aam
add
add
adc
add
add
add
pushf
aam
add
add
add
add
add
add
fs
add
add
add
add
add
add
xchg
aam
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
add
add
lods
aam
add
add
adc
add
add
add
movs
aam
add
add
adc
add
add
add
pushf
aam
add
add
add
add
add
add
fs
add
add
add
add
add
add
xchg
aam
add
add
add
add
add
add
mov
add
add
add
add
add
test
add
add
add
add
add
jl
add
add
add
add
add
je
add
add
add
add
add
ins
aam
add
add
add
add
add
add
fs
add
add
add
add
add
add
pop
aam
add
add
add
add
add
add
loopne
add
adc
add
add
add
fsub
add
adc
add
add
add
loopne
add
adc
add
add
add
fsub
add
adc
add
add
dec
adc
add
add
add
add
add
enter
add
add
add
add
add
dec
adc
add
add
add
add
add
adc
add
add
add
add
add
in
jmp
add
add
add
add
add
add
nop
test
add
mov
add
add
add
test
add
xor
add
inc
test
add
push
test
add
pusha
test
add
jo
add
sub
add
add
add
test
add
adc
add
add
test
add
clc
test
add
add
add
add
add
add
xor
add
inc
test
add
add
push
test
add
add
pusha
test
add
add
jo
add
sub
add
add
add
sub
add
xor
add
add
add
add
add
add
shl
add
cmps
add
loopne
add
lock
add
add
add
adc
add
and
add
add
add
add
add
pusha
cmps
add
add
stos
add
lock
add
add
add
add
add
add
add
add
add
or
or
add
add
adc
add
add
add
pop
sbb
add
add
add
add
sbb
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
movs
add
shl
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
inc
cmps
add
push
cmps
add
pusha
cmps
add
jo
add
and
add
add
add
add
add
add
add
cmps
add
shl
add
clc
cmps
add
or
add
sbb
add
sub
add
cmp
add
add
add
jo
add
and
add
and
add
and
add
add
add
add
adc
add
nop
cmps
add
add
lods
add
xor
add
add
add
movs
add
sbb
add
pusha
scas
add
pusha
scas
add
add
add
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
fsub
add
call
add
add
mov
add
js
add
sub
add
movs
add
dec
movs
add
pop
movs
add
push
add
add
add
mov
add
add
add
add
add
movs
add
clc
movs
add
or
add
sbb
add
sub
add
push
movs
add
pusha
movs
add
jo
add
and
add
nop
scas
add
nop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
adc
push
pop
sbb
add
mov
add
add
adc
add
mov
add
shl
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
inc
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
add
add
add
sbb
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
add
mov
add
add
inc
mov
add
add
add
and
add
add
add
add
add
add
add
mov
add
shl
add
loopne
add
lock
add
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
adc
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
inc
mov
add
push
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
pusha
mov
add
jo
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
pusha
mov
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
push
sldt
add
add
add
adc
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
add
mov
add
add
jo
add
add
add
add
add
add
add
add
add
lahf
add
rcr
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
xor
add
inc
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
mov
add
pusha
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
push
mov
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
add
add
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
mov
add
add
push
mov
add
add
add
sahf
add
rcr
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
inc
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
push
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
pusha
lahf
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
nop
mov
add
add
add
add
or
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
add
add
xor
xor
ss
cmp
cmp
add
mov
add
sar
mov
add
add
add
add
popf
add
rcr
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
sahf
add
push
sahf
add
pusha
sahf
add
jo
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
add
mov
add
cmp
rcr
add
pushf
add
lock
add
add
add
adc
add
and
add
xor
add
inc
popf
add
push
popf
add
push
popf
add
push
popf
add
push
popf
add
push
popf
add
push
popf
add
push
popf
add
push
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
pusha
popf
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
add
sbb
add
sbb
add
and
add
sub
sub
cs
xor
xor
add
rol
add
add
jo
add
add
add
add
sbb
add
add
add
add
add
add
add
call
rcr
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
add
lock
lock
lock
lock
lock
lock
adc
add
and
add
xor
add
inc
fwait
add
push
fwait
add
pusha
fwait
add
jo
add
sbb
add
add
add
add
add
add
add
fwait
add
rcr
add
loopne
add
lock
add
add
add
pushf
add
and
add
pushf
add
inc
pushf
add
push
pushf
add
pusha
pushf
add
jo
add
sbb
nop
pushf
add
mov
add
add
add
add
pushf
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
push
pop
pusha
cdq
add
jo
add
sbb
add
add
add
add
add
add
add
cdq
add
rcr
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
pusha
call
pusha
call
pusha
call
pusha
call
pusha
call
pusha
call
pusha
call
pusha
call
mov
add
add
add
add
cwde
add
rcr
add
loopne
add
lock
add
add
add
adc
add
add
add
mov
add
add
add
add
xor
add
inc
cwde
add
push
cwde
add
pusha
cwde
add
jo
add
sbb
add
add
add
or
add
adc
add
add
add
add
mov
add
rcl
add
xchg
add
loopne
add
lock
add
add
add
adc
add
add
add
jo
add
add
add
add
xor
add
inc
xchg
add
push
xchg
add
pusha
xchg
add
jo
add
adc
add
add
add
enter
add
add
rol
add
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
pop
les
add
add
pusha
les
add
add
add
add
add
rcl
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
add
add
add
add
add
add
add
push
pop
inc
xchg
add
push
xchg
add
pusha
xchg
add
jo
add
adc
add
add
add
add
add
add
add
call
add
add
les
add
add
add
add
xchg
add
add
add
push
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
adc
add
loopne
add
call
add
add
add
add
add
enter
add
add
mov
add
add
add
add
add
enter
add
add
leave
add
add
add
add
add
add
add
add
add
pusha
leave
add
push
add
add
add
add
push
pop
add
add
add
add
push
xchg
add
pusha
xchg
add
jo
add
adc
add
add
add
add
add
add
add
xchg
add
add
add
add
push
pop
add
leave
add
adc
add
add
add
add
add
nop
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
inc
xchg
add
add
add
add
push
pop
add
add
jo
add
add
add
add
add
add
pusha
nop
add
jo
add
adc
add
add
add
add
add
add
add
nop
add
add
add
add
push
pop
add
add
add
retf
add
add
pop
add
add
loopne
add
lock
add
add
add
add
adc
add
and
add
xor
add
inc
nop
add
add
add
add
add
xor
add
add
retf
add
sbb
add
add
add
add
add
mov
add
add
add
add
dec
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
js
add
add
add
add
add
add
jo
add
or
add
mov
add
add
retf
add
add
add
add
add
mov
add
add
inc
mov
add
add
push
mov
add
add
add
retf
add
add
add
add
add
add
add
push
pop
or
add
add
or
or
add
add
add
add
add
add
adc
add
adc
push
mov
add
add
add
add
add
lock
add
add
sbb
add
add
push
add
add
add
add
add
add
test
add
add
or
add
xor
add
pop
test
add
add
add
add
add
add
test
add
add
clc
test
add
add
and
add
dec
xchg
add
add
jo
add
cwde
xchg
add
add
rol
add
xchg
add
add
add
add
inc
int
add
add
add
add
push
pop
or
or
or
add
add
lldt
add
add
adc
adc
adc
push
pop
sbb
add
sbb
sbb
add
add
push
pop
and
and
add
sub
sub
add
js
add
mov
add
cwde
add
add
add
test
add
mov
add
add
add
add
add
fadd
add
call
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
xor
add
inc
add
add
add
push
add
add
add
pusha
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
loopne
add
lock
add
add
add
add
adc
add
and
add
xor
add
inc
add
add
add
push
add
add
add
pusha
add
add
add
jo
add
add
add
add
add
adc
add
adc
add
add
add
add
add
push
pop
or
add
add
or
or
push
movups
add
add
add
add
add
add
adc
add
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
add
cmp
add
cmp
add
add
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
arpl
addr16
ins
outs
outs
jo
js
add
mov
add
add
cwde
jg
add
add
test
add
mov
add
add
jg
add
add
fdivr
add
add
call
add
add
jg
add
add
or
add
sbb
add
sub
add
cmp
add
dec
add
add
add
pop
add
add
add
push
add
add
add
add
int
add
add
adc
add
and
add
xor
add
inc
xchg
add
add
push
xchg
add
add
pusha
xchg
add
add
jo
add
add
add
add
add
add
add
add
add
xchg
add
add
rol
add
loopne
add
lock
add
add
add
add
adc
add
and
add
xor
add
inc
mov
add
add
push
mov
add
add
pusha
mov
add
add
jo
add
or
add
add
add
add
add
add
add
mov
add
add
ror
add
clc
mov
add
add
or
add
and
add
loopne
add
mov
add
add
mov
add
add
loopne
add
lock
add
add
pop
retf
add
sub
add
cmp
add
dec
mov
add
add
pop
mov
add
add
or
add
add
add
add
add
mov
add
add
or
add
sub
add
inc
mov
add
add
push
mov
add
add
pusha
mov
add
add
jo
add
or
add
add
add
add
add
add
add
mov
add
add
ror
add
loopne
add
lock
add
add
add
add
mov
add
add
and
add
mov
add
add
inc
mov
add
add
push
mov
add
add
pusha
mov
add
add
jo
add
or
nop
mov
add
add
mov
add
add
add
add
mov
add
add
ror
add
mov
add
add
lock
add
add
add
add
adc
add
and
add
xor
add
inc
lea
add
add
push
lea
add
add
pusha
lea
add
add
jo
add
or
add
add
add
add
add
add
add
lea
add
add
ror
add
loopne
add
lock
add
add
add
add
adc
add
add
add
add
add
sub
add
add
add
inc
(bad)
add
add
add
add
add
add
add
add
add
jns
add
add
pop
jns
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
ja
add
add
loopne
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
add
push
xlat
add
add
add
add
add
jbe
add
add
shl
add
add
loopne
add
lock
add
add
add
add
add
adc
add
add
and
add
add
add
add
add
add
fdiv
add
add
call
add
add
cwde
xlat
add
mov
add
add
add
test
add
mov
add
add
jb
add
add
add
xlat
add
fcom
add
add
add
add
add
add
mov
add
add
cwde
jb
add
add
add
fadd
add
add
sbb
add
add
add
add
add
outs
add
add
add
push
fld
add
add
add
add
push
pop
or
or
or
add
add
add
add
add
push
outs
add
pusha
outs
add
jo
add
sub
add
add
nop
outs
add
mov
add
add
add
add
outs
add
shr
add
add
loopne
add
lock
add
add
add
add
adc
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
fild
add
add
and
add
add
add
add
add
add
add
add
add
ins
add
loopne
add
lock
add
add
add
add
add
add
push
fild
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
adc
add
add
add
add
add
add
adc
pop
add
add
mov
add
add
add
add
push
add
add
shr
add
add
loopne
add
lock
add
add
add
add
add
adc
add
add
and
add
add
xor
add
add
inc
imul
add
add
push
imul
add
add
pusha
imul
add
add
jo
add
sub
add
add
nop
imul
add
add
mov
add
add
add
add
imul
add
add
shr
add
add
loopne
add
lock
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
jo
add
sub
add
add
add
add
js
add
add
add
add
add
add
pop
add
or
or
add
or
add
push
movups
adc
adc
push
pop
add
add
add
add
fld
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
push
add
shr
add
add
loopne
add
lock
add
add
add
add
adc
add
add
and
add
add
xor
add
add
inc
imul
add
add
pusha
imul
add
add
sub
add
add
nop
imul
add
add
add
add
add
imul
add
imul
add
imul
add
add
add
push
add
and
add
add
xor
add
add
inc
push
add
push
push
add
pusha
push
add
jo
add
add
fiadd
add
add
fcomp
add
add
add
add
add
add
add
add
or
push
movups
adc
adc
push
add
add
add
pop
sbb
sbb
add
add
sbb
push
pop
and
and
and
es
sub
add
sub
sub
add
add
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
add
add
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
enter
int3
int
iret
add
rcl
rcl
aad
xlat
fcomp
fcmovu
(bad)
add
fild
add
add
clc
fld
add
add
lock
add
push
add
add
adc
add
add
and
add
add
xor
add
add
inc
push
add
add
push
push
add
add
pusha
push
add
add
nop
fld
add
add
nop
push
add
add
pop
fld
add
add
and
add
add
xor
add
add
inc
ins
add
push
add
add
add
mov
add
add
cwde
ins
add
shr
add
add
add
xor
add
and
add
add
xor
add
add
inc
ins
add
push
ins
add
pusha
ins
add
jo
add
sub
add
add
nop
ins
add
mov
add
add
add
add
ins
add
shr
add
add
loopne
add
lock
add
add
add
add
adc
add
add
and
add
add
xor
add
add
add
add
pusha
fld
add
add
pop
outs
add
push
add
add
add
mov
add
add
cwde
outs
add
test
add
mov
add
add
outs
add
fsubr
add
add
call
add
add
outs
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jo
add
add
pop
jo
add
add
push
add
add
add
mov
add
add
cwde
jo
add
add
test
add
mov
add
add
jo
add
add
fdiv
add
add
call
add
add
jo
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jno
add
add
pop
jno
add
add
push
add
add
add
mov
add
add
cwde
jno
add
add
test
add
mov
add
add
jno
add
add
fdiv
add
add
call
add
add
jno
add
add
or
add
add
sbb
add
add
inc
jb
add
add
push
jb
add
add
cmp
add
clc
xlat
add
mov
add
add
jb
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jae
add
add
pop
jae
add
add
xor
add
add
nop
jae
add
add
mov
add
add
add
add
jae
add
add
shl
add
add
loopne
add
lock
add
add
add
add
add
adc
add
add
and
add
add
xor
add
add
inc
je
add
add
push
je
add
add
pusha
je
add
add
jo
add
xor
add
add
add
add
add
add
add
add
je
add
add
shl
add
add
loopne
add
lock
add
add
add
add
add
adc
add
add
and
add
add
xor
add
add
inc
jne
add
add
push
jne
add
add
pusha
jne
add
add
jo
add
xor
add
add
nop
jne
add
add
mov
add
add
add
add
jne
add
add
shl
add
add
clc
jne
add
add
and
add
add
xor
add
add
inc
jbe
add
add
push
jbe
add
add
pusha
jbe
add
add
mov
add
add
cmp
add
xor
add
add
inc
ja
add
add
push
ja
add
add
pusha
ja
add
add
jo
add
xor
add
add
nop
ja
add
add
mov
add
add
add
add
ja
add
add
fcom
add
adc
add
add
and
add
add
xor
add
add
inc
js
add
add
push
js
add
add
pusha
js
add
add
jo
add
cmp
add
add
test
add
mov
add
add
js
add
add
or
add
add
nop
(bad)
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
mov
add
add
cwde
jns
add
add
test
add
mov
add
add
jns
add
add
fdivr
add
add
call
add
add
jns
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jp
add
add
pop
jp
add
add
push
add
add
add
mov
add
add
cwde
jp
add
add
test
add
mov
add
add
jp
add
add
fdivr
add
add
call
add
add
jp
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jnp
add
add
pop
jnp
add
add
push
add
add
add
mov
add
add
cwde
jnp
add
add
test
add
mov
add
add
jnp
add
add
fdivr
add
add
call
add
add
jnp
add
add
or
add
add
sbb
add
add
sub
add
add
add
fild
add
add
xor
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
add
sub
sub
sub
add
das
xor
xor
xor
xor
cmp
add
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
add
popa
add
fs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
in
out
out
lock
repnz
cmc
div
clc
xor
add
add
inc
add
add
push
add
add
pusha
add
add
jo
add
and
add
add
nop
add
add
mov
add
add
add
add
add
add
shl
add
add
loopne
add
lock
add
add
add
add
adc
add
add
and
add
cmp
add
add
dec
jl
add
add
pop
jl
add
add
push
add
add
add
mov
add
add
cwde
jl
add
add
test
add
mov
add
add
jl
add
add
fdivr
add
add
call
add
add
jl
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jge
add
add
pop
jge
add
add
push
add
add
add
mov
add
add
cwde
jge
add
add
test
add
mov
add
add
jge
add
add
fdivr
add
add
call
add
add
jge
add
add
or
add
add
sbb
add
add
sub
add
add
cmp
add
add
dec
jle
add
add
pop
jle
add
add
push
add
add
add
mov
add
add
cwde
jle
add
add
test
add
mov
add
add
jle
add
add
fdivr
add
add
call
add
add
jle
add
add
clc
jle
add
add
clc
jle
add
add
clc
jle
add
add
clc
jle
add
add
clc
jle
add
add
clc
jle
add
add
clc
jle
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
cmp
add
add
dec
jg
add
add
pop
jg
add
add
push
add
add
add
and
add
xor
add
pop
mov
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
ror
add
loopne
add
lock
add
add
add
add
adc
add
and
add
xor
add
inc
pop
add
add
push
pop
add
add
pusha
pop
add
add
jo
add
or
add
add
add
add
add
add
add
pop
add
add
mov
add
add
add
clc
leave
add
cwde
leave
add
rcl
add
loopne
add
lock
add
add
add
adc
add
and
add
xor
add
inc
xchg
add
push
xchg
add
pusha
xchg
add
jo
add
js
add
nop
xchg
add
mov
add
add
add
add
xchg
add
rcl
add
loopne
add
lock
add
add
add
adc
add
cmp
add
pusha
xchg
add
dec
leave
add
loopne
add
lock
add
add
add
xchg
add
and
add
xchg
add
inc
xchg
add
push
xchg
add
pusha
xchg
add
jo
add
adc
nop
xchg
add
mov
add
add
add
add
xchg
add
rcl
add
xchg
add
lock
add
add
add
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
rol
add
inc
xchg
add
push
xchg
add
pusha
xchg
add
jo
add
jo
add
inc
les
add
add
mov
add
add
add
add
xchg
add
rcl
add
loopne
add
lock
add
add
add
adc
add
adc
add
mov
add
push
ret
add
lock
add
add
and
add
xor
add
inc
cdq
add
push
cdq
add
push
add
add
add
add
add
sbb
add
cmp
add
pop
mov
add
add
sub
add
mov
add
add
jo
add
and
add
add
add
add
add
mov
add
fsub
add
call
add
add
mov
add
or
add
sbb
add
sub
add
cmp
add
dec
mov
add
pop
mov
add
push
add
add
add
mov
add
nop
mov
add
add
dec
scas
add
mov
add
add
add
add
stos
add
jo
add
mov
add
add
add
add
test
add
add
shr
add
loopne
add
lock
add
add
adc
add
cwde
test
add
add
add
inc
call
add
or
add
add
fmul
add
add
add
add
add
fmul
add
(bad)
(bad)
(bad)
inc
add
add
or
add
add
fmul
add
fmul
add
or
add
add
add
inc
outs
jo
jb
addr16
sub
xor
cmp
sub
and
and
dec
and
popa
jne
gs
and
outs
jae
and
and
imul
popa
jb
sub
dec
je
and
dec
and
inc
dec
push
push
and
push
inc
push
push
inc
inc
add
add
add
fmul
add
fmul
add
and
add
cs
inc
push
je
jo
pop
imul
fmul
add
add
add
icebp
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
pushf
adc
add
add
jg
jg
jg
jg
and
add
xor
add
int
and
data16
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
add
add
aam
add
fmul
add
and
add
cs
inc
push
bound
pop
gs
gs
imul
inc
inc
add
out
add
shl
add
(bad)
(bad)
(bad)
inc
add
add
add
add
fmul
add
sub
add
sbb
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
nop
repz
nop
repz
nop
repz
nop
repz
nop
repz
add
add
add
add
and
add
shr
add
pusha
hlt
add
loopne
add
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
or
add
add
add
fdivr
add
or
add
add
add
test
add
or
add
add
add
adc
add
adc
add
add
add
fdivr
add
adc
add
add
add
test
add
adc
add
add
add
cmp
add
add
adc
add
add
add
push
sti
add
sbb
add
add
add
sbb
add
sbb
add
add
add
lock
add
sbb
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
pop
cli
add
push
add
add
add
add
cli
add
pop
add
add
add
add
stc
add
and
add
add
add
cwde
stc
add
and
add
add
add
mov
add
add
clc
add
js
add
add
add
lock
add
add
add
add
loopne
add
jp
add
add
add
shl
add
cld
add
add
add
add
test
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
test
add
cmp
add
add
jl
add
js
add
jo
add
push
add
add
add
push
inc
add
add
inc
inc
add
add
xor
add
sub
add
and
add
and
add
sbb
add
sbb
add
adc
add
adc
add
or
add
or
add
add
add
add
add
cld
inc
add
add
clc
inc
add
add
lock
add
add
loopne
add
aam
add
int3
inc
add
add
adc
add
(bad)
inc
add
add
mov
add
add
add
test
add
mov
add
add
add
add
add
add
add
je
add
push
add
add
add
inc
inc
add
add
or
add
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
add
add
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
ins
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
xor
add
add
lock
(bad)
inc
add
add
push
add
push
add
add
add
push
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
add
fmul
add
fmul
add
fmul
add
fmul
add
fmul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
cs
inc
push
gs
gs
imul
inc
inc
add
add
add
in
add
cs
inc
push
bound
pop
popa
ins
ins
outs
arpl
je
inc
inc
add
add
add
in
add
cs
inc
push
inc
jb
push
je
jb
pop
ss
inc
add
add
in
add
cs
inc
push
inc
jb
push
je
jb
dec
inc
xor
inc
inc
add
and
add
cs
inc
push
inc
jb
push
je
jb
inc
outs
ins
ins
outs
outs
inc
inc
and
add
cs
inc
push
outs
jne
pop
outs
pop
jb
outs
addr16
jae
fs
inc
add
and
add
cs
inc
push
ins
outs
imul
jb
jae
fs
inc
add
add
in
add
cs
inc
push
ins
outs
addr16
pop
gs
outs
jb
jae
fs
inc
add
jne
add
jae
add
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
adc
add
dec
adc
add
push
add
push
adc
add
add
pop
and
add
mov
push
add
rcl
add
add
add
add
xor
add
push
push
add
push
pop
add
inc
and
add
adc
add
cmp
add
adc
add
and
sub
add
sbb
add
add
push
sbb
add
add
xchg
sbb
add
add
mov
add
jmp
add
sbb
add
add
inc
and
add
add
pop
sbb
add
add
pusha
sbb
add
and
add
sbb
add
add
sbb
add
sbb
add
add
xor
add
inc
sbb
add
add
inc
sbb
add
and
add
sbb
add
and
add
sbb
add
add
push
sbb
add
push
add
nop
sbb
add
sbb
add
daa
add
add
add
movs
daa
add
mov
sbb
add
add
add
inc
push
add
and
add
add
mov
add
jo
add
rcr
add
push
add
xchg
daa
add
int
add
(bad)
push
add
and
add
push
add
add
daa
add
add
and
add
add
push
and
add
add
dec
daa
add
and
add
and
add
add
and
add
add
mov
add
jo
add
test
add
push
sub
add
sub
add
adc
add
data16
jl
add
data16
or
add
pop
add
or
add
mov
add
mov
xor
add
add
add
add
jo
add
sbb
add
jo
add
mov
add
or
add
nop
xor
add
sbb
add
xor
add
add
lock
add
inc
add
inc
inc
add
push
inc
add
imul
push
inc
add
loop
add
cmp
add
loop
add
adc
sub
add
adc
xor
add
sbb
add
inc
inc
add
pop
inc
add
cmp
add
pop
inc
add
cmps
inc
add
sub
add
inc
add
sbb
add
inc
add
inc
inc
add
mov
add
push
inc
add
pop
inc
add
adc
add
add
stos
inc
add
clc
and
add
inc
add
call
inc
add
lds
add
sub
add
dec
add
js
add
mov
add
dec
add
je
add
lock
add
pop
dec
add
and
add
pusha
dec
add
mov
add
push
dec
add
push
dec
add
je
add
and
add
xor
add
push
add
and
add
adc
add
sub
add
push
add
jno
add
pop
and
add
push
add
adc
add
push
push
add
adc
add
xor
add
push
add
jecxz
add
adc
add
lock
add
and
add
call
push
add
ret
push
add
mov
push
add
imul
fs
add
add
sbb
sbb
add
pop
add
mov
add
adc
add
add
sub
add
add
stc
bound
add
add
cmp
sub
add
add
in
add
push
add
stos
add
push
add
adc
and
add
push
add
pusha
sub
add
ins
add
sub
sbb
add
ins
add
loopne
add
jo
add
repnz
add
push
outs
add
jp
add
loopne
add
sub
iret
outs
add
sub
add
shr
add
outs
add
mov
add
loopne
add
das
jo
add
jo
add
sbb
add
jno
add
add
adc
add
jb
add
add
aas
jb
add
je
add
add
add
outs
jne
add
add
outs
jne
add
add
and
add
jo
add
lahf
js
add
add
lahf
js
add
das
add
mov
jnp
add
add
lods
jnp
add
add
lods
jnp
add
jnp
add
add
int
add
fidivr
and
add
loopne
add
pop
add
int3
sub
add
add
in
add
js
add
lock
sub
add
je
add
xor
add
dec
sub
add
add
push
add
je
add
lock
xchg
lea
add
add
mov
xchg
add
nop
push
add
lock
add
cwde
xchg
add
mov
xchg
add
aam
add
mov
add
loopne
add
jo
add
mov
cdq
add
xchg
call
mov
fwait
add
mov
add
inc
fwait
add
outs
fwait
add
fcom
add
sbb
add
push
add
mov
add
pop
mov
add
pusha
mov
add
or
add
loopne
add
inc
mov
add
push
mov
add
mov
add
and
add
and
add
xor
add
cmp
add
shl
add
push
pop
add
jo
add
jae
add
ins
pop
add
sbb
add
add
sbb
add
jae
add
iret
fld
add
fld
add
fld
add
fiadd
add
fiadd
add
add
loopne
add
inc
fild
add
fild
add
fild
add
pop
add
aam
add
and
add
mov
add
and
add
popa
loopne
add
push
add
fs
add
add
xchg
loopne
add
xor
add
loopne
add
loope
add
loope
add
add
mov
add
mov
loop
add
sbb
add
add
(bad)
loop
add
add
sub
add
mov
add
sub
add
dec
jecxz
add
add
xchg
jecxz
add
push
add
mov
add
repnz
add
add
hlt
jecxz
add
in
add
sbb
add
in
add
in
add
add
inc
out
add
add
inc
out
add
out
add
add
int3
out
add
out
add
add
out
add
sbb
add
add
loopne
add
enter
call
xor
add
out
add
xor
add
add
test
add
int3
call
add
mov
add
add
add
(bad)
jmp
add
nop
jmp
add
js
add
or
add
inc
jmp
add
add
inc
jmp
add
add
add
cdq
in
add
mov
add
pushf
in
add
(bad)
in
add
push
out
add
sbb
xor
add
repnz
mov
sbb
add
add
aam
add
test
add
mov
xor
add
repz
aad
add
mov
add
fdiv
add
repz
push
repz
pmuludq
add
add
adc
add
mov
sbb
add
add
or
add
inc
cmc
add
in
add
sbb
add
call
test
xor
add
cmp
add
popa
test
add
add
sbb
add
test
add
test
add
push
add
cmp
add
and
add
ins
sbb
add
add
add
mov
add
lods
stc
add
mov
add
lods
stc
add
repnz
add
push
stc
add
xchg
cli
add
test
add
mov
add
cs
add
mov
add
jo
add
(bad)
std
add
push
std
add
cmp
sbb
add
add
out
add
mov
inc
add
inc
add
push
add
xor
add
push
add
add
add
mov
xor
add
add
in
sbb
add
add
add
add
sub
add
mov
add
add
add
je
add
sahf
add
add
mov
pop
add
lods
sbb
add
pop
add
js
add
fcomp
add
js
add
cmp
add
add
add
cmp
add
or
add
add
or
add
adc
add
add
fcom
add
std
adc
add
add
add
add
and
sbb
add
adc
add
adc
add
add
aam
add
adc
add
jo
add
adc
add
stos
sbb
add
sbb
add
sbb
add
xor
add
add
cwde
sbb
add
sbb
add
sbb
add
add
mov
xor
add
add
mov
sbb
add
add
sbb
add
fs
add
mov
add
cmp
add
popa
push
add
mov
add
fs
add
push
pop
add
les
add
sbb
add
pushf
pop
add
loopne
add
pushf
pop
add
rcr
add
add
rcr
add
and
add
sbb
add
and
add
and
add
add
cmp
add
mov
sbb
add
add
dec
and
add
add
xor
add
push
and
add
add
push
and
add
sbb
add
and
add
add
aam
add
or
push
add
adc
add
mov
push
add
shl
add
add
cmp
add
add
iret
and
add
shl
add
push
daa
add
in
daa
add
test
add
sub
add
add
in
sub
add
sub
add
add
push
sub
add
add
cmp
add
push
sub
add
add
mov
add
sub
add
sub
add
add
les
add
icebp
sub
add
add
hlt
sub
add
add
mov
add
dec
sub
add
add
mov
add
nop
sub
add
add
hlt
sub
add
sub
add
add
add
push
add
mov
add
xchg
add
mov
add
mov
das
add
loopne
add
pop
das
add
je
add
int3
sbb
add
add
sbb
add
add
mov
add
sub
add
outs
xor
add
add
jo
add
xor
add
sbb
add
add
pop
xor
add
pusha
xor
add
loopne
add
int3
xor
add
jo
add
cld
add
retf
cmp
add
add
ret
add
cmp
add
add
mov
add
js
add
mov
add
loopne
add
mov
add
call
push
add
in
cmp
add
sbb
add
add
mov
add
fdivr
add
enter
nop
add
sbb
add
test
add
and
add
dec
aas
add
mov
add
pop
aas
add
xchg
aas
add
loopne
add
xchg
aas
add
mov
sbb
add
aas
add
jecxz
add
aam
add
in
add
or
add
sbb
add
and
add
mov
add
and
add
mov
add
add
nop
inc
add
sbb
add
add
dec
inc
add
mov
push
add
mov
inc
add
mov
add
test
add
lock
add
test
add
lock
add
test
add
add
adc
add
add
xchg
dec
add
test
add
mov
add
cwde
dec
add
test
add
cwde
dec
add
fmul
add
push
add
fmul
add
add
test
add
jo
add
push
dec
add
aam
add
push
dec
add
adc
add
push
add
adc
add
xor
add
push
add
adc
add
sbb
add
push
add
xor
add
adc
add
push
add
mov
add
cmp
add
push
add
sbb
add
les
add
sbb
add
add
pop
add
mov
pop
add
js
add
inc
pop
add
dec
pop
add
test
add
dec
pop
add
sti
pop
add
ins
sbb
add
pop
add
iret
pop
add
mov
add
rcr
add
pop
add
loopne
add
nop
pop
add
rcr
mov
pop
add
adc
add
pop
add
adc
add
test
push
add
lods
pop
add
or
add
pop
add
or
add
cmp
and
add
add
scas
add
dec
and
add
add
aam
add
clc
add
aas
add
aam
add
inc
add
lock
push
and
add
add
pushf
push
add
pushf
push
add
dec
and
add
imul
add
add
in
add
mov
imul
xor
add
dec
and
add
add
inc
ins
add
aam
add
dec
ins
add
ret
ins
add
cld
and
add
ins
add
add
add
or
add
add
add
jne
add
sbb
add
xor
add
add
and
add
add
xor
add
dec
and
add
add
movs
je
add
add
add
mov
add
int3
je
add
jne
add
add
jne
add
add
mov
add
pop
jne
add
jne
add
add
sti
jbe
add
xor
add
jbe
add
xor
add
add
sbb
add
adc
add
add
fdiv
add
push
jnp
add
xor
add
add
xor
add
add
add
add
add
inc
xor
add
add
xor
add
test
add
add
test
add
add
add
add
add
jl
add
js
add
jp
add
jl
add
jl
add
push
xchg
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
not
add
xchg
add
icebp
popf
add
mov
popf
add
pop
test
add
pop
test
add
add
add
shr
add
loopne
add
lods
add
mov
lods
add
dec
lods
add
call
lods
add
push
xor
add
add
jl
add
call
lods
add
xchg
lods
add
dec
push
add
xchg
lods
add
mov
add
call
lods
add
hlt
lods
add
sub
add
hlt
lods
add
or
xor
add
lods
add
call
lods
add
push
lods
add
call
lods
add
ins
lods
add
call
lods
add
pop
scas
add
call
scas
add
stc
scas
add
sbb
add
scas
add
adc
add
sbb
add
call
scas
add
push
scas
add
call
scas
add
ins
scas
add
call
scas
add
xchg
scas
add
call
scas
add
mov
add
call
scas
add
shr
add
shr
add
call
scas
add
pop
mov
add
xor
add
mov
add
mov
add
xor
add
mov
add
add
call
mov
add
add
dec
push
add
imul
add
xor
add
xor
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
and
add
mov
add
add
nop
and
add
add
ja
add
push
mov
add
add
shl
add
add
mov
add
mov
add
xor
add
add
pop
mov
add
xor
add
add
mov
and
add
cld
mov
add
add
add
add
inc
add
push
mov
add
add
call
mov
add
add
nop
mov
add
mov
add
add
mov
add
mov
add
xor
add
mov
add
mov
add
xor
add
add
outs
mov
add
xor
add
add
lahf
mov
add
xor
add
mov
add
xor
add
mov
add
mov
add
xor
add
mov
add
mov
add
xor
add
mov
add
add
xor
add
add
xchg
mov
add
xor
add
mov
add
xor
add
mov
add
mov
add
xor
add
mov
add
add
xor
add
add
xchg
mov
add
xor
add
mov
add
xor
add
mov
add
add
call
mov
add
mov
add
xor
add
add
pop
mov
add
xor
add
add
js
add
call
mov
add
xor
add
mov
add
xor
add
mov
add
mov
add
xor
add
mov
add
add
fsubr
add
add
mov
add
nop
mov
add
int3
sub
add
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
mov
add
mov
add
sar
add
loopne
add
or
xor
add
mov
add
mov
add
inc
mov
add
mov
add
jo
add
popf
mov
add
mov
mov
add
sar
add
mov
add
add
add
sub
xor
add
rol
pop
rol
mov
add
pusha
rol
(bad)
rol
mov
add
pushf
rol
mov
xor
add
add
mov
add
lock
sub
add
mov
add
inc
rol
jl
add
mov
add
add
add
add
rol
add
rol
mov
add
add
add
cmp
add
mov
add
inc
ret
jl
add
mov
add
add
add
add
rol
add
ret
mov
add
add
add
cmp
add
mov
add
inc
ret
add
jl
add
mov
add
mov
ret
add
push
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
jo
add
add
in
add
add
add
cmp
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
ins
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
gs
bound
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
add
add
xor
add
inc
mov
pop
mov
jo
js
and
mov
mov
enter
fsub
add
add
add
add
lods
and
lods
inc
lods
dec
lods
push
lods
pop
lods
call
lods
sbb
mov
scas
add
add
add
or
add
loopne
call
add
add
add
movs
enter
fsub
lock
clc
movs
add
sbb
xor
dec
cmps
push
cmps
pop
cmps
pusha
cmps
push
cmps
and
cmps
mov
cmps
mov
cmps
shl
call
cmps
add
sbb
xor
dec
cmps
push
cmps
pop
cmps
pusha
cmps
push
cmps
and
cmps
mov
cmps
mov
cmps
shl
call
cmps
add
sbb
xor
dec
test
test
test
test
test
test
test
test
test
test
test
test
test
lods
loopne
call
lods
add
sbb
add
adc
add
cmp
add
add
add
add
fsub
add
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
xor
inc
test
je
test
mov
les
hlt
test
and
xor
inc
stos
push
stos
fs
je
test
mov
les
hlt
stos
add
adc
and
xor
inc
stos
push
stos
fs
je
test
mov
les
hlt
stos
add
adc
and
xor
inc
lods
push
lods
pop
lods
ins
lods
jl
mov
lods
les
lods
add
adc
and
xor
inc
lods
push
lods
lods
je
test
mov
les
hlt
lods
add
adc
and
xor
inc
scas
push
scas
fs
je
test
mov
les
hlt
scas
add
adc
and
xor
inc
scas
dec
scas
pop
scas
ins
scas
jl
mov
mov
scas
in
scas
cld
scas
add
add
add
add
or
sbb
sub
cmp
dec
mov
jl
mov
mov
mov
or
sbb
sub
cmp
dec
mov
jl
mov
mov
mov
or
sbb
sub
push
mov
jl
mov
mov
mov
or
sbb
sub
cmp
dec
mov
jb
test
mov
les
hlt
mov
and
xor
inc
movs
push
movs
movs
je
test
movs
les
movs
add
adc
and
xor
inc
movs
push
movs
movs
je
test
mov
les
jmp
cmps
and
xor
inc
cmps
push
cmps
cmps
jb
jp
mov
mov
les
hlt
cmps
add
adc
and
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
xor
inc
test
ins
test
pushf
test
int3
test
cld
test
sub
cmp
dec
stos
pop
stos
ins
stos
jl
mov
mov
stos
in
stos
cld
stos
or
sbb
sub
cmp
dec
stos
pop
stos
ins
stos
jl
mov
mov
stos
in
stos
cld
stos
or
sbb
sub
cmp
dec
lods
pop
lods
ins
lods
jl
mov
lods
int3
lods
fsubr
lods
sbb
sub
cmp
dec
lods
pop
lods
ins
lods
jl
mov
mov
lods
in
lods
cld
lods
or
sbb
sub
cmp
dec
scas
pop
scas
ins
scas
jl
mov
mov
scas
in
scas
cld
scas
or
sbb
sub
cmp
dec
scas
pop
scas
ins
scas
jl
mov
mov
scas
in
scas
cld
scas
add
add
or
sbb
sub
cmp
dec
mov
jl
mov
mov
mov
or
sbb
sub
cmp
dec
mov
jb
jp
mov
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
mov
mov
add
movs
xor
movs
ins
movs
jp
and
mov
movs
in
repnz
cli
movs
or
sbb
inc
movs
dec
movs
pop
movs
push
jb
test
lods
movs
mov
movs
loop
jmp
cmps
and
xor
pop
cmps
bound
mov
mov
les
in
cmps
cli
cmps
add
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
test
xor
inc
test
je
test
mov
les
hlt
test
sbb
dec
stos
pop
stos
push
jb
test
stos
stos
mov
stos
in
repnz
cli
stos
or
sbb
inc
stos
push
stos
fs
je
test
mov
les
hlt
stos
add
adc
and
xor
inc
lods
push
lods
lods
je
test
lods
les
lods
add
adc
and
xor
inc
lods
push
lods
lods
je
test
mov
les
hlt
lods
add
adc
and
xor
inc
scas
dec
scas
pop
scas
ins
scas
jp
sub
scas
les
hlt
scas
add
adc
and
xor
inc
scas
push
scas
fs
je
test
mov
les
hlt
scas
add
add
add
add
adc
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
dec
mov
je
test
mov
les
hlt
mov
and
xor
inc
movs
push
movs
movs
je
test
movs
les
movs
add
adc
and
xor
inc
movs
push
movs
movs
je
test
mov
les
hlt
movs
add
adc
and
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
xor
inc
test
je
test
mov
les
hlt
test
and
xor
inc
stos
push
stos
fs
je
test
mov
les
hlt
stos
add
adc
and
xor
inc
stos
push
stos
fs
je
test
mov
les
hlt
stos
add
adc
and
xor
inc
lods
push
lods
lods
je
test
lods
les
lods
add
adc
and
xor
inc
lods
push
lods
lods
je
test
mov
les
hlt
lods
add
adc
and
xor
inc
scas
push
scas
fs
je
test
mov
les
hlt
scas
add
adc
and
xor
inc
scas
push
scas
fs
je
test
mov
les
hlt
scas
add
add
add
add
adc
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
les
hlt
mov
and
xor
inc
mov
je
test
mov
mov
mov
or
sbb
sub
cmp
dec
mov
jl
mov
mov
mov
or
sbb
sub
cmp
dec
movs
pop
movs
ins
movs
jl
mov
movs
ret
movs
loop
jmp
movs
sub
cmp
movs
je
test
mov
les
hlt
movs
add
adc
and
xor
inc
cmps
push
cmps
cmps
je
test
mov
les
jmp
cmps
sub
cmp
dec
cmps
push
cmps
cmps
je
test
mov
les
hlt
cmps
add
adc
and
xor
inc
test
test
test
test
test
test
test
test
test
test
test
test
test
xor
inc
test
je
test
mov
test
loopne
call
stos
adc
inc
stos
dec
stos
push
stos
pop
stos
pusha
stos
push
stos
cwde
stos
mov
stos
mov
stos
shr
add
xor
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
mov
lods
mov
lods
shr
lods
lock
clc
lods
add
sbb
dec
scas
push
scas
push
scas
sub
add
cwde
mov
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jno
mov
stc
mov
and
cmp
push
mov
push
mov
nop
mov
test
mov
mov
mov
sub
movs
pop
movs
pusha
movs
push
movs
and
mov
movs
mov
movs
shl
movs
lock
clc
movs
add
sbb
xor
dec
movs
push
movs
pop
movs
pusha
movs
push
movs
and
movs
mov
movs
mov
movs
shl
call
movs
add
popa
cmps
js
and
cmps
mov
cmps
mov
cmps
shl
call
cmps
add
sbb
xor
dec
cmps
push
cmps
pop
cmps
pusha
cmps
push
cmps
and
cmps
mov
cmps
mov
cmps
shl
call
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
sbb
xor
dec
test
pusha
test
js
sub
test
mov
mov
test
loopne
call
test
adc
jns
sub
mov
stos
shr
call
stos
add
sbb
xor
dec
stos
push
stos
pop
stos
pusha
stos
push
stos
sub
stos
mov
stos
mov
stos
shr
call
stos
add
lods
and
lods
inc
lods
dec
lods
push
lods
pop
lods
pusha
lods
push
lods
fsubr
lods
clc
lods
add
sbb
xor
dec
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
lods
mov
lods
mov
lods
shr
call
lods
add
sbb
mov
mov
scas
mov
scas
shr
call
scas
add
sbb
xor
dec
scas
push
scas
pop
scas
pusha
scas
push
scas
sub
scas
mov
scas
mov
scas
shr
call
scas
add
add
add
cmp
add
add
sbb
and
mov
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
and
cmp
push
mov
js
and
mov
mov
mov
mov
lock
or
movs
inc
movs
dec
movs
push
movs
nop
movs
cwde
movs
mov
movs
mov
movs
shl
movs
add
sbb
xor
popa
cmps
imul
mov
cmps
shl
add
xor
dec
test
jns
sub
shr
test
stc
test
sbb
xor
dec
stos
pop
stos
popa
stos
jo
js
sub
stos
mov
stos
shr
stos
call
stos
add
sub
pop
stos
popa
stos
sub
stos
mov
stos
shr
jmp
lods
sbb
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
lods
mov
lods
mov
lods
shr
call
lods
add
sub
inc
scas
dec
scas
push
scas
pop
scas
pusha
scas
push
scas
sub
scas
mov
scas
mov
scas
shr
call
scas
add
add
add
sbb
add
add
sbb
xor
dec
mov
pusha
mov
js
and
mov
shl
mov
lock
or
and
cmp
push
mov
push
mov
nop
mov
test
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
adc
movs
xor
movs
push
movs
pop
movs
pusha
movs
push
movs
and
mov
movs
mov
movs
shl
movs
lock
clc
movs
add
sbb
xor
pop
cmps
js
and
cmps
mov
cmps
shl
cmp
pusha
cmps
push
cmps
and
cmps
mov
mov
cmps
call
cmps
add
xor
pop
test
mov
mov
stos
mov
stos
shr
call
stos
add
xor
pusha
stos
push
stos
sub
mov
lods
shr
lods
lock
clc
lods
add
sbb
xor
dec
lods
push
lods
pop
lods
popa
lods
sub
lods
stc
lods
add
sub
inc
scas
dec
scas
push
scas
pop
scas
pusha
scas
push
scas
sub
scas
mov
scas
mov
scas
loopne
call
scas
add
sbb
add
mov
add
cmp
push
mov
push
mov
nop
mov
test
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
adc
sub
inc
mov
pop
mov
jo
js
and
mov
mov
mov
mov
loopne
call
mov
adc
movs
xor
movs
push
movs
pop
movs
pusha
movs
push
movs
and
mov
movs
mov
movs
shl
movs
lock
clc
movs
add
sbb
xor
dec
movs
push
movs
pop
movs
pusha
movs
push
movs
and
movs
mov
movs
mov
movs
shl
call
movs
add
sbb
xor
dec
cmps
push
cmps
pop
cmps
pusha
cmps
push
cmps
and
cmps
mov
cmps
mov
cmps
shl
call
cmps
add
sbb
dec
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
sbb
xor
dec
test
pusha
test
js
sub
test
mov
mov
test
loopne
call
test
adc
sub
inc
stos
dec
stos
push
stos
pop
stos
pusha
stos
push
stos
sub
stos
mov
stos
mov
stos
shr
call
stos
add
sbb
xor
dec
stos
push
stos
pop
stos
pusha
stos
push
stos
sub
stos
mov
stos
mov
stos
shr
call
stos
add
lods
and
lods
inc
lods
dec
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
mov
lods
mov
lods
shr
lods
lock
clc
lods
add
sbb
xor
dec
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
lods
mov
lods
mov
lods
shr
call
lods
add
sbb
xor
dec
scas
push
scas
pop
scas
pusha
scas
push
scas
sub
scas
mov
scas
mov
scas
shr
call
scas
add
sbb
xor
dec
scas
push
scas
pop
scas
pusha
scas
push
scas
sub
scas
mov
scas
mov
scas
shr
call
scas
add
add
lock
add
mov
and
dec
mov
shl
add
xor
dec
mov
pusha
mov
or
inc
mov
pusha
mov
or
movs
mov
movs
lock
clc
movs
add
and
clc
test
sub
pop
stos
push
stos
cwde
stos
test
mov
stos
call
stos
sbb
dec
stos
shr
stos
loopne
call
stos
add
lods
and
lods
inc
lods
dec
lods
push
lods
pop
lods
pusha
lods
push
lods
sub
mov
lods
mov
lods
shr
lods
lock
clc
lods
add
sub
add
inc
add
add
movs
shl
loopne
call
movs
nop
movs
cwde
movs
inc
cmps
dec
cmps
push
cmps
pop
cmps
pusha
cmps
push
test
test
test
test
test
add
and
sub
add
nop
add
add
add
add
(bad)
inc
add
add
add
add
fadd
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
xlat
ja
clc
xchg
push
(bad)
stos
xchg
push
(bad)
stos
xchg
push
(bad)
stos
push
sbb
stos
xchg
push
(bad)
stos
xchg
push
(bad)
stos
and
(bad)
stos
push
sbb
stos
push
sbb
stos
push
sbb
stos
push
sbb
stos
push
sbb
push
imul
push
inc
add
dec
add
(bad)
push
add
add
add
add
add
add
add
add
or
jmp
add
add
scas
mov
add
adc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
sbb
add
sbb
add
add
add
pop
aaa
add
loopne
add
sbb
add
hlt
push
add
sbb
add
adc
add
inc
add
add
add
adc
add
add
add
aam
add
cs
js
add
add
call
add
add
add
add
add
add
pusha
cs
je
add
add
add
add
add
add
add
inc
add
shr
ins
jae
add
add
adc
add
add
add
lock
inc
add
shr
jae
arpl
add
pop
aaa
add
add
add
add
add
add
add
inc
add
inc
xchg
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
adc
add
sbb
add
arpl
add
fsub
add
cli
mov
add
mov
add
add
add
jbe
jb
cs
ins
add
push
inc
push
dec
xor
cs
ins
add
push
dec
inc
dec
xor
cs
ins
add
inc
dec
dec
cs
dec
dec
add
inc
push
xor
cs
ins
add
push
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
arpl
xor
cs
ins
add
xor
xor
fs
ins
add
popa
ins
gs
cs
ins
add
push
inc
push
dec
xor
cs
ins
add
dec
inc
dec
push
cs
ins
add
add
out
fnsave
jns
ja
mov
fidiv
imul
ja
push
fidiv
sbb
ja
outs
fnsave
add
add
add
add
sti
cmp
cmp
jl
dec
test
xchg
cmp
jl
movs
cmp
jl
fiadd
jl
scas
cmp
jl
lods
cmp
jl
jno
jl
call
sbb
cmp
jl
pushf
cmp
jl
sbb
jl
lods
cmp
cmp
jl
mov
nop
jl
call
jl
add
jl
call
sub
dec
mov
nop
jl
mov
cmp
jl
fwait
cmp
jl
add
add
push
mov
in
movs
mov
add
add
add
pop
jle
xchg
add
add
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
add
add
(bad)
ja
add
add
loopne
jle
movs
inc
jle
xchg
inc
jle
mov
or
jle
movs
inc
jle
jge
jle
test
push
call
cmp
inc
jle
pop
inc
jle
xchg
inc
jle
push
inc
jle
mov
mov
inc
jle
nop
inc
jle
sahf
inc
jle
add
add
cs
jno
cmp
jno
push
jno
aas
stos
jno
add
add
sub
imul
xchg
imul
sub
imul
sub
popa
jbe
imul
jne
imul
jp
imul
sub
jg
sub
imul
add
add
sahf
ret
sbb
dec
mov
ror
ret
(bad)
ret
dec
fsub
lds
icebp
ror
ror
ret
pop
ret
sbb
dec
cli
daa
ror
ret
dec
int3
jg
dec
xchg
jle
dec
mov
pushf
ror
ret
dec
ret
rol
sbb
ror
ror
les
pushf
ror
ret
sahf
ret
sahf
ret
ror
ror
ror
ror
ror
ret
dec
das
add
mov
vpsadbw
ret
push
ret
dec
in
ret
dec
mov
into
ror
ret
dec
add
add
stos
sbb
jl
add
add
dec
ja
ror
inc
ror
inc
out
dec
ja
add
push
ja
add
add
push
add
add
add
add
add
pop
add
pop
adc
add
add
add
add
add
add
add
add
dec
add
push
add
add
inc
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
popa
add
je
imul
add
and
and
add
add
add
add
push
add
outs
add
add
jae
dec
add
add
add
add
add
add
add
add
add
add
add
outs
add
je
pop
add
imul
xor
add
add
push
add
push
add
add
add
aaa
add
xor
add
push
add
jb
ins
add
outs
add
je
add
add
imul
xor
pop
add
jb
outs
add
add
jae
add
push
add
dec
add
add
imul
outs
add
outs
add
add
js
add
add
add
add
jbe
imul
jae
add
js
add
add
add
ins
add
jae
add
js
add
add
add
jae
jb
jae
jae
add
js
add
add
add
add
add
add
add
add
jae
add
dec
add
add
push
add
ins
add
add
add
dec
add
jb
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
outs
add
outs
add
add
outs
add
imul
add
add
add
add
jp
add
add
add
add
add
popa
add
add
add
add
add
add
inc
add
add
push
add
add
popa
add
add
add
push
add
dec
add
add
imul
xor
pop
add
add
jbe
imul
and
push
add
inc
add
inc
add
add
jb
outs
add
add
jae
dec
add
add
add
add
outs
add
add
je
popa
add
add
add
outs
add
imul
and
add
and
add
add
js
je
add
jae
imul
add
inc
add
ins
add
dec
add
ins
add
add
add
and
jl
add
add
and
sub
add
add
add
push
add
dec
add
dec
add
push
add
push
add
and
dec
add
and
jnp
and
add
add
dec
add
push
add
and
push
add
jae
jne
ins
add
add
add
jae
and
cmp
add
dec
add
inc
add
je
popa
add
imul
add
add
push
add
je
jne
jb
outs
add
popa
add
add
add
push
add
popa
add
outs
add
add
add
and
add
add
jae
add
add
add
inc
add
ins
add
imul
add
inc
add
je
dec
add
outs
add
jb
add
add
pop
add
push
add
push
add
add
add
push
add
jae
jae
imul
dec
add
add
popa
add
add
je
push
add
outs
add
add
jae
dec
add
add
push
add
popa
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
and
xor
js
and
add
add
add
dec
add
add
jo
popa
add
add
and
add
jb
outs
add
and
and
and
add
add
add
add
add
add
add
add
add
jae
imul
add
push
add
outs
add
add
add
dec
add
add
popa
add
add
add
jns
jae
je
add
add
inc
add
inc
add
add
add
dec
add
add
add
add
pop
add
add
add
add
jns
jae
je
add
push
add
jo
add
add
add
imul
xor
pop
add
outs
add
jo
jne
je
add
push
add
jae
je
add
add
add
push
imul
outs
outs
inc
outs
jne
gs
je
push
jb
arpl
jae
jae
add
add
outs
push
je
je
outs
outs
inc
gs
ins
ins
push
jb
arpl
jae
jae
add
push
imul
outs
outs
inc
jb
gs
inc
push
dec
gs
outs
jb
add
outs
push
je
je
outs
outs
dec
jo
outs
push
gs
gs
add
add
outs
push
je
je
outs
outs
inc
ins
outs
jae
push
gs
gs
add
push
imul
outs
outs
inc
jb
gs
gs
outs
jb
add
add
push
add
outs
add
je
popa
add
add
add
add
add
add
add
jne
add
jb
imul
ins
add
add
add
add
cmp
add
imul
add
jo
imul
data16
add
add
je
add
data16
add
add
jne
add
jae
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
and
sub
add
push
add
dec
add
inc
add
add
pop
add
inc
add
add
and
push
add
outs
add
add
jae
dec
add
add
add
push
add
popa
add
add
and
inc
add
jo
je
imul
sub
and
push
add
jae
jae
imul
dec
add
add
add
add
add
add
outs
add
outs
add
add
add
outs
add
imul
add
add
add
add
jp
add
and
dec
add
jb
outs
add
ins
add
outs
add
add
add
add
and
push
add
add
dec
add
add
push
add
ins
add
sub
and
push
add
jb
add
je
push
add
outs
add
add
jae
dec
add
add
push
add
dec
add
add
imul
xor
pop
add
jb
outs
add
add
jae
add
mov
add
(bad)
(bad)
(bad)
(bad)
out
mov
add
lea
add
add
(bad)
(bad)
(bad)
push
pop
add
add
add
add
(bad)
(bad)
inc
add
add
add
outs
add
ins
add
add
add
add
add
add
add
je
push
push
dec
dec
popa
outs
addr16
add
add
rol
sar
(bad)
fild
add
(bad)
(bad)
(bad)
out
inc
pop
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
and
add
add
add
mov
das
add
pop
add
add
add
add
add
add
add
and
sub
sub
and
inc
add
and
pusha
add
jge
sub
and
add
add
add
add
add
and
add
add
inc
add
add
dec
add
add
add
pop
add
add
pop
add
add
push
add
and
add
add
jl
add
cmp
cmp
add
add
add
add
add
add
add
add
add
jl
and
ins
add
add
add
add
add
add
je
and
add
add
and
cmp
add
add
add
add
add
jno
and
add
add
cmp
add
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
rol
add
add
inc
(bad)
xchg
sar
rcl
lods
nop
add
dec
fdivr
inc
jae
adc
dec
cs
cmp
dec
imul
scas
cmps
add
dec
mov
and
jae
adc
dec
cs
fcom
mov
add
xchg
iret
adc
dec
cs
js
jl
jae
adc
dec
cs
inc
jns
xor
into
adc
add
add
lods
inc
cld
call
add
dec
mov
and
inc
cld
call
add
dec
mov
and
rcl
lods
jns
ror
inc
hlt
dec
call
push
mov
xor
adc
mov
and
xor
adc
pop
add
xor
mov
mov
jbe
cmp
dec
imul
scas
cmps
add
dec
mov
and
jns
adc
pop
xor
push
rcl
scas
cmps
add
dec
mov
and
clc
nop
inc
cmp
add
cwde
dec
addr16
out
rcl
lods
jno
ror
jmp
and
adc
fdivr
inc
pop
rcl
mov
add
dec
jo
std
push
xchg
scas
ins
aaa
rcl
scas
leave
add
dec
mov
and
xor
adc
mov
and
xor
adc
pop
add
adc
adc
fdivr
call
test
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
pop
push
pop
cmp
rcl
mov
pop
push
pop
dec
xchg
scas
ins
aaa
rcl
scas
leave
add
dec
mov
and
adc
add
add
mov
add
sbb
add
dec
add
add
add
sbb
add
push
inc
push
add
popa
xchg
inc
xchg
jnp
int
repz
push
popa
jae
dec
imul
add
add
mov
add
aad
add
aad
add
(bad)
add
and
add
das
(bad)
add
pop
(bad)
add
rcl
add
(bad)
add
out
(bad)
add
add
xlat
add
mov
add
mov
xlat
add
adc
add
das
fadd
add
add
ins
fadd
add
add
ret
add
fadd
add
fadd
add
fld
add
add
rcr
add
call
fld
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fild
add
fild
add
mov
push
mov
push
push
push
push
xor
cmp
je
mov
cmp
je
mov
push
push
mov
call
push
call
cmp
mov
je
lea
push
push
push
push
push
mov
push
call
mov
jmp
add
push
push
push
call
push
call
test
mov
je
lea
push
push
push
push
push
push
call
cmp
mov
je
xor
xor
inc
cmp
je
mov
cmp
je
push
push
call
push
call
mov
push
xor
call
call
mov
jmp
push
call
call
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
call
xor
mov
mov
lea
call
xor
inc
mov
cmp
je
mov
mov
push
call
mov
mov
mov
cmp
jae
push
push
call
mov
mov
test
je
push
push
push
push
call
test
je
push
push
push
call
mov
test
je
push
call
cmp
je
push
push
push
call
push
cmp
lea
jne
push
push
push
jmp
push
push
push
push
call
add
lea
push
lea
call
mov
mov
inc
jmp
cmp
jne
cmp
mov
je
mov
lea
push
push
push
lea
push
call
mov
push
push
push
push
call
add
and
jmp
push
call
call
mov
ret
mov
lea
call
or
lea
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
call
neg
sbb
neg
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
xor
cmp
je
cmp
je
push
push
push
push
call
mov
test
je
push
push
call
mov
test
jne
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
push
mov
push
mov
push
mov
push
xor
test
pop
lea
rep
mov
stos
je
test
je
mov
lea
push
push
call
test
je
push
push
call
test
jne
xor
inc
cmp
je
push
push
call
test
jne
push
push
push
call
mov
cmp
jne
push
push
call
mov
jmp
push
push
push
call
test
je
or
cmp
je
push
push
push
push
call
push
push
push
push
call
push
push
push
push
push
call
push
push
push
push
push
call
push
lea
push
push
call
test
je
push
lea
push
push
push
push
call
xor
inc
jmp
xor
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
mov
push
push
mov
mov
xor
mov
push
xor
cmp
mov
pop
lea
rep
mov
stos
je
mov
push
pop
mov
mov
push
mov
xor
lea
push
rep
call
push
lea
push
push
push
push
lea
push
call
mov
push
push
call
push
push
call
cmp
je
push
lea
push
push
call
push
push
push
call
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
and
mov
call
test
mov
jne
cmp
je
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
call
mov
test
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
push
call
lea
mov
lea
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
test
je
cmp
jne
cmp
jne
push
push
call
cmp
je
mov
and
call
cmp
jne
lea
call
mov
push
call
call
push
push
call
push
push
lea
push
call
add
push
mov
add
push
call
mov
test
je
lea
push
push
call
mov
lea
call
cmp
jne
and
push
push
call
mov
push
call
test
jne
push
call
push
call
xor
mov
mov
pop
pop
pop
leave
ret
add
push
mov
call
mov
call
mov
mov
test
je
push
mov
call
mov
mov
push
call
test
jne
push
push
push
call
add
or
xor
inc
jmp
push
call
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
xor
cmp
push
je
cmp
je
lea
push
push
call
push
push
call
mov
lea
push
push
push
call
cmp
je
push
jmp
add
push
push
push
call
test
jne
push
call
jmp
push
push
push
push
call
test
push
je
call
jmp
call
mov
mov
add
mov
xor
test
jbe
mov
cmp
jne
xor
inc
jmp
cmp
jne
xor
inc
mov
test
je
add
dec
jne
test
je
test
jne
push
call
call
xor
jmp
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
xor
mov
mov
mov
cmp
je
mov
mov
mov
mov
push
mov
call
mov
push
mov
call
mov
or
cmp
jne
mov
xor
mov
cmp
jbe
lea
mov
mov
cmp
je
inc
cmp
jb
jmp
lea
mov
jmp
mov
mov
mov
cmp
je
mov
test
je
add
lea
cmp
jne
xor
mov
shl
lea
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
push
call
push
push
mov
call
push
push
call
push
push
call
push
mov
call
push
mov
call
mov
jmp
xor
cmp
jne
mov
lea
push
lea
push
push
lea
push
push
push
push
call
mov
push
mov
call
push
mov
call
mov
jmp
push
call
call
mov
ret
xor
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
xor
cmp
mov
mov
mov
mov
mov
jne
xor
inc
jmp
lea
push
push
call
push
push
call
xor
cmp
jne
mov
push
push
push
call
cmp
mov
jne
call
xor
jmp
push
mov
mov
mov
inc
cmp
ja
add
push
push
call
cmp
pop
pop
mov
je
push
lea
push
lea
push
lea
push
push
push
mov
push
push
push
push
call
test
jne
push
call
pop
mov
call
cmp
je
call
push
call
jmp
push
call
call
xor
jmp
cmp
jne
cmp
je
push
call
pop
jmp
mov
mov
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
cmp
push
je
mov
cmp
je
call
push
call
push
push
push
push
mov
call
cmp
mov
je
cmp
je
push
call
test
jne
call
mov
cmp
je
push
call
pop
mov
push
call
cmp
pop
mov
jne
push
call
call
xor
pop
pop
leave
ret
push
mov
push
mov
push
mov
call
push
push
call
and
push
push
call
push
push
call
mov
cmp
pop
je
push
call
push
call
xor
inc
jmp
int3
int3
int3
int3
int3
mov
call
push
push
push
mov
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
test
mov
jne
push
call
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
xor
cmp
jne
cmp
jne
cmp
je
mov
cmp
jne
mov
cmp
je
mov
mov
mov
lea
mov
call
cmp
je
mov
jmp
mov
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
cmp
je
cmp
jne
mov
mov
xor
inc
cmp
jne
mov
mov
xor
mov
cmp
jne
mov
lea
mov
call
mov
mov
push
mov
call
mov
push
mov
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
lea
push
push
push
mov
call
movzx
mov
cmp
jne
call
cmp
jne
lea
push
push
mov
call
movzx
mov
xor
inc
cmp
jne
mov
cmp
je
push
mov
call
or
cmp
jne
mov
call
cmp
je
cmp
jne
mov
call
cmp
je
cmp
jne
cmp
jne
mov
push
call
xor
inc
jmp
push
call
call
mov
ret
xor
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
push
push
je
mov
test
je
call
push
push
push
mov
call
mov
test
je
cmp
mov
je
push
call
test
je
mov
test
je
push
call
and
pop
push
call
test
pop
mov
jne
push
call
call
xor
pop
pop
pop
pop
ret
push
push
push
call
cmp
je
push
call
push
call
xor
inc
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
lea
push
call
test
jne
test
je
push
mov
call
xor
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
call
and
pop
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
xor
cmp
jne
push
call
call
xor
mov
mov
pop
pop
pop
leave
ret
mov
mov
call
mov
cmp
je
mov
push
call
mov
mov
mov
push
lea
call
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
jmp
xor
mov
cmp
je
mov
mov
jmp
mov
mov
mov
lea
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
jmp
push
push
call
mov
cmp
jge
push
call
jmp
mov
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
mov
push
lea
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
mov
push
lea
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
mov
cmp
je
mov
push
call
mov
push
call
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
call
cmp
je
push
call
pop
cmp
je
push
call
pop
mov
call
lea
push
push
push
call
or
xor
inc
jmp
push
call
mov
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
lea
call
xor
mov
lea
mov
call
test
jne
lea
call
mov
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
call
mov
lea
call
xor
inc
jmp
push
lea
push
call
test
jne
lea
call
mov
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
call
mov
lea
jmp
xor
inc
cmp
lea
jne
call
call
xor
jmp
call
test
jne
push
lea
call
mov
lea
call
mov
mov
add
mov
call
push
lea
call
push
call
push
lea
call
lea
call
push
lea
push
lea
call
mov
lea
push
push
call
mov
mov
lea
call
cmp
pop
je
mov
add
mov
call
push
push
call
push
lea
push
push
call
add
push
push
call
call
mov
mov
lea
call
mov
lea
call
jmp
lea
call
test
jne
lea
call
mov
call
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
call
mov
lea
jmp
lea
call
cmp
jne
lea
call
mov
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
call
mov
lea
jmp
lea
call
cmp
jne
lea
call
mov
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
call
mov
lea
jmp
lea
push
lea
call
cmp
jne
lea
call
mov
call
push
push
call
push
lea
push
push
call
mov
add
push
add
push
call
mov
lea
call
call
mov
or
lea
call
mov
mov
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
xor
push
mov
mov
call
push
push
call
push
push
mov
call
push
push
mov
call
cmp
mov
jne
push
call
push
call
push
call
jmp
call
mov
call
push
call
test
mov
je
push
push
push
call
test
mov
je
cmp
je
push
call
test
je
mov
xor
cmp
je
push
push
push
push
call
mov
test
je
cmp
je
push
call
test
jne
call
push
push
push
push
call
test
jne
call
xor
jmp
test
je
cmp
je
push
call
push
call
mov
test
je
cmp
je
push
call
push
call
mov
and
push
push
push
call
xor
mov
inc
test
je
and
lea
push
push
call
cmp
jne
cmp
jne
mov
push
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
and
push
push
push
push
call
mov
test
je
lea
push
push
call
test
jne
push
call
jmp
cmp
je
push
call
push
jmp
push
push
call
test
push
jne
call
call
cmp
jne
push
call
call
xor
jmp
call
xor
inc
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
test
mov
mov
mov
mov
jne
push
jmp
cmp
jne
push
call
push
call
xor
leave
ret
push
push
push
call
mov
test
jne
push
call
call
xor
jmp
push
xor
push
push
push
push
call
test
je
inc
cmp
jb
xor
inc
pop
pop
leave
ret
push
call
push
call
xor
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
jge
pop
jmp
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
mov
lea
call
xor
mov
lea
push
push
push
mov
mov
mov
mov
mov
mov
call
lea
push
push
push
call
mov
add
mov
adc
mov
lea
push
lea
push
mov
call
mov
lea
shl
add
movsx
push
movsx
push
movsx
push
lea
push
push
call
add
push
push
push
push
call
or
lea
call
mov
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
push
call
mov
cmp
je
push
push
push
call
test
je
push
push
push
push
call
push
push
push
call
test
je
push
push
push
push
call
push
push
push
call
test
je
push
push
push
push
call
push
push
push
call
test
je
push
push
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
push
lea
push
push
push
mov
mov
call
test
je
cmp
push
jbe
push
jmp
push
call
push
push
push
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
mov
mov
push
push
push
mov
mov
mov
mov
lea
call
xor
mov
mov
mov
mov
mov
mov
push
pop
xor
lea
rep
stos
stos
mov
push
push
push
push
call
lea
push
push
push
call
test
je
mov
mov
shrd
mov
shr
mov
mov
mov
lea
push
push
push
lea
push
call
mov
cmp
jl
lea
push
lea
call
push
push
push
push
call
or
lea
call
mov
mov
mov
call
pop
pop
pop
leave
ret
push
call
call
mov
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
lea
call
xor
mov
cmp
je
cmp
je
mov
push
lea
call
push
push
push
call
mov
cmp
jne
mov
jmp
mov
xor
inc
jmp
mov
ret
xor
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
call
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
push
call
and
test
mov
jle
push
push
call
mov
xor
cmp
je
mov
push
push
push
mov
call
test
je
push
push
call
cmp
je
push
push
push
call
test
mov
je
push
call
cmp
jne
push
call
push
mov
call
sub
mov
xor
push
inc
push
mov
mov
push
push
call
test
je
inc
mov
cmp
jl
or
pop
pop
pop
leave
ret
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
xor
jmp
push
push
push
push
call
mov
test
je
push
push
push
push
call
push
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
jne
mov
neg
sbb
mov
jmp
push
call
push
call
mov
mov
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
mov
lea
call
xor
mov
lea
call
mov
mov
mov
mov
cmp
je
call
mov
cmp
jne
push
call
call
jmp
cmp
je
mov
cmp
jbe
xor
mov
add
mov
cmp
jne
push
push
push
call
inc
add
mov
cmp
jb
jmp
mov
mov
cmp
jae
mov
mov
inc
jmp
push
push
lea
push
call
add
push
lea
call
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
jmp
mov
mov
cmp
je
mov
jmp
xor
mov
mov
lea
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
push
call
mov
cmp
jge
push
call
mov
mov
lea
push
lea
push
push
push
push
call
mov
xor
inc
cmp
jne
mov
jmp
cmp
je
cmp
jl
xor
mov
cmp
jae
lea
push
call
push
lea
push
push
push
call
mov
cmp
jne
push
push
push
call
cmp
je
mov
mov
push
call
mov
inc
mov
jmp
cmp
je
jmp
push
call
mov
ret
xor
mov
mov
mov
mov
lea
mov
cmp
je
mov
push
call
mov
inc
cmp
jb
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
lea
call
or
lea
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
call
xor
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
cmp
je
push
push
call
cmp
je
mov
mov
cmp
jae
mov
mov
inc
jmp
push
push
lea
push
call
add
mov
push
push
call
push
lea
push
call
add
push
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
push
push
call
mov
lea
call
push
lea
call
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
jmp
mov
mov
cmp
je
mov
jmp
xor
mov
mov
lea
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
push
call
mov
cmp
jge
push
call
mov
mov
lea
push
lea
push
push
push
push
call
mov
xor
inc
cmp
jne
mov
jmp
cmp
je
cmp
jl
xor
cmp
sete
mov
cmp
mov
jne
mov
push
lea
push
lea
push
call
mov
mov
mov
mov
lea
push
push
push
call
mov
lea
call
xor
mov
cmp
jae
lea
push
call
push
lea
push
push
push
call
mov
cmp
je
push
call
push
lea
push
push
push
call
mov
cmp
je
push
push
push
lea
push
call
add
push
push
push
call
mov
cmp
jne
lea
push
push
push
call
mov
jmp
cmp
je
mov
mov
push
call
mov
inc
mov
jmp
cmp
je
jmp
push
call
push
call
lea
push
push
push
call
mov
xor
lea
mov
cmp
je
mov
push
call
mov
inc
cmp
jb
mov
cmp
je
mov
push
call
mov
xor
inc
jmp
push
call
mov
ret
xor
xor
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
push
call
mov
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
push
call
xor
mov
mov
mov
mov
mov
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
lea
push
push
push
call
mov
cmp
jge
push
call
push
lea
call
lea
push
push
push
call
mov
cmp
jge
push
call
push
lea
call
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
jmp
mov
mov
cmp
je
mov
jmp
xor
mov
mov
lea
push
push
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
push
call
mov
mov
cmp
jge
push
call
mov
mov
cmp
jae
mov
mov
lea
push
push
push
call
mov
mov
cmp
jge
cmp
je
push
call
inc
jmp
cmp
jne
push
call
mov
mov
lea
push
push
push
call
mov
cmp
jge
push
call
mov
push
lea
push
push
push
call
test
jne
push
call
cmp
je
cmp
jne
push
call
call
jmp
cmp
jne
push
jmp
lea
call
mov
push
push
call
push
lea
push
call
add
push
call
mov
lea
call
jmp
mov
jmp
push
call
and
mov
ret
xor
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
or
lea
push
call
push
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
call
xor
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
push
mov
call
cmp
je
mov
push
call
push
lea
push
push
push
call
mov
cmp
jl
lea
call
mov
mov
cmp
je
push
lea
call
mov
mov
mov
push
lea
call
mov
mov
mov
mov
cmp
je
mov
mov
jmp
mov
mov
cmp
je
mov
jmp
xor
mov
mov
push
lea
push
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
jl
mov
push
lea
push
push
push
call
push
lea
push
push
push
call
lea
call
mov
mov
cmp
je
push
push
push
lea
push
call
add
jmp
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
push
push
push
push
call
mov
lea
call
mov
lea
call
mov
jmp
mov
ret
mov
lea
call
mov
lea
call
mov
lea
call
or
lea
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
and
xor
cmp
je
lea
mov
test
jne
push
call
jmp
mov
mov
add
mov
test
jbe
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
test
je
add
dec
jne
mov
test
je
test
je
mov
add
xor
mov
test
jbe
cmp
je
add
inc
cmp
jb
jmp
mov
test
jne
push
call
call
xor
mov
mov
pop
pop
pop
leave
ret
mov
add
mov
add
mov
add
mov
add
and
mov
test
jbe
mov
mov
mov
mov
cmp
je
mov
add
mov
add
inc
cmp
jb
cmp
je
and
mov
mov
cmp
jge
mov
cmp
jne
and
lea
call
mov
mov
add
push
lea
call
mov
xor
cmp
jne
push
call
call
mov
mov
lea
call
jmp
mov
inc
push
mov
add
push
push
call
push
lea
call
push
push
push
call
mov
cmp
jne
mov
jmp
mov
lea
call
or
mov
add
mov
add
inc
jmp
push
call
call
mov
ret
jmp
xor
inc
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
mov
and
cmp
mov
jne
cmp
jne
push
call
jmp
call
jmp
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
xor
inc
jmp
push
call
mov
test
jne
push
call
call
xor
jmp
cmp
push
jne
cmp
jne
push
mov
call
jmp
push
mov
call
mov
cmp
jne
mov
push
push
push
push
call
cmp
je
push
push
call
push
push
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
call
push
push
push
push
mov
push
lea
call
xor
mov
mov
push
lea
push
push
push
mov
call
push
push
push
call
mov
push
call
push
lea
push
push
push
call
mov
push
push
push
push
call
push
call
push
lea
push
push
push
call
push
push
push
push
call
push
call
push
lea
push
push
push
call
xor
push
push
push
push
call
push
lea
push
push
push
call
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
cmp
jne
push
lea
push
push
push
call
push
push
push
call
push
mov
call
push
mov
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
lea
call
xor
mov
mov
mov
mov
mov
mov
mov
push
call
xor
inc
mov
mov
mov
push
call
mov
push
call
mov
call
mov
call
mov
cmp
je
cmp
je
push
push
push
push
call
mov
cmp
je
dec
mov
push
push
call
mov
cmp
jae
mov
mov
inc
jmp
cmp
jne
lea
cmp
je
push
call
mov
mov
mov
xor
inc
cmp
jne
lea
push
push
call
push
push
call
mov
mov
lea
push
lea
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
cmp
jae
mov
cmp
je
lea
push
push
call
cmp
jne
call
mov
cmp
jne
mov
mov
push
call
call
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
mov
jmp
cmp
jne
inc
cmp
jbe
mov
mov
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
push
call
call
mov
jmp
cmp
jge
mov
mov
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
push
call
mov
jmp
push
call
push
push
call
mov
lea
push
mov
call
cmp
je
mov
mov
push
call
mov
cmp
je
mov
push
push
push
push
call
mov
cmp
jne
cmp
je
inc
xor
inc
jmp
inc
or
mov
mov
cmp
jne
cmp
jne
xor
inc
cmp
jne
cmp
jne
cmp
jne
cmp
jne
dec
push
push
push
call
push
push
call
jmp
lea
push
mov
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
xor
inc
push
push
call
mov
cmp
jne
mov
mov
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
push
call
call
mov
jmp
mov
mov
cmp
jae
push
push
call
mov
cmp
jne
mov
mov
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
push
call
call
mov
jmp
xor
mov
push
push
push
call
mov
cmp
je
push
call
cmp
jne
push
call
mov
push
call
sub
mov
push
push
push
push
call
test
jne
mov
mov
mov
inc
xor
inc
jmp
xor
inc
cmp
jne
mov
push
push
call
mov
jmp
cmp
jne
push
push
push
call
push
push
call
jmp
mov
lea
push
mov
call
cmp
jne
inc
push
cmp
jne
push
push
call
push
lea
push
call
add
jmp
push
call
push
lea
push
call
add
mov
add
jmp
call
push
push
cmp
jne
push
call
push
lea
push
call
add
jmp
push
push
call
push
lea
push
call
add
mov
add
push
push
call
cmp
jne
lea
call
mov
or
push
push
lea
push
call
add
push
push
push
push
call
mov
cmp
je
cmp
je
push
push
call
mov
lea
call
jmp
cmp
je
or
push
push
push
push
call
mov
cmp
je
cmp
je
mov
push
push
call
cmp
jne
cmp
je
push
push
push
push
call
cmp
jne
inc
push
push
push
call
cmp
je
dec
push
push
call
cmp
jne
cmp
jne
cmp
jne
cmp
jne
mov
jmp
cmp
je
cmp
jne
mov
lea
push
push
push
call
mov
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
push
push
call
mov
push
call
mov
mov
mov
cmp
jae
push
push
push
call
mov
cmp
je
push
mov
push
push
call
mov
inc
mov
mov
cmp
jae
push
push
push
call
mov
cmp
je
push
push
push
call
mov
cmp
je
cmp
jne
mov
inc
push
push
push
push
call
cmp
jbe
mov
inc
jmp
mov
inc
jmp
lea
push
push
push
call
mov
mov
mov
cmp
jbe
mov
mov
cmp
jge
push
push
call
mov
cmp
je
push
push
call
mov
cmp
je
cmp
jne
push
push
call
dec
dec
jmp
push
push
call
mov
push
push
call
mov
mov
cmp
jne
push
push
push
call
mov
cmp
je
push
call
push
call
call
push
push
push
push
call
push
lea
push
call
mov
add
add
push
push
call
inc
mov
jmp
mov
lea
push
mov
call
cmp
jne
inc
push
push
push
call
push
lea
push
call
add
push
push
call
dec
dec
mov
add
jmp
dec
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
cmp
je
mov
mov
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
push
call
push
mov
add
push
call
jmp
cmp
je
xor
cmp
jbe
push
push
call
cmp
je
push
push
call
push
lea
push
call
add
push
mov
add
push
call
inc
cmp
jb
mov
mov
xor
inc
jmp
mov
mov
push
call
call
cmp
je
lea
push
call
mov
cmp
je
lea
push
call
mov
mov
jmp
push
call
mov
add
push
call
mov
ret
mov
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
and
and
push
mov
mov
lea
push
push
push
call
test
jne
mov
push
push
lea
push
mov
push
push
call
mov
test
je
mov
test
je
mov
push
call
mov
jmp
test
je
xor
jmp
mov
push
mov
mov
push
push
push
push
push
push
push
push
call
mov
mov
test
je
mov
push
call
and
test
je
mov
mov
lea
push
push
push
call
mov
test
jne
push
mov
mov
push
push
push
push
push
push
push
push
call
mov
mov
test
je
mov
push
call
and
jmp
cmp
jne
xor
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
test
je
mov
test
push
mov
je
push
call
mov
mov
test
je
push
call
mov
mov
test
je
push
call
push
call
pop
and
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
call
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
jne
mov
cmp
mov
jne
cmp
je
push
push
push
push
call
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
jl
cmp
jg
add
movzx
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
lea
call
xor
mov
mov
push
lea
call
push
push
call
pop
pop
test
jne
mov
jmp
push
lea
call
cmp
je
mov
jmp
push
lea
call
mov
cmp
je
inc
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
call
mov
cmp
je
mov
jmp
mov
xor
inc
jmp
push
call
mov
ret
xor
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
push
push
lea
call
and
mov
push
and
lea
call
push
call
cmp
jne
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
lea
call
cmp
jne
xor
jmp
push
lea
call
cmp
jne
push
push
mov
call
test
pop
pop
je
push
call
test
je
push
call
mov
xor
inc
or
lea
call
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
jne
mov
jmp
push
push
push
push
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
cmp
jne
mov
jmp
push
mov
push
push
call
mov
test
mov
jne
mov
jmp
push
push
xor
cmp
pop
mov
rep
mov
je
push
call
mov
pop
lea
push
call
test
mov
jne
lea
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
cmp
je
push
call
mov
pop
lea
push
call
test
mov
je
mov
push
mov
push
call
pop
pop
cmp
je
push
call
mov
pop
lea
push
call
test
mov
je
push
mov
push
call
pop
pop
mov
mov
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
push
call
ret
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
and
push
push
mov
call
mov
mov
mov
call
lea
mov
lea
push
push
call
test
mov
jne
test
je
push
call
mov
mov
test
je
mov
jmp
xor
test
je
lea
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
test
je
mov
jmp
xor
test
je
mov
lea
mov
mov
lea
mov
shr
rep
mov
and
rep
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
mov
cmp
jne
mov
jmp
lea
push
call
and
push
push
lea
call
mov
or
lea
push
call
push
call
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
mov
lea
xor
cmp
jne
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
jle
mov
lea
cmp
jne
mov
mov
lea
cmp
jne
mov
jmp
push
push
call
cmp
mov
mov
je
mov
push
call
cmp
je
movzx
push
push
jmp
push
push
push
call
add
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
lea
call
xor
mov
lea
call
mov
cmp
mov
mov
jne
mov
jmp
push
mov
mov
cmp
je
push
push
call
jmp
cmp
jne
cmp
jne
push
push
jmp
push
lea
call
push
lea
call
push
lea
call
mov
cmp
je
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
inc
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
lea
call
cmp
mov
jne
mov
lea
call
cmp
mov
jne
mov
cmp
jne
push
push
push
push
call
cmp
jne
push
push
push
push
push
push
push
push
call
mov
pop
mov
lea
call
or
lea
call
mov
mov
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
push
lea
call
xor
mov
mov
mov
cmp
je
cmp
je
mov
mov
mov
push
lea
call
mov
lea
push
push
push
push
push
call
mov
cmp
jl
mov
mov
mov
lea
push
push
push
push
push
call
mov
cmp
jl
push
push
push
call
mov
push
push
call
pop
pop
mov
mov
push
call
cmp
je
push
push
call
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
call
push
lea
call
jmp
mov
mov
push
lea
call
mov
call
test
je
mov
call
push
lea
call
mov
mov
ret
push
call
call
mov
ret
xor
mov
push
lea
call
push
call
jmp
push
call
call
mov
ret
jmp
mov
push
call
call
or
lea
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
push
mov
mov
je
add
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
xor
mov
mov
mov
push
push
call
mov
cmp
jge
push
call
push
push
push
push
xor
inc
push
push
push
push
push
call
mov
cmp
jge
push
call
mov
mov
cmp
je
mov
push
call
mov
push
push
push
push
push
call
mov
cmp
jge
push
call
mov
or
mov
mov
mov
pop
pop
pop
leave
ret
push
call
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
test
push
mov
je
add
push
call
mov
call
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
call
push
push
mov
call
push
call
pop
mov
mov
xor
mov
cmp
je
push
call
or
mov
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
push
push
push
push
mov
call
pop
mov
mov
xor
mov
cmp
je
push
push
call
mov
or
mov
call
mov
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
lea
movs
movs
movs
movs
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
mov
push
lea
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
or
mov
jmp
mov
push
call
mov
mov
mov
ret
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
push
push
and
push
push
lea
call
xor
inc
mov
push
lea
call
mov
lea
push
call
mov
mov
mov
test
pop
je
call
and
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
push
and
push
push
lea
call
xor
inc
mov
push
lea
call
mov
lea
push
call
mov
mov
mov
test
pop
je
call
and
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
mov
mov
and
cmp
jne
push
call
jmp
lea
push
call
and
push
push
lea
call
push
mov
call
or
lea
push
call
push
call
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
push
call
mov
mov
cmp
jne
cmp
je
mov
mov
or
xor
jmp
lea
push
push
call
test
jne
push
call
mov
push
call
test
jne
push
call
push
lea
call
cmp
je
cmp
jne
push
lea
call
push
call
push
cmp
jne
lea
call
mov
push
lea
call
mov
lea
push
lea
push
lea
call
mov
lea
push
lea
push
mov
call
mov
push
lea
call
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
jmp
lea
call
mov
push
lea
call
mov
lea
push
push
lea
push
call
mov
lea
push
lea
push
mov
call
mov
lea
push
lea
push
mov
call
mov
push
lea
call
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
cmp
je
push
call
test
je
push
lea
call
push
lea
call
cmp
jne
lea
call
test
jne
push
lea
call
jmp
cmp
jne
cmp
je
push
call
test
je
cmp
je
mov
mov
mov
mov
cmp
je
mov
push
call
mov
cmp
je
mov
mov
jmp
xor
mov
cmp
je
mov
jmp
xor
mov
cmp
je
mov
jmp
xor
mov
push
push
push
push
push
push
push
push
push
call
mov
cmp
jge
cmp
jne
cmp
jne
lea
call
test
je
lea
call
test
jne
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
cmp
je
mov
jmp
xor
mov
cmp
je
mov
jmp
xor
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
jmp
mov
cmp
jne
mov
push
lea
call
push
lea
call
push
lea
call
cmp
je
mov
mov
jmp
xor
mov
push
push
push
push
push
push
push
push
push
call
mov
cmp
jl
mov
cmp
je
mov
cmp
jge
push
call
jmp
push
lea
call
mov
cmp
je
mov
jmp
xor
mov
cmp
je
mov
jmp
xor
push
push
push
push
mov
push
call
mov
cmp
jge
push
call
mov
jmp
mov
push
call
mov
test
je
mov
mov
mov
ret
xor
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
mov
mov
cmp
je
call
mov
or
mov
cmp
je
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
xor
mov
push
lea
call
mov
push
mov
call
cmp
jne
push
mov
call
test
je
mov
mov
call
cmp
jne
push
lea
push
push
push
push
push
push
jmp
xor
mov
cmp
jne
mov
mov
mov
mov
push
lea
push
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
xor
inc
jmp
cmp
je
push
call
jmp
cmp
jne
jmp
mov
mov
call
cmp
jne
mov
push
mov
call
mov
mov
mov
lea
push
push
push
call
test
jne
call
jmp
push
mov
call
mov
push
mov
call
mov
mov
push
push
call
push
lea
push
call
add
lea
call
mov
push
lea
push
push
push
push
call
push
call
push
push
call
push
mov
call
mov
mov
mov
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
jmp
push
call
call
mov
ret
xor
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
push
call
call
mov
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
xor
cmp
je
cmp
je
mov
lea
push
call
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
push
push
lea
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
lea
push
cmp
jge
call
mov
jmp
mov
call
lea
push
call
or
xor
jmp
mov
push
call
mov
mov
mov
ret
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
lea
push
call
xor
mov
push
mov
call
cmp
je
cmp
je
lea
push
push
push
call
cmp
jl
mov
cmp
je
cmp
je
lea
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
push
mov
call
mov
mov
cmp
je
call
mov
mov
xor
inc
jmp
push
call
call
mov
ret
xor
or
lea
push
call
push
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
lea
push
call
and
cmp
mov
mov
mov
je
cmp
je
lea
push
push
push
call
test
jl
cmp
je
cmp
je
lea
call
mov
xor
inc
jmp
xor
or
lea
push
call
push
call
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
push
push
push
lea
call
and
mov
and
xor
inc
cmp
mov
je
cmp
je
push
lea
push
push
push
call
test
je
push
call
pop
mov
mov
jmp
xor
or
lea
call
mov
mov
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
xor
mov
lea
call
mov
mov
mov
mov
cmp
je
mov
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
lea
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
push
call
mov
cmp
jge
push
call
mov
mov
lea
push
lea
push
push
push
push
call
mov
cmp
jge
push
call
cmp
jne
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
push
call
push
lea
push
push
push
call
test
mov
jne
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
mov
push
lea
call
mov
mov
cmp
jne
push
push
call
mov
mov
jmp
push
push
lea
push
lea
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
lea
call
inc
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
call
mov
cmp
jne
push
push
call
mov
jmp
push
push
lea
push
lea
call
mov
mov
mov
mov
push
push
call
mov
mov
lea
call
imul
add
mov
mov
mov
jmp
push
call
mov
ret
xor
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
lea
call
xor
mov
mov
mov
mov
mov
cmp
je
xor
inc
mov
push
lea
call
mov
mov
mov
cmp
je
mov
jmp
xor
mov
lea
push
push
push
push
push
call
mov
mov
mov
cmp
je
call
mov
cmp
jge
push
call
push
push
call
mov
cmp
jge
push
call
mov
mov
lea
push
lea
push
push
or
push
push
call
mov
cmp
jge
push
call
cmp
jne
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
push
call
push
lea
push
push
push
call
test
mov
jne
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
jmp
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
push
lea
call
cmp
je
mov
mov
jmp
push
lea
call
cmp
je
push
pop
mov
jmp
push
lea
call
cmp
je
push
pop
mov
jmp
mov
or
lea
call
mov
jmp
push
call
mov
ret
or
lea
call
xor
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
call
push
push
mov
push
lea
mov
call
xor
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
mov
call
call
call
xor
cmp
mov
jne
call
cmp
mov
je
cmp
jne
call
cmp
mov
je
cmp
jne
call
cmp
mov
jne
xor
jmp
cmp
push
jne
push
call
mov
xor
cmp
pop
mov
je
mov
rep
cmp
jne
call
cmp
mov
jne
xor
jmp
cmp
jne
call
cmp
mov
je
lea
push
call
test
je
push
call
cmp
mov
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
stos
stos
stos
stos
stos
push
stos
call
cmp
mov
je
push
push
call
push
call
push
call
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
lea
push
xor
push
mov
call
push
call
test
jne
call
xor
jmp
push
lea
push
push
push
call
test
je
mov
push
mov
mov
push
push
mov
lea
push
push
push
xor
inc
mov
mov
call
test
jne
call
xor
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
pop
ret
mov
test
jne
xor
jmp
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
pop
ret
mov
test
jne
xor
jmp
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
je
mov
test
je
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
je
mov
test
je
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
pop
ret
mov
test
jne
xor
jmp
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
je
cmp
je
mov
test
je
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
call
push
push
push
mov
push
mov
mov
lea
xor
cmp
je
push
call
mov
lea
cmp
je
push
call
mov
lea
cmp
je
push
call
mov
lea
cmp
je
push
call
mov
lea
cmp
je
push
call
mov
mov
cmp
je
push
call
pop
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
lea
push
call
cmp
jne
push
call
lea
mov
cmp
je
push
call
pop
mov
lea
mov
cmp
je
push
push
call
push
call
mov
mov
cmp
jne
mov
cmp
je
push
mov
push
push
call
jmp
cmp
jne
mov
cmp
je
push
mov
call
mov
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
or
lea
call
mov
pop
pop
pop
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
push
mov
push
mov
mov
xor
push
mov
xor
cmp
pop
lea
mov
mov
rep
je
cmp
je
mov
mov
mov
mov
push
push
push
call
test
mov
jne
mov
push
call
mov
cmp
jge
push
lea
push
lea
push
call
lea
push
call
mov
jmp
push
call
push
mov
sub
call
sub
cmp
ja
mov
lea
push
mov
lea
push
lea
push
call
inc
lea
push
call
test
je
push
push
lea
push
call
test
je
push
lea
push
call
cmp
jbe
cmp
ja
mov
push
add
cmp
sbb
and
inc
imul
mov
call
add
add
cmp
je
cmp
jb
xor
mov
pop
pop
pop
call
leave
ret
cmp
jne
xor
inc
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
xor
cmp
mov
mov
je
cmp
je
cmp
je
cmp
lea
push
jne
push
push
call
neg
sbb
neg
jmp
mov
push
push
call
push
push
call
cmp
je
lea
push
push
push
call
mov
cmp
jne
push
jmp
jae
push
pop
jmp
cmp
sbb
and
jmp
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
cmp
push
je
cmp
je
cmp
je
cmp
je
push
push
call
cmp
mov
je
push
xor
xor
call
test
mov
jbe
mov
mov
cmp
jb
cmp
ja
movzx
push
sub
cdq
push
push
mov
push
mov
mov
call
mov
add
mov
adc
inc
cmp
mov
mov
jb
push
push
call
cdq
cmp
jne
cmp
jne
push
jmp
cmp
ja
jb
cmp
jae
push
jmp
cmp
jb
ja
cmp
jbe
push
pop
jmp
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
push
call
test
je
push
push
push
push
call
test
je
push
push
call
cmp
pop
pop
je
add
push
call
test
jne
xor
inc
jmp
mov
push
push
call
test
pop
pop
je
mov
push
call
push
mov
call
mov
mov
sub
je
and
push
push
call
test
pop
pop
jne
mov
push
push
call
test
je
cmp
mov
jne
push
push
call
test
pop
pop
je
lea
test
je
push
push
push
push
call
test
jne
push
jmp
jge
push
jmp
test
jle
push
pop
jmp
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
cmp
mov
je
cmp
je
cmp
je
cmp
jne
push
lea
push
push
call
mov
add
push
call
test
je
cmp
je
push
call
test
jg
call
cmp
jne
push
call
push
call
xor
pop
pop
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
cmp
push
push
mov
je
mov
cmp
je
cmp
je
push
lea
push
push
call
mov
add
push
call
test
je
cmp
je
push
call
test
jg
push
push
push
push
call
cmp
jne
push
push
push
call
cmp
je
xor
inc
jmp
push
call
push
call
jmp
push
call
call
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
push
mov
add
push
call
inc
cmp
jbe
pop
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
mov
push
call
pop
mov
test
jne
push
call
call
xor
mov
mov
pop
pop
pop
leave
ret
mov
xor
mov
rep
and
lea
mov
mov
push
call
mov
lea
mov
push
call
mov
lea
mov
push
call
mov
push
push
mov
call
or
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
push
lea
push
call
push
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
mov
xor
mov
mov
mov
add
mov
mov
mov
push
lea
push
call
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
and
and
mov
mov
add
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
xor
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
lea
push
call
push
push
push
push
call
mov
or
push
mov
call
push
mov
call
push
mov
call
xor
cmp
jne
xor
jmp
mov
add
mov
cmp
je
cmp
jbe
push
call
pop
push
call
push
call
push
call
jmp
cmp
je
cmp
jne
cmp
je
push
jmp
cmp
je
mov
call
cmp
jne
push
jmp
cmp
je
mov
call
cmp
jne
push
jmp
xor
cmp
jne
cmp
je
push
jmp
lea
cmp
je
push
mov
call
test
jne
mov
mov
jmp
xor
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
call
cmp
je
cmp
je
push
jmp
mov
push
call
test
jne
mov
push
call
test
jne
push
jmp
push
push
push
call
mov
push
call
test
jne
push
push
push
push
call
cmp
je
push
call
push
call
jmp
xor
inc
push
call
pop
mov
jmp
push
call
call
mov
ret
int3
int3
int3
int3
int3
mov
call
sub
push
push
push
mov
mov
mov
mov
mov
and
and
push
call
push
lea
push
mov
call
push
call
push
lea
push
call
push
call
push
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
lea
push
call
push
call
push
add
push
call
mov
push
mov
add
push
call
mov
add
mov
mov
mov
mov
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
mov
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
mov
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
mov
add
mov
mov
mov
and
and
push
call
push
mov
add
push
call
push
call
push
mov
add
push
call
push
mov
add
push
call
lea
push
push
push
push
call
test
je
xor
inc
cmp
jne
push
push
push
call
push
push
push
call
cmp
je
mov
cmp
jne
push
push
push
call
push
push
push
call
cmp
je
mov
cmp
jne
push
push
push
call
push
push
push
call
cmp
je
mov
cmp
jne
and
push
lea
call
or
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
call
call
mov
ret
xor
jmp
lea
call
mov
mov
push
lea
call
mov
push
call
mov
and
and
mov
cmp
jge
and
push
push
push
call
mov
push
push
push
call
mov
push
push
push
call
mov
cmp
je
test
je
cmp
je
push
call
mov
push
push
push
push
call
push
call
test
jne
push
push
call
mov
push
push
push
jmp
push
push
push
push
call
push
call
test
jne
push
push
call
mov
push
push
push
push
push
jmp
push
push
push
push
call
push
call
test
jne
push
push
call
pop
pop
test
jne
push
push
push
push
push
jmp
push
push
push
push
call
push
call
push
push
test
jne
push
call
push
push
call
push
push
push
push
test
jne
call
test
je
mov
jmp
call
test
mov
je
mov
push
push
push
push
lea
push
call
add
jmp
push
push
call
push
call
test
jne
push
push
call
shl
mov
push
push
push
push
push
lea
push
call
add
mov
lea
push
lea
call
mov
mov
push
push
call
dec
dec
inc
jmp
push
call
call
xor
mov
jmp
cmp
jne
push
lea
call
mov
jmp
push
call
call
mov
ret
xor
or
lea
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
and
pop
jne
mov
mov
not
mov
leave
ret
int3
int3
int3
int3
int3
cmp
jne
test
jne
ret
jmp
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
lea
mov
lea
mov
mov
push
pop
xor
lea
rep
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
push
call
lea
push
call
push
call
push
call
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
and
mov
mov
test
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
lea
push
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
mov
mov
mov
mov
and
test
mov
je
mov
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
push
call
xor
push
call
cmp
jne
mov
add
cmp
jne
movzx
cmp
je
cmp
je
mov
jmp
cmp
jbe
xor
cmp
jmp
cmp
jbe
xor
cmp
setne
mov
mov
push
call
pop
or
or
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
push
lea
push
lea
push
lea
push
call
mov
push
push
call
mov
mov
mov
push
push
push
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmp
jne
push
call
call
or
mov
call
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
mov
push
mov
test
push
mov
je
push
push
lea
push
push
push
call
test
je
push
call
pop
mov
pop
jmp
mov
call
test
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
push
push
call
pop
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
push
push
call
and
dec
js
mov
sub
mov
call
jmp
or
call
ret
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
ret
mov
jmp
call
int3
int3
int3
int3
int3
int3
push
push
call
and
mov
mov
imul
add
and
dec
js
sub
mov
call
jmp
mov
or
call
call
ret
cmp
jne
push
push
push
push
call
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
mov
pop
xor
lea
rep
mov
push
mov
mov
push
mov
mov
push
push
mov
mov
call
push
push
push
push
call
push
push
push
push
call
push
push
push
lea
push
call
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
cmp
je
push
push
push
call
mov
test
jbe
push
push
call
dec
jne
mov
pop
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
push
call
call
jmp
mov
mov
push
lea
push
mov
cmp
jne
push
push
call
test
pop
pop
mov
mov
je
push
push
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
push
call
test
je
mov
jmp
mov
cmp
je
inc
cmp
jb
xor
pop
pop
ret
lea
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
cmp
push
push
push
je
mov
test
je
push
mov
call
mov
push
mov
call
mov
lea
cmp
mov
jb
test
je
test
je
cmp
mov
jae
mov
mov
lea
xor
cmp
jne
mov
cmp
jae
inc
inc
inc
mov
cmp
je
cmp
je
inc
mov
inc
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
mov
lea
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
push
push
je
mov
test
je
mov
push
call
push
mov
call
cmp
mov
je
test
je
mov
jmp
mov
xor
cmp
je
cmp
jae
inc
cmp
jne
cmp
jne
inc
cmp
jb
xor
pop
pop
pop
pop
ret
lea
jmp
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
push
pop
mov
lea
push
mov
xor
rep
call
mov
test
je
lea
push
push
call
test
je
push
inc
call
push
call
mov
pop
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
lea
mov
test
je
push
call
and
pop
lea
mov
test
je
push
call
and
pop
lea
mov
test
je
push
call
and
pop
lea
push
call
cmp
pop
pop
pop
jne
jmp
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
push
mov
call
push
mov
call
push
push
lea
push
push
push
push
push
call
cmp
je
push
call
cmp
je
push
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
mov
pop
xor
xor
mov
lea
rep
stos
push
pop
xor
mov
lea
rep
stos
mov
push
lea
push
push
lea
push
lea
push
mov
call
lea
push
call
mov
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
push
je
mov
cmp
je
mov
push
push
push
mov
push
push
push
shr
push
push
xor
mov
rep
mov
push
and
push
rep
call
pop
mov
pop
jmp
push
call
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
je
mov
test
je
mov
push
push
push
mov
xor
mov
push
rep
call
mov
pop
jmp
push
call
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
je
mov
test
je
mov
push
push
push
push
push
xor
push
mov
mov
push
rep
call
mov
pop
jmp
push
call
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
mov
and
push
push
mov
pop
xor
test
lea
rep
stos
pop
jne
push
call
call
fld
jmp
push
lea
push
call
lea
push
lea
push
call
pop
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
mov
push
push
mov
pop
xor
cmp
lea
rep
stos
pop
jb
cmp
ja
test
jne
push
call
call
xor
jmp
push
lea
push
call
push
lea
push
lea
push
call
add
jmp
or
mov
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
mov
and
push
push
mov
pop
xor
test
lea
rep
stos
pop
jne
push
call
call
xor
jmp
push
lea
push
call
lea
push
lea
push
call
fstp
add
push
call
neg
sbb
inc
mov
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
push
mov
push
push
mov
push
xor
cmp
pop
lea
rep
stos
jb
cmp
ja
test
jne
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
mov
push
lea
push
call
push
lea
push
lea
push
call
add
push
mov
call
test
jne
cmp
jne
test
jl
push
lea
push
call
lea
push
lea
push
call
cmp
pop
pop
jne
fcomp
fnstsw
test
je
xor
inc
jmp
fcom
fnstsw
test
je
fcomp
fnstsw
test
jp
jmp
fstp
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
jne
push
call
call
mov
jmp
push
mov
push
call
test
jne
mov
jmp
push
call
mov
test
pop
jne
push
call
call
mov
jmp
push
push
xor
call
push
pop
dec
mov
cmp
je
cmp
jne
cmp
jne
test
je
inc
cmp
jne
test
je
jmp
and
lea
push
push
call
push
call
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
push
xor
push
xor
cmp
mov
lea
stos
stos
stos
mov
mov
mov
mov
mov
stos
mov
jne
push
call
call
xor
jmp
mov
push
push
call
mov
cmp
mov
jne
xor
jmp
cmp
je
cmp
je
mov
jmp
lea
push
push
call
push
push
call
test
je
mov
mov
cmp
push
lea
push
push
lea
push
push
jne
call
test
je
cmp
jne
push
mov
mov
push
and
call
push
lea
push
push
call
add
push
lea
push
push
lea
push
push
call
push
call
xor
inc
pop
mov
pop
pop
call
leave
ret
call
test
je
mov
cmp
je
cmp
jne
cmp
je
push
lea
push
push
call
add
push
lea
push
push
lea
push
push
call
push
call
push
lea
push
push
call
add
push
lea
push
push
lea
push
push
call
push
call
push
lea
push
push
call
add
push
lea
push
push
lea
push
push
call
push
call
dec
jmp
mov
dec
cmp
jne
push
lea
push
push
push
push
call
push
call
jmp
cmp
je
mov
mov
inc
push
mov
lea
push
push
push
jmp
push
push
call
jmp
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
mov
push
mov
push
mov
push
xor
pop
lea
rep
stos
push
xor
test
pop
lea
rep
stos
je
test
je
push
mov
push
mov
lea
push
push
call
push
lea
push
push
call
add
cmp
je
mov
lea
push
call
lea
push
call
lea
push
lea
push
call
pop
neg
pop
sbb
neg
pop
jmp
push
call
call
xor
mov
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
jne
push
push
call
jmp
push
push
push
call
jmp
cmp
jne
push
push
call
jmp
push
push
push
call
add
jmp
push
call
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
xor
cmp
jne
push
call
mov
cmp
jne
push
call
call
xor
jmp
mov
mov
push
push
lea
mov
mov
cmp
mov
jne
lea
push
push
mov
call
jmp
cmp
jae
lea
push
push
mov
call
test
pop
pop
mov
mov
jne
push
call
call
xor
jmp
push
push
push
push
call
mov
test
je
push
push
push
call
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
push
mov
push
mov
push
mov
push
xor
test
pop
lea
rep
mov
stos
je
test
je
push
call
mov
mov
lea
xor
cmp
je
add
cmp
jne
push
jmp
xor
inc
push
pop
push
call
test
jne
test
je
push
lea
push
push
push
push
call
jmp
xor
cmp
jbe
mov
push
lea
push
lea
push
call
lea
push
push
push
add
call
push
call
add
cmp
jb
jmp
push
call
call
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
xor
cmp
push
push
mov
je
cmp
je
mov
mov
lea
mov
cmp
jne
call
cmp
mov
mov
je
push
call
cmp
jae
mov
sub
inc
push
push
call
cmp
jne
mov
push
lea
push
push
call
test
je
push
call
cmp
mov
jne
mov
jmp
lea
push
push
call
mov
cmp
pop
pop
jne
push
jmp
and
cmp
jbe
mov
mov
lea
mov
movzx
push
push
lea
push
call
test
je
mov
inc
mov
mov
mov
inc
inc
mov
cmp
jb
and
push
push
push
push
call
test
jne
push
call
call
push
call
pop
jmp
push
call
pop
push
push
call
test
jne
push
call
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
xor
push
mov
call
push
mov
call
push
push
lea
push
push
push
push
push
call
cmp
pop
pop
je
push
push
call
push
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
lea
push
mov
cmp
jne
push
push
call
test
pop
pop
mov
mov
jne
mov
jmp
push
push
push
call
test
mov
je
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
cmp
jne
xor
inc
jmp
xor
pop
ret
int3
int3
int3
int3
int3
push
push
call
pop
pop
xor
cmp
jne
xor
ret
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
call
test
je
push
mov
test
je
push
mov
push
call
push
call
test
pop
mov
jne
pop
xor
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
push
call
test
je
push
call
mov
test
je
push
call
and
pop
and
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
test
je
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
test
je
mov
cmp
ja
xor
jmp
mov
push
xor
cmp
jb
dec
mov
mov
jne
mov
test
je
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
call
test
je
push
push
call
test
pop
pop
jne
or
jmp
mov
and
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
jmp
mov
mov
mov
mov
dec
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
mov
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
mov
test
je
push
call
and
pop
and
jmp
add
push
call
and
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
call
test
jne
or
jmp
xor
cmp
push
push
mov
mov
jbe
mov
mov
cmp
jne
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
fld
fld
fucompp
fnstsw
test
jp
mov
jmp
push
push
push
push
call
test
je
mov
jmp
mov
fld
fld
fucompp
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
cmp
jmp
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
cmp
je
mov
inc
cmp
mov
jb
or
pop
pop
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
call
test
jne
or
jmp
and
cmp
push
push
mov
jbe
mov
cmp
jne
push
push
push
call
test
je
mov
cmp
jne
mov
cmp
ja
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
fld
fld
fucompp
fnstsw
test
jp
mov
jmp
push
push
push
push
call
test
jmp
mov
fld
fld
fucompp
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
cmp
jmp
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
cmp
je
inc
mov
cmp
mov
jb
or
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
mov
test
jne
push
call
mov
push
inc
push
push
call
mov
test
pop
pop
je
push
push
push
call
push
lea
push
push
push
call
cmp
jne
push
call
pop
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
push
push
call
mov
test
pop
pop
je
mov
push
push
push
push
mov
call
cmp
jne
push
call
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
push
push
call
mov
test
pop
pop
je
mov
push
push
push
push
mov
call
cmp
jne
push
call
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
push
push
call
mov
test
pop
pop
je
mov
push
push
push
push
mov
call
cmp
jne
push
call
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
push
push
call
mov
test
pop
pop
je
fld
push
push
fstp
push
push
call
cmp
jne
push
call
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
test
je
call
test
mov
je
push
xor
cmp
jbe
push
push
push
push
call
cmp
je
inc
cmp
jb
cmp
pop
jne
push
push
push
push
call
cmp
jne
lea
push
call
or
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
jne
or
jmp
push
xor
cmp
jbe
push
push
push
push
call
cmp
je
inc
cmp
jb
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
push
call
jmp
or
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
call
jmp
or
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
and
push
mov
push
lea
push
push
push
call
mov
test
je
mov
test
mov
je
mov
jmp
mov
cmp
jne
mov
dec
push
call
push
call
xor
pop
inc
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
mov
cmp
je
cmp
je
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
je
xor
jmp
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
mov
cmp
je
cmp
je
or
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
je
fld
jmp
mov
fld
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
je
fld
jmp
mov
fld
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
je
xor
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
call
jmp
or
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
call
mov
test
je
mov
cmp
je
test
je
xor
jmp
push
mov
test
jne
push
call
mov
inc
cmp
jne
push
push
call
test
pop
pop
mov
jne
xor
jmp
lea
mov
mov
jmp
lea
cmp
jae
push
push
mov
call
test
pop
pop
mov
je
push
push
push
call
xor
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
call
mov
test
je
mov
cmp
je
test
je
jmp
test
jne
push
push
call
test
pop
pop
mov
jne
xor
jmp
mov
mov
mov
mov
mov
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
call
mov
test
je
mov
cmp
je
test
je
jmp
test
jne
push
push
call
test
pop
pop
mov
jne
xor
jmp
mov
mov
mov
mov
mov
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
push
call
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
je
cmp
jne
push
push
push
push
call
jmp
or
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
lea
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
je
push
call
test
je
push
push
push
push
call
jmp
or
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
test
je
mov
push
call
test
je
push
push
push
call
test
je
mov
mov
cmp
je
test
jne
mov
mov
xor
inc
jmp
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
mov
and
push
mov
push
xor
test
pop
lea
rep
stos
jne
push
call
call
xor
jmp
push
push
push
lea
push
call
mov
mov
lea
push
push
call
mov
test
pop
pop
je
push
push
push
call
test
je
push
push
call
test
jl
cmp
jge
mov
inc
push
push
mov
call
mov
test
pop
pop
jne
cmp
je
push
call
call
xor
jmp
xor
inc
pop
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
test
push
push
push
pop
mov
lea
mov
rep
je
mov
push
call
test
je
push
call
cmp
jne
xor
inc
jmp
push
push
call
add
push
call
test
pop
pop
mov
jne
push
call
call
xor
jmp
mov
push
push
call
and
lea
push
call
test
jle
mov
movzx
push
push
call
test
pop
pop
jne
inc
lea
push
call
cmp
jl
push
push
call
push
push
call
xor
cmp
pop
pop
jne
mov
cmp
je
push
push
push
call
cmp
jne
push
call
call
jmp
push
call
call
xor
jmp
xor
inc
push
call
pop
mov
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
cmp
mov
mov
push
mov
mov
jne
lea
push
push
call
test
je
call
push
call
xor
jmp
mov
push
push
push
call
mov
lea
push
push
call
mov
test
pop
pop
jne
push
call
call
jmp
push
push
push
call
push
call
cmp
mov
jne
push
call
pop
push
jmp
push
push
lea
push
call
mov
test
jne
xor
jmp
push
call
cmp
mov
pop
jne
push
push
call
pop
pop
push
push
push
call
xor
inc
pop
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
call
neg
sbb
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
push
push
push
xor
pop
mov
xor
cmp
lea
mov
rep
push
pop
lea
mov
mov
rep
je
push
call
test
je
mov
lea
push
lea
push
mov
push
mov
call
push
push
push
lea
push
call
test
je
push
call
cmp
jne
push
lea
push
push
call
test
je
push
push
lea
push
jmp
lea
push
lea
push
push
mov
call
push
push
push
lea
push
call
neg
sbb
inc
jmp
xor
inc
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
and
push
mov
test
jne
xor
jmp
push
mov
push
push
push
call
add
push
call
mov
test
pop
pop
jne
push
call
call
jmp
push
push
call
push
call
test
je
push
call
test
jne
push
push
push
call
add
lea
push
push
push
call
push
mov
call
test
pop
je
xor
jmp
mov
xor
test
je
mov
and
imul
add
push
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
sbb
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
push
mov
push
push
xor
pop
mov
xor
cmp
lea
mov
rep
push
pop
lea
mov
mov
rep
je
push
call
test
je
mov
push
lea
push
call
push
call
cmp
jne
add
push
lea
push
call
mov
test
je
push
lea
push
lea
push
push
call
add
jmp
test
je
push
jmp
test
je
push
jmp
test
jns
push
jmp
test
je
test
je
push
jmp
lea
push
lea
push
push
call
add
test
je
mov
push
lea
push
push
call
mov
test
je
cmp
je
call
jmp
call
jmp
push
xor
call
mov
jmp
xor
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
push
push
mov
push
mov
mov
mov
mov
push
mov
pop
xor
xor
mov
lea
rep
stos
push
pop
mov
xor
lea
rep
push
stos
call
cmp
jne
cmp
je
push
call
test
je
mov
push
call
push
call
push
call
mov
jmp
xor
jmp
mov
push
lea
push
call
push
call
cmp
jne
add
push
lea
push
call
lea
push
call
test
jne
call
jmp
mov
push
lea
push
call
cmp
je
push
call
test
je
push
lea
push
lea
push
push
call
add
jmp
lea
push
lea
push
push
call
add
push
pop
xor
push
push
lea
push
rep
lea
mov
lea
push
mov
mov
mov
call
mov
cmp
je
cmp
je
call
jmp
call
jmp
push
xor
call
lea
push
call
cmp
jae
lea
push
call
push
call
push
call
mov
mov
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
cmp
push
je
cmp
je
cmp
jbe
lea
push
push
push
call
test
jne
inc
add
cmp
jb
jmp
imul
mov
jmp
push
call
call
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
push
push
push
push
call
test
jne
push
jmp
jge
push
jmp
test
jle
push
pop
jmp
push
call
call
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
jne
push
jmp
jge
push
jmp
cmp
jle
push
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
cmp
jne
push
pop
jmp
jae
push
jmp
cmp
sbb
and
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
fld
fld
fucompp
fnstsw
test
jp
push
jmp
fld
fcomp
fnstsw
test
jp
push
jmp
fld
fcomp
fnstsw
test
jne
push
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
fld
fld
fucompp
fnstsw
test
jp
push
jmp
fld
fcomp
fnstsw
test
jp
push
jmp
fld
fcomp
fnstsw
test
jne
push
pop
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
mov
push
push
mov
lea
lea
rep
mov
xor
push
xor
cmp
mov
pop
lea
rep
mov
stos
je
cmp
je
mov
and
dec
cmp
ja
jmp
push
push
call
push
push
mov
call
cmp
mov
je
cmp
je
test
je
push
lea
push
call
lea
push
push
call
test
pop
pop
je
mov
push
call
lea
push
mov
call
mov
mov
sub
jne
or
push
push
push
push
call
jmp
push
push
call
mov
test
je
push
push
call
push
push
mov
call
push
push
call
jmp
push
push
call
mov
test
je
push
push
call
push
push
mov
call
push
push
call
jmp
push
push
call
mov
test
je
push
push
call
fstp
push
call
push
push
fstp
fld
fstp
call
jmp
push
push
call
mov
test
je
push
push
call
fstp
push
call
sub
fstp
fld
fstp
call
jmp
push
push
call
push
push
mov
call
push
push
mov
call
test
je
test
je
test
je
mov
test
jne
lea
push
push
push
push
push
call
jmp
mov
jmp
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
sar
add
xchg
mov
add
cmps
mov
add
into
mov
add
pop
mov
int3
int3
int3
mov
push
mov
sub
mov
mov
push
mov
push
push
mov
lea
lea
rep
mov
xor
push
xor
test
mov
pop
lea
rep
stos
je
test
je
push
push
call
mov
test
je
mov
and
dec
jne
push
push
call
mov
test
je
test
je
push
lea
push
call
lea
push
push
call
test
pop
pop
je
mov
push
call
lea
push
mov
call
mov
mov
sub
jne
or
cmp
jne
mov
jmp
push
push
push
push
call
cmp
jne
mov
jmp
push
push
call
test
je
push
push
push
push
call
mov
mov
jmp
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
xor
push
xor
cmp
mov
pop
lea
rep
mov
stos
je
cmp
je
cmp
mov
jbe
mov
mov
mov
mov
add
push
lea
push
call
push
lea
push
jmp
push
push
push
push
push
call
mov
cmp
jne
push
push
call
mov
cmp
je
push
push
push
push
call
push
push
push
call
mov
push
add
push
push
push
call
push
push
call
test
pop
pop
mov
jne
inc
mov
add
cmp
jb
jmp
push
call
call
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
and
mov
push
mov
push
push
mov
lea
lea
rep
mov
mov
push
xor
test
pop
lea
rep
mov
stos
je
test
je
test
je
mov
push
call
test
je
mov
and
dec
cmp
ja
jmp
test
je
push
lea
push
call
lea
push
push
call
mov
test
pop
pop
je
push
call
cmp
jne
lea
cmp
je
test
je
push
lea
push
push
jmp
push
jmp
push
push
push
call
test
je
test
je
push
push
lea
push
call
jmp
xor
inc
jmp
push
call
jmp
cmp
je
mov
test
jne
lea
push
push
push
push
push
call
neg
sbb
neg
jmp
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
and
add
cmp
add
stc
mov
add
mov
add
mov
add
mov
int3
int3
int3
int3
mov
push
mov
sub
mov
and
and
mov
mov
push
mov
mov
push
push
and
mov
mov
mov
push
xor
pop
mov
mov
mov
lea
rep
stos
push
xor
pop
lea
rep
stos
push
xor
pop
lea
rep
stos
xor
cmp
mov
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
push
lea
push
call
lea
push
call
push
call
call
push
call
and
test
mov
jbe
push
push
push
call
test
je
push
push
call
push
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
test
pop
pop
mov
je
mov
push
call
mov
lea
push
call
sub
and
lea
push
push
call
push
call
mov
lea
test
je
push
call
lea
mov
push
push
call
push
push
call
push
push
call
mov
push
push
call
push
push
call
push
push
push
push
push
call
cmp
jle
dec
push
push
push
call
push
push
mov
imul
add
push
sub
mov
mov
mov
rep
call
test
jne
inc
mov
cmp
jb
jmp
push
jmp
push
call
push
call
mov
jmp
push
call
call
or
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
mov
push
xor
xor
pop
mov
mov
lea
rep
stos
push
xor
pop
mov
lea
rep
stos
push
xor
cmp
mov
pop
lea
rep
mov
stos
mov
je
cmp
je
call
cmp
mov
je
push
push
push
call
cmp
je
cmp
jne
call
cmp
mov
je
push
mov
call
cmp
mov
mov
jbe
mov
mov
push
lea
push
call
push
lea
push
call
push
lea
push
call
push
push
call
test
je
lea
push
lea
push
lea
push
push
push
push
call
cmp
mov
je
test
je
push
push
call
cmp
mov
je
push
push
push
push
call
push
lea
push
push
push
push
call
push
lea
push
push
push
push
call
push
lea
push
push
push
push
call
inc
mov
cmp
jb
lea
push
call
mov
jmp
and
jmp
push
jmp
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
push
push
mov
lea
movs
movs
movs
movs
push
mov
mov
pop
mov
xor
lea
rep
mov
mov
lea
movs
movs
movs
movs
push
pop
lea
rep
stos
mov
mov
lea
movs
movs
movs
movs
push
pop
xor
lea
rep
mov
mov
lea
movs
movs
movs
movs
push
pop
lea
rep
mov
mov
lea
movs
movs
movs
movs
mov
push
mov
pop
lea
rep
stos
mov
mov
lea
movs
movs
movs
movs
push
pop
xor
lea
mov
rep
stos
xor
cmp
je
cmp
je
cmp
je
push
call
cmp
mov
mov
jbe
push
push
push
call
push
push
push
mov
call
test
je
push
lea
push
push
call
test
mov
jne
mov
mov
imul
mov
and
cmp
jne
push
push
call
test
je
mov
imul
sub
add
test
mov
mov
push
push
rep
je
call
jmp
call
mov
test
je
mov
inc
cmp
mov
jb
mov
xor
cmp
setne
jmp
push
call
call
xor
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
push
pop
mov
mov
lea
movs
movs
movs
movs
push
pop
mov
xor
lea
rep
mov
mov
lea
movs
movs
movs
movs
push
pop
lea
rep
stos
mov
mov
lea
movs
movs
movs
movs
push
pop
xor
lea
rep
mov
mov
lea
movs
movs
movs
movs
push
pop
lea
rep
mov
mov
lea
movs
movs
movs
movs
push
pop
lea
rep
stos
mov
mov
mov
lea
movs
movs
movs
movs
push
xor
pop
lea
rep
stos
test
jne
push
call
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
push
push
call
sub
je
sub
je
sub
je
sub
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
jne
push
call
call
xor
pop
pop
ret
push
call
cmp
jle
xor
mov
push
push
call
test
pop
pop
je
xor
inc
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmp
push
je
mov
test
je
push
call
test
je
push
push
add
push
call
jmp
push
call
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
or
push
mov
push
mov
test
mov
push
je
test
je
push
call
xor
cmp
mov
mov
jbe
mov
mov
mov
lea
rep
mov
and
je
mov
cmp
je
push
push
lea
push
call
test
je
mov
jmp
test
jne
mov
add
inc
cmp
mov
jb
mov
jmp
mov
jmp
push
call
call
or
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
call
test
pop
pop
mov
je
push
push
mov
push
push
call
push
mov
dec
call
mov
sub
add
push
push
mov
dec
call
mov
mov
lea
push
push
call
mov
mov
mov
add
test
je
test
je
mov
add
push
push
call
inc
push
push
push
call
jmp
push
call
and
pop
mov
test
je
push
call
and
pop
and
and
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
mov
mov
push
xor
push
mov
mov
xor
cmp
mov
lea
mov
rep
mov
lea
mov
mov
mov
rep
mov
je
cmp
je
call
test
jne
push
call
jmp
xor
cmp
mov
jbe
mov
test
jne
inc
add
cmp
jb
jmp
mov
mov
xor
push
mov
push
push
call
xor
inc
jmp
push
call
mov
sub
mov
push
call
add
mov
push
push
push
call
test
jne
mov
mov
push
lea
push
call
push
lea
push
call
lea
push
call
mov
sub
xor
cmp
jle
push
push
push
lea
push
call
test
jne
mov
cmp
mov
je
push
lea
push
call
push
lea
push
call
push
lea
push
call
lea
push
call
push
call
cmp
mov
jbe
mov
xor
mov
mov
mov
mov
mov
mov
lea
push
mov
call
cmp
jg
mov
push
push
mov
push
call
cmp
jne
lea
push
lea
push
push
call
cmp
je
cmp
je
push
push
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
imul
add
mov
cmp
je
and
test
je
push
call
test
je
push
push
push
call
test
je
and
push
call
cmp
jne
mov
inc
cmp
jae
cmp
jne
push
call
cmp
jg
push
call
cmp
jne
cmp
jne
push
push
push
call
test
jne
push
push
push
call
cmp
jne
test
je
mov
test
je
cmp
je
cmp
je
cmp
jne
mov
mov
push
call
cmp
jle
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
push
call
push
call
jmp
push
mov
call
cmp
jge
mov
mov
mov
cmp
je
mov
test
jne
test
je
push
lea
push
push
call
test
jne
cmp
lea
push
jne
push
push
call
push
push
call
push
lea
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
push
lea
push
call
add
cmp
jne
push
mov
call
lea
push
call
mov
mov
and
dec
cmp
ja
jmp
test
je
test
je
mov
push
push
push
push
call
cmp
jne
mov
push
push
push
call
jmp
push
push
call
jmp
push
push
push
call
test
jne
cmp
jne
lea
push
push
push
mov
call
push
push
call
push
lea
push
call
add
push
call
lea
push
call
jmp
test
push
push
je
call
push
mov
push
call
jmp
call
mov
mov
jmp
push
push
push
call
test
je
test
push
push
je
call
push
mov
push
call
jmp
push
call
test
je
test
push
je
call
mov
push
fstp
push
call
jmp
call
fld
mov
fstp
fstp
jmp
push
call
test
jne
cmp
jne
lea
push
push
push
mov
call
push
push
jmp
test
push
je
call
mov
push
push
fstp
push
call
jmp
call
mov
fstp
jmp
mov
test
jne
cmp
jne
push
mov
call
call
jmp
mov
test
jne
mov
push
push
push
call
test
jne
cmp
jne
mov
jmp
mov
and
cmp
je
mov
mov
xor
cmp
je
cmp
jne
inc
lea
inc
test
mov
je
mov
mov
cmp
je
cmp
ja
cmp
je
push
call
pop
cmp
je
push
call
pop
inc
mov
cmp
jb
xor
xor
cmp
jne
mov
add
cmp
jae
test
lea
je
cmp
je
inc
add
jmp
lea
push
push
push
call
push
push
call
push
lea
push
call
add
jmp
push
call
cmp
je
push
call
pop
cmp
je
push
call
pop
jmp
cmp
je
push
call
pop
cmp
je
push
call
pop
lea
push
push
push
call
push
push
jmp
cmp
lea
push
push
jne
push
call
push
lea
push
call
add
jmp
push
push
call
push
push
call
push
lea
push
call
add
push
call
cmp
je
push
call
pop
cmp
je
push
call
pop
jmp
push
call
test
lea
push
je
push
push
call
push
lea
push
call
add
jmp
push
call
push
lea
push
call
add
push
call
push
call
lea
push
call
jmp
xor
cmp
setne
jmp
push
call
call
xor
mov
pop
pop
pop
call
leave
ret
sub
add
or
add
rol
add
rol
add
rol
add
rol
add
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
call
pop
ret
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
and
je
and
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
and
je
and
mov
jmp
ret
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
(bad)
(bad)
(bad)
call
aad
add
add
add
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
fild
add
add
add
and
add
add
add
push
fild
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
aad
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
xchg
sbb
add
add
add
lods
fild
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
fild
add
add
add
(bad)
add
add
add
cld
fild
add
add
add
add
add
(bad)
(bad)
call
(bad)
add
and
add
sub
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
push
fadd
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
add
add
add
inc
(bad)
add
add
add
dec
(bad)
add
add
add
push
(bad)
add
(bad)
(bad)
(bad)
inc
add
add
xor
add
add
add
add
add
add
add
fadd
add
add
add
mov
add
add
fadd
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
js
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
(bad)
(bad)
(bad)
dec
(bad)
add
and
add
jl
add
(bad)
(bad)
(bad)
jmp
(bad)
add
cmp
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
fld
add
add
add
add
add
(bad)
(bad)
(bad)
std
(bad)
add
scas
cmp
add
add
add
add
add
add
add
add
add
fiadd
add
add
add
clc
fld
add
add
add
fiadd
add
add
add
add
add
(bad)
(bad)
call
add
add
add
sbb
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
add
add
or
add
and
add
movs
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
push
fiadd
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
xlat
add
add
add
push
xlat
add
add
add
pop
xlat
add
add
add
arpl
add
add
add
add
add
add
xlat
add
add
xlat
add
pop
add
add
add
add
xlat
add
add
add
add
add
or
add
and
add
mov
(bad)
dec
add
test
add
add
add
add
add
add
add
add
fild
add
add
add
rcr
add
add
add
fild
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
(bad)
(bad)
dec
xlat
add
add
add
rcl
add
add
add
(bad)
add
add
add
loope
add
add
add
add
add
add
add
jmp
add
add
xlat
add
add
add
dec
inc
add
add
add
push
add
add
add
add
add
add
loopne
add
add
add
fcomp
add
add
add
sub
add
(bad)
(bad)
(bad)
inc
add
add
add
add
fadd
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
jo
add
and
add
pop
loopne
add
add
add
add
add
add
add
(bad)
(bad)
call
fadd
add
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
mov
add
add
add
loopne
add
(bad)
(bad)
(bad)
(bad)
fadd
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
loope
add
add
add
adc
add
add
add
inc
loope
add
add
add
add
add
(bad)
(bad)
call
add
add
add
fadd
add
add
add
jo
add
(bad)
(bad)
(bad)
(bad)
jl
add
add
add
test
add
add
add
mov
add
add
add
xchg
fadd
add
add
add
pushf
loope
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
pop
add
or
add
and
add
aam
(bad)
call
pop
add
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
add
fsub
add
add
add
xor
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
test
add
and
add
je
add
add
add
xchg
loop
add
add
add
add
add
(bad)
(bad)
call
fadd
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
fadd
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
jecxz
add
add
add
call
add
add
jecxz
add
add
add
add
add
(bad)
(bad)
dec
fld
add
add
add
fld
add
add
add
inc
jecxz
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
xor
add
and
add
ins
jecxz
add
add
add
(bad)
(bad)
jmp
add
add
add
imul
add
jno
add
add
add
jns
add
add
add
add
add
add
add
sbb
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
add
leave
fld
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
in
add
add
add
cwde
jecxz
add
add
add
in
add
add
add
add
add
(bad)
(bad)
jmp
fld
add
add
add
imul
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
in
add
add
add
pop
in
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
fld
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
in
add
add
add
in
add
add
add
or
add
(bad)
(bad)
(bad)
dec
fiadd
add
add
add
add
add
add
add
fiadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
ins
in
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pushf
in
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
add
add
(bad)
(bad)
call
add
add
add
arpl
add
add
add
imul
add
add
add
add
add
add
jnp
add
or
add
and
add
pushf
(bad)
(bad)
jmp
outs
add
add
add
add
add
add
add
add
add
and
add
in
add
add
add
sub
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
and
add
pop
out
add
add
add
add
add
add
(bad)
(bad)
(bad)
push
add
add
add
(bad)
fiadd
add
add
add
fiadd
add
add
add
fiadd
add
add
call
add
add
mov
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
out
add
add
add
or
add
add
add
sub
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
fild
add
add
add
add
add
add
add
add
loope
add
add
add
add
add
and
add
add
add
add
add
add
add
add
nop
out
add
add
add
pop
out
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
call
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
xor
add
fsubr
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
lods
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
cmp
add
and
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
lock
add
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
repz
or
add
pusha
jmp
(bad)
(bad)
(bad)
jmp
repz
xor
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
mov
add
aam
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
xor
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
add
add
add
pop
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
add
add
add
dec
out
add
xor
add
sbb
add
or
add
repnz
add
in
add
shr
add
add
add
call
add
add
add
xor
add
icebp
add
adc
add
div
add
(bad)
add
shl
add
lock
xchg
test
add
add
push
lock
lock
xor
add
and
add
adc
add
add
add
hlt
out
add
fsubr
add
enter
mov
test
add
test
add
test
add
clc
add
sbb
add
mov
add
scas
out
add
mov
out
add
fsubr
add
in
add
imul
add
add
add
adc
add
cs
add
dec
out
add
pop
out
add
push
out
add
xchg
out
add
movs
out
add
add
add
adc
add
sub
add
(bad)
repnz
add
add
mov
add
(bad)
test
add
add
or
add
or
add
push
add
add
add
or
add
aam
add
add
add
xor
add
icebp
add
mov
add
ret
add
icebp
add
out
icebp
add
cld
icebp
add
adc
add
and
add
xor
add
dec
repnz
pop
repnz
je
add
mov
add
movs
repnz
mov
repnz
(bad)
repnz
in
add
add
add
xor
add
outs
add
xor
xor
add
add
sbb
add
div
add
fdiv
add
mov
cmc
add
xor
add
add
inc
cmc
add
test
aam
add
mov
add
xchg
hlt
add
push
hlt
add
xor
add
adc
add
(bad)
repz
push
test
outs
test
mov
add
repnz
add
push
cmc
add
add
add
in
add
out
in
add
imul
add
add
add
push
in
add
and
add
ss
add
inc
in
add
push
in
add
fs
add
jbe
add
xchg
in
add
add
add
scas
in
add
jb
add
push
in
add
dec
in
add
inc
in
add
cmp
add
xor
add
mov
in
add
sbb
add
(bad)
in
add
into
in
add
(bad)
in
add
scas
in
add
movs
in
add
call
add
test
add
add
test
add
add
add
pusha
test
add
in
add
add
add
inc
icebp
add
pusha
icebp
add
add
add
cwde
repz
pop
repz
dec
repz
stos
repz
ins
repz
xor
add
add
add
pop
pop
inc
js
inc
jb
ins
gs
popa
outs
fs
gs
adc
aas
aas
xor
inc
pop
push
inc
pop
inc
pop
add
aas
add
outs
bound
add
add
xchg
arpl
ins
outs
arpl
add
add
arpl
jne
add
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
sub
pop
ja
jae
arpl
add
sub
ja
jae
jo
add
sub
ins
outs
add
add
jae
outs
imul
jae
pop
ja
outs
imul
ja
jae
push
add
jb
outs
outs
add
cmp
ja
jae
outs
jne
add
pop
inc
js
push
push
js
gs
imul
pop
arpl
js
je
test
gs
je
dec
add
arpl
inc
imul
pop
arpl
imul
imul
ja
outs
imul
add
ja
gs
popa
imul
add
add
outs
imul
add
jae
je
jae
jb
popa
je
gs
add
mov
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
ins
outs
fs
test
pop
pop
jo
pop
ins
outs
fs
cwde
add
jae
je
popa
jo
pop
je
jo
add
in
add
js
gs
pop
push
gs
add
ins
jae
arpl
cs
ins
add
adc
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
(bad)
add
outs
outs
je
outs
ins
data16
add
aas
je
jb
imul
pop
inc
pop
pop
pop
add
add
addr16
jne
jb
push
popa
ins
jne
inc
js
add
retf
gs
ins
outs
jae
dec
gs
int3
add
addr16
outs
outs
outs
arpl
imul
dec
add
imul
arpl
jne
je
imul
outs
jae
push
gs
imul
ins
add
rol
inc
outs
jne
push
gs
imul
je
jae
js
add
push
inc
dec
popa
outs
popa
addr16
add
sbb
inc
fs
jae
push
outs
imul
jb
jbe
ins
gs
dec
add
imul
jb
jbe
ins
gs
popa
ins
jne
push
add
outs
push
jb
arpl
jae
outs
imul
add
push
inc
push
dec
xor
cs
ins
add
push
add
je
popa
jae
inc
jb
outs
jb
add
add
popa
jo
jb
add
lar
popa
jo
gs
ins
ins
outs
arpl
add
jo
ins
ins
outs
arpl
pushf
add
je
jb
arpl
jae
gs
jo
add
jb
outs
push
add
mov
push
jb
je
inc
outs
outs
jae
ins
gs
add
add
je
outs
outs
jae
ins
gs
jne
jae
jb
outs
jae
je
outs
outs
add
xor
inc
gs
outs
outs
jae
ins
gs
arpl
outs
inc
jne
data16
outs
outs
add
push
dec
popa
jae
inc
jb
outs
jb
add
jb
jo
outs
push
add
add
je
jne
jb
outs
je
push
dec
add
sbb
dec
outs
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
outs
jae
dec
popa
outs
fs
add
inc
gs
js
je
outs
fs
jb
arpl
jae
add
dec
jo
outs
push
jb
arpl
jae
dec
add
ins
imul
outs
arpl
jae
add
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
dec
outs
arpl
inc
ins
ins
outs
arpl
add
add
jb
popa
je
gs
popa
addr16
add
test
jb
popa
je
add
mov
inc
gs
je
dec
popa
outs
fs
add
lock
gs
imul
cwde
add
je
jb
arpl
fs
jae
add
inc
add
fs
imul
add
cmp
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
add
je
jne
jb
outs
je
jb
arpl
jae
mov
ins
jae
jb
jo
push
add
xchg
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
aam
inc
gs
imul
je
add
add
je
jns
je
ins
push
imul
ins
gs
imul
outs
push
gs
js
gs
imul
gs
add
add
je
outs
push
gs
js
gs
imul
gs
dec
add
popa
ins
inc
jb
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
xor
push
je
push
imul
popa
jo
gs
imul
fs
add
dec
popa
jb
gs
outs
je
addr16
outs
inc
push
je
ins
ins
cs
ins
add
add
outs
fs
imul
push
add
inc
gs
imul
js
push
add
push
inc
gs
imul
add
je
imul
outs
addr16
add
jnp
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
inc
add
outs
jae
inc
gs
je
jo
add
add
jne
push
imul
jns
push
gs
push
inc
gs
je
jo
add
add
outs
inc
gs
je
jo
add
popa
add
je
push
inc
gs
je
jo
add
inc
ins
outs
jae
push
imul
popa
je
outs
outs
add
iret
add
jne
inc
gs
je
jo
push
add
push
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
add
outs
push
imul
popa
je
outs
outs
push
add
dec
add
je
jb
arpl
jae
imul
popa
je
outs
outs
add
add
jne
push
imul
popa
je
outs
outs
jae
add
add
jae
dec
gs
popa
addr16
add
fld
ja
jo
imul
add
popa
jb
jo
gs
add
leave
add
fs
je
imul
inc
push
xor
cs
ins
add
sub
je
gs
popa
jae
inc
jb
outs
jb
add
je
popa
outs
arpl
inc
outs
outs
outs
arpl
outs
xor
add
add
gs
fs
outs
outs
outs
arpl
outs
xor
dec
push
push
cs
ins
add
outs
push
popa
jae
dec
gs
inc
jb
add
inc
outs
push
popa
jae
dec
gs
inc
ins
ins
outs
arpl
add
add
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
add
inc
outs
dec
outs
imul
push
arpl
imul
outs
dec
outs
imul
inc
js
add
inc
outs
push
outs
imul
imul
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
sbb
inc
gs
jae
jb
popa
ins
gs
js
add
push
arpl
xor
cs
ins
add
xor
xor
fs
ins
add
cmp
aas
aas
xor
push
je
imul
inc
inc
pop
pop
add
inc
dec
push
je
imul
inc
inc
inc
push
xor
inc
push
xor
pop
add
inc
aas
inc
outs
jb
popa
je
inc
dec
push
je
imul
inc
pop
push
inc
inc
pop
pop
add
aas
aas
xor
push
je
imul
inc
inc
pop
pop
add
add
inc
gs
popa
je
inc
inc
dec
push
je
imul
inc
push
inc
push
inc
dec
push
je
imul
inc
inc
pop
pop
add
add
inc
outs
ins
jo
jb
inc
inc
dec
push
je
imul
inc
dec
push
inc
inc
inc
pop
add
dec
add
aas
xor
dec
push
je
imul
inc
inc
inc
push
xor
inc
push
xor
pop
add
push
add
aas
xor
dec
push
je
imul
inc
inc
inc
push
xor
inc
inc
inc
pop
add
fadd
aas
push
gs
gs
jae
inc
jne
data16
inc
dec
push
je
imul
inc
pop
dec
inc
pop
add
sbb
aas
inc
gs
jne
data16
gs
outs
addr16
inc
inc
dec
push
je
imul
inc
push
inc
inc
dec
inc
pop
add
add
inc
gs
jne
data16
inc
dec
push
je
imul
inc
push
inc
inc
dec
inc
pop
add
test
data16
inc
dec
push
je
imul
inc
aas
inc
push
xor
inc
pop
add
aas
aas
xor
dec
push
je
imul
inc
inc
inc
push
xor
inc
inc
inc
pop
add
jle
aas
aas
dec
inc
pop
inc
aas
inc
push
inc
dec
push
je
imul
push
xor
inc
inc
inc
pop
add
fs
inc
dec
push
je
imul
inc
aas
inc
push
xor
inc
pop
add
clc
add
inc
imul
je
imul
inc
dec
inc
inc
pop
add
add
inc
imul
inc
inc
dec
push
je
imul
inc
dec
push
inc
inc
inc
pop
add
mov
aas
aas
pop
inc
dec
push
je
imul
inc
inc
inc
push
xor
inc
inc
inc
pop
add
or
aas
aas
xor
push
je
imul
inc
inc
push
inc
inc
inc
pop
add
mov
fs
inc
dec
push
je
imul
inc
aas
inc
push
xor
dec
inc
pop
add
add
inc
imul
je
imul
inc
dec
push
inc
inc
inc
pop
add
add
inc
ins
jo
jns
inc
dec
push
je
imul
inc
pop
pop
pop
add
popa
ins
gs
cs
ins
add
imul
jo
inc
jne
data16
jb
add
aam
dec
gs
gs
gs
gs
outs
outs
add
dec
inc
push
inc
push
dec
xor
cs
ins
add
add
inc
outs
jne
gs
je
dec
outs
popa
fs
outs
fs
gs
add
dec
inc
dec
push
cs
ins
add
je
add
aaa
add
jae
outs
ins
add
xor
ja
jae
je
add
das
add
jae
arpl
add
jae
imul
jb
popa
ins
ins
outs
arpl
xchg
add
ins
jne
push
data16
imul
jae
jb
outs
imul
ins
add
jb
data16
gs
imul
push
add
push
push
gs
gs
outs
outs
imul
imul
add
fs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outs
push
imul
movs
add
popa
fs
outs
outs
jae
ins
gs
add
cmps
add
popa
fs
imul
gs
outs
outs
jae
ins
gs
outs
fs
sub
inc
gs
outs
outs
jae
ins
gs
outs
fs
lods
add
jb
ins
jo
add
scas
add
jb
ins
jo
push
add
add
je
outs
ins
jo
je
jb
popa
ins
gs
js
add
sbb
add
and
add
add
add
cs
inc
push
pop
arpl
pop
gs
outs
jb
inc
add
add
mov
mov
add
add
add
add
add
add
add
add
add
adc
add
cwde
add
add
or
add
add
add
add
or
add
loopne
add
clc
add
and
add
adc
add
sub
add
inc
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
cmps
add
add
inc
add
cmps
add
add
add
outs
add
add
inc
add
push
add
add
add
add
inc
dec
add
xor
add
js
add
fadd
add
js
add
xor
add
mov
add
scas
pop
add
pusha
cmp
add
add
push
push
add
sbb
add
pop
add
add
add
and
add
mov
add
nop
push
add
loopne
add
jl
add
jl
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
fadd
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outs
add
jo
popa
add
jns
dec
add
ins
add
add
add
dec
add
arpl
jb
outs
add
outs
add
je
and
inc
add
jb
jo
outs
add
popa
add
add
outs
add
add
or
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
ins
add
add
jb
outs
add
add
jae
add
add
bound
and
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
je
add
outs
add
ins
add
popa
add
add
add
add
imul
add
ins
add
add
js
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outs
add
outs
add
je
and
inc
add
jb
jo
outs
add
popa
add
add
outs
add
add
add
ins
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
jae
imul
add
ins
add
add
js
add
add
add
and
add
outs
add
add
je
dec
add
ins
add
add
add
dec
add
arpl
jb
outs
add
outs
add
je
scas
add
add
imul
outs
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
add
add
add
add
add
add
and
jo
popa
add
jae
ja
outs
add
add
add
outs
add
and
and
add
add
popa
add
jae
imul
and
je
push
add
jae
add
and
arpl
jb
add
add
je
imul
and
outs
add
and
ins
add
arpl
popa
add
add
outs
add
outs
add
arpl
je
imul
add
add
add
add
and
push
add
jb
add
je
and
jae
jns
jae
je
add
and
ins
add
jae
je
and
bound
add
add
jne
outs
add
imul
and
push
add
outs
add
add
jae
and
pop
add
and
outs
add
and
popa
add
outs
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
add
add
popa
add
add
and
imul
outs
add
je
and
popa
add
add
ja
add
add
outs
add
and
daa
add
add
add
jo
je
imul
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
jo
add
imul
and
jbe
popa
add
add
add
jne
ins
add
jb
imul
jbe
popa
add
add
and
data16
jb
and
daa
add
add
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
jo
add
imul
jns
and
jbe
popa
add
add
add
ins
add
popa
add
add
add
add
outs
add
outs
add
add
popa
add
add
and
data16
jb
and
daa
add
add
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
popa
add
add
je
outs
add
jns
and
outs
add
je
imul
and
daa
add
add
add
add
jae
and
ins
add
jae
jae
imul
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
add
add
jo
je
imul
and
imul
outs
add
je
and
popa
add
add
ja
add
add
outs
add
add
add
add
outs
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
add
popa
add
add
add
jb
add
ins
add
outs
add
add
jo
je
imul
and
sub
add
add
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
popa
add
ins
add
add
jb
add
ins
add
outs
add
add
jae
and
ins
add
jae
jae
imul
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
outs
add
je
push
add
and
je
push
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
push
add
add
add
outs
add
add
js
arpl
add
add
add
add
add
push
add
arpl
je
add
jae
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
popa
add
ins
add
add
jo
je
imul
and
imul
outs
add
je
and
popa
add
add
ja
add
add
outs
add
add
add
add
outs
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
outs
add
popa
add
add
add
jns
outs
add
add
add
add
popa
add
add
and
add
jo
add
je
add
add
outs
add
and
daa
add
add
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
add
add
popa
add
add
and
imul
outs
add
je
and
popa
add
add
ja
add
add
jae
and
add
data16
jne
ins
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
push
add
dec
add
cmp
or
push
add
push
add
dec
add
inc
add
add
add
push
add
inc
add
push
add
cmp
add
add
dec
add
add
add
das
add
add
xor
or
push
add
push
add
dec
add
dec
add
add
das
add
and
jae
jns
jae
je
add
and
pop
add
add
and
jne
jae
add
outs
add
ins
add
and
pop
add
add
and
pop
add
popa
add
jae
ja
outs
add
add
pop
add
pop
add
add
and
and
and
and
and
and
and
and
and
jnp
and
pop
add
add
dec
add
add
imul
add
pop
add
add
das
add
dec
add
add
jb
outs
add
add
jae
imul
jl
and
das
add
dec
add
add
ins
add
add
outs
add
ins
add
pop
add
add
and
pop
add
add
pop
add
add
das
add
add
add
add
add
add
arpl
jb
imul
imul
cmp
or
inc
add
add
add
add
add
add
jae
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
ins
add
add
popa
add
and
bound
add
add
jae
add
add
add
add
outs
add
add
outs
add
and
outs
add
and
ins
add
jb
add
add
jb
outs
add
add
jae
add
add
add
add
add
add
jb
outs
add
add
jae
add
and
arpl
popa
add
and
bound
add
add
imul
add
add
jns
and
je
push
add
jb
outs
add
add
jae
and
imul
outs
add
and
imul
add
and
outs
add
ins
add
add
add
add
add
add
add
add
popa
add
popa
add
add
add
and
dec
add
jae
je
cmp
or
inc
add
add
add
add
add
add
and
and
and
and
jae
jns
jae
je
add
and
and
and
and
and
and
and
and
and
and
and
push
add
add
imul
add
and
je
push
add
add
outs
add
add
add
jns
jae
je
add
and
je
outs
add
add
outs
add
outs
add
arpl
je
and
je
outs
add
add
add
add
and
and
and
and
das
add
and
and
and
and
pop
add
add
popa
add
outs
add
add
jae
add
and
and
and
and
push
add
add
imul
add
and
je
push
add
jae
add
and
arpl
outs
add
je
add
je
and
jne
outs
add
add
and
ja
push
add
or
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
je
push
add
outs
add
ins
add
outs
add
add
push
add
add
add
js
add
jne
je
add
add
add
add
and
and
and
and
das
add
and
and
and
and
pop
add
popa
add
jae
ja
outs
add
add
and
and
and
and
and
and
and
push
add
add
imul
add
and
je
push
add
popa
add
jae
ja
outs
add
add
add
outs
add
and
je
push
add
imul
outs
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jne
jae
add
and
arpl
outs
add
je
add
je
add
add
jb
outs
add
jo
je
jae
and
data16
jb
and
imul
jne
je
and
imul
outs
add
imul
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
add
imul
add
and
je
outs
add
add
outs
add
arpl
add
jne
ins
add
add
add
add
ins
add
outs
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
outs
add
add
jae
sub
add
sub
add
add
add
and
and
and
and
das
add
dec
add
add
add
add
imul
add
and
and
and
and
and
and
and
and
and
and
and
inc
add
jae
jo
ins
add
jns
jae
and
popa
add
add
add
add
data16
add
add
imul
add
add
add
je
and
ins
add
je
arpl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
outs
add
add
jb
imul
jb
imul
jae
jo
add
imul
add
add
jns
and
je
push
add
imul
add
add
add
add
and
and
and
and
das
add
dec
add
add
add
jb
outs
add
add
jae
and
imul
and
and
and
and
and
and
push
add
add
imul
add
and
je
push
add
dec
add
add
data16
add
add
and
jo
jb
outs
add
add
jae
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
and
je
outs
add
add
add
add
add
ins
add
outs
add
je
add
add
add
add
and
and
and
and
das
add
dec
add
add
add
add
ins
add
add
and
outs
add
ins
add
and
and
and
and
and
and
and
push
add
add
imul
add
and
je
push
add
ins
add
add
and
outs
add
ins
add
and
outs
add
and
je
push
add
jb
outs
add
add
jae
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
and
push
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
add
imul
arpl
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
and
bound
add
add
jae
add
add
add
add
jo
add
imul
and
popa
add
add
add
ins
add
add
and
outs
add
ins
add
jae
add
add
add
and
and
and
and
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
cmp
and
je
add
ins
add
outs
add
je
add
and
je
push
add
jo
add
imul
add
add
jb
outs
add
add
jae
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
and
arpl
push
add
add
jb
outs
add
add
jae
add
and
ja
push
add
and
ja
add
add
add
je
popa
add
je
add
add
jns
and
imul
or
or
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
ins
add
jns
jae
and
je
push
add
add
add
add
add
jae
popa
add
add
add
add
add
add
add
imul
add
jae
cmp
or
cmp
and
and
and
and
inc
add
ins
add
add
and
dec
add
ins
add
and
and
and
push
add
ins
add
add
add
jo
add
popa
add
add
jae
and
and
and
and
and
and
and
and
and
and
and
push
add
ins
add
add
add
popa
add
add
sub
jae
sub
or
cmp
and
and
and
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
push
add
add
add
and
and
and
and
and
and
and
and
add
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
dec
add
dec
add
inc
add
add
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
add
add
add
add
add
add
dec
add
inc
add
dec
add
dec
add
and
and
and
and
and
add
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
popa
add
add
add
popa
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
jno
sub
and
outs
add
sub
and
add
sub
and
ins
add
add
add
add
and
ins
add
and
and
and
and
push
add
inc
add
add
popa
add
add
or
cmp
and
and
and
and
push
add
push
add
dec
add
dec
add
add
add
add
add
add
add
add
jno
sub
and
outs
add
sub
and
add
sub
and
ins
add
add
add
add
and
ins
add
and
and
and
and
push
add
jae
jae
imul
and
outs
add
ins
add
add
add
add
and
and
and
and
inc
add
push
add
add
inc
add
add
add
add
add
add
add
add
jno
sub
and
outs
add
sub
and
add
sub
and
ins
add
add
add
add
and
ins
add
and
and
and
and
inc
add
push
add
add
add
add
add
outs
add
add
add
and
data16
jb
ins
add
je
or
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
outs
add
and
push
add
ins
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outs
add
jb
jae
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
outs
add
je
add
sub
and
jae
jae
and
sub
add
arpl
outs
add
add
or
aas
add
add
add
add
add
inc
add
push
add
inc
add
inc
add
add
add
add
add
add
add
jno
sub
and
outs
add
sub
and
add
sub
and
ins
add
add
add
add
and
ins
add
and
and
and
and
dec
add
ins
add
jb
jns
and
jne
jae
popa
add
add
add
outs
add
add
inc
add
add
and
and
and
and
push
add
inc
add
dec
add
dec
add
and
and
and
and
and
and
add
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
add
and
outs
add
ins
add
and
imul
pop
add
add
popa
add
outs
add
add
jae
add
or
add
add
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
data16
jb
ins
add
je
or
xor
add
add
add
dec
add
add
add
and
and
and
and
and
and
and
add
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
popa
add
add
add
add
add
add
add
add
inc
add
push
add
inc
add
push
add
add
add
add
add
add
add
jno
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
jb
jbe
imul
and
outs
add
ins
add
or
cmp
and
and
and
and
push
add
dec
add
add
push
add
push
add
add
add
add
add
jno
sub
and
outs
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
outs
add
add
and
je
imul
add
add
add
add
dec
add
push
add
cmp
and
push
add
ins
add
add
jb
add
add
add
add
add
add
outs
add
and
je
push
add
add
dec
add
add
ja
imul
push
add
and
popa
add
arpl
add
je
add
add
outs
add
add
add
imul
and
data16
ins
add
add
jae
add
add
add
dec
add
push
add
cmp
and
push
add
jb
ins
add
outs
add
je
imul
and
outs
add
and
jb
add
outs
add
add
add
jb
outs
add
add
jae
add
and
ja
imul
and
popa
add
add
jns
jae
and
bound
add
add
add
add
add
outs
add
arpl
add
jne
ins
add
add
add
add
add
add
add
add
add
add
jb
jb
add
jo
add
je
imul
and
outs
add
and
ja
push
add
add
and
das
add
and
outs
add
je
imul
and
imul
jae
jo
add
imul
add
add
jb
and
outs
add
je
add
add
add
add
js
popa
add
jo
ins
add
jae
cmp
or
sub
add
add
add
add
dec
add
dec
add
add
add
add
and
jae
jns
jae
je
add
and
das
add
and
das
add
dec
add
add
outs
add
add
popa
add
add
js
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
xor
and
das
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
and
das
add
dec
add
add
outs
add
add
popa
add
add
js
add
add
add
dec
add
add
jae
jo
popa
add
outs
add
add
js
add
add
and
and
and
and
push
add
push
add
dec
add
dec
add
add
add
and
das
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
inc
add
push
add
add
add
and
outs
add
and
jne
outs
add
add
add
sub
and
or
inc
add
add
add
add
add
add
dec
add
dec
add
add
add
add
and
das
add
dec
add
add
add
push
add
push
add
inc
add
inc
add
add
jno
and
dec
add
add
push
add
add
push
add
push
add
pop
add
pop
add
push
add
dec
add
add
add
add
dec
add
add
outs
add
add
popa
add
add
js
add
add
and
and
and
and
push
add
push
add
dec
add
dec
add
add
add
and
jae
jns
jae
je
add
and
das
add
and
add
ins
add
imul
jne
jae
add
outs
add
ins
add
and
das
add
dec
add
add
add
push
add
push
add
inc
add
inc
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
and
and
and
and
push
add
push
add
dec
add
dec
add
add
add
and
jae
jns
jae
je
add
and
das
add
and
jne
jae
add
outs
add
ins
add
and
das
add
and
jo
popa
add
jae
ja
outs
add
add
add
add
dec
add
add
add
dec
add
inc
add
dec
add
dec
add
and
add
and
outs
add
je
add
add
add
add
add
je
popa
add
add
or
imul
add
outs
add
ins
add
add
jo
imul
jae
add
jae
imul
pop
add
jo
jne
je
imul
or
ins
add
ins
add
jae
popa
add
add
add
jae
add
outs
add
ins
add
or
jae
add
jbe
imul
jae
or
ja
imul
outs
add
je
imul
add
add
add
outs
add
add
add
push
add
jne
outs
add
imul
jl
outs
add
je
and
jb
add
jo
outs
add
add
outs
add
add
or
and
add
and
jl
and
outs
add
and
sbb
add
and
jl
and
outs
add
and
jl
and
ins
add
add
add
je
and
jl
and
ins
add
and
jl
and
add
and
add
pop
add
jne
outs
add
imul
push
add
outs
add
add
add
jo
outs
add
add
outs
add
or
dec
add
add
push
add
add
push
add
push
add
push
add
pop
add
push
add
dec
add
add
add
push
add
inc
add
push
add
cmp
and
push
add
add
add
jb
outs
add
add
jae
and
ja
imul
and
push
add
inc
add
add
add
popa
add
and
bound
add
outs
add
add
add
ins
add
outs
add
je
add
add
add
push
add
inc
add
inc
add
push
add
add
add
add
and
jo
jb
outs
add
add
jae
and
ja
imul
and
push
add
inc
add
add
add
popa
add
and
bound
add
outs
add
add
jne
add
add
add
outs
add
and
je
add
ins
add
outs
add
je
imul
add
add
add
push
add
inc
add
push
add
cmp
and
push
add
add
add
jb
outs
add
add
jae
and
and
and
add
add
imul
and
push
add
inc
add
add
add
popa
add
and
bound
add
outs
add
add
add
ins
add
outs
add
je
add
add
add
push
add
inc
add
inc
add
push
add
add
add
add
and
jo
jb
outs
add
add
jae
and
and
and
add
add
imul
and
push
add
inc
add
add
add
popa
add
and
bound
add
outs
add
add
jne
add
add
add
outs
add
and
je
add
ins
add
outs
add
je
imul
add
add
inc
add
push
add
push
add
add
add
add
and
jo
jb
outs
add
add
jae
and
ja
imul
and
push
add
inc
add
add
add
outs
add
ins
add
add
outs
add
add
add
add
add
ins
add
outs
add
je
add
add
add
add
jae
outs
add
cmp
and
and
add
push
add
dec
add
cmp
and
push
add
add
add
jb
outs
add
add
jae
and
and
and
add
add
imul
and
push
add
inc
add
add
add
outs
add
ins
add
add
outs
add
add
add
add
add
ins
add
outs
add
je
add
add
add
add
jae
outs
add
cmp
and
and
add
push
add
dec
add
cmp
and
push
add
add
add
jb
outs
add
add
jae
and
and
and
add
add
outs
add
add
outs
add
outs
add
add
add
dec
add
inc
add
cmp
and
dec
add
and
je
popa
add
imul
add
add
jne
outs
add
imul
and
ja
imul
and
je
push
add
jo
add
imul
add
add
jb
imul
jb
imul
or
cmp
dec
add
add
popa
add
add
outs
add
add
jae
and
outs
add
je
and
jbe
popa
add
add
add
outs
add
and
je
push
add
add
jb
outs
add
add
jae
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
push
add
imul
imul
arpl
jb
imul
arpl
popa
add
add
jns
jae
je
add
and
jo
jb
outs
add
add
jae
add
add
je
imul
je
jns
and
arpl
popa
add
outs
add
je
and
add
add
add
add
jae
and
jo
jb
outs
add
add
jae
add
add
push
add
imul
jo
jb
outs
add
add
jae
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
ins
add
outs
add
je
add
add
outs
add
arpl
add
jne
ins
add
add
add
add
add
imul
and
das
add
and
outs
add
je
imul
and
sub
add
add
add
add
add
add
and
jo
jb
outs
add
add
jae
and
arpl
popa
add
outs
add
je
and
je
add
ins
add
outs
add
je
add
add
je
jae
add
add
add
add
add
add
jb
jb
outs
add
and
inc
add
add
cmp
and
xor
js
and
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
and
arpl
popa
add
and
bound
add
add
jo
add
imul
add
add
outs
add
add
add
push
add
add
add
and
imul
jae
jo
add
imul
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
and
arpl
popa
add
and
bound
add
add
jo
add
imul
add
add
outs
add
add
add
push
add
add
add
and
imul
jae
jo
add
imul
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
outs
add
popa
add
add
add
jns
outs
add
add
add
add
jae
add
and
outs
add
ins
add
and
jae
push
add
add
add
outs
add
add
add
add
ins
add
je
jns
add
add
add
outs
add
popa
add
add
add
jns
outs
add
add
add
add
jns
jae
je
add
and
outs
add
ins
add
and
jae
push
add
add
add
outs
add
add
add
add
ins
add
je
jns
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
add
add
add
jae
and
popa
add
arpl
add
je
add
add
outs
add
add
add
ins
add
outs
add
and
ja
imul
and
je
push
add
imul
add
jae
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
imul
add
and
das
add
dec
add
add
jb
and
das
add
dec
add
add
jb
add
add
ins
add
add
add
add
jne
je
and
outs
add
je
and
bound
outs
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
add
je
push
add
add
add
dec
add
add
outs
add
and
das
add
dec
add
add
outs
add
and
das
add
dec
add
add
jb
add
add
jo
add
imul
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
dec
add
jbe
popa
add
add
add
jns
outs
add
add
add
add
jo
add
imul
and
jbe
popa
add
add
add
jne
ins
add
jb
imul
jbe
popa
add
add
and
data16
jb
and
daa
add
add
dec
add
add
add
jo
je
imul
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
add
outs
add
popa
add
add
add
jns
outs
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
outs
add
and
jne
jae
popa
add
add
add
add
push
add
add
add
jo
add
imul
add
add
outs
add
ins
add
outs
add
add
popa
add
and
bound
add
add
js
add
jne
je
add
add
jns
and
add
sub
add
add
js
add
jne
je
popa
add
ins
add
and
outs
add
ins
add
add
add
push
add
inc
add
inc
add
push
add
add
add
add
and
jo
jb
outs
add
add
jae
and
ja
imul
and
push
add
inc
add
add
add
push
add
add
data16
add
dec
add
add
add
popa
add
and
bound
add
outs
add
add
add
ins
add
outs
add
je
add
add
add
inc
add
push
add
push
add
add
add
add
and
jo
jb
outs
add
add
jae
and
ja
imul
and
push
add
inc
add
add
add
push
add
add
data16
add
dec
add
add
add
outs
add
ins
add
add
outs
add
add
add
add
add
ins
add
outs
add
je
add
add
add
add
jae
outs
add
cmp
and
and
add
outs
add
and
outs
add
and
ins
add
jb
add
add
push
add
add
jb
outs
add
add
jae
add
and
outs
add
and
je
push
add
add
jb
outs
add
add
jae
and
ja
add
add
add
je
imul
and
jb
jne
outs
add
imul
add
add
dec
add
popa
add
add
add
add
add
and
ins
add
add
ins
add
jae
and
imul
outs
add
ins
add
je
imul
add
add
ins
add
popa
add
add
add
popa
add
je
add
add
add
jae
and
ins
add
jns
and
je
popa
add
add
add
add
and
ins
add
outs
add
je
add
and
add
add
add
dec
add
popa
add
add
add
add
add
and
jae
add
jbe
imul
jae
and
imul
outs
add
ins
add
je
imul
and
add
add
add
add
add
add
outs
add
and
je
push
add
add
imul
add
add
outs
add
outs
add
ins
add
je
imul
and
add
add
add
add
add
add
outs
add
and
je
push
add
outs
add
add
add
and
imul
outs
add
ins
add
je
imul
and
sub
and
push
add
inc
add
add
add
and
sub
and
add
add
add
add
jb
add
popa
add
imul
and
je
push
add
jb
outs
add
add
jae
and
je
jb
add
and
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cmp
add
add
or
or
add
or
add
add
add
add
or
add
add
dec
sub
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
rol
push
rol
imul
inc
inc
push
cmp
xchg
retf
sub
es
ins
xor
std
add
mov
movs
fdivr
mov
nop
and
cdq
lea
dec
jb
xlat
adc
adc
jecxz
fsubrp
sti
pop
retf
pushf
cmp
out
stc
fdivp
mov
inc
cmps
ins
push
jle
mov
adc
pop
push
jb
fs
jns
mov
aas
fisttp
or
je
retf
mov
ins
push
je
fist
xor
sub
dec
mov
or
je
mov
cmc
mov
push
(bad)
cmp
(bad)
setae
mov
inc
addr16
(bad)
or
test
pop
pfrcp
or
jo
nop
and
push
inc
aaa
into
sub
and
lock
call
xchg
xchg
jmp
call
or
jl
out
ja
scas
mov
push
or
sbb
jmp
push
shl
mov
lea
push
pop
pfrcp
mov
mov
or
into
ins
xchg
int3
xor
pop
hlt
adc
push
pop
cmp
push
or
sbb
jnp
mov
and
jmp
fbld
mov
mov
(bad)
out
into
shl
push
jp
daa
push
loopne
mov
jp
jl
ja
dec
cdq
mov
cmp
lahf
jne
xchg
push
or
jno
sub
and
jle
push
(bad)
sub
into
jg
mov
push
shl
aas
sub
test
and
into
adc
push
mov
cmp
inc
inc
xchg
ins
jnp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
fld
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
push
lea
fwait
call
add
das
add
add
add
add
and
je
push
add
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
add
add
jae
add
arpl
outs
add
pop
fild
add
jb
jns
jo
je
outs
add
dec
add
bound
add
add
ins
add
arpl
je
inc
add
add
add
popa
add
add
jae
add
ins
add
add
rol
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
push
add
mov
inc
or
add
or
add
add
add
add
or
add
add
cs
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
or
add
or
aas
inc
and
add
(bad)
jns
inc
inc
push
js
in
std
pop
xchg
fs
jne
or
rcr
jae
inc
imul
rcl
push
add
inc
nop
add
adc
xor
push
setnp
adc
and
mov
dec
iret
into
ins
out
cmp
mov
xchg
inc
aad
neg
inc
or
(bad)
push
xchg
xchg
in
cdq
std
neg
(bad)
(bad)
xlat
push
iret
aas
dec
sub
sti
fsub
jns
mov
shl
jecxz
(bad)
out
out
daa
sti
arpl
xchg
aaa
pop
fistp
push
xchg
out
clc
(bad)
call
(bad)
mov
cmp
cmps
jb
jb
aaa
jnp
cmc
cmp
mov
clc
das
push
scas
dec
jg
mov
jl
jae
xor
iret
sar
stc
cdq
xchg
gs
inc
sbb
ss
lahf
cmp
out
mov
sbb
cmp
mov
mov
lahf
jns
jae
jle
mov
repz
repz
(bad)
push
scas
imul
xor
es
stc
test
cmp
xchg
push
jmp
mov
ds
inc
(bad)
jg
std
sbb
not
inc
in
pop
xlat
mov
sti
out
(bad)
(bad)
out
push
outs
aas
cmps
dec
adc
frstor
shl
jmp
jg
xchg
sub
xor
mov
mov
mov
call
repz
cmp
mov
jbe
ins
sbb
cmps
add
ret
icebp
xchg
daa
iret
jnp
pusha
adc
mov
cdq
cmp
aas
mov
iret
xor
fild
xor
pop
adc
loope
idiv
clc
add
mov
jbe
pop
dec
std
fwait
iret
cld
std
fistp
lahf
std
mov
dec
xor
clc
rol
dec
xchg
pop
sbb
push
mov
xchg
xchg
push
lahf
mov
(bad)
pop
jg
cmp
cmp
jmp
mov
(bad)
in
(bad)
cli
jg
xlat
aas
(bad)
ja
fistp
sti
pop
xlat
jo
iret
jle
out
push
jnp
sub
lock
push
test
std
mov
dec
mov
addr16
psrad
pop
push
inc
pop
add
jno
sti
mov
cmp
inc
aas
repz
jge
cs
jl
mov
cld
iret
pushf
out
movs
shl
aas
std
movs
icebp
stos
(bad)
jmp
pushf
out
fldenv
imul
lds
leave
daa
retf
(bad)
cmp
xor
sub
and
jg
ja
std
aas
(bad)
cld
scas
aad
jg
jo
aam
lods
iret
jge
scas
aas
imul
sti
and
xor
aas
out
cmps
in
cwde
push
mov
sti
mov
daa
pop
loopne
rcl
sbb
arpl
xchg
mov
shr
mov
aas
jmp
addr16
outs
(bad)
cli
scas
sbb
inc
xor
pop
jge
mov
inc
mov
es
add
sahf
pop
cmp
push
out
cmc
out
dec
lods
pushf
mov
hlt
jae
stc
fsub
in
cmp
jb
push
xchg
cmp
mov
cmp
out
and
out
retf
inc
int
xchg
out
(bad)
out
(bad)
jmp
in
mov
add
push
ins
(bad)
mov
retf
jl
push
shl
(bad)
icebp
aas
out
cmp
lahf
jmp
mov
push
call
lock
mov
or
pushf
bound
sahf
into
jecxz
repz
adc
je
outs
xor
mov
jge
push
scas
jge
sbb
sub
hlt
stc
push
in
lods
icebp
test
aaa
vpshufhw
add
pop
or
cmc
clc
cmp
adc
shl
dec
iret
push
lods
mov
arpl
push
jmp
bound
in
push
movs
mov
inc
ret
ror
pop
(bad)
(bad)
push
jno
mov
aad
mov
push
pop
dec
cli
sub
mov
sahf
ins
mov
fistp
test
mov
leave
(bad)
bound
xchg
gs
arpl
dec
ja
dec
cmp
popa
add
arpl
sar
xchg
pop
jns
push
stos
shl
add
ret
(bad)
jb
mov
pop
movs
jns
jmp
adc
stos
aas
xchg
xor
xchg
or
sahf
int
call
mov
push
push
rol
(bad)
mov
or
sub
mov
and
cdq
push
cwde
mov
jmp
xor
ficomp
mov
sub
push
retf
push
mov
xchg
mov
push
add
push
fnsave
sbb
mov
daa
(bad)
push
xchg
sub
mov
loop
call
rcr
shr
shl
jmp
popa
call
xchg
lock
push
out
stos
inc
mul
out
adc
jo
pop
xchg
stos
ffree
pop
or
es
mov
mov
fisttp
aaa
xchg
mov
add
test
push
mov
outs
xor
xlat
nop
(bad)
xor
shl
mov
xor
(bad)
xor
(bad)
in
cli
test
mov
sbb
push
or
jae
aam
adc
or
xchg
popa
jmp
xchg
jo
jecxz
outs
and
push
call
jnp
nop
scas
cmp
retf
jp
cmp
sahf
ret
sbb
fisubr
jns
gs
xchg
call
mov
outs
lahf
fstp
js
inc
lock
iret
sub
(bad)
jae
mov
addr16
pop
std
lds
test
dec
pop
ss
aam
jmp
sbb
outs
popa
pop
enter
(bad)
push
mov
sar
jae
ins
jmp
jbe
aaa
ins
inc
hlt
pop
inc
test
mov
(bad)
imul
fmul
clc
pop
pop
iret
mov
dec
inc
fld
pop
outs
or
sub
sub
dec
jp
test
retf
push
cs
cmp
adc
dec
mov
mov
leave
xchg
sbb
test
pop
mov
ins
pop
pop
imul
aad
mov
stc
popf
test
loope
mov
mov
xor
lahf
jl
cwde
xor
mov
sub
adc
(bad)
(bad)
xor
pop
jecxz
movs
sti
dec
fist
into
mov
leave
sbb
in
mov
les
es
cmp
lods
scas
int3
xor
dec
sbb
loopne
cmp
pop
mov
adc
dec
or
jne
repz
mov
outs
(bad)
data16
pop
or
pop
or
dec
aad
xchg
mov
lds
sub
mov
ins
daa
mov
in
dec
out
pop
xchg
sub
xchg
mov
jne
jo
aaa
pop
sti
leave
repz
daa
cs
cmp
push
add
je
sahf
jmp
sbb
das
push
xor
cmp
cdq
dec
cld
mov
fdivp
std
stos
xchg
in
pop
cmp
pushf
ja
daa
pop
xor
mov
lea
scas
fiadd
cwde
fcom
out
add
add
sahf
push
ja
mov
inc
cdq
mov
cmp
repnz
call
or
cmps
imul
pop
cmp
(bad)
mov
das
je
dec
pop
retf
sub
pop
(bad)
jmp
call
lods
leave
idiv
es
ret
sahf
loope
sub
test
sbb
add
sub
shr
sub
push
sti
mov
nop
jmp
push
mov
je
les
adc
mov
jno
mov
cli
cmp
in
mov
sbb
jge
mov
xchg
test
cmps
ins
mov
mov
mov
ins
lahf
pushf
pop
pop
push
(bad)
fsubr
fucom
or
mov
lahf
pop
inc
int
add
sbb
and
adc
fisubr
arpl
pop
xchg
xor
pop
and
fimul
cdq
add
arpl
aaa
in
ret
stos
sbb
fstp
jmp
add
pop
(bad)
mov
leave
xor
cld
xchg
out
sub
pop
shr
mov
int3
repnz
(bad)
lock
jle
push
adc
pop
mov
or
cmc
loope
cdq
es
mov
jle
add
scas
mov
pop
fistp
dec
aad
int3
sub
test
jp
and
call
js
(bad)
das
sbb
jae
scas
sar
pop
loop
ficomp
push
mov
pop
mov
iret
in
jnp
sub
test
jb
add
xchg
add
xchg
rcl
fs
sbb
scas
rol
push
sub
fwait
or
ret
jne
sti
dec
into
mov
push
mov
dec
push
xchg
inc
mov
inc
sbb
xchg
and
and
push
push
cmp
sub
(bad)
das
stos
stos
xchg
pop
jmp
fistp
std
out
popa
jbe
xchg
ins
push
xor
add
jae
fcomp
cmps
loop
nop
test
and
push
fs
or
lock
pop
cmc
cmp
cs
ins
cmp
cdq
retf
mov
test
jl
repz
mov
iret
movs
movs
sahf
adc
lea
cdq
out
cdq
mov
sahf
sub
ins
mov
int
dec
fucom
mov
test
jge
jbe
jecxz
cli
cmp
mov
pop
mov
sub
test
jae
ficomp
out
movs
push
dec
xchg
sahf
outs
mov
les
cmps
push
shl
xchg
iret
bswap
ror
mov
add
mov
sub
mov
pop
fiadd
out
push
cmc
data16
push
fidivr
jnp
(bad)
aad
xchg
rep
movs
retf
mov
pop
retf
mov
mov
ficomp
movs
push
xor
arpl
adc
mov
int
vpaddd
jp
pop
test
lods
jecxz
or
mov
pop
(bad)
jmp
xchg
movs
sti
stos
adc
pop
sti
(bad)
int
mov
sub
clc
add
and
lods
pop
mov
out
(bad)
add
xlat
xchg
mov
adc
or
jmp
and
ds
fwait
sub
mov
add
or
mov
inc
sbb
mov
ja
fwait
stos
xor
loopne
xor
push
or
cmp
sub
call
int3
mov
sbb
sub
mov
inc
pop
cwde
xor
add
inc
cmp
and
sbb
sub
not
cmc
mov
scas
rcl
push
xchg
inc
or
xlat
dec
fptan
call
pushf
adc
cmp
push
in
enter
es
xchg
mov
mov
shl
xchg
(bad)
mov
jg
dec
cmc
fidivr
dec
das
fisubr
mov
xlat
add
cld
test
mov
ja
and
inc
leave
jnp
mov
jno
ret
cmps
imul
(bad)
sub
inc
push
push
or
cmc
pop
mov
jl
dec
jle
fstp
push
mov
cmp
stc
mov
and
test
pusha
icebp
int3
outs
adc
jb
pop
int3
add
mov
jmp
xchg
stc
loop
je
aas
ret
add
retf
cmp
rcr
cmc
sbb
(bad)
out
or
in
lahf
jp
jns
xchg
rcr
and
int3
ret
dec
sbb
mov
add
(bad)
or
xchg
xchg
or
cmps
lods
out
cmp
ins
xor
push
repz
lock
jg
outs
mov
jnp
arpl
retf
jae
mov
fcomi
adc
cmc
fldcw
xor
xor
daa
push
mov
mov
adc
int3
adc
push
dec
je
adc
mov
cmp
pop
in
test
fstp
(bad)
fcmovnb
into
and
fwait
scas
mov
mov
test
call
sbb
scas
xor
lahf
sahf
and
shr
mov
push
jns
inc
inc
mov
push
test
daa
lods
inc
stc
(bad)
sub
xor
push
add
mov
(bad)
cs
ror
call
dec
es
mov
dec
sbb
push
mul
sbb
mov
fimul
inc
out
sti
xchg
push
lods
jecxz
test
rcl
aad
jl
push
dec
xor
mov
pushf
add
adc
dec
add
lods
dec
jp
push
push
sbb
cdq
push
ss
fwait
jne
jnp
stos
mov
adc
jp
pop
mov
test
pop
xchg
add
adc
lea
pop
pop
in
mov
and
and
shr
dec
push
int3
retf
cdq
jp
dec
out
inc
pop
popf
imul
pop
mov
mov
mov
lods
leave
ins
popf
jo
lock
xchg
sub
pop
jp
pop
popf
mov
retf
icebp
pop
and
test
adc
outs
or
dec
and
mov
adc
pop
out
cmp
cdq
dec
pop
aas
pop
mov
test
test
movs
ins
add
adc
fidiv
xor
test
or
jnp
xor
popf
or
pop
or
cli
add
and
enter
lahf
aas
jmpw
movs
jle
sbb
cwde
pop
dec
cdq
xchg
fcmovnbe
repz
fdivr
enter
test
test
mov
in
pop
retf
ja
hlt
les
mov
or
or
stos
test
cmps
ss
ds
fistp
imul
enter
clc
mov
div
std
mov
and
inc
push
and
push
pop
mov
test
in
jl
jmp
fbstp
(bad)
xchg
adc
and
daa
loope
fs
adc
mov
(bad)
test
imul
mov
popf
cmps
jecxz
sub
inc
mov
xlat
imul
jno
hlt
xchg
lods
lds
mov
ror
sbb
pop
mov
mov
retf
sbb
or
ins
inc
mov
test
adc
sub
jns
mov
(bad)
call
(bad)
call
sub
pop
scas
push
jae
jbe
idiv
jb
test
jno
cmp
imul
dec
sub
and
and
leave
adc
mov
push
mov
and
cld
retf
jecxz
cmp
push
inc
xor
ss
cmp
imul
sbb
cwde
int
or
push
lea
int
push
add
iret
mov
adc
ret
nop
xor
sub
or
push
dec
push
or
das
(bad)
mov
or
movs
mov
xor
push
sbb
sub
dec
add
jbe
cwde
dec
cs
sahf
jmp
out
jnp
rcl
and
es
pop
fsubr
mov
jnp
push
retf
sbb
sub
cwde
mov
xlat
(bad)
push
inc
arpl
mov
adc
or
popa
mov
les
pop
mov
les
mov
cli
sbb
inc
push
ret
inc
push
adc
jl
aad
aaa
xchg
ficomp
sbb
lods
adc
inc
loope
test
test
popf
rol
retf
sub
sub
in
bound
add
lea
stos
mov
imul
xor
push
pop
add
and
fs
out
cdq
jle
mov
mov
inc
in
repz
out
out
addr16
jae
mov
xor
scas
pop
xor
es
inc
push
fwait
xchg
jg
cmps
adc
push
ja
outs
jb
inc
xchg
(bad)
aam
pop
mov
jb
fnstcw
mov
inc
xlat
mov
or
lock
repz
jmp
popa
pop
add
jae
out
shl
adc
enter
fistp
cmp
pop
fwait
adc
mov
stos
into
cdq
gs
adc
pop
jle
jmp
fdiv
sahf
sbb
in
mov
ss
je
dec
mov
mov
repnz
adc
and
(bad)
mov
outs
add
(bad)
pop
push
jle
pop
push
scas
ror
mov
push
cwde
or
sti
retf
xchg
call
mov
xchg
lods
or
paddsb
cmps
aaa
xor
dec
pop
push
stc
mov
and
adc
rcl
xchg
dec
(bad)
ins
jge
arpl
mov
cld
stos
dec
pop
or
cmps
pop
jge
in
shr
repnz
mov
or
hlt
mov
xchg
mov
push
mov
xlat
mov
mov
cmp
leave
jmp
adc
xchg
dec
test
dec
aaa
cmp
mov
xchg
push
pop
mov
ror
retf
xchg
xchg
popf
je
mov
sbb
iret
jmp
sti
mov
jp
inc
jmp
lods
in
sub
sub
fcom
xor
sub
cmps
rcl
sub
or
mov
data16
ins
push
setbe
aaa
sbb
into
push
dec
sub
xchg
or
add
je
dec
xchg
lea
xchg
dec
cmp
or
pop
sbb
mov
(bad)
sbb
cmp
pop
fwait
mov
mov
push
jb
ret
and
adc
ds
icebp
dec
push
inc
mov
mov
les
pop
popa
mov
pop
and
pushf
clc
xchg
or
fdiv
sbb
sahf
cli
jne
pop
mov
push
repnz
test
gs
sub
int
pop
pop
out
mov
push
mov
outs
pop
and
fmul
or
sbb
xchg
hlt
jb
jle
ins
daa
mov
push
cmp
ins
mov
popa
push
add
mov
jnp
xor
add
retf
jb
push
mov
jns
inc
cwde
ja
add
test
das
(bad)
mov
rol
or
loopne
fstp
push
mov
mov
mov
hlt
pusha
pusha
out
repnz
ja
mov
add
imul
addr16
ficom
xchg
stos
out
pushf
repz
(bad)
or
js
(bad)
push
pop
jne
or
scas
jns
sub
rcr
sub
(bad)
adc
cwde
or
sub
xor
out
inc
clc
sub
repz
out
inc
sbb
jge
cmc
and
call
pusha
add
movs
imul
popf
mov
add
out
cld
or
add
push
scas
adc
add
jns
into
push
arpl
jp
mov
ins
daa
mov
sbb
cmp
xchg
test
xchg
xchg
ja
pop
rcr
adc
mov
xor
sub
stos
out
shr
push
ret
xchg
imul
xchg
mov
fistp
ret
mov
cwde
ror
les
xchg
inc
scas
adc
jns
cmps
ins
pusha
xor
shl
dec
add
je
fimul
addr16
jae
mov
and
jns
mov
lahf
std
fcomp
and
aas
in
fsubr
inc
jbe
daa
xchg
sub
xor
sub
mov
retf
pop
adc
jb
in
jge
std
cld
movs
out
mov
sahf
mov
loope
cmp
sbb
out
into
jne
mov
xchg
(bad)
and
xchg
clc
leave
cmp
inc
repz
imul
push
pop
mov
les
and
imul
retf
(bad)
dec
cs
dec
rcr
xor
and
ss
or
mov
aas
jg
jg
fsubr
cmp
mov
popa
(bad)
daa
sub
aaa
cmps
pop
mov
mov
fcomp
(bad)
pop
shl
ja
je
aam
push
push
mov
mov
inc
ss
fimul
and
inc
inc
sbb
hlt
pop
aas
push
sti
mov
leave
xchg
jmp
pop
push
push
aad
pop
std
data16
and
xor
dec
and
push
push
popa
and
push
xchg
pop
ret
and
mov
xchg
nop
(bad)
out
mov
cmp
jmp
rol
jno
fcomp
sbb
pop
sbb
icebp
mov
adc
xchg
or
jg
jmp
scas
call
stos
imul
inc
arpl
jle
and
and
dec
ret
sub
call
sub
mov
sbb
push
xchg
outs
xchg
xchg
(bad)
fist
retf
fs
or
sub
sbb
nop
sti
outs
rcl
test
rcr
jae
xor
je
mov
cmps
push
in
je
popf
mov
jns
pushf
outs
aaa
rcr
sar
dec
jmp
mov
push
call
push
jg
push
mov
aam
xchg
stos
out
cmp
cli
stos
movs
hlt
aad
rol
ror
jbe
push
push
sub
shr
outs
into
retf
int3
jne
inc
xchg
call
cmp
data16
cmp
push
add
sbb
jmp
scas
in
push
scas
pop
ins
fmul
and
push
pushf
ins
dec
push
cmp
inc
cmc
js
sub
dec
lds
out
cmp
sahf
push
iret
mov
mov
dec
mov
sahf
push
(bad)
sub
sahf
outs
fistp
mov
cmp
js
and
addr16
repz
cmp
cld
arpl
push
mov
mov
sti
daa
shl
dec
data16
ror
push
sbb
sbb
or
sbb
int3
mov
sbb
cld
inc
or
scas
xor
fs
add
(bad)
sub
fstp
pop
lods
push
cmp
push
mov
out
jp
out
int3
movs
(bad)
je
push
mov
sub
mov
mov
ss
xor
cmp
and
sub
mov
std
cld
movs
out
mov
pop
pop
inc
sbb
mov
mov
imul
cld
push
or
or
sbb
and
inc
in
lods
mov
mov
mov
inc
imul
sub
cmp
fstp
mul
and
mov
pushf
dec
rep
xor
inc
je
add
push
mov
and
and
js
xchg
push
jns
imul
test
fisttp
sti
cmp
pusha
into
push
aad
iret
cmp
push
dec
(bad)
int
mov
mov
nop
test
xor
push
shl
(bad)
sbb
and
push
jbe
je
mov
jmp
sbb
fadd
inc
pop
mov
stos
int
js
mov
jne
popf
movs
fimul
(bad)
stos
pop
mov
in
movs
fisttp
or
jne
in
cwde
mov
jae
ror
loopne
cs
jbe
sub
pop
test
call
xor
gs
not
and
repnz
stos
mov
pop
xchg
xchg
rcr
cmp
invd
mov
sahf
mov
dec
mov
stos
movs
jmp
cld
mov
dec
cmc
fidiv
or
pop
es
dec
dec
or
jno
xor
push
fmul
xchg
rol
je
jno
cli
mov
and
(bad)
dec
gs
jp
jle
pop
push
scas
cwde
mov
ss
mov
inc
loope
arpl
jge
pusha
mov
ins
adc
push
cmps
dec
idiv
lods
int3
clc
out
adc
dec
mov
sbb
mov
stos
in
stc
jp
cmp
push
mov
fnstsw
popf
(bad)
iret
mov
shl
cld
fnop
and
mov
aaa
fisubr
pop
fs
adc
pop
mov
or
out
add
fisttp
cmp
jnp
and
je
iret
mov
pop
or
ror
in
aaa
test
add
cdq
pushf
addr16
aas
inc
jnp
or
mov
xor
mov
jne
mov
shr
xchg
(bad)
inc
std
iret
icebp
(bad)
xchg
imul
scas
mov
sbb
int
or
popa
sahf
adc
mov
(bad)
xchg
push
and
in
and
jne
arpl
aad
push
xlat
mov
mov
in
add
sub
pop
dec
aam
jle
xchg
cmp
mov
int
mov
stos
movs
dec
fidiv
push
push
add
(bad)
dec
data16
and
sbb
sahf
lock
pop
sub
pop
imul
mov
mov
in
push
ins
cli
rol
mov
mov
cmps
jnp
xor
aas
fcom
arpl
jl
je
mov
push
sbb
jmp
inc
mov
cmp
cmp
out
and
in
xor
mov
adc
mov
and
fst
mov
ins
loopne
adc
lods
sub
rcl
into
(bad)
shl
stc
ss
retf
das
movs
loope
push
lods
es
mov
xor
adc
dec
mov
stos
jns
fst
arpl
pop
loopne
dec
aam
pop
adc
ins
fldcw
dec
add
adc
mov
xor
xor
pop
or
bound
rcl
aaa
push
add
adc
xor
rcr
stos
stc
jb
mov
push
mov
out
fmul
lods
call
sbb
gs
push
retf
dec
fisttp
(bad)
jnp
shr
jge
cwde
jmp
lods
mov
sub
inc
daa
in
mov
and
outs
add
sbb
lds
sbb
cmps
out
jae
aad
shr
mov
xchg
push
je
jns
xchg
hlt
fiadd
sub
das
mov
adc
inc
pop
xchg
call
xor
test
je
aam
retf
js
jne
pushf
add
mulps
cli
pop
add
test
mov
test
stos
sub
lds
sbb
iret
adc
inc
nop
rol
lea
add
cmps
int3
in
sub
jns
mov
ror
(bad)
int3
es
or
xchg
add
in
pop
mov
aad
lahf
lahf
dec
imul
imul
pop
popa
mov
jmp
push
push
xor
push
jno
mov
lds
push
ins
retf
jmp
adc
enter
lahf
cmc
adc
and
das
push
pop
mov
jl
mov
push
dec
div
jge
cdq
sbb
xchg
jge
inc
enter
pop
mov
mov
push
add
jp
retf
dec
mov
rcr
xor
pop
js
(bad)
lods
cmps
ins
dec
xor
outs
outs
inc
outs
pop
push
adc
cmp
pop
dec
fistp
rol
jne
mov
mov
sar
enter
das
jo
std
cld
(bad)
cld
cmp
mov
lock
std
into
mov
dec
pop
pop
(bad)
mov
into
iret
cmc
(bad)
mov
xor
xor
in
sub
ds
add
addr16
call
cs
cwde
clc
scas
mov
cmps
sbb
aam
loopne
or
and
aas
stc
jne
call
aam
bound
imul
(bad)
push
ss
cmp
ins
add
sbb
xchg
push
jmp
inc
leave
addr16
popf
or
jp
ins
cmps
add
jns
sbb
jg
and
pop
sbb
adc
mov
(bad)
dec
daa
xchg
push
inc
cmps
mov
jge
sub
add
sbb
xor
push
push
push
add
xor
shrd
inc
pushf
or
js
in
mov
push
retf
xchg
aad
arpl
jp
jl
test
fwait
push
fst
pop
test
call
mov
movs
enter
bound
inc
idiv
add
mov
pusha
adc
nop
movs
sbb
push
xor
imul
cmp
adc
inc
movs
xor
dec
lods
ret
pop
cdq
mov
(bad)
adc
mov
addr16
(bad)
aad
and
outs
test
dec
(bad)
jge
jns
fistp
lods
cmc
fst
outs
mov
(bad)
jle
mov
adc
shr
adc
in
mov
push
pop
push
add
ja
lods
inc
mov
push
pop
mov
sub
ret
xor
cmc
in
cli
rcr
mov
cmp
mov
and
jge
pop
jno
imul
fld1
imul
jp
std
lea
push
mov
aad
nop
jmp
popf
ret
mov
mov
adc
pop
jae
shl
loope
mov
xchg
mov
pop
sbb
or
jmp
mov
mov
xchg
mov
jl
fwait
xchg
int
sbb
and
hlt
mov
mov
scas
pop
pop
inc
(bad)
mov
xchg
in
mov
jle
fsubr
adc
sub
pop
mov
dec
mov
and
ret
(bad)
push
pop
addr16
pop
ds
stos
popa
jp
sub
xor
leave
fidivr
data16
gs
ds
and
repz
cmc
sti
data16
cmps
jecxz
push
stos
das
fwait
stos
fcompp
adc
int3
jmp
pop
ds
out
cli
fmul
pop
mov
mov
int3
dec
adc
inc
inc
inc
cdq
icebp
lods
js
fs
mov
cld
push
and
sub
push
pop
popf
outs
popf
push
pop
(bad)
xor
mov
cmp
repnz
pop
xchg
sub
fsubr
mov
push
pop
mov
in
int
and
cmps
(bad)
adc
mov
dec
mov
mov
mov
xchg
jecxz
lds
retf
repz
dec
scas
sar
rcl
(bad)
test
or
jg
pop
mov
mov
and
pop
adc
lahf
fs
fs
cmp
movs
sub
in
dec
and
xor
fnstcw
bound
cs
out
retf
and
bound
jb
mov
imul
pop
ins
test
and
scas
lds
push
sbb
fidivr
stos
data16
mov
jno
scas
adc
fidiv
jecxz
xchg
ds
iret
pusha
sub
mov
test
ja
push
sbb
jno
dec
mov
and
xor
cwde
inc
(bad)
xchg
nop
imul
js
or
xchg
or
loope
inc
mov
call
lock
clc
out
push
scas
addr16
pop
out
in
in
mov
fmul
int
loopne
pop
pusha
lods
cli
es
sub
lds
inc
cmp
adc
fwait
rcr
xchg
push
mov
xchg
lds
mov
sbb
cmp
mov
rcl
or
nop
inc
or
clc
and
stos
mov
mov
daa
fstp
add
dec
pop
cmps
aam
popf
stos
mov
cdq
ficom
aad
pop
add
cmp
and
jl
add
mov
pop
call
jmp
cs
sbb
xchg
cmp
scas
je
data16
arpl
repz
int
mov
mov
cmps
stos
push
mov
jae
add
je
stc
and
test
xchg
sub
push
(bad)
addr16
jae
cmp
aam
and
sub
lods
je
mov
and
shr
sbb
push
jp
int3
outs
and
(bad)
scas
mov
(bad)
xchg
cmps
rcr
pop
lahf
out
xor
push
repz
fs
fcmovne
imul
lea
pop
(bad)
stos
ror
lods
sbb
cmp
stc
inc
popa
add
push
cmps
fs
jmp
add
loope
shl
add
nop
push
jo
jmp
repz
mov
xchg
xchg
jl
mov
mov
push
cdq
popf
mov
icebp
ins
in
push
xor
rcr
dec
mov
or
adc
inc
bound
jmp
dec
pusha
pop
cwde
fbld
sub
xchg
mov
mov
ja
ret
jnp
out
outs
test
and
je
sar
pop
cmp
daa
test
cli
inc
mov
xor
shl
add
pop
in
inc
dec
mov
sub
outs
sub
mov
fs
mov
mov
lods
out
aaa
jmp
call
jmp
lock
aad
push
xchg
stos
test
ja
mov
(bad)
(bad)
stc
cmp
jns
mov
xor
(bad)
jmp
jmp
neg
or
pop
cmp
dec
or
loop
pop
je
wrmsr
cmp
push
out
out
xlat
aaa
setae
push
rcl
stc
test
jge
mov
int
lea
ror
fidiv
in
dec
ins
xchg
cmps
sar
inc
stos
sar
mov
fisttp
inc
ins
in
aad
jae
out
faddp
cli
stc
xchg
das
push
add
ja
xchg
in
pop
mov
shl
xrelease
xchg
test
push
in
sub
or
ficom
xor
mov
mov
xchg
dec
mov
jle
fnstsw
jmp
popf
adc
push
outs
out
mov
xor
rcl
xor
mov
retf
aam
cmp
dec
mov
push
xchg
mov
xchg
test
call
push
sbb
mov
jmp
mov
adc
mov
dec
ins
out
pop
add
ins
sub
jne
rol
jae
jge
fidiv
jo
cmp
and
adc
je
mov
jge
sbb
push
hlt
xor
mov
mov
xor
movs
mov
push
lods
div
in
mov
loope
xchg
daa
fidiv
xchg
movs
sbb
jg
cmc
(bad)
mov
pop
leave
jmp
sub
mov
popa
jnp
dec
(bad)
sbb
imul
mov
scas
call
das
sar
sub
add
ja
mov
push
add
cmp
imul
cmp
pop
sbb
sbb
sbb
dec
xlat
add
dec
std
cmps
or
dec
ins
push
out
cmp
cmp
gs
paddq
dec
push
iret
gs
(bad)
or
imul
sub
arpl
(bad)
pop
jb
scas
mov
loope
in
mov
xor
dec
xlat
lods
jnp
in
lods
or
xchg
push
mov
mov
inc
test
adc
scas
je
fwait
test
and
xchg
sub
(bad)
aas
sub
rol
mov
mov
outs
push
test
inc
pop
and
xor
nop
addr16
and
mov
xchg
or
pushf
mov
sbb
cmp
std
(bad)
lods
(bad)
leave
rcr
xlat
lea
pop
bound
sbb
mov
out
repz
jo
inc
imul
(bad)
adc
pop
ins
clc
pop
or
je
movs
pop
add
mov
mov
dec
mov
mov
xchg
rcr
pusha
sbb
push
push
nop
jo
jb
rol
fiadd
mov
ror
mov
push
das
pop
dec
mov
ins
hlt
(bad)
cmp
ins
jae
(bad)
ja
fldcw
dec
fidivr
jns
dec
mov
mov
loope
mov
cwde
sbb
sbb
sahf
pop
int
fst
lods
(bad)
mov
loopne
jmp
imul
inc
test
adc
iret
std
add
mov
jg
fs
jo
(bad)
int
push
pop
push
shl
sub
loop
lods
aam
mov
and
pop
arpl
pusha
lds
test
aaa
jle
icebp
xchg
pushf
or
xchg
fdivr
jle
fbstp
push
add
mov
jp
sbb
sti
sahf
and
test
jae
push
fisttp
test
inc
je
push
sbb
xor
mov
cmp
fist
movs
out
xchg
int3
movs
push
out
dec
add
je
lea
icebp
xor
(bad)
test
sbb
cmps
push
lds
enter
cli
jl
cdq
es
mov
nop
dec
inc
mov
mov
or
mov
leave
mov
cmp
outs
ins
retf
mov
add
adc
xchg
enter
sti
es
mov
iret
sbb
push
ins
loopne
pop
in
call
xor
inc
cmp
mov
jp
add
xchg
jp
cli
popa
xchg
or
pop
push
sub
jnp
sub
jbe
call
sbb
or
(bad)
pop
or
shl
ss
push
and
dec
cmp
sbb
scas
loope
push
test
adc
ror
sub
pop
nop
les
inc
pop
out
cmp
(bad)
fmul
pop
in
stc
xchg
clc
pushf
scas
pop
push
ss
stos
out
cmps
mul
dec
ins
cmc
xchg
mov
cmp
dec
xchg
push
sub
test
mov
das
data16
mov
xchg
outs
adc
loopne
push
sete
add
and
stos
and
shr
hlt
pusha
sbb
dec
mov
test
rol
sub
ds
(bad)
sbb
mov
xchg
dec
lods
push
lock
inc
icebp
mov
push
std
mov
repz
sar
inc
dec
push
jle
mov
ffreep
das
mov
sub
cmps
lods
inc
sub
scas
adc
lds
into
sbb
imul
jno
enter
ins
sub
fwait
stos
push
mov
jno
xor
lock
push
add
int
xor
retf
stos
rcl
out
cmp
adc
popa
mov
fcomp
fcmovnb
sub
idiv
xor
sar
daa
push
cmc
lock
jecxz
cmp
fild
mov
cmp
ret
fbstp
jnp
mov
pop
hlt
inc
xchg
adc
test
scas
std
mov
dec
xchg
jmp
jnp
in
dec
mov
in
push
dec
out
and
call
xchg
adc
pop
retf
dec
lahf
cld
and
dec
lods
dec
sbb
(bad)
(bad)
xor
mov
adc
mov
leave
into
inc
add
add
or
ss
mov
outs
pop
stos
call
adc
rcr
popf
shr
aam
xor
out
jl
imul
and
pop
int3
mov
cwde
aaa
inc
jnp
dec
loop
push
mov
jge
cwde
jmp
ins
test
adc
mov
pop
movs
sub
adc
dec
or
mov
lahf
cwde
test
sbb
adc
jo
ins
es
push
xchg
mov
push
pushf
iret
xchg
inc
movs
fwait
mov
lea
stos
xchg
fwait
add
gs
and
js
lods
(bad)
fistp
mov
adc
xor
xchg
and
inc
retf
push
and
jae
mov
jne
sub
mov
pop
in
into
test
popa
cmps
jo
inc
popa
pushf
jo
int
lahf
outs
push
and
aam
sbb
out
and
xchg
mov
xor
inc
add
dec
stc
sub
lea
sub
jg
ret
push
(bad)
sub
dec
mov
movs
lods
or
mov
sahf
les
pop
sub
mov
mov
xor
add
sbb
stos
push
dec
jp
mov
pop
lods
mov
and
lock
xchg
and
jl
mov
ret
jp
mov
gs
sbb
fdivr
pop
inc
xchg
or
push
and
inc
jne
xchg
and
bt
dec
stos
push
push
or
lea
mov
mov
(bad)
mov
cdq
cmp
(bad)
retf
pop
call
add
mov
sahf
shl
cwde
and
add
cli
jmp
lock
frstor
(bad)
mov
cmp
in
movs
jmp
shl
bnd
mov
pop
test
adc
xor
pop
js
fstp
std
sub
call
dec
into
mul
mov
int
ror
into
mov
aad
rol
test
xor
xchg
xor
cli
call
rcl
rcr
or
int3
es
sar
or
(bad)
xor
retf
xchg
fdiv
gs
push
stos
out
cdq
leave
fidivr
jns
pop
in
jmp
push
das
cmps
out
pop
mov
mov
jle
sub
xchg
(bad)
test
mov
pop
mov
loope
nop
dec
mov
out
mov
inc
(bad)
clc
push
enter
rol
jmp
cld
jmp
xor
jno
sbb
dec
cmp
in
sar
call
cmp
outs
pop
daa
pusha
jmp
mov
add
mov
bound
mov
mov
cdq
aam
int3
inc
movs
jo
test
push
mov
mov
add
mov
int3
mov
(bad)
aam
cmp
iret
ja
daa
fucomi
sbb
jns
and
add
mov
jecxz
and
push
xchg
and
js
retf
pop
inc
fwait
sub
dec
popf
loope
cli
fidiv
ins
ja
mov
lea
xchg
loope
xor
jbe
mov
fwait
int
and
sbb
rcr
adc
mov
loope
ss
lods
and
ins
mov
ins
push
jge
test
ss
pop
add
add
sub
fwait
pop
or
cmp
sbb
(bad)
imul
dec
push
ins
sbb
pusha
dec
lahf
ror
mov
(bad)
dec
sbb
fistp
out
shl
test
and
call
push
int3
mov
and
cmp
leave
aaa
push
mov
dec
movs
sbb
sub
jbe
int
fild
gs
dec
repnz
pop
js
int3
ror
int
in
xchg
jp
scas
out
cld
movs
push
and
call
jb
mov
sbb
add
dec
mov
pop
pop
mov
adc
gs
jge
pop
mov
mov
mov
retf
ds
dec
iret
mov
push
sub
imul
js
or
sub
in
dec
ins
das
iret
test
into
mov
xchg
mov
je
dec
and
adc
call
fst
ja
ins
imul
jl
movs
stos
sbb
cwde
push
lods
mov
jmp
(bad)
pop
rcl
jmp
in
xor
or
repz
mov
and
scas
stos
sbb
pop
dec
imul
mov
cli
xchg
sub
push
ja
xor
rep
call
cmp
clc
xchg
adc
pop
jne
add
rcr
inc
cmps
push
and
push
dec
mov
xchg
test
jmp
sub
inc
push
and
xor
push
sbb
enter
neg
push
sti
shl
jmp
fwait
pop
idiv
mov
or
jb
cli
loope
std
imul
or
push
stc
in
and
mov
sbb
popf
cwde
push
sub
icebp
je
iret
repz
pop
ffree
inc
hlt
daa
cwde
push
or
std
loop
iret
xchg
xor
popf
pop
ins
into
push
push
scas
fild
and
jnp
aas
lahf
xor
sbb
pop
xor
mov
add
mov
imul
sbb
push
and
js
sub
scas
ja
sbb
inc
leave
lock
aam
pop
mov
xor
nop
pop
ins
push
pushf
movs
es
add
fsubr
arpl
movs
cmps
and
int3
push
int
mov
lahf
in
movs
push
out
icebp
lods
div
dec
adc
pop
ss
push
cld
mov
scas
dec
jmp
jne
in
xchg
(bad)
and
inc
shr
sbb
scas
cmp
xor
rol
sub
(bad)
fcomp
or
sbb
jb
dec
cmp
and
lds
lock
inc
je
and
add
inc
pop
sbb
xchg
call
and
mov
or
xchg
dec
fstp
xor
ror
ss
stos
xor
aad
xchg
int
inc
dec
sub
stc
pop
inc
je
pop
setnp
aas
cmps
xor
pop
xchg
sub
pusha
in
aam
ret
push
mov
xor
push
aam
cld
and
mov
inc
clc
fwait
xchg
mov
ins
daa
stos
shl
stc
jle
stos
js
lahf
inc
inc
mov
enter
cmp
pop
popf
or
sar
push
mov
mov
fbld
add
nop
mov
and
add
mov
fimul
jno
popa
sbb
inc
ficom
sub
mov
daa
inc
clc
jecxz
ins
les
loope
pop
loope
lods
xor
iret
out
cmp
pop
scas
cmp
xchg
call
push
xchg
(bad)
adc
add
fidiv
in
sbb
xchg
fwait
push
inc
pop
out
out
pop
(bad)
nop
mov
pop
shl
das
das
ds
ins
or
dec
movs
jmp
mov
push
popa
add
sbb
mov
mov
jbe
mov
adc
mov
pop
test
ret
cld
scas
popa
inc
mov
cwde
pop
sbb
sub
js
fisubr
fsub
push
xchg
pop
sub
xchg
out
cwde
pop
(bad)
push
js
sub
daa
pop
jbe
fisubr
mov
aad
push
test
push
ret
popa
push
mov
jge
jbe
xchg
sbb
ficomp
xor
das
aam
push
mov
push
std
sbb
repnz
cmp
stc
(bad)
fucom
inc
cmp
pop
neg
fistp
cld
mov
in
fwait
aaa
call
mov
push
sar
sbb
ins
in
ss
xor
(bad)
pcmpgtw
outs
js
push
cmps
hlt
dec
xchg
or
into
fsub
in
xor
xchg
jmp
out
inc
and
jmp
std
outs
(bad)
add
dec
leave
call
bound
xor
popf
enter
cmps
mov
xchg
pop
retf
fcomp
in
inc
dec
arpl
adc
inc
les
pop
ja
jb
stos
pop
stos
xchg
push
cmps
jecxz
add
mov
pop
push
xchg
xor
jmp
push
ins
add
es
int3
pop
fsubr
stc
cli
dec
loopne
arpl
loope
pop
mov
nop
xchg
fcom
mov
inc
lock
sbb
fs
loopne
sbb
in
lods
and
jns
xchg
mov
adc
cmp
push
imul
cmp
jg
fwait
push
push
sbb
xchg
out
sbb
stc
push
call
ins
ins
into
stos
lahf
nop
mov
stos
aad
mov
hlt
xchg
xor
sbb
cmp
pop
(bad)
dec
jp
or
lahf
out
(bad)
push
mov
int
sub
test
lods
cdq
cmc
int3
test
xchg
adc
outs
loopne
cmps
jns
movs
add
xor
gs
and
mov
aaa
std
jle
pop
and
xor
loopne
call
sub
outs
movs
inc
xor
call
cmp
push
pop
daa
pop
dec
jae
test
xchg
repz
xor
push
aas
cli
sub
sub
add
or
sub
mov
cmc
repz
(bad)
sahf
or
adc
in
retf
mov
mov
jecxz
outs
mov
push
mov
inc
inc
add
sbb
inc
call
cli
adc
repnz
mov
mov
cld
out
xchg
sbb
adc
popa
push
pop
in
stos
inc
mov
pop
clc
xor
cmc
mov
sbb
fwait
xchg
sub
mov
fimul
sahf
xchg
sbb
inc
rcl
call
ret
jbe
(bad)
and
scas
sbb
lods
sbb
fimul
sbb
jo
jp
jb
cmps
or
fisubr
out
loope
jo
sbb
inc
adc
xor
leave
and
dec
daa
call
mov
lock
stos
xchg
gs
lock
pop
cmps
test
jecxz
xchg
stos
aaa
dec
and
jecxz
std
fwait
(bad)
mov
retf
dec
div
xor
cmps
inc
sti
pop
pop
xchg
outs
fucomip
mov
daa
or
test
shl
jns
cmps
xlat
mov
std
aaa
pop
sbb
rcl
inc
stos
call
ficomp
jnp
mov
les
retf
ins
(bad)
adc
imul
leave
adc
scas
jo
enter
daa
ins
add
mov
xor
arpl
arpl
xor
xor
pop
mov
ds
xor
jp
sbb
and
or
retf
sbb
mov
push
jmp
push
scas
test
adc
inc
xchg
inc
xchg
icebp
jno
inc
xchg
jmp
mov
and
retf
inc
jo
pop
or
xchg
int3
popa
test
cmps
stos
add
and
into
dec
in
push
cmp
mov
or
mov
push
aaa
xor
fnstenv
xor
mov
inc
sar
rol
xchg
lods
fs
outs
ins
cmp
mov
popf
jbe
xchg
lods
mov
pop
jne
jle
jge
movzx
(bad)
push
add
and
mov
sub
shr
xor
or
sbb
out
adc
rcl
int3
addr16
xor
xlat
jne
popf
movs
sbb
repnz
xchg
jns
dec
or
xor
es
clc
jmp
es
scas
sar
inc
loop
inc
daa
ds
daa
nop
add
rcl
mov
or
pop
fimul
sbb
or
adc
retf
shr
add
iret
jb
mov
dec
(bad)
push
sbb
mov
push
mov
adc
inc
jne
enter
sbb
rcr
lds
xchg
mov
adc
sbb
addr16
dec
mov
cs
adc
pop
cs
clc
pop
ja
jg
shl
fistp
shr
sub
pusha
push
inc
xchg
mov
mov
push
or
sbb
cwde
(bad)
loopne
jno
loope
or
out
lahf
lods
and
pusha
pop
stos
fdivp
mov
(bad)
adc
and
or
push
(bad)
call
adc
adc
mov
ror
mov
adc
shl
jne
or
ins
pop
xor
loop
add
sub
jmp
jo
jg
dec
call
cmp
add
mov
loopne
push
loop
pop
dec
mov
push
icebp
jmp
add
sbb
or
sahf
addr16
mov
dec
add
and
mov
jmp
jmp
mov
aam
dec
shl
rcr
es
test
test
xchg
test
movs
out
and
push
add
movs
pop
shl
call
jo
inc
data16
ret
mov
repnz
adc
es
pop
xlat
ins
push
pop
mov
scas
fiadd
jmp
push
ins
aas
(bad)
xchg
inc
push
xor
jecxz
mov
cmp
call
mov
mov
rol
cmp
mov
add
dec
ret
and
imul
add
and
dec
sbb
cmp
adc
add
ror
sahf
inc
adc
bound
cdq
push
cdq
cmp
sub
std
scas
aaa
mov
sti
scas
jnp
stos
jb
or
enter
fcomp
fwait
adc
je
call
loop
jno
adc
pop
adc
cmps
adc
repnz
cmps
push
shr
xchg
adc
mov
xor
sub
ins
push
rol
outs
movs
inc
mov
xchg
test
add
xlat
popf
jb
fstp
test
mov
call
xchg
mov
push
adc
lock
es
imul
sbb
call
push
push
call
mov
scas
frstor
cmps
stc
cld
out
pop
mov
mov
or
xor
arpl
mov
sbb
std
movs
xchg
hlt
clc
in
cs
gs
(bad)
inc
ja
dec
sub
mov
push
inc
sbb
and
dec
loop
into
xor
and
push
push
or
jp
xlat
test
(bad)
jle
jp
pop
pop
cmp
lahf
pop
mov
xchg
mov
in
push
push
ficom
add
sbb
xor
mov
or
inc
adc
out
mov
fiadd
mov
push
pushf
scas
sbb
test
mov
add
and
xchg
mov
add
add
cli
movs
dec
popa
in
jecxz
mov
mov
xor
push
icebp
pushf
push
sub
sub
xor
pop
jno
jecxz
into
or
cwde
es
je
add
aas
pop
or
jne
push
pop
jno
std
dec
pop
in
movq
(bad)
mov
sub
mov
jns
repnz
fisttp
jne
cli
cli
aad
imul
scas
cdq
push
out
dec
xchg
cwde
int
push
push
and
pcmpgtw
mov
cmp
mov
pop
sub
cmp
ds
adc
cmp
nop
stos
out
xor
rol
xlat
sub
sub
int3
sbb
jmp
push
arpl
jl
mov
icebp
jp
xor
cdq
movs
(bad)
call
dec
add
scas
outs
pop
iret
xchg
loop
test
and
push
es
in
push
in
loop
push
addr16
xchg
call
inc
push
push
dec
nop
or
cdq
mov
cmp
popf
ret
test
mov
cmps
add
add
jle
shl
enter
inc
cdq
push
xor
mov
mov
or
fcompp
pop
shl
cwde
xor
mov
mov
dec
mov
sbb
mov
dec
adc
add
mov
push
or
ins
pop
xor
sub
shl
and
ja
push
push
add
pop
cmp
xchg
push
inc
in
xor
xchg
stc
sahf
dec
leave
or
call
mov
push
jecxz
push
sbb
cli
xor
mov
mov
mov
sti
leave
(bad)
push
mov
int
pop
sbb
es
or
pusha
inc
mov
(bad)
leave
mov
cmp
adc
sbb
lds
xchg
outs
lds
mov
loop
cmps
loop
hlt
arpl
jo
pop
xchg
sbb
xchg
rol
shl
mov
xchg
test
(bad)
push
adc
stos
pop
call
mov
in
(bad)
adc
cmps
mov
stos
data16
test
mov
dec
mov
mov
(bad)
call
sahf
xor
sub
dec
inc
jge
or
fs
rcl
cmps
adc
push
mov
(bad)
fxch
mov
(bad)
xchg
pop
repz
in
fs
sbb
popf
or
push
mov
mov
(bad)
push
enter
jbe
push
cli
stc
jae
xor
jle
sar
iret
scas
inc
cdq
repnz
jg
and
call
outs
out
lds
dec
mov
and
sub
push
add
lods
mov
ror
movs
int3
push
repnz
inc
sbb
mov
icebp
adc
scas
push
shl
push
cmp
push
push
stos
fs
add
scas
pop
cmp
js
loop
dec
test
movs
cmp
pop
mov
stos
das
(bad)
std
inc
jmp
ss
pop
fdiv
jle
int
out
in
xchg
out
and
(bad)
ins
push
mov
outs
test
xchg
shrd
pop
lods
dec
arpl
in
ins
mov
data16
jmp
mov
mov
push
sar
mov
iret
(bad)
pop
xchg
cdq
mov
jmp
fsub
sbb
mov
mov
(bad)
ret
idiv
inc
bswap
out
lods
adc
xchg
xor
test
or
inc
sub
ds
ds
or
mov
push
lods
adc
and
pop
dec
xchg
add
pop
retf
lock
int3
adc
outs
push
vptestmw
cmps
es
inc
leave
in
gs
jne
es
dec
dec
jg
xor
mov
mov
je
dec
je
xchg
popa
jb
dec
dec
shl
loop
push
and
leave
ror
and
add
jmp
add
je
aas
sub
jb
adc
imul
mov
add
popa
imul
jnp
out
pop
inc
arpl
and
pusha
and
cdq
fimul
cli
mov
repz
stc
pop
mov
icebp
push
scas
jmp
mov
or
pop
fucomip
xchg
dec
div
jecxz
jmp
sbb
imul
mov
pop
pop
iret
into
outs
mov
push
fidivr
dec
(bad)
in
lods
pop
test
inc
mov
fdivr
loop
dec
inc
(bad)
hlt
and
loopne
test
xor
sub
enter
bnd
stc
sub
push
ins
dec
dec
nop
lods
xor
ins
mov
dec
jns
sbb
hlt
(bad)
leave
xchg
fmul
dec
sub
sbb
cmp
dec
lea
adc
daa
mov
sub
int3
xchg
aas
or
add
jle
inc
xchg
mov
xlat
popa
or
sbb
enter
fwait
jmp
(bad)
test
aas
pop
(bad)
mov
pusha
outs
mov
adc
mov
push
inc
push
xor
outs
rsm
fldenv
fld
xor
add
out
div
jbe
jne
aad
mov
lods
movs
out
xchg
out
mov
ja
(bad)
fstp
pushw
sti
mov
fbstp
fisubr
retw
pop
xor
pop
cmp
pop
stos
das
push
(bad)
cmp
push
jle
shr
or
xor
arpl
movs
xlat
adc
es
cmp
jle
xor
sub
xchg
push
int
mov
mov
dec
push
and
imul
ficomp
mov
fs
outs
ins
popf
fwait
int
and
jbe
ja
rep
mov
mov
xchg
sub
mov
sbb
arpl
and
adc
test
test
ds
sti
and
mov
fwait
jmp
push
retf
sub
cmps
idiv
scas
jl
xor
out
hlt
in
ror
mov
and
jle
into
dec
ret
les
lods
imul
addr16
out
mov
jmp
loop
ins
jno
jns
out
out
out
loopne
xchg
in
inc
outs
xchg
adc
ja
sbb
gs
or
cwde
test
dec
dec
sbb
adc
xchg
gs
dec
daa
out
fldenv
imul
and
mov
xor
ret
iret
add
shr
jnp
int
cmp
push
out
mov
lods
push
(bad)
pop
mov
mov
les
adc
xchg
add
dec
add
or
enter
sub
push
add
inc
and
popf
lock
adc
add
xor
loop
icebp
test
fs
push
sbb
push
jbe
mov
fcmovbe
out
mov
test
movs
mov
pop
je
and
popa
jle
pushf
(bad)
(bad)
push
xchg
jle
arpl
and
lods
(bad)
push
lods
dec
imul
xor
out
fld
pop
dec
mov
mov
dec
add
cdq
imul
xor
out
sbb
sub
leave
pop
add
or
(bad)
xor
sbb
or
xchg
mov
cdq
pop
mov
mov
add
cwde
sbb
jge
arpl
imul
leave
dec
rcr
dec
xlat
loop
cmp
push
movs
sub
scas
pop
cmp
add
add
lock
in
lock
fsub
dec
push
inc
hlt
dec
loopne
cmp
lods
xchg
add
add
xchg
mov
retf
lahf
jb
ret
mov
inc
mov
cmp
sbb
mov
aam
mov
cmps
xchg
mov
stc
(bad)
arpl
in
shr
pop
outs
in
dec
mov
js
fdivr
stos
fisub
xchg
jb
push
shl
fwait
mov
jne
outs
mov
sbb
dec
sub
mov
imul
xor
jge
fisttp
cwde
lods
fsub
hlt
lods
leave
in
aaa
mov
fiadd
mov
rcl
push
sbb
lds
xor
push
imul
repnz
mov
or
sbb
loope
pop
jl
dec
in
or
js
loopne
gs
loope
int
popf
scas
fld
sub
cmp
push
jmp
pop
repz
push
mov
loop
repz
mov
jg
mov
mov
retf
sub
(bad)
int
jge
or
ret
jns
inc
lds
cmps
in
cmp
call
mov
mov
dec
adc
xchg
mov
(bad)
mov
fldcw
or
push
jp
mov
outs
rol
xchg
out
xor
mov
fidivr
mov
(bad)
sti
sbb
xor
sub
push
es
sub
shl
xchg
mov
mov
add
(bad)
lds
leave
pop
push
push
dec
mov
dec
push
xor
sub
or
inc
push
jecxz
push
pop
test
push
fisubr
inc
das
inc
inc
lock
xchg
or
xor
adc
packssdw
xlat
xchg
sub
sub
dec
inc
sbb
ins
addr16
aaa
cmps
fs
sub
jae
test
mov
scas
jns
dec
push
inc
nop
rcl
lods
or
mov
arpl
ss
xchg
xor
sbb
add
pop
adc
(bad)
std
add
push
mov
je
scas
pop
or
inc
or
out
lea
mov
mov
pop
add
add
pop
mov
mov
sbb
sub
push
int
out
jb
call
jmp
adc
add
and
leave
or
movs
and
push
das
aad
ret
ror
pop
test
fsubr
fidiv
dec
repz
mov
xlat
jge
and
rcl
js
mov
push
mov
mov
cld
or
inc
cmp
cmp
jmp
(bad)
enter
adc
mov
jl
nop
jmp
dec
cmp
push
jg
push
mov
js
pop
add
(bad)
sub
aam
jecxz
ins
ja
mov
dec
mov
call
aad
scas
test
push
int
out
arpl
jo
jg
fstp
sbb
clc
sbb
cmps
and
xor
xor
mov
iret
das
or
cwde
pop
repnz
retf
sub
(bad)
sbb
cwde
adc
push
ror
aaa
sub
repz
jmp
int3
inc
jmp
jl
ins
mov
bound
pop
sub
pop
xor
jo
inc
out
mov
push
and
cs
cmps
test
and
lock
sar
call
mov
mov
push
sbb
je
xchg
and
pop
inc
mov
push
sti
mov
sub
enter
pop
mov
(bad)
(bad)
in
xor
out
dec
jmp
dec
ss
mov
nop
mov
ja
fbstp
cmps
in
mul
(bad)
push
and
loopne
add
inc
or
cwde
xchg
loop
adc
neg
ins
jno
(bad)
aad
push
mov
hlt
cld
popa
xchg
arpl
hlt
cld
pop
std
xor
(bad)
retf
xchg
sahf
loopne
aas
stos
xchg
inc
sbb
adc
fstp
shr
and
fdiv
xchg
adc
lock
gs
data16
rcl
movs
(bad)
aaa
jno
rol
ins
adc
push
daa
lea
movs
sbb
retf
popa
push
enter
push
ins
in
aas
mov
retf
xchg
sbb
mov
xchg
inc
es
jns
jbe
sub
cmp
sub
gs
inc
mov
cmp
xchg
cdq
ins
movs
cmp
cmp
jge
push
int3
cmp
cmp
mov
mov
add
cdq
pop
mov
movs
ja
(bad)
inc
mov
(bad)
stc
dec
icebp
xchg
sbb
das
mov
mov
add
sbb
out
cld
retf
out
pop
popf
das
jbe
jns
bound
jle
pop
or
pop
sub
retf
xor
push
rcr
fld
ins
addr16
sbb
popf
fs
or
sbb
lock
mov
frstor
lods
js
ret
mov
adc
jo
sbb
jmp
adc
call
fs
clc
xbegin
cli
cmc
iret
add
dec
jle
leave
ret
mov
mov
(bad)
iret
div
dec
sar
cmp
xlat
shr
cld
and
inc
mov
add
or
add
sbb
ss
mov
lahf
loopne
out
dec
xor
jae
add
rcr
and
xchg
fisub
aad
pop
or
inc
out
mov
scas
pop
(bad)
call
fsubr
push
imul
cmc
fdivr
out
stc
rcl
retf
ins
mov
jbe
add
mov
sub
int3
rcl
xchg
iret
adc
aad
inc
cwde
push
xor
clc
mov
and
je
dec
xchg
jle
shl
push
xchg
div
pop
or
loope
out
xor
aaa
lods
push
adc
test
xchg
fisub
popa
inc
add
out
cmps
(bad)
mov
jmp
push
sub
and
or
loop
or
mov
and
fmul
aad
stos
pop
cmp
(bad)
fldcw
sti
mov
pop
fmul
sub
xchg
sti
xchg
lahf
fmul
jg
aas
push
mov
pop
cmp
in
fadd
xchg
js
cmp
xchg
cli
sub
clc
and
aaa
or
jle
not
and
lock
ins
out
mov
movs
xor
repz
push
stc
jns
shl
iret
push
(bad)
push
xchg
add
and
cmp
mov
sub
jmp
pop
dec
es
or
(bad)
mov
popf
mov
sqrtps
sbb
ss
cmps
pop
dec
ds
xchg
movhps
adc
loopne
adc
cmp
jle
mov
dec
popf
aaa
jge
out
inc
xor
arpl
and
movs
push
push
mov
aam
push
xchg
mov
xor
repnz
dec
and
retf
sub
ret
cld
shl
xor
cs
mov
rol
dec
leave
mov
mov
inc
(bad)
jmp
cmp
mov
movs
mov
mov
or
xchg
push
jno
dec
cmps
adc
adc
out
retf
jns
out
das
mov
mov
movs
or
jbe
adc
xchg
push
and
push
fdiv
scas
ds
test
shr
dec
retf
sbb
addr16
push
pop
sbb
push
xor
xchg
aas
dec
push
pop
dec
cmps
push
push
ja
inc
sbb
call
sub
test
inc
retf
or
sbb
dec
cli
cli
sar
repz
shr
dec
int
test
sub
in
adc
loopne
adc
pop
dec
cmp
fisttp
xchg
(bad)
jmp
fld
push
retf
lock
mov
repnz
add
shl
adc
imul
aad
mov
cmp
shl
or
mov
(bad)
xor
prefetch
je
sub
retf
or
mov
jmp
in
jp
sbb
(bad)
pop
sti
adc
pop
lds
in
dec
add
mov
xor
sbb
jg
push
retf
outs
ret
adc
lea
test
and
or
jp
sbb
jmp
and
mov
out
pop
jnp
scas
adc
shr
call
sbb
retf
cdq
out
bnd
je
jb
sahf
mov
mov
pusha
cli
and
mov
sub
shl
cmps
add
push
into
xchg
and
xor
stos
sti
mov
jg
pop
(bad)
arpl
dec
push
scas
cld
mov
loop
not
lahf
aas
xchg
inc
jmp
jg
pop
out
addr16
aas
jnp
clc
cdq
xchg
cmc
lahf
sub
sub
mov
outs
test
adc
push
xchg
in
mul
sti
int3
mov
dec
imul
cmps
fistp
arpl
bswap
mov
inc
in
or
jmp
xchg
push
dec
push
jno
nop
pop
mov
dec
je
sub
xchg
mov
shl
cs
jnp
(bad)
dec
sub
xchg
js
inc
ficomp
cmps
sub
in
scas
push
retf
mov
xchg
mov
mov
sbb
sbb
jge
ins
sub
sahf
mov
or
daa
arpl
push
push
sub
cwde
inc
or
push
scas
jl
dec
mov
stc
push
add
sbb
fst
xchg
xor
jmp
xchg
xchg
mov
jmp
mov
mov
ins
jl
xor
xchg
inc
sub
inc
inc
sbb
call
and
sub
adc
xchg
pop
inc
xor
push
nop
sahf
sahf
out
push
add
push
into
cmc
stos
cmp
aas
add
test
mov
inc
or
cld
fs
xchg
dec
fs
jp
adc
mov
push
adc
mov
aad
inc
push
inc
push
stos
sub
dec
sub
movs
mov
pushf
mov
stos
add
add
ds
neg
xchg
inc
xchg
cmps
cmc
xchg
mov
(bad)
lahf
(bad)
stc
dec
or
pop
pusha
push
xor
sbb
mov
adc
lock
outs
pop
mov
sahf
inc
into
push
sub
cmp
daa
jle
pop
pop
in
xlat
jbe
call
mov
add
xchg
and
push
inc
and
les
xor
xchg
add
push
sbb
mov
xor
loop
int
fst
movs
jbe
jnp
jne
jl
dec
call
jns
sub
cs
das
ins
mov
sti
out
jp
jg
cmc
mov
cli
fidivr
out
cld
mov
jp
and
test
test
aad
mov
inc
test
and
outs
push
lock
and
adc
icebp
mov
fs
mov
cmp
aam
inc
push
rol
out
sbb
pop
push
sbb
pop
dec
les
ror
lds
cmp
scas
push
aam
sbb
push
mov
sub
push
cmp
xchg
mov
pop
xchg
pop
clc
sub
mov
cwde
dec
xor
or
sbb
out
fild
out
ror
(bad)
das
xor
repz
xchg
mov
aas
jne
loopne
push
pop
pop
aas
(bad)
movs
push
lea
ds
(bad)
jae
xor
dec
iret
data16
ficom
pop
and
xchg
shl
repz
out
mov
dec
sbb
in
cmovae
fadd
fcom
daa
add
iret
enter
and
inc
cmp
jno
lods
movs
fist
mov
xor
imul
dec
sbb
mov
jp
dec
jecxz
cmp
or
mov
int3
inc
add
gs
add
imul
add
mov
aam
and
add
xchg
cmp
fs
aaa
dec
xchg
and
call
imul
rcr
pusha
add
retf
or
push
(bad)
push
jl
(bad)
push
mov
mov
popa
mov
test
inc
imul
mov
mov
xor
xor
movs
mov
xchg
inc
xchg
and
das
push
xor
je
test
sbb
icebp
dec
cli
pop
fcom
xor
icebp
pop
shr
inc
mov
scas
repnz
jno
inc
sbb
stc
popa
js
hlt
out
pop
xor
push
repnz
sar
push
std
push
jle
jo
dec
les
cdq
dec
inc
jne
jb
adc
dec
ficomp
jp
aad
and
stc
pop
dec
ss
imul
push
push
sub
(bad)
jbe
push
repz
je
jne
jp
cmp
jno
(bad)
out
jg
scas
cmp
inc
jmp
(bad)
pushf
das
adc
pop
sbb
cmp
jo
lds
(bad)
jg
xchg
mov
fld
xchg
push
or
pop
and
mov
das
jle
xor
push
pop
fisttp
in
fdiv
mov
inc
mul
mov
jne
stc
push
inc
pop
mov
ficom
imul
mov
movs
(bad)
fcom
pop
mov
or
std
enter
ret
add
sub
lds
ja
push
cmp
or
lods
ds
idiv
in
sti
das
mov
stos
clc
cmp
inc
mov
bound
icebp
mov
fnstenv
aam
bound
bound
dec
sub
in
loopne
retf
sub
call
or
sub
pop
popa
sbb
cwde
add
pop
mov
fistp
push
sbb
jmp
ins
sub
cmc
lds
adc
mov
sbb
fidivr
aas
mov
daa
sysexit
and
mov
and
scas
aam
pop
shl
pop
push
stc
fs
inc
cdq
pop
push
add
imul
in
xlat
jg
pop
test
(bad)
sbb
push
push
fistp
sub
dec
pop
jmp
push
jp
clc
cdq
adc
lahf
ins
std
aam
hlt
(bad)
not
gs
inc
or
or
dec
add
pop
out
fmulp
dec
inc
dec
pop
dec
mov
sub
(bad)
daa
bound
xor
cld
cmps
cld
ret
hlt
shl
dec
xchg
sbb
add
and
xor
cmps
mov
mov
leave
pop
jae
aad
jle
fwait
ins
xlat
cmp
les
sar
sub
xchg
or
xor
daa
mov
push
dec
dec
inc
mov
out
pop
pop
xchg
sbb
jl
cmp
sbb
popa
scas
ss
push
mov
jmp
fwait
data16
test
pop
pop
jp
xchg
lods
mov
iret
imul
loopne
mov
jnp
xchg
xchg
aas
je
call
cli
les
aam
dec
int
inc
lds
stc
outs
ss
xchg
xlat
mov
cmp
lds
xor
xchg
cmp
sahf
nop
repz
repnz
cmp
(bad)
(bad)
dec
iret
push
int
and
out
iret
or
pop
mov
(bad)
leave
xchg
mov
fs
xor
xchg
jmp
fs
sbb
ins
stos
lea
cmp
jbe
scas
xchg
inc
xchg
jno
nop
sbb
fld
add
push
inc
jne
sbb
outs
icebp
out
addr16
retf
hlt
es
in
push
js
ror
mov
fnstsw
les
scas
mov
ror
jnp
js
cmp
sub
or
stos
xor
inc
inc
aas
dec
mov
push
sahf
or
hlt
or
aam
cmp
test
sbb
test
mov
push
sbb
cli
mov
test
sub
push
xor
mov
aad
fst
inc
cmp
jge
or
std
into
jnp
jae
imul
or
dec
xchg
mov
adc
xchg
jmp
cmc
mov
int
in
ds
mov
xchg
push
mov
push
dec
sub
mov
xchg
dec
cs
pop
adc
jg
gs
mov
shl
js
fwait
push
pop
loop
test
cwde
(bad)
loop
xor
add
lahf
aam
jo
retf
in
pop
data16
test
pop
fistp
sti
fdiv
neg
xor
pop
icebp
fdivr
mov
ror
adc
imul
(bad)
sub
push
stos
mov
xchg
mov
clc
not
(bad)
clc
mov
pop
aas
push
mov
aaa
push
stos
mov
dec
pushf
scas
(bad)
clc
inc
cld
xor
loop
fisubr
lds
cli
pop
int3
cmps
cmc
shl
push
retf
stos
and
mov
pop
sbb
repz
popf
fcom
dec
out
mov
(bad)
mov
nop
sub
sub
add
sahf
mov
cld
lods
sbb
loop
add
inc
mov
jp
push
and
ret
in
jge
scas
cmp
ja
movs
data16
push
xchg
test
xor
or
add
inc
add
(bad)
je
add
sbb
mul
xor
in
stos
fsubr
call
or
sub
add
push
mov
mov
pop
rol
gs
adc
cwde
aam
and
iret
lea
jne
popf
cdq
jp
mov
ss
popf
cmp
cdq
fmul
or
bound
cmps
nop
push
test
add
mov
or
jbe
push
fist
aam
arpl
sbb
mov
xlat
xchg
ja
fcom
test
popf
out
cmp
int
mov
push
lea
dec
xor
add
mov
jno
and
xchg
imul
sub
cmps
outs
cmp
add
xor
je
das
jne
push
xchg
mov
jmp
imul
jmp
pusha
das
or
push
xchg
pop
and
push
ret
xchg
add
aam
fldcw
ret
add
js
cmps
fmul
dec
jmp
dec
sub
or
clc
rol
mov
xchg
retf
lahf
dec
push
icebp
out
cmps
dec
loop
je
shr
jp
ror
mov
arpl
jmp
ds
outs
cli
cmp
and
or
mov
xchg
scas
mov
int
jno
out
mov
sahf
push
stos
cmp
nop
pusha
sbb
adc
test
mov
popa
jnp
pushf
jmp
mov
or
rcr
retf
xchg
mov
jl
xchg
add
push
xchg
cmp
mov
inc
sub
cs
jmp
movhlps
inc
out
push
adc
inc
ja
cmp
pop
jns
je
adc
call
in
(bad)
sbb
lods
and
(bad)
jnp
xor
loopne
jmp
(bad)
mov
pop
lods
in
xor
sub
or
cmp
jo
sbb
mov
lock
adc
cs
cmp
and
push
pop
sub
scas
out
adc
ror
mov
xchg
(bad)
mov
ja
in
add
and
xchg
adc
push
xchg
pop
cs
(bad)
dec
aad
or
dec
mul
icebp
mov
icebp
arpl
jp
shrd
out
mov
mov
push
push
and
cwde
aas
jmp
xor
xchg
dec
(bad)
aas
jl
stc
repz
pop
mov
mov
sahf
imul
(bad)
into
(bad)
jg
je
lahf
lahf
cmp
in
pop
cmp
aad
stc
cmps
push
ficomp
adc
mov
push
cmp
mov
repnz
push
cmp
ss
in
retf
or
mov
cmp
aas
mov
jecxz
out
sub
jnp
mov
jg
jge
lds
dec
add
inc
sub
pop
xchg
sbb
sahf
dec
hlt
je
mov
pop
pop
mov
pop
popa
popf
outs
sti
mov
cmp
into
popf
sbb
(bad)
and
xchg
ret
push
dec
(bad)
scas
test
scas
xchg
mov
add
mov
es
(bad)
and
rcl
out
stos
mov
xlat
imul
or
(bad)
jno
xor
sub
sub
pop
sbb
xchg
xor
jmp
outs
adc
ret
jne
(bad)
sti
(bad)
aad
jno
jns
sar
je
adc
mov
pop
xchg
test
ins
mov
movs
and
mov
ret
bound
ror
xchg
mov
inc
and
xchg
lea
mov
jne
lods
pusha
mov
das
not
je
fisttp
sbb
inc
mov
add
add
arpl
std
mov
out
mov
push
cdq
out
ds
(bad)
jne
cmp
add
in
inc
sub
ret
fwait
out
push
int3
mov
jmp
jnp
inc
sub
out
xchg
scas
ins
sub
lods
fwait
scas
int
or
shr
jmp
stos
stc
(bad)
ret
aad
stc
and
ss
xor
outs
movs
mov
fsub
lds
mov
mov
pop
cdq
jg
repnz
and
mov
outs
dec
js
push
mov
sub
push
cmp
shl
(bad)
je
hlt
call
int3
or
call
sbb
scas
mov
sbb
adc
mov
call
inc
fimul
in
mov
mov
mov
add
or
test
cmp
je
and
jmp
fs
out
inc
(bad)
jbe
jbe
jne
push
xchg
jae
neg
jle
loope
scas
popf
mov
lahf
sahf
lods
fnstcw
lods
aam
push
out
out
lods
cmp
out
mov
cmc
jne
shl
icebp
call
push
inc
add
add
das
int3
lds
sbb
mov
sbb
neg
pop
lods
mov
inc
cmp
sub
icebp
int3
daa
test
ins
sub
mov
cs
xchg
jmp
and
cmp
adc
cmp
jmp
(bad)
mov
lock
mov
mov
jl
sub
sar
into
fidiv
mov
fld
lea
mov
xacquire
pop
jl
xor
add
sbb
push
pop
cmp
out
mov
push
clc
add
push
sbb
jmp
jle
inc
std
push
push
sub
mov
jmp
leave
(bad)
neg
sahf
das
test
and
mov
jmp
retf
je
push
sub
jnp
xchg
(bad)
mov
mov
cwde
fstp
std
in
aas
mov
movs
retf
dec
popf
retf
jnp
mov
push
xor
mov
adc
add
loopne
sbb
add
mov
mov
cmp
sti
stos
test
enter
leave
dec
fs
bound
sub
add
adc
les
pop
pop
push
dec
or
call
sbb
cmp
pop
ret
(bad)
out
leave
retf
sbb
inc
iret
dec
in
jb
test
cmp
movs
lods
sub
add
and
lahf
push
call
add
mov
add
cmps
data16
sbb
mov
sub
push
ret
dec
push
movs
mov
xchg
mov
int
push
es
adc
or
enter
arpl
bound
mov
or
into
shl
cmps
and
fcmovnbe
cmp
inc
jae
and
pop
cmc
je
pop
cmp
adc
push
(bad)
jmp
adc
imul
pop
adc
faddp
(bad)
ds
xor
cmp
xor
clc
(bad)
mov
and
add
gs
lods
ret
call
pop
mov
gs
add
cmp
fcomp
mov
fcmovnb
pop
adc
sbb
or
jmp
fxch
aam
aaa
pop
pop
call
inc
outs
pushf
call
xchg
mov
inc
pusha
daa
ja
in
fimul
sub
retf
jnp
adc
std
mov
call
loopne
push
add
aas
jae
enter
xor
(bad)
into
jbe
(bad)
ret
mov
mov
dec
jne
jmp
not
pop
push
pop
imul
push
hlt
sbb
mov
lods
jecxz
fsub
and
and
loope
movs
or
repnz
imul
mov
xor
movs
xchg
popf
int
or
push
pop
enter
stc
mov
(bad)
stos
pop
call
js
cmp
sbb
jmp
jae
repnz
cmc
inc
push
mov
xlat
ds
repz
mov
sahf
test
mov
repz
or
in
aam
retf
push
sub
jns
hlt
push
leave
mov
and
mov
dec
fisub
jmp
je
mov
inc
and
jb
mov
pop
clc
inc
in
out
add
stc
sbb
out
pop
scas
jle
pop
out
(bad)
jecxz
jle
std
jg
loope
jle
ins
cmc
loope
call
int3
lea
test
cs
popa
jbe
cmp
xor
retf
jp
sbb
jp
jecxz
(bad)
jbe
fistp
cli
out
pop
push
out
in
cmps
das
ror
jns
iret
fistp
push
cld
jmp
(bad)
jmp
(bad)
xchg
call
std
pop
cmp
jns
mov
dec
mov
mov
inc
mov
push
add
jae
bound
nop
aam
inc
inc
jb
(bad)
push
push
adc
data16
inc
xor
sub
push
xor
xlat
jmp
inc
or
in
cmp
cld
xchg
mov
popf
fnop
cdq
cvtps2pi
inc
mov
sub
loopne
pop
leave
les
dec
repnz
pusha
jno
jmp
ins
arpl
or
dec
sbb
cmp
push
sbb
sub
stc
inc
inc
jae
mov
or
or
sbb
dec
add
jmp
or
and
enter
repz
mov
sbb
xchg
ja
or
and
pop
cli
scas
in
cmp
aam
aas
aas
push
inc
xchg
and
push
cs
arpl
mov
mov
daa
inc
pinsrw
xchg
movs
mov
adc
dec
ss
xor
sbb
mov
aam
mov
bound
jp
mov
ins
scas
cdq
xchg
je
mov
mov
bound
into
out
mov
mov
adc
loopne
inc
arpl
inc
pushf
inc
add
push
orps
fs
dec
retf
cmc
fidiv
mov
lea
sub
cs
in
xor
jae
xchg
and
lock
jmp
movs
daa
push
repnz
fs
ret
imul
scas
jmp
or
mov
test
jbe
mov
xchg
mov
arpl
and
xchg
sub
(bad)
out
adc
and
aaa
lods
movs
push
jg
mov
in
adc
call
xor
clc
pop
add
mov
add
(bad)
lss
sti
pop
retf
jecxz
ror
adc
and
mov
cs
mov
rcl
xchg
mov
xchg
and
cwde
push
push
pop
pop
mov
mov
(bad)
lock
dec
fs
mov
stos
adc
call
cmp
push
fsubrp
inc
xor
dec
push
scas
cwde
scas
fwait
test
push
jne
xlat
mov
mov
stos
dec
(bad)
mov
push
sub
in
gs
pop
sti
lock
fcom
test
dec
test
push
cmp
dec
adc
sbb
jo
shl
imul
fs
test
mov
push
dec
lock
adc
es
pop
sbb
arpl
adc
xor
movs
pusha
and
cmp
fldcw
sbb
cmp
xchg
dec
push
pushf
pop
iret
push
fidiv
jnp
sub
popf
dec
dec
sub
cld
iret
scas
pop
jns
sar
pop
repz
cmp
test
shl
int
test
mov
xchg
push
xchg
lds
stos
aas
jg
stc
movs
mov
ds
idiv
pop
call
mov
out
dec
pop
mov
xchg
call
jp
jne
std
mov
lea
out
sbb
div
(bad)
jge
inc
sub
mov
dec
imul
push
pop
sahf
std
or
dec
xchg
in
icebp
cmp
jns
pop
lock
xlat
loope
dec
sub
add
adc
shl
loopne
mov
repz
mov
pop
test
mov
fisttp
stos
call
dec
pop
sbb
and
loope
mov
push
mov
xchg
jns
imul
push
mov
cmp
test
xor
xor
test
sbb
inc
movs
je
jle
pushf
mov
cmp
dec
sar
fild
icebp
mov
loope
int
cmp
jge
mov
mov
xchg
xchg
out
sbb
ret
xchg
xchg
dec
sub
inc
jae
hlt
sbb
mov
pop
enter
mov
pop
fs
and
xchg
sbb
daa
mov
stc
or
inc
jecxz
adc
xor
scas
sbb
xor
jbe
or
stc
popf
push
dec
inc
adc
jecxz
cmp
fs
dec
jo
pop
push
jb
push
je
cs
inc
cmp
pop
xor
sbb
xchg
or
repnz
mov
(bad)
aad
fstp
xor
out
into
and
iret
pop
retf
lahf
stos
fscale
inc
sub
loop
dec
jecxz
bound
mov
data16
test
lods
cmp
xor
adc
dec
adc
cmp
nop
call
sbb
pop
jmp
jne
dec
cwde
cld
cmp
mov
pop
inc
test
les
xchg
lea
mov
hlt
push
mov
and
jecxz
xlat
jp
sar
mov
lods
test
add
enter
lock
test
clc
sar
stc
into
scas
addr16
fcmovnbe
and
call
movs
rol
int3
pop
add
ror
jo
or
sub
stos
xchg
mov
int3
mov
test
or
fisttp
sahf
mov
pop
push
in
add
adc
mov
out
cdq
push
stos
sti
cmp
ret
pop
test
(bad)
cmp
ror
cmp
push
mov
pop
push
push
add
mov
cmp
aaa
xchg
lds
mov
jae
scas
pop
fsub
mov
and
push
adc
mov
ins
push
retf
push
call
cmp
ds
or
xor
int3
repz
inc
dec
cmp
aaa
push
in
outs
fstp
outs
mov
inc
sbb
icebp
sub
adc
or
enter
and
xchg
mov
or
in
mov
pop
cmp
in
in
iret
mov
jmp
repnz
fistp
(bad)
pop
in
cld
shl
out
pushf
stos
jle
mov
leave
dec
lahf
mov
mov
push
jns
imul
mov
lahf
fstp
mov
mov
sub
xor
add
movs
push
ins
mov
inc
jmp
cmps
inc
retf
jns
test
dec
lds
cdq
(bad)
test
cmp
popa
inc
mov
fsubr
adc
or
sub
mov
sub
ret
and
push
cs
xor
jbe
push
push
or
push
mov
adc
xchg
adc
add
mov
jg
movs
mov
cld
out
xor
movs
and
sbb
test
pop
and
fldl2t
dec
es
jl
data16
mov
arpl
mov
fdiv
cmp
mov
(bad)
shl
or
hlt
test
mov
xchg
int3
mov
push
imul
mov
xor
push
jb
or
sub
inc
aad
lds
and
retf
and
push
pop
lods
mov
push
push
fimul
dec
jle
jg
dec
jne
jmp
pop
movs
loop
jmp
aas
inc
adc
sub
pop
sub
sub
aad
pop
sbb
daa
and
jmp
push
cmc
pop
es
mov
je
adc
fwait
in
inc
pop
or
jle
jbe
shl
popf
in
mov
scas
adc
adc
(bad)
sbb
jo
test
xchg
hlt
fmul
popf
pop
movs
sbb
sub
gs
(bad)
fmul
add
sbb
xor
mov
fdiv
into
adc
push
cmps
xchg
dec
(bad)
pop
sbb
mov
popf
ret
bound
sbb
call
xchg
adc
popfw
idiv
js
out
mov
push
push
ja
test
mul
jb
xor
mov
fimul
call
and
les
inc
aam
sar
div
mov
xor
push
dec
fist
mov
jbe
bound
pop
mov
jae
sub
dec
adc
push
stos
and
xchg
imul
inc
xor
push
jg
jle
pop
icebp
loop
jb
sbb
das
jecxz
mov
jno
mov
sbb
into
mov
lods
mov
pop
xchg
xor
aas
mov
je
sti
bound
push
and
inc
xor
or
fwait
mov
mov
xchg
xor
je
push
cmc
repz
retf
push
cmp
mov
dec
push
pusha
cmp
lea
sbb
or
mov
xor
sahf
inc
push
aaa
stos
pushf
or
repz
je
bound
ins
repz
cmc
lods
dec
mov
mov
cdq
jns
jnp
cld
(bad)
das
fdivr
mov
loopne
lea
jns
mov
inc
fld
push
dec
es
mov
mov
mov
mov
imul
into
cmps
into
adc
enter
fstp
out
dec
mov
call
addr16
int3
xor
inc
sbb
jge
push
inc
push
aas
aad
or
icebp
jns
adc
pop
in
cmp
(bad)
sub
mov
push
loop
iret
sub
dec
scas
sti
push
push
data16
push
cmps
pop
jne
arpl
sbb
add
jg
sub
push
dec
lea
and
adc
xchg
into
bound
js
ins
fnstcw
cmp
fsubr
outs
mov
adc
daa
es
(bad)
jmp
sub
pop
(bad)
xchg
std
push
push
cmp
push
out
mov
out
mov
xchg
idiv
cmp
pop
(bad)
jb
jno
dec
pop
sahf
xor
ret
sub
inc
jg
dec
cmp
ror
xchg
pop
add
mov
(bad)
push
daa
adc
ss
and
repz
mov
ins
mov
pop
sbb
or
xchg
dec
mov
out
xchg
add
push
xchg
inc
sbb
xchg
pop
pop
and
sar
nop
or
bound
cmp
cmp
in
cdq
push
gs
pop
clc
int
dec
push
fmul
dec
sbb
mov
push
mov
xchg
jnp
pop
aam
cli
in
out
sub
push
xor
jns
dec
push
cmps
sbb
and
mov
cs
test
push
and
xchg
mov
xor
xor
loop
test
sub
arpl
pop
push
bound
bound
call
xchg
fdiv
imul
int3
jbe
xchg
jl
xor
dec
inc
sub
movs
in
js
fmul
aaa
mov
jne
aad
stos
(bad)
int3
inc
or
jbe
(bad)
sub
sub
sbb
inc
cmps
mov
popf
mov
call
inc
sbb
stos
mov
xchg
cmc
movs
and
data16
mov
xchg
sbb
sub
pop
out
es
mov
jbe
jns
daa
bound
add
(bad)
call
sub
push
cmps
jns
dec
out
dec
sbb
xor
xlat
push
sbb
stos
scas
imul
fmul
gs
jg
out
jge
fistp
ins
in
push
xchg
jecxz
sbb
imul
mov
repnz
ss
in
stc
rcr
add
sub
mov
fs
fcomp
in
aad
std
xor
and
pop
adc
mov
repz
popf
mov
retf
cdq
ja
push
pop
push
cmps
fwait
jmp
(bad)
and
xchg
lds
int
das
push
pop
xor
cmps
sbb
fimul
jno
or
and
push
mov
mov
mov
mov
mov
hlt
or
mov
scas
xlat
ja
pop
pop
push
sbb
outs
or
adc
sub
imul
pop
(bad)
js
mov
or
inc
xor
add
adc
or
inc
test
xchg
mov
mov
pop
xor
call
mov
fistp
jecxz
(bad)
in
jmp
mov
stos
js
xor
out
or
adc
out
xor
mov
lahf
mov
push
repnz
push
xchg
aas
mov
push
(bad)
sti
fstp
js
icebp
pop
pop
jmp
je
dec
sti
ret
jae
push
lock
(bad)
stc
les
lahf
mov
lds
lods
(bad)
rol
xor
pop
mov
mov
sbb
outs
mul
sub
jmp
adc
dec
(bad)
xchg
pusha
js
xchg
inc
mov
jne
int
dec
dec
jmp
cld
lahf
cdq
cmp
ds
mov
xor
sub
sub
mov
sub
call
rcr
cmp
clc
outs
adc
adc
add
cmp
xchg
(bad)
mov
ret
sbb
inc
inc
mov
call
inc
mov
lock
fst
jp
push
clc
mov
out
(bad)
ja
bswap
add
inc
mov
push
xchg
pop
fs
xchg
cmp
xchg
jno
sbb
daa
jle
aaa
cli
repnz
pop
mov
shl
test
fwait
pop
into
retf
cmp
iret
push
repz
pop
ins
fistp
and
mov
xor
rol
aaa
adc
outs
mov
mov
xchg
push
cmc
jmp
push
inc
cli
rol
pushf
shr
sti
loop
rol
sbb
iret
push
retf
and
xor
sbb
pushf
inc
retf
loopne
repnz
cmp
popf
movs
in
dec
inc
enter
stos
not
push
dec
mov
or
add
shl
pop
fnstsw
dec
arpl
movs
pop
push
pusha
ror
rcl
mov
xchg
fsubr
and
push
mov
std
inc
xchg
test
icebp
xor
sti
in
adc
cs
sbb
scas
sahf
nop
mov
xor
imul
rol
aam
adc
test
ficomp
nop
jb
(bad)
out
sar
push
sbb
mov
hlt
jmp
out
ins
jg
mov
fmul
call
in
mov
jmp
mov
push
inc
aad
pop
jg
xchg
and
push
rcl
push
stos
out
fadd
ss
lods
push
adc
xchg
and
in
cmp
sbb
sbb
out
mov
sub
fwait
cdq
stos
push
and
push
ins
pop
jge
xor
lods
jae
push
sub
loopne
mov
push
out
dec
aad
jl
rcr
addr16
sub
ret
repz
fstp
sub
mov
mov
and
aam
aad
xor
push
aad
dec
inc
cmp
retf
(bad)
jge
iret
outs
jne
das
xchg
sbb
aam
push
jecxz
inc
lds
mov
repnz
xor
mov
ins
fistp
mov
cmps
repz
lock
xchg
sbb
add
and
test
push
imul
ret
mov
jno
rol
adc
mov
jecxz
lock
fcomp
fsub
bound
xchg
xchg
jl
push
arpl
sbb
and
scas
and
jbe
xor
mov
inc
xor
xor
fisubr
(bad)
rol
popf
scas
test
cli
shr
mov
push
fidivr
jae
mov
clc
stos
scas
cmp
call
cmps
cmps
push
jmp
mov
and
test
outs
mov
pop
mov
ja
push
(bad)
in
sbb
loop
mov
mov
call
icebp
hlt
aas
fistp
adc
ds
cli
icebp
repz
inc
sti
stc
or
ja
js
inc
arpl
xchg
call
push
or
(bad)
pop
xchg
cmps
sbb
cmp
cmp
aas
retf
std
adc
xor
xor
shl
cmp
in
call
ret
(bad)
adc
in
daa
mov
aas
push
pop
jo
add
mov
lahf
loopne
enter
clc
aas
sub
movs
inc
dec
jecxz
inc
arpl
scas
std
in
outs
fcom
jno
sbb
adc
inc
imul
mov
aas
stc
sbb
rcl
add
out
mov
movs
lods
into
mov
add
or
xor
push
xchg
lock
push
cli
fmul
add
push
enter
ror
in
sbb
xchg
inc
loopne
jecxz
daa
cmp
push
xchg
mov
hlt
aad
or
dec
das
xchg
add
lods
sub
pop
mov
push
dec
shl
jl
leave
push
dec
out
add
mov
aas
jp
(bad)
ins
jbe
jno
dec
into
push
xchg
in
cmp
loope
adc
sbb
loope
dec
out
dec
sub
stos
int3
clc
cmps
jle
and
ja
je
sub
stc
sub
mov
adc
inc
add
jmp
pmullw
push
int3
js
lahf
pandn
or
fisttp
out
out
push
push
dec
stc
or
js
and
mov
lds
pop
and
daa
xchg
enter
popf
hlt
(bad)
jmp
or
pop
aaa
std
sbb
call
jmp
xchg
add
call
sbb
cdq
push
inc
sbb
add
push
popa
or
sbb
lock
sbb
aaa
or
bound
cld
stos
clc
pusha
and
test
pop
jmp
pop
addr16
mov
xchg
scas
xor
dec
dec
cs
mov
mul
sub
xchg
xchg
lock
popa
mov
lods
nop
loope
push
jmp
outs
fidivr
xor
in
iret
inc
jmp
imul
adc
scas
add
jmp
jmp
pop
ss
mov
xchg
(bad)
into
gs
sbb
nop
push
cs
cwde
es
in
sar
scas
sbb
xor
mov
xchg
rol
cs
fnstcw
adc
jns
xchg
cmp
xor
push
jp
jo
les
push
imul
loop
inc
sbb
ins
mov
sub
sbb
push
jmp
lods
in
call
xchg
jp
xor
(bad)
jmp
sub
dec
out
mov
push
ret
inc
pop
dec
cdq
cs
or
fld
jb
push
xor
sbb
in
xor
xchg
cmps
into
dec
add
fs
push
jmp
dec
and
out
pop
jne
push
mov
inc
push
ret
popf
ds
mov
mov
ret
jnp
push
dec
and
rcl
push
push
fnstsw
lock
push
stos
into
icebp
aam
into
repnz
into
inc
adc
fdivr
aad
jno
ds
pop
fwait
mov
call
popf
or
xchg
(bad)
call
js
cmp
mov
jb
ss
loopne
rol
or
or
sub
mov
cli
adc
xor
mov
add
sub
fnstenv
xchg
in
fcom
cli
and
push
or
cmp
xor
test
sbb
mov
mov
pmaxsw
jl
cli
and
fisubr
lahf
lea
cmp
mov
sti
(bad)
jnp
stc
aaa
pmullw
test
pop
pop
mov
call
or
vpcmpeqw
and
call
or
std
je
retf
fucomi
ucomiss
jmp
adc
repz
ret
pop
std
jg
mov
scas
das
(bad)
(bad)
call
mov
sti
ret
dec
lods
fistp
push
jae
clc
in
rcl
lods
std
cld
aaa
aaa
rcr
(bad)
fwait
sub
ficom
out
icebp
in
and
lods
hlt
test
(bad)
mov
xchg
test
or
jmp
xor
dec
pop
enter
call
les
out
xchg
cdq
jmp
loop
popf
call
das
iret
stc
xchg
sti
jecxz
inc
jo
or
mov
add
rol
push
jl
dec
test
movs
icebp
stos
mov
ror
mov
and
xor
and
hlt
and
sub
or
mov
bound
ins
je
sub
push
outs
movs
push
sbb
fmul
mov
cwde
test
popa
push
or
repnz
fld
and
xchg
sub
iret
pop
jecxz
icebp
out
sub
movs
ror
xchg
shl
xor
xchg
push
shl
ins
lods
enter
imul
adc
pop
pop
mov
push
out
in
push
ret
mov
mov
(bad)
test
aam
mov
sbb
aas
jo
(bad)
lds
inc
push
mov
mov
pushf
pop
add
ds
into
fsubr
mov
int
scas
xchg
jne
out
shl
pop
addr16
ret
xchg
push
int
scas
(bad)
(bad)
outs
and
imul
fwait
jmp
xor
jns
pop
inc
loope
sar
cdq
shl
mov
xchg
adc
sbb
push
stos
jecxz
in
iret
cdq
in
push
mov
nop
icebp
shr
xchg
aad
cld
jbe
imul
fild
xor
xor
and
jne
in
mov
sbb
ret
shl
pop
inc
shr
pop
lds
fisttp
inc
mov
add
mov
in
test
scas
mov
mul
out
(bad)
pusha
lea
test
mov
cmp
mov
pop
cmp
sub
push
ss
into
push
cmp
pop
push
pop
mov
cmp
aas
dec
mov
xchg
fbstp
and
xor
and
inc
call
mov
push
pushf
clc
and
lea
and
pushf
mov
xor
cdq
or
pop
fwait
out
dec
ja
and
mov
retf
imul
push
adc
push
inc
and
jne
(bad)
mov
jmp
stos
inc
pusha
or
sub
cdq
and
pop
sub
pop
add
in
mov
and
cmp
sub
outs
cmc
mov
ror
mov
jmp
movs
lods
push
xor
push
(bad)
sub
jl
push
not
ficom
movs
pop
mov
(bad)
mov
fsqrt
pop
sbb
fucomi
icebp
mov
and
jne
pop
leave
xor
in
dec
mov
fidiv
sahf
jo
push
movs
pushf
mov
pop
js
(bad)
and
cmp
ins
in
mov
and
xchg
test
mov
xor
cmps
dec
push
adc
cmp
retf
test
jp
iret
fisub
add
inc
jp
(bad)
(bad)
xor
sbb
fcomp
mov
daa
xchg
mov
xchg
rol
mov
add
adc
add
dec
adc
ror
jno
sbb
imul
cmp
repz
push
pop
dec
bound
daa
ret
scas
xchg
int3
or
and
aaa
jns
loop
mov
and
mov
xor
sbb
cmps
(bad)
cmc
repnz
(bad)
mov
ja
aas
jge
cmc
mov
mov
sti
fwait
mov
or
cwde
or
xchg
call
xchg
movs
int3
sub
repnz
(bad)
(bad)
fxtract
dec
outs
imul
test
(bad)
test
int3
mov
outs
jmp
leave
aad
pop
pop
jmp
bound
sub
jnp
jmp
std
cli
stc
cli
outs
popf
stos
(bad)
fidiv
mov
fnsave
xlat
xchg
push
cdq
shr
xor
jp
fldln2
aas
into
sub
jp
lahf
xor
jecxz
pop
sbb
bound
pop
outs
mov
xchg
pop
and
fsub
sub
cmp
jmp
or
std
jo
xchg
sbb
scas
sti
scas
sbb
sub
fistp
xchg
and
push
xor
loop
lods
sbb
cmp
xor
mov
jo
pop
mov
inc
push
and
inc
pop
sub
sub
test
mov
retf
call
xchg
cs
outs
loop
inc
add
inc
in
les
jbe
xor
ins
push
movs
and
xor
ins
push
add
mov
mov
push
xchg
test
adc
inc
test
and
ret
mov
inc
mov
push
sahf
clc
retf
add
sti
sub
dec
jmp
mov
pop
xchg
stos
mov
out
and
test
adc
inc
xchg
stos
push
add
retf
mov
xchg
test
pushf
add
mov
(bad)
imul
jl
mov
cmp
sbb
scas
aas
mov
pop
push
cmp
xor
dec
(bad)
scas
in
or
add
xchg
pop
mov
push
push
pop
fstp
push
jbe
test
test
outs
sbb
pop
cli
sbb
push
arpl
push
retf
sub
mov
inc
sahf
retf
rcl
sub
ror
sbb
nop
jecxz
dec
sub
mov
addr16
call
push
je
jmp
sbb
int3
lods
(bad)
test
test
inc
int3
push
outs
mov
sbb
es
int3
shl
fs
xor
adc
inc
sbb
sbb
ds
sbb
call
aaa
pushw
xchg
sbb
mov
rcl
sahf
out
clc
dec
ret
je
push
enter
xchg
mov
adc
cmp
aad
pop
int3
cdq
dec
push
cmps
mov
lods
jno
leave
(bad)
les
dec
fst
cmp
pop
push
or
cmp
dec
test
mov
adc
xor
mov
sbb
ret
push
bound
xchg
rol
fwait
jl
ins
out
icebp
lods
sbb
fdiv
les
adc
das
ror
cs
cdq
mov
shl
mov
test
int
mov
jnp
and
arpl
movs
and
pop
imul
outs
(bad)
mov
push
jecxz
test
test
jecxz
shl
sbb
out
push
jl
adc
mov
push
jmp
pop
jnp
xchg
outs
outs
in
test
test
sub
ret
loopne
int
mov
shl
inc
mov
jge
mov
clc
mov
sbb
add
or
sar
inc
xlat
mov
sbb
jl
ja
jae
sbb
pop
jb
xor
xor
and
mov
(bad)
fstp
mov
adc
push
loope
ds
ffreep
sbb
call
mov
in
add
inc
mov
add
(bad)
fucomi
adc
xor
cmp
xchg
fwait
int
stc
dec
mov
ins
fcmovnb
stos
in
or
push
dec
int
ret
stos
iret
pusha
and
mov
pop
jg
pop
or
test
lahf
retf
or
mov
out
mov
sub
sbb
mov
lahf
mov
popa
call
and
cmp
ret
jbe
ret
push
xor
idiv
das
int3
(bad)
(bad)
sbb
neg
fnsave
clc
mov
idiv
clc
push
ucomiss
hlt
push
(bad)
fdivrp
div
std
aas
mov
mov
(bad)
movs
es
dec
jg
imul
aam
mov
call
cmp
aaa
popf
push
fs
shl
movs
test
xchg
cs
xor
pop
mov
jle
pop
sbb
adc
out
add
ins
mov
idiv
jecxz
(bad)
cmps
jb
xor
cli
and
(bad)
popf
mov
mov
enter
mov
fwait
movs
mov
and
dec
data16
dec
popf
out
push
push
inc
dec
lods
outs
fmul
mov
sbb
adc
sub
popf
hlt
test
xchg
aas
or
push
test
xor
mov
xchg
jge
mov
and
dec
pop
jbe
xor
int3
push
pop
mov
test
fcom
pop
cmp
dec
xlat
pop
imul
fstp
iret
fld
push
lock
dec
out
call
sub
lea
enter
adc
mov
xchg
push
es
pop
xor
loopne
mov
mov
in
clc
ds
or
pop
push
fwait
mov
sbb
cmp
int
clc
cmps
adc
imul
data16
ja
ret
mov
ret
je
cli
dec
shl
adc
push
fbstp
sbb
imul
xor
xchg
sbb
mov
lahf
mov
push
ins
pop
fnstenv
movs
call
idiv
(bad)
jmp
mov
je
in
icebp
add
leave
jne
pop
xor
xchg
xchg
mov
pop
sub
add
jle
clc
f2xm1
cmps
cmp
mov
mov
test
test
add
shl
sbb
data16
cmp
mov
lods
and
in
daa
fs
rcl
shl
(bad)
sub
fs
mov
dec
add
and
cs
int
pop
dec
movs
adc
ror
stos
xchg
mov
xor
cmps
sbb
inc
sub
outs
fstp
pop
xor
jne
sub
gs
ins
pop
std
shl
fsubr
cmp
xchg
sub
iret
mov
(bad)
ret
lds
mov
shr
jb
or
adc
mov
aam
shl
or
stos
inc
out
movs
inc
xor
es
cmp
cmc
jp
aam
push
fisttp
xor
movs
add
adc
test
or
stos
jne
push
jmp
cmp
mov
pop
sahf
sub
jmp
sbb
stos
test
or
popf
jecxz
mov
movs
mov
scas
test
jnp
repz
or
xor
inc
jp
add
int3
retf
push
xchg
sub
mov
xor
stos
xchg
dec
cmc
out
stc
xchg
and
jo
inc
sar
cli
out
jp
sub
mov
dec
leave
adc
ret
push
cmp
nop
inc
xchg
out
lock
mov
cmp
scas
dec
jo
lock
adc
sbb
daa
pop
xor
push
pop
sbb
ins
loopne
xchg
clc
clc
daa
loope
aaa
adc
enter
fiadd
xchg
xchg
mov
fnsave
xlat
or
out
(bad)
cmp
xor
ss
xor
inc
mov
mov
adc
sbb
push
test
adc
inc
outs
int
ret
cdq
pop
xor
clc
ret
cmp
stos
test
pop
and
dec
inc
mov
xchg
adc
mov
loop
and
add
enter
mov
mov
(bad)
xchg
retf
push
ds
std
daa
ja
std
aas
pop
sahf
jnp
pop
out
sti
xchg
inc
jbe
dec
adc
or
and
sbb
popf
mov
or
ins
stos
vmaxsd
out
fdiv
jle
(bad)
std
not
(bad)
pop
in
cld
jmp
mov
pop
push
jg
imul
outs
pop
add
xor
dec
sbb
stc
aaa
ja
std
stos
cmp
lahf
mov
shr
outs
inc
fnstcw
jae
dec
sbb
mov
stos
adc
cmp
gs
or
lea
xor
out
mov
shl
xchg
mov
xchg
popf
xchg
clc
ficomp
int3
cmc
ret
mov
mov
jecxz
cmps
pop
iret
jae
and
pop
mov
jno
fwait
push
mov
xchg
xor
dec
popf
out
mov
gs
pop
xor
dec
stos
and
pop
fisubr
xor
daa
dec
aaa
retf
cmps
jmp
mov
fs
mov
sub
bound
(bad)
add
lock
sbb
xor
dec
jl
jg
mov
cmp
test
cwde
pop
std
clc
sbb
jne
and
pop
xchg
jbe
cs
daa
cwde
inc
dec
in
fild
and
adc
leave
inc
mov
xchg
inc
push
xor
mov
xlat
jnp
call
fwait
dec
dec
repnz
cmp
xor
int
mov
(bad)
ss
repz
dec
(bad)
xchg
(bad)
pushf
arpl
into
fidiv
cs
jl
mov
or
out
xchg
movs
jmp
dec
fcmovbe
lods
mov
xor
xchg
cmp
pop
and
cmp
xor
cmp
popaw
fidiv
cmc
into
arpl
sahf
pandn
stc
stos
stc
hlt
vpunpcklbw
xor
aaa
int3
jns
bound
imul
inc
or
(bad)
mov
push
xchg
or
pop
ins
mov
(bad)
dec
ja
cmp
clc
xor
sahf
in
push
rcl
cmp
cmps
cmp
mov
mov
inc
mov
push
fadd
cmp
retfw
mov
push
ins
pop
and
xor
adc
sub
adc
mov
fcmovnbe
lds
sbb
out
jbe
xor
cmps
cmp
adc
mov
ror
into
and
int
push
stos
sub
fisubr
adc
pop
fwait
cdq
jl
mov
dec
ret
xchg
adc
mov
sti
sub
pop
and
sub
push
dec
(bad)
pushf
adc
pop
mov
jbe
jp
sub
movs
jmp
in
jnp
call
shr
inc
and
jge
(bad)
retf
hlt
add
xchg
clc
int3
loop
push
scas
(bad)
inc
jo
cmp
adc
dec
inc
jl
pop
pop
xchg
fwait
out
dec
out
mov
outs
or
inc
test
inc
mov
aam
or
stos
push
cmp
out
je
out
cwde
ss
icebp
and
inc
mov
mov
call
sub
out
jb
int
out
sub
mov
popf
bound
icebp
sbb
inc
mov
ret
or
loopne
add
push
popf
sbb
add
test
dec
cmp
je
xchg
arpl
iret
test
rcr
or
cmps
xchg
jnp
ret
xor
mov
adc
mov
ins
sub
dec
test
or
or
cmps
push
xor
aad
cmp
pop
or
dec
stos
inc
nop
sub
scas
ins
dec
bound
jns
inc
sbb
pop
int3
cmp
out
mov
in
fld
ficom
push
pop
xor
xor
adc
cmp
push
test
out
mov
nop
ins
inc
mov
adc
push
movs
mov
cmp
or
cmp
inc
adc
fcmovne
fidiv
lahf
jl
jp
cmps
cmp
iret
sar
mov
fcom
(bad)
jg
aad
mov
aam
dec
cmp
jbe
dec
gs
mov
(bad)
(bad)
sub
inc
dec
jbe
(bad)
pop
cld
mov
(bad)
scas
popf
lods
jl
jl
imul
loope
mov
jo
aas
mov
cmp
jecxz
sti
jg
dec
out
das
xor
fist
push
ja
lds
(bad)
std
fst
mov
outs
out
jle
push
push
retf
leave
test
add
pop
jmp
sub
out
imul
int3
jne
dec
jb
imul
scas
clc
or
retf
inc
sbb
clc
stc
je
mov
outs
jne
sbb
ficomp
(bad)
and
inc
cmp
cmc
add
movs
popfw
imul
lds
push
enter
mov
mov
(bad)
into
(bad)
lods
ins
fisttp
in
in
sbb
arpl
cmp
in
push
in
scas
push
jno
xchg
and
fld
mov
ficomp
movs
cs
(bad)
mov
pop
rcl
pop
in
out
cmp
add
pusha
pop
jl
retf
nop
repz
jbe
mov
ins
into
inc
fisttp
and
or
pop
mov
repnz
adc
ret
push
mov
xchg
aam
add
pushf
imul
sbb
push
sub
(bad)
sbb
dec
xchg
add
xchg
gs
adc
stos
test
in
inc
enter
push
hlt
stos
pop
ds
ss
std
xchg
(bad)
mov
shr
mov
aam
adc
fdiv
or
adc
mov
add
xor
jae
jne
push
ja
jmp
cmps
std
ja
out
outs
sti
xor
retf
sahf
mov
mov
jnp
sub
test
ret
xchg
test
cdq
shl
emms
sbb
push
add
cmps
sar
iret
hlt
jbe
outs
shl
fisub
outs
popf
ret
je
sbb
and
and
mov
add
and
and
das
add
sub
sub
in
mov
inc
sar
cmps
push
add
xchg
mov
les
mov
mov
leave
inc
ret
jmp
push
jmp
cmps
cld
popf
mov
xchg
je
ret
jbe
add
mul
ins
not
mov
mov
jmp
scas
and
out
daa
loopne
sub
mov
mov
lock
mov
ret
xor
outs
(bad)
scas
je
mov
dec
pop
hlt
fsub
lock
pop
retf
es
mov
fisttp
leave
add
rol
icebp
push
bound
ror
jae
dec
push
inc
cmp
mov
inc
push
mov
in
movs
hlt
dec
test
xor
loopne
stos
retf
jns
sbb
out
mov
pop
push
out
sub
inc
fnstcw
test
jns
xchg
dec
mov
aam
ins
jecxz
and
jp
push
mov
and
xchg
pop
pusha
inc
int
call
add
cmp
pop
pop
cmps
std
cmp
sar
out
push
mov
mov
std
or
mov
cmps
mov
test
pop
mov
xor
xlat
or
mov
inc
or
adc
jle
adc
jg
lea
js
push
sub
mov
fstp
xor
sbb
test
pop
ret
sbb
xor
xchg
in
rcr
jl
push
in
mov
stos
(bad)
xor
add
push
in
pushf
mov
in
pop
out
fld
jb
mov
cld
push
pop
mov
out
mov
inc
mov
mov
sbb
repz
inc
jmp
sub
sbb
cdq
or
retf
add
bound
jge
es
push
divps
jo
mov
popf
pop
mov
stos
(bad)
mov
jge
mov
fist
or
or
or
fwait
cmp
lea
je
cmp
jmp
mov
aas
mov
in
dec
xor
xchg
out
add
sub
cld
shr
std
aas
mov
mov
xchg
stc
(bad)
int
mov
leave
fdivr
data16
lods
jae
aas
mov
mov
hlt
mov
pop
pushf
imul
fstp
ret
ret
rcl
sub
mov
cld
dec
movs
push
lahf
pop
xchg
sbb
ds
mov
out
dec
hlt
outs
pop
and
xor
sbb
arpl
ror
fcomp
fcomp
cli
loop
es
sti
mov
std
mov
(bad)
jnp
scas
or
cmp
aas
cmp
dec
mov
cmp
and
dec
nop
stos
ins
fld
mov
aas
pop
xor
inc
test
mov
cmp
rcr
sahf
imul
mov
fnstsw
mov
push
mov
ret
sub
pop
mov
jae
cmp
mov
out
neg
mov
sar
cmp
(bad)
jmp
les
adc
inc
test
je
and
jbe
mov
inc
adc
mov
lea
or
test
test
xchg
popf
retf
push
ret
sub
mov
mov
mov
add
xchg
mov
sbb
popa
and
cmps
jmp
dec
rol
and
and
inc
pop
aam
fbstp
push
jnp
and
mov
ins
arpl
adc
adc
dec
js
push
daa
sbb
xor
or
mov
int
sbb
jb
aaa
aaa
cmp
inc
retf
mov
add
js
inc
in
jl
push
cld
mov
in
add
or
cmp
ds
cmc
push
stos
inc
mov
sbb
imul
push
push
retf
adc
pop
jbe
sar
sub
retf
ror
push
mov
fmulp
pop
push
adc
inc
stc
dec
cli
push
call
adc
shl
xchg
push
cmp
rcr
mov
mov
es
cmp
xor
aaa
mov
push
aaa
fs
es
mov
jl
add
pop
or
ret
popf
stos
mov
xchg
scas
mov
in
into
dec
lds
or
data16
cmp
jae
jmp
xor
or
rcl
dec
sahf
loop
xchg
push
cwde
leave
pushf
outs
jns
mov
(bad)
inc
cmps
xlat
lods
xor
nop
ins
xor
or
xchg
dec
jge
inc
mov
fisttp
and
cmp
sbb
push
push
fldenv
and
adc
ret
xor
sbb
adc
jmp
mov
in
or
xor
xor
into
mov
dec
sub
cmovle
fimul
scas
pop
neg
mov
imul
cmc
xchg
(bad)
jp
stos
jmp
imul
popa
or
data16
out
mov
inc
in
and
mov
loop
adc
mov
add
int3
or
dec
arpl
xor
push
cmp
hlt
out
imul
xor
adc
mov
lds
in
loop
xor
adc
out
jp
test
leave
fnclex
fiadd
jmp
mov
sbb
scas
outs
push
stos
into
mov
fs
fdiv
xchg
xchg
inc
sub
retf
call
sub
leave
cmp
lea
xchg
push
or
sbb
xor
rcl
sub
imul
mov
or
and
shl
jbe
sbb
(bad)
lods
hlt
sub
enter
mov
cmc
push
sahf
sub
pop
jmp
pushf
jecxz
in
jl
aam
mov
adc
sbb
loopne
aad
loope
ja
std
jbe
pop
mov
outs
test
scas
push
mov
pop
les
hlt
(bad)
stc
xor
lahf
in
ss
fnstenv
dec
call
test
sahf
call
fdivrp
mov
cmps
ins
fs
bndldx
(bad)
rcr
cmp
sbb
mov
pusha
call
gs
std
fld
dec
out
lods
push
in
in
jg
gs
psubd
and
ins
rcr
cdq
leave
mov
dec
gs
cli
mov
pop
dec
out
iret
movs
cmp
lahf
jecxz
lds
out
scas
mov
pop
aam
jns
fadd
adc
xchg
or
inc
mov
clc
inc
repnz
ins
lahf
(bad)
push
sbb
or
enter
sbb
xlat
lds
adc
xchg
push
in
fld
daa
lods
mov
mov
addr16
retf
cmp
mov
add
sbb
movs
psadbw
mov
mov
out
in
add
popf
or
int
mul
outs
jg
dec
jmp
push
shr
jle
scas
mul
xchg
pop
js
sub
add
loop
or
mov
jns
sbb
inc
cmp
stos
enter
xchg
test
sbb
jge
and
or
xchg
std
push
dec
jne
dec
arpl
xchg
add
sti
cmp
pop
call
addr16
xchg
xchg
sbb
pop
repnz
cmp
ins
call
comiss
fbstp
jns
adc
loopne
(bad)
cmps
push
stc
popa
and
jmp
inc
xchg
jp
push
in
cdq
test
lock
pop
pop
mov
pop
xchg
jg
sbb
pop
(bad)
repz
lods
clc
stos
xchg
jnp
(bad)
pop
pop
loope
fs
std
fst
fldenv
arpl
sbb
rcr
mov
jns
lods
test
inc
rcr
add
or
(bad)
jno
in
xchg
mov
retf
adc
js
and
std
lods
retf
mov
dec
out
dec
mov
lock
neg
and
test
inc
xchg
ret
fisubr
jne
add
mov
loope
jmp
and
les
cmps
push
out
cs
mov
xchg
mov
(bad)
adc
mov
(bad)
xchg
cmp
pop
jmp
daa
out
pop
ror
jno
dec
pop
and
out
jbe
mov
aad
mov
ds
mov
sbb
mov
ins
je
push
cmp
push
iret
ins
inc
and
pop
clc
xchg
cld
lods
popa
cmp
xchg
push
mov
xor
xchg
mov
dec
stc
adc
outs
adc
jge
in
inc
or
std
dec
(bad)
int3
mov
push
push
mov
gs
shr
faddp
call
bound
shl
xchg
xchg
xchg
xor
sub
dec
popa
(bad)
call
adc
repnz
aaa
cdq
icebp
sti
push
lock
jge
xor
push
arpl
xor
pop
xor
mov
pusha
adc
sahf
fcomip
clc
jo
aad
test
add
inc
lds
inc
adc
fldcw
mov
push
xchg
push
popf
cmp
sub
sub
inc
or
cmps
mov
jae
lea
and
rcr
movs
ss
push
aaa
sub
fstp
frstor
mov
fcom
lahf
xchg
test
push
cmp
ret
(bad)
pop
mov
mov
inc
dec
shl
iret
dec
test
or
lock
ret
mov
push
(bad)
sub
cmp
pop
int3
lods
std
sub
loop
or
cmp
cmp
(bad)
cs
cmps
inc
sbb
sahf
cmp
xchg
sti
push
push
ret
(bad)
mov
cs
out
jmp
in
les
ret
xchg
aad
fnstenv
mov
imul
jle
call
push
sbb
mov
sbb
std
hlt
mov
pop
or
sub
cdq
add
and
sbb
mov
xor
or
aas
mov
cli
mov
xor
fldln2
loop
dec
mov
std
ins
out
jecxz
sbb
aas
push
std
(bad)
stc
fisub
lahf
cmp
in
xor
jnp
mov
(bad)
(bad)
std
jecxz
jp
jae
loopne
dec
or
mov
xor
add
dec
sub
fidivr
xchg
(bad)
out
lea
cmp
sar
push
stos
adc
jp
dec
sbb
(bad)
inc
push
sub
fadd
movs
loop
outs
(bad)
cdq
mov
imul
mov
dec
ficom
dec
inc
mov
int
mov
movs
(bad)
cwde
jecxz
repz
sbb
cmp
ret
and
push
dec
mov
movs
sahf
xor
inc
lods
les
jb
dec
mov
sbb
jecxz
mov
(bad)
js
inc
aad
lods
adc
sbb
jae
call
add
div
movs
jmp
mov
aad
and
aaa
dec
data16
outs
sbb
cmps
sete
or
fcomp
adc
inc
pop
rcr
int
cdq
mov
out
jmp
xchg
call
rcr
cmps
cmp
cmp
adc
mov
mov
push
jmp
rcr
in
mov
repz
arpl
scas
(bad)
mov
cmp
inc
ret
inc
pop
mov
clc
mov
retf
icebp
jl
xchg
lods
cmp
xlat
les
jo
outs
inc
mov
sbb
and
hlt
fnsave
dec
inc
imul
mov
fistp
test
inc
(bad)
pop
repz
mov
lea
lea
xchg
scas
aam
cmp
pushf
sub
sub
sbb
and
or
sbb
push
fldpi
adc
xor
mov
cmp
cmp
mov
test
lea
or
data16
add
pop
movs
sbb
inc
mov
lahf
sub
loopne
sub
js
pop
xor
cmps
pop
mov
mov
lea
outs
call
scas
pusha
xchg
jecxz
pop
push
test
scas
or
loopne
jecxz
xor
ficomp
dec
lods
in
pop
mov
popa
jl
lods
(bad)
pop
pop
cwde
inc
xchg
jo
in
aad
outs
ret
sbb
add
shr
or
xchg
(bad)
(bad)
hlt
pusha
sbb
int3
mov
dec
aad
das
aam
das
push
dec
into
or
add
in
movs
in
(bad)
ficom
repnz
retf
xchg
add
add
push
in
out
das
sub
(bad)
ret
pop
fs
aad
pop
adc
fld
jo
daa
cli
adc
pop
call
push
(bad)
pavgw
add
jae
mov
test
sbb
gs
mov
cmp
imul
arpl
jp
push
pop
popf
mov
fldz
sbb
xor
sbb
loope
sbb
mov
add
inc
inc
sbb
movs
or
pop
xchg
xchg
int3
push
xor
push
nop
add
lock
icebp
and
pusha
test
dec
int3
ins
mov
mov
(bad)
sti
cs
push
or
mov
cmp
daa
scas
sub
ins
cmps
pop
lods
int
test
test
repnz
lds
xchg
sahf
add
popa
push
ins
lods
je
sub
xchg
push
inc
retf
jmp
sub
jno
retf
or
cmp
rcl
inc
inc
adc
push
push
inc
xor
(bad)
adc
push
cs
xor
fstp
dec
jno
and
inc
cli
xchg
gs
jb
(bad)
bound
cmc
mov
ror
mov
adc
dec
in
mov
mov
mov
push
xor
das
movs
jmp
js
xchg
or
jmp
pop
xchg
mov
mov
sbb
xor
mov
and
call
cmps
std
mov
push
inc
pop
stos
call
pop
in
div
std
(bad)
das
mov
push
adc
add
mov
jb
sub
push
dec
add
shl
nop
jmp
jle
mov
lahf
ds
std
hlt
outs
cld
xor
loope
out
and
aas
push
std
lea
clc
movs
repz
cmp
les
mov
sti
in
test
dec
sahf
stos
cld
jmp
cmps
sar
test
jae
jmp
or
fs
adc
xor
sbb
(bad)
lea
movs
sahf
fmul
jmp
fs
mov
(bad)
push
pusha
scas
(bad)
fimul
mov
(bad)
pop
sahf
(bad)
fistp
xor
push
jmp
mov
jmp
mov
test
jge
(bad)
inc
xor
mov
mov
mov
push
int
aad
jp
movs
jl
sub
mov
pop
ins
cmp
adc
xor
scas
(bad)
loop
rol
mov
(bad)
sbb
fdivr
aam
sbb
or
cmps
and
inc
dec
aas
gs
clc
mov
or
mov
mov
sub
int
xor
adc
mov
xchg
pop
mov
mov
out
pop
(bad)
mov
(bad)
out
call
pop
pop
out
ins
sbb
mov
pop
(bad)
cdq
xchg
loope
push
aas
pop
ins
cmp
xchg
shl
call
out
loopne
inc
cdq
inc
sub
leave
xor
sbb
nop
push
push
add
leave
sbb
and
mov
outs
mov
mov
and
mov
sbb
ret
in
mov
xor
loop
fld
xchg
push
(bad)
jbe
pop
popa
frstor
xchg
xchg
cwde
jns
in
and
jl
es
fstp
sbb
mov
cmp
jg
push
jbe
and
adc
jg
xlat
sub
dec
pop
or
pop
fistp
sbb
jge
push
loopne
idiv
xor
xor
pop
repz
das
dec
mov
aam
aaa
aad
aaa
aaa
mov
popf
int
xor
scas
pop
pop
les
mov
push
clc
fs
and
mov
jg
les
mov
fdivr
(bad)
shr
pop
add
dec
mov
bound
imul
enter
cmc
adc
ror
push
in
fsub
mov
dec
xor
or
stos
push
mov
mov
adc
xchg
pop
in
xor
cmc
sub
xor
test
lea
mov
or
and
mov
ins
jp
mov
jmp
fwait
mov
or
and
xor
and
int
jnp
leave
(bad)
aas
cmp
jnp
inc
fstp
int3
sub
(bad)
scas
push
pop
jns
mov
mov
and
rcl
mov
dec
push
mov
shr
lahf
xor
rcr
fwait
push
or
pop
mov
pop
cmp
adc
mov
add
dec
es
je
push
xchg
dec
out
xchg
mov
sub
movs
mov
cwde
and
out
or
not
xchg
inc
mov
mov
aam
or
push
pusha
mov
xchg
jp
mov
xchg
jns
jbe
inc
mov
mov
leave
cmp
sbb
xor
fisttp
cmp
jp
jb
and
or
iret
(bad)
cmp
push
adc
fstp
jmp
push
push
pop
fnstenv
pop
out
neg
mov
retf
idiv
int
ins
push
(bad)
xchg
lods
sbb
mov
aad
(bad)
fidivr
ror
xlat
popf
xchg
jmp
mov
in
sbb
sub
cmp
outs
es
mov
aas
les
jnp
jg
in
push
leave
pop
jno
dec
cmps
dec
push
in
jb
rol
out
sar
mov
fiadd
aam
loope
push
(bad)
mov
xchg
in
xchg
sti
stos
mov
retf
dec
mov
lock
and
cmc
enter
test
mov
mov
xchg
je
icebp
lock
mov
cwde
xor
push
inc
sub
call
in
mov
nop
test
addr16
pop
push
push
xor
or
mov
xchg
in
mov
test
pop
or
jp
(bad)
fdivr
stc
repz
dec
fistp
sbb
fcom
lea
mov
add
repz
sbb
(bad)
and
pop
push
jmp
mov
pop
aad
cmp
stc
test
ror
push
std
movs
xor
pop
cmp
and
outs
sahf
test
mov
repz
fistp
push
stc
aaa
mov
jmp
jb
sbb
int
mov
fisubr
outs
jle
push
cmc
fst
(bad)
int
push
test
mov
test
cmc
(bad)
icebp
sub
in
sti
cdq
pop
mov
sub
pop
ja
jmp
(bad)
jnp
leave
adc
test
push
sbb
pop
mov
jge
outs
cmps
daa
mov
lock
push
sub
retf
sub
aad
xchg
push
and
(bad)
mov
and
and
imul
fdiv
hlt
mov
mov
iret
inc
push
pop
jb
cmp
ficomp
dec
aas
jmp
bound
and
mov
sub
xor
mov
adc
sahf
sbb
(bad)
test
inc
jmp
mov
push
mov
jl
retf
mov
dec
out
sbb
adc
pop
push
fstp
cmps
out
xchg
(bad)
push
adc
gs
adc
pop
and
sub
sub
cmovl
test
je
adc
dec
sar
data16
addr16
bound
lahf
mov
in
push
(bad)
xchg
faddp
out
mov
sub
and
cld
mov
xor
mov
retf
retw
shl
iret
cmp
mov
retf
pop
jecxz
xchg
adc
xlat
dec
pop
mov
pop
inc
cmp
sbb
inc
addr16
je
add
addr16
aam
pop
dec
loopne
push
sbb
out
repz
push
rcr
popf
sti
jmp
pmullw
push
fst
mov
mov
mov
jns
mov
int
jnp
into
or
mov
iret
pop
add
ss
sbb
stos
inc
sbb
dec
xor
xor
les
mov
lea
inc
jnp
adc
inc
adc
ins
mov
cdq
jbe
test
fcmovnu
lods
inc
in
call
mov
test
scas
jnp
ror
mov
shr
cmps
aam
call
or
icebp
(bad)
cmps
repnz
push
push
cmps
xchg
test
mov
data16
mov
jb
lods
xchg
jo
sbb
hlt
jp
aam
xor
ins
outs
hlt
aad
in
loop
jle
movs
pop
jmp
adc
test
sub
fisubr
lahf
mov
pop
push
inc
xor
add
dec
sub
pop
std
or
sub
xchg
jmp
daa
push
and
gs
xchg
outs
sbb
retf
dec
stos
addr16
xor
or
movs
pop
loopne
or
pop
dec
xchg
popa
les
daa
ficomp
(bad)
and
add
std
sbb
rep
push
and
fabs
xchg
or
cwde
popa
cs
outs
jecxz
out
xchg
sub
imul
xchg
(bad)
jl
adc
and
xor
dec
out
aam
xor
push
pushf
jl
lea
fisubr
push
ja
jbe
(bad)
int
mov
xor
mov
(bad)
not
mov
cmp
push
mov
pushf
in
sub
inc
ret
and
ss
sub
jno
outs
xchg
jl
jne
add
mov
or
aam
imul
push
mov
mov
popa
enter
mov
aam
(bad)
mov
sbb
add
fild
pop
aad
add
pop
pusha
in
aad
add
mov
out
adc
fisttp
idiv
adc
mov
out
and
push
sbb
cmp
nop
rcl
scas
sbb
and
mov
xchg
mov
and
mov
movs
les
(bad)
ror
mov
cmps
retf
div
jne
push
div
aad
sbb
and
cld
arpl
jmp
ret
test
and
jmp
pop
dec
out
pop
jne
adc
shl
sbb
imul
aas
mov
std
(bad)
loop
test
ins
in
push
dec
xlat
jg
pop
or
mov
pop
jmp
rep
je
pop
inc
dec
or
(bad)
sti
xlat
iret
xor
xor
daa
pop
gs
nop
adc
rep
mov
jl
dec
mov
lock
sub
icebp
pop
cli
sub
dec
cmp
add
mov
jp
adc
jne
ror
cmp
fbld
sbb
int3
dec
aad
xchg
pop
cwde
popa
scas
iret
out
dec
xor
lods
stos
aad
ins
ins
push
push
(bad)
push
pop
in
mov
aam
jle
out
les
aad
mov
aas
push
movs
ins
mov
lds
mov
xchg
unpckhps
or
adc
dec
ins
stos
jns
push
fsub
ja
pop
xchg
in
mov
fiadd
cmps
inc
sub
xchg
retf
pop
inc
xchg
mov
dec
xchg
xchg
and
push
mov
dec
out
adc
aam
xor
push
clc
mov
bound
pop
xor
pop
in
cmps
pcmpeqd
sbb
cli
fstp
mov
(bad)
icebp
and
daa
cmps
sub
pop
repz
jae
jmp
push
mov
outs
loopne
xor
pop
sahf
and
mov
push
jecxz
leave
int
test
xor
cmps
std
adc
and
(bad)
cmp
or
ret
dec
mov
test
icebp
pushf
xor
adc
repz
lods
pop
cmp
xchg
(bad)
mov
out
clc
adc
jb
pop
mul
mov
jle
push
or
(bad)
data16
mov
sti
xchg
jae
xchg
jbe
adc
sbb
out
and
cmp
sti
xchg
outs
add
xor
and
push
xchg
shr
mov
xor
jmp
mov
xchg
mov
xchg
aad
push
mov
aaa
or
idiv
sub
(bad)
xchg
mov
mov
sbb
psubsw
mov
pop
and
test
xchg
lea
and
shl
test
add
mov
sti
xor
cmps
call
scas
aad
inc
scas
xor
movs
lods
xorps
adc
dec
sbb
jmp
scas
push
cmps
cmp
adc
pop
dec
jle
pop
sub
xchg
into
ins
arpl
aas
rcl
mov
bound
dec
outs
das
push
jge
xor
adc
jmp
mov
push
in
mov
in
cs
out
dec
pop
fxam
in
retf
add
xchg
xor
sub
loopne
loope
lds
xchg
and
push
sbb
ins
lahf
adc
mov
loopne
popf
arpl
lods
mov
test
push
enter
cs
popa
scas
xlat
ja
mov
call
push
cs
fs
mov
sbb
jge
loop
dec
out
fcom
jae
mov
pushf
pop
in
mov
outs
js
adc
test
dec
call
fs
retf
iret
mov
fs
or
aaa
in
add
(bad)
xchg
std
sub
sbb
adc
in
mov
pop
dec
mov
(bad)
push
sbb
jb
pop
sub
jmp
(bad)
mov
lods
sbb
pxor
cdq
mov
jae
repz
std
inc
aas
stos
aam
pop
push
xchg
push
leave
test
xchg
stos
stc
fidivr
xor
mov
pop
popf
stos
sbb
into
push
dec
mov
dec
gs
test
sub
xchg
gs
ins
sti
pushf
imul
pop
push
cmp
mov
test
out
sub
xor
aam
jmp
(bad)
int3
and
cmc
jmp
lds
adc
mov
cld
cmc
add
push
retf
aad
repnz
(bad)
xor
mov
icebp
xor
or
sahf
ins
cmp
ja
outs
imul
add
dec
mov
aad
pop
scas
cli
popf
aam
sbb
push
sbb
lods
and
es
addr16
push
test
test
out
cmps
cmc
sar
faddp
clc
dec
pop
mov
fdiv
pop
stc
repnz
dec
mov
or
mov
ror
out
xlat
cld
adc
fdecstp
out
out
add
pop
dec
mov
mov
jg
scas
(bad)
xchg
jnp
lahf
cmp
int3
test
jge
mov
int
repnz
out
pop
in
(bad)
(bad)
lods
ret
aas
mov
xor
into
xlat
aas
jge
stc
test
sar
xchg
adc
out
pop
test
push
xor
jbe
(bad)
cmc
sub
dec
xor
mov
inc
dec
dec
adc
int
scas
shl
out
add
sub
aam
arpl
retf
sbb
call
mov
cwde
add
test
movs
jno
or
int3
mov
outs
gs
mov
inc
cdq
cmp
sub
pusha
iret
mov
fst
jne
stc
lds
and
movs
ror
js
mov
icebp
add
mov
ficomp
outs
int3
jne
lods
(bad)
jp
int
pop
repz
stc
mov
popa
adc
xlat
push
repz
je
retf
mov
xchg
sub
popf
gs
mov
pop
pop
inc
mov
fcomp
rcl
mov
pop
ret
dec
icebp
or
pop
add
inc
push
repnz
dec
jmp
ja
sti
jp
or
or
xor
sub
test
mov
icebp
mov
data16
imul
icebp
cmp
mov
pushf
gs
repnz
(bad)
je
mov
push
xchg
xchg
dec
xor
sbb
push
xor
aaa
rol
(bad)
xor
pusha
dec
jne
jno
sub
ss
xor
cs
test
cs
fwait
cmp
frstor
mov
out
xchg
cmp
lock
mov
out
aaa
das
(bad)
mov
and
les
mov
jbe
daa
mov
mov
push
scas
jns
mov
lds
pop
or
mov
mov
mov
xchg
js
je
mov
cli
(bad)
aad
pop
dec
inc
ds
int
int
ror
aad
pop
pop
repz
cdq
fwait
scas
leave
int3
xchg
mov
xor
je
mov
sbb
adc
pop
ffreep
lods
xchg
test
mov
(bad)
gs
push
clc
push
dec
ret
aad
(bad)
sbb
test
popa
add
out
int
xor
pusha
aam
pop
push
push
xchg
aam
int3
int
jecxz
jmp
bound
jns
push
loop
pop
mov
bound
imul
pop
ret
fimul
sub
stos
pop
hlt
adc
mov
fisubr
push
ficomp
jg
adc
es
lea
int
in
in
mov
je
mov
jg
fidivr
mov
pushf
pop
mov
xor
push
rcl
and
inc
loop
and
(bad)
push
cmps
in
js
adc
mov
pop
xor
pop
cdq
pop
adc
stc
xor
divps
fcomi
dec
enter
inc
test
jbe
jae
cmps
bnd
jnp
mov
and
call
fisub
retf
or
add
out
inc
pop
call
sbb
push
mov
or
loop
sub
inc
cmp
sbb
movs
call
adc
and
cmp
je
ror
or
stc
jo
mov
popf
dec
xsha256
cmps
xchg
xchg
repz
cli
cdq
test
mov
xor
repnz
repnz
in
ror
dec
scas
xor
cmp
cmp
mov
fisubr
push
dec
test
pop
jbe
ja
mov
sub
sar
mov
popf
mov
test
js
mov
cmp
sub
xchg
popa
sbb
fidivr
fs
aam
or
neg
pop
in
push
inc
xchg
pop
or
js
mov
mov
dec
scas
jo
sub
or
lods
call
pop
in
jl
je
repnz
retf
xor
sbb
cli
push
adc
lea
xor
call
lods
(bad)
leave
fcomp
xor
dec
mov
setnp
adc
dec
cmp
test
out
mov
lods
xchg
xor
or
sbb
cmps
ss
(bad)
pop
cwde
mov
adc
sti
add
sar
aas
xchg
aas
idiv
dec
pop
pop
cmps
jle
cmc
gs
sahf
cdq
adc
gs
pop
ss
sub
mov
out
into
movs
xchg
iret
sub
mov
jmp
sbb
mov
call
jnp
pop
(bad)
(bad)
dec
push
ds
cmc
or
mov
sahf
lods
(bad)
loop
icebp
sub
xchg
in
stos
std
fistp
ins
or
dec
fisub
cli
hlt
shl
ss
add
and
push
sub
push
pop
out
popa
add
outs
pop
jbe
pop
out
es
dec
hlt
in
sahf
shr
(bad)
xor
ins
push
inc
adc
imul
push
mov
(bad)
fist
mov
cli
pop
cmc
xlat
xchg
das
or
xchg
adc
add
push
push
sbb
imul
pop
mov
push
ds
adc
and
dec
(bad)
jp
xor
mov
adc
pop
sahf
xchg
mov
mov
sub
lods
into
ss
jge
aam
cmp
pop
sahf
test
cmp
ror
sahf
retf
or
cmp
add
jb
cmp
loope
arpl
es
add
dec
mov
push
cmp
leave
je
mov
das
pop
mov
sbb
in
push
sub
pop
outs
ins
pop
mov
ret
pop
or
call
jbe
jae
out
push
lds
xchg
cmp
adc
push
sub
imul
(bad)
stc
outs
je
mov
ins
inc
pop
sbb
shl
push
dec
loope
and
pop
(bad)
dec
push
xchg
arpl
retf
ja
inc
mov
pop
(bad)
repnz
out
cmp
(bad)
adc
push
mov
mov
(bad)
cmp
push
aad
mov
leave
inc
sar
mov
mov
or
adc
jo
jo
dec
(bad)
cmp
mov
fidivr
jecxz
xor
std
ins
xchg
xchg
repnz
cmp
stos
mov
pop
ins
pusha
or
das
inc
xchg
push
mov
sti
dec
fs
cmps
les
dec
dec
jbe
ins
ret
inc
lahf
stos
cmp
sar
xor
pop
sbb
stc
fmul
fs
and
pop
test
das
lods
pop
das
scas
jns
stos
inc
ja
loope
pushf
loopne
mov
cmp
add
jge
push
and
in
test
jb
outs
pop
mov
icebp
add
jae
mov
add
fsubr
inc
jb
sub
mov
and
(bad)
xor
dec
mov
leave
ins
ret
outs
das
gs
mov
fadd
push
jne
enter
inc
pushf
or
mov
mov
imul
mov
dec
jl
sub
das
push
retf
mov
mov
xor
test
ins
scas
xchg
adc
sbb
in
jbe
enter
fwait
push
pop
imul
jns
pop
adc
mov
das
data16
lods
or
stos
jp
bound
repz
nop
add
push
push
dec
mov
sub
enter
push
push
push
jnp
imul
cmp
in
cmp
nop
scas
test
mov
adc
sub
or
sub
mov
jmp
call
add
mov
imul
movs
push
mov
mov
pop
outs
dec
jnp
clc
cmc
dec
aaa
test
pusha
mov
pop
sub
sar
jp
or
imul
xor
ins
shl
cs
call
popa
das
ficomp
fnstsw
jne
and
cmp
out
fimul
push
icebp
shl
repz
sti
dec
push
push
mov
hlt
stc
fstp
push
mov
fcomp
xchg
push
push
enter
xor
pop
lahf
lea
das
arpl
add
and
push
sbb
cmps
adc
aad
dec
mov
fmul
mov
mov
mov
jl
push
repz
push
in
ins
mov
je
pop
jmp
std
cmc
(bad)
bound
cmps
mov
dec
pop
xor
add
sub
and
(bad)
sub
mov
popa
pop
lods
pop
imul
cmovg
imul
xchg
shr
push
pusha
pop
mov
in
jo
arpl
out
and
xor
fs
ret
cmp
mov
jp
ret
jl
cmps
lock
mov
lods
push
fnsave
sbb
ja
xchg
pop
push
(bad)
jge
in
pop
fldpi
ins
jo
mov
xor
jle
mov
and
mov
shl
adc
test
aad
pop
fcmovb
sub
mov
xchg
adc
outs
pop
outs
jge
dec
sti
mov
outs
inc
mov
arpl
pop
cmp
inc
push
jle
and
mov
mov
pushf
imul
nop
mov
and
mov
push
jge
push
in
neg
call
adc
sahf
jecxz
pop
cdq
push
cmp
int
rcl
sub
cmps
dec
int3
push
jmp
xor
xchg
fs
push
adc
lods
push
leave
dec
pop
and
inc
push
adc
mov
test
push
(bad)
push
pushf
dec
push
cwde
mov
jb
(bad)
loopne
and
mov
leave
mov
mov
cmc
aaa
popf
mov
dec
test
pop
dec
cmp
or
repnz
sahf
call
cmp
inc
xor
pop
pop
lods
int
fs
xchg
dec
scas
mov
mov
mov
sub
pop
xchg
pop
push
cs
push
jae
repz
cwde
push
xchg
sar
sub
add
push
aas
test
push
mov
dec
and
xor
pop
mov
je
lahf
lods
fst
pop
out
in
fld
(bad)
sub
mov
and
pop
or
test
mov
jmp
out
push
add
mov
dec
cmp
sbb
jno
dec
jmp
push
jge
xchg
sar
pop
pop
int
int3
jo
mov
jnp
fnsave
xor
push
or
adc
xchg
das
ins
(bad)
in
popa
loope
stos
xor
or
push
adc
retf
fs
adc
push
xchg
in
push
xchg
mov
xor
mov
out
push
repz
xor
pop
or
mov
adc
push
sbb
(bad)
out
scas
add
xor
lahf
and
bound
(bad)
push
push
jmp
std
mov
retf
shr
leave
and
add
ror
ja
pusha
stos
add
leave
mov
and
lock
leave
test
in
movs
nop
sub
jnp
ss
adc
loop
bound
arpl
add
rol
mov
jne
sub
pop
adc
arpl
aaa
inc
aad
jns
leave
(bad)
xchg
je
sub
pop
dec
and
jne
test
inc
inc
ror
push
out
sbb
and
inc
fst
mov
out
mov
push
add
(bad)
shr
jl
cmp
test
(bad)
jmp
std
xlat
xchg
and
jns
or
mov
lods
xor
xchg
dec
lods
mov
inc
mov
or
and
adc
frstor
add
inc
mov
add
add
aad
idiv
repz
int3
call
jp
gs
mov
xor
mov
lock
aaa
cmp
std
in
outs
outs
stos
push
in
int3
(bad)
dec
or
push
gs
jmp
sub
enter
in
pop
pusha
int3
cmc
stos
or
or
sbb
stc
movs
cmp
add
dec
sub
xor
ja
bound
and
pusha
cmp
fiadd
mov
and
mov
icebp
adc
call
add
and
and
bound
icebp
push
ja
scas
push
sahf
mov
call
push
and
mov
lds
(bad)
mov
push
stc
push
dec
stos
adc
add
push
aam
sbb
push
push
sbb
in
shl
jmp
frndint
fs
sub
mov
ret
gs
fidivr
mov
mov
icebp
pop
(bad)
mov
cli
mov
inc
pop
or
push
inc
stos
pop
and
adc
and
adc
stos
pop
pop
adc
adc
sub
or
mov
inc
es
xchg
ins
push
sub
pop
je
in
pop
mov
push
mov
ss
cli
icebp
inc
ret
shl
fistp
pop
retf
ins
test
adc
das
and
jmp
ja
cmp
cmps
jmp
rol
and
push
aam
stos
mov
pop
dec
cmp
push
repz
mov
lods
inc
mov
pop
xchg
jbe
cmp
sbb
dec
sub
sub
or
mov
das
dec
ficomp
hlt
pop
adc
push
cli
ret
ret
adc
shl
add
add
push
mov
test
jl
or
(bad)
pop
inc
xor
and
inc
sbb
sub
ffree
mov
or
adc
scas
mov
cdq
mov
mov
std
retf
test
in
sbb
lahf
outs
push
jle
emms
jae
xor
xor
cs
rcr
in
inc
aad
pop
(bad)
xor
cmp
ins
dec
hlt
imul
(bad)
popf
lahf
pop
scas
sar
or
xchg
jecxz
test
mov
sub
xchg
add
mov
gs
lahf
lods
in
mov
lahf
mov
imul
mov
mov
or
cmc
sub
sub
out
gs
popf
dec
mov
mov
push
push
inc
sbb
cdq
sbb
cmc
push
pop
jb
push
loope
js
cmp
sbb
mov
cmps
or
(bad)
clc
(bad)
adc
out
cmp
or
mov
and
jnp
lock
jp
xor
mov
cmps
xor
stos
pop
cdq
adc
mov
lods
pusha
adc
mov
push
mov
xor
xor
mov
stos
into
jbe
cmp
mov
jg
rcr
cmp
sbb
sub
push
mov
dec
sti
mov
popf
mov
gs
push
or
push
out
sbb
aam
mov
inc
or
jmp
push
ins
pop
cmc
lods
xchg
enter
inc
sbb
xchg
popa
adc
out
adc
adc
and
mov
adc
inc
sub
xchg
jbe
jmp
mov
jno
retf
test
sub
sub
enter
adc
fld
push
and
dec
fild
retf
scas
nop
clc
int
mov
or
ins
es
pop
mov
xor
cmp
or
adc
outs
cdq
pop
imul
or
ror
int
stc
inc
repnz
mov
ret
adc
dec
mov
sbb
cmp
fisttp
outs
add
ss
mov
movs
cld
rcl
xor
jae
jmp
push
mov
test
es
rol
inc
cmp
hlt
dec
jnp
jno
adc
call
rcr
scas
push
push
dec
cld
fwait
cmp
xor
bound
dec
stos
sub
pop
xchg
leave
mov
jmp
sub
pop
movs
sar
push
pop
push
mov
out
jo
jbe
int
jne
mov
int3
sbb
push
inc
lea
mov
add
xchg
(bad)
sub
sub
dec
mov
add
cmp
xlat
or
aad
inc
inc
mov
loope
push
mov
push
xchg
or
add
fs
les
sub
vpmacsdd
inc
aaa
stos
push
(bad)
mov
inc
test
push
xchg
call
push
in
rcr
adc
xchg
xchg
xor
ins
ret
lods
adc
xchg
sbb
and
sub
mov
sub
nop
jmp
ror
jg
dec
push
cmc
or
popa
cmp
mov
push
test
shl
neg
jo
push
jmp
mov
ds
xchg
ret
and
imul
mov
shl
imul
test
cdq
stos
into
dec
test
popf
repnz
xchg
jnp
adc
mov
int
lods
call
xor
gs
int
out
jecxz
adc
push
pop
stos
pusha
repz
scas
adc
xor
push
dec
bound
popa
sub
and
loopne
xchg
push
enter
pop
call
push
cmps
(bad)
mov
jno
loopne
jb
jb
aad
and
inc
loop
dec
jmp
fwait
xchg
addr16
pushf
or
mov
jle
inc
sbb
addr16
cmp
mov
pop
retf
add
and
dec
add
shl
mov
loopne
ins
(bad)
stos
iret
dec
(bad)
out
mov
xchg
cmc
jnp
xor
xor
cli
hlt
repz
xor
xchg
pop
inc
rcl
sahf
push
sar
lock
pop
out
xchg
aas
fidiv
in
pop
sub
add
mov
or
(bad)
mov
fsub
mov
cmps
out
shl
scas
out
repz
push
jnp
push
mov
cld
test
in
ss
fdiv
mov
sub
mov
addr16
aas
test
(bad)
jmp
(bad)
or
sar
sti
(bad)
xchg
in
aas
pop
dec
push
cmp
xlat
daa
mov
xchg
cmp
sub
shl
fwait
inc
mov
imul
in
or
(bad)
jg
adc
ins
aaa
cmp
add
jecxz
jmp
mov
or
jb
lods
out
fcomp
dec
adc
add
pop
add
sbb
cs
leave
or
nop
xor
xchg
mov
dec
sub
dec
push
pop
add
sbb
add
pop
or
clc
movs
aad
pop
pop
jle
and
test
cmp
cwde
ret
jp
shl
adc
jg
jg
mov
xor
pusha
call
test
sti
cmps
or
cmp
add
xchg
push
jp
(bad)
je
and
sahf
call
daa
movs
test
adc
pop
mov
mov
into
movs
push
sti
jle
pop
out
ror
sbb
out
sub
sbb
cdq
mov
cmp
mov
cmps
cld
loop
or
jb
stos
clc
mov
adc
ret
std
shr
mov
arpl
push
xchg
les
sub
iret
lock
dec
inc
retf
je
pop
cmp
pop
cdq
fwait
sbb
test
inc
and
and
pop
and
jbe
idiv
into
and
dec
sbb
cmp
sub
sub
xor
cmp
fwait
cdq
cmp
xchg
xchg
(bad)
fwait
(bad)
dec
dec
xor
cmp
jae
mov
test
push
out
mov
pop
push
shl
popf
dec
(bad)
dec
in
ret
fdivr
jge
mov
movs
out
sbb
xor
jbe
cli
call
fcmovb
div
int3
test
push
repz
cmp
(bad)
adc
xchg
push
jecxz
mov
dec
pop
and
cwde
repnz
(bad)
sub
cmps
jecxz
movs
pop
fmulp
rol
dec
jp
and
jge
fbstp
gs
ret
(bad)
jne
movs
jmp
mov
stos
scas
and
fsub
adc
sbb
xor
sub
retf
or
jmp
xor
test
loopne
pop
ss
push
out
cli
(bad)
popf
enter
inc
(bad)
in
inc
or
fdiv
jmp
das
sbb
test
movs
mov
xchg
addr16
daa
lods
popf
loop
cmps
sub
sub
pushf
lea
sbb
out
arpl
cmp
in
mov
inc
push
cwde
sti
push
stos
sub
(bad)
sbb
mov
fs
ds
cmp
adc
mov
xor
daa
movs
adc
jg
ins
xchg
fstp
push
aaa
cld
add
call
mov
(bad)
mov
lds
xor
mov
cmp
adc
sub
pop
and
enter
out
clc
test
mov
je
test
stos
dec
dec
cmp
push
mov
adc
js
out
pop
mov
push
push
stos
inc
xor
add
xor
(bad)
into
dec
mov
push
out
out
enter
sahf
sbb
jle
leave
xchg
mov
push
pop
jmp
cwde
mov
push
mov
leave
jo
mov
(bad)
imul
(bad)
jl
and
stos
push
jmp
sub
mov
loope
popa
mov
popa
ror
dec
inc
pop
fiadd
aam
push
gs
inc
push
dec
mov
pushf
ss
popa
out
sar
push
or
das
call
xchg
mov
(bad)
inc
mov
mov
test
int
retf
das
add
add
int
or
pop
test
retf
pop
fwait
sub
ja
in
std
sbb
pop
adc
dec
xor
jmp
dec
nop
dec
ja
mov
adc
pop
not
cdq
dec
sub
mov
mov
bound
cmps
movs
sub
jmp
and
jbe
outs
push
rcr
lods
shl
outs
das
jl
aaa
jmp
inc
aad
jg
cli
add
dec
icebp
mov
jb
xor
es
jecxz
test
fld
aaa
or
mov
and
call
xchg
pop
pop
jb
jns
clc
movs
or
jmp
push
sti
fwait
xchg
scas
out
ss
mov
int3
jg
(bad)
jmp
daa
dec
movs
out
sbb
mul
cmp
imul
(bad)
sub
jmp
xor
mov
aad
and
add
mov
cmp
jo
aas
fcmovnb
scas
xchg
cwde
push
dec
add
jmp
push
pop
cdq
and
sbb
jae
mov
mov
pop
shr
push
aad
or
adc
rol
xor
retf
sbb
add
cmp
fild
sub
cmp
xor
sti
loop
shr
adc
mov
add
cmp
(bad)
and
sub
out
ret
les
inc
push
out
pop
test
in
test
cmp
out
inc
test
into
pop
fcom
iret
pop
popa
in
mov
push
(bad)
call
xchg
and
sbb
retf
xor
cdq
jne
stc
xchg
or
sub
inc
leave
push
sbb
sbb
mov
pop
test
inc
ss
cdq
mov
pshufw
jp
arpl
cmp
inc
lea
xchg
inc
aam
gs
enter
mov
push
jbe
sbb
or
inc
imul
mov
icebp
je
adc
movs
or
xchg
cwde
ins
je
movs
nop
sub
sbb
inc
outs
mov
pop
repz
in
daa
push
adc
xor
cmp
cmc
loope
dec
mov
pushf
dec
popf
cmp
fld
add
xor
xor
pop
mov
outs
add
mov
bound
dec
dec
test
dec
sub
mov
cli
pop
loop
ror
mov
inc
mov
mov
pop
scas
stc
xlat
sbb
lea
stos
push
mov
enter
mov
xchg
std
(bad)
test
mov
jg
daa
stc
iret
out
cmp
call
dec
push
pop
data16
mov
sbb
xor
popa
mov
sti
outs
icebp
bound
in
push
mov
push
jecxz
in
les
pop
imul
or
enter
pop
retf
sbb
jo
fmul
adc
push
push
(bad)
mov
bound
xchg
cli
push
mov
and
sbb
rol
jo
lahf
mov
xor
daa
jmp
xchg
sbb
stc
push
stos
div
push
cwde
iret
popf
scas
sti
pop
inc
loop
inc
mov
test
fisub
adc
movs
and
jmp
add
ins
(bad)
(bad)
pop
xchg
sub
les
ins
jmp
int3
vmovdqu
(bad)
dec
pop
scas
push
out
mov
mov
out
in
or
sar
lods
cld
add
inc
into
mov
sbb
xchg
cmp
adc
fld
cmps
out
rcl
dec
call
ins
and
jnp
fmul
push
jmp
and
adc
push
sbb
sub
or
rcr
dec
push
pop
(bad)
pop
in
in
xchg
and
xchg
movs
xchg
sub
repnz
aad
push
and
test
not
mul
sbb
push
adc
sahf
cdq
push
push
jp
stc
jbe
mov
mov
pop
into
dec
jecxz
xor
imul
in
pop
dec
stos
and
pushf
ds
cmp
data16
mov
xor
mov
xchg
int3
popa
xor
aad
lods
cmp
inc
adc
and
scas
movs
xchg
push
xchg
clc
pop
iret
in
push
sbb
push
mov
or
xlat
pop
jmp
mov
repz
loopne
leave
shl
repz
and
cmps
push
pop
push
es
ins
jnp
mov
pop
fwait
into
in
in
retf
int3
sbb
push
ret
mov
push
cmp
xchg
jne
pop
sub
adc
repnz
pop
and
and
imul
pop
pop
mov
cmp
adc
sbb
int
mov
cmp
sub
movs
fdivr
or
outs
in
push
cli
adc
movs
push
sbb
retf
dec
or
lea
inc
int
dec
sub
ret
(bad)
pop
and
jecxz
aad
push
aad
jae
and
lahf
pop
jno
jns
cld
ret
mov
lods
std
leave
outs
cmc
iret
imul
pop
ffree
pop
mov
push
(bad)
fucomi
cdq
jmp
sar
xor
lahf
das
aam
jno
cld
into
jno
xlat
pop
mov
sub
xor
mov
jne
cmp
stos
pop
dec
cmc
inc
and
xor
jno
push
lods
and
in
mov
inc
sbb
loop
cmps
cmps
mov
jo
pushf
dec
add
rol
sti
lds
loope
lds
js
or
push
(bad)
fidiv
lock
adc
popf
inc
mov
or
adc
test
mov
sub
jge
retf
add
jl
dec
jecxz
dec
xlat
or
cmp
(bad)
pop
jmp
outs
adc
or
sar
lea
inc
sbb
jb
xchg
jge
mov
xchg
mov
ss
mov
mov
or
int3
mov
mov
cdq
lea
lds
mov
fstp
mov
pop
or
clc
add
inc
add
xor
mov
mul
add
mov
mov
push
mov
lock
int3
(bad)
out
dec
out
sbb
bound
xor
add
mov
movs
add
nop
repz
adc
adc
adc
dec
sub
retf
loop
inc
loope
xchg
fbld
nop
mov
dec
imul
cmp
lahf
jmp
cmp
stos
sub
fdiv
(bad)
or
push
test
repnz
outs
ja
cmps
fucomi
sbb
test
lods
(bad)
dec
sbb
pop
or
js
inc
xchg
sub
jmp
out
and
stos
outs
mov
retf
fdivr
mov
push
mov
stc
jb
inc
add
lods
mov
fucom
std
xor
inc
data16
cmovg
mov
fist
ficomp
ficom
cmp
stc
dec
cmps
fidivr
sar
repz
popf
ret
jl
sbb
xchg
mov
xor
js
das
inc
movs
in
add
mov
pusha
shr
push
out
cmc
jns
aaa
jbe
push
lds
add
xchg
push
xchg
push
mov
(bad)
push
jae
pusha
sahf
xchg
add
or
sub
nop
and
push
fs
mov
cli
jg
xor
mov
push
jg
jnp
xchg
adc
fstp
dec
cmp
push
cdq
iret
in
aas
iret
pop
and
and
addr16
je
in
sbb
jo
movs
add
pop
enter
xor
test
ret
pop
mov
loope
dec
jb
jnp
fincstp
sub
icebp
or
mov
repz
sbb
xchg
movs
out
inc
jo
add
sub
push
push
mov
pop
test
push
imul
xor
aas
xchg
or
hlt
outs
mov
mov
out
shl
jge
push
cmp
xchg
jne
outs
xor
pop
aas
adc
clc
es
mov
jo
popa
xchg
jbe
rcl
add
dec
sbb
in
pusha
jae
jl
adc
xlat
push
pop
jae
sbb
fnstsw
inc
add
ret
xchg
shl
std
lds
popa
and
cmc
sbb
and
inc
and
(bad)
call
imul
sahf
shr
ret
lods
jp
inc
ret
jb
and
repnz
sub
sub
fst
gs
shl
daa
sbb
jb
(bad)
mov
push
mov
cmp
dec
mov
sub
pop
mov
sub
push
dec
ins
xchg
or
ficomp
push
ins
into
push
cmp
aam
ds
fs
lods
inc
or
arpl
sub
cwde
test
shl
xchg
es
mov
cmp
pop
dec
cmp
ins
xchg
retf
and
cmp
scas
cmps
icebp
jl
out
add
mov
stos
loop
shl
fcom
mov
aaa
sub
cmp
retf
sbb
cli
jo
outs
inc
out
dec
lods
fwait
lods
repnz
xor
jecxz
mov
fstp
lahf
fwait
ja
popa
xor
outs
out
aam
sbb
lods
call
addr16
cld
pop
repnz
adc
lahf
scas
cmc
(bad)
jmp
jmp
lahf
cs
stc
jl
lods
in
jg
enter
neg
cmp
inc
jnp
or
dec
or
sub
mov
mov
mov
pusha
mov
and
fnstenv
adc
jno
fmul
or
push
jge
inc
pop
in
ror
les
mov
cmp
test
push
out
xchg
cmps
sub
cmp
sub
das
jl
mov
arpl
daa
push
mov
jge
mov
or
pusha
lods
xchg
jmp
mov
test
adc
in
inc
imul
and
adc
add
sbb
mov
sub
pop
gs
dec
iret
test
xchg
aam
sbb
add
push
xchg
or
ror
adc
xor
shr
push
jge
sbb
aam
into
dec
es
inc
pusha
shl
inc
xchg
retf
inc
push
jmp
jmp
jmp
xor
shr
aas
rol
lods
shl
jns
xor
into
sbb
test
(bad)
cdq
in
xchg
xchg
mov
outs
das
imul
repnz
cmp
gs
sub
dec
das
jge
ja
adc
adc
jae
or
inc
sub
dec
inc
jecxz
xchg
xrelease
mov
jmp
push
sbb
retf
jnp
movs
outs
jb
mov
stos
movs
std
mov
bound
inc
mov
mov
inc
fs
xor
push
dec
xchg
imul
dec
stc
cmc
jns
in
push
test
adc
inc
retfw
sub
mov
mov
bound
bound
jl
jmp
cmps
jmp
and
push
ror
mov
js
out
(bad)
push
mov
fisttp
or
dec
mov
sub
add
mov
sub
es
and
cmp
popa
xchg
js
loope
loop
stos
mov
add
pusha
test
mov
cmc
fs
cmps
cmps
mov
mov
ja
dec
out
ins
les
jb
popa
bound
xchg
push
cld
test
jg
add
inc
sbb
adc
push
out
cmc
fadd
inc
out
(bad)
jmp
or
mov
or
mov
pop
inc
push
push
loopne
sbb
mov
push
iret
and
and
xor
les
xchg
iret
idiv
cs
jb
loope
sub
mov
mov
imul
cs
mov
in
cmp
cmp
lods
mov
dec
and
sub
inc
pop
and
add
call
icebp
jecxz
mov
mov
es
jb
xor
pushf
stc
push
repnz
(bad)
mov
jmp
jno
jo
lods
lds
jae
push
lock
inc
adc
lds
add
xchg
mov
mov
test
sbb
aam
je
mov
inc
jo
jle
jbe
mov
mov
out
fsubp
ja
popf
xchg
sbb
in
pop
push
cmps
nop
xor
push
add
sahf
adc
repnz
cmp
popf
data16
or
push
or
mov
gs
pop
dec
jmp
test
dec
cmps
ja
fild
adc
(bad)
pop
imul
imul
pop
sub
std
and
mov
(bad)
xchg
and
add
and
js
pop
cmp
sbb
out
xor
pop
or
cdq
push
sub
leave
mov
mov
leave
or
popf
jne
inc
cdq
jne
test
(bad)
jbe
das
loope
jle
adc
push
cld
data16
xchg
mov
(bad)
out
iret
popf
mov
xor
xlat
and
mov
addr16
push
ja
out
pushf
scas
jmp
in
(bad)
fnstcw
cld
jecxz
in
pop
das
push
(bad)
jecxz
dec
popf
aas
ds
jle
inc
int3
mov
adc
mov
test
cmp
xchg
test
mov
retf
idiv
out
jno
xchg
dec
or
cmp
int3
paddsb
push
js
cwde
std
stos
outs
ins
test
cwde
rcl
sub
arpl
fsubp
sub
xor
sub
and
mov
pop
fucomi
ins
int
imul
inc
xchg
pop
cmp
push
leave
jne
pusha
xor
inc
jge
(bad)
es
push
mov
aad
sub
sahf
inc
cmc
pusha
mov
dec
sub
jb
shl
add
xor
not
push
lahf
arpl
(bad)
scas
sbb
adc
dec
push
add
inc
lods
jae
inc
inc
xor
add
adc
jne
add
jmp
xchg
adc
inc
sub
xchg
and
inc
xor
or
mov
arpl
punpcklbw
push
or
push
mov
call
sub
push
stc
push
call
and
add
les
popa
xchg
pop
push
nop
add
sar
aas
push
sub
fnstenv
je
int
mov
jl
dec
mov
or
mov
jne
(bad)
jg
push
jp
fcmovnu
dec
inc
test
loop
sbb
or
sahf
int
ret
mov
jns
jbe
and
mov
loopne
enter
pop
push
pop
popf
int
fdiv
fist
inc
push
test
xchg
pop
ins
arpl
pop
fmul
lea
pushf
hlt
inc
shl
xor
mov
jno
popf
or
idiv
cs
push
mov
mov
jmp
ins
xor
mov
out
pop
scas
jl
cmp
enter
leave
repnz
mov
sar
ds
bound
cmc
xchg
iret
gs
ins
stc
add
mov
clc
dec
in
fcmovbe
cmp
cmp
or
ret
fbld
clc
dec
iret
jnp
fs
out
test
cmp
ins
mov
jno
cmp
xchg
adc
push
mov
aaa
aas
(bad)
(bad)
mov
mov
mov
push
mov
push
inc
ins
out
add
lock
push
add
mov
mov
xchg
sub
rol
imul
inc
push
dec
sbb
shld
in
rcr
sbb
call
lods
inc
sbb
icebp
sbb
jg
mov
(bad)
arpl
xchg
rcl
test
test
cli
and
loop
pushf
mov
or
daa
mul
sub
iret
stos
inc
pop
rol
mov
add
and
cmp
(bad)
mov
pushf
das
sbb
loop
bound
mov
popf
mov
fisub
sbb
adc
mov
mov
push
jmp
push
sbb
sbb
cmps
xchg
dec
sub
jecxz
into
dec
xchg
and
inc
pop
jge
or
pop
or
cmp
cmp
dec
enter
icebp
push
das
test
and
fistp
xchg
hlt
inc
retf
test
fcomi
adc
outs
inc
outs
nop
test
add
sub
aad
sub
loope
xchg
mov
mov
cmp
cmp
fdivr
push
int
fdivr
xchg
dec
jmp
push
inc
inc
add
iret
jnp
jge
or
mov
loop
sub
bound
(bad)
sub
gs
jmp
xor
and
sahf
adc
pusha
ins
ret
fwait
loop
push
jp
lods
cmps
fnstcw
push
inc
hlt
jnp
xor
dec
or
sub
popa
mov
or
leave
popa
rcl
out
mov
push
cli
push
adc
cmp
mov
rcr
mov
jmp
inc
movs
pop
sti
mov
icebp
pop
push
mov
js
mov
ins
inc
sub
movs
and
clc
cwde
and
mov
dec
popa
sub
and
fsubr
aas
ror
movs
imul
ret
mov
lahf
pop
iret
jle
sub
xchg
outs
pop
imul
aaa
dec
sub
imul
mov
int3
aas
pop
in
std
shl
(bad)
jmp
xor
push
pop
scas
dec
loop
mov
xchg
pop
jg
aas
mov
push
jmp
ins
stc
xlat
adc
scas
inc
(bad)
es
xor
shl
dec
sbb
in
js
or
xchg
pop
int3
or
test
dec
mov
push
push
mov
inc
xchg
out
push
cmps
mov
imul
push
adc
call
pop
in
dec
mov
sub
mov
add
jb
sti
and
pusha
hlt
cmc
fcmovu
stc
mov
lock
sub
lea
adc
and
pop
out
xchg
dec
(bad)
stos
in
pusha
mov
or
call
push
xor
mov
mov
fmul
inc
add
sub
lahf
add
test
pop
movs
test
ret
dec
test
icebp
push
rep
add
pushw
ret
popa
and
xor
imul
sbb
dec
mov
das
ret
js
jno
push
inc
(bad)
push
add
sar
xor
imul
cli
es
mov
scas
jae
and
ins
mov
xor
xchg
cld
add
call
pop
repz
ficom
out
mov
jns
xchg
push
stc
push
xchg
cld
fdivr
push
or
pushf
lea
movntq
pop
(bad)
scas
pop
(bad)
repz
call
mov
jmp
stos
pop
call
push
cmc
dec
in
loopne
fdivr
stos
aad
in
jno
gs
fdivp
lahf
lahf
dec
fidiv
mov
sbb
imul
icebp
dec
lods
hlt
pop
mov
jge
jnp
pop
jle
mov
jmp
test
pop
into
movs
aas
mov
loope
pop
out
(bad)
outs
movs
pop
pop
dec
fidivr
push
stos
sbb
(bad)
lods
jp
jp
js
mov
add
mov
dec
jmp
out
dec
call
loopne
push
mov
cld
xlat
xlat
xor
and
fs
outs
call
mov
cs
inc
pop
cwde
xor
mov
push
sahf
lea
test
into
lahf
into
es
inc
sub
xchg
scas
xor
je
call
loopne
stc
add
out
mov
push
scas
mov
inc
add
(bad)
inc
sbb
fmul
call
adc
mov
je
nop
cmp
test
add
push
jp
ins
popa
inc
(bad)
lea
pusha
imul
jge
jmp
and
push
xchg
(bad)
sub
jns
inc
dec
movs
or
je
pop
add
ins
sub
shl
or
(bad)
mov
sub
xor
stos
jno
or
and
or
push
mov
outs
(bad)
aam
push
adc
mov
arpl
jns
mov
cmps
dec
fimul
mov
dec
sahf
push
das
jmp
inc
adc
inc
xchg
leave
cmps
(bad)
lods
mov
imul
aas
int3
pop
and
xchg
add
call
jo
mov
mov
push
gs
cmp
push
imul
in
xor
(bad)
lods
xor
int
pop
mov
mov
pop
xlat
mov
pop
(bad)
fisttp
push
inc
cmp
ret
lea
jg
div
(bad)
adc
loope
movs
mov
lock
les
pushf
outs
inc
in
int
mov
mov
imul
jle
xor
pop
into
add
jno
rcr
dec
dec
push
dec
ja
imul
mov
test
jg
(bad)
adc
cli
add
pop
aad
pop
outs
aad
push
inc
xor
(bad)
pushf
rol
pop
ds
mov
mov
bound
jbe
sbb
daa
push
xchg
push
add
sub
adc
pop
out
pop
out
movs
out
push
movs
arpl
dec
jno
lock
jmp
inc
movs
je
adc
fs
jecxz
mov
cld
dec
clc
test
(bad)
fist
mov
mov
push
repnz
movs
cmp
jl
and
jne
cwde
(bad)
xchg
pusha
cmps
mov
cmp
mov
xor
retf
lds
shl
jp
mov
or
std
ins
xchg
or
dec
xchg
push
sub
mov
xor
xor
sbb
or
cwde
pop
in
lds
es
jmp
fldcw
and
dec
cmps
adc
mov
inc
add
mov
retf
imul
test
sahf
(bad)
jbe
in
lea
xchg
(bad)
inc
add
add
loopne
jp
clc
jle
xor
mov
dec
loop
bound
fisub
xor
rol
mov
xchg
retfw
push
dec
inc
and
sub
add
add
or
mov
push
ltr
xor
dec
and
loopne
aas
add
sub
pop
push
inc
ror
sbb
or
push
je
push
punpckldq
jge
cmp
add
ret
or
inc
repnz
cmp
push
sbb
pop
ds
jbe
mov
fstp
or
adc
(bad)
push
fdiv
and
mov
ins
add
cld
outs
add
fcmovbe
ret
inc
imul
xchg
pop
retf
dec
fdiv
cmp
inc
push
hlt
rol
in
mov
lahf
out
xchg
fbstp
xchg
mov
es
lahf
mov
das
fild
inc
mov
mov
(bad)
stc
mov
dec
lods
cld
mov
movs
jmp
dec
test
sbb
out
test
call
imul
cli
pop
das
hlt
jg
pop
cmc
shl
(bad)
dec
fwait
das
test
out
imul
cli
rcl
(bad)
cmp
bnd
(bad)
ret
dec
inc
xchg
shl
iret
mov
sbb
(bad)
pop
scas
push
out
retf
cld
mov
sub
test
pushw
shl
shl
xchg
ins
cmp
push
pusha
xor
mov
daa
fbld
(bad)
inc
mov
push
xchg
inc
sub
jne
mov
push
push
xchg
adc
push
inc
mov
inc
pop
dec
mov
ja
xchg
stc
add
sub
in
ficomp
jno
add
in
xor
ret
pop
mov
push
leave
and
outs
jo
dec
mov
and
sub
mov
data16
add
xor
mov
or
cmp
xchg
es
ins
fnstcw
mov
rol
inc
outs
push
push
retf
les
and
sbb
fstp
out
adc
dec
in
retf
mov
int
and
repnz
dec
push
mov
pop
call
fldz
mov
inc
xchg
push
add
das
push
push
outs
xchg
cmp
adc
data16
shr
shl
rcl
hlt
(bad)
in
adc
sti
movs
dec
mov
out
sub
and
aam
aam
mov
ret
lahf
inc
mov
gs
pop
xchg
test
cs
inc
inc
inc
dec
mov
jae
out
pop
data16
pop
sub
inc
dec
stos
push
movs
out
xor
adc
fst
cdq
out
or
(bad)
sahf
cmp
pop
pushf
xor
mov
rcl
in
nop
in
aam
cli
xor
mov
mov
inc
mov
mov
lock
sub
cmc
test
cli
xor
xchg
pop
cdq
or
loop
retf
lahf
retf
popf
js
xchg
out
arpl
dec
push
rcl
(bad)
int
jge
ins
xchg
into
loopne
push
test
es
fild
pop
pushf
repnz
inc
jno
loop
fmul
mov
pusha
push
(bad)
and
mov
jb
enterw
sub
ret
add
jecxz
adc
call
sub
(bad)
fcom
jg
adc
cdq
pop
add
cmp
outs
es
inc
cdq
mov
jns
pop
adc
fs
int
scas
enter
xor
lea
jbe
cmc
jecxz
jmp
mov
jg
aad
xchg
jmp
lahf
push
xor
sti
lods
loopne
ja
mov
lahf
dec
inc
ror
outs
scas
xor
inc
pop
psrld
(bad)
mov
push
movs
cwde
loope
sbb
dec
sub
and
push
dec
inc
retf
and
push
mov
int3
dec
xchg
pop
scas
aad
stos
mov
mov
leave
jmp
jl
rcl
mov
adc
mov
or
dec
jp
push
jp
inc
clc
test
mov
data16
jecxz
sbb
fcom
add
adc
retf
inc
push
dec
sub
test
rcr
xchg
mov
scas
lock
nop
sbb
in
sbb
retf
push
retf
xchg
mov
xor
pop
inc
mov
lds
add
xchg
sbb
mov
xor
sbb
mov
push
scas
and
psubb
test
mov
call
sub
push
fsub
fcomp
cld
jns
ret
mov
loope
js
or
and
push
leave
xor
and
add
xchg
loopne
sahf
in
test
popa
jb
add
test
out
stos
das
das
ss
jmp
fidivr
repz
push
xchg
ins
cmp
aas
push
cmps
pop
adc
jmp
loop
pop
mov
mov
sub
retf
push
push
jns
sar
rcr
add
sbb
cmp
in
mov
jae
repz
jne
dec
cmp
push
push
push
ficomp
imul
inc
pop
pop
test
js
xor
cmp
pop
das
cs
lahf
in
jns
xlat
dec
(bad)
xlat
inc
pop
jmp
pop
imul
int
cmp
lea
pop
cmp
sti
cdq
lods
test
clc
test
test
jb
sahf
imul
mov
leave
inc
ret
inc
dec
cmp
in
(bad)
es
fwait
adc
pop
inc
stc
mov
je
inc
mul
rol
shr
retf
outs
cmc
movs
out
jg
jl
push
lock
sbb
fnstenv
js
shr
dec
outs
sub
push
sub
xor
out
and
(bad)
push
mov
fiadd
idiv
xchg
loop
mov
test
mov
test
xor
jb
mov
hlt
cli
mov
das
xchg
jno
adc
gs
loopne
stos
dec
and
cmp
adc
mov
jmp
test
add
sub
add
push
into
inc
iret
inc
addr16
mov
fptan
pop
cmp
and
pop
jp
enter
jecxz
pushf
jg
lds
lock
mov
sub
bound
cmp
mov
or
inc
adc
pop
push
jbe
aam
pusha
adc
xchg
jl
(bad)
push
lahf
mov
inc
add
jg
imul
mov
pop
test
iret
jecxz
sbb
or
retf
lock
movs
lahf
mov
(bad)
xor
cs
pop
cwde
mov
addr16
mov
repz
int
fucomi
rol
lods
retf
jmp
or
mov
jmp
mov
stc
sbb
sar
mov
push
iret
aaa
adc
adc
lods
clc
inc
mov
(bad)
jp
mov
sub
rcl
fsubr
repz
test
sbb
int
ins
mov
mov
pop
stos
xchg
xor
test
jle
cmp
push
ins
cmp
stc
fdiv
push
xor
xor
aas
inc
sbb
sbb
pop
dec
sbb
rcl
out
pop
rol
inc
lds
pop
cs
add
fidiv
xor
(bad)
imul
movs
call
lds
int3
mov
std
fcmovne
cmp
mov
add
mov
in
fwait
sbb
add
jne
pusha
ret
repz
pop
jb
jo
cmps
int
aas
pop
jmp
into
and
(bad)
vmaxss
jge
sbb
cld
mov
ud0
mov
cmc
repz
aas
cmp
mov
dec
adc
ret
es
out
jmp
sub
movs
mov
in
push
cmps
retf
out
mov
gs
aad
retf
rol
addr16
mov
inc
mov
adc
xor
push
mov
dec
add
test
add
dec
sub
stos
fwait
xchg
jge
jp
pop
pop
mov
nop
mov
sti
adc
cmp
push
cmp
or
or
stos
jns
pop
xchg
push
xor
nop
pop
sub
or
sbb
call
pop
add
push
mov
pop
push
add
sbb
hlt
adc
pop
call
(bad)
ret
imul
mov
jmp
jne
pop
jecxz
mov
mov
(bad)
xlat
push
stos
cmp
int3
fwait
aam
mov
iret
inc
repnz
ss
popa
std
test
mov
xchg
xor
mov
ret
mov
inc
jb
xchg
inc
sub
(bad)
adc
dec
add
test
sub
xor
dec
stos
int3
addr16
jmp
mov
jl
xchg
xor
into
xchg
adc
push
lea
jnp
sahf
mov
add
push
call
cdq
add
inc
ror
inc
add
dec
sbb
push
adc
cmp
dec
bound
mov
cli
test
fcomp
mov
or
ins
sahf
cmp
pop
js
(bad)
(bad)
cmp
pop
pushf
xor
mov
jge
cmp
ret
push
out
ja
sub
mov
stc
loopne
sti
mov
fmul
outs
jne
mov
(bad)
mov
jmp
stos
jg
cli
sub
xchg
inc
push
sti
jbe
jl
inc
cld
cmps
sbb
cdq
xchg
icebp
ret
loop
sti
sbb
pop
outs
cld
call
shl
clc
clc
fs
sub
pop
ins
adc
imul
jle
mov
js
push
cli
(bad)
sub
cmp
sti
jp
(bad)
int3
mov
xchg
stc
add
cmps
iret
fs
pop
lods
std
shl
shl
enter
inc
pop
pop
lock
neg
sub
int
popf
iret
mov
pop
push
cmp
pop
(bad)
lea
inc
rcl
sar
dec
pop
pop
and
and
adc
or
jge
push
retfw
imul
sub
add
xchg
push
mov
mov
retf
pop
sub
popa
cmp
ds
fsub
sbb
push
mov
sub
push
dec
loope
and
dec
xor
mov
(bad)
movs
cdq
stos
pop
mov
es
pop
inc
or
pop
movs
push
cmp
push
xlat
scas
inc
inc
cmp
mov
fsub
and
cdq
add
push
fwait
ins
mov
mov
fdivr
ins
or
pop
cmp
sub
sub
pop
scas
sub
pop
movs
pmulhrsw
dec
mov
repz
sbb
cmp
jo
test
mov
out
jb
in
loope
fxtract
cli
pop
jbe
outs
(bad)
retf
das
outs
cmc
icebp
nop
in
inc
push
pop
(bad)
xchg
cdq
cwde
in
add
addr16
push
jb
sub
test
jecxz
add
mov
push
jl
jg
push
jge
push
(bad)
out
inc
sub
aam
test
xor
dec
jae
pop
or
int
in
ja
fbstp
ret
adc
jb
icebp
movs
and
shl
clc
(bad)
les
outs
fisubr
mov
movs
(bad)
jecxz
aad
push
in
inc
fs
mov
lds
add
push
jb
sub
(bad)
popf
jnp
cmp
or
mov
stos
mov
push
push
ror
jp
inc
jmp
cmp
(bad)
aad
dec
mov
push
(bad)
mov
xor
mov
jb
int3
(bad)
add
mov
xchg
ffree
inc
xlat
fdiv
popf
push
xchg
sbb
clc
fiadd
hlt
mov
pop
lods
inc
xchg
cmps
cmp
dec
jo
lea
loopne
pop
test
xchg
push
jmp
cwde
push
dec
add
and
bound
mov
fwait
loopne
lds
inc
cmp
fisttp
out
sub
push
dec
add
aad
dec
(bad)
movs
mov
cs
loop
call
push
adc
mov
push
rcl
jnp
jmp
(bad)
je
icebp
jg
fprem
jg
xor
mov
dec
jmp
jnp
aas
fisubr
fnstenv
fwait
pop
call
outs
imul
push
xor
and
cli
popa
clc
stc
lods
in
push
rcr
mov
add
into
mov
pop
fwait
mov
push
fimul
sbb
adc
mov
cwde
bound
sub
and
shl
sbb
ins
fdiv
je
sub
pop
xchg
loop
cmp
call
jp
(bad)
out
inc
push
mov
ins
mov
outs
ins
std
push
aam
repnz
xlat
int3
sti
lea
mov
sbb
call
les
loop
lock
pushf
out
cmp
pop
stos
and
sar
push
mov
pop
pushf
loopne
sahf
mov
xor
movs
dec
loopne
sbb
and
mov
mov
xor
ror
test
mov
dec
inc
sub
dec
sbb
scas
add
add
adc
mov
rcr
lea
xor
ret
mov
(bad)
sti
sbb
sub
pop
inc
aas
ss
dec
push
cmps
fwait
mov
iret
sbb
test
hlt
or
iret
jns
xchg
and
push
xchg
(bad)
push
inc
mov
jmp
imul
test
mov
cmp
imul
sub
mov
inc
push
push
xchg
loop
jnp
cmps
mov
out
stos
std
pop
fld
ret
imul
ror
ins
retf
adc
pop
arpl
sub
sub
jl
es
push
add
push
mov
adc
ror
lahf
lahf
mov
or
sbb
pop
jnp
daa
cmps
mov
mov
jmp
repz
(bad)
loop
cmps
ret
dec
outs
mov
mov
and
(bad)
jle
jl
es
fs
xchg
setg
jo
test
lahf
cmp
fidivr
mov
pop
fwait
in
into
addr16
mov
js
dec
cld
ret
jp
fmul
mov
(bad)
out
inc
cmp
xor
shr
dec
ins
ja
in
repnz
int
sbb
cmp
(bad)
and
scas
js
sub
das
adc
or
movs
add
push
in
xchg
pop
sub
ret
push
adc
shl
sub
mov
inc
or
shl
pushf
mov
add
xor
adc
and
adc
mov
cmovl
dec
and
mov
cmc
int
inc
sti
inc
ret
xor
rcr
or
shl
cmps
test
dec
fcomp
mov
scas
retf
js
ss
mov
inc
mov
bnd
and
mov
sub
sub
xchg
movs
leave
xchg
xor
add
sub
cmp
sahf
leave
pop
jno
pop
sahf
lods
sbb
mov
adc
push
sbb
adc
je
xor
xor
xchg
cmp
or
pop
cmp
pop
or
mov
retf
std
mov
mov
jmp
mov
dec
loope
test
sub
cmp
xor
outs
sub
test
xlat
dec
dec
mov
shl
pushf
add
sub
mov
sub
lds
in
daa
clc
push
add
addr16
not
das
jne
cmp
mov
push
or
pop
add
inc
sbb
adc
cmps
in
pop
sbb
jmp
mov
fstp
or
cmp
test
add
dec
fcmove
add
movs
jb
push
jge
movs
mov
es
ret
cmp
xor
rcl
xchg
rol
in
xlat
and
enter
imul
mov
test
aad
fidiv
mov
ss
fucomp
mov
mov
fnstsw
mov
or
aam
shl
xchg
sbb
push
and
push
pop
je
shr
sub
inc
fnstcw
div
fnsetpm(287
arpl
les
or
xchg
mov
add
lock
mov
(bad)
icebp
cmp
dec
add
sbb
les
mov
adc
mov
sti
imul
stc
out
hlt
aas
pop
retf
cmc
(bad)
fistp
xchg
fwait
std
in
in
retf
out
jg
sar
out
jecxz
pop
sbb
cmp
(bad)
(bad)
test
ja
cmp
add
mov
inc
xchg
push
sti
mov
loope
jnp
gs
sub
cwde
mov
xchg
push
out
mov
mov
adc
shr
sbb
rol
in
xchg
xlat
rcl
pop
dec
adc
adc
xchg
inc
rol
push
xchg
je
fistp
dec
or
cmps
jno
jb
inc
call
xor
xchg
push
cs
dec
fisubr
and
push
(bad)
(bad)
clc
gs
ds
sub
jg
or
xchg
std
push
hlt
retf
(bad)
stc
mov
xchg
sbb
sub
mov
cmp
xchg
sbb
xor
dec
out
or
arpl
imul
xchg
cmps
or
add
jge
ins
ficomp
sub
fxch
in
ins
xor
imul
push
fnstsw
push
mov
lods
int3
sub
movs
das
or
pop
sbb
mov
adc
sbb
fld
xchg
push
cmps
inc
xor
out
mov
(bad)
leave
(bad)
jmp
rol
pop
add
sub
aaa
popa
or
mov
add
data16
cmp
std
aad
xor
pop
std
jmp
and
sti
and
or
jnp
daa
xor
sbb
jb
std
inc
stos
popf
pop
xchg
bnd
sbb
(bad)
movs
sub
jae
jge
ins
sti
std
dec
adc
cwde
imul
jl
jns
das
cli
inc
das
clc
mov
repz
daa
retf
xor
jo
sbb
sbb
addr16
iret
cs
cmc
ret
test
pusha
ds
mov
xchg
test
push
mov
jbe
ja
in
sahf
scas
mov
jb
mov
jmp
xchg
outs
cmps
test
xchg
jno
imul
dec
clc
dec
ror
cmp
jecxz
fisttp
into
jnp
pop
hlt
fidiv
and
jmp
pop
sub
fstp
lods
adc
push
mov
cli
or
out
pusha
or
stos
add
xchg
enter
fbld
ds
imul
and
bound
sub
fwait
bnd
cwde
outs
in
int
adc
movs
dec
arpl
xor
(bad)
jl
sub
test
xor
(bad)
sahf
mov
pop
sub
cmps
pop
das
xchg
sub
inc
xor
aaa
ror
inc
je
pushf
pop
je
dec
mov
lods
out
pusha
xchg
jp
and
je
shl
jbe
ds
jmp
xchg
cld
pop
push
mov
mov
xor
push
push
add
repz
pop
mov
daa
mov
bound
mov
mov
mov
icebp
mov
inc
sbb
cmps
ror
fs
ret
fst
pusha
lods
jns
sub
xchg
sub
mov
(bad)
rcl
(bad)
mov
dec
push
jb
mov
jmp
adc
adc
mov
mov
push
test
ror
mov
sbb
ficom
stc
or
bound
movs
mov
(bad)
ficom
mov
jmp
pop
mov
mov
adc
int
push
ins
jg
sar
pop
retf
scas
lods
jns
aaa
fdiv
ds
mov
into
icebp
dec
mov
pop
mov
ror
mov
cmp
(bad)
pop
lods
nop
ins
imul
imul
xor
sbb
test
fs
push
(bad)
fcomi
icebp
dec
mov
xchg
adc
imul
mov
pop
xlat
jne
or
mov
jp
pushf
mov
ret
ficomp
shl
fidiv
add
aad
fst
retf
mov
pop
scas
xchg
std
(bad)
int3
inc
and
or
xor
inc
xchg
jl
xor
neg
adc
stc
or
cmp
sub
push
sbb
inc
sbb
pop
aad
fimul
int3
xor
xchg
and
test
mov
mov
sti
pop
(bad)
jg
test
scas
sbb
pop
ds
(bad)
neg
lock
jecxz
(bad)
icebp
int
leave
xchg
mov
mov
mov
mov
daa
(bad)
(bad)
pop
div
mov
cs
repz
jns
pop
add
sub
mov
gs
sbb
cmps
ins
mov
fs
rol
imul
push
ss
cmp
cwde
dec
dec
adc
push
pusha
inc
mov
xor
pop
jge
xor
or
pop
pop
mov
xchg
dec
inc
ins
not
add
pop
call
(bad)
mov
xchg
dec
mov
xchg
dec
push
outs
test
fsub
adc
or
popf
pop
in
push
in
jp
daa
mov
loop
jl
mov
mov
sub
scas
sub
inc
aaa
jb
push
sbb
xchg
clc
into
aas
shr
loopne
(bad)
imul
dec
leave
cld
sub
xchg
mov
inc
push
test
or
xor
adc
ret
mov
in
daa
push
cmps
addr16
rcl
pop
sbb
sbb
sbb
test
out
out
in
ja
cmp
cdq
retf
mov
or
jp
inc
or
arpl
mov
out
push
inc
pop
fwait
xor
add
mov
rol
test
and
retf
test
cdq
and
jmp
sbb
dec
fcmovu
jno
inc
cmp
fisttp
jns
sbb
dec
xchg
jle
test
dec
sbb
(bad)
adc
aad
jmp
lock
and
jle
in
hlt
inc
xchg
jmp
iret
cmps
in
mov
in
mov
cmp
int
lock
aad
pop
scas
repnz
fisub
push
std
movs
in
xchg
push
jl
retf
icebp
das
outs
push
jg
iret
call
(bad)
fmulp
jle
mov
iret
in
je
mov
mov
hlt
lahf
dec
retf
dec
sub
jle
sbb
rol
fs
in
sub
loopne
ss
pop
stos
icebp
adc
in
popf
retf
lods
ja
cmps
out
pushf
jbe
xor
mov
retf
inc
push
push
push
ret
mov
push
shl
dec
mov
das
ins
xchg
sar
pop
addr16
movs
scas
popa
push
fild
jge
jo
sub
push
jns
stc
(bad)
call
and
sub
retf
jne
sbb
mov
stos
ins
rcr
sbb
in
adc
outs
pop
aad
xor
jmp
cmps
lds
jbe
in
push
inc
xchg
dec
mov
sbb
fcmovnb
cld
mov
fnsave
xchg
daa
lods
retf
cmc
jp
in
jno
popa
xchg
mov
imul
mov
arpl
add
inc
pop
cld
sub
push
sub
xor
call
xor
or
pop
cmp
js
xor
mov
aam
sbb
or
ss
push
adc
cli
test
in
cmps
pop
pop
cmp
xor
cmc
dec
les
pop
cmps
inc
jnp
push
inc
xchg
push
shl
add
or
dec
push
and
ss
or
jo
pop
pop
pop
pop
ins
push
jns
push
lods
mov
mov
adc
enter
hlt
call
bswap
xor
and
or
shl
retf
fwait
arpl
rol
sub
add
xchg
push
sbb
hlt
hlt
in
(bad)
int
cld
mov
adc
pop
jmp
cli
ret
dec
mov
or
in
stos
sbb
add
sbb
pusha
clc
add
icebp
or
pop
jg
mov
and
rcr
ins
ret
stos
and
cwde
add
call
loopne
lods
mul
cli
bound
ret
jae
or
and
sub
stos
pop
pop
or
and
cmc
gs
add
jecxz
sbb
es
fmul
movs
dec
pop
fdiv
repz
ins
mov
shl
sub
mov
add
jo
jmp
sub
cmps
ins
int3
fdiv
inc
ja
jg
enter
xchg
je
or
cwde
or
inc
adc
fild
mov
out
pop
aaa
cmp
jl
cmp
dec
iret
push
mov
repnz
jecxz
std
mov
mov
stos
popf
mov
jmp
icebp
loope
(bad)
mov
test
pop
sub
sbb
add
dec
pushf
cmp
icebp
fidiv
dec
inc
adc
cmp
fisubr
mov
gs
push
mov
add
adc
xchg
xor
add
jo
or
fs
and
or
aaa
jno
push
and
and
imul
mov
push
pop
(bad)
repnz
add
xor
mov
push
mov
sub
inc
jmp
ret
fcom
adc
scas
jle
scas
hlt
push
sbb
push
sbb
dec
sti
xor
xchg
xlat
sub
repz
mov
out
pop
ds
sbb
icebp
cs
icebp
leave
push
ss
inc
lock
sub
mov
xchg
adc
inc
sbb
and
mov
or
xchg
fisub
outs
add
push
sub
cli
xchg
pop
clc
mov
cmp
and
mov
ss
test
mov
inc
xor
lock
and
ret
dec
cmp
and
or
dec
push
fisub
pop
xor
cmp
mov
or
sbb
pop
xchg
stc
mov
loope
inc
xchg
rcl
or
push
jmp
cdq
inc
ds
pushf
or
push
aaa
bound
ror
mov
int
bswap
push
adc
shl
jns
cmp
mov
xchg
ds
in
cmc
shl
es
ins
cmp
mov
mov
rcr
lahf
push
popf
cli
fistp
push
aad
iret
push
pop
cdq
lea
sahf
cwde
mov
jmp
test
scas
nop
cmps
dec
in
bound
ja
rcl
std
hlt
int
popf
mov
cmc
sahf
in
movs
out
fld
fdivr
adc
lods
hlt
imul
lods
xchg
test
popa
fs
(bad)
and
push
inc
cwde
imul
stos
mov
repnz
(bad)
jno
or
mov
push
or
mov
inc
ss
enter
(bad)
out
ins
mov
(bad)
ret
sub
xor
loope
inc
cmc
and
sub
xchg
ins
sbb
or
outs
cli
push
ror
fldenv
add
mov
repnz
inc
fnsave
stc
adc
xor
test
cmp
lods
js
jae
movs
jbe
mov
mov
icebp
xor
add
xchg
mov
sbb
dec
fs
stos
xor
pop
aad
and
int
add
imul
pop
(bad)
xchg
fwait
jmp
fwait
(bad)
je
pop
ret
mov
push
pop
sub
push
psubsw
or
je
inc
das
pop
pop
cdq
cwde
lahf
outs
xor
in
inc
jb
xchg
cmp
call
mov
xor
stc
adc
xlat
mov
add
mov
aad
mov
repnz
popa
in
in
inc
push
dec
dec
fwait
shl
mov
mov
int
retf
push
rcr
pop
rol
adc
mov
mov
sbb
sbb
inc
pop
push
push
sub
cmp
xchg
jmp
inc
jne
add
dec
push
cmp
std
adc
push
xchg
mov
cmp
or
movnti
push
into
daa
(bad)
retf
rcr
pop
in
ins
popf
cdq
pop
call
xor
(bad)
mov
in
mov
jp
adc
imul
mov
sbb
add
pushf
aas
jo
jmp
jno
xor
mov
push
xor
lds
les
or
in
scas
mov
xchg
cmp
cdq
push
mov
dec
loopne
xor
mov
jecxz
inc
aam
es
add
lods
and
bound
loope
imul
sub
(bad)
dec
test
div
mov
in
cwde
sti
dec
bound
bound
fimul
cmp
cdq
test
(bad)
cld
shr
aas
mov
test
jg
pop
sti
(bad)
jle
sub
aas
push
pop
cld
mov
aam
fdiv
mov
hlt
repz
shl
mov
call
cld
imul
pop
sbb
inc
pop
and
scas
fnsave
push
mov
into
push
mov
imul
cmp
ss
clc
leave
mov
pop
gs
dec
mov
ss
nop
iret
push
sti
test
sti
test
out
shl
inc
fwait
xchg
call
sub
retf
sahf
clc
add
retf
fisub
in
hlt
mov
aad
test
(bad)
inc
dec
aad
js
push
aas
cmc
cli
(bad)
jmp
inc
mov
stos
jb
sar
dec
inc
dec
or
dec
push
xor
sbb
lods
xchg
aad
pop
add
add
jp
(bad)
jle
jle
sbb
mov
rcr
mov
scas
test
adc
or
and
sub
pop
xchg
mov
fsubr
push
pop
in
mov
shl
cwde
mov
xchg
cmp
retf
shl
pop
aad
inc
sbb
data16
mov
js
retf
push
fadd
mov
push
mov
push
(bad)
adc
sbb
sub
xor
jb
sub
fldenv
adc
bound
ja
mov
vpavgw
std
iret
out
adc
sbb
shl
repnz
clc
mov
jecxz
mov
xchg
clc
xchg
lea
pop
paddusw
or
into
lea
rcl
push
push
fnstenv
sbb
es
daa
pushf
fwait
popf
repnz
jbe
jmp
neg
loope
push
stos
lahf
fucompp
loop
cmc
stc
std
out
pop
cdq
cld
shr
pop
mov
sti
iret
(bad)
cmps
mov
sub
loopne
cmp
in
out
cmovl
das
dec
daa
aaa
add
out
pop
dec
or
int3
dec
and
cs
sub
jae
adc
pop
pop
mov
jnp
std
repnz
sti
popf
or
in
mov
es
dec
cmp
pop
dec
fidivr
rol
or
mov
jecxz
(bad)
mov
in
adc
std
dec
mov
mov
jmp
cmps
push
call
std
dec
pusha
shl
ds
test
lea
xor
xor
jne
mov
dec
mov
test
scas
aaa
mov
mov
jns
adc
sub
pop
nop
enter
fs
fcomp
nop
adc
dec
(bad)
cmp
es
mov
ds
cwde
stos
cmps
call
cmps
icebp
or
add
data16
push
pop
inc
jae
sub
adc
mov
jae
mov
xchg
sbb
movs
jp
sti
ss
xor
push
sub
loopne
inc
mov
sbb
or
jnp
arpl
(bad)
loope
jno
sub
or
es
ins
movs
sub
stos
mov
daa
mov
and
pushf
shr
in
add
dec
adc
cwde
cld
push
mov
add
jae
test
imul
aaa
jmp
fstp
ss
push
arpl
xchg
es
sar
jo
sbb
xchg
scas
movs
loope
mov
and
test
jmp
push
inc
mov
aas
jg
xchg
(bad)
dec
mov
cs
(bad)
out
cmp
add
call
mov
sub
sbb
cmp
cmp
sbb
mov
test
mov
lds
pop
gs
mov
loopne
jl
out
cmp
pusha
daa
or
inc
test
push
push
pop
mov
add
pop
clc
aaa
dec
push
mov
pop
or
ins
(bad)
sub
jg
fwait
retf
jns
adc
mov
cmp
inc
jmp
add
jno
jp
int
inc
mov
mov
icebp
mov
mov
or
idiv
jmp
les
inc
add
inc
mov
lods
ror
xchg
test
or
and
inc
cmp
adc
mov
repz
jns
leave
fmul
ins
add
ins
push
cmp
inc
mov
lds
out
(bad)
popf
test
mov
bound
jg
cmp
int
dec
push
jmp
ficomp
mov
repnz
fwait
mov
pop
test
and
jmp
mov
adc
retf
xchg
jl
test
and
addr16
mov
cwde
push
fisttp
imul
jge
test
jne
push
mov
pop
adc
xchg
or
inc
sub
stos
mov
fldenv
cmp
daa
lods
iret
cld
dec
pop
out
pop
dec
call
mov
leave
adc
(bad)
pop
inc
sbb
jmp
aaa
dec
cmp
push
ds
and
xor
sbb
dec
pop
xor
shl
sub
push
hlt
jl
aad
lock
cmps
jle
push
scas
adc
aaa
fimul
cdq
in
inc
fst
test
faddp
mov
xchg
mov
pop
or
js
mov
mov
and
popa
and
dec
mov
(bad)
or
mov
fisttp
push
push
or
dec
xchg
lds
int
mov
retf
xor
cli
and
lahf
mov
jecxz
pop
mov
xchg
rol
dec
js
int
pop
sub
dec
test
sbb
add
push
mov
into
jns
js
sub
test
(bad)
jecxz
(bad)
repz
sub
xchg
lock
mov
xchg
sbb
push
stos
hlt
pop
pop
icebp
retf
in
mov
fmul
xchg
out
shl
movs
outs
stc
add
movs
(bad)
dec
fwait
aas
mov
(bad)
fiadd
sub
in
scas
pop
in
jg
jbe
sub
pop
pop
cmp
pop
repz
pop
fisubr
leave
dec
sti
push
mov
sti
jp
or
fwait
adc
inc
dec
fs
retf
repnz
imul
les
xchg
fwait
lea
out
cwde
mov
ja
retf
push
stc
movs
movs
cli
jnp
repnz
pop
dec
dec
fxtract
xchg
pop
cmp
pop
test
xor
mov
lea
mov
inc
out
dec
(bad)
xchg
das
pop
retf
mov
sti
push
pusha
xchg
int
mov
leave
or
stos
cwde
add
shr
repz
mov
jo
fcom
sti
add
mov
in
repnz
adc
add
hlt
dec
inc
inc
push
jbe
fsub
fisub
xchg
movs
add
fptan
push
out
adc
or
jp
xor
or
pop
pusha
cmp
cwde
push
arpl
rcl
sub
popa
in
push
bound
lds
cld
jecxz
test
mov
jne
(bad)
fldcw
sub
add
jecxz
dec
push
or
(bad)
(bad)
xor
jno
xor
popa
lods
adc
adc
imul
ror
cmps
dec
or
jb
sbb
pop
pop
jne
xchg
xchg
push
jnp
sub
mov
mov
rcl
or
inc
push
xchg
and
outs
mov
push
mov
pop
add
js
mov
leave
xor
mov
mov
xchg
ins
pushf
js
pushf
fadd
popf
rcr
stos
movs
inc
loope
mov
add
out
pop
sub
ds
aad
gs
mov
push
arpl
lea
dec
pop
or
sub
fsub
clc
mov
xor
pushf
inc
cmp
lods
push
aas
fstp
jmp
pop
sub
daa
retf
not
fwait
neg
das
xor
test
xchg
sbb
test
outs
mov
aad
xchg
pop
push
call
mov
and
dec
push
(bad)
mov
inc
addr16
jno
inc
add
in
sbb
pop
sub
sub
dec
repz
lock
das
pmuludq
mov
popf
test
ins
sahf
pop
nop
int3
setle
retf
pop
lods
es
add
pop
mov
mov
xchg
mov
in
jge
jge
jmp
(bad)
mov
pop
add
stos
and
inc
out
mov
sar
rcl
sub
adc
mov
mov
add
iret
pop
and
les
cmp
movs
sbb
fsubr
adc
dec
ins
cmp
mov
scas
fld
jl
jo
ret
outs
push
bound
adc
shl
pusha
mov
or
addr16
rcr
or
(bad)
ret
pop
mov
ds
cli
mov
aaa
(bad)
jg
cwde
(bad)
(bad)
outs
cmc
ret
ror
test
scas
sbb
cwde
hlt
inc
stc
cmp
pop
add
jae
inc
or
xchg
or
ds
pusha
push
mov
cmp
push
or
in
push
lahf
fidiv
les
xchg
call
lods
adc
sub
push
adc
jbe
push
mov
dec
inc
cmp
push
xor
dec
aad
out
pop
ficomp
dec
int3
es
neg
sbb
pop
xchg
mov
push
xor
retf
dec
inc
aas
dec
mov
stos
inc
sbb
mov
mov
icebp
adc
pop
(bad)
mov
daa
adc
add
adc
dec
cmps
push
addr16
mov
fisttp
call
mov
mov
add
push
push
sbb
or
cmp
dec
out
sub
mov
pop
inc
sbb
inc
sbb
das
or
shl
adc
lahf
stos
test
pop
adc
popf
stos
jne
mov
loop
push
out
dec
psrlw
cmps
dec
xchg
adc
or
rcr
xor
cwde
dec
mov
pop
pop
leave
aas
jnp
cmps
cmps
into
inc
jmp
inc
out
leave
jbe
dec
cwde
ret
inc
es
in
(bad)
sub
mov
idiv
pop
cli
loop
aam
aad
scas
rcl
std
xchg
mov
fcom
test
and
mov
pop
leave
loop
jns
mov
pop
test
xchg
xchg
test
pop
mov
add
fsubr
neg
fimul
leave
test
iret
ins
jne
ret
mov
jmp
(bad)
out
ins
xchg
outs
jle
jl
cmps
daa
(bad)
sbb
mov
sbb
(bad)
push
ret
dec
aas
cmp
jge
ret
mov
scas
test
push
xor
repz
push
std
imul
aas
dec
cld
jecxz
mov
xchg
pop
fld
in
xchg
nop
hlt
sar
pop
xlat
ret
pop
fmul
ds
jl
mov
lods
call
lods
js
das
(bad)
aaa
stos
test
outs
or
cmp
fistp
rol
inc
fcom
js
icebp
repnz
and
sbb
inc
stos
aas
out
mov
into
sbb
xchg
pop
retf
lods
fwait
push
stc
mov
out
pop
sub
push
rcr
adc
sbb
pop
imul
inc
adc
out
dec
xchg
sbb
jmp
mov
ins
push
mov
adc
call
jmp
add
dec
rol
in
lods
popa
popf
aaa
dec
pop
or
mov
pop
in
ret
fsubr
imul
dec
js
ret
repz
mov
fadd
lods
ds
inc
xchg
mov
retf
push
shl
jno
stos
scas
cs
das
(bad)
mov
and
fstp
mov
aam
sub
inc
xchg
xchg
sti
adc
pop
arpl
or
or
sub
pop
xchg
movs
js
inc
jl
adc
xchg
xor
data16
in
repnz
dec
and
icebp
arpl
nop
movs
mov
xchg
mov
push
pusha
push
push
dec
push
ret
jbe
push
aad
mov
dec
xor
(bad)
popf
test
ror
and
xor
push
out
ds
lock
in
dec
ss
cmp
pop
scas
add
sbb
(bad)
je
push
add
sbb
push
xor
fwait
xchg
sahf
fstp
lahf
cmp
xchg
imul
mov
sub
cmp
ss
ret
xor
mov
popf
fcomp
fst
cdq
(bad)
ins
cmp
fiadd
je
dec
arpl
nop
fwait
je
fisubr
mov
xchg
push
inc
sbb
loope
cmp
xchg
and
movs
sbb
pusha
dec
das
sbb
inc
cmp
mov
adc
mov
sbb
cmps
mov
mov
pop
(bad)
mov
lods
jp
arpl
into
add
mov
es
or
sub
pop
pop
in
xchg
inc
mov
je
adc
stc
lods
out
push
dec
sub
jl
mov
and
mov
push
pop
(bad)
in
(bad)
in
mov
push
pop
jbe
fnstsw
jp
int3
push
and
loop
inc
dec
fisttp
jo
jo
or
adc
mov
ret
push
cmp
test
(bad)
cld
mov
out
das
scas
pop
mov
pop
repnz
out
fistp
or
mov
cld
ret
vmovdqu
jecxz
sbb
ret
out
sti
add
call
pusha
cs
or
push
sub
mov
imul
jle
jmp
or
movs
leave
cmp
pop
sbb
shl
shl
imul
aam
bound
and
imul
or
fsubr
cmp
or
mov
aam
retf
cld
test
mov
ins
mov
out
xchg
retf
jle
push
xchg
mov
ja
(bad)
sbb
inc
or
ds
jb
aam
loopne
and
cmps
cmp
and
push
add
add
adc
push
push
mov
or
sbb
scas
pop
clc
adc
and
test
xchg
enter
retf
push
mov
xor
adc
xlat
mov
push
cli
mov
ss
cmps
int3
retf
mov
sbb
int3
mov
jno
in
dec
loop
mov
shr
test
sbb
call
or
or
leave
ja
out
sub
fadd
dec
and
repnz
xchg
shr
js
push
cmc
ja
add
nop
dec
outs
inc
sub
ficomp
mov
or
inc
out
fld
punpckhwd
or
imul
in
pop
in
fistp
inc
ja
jo
jl
mov
shl
movs
push
xchg
and
xchg
hlt
test
inc
fcmovnu
repz
lea
jae
fst
inc
neg
lahf
push
pop
ret
mov
into
ins
cmp
clc
out
pop
fimul
cmp
movs
cmps
jnp
jmp
cdq
icebp
inc
aad
mov
js
or
pop
xor
jo
cld
rcl
leave
scas
lods
sbb
mov
jg
arpl
jae
stc
cmovle
jae
dec
mov
pop
push
pushf
xchg
cmp
retf
xchg
lds
sub
cmp
clc
dec
inc
jae
pop
mov
cmp
pushf
mov
push
outs
pushf
ucomiss
int
push
xor
popf
mov
fisttp
mov
(bad)
xlat
js
pushf
cmc
shl
clc
cmp
cmp
pop
lahf
std
xchg
cdq
ret
mov
hlt
ins
jmp
cdq
cwde
mov
and
mov
popf
nop
addr16
sub
loopne
mov
pop
mov
call
outs
cwde
push
out
sbb
adc
es
mov
js
or
push
and
shl
xchg
or
js
mov
inc
(bad)
mov
lods
cmps
jle
repnz
adc
out
or
xor
sbb
jge
clc
cmp
jo
loop
shl
lods
add
stos
dec
test
pop
cmp
or
and
sti
outs
mov
lock
aad
add
in
add
(bad)
pop
xor
inc
dec
or
test
dec
xchg
sub
sbb
in
push
out
nop
dec
cwde
adc
jg
pop
outs
sub
popf
dec
push
stc
int3
cmps
lea
add
xlat
imul
mov
sub
pop
imul
aad
shr
or
xchg
cmp
sub
(bad)
inc
push
xor
ror
movs
ss
ror
and
rol
les
call
xor
sbb
mov
mov
xor
icebp
dec
cmp
fnstenv
dec
or
test
adc
mov
xor
(bad)
pop
mov
iret
test
jne
iret
inc
pop
test
dec
adc
ins
inc
mov
dec
mov
cmp
int3
dec
nop
or
adc
jp
mov
(bad)
loope
push
mov
test
push
mov
sbb
pop
pushf
xchg
push
inc
dec
inc
mov
sub
push
mov
lds
or
adc
pop
stos
inc
xor
cmps
lds
push
or
pop
(bad)
adc
jle
inc
cmp
or
cmp
sbb
or
jo
(bad)
test
xchg
(bad)
cdq
sub
ins
pop
imul
jns
or
jb
(bad)
adc
add
int
jg
mov
out
call
mov
les
push
(bad)
fisttp
retf
cmp
popa
push
mov
pop
dec
mov
push
jmp
jmp
lahf
pop
mov
sub
jmp
fst
pminub
imul
lock
jbe
mov
(bad)
xor
inc
inc
out
jmp
or
or
xchg
sub
rcl
cmp
jno
pop
sbb
fist
jbe
in
cmc
call
jno
add
add
cmps
cwde
lods
xor
xor
rep
dec
rcl
xchg
jns
xchg
test
dec
or
and
fcom
xor
stos
aas
fld
mov
in
sub
sub
lahf
mov
cmpxchg
lock
icebp
loop
inc
sbb
(bad)
and
aas
push
dec
mov
int3
pop
jl
xlat
std
imul
xchg
fistp
loope
shr
dec
mov
cmp
ret
jne
rol
loop
xchg
or
fwait
mov
enter
in
in
xlat
pusha
gs
xchg
test
xor
sbb
gs
addr16
cwde
fdiv
sbb
(bad)
dec
sbb
(bad)
mov
fidiv
or
(bad)
inc
sbb
mov
mov
mov
sbb
daa
jle
sbb
lock
and
xchg
cdq
mov
hlt
retf
bound
enter
arpl
in
addr16
mov
mov
xchg
mov
xchg
hlt
ins
cmp
mov
(bad)
jbe
call
cmp
retf
push
sub
cs
cmp
cmp
xor
repz
outs
xor
ret
ret
out
(bad)
cdq
jns
jae
xchg
mov
(bad)
div
mov
sahf
(bad)
test
sti
lods
jg
aam
mov
sti
daa
mov
pop
pop
dec
jg
sub
xlat
jg
(bad)
loop
jecxz
or
jae
jecxz
mov
bound
pop
out
pop
pop
dec
(bad)
xor
push
xor
jl
fstp
pop
mov
xlat
jnp
push
mov
mov
jae
leave
(bad)
jmp
pushf
mov
xor
jecxz
or
out
pop
aas
mov
add
jge
dec
div
jb
cdq
xchg
lock
neg
outs
ret
sbb
xor
mov
retf
dec
(bad)
es
mov
cmp
xchg
jb
cmp
sbb
ins
ja
fdiv
aad
dec
retf
mov
jno
xchg
lock
ins
cmp
call
adc
pop
xchg
jecxz
bound
(bad)
fadd
scas
rol
test
or
adc
stos
rcr
stos
push
mov
cmp
xchg
imul
pop
leave
hlt
cmps
repz
adc
pop
push
pop
fld
lods
adc
(bad)
mov
lds
and
pop
xor
ds
push
adc
sub
or
std
aad
lock
sbb
xchg
stos
mov
add
push
popf
dec
xor
and
outs
pop
dec
pusha
cli
xchg
adc
and
lods
bound
repz
int3
cmp
stc
loop
add
fcom
pushf
(bad)
adc
jne
xor
call
ret
adc
pop
push
call
ss
in
mov
mov
xor
xor
retf
in
arpl
test
int3
dec
push
jmp
arpl
mov
and
scas
add
test
inc
push
inc
call
cmps
jnp
idiv
retf
mov
inc
mov
mov
pop
(bad)
daa
push
shl
ins
pop
mov
aam
stos
sti
call
add
inc
mov
hlt
and
jmp
inc
mov
and
lea
push
jecxz
sar
add
jno
add
push
jno
ss
add
rcr
jmp
mov
push
retf
dec
xlat
repnz
push
adc
out
rol
mov
ds
jmp
leave
lods
xchg
push
mov
jg
mov
adc
lods
outs
in
jne
xor
jae
sbb
xchg
mov
sbb
jmp
cmp
cdq
mov
pushf
mov
or
repnz
xchg
mov
xchg
popa
cwde
dec
leave
cmp
in
iret
and
mov
std
sub
icebp
pop
neg
jg
sbb
dec
dec
mov
sbb
dec
jbe
mov
mov
push
mov
mov
xor
push
outs
lock
pop
add
push
jno
dec
push
xchg
cmp
add
test
inc
and
movs
loop
test
cmp
xor
leave
xor
inc
or
inc
imul
std
add
sbb
xor
push
jge
add
inc
cli
dec
test
shl
sbb
call
mov
in
jg
jg
xchg
iret
ror
fidiv
or
jmp
jle
jecxz
aad
arpl
adc
mov
cs
xor
sub
aad
pop
adc
loope
push
mov
ins
jmp
cdq
xchg
inc
xor
jae
xlat
xchg
pop
mov
xchg
adc
mov
je
xchg
sub
shl
dec
xor
xchg
retf
lods
mov
stc
mov
jb
dec
mov
arpl
xor
sub
mov
cmp
in
and
xchg
xlat
or
push
sahf
sub
cld
sbb
call
gs
jmp
mov
rcl
push
sbb
adc
pop
mov
ins
out
inc
adc
mov
mov
nop
pop
repnz
mov
push
aad
push
cmc
movs
(bad)
sahf
daa
mov
jl
(bad)
or
jbe
dec
push
pop
inc
add
mov
stos
imul
lock
jns
jecxz
xor
jge
mov
mov
mov
mov
imul
jnp
jge
sar
movs
repz
test
dec
int
jns
fst
loop
push
loop
into
addr16
neg
sbb
scas
jmp
cmp
lods
(bad)
loopne
inc
iret
not
adc
(bad)
sbb
dec
fisubr
outs
das
mov
and
call
(bad)
(bad)
and
das
sbb
(bad)
repnz
mul
jecxz
jmp
(bad)
outs
xchg
mov
sti
in
shl
into
(bad)
out
xchg
cs
aam
xor
mov
data16
ss
mov
xchg
fldcw
sub
add
mov
and
pushf
xchg
jnp
rcl
in
nop
add
inc
fild
cmp
imul
cmps
int
inc
mov
fld
(bad)
mov
stos
pop
popf
dec
sub
test
in
jb
or
ret
or
sbb
inc
mov
xchg
sbb
cwde
xlat
dec
and
int
pop
outs
mov
cmps
jl
loop
popf
retf
mov
or
les
xor
mov
test
mov
lods
mov
in
fild
cld
mov
ins
dec
mov
(bad)
adc
adc
xchg
inc
pop
test
xchg
jne
cld
mov
setae
and
mov
fs
cmps
mov
sbb
inc
mov
scas
add
(bad)
fcom
outs
in
test
ror
inc
sub
push
clc
cwde
adc
or
lods
mov
sub
mov
in
std
loopne
sbb
push
xor
push
add
loop
xor
xor
xor
xchg
in
(bad)
cld
fs
xchg
and
mov
enter
retf
jmp
xchg
mov
pusha
and
cmp
dec
inc
push
nop
adc
in
jb
ja
cmp
lods
lahf
pop
lods
int3
and
mov
std
push
int
jle
repnz
push
gs
and
cmp
adc
pop
out
fisubr
sub
int
mov
aad
test
pop
mov
cmp
mov
mov
mov
mov
mov
jb
ror
loopne
xchg
xchg
mov
scas
mov
jo
aad
das
inc
js
cld
sub
jmp
dec
cli
mov
(bad)
int
push
pop
dec
lods
shr
mov
es
stos
push
sbb
js
pusha
daa
inc
imul
lahf
cmp
mov
test
sbb
mov
je
loope
(bad)
push
ror
imul
out
ss
push
xchg
xchg
xchg
es
int
add
es
repnz
pop
push
aas
cmp
(bad)
in
mov
outs
out
push
jg
xor
fidiv
pop
outs
idiv
shr
sti
test
lahf
out
aaa
jle
stos
bnd
mov
jae
sub
sub
jle
(bad)
and
mov
push
ins
ror
sbb
xchg
sti
in
adc
gs
sbb
sbb
stos
push
xor
xor
pop
outs
mov
stos
test
xsave
push
push
cli
inc
add
push
in
aad
inc
sbb
ds
jecxz
mov
and
mov
out
sbb
xchg
pop
or
jae
xchg
pop
jg
popa
lea
jl
out
shr
mov
adc
xor
mov
mov
xchg
test
lock
fisttp
add
les
add
xchg
mov
scas
xchg
push
and
lods
sub
mov
add
adc
dec
repnz
or
cdq
xchg
fwait
xlat
add
push
mov
pop
xor
jge
mov
in
ret
test
and
pop
pop
jmp
cs
mov
lock
jne
les
mov
enter
sbb
adc
xchg
dec
pop
cmp
movs
les
cmp
add
in
enter
add
arpl
mov
sbb
cwde
push
and
mov
mov
fwait
addr16
mov
xchg
mov
adc
sti
push
sub
fisttp
cdq
lods
fisubr
inc
xchg
std
test
cwde
xchg
out
jbe
(bad)
es
jp
xor
test
cmp
xchg
test
leave
lea
or
retf
js
out
scas
int3
(bad)
fyl2xp1
leave
(bad)
dec
aas
xor
loope
loop
addr16
ja
mov
(bad)
fisttp
stos
xchg
pop
scas
daa
xlat
sbb
mov
ja
xor
xor
push
jns
adc
inc
idiv
mov
retf
jns
(bad)
out
jnp
inc
clc
in
mov
int3
lods
push
jo
push
lods
xchg
pop
shr
jbe
mov
push
ja
(bad)
pop
and
mov
rol
(bad)
popf
std
cld
or
addr16
fidivr
pop
push
mov
aas
cmp
adc
push
sbb
adc
xchg
xor
sti
mov
dec
mov
lea
pushf
mov
stos
cs
rol
daa
inc
pop
ret
aas
shl
retf
out
pop
cs
retf
out
mov
sub
jmp
movs
(bad)
fiadd
bound
sbb
push
inc
push
fimul
cmp
inc
pop
or
cmp
cs
movs
imul
fdiv
dec
daa
xchg
jns
imul
fdecstp
test
(bad)
sbb
inc
mov
xor
out
mov
add
xor
jb
in
sub
and
aas
in
jb
out
pop
sub
gs
xor
test
int3
(bad)
adc
adc
repnz
sub
lds
xor
pop
outs
pop
leave
leave
mov
jnp
inc
add
mov
push
sub
stc
sub
mov
dec
push
rol
sahf
shl
inc
bound
ja
addr16
xchg
mov
jae
loope
int3
lea
cwde
xchg
daa
test
cdq
push
jmp
jg
mov
pushf
xchg
test
test
mov
mov
ins
adc
add
inc
into
jbe
test
fisubr
sub
pop
and
jo
mov
lock
jge
xchg
sub
mov
bound
mov
into
aas
sbb
leave
fsubr
test
aad
not
dec
mov
loope
cmp
enter
shl
or
and
add
push
fs
lds
xlat
push
daa
mov
inc
lock
jmp
xor
popf
push
aas
dec
sbb
cmps
mov
movs
adc
cmp
add
cld
rol
shl
in
rcr
inc
adc
mov
ins
jmp
mov
push
imul
ins
sbb
mov
jnp
pop
test
xchg
adc
aam
pop
fs
(bad)
(bad)
popf
or
sbb
xor
inc
sbb
inc
(bad)
sub
inc
pop
and
pusha
xchg
sub
xlat
jb
pop
cmp
xor
lods
inc
sbb
sub
(bad)
shr
jmp
jg
push
stc
loop
retf
push
(bad)
call
lods
out
pop
push
int
sub
fistp
into
lahf
sbb
das
pusha
and
jbe
test
ins
mov
lea
mov
and
push
(bad)
dec
or
repnz
js
rcr
das
push
test
dec
dec
stc
sbb
add
shl
test
or
sub
and
pop
not
and
jnp
inc
iret
cmp
retf
fsubr
xchg
jmp
sub
mov
pop
rcr
jp
pop
sub
push
clc
dec
push
cs
mov
mov
cmp
sti
cmp
js
inc
sbb
mov
dec
aam
outs
dec
(bad)
or
lea
or
sbb
pushf
test
xor
(bad)
lock
pop
cmp
mov
push
cmc
xchg
cmp
test
sub
mov
push
pushaw
test
inc
ja
and
adc
xchg
pop
push
popf
repnz
pop
sti
jg
xor
jo
outs
or
popf
add
gs
inc
cmp
les
ret
xchg
jno
int3
dec
pop
add
(bad)
pop
outs
adc
cmps
mov
push
lock
(bad)
or
out
popa
push
repz
xlat
mov
retf
neg
hlt
in
mov
xor
dec
mov
mov
data16
mov
mov
out
pop
jne
mov
fsubr
pop
fisub
sbb
dec
jecxz
(bad)
fisubr
mov
(bad)
in
mov
clc
mov
sti
push
xchg
mov
fmul
pop
int
(bad)
fstp
out
sti
xchg
fwait
mov
mov
cmps
inc
in
fucomip
pop
mov
fs
push
fnstsw
push
xor
je
mov
aad
dec
mov
cmc
loopne
mov
and
out
mov
ins
test
stos
adc
push
sbb
xor
fnsave
xor
pop
mov
pop
jl
or
adc
push
mov
mov
inc
sbb
mov
mov
outs
lds
pop
lea
daa
jmp
or
test
dec
mov
xlat
lods
mov
push
dec
imul
call
shr
pop
cwde
mov
fld
cmps
xchg
mov
pop
fstp
mov
and
jns
(bad)
mov
cwde
cmps
pop
xchg
ret
and
int3
shl
ficom
test
loope
mov
jne
ja
and
shl
leave
sub
fwait
jnp
mov
ja
mov
dec
sbb
sbb
pop
jb
push
in
xlat
(bad)
and
adc
cmc
inc
repnz
in
(bad)
shl
add
xor
int3
mov
aad
and
repnz
push
cwde
and
jecxz
shr
mov
cdq
push
mov
xchg
and
adc
add
repnz
sbb
fdiv
jbe
mov
arpl
call
imul
mov
hlt
in
outs
into
ins
cs
or
enter
mov
rol
add
ret
mov
repnz
test
sbb
xor
lods
push
mov
cli
mov
push
jo
popf
fcmovnbe
xchg
xchg
xor
push
adc
push
scas
inc
lahf
je
test
mov
lahf
and
mov
inc
mov
dec
ins
mov
push
pushf
mov
pop
xor
xchg
pop
clc
sbb
daa
push
jne
xor
fdiv
and
cmp
int
push
clc
sbb
inc
mov
pushf
xor
xor
das
call
lods
inc
jge
inc
mov
inc
les
dec
aam
sahf
and
and
test
scas
pop
fwait
popf
call
(bad)
lock
in
test
scas
or
retf
call
pop
mov
in
aad
mov
mov
test
(bad)
jecxz
or
call
sub
pop
or
push
adc
cmp
xlat
push
in
push
int3
xchg
imul
cmp
jp
jmp
mov
pusha
retf
hlt
repnz
cmc
cmps
ja
mov
dec
(bad)
movs
ret
cld
sub
pop
inc
mov
ins
das
std
fimul
xlat
xchg
out
xor
cwde
and
mov
cmc
test
push
xlat
call
mov
sbb
xor
call
pop
ins
shr
cmp
jae
cmc
aad
repnz
cmp
arpl
inc
sbb
pop
ret
mov
je
cmps
bound
sub
cli
dec
sub
pusha
nop
call
jbe
mov
inc
mov
mov
(bad)
lds
retf
ror
inc
mov
xchg
enter
add
or
push
cmc
xchg
(bad)
aas
ret
dec
and
jb
mov
or
cmps
test
test
or
sub
push
icebp
xchg
and
pop
pop
xor
sub
stos
jge
sub
test
and
dec
mov
mov
inc
sbb
loopne
jmp
xchg
idiv
pop
rol
jo
sub
cmps
cmp
(bad)
xor
inc
cdq
add
jg
in
push
mov
imul
dec
mov
(bad)
xchg
cmp
sbb
pop
(bad)
fst
ja
ret
mov
xor
mov
jge
inc
sbb
fmul
retf
jmp
sbb
loopne
es
lock
xor
push
xchg
test
mov
xchg
or
inc
fst
shr
inc
sbb
leave
sbb
xchg
mov
push
add
int
mov
mov
scas
(bad)
std
and
pop
cwde
sti
mov
test
push
fdiv
mov
out
neg
pop
or
xchg
xor
dec
push
mov
dec
jp
xor
(bad)
push
test
popf
div
fs
in
je
icebp
fmul
push
mov
jmp
out
jge
shl
add
jmp
dec
retf
fsubr
loope
jne
fistp
mov
add
popa
je
cmp
popf
ja
sbb
sbb
ja
repnz
dec
xchg
out
(bad)
fisubr
out
xchg
test
inc
cmp
dec
pop
icebp
lea
dec
mov
pop
jmp
or
out
out
arpl
pop
pop
stos
aas
mov
cmp
fmulp
sahf
out
sbb
push
imul
sbb
cdq
dec
mov
mov
imul
push
push
mov
adc
cmp
xor
pop
fimul
aam
mov
inc
mov
add
mov
lea
ror
adc
mov
sub
cmp
adc
sub
jno
jne
shr
mov
aas
cmc
iret
cmps
ds
xor
add
xor
mov
sbb
sbb
cmp
into
je
xchg
and
lock
mov
mov
mov
cmc
shl
lods
test
jmp
lea
add
and
adc
adc
cld
xor
adc
and
in
push
lods
adc
or
adc
repz
pop
jp
movs
add
cmp
add
mov
shl
test
jmp
dec
sub
imul
ret
adc
push
and
inc
sbb
sbb
dec
bound
sub
mov
not
add
rcl
mov
inc
test
mov
dec
ins
je
bound
sbb
loopne
shr
in
dec
or
xor
jb
fwait
ror
add
dec
jp
xor
fistp
popf
popf
scas
sub
or
add
sbb
shr
push
inc
in
into
inc
lods
mov
gs
xchg
sub
(bad)
fimul
mov
scas
inc
mov
xor
push
sub
xchg
loope
inc
cdq
jl
or
out
push
pop
ret
sbb
dec
xchg
sahf
dec
cmc
sbb
add
lahf
dec
fdivr
lahf
jmp
lods
imul
inc
inc
dec
dec
sub
mov
(bad)
lds
das
xchg
inc
adc
mov
push
mov
pusha
push
jecxz
or
in
pop
xlat
xchg
inc
fwait
xchg
icebp
cmp
imul
xlat
lock
clc
repz
dec
jmp
(bad)
jmp
movs
push
push
retf
mov
cld
mov
in
add
adc
ret
or
fimul
stos
test
and
cmp
out
int3
loop
cmp
xchg
pop
mov
cwde
rcr
jmp
loope
(bad)
iret
ins
push
aas
mov
cld
div
sbb
int
push
loopne
(bad)
cmp
xchg
mov
bound
cs
cmps
jbe
jmp
test
adc
mov
sbb
xchg
paddb
call
mov
std
pop
inc
jecxz
push
mov
cmp
add
sbb
mov
lods
add
inc
jbe
std
call
push
(bad)
popa
cmp
cmc
sub
jae
(bad)
or
hlt
cmc
idiv
ror
loop
mov
adc
push
inc
sbb
cmps
loop
mov
mov
mov
jae
ret
mov
push
cmp
xchg
ds
mov
daa
add
sbb
mov
(bad)
ror
int3
adc
pop
scas
mov
stos
adc
xor
or
cmp
(bad)
pushf
push
gs
ins
test
lods
sub
mov
mov
aam
push
shl
lahf
xor
(bad)
mov
mov
out
add
retf
xchg
les
inc
(bad)
fldenv
and
or
dec
mov
inc
sbb
ret
enter
sub
cli
or
pop
mov
popa
dec
pop
pop
(bad)
mov
xchg
out
jno
xor
test
pop
dec
dec
test
push
jns
mov
xchg
mov
and
cs
inc
nop
or
pop
adc
push
and
stos
cmp
mov
pop
dec
or
cmp
xchg
outs
push
ins
push
mov
icebp
push
clc
dec
aas
jnp
mov
mov
mov
scas
push
or
(bad)
js
(bad)
fsub
ins
ret
pop
daa
cld
fwait
pop
jecxz
int
inc
loopne
sbb
test
or
mov
test
dec
cli
(bad)
jne
cmp
sbb
add
ss
mov
mov
push
out
push
add
xchg
fbstp
aaa
fld
ss
test
cmp
xlat
mov
cmp
out
in
dec
in
in
daa
jmp
xchg
aas
fdecstp
fidiv
popf
jg
mov
pop
lds
push
loop
and
and
mov
inc
push
lods
aad
fiadd
xchg
ins
pop
fucomip
cmp
jne
mov
popa
jns
sbb
js
cdq
mov
add
pop
mov
xor
call
jp
(bad)
cmp
mov
push
cmps
push
pop
jnp
xchg
stos
push
aam
sbb
std
adc
call
fwait
xor
sar
mov
push
mov
sti
add
pop
push
sub
and
mov
sbb
mov
inc
enter
retf
fimul
es
retf
mov
fsubr
inc
ds
push
jns
lods
add
jbe
int
or
mov
mov
(bad)
and
xchg
loopne
mov
int3
cmp
mov
add
push
aam
(bad)
push
push
add
inc
mov
xchg
sbb
or
loopne
out
jne
cdq
push
cmps
fs
cld
and
popf
push
push
cmp
pop
sub
pop
adc
(bad)
fdiv
adc
jp
fdiv
mov
xor
pop
out
(bad)
in
into
mov
pop
call
ja
xor
call
sub
xchg
jb
pop
int3
out
mov
mov
push
mov
xor
mov
cs
adc
loop
mov
push
and
ins
stos
(bad)
push
dec
xchg
ret
add
and
(bad)
hlt
jb
mov
cmp
leave
or
mov
push
mov
nop
cs
jge
loope
inc
sbb
jno
or
mov
xchg
dec
sbb
or
push
lds
or
add
sub
ret
stc
pop
cmp
or
jl
mov
adc
repz
(bad)
xchg
sbb
adc
and
inc
popa
shl
out
bound
cmp
mul
push
adc
mov
fild
push
dec
popf
adc
jecxz
or
(bad)
xchg
inc
add
shr
clc
push
xchg
fistp
push
push
pop
les
pushf
or
dec
and
add
inc
fwait
popf
push
pop
push
(bad)
inc
mov
int3
(bad)
aam
and
cwde
push
or
jmp
push
cmp
(bad)
xlat
fcmovu
mov
jae
cld
movs
repnz
scas
in
pop
fisttp
fld
jg
popf
cld
in
data16
push
dec
xchg
mov
cmp
push
out
push
jmp
push
sub
inc
in
retf
or
xor
mov
and
xchg
push
push
loopne
sub
mov
loope
rcl
or
sub
ss
cli
mov
retf
pop
dec
mov
and
add
cld
sbb
jecxz
data16
cmp
mov
sub
xchg
ror
cs
int
jb
imul
lea
xor
dec
shr
pop
xlat
frstor
sbb
loop
fcomp
ins
imul
cmc
push
bound
inc
and
(bad)
out
pop
int3
in
mov
inc
sbb
push
xor
rcl
and
les
ins
fs
cdq
or
pop
mov
jg
add
out
inc
ret
inc
loope
xchg
push
gs
lds
inc
inc
sbb
xchg
icebp
add
fs
sti
jp
push
jne
aad
dec
test
xchg
rol
fsubr
jp
iret
inc
mov
xor
mov
test
mov
imul
sti
mov
and
cs
add
pop
cli
shl
sub
arpl
outs
mov
dec
push
sti
inc
ins
pop
or
dec
cmp
imul
aaa
xchg
sar
pushf
xor
mov
lahf
lods
call
jne
sbb
mov
and
xchg
outs
ror
jns
push
pop
mov
xlat
or
dec
retf
pop
call
js
push
sbb
xor
sbb
sub
pop
outs
fadd
mov
and
retf
imul
ins
test
icebp
cmps
ja
add
cwde
mov
xor
dec
inc
ins
ins
cmps
xor
pusha
mov
mov
fnsave
arpl
js
push
arpl
jp
dec
in
push
ins
cwde
push
popf
in
cmp
xor
sub
cmp
sbb
fadd
lea
sbb
pop
or
dec
push
or
outs
mov
fsub
in
mov
pop
mov
int
outs
jbe
pop
cdq
mov
jnp
pop
xor
cmp
add
mov
xchg
popa
or
cld
sbb
outs
arpl
retf
imul
inc
frstor
mov
scas
jmp
std
loopne
push
call
lock
push
mov
leave
or
mov
adc
or
movs
jb
adc
pop
pop
push
cdq
mov
xor
cmp
mov
cs
inc
and
ss
(bad)
mov
jmp
mov
adc
fwait
scas
arpl
lock
pop
mov
add
inc
dec
or
inc
sti
stc
push
or
pop
pop
mov
xchg
xchg
jl
add
rcr
and
cli
stos
std
js
sbb
push
inc
push
push
mov
xchg
xor
push
pop
test
mov
dec
add
push
inc
xor
enter
sahf
fidivr
push
push
push
jae
push
inc
or
inc
dec
mov
in
or
(bad)
out
dec
mov
mov
add
outs
sahf
sbb
sbb
enter
ret
aad
sub
mov
bound
into
jmp
pop
push
lods
nop
jecxz
sbb
pusha
sub
rcr
sar
sbb
xchg
push
fs
mov
repnz
pop
adc
cmp
(bad)
and
cmp
inc
xor
xchg
xor
fwait
test
pop
mov
inc
bound
and
inc
femms
push
retf
je
sbb
call
dec
mov
cwde
cmp
cs
sub
fcmovnbe
add
jns
adc
into
stos
cmps
imul
lea
sub
pop
add
into
sar
fsub
lds
push
fcmovne
call
push
sub
cmp
dec
retf
inc
pop
sar
adc
fidiv
mov
xor
xchg
ret
fwait
pop
mov
arpl
(bad)
and
adc
(bad)
mov
aas
mov
aad
outs
push
lock
sti
repz
push
stos
fistp
jl
das
(bad)
fwait
pop
fcomp
mov
shl
and
repnz
cmp
cmp
xchg
call
jo
idiv
inc
sbb
xlat
shl
mov
mov
in
jge
sub
fsub
ret
add
call
adc
ss
clc
sbb
gs
inc
jo
adc
fild
mov
std
fdivr
outs
jle
mov
jnp
fadd
call
dec
(bad)
and
int3
enter
and
xlat
sub
xor
cdq
push
es
movs
sbb
lea
icebp
bound
imul
jno
test
lds
leave
pop
mov
repnz
mov
sbb
jg
test
adc
xchg
or
bound
movs
mov
push
lods
mul
lock
imul
push
pushf
sahf
sbb
dec
fdivp
pop
inc
sbb
jb
lock
pop
fadd
push
add
pop
aad
popf
sbb
rol
cmc
pop
fisttp
xor
inc
push
sbb
(bad)
arpl
ds
mov
or
call
ins
add
lds
mov
arpl
jmp
and
sub
retf
cmc
repnz
mov
aaa
sbb
cdq
mov
repnz
adc
arpl
rol
and
dec
out
hlt
lea
adc
xchg
fst
and
mov
pop
in
jnp
imul
xor
rol
lods
call
inc
xor
jo
inc
ja
jno
lods
push
sub
(bad)
xchg
dec
jmp
loopne
push
lock
push
mov
iret
out
pop
loop
dec
(bad)
(bad)
xchg
pop
lds
repz
and
(bad)
cld
mov
(bad)
(bad)
ret
mov
sbb
mov
arpl
mov
mov
mov
cli
loop
fisubr
in
xlat
jg
sub
int
mov
aaa
xchg
adc
dec
out
test
rcr
cmp
scas
inc
(bad)
sub
pop
push
mov
in
fdivr
xlat
mov
and
into
mov
sub
pushf
dec
cs
xlat
inc
push
and
cmp
lea
aam
mov
(bad)
lods
cwde
push
movs
in
cdq
push
cmp
push
shl
lock
imul
dec
jo
loopne
lds
aad
mov
pushf
(bad)
sub
test
xor
push
adc
and
xchg
xor
shl
js
sub
push
sbb
jb
mov
add
test
cmp
sbb
in
fadd
imul
outs
adc
inc
pop
inc
mov
adc
lods
mov
push
repz
fsub
jp
lea
inc
jl
mov
lahf
xchg
xchg
add
add
cdq
or
mov
push
int3
mov
xchg
adc
movs
lahf
jbe
fmul
in
push
aaa
inc
cdq
out
in
xchg
ret
mov
retf
mov
(bad)
dec
xor
shl
xchg
fcom
sub
push
pop
jp
jmp
jl
cld
cmp
sub
out
gs
mov
shl
daa
mov
mul
push
push
into
jbe
in
hlt
scas
lods
daa
xlat
ja
je
mov
mov
mov
xor
imul
js
sub
xor
xchg
pusha
push
ja
movs
mov
pop
mov
(bad)
int3
das
sub
or
lea
lahf
das
adc
hlt
pop
xor
mov
loope
mov
movs
or
push
sub
(bad)
pop
push
clc
cmps
xchg
cmps
int3
add
sbb
je
repnz
cmp
xchg
mov
pop
sbb
ja
sub
fld
mov
jno
xor
push
xor
sub
and
nop
inc
xor
push
add
shl
sub
and
jecxz
mov
scas
out
mul
stos
xchg
xor
pop
nop
pop
mov
cdq
pushf
es
mov
jge
data16
push
fsub
test
loop
mov
je
hlt
inc
rcl
sbb
cmp
xor
mov
data16
pop
xchg
jp
push
jbe
fdiv
ds
cmp
lea
test
mov
push
cmp
and
in
dec
add
inc
push
and
popa
shl
vmovshdup
or
dec
adc
mov
inc
lock
pop
mov
scas
dec
mov
std
ins
hlt
movs
jae
pop
out
push
(bad)
sbb
dec
jne
stos
xchg
in
pop
in
dec
icebp
xchg
pop
in
cmc
es
fwait
cmp
shr
fidivr
pop
push
jecxz
cmps
or
movs
xchg
xchg
mov
push
cmps
call
mov
ja
lfs
xchg
mov
inc
ds
out
mov
call
sbb
push
or
shl
retf
mov
arpl
xchg
cdq
sub
xor
lahf
hlt
popa
(bad)
cmp
out
ret
and
mov
jmp
xor
pop
stos
ins
lahf
call
sbb
(bad)
sub
adc
fcom
das
ins
sub
fwait
sahf
iret
mov
loope
xlat
lods
aad
shr
int3
cwde
mul
pusha
retf
in
pop
mov
imul
sub
aam
rol
shl
lods
sbb
ds
add
mov
cld
push
hlt
lds
or
mov
mov
xor
mov
gs
clc
lods
adc
xor
dec
cwde
bound
rcl
and
jno
mov
jp
sbb
jns
in
stos
sub
neg
or
mov
mov
lea
and
mov
and
jecxz
ret
mov
into
jno
ret
inc
add
cmp
mov
dec
fs
jnp
imul
xor
sub
ss
dec
push
icebp
loopne
push
cmp
invd
sub
xchg
test
iret
sahf
imul
xchg
cmp
test
arpl
pop
addr16
xor
js
enter
leave
push
dec
or
dec
hlt
arpl
cmp
(bad)
mov
xlat
pusha
clc
fcompp
les
(bad)
outs
sbb
mov
repz
cmp
sbb
sbb
aad
lds
cld
cmp
and
js
ins
jge
daa
dec
jp
sub
push
jno
adc
addr16
or
xchg
(bad)
sbb
fiadd
stc
inc
loop
fsubr
cld
mov
retf
aas
mov
(bad)
mov
push
cmp
mov
fsub
mov
movs
ss
call
add
(bad)
cmp
xor
cmp
push
mov
jge
push
sub
xchg
ficom
cli
add
add
pop
and
dec
aaa
lods
xchg
shl
test
rol
dec
xor
rol
rcl
pop
addr16
(bad)
jmp
xchg
cmps
jmp
adc
inc
mov
pop
mov
dec
rcr
xor
push
ins
mov
movs
sub
gs
pusha
popa
cwde
jmp
mov
xchg
dec
xor
mov
dec
nop
mov
sahf
nop
jb
mov
lock
lods
call
(bad)
mov
adc
xchg
js
(bad)
scas
push
cmps
sub
bts
jmp
(bad)
call
es
ins
mov
cs
pop
xchg
call
loopne
cmps
loop
movs
sbb
(bad)
ffree
sub
enter
push
mov
dec
adc
push
jb
mov
and
cmp
pop
jmp
push
jae
call
jne
pop
sub
aam
push
cmp
les
push
ret
inc
(bad)
cld
cmp
inc
xchg
popa
pop
dec
clc
paddusb
shr
pop
push
adc
push
xor
jae
ins
cmp
jns
leave
stos
retf
iret
fidivr
stos
ret
sub
push
jb
dec
inc
mov
cmp
stos
test
out
cmps
pushf
xchg
lahf
mov
mov
data16
push
in
call
or
pop
rcl
mov
add
jno
dec
ret
dec
imul
es
mov
pop
sbb
and
scas
cmps
rol
xchg
mov
xchg
and
loop
jo
jmp
pop
out
pop
mov
cmp
push
xchg
lea
push
adc
mov
clc
adc
clc
fsubr
mov
imul
aas
inc
push
cmps
jae
or
mov
inc
mov
out
mov
aad
sub
sbb
jp
mov
in
mov
lods
ds
loopne
int3
nop
push
test
enter
fcomp
bound
out
inc
push
push
dec
mov
xor
ret
add
fld
imul
stos
icebp
ret
push
pop
lods
(bad)
imul
cmps
(bad)
cmp
leave
pop
pushf
retf
mov
mov
imul
out
jg
xchg
cld
retf
xchg
mov
sahf
fnsave
mov
mov
es
add
jmp
and
lahf
inc
sbb
js
jne
cdq
popa
dec
xchg
je
call
adc
pop
cmp
and
mov
ret
inc
ret
sbb
jb
push
lahf
test
pop
fdivrp
shr
and
mov
stos
sahf
add
sbb
xchg
jb
imul
inc
jnp
bound
pop
jg
cmp
(bad)
popf
push
inc
gs
dec
das
call
xor
inc
mov
xchg
or
sub
sub
mov
and
cwde
pop
add
fsub
int
sahf
push
mov
lea
or
inc
fs
dec
pop
es
dec
pop
sahf
push
push
arpl
and
push
adc
fisub
mov
aam
push
cmp
bound
mov
xlat
or
(bad)
(bad)
mov
cmp
sub
or
xchg
out
mov
jmp
sbb
add
dec
adc
fild
mov
retf
xor
stos
pop
sbb
jne
ror
stos
inc
or
cmp
bound
jnp
arpl
loop
jmp
jb
xor
inc
out
push
jnp
mov
iret
and
movs
dec
pop
out
mov
cwde
pop
add
add
xchg
mov
sub
jno
jg
sub
stos
cli
out
push
(bad)
in
inc
test
mov
movs
test
mov
jns
push
mov
repz
daa
dec
push
call
adc
pusha
dec
loopne
fsubr
add
inc
(bad)
jl
cmp
push
mov
jns
sub
and
js
aas
cmp
gs
add
xor
mov
jle
aaa
push
sbb
(bad)
int3
add
jle
cmp
xchg
fbstp
pop
int3
dec
dec
dec
pop
imul
fimul
sar
or
cdq
outs
movs
(bad)
pop
cld
jp
pop
jns
push
xchg
sbb
ret
xchg
scas
das
inc
xchg
ret
gs
or
mov
daa
ins
in
cmp
mov
(bad)
xor
sub
out
add
ins
lock
xor
fcom
popa
or
cdq
push
sub
bound
xor
mov
push
cwde
bound
mov
loope
jae
or
ins
mov
dec
mov
int
add
pop
mov
arpl
add
rol
push
xor
pop
repz
xor
cmc
fs
dec
loope
cmps
hlt
xor
mov
and
and
push
out
mov
out
bound
pop
push
or
rcl
jp
add
and
mov
mov
add
cmova
push
fdiv
cmps
add
scas
dec
fwait
sbb
or
stos
data16
retf
fcmove
inc
mov
ins
int3
outs
out
dec
ds
sti
mov
aam
jo
loop
sbb
out
jnp
xor
call
add
fimul
push
shr
sbb
push
or
hlt
rcr
pop
mov
mov
mov
dec
adc
ret
mov
adc
inc
lods
or
push
movs
pop
jne
inc
adc
adc
xor
pop
push
out
popf
je
rcr
loopne
lods
out
jno
bound
and
xchg
fbld
lods
imul
rcr
lea
cwde
jno
inc
xchg
xor
test
dec
xchg
cmp
pushf
mov
mov
xchg
fiadd
inc
pop
sub
in
pop
and
sbb
stc
data16
and
or
dec
and
push
jl
cmp
and
mov
mov
sub
xor
jp
shr
jb
sar
loop
inc
dec
sub
arpl
mov
xchg
xor
dec
mov
adc
and
xor
sub
pop
addr16
adc
dec
mov
mov
shr
iret
loopne
and
push
mov
adc
push
push
je
and
mov
jmp
fwait
adc
lahf
int
imul
cmps
jb
rol
pop
inc
adc
aam
movs
sbb
in
jge
shl
adc
repz
rcr
ds
loop
fcmovnbe
out
out
data16
push
stc
jmp
stc
cli
jno
sub
jmp
xor
or
jmp
lods
mov
dec
adc
mov
sub
and
sub
int3
lods
jmp
or
movsx
jge
nop
in
xor
jle
nop
mov
cmps
test
cmp
cmp
loope
inc
sbb
test
das
adc
fistp
out
imul
push
add
pushf
mov
lahf
cli
inc
bound
adc
cmp
adc
faddp
mov
ins
mov
mov
cwde
and
adc
jecxz
xlat
arpl
inc
retf
add
in
lods
mov
pusha
mov
mov
mov
fucomip
(bad)
push
inc
sbb
and
add
push
pop
(bad)
sbb
push
gs
or
dec
hlt
shl
into
adc
js
arpl
pop
loope
xchg
mov
mov
sbb
nop
gs
cmp
pop
and
(bad)
mov
push
inc
cmp
aad
lods
imul
cmp
xchg
and
or
popa
sbb
or
nop
xchg
mov
cmp
in
test
scas
jge
cmovg
push
inc
or
data16
out
dec
int3
adc
add
mul
mov
mov
cwde
mov
bound
stc
out
jp
icebp
push
hlt
leave
cmps
test
(bad)
hlt
sub
pop
mov
ret
mov
pusha
cdq
jo
mov
outs
ret
retf
sbb
sbb
mov
in
mov
mov
retf
dec
adc
mov
sub
xor
and
jmp
js
xchg
xor
out
ja
stos
in
or
or
jne
loop
mov
stos
push
jecxz
pop
arpl
arpl
out
fnstcw
hlt
dec
outs
pusha
cmp
cmp
sbb
outs
repz
push
loopne
dec
xchg
sub
mov
jb
push
into
push
data16
cwde
lds
in
test
mov
dec
xchg
and
adc
test
pop
cmc
mov
clc
mov
sbb
imul
pop
and
sub
call
mov
dec
add
test
call
aad
cmp
jl
pusha
and
mov
sbb
cdq
dec
jne
pop
pop
test
mov
sbb
or
xchg
dec
inc
mov
int3
or
push
aas
jle
enter
mov
and
popf
jmp
fistp
cmp
mov
call
push
and
fwait
mov
push
test
mov
in
cwde
fs
xchg
mov
cmc
cdq
pusha
stos
pop
call
(bad)
scas
adc
and
mov
mov
ja
out
sub
sar
ins
je
(bad)
pop
out
int3
dec
movs
adc
loop
daa
adc
push
pop
cmp
xor
xchg
or
xchg
ins
xchg
(bad)
xchg
cmp
push
ficomp
es
icebp
fdiv
cmp
push
jge
pop
jne
sub
and
out
jl
repnz
sbb
call
(bad)
xor
add
mov
mov
push
cmp
jbe
stos
dec
aaa
adc
mov
xchg
jge
fcmovbe
xchg
lods
add
push
jmp
pop
mov
push
or
movs
ins
cmp
cmps
xor
mov
jl
icebp
or
int3
not
add
push
mov
and
inc
mov
push
aam
test
stos
(bad)
movs
fst
pusha
int
std
bound
and
push
stos
mov
xor
cmps
mov
ja
mov
enter
push
inc
lfs
ret
or
scas
jp
enter
push
push
inc
xor
stos
xchg
test
add
sbb
test
cmp
ret
xchg
cmp
sahf
mov
test
std
fdivr
mov
inc
add
and
sahf
lods
out
dec
mov
jae
mov
aad
retf
leave
and
aad
bound
or
jns
or
es
pop
(bad)
xchg
data16
sbb
push
sbb
lods
push
mov
movs
cmp
sub
mov
cld
push
pop
loopne
jnp
mov
das
std
idiv
stc
push
imul
out
cmc
sbb
xchg
aas
(bad)
(bad)
fs
cld
fnstsw
xor
jecxz
jbe
or
mov
fwait
dec
pop
aad
inc
jb
or
jnp
inc
(bad)
shr
int
movs
xor
fldcw
call
add
(bad)
add
add
pop
and
into
inc
push
xor
xor
movs
push
sub
sub
setbe
movs
push
pop
mov
das
fs
adc
dec
pop
dec
mov
fiadd
jmp
inc
mov
test
mov
mov
lods
loope
add
es
mov
fadd
sbb
sub
dec
fisttp
(bad)
int
adc
imul
add
shl
inc
fist
dec
mov
mov
pusha
mov
push
mov
add
in
jecxz
inc
jg
scas
mov
xor
cmps
fs
test
lahf
popa
ja
add
push
sar
jno
cs
jge
xchg
clc
rol
sbb
mov
mov
sar
data16
jmp
pop
fsubr
rol
sar
push
jno
outs
bound
xor
push
inc
sbb
sbb
inc
lock
(bad)
xchg
mov
outs
cmps
and
push
mov
cmp
repz
jno
xor
outs
xchg
sti
mov
pop
pop
mov
int
adc
cmc
test
add
push
popf
lock
call
mov
cmp
not
arpl
aaa
pop
pop
xchg
bound
mov
dec
movs
or
movs
loop
adc
aaa
es
push
push
sub
pop
xchg
cmp
pop
or
cmps
mov
daa
push
push
arpl
cmps
dec
jnp
aas
sbb
imul
shr
mov
ins
fnstcw
jecxz
loop
pop
mov
(bad)
mov
(bad)
jmp
jmp
xchg
(bad)
in
fnsave
cmp
and
pop
movs
aas
mov
dec
call
pusha
mov
es
ret
inc
mov
rcr
add
mov
cld
cmp
xor
cli
xchg
fisttp
loopne
push
dec
xor
lods
out
adc
and
mov
jge
or
jmp
stos
bound
pop
lods
dec
cmp
jge
test
inc
xchg
adc
inc
sub
dec
fsub
xor
jmp
sub
xchg
sub
dec
mov
mov
(bad)
rol
and
pop
adc
aaa
idiv
mov
add
bound
(bad)
sub
pop
ret
bound
dec
push
ins
or
sub
xor
or
fwait
imul
or
inc
arpl
or
inc
ret
mov
daa
sahf
mov
and
dec
imul
inc
int3
pop
fcomp
push
push
shr
adc
push
add
pop
and
sahf
cmc
not
mov
test
out
jb
mov
dec
gs
ds
in
fmul
je
mov
dec
cmp
mov
loopne
sbb
mov
push
xlat
jno
mov
add
xchg
mov
pop
and
push
dec
xchg
push
inc
ret
test
inc
mov
push
cmp
pushf
out
xor
mov
xchg
xchg
dec
mov
out
push
push
mov
dec
imul
add
out
inc
jg
add
xchg
je
or
loop
clc
pop
cdq
les
dec
inc
movaps
imul
xlat
push
fbld
mov
xchg
gs
stos
push
jnp
sub
xor
sbb
dec
cmp
xchg
dec
push
push
sar
push
ss
sbb
dec
xchg
adc
xor
mov
pop
in
sbb
push
adc
movs
sub
mov
jno
mov
pop
iret
pop
add
sbb
dec
mov
scas
inc
mov
icebp
sub
inc
ret
adc
push
or
mov
cmc
sub
adc
cmp
mov
stos
mov
or
stc
retf
and
and
repnz
xchg
(bad)
xor
movs
pop
ins
pop
xchg
cmp
push
fs
test
add
pop
test
xchg
daa
sub
mov
(bad)
jb
bound
lahf
jmp
arpl
cmp
xor
mov
stc
lods
popf
call
fimul
mov
stc
out
(bad)
cmc
std
hlt
imul
push
(bad)
mov
pop
stos
std
in
jecxz
lds
stos
xchg
xchg
retf
ficomp
xchg
xor
or
mov
stc
dec
inc
mov
xor
dec
jns
adc
dec
fwait
jge
mov
dec
mov
or
xor
inc
out
jg
push
fiadd
pxor
push
sub
dec
imul
call
pop
sbb
adc
mov
mov
mov
out
mov
shl
ret
call
inc
movs
leave
ror
lods
dec
je
adc
mov
jge
xor
dec
and
jmp
test
mov
push
inc
or
les
nop
addr16
cmpxchg8b
ins
mov
xlat
enter
sahf
inc
xchg
mov
fwait
shl
jmp
push
mov
scas
jl
push
cmp
jne
inc
pop
stos
mov
xlat
shl
mov
add
xor
adc
mov
bound
bound
pop
(bad)
rol
pop
sub
and
xchg
adc
jge
sbb
cli
rol
in
rcr
mov
mov
xlat
add
inc
dec
xor
lea
sbb
xor
outs
retf
stos
rol
jmp
outs
retf
retf
mov
xchg
mov
sbb
outs
and
call
cs
adc
adc
imul
or
sahf
jmp
cmp
lea
cmp
fadd
out
push
and
jmp
loopne
(bad)
(bad)
mov
daa
cmps
jge
jbe
dec
jae
call
rcr
push
test
fs
cmp
test
int
sbb
add
xor
pusha
sub
in
adc
icebp
adc
addr16
pushf
inc
add
push
popf
outs
in
sbb
mov
popf
aad
jg
cmp
jl
test
shl
cmps
inc
inc
ins
and
addr16
mov
sbb
cli
inc
sbb
mov
add
and
ficom
mov
test
push
inc
out
movs
push
and
rcl
push
dec
cmp
jo
rcl
test
inc
xor
add
cmc
leave
sub
(bad)
xchg
push
add
and
jmp
pop
es
std
stos
pop
add
movs
and
popf
or
mov
cmp
and
mov
jae
enter
inc
xchg
dec
cmp
mov
hlt
imul
lods
les
add
mov
cmc
in
cli
and
lea
(bad)
movs
iret
out
cmp
lahf
push
pop
(bad)
idiv
pop
add
lods
push
aam
je
aad
in
push
jb
pop
push
rcr
bound
push
mov
mov
dec
cmc
xor
sbb
dec
stos
sbb
icebp
mov
push
xchg
loop
mov
mov
repnz
ror
aam
scas
xlat
xchg
lds
inc
inc
add
and
jp
pop
dec
dec
jae
cs
push
aam
mov
sbb
test
inc
int3
jne
pop
bound
xchg
xchg
mov
dec
sbb
dec
xor
shl
adc
add
sar
cmp
cdq
xor
mov
ins
test
sub
mov
gs
enter
cmp
and
mov
clc
(bad)
sub
imul
les
or
mov
pop
daa
cld
inc
mov
adc
mov
mov
pop
dec
add
inc
add
mov
or
daa
fldcw
jge
scas
lods
jns
pop
ins
push
jno
mov
jns
(bad)
gs
int
in
mov
xor
sbb
adc
cmp
push
cmp
test
jb
in
and
test
sub
imul
jno
std
mov
push
push
popf
xchg
retf
call
out
sbb
dec
dec
adc
adc
call
push
mov
sbb
mov
mov
sbb
mov
outs
adc
mov
adc
push
pop
mov
movs
movs
loopne
int3
clc
pusha
aas
inc
cmps
repz
out
pop
lahf
(bad)
loope
mov
ret
retf
test
out
sti
(bad)
pop
mov
jo
ins
cli
mov
cli
call
sub
dec
push
imul
sti
inc
mov
adc
mov
aad
arpl
xchg
adc
test
jl
jo
dec
mov
mov
adc
scas
call
sti
(bad)
out
cwde
scas
stc
push
mov
cmp
hlt
sub
pop
jo
adc
cmp
add
enter
fwait
xor
ins
mov
inc
mul
mul
adc
xchg
adc
movs
jl
jmp
gs
imul
push
push
test
adc
test
and
lds
cmp
jne
hlt
arpl
add
loop
inc
add
inc
add
fisttp
sti
sub
xor
inc
int3
add
sub
cmps
js
pop
ret
xchg
mov
das
pop
xor
cmp
inc
cmp
ret
sub
shr
pavgb
aad
dec
mov
mov
dec
xor
pusha
xor
sub
xchg
xor
test
dec
mov
or
and
inc
xor
fsub
jae
sub
dec
jae
jno
in
aad
mov
dec
push
js
mov
mov
xchg
or
adc
mov
fstp
mov
pushf
call
stos
movs
xlat
xlat
popf
xchg
jmp
rcr
out
mov
loope
loope
test
out
cwde
ffreep
adc
cmp
outs
movs
mov
mov
pop
repnz
sbb
cmp
xchg
or
pop
xchg
mov
retf
sub
add
xor
pushf
test
xchg
cmc
(bad)
mov
retf
cs
lods
(bad)
imul
sub
into
(bad)
pushf
aaa
and
mov
dec
dec
jae
cmps
push
retf
cmp
sbb
dec
pop
je
push
pop
nop
sub
pusha
mov
xor
xor
frstor
inc
dec
pop
sbb
jge
dec
mov
dec
mov
nop
cwde
xchg
push
mov
mul
pop
fwait
jmp
dec
mov
cmps
xchg
pushf
pop
popf
addr16
sbb
mov
test
xor
int3
cmps
pop
test
jb
sbb
xor
rol
js
daa
and
test
mov
hlt
sub
(bad)
icebp
popf
xchg
inc
retf
push
jne
ret
pop
int
lods
inc
in
inc
dec
jno
(bad)
xchg
xor
sub
mov
inc
out
cmps
mov
dec
push
lea
loopne
fld
popf
int
xor
sbb
(bad)
rcl
or
dec
jle
jo
call
ins
gs
gs
pop
push
mov
movs
jecxz
dec
cli
fld
adc
mov
sub
xlat
int3
stc
inc
or
sbb
fst
push
cmp
mov
xchg
fnstsw
sbb
cs
das
pop
mov
and
jl
sbb
and
retf
fwait
cmps
jmp
pop
sbb
push
mov
nop
sar
xlat
sub
out
push
add
or
idiv
inc
mov
add
jge
mov
call
pop
pop
jle
jns
fldenv
dec
sub
scas
jmp
dec
cmp
loope
sub
sbb
push
adc
xor
mov
add
mov
pop
xchg
bound
or
sbb
hlt
cmp
push
inc
dec
clc
sbb
test
mov
or
stos
jae
fs
retf
inc
add
pop
inc
cmp
arpl
test
repz
mov
iret
push
test
dec
outs
push
test
int
ds
jns
or
push
jle
add
dec
retf
inc
or
popf
inc
(bad)
cmps
gs
mov
dec
inc
cdq
sti
sub
xor
ss
scas
mov
movs
mov
pop
and
add
mov
test
mov
xor
test
add
and
pop
loop
gs
jnp
inc
sub
sbb
dec
sub
outs
mov
int3
push
mov
or
clc
jmp
inc
xor
loopne
stc
mov
dec
push
dec
into
mov
scas
mov
shl
mov
int
xor
mov
ror
dec
sub
inc
add
sbb
or
call
lds
sbb
call
jl
mov
out
mov
cmp
cld
mov
xlat
and
repnz
(bad)
(bad)
ins
cld
repnz
jmp
frstor
int3
sbb
sub
mov
in
rol
mov
mov
pop
pop
lea
push
pusha
call
jmp
mov
not
sbb
(bad)
adc
(bad)
pop
aam
dec
test
mov
test
jmp
pusha
sub
icebp
sub
xor
adc
sbb
and
js
jbe
(bad)
or
clc
sbb
adc
gs
shl
lahf
in
and
jnp
mov
jo
sbb
das
mov
(bad)
aaa
ret
sbb
call
icebp
dec
adc
xor
fwait
les
mov
aaa
cmps
cwde
in
or
pop
push
ret
lds
rol
dec
add
rcr
jo
add
push
jg
xchg
sbb
scas
sub
mov
mov
iret
idiv
rcr
mov
fnstsw
repnz
xchg
or
add
push
xor
cwde
push
fistp
sub
mov
adc
mov
jmp
adc
inc
mov
sar
jl
push
sbb
mov
(bad)
daa
pop
shl
aad
dec
loop
or
fisttp
int
pop
xchg
cmp
inc
xor
dec
cmp
mov
ss
out
sub
push
add
xor
ins
inc
lds
cmps
fucomip
jp
or
scas
mov
xor
lods
rol
xchg
jb
int3
mov
sahf
xor
pusha
and
mov
sub
int3
call
(bad)
adc
push
rcr
mov
fld
push
add
fidiv
and
sub
mov
inc
or
and
and
xchg
sbb
les
pushf
sbb
mov
cmp
(bad)
jp
(bad)
xchg
repnz
push
outs
sbb
and
sub
mov
test
push
out
fdivr
mov
imul
jecxz
mov
xor
push
jge
hlt
arpl
imul
lock
inc
mov
scas
push
cmp
mov
loop
mov
inc
inc
sbb
xor
adc
xor
sbb
and
jge
push
sbb
inc
popw
mov
repnz
dec
mov
int
mov
mov
sub
test
mov
(bad)
pusha
xchg
and
adc
fsub
push
sti
add
aam
adc
(bad)
push
mov
movs
pop
call
xchg
sub
dec
je
mov
scas
into
movs
xchg
mov
xchg
(bad)
das
imul
scas
cdq
mov
fadd
cwde
cmc
jmp
popa
mov
cmp
in
dec
xchg
scas
ins
out
jbe
pop
xchg
ret
mov
mov
imul
addr16
add
mov
outs
inc
pop
xchg
xchg
loope
adc
jecxz
es
pop
int
or
mov
push
mov
mov
xlat
enter
jmp
mov
mov
out
dec
in
mov
test
lahf
ret
jge
movs
or
cmc
imul
hlt
mov
pop
aam
and
fisttp
xchg
daa
push
scas
fimul
pop
inc
cmp
lahf
clc
cmps
cwde
not
xor
xchg
iret
and
inc
cld
shl
aam
sbb
in
fist
rcl
cmps
lods
fcomip
iret
aad
jae
in
ss
mov
dec
mov
ja
movups
loop
add
(bad)
call
retf
sbb
and
sbb
addr16
ds
fistp
jbe
clc
(bad)
enter
or
dec
arpl
pop
or
cs
nop
cmp
sub
and
dec
sar
dec
cmps
js
call
aad
lods
call
dec
fwait
retf
xlat
ret
cmps
xchg
daa
pop
mov
dec
popf
iret
dec
inc
pop
jle
mov
jecxz
mov
ror
into
hlt
push
inc
push
mov
push
into
hlt
push
retf
add
movs
jge
in
in
sbb
lahf
daa
push
sahf
imul
mov
outs
movs
retf
push
pusha
mov
adc
mov
inc
sbb
mov
mov
fsubr
mov
dec
jno
popf
jne
jae
jbe
jmp
xor
adc
retf
mov
push
out
(bad)
aas
jo
repnz
das
mov
jp
(bad)
lods
mov
xchg
(bad)
cli
movs
test
jp
ja
repnz
fwait
aad
aad
xchg
cmp
mov
repz
and
push
loope
imul
xchg
popw
cli
ja
and
push
stos
fstp
ds
pop
stc
inc
jns
cmp
scas
shl
jg
mov
rcr
mov
clc
aad
mov
sahf
jl
sub
scas
add
mov
xor
push
in
or
xor
pop
mov
lds
xlat
es
jmp
jl
pusha
or
movs
mov
scas
mov
dec
dec
jmp
xchg
aam
mov
jo
jl
cmp
sub
je
and
push
fisubr
call
or
int3
xchg
jo
rcl
(bad)
sub
or
cli
mov
out
add
pusha
mov
sbb
sahf
neg
sahf
and
inc
call
pop
add
cmp
cs
and
mov
dec
ins
shl
mov
or
ins
call
enter
push
iret
pop
and
icebp
or
adc
fistp
mov
sub
pushf
adc
sub
xor
or
jnp
retf
movs
fadd
mov
fstp
sar
jae
sahf
pop
test
sti
inc
mov
sbb
rcr
icebp
repz
pop
sbb
(bad)
mov
js
push
mov
jge
xchg
jge
fwait
loope
repnz
loopne
pop
cld
into
cmp
xchg
cmp
in
pop
inc
xchg
mov
inc
retf
and
outs
cmp
adc
add
pushf
sub
pop
sbb
pop
add
adc
mov
sbb
dec
(bad)
ins
adc
add
test
leave
ret
push
loopne
add
push
lds
push
rcl
fsub
pushf
dec
and
iret
add
pushf
mov
les
int
adc
fld
fdivp
or
cmps
mov
push
mov
gs
fisub
push
mov
or
sbb
push
sbb
pop
inc
test
mov
shr
lods
cmp
mov
dec
shr
es
test
arpl
into
adc
aaa
(bad)
add
frstor
or
inc
push
add
lods
sti
jge
mov
aaa
xor
cs
sub
push
or
cmc
in
(bad)
jmp
bound
iret
xchg
daa
cmp
adc
mov
jb
arpl
xor
popa
mov
fist
xchg
sar
jg
(bad)
and
or
xchg
inc
inc
cmp
jmp
push
inc
mov
jecxz
pop
sub
iret
shr
call
mov
enter
push
xchg
leave
cld
rcr
(bad)
call
fs
dec
xchg
push
pop
mov
fld
lea
es
push
pop
mov
jmp
(bad)
sub
je
aam
adc
dec
outs
xor
out
movs
out
inc
adc
or
push
xchg
cmp
popf
xor
pusha
mov
xor
xchg
inc
push
mov
add
data16
sbb
or
mov
or
and
mov
adc
push
fcmovbe
fisttp
mov
data16
icebp
cmp
push
dec
gs
push
pop
add
test
test
nop
nop
or
or
pop
mov
popa
and
mov
mov
sbb
dec
xchg
mov
pop
jae
jno
cmp
out
cli
adc
mov
fisttp
ins
inc
cmp
xchg
dec
add
shr
push
mov
xchg
dec
jge
jb
mov
xlat
fs
jge
stos
xor
mov
xchg
inc
out
(bad)
cmp
(bad)
sbb
hlt
pmaddwd
mov
jge
sar
std
div
adc
xchg
fdiv
add
ins
pop
sbb
mov
and
jo
dec
cmc
inc
in
pop
cmp
xor
ror
push
sbb
pop
xchg
push
movs
stc
lods
pop
loope
mov
jmp
sar
aad
ret
inc
xchg
mov
fst
and
ror
mov
add
cs
or
jns
mov
mov
pop
rol
loopne
or
sub
outs
jl
push
adc
push
icebp
mov
pop
push
ror
jns
pop
ror
das
cmps
mov
popf
clc
sbb
outs
sbb
cli
mov
jmp
fistp
jg
(bad)
sti
sub
jb
cs
push
cmp
fisttp
xchg
pop
dec
and
xchg
xchg
ins
and
push
lods
call
xor
sar
sbb
jae
fidivr
sub
call
in
dec
mov
add
push
aad
mov
iret
inc
adc
mov
arpl
call
sub
outs
sub
call
loopne
mov
mov
lahf
mov
push
inc
push
pop
mov
(bad)
lods
cwde
cmps
dec
or
jns
dec
adc
mov
scas
ins
in
ret
mov
mov
fcomp
push
fisttp
test
push
or
cmps
adc
sbb
leave
retf
sub
movs
xor
loop
pop
inc
cdq
sti
neg
jl
or
mov
mov
xchg
mov
(bad)
jnp
xor
ret
sbb
icebp
dec
sbb
mov
dec
xchg
xchg
lahf
or
cmps
test
pop
test
inc
repnz
mov
ins
dec
sbb
enter
jmp
jge
adc
lea
mov
nop
pop
xchg
add
cmp
fisttp
pop
test
iret
shl
push
xor
(bad)
in
cmps
es
aaa
dec
lds
dec
push
ds
sti
dec
scas
repnz
mov
cmp
mov
popf
fild
push
enter
jne
ss
ins
sub
test
xor
adc
cs
ins
hlt
pop
adc
mov
pop
mov
jecxz
cmps
cmps
jo
xchg
lea
popf
sub
stc
enter
inc
dec
sub
or
add
sbb
rcl
lods
push
push
add
jp
sub
inc
call
jle
xor
and
rol
int3
sbb
xlat
pop
and
add
es
push
adc
(bad)
pop
or
cmp
mov
pusha
cmp
push
add
sahf
and
ret
repnz
mov
adc
push
ret
pop
mul
adc
add
aaa
cmp
cdq
enter
ror
cs
or
in
cs
sub
ss
leave
scas
jl
inc
ds
pop
xchg
mov
clc
fdivr
sbb
xchg
jge
pop
push
or
and
dec
in
fwait
lds
mov
into
addr16
(bad)
dec
pop
or
or
inc
xor
xchg
sub
fild
les
pop
lods
jo
sub
fwait
jno
pop
push
push
add
sub
loopne
ret
popf
lea
push
cmp
aas
jns
(bad)
mov
out
and
movs
(bad)
jae
test
stc
shl
icebp
jmp
xchg
fs
mov
lods
xor
cs
nop
mov
pop
ins
jp
popa
jne
in
arpl
js
and
rcl
push
fcmovne
in
leave
adc
out
test
cmp
call
retf
icebp
push
add
test
pop
ret
in
int
int
inc
pop
loope
and
push
mov
push
sub
(bad)
es
add
dec
mov
push
mov
and
retf
(bad)
xor
adc
(bad)
test
push
call
xchg
jle
sub
call
and
and
and
push
out
xchg
int
retf
cli
and
int
jg
xor
test
xor
xchg
nop
push
mov
adc
leave
jno
mov
inc
pop
dec
test
in
es
cmp
sbb
retf
xchg
lea
or
loope
ficom
aaa
xchg
xchg
dec
and
mov
cmc
cmp
loop
gs
fwait
test
outs
push
or
outs
in
lahf
lahf
hlt
mov
or
mov
popa
out
mov
ins
dec
test
ror
lahf
push
push
aas
pop
popa
mov
mov
push
out
dec
add
out
xchg
inc
sbb
sar
pop
pop
push
in
xor
xchg
inc
mov
in
mov
mov
(bad)
jb
sti
idiv
leave
mov
out
idiv
(bad)
popf
clc
out
das
inc
pop
mov
inc
mov
inc
xchg
inc
loopne
cmp
sub
xchg
sbb
or
mov
jb
push
push
push
push
ins
gs
xchg
in
push
fmulp
mov
frstor
inc
sub
(bad)
stos
and
adc
jg
add
imul
nop
xchg
xlat
push
adc
inc
call
call
ret
and
jmp
fist
mov
or
xchg
ds
mov
ss
cmp
shl
jle
jb
and
inc
iret
push
movs
call
xchg
rcl
push
push
mov
out
xor
test
mov
mov
add
sub
jae
push
xor
push
push
and
inc
popa
mov
mov
imul
div
push
mov
mov
jl
mov
shl
xchg
movs
mov
dec
mov
cmp
test
dec
sbb
fisub
loopne
sub
out
pop
dec
push
movs
and
mov
push
mov
push
out
int
and
aam
xor
inc
cmc
dec
mov
xchg
and
(bad)
jbe
shl
pop
xlat
neg
es
scas
and
adc
and
aaa
cs
ror
hlt
sub
mov
xor
and
enter
push
xchg
xchg
jbe
cmps
out
cmps
jecxz
fldcw
loope
pop
inc
pop
in
popf
adc
mov
sub
(bad)
shl
in
jo
fwait
inc
stos
stc
sbb
fdivr
adc
not
out
pop
lods
jns
jmp
xchg
jo
sbb
mov
mov
iret
mov
sti
imul
(bad)
xchg
into
jge
sub
mov
push
mov
jb
sub
stos
inc
add
ret
mov
pushf
cmc
jbe
jl
mov
scas
ss
les
xor
push
frstor
lods
cmps
outs
jge
imul
(bad)
movs
push
outs
dec
sbb
sub
fst
js
jno
adc
and
dec
stos
or
(bad)
cmps
xor
mov
inc
dec
or
jp
jmp
xor
rol
xor
mov
movs
and
xchg
inc
fcmovb
in
neg
xchg
mov
jae
ficom
scas
lahf
inc
dec
inc
retf
or
add
popa
jmp
loope
add
fistp
jg
or
push
les
pop
mov
fsub
jecxz
dec
push
mov
es
add
or
test
pushw
stc
dec
jg
sub
dec
mov
(bad)
cmp
xor
push
pop
dec
sti
adc
and
sbb
out
adc
(bad)
sbb
and
push
push
add
pop
inc
hlt
push
fild
aaa
and
inc
adc
mov
or
pop
inc
sub
pusha
xchg
add
push
addr16
mov
test
cmp
stos
pop
push
push
popf
rcr
enter
movs
outs
inc
inc
sti
dec
sbb
mov
retf
pop
xchg
mov
jle
div
inc
inc
fisub
and
test
or
lds
inc
jl
jno
inc
fidiv
popf
stos
mov
inc
sbb
or
sub
mov
dec
lods
add
je
adc
les
pushf
or
adc
out
inc
cmp
cdq
pop
cmp
dec
push
fs
sbb
icebp
sbb
push
je
in
add
xchg
fcom
mov
in
and
mov
xchg
jle
ret
aad
jecxz
popa
fwait
sub
jb
cmp
xchg
add
nop
ins
loop
retf
ror
popa
mov
adc
and
cld
jmp
mov
add
fadd
fsub
gs
sub
int3
fxch
lahf
in
gs
stos
cld
in
leave
(bad)
fistp
iret
mov
inc
arpl
push
stc
in
rep
out
jmp
mov
jno
mov
out
add
repz
stc
loope
sar
retf
push
inc
jp
pushf
adc
inc
in
fisttp
scas
adc
out
and
sti
push
fsubr
cmps
daa
xor
pop
and
inc
pop
retf
fdivr
hlt
mov
mov
sbb
mov
sub
push
fnstsw
ja
push
add
inc
sbb
and
je
popf
leave
inc
fnstsw
popf
stos
ins
add
dec
mov
cld
mov
je
aam
jl
adc
ret
leave
mov
dec
xchg
lock
scas
mov
into
mov
dec
ret
jmp
jmp
or
or
cmps
or
inc
or
mov
scas
push
cmps
sub
pop
mov
rol
sub
mov
push
mov
push
and
mov
retf
rcl
add
mov
mov
ds
mov
in
jne
fisubr
sbb
inc
test
jae
(bad)
test
and
loopne
jnp
sbb
pushf
jl
aam
jo
dec
pop
cmp
inc
pop
push
aad
je
pmaxsw
mov
ss
fisttp
xor
dec
shl
leave
lods
dec
dec
inc
add
add
mov
icebp
(bad)
lods
clc
js
pushf
mov
mov
xor
ror
sbb
or
(bad)
retf
aam
iret
xchg
mov
out
icebp
dec
mov
cmp
pop
(bad)
cmps
jmp
xor
or
pop
imul
adc
pop
inc
shl
(bad)
loop
xor
add
mov
nop
and
push
pop
out
jo
jo
pop
mov
add
mov
xor
ins
push
sbb
mov
stc
push
mov
inc
daa
jecxz
pop
loope
cmp
data16
stos
js
sahf
add
call
mov
ret
and
scas
pop
mov
out
int3
jl
shl
xchg
enter
movs
fidiv
cmc
jge
jae
clc
xor
stos
sbb
out
xor
(bad)
cmc
ds
dec
sub
add
dec
cmp
mov
dec
xchg
dec
xchg
idiv
call
not
adc
jmp
and
clc
adc
add
cmp
popf
test
inc
data16
sbb
xchg
scas
(bad)
jmp
jae
and
sbb
sysenter
imul
jmp
push
imul
push
add
push
test
arpl
es
fwait
and
push
daa
inc
outs
dec
pop
hlt
fnstenv
mov
adc
sbb
ror
in
mov
loopne
cmp
pop
lods
push
mov
sar
mov
cs
push
fiadd
push
pop
aaa
aaa
xchg
mov
cmps
in
or
movs
dec
aaa
adc
or
pop
das
sub
arpl
int
lock
adc
ror
call
les
pop
add
jle
adc
ret
and
push
fisubr
cmp
dec
push
(bad)
xor
adc
jmp
(bad)
xor
lock
xchg
out
bound
and
add
jne
xor
push
stos
mov
dec
dec
xchg
fbld
jmp
cmp
popf
mov
mov
xchg
dec
test
sbb
push
xchg
pop
out
mov
push
mov
bound
xor
sbb
dec
xlat
pop
inc
xor
sbb
add
add
xchg
pop
outs
push
mov
inc
dec
mov
adc
pop
mov
inc
sbb
in
test
xchg
es
sbb
mov
imul
jmp
lds
nop
or
pop
inc
cli
movs
adc
rcl
push
add
stos
imul
xchg
mov
cmps
sub
sbb
mov
add
in
ret
vunpckhps
xor
retf
jbe
mov
xchg
in
fdivr
xchg
xchg
in
imul
inc
cdq
mov
xchg
(bad)
fistp
(bad)
idiv
repnz
adc
ja
(bad)
jnp
xor
in
or
div
aam
mov
shr
test
cli
hlt
cmp
mov
lds
cli
in
(bad)
aas
test
(bad)
loope
inc
sbb
cwde
mov
cmp
push
adc
pop
mov
sub
ds
sbb
jp
jecxz
or
inc
adc
test
add
or
mov
les
push
inc
mov
popf
fsub
inc
sub
mov
mov
and
ret
(bad)
in
dec
dec
xchg
cmp
ins
fisub
inc
sbb
xor
ds
enter
jle
adc
xor
add
xor
fs
sbb
fild
push
imul
xchg
test
shl
fnstsw
mov
sub
daa
leave
shl
pop
(bad)
scas
xchg
lds
inc
lods
shl
xchg
mov
push
mov
xor
addr16
ror
pop
cmp
or
data16
adc
imul
sub
sar
pop
fcompp
sbb
sbb
es
pop
ds
dec
bsf
mov
popf
sub
movs
mov
and
dec
xor
nop
mov
int
leave
mov
push
mov
into
outs
stos
inc
(bad)
push
in
mov
pop
jmp
es
mov
retf
sbb
repz
add
shl
daa
xchg
cmps
mov
loope
fild
rcl
jge
mov
mov
jbe
out
mov
mov
rcr
xchg
int
mov
cmp
mov
mov
xchg
dec
ins
inc
(bad)
lahf
loope
cmp
pop
dec
je
dec
mov
adc
popf
jle
cld
pop
lea
and
(bad)
xchg
imul
pop
rcr
fadd
pop
add
ret
fmul
ret
nop
mov
test
adc
jns
cmc
dec
(bad)
and
sbb
(bad)
js
push
jp
outs
cmp
daa
dec
ins
arpl
fist
(bad)
adc
shl
ror
test
repz
jns
push
mov
sbb
sbb
shl
ins
and
inc
lds
loope
(bad)
jmp
lods
mov
add
loopne
daa
jg
push
pop
cmp
mov
iret
sub
loop
aas
loope
xchg
pusha
call
dec
add
add
inc
cmp
mov
cld
mov
sbb
jge
fadd
aad
xor
cld
fsubr
(bad)
lock
leave
or
lea
idiv
mov
rol
repnz
test
xchg
icebp
push
les
inc
cmp
xor
scas
pop
inc
pusha
or
mov
or
sbb
loop
and
cmps
mov
dec
(bad)
aam
mov
push
daa
fist
xchg
idiv
push
xchg
dec
shr
leave
cmp
sbb
jmp
mov
adc
ins
dec
cmps
xchg
bound
pop
in
lock
push
stos
pop
pop
das
sbb
ins
sbb
retf
icebp
stc
push
inc
pop
cmps
retf
xchg
dec
cmp
mov
xchg
pop
cli
loop
add
sub
fidiv
mov
scas
imul
enter
rcl
push
jbe
inc
jo
pop
fstp
test
shr
aad
push
lods
xchg
jle
movs
mov
adc
das
test
int3
add
mov
nop
xchg
sbb
data16
add
rcr
repnz
fisttp
xchg
shl
push
in
xchg
jl
rcr
xchg
(bad)
xchg
cdq
lahf
mov
rol
xor
add
cmc
mov
fsub
sti
xchg
pushf
imul
sbb
push
inc
cmp
mov
rcl
inc
xchg
dec
mov
push
xor
sar
or
int3
inc
movs
add
sbb
ret
pop
sti
jns
or
jns
mov
jp
inc
push
out
pop
out
fwait
or
std
retf
fistp
push
dec
xlat
mov
and
mov
inc
push
lahf
adc
xor
f2xm1
inc
and
inc
cdq
add
(bad)
call
ins
in
add
retf
mov
sub
ja
adc
ss
or
jnp
imul
dec
mov
pop
xchg
xchg
jmp
mov
sti
push
push
pop
lea
lock
lods
or
cdq
sbb
xchg
mov
test
sbb
sbb
ss
dec
sbb
int3
in
cmps
xor
adc
or
sbb
mov
xor
stc
mov
jno
sbb
adc
add
xor
sub
fs
aas
xor
mov
ret
test
adc
ret
call
int
(bad)
loopne
sub
adc
dec
icebp
fistp
(bad)
sub
sbb
push
dec
add
mov
loop
(bad)
in
dec
inc
call
xchg
test
xchg
js
gs
sar
sbb
cmps
xor
cs
push
jno
mov
dec
push
mov
repnz
fs
xchg
das
sbb
jne
xchg
mov
sub
call
sahf
outs
push
sahf
imul
jae
neg
xor
ins
push
add
pusha
pop
sbb
push
hlt
push
arpl
rol
inc
ror
out
retf
push
inc
aaa
fldcw
mov
mov
cwde
or
mov
dec
push
inc
dec
dec
jb
je
push
ss
fiadd
(bad)
mov
imul
jmp
mov
fs
imul
sbb
mov
or
xor
jno
mov
cmps
pop
sub
and
inc
sbb
test
xlat
imul
in
pop
ins
cmp
mov
and
cmp
xchg
sub
sub
jno
ja
jns
mov
aad
outs
and
pusha
xor
(bad)
(bad)
mov
jns
out
pop
popa
js
(bad)
xchg
pop
in
mov
jecxz
stos
mov
popf
enter
dec
lds
add
jns
push
dec
push
or
daa
fadd
loope
push
fs
daa
arpl
(bad)
pop
test
addr16
sar
xor
popf
sub
mov
rcl
cli
mov
sub
retf
mov
test
(bad)
mov
cli
mov
and
adc
mov
add
and
leave
enter
mov
fdiv
xchg
dec
fwait
outs
push
mov
imul
jns
mov
into
fiadd
retf
push
or
add
ror
retf
out
jb
push
cmp
sbb
push
test
add
dec
push
dec
mov
push
out
sbb
(bad)
rcl
pop
gs
or
push
mov
jb
les
(bad)
and
add
mov
adc
test
lea
addr16
data16
rcl
imul
push
pop
pushf
mov
and
rcr
sbb
ret
loope
movs
scas
les
out
imul
xchg
mov
mov
je
ja
cmp
outs
cmp
outs
inc
pop
imul
jmp
or
ins
imul
fst
mov
sub
inc
sahf
ror
dec
push
jne
and
retf
imul
pop
push
ins
mov
ficomp
aad
(bad)
addr16
(bad)
retf
add
pushf
add
mov
cmp
call
push
lds
pop
mov
or
bound
dec
xchg
push
call
mov
aas
jp
loop
lds
xor
retf
dec
mov
push
push
int3
adc
cmps
adc
jle
retf
and
pop
loop
add
cmp
xchg
jmp
sar
dec
sbb
xchg
stos
sub
pop
leave
out
fs
lds
jge
pop
push
aaa
jne
aam
jle
cmp
(bad)
inc
cmc
sbb
sub
jle
xor
fwait
mov
jg
push
std
mov
(bad)
xchg
xchg
adc
adc
test
lea
inc
popa
pop
je
into
mov
mov
rcr
jmp
test
lahf
pop
mov
xor
into
out
rcl
test
lock
mov
jmp
cmp
imul
and
lock
ror
lahf
ja
stos
leave
xor
bound
inc
push
loope
cwde
add
pop
cld
or
nop
retf
mov
add
out
xchg
jp
push
push
je
adc
and
xlat
dec
or
inc
sub
mov
mov
push
sub
pop
jb
jno
mov
add
inc
push
sub
in
inc
pusha
mov
mov
les
and
push
bound
int
mov
jl
and
adc
xor
ja
pop
(bad)
in
jp
scas
push
stos
lds
push
retf
aas
sub
dec
fcom
xor
sub
push
sbb
rcr
nop
fsubr
xor
add
push
or
and
xchg
rol
test
adc
ret
sub
shl
ror
bound
cmp
add
jmp
xor
movs
fwait
dec
stc
push
push
leave
in
inc
stos
out
mov
add
repz
jp
jmp
pop
dec
sahf
int3
jecxz
adc
sub
adc
add
arpl
mov
dec
dec
sbb
or
jle
cmp
pop
bound
add
test
sahf
mov
jnp
in
xor
and
sub
mov
xchg
lea
(bad)
mov
clc
data16
imul
push
scas
xchg
rcr
ja
in
xor
or
mov
test
int3
mov
inc
inc
add
ss
out
mov
dec
add
cld
mov
(bad)
xor
mov
xchg
sbb
cdq
icebp
in
push
or
xchg
pop
mov
add
ret
cmc
in
add
add
repnz
jae
sbb
pop
sbb
(bad)
pop
fstp
push
imul
push
(bad)
jg
es
cmp
adc
cs
dec
mov
aad
mov
jl
mov
jp
daa
jbe
test
push
scas
js
(bad)
and
inc
or
fdiv
cmps
fmul
call
push
(bad)
xchg
mov
outs
lock
leave
imul
mov
inc
fs
mov
vrsqrtps
mov
cwde
sar
retf
pop
pop
ja
mov
xchg
pop
dec
mov
inc
push
nop
sahf
push
mov
stc
movs
lock
(bad)
pop
int
xchg
and
cmp
and
push
cwde
imul
and
sbb
mov
nop
imul
loop
enter
rol
xlat
mov
push
fld
push
push
es
pusha
lods
mov
mov
data16
inc
dec
mov
push
push
call
pop
push
inc
push
xchg
mov
inc
pushf
jmp
popa
adc
sbb
and
not
call
jmp
xchg
adc
data16
test
mov
mov
inc
push
sub
xchg
(bad)
jb
sub
or
and
in
jo
out
push
and
jns
fs
xchg
call
and
jno
test
cmps
jge
fwait
xor
and
pop
add
arpl
mov
inc
fdiv
fdivr
or
clc
arpl
xor
sub
push
xchg
mov
shl
push
sub
add
mov
cmps
test
rcr
inc
popa
push
adc
ret
(bad)
scas
jp
xchg
mov
cmp
neg
daa
mov
imul
jecxz
mov
dec
and
sbb
dec
xchg
lahf
sub
adc
sub
push
adc
leave
aas
inc
pop
mov
not
cwde
cmp
or
and
nop
mov
stc
ror
cwde
pop
jp
mov
dec
sbb
xchg
mov
xchg
adc
pop
jns
jmp
dec
fsub
shl
fmul
ins
icebp
lds
cmp
fdiv
int3
stos
int3
retf
div
mov
dec
mov
inc
and
and
sbb
fst
or
mov
push
sahf
out
sti
dec
fdivr
loop
mov
js
addr16
fs
shl
out
xchg
inc
test
data16
mov
mov
gs
gs
xor
ror
add
fcomp
inc
outs
inc
sbb
ja
inc
sar
int3
xor
outs
fstp
outs
xor
sti
mov
push
int
out
fmul
scas
sbb
data16
adc
scas
dec
sbb
cmps
inc
sbb
ins
movs
push
xor
push
sbb
push
xor
mov
xor
sub
ins
jnp
inc
push
loope
jp
adc
loope
cmp
jmp
jge
xchg
cdq
sahf
xchg
adc
adc
mov
lea
dec
pop
mov
out
cmp
sub
sub
cs
push
adc
cmp
or
jb
aam
test
push
inc
lods
repz
or
aas
mov
push
repnz
shl
retf
lds
loope
in
mov
mov
sub
and
mov
mov
imul
jb
out
in
inc
xor
adc
retf
sub
ins
leave
sbb
sub
enter
sbb
ficomp
pop
pusha
bound
dec
inc
stos
inc
sbb
sbb
sahf
or
or
mov
push
mov
adc
fwait
mov
sub
imul
test
not
das
or
push
pop
push
xchg
and
jno
sub
xor
pop
mov
dec
dec
jnp
sbb
and
sbb
repz
cmps
repnz
mov
fst
pop
sub
pop
pop
call
sub
in
pop
retf
xor
ins
mov
mov
mov
cwde
and
adc
mov
jge
ins
sbb
in
lahf
daa
push
jp
(bad)
es
aad
xor
dec
aas
inc
inc
arpl
or
inc
dec
ret
data16
sub
inc
enter
inc
(bad)
jp
int
lods
nop
jmp
sbb
cld
push
mov
std
jbe
(bad)
cmp
outs
xchg
cwde
add
or
xor
fstp
adc
pushf
xchg
jge
jno
js
in
mov
mov
clc
setnp
push
jmp
push
jns
xchg
mov
int3
faddp
push
mov
ds
or
xchg
xor
sub
adc
in
js
jecxz
add
ror
or
jo
rep
aas
push
call
addr16
fcomip
mov
rcr
arpl
popa
cmc
mov
(bad)
out
ins
js
ret
es
sub
loopne
test
stc
xchg
mov
clc
xchg
adc
dec
cli
leave
sar
inc
ss
pop
sbb
dec
push
adc
fld
(bad)
in
jmp
lds
int3
(bad)
ins
push
jne
addr16
(bad)
pop
into
jl
push
add
inc
cmp
push
inc
adc
inc
jp
daa
out
cmps
xor
push
cwde
test
ds
and
xchg
cmp
js
inc
hlt
into
inc
ins
ss
pop
push
mov
xchg
ja
mov
sbb
mov
mov
mov
popa
test
xor
ins
(bad)
mov
mov
mov
adc
mov
fldcw
mov
sub
mov
mov
adc
fucomp
loopne
inc
rcl
dec
ret
sbb
cli
push
int
retf
push
fld
jns
mov
xchg
fwait
jne
cmc
sbb
mov
aad
out
sub
pop
cs
pusha
jle
mov
pushf
out
cmp
push
in
inc
or
add
in
adc
dec
add
jnp
pushf
adc
rol
outs
outs
loope
inc
pop
xchg
mov
cdq
stos
lods
cld
mov
call
ins
adc
pop
bound
leave
aad
mov
and
adc
idiv
call
leave
test
mov
and
sub
sar
dec
mov
xor
cli
std
loope
stos
push
outs
data16
sub
stos
inc
test
aam
out
xor
fwait
and
js
pushf
into
xchg
movs
pusha
ins
cwde
add
push
retf
out
xchg
xchg
dec
mov
inc
popa
(bad)
les
adc
dec
sbb
pusha
dec
push
stc
or
mov
test
sbb
retf
cli
sub
sub
pop
mov
aad
cli
out
cli
pushf
xor
xor
cmps
mov
or
icebp
inc
in
mov
push
mov
and
dec
nop
loop
fsubr
or
adc
or
and
inc
out
jmp
(bad)
std
pop
pop
test
fcom
pop
imul
mov
in
push
je
push
mov
imul
sbb
popf
(bad)
jp
scas
lahf
mov
push
sti
pop
pop
lods
std
fwait
fwait
xor
out
test
out
fisubr
aas
scas
(bad)
xor
into
push
shl
adc
mov
cdq
jmp
pushf
pushf
push
(bad)
gs
out
mov
mov
sbb
mov
sbb
push
xchg
sbb
cwde
loop
pop
sub
imul
pop
fs
arpl
fadd
repz
xor
stos
sbb
bound
test
fs
or
mov
les
dec
xchg
adc
xchg
loopne
jb
xchg
call
mov
outs
dec
cmp
add
fild
and
test
enter
mov
pop
stos
push
cmp
sbb
cmp
jnp
lods
cmps
lea
and
test
cs
lea
test
cwde
push
dec
imul
inc
sbb
loop
sbb
push
and
pop
fs
cwde
sbb
cwde
neg
sbb
xchg
loop
xor
xchg
leave
nop
in
jecxz
jmp
fcom
push
clc
sbb
retf
fnstenv
push
sbb
adc
sar
out
sub
and
xchg
jne
imul
rcl
repz
lods
retf
dec
jmp
cmp
jmp
stos
rol
push
lods
xchg
fdiv
mov
mov
pop
sbb
lods
push
and
xlat
fisubr
mov
stos
mov
push
push
adc
adc
aas
bound
add
ins
xchg
in
xchg
ret
xor
xor
cmp
dec
(bad)
mov
fincstp
cmp
popa
ds
enter
out
and
popf
mov
mov
(bad)
icebp
mov
jg
xchg
std
mov
jge
pop
lahf
adc
scas
aad
dec
mov
sti
int
fisttp
push
and
mov
or
sub
cmp
mov
xor
scas
or
aas
mov
push
out
mov
pop
cli
push
(bad)
ret
cdq
inc
add
dec
ins
neg
inc
adc
out
mov
push
fucomip
inc
out
jo
mov
mov
mov
adc
adc
adc
mov
lea
push
pop
sbb
mov
jb
(bad)
adc
in
pop
rcl
imul
mov
and
aam
cmps
into
pop
or
sbb
fisttp
lahf
loop
lds
and
jmp
jmp
popf
fucomip
aam
cmc
jb
cld
mov
adc
retf
adc
push
fs
pop
loop
sahf
bound
scas
xchg
out
jmp
cdq
jo
loopne
hlt
stos
mov
das
pop
sbb
adc
xor
add
mov
inc
mov
sub
push
das
xchg
mov
or
retf
mov
mov
xchg
scas
or
je
popf
sub
push
cmc
add
fld
mov
dec
jnp
stos
loopne
push
pop
adc
push
loop
call
enter
loopne
shl
cld
in
int
sub
aad
out
jle
out
shr
inc
fsub
fcom
repz
dec
mov
or
xor
push
and
mov
pop
adc
cmp
pop
inc
jl
mov
inc
mov
mov
ja
dec
scas
add
jge
mov
pop
cmp
jmp
cdq
punpcklwd
add
cmps
fwait
or
push
mov
add
xchg
push
mov
inc
in
add
sahf
in
xor
(bad)
xor
mov
dec
(bad)
jp
cmp
lock
ss
add
pop
cmp
adc
cmc
push
inc
lods
jp
xchg
mov
ss
pop
jmp
mov
sbb
cmp
dec
das
sbb
cmc
popa
mov
mov
or
jmp
ficom
mov
(bad)
stos
(bad)
add
jb
mov
dec
bound
or
dec
mov
imul
or
push
sub
mov
pushf
push
iret
adc
fisub
int
push
arpl
ror
das
xor
aaa
scas
das
outs
outs
ss
and
pop
xor
dec
inc
mov
in
jne
out
xchg
lods
mov
dec
sahf
add
adc
fistp
mov
adc
jp
popa
loop
xchg
cmc
or
fstp
mov
(bad)
jp
ret
jmp
(bad)
fcmovnbe
pop
out
jbe
fdiv
shl
mov
mov
ret
xor
int3
xchg
or
adc
shl
mov
aad
stos
aam
cdq
sahf
xlat
push
aaa
sti
adc
and
movs
ds
std
fidiv
add
dec
stos
je
loope
dec
mov
pop
inc
daa
dec
cmp
cdq
ins
packuswb
test
pop
jae
or
cwde
(bad)
inc
push
xor
call
inc
jle
inc
mov
xchg
fld
dec
mov
cmp
cdq
jbe
scas
fs
dec
je
and
add
push
sub
ins
sbb
stc
adc
mov
push
ins
adc
xchg
or
dec
cwde
or
pop
lods
int3
xor
and
lods
add
cmp
push
dec
stos
dec
idiv
pop
mov
sbb
jmp
xor
mov
(bad)
xor
sbb
les
xor
sbb
push
arpl
aaa
retf
push
xchg
inc
xchg
mov
sbb
shr
ret
add
lsl
loopne
sbb
dec
out
jp
fld
fucomi
pop
lock
push
xlat
jnp
leave
push
mov
mov
rcr
xchg
repz
fsubr
(bad)
stc
pusha
lods
repz
push
jecxz
fxch
sub
cmp
das
std
mov
repz
bound
mov
jbe
mov
jb
repnz
imul
push
outs
out
mov
pop
out
pop
push
mov
mov
mov
shr
test
(bad)
stos
pop
movs
dec
aaa
pop
out
jmp
push
scas
addr16
pop
(bad)
(bad)
xchg
cmc
enter
push
cmp
mov
jne
aas
pop
cmc
mov
(bad)
mov
mov
cdq
add
sbb
and
mov
add
ret
xchg
and
je
and
adc
pop
int3
xchg
mov
arpl
enter
movs
ret
(bad)
movs
jp
add
in
push
cmp
sbb
mov
jne
lods
push
int3
jbe
loope
int
(bad)
jmp
mov
sbb
shl
pusha
mov
(bad)
(bad)
dec
ror
add
jno
pop
inc
fstp
cmps
xor
lds
leave
and
(bad)
jmp
sbb
fwait
inc
ins
dec
sbb
mov
cmp
adc
cmps
add
ret
inc
push
mov
xchg
call
cmp
stos
push
adc
pusha
out
jno
and
inc
push
mov
mov
int
push
mov
pop
push
push
(bad)
das
xlat
outs
outs
xchg
sub
fidiv
sbb
pop
xchg
xchg
sbb
and
mov
les
ins
pop
dec
xchg
xor
and
push
hlt
test
dec
lods
xchg
and
sbb
push
fstp
in
pop
out
pop
aas
fld
lods
or
pop
xor
dec
mov
xor
popa
mov
or
mov
xchg
nop
inc
pushf
and
mov
pop
and
inc
jno
pop
outs
jl
into
das
push
cld
rcl
jle
mov
sub
xchg
adc
add
jno
gs
mov
push
push
xchg
out
mov
cmps
inc
adc
or
test
cmps
imul
jmp
inc
rcl
jae
mov
mov
or
jne
retf
add
shr
and
add
push
mov
push
sbb
push
inc
repnz
rcl
and
pop
icebp
sbb
stos
hlt
and
pop
ror
xchg
test
fcomip
or
icebp
ds
int3
mov
pshufw
in
into
cwde
sbb
cmps
mov
pop
push
cmp
(bad)
pop
add
jae
dec
xchg
xor
(bad)
in
(bad)
retf
outs
mov
(bad)
jmp
aas
xchg
jge
jo
pop
cmp
or
adc
mov
repz
fisubr
sub
fs
lock
mov
mov
jmp
mov
jnp
sub
call
cmps
aaa
sub
jnp
xchg
or
cmp
into
pop
loope
jp
cli
pop
jg
lods
xor
pusha
lock
pop
mov
into
dec
scas
ds
je
mov
std
bound
(bad)
xchg
repnz
or
popf
and
lds
jne
mov
push
mov
mov
mov
lock
cs
dec
int
out
fsubr
scas
das
or
fprem1
cli
fistp
adc
aad
dec
(bad)
push
pop
or
jae
mov
or
xor
js
adc
rcl
or
mov
pop
addr16
mov
lahf
bnd
mov
cmp
mov
inc
leave
lods
and
pop
pop
addr16
mov
mov
cld
sbb
retf
pop
into
cld
jbe
inc
(bad)
pop
sub
les
loope
or
shl
jl
dec
add
xor
test
dec
sub
test
ins
daa
int
pextrw
xchg
add
xchg
loopne
push
stos
pop
mov
xchg
test
retf
inc
mov
leave
pop
lea
repnz
mov
xchg
jno
adc
jbe
dec
push
fadd
pop
pusha
test
push
cld
push
in
sbb
(bad)
mov
add
nop
xor
enter
pushf
mov
push
lods
jnp
add
add
push
call
fnstenv
push
inc
sub
mov
lods
push
ins
sbb
mov
call
shl
aad
pop
sub
inc
stc
punpckhdq
sti
cmc
ret
out
push
(bad)
sub
dec
addr16
pop
popf
jmp
cmp
mov
jp
or
inc
idiv
gs
sub
xor
mov
or
mov
sbb
adc
mov
sbb
adc
(bad)
sti
mov
add
(bad)
sbb
inc
jmp
leave
push
retf
out
xor
dec
cs
enter
mov
sub
sbb
sahf
mov
jno
dec
retf
jmp
aaa
imul
mov
fidiv
xchg
outs
jbe
lahf
(bad)
std
ja
out
push
rol
cmps
add
cmp
jbe
jo
jp
jbe
pushf
push
xchg
cmp
inc
mov
jge
leave
pop
and
push
inc
test
mov
mov
(bad)
pop
scas
push
mov
mov
lods
or
mov
cmc
add
mov
add
inc
popf
int3
jb
jns
dec
sub
mov
jmp
and
or
fisttp
push
sub
mov
cmps
xlat
fsub
jno
mov
into
mov
pushf
xchg
jp
mov
add
(bad)
pop
cdq
imul
cmps
stos
pop
pop
ja
dec
outs
push
push
xchg
push
mov
sti
aam
out
(bad)
mov
sub
mov
stc
int3
jo
arpl
adc
icebp
icebp
sub
dec
ror
or
dec
xchg
xchg
shr
aas
push
fistp
mul
add
inc
(bad)
jmp
inc
pop
aas
pop
cmp
xchg
push
jl
out
test
sub
pop
enter
test
imul
int
fadd
push
iret
push
sub
dec
fcmovnu
cwde
repz
and
ficomp
push
jecxz
repz
cli
lods
xor
and
xlat
das
scas
ins
lods
jbe
(bad)
push
sub
push
xor
sbb
mov
jg
cmps
inc
jg
push
in
pop
call
test
popf
mov
mov
jne
sbb
jmp
mov
dec
aaa
mov
or
mov
add
inc
(bad)
call
sar
adc
inc
push
movs
add
xor
push
jns
jb
jecxz
call
push
gs
dec
push
test
sbb
jmp
dec
mov
mov
jno
and
int3
popf
and
jp
cdq
mov
(bad)
mov
xor
pop
mov
mov
pop
add
ins
mov
xor
dec
push
mov
push
mov
sbb
les
mov
je
adc
mov
ins
xchg
xchg
cmp
jae
mov
dec
bound
mov
(bad)
lods
and
into
pushf
inc
mov
xchg
into
mul
(bad)
mov
dec
push
mov
aam
stos
xchg
in
movs
dec
xchg
fwait
pop
push
push
fcomp
push
cs
dec
inc
sbb
push
pop
pop
jae
es
push
repz
(bad)
stc
sbb
xlat
cmp
jns
shl
sub
mov
jns
mov
mov
push
(bad)
fcmovnu
push
repnz
jnp
pop
out
jmp
push
sbb
sub
or
inc
rcr
adc
mov
sbb
or
or
dec
outs
ss
mov
dec
sub
clc
aas
pop
ins
std
sbb
xor
test
jg
cmp
cmps
push
retf
push
cmc
mov
iret
or
mov
and
sub
xor
adc
sbb
rcl
out
mov
inc
jmp
(bad)
mov
shl
inc
mov
popa
mov
loope
xchg
and
lods
fadd
enter
add
stos
int
lahf
push
cmps
imul
dec
jmp
add
inc
mov
adc
not
mov
or
movs
lea
imul
cmp
nop
and
arpl
xor
cmp
(bad)
jo
xor
pop
inc
fld
jne
sub
sbb
sbb
retf
jns
adc
cmps
push
inc
mov
(bad)
in
push
jmp
in
push
loope
dec
inc
adc
xchg
test
bound
xor
jecxz
or
ret
or
inc
sbb
bound
fwait
enter
ficom
or
mov
outs
clc
fstp
jp
enter
mov
cmps
repnz
scas
int
push
push
std
xchg
imul
(bad)
lock
sub
les
iret
cmp
mov
dec
and
sahf
xor
and
leave
mov
pop
or
aas
outs
aaa
leave
repz
cmp
retf
inc
stc
cwde
lds
idiv
(bad)
pop
sub
push
add
push
(bad)
xchg
pop
cmp
jp
pop
xor
mov
mov
xchg
outs
mov
ror
adc
adc
ret
adc
movs
inc
or
add
mov
add
test
aad
push
sub
gs
and
scas
xor
jae
cmp
and
inc
vmovlpd
nop
leave
or
mov
xor
xor
loopne
mov
xchg
lock
sub
dec
push
xor
outs
in
ficom
jge
sahf
outs
mov
or
test
les
xor
les
(bad)
pop
aad
movs
aas
shl
jno
cmp
retf
int
and
or
adc
xchg
adc
mov
jmp
inc
(bad)
repnz
into
xchg
inc
add
mov
data16
adc
sbb
inc
dec
push
cmp
daa
fsub
jp
aaa
mov
fcom
and
pop
scas
pop
or
xchg
daa
push
mov
lahf
movs
and
cld
mov
inc
push
cmp
pop
repz
mov
hlt
fisubr
sbb
test
mov
mov
jle
ret
imul
rcr
xchg
(bad)
gs
inc
enter
sbb
inc
sub
and
lahf
or
(bad)
pop
adc
inc
mov
xor
ins
sbb
mov
xchg
jmp
push
mov
shl
jmp
js
test
or
dec
mov
jae
adc
xor
fdiv
jne
pusha
push
sub
gs
mov
push
daa
mov
jns
or
es
inc
xor
pop
adc
lea
xor
(bad)
push
push
out
xchg
and
sub
jecxz
pop
inc
sbb
mov
mov
imul
pop
push
arpl
jb
adc
push
pop
iret
mov
xor
sub
xchg
rol
sub
in
xor
lods
and
inc
sar
fsubr
adc
mov
sbb
ja
ins
int3
pop
fstp
pop
test
cmc
ss
and
lds
mov
ja
call
pop
in
or
and
outs
xchg
retf
pop
push
pusha
jmp
pop
aad
sub
fs
mov
sbb
fs
pop
xlat
mov
xor
bound
pop
jg
xor
rol
mov
mov
in
into
cmp
into
test
push
stos
out
mov
neg
cmp
mov
adc
pop
sbb
mov
pop
in
stos
pop
fmul
inc
imul
bound
jmp
in
popf
cmp
in
and
xchg
mov
jnp
jmp
xor
out
push
sti
mov
push
jg
(bad)
int3
fisttp
jecxz
add
jg
int3
lds
nop
iret
aam
ins
cmp
sbb
inc
add
dec
fwait
test
mov
dec
sbb
mov
sub
movs
and
jmp
cmp
add
sub
push
sub
push
cs
in
sahf
xchg
sub
sahf
js
adc
aas
cmp
xor
bnd
ins
inc
repnz
pop
das
xchg
sbb
lea
or
aas
nop
sahf
dec
or
arpl
push
jo
retf
xchg
add
popa
mov
movaps
gs
(bad)
iret
push
push
sub
xor
add
sub
cmc
add
imul
dec
movs
mov
adc
push
push
lahf
add
(bad)
and
push
aam
cs
scas
(bad)
mov
jmp
pop
outs
jno
xor
nop
dec
ror
dec
popa
dec
or
jp
dec
jb
push
dec
lods
bound
repz
sbb
icebp
rol
cmp
mov
ret
leave
(bad)
xchg
add
aas
jnp
mov
adc
sub
cmp
jns
mov
sub
cmp
push
sub
clc
outs
iret
sti
mov
ds
(bad)
jmp
cld
and
ret
jo
and
jl
push
(bad)
fcos
mov
mov
cld
add
sbb
sbb
jbe
dec
rcl
outs
adc
fwait
mov
enter
fsubr
jo
popf
push
gs
sub
add
xchg
fnstenv
mov
xchg
jne
mov
jo
(bad)
movs
cld
(bad)
out
outs
lods
scas
sti
pop
or
adc
movs
cmp
lods
pop
push
enter
test
out
ret
adc
mov
test
lock
cli
cmp
cmp
in
mov
push
dec
imul
push
mov
cld
inc
into
pop
mov
imul
jb
cmp
pop
fimul
sbb
xchg
fs
xor
inc
mov
mov
cmp
dec
call
mov
es
add
(bad)
fidiv
add
ret
dec
xchg
fxch
lods
adc
xor
cmp
(bad)
mov
adc
or
xchg
dec
sbb
push
mov
push
sbb
inc
inc
mov
adc
sahf
add
dec
je
loop
arpl
leave
bound
lds
loop
shl
scas
pop
mov
cmp
loopne
ins
les
jns
popa
movs
mov
std
jmp
imul
sahf
fwait
cmp
loop
jecxz
popf
dec
mov
push
jecxz
aad
out
aam
jg
js
popf
mov
sbb
ss
nop
jl
sub
(bad)
fisub
test
in
cmp
mov
pop
scas
pop
pop
sbb
retf
das
lahf
outs
mov
jb
mov
daa
adc
xchg
dec
xchg
dec
xchg
sub
ficomp
aad
dec
sbb
dec
inc
mov
sbb
ror
push
int
mov
int
mov
and
out
pop
jns
es
out
cmp
outs
fild
movs
adc
mov
mov
repnz
mov
mov
xchg
(bad)
dec
dec
cmps
adc
sbb
or
mov
and
fild
or
adc
xor
add
push
jecxz
cmp
jl
dec
mov
stos
cwde
scas
dec
mov
xor
pop
lds
pop
xor
sbb
jp
in
cmp
rcr
xchg
test
(bad)
push
inc
sbb
push
pop
scas
and
retf
fwait
mov
mov
xchg
bsr
pop
aaa
mov
into
inc
jae
mov
inc
xor
push
xor
(bad)
jmp
cmp
and
cmp
and
ret
inc
stos
jle
xor
pop
mov
xchg
popf
cs
mov
push
adc
xchg
push
mov
jp
mov
push
inc
inc
imul
xor
pop
ficomp
or
add
aam
jae
jns
rcr
pop
mov
xlat
sub
push
jmp
lock
sbb
or
fs
dec
mov
dec
das
mov
and
enter
sbb
pop
pushf
jmp
lock
or
jg
leave
stc
(bad)
push
sbb
icebp
dec
out
out
aad
in
fld
cli
inc
mul
aas
jmp
add
jb
fadd
movs
pop
mov
adc
cli
test
push
jns
add
or
fnstsw
(bad)
arpl
or
jne
dec
sbb
hlt
retf
test
xlat
xchg
scas
jmp
call
fs
xchg
ret
jmp
or
dec
cmps
in
push
push
jo
retf
and
sti
and
inc
xor
int
sub
cli
cmp
sub
ins
movs
fadd
cmps
in
aam
rol
mov
or
xchg
test
imul
mov
nop
fisttp
xchg
and
or
push
adc
cmp
and
xor
lods
mov
xor
jmp
jns
push
mov
adc
data16
sub
(bad)
xchg
sbb
js
xor
push
ins
mov
mov
pop
cmp
aas
in
scas
jo
ss
adc
out
jbe
adc
lds
sub
in
popf
retf
jmp
and
call
push
cwde
and
es
push
lods
jmp
and
adc
jae
mov
or
ins
ds
mov
ret
(bad)
out
sub
(bad)
movs
jno
push
or
and
iret
jp
push
jns
sub
loope
xchg
xchg
xor
xchg
popf
pop
retf
cdq
cld
push
add
leave
pusha
cmps
ja
int3
pop
and
sub
iret
pop
aaa
jb
aaa
sub
imul
repnz
dec
test
xchg
push
lock
icebp
fsubr
shl
sar
mov
mov
bnd
jo
push
(bad)
adc
loopne
dec
dec
nop
(bad)
or
mov
dec
mov
scas
cs
jmp
ds
nop
pop
xor
inc
cmps
adc
add
jg
push
enter
pop
aas
and
push
sbb
pop
sub
push
push
lods
jb
adc
std
cmps
dec
add
sub
push
push
mov
ret
push
test
mov
jg
adc
cdq
mov
fistp
(bad)
sbb
push
stos
push
sbb
mov
sub
lea
dec
clc
or
jne
mov
xchg
pop
ror
inc
and
ret
pop
dec
push
inc
int
add
shl
test
push
loope
jae
cmp
movs
je
pop
jne
in
imul
jg
in
imul
push
cs
in
or
xchg
push
mov
mov
fs
loope
cdq
adc
mov
retf
jecxz
fisttp
aad
inc
push
add
adc
retf
std
ret
neg
inc
jmp
movs
daa
add
popa
push
dec
sub
data16
in
jge
pusha
shl
dec
inc
sbb
dec
sub
call
pop
sub
out
(bad)
(bad)
fistp
out
sbb
mov
aad
(bad)
push
fwait
mov
or
jg
mov
xor
dec
in
sbb
bound
sub
ret
inc
ds
shr
std
sbb
icebp
mov
xchg
sbb
shl
data16
add
xchg
pushf
mov
(bad)
xor
jmp
mov
(bad)
call
(bad)
jmp
sbb
pop
nop
int
push
popa
gs
adc
fild
sub
gs
das
xchg
cwde
shl
xor
mov
movups
push
jge
cmp
adc
sbb
je
inc
(bad)
fprem1
shl
fs
enter
jbe
add
xor
dec
mov
inc
pop
repnz
sbb
mov
sbb
(bad)
js
pop
repz
mov
and
out
imul
out
mov
xchg
mov
inc
mov
and
add
pushf
cdq
mov
xor
das
call
adc
aas
mov
sbb
push
aam
pop
xor
push
cli
push
cmp
retf
imul
iret
pop
fsubr
pop
pusha
sub
fmul
popf
movs
cvtps2pi
cld
icebp
das
or
leave
dec
xor
movs
clc
and
sub
ins
jge
popa
outs
popf
call
cmp
std
inc
icebp
int
out
(bad)
cs
in
jmp
mov
aam
fisttp
clc
test
stc
scas
mov
mov
pop
jno
inc
out
jle
and
aad
or
and
sbb
xor
or
call
inc
idiv
push
pusha
jmp
aad
movs
mov
sub
dec
test
xchg
inc
sbb
sbb
jg
aam
or
mov
bound
xchg
mov
xchg
adc
dec
aam
pop
push
sbb
test
outs
push
inc
enter
rcl
stc
rol
int
jbe
mov
loop
add
dec
(bad)
xchg
mov
lahf
icebp
aas
movs
or
mov
pop
adc
add
outs
inc
vpunpckhdq
in
and
add
loopne
push
sub
lahf
xor
mov
xchg
and
mov
add
xor
ins
adc
js
push
les
push
mov
xor
test
pop
test
sub
jne
jge
data16
pop
push
or
xor
movs
dec
leave
mov
(bad)
push
mov
xchg
sub
mov
(bad)
lea
in
test
dec
mov
stos
cmc
lock
js
adc
aam
add
or
stos
shl
add
das
ss
mov
jp
mov
test
imul
pushf
in
ins
and
mov
les
ins
imul
pop
mov
and
fistp
test
dec
fistp
mov
imul
inc
mov
mov
in
loop
xlat
in
dec
in
popa
enter
jl
sub
test
cdq
call
fs
lods
xchg
sub
lods
test
push
inc
ret
push
adc
cmps
xchg
in
or
lds
add
pop
cwde
ja
sub
fld
cwde
std
pop
mov
mov
cli
sbb
and
inc
test
adc
xor
xor
and
movs
or
sub
dec
retf
and
xchg
pop
push
mov
pop
pop
das
mov
stos
xchg
or
add
into
mov
inc
les
fsubr
mov
push
movs
or
out
xchg
sahf
out
cmp
mov
add
test
jae
jmp
fs
pushf
xchg
adc
mov
scas
sbb
js
push
and
cdq
push
cdq
cmp
push
add
cmp
arpl
ds
xchg
(bad)
pop
mov
ror
ja
mov
ins
data16
ret
retf
and
loope
mov
xchg
popa
or
out
xchg
call
ds
jg
jae
jl
push
jmp
repz
mov
jne
fnstcw
push
pushf
adc
movs
jecxz
adc
movs
rcl
idiv
je
ret
mov
inc
xchg
js
inc
and
sbb
mov
adc
loopne
jmp
mov
es
lods
or
inc
push
cwde
jle
xor
sub
xchg
fs
inc
jnp
or
dec
shl
push
mov
or
push
adc
cli
adc
mov
mov
imul
test
nop
sbb
jbe
add
test
out
and
xchg
pop
lds
mov
arpl
(bad)
not
xchg
xchg
xchg
mov
repnz
popf
push
sbb
bound
sbb
pop
and
(bad)
pop
mov
test
mov
into
adc
mov
stos
sbb
jmp
sub
mov
xor
mov
sub
loop
mov
call
dec
mov
arpl
add
add
xchg
js
fwait
jmp
fisttp
add
sbb
in
adc
(bad)
adc
shl
mov
sahf
inc
sbb
mov
and
and
in
scas
jb
test
enter
int
xchg
adc
cld
enter
dec
cmp
cmps
arpl
mov
push
sbb
sti
jmp
pop
loopne
pop
daa
jb
call
test
xchg
rcr
add
jecxz
xor
sub
sahf
inc
dec
cmps
cmc
pop
dec
mov
xor
(bad)
scas
mov
dec
xor
adc
(bad)
mov
(bad)
das
push
pop
or
sub
xlat
sub
loope
repz
idiv
jecxz
out
jg
sar
lahf
pop
sbb
pop
cmp
cs
aaa
ins
mov
imul
or
mov
push
mov
add
inc
sti
adc
sub
push
ins
sbb
xor
jae
xor
mov
inc
mov
inc
retf
xchg
add
int3
push
lods
jp
int
jns
jp
jmp
je
xchg
add
dec
cmc
and
dec
jbe
or
add
pop
push
shr
movs
sbb
lds
and
outs
sub
nop
jb
(bad)
adc
adc
or
imul
stos
pop
cdq
xchg
jp
adc
sbb
jle
inc
dec
addr16
stos
loope
adc
pop
ret
or
mov
fidiv
and
jp
sbb
cmp
gs
dec
dec
xchg
add
add
pusha
sbb
jno
push
mov
arpl
push
push
lock
sbb
or
ror
or
mov
fsub
pop
jbe
push
pop
stos
xchg
outs
aaa
retf
gs
xchg
jecxz
addr16
in
xor
retf
inc
cmp
fadd
int3
or
fnstcw
shr
sbb
pusha
adc
and
ja
cmp
sub
in
or
pop
ja
nop
es
sbb
adc
enter
mov
push
(bad)
sbb
cld
pop
dec
aaa
fidiv
mov
loopne
pop
in
push
nop
std
jle
icebp
ror
lahf
or
pop
push
add
and
arpl
and
jge
and
xor
cs
(bad)
dec
mov
xor
mov
cld
adc
mov
(bad)
retf
pop
add
sbb
ins
xchg
jp
add
jl
push
pop
out
(bad)
cs
popf
in
mov
inc
inc
scas
dec
fwait
xor
(bad)
and
adc
or
xor
dec
stos
push
fxch
jne
mov
cli
push
cmc
(bad)
outs
outs
fdiv
ret
xor
mov
or
ins
outs
stos
mov
call
cmp
add
fwait
ds
adc
and
or
rol
add
sbb
xor
dec
rol
popa
sub
mov
and
sahf
adc
pop
dec
add
lods
mov
pop
mov
adc
and
mov
call
std
pop
stos
shl
push
addr16
cmp
xchg
push
retf
outs
rcr
sub
call
out
cwde
and
test
mov
mov
test
mov
call
cmp
popa
jno
mov
pusha
enter
add
aaa
sub
icebp
repnz
ins
jg
pusha
jmp
push
and
lock
xchg
inc
adc
mov
ja
shl
ins
pop
cmc
jbe
cmp
lods
scas
inc
pop
fcmovnbe
imul
loop
jp
jg
cmp
pop
adc
es
movs
push
or
test
jl
imul
mov
bound
lds
lahf
mov
jo
ja
adc
lahf
sbb
ud0
out
add
frstor
inc
stos
mov
or
push
das
retf
adc
mov
dec
cmp
jmp
adc
add
je
arpl
fstp
inc
add
dec
and
(bad)
push
push
xlat
sbb
inc
in
lea
call
and
mov
icebp
cmp
adc
fidiv
sbb
scas
inc
mov
inc
adc
cmps
jo
cmps
mov
xor
enter
and
lods
aaa
jo
or
jmp
inc
or
mov
lds
mov
call
dec
mov
mov
inc
cld
and
mov
test
imul
fs
jno
xchg
and
sbb
fidivr
scas
out
adc
jno
pop
movs
rcl
xchg
inc
add
or
push
xchg
jns
dec
in
mov
add
pop
jne
xor
mov
iret
pop
pop
and
lods
adc
sub
out
xor
call
movs
dec
add
call
xchg
nop
or
ds
stos
jl
pushf
lea
das
dec
jbe
lods
dec
sbb
pop
inc
jbe
jnp
in
into
pop
inc
fsubp
pop
push
push
xor
cld
les
aaa
outs
ja
fild
cld
inc
idiv
ins
clc
pop
push
into
cld
sti
jnp
push
jbe
stos
xor
inc
imul
cmps
dec
mov
xchg
in
pushf
or
and
gs
pop
stos
sub
fadd
xlat
and
push
inc
push
outs
loopne
das
push
retf
lea
push
daa
mov
inc
push
gs
retf
cmp
fsub
imul
sbb
dec
ins
jb
test
cmps
popa
mov
ror
call
fistp
or
jns
test
mov
inc
add
loop
bound
dec
or
dec
shld
sub
add
shl
test
jo
xchg
push
fist
lods
imul
mov
xor
call
push
fimul
mov
bnd
pusha
call
and
sbb
push
loop
sbb
inc
fistp
out
and
add
in
test
fcmovnu
jl
jbe
inc
jmp
aaa
dec
xchg
pop
mov
sbb
sbb
or
pop
jmp
xor
add
ret
aad
fwait
adc
jne
ja
xor
aad
(bad)
mov
comiss
cmc
mov
xchg
test
jmp
hlt
test
leave
xchg
mov
push
scas
pop
ja
sbb
and
push
imul
pushf
fsubr
or
dec
push
mov
idiv
xchg
sub
test
and
sbb
inc
pop
pop
outs
mov
and
retf
fdiv
or
pop
loopne
jns
push
icebp
xor
out
mov
adc
cs
stos
js
pushf
in
fs
pop
(bad)
xlat
lods
in
ja
jmp
pop
rcl
mov
ret
ret
add
or
xchg
jmp
and
inc
ss
push
lods
scas
sub
push
xchg
cmp
into
pop
rol
fstp
loope
dec
cli
mov
pop
popf
sub
or
push
mov
add
outs
xchg
(bad)
retf
push
xchg
add
adc
lods
dec
mov
push
dec
aam
clc
xchg
xor
sbb
lea
stos
mov
or
xor
adc
jae
dec
sbb
call
fldcw
or
leave
sub
(bad)
repz
inc
push
xchg
retf
mov
mov
outs
loope
pop
loope
aaa
jo
fcomi
jns
dec
xchg
(bad)
scas
retf
sar
xor
stos
mov
pop
aad
sbb
xchg
in
cmp
and
arpl
xchg
jecxz
gs
add
fldenv
cmp
jne
dec
mov
imul
cmps
inc
movs
fs
mov
cli
push
cdq
add
int
pop
jb
mov
jp
jnp
clc
popf
pop
lods
dec
jbe
int3
inc
cmp
pop
pusha
aam
mov
call
into
leave
les
inc
or
mov
cmc
fwait
inc
jmp
inc
std
mov
ret
outs
mov
cmp
int3
adc
sub
pop
and
pop
sub
popf
call
test
mov
xchg
add
mov
clc
jb
scas
and
push
out
mov
mov
or
fcmovnu
fldenv
mov
xchg
and
or
fmul
lods
push
mov
fistp
push
jbe
cwde
stos
mov
dec
into
ss
mov
jg
fmul
inc
sbb
xor
xchg
lock
or
mov
fiadd
and
(bad)
(bad)
cdq
int
mov
mov
int3
daa
nop
pop
sub
push
mov
push
add
rcr
pop
inc
push
add
icebp
or
xor
push
cmp
jmp
mov
sti
mov
and
loop
dec
mov
mov
rol
mov
daa
push
(bad)
stc
loope
adc
aad
pop
data16
or
pop
xor
fbld
mov
sbb
mov
imul
cmp
jmp
xchg
arpl
push
mov
loopne
jae
test
xor
addr16
ret
icebp
add
jbe
fistp
push
jl
test
push
jmp
lahf
pop
cmp
ret
loopne
xor
nop
mov
pop
pop
xchg
les
xor
mov
out
push
bound
xor
adc
add
test
cld
movs
repz
in
(bad)
call
dec
int
jl
(bad)
lahf
pop
sahf
cmps
push
rcr
mov
stos
and
dec
pop
loope
stc
push
add
cmp
movs
test
sbb
int3
retf
mov
adc
fistp
mov
jne
(bad)
and
iret
loop
mov
mov
int
adc
adc
cmp
daa
pushf
or
inc
(bad)
push
or
push
test
sbb
je
addr16
loope
pop
icebp
(bad)
in
xor
inc
call
dec
pop
push
xrelease
sub
fs
push
rcl
inc
sub
xchg
adc
adc
inc
xor
mov
mov
and
jmp
sbb
push
gs
les
(bad)
gs
rol
outs
xchg
cmp
pop
in
add
jle
and
arpl
jg
cmps
xor
jecxz
inc
cmps
cmp
cs
xor
data16
xchg
mov
push
cmp
inc
nop
nop
test
ror
adc
imul
dec
sub
jns
dec
sub
xor
test
add
xor
es
inc
xor
mov
adc
mov
and
scas
cli
add
ret
add
call
ds
add
fisubr
test
idiv
dec
xchg
int3
mov
mov
push
push
pop
test
mov
movs
call
dec
or
(bad)
jne
sti
mov
fisub
popa
or
mov
pop
xchg
push
scas
(bad)
cmp
adc
adc
jge
mov
xlat
ficomp
pop
sbb
inc
dec
in
(bad)
hlt
ret
jae
mov
in
mov
fild
lds
gs
enter
fidivr
mov
out
out
fwait
popf
mov
sti
(bad)
fstp
fst
or
ins
dec
jp
sbb
add
push
rcl
fsubr
mov
cmps
je
push
sub
ret
jo
mov
out
mov
ss
jnp
ror
xchg
icebp
cmps
sbb
and
dec
mov
and
(bad)
call
sub
xor
xchg
adc
sub
inc
xchg
and
push
es
push
and
imul
jbe
push
ret
repz
mov
inc
lea
add
push
push
mov
cmp
les
out
mov
outs
mov
repnz
pop
pop
sahf
out
mov
call
rcr
aam
sub
psadbw
imul
mov
(bad)
mov
js
xchg
pop
in
icebp
adc
cmp
pop
mov
shr
mov
stos
jle
xchg
loop
ror
inc
jo
sub
mov
push
cmp
push
test
push
fwait
xor
jmp
das
pushf
jmp
les
lds
lds
mov
xchg
inc
stos
jnp
into
(bad)
cmc
jmp
out
mov
add
dec
popa
lds
push
sbb
adc
xor
xlat
leave
inc
and
scas
es
jmp
f2xm1
dec
es
inc
xchg
jnp
adc
fimul
push
dec
mov
mov
xchg
dec
ins
fild
mov
hlt
repnz
loop
fistp
xchg
mov
retf
fs
inc
dec
mov
jne
sbb
sbb
sbb
push
daa
push
inc
mov
xor
mov
or
push
mov
jbe
cwde
fld
movs
cwde
or
xor
shl
(bad)
movs
xchg
mov
ja
shl
out
mov
repnz
int
cmp
pop
sbb
inc
mov
loopne
sub
push
jp
fwait
test
sbb
sbb
int3
push
add
pop
jmp
stc
dec
jge
pop
fsubr
das
ja
pop
sub
aas
mov
and
lock
(bad)
ins
mov
sbb
adc
test
dec
cli
add
adc
adc
xchg
add
fsubr
gs
mov
clc
jg
pop
sti
fistp
(bad)
dec
repz
das
ja
sahf
lea
rcl
push
sub
int
les
pop
pop
(bad)
out
or
test
xchg
inc
cmps
inc
cmp
dec
cld
dec
adc
push
inc
push
push
pusha
cmc
repz
inc
sbb
mov
ja
daa
push
and
(bad)
xor
xchg
pusha
popf
or
shr
xchg
retf
or
inc
dec
jns
jae
push
pop
imul
xor
nop
cmp
retf
jns
add
movs
adc
pop
sub
cmp
sub
sbb
cmp
inc
cli
inc
sbb
test
push
cmps
add
mov
xchg
(bad)
pop
cs
rol
and
(bad)
dec
push
cmp
mov
push
push
fwait
clc
enter
jle
jge
cmc
pop
push
mov
fdivr
pop
push
sub
inc
cmp
ret
dec
call
pop
jbe
cmp
add
pusha
popa
ret
ror
sub
aad
imul
data16
test
dec
or
sub
(bad)
cmc
and
cli
hlt
jae
push
inc
loopne
pop
cmps
(bad)
push
jae
push
add
push
push
pop
(bad)
aam
ss
mov
cmps
adc
imul
mov
dec
aam
ins
ins
fidiv
(bad)
pop
(bad)
pop
jmp
xor
(bad)
scas
mov
ds
and
xor
pop
movs
and
fcom
fwait
xor
push
mov
out
or
push
cmp
jmp
dec
ficomp
push
je
nop
fld
clc
inc
sbb
ret
sub
outs
stos
pop
jmp
(bad)
rcl
jnp
pop
addr16
jbe
pop
inc
(bad)
in
or
dec
sbb
int3
setnp
and
sbb
xchg
mov
sbb
inc
xlat
push
lods
popa
adc
outs
jo
adc
mov
add
pop
shl
lods
lods
data16
push
lea
push
fcomp
outs
scas
(bad)
out
mov
mov
mov
(bad)
or
push
test
fcomp
push
nop
mov
in
add
push
push
mov
pop
pushf
leave
and
add
pop
mov
dec
scas
pop
test
mov
clc
loope
je
pushf
mov
sbb
loope
sub
adc
mov
arpl
mov
inc
sbb
mov
push
pop
retf
adc
test
pop
xor
shl
cwde
mov
pop
test
lea
inc
pop
mov
mov
xchg
add
or
lock
call
push
push
mov
in
out
push
sbb
outs
adc
push
xchg
(bad)
bound
cwde
adc
es
inc
inc
imul
mov
or
dec
jnp
int
cmp
xor
in
rcr
outs
push
cmp
xor
add
cmp
dec
scas
dec
push
ss
and
lods
pop
mov
repz
xor
iret
mov
pop
rcr
jmp
xchg
icebp
arpl
xchg
(bad)
enter
add
mov
bound
fild
into
xchg
adc
dec
add
mov
mov
sub
adc
pop
jnp
das
adc
cmp
sbb
cs
leave
push
xor
not
outs
push
out
inc
jle
pop
(bad)
cld
push
lea
fs
in
or
cmc
mov
and
jae
add
ins
inc
les
in
sbb
mov
adc
cwde
push
dec
or
jbe
in
fwait
mov
pop
in
cs
jno
pop
jb
retf
adc
cmp
or
out
call
stc
ficomp
retf
in
xor
lahf
push
bound
addr16
add
and
jge
sbb
and
xchg
mov
sti
mov
rol
pop
mov
xchg
bound
mov
cmp
dec
cmp
hlt
in
xchg
jle
xor
ret
or
ret
je
(bad)
cmps
ja
int3
out
push
fdiv
push
mov
out
mov
mov
cmp
mov
jnp
or
test
xor
rcl
repz
push
mov
add
mov
and
or
jne
xor
cmps
neg
sbb
mov
lods
ds
lods
xchg
sub
xor
jae
adc
push
das
leave
into
shl
jnp
inc
cdq
xor
mov
es
test
ds
cmp
and
test
fistp
xchg
data16
in
pop
enter
sbb
add
sbb
jne
clc
and
or
and
rcl
and
in
sub
(bad)
sub
(bad)
xor
int
mov
xor
pop
jmp
fs
add
adc
in
(bad)
cmp
lds
mov
ficom
dec
pop
int3
xchg
fistp
jg
mov
test
fsubr
xchg
test
adc
mov
jns
add
sub
movs
adc
push
push
or
retf
xchg
retf
sub
outs
stos
and
jmp
jne
sbb
or
addr16
jl
int
dec
and
fsub
int3
jns
or
cmp
jne
mov
pop
cmps
in
cli
push
mov
ficom
test
mov
mov
data16
loopne
out
lea
push
xor
pop
sub
mov
bound
outs
int
sbb
loopne
sbb
push
test
inc
bound
pop
or
data16
loop
inc
loopne
call
jo
mov
jae
and
lods
add
out
in
pop
dec
push
mov
inc
jbe
dec
shr
out
fidivr
mov
fmul
ins
or
rep
sub
push
mov
sahf
push
and
clc
hlt
jle
cs
and
xor
int3
or
loope
jp
jnp
fisubr
scas
dec
fisubr
and
fdivrp
pusha
xor
scas
inc
daa
ds
xchg
push
push
mov
mov
sub
mov
or
daa
or
jmp
xor
add
jl
add
or
dec
jb
ficom
jmp
out
sub
cmp
or
push
dec
mov
scas
xchg
dec
fisttp
leave
add
rcr
or
xor
cdq
jle
and
mov
xor
fs
mul
dec
retf
jl
xchg
cmp
sahf
call
sub
mov
cmp
inc
fstp
std
movs
outs
mov
clc
jmpw
test
push
mov
sti
std
dec
pop
cwde
mov
mov
mov
sbb
sub
and
retf
xchg
mov
cmp
aas
dec
test
add
aam
fistp
dec
sub
cmp
sar
icebp
add
xchg
pushf
adc
add
inc
aam
nop
or
movs
gs
pop
or
int3
mov
and
mov
xchg
in
lock
adc
and
scas
sbb
lock
mov
mov
pop
push
mov
retf
in
xor
add
pop
test
dec
outs
add
mov
or
add
add
sub
test
push
test
pop
leave
js
gs
test
push
xchg
mov
lods
int
jge
push
mov
adc
pop
(bad)
sub
imul
cmp
xchg
mov
or
retf
rcl
mov
scas
add
gs
outs
push
push
(bad)
cmps
inc
cdq
xor
aas
mov
test
stc
sub
sbb
jle
int
sub
lock
mov
call
mov
stc
out
test
stos
pop
(bad)
(bad)
adc
push
cmp
mov
es
xor
imul
loop
shr
or
cmp
mov
popf
push
sbb
adc
pushf
clc
pop
mov
icebp
test
loop
and
daa
fstp
dec
das
xchg
jnp
test
push
int3
cld
in
push
mov
imul
push
test
out
cmp
out
scas
pushf
jmp
in
adc
jbe
xchg
dec
adc
or
xor
in
xor
rol
or
mov
test
mov
lea
and
jb
adc
or
sub
inc
fld
ret
push
dec
outs
xor
movs
jno
add
and
outs
mov
inc
sbb
add
call
aas
jo
xchg
fimul
aam
adc
pop
sbb
mov
add
inc
jb
std
leave
xor
cmps
sahf
jne
jbe
dec
cmp
sub
sbb
pop
mov
push
pop
mov
dec
jne
mov
cmc
adc
stos
ret
ret
push
imul
hlt
cs
test
movs
jecxz
mov
dec
(bad)
jg
mov
leave
and
inc
fistp
push
jle
scas
icebp
icebp
dec
call
repnz
lock
sub
sbb
out
call
push
inc
dec
lods
(bad)
add
sub
push
and
ret
ret
cmp
in
mov
clc
(bad)
call
scas
mov
mov
xor
push
stos
jnp
daa
jo
lock
xor
ins
mov
fimul
jl
mov
hlt
push
xchg
stos
and
push
out
test
push
clc
fdiv
fisttp
scas
aam
outs
(bad)
mov
imul
pop
xor
pop
leave
and
lea
shr
xor
mov
jbe
mov
sub
retf
mov
mov
inc
sbb
repnz
mov
leave
jp
or
jle
stos
in
mov
int
sub
out
stos
pop
imul
fisttp
and
test
ror
shl
cli
popa
retf
aas
mov
ret
scas
ins
fdiv
enter
cmp
mov
or
out
xchg
cmp
pop
inc
xchg
cmp
and
push
pop
rol
sbb
adc
and
inc
mov
(bad)
pushf
xchg
or
pop
jmp
int3
add
inc
icebp
jbe
push
test
mov
dec
mov
xchg
sahf
out
adc
outs
ror
dec
xor
add
cld
xlat
xchg
fstp
imul
fld
js
push
jp
cmp
push
scas
jb
dec
xor
in
movs
bound
xor
mov
sub
out
xchg
jl
sar
mov
adc
inc
xchg
cmp
mov
(bad)
mov
mov
jns
icebp
jmp
ret
movd
mov
in
in
sbb
xchg
das
mov
test
add
mov
cwde
ret
add
scas
push
sub
xchg
stos
retf
mov
cld
cmps
int3
out
aad
dec
dec
sbb
dec
popa
sbb
jge
sub
daa
inc
xchg
adc
inc
inc
dec
push
rcl
ficom
xchg
bound
mov
jb
or
adc
rol
sub
cmp
mov
sub
ins
iret
ss
movs
or
sbb
test
(bad)
gs
addr16
sbb
cwde
sbb
std
push
add
mov
cmp
add
stos
push
or
pop
jno
int3
xchg
fdiv
pop
xchg
icebp
ins
push
dec
out
or
add
pop
sub
cdq
imul
jns
mov
and
ds
xchg
xor
add
sub
inc
ja
fimul
or
cwde
(bad)
ficom
icebp
popf
imul
jo
pop
push
pop
dec
test
mov
cmp
jno
mov
sbb
cmp
lock
test
sbb
(bad)
jmp
inc
aas
mov
jmp
push
add
mov
adc
add
xor
pop
pop
adc
jno
sti
(bad)
mov
mov
fld
pop
sub
dec
dec
and
inc
cdq
mov
(bad)
xor
and
dec
out
mov
or
adc
and
fsub
pop
imul
jb
icebp
mov
ret
idiv
mov
cld
test
lahf
(bad)
jg
xor
sub
cs
jp
jl
aam
cs
out
popa
into
dec
lock
popa
outs
and
mov
aam
dec
nop
inc
add
push
inc
sahf
ret
cmps
inc
shl
bound
iret
out
adc
jmp
lds
mov
and
ins
(bad)
jno
(bad)
mov
pop
jb
test
push
inc
mov
sahf
dec
rcr
pop
test
xor
sub
pop
stos
or
or
xor
add
xchg
nop
add
enter
(bad)
in
pop
mov
and
stos
outs
jnp
int
imul
das
mov
adc
test
and
out
sar
scas
cli
into
dec
repz
test
push
ret
pop
(bad)
popf
scas
sti
jp
jns
call
sub
mov
xlat
imul
mov
cmps
or
retf
push
in
adc
adc
cmp
sub
mov
leave
jns
pop
mov
inc
jbe
cmp
arpl
outs
push
das
ins
ins
mov
pushf
lea
sbb
mov
test
mov
mov
icebp
jp
int
xchg
(bad)
xor
push
repnz
scas
xchg
add
(bad)
adc
test
pop
or
lods
fild
jle
jmp
js
ja
mov
cmc
adc
repz
xor
icebp
test
jo
jbe
mov
mov
call
add
mov
mov
retf
adc
dec
mov
mov
dec
pop
(bad)
xor
popf
mov
fs
ja
push
jecxz
push
cmps
bound
dec
enter
call
hlt
scas
mov
pop
int3
ja
lods
fxch
mov
mov
push
push
cdq
repnz
lods
fs
out
fadd
mov
scas
mov
sti
add
mov
mov
or
bound
lahf
int
(bad)
sub
fmul
mov
pop
add
mov
xor
imul
cmp
xchg
add
or
test
test
sar
into
sti
pop
push
popf
stos
fwait
loope
sbb
scas
cmp
(bad)
push
mov
dec
aad
addr16
push
pop
jge
add
pusha
push
jo
popf
lods
call
(bad)
jbe
mov
in
imul
scas
xlat
ds
in
sub
cmp
mov
pop
jnp
sub
and
ja
xor
or
xchg
dec
inc
and
xchg
je
test
es
inc
push
xchg
adc
pop
or
cmp
jle
or
cli
sbb
jne
xlat
jmp
ds
add
mov
mov
xor
pusha
mov
fcomp
pop
fisubr
into
add
mov
jl
push
(bad)
sbb
and
inc
stos
push
popf
(bad)
pusha
lea
xor
mov
mov
shr
vmovntps
mov
and
jb
cdq
mov
adc
(bad)
adc
mov
sub
stos
jbe
test
lods
pop
out
cmc
mov
pop
push
sbb
jno
pop
fstp
push
adc
fcom
xor
dec
lods
xor
ins
inc
xor
xchg
mov
sub
mov
push
retf
xor
fisub
leave
sub
pop
imul
dec
(bad)
(bad)
push
loope
int3
scas
fwait
sub
mov
sti
pop
(bad)
jl
out
mov
leave
popf
lock
in
sub
dec
mov
popa
mov
into
add
out
popa
aad
push
int
fld
fwait
rcr
inc
mov
les
mov
sub
imul
xor
dec
xchg
adc
or
sub
mov
fisubr
popf
inc
or
stc
popa
sbb
stc
xlat
fidivr
mov
mov
mov
sub
pop
sub
and
movs
stos
fstp
rol
std
loopne
sub
sub
add
add
mov
lock
in
loopne
jne
jp
or
fstp
sub
cmps
pop
mov
mul
(bad)
jmp
pusha
sbb
in
loop
xchg
in
add
and
(bad)
mov
daa
pushf
cmps
sbb
add
jmp
push
mov
into
or
ins
and
xchg
nop
call
rcl
retf
mov
inc
sahf
mov
mov
sbb
out
das
push
outs
xchg
adc
pop
pop
retf
data16
jl
stos
pop
and
jle
mov
test
ror
mov
cmps
sub
(bad)
xchg
imul
int3
lods
call
repz
sub
jne
stos
retf
sti
mov
movs
sub
and
xchg
test
mov
dec
jecxz
or
sbb
aaa
dec
adc
sub
ret
sub
inc
clc
mov
and
add
push
adc
sbb
out
and
dec
sbb
sbb
sub
add
or
rcr
fwait
jl
jp
popf
fcom
push
das
dec
fmul
mov
sub
jb
adc
in
inc
and
aaa
push
mov
sbb
or
leave
pop
lds
mov
arpl
xor
je
dec
push
push
cli
test
inc
int
(bad)
mov
les
ret
mov
ret
inc
loope
call
mov
ss
mov
or
fwait
pop
aaa
outs
push
lods
sub
cmps
push
into
adc
and
mov
mov
jle
popa
push
push
(bad)
cli
loope
push
mov
or
cwde
mov
ret
aas
jnp
stos
mov
sub
fiadd
test
sub
std
or
sbb
or
repz
pop
fcmovnb
xchg
cdq
mov
xchg
mov
xlat
push
hlt
push
scas
shl
nop
mov
out
retf
leave
cmp
cmp
xchg
(bad)
cmps
movs
lahf
retf
out
jge
shr
frstor
inc
add
stos
pop
imul
jge
outs
dec
cli
adc
dec
jns
dec
push
mov
mov
cli
call
out
pop
out
retf
push
jo
push
or
not
adc
mov
arpl
pop
scas
adc
mov
xlat
das
mov
mov
mov
loop
mov
jl
mov
cmps
aaa
mov
(bad)
fstp
mov
call
fiadd
add
shl
mov
ins
sbb
repnz
mov
mov
add
daa
sub
xchg
inc
cmp
std
adc
gs
push
push
adc
push
mov
or
stc
xchg
xor
dec
out
pavgb
cwde
mov
dec
dec
push
mov
outs
movs
inc
ins
jmp
ins
(bad)
aaa
sti
jo
loop
daa
mov
sub
imul
jbe
push
xor
jge
jl
and
(bad)
add
aam
pop
jbe
mov
sub
ss
scas
dec
loop
fisub
push
pusha
sbb
mov
dec
push
fs
ss
dec
add
sub
movs
pop
mov
and
(bad)
and
adc
pop
stos
dec
scas
mov
clc
scas
movs
imul
sub
and
push
push
lds
aam
and
or
cs
push
aaa
cmp
les
or
xchg
cs
rcr
out
into
sub
mov
jge
xchg
stc
jmp
xchg
clc
neg
scas
in
test
aas
clc
test
pop
stos
fild
popf
cmp
es
or
pushf
stos
push
dec
test
mov
stos
idiv
sbb
sub
mov
or
push
sbb
jecxz
stos
cmp
jb
cmp
sbb
xor
adc
test
push
(bad)
mov
inc
out
int3
add
pop
out
aaa
jle
dec
std
lahf
fisubr
mov
sub
and
ror
test
pop
mul
mov
pop
retf
add
in
ins
inc
cdq
adc
xor
dec
psadbw
mov
mov
mov
jle
int3
out
and
xor
leave
xor
jno
loope
sbb
and
add
jnp
sub
dec
or
repnz
xchg
cmp
shl
lea
jecxz
(bad)
cmp
inc
sbb
mov
out
push
xchg
sbb
inc
xor
jo
inc
push
inc
push
test
sbb
jle
mov
cmps
dec
in
xor
xchg
pmaddwd
xchg
mov
inc
movs
or
pop
ror
pop
call
mov
adc
pop
cmp
mov
or
mov
das
ja
mov
lods
in
cmp
movs
dec
(bad)
fwait
outs
iret
adc
popf
ret
loope
mov
mov
xlat
stos
fsubrp
data16
popa
mov
data16
ret
jl
sub
retf
sbb
dec
cmp
lds
add
jmp
outs
iret
repz
popa
add
rep
push
sub
arpl
shl
push
xor
loopne
lds
loop
jp
ins
in
pop
jg
imul
pop
cdq
(bad)
mov
aam
inc
sub
repnz
int3
in
sub
sub
push
int3
loope
xchg
jmp
dec
sbb
fisttp
cs
mov
imul
sar
sbb
pop
mov
push
mov
xchg
pcmpgtd
mov
ins
lods
test
sub
xchg
push
pop
jmp
fld
es
out
cmp
xchg
call
push
nop
or
sub
sub
pop
or
xchg
imul
ds
xor
bound
and
mov
mov
pop
sub
popa
sbb
push
push
sub
xchg
test
addr16
mov
(bad)
sbb
bswap
scas
mov
idiv
inc
push
rcl
frstor
les
sub
mov
retf
arpl
add
or
jns
jb
movs
into
mov
cdq
ror
int
data16
xor
int3
(bad)
xchg
pop
cli
mov
outs
and
push
inc
icebp
push
sub
jg
add
mov
xchg
aaa
cli
mov
mov
clc
mov
out
inc
in
test
cmps
ficomp
out
pop
fsubr
mov
rcr
(bad)
nop
xor
cmps
inc
cdq
sbb
enter
mov
jns
pop
(bad)
push
lods
jnp
mov
cs
mov
jmp
out
out
pop
sahf
stc
clc
(bad)
cld
cmps
mov
sub
hlt
aad
xchg
(bad)
iret
stc
pop
mov
mov
mov
xchg
je
mov
cmp
xchg
es
in
inc
dec
mov
ins
xor
cmp
xchg
push
jp
dec
ss
shl
cmp
sub
leave
ins
pusha
add
fld
lea
sub
outs
mov
fyl2xp1
jbe
push
xchg
and
leave
xor
push
cs
xchg
xchg
push
arpl
pop
dec
pusha
mov
daa
(bad)
fisub
cwde
cli
fadd
stos
xchg
jecxz
mov
jmp
ins
fdivp
pop
jmp
push
aad
sub
xor
xchg
adc
dec
xor
pop
movs
mov
sub
rcr
(bad)
mov
or
pop
test
jbe
inc
push
mov
or
fwait
mov
add
inc
nop
nop
mov
jmp
ret
push
push
ins
push
mov
mov
jmp
fisubr
outs
inc
popf
repz
push
pop
out
push
xor
jecxz
sbb
xchg
addr16
xor
sub
lock
push
mov
sub
mov
mov
xchg
(bad)
fiadd
scas
in
xlat
jle
and
neg
in
jno
sar
sti
add
inc
push
cmp
mov
inc
stc
xlat
mov
add
adc
cmp
sahf
push
add
inc
mov
stc
sbb
icebp
sub
cli
ret
inc
not
pusha
pushf
cmps
push
mov
fidiv
shl
(bad)
out
(bad)
mov
stc
arpl
pop
xor
mov
sbb
or
fwait
or
scas
xchg
clc
dec
call
xor
pop
mov
out
mov
or
and
in
xchg
out
hlt
xchg
sbb
inc
cdq
push
cs
push
inc
stos
dec
movs
mov
test
adc
out
push
sub
ins
(bad)
nop
sbb
sar
fbld
call
stc
mov
sbb
nop
(bad)
imul
daa
fs
inc
dec
or
add
or
add
les
mov
and
push
push
imul
xchg
xlat
mov
xlat
inc
popf
dec
mov
or
and
sahf
xchg
out
shl
sbb
jnp
nop
loop
mov
loop
pusha
outs
out
mov
mov
out
mul
cmp
(bad)
xor
xchg
jnp
in
ins
in
push
sub
sub
adc
sbb
sub
dec
neg
mov
mov
and
js
push
mov
and
add
sub
dec
fstp
cmp
aaa
adc
pcmpgtw
sub
es
mov
xchg
jne
loope
sti
dec
popf
mov
mov
push
repnz
xchg
jp
xor
dec
movs
jmp
imul
das
push
adc
mov
adc
data16
mov
jne
jp
sub
test
jno
leave
jp
push
mov
and
adc
xchg
mov
mov
lock
pop
or
test
jge
and
jmp
push
out
test
pop
dec
xchg
push
mov
dec
popa
data16
(bad)
rcl
fs
xor
mov
sub
mov
lea
leave
push
cmp
xchg
rol
push
out
mov
pushf
iret
pop
jnp
jmp
mov
sub
inc
in
imul
fdiv
bndstx
cmp
imul
push
rcl
ret
and
ins
repnz
icebp
cli
test
stc
(bad)
loopne
(bad)
push
xchg
(bad)
cld
leave
xchg
add
aas
ss
out
mov
pop
je
dec
mov
inc
fimul
imul
popf
mov
rcl
xor
sub
aad
cld
cdq
aam
xchg
ret
rol
aas
jp
std
in
mov
mov
sub
jecxz
je
imul
in
cmp
or
inc
xor
call
stc
pop
hlt
loop
loope
mov
jmp
idiv
ds
lock
in
(bad)
mov
mov
fsubp
xor
xchg
and
add
and
sub
mov
adc
dec
sbb
movs
mov
or
ret
pusha
fbld
add
call
loope
fwait
jae
mov
push
call
ins
pslld
push
das
aad
stos
inc
popa
outs
dec
cmp
xor
pop
ss
mov
packsswb
std
mov
fldcw
dec
repnz
sbb
inc
xchg
mov
int3
mov
mov
lods
and
xchg
mov
dec
movs
movs
xor
mov
stos
cmc
ret
jo
sub
dec
adc
xchg
mov
dec
outs
cmp
inc
stos
and
mov
pop
sbb
ds
push
call
mov
scas
mov
xchg
jmp
outs
dec
popf
fst
mov
dec
call
add
mov
imul
in
fsub
movs
mov
fistp
int
fstp
mov
xchg
pop
(bad)
cld
lea
push
in
fbstp
cld
popf
test
inc
cmps
clc
fld
sub
lock
out
out
pop
pop
(bad)
jecxz
pop
stos
jp
push
rcr
inc
sub
loopne
sbb
cmp
jle
push
movs
(bad)
sbb
inc
icebp
and
ds
or
frstor
sbb
aad
fwait
lods
cld
outs
pop
lahf
std
fucomp
lods
fistp
repz
pop
(bad)
inc
mov
xlat
lods
mov
stos
fs
mov
fild
es
dec
add
jno
bound
clc
push
lea
lods
bound
(bad)
and
int
dec
jge
sub
push
inc
and
rcl
adc
gs
mov
inc
cmps
leave
lahf
fsub
stos
mov
les
push
push
xor
test
mov
xchg
push
push
mov
popa
cmp
test
or
int
add
mov
fstp
push
int
add
or
jg
sub
lods
inc
dec
outs
sub
fisub
dec
lods
sbb
mov
jge
stos
adc
xchg
shl
sub
ss
movs
ins
mov
in
xchg
mov
or
mov
sti
int
lods
or
sub
stc
xor
pop
push
or
mov
push
adc
xchg
hlt
and
test
jp
sub
call
lea
pop
inc
out
mov
cmps
mov
popf
adc
pop
pop
mov
push
dec
pop
aaa
push
xor
lds
loopne
test
int3
sub
push
test
gs
and
dec
std
mov
pop
adc
aam
ret
inc
push
int
pop
retf
adc
lea
hlt
js
xchg
cmp
in
(bad)
stos
(bad)
out
xchg
add
das
inc
repnz
pop
scas
push
in
mov
das
xor
pop
or
scas
push
pop
fucomi
mov
jl
cli
mov
jmp
pop
xor
dec
(bad)
or
loopne
fcom
in
xchg
pop
or
mov
pop
push
mov
mov
outs
inc
adc
js
popf
inc
push
inc
sub
test
inc
test
loopne
cmps
dec
jno
stc
add
shl
bound
and
arpl
mov
loopne
fcom
jnp
mov
les
call
jbe
mov
mov
jb
(bad)
out
mov
mov
inc
cmc
lods
jnp
outs
mov
pop
push
mov
(bad)
cs
icebp
pusha
loope
jae
mov
adc
fsub
jle
fmul
data16
not
push
(bad)
fstp
xor
int
or
sahf
or
xchg
inc
dec
sub
inc
push
or
test
(bad)
outs
dec
push
repnz
cmovae
enter
add
in
xor
icebp
movs
out
out
movsx
mov
rcr
sbb
sbb
repnz
push
sub
mov
dec
mov
rcl
idiv
ss
sub
jmp
jnp
jbe
xchg
xchg
repnz
push
or
in
xlat
pop
mov
icebp
cld
xchg
jge
cmc
retf
int
stos
dec
jbe
mov
mov
cmps
mov
and
inc
jecxz
mov
aam
push
cmp
sub
sbb
xchg
div
push
dec
cdq
dec
dec
push
push
cld
inc
mov
xor
enter
call
ins
or
mov
cmp
sahf
fistp
fcomp
stos
jle
adc
loope
rcr
inc
sub
aam
bnd
cmp
ret
lds
adc
aas
enter
(bad)
daa
mov
mov
jg
jne
sbb
xor
pop
stos
adc
xor
add
(bad)
sub
pushf
repz
sbb
xor
jo
je
adc
pop
or
retf
xchg
mov
mul
cmp
pop
aad
dec
les
movs
dec
cmp
jl
pop
fisub
cmc
ds
push
adc
mov
jb
hlt
jg
cmp
lea
dec
cmps
sti
push
das
push
mov
jecxz
and
test
out
inc
imul
or
fistp
loope
ins
(bad)
mov
test
int3
dec
adc
pop
sub
pop
sub
ds
gs
mov
pop
mov
jns
mov
mov
mov
std
(bad)
or
fwait
pop
ret
(bad)
out
xchg
jmp
aad
ja
repnz
and
mov
mov
jg
xchg
jno
in
or
retf
adc
call
sbb
xor
pop
add
sbb
xor
sbb
or
sbb
sub
pop
mov
leave
mov
cmc
xor
cmps
xchg
pop
xchg
fmulp
adc
add
loope
mov
(bad)
or
pop
mov
daa
inc
ror
sub
cmp
sahf
test
movs
or
xor
and
add
mov
dec
pop
dec
sub
add
sub
dec
inc
inc
mov
bound
js
mov
lds
cmp
(bad)
leave
push
dec
and
mov
ret
jns
shl
xlat
pop
sbb
es
ja
push
aad
imul
das
bound
xchg
hlt
ret
xor
call
pop
aas
leave
xchg
retf
mov
jns
(bad)
sti
shl
xor
test
js
inc
sbb
pop
dec
bound
sti
xor
stc
push
repnz
dec
out
mov
sub
fcmovne
xchg
push
repz
pop
mov
clc
hlt
jae
jmp
and
lahf
hlt
test
adc
lahf
scas
ret
fnsave
out
das
xor
addr16
ja
hlt
push
(bad)
test
fwait
pop
mov
das
add
pop
test
mov
gs
jnp
clc
cmp
cs
xlat
fst
add
pop
pop
inc
repz
bnd
ficom
fsub
mov
push
push
or
cmps
sbb
aam
inc
xchg
sbb
adc
cmp
sbb
cdq
cmp
jo
inc
gs
jb
inc
jl
push
and
jne
ret
mov
sbb
jo
sbb
cmp
repnz
mov
fild
ins
lea
adc
std
in
lods
xor
pop
jnp
cld
aad
(bad)
xlat
test
sahf
jnp
mov
mov
fwait
test
ret
popf
ret
fcmovb
push
xchg
sub
lahf
add
mov
hlt
test
dec
ret
jae
ret
test
sar
sbb
test
adc
in
sbb
jmp
cmp
push
repz
stos
lahf
(bad)
mov
movs
stos
jmp
les
jl
int3
add
sub
cmp
and
push
arpl
mov
popa
stos
test
sbb
das
sbb
out
in
aad
scas
jns
add
fstp
fdiv
imul
into
fstp
out
mov
aad
popf
stc
sbb
add
dec
sbb
sub
fs
outs
or
fldcw
jmp
sbb
jae
mul
dec
jge
push
mov
pop
retf
retf
mov
xchg
cmps
std
add
pop
xor
inc
cmps
fnstcw
(bad)
dec
call
fld
js
(bad)
in
out
mov
das
pop
sbb
(bad)
fstp
sbb
xor
mov
rcr
repnz
mov
xchg
mov
les
inc
xor
and
adc
push
xor
mov
stc
sar
inc
ror
inc
adc
cs
outs
push
sub
pop
ror
adc
sub
inc
or
xor
pop
lods
push
aaa
adc
inc
push
pusha
sub
or
or
push
outs
push
push
(bad)
jns
jnp
or
test
ficom
jp
and
sbb
push
mov
js
out
or
mov
mov
pop
pushf
retf
(bad)
repnz
repz
jnp
aas
jg
stc
fimul
sub
into
std
xchg
out
add
test
jb
push
hlt
(bad)
fidivr
iret
div
daa
inc
jg
jo
mov
xchg
stc
push
pop
sbb
xor
and
xchg
inc
rcl
in
clc
out
aad
sbb
push
out
inc
(bad)
fistp
(bad)
jg
sub
cs
pop
sbb
(bad)
in
das
outs
neg
push
sub
retf
cmp
mov
jae
in
cli
mov
pushf
sub
jbe
cmp
mov
into
xor
sar
dec
sub
add
rcl
out
mov
(bad)
leave
nop
sbb
or
and
sbb
ins
sbb
shl
cs
es
or
arpl
push
jecxz
xchg
dec
dec
xor
sti
mov
shr
gs
sub
out
mov
sti
sbb
sbb
jl
sbb
mov
xor
sub
jecxz
jecxz
sbb
add
loopne
lods
in
mov
push
push
sbb
push
or
and
adc
and
pop
cdq
mov
and
loope
push
sbb
clc
(bad)
dec
sub
push
or
sbb
arpl
out
push
inc
and
(bad)
data16
inc
mov
or
fwait
jmp
jae
bound
test
adc
stos
mov
push
mov
jae
fild
sub
dec
(bad)
mov
test
sub
mov
xchg
(bad)
mov
daa
aaa
inc
in
(bad)
pop
push
jp
sub
cmp
and
sub
cmps
es
adc
pop
jmp
pop
ds
jp
jnp
mov
rol
loope
sti
repnz
aad
shl
fild
outs
(bad)
jecxz
xchg
inc
xor
inc
sbb
adc
inc
push
and
fsubr
mov
jl
pop
mov
js
xlat
bound
xchg
cwde
bound
sub
sub
mov
ja
and
mov
pop
out
cmc
loope
xor
sbb
repnz
es
jne
(bad)
mov
add
push
mov
add
cs
mov
loope
xor
(bad)
xchg
retf
jnp
jno
jne
movs
jno
std
jecxz
jno
(bad)
inc
pop
push
and
dec
fwait
mov
add
dec
(bad)
adc
enter
fisubr
and
mov
arpl
pop
test
jl
shl
imul
cli
mov
lods
mov
mov
xor
lock
jmp
jae
fld
int3
dec
je
push
std
sub
mov
xor
mov
xor
fwait
push
ror
mov
fcom
ss
popf
sub
imul
hlt
outs
pop
popf
mov
push
cmp
fs
sub
arpl
adc
and
pusha
push
dec
jo
popa
dec
mov
enter
mov
in
jle
or
sbb
xchg
bound
cmps
mov
add
mov
sbb
sbb
into
cli
pusha
test
lahf
cmovns
pop
xor
mov
or
fdiv
div
inc
lahf
pop
mov
cwde
or
push
rcr
test
dec
push
retf
mov
xchg
cdq
sbb
xor
int
xor
and
pop
push
adc
jbe
and
in
inc
sub
cmp
push
jae
leave
rcl
(bad)
ror
or
fnstenvw
pop
jmp
jnp
scas
ins
mov
std
mov
cdq
fidivr
daa
pusha
push
xlat
mov
test
retf
mov
out
test
xchg
mov
jp
lock
xlat
pop
mov
data16
jp
jge
jmp
xor
jg
pop
(bad)
shl
sar
mov
dec
in
xor
adc
cli
pop
pop
push
inc
push
xor
gs
lods
test
pop
outs
mov
xor
repz
(bad)
cmc
dec
std
jg
jmp
retf
fld
xchg
ja
pop
pop
repnz
shl
imul
inc
fisttp
lods
pop
and
adc
dec
repnz
pop
aaa
retf
mov
push
mov
inc
shr
es
or
je
lods
cwde
inc
xchg
lock
arpl
call
add
lahf
mov
ret
rol
(bad)
or
or
cmp
jmp
data16
push
mov
mov
xor
ficom
rol
cmp
(bad)
and
pop
arpl
inc
es
inc
adc
and
sbb
pop
xchg
stc
sbb
lods
arpl
jle
cmps
and
je
pop
scas
xchg
adc
jbe
push
inc
fmul
sbb
xchg
jmp
(bad)
movs
push
xchg
mov
aam
push
cmp
sbb
sub
adc
jecxz
mov
add
adc
cmps
inc
xchg
inc
cdq
ret
mov
inc
pop
rol
(bad)
jne
jns
(bad)
dec
nop
das
dec
outs
mov
xor
or
stos
sti
inc
adc
(bad)
mov
xchg
test
push
(bad)
inc
int3
add
iret
lds
jecxz
ja
popf
inc
jns
out
int3
xchg
xor
mov
push
out
fsub
or
pushf
inc
push
or
xor
jns
movs
in
(bad)
cmp
cmp
out
out
(bad)
lock
xchg
aaa
cs
pop
fimul
pop
scas
mov
scas
ss
pop
mov
in
cmp
mov
test
js
out
jae
inc
cs
fwait
in
mov
imul
xor
xor
mov
leave
push
iret
(bad)
push
and
stc
clc
xor
mov
mov
xchg
push
jne
pop
test
sbb
out
inc
xchg
mov
or
out
scas
addr16
scas
xor
push
xor
test
loopne
icebp
in
in
xchg
jmp
fwait
dec
mov
adc
lock
mov
or
inc
pusha
xchg
or
sbb
add
push
cwde
add
inc
mov
in
retf
add
lock
out
cmps
(bad)
call
sahf
push
fnstenv
cs
out
jl
mov
shr
xor
inc
jb
in
mov
pop
pop
sub
lods
(bad)
mov
inc
mov
scas
pushf
scas
mov
push
mov
hlt
jae
pop
ins
stos
add
dec
sub
das
dec
jp
xor
daa
mov
(bad)
adc
add
test
xor
mov
test
cmp
(bad)
aad
ret
xor
das
adc
sbb
shl
int3
hlt
ret
(bad)
fidivr
inc
adc
pusha
pop
push
jae
pop
adc
jge
pop
inc
gs
push
dec
or
mov
adc
inc
loope
cli
jbe
cwde
cmp
gs
pop
daa
pop
adc
mov
into
call
add
mov
fdiv
sbb
bnd
sub
xor
js
and
jge
(bad)
lods
pcmpgtw
movs
jl
xor
push
sub
dec
or
sub
adc
in
outs
xchg
fsubr
xor
pop
inc
lods
or
ret
int
mov
test
xor
ins
pushf
(bad)
out
xchg
or
aam
outs
mov
sub
mov
inc
lahf
cli
data16
arpl
sbb
inc
cs
cmp
and
mov
cmc
cmp
dec
xchg
stos
(bad)
imul
cld
jecxz
test
pop
sub
lods
imul
xor
stc
pop
pop
out
mov
jecxz
lds
stos
std
(bad)
xor
rcr
fwait
loope
mov
cmps
movs
sub
inc
scas
dec
mov
cmp
aaa
dec
or
(bad)
pop
repnz
cdq
sub
mov
int3
outs
out
add
ja
inc
aas
mov
or
sti
mov
adc
sub
mov
xchg
push
xor
and
pop
xor
xor
sub
xor
mov
(bad)
sub
call
or
xchg
call
mov
(bad)
shl
lds
jge
retf
or
ss
in
add
call
xor
mov
mov
ret
jbe
dec
jbe
(bad)
(bad)
vpsrld
sbb
cmp
jmp
adc
inc
sbb
cmc
xchg
xchg
xor
jnp
test
mov
jge
jo
push
stos
push
sub
stos
sub
pop
clc
iret
mov
jo
cli
sub
ret
jmp
xchg
add
arpl
jecxz
int
xchg
xchg
(bad)
jecxz
xchg
xchg
mov
sbb
pop
lods
icebp
mov
jb
sti
dec
loop
shl
mov
inc
sub
inc
and
repnz
loopne
push
loope
cmp
shl
aas
mov
stos
jl
out
sahf
mov
mov
das
ja
cmp
scas
das
inc
std
push
push
mov
mov
mov
jnp
cmc
dec
inc
add
test
in
xor
mov
int
pop
push
ins
pushf
outs
pop
mov
pop
bswap
stc
sbb
lods
retf
std
pop
mov
pop
xlat
sub
cmp
and
or
cmps
pop
mov
xchg
jne
lods
add
popf
pop
cs
xor
int3
mov
adc
jb
and
fldcw
cmps
push
scas
stos
mov
sub
pop
xor
ficom
jo
(bad)
dec
int3
inc
lods
push
(bad)
jnp
adc
mov
mov
mov
cmp
dec
push
adc
dec
sub
jbe
pop
push
push
mov
pop
in
pop
add
adc
push
pushf
(bad)
scas
mov
sub
sahf
loopne
adc
out
adc
stos
jnp
icebp
outs
ins
jmp
inc
or
sbb
rcl
das
int3
inc
mov
in
aad
js
inc
xor
loope
or
mov
pop
jl
gs
fidivr
(bad)
repnz
xlat
pop
mov
arpl
bnd
aad
jp
sbb
sbb
ret
stc
out
xchg
fistp
std
(bad)
movs
mul
mov
aas
jbe
repz
push
fistp
loopne
out
int3
mov
(bad)
jb
les
cmp
and
mov
dec
xchg
enter
lea
addr16
pop
outs
xor
fs
adc
cmc
add
push
jmp
sbb
adc
lods
stos
das
ja
push
popf
pop
inc
(bad)
mov
cdq
add
movs
pop
push
cli
mov
mov
fisub
sub
sbb
aaa
div
push
loope
movs
nop
movs
push
aas
jecxz
xchg
out
ins
nop
je
add
inc
adc
aam
mov
in
xchg
sub
sbb
dec
sbb
aas
mov
xor
mov
xor
sub
arpl
mov
clc
hlt
sbb
dec
(bad)
adc
xchg
pusha
adc
dec
enter
loope
mov
iret
fild
fwait
mov
daa
ret
hlt
mov
sub
add
jecxz
int
inc
sbb
cmp
cmp
mov
mov
and
mov
mov
fucomp
jle
mov
fnop
sti
fcmovbe
jg
cdq
jnp
test
jmp
(bad)
int
jg
mov
ja
jne
mov
sbb
push
lds
jnp
retf
push
cmp
push
or
pop
push
add
repz
xchg
xor
test
(bad)
fistp
sub
idiv
loopne
pop
stos
jle
mov
mov
dec
sub
xor
mov
push
and
das
mov
push
cwde
ror
pop
push
pusha
shr
pop
rcr
loopne
cdq
fcmovb
test
cld
in
jbe
fnstcw
adc
mov
mov
adc
ret
mov
inc
int3
dec
mov
dec
adc
mov
and
sbb
xchg
addr16
xchg
popa
scas
das
xchg
ins
mov
(bad)
out
dec
sbb
sar
mov
mov
shl
mov
add
mov
xchg
je
jmp
js
xor
push
pop
jg
ss
or
jl
aam
mov
xor
cld
pop
mov
xchg
or
xor
push
sub
pop
xlat
es
jb
or
mov
push
pop
ficomp
arpl
popf
cmps
pop
sub
sub
sbb
cs
inc
imul
lods
jne
adc
test
pop
or
test
jb
cmc
mov
imul
cmp
test
retf
mov
out
xchg
push
iret
adc
jns
dec
mov
dec
cs
in
inc
push
loope
ins
fs
or
(bad)
mov
jmp
sbb
mov
sub
lock
mov
push
mov
mov
sti
pop
jecxz
jmp
jmp
lods
nop
jne
sbb
xchg
and
mov
lods
inc
int3
call
mov
pop
scas
adc
mov
sbb
fnsave
sub
pop
stc
int3
pop
adc
rcr
cld
mov
cmp
call
ret
or
leave
inc
push
shr
jmp
mov
jb
stc
(bad)
out
neg
jmp
mov
in
pop
add
push
inc
iret
fwait
loopne
xor
jae
test
cmps
cdq
mov
js
dec
test
in
inc
test
mov
retf
imul
into
gs
adc
mov
mov
stos
jnp
dec
out
movs
retf
mov
retf
fs
ins
cmp
cs
(bad)
jne
or
rcr
inc
jmp
dec
mov
add
jae
pop
scas
mov
cmp
inc
jne
push
out
into
jl
jnp
sar
test
cld
js
pop
dec
inc
pushf
adc
adc
adc
js
outs
push
loope
sbb
sbb
mov
out
pop
pop
jge
ja
sar
ret
xlat
pop
fdivr
mov
mov
jp
push
bound
retf
sbb
inc
push
dec
into
cmp
jp
daa
mov
imul
arpl
pop
inc
push
sbb
mov
mov
pushf
imul
arpl
call
jns
jge
repz
jecxz
ret
pop
or
xchg
lds
test
xchg
lds
sbb
out
cld
mov
(bad)
daa
xchg
out
imul
daa
dec
jae
test
and
repnz
cs
adc
and
lea
or
adc
inc
not
push
adc
jmp
sub
dec
mov
ror
icebp
jmp
je
sub
popf
dec
or
cdq
mov
mov
imul
mov
mov
mov
push
sbb
mov
imul
scas
out
jle
arpl
nop
std
push
or
pop
fisubr
sti
adc
dec
adc
enter
jmp
cs
dec
rcr
dec
jae
into
clc
call
jno
xor
or
push
xchg
out
pop
je
pusha
cli
mov
xchg
imul
mov
mov
lds
mov
add
jb
gs
push
and
mov
mov
mov
cdq
ss
aam
test
imul
fs
mov
sbb
lea
bound
sub
int3
fs
cmc
and
enter
int3
or
rol
adc
dec
cmps
es
ret
jp
xchg
inc
neg
popf
mov
pop
pop
sub
fiadd
xor
xchg
mov
dec
push
sub
(bad)
pop
dec
fcmovnb
cmp
fnstcw
mov
loope
int
push
int
lds
mov
nop
lds
mov
fcomp
inc
les
dec
rcl
mov
in
rcr
mov
cmp
push
cmp
nop
pop
mov
xchg
pop
cmps
(bad)
int3
pusha
xor
add
sbb
add
leave
or
ds
repnz
inc
jno
inc
jns
imul
adc
out
xchg
pop
(bad)
mov
les
dec
hlt
sbb
and
js
out
std
js
inc
inc
pop
scas
in
(bad)
sbb
mov
test
stos
sub
das
movq
pop
cmp
(bad)
or
das
add
xor
loop
retf
jo
cdq
call
or
add
(bad)
into
sub
cmp
sub
clc
retf
loope
loope
xlat
data16
jnp
out
inc
add
or
loope
jecxz
or
cmps
fild
into
into
ror
dec
cmps
enter
je
icebp
and
pop
xor
dec
ds
stc
rol
movs
adc
fwait
retf
inc
sbb
push
or
nop
popa
or
sbb
inc
aad
es
int
xor
push
imul
icebp
sbb
rcl
addr16
mov
dec
pusha
xchg
retf
xchg
push
mov
gs
test
fmul
jo
xchg
xchg
mov
aad
mov
int
mov
imul
jb
pop
in
xor
js
pop
popf
jmp
out
in
stos
mov
popa
mov
pop
inc
shl
std
imul
pop
daa
loopne
mov
aad
hlt
aam
xchg
jmp
mov
in
fidivr
xor
sbb
sar
std
enter
(bad)
fidivr
push
pushf
xor
std
add
(bad)
jecxz
call
test
inc
loopne
jmp
rcr
lds
out
pushf
dec
mov
fsub
and
mov
(bad)
xor
push
push
adc
cmp
test
mov
xor
sahf
call
mov
fs
fs
sbb
mov
mov
dec
jae
icebp
ret
or
cli
pop
xchg
lods
and
dec
ins
adc
cmp
inc
nop
sbb
push
and
shr
and
retf
xchg
scas
in
sub
cwde
adc
or
stc
or
(bad)
scas
add
sahf
cmp
xor
test
inc
outs
adc
enter
mov
int
sub
pop
repnz
in
enter
jnp
data16
push
xor
cdq
jnp
adc
inc
ss
and
jnp
fs
jbe
xchg
adc
jmp
fcom
pop
retf
mov
(bad)
cmp
fdivr
hlt
inc
mov
stos
test
xchg
jg
jo
cmp
(bad)
test
xor
mov
(bad)
inc
test
cmps
sub
push
xchg
(bad)
adc
push
push
adc
add
jp
out
mov
lods
add
fistp
jne
pop
out
hlt
call
pop
pop
mov
pop
push
mov
adc
sbb
sub
and
cmp
jl
les
xchg
adc
movs
mov
xor
sbb
inc
pop
or
jl
bound
popa
mov
or
xor
add
pop
mov
xor
clc
(bad)
int
add
jbe
dec
(bad)
popf
stc
sub
sub
xchg
adc
das
push
stos
rol
xchg
adc
xor
pop
daa
fst
inc
adc
ds
dec
and
jb
fmul
mov
pop
sub
cli
pop
cmps
xor
stc
inc
int3
shl
xchg
sbb
call
jmp
xor
pop
movs
xchg
cs
mov
add
sbb
dec
mov
out
clc
iret
jp
jne
and
mov
add
adc
shr
movs
or
pop
xchg
mov
and
test
xchg
sbb
or
test
jle
rol
std
stos
dec
xchg
and
sub
(bad)
int
mov
jno
inc
xor
pop
xor
push
stc
dec
mov
jmp
sub
inc
inc
sub
inc
daa
cmps
test
lds
cmps
ret
rcr
js
push
js
inc
jnp
and
xchg
in
pop
ins
out
jne
shl
shr
pop
ret
or
arpl
bound
cs
sub
cmp
outs
popf
mov
cmp
mov
es
and
ret
ret
out
rol
in
and
test
xchg
ins
sbb
cmp
cmp
dec
sbb
or
in
cdq
cdq
sub
jecxz
lods
retf
sbb
jno
in
mov
sbb
mov
inc
lods
(bad)
xchg
int3
(bad)
jb
aad
xchg
adc
jne
out
dec
mov
scas
mov
mov
mov
ror
(bad)
(bad)
cmp
scas
lods
test
sbb
popf
aam
inc
repz
inc
scas
ror
movs
adc
fwait
dec
mov
popa
jno
mov
adc
bound
cmp
ja
repnz
in
push
inc
sbb
and
sub
and
or
loopne
jmp
out
push
repnz
pop
mov
div
cmp
das
adc
sub
dec
(bad)
jns
mov
sub
ror
int
js
or
in
out
or
pop
xor
pop
dec
jmp
sub
dec
xor
inc
mov
lea
call
sbb
jb
cdq
jmp
in
sub
aam
mov
add
int
pop
or
ja
mov
push
dec
mov
pushf
imul
jle
inc
mov
ss
stc
cmp
mov
fnsave
addr16
std
xchg
jge
sti
xor
scas
pop
ins
cld
cmp
(bad)
stc
pop
jmp
mov
push
or
adc
fcomp
sbb
jno
push
cmp
adc
call
aaa
cmps
cmp
adc
in
push
aam
jb
(bad)
in
loop
jle
adc
test
(bad)
sbb
fucomip
push
jle
das
cld
cmc
push
call
gs
jbe
jns
push
mov
rol
pop
rcl
and
sbb
push
mov
mov
cs
xchg
inc
mov
pusha
jno
and
cmps
clc
pop
(bad)
sahf
mov
cs
mov
shr
dec
cmp
and
mov
retf
fs
mov
test
jno
gs
jns
inc
xchg
mov
sbb
push
or
scas
icebp
ja
pop
mov
lods
xor
pop
jmp
lods
cmp
adc
outs
xchg
outs
aad
pop
mov
popa
call
mov
push
xchg
xor
adc
addr16
(bad)
rol
jns
xchg
dec
pop
sti
or
mov
pop
cmp
dec
pop
cdq
mov
mov
(bad)
mov
xchg
dec
adc
push
mov
ror
or
sbb
movs
add
dec
std
pop
fsub
mov
stos
jne
mov
mov
out
cld
mov
out
stc
aad
push
xchg
mov
sub
xlat
jp
repnz
mov
xchg
int
cmps
sub
mov
das
nop
mov
xor
inc
mov
xor
and
xor
loope
adc
add
mov
out
cdq
cmp
mov
fwait
out
mov
shl
add
ds
int
pop
call
int
mov
xchg
adc
mov
push
add
fadd
lds
and
mov
aad
mov
lds
ror
sub
dec
inc
shl
xchg
adc
pop
js
sub
and
dec
xchg
movs
jno
movs
adc
jle
pushf
inc
mov
xchg
stos
stc
mov
jae
in
push
or
inc
shr
int
jmp
sbb
pushf
adc
inc
jne
mov
jecxz
push
mov
cdq
leave
jno
ins
mov
xchg
push
push
pop
xor
ret
ret
push
outs
mov
sub
pop
scas
inc
lea
or
push
rcr
fwait
in
push
ret
data16
inc
fst
and
fmul
or
xchg
loope
inc
test
xor
push
test
or
ins
ret
cdq
xor
rcl
cs
leave
int3
adc
sbb
adc
ret
test
jl
inc
cs
push
rol
inc
jo
mov
int3
jno
fwait
int3
sbb
xor
int
cmp
push
test
nop
sbb
or
or
jmp
jle
mov
movs
loopne
icebp
mov
rcr
or
xchg
call
pop
ja
xchg
sbb
pushf
pop
out
addr16
repz
shl
add
stos
adc
ret
mov
daa
push
shr
adc
mov
or
aaa
push
call
out
fistp
inc
xor
mov
pop
sbb
nop
icebp
shl
pop
pop
xor
shl
xchg
adc
dec
jno
or
add
mov
loopne
cdq
(bad)
mov
stos
jg
daa
cli
jecxz
aad
int
jp
push
jle
fimul
pop
and
sbb
popa
es
dec
xchg
mov
or
neg
adc
inc
mov
call
inc
sub
retf
out
popa
shl
lods
in
pop
jbe
xchg
mov
out
mov
rol
ds
iret
or
loopne
retf
xchg
shl
retf
or
xor
cmp
xchg
aaa
cmp
int3
add
icebp
push
call
pop
mov
call
add
les
pop
mov
fwait
xchg
ds
cmps
sbb
ss
sbb
sub
sbb
mov
cmp
shr
mov
sbb
jp
jl
popa
out
fwait
or
sbb
and
icebp
pop
mov
mov
shl
loopne
xchg
and
jo
xchg
sub
or
mov
lea
xor
aad
nop
inc
and
dec
mov
imul
shr
iret
into
adc
cmps
mov
sahf
push
push
push
cmps
mov
jnp
jne
repz
int3
mov
push
mov
out
lods
scas
outs
adc
mov
pop
or
or
les
adc
test
add
aad
xor
cmc
les
push
and
call
mov
and
inc
dec
bound
mov
or
dec
and
retf
test
push
fprem
and
out
add
adc
and
mov
dec
jg
cmc
xor
or
xchg
into
aam
push
rcl
add
test
push
in
cmc
sub
lds
push
and
pop
les
xchg
push
xchg
mov
outs
xchg
call
pop
arpl
jle
nop
loopne
enter
jae
dec
mov
adc
inc
ds
jb
(bad)
cwde
cli
add
xor
jmp
mov
xchg
das
call
adc
inc
fcomp
mov
(bad)
fbstp
jg
out
retf
push
pop
or
mov
outs
sub
add
or
push
(bad)
movs
aas
ss
and
imul
adc
mov
int3
pop
in
and
mov
iret
pop
or
dec
cld
mov
push
mov
adc
mov
mov
ins
sbb
add
xchg
push
mov
cmp
bound
mov
xchg
push
inc
add
(bad)
imul
ds
mov
push
dec
and
mov
ret
cmp
inc
fstp
gs
test
jl
cli
(bad)
repnz
fisubr
dec
idiv
scas
sub
xchg
and
ror
stos
inc
mov
inc
jb
jmp
inc
stc
in
pushf
rol
imul
xchg
scas
pop
scas
(bad)
std
or
(bad)
data16
out
xchg
or
pusha
pop
or
popf
vandps
in
sub
mov
movs
mov
into
mov
add
xchg
shl
pop
jge
outs
sar
out
fdivr
mov
mov
scas
ins
popf
mov
repz
fcomp
jp
xchg
ror
sub
or
sbb
rcl
cmps
adc
sbb
ror
leave
mov
arpl
pop
xor
dec
rol
sub
cmp
cmp
stos
xor
(bad)
out
jae
lods
push
jb
fwait
mov
stc
std
inc
call
xchg
pushf
daa
jbe
leave
movs
call
es
jge
in
ror
jecxz
leave
cmp
je
pop
js
mov
outs
mov
jle
push
xchg
xor
xchg
sbb
arpl
push
inc
loop
or
ins
fld
leave
scas
dec
or
xor
adc
and
inc
sbb
mov
xchg
or
jnp
xor
movs
ret
and
sbb
aaa
pop
call
out
ins
cmc
jmp
push
dec
jb
lock
mov
add
ror
or
sub
out
scas
std
fcmovnb
dec
or
les
mov
xchg
sbb
sub
push
pop
into
retf
and
pop
jo
pop
mov
sbb
sub
pop
rcl
adc
sub
xor
repz
sub
retf
div
(bad)
jns
mov
sbb
icebp
loope
inc
xor
dec
fidivr
sbb
inc
enter
ins
pusha
or
cs
das
add
mov
jl
jbe
cmp
jecxz
push
push
jb
scas
shl
stos
pop
xor
les
cdq
xchg
jmp
cmp
in
sub
repz
add
fucom
mov
scas
mov
xor
fisttp
lds
dec
sbb
add
sbb
or
bound
cmp
and
cmps
push
stos
fsubr
or
lods
pop
into
jns
dec
rcl
(bad)
sub
lods
aaa
sub
xor
add
mov
fsub
mov
xchg
popa
out
sbb
pushf
xchg
and
mov
mov
cmps
cmp
push
push
mov
sbb
icebp
and
mov
add
xlat
jb
cdq
in
sahf
in
hlt
dec
adc
push
data16
inc
pushf
nop
inc
xchg
dec
adc
xchg
push
jecxz
xor
sbb
lahf
mov
call
push
cs
jl
add
inc
push
stos
in
repz
clc
xchg
test
leave
popf
push
test
cmp
jns
sub
push
data16
aam
jns
cdq
jnp
popf
jmp
push
cmp
fucomi
not
cld
not
mov
pop
jmp
jbe
pop
cmps
mov
ret
clc
xchg
loop
pop
lods
adc
dec
mov
xchg
call
pop
pop
popf
mov
in
and
pop
fcmovnb
iret
lods
xchg
adc
mov
cmps
add
arpl
mov
xchg
retf
addr16
xor
fisub
je
sub
pushf
xchg
push
call
fwait
mov
xor
jbe
mov
mov
push
call
call
mov
movs
xor
add
adc
or
add
pop
cdq
xor
mov
dec
test
(bad)
(bad)
pop
jne
cmps
push
xor
jmp
cmp
xchg
jle
cli
out
rcr
cmps
(bad)
packsswb
add
jmp
lods
scas
xlat
jmp
xor
cdq
pop
cmps
fsub
cwde
push
mov
arpl
in
ja
stos
lea
lods
xchg
xor
int3
imul
or
out
aam
icebp
jp
ja
(bad)
iret
pop
test
jge
push
shl
lods
bound
sbb
pop
push
ret
push
jnp
pop
icebp
jecxz
or
int3
mov
call
test
sub
pop
jmp
sti
movs
cmc
xor
inc
pusha
test
sub
into
or
(bad)
pop
adc
jge
xor
mov
out
lods
inc
jnp
jg
gs
push
fistp
movs
adc
push
xchg
xchg
jg
sti
dec
xor
out
cmp
adc
xor
repnz
xor
mov
mov
repz
mov
adc
xor
jns
and
or
and
test
sub
push
sub
ins
or
jecxz
adc
lock
pushf
and
pop
call
icebp
rol
fdiv
inc
mov
cmps
fld
scas
sub
adc
jb
pop
stos
mov
popa
cmps
loop
std
xchg
fbld
lea
cmp
fistp
sbb
inc
cld
int3
pop
push
sbb
ret
add
mov
adc
pop
leave
or
shl
sub
(bad)
mov
in
adc
add
inc
inc
cmps
enter
outs
mov
xor
ror
pop
inc
push
mov
mov
test
push
sub
fadd
inc
jmp
lahf
sbb
push
jecxz
push
mov
sbb
sbb
mov
loope
xchg
pop
popf
stos
xchg
in
popf
and
and
sahf
pop
xchg
and
xchg
adc
arpl
mov
xchg
sub
push
mov
shl
adc
mov
dec
mov
mov
mov
into
retf
push
cs
or
cdq
sbb
fwait
push
daa
sub
inc
push
mov
cmp
enter
push
xor
in
loop
pop
cdq
imul
ins
in
sbb
push
aam
pop
stos
out
popf
pop
(bad)
jno
es
hlt
jno
cli
daa
(bad)
ret
out
cld
cdq
sub
dec
data16
adc
push
aaa
cmp
call
sub
xor
push
push
aas
cmp
lahf
ds
ret
mov
int
sub
popf
lods
std
jae
sub
repnz
jl
mov
pop
neg
jmp
retf
mov
aas
mov
bound
fdiv
out
or
ret
inc
mov
push
mov
mov
push
xchg
add
shl
inc
dec
adc
jae
push
das
test
mov
sbb
popa
mov
retf
xchg
ins
in
(bad)
arpl
cwde
dec
sub
inc
(bad)
pop
leave
data16
mov
cmp
adc
push
adc
les
mov
imul
aad
push
adc
imul
dec
fucomp
clc
xor
cmp
add
pop
push
dec
cmc
xor
(bad)
mov
dec
stos
sub
ret
(bad)
jno
leave
int
pusha
mov
xor
and
stc
and
(bad)
shl
inc
iret
cld
xchg
enter
(bad)
call
aad
ds
js
jmp
push
lods
call
push
popf
cmc
cmp
int3
out
repz
jmp
fist
ins
adc
xchg
xchg
aad
dec
sbb
xlat
jp
imul
xchg
mov
test
aaa
and
xchg
mov
pop
adc
sub
xor
cmp
aaa
movs
cmps
pop
pusha
pop
pop
or
mov
stc
dec
pop
or
mov
mov
jne
pop
and
sub
xor
fistp
arpl
inc
mov
mov
pop
mov
outs
mov
addr16
xor
pop
cwde
jnp
fistp
dec
in
xchg
sbb
jp
call
cmc
shr
repz
mov
lds
stos
cmp
sub
pop
cmps
push
repnz
in
xor
jne
push
jae
ja
test
mov
hlt
add
fmul
loope
sti
mov
xchg
imul
mov
outs
lods
iret
adc
adc
lahf
add
jo
adc
push
ror
(bad)
call
mov
retf
test
ficomp
(bad)
div
push
or
into
cs
xor
push
add
cs
xchg
push
(bad)
xor
add
dec
xchg
inc
sbb
push
sbb
add
je
popf
adc
sub
in
pop
jno
push
call
jo
dec
mov
rcr
mov
outs
inc
add
push
adc
mov
adc
cwde
data16
sbb
xchg
call
aaa
nop
int3
push
cmc
mov
dec
sbb
ins
addr16
call
aad
les
hlt
ret
cmp
push
fwait
mov
mov
cmp
xchg
jb
sbb
jae
leave
pushf
repnz
lahf
ss
aam
mov
push
ins
hlt
inc
xor
adc
pusha
popf
test
call
mov
pop
ret
and
mov
inc
adc
inc
xor
sub
sbb
cmp
and
pop
mov
test
push
sub
test
xor
push
loope
aad
retf
sub
test
cli
pop
mov
aad
jnp
hlt
cmp
mov
imul
es
mov
sbb
and
xor
cmp
sub
mov
movs
xchg
sub
jp
outs
into
aaa
aas
pop
push
fisttp
inc
mov
xlat
clc
sub
lods
iret
xchg
sbb
dec
icebp
nop
mov
mov
dec
in
(bad)
sti
and
ins
mov
xor
xchg
dec
xchg
es
test
aad
rcr
das
jns
xchg
ror
jae
jb
js
dec
test
sbb
pop
jmp
sub
fdiv
movs
lods
mov
add
add
push
inc
sbb
sbb
jmp
adc
add
mov
bound
adc
ret
lahf
daa
push
pop
data16
lock
pop
dec
bound
retf
mov
xchg
cmp
retf
iret
stos
jmp
jns
aaa
movs
outs
mov
cmps
jne
aaa
dec
mov
xor
pop
daa
pop
mov
cmp
jmp
gs
loope
mov
cs
mov
add
xchg
fild
xchg
adc
adc
push
dec
jns
adc
lock
add
sub
xor
popa
scas
pop
mov
mov
xor
xchg
data16
lea
fwait
push
retf
iret
or
mov
rcr
xchg
adc
repnz
fmulp
ja
pop
repz
jle
adc
xchg
sub
cmp
mov
pop
push
shl
inc
sbb
imul
nop
loop
fdiv
iret
(bad)
cmp
or
mov
xchg
jae
aaa
jmp
fisubr
mov
xchg
repz
(bad)
pop
push
xchg
fldenv
dec
push
jne
cli
jmp
(bad)
cmps
ret
mov
dec
ds
int3
cmp
and
xor
repz
ins
fwait
push
stc
js
(bad)
int
mov
sbb
mov
xchg
cmp
mov
ins
clc
push
pop
add
mov
pop
push
mov
push
push
xchg
mov
or
sbb
in
imul
mov
loop
and
xor
push
or
xchg
std
mov
xlat
outs
add
adc
adc
sbb
cmps
pop
in
mov
test
adc
lods
ss
lods
inc
fwait
ret
fcom
jnp
push
test
ror
push
dec
push
in
push
out
and
test
sub
push
sbb
jmp
mov
in
push
mov
or
sbb
jmp
mov
mov
je
lods
aaa
push
out
add
add
cdq
xchg
or
cmp
lods
dec
(bad)
push
sub
pop
mov
xor
jg
jno
dec
addr16
add
mov
xchg
mov
les
rol
xchg
xchg
and
mov
pop
sahf
sub
pop
in
sub
mov
daa
mov
dec
xchg
pop
adc
cmps
out
sbb
mov
test
jae
aas
(bad)
out
and
retf
xor
add
pop
ss
mov
fimul
mov
stos
pop
ret
jg
cmps
clc
pop
push
mov
mov
fbstp
inc
in
adc
dec
or
fstp
mov
push
dec
push
je
push
push
dec
inc
(bad)
in
jae
jnp
out
inc
xchg
jge
xchg
sti
movs
(bad)
outs
pop
out
push
sub
pop
push
out
cmp
or
xchg
cmps
pop
jmp
dec
add
and
cmp
bound
cmp
mov
ss
inc
cwde
in
push
ins
lods
stos
sub
jmp
dec
imul
not
jo
push
and
dec
or
xor
cdq
cmc
push
adc
cmp
jmp
dec
dec
mov
xor
sbb
cmp
hlt
xchg
pop
mov
lods
inc
sub
xchg
bnd
scas
test
jno
or
cmps
mov
mov
mov
hlt
dec
inc
inc
push
and
cmc
inc
icebp
lods
scas
ja
push
adc
iret
sahf
pop
add
mov
jmp
iret
mov
repz
aas
push
push
iret
xchg
mov
clc
dec
mov
lahf
push
adc
xchg
sbb
mov
aam
jp
push
retf
pinsrw
inc
cwde
pop
scas
xchg
lds
nop
push
adc
inc
mov
push
stc
dec
in
aad
out
adc
fs
push
or
loop
inc
scas
adc
add
adc
mov
mov
std
xchg
inc
xchg
jl
fisubr
mov
adc
nop
sub
sub
lock
ins
cli
or
pushf
cmc
push
mov
pop
jns
into
sub
mov
lods
or
mov
cmp
sbb
cmc
rcl
xchg
int
icebp
call
jns
push
and
sub
xor
and
cwde
sub
inc
adc
cmp
shl
jnp
jns
scas
addr16
fild
mov
xchg
inc
outs
rcl
push
sbb
leave
dec
xchg
mov
hlt
mov
xchg
int3
mov
and
push
loope
and
jne
mov
fsubr
lock
scas
lods
dec
xor
cmp
(bad)
jbe
lods
aaa
mov
les
and
es
lods
add
pop
scas
ret
xchg
into
adc
cmp
push
or
out
arpl
gs
add
inc
mov
push
or
sub
push
jmp
in
or
aam
cdq
inc
inc
lahf
cmp
push
sub
(bad)
mov
and
lods
sbb
inc
je
ins
repnz
hlt
xor
cmp
movs
out
push
adc
push
aaa
mov
add
xchg
fstp
jbe
in
mov
push
out
icebp
xchg
xchg
js
mov
pop
pop
dec
mov
dec
sar
xchg
or
outs
sbb
jae
cmc
adc
or
jo
repz
inc
test
loope
call
mov
call
scas
pop
mov
ret
repz
sub
das
mov
fs
jae
pop
sbb
ret
cli
and
or
icebp
or
fild
jns
xchg
fdiv
ins
cld
lds
(bad)
fst
cld
mov
in
push
repz
mov
dec
push
or
aaa
leave
sbb
outs
jl
xor
call
aaa
cmc
sub
out
adc
mov
lea
xchg
int
inc
sub
push
stc
imul
jle
aaa
push
(bad)
sbb
mov
push
pop
or
cdq
jmp
mov
and
sbb
in
mov
test
ds
mov
fimul
inc
xlat
call
xor
and
jmp
push
and
mov
lea
ins
jo
retf
dec
jle
icebp
pop
dec
mov
adc
rcl
ja
push
fistp
scas
das
dec
in
and
add
test
stc
popa
lods
ss
ret
fistp
cld
popa
call
out
out
xchg
ret
sub
cmps
test
imul
sbb
sti
xor
pavgb
jno
push
sbb
sbb
dec
scas
push
adc
gs
loop
mov
cld
mov
test
cmp
adc
pop
in
add
scas
sub
imul
push
or
pop
mov
cdq
push
mov
imul
repnz
fcom
sar
pop
sub
movs
xor
pop
pop
lock
adc
mov
nop
adc
mov
jb
int3
and
bound
xchg
fcom
lods
call
add
cmp
cli
cmc
dec
test
inc
cmp
retf
enter
xchg
xor
leave
sub
xor
jmp
int
scas
add
pop
leave
add
cdq
es
xor
add
add
dec
xchg
and
pop
pushf
arpl
lods
pop
cmps
dec
and
mov
xor
sbb
in
ss
and
adc
mov
loopne
xor
adc
call
xchg
add
ds
cli
aam
and
push
sub
dec
shr
dec
push
sub
push
xchg
dec
pop
push
xchg
or
mov
clc
loop
inc
repz
sbb
mov
mov
jns
daa
mov
mov
out
or
test
sub
xor
add
rcl
sar
mov
fdivr
or
fs
scas
cs
ins
int3
shl
retf
jle
jecxz
mov
dec
push
xchg
arpl
ins
mov
stos
inc
xor
fwait
push
jecxz
xchg
dec
ds
aaa
fld
jmp
mov
rcl
add
add
push
callw
fs
sbb
pop
adc
xor
(bad)
out
jmp
pop
stos
push
lods
pop
adc
pop
mov
aas
int
xchg
pop
jb
push
sti
popa
fcomp
mov
pusha
adc
xchg
cdq
lds
loop
sub
ins
(bad)
pushf
movq
(bad)
pop
mov
jg
mov
pop
int
out
fisttp
push
out
sahf
push
popf
jb
inc
and
into
arpl
xlat
sub
test
aaa
xor
test
mov
ret
cmp
ficomp
cmp
in
cld
bound
sbb
mov
push
sar
mov
fwait
sbb
cmc
cmp
fld
arpl
pop
fcmovnb
pop
dec
cmp
aaa
xchg
mov
mov
hlt
add
inc
pushaw
repnz
call
rcl
adc
bnd
lahf
ins
(bad)
adc
dec
mov
mov
add
in
rcr
cli
cmc
pop
inc
sub
lods
sub
push
xor
mov
(bad)
xor
cmp
add
push
repz
mov
push
int3
jo
rcl
add
xor
and
dec
cmp
shr
mov
jbe
pop
sub
in
sar
cld
and
ja
cwde
ss
sub
pusha
xor
daa
es
jmp
clc
cmp
and
adc
(bad)
movs
inc
sub
imul
ret
popf
push
add
push
cmp
and
sbb
jbe
imul
imul
enter
ret
cmp
lods
imul
in
or
add
(bad)
inc
rcl
out
mov
push
fcom
push
xchg
pop
jb
mov
cmp
add
push
mov
sbb
mov
(bad)
sub
jo
dec
push
pop
dec
add
mov
push
retf
mov
nop
(bad)
mov
icebp
push
push
jno
ret
adc
xor
test
xor
dec
call
int
sub
dec
inc
mov
out
xor
jecxz
fwait
and
push
xchg
loop
adc
inc
bound
push
dec
xor
sbb
lods
pop
mov
cmc
cld
pop
cwde
or
jno
in
push
(bad)
cld
or
adc
dec
xor
mov
xchg
enter
ret
and
or
out
xchg
inc
ss
pusha
push
daa
inc
push
pop
add
sbb
or
sahf
shl
mov
jp
dec
xor
sub
sbb
dec
cld
add
outs
jge
retf
push
sub
adc
mov
xlat
xor
mov
stc
adc
xor
and
(bad)
cld
fpatan
or
mov
adc
iret
push
mov
cdq
out
sub
aas
mov
out
aaa
outs
push
(bad)
fild
push
jae
mov
add
cmp
mov
mov
cld
icebp
mov
mov
inc
add
outs
leave
(bad)
xchg
xchg
jecxz
fs
lods
sti
inc
jmp
test
popa
mov
or
(bad)
ja
sub
adc
les
(bad)
xchg
lds
icebp
add
sub
frstor
clc
jbe
jp
retf
(bad)
ja
sub
outs
mov
shr
cmp
adc
push
xlat
xchg
repnz
pop
stos
pop
(bad)
stos
push
int3
add
mov
std
xor
push
test
inc
stc
jae
jl
mov
mov
mov
imul
js
sbb
data16
sub
mov
dec
aad
outs
cmp
add
jecxz
jb
cld
shl
imul
adc
mov
cmp
dec
(bad)
mov
jns
cdq
jnp
ins
and
add
xor
test
sub
rcl
cmp
ret
mov
xor
cmps
pusha
pop
mov
cmp
pop
inc
pop
(bad)
push
aaa
add
mov
push
xchg
pop
(bad)
adc
xchg
es
cmp
mov
sub
retf
imul
jae
(bad)
xlat
push
scas
lods
push
out
(bad)
test
ins
scas
push
inc
(bad)
cmps
jp
adc
mov
or
xchg
push
pop
mov
and
xchg
sbb
scas
rcr
test
mov
rcr
mov
scas
mov
ret
xor
push
sti
or
sbb
jmp
ret
in
adc
mov
xchg
mov
cmp
push
or
dec
inc
push
out
pushf
xor
call
in
lock
mov
xchg
sbb
rol
jbe
rol
cdq
mov
cwde
imul
call
inc
adc
daa
push
mov
iret
adc
inc
loop
nop
jl
rcl
aam
dec
call
inc
out
mov
pushf
repz
push
imul
mov
push
sahf
push
dec
shl
scas
dec
leave
adc
sub
push
arpl
mov
popa
jbe
lods
cwde
ins
add
push
pop
xor
cmp
xor
mov
mov
xchg
inc
mov
push
(bad)
adc
retf
xor
add
push
xchg
cmp
aas
adc
pop
or
mov
dec
loop
sbb
js
xchg
jmp
retf
sti
jg
(bad)
std
outs
ficomp
cld
enter
jo
adc
ret
into
std
mov
addr16
push
inc
add
out
pop
dec
lods
adc
push
mov
push
sub
pop
ins
mov
mov
rcl
das
xchg
lods
aaa
fwait
(bad)
lahf
fldcw
fcom
jnp
in
push
stos
jnp
popa
inc
leave
and
add
imul
mov
and
mov
pop
in
sub
sub
mov
xchg
mov
dec
xchg
cmp
and
repnz
xchg
loop
or
das
and
and
shl
jne
dec
xor
fmul
das
mov
adc
retf
mov
mov
add
xor
adc
fadd
xchg
sub
ud0
inc
sub
jae
sbb
mov
add
mov
dec
push
inc
movs
push
dec
sahf
mov
outs
push
xchg
test
call
push
or
retf
ds
in
push
cmp
xchg
call
dec
das
mov
xor
mov
retf
test
push
add
pusha
outs
mov
adc
push
es
sbb
stos
in
cwde
aam
mov
lods
lods
(bad)
xchg
inc
in
(bad)
inc
(bad)
icebp
cmc
in
push
pop
mov
mov
test
jmp
(bad)
mov
(bad)
xor
ret
repnz
jbe
loop
or
aaa
xchg
and
dec
add
daa
pop
jo
dec
xor
cmc
(bad)
xlat
stos
push
test
push
adc
bound
cld
mov
mov
iret
or
xor
dec
or
outs
inc
cmp
jp
cmp
fsub
es
shl
mov
dec
adc
jle
sub
(bad)
ret
add
rol
in
shr
inc
adc
push
add
xchg
jo
xor
mov
movs
inc
wrmsr
fcmovne
je
mov
xchg
sahf
xor
sbb
stos
cmp
imul
push
xor
xor
loope
mov
cmps
add
xchg
or
jge
cli
and
or
adc
rol
or
sbb
js
es
loop
pop
mov
(bad)
sub
test
and
mov
lock
(bad)
xor
sub
mov
jne
xor
fnstsw
xchg
add
repnz
mov
test
das
cmps
fsub
sub
or
aad
adc
retf
cmp
addr16
retf
inc
clc
mov
clc
cdq
int
mov
int
div
in
jae
lock
inc
lds
loope
dec
faddp
repz
jecxz
pusha
int3
push
stc
adc
hlt
ja
cmp
xor
cwde
adc
pop
sbb
aaa
imul
repz
hlt
jecxz
rcr
ret
cmp
test
inc
sbb
call
sub
mov
and
hlt
xor
mov
popa
es
cmps
ret
je
loopne
sub
push
push
inc
adc
cmp
jbe
dec
lds
xchg
xchg
ins
fdiv
inc
sub
mov
lds
ja
sub
movs
ss
adc
gs
or
mov
aas
push
inc
or
push
sahf
retf
jecxz
push
cmps
dec
sbb
xchg
sbb
retf
in
div
or
sub
(bad)
in
mov
mov
mov
sub
push
adc
inc
sbb
es
outs
xor
mov
xchg
push
stos
dec
int
mov
sub
and
sbb
add
xor
or
mov
out
push
inc
leave
in
lahf
mov
shl
dec
aam
jno
sbb
imul
movs
mov
jmp
sbb
push
push
pop
adc
pop
in
cmp
jmp
outs
fistp
mov
xchg
xor
xor
lods
push
aaa
sbb
jecxz
pop
xlat
mov
btr
dec
pop
fisttp
dec
or
daa
and
int
les
mov
mov
and
daa
inc
mov
lods
inc
fstp
adc
or
inc
adc
mov
(bad)
sub
js
xchg
fwait
aas
mov
push
adc
lds
xchg
mov
clc
mov
sbb
sbb
repz
or
pop
rol
cmp
cmp
mov
pop
adc
or
fwait
inc
mov
xchg
push
shr
jb
jae
int3
shl
xor
fwait
jmp
test
cli
adc
sbb
rdtsc
xor
xchg
mov
(bad)
ror
ja
add
call
mov
cmp
jle
push
loope
outs
inc
test
imul
mov
adc
loop
sub
test
sbb
cs
mov
nop
mov
pop
mov
xor
cmps
ds
enter
retf
loopne
mov
and
hlt
pop
sbb
mov
mov
and
mov
jae
data16
xchg
shl
jnp
pop
adc
out
jmp
sub
lds
sub
lock
inc
mov
movs
jns
daa
mov
setp
jg
cmps
(bad)
mov
mov
cmps
jo
and
sub
cmps
aas
cmps
jecxz
push
iret
aam
std
shl
jmp
clc
add
jmp
gs
int3
jbe
scas
pop
jmp
(bad)
pop
psubd
out
(bad)
sub
or
xor
sbb
xor
xchg
dec
sub
pop
jmp
pop
dec
popa
mov
outs
add
test
rol
jbe
jle
push
mov
adc
cmp
mov
cdq
mov
aaa
push
or
int
mov
pusha
pop
rcl
mov
iret
cmc
data16
in
arpl
fwait
pop
push
pop
ret
lahf
(bad)
rol
mov
push
shl
sub
test
ret
mov
add
pop
imul
leave
sti
pusha
sbb
inc
mov
sbb
repz
int3
clc
jmp
xchg
cmp
popa
push
or
sub
retf
push
iret
(bad)
and
sub
mov
sub
inc
(bad)
push
popf
jbe
(bad)
adc
out
adc
cmc
cmc
xchg
inc
daa
push
setns
xchg
xlat
push
xor
fiadd
mov
test
loopne
add
in
in
xor
cmps
cmps
rsqrtps
stc
pop
mov
shl
(bad)
jl
mov
pop
push
imul
fistp
lods
sub
stos
pusha
mov
das
ds
jg
(bad)
lahf
jle
stos
sbb
vcvtsi2sd
jl
mov
pop
dec
sbb
sbb
or
dec
rol
je
push
aas
int
aam
movs
push
xchg
dec
xchg
stc
lea
test
int3
xchg
dec
sbb
sbb
add
pop
data16
or
mov
xor
imul
pop
cmps
sbb
dec
adc
add
jp
mov
push
or
jno
mov
popf
cmp
test
daa
and
push
ds
fs
jmp
adc
dec
clc
or
shl
mov
jmp
popf
dec
jns
test
das
fcom
out
sub
push
xchg
pop
cmp
jb
add
in
(bad)
sahf
cmps
push
xchg
sbb
adc
and
mov
aas
mov
cmp
sbb
xchg
push
cmps
pop
div
push
pop
fcmovne
fst
mov
dec
(bad)
dec
sub
shr
(bad)
int
enter
sbb
call
bound
xchg
rcr
sti
or
add
js
xor
xchg
xchg
imul
sbb
add
popa
mov
outs
cs
push
outs
aaa
xor
dec
sub
jg
pop
jecxz
out
mov
ja
imul
mov
pop
pop
pop
dec
(bad)
aad
cmp
gs
jg
pop
mov
sub
stos
jbe
sub
enter
push
arpl
pusha
in
(bad)
in
xchg
call
retf
popf
pop
cmp
clc
shr
es
aas
das
jne
adc
push
(bad)
sar
je
fnstsw
je
ss
jmp
push
arpl
mov
add
inc
sub
adc
gs
xchg
adc
add
retf
add
add
inc
and
loope
or
jl
jmp
jnp
xor
mov
in
hlt
sub
dec
popa
cld
loope
xor
and
mov
jne
mov
add
push
mov
adc
mov
lock
xchg
es
mov
(bad)
outs
or
pusha
into
push
int3
xor
cmc
jnp
popa
gs
sub
in
pop
aas
xlat
adc
leave
xchg
ret
dec
mov
stc
fimul
xor
fs
in
imul
lock
add
and
clc
fs
data16
push
add
idiv
push
xchg
enter
xchg
cs
jmp
es
sbb
out
xchg
mov
hlt
into
das
xchg
scas
scas
push
jno
cwde
imul
aad
loop
test
(bad)
cmps
lods
imul
into
mov
mov
ret
cmps
sar
xor
fwait
test
dec
(bad)
xchg
cmp
pop
sub
pop
bound
neg
dec
inc
xchg
and
inc
push
adc
xchg
jbe
fsubr
push
cwde
and
mov
repnz
mov
adc
inc
int
xlat
jbe
xor
mov
mov
loop
push
(bad)
movs
fisubr
push
addr16
sub
xchg
scas
sahf
nop
pop
dec
sbb
sbb
pop
call
inc
or
xor
fsub
daa
rol
sbb
adc
and
arpl
(bad)
jmp
repz
xchg
xchg
retf
cmp
sub
mov
pushf
mov
push
movs
in
movs
(bad)
cli
pop
mov
sub
xor
ret
xchg
fisttp
or
(bad)
fdiv
(bad)
add
dec
mov
packsswb
ror
fild
outs
pop
stos
push
add
stos
ins
mov
jne
lea
daa
cdq
sub
out
or
mov
add
xor
mov
cmp
pop
or
jl
sti
(bad)
shr
aaa
sub
jo
push
cmp
pop
dec
mov
hlt
or
icebp
jns
scas
adc
mov
in
or
xor
or
xor
iret
out
jne
jmp
mov
fisubr
mov
pop
mov
xor
ins
shr
sbb
cwde
stos
js
retf
movs
jl
clc
cmp
push
sub
ss
test
mov
inc
add
and
add
popa
shr
sbb
cmps
add
sub
jbe
dec
in
pusha
gs
ror
lods
inc
xor
push
push
dec
imul
sahf
ror
jno
cmp
dec
test
repnz
cwde
je
in
xor
push
mov
pop
inc
sub
es
call
sub
inc
stos
cmp
inc
test
push
(bad)
bound
xchg
mov
xchg
int
push
xor
adc
add
cmps
pop
push
nop
pop
aam
jb
dec
pushw
adc
or
je
ret
adc
inc
(bad)
fcom
or
dec
inc
jo
scas
xchg
or
in
sub
movs
cmp
mov
push
or
aad
push
mov
stc
push
jae
stos
les
mov
mov
add
cmp
(bad)
and
retf
jb
sbb
mov
fcomp
loop
cmp
lods
jae
inc
xchg
push
push
mov
adc
repz
push
xchg
pop
and
xchg
and
or
xchg
in
cdq
xchg
or
dec
mov
cmc
adc
cmp
cmps
xor
mov
leave
mov
lds
jae
add
cmps
add
xchg
je
add
adc
xor
fsubr
or
scas
in
mov
jle
(bad)
push
(bad)
push
jle
cmps
dec
cwde
movs
sub
cwde
adc
sub
outs
retf
(bad)
sbb
enter
cmp
add
or
leave
mov
std
shr
(bad)
sub
sbb
shl
jmp
(bad)
aas
or
xor
bound
out
xchg
mov
(bad)
pop
retf
push
pushf
les
enter
and
dec
out
jle
xchg
and
shl
jnp
int3
jmp
(bad)
xor
movs
inc
stos
sbb
rol
gs
(bad)
arpl
stc
push
(bad)
in
xor
sub
add
sub
jb
sbb
shl
sti
add
iret
dec
mov
pop
scas
rol
je
cdq
and
enter
mov
fimul
jecxz
dec
out
and
and
int3
adc
fisubr
neg
pop
pop
out
adc
push
aam
stos
call
mov
adc
adc
pop
ffree
mov
aam
hlt
stc
inc
cdq
add
dec
inc
call
je
adc
xchg
push
(bad)
fimul
xor
mul
inc
lods
out
das
fnstcw
mov
scas
xchg
sub
in
sub
call
cdq
mov
inc
sbb
inc
or
xchg
out
adc
pusha
scas
cwde
xchg
or
mov
push
test
mov
ret
sbb
std
pop
or
and
mov
in
jb
repnz
fcom
lods
or
cmp
jle
mov
push
mov
dec
add
shl
out
dec
cmp
or
(bad)
cmc
inc
mov
stos
scas
(bad)
sbb
jp
or
loop
xor
jo
jmp
xchg
pop
mov
sbb
and
out
adc
dec
xor
loopne
xor
loop
inc
ret
jmp
mov
lods
in
in
inc
dec
push
ss
sbb
jmp
mov
sub
loop
popa
mov
mov
(bad)
mov
sub
push
cld
(bad)
mov
into
ss
push
lock
ins
int
fcomp
aaa
mov
fisttp
mov
and
sub
inc
daa
xor
cmps
pop
jg
lds
pop
fisttp
jle
adc
retf
xor
dec
pop
outs
pop
and
pushf
jecxz
cmp
imul
add
je
es
pop
aas
retf
stos
shr
or
movs
xchg
sar
hlt
clc
iret
mov
pop
sti
push
das
xor
mov
push
push
push
xchg
int3
push
adc
mov
push
pushf
out
xor
push
adc
es
fisttp
xchg
loopne
js
and
std
cdq
push
addr16
sub
out
or
or
mov
stc
sub
es
mov
sub
cmp
mov
adc
dec
xchg
hlt
repz
and
jo
lods
shr
sub
not
cli
mov
not
cli
mov
popf
push
into
mov
sbb
scas
aam
xor
das
xor
arpl
into
jl
push
mov
lds
mov
xchg
popa
call
arpl
fdiv
xchg
mov
fistp
or
sub
sub
stos
and
int3
push
pop
adc
mov
enter
nop
mov
in
mov
jns
retf
hlt
mov
xchg
add
and
or
push
(bad)
pop
idiv
enter
adc
adc
lods
movs
or
inc
mov
pop
lea
sub
fimul
imul
popa
xchg
add
mov
icebp
in
xchg
cs
icebp
xchg
nop
loop
mov
xchg
mov
out
cmp
or
rsm
prefetcht2
or
fld
outs
xchg
iret
xchg
sub
xchg
or
or
xlat
push
xor
inc
mov
jmp
leave
daa
cwde
jle
cs
push
clc
xchg
add
pop
icebp
fmul
jge
test
nop
add
dec
mov
pop
push
cmp
jae
shr
jecxz
push
jmp
ins
cmp
xchg
cs
mov
rep
jnp
retf
popa
add
retf
push
jno
mov
or
(bad)
cwde
sbb
add
idiv
inc
scas
loope
xchg
dec
and
or
inc
inc
jne
pop
popf
movs
sbb
sub
daa
outs
and
xchg
pop
cmp
adc
sub
int
and
daa
add
fcomp
in
xchg
jp
dec
push
mov
movs
lds
mov
test
and
pop
leave
sbb
pushf
mov
leave
xchg
and
jno
call
adc
pusha
fisttp
sbb
inc
test
retf
aas
mov
pop
outs
pop
repz
neg
imul
retf
mov
pop
mov
or
xchg
mov
push
sub
pop
mov
stos
jo
out
push
addr16
push
xor
mov
rcr
rcl
inc
cdq
or
int3
xor
iret
jp
sub
loopne
aaa
retf
push
jle
push
mov
pushf
mov
mov
(bad)
xor
xchg
mov
mov
dec
ret
retf
push
icebp
add
aas
call
xor
mov
iret
push
jl
mov
call
xor
repz
push
cmp
push
mov
push
adc
hlt
stos
enter
sbb
pushf
imul
add
inc
repz
add
hlt
or
jns
mov
adc
jne
mov
xchg
xor
(bad)
je
mov
ja
fnsave
ficomp
sbb
sub
pusha
(bad)
jmp
(bad)
xor
mov
cmps
retf
jp
aad
aam
sub
faddp
es
jmp
mov
call
adc
sub
sub
mov
mov
push
jb
(bad)
push
xchg
pop
out
inc
and
cwde
nop
arpl
imul
mov
push
sub
xchg
pop
pop
test
xor
sub
cmps
inc
and
push
sbb
in
xchg
loope
out
cwde
xor
xchg
and
aad
bound
xchg
nop
adc
pusha
popf
inc
scas
sbb
icebp
int3
add
shr
popf
jns
ds
xchg
jb
jae
dec
mov
and
jl
enter
add
rol
pop
sub
xchg
mov
jns
dec
js
pop
mov
inc
leave
sbb
dec
add
retf
test
into
enter
sub
push
add
inc
je
cmp
xchg
mov
jmp
repnz
jno
dec
aaa
movs
pop
dec
push
inc
push
push
mov
or
jge
pusha
cmp
or
mov
jae
push
and
(bad)
cmp
xor
inc
jecxz
xchg
adc
clc
cs
gs
inc
sbb
push
out
pop
push
adc
sub
cdq
addr16
pop
push
(bad)
xchg
xchg
cli
pop
pop
or
sar
pop
(bad)
std
scas
pop
je
pop
xchg
mov
mov
push
sahf
sbb
xchg
icebp
inc
in
sbb
xchg
and
jns
cli
out
or
and
loope
cmp
ret
arpl
daa
push
es
(bad)
in
jae
inc
es
fdiv
or
sub
mov
popf
out
call
gs
stos
pusha
add
inc
and
pop
paddusw
sbb
scas
xor
or
sahf
inc
add
or
fwait
cmc
retw
cdq
and
xlat
sub
jbe
(bad)
xchg
(bad)
lods
sub
inc
lds
pop
retf
adc
pop
add
mov
add
test
add
into
mov
inc
popa
sbb
xchg
arpl
outs
jne
and
retf
and
push
or
data16
and
in
mov
mov
mov
jbe
push
jb
mov
cld
popw
in
jb
jg
lods
mov
cmp
pop
fisub
mov
mov
cmp
shl
sbb
push
int
loopne
adc
pushf
rcl
dec
adc
dec
movs
or
(bad)
push
call
adc
mov
lods
dec
mov
ror
mov
outs
jno
mov
jg
cmps
std
test
hlt
sub
pop
lods
mov
(bad)
dec
dec
and
aaa
sub
jne
fild
pushf
mov
aam
fcom
addr16
popa
lahf
(bad)
pusha
sub
xchg
sbb
(bad)
sub
leave
add
xlat
sbb
addr16
fisubr
test
neg
fnstsw
movs
jae
pop
movs
test
movs
adc
popa
push
add
nop
push
cmp
jb
mov
jo
sub
sti
lahf
xor
out
adc
scas
aas
cwde
add
lds
push
mov
mov
dec
cmp
xor
stos
int
pop
xor
xchg
cmc
arpl
xchg
mov
jge
(bad)
jp
pop
sub
mov
push
loop
jbe
xchg
push
mov
sub
enter
cmps
fcom
xor
movs
sbb
clc
dec
jg
add
pop
jp
add
fwait
xor
mov
(bad)
mov
pop
int
ja
div
pop
mov
inc
sub
inc
jecxz
pop
xchg
jno
add
test
out
popa
cmp
cmp
push
mov
xchg
sbb
repz
xor
dec
movs
cld
cmp
pop
mov
xor
adc
cmps
inc
sbb
mov
adc
sar
adc
js
shl
cmp
aas
sub
out
(bad)
bound
add
dec
addr16
sahf
fimul
movs
adc
aad
ins
dec
in
sbb
jecxz
mov
pop
mov
mov
and
lea
test
mov
test
jb
jbe
mov
cmc
lods
movs
into
ficom
out
movs
in
pop
push
push
sti
ficom
fstp
xchg
out
push
aaa
retf
push
mov
jbe
push
xor
push
sub
jno
ficom
ja
mov
push
cdq
sbb
icebp
test
iret
mov
in
daa
or
and
(bad)
imul
fbld
imul
ret
outs
and
test
inc
imul
xor
loop
mov
mov
test
in
mov
iret
or
lock
ins
std
pop
test
and
dec
mov
xor
pushf
cmps
mov
cld
mov
retf
cs
ss
dec
mov
dec
(bad)
push
inc
inc
adc
jb
stos
out
movs
push
jno
in
push
dec
mov
cdq
lods
les
dec
adc
popf
adc
sub
push
mov
lea
call
pop
jle
mov
push
mov
sar
inc
(bad)
adc
pop
mov
adc
idiv
mov
xlat
data16
sti
sbb
jl
mov
or
daa
repnz
mov
push
(bad)
iret
or
cmps
popf
mov
jb
push
xor
dec
inc
and
inc
xor
(bad)
ss
mov
fist
into
xor
jno
imul
leave
retf
cdq
push
(bad)
push
pop
pop
push
(bad)
inc
call
fs
(bad)
daa
(bad)
add
ins
ror
mov
sbb
mov
fs
aad
add
push
xchg
mov
int3
(bad)
les
xchg
inc
cdq
(bad)
stc
adc
adc
out
mov
cmp
cmc
cmp
test
mov
test
nop
mov
out
ins
data16
lahf
or
loop
inc
dec
xor
sbb
adc
inc
add
xchg
inc
xchg
(bad)
aas
cmps
push
pop
daa
mov
movs
dec
add
in
aad
retf
rcr
pop
stos
pop
fsubr
cs
xchg
or
and
movs
rcl
and
push
jg
cmps
pusha
sub
dec
mov
jg
push
or
lahf
xchg
movq
pop
jle
inc
push
test
fisub
pop
jge
mov
adc
inc
push
mov
dec
das
push
sub
sub
(bad)
test
and
loop
inc
idiv
(bad)
xchg
xchg
gs
jb
gs
push
iret
sbb
jle
push
xchg
and
in
xor
mov
inc
out
pop
cmc
cmp
aas
addr16
es
(bad)
mov
add
pop
jb
and
imul
mov
adc
mov
fcom
mov
shr
lahf
stos
ror
cdq
and
les
arpl
dec
add
sar
mov
push
push
and
add
cwde
xchg
xchg
cdq
repz
mov
aas
ja
out
sbb
daa
ret
(bad)
xchg
dec
mov
add
pop
in
mov
call
sub
call
clc
sbb
push
or
shr
ror
xchg
or
fistp
adc
mov
jns
ss
sub
mov
retf
or
push
inc
push
mov
inc
jmp
mov
fs
xor
test
in
fild
pop
adc
loopne
mov
push
mov
mov
dec
push
dec
sub
add
nop
mov
pop
jbe
ins
fadd
push
jno
aam
sub
cmps
cmp
dec
xor
sbb
mov
jl
fs
push
cmp
hlt
fisub
aas
cmp
pop
adc
inc
movs
pop
xchg
mov
and
neg
stos
and
loopne
cmps
xor
push
daa
xchg
xchg
cdq
xor
arpl
popf
inc
es
aad
xchg
sub
adc
stc
in
push
shl
xchg
jmp
repnz
test
outs
dec
mov
or
shl
jl
adc
pop
lea
xchg
push
rol
iret
jg
cmps
inc
adc
dec
aad
or
xor
loop
cmps
push
aam
jmp
push
mov
fs
dec
pusha
inc
mov
xchg
lahf
out
jne
adc
jmp
jl
mov
jns
mov
push
cdq
inc
push
stc
mov
retf
add
adc
xchg
sbb
sbb
inc
mov
ins
repnz
mov
mov
sub
inc
or
xchg
cmp
aas
mov
fcomp
or
leave
std
(bad)
aaa
fmul
out
repz
add
push
jecxz
icebp
push
jae
lods
int3
mov
inc
aas
pop
out
push
and
mov
sub
add
sub
push
inc
scas
retf
xchg
push
retf
pop
rol
repnz
jb
dec
push
and
movs
cmc
mov
pop
(bad)
sbb
mov
lods
clc
pop
cmp
add
push
xchg
fucompp
daa
retf
sub
mov
xor
out
mov
adc
les
imul
pop
test
movs
pop
cwde
mov
or
out
fcomp
sub
cdq
or
loopne
jne
fld
push
jg
movs
cdq
fs
dec
mov
or
jo
(bad)
fisttp
inc
xor
dec
movs
in
adc
cwde
push
jb
sahf
sub
mov
(bad)
cmp
push
test
sbb
push
mov
lods
stc
retf
stos
sbb
pop
xor
aam
or
repnz
mov
mov
rol
movs
inc
lods
inc
jl
enter
jecxz
lods
dec
jl
test
pop
push
stc
int
inc
xchg
mov
ret
push
movs
das
and
adc
sahf
jp
(bad)
push
loopne
daa
jmp
inc
daa
xchg
cld
cwde
sbb
icebp
popa
dec
je
and
rcl
in
stos
add
jecxz
or
dec
jne
jge
push
js
pop
xchg
pop
jp
scas
jmp
stos
mov
pop
popf
lods
leave
mov
mov
data16
repz
lahf
or
dec
pop
cmps
add
imul
push
jo
rcr
push
xchg
sub
jne
jg
daa
dec
pop
push
daa
sub
je
movs
inc
(bad)
ret
leave
pop
sub
cwde
inc
scas
inc
mov
loop
or
xchg
mov
sbb
dec
dec
retf
mov
push
pop
mov
int3
dec
jp
cmp
jmp
inc
mov
dec
leave
push
mov
fsub
mov
mov
ins
mov
dec
outs
cmp
sub
mov
add
call
lock
leave
fcom
push
push
mov
mov
dec
cmps
adc
pop
sbb
pop
or
in
add
int3
and
xchg
dec
sub
pop
lods
lods
aad
mov
gs
inc
shr
addr16
dec
or
cmp
adc
xchg
xchg
dec
out
adc
cmp
jle
jl
iret
xor
mov
cmps
lahf
ficomp
mov
xchg
inc
call
dec
movs
aaa
fdiv
push
push
das
leave
pop
xchg
loopne
hlt
out
lea
jmp
mov
and
(bad)
iret
mov
mov
add
xchg
xor
shl
fcomi
stc
cmp
push
mov
sbb
xchg
dec
mov
(bad)
aad
jae
mov
dec
ret
out
or
push
cmp
mov
jo
shr
xor
int
mov
xlat
push
push
cmp
mov
push
fsubr
movs
mov
and
addr16
pop
mov
xchg
cmp
aam
and
ret
adc
bound
dec
lahf
and
inc
dec
mov
push
xor
and
retf
aaa
jg
dec
xor
cmp
or
ficom
dec
mov
jno
xor
inc
sub
mov
mov
xor
es
and
mov
(bad)
out
(bad)
fs
push
cmc
in
pop
je
jmp
mov
popa
xchg
outs
cmc
sub
inc
fs
out
sub
(bad)
call
cwde
test
or
push
inc
addr16
mov
add
jb
fdiv
jbe
jmp
cmp
pushf
jbe
push
movs
sbb
(bad)
int3
pop
adc
adc
or
(bad)
retf
jno
inc
cli
sbb
imul
mov
outs
xor
std
cmc
loopne
ins
inc
lahf
lods
aaa
out
or
and
pop
jne
mov
neg
sbb
mov
in
mov
or
scas
xchg
jne
(bad)
out
(bad)
push
mov
mov
pusha
xchg
jp
enter
dec
xchg
fst
aam
addr16
xchg
pop
repnz
or
mov
fwait
sub
sbb
sbb
and
jb
enter
inc
daa
xchg
inc
aaa
xrelease
retf
sub
inc
aam
pop
loopne
xor
arpl
ins
cmp
arpl
sub
lods
adc
xchg
imul
aaa
es
popf
repnz
xchg
(bad)
shr
xor
outs
add
sar
pop
iret
inc
sbb
out
jg
scas
dec
add
loope
pop
sub
or
mov
xchg
outs
jns
das
sbb
std
jne
arpl
mov
xchg
in
push
(bad)
push
cmps
inc
sahf
jbe
imul
sub
mov
cmp
aas
mov
mov
xchg
in
cli
inc
mov
mov
dec
into
xchg
jmp
clc
lods
inc
pop
mov
mov
cmp
or
call
add
rol
rcr
adc
cli
stc
rcr
and
dec
mov
(bad)
imul
sub
fstp
sub
retf
mov
and
out
inc
push
mov
fst
call
xor
dec
push
pop
xor
aas
hlt
test
(bad)
push
cmp
mov
nop
sbb
add
inc
div
pslld
loope
retf
in
outs
push
ja
pop
les
or
bound
in
inc
push
inc
jle
gs
mov
shr
in
add
pop
pop
mov
lods
out
mov
mov
sub
pop
xchg
lds
cld
ret
test
(bad)
ror
shl
rcr
in
xchg
cmp
daa
or
test
or
cmp
rol
loope
mov
fs
jo
xchg
mov
cli
cld
jmp
call
ret
add
mov
lahf
aas
and
and
xchg
jg
popf
(bad)
mov
add
xchg
mov
int
repz
jb
jno
les
jmp
and
pop
and
mov
or
inc
dec
xor
push
inc
xor
jle
xchg
mov
in
nop
sbb
mov
fs
fadd
cmp
retf
jmp
mov
retf
stos
pop
mov
data16
lods
sub
adc
push
(bad)
adc
push
pop
cmp
pop
cmps
leave
and
adc
cmp
(bad)
pop
dec
and
repz
mov
in
mov
adc
hlt
movs
add
push
adc
add
adc
shl
or
pusha
je
dec
clc
adc
xchg
and
imul
stos
inc
sbb
popf
adc
mov
rcr
mov
in
or
stc
xor
jge
xlat
sbb
xor
mov
arpl
dec
adc
mov
xor
call
mov
dec
or
leave
sahf
sti
or
cli
jae
sbb
data16
and
mov
les
mov
or
xchg
jb
jb
dec
inc
nop
or
jae
mov
xchg
ins
mov
xor
cmp
or
mov
mov
mov
in
mov
int3
mov
cli
sti
push
popa
push
and
sub
xor
std
repnz
mov
xchg
adc
sbb
mov
jge
mov
sub
sbb
loope
or
in
test
dec
fisubr
cmp
enter
dec
(bad)
mov
adc
xchg
leave
cld
popa
gs
fcomp
inc
dec
mov
shl
jno
stc
out
mov
mov
cli
outs
xor
(bad)
hlt
(bad)
hlt
and
xchg
ja
or
add
sub
inc
xor
call
mov
repz
sbb
das
cmp
xor
int3
mov
push
mov
push
add
(bad)
xchg
(bad)
mov
push
jge
jmp
push
jno
mov
mov
sub
add
xchg
dec
hlt
sub
mov
test
push
imul
loop
dec
call
mov
sbb
stos
push
popf
dec
lds
mov
repz
movs
xor
stc
cld
push
sub
retf
popf
cmc
xor
gs
cli
leave
dec
jle
add
clc
aam
aas
cmp
(bad)
cmc
adc
rol
fcomip
in
sti
aam
cdq
test
mov
add
add
or
stos
and
movs
test
dec
mov
cmp
mov
and
out
add
lea
or
dec
jmp
in
dec
pop
adc
out
(bad)
rcl
mov
or
and
sub
ins
int3
mov
pop
or
adc
jnp
jne
gs
push
xchg
or
or
lods
or
xor
pop
mov
sub
pusha
ins
xchg
jmp
sar
(bad)
retf
lods
fdiv
ins
sbb
add
je
mov
pop
push
xchg
int3
or
and
or
xchg
inc
push
rcl
mov
ins
in
pop
and
iret
bswap
dec
in
rol
stc
xchg
pop
(bad)
jl
rcl
add
nop
fdiv
xchg
shl
out
cmp
sub
(bad)
xor
inc
mov
(bad)
aas
jns
test
push
pop
cwde
push
jnp
clc
xor
push
cmp
stc
mov
es
mov
xchg
ins
sub
adc
leave
jl
mov
daa
pushf
pop
adc
in
jb
test
dec
test
push
push
xor
jae
fst
jns
pop
dec
cmps
data16
sbb
inc
shr
mov
jp
push
and
stos
out
(bad)
rcr
int3
shr
xor
(bad)
pop
test
stos
arpl
mov
and
dec
dec
call
mov
mov
jmp
xor
xor
mov
scas
cmp
sar
jns
xchg
test
adc
aas
cmp
push
inc
sbb
repz
dec
jl
add
jl
std
jns
mov
call
inc
jle
cwde
xchg
sbb
rol
cmc
inc
cmp
push
mov
xor
mov
fstp
cmc
aam
pushf
sbb
(bad)
repnz
mov
push
out
dec
mov
es
push
mov
and
mov
and
call
xlat
jb
xchg
jmp
mov
out
push
cmps
jecxz
dec
inc
mov
cmovbe
aaa
mov
pop
int3
into
cmp
add
lea
adc
and
retf
add
push
mov
or
add
gs
pushf
inc
or
es
pushf
xor
cld
mov
ret
idiv
add
sahf
inc
adc
adc
movs
dec
mov
stos
jle
inc
cmps
xchg
bound
pop
cmc
dec
es
fstp
xchg
daa
or
shl
mov
sbb
inc
je
xchg
(bad)
rep
inc
or
pop
(bad)
fisub
ins
xor
lods
push
fadd
les
or
sahf
sbb
pop
jmp
xchg
(bad)
lahf
push
gs
mov
or
push
(bad)
pusha
mov
mov
jbe
push
mov
adc
stc
in
inc
mov
push
ret
iret
inc
ins
add
xchg
mov
sbb
lock
mov
mov
inc
test
imul
sar
add
push
ret
clc
pop
jo
out
adc
ret
es
xor
pop
in
cwde
call
and
clc
xchg
js
out
cmp
aaa
std
add
jg
xor
daa
inc
cdq
hlt
jge
fmul
cdq
icebp
add
xchg
call
stos
lods
adc
retf
ret
stos
sub
xor
adc
test
adc
scas
pop
jp
dec
data16
ret
(bad)
sbb
inc
xchg
jns
mov
inc
xor
pop
cmp
test
jb
add
adc
lods
mov
sbb
pop
fsincos
mov
jle
mov
(bad)
mov
inc
scas
inc
push
mov
push
lds
add
lds
push
mov
retf
mov
cmp
movups
dec
adc
mov
fadd
mov
rcr
mov
adc
adc
mov
xor
call
add
retf
dec
mov
adc
dec
mov
xchg
sub
add
mov
popf
adc
test
push
sar
push
inc
adc
mov
mov
out
cmps
mov
adc
cdq
xor
aas
test
clc
and
jne
jg
sub
fcomp
sbb
sub
jno
sbb
ret
stos
dec
scas
pop
fnstsw
addr16
push
inc
add
or
pushf
iret
cld
xor
test
mov
pop
cmp
cdq
mov
in
movs
dec
push
cmps
push
jb
fld
adc
scas
xchg
mov
mov
test
mov
aad
jbe
jp
mov
add
pop
mov
into
add
cmp
xchg
cmps
pop
sub
sub
inc
mov
leave
and
sub
xor
sbb
jg
inc
mov
xchg
push
icebp
push
movs
cld
arpl
xor
adc
dec
(bad)
daa
inc
sbb
sub
mov
les
imul
mov
jb
sub
mov
or
je
call
ja
push
int
sbb
dec
imul
icebp
lds
aam
mov
scas
mov
ins
daa
retf
adc
cmp
xor
sbb
(bad)
fstp
out
mov
(bad)
dec
movs
add
add
and
push
cmp
int3
xchg
mov
xchg
sbb
adc
ret
sbb
das
push
inc
popa
cmps
add
pop
or
or
jmp
push
jb
adc
xor
aad
scas
xchg
leave
mov
push
sbb
mov
mov
sub
jp
push
xor
mov
ret
daa
cmp
mov
int
leave
mov
push
inc
jno
xchg
leave
jo
xor
or
mov
push
retf
xchg
movs
int3
xor
sbb
test
test
xchg
adc
sub
sub
jle
push
and
pcmpgtw
xchg
movs
mov
addr16
pop
cmp
shl
and
aam
pusha
xor
stc
stos
inc
xchg
daa
in
push
cmpxchg
in
sub
dec
dec
(bad)
xor
sub
xchg
cmp
cmp
jg
jmp
cdq
icebp
inc
mov
hlt
out
inc
retf
sbb
jo
mov
mov
cmps
cs
inc
movs
mov
ret
ficomp
ss
push
outs
into
(bad)
lahf
ret
or
pop
out
inc
movs
jp
clc
xor
mov
or
or
mov
jb
leave
push
and
xchg
jp
xor
inc
mov
pop
jg
xchg
mov
push
jns
and
jne
or
mov
xchg
ss
cli
add
nop
xor
call
push
xor
push
mov
(bad)
and
add
call
data16
into
hlt
loope
js
mov
sahf
jbe
and
cdq
xor
mov
push
arpl
cmp
and
test
retf
rcl
or
jno
int
cmc
jae
ss
out
add
nop
fstp
or
xchg
loop
jo
xchg
sbb
xor
sbb
xor
and
xchg
inc
xor
sub
sub
(bad)
mov
pushf
adc
inc
jnp
iret
sub
movs
sub
daa
jae
adc
ss
sub
xor
sbb
lock
sbb
sbb
or
mov
jnp
test
mov
xlat
loopne
rcr
cmps
xchg
imul
fdiv
add
sbb
jno
add
or
adc
and
daa
push
pop
jecxz
inc
sbb
jecxz
add
dec
push
jmp
xchg
mov
and
rcl
adc
pop
sbb
ror
push
imul
push
in
dec
(bad)
xor
in
dec
stos
loopne
xor
rcl
shl
push
xchg
outs
push
es
stc
xchg
js
into
repnz
pusha
ror
ret
pop
add
shl
fstp
jge
fsub
pop
fisttp
xor
repz
pusha
jp
mov
(bad)
sub
sub
lods
sub
test
out
in
shl
sbb
mov
pop
inc
shl
dec
std
jbe
arpl
repnz
je
adc
pop
pop
sub
data16
call
daa
dec
jmp
leave
adc
mov
adc
lods
imul
aad
enter
pop
cmp
adc
mov
jl
shl
mov
jae
push
xor
aad
(bad)
and
cmp
(bad)
xor
xchg
sub
mov
inc
fwait
daa
dec
call
xchg
jmp
mov
xchg
xor
push
push
push
xchg
push
inc
vmovntdq
aam
int3
xchg
pop
pop
jl
cdq
xlat
int
mov
in
fs
sbb
ins
shl
cdq
and
daa
movs
or
mov
cmp
std
imul
shl
add
dec
scas
cmp
push
add
cmp
lock
shl
inc
fdivr
ins
daa
add
push
xchg
cmp
inc
mov
inc
(bad)
(bad)
cli
jns
aaa
std
imul
xor
add
(bad)
jmp
xor
push
(bad)
int3
pop
shl
pop
ret
leave
mov
push
jo
pop
pop
jno
mov
(bad)
loope
loop
leave
and
fs
imul
cmp
aaa
inc
pop
jno
cmps
push
adc
fidiv
call
push
in
inc
nop
das
jmp
adc
dec
es
shl
aaa
and
pop
loope
pop
popf
add
and
shr
imul
mov
adc
mov
inc
test
pushf
(bad)
adc
jl
mov
cmc
ret
lea
sbb
cdq
and
dec
pop
call
lea
int
cmps
rcl
push
data16
dec
cmp
out
cmp
mov
jo
add
call
fabs
aam
add
cld
xchg
xchg
mov
fcom
dec
xchg
pop
inc
push
adc
xor
push
sub
test
(bad)
loop
xchg
in
sbb
adc
sub
push
and
imul
adc
sbb
test
outs
dec
ror
mov
sbb
jp
jge
add
pop
shl
mov
loop
enter
pop
pop
xchg
movs
jle
sub
xchg
pushf
push
retf
push
movs
dec
pushf
dec
mov
movs
outs
scas
dec
xchg
add
jnp
jmp
pop
and
push
push
call
mov
test
mov
(bad)
out
pop
into
pop
fstp
jle
add
pop
es
cmc
mov
icebp
inc
jno
and
ds
cmp
call
call
adc
xchg
rcr
dec
mov
in
add
adc
fidivr
cmc
leave
std
cli
add
mov
rcr
mov
cmp
inc
cmp
inc
mov
sahf
das
add
inc
xor
sub
cmp
cdq
cmovl
test
test
mov
jecxz
dec
stc
stos
push
dec
into
jl
test
inc
or
and
stos
inc
sbb
push
sub
retf
mov
stos
mov
test
cmp
rcr
dec
pushf
rol
adc
sub
call
add
cmps
lds
pop
jnp
cmp
lahf
sub
adc
int
add
(bad)
ret
es
jle
call
das
and
fld
cwde
pusha
in
dec
and
sbb
int3
mov
jmp
pop
cwde
and
xchg
mov
add
sub
and
pop
inc
mov
cdq
or
mov
sbb
add
bound
cld
dec
aaa
sub
xor
xchg
pop
hlt
xor
push
push
dec
ret
mov
pop
and
lea
fimul
inc
cdq
fdiv
outs
cmp
retf
or
or
sbb
les
add
sub
push
lods
jns
ficom
sub
call
pop
retf
sub
xchg
or
retf
pop
xor
xchg
xor
mov
aam
es
lds
mov
xor
sub
xchg
stos
xchg
dec
push
or
mov
mov
les
and
es
mov
test
(bad)
lds
push
mov
jmp
adc
pop
xlat
xchg
mov
xor
xchg
je
sub
mov
pop
pop
mov
inc
xor
shl
push
adc
jecxz
jne
or
cld
or
sub
aaa
popf
stc
pop
mov
daa
retf
shl
and
loopne
dec
mov
jecxz
loop
test
jl
das
jecxz
mov
lods
inc
lods
xchg
sub
mov
sbb
jmp
test
cwde
fldenv
sub
ficom
sub
cmp
push
add
cwde
(bad)
push
daa
push
cmps
int3
add
inc
push
in
sbb
inc
dec
jbe
mov
xchg
sub
push
pop
adc
ret
shl
pusha
mov
test
xor
adc
add
sub
jmp
sub
ret
push
and
inc
shr
cld
shr
loopne
fsub
rdmsr
adc
ror
dec
ret
sbb
xor
jne
inc
xchg
hlt
movs
icebp
inc
shl
adc
inc
and
iret
pop
sbb
sahf
leave
sbb
shl
push
cdq
xchg
jbe
adc
inc
adc
jmp
push
movs
lods
inc
cmp
pop
mov
sub
fs
and
arpl
mul
jl
cld
pop
outs
push
sub
inc
sbb
test
nop
icebp
les
jle
xor
std
mov
inc
cli
fbstp
fs
es
hlt
stc
mov
push
pop
cmp
retf
inc
cmp
adc
mov
stos
hlt
jp
jnp
mov
mov
and
mov
or
rcr
out
push
inc
pop
cdq
sub
inc
leave
sbb
dec
shl
int3
inc
and
imul
and
nop
dec
rcl
inc
ficom
inc
test
retf
mov
or
sbb
push
push
hlt
dec
jecxz
and
fstp
push
push
shl
movs
(bad)
stos
ins
mov
pushf
(bad)
cs
pop
jmp
xchg
dec
pop
outs
daa
sbb
test
inc
cli
xor
js
pop
jmp
inc
mov
ret
nop
lahf
leave
test
or
cmps
inc
fwait
movs
or
sub
nop
add
add
loop
out
add
in
push
or
cmp
jns
jl
jmp
stos
mov
enter
sbb
dec
mov
shr
mov
out
cmp
mov
popa
bound
mov
int3
adc
in
jmp
fwait
sbb
addr16
arpl
daa
jae
mov
xchg
lahf
dec
dec
sub
xchg
and
imul
iret
sub
fs
and
sahf
test
cmp
pop
pop
sbb
mov
in
sub
xlat
xchg
jmp
jns
shr
cmp
xchg
sub
push
xor
sub
cmps
ret
sub
je
inc
retf
inc
mov
sahf
ret
cmp
fdiv
stc
pop
ins
xchg
fwait
mov
sahf
imul
cmp
add
jmp
(bad)
cdq
or
push
adc
pop
cmovo
push
mov
xor
mov
and
jl
jg
data16
fist
test
xor
pop
retf
pop
data16
in
push
fdivr
inc
mov
stc
cmp
pop
push
fnstsw
mov
add
cs
xlat
sbb
dec
test
iret
or
fild
sub
or
xchg
push
pop
iret
xor
xchg
lds
nop
xchg
enter
repnz
xor
(bad)
loop
cmps
jbe
xor
(bad)
out
test
pop
mov
(bad)
cmc
mov
rol
push
xor
xor
add
std
mov
push
mov
mov
movups
sub
shl
adc
xchg
pop
jb
sub
xor
xlat
dec
adc
add
rcl
js
iret
loopne
outs
cmp
sbb
aaa
bound
mov
mov
jno
xchg
outs
in
jl
(bad)
leave
(bad)
call
dec
clc
add
pop
or
and
imul
jg
repnz
(bad)
jl
mov
hlt
rcl
push
or
imul
jmp
xor
gs
scas
loopne
jecxz
retf
mov
sbb
xchg
and
inc
sbb
in
in
shl
mov
stc
loope
push
test
(bad)
into
push
ins
(bad)
ficomp
sub
ret
add
ror
add
pop
or
scas
hlt
sub
dec
mov
mov
hlt
ret
loope
jbe
inc
mov
pusha
repnz
in
pop
jle
cmp
mov
pop
cmp
jns
cli
(bad)
dec
or
ins
adc
rcr
mov
push
imul
dec
sub
cmp
inc
int3
call
mov
cmps
fiadd
aad
push
sub
inc
jb
pop
jle
shl
(bad)
lock
xchg
dec
test
xchg
bound
lock
test
add
mov
dec
sub
pop
test
or
ss
rcr
scas
or
jp
xor
cmp
mov
leave
and
and
mov
or
popf
retf
xchg
and
imul
iret
icebp
js
scas
dec
jg
aaa
mov
(bad)
add
mov
jle
sub
dec
nop
pop
sub
addr16
jecxz
ss
cld
and
mov
inc
pusha
pop
cli
push
lahf
dec
xchg
fs
xchg
daa
cmps
retfw
into
fmul
cmp
inc
inc
data16
sub
aad
stos
mov
addr16
mov
(bad)
mov
push
or
jg
jle
pop
aad
jmp
stos
popa
mov
inc
leave
shl
cmp
fdiv
loope
outs
cld
dec
aaa
loop
scas
inc
(bad)
(bad)
mov
cmps
loope
ret
test
leave
sbb
or
and
nop
das
imul
add
pop
mov
mov
xor
jnp
cmps
dec
retf
sub
mov
movs
xchg
rcl
sub
cmp
scas
jne
jns
cld
(bad)
test
inc
sbb
arpl
adc
push
mov
int
hlt
jle
inc
stc
pushf
fld
rcl
sub
xor
ss
inc
iret
pop
outs
retf
repz
xlat
stos
outs
jp
test
cmp
fnstenv
ret
bound
add
test
or
(bad)
in
inc
adc
lea
loop
fcomp
cmp
stos
ins
rcl
mov
push
lea
inc
(bad)
shl
pop
jle
adc
or
daa
push
leave
jle
icebp
ss
inc
ret
gs
adc
pop
(bad)
int
lods
and
lea
dec
cmp
fcmovb
mov
sbb
cdq
enter
mov
call
xlat
inc
sbb
push
aas
push
or
jg
pusha
jl
(bad)
fimul
std
shr
lea
cld
dec
aaa
pop
pop
movs
inc
imul
pop
lea
xchg
in
sub
push
loope
or
cmp
inc
movs
add
xchg
and
lds
lock
pop
inc
sbb
test
lods
cmc
out
dec
std
push
(bad)
iret
pop
(bad)
aas
jg
sti
aas
jge
sti
mov
in
jg
sar
lahf
mov
inc
inc
xchg
dec
addr16
in
sbb
enter
std
stc
rcl
retf
mov
xor
neg
mov
sub
sbb
jle
mov
aas
adc
mov
aaa
out
cmp
fnstcw
cdq
pop
loop
pop
leave
mov
and
add
push
(bad)
popa
(bad)
or
int3
sti
movs
xchg
pushf
mov
out
sbb
cmc
lods
fisttp
mov
push
shl
ret
mov
imul
sbb
pushf
idiv
or
xchg
int3
dec
idiv
mov
pop
ja
es
jle
(bad)
jmp
jmp
out
cld
popf
sbb
inc
dec
or
out
js
test
loope
push
ins
addr16
daa
inc
test
xchg
out
sahf
dec
pop
shl
mov
scas
daa
mov
mov
pop
clc
mov
jmp
rol
rol
mov
adc
mov
pop
jno
sub
mov
and
mov
in
pop
popf
lea
sbb
mov
push
inc
inc
mov
jle
imul
and
jbe
fild
(bad)
shl
loopne
mov
daa
mov
pop
retf
jmp
bound
call
add
cdq
push
inc
shr
dec
push
sub
xor
and
inc
or
cmps
push
ja
jmp
hlt
pushf
jge
sbb
fadd
addr16
xor
sub
xchg
cmp
push
jge
gs
out
push
push
adc
mov
js
or
fwait
sbb
inc
gs
or
clc
jmp
sub
sbb
dec
and
cs
xor
idiv
pop
xchg
std
cs
sbb
(bad)
rcr
out
jne
(bad)
call
add
pushf
scas
cmps
pop
xor
sbb
mov
scas
xlat
jmp
jle
jp
mov
(bad)
cmp
jne
imul
mov
sar
pop
pop
push
mul
mov
mov
sbb
addr16
sbb
and
(bad)
loopne
cmc
jbe
xchg
arpl
xchg
mov
push
pop
ds
sub
xchg
inc
sub
je
or
mov
fisttp
cli
cmps
(bad)
jg
int
lahf
fucomip
scas
mov
cmps
mov
pop
jns
scas
and
and
shl
pop
fisttp
sub
lods
add
push
or
addr16
sub
sub
out
fwait
mov
mov
scas
sub
loop
pop
dec
adc
mov
jbe
cmps
ins
rcl
stos
adc
pop
xor
ss
mov
repz
jle
lea
lds
dec
mov
cmps
inc
ds
test
jmp
fiadd
fisub
sbb
pop
sar
xchg
test
or
bound
neg
retf
mov
das
xchg
mov
lahf
sbb
repz
clc
pop
rcr
add
jnp
mov
aas
or
cwde
sub
fisubr
pop
dec
fwait
jg
push
cmps
mov
fbstp
in
push
iret
sti
fst
arpl
inc
mov
fldcw
sbb
inc
das
test
push
and
or
fdiv
nop
xor
xor
test
aad
div
imul
fwait
or
push
mov
aad
(bad)
iret
icebp
or
cmp
cmp
add
dec
jmp
pop
(bad)
xchg
pop
dec
pop
or
and
test
gs
clc
dec
cmc
inc
mov
inc
xchg
sub
lods
sbb
(bad)
sub
retf
adc
add
hlt
pop
fdiv
and
mov
jge
out
cmp
scas
mov
xchg
popf
push
sbb
mov
outs
sub
push
mov
mov
mov
dec
push
retf
mov
xchg
xchg
mov
lds
sbb
repz
je
bound
js
lea
mov
jl
pop
xchg
ins
sub
push
add
sub
or
push
sbb
mov
xor
mov
dec
stos
rcr
leave
xchg
pop
(bad)
jmp
pusha
pop
out
xchg
fcom
stos
lock
jns
mov
cmove
sub
add
aam
pop
sbb
xchg
sub
dec
in
xor
pop
xchg
outs
scas
sub
ins
adc
out
pop
arpl
adc
cmp
mov
outs
xchg
adc
aad
push
popf
out
lahf
ins
cld
jmp
xor
sbb
pop
icebp
push
jmp
fisttp
cdq
mov
je
mov
add
inc
add
ins
adc
sub
mov
pop
les
fwait
(bad)
mov
pop
idiv
(bad)
pop
lods
push
mov
mov
scas
(bad)
inc
in
jbe
cmp
jae
xchg
add
adc
ja
retf
pop
fist
inc
or
sub
xor
jmp
mov
add
cld
or
mov
jg
ror
pop
cmp
les
dec
push
push
pop
test
movs
inc
pop
or
xor
lock
mov
mov
(bad)
fild
mov
jns
cmp
mov
adc
dec
jmp
(bad)
adc
cs
aas
mov
call
cli
adc
outs
mov
aam
es
dec
and
icebp
mov
cmp
ds
fs
adc
jle
(bad)
stos
inc
mov
mov
pop
xchg
nop
nop
push
push
in
das
jl
fcom
add
mov
inc
out
in
cmp
iret
add
sbb
sahf
dec
out
dec
neg
xchg
div
rol
das
sar
pop
cli
into
out
pop
loope
ins
test
jge
scas
mov
es
shl
sbb
cmp
mov
adc
mov
xchg
cmp
xchg
(bad)
enter
sub
push
inc
pop
pop
jns
xchg
jns
sub
or
or
push
sbb
dec
popf
pop
jecxz
btr
iret
mov
test
xchg
pop
add
mov
pop
sbb
push
jl
jns
sub
jno
sub
lahf
inc
xchg
xor
ins
or
sahf
jae
ja
add
ja
lea
test
cmps
pop
es
test
sub
xor
ins
imul
ss
not
loop
enter
xchg
xor
cmc
add
inc
adc
or
mov
fs
int
cs
inc
sbb
jae
cmps
stc
scas
sbb
fdivr
mov
mov
fucom
push
dec
lds
pusha
out
sub
push
dec
mov
shr
in
lods
call
(bad)
loopne
mov
mov
inc
addr16
call
dec
test
xchg
sbb
dec
ss
xchg
dec
fmul
loope
push
fwait
mov
inc
ja
lock
mov
(bad)
test
idiv
ins
addr16
mov
jge
mov
ins
test
sahf
cld
loope
push
cmc
mov
xchg
rcl
lock
sub
orps
mov
inc
jg
push
inc
sub
int
mov
mov
dec
mov
cdq
dec
adc
xchg
imul
dec
sti
lea
mov
std
mov
stos
out
mov
ret
aam
sbb
mov
xor
aaa
push
loop
adc
rol
cmp
adc
ins
je
bound
or
ficomp
in
popf
and
push
(bad)
aam
inc
outs
sbb
movs
sub
dec
arpl
dec
dec
jmp
xor
add
mov
shr
xchg
inc
jp
in
ds
sub
mov
pop
aam
mov
sub
retf
or
jo
hlt
jb
mov
xchg
ins
(bad)
mov
jnp
fs
adc
xchg
mov
or
push
push
sub
dec
mov
mov
and
daa
adc
jmp
movs
jns
push
or
push
cmp
push
mov
xor
pop
jmp
daa
inc
shl
cmp
test
mov
jb
cmc
jbe
xor
sub
and
int3
xor
out
pop
mov
dec
fcomp
jp
jnp
jmp
ret
mov
lds
xchg
jg
cmp
dec
sub
aaa
jecxz
std
and
jae
test
cwde
or
enter
and
cvtps2pi
xor
inc
sbb
mov
xchg
jae
data16
(bad)
js
add
push
dec
repz
gs
outs
mov
mov
xchg
lock
jae
jecxz
retf
retf
sub
adc
out
(bad)
mov
mov
mov
sub
in
enter
cmps
sbb
arpl
sub
or
int3
dec
or
and
scas
stc
pop
cmp
daa
ror
add
aad
mov
dec
mov
xlat
adc
(bad)
sub
(bad)
loopne
add
mov
js
add
mov
jge
cmp
stos
xchg
aaa
outs
in
jno
mov
or
adc
adc
cmps
sub
iret
xchg
mov
mov
aaa
jae
sar
gs
and
or
test
push
add
push
(bad)
lock
outs
push
fdivr
lahf
jb
jae
mov
out
dec
or
popa
(bad)
rcr
ins
xor
shl
enter
xchg
sbb
push
cli
scas
push
push
xchg
dec
pop
sub
adc
inc
ins
lods
adc
or
sub
cmp
fwait
rol
mov
push
sub
lods
sar
retf
push
ret
call
push
rcr
lock
and
pop
cs
mov
mov
add
out
inc
rcr
sbb
xchg
fimul
xchg
and
out
inc
bound
push
sbb
inc
sbb
cmp
hlt
sub
fsubr
and
or
add
int3
sub
jmp
jle
cli
cmps
dec
mov
(bad)
mov
js
ret
ror
inc
test
fwait
or
or
sbb
cmp
fisttp
xor
jne
cs
pop
jle
retf
mov
jns
stos
sti
(bad)
out
idiv
cld
f2xm1
fistp
cmp
cmc
(bad)
jne
inc
out
adc
mov
into
lods
mov
pop
sbb
cwde
push
xchg
add
das
cmp
fadd
xchg
mov
pop
fucomip
mov
or
cld
adc
stc
or
or
adc
fcmovnu
std
and
popa
jl
sbb
cli
lods
mov
jno
xchg
inc
in
adc
mov
dec
pushf
(bad)
shr
loopne
jp
gs
movs
pop
imul
jmp
jl
fwait
sar
stc
scas
sbb
pusha
cmp
cmps
xor
and
adc
outs
inc
mov
ds
js
scas
stc
lods
fidivr
xchg
rol
cwde
or
popa
aaa
sahf
or
cli
sub
mov
push
sbb
test
adc
dec
and
xor
ds
cmp
(bad)
push
push
mov
adc
(bad)
push
sbb
mov
adc
xor
data16
and
std
les
retf
mov
das
mov
lods
addr16
cmp
jg
test
popa
adc
aaa
retf
fs
fcmovnbe
cs
or
xchg
das
lods
cmp
cmovg
inc
cdq
dec
loopne
stos
test
add
pop
gs
pop
shr
pop
mov
mov
arpl
gs
(bad)
adc
out
fist
and
jne
cli
lods
adc
xlat
stc
jl
aas
pop
lds
smsw
xchg
repnz
or
ror
out
cmp
mov
jmp
cli
fimul
adc
jl
push
out
cmp
(bad)
jl
daa
lar
fwait
(bad)
clc
pushf
xor
je
dec
sbb
add
add
inc
scas
mov
xor
jp
push
sar
fld
cmp
imul
xchg
xchg
add
add
add
push
and
push
sub
loopne
or
add
jns
adc
mov
dec
movs
xor
and
sub
cmc
and
pop
scas
push
push
jg
mov
sbb
fcom
pop
push
sub
std
loopne
dec
ret
cdq
inc
mov
retf
arpl
in
daa
xchg
and
jb
je
mov
mov
cmp
ret
jmp
dec
dec
arpl
test
iret
cld
pushf
push
lds
out
lods
jmp
inc
push
test
sub
push
cli
jo
jle
fdivr
sti
cmc
mov
and
(bad)
adc
xor
sete
xor
dec
mov
push
pushf
adc
leave
mov
ret
inc
xchg
outs
aas
popf
jg
mov
(bad)
(bad)
jne
fistp
neg
ret
push
test
fistp
cmps
std
dec
sahf
fdivr
xor
dec
push
xor
jb
dec
push
mov
cwde
enter
push
mov
pop
mov
sbb
cld
dec
inc
retf
imul
adc
pop
aad
fsubr
pop
mov
(bad)
mov
dec
retf
into
out
jnp
(bad)
jl
addr16
leave
pop
xor
push
dec
fsubp
adc
sti
sub
xchg
mov
mov
ss
int
cmps
shl
cs
neg
popf
es
lea
mov
mov
aad
add
fidiv
loop
fimul
fnsave
outs
into
pop
add
xor
enter
jle
ja
les
sbb
fld
outs
or
mov
je
imul
push
or
pushf
xchg
xor
inc
and
adc
sub
ja
jb
mov
daa
loope
ret
mov
stos
fisttp
(bad)
mov
in
(bad)
xchg
clc
test
popa
std
jle
fisttp
push
add
xchg
inc
mov
cmps
jno
cmc
pop
sbb
push
icebp
inc
retf
pop
pop
pop
(bad)
enter
test
data16
xchg
adc
rol
adc
or
cmp
loope
adc
(bad)
stos
xchg
sub
pop
repnz
xor
stos
pop
stc
movs
out
imul
fwait
inc
dec
sub
inc
xchg
mov
xor
jmp
bound
dec
fwait
jle
push
push
retf
sbb
(bad)
sbb
push
jne
sub
jno
mov
shl
push
sub
ror
sub
gs
cmp
movs
pop
mov
cmp
fsubr
fwait
sar
mov
cmc
aaa
xchg
mov
and
dec
mov
test
or
repnz
mov
ror
fstp
xchg
adc
xchg
xor
push
inc
xor
inc
inc
push
test
lds
xor
mov
dec
outs
aam
rcr
add
sbb
jge
mov
mov
xor
mov
dec
aad
inc
cmc
in
in
push
retf
pop
mov
add
dec
push
cli
retf
bound
gs
jb
mov
sbb
pop
out
mov
test
sub
xor
repnz
pop
test
push
dec
dec
or
arpl
sub
mov
lahf
push
nop
mov
or
les
push
sub
int
test
sbb
pusha
and
inc
test
jecxz
mov
stos
cmp
inc
mov
jp
test
sub
xchg
retf
test
sti
mov
adc
sahf
(bad)
sahf
push
mov
cmp
xchg
inc
ds
std
pop
jl
(bad)
xchg
stos
push
adc
sub
adc
rcl
sbb
arpl
shl
ins
es
(bad)
aam
ret
pop
jnp
jmp
jbe
(bad)
scas
xchg
stc
jge
out
fmulp
jbe
push
scas
aas
cmp
sub
sub
mov
mov
outs
dec
jp
pop
push
mov
pop
sar
and
push
rcl
or
movs
(bad)
push
pop
pop
retf
mov
out
jecxz
jnp
aaa
sti
add
iret
imul
and
sub
inc
cld
push
xchg
jae
mov
ins
xchg
xor
dec
psrld
mov
daa
je
dec
xchg
pusha
inc
fld
mov
retf
(bad)
xor
sbb
les
sub
aaa
dec
(bad)
push
fimul
fnstsw
push
jge
mov
iret
pop
dec
cmc
das
add
xchg
and
rol
sub
mov
fmul
adc
aaa
test
adc
cmps
sub
push
push
retf
cmps
retf
test
lock
mov
shr
xor
inc
sbb
enter
aaa
imul
les
xchg
ret
addr16
sub
out
xchg
ins
shl
rcl
jmp
xchg
jecxz
mov
(bad)
mov
sti
xchg
ja
clc
(bad)
mov
fstp
mov
repz
xor
jg
hlt
stc
mov
cdq
xchg
data16
xor
mov
test
jecxz
inc
lea
mov
xor
mov
adc
mov
xchg
(bad)
sahf
add
add
jnp
mov
sbb
jmp
out
mov
test
pushf
dec
int3
pop
or
add
and
add
retf
push
or
shl
fisttp
jo
adc
push
cmp
inc
inc
push
rcr
and
cmp
lds
mov
jecxz
(bad)
dec
(bad)
call
xchg
xchg
in
test
pop
js
retf
pop
cdq
xchg
add
fld
and
or
and
js
add
repnz
and
cld
ror
ja
stc
imul
push
xchg
dec
xor
lods
or
sbb
in
xor
cmp
bound
jne
push
sub
test
or
pop
xor
cli
aas
scas
push
inc
and
cmc
push
cmp
cmp
jb
stos
mov
xchg
or
(bad)
(bad)
jo
movs
cwde
movs
xchg
inc
push
test
data16
xchg
mov
lds
repnz
xor
cmp
fstp
call
adc
xchg
pop
stos
push
idiv
gs
pop
pop
xlat
(bad)
inc
(bad)
(bad)
cmp
mov
cmp
jmp
ss
sub
sbb
ficom
cdq
cmp
call
sahf
push
cli
adc
bound
adc
or
mov
leave
dec
out
hlt
das
fucomip
cld
in
clc
xchg
mov
lahf
mov
sbb
les
std
das
fucomip
in
lods
cmps
int
shr
call
popf
jmp
and
mov
lods
mov
inc
in
pop
xchg
mov
push
loop
mov
cmp
jmp
mov
add
xchg
push
retf
test
sub
ret
or
bound
sbb
or
cmp
lods
jbe
dec
mov
test
lods
xlat
movs
xor
xor
or
mov
dec
fbstp
retf
jmp
pusha
test
push
movs
inc
mov
sbb
fnstsw
fldl2e
dec
push
test
sub
enter
inc
mov
mov
xor
jno
mov
(bad)
movs
fild
imul
push
mov
sbb
nop
loopne
mov
les
retf
sbb
ret
test
ret
or
fisttp
std
jp
push
ja
xor
imul
imul
pop
sti
loope
ja
aas
not
dec
push
inc
icebp
mov
push
in
sar
scas
inc
iret
outs
add
jmp
retf
cs
inc
sub
mov
jne
ror
ds
jnp
xchg
mov
test
test
sbb
out
jg
xchg
sbb
jmp
sahf
jmp
push
pop
cs
xlat
xchg
mov
pop
xor
push
inc
fsubr
mov
inc
lods
retf
lods
or
adc
adc
mov
scas
jb
jo
push
into
sbb
cmp
shl
test
cmps
push
mov
aad
outs
adc
jle
add
pushf
retf
pop
popa
mov
cmp
shl
dec
jne
pop
retf
in
mov
test
test
push
sbb
lock
icebp
fsub
mov
icebp
cmp
iret
stos
rcl
call
or
data16
idiv
out
adc
std
ret
leave
pop
lods
int3
sub
not
mov
shl
cs
shl
retf
ins
cdq
sti
iret
int
push
push
xor
pop
aad
(bad)
call
mov
xchg
xchg
cmp
inc
iret
nop
lods
cmp
lea
aad
rol
push
add
add
aam
scas
pop
(bad)
jae
push
inc
sbb
je
xor
ins
movs
sub
shl
in
dec
cmp
mov
in
loopne
mov
fistp
mov
dec
pop
pop
xor
in
shr
shl
clc
jecxz
push
(bad)
sbb
sahf
movs
push
xlat
adc
into
push
mov
jo
mov
or
outs
int
ss
mov
in
scas
addr16
test
in
dec
sub
(bad)
daa
das
ss
aas
sbb
mov
mov
in
jle
inc
jmp
fdivr
xor
loop
aam
pop
repz
adc
out
add
retf
cdq
push
sub
(bad)
add
push
jo
hlt
sub
sbb
add
fs
mov
nop
dec
push
dec
and
lea
or
jne
xchg
dec
push
inc
sahf
repnz
xchg
data16
data16
adc
mov
push
es
xor
mov
sub
push
jmp
in
or
cmc
add
xchg
sbb
push
cmp
xlat
mov
jne
jecxz
xor
jbe
arpl
out
push
inc
dec
push
mov
rcr
fucomi
outs
into
cmp
mov
test
std
loopne
call
gs
push
sti
xchg
pop
adc
pusha
enter
mov
inc
dec
outs
mov
or
enter
outs
push
inc
test
sub
imul
ret
aam
popf
cmp
pop
(bad)
mov
push
fyl2x
aas
hlt
cmp
(bad)
lock
in
mov
jb
xor
scas
push
aaa
fwait
icebp
push
sbb
or
rol
lods
mov
test
inc
call
push
lds
xchg
mov
xacquire
inc
xchg
(bad)
xchg
dec
cwde
adc
dec
test
inc
sub
inc
js
add
mov
mov
ja
in
pop
lock
sbb
imul
lods
jns
mov
push
ror
and
call
inc
cli
ins
mov
and
loopne
in
mov
sti
mov
add
jl
jge
add
loopne
inc
sbb
push
sbb
jecxz
jb
aaa
scas
or
out
push
(bad)
stc
fidiv
xor
fs
sub
dec
mov
xor
nop
or
rcl
sbb
cmp
cmc
arpl
jns
add
pop
mov
je
div
dec
out
fwait
push
xchg
cmp
inc
jmp
add
and
xchg
or
inc
retf
imul
push
pop
xor
sub
cdq
mov
mov
adc
cmp
std
mov
ficomp
and
(bad)
stos
outs
mov
fidiv
les
movs
nop
ret
repz
repz
lods
cmps
ja
outs
in
div
adc
movs
iret
scas
pushf
loop
jmp
mov
add
int3
dec
fmulp
push
test
push
push
(bad)
push
inc
add
jg
outs
lods
fs
es
dec
in
scas
xchg
mov
dec
xchg
pop
push
aaa
mov
xchg
fimul
neg
jg
fstp
push
(bad)
xor
mov
in
je
ss
lahf
fs
lods
popa
xchg
int3
inc
sbb
dec
xchg
fs
push
daa
or
shr
sbb
hlt
ret
loopne
test
push
and
push
es
xor
mov
outs
mov
mov
outs
repnz
(bad)
hlt
icebp
std
ror
ret
cli
(bad)
test
gs
sbb
cmc
stc
movs
stc
stos
icebp
mov
mov
or
aam
push
jle
cmc
xor
sbb
inc
hlt
(bad)
sbb
fs
xchg
out
stc
adc
pop
cld
mov
in
retf
mov
ret
scas
rcr
jmp
out
sbb
pop
xchg
pop
retf
inc
cmps
jp
retf
movs
enter
push
xchg
dec
das
sbb
(bad)
dec
mov
sub
(bad)
cmc
push
xlat
cmp
xlat
sti
jmp
push
loopne
or
sub
mov
test
(bad)
fwait
mov
jge
test
test
add
cmp
loopne
push
xor
xchg
jmp
dec
pop
cdq
cld
push
xor
xchg
ret
out
mov
rol
jmp
xor
xchg
repnz
jmp
lahf
out
lahf
xlat
sar
movs
jg
inc
mov
cld
das
cmps
ror
imul
dec
jl
cmp
push
jbe
and
adc
sbb
daa
stos
(bad)
in
cmp
xchg
lahf
xchg
jae
icebp
stos
pop
lods
and
push
cdq
(bad)
(bad)
ss
xor
mov
retf
mov
push
xchg
aad
mov
enter
sub
ja
dec
cmp
lea
movs
je
pop
fisubr
scas
gs
pop
bound
repnz
cdq
es
pop
or
sbb
sahf
mov
cmp
ret
addr16
lock
ds
xor
dec
or
pop
clc
sbb
inc
and
(bad)
mov
test
stos
loope
iret
inc
sub
daa
push
(bad)
jl
push
lahf
xor
jo
adc
mov
mov
sub
repnz
inc
sbb
add
push
outs
sbb
jnp
add
sub
rep
imul
lock
mov
sub
arpl
mov
scas
mov
push
mov
inc
ror
mov
sar
sub
test
out
sbb
mov
popa
dec
mov
xor
push
inc
cmps
sbb
out
push
xlat
cli
push
fnsave
xchg
stc
and
scas
div
int3
hlt
xor
push
in
push
call
and
pusha
jge
or
fmul
gs
mov
stos
pop
adc
jns
jmp
mov
(bad)
arpl
jg
call
mov
loope
mov
mov
push
out
xchg
hlt
xchg
jecxz
aad
into
sbb
dec
retf
sub
pop
xor
inc
retf
jle
das
xchg
ja
and
push
ret
sbb
ds
out
iret
inc
sbb
jb
push
inc
or
test
fdiv
lea
mov
retf
xchg
pop
loop
mov
in
sar
xor
out
ja
and
pop
arpl
stos
rcr
cmp
pop
cmp
clc
cmp
cdq
mov
lock
xchg
jnp
mov
rcr
gs
in
pop
dec
sbb
mov
ss
xor
mov
and
mov
jle
addr16
mov
sar
mov
and
sub
out
mov
inc
sub
imul
xchg
jge
js
or
pop
cmp
push
fs
std
cdq
and
xor
inc
in
pop
test
sar
pop
and
cmp
rol
mov
outs
xchg
xchg
xlat
fstp
mov
add
cwde
into
loop
std
sub
ret
adc
cwde
call
sbb
rcl
test
pop
daa
int
push
inc
into
mov
jg
push
jmp
std
mov
clc
sti
popa
cmc
mov
mov
in
jecxz
add
jp
sbb
stc
mov
stc
pop
push
sub
push
popf
sub
out
push
sub
sub
push
push
enter
sbb
mov
cmp
(bad)
(bad)
mul
hlt
pop
(bad)
jge
jb
bound
add
movs
mov
cmp
ret
jmp
jle
sub
enter
fwait
mov
fsubr
cmc
dec
sub
adc
repz
or
pop
fcmovnbe
retf
lds
aam
jecxz
pop
lea
test
fptan
dec
add
pop
add
mov
inc
ins
and
push
bound
ret
int3
jle
xchg
push
inc
cli
jg
(bad)
popa
push
retf
xor
pop
jne
xor
sbb
les
sbb
sub
xor
dec
sti
clc
mov
adc
sbb
xor
mov
not
shr
cmps
inc
fistp
push
sub
fnstcw
dec
xchg
push
pop
dec
sbb
dec
push
jb
(bad)
(bad)
cli
dec
mov
packssdw
cmp
dec
aas
daa
pop
repnz
push
pusha
pop
cdq
pusha
and
and
sub
pop
icebp
movs
push
pop
(bad)
pop
pop
nop
daa
fwait
dec
or
xchg
mov
xor
sbb
inc
loop
es
mov
dec
stos
xor
xchg
in
cwde
jmp
mov
(bad)
ret
cmps
jmp
(bad)
pushf
div
mov
sahf
lea
in
hlt
cmc
jbe
jnp
xlat
push
fnstenv
popa
sub
mov
and
lods
mov
add
cmc
mov
bound
sub
xchg
jb
ret
lock
mov
sub
sbb
sbb
push
xor
fldcw
dec
mov
fistp
fldln2
dec
cmp
push
aas
lea
xchg
repnz
imul
arpl
mov
lds
pusha
xlat
push
je
in
fwait
leave
enter
iret
popf
push
fld
jmp
xchg
xchg
repz
and
push
movs
fist
mov
out
sahf
jmp
xor
outs
aam
pop
in
inc
ret
push
pop
push
arpl
push
gs
inc
pop
sub
and
push
sub
sub
mov
add
push
(bad)
cmp
adc
sti
retf
outs
js
add
push
(bad)
sbb
mul
xchg
and
xor
add
mov
pop
outs
(bad)
jmp
jecxz
repz
inc
out
lsl
mov
sti
jle
jle
dec
pop
je
sub
pop
dec
push
ins
or
adc
cdq
hlt
scas
retf
rcl
cmp
in
add
jge
int3
mov
movs
aam
ror
lock
aas
gs
push
jp
in
cmp
imul
jbe
add
pop
xor
sar
mov
test
aad
shl
add
in
call
sbb
mov
(bad)
xor
xor
pusha
adc
xchg
inc
and
pcmpeqw
pop
sbb
mov
add
mul
xor
inc
adc
mov
imul
aaa
ret
mov
mov
shr
ss
mov
(bad)
jmp
es
dec
sub
stc
sub
and
hlt
add
test
jbe
leave
xor
or
lea
pop
pop
sbb
cmp
jle
adc
mov
mov
test
jb
xchg
icebp
mov
js
loopne
mul
sbb
mov
mov
mov
mov
or
dec
das
(bad)
jns
inc
js
retf
(bad)
iret
or
dec
ins
sbb
pop
das
aam
pop
mov
xchg
nop
jae
cmc
lock
out
and
imul
cmp
mov
mov
in
sbb
jns
and
xrelease
and
inc
mov
mov
xor
repz
xchg
fucomp
in
clc
std
jecxz
fistp
jg
adc
gs
outs
mov
cmp
cld
and
addr16
xor
jns
mov
add
jmp
inc
and
sbb
movs
and
push
and
cli
sbb
ficomp
enter
imul
ins
xchg
and
and
mul
loopne
fbld
jne
jb
xor
or
in
sub
mov
outs
in
nop
shl
enter
push
hlt
stos
in
push
pop
inc
(bad)
xchg
jae
in
lods
leave
sbb
mov
rcr
xchg
and
xchg
push
fsub
call
cdq
lds
xchg
mov
mov
sub
inc
dec
dec
lods
out
inc
hlt
xchg
pop
je
gs
inc
mov
das
cmp
pop
push
cmp
mov
push
push
fnsave
repz
fist
xchg
sub
daa
cdq
movs
sbb
out
push
jns
ret
mov
leave
lahf
rcr
dec
xchg
mov
push
mov
ror
rol
inc
add
mov
adc
fwait
xor
movs
out
lahf
inc
cdq
add
push
inc
xor
mov
jb
hlt
or
cmp
sar
mov
lods
scas
mov
xchg
fmul
aas
es
(bad)
fild
mov
repz
sbb
sub
add
and
xchg
xor
mov
and
sti
hlt
mov
into
cmps
in
dec
retf
sahf
aaa
stos
loope
and
test
push
xchg
cmps
adc
cmp
aaa
mov
cdq
jecxz
jmp
jns
aam
jp
pop
or
jb
jp
mov
pop
inc
aas
repnz
inc
mov
into
and
call
ror
scas
dec
pop
adc
pop
push
push
cmp
cmps
dec
(bad)
mov
lds
push
cmp
dec
cmp
leave
ret
sbb
and
cmps
sbb
sub
mov
addr16
pushf
idiv
push
sbb
jle
push
cmps
fmul
call
pop
sub
jl
lea
fistp
sbb
test
popf
add
mov
or
fild
dec
pop
addr16
mov
pop
xor
or
mov
add
int3
sub
imul
cmp
cmc
aaa
ja
outs
outs
fistp
movs
out
outs
aam
dec
popf
aaa
xchg
out
out
mov
cmp
call
fldcw
jge
hlt
cld
movs
jg
test
mov
mov
ins
gs
add
into
repz
mov
(bad)
loop
jecxz
call
xlat
xor
add
stos
cmp
mov
push
adc
out
sub
inc
add
xor
jecxz
sbb
inc
pushf
jl
mov
scas
xchg
shl
or
xchg
jg
cmp
xchg
aam
(bad)
cwde
jae
out
imul
scas
and
shr
in
ret
inc
jnp
jmp
sbb
pop
xor
popf
add
push
int
movs
fdiv
xor
(bad)
or
mov
sub
lods
xor
dec
inc
pop
std
mov
clc
into
aad
cmp
push
cmp
nop
(bad)
repnz
fst
mov
data16
out
or
mov
aad
shl
repz
lahf
addr16
fisttp
sti
dec
in
cmc
xor
shl
jno
shld
mov
mov
bound
outs
mov
retf
cmps
lods
mov
inc
pop
cmp
pop
outs
lahf
aas
stos
(bad)
hlt
and
mov
into
sub
dec
arpl
pop
lea
hlt
pop
mov
fld
pop
dec
mov
icebp
mov
cmovnp
scas
add
lds
arpl
std
pop
pop
mov
rcl
push
adc
mov
add
fidiv
mov
mov
dec
inc
mov
(bad)
mov
aas
je
(bad)
scas
jae
fsubr
sbb
jmp
mov
or
mov
inc
mov
aad
sbb
or
pop
mov
gs
mov
pop
sub
dec
clc
dec
out
imul
sub
and
cmp
xor
xor
jmp
mov
sbb
inc
pusha
push
adc
mov
push
mov
pop
sbb
sbb
or
mov
pop
mov
xchg
sub
push
out
jo
es
inc
jl
mov
std
and
icebp
xchg
(bad)
mov
and
scas
and
clc
mov
and
xor
xchg
jl
and
addr16
mov
fs
jle
outs
mov
mov
adc
loopne
jo
mov
ins
jl
retf
gs
popa
cmps
fisttp
lock
out
iret
xlat
mov
test
cmc
fst
lahf
aas
pop
cld
jmp
mov
push
jg
push
sti
loope
mov
sti
push
mov
cmp
ins
sub
push
dec
es
mov
mov
push
add
enter
xchg
xchg
adc
xchg
xchg
hlt
add
test
inc
inc
inc
movs
leave
push
sub
push
dec
lods
lods
cmp
imul
adc
cs
jbe
into
jmp
scas
pop
test
xchg
cmps
and
push
xchg
mul
adc
pushf
pop
cld
retf
push
(bad)
jle
mov
jle
xchg
xor
std
cmp
xchg
test
and
fild
adc
jae
mov
dec
(bad)
xor
aam
(bad)
pop
je
popf
adc
ficom
or
mov
clc
loopne
(bad)
shr
pop
clc
hlt
fidivr
pop
gs
push
mov
xchg
push
push
push
int
mov
xor
test
push
xor
push
outs
xchg
fmul
aas
dec
mov
(bad)
mov
(bad)
xchg
fisttp
inc
shl
xchg
(bad)
xchg
cmp
es
aam
mov
adc
and
add
xor
pop
or
test
jl
or
aas
out
pushf
cmp
rol
push
inc
hlt
xlat
not
sub
stos
mov
gs
sbb
mov
aad
adc
cmp
jecxz
out
ss
sar
test
adc
adc
out
mov
cmp
dec
sbb
aaa
push
das
dec
push
mov
dec
aas
imul
mov
sti
mov
mov
data16
sub
mov
outs
pop
mov
mov
cmps
arpl
mov
repz
mov
out
push
jns
clc
xchg
sbb
add
lock
int
or
data16
fadd
bound
jecxz
sub
push
sub
adc
inc
fnstsw
imul
jecxz
aaa
leave
push
cmp
enter
ret
(bad)
mov
add
cmp
push
pop
sbb
mov
mov
push
jno
ds
xchg
or
arpl
jl
pusha
jbe
fcom
hlt
sbb
xchg
inc
xchg
shl
icebp
mov
outs
xchg
inc
mov
adc
push
addr16
mov
cmp
push
pop
xchg
imul
inc
sbb
inc
iret
xchg
adc
inc
and
ss
and
sbb
ja
daa
(bad)
(bad)
fcomp
popf
std
jmp
xchg
fs
pop
ret
dec
dec
cmp
cmp
ret
imul
xlat
dec
gs
push
inc
je
pop
sbb
fbld
xor
lods
fimul
jecxz
dec
popf
adc
stos
pop
pop
add
dec
xchg
loope
pop
shl
ja
sub
mov
test
outs
cmps
into
in
ins
jmp
es
mov
xor
push
loopne
sbb
add
add
retf
jbe
xchg
mov
jmp
sbb
jp
xchg
aaa
mov
(bad)
xor
inc
mov
jecxz
adc
sub
jno
xchg
sbb
into
push
jbe
aas
mov
pusha
push
cmps
cmp
mov
dec
pop
(bad)
iret
mov
out
sub
mov
fwait
adc
add
nop
imul
mov
cmp
jg
dec
jg
into
(bad)
jle
cld
jns
std
jno
(bad)
jbe
inc
int3
jl
mov
mov
xchg
repnz
fmul
mov
sbb
adc
aaa
push
mov
inc
fimul
retf
(bad)
xor
int3
imul
rol
push
pop
shl
in
in
mov
dec
fcomi
cmp
out
push
xor
pop
add
mov
sbb
lds
pushf
pop
xchg
cli
sar
daa
xor
sti
xchg
xor
mov
in
add
and
sbb
mov
pusha
add
cdq
into
push
shl
rol
jo
mov
inc
test
sbb
cwde
inc
cdq
pop
test
push
outs
cmp
aam
out
add
and
movs
leave
rol
ds
adc
shl
add
shl
not
xchg
push
xor
popf
xchg
js
out
xor
push
mov
add
xchg
js
lods
pop
adc
jle
xor
lahf
inc
mov
sbb
mov
push
mov
sub
pushf
(bad)
rcl
or
dec
cli
aaa
mov
mov
add
dec
adc
push
jecxz
pop
sbb
sbb
scas
xor
adc
xchg
scas
imul
sbb
call
mov
lods
jno
mov
repnz
xchg
gs
lea
mov
jne
popa
fstp
bound
and
sub
test
gs
jecxz
into
cmps
aaa
pop
ja
and
xchg
jns
inc
xchg
jecxz
hlt
in
mov
xchg
fistp
shr
xor
hlt
test
fs
pop
mov
push
dec
in
sub
icebp
xor
xchg
adc
xchg
(bad)
cwde
sti
shl
ins
or
push
ficom
mov
mov
nop
retf
int3
mov
mov
jbe
pop
xchg
aas
ror
push
test
add
adc
ins
mov
enter
sub
push
int
stos
fimul
mov
jbe
gs
shr
aas
jecxz
mov
lds
test
inc
and
push
out
int3
sbb
fwait
dec
dec
push
adc
dec
out
push
(bad)
adc
mov
mov
mov
jnp
jl
jne
inc
push
movs
mov
sahf
repnz
or
inc
sbb
mov
mov
pop
add
addr16
aam
xchg
dec
xchg
aas
int
inc
sti
setae
xchg
push
jge
mov
jmp
push
movs
sub
inc
rcl
or
dec
cwde
add
gs
stc
stc
das
xchg
pusha
xor
push
mov
inc
je
aas
adc
sub
shl
jle
fadd
call
mov
jle
int3
push
jo
inc
(bad)
shr
retf
pop
sbb
sbb
cmps
pop
xor
xchg
retf
mov
adc
out
xor
mov
sub
int3
sub
mov
scas
inc
mov
inc
mov
push
test
xor
pop
adc
ins
rol
adc
lods
jp
fild
popf
ror
dec
ret
out
and
iret
sub
and
les
xor
push
xchg
adc
mov
inc
cli
or
scas
mov
sbb
mov
mov
dec
ror
mov
dec
les
dec
push
pop
or
xchg
loopne
adc
and
int3
stos
dec
xor
retf
test
mov
jl
fbld
dec
mov
inc
mov
repnz
or
xor
push
nop
dec
cmps
repz
xor
xor
pop
jge
fisub
adc
retf
inc
mov
sbb
fnstenv
fstp
into
mov
add
adc
das
mov
addr16
push
xchg
and
test
cmp
jbe
inc
mov
push
sti
das
cdq
add
ins
xor
leave
cs
dec
imul
sbb
cmc
test
mov
iret
cmp
jmp
hlt
imul
cld
(bad)
repz
out
movq
mov
cdq
mov
push
inc
mov
in
in
dec
idiv
mov
push
mov
mov
sub
cwde
iret
push
sub
rol
dec
jae
cmp
xor
cmps
shr
xor
and
sbb
xchg
xchg
mov
imul
mov
and
fbstp
push
or
sub
ins
sub
inc
inc
or
or
enter
jne
jmp
mov
xchg
dec
mov
cwde
add
iret
outs
xlat
jmp
fwait
xchg
lds
in
jecxz
lods
pop
in
scas
ja
mov
cld
setae
ret
scas
or
out
ins
push
retf
(bad)
push
mov
into
ror
sub
and
cdq
stc
pop
data16
push
(bad)
inc
push
add
clc
sub
jmp
dec
pop
(bad)
push
and
out
out
pop
daa
loope
(bad)
adc
int3
bt
clc
pop
and
jnp
push
pop
shl
mov
push
dec
retf
ja
fisub
pop
mov
fucomi
lahf
adc
in
mov
mov
dec
xor
lea
imul
inc
dec
jmp
adc
out
inc
sbb
mov
shl
push
int
pop
std
mov
sbb
or
push
test
sbb
mov
mov
push
aaa
sahf
mov
rol
adc
cmp
ds
out
outs
std
clc
adc
mov
and
inc
frstor
stc
and
nop
xor
js
call
sub
bnd
(bad)
iret
inc
popa
add
(bad)
or
std
sbb
xor
daa
sahf
arpl
xor
xor
dec
mov
(bad)
lock
loop
and
repnz
xchg
push
xor
js
cmc
adc
mov
xor
and
movs
shl
mov
clc
xchg
sub
sbb
ficomp
inc
sub
inc
mov
sbb
cmps
loope
movs
pusha
retf
hlt
mov
popf
mov
push
fxch
jecxz
xchg
mov
xchg
add
sub
xchg
imul
add
mov
out
out
sahf
outs
pop
int3
imul
je
shl
dec
inc
cdq
imul
jp
imul
pop
lea
test
mov
cmp
mov
mov
test
push
test
xchg
icebp
movs
rcr
(bad)
nop
jmp
fdivr
cs
push
push
cmps
mov
int3
movs
cmps
add
xor
xchg
out
cmp
mov
lods
xor
gs
mov
push
scas
push
(bad)
fwait
mov
cmps
inc
fs
fcomp
arpl
and
popf
xchg
fs
jp
aam
sub
mov
pop
test
or
sub
inc
cdq
mov
cmp
adc
cwde
ja
call
or
stc
fisub
ins
adc
xor
add
hlt
mov
cmp
shr
jle
adc
push
shl
jo
arpl
gs
aad
gs
cmp
out
repz
nop
cld
mov
jae
rcl
pushf
fs
xor
pop
inc
inc
shl
or
mov
sbb
fild
mov
fs
or
sbb
je
out
es
out
push
out
pop
inc
and
or
int
(bad)
loope
jge
repz
neg
cli
data16
mov
add
jb
inc
ds
outs
icebp
mov
ret
bound
sub
xlat
pop
ds
push
mov
scas
std
repnz
and
aaa
push
xor
mov
push
leave
imul
jns
movs
jmp
dec
xchg
mov
mov
ins
add
xor
inc
push
inc
inc
inc
sbb
push
mov
xchg
push
xor
inc
jl
scas
shl
jmp
mov
dec
push
fbld
movs
rcl
(bad)
test
sub
xchg
lods
add
fisttp
ss
sahf
cwde
rol
cmp
cmp
gs
call
xor
xchg
stos
xor
enter
shl
pop
add
and
or
xor
sub
and
xchg
lods
movs
loope
mov
sbb
xor
rcr
test
jmp
xor
fs
jno
cmp
into
dec
shr
ds
jns
jns
outs
fdivr
sbb
cld
adc
xchg
jmp
cmp
test
dec
fcom
mov
xchg
or
ret
aad
push
mov
mov
inc
test
adc
je
in
mov
sbb
mov
call
inc
sbb
cmc
out
push
(bad)
inc
sub
mov
aad
shr
push
or
dec
jnp
mov
icebp
stc
fstp
mov
xor
js
sbb
cmp
jns
xor
ror
lahf
pop
jmp
dec
out
imul
inc
fisttp
fld
out
ins
push
outs
cmp
pop
out
push
test
in
retf
sbb
push
mov
add
adc
push
int
lods
fidiv
xchg
cli
pusha
and
jg
les
inc
dec
and
stos
mov
xor
pop
shl
dec
jle
leave
mov
mov
into
shl
jecxz
stos
mov
xchg
icebp
fwait
mov
in
into
xor
push
mov
xor
inc
aam
imul
jo
mov
mov
push
cmc
js
cmp
xor
iret
dec
sbb
popf
daa
outs
aam
cdq
and
push
gs
cli
mov
and
mov
mov
and
mov
addr16
pop
pop
lahf
inc
in
sbb
scas
pushf
jbe
loopne
mov
jbe
in
add
lods
cli
fnstenv
shl
data16
in
stc
loope
and
jl
and
into
lahf
aas
adc
push
sbb
lods
and
and
sbb
inc
sub
adc
pop
sbb
or
xchg
data16
icebp
mov
jmp
stc
jecxz
stc
mov
int
cmp
sbb
push
leave
push
dec
push
movs
bound
popf
movs
mov
dec
sub
pop
(bad)
and
mov
fist
out
jge
lods
fisttp
test
rcr
and
dec
lods
aas
jge
sub
stc
cmp
lahf
or
sub
sub
test
daa
inc
or
pop
mov
cmps
cwde
pop
aam
mov
adc
mov
stos
(bad)
dec
mov
mov
and
fsubr
popa
outs
leave
jb
mov
in
xchg
fstp
inc
sub
and
mov
cmp
rol
cdq
dec
mov
mov
adc
jmp
pushf
add
(bad)
pop
or
out
mov
jne
enter
das
adc
mov
nop
xlat
mov
test
(bad)
out
ss
fsubr
jmp
loope
ret
push
jp
cmp
pushf
dec
xchg
retf
pop
push
push
clc
mov
je
leave
dec
cmp
inc
and
es
fisubr
and
add
push
mov
cli
inc
popa
mov
pushf
cwde
dec
ror
adc
je
or
in
inc
xlat
add
fcom
in
or
jno
jno
mov
adc
imul
daa
ret
push
pushf
adc
adc
fsub
les
adc
jno
mov
rdpmc
mov
mov
push
neg
jmp
cwde
xchg
enter
outs
(bad)
jle
ins
stos
sub
and
sbb
jmp
js
out
and
mov
fbld
xchg
pop
movs
cmp
sub
mov
shl
pop
popf
in
jno
fisubr
in
ja
sahf
in
push
sub
jge
jae
mov
addr16
mov
div
xchg
ja
fwait
lahf
fistp
je
or
arpl
loop
vaddpd
ret
retf
retf
add
neg
mov
mov
das
pop
in
dec
jnp
cdq
or
mov
dec
ret
mov
pusha
mov
aas
into
mul
mov
sbb
cmp
shr
ins
inc
inc
ds
mov
adc
xchg
xor
jle
int
or
int
aam
int3
je
pop
rcr
jl
sub
popa
xchg
sub
frstor
mov
dec
dec
(bad)
out
cmps
ins
movs
mov
shr
sbb
mov
push
jmp
pop
cmp
xchg
pop
xchg
adc
or
fimul
xor
rcl
xchg
(bad)
jecxz
movs
aaa
enter
sbb
js
jp
into
mov
adc
call
jnp
or
xchg
mov
mov
lock
pop
in
jbe
sar
fmulp
push
imul
mov
inc
outs
fs
mov
jg
or
sub
sbb
hlt
rcl
push
out
(bad)
out
mov
mov
aam
shl
dec
or
mov
ret
into
scas
cmps
shl
std
xlat
in
mov
ret
or
(bad)
adc
je
aaa
daa
and
mov
inc
xor
iret
mov
mov
mov
pop
(bad)
clc
cmps
test
mov
hlt
add
imul
sub
adc
outs
rol
retf
and
hlt
(bad)
cmp
cmp
adc
push
cmc
dec
ror
xchg
push
inc
xor
dec
sub
sbb
scas
sbb
inc
dec
adc
jbe
dec
fnop
xchg
adc
fcomi
adc
cmp
dec
push
(bad)
enter
dec
cmp
repnz
jb
dec
jp
xchg
push
adc
sbb
mov
fsubr
and
adc
cld
jle
retf
test
sbb
dec
fwait
sbb
lahf
or
add
pop
cdq
cmc
enter
repz
xor
lods
inc
mov
ror
inc
ds
xchg
sbb
jns
mov
in
push
inc
and
addr16
cmp
mov
mov
mov
sub
xor
int
lock
scas
scas
add
bound
xchg
cmps
mov
jbe
sbb
mov
shl
mov
out
ret
sub
push
jecxz
xchg
inc
sbb
retf
push
mov
xchg
xor
xor
rol
cdq
arpl
vprotw
sbb
sbb
je
mov
push
ins
loop
retf
pop
or
(bad)
fstp
bound
out
dec
pop
sbb
aas
mov
mov
dec
out
out
mov
outs
xor
push
push
(bad)
popf
div
pop
das
mov
js
dec
rol
sar
nop
dec
jo
mov
(bad)
mov
mov
addr16
adc
pop
mov
fcomp
in
jp
bound
fcomp
aam
xchg
dec
mov
or
sub
pop
jno
adc
sub
pop
push
mov
pop
cmp
dec
test
and
lods
ins
outs
int3
mov
xchg
xchg
push
cmp
push
adc
and
(bad)
gs
movs
fwait
not
test
jecxz
dec
mov
jmp
rol
sub
cmp
inc
push
jae
shr
adc
add
(bad)
pushf
mov
cmp
mov
popf
sbb
inc
scas
popa
ret
cmps
sub
add
sti
retf
xchg
cwde
or
xchg
shr
cmps
dec
xchg
lods
sbb
pop
adc
sbb
div
into
mov
leave
jb
mov
or
in
inc
xchg
push
or
lock
adc
pop
bound
sar
(bad)
pop
cmps
aad
dec
into
sub
fwait
popa
dec
or
and
adc
es
xor
push
inc
sar
mov
(bad)
cmp
sar
idiv
(bad)
aas
scas
inc
push
scas
std
mov
ins
dec
jne
xchg
push
mov
push
cmp
jns
sub
jb
clc
leave
mov
push
shl
and
push
stos
add
lahf
or
fadd
xchg
mov
das
ja
arpl
sbb
daa
xlat
test
shl
jmp
cmps
pop
aam
mov
aaa
xchg
mov
jns
xor
jg
sub
std
jb
fadd
movs
cwde
pop
loop
fwait
test
dec
add
fwait
mov
add
dec
mov
or
mov
cmp
pop
movs
or
loopne
retf
js
mov
mov
and
in
mov
stos
sub
dec
push
mov
imul
push
inc
ret
push
into
out
sub
push
sub
bound
push
out
popa
cmps
mov
dec
jmp
mov
lea
push
inc
cmp
mov
push
js
test
sbb
pop
in
mov
cmp
ds
gs
std
xchg
xlat
sar
and
cmp
in
test
push
call
cmp
jae
es
dec
jnp
xor
retf
inc
xchg
inc
in
popa
imul
cmc
mov
and
fsubr
ficomp
xchg
iret
xchg
fistp
and
mov
jl
mov
hlt
sar
sub
repnz
ja
stos
lahf
ss
dec
lahf
outs
cli
lahf
fisubr
fisttp
xor
xor
imul
cmp
mov
mov
mov
or
dec
mov
cmp
sub
dec
add
test
jns
int
sbb
and
cmp
and
fst
out
jns
cmp
xchg
and
movs
cmp
les
mov
mov
outs
xor
jae
dec
xchg
jmp
xor
aaa
and
and
push
add
push
(bad)
xchg
je
(bad)
adc
push
rol
xchg
sbb
clts
xchg
xor
inc
mov
lfs
setne
mov
push
clc
inc
leave
push
dec
and
push
(bad)
sbb
in
ss
rcl
push
push
fidiv
inc
xor
shl
jp
xchg
push
mov
cdq
jae
out
sbb
retf
dec
mov
sbb
(bad)
ror
in
(bad)
sbb
ficom
imul
push
xor
lahf
sub
jmp
mov
push
stc
stos
or
repz
or
pop
add
lahf
dec
xor
inc
push
add
test
ret
jp
jmp
gs
(bad)
jmp
shr
pop
push
sbb
lods
sub
jmp
sub
push
lock
cld
push
cld
gs
imul
in
das
imul
(bad)
xchg
iret
jmp
adc
inc
inc
cli
add
arpl
sbb
nop
shl
lock
inc
inc
adc
sub
fcom
gs
add
arpl
mov
and
std
push
push
inc
cmps
push
inc
es
add
push
sub
outs
sub
and
repnz
sbb
outs
pop
aaa
push
pop
adc
test
mov
sub
sub
mov
outs
mov
mov
lahf
fwait
xchg
rcl
jmp
stos
sub
jno
ror
sub
mov
xor
xchg
push
inc
mov
push
nop
mov
in
loopne
aas
pop
and
sbb
shl
out
xchg
call
inc
jbe
mov
inc
mov
or
int3
sub
mov
mov
aam
push
mov
and
call
stos
or
call
mov
data16
cmps
ror
add
jmp
xchg
cli
dec
add
cmp
sub
movaps
lods
retf
into
int
arpl
out
jnp
cwde
pop
adc
loopne
xor
inc
or
sbb
push
daa
jp
dec
xchg
in
sbb
pushf
fistp
pushf
pop
add
xchg
adc
xchg
xchg
lds
push
not
cwde
mov
xchg
sbb
mov
out
ins
(bad)
sbb
clc
mov
sti
in
mov
adc
jmp
sub
inc
dec
fbstp
outs
push
arpl
mov
aas
jge
mov
push
or
dec
push
out
sub
xor
mov
jb
add
cmp
iret
xor
jge
shl
mov
enter
mov
loope
pop
mov
push
sti
xor
cli
inc
mov
sahf
fidiv
cmp
cdq
mov
ror
jge
shl
pop
adc
gs
pop
mov
sahf
test
data16
rcl
jbe
push
dec
fwait
sti
sbb
push
xor
scas
dec
stos
lods
nop
or
into
xchg
jae
xchg
pop
neg
push
push
retf
shr
xchg
mov
fistp
push
fwait
test
stos
and
in
and
int
call
adc
dec
mov
inc
scas
xchg
bound
(bad)
lea
pusha
xor
and
xchg
in
xchg
mov
imul
sub
int3
pop
call
dec
push
(bad)
sahf
inc
mov
fdiv
mov
fld
mov
sub
pop
jmp
jmp
mov
iret
sub
icebp
inc
out
aas
clc
jae
xor
loope
lods
mov
icebp
int
movs
fldenv
xchg
sbb
add
int
into
loope
pop
scas
dec
push
hlt
or
(bad)
out
es
sub
mov
push
mov
adc
imul
aaa
mov
out
mov
data16
mov
test
pop
fst
ret
jb
fisttp
xor
and
cmp
jmp
pop
daa
scas
js
sbb
lds
or
dec
bound
mov
adc
and
sub
and
or
adc
mov
int3
lahf
shr
and
jmp
push
cmp
or
mov
add
push
push
ins
xchg
out
(bad)
or
sub
add
push
aam
femms
pop
add
add
call
xchg
bndldx
xor
jno
(bad)
shl
mov
fs
mov
pop
jp
arpl
cmp
xor
gs
jnp
inc
add
push
inc
sbb
dec
pop
inc
xor
ja
sub
ret
fimul
mov
xchg
cdq
vmovq
fimul
pop
pop
test
movs
mov
fs
loop
adc
mov
(bad)
fcomp
push
movs
test
jb
adc
ins
adc
rcr
popf
in
aaa
(bad)
repnz
jmp
mov
or
xchg
inc
sbb
rcl
cmps
or
mov
pop
imul
lods
popf
ss
fs
add
stos
fidivr
xchg
add
std
xchg
jge
ret
or
addr16
mov
add
retf
stos
sar
daa
(bad)
adc
dec
pop
jg
jg
adc
inc
iret
outs
int3
mov
mov
jg
mov
jnp
out
fdivr
push
jg
jnp
das
jbe
stc
hlt
daa
stc
pop
call
out
or
sbb
cwde
int
lahf
xor
xor
stos
mov
shl
cmps
adc
pop
mov
(bad)
sub
fcmovnu
cwde
mov
lock
sbb
imul
ds
int3
call
lea
mov
pop
shl
rol
dec
pop
sbb
lock
or
jecxz
frstor
mov
cmp
(bad)
daa
lea
je
jbe
mov
ss
or
pop
js
fwait
retf
(bad)
int
nop
ret
daa
xor
jae
mov
enter
ins
(bad)
pop
xchg
lahf
retf
sub
sub
js
dec
jae
es
imul
or
mov
lods
mov
popa
(bad)
outs
add
jle
sar
gs
add
sahf
(bad)
mov
retf
out
mov
ss
pop
and
dec
(bad)
jmp
dec
pop
mov
ret
outs
inc
sbb
lods
js
pop
jp
scas
and
seta
ret
je
clc
mov
lods
daa
cdq
fldcw
ja
xor
inc
lock
sahf
mov
gs
pop
or
into
daa
test
sub
mov
xchg
push
and
push
pop
jl
popf
add
cmp
imul
cmps
mov
add
in
mov
shl
pop
sar
ss
mov
push
sahf
dec
push
or
mov
pop
int3
jmp
push
cmp
mov
sub
inc
popf
or
outs
and
ins
xor
aas
and
loopne
xchg
mov
loop
sbb
outs
or
inc
mov
sub
or
int3
and
mov
sub
lea
xchg
stc
xchg
fadd
pop
inc
mov
xchg
cli
retf
push
adc
push
inc
push
enter
gs
and
dec
mov
mov
add
jmp
pusha
fimul
std
inc
cmps
mov
push
ror
stc
les
aaa
aas
stc
or
mov
mov
xchg
inc
repz
push
xor
pop
add
loopne
pop
or
xor
lods
scas
xchg
pusha
mov
xor
add
mov
adc
pop
movs
cdq
add
cmp
fwait
(bad)
push
shl
inc
imul
push
je
outs
adc
inc
cmps
fsub
sub
and
inc
fisttp
mov
das
jnp
daa
fucomp
jne
retf
push
loopne
and
loopne
dec
call
push
push
out
mov
ficom
movs
movs
inc
sbb
fstp
outs
fist
cwde
retf
or
aam
dec
mov
mov
push
mov
pop
adc
mov
aam
das
fwait
movs
imul
mov
mov
out
leave
push
retf
xor
mov
bound
retf
sub
cmps
inc
and
sbb
xchg
jl
jno
cld
jae
dec
push
out
into
jbe
rcl
enter
mov
cli
ret
mov
lahf
aas
aas
clc
jecxz
lods
dec
xor
add
out
mov
sbb
jb
mov
test
adc
sub
and
(bad)
(bad)
jno
call
mov
call
bound
std
outs
mov
jne
mov
cmp
mov
ins
sub
in
cmp
jmp
push
repnz
or
push
pop
mov
sbb
cmp
pushf
aam
out
fs
in
mul
cmc
mov
div
(bad)
aas
(bad)
xchg
jb
xor
or
mov
pushf
enter
mov
rol
push
sbb
sbb
cwde
repnz
in
xchg
dec
fild
into
mov
loop
pop
add
and
fdivr
xlat
lods
push
mov
repz
loope
add
in
mov
test
pop
push
and
in
ja
mov
push
cmp
add
jg
push
jmp
xchg
mov
sub
xlat
sbb
push
(bad)
es
fs
test
xchg
push
mov
cmp
sbb
ds
xchg
shl
mov
mov
cs
xchg
out
bound
inc
rcr
scas
out
inc
xchg
mov
cli
ret
outs
neg
int
fwait
sahf
jg
dec
inc
mov
mov
push
retf
test
mov
jg
push
jbe
pop
movs
mov
mov
inc
pop
and
out
fild
mov
pop
dec
push
cmps
lea
push
sbb
test
xchg
popa
cmp
mov
or
and
popf
cmc
shl
xchg
or
inc
adc
fmul
push
mov
out
retf
jmp
daa
jge
retf
ss
mov
pop
lock
retf
jmp
mov
ss
and
fwait
div
stos
(bad)
mov
mov
adc
xor
pop
retf
les
xor
jecxz
cmp
cmps
cld
sbb
clc
jg
std
popa
adc
jns
sbb
dec
cmp
adc
fild
sub
jl
xchg
add
ror
xor
lock
gs
test
and
into
and
mov
jl
mov
aaa
in
adc
test
dec
mov
test
(bad)
push
cmp
add
loope
add
inc
aad
repnz
loopne
movs
out
mov
jge
mov
test
test
std
sahf
and
push
inc
add
xor
push
cmps
addr16
xor
lahf
and
add
arpl
xchg
or
fstp
inc
icebp
int
inc
aaa
test
pop
cmp
cs
popf
push
daa
les
loop
mov
pop
adc
int
dec
adc
pop
cld
pop
xchg
movs
repnz
pop
fdiv
jl
icebp
pop
xor
call
mov
(bad)
outs
dec
fidivr
into
lahf
ds
loop
mov
aaa
adc
xchg
scas
jae
xor
xchg
lea
icebp
enter
fadd
div
mov
pop
dec
jl
movs
adc
xor
adc
mov
jecxz
mov
mov
popa
jb
mov
pop
lea
sub
jns
out
fsub
jmp
sub
sbb
pushf
(bad)
cmp
data16
add
add
add
mov
pop
outs
adc
or
fstp
out
ficomp
adc
icebp
sub
int
test
arpl
addr16
mov
mov
pushf
fs
inc
sbb
pop
popf
pop
sbb
push
cmp
push
or
ja
inc
jle
xchg
daa
add
test
adc
lods
xor
mov
popa
inc
cmp
cmp
xchg
out
xchg
ffree
ins
fcomp
lods
int
movs
xchg
in
mov
test
out
lods
mov
push
lods
in
mov
and
lds
lock
pop
mov
sbb
jbe
pop
ins
popa
(bad)
or
and
int
js
xor
push
push
adc
test
lods
cmp
mov
inc
gs
xor
leave
sar
ins
mov
cmp
xchg
mov
dec
das
and
cmp
xor
sub
test
adc
mov
(bad)
ins
daa
lods
outs
gs
sub
shl
icebp
push
jmp
inc
cdq
icebp
dec
or
xor
(bad)
mov
adc
or
(bad)
daa
mov
retf
jbe
imul
(bad)
les
inc
pop
sbb
sub
or
or
int
push
push
test
mov
cdq
add
push
cmc
cwde
dec
jg
add
fdiv
imul
dec
push
add
out
xor
cmc
aaa
fld
sub
sub
or
adc
jp
or
out
je
mov
test
out
adc
adc
pop
jo
jecxz
popa
xchg
pop
pop
imul
shl
loopne
sub
mov
xchg
push
das
cwde
sub
jno
mov
inc
imul
repz
cmp
(bad)
xchg
mov
or
popa
mov
push
pop
mov
push
add
inc
jbe
movs
xchg
nop
xchg
mov
jns
add
dec
add
cmp
out
data16
jl
into
mov
stos
mov
and
mov
lds
call
lods
outs
sbb
add
pop
inc
xchg
lods
jae
adc
out
repz
cmps
lahf
std
rcl
sub
cmc
clc
pusha
jae
ins
cmps
ds
jns
sbb
xchg
and
int3
cwde
adc
ss
add
cdq
mov
jmp
enter
pop
popa
cmp
jns
sbb
leave
xlat
aam
jnp
test
jg
in
std
rcl
jmp
jmp
loop
rcl
faddp
jb
push
xor
adc
cmps
xor
psubd
cmps
and
icebp
loop
xor
shl
fist
add
out
push
dec
add
add
or
std
add
pop
xor
jge
pop
xrelease
inc
inc
jnp
movs
shl
and
imul
sbb
adc
mov
repnz
ins
pop
fstp
fistp
mul
lods
xchg
cmp
add
icebp
mov
fxch
xchg
adc
xchg
daa
lea
(bad)
cmp
push
mov
dec
xchg
pop
push
jle
and
xchg
jp
adc
inc
inc
jmp
aaa
add
lea
fidiv
dec
sbb
xchg
dec
xor
lods
mov
fcomp
xor
popf
ror
add
imul
mov
(bad)
cdq
cmp
out
scas
ja
mov
ret
out
shl
add
dec
push
mov
sub
dec
push
or
shl
jnp
jmp
dec
fldenv
add
jno
test
(bad)
jge
adc
retf
add
int3
mov
sbb
push
xor
cmp
inc
ja
mov
lods
dec
fcom
sahf
dec
add
inc
jne
leave
sub
clc
les
dec
popf
imul
stos
les
cmc
lods
outs
dec
jae
mov
and
push
sbb
sub
into
cld
retf
jbe
rol
call
sar
xchg
out
mov
aaa
lds
mov
call
cmps
adc
sbb
mov
loop
iret
jp
dec
mov
loope
inc
xor
bound
loope
sub
dec
div
les
(bad)
jne
retf
retf
loop
mov
rcr
cmps
in
test
add
mov
retf
add
outs
inc
or
test
pop
mov
retf
jae
stc
inc
lods
pop
retf
push
add
xor
cmp
sbb
outs
cmp
shl
mov
loope
pop
scas
jnp
je
adc
add
sbb
(bad)
add
into
ret
cmp
movs
push
adc
les
inc
into
inc
sub
push
ror
ds
add
fcomp
xchg
ret
and
or
pop
xor
(bad)
or
(bad)
mov
and
scas
push
fcomip
mov
std
call
clc
sub
outs
inc
inc
stc
aaa
stos
outs
inc
xor
push
lods
mov
bound
jb
retf
ret
pop
xchg
push
xchg
sbb
mov
je
pop
xor
jmp
cmp
dec
push
adc
ja
call
adc
pop
mov
mov
push
push
or
cmp
pop
xor
pop
jg
xor
das
pop
mov
repz
jg
jb
movq
mov
sbb
push
xor
push
inc
shr
cmc
cmc
mov
int3
adc
iret
clc
xor
push
imul
inc
jo
xor
(bad)
and
and
inc
xlat
sub
or
scas
scas
adc
push
jmp
lods
mov
sub
jmp
leave
(bad)
xor
xor
sbb
in
push
(bad)
movs
adc
pop
cs
inc
sbb
push
push
mov
fsub
inc
jmp
pop
fiadd
int
sub
scas
add
aad
ins
xor
aam
test
in
sub
jmp
sbb
fstp
lds
and
jo
inc
sub
lods
dec
mov
in
inc
jp
xchg
xor
outs
pop
cmp
sub
enter
inc
and
inc
pusha
sbb
dec
stos
out
jecxz
xor
fwait
shl
xchg
shl
mov
gs
outs
jne
xchg
shl
js
cmp
xchg
sbb
pop
dec
or
iret
sahf
into
and
inc
dec
ret
iret
iret
iret
stos
out
mov
push
out
inc
xor
inc
sbb
cmp
cmps
aam
and
sub
xor
sub
loopne
mov
adc
das
xor
icebp
cmps
rol
jp
pop
xor
(bad)
mov
lods
jle
aam
fwait
cmc
lock
adc
xor
adc
les
inc
sbb
cdq
xor
imul
dec
dec
cli
xchg
inc
data16
inc
cdq
pop
sbb
mov
sub
(bad)
xchg
in
mov
pop
inc
cdq
adc
inc
and
or
dec
or
cdq
test
lods
test
aam
test
xor
jmp
xor
cdq
out
jmp
xor
scas
cmp
mov
push
mov
push
pusha
add
sbb
cwde
and
push
xchg
mov
add
data16
test
ja
shr
sbb
into
(bad)
cmp
mov
and
gs
sub
sbb
mov
out
push
push
mov
cmp
mov
cli
push
mov
push
retf
push
inc
aas
test
mov
adc
loop
stos
xor
dec
es
jmp
out
dec
jge
cdq
int
fisttp
inc
sub
xor
mov
mov
lea
stos
mov
xchg
loope
sbb
fs
shl
cmc
xor
jbe
idiv
lods
jns
jmp
add
shr
jb
push
push
mov
sub
mov
mov
cmps
xchg
cwde
push
pop
ret
gs
iret
xor
xchg
push
aaa
cli
mov
push
repnz
dec
pop
push
and
and
jecxz
dec
bound
ins
mov
xchg
add
and
imul
ja
fidivr
fnstcw
cld
outs
aas
in
jg
fs
sbb
mov
mov
cmp
xor
(bad)
movs
nop
not
push
or
and
inc
ror
out
shl
lahf
(bad)
lock
rcr
fldenv
inc
lock
lea
mov
and
add
les
dec
pop
adc
push
fnsave
push
inc
add
cdq
popf
fdiv
sbb
call
mov
dec
call
test
sub
icebp
adc
xor
inc
inc
xor
hlt
(bad)
sbb
fld
in
mov
xor
jmp
(bad)
sub
test
data16
sub
cmp
stc
mov
popa
jl
sub
ins
sbb
fs
and
pushf
loope
dec
retf
ror
sub
fsubr
push
retf
inc
ret
cmps
in
imul
jnp
ret
mov
xchg
mov
rcr
xor
jmp
out
mov
cmp
sub
jne
xchg
popf
jo
sub
repnz
jge
jno
dec
or
jle
xchg
mov
cmps
cmp
push
xchg
pop
leave
ror
or
push
gs
add
sub
(bad)
mov
mov
repnz
sub
push
add
and
js
pop
clc
movs
adc
imul
mov
icebp
mov
inc
movs
jb
jb
xchg
xchg
sub
jbe
add
mov
in
scas
(bad)
loope
or
add
jb
lahf
jmp
aaa
dec
int3
sub
fadd
lds
and
mov
jo
jmp
retf
wbinvd
and
dec
inc
(bad)
loope
push
inc
mov
js
mov
or
ins
lods
jle
sub
add
shl
cwde
(bad)
jne
in
dec
cld
nop
(bad)
push
pop
ja
ins
arpl
mov
or
or
(bad)
sub
lahf
push
in
fisttp
adc
sub
sbb
pop
sbb
stos
and
or
arpl
je
jno
jmp
movs
adc
cwde
adc
call
cli
jecxz
mov
dec
mov
ret
sub
pop
or
aaa
jb
xor
std
push
jmp
jl
sub
push
push
adc
push
or
shr
mov
cwde
jne
fcomp
aas
lahf
mov
sbb
into
inc
mov
mov
xchg
sub
lock
retf
je
cli
sub
mov
mov
ret
inc
sub
repnz
into
pop
(bad)
xchg
popf
(bad)
xlat
xor
leave
rcr
lock
xchg
(bad)
dec
inc
push
daa
inc
dec
popa
jno
inc
fistp
and
imul
sbb
mov
call
mov
out
inc
jg
sar
out
push
pop
fsubr
out
iret
push
ret
fisttp
stos
push
jnp
mov
mov
mov
bound
mov
bound
call
jmp
in
scas
fild
mov
cld
test
push
inc
scas
dec
mov
jecxz
(bad)
loope
add
push
push
pop
xchg
fwait
push
cdq
aad
rcr
mov
adc
mov
xchg
out
test
out
mov
inc
sbb
cvtps2pi
test
dec
adc
imul
dec
lea
jmp
push
shr
adc
xor
es
adc
sbb
push
ja
vpavgb
lods
add
dec
rcl
adc
jl
pop
cmp
mov
and
addr16
pop
push
cmps
xchg
mov
mov
mov
stc
out
inc
ror
(bad)
push
fimul
or
lahf
in
aaa
dec
(bad)
cmp
mov
mov
leave
in
jg
jmp
sub
cmp
cmp
stc
cld
and
xchg
addr16
(bad)
aad
enter
jne
ret
cmp
mov
ja
sbb
in
test
cmp
iret
pop
add
jno
daa
xchg
mov
cmps
ds
int
scas
imul
mov
aam
shl
sti
test
mov
jmp
outs
inc
test
outs
or
or
mov
dec
ret
fs
cmp
xlat
(bad)
ds
mov
mov
jmp
imul
fwait
mov
leave
shl
xchg
icebp
adc
adc
inc
cmc
sbb
xchg
stos
cmp
pop
movs
sbb
add
mov
jbe
imul
pop
jae
repnz
mov
repz
jno
js
es
sbb
clc
jb
lods
pop
sbb
push
or
adc
mov
dec
sahf
and
arpl
add
add
cmp
push
mov
push
mov
loope
leave
add
push
(bad)
ja
or
std
inc
push
dec
into
or
add
repnz
pop
std
jb
test
adc
aam
and
inc
adc
and
pusha
lds
leave
xor
jnp
les
mov
data16
push
pusha
clc
popa
pop
fisub
jg
jns
ret
xchg
dec
and
ss
cld
cld
int3
test
mov
mov
fimul
push
test
es
(bad)
ss
push
dec
xchg
popf
popa
ins
scas
xchg
ret
outs
or
repz
jo
and
jle
inc
(bad)
dec
ror
cmc
fwait
mov
mov
popa
pop
and
and
or
mov
push
inc
test
or
stos
iret
fs
mov
add
sub
xchg
mov
mov
xchg
or
rol
ror
les
add
das
mov
fcom
mov
mov
call
mov
aas
cmp
(bad)
clc
leave
lock
pop
ins
jge
mov
mov
and
dec
bound
jl
std
in
mov
cmc
xor
pop
mov
mov
sbb
push
arpl
mov
std
xor
mov
idiv
mov
cmp
xchg
sub
fld
adc
dec
repnz
xchg
ror
and
cmps
das
mov
add
cmp
fidiv
adc
jns
mov
loop
sbb
push
arpl
and
sub
xchg
pop
inc
mov
sub
dec
out
adc
pop
mov
mov
cmps
lds
pop
adc
ror
cmp
push
nop
icebp
mov
rcr
sahf
sbb
dec
cmp
pop
xchg
mov
inc
push
inc
mov
outs
call
adc
pusha
leave
pop
mov
test
div
mov
pop
jl
int3
lock
xor
inc
jmp
popa
sti
fidiv
jnp
jne
push
stos
jmp
push
iret
in
js
xchg
cmp
jno
xchg
dec
imul
cwde
dec
pop
pop
js
std
dec
mov
mov
dec
retf
out
retf
daa
dec
inc
out
jns
ins
dec
loop
adc
pop
mov
adc
lahf
xor
sbb
ficom
sub
imul
and
add
push
mov
lods
adc
retf
and
or
(bad)
sub
out
std
jp
shl
fisttp
mov
sub
in
mov
aaa
add
arpl
nop
mov
mov
cmp
adc
imul
push
int
inc
out
add
es
xchg
dec
pop
inc
pop
imul
jg
jno
hlt
movs
xor
repnz
adc
inc
xchg
mov
sub
sbb
ror
or
sub
cmps
pop
arpl
mov
sbb
je
pop
sub
push
es
in
and
ins
fsubr
in
jl
jne
das
jle
(bad)
repz
cld
jo
cmp
loopne
add
retf
xor
lods
add
add
daa
loopne
das
mov
ja
outs
jns
cwde
cwde
lods
mov
int
fs
mov
into
mov
adc
sub
repnz
pusha
sub
outs
es
leave
repz
dec
push
inc
jmp
and
inc
cmp
imul
push
sbb
test
jg
inc
std
les
jle
cwde
jle
(bad)
nop
jno
mov
jle
int
add
cli
lods
mov
xchg
shr
bound
sbb
or
out
push
repz
es
das
test
xchg
lds
xchg
rcr
cmp
sub
rol
call
push
xor
xor
fidivr
xchg
push
mov
mov
dec
out
cmc
push
outs
icebp
(bad)
das
cmps
push
in
loope
test
and
adc
(bad)
aad
ja
cmp
scas
xor
dec
or
inc
leave
rol
mov
add
dec
out
fwait
jp
mov
dec
xchg
mov
xchg
aam
sbb
push
add
mov
dec
scas
sub
nop
int3
int
jo
pushf
adc
jns
adc
add
xchg
rcl
xor
mov
xchg
mov
in
xor
sub
fiadd
or
inc
inc
mov
mov
add
arpl
iret
sub
shl
xor
pusha
fcom
cdq
jb
cmp
pop
test
hlt
cmp
mov
adc
xchg
xchg
mov
adc
hlt
push
push
stc
mov
sbb
xor
sub
push
push
xchg
adc
mov
ds
ret
mov
pushf
push
imul
(bad)
ss
push
loope
mov
pop
test
loopne
mov
cmp
mov
sar
fwait
lea
xchg
mov
in
dec
push
push
das
loop
shl
adc
lahf
rcl
push
xchg
jns
push
xor
dec
fadd
shl
test
and
xchg
lods
cmps
aaa
ror
jno
mov
retf
sahf
movs
aad
cdq
sub
mov
mov
int
ret
jbe
pop
jae
shl
xchg
cld
mov
pop
js
retf
sbb
xor
loop
call
adc
pop
push
jecxz
and
adc
cmps
out
lods
cmp
adc
test
mov
xchg
mov
jg
test
cmp
mov
push
sbb
mov
mov
(bad)
and
mov
xchg
add
add
push
scas
xchg
add
fadd
jp
adc
data16
fsubr
push
movs
aam
xor
bound
fidiv
pop
and
inc
or
dec
(bad)
enter
scas
inc
add
mov
adc
stc
push
das
cmp
test
into
test
add
dec
rcl
xchg
mov
push
data16
dec
dec
loope
xor
add
fs
gs
mov
adc
sub
out
mov
push
pop
loopne
call
xor
pop
ins
and
or
rol
test
jmp
cmc
fcom
cld
fimul
es
push
xor
mov
call
or
xor
cmps
sar
cs
sub
jnp
push
dec
pop
push
jb
mov
stos
dec
mov
pushf
repz
shl
popa
dec
jns
mov
hlt
mov
or
test
dec
(bad)
xlat
pop
pop
inc
call
and
repz
mov
outs
call
ror
sub
rcr
cmp
icebp
mov
call
fcomp
mov
mov
scas
pop
or
inc
ficomp
jmp
les
mov
repz
mov
push
add
adc
jno
mov
mov
jmp
push
fstp
(bad)
mov
rcr
in
push
push
ins
shl
imul
inc
(bad)
jl
lds
jo
pop
push
push
or
inc
jg
arpl
cmp
xchg
test
ss
imul
xchg
push
call
int
daa
push
lds
cmp
adc
xor
shl
and
hlt
sub
jbe
sbb
push
int3
jns
cld
mov
xor
movs
lea
call
imul
(bad)
or
jns
pushf
pushf
sub
test
inc
pop
push
nop
shr
iret
cmp
dec
mov
test
sbb
das
and
xor
push
inc
das
xchg
adc
push
pop
lods
into
cmps
in
sbb
iret
xchg
jle
fwait
neg
pop
retf
out
dec
jno
cdq
popa
int3
jmp
add
pop
inc
rcr
movs
inc
xor
imul
sub
jbe
pusha
xor
mov
inc
pop
mov
and
in
inc
add
fnstenv
or
add
pop
add
clc
imul
outs
and
hlt
fld
sbb
push
jns
icebp
pop
ss
loop
jge
push
stos
fisubr
dec
cmp
mov
mov
aad
out
movs
into
in
push
mov
mov
jle
daa
ja
add
sbb
shl
and
fs
mov
dec
or
call
scas
push
inc
loop
add
inc
or
and
dec
adc
mov
sbb
mov
scas
fsubrp
inc
scas
push
out
xchg
jbe
dec
aas
add
jl
or
mov
shr
or
cwde
fwait
es
imul
inc
cld
inc
in
or
stos
add
mov
out
pop
pop
mov
mov
cmp
icebp
in
jl
mov
or
into
aad
std
cdq
fmul
mov
clc
add
xchg
in
inc
cdq
scas
leave
or
dec
mov
xchg
inc
bound
repnz
adc
cmp
push
(bad)
xchg
dec
add
imul
ret
jmp
mov
push
sub
or
sbb
xor
jae
leave
imul
loope
jbe
repnz
inc
fidiv
xchg
adc
dec
jmp
sahf
xor
rol
jg
mov
scas
clc
inc
sbb
xchg
cmp
push
xchg
(bad)
push
mov
daa
fld
mov
gs
das
dec
sbb
loop
xchg
pop
add
push
xchg
or
imul
and
jle
jno
mov
retf
arpl
scas
mov
pop
mov
xchg
push
int
imul
add
mov
xor
retf
and
and
in
test
pop
sbb
test
and
popf
or
dec
push
rcl
or
stc
ja
cmp
pop
fstp
lds
call
mov
popa
das
icebp
leave
jmp
xor
inc
test
ret
out
dec
add
jbe
xchg
jno
arpl
and
into
push
add
gs
cld
test
clc
adc
ja
mov
jns
test
cmps
fsub
xchg
pop
xchg
push
js
pop
rcl
stos
push
adc
out
ins
xchg
push
inc
jp
cmp
mov
mov
and
call
mov
es
dec
sub
sti
and
push
call
pop
fwait
repz
es
adc
dec
pop
es
sub
pop
scas
mov
fsubr
mov
test
inc
jno
pop
adc
adc
mov
mov
es
imul
and
jae
in
dec
mov
loope
push
mov
dec
sub
or
scas
enter
jmp
cli
xchg
inc
cwde
cmp
push
or
(bad)
xor
pop
sbb
cmps
cmps
jns
in
inc
sbb
pop
inc
aas
inc
ja
sbb
and
cmp
fsub
add
add
hlt
js
xchg
dec
les
xchg
cmovo
(bad)
loopne
bound
stc
sub
pop
addr16
jmp
dec
into
into
xor
mov
xor
dec
xor
sti
mov
ins
push
test
dec
push
fisttp
gs
fs
xchg
add
mov
das
jp
mov
xor
je
addr16
add
and
sub
mov
dec
in
mov
in
popf
fldcw
push
loop
xor
and
sub
and
push
dec
xchg
cwde
push
xchg
daa
mov
ret
aad
or
sub
ret
or
adc
xchg
inc
adc
loop
jmp
imul
mov
fcomi
ds
jns
jmp
xor
clc
enter
mov
push
data16
daa
and
adc
mov
inc
and
pop
adc
jle
sub
inc
add
dec
daa
adc
mov
xchg
hlt
push
mov
push
adc
mov
and
aas
mov
pop
test
pop
sub
ja
push
inc
repz
and
mov
mov
mov
mov
cdq
cdq
push
frstor
(bad)
mov
popa
sar
sub
call
xor
push
xchg
pop
iret
addr16
sub
xor
push
add
sub
adc
retf
or
(bad)
stos
mov
es
in
mov
jp
mov
shr
fcom
jbe
xchg
sbb
gs
jno
scas
in
jmp
dec
xor
mov
xor
inc
popf
ss
mov
call
sub
aaa
cmps
(bad)
push
loop
scas
adc
movs
xor
in
xor
aas
sub
mov
fnstcw
cmp
jns
fs
cmc
xchg
jne
xor
aad
and
jbe
aas
sahf
(bad)
(bad)
ror
aam
dec
shl
in
push
mov
lea
ds
test
adc
les
adc
pop
icebp
xchg
xchg
mov
mov
call
mov
bound
jo
push
cmc
fild
mov
inc
(bad)
out
or
add
addr16
or
mov
xchg
sub
inc
cmp
inc
push
bound
or
les
cmp
nop
xlat
in
data16
xor
push
rcr
and
dec
je
xlat
and
jg
push
pop
out
mov
lods
add
dec
imul
mov
mov
or
mov
cli
lods
(bad)
mov
cdq
cmp
inc
adc
cli
out
ss
loop
mov
pop
fcmovnu
call
(bad)
lds
dec
mov
mov
xchg
add
cmp
sbb
ja
test
or
pop
loop
popf
rol
popf
dec
jmp
lahf
dec
inc
ds
sub
loop
pop
cwde
pop
popf
aaa
cmp
stos
pusha
sbb
cmc
imul
nop
fs
in
push
push
dec
out
je
sbb
adc
aas
loop
pop
in
pop
and
rol
mov
cmp
sti
xchg
xor
pop
jle
mov
cmp
mov
ret
push
pop
rol
ret
and
push
inc
adc
data16
ja
pop
popf
call
cmp
cmp
sub
mov
outs
shl
call
imul
sbb
sbb
and
mov
fcomp
retf
mov
jae
pop
inc
xchg
das
outs
les
jno
xor
mov
adc
sbb
cpuid
imul
sub
and
pop
jne
enter
adc
retf
ins
pop
add
sbb
sbb
mov
cld
mov
outs
pop
loope
std
lock
hlt
mov
fisubr
fild
shl
pushw
fs
in
sub
ror
mov
pop
ds
push
inc
es
inc
in
sar
mov
fiadd
pop
pop
jnp
and
fist
xlat
sbb
push
movs
dec
call
pop
jae
or
add
scas
loop
inc
inc
sub
mov
stos
sub
xchg
push
push
ret
dec
es
aaa
mov
sti
pusha
or
pop
jl
enter
in
jno
test
xor
push
or
call
or
inc
xchg
loope
ins
push
leave
fsubr
mov
test
in
outs
inc
push
cwde
imul
or
push
jmp
mov
or
pop
vprotw
push
jb
xchg
loope
je
xchg
popa
in
mov
jne
adc
mov
mov
data16
inc
cmp
push
ins
adc
or
adc
pushf
gs
clc
mov
xor
jmp
cmps
mov
fisub
xor
xchg
push
adc
inc
jecxz
inc
lods
scas
pop
fst
lds
out
mov
adc
jo
lea
push
or
jmp
xor
inc
xor
(bad)
cmps
int
daa
movs
lock
pop
cmc
out
lock
(bad)
(bad)
mov
mov
adc
add
popf
int
sbb
fdiv
inc
repnz
aaa
lock
sbb
dec
ret
jle
xlat
sub
inc
popf
data16
and
add
fs
push
stos
dec
aam
add
jno
jo
test
inc
repnz
jns
loope
fstp
fs
call
stos
mov
cdq
push
xlat
jecxz
sub
jmp
stc
mov
retf
test
push
inc
and
jae
push
mov
xor
aaa
jnp
or
xor
imul
stos
mov
pop
fmulp
cli
push
pop
and
mov
pop
ret
cdq
mov
sub
ins
sub
in
ss
push
push
dec
lock
in
test
lahf
jo
in
les
or
into
fwait
mov
ret
imul
sbb
lahf
(bad)
cmp
fcomp
mov
jp
lock
ficomp
bound
fnstenv
xor
xor
mov
mov
jmp
cs
shl
cmp
test
fucomi
xchg
(bad)
(bad)
mov
retf
rcr
sub
and
inc
fadd
cmc
pop
xor
sahf
or
cmps
popf
or
repz
aaa
imul
cmc
dec
loop
ins
add
cmps
dec
mov
sub
outs
xchg
jb
xchg
mov
xchg
rcl
inc
and
jp
pop
sbb
jbe
shr
adc
gs
cdq
stos
pop
clc
cmp
sar
lods
mov
fsub
aad
sub
test
jmp
jle
push
xor
dec
sbb
sub
push
sub
mov
test
or
loope
or
jo
or
inc
js
jo
push
mov
fwait
add
mov
mov
add
lods
mov
sbb
loopne
add
sub
sub
push
and
cmp
sti
sub
jb
daa
xchg
or
add
mov
mov
push
retf
or
add
mov
inc
aas
xchg
and
push
push
data16
repnz
add
fistp
icebp
pop
jge
fisub
fnstcw
sbb
xchg
cdq
cli
cmp
xor
xchg
push
dec
mov
jae
and
and
xor
dec
fmul
fild
inc
jno
push
dec
mov
bound
sbb
fsubr
(bad)
(bad)
or
sar
daa
cld
cmps
mov
movs
adc
popf
push
cmps
dec
test
cmp
jno
xor
outs
mov
mov
dec
xlat
xlat
inc
or
clc
adc
sub
push
xlat
jmp
cmp
das
lock
rcl
nop
xlat
mov
ror
or
(bad)
dec
cmp
cld
mov
ret
and
mov
mov
mov
pop
jno
xor
jmp
rol
cmps
inc
cmps
dec
shr
pushf
dec
inc
and
push
into
popf
mov
jmp
out
mov
cmp
jle
push
push
(bad)
xchg
(bad)
sbb
movs
fimul
(bad)
lods
lahf
daa
retf
jp
jbe
loope
in
mov
test
(bad)
xor
ss
or
pop
push
xchg
in
repnz
outs
adc
ror
lea
gs
cmp
rol
cmp
sbb
fdiv
jmp
jl
dec
aas
and
push
aam
rol
inc
stos
mov
dec
and
int
mov
mov
and
sbb
jb
mov
dec
add
hlt
add
xchg
mov
inc
movs
inc
pop
xor
xor
cwde
test
lods
sub
xchg
fwait
xchg
push
jmp
jno
sub
cli
xchg
mov
pop
dec
ror
icebp
and
in
cmps
mov
into
fs
push
jmp
dec
xor
popf
popa
sbb
in
dec
mov
ds
cmp
inc
mov
daa
retf
sbb
in
movs
jne
xchg
(bad)
mov
js
and
xor
sbb
push
out
and
pop
dec
mov
adc
and
jmp
mov
ja
pop
rdmsr
out
inc
cmp
push
sbb
mov
xchg
jl
or
scas
test
repz
jecxz
mov
fsubr
jns
inc
sbb
dec
outs
mov
push
aas
imul
sub
xor
push
xor
retf
jmp
data16
pop
jle
stos
jns
push
ret
fldcw
cmp
inc
add
iret
xor
(bad)
aad
enter
sahf
mov
adc
fisttp
mov
mov
push
push
sub
inc
dec
xchg
jp
mov
jbe
sub
dec
inc
sbb
mov
inc
mov
shr
mov
in
push
jbe
ja
stos
shr
jp
test
pop
sub
pop
adc
xchg
sbb
mov
aaa
into
retf
mov
stos
rol
ins
pusha
sbb
dec
leave
push
scas
cld
push
sub
or
scas
adc
pop
xlat
stos
into
std
or
inc
jnp
dec
test
push
and
adc
js
dec
xchg
shr
and
test
rcl
jbe
ror
inc
sbb
sahf
mov
or
sub
fstp
pusha
pop
sbb
bound
int3
in
test
pop
mov
inc
jns
pop
sub
ret
xchg
cdq
push
xchg
sbb
pop
loopne
cmp
jle
retf
push
int
mov
or
fwait
and
ret
sub
sub
mov
je
push
test
cld
dec
cmp
push
mov
xchg
mov
ds
loop
pusha
inc
dec
mov
inc
hlt
sub
xchg
inc
dec
gs
adc
jle
or
es
adc
lods
push
(bad)
jmp
ror
fidiv
pop
mov
data16
rep
mov
pop
ins
xlat
outs
int
imul
mov
mov
mov
pop
sub
loopne
(bad)
shl
int3
pushf
int
addr16
inc
out
imul
scas
out
stos
xor
icebp
enter
jmp
imul
adc
loope
ds
daa
loope
inc
cmps
mov
sub
loope
imul
mov
xchg
popa
xor
in
inc
pop
xchg
imul
or
inc
and
xchg
cmp
fidivr
push
xchg
sbb
pop
in
lea
cmp
mov
rol
or
scas
ds
ds
in
test
ja
cmp
pop
into
jl
xchg
sub
leave
sar
cmp
push
and
pop
mov
bound
sbb
fsub
je
es
jo
mov
xchg
xchg
or
ret
and
mov
push
push
xor
lds
jecxz
pop
enter
jmp
cmc
push
xchg
gs
scas
mov
mov
jmp
cmps
sub
and
int3
inc
imul
or
rcl
aad
sahf
aam
rcl
fs
mov
inc
mov
mov
ret
lock
sti
in
pop
clc
frstor
stc
ret
hlt
sahf
ss
dec
imul
(bad)
jp
nop
gs
cmp
sbb
mov
inc
mov
les
out
xchg
pusha
nop
pop
inc
dec
cmps
dec
pop
inc
leave
xchg
sbb
cmp
jne
and
mov
add
loopne
rcr
(bad)
cmp
add
jbe
xchg
jns
mov
pop
inc
sti
dec
sar
push
repnz
cmp
and
push
pop
and
es
daa
scas
ror
and
push
(bad)
jmp
pop
aas
push
ins
jle
(bad)
call
xor
inc
push
mov
adc
mov
scas
nop
inc
mov
xor
popa
les
scas
add
pop
repz
popa
push
inc
xor
inc
hlt
mov
pusha
test
mov
fwait
mov
cmps
stc
adc
mov
das
adc
inc
retf
add
sti
bound
xor
fs
rol
xchg
ins
mov
mov
push
add
mov
shl
cmp
push
jns
adc
xchg
adc
lea
xor
cdq
xchg
nop
loopne
mov
xor
dec
push
nop
dec
int
pop
jns
jnp
push
mov
aad
pop
cmp
mov
sti
icebp
lea
xchg
shr
pop
xor
pop
leave
arpl
dec
ror
jg
push
inc
dec
xchg
int
les
pop
std
mov
cdq
and
clc
imul
lods
adc
push
xor
dec
inc
and
loop
adc
dec
pop
imul
inc
data16
cmc
push
shl
retf
outs
ins
movs
dec
(bad)
cmp
addr16
ja
push
ror
cmps
xchg
int
mov
pop
not
inc
je
mov
scas
mov
jb
jae
nop
outs
sub
mov
(bad)
xchg
(bad)
or
cmps
arpl
leave
sti
mov
ss
mov
push
outs
lahf
mov
dec
and
jno
imul
sub
shr
sbb
mov
imul
and
xor
sub
in
lods
js
into
sub
xchg
and
mov
xor
sbb
jg
sbb
jl
jp
icebp
add
push
data16
or
xchg
dec
ds
fld
mov
cmp
repnz
imul
sbb
xchg
inc
sub
outs
sbb
push
sub
mov
mov
mov
pop
jl
cmc
int
int
hlt
out
pop
mov
sub
fwait
ss
loope
inc
inc
rol
repz
jae
fisub
cmps
mov
cmp
stos
cld
imul
movs
out
hlt
shr
enter
sub
jg
sbb
int3
xchg
(bad)
fcom
jne
ja
out
imul
gs
(bad)
int3
movs
pop
add
loopne
sub
adc
xor
imul
adc
xchg
lahf
je
jmp
out
icebp
mov
mov
xor
fucomip
mov
pop
clc
lahf
(bad)
adc
sub
and
aaa
mov
mov
adc
push
int
fimul
int3
push
mov
xchg
data16
jbe
and
popa
lods
dec
mov
push
ds
cmp
shl
jns
stc
ins
inc
mov
movs
pop
inc
push
dec
int3
push
lods
lds
test
dec
call
ds
(bad)
pop
sbb
in
and
cmp
pusha
lods
out
cmp
and
xor
xor
inc
pushf
adc
sbb
cdq
popa
ror
mov
push
xor
mov
xchg
out
stos
or
movs
sbb
jne
dec
mov
inc
pop
or
adc
nop
stos
jmp
mov
inc
add
sbb
(bad)
jmp
ins
std
mov
xchg
(bad)
mov
mov
aaa
xor
jne
ret
mov
cwde
mov
push
out
je
xchg
rcl
(bad)
stc
and
out
shl
sub
dec
scas
jb
test
adc
(bad)
rcl
test
mov
test
add
daa
mov
fistp
cmps
sahf
out
mov
cmp
call
and
adc
jno
jecxz
inc
sbb
jae
test
dec
inc
fidiv
sbb
test
scas
xchg
scas
dec
inc
retf
or
jl
inc
push
xchg
xor
mov
test
cmp
in
ins
inc
cmp
jmp
dec
jl
push
es
xor
data16
jecxz
retf
addr16
mov
icebp
pusha
ja
ins
pop
adc
adc
adc
push
test
bound
jge
fidivr
sbb
(bad)
out
dec
and
lea
popf
movs
sbb
loop
stos
lods
pop
test
mov
aam
push
inc
mov
aas
mov
test
and
pop
ins
sub
jmp
inc
sbb
push
inc
(bad)
out
sub
inc
jb
and
shr
ins
push
sub
lds
jle
xchg
test
mov
imul
sub
add
cmp
cli
push
cmp
sar
jmp
hlt
cmps
sbb
xor
adc
sti
mov
lods
dec
bnd
xchg
jns
and
lods
ds
stc
dec
sub
je
mov
mov
mov
mov
int3
mov
leave
and
mov
mov
cli
inc
mov
fs
cmp
shr
data16
sar
xchg
push
mov
pop
scas
jle
sub
cmps
lahf
or
pop
gs
hlt
xor
add
test
sar
into
jl
call
mov
inc
(bad)
cli
sbb
xor
push
mov
mov
mov
adc
xchg
pop
lods
loopne
pop
jns
jae
pop
outs
(bad)
loope
(bad)
jle
jl
test
mov
add
pop
inc
jbe
rol
xchg
fwait
adc
xor
xor
jmp
jno
inc
push
push
push
push
cmps
cmp
add
add
cmps
push
je
ins
aaa
cld
loop
mov
jmp
aaa
fst
pop
dec
je
cmp
jp
dec
cmp
cwde
inc
cli
in
stos
imul
xor
or
sub
dec
pop
dec
mov
lods
neg
xor
stos
jne
pusha
mov
or
sbb
jae
lods
fmul
pushf
fwait
xchg
or
mov
push
push
leave
dec
scas
ins
iret
inc
aaa
ret
push
fadd
dec
data16
and
sub
jge
mov
enter
adc
gs
mov
outs
inc
mov
and
xor
aam
xchg
lahf
loope
aad
xor
sub
inc
inc
pop
scas
dec
dec
adc
data16
push
cmps
loopne
stos
(bad)
ficomp
jnp
in
mov
fbld
lods
add
xchg
inc
cdq
std
inc
cli
xor
and
mov
mul
neg
mov
jb
les
in
push
mov
add
add
xor
pop
inc
stos
in
sub
mov
leave
ror
je
mov
mov
ds
xor
sbb
popa
xor
xchg
cmp
jl
xchg
push
cwde
jb
outs
(bad)
xchg
xor
ja
(bad)
xchg
ret
push
push
into
iret
call
movs
and
stos
stos
inc
imul
dec
sub
inc
dec
test
adc
es
push
sub
icebp
or
mov
add
mov
loopne
cmp
sub
out
adc
clc
aas
fst
and
xor
div
sti
outs
outs
scas
mov
int
nop
pop
fwait
ror
push
call
rcr
das
je
popf
xor
lods
cli
dec
cmp
xchg
leave
pop
out
popa
out
test
lods
sbb
jbe
or
push
inc
sbb
adc
sub
xor
mov
fsubr
movs
mov
xor
cmp
jno
cmps
in
dec
sbb
xchg
and
int
(bad)
cmp
push
gs
call
adc
imul
mov
lods
xchg
sub
dec
jo
and
inc
mov
add
and
mov
mov
call
sbb
icebp
arpl
in
aam
pop
cmp
pop
out
jecxz
and
jns
sbb
sbb
adc
mov
inc
fucomp
fstp
outs
cmc
inc
retf
inc
sub
sub
sbb
pop
sbb
clc
movs
fwait
or
pushf
sub
stc
je
jns
xchg
retf
fisttp
pop
pusha
xor
ror
repz
mov
fucom
add
int3
inc
add
mov
int3
adc
cmp
xchg
ds
push
test
mov
mov
push
inc
xchg
das
loop
dec
adc
aam
(bad)
push
and
loopne
push
add
lods
pcmpeqw
and
out
push
std
outs
cmps
fidiv
std
fcmovne
fsubp
mov
sti
jno
outs
adc
lods
aas
jmp
ret
jo
jge
mov
fwait
adc
pop
xchg
mov
push
push
dec
xor
pop
pop
inc
push
cmps
mov
adc
retf
dec
test
stos
xchg
xchg
cmp
ror
mov
pop
aam
mov
imul
mov
clc
dec
xor
not
jl
scas
jg
stos
rol
mov
call
in
outs
push
retf
push
in
mov
mov
sbb
pop
cmps
mov
(bad)
or
lahf
cli
push
jne
(bad)
imul
mov
ret
scas
sbb
cs
inc
push
and
adc
lea
aaa
push
stos
jmp
lds
mov
and
ret
scas
or
sub
jp
inc
mov
xchg
xchg
mov
adc
repnz
icebp
mov
dec
sub
outs
bound
arpl
inc
int3
nop
xchg
test
lea
sahf
and
and
cmp
cmpxchg
retf
push
push
cmp
xchg
and
sar
jmp
mov
push
sub
test
adc
jns
int3
scas
fsubr
mov
sub
enter
std
mov
(bad)
(bad)
push
and
test
or
out
inc
cdq
sub
push
sbb
enter
scas
mov
retf
shr
int3
inc
stc
pop
sub
jge
fs
jl
popa
adc
call
mov
lods
or
xor
mov
cmp
mov
cmp
mov
inc
adc
and
(bad)
retf
adc
xlat
mov
or
cld
ficom
ret
and
inc
pop
sub
(bad)
jmp
mov
fucomp
jbe
popa
call
rcr
pop
inc
mov
mov
fstp
jnp
mov
inc
int3
cmp
fstp
mov
inc
data16
dec
ss
xor
cwde
mov
cmp
scas
das
es
xchg
mov
adc
jmp
push
adc
pusha
dec
cmp
adc
dec
lea
pop
sbb
sub
lea
adc
(bad)
jmp
sbb
ror
dec
cdq
rol
jo
stos
lea
adc
mov
mov
rcl
mov
pop
test
mov
inc
push
in
xchg
popa
jp
mov
(bad)
fst
popa
ret
hlt
push
retfw
call
push
test
mov
xor
test
xor
loope
dec
mov
fld
xlat
imul
test
sbb
xchg
mov
push
js
fsubr
pop
xlat
mov
test
pop
fcomp
dec
mov
in
cmp
push
inc
int3
ret
or
test
fsub
jne
push
mov
loop
test
adc
lods
movs
dec
jmp
sti
mov
push
cmp
retf
test
mov
fisub
mov
jmp
jp
imul
les
adc
pusha
push
sbb
test
retf
pop
push
adc
repz
add
push
mov
test
push
and
call
jns
cmc
mov
jmp
cdq
xchg
es
or
or
sub
jbe
pop
or
pop
cmp
add
imul
inc
sbb
shr
gs
test
scas
test
pop
jmp
jae
mov
mov
jmp
jo
push
add
and
shr
lea
scas
fs
pop
jmp
(bad)
xlat
or
jecxz
cmps
pop
jecxz
ret
mov
xor
sbb
out
ror
push
dec
and
(bad)
popf
push
adc
outs
repnz
(bad)
mov
test
and
push
test
sbb
mov
and
and
scas
cmp
xor
ret
or
test
callw
jge
mov
sub
mov
mov
sub
xor
xchg
daa
int
xor
cwde
fs
je
or
jmp
xor
dec
sbb
test
xchg
xlat
sbb
adc
pop
adc
test
jo
push
cmp
cmp
(bad)
jmp
mov
push
outs
aaa
sbb
daa
mov
(bad)
cmp
cmp
and
pop
jae
mov
mov
out
into
stc
and
fst
and
test
xor
sti
ret
dec
stos
add
stos
sub
outs
rcr
jo
cmps
add
mov
jle
int3
jae
outs
test
das
ficomp
rcr
sbb
pop
pop
and
(bad)
mov
mov
jne
aad
dec
ins
xchg
xchg
into
je
ficomp
fs
ja
xchg
dec
outs
sar
popf
jnp
jg
pop
push
in
mov
sub
into
mov
div
rcr
repz
les
popf
push
mov
sahf
inc
sti
xchg
push
fsubr
xor
ror
hlt
scas
add
sbb
xor
xchg
cwde
fisub
aas
shr
and
pop
mov
add
in
push
in
or
ins
stos
and
xchg
out
and
pop
cli
rcr
pushf
pop
jne
adc
cdq
popf
add
mov
ror
jne
jge
ds
jle
sbb
(bad)
sub
sbb
ror
push
sub
movs
pop
mov
test
add
test
leave
popf
es
sub
fidivr
cdq
gs
call
jl
and
mov
js
fnstsw
or
test
inc
mov
sub
pop
dec
sub
scas
fist
std
pop
js
test
xor
imul
mov
and
or
mov
neg
outs
pop
cmc
cmp
ror
mov
mov
clc
daa
cmps
push
xor
je
icebp
and
gs
ja
enter
xor
sbb
cli
mov
inc
loope
daa
loope
data16
div
in
mov
mov
sub
(bad)
dec
or
int3
(bad)
jae
js
fiadd
aam
adc
sbb
jno
and
nop
sub
shl
mov
inc
sub
push
lea
call
int
test
mov
ret
xchg
ret
dec
adc
lahf
aaa
loop
or
scas
fbstp
imul
jne
daa
les
inc
icebp
pop
inc
ins
mov
nop
cmp
mov
xor
dec
stos
or
int
and
fmul
gs
inc
cmp
push
mov
int
icebp
dec
mov
dec
ja
in
rol
ret
lock
push
push
xor
mov
cmc
mov
(bad)
es
hlt
push
and
xor
sub
je
xchg
adc
ds
out
imul
rcr
and
call
test
xchg
cmp
scas
(bad)
mov
clc
xchg
pop
rcr
xchg
ds
pop
adc
stc
and
cmps
or
mov
xchg
dec
push
dec
movs
pop
or
mov
or
mov
pop
xor
push
sub
push
lea
das
push
xchg
dec
lahf
dec
cld
mov
sbb
maxps
rcl
xor
int
dec
das
jns
mov
je
in
and
aad
jae
sub
push
inc
dec
arpl
pop
pop
int
xchg
fidiv
inc
sbb
sub
out
pop
push
daa
sbb
popf
xchg
popa
mov
pop
or
and
call
jno
out
cli
mov
xchg
jl
out
loop
ret
test
sbb
out
mov
sahf
ins
int
fwait
aaa
fidiv
movs
cmp
bound
dec
inc
mov
mov
ss
call
dec
xor
nop
fcomi
pop
ficomp
mov
and
jae
or
dec
rcr
dec
fnstenv
or
push
stc
and
fucomp
test
mov
jnp
mov
div
inc
mov
jg
or
and
mov
mov
xor
mov
jmp
scas
xchg
gs
int3
stos
push
sti
ss
mov
ret
mov
or
dec
call
xchg
sbb
dec
bound
aas
sub
xchg
dec
dec
sub
or
push
xchg
pop
into
sbb
adc
ror
mov
adc
cmps
pop
sbb
jnp
mov
push
in
std
xor
xor
inc
out
ret
add
retf
pop
stos
push
pop
xchg
aaa
xchg
add
cmp
xchg
les
pop
or
xor
sbb
or
mov
imul
sbb
popf
pop
mov
shr
bound
push
dec
shl
xchg
jecxz
je
and
adc
adc
add
push
inc
adc
add
cmc
mov
jae
or
xchg
fmul
les
pop
inc
add
call
ja
xchg
push
lock
lods
loopne
ret
xor
cmps
adc
arpl
adc
scas
imul
int3
fld
dec
mov
xchg
or
out
inc
lods
(bad)
jmp
pop
fs
mov
sbb
and
xor
repnz
mov
loopne
les
scas
add
and
or
cwde
sbb
mov
clc
mov
sbb
int3
imul
movs
xor
ins
and
retf
gs
xchg
sbb
dec
mov
cmp
xor
sbb
les
lods
punpckhbw
and
and
push
jp
icebp
scas
cdq
and
push
mov
scas
and
add
(bad)
ror
pop
add
inc
popf
sar
jmp
outs
stos
loop
pop
dec
mov
xor
and
or
stos
push
xor
sbb
jmp
mov
(bad)
lea
fsub
(bad)
movs
push
push
xor
mov
sbb
inc
scas
mov
push
dec
or
pop
sbb
mov
adc
nop
dec
push
cdq
inc
cmp
daa
xor
movs
cmp
lock
mov
(bad)
in
xlat
adc
and
xchg
sahf
fnsave
cld
add
sub
xchg
add
jbe
pop
imul
jge
das
or
popf
cmps
hlt
cli
shr
mov
lods
je
adc
outs
mov
xchg
inc
ss
xor
in
xchg
les
test
mov
sub
mov
cmc
xchg
push
lds
adc
mov
loopne
out
sub
pop
ror
mov
shl
jmp
dec
xor
adc
dec
jecxz
mov
fdiv
sbb
mov
adc
xor
outs
and
pop
jbe
mov
ins
jnp
mov
mov
xor
lods
inc
call
call
test
or
mov
fcomp
bound
mov
fimul
test
xor
int
jmp
xchg
jecxz
mov
icebp
outs
ds
mov
(bad)
in
cdq
and
fadd
aaa
push
pop
iret
movs
jno
xchg
aam
ins
paddw
popa
es
or
xchg
sbb
dec
mov
inc
cmps
in
dec
imul
iret
dec
mov
lds
movs
xor
lods
mov
aaa
cmp
pop
shr
adc
test
sbb
fisubr
movs
xor
sub
test
lds
inc
aas
outs
aam
cmps
jl
pop
adc
adc
sbb
xchg
inc
in
ror
xor
lods
js
xchg
fwait
popa
mov
clc
ret
mov
inc
fisub
xchg
test
dec
push
inc
sub
sti
mov
lods
repnz
mov
addr16
mov
mov
jb
hlt
fcomi
pop
repnz
lahf
jmp
push
into
cli
rcr
mov
ds
mov
mov
pop
xor
rcl
pop
dec
inc
add
xor
pop
test
and
mov
adc
mov
xchg
adc
out
out
out
outs
daa
icebp
xchg
mov
xlat
jb
adc
cld
movs
fadd
fcomp
scas
call
sbb
test
das
jb
sub
xor
mov
jmp
cmc
fwait
aaa
pusha
push
aas
xor
repnz
xor
int3
add
mov
push
ins
gs
sbb
push
stc
push
sub
and
mov
mov
inc
sbb
and
mov
fwait
stos
lock
and
retf
(bad)
cld
sub
movs
pop
mov
call
call
xor
imul
push
dec
sub
loopne
xchg
in
cli
push
in
push
sbb
cwde
push
fadd
sbb
mov
sti
or
dec
(bad)
fs
(bad)
sbb
dec
ficomp
test
ins
fstp
scas
inc
sbb
mov
cmps
xchg
jle
mov
sub
inc
ins
mov
xchg
mov
(bad)
pminub
mov
mov
daa
fsubr
inc
fmulp
sub
cwde
loop
jno
js
loop
test
pop
out
inc
bound
xchg
mov
leave
mov
icebp
cmp
fs
in
ja
sub
dec
xchg
and
les
int
mov
sbb
pop
neg
xchg
mov
aas
dec
push
jmp
call
sbb
scas
lods
in
out
call
xchg
dec
xchg
push
fcmovbe
inc
popa
fst
mov
fwait
mov
ret
and
mov
sub
xchg
fstp
push
mov
jg
daa
sbb
imul
test
in
dec
jmp
lahf
dec
pop
fsubrp
out
imul
daa
cmp
iret
outs
sbb
test
sub
dec
inc
sbb
inc
mov
test
mov
inc
ret
mov
sbb
mov
popf
sbb
shl
call
xor
fwait
popf
jle
mov
xor
xchg
clc
into
(bad)
loope
std
in
(bad)
mov
fisubr
jbe
jns
aas
ds
(bad)
xlat
cli
xor
or
jnp
add
iret
mov
fld
sub
inc
xor
inc
mov
dec
jp
sbb
ds
jecxz
cmovnp
in
xlat
hlt
loopne
fistp
iret
je
push
sub
scas
shl
mov
int
out
pop
push
shr
cmp
std
sub
push
adc
test
jne
pop
sub
ror
cmc
sub
xchg
in
pop
and
loope
ret
or
adc
ret
inc
add
out
call
sahf
mov
push
push
adc
mov
hlt
das
mov
jle
inc
dec
sbb
sbb
jne
lods
sub
mov
jmp
xor
in
jns
and
(bad)
jbe
sbb
inc
out
mov
(bad)
xchg
and
or
in
(bad)
fimul
addr16
scas
test
mov
sbb
mov
in
mov
fs
(bad)
test
jno
hlt
mov
mov
xchg
xchg
and
dec
out
popf
pop
loop
cmp
pop
and
int3
js
or
mov
cli
aam
rol
retf
mov
pop
mov
(bad)
les
lea
adc
sti
sbb
xchg
xchg
sub
test
ins
xor
sub
and
push
retf
inc
sbb
adc
pop
test
mov
scas
and
lods
push
shl
shr
push
ret
adc
inc
fidiv
push
cli
inc
mov
push
jmp
adc
xor
sub
shl
stos
mov
iret
outs
sub
fstp
mov
sub
mov
(bad)
mov
adc
mov
adc
xchg
das
adc
lea
inc
cli
sbb
mov
pop
xchg
dec
mov
mov
loope
popa
pushf
jmp
cmps
aad
sub
adc
idiv
push
add
xlat
or
mov
leave
add
fmul
cmp
mov
sub
sub
mov
ficom
mov
push
mov
iret
and
inc
test
xor
pop
xor
ins
cmps
jnp
clc
into
mov
push
(bad)
jl
mov
arpl
shl
push
xor
mov
mov
sahf
hlt
mov
lods
inc
rcl
sbb
cmp
pop
gs
push
push
push
mov
xchg
jns
mov
and
jnp
iret
(bad)
jmp
js
mov
out
pop
sbb
mov
push
xchg
scas
out
shl
mov
mov
xchg
mov
sbb
mov
mov
lds
xor
and
idiv
pop
popf
xor
mov
lahf
iretw
jno
push
lock
inc
jmp
in
adc
jmp
fsubp
lds
fild
ficom
add
enter
adc
mov
adc
sbb
dec
push
adc
jnp
retf
sbb
push
and
ins
jp
xchg
xor
lahf
(bad)
ja
hlt
not
out
stos
fistp
outs
es
pop
dec
pop
cmp
outs
iret
std
add
add
xor
mov
sub
xor
dec
loopne
icebp
sub
aad
jle
shr
mov
iret
bound
adc
repnz
mov
movs
pop
mov
cmovp
cli
inc
ins
cs
adc
ins
mov
xlat
rcl
jo
ins
outs
jge
pop
sbb
outs
in
retf
addr16
call
or
sbb
or
dec
loope
dec
and
xchg
xchg
ficomp
lea
es
call
enter
stos
add
jge
call
xor
mov
xchg
in
(bad)
(bad)
bound
mov
pop
repz
cs
add
inc
push
mov
lods
xor
add
gs
pop
iret
aas
aas
dec
loope
out
mov
mov
mov
and
mov
add
and
ja
shr
push
test
mov
sub
mov
out
pop
add
retf
mov
dec
dec
sbb
cmps
mov
jp
pop
mov
popf
xor
dec
mov
xor
jmp
in
lds
add
mov
push
daa
js
jno
mov
dec
fcmovnu
ret
dec
jb
pop
sbb
cmps
daa
ja
(bad)
out
cdq
mov
iret
xor
sub
cmp
outs
xchg
cmps
mov
xor
das
push
and
mov
xor
sbb
movs
xchg
add
pop
add
(bad)
rcr
inc
(bad)
sbb
mov
shl
fcom
pop
into
loop
inc
mov
add
hlt
jno
(bad)
test
or
retf
lock
inc
cdq
mov
iret
push
sbb
xor
imul
cmp
dec
(bad)
push
sub
(bad)
xor
mov
xchg
inc
xor
add
bound
sahf
mov
xchg
jns
es
jmp
cmc
lock
nop
outs
mov
or
test
in
xor
fstp
push
inc
mov
sbb
mov
or
adc
add
pusha
cmp
scas
jp
das
movs
inc
mov
rcl
sub
out
sub
push
dec
outs
xchg
sbb
pop
dec
jmp
test
jb
push
in
xchg
pop
ins
cmps
fwait
in
jne
pop
jp
(bad)
sbb
fcmovnb
adc
dec
add
dec
jecxz
sub
mov
xchg
push
or
adc
sbb
int
push
shr
or
je
popf
dec
imul
sti
pusha
jns
pop
fmul
popf
leave
(bad)
sub
pop
sbb
jp
gs
adc
cli
sahf
test
scas
add
mov
test
dec
push
inc
test
mov
ret
ins
push
sahf
mov
shl
add
ror
lea
mov
cmp
addr16
nop
jp
repz
mov
sub
das
jle
jnp
repnz
loop
lods
or
movs
aas
pop
scas
push
imul
std
imul
out
in
push
sub
xchg
js
mov
sbb
and
mov
mov
js
fcomp
pop
leave
jl
fstp
mov
push
sbb
cdq
pusha
daa
in
ja
add
mov
loope
mov
inc
jmp
test
jle
cwde
cmp
div
sub
xor
pop
leave
xchg
inc
jmp
cmp
inc
ss
and
ret
lods
jmp
stos
xchg
push
dec
jmp
imul
mov
or
cmp
pop
and
inc
cmps
mov
out
push
sub
dec
mov
sub
mov
lds
std
mov
xor
sbb
inc
dec
call
cmp
sbb
mov
mov
(bad)
cld
ret
jne
rol
adc
xchg
into
dec
stc
inc
mov
jecxz
call
(bad)
call
xor
in
sbb
es
(bad)
lods
mov
imul
and
imul
fucomip
js
repz
fisubr
stos
sahf
and
pop
push
bnd
jbe
or
xchg
adc
lock
sub
pop
std
lods
imul
aam
push
out
repz
cmp
and
sub
ins
cmps
inc
mov
pop
pop
loopne
lea
mov
ja
push
mov
hlt
cmps
jecxz
pop
mov
daa
int
push
sub
mov
push
mov
nop
jg
mov
jg
sti
movs
int
inc
sbb
sub
mov
leave
jbe
cmp
das
push
inc
ss
xchg
or
or
cmps
pushf
sub
adc
(bad)
xchg
(bad)
cmps
push
or
or
imul
sbb
jmp
sub
call
xlat
jl
and
sub
xor
xchg
pop
dec
push
sbb
pop
mov
rcr
lahf
daa
icebp
rcl
scas
adc
scas
fsubr
push
ret
cmp
inc
sbb
xchg
push
test
loop
not
xor
xchg
out
push
mov
or
test
cmp
dec
push
sub
push
jae
mov
jno
aas
push
cmp
xchg
addr16
sbb
dec
mov
shl
test
sbb
jb
ret
jp
sub
adc
xchg
stos
mov
and
mov
mov
retf
pop
shl
mov
cli
or
adc
dec
in
jbe
fldenv
pop
and
js
test
movs
scas
xlat
jmp
scas
push
aaa
push
addr16
ja
imul
imul
je
lahf
ds
(bad)
leave
ret
mov
loope
or
gs
jno
daa
push
cmc
adc
adc
cmps
xchg
mov
iret
pushf
push
mov
sub
adc
retf
cmp
cmp
icebp
sub
dec
mov
daa
sub
add
pop
adc
mov
in
das
addr16
xchg
call
jle
movs
pop
push
fwait
dec
adc
outs
xor
cmp
jmp
jp
call
fnsave
xor
mov
test
stc
movs
icebp
fisttp
mov
dec
cli
mov
popf
mov
pop
icebp
mov
sub
jo
jae
push
dec
test
xchg
loopne
ja
dec
outs
sbb
cmc
xor
add
mov
cmp
test
imul
jg
mov
ds
jo
xchg
sbb
inc
stos
lds
movs
adc
lea
mov
add
rol
cdq
xor
lahf
int3
sbb
inc
aaa
mov
in
mov
rcl
rsm
cmps
mov
mov
in
dec
jnp
ret
lds
pushf
mov
jmp
pop
push
test
les
add
rol
mov
aam
pushf
out
or
add
mov
xchg
add
jb
adc
xchg
loop
sub
es
fmul
xlat
sbb
mov
out
xor
cdq
test
rcr
rcr
dec
push
movs
and
xchg
mov
xor
xchg
mov
push
xchg
lods
lahf
sbb
mov
pop
and
lods
sahf
jecxz
shl
xor
sub
aaa
(bad)
retf
(bad)
repz
mov
pop
scas
sbb
dec
mov
xor
sbb
adc
ins
jo
sbb
sub
sar
mov
js
sbb
pop
lods
ret
pop
mov
fadd
inc
push
cs
cld
mov
pushf
adc
mov
sbb
fucomip
shr
hlt
add
inc
outs
xor
xor
test
xchg
outs
or
or
adc
xchg
popa
imul
out
xchg
add
mov
push
and
cmp
call
into
pop
enter
(bad)
(bad)
aam
mov
cmps
adc
push
inc
dec
loope
xor
mov
add
jmp
repz
in
add
mov
jge
mov
in
xchg
mov
jno
mov
fimul
inc
mov
xor
add
mov
mov
pop
add
rcl
(bad)
xlat
sbb
ror
push
inc
int3
icebp
(bad)
out
int
call
and
cmp
inc
ret
and
xchg
jp
js
sub
xor
gs
lods
call
jmp
sbb
push
mov
stos
dec
sbb
mov
pop
fisubr
xchg
push
adc
jecxz
out
add
add
xor
ja
mov
cmc
in
pushw
loopne
dec
out
dec
xchg
shl
sti
movs
popf
jl
(bad)
jl
jge
in
(bad)
into
dec
mov
cmc
sub
cmp
or
hlt
xor
dec
in
and
repz
addr16
mov
cli
rcr
jnp
xor
xchg
add
cs
lea
jmp
mov
imul
jno
test
cmp
add
repz
push
shr
push
push
inc
sbb
or
jle
inc
mov
sti
(bad)
outs
in
xchg
xor
nop
xchg
frstor
xchg
add
add
jnp
sub
sahf
sub
jbe
xchg
pop
cmp
fisub
push
sar
ror
jg
popf
(bad)
pushf
mov
jecxz
std
mov
(bad)
test
mov
cmp
retf
(bad)
(bad)
into
fwait
inc
imul
data16
shr
and
xchg
pop
mov
cdq
sti
cmp
shr
daa
inc
sbb
jae
xor
cmp
add
cmp
add
retf
sub
dec
xchg
or
ret
sbb
add
gs
xchg
push
push
push
lods
dec
inc
cmps
jo
xchg
and
mov
push
imul
idiv
jmp
mov
rcl
icebp
mov
add
(bad)
pushf
mov
in
cmp
xor
xchg
mov
pop
out
mov
xlat
xor
into
dec
xchg
int
sub
loop
adc
push
push
xor
adc
in
xor
test
xor
scas
fst
enter
movs
adc
ins
psadbw
jmp
sti
ret
jle
sbb
dec
dec
in
movs
es
push
inc
cdq
shl
or
jae
loope
sub
sub
mov
xor
jmp
out
outs
loopne
pop
ja
jmp
jle
test
aam
cmc
scas
sahf
aam
adc
cmc
pop
in
mov
aam
dec
enter
push
mov
dec
in
jnp
mov
dec
xchg
push
mov
popa
mov
ins
retf
leave
push
stos
inc
and
adc
push
(bad)
std
pop
inc
add
and
xor
mov
jmp
lea
xor
adc
push
fld
push
push
scas
stos
mov
mov
dec
shl
xor
dec
pop
test
dec
mov
add
inc
dec
adc
and
in
inc
adc
pushf
or
pop
sub
int
or
jns
push
sub
retf
neg
les
addr16
mov
push
pop
sub
movs
inc
sbb
lea
bound
and
dec
inc
std
fcom
and
sbb
cmp
fsubr
into
sbb
stos
adc
and
loopne
scas
sbb
cmp
fiadd
inc
mov
hlt
int3
hlt
sub
dec
fiadd
mov
fs
sub
xor
lds
leave
mov
push
out
lods
mov
xor
cmp
adc
iret
punpckldq
scas
push
cmps
adc
popf
out
sbb
fxch
stos
fs
ja
jae
sbb
pop
nop
ss
in
fisubr
(bad)
popf
jmp
xchg
mov
mov
mov
out
push
mov
fs
mov
ret
std
inc
jne
jae
pop
into
mov
cmp
cmp
std
data16
std
jp
shl
mov
call
pop
dec
adc
dec
sub
jns
xor
xor
ret
push
test
xor
pop
jno
mov
jecxz
or
retf
int
sub
les
dec
dec
mov
dec
int
pop
dec
pop
test
push
cmps
stos
sbb
sbb
das
add
xchg
push
mov
mov
fldcw
lahf
(bad)
clc
stos
inc
pop
pop
lea
dec
aaa
dec
je
dec
(bad)
(bad)
mov
add
sbb
outs
(bad)
jecxz
lods
fcmovnb
fs
pop
lods
iret
push
hlt
mov
stos
jns
sub
xlat
(bad)
hlt
push
fcomp
outs
int3
jmp
dec
test
cmps
add
dec
mov
push
sub
stos
cmp
pusha
mov
(bad)
jno
ss
cmc
iret
or
mov
mov
and
stos
xlat
mov
bound
daa
adc
inc
jle
lods
pop
nop
adc
call
repz
mov
mov
push
mov
xchg
or
pop
dec
mov
and
or
test
sub
ss
stc
rcl
lods
ror
xor
push
es
inc
or
aas
fidivr
xor
jae
fwait
vunpckhpd
(bad)
clc
hlt
bnd
cmp
movs
aas
scas
std
cmp
into
sub
or
movs
jl
jns
mov
iret
cmp
fcomi
add
push
and
pop
aaa
out
icebp
std
test
mov
cs
fdivr
les
add
fmul
push
push
xor
and
pop
fidivr
arpl
fdiv
add
das
sbb
xchg
jno
add
(bad)
pop
fcmovnbe
je
sbb
cli
fcomp
push
inc
(bad)
jecxz
ret
ret
int
cmp
xor
mov
popf
dec
adc
and
outs
inc
inc
inc
jae
add
xchg
inc
push
mov
sahf
xchg
(bad)
jle
outs
daa
jae
jno
imul
push
lods
div
cmp
xchg
stc
test
movs
pop
adc
adc
out
and
cmps
hlt
inc
push
cmp
stc
test
ja
pop
call
mov
dec
daa
(bad)
movs
pop
movs
xlat
(bad)
outs
inc
bound
xchg
(bad)
mov
inc
jp
shr
stos
lea
dec
adc
sub
inc
mov
mov
sub
scas
or
xchg
add
cmps
lahf
xchg
adc
aas
dec
xchg
outs
dec
push
adc
xchg
fstp
xchg
clc
aaa
mov
iret
jns
lock
test
pop
lods
ins
dec
jmp
out
add
jp
jbe
pop
retf
scas
jae
sar
or
mov
(bad)
leave
int
dec
in
dec
stos
movs
fwait
loop
cwde
es
push
lahf
leave
test
push
xor
adc
je
sti
leave
mov
xor
xor
inc
sbb
add
push
jo
movs
pop
push
xor
mov
inc
shl
mov
cmp
(bad)
xchg
mov
enter
cmc
pop
es
stos
push
idiv
test
jo
inc
iret
test
jp
aaa
pop
xor
fwait
pusha
out
xchg
loop
into
and
sahf
pop
dec
jmp
imul
daa
scas
cmp
mov
(bad)
push
dec
mov
fld
(bad)
mov
ret
push
ins
push
sti
jl
repz
mov
rsm
retf
movs
pop
fcom
cmp
mov
jbe
nop
sub
call
test
cdq
fild
out
push
leave
dec
and
lods
out
inc
xor
jne
xchg
add
add
push
stos
outs
dec
adc
and
shr
add
aam
imul
retf
xchg
sub
adc
in
lods
dec
sub
call
jo
xor
jns
mov
mov
cmp
popf
jge
call
(bad)
fwait
ds
jb
mov
(bad)
shl
xor
cmps
jmp
fld
dec
js
loope
mov
sbb
pushf
sub
mov
rcl
push
ins
or
add
xor
pusha
pop
mov
fstp
test
mov
out
adc
gs
jmp
movs
mov
inc
and
mov
xor
pop
call
inc
adc
test
fidiv
adc
dec
add
loope
pop
mov
cmps
addr16
popa
and
shr
test
mov
add
mov
cld
mov
fild
xchg
leave
and
(bad)
jmp
xchg
arpl
lods
dec
xor
adc
dec
leave
jno
mov
xchg
and
enter
int3
pop
out
mov
repz
add
push
sbb
push
push
jo
loopne
and
shl
pop
mov
sbb
mov
mov
push
mov
mov
dec
test
add
mov
lea
cmc
push
jbe
stos
jge
xchg
out
(bad)
cli
(bad)
xchg
lock
xchg
sbb
sbb
inc
sbb
pop
add
fcmovnbe
ins
xchg
push
fsubr
jnp
and
jmp
mov
xor
inc
enter
mov
int3
jo
cli
mov
fld
out
lods
test
inc
sub
aaa
adc
dec
pushf
jecxz
jo
les
movs
push
push
(bad)
call
pop
in
mov
sbb
fisub
ja
scas
imul
aaa
jnp
scas
jge
or
aam
das
sti
or
pop
fsubr
out
adc
sar
inc
or
add
push
jo
adc
retf
and
sub
add
or
push
xchg
inc
push
xchg
sbb
inc
cmp
fistp
add
(bad)
into
mov
push
mov
push
aaa
jge
xchg
test
cld
push
out
pop
inc
push
lahf
clc
dec
xor
push
movs
clc
pop
sbb
ret
xchg
and
jbe
push
xor
clc
icebp
push
inc
daa
mov
xchg
xchg
pop
mov
movs
sub
in
mov
cwde
dec
(bad)
cmc
icebp
cmps
stos
loop
imul
push
(bad)
pop
sub
sbb
xor
inc
in
pop
inc
sbb
movs
jns
neg
lock
ror
mov
call
ins
sub
mov
xchg
inc
sbb
xor
or
fisubr
in
popa
adc
pop
or
sub
jnp
fmul
sbb
in
es
addr16
out
repz
je
jmp
stc
push
std
outs
mov
pusha
inc
int3
pop
dec
outs
jbe
adc
imul
inc
cmps
jle
adc
and
ds
aas
sbb
iret
mov
mov
mov
sbb
outs
push
leave
or
gs
nop
lea
pop
xor
fisub
mov
int3
inc
xchg
push
add
loopne
inc
sub
sub
pop
aam
out
dec
dec
gs
mov
pop
das
dec
fcom
push
inc
pop
jb
cs
int3
xchg
jno
out
call
loopne
xchg
push
scas
addr16
cmp
mov
scas
xor
fwait
dec
out
and
xchg
test
sub
(bad)
cmps
clc
js
shl
jge
(bad)
cld
movs
jae
jne
es
jp
push
stos
fist
xlat
sbb
imul
sti
jo
push
xchg
loope
sub
movs
pop
adc
sbb
cdq
mov
cwde
(bad)
cmp
or
cmps
sub
cli
dec
int
loopne
dec
xchg
sbb
push
aam
cmp
aaa
xchg
or
dec
sti
jnp
mov
mov
dec
loop
nop
fsub
jle
dec
dec
and
lds
adc
cli
cmp
sbb
ins
iret
out
loope
jb
scas
mov
add
push
or
gs
mov
mov
mov
pextrw
push
pop
das
mov
inc
pop
leave
out
loope
sub
and
inc
pop
push
sbb
stos
mov
or
test
push
cmps
fisubr
adc
sub
and
mov
les
xor
(bad)
push
gs
sbb
sbb
call
ins
xor
out
aam
int3
mov
mov
xchg
popa
test
dec
pop
adc
shl
daa
mov
stc
iret
sub
pop
add
in
lea
lahf
loop
cld
adc
sub
out
loope
out
push
scas
pop
jl
das
sub
pop
xchg
mov
lock
mov
jmp
pop
push
push
(bad)
sahf
stos
in
xchg
and
adc
aam
push
xor
pop
pop
and
ja
jae
cdq
int3
jge
scas
mov
gs
mov
out
xchg
mov
inc
pop
mov
inc
inc
sub
mov
cmp
popa
hlt
and
aad
xchg
imul
ror
inc
movs
cmp
enter
int
test
(bad)
mov
jbe
inc
aaa
push
jns
into
shr
pop
nop
arpl
cli
ins
loopne
adc
push
movs
pop
rcr
fsub
push
mov
and
inc
nop
cmps
shl
or
dec
adc
stc
pop
popa
dec
test
adc
enter
mov
jmp
cmp
push
sbb
sub
call
loope
ins
or
fsubr
and
push
retf
mov
hlt
add
pop
pop
nop
or
or
mov
mov
mov
jb
cmps
fbstp
or
outs
mov
sub
add
scas
pop
lods
jnp
fs
pop
fwait
arpl
mov
loopne
push
(bad)
push
xor
push
cmp
popa
mov
inc
repz
sub
jb
sbb
lahf
lea
cli
dec
sbb
cmps
aas
int3
loop
pop
(bad)
test
and
inc
(bad)
(bad)
jno
dec
mov
into
int
in
shl
jnp
test
es
sti
idiv
das
es
outs
mov
jg
sar
ret
and
push
jle
dec
pop
not
adc
cmps
mov
xchg
inc
enter
cmp
xor
push
lea
xchg
cmp
pop
jae
pop
pop
mov
push
retf
or
sub
shl
xor
mov
inc
sbb
add
cmp
cmp
ins
pop
cmp
pop
mov
sbb
retf
mov
adc
adc
std
out
mov
push
test
cdq
mov
dec
lahf
outs
cmp
in
std
out
sbb
fwait
mov
xchg
ror
xor
bound
arpl
mov
jnp
or
mov
pop
rol
and
jno
xchg
out
inc
icebp
mov
mov
cmc
dec
in
fs
and
les
out
out
jge
pusha
(bad)
repnz
fidivr
push
outs
call
xor
repnz
imul
stos
xchg
push
and
data16
popa
js
aas
lds
stos
mov
push
imul
dec
and
bound
or
mov
xchg
jno
repnz
inc
sbb
pop
jnp
dec
jne
retf
sbb
shl
fs
cmc
fxtract
test
cdq
out
mov
mov
mov
push
sbb
mov
adc
inc
shr
mov
mov
xor
aaa
scas
and
pop
imul
aam
loopne
(bad)
rcl
jne
sub
aad
(bad)
shr
jmp
std
in
out
aam
xor
fwait
fwait
icebp
loope
xchg
push
fnstenv
inc
(bad)
mov
pusha
mov
sub
cld
mov
stos
stc
sbb
add
cmp
ins
and
xor
xor
xchg
mov
or
ds
sub
out
stos
jl
pop
jmp
adc
push
(bad)
and
daa
inc
retf
nop
dec
push
mov
data16
mov
jnp
mov
xchg
adc
mov
(bad)
xor
inc
ror
aam
sub
imul
in
mov
jp
aaa
arpl
sub
ret
jmp
push
jns
xchg
mov
push
retf
mov
retf
pop
retf
mov
imul
je
not
lods
inc
pop
add
xor
scas
inc
mov
sub
or
add
(bad)
mov
jg
cwde
stos
ret
in
pop
cmp
sub
in
mov
sub
mov
xchg
add
sbb
xchg
and
popa
nop
xor
cmps
rcl
fwait
clc
cld
sbb
jno
nop
push
add
je
outs
arpl
sar
vminpd
xor
and
popa
and
mov
retf
dec
inc
lods
add
lea
mov
and
lock
mov
imul
sbb
xor
add
cmc
retf
mov
or
push
stos
inc
mov
int
(bad)
out
mov
fisttp
pop
xchg
mov
jl
cmp
not
sbb
sbb
hlt
mov
and
mov
and
btc
ja
mov
fisubr
jns
stc
ret
xor
jbe
mov
mov
add
inc
push
gs
push
mov
out
and
(bad)
jne
clc
dec
mov
sbb
fwait
jno
into
dec
push
test
(bad)
cld
adc
ja
mov
cwde
es
push
jge
mov
ss
rcr
sub
rol
js
mov
xor
pusha
sahf
imul
cmp
sub
or
and
fimul
stc
sbb
stos
imul
gs
xchg
out
dec
pusha
xchg
pop
bound
and
out
imul
fistp
stos
aas
mov
xor
leave
mov
fnstsw
push
outs
lods
dec
(bad)
std
loope
shr
mov
dec
test
cmp
mov
jge
shl
arpl
sti
in
out
lods
mov
popa
test
int
stos
add
inc
iret
mov
jmp
fsubr
dec
inc
std
(bad)
cli
mov
sti
mov
pop
pop
scas
mov
mov
xor
push
je
outs
out
lds
inc
pusha
jb
(bad)
les
enter
mov
(bad)
cmp
std
dec
cdq
and
loope
icebp
inc
into
std
frstor
popf
and
lods
sub
jg
fstp
cmp
pop
pop
dec
adc
mov
imul
ss
push
ffree
gs
in
cmps
je
sub
aad
dec
or
nop
adc
xor
dec
stc
pusha
jg
sub
inc
dec
sub
sub
cmps
pop
stos
and
mov
mov
(bad)
popf
mov
test
ins
jmp
ins
push
pop
(bad)
ins
cmp
and
sbb
xchg
inc
stos
cmp
xor
push
stos
cmps
add
lea
mov
mov
ret
xor
inc
sub
dec
sbb
pop
jno
lds
xor
shl
aad
push
scas
ror
int
out
loope
(bad)
adc
in
or
test
pop
fcom
dec
retf
push
ret
out
mov
mov
fwait
push
adc
jge
into
cli
popf
jl
push
in
jp
mov
jp
aad
or
test
(bad)
cmp
mov
(bad)
call
dec
mov
mov
xchg
mov
push
push
xchg
mov
or
or
mov
adc
xor
hlt
xor
test
mov
mov
add
ret
push
fwait
imul
fsubp
imul
sub
(bad)
ds
lds
sub
sub
std
cmp
jo
adc
cmp
sub
mov
adc
mov
hlt
rcr
imul
das
xchg
xor
mov
mov
das
int3
inc
fsub
push
sub
call
test
call
sbb
jmp
(bad)
stc
adc
retf
xchg
mov
(bad)
pop
sbb
pushf
mov
retf
mov
fmul
jo
push
inc
sbb
pop
sbb
ret
jae
outs
addr16
lock
cld
mov
dec
xchg
xor
adc
out
push
or
stc
(bad)
jp
stc
outs
stos
jbe
push
stc
je
mov
out
(bad)
xlat
ret
rcr
lods
xlat
fiadd
xchg
fdivr
lods
mov
mov
xchg
sti
add
lock
icebp
push
jg
dec
shl
arpl
clc
mov
xchg
stc
in
pop
cli
iret
fcmovne
jg
imul
sahf
jge
dec
fisttp
data16
dec
push
mov
je
adc
fiadd
inc
push
sub
sti
ins
xchg
sahf
xchg
jmp
mov
dec
adc
cdq
cwde
ds
jecxz
mov
mov
sub
sbb
cmp
or
mov
fsubr
mov
jo
pusha
jae
push
(bad)
jb
xchg
inc
sbb
repnz
dec
xor
fmul
nop
xchg
push
std
adc
mov
scas
jp
sahf
push
mov
mov
push
fdivr
jge
aad
mov
sbb
test
push
pop
aas
fnstsw
fdiv
inc
adc
ins
shl
(bad)
add
mov
enter
mov
cmp
mul
dec
outs
int
in
mov
cmps
leave
test
stos
aaa
sub
inc
mov
stc
into
(bad)
mov
out
out
or
sbb
xchg
inc
xchg
sub
stc
movs
cli
loopne
sti
in
(bad)
in
mov
or
jns
mov
sub
jb
dec
pop
test
push
mov
xchg
jbe
leave
pop
lds
pop
dec
bound
cdq
lods
movs
fcomp
mov
xchg
mov
and
es
add
rol
icebp
pop
gs
pop
xchg
cmc
push
adc
ins
cs
push
out
lds
push
xor
inc
xor
mov
ror
mov
xchg
xchg
fs
pop
jle
sub
push
sub
or
cli
jo
int
cmp
xor
and
xchg
mov
push
xor
gs
adc
mov
pop
mov
cli
cs
pusha
or
call
data16
sbb
pop
xchg
shl
push
push
jmp
push
call
mov
in
movs
iret
(bad)
pop
aaa
aaa
push
push
rcr
repz
ret
in
pop
cmp
leave
mov
dec
cmp
jle
pop
aaa
push
retf
cli
test
mov
cmps
dec
cmps
push
aad
mov
retf
ror
or
popa
es
sub
jmp
jb
shl
gs
sub
mov
or
cmp
mov
aam
pop
jo
lods
jge
mov
jno
lods
mov
scas
movs
lods
mov
or
or
add
xor
sbb
mov
mov
inc
push
enter
pop
push
aad
int3
mov
sub
out
fs
js
fucomip
xlat
mov
push
push
scas
mov
pop
aad
dec
sub
xchg
inc
xor
and
in
and
dec
call
mov
rep
or
cmp
cmp
sbb
lods
cmp
gs
mov
je
jmp
jnp
pop
or
pop
pop
subps
and
sub
xor
jae
and
adc
rol
adc
fdiv
movs
cdq
fs
xchg
adc
retf
std
add
push
dec
inc
inc
push
imul
jge
jp
lods
sbb
xchg
cli
rcr
mov
in
sbb
into
adc
nop
sub
(bad)
cmc
mov
mov
loopne
mov
cmp
out
into
fadd
sub
mov
iret
stc
mov
rcl
in
mov
or
daa
xor
aas
out
(bad)
ds
pushf
addr16
out
inc
mov
xor
jb
sti
outs
sar
data16
mov
imul
in
push
lods
sub
loop
scas
(bad)
icebp
outs
addr16
mov
mov
push
arpl
xchg
xchg
xchg
push
push
inc
pop
add
out
or
fs
frstor
xchg
cmp
mov
in
sbb
pop
movs
int3
das
lods
mov
or
fistp
push
inc
sub
data16
movs
mov
pop
ret
loopne
retf
cli
sbb
cdq
pop
sub
mov
daa
movs
imul
in
lock
jp
gs
and
sub
out
(bad)
ins
pushf
mov
push
ficom
mov
movs
in
fdivr
fcmovnu
je
jge
mov
mov
mov
outs
push
mov
sbb
test
(bad)
lods
dec
mov
or
test
mov
push
int
ins
pop
sti
mov
fcmovnbe
mov
jno
mov
cmp
push
and
jno
sub
add
sbb
mov
enter
adc
popa
mov
push
jle
js
not
std
xchg
ror
xlat
outs
pop
mov
push
mov
cmp
and
jns
cmp
cld
into
and
push
push
stos
and
popf
jmp
in
fs
inc
nop
fmul
neg
icebp
stos
(bad)
fidivr
xchg
sbb
push
clc
or
sub
sub
adc
sub
stc
jle
jmp
xchg
mov
retf
fiadd
jb
pushf
mov
rcl
push
call
retf
and
cmp
icebp
sar
push
loope
out
adc
neg
push
or
pop
sbb
call
sub
adc
sbb
mov
and
ss
sbb
add
fcmove
int
jmp
in
push
ins
scas
cmps
dec
dec
(bad)
hlt
fcomp
aaa
xlat
daa
or
lahf
cmc
sbb
xor
iret
outs
je
mov
cmc
call
xchg
sar
in
jnp
test
pop
test
xchg
jbe
or
xor
sub
or
call
iret
into
retf
xchg
imul
cdq
xor
or
pop
(bad)
cli
pop
pop
sbb
sbb
ss
mov
jl
xchg
xor
imul
xlat
loop
dec
fwait
dec
fcmovbe
rcl
pop
stc
lahf
scas
aad
push
mov
(bad)
pusha
mov
xor
fdiv
hlt
int
mov
aas
pop
mov
out
outs
pusha
ins
cmps
aam
in
mov
repz
jmp
cmp
dec
sti
sbb
xor
(bad)
out
sub
out
call
pop
int
call
cld
test
inc
cmp
add
cmp
outs
sar
push
cmp
(bad)
jmp
repnz
mov
pop
outs
add
loop
jae
sub
lea
xchg
lds
pop
jp
stos
or
add
cmps
inc
mov
mov
add
mov
cmp
ds
xchg
mov
out
sub
ret
jmp
pop
bnd
addr16
test
test
xor
or
push
sub
add
fmul
sahf
xlat
js
sbb
cwde
fnstcw
push
mov
or
sub
jns
repnz
sbb
mov
jb
sti
xchg
sbb
xchg
nop
xchg
gs
jle
cmp
into
sti
inc
clc
mov
outs
xchg
sub
loope
mov
leave
in
outs
imul
ins
push
jmp
add
jns
sti
das
jnp
fild
int3
mov
mov
push
sub
gs
pop
mov
(bad)
mov
lods
inc
push
outs
fimul
mov
fcomi
sbb
mov
jmp
arpl
inc
scas
dec
pop
mov
xor
sub
and
and
loope
pop
(bad)
in
xchg
sub
repz
dec
fs
leave
bswap
push
retf
or
in
and
popf
add
loop
push
(bad)
pop
in
lock
fwait
push
xor
lahf
fistp
div
aaa
jb
xchg
leave
shr
add
repz
sub
push
rcl
xor
or
mov
out
ins
int3
mov
pop
stc
mov
fcomp
lods
sbb
mov
jne
push
ror
jb
ja
fisubr
xor
sbb
pop
js
lock
lds
ins
das
movs
xchg
adc
mul
mov
popf
lods
outs
je
sbb
lock
jnp
ja
jmp
mov
mov
jae
sbb
shl
and
push
jl
push
inc
xor
sub
bound
mov
rcl
inc
jecxz
cld
adc
cmps
xchg
add
shr
mov
mov
mov
iret
daa
cmp
addr16
pop
rcr
pop
or
aas
dec
aad
cmps
ret
ror
sub
mov
xor
lea
push
retf
mov
pop
cs
adc
daa
mov
xor
xor
scas
sti
push
inc
or
inc
jl
or
push
adc
mov
retf
cmp
in
xchg
jb
push
daa
xor
cmp
int3
in
mov
popa
inc
adc
ror
ins
fsub
inc
jne
retf
or
or
repz
js
rcr
pushf
xor
mov
jnp
inc
sbb
fisubr
in
addr16
fsubrp
mov
jnp
lock
fild
inc
pop
pop
and
repnz
(bad)
mov
pop
mov
dec
mov
enter
aam
jl
pushf
in
or
jne
or
das
xchg
xchg
jl
xor
scas
in
push
pop
jae
fcomp
jb
jl
pop
mov
and
push
cmp
inc
cdq
cld
mov
xchg
je
pop
outs
popf
fisttp
inc
ror
mov
call
dec
cmps
mov
push
mov
sbb
mov
add
sahf
pop
adc
add
lock
aas
das
mov
mov
sub
(bad)
inc
fnstsw
das
add
and
adc
push
dec
inc
mov
hlt
test
xor
call
shr
stc
pushf
je
ja
out
imul
mov
mov
sti
push
xor
int
and
retf
icebp
cs
push
pop
cld
or
aam
cmp
inc
inc
sbb
cmovae
sbb
outs
shr
jns
cmps
mov
push
adc
or
or
add
sub
mov
mov
xchg
fldcw
ins
ins
mov
(bad)
cmp
ffreep
(bad)
ror
pop
cmp
pop
xchg
retf
inc
or
sub
mov
rcl
dec
add
test
and
sub
inc
arpl
pusha
adc
xchg
lods
loop
pop
(bad)
into
mov
repz
call
ficomp
jle
sar
movs
mov
fld
mov
(bad)
xchg
rep
out
mov
fsub
inc
out
inc
scas
mov
rol
sub
fcomi
jmp
cmp
cmp
ret
inc
cli
ja
leave
btr
retf
imul
lea
mov
cmp
adc
pop
or
mov
pop
outs
movs
mov
sbb
js
test
pop
xchg
gs
sbb
mov
xor
dec
test
cmp
pop
loop
in
aas
push
popf
xor
lods
bound
lds
das
imul
jp
cmp
fld
loope
test
je
adc
outs
clc
mov
dec
pushf
stc
mov
fcomp
sbb
dec
not
dec
hlt
int
jno
pop
pop
aam
cmp
and
jl
dec
or
xor
stos
dec
in
lods
pavgw
ret
inc
sbb
inc
xor
mov
(bad)
addr16
test
mov
ins
sar
and
xchg
and
(bad)
(bad)
shl
jae
mov
xor
jnp
call
cli
(bad)
fnstcw
pop
ror
in
jl
pop
xchg
das
mov
inc
cmp
push
add
call
push
sbb
in
adc
repz
push
jecxz
adc
sub
cmps
adc
int3
inc
push
mov
lahf
xchg
adc
add
nop
adc
push
repz
add
ins
add
test
das
ret
dec
cdq
or
sub
mov
call
jae
sub
popf
inc
imul
xchg
add
mov
cmc
enter
jp
ins
(bad)
shr
sahf
jg
dec
aaa
pop
cmp
retf
sbb
popf
and
mov
push
mov
test
inc
fadd
jb
and
retf
mov
mov
adc
pushf
das
cmp
sti
cwde
das
rol
push
push
jns
in
push
inc
xchg
stos
jl
or
sbb
shl
cwde
xchg
ja
out
movs
loopne
hlt
shl
imul
jo
out
adc
cmp
shl
jmp
popa
xchg
jl
pushf
mov
clc
cmp
mov
dec
aad
dec
jns
mov
push
out
repz
pop
mov
adc
mov
and
mov
lock
ss
in
jns
stos
inc
jg
cdq
sbb
add
xchg
or
daa
xchg
dec
enter
aaa
enter
pusha
es
arpl
xor
mov
data16
cmp
push
sbb
jmp
bound
stos
add
dec
fistp
rcl
ja
repz
cmp
jl
push
adc
adc
mov
inc
loopne
out
outs
clc
fistp
push
jbe
inc
pop
fdivr
repnz
int
push
mov
fsub
xchg
inc
push
outs
sbb
nop
inc
pop
sub
xchg
int3
into
sub
sbb
push
mov
ss
in
bound
rol
pushf
loop
xchg
scas
cmps
ds
jecxz
int
sbb
pop
je
fistp
cmp
cvtps2pd
jno
mov
js
xchg
adc
mov
pop
push
cld
test
adc
sbb
(bad)
mov
pusha
scas
xchg
mov
std
clc
int
(bad)
jb
(bad)
mov
jmp
jbe
pop
ja
(bad)
jmp
pop
fild
mov
nop
test
stos
leave
sti
fwait
shl
jmp
add
movs
jns
jmp
inc
hlt
sub
or
xor
xchg
loope
mov
mov
retf
xor
or
sub
fwait
sahf
sbb
les
or
in
daa
in
dec
jp
jl
loope
mov
repnz
jb
pop
jmp
and
push
sub
std
out
popa
jbe
push
pop
lahf
movs
lods
mov
lods
inc
mov
jnp
call
mov
imul
bound
or
in
aam
dec
sbb
jp
jmp
cdq
xchg
stos
loop
jmp
loope
(bad)
outs
ficomp
ret
popf
idiv
inc
movs
or
sbb
call
addr16
xor
cmp
mov
in
scas
daa
ja
sti
daa
xchg
xor
add
cmp
mov
fs
retf
mov
mov
xchg
pop
inc
sbb
mov
push
cmps
mov
inc
stc
(bad)
loopne
sub
lock
jb
rcr
adc
jne
or
rcr
sbb
mov
lds
pop
mov
mov
push
retf
fbld
add
or
scas
les
out
cmps
add
iret
shl
add
or
sti
ins
dec
push
and
call
ss
leave
enter
mov
pop
hlt
shr
retf
mov
jae
push
cmp
lods
mov
shr
fimul
enter
mov
leave
inc
mov
add
and
in
stos
popf
xchg
lahf
in
mov
adc
pushf
adc
xchg
loope
mov
imul
adc
movs
pop
push
xor
fnstsw
inc
shl
test
into
lea
jnp
call
mov
nop
add
jle
sub
adc
imul
dec
mov
sti
inc
xor
outs
out
jecxz
mov
push
push
add
iret
fwait
xchg
push
sub
lock
fbld
xchg
sub
xor
cmp
fiadd
mov
pop
scas
cmp
sub
cmps
or
mov
(bad)
arpl
jbe
sub
scas
push
inc
and
push
inc
jns
call
pop
pop
mov
mov
loope
(bad)
cdq
inc
sbb
movs
pop
stc
mov
popf
sbb
cwde
ins
mov
ret
add
add
lea
xchg
mov
xchg
repz
sbb
mov
push
push
cmps
push
(bad)
sbb
adc
loope
loop
add
jmp
mov
lds
test
pop
fwait
out
xlat
jnp
hlt
sub
push
mov
mov
repnz
call
inc
pop
(bad)
mov
(bad)
fxch
dec
jp
cwde
sbb
inc
fisubr
aaa
inc
out
cmp
in
shl
cmp
sbb
scas
aad
mov
clc
ret
dec
jmp
jbe
jg
out
std
jle
(bad)
jle
mov
cs
mov
pop
mov
add
dec
xchg
jp
fldenv
or
es
pushw
xor
shr
xchg
lea
inc
ror
dec
inc
retf
stos
mov
int3
sub
aad
and
jg
movs
in
xchg
sbb
xor
repz
cmp
push
in
push
xchg
out
jmp
sbb
sbb
mov
add
xor
push
popa
xor
jno
push
xor
inc
add
retf
ficomp
nop
adc
jno
sbb
dec
aas
mov
movs
mov
fstp
xchg
lods
jns
mov
dec
mov
movs
arpl
xor
and
movs
pop
retf
js
hlt
ja
sbb
out
xchg
mov
cmps
add
rcl
pop
pcmpgtw
xchg
scas
test
(bad)
retf
mov
(bad)
out
ins
outs
cmc
and
jno
adc
add
xchg
jecxz
push
push
into
inc
cwde
add
jl
xor
into
xchg
stc
stc
push
loope
movs
or
inc
cmp
xchg
mov
repnz
pop
mov
xor
dec
int3
add
or
push
jns
adc
and
int
dec
mov
(bad)
ins
push
data16
test
mov
add
mov
shr
xchg
push
das
sbb
push
ret
popf
not
inc
sbb
push
fisubr
cmp
(bad)
xor
adc
push
dec
(bad)
inc
and
ret
dec
and
xchg
sub
inc
mov
lods
add
push
mov
aaa
xchg
mov
cmc
mov
sbb
mov
leave
ss
test
daa
pop
xchg
xor
mov
push
repz
cmp
and
or
inc
cmp
pop
mov
push
loope
pop
push
(bad)
push
mov
mov
in
dec
out
test
xchg
push
push
xchg
inc
cmp
adc
call
sub
xchg
sbb
dec
mov
test
pop
inc
and
cmp
fld
push
push
aam
pop
add
add
ret
sub
cmc
cmp
movs
fnstenv
stc
daa
das
cld
scas
imul
inc
js
add
mov
aas
add
jmp
out
sbb
sub
sbb
stos
repz
retf
push
test
shl
xor
es
int3
jnp
sbb
in
push
dec
(bad)
mov
mov
sub
mov
call
sub
pop
mov
scas
xchg
setae
ja
cmp
out
mov
out
out
jle
mov
mov
mov
mov
xchg
inc
and
iret
(bad)
leave
mov
in
imul
cmps
rcl
adc
mov
inc
es
fdivr
shl
mov
sbb
dec
and
push
test
int
sti
mov
(bad)
xchg
aas
dec
scas
mov
je
push
dec
sub
repz
repnz
and
add
cld
sub
mov
fnstcw
scas
xor
lods
out
mov
(bad)
xor
fimul
mov
div
sbb
ret
in
retf
jg
push
cmp
jmp
dec
add
ss
jmp
jp
xchg
xor
std
xor
cwde
adc
and
out
or
xor
(bad)
mov
push
repz
mov
retf
dec
sbb
mov
dec
xchg
(bad)
jnp
add
mov
rcr
pop
mov
mov
inc
mov
lds
sub
inc
push
retf
jae
inc
sub
jmp
adc
dec
fstp
mov
popa
lahf
push
call
jmp
test
push
dec
push
cli
and
dec
mov
sbb
test
test
add
and
test
push
inc
test
push
xchg
hlt
inc
sbb
mov
ror
or
xor
inc
dec
fcom
aad
daa
mov
xchg
inc
xlat
xor
repz
cmp
and
call
adc
pop
mov
jmp
dec
ss
jmp
sbb
jg
and
es
lods
xchg
inc
pop
dec
adc
fst
jnp
fdivr
fcmovbe
in
stc
shl
aad
(bad)
out
cmc
out
xor
(bad)
retf
xchg
mov
or
loopne
push
add
xchg
dec
xor
jge
and
mov
mov
bound
jbe
retf
adc
and
stc
in
aam
ret
push
sub
shl
fist
push
add
jae
mov
cmp
or
and
xor
add
push
imul
data16
mov
les
push
xchg
call
outs
and
push
push
sub
and
call
(bad)
inc
je
and
loopne
mov
repnz
pop
lock
mov
nop
ficom
inc
xchg
or
and
mov
test
dec
and
(bad)
mov
fcmovnb
mov
(bad)
sti
in
and
scas
daa
push
inc
xlat
cld
rcl
scas
and
cmp
shl
movs
xor
(bad)
jg
stos
aas
out
and
mov
rol
mov
clc
aad
stc
jmp
out
imul
aaa
adc
dec
call
test
sahf
mov
xor
out
lock
sbb
test
sbb
xchg
cmp
xor
push
imul
out
cmp
aas
jmp
scas
mov
mov
loope
cs
aad
adc
cmp
or
pop
or
mov
push
xchg
shl
pop
call
push
sbb
gs
mov
xchg
stos
jo
xor
sub
lds
pop
int3
add
sbb
or
stc
jecxz
and
into
gs
xor
scas
dec
mov
xchg
inc
fwait
xchg
cli
in
popf
es
out
dec
jo
cmp
test
ja
mov
dec
out
nop
xchg
sub
stos
sbb
push
and
mov
mov
js
retf
mov
rcl
es
inc
jl
int3
xor
sub
xlat
mov
ins
sbb
sub
cmps
mov
and
jns
pop
add
pop
int
and
shld
shl
adc
call
js
sbb
sub
neg
pusha
mov
pop
xchg
bnd
ret
xchg
xchg
sbb
js
pop
xchg
cs
pop
hlt
retf
hlt
retw
mov
clc
adc
sbb
push
xor
cmp
or
sbb
xchg
sub
inc
sub
pop
loope
mov
jmp
sbb
(bad)
jge
push
leave
inc
sbb
lods
mov
pop
lsl
or
das
fwait
push
imul
jmp
mov
arpl
xor
stc
push
fwait
jae
mov
adc
mov
aaa
cmp
pusha
sbb
js
sbb
mov
in
pop
aas
fsubr
mov
mov
xchg
push
or
xchg
pop
lds
stc
call
sar
fcomp
(bad)
dec
rol
and
dec
lds
outs
jmp
push
xor
pop
fsub
xor
movs
popf
push
mov
push
gs
ret
ss
scas
xchg
push
fldcw
push
jno
popf
mov
push
jo
ret
aaa
test
mov
in
rcr
in
shr
retf
shl
jae
and
or
arpl
ins
lods
or
inc
imul
je
ss
xor
cmps
test
outs
push
fsubr
movs
xor
sbb
add
mov
lock
push
dec
dec
repnz
sbb
popf
call
rcl
or
fwait
jns
in
fwait
adc
sbb
pop
test
fnstenv
or
dec
imul
test
stos
scas
push
inc
push
sti
pop
sbb
pop
sub
call
xchg
out
scas
loope
aam
xor
fild
stc
(bad)
fidivr
ins
cmc
jg
lods
(bad)
jp
cld
outs
sar
mov
jmp
outs
shl
call
fwait
mov
stos
ja
aad
pop
jns
mul
xchg
movs
ja
push
not
idiv
jae
fist
xor
jb
xor
jmp
test
xor
add
adc
and
cmovae
inc
mov
jl
test
adc
lock
push
jg
push
xor
enter
out
es
jb
retf
ret
dec
dec
xchg
jnp
sti
popf
out
jl
popa
add
mov
inc
sbb
repnz
inc
int
ja
mov
cmp
jno
pusha
mov
mov
adc
jp
or
mov
pop
sub
sub
sar
fwait
leave
mov
xchg
dec
inc
push
or
jmp
xor
inc
popa
sub
mov
shr
cmp
sbb
and
jae
mov
scas
mov
out
popf
xchg
cld
jo
int3
pop
xchg
jmp
adc
inc
xor
dec
aam
mov
retf
dec
sahf
ror
pop
adc
popf
mov
lock
sahf
(bad)
nop
in
or
mov
jns
fisttp
lods
add
cmc
xor
clc
fmul
div
rcl
into
push
popf
test
xchg
inc
mov
leave
mov
xchg
or
out
xchg
aam
mov
or
push
sub
dec
out
int3
scas
lods
repz
daa
pop
xchg
jns
cmp
push
dec
pop
or
add
add
mov
pusha
sbb
inc
call
test
cli
xchg
aam
inc
pop
xor
(bad)
and
dec
stos
jmp
mov
adc
ins
inc
xor
mov
pop
xor
mov
inc
call
ins
pop
dec
scas
in
scas
xchg
xchg
push
mov
dec
popa
bound
pushf
daa
xchg
dec
push
sub
daa
mov
mov
xchg
sub
mov
retf
cs
sbb
xchg
pop
mov
scas
pop
dec
xchg
pop
jnp
mov
outs
ror
xchg
std
xchg
pusha
inc
test
and
test
(bad)
xlat
aas
inc
(bad)
jns
mov
shl
xchg
stc
add
cdq
jo
mov
xor
(bad)
fst
adc
dec
leave
pushf
sbb
imul
cwde
dec
sbb
loope
pop
cdq
and
scas
ror
aad
shl
jne
not
in
xor
or
jne
adc
xor
and
ret
push
fst
inc
test
repnz
inc
mov
pop
dec
jmp
bound
stos
pop
(bad)
daa
in
and
cmp
add
inc
xchg
call
push
xor
iret
fdiv
test
loope
push
xchg
sbb
mov
ret
sbb
sbb
rol
sub
mov
push
imul
outs
jo
sti
das
call
sbb
xor
push
mov
pop
sub
(bad)
shr
mov
mov
mov
repz
jp
outs
cmp
aad
lds
std
stos
pop
jge
retf
aas
call
inc
loop
dec
inc
xchg
xchg
or
mov
shl
mov
cmp
(bad)
ds
fdivr
jg
or
jmp
retf
pop
aas
ins
add
data16
push
jecxz
and
fiadd
xchg
inc
sbb
or
jno
add
sar
xor
call
lea
mov
xchg
xchg
xchg
fistp
sub
adc
xchg
pop
sub
shl
shr
popf
dec
sub
sub
rol
sti
push
sub
mov
popfw
ds
mov
test
outs
icebp
mov
nop
ret
rol
ins
push
sbb
adc
or
and
stc
shl
sub
ret
jne
int3
mov
mov
aaa
mov
mov
retf
xor
add
mov
out
loope
movs
push
dec
mov
stc
xlat
inc
xor
aad
cmps
outs
rcl
in
cld
adc
cmp
js
add
mov
mov
cmp
sub
cmps
or
(bad)
push
inc
dec
sbb
retf
add
rcr
and
push
out
sub
xchg
test
pop
or
push
nop
xor
jbe
std
push
jno
jbe
sub
gs
add
imul
icebp
popa
and
sub
rcl
xchg
movs
jb
xor
in
mov
jle
ret
add
push
push
add
xor
mov
sbb
mov
out
je
cmp
ins
cmp
jmp
mov
xchg
test
scas
in
arpl
add
push
dec
scas
mov
cld
sbb
cmc
dec
jle
loope
jns
adc
rcl
jne
sub
push
dec
sub
add
sbb
test
push
pusha
pop
enter
cmps
mov
xchg
jmp
sbb
adc
enter
pop
mov
nop
dec
pop
xchg
clc
stos
add
in
add
clc
frstor
sub
je
pop
(bad)
retf
(bad)
xor
and
cmps
cmp
sbb
fld
inc
sbb
or
inc
pop
cli
test
fst
push
lds
or
aaa
das
xor
ret
jae
(bad)
xchg
mov
int
scas
stc
pop
xchg
std
jns
push
mov
aas
fimul
adc
mov
aam
cmp
pushw
pusha
push
adc
and
lods
mov
int
jne
mov
sbb
xchg
sub
mov
and
inc
movs
mov
test
pop
sbb
clc
xbegin
fsub
xchg
adc
lock
ret
clc
out
dec
mov
je
inc
add
test
outs
daa
cmps
movs
xchg
or
cmps
dec
mov
cmc
mov
(bad)
sub
xor
inc
jae
pop
aaa
cli
jo
cli
js
lock
xchg
xchg
fs
mov
test
pop
mov
fs
mov
xor
scas
call
inc
xchg
jno
pop
inc
adc
sti
je
(bad)
xor
add
push
push
cli
in
test
mov
xor
sub
cmp
cmc
mov
into
jno
leave
imul
not
(bad)
mov
shl
jbe
sub
addr16
pop
sbb
and
cmp
xchg
push
mov
adc
psubsw
and
mov
and
std
popa
push
loope
jecxz
fldenv
arpl
pop
push
dec
mov
retf
enter
stos
rcl
jl
mov
test
pop
daa
add
clc
sub
mov
inc
push
add
stos
psubw
bound
lea
test
mov
mov
mov
or
and
dec
push
or
push
pop
pop
xchg
sbb
ja
xchg
into
jae
sbb
imul
or
or
jns
icebp
xchg
lods
nop
inc
popf
hlt
cs
(bad)
jle
jno
out
pop
or
push
test
and
pusha
push
dec
xor
dec
dec
sbb
lods
mov
push
mov
test
cmp
push
fild
int
cmp
xchg
xchg
bound
pop
aaa
fcom
mov
bound
fwait
shr
fdiv
mov
mul
ret
jge
sbb
call
cmp
pop
cld
hlt
aaa
xchg
scas
mov
mov
gs
pop
(bad)
push
mov
mov
mov
mov
rcl
inc
sbb
in
mov
dec
jge
nop
add
sar
(bad)
pop
aam
jo
push
xor
ret
fstp
cmp
mov
lds
imul
mov
push
push
mov
fisubr
xchg
rol
in
push
inc
adc
out
push
in
mov
xor
retf
retf
outs
dec
xchg
jno
push
and
mov
sbb
dec
and
sub
rcr
mov
fwait
cmp
out
out
stc
ins
xchg
(bad)
ds
cwde
pop
pop
js
test
fs
ficom
test
add
(bad)
shl
pop
in
push
fisttp
lea
push
fild
jbe
pop
int
mov
push
pusha
mov
nop
imul
iret
arpl
mov
int
adc
jmp
std
and
loop
popf
fdivr
inc
mov
mov
fidiv
xchg
jmp
ins
retf
les
xchg
imul
shr
xchg
push
push
mov
push
(bad)
ret
mov
adc
in
jl
dec
adc
jl
sar
sar
int3
outs
mov
dec
xchg
pusha
dec
or
in
in
sbb
sub
loop
cmps
mov
popa
mov
cld
xor
cli
popf
shr
mov
imul
jl
cmps
pop
push
cmp
xor
mov
pop
ret
repnz
lds
shl
mov
push
xchg
popf
loop
mov
hlt
mov
xchg
dec
lahf
push
fistp
lods
cmp
rcl
inc
mov
test
xchg
mov
xor
xchg
pop
ror
ins
int3
jbe
nop
sbb
shr
or
xor
arpl
mov
in
sub
or
pop
cmp
les
clc
mov
mov
(bad)
pop
movs
popa
test
test
sbb
pusha
push
sub
in
iret
mov
pop
imul
outs
rol
add
or
xchg
push
inc
pop
(bad)
xchg
scas
shl
popf
std
in
je
dec
(bad)
imul
scas
loopne
jae
cmc
fistp
test
cmps
dec
mov
shr
inc
nop
dec
xor
in
ins
inc
or
push
(bad)
call
add
cmp
fs
test
fmul
push
es
and
pusha
call
inc
push
jae
lds
jge
add
push
js
into
xchg
and
test
test
inc
out
adc
test
in
(bad)
dec
fild
mov
stos
mov
pop
xor
shr
mov
sbb
and
hlt
fisubr
cs
(bad)
fild
xchg
loop
dec
sbb
push
jbe
es
xchg
dec
inc
add
push
mov
mov
shr
lods
push
cmp
cmp
jl
cmp
pop
mov
pop
leave
push
(bad)
jmp
mov
pop
fs
lock
mov
pop
aas
cwde
inc
or
jb
cmp
and
dec
sbb
or
out
imul
adc
or
or
inc
loop
add
xchg
out
ret
jo
xchg
xor
call
inc
add
retf
clc
data16
add
xchg
(bad)
adc
repnz
mov
mov
or
jl
test
scas
imul
sbb
(bad)
dec
xchg
fcom
mov
mov
cmps
rol
retf
mov
inc
and
ror
and
xor
and
mov
lods
sub
scas
mov
jp
test
mov
(bad)
jp
push
int
mov
jp
in
sub
mov
pop
xchg
neg
cli
mov
fcomp
xor
fidivr
mov
(bad)
xlat
ret
push
test
mov
int
popa
hlt
fidiv
xchg
inc
pop
sub
mov
adc
stc
and
or
cmp
jns
cmp
addr16
push
hlt
xor
xchg
jno
cmps
xchg
sti
cmp
enter
in
nop
mov
shl
cs
mov
fnstenv
test
leave
inc
pop
xor
adc
sub
mov
enter
mov
pop
mov
adc
and
mov
add
out
and
(bad)
in
das
cmp
jp
fsubrp
cld
cld
mov
jge
into
loop
inc
sbb
jnp
cli
and
jno
mov
fst
adc
adc
lods
xchg
aas
call
and
and
xchg
xchg
pushf
fdiv
sbb
std
cmc
mov
popf
addr16
jecxz
jmp
mov
sbb
dec
jb
adc
retf
test
push
jb
ret
push
push
rcl
adc
inc
rcr
retf
movs
add
jp
out
es
pop
jnp
repz
dec
inc
test
pop
xor
xor
mov
mov
xor
fcmovbe
mov
imul
mov
loop
pop
mov
or
cmps
jbe
in
aad
sbb
ret
and
jo
pop
outs
push
push
sti
fidiv
mov
mov
daa
xlat
cmp
xchg
or
(bad)
pushf
repnz
jecxz
sahf
fistp
fucomip
scas
xor
pop
scas
jb
aad
lock
retf
inc
std
js
loop
scas
mov
jge
fwait
scas
mov
cmp
call
push
mov
mov
pop
cwde
jne
add
repnz
xchg
lods
push
mov
cmps
dec
sub
xor
sub
cmps
test
scas
or
std
or
aam
test
mov
or
dec
stos
jb
cmp
or
xchg
or
jl
add
adc
outs
fcom
pushf
fnstcw
aam
lods
loop
pushf
sub
int3
xlat
les
jge
jp
rol
sbb
xchg
adc
gs
sbb
scas
dec
fwait
imul
add
or
push
stos
push
adc
gs
outs
dec
shl
mov
and
xchg
xor
push
fist
push
cwde
cmps
aam
sub
sub
pop
cmp
dec
stos
xchg
add
pop
sub
out
mov
lahf
mov
jb
and
xor
and
jecxz
vmovlps
jne
popa
pop
pop
mov
fwait
pop
jbe
mov
int3
cmps
inc
out
lahf
in
paddd
out
push
mov
scas
jecxz
shl
dec
enter
mov
mov
mov
out
das
or
jb
push
fimul
mov
stos
out
(bad)
dec
mov
push
dec
movs
cdq
ds
movs
dec
fcmove
dec
out
cmp
gs
push
leave
xchg
cmps
mov
pop
mov
sub
mov
bound
and
mov
push
inc
cmp
je
mov
hlt
dec
pop
cmp
stos
push
aad
aad
mov
test
loope
out
(bad)
gs
jne
mov
and
(bad)
jb
lods
sbb
test
fisubr
stos
data16
call
pop
shr
inc
push
dec
push
adc
push
xor
jmp
cmp
imul
es
ins
mov
ret
popa
jnp
fist
push
inc
mov
inc
mov
sub
ror
pop
adc
xchg
fld
mov
inc
scas
cs
jge
sub
dec
cs
xor
mov
sub
jl
or
clc
rol
test
gs
jle
inc
idiv
movs
sar
mov
sbb
pop
das
bnd
xchg
movs
mov
dec
dec
scas
pop
(bad)
mov
mov
xor
push
inc
mov
dec
adc
dec
call
mov
test
xor
push
cdq
test
mov
dec
inc
cmp
je
outs
pop
xor
clc
out
xchg
and
leave
leave
mov
ja
aam
cmp
dec
mov
cmpxchg
xlat
pop
and
push
cmp
mov
push
cmp
pop
mov
or
push
shl
xchg
xchg
int3
jb
mov
(bad)
pop
push
mov
cld
scas
in
dec
fimul
adc
repz
adc
(bad)
call
jb
rcr
cmps
pop
dec
cmp
xor
push
mov
and
add
xchg
and
push
adc
jb
inc
mov
fisub
add
add
push
movs
or
adc
cmps
add
and
xor
push
pop
shld
pop
test
in
pop
and
adc
push
cmp
or
cmp
fs
mov
test
mov
mov
mov
jo
lds
in
push
repz
sbb
and
sbb
jl
fild
cmp
pop
add
add
cmp
push
std
popa
fwait
repnz
sti
test
xchg
mov
ret
sbb
retf
add
ret
je
movs
shl
mov
push
cmp
sti
int
sub
aaa
jmp
mov
jnp
fwait
xor
outs
call
jno
repnz
js
adc
push
sbb
inc
cdq
popf
sub
(bad)
sbb
dec
adc
fsubr
je
(bad)
push
ja
cmps
int
push
push
ins
arpl
out
jbe
pusha
iret
push
rcr
sub
and
pop
push
push
or
jmp
mov
push
arpl
xchg
lds
scas
xchg
js
add
dec
pop
adc
out
daa
or
adc
mov
fistp
sbb
xor
movs
pop
lds
js
dec
in
out
mov
xor
lahf
(bad)
jmp
repz
sub
ja
inc
inc
mov
cdq
or
and
les
les
dec
adc
push
retf
pop
jmp
fldcw
sub
sub
and
pop
cld
mov
gs
sbb
xor
out
pop
sbb
pop
pop
mov
pusha
cmp
inc
test
int
fmul
test
movs
xchg
(bad)
rol
data16
bound
lods
dec
imul
sub
sti
and
xchg
stos
mov
xchg
add
into
push
cmp
mov
mov
lds
jle
sbb
dec
hlt
push
sbb
sbb
or
xor
ficomp
adc
shl
mov
xor
mov
outs
imul
xchg
push
mov
(bad)
outs
fisubr
lea
(bad)
imul
xchg
in
cmpxchg
sbb
adc
add
jae
xor
es
xor
pop
mov
ret
sub
lahf
mov
mov
and
mov
imul
stc
xchg
and
js
push
shl
std
pop
ss
fld
dec
push
mov
popf
ror
pop
jnp
add
adc
adc
xchg
xchg
icebp
or
fisttp
cmps
daa
fwait
jne
push
sub
xor
jnp
pop
popa
outs
sub
fimul
xchg
add
(bad)
push
movs
jnp
dec
mov
push
mov
jae
pusha
xchg
shr
ret
retf
fimul
push
test
and
mov
sbb
enter
imul
pop
mov
or
sub
mov
cmp
mov
adc
aaa
mov
xchg
pop
hlt
or
int
mov
scas
jno
lods
xor
xchg
push
xchg
sar
mov
ss
jno
mov
cmp
dec
in
mov
push
and
fwait
push
loope
dec
sbb
and
or
sbb
fmul
inc
lar
pop
mov
aaa
fiadd
xchg
add
sub
and
addr16
popa
sti
stc
test
mov
push
cld
(bad)
aam
push
add
cmp
adc
pushf
xchg
add
cvtdq2ps
dec
repz
imul
or
bound
iret
jp
je
stos
inc
xchg
mov
dec
sar
xchg
jmp
adc
push
adc
fs
mov
jbe
cdq
xor
mov
int
cmp
pop
ins
inc
jne
dec
and
movs
xadd
mov
scas
pop
ror
lods
(bad)
mov
scas
xor
retf
mov
inc
add
mov
pop
outs
mov
xchg
cmc
lods
and
adc
xor
cwde
add
pop
das
es
jbe
cmp
mov
xchg
pop
adc
xor
addr16
rcl
out
add
inc
cwde
(bad)
hlt
int3
jecxz
cmp
pop
mov
sub
imul
pandn
mov
cmp
repz
repz
pop
lds
bound
adc
loopne
or
push
add
pop
pusha
test
(bad)
ret
adc
call
out
sbb
sbb
jmp
fwait
push
and
inc
pop
nop
jge
test
sub
inc
ret
(bad)
stc
fwait
sub
sbb
inc
inc
jg
push
cmps
inc
mov
in
repz
and
pop
dec
mov
mov
movs
sahf
cmp
push
xor
fs
lods
pop
jnp
call
cdq
inc
cmp
dec
aaa
push
jo
add
sub
rcl
and
test
add
les
mov
call
lods
xchg
loopne
cmp
arpl
retf
icebp
jns
ret
clc
repnz
mov
(bad)
lahf
xor
xchg
adc
jmp
jmp
sbb
mov
js
xchg
jmp
gs
mov
lahf
push
mov
or
pop
(bad)
imul
pop
test
ins
outs
(bad)
ret
sub
adc
je
inc
and
inc
stc
and
enter
mov
es
jmp
push
fidivr
mov
pusha
push
test
xor
sub
arpl
jbe
inc
lods
lock
hlt
mov
bound
nop
inc
pop
clc
inc
sbb
sbb
or
cwde
fstp
mov
pop
inc
sbb
or
ret
jl
les
mov
add
xchg
test
or
and
pop
or
mov
not
push
sub
cs
mov
leave
cdq
push
xor
mov
pop
ror
pop
pop
lahf
add
mov
jl
inc
icebp
inc
les
mov
xchg
push
outs
pop
add
mov
push
out
(bad)
js
xor
out
jecxz
in
jmp
(bad)
jle
(bad)
shl
(bad)
das
xlat
fucomi
mov
mov
inc
test
ret
fadd
icebp
sbb
sub
aam
out
je
rcr
or
(bad)
in
in
sub
xchg
adc
push
mov
sub
(bad)
stos
xchg
mov
movs
lds
mov
nop
jl
adc
popa
xchg
sbb
imul
mov
xor
cwde
es
inc
mov
lods
or
leave
sahf
mov
(bad)
mov
loop
mov
sub
clc
mov
mov
cmps
jge
sub
loop
xor
fdivr
lods
dec
push
xchg
dec
movlps
jecxz
ss
js
mov
add
lds
sub
mov
repz
lock
in
dec
jecxz
popf
out
std
sar
into
mov
movs
dec
mov
fldcw
pop
push
outs
bnd
or
test
popa
xor
sub
push
(bad)
push
and
rol
test
mov
repz
scas
fbld
fwait
jmp
xchg
in
sbb
push
rcr
sub
out
xchg
leave
inc
add
test
icebp
push
loopne
out
inc
vpaddsb
and
gs
add
cdq
es
in
frstor
mov
mov
sub
adc
(bad)
fsub
int
add
push
mov
bound
inc
int
fs
push
popf
cmp
sar
sub
pushf
in
ins
jbe
lea
int
jae
jp
mov
inc
add
mov
xchg
sub
je
dec
push
pop
in
push
gs
cmp
adc
fwait
bound
lea
push
movs
ins
jmp
data16
out
iret
out
not
or
dec
cmc
cmp
xchg
loope
mov
cs
mul
outs
xor
push
test
inc
and
jb
out
js
and
aaa
(bad)
sti
pop
ret
cmps
gs
leave
and
dec
mov
jmp
xchg
xchg
adc
jle
sub
push
push
loop
xchg
loope
gs
sub
lea
out
or
(bad)
in
rol
in
mov
ficom
dec
scas
sub
sub
pop
scas
imul
xor
and
jo
cmc
lods
push
scas
xor
xor
inc
push
ja
xor
arpl
jmp
out
inc
xor
mov
mov
icebp
fnsave
neg
dec
jg
psubw
mov
pop
pop
mov
inc
xor
inc
sbb
inc
in
mov
retf
dec
icebp
jae
shl
pop
enter
jo
mov
outs
pop
(bad)
sbb
mov
mov
sub
or
mov
sahf
loope
jae
ret
push
(bad)
jnp
mov
ja
cwde
jecxz
pushf
cmps
hlt
mov
pop
iret
sti
in
jmp
inc
mov
sub
mov
add
and
push
hlt
xor
pop
mov
mov
fsub
rcr
push
(bad)
cmp
(bad)
mov
mov
push
clc
data16
xlat
sub
mov
pop
add
fadd
or
push
and
fimul
lds
out
push
mov
aas
jnp
cmp
push
les
dec
(bad)
movs
mul
cdq
cmps
or
movzx
jg
jmp
xchg
mov
mov
call
daa
loope
nop
jg
fs
inc
sbb
gs
out
fisttp
xchg
shr
jge
cmp
adc
lods
xchg
out
es
test
jmp
add
dec
pop
mov
dec
movs
sub
mov
daa
(bad)
push
std
in
imul
xchg
(bad)
cld
mov
in
mov
dec
cmps
sbb
call
shl
dec
ret
xchg
dec
pop
or
xchg
xor
cli
dec
ins
mov
in
sbb
lods
sbb
or
sbb
loop
mov
ins
bound
jmp
mov
rol
mov
jl
pop
push
cmps
cwde
xchg
lahf
ret
dec
rol
mov
scas
(bad)
lods
retf
mov
add
ins
cmp
leave
mov
lods
push
and
dec
and
stos
les
jb
(bad)
mov
or
xchg
outs
pop
bound
pop
mov
gs
les
pop
das
inc
shl
icebp
(bad)
and
xor
mov
enter
aam
pop
and
inc
inc
push
test
fst
jno
inc
xchg
sub
push
jnp
addr16
add
jns
std
and
pop
sub
js
das
in
stos
out
call
(bad)
out
mov
mov
mov
mov
adc
mov
into
xchg
jb
or
inc
push
pushf
call
pop
dec
dec
sub
popa
gs
inc
je
jbe
adc
hlt
addr16
sub
bound
fdiv
dec
outs
adc
fmul
xor
jno
mov
outs
mov
adc
dec
adc
dec
mov
or
sub
pop
dec
or
and
out
add
push
push
xor
data16
xchg
or
inc
mov
loopne
add
arpl
cmp
sbb
enter
rcl
bound
adc
sbb
fs
xor
xor
and
mov
jp
add
jmp
sub
or
jne
push
test
repnz
int
mov
push
(bad)
outs
inc
fadd
pusha
(bad)
scas
cmp
fld
test
mov
pop
jmp
das
inc
mov
xchg
fnstenv
(bad)
scas
out
or
shr
loope
out
pop
sub
fistp
inc
and
rol
xchg
sbb
pop
ja
or
(bad)
cmps
shl
je
repnz
rol
rcl
pop
and
and
inc
adc
dec
add
add
mov
idiv
xor
or
cld
cmp
fidiv
jae
data16
(bad)
cld
sbb
inc
add
jecxz
mov
inc
shl
int3
cmp
aaa
mov
mov
add
imul
mov
pusha
add
xchg
es
out
(bad)
fisubr
pop
cmp
cmps
(bad)
fsubr
mov
inc
lock
mov
in
mov
mov
add
push
and
xor
xor
jp
(bad)
cld
ret
dec
mov
adc
cs
mov
sub
out
ftst
lods
fmul
sbb
sbb
loop
out
xchg
dec
jae
addr16
out
xchg
aad
fstp
sbb
test
mov
xchg
(bad)
jge
add
lods
cmp
pop
aaa
mov
ja
je
or
sbb
(bad)
test
stos
fsubr
jo
mov
fiadd
and
loopne
jp
jle
pop
call
stos
in
out
in
push
jg
jl
mov
pop
and
mov
clc
repnz
cmp
and
gs
mov
xor
mov
into
shl
xor
adc
inc
ins
adc
in
call
sbb
push
into
(bad)
(bad)
imul
dec
dec
xchg
dec
xlat
cmp
test
cwde
inc
daa
mov
loope
mov
scas
dec
fimul
push
xchg
add
into
push
cmp
aaa
push
lods
in
mov
into
movs
jmp
inc
das
cmps
cwde
loop
fcomp
imul
test
dec
sub
xchg
(bad)
and
dec
(bad)
stc
jecxz
push
inc
rcr
bsf
push
push
test
push
retf
or
adc
repz
out
mov
sub
rcl
dec
orps
pop
sbb
gs
call
pop
frstor
cmp
push
sub
clc
dec
int
call
mov
scas
shl
cmp
fst
ror
pop
mov
xchg
jmp
(bad)
retf
sub
cmps
icebp
cs
xor
xchg
mov
sbb
and
jbe
xchg
mov
sbb
mov
enter
adc
stos
inc
sub
or
repz
jp
push
xchg
adc
add
cdq
dec
push
push
nop
je
hlt
lahf
inc
loope
popa
or
test
popf
sub
push
je
fmul
push
dec
call
or
mov
adc
push
sub
pop
xor
outs
xchg
adc
aaa
dec
gs
mov
jle
mov
gs
xor
push
add
adc
addr16
lock
test
test
lods
dec
js
pop
js
push
aas
inc
add
into
xchg
(bad)
xor
pop
sbb
dec
jecxz
adc
inc
call
sahf
int
ds
xor
out
out
ins
lock
movs
mov
pop
dec
sub
mov
hlt
rol
daa
pop
jb
ss
push
(bad)
outs
mov
mov
int
sar
xor
jmp
outs
xchg
cmp
cmp
fiadd
jb
mov
xor
inc
out
cmp
out
or
sbb
sub
xchg
fbstp
(bad)
mov
xor
sbb
cdq
adc
push
inc
sbb
mov
push
sub
inc
movs
xor
nop
xor
(bad)
push
mov
cs
xor
xor
add
fild
clc
scas
ds
loope
push
mov
mov
xchg
sbb
outs
sbb
outs
in
cmc
pop
mov
fcmovb
push
jecxz
popa
repz
ret
jmp
fdivr
idiv
fcmovu
dec
pop
imul
loopne
inc
sbb
dec
or
scas
mov
nop
inc
xor
scas
(bad)
std
dec
sub
fs
dec
mul
push
and
push
test
mov
daa
popa
movs
mov
pop
cld
rol
jo
cmp
and
out
and
and
sti
fsubr
dec
ret
mov
clc
loopne
jge
cmps
repz
popa
mov
push
imul
enter
push
jno
stos
(bad)
mov
mov
mov
iret
loopne
and
xor
push
cmp
test
repz
test
adc
cwde
mov
dec
call
pop
call
nop
cdq
xor
(bad)
jp
pop
push
mov
dec
jbe
sbb
cmc
popa
and
push
lods
pop
adc
out
xor
cwde
push
retf
int3
fiadd
fdiv
outs
jp
jp
inc
adc
inc
push
push
mov
xor
iret
mov
cmc
push
sub
sbb
add
push
mov
jmp
leave
or
xchg
add
and
cld
arpl
call
sub
inc
xchg
mov
cmp
push
das
addr16
mov
test
cli
push
jmp
jne
scas
fstp
dec
or
call
test
push
mov
pop
loope
mov
shr
fwait
dec
sub
imul
pop
push
and
test
sub
dec
adc
(bad)
mov
sub
inc
test
inc
push
outs
fsub
mov
push
lods
cmps
aas
inc
xchg
icebp
outs
pop
jae
jnp
stc
pop
adc
push
adc
out
out
or
nop
mov
xor
fdiv
mov
repnz
cdq
add
in
push
fiadd
cmps
jno
sbb
scas
jecxz
sahf
pop
notrack
fnstenv
sub
sub
shl
mov
das
mov
mov
out
cmp
and
aad
add
dec
rcr
or
dec
or
movs
adc
sahf
jno
(bad)
sti
enter
ins
iret
add
or
jns
div
xchg
int3
pop
mov
add
add
or
cwde
sti
add
shl
or
xchg
dec
fnstcw
push
loope
inc
cmp
dec
sahf
mov
sbb
dec
pop
imul
jmp
in
jp
call
loopne
add
mov
pop
inc
in
ficomp
jmp
mov
xor
(bad)
and
ret
loopne
jne
gs
ficom
mov
mov
pop
add
jmp
or
std
inc
js
popa
imul
aad
lahf
mov
mov
mov
stos
jecxz
ja
mov
sar
(bad)
neg
icebp
pop
aaa
add
popf
fld
ror
cmp
cmp
out
push
xlat
adc
call
repnz
and
jp
adc
jb
cmc
push
pop
mov
cmp
(bad)
shl
or
pop
in
mov
mul
enter
repz
mov
ins
(bad)
(bad)
lods
in
shr
shl
push
out
int
lods
xor
sar
fisttp
xor
lods
jl
or
shr
jbe
retf
mov
pop
retf
imul
cmps
loope
cmp
daa
hlt
js
shl
out
mov
jmp
ins
mov
jmp
mov
or
icebp
retf
loopne
fwait
xlat
retf
mov
mov
(bad)
dec
and
push
loop
inc
call
or
sub
sbb
outs
in
mov
push
ss
out
daa
imul
dec
out
jbe
je
pop
push
or
sub
xchg
lar
repz
push
jno
out
jmp
pop
jecxz
ss
sub
ins
push
dec
ret
xchg
stos
sbb
mov
jmp
sub
mov
jnp
stos
xor
test
mov
jo
push
pop
sub
and
repz
call
push
jmp
js
or
(bad)
dec
imul
sahf
sbb
loope
xor
pop
retf
dec
xchg
popf
mov
shl
jg
fisub
int
popf
mov
add
iret
pop
cdq
pop
mov
add
sub
push
sub
lahf
in
jmp
movs
cmc
cwde
dec
xor
sbb
lods
shr
(bad)
xchg
push
dec
out
and
fwait
pop
cdq
aas
cld
push
scas
or
add
push
jnp
leave
movs
mov
mov
jnp
push
inc
not
retf
inc
xor
add
fs
movs
imul
xchg
pop
loopne
xchg
inc
cdq
adc
push
mov
pop
retf
adc
out
cmps
rcr
mov
cdq
into
fcmovne
pop
call
sbb
imul
lods
cmps
xchg
push
jne
ins
stc
xchg
arpl
or
add
cmp
call
xlat
js
sbb
inc
cdq
adc
fild
or
cmp
ror
ds
sbb
jnp
loop
sub
enter
cli
mov
pop
pop
mov
mov
jl
xor
jae
sbb
xchg
push
loope
sar
pop
add
shr
and
mov
fst
mov
mov
pop
test
test
sahf
push
push
sub
xchg
mov
sub
loop
iret
pop
mov
int
int3
sub
mov
arpl
adc
pop
inc
add
xor
inc
or
jnp
xchg
cmp
mov
xor
(bad)
mov
add
mov
xchg
(bad)
cmp
push
xchg
ins
nop
pop
gs
pop
mov
jnp
out
adc
ins
inc
out
mov
out
inc
rcr
loop
jg
add
mov
outs
and
adc
add
push
cli
xchg
lock
pop
cmp
movd
cdq
test
daa
xor
stos
xchg
xchg
ss
(bad)
sub
je
das
and
gs
sahf
imul
ret
sub
mov
pop
dec
mov
test
stos
add
sbb
xchg
cmp
cmp
jnp
fcomp
inc
cmp
jle
jns
leave
shl
mov
jb
fnstsw
into
push
fsubr
adc
jae
mov
sbb
retf
imul
sbb
mov
pop
jns
mov
test
ret
test
dec
or
mov
xor
cld
jnp
xchg
mov
adc
ins
xchg
dec
(bad)
dec
push
push
retf
imul
or
mov
scas
fstp
inc
xchg
popa
pop
invd
gs
out
dec
mov
inc
push
cmps
stos
inc
mov
test
call
idiv
(bad)
loopne
dec
out
dec
add
mov
and
sbb
lods
mov
mul
mov
stos
loope
push
mov
(bad)
test
(bad)
push
ret
sub
dec
sub
jle
jmp
dec
mov
les
out
push
nop
scas
mov
xchg
test
xor
call
xor
mov
aam
mov
cli
stc
out
jns
mov
mov
pop
lods
addr16
sbb
jnp
pop
(bad)
cwde
je
add
lahf
jmp
push
inc
cli
jns
jmp
adc
out
xchg
rol
push
(bad)
adc
jno
and
mov
xor
xchg
int
cmps
retf
xchg
pop
push
call
div
jle
fwait
outs
cmc
jne
mov
fsubrp
pop
cmps
push
inc
or
jmp
jmp
test
lds
or
push
shr
push
psubsb
xchg
les
int
jns
pop
and
test
jle
sub
pop
fcmovnb
mov
or
adc
enter
xor
inc
pop
mov
test
js
sti
mov
loope
push
dec
jle
pop
imul
mov
pusha
test
sar
push
adc
mov
das
dec
in
addr16
jge
sti
mov
cmp
icebp
add
iret
cdq
out
pop
cmp
and
adc
xchg
mov
clc
test
and
std
shl
or
addr16
in
cmp
and
jbe
sahf
inc
sar
adc
xor
sub
popf
sbb
int3
ins
inc
dec
clc
out
adc
xchg
adc
fld
xchg
inc
sbb
mov
movs
xchg
jecxz
rcl
pop
xor
sbb
add
cmp
ror
add
mov
inc
clc
push
xor
icebp
adc
jo
popa
sub
int3
jl
xchg
sub
and
mov
loopne
shl
call
inc
out
(bad)
jmp
(bad)
pop
aam
popa
test
xchg
pop
and
cmps
fld
dec
clc
and
or
imul
lods
outs
sbb
mov
pop
test
cmps
fisttp
cli
aaa
sbb
dec
pop
jecxz
fucomp
mov
mov
xchg
and
and
rcr
xor
dec
(bad)
and
cdq
in
shl
lods
test
les
and
cmps
mov
cmp
mov
retf
xor
or
cmp
cmc
fs
test
lea
cmovne
jno
inc
adc
or
push
sbb
mov
mov
xchg
and
or
dec
(bad)
cdq
inc
jecxz
sub
repz
(bad)
imul
dec
mov
and
popf
lds
outs
les
fcomi
rcr
mul
std
ja
dec
out
cmc
icebp
add
iret
mov
ja
in
xlat
jmp
sbb
fwait
cmp
cwde
cmp
in
xchg
std
add
loope
sbb
shl
sbb
iret
imul
inc
add
outs
and
pop
ror
fist
lahf
dec
sbb
pop
or
(bad)
(bad)
mov
imul
jae
inc
xor
ret
inc
jb
mov
mov
cmp
mov
dec
add
lods
cmp
and
push
in
fs
jl
stc
xor
cli
in
inc
cdq
push
out
leave
mov
cmp
sbb
inc
iret
aad
sub
imul
je
or
jb
aas
arpl
nop
or
mov
push
ret
xchg
ss
sub
or
inc
cs
sti
in
mov
push
daa
pop
jmp
aam
arpl
mov
ds
(bad)
lods
lahf
outs
fs
jmp
icebp
inc
or
fucomip
popa
inc
jle
xlat
test
out
cmps
test
and
inc
and
in
add
adc
stc
jne
mov
push
or
and
adc
cld
add
mov
cmp
into
call
jecxz
arpl
push
not
lahf
rcr
push
pop
pop
and
pop
ja
retf
dec
push
ror
or
test
lahf
mov
mov
cmp
push
daa
cwde
dec
sub
push
arpl
fs
cmp
lods
dec
jge
test
movs
xchg
inc
sbb
lods
push
retf
inc
div
jge
movs
pop
movs
jne
mov
inc
lock
sti
push
jo
dec
dec
and
loop
lea
sahf
cs
mov
xor
call
add
add
mov
inc
sub
out
jae
cmp
cmc
ret
ja
xor
jo
add
popf
xor
pop
dec
sbb
xchg
outs
cmp
jae
stc
xor
sahf
and
ja
push
arpl
movs
shr
push
rcr
xchg
repz
xchg
repz
fistp
sbb
iret
jecxz
inc
in
in
loop
call
jge
ins
dec
xchg
inc
ins
mov
jb
lods
push
mov
xor
add
jbe
stos
push
jo
push
cdq
add
cli
das
xor
and
ja
adc
rcl
and
repz
push
sbb
jno
ja
cmps
mov
mov
loope
ja
nop
add
xchg
add
mov
ins
ins
push
inc
ror
enter
or
stc
and
gs
dec
pop
mov
leave
addr16
in
scas
ss
aad
icebp
jg
cmp
aas
popf
jne
scas
(bad)
jg
aad
push
ds
mov
inc
into
or
jcxz
ror
add
fucomip
and
cmp
dec
sbb
adc
jno
mov
cs
xor
xchg
jmp
push
adc
jmp
adc
dec
and
mov
adc
adc
xor
push
(bad)
adc
scas
add
(bad)
dec
inc
sbb
pop
es
aam
mov
loope
jbe
pop
pop
lahf
call
(bad)
jbe
xlat
xor
jle
fsubr
adc
xor
dec
mov
js
jg
jle
and
pusha
dec
and
pop
popa
sub
int
fmul
xor
ror
xor
dec
mov
bound
popf
arpl
stc
and
inc
mov
sub
(bad)
mov
mov
mov
sbb
test
call
leave
inc
je
xchg
pushf
out
aaa
dec
(bad)
mov
es
dec
std
mov
sub
and
imul
das
les
sub
cmps
add
and
push
sub
xchg
mov
or
xor
add
ss
sbb
inc
push
dec
sbb
dec
cmp
dec
sub
ss
and
mov
adc
pop
(bad)
fcmovnu
loop
mov
add
mov
retf
es
sub
clc
mov
jnp
jne
mov
aas
retf
dec
dec
cmc
adc
mov
sub
and
imul
xor
push
out
push
mov
adc
xor
data16
or
outs
dec
packsswb
lods
add
pop
aaa
mov
xor
fwait
ret
dec
sbb
loop
ss
push
(bad)
mov
(bad)
xor
loop
inc
sub
sbb
mov
mov
cs
sub
pop
sub
inc
ror
inc
pusha
push
jmp
adc
push
es
arpl
mov
adc
mov
hlt
jp
adc
sbb
sub
pop
scas
sub
jmp
in
dec
mov
sub
mov
dec
adc
mov
or
push
xor
xchg
and
gs
fdivrp
sar
enter
cmc
int3
add
pop
les
mov
mov
iret
cmp
dec
popa
nop
ficom
jecxz
out
sti
jmp
mov
mov
xlat
mov
pushf
pop
sub
call
add
mov
sub
sub
push
and
out
arpl
sbb
sub
inc
or
repnz
mov
xchg
aam
imul
(bad)
int3
ror
xchg
sbb
mov
cmp
sub
sbb
mov
loopne
add
xlat
cmp
nop
add
mov
xor
xchg
mov
int
inc
bound
xchg
jno
adc
xchg
push
push
jmp
(bad)
ret
inc
cli
cs
inc
dec
push
cmp
xchg
das
jo
sub
xor
mov
xchg
into
and
dec
outs
test
sub
outs
mov
(bad)
(bad)
icebp
push
pusha
idiv
fyl2xp1
aas
fsubr
std
retf
ret
(bad)
outs
pop
jmp
jno
call
sbb
jae
aaa
pop
push
xchg
out
push
repz
mov
stc
xchg
push
sub
add
mov
push
pop
xchg
xor
es
cmp
sbb
hlt
aam
jno
leave
movs
int
inc
cld
adc
xchg
sbb
add
dec
lods
into
test
sbb
jmp
xchg
sub
adc
jns
inc
imul
mov
inc
or
inc
inc
dec
mov
int
shl
xor
jns
cmp
fst
jnp
cwde
dec
ret
sub
or
jl
cmps
shl
retf
iret
pop
dec
mov
stc
clc
fs
ret
pop
jne
stc
lock
(bad)
leave
inc
dec
sub
push
xchg
fbld
sti
mov
mov
adc
and
push
aaa
repz
call
cwde
adc
iret
cs
mov
pop
dec
inc
lahf
adc
fstp
les
cmc
xor
jp
mov
mov
xor
pusha
test
pop
mov
jno
xchg
sub
pushf
mov
xchg
fistp
xor
push
cmps
jnp
std
xchg
addr16
in
ret
ror
dec
dec
mov
nop
arpl
gs
(bad)
dec
rcl
retf
test
jp
(bad)
arpl
xchg
jo
dec
test
js
enter
sub
xor
outs
ins
sbb
dec
jecxz
sub
jne
(bad)
mov
jmp
cmc
add
dec
sub
es
cmp
ins
fsubr
imul
sar
inc
loopne
in
(bad)
push
rol
mov
mov
popfw
jae
movs
(bad)
jmp
mov
jbe
push
sub
retf
(bad)
xchg
cmovo
cmp
xchg
pop
xor
(bad)
lods
int3
rcl
push
inc
adc
pop
add
pop
pop
and
nop
jmp
xchg
div
push
xlat
movs
mov
push
xor
mov
xchg
fisttp
inc
xchg
and
outs
aaa
push
fcomp
stc
test
sub
push
cmps
xchg
(bad)
xchg
cmp
dec
push
inc
aas
stos
jne
fs
add
ins
jne
mov
cwde
js
ds
mov
jge
ins
jno
ffreep
dec
(bad)
sbb
jo
inc
(bad)
cmp
and
sub
sub
push
(bad)
(bad)
mov
(bad)
sub
mov
ja
(bad)
jge
les
adc
jecxz
mov
(bad)
mov
out
sti
fdiv
pop
stc
fisub
dec
cld
les
push
inc
inc
or
or
add
dec
add
mov
cmps
mov
xor
dec
or
fistp
nop
add
or
ins
bound
push
cmps
mov
aad
nop
ja
mov
push
sbb
inc
sbb
push
dec
jo
xchg
rcl
fadd
pop
dec
jnp
dec
aaa
and
sbb
dec
cmps
adc
stc
cwde
mov
sub
ficom
pop
shl
sahf
jmp
stc
iret
push
jmp
(bad)
rol
mov
pop
loopne
push
or
xlat
mov
and
and
inc
dec
add
mov
cmp
out
fist
cmp
ret
xor
cmp
(bad)
mov
jmp
cmps
lahf
jne
rcl
ret
aaa
jp
lea
dec
mov
push
std
dec
in
inc
aaa
mov
and
ja
sbb
adc
sbb
sbb
jo
adc
mov
inc
cmps
xchg
repz
mov
xor
ss
xor
mov
imul
sub
mov
pop
inc
dec
test
xchg
inc
sbb
dec
jl
addr16
add
xor
popa
test
nop
scas
mov
test
push
inc
enter
jae
fdivr
(bad)
outs
in
int3
int
pop
jl
int3
dec
xor
push
xchg
(bad)
sti
sub
xor
push
push
jae
mov
hlt
push
stc
out
jb
fstp
cmp
loopne
fwait
sbb
sbb
adc
lahf
jecxz
int
pop
aaa
dec
lods
push
fidivr
sub
or
data16
push
popf
int
sti
mov
inc
push
fstp
push
shl
gs
retf
mov
mov
xor
mul
jmp
cmp
cmc
lods
int
popf
sbb
cmp
cmp
in
mov
test
(bad)
jmp
out
and
pop
xor
es
fimul
sar
add
adc
adc
adc
push
in
xchg
push
jp
fld
data16
(bad)
jl
ja
push
inc
mov
js
xchg
shl
xchg
ins
dec
jae
int3
je
lea
arpl
ins
push
inc
fisubr
int
xor
ins
loopne
dec
and
stc
(bad)
in
push
sbb
mov
pop
dec
lds
jo
sub
hlt
mov
pop
js
inc
retf
call
pop
sub
sub
sub
in
xor
dec
or
inc
pop
push
mov
xchg
ss
mulps
fcomp
inc
dec
lock
mov
mov
dec
sub
retf
mov
mov
jmp
jbe
push
mov
mov
test
and
push
xchg
dec
xchg
sahf
push
push
push
(bad)
jmp
les
dec
or
cmps
repz
test
test
push
aaa
cmps
dec
jl
stos
inc
cdq
ret
and
mov
add
add
fdiv
pop
dec
push
(bad)
add
test
push
clc
jbe
mov
adc
lods
sti
xchg
and
mov
pop
loopne
inc
and
jle
cmp
cld
ja
loopne
in
cmp
add
mov
jmp
adc
sti
or
sbb
add
in
inc
fidivr
in
in
dec
(bad)
stc
imul
loopne
icebp
mov
outs
cmp
xor
xchg
in
jb
pushf
xor
adc
mov
test
lods
xchg
aaa
mov
xchg
add
jne
nop
adc
jb
ja
cmps
movs
mov
or
push
sub
inc
stc
cwde
pop
or
inc
ror
dec
mov
into
mov
enter
jne
sub
dec
cdq
and
lods
popa
in
ins
nop
add
and
iret
fisubr
retf
inc
xor
dec
enter
adc
or
loopne
xchg
(bad)
stc
inc
sti
fwait
int
xchg
xchg
fwait
ret
xchg
cmp
loope
lds
retf
addr16
sbb
or
sbb
jmp
jecxz
repz
jmp
out
repz
mov
aas
ins
and
jl
dec
xor
fild
ins
in
xor
dec
mov
ficomp
sbb
test
hlt
jmp
sbb
push
je
stos
push
(bad)
fcmovnbe
sub
test
xor
cdq
fdivr
push
xchg
adc
add
and
retf
pop
push
pop
aam
stos
add
cmp
stos
push
xchg
add
sbb
(bad)
pop
mov
sub
(bad)
out
and
pop
int
les
fsubrp
mov
mov
cmp
iret
adc
fsubr
adc
and
push
xor
jmp
shl
jmp
jae
fst
xchg
fidivr
and
ja
push
out
cmp
sub
mov
retf
push
repz
(bad)
or
cmps
mov
aam
pop
fnstenv
xchg
add
mov
lds
js
xchg
ror
mov
push
stos
shr
and
sub
jge
jbe
mul
into
(bad)
nop
mov
mov
in
xchg
mov
movs
in
shr
(bad)
jnp
cmps
dec
sbb
pop
fs
mov
fcmovnu
fldenv
xor
ins
imul
push
loop
(bad)
push
aam
mov
mov
mov
push
lea
cld
std
loope
cdq
jmp
mov
ret
adc
jmp
ins
mov
cld
call
inc
push
dec
or
mov
mov
add
and
into
loopne
shl
mov
test
icebp
dec
mov
pop
je
xor
xor
cmp
xlat
jmp
push
inc
rcl
xchg
fild
and
lock
mov
lock
je
jno
sub
cmp
ins
sbb
pop
mov
popa
or
(bad)
xor
cmp
jne
das
inc
and
adc
push
mov
sar
push
cmps
mov
xor
inc
sbb
frstor
pop
out
inc
shr
mov
mov
pop
das
imul
test
and
imul
fisubr
xchg
mov
dec
cwde
scas
mov
mov
rcl
mov
mov
jl
xchg
pop
xor
or
das
pop
fwait
out
inc
daa
in
test
aad
add
arpl
mov
gs
jns
cli
or
push
xchg
inc
pop
dec
mul
pop
stos
cdq
shl
xor
dec
sbb
test
test
add
fmul
dec
push
mov
ds
out
and
pop
xor
jae
cmp
pushf
test
mov
mov
inc
fisub
inc
or
iret
jl
mov
or
jne
fdiv
xor
fcomp
or
push
adc
push
mov
scas
jge
(bad)
pushf
inc
jecxz
loope
xchg
in
pop
dec
inc
push
sub
scas
pop
mov
(bad)
in
cwde
xor
movs
ins
arpl
in
movs
jne
mov
mov
fisubr
ror
lods
fadd
imul
jbe
in
mov
mov
mov
sbb
shl
and
sub
sbb
push
mov
int
stc
int
repz
cmc
pusha
xchg
rcr
sbb
sbb
pop
push
adc
movs
fcmovu
pop
sub
imul
fldenv
inc
jmp
jg
aam
div
mul
popf
dec
out
pop
adc
outs
dec
(bad)
ins
jg
aad
mov
mov
cmc
jp
into
rcr
popf
repz
and
stc
xor
cmps
out
or
fwait
gs
addr16
xchg
xor
and
cmps
mov
pop
pop
and
inc
pop
dec
xchg
aam
sbb
fisttp
hlt
jecxz
add
sbb
scas
mov
mov
dec
jb
mov
jne
shr
retf
aad
mov
sbb
hlt
cmps
push
mov
mov
fbld
xchg
loop
jnp
leave
test
push
in
mov
xor
mov
stc
movs
mov
mov
lahf
sahf
(bad)
lahf
sahf
mov
(bad)
or
aaa
mov
das
add
repnz
leave
outs
pop
(bad)
idiv
mov
cmp
dec
ss
mov
leave
push
shl
je
movs
imul
sbb
imul
mov
cmps
pusha
jno
mov
xor
jge
adc
cld
cmp
add
call
push
mov
cmp
push
dec
addr16
int3
stos
js
rcl
test
rcl
imul
scas
imul
out
ins
xor
push
sub
daa
retf
lds
jge
enter
jno
jge
and
fbstp
inc
mov
xor
fisttp
(bad)
in
neg
xchg
xchg
imul
mov
outs
pop
jae
sub
das
pop
pop
inc
cs
xor
cmp
loopne
mov
push
fisttp
cmp
(bad)
das
xlat
int3
in
inc
add
imul
lods
dec
arpl
pusha
outs
je
call
dec
and
movs
repnz
es
push
push
cs
dec
jp
test
arpl
dec
test
or
vpsrld
scas
dec
jmp
mov
push
aas
sbb
pop
mov
imul
mov
je
jle
popf
je
in
in
mov
(bad)
and
mov
inc
or
(bad)
jmp
mov
mov
psadbw
imul
jecxz
mov
scas
cmc
xor
mov
lods
cli
(bad)
fcomp
mov
push
push
mov
push
dec
sti
stc
jecxz
mov
test
jmp
inc
jmp
xchg
fs
or
test
jecxz
lods
aad
cs
lods
mov
sub
lods
aam
fucomp
into
or
in
pop
movs
mov
enter
sub
daa
mov
stos
jbe
dec
cmps
fbstp
mov
outs
test
or
dec
pop
ficom
sbb
jno
out
stos
test
leave
push
jge
cli
cld
mov
shl
sbb
mov
and
jb
sub
mov
push
mov
dec
push
xor
push
xor
xchg
mov
xchg
add
or
add
dec
mov
mov
cli
retf
shl
add
add
and
mov
loope
jecxz
lea
prefetch
imul
je
jecxz
mov
ret
cmp
add
dec
or
add
aaa
fwait
stc
pop
sbb
cld
sub
mov
out
add
call
ds
sbb
arpl
adc
or
fisub
test
cmp
mov
iret
pop
out
and
jge
xor
mov
popf
outs
jle
mov
shl
fadd
js
stos
stos
ins
xchg
ss
push
pop
dec
pop
sbb
jecxz
dec
cwde
jne
sbb
push
xor
call
and
in
mov
lea
or
ins
stc
stos
sbb
add
sub
push
sbb
xor
push
add
lock
imul
xor
inc
inc
or
loopne
push
je
adc
inc
pop
or
movs
xor
xor
call
pop
sbb
enter
aaa
xor
out
cli
pop
dec
repz
pop
(bad)
lahf
dec
xchg
inc
inc
sti
outs
into
cmp
cld
inc
jmp
add
out
ja
lods
outs
pop
lea
loopne
xor
fcmovnbe
mov
outs
ja
xchg
mov
aas
pop
stos
std
fs
out
je
cwde
es
and
sub
dec
jmp
and
out
aam
or
sub
jp
aaa
xchg
inc
out
adc
lods
gs
sbb
sub
in
mov
stc
enter
popf
stos
lahf
test
fiadd
cmp
cdq
pop
sub
push
jnp
cmp
sahf
inc
loop
fs
fisubr
lahf
mov
sub
inc
push
sub
es
hlt
loopne
div
ret
loope
aaa
mov
fsubp
out
int
lods
xchg
ror
mov
cmps
in
jno
(bad)
push
sahf
ds
mov
pop
outs
aam
jge
(bad)
push
neg
jnp
(bad)
mov
mov
test
jns
mov
outs
cmps
fisttp
daa
xor
in
push
pop
and
retf
cli
mov
jge
cmps
adc
mov
ss
cmps
call
mov
mov
imul
and
pop
ret
xchg
jecxz
sub
adc
mov
adc
in
rol
push
pushf
ds
inc
call
sub
std
int
xor
xor
dec
ss
adc
(bad)
loopne
jmp
pop
cmp
add
sahf
or
dec
jmp
repz
in
sti
inc
xchg
dec
cdq
ins
sub
mov
xchg
pop
mov
and
jmp
or
aad
pop
and
outs
jmp
imul
repz
mov
adc
(bad)
jne
or
imul
rcr
test
sbb
dec
mov
aad
mov
xor
dec
adc
das
aaa
xchg
(bad)
mov
mov
and
imul
sub
xor
mul
ja
mov
out
ret
popf
(bad)
(bad)
add
mov
ins
xchg
add
retf
(bad)
jmp
lods
pop
cmp
ds
dec
pop
sbb
or
jo
(bad)
dec
and
jmp
in
jge
or
aam
iret
mov
sbb
sti
pop
in
jle
push
cmp
and
in
pushf
push
xchg
ds
daa
fs
mov
sub
pop
lahf
rol
adc
xchg
push
dec
hlt
movs
lock
cmp
xchg
pop
in
mov
or
sti
inc
sub
ins
mov
sbb
or
sahf
movs
je
mov
cmp
push
idiv
dec
bound
sbb
or
call
add
cmp
add
sbb
sub
arpl
sub
ja
xorps
sbb
js
repnz
mov
in
das
adc
mov
dec
inc
cmps
jmp
or
jmp
int
cmps
mov
sti
out
iret
arpl
xchg
inc
xor
(bad)
neg
repnz
pop
pop
sub
mov
jg
cli
out
mov
add
xor
sar
add
(bad)
dec
rep
mov
enter
out
sub
mov
xchg
fwait
push
dec
or
xlat
retf
leave
inc
mov
int
movs
loopne
push
ret
xlat
test
and
stos
cmps
fsub
repz
sahf
(bad)
or
and
jb
xor
fsub
pop
cli
pusha
fdivr
xor
or
rol
mov
inc
pop
sbb
sub
push
fnstsw
je
push
cmp
and
sar
mov
inc
cwde
in
fsubr
movs
(bad)
daa
(bad)
mul
lea
xchg
in
aas
fsubrp
(bad)
outs
mov
jg
pop
push
clc
outs
das
mov
inc
dec
jl
out
sub
jle
xor
pusha
mov
jle
iret
int3
xlat
mov
jg
aad
data16
jl
push
fldenv
jle
pop
add
ror
movs
imul
sbb
rcr
adc
adc
lahf
add
cmp
stos
push
mov
sbb
jecxz
enter
ja
rcl
sti
adc
arpl
adc
nop
mov
popf
push
xor
fldpi
xlat
cmps
mov
jle
cli
(bad)
xchg
cs
adc
lods
mov
dec
out
out
cmps
lahf
cmp
(bad)
and
outs
in
mov
(bad)
sbb
xlat
(bad)
dec
adc
lea
js
aaa
pop
fwait
push
xor
js
ret
leave
(bad)
or
xchg
test
mov
xchg
and
and
pop
push
mov
lea
retf
js
test
les
xor
and
pop
repz
or
mov
xor
dec
jp
cmp
mov
push
movs
loopne
push
sbb
test
or
cmp
(bad)
(bad)
movs
cdq
jnp
jmp
cmps
ja
aas
jl
jl
mov
and
and
pop
pusha
inc
jmp
sbb
xor
rcr
sbb
xchg
and
jno
daa
ret
(bad)
jb
pop
div
fiadd
outs
mov
cmp
jne
sbb
test
sub
add
add
in
fcom
add
imul
mov
into
xchg
mov
out
mov
mov
ins
ret
imul
stos
xor
pusha
bound
bound
pop
jne
into
pop
and
js
and
call
jnp
add
sbb
mov
xor
(bad)
loopne
xchg
(bad)
fstp
sbb
outs
imul
dec
push
sbb
xlat
and
jbe
rcr
cdq
aaa
(bad)
lods
mov
daa
js
jae
retf
and
jne
xor
iret
enter
adc
sti
mov
pop
out
sub
ja
nop
call
add
dec
pop
mov
dec
xchg
stos
int3
mov
es
sbb
or
(bad)
aas
inc
cdq
shr
icebp
sub
cmps
mov
and
cmp
jg
leave
push
mov
loop
das
inc
mov
or
sbb
inc
sub
inc
lahf
dec
out
pusha
ss
adc
push
mov
ret
xchg
jb
pop
jl
sub
sub
push
stos
jne
mov
lods
out
ds
lahf
push
sub
jl
dec
div
or
fnclex
xchg
ins
mov
cmc
nop
int
add
xor
cmp
cwde
and
in
fisubr
std
(bad)
stc
and
ds
jns
cmp
mov
mov
call
vpxor
dec
out
mov
or
push
(bad)
adc
repnz
mov
adc
push
mov
add
add
push
cmp
jg
mov
adc
arpl
mov
pop
inc
add
push
lea
pop
sbb
lahf
imul
push
jns
jns
jbe
lahf
xlat
out
(bad)
int3
movs
repz
xchg
and
xor
iret
fdiv
sbb
out
mov
outs
clc
jo
xor
sub
sub
pushf
ins
dec
mov
push
mov
out
fnstsw
sbb
adc
emms
imul
sbb
xor
push
cs
outs
mov
mov
sti
aad
out
(bad)
out
pop
push
std
scas
pop
out
fdivr
push
aad
(bad)
out
jne
push
ins
imul
int3
dec
loop
xchg
adc
jge
xchg
(bad)
jp
std
mov
cli
pop
repz
mov
add
sbb
test
xor
stos
and
pop
sub
mov
lods
fimul
jno
shr
xor
mov
adc
mov
pop
movs
mov
nop
ins
pop
adc
push
es
test
dec
cld
mov
sub
and
push
lods
popf
popf
sub
xor
jmp
dec
ret
ss
sbb
xor
ss
push
cmps
je
and
cld
push
out
outs
adc
enter
stc
push
push
call
loopne
outs
retf
or
scas
ror
(bad)
push
(bad)
mov
loopne
xchg
test
cdq
adc
imul
pop
mov
adc
pop
std
dec
mov
dec
sub
jbe
(bad)
imul
inc
ret
pop
or
adc
call
fmul
imul
jne
test
(bad)
movs
frstor
popa
cmp
or
add
add
sub
or
mov
mov
test
out
mov
jmp
int
push
in
adc
cmps
add
rol
inc
push
into
xor
dec
cmps
sbb
xlat
cmp
ja
aad
int
mov
aam
jbe
or
ins
jnp
xlat
gs
xor
cs
xlat
(bad)
imul
lea
es
stos
push
mov
or
icebp
mov
sbb
sub
nop
xchg
mov
call
nop
ja
popf
mov
and
mov
ins
nop
bound
adc
add
jns
or
sub
jmp
in
fwait
sti
mov
jecxz
ins
push
dec
adc
mov
cs
dec
xor
xor
lea
imul
inc
sub
mov
inc
sbb
xor
scas
jle
mov
pop
idiv
mov
or
push
fisub
ret
inc
sbb
clc
pop
inc
ret
inc
adc
mov
mov
outs
xchg
push
cmp
rcl
retf
xchg
pop
dec
test
idiv
hlt
mov
sbb
fnstenv
(bad)
repz
mov
xor
xor
mov
call
mov
inc
in
fnsave
das
cld
inc
jnp
mov
fdiv
push
mov
mov
repnz
les
cmp
cs
pop
scas
es
mov
mov
std
push
sub
movs
fisttp
int3
jle
lahf
xor
test
adc
in
or
mov
dec
inc
or
pop
ins
shr
sub
fmul
jno
aaa
imul
lods
(bad)
lds
jns
jl
jp
and
xor
dec
bound
sbb
jl
imul
popf
(bad)
cmp
jecxz
(bad)
jne
repnz
ins
push
dec
in
jge
nop
(bad)
and
enter
loopne
mov
pop
subps
lods
xor
add
lods
jl
and
sub
sti
and
dec
mov
imul
das
gs
out
adc
data16
aad
(bad)
(bad)
lock
fcomp
iret
xchg
mov
jl
rcl
mov
sti
mov
movs
push
or
push
and
retf
mov
mov
call
dec
xchg
int3
enter
nop
mov
movs
movs
inc
xchg
dec
jae
push
sbb
loope
sbb
xchg
outs
pop
mov
xchg
aaa
ret
hlt
fwait
push
cld
gs
mov
iret
inc
or
call
(bad)
cmp
cdq
cmps
mov
out
mov
das
xchg
int
xchg
mov
es
jnp
cwde
test
jb
movs
mov
jne
lds
retf
and
dec
ins
jg
cdq
mov
dec
(bad)
or
stc
mov
jne
sti
(bad)
mov
push
mov
stos
jl
imul
lds
pop
arpl
add
mov
int
popf
(bad)
pop
xchg
shl
xchg
jp
xchg
leave
fcomp
push
jnp
lock
mov
fild
ds
jge
js
jecxz
jecxz
pop
stc
in
std
cld
pusha
xor
popf
lds
sub
mov
ds
xchg
mov
mov
pop
or
ret
and
add
ret
ss
mov
cld
out
mov
cmp
xor
and
and
stc
xor
pop
jbe
xchg
xor
test
retf
mov
add
pop
push
jnp
inc
sar
inc
lahf
std
ins
cmps
sbb
xchg
sub
pop
retf
jns
in
jmp
xor
xor
shr
rcr
aad
and
clc
mov
xchg
or
mov
(bad)
stos
and
xchg
loopne
jge
fsubr
mov
fwait
add
jnp
movs
call
jmp
sbb
jl
loopne
push
add
cdq
ins
mov
sub
sar
fcmove
mov
movs
inc
cmps
dec
mov
das
dec
(bad)
jmp
sub
mov
cwde
sbb
repz
push
pop
fnstenv
pop
add
sub
retf
sar
mov
cmp
aaa
(bad)
(bad)
retf
imul
sub
out
push
sahf
int3
ret
shl
je
call
(bad)
fmul
out
adc
shl
pop
(bad)
cli
xchg
nop
inc
jg
jle
mov
mov
arpl
sub
push
inc
fwait
test
mov
lds
(bad)
in
push
lods
xor
call
div
or
popf
and
push
(bad)
(bad)
mov
or
xchg
push
call
stos
dec
jecxz
or
cli
data16
mov
jl
mov
int
mov
mov
xchg
stos
sahf
sub
rcl
xor
sbb
mov
sbb
stos
(bad)
mov
jns
add
pop
je
int3
imul
cmps
or
sahf
mov
or
popa
mov
push
loop
or
jb
push
inc
jecxz
jl
push
jae
int3
into
push
or
and
sahf
push
scas
cmp
sbb
dec
pop
push
inc
inc
add
cmp
inc
mov
or
js
sub
call
mov
cld
push
(bad)
mov
mov
out
inc
(bad)
cmp
sbb
dec
pop
jp
ret
sar
and
ds
mov
cmp
cmp
aas
neg
aas
dec
pushf
pop
es
out
add
cmp
cmp
mov
mov
cs
dec
add
mov
add
mov
dec
leave
jae
nop
sbb
mov
mov
xor
push
xor
ret
push
imul
(bad)
jecxz
shr
inc
cmp
xchg
and
sub
ret
fs
into
(bad)
outs
outs
push
inc
sti
je
into
cmps
shl
js
and
and
sbb
pop
sub
push
cmp
jge
je
mov
ret
hlt
inc
mov
scas
add
pushf
es
cs
fs
pop
loopne
into
pushf
mov
arpl
ins
popa
and
cmp
xchg
jmp
jge
ins
(bad)
ins
mov
mov
(bad)
xlat
pop
lahf
lods
aaa
aas
pop
outs
cmp
mov
push
ins
mov
ret
int3
fld
xchg
jns
cmc
push
or
sub
jae
popa
jbe
dec
out
dec
inc
xor
in
sahf
mov
xchg
in
clc
and
push
mov
xchg
xchg
test
fsubrp
(bad)
dec
xor
and
dec
fdivr
inc
xor
push
popa
inc
inc
xor
mov
cmps
pop
pop
shr
sub
dec
mov
fs
pop
mov
mov
cwde
(bad)
push
cld
pop
pop
js
jnp
pop
(bad)
jecxz
es
mov
or
jmp
idiv
test
int
in
mov
and
push
sahf
mov
xchg
fimul
enter
add
imul
dec
lahf
ficomp
scas
xlat
leave
pop
nop
jae
mov
add
jle
mov
adc
and
sub
stc
adc
push
into
pushf
jp
shl
xchg
in
pop
pop
mov
bound
aad
pop
stos
mov
cmp
xor
push
inc
or
jg
jo
imul
test
or
dec
loope
rcl
sub
fld
add
cmp
mul
into
jle
jecxz
sahf
test
imul
and
retf
cmp
jnp
adc
popa
xor
dec
out
sti
mov
add
mov
sub
add
lods
nop
shl
test
ret
jb
into
dec
stos
add
pushf
ins
jo
cmp
stos
or
test
mov
stos
mov
inc
push
aam
mov
or
jne
mov
popa
xor
aam
test
fs
and
cmp
or
js
fstp
fistp
mov
cmp
and
ficomp
cwde
cmps
jecxz
xlat
stos
cmp
pop
inc
pushf
imul
push
(bad)
xchg
stos
sbb
(bad)
mov
xchg
push
les
dec
sub
inc
cmps
mov
pop
in
adc
sbb
test
call
and
and
xchg
push
ror
push
ftst
test
add
adc
sub
clc
adc
imul
repz
loop
(bad)
repnz
sub
call
mov
sbb
adc
lds
mov
shld
not
adc
inc
sbb
out
in
jne
pop
jno
xchg
bound
xor
pop
ss
add
mov
pop
add
sub
int
dec
mov
es
sub
xor
inc
je
in
and
mov
arpl
or
inc
xor
xchg
sbb
mov
lods
pop
popa
mov
inc
add
icebp
sub
sub
sar
cli
sub
xchg
or
cwde
jecxz
mov
clc
ins
daa
std
inc
daa
jmp
pop
int
push
cli
rcl
sti
xor
mov
scas
fwait
sub
daa
imul
aam
dec
loop
adc
sbb
pushf
jp
dec
psubsb
xchg
clc
xor
inc
(bad)
sub
or
pop
lock
xchg
call
in
xor
sub
or
xor
jbe
lds
xchg
dec
push
loop
jge
or
test
xor
sub
ins
frstor
outs
(bad)
jecxz
rcr
outs
test
aaa
pop
pop
cdq
pop
ret
sbb
sbb
mov
mov
ja
mov
dec
or
sbb
pop
sbb
mov
mov
adc
lock
pop
ret
ficomp
and
dec
pop
dec
add
fild
loopne
scas
xchg
inc
fucomp
ret
pop
cli
loope
ret
lahf
out
outs
hlt
movs
jecxz
in
sti
out
push
ret
movhps
call
ds
call
ja
(bad)
push
xchg
outs
aad
int
mov
sub
mov
cmp
sub
daa
cmps
lea
xchg
retf
dec
xchg
or
sbb
ror
cmp
(bad)
mov
loop
xor
mov
add
pusha
mov
add
xor
dec
int3
call
cmp
sbb
pop
xor
out
xor
lahf
sub
hlt
sub
imul
xchg
or
mov
push
nop
mov
pushf
(bad)
fidivr
ja
xchg
daa
sti
lea
ror
test
adc
fidiv
imul
cmp
pop
ja
(bad)
into
push
js
rcl
jp
lods
xchg
cld
mov
test
adc
push
in
push
(bad)
mov
cmp
call
mov
sub
add
sub
adc
out
retf
inc
scas
inc
mov
js
jne
(bad)
cli
clc
test
(bad)
xor
in
sbb
arpl
cmps
in
stos
in
sub
inc
test
xchg
xchg
lock
leave
jle
mov
popa
retf
adc
mov
inc
aas
mov
(bad)
sub
xchg
out
ins
xor
int
jmp
test
adc
and
mov
or
or
adc
sbb
and
(bad)
shr
or
int3
out
inc
arpl
xor
push
dec
(bad)
in
scas
cs
retf
mov
sub
adc
icebp
or
jmp
(bad)
adc
ficomp
movs
sbb
(bad)
sbb
cwde
sahf
xchg
(bad)
lods
aad
ins
in
aaa
sbb
mov
inc
cdq
mov
inc
cdq
sbb
add
(bad)
fist
fldcw
push
icebp
jno
add
inc
push
jne
jns
cmc
dec
lea
ds
jns
sahf
mov
imul
pop
pop
cmc
in
xchg
push
xor
or
retf
fwait
xchg
dec
mov
out
mov
fs
cmp
cdq
mov
(bad)
ss
retf
fidivr
cmp
pop
dec
xor
repz
cmps
adc
pop
pop
js
push
or
push
scas
fs
push
inc
scas
fcom
dec
hlt
mov
popa
pop
pop
les
retf
popa
jnp
push
int
mov
jne
dec
or
ins
loop
inc
and
rcl
push
je
xlat
cmp
push
pop
and
retf
sub
push
inc
stos
adc
cmc
scas
or
pop
inc
pushf
mov
pop
jo
pop
retf
sbb
xchg
shl
pop
push
lods
gs
das
adc
fld
push
and
lods
pop
add
and
jne
cmp
sahf
fs
sbb
aam
inc
hlt
sub
mov
stos
pop
xlat
fsubr
fldcw
and
loopne
retf
les
jns
push
adc
pop
in
cmps
jns
push
push
(bad)
xor
mov
ficom
in
daa
outs
sbb
movs
xchg
rol
dec
mov
or
enter
pusha
pop
(bad)
out
fbstp
mov
sub
jg
inc
iret
test
packssdw
or
inc
pop
xchg
sbb
inc
jb
mov
jmp
cmps
jne
test
repnz
push
call
ins
sub
iret
push
repz
push
fdivr
fnstsw
call
mov
test
sbb
mov
js
xchg
inc
(bad)
cmc
or
in
jno
retf
(bad)
into
and
sar
out
movs
shl
push
scas
mov
repz
iret
arpl
jb
imul
cmp
pop
stos
jmp
icebp
push
std
rcl
mov
shl
fdivr
cdq
daa
sbb
xlat
xor
iret
cmp
in
pop
inc
cdq
fsubr
ja
fstp
jo
mov
pusha
lock
ret
xor
xchg
ror
mov
mov
inc
dec
popf
fadd
retf
fdiv
sbb
leave
jo
mov
cdq
or
or
push
repnz
xchg
dec
fsub
sub
ins
div
lods
xchg
add
js
dec
or
repz
push
mov
ja
shl
or
mov
mov
imul
dec
lahf
push
nop
cmp
sub
(bad)
out
icebp
inc
repz
jno
fnstsw
cmp
(bad)
fimul
mov
das
xchg
mov
test
jbe
outs
sub
and
mov
push
icebp
or
loop
mov
or
fsub
aad
(bad)
cs
dec
or
xor
jns
adc
mov
xchg
pop
outs
xchg
shl
push
(bad)
mov
inc
and
stos
jno
pop
cdq
mov
mov
bound
mov
ins
ja
test
cmp
fisttp
aam
or
add
mov
xor
arpl
lods
cmp
(bad)
xchg
dec
add
add
mov
leave
test
xor
cwde
test
xlat
or
add
inc
neg
mov
fs
in
stos
xchg
xor
cld
lods
loop
and
mov
aam
mov
in
sub
or
push
dec
sub
mov
jmp
sbb
mov
xor
rol
pushf
mov
xor
cmp
cmp
pop
movs
inc
pushf
cmps
inc
cmp
xchg
adc
add
xchg
cmp
mov
lods
push
sub
mov
jp
fsub
sbb
(bad)
sahf
int
mov
je
mov
push
pop
jg
push
xchg
or
push
ffree
sbb
or
mov
xchg
inc
push
in
stc
xor
shr
test
mov
aad
push
aaa
jge
cdq
repnz
push
cmc
out
adc
pop
(bad)
xor
jne
jno
test
cs
mov
les
test
xor
mov
xchg
inc
mov
call
std
inc
cmp
mov
or
sub
push
xchg
or
xor
(bad)
sahf
mov
mov
mov
jmp
mov
in
dec
loopne
adc
and
pop
inc
jmp
inc
aad
outs
sub
test
push
faddp
and
loop
dec
jno
mov
pusha
sub
(bad)
loopne
mov
push
out
jg
call
sbb
js
and
mov
loopne
enter
iret
jge
js
cmp
scas
mov
jns
mov
xor
sbb
dec
mov
mov
inc
jmp
cmp
xchg
bound
sub
dec
shr
mov
ret
scas
push
fiadd
add
inc
push
sub
xchg
sar
in
cmps
sub
xor
out
fist
rcr
adc
stc
xchg
mov
ret
out
outs
data16
pop
adc
mov
xor
lahf
and
xor
addr16
retf
jns
stos
sbb
dec
mov
xor
or
int
jae
test
add
scas
addr16
imul
push
mov
bound
dec
jg
adc
xor
fisttp
repz
stc
fistp
in
jp
cmc
movzx
rcl
mov
rol
ins
stc
aaa
pop
adc
js
rcl
jmp
jmp
mov
pop
out
mov
add
arpl
pop
test
cmp
mov
xor
and
jp
aaa
sbb
fisttp
xor
sub
scas
sbb
lahf
push
cmp
rcl
lods
in
pop
pusha
inc
leave
xchg
(bad)
xchg
inc
cmps
xrelease
ja
xor
jmp
pop
loop
fs
clc
dec
xchg
aam
add
push
outs
mov
daa
or
pop
es
data16
inc
(bad)
push
hlt
pop
pop
mov
mov
xchg
bound
je
xchg
fsubrp
out
(bad)
dec
outs
setle
imul
lods
leave
loope
je
stos
xor
lahf
cdq
mov
test
cmp
movs
inc
cmc
imul
stc
xor
push
inc
outs
mov
dec
addr16
adc
pop
popa
pop
pusha
dec
jecxz
or
mov
rol
jb
sub
mov
pop
fst
push
test
mov
loopne
or
xchg
shr
call
cmp
dec
(bad)
or
data16
cmp
pop
not
(bad)
mov
sbb
dec
add
cmps
push
xchg
call
mov
jb
sub
fld
or
test
stos
mov
movs
iret
mov
sti
and
xchg
mov
mov
dec
or
out
mov
and
and
jl
movs
mov
or
nop
aaa
xchg
js
jo
and
or
imul
iret
lahf
jbe
jns
(bad)
movs
ds
xor
sub
js
xlat
mov
xor
(bad)
jb
lahf
or
cmp
xor
pushf
scas
mul
out
or
shl
pop
retf
aas
fsubr
cmp
in
in
das
pop
mov
mov
inc
xchg
or
xor
(bad)
and
ds
push
stos
mov
ins
pop
or
jp
int
ss
pop
mov
dec
mov
test
imul
dec
mov
in
scas
cmp
cmp
mov
cdq
pop
mov
gs
dec
sahf
sub
call
ds
ins
cli
jge
sub
cmc
std
aad
push
or
mov
mov
pop
inc
stos
or
sti
push
pop
cld
adc
adc
cs
je
dec
xor
sub
mov
mov
push
adc
or
int
cdq
sbb
inc
xchg
sub
fadd
xchg
aad
rol
int3
scas
retf
mov
cdq
cs
xchg
push
or
or
jle
mov
cmp
cmp
dec
(bad)
cli
xor
es
pusha
leave
das
or
add
repz
add
adc
pop
div
movs
repz
adc
retf
pop
retf
add
pop
aas
shl
xlat
mov
cld
loopne
enter
dec
mov
popf
cmps
jge
sub
(bad)
stc
movs
push
and
xor
movs
xchg
jmp
mov
mul
adc
pop
not
jge
pop
retf
jecxz
push
mov
fiadd
daa
lock
mov
pusha
pop
mov
jg
call
js
and
mul
sbb
ds
dec
and
add
test
adc
add
or
popf
mov
sub
nop
in
push
cmp
les
pop
inc
inc
add
jecxz
ja
cmp
aas
mov
fwait
dec
aaa
xchg
mov
sbb
cmp
hlt
inc
aas
inc
cmc
inc
or
sbb
jmp
or
inc
or
gs
ret
add
push
sub
retf
cmc
sbb
xor
mov
ins
mov
div
les
fwait
pop
imul
jbe
(bad)
mov
(bad)
cld
iret
pusha
mov
inc
imul
dec
fidivr
pushf
in
pop
shl
xchg
cs
sub
and
jp
add
clc
push
es
scas
xchg
cmp
add
sbb
add
pop
jno
clc
push
pop
ins
dec
cmp
outs
sbb
outs
add
adc
pminsw
mov
mov
jmp
shl
jns
data16
fcom
mov
call
adc
cwde
add
cmps
inc
out
fdiv
xlat
cmps
leave
je
add
pop
fld
and
(bad)
push
jmp
retf
test
lahf
or
push
mov
lods
xchg
mov
push
fidiv
(bad)
scas
arpl
jle
fwait
aas
cmp
jmp
scas
in
call
xor
mov
jno
dec
xlat
ins
mov
aaa
mov
das
adc
ror
sbb
or
mov
mov
dec
scas
mov
scas
fisub
(bad)
sub
dec
inc
data16
xor
mov
jg
fstp
pop
aas
pop
cmps
pop
xchg
inc
push
mov
int3
and
(bad)
out
pop
ret
js
inc
cmps
icebp
xchg
ret
inc
or
stos
pop
(bad)
call
and
push
in
xchg
adc
push
setl
push
cs
(bad)
fdivr
xchg
rol
mov
mov
jmp
inc
cdq
mov
inc
ss
in
add
cmp
xor
xchg
xchg
ja
cmc
int
and
ins
shl
sbb
jnp
mov
and
fimul
iret
fcomp
cmp
xor
outs
loopne
fwait
push
push
lock
mov
ror
push
adc
mov
fidiv
shl
enter
and
jmp
sub
test
mov
and
ret
mov
or
movs
loope
or
mov
or
sbb
(bad)
xchg
in
lahf
sub
mov
mov
retf
scas
add
cs
pop
int3
mov
cmp
ins
nop
xchg
pop
ins
adc
xor
popa
add
push
jl
push
sahf
jbe
mov
mov
test
fisubr
call
out
cmovae
add
jmp
dec
aaa
inc
mov
inc
sbb
pop
dec
mul
adc
xchg
and
outs
cs
sbb
dec
mov
movs
push
sbb
inc
mov
cdq
rol
rcl
sub
xchg
cmp
mov
push
mov
jnp
test
repz
out
lds
retf
loop
or
adc
repz
sbb
pop
jmp
dec
nop
retf
inc
icebp
repz
cmp
inc
xchg
jg
cwde
inc
dec
jmp
mov
cmp
mov
ins
sti
inc
adc
leave
fs
iret
add
sub
(bad)
test
in
push
xchg
inc
cdq
ret
and
xchg
add
cs
sub
mov
mov
inc
mov
and
and
jne
xlat
adc
movs
sub
je
mov
push
mov
ds
movs
pop
nop
pop
dec
outs
mov
stos
cmp
mov
pop
int
outs
(bad)
(bad)
int3
push
outs
push
mov
push
sub
mov
sub
push
rcr
add
imul
adc
in
push
shl
xchg
add
xchg
inc
mov
(bad)
fsubr
dec
pop
dec
shl
pusha
pop
cli
(bad)
ss
mov
pop
jle
ss
lods
movs
jmp
neg
push
(bad)
jmp
sti
(bad)
out
je
je
jmp
test
xor
popf
clc
inc
das
pop
retf
push
in
scas
xor
leave
push
dec
nop
pusha
loop
retf
sub
or
add
ror
dec
and
ja
xor
push
and
lods
(bad)
add
ds
xchg
adc
jb
or
(bad)
test
pop
pop
dec
or
mov
aad
dec
rcl
xchg
cwde
jmp
sahf
ja
mov
mov
in
mov
cs
or
sub
outs
aaa
jbe
mov
icebp
lds
mov
popf
dec
cmps
add
cs
mov
out
fucomp
cmp
cmp
mov
arpl
outs
outs
aam
mov
loope
or
mov
add
test
sti
mov
mov
jae
dec
daa
dec
mov
dec
adc
sbb
dec
scas
push
mov
stos
xchg
scas
dec
fidiv
jmp
cmp
fadd
adc
test
call
jae
pusha
sub
and
pop
sbb
xor
inc
cmp
gs
cmp
jno
push
jne
aad
imul
out
mov
xor
fld
outs
mov
inc
xor
push
dec
sbb
push
lahf
dec
movs
fldcw
inc
cmp
xchg
mov
aas
loop
add
std
adc
popf
das
xor
jo
and
ficom
add
pop
add
xor
out
mov
into
popf
in
ds
sub
call
ret
inc
aad
in
gs
inc
push
inc
inc
imul
mov
mov
mov
and
xor
imul
jp
push
ret
sub
sbb
jp
pop
enter
data16
sbb
cmp
jmp
stc
cmp
je
push
loopne
cmps
mov
in
xor
mov
popa
pop
mov
jno
jg
ins
daa
stos
shl
mov
dec
(bad)
loopne
es
or
mov
adc
outs
popa
aam
add
mov
jnp
xchg
adc
xchg
add
xor
mov
push
lods
out
cmp
add
mov
sbb
sbb
xor
mov
add
or
push
shl
add
mov
pop
mov
rol
sub
sub
push
fldenv
and
nop
add
and
jne
in
movs
cmp
movs
inc
pop
sub
arpl
call
fld
(bad)
push
mov
sub
movs
dec
sub
das
add
test
cmp
fs
test
jns
and
xor
out
sub
adc
in
das
push
cwde
xor
stos
jmp
pop
dec
call
mov
cmp
mov
mov
fs
leave
pop
jo
add
mov
fwait
add
mov
es
sub
xchg
js
test
or
adc
fs
jp
push
pop
pusha
jno
(bad)
xchg
and
sbb
hlt
cs
lods
dec
div
int3
jmp
pop
xchg
jmp
push
push
dec
out
dec
ror
mov
mov
or
out
repz
mov
cmps
cmp
popa
(bad)
sbb
rcr
mov
scas
ins
xchg
fimul
(bad)
imul
test
out
out
das
xchg
sub
push
pop
test
inc
call
jecxz
sbb
dec
sub
and
mov
inc
adc
push
mov
jmp
frndint
ja
mov
data16
cmps
loope
sub
mov
je
xor
xor
in
mov
mov
sub
and
movs
cmp
xchg
repz
xchg
mov
or
repz
test
fwait
mov
sbb
pop
inc
ror
test
push
add
push
xchg
pop
retf
jl
mov
inc
inc
rcl
sub
cmp
lods
pop
push
test
add
fs
jno
pop
fcom
sbb
out
fidivr
(bad)
pop
cld
hlt
mov
mov
je
mov
aaa
icebp
or
add
imul
je
fisttp
pusha
mov
pushf
push
mov
aaa
xchg
in
in
out
les
sti
cmc
in
or
les
push
lods
movs
xchg
out
mov
fcom
mov
stos
mov
fisttp
and
test
mov
nop
icebp
and
dec
jnp
std
push
dec
js
jge
fstp
inc
add
sub
popa
jecxz
leave
mov
pop
xchg
xor
pop
adc
pop
bswap
sub
gs
xchg
mov
in
cld
fcom
jmp
ins
jo
iret
xchg
add
inc
pop
sub
mov
sbb
xchg
(bad)
jne
cmp
cmp
ins
push
and
xchg
hlt
jbe
dec
sub
sbb
jnp
dec
xchg
push
push
bound
mov
aam
push
inc
test
or
fisubr
dec
out
jmp
pop
lahf
aam
(bad)
jmp
int3
lahf
aam
jno
mov
test
and
inc
into
xchg
test
(bad)
sti
(bad)
retf
dec
cdq
or
push
mov
xor
addr16
enter
push
lahf
movs
pop
inc
lods
inc
ror
push
mov
xor
das
ret
mov
cld
jne
pop
dec
sbb
add
xchg
push
nop
pop
popf
or
jp
cmp
cmps
loopne
push
popf
ja
mov
out
push
and
dec
or
mov
dec
add
sahf
and
lea
xchg
add
push
pop
pop
sahf
mov
pop
xchg
imul
fsub
mov
imul
call
aam
pop
in
mov
cmp
xor
dec
and
retf
or
mov
and
aam
arpl
call
ret
call
dec
jns
fild
inc
cmps
or
add
xchg
and
jae
loopne
dec
sbb
lods
test
push
xor
and
add
jle
push
xchg
jmp
cs
cmc
aas
scas
(bad)
mov
movs
dec
xor
cmp
gs
mov
sbb
in
jg
sbb
popa
and
sbb
mov
mov
and
adc
push
mov
fstp
sub
xor
xor
outs
vmulpd
rcl
cmp
test
(bad)
nop
or
or
xsha1
cmps
dec
mov
jge
fcom
rcr
or
rcr
and
inc
(bad)
fisttp
rol
jae
pop
mov
jmp
cli
jle
fldlg2
inc
daa
sbb
push
jae
adc
push
add
lahf
(bad)
clc
pop
or
out
nop
add
sub
jne
out
xor
sbb
inc
test
repnz
mov
or
push
sub
jecxz
fisttp
xchg
stc
mov
push
div
mov
sbb
call
xor
je
jmp
aam
mov
push
pop
dec
dec
aam
not
ret
mov
pop
or
xchg
add
xor
mov
cwde
out
pop
pop
or
jae
xor
push
inc
ss
bound
std
and
push
cmps
test
push
pop
mov
cmc
push
push
mov
stos
stos
push
mov
and
je
sbb
repz
mov
cmp
sti
shl
bound
cmp
pop
cmp
ja
das
inc
sti
jb
cmps
push
repz
and
pop
adc
add
sbb
push
data16
aam
mov
inc
sub
data16
int3
fwait
push
int
inc
je
pop
fcmovnu
imul
sar
push
xchg
xor
add
out
and
test
jb
lea
dec
fsqrt
inc
rol
push
test
and
mov
lock
in
inc
popa
push
gs
lods
jle
xchg
mov
sub
xchg
inc
adc
cs
mov
imul
lods
call
nop
retf
sub
cmp
lods
fisttp
xchg
or
jg
pushf
outs
ret
or
xor
rcr
scas
push
xchg
add
xor
mov
or
pop
inc
inc
and
push
adc
and
mov
jo
in
in
mov
inc
push
mov
(bad)
mov
arpl
xor
and
sbb
bound
add
daa
sbb
inc
xchg
xchg
mov
outs
mov
jbe
sbb
mov
jno
aas
push
lds
adc
ret
dec
leave
cmp
mov
inc
in
aad
in
pop
test
xchg
iret
or
xchg
sub
mov
jb
rol
mov
push
dec
adc
and
std
sub
out
cmps
dec
aas
jb
xchg
jns
push
jns
inc
jns
jns
out
inc
or
push
leave
sub
sub
pop
inc
jne
cmp
adc
enter
(bad)
sbb
jnp
les
sbb
repz
and
push
sub
sub
jmp
xlat
inc
cdq
inc
push
mov
add
outs
loop
mov
sub
or
les
lds
or
xchg
and
lock
push
sar
mov
and
push
bound
cld
inc
inc
lods
mov
sbb
sti
test
push
ror
sub
mov
adc
adc
mov
mov
out
adc
xchg
in
cmp
call
and
adc
out
and
jno
push
pop
(bad)
(bad)
sbb
sbb
(bad)
cmp
cmps
cmps
xchg
jle
mov
push
dec
jno
cwde
cld
and
mov
arpl
mov
cdq
add
mov
lock
inc
pop
mov
add
inc
rcr
loopne
inc
sbb
adc
(bad)
and
in
mov
sub
dec
mov
sub
xchg
loope
mov
xchg
and
sbb
dec
ror
sbb
push
push
cmp
mov
pop
cmp
mov
ins
sahf
xor
aas
fcomp
jl
int
jmp
mov
push
aas
pop
push
mov
fs
cmp
movs
pushf
out
cmc
push
push
sbb
add
mov
cld
xchg
(bad)
push
jmp
sbb
stos
popf
xor
mov
dec
retf
cmp
aaa
cmp
frstor
pop
scas
icebp
mov
std
mov
(bad)
jp
push
jg
fwait
arpl
and
pop
movs
fwait
or
adc
xor
push
pop
add
add
out
push
xchg
cmp
push
daa
fisttp
xchg
mov
cdq
outs
jecxz
push
into
sbb
xor
cmp
mov
cmp
and
and
ja
mov
pop
out
test
mov
aad
ror
push
mov
fiadd
loope
and
retf
js
mov
mov
shr
test
cdq
and
jae
(bad)
jnp
pop
fdiv
in
imul
xchg
popf
fnstcw
pop
sbb
push
lds
call
imul
adc
inc
mov
mov
lods
loop
out
ret
add
mov
sbb
rcr
pop
sar
mov
xchg
mov
push
mov
xchg
mov
dec
aas
cmp
clc
inc
xlat
test
or
sbb
add
jno
nop
push
and
xchg
mov
out
dec
retf
dec
push
and
mov
cmps
xor
test
and
out
rcr
iret
jb
sar
(bad)
sub
div
aas
xchg
push
std
outs
push
add
scas
jecxz
arpl
leave
mov
pop
inc
adc
or
fnstenv
pop
mov
lea
dec
jbe
mov
dec
jmp
cmc
gs
dec
inc
pop
xchg
test
rcl
sbb
popa
jno
pusha
retf
mov
in
(bad)
adc
adc
iret
and
int
fcom
outs
outs
or
jg
xchg
add
inc
mov
fisubr
icebp
sbb
adc
aad
dec
dec
outs
stos
aas
in
aam
sub
mov
mov
mov
mov
pop
jo
jle
or
mov
movs
add
inc
or
and
inc
mov
jns
adc
(bad)
jecxz
repnz
mov
cmp
inc
rcl
mov
mov
pop
xchg
imul
popf
shr
test
add
adc
addr16
inc
lds
mov
cdq
jmp
movs
icebp
push
inc
imul
aam
xchg
movs
ret
ins
test
sti
rol
mov
or
pop
sub
es
aaa
xchg
out
mov
inc
pop
scas
test
pop
add
sub
outs
es
mov
cmovb
jno
mov
test
int
dec
sub
call
or
retf
movs
sbb
inc
out
jecxz
mov
push
sub
lea
iret
rcr
mov
jecxz
mov
adc
sub
ror
jle
add
stos
cmp
inc
xor
xor
push
mov
pop
enter
and
xor
sbb
mul
enter
sbb
dec
loop
fist
and
mov
movs
xchg
push
adc
sar
mov
fcom
jo
add
sbb
leave
les
pop
jge
xor
pop
push
sub
xchg
adc
test
or
sbb
cld
xchg
je
xor
sbb
std
cld
cmp
call
cmps
mov
aam
sbb
pop
cmp
inc
sbb
cs
dec
add
sbb
push
and
in
inc
sbb
mov
inc
hlt
rcl
ret
aad
xchg
mov
stos
enter
popa
aaa
cmp
pop
out
or
pop
mov
fisubr
cmp
adc
add
jl
xchg
inc
stc
jnp
jae
ret
popf
scas
fisttp
cmp
jo
push
scas
mov
xchg
pop
pop
sub
sbb
jmp
nop
push
daa
cdq
pop
mov
not
push
out
fst
leave
sub
jo
inc
push
(bad)
push
pop
jmp
cmp
push
dec
loope
push
mov
sub
test
and
xchg
lea
pop
or
xchg
mov
fist
pusha
test
js
xchg
adc
fwait
adc
rol
xor
xchg
cmc
call
mov
jp
int
jns
out
mov
std
jbe
addr16
jge
push
dec
stos
test
add
xor
sbb
sti
fisub
jle
mov
pop
sbb
jae
jno
mov
mov
stc
retf
push
stos
sub
out
mov
dec
fst
hlt
fcomp
fld
mul
lods
inc
mov
cli
xor
mov
xchg
cmp
dec
add
add
test
mov
les
stos
xchg
push
(bad)
ss
sahf
dec
xchg
push
test
or
ins
push
es
in
jnp
push
xchg
xchg
(bad)
pop
dec
xchg
push
pop
sbb
and
pop
sub
shr
xor
pop
mov
cld
movs
sub
test
push
call
jae
stos
cmps
cmp
stos
mov
or
add
jmp
mov
call
or
scas
sub
stos
add
add
sbb
xchg
sbb
repz
jl
pop
pop
outs
dec
call
cmps
fadd
jbe
pop
outs
xor
mul
shr
and
mov
mov
(bad)
mul
mov
lods
cs
into
adc
push
pop
mov
mov
shl
mov
xchg
jp
mov
mov
call
mov
dec
mov
adc
jmp
aas
push
in
dec
aaa
aad
pop
jge
fwait
scas
xchg
das
pop
cli
sub
dec
inc
xor
add
nop
or
test
aaa
jb
(bad)
mov
sub
retf
jne
inc
mov
jb
sub
imul
mov
push
mov
push
out
ret
add
cli
outs
cli
shl
fimul
int3
retf
mov
pop
movs
(bad)
xor
ror
loopne
hlt
call
xchg
and
mov
adc
add
mov
add
adc
dec
or
mov
xchg
loop
sbb
sbb
in
xchg
movs
fldenv
jl
add
jbe
sub
test
and
mov
push
es
imul
pop
mov
je
data16
mov
xor
pop
shl
xor
sbb
sahf
sbb
cli
loope
adc
mov
cmp
mov
(bad)
jbe
add
push
retf
inc
pop
jle
mov
lods
mov
out
cmp
out
sub
sbb
fcomp
jo
ss
push
ror
js
pop
ret
mov
ss
and
mov
stos
pop
push
sub
add
jge
jmp
inc
mov
pop
cmps
mov
push
mov
dec
in
ss
adc
inc
mov
mov
xor
push
cs
or
shl
jb
iret
adc
or
ret
sbb
fnstcw
btr
addr16
out
jmpw
jnp
mov
pop
test
out
pop
sbb
jmp
dec
movs
ret
dec
push
dec
inc
or
rcl
repnz
ror
pop
scas
inc
fwait
int
mov
movs
mov
sar
aam
jae
lock
jno
add
std
shr
and
xchg
arpl
in
fisub
mov
xchg
gs
call
call
dec
inc
jg
sub
shl
(bad)
std
xchg
mov
addr16
push
xor
stc
dec
and
dec
gs
mov
jmp
outs
mov
push
stos
inc
push
movs
adc
sub
add
xchg
and
adc
cli
ss
sub
ins
jmp
fidivr
pop
mov
mov
push
jb
lods
icebp
pop
inc
mov
add
xor
sub
mov
push
cmp
pop
movs
mov
in
mov
lock
nop
lahf
mov
cdq
dec
jb
cmps
lods
scas
sbb
add
jnp
mov
push
hlt
fcmove
mov
jp
add
imul
data16
sub
sti
das
inc
cdq
xchg
push
mov
aad
call
out
cmp
(bad)
std
daa
jns
dec
cmp
ret
imul
ror
scas
or
repz
fdivr
sbb
inc
popf
test
aam
mov
sbb
movs
icebp
mov
fmul
sbb
jmp
sbb
test
add
retf
bound
pop
mov
inc
adc
shr
jl
xor
and
leave
inc
f2xm1
or
add
fsubr
iret
sbb
push
push
scas
jb
cld
call
push
lock
cmps
stos
in
mov
mov
fnsave
inc
sbb
push
add
jne
stc
pop
stc
daa
xchg
jl
or
push
sub
imul
lea
jmp
stos
dec
push
in
popa
fistp
test
ret
lock
jne
mov
add
dec
cmc
lods
inc
and
sub
std
adc
jae
(bad)
call
mov
dec
icebp
mov
lahf
aam
push
or
jns
and
pop
add
scas
adc
inc
push
fs
sar
dec
add
inc
sbb
dec
rcl
inc
push
retf
(bad)
mov
pop
inc
add
push
sbb
jl
xor
adc
mov
and
pop
mov
adc
xchg
outs
mov
push
call
xchg
repnz
and
retf
cmp
xchg
sahf
inc
ds
int3
mov
(bad)
fcom
and
cmc
pslld
sub
out
addr16
sub
mov
cmps
pop
jo
jno
mov
mov
or
or
shl
add
xchg
je
popa
mov
adc
jne
into
lds
aas
rol
sbb
and
mov
lds
in
lods
fmul
and
pop
mov
mov
push
jmp
ins
stos
sub
xchg
and
inc
lds
loopne
dec
call
pop
inc
iret
cwde
jno
xor
and
inc
dec
dec
leave
xchg
lock
pop
or
mov
lea
imul
call
jge
fistp
jmp
lock
jnp
repz
int3
call
push
mov
adc
push
dec
add
prefetchnta
xchg
jnp
hlt
repnz
out
scas
(bad)
sbb
int
cld
arpl
out
popa
fld
or
inc
jmp
inc
ds
cmps
push
mov
push
leave
das
fs
xor
fmul
icebp
aam
push
or
mov
outs
dec
or
jle
cmp
fcomp
gs
cmp
dec
out
or
shl
pop
lock
test
pop
pop
retf
test
stos
cdq
and
retf
cmp
mov
lahf
and
pop
aam
jp
stos
repz
retf
dec
cmps
push
or
(bad)
xlat
aad
xor
xchg
and
and
cs
jo
mov
adc
xor
aam
mov
cmp
hlt
push
outs
dec
popf
sub
lds
inc
cdq
out
xchg
pop
pop
adc
or
push
jo
adc
pop
int
fild
xor
add
in
cmp
es
mov
jmp
pop
push
shl
fnstenv
sbb
jg
fwait
pop
xlat
sub
and
loope
ss
ja
retf
or
mov
mov
lods
jmp
mov
mul
fstp
outs
mov
lea
sub
add
cdq
mov
inc
call
push
cld
inc
ret
stos
dec
jge
xchg
cli
xor
pop
mov
pop
aam
mov
cmc
and
dec
cmp
dec
test
or
sbb
clc
or
movs
and
xchg
mov
add
div
inc
mov
or
pop
dec
sub
into
cmps
mov
shl
shl
push
inc
jb
and
and
nop
inc
leave
scas
enter
lea
adc
dec
fstp
mov
scas
and
test
jle
jo
(bad)
cmp
scas
adc
jmp
cmc
and
mov
mov
adc
sub
enter
ficomp
daa
lea
and
fst
pop
inc
std
mov
aam
xchg
sti
ins
inc
and
jg
xor
call
and
pop
add
inc
jmp
in
sub
addr16
pop
push
dec
pop
pushf
or
adc
xor
mov
cmps
push
inc
xchg
sub
das
ins
test
jge
jge
std
cld
mov
ret
icebp
xchg
sbb
jnp
lock
inc
data16
xor
movs
sbb
pop
popa
add
fs
push
ror
mov
(bad)
fucomp
cs
std
repz
mov
iret
mov
dec
push
add
add
std
sub
(bad)
fs
jl
retf
inc
out
jb
sub
ja
mov
and
mov
push
sub
and
pop
inc
scas
adc
std
nop
lock
push
outs
scas
dec
push
pop
and
loopne
xchg
pop
xchg
pop
adc
add
dec
test
icebp
or
ret
enter
cmp
test
mov
mov
xor
dec
(bad)
fisttp
inc
repz
nop
mov
jae
cmp
pmaddwd
aad
enter
adc
jno
add
sub
test
aam
je
adc
or
add
cmc
mov
adc
enter
hlt
into
je
mov
xor
stc
rol
xor
cld
nop
scas
xchg
in
pmullw
repnz
or
xchg
dec
jo
int3
pop
jbe
daa
retf
sbb
in
mov
jecxz
xor
add
cdq
jae
dec
and
rcl
daa
faddp
add
test
ja
ja
cmp
xchg
mov
sbb
jl
push
data16
loopne
rol
clc
mov
or
out
cmp
cmps
lds
push
adc
es
mov
xlat
icebp
and
dec
aas
in
xor
mov
push
inc
rol
mov
out
vmwrite
add
xchg
cmps
xor
pmaddwd
in
xlat
ret
loop
sub
pop
rcl
pop
push
bound
xchg
imul
adc
mov
xchg
pop
add
lods
cmps
ds
daa
loop
and
(bad)
inc
sub
ret
shl
or
ficomp
out
adc
lods
push
or
xchg
mov
xchg
dec
inc
out
jl
leave
dec
hlt
mov
push
(bad)
retf
mov
mov
inc
scas
mov
ret
call
mov
add
loop
adc
fwait
jne
adc
and
cmp
daa
cs
mov
js
gs
dec
push
fld
arpl
dec
adc
ins
mov
mov
adc
mov
mov
sbb
mov
inc
cdq
pop
xchg
xor
pop
or
mov
mov
xor
int
rcl
and
dec
dec
ror
mov
test
push
js
in
lea
(bad)
mov
out
jbe
lods
ins
xor
sbb
cdq
gs
out
loopne
or
inc
push
and
in
pop
stc
test
sbb
pop
mov
ficomp
push
lods
dec
add
(bad)
push
bound
int
xor
sbb
call
sub
fidivr
adc
xor
imul
cld
jae
and
adc
in
mov
and
cmp
inc
sbb
iret
cmp
lods
and
fisub
mov
xor
adc
adc
sub
inc
cwde
sahf
rcl
inc
cmp
movs
mov
pop
test
repnz
xor
pop
cmp
in
ror
mov
mov
jmp
pop
inc
ds
lock
mov
mov
aaa
xor
es
xchg
gs
das
push
sbb
loope
inc
dec
add
rcl
add
cmps
adc
lahf
xchg
fstp
sbb
out
outs
lds
(bad)
jae
sub
sar
inc
sbb
xchg
lods
jp
dec
pop
fwait
push
int3
sub
xchg
cmp
fsubr
popa
add
ss
add
loope
inc
scas
xor
gs
mov
dec
mov
push
inc
scas
outs
jnp
add
or
jmp
repz
mov
bound
sub
fwait
pop
push
pop
stos
push
sub
pop
inc
les
push
mov
retf
mov
shl
lea
scas
call
(bad)
out
stos
outs
push
cmp
gs
movs
enter
xchg
dec
adc
inc
mov
out
call
mov
push
mov
ror
sbb
fwait
push
mov
pushf
fdivp
loop
aaa
pop
pop
mov
cmp
outs
sbb
not
data16
outs
inc
cs
xchg
aaa
sbb
xchg
repz
inc
cmps
test
xlat
push
or
mov
inc
in
fsubr
pop
and
mov
out
or
inc
pop
and
inc
cmp
adc
add
fdiv
nop
les
mov
mov
call
mov
jnp
cld
inc
ss
push
push
xchg
and
movs
mov
jnp
or
shl
xchg
cmp
mov
shl
lods
in
jno
fcomp
add
jmp
mov
and
push
fxch
pop
in
imul
movs
sbb
jge
mov
mov
dec
sbb
scas
push
xchg
or
cmp
bound
add
dec
neg
jmp
cmp
push
inc
icebp
ss
inc
in
pushf
movs
jmp
xchg
or
inc
jl
inc
xor
cmp
pop
into
out
and
xchg
movs
mov
pop
cmps
pop
xor
cs
jecxz
call
jecxz
js
fiadd
inc
pop
test
sub
ins
and
push
test
xor
je
repnz
sub
jge
cmp
push
cmp
jno
mov
pop
das
cdq
popa
add
inc
bound
cmp
xor
inc
imul
adc
lock
pushf
sub
adc
jne
sub
mov
cmp
ret
mov
dec
movs
js
(bad)
jmp
fcom
nop
mov
in
test
jne
js
push
(bad)
jmp
scas
jp
mov
xchg
xchg
pusha
and
push
mov
mov
aaa
mov
aad
inc
adc
dec
stc
movs
push
xchg
bound
mov
sub
ins
mov
mov
pop
add
jl
ret
add
sub
pop
and
xor
test
(bad)
sub
inc
sbb
xor
aam
adc
add
cs
arpl
xchg
xor
pop
popf
pusha
int3
pop
std
mov
and
add
lock
cld
xchg
xchg
retf
ror
arpl
xchg
cmp
jnp
arpl
xor
jno
and
cmc
leave
scas
mov
imul
pushf
xchg
adc
sbb
adc
or
mov
lds
daa
jmp
lea
ins
xchg
in
mov
dec
scas
and
sub
repz
add
jae
dec
sub
pop
jb
stc
add
cmc
mov
xchg
adc
jge
xchg
in
push
out
jne
sub
xchg
sbb
test
mov
fstp
cli
push
ds
jge
fild
shl
enter
test
xor
leave
sbb
add
pop
fnstenv
jmp
xchg
push
sub
dec
sti
sub
and
imul
xchg
cwde
xor
mov
push
loopne
shr
sbb
jmp
daa
movs
lods
xor
sub
movs
mov
sahf
imul
mov
mov
inc
jns
hlt
icebp
mov
mov
stc
jnp
xor
mov
add
retf
dec
xor
aam
ror
inc
pop
sbb
xor
les
enter
enter
pusha
les
adc
or
addr16
jb
pop
cmp
cmp
sar
(bad)
sahf
sti
(bad)
neg
pop
(bad)
mov
pop
inc
xchg
out
aaa
xor
push
pop
out
adc
sahf
out
daa
adc
or
add
xor
sub
adc
xlat
neg
cli
(bad)
jmp
push
mov
in
or
inc
xchg
dec
mov
push
push
sub
inc
sub
mov
inc
push
lds
sahf
push
idiv
jo
and
inc
xor
inc
mov
add
jo
mov
addr16
mov
call
jo
push
addr16
add
push
inc
or
sbb
mov
jecxz
xor
xchg
or
and
in
add
or
xor
pop
popa
xor
(bad)
jae
and
inc
jnp
out
xor
leave
xor
fucomp
addr16
mov
pop
mov
pop
and
rcr
mov
int
les
lahf
sub
push
lods
das
lock
movs
bound
scas
bound
push
xor
and
mov
pop
or
shl
or
xchg
into
fsubr
mov
mov
stc
pop
xchg
push
repnz
sahf
movs
xor
push
inc
sub
cmp
in
jbe
retf
push
dec
mov
or
dec
fisttp
mov
sahf
rcl
sbb
add
xchg
mov
rcr
lods
dec
in
xchg
int
cli
pop
dec
xor
mov
retf
xor
sbb
mov
fwait
les
sbb
cli
inc
add
loop
and
mov
cmp
test
(bad)
popa
es
fcom
out
std
xchg
fmul
sar
pop
push
jg
xchg
and
icebp
test
cmps
mov
test
dec
es
sub
mov
push
inc
sub
adc
xchg
div
les
addr16
push
int
dec
mov
(bad)
adc
mov
(bad)
shl
pushf
sub
mov
add
push
test
jae
push
mov
jno
sbb
mov
daa
test
mov
and
scas
jmp
sbb
adc
xchg
nop
dec
aam
jnp
sub
repnz
test
and
(bad)
imul
xchg
lock
call
out
arpl
stos
fbstp
pop
out
lea
dec
add
lock
icebp
rol
or
sbb
cmc
outs
test
mov
or
sub
test
adc
outs
push
add
ds
jp
retf
sbb
mov
jns
test
sbb
cmp
inc
cmp
adc
add
mov
dec
push
add
mov
sbb
lods
fs
pop
xchg
gs
loope
or
push
mov
mov
rcr
fnsave
daa
push
test
retf
test
push
xchg
inc
sub
push
fmul
out
inc
addr16
jb
mov
pop
xchg
mov
stos
push
fsub
test
int3
jmp
sbb
jb
popa
shl
lahf
test
inc
test
pop
ja
fnstcw
xlat
mov
std
push
int
sub
inc
mov
xchg
pusha
mov
push
iret
outs
inc
ds
sub
outs
mov
call
mov
mov
xor
cmps
mov
sub
sub
pop
rol
(bad)
push
rcl
jmp
pop
add
mov
mov
stos
or
inc
pushf
xor
mov
std
sar
sbb
mov
out
test
cmp
cmp
sbb
leave
add
pop
adc
mov
adc
mov
add
nop
mov
xchg
xchg
enter
and
dec
sub
mov
xchg
adc
dec
xchg
dec
lods
stc
push
jae
retf
popa
or
add
or
mov
mov
and
cwde
shl
push
mov
mov
rcr
adc
out
dec
add
pushf
cmp
push
inc
ins
ss
mov
rol
jo
sbb
sub
mov
movs
sbb
add
aam
jecxz
fisub
pop
inc
jno
movs
inc
cmps
sbb
mov
push
sub
add
add
ds
mov
rcr
mov
mov
imul
pop
into
pop
push
jp
test
cld
mov
or
dec
aam
jno
dec
xchg
lods
nop
push
inc
sub
sub
xor
jl
add
push
add
and
in
lods
or
int3
pop
js
out
int
mov
adc
mov
jp
out
jo
mov
bound
out
sub
pop
int
mov
pop
or
xchg
test
ins
xchg
test
pop
js
xchg
mov
or
cmps
sub
push
(bad)
(bad)
dec
stos
mov
xchg
sbb
repnz
jbe
sbb
in
pop
int
jb
mov
and
xchg
push
adc
and
je
mov
enter
add
jns
int3
fiadd
jmp
inc
cli
or
inc
mov
aam
int3
or
shl
and
push
dec
cmp
call
ret
mov
sub
mov
mov
repnz
sub
loopne
dec
call
retf
mov
int3
push
and
cmps
out
mov
adc
jbe
outs
imul
fcmove
retf
mov
add
ret
imul
jbe
dec
into
jnp
call
jge
enter
jp
xchg
mov
add
les
lds
jmp
xchg
xor
mov
adc
jbe
xchg
pusha
int
sub
in
mov
sub
cli
adc
or
ret
xor
arpl
ja
out
mov
imul
test
add
bound
add
rcl
ficomp
mov
scas
pop
out
ja
mov
adc
arpl
sub
aad
scas
dec
xor
push
dec
pop
cmp
pushf
ret
out
sub
mov
sar
adc
call
or
repnz
mov
jbe
shr
xchg
push
mul
cmp
test
loope
adc
jns
sbb
shl
dec
in
xlat
jge
dec
pop
das
outs
push
jnp
adc
test
dec
jo
jo
mov
(bad)
jo
jmp
sar
les
sub
add
push
lds
xchg
aad
and
inc
sbb
test
mov
adc
and
mov
or
std
loop
jne
add
xchg
mov
call
int3
mov
push
push
loop
xchg
popa
or
or
movs
jg
push
inc
cwde
clc
xchg
cmp
(bad)
(bad)
push
cmps
shr
mov
push
or
adc
sub
push
jmp
add
js
fdiv
leave
and
add
sub
jge
test
clc
fmul
sahf
push
or
jmp
inc
inc
add
mov
ja
out
xchg
push
dec
cmp
retf
mov
xor
mov
adc
pop
xchg
pop
jge
or
movs
mov
sbb
push
aad
es
movs
inc
cmp
sub
cs
add
cmps
shl
int
push
add
adc
mov
loopne
rol
jge
push
mov
out
adc
sbb
add
scas
cwde
sbb
mov
hlt
xchg
xchg
test
loope
loopne
popf
mov
jg
retf
jmp
inc
mov
pop
and
sub
in
inc
lahf
ins
mov
pop
test
outs
retf
les
emms
sbb
pop
hlt
sub
xlat
push
push
lods
or
sbb
inc
es
fild
mov
ss
mov
retf
sbb
test
sub
xor
in
mov
sub
sbb
sub
cmp
mov
dec
pop
outs
sub
sub
xchg
int3
push
jbe
push
jno
mov
aaa
imul
pop
repnz
mov
inc
sub
imul
into
aas
mov
sbb
mov
retf
push
lahf
dec
not
and
or
arpl
dec
hlt
xchg
push
std
jl
add
jne
sahf
movs
nop
loope
add
fs
rcr
xor
in
mov
mov
pop
test
xor
xor
scas
xchg
adc
push
inc
call
push
xchg
enter
jle
rep
jne
sub
and
sub
inc
mov
cmp
jmp
stos
sub
push
push
fwait
shr
mov
jle
push
add
adc
add
jl
sbb
jno
adc
adc
js
pop
inc
fsubr
movs
jg
mov
stos
inc
jmp
out
push
rep
fistp
jnp
jge
aam
pop
xchg
stos
movs
ror
arpl
in
add
xor
sbb
adc
ins
lock
cmp
stos
cmps
inc
movs
call
scas
and
loope
and
push
movsx
push
mov
inc
iret
sbb
ins
and
imul
push
iret
xor
sbb
dec
adc
xor
clc
mov
in
push
jns
dec
pop
jle
lock
xchg
lahf
fdivp
repz
rcl
outs
test
(bad)
pop
cli
stc
add
das
mov
neg
xchg
stos
dec
aam
loopne
arpl
in
push
ss
mov
cmc
call
cs
sbb
jbe
sbb
add
jns
sbb
or
push
push
mov
fldcw
or
cmp
xor
dec
cmp
dec
pop
push
dec
(bad)
cmp
inc
sbb
mov
xchg
cmp
mov
data16
repnz
or
daa
jle
jmp
pop
outs
add
pop
push
bound
pop
or
add
movs
cmp
or
mov
push
aam
push
inc
jp
mov
adc
mov
mov
lahf
pop
mov
aad
imul
fist
mov
rol
dec
retf
mov
and
push
xor
sbb
retf
push
adc
jg
retf
jmp
lods
push
push
std
repnz
push
call
fnstsw
aaa
add
stos
gs
aam
and
push
and
jb
dec
inc
lds
or
sub
xor
adc
out
inc
loopne
icebp
(bad)
add
xor
lock
test
xchg
push
sbb
xor
sbb
out
sub
pop
neg
std
(bad)
stc
mov
mov
rcr
mov
int3
ds
push
ret
aad
aad
mov
xchg
bound
sub
pop
mov
adc
sbb
repnz
or
mov
pop
inc
js
pusha
ret
add
or
jmp
sub
push
push
retf
movs
mov
mov
mov
ja
cmp
enter
pop
out
mov
je
pusha
iret
dec
mov
je
mov
mov
stc
hlt
rcl
sbb
xor
int
mov
test
adc
sbb
jp
xchg
inc
and
pusha
bound
sbb
push
(bad)
rcr
cmp
xchg
mov
mov
in
and
xchg
dec
adc
in
push
adc
xlat
add
mov
mov
jbe
push
xchg
xor
mov
gs
push
inc
adc
cdq
xchg
mov
call
adc
sbb
cmps
jecxz
dec
inc
shl
cmp
outs
xlat
mov
dec
inc
or
hlt
jge
cwde
out
sub
mov
out
ss
lahf
mov
and
inc
mov
lds
xchg
in
adc
add
btr
mov
cmp
(bad)
add
sub
out
mov
or
(bad)
loope
mov
pop
hlt
(bad)
jecxz
bound
push
or
or
xlat
mov
push
and
in
push
rol
mov
mov
push
out
jne
jae
pusha
adc
cmps
push
jnp
out
shl
pop
adc
in
gs
add
sub
cmp
inc
cdq
adc
mov
cmp
icebp
adc
jmp
test
or
xor
inc
push
adc
sbb
push
jmp
je
imul
ret
cmp
mov
sub
add
jne
xchg
ss
add
retf
sti
in
and
ins
hlt
xlat
push
ins
push
aas
lods
loopne
in
inc
or
xchg
dec
push
fisub
stc
mov
(bad)
retf
(bad)
fadd
xchg
jp
retf
lahf
or
xor
pop
xor
aam
push
test
sub
mov
ret
lahf
mov
pop
fwait
int
inc
sbb
push
(bad)
inc
dec
cmp
shl
aad
aam
adc
dec
xchg
shl
mov
iret
(bad)
mov
cmp
aam
icebp
pop
outs
inc
adc
add
xor
cmc
push
rcl
and
sub
cmp
sbb
bnd
rcr
xor
mov
rep
arpl
and
loope
mov
les
xchg
dec
out
xor
cmp
or
test
sub
daa
ficom
ins
in
loop
mov
inc
pop
adc
inc
mov
repnz
ret
aaa
ficomp
push
dec
inc
push
pop
cdq
pop
or
jle
das
sbb
xchg
movs
xchg
gs
or
loope
mov
add
lods
xlat
jmp
adc
xchg
jl
(bad)
push
stos
mul
rcr
pop
inc
and
add
mov
bnd
loop
inc
sub
dec
sub
jne
adc
data16
popf
pushf
icebp
pop
add
cmp
je
leave
pop
pushf
sub
jo
mov
cmp
aad
add
cmp
cmps
mov
sbb
or
sub
xor
pop
enter
sti
or
xchg
pop
les
or
(bad)
mov
xchg
aad
xchg
test
gs
(bad)
xchg
cmc
cwde
test
jns
(bad)
(bad)
retf
les
cmp
ds
ror
fcom
cld
mov
xor
add
mov
xchg
popa
ror
and
sbb
mov
jae
sti
fmul
mov
clc
push
das
jl
jns
pop
jae
xor
cmp
sub
test
cmps
sar
and
ret
xlat
sti
les
(bad)
fisttp
neg
inc
clc
jle
mov
xlat
xchg
add
sub
and
and
mov
int3
sub
adc
and
movs
imul
adc
lds
add
in
movs
inc
scas
movs
call
push
dec
add
in
mov
ror
mov
xchg
jae
rol
iret
out
sbb
fadd
addr16
jo
jo
xor
(bad)
loopne
cmc
shl
into
pop
xlat
mov
inc
dec
xor
rol
or
pause
enter
jmp
mov
xor
or
add
push
lahf
sub
jl
dec
inc
dec
cmp
mov
sar
or
int3
cmp
mov
adc
or
arpl
or
aaa
clc
loope
in
cli
loopne
dec
mov
or
pop
dec
outs
add
test
dec
test
or
or
test
xchg
sbb
ror
cmp
fs
std
and
stos
jmp
sbb
pop
jl
adc
popf
popa
rep
push
cmp
les
in
call
lods
jge
out
cld
push
(bad)
in
pusha
lock
mov
pop
das
test
sbb
iret
or
adc
xor
mov
pop
add
sti
lods
xchg
call
mov
imul
pop
mov
or
ss
jnp
mov
lds
ins
pop
mov
dec
ins
or
cmc
mov
xchg
adc
jb
dec
call
xor
mov
push
inc
or
cmp
jecxz
std
(bad)
ins
push
xor
into
mov
push
fstp
test
dec
imul
pop
popf
pop
or
aam
ror
fwait
clc
movs
int
mov
sbb
fidiv
in
fs
fstp
sbb
(bad)
adc
clc
mov
fwait
das
out
cld
push
mov
jnp
std
lods
cld
leave
call
xor
fldenv
in
mov
push
jno
pop
in
scas
push
arpl
push
jne
mov
mov
pop
call
add
cmps
push
sub
movs
sub
add
inc
sub
(bad)
jns
ss
fild
adc
jl
mov
call
outs
or
mov
stc
sbb
scas
dec
jnp
jnp
in
sbb
jl
dec
mov
sbb
in
fnstenv
leave
sub
jnp
jp
ret
jb
movs
ins
repnz
or
arpl
inc
mov
(bad)
repz
ror
es
push
dec
(bad)
sub
mov
pushf
cli
jecxz
outs
sti
jbe
mov
stc
jbe
pop
aam
mov
and
test
jge
popf
or
and
(bad)
or
xchg
call
xchg
test
clc
adc
fcmovne
adc
mov
push
and
mov
imul
jp
or
pop
int3
cli
lods
pop
sbb
ror
or
scas
pop
jmp
shl
and
aam
cmps
add
add
dec
mov
ds
xor
(bad)
icebp
iret
adc
movs
jmp
and
in
mov
push
in
scas
dec
pop
xchg
xchg
in
rol
dec
and
shl
ss
cmp
je
and
pop
pop
retf
aam
dec
mov
in
imul
push
js
ins
mov
xor
aas
repnz
out
dec
mov
mov
daa
cwde
scas
arpl
loope
inc
aad
sub
push
push
sbb
sub
sbb
or
lock
inc
jge
inc
cmp
xchg
cmp
pop
popa
or
sbb
mov
mov
pop
nop
mov
js
add
add
sub
icebp
xchg
rcl
cdq
in
ja
clc
pop
adc
(bad)
pop
stc
loope
cmp
repz
sahf
shl
sbb
or
pop
pop
or
push
xchg
in
loop
ss
in
sbb
shl
pop
add
pop
push
cmp
add
data16
addr16
sub
mov
dec
add
movs
cld
in
call
push
dec
mov
cmps
out
adc
mov
jp
xchg
js
repnz
scas
adc
in
cmp
xchg
stc
jmp
sti
add
xchg
or
xchg
or
pop
or
es
mov
shl
aad
sbb
clc
nop
xchg
adc
mov
(bad)
lods
iret
loope
stc
push
sub
shr
mov
mov
dec
std
adc
sub
imul
xchg
(bad)
mov
push
or
rcl
mov
scas
sub
fwait
in
and
sbb
scas
jo
inc
test
ficom
mov
out
loop
loop
jno
push
retf
mov
jecxz
lods
pop
rol
push
xor
sub
push
adc
neg
loope
jno
(bad)
pop
cli
leave
and
mov
jle
lock
hlt
mov
and
xchg
ficom
movntps
leave
fs
lock
sub
inc
or
mov
cmp
and
aad
hlt
mov
gs
pop
cdq
popf
gs
mov
cmp
sbb
scas
inc
xchg
imul
jne
add
ret
into
push
aaa
shr
mov
and
jne
push
and
xchg
inc
inc
pop
adc
pop
mov
int3
lods
xchg
dec
arpl
adc
sub
and
retf
or
xchg
cmp
sub
jbe
xor
jge
inc
(bad)
xchg
push
nop
adc
xchg
ss
mov
cmp
(bad)
inc
xor
xchg
xchg
jecxz
jge
dec
jmp
jbe
leave
adc
out
mov
mov
push
in
cmp
pop
out
cli
(bad)
(bad)
(bad)
ja
int
pop
cmp
js
iret
repz
cli
jbe
add
movs
xchg
or
shr
pop
cmp
lods
push
mov
jns
jmp
lds
sahf
push
ins
xchg
mov
rcr
mov
pushf
std
outs
dec
jmp
mov
mov
lods
popf
ss
pop
push
add
mov
mov
or
repz
jo
mov
xchg
dec
pushf
pop
add
push
xchg
rcl
dec
daa
aaa
ret
fidivr
mov
inc
lods
mov
nop
fs
mov
dec
xor
loop
shl
pop
pusha
or
xor
cmp
lahf
in
mov
inc
stos
cwde
mov
fstp
daa
mov
jns
push
mov
pop
or
push
mov
clc
xchg
std
jl
daa
lods
jle
sub
pop
push
addr16
ins
or
mov
add
cwde
sub
dec
mov
and
sbb
jecxz
ja
pop
pop
aam
cwde
adc
hlt
dec
ins
add
sub
cmp
sbb
ds
test
js
call
inc
jbe
dec
mov
bound
push
les
and
fwait
mov
sub
add
icebp
test
sub
pop
outs
fild
jmp
in
mov
hlt
ficom
dec
pop
(bad)
mov
push
gs
stos
mov
retf
rol
or
lds
stos
adc
jmp
inc
fstp
rcr
xchg
stc
pop
or
es
sbb
add
mov
and
push
mov
mov
pop
xchg
cmp
in
mov
lahf
sbb
dec
add
and
or
mov
adc
sub
fiadd
hlt
sbb
add
sbb
(bad)
and
pop
dec
clc
cmps
adc
js
jecxz
fstp
mov
jle
(bad)
dec
js
int
pop
in
mov
scas
jg
inc
daa
dec
test
sub
bound
pop
leave
and
js
xchg
(bad)
in
fdivr
sub
fwait
xchg
rol
dec
in
pop
imul
mov
ja
lods
adc
and
icebp
leave
lds
(bad)
cmps
xchg
and
fiadd
and
test
xchg
pushf
adc
imul
loopne
movs
rcr
(bad)
mov
jle
mov
jmp
push
stos
cdq
xor
cmps
lock
jo
jns
sar
scas
mov
push
sub
and
and
fnsave
(bad)
mov
daa
inc
lock
or
scas
push
scas
adc
xlat
adc
xchg
es
push
bound
je
push
call
fidiv
fs
out
and
add
xchg
or
jecxz
mov
or
pop
fisttp
pop
jp
or
outs
inc
popf
adc
sub
adc
js
(bad)
xchg
int3
dec
inc
sbb
test
imul
cdq
loop
int3
sub
fsub
cmps
inc
push
adc
ins
push
pop
scas
mov
dec
add
call
test
shl
cmp
jg
xor
stos
ins
cmp
push
and
push
fsubr
jne
test
pop
pop
jo
test
push
into
push
inc
icebp
ss
imul
mov
or
adc
sti
leave
or
xor
jmp
push
jge
fwait
and
adc
cmps
push
sub
sahf
cmp
pop
pop
push
push
jb
xchg
xchg
addr16
xor
lahf
repz
cmps
xor
scas
xchg
sar
sbb
jo
cmp
jb
mov
mov
inc
(bad)
cmps
test
dec
adc
pop
and
pop
mov
cli
adc
or
fwait
sbb
or
sub
lds
cmp
mov
mov
ja
test
cmp
mov
test
(bad)
dec
dec
gs
loopne
or
imul
pop
loopne
and
call
stos
cmp
(bad)
stos
push
inc
add
call
imul
jmp
(bad)
movs
mov
adc
jbe
hlt
lods
aaa
imul
popf
mov
cmp
pop
add
sbb
mov
std
dec
mov
out
mov
and
inc
not
pop
sub
jmp
js
cmp
shl
leave
daa
bound
pop
mov
and
jno
cmp
push
adc
adc
jns
sub
xchg
lods
dec
adc
jns
cmps
outs
div
ja
and
lea
ja
adc
jecxz
stc
mov
int
ss
jle
aam
xor
leave
lods
xchg
jb
les
push
ret
cli
inc
aad
cdq
push
test
sub
ds
xchg
nop
sub
clc
jmp
xor
add
push
xor
in
out
sbb
sbb
sti
push
(bad)
jmp
ficomp
in
mov
xchg
std
and
jno
push
mov
or
mov
and
mov
shl
int3
pop
scas
jl
or
popf
(bad)
cs
test
add
lock
out
sbb
fsubp
cmps
mov
push
xor
adc
shr
pop
out
repz
retf
push
stos
cld
jmp
ror
movs
out
aam
add
push
inc
xchg
sub
stos
push
inc
je
sub
push
lds
push
je
(bad)
push
inc
mov
lods
popa
arpl
std
enter
mov
and
dec
out
fcom
dec
cmp
xor
inc
sbb
retf
add
add
xchg
adc
jno
ffree
xchg
pop
pop
mov
sbb
mov
frstor
push
int
fst
rcl
lahf
inc
leave
push
dec
hlt
pop
in
sbb
xor
sbb
xor
add
mov
js
ror
push
retf
enter
xchg
mov
into
test
test
ds
mov
mov
shl
mov
jp
sub
and
mov
sbb
dec
out
pop
sbb
test
sbb
sub
mov
je
jg
call
inc
xchg
cld
fimul
rol
xchg
repnz
sbb
mov
dec
inc
enter
inc
pop
int3
call
sub
and
mov
hlt
add
pusha
cmc
pop
jae
mov
xchg
pop
fild
mov
mov
addps
loop
ja
sbb
movs
jecxz
cmp
ds
xchg
out
rol
shr
cmc
fwait
jmp
sbb
xor
(bad)
movs
rcl
or
lock
xor
ffree
aas
imul
lahf
in
enter
stos
movs
in
mov
lods
daa
imul
stos
(bad)
aam
inc
push
popf
jbe
cmps
ret
call
out
(bad)
jl
jle
fnstcw
push
cmp
inc
aam
mov
mov
push
outs
mov
add
push
cmps
call
xor
push
mov
pop
fwait
(bad)
jbe
call
and
inc
sub
inc
dec
sub
adc
inc
gs
dec
cmp
sub
adc
jmp
pop
dec
xor
dec
lds
arpl
movs
repz
adc
nop
fcom
test
jle
clc
(bad)
xlat
sbb
sbb
sbb
inc
bnd
adc
mov
push
lds
pop
xchg
enter
mov
pop
adc
cdq
pushf
xor
out
ror
cmp
sub
xor
in
mov
fstp
ss
lods
icebp
push
sbb
mov
in
inc
jp
sti
je
push
jp
dec
enter
in
pop
daa
dec
daa
jge
push
mov
mov
lods
sbb
xchg
pop
xchg
adc
dec
mov
sbb
jo
sbb
sub
dec
cmc
clc
adc
mov
mov
jmp
sbb
ins
dec
mov
int
and
retf
fwait
jmp
mov
adc
mov
mov
hlt
inc
and
xchg
out
mov
(bad)
inc
mov
pusha
push
scas
adc
push
mov
mov
test
adc
arpl
pop
lahf
sbb
cmp
cmp
sub
and
pop
pop
sbb
push
pop
in
add
mov
cmps
xchg
in
cmp
cmp
fdiv
inc
outs
std
arpl
cmp
leave
mov
fcomp
xchg
push
(bad)
xchg
loop
sub
pop
sub
imul
ror
ret
or
and
add
inc
and
xchg
in
add
push
icebp
ja
push
inc
es
jmp
sbb
repz
popa
cdq
add
enter
push
ret
ins
(bad)
punpckhwd
(bad)
addr16
sbb
ret
mov
test
push
enter
sub
ss
inc
lock
sbb
leave
rcl
popa
fsub
sar
cmp
sbb
leave
aad
push
mov
inc
sbb
addr16
ins
arpl
pop
nop
xchg
cmp
cmp
inc
mov
bound
outs
push
gs
fmul
push
stos
mov
cwde
mov
(bad)
(bad)
push
scas
sub
ins
add
rcl
push
cli
les
pop
shl
pop
ret
retf
xchg
xchg
mov
dec
ficomp
pop
int3
and
imul
adc
xchg
in
cmp
in
sbb
dec
adc
xlat
pushf
inc
leave
inc
cs
xor
fs
popf
hlt
jle
mov
cmp
aas
or
es
pop
and
push
mov
push
adc
pop
movs
out
aaa
mov
sub
test
retf
mov
mov
and
inc
int3
gs
xor
mov
and
add
bt
xor
call
add
daa
and
mov
rcr
xor
or
mov
sub
xor
aad
adc
loope
adc
push
inc
mov
or
rcr
xlat
ins
ror
(bad)
dec
sub
cmps
cmc
loopne
jae
iret
jge
dec
(bad)
stc
lods
imul
ret
(bad)
adc
mov
add
push
rol
fnstenv
push
and
ss
xchg
mov
daa
inc
rcl
rcl
sbb
add
inc
rol
into
jge
sub
xor
dec
mov
sub
in
cmp
xchg
xchg
cmps
push
push
jb
popa
loop
in
adc
pop
in
adc
loopne
or
inc
movs
add
add
mov
mov
ret
in
cdq
(bad)
fisubr
and
and
fwait
std
cmps
cwde
int
cmp
mov
inc
mov
or
add
sar
arpl
dec
(bad)
mul
and
adc
pushf
das
mov
mov
jl
or
sub
or
xor
cli
sbb
std
add
xor
push
in
test
and
enter
ror
stos
push
jg
push
(bad)
dec
xlat
jp
loope
push
rcr
movs
rol
test
sub
inc
xchg
or
inc
addr16
popa
pop
ror
fcmove
imul
sahf
pusha
xchg
popf
mov
(bad)
push
gs
ins
inc
mov
cmp
adc
loope
dec
ret
xchg
(bad)
pusha
fistp
push
sbb
test
movs
aad
loop
xor
adc
push
xchg
mov
add
jbe
bnd
dec
out
call
mov
bnd
push
std
push
push
inc
cmps
shr
push
(bad)
out
loop
je
xchg
test
clc
cs
cmps
push
inc
or
data16
cwde
add
inc
xor
xchg
xlat
pop
in
lods
cdq
hlt
cli
icebp
jb
out
cs
xor
addr16
cli
hlt
data16
xor
enter
xor
cmp
adc
cmp
retf
das
and
mov
retf
jle
lock
push
hlt
test
mov
mov
pop
push
cmps
fisttp
pop
inc
or
cmc
and
xchg
jne
movs
ret
minps
fwait
dec
jmp
out
movs
jge
xor
fcomp
mov
inc
fimul
fistp
aam
jle
ja
vpaddb
fsubr
sbb
push
es
dec
std
push
aam
bound
sbb
leave
inc
xor
jmp
cmc
mov
pop
dec
and
dec
loopne
stos
(bad)
stc
in
jo
jo
push
ins
or
sbb
mov
aad
mov
xchg
sub
popf
retf
aad
retf
or
jne
xchg
xchg
retf
dec
jge
dec
(bad)
(bad)
fdiv
(bad)
rcl
push
ds
(bad)
retf
gs
xchg
xchg
xchg
cmp
xchg
push
push
retf
lea
das
pop
mov
and
mov
mov
pop
dec
cmovne
xlat
in
push
cmp
dec
cli
cmp
or
gs
sub
jl
dec
xchg
or
pop
or
xor
idiv
inc
das
inc
cdq
xlat
add
cli
out
mov
retf
sub
mov
scas
je
repnz
push
test
mov
loope
sahf
ins
test
dec
jne
cmp
dec
mov
cmp
push
inc
test
sbb
xchg
cmp
and
pop
in
mov
and
pusha
int
jmp
cmp
sbb
int
jecxz
ja
jnp
jl
xor
sub
mov
sub
pop
push
jle
test
inc
lahf
js
and
jns
adc
sbb
cld
mov
xchg
push
push
xlat
ds
mov
call
gs
out
push
(bad)
sub
es
mov
push
pop
adc
lock
add
imul
mov
and
pop
out
pushf
pop
xchg
sbb
push
dec
mov
mov
and
iret
mov
cdq
lods
(bad)
xchg
fs
popf
adc
(bad)
(bad)
cmp
push
nop
cld
jne
std
cs
jno
aas
jae
mov
jmp
mov
xchg
enter
lahf
inc
out
sar
icebp
cmps
or
mov
and
arpl
fadd
add
bound
and
fimul
test
push
xchg
in
ins
js
and
jmp
inc
out
scas
jle
ins
outs
push
shl
push
enter
les
pop
adc
add
xlat
test
push
push
or
or
inc
arpl
cmp
sbb
sbb
bound
xchg
mov
xchg
sub
mov
add
mov
int3
cmp
cli
out
idiv
out
iret
out
scas
cmps
cmc
and
aad
pop
mov
mov
mov
push
out
dec
cmp
aaa
cmps
das
jno
pop
mov
add
loope
jno
jg
mov
push
out
mov
or
out
jno
mov
div
test
push
sub
test
(bad)
sbb
ins
pop
pop
mov
fs
fnstsw
adc
clc
or
in
lods
mov
pop
push
and
fistp
call
mov
nop
mov
and
sub
hlt
dec
push
push
loopne
xor
aad
cmp
scas
mov
adc
mov
pop
mov
outs
imul
ins
xor
and
test
imul
sbb
or
sub
ins
cld
or
cmp
push
adc
lds
int
and
jmp
in
arpl
enter
jbe
push
test
xor
cmp
jecxz
pop
xor
and
add
test
jo
pop
and
fwait
mov
stos
out
mov
shl
lods
fucomip
push
jmp
fldenv
mov
test
rcr
xor
add
in
mul
sbb
xchg
mov
shl
iret
call
push
mov
icebp
push
lods
out
outs
hlt
or
aad
rcl
jl
shl
ficom
jns
xchg
movs
xchg
and
(bad)
cmp
or
cmp
pop
lods
neg
enter
mov
sub
or
sbb
dec
or
outs
retf
pop
test
adc
sbb
sbb
cwde
adc
loop
jmp
retf
xchg
retf
and
jle
or
mov
aam
jnp
add
addr16
test
mov
xor
(bad)
pop
cli
clc
push
dec
add
loope
ror
mov
mov
add
xchg
popf
push
add
mov
pop
rol
sub
sub
shl
mov
xchg
ss
push
arpl
jns
jge
xchg
cmc
xchg
cmp
push
mov
sahf
dec
xchg
dec
adc
ins
mov
cmc
push
add
mov
fidivr
xchg
push
xor
push
mov
arpl
retf
(bad)
cs
cdq
pop
inc
jae
jb
ja
mov
in
adc
ss
and
aaa
sub
jae
sub
jnp
cmps
cdq
and
scas
jo
jae
add
cdq
pop
cld
repz
movs
sti
xchg
daa
jb
shl
gs
jnp
mov
and
addr16
xchg
aam
es
mov
test
dec
lock
push
hlt
adc
in
fidivr
ffreep
out
ja
lock
cld
dec
sbb
pop
sahf
stc
nop
iret
cmp
out
and
push
sub
cmps
inc
sbb
or
retf
adc
add
movs
push
lock
add
nop
and
xor
inc
jle
gs
sub
mov
xchg
mov
(bad)
cmp
jbe
sahf
pop
push
repz
(bad)
and
cwde
call
aaa
mov
out
jg
in
cmps
sar
test
scas
(bad)
not
cdq
neg
jle
fwait
pop
add
ins
(bad)
neg
fcom
push
push
push
arpl
ds
adc
outs
movs
pop
mov
mov
ins
aad
push
retf
jecxz
outs
shl
xchg
in
mov
mov
add
dec
jb
hlt
out
cmp
enter
aad
fsubr
fst
ss
int3
cld
pop
test
test
retf
pop
mov
dec
dec
mov
pop
test
dec
xor
cmp
arpl
or
fistp
rcl
std
push
jg
ins
cmp
es
je
mov
mov
xchg
push
xchg
push
imul
adc
in
sub
retf
pop
jnp
fyl2x
popa
xchg
nop
and
dec
dec
lea
cdq
sbb
dec
das
(bad)
dec
jl
loop
test
rcl
iret
das
gs
shl
xchg
mov
or
sbb
lods
inc
xchg
add
or
cmp
std
imul
out
xchg
xchg
stos
pop
(bad)
inc
mov
lahf
aas
push
mov
sub
in
xchg
push
xchg
pop
cmps
pop
sbb
cmc
scas
pop
or
gs
pop
pop
lock
jae
push
es
into
pop
xor
mov
retf
jns
xchg
sub
sub
add
ja
add
mov
or
push
adc
loop
dec
test
lea
jbe
xlat
sbb
movs
addr16
add
(bad)
adc
ficomp
inc
movs
xor
jbe
cmp
add
inc
repz
data16
(bad)
inc
jp
adc
repz
imul
pop
xchg
inc
fdiv
aas
pop
xchg
lods
mov
mov
or
and
jl
gs
add
lahf
adc
adc
or
xchg
sub
sub
mov
out
add
xchg
call
mov
test
push
inc
add
sbb
outs
and
punpckhbw
mov
cmps
cmp
mov
loope
shl
push
mov
clc
mov
retf
int3
push
jl
(bad)
mov
push
inc
xor
mov
ret
mov
fld
adc
pop
pop
ficomp
jb
rcr
xor
outs
sbb
dec
mov
int3
cmc
cmp
and
je
cmps
push
pop
mov
inc
pushf
or
pop
in
ss
imul
out
mov
add
xchg
iret
cmp
popa
scas
loope
adc
cli
mov
and
pop
xchg
lods
mov
jp
cmc
add
test
ret
(bad)
nop
mov
js
in
mov
xchg
in
mov
test
jecxz
scas
push
or
sub
icebp
jnp
and
dec
fidivr
rol
jmp
jmp
inc
adc
loop
and
sbb
mov
fcom
imul
xor
test
inc
mov
retf
aaa
jecxz
push
cmps
mov
stc
pop
push
test
xchg
movs
(bad)
push
sub
rcr
jge
pushf
or
ins
push
fiadd
and
jno
jle
mov
les
scas
cmp
lea
adc
aas
lea
xor
cmp
iret
jl
fwait
scas
stc
dec
inc
std
sar
adc
stc
lea
fwait
cmp
cld
addr16
inc
push
jae
push
rol
adc
mov
stc
dec
dec
add
sub
push
mov
sbb
sub
push
push
mov
mov
pop
mov
cs
fst
sar
jp
jo
mov
retf
clc
push
add
add
add
add
mov
rol
popa
out
les
mov
aam
popf
clc
(bad)
out
aas
stos
daa
jg
retf
call
sbb
pop
in
gs
mov
std
xlat
mov
fwait
sar
xchg
sar
dec
pusha
mov
aaa
xor
pop
push
lds
xchg
adc
adc
and
push
cmp
dec
pop
pop
imul
cmp
out
cli
xchg
push
cmps
daa
add
inc
stos
outs
inc
adc
sbb
sahf
clc
mov
pop
xlat
bndldx
or
pusha
loope
or
test
and
mov
nop
inc
sbb
int3
mov
fld
les
lea
aaa
hlt
sub
xchg
dec
and
js
iret
adc
push
aam
hlt
xchg
jl
in
ds
mov
les
out
mov
dec
stos
scas
lods
movs
sbb
and
scas
xor
in
dec
push
in
call
ss
gs
xor
mov
xor
js
xchg
mov
mov
pusha
mov
sbb
repnz
dec
jmp
scas
pminsw
data16
jbe
repnz
mov
push
push
sbb
loop
retf
sbb
retf
mov
pop
lods
(bad)
cmc
jbe
ins
stc
jno
imul
xlat
mov
pusha
pop
call
mov
cmp
inc
movs
sub
push
stc
xor
jns
mov
shl
mov
int
in
mov
sbb
arpl
and
fldcw
ret
push
mov
cmps
cmp
push
or
fadd
cmps
or
cmp
popf
je
pop
outs
fidiv
xlat
repnz
ss
sub
loope
cmp
fld
pop
cmps
fld
jns
neg
sub
sbb
mov
mov
sbb
mov
mov
shl
in
push
mov
jle
out
mov
int
dec
sahf
aaa
lds
or
inc
pop
dec
stos
retf
cmp
pop
push
or
es
sbb
pop
xor
movs
xchg
aam
push
in
ret
cmp
xlat
cmp
popa
jp
pop
ja
cmp
cmp
jmp
int3
fs
cs
inc
leave
lock
mov
dec
sbb
jecxz
jo
retf
rol
imul
int3
cmp
jle
mov
xor
push
jl
les
jnp
cmc
sub
xchg
scas
push
mov
sar
imul
daa
pushf
je
pop
sbb
cdq
movs
int3
adc
inc
enter
cmp
in
int3
movzx
jmp
dec
hlt
mov
add
mov
int
cdq
add
xchg
or
mov
push
(bad)
movs
sub
and
leave
pop
add
hlt
pop
mov
jl
jg
and
cld
ss
ja
pop
adc
sbb
push
loope
sub
dec
aas
inc
imul
mov
xor
add
xchg
nop
xchg
add
test
(bad)
sub
adc
pop
mov
xchg
jg
in
mov
inc
sbb
mov
mov
in
inc
push
mov
sbb
sub
xchg
rcl
imul
sbb
push
lock
adc
lahf
cmp
(bad)
mov
jne
iret
mov
ret
sbb
aas
dec
sbb
(bad)
test
repz
mov
pop
mov
ror
sti
outs
neg
mov
dec
repz
xor
dec
rol
xlat
inc
test
das
imul
xchg
push
xchg
in
(bad)
xchg
popa
add
add
or
sub
dec
loopne
mov
xchg
xchg
add
xchg
hlt
adc
pop
cmp
mov
pop
and
add
int3
adc
pop
cmp
in
adc
xor
mov
push
out
cld
mov
std
inc
push
cmp
clc
(bad)
icebp
test
jmp
jle
fwait
jg
mov
cmps
xor
vmwrite
pop
xlat
cld
ret
inc
repz
pop
pop
retf
mov
xchg
test
mov
push
cmovp
sub
cmp
jmp
ror
test
fld
hlt
jmp
jg
jo
add
jmp
test
dec
call
pop
jge
xchg
mov
mov
lds
sbb
xor
aad
lea
mov
das
data16
retf
mov
pop
scas
push
jmp
push
pop
stos
dec
push
push
jnp
xchg
mov
pop
cmp
out
ss
fcmovu
mov
inc
add
adc
inc
cmp
mov
push
call
xchg
dec
inc
js
mov
sbb
gs
sub
xor
sbb
dec
enter
sub
pop
sub
sub
aas
xchg
(bad)
jl
ficom
shl
mov
add
and
push
mov
jbe
xchg
or
xchg
add
and
jecxz
retf
mov
call
cs
stos
sub
mov
out
cmp
cmp
lock
aas
inc
adc
pop
test
sub
movs
mov
es
xchg
aas
add
mov
(bad)
cmp
mov
add
push
mov
(bad)
sub
adc
xchg
lea
js
xchg
ins
sub
not
inc
fnstsw
repz
fild
dec
push
fldcw
ror
sbb
push
aaa
push
data16
push
pop
and
adc
fstp
enter
ss
popf
ret
push
sti
test
pop
xor
jmp
push
movs
mov
add
push
call
pop
add
mov
xor
dec
mov
pop
popf
mov
fsubrp
lods
(bad)
mov
mov
mov
inc
mov
pop
dec
mov
lahf
hlt
cmp
mov
push
gs
cmp
cmp
addr16
cmp
mov
dec
popa
pop
mov
aas
xchg
repnz
retf
jno
sbb
push
and
sbb
mov
cmc
cmp
mov
adc
imul
cs
pop
shr
xor
aaa
cmps
cdq
adc
or
pop
mov
add
aam
push
jnp
(bad)
adc
add
daa
mov
add
mov
adc
sub
test
mov
pusha
pop
cmp
data16
in
add
ret
xchg
cmps
push
push
xchg
sbb
sub
jo
mov
and
inc
xchg
push
loopne
clc
dec
ror
cld
movs
sahf
adc
into
add
pop
idiv
es
fwait
mov
mov
push
sub
or
int3
and
dec
push
push
ins
retf
lea
dec
pusha
push
cmc
inc
sar
push
xor
push
inc
js
sub
mov
scas
jp
stos
fisttp
sub
pop
popa
dec
or
pusha
rol
or
repnz
cmp
mov
push
mov
test
mov
sbb
push
xor
push
xchg
shl
clc
add
outs
fmul
inc
mov
xchg
test
sbb
pop
mov
lea
xchg
cld
ds
or
clc
das
mov
pop
in
out
shl
iret
adc
div
idiv
xchg
xchg
in
in
mov
ins
dec
mov
adc
retf
ins
or
(bad)
sub
gs
adc
mov
pop
sub
and
aam
push
mov
mov
mov
xchg
xchg
pop
adc
add
aad
mov
or
add
not
call
test
jno
ja
inc
cmps
in
mov
(bad)
mov
addr16
in
addr16
aas
jo
ja
in
pop
aas
ror
xor
dec
mov
fild
std
(bad)
(bad)
cli
jg
int3
scas
(bad)
stc
sub
add
je
repnz
add
mov
push
es
dec
icebp
test
inc
xor
jmp
mov
inc
mov
xchg
hlt
(bad)
xchg
ss
and
mov
and
mov
sbb
inc
jnp
and
xor
cld
mov
xchg
push
mov
or
adc
sbb
jmp
dec
jnp
pop
cli
dec
xor
outs
ja
popf
cmps
pop
packssdw
pushf
xchg
mov
pusha
repnz
repnz
jg
call
adc
test
and
leave
data16
out
cmp
push
or
ret
leave
movs
xchg
add
jmp
outs
aaa
imul
sub
add
les
es
dec
jmp
or
test
pop
dec
sub
movs
cmps
sbb
inc
sbb
out
xor
xor
mov
xchg
jb
loope
push
or
and
das
mov
xchg
movs
mov
je
push
call
enter
out
sub
push
scas
gs
pop
mov
sub
or
mov
inc
loope
adc
shl
pop
test
mov
inc
cmp
repz
pop
shl
xchg
push
inc
test
or
jp
sbb
sbb
scas
and
lea
sub
ins
mov
push
lahf
inc
sub
sbb
adc
push
test
cmp
push
dec
or
dec
mov
aam
clc
out
inc
pop
mov
shl
sub
push
scas
(bad)
cmc
jmp
aad
jecxz
xchg
xor
jmp
sub
mov
or
sub
and
popa
je
xor
mov
dec
mov
stos
ins
xor
ret
imul
mov
or
leave
push
scas
pop
stos
cmp
pop
and
inc
push
pop
(bad)
out
pop
rol
xor
imul
sti
rol
hlt
mov
pop
mov
mov
sub
cs
sbb
ins
dec
imul
sub
retf
push
pop
push
ja
loop
jmp
(bad)
dec
imul
mov
cmp
lahf
push
xor
xor
les
jae
pop
sahf
xchg
enter
xlat
dec
into
jecxz
scas
je
lods
xchg
push
arpl
shl
mov
(bad)
js
pop
and
sub
pop
pop
and
adc
gs
jnp
mov
ins
(bad)
repz
sbb
adc
sub
pushf
push
mov
sub
or
fstp
ret
and
test
shr
sub
mov
sub
fist
push
clc
inc
aam
nop
add
(bad)
adc
cmps
pop
inc
imul
test
ret
jmp
mov
sahf
push
ja
inc
test
dec
adc
sahf
dec
int
loop
stos
mov
retf
gs
(bad)
sbb
push
imul
js
mov
lods
clc
mov
mov
mov
mov
arpl
stos
ret
jns
sbb
div
les
dec
jb
inc
sub
shl
xor
enterw
mov
push
aas
ja
js
outs
jl
daa
mov
arpl
sti
push
(bad)
or
clc
popf
out
lock
(bad)
xchg
xor
imul
(bad)
es
jae
std
(bad)
or
imul
in
arpl
fmul
loop
test
mov
add
adc
test
xchg
push
add
into
dec
je
pusha
in
sbb
jmp
pop
dec
pxor
sub
push
mov
dec
mov
mov
xchg
lds
mov
call
xor
rol
js
aam
mov
(bad)
cmp
repz
mov
(bad)
fcomp
add
sti
mov
aas
paddusw
jg
ror
popf
jg
int3
jg
int3
jmp
out
ss
pop
aad
mov
clc
ins
xchg
jl
mov
sub
add
add
retf
push
inc
cmp
mov
pushf
jmp
mov
and
or
or
xchg
lock
and
cld
mov
adc
dec
aam
jle
bound
lods
and
sub
sub
pop
sub
jne
ret
or
popf
mov
adc
jle
inc
adc
test
fild
jnp
pusha
mov
and
xchg
into
jg
sub
fidiv
movs
repnz
mov
retf
jp
xor
test
sub
inc
mov
sub
xor
shr
arpl
test
push
push
leave
ret
(bad)
push
adc
push
jns
jbe
aad
aam
and
test
push
xor
mov
push
aam
inc
inc
jg
adc
cwde
push
arpl
push
clc
mov
pop
xlat
inc
and
push
and
into
mov
test
mov
mov
ret
push
int
enter
cmp
mov
bound
and
or
cmp
mov
and
imul
(bad)
(bad)
into
jp
cmp
loope
xchg
nop
or
dec
sub
test
inc
popa
push
addr16
sub
and
pop
std
enter
fnstenv
xchg
fwait
ins
js
fucomp
test
out
xchg
xchg
lods
cmp
loopne
push
sub
arpl
cwde
imul
stos
imul
mov
push
movs
and
push
adc
mov
mov
sub
add
int3
push
test
xor
cmp
retf
mov
add
scas
inc
xor
xor
or
arpl
adc
nop
or
mov
adc
xchg
fxch
add
xor
jbe
leave
and
jmp
dec
mov
sar
sbb
and
ret
or
push
mov
push
jg
call
push
jae
scas
mov
inc
adc
inc
cmps
shl
xchg
outs
and
sub
or
xchg
gs
loop
sub
movs
mov
pop
cmps
imul
xor
or
out
stos
mov
xlat
jle
sub
ja
mov
xor
in
in
push
retf
in
inc
sbb
jne
dec
push
retf
mov
xchg
xchg
sbb
call
inc
push
jo
mov
pop
inc
stos
jg
in
xor
and
and
adc
dec
pop
add
loopne
add
push
test
mov
jae
sbb
fstp
movs
aam
(bad)
inc
push
retf
jb
lods
call
mov
push
sub
mov
pop
popa
push
xchg
in
jnp
ja
mov
retf
mov
jle
(bad)
out
inc
cmc
jg
clc
pop
inc
(bad)
aaa
xchg
push
std
jno
std
mov
std
cdq
out
xor
cmp
jnp
(bad)
std
fild
pop
mov
add
pop
push
imul
and
sbb
push
add
mov
sbb
mov
and
or
cmp
dec
and
popa
xor
les
xchg
mov
cmp
fwait
inc
xor
mov
lahf
adc
add
in
mov
mov
sub
cmp
aaa
pop
daa
mov
jbe
push
inc
in
shl
cmp
pop
arpl
or
shl
adc
jge
(bad)
jg
and
jo
or
xor
inc
(bad)
pop
cmp
(bad)
jg
inc
jmp
jl
movs
mov
inc
hlt
in
out
movs
aas
cmp
or
es
inc
sbb
sub
pop
cli
xchg
dec
adc
adc
cmp
mov
xchg
das
mov
hlt
xor
test
xor
xchg
mov
mov
scas
cs
jne
sub
in
cmp
out
ins
sbb
call
cmps
cmps
mov
fmul
pop
(bad)
lock
pop
(bad)
outs
fwait
jle
icebp
push
in
mov
rol
xlat
test
pop
mov
popf
and
adc
fmul
and
mov
sub
or
or
and
pop
dec
stos
popf
push
rol
xchg
xchg
sub
and
pusha
add
mov
sub
sub
add
aas
sbb
dec
ficomp
(bad)
mov
jmp
mov
mov
xchg
scas
jge
in
mov
jg
mov
aad
dec
push
lods
or
inc
out
and
push
(bad)
or
and
jne
inc
mov
cmc
add
pop
inc
iret
scas
mov
leave
pop
mov
dec
jae
jnp
push
aaa
mov
pop
iret
mov
xor
add
xor
cs
mov
push
dec
imul
xor
xor
mov
std
jmp
out
mov
sbb
xchg
repz
sahf
jns
out
out
cmp
popf
stos
mov
call
jbe
fwait
ins
xchg
cmp
push
and
rcr
ficomp
jg
add
(bad)
pusha
ret
ss
ret
nop
ins
inc
pop
mov
ret
push
or
add
in
fcomp
cdq
xchg
out
aad
push
sbb
xchg
xchg
adc
jbe
ja
iret
sti
lods
addr16
xor
mov
test
jb
xor
xor
fcmovbe
mov
jmp
mov
lods
gs
jecxz
lds
je
movs
mov
add
pop
(bad)
dec
adc
(bad)
enter
repnz
xsave
pop
xor
stos
in
adc
push
xor
test
iret
push
add
mov
fsubr
dec
test
cs
adc
or
mov
add
or
jmp
sub
inc
mov
dec
push
js
cdq
push
dec
adc
or
or
dec
ss
clc
cmp
retf
mov
xchg
aam
dec
aam
enter
sete
adc
pushf
sub
dec
and
movs
sbb
into
jg
sub
or
repnz
push
mov
out
xor
push
dec
lahf
xchg
std
xchg
pusha
mov
sub
pop
push
cmps
enter
mov
xchg
outs
ins
jbe
jbe
xor
mov
ins
aad
push
push
out
icebp
ja
and
gs
dec
push
pop
mov
dec
xor
hlt
mov
dec
data16
mov
repnz
aad
jp
dec
add
sub
movs
ja
pop
imul
add
scas
sbb
adc
or
stc
add
into
jge
jl
xchg
xchg
jmp
test
movs
retf
sbb
jge
push
xchg
xchg
into
and
sub
stos
pushf
hlt
stc
mov
sahf
scas
stos
arpl
aad
les
(bad)
enter
addr16
jl
push
test
mov
mov
mov
add
cmp
push
mov
ret
sub
or
fld
xor
inc
out
xchg
and
popf
retf
fs
aas
enter
cwde
scas
aam
or
ret
ret
cli
xor
les
ficom
push
xchg
nop
and
xor
clc
lods
loope
mov
jl
xchg
push
imul
rcl
xchg
xor
add
dec
mov
sahf
or
loopne
inc
jge
cs
stc
push
mov
aad
pop
and
pop
je
xchg
jle
jae
dec
mov
mov
imul
fmul
jmp
jmp
sbb
lock
sub
pop
mov
jnp
pusha
inc
(bad)
jmp
or
xor
xchg
rol
push
rcr
bound
inc
add
imul
js
and
adc
mov
xchg
in
mov
mov
in
cmc
push
dec
fldenv
pop
xchg
fsub
or
jae
ficom
xchg
ret
inc
inc
addps
pop
ins
or
inc
push
nop
xchg
pop
pop
imul
int
(bad)
xchg
enter
test
dec
sub
xchg
mov
out
inc
cs
gs
test
pop
xchg
mov
shl
stos
dec
pop
cmps
fisttp
retf
add
hlt
(bad)
cld
mov
call
scas
cmc
jbe
cmps
xchg
push
or
mov
or
sub
or
sar
(bad)
push
lock
mov
mov
dec
and
fwait
retf
sub
push
dec
lds
and
jle
sub
add
xor
fmul
gs
adc
xchg
jmp
movs
repz
or
sub
rol
shr
xchg
rol
loop
dec
mov
sub
inc
ds
push
pusha
lock
test
xor
retf
popa
push
or
es
or
fwait
dec
xchg
dec
mov
inc
fidivr
retf
sub
loope
xchg
fdiv
mov
xchg
mov
jns
ins
fisubr
push
xchg
or
scas
out
ret
je
aad
hlt
xchg
movs
je
jns
addr16
adc
dec
xchg
xchg
ss
adc
addr16
or
stos
xor
adc
out
div
cmps
sbb
rol
dec
mov
mov
into
imul
sub
adc
inc
mov
xor
fdivr
and
push
icebp
or
cmp
pop
xor
movs
jb
push
lds
xor
icebp
mov
dec
stos
push
lods
je
sub
movs
enter
cmps
inc
sbb
sub
in
(bad)
pop
adc
sti
mov
jae
frstor
add
sub
mov
xchg
inc
jbe
sbb
mov
mov
in
sub
inc
and
or
popf
xlat
xor
mov
xchg
adc
movs
fisttp
jno
fcomp
rcr
jl
inc
out
pop
(bad)
add
mov
cmp
inc
pop
repz
mov
xchg
xchg
mov
mov
xor
sbb
push
pop
push
fwait
dec
pop
or
retf
pop
loope
stos
fisub
adc
push
imul
addr16
adc
stos
pushf
cmp
mov
push
push
test
sub
mov
int3
adc
cli
lock
pop
loop
add
push
cmps
jl
xchg
xchg
mov
bound
ret
sar
dec
mov
push
cmp
je
add
mov
stos
clc
adc
bound
cmp
sbb
fdivr
sub
(bad)
jge
mov
clc
jno
out
cmps
out
add
popf
test
(bad)
call
adc
rol
jg
push
cmp
imul
pop
push
adc
(bad)
xor
xchg
xchg
and
mov
xchg
add
push
test
retf
sub
jl
jl
pop
push
enter
add
add
push
ins
fwait
leave
jl
mov
sub
cmc
or
cmps
inc
inc
aas
jo
scas
movs
shr
leave
dec
aad
out
imul
enter
fnstsw
(bad)
(bad)
mov
cmp
(bad)
ficom
cld
rol
xor
call
test
test
das
sbb
push
cwde
arpl
pusha
push
or
hlt
push
jns
pop
in
rcl
imul
or
icebp
adc
outs
xchg
popf
imul
pop
enter
and
push
sbb
mov
in
jb
jo
or
xor
dec
(bad)
out
pop
sbb
bound
xchg
add
sub
sbb
inc
loopne
pop
imul
ins
stos
add
mov
push
sbb
ret
test
xchg
push
dec
add
mov
(bad)
cmc
idiv
ins
inc
cmps
pop
lea
push
and
mov
into
movs
mov
lods
or
in
adc
shl
xchg
inc
and
test
xor
jo
jmp
ret
push
lods
loop
stos
arpl
jnp
or
xchg
add
call
sbb
iret
aas
add
pushf
mov
mov
sub
rcl
mov
add
fld
push
cmp
sbb
mov
cmp
retf
mov
pop
mov
xchg
sub
hlt
cmps
lds
add
sub
leave
and
dec
loope
cmp
add
sub
jo
xor
bound
into
cmp
pop
sbb
fsub
mov
mov
inc
les
ret
push
xchg
adc
mov
test
mov
mov
pushf
out
scas
mov
xor
mov
shr
mov
push
stos
or
arpl
or
leave
call
sub
rcl
retf
inc
adc
lods
pop
mov
pop
mov
xchg
add
or
neg
or
sub
mov
jecxz
shl
ret
mov
push
jae
xor
(bad)
dec
push
clc
jb
add
stos
xor
loop
enter
test
cmps
sub
rcr
cmp
push
sub
int
nop
sbb
dec
cmp
sbb
pop
in
repz
lea
in
inc
cdq
mov
in
fcomp
and
dec
int
xchg
mov
pop
sub
dec
je
xor
gs
pusha
xchg
cmp
sub
mov
push
jp
xchg
ins
es
movs
in
sti
lods
fcomp
xor
call
(bad)
mov
xor
xchg
movs
shl
push
jbe
mov
jne
pop
sbb
push
gs
inc
add
test
and
push
mov
retf
jno
aam
leave
fdiv
inc
xor
lods
les
xchg
test
jo
dec
and
out
add
adc
ffreep
mov
cmp
fld
mov
push
xchg
pop
xchg
test
mov
pop
ror
dec
mov
frstor
bound
out
shl
movs
rol
or
pop
mov
les
pusha
ficomp
mov
bound
and
push
(bad)
add
repz
ror
jbe
sub
outs
rcl
sbb
pop
sbb
mov
jl
push
call
mov
stos
add
sub
sbb
movs
xor
retf
mov
(bad)
call
or
retf
out
mov
xchg
aam
ror
jo
jae
push
jecxz
loopne
clc
xchg
push
pop
int
mul
mov
adc
xlat
mov
outs
fs
outs
cli
out
mov
gs
out
daa
icebp
out
cli
fidivr
or
jg
mov
icebp
push
out
lods
clc
lods
add
cmp
sub
ins
scas
sbb
push
inc
and
add
or
push
jnp
or
(bad)
dec
loop
movs
popf
(bad)
pop
call
xchg
ss
push
push
arpl
xchg
pop
dec
and
push
add
xor
pop
les
in
loop
inc
xchg
cmps
sub
scas
or
(bad)
outs
mov
xchg
ss
cmc
gs
inc
leave
push
scas
ss
je
xchg
rcr
mov
pop
movs
inc
push
sub
xchg
std
mov
or
push
lea
mov
popa
(bad)
loop
shl
jle
jae
enter
inc
xor
push
adc
lds
xor
push
popf
or
and
repnz
sub
adc
mov
sub
fst
sbb
push
dec
jnp
jg
dec
movs
cmps
popf
aam
dec
int
mov
xor
dec
jno
in
shl
aas
test
and
mov
sbb
retf
test
sbb
sbb
fmul
mov
enter
stos
dec
cmp
xchg
and
xchg
xor
aam
adc
cmp
pop
int3
mov
mov
jae
xchg
test
dec
jecxz
mov
cmp
add
mov
cs
xor
icebp
mov
mov
xchg
not
and
adc
paddw
sbb
jbe
ds
enter
fmul
mov
(bad)
pop
push
jmp
xor
mov
sbb
xor
cmp
(bad)
xchg
repz
int
sbb
pop
rol
sub
and
pop
mov
or
lods
mov
pop
push
int3
or
pop
jle
ins
xlat
js
xchg
jae
and
cmp
sbb
inc
add
(bad)
in
push
cmps
xchg
adc
shl
or
jno
jne
sbb
bnd
mov
sar
jg
into
sub
adc
jmp
scas
xor
add
push
pusha
mov
add
xchg
and
add
mov
repnz
push
idiv
mov
adc
pop
pop
sub
jns
fs
xlat
(bad)
mov
outs
inc
(bad)
sbb
test
dec
mov
icebp
cdq
js
xor
fsubr
mov
sbb
inc
push
addr16
sub
sbb
out
sbb
(bad)
mov
add
dec
cmp
or
adc
arpl
out
arpl
mov
dec
jb
cli
pop
out
cmps
xor
fs
jmp
retf
fldcw
mov
(bad)
xor
cmp
cdq
or
pinsrw
or
inc
pusha
add
or
in
sub
dec
push
sub
pusha
push
(bad)
scas
add
daa
stc
sub
xor
lds
or
and
test
mov
xchg
pop
adc
nop
pslld
sbb
mov
push
outs
aas
repz
dec
push
(bad)
ror
push
push
mov
cmp
xchg
ret
ds
dec
pop
cmps
sbb
sahf
mov
cmp
jmp
adc
mov
and
rcr
and
add
or
in
lock
jmp
ins
outs
(bad)
jns
icebp
(bad)
cmc
clc
sbb
pop
inc
repz
pop
cwde
jl
gs
or
mov
add
adc
mov
pop
mov
jnp
sti
pop
into
std
inc
jmp
movs
or
mov
je
adc
and
xor
bts
mov
add
push
(bad)
ins
cmovnp
xchg
adc
cli
add
loope
jl
in
push
imul
sbb
fst
int
ins
pusha
jne
inc
call
(bad)
adc
or
pop
stc
movs
pop
pop
jno
lock
sbb
push
cs
dec
jae
and
(bad)
retf
cmp
mov
xor
arpl
punpckldq
cmp
pop
adc
ret
leave
sub
jnp
test
push
imul
pop
imul
jecxz
retf
adc
adc
add
fadd
ror
mov
or
out
adc
daa
les
xor
pop
lea
addr16
pop
frstor
xchg
sub
inc
aam
lods
mov
push
cdq
cmc
mov
xor
pop
imul
dec
cmps
bound
or
ss
ja
add
pop
push
push
test
mov
xchg
xor
mov
xchg
std
mov
shl
pop
mov
sysenter
shr
dec
dec
mov
imul
dec
imul
sub
lods
enter
add
test
dec
add
pop
or
arpl
sbb
add
sub
xor
ss
xor
ja
je
int3
mov
add
xchg
test
mov
aad
icebp
data16
or
or
aaa
mov
pop
add
inc
ins
repz
add
xor
test
cmps
xor
push
or
fmulp
mov
push
and
xchg
fwait
inc
sbb
sbb
movs
cmps
mov
sub
test
pop
mov
mov
scas
mov
jno
fmul
inc
loop
sbb
lods
test
arpl
add
mov
out
call
pop
mov
pop
push
dec
cmp
dec
inc
ss
popf
push
gs
dec
bound
add
push
jg
lea
mov
fwait
sbb
lahf
xchg
jne
jae
jg
cmps
icebp
push
sub
test
jl
adc
xchg
or
inc
jbe
stc
inc
fild
pop
imul
retf
arpl
mov
cwde
fisttp
in
mov
addr16
mov
std
js
add
mov
add
add
fs
pusha
sbb
shl
sub
adc
lock
cmp
xchg
mov
dec
aam
jp
sub
push
push
sub
data16
shr
out
jae
push
stos
push
pop
push
pop
sub
and
sbb
stc
push
out
pop
out
cmp
nop
dec
sub
cdq
and
inc
in
dec
das
je
jb
xchg
enter
xor
push
je
mov
and
adc
inc
fimul
xchg
cld
ja
jns
xor
loope
mov
dec
movs
pop
cmps
jmp
call
test
adc
push
retf
shl
jl
repnz
gs
jp
dec
pop
inc
loope
fistp
inc
fs
push
cld
sbb
nop
cs
int3
call
dec
mov
sbb
cmc
pop
das
stos
iret
js
test
mov
out
adc
push
iret
or
nop
int
cmp
and
mov
push
test
loopne
outs
movs
pop
out
mov
dec
xchg
(bad)
call
push
es
fisttp
adc
jg
paddd
clc
xchg
out
adc
iret
add
(bad)
inc
mov
and
lods
xchg
test
int
out
rol
cmp
xor
xchg
cmp
sub
retf
mov
js
xchg
loopne
ret
std
loop
repnz
ret
mov
test
sti
rol
add
cmp
adc
pop
push
xlat
dec
out
sbb
and
sbb
mul
pusha
je
inc
cmp
sub
inc
je
cmp
xchg
stos
adc
shr
or
dec
int3
cmp
cwde
xchg
movs
fsubrp
jb
or
add
push
sbb
push
pop
dec
pop
in
and
fdiv
test
xchg
xor
mov
push
int3
add
xor
stos
xor
ins
ins
adc
scas
lods
dec
test
and
stos
xlat
cs
push
das
jle
add
xchg
pop
mov
outs
imul
inc
leave
or
xor
mov
or
fwait
dec
lods
jmp
mov
dec
adc
dec
lea
xchg
pop
stos
add
int3
cli
repnz
fmul
mov
or
cld
or
pop
add
pop
(bad)
xor
inc
xchg
fwait
jns
mov
jp
sahf
add
mov
fld1
repz
cmps
pusha
inc
sbb
mov
cmps
push
or
(bad)
jo
mov
fdivp
mov
push
inc
cmp
inc
adc
jae
aaa
addr16
daa
mov
mov
call
cdq
stc
test
cs
jmp
push
and
sbb
add
cdq
xchg
je
xor
push
inc
add
mov
xchg
int
mov
pop
inc
mov
xor
cwde
fs
mov
push
(bad)
cli
(bad)
or
xchg
xchg
dec
dec
push
neg
fldz
cmp
cmps
pop
inc
jge
lds
inc
inc
xchg
repnz
push
pop
add
popa
out
inc
aad
sbb
in
and
mov
mov
sbb
loope
mov
xor
adc
mov
or
push
out
mov
xchg
aam
rcl
or
lahf
sbb
or
adc
adc
push
div
clc
push
into
ss
dec
jb
stos
addr16
pop
xchg
das
rol
hlt
jb
sbb
sub
xlat
and
sub
test
mov
scas
mov
vpmadcsswd
mov
jb
mov
rol
sbb
push
push
xchg
dec
mov
inc
fcmovnu
inc
scas
je
xchg
mov
inc
test
sbb
sub
add
imul
xchg
pop
cdq
cmp
pop
sbb
or
cmp
and
clc
push
push
jb
xchg
adc
ret
enter
mov
mov
movs
push
xor
add
aad
jb
push
mov
popa
daa
jle
jp
sub
ror
cmps
std
cmc
mov
mov
jne
lahf
test
cmp
adc
stos
popa
add
stc
mov
(bad)
and
jle
(bad)
mov
sbb
out
sti
into
jge
cmp
and
push
adc
push
ds
mov
mov
in
mov
ret
inc
push
xor
mov
retf
xchg
or
addr16
movs
sub
jmp
test
ins
or
sbb
inc
jp
and
jmp
mov
or
xchg
sbb
jne
hlt
shr
adc
mov
out
xor
inc
fidivr
fsubrp
mov
jg
pop
call
loope
sbb
mov
jmp
or
jns
adc
movs
in
and
jae
cs
ss
adc
fsin
inc
sub
adc
cmps
sti
mov
ret
inc
jecxz
sub
xchg
xchg
jb
shl
mov
or
xlat
or
mov
push
out
neg
pop
sbb
(bad)
jmp
fwait
xor
in
push
scas
shl
out
in
test
mov
cmp
xor
(bad)
push
inc
sar
jnp
pusha
cmp
out
js
dec
inc
into
ds
adc
jp
mov
mov
and
inc
xchg
or
pop
mov
fldcw
lods
or
push
in
jbe
adc
mov
cdq
push
jns
pop
shl
xor
adc
loop
sub
dec
sub
int
lock
test
int3
pop
xor
cmp
dec
stos
lods
mov
pushf
inc
in
cmp
inc
jle
jae
hlt
mov
jns
pop
outs
xlat
push
cmp
push
add
(bad)
pusha
push
mov
push
mov
fistp
mov
int
fcmovb
outs
jbe
mov
jae
in
inc
and
mov
jne
sbb
lods
and
fld
(bad)
push
mov
ret
adc
mov
iret
dec
ds
outs
adc
inc
xor
push
and
pop
nop
fimul
mov
sahf
pop
imul
mov
hlt
xlat
pop
push
xchg
pop
push
jmp
adc
mov
mov
mov
xor
cwde
pop
add
jb
jp
scas
pop
dec
mov
jno
sub
nop
mov
jns
stos
cs
sbb
and
mov
xchg
inc
je
ds
pusha
push
sbb
or
ins
leave
test
dec
or
mov
je
dec
ror
shl
inc
dec
stc
ins
shl
mov
test
dec
mov
inc
mov
and
scas
jb
frstor
jmp
cmps
xchg
xchg
adc
inc
mov
gs
jecxz
fdivr
pusha
enter
mov
push
scas
stos
shl
dec
sub
pop
or
(bad)
and
mov
push
ret
das
sbb
das
bound
sbb
cli
jns
jge
sti
sub
call
hlt
or
sub
cmps
adc
add
aam
xchg
or
xchg
idiv
sbb
jns
ja
stos
xchg
fisubr
test
push
mov
sub
cmp
std
(bad)
mov
or
lods
in
dec
stc
cld
ret
retf
cmp
retf
mov
sub
data16
lahf
pushf
mov
pusha
inc
mov
jnp
xor
and
adc
push
or
ins
mov
(bad)
and
xor
add
hlt
dec
inc
inc
push
push
add
mov
jge
xchg
pop
push
mov
arpl
mov
mov
ss
and
adc
movs
xchg
aam
adc
inc
xor
es
cdq
or
lea
pop
(bad)
and
mov
pop
push
test
pop
xor
pop
cs
mov
sub
ja
loopne
sub
fnstenv
adc
xlat
cld
in
lahf
fidiv
add
lahf
inc
sub
test
jns
mov
aad
sti
sbb
and
push
jnp
sti
cmc
les
out
mov
jge
cmp
add
(bad)
mov
and
dec
out
loopne
cmp
push
xlat
cmp
aam
inc
ins
shr
jmp
push
test
addr16
pop
les
or
add
jge
fs
shr
mov
push
mov
xchg
mov
outs
call
lods
pop
pop
das
(bad)
bound
sub
xchg
inc
(bad)
pop
pop
call
sub
sub
imul
(bad)
adc
fisttp
fmul
(bad)
fistp
(bad)
jg
push
jmp
sti
pop
rcr
pop
hlt
ret
aas
fwait
iret
dec
je
imul
cmps
xchg
jae
inc
mov
jmp
loope
leave
mov
dec
retf
cmp
dec
movs
xor
inc
xor
add
int
or
inc
mov
push
in
xchg
inc
or
leave
sbb
movs
jbe
outs
push
sub
cmovs
add
(bad)
xlat
sbb
mov
fxch
scas
hlt
call
dec
gs
cli
jmp
fimul
fisubr
clc
clc
icebp
push
je
fmul
add
test
outs
sub
das
iret
jne
dec
push
mov
jb
jbe
les
stos
dec
cs
xor
mov
adc
mov
scas
jle
pop
push
aam
sub
jmp
mov
or
dec
or
(bad)
rcr
fdivr
and
adc
push
inc
lods
add
xor
xchg
cdq
(bad)
mov
cmps
push
adc
les
std
(bad)
je
repnz
xchg
inc
ja
cmp
jmp
jae
mov
xchg
shr
lds
js
dec
(bad)
xadd
repnz
pop
sbb
es
jae
xchg
and
sbb
cmp
xchg
rcl
mov
out
adc
repz
mov
sbb
jmp
call
(bad)
mov
xor
jb
cdq
mov
retf
xchg
es
pop
xor
repnz
lods
(bad)
es
jno
sti
pop
fucomp
xchg
mov
popa
cmp
dec
xor
sar
inc
push
sbb
inc
ret
ror
cmp
repz
scas
ss
cmp
aas
outs
sbb
shr
bound
pusha
mov
inc
sub
call
cld
mov
xchg
out
hlt
inc
sub
shl
icebp
mov
cdq
sahf
shr
das
fs
test
movs
xchg
outs
shl
cmp
push
add
and
movs
leave
cmp
inc
dec
mov
dec
or
xlat
push
mov
daa
aam
imul
xchg
leave
sbb
cmps
int
or
push
xor
pop
dec
jno
push
mov
add
push
sbb
xchg
ror
xchg
popa
mov
mov
add
xor
dec
mov
inc
lods
or
imul
dec
sub
mov
or
cmp
repnz
inc
daa
inc
movs
or
push
jp
shl
cld
cmp
fadd
mov
inc
mov
adc
rcl
mov
mov
push
mov
cmp
and
div
add
ret
std
sub
cwde
xchg
inc
cdq
or
inc
push
push
stos
xor
xor
push
mov
push
inc
test
jae
pop
movs
stc
test
inc
(bad)
xchg
adc
adc
fisttp
sub
xor
push
sub
mov
adc
dec
sub
ret
or
dec
sbb
jbe
mov
and
dec
sbb
xor
test
fwait
call
jae
dec
xchg
adc
adc
mov
(bad)
retf
rep
jns
push
retf
cmc
les
in
xchg
repnz
aaa
inc
push
jge
mov
adc
push
inc
jle
mov
mov
mov
sub
jl
jns
stos
adc
jecxz
inc
push
mov
leave
fcom
arpl
nop
inc
xchg
cs
inc
sbb
pop
dec
mov
mov
pusha
xor
mov
and
push
mov
xchg
sub
pop
ins
fistp
dec
sbb
pop
xchg
cdq
movs
cmp
push
std
jae
push
cwde
ret
popf
mov
pop
idiv
loop
pop
je
mov
xchg
jmp
(bad)
cmp
in
fcmovnbe
pop
mov
ror
pop
jbe
out
cld
fnstenv
or
popa
sar
push
jl
cwde
dec
cmp
push
xchg
test
push
xor
jae
mov
inc
mov
pusha
add
loopne
adc
ret
das
jb
fisubr
jno
jns
in
loope
mov
xchg
xlat
sar
jbe
imul
or
std
cdq
neg
fisttp
leave
mov
mov
xor
sbb
sahf
dec
fisttp
rcl
sub
cmp
shl
test
mov
dec
pop
push
imul
shl
mov
push
stos
pop
popf
hlt
lods
inc
fsubr
mov
inc
stos
jmp
sub
mov
ret
inc
in
in
inc
lds
ret
cmp
addr16
push
mov
(bad)
jb
cmp
add
ret
mov
pop
cwde
lahf
cmps
cmp
xchg
fsubr
sub
and
push
repz
add
test
push
mov
sar
(bad)
dec
dec
push
mov
cmps
aas
jge
sbb
xor
mov
cmp
xchg
xor
popf
push
sub
cmp
add
push
and
cmps
lods
dec
sahf
(bad)
pop
mov
test
pop
call
dec
movs
pop
xchg
sbb
out
sbb
xor
adc
cmps
add
(bad)
and
jae
or
xor
imul
mov
cwde
xor
sub
and
and
push
adc
jnp
and
push
pop
mov
adc
jne
(bad)
sbb
add
dec
outs
arpl
cld
repz
in
dec
ins
sub
das
or
enter
jecxz
retf
shl
cld
or
mov
inc
mov
mov
cmp
inc
mov
mov
retf
in
data16
in
lds
add
shl
imul
repz
add
mov
les
push
repnz
aad
xchg
cli
xor
push
dec
push
cmp
test
mov
sbb
pusha
cs
push
not
mov
xlat
xor
push
cmps
sbb
imul
or
scas
pop
cli
cmp
pop
lock
test
movs
jbe
add
xor
jbe
rcl
adc
lahf
xchg
and
gs
cmp
inc
sbb
mov
aad
outs
pop
add
sbb
mov
in
mov
mov
imul
xor
imul
shl
cmps
push
test
cdq
(bad)
retf
ss
or
iret
mov
mov
xchg
mov
lahf
lea
fsub
jbe
dec
add
sub
dec
jbe
and
xchg
loope
(bad)
loopne
pop
xchg
inc
and
pop
or
cmp
add
pop
add
hlt
xor
xlat
and
adc
sub
js
inc
sub
cmp
xor
(bad)
mov
scas
rol
jg
and
and
int
mov
and
test
sbb
out
in
test
mov
cmps
mov
xchg
addr16
shl
call
xor
and
mov
sbb
mov
push
popf
pop
lods
stc
cld
mov
adc
and
or
add
inc
dec
test
mov
adc
xor
jmp
xor
cdq
aas
imul
jle
cld
inc
push
cld
pop
aaa
stc
ret
dec
hlt
dec
in
sbb
pop
das
data16
inc
mov
in
outs
rcl
sbb
push
fidivr
cmp
inc
adc
stos
cdq
cwde
inc
xlat
(bad)
mov
cwde
data16
enter
push
shr
cmp
call
xor
mov
pop
int3
jecxz
xor
ret
jmp
xlat
push
fistp
jmp
imul
shl
mov
jmp
sbb
sub
outs
add
je
xor
mov
xchg
loope
xchg
mov
sub
xchg
jbe
(bad)
jp
int
push
inc
xor
icebp
mov
in
inc
xchg
jns
call
and
and
push
test
test
or
push
push
sub
test
mov
mov
pop
add
inc
xchg
nop
and
pop
fdivr
fwait
pop
pop
add
and
inc
pop
iret
mov
sbb
clc
sbb
ficomp
push
in
movs
pop
pop
cmp
lahf
imul
int3
jge
xlat
dec
jb
dec
ja
xchg
std
sub
xor
(bad)
mov
mov
fs
pop
out
inc
movs
cdq
add
xchg
and
pushf
dec
sbb
push
mov
(bad)
fsub
and
pop
mov
jge
test
adc
jbe
sub
pusha
cmc
pop
fst
push
pop
push
test
nop
pop
mov
daa
or
pop
test
dec
xchg
arpl
push
push
add
popa
xchg
lods
fbstp
pop
xlat
cdq
lock
dec
ins
xlat
inc
sbb
xchg
jle
cld
xchg
sbb
mov
jns
adc
mov
outs
and
cmp
arpl
outs
or
add
or
movs
push
cmp
and
dec
bound
mov
imul
sahf
adc
sbb
sbb
sub
movs
pop
retf
es
in
sbb
sub
mov
sbb
or
push
xchg
inc
retf
xor
mov
repz
addr16
mov
push
add
cmps
inc
push
or
popf
out
dec
cmp
add
iret
inc
ins
and
shr
mov
or
in
outs
ins
imul
or
inc
sbb
in
push
or
movs
mov
in
cld
jb
or
xor
sub
xor
mov
imul
xchg
sbb
into
(bad)
jmp
jle
sub
mov
pusha
pop
and
sub
retf
dec
dec
fistp
and
outs
cmps
cmp
dec
push
push
and
dec
sub
push
dec
sbb
out
push
les
mov
xchg
ins
in
sub
fsub
stos
out
into
push
ret
ret
pop
xchg
or
push
sbb
popf
dec
xchg
out
sahf
mov
add
mov
lahf
cli
add
icebp
pop
in
sahf
test
xor
leave
ficom
pop
ret
pop
fs
movnti
loope
imul
pop
pushf
xchg
int3
lds
fisubr
adc
pop
dec
pop
jne
xchg
sbb
and
cdq
jno
xor
gs
cwde
cmp
mov
add
ins
adc
xchg
jle
test
xchg
(bad)
into
push
leave
push
add
mov
adc
sahf
aam
jae
inc
inc
das
dec
add
pusha
inc
dec
push
xlat
fnstenv
shl
cmc
loop
xor
sbb
iret
pop
pop
jno
popf
jnp
mov
adc
aas
or
mov
inc
std
push
in
out
mov
jo
xchg
pop
in
jne
repz
push
jbe
jg
jae
jnp
inc
and
call
and
and
jo
call
imul
test
mov
stos
add
mov
and
sub
cmp
stos
pop
adc
jecxz
sahf
repnz
mov
(bad)
out
dec
lock
xchg
jnp
adc
cdq
mov
dec
test
fcmove
int
jp
xchg
pop
jmp
pop
and
fsubr
dec
movs
fist
mov
or
xor
call
adc
jle
sub
data16
push
shl
push
dec
mul
and
xchg
mov
cwde
fs
sbb
int
fld
movs
xchg
pushw
jp
mov
shl
loope
inc
enter
xchg
data16
sub
(bad)
push
(bad)
fiadd
adc
int3
mov
(bad)
outs
add
xor
xor
or
(bad)
imul
mov
jl
sbb
leave
mov
shr
aaa
(bad)
inc
pushf
xor
(bad)
hlt
and
xlat
stos
shr
mov
inc
push
mov
ins
out
lods
and
retf
leave
out
inc
imul
ins
test
imul
sbb
jmp
pop
xor
push
inc
mov
push
xchg
es
test
fwait
xchg
vpshaq
clc
push
sbb
inc
hlt
pop
shl
mov
shl
int3
ror
push
xchg
adc
pop
retf
pop
xchg
dec
push
lea
push
or
mov
int3
dec
jmp
mov
icebp
sub
push
inc
int3
ins
dec
popa
repz
or
hlt
imul
cmps
movs
sbb
test
pop
xlat
mov
(bad)
mov
adc
stos
pop
jg
xchg
xor
jno
pop
test
fnsave
cmp
int3
dec
xchg
enter
in
cmp
pushf
imul
sub
add
fwait
shl
pop
sub
adc
mov
fs
mov
cmp
pusha
jne
lahf
(bad)
ja
cdq
lds
sub
sbb
shl
scas
push
xor
or
sub
sub
jmp
and
fistp
cmps
sbb
push
pop
in
or
inc
dec
fwait
test
sub
ret
aad
mov
push
fldenv
fstp
(bad)
ins
fwait
push
jg
mov
mov
repz
push
cmps
or
aam
cmp
cmp
add
ror
bound
cmc
xchg
pop
dec
xor
outs
es
xor
es
sbb
call
xor
mov
mov
jecxz
mov
daa
push
das
add
ins
rcl
fldcw
cwde
outs
mov
cdq
pop
add
sbb
inc
ror
(bad)
enter
add
outs
popa
jo
mov
xchg
and
sti
jo
xor
sub
fimul
retf
repz
lock
call
cmp
ficom
xor
cmps
popf
(bad)
jle
inc
data16
sub
xor
mov
or
xor
inc
aam
stc
mov
test
mov
sbb
int
xchg
loope
jo
cdq
je
or
test
jmp
xor
dec
lods
fisubr
enter
or
mov
daa
pushf
adc
xchg
ret
mov
leave
xchg
lods
lahf
inc
sbb
loope
movs
cmp
dec
cmp
mov
or
and
or
xchg
(bad)
ja
cwde
ss
js
pusha
jl
jne
(bad)
mov
dec
inc
dec
in
sbb
fbld
retf
mov
jg
call
push
scas
xor
pop
xchg
push
cmp
dec
xor
shl
dec
aad
xlat
push
pop
lods
loopne
sub
mov
mov
push
lods
or
mov
test
or
mov
push
sub
out
in
test
add
pop
(bad)
mov
(bad)
shl
fcmove
jle
sar
out
data16
push
clc
loope
lock
movs
call
lods
idiv
cmp
in
push
jo
lock
outs
aaa
jno
mov
ror
je
retf
and
arpl
pop
int
sti
sbb
mov
xor
sbb
movs
nop
pop
cmc
ins
inc
or
test
mov
ret
mov
cli
lods
fbld
stos
xor
mov
stos
ror
add
dec
pop
sub
or
stc
popa
imul
mov
pop
fwait
aas
add
and
jo
add
and
fldenv
sbb
fbld
adc
push
pop
xchg
push
jecxz
and
pusha
sbb
add
fadd
(bad)
xchg
jbe
jns
mov
push
xchg
test
cmp
out
cmp
das
nop
jle
imul
std
fst
mov
jle
stc
cmp
ret
aas
gs
add
gs
jne
mov
add
jecxz
and
gs
cmp
pop
sub
mov
shr
add
aam
cwde
mov
ror
sbb
cdq
sbb
push
arpl
push
repnz
mov
pusha
leave
out
int
(bad)
sbb
xchg
(bad)
add
add
fnstenv
mov
jg
or
je
mov
xchg
fdivr
mov
inc
or
ret
mov
adc
jmp
test
push
jmp
mov
fsub
xor
stos
and
imul
jge
movs
cmc
mov
mov
fst
or
cli
add
lea
dec
das
scas
int3
pop
outs
sub
cmps
ret
movs
jl
sbb
push
fs
das
test
addr16
cmp
mov
pop
nop
cdq
ret
sahf
test
in
or
ins
nop
push
call
and
inc
ret
jecxz
cmp
xchg
jle
sbb
or
inc
add
repnz
lock
inc
arpl
mov
outs
mov
cmp
test
outs
inc
and
in
imul
sub
dec
cmps
push
ins
dec
and
in
ins
mov
in
push
cdq
(bad)
fistp
(bad)
retf
xor
lods
xor
mov
cmps
mov
inc
sbb
call
adc
adc
mov
mov
adc
dec
sbb
push
dec
and
fs
xor
and
mov
sbb
push
cmp
add
out
push
add
push
rol
jmp
jo
push
fistp
test
test
dec
mov
scas
ins
sub
xor
lds
clc
lods
sub
ret
ins
lods
(bad)
rol
outs
cmp
inc
ret
sub
lock
xor
icebp
sbb
pusha
add
push
jae
gs
adc
inc
and
cli
adc
xlat
add
mov
loope
and
dec
and
repnz
mov
mov
mov
xlat
sar
jle
sbb
sbb
mov
push
add
sub
xor
lock
adc
(bad)
stos
jnp
jo
(bad)
loopne
sar
push
icebp
(bad)
push
repnz
addr16
hlt
outs
movs
adc
cmp
gs
addr16
cli
jg
(bad)
push
out
mov
cmp
inc
jbe
adc
pop
call
push
mov
pop
inc
xchg
cmp
mov
xchg
sub
dec
add
xchg
pop
mov
retf
loope
mov
fwait
scas
push
xor
jmp
cs
or
loop
pop
xchg
ins
out
cmp
mov
out
out
ja
mov
stc
int
loop
jmp
div
sbb
pop
iret
mov
or
push
js
cmps
mov
jmp
pop
mov
ss
fistp
xchg
inc
or
add
dec
sbb
push
adc
cdq
rol
adc
retf
lock
inc
cdq
shl
and
imul
pop
fisub
add
sub
mov
aas
cli
pop
jg
mov
(bad)
retf
push
sub
loop
in
aad
test
retf
jmp
stc
xchg
jmp
inc
push
xchg
jno
inc
push
dec
add
xor
mov
mov
push
mov
and
inc
ret
mov
xchg
mov
inc
fidiv
idiv
lea
scas
xor
mov
stc
inc
push
mov
into
in
xlat
mov
jnp
jnp
cmp
enter
arpl
cmps
push
imul
icebp
scas
lds
loope
retf
xchg
adc
in
imul
pop
nop
sub
dec
loope
inc
pop
or
fist
sub
xor
popa
test
mov
cli
xchg
pop
mov
retf
mov
jg
add
xor
test
lahf
icebp
jae
mov
jnp
pop
push
mov
pop
sbb
leave
xlat
iret
leave
outs
xor
stc
enter
pushf
fimul
popa
nop
pop
push
cmp
sub
jne
inc
xlat
xchg
pop
aas
(bad)
inc
mov
push
sub
xchg
das
sbb
fwait
mov
shl
pop
outs
inc
lds
and
movs
pop
mov
lods
fst
enter
mov
call
mov
iret
jbe
(bad)
jb
ja
test
inc
mov
scas
adc
mov
and
pushf
pop
lds
cwde
adc
je
outs
dec
xchg
mov
nop
jne
cmps
adc
cs
xor
and
sub
jecxz
hlt
or
fiadd
mov
mov
sbb
xor
test
stos
sbb
pushf
cmc
and
mov
test
test
push
out
sub
or
inc
repnz
in
aas
iret
int
ret
cs
push
push
mov
inc
xor
dec
shl
sub
imul
stc
sub
cdq
movs
mov
jae
clc
mov
sbb
sbb
dec
repnz
push
pop
imul
std
pop
test
inc
pop
popa
out
sbb
aam
pop
sti
add
test
popf
or
mov
cmp
das
ret
cmp
xor
sub
cmp
ins
int
mov
clc
and
test
dec
xor
jne
or
lock
fild
mov
(bad)
loope
or
push
inc
add
mov
xchg
push
pop
popf
mov
push
xchg
pop
movs
xchg
adc
mov
mov
push
xchg
fmul
mov
dec
mov
arpl
sbb
fs
test
push
lahf
test
mov
add
mov
ret
sub
test
push
jp
adc
out
sahf
pop
cmp
arpl
pop
ss
iret
mov
mov
or
dec
out
lods
(bad)
in
loop
jmp
sti
mov
mov
std
aaa
cmps
cmps
out
dec
xor
loop
das
jbe
int3
mov
(bad)
adc
das
xchg
lds
fbld
mov
push
xor
std
sub
pop
sbb
ins
pop
cmp
pop
into
dec
push
enter
in
fldenv
sub
adc
xor
dec
mov
or
stc
outs
out
das
into
dec
std
fyl2xp1
loope
fcomp
cld
fstp
mov
mov
push
push
xchg
outs
sub
pop
int3
inc
lahf
lods
adc
fistp
(bad)
(bad)
lds
lds
cld
je
dec
out
in
mov
cld
jb
inc
jecxz
and
cli
mov
loope
dec
xchg
mov
cwde
aam
inc
sbb
sbb
push
sub
dec
mov
add
adc
xor
or
add
xchg
push
sub
in
inc
sbb
jns
call
not
cmps
sub
out
iret
lahf
jmp
mov
push
xchg
shl
lahf
push
push
adc
xchg
std
mov
adc
(bad)
mov
test
push
(bad)
lods
test
(bad)
fisub
jno
imul
jge
imul
lods
mov
jp
sub
xor
dec
sub
stos
leave
ficomp
aam
sub
push
dec
pop
push
or
push
mov
mov
pop
retf
xchg
les
jmp
pop
std
imul
pop
sbb
mov
sub
add
scas
push
fstp
mov
and
outs
mov
or
dec
xchg
mov
dec
push
push
dec
cmps
xchg
nop
dec
mov
test
mov
inc
fld
ss
dec
(bad)
sti
sub
mov
dec
or
sub
or
xchg
pushf
adc
dec
pop
or
and
cmps
rol
mov
sahf
inc
cmp
sar
mov
push
ret
lods
pop
xchg
jl
test
mov
imul
jl
fisubr
push
ficomp
push
ja
mov
aad
xchg
imul
xchg
mov
mov
inc
push
inc
jl
imul
inc
sub
psubb
(bad)
push
enter
int3
jae
sub
out
pushw
push
adc
ins
call
stc
frstor
mov
popa
xor
pop
cmp
int
push
mov
adc
aam
jle
push
gs
je
lods
cmp
arpl
push
mov
adc
movs
sub
inc
sub
aad
push
gs
add
push
outs
pop
dec
in
push
jno
jmp
xchg
mov
pop
sub
xchg
out
cdq
mov
retf
add
cmp
or
imul
dec
push
test
(bad)
push
adc
or
push
jo
push
sub
call
inc
dec
jmp
leave
and
push
xchg
rol
je
adc
jecxz
push
fidivr
enter
call
sbb
add
push
push
shl
pop
loope
shr
sar
mov
push
mov
pop
jne
xchg
dec
add
data16
xor
das
into
cmp
inc
ret
mov
inc
cmp
and
push
sbb
pusha
inc
js
dec
jne
add
sub
aam
dec
mov
xchg
xchg
dec
xlat
and
cmp
stos
sbb
imul
mov
xchg
mov
dec
xchg
aas
retf
dec
jle
dec
and
inc
jae
lods
gs
test
cmp
and
pop
jle
leave
adc
repnz
mov
pop
mov
call
out
movs
dec
fadd
(bad)
fist
push
call
movs
outs
setnp
fimul
cmps
mov
cmp
adc
js
repz
and
and
inc
push
arpl
(bad)
lds
push
sbb
mov
gs
push
in
inc
shl
mov
fucomp
mov
jmp
mov
inc
jns
mov
xchg
(bad)
repz
mov
shr
jg
jae
imul
cs
icebp
pop
repz
out
add
in
icebp
(bad)
cs
push
fstp
lods
out
push
(bad)
sbb
cld
imul
int3
cld
retf
loope
dec
adc
mov
jmp
retf
icebp
int
test
out
mov
sbb
cmp
movs
push
test
inc
cmp
icebp
jecxz
jmp
adc
sub
loopne
inc
pusha
mov
pop
jns
repz
inc
iret
dec
inc
loope
xor
dec
xchg
daa
cli
dec
pop
mov
mul
test
sub
xchg
loop
fnstenv
in
and
cld
xlat
pushf
sub
mov
pop
call
jle
ins
call
cmp
out
arpl
aas
push
and
scas
sub
out
sub
addr16
call
mov
outs
lods
inc
jnp
lea
test
ror
adc
xchg
inc
in
clc
pop
mov
(bad)
in
mov
cmp
push
and
cmps
in
sub
xchg
sbb
fldcw
add
push
int
movs
nop
loop
xchg
addr16
cdq
stc
lods
movs
jb
mov
sar
retf
in
xchg
dec
xchg
lods
sbb
inc
mov
push
fisubr
fwait
push
dec
mov
mov
mov
xor
or
xor
retf
push
ds
push
or
cmp
mov
push
mov
pop
pop
mov
imul
push
mov
sub
repz
fistp
cmc
movs
ds
xor
ror
jo
scas
sbb
xor
sbb
push
and
inc
cdq
and
adc
mov
inc
ret
fild
(bad)
(bad)
cmp
push
push
mov
and
ja
stos
pop
cmp
push
sti
dec
fild
ror
mov
xlat
gs
fisttp
xchg
sub
out
stos
pop
dec
mov
or
lods
and
out
sub
enter
cmp
daa
out
stos
cdq
mov
sbb
aas
adc
enter
inc
out
or
xor
xchg
sbb
lock
into
sbb
xchg
and
adc
js
push
cmp
sbb
(bad)
push
(bad)
aad
retf
dec
sub
inc
test
cmp
cmp
xor
in
adc
dec
outs
cdq
cmp
add
xor
or
push
std
push
outs
es
ds
jbe
hlt
xor
mov
pop
xchg
div
adc
xchg
(bad)
fisub
sub
dec
fnstenv
pop
arpl
push
(bad)
in
(bad)
or
outs
inc
sbb
(bad)
lahf
push
jns
adc
sbb
push
(bad)
enter
stos
clc
arpl
sbb
(bad)
rcr
and
jb
jb
out
jno
popf
sbb
js
std
sbb
xchg
popf
adc
(bad)
stc
pop
xchg
ins
xchg
inc
rol
add
push
or
cmps
popa
sub
mov
inc
xor
cmp
gs
mov
or
mov
or
loope
rcr
mov
mov
xor
adc
in
cs
in
sbb
sahf
iret
fadd
imul
xchg
push
inc
xchg
jge
(bad)
xor
xchg
mov
mov
pop
ins
call
mov
(bad)
not
stc
loop
inc
hlt
out
push
cld
nop
push
mov
mov
out
jl
and
add
in
lock
lock
retf
mov
adc
sbb
fistp
add
cmp
push
dec
pushf
xchg
and
std
les
xchg
ins
stc
or
into
fimul
adc
pop
push
xor
nop
std
mov
aas
pop
sti
aas
jle
lock
fistp
out
ins
repnz
aas
js
test
(bad)
sbb
push
pop
je
pop
xor
movs
test
int
push
and
enter
jo
mov
aaa
movs
mov
mov
jb
push
lock
mov
sub
jo
or
out
xor
mov
jle
ucomiss
in
loopne
pop
push
inc
in
out
pushf
lahf
cli
into
inc
jmp
mov
in
mov
mov
pop
fstp
(bad)
mov
(bad)
std
stos
mov
jmp
sbb
(bad)
push
rol
cmp
lea
lods
mov
cmp
rcr
ins
stos
ins
xchg
dec
jp
sub
cmp
gs
xor
inc
sbb
or
jmp
sub
cmps
xchg
mov
adc
adc
sbb
add
ror
dec
jle
sbb
push
xchg
sbb
mov
mov
pop
dec
and
cwde
inc
mov
out
inc
lods
movs
pop
sbb
cmp
pop
inc
xchg
ficomp
xlat
repz
movs
jl
sub
icebp
test
into
inc
mov
dec
fs
inc
xor
scas
mov
cmc
or
mov
mov
mov
stos
stc
push
lahf
or
fistp
nop
push
aam
test
(bad)
(bad)
call
cs
jecxz
mov
ret
test
jnp
inc
ror
sub
std
div
(bad)
ins
or
(bad)
stos
inc
sbb
jb
dec
out
inc
mov
scas
sbb
and
in
lods
mov
pop
push
jg
and
adc
add
stc
mov
(bad)
and
movs
movs
pop
int3
ins
sub
pop
retf
xchg
outs
inc
out
jge
add
cmp
ret
or
mov
ficom
xor
dec
(bad)
dec
stc
cmp
cmp
jae
stos
sahf
pop
repnz
mov
mov
push
or
mov
(bad)
push
ss
ins
cld
add
push
or
jecxz
dec
imul
mov
or
gs
mov
fidiv
enter
in
pop
mov
mov
test
arpl
push
pop
push
in
lods
push
mov
ror
mov
movs
cmc
sub
adc
fs
lahf
push
les
pop
scas
mov
sub
or
or
dec
push
mov
scas
add
dec
rol
xor
scas
cli
mov
stc
ret
mov
leave
cmp
mov
pop
xor
sbb
push
and
sub
cmp
dec
sbb
xor
movs
sub
imul
retf
mov
pop
jae
lods
addr16
and
je
adc
leave
cmps
pop
jns
pop
xor
push
push
sbb
sub
imul
enter
jno
dec
adc
cdq
rol
lahf
sbb
push
(bad)
xor
adc
sub
sub
mov
cdq
movs
or
outs
inc
icebp
mov
pop
jmp
xchg
or
adc
add
mov
xor
adc
loope
out
push
inc
sbb
mov
stos
hlt
xor
adc
push
pop
ins
out
mov
mov
les
mov
adc
sbb
daa
jecxz
xor
scas
pop
js
pop
pop
mov
hlt
aaa
nop
dec
inc
mov
xlat
ret
call
rol
in
sti
pusha
cmc
mov
mov
mov
std
je
dec
dec
repnz
js
jno
pop
pop
out
jnp
cmps
xchg
daa
(bad)
dec
and
std
inc
mov
addr16
xchg
js
cmp
sbb
arpl
pop
xor
loope
sub
push
sbb
les
inc
loopne
and
add
lods
cmps
push
sbb
sbb
(bad)
ja
mov
sti
lds
mov
mov
(bad)
and
pop
(bad)
int
test
mul
jge
ss
(bad)
fimul
pop
enter
test
and
and
call
cmp
out
inc
jns
push
push
mov
cld
cmp
xchg
add
adc
pop
pop
sub
mov
rcl
xchg
nop
test
inc
jmp
(bad)
fsubr
mov
sub
inc
jbe
adc
aaa
adc
sbb
xchg
enter
repnz
cmp
jns
sub
xor
cmp
ret
and
mov
jecxz
stc
imul
shl
out
shr
dec
std
loopne
(bad)
jne
pop
(bad)
popa
ds
push
ins
adc
xor
int3
clc
lahf
(bad)
into
test
inc
mov
adc
push
push
xchg
int3
push
out
cld
fcomp
cmps
mov
out
(bad)
ror
dec
xor
scas
fcomp
test
ret
cli
xchg
and
aaa
adc
dec
or
pop
nop
mov
sbb
mov
push
aad
movs
dec
cmc
sbb
dec
scas
sbb
sar
cmp
leave
and
inc
bound
fdivr
sub
sbb
cmp
mov
xor
stos
mov
fyl2x
ret
jb
dec
jmp
and
adc
xchg
pop
pop
sbb
cmp
arpl
bound
cmps
cmp
lods
(bad)
shr
repnz
fisttp
or
push
jl
cs
push
and
mov
mov
repz
inc
adc
pusha
jbe
mov
call
test
mov
jno
sbb
mov
ret
ins
cmps
pop
add
outs
xchg
fbstp
outs
mov
xchg
xchg
and
in
call
in
jno
nop
scas
ror
pop
rol
jecxz
inc
sub
ret
retf
retf
lea
clc
js
sar
mul
mov
push
ss
stos
pop
inc
(bad)
int
in
push
mov
xchg
in
fs
mov
mov
test
loopne
pop
stos
mov
and
cmps
dec
loope
sbb
test
lea
or
or
pushf
add
mov
push
sti
push
xchg
dec
mov
je
push
pop
sbb
lods
pop
mov
xchg
ror
sti
out
jle
cmp
ficom
das
js
test
xchg
hlt
xor
pop
fs
jnp
loopne
in
adc
pop
loop
arpl
or
sub
sbb
xchg
(bad)
xchg
icebp
jmp
hlt
inc
loopne
outs
retf
(bad)
cmps
or
sahf
hlt
inc
dec
int3
ror
rol
or
into
push
cwde
pop
pop
rol
add
neg
add
outs
or
gs
adc
cmp
xchg
into
add
add
xor
add
xchg
fiadd
gs
xchg
sub
sbb
fld
and
(bad)
adc
mov
inc
add
fcomp
mov
fimul
call
xor
(bad)
arpl
cmp
dec
and
test
mov
ret
xor
stc
inc
cmp
cmp
in
stos
aaa
push
call
pop
pop
cld
jg
gs
bnd
lahf
out
cmps
lahf
paddusb
jae
mov
call
addr16
mov
xor
ror
shl
mov
inc
xchg
mov
or
adc
pop
dec
or
add
cdq
xchg
inc
mov
and
adc
mov
ror
jp
jae
(bad)
mov
(bad)
xlat
(bad)
out
jl
sahf
jle
xchg
jl
mov
arpl
jp
mov
jbe
stos
in
in
push
sub
mov
data16
into
gs
cs
cmp
mov
jmp
push
mov
imul
sbb
lods
dec
jmp
sbb
repnz
xchg
sub
adc
jo
lods
ds
into
or
dec
(bad)
or
xor
jb
dec
mov
pop
cdq
push
js
xor
jne
push
in
mov
scas
inc
leave
and
or
int
mov
fdiv
dec
add
vmaxsd
push
aaa
gs
mov
dec
addr16
pop
dec
cmp
push
lahf
mov
mov
test
dec
inc
xchg
in
pop
je
sbb
adc
loope
sub
enter
adc
xchg
in
(bad)
jl
in
adc
mov
or
mov
int
xor
adc
push
jmp
je
or
aam
or
add
sbb
sbb
push
retf
sbb
cmp
mov
loop
jno
inc
inc
xchg
ds
sbb
mov
sbb
or
cmp
std
loopne
mov
dec
mov
in
enter
adc
out
outs
stos
call
lods
gs
enter
add
retf
clc
or
and
das
inc
mov
push
sub
std
or
dec
adc
icebp
inc
pop
and
ins
stc
mov
adc
mov
int
sar
in
xor
in
cmp
sub
in
add
push
jno
fstp
jo
adc
mov
lods
ss
mov
pop
sub
mov
mov
inc
pop
mov
mov
into
pop
lds
clc
cmp
mov
jecxz
js
fcomip
cmps
aas
hlt
mov
sbb
cmp
adc
push
in
inc
ins
(bad)
int3
sti
dec
repz
out
push
sub
add
or
push
cwde
xchg
push
push
sbb
sub
pop
inc
sbb
lea
xchg
test
jge
mov
call
imul
mov
(bad)
lahf
clc
adc
push
in
call
pop
adc
pushf
push
gs
dec
push
in
pop
sub
inc
xchg
clc
test
mov
xchg
push
stos
mov
xchg
dec
int
cmps
sar
jnp
xchg
lock
mov
jp
push
inc
adc
dec
imul
aad
dec
data16
test
xor
std
lock
adc
repnz
pop
push
jno
nop
mov
aam
sbb
jnp
fist
inc
dec
adc
pop
add
sub
popa
sbb
mov
inc
xchg
xor
stos
addr16
clc
add
aad
cli
mov
push
xor
iret
xchg
in
add
jmp
and
fcmovne
out
adc
leave
xchg
(bad)
sbb
push
addr16
je
inc
inc
xchg
inc
pop
popf
aam
mov
add
mov
mov
ss
jmp
pop
mov
aam
pop
bound
push
les
adc
sti
dec
outs
test
adc
adc
adc
fisub
aaa
add
add
xor
inc
mov
xor
mov
ffree
sub
pop
into
test
pop
xchg
jmp
inc
jmp
push
(bad)
lock
mov
sbb
mov
(bad)
jmp
dec
inc
sbb
jg
mov
out
outs
jne
sbb
dec
xchg
xchg
mov
int3
neg
jne
addr16
adc
jge
adc
inc
movs
imul
rcr
jne
adc
xchg
dec
jnp
test
add
test
retf
test
cdq
xchg
dec
jmp
call
cmps
dec
data16
mov
popf
popa
jecxz
mov
aaa
sbb
retf
inc
stos
xchg
ds
lahf
cli
js
jg
xchg
push
ins
(bad)
div
aad
test
jnp
jl
pop
sub
xchg
mov
xlat
mov
mov
mov
ja
inc
ret
jg
inc
cmp
test
in
(bad)
aad
mov
std
sbb
inc
dec
mov
xchg
popf
lds
xchg
jmp
xor
xor
xchg
add
les
and
pop
gs
mov
cld
push
fwait
jg
adc
aaa
cmps
and
outs
mov
sar
les
loopne
cmp
imul
xchg
stos
push
arpl
sub
inc
and
xchg
adc
in
ror
cwde
or
pusha
jecxz
lea
div
(bad)
inc
(bad)
push
pop
jae
test
adc
xor
sub
shl
xchg
sub
push
push
mov
and
dec
push
cwde
push
xchg
mov
scas
scas
sbb
(bad)
xchg
or
mov
in
cmp
shl
scas
mov
loopne
lods
add
pop
jne
ins
jae
sub
inc
retf
js
sar
leave
inc
loop
inc
push
xor
pop
ud2
cdq
add
imul
xchg
push
test
scas
mov
xlat
xor
(bad)
jb
and
xchg
cmc
jle
xchg
mov
adc
xor
mov
lock
test
xchg
push
stos
ret
cmps
jbe
(bad)
mov
mov
repnz
mov
test
movs
inc
cdq
xor
sar
retf
push
cs
pop
ins
(bad)
and
dec
mov
add
sti
push
jbe
push
xchg
sub
pop
(bad)
fdiv
pop
pop
jmp
dec
and
push
pop
push
popf
mul
fild
sbb
cdq
aaa
push
sbb
test
mov
xor
pusha
pop
xor
sub
xchg
and
mov
dec
mov
dec
nop
jns
sub
(bad)
jno
movs
mov
les
aas
inc
mov
adc
test
leave
cmp
mov
clc
(bad)
out
aam
cmp
bound
dec
add
popf
push
pop
xlat
jno
retf
sub
sahf
cmc
adc
push
cdq
nop
scas
(bad)
retf
jp
sub
jo
ficom
inc
mov
dec
arpl
push
arpl
mov
jp
mov
or
xor
mov
aaa
test
dec
loop
adc
fimul
aad
pop
fdiv
pusha
imul
leave
shl
test
sub
xchg
pusha
adc
(bad)
inc
sbb
pop
mov
dec
cmp
cmp
mov
xor
adc
push
aad
test
push
mov
retf
xor
xor
add
mov
mov
adc
inc
push
jo
push
xchg
and
xchg
es
stos
lock
into
add
pop
dec
and
shl
jmp
sbb
inc
xor
les
mov
lahf
lods
inc
cmps
xchg
xor
outs
sbb
jl
sti
dec
js
jg
pop
pop
mov
pusha
leave
std
das
outs
ja
sti
dec
mov
xchg
dec
outs
int
jmp
cmp
call
xchg
mul
pop
outs
mov
call
mov
div
mov
and
mov
mov
xchg
mov
cmps
pop
retf
sbb
hlt
push
fisubr
jmp
dec
arpl
fsub
cmps
and
pop
aas
mov
xchg
std
dec
mov
retf
jp
clc
pop
sbb
in
pop
cli
out
jmp
xchg
sub
inc
idiv
retf
repz
jb
fcomp
sub
push
mov
pop
sub
retf
mov
adc
adc
sub
call
bound
mov
sub
bound
push
cmp
movs
dec
sahf
mov
mov
mov
or
out
mov
inc
sub
inc
popa
test
cli
mov
add
js
inc
sub
sbb
daa
or
and
mov
xchg
dec
test
mov
xor
mov
xchg
loopne
pop
dec
das
stos
xor
push
push
dec
aad
pop
movs
jg
mov
mov
out
sbb
dec
test
call
test
push
fwait
dec
and
pop
mov
sbb
dec
push
sub
ins
jo
add
sub
xor
(bad)
lods
aad
scas
js
xor
movs
add
sbb
repz
pop
sbb
pop
pop
cmp
dec
xor
and
popa
into
mov
pop
jle
xlat
outs
mov
fs
dec
repnz
jl
pop
dec
xor
addr16
pop
dec
jno
inc
sbb
sub
jge
shl
bound
into
sar
(bad)
adc
gs
inc
mov
and
xor
daa
mov
and
pop
sbb
pop
xchg
ret
xor
imul
sbb
pushf
repnz
mov
bound
in
mov
xlat
cmps
lock
scas
arpl
lock
inc
cmp
shl
inc
or
js
sub
cli
jns
xor
outs
fcomp
push
inc
xchg
int3
jno
test
movs
pop
mov
and
imul
sub
jp
retf
mov
push
mov
stos
sub
mov
jmp
arpl
out
jl
and
js
pop
pop
es
int
inc
lods
sub
or
mov
mov
mov
popf
imul
or
nop
mov
cmc
lods
mov
fst
push
jnp
sub
push
inc
mov
mov
and
outs
sbb
push
adc
jge
popa
rep
sbb
cmp
test
add
sar
or
dec
pop
retf
mov
inc
push
(bad)
xor
test
mov
lock
loope
movs
adc
push
or
mov
sub
aaa
jns
cmp
fisttp
jecxz
and
out
xchg
rol
xor
inc
push
mov
(bad)
jmp
fisub
push
pusha
push
(bad)
mov
in
fs
pop
mov
pop
adc
xor
inc
test
or
sbb
push
and
test
sar
push
jns
jmp
fstp
and
cmps
xor
pop
stos
push
add
rcr
sbb
ins
sbb
mov
lea
or
stc
shl
lock
cs
aaa
pop
cmp
jecxz
jl
loopne
hlt
(bad)
fdivr
xor
xchg
std
cdq
pop
pop
mov
neg
movs
mov
rol
test
into
sbb
sbb
dec
and
mov
int3
lods
mov
stc
cmp
inc
push
fcomp
(bad)
in
jp
mov
retf
popa
movs
xchg
inc
shl
dec
cmp
nop
outs
xchg
pop
push
dec
(bad)
jle
inc
add
sbb
sub
cmp
lea
aaa
mov
daa
repz
addr16
inc
test
pop
outs
mov
push
pop
jo
lds
mov
push
sub
shr
sub
push
retf
mov
xchg
or
cs
or
xchg
mov
push
movs
lds
jl
mov
into
rcl
adc
scas
cmps
icebp
xlat
and
(bad)
std
mov
fist
test
sub
adc
ja
es
inc
xor
test
xchg
and
dec
pop
ins
push
ret
add
sub
aaa
adc
inc
and
and
jne
fs
pop
sub
or
popa
fisub
pop
jecxz
mov
nop
outs
aaa
push
and
push
pusha
push
or
jp
xchg
push
xor
mov
(bad)
fs
fist
mov
and
nop
xchg
push
cmp
jmp
add
or
push
in
enterw
in
xor
mov
inc
adc
punpckhwd
dec
data16
mov
sub
sbb
jle
fwait
pop
lea
gs
out
pop
xor
mov
lea
push
ds
xchg
or
xor
xor
xor
test
data16
retf
ins
lea
(bad)
push
shl
mov
jl
or
fwait
add
sbb
sbb
xor
dec
pop
sbb
push
imul
loop
inc
sub
cmp
dec
inc
sbb
sahf
hlt
push
dec
push
loop
movs
push
sub
xor
stos
or
popf
test
cmps
ficomp
push
ror
je
cmp
call
into
jp
call
sbb
jno
xchg
pushf
sbb
aas
jle
movs
in
sbb
pop
jbe
rcl
retf
xor
lahf
or
push
test
push
mov
inc
cmc
sub
xchg
cld
dec
mov
sbb
push
sbb
xchg
mov
xor
fs
fdivr
cmp
out
sub
outs
(bad)
mov
(bad)
mov
inc
mov
dec
inc
shl
fild
into
or
push
or
aaa
or
xchg
and
fimul
inc
cdq
or
mov
mov
and
push
sub
iret
arpl
sbb
inc
movs
sbb
xchg
jle
mov
sahf
bnd
sub
add
inc
mov
(bad)
test
adc
hlt
cli
icebp
jns
inc
retf
outs
movs
xor
or
pop
mov
mov
out
pushf
inc
mov
rol
or
cmp
mov
out
nop
sbb
sub
rcl
enter
jmp
inc
sbb
adc
or
sbb
mov
loopne
ja
out
inc
cmp
fisttp
add
popa
inc
cmps
xchg
and
(bad)
pop
sbb
(bad)
xchg
sub
cmp
adc
movs
leave
push
push
mov
sub
std
xor
enter
inc
fild
and
movs
sub
cmp
cmp
xor
jmp
push
aam
push
jbe
(bad)
jnp
gs
add
leave
fchs
ret
adc
out
(bad)
mov
fistp
(bad)
in
into
mov
iret
(bad)
idiv
pop
fistp
cld
test
mov
ror
out
mov
addr16
in
jmp
ret
(bad)
inc
xor
xchg
mov
jb
pop
imul
push
leave
jle
out
mov
stos
dec
ds
dec
mov
sub
and
ins
rcr
fldcw
js
in
push
icebp
jle
fsubr
fwait
lea
outs
adc
mov
je
fwait
inc
test
inc
mov
lods
jle
daa
ja
sti
rcl
out
out
push
clc
bound
js
sbb
jne
xchg
cmp
jae
adc
rcl
pusha
add
adc
sbb
push
mov
ss
cmp
sub
icebp
inc
lock
add
xchg
adc
add
xor
mov
mov
sbb
mov
(bad)
xor
jb
xchg
xlat
outs
stos
scas
mov
adc
inc
mov
loop
and
mov
rcr
cld
mov
push
dec
(bad)
mov
add
inc
repnz
add
inc
rcr
in
je
adc
sbb
inc
mov
cs
jle
and
xchg
loopne
mov
stos
pop
push
inc
lds
cs
adc
or
cmps
into
cdq
xor
lds
bound
test
mov
mov
test
inc
sbb
jle
and
retf
jge
or
and
dec
pop
xchg
cld
jle
lds
jp
in
pop
inc
pop
loope
sub
jno
pop
cld
pop
xor
aam
inc
inc
sub
adc
xor
inc
out
or
jle
mov
pusha
sbb
popa
in
sbb
inc
push
call
sti
dec
adc
je
mov
stc
mov
pop
retf
movs
and
sub
inc
mov
enter
push
in
test
cmp
jnp
cmps
xchg
popa
mov
retf
rcr
cmc
shr
into
sar
cwde
xor
sub
imul
pop
cs
cdq
retf
pop
out
in
jae
or
mov
fxch
repnz
(bad)
loop
retf
sar
imul
jmp
mov
dec
mov
fst
jb
aad
repnz
ror
imul
jmp
adc
ins
push
push
xchg
mov
mov
pop
add
dec
push
lods
xor
sub
sahf
sbb
lods
sbb
sbb
loope
jge
arpl
ins
add
bound
sub
data16
movs
das
lea
sbb
je
push
(bad)
xor
adc
jae
int
adc
ror
and
pop
push
outs
out
adc
call
lea
pop
inc
sbb
mov
fwait
push
push
and
pop
sbb
mov
dec
lock
or
fcomp
ret
sub
test
pop
dec
jne
pushf
sbb
mov
outs
inc
or
dec
inc
add
xchg
inc
sbb
mov
xor
mov
retf
test
in
xor
xchg
adc
test
outs
test
sub
xchg
sub
ror
addr16
and
mov
arpl
pop
sub
ret
nop
fadd
les
sub
(bad)
mov
push
dec
mov
and
lods
into
sub
mov
(bad)
sub
pop
shr
mov
jmp
mov
sbb
(bad)
dec
or
out
xor
xor
add
add
popf
ja
ss
sub
mov
or
fstp
cmc
movs
call
popa
lock
int
aaa
pop
mov
cli
jg
(bad)
pop
pop
cdq
jae
mov
rcr
bound
mov
dec
jmp
ins
mov
jnp
call
xor
and
jle
pop
lock
outs
out
jbe
movs
icebp
cmp
scas
mov
push
xchg
scas
adc
push
fldcw
cli
sbb
pop
mov
outs
ins
mov
fimul
hlt
adc
bound
fucomi
jbe
or
mov
xchg
pop
lock
pop
fucomp
cmps
aaa
pop
sub
fwait
push
dec
ja
mov
add
mov
btc
xchg
cmps
scas
or
jae
stos
rol
jle
pop
jecxz
mov
mov
or
xchg
jno
mov
mov
xchg
jo
gs
gs
push
xor
rcl
adc
push
mov
lea
aaa
xchg
ds
(bad)
jmp
cmc
inc
and
(bad)
aam
jno
xchg
shr
enter
aam
mov
(bad)
cld
retf
or
dec
arpl
sbb
movs
test
xchg
mov
idiv
rol
outs
or
outs
dec
jmp
fs
jno
dec
repnz
sub
mov
daa
mov
mov
xchg
jno
cld
imul
fsub
adc
xchg
sbb
or
jmp
jne
inc
inc
loop
sub
mov
xor
movs
rcl
outs
adc
shr
jns
ds
into
(bad)
dec
(bad)
(bad)
rol
and
mov
dec
enter
jbe
stos
retf
push
ins
and
ins
jbe
scas
stc
int
mov
pop
out
outs
pop
pushf
fwait
popf
pop
call
push
and
mov
jmp
xchg
jmp
int3
and
push
movs
lods
adc
les
ja
mov
lods
aaa
inc
ror
or
adc
sub
arpl
jnp
mov
fisub
jge
data16
scas
sar
pop
stos
ins
xor
aas
retf
xchg
push
(bad)
fmulp
cmps
into
mov
(bad)
inc
mov
in
jns
jmp
aam
fwait
into
sti
in
sbb
in
aam
hlt
aam
mov
inc
dec
sbb
push
jmp
out
nop
xchg
mov
push
mov
mov
lods
rcl
stos
std
out
pop
sbb
mul
fiadd
mov
mov
les
xor
loop
dec
bound
jg
div
imul
cwde
inc
or
fs
test
loope
call
jmp
adc
pop
add
mov
sub
outs
cmp
js
jle
mov
sub
fdiv
jp
sbb
jge
xchg
push
(bad)
loope
dec
jl
retf
dec
sahf
je
xchg
ret
dec
cmp
shl
cdq
ss
sbb
inc
jmp
int
mov
nop
adc
dec
lods
jl
imul
mov
mov
sbb
push
cmp
je
push
or
add
push
mov
and
inc
movs
xor
and
pop
movs
jb
movs
nop
shl
lods
mov
push
lea
call
clc
and
push
fld
push
call
and
add
ret
retf
xor
aam
push
jp
(bad)
out
push
xchg
pop
mov
mov
xchg
and
xchg
inc
mov
call
sbb
mov
sbb
rcl
mov
mov
icebp
test
popf
stos
sub
(bad)
out
mov
pop
leave
cmp
mov
daa
xor
add
hlt
mov
loop
dec
aas
dec
in
idiv
add
xchg
retf
in
push
bound
mov
pop
test
inc
inc
call
sub
movs
daa
sysexit
enter
pop
xor
mov
pop
dec
ds
outs
mov
in
mov
cmp
iret
sahf
lods
inc
ja
outs
mov
dec
pop
adc
xchg
sar
data16
cwde
bound
test
test
pop
enter
sbb
ins
sbb
push
ins
test
icebp
in
or
add
pusha
xchg
sub
or
fsub
idiv
leave
inc
xor
mov
xor
in
xchg
mov
repnz
aas
sbb
outs
dec
xor
stos
dec
cmp
adc
sbb
in
mov
xchg
pop
ins
push
jnp
fstp
jnp
aad
hlt
xchg
dec
push
fcomp
jo
sub
ficomp
jbe
mov
jb
int3
mov
ins
shr
or
sub
adc
dec
sbb
js
movs
lods
cmp
jb
aad
ins
shl
pop
cmps
imul
pop
inc
push
add
ins
cdq
xor
mov
ret
add
fsub
pop
out
and
cmps
cmps
sbb
call
lds
add
sbb
mov
test
fwait
jmp
bound
adc
sbb
inc
cdq
cdq
sbb
jo
add
fistp
sub
inc
mov
inc
add
push
cmp
dec
fs
pop
sbb
cwde
pop
and
ret
dec
popw
(bad)
mov
and
mov
loope
sbb
push
sub
and
and
jns
add
inc
dec
jmp
pusha
cmp
ret
lds
mov
mov
sub
repnz
add
dec
out
(bad)
cwde
imul
add
push
add
int
shl
cmp
push
xchg
retf
dec
sub
repnz
mov
mov
sbb
xor
xor
fwait
jp
mov
jl
mov
ins
mov
data16
inc
sbb
jle
xor
into
popf
jmp
or
push
sbb
test
adc
mov
add
sbb
add
push
inc
scas
mov
xor
lods
into
loopne
ror
jmp
cmp
inc
add
or
cmp
xlat
inc
add
jle
iret
gs
xchg
sar
ror
push
call
sub
mov
iret
xor
jb
mov
lods
xor
ficomp
push
shl
mov
dec
shl
js
mov
dec
aam
mov
loope
and
das
pop
retf
xor
sbb
mov
or
xchg
test
cwde
adc
push
inc
adc
adc
sbb
or
ret
lock
xor
adc
shl
sbb
jo
add
push
xchg
imul
sub
dec
sub
mov
mov
jecxz
or
and
add
add
movs
and
or
adc
xchg
loop
mov
sub
int3
test
cs
aam
cmp
call
mov
sahf
imul
movs
or
retf
jne
inc
push
movs
ret
or
add
retf
sub
and
push
dec
push
sbb
pushf
in
mov
push
ss
cwde
jbe
add
sub
sub
and
es
fldcw
out
inc
in
ret
stc
rol
idiv
out
sar
aaa
mov
outs
arpl
adc
add
popf
dec
sub
mov
repnz
movs
sub
icebp
cmps
fwait
ror
cmp
fdiv
outs
and
xchg
lea
inc
xchg
dec
(bad)
sbb
sub
out
mov
or
in
push
xchg
mov
mov
push
int3
and
not
mov
jge
inc
(bad)
push
fcomi
ret
push
jb
in
adc
out
push
out
rdmsr
and
fstp
or
mov
pop
les
enter
inc
sub
fisttp
repnz
jb
pop
adc
inc
mov
jle
push
xor
clc
fidiv
add
dec
xor
add
inc
idiv
or
jne
movs
loope
fisubr
pop
pop
cs
nop
jnp
adc
mov
mov
mov
cmp
jecxz
pop
push
dec
xor
lock
xor
pop
ds
push
dec
sub
or
int
jmp
push
loop
ins
retf
inc
sbb
mov
dec
xchg
add
cmp
aaa
imul
jecxz
jbe
cmp
je
xchg
pop
dec
sub
add
and
sub
add
leave
jae
mov
pop
(bad)
repnz
push
jno
xor
adc
js
retf
push
mov
pop
repz
or
iret
ins
sub
dec
jle
mov
out
push
jle
addr16
adc
xchg
add
mov
push
inc
cmp
sbb
scas
jae
cli
sbb
cld
xor
in
mov
push
bound
pop
xchg
cmp
rcr
mov
icebp
mov
dec
xor
dec
leave
and
sahf
inc
or
xor
xor
push
jmp
xchg
mov
mov
or
das
ret
or
scas
or
cdq
jp
mov
aaa
sub
and
call
mov
add
daa
popa
imul
mov
mov
popf
ficomp
pop
sbb
sar
add
cdq
pop
hlt
pop
stos
mov
pop
stc
adc
xor
mov
test
cmp
mov
and
push
cmps
push
bound
pushf
pop
xor
ins
popa
aad
imul
call
cbw
je
pushf
sbb
sub
jl
(bad)
adc
stc
loope
arpl
jp
xor
repz
cdq
jecxz
jecxz
mov
pop
ss
push
xchg
push
add
stos
adc
stos
out
push
mov
sbb
int
clc
pusha
cwde
(bad)
xchg
std
xor
xchg
rol
or
ror
mov
sbb
and
inc
call
mov
sbb
movs
xchg
cmp
dec
mov
mov
imul
es
or
mov
cmp
fsub
xor
sub
cmp
hlt
ins
test
jb
iret
shl
xchg
xchg
add
int
adc
pop
lods
enter
test
dec
rol
sub
div
test
mov
sbb
jnp
cmps
mov
adc
or
sar
test
cmp
push
push
pop
fiadd
retf
popa
dec
scas
outs
sub
mov
push
jno
mov
ret
fmul
and
data16
data16
(bad)
pusha
xor
popa
test
sub
imul
mov
(bad)
call
cli
fimul
cwde
aaa
push
pop
dec
sbb
xlat
addr16
dec
push
lea
and
or
loope
or
retf
pop
or
shl
mov
xchg
retf
adc
mov
push
stos
adc
(bad)
sbb
inc
adc
scas
sbb
jb
pop
dec
xchg
push
fimul
int
pop
jae
retf
add
cs
mov
mov
inc
sub
(bad)
sbb
fs
test
(bad)
je
pop
out
mov
push
shr
mov
shl
mov
aam
in
ins
inc
fld
inc
addr16
sbb
sti
and
sub
and
jge
xchg
mov
xchg
add
int
mov
mov
pop
aam
xchg
xor
mov
cmp
cmp
pop
push
lods
mul
pop
mov
jae
loope
popa
adc
jbe
push
rcr
mov
ret
push
adc
or
enter
inc
xor
loopne
out
inc
sub
mov
or
pop
pop
loope
sbb
dec
ins
sub
enter
xchg
mov
(bad)
adc
pop
data16
fldcw
imul
pop
mov
or
push
cmps
pop
add
pop
xchg
loop
or
pop
xchg
add
add
ins
sbb
jg
and
cwde
lea
xor
ja
add
loope
inc
int
sbb
jge
mov
sbb
add
xchg
in
sbb
stc
mov
push
out
cmp
call
xchg
push
sbb
sub
fisttp
idiv
push
mov
ret
(bad)
and
cmp
les
repnz
aam
pop
lods
xor
and
ret
xor
test
cmps
lds
addr16
or
sub
mov
iret
push
pushf
xchg
adc
(bad)
push
scas
mov
hlt
sub
sbb
int
or
aaa
call
daa
cmps
test
test
add
push
scas
rcr
out
leave
dec
mov
and
movs
into
stos
sbb
push
cmp
gs
sub
jmp
mov
cdq
jle
cld
mov
sbb
mov
pop
or
mov
inc
xlat
xlat
ret
fld
xor
sbb
dec
mov
loop
sbb
inc
xor
and
jmp
hlt
sbb
push
sbb
movs
call
sub
add
(bad)
mov
imul
inc
sbb
push
mov
(bad)
or
fldcw
dec
sbb
xor
inc
sub
or
mov
push
xchg
ret
lahf
lock
ret
jp
movs
(bad)
or
dec
push
adc
pop
fnsave
mov
inc
aaa
push
in
mov
mov
push
xor
dec
jnp
push
push
pop
repnz
ror
aam
and
mov
icebp
add
jo
test
mov
adc
xchg
pop
retf
mov
jns
(bad)
mov
sub
and
bound
add
pop
sbb
imul
icebp
into
or
or
movs
sbb
dec
or
xor
xchg
inc
add
or
jns
sar
ins
ficomp
mov
jbe
mov
or
sbb
mov
test
pushf
and
(bad)
idiv
mov
cmp
jp
fstp
out
sub
fucomip
out
in
and
mov
retf
jns
mov
or
ds
aaa
jl
xor
adc
push
and
jmp
repnz
xchg
gs
fcomi
push
and
bound
lea
test
(bad)
cmp
lea
mov
aaa
lock
sub
dec
mov
adc
pop
push
sti
rol
in
inc
and
(bad)
xchg
imul
sub
xchg
mov
mov
repz
pcmpgtw
into
or
or
push
xor
int3
aad
test
bound
into
les
cmp
jecxz
and
dec
(bad)
out
jmp
icebp
out
inc
jbe
mov
lahf
scas
cwde
int
outs
inc
pop
fistp
push
cmp
sar
jo
xor
rol
pop
(bad)
mov
(bad)
mov
sub
cmp
inc
mov
mov
cmp
push
pop
pop
loopne
pop
and
and
ins
es
test
(bad)
mov
cmc
clc
sub
imul
je
xor
add
mov
pop
fnsave
mov
(bad)
imul
mov
loope
jne
and
int3
in
push
mov
add
sub
loopne
repz
into
scas
inc
aaa
cs
add
fs
add
push
daa
(bad)
xlat
arpl
cmp
ds
or
(bad)
jne
das
pop
and
and
xchg
and
xchg
inc
inc
xchg
add
mov
cmps
add
sub
cs
xchg
push
scas
xchg
and
loope
xor
xor
dec
inc
and
jae
or
int3
push
movs
fs
into
or
jge
movs
xor
sahf
mov
mov
mov
pop
pop
push
in
push
(bad)
pop
adc
pop
and
cwde
dec
sub
fs
dec
outs
imul
fimul
call
sbb
dec
cmp
arpl
or
ror
push
xor
push
(bad)
jmp
int
imul
rcl
jp
sbb
retf
loope
push
lods
in
jb
push
jle
and
mov
jp
sbb
scas
add
in
xchg
lds
mov
sbb
and
pop
ret
xor
mov
cdq
mov
push
movs
sub
push
jmp
test
xor
jge
and
or
sbb
(bad)
sub
xchg
jno
shr
adc
mov
(bad)
shl
imul
dec
xor
xchg
pop
popf
dec
out
jmp
ja
je
ds
cdq
add
mov
inc
test
loop
mov
imul
repnz
sbb
adc
test
pop
jns
and
adc
jae
xor
mov
jg
xchg
cs
mov
fiadd
xchg
push
das
add
in
cmp
retf
and
cmp
sbb
cmp
icebp
and
adc
in
movs
leave
adc
pop
dec
out
pop
jo
in
adc
in
xchg
in
rcl
adc
inc
mov
jecxz
ins
mov
(bad)
stc
test
outs
hlt
fst
js
sar
ficomp
fstp
cdq
push
add
xor
xor
adc
xchg
push
add
mov
dec
mov
movs
int3
cmp
mov
dec
pop
xchg
and
pop
bound
and
and
ins
mov
add
iret
mov
fstp
in
ret
call
pop
add
mov
xor
outs
sahf
iret
mov
int
in
and
inc
dec
cmps
daa
adc
(bad)
into
push
es
ins
xchg
aam
sub
add
adc
jne
das
pop
retf
clc
and
rcl
adc
jg
sbb
inc
cmc
sbb
(bad)
cld
sub
push
(bad)
jnp
retf
fyl2xp1
in
shl
jae
jmp
cld
scas
inc
cdq
or
sub
sub
add
xchg
xchg
mov
mov
lea
stc
sub
mov
lods
hlt
mov
loope
cmp
adc
sub
add
jb
loope
lods
sbb
movs
mov
mov
nop
push
xchg
gs
mov
jns
ficom
movs
push
fstp
loop
push
mov
in
loop
aas
movs
or
push
xchg
mov
xchg
pop
add
scas
dec
stc
enter
xchg
nop
fs
or
jge
ins
ret
dec
(bad)
jae
data16
enter
and
shr
out
lods
fdiv
sub
popf
daa
mov
fimul
mov
(bad)
pop
test
into
sti
jge
sti
mov
jge
xor
sub
clc
xchg
jae
in
inc
sbb
call
push
movs
rcr
sbb
scas
rol
and
nop
popa
or
hlt
mov
js
ins
imul
cwde
scas
xor
test
cmp
arpl
imul
(bad)
stos
fnstcw
or
pop
mov
ret
sub
rcr
inc
sbb
mov
xchg
mov
mov
test
in
mov
sbb
retf
cmps
js
in
sub
loopne
jb
jmp
sub
pop
dec
fcmovnu
or
cmp
push
xor
ins
push
and
adc
pop
repz
jle
daa
stos
jns
popf
pop
imul
dec
xchg
cli
mov
pop
xchg
das
lds
rol
je
jne
xor
mov
scas
ins
xchg
mov
shl
sbb
sbb
dec
fucomip
lea
aas
icebp
jbe
and
push
je
and
cmps
xchg
fstp
sbb
(bad)
mov
sbb
rcl
add
dec
inc
or
mov
add
mov
retf
sub
sbb
sub
or
jg
cmp
arpl
es
loopne
push
inc
sbb
and
je
or
call
ja
hlt
dec
sub
dec
push
pop
jnp
xchg
ret
inc
mov
mov
jns
sub
add
mov
out
in
jno
mov
xchg
pop
inc
adc
and
and
xchg
and
call
jmp
popa
push
out
cli
movs
shl
or
dec
mov
ror
add
mov
mov
pop
repnz
sahf
inc
xor
test
xchg
or
sub
leave
clc
cwde
xor
xor
test
aam
inc
dec
neg
pop
clc
scas
pop
ins
jmp
fstp
(bad)
mov
hlt
lahf
mul
(bad)
aaa
pop
sahf
int
out
cs
mov
les
shl
fisubr
sbb
jb
lods
test
sbb
add
jo
inc
sahf
xchg
sbb
sar
fcom
xchg
fbld
adc
inc
or
add
xchg
int3
inc
sub
mov
xabort
dec
push
sbb
test
sbb
bound
jns
xchg
ds
outs
pop
sub
aaa
pop
outs
cdq
cs
int
movs
xchg
push
sbb
arpl
fidiv
add
xchg
or
gs
jne
loop
push
sbb
fwait
inc
scas
inc
and
mov
int3
pop
jecxz
jb
arpl
adc
xchg
add
xor
in
pusha
movlps
mov
stos
in
stos
fwait
lods
fwait
cmp
int3
xchg
setnp
cdq
jo
(bad)
xor
outs
retf
fistp
xchg
jb
mov
enter
inc
cs
dec
sub
(bad)
lock
nop
or
sbb
fidivr
cmp
xor
pop
adc
fcomp
pop
imul
pusha
or
xlat
loop
mov
adc
mov
cmp
sub
adc
rdmsr
sub
fs
dec
das
pop
not
cwde
cmps
pop
xchg
in
mov
ins
fldz
xchg
sbb
jne
cwde
sub
cmp
xchg
jb
mov
cmps
fidivr
test
iret
leave
sbb
lock
jns
(bad)
jle
mov
inc
out
mov
mov
neg
mov
scas
sti
sub
cmps
push
out
add
inc
leave
push
jle
xchg
mov
sub
add
adc
fsubr
or
sbb
dec
div
retf
iret
stos
iret
jbe
frstor
ret
xor
mov
rol
and
aam
mov
xchg
les
mov
scas
cmp
pusha
mov
xchg
leave
shl
xchg
mov
pusha
sbb
adc
fld
fdiv
inc
mov
jl
pop
jbe
jns
stos
mov
jb
inc
pushf
sub
dec
(bad)
dec
dec
pusha
mov
dec
jno
enter
mov
sbb
fbstp
shl
inc
xchg
bound
cwde
mov
push
sbb
add
test
or
movs
inc
loopne
iret
test
push
cmp
mov
retf
xor
mov
adc
adc
push
inc
test
mov
fcmovu
mov
int
sub
push
leave
ja
xor
mov
adc
xor
adc
xor
adc
inc
inc
mov
dec
push
xor
ins
sahf
add
jp
fcomip
shl
jnp
shl
mov
push
js
fimul
or
inc
clc
mov
add
cdq
addr16
mov
repz
repz
je
add
cmps
dec
dec
movs
or
add
jb
arpl
mov
or
mov
pushf
push
fwait
enter
adc
inc
jge
push
sub
bound
xchg
scas
mov
mul
xor
inc
aad
dec
repnz
or
sbb
in
daa
ja
xchg
sub
popa
retf
inc
call
mov
add
push
mov
mov
outs
fnstsw
out
outs
cld
pop
outs
lods
std
sar
(bad)
mov
mov
out
pop
out
test
and
push
repnz
xor
sar
out
ss
mov
adc
or
add
push
fnstenv
sbb
cmp
mov
cwde
icebp
je
mov
test
jns
lock
das
mov
leavew
xor
test
push
add
mov
sbb
mov
jae
popf
outs
mov
mov
mov
lds
add
dec
ret
dec
dec
mov
icebp
xor
xor
rcl
xchg
lock
push
push
les
fsub
mov
movs
dec
inc
sbb
sub
mov
popa
(bad)
pop
outs
stos
sbb
jbe
comiss
fisubr
jbe
js
dec
mov
stos
inc
push
dec
not
xchg
icebp
stc
movs
nop
sbb
sbb
sub
ins
jmp
push
sbb
dec
inc
push
jmp
leave
mov
push
outs
je
clc
nop
int
push
push
lahf
retf
in
pop
movs
sbb
ret
jbe
mov
pusha
xor
dec
popa
mov
xor
mov
mov
cmp
dec
fimul
sti
fiadd
fs
mov
ins
fmul
add
xor
pop
add
pop
pop
sete
fwait
stos
das
cmp
adc
push
gs
iret
push
pop
aam
cs
push
pusha
pusha
adc
dec
push
jp
fnsave
cdq
sbb
std
data16
lods
xchg
jge
outs
cld
dec
xlat
stc
xchg
sbb
xchg
lods
adc
jg
adc
ja
scas
daa
xor
xchg
add
or
xchg
mov
adc
sbb
pop
cdq
and
xchg
pop
and
mov
cmp
jmp
rcr
or
jge
ror
push
sbb
fimul
xor
pusha
cmp
ss
not
(bad)
leave
pop
or
mov
inc
ret
sub
cmp
fs
movs
iret
int3
adc
pop
(bad)
and
iret
mov
push
iret
ds
cmp
push
ins
pop
mov
mov
pop
ror
jmp
xchg
xchg
adc
xchg
(bad)
dec
xchg
mov
xchg
or
dec
in
cmp
inc
std
jnp
dec
xchg
mov
(bad)
loope
aam
push
scas
dec
mov
push
das
dec
gs
xchg
jg
push
inc
sbb
movs
sub
pop
pop
cwde
aam
mov
mov
pushf
xchg
dec
pop
test
inc
push
mov
add
xor
test
or
es
push
xor
add
adc
xchg
lods
or
or
mov
pop
fs
popa
mul
int3
pop
test
imul
mov
add
ins
xor
push
outs
adc
les
lods
or
lods
xor
bound
mov
jnp
div
jnp
hlt
lahf
inc
out
popa
loopne
add
mov
jg
leave
hlt
xor
das
mov
cwde
or
pusha
adc
add
in
inc
xor
cmp
sub
cmps
fidivr
mov
(bad)
push
push
push
sbb
gs
ins
mov
add
pop
inc
mov
mov
sub
loope
push
ja
inc
iret
or
movs
test
sbb
push
mov
push
arpl
mov
xor
jle
sahf
sti
ja
jbe
xchg
dec
sar
(bad)
pop
(bad)
jmp
into
std
stc
xchg
jmp
jmp
in
iret
ss
or
fcomp
ds
repnz
push
arpl
add
std
loope
adc
xor
jae
pop
sub
jp
jne
push
ret
adc
or
sbb
xlat
mov
mov
ret
xchg
cmp
mov
mov
dec
test
sbb
cdq
ret
mov
pop
dec
arpl
or
mov
cdq
mov
or
int
pop
or
and
jns
jo
or
cmp
and
and
mov
lock
movs
sbb
pop
pop
retf
cmp
xchg
mov
sub
jecxz
xchg
pop
mov
retf
pop
dec
lock
pop
sub
in
and
pop
jg
cmp
clc
lock
int
xor
outs
push
inc
repz
cmps
sbb
into
add
adc
icebp
adc
cli
or
icebp
dec
jns
movs
xlat
mov
add
adc
bound
xchg
ds
in
xchg
and
push
jno
xchg
in
rep
mov
cs
pop
mov
mov
out
(bad)
scas
and
xchg
sbb
(bad)
mov
push
dec
cld
lods
push
push
ds
dec
push
mov
cmp
adc
ret
sub
hlt
aas
xchg
mov
cwde
mov
inc
fucom
sbb
mov
lds
(bad)
into
std
jbe
cld
jns
mov
mov
loope
pop
(bad)
out
mov
cmps
dec
xor
sub
aas
xchg
push
stos
jle
mov
mov
pop
push
jno
pusha
adc
movs
mov
adc
pop
sbb
inc
or
popa
cmp
pop
pop
lods
rol
fadd
jle
test
inc
arpl
push
daa
popf
pop
fs
sbb
fdivr
out
inc
std
ss
ret
fwait
push
icebp
push
cwde
data16
and
dec
dec
and
movs
xchg
add
or
repz
scas
clc
xor
dec
xor
outs
and
mov
push
jae
pop
pop
sub
arpl
adc
jl
sbb
rcl
xchg
jg
mov
adc
adc
jmp
cmp
ja
sub
pop
mov
iret
(bad)
jmp
xor
ins
jnp
cmp
sbb
xor
lods
ret
cmp
rcr
or
sbb
bound
les
push
pop
ss
das
das
daa
clc
js
dec
addr16
stc
or
add
std
jg
add
push
ins
push
ror
call
push
pop
outs
ficomp
(bad)
ror
ins
dec
std
mov
or
adc
sub
and
clc
sub
pusha
cli
outs
shr
xchg
movs
cmp
dec
inc
lods
bound
cld
loopne
mov
and
inc
cld
shl
xchg
jnp
jns
xchg
mul
adc
enter
add
pusha
cmps
xor
shl
fnstsw
inc
loopne
push
pop
dec
and
rcl
or
inc
dec
inc
inc
xchg
xlat
ret
test
mov
or
call
mov
inc
adc
dec
jb
pushf
sub
jmp
pop
gs
pop
retf
pop
adc
inc
dec
(bad)
mov
sbb
call
inc
sbb
rol
sti
outs
and
lods
(bad)
dec
xchg
xchg
jbe
sbb
(bad)
repnz
nop
pop
leave
fs
jge
into
mov
aad
iret
aam
adc
repnz
lock
mov
fcmove
inc
cmc
movs
mov
xchg
lock
aad
leave
push
shl
popf
loopne
aas
jg
cmp
pop
in
enter
call
push
xor
mov
sub
cmps
push
cs
fisub
aad
ins
pusha
mov
inc
inc
(bad)
ficomp
aam
xchg
std
xor
lds
mov
pop
xor
add
push
add
mov
pop
inc
out
and
icebp
push
xor
mov
push
cmp
jnp
jp
test
pop
sub
push
xchg
ds
icebp
stos
rol
in
retf
dec
ret
fisttp
sub
mov
push
adc
or
scas
add
lds
and
sub
xchg
loope
ss
stos
push
xor
mov
cmp
or
pop
mov
aaa
jge
loop
in
sbb
xchg
js
mov
mov
add
dec
dec
or
sbb
test
addr16
sub
cmc
div
call
ss
test
pop
test
mov
mov
bound
stc
inc
pop
sbb
cmp
lea
in
fcomp
and
fcmovnb
cli
pop
cmc
loop
pop
add
retf
idiv
xchg
and
into
xchg
movs
mov
cmp
mov
push
mul
rcl
in
inc
pop
cmp
jns
adc
pop
icebp
out
and
jge
mov
out
jmp
jl
shl
sub
jmp
ret
fsub
jg
mov
adc
jae
fcmovb
xor
test
addr16
xor
cli
and
arpl
ror
dec
sbb
call
jg
pop
lock
xor
test
push
ror
gs
test
ds
(bad)
enter
mov
sbb
xor
inc
cwde
cmp
or
mov
dec
inc
sbb
mov
loopne
test
xor
add
div
push
xchg
and
cmps
nop
xor
adc
jmp
inc
mov
mov
cmps
(bad)
mov
jne
push
inc
sbb
mov
jmp
call
dec
cmps
push
xor
push
xchg
scas
sub
das
mov
aas
dec
nop
xchg
loop
(bad)
lock
rcr
hlt
lea
xor
dec
ds
pusha
dec
xchg
fidiv
in
xor
sbb
popa
es
mov
add
mov
(bad)
int3
leave
add
xchg
shl
add
out
xchg
std
adc
push
pop
sbb
(bad)
cld
scas
les
push
maxps
push
stos
test
(bad)
jg
popf
test
fisttp
push
push
pop
sbb
repz
push
out
cmp
loopne
push
inc
(bad)
mov
jp
and
sub
push
pop
cdq
test
adc
mov
mov
add
icebp
out
gs
push
jecxz
fidivr
ins
mov
shr
mov
inc
xor
sub
les
add
mov
xchg
ds
mov
ss
sbb
lahf
inc
sbb
add
push
fadd
neg
mov
(bad)
mov
arpl
cs
mov
out
inc
xor
xlat
mov
mov
add
(bad)
mov
lods
push
or
adc
sbb
adc
push
js
pop
aam
call
popf
movs
ficomp
xchg
push
jae
mov
or
imul
dec
retf
inc
jae
lods
gs
add
js
adc
mov
mov
push
nop
cmp
xor
cwde
add
hlt
mov
jo
adc
mov
mov
inc
xor
bound
sbb
mov
(bad)
bound
je
mov
daa
scas
popf
arpl
xor
test
stc
clc
repz
push
std
xchg
ja
lds
mov
xor
fstp
fsubr
(bad)
pop
fldl2t
pop
fucomp
pop
fsubrp
sahf
pop
sub
xchg
(bad)
fldenv
jp
(bad)
pusha
jecxz
xor
mov
addr16
or
pop
add
addr16
addr16
pop
lea
scas
js
aas
hlt
inc
jmp
(bad)
shr
mov
jbe
pop
push
cmp
leave
shl
pop
(bad)
cmp
aam
sar
scas
inc
xor
data16
pop
mov
dec
mov
cmp
add
rcr
jl
ins
jecxz
xor
pop
arpl
dec
mov
inc
pop
or
cmc
test
cmp
lods
dec
imul
mov
lods
jnp
lea
pusha
jmp
adc
cs
pop
outs
out
fst
pop
mov
xlat
mov
dec
daa
mov
xchg
mov
push
ret
jbe
test
and
movs
test
mov
fwait
or
in
mov
iret
jmp
push
sub
or
lock
ins
imul
enter
pop
out
mov
or
ficom
push
not
out
sub
daa
pop
or
js
mov
retf
sbb
jns
push
mov
gs
retf
sbb
icebp
fwait
lods
mov
aas
push
int
push
loopne
dec
stos
outs
rep
add
cmps
(bad)
cdq
arpl
call
mov
push
(bad)
dec
not
xchg
out
sbb
inc
sbb
xchg
mov
sub
mov
repnz
mov
inc
repz
push
jecxz
and
jmp
xor
jmp
je
sbb
repz
dec
imul
push
pop
ss
sbb
add
push
addr16
jnp
pop
sbb
cmp
es
outs
push
or
ins
jo
xor
(bad)
jle
in
or
mov
nop
xchg
dec
add
dec
xchg
fistp
pusha
(bad)
hlt
cmp
mov
sub
inc
loope
sub
fwait
add
pop
mov
sbb
sahf
jl
js
xchg
mov
shl
xor
iret
add
sub
lahf
cmp
fstp
mov
enter
stos
stos
xor
iret
test
sbb
imul
or
daa
inc
int3
sub
jns
jmp
xchg
pusha
dec
movs
imul
xor
mov
(bad)
fcomp
outs
movs
mov
jne
push
lds
repnz
cwde
addr16
jle
xor
xchg
fs
dec
add
xor
jo
cmp
in
and
inc
sbb
int
scas
scas
and
out
dec
jg
ds
out
xor
sbb
push
xchg
imul
frstor
jns
sub
ins
cmp
clc
or
pop
mov
dec
daa
dec
adc
mov
rol
dec
jmp
fnstenv
inc
and
icebp
push
xor
ret
and
pop
std
loop
fld
or
fldcw
fistp
fcmovne
(bad)
popf
jbe
push
fsub
cmp
loop
push
adc
xchg
in
mov
ins
gs
cs
sbb
sub
dec
dec
xchg
jnp
push
sub
das
(bad)
and
adc
cmc
popa
and
mov
(bad)
jg
es
or
and
sub
iret
aas
push
mov
jns
push
xor
scas
sub
xlat
scas
int3
and
push
in
lods
and
jae
jmp
cmc
out
or
xchg
rcl
xor
mov
cmp
adc
test
jmp
and
and
cli
stos
add
pop
xchg
push
or
push
rol
enter
repz
add
adc
push
xchg
lea
inc
ja
dec
mov
stc
mov
or
movs
ret
loop
(bad)
mov
mov
mov
adc
daa
cwde
in
add
pop
mov
xchg
sub
cs
jecxz
mov
and
pop
hlt
mov
push
dec
movs
shl
int3
push
push
cld
arpl
pop
cmp
popa
int
mov
cwde
and
cld
pop
xchg
mov
jae
inc
dec
call
mov
sbb
cmps
sbb
xor
dec
xor
arpl
sbb
sub
push
xchg
cwde
stos
pop
xchg
push
fdivp
ss
sub
add
adc
cmp
out
shl
inc
xchg
mov
adc
sbb
and
inc
fmul
add
iret
mov
jnp
mov
add
sub
jge
xor
ds
dec
movs
retf
and
push
loop
cmp
jg
inc
leave
dec
mov
inc
push
in
or
sahf
es
cmp
mov
sbb
test
test
inc
xor
aad
aam
dec
cmc
(bad)
sub
add
pop
mov
or
add
cmp
or
mov
jmp
das
xor
push
daa
mov
je
mov
mov
mul
cmps
lods
pop
sbb
xor
mov
cs
fist
mov
inc
out
imul
ror
lods
movs
cwde
pop
bound
nop
adc
mov
dec
or
inc
imul
sbb
nop
adc
push
mov
loop
mov
pop
or
lea
adc
sub
xchg
fadd
stos
test
jnp
push
sub
xor
cmp
aam
ja
call
or
xlat
cmp
aas
mov
or
bound
xor
xor
push
cmp
ins
pop
or
int
mov
dec
pop
fnsave
ins
pop
int3
std
push
pop
sbb
push
dec
enter
test
inc
mul
std
loopne
pop
and
mov
or
add
lea
jo
inc
sbb
lods
dec
imul
mov
out
movs
shr
outs
adc
cmps
ficomp
das
into
jg
jg
mov
loop
popa
jl
mov
retf
adc
push
push
ja
and
js
lds
mov
in
es
int3
adc
pop
sbb
lock
neg
push
movs
mov
add
sbb
ret
cmp
test
sub
shl
shr
std
add
icebp
into
pop
jmp
mov
sub
stos
pop
pop
xchg
lods
stos
loop
into
xor
gs
pop
push
cmp
movs
lods
mov
mov
mov
(bad)
je
cs
pop
or
pop
call
sbb
std
mov
imul
movs
int
rcr
xor
ret
call
lds
or
cmp
in
xchg
adc
jns
stc
jl
test
lds
dec
jl
dec
mov
retf
int
lds
pop
mov
lods
mov
xor
pop
cld
nop
aam
shl
or
out
retf
call
icebp
jne
std
cmps
inc
not
jle
call
pop
jbe
je
pop
xchg
add
xchg
movs
push
push
and
or
clc
and
inc
test
cmp
sbb
cmp
mov
inc
sbb
add
popa
inc
shr
mov
hlt
clc
push
xor
retf
in
and
inc
mov
push
inc
inc
das
add
mov
aam
adc
f2xm1
mov
fs
call
xchg
mov
push
xor
push
xlat
std
retf
xor
call
xlat
adc
shl
(bad)
es
loopne
daa
shl
ret
xchg
jl
enter
mov
pop
int3
ja
cs
add
pop
mov
sbb
imul
in
adc
adc
jae
jmp
pop
push
xchg
cmps
fs
dec
xor
cdq
and
jo
sub
xchg
enter
xchg
pop
lea
inc
popf
add
cmp
xor
xor
or
push
aas
inc
mov
add
cmc
lods
sbb
mov
cmp
pop
imul
jnp
or
in
loopne
aaa
cmp
(bad)
test
xor
iret
fs
mov
sub
dec
retf
ss
jae
ror
outs
or
push
jno
sub
cmps
add
jecxz
aad
xchg
or
scas
mov
add
xchg
add
mov
cmp
jno
adc
aam
pop
mov
mov
and
cmp
xor
dec
shl
pop
or
mov
jae
ja
inc
xor
sbb
stc
out
add
mov
not
jge
jnp
loop
lahf
js
or
js
and
or
mov
ja
pushf
out
dec
lock
retf
sbb
(bad)
mov
xchg
pusha
or
mov
push
gs
stc
ficomp
jl
popf
fdivr
div
in
jbe
pop
dec
arpl
mov
(bad)
cmp
ds
xchg
or
jge
jns
sar
lock
fnsave
cld
and
add
mov
mov
(bad)
repz
push
daa
sti
(bad)
jmp
mov
jecxz
neg
shr
addr16
lods
jne
dec
xchg
bound
sbb
ds
fistp
dec
xor
mov
pop
or
imul
vmovhpd
mov
and
pop
jae
hlt
je
(bad)
dec
jno
xchg
xor
xchg
xchg
mov
lock
and
xor
test
outs
cmp
lods
or
popa
in
xor
pop
ror
test
sub
sub
int3
(bad)
data16
dec
ror
add
push
cmp
daa
sbb
dec
push
push
mov
shl
mov
pop
retf
out
sbb
loope
dec
retf
dec
sbb
imul
adc
int
fild
sub
adc
hlt
push
jge
(bad)
mov
dec
test
xor
cmp
jnp
push
cmp
imul
inc
mov
xor
nop
pop
pop
xor
or
jns
cld
test
mov
pushf
mov
pop
lods
jl
les
fld
add
pushf
ja
push
or
jbe
lock
cmp
push
ins
jno
scas
dec
outs
fucompp
cli
les
sbb
pop
mul
xchg
sbb
inc
sahf
or
pop
jmp
mov
cmp
push
or
stos
loop
imul
test
push
xor
je
push
add
and
sbb
inc
stos
dec
adc
in
scas
adc
repz
xchg
ret
test
dec
neg
xor
xchg
sbb
loopne
mov
xchg
int3
aaa
mov
jle
push
pusha
sub
xor
bound
hlt
inc
xor
and
movs
fidivr
add
and
xchg
(bad)
or
pop
cmps
cmp
jns
jbe
call
scas
fs
stc
ins
(bad)
jp
sahf
inc
int3
dec
push
or
mov
aas
mov
mov
sbb
outs
les
add
scas
inc
cdq
cmp
jne
sbb
sub
mov
or
fucompp
pop
sub
outs
xchg
sbb
pop
sbb
fnsave
adc
lds
inc
sub
inc
jne
arpl
test
(bad)
cmps
mov
push
shr
sub
pop
cld
xchg
nop
pop
(bad)
push
jbe
loop
and
mov
cmps
and
push
xchg
jmp
cdq
mov
dec
add
mov
lods
sbb
mov
push
loop
sbb
dec
sbb
fs
enter
mov
xchg
pop
pop
xchg
mov
fbld
and
xor
(bad)
gs
lods
lea
cmp
rcl
arpl
inc
mov
cld
std
xor
and
shl
mov
mov
ret
loop
test
cmp
xor
retf
out
arpl
adc
dec
and
inc
fwait
jecxz
xchg
pop
(bad)
or
test
repz
sub
pop
jp
push
fsubr
pop
mov
nop
inc
shl
cmps
test
cmp
fsubrp
into
jnp
add
and
adc
and
lds
sbb
arpl
adc
jnp
mov
mov
jmp
movs
adc
sub
xor
xchg
cmps
sti
retf
std
sub
pop
out
(bad)
cli
leave
(bad)
lahf
lahf
outs
jle
call
mov
(bad)
jbe
mov
xor
retf
outs
mov
adc
mov
inc
xor
mov
adc
add
loopne
test
or
sbb
je
dec
lods
pop
add
mov
or
inc
push
or
jge
push
inc
xchg
cmp
imul
addr16
jg
out
pop
or
or
mov
jmp
fistp
sahf
lahf
mov
jp
sub
xor
test
add
in
repz
shl
dec
imul
push
mov
mov
jle
pop
dec
jnp
mov
fimul
addr16
mov
(bad)
dec
mov
adc
and
ret
je
mov
or
gs
adc
xor
or
lock
cli
fisttp
mov
push
pusha
push
test
stc
add
ja
inc
sbb
jnp
or
dec
je
in
test
int3
outs
and
sub
mov
push
or
mov
xor
loop
push
pop
mov
fwait
dec
sub
jl
out
xor
pop
jne
mov
retf
dec
pop
mov
cdq
adc
sbb
adc
popf
fidiv
sub
cld
mov
das
ret
pop
pop
pop
mov
cmp
test
or
ins
adc
dec
xor
in
dec
pop
mov
movs
lds
fmul
popf
je
scas
imul
or
popa
mov
jno
xchg
out
adc
arpl
ret
(bad)
jmp
inc
sbb
xor
dec
gs
pop
lock
call
out
call
mov
jno
push
and
cdq
mov
or
push
movs
pop
sub
push
xchg
ret
dec
jecxz
fldenv
sub
xor
mov
call
imul
lods
add
or
mov
adc
inc
cwde
pop
cmps
jecxz
fist
movs
arpl
and
lds
add
xchg
mov
inc
test
push
stos
fimul
outs
xchg
test
pop
pusha
and
mov
cmps
pop
and
sbb
push
idiv
add
dec
fwait
sbb
pop
pop
mov
and
sub
ret
mov
mov
inc
pop
and
jmp
(bad)
mov
mov
(bad)
jle
push
cmp
dec
xchg
jnp
lock
rcl
dec
mov
dec
sti
inc
xchg
cmp
inc
dec
sbb
cld
sbb
cmp
sbb
jns
shl
sbb
or
dec
or
add
nop
arpl
std
add
and
mov
jno
inc
adc
mov
call
daa
dec
clc
dec
adc
pop
dec
fdiv
out
xlat
shl
outs
movs
adc
inc
loopne
movs
sub
ja
inc
shl
mov
arpl
sub
jmp
(bad)
cmp
or
add
ins
shl
sbb
inc
iret
jo
push
pop
and
dec
outs
xor
mov
stc
push
jmp
jg
or
inc
sub
sub
cmps
or
cdq
push
sbb
jl
or
xchg
movs
xchg
push
adc
shl
scas
pop
mov
ins
sub
ja
fstp
icebp
push
cli
mov
jnp
out
mov
out
out
dec
in
cmps
pop
out
or
inc
ins
lea
xor
mov
popa
aam
mov
mov
xchg
out
in
jle
stos
jno
stos
and
dec
xchg
inc
mov
in
fcmovne
shl
cmp
frstor
push
sbb
stos
sub
inc
add
push
mov
or
sahf
(bad)
ror
xchg
(bad)
cmp
aad
arpl
add
leave
push
sbb
or
imul
cmps
fldl2e
adc
or
mov
mov
ins
idiv
push
rcr
aaa
or
sbb
les
int3
dec
test
int
xor
push
mov
imul
cmc
in
pop
jo
(bad)
aaa
jbe
pop
dec
push
sub
pop
and
pusha
adc
in
addr16
add
fldenv
xchg
scas
fidivr
mov
nop
jg
push
loop
mov
clc
xchg
dec
mov
pop
mov
xor
adc
mov
xchg
out
(bad)
jae
mov
pop
push
inc
test
mov
sub
or
clc
lds
scas
push
fst
loope
fwait
cs
sahf
or
mov
hlt
ds
in
adc
movs
add
jae
addr16
dec
jecxz
pop
cwde
pop
cmp
ret
(bad)
loop
pop
leave
cmp
test
mov
fdiv
sub
ja
adc
sahf
hlt
int3
xchg
dec
loopne
adc
stos
loope
push
pop
jnp
ins
test
imul
jmp
(bad)
ret
cmp
xchg
inc
in
das
mov
mov
into
aam
ins
push
imul
fimul
push
clc
inc
dec
jbe
aad
repnz
sub
mov
gs
mov
mov
sti
test
cmp
cs
jmp
cld
jbe
sbb
inc
test
sbb
jmp
xor
pop
push
or
sub
adc
and
pusha
jnp
mov
cmp
mov
imul
pop
and
les
test
test
in
test
int3
mov
dec
inc
push
xchg
xor
and
xor
ret
mov
and
jbe
add
jg
repz
xor
popf
mov
mov
and
lea
mov
les
push
sbb
xchg
das
gs
cmp
sub
jo
retf
mov
xchg
inc
bound
inc
ss
repz
jne
and
adc
pop
fmul
xor
inc
ds
sub
and
rcr
stos
xor
stc
mov
inc
call
ja
nop
sub
ja
mov
inc
mov
cli
inc
aas
add
push
ja
xchg
stc
pop
xchg
std
cmc
or
inc
sub
inc
jb
movs
xchg
ds
scas
push
out
cmps
mov
sub
pop
mul
cdq
mov
ds
rcl
test
das
test
int3
mov
push
mov
ja
mov
sbb
int
loope
scas
ss
stos
int
sbb
ret
test
pop
(bad)
into
inc
rcl
cld
push
jl
mov
push
inc
pop
mov
sbb
ret
mov
cmp
xchg
fstp
jge
or
loop
mov
(bad)
mov
arpl
aaa
pcmpgtd
(bad)
aad
cmc
cli
into
mov
mov
xchg
pop
sub
pop
mov
cdq
push
dec
ficom
push
je
stos
pop
inc
in
and
fnsave
dec
sbb
ror
push
sbb
ja
xor
or
(bad)
dec
shl
mov
imul
jnp
adc
sbb
stc
cmps
int
out
jb
inc
jb
test
mov
arpl
nop
dec
das
ss
jle
xor
mov
cmp
mov
mov
sub
hlt
ret
sar
cmp
pop
gs
push
and
sub
xor
fimul
pop
dec
cmps
xchg
in
shl
xor
in
test
bound
rol
or
jbe
hlt
stos
out
cwde
js
cmp
xor
mov
and
cld
inc
add
xchg
repz
les
xor
sub
jp
push
dec
add
cmc
and
cmp
stc
push
push
cmp
mov
jno
cmc
xor
and
sub
adc
mov
pusha
and
cmc
xchg
add
sub
cld
aam
outs
mov
mov
xlat
jecxz
jmp
mov
push
mov
push
lock
cmp
and
xchg
lods
pushf
je
popf
jo
int3
add
xchg
dec
mov
xor
xchg
sbb
pop
inc
cmp
mov
dec
jecxz
mov
jmp
gs
sub
fld
lock
sar
push
(bad)
in
adc
pushf
fmul
push
inc
inc
push
clc
mov
and
imul
pop
pop
and
lds
jle
cs
sub
lahf
and
sub
sub
fs
test
push
stc
or
inc
sahf
repnz
add
add
dec
jb
xchg
sub
gs
call
cmp
ret
sub
push
inc
(bad)
cmps
add
ret
adc
imul
adc
sbb
inc
int3
inc
lods
lods
mov
in
fs
dec
xor
jns
sub
lods
icebp
adc
mov
xchg
(bad)
ds
and
xor
cmp
movs
inc
mov
adc
aas
jmp
into
add
fcomp
add
mov
je
adc
and
test
fxch
pop
dec
push
xchg
dec
push
das
movs
mov
or
out
sbb
sub
jmp
pop
ins
ja
mov
ret
add
sub
mov
mov
mov
jbe
sbb
imul
mov
mov
scas
jge
daa
xor
jae
retf
pop
xlat
iret
sub
out
gs
pop
push
fs
xor
nop
enter
sub
mov
daa
add
into
repz
push
cmps
add
pusha
pop
and
xor
cmc
add
hlt
lods
out
push
daa
push
cmps
xor
xchg
pop
fidiv
sar
xchg
arpl
shl
pop
mov
xchg
mov
xlat
and
inc
or
adc
test
cmp
dec
cmp
mov
pop
(bad)
dec
jg
inc
sub
and
jle
ins
gs
cmc
ror
pop
aam
xchg
lds
sbb
xlat
stos
lods
cwde
js
xor
adc
push
jo
xchg
(bad)
dec
imul
stc
ret
push
inc
rcr
mul
test
fcmovne
fisttp
mov
mov
bound
(bad)
sar
dec
fimul
shl
cs
fsub
js
test
(bad)
call
aam
js
les
add
adc
add
or
(bad)
pop
pop
int3
mov
loop
call
sub
push
lods
mov
push
stc
mov
mov
ja
jecxz
call
mov
shl
ins
jl
cwde
pop
rcl
mov
(bad)
retf
jns
popf
out
inc
fdivr
mov
dec
aaa
mov
push
fadd
popa
rol
adc
lea
fisub
dec
adc
push
stos
lods
sbb
xor
mov
sbb
dec
outs
cld
mov
dec
call
mov
mov
xor
push
loop
push
(bad)
jbe
xchg
mov
imul
lahf
mov
jb
mov
shl
add
xchg
push
cli
addr16
aaa
fnsave
cld
(bad)
outs
jmp
jbe
jle
pop
pop
mov
pop
cdq
repz
in
xor
xchg
outs
scas
in
sbb
xchg
jp
pop
sub
xor
shl
movs
push
loope
(bad)
pushf
mov
ficomp
mov
xor
pop
mov
aad
stc
imul
dec
mov
inc
mov
push
dec
mov
pusha
fdivr
out
(bad)
mov
pop
jae
and
and
call
test
mov
repz
xor
adc
dec
mov
or
add
lock
imul
shr
sbb
(bad)
and
jmp
cmc
dec
scas
popa
cs
jno
xor
dec
jbe
mov
or
addr16
xchg
mov
test
sub
inc
test
mov
sbb
into
and
and
adc
and
or
sbb
pop
push
push
cld
retf
gs
xchg
mov
lock
pop
mov
jb
outs
dec
dec
and
int3
ror
xor
test
scas
dec
std
xchg
rcr
mov
rcr
xchg
xor
lods
cdq
xchg
adc
hlt
and
dec
pop
(bad)
push
inc
xchg
popa
int3
icebp
push
pop
or
add
sti
stc
pop
fdivr
pop
iret
cmp
dec
fucomip
jbe
das
into
in
ins
sub
pop
cmps
xchg
pop
xchg
ret
sub
cs
jp
cmc
mov
loop
or
mov
gs
mov
leave
inc
dec
xchg
pop
data16
shl
int3
retf
fdivp
mov
xlat
out
dec
stos
inc
mov
xchg
adc
inc
dec
out
bound
cdq
jbe
sahf
add
jle
mov
jae
std
stos
push
data16
shl
mov
ret
push
adc
push
(bad)
xor
arpl
out
xchg
imul
push
int3
sub
jno
dec
sbb
inc
ret
jbe
push
and
xor
sub
gs
mov
pop
cmp
dec
push
(bad)
xor
sbb
add
or
in
and
and
and
add
and
cmp
es
mov
mov
not
mov
(bad)
pop
jmp
test
jmp
loope
imul
clc
push
xor
or
push
sbb
push
call
jo
xchg
push
dec
xchg
iret
ret
cmp
push
dec
sub
pop
sahf
sti
outs
call
dec
rcr
loope
inc
hlt
nop
jle
xchg
add
lods
xchg
leave
repz
and
test
repnz
retf
fild
push
and
cmps
xor
add
fild
fmul
lods
cwde
jno
sbb
dec
in
and
sbb
or
sti
mov
out
pop
lds
loope
adc
ins
sub
add
xchg
(bad)
in
push
xchg
xchg
int3
adc
movs
imul
frstor
into
cs
out
popa
fstp
mov
out
(bad)
(bad)
in
mov
jne
pop
xor
push
xor
js
fistp
mov
mov
test
inc
fmul
adc
jbe
mov
dec
xor
sub
into
xor
pop
pop
cmps
repnz
push
ins
je
adc
xor
call
push
dec
cmp
int3
ss
cli
sub
aad
jo
add
and
inc
jo
imul
repnz
jge
xchg
xor
push
pop
or
pop
dec
inc
cmp
mov
jge
jno
retf
orps
ficomp
cwde
sbb
repnz
adc
pop
test
test
pop
aaa
mov
sbb
(bad)
cmp
repz
inc
imul
mov
in
scas
push
fwait
mov
test
mov
mov
pop
pop
imul
push
push
daa
(bad)
push
inc
xchg
jb
cmp
daa
loope
mov
aam
lods
sbb
jp
ror
scas
xchg
pushf
fdivr
mov
pop
add
cwde
or
mov
bound
pop
data16
neg
mov
cld
sbb
push
inc
sbb
fldenv
mov
or
add
pop
push
push
xor
icebp
sahf
cmp
and
mov
inc
leave
jnp
jno
xchg
cmp
cmp
into
test
mov
add
retf
mov
and
or
dec
test
repz
pop
xchg
xor
xchg
es
adc
cmp
test
or
ror
xchg
cmp
ror
xchg
or
sub
cdq
cli
mov
ret
xor
pop
stos
outs
pop
jbe
sub
jl
cwde
aad
mov
(bad)
int
shl
dec
ss
ret
(bad)
push
test
mov
int3
das
jno
psrlw
lock
xchg
pop
inc
inc
int
xchg
dec
add
nop
pop
fwait
jae
popf
je
add
push
pushf
push
hlt
mov
xchg
dec
neg
sub
imul
sahf
jmp
std
outs
xchg
sub
call
js
sub
dec
sub
cmp
into
inc
xor
ins
ror
sub
add
xlat
dec
or
les
clc
arpl
xchg
sub
lea
sbb
dec
popa
pop
cmp
pop
xchg
push
push
inc
jns
lock
mov
ds
bound
inc
mov
outs
lock
fsubr
and
fst
push
lods
inc
dec
xor
inc
xchg
push
in
lds
add
or
cmc
or
push
cmc
add
sahf
out
mov
sbb
jae
xchg
xor
mov
sbb
arpl
aam
cmp
stos
cmp
sub
push
and
inc
sbb
add
mov
loop
xchg
dec
cmc
cmc
ds
and
inc
mov
mov
adc
add
jp
(bad)
in
xor
loop
daa
pop
add
adc
adc
pop
inc
xchg
or
pop
adc
es
xchg
out
push
clc
dec
sahf
jl
and
xchg
sbb
xchg
stc
jbe
mov
shl
jl
cmps
(bad)
lds
mov
arpl
sbb
xchg
pop
mov
in
sub
dec
(bad)
pop
pop
movs
mov
mov
into
shl
cmps
push
sbb
lahf
jmp
call
stos
int
jb
mov
mov
pop
mov
xchg
hlt
seta
mov
shl
or
sahf
inc
or
lock
jmp
je
enter
push
cwde
dec
adc
cmp
imul
cmps
mov
in
loopne
(bad)
call
lods
loope
push
cmp
fldcw
(bad)
xor
jl
fnstcw
das
inc
adc
push
pushf
add
xchg
sbb
push
push
les
test
pop
and
cmp
loope
add
(bad)
in
add
or
ror
cmp
dec
add
jne
enter
imul
mov
into
inc
cmp
dec
or
inc
aaa
inc
inc
inc
lahf
js
cmp
dec
inc
mov
push
out
mov
int3
in
sbb
xlat
imul
neg
cdq
inc
add
and
cld
sub
pop
push
add
fwait
mov
and
or
pusha
mov
mov
stos
or
(bad)
jb
mov
push
out
xchg
fldenv
cmps
pop
div
cmp
mov
aaa
out
in
adc
xor
or
stos
scas
fnstsw
call
mov
inc
lods
mov
xor
inc
cmp
sbb
ja
dec
call
adc
jo
adc
dec
and
inc
pushf
mov
lds
xchg
out
xchg
dec
aad
loope
cmp
rcl
ret
mov
call
sti
xor
or
ror
xor
test
mov
xchg
cld
shl
stos
or
sbb
dec
hlt
enter
cmp
inc
or
xor
js
xchg
test
arpl
sub
push
mov
mov
adc
push
mov
mov
cmp
fs
dec
aaa
pusha
ins
cld
enter
cmp
add
mov
pusha
adc
push
xor
cmp
push
dec
enter
dec
popa
pop
lahf
add
xchg
test
(bad)
stos
pop
jecxz
or
adc
nop
pop
inc
ficom
cmp
pop
mov
pusha
mov
and
push
push
mov
mov
mov
pop
and
mov
cmps
rcr
mov
es
movs
dec
mov
mov
shl
dec
retf
jp
cdq
cmps
mov
adc
cmps
ret
mov
fxch
cmp
dec
mov
cmps
mov
cmc
push
adc
cmp
fnstenv
push
adc
xchg
adc
imul
shl
xchg
dec
pusha
add
stos
add
xchg
adc
or
mov
outs
ret
jl
sbb
fwait
bound
in
ret
ret
movs
mov
sbb
or
push
pop
sub
push
ret
pop
inc
xor
arpl
push
push
xor
leave
push
ins
cwde
xchg
(bad)
and
arpl
add
test
popa
cs
imul
dec
mov
pop
fs
and
pop
push
neg
sub
and
scas
mov
add
push
fcmovu
(bad)
std
and
(bad)
mov
in
ret
test
sbb
mov
stos
mov
push
jle
push
push
adc
inc
sub
sbb
imul
imul
imul
xchg
popa
adc
arpl
pop
xchg
sti
dec
in
mov
rcl
adc
sbb
sbb
xchg
push
mov
nop
ss
call
rcr
mov
pop
or
lock
inc
lods
push
add
inc
fsubr
inc
ds
out
cdq
push
in
xchg
jo
popa
mov
sbb
add
call
xchg
mov
lahf
xchg
sbb
mov
rol
xchg
adc
add
dec
imul
pop
mov
jae
xchg
popa
addr16
or
dec
aaa
lahf
je
mov
icebp
js
mov
dec
outs
push
test
inc
(bad)
adc
inc
movs
adc
sbb
pop
or
gs
add
loopne
and
xchg
sub
xchg
push
sbb
push
push
mov
mov
mov
out
retf
inc
sub
inc
stos
call
push
mov
test
cmps
xchg
cmps
mov
mov
and
cmc
jbe
mov
or
push
ins
xor
or
ins
mov
mov
pop
lea
mov
nop
sub
sub
jns
pop
pop
retf
(bad)
pop
fwait
mov
lods
fcomip
push
cmp
push
in
add
cmp
push
sbb
push
push
scas
fmul
cwde
sub
test
(bad)
xor
jno
pop
inc
movs
fwait
(bad)
dec
push
mov
or
scas
repz
sbb
mov
sub
cmp
dec
fld
fcmovu
iret
pop
cli
fistp
dec
ret
(bad)
out
jp
(bad)
popf
test
loop
addr16
ror
leave
push
xchg
cmps
imul
or
jnp
xor
mov
mov
xchg
scas
enter
cmp
cmp
and
icebp
fnstsw
adc
inc
mov
fisub
mov
lods
mov
lods
in
adc
xchg
sub
mov
push
jnp
shl
mov
push
and
and
add
mov
jo
(bad)
ja
sub
aas
(bad)
int
fldcw
adc
sub
inc
cwde
(bad)
stc
adc
jge
xor
sub
sbb
loop
cld
jl
rol
ins
repnz
popf
jo
sub
(bad)
push
xchg
ins
ficomp
shr
pop
ret
pop
xchg
(bad)
cmp
inc
xor
jns
stos
mov
or
bound
mov
loope
pop
pop
imul
jb
xchg
adc
and
mov
inc
inc
xchg
loope
push
fdivr
shr
mov
mov
xor
cmp
popf
aas
ds
pop
jmp
(bad)
cmps
cmp
test
adc
dec
xchg
cmp
mov
mov
mov
or
mov
push
sbb
fnsave
test
mov
ins
and
pop
aaa
adc
xchg
sbb
dec
(bad)
jnp
int
xor
jno
push
pop
xor
inc
test
add
sbb
sahf
and
jge
sub
js
leave
dec
inc
and
push
idiv
mov
pop
inc
clc
jbe
mov
sub
lahf
es
fnstsw
pushf
pop
loope
fwait
pushf
xlat
pushf
inc
(bad)
cli
inc
pushf
mov
mov
ret
mov
pop
fadd
lea
mov
and
cli
out
(bad)
out
ret
enter
outs
inc
rol
and
aaa
cmp
popa
jge
xor
mov
xchg
xor
adc
add
inc
sbb
retf
pop
aad
pop
add
push
jae
mov
push
cs
out
dec
loop
mov
(bad)
push
ins
shr
mov
sbb
inc
dec
push
jge
or
mov
and
add
call
mov
dec
test
or
and
inc
xchg
ins
dec
push
xor
add
mul
add
jo
into
lock
adc
mov
pop
dec
ja
jecxz
adc
outs
mov
sbb
dec
or
mov
in
add
pop
popf
test
push
add
div
inc
push
xlat
int
data16
ins
mov
inc
push
mov
movs
inc
inc
pop
addr16
jecxz
and
xor
ret
jno
push
xlat
(bad)
pop
or
adc
dec
mov
fsubr
imul
jmp
fidiv
gs
fld
ror
repnz
popa
push
adc
data16
mov
stc
xor
xchg
(bad)
jl
cmp
icebp
push
adc
bound
mov
lds
outs
(bad)
jmp
sub
xor
(bad)
repz
xchg
out
push
cli
xor
dec
pop
jo
mov
add
ins
mov
mov
outs
ror
outs
inc
ret
mov
xchg
movs
nop
jbe
movs
(bad)
das
in
lahf
test
iret
pop
cld
fwait
cs
mov
idiv
cmc
mov
push
sub
push
jns
push
adc
lock
inc
sbb
pop
sub
ins
gs
clc
aam
and
sbb
test
outs
les
stc
push
data16
gs
scas
push
xor
retf
xchg
or
pusha
ficomp
(bad)
into
inc
cmp
sbb
in
cmp
and
push
dec
push
sbb
xor
retf
jmp
movs
ins
repz
loopne
ror
ds
mov
cs
pop
loope
adc
adc
inc
cmp
lods
aas
dec
adc
cmp
cdq
ss
aam
cmpps
jne
xor
lea
dec
fwait
or
mov
jp
add
aam
push
inc
outs
push
movs
pop
pop
jb
mov
cmps
xor
mov
jb
add
test
in
std
sub
hlt
cdq
inc
add
out
or
and
movs
adc
int
lock
or
xor
idiv
sub
push
or
jecxz
push
mov
and
ja
icebp
imul
sub
data16
xor
dec
inc
call
xlat
add
cmp
sub
xchg
xchg
push
in
addr16
movs
cdq
in
setbe
jle
dec
stos
popa
push
add
es
in
sbb
inc
mov
push
cmp
cmp
aad
mov
int3
rcl
sar
ret
sub
jp
jl
or
adc
adc
fdivp
and
cmp
mov
ror
(bad)
fld
nop
dec
call
test
xchg
pusha
and
xor
call
aam
inc
push
je
add
pop
lahf
jnp
mul
mov
test
push
jl
rol
movs
in
fimul
mov
test
dec
lea
cmp
adc
push
clc
add
push
sub
and
push
imul
sar
mov
push
rol
adc
dec
pushf
xchg
scas
dec
jo
adc
push
cs
pushf
in
cmp
push
inc
xor
(bad)
push
scas
mov
add
jg
xor
outs
and
test
adc
gs
aaa
in
fisttp
(bad)
gs
dec
cmp
mov
test
shl
popa
dec
mov
or
dec
inc
mov
sbb
lods
dec
aad
cmps
dec
xor
inc
push
fisub
gs
mov
xchg
jmp
mov
imul
sti
fild
rol
push
test
mov
push
jbe
rcr
out
xor
jle
inc
sbb
mov
add
arpl
jne
xlat
pop
out
add
dec
dec
int
out
bound
ss
xor
mov
push
jmp
cmp
and
inc
sahf
scas
fwait
cs
retf
xor
(bad)
push
arpl
mov
lahf
scas
sub
mov
xchg
xchg
in
push
xchg
cmp
fs
cmp
jmp
and
inc
adc
cdq
jbe
clc
stos
jne
fcom
push
jmp
mov
loop
xchg
sub
lods
push
cdq
call
(bad)
in
aaa
out
js
jecxz
inc
lods
rcl
adc
loope
int
pop
jb
retf
xchg
leave
cmp
push
jge
gs
dec
std
movs
sbb
dec
fadd
fist
inc
sub
mov
ja
mov
push
add
push
xor
xchg
popf
test
dec
(bad)
adc
pushf
inc
pop
add
mov
adc
cmp
movs
lods
cmp
repnz
fs
adc
cmp
and
es
pop
push
fdivrp
xor
adc
gs
ins
mov
xor
jns
pop
mov
push
clc
ficomp
arpl
push
hlt
jnp
inc
pop
xlat
jnp
int
inc
lods
out
inc
mov
pushf
add
adc
inc
dec
jb
and
inc
mov
rcr
imul
push
js
mov
shl
xor
cmps
(bad)
jbe
loop
inc
sbb
mov
frstor
cdq
out
mov
adc
mov
add
mov
cmp
xor
lock
adc
jg
mov
cwde
sbb
(bad)
or
mov
jle
test
imul
push
in
mul
pusha
movs
lea
dec
test
jecxz
stos
adc
mov
cmp
xchg
(bad)
cdq
mov
inc
iret
adc
sub
and
mov
sub
cmp
lds
sub
les
dec
lods
pop
cld
or
sub
push
enter
adc
xlat
cs
dec
push
inc
push
outs
xor
inc
cdq
xchg
mov
sbb
add
push
mov
call
mov
loope
mov
je
rol
jo
les
jno
shr
cwde
add
loop
push
xchg
inc
lds
fldcw
push
nop
dec
int
inc
cmp
icebp
adc
and
push
and
cmp
test
out
sti
push
cld
lods
jge
push
test
inc
stos
loop
(bad)
push
dec
loop
aam
int
iret
lods
out
adc
mov
rcr
inc
nop
movs
mov
inc
scas
mov
mov
bound
adc
dec
mov
cmp
stos
dec
mov
and
cmps
and
das
jge
inc
test
xchg
mov
outs
inc
int3
mov
call
loopne
sub
shr
cwde
call
xor
inc
adc
inc
push
sbb
ins
lods
fistp
fdivr
mov
inc
dec
xchg
jb
nop
and
(bad)
sahf
iret
imul
leave
xor
xor
inc
sub
adc
lods
add
js
or
lock
fs
(bad)
and
mov
test
jo
test
or
mov
jge
xchg
mov
retf
xchg
cmp
pop
call
aad
ret
sbb
pop
cmps
mov
adc
dec
jmp
cmp
adc
jno
std
sar
gs
pusha
mov
gs
jmp
movs
out
out
xor
sbb
or
scas
jle
daa
fistp
stc
(bad)
nop
ss
push
gs
mov
pusha
mov
mul
call
lods
lods
fs
add
rcr
cs
add
xor
jp
jl
and
jecxz
or
push
movs
rcl
lss
sub
adc
fwait
and
push
xchg
std
mov
lock
cmp
jnp
test
iret
jge
sbb
mov
add
push
arpl
popa
adc
test
add
test
push
mov
inc
cld
shl
repz
mov
inc
and
xchg
mov
cdq
cmp
jmp
adc
add
pcmpgtb
xchg
cs
mov
(bad)
mov
add
xor
adc
sbb
imul
dec
(bad)
stc
int3
and
shl
retf
es
imul
retf
jl
xchg
and
xor
mov
xor
lods
adc
loope
cwde
icebp
jmp
cld
xchg
add
sub
out
jge
por
test
jo
out
mov
pop
scas
cmp
ret
(bad)
mov
xchg
xor
test
sub
mov
(bad)
mov
add
sete
std
xchg
sub
enter
mov
enter
sub
call
lds
scas
sbb
or
dec
jmp
icebp
inc
add
add
cmp
ror
mov
fwait
push
pushf
data16
aas
sub
dec
or
push
mov
pop
sbb
xor
xor
xor
xor
dec
sub
pop
fs
jp
ins
xor
add
xor
xchg
jns
ror
mov
test
pop
(bad)
loopne
mov
mov
mov
in
enter
(bad)
xchg
rol
loop
and
and
pop
cmp
aas
mov
mov
sbb
and
add
and
les
cmp
cmp
push
nop
pusha
fisub
out
dec
jae
mov
cwde
sub
cmc
xor
pop
dec
xor
add
and
and
cmp
adc
in
fisubr
mov
in
shl
pop
cs
mov
push
xchg
in
lahf
inc
hlt
int3
mov
scas
fwait
test
or
sbb
fldcw
fsub
mov
das
fs
xchg
push
pusha
pop
and
ror
add
add
loop
push
jnp
and
inc
push
pop
mov
add
mov
call
mov
std
popa
jno
mov
mov
inc
pushf
shl
bound
punpcklbw
cld
xchg
cs
push
jo
iret
in
arpl
mov
sbb
sub
out
xchg
pusha
repnz
dec
jns
mov
xchg
sbb
test
sbb
outs
push
fsubp
dec
test
mov
(bad)
not
and
cmp
das
and
(bad)
stos
sti
fdiv
scas
dec
fimul
mov
pop
pop
ret
mov
call
jo
rcl
mov
rol
pop
jb
adc
adc
test
mov
es
jp
fcmove
xor
fadd
jmp
mov
mov
in
ss
pop
sbb
ror
xchg
retf
mov
leave
pop
stos
out
mov
mov
adc
shl
iret
cli
clc
fdiv
data16
retf
xor
jb
xchg
repnz
js
xchg
xchg
mov
inc
out
pushf
sahf
pop
sbb
cmp
mov
or
idiv
daa
pop
test
fnstsw
jbe
fistp
popf
fnstcw
add
inc
loopne
popf
into
jmp
sbb
dec
mov
jo
pop
into
sti
mov
std
and
aas
das
fmul
popf
sti
push
out
nop
xor
jnp
mov
ret
dec
js
dec
cs
fdiv
lahf
in
pop
outs
or
fld
movs
movs
je
gs
mov
push
mov
in
fxch
pop
adc
cmp
sbb
fxam
and
fstp
stos
xchg
adc
xor
data16
inc
gs
mov
mov
add
xchg
pop
add
sbb
fwait
mov
adc
add
sbb
scas
mov
clc
inc
scas
cmp
and
call
push
int
dec
mov
pop
dec
sub
call
push
scas
pop
inc
dec
pushf
jecxz
cmp
repz
jecxz
sub
push
lock
push
in
or
fistp
rol
mov
and
push
inc
push
stc
dec
mov
jns
inc
scas
leave
jmp
adc
xchg
in
mov
sahf
adc
scas
imul
cmp
lea
fnstsw
repz
pop
arpl
movs
aas
dec
jne
movs
clc
xchg
enter
lods
add
test
add
test
sbb
outs
push
je
ss
cmp
cmp
pop
add
dec
adc
push
lock
dec
ins
dec
pop
dec
jb
mov
pusha
jl
add
sbb
ins
pop
pop
es
push
or
sub
es
shr
mov
mov
sets
inc
aam
mov
sub
fmul
jge
rol
mov
ror
inc
xchg
shr
sub
(bad)
aam
fcomip
mov
les
sti
push
in
out
popa
dec
test
popa
pop
sub
adc
mov
loopne
and
mov
or
push
xlat
mov
mov
dec
movnti
mov
loope
gs
popa
push
int3
xchg
retf
and
ds
xor
dec
fwait
adc
leave
xchg
rcr
int3
add
mov
xor
sub
or
movs
scas
adc
dec
push
xchg
repz
inc
adc
adc
xor
jle
loop
and
cmp
xor
(bad)
shl
and
mov
jle
ins
inc
inc
cmp
outs
adc
sbb
in
popa
(bad)
inc
push
add
xchg
dec
mov
cmp
gs
dec
add
adc
and
mov
ss
mov
push
mov
fcmovne
fmul
je
(bad)
add
jecxz
rol
jns
mov
inc
mov
hlt
sbb
(bad)
mov
push
fcom
add
mov
fisttp
lods
mov
push
shr
fisttp
xor
lods
and
in
xor
add
jmp
push
mov
pop
mov
add
sub
mov
sbb
sub
or
cmp
out
mov
lea
sbb
outs
dec
sub
sahf
sub
adc
fadd
mov
movs
sbb
je
test
push
sub
push
sbb
iret
xchg
fstp
jno
and
xor
inc
push
dec
add
ins
pop
or
sub
inc
jp
sti
dec
jp
sbb
aam
jecxz
adc
in
cmp
mov
ss
fsubr
int3
lods
inc
xor
inc
inc
add
jmp
call
push
xor
pop
xor
test
mov
ja
imul
neg
clc
ja
neg
and
jo
test
out
and
jmp
dec
or
or
dec
pop
push
xor
inc
xchg
adc
dec
sti
dec
dec
fiadd
push
xchg
or
mov
sbb
xor
push
xor
leave
stos
dec
cmp
push
add
ror
nop
(bad)
push
sub
test
mov
fwait
sub
push
and
pop
dec
mov
pop
adc
call
or
mov
mov
inc
fnstsw
xchg
jle
clc
add
mov
int
push
sub
mov
cmp
sbb
pop
out
pop
lods
int
push
test
pop
xchg
adc
(bad)
in
mov
jle
in
adc
les
rcl
push
mov
(bad)
fcmovbe
sbb
sub
test
mov
(bad)
stos
jp
xchg
out
dec
ins
and
pop
and
test
jbe
mov
mov
ror
mov
sti
popf
xor
retf
push
xchg
xchg
popf
xor
mov
xor
mov
aaa
xor
xor
sahf
sbb
push
dec
(bad)
aam
mov
aas
lods
push
push
jge
adc
fs
neg
mov
dec
scas
cmp
cdq
ins
loop
stos
imul
mov
push
gs
xor
adc
out
xor
jl
add
dec
add
repnz
rol
ret
mov
test
retf
mov
pop
rol
or
pop
mov
jae
idiv
dec
push
inc
mov
xor
xchg
and
movs
mov
or
jp
popa
sub
inc
or
cld
js
int3
movs
sbb
xor
lods
xor
leave
inc
inc
and
adc
push
sbb
sbb
sbb
ja
call
dec
jecxz
movs
(bad)
cmp
xchg
inc
inc
fs
xchg
or
sub
and
ret
push
push
inc
sbb
sahf
and
aad
add
adc
je
pop
jno
xor
push
(bad)
sbb
or
das
fldenv
hlt
push
fimul
jnp
repz
jne
ror
jmp
movs
call
pusha
adc
mov
sub
fs
int
or
cmp
fstp
pop
lahf
out
pushf
pop
and
sbb
push
outs
mov
mov
mov
mov
rcr
pop
sub
push
and
jmp
sub
sub
js
mov
push
imul
popa
push
inc
xchg
rol
or
mov
gs
fwait
aad
cmps
push
cmp
inc
sub
xor
sub
es
(bad)
imul
push
mov
arpl
push
pop
mov
cmps
int
ins
cmps
retf
mov
rol
lahf
popf
in
cs
dec
dec
dec
shr
enter
stc
repz
lods
or
retf
popa
out
js
jg
dec
test
rcr
call
sub
cmps
dec
xor
xchg
cld
push
jl
xchg
ds
into
(bad)
test
push
imul
mov
ret
mul
jp
ss
jl
mov
call
mov
mov
dec
sbb
jnp
xor
jno
jle
or
xchg
lahf
(bad)
in
lods
clc
push
cmps
stc
jmp
repz
test
jmp
fxtract
mov
cs
sub
xchg
push
je
push
lds
aam
test
xchg
(bad)
push
sub
mov
lods
mov
xor
add
mov
or
pop
aaa
inc
jno
dec
bound
shl
sub
frstor
pop
adc
or
inc
enter
mov
dec
add
cli
lock
and
cli
dec
and
hlt
lods
in
arpl
add
push
pop
mov
jecxz
test
push
les
fld
jno
sub
into
jmp
fisttp
in
push
jge
add
push
inc
pop
fild
jae
inc
lea
in
lea
or
or
pop
das
mov
sub
mov
repnz
push
fs
xor
pop
cdq
mov
int
cmc
dec
mov
call
cmps
add
call
cwde
in
push
cs
xor
inc
inc
pusha
loop
push
mov
mov
jmp
mov
icebp
movs
or
mov
jp
push
dec
xchg
pop
adc
fisttp
arpl
push
push
add
adc
dec
sbb
je
push
in
or
fdiv
outs
add
pusha
push
stos
push
dec
cwde
pop
shr
add
pusha
pushf
cmp
adc
pop
mov
mov
sahf
cmp
inc
pop
xor
mov
pop
aad
jge
rcl
nop
add
mov
dec
add
fsub
adc
fdiv
into
retf
or
loopne
cmp
stos
pop
es
and
aad
fs
xchg
retf
add
test
xor
and
xor
push
sbb
and
dec
je
pusha
inc
adc
push
hlt
add
cmp
and
inc
and
mov
jle
mov
mov
js
ret
ss
mov
sub
lods
dec
repnz
out
pop
sbb
in
aad
push
movs
mov
or
cmps
repz
sbb
movs
mov
dec
xchg
dec
mov
ins
xor
xor
xchg
cmps
jb
call
fucomip
aaa
test
out
jle
ret
jl
xchg
daa
jp
xor
push
jmp
test
scas
or
xor
ja
ret
mov
xchg
jecxz
loop
xor
or
pop
mov
pop
das
push
cs
sub
leave
stc
loop
dec
movs
mov
retf
call
ret
push
jns
arpl
nop
dec
push
xor
(bad)
mov
jmp
in
sub
(bad)
sbb
adc
(bad)
sbb
enter
push
test
call
or
leave
pop
call
or
mov
das
pop
in
retf
add
push
pusha
sar
in
mov
enter
jp
dec
retf
leave
sub
cli
jmp
ins
repz
ret
xchg
sbb
stos
push
outs
fimul
or
scas
clc
sbb
mov
aas
hlt
adc
sub
xchg
cli
mov
das
jne
pop
inc
mov
lahf
pusha
dec
adc
adc
repnz
cmp
pop
(bad)
mov
fs
fstp
aaa
mov
inc
xchg
aas
shr
mov
inc
lea
js
shl
in
dec
ds
nop
in
mov
popa
add
test
or
push
jl
std
dec
pop
dec
imul
outs
mov
push
jecxz
inc
(bad)
sbb
stos
mov
(bad)
add
sar
or
adc
enter
fnsave
leave
fwait
retf
or
mov
lods
out
ss
stos
imul
(bad)
sub
js
les
jno
jl
(bad)
cmps
mov
lods
inc
sbb
int3
dec
xor
out
call
rcl
sbb
ret
or
aaa
es
in
cdq
jbe
(bad)
pop
jo
push
aaa
sbb
xchg
daa
inc
iret
sar
push
or
mov
xchg
dec
not
xchg
lahf
pop
jg
xchg
adc
loope
push
push
inc
push
mov
gs
mov
sub
popa
and
sbb
sbb
pop
push
mov
sbb
int3
pop
and
add
cmc
adc
shl
pusha
jge
cmp
mov
ins
xchg
pop
dec
scas
out
gs
xchg
add
sbb
xor
mov
cmp
mov
mov
fstp
inc
call
jo
pop
cs
stos
xlat
adc
mov
mov
jno
popa
inc
cmp
push
fcmovnu
adc
fmul
mov
and
jae
push
or
add
fs
dec
mov
inc
or
xor
dec
test
push
cli
ja
xor
cmp
inc
hlt
test
ror
xchg
add
xchg
or
or
pop
adc
cmp
fnstsw
and
xor
adc
call
outs
div
xor
data16
movs
fsubrp
sub
mov
add
test
sub
add
add
add
adc
add
jmp
fidivr
inc
jmp
or
sub
dec
packuswb
inc
movs
mov
retf
push
leave
repnz
jnp
add
adc
pop
imul
sbb
cmps
test
jb
inc
adc
popa
test
sbb
mov
add
jle
mov
outs
cs
sub
pop
iret
out
int
fistp
cli
(bad)
repz
cmp
mov
nop
inc
aad
push
adc
xchg
xchg
pop
mov
add
xchg
ss
or
test
sbb
xlat
retf
scas
fisttp
sbb
mov
xchg
jne
xor
cmp
jmp
mov
sub
cmp
cmp
ret
fst
sub
jg
mov
mov
xchg
outs
arpl
pop
lahf
lock
lds
sbb
outs
cmp
fisubr
sbb
loope
enter
adc
push
(bad)
repnz
in
mov
adc
in
or
mov
shr
aas
sub
add
pop
out
test
mul
leave
sbb
pop
mov
dec
push
jbe
mov
push
jo
inc
add
fmul
push
inc
sahf
out
icebp
or
xchg
call
cs
sbb
retf
imul
sub
or
hlt
xchg
cdq
cli
sbb
push
cmp
mov
test
add
push
or
pop
pop
leave
pop
stc
and
xor
stos
mov
adc
and
jbe
or
xor
fsubrp
dec
iret
into
hlt
inc
fsubr
ret
push
pop
mov
test
mov
mov
mov
add
aam
aaa
movs
js
mov
mov
push
xchg
or
jns
xor
(bad)
jb
mov
aas
mov
pop
mov
lods
rcr
pop
mov
fldcw
ficomp
shl
addr16
nop
(bad)
mov
int3
movs
mov
fst
mov
or
push
push
or
in
adc
mov
dec
(bad)
mov
stc
jp
and
cmp
rcr
pop
jmp
imul
retf
into
cmps
sahf
mov
sbb
add
push
pusha
ret
jmp
inc
ss
gs
mov
adc
jg
aad
std
push
pop
adc
lods
mov
push
retf
and
xor
fisttp
aaa
aam
repz
cld
fwait
push
cld
fwait
dec
repnz
sahf
ficomp
or
mov
pop
sub
jno
(bad)
add
aam
push
loopne
sub
arpl
ss
pop
stos
das
xor
test
xor
call
inc
add
adc
or
movs
retf
jmp
dec
outs
ret
adc
mov
push
pop
mov
or
rcl
or
fnstcw
lods
cmp
push
nop
or
das
or
push
imul
or
mov
int3
cld
cmp
lods
mov
mov
dec
xchg
imul
rol
jne
push
pop
and
mov
pushfw
fmul
add
and
cwde
adc
mov
daa
xor
mov
sbb
xor
neg
int
into
aaa
xchg
xor
jnp
xchg
fucomp
out
or
(bad)
mov
inc
sbb
add
jb
stos
adc
add
sahf
sub
cmp
push
bound
div
fidivr
mov
inc
lahf
stc
ret
dec
or
fstp
jle
fdivr
jp
push
and
or
call
mov
and
jp
adc
(bad)
jno
sub
mov
cs
mov
pop
push
imul
pop
das
(bad)
xor
cmc
jecxz
sub
and
and
add
jb
sbb
sub
and
mov
and
sbb
gs
sub
jge
xchg
push
dec
loop
push
mov
scas
cmps
mov
pop
repz
or
xchg
bound
mov
arpl
pop
add
cmp
sub
in
das
jmp
sub
jns
adc
sub
xor
fxtract
xor
outs
test
or
or
fbstp
jnp
cld
mov
fcomp
jge
hlt
pop
loopne
loope
daa
cs
bound
ret
sbb
scas
and
mov
sbb
mov
push
push
pop
sbb
add
sub
data16
dec
mov
addr16
gs
shr
ret
or
adc
inc
jbe
dec
scas
je
and
sbb
mov
sub
cmp
inc
add
aad
jmp
fidiv
setae
aaa
push
call
add
push
pop
pop
dec
add
inc
pop
inc
fsubr
mov
add
xor
xor
rol
mov
es
jg
movs
xchg
pusha
push
xchg
pop
leave
(bad)
push
mov
mov
lea
dec
pop
int
pop
std
out
adc
or
fsubrp
aaa
xchg
addr16
clc
gs
cmc
leave
and
inc
sbb
out
mov
retf
adc
mov
xchg
mov
sub
xchg
add
(bad)
and
xor
pop
inc
sbb
mov
cmp
rol
fdiv
jmp
push
inc
mov
(bad)
fadd
dec
cdq
shr
mov
stos
popa
xchg
mov
push
ror
stos
and
sub
retf
push
ins
pop
dec
adc
dec
mov
jbe
xor
fs
pop
xchg
int3
dec
mov
shl
and
sar
jnp
(bad)
dec
not
cld
inc
daa
stc
pop
mov
mov
lea
lahf
(bad)
es
or
adc
js
xor
xor
adc
jp
mov
inc
xor
and
ret
adc
aam
loope
mov
and
xchg
dec
iret
ret
lock
clc
cmp
dec
xor
adc
enter
mov
and
aas
ss
clc
stc
mov
xchg
and
xchg
inc
outs
test
mov
fwait
out
inc
iret
xchg
xor
xchg
rcl
push
ror
test
test
fucomi
cmp
inc
sahf
sar
jecxz
xor
in
xor
and
xchg
ret
sub
mov
xor
add
jge
inc
push
fsub
stos
xor
frstor
adc
ins
rol
mov
cmp
out
mov
repz
shr
mov
xchg
jmp
adc
daa
test
inc
jl
add
outs
or
ja
cmps
mov
jnp
fidivr
xchg
jle
lods
icebp
jecxz
cld
ja
into
std
popf
sub
aas
mov
out
in
aaa
call
inc
idiv
lea
mov
cmp
outs
mov
xchg
cmps
jae
cmp
jbe
ins
or
pusha
daa
popf
push
adc
mov
inc
mov
push
xchg
or
int
push
push
pop
sbb
ja
data16
cmp
sub
stc
loopne
sub
imul
out
iret
arpl
out
sub
or
cwde
sar
or
cwde
jecxz
or
mov
imul
test
cs
in
add
xchg
add
mov
adc
gs
xchg
cmps
mov
jg
push
or
das
or
jns
sub
daa
pop
push
imul
mov
xchg
rcl
je
mov
cmp
xchg
push
add
test
adc
fisttp
cmc
(bad)
cmp
imul
xchg
xchg
jne
and
lahf
mov
jns
movs
add
fcom
aad
add
dec
pop
or
int3
jl
mov
dec
fnstenv
pop
data16
out
jmp
inc
mov
add
jge
gs
pop
mov
enter
cs
gs
aam
dec
gs
sub
adc
cmps
ret
into
retf
jmp
or
test
nop
xchg
in
aaa
fwait
cmp
ins
or
dec
mov
movs
adc
ss
push
inc
pop
jle
stos
push
aam
jne
ins
aaa
lahf
mov
lock
inc
add
xchg
sbb
leave
in
or
add
lods
jns
scas
imul
mov
fild
jbe
sbb
cmc
stc
into
in
xor
cmp
inc
push
add
bound
inc
ss
(bad)
lahf
mov
popf
push
gs
push
sub
xchg
std
retf
cmc
pusha
sub
push
push
popf
xchg
pusha
stos
imul
ins
or
push
or
xchg
mov
adc
push
cs
add
aad
mov
dec
retf
or
adc
inc
or
mov
ds
mov
inc
stc
sub
cmp
(bad)
leave
xor
mov
call
lods
and
and
jp
mov
or
retf
ins
popf
out
arpl
jae
shl
xchg
inc
jae
mov
clc
mov
std
into
and
sbb
jbe
xchg
cmp
aas
adc
add
add
xor
jb
xchg
ret
mov
mov
xchg
test
js
xor
sbb
rol
and
push
lods
aam
inc
mov
fwait
popa
jle
adc
ret
add
adc
repnz
test
push
test
push
enter
inc
adc
or
clc
xor
push
dec
inc
cdq
cmps
and
sub
in
lods
and
xor
sti
mov
test
pop
push
das
mov
push
push
xchg
push
xor
mov
sahf
adc
and
mov
nop
xchg
in
push
movs
enter
dec
call
push
gs
mov
mov
cdq
outs
out
pop
xor
int3
pop
hlt
mov
call
push
ins
push
(bad)
sub
mov
sub
(bad)
fldcw
mov
mov
sub
pop
icebp
sub
dec
imul
cmp
imul
leave
jle
jnp
mov
fisttp
jmp
dec
(bad)
jmp
sti
push
jle
mov
rol
lods
dec
ins
mov
rcr
push
cmp
push
add
je
arpl
or
sti
mov
outs
xor
jmp
sti
inc
sub
test
adc
test
mov
cmp
sbb
stc
sbb
adc
sbb
pop
inc
push
inc
dec
jne
stos
pop
mov
and
dec
pop
xchg
push
push
test
cld
and
jmp
dec
xchg
add
test
sahf
call
mov
jno
icebp
xor
inc
call
adc
std
and
int
and
in
test
das
sub
push
xchg
xor
pop
and
call
sub
xchg
iret
movs
lds
mov
imul
fidiv
jne
push
movs
loope
das
(bad)
mov
dec
test
bound
push
cmp
mov
push
or
pop
lock
sub
jge
sub
pop
pop
fidiv
push
inc
xor
lods
push
xor
jle
xchg
xor
mov
inc
dec
mov
mov
pop
sti
and
xchg
mov
push
jno
sub
xlat
shr
push
jmp
cmp
stos
fldenv
pop
or
ins
mov
das
add
shr
loop
lahf
mov
inc
fsubr
push
cdq
neg
xchg
popa
mov
push
popa
jno
enter
jbe
mov
test
fstp
mov
or
loope
call
jno
sbb
pop
dec
das
xor
mov
mov
ror
cmp
movs
call
cld
pop
lods
sbb
iret
shr
sbb
scas
ins
mov
out
sbb
push
gs
lds
push
sbb
outs
movs
mov
mov
pop
and
ret
daa
mov
adc
call
ror
jno
or
je
in
(bad)
(bad)
push
ins
movs
xor
jmp
or
repz
bound
xchg
loope
adc
gs
fisubr
push
lods
hlt
out
aaa
xchg
dec
cmp
out
cld
xchg
mov
sti
mov
jg
mov
adc
mov
adc
divps
pop
inc
xor
lods
repnz
and
mov
sbb
xor
or
jge
or
outs
mov
pushf
ror
sub
pusha
fisttp
add
sub
daa
mov
ds
pusha
(bad)
(bad)
in
mov
lahf
dec
mov
fcmove
movs
out
movs
in
(bad)
xchg
inc
mov
scas
and
cmp
and
sub
adc
cmp
ror
dec
or
xchg
clc
jp
and
xor
sbb
lds
mov
ds
xchg
ds
(bad)
pop
loope
test
(bad)
push
repnz
and
fiadd
pop
ins
pop
jmp
lea
push
shr
movs
test
push
sar
aas
mov
aaa
stc
stos
pop
out
cmps
or
dec
cs
jmp
pop
test
icebp
fwait
pop
popf
mov
xchg
push
jg
(bad)
call
iret
jne
mov
(bad)
(bad)
jbe
icebp
xchg
sti
js
(bad)
jl
inc
inc
out
imul
das
xor
pushf
outs
ficomp
outs
or
mov
xor
sti
sbb
mov
jno
or
push
fwait
gs
jmp
repnz
mov
mov
sub
je
movs
call
jnp
jnp
jp
cmp
mov
aaa
sbb
jp
and
jbe
stos
push
les
adc
enterw
xor
stos
in
sti
pop
jno
cwde
pushf
pop
sub
je
push
adc
pop
js
test
pop
faddp
push
dec
or
das
cmp
hlt
sbb
ins
daa
dec
movs
inc
mov
add
adc
loopne
mov
jmp
inc
loopne
add
pop
neg
mov
bound
cmp
scas
nop
jnp
std
iret
mov
jecxz
icebp
or
mov
out
clc
or
sub
(bad)
xor
cmp
push
inc
jo
jo
xchg
dec
xchg
lods
xor
stos
jne
cs
les
sbb
sub
shr
pushf
xchg
(bad)
mov
mov
sub
ret
push
fidivr
test
xor
inc
mov
mov
mov
lahf
hlt
jge
js
int
jmp
(bad)
sbb
pop
daa
mov
add
std
push
cmp
xor
xchg
outs
mov
dec
xchg
inc
xor
mov
xor
inc
sti
adc
fwait
shl
aam
int3
cmc
cmp
pop
mov
dec
gs
cmps
adc
jne
movs
inc
mov
mov
push
push
add
xor
lahf
inc
jle
xchg
push
xor
xor
mul
imul
xor
push
fdivr
int3
push
jmp
jecxz
xor
dec
jnp
push
push
imul
push
repz
aad
inc
test
adc
cdq
outs
dec
das
aas
adc
mov
xchg
stc
pop
mov
jge
std
mov
stos
mov
dec
ins
dec
shl
rcr
movlps
cli
sub
lock
test
data16
and
dec
leave
push
mov
cli
lods
add
das
fcmove
mov
leavew
ja
clc
mov
sbb
or
inc
cmp
pop
xor
dec
sbb
xor
xor
push
imul
mov
(bad)
or
ins
pop
ror
jno
imul
mov
push
das
int
push
cmps
xchg
sbb
loopne
jns
mov
cli
pop
je
dec
pop
repnz
adc
enter
icebp
ret
xor
daa
int
mov
into
mov
fmul
push
or
rol
xchg
mov
lock
es
dec
lods
mov
imul
and
jmp
scas
cmps
out
push
mov
lods
jns
cmp
sub
add
cmp
lods
add
aad
call
mov
xchg
je
js
mov
pushf
mov
sbb
mov
pop
outs
imul
or
xchg
shr
loop
inc
mov
sub
ficomp
ja
ficomp
into
lds
sub
fistp
cli
in
mov
clc
imul
sti
fistp
fidivr
outs
jmp
(bad)
fidivr
leave
jno
push
mov
ficom
add
fidivr
mov
leave
data16
aam
pop
outs
movs
xchg
inc
outs
xor
xchg
out
fwait
cmp
fidivr
out
mov
stos
sub
or
leave
(bad)
in
xor
stos
cwde
cdq
xchg
sbb
jno
cmp
mov
loop
or
enter
cld
xor
fld
xchg
jge
fidivr
push
mov
push
adc
inc
rcl
mov
int3
mov
sahf
jp
push
or
(bad)
fisub
xchg
mov
push
inc
cmp
or
jae
out
popa
nop
mov
push
pop
add
mov
fisubr
into
pop
xor
xor
ret
dec
xor
mov
rol
adc
(bad)
js
jno
mov
int3
pop
shl
dec
inc
sbb
cmp
lahf
pop
pop
mov
rcr
dec
inc
jecxz
in
push
push
cld
daa
fimul
inc
cdq
dec
out
cmps
jge
adc
mov
push
sub
into
cmp
push
or
xchg
ss
push
repnz
(bad)
in
inc
xor
cmps
rcr
push
xor
jmp
sbb
cmp
adc
dec
rol
das
mov
inc
xchg
(bad)
movs
inc
and
sub
push
bound
(bad)
shl
std
test
mov
xor
or
xor
cmps
stos
or
retf
lods
idiv
or
out
add
fdiv
(bad)
stc
jbe
mov
ror
xchg
push
jb
jg
test
loopne
sub
cwde
pusha
pop
ret
mov
leave
repz
int3
mov
xor
popa
add
(bad)
dec
imul
and
inc
mov
sbb
xchg
repz
fistp
test
adc
(bad)
test
push
dec
xchg
pop
retf
add
hlt
xchg
and
int3
cmp
fadd
add
mov
inc
cdq
cs
stos
lods
call
push
mov
loopne
stc
dec
int
clc
push
inc
cdq
je
ins
fisubr
cwde
adc
call
movs
push
push
mov
and
ret
(bad)
mov
cwde
rol
bound
jnp
mov
xor
dec
cmp
sub
(bad)
jb
jb
add
test
and
sbb
and
fist
xchg
cmp
pusha
(bad)
mov
into
sbb
fucomip
call
inc
xchg
jg
mov
in
jne
xchg
sbb
cli
nop
and
push
shl
dec
retf
xor
ficom
int
mov
or
inc
inc
mov
mov
jg
repz
cmps
mov
xor
add
arpl
inc
fist
sub
scas
mov
sbb
inc
xor
test
retf
sub
add
or
test
stos
dec
shl
pop
ret
push
cmp
cmp
jecxz
loope
jl
mov
rcl
out
or
imul
mov
data16
push
pop
jl
inc
jb
pop
jmp
lods
mov
mov
movs
inc
je
test
mov
pop
and
out
test
and
adc
sbb
movs
aaa
pop
or
pop
jmp
jg
js
pop
maskmovq
std
shr
fld
jo
cli
into
js
in
cld
dec
xchg
mov
into
adc
cs
ficomp
mov
mov
cdq
mov
mov
rcl
je
push
add
jae
ja
hlt
inc
jmp
jp
mov
xchg
push
inc
sub
ss
(bad)
in
push
inc
xchg
jb
sub
jno
fistp
popf
sar
lods
test
aam
xlat
shr
pusha
in
mov
(bad)
fwait
jno
mov
ja
stos
mov
xchg
pop
inc
ret
jge
aaa
imul
cmps
jl
pop
inc
mov
test
adc
gs
add
cmp
jmp
jmp
enter
dec
lahf
int
adc
mov
mov
cmp
push
pusha
mov
aad
out
mov
push
imul
fs
mov
shl
call
loop
mov
loop
mov
std
stos
ficom
jp
add
data16
popa
push
out
stos
or
cmp
bound
retf
call
into
lods
mov
mov
movs
push
inc
sar
cmps
cli
(bad)
mov
jl
retf
mov
adc
sbb
scas
mov
mov
fsin
in
pop
adc
call
bound
loop
loopne
jle
push
stos
xchg
pop
xor
loope
test
in
ds
lea
ret
sbb
xor
push
inc
js
cmp
(bad)
ins
(bad)
add
loopne
xchg
dec
pop
or
push
movs
sahf
iret
mov
xchg
repz
adc
mov
pop
iret
push
aam
add
int3
push
cmp
leave
xchg
or
push
jb
loope
add
mov
mov
cmp
jne
popf
xchg
scas
mov
mov
push
sub
out
sbb
inc
mov
mov
sbb
aad
gs
adc
xor
int
mov
mov
cmps
inc
jae
bound
dec
movs
adc
inc
add
ror
mov
mov
repz
mov
dec
imul
push
fisttp
(bad)
jmp
mov
push
push
xchg
loopne
cli
out
add
push
mov
popa
lods
jnp
xor
and
rcr
outs
icebp
sbb
out
mov
fs
jp
mov
mov
push
mov
scas
push
xchg
xchg
fiadd
sbb
push
mov
aad
xchg
shl
push
mov
jae
xchg
add
scas
cmp
int
and
mov
mov
xchg
jmp
gs
sbb
sbb
test
xlat
add
inc
call
fwait
jns
jno
cmp
int3
data16
out
mov
ss
cwde
stos
jl
sub
popa
push
dec
cmps
cmp
mov
call
ror
push
lea
add
and
pusha
jge
or
pop
addr16
int3
icebp
stos
mov
mov
out
jns
and
not
retf
or
(bad)
daa
jae
dec
push
nop
mov
stos
gs
add
sub
xlat
pmaddwd
enter
mul
loopne
pop
sbb
cmps
div
sti
jmp
mov
cli
xchg
mov
(bad)
jp
inc
cmp
mov
xor
bnd
(bad)
repz
push
xlat
inc
stos
mov
pushf
mov
js
imul
inc
adc
je
ret
mov
push
cmps
sub
ja
fs
and
cs
fwait
sahf
lods
push
inc
loope
stos
lahf
test
jmp
pusha
fcmove
(bad)
sub
jbe
clc
in
inc
ins
ret
cmc
inc
fidiv
sub
xor
dec
sub
dec
jae
mov
push
out
xchg
add
ret
repz
sub
int
es
in
sbb
das
cmps
int3
aam
mov
push
dec
or
lahf
into
inc
cdq
div
pop
mov
push
or
pop
push
pop
sub
mov
les
gs
or
sub
int3
add
pop
cs
in
push
inc
ror
mov
iret
adc
jmp
and
sbb
inc
sub
dec
call
les
mov
fldenv
xchg
or
xchg
or
or
inc
mov
push
push
cmp
nop
add
sbb
hlt
loope
(bad)
test
sti
mov
cmps
imul
iret
ins
push
dec
jg
sub
call
adc
xor
jae
push
cmp
sub
push
pop
or
pop
cdq
dec
push
inc
retf
push
mov
push
dec
adc
pop
xor
ror
int3
shl
dec
shl
sbb
jg
neg
icebp
fwait
or
and
dec
add
test
mov
xor
sbb
aas
push
loop
nop
fcomip
aad
add
mov
sbb
sbb
sub
jg
ret
fwait
or
in
sti
mov
aam
out
mov
mov
fisubr
test
fst
push
std
dec
int
movs
push
es
mov
les
jbe
xchg
sbb
mov
out
adc
aam
jmp
sbb
mov
mov
pop
andnps
movs
jmp
adc
xchg
and
pop
inc
cmps
pop
movs
movs
and
dec
ret
mov
add
popa
ror
add
xor
xor
pop
mov
(bad)
cwde
bswap
dec
adc
mov
add
xchg
out
call
repnz
and
pop
retf
push
and
push
mov
and
and
or
and
shl
cdq
ins
xchg
sbb
in
ror
inc
sbb
test
sbb
mov
xor
out
or
(bad)
sbb
xchg
loopne
or
xchg
cmp
sub
push
push
rcr
xor
fisubr
cmps
das
icebp
inc
mov
das
lds
fimul
xor
inc
sbb
cmps
adc
das
sbb
push
sbb
aaa
mov
arpl
fs
xor
mov
ret
out
cmps
inc
call
push
mov
inc
std
aad
(bad)
jmp
xor
mov
dec
(bad)
test
push
push
pop
dec
not
daa
push
scas
sub
push
outs
jle
stos
out
cmp
repnz
retf
pop
out
scas
setne
ffree
ret
mov
scas
fs
call
fldenv
out
fptan
pop
retf
fstp
scas
idiv
fdivr
stos
hlt
enter
push
jmp
adc
in
mov
call
mov
sub
loopne
(bad)
fsub
xor
movs
js
pushf
pop
scas
and
adc
jle
add
rol
sbb
lods
pop
scas
pop
fnsave
xor
jmp
jle
xchg
(bad)
sub
pop
and
fst
or
cmps
mov
mov
dec
pop
fst
mov
mov
cld
jmp
call
xchg
movs
retf
sbb
push
cdq
repz
xchg
fidivr
lahf
test
stos
pop
sub
inc
adc
adc
xchg
pop
pusha
mov
dec
stos
mov
retf
mov
stos
jo
pop
push
das
xchg
fiadd
mov
stc
ret
adc
movs
lock
(bad)
in
inc
sbb
jns
repz
(bad)
outs
and
jmp
mov
sub
dec
mov
ins
pushf
xor
popf
add
or
mov
xor
mov
xor
pop
adc
bound
bound
xor
fs
push
sub
fcom
out
into
xchg
repz
int3
adc
sbb
jle
cmps
shr
sub
gs
add
add
or
mov
sbb
jge
fiadd
xor
movs
xchg
mov
xchg
dec
cmp
mov
sti
pop
inc
sbb
mov
adc
jg
pushf
outs
dec
jmp
xchg
or
mov
aam
ins
std
dec
push
xchg
idiv
test
cmps
inc
pop
mov
pop
mov
sbb
add
xchg
call
sti
je
push
gs
sbb
jp
pop
gs
cli
loope
push
cmp
sbb
movs
call
sbb
mov
popa
popf
clc
xlat
loope
xchg
sbb
mov
call
sbb
call
pusha
sub
adc
sti
fwait
les
ja
jl
das
loopne
mov
fisub
test
mov
sbb
ret
adc
cmp
into
lock
and
jecxz
sar
rol
and
sbb
(bad)
ja
rcr
or
aam
sub
jo
call
sub
push
inc
mov
sar
test
(bad)
rol
mov
sbb
cmp
mov
push
out
sbb
fistp
adc
ss
jg
mov
jecxz
inc
pop
scas
(bad)
fistp
ds
popf
jns
scas
jp
daa
mov
xor
xchg
add
inc
gs
jo
leave
jmp
or
jg
ins
loop
sbb
call
test
scas
cld
js
not
pop
stc
ja
xchg
pop
pop
sub
fwait
mov
pop
out
fst
or
frstor
mov
dec
iret
dec
adc
cmp
mov
cwde
jmp
cld
xor
loope
push
out
mov
xchg
xchg
mov
popf
std
cmc
fcomp
mov
rol
push
adc
sbb
sbb
xchg
pop
lods
mov
repz
enter
loopne
sbb
dec
and
sub
mov
mov
rol
call
xor
retf
pushf
mov
ins
sub
push
mov
jg
jnp
fcmovnbe
aaa
leave
movs
cmp
test
retf
xchg
ss
xchg
pop
in
mov
mov
int
sar
xor
js
and
in
aaa
out
xchg
lods
pop
lds
sub
push
inc
mov
sub
adc
xlat
xor
xchg
mov
ret
adc
jp
sub
xor
xchg
int3
jno
jge
jle
dec
or
push
cmp
push
xchg
jecxz
int3
push
dec
push
dec
sahf
scas
dec
mov
sbb
das
add
jae
pop
into
vmovhpd
xor
pushf
dec
and
call
retf
in
call
fwait
je
mov
ret
call
fadd
mul
xor
dec
ja
das
mov
jl
(bad)
pop
sbb
sub
retf
add
adc
test
dec
and
shr
in
pusha
ja
pop
lea
aam
sub
call
push
xchg
out
(bad)
jns
pop
or
dec
imul
inc
inc
fadd
cs
and
hlt
mov
xchg
sub
stc
retf
dec
xor
lds
cli
jmp
sub
ss
fucomi
cmp
fst
aad
outs
test
mov
xor
jmp
add
cmp
ror
adc
mov
xchg
dec
sub
bound
repz
pop
cwde
test
xchg
sbb
push
fiadd
dec
inc
mov
inc
mov
adc
sahf
mov
stos
xchg
int3
aad
jb
adc
mov
mov
sbb
push
enter
add
inc
aas
or
sub
jecxz
test
or
lock
mov
xor
popa
push
mov
scas
test
fsub
jns
push
adc
data16
ja
cmp
cld
inc
mov
int
sbb
cmp
outs
and
adc
cli
jae
inc
dec
jns
push
popa
dec
loop
bound
dec
and
faddp
pop
popf
cwde
xor
je
or
jle
ror
aaa
mov
or
bound
cmc
jo
push
out
mov
test
fistp
jg
push
std
(bad)
ins
neg
movs
fsubr
jnp
sbb
out
sub
mov
je
mov
ret
mov
mov
fdivr
out
cmc
(bad)
jg
push
aas
out
sub
ret
scas
in
scas
sbb
ja
dec
push
daa
sti
jp
jg
loopne
push
icebp
rol
repz
cdq
in
push
rcr
addr16
call
lahf
cs
cmps
add
mov
das
mov
aas
mov
sub
pop
div
fild
mov
sahf
cld
dec
xor
adc
gs
adc
pop
or
dec
ror
mov
cli
lea
push
ins
jnp
movs
int
jmp
(bad)
push
cmps
jbe
inc
mov
and
and
fisubr
xchg
shr
mov
sub
mov
jb
sub
aad
movs
outs
pop
(bad)
mov
xchg
xlat
mov
aas
imul
mov
inc
stc
dec
pop
jns
cs
popa
cli
ds
adc
adc
outs
scas
dec
fsubr
jb
mov
mov
pop
or
push
pop
xor
dec
retf
jae
inc
out
push
cmc
fucomi
pop
mov
mov
pop
repz
scas
and
inc
sbb
adc
test
inc
mov
fidiv
add
imul
mov
push
sbb
sub
nop
cs
push
outs
std
and
ror
iret
ins
push
or
xchg
mov
retf
pusha
xchg
push
sub
push
mov
sti
xor
std
jns
xchg
xor
cs
cmps
cmp
cmp
mov
sahf
cmps
pop
es
sub
xchg
dec
push
int
push
mov
cwde
mov
out
cmp
mov
sub
add
out
(bad)
cdq
mov
rcl
sub
adc
movs
cmp
mov
lds
sub
push
xor
cmc
push
push
mov
mov
inc
retf
fnstcw
into
gs
fisub
xchg
jle
or
cmc
xor
sub
in
outs
xor
jne
and
loope
dec
push
cmp
sbb
mov
pop
cmp
jg
push
fist
shl
xchg
jmp
xor
shl
sbb
shl
jge
dec
fsubp
push
fistp
or
loopne
xchg
mov
sti
icebp
xchg
sub
or
xor
and
or
add
inc
sub
cmp
imul
push
and
stos
add
and
or
out
xchg
inc
sbb
dec
push
xor
add
wbinvd
repz
mov
imul
mov
push
push
inc
cmc
lods
jmp
ins
xchg
sbb
cld
push
dec
inc
mov
push
xchg
popf
stos
arpl
mov
mov
cmp
ja
lods
adc
inc
lds
fisub
sbb
dec
out
or
imul
ja
je
jg
jae
fcomp
das
mov
push
sti
idiv
movs
cld
jmp
test
push
mov
sub
retf
out
dec
cmc
shl
ret
test
int3
(bad)
push
or
jg
xchg
call
xor
aaa
imul
cdq
sub
mov
mov
aad
aaa
(bad)
mov
daa
add
(bad)
es
es
out
xor
dec
out
xor
int
sahf
popf
cs
ins
mov
loopne
jmp
jecxz
jnp
push
jnp
jecxz
rol
(bad)
fsubrp
inc
pop
jle
dec
test
sub
les
cli
push
and
jo
nop
in
mov
xrelease
add
push
popf
loop
test
jmp
pop
push
shl
int
(bad)
popfw
mov
pusha
fld
(bad)
dec
mov
push
jbe
rcr
mov
mov
jge
dec
leave
out
fcom
stos
push
inc
pusha
mov
test
pop
adc
mov
iret
(bad)
dec
mov
cmc
add
dec
cmps
mov
(bad)
mov
aaa
in
inc
adc
xor
scas
sbb
out
mov
dec
mov
pop
push
stc
dec
es
adc
sub
loop
cmp
adc
cmp
sbb
and
loop
push
leave
icebp
js
and
adc
out
sbb
inc
sbb
movs
je
mov
jae
push
xchg
iret
loopne
sbb
and
std
sub
xchg
xchg
ins
fwait
mov
in
ficomp
divps
out
gs
xchg
adc
xor
pop
out
pop
rol
cmp
rol
outs
pop
add
jo
movs
jmp
cmp
xchg
xchg
add
fwait
retf
sub
shl
mov
js
mov
lods
lods
mov
and
sub
out
inc
sbb
arpl
cmps
(bad)
mov
test
daa
push
ins
repnz
mov
rcl
push
in
jae
call
js
or
jle
push
inc
mov
sbb
aad
xor
inc
mov
pop
mov
cdq
and
movs
sbb
fst
int3
dec
aad
sub
div
es
shr
loope
arpl
add
clc
adc
pop
ror
inc
cmps
popa
lods
jmp
in
inc
aam
jg
repz
shr
in
pop
sti
push
pop
scas
jno
jnp
add
mov
fdivp
cmc
add
xor
fnstcw
dec
push
test
fbld
cli
sbb
dec
js
mov
jp
enter
sbb
es
jae
xchg
sbb
pop
shl
inc
jae
clc
into
sub
push
adc
sbb
push
mov
repnz
fisubr
push
xchg
or
out
adc
cmc
dec
push
loope
popa
mov
into
and
push
mov
mov
push
sahf
test
mov
out
pop
ins
adc
mov
push
retf
jge
cdq
cmps
xchg
scas
(bad)
xchg
ficomp
js
and
mov
mov
cmc
push
pop
jp
sbb
sbb
icebp
jmp
call
mov
iret
int3
test
cli
pusha
in
pop
not
neg
lea
cmp
std
retf
std
xchg
pop
lods
in
mov
(bad)
scas
push
idiv
lods
js
int3
mov
out
fbstp
sti
stc
leave
sahf
push
push
retf
mov
out
sti
mov
int
push
cdq
scas
fistp
push
mov
dec
icebp
(bad)
sar
jne
mov
pop
dec
(bad)
mov
fnsave
int
and
jg
arpl
es
sbb
sub
jg
adc
loope
outs
or
loopne
ds
dec
nop
xchg
mov
std
imul
fdivr
popf
cmps
out
xlat
jecxz
mov
dec
imul
dec
mov
mov
cli
jle
xlat
(bad)
into
mov
jmp
scas
or
neg
test
add
and
pop
(bad)
rcr
ror
pop
arpl
cmp
nop
push
jo
int
jbe
mov
xchg
test
dec
and
xchg
mov
mov
pop
in
push
fsubr
add
mov
loop
inc
and
dec
shr
mov
data16
jbe
imul
iret
cld
int
mov
cmp
pop
dec
in
mov
mov
jns
lods
daa
in
inc
fwait
mov
hlt
push
jne
dec
cmp
add
push
dec
nop
mov
xchg
adc
test
iret
pusha
mov
inc
cmp
xor
inc
add
dec
nop
mov
fdiv
sub
int
cwde
mov
(bad)
popf
sub
cmps
mov
mov
xor
ror
cmp
push
cld
into
loope
jge
jb
cld
movs
sub
leave
mov
cmps
in
das
sbb
jae
dec
and
aad
cmps
or
mov
std
movs
out
xlat
neg
push
cmps
jb
into
ins
fwait
mov
cs
std
adc
xlat
loope
mov
int3
push
jle
sub
push
jmp
stc
push
dec
(bad)
xchg
lds
ret
fisub
mov
daa
jmp
out
std
dec
cmps
(bad)
mov
fsubr
data16
adc
xor
mul
sub
icebp
lds
stos
imul
daa
int3
add
sbb
and
ret
fcom
fidivr
mov
add
bound
nop
sub
push
dec
adc
adc
pop
or
jnp
jae
xchg
sub
dec
rcr
cmp
sbb
nop
push
and
imul
inc
dec
rol
(bad)
bound
xlat
mov
cdq
gs
in
inc
xchg
je
or
jl
add
cli
and
dec
lds
or
cmps
cld
cdq
je
imul
mov
add
shl
neg
mov
out
fistp
jmp
sbb
loope
inc
addr16
adc
cld
shl
mov
test
fimul
mov
addr16
dec
outs
sub
aas
pop
stos
mov
nop
xor
jge
and
sub
rcr
fldl2e
xor
mov
ds
jg
in
sti
btc
jg
push
std
je
stc
fs
fs
in
xchg
cld
div
jmp
in
push
lock
mov
adc
aaa
fprem1
out
std
popf
stc
(bad)
jnp
jnp
dec
xchg
dec
(bad)
(bad)
lea
sbb
fst
lahf
mov
popf
outs
clc
movs
and
stos
adc
out
jl
lds
xor
add
popa
cdq
enter
xor
shl
and
cmc
or
(bad)
fisub
adc
mov
xor
(bad)
add
pop
addr16
fs
inc
xlat
xor
inc
in
stos
sbb
and
cmps
or
xlat
daa
sbb
scas
cmp
cmps
ins
and
xor
mov
inc
js
or
dec
ror
fcom
adc
fmul
gs
xor
or
fnstsw
and
and
dec
sbb
jns
mov
xor
mov
push
pop
mov
xor
retf
add
jle
inc
push
xchg
pushf
inc
xchg
arpl
lds
sbb
mov
adc
adc
js
daa
or
pushf
sbb
jbe
fs
xor
loope
mov
cli
jns
dec
xor
mov
mov
jo
xchg
fsub
mov
jbe
xor
mov
mov
ror
in
push
addr16
add
and
xor
sub
jle
pop
in
mov
push
pop
add
cmp
sub
mov
mov
jg
mov
jmp
es
nop
(bad)
adc
xor
sbb
cpuid
sbb
cli
inc
add
jl
or
movs
push
xchg
jecxz
mov
icebp
mov
cmp
xchg
int
in
je
push
mov
sbb
inc
sbb
icebp
pop
push
adc
inc
je
fucomip
inc
iret
add
xor
mov
sub
popa
cmps
or
mov
test
imul
mov
scas
(bad)
gs
pop
scas
inc
adc
push
sub
add
jne
cmps
adc
movs
mov
xor
mov
shl
scas
mov
mov
retf
js
sti
out
add
jmp
push
mov
lods
jge
jg
or
xor
push
cwde
push
scas
mov
xchg
mov
mov
jl
icebp
mov
mov
jae
je
dec
lea
out
sbb
dec
rcr
sbb
cmp
int3
je
int3
pop
clc
fisubr
(bad)
mov
loope
cmp
jmp
icebp
pop
xchg
rol
lahf
in
push
ja
fbstp
or
popf
test
sbb
leave
mov
leave
mov
inc
shl
out
mov
dec
inc
scas
dec
inc
iret
lea
femms
inc
aaa
test
push
xor
retf
(bad)
(bad)
mov
in
in
dec
mov
inc
addr16
arpl
les
mov
arpl
fdiv
jno
mov
aam
into
arpl
scas
daa
xchg
cmp
xchg
pop
retf
mov
fcmovnu
ins
aas
imul
xor
out
in
stos
bound
int
jmp
shl
jmp
retf
mov
in
outs
js
dec
enter
jae
jecxz
repnz
xor
je
inc
sub
cmps
xchg
and
int3
mov
lock
pusha
xor
mov
(bad)
xor
inc
dec
sub
cli
mov
imul
cmp
sub
mov
lahf
fwait
sbb
adc
ins
sub
push
mov
mov
cs
fisub
or
and
std
(bad)
jg
stc
add
mov
sub
adc
jno
inc
test
lea
popf
fs
(bad)
stc
scas
sub
xchg
mov
pop
or
(bad)
sti
imul
imul
in
test
lahf
pcmpgtw
mov
xchg
push
sub
add
push
int3
pusha
sahf
les
stc
pop
sub
add
movs
lock
ret
sbb
fbstp
in
outs
push
dec
ror
gs
imul
adc
xor
push
addr16
retf
add
add
adc
shr
add
sahf
enter
je
in
mov
xor
mov
cmps
sar
xchg
sar
jecxz
nop
iret
push
icebp
or
std
std
adc
and
adc
fimul
lods
dec
cmps
add
stos
movs
inc
sbb
imul
cld
and
lock
sbb
cs
test
push
xchg
adc
test
push
out
push
xchg
inc
inc
sbb
mov
push
mov
jge
and
or
mov
stos
arpl
cwde
cmps
jl
imul
les
imul
cwde
xchg
xchg
(bad)
push
lds
ficom
cld
and
adc
int
in
or
repz
mov
sahf
fwait
lods
xor
adc
shl
aas
(bad)
xor
jecxz
jb
pop
js
jo
test
xchg
cmps
data16
mov
pop
aaa
cli
(bad)
je
aaa
sbb
mov
sub
repz
jnp
cmc
not
scas
imul
mov
sbb
sar
pusha
cmps
ja
or
iret
in
pusha
mov
cmp
ret
mov
outs
fsubrp
into
cdq
aad
inc
fcmovnbe
inc
into
fwait
dec
pushf
mov
hlt
movs
add
mov
xchg
outs
xor
cs
pop
lahf
repnz
retf
sbb
frstor
outs
jnp
imul
cmp
imul
sbb
lds
fwait
push
lock
imul
sbb
push
outs
je
lahf
div
pop
sub
xchg
fdivr
pop
xor
xchg
(bad)
cmp
mov
jmp
int3
arpl
jmp
and
dec
sbb
adc
cmps
dec
jno
dec
dec
mov
jae
inc
jmp
stos
dec
scas
push
xchg
dec
inc
xchg
inc
outs
out
fisubr
dec
add
les
imul
jmp
dec
sbb
call
mov
pushf
jbe
mov
sub
data16
fwait
cdq
jb
sbb
fcomp
aam
dec
and
adc
xor
and
adc
loop
mov
jmp
call
mov
mov
shl
out
imul
inc
xor
cli
and
mov
xor
mov
adc
shl
stc
ins
cmc
popf
mov
pop
lods
in
xor
sub
repz
int
cmp
ja
retf
retf
and
int3
pop
xor
adc
sub
es
stos
das
push
xor
ror
inc
sbb
rol
push
or
ret
pop
mov
mov
lea
out
pop
or
in
mov
mov
inc
mov
pushf
and
push
sub
jb
mov
mov
sbb
les
adc
(bad)
test
ret
cmps
jecxz
outs
(bad)
rol
pop
jmp
mov
fist
rcl
mov
out
leave
mov
dec
imul
mov
push
out
sbb
aas
cmp
jmp
dec
cmp
mov
sbb
shr
add
cmp
fwait
cmps
add
pusha
dec
fdivr
and
add
cmp
das
mov
and
and
out
sbb
add
fstp
out
jle
loope
loopne
(bad)
clc
test
fadd
movs
fild
xor
test
scas
xor
(bad)
std
cli
scas
in
(bad)
imul
fistp
call
cld
xlat
jnp
jg
fdivr
cmp
shl
in
push
idiv
xchg
xlat
es
mov
das
(bad)
in
sahf
sub
xor
clc
fs
(bad)
adc
mov
pop
cdq
cmp
aas
pop
scas
add
jg
outs
(bad)
jmp
cmp
push
sbb
sub
dec
xor
retf
shl
sbb
cdq
sahf
rol
sbb
push
inc
ss
inc
pop
in
sub
or
xchg
jle
jmp
cmps
cmp
mov
sahf
push
mov
sbb
pop
push
iret
sbb
mov
movs
in
ror
(bad)
shl
imul
mov
mov
imul
sbb
(bad)
push
cmp
lods
loope
out
rol
mov
loop
fsub
shl
(bad)
inc
mul
cmp
sahf
adc
xchg
stc
call
push
js
mov
mov
mov
sbb
lock
pushw
ror
retf
mov
jns
(bad)
sub
adc
call
aam
jnp
or
add
inc
xor
das
pop
xchg
ret
sbb
and
and
nop
xchg
rcl
push
push
pushf
(bad)
mov
mov
jno
(bad)
jl
adc
inc
inc
or
xor
lea
xlat
ror
mov
ret
xor
dec
mov
or
inc
mov
pop
dec
pop
or
pop
push
lods
dec
sbb
mov
je
mov
adc
(bad)
or
cdq
dec
les
inc
cmps
sbb
push
cmps
adc
xor
and
fisttp
sub
scas
push
xchg
cdq
out
call
adc
xor
inc
ror
out
sub
dec
sbb
or
add
mov
mov
and
mov
repz
jno
mov
rcl
ror
call
fld
retf
popa
mov
lahf
jmp
test
jno
blcmsk
lock
xchg
mov
sub
mov
jge
lods
jmp
mov
call
mov
call
jl
inc
push
cmps
sub
inc
mov
sahf
cmp
repz
pop
push
xchg
movs
lds
mov
scas
out
retf
(bad)
pop
mov
fwait
pop
push
jl
lods
pop
sbb
shl
dec
test
cmp
inc
sbb
addr16
mov
inc
(bad)
jp
in
lods
xlat
mov
mov
xchg
movs
(bad)
mov
sar
pushf
popf
sub
dec
stc
movs
leave
(bad)
arpl
jnp
pushf
xchg
int3
fst
inc
imul
push
mov
(bad)
xchg
cmp
xchg
and
mov
xor
sub
dec
mov
out
(bad)
push
in
inc
out
inc
(bad)
fwait
das
fsub
jmp
cmps
aam
mov
repz
dec
mul
leave
fst
jbe
rcr
mov
ja
sbb
call
fbstp
cwde
jge
in
mov
ret
adc
(bad)
(bad)
push
adc
sbb
int
rol
fcom
dec
call
cmp
inc
mov
jbe
sub
dec
jne
outs
imul
push
test
xor
in
push
mov
adc
movs
sub
in
adc
movs
push
jnp
cmp
lock
fistp
push
call
bound
ja
push
arpl
xchg
xchg
pop
and
sbb
dec
fsubr
adc
mov
mov
adc
ds
js
retf
dec
jnp
test
adc
pop
les
mov
stos
or
pop
inc
fst
fild
adc
mov
fnstcw
fimul
daa
mov
pop
sub
(bad)
call
dec
sub
ja
gs
or
hlt
or
ror
add
sub
inc
or
adc
and
and
push
pop
mov
xchg
inc
xchg
shr
add
adc
mov
xor
movs
mov
out
aam
inc
int3
movs
lds
mov
ret
and
vmwrite
loope
and
or
jg
ret
jle
mov
retf
inc
mov
mov
ja
fstp
inc
sbb
aam
add
cpuid
mov
push
repnz
dec
push
push
jmp
and
adc
sub
mov
ret
(bad)
xor
or
mov
xor
into
mov
pop
xor
add
or
pop
ret
xchg
sub
adc
push
stc
lds
pop
rcl
pop
ja
cmps
loope
xor
movs
mov
loope
cld
std
jecxz
sti
xchg
fcmovnu
std
ret
xchg
repnz
jg
mov
fisttp
ficomp
jle
(bad)
je
bnd
pop
(bad)
out
sub
rol
mov
mov
mov
idiv
jbe
push
je
nop
jns
sar
into
bound
push
out
dec
mov
xchg
sub
xchg
ror
(bad)
pop
sahf
test
daa
mov
mov
ja
sbb
sub
cmp
sub
sub
xchg
pop
sub
dec
(bad)
out
fs
data16
sbb
je
aaa
repnz
sti
ret
mov
adc
jp
or
fnstcw
pop
xchg
rcl
push
call
retf
stos
lods
int3
(bad)
pop
mov
mov
and
vandnpd
ror
push
add
dec
(bad)
fldenv
or
shl
xor
icebp
lds
cmp
inc
adc
and
mov
int
dec
mov
shl
push
test
inc
cmps
sub
xchg
pop
sbb
sub
xchg
push
stos
inc
clc
fsubr
(bad)
retf
(bad)
mov
adc
es
sbb
mov
jbe
adc
call
repnz
gs
es
adc
cmp
js
shl
add
jae
xor
les
aaa
mov
ss
lahf
jmp
cwde
sbb
push
stos
lds
ja
adc
inc
repz
not
scas
enter
hlt
std
cmps
push
xor
loopne
mov
shr
aam
stos
das
shl
mov
pop
in
fimul
cs
mov
pushf
mov
dec
pop
frstor
fsubr
sub
xor
adc
sub
and
dec
dec
adc
loop
xchg
lea
or
dec
or
and
adc
cmp
test
jp
xchg
ret
fcom
int
in
jmp
icebp
xor
inc
ret
dec
icebp
int3
popf
dec
jo
push
xlat
add
and
and
loopne
mov
daa
sub
scas
jno
or
mov
and
or
xchg
cmc
dec
mov
cmp
icebp
test
adc
pop
sti
xor
xchg
fadd
ins
mov
adc
rcr
pop
in
std
(bad)
js
inc
or
sbb
mov
adc
sub
cmp
shl
hlt
inc
ss
setle
int3
mov
cdq
enter
out
into
add
addr16
mov
and
and
jp
shl
cdq
out
push
les
out
cmps
bound
sar
inc
loope
fiadd
sub
lock
cdq
fmulp
rol
icebp
inc
std
loope
mov
jg
mov
dec
repnz
(bad)
xlat
(bad)
jae
aas
fisubr
shl
sahf
(bad)
ss
(bad)
or
lahf
outs
xor
mov
fs
movs
repnz
lea
mov
pop
add
cli
je
fs
sahf
ficomp
sbb
xlat
pop
jecxz
addr16
fdiv
mov
test
jp
inc
ja
mov
mov
enter
out
out
push
mov
add
xchg
adc
xchg
jne
jmp
xchg
sub
adc
cmp
cwde
repz
clc
repnz
xor
sbb
push
inc
xchg
sahf
imul
fld
(bad)
hlt
or
xchg
(bad)
fst
ins
dec
(bad)
stos
fmulp
(bad)
fst
mov
(bad)
jg
pop
cld
and
fsub
cmp
push
push
enter
xchg
or
pop
shl
add
fldl2t
or
cdq
pop
arpl
loope
mov
mov
test
adc
addr16
loop
popf
loopne
adc
rol
leave
and
push
xchg
leave
xchg
mov
ror
dec
mov
mov
sahf
daa
in
aam
imul
cmp
sahf
outs
mov
add
dec
shl
mov
add
js
in
cmp
(bad)
adc
xor
sti
mov
xchg
(bad)
dec
push
mov
xor
dec
push
or
xchg
adc
call
or
pop
loopne
fistp
arpl
and
(bad)
fsubr
clc
lock
jo
jmp
jbe
adc
gs
dec
call
dec
dec
(bad)
std
jae
jns
test
fisttp
retf
mov
fild
cmp
pop
cmp
lahf
imul
pop
push
pop
add
mov
xchg
cmc
(bad)
or
je
dec
popf
push
fisttp
retf
push
pop
dec
xchg
stos
movs
pop
sar
inc
sbb
xchg
or
or
outs
add
add
es
retf
sub
inc
inc
pop
or
pushf
imul
xor
jb
inc
xchg
adc
clc
ret
sahf
aam
cs
push
xchg
mov
adc
inc
stos
pusha
push
dec
xchg
xchg
in
and
push
add
nop
dec
scas
xchg
std
adc
xor
mov
mov
xor
not
stos
cdq
cwde
sbb
jae
in
jmp
pop
out
add
xchg
jns
out
fistp
and
(bad)
int
into
push
xchg
(bad)
arpl
out
fst
cmp
pop
mov
pusha
loope
xchg
and
test
pop
loope
shl
mov
cmp
cmc
outs
lods
push
ficomp
std
js
jecxz
jge
lahf
in
scas
jge
lods
or
repz
dec
add
stc
xchg
sub
jg
pop
cld
fs
shl
test
pop
sbb
fdivr
inc
repnz
cld
sbb
pop
out
(bad)
fs
leave
sahf
(bad)
push
pop
jmp
ja
mov
xchg
jne
aaa
hlt
(bad)
xlat
mul
das
popf
lods
add
xchg
sti
dec
cs
add
lods
xchg
int3
addr16
xor
ret
test
retf
test
xchg
cmp
xor
cdq
push
mov
mov
mov
xchg
fldenv
sub
cmp
mov
mov
cmp
adc
pinsrw
mov
xor
inc
xchg
pop
cmp
cmp
inc
pop
mov
cs
mov
aas
lods
shr
jmp
into
gs
sti
in
or
and
adc
xlat
sbb
pusha
fcomp
(bad)
cmp
sub
sub
dec
mov
adc
leave
scas
add
pop
jecxz
push
push
jb
push
push
jg
fs
cmp
xchg
cwde
inc
sbb
jecxz
and
ret
sub
cmc
jp
mov
sbb
push
mov
xor
dec
scas
cmps
or
cld
aam
push
push
int
loopne
mov
xor
mov
out
mov
frstor
push
lods
clc
jns
addr16
int3
mov
push
cmp
inc
ja
inc
fdivr
pop
dec
mov
xor
ins
dec
iret
adc
fsub
retf
mov
fidivr
xor
addr16
popf
mov
xchg
(bad)
in
mov
retf
stos
sbb
and
mov
imul
loop
int3
retf
xor
cmp
jge
cld
mov
daa
mov
sub
test
pushf
lds
mov
cmp
add
sahf
sub
jbe
fnsave
aas
test
dec
sbb
jecxz
(bad)
jmp
jge
mov
popf
inc
idiv
shr
imul
adc
mov
inc
call
loope
fist
push
pop
ja
dec
add
jp
cmp
mov
mov
mov
inc
in
rcr
lea
xchg
pop
inc
cmc
sar
aaa
cmp
add
or
cmc
inc
xchg
or
hlt
test
mov
mov
aaa
or
xchg
mov
dec
test
dec
aad
ret
push
or
add
dec
mov
push
stos
popf
in
sub
sahf
(bad)
int
mov
arpl
test
enter
fcom
mov
adc
sar
inc
cmp
or
and
repz
pop
sub
or
popa
mov
les
(bad)
mov
mov
fild
sti
dec
loopne
sbb
cdq
int3
jmp
ret
shl
stc
in
or
push
into
mov
sub
sbb
enter
xchg
pop
xchg
aaa
imul
fsubr
js
pop
retf
loope
jge
xor
add
fdiv
xchg
mov
cmp
pushf
movs
shl
aam
loope
icebp
fmul
rol
cmp
sbb
push
rol
repnz
push
hlt
xchg
cli
inc
mov
out
rcr
cli
pop
sub
fcmovu
std
fadd
out
cdq
shl
div
jg
push
jns
xor
sub
mov
pop
outs
jl
outs
out
mov
lods
in
aaa
push
sub
cdq
aad
lods
push
push
rol
and
sub
dec
retw
xor
gs
xchg
push
fcmovbe
inc
pop
sbb
ror
xchg
daa
adc
(bad)
rol
dec
push
seto
out
inc
cdq
jae
ins
ins
fs
(bad)
cmp
outs
jne
mov
sub
jmp
in
hlt
std
in
je
fucomp
jmp
scas
(bad)
mov
enter
pop
sub
popw
push
dec
xlat
push
mov
jo
mov
fucom
cli
imul
add
cmps
arpl
sahf
xor
xchg
adc
add
(bad)
fxtract
imul
jmp
ds
and
aad
cmp
lea
fidiv
repnz
or
cdq
xor
and
clc
sub
push
jb
xor
arpl
sbb
loope
das
or
inc
and
mov
bound
in
xchg
movs
xor
add
popa
cmp
lds
add
cmp
jecxz
cmp
retf
mov
fadd
sar
jno
mov
loop
stc
pop
(bad)
inc
push
repz
retf
mov
sub
add
out
dec
pop
xchg
loop
push
xchg
ja
sub
mov
sti
arpl
xor
push
fild
ret
loop
daa
mov
in
stc
sti
mov
add
out
xlat
mov
sahf
jle
pop
icebp
jl
cmps
xor
(bad)
push
cmps
dec
ficomp
test
mov
in
push
xchg
aaa
and
add
add
xchg
xchg
int
in
mov
and
hlt
jmp
lahf
bound
mov
pop
xor
push
dec
jno
mov
mov
lds
fst
clc
pop
and
fs
fucomip
mov
pop
adc
cmp
jns
call
add
pop
pop
loop
sub
shl
(bad)
sub
adc
enter
xchg
ret
or
sub
not
jge
cmp
inc
(bad)
fdivr
push
mov
pop
hlt
lock
repz
xor
nop
movs
xlat
or
xchg
ficomp
mov
sti
pusha
lods
repnz
in
dec
out
mov
loop
dec
pop
ficom
in
loope
aas
fcom
pusha
ret
and
mov
in
xchg
scas
mov
xchg
mov
dec
das
iret
xchg
aas
pop
in
inc
cmp
adc
mov
and
mov
mov
cdq
fsubp
stos
scas
clc
mov
xchg
fstp
adc
in
cs
mov
or
pop
add
xor
cld
and
adc
inc
fwait
xchg
test
loop
push
les
cmp
inc
cdq
mov
movs
fistp
neg
sub
push
push
adc
and
mov
(bad)
out
dec
cmps
mov
mov
jg
scas
repz
xor
and
sbb
mov
out
inc
mov
push
xchg
sbb
shl
adc
push
rcr
or
enter
add
aaa
int3
ja
rol
mov
add
mov
rcl
out
inc
out
lock
mov
add
inc
sbb
fild
mov
and
cmp
outs
and
push
ror
sbb
gs
movs
(bad)
mov
sbb
xor
ret
test
test
(bad)
popf
inc
add
inc
xchg
enter
loop
xor
sub
inc
add
fbld
sub
cmp
add
stc
sub
fwait
jp
mov
popf
pusha
rol
cmp
pop
fst
cmp
xor
(bad)
jmp
xchg
or
lods
mov
jbe
or
mov
mov
gs
leave
push
ins
sti
push
stos
push
and
ss
fcomp
pop
sbb
adc
gs
mov
xor
test
or
adc
adc
push
cmp
dec
and
jb
scas
cli
and
adc
and
xor
push
sub
cmp
xchg
mov
and
in
xor
or
(bad)
jle
retf
xor
and
add
push
mov
sbb
jl
into
adc
cmp
in
jbe
(bad)
push
es
sub
push
into
lock
arpl
or
shl
loopne
inc
cdq
cmps
jge
xor
test
xor
jae
inc
mov
sbb
mov
mov
xchg
mov
cs
add
mov
xchg
aaa
add
jnp
(bad)
jp
mov
je
jb
jg
idiv
mov
adc
jb
dec
gs
into
pop
ficomp
mov
stos
inc
(bad)
test
(bad)
xlat
retf
stos
cld
js
icebp
xchg
cmc
fimul
push
push
out
repnz
test
out
stos
dec
iret
in
in
aaa
dec
mov
out
fwait
or
xchg
pop
cwde
enter
aam
xchg
or
(bad)
mov
dec
lods
or
dec
rol
retf
mov
das
push
data16
shl
cmp
and
dec
ror
cmp
push
mov
ds
popf
xchg
les
int
popf
jno
push
ror
xchg
or
push
sar
test
jmp
imul
xor
sbb
mov
sbb
nop
pop
test
xor
mov
jmp
cdq
pusha
(bad)
mov
mov
arpl
sbb
lods
rcr
(bad)
mov
pop
lahf
movs
ins
mov
jg
popf
or
mov
jmp
aad
iret
sbb
imul
inc
or
cli
or
and
sbb
gs
cld
pop
stos
cmp
xchg
and
or
pop
sub
pop
je
adc
fdiv
or
or
popa
ror
es
call
adc
push
lds
xor
jbe
movs
shl
jae
stos
sbb
icebp
inc
hlt
test
inc
push
in
out
scas
out
jmp
and
sub
loopne
(bad)
xor
sub
inc
test
jg
xor
aad
sub
aaa
cmp
cmps
push
dec
jg
xlat
pop
(bad)
ja
retf
sbb
lods
xor
ins
jmp
test
pop
jmp
cmp
push
inc
and
lods
inc
out
test
aaa
nop
test
cmps
jecxz
mov
push
data16
test
pop
(bad)
mov
in
outs
int
fistp
jmp
stc
std
test
dec
push
retf
movs
push
inc
jno
xchg
es
aaa
or
push
or
sub
mov
test
pushf
movs
int
xchg
outs
lea
dec
out
popf
mov
or
sbb
test
js
push
jp
ret
jge
cmp
mov
xor
out
mov
push
ja
xlat
aas
adc
lock
inc
jne
sbb
(bad)
xchg
mov
cmp
push
(bad)
pushf
icebp
movs
push
jne
loop
cmp
ret
rcl
push
movs
mov
inc
dec
fidivr
cmp
cmp
scas
imul
div
fadd
arpl
cwde
sahf
sbb
mov
add
mov
jns
xor
pop
sub
mov
out
(bad)
dec
push
retf
scas
std
jo
test
out
leave
int3
or
cmps
out
cmovg
pop
sbb
out
jmp
mov
jb
(bad)
loope
mov
xchg
jge
xor
xchg
jbe
int3
shr
loop
nop
lds
(bad)
mov
mov
mov
mov
push
sti
or
xchg
xor
dec
sti
xchg
inc
sbb
inc
xor
fmulp
jmp
pop
in
mul
(bad)
lods
fist
xor
cmc
sahf
retf
sub
pop
ins
addr16
dec
mov
int
sub
sub
and
sub
mov
mov
sbb
push
scas
jg
push
in
push
cmc
fmulp
sti
mov
adc
retw
(bad)
push
mov
xchg
shl
mov
push
push
xor
jo
jecxz
es
icebp
js
outs
int3
cmp
inc
cmp
out
add
ds
adc
dec
or
xchg
dec
ror
xor
sbb
xor
add
in
add
cs
xchg
mov
(bad)
(bad)
loopne
retf
repz
sub
loopne
xchg
call
jmp
dec
stos
push
adc
rcr
adc
and
push
mov
cwde
mov
loopne
adc
inc
or
cli
adc
cmp
adc
cmp
push
into
push
mov
in
inc
les
in
jg
(bad)
loopne
add
pop
mov
retf
inc
scas
jge
xor
shl
idiv
xor
mov
xchg
xchg
rol
jmp
hlt
movs
inc
sbb
ss
push
inc
xor
stos
cs
pop
xor
int3
cli
jb
jg
and
or
dec
cmp
dec
enter
push
ins
mov
gs
push
push
inc
push
inc
mov
jb
lods
loop
mov
(bad)
int3
test
(bad)
call
fs
sti
jl
jns
mov
mov
call
and
or
scas
inc
pop
sbb
sbb
je
shr
sub
inc
or
ins
(bad)
fidiv
cdq
mov
push
sub
imul
cs
pushf
adc
jle
pop
sub
push
mov
inc
mov
and
mov
in
data16
aaa
mov
int3
inc
adc
test
bnd
or
mov
pop
sub
and
xor
repnz
ja
fimul
lahf
lock
and
aas
mov
jbe
xchg
in
nop
mov
fisubr
ror
ror
mov
retf
es
imul
add
mov
mov
xor
hlt
ret
add
outs
imul
lods
xchg
aas
pop
sub
adc
out
(bad)
scas
jbe
jle
mov
clc
retf
xchg
jg
mov
and
std
cmp
int3
iret
(bad)
stos
aas
(bad)
(bad)
jmp
mov
mov
xor
and
gs
test
out
fldcw
xor
add
mov
pop
mov
xchg
mov
in
dec
dec
sbb
inc
jg
or
cmp
inc
pop
lahf
xor
xor
aaa
and
int
add
bswap
or
ins
arpl
xchg
pop
retf
jle
not
xchg
outs
ins
cmps
pop
not
out
fistp
sub
retf
lea
sbb
std
test
dec
and
ret
popf
inc
pop
sub
cmc
fadd
pop
jb
sbb
push
int3
int3
and
cdq
ss
adc
jae
outs
(bad)
push
fmul
dec
dec
ins
(bad)
cmp
and
adc
mov
inc
mov
mov
sar
iret
pop
sub
jbe
rcr
xchg
mov
lods
xor
dec
ja
sub
std
pop
sub
out
or
push
(bad)
cs
mov
mov
dec
in
push
push
xchg
and
nop
add
pop
test
pop
xchg
mov
cwde
gs
fadd
xor
pop
push
sbb
(bad)
shr
(bad)
out
jb
push
aas
pop
icebp
xor
xor
xchg
aam
ds
fld
sub
lods
gs
add
jge
xchg
push
gs
xchg
in
dec
pusha
push
dec
lds
mov
push
sub
push
test
mov
rcr
fild
jo
pop
mov
mov
inc
dec
sti
pushf
mov
cli
cwde
dec
sub
dec
sub
sbb
enter
nop
popf
into
pusha
popf
pop
inc
(bad)
loopne
in
xchg
sub
fcomp
retf
xchg
loope
sub
xchg
data16
push
pop
inc
aad
lods
daa
fidiv
xor
lods
cmp
out
popa
cld
fisttp
push
push
jno
in
pop
lahf
cmc
dec
mov
inc
sbb
unpcklps
add
and
push
push
sub
jl
sbb
lods
ins
stos
xchg
sar
(bad)
out
dec
or
mov
push
mov
add
push
inc
xchg
jl
or
test
push
inc
push
push
mov
in
ins
cmp
outs
cmp
out
push
aas
sbb
cmps
pusha
outs
sbb
xchg
repz
inc
leave
cmp
mov
(bad)
sbb
mov
in
fchs
call
out
mov
adc
xchg
mov
inc
pop
loope
xchg
push
movs
fst
(bad)
repz
dec
aam
and
(bad)
sub
fdivr
mov
addr16
lods
xchg
aas
pop
sub
and
jmp
out
mov
fistp
add
mov
cmp
pop
jl
mov
ret
xchg
shl
fld
ja
cli
dec
push
mov
add
lock
jecxz
xchg
ret
push
xchg
or
pop
fs
enterw
add
sbb
retf
jge
jle
xor
cdq
add
sbb
cwde
push
sti
dec
and
jl
cmp
mov
mov
sbb
cmp
sbb
stc
mov
mov
add
cmp
dec
xor
mov
or
mov
mov
popa
cmp
adc
(bad)
pop
int3
push
sti
jne
ret
sub
mov
js
push
fistp
cmp
jp
cli
pop
cmc
xchg
xlat
int3
cmp
cs
fsubr
xchg
sbb
mov
fs
mov
clc
add
jl
mov
sub
or
fild
bound
rcr
dec
jmp
xchg
inc
xchg
scas
pop
int
iret
inc
sbb
mov
and
sub
mov
sbb
xchg
mov
sar
jp
inc
sbb
push
mov
mov
and
push
sub
sub
dec
movs
xor
jo
rcl
mov
ins
mov
das
xor
xor
outs
data16
loopne
xchg
inc
adc
or
inc
inc
push
and
rcr
mov
sbb
mov
popa
push
jb
inc
mov
scas
cmp
xchg
mov
mov
ds
pop
mov
pop
mul
adc
jne
inc
xchg
inc
or
pop
(bad)
stos
leave
mov
or
mov
pop
ins
sub
jae
in
or
push
sub
jl
jnp
inc
lods
(bad)
xor
xor
add
cwde
movs
xchg
xchg
jae
cmps
aaa
sbb
popa
(bad)
dec
jecxz
loopne
push
pop
(bad)
in
icebp
movs
mov
or
sbb
cs
mov
xchg
or
pop
mov
retf
xchg
or
in
adc
sub
jmp
iret
add
pop
fs
or
aam
cmp
inc
xor
push
sub
push
push
jl
movs
and
sbb
gs
jae
cmp
xchg
adc
inc
dec
fucomi
movs
les
dec
test
adc
mov
popf
or
xchg
in
push
xchg
adc
ds
mov
int3
mov
loop
adc
daa
add
jne
and
xlat
pop
mov
pushf
or
jp
jb
cli
pop
inc
dec
pop
cwde
aad
xor
dec
dec
cmp
jne
xor
aam
sbb
out
xor
xor
ja
aaa
xor
(bad)
dec
xor
mov
repz
cwde
jns
fcmovnu
fist
aas
cmp
add
sub
xor
lahf
out
stos
push
test
addr16
repz
or
pop
push
sub
cmp
rcl
cld
fs
fs
lock
scas
loope
es
cld
cmps
pop
jnp
test
sub
inc
sub
cs
fst
retf
ret
fstp
cwde
sbb
or
cmp
dec
inc
mov
data16
mov
push
mov
or
push
push
outs
inc
add
ss
dec
scas
jecxz
data16
jno
(bad)
fist
jmp
pop
mov
pop
scas
sbb
adc
inc
adc
cmp
cmp
jne
fxam
dec
sbb
scas
jecxz
es
aaa
(bad)
sub
xchg
mov
and
mov
mov
(bad)
dec
mov
leave
adc
jmp
mov
push
jge
inc
lods
and
inc
sbb
add
xchg
add
push
xor
mov
pop
data16
data16
jns
pop
jno
in
xchg
xchg
pusha
cwde
mov
xor
push
je
xchg
inc
sub
sub
fcom
or
ror
dec
out
dec
mov
ss
mov
lock
inc
scas
xchg
sbb
push
xor
adc
retf
ins
ja
push
xchg
jns
sbb
stc
inc
cdq
sar
dec
sbb
xlat
jl
das
add
dec
addr16
gs
xor
rcl
lahf
inc
lods
repz
loopne
mov
test
popf
iret
test
pop
repz
es
test
les
fmul
adc
push
mov
popa
xchg
add
inc
pop
icebp
mov
cmp
out
jp
mov
daa
cmp
xchg
out
fistp
(bad)
mov
and
imul
sbb
cmp
inc
sub
arpl
int
repnz
iret
add
inc
call
push
jb
xor
push
inc
cmp
mov
dec
mov
imul
mov
add
xor
add
ins
test
mov
sub
or
fisubr
push
dec
sub
es
fild
xchg
adc
dec
mov
dec
and
out
sar
dec
sbb
imul
mov
mov
xchg
loope
add
pop
test
loope
sub
jnp
pop
jns
dec
ja
pop
and
pop
icebp
xor
imul
ret
inc
or
rcl
cmp
sbb
aaa
push
js
and
imul
mov
push
pop
repnz
aas
popf
sub
icebp
inc
xchg
push
in
pop
out
out
pop
adc
loopne
(bad)
jp
jbe
clc
mov
loopne
std
jge
sub
pop
push
or
in
imul
pop
mov
add
hlt
dec
inc
inc
push
retf
push
mov
ja
test
cwde
movs
sbb
je
push
mov
xchg
xchg
mov
inc
test
pop
cdq
lds
js
pushf
int3
shl
das
je
mov
test
cwde
cwde
mov
stos
call
clc
fisttp
jo
mov
fisub
pop
xchg
popf
xchg
fwait
repnz
mov
push
je
repnz
lock
mov
loope
clc
fdivr
fstp
mov
aad
mov
ins
push
outs
sub
ret
popf
jb
mov
adc
xchg
mov
js
cmp
repz
mov
fsubr
adc
mov
fwait
jne
js
mov
mov
sahf
neg
loop
aam
(bad)
repz
push
push
mov
adc
pusha
loop
add
rol
xor
repnz
test
mov
xor
push
aad
ins
dec
push
mov
call
int3
sbb
xchg
cmps
stos
call
mov
or
and
sar
leave
xchg
les
push
das
ins
jmp
push
dec
xchg
call
das
rcr
test
mov
cs
pusha
sbb
adc
popf
dec
inc
sbb
push
jo
mov
or
xlat
ins
sbb
fs
repnz
or
push
sbb
mov
fs
push
repnz
retf
and
pushf
or
jg
push
inc
cmovnp
pushf
out
(bad)
in
or
ror
daa
pop
in
into
adc
ficom
fimul
adc
mov
xlat
push
pop
sub
jmp
push
cmp
xchg
out
stc
sbb
inc
in
imul
push
cli
mov
mov
out
adc
adc
pushf
pop
lods
xchg
adc
stos
in
xlat
push
and
in
loop
xor
repz
popa
jecxz
jp
adc
xor
in
or
xor
push
dec
xor
xlat
cmp
loop
mov
cmp
repz
movntps
cmp
stc
xchg
xchg
pop
lds
retf
rcl
mov
cwde
pop
mov
bound
iret
outs
cli
inc
mov
add
aad
sub
push
fbstp
push
pop
adc
push
mov
mov
cmp
and
and
jle
ror
stos
mov
into
sub
and
lock
push
add
add
into
jae
repnz
jle
sub
mov
imul
popa
inc
xchg
mov
fnsave
jge
aas
in
cli
test
mov
push
leave
lds
pop
pushf
mov
fdivr
mov
pop
lea
retf
imul
les
xor
xor
dec
xchg
sahf
cdq
sub
adc
xor
adc
icebp
clc
xchg
lds
cmp
xchg
xchg
dec
pop
mov
pop
enter
xlat
scas
ja
cld
fs
hlt
jecxz
ret
fst
pop
outs
lods
cli
aaa
push
popf
mov
idiv
clc
fcom
pop
adc
xchg
in
push
xchg
leave
std
add
cmp
mov
jl
jg
jmp
mov
sbb
cmp
jno
xlat
mov
inc
pop
ror
pop
enter
in
mov
inc
gs
inc
idiv
nop
mov
iret
mov
mov
sub
int3
not
out
sbb
sbb
out
aad
test
cmp
mov
sub
jns
xchg
aaa
or
call
jns
sahf
shl
pop
imul
mov
or
jbe
and
add
popa
icebp
ret
inc
mov
sbb
mov
mov
mov
sahf
pop
sar
pop
cmp
(bad)
pop
out
xor
lods
fwait
inc
sub
sbb
(bad)
sti
jbe
add
outs
popf
add
fadd
mov
or
xor
je
push
imul
pop
sbb
or
xchg
icebp
adc
inc
inc
call
mov
out
or
cmp
push
pop
iret
sbb
xchg
xchg
inc
mov
shl
mov
dec
inc
mov
inc
push
adc
int3
adc
aaa
pop
cmp
mov
aaa
jne
jecxz
dec
icebp
inc
jmp
sub
add
jno
adc
stc
pop
fcom
movs
test
(bad)
imul
test
push
xchg
push
ins
sbb
inc
stc
cmp
stc
repnz
mov
xor
xchg
imul
add
cmp
in
js
scas
push
pop
inc
sbb
out
(bad)
in
or
std
inc
or
sub
stos
jecxz
idiv
ins
or
xor
push
clc
adc
pop
mov
in
dec
mov
shl
jmp
push
pusha
lods
jnp
sar
sahf
shr
inc
aad
int3
adc
sbb
and
mov
mov
push
xchg
sbb
inc
xor
and
dec
xchg
fadd
sahf
cmp
xchg
mov
mov
ror
xor
or
push
leave
add
push
loopne
push
add
dec
fucomip
mov
fs
repz
mov
mov
xchg
es
mov
dec
xchg
inc
leave
clc
and
in
pop
push
mov
mov
ficom
and
out
daa
out
scas
repnz
jb
repz
fnstenv
xchg
push
ficom
shr
sub
out
getsec
cli
jg
pop
cli
(bad)
fs
(bad)
and
cmp
out
mov
aas
cmp
hlt
fisubr
in
lock
ja
add
push
out
sar
cmp
outs
pop
fistp
std
add
out
dec
scas
call
lods
out
enter
sub
push
cmp
add
not
jb
xchg
xor
bnd
xor
scas
push
mov
inc
pop
or
push
inc
ret
push
jae
fdivr
xchg
imul
inc
lahf
inc
sbb
jb
mov
mov
in
mov
xchg
pop
ret
aad
pop
and
jp
mov
jo
add
sar
sbb
rcr
or
mov
pop
jb
pop
fisttp
pop
push
xor
fwait
ret
dec
fiadd
mov
pop
jl
inc
pop
xlat
loopne
jle
xor
lods
out
ret
mov
ss
fiadd
inc
fmul
shl
(bad)
xchg
jl
sbb
adc
enter
int
xchg
popa
jl
push
xchg
nop
(bad)
sysexit
(bad)
jge
cmp
inc
aam
push
dec
pop
popf
mov
movs
int
adc
push
fisttp
sub
lods
dec
imul
xchg
dec
xor
rol
shl
adc
clc
das
(bad)
or
mov
inc
inc
or
cwde
sbb
push
ret
jle
mov
cmp
jae
fwait
scas
xchg
aam
dec
mov
mov
mov
fiadd
enter
aam
test
call
iret
cmp
in
cmp
(bad)
retf
jne
call
inc
sbb
sub
sbb
repnz
lods
dec
repz
nop
adc
cmp
xchg
out
loop
and
pusha
into
js
xor
lods
push
mov
add
cmp
call
imul
ins
ret
fimul
arpl
mov
sahf
jno
rcl
inc
mov
gs
imul
or
ins
fcom
or
xor
jne
les
scas
iret
ror
jns
jle
push
lock
xor
push
outs
xchg
mov
icebp
xor
out
enter
test
call
add
push
call
js
sbb
cmp
ins
ins
add
pop
and
push
sub
push
pop
stos
push
mov
mov
mov
or
(bad)
xchg
xor
mov
cmc
call
shl
dec
pop
inc
xor
je
aas
sahf
jns
mov
mov
push
mov
iret
das
ja
add
cmp
outs
mov
mov
mov
lods
hlt
out
xlat
xchg
mov
scas
int3
out
sbb
nop
test
shl
dec
enter
sbb
into
sub
int3
xor
inc
adc
sub
dec
arpl
xor
xchg
cmp
and
scas
xchg
jecxz
push
cmp
pop
gs
inc
ror
inc
es
push
inc
cdq
pusha
cmp
push
push
sbb
sbb
inc
sub
mov
sub
sub
mov
push
es
(bad)
cmp
mov
lods
push
mov
mov
jge
and
in
iret
mov
das
xlat
inc
jne
pop
inc
(bad)
gs
shr
jmp
push
(bad)
mov
lods
sub
mov
pushf
ja
mov
mov
and
sbb
jno
xchg
nop
inc
enter
gs
and
or
fsin
xor
test
mov
xor
add
mov
movs
inc
pop
mov
pop
ss
(bad)
fild
push
xor
retf
sub
cmp
retf
push
or
cmp
jno
pop
adc
mov
sbb
sbb
add
retf
out
rcl
inc
fmul
lods
div
js
push
arpl
or
inc
xor
fisubr
and
add
mov
cmp
dec
inc
cdq
mov
jnp
add
push
inc
sahf
lds
sbb
arpl
pop
sbb
add
stos
dec
mov
jmp
jp
into
jg
hlt
fs
mov
pop
retf
retf
retf
es
retf
mov
sbb
push
sbb
inc
inc
fxch
push
ja
lahf
rol
or
cmp
(bad)
popf
jae
and
mov
push
xchg
xchg
enter
mov
imul
cmp
int
pop
test
add
sbb
sbb
inc
movs
mov
int3
in
clc
pop
sub
repnz
mov
lock
aad
cdq
sbb
sbb
call
dec
push
sub
pop
mov
dec
push
push
ds
and
fwait
scas
fidiv
mov
jmp
push
(bad)
sbb
into
inc
sbb
jmp
xor
jp
inc
arpl
mov
ret
push
jae
inc
lock
sub
mov
pop
inc
push
pop
mov
xchg
inc
out
push
fistp
pop
cmp
add
retf
jmp
mov
add
les
gs
mov
test
xchg
or
daa
dec
push
retw
icebp
jmp
(bad)
jae
std
cs
cmp
popf
pop
lods
std
jo
lock
push
out
inc
dec
xchg
pop
int3
pop
jg
push
jnp
mov
jae
fdivr
nop
mov
call
test
not
mov
jns
stos
dec
jae
popf
cmp
dec
popf
jge
lods
cmp
fiadd
dec
push
jo
or
add
push
xchg
mov
ret
out
sub
xor
cmp
mov
inc
sub
mov
and
dec
cs
(bad)
arpl
loope
mov
cmp
retf
xor
xchg
add
out
dec
xchg
mov
outs
sti
and
dec
mov
int3
jecxz
jb
pop
adc
jl
jnp
or
call
and
sti
ret
dec
dec
mov
call
loopne
or
lods
xlat
mov
push
and
sub
xor
stc
rol
or
cvtpi2ps
xchg
jbe
cmp
pop
test
push
pushf
pushw
and
xchg
xor
sub
adc
fcomp
dec
int
sub
mov
(bad)
ror
push
add
add
push
xor
movs
jp
mov
add
pusha
inc
xchg
lods
mov
add
sahf
cmp
mov
mov
aad
enter
jp
xchg
mov
pushf
hlt
xor
leave
repz
cmps
fsubr
pop
loope
sub
es
cmp
loope
push
int
scas
inc
pusha
add
fsubr
jb
rol
sbb
imul
loop
mov
fwait
stos
in
sbb
addr16
nop
or
cmp
pop
adc
loopne
or
sbb
or
in
mov
jbe
jnp
aam
out
pop
lods
mov
test
add
ins
rcl
cmp
dec
pop
daa
cmp
or
aaa
inc
add
add
inc
xor
sbb
jae
jo
int
cmps
xor
leave
rcr
int3
pop
cli
cwde
mov
jecxz
das
es
hlt
push
push
test
vmread
pop
imul
push
cs
stos
pop
inc
cmp
sbb
in
rcr
gs
mov
mov
xchg
ret
sub
inc
jno
pop
sbb
jge
add
iret
into
cmp
add
xor
retf
sbb
mov
(bad)
fcomp
call
mov
(bad)
and
jmp
push
cmp
mov
or
ds
pop
xchg
mov
jp
cmp
repnz
cmp
mov
xchg
retf
icebp
loope
call
mov
mov
and
cmc
jge
pop
(bad)
mov
lea
shl
scas
repnz
add
jnp
pop
aas
pop
sub
jp
jecxz
sbb
fist
adc
sub
fstp
cmp
xor
xor
xchg
addr16
mov
push
dec
into
into
push
aas
pop
scas
jge
pop
jge
mov
movs
mov
cld
imul
mov
adc
mov
mov
in
fcom
fistp
cwde
mov
mov
fs
cmp
retf
into
rcr
ficomp
pop
cmp
retf
jp
loop
mov
(bad)
jecxz
add
out
add
pop
push
leave
or
in
mov
cmps
dec
push
jns
sub
push
(bad)
pop
dec
adc
xchg
retf
xor
sbb
jp
jge
push
es
mov
sti
jne
daa
mov
inc
sbb
mov
inc
sbb
push
sub
cmp
xchg
loope
popa
aas
inc
dec
ret
test
shl
cdq
adc
cmp
sbb
leave
xchg
sti
out
push
cmc
mov
scas
sub
call
and
mov
lea
lock
add
les
and
xor
pop
mov
mov
add
imul
arpl
ja
gs
hlt
inc
mov
xor
scas
or
sbb
sub
jne
mov
xchg
pusha
aam
inc
sbb
test
push
xchg
(bad)
push
ins
(bad)
adc
popa
mov
retf
xchg
lock
or
and
cli
jmp
nop
fdivrp
cmps
cmp
aaa
xor
in
xor
outs
cmps
(bad)
dec
shl
(bad)
add
jb
std
adc
das
mov
call
dec
jae
imul
or
inc
adc
xchg
or
mov
fs
cmp
imul
out
adc
jl
mov
jp
enter
mov
jbe
sub
mov
and
dec
mov
sub
fldpi
cmp
jge
nop
out
rcr
cmp
shr
jp
in
push
push
(bad)
cmp
add
xchg
xchg
and
xchg
or
or
mov
xchg
cli
xor
mov
mov
and
and
mov
cmp
je
pop
mov
adc
sub
popf
push
les
mov
cmps
push
push
test
pop
push
push
or
xchg
popa
mov
dec
xor
jne
fistp
push
push
xchg
xor
xor
xor
push
push
jo
cmps
sbb
stc
out
cmp
enter
or
or
sti
inc
jmp
in
bound
sub
add
in
fs
jo
loopne
clc
pop
or
int3
test
and
loop
add
(bad)
xor
jno
cmp
mov
cmps
jnp
test
fdivr
call
xor
or
repnz
jmp
(bad)
lahf
scas
xchg
jg
push
inc
out
cmp
mov
xchg
sar
jmp
lock
loope
jge
inc
sbb
adc
mov
test
mov
retf
xchg
fistp
jge
scas
div
xor
jns
jl
push
sbb
adc
je
ret
rcl
arpl
pushf
test
push
je
inc
cdq
inc
push
out
mov
add
retf
dec
test
dec
inc
push
xchg
lea
shl
push
in
xchg
sub
retf
std
sub
pop
test
int3
pop
dec
pop
push
test
mov
fsub
lds
add
dec
jnp
cld
sbb
ins
mov
(bad)
mov
gs
dec
lods
push
cmps
int3
adc
sub
stos
adc
pop
jo
scas
inc
dec
or
es
lods
mov
mov
push
pop
xor
mov
ins
popa
adc
(bad)
std
mov
fs
or
cmc
gs
lock
call
pmulhuw
stos
pop
(bad)
mov
shl
test
xor
in
adc
sar
outs
cmps
sub
(bad)
mov
adc
sti
add
int
xchg
sub
es
adc
pop
xchg
mov
xchg
xchg
cmp
repz
cdq
adc
and
xchg
mov
sbb
sub
ss
inc
jle
test
pushf
sbb
repnz
data16
int
or
pop
sbb
and
aaa
mov
mov
mov
pushf
inc
fcmovb
aam
dec
add
pop
or
jl
or
inc
jp
les
retf
sahf
mov
les
int3
aad
jmp
retf
rcr
rcl
dec
or
adc
inc
sbb
dec
sbb
or
call
(bad)
loop
dec
call
add
and
fidiv
je
adc
jmp
pop
sbb
test
xlat
add
add
sub
jp
callw
mov
adc
test
call
xchg
call
fwait
adc
test
ins
imul
aam
xchg
add
std
loopne
ds
push
and
mov
icebp
sub
add
xor
xchg
sbb
fcmovbe
dec
ret
jle
repz
jno
stos
sahf
jns
jo
jne
sbb
outs
aas
clc
scas
add
daa
inc
fidiv
inc
das
lea
jo
push
cmp
adc
jge
push
out
sbb
xchg
lahf
mov
popf
aas
cmp
pop
push
test
rcl
ins
out
call
push
arpl
xor
hlt
pusha
hlt
ins
mov
mov
push
lock
sti
jp
repnz
jmp
js
jns
(bad)
(bad)
sbb
rcr
cmp
pop
(bad)
cmp
dec
ret
(bad)
mov
in
pop
in
cdq
retf
inc
inc
int3
pop
add
shl
jge
outs
jmp
out
loop
mov
stos
stos
into
aad
rcl
icebp
icebp
jp
lea
sub
push
inc
(bad)
aad
push
dec
cmp
les
leave
sub
add
shr
sbb
adc
dec
stos
dec
push
and
test
imul
(bad)
xchg
sbb
pop
mov
add
bound
jge
rol
xor
push
lods
movs
inc
jmp
pop
ins
jmp
ja
cmp
xlat
outs
ret
jns
(bad)
mov
push
fs
xchg
lea
push
cmps
pop
pop
daa
add
or
pusha
jmp
fsubr
sub
pusha
dec
xchg
cmps
xlat
or
outs
sbb
(bad)
sbb
push
aaa
jno
leave
ins
jbe
imul
(bad)
cs
retf
jno
push
(bad)
pop
or
xor
xor
push
add
(bad)
pop
xchg
inc
outs
imul
xchg
add
ret
mov
or
push
inc
sub
ins
sub
pushf
fdiv
or
sbb
out
mov
dec
and
popa
outs
rol
fwait
pop
xchg
and
sub
dec
retf
sub
aam
in
mov
jp
push
inc
sub
call
or
dec
adc
fimul
pop
mov
xchg
repnz
repz
into
push
inc
pop
gs
es
fistp
or
lds
adc
retf
mov
fwait
sbb
pop
mov
in
inc
in
mov
das
(bad)
jno
and
xchg
and
mov
imul
int
fsub
pop
sbb
dec
mov
sbb
pop
sub
mov
xor
pop
pop
jno
ret
cli
(bad)
stc
shr
(bad)
aam
xor
cmps
(bad)
shl
and
dec
jo
rcl
or
mov
mov
and
hlt
xor
fstp
sti
mov
loope
push
jl
xor
out
pop
add
iret
xchg
add
data16
fisttp
test
pop
add
or
and
mov
outs
xor
add
jp
bswap
sub
ret
in
mov
dec
jbe
and
(bad)
jbe
int
jmp
fdivr
mov
in
mov
jge
leave
jge
fsubrp
push
mov
mov
scas
jg
mov
(bad)
js
icebp
jmp
cmp
ja
and
cmc
data16
sbb
mov
lods
sti
fucomi
pop
lahf
scas
push
aas
pop
sub
ss
rcl
es
int3
in
pop
sub
mov
test
inc
xchg
cmp
int3
push
outs
push
into
pop
aas
pushf
mov
je
pusha
div
inc
add
fwait
cmp
dec
sub
mov
jns
mov
outs
fbstp
jp
dec
sub
ins
push
dec
xchg
mov
mov
enter
test
leave
xor
jb
cs
pop
pop
scas
sbb
mul
loopne
sar
shl
bound
mov
mov
jle
(bad)
out
test
xchg
imul
dec
mov
adc
pop
mov
mov
xor
movs
repz
dec
mov
pop
pop
je
xor
lds
rol
or
jp
xlat
loope
mov
neg
sub
or
cld
dec
inc
and
and
dec
lods
scas
idiv
sbb
imul
mov
inc
(bad)
popf
and
repz
inc
pop
cmp
retf
rcl
hlt
jne
jle
mov
cld
add
mov
out
repz
mov
mov
mov
push
loopne
add
fidiv
(bad)
fld
jg
mov
(bad)
ds
dec
mov
loopne
jo
jb
movs
nop
test
mov
scas
leave
mov
or
push
pop
js
inc
out
push
push
leave
(bad)
fnsave
fisttp
std
loop
mov
mov
push
repnz
add
(bad)
leave
or
add
xchg
sub
ins
sub
push
mov
pop
cmc
in
mov
mov
mov
lea
in
push
sbb
pop
xor
imul
shl
in
aas
into
popf
out
push
push
mov
dec
xor
shr
jmp
adc
ja
lods
dec
dec
dec
jmp
xchg
add
lods
xor
(bad)
addr16
stos
imul
or
push
imul
or
pop
dec
sub
xchg
repz
int3
fs
out
je
push
sar
sti
add
add
pop
es
rol
aad
iret
jne
xchg
cdq
mov
cmp
movs
adc
bound
jbe
inc
clc
push
ret
mov
das
adc
inc
add
pusha
or
and
popa
jmp
xchg
jnp
jp
sub
ins
mov
jae
fstp
sub
call
imul
or
fiadd
mov
mov
add
or
sahf
push
int
add
add
out
es
fst
nop
sub
dec
cmp
data16
int3
iret
cmp
cmp
fild
jnp
pop
pop
out
test
lock
or
aas
jge
call
mov
inc
int
adc
add
jl
aas
cmp
mov
jnp
lds
icebp
out
push
pop
and
test
aaa
jbe
ja
inc
jge
mov
outs
dec
out
xor
push
stc
retf
add
outs
(bad)
hlt
jl
ds
pusha
jo
dec
loope
fmulp
mov
jae
mov
mov
repnz
adc
mov
dec
fistp
jle
scas
(bad)
clc
je
hlt
lods
in
int
add
pop
lods
cmp
xchg
jns
mov
lock
in
mov
cmp
mov
pop
scas
sbb
pop
xor
pop
sub
int
and
imul
dec
hlt
sub
sbb
sbb
pusha
dec
pop
xchg
jle
mov
pop
jge
add
arpl
lock
in
outs
in
inc
rep
or
enter
or
jbe
xlat
retf
dec
inc
xchg
retf
or
in
sti
xchg
stos
xchg
mov
loope
dec
inc
popa
jae
imul
mov
fist
int3
inc
scas
dec
adc
inc
cdq
adc
dec
dec
cmp
cdq
push
inc
lds
inc
and
adc
fwait
inc
add
sub
dec
push
mov
stos
or
xchg
gs
sahf
icebp
cmps
push
fild
mov
cwde
xchg
(bad)
cmp
and
loopne
stc
and
(bad)
mov
cmp
push
gs
mov
ins
inc
push
pop
(bad)
dec
pop
cld
hlt
push
(bad)
mov
ret
enter
dec
(bad)
jmp
jge
test
and
add
dec
(bad)
sbb
inc
sbb
clc
jl
jl
mov
push
jmp
lods
cmp
add
test
cmp
out
fucom
js
stos
aaa
and
jnp
mov
mov
xchg
rol
stos
vmwrite
retf
dec
test
(bad)
sub
cmp
movs
xchg
or
add
push
mov
sub
dec
rcl
dec
(bad)
mov
add
inc
dec
mov
ror
fdivr
inc
mov
mov
js
imul
cmp
adc
ins
push
inc
mov
jle
cmp
adc
and
push
push
sub
ins
ret
mov
jmp
xor
pop
into
and
push
ins
lds
call
push
sbb
inc
sbb
inc
sbb
pop
ins
xchg
dec
pop
and
adc
lds
dec
test
stos
jge
sub
retf
out
popa
jno
stos
and
adc
mov
jae
and
inc
in
push
xchg
(bad)
jno
shl
adc
pop
add
lea
jae
out
adc
ror
aaa
cmp
cli
mov
fwait
adc
push
int3
enter
jae
pop
cmp
into
cmp
or
mov
loop
cwde
dec
int3
je
adc
cwde
jae
jae
sub
imul
jne
into
scas
call
out
icebp
loopne
push
mul
fnstsw
pop
retf
(bad)
loope
loop
pop
lods
std
jecxz
mov
jmp
lods
jno
jg
mov
(bad)
or
dec
push
sar
das
push
shl
out
das
xlat
sbb
pop
lods
icebp
and
repz
in
inc
and
add
stc
mov
xchg
out
sbb
fdivr
xchg
mov
cmp
xchg
fild
xor
lds
daa
cwde
xchg
xor
mov
cld
xor
cld
xor
and
sub
shr
push
mov
and
fistp
xchg
add
in
push
out
mov
cld
pop
mov
fnstsw
and
jmp
jmp
mov
test
cmp
test
inc
not
loop
imul
push
dec
and
xor
mov
and
stc
rcr
push
(bad)
mov
mov
cdq
push
push
cmc
pop
in
inc
les
div
xor
out
dec
pop
sbb
dec
movs
repnz
mov
inc
cdq
lods
cmp
mov
sbb
int
stos
test
pushf
pop
rcl
cmp
mov
and
mov
xor
clc
mov
sub
xlat
enter
xchg
out
dec
mov
aam
aaa
jmp
push
sbb
stos
dec
cmps
cwde
neg
mov
push
jmp
xchg
ins
xor
movs
fsub
ss
scas
dec
jns
sub
pop
xor
lds
xor
push
and
pmulhw
cdq
cmp
das
pop
test
add
jmp
std
scas
or
or
mov
retf
ds
daa
pop
and
jae
int3
cmps
ret
out
push
mov
(bad)
xchg
cmp
bound
or
mov
or
inc
int3
sub
ret
out
xor
lods
in
les
dec
add
jne
cs
sar
rcl
push
cmp
xchg
loop
pop
sbb
adc
cmp
neg
pop
pop
(bad)
imul
xor
in
idiv
iret
aaa
loope
gs
push
in
mov
out
add
imul
pop
push
ins
nop
inc
outs
bnd
aam
fs
xor
xchg
xor
stos
sbb
outs
jmp
call
pop
sub
or
aas
dec
les
jle
fsubr
mov
cdq
sub
adc
pushf
mov
add
adc
cwde
or
jle
fcom
adc
xchg
daa
not
add
ret
call
dec
out
xor
mov
cmp
cmp
sub
mov
xchg
adc
retf
je
inc
cld
lock
ja
xor
jmp
sar
fnstsw
mov
(bad)
jnp
in
jge
sbb
jns
cmp
cld
inc
jmp
jecxz
push
daa
xor
ja
or
das
push
aas
pop
scas
jge
push
sti
je
(bad)
in
aad
mov
mov
fldlg2
fldl2t
int3
repz
mov
mov
aam
mov
sti
mov
cmps
jnp
std
inc
pop
mov
(bad)
mov
sbb
or
ror
push
jl
aas
psrad
in
enter
xchg
loope
std
mov
retf
mov
dec
in
push
call
gs
xchg
push
je
xchg
and
aam
mov
cmp
pop
mov
xor
cmps
add
test
mov
adc
shl
and
mov
xor
popa
sub
sub
retf
fcmovu
fist
shr
mov
pusha
dec
daa
mov
(bad)
xchg
xor
in
or
inc
stos
out
inc
aaa
mov
push
sub
call
(bad)
mov
imul
sub
test
fcmovbe
jmp
retf
xchg
popf
dec
popa
outs
fs
nop
pop
jbe
repz
in
cmps
(bad)
mov
iret
adc
lods
ficom
xor
xchg
sub
popa
mov
aam
dec
mov
mov
js
mov
(bad)
mov
push
dec
mov
aaa
inc
sbb
jne
scas
out
stos
pop
enter
xchg
fxch
mov
xor
adc
mov
push
sbb
mov
out
or
ins
stc
jecxz
or
jle
adc
movs
mov
test
dec
and
mov
mov
ins
mov
inc
pop
std
(bad)
movs
fmul
xchg
mov
mov
adc
mov
pop
pop
dec
mov
imul
cmp
sub
scas
dec
leave
push
xchg
cmp
push
push
sub
stos
rcr
jge
and
sahf
fwait
aad
mov
mov
push
add
adc
cld
pusha
jl
imul
sbb
loop
scas
add
add
xor
stc
xor
loope
adc
loopne
test
dec
in
push
addr16
mov
push
out
adc
fisttp
xchg
lods
inc
jge
hlt
imul
iret
outs
push
push
icebp
ret
cmps
jae
mov
push
shl
xchg
push
push
adc
adc
adc
(bad)
ret
lea
mov
clc
test
inc
cmp
mov
mov
aaa
in
add
iret
jnp
test
jae
out
mov
cdq
ja
shr
xor
fsubr
cdq
jmp
out
push
sbb
pop
pushf
aaa
sbb
push
cmp
(bad)
sub
xor
push
in
xchg
mov
push
je
in
sbb
push
sub
xor
sbb
xchg
inc
dec
loopne
pop
and
test
sti
jmp
mov
in
sahf
sub
dec
test
cdq
sub
data16
sti
xchg
mov
dec
ja
ficomp
adc
pop
jmp
loope
(bad)
xchg
int3
sub
cmp
ja
mov
push
ficomp
jle
mov
push
in
dec
xchg
sub
cmps
sti
pop
stos
xchg
ja
retf
xchg
or
je
or
jnp
add
fdiv
cwde
pop
push
div
repnz
jle
sbb
dec
in
sub
add
rol
outs
dec
in
(bad)
mov
sbb
arpl
xor
xchg
in
aaa
jecxz
fidivr
jle
mov
push
pusha
mov
cdq
add
leave
fdivr
ss
xor
sbb
ins
aam
pop
stos
(bad)
nop
shl
icebp
fld
fcomp
iret
fwait
std
push
inc
les
cs
data16
dec
es
and
ds
(bad)
jp
mov
punpckhbw
call
inc
leave
mov
jo
sub
fisubr
ins
pop
push
xor
mov
inc
add
ins
mov
pop
inc
dec
arpl
jnp
jmp
push
add
mov
cmps
rcl
mov
push
(bad)
ja
fisttp
gs
pop
rcr
sub
imul
add
std
xchg
sub
adc
xor
into
pusha
ins
clc
xor
nop
loopne
ins
fldcw
movs
xchg
xchg
test
cmps
cmp
and
lea
xor
fmul
(bad)
out
mov
std
xchg
add
out
push
movs
push
or
inc
adc
mov
arpl
ret
mov
xchg
lods
jo
pushf
test
in
rcl
mov
xchg
ficomp
or
jne
(bad)
lods
jbe
fdiv
and
sbb
xchg
lock
pop
mov
xchg
ds
jbe
sub
into
retf
in
mov
fidivr
xchg
mov
lds
sbb
aam
and
mov
adc
adc
sub
retf
fiadd
adc
or
shr
push
mov
call
mov
repnz
aad
jge
retf
mov
add
hlt
mov
mov
fcmove
popf
mov
mov
sub
shr
adc
dec
jle
jmp
stos
outs
rol
loop
(bad)
jnp
jns
imul
aad
and
xor
push
sbb
inc
inc
push
loope
pop
or
leave
daa
inc
sub
imul
jns
push
push
adc
jmp
out
pop
das
add
inc
ss
xor
jp
faddp
mov
cld
stos
jl
test
push
dec
imul
or
dec
xchg
popa
rol
cmp
pusha
js
lahf
or
or
fyl2x
inc
mov
pusha
cmp
xlat
adc
mov
or
(bad)
scas
out
ja
scas
in
into
fstp
pop
mov
js
les
ins
out
repz
into
lds
ins
lock
(bad)
or
mov
fdivr
add
mov
mov
ins
mov
ja
test
or
adc
xor
jno
mul
push
out
fxch
jnp
jns
int3
(bad)
push
scas
push
ficomp
ficomp
sbb
sub
sahf
cdq
test
dec
jmp
mov
js
movs
sub
mov
add
dec
gs
xor
pusha
gs
add
ds
jmp
shl
dec
adc
xchg
mov
and
fldcw
in
mov
jg
pop
in
cld
cmps
inc
sbb
adc
xchg
xor
and
out
div
in
xchg
fisub
das
jge
cmc
inc
mov
pop
jp
popf
clc
add
fmul
stos
fs
sub
cld
fs
lods
dec
nop
add
mov
sbb
pop
call
or
movs
sahf
and
ret
das
pusha
push
leave
int3
pop
sub
mov
dec
imul
or
jns
xchg
cmp
mov
fisttp
mov
xchg
aam
call
xor
cmp
dec
(bad)
ror
aaa
pop
inc
fld
aaa
stos
add
mov
dec
dec
pop
mov
int3
(bad)
(bad)
movs
lds
xchg
mov
and
mov
and
in
sub
and
bound
adc
leave
jo
mov
mov
xchg
test
loopne
xchg
lock
push
inc
fisttp
call
popf
mov
ins
adc
sar
jecxz
pop
shl
pop
sbb
add
add
mov
pop
jbe
pop
es
or
jecxz
movs
pop
lock
push
out
push
repnz
cmp
test
repz
icebp
jl
dec
sub
jno
inc
sbb
(bad)
movs
ret
enter
aam
jp
pop
jne
mov
es
(bad)
mov
mov
add
xlat
fdiv
xchg
dec
pop
sti
jmp
sar
mov
push
mov
les
fisubr
xchg
mov
add
icebp
and
xchg
and
inc
mov
xor
add
or
in
imul
xor
jmp
mov
sbb
arpl
xor
or
xchg
jge
xchg
adc
mov
mov
and
inc
xchg
xchg
inc
xor
push
cmp
and
sbb
adc
(bad)
out
mov
cwde
popa
fild
mov
inc
dec
xchg
dec
dec
sbb
arpl
push
xchg
ins
sub
daa
gs
mov
scas
push
xchg
xor
mov
dec
adc
repz
loop
loopne
sti
pop
repz
adc
nop
(bad)
in
sahf
repnz
fwait
jecxz
adc
mov
test
add
in
stos
sbb
leave
dec
scas
mov
push
xchg
arpl
clc
mov
cmp
xchg
inc
jg
sub
jecxz
rcr
sahf
add
fs
add
jno
mov
cmp
xchg
mov
inc
hlt
in
jl
add
xchg
cmc
scas
mov
and
cdq
jnp
mov
lock
inc
push
mov
pop
add
(bad)
mov
push
jns
mov
les
test
imul
ins
je
mov
jnp
int3
jns
xor
jo
jmp
nop
add
outs
out
(bad)
cld
aaa
ds
fcom
enter
xor
ins
ss
leave
test
sahf
pop
adc
inc
adc
sar
call
push
push
es
mov
mov
retf
dec
jae
iret
into
femms
cmps
mov
xchg
(bad)
fsubr
sahf
fidivr
leave
cld
dec
inc
shr
and
xor
es
push
vunpcklps
not
mov
mov
mov
mov
in
rcl
inc
push
cs
sub
push
lahf
mov
add
js
les
outs
inc
xchg
pop
lahf
inc
dec
push
sti
out
repz
mov
stos
xchg
adc
ins
lds
pop
adc
jmp
mov
into
jo
adc
xchg
outs
adc
xor
shr
fisttp
mov
ret
lods
push
add
shl
retf
mov
pop
js
jno
mov
or
retf
ret
movs
push
sub
sub
inc
sbb
mov
sub
sub
sbb
sbb
fisttp
xor
rcr
popf
jmp
xchg
pusha
nop
leave
and
gs
jecxz
cmp
jb
ja
sub
dec
inc
adc
fstp
imul
xchg
fld
cmp
xchg
ror
dec
xlat
loop
push
sub
stos
fcmovnu
cmp
push
rcl
int
clc
cmc
or
cmp
cmp
movs
mov
aaa
mov
fdivr
pushf
pop
cmp
push
inc
dec
xor
mov
add
inc
xor
xchg
mov
jle
mov
or
aam
mov
adc
xor
xlat
ret
imul
sar
push
aam
jmp
aaa
test
xchg
cwde
(bad)
je
and
adc
shl
in
movs
lahf
mov
jl
stos
sbb
jnp
loope
cli
ficom
push
retf
mov
sbb
adc
push
repnz
add
psraw
cmp
inc
push
add
pop
cmp
push
push
data16
mov
xchg
sub
or
bound
enter
ret
(bad)
push
inc
xchg
mov
dec
cli
mov
sub
add
ja
cdq
fwait
cmp
adc
mov
jl
sub
mov
fmul
pop
xor
popf
out
ins
loop
addr16
aad
mov
adc
arpl
fst
mul
xchg
jns
sub
mov
cmp
xlat
sti
inc
jmp
rol
inc
mov
xor
bound
imul
jo
fdivr
int
and
test
push
bound
mov
push
inc
or
fmul
shl
jbe
sti
sbb
aas
cmp
jmp
inc
mov
leave
mov
sub
fcomp
mov
add
leave
mov
icebp
dec
inc
cdq
imul
mov
rcl
sbb
lahf
(bad)
out
leave
je
push
retf
in
xchg
adc
mov
fadd
fldenv
inc
push
mov
add
hlt
retf
hlt
outs
mov
retf
cmc
fwait
ret
or
xchg
dec
cli
cli
or
push
stos
test
pop
cmp
adc
jae
in
and
or
loopne
shr
cdq
ret
jmp
test
add
test
pop
adc
popf
or
xor
pop
mov
repz
and
out
(bad)
fdivr
dec
xchg
add
ror
sbb
mov
jl
mov
xchg
xor
and
pop
out
lods
sub
out
xor
jmp
cdq
mov
movs
push
inc
ja
sbb
mov
push
bound
xchg
fidiv
push
(bad)
xor
aam
dec
mov
push
mov
adc
call
(bad)
out
and
sbb
xchg
ret
xchg
sub
mov
shl
jo
cmps
repnz
shl
add
fldenv
mov
add
rcl
aam
out
fs
xor
pop
push
add
pop
retf
lds
lods
xchg
xchg
jl
cmps
mov
std
ret
icebp
pop
cmp
jl
dec
cmps
(bad)
out
mov
push
stos
rol
inc
cmp
loop
outs
sub
dec
cmps
cmp
jmp
rcl
cmp
stos
and
fisub
xchg
imul
or
into
pushf
jb
in
pushf
pusha
jo
jno
xor
cmps
push
xchg
mov
sbb
cwde
gs
cwde
add
and
sbb
gs
sbb
xchg
sbb
inc
in
mov
pop
sbb
lods
inc
push
fwait
adc
pop
in
les
sub
push
icebp
mov
(bad)
ss
int3
pop
xchg
ffreep
inc
sbb
mov
push
out
jb
adc
mov
cmps
fistp
in
sub
imul
xchg
call
ret
jne
out
(bad)
les
sahf
inc
sbb
cmp
inc
pop
push
mov
out
xchg
and
cmp
fmul
inc
fwait
and
or
out
fs
popf
mov
xchg
sti
xlat
sbb
(bad)
loope
dec
movs
dec
rdmsr
popf
lock
add
dec
in
jmp
lods
xchg
mov
mov
leave
mov
repz
and
or
jg
test
out
xlat
bnd
movs
icebp
ret
movs
fmul
arpl
jecxz
lds
pop
sbb
fistp
jl
cdq
(bad)
js
cld
lods
mov
ja
xor
pop
(bad)
sub
daa
loop
out
outs
das
xlat
ds
scas
cld
jo
cld
fwait
mov
jmp
lock
mov
sub
cmp
les
jmp
xchg
jb
mov
sbb
sub
adc
retf
push
ror
loop
xchg
dec
neg
jl
call
and
sbb
(bad)
cdq
push
sub
inc
xor
xchg
mov
push
cld
js
cwde
mov
pop
cmp
test
sbb
push
mov
outs
lods
jae
mov
fst
pop
xor
and
in
or
pop
inc
movs
push
mov
cmps
add
cs
mov
pushf
ja
into
inc
jmp
adc
ret
xchg
mov
xor
mov
shl
or
mov
outs
xchg
aaa
in
sbb
setae
jnp
push
pop
and
mov
adc
add
arpl
stos
in
popf
sub
inc
mov
push
inc
xchg
not
push
lea
stos
push
in
ins
xlat
jle
jnp
jnp
cmps
mov
xor
sbb
rol
shl
stos
shl
leave
rcl
in
or
jmp
push
jo
fisttp
fnstcw
cli
adc
pop
call
outs
repz
movs
sub
mov
sbb
test
mov
inc
mov
in
add
mov
retf
ret
sahf
(bad)
fidivr
loopne
mov
pushf
add
retf
adc
lock
cmps
adc
inc
xchg
add
xchg
ror
dec
pop
add
dec
call
fidiv
xlat
mov
cld
cmp
ficom
jle
cld
jbe
cmp
inc
cmps
pop
rcr
and
push
rol
inc
jmp
sub
ins
push
mov
sub
mov
je
push
cmps
pop
sub
mov
pop
test
aas
inc
mov
mov
mov
mov
jle
sbb
hlt
(bad)
and
jl
push
mov
lds
ss
aaa
in
clc
mov
pop
jbe
out
xchg
adc
mov
push
inc
push
cmp
shr
stos
lds
retf
push
mov
fsubrp
cli
ins
int
xor
mov
jge
pushf
jne
sub
inc
xor
xor
xchg
call
xor
mov
mov
ins
pop
lock
fwait
enter
push
stc
or
inc
jae
xor
jle
outs
mov
iret
idiv
pop
scas
adc
pop
jp
sub
xor
cmp
rep
lock
ds
retf
cwde
aaa
sbb
jl
inc
inc
jmp
fistp
push
sahf
cmp
mov
cs
mov
cmp
jnp
out
mov
push
jae
mov
rcl
mov
in
retf
je
sub
out
shr
int
fmul
ja
(bad)
shl
mov
push
in
stc
cld
retf
jecxz
mov
ds
int3
jle
xchg
std
js
lock
jl
jecxz
es
rol
ficomp
icebp
lock
fcomp
repz
pop
(bad)
in
rcr
sbb
(bad)
push
xlat
out
iret
iret
in
cdq
das
cmp
mov
lock
jo
inc
je
mov
push
frstor
mov
ror
sub
mov
pop
pop
in
add
rol
sbb
cld
mov
jg
daa
add
leave
rol
push
repnz
test
stos
mov
cmps
push
movs
scas
and
test
mov
hlt
mov
jmp
mov
(bad)
xchg
sub
mov
xor
clc
fisubr
jno
jbe
imul
mov
jecxz
(bad)
ins
and
pop
lock
enter
xchg
xchg
bound
add
out
or
in
retf
jp
push
xchg
fdiv
dec
div
sub
mov
mov
pop
jnp
cmp
push
inc
adc
pusha
inc
xchg
inc
sbb
inc
or
ror
movs
sub
mov
add
mov
inc
js
jae
and
xchg
add
mov
mov
fcomi
add
mov
popf
sbb
fs
inc
(bad)
cs
jge
inc
sbb
nop
mov
mov
test
(bad)
fisttp
pop
aad
inc
or
movs
loopne
movs
mov
cmp
jle
xor
inc
xchg
mov
movs
jg
cli
ja
xor
jge
push
es
xor
add
inc
inc
cdq
cmps
xchg
ret
push
xchg
das
popf
cmp
sbb
stos
iret
inc
popa
or
cld
push
inc
add
movs
pop
mov
pop
fs
push
in
cmps
lds
es
repnz
nop
push
adc
lods
popf
xor
xchg
xchg
repnz
jmp
inc
add
pop
inc
sub
xor
push
pop
cmp
pop
stos
jne
bswap
fmul
jmp
add
mov
les
xchg
icebp
mov
add
ds
mov
sbb
push
outs
popf
mov
rol
enter
pop
sbb
pusha
int3
and
sbb
mov
ds
iret
mov
mov
data16
pop
enter
je
push
hlt
add
pop
jmp
jp
cmp
and
mov
push
mov
test
in
and
(bad)
int3
adc
cmp
mov
xchg
aad
sub
mov
dec
gs
add
(bad)
mov
out
popf
fld
sbb
cmp
ret
jmp
dec
repnz
ja
bnd
loop
sar
xor
lds
mov
into
in
imul
(bad)
hlt
cld
sti
arpl
mov
xor
dec
add
mov
or
out
push
int
xlat
in
lahf
lods
sbb
or
out
xlat
arpl
(bad)
int
mov
mov
icebp
dec
push
outs
(bad)
push
xor
retf
xchg
xor
inc
int3
mov
in
add
jnp
cli
xchg
jbe
outs
mov
fcmovbe
push
imul
icebp
mov
int3
adc
mov
je
xchg
push
sbb
scas
jp
retf
in
sub
mov
pop
and
ror
sbb
test
and
adc
cwde
test
pop
(bad)
shl
jecxz
and
xchg
mov
dec
leave
inc
mov
ret
test
mov
scas
fisttp
es
inc
pop
bound
xor
mov
cs
shr
movs
scas
fild
cdq
lods
cmp
push
(bad)
es
add
and
or
imul
les
jecxz
dec
adc
mov
cmp
adc
fist
xchg
arpl
int3
push
inc
add
es
ja
imul
mov
loop
std
pop
movs
in
fcom
sub
fcom
push
cmp
imul
inc
ins
mov
sub
push
leave
inc
leave
mov
xchg
or
pop
out
ret
sub
shl
call
add
sub
xchg
adc
push
adc
sub
sbb
jbe
dec
mov
mov
scas
inc
jmp
xchg
xchg
imul
pop
mov
inc
ss
adc
je
mov
or
js
mov
push
out
or
sub
shl
adc
xchg
xor
mov
xor
outs
pop
lock
gs
pusha
xchg
movs
pop
sub
cmp
pop
xor
retf
adc
fsubp
xchg
fwait
cld
arpl
xor
push
inc
setp
cmp
sub
rol
jecxz
mov
mov
fisttp
push
inc
ret
fwait
mov
adc
nop
pop
mov
push
mov
lods
mov
and
out
pop
loope
push
jmp
lahf
and
(bad)
out
xchg
out
stc
stos
ins
clc
psubusw
out
mov
lahf
and
xor
mov
sbb
(bad)
stos
nop
pop
sahf
pop
(bad)
fsubr
mov
push
mov
inc
push
jb
and
mov
xor
xor
inc
lea
xor
leave
jns
cdq
jecxz
out
mov
sti
pusha
add
in
in
out
cli
jmp
(bad)
stc
inc
out
fucomip
into
mov
cli
jmp
ret
icebp
cmps
jae
pop
scas
pop
(bad)
je
out
xchg
test
sub
add
add
cdq
push
mov
int
adc
and
sub
cld
inc
pop
jnp
loop
xlat
not
mov
jmp
shl
jecxz
aad
cmps
mov
xor
mov
add
js
fs
in
cmc
dec
mov
adc
pushf
inc
xor
mov
mov
mov
xor
xchg
mov
call
pushf
neg
fs
mov
jns
popf
inc
fwait
imul
hlt
cmp
or
aad
sub
fisttp
pop
mov
test
cli
push
repnz
in
jmp
pop
jne
test
clc
movs
mov
mov
lea
mov
ja
clc
popa
sub
stos
arpl
push
cld
cmp
xor
adc
push
(bad)
enter
sub
popa
stos
xor
cmps
or
xor
and
cmps
mov
dec
cmp
mov
add
xor
cmp
push
and
sbb
call
pushf
inc
sub
lds
push
xor
jae
mov
repnz
imul
daa
call
aam
cli
sbb
out
adc
retf
ret
dec
jbe
pop
imul
fs
dec
movs
and
aad
push
lea
mov
pusha
mov
xchg
mov
adc
push
mov
addr16
xchg
les
loope
ss
pop
add
sbb
js
fld
dec
xlat
into
lds
idiv
dec
mov
dec
daa
sub
fnstenv
popf
mov
inc
(bad)
jne
(bad)
movs
mov
mov
fmul
mov
push
push
je
cmp
mov
push
mov
test
loope
ffreep
xor
daa
repnz
xchg
fisubr
lods
push
add
pusha
test
inc
lea
fidiv
xchg
push
adc
jae
push
das
push
shl
sub
add
sub
xchg
xor
adc
xchg
lahf
ja
daa
popa
add
mov
push
ret
retf
dec
cli
shl
mov
daa
popf
pop
sbb
push
mov
pop
ss
xlat
cmp
pop
dec
mov
in
in
mov
sti
ins
cld
mov
in
lahf
out
outs
daa
out
shl
sub
icebp
out
xor
add
pop
test
pop
push
jno
or
and
add
add
(bad)
jno
jnp
xor
cmp
sar
add
sub
adc
push
cdq
nop
div
dec
xchg
push
and
sbb
clc
stos
and
(bad)
pusha
sbb
lahf
into
pop
dec
(bad)
in
cdq
lods
mov
mov
cmp
outs
xlat
or
sahf
sti
in
jmp
lods
push
mov
inc
leave
add
into
xchg
fistp
jns
mov
dec
lahf
sub
jle
cmps
(bad)
jmp
xchg
iret
xchg
jmp
into
add
sbb
jge
sahf
imul
sahf
out
iret
adc
jns
push
push
out
dec
jbe
cld
add
cdq
lea
and
cmps
push
xchg
adc
aaa
loope
xchg
xchg
add
xor
inc
inc
cmp
test
call
retf
cmps
into
ds
mov
mov
sub
pop
mov
fwait
xchg
cmp
sub
jp
dec
jmp
repz
inc
mov
pop
xchg
data16
sub
add
(bad)
das
or
push
out
mov
cmp
rol
mov
mov
mov
iret
(bad)
pop
dec
dec
std
fxch
and
add
imul
inc
int
pop
sub
cld
xchg
sub
xchg
ss
loope
call
inc
xchg
jg
into
sti
retf
(bad)
retf
retf
pop
dec
add
sbb
sub
or
cmps
ja
sub
mov
jno
add
mov
mov
stos
push
in
xchg
cwde
popf
loop
adc
push
enter
mov
ds
pop
ds
(bad)
fimul
and
scas
dec
add
and
icebp
popf
shr
xor
add
aam
add
push
jmp
out
in
js
mov
adc
je
ds
out
sti
arpl
mov
stc
inc
mov
jle
push
jns
mov
fwait
adc
inc
push
cmps
in
mov
push
pop
pop
add
push
mov
push
mov
or
adc
iret
pop
hlt
xor
rcl
xlat
mov
aam
pop
cmp
fbld
clc
sbb
scas
test
mov
or
xor
(bad)
inc
dec
(bad)
dec
pop
cli
ins
imul
lods
dec
movs
xchg
sbb
pop
xor
popa
xchg
cmp
xchg
jns
test
gs
call
mov
movs
cmp
push
iret
nop
pusha
xor
sub
cs
cmp
dec
push
sub
cld
fdiv
aas
jae
mov
jns
xor
inc
out
push
fs
xchg
retf
lods
sbb
popf
std
sbb
imul
add
cdq
xchg
ds
in
and
push
dec
xchg
std
(bad)
aas
in
mov
cs
fisttp
and
jnp
rcl
fldcw
inc
loop
pop
call
add
fs
cmps
imul
pop
sahf
cs
inc
ss
xchg
mov
pop
clc
mov
ret
stos
cld
sar
repz
mov
jg
mov
xchg
fidivr
cmc
orps
inc
sub
shl
cmp
repz
int
sahf
pushf
leave
aas
cmp
push
jg
scas
sahf
in
fnstsw
movs
je
js
sub
in
sbb
cmp
mov
push
data16
loope
or
mov
xchg
mov
sub
call
out
imul
dec
pop
fwait
mov
pop
fistp
xchg
div
(bad)
stos
mov
ss
inc
dec
dec
loop
inc
retf
cmps
mov
loope
lods
jb
jbe
mov
xor
ret
cdq
sub
(bad)
ins
sbb
sbb
retf
fwait
jb
cmps
das
xchg
mov
pushf
xlat
adc
cmp
call
dec
loopne
lds
shl
inc
mov
test
push
xchg
cmp
inc
cmp
cmp
cmp
add
clc
and
(bad)
cmp
push
or
pop
push
movs
jb
jmp
mov
loope
cdq
mov
cwde
dec
xor
retf
and
or
lea
push
jnp
test
test
sub
call
std
fisttp
and
xchg
inc
and
icebp
mov
loopne
dec
xor
mov
pop
sub
imul
jbe
mov
arpl
inc
mov
or
es
rcl
and
xchg
xlat
ins
or
add
adc
or
ins
cmp
xchg
or
ins
and
std
pop
mov
rol
ficomp
stos
adc
out
cdq
loop
sbb
stos
das
pop
in
lods
mov
and
ficom
sbb
lods
pop
ss
loop
int
fnstenv
inc
pop
int3
sub
je
add
movs
mov
cmps
mov
retf
mov
cmp
test
or
inc
call
mov
arpl
and
dec
cdq
idiv
or
push
sbb
ja
mov
inc
mov
pop
push
and
cmp
jge
cmps
mov
pop
or
dec
add
push
rcl
shl
in
inc
mov
ss
xor
imul
push
push
cmps
push
inc
xor
js
movs
sub
xor
adc
ins
xchg
loop
(bad)
fst
push
mov
xor
dec
daa
sbb
add
aas
shl
xchg
inc
mov
std
lock
call
dec
gs
push
pop
dec
add
enter
dec
fs
fchs
(bad)
ins
jl
es
mov
clc
cdq
stos
mov
in
loopne
adc
lahf
movs
xchg
(bad)
pushf
adc
jne
xchg
lods
sbb
xor
or
sbb
jl
jnp
js
outs
das
or
pop
das
pop
pop
pop
out
outs
pop
and
cwde
cli
mov
aas
fcom
cmps
ret
fnstsw
mov
mov
mov
mov
cmp
xchg
stc
js
lock
retf
mov
pop
jecxz
ja
(bad)
push
in
das
in
cwde
retf
sbb
inc
(bad)
cmc
imul
push
test
mov
mov
add
fdivr
jle
mov
adc
pop
mov
lea
stc
fwait
xchg
repz
jbe
inc
sub
ror
pop
pop
mov
pop
cmp
cmp
jae
ror
adc
inc
pop
xor
push
es
out
mov
arpl
hlt
and
mov
cmp
mov
xlat
xor
cwde
mov
dec
xchg
rcr
(bad)
cmp
cmc
mov
push
ins
jp
imul
mov
aas
retf
inc
cld
in
push
jne
sub
mov
sub
cmp
ficom
imul
push
fisttp
jae
shl
wbinvd
call
mov
sbb
not
test
adc
mov
mov
retf
pop
lock
popa
add
in
repnz
in
call
push
aaa
jge
lods
and
data16
adc
mov
je
xchg
jo
xchg
leave
frstor
xor
inc
mov
mov
xchg
hlt
rol
xor
or
pop
or
push
add
jecxz
inc
imul
lock
mov
adc
test
cli
and
push
or
call
mov
mov
push
mov
pop
xchg
cwde
jmp
mov
jo
push
in
in
sbb
arpl
mov
xchg
ss
cmc
iret
gs
mov
sbb
cdq
cmps
das
jle
repnz
ficomp
(bad)
imul
mov
pop
mov
dec
sti
loope
adc
aas
bound
fmul
jp
sub
cmps
sub
push
sub
xchg
cmp
xor
test
mov
dec
xchg
repz
xor
dec
push
push
mov
retf
and
inc
pop
mov
mov
lods
ds
or
add
cmp
ficomp
fisttp
jmp
pop
movs
in
mov
mul
bound
xor
cwde
data16
sub
popf
adc
push
xchg
jbe
push
es
scas
dec
popf
call
sbb
adc
pop
xor
xchg
pushf
aaa
dec
cdq
test
das
mov
xchg
cmc
push
scas
mov
mov
jae
jbe
stc
ds
movs
mov
jb
cmp
in
jl
dec
xor
gs
dec
in
jo
data16
cmps
fs
js
cwde
loopne
add
lods
and
pop
jle
scas
icebp
xlat
sti
sub
jp
icebp
pop
jbe
mov
stos
cmp
ins
out
xchg
push
(bad)
in
test
popa
repz
iret
push
stos
mov
mov
popa
outs
jle
pop
cld
inc
std
leave
in
mov
sub
ficom
test
push
sub
xor
dec
mov
test
cmps
stos
pop
pop
lods
xor
pop
sub
ss
mov
das
add
(bad)
mov
out
mov
mov
(bad)
in
jg
retf
push
dec
jb
aaa
jae
aaa
mov
cmp
sahf
sub
and
fst
retf
or
call
addr16
test
mov
dec
loope
xchg
iret
out
ins
mov
les
sbb
cdq
dec
pop
aas
rcr
int
jl
or
dec
mov
xor
in
xchg
xchg
sub
sbb
hlt
fisub
mov
adc
xor
clc
sbb
xchg
mov
cdq
jecxz
outs
scas
sbb
stos
pop
cmp
das
mov
sub
call
popa
mov
(bad)
pop
aaa
mov
int
dec
sub
fadd
mov
loope
push
ss
adc
push
test
xchg
xchg
out
loop
int3
push
xor
dec
xchg
in
add
or
mov
push
xor
inc
inc
xchg
into
xor
jne
and
add
mov
retf
mov
bound
mov
test
scas
sbb
into
sub
and
arpl
into
ret
(bad)
and
call
ret
push
dec
push
mov
ss
pop
inc
sub
retf
sbb
jl
xchg
loope
xchg
iret
fadd
sbb
dec
retf
ins
push
or
rcl
outs
cmps
out
ins
iret
xchg
mov
out
push
sub
hlt
fadd
inc
push
inc
mov
imul
ret
fisubr
lahf
jb
retf
rcl
jmp
popa
add
or
scas
mov
mov
popa
pop
mov
retf
lea
jno
cmp
les
xor
push
mov
das
sub
ret
xor
lea
mov
sbb
mov
ins
xor
je
sbb
in
push
popf
cmp
pushf
stos
cli
fist
cmp
xchg
rol
test
xor
xor
cmp
sub
lods
or
call
int3
inc
xchg
in
mov
mov
mov
adc
mov
daa
sub
shl
jmp
mov
jns
cs
scas
xor
sbb
cmp
cmp
add
jecxz
int
rcr
and
dec
jae
addr16
sub
js
mov
xchg
clc
pop
xchg
sub
jmp
jae
cwde
in
int
addr16
adc
sbb
fdiv
pop
js
and
aad
lock
push
push
(bad)
sti
xchg
cmp
jmp
mov
cdq
push
(bad)
mov
xchg
sbb
inc
loope
stos
in
in
sub
(bad)
sti
mov
out
pop
sub
cld
jmp
cmc
ja
or
inc
das
xor
mov
inc
in
mov
out
sub
loopne
ja
inc
(bad)
neg
cld
lods
jge
cmp
xor
and
in
test
dec
cmp
sbb
mov
and
sbb
mov
jg
sbb
sub
sub
mov
sub
adc
sbb
pusha
push
cmc
mov
ins
push
bound
adc
mov
add
add
rcl
sub
xchg
mov
adc
arpl
pusha
jmp
fnsave
ror
int
push
xchg
jbe
mov
jno
popa
pusha
data16
mov
lahf
test
shr
in
pop
sub
or
arpl
outs
je
mov
jne
ss
adc
push
mov
fcomi
add
xchg
inc
sub
mov
pop
mov
(bad)
lahf
ss
adc
popa
inc
scas
jne
mov
sbb
pop
or
pop
jae
xor
outs
pusha
aam
sub
mov
inc
cs
push
into
adc
push
cmp
xor
xchg
aaa
sub
jge
fcmovnbe
shl
pop
mov
fldenv
out
adc
adc
loope
fnstcw
fsubr
push
push
bound
sub
push
xchg
push
mov
rcl
enter
mov
mov
jl
dec
dec
inc
mov
mov
dec
daa
jne
out
gs
not
hlt
leave
push
cmps
cmp
and
and
dec
add
ss
push
fsubr
mov
mov
inc
nop
std
xor
adc
cmp
mov
nop
jb
daa
cmp
fld
fwait
push
mov
bound
pop
mov
test
mov
ds
push
jge
xlat
out
test
rcl
pop
shl
jns
lahf
js
pop
mov
mov
aad
jmp
(bad)
xchg
add
scas
push
call
cmp
push
js
xor
enter
fs
sub
imul
inc
sub
push
dec
or
cmp
sub
mov
xor
sub
jecxz
sbb
jae
pusha
movs
mov
rcl
mov
lods
sbb
mov
pop
pop
dec
cmp
scas
mov
imul
clc
push
xor
outs
add
dec
add
inc
cld
adc
adc
lahf
sub
int
inc
mov
mov
retf
not
push
adc
call
and
enter
pop
icebp
or
fisub
loopne
aas
xor
mov
fs
cdq
fwait
add
dec
enter
aaa
mov
dec
leave
push
mov
popa
push
hlt
xor
jno
ds
mov
daa
movs
xchg
ret
cmp
cmc
or
ins
jmp
or
jb
lds
mov
cmp
adc
pop
dec
push
std
scas
jmp
(bad)
jmp
jae
cmps
jecxz
addr16
loopne
out
inc
jae
lahf
scas
jbe
jp
(bad)
sar
jg
mov
jg
pop
sti
int
cmc
xchg
imul
(bad)
jae
aaa
shl
cdq
xlat
daa
icebp
cld
int
mov
mov
sub
cli
js
gs
sti
shr
aaa
test
(bad)
xchg
mov
daa
mov
pop
out
inc
mov
loope
cmp
(bad)
xor
mov
push
je
(bad)
jnp
mov
stos
loope
ficomp
sbb
clc
and
loopne
inc
shl
sub
push
mul
fdivr
mov
adc
dec
dec
mov
cmp
push
adc
pop
mov
pop
repnz
inc
xor
mov
jmp
ret
sub
ret
out
test
mov
push
sbb
cmp
inc
cmp
push
xchg
lock
mov
inc
dec
mov
movs
dec
retf
jo
outs
and
inc
and
push
add
pop
inc
xchg
sub
sbb
inc
movups
add
and
(bad)
in
xchg
or
jbe
xchg
enter
push
hlt
pop
cmp
loope
jle
into
mov
clc
rcr
jae
pop
out
sub
xchg
push
xchg
dec
scas
mov
and
das
or
cs
inc
retf
movs
cmp
out
adc
mov
push
sbb
(bad)
lods
mov
xor
jmp
les
xchg
dec
xchg
mov
dec
xchg
and
cmp
mov
mov
mov
xchg
dec
(bad)
mov
sub
mov
out
cmp
and
in
fwait
or
push
cld
xchg
imul
and
cmc
inc
mov
jge
in
out
xor
mov
dec
mov
aad
outs
popf
pop
jp
cmp
rcl
je
jge
xlat
(bad)
retf
jns
or
leave
sub
(bad)
jl
sub
mov
and
jmp
and
sbb
jp
pop
mov
mov
mov
inc
sbb
mov
push
outs
mov
or
jle
sub
mov
cmps
aam
pop
push
inc
dec
ss
jae
ins
cmp
push
push
lea
imul
xchg
pop
outs
(bad)
xchg
and
in
call
arpl
jb
es
cs
lds
sub
or
sub
mov
in
pop
dec
loopne
out
cmp
sti
inc
loopne
out
scas
xchg
repz
idiv
into
mov
sub
jmp
(bad)
cmp
cmp
test
dec
iret
adc
inc
(bad)
int3
inc
leave
jb
rcl
push
int
aam
pusha
in
push
popa
xchg
dec
pop
aaa
mov
and
mov
leave
(bad)
pushf
jmp
pushf
stc
repz
jmp
stos
test
fistp
cld
fs
and
sti
push
lds
cmps
ret
out
cs
pusha
ja
pop
in
jmp
in
fcomp
in
in
call
jo
xchg
jle
mul
and
outs
dec
push
ficomp
dec
arpl
loopne
cmps
lock
out
mul
xchg
xchg
retf
fsincos
push
jecxz
push
jae
push
out
in
dec
scas
in
repnz
pop
xlat
xchg
mov
pusha
stc
jmp
cs
pop
shl
data16
in
int
jmp
add
sub
dec
(bad)
sbb
push
imul
and
cmp
pusha
imul
fs
xor
sub
mov
adc
push
sub
outs
scas
pop
add
xchg
cmpxchg
xchg
das
jecxz
or
and
mov
jecxz
or
loope
ins
das
test
out
call
mov
icebp
in
retf
mov
inc
call
cmp
or
lahf
mov
pop
sbb
inc
repnz
jno
lds
dec
repz
gs
or
shl
and
cmc
mov
repnz
push
pusha
bound
retf
or
dec
arpl
cwde
(bad)
ficomp
pop
imul
dec
xor
and
and
mov
jo
jge
mov
pop
aaa
jo
xor
xchg
out
xchg
leave
push
dec
sub
cmp
pop
add
mov
cwde
fisubr
mov
mov
sub
or
mov
cmp
out
adc
and
ins
or
xchg
stc
lods
lahf
or
aad
mov
js
int3
sar
dec
push
mov
xchg
ret
jbe
jl
scas
sbb
stos
icebp
pushf
popa
push
mov
mov
xor
adc
xor
(bad)
test
pop
dec
jmp
dec
sub
xchg
jbe
xor
jge
out
pop
and
loopne
adc
dec
mov
pop
sub
into
out
xor
pop
xchg
call
in
test
hlt
sub
lock
pop
add
adc
ss
fwait
enter
adc
fdiv
ins
jmp
sub
xor
into
mov
mov
fidivr
xlat
outs
xchg
retf
push
es
pop
jmp
inc
sbb
rcl
scas
adc
imul
in
inc
retf
mov
mov
dec
jl
gs
popa
rcl
mov
fwait
sub
out
loope
jl
or
mov
xchg
jge
pop
xlat
mov
out
push
xor
popf
imul
test
mov
aas
mov
sbb
push
out
mov
pop
jae
xor
imul
xor
sub
push
pop
pop
addr16
repnz
sub
jb
in
sub
inc
cmc
jmp
loope
icebp
repnz
mov
scas
out
dec
push
ds
shr
mov
mov
shl
dec
imul
std
push
repz
lahf
das
in
mov
icebp
addr16
jb
jecxz
mov
ja
dec
outs
iret
push
mov
es
inc
mov
add
(bad)
fistp
jmp
push
sahf
sbb
out
pop
hlt
out
sbb
fdiv
pushf
mov
sti
fs
jle
jl
push
add
int
xor
scas
call
scas
push
in
sub
dec
inc
pop
icebp
das
ror
or
js
lahf
cmp
into
pop
pop
mov
aad
xchg
jmp
call
push
pop
movs
into
or
cmp
fsubr
das
pop
sub
fstp
ss
sbb
cmps
add
daa
xchg
int3
out
ficomp
repnz
popf
pop
(bad)
xchg
js
mov
dec
fwait
jmp
das
or
repnz
enter
push
call
popf
lods
xchg
ins
not
xchg
bound
add
mov
cmp
cmps
dec
or
ins
dec
gs
lods
sub
sbb
xchg
(bad)
jge
shl
in
push
xor
cmp
clc
pop
es
sbb
xor
sub
jno
sbb
fwait
(bad)
cli
cs
push
jp
cs
popf
(bad)
(bad)
xchg
or
pop
xchg
jg
mov
or
mov
cwde
sbb
xchg
sbb
in
or
je
bound
jno
dec
xchg
test
int3
es
cmps
mov
dec
cmp
mov
neg
popa
fnsave
fidivr
mov
cdq
in
je
sahf
rcl
sbb
dec
addr16
gs
iret
push
cdq
(bad)
les
shl
lds
js
out
jbe
bound
pop
das
adc
jl
in
hlt
fisub
mov
mov
loopne
add
mov
xor
xchg
movs
scas
lock
gs
cdq
fimul
sub
add
add
fld
movs
add
or
inc
mov
xor
push
inc
mov
in
nop
mov
xlat
int3
inc
adc
and
pop
iret
sub
outs
jmp
rcr
xchg
xchg
shl
mov
mov
sub
mov
cmp
loopne
test
call
pop
sbb
icebp
shl
pop
pop
mov
cmps
sbb
mov
cmp
es
inc
sbb
dec
or
cdq
jo
xchg
imul
sbb
xor
es
add
xor
into
or
add
sbb
adc
idiv
push
(bad)
cmp
push
out
fstp
dec
(bad)
rol
inc
cld
nop
(bad)
fs
mov
lmsw
xor
sub
mov
push
cmp
jae
icebp
dec
(bad)
push
pop
into
adc
lock
arpl
outs
idiv
outs
hlt
js
dec
or
add
dec
not
cwde
stc
fwait
std
lea
pop
cs
shr
fstp
cld
ins
xor
mov
and
lock
stc
js
sti
std
movs
scas
push
daa
mov
mov
fwait
sub
arpl
stos
ficomp
popf
(bad)
retf
in
xor
mov
and
xor
mov
xchg
aad
jp
xor
ja
adc
sbb
arpl
mov
dec
dec
sbb
out
jb
xor
push
int3
cs
mov
xchg
repnz
mov
fdivr
fdivrp
push
ss
xchg
inc
jno
add
add
fwait
mov
mov
movs
mov
jecxz
add
or
ret
es
out
cmps
sub
jmp
clc
and
fist
cwde
popa
cmp
in
clc
imul
jns
jno
mov
xor
inc
sbb
sub
push
sub
and
pop
mov
and
imul
push
pop
ror
jmp
stos
(bad)
dec
gs
lock
and
clc
add
adc
push
push
pop
sbb
or
lahf
mov
das
out
xchg
cld
jne
stc
push
xchg
(bad)
int3
sub
shl
shl
add
fldlg2
mov
rcl
(bad)
xor
xchg
loop
jne
test
xchg
xchg
in
sti
rcl
(bad)
xchg
xor
xchg
pop
mov
dec
push
dec
push
xlat
ins
aaa
shr
ror
xchg
int
cmc
ret
mov
sub
or
shl
cli
pushf
mov
inc
pop
push
dec
xor
xchg
shl
aas
pop
mov
sti
push
sti
mov
fldenv
das
movs
jo
sbb
cld
dec
xchg
mov
in
mov
xor
mov
pop
add
pop
jl
call
pop
pusha
push
push
imul
shl
int3
sub
jl
sub
sbb
test
push
fiadd
loope
mov
scas
xor
pop
inc
ins
and
add
fucomi
xchg
or
dec
mov
cli
adc
mov
idiv
(bad)
xor
out
inc
adc
xchg
test
ror
sub
stos
lds
jmp
fcmovb
xchg
inc
in
jge
jecxz
cmp
(bad)
and
push
pop
enter
push
or
sahf
nop
jge
icebp
cmp
ret
pop
imul
js
sub
test
aas
dec
or
imul
ror
fsub
cwde
sbb
jmp
inc
clc
sub
mov
call
jecxz
inc
inc
xchg
out
or
imul
jmp
imul
add
mov
aaa
add
int
inc
(bad)
adc
out
inc
cmp
mov
call
xchg
xchg
addr16
call
mov
imul
aas
push
stos
std
xlat
stos
pop
(bad)
in
out
fucomip
test
adc
mov
loopne
pop
sub
stc
(bad)
ins
xchg
(bad)
jg
fdivrp
into
(bad)
std
vpaddb
(bad)
sub
aad
push
cmp
retf
in
movs
cmp
mov
cmps
rol
repnz
mov
pop
sti
or
mov
xor
jnp
add
push
mov
(bad)
cld
std
lea
fcomp
loop
xor
mov
dec
into
daa
jb
mov
lea
push
mov
hlt
push
outs
sbb
in
jmp
dec
rcl
cwde
jp
sub
pop
cmp
pop
mov
mov
sbb
or
test
jp
scas
push
cmp
sbb
cdq
xchg
mov
fs
mov
sbb
loopne
xor
retf
jo
rol
lods
in
pop
inc
lods
dec
repz
dec
mov
dec
or
or
ins
in
mov
mov
mov
fisubr
ror
leave
mov
fdiv
fimul
mov
adc
pushf
or
dec
mov
call
xor
mov
jno
psubb
adc
ret
addr16
retf
inc
iret
xchg
and
and
mov
xchg
mov
adc
push
sub
ffreep
xchg
sub
jl
dec
fucomp
xchg
push
lea
stos
imul
out
js
aaa
int
and
movs
jmp
dec
mov
es
push
dec
mov
adc
retf
ins
nop
shl
xchg
adc
dec
xlat
shr
inc
mov
pop
not
inc
test
jae
aam
and
dec
mul
fidiv
(bad)
inc
cdq
dec
dec
loopne
(bad)
out
je
mov
in
cmps
fsubr
add
sub
fld
cmp
and
ins
test
data16
mov
out
lods
sbb
pop
inc
lds
out
shl
ins
cmp
aad
xchg
add
jge
lods
out
es
pushf
repnz
jp
sub
dec
mov
xor
in
mov
add
bound
and
leave
mov
cdq
nop
je
shl
pop
neg
push
ficomp
adc
lods
cmp
xchg
outs
fwait
lods
dec
sti
lods
bound
mov
mov
in
adc
(bad)
pop
out
xchg
inc
lock
cmp
inc
call
mov
or
mov
xchg
pop
fsubp
clc
add
repz
enter
mov
push
dec
imul
jo
mov
dec
inc
push
call
loope
(bad)
cld
icebp
push
pop
xor
gs
xchg
mov
mov
arpl
movhps
aas
fisubr
jnp
(bad)
mov
jbe
retf
mov
(bad)
cmp
std
cmps
std
(bad)
push
scas
div
jmp
fld
pop
retf
stc
into
jb
fld
cmp
mov
pop
cdq
sub
cwde
sub
adc
repnz
mov
jl
push
cld
(bad)
jl
pop
loopne
(bad)
mov
(bad)
push
out
sbb
bound
mov
add
int3
icebp
scas
ret
mov
xor
test
out
pop
jbe
adc
es
fs
out
jno
in
loope
fwait
mov
sbb
ss
sbb
mov
ret
stc
dec
fadd
test
dec
and
mov
xor
jmp
push
into
and
retf
mov
repnz
mov
adc
jb
dec
ds
ss
add
push
std
jne
jmp
aam
xchg
push
adc
sbb
pop
jnp
mov
or
xor
mov
test
jns
into
xor
imul
nop
inc
adc
into
pop
cdq
mov
pop
pop
jne
bound
cmp
dec
sbb
imul
nop
ds
shr
push
ds
loope
call
xchg
in
or
mov
test
ins
loop
hlt
arpl
out
add
movs
push
xchg
inc
sub
add
movs
inc
inc
out
mov
mov
sar
movs
xchg
jge
pushf
les
ins
push
xchg
pop
out
mov
(bad)
sbb
mov
jmp
sub
jmp
pop
xchg
xor
ror
rol
cli
cmp
adc
push
or
loopne
mov
sbb
sub
push
xor
daa
(bad)
and
(bad)
sahf
mov
dec
outs
bound
or
cmc
xor
adc
ins
in
movs
sti
sbb
push
sbb
inc
stos
push
in
sbb
sub
clc
xlat
mov
cmovae
ins
ja
mov
mov
and
dec
push
popf
pusha
hlt
or
cmp
xchg
and
or
pushf
sbb
pop
retf
or
lea
mov
pushf
fsubp
sbb
aaa
stos
dec
mov
and
mov
and
sbb
xchg
jno
cmc
inc
data16
dec
vcvttss2si
fsub
mov
dec
or
cdq
dec
outs
jp
leave
jns
es
stc
(bad)
push
lock
int
cmp
sub
popa
ja
icebp
les
pusha
jg
loope
mov
jbe
out
or
in
pop
fwait
cdq
fwait
pushf
xor
adc
(bad)
out
add
or
outs
adc
es
or
push
sti
out
mov
pop
iret
pushf
jmp
cmc
stos
jnp
sahf
cmp
fbstp
stc
pusha
cmp
leave
push
jg
mov
push
mov
dec
cmc
std
jmp
fcmovu
lods
out
icebp
inc
pop
out
sub
xchg
repz
aas
fcmovu
cmc
leave
push
mov
in
mov
ror
adc
xchg
and
xor
es
lods
or
or
loop
sub
jg
fdivrp
jecxz
cli
(bad)
repz
xchg
es
(bad)
out
pop
jmp
int3
inc
out
jmp
out
out
shr
loope
mov
jmp
push
std
aad
dec
inc
not
pop
int3
or
mov
mov
adc
cmp
sub
xchg
aad
mov
in
in
icebp
jbe
repz
test
adc
inc
ret
call
aam
sub
inc
mov
xchg
ror
xchg
jb
in
push
inc
mov
pop
(bad)
cmp
imul
std
dec
jl
les
and
inc
mov
or
or
cmps
into
scas
rcr
xchg
stos
sub
sub
mov
in
cmc
repnz
push
dec
jno
repz
cs
cmp
in
je
mov
stc
ins
push
into
xchg
sbb
sub
inc
sbb
adc
sub
mov
and
bound
jle
xchg
test
adc
xchg
pop
sar
pop
stos
add
sub
pop
sub
pop
xor
mov
jnp
loope
movs
xchg
pop
jl
hlt
inc
imul
mov
xchg
and
data16
pop
bound
movs
inc
push
mov
xchg
cld
mov
popa
cmc
push
addr16
xor
cmp
repz
adc
push
mov
inc
mov
pushf
or
pop
jbe
outs
jecxz
cwde
fadd
inc
adc
inc
dec
xlat
pop
sub
add
sub
jns
or
mov
aam
sub
pop
cli
mov
mov
mov
out
(bad)
cld
dec
mov
sahf
add
lods
pop
jo
into
les
daa
push
inc
mov
gs
sub
ret
leave
inc
push
pop
pop
in
inc
or
jnp
jmp
daa
or
mov
movs
aas
dec
js
sub
test
pop
inc
push
mov
push
push
inc
add
adc
mov
test
xor
fwait
add
fnsave
cs
hlt
add
sbb
mov
push
or
ins
push
add
ds
outs
sbb
and
inc
inc
ror
inc
fmul
add
jb
inc
cmp
add
push
cmc
cwde
push
retf
cdq
adc
icebp
clc
mov
mov
int3
or
mov
ror
sahf
enter
jmp
call
out
in
mov
pop
fucomip
test
sbb
cmp
call
stc
push
xchg
jb
jle
push
push
mov
scas
mov
cdq
stc
fsubr
ret
cmc
call
cmc
scas
jmp
xor
out
retf
cmp
mov
push
sbb
jmp
jecxz
not
mov
sti
(bad)
sti
dec
(bad)
jl
(bad)
xchg
sbb
fild
push
pop
jp
pop
int3
mov
movs
stc
cmc
push
iret
test
jp
rol
push
cmc
push
pop
xor
(bad)
data16
jge
stos
cld
clc
fs
mov
pop
les
iret
mov
iret
(bad)
sbb
mov
xchg
and
sti
jnp
pop
test
mov
pop
push
retf
iret
into
xchg
pop
push
dec
out
call
clc
out
pusha
mov
jl
scas
inc
inc
neg
and
push
cmp
cdq
mov
sub
dec
not
mov
ror
int3
int3
cmps
adc
les
pop
jmp
dec
dec
push
leave
push
shl
call
(bad)
pop
push
jmp
(bad)
jo
xchg
loop
cld
xor
adc
mov
fbstp
pop
fs
cmp
ficomp
sbb
sbb
movs
fadd
pop
sub
cmp
lods
mov
fcmovbe
in
xor
xchg
and
adc
pop
xor
jb
adc
sbb
cmp
dec
inc
fmulp
dec
xchg
pop
mov
lea
xchg
add
jbe
scas
aas
in
gs
fnsave
jmp
pop
push
repnz
in
adc
in
mov
jmp
fcmove
outs
push
jl
adc
fbld
sub
sbb
ins
fist
pop
(bad)
pop
xchg
sbb
pop
in
jmp
ins
daa
ins
call
mov
fild
jns
xchg
push
fucomp
call
gs
mov
in
call
dec
xor
popa
and
(bad)
mov
sti
jmp
or
mov
mov
retf
adc
sbb
call
or
in
xchg
rcr
dec
ror
xchg
dec
movs
out
jb
adc
inc
popa
movs
lods
adc
arpl
shl
outs
or
sti
sub
sti
cmp
repz
cmp
mov
pop
rcl
dec
mov
push
(bad)
cld
pop
jno
inc
and
and
jnp
add
cmps
sbb
dec
push
mov
mov
inc
iret
jo
xor
inc
mov
jmp
add
in
jge
push
shr
mov
mov
mov
mov
and
test
popa
add
fild
push
and
jmp
gs
cmp
stos
ds
inc
xchg
push
mov
ror
mov
dec
(bad)
sti
lods
std
xor
nop
xlat
(bad)
leave
inc
push
cld
lods
jecxz
push
push
pop
xchg
repnz
push
mov
inc
js
and
pop
xor
pop
lock
retf
jecxz
in
push
xlat
out
push
out
mov
out
mov
push
or
and
dec
call
adc
mov
int
sbb
repz
sbb
rol
rcr
test
or
fsub
neg
sahf
int3
xor
aad
imul
xchg
jg
push
stc
in
jp
out
not
sti
leave
(bad)
jg
pop
call
test
out
les
push
sti
jnp
mov
out
shr
push
jle
cmps
sti
cmp
mov
(bad)
inc
and
cmc
jmp
test
fsub
outs
into
fistp
jge
mov
fisttp
retf
cmc
mov
and
das
aas
cmp
idiv
pushf
inc
sub
dec
(bad)
mov
ror
stc
xor
pop
mov
out
adc
(bad)
scas
or
outs
and
sub
and
imul
push
sub
ror
xchg
mov
into
mov
pop
cdq
jne
xchg
movs
jb
mov
int
addr16
mov
dec
xor
push
push
jp
fadd
outs
pop
xor
ror
imul
jbe
test
adc
ja
ins
pop
pop
ds
add
mov
popf
jne
imul
cmp
int3
dec
fimul
int
addr16
jecxz
sbb
mov
shl
retf
(bad)
mov
adc
dec
imul
push
sub
sub
aaa
pusha
add
mov
xchg
in
mov
fisub
jo
add
call
lds
daa
(bad)
(bad)
mov
mov
mov
pop
nop
movs
xchg
lea
call
arpl
bound
push
mov
sub
cs
lods
jne
rol
fdivr
sbb
pusha
adc
sub
mov
add
xchg
adc
jo
sub
fisub
jae
or
cmp
repnz
xchg
cmp
(bad)
xchg
aam
push
sub
retf
(bad)
rcr
sti
retf
jb
jae
xor
add
xor
jge
xchg
call
cmp
in
and
loope
outs
aas
daa
cmc
jne
mov
popa
mov
mov
jecxz
pop
mov
fiadd
push
ror
dec
pop
xor
pop
int
in
and
dec
sbb
jg
(bad)
out
loopne
sbb
add
sar
outs
cmp
xlat
cmp
add
xor
pop
xchg
nop
call
out
cmc
shl
mov
xchg
in
(bad)
xchg
mov
stos
das
(bad)
sub
and
hlt
(bad)
shl
fild
cwde
rcl
out
jb
call
out
mov
aas
push
retf
adc
jae
adc
xchg
call
cld
pop
push
mov
jae
adc
jmp
outs
xor
imul
mov
rcl
stos
les
std
pop
test
add
dec
ss
call
cwde
mov
push
fcomp
not
add
cmp
cli
out
in
scas
lock
(bad)
cmps
mov
pop
sub
loope
out
not
out
loope
jns
out
jg
mov
inc
push
stc
aad
std
sbb
iret
in
mov
aad
lods
push
fistp
test
cmp
xchg
stc
fdiv
loop
jnp
addr16
jl
dec
pop
sub
out
sbb
(bad)
xlat
std
leave
dec
or
pop
das
ja
loop
fcom
mov
mov
adc
loope
retf
xchg
mov
push
or
data16
xchg
cmp
xchg
loope
or
push
lock
or
repnz
idiv
int
rcl
jb
inc
push
in
repnz
rcl
inc
or
xchg
cdq
les
sbb
cs
pushf
push
mov
in
es
lods
or
cmc
jnp
mov
inc
sbb
xchg
push
nop
scas
int3
mov
ds
jge
fdivr
out
aaa
gs
ret
mov
(bad)
js
dec
fadd
add
pop
cdq
add
scas
sbb
fs
mov
mov
jns
xor
aad
pop
mov
mov
inc
movs
fnstsw
and
out
fucomp
mov
gs
cs
dec
sbb
leave
mov
gs
add
retf
fild
data16
daa
(bad)
mov
xchg
add
outs
ret
std
sbb
adc
sbb
jmp
mov
pop
jle
cmp
movs
and
push
mov
retf
jmp
gs
mov
into
sub
fwait
push
das
cdq
icebp
mov
push
cmp
test
or
adc
sub
pop
fisub
imul
inc
ins
test
stos
pop
retf
lahf
jmp
fst
or
bound
and
or
xor
inc
sub
mov
push
mov
push
sub
sub
stos
adc
imul
mov
dec
iret
dec
sub
add
mul
(bad)
push
inc
sbb
pusha
es
xor
call
cdq
add
xor
sbb
xchg
xor
xor
cs
jno
xchg
add
pop
and
into
adc
xor
mov
repnz
lods
ja
lods
pop
mov
adc
test
push
xor
(bad)
dec
(bad)
aaa
mov
and
or
jae
test
dec
mov
div
mov
inc
fwait
leave
push
xchg
les
xchg
scas
xchg
and
add
ins
mov
outs
loop
xchg
dec
adc
and
ja
xchg
pushf
mov
arpl
pop
aas
in
mov
cli
add
adc
jg
push
sub
std
xor
add
xor
(bad)
out
sar
int
mov
data16
out
repz
cmp
adc
icebp
loope
jg
ja
retf
jo
xchg
sbb
mov
cdq
sub
jb
dec
div
fucomip
sub
(bad)
lahf
xor
xlat
test
in
scas
in
(bad)
in
out
ret
(bad)
fsubrp
inc
popf
fdivr
retf
cmp
jmp
stos
pop
outs
sub
lahf
sbb
push
(bad)
mov
scas
or
scas
ficomp
outs
or
je
rol
in
pop
or
dec
out
fwait
sub
lock
cmp
out
mov
add
mov
in
jmp
loopne
dec
push
sub
inc
rol
das
sbb
in
ftst
adc
push
and
or
dec
or
fadd
sbb
jb
xor
push
sbb
xor
les
sbb
mov
push
enter
xchg
mov
sub
add
out
pusha
loop
rol
mov
mov
shl
arpl
fstp
lds
xchg
cwde
or
mov
loopne
cmp
mov
dec
sbb
je
fs
(bad)
jp
ss
dec
cmp
lock
pop
sahf
mov
and
dec
pop
rcr
sbb
and
ja
sar
push
or
retf
xchg
in
mov
dec
mov
or
pop
jns
je
daa
fldcw
xchg
jge
fbld
sub
bound
test
es
dec
sbb
sub
mov
adc
xchg
rcl
gs
ins
aad
aad
ss
in
(bad)
stc
fwait
in
dec
jmp
add
jbe
into
test
lods
mov
fisub
sbb
or
out
les
cmp
inc
ss
sub
mov
shl
movs
push
dec
dec
mov
sub
push
inc
mov
push
shr
std
stos
shl
or
ret
sbb
push
dec
jp
sub
pop
dec
sub
fadd
jle
mov
xlat
(bad)
or
bound
mov
add
repz
jmp
adc
mov
lods
(bad)
jmp
rol
adc
cmp
outs
push
or
gs
dec
les
loope
ins
rcl
and
sbb
das
out
lea
dec
push
add
pop
adc
cmp
ror
jl
mov
add
jae
cli
xchg
popa
test
push
fisubr
pop
cmp
shl
sub
int
loope
mov
add
shl
lds
and
xchg
mov
out
push
or
sub
and
inc
cs
leave
mov
ror
loopne
fldlg2
ins
scas
jns
cmc
push
jno
pop
cdq
sbb
cmp
stc
dec
sbb
jp
mov
out
mov
fimul
in
scas
out
cmc
xchg
(bad)
aam
mov
xlat
mov
cmp
jmp
(bad)
iret
xchg
(bad)
jl
xlat
fucomip
outs
cld
ret
shl
cmp
cli
mov
scas
in
(bad)
jg
sbb
out
pop
jg
cmps
lock
jmp
addr16
jle
push
ret
fisttp
aaa
es
pop
es
scas
iret
scas
aam
pop
enter
add
(bad)
sti
movs
sbb
es
jmp
scas
jbe
cmp
cs
cdq
ficomp
call
dec
fs
pop
mov
(bad)
fdiv
pushf
add
fdiv
pop
mov
in
outs
adc
push
and
jmp
les
inc
or
in
dec
sbb
fisubr
mov
mov
mov
shr
retf
addr16
sub
xor
div
cmps
or
and
mov
(bad)
loopne
nop
xchg
xchg
mov
mov
aas
pop
mov
pushf
ds
cmc
mov
xchg
lea
jb
mov
out
in
xor
adc
gs
mov
lods
mov
inc
adc
pop
aam
sbb
outs
jmp
imul
dec
pop
mov
fistp
in
jmp
add
pop
push
ror
and
xchg
mov
mov
popa
jp
mov
out
fidivr
(bad)
push
inc
cdq
popf
dec
popf
xchg
jmp
fimul
and
fisttp
into
sbb
(bad)
ror
sub
mov
(bad)
fist
scas
jle
stos
lahf
cmps
mov
jo
retf
ins
out
clc
call
test
xchg
ret
and
jmp
imul
xor
gs
and
and
aad
sbb
cli
xchg
mov
ficom
fmul
gs
aaa
mov
sub
shl
xor
fcom
retf
call
pop
cdq
jp
cmp
mov
push
cmp
mov
pop
fld
std
pop
imul
int3
mov
inc
pop
int3
idiv
jae
bound
or
test
xor
imul
bound
sbb
jae
jns
xor
inc
sbb
call
adc
movs
pop
adc
stos
pop
pop
adc
sbb
jecxz
pop
pusha
loop
addr16
push
pop
ja
dec
repz
jo
jmp
pop
mov
xlat
push
pop
out
sub
cld
shr
or
adc
ss
inc
mov
push
cmp
mov
xchg
test
jno
or
xchg
jl
xor
pop
jae
arpl
jmp
cwde
sub
enter
mov
push
jb
cmp
sub
enter
popf
xor
push
mov
leave
lea
ins
sbb
pop
clc
dec
jp
and
jl
add
adc
(bad)
icebp
xchg
cmp
xlat
adc
lds
or
sti
stos
xchg
mov
cmp
loop
sti
xor
jae
pop
push
int
iret
aas
pop
jmp
mov
scas
stos
std
scas
imul
out
out
jg
push
stc
fwait
jge
mov
fst
sar
inc
push
xchg
ficomp
cwde
retf
push
cld
jo
clc
jmp
out
iret
jbe
jle
(bad)
cmc
into
ins
loope
inc
neg
pop
repz
fst
cmc
sbb
mov
fwait
lods
mov
mov
rcr
ror
icebp
int
jns
int3
mov
lds
pop
jns
sub
fisubr
sub
lods
adc
xchg
push
sbb
adc
push
lahf
cwde
sahf
dec
ror
retf
jp
mul
xchg
shr
push
in
ins
fdivr
fcomp
stos
dec
push
xor
push
loop
dec
ins
adc
stos
cli
outs
xchg
in
lds
es
ins
push
(bad)
aaa
mov
mov
adc
fwait
test
cmps
(bad)
lahf
push
and
movs
gs
pop
mov
add
ja
push
mov
mov
mov
dec
test
ror
inc
mov
imul
pusha
jno
aaa
in
mov
push
dec
and
sbb
fsub
cmp
xchg
mov
outs
inc
sbb
or
mov
out
ja
jge
sub
bnd
repz
cmp
into
pop
push
pusha
shl
sbb
jle
(bad)
or
out
sbb
sbb
mov
ja
scas
push
push
cmps
cmp
mov
aas
push
mov
cmc
push
mov
gs
xor
mov
pop
adc
add
shl
inc
sbb
sub
call
(bad)
push
xchg
adc
in
adc
xchg
imul
cmps
push
call
pop
pusha
and
sti
push
dec
dec
inc
(bad)
inc
xor
iret
pop
int3
add
lahf
ins
fild
shr
mov
(bad)
outs
cli
icebp
bound
jmp
cs
cmp
out
and
xlat
push
pop
sub
sbb
or
mov
xchg
movzx
pop
rcl
adc
mov
cld
jmp
jns
xor
fst
lds
cmp
mov
xor
cwde
dec
js
mov
xchg
pop
add
jmp
cmp
push
jne
bound
pop
xor
test
in
push
jnp
adc
mov
sub
rcr
outs
and
(bad)
and
adc
test
out
outs
jo
cmc
loopne
rol
adc
jge
mov
outs
cmp
in
ret
mov
(bad)
outs
or
cmp
xchg
mov
loop
mov
pop
fs
inc
out
ins
jl
ss
inc
(bad)
jnp
sbb
out
rcr
pop
pusha
es
fidivr
fdiv
lea
aad
inc
xchg
out
sbb
in
imul
(bad)
jecxz
sahf
mov
mov
(bad)
jg
push
(bad)
jg
scas
(bad)
dec
hlt
cld
(bad)
sub
jmp
lods
cld
std
shr
jmp
neg
hlt
cld
push
xlat
mov
sub
leave
jge
pop
stc
loope
jecxz
stos
aad
div
jl
push
jg
mov
out
movs
icebp
lock
push
mov
lods
fxch
fld
(bad)
int
out
sbb
scas
in
mov
hlt
bound
push
aad
jb
inc
mov
ins
test
mov
movs
push
push
sbb
or
pop
jo
xor
or
pop
jg
mov
adc
mov
sub
xchg
add
popf
test
sbb
mov
push
or
cld
mov
adc
sbb
xor
push
out
mov
xor
in
push
mov
fidivr
into
pop
dec
call
dec
mov
mov
in
mov
cwde
ins
gs
cli
jg
pushf
clc
cwde
cmps
xor
pop
rcl
mov
jbe
or
or
ins
sbb
popf
pop
enter
mov
data16
cdq
ret
es
in
hlt
sub
cli
in
std
cld
sbb
mov
loope
xor
mov
pop
in
pop
mov
cmc
and
(bad)
std
movs
mov
inc
hlt
mov
pop
xchg
stc
imul
xor
outs
xchg
test
dec
sar
mov
fisttp
out
dec
cld
pop
call
pusha
dec
je
xor
rcl
or
retf
stos
inc
adc
xchg
mov
jle
sbb
ss
lods
out
xor
mov
call
fimul
pop
int3
pop
pop
mov
aas
add
mov
dec
mov
aas
test
inc
ds
aad
cld
enter
and
in
sub
sti
pushf
idiv
pusha
aaa
js
fadd
sub
fwait
inc
push
cmp
stos
push
ror
mov
sti
push
jns
pop
mov
icebp
jb
pop
sub
retf
movs
ins
sbb
scas
ins
mov
jg
sub
inc
popf
mov
push
nop
mov
push
jae
sbb
mov
scas
test
sar
mov
bound
retf
ins
fcomp
in
hlt
jp
jmp
and
adc
(bad)
scas
int
(bad)
sbb
push
(bad)
ins
rol
repz
cmc
stc
call
and
adc
push
push
sub
cmp
movs
cmp
(bad)
repnz
sbb
add
fidiv
ret
(bad)
cld
jb
xor
xlat
fst
pop
out
iret
push
inc
and
ds
fistp
inc
lock
ficom
pop
pop
in
rcl
xor
adc
stos
enter
outs
mov
scas
stos
sbb
enter
imul
cdq
xor
div
les
popf
inc
or
dec
aad
cmp
cdq
je
into
inc
bound
into
jne
loope
jne
sahf
mov
ret
add
or
aas
fcmovnbe
call
mov
aas
scas
sbb
(bad)
jmp
cmc
jg
sar
mov
loope
jg
push
sti
out
jge
je
loopne
push
cmc
dec
push
in
mov
add
fnstcw
clc
dec
popf
(bad)
jmp
aas
pop
out
inc
fs
jb
(bad)
ftst
in
cwde
jp
sti
mov
sti
(bad)
pop
cmc
in
out
aaa
ficomp
(bad)
and
stos
mov
sar
xor
jge
mov
push
fadd
imul
test
fs
push
dec
mov
dec
xor
fucomp
fs
sbb
aas
cwde
test
xchg
sbb
dec
jge
mov
jmp
sub
mov
pop
ret
xor
sbb
mov
inc
dec
inc
adc
scas
jbe
outs
sub
stc
cli
ds
pop
jmp
inc
sbb
pop
jno
pop
push
bound
push
jb
pop
mov
adc
or
ins
cmp
sub
retf
push
or
lods
add
and
adc
mov
pushf
ffree
frstor
mov
stos
dec
jb
outs
xor
icebp
lahf
aaa
inc
sti
lea
sar
jecxz
icebp
mov
adc
enter
jecxz
push
inc
fimul
cmps
sub
ins
es
pop
std
dec
inc
cmp
(bad)
cmp
outs
or
pop
rcr
hlt
imul
inc
int3
fwait
push
fsubr
push
(bad)
loopne
pushf
xchg
inc
xor
fbstp
xchg
je
rcr
retf
xor
movs
jns
mov
mov
mov
lock
rol
xchg
xchg
dec
test
xor
dec
mov
pushf
sub
xor
sbb
rol
push
dec
inc
imul
ret
xlat
stc
push
push
adc
push
xchg
mov
shr
scas
mov
mov
push
int
sub
(bad)
fmul
retf
pop
mov
push
sub
jbe
xchg
jmp
repz
ret
cli
push
mov
mov
dec
cli
mov
das
das
xchg
imul
les
xchg
mov
addr16
dec
cmps
mov
xchg
mov
fwait
ja
xchg
cdq
cdq
jns
push
nop
fwait
or
cs
aaa
adc
outs
mov
and
xchg
add
cmp
aas
fcom
and
mov
mov
push
push
sub
xor
daa
sahf
or
adc
jb
test
pop
(bad)
xor
jmp
loope
jle
ins
lods
pop
push
leave
xchg
lahf
sub
scas
leave
(bad)
jnp
jae
xor
leave
sub
and
mov
jno
frstor
sbb
or
popf
retf
sub
js
rcl
push
mov
mov
pop
jno
jb
pop
xor
imul
scas
xor
inc
arpl
mov
adc
lahf
in
mov
push
fiadd
push
or
into
push
cmp
repnz
pop
xlat
pusha
gs
bound
dec
mov
aas
scas
sbb
scas
daa
jnp
shl
fidivr
sbb
inc
or
scas
mov
aad
(bad)
ja
jle
cmps
jmp
sbb
bound
cmps
stos
stc
pop
cs
or
movs
adc
xchg
jge
pop
cdq
jmp
ja
sbb
pop
lods
jle
fidivr
mov
inc
loope
pop
out
mov
push
jae
(bad)
xlat
sbb
mov
xor
mov
loop
scas
dec
lea
outs
xchg
icebp
movs
mov
mov
clc
movs
pop
pop
add
pusha
inc
repnz
dec
out
mov
lahf
fmul
test
stos
pop
mov
and
or
dec
mov
mov
mov
gs
and
cmp
cmp
add
popa
pop
pop
sub
shl
inc
icebp
outs
inc
cmp
mov
xchg
sar
int
movs
lahf
jl
shl
jnp
jo
inc
jl
sub
fstp
fiadd
in
mov
(bad)
adc
call
xlat
movs
mov
mov
test
enter
mov
mov
sbb
mov
test
inc
pop
dec
jl
int
or
cmps
xor
jno
push
mov
cmp
stos
cmp
lea
int3
movs
cs
xchg
pop
jecxz
pop
add
pushf
push
cli
in
jmp
and
(bad)
and
nop
in
dec
(bad)
dec
pop
pop
lock
jle
(bad)
ds
lods
or
jmp
xlat
pop
leave
jle
mov
ror
inc
in
jo
mov
push
je
xchg
lock
mov
xor
stos
lods
dec
pop
repz
mov
and
pop
push
xor
mov
cwde
aaa
and
cmp
jge
sub
pusha
in
or
add
xchg
pop
cmp
les
pop
nop
adc
cmp
mov
out
push
push
xor
cmps
mov
mov
or
clc
sub
jp
xchg
div
add
test
push
aaa
push
mov
dec
rcl
call
hlt
icebp
xor
push
mov
out
pop
mov
xchg
outs
push
mov
popf
jbe
pop
(bad)
mov
icebp
ins
dec
or
inc
jno
adc
and
fucomp
inc
retf
in
cmp
mov
adc
mov
cwde
shl
or
mov
movs
and
pop
xor
nop
lds
shl
bound
test
jae
sbb
je
jl
retf
push
call
ins
dec
xchg
mov
push
(bad)
addr16
push
(bad)
xor
adc
in
and
test
adc
push
(bad)
dec
cmp
cmp
scas
repnz
mov
mov
mov
mov
test
loop
or
out
mov
neg
inc
dec
add
test
dec
and
add
mov
push
and
mov
retf
mov
out
paddsw
dec
stos
test
mov
inc
fmul
cmp
push
leave
cmp
inc
push
shrd
cli
test
and
add
or
cmp
mov
(bad)
jns
aas
hlt
daa
xchg
xor
dec
(bad)
loop
xchg
or
sbb
adc
ins
or
dec
loope
mov
cmp
sub
sub
outs
dec
sub
pop
addr16
sti
(bad)
jns
cld
pop
in
or
xor
pop
popf
mov
(bad)
(bad)
cmp
mov
pusha
jg
jb
fwait
jg
stos
ja
loop
stos
inc
imul
pushf
jle
je
mov
(bad)
jle
push
icebp
mov
cmp
jp
je
(bad)
push
xor
pop
repz
adc
or
add
int
cmps
or
cdq
enter
sti
ret
pop
es
add
mov
imul
jmp
jns
and
or
dec
fdivr
sahf
rcr
popf
fld1
and
fstp
and
pop
push
or
inc
sbb
xor
xchg
mov
xor
xor
xchg
xchg
mov
aas
xchg
(bad)
movs
ja
inc
mov
hlt
retf
in
je
sbb
sbb
rcr
xor
cli
in
stos
mov
(bad)
sbb
and
in
pusha
ret
stos
daa
adc
xor
ins
ficomp
stc
lds
lea
jecxz
int3
push
cmp
dec
mov
repnz
lea
daa
xor
mov
in
cmp
pop
xchg
push
xor
jmp
push
inc
cld
mov
push
push
sub
or
pushf
pop
in
and
dec
sbb
idiv
imul
pop
cmp
push
pop
push
sub
imul
rol
sub
xchg
pusha
pop
mov
adc
push
out
dec
in
sub
jecxz
scas
cmp
cmp
test
push
cmps
jne
and
clc
inc
fidiv
(bad)
and
jecxz
add
jle
in
dec
scas
sub
outs
dec
push
xchg
xchg
add
add
in
dec
inc
sbb
mul
fwait
shr
int3
iret
or
pop
cld
lock
add
xchg
cmp
push
data16
les
mov
out
rol
loopne
int3
lods
fld
mov
hlt
and
fcmovu
mov
xor
mov
sahf
jo
ins
cmc
add
push
push
pop
imul
jmp
add
dec
mov
sub
bound
xchg
sahf
mov
xchg
nop
push
push
push
xor
movs
push
xchg
adc
enter
mov
fsubr
retf
cmps
cmps
cli
fsub
jbe
adc
and
or
fist
sub
sub
adc
in
or
fld
push
enter
add
aas
nop
push
add
xor
fs
dec
(bad)
out
inc
sub
loope
in
(bad)
jmp
(bad)
dec
inc
push
or
or
cmc
ins
push
jg
inc
(bad)
aam
fldcw
add
(bad)
push
sti
and
in
add
add
mov
pop
sub
cmp
in
jnp
xor
fwait
dec
dec
cmp
cmp
xchg
imul
inc
cmps
shr
ds
je
out
jo
sub
jae
cmp
and
sbb
sub
add
daa
inc
mov
imul
push
mov
sub
ja
mov
cmp
pushf
or
and
push
add
jne
in
les
mov
scas
push
aam
cmp
jge
rcr
rol
(bad)
fcom
mul
out
in
xchg
outs
push
sub
push
in
fs
pop
jle
imul
push
xlat
add
cld
mov
(bad)
ss
mov
jge
shl
inc
sub
popa
xor
pop
pop
js
push
in
jge
xor
push
outs
or
lods
test
cmc
cmp
cmps
aaa
jle
addr16
mov
xchg
cmp
movs
mov
cmc
icebp
mov
repz
add
mov
cmp
mov
xor
(bad)
sub
js
loope
lock
sbb
cdq
into
shr
xor
and
mov
mov
bound
lods
(bad)
loopne
jb
ficomp
add
je
mov
xlat
xchg
or
(bad)
stos
push
stc
ror
clc
fcomp
or
dec
pop
cdq
push
jle
pop
cdq
mov
xchg
push
sbb
cdq
jl
sbb
ins
xchg
inc
xor
addr16
push
sub
bnd
jns
inc
lods
into
mov
sub
add
in
fcom
out
sub
jmp
pop
jo
add
dec
xor
inc
ret
xchg
pop
gs
call
or
into
add
sub
mov
hlt
pusha
imul
xchg
aaa
movs
mov
and
scas
cmp
adc
mov
arpl
popf
jbe
pushf
(bad)
(bad)
sbb
jp
in
sahf
xchg
mov
gs
call
mov
or
pop
sub
cmp
cmps
sti
xchg
fsub
push
cs
mov
jae
sbb
cmps
inc
bound
cs
sub
clc
add
pusha
hlt
(bad)
(bad)
retf
pop
cmp
dec
dec
test
mov
xchg
inc
fisub
pop
pop
(bad)
in
ds
fcmove
out
xchg
or
sub
loope
mov
inc
xor
popf
or
xor
imul
and
inc
(bad)
lds
nop
lea
inc
dec
mov
mov
rol
mov
out
dec
push
retf
arpl
adc
xor
pop
sub
imul
(bad)
imul
add
sbb
stos
jnp
push
sbb
aaa
into
jnp
or
mov
sub
and
mov
or
popf
iret
jae
push
cld
cld
jns
sbb
cmp
les
mov
ret
out
push
mov
jge
add
xchg
in
mov
mov
test
fsubr
(bad)
ins
rol
mov
dec
scas
lahf
and
addr16
aam
add
ret
fldcw
out
test
in
rcl
fisubr
int
pop
fld
mov
dec
je
and
call
je
sub
or
fst
(bad)
add
push
inc
jae
dec
loop
(bad)
int3
mov
mov
inc
cmc
add
xor
mov
call
pushf
mov
sbb
mov
xchg
mov
jmp
(bad)
sar
out
popf
mov
xchg
loopne
(bad)
(bad)
scas
stos
push
fcmovb
out
lods
outs
clc
ror
add
jge
stos
cmp
dec
push
xchg
(bad)
push
cmps
pop
cmp
xchg
jns
dec
cli
test
jno
cdq
fist
sti
mov
lds
nop
mov
mov
fldcw
in
faddp
dec
test
mov
mov
hlt
aad
fst
retf
sahf
jne
addr16
gs
sysenter
mov
sub
ins
add
cdq
leave
fcom
mov
xor
add
mov
push
in
ds
(bad)
jbe
xor
sub
inc
sbb
mov
jne
jbe
cmp
shr
cdq
scas
adc
or
test
fstp
lahf
les
mov
pop
ror
xor
and
fldcw
jmp
lds
cdq
(bad)
stos
out
cmp
popf
mov
dec
and
mov
cs
gs
xor
pop
test
cmps
pop
jmp
popa
mov
(bad)
fisttp
mov
push
mov
inc
out
mov
pop
jmp
mov
xor
xor
add
shr
ins
outs
fsub
adc
sbb
inc
xchg
icebp
mov
ds
mov
push
or
lods
inc
icebp
mov
mov
mov
jmp
dec
jae
ror
imul
retf
fmul
stos
xor
jae
mov
and
jl
cs
add
bound
or
push
mov
jmp
fdivr
aaa
push
mov
mov
rol
cmp
jno
sbb
adc
int3
aad
jno
jae
out
dec
fnstenv
in
jb
pop
imul
ret
sub
sub
sub
mov
add
scas
nop
lea
jno
adc
and
or
ins
mov
mov
xor
push
and
(bad)
cwde
into
mov
shr
(bad)
outs
mov
inc
dec
inc
jns
xor
(bad)
aad
push
push
data16
mov
in
mov
lock
hlt
xchg
jb
mov
xor
pop
or
arpl
sbb
mov
and
cmps
or
push
inc
or
mov
inc
imul
cmp
stos
jecxz
xlat
repz
jne
sete
jno
loopne
and
lods
in
in
(bad)
jg
inc
xor
inc
stc
daa
jecxz
sub
and
xor
cmp
xor
outs
mov
inc
sbb
mov
in
movs
add
fldcw
jmp
pop
sub
push
xchg
push
les
sbb
jb
daa
dec
mov
ja
aam
or
xor
jmp
push
(bad)
cmp
test
es
cwde
jae
sti
cmp
jmp
pop
fucomi
fbstp
xor
or
mov
pop
or
pushf
std
jl
cmp
xchg
mov
dec
pop
xchg
mov
push
in
rcr
ret
repz
pop
mov
das
ins
mov
sub
jle
hlt
pusha
jg
jne
jne
pop
aad
rcl
mov
clc
mov
sti
mov
call
jmp
mov
cmps
inc
inc
xor
call
(bad)
pop
lea
and
sbb
call
es
xor
imul
pushf
fistp
mov
lods
into
cmp
add
mov
pop
push
imul
gs
inc
inc
xor
and
in
ja
mov
xchg
jo
and
jne
call
int
mov
data16
es
and
cwde
sbb
js
xchg
fsubr
mov
lods
scas
fstp
stc
pop
fdivr
pop
ror
push
xlat
test
(bad)
int
mov
cmp
add
aaa
bswap
sbb
xchg
cdq
mov
and
sti
stc
mov
out
and
push
ret
bound
outs
aad
shl
hlt
dec
neg
ds
jo
sub
jmp
jge
mov
mov
or
push
test
stos
les
or
add
jb
xchg
das
jae
ror
lods
and
or
inc
mov
je
jnp
out
mov
psrld
jnp
xlat
fstp
sub
out
dec
inc
loopne
fwait
sub
xor
lods
xor
mov
jp
pop
shr
mov
xlat
addr16
int3
clc
adc
inc
cmp
pop
stos
jl
pop
lock
mov
mov
test
mov
jg
stc
cmp
add
bound
les
xchg
add
mov
aam
inc
sbb
lock
and
dec
jno
sub
sub
sub
ins
jbe
cwde
rcr
movs
inc
ret
or
icebp
pushf
push
retf
popa
adc
push
xchg
pop
outs
ins
imul
push
shl
mov
scas
inc
out
dec
in
ret
push
xor
and
mov
loopne
ror
xchg
js
stos
lods
leave
repnz
mov
icebp
mov
dec
repz
jp
sub
pop
inc
dec
loop
mov
outs
fimul
mov
xchg
fyl2xp1
sub
jmp
add
jno
sub
loopne
sbb
add
push
movs
sahf
adc
cdq
inc
xchg
in
xor
add
lock
push
(bad)
fldenv
push
push
jne
adc
jl
std
fcomp
pop
xor
pop
and
adc
pop
cmp
mov
dec
stc
jnp
mov
sub
or
adc
mov
push
ja
mov
fs
call
mov
stos
dec
push
xchg
push
enter
inc
adc
mov
les
or
fisubr
xlat
cmp
cs
xor
jbe
sbb
clc
(bad)
mov
fcmovb
lods
or
dec
popa
repnz
sub
sub
adc
dec
fistp
jbe
push
mov
adc
adc
inc
out
jmp
jbe
dec
jbe
movs
rcr
les
outs
mov
in
xchg
imul
loop
call
mov
mov
mov
out
pop
push
repz
retf
jnp
inc
ss
test
imul
inc
leave
cmp
pushf
jp
pop
fisubr
pop
mov
out
sar
cdq
sti
shl
cmps
out
sbb
fbstp
pop
sub
inc
pop
shl
fstp
jmp
in
into
aam
(bad)
add
xor
lods
int
mov
sub
cmp
ins
(bad)
cdq
int
push
xor
leave
xchg
mov
cmp
mov
sub
(bad)
xor
jo
(bad)
and
dec
mov
fwait
mov
jmp
je
push
(bad)
sti
stos
push
cdq
pushf
fucomip
jae
stos
xchg
add
jns
inc
fs
xor
adc
ror
pusha
jl
test
test
ret
mov
fwait
sub
cmp
mov
int3
sbb
and
mov
xchg
sbb
xor
pop
repz
push
(bad)
call
mov
rcl
adc
inc
adc
aaa
sub
retf
mov
mov
mov
push
xchg
cmp
sub
push
jae
or
xor
je
stc
imul
or
call
inc
sub
push
lds
(bad)
dec
pop
push
fldcw
test
sbb
dec
xor
or
mov
retf
inc
pop
ret
imul
test
sbb
(bad)
and
lea
fwait
fs
push
cmp
push
and
cmps
xchg
jno
dec
xor
(bad)
mov
sub
mov
pop
push
pop
aas
mov
xchg
ret
sub
push
cmp
out
mov
ins
cmp
inc
ss
mov
mov
pop
pop
and
cmp
sti
retf
sbb
ror
cwde
retf
lock
jae
(bad)
mov
mov
dec
inc
add
dec
dec
mov
add
mov
dec
xchg
push
add
or
add
repz
or
lock
mov
ds
push
les
(bad)
jl
fild
sub
cld
(bad)
shr
std
xchg
push
in
push
dec
in
inc
push
(bad)
mov
clc
dec
jle
dec
mov
mov
rcl
int3
jl
es
push
mov
test
push
(bad)
movs
mov
or
inc
push
mov
ret
xor
xchg
std
ret
cmp
mov
mov
inc
mov
out
sbb
pop
(bad)
xchg
dec
cs
sub
adc
in
mov
xor
int3
ds
and
pop
or
fist
daa
arpl
(bad)
fadd
mov
lods
sub
loop
imul
icebp
ret
xor
enter
ret
aas
loope
out
push
jbe
repnz
in
test
lea
call
mov
cld
cli
inc
icebp
out
cmps
scas
in
retf
pop
ficomp
cld
sahf
les
adc
aas
push
jl
fs
sub
ds
(bad)
outs
push
push
out
stos
sbb
retf
jge
fs
movs
dec
jmp
cwde
sub
shl
fsqrt
push
into
adc
bound
jo
mov
test
mov
mov
pop
jecxz
pop
adc
pop
xchg
cmp
mov
rcr
scas
das
push
jmp
sbb
sub
inc
aad
sub
push
daa
jo
js
sbb
(bad)
pop
ins
push
or
or
mov
add
repz
adc
faddp
addr16
div
dec
imul
push
adc
ret
out
ret
shr
mov
aaa
add
xchg
call
cdq
jg
inc
and
xor
test
and
fs
xor
xor
fcomp
and
aad
lea
pushf
inc
mov
mov
mov
loop
sub
mov
test
inc
data16
nop
xchg
pop
scas
bound
dec
xor
inc
jge
dec
push
xor
std
jle
daa
test
inc
call
push
out
out
mov
and
mov
dec
(bad)
rcl
adc
repnz
push
outs
pushf
pop
cmp
and
inc
call
mov
cdq
xchg
add
or
(bad)
and
sub
dec
dec
or
out
shl
xor
xchg
jno
or
mov
xor
pop
and
mov
push
or
or
mov
pop
arpl
xor
inc
xor
sub
xchg
imul
inc
or
loop
mov
dec
xchg
jmp
jmp
cwde
cli
(bad)
test
in
xor
fwait
pop
mov
push
jns
test
pop
sbb
adc
(bad)
call
imul
fdivr
inc
in
imul
sub
(bad)
xchg
fnclex
sbb
ret
cmps
lods
xor
sahf
cld
lea
nop
mov
pop
dec
jecxz
mov
jno
out
mov
test
and
shl
lea
xchg
xor
cmp
push
push
jmp
cmp
addr16
push
data16
fcmovbe
push
ss
push
cmp
adc
push
cmp
cld
inc
popa
mov
les
cwde
bound
clc
jmp
mov
and
add
jae
push
push
and
inc
sbb
and
xor
add
adc
and
pop
xchg
xlat
mov
cmp
push
cmps
sbb
jmp
ins
jne
mov
repnz
sub
cmp
or
fistp
inc
fistp
push
scas
scas
iret
mov
(bad)
jp
dec
inc
data16
nop
loopne
xor
pop
xor
jle
xchg
gs
cs
loop
imul
adc
fcomp
mov
dec
int
mov
outs
and
test
out
xchg
arpl
aaa
mov
mov
mov
jl
std
outs
outs
push
sbb
aad
(bad)
fwait
xchg
out
mov
out
icebp
lds
int
scas
pop
fptan
jmp
mov
pop
push
pop
sub
jo
ja
ror
pop
arpl
lea
pop
das
fsubr
fnstsw
call
sti
cmp
lahf
push
arpl
test
jbe
movs
mov
and
pop
outs
lods
(bad)
(bad)
xlat
(bad)
push
pop
inc
add
cmps
in
aad
fcomip
aaa
int
jge
cmp
xor
rol
cmp
gs
clc
inc
inc
xor
add
iret
out
lods
scas
sbb
aad
lods
ficomp
and
stos
cmp
outs
jae
inc
and
dec
push
imul
mov
outs
bound
xor
aaa
sub
dec
jle
pop
cdq
stc
outs
cmp
push
bound
jle
call
(bad)
loop
ficom
aad
cmps
and
fdivr
dec
shl
out
add
push
mov
jp
pop
jmp
mov
outs
dec
test
adc
and
jp
test
sub
stos
xchg
sub
mov
ret
sbb
xchg
mov
or
or
push
daa
ins
xchg
test
jb
movaps
pop
fstp
inc
xor
push
sahf
push
xchg
test
sub
dec
and
loope
je
mov
push
lahf
or
in
std
das
inc
cdq
sub
mov
call
or
and
pop
arpl
bound
and
mov
test
imul
cmp
dec
cmps
adc
jmp
mov
sub
(bad)
adc
push
leave
loop
cmp
daa
mov
pop
fwait
adc
sbb
mov
sar
and
xor
dec
arpl
sub
data16
xchg
fwait
cmp
lods
or
outs
movs
inc
push
jmp
fmul
mov
enter
xlat
and
push
ret
test
sar
sub
movaps
jns
lock
mov
test
and
jge
gs
(bad)
loopne
fdivr
fwait
js
xchg
dec
jnp
inc
cmp
mov
sbb
stos
mov
das
inc
or
sub
test
inc
aas
pop
clc
jmp
es
mov
out
push
pop
daa
repz
jmp
mov
retf
xor
dec
xor
adc
cmp
sub
pop
jb
mov
retf
xor
cdq
scas
(bad)
fld
jo
sub
sub
dec
xchg
mov
cmp
(bad)
fldcw
aas
sbb
jo
inc
sbb
mov
test
mov
in
jmp
leave
(bad)
aad
mov
scas
or
rol
popf
dec
aad
div
cmp
out
mov
ret
pop
lods
paddq
adc
cs
(bad)
sbb
(bad)
sbb
inc
out
rol
pop
pop
push
sti
pushf
cmp
cmc
imul
jb
stc
fidiv
icebp
push
sbb
ins
mov
scas
sbb
mov
mov
fwait
cmps
jb
bound
xor
out
mov
lods
ja
mov
xor
js
jg
xchg
(bad)
popf
mov
loop
mov
push
cmps
xlat
jp
repnz
scas
pop
push
mov
adc
push
ins
int3
sti
sbb
or
(bad)
(bad)
movs
mov
lock
cmp
mov
inc
add
loopne
rol
scas
das
push
leave
xor
and
mov
jae
mov
div
sub
cmc
out
mov
cmp
jno
jae
and
sbb
call
mov
(bad)
test
push
mov
nop
push
pusha
icebp
or
or
in
test
xor
pushf
cmp
test
fsubrp
push
fcomp
jae
push
daa
clc
inc
out
iret
fiadd
fwait
(bad)
les
or
setns
test
lds
out
add
aam
outs
pop
jbe
and
xlat
in
cmc
push
psubusb
mov
jmp
lea
ret
xchg
cmp
jns
jae
add
inc
mov
daa
inc
pusha
lea
sbb
cmp
dec
sub
sbb
cs
loope
adc
inc
and
sbb
sub
mov
iret
dec
ja
clc
repnz
cmp
pop
push
cmp
fisub
test
xchg
dec
outs
xor
std
call
je
nop
lock
(bad)
dec
data16
leave
fcmovnb
lahf
jmp
mov
mov
mov
mov
shl
fdiv
mov
fcomp
loopne
dec
mov
mov
mov
call
pop
cmp
adc
(bad)
push
xchg
jb
fidivr
fs
and
dec
cmp
sub
ins
loopne
mov
mov
add
add
stc
dec
rcl
mov
xchg
add
icebp
pop
or
and
inc
lods
cmp
and
mov
and
jb
xchg
pop
aaa
mov
test
sbb
les
pushf
jo
sub
jae
cwde
shr
add
dec
push
retf
(bad)
rcl
aas
lods
aam
mov
jge
out
scas
cld
fst
movs
pop
(bad)
jne
mov
pop
sahf
dec
test
jge
test
pop
xchg
ret
dec
cwde
push
cdq
sub
and
cli
sbb
loopne
xchg
rol
lock
adc
pop
aad
push
fist
rol
mov
mov
cmps
int3
stos
sub
stc
repz
xchg
adc
xchg
lock
(bad)
mov
jle
ficom
pop
call
jl
stc
cs
dec
scas
aam
clc
cs
mov
sub
lods
mov
cmc
add
pop
fmul
add
inc
ret
jo
push
jle
pop
xor
xchg
je
in
icebp
adc
mov
xchg
cmp
cmp
cmp
jge
and
mov
jmp
iret
push
out
repnz
arpl
gs
mov
shl
cmp
pop
or
clc
add
inc
mov
xchg
rcl
add
mov
int3
int
jne
(bad)
in
in
dec
(bad)
xchg
mov
jg
mov
dec
dec
into
xor
shr
and
mov
jl
push
loope
imul
mov
fwait
pop
mov
(bad)
xchg
shl
mov
and
and
das
cdq
retf
adc
mov
or
dec
pop
aaa
nop
es
retf
mov
jae
call
inc
cdq
pop
(bad)
icebp
popf
or
in
lds
and
pop
adc
mov
add
lahf
aad
cmp
jl
xchg
mov
mov
dec
fiadd
out
jae
add
cmp
loop
sbb
fistp
es
in
retf
lock
adc
popf
dec
adc
or
into
dec
push
dec
add
sbb
ror
dec
addr16
xor
xchg
imul
add
xor
cdq
js
popa
enter
js
mov
push
pushf
mov
imul
in
fs
xchg
add
int3
leave
hlt
inc
cld
imul
mov
inc
cli
std
nop
jmp
pop
in
clc
out
push
(bad)
enter
dec
test
in
stc
fs
pop
sbb
mov
jp
sbb
outs
jno
sbb
cmc
test
mov
adc
ret
stos
add
push
imul
adc
or
clc
pop
cmps
mov
ins
test
cwde
js
sub
rol
retf
cld
sub
dec
(bad)
push
xor
inc
push
add
fisub
inc
mov
pop
sub
push
jp
push
adc
or
cmp
iret
outs
cmp
mov
mov
lds
inc
push
repnz
lock
fcmovb
movs
mov
cs
mov
mov
shr
xchg
imul
mov
adc
mov
iret
or
dec
pop
imul
in
shl
cdq
mov
and
inc
and
jb
xlat
sahf
mov
sub
ins
mov
jecxz
not
cmp
stc
test
adc
inc
cld
or
test
cmp
repz
jmp
gs
sahf
pop
sbb
pusha
xchg
push
add
xchg
jg
test
repnz
mov
cli
(bad)
jns
repnz
cmp
or
cdq
iret
mov
xchg
xor
mov
mov
outs
mov
adc
outs
(bad)
lock
inc
fnstcw
(bad)
fmul
fstp
fimul
(bad)
dec
lea
dec
mov
push
sub
mov
xchg
ja
es
pop
movs
std
pop
js
addr16
cmc
lods
jge
ficomp
test
jl
mov
aas
cdq
dec
mov
mov
sbb
mov
adc
jnp
fisubr
ins
sahf
mov
hlt
push
inc
rcr
lds
inc
mov
jmp
jmp
out
call
push
jmp
leave
mov
neg
shl
call
rcr
sub
rcr
jecxz
call
sti
lock
mov
int3
stos
xchg
pop
pop
out
maxps
jnp
repnz
xor
dec
mov
xor
(bad)
hlt
call
mov
xor
jg
shr
ror
pop
or
add
int3
out
cli
fsubr
leave
cmp
cdq
sbb
ins
push
pop
jl
rcr
push
fwait
jae
push
in
scas
sbb
push
or
sbb
cmps
rcr
mov
xchg
add
nop
dec
out
jnp
mov
clc
in
pop
sbb
mov
mov
and
iret
test
sbb
ja
into
ins
dec
outs
sub
test
cdq
or
push
cmp
retf
movs
and
push
test
adc
push
retf
cmp
jle
ffreep
hlt
fwait
(bad)
retf
mov
data16
sub
jae
loop
dec
and
adc
cmp
add
add
sub
bound
int
and
iret
repnz
xchg
retf
ja
in
adc
fmul
pop
cmp
xor
xchg
sbb
and
(bad)
out
pop
xor
cwde
add
cmp
fmul
lods
push
xchg
jge
and
ror
xchg
sar
cmp
xor
popf
add
cwde
pushf
ins
add
int
adc
dec
retf
add
gs
xchg
and
fldcw
inc
push
das
sahf
pop
cld
sbb
or
clc
sub
jecxz
pop
xor
xchg
cmp
aad
or
retf
sub
lea
popa
pop
pop
or
pop
xchg
out
push
dec
push
mov
cmps
ret
inc
aaa
jl
jns
push
mov
jecxz
push
vsubss
imul
call
inc
sbb
ret
sub
inc
lds
push
push
lea
cmp
adc
sti
stc
mov
inc
popf
inc
push
loope
mov
arpl
pop
sub
xor
arpl
push
mov
sbb
or
rcl
cmc
mov
std
add
test
dec
sub
ret
xor
pop
or
ret
or
add
mov
xchg
(bad)
nop
sar
hlt
sbb
lock
and
jbe
adc
add
popa
jl
xor
jae
jmp
and
repnz
lods
inc
and
mov
xor
push
or
test
adc
ds
bound
dec
scas
push
clc
and
pop
inc
xor
push
in
ss
dec
push
bound
adc
icebp
inc
push
or
leave
push
stos
xchg
ficomp
jnp
ficomp
dec
imul
movs
jge
int3
mov
pop
adc
sahf
or
sbb
and
cmp
jne
movs
idiv
xchg
mov
dec
cmp
push
(bad)
test
sbb
dec
cmp
xchg
dec
in
ss
int
in
adc
push
pop
mov
mov
xchg
jmp
pop
dec
nop
gs
and
pop
add
imul
ror
inc
mov
sub
jns
fs
popf
imul
xor
pop
push
popf
enter
mov
js
inc
xor
dec
sar
out
loope
mov
jae
lahf
lods
jnp
je
sub
ds
push
jbe
cmc
loop
add
popf
leave
jae
movs
div
test
jge
shr
push
lahf
jmp
rcr
push
fld
mov
imul
adc
pushf
(bad)
call
frstor
xor
jb
cmp
push
cmp
jmp
loop
or
ds
or
mov
mov
fs
cmp
addr16
pusha
imul
ds
push
pop
(bad)
cmp
shr
aad
or
bnd
cmp
sub
xchg
inc
xor
adc
push
xchg
sub
jge
aaa
or
sbb
lods
xor
mov
bound
mov
dec
jne
and
pop
xchg
xchg
cmps
in
pusha
and
xchg
or
aas
int
(bad)
cmp
das
adc
xchg
pop
push
shr
das
movs
add
pop
push
call
dec
mov
cmp
push
mov
xchg
ror
bound
fadd
int
push
js
inc
stos
retf
data16
fisttp
dec
xor
mov
out
or
push
xchg
push
shr
inc
pusha
mov
fcom
aad
rol
clc
ror
les
stos
out
pusha
outs
xchg
xchg
and
js
mov
aad
ds
les
jl
mov
fisub
cmp
pop
aaa
out
push
ss
mul
xor
ret
cmp
push
test
bound
clc
(bad)
sbb
jmp
rol
gs
mov
jp
mov
pop
xor
cmp
push
push
xor
push
add
adc
sar
mov
scas
adc
dec
movs
mov
jae
in
sub
and
or
popa
(bad)
out
xor
popf
cmp
gs
scas
and
es
pop
mov
shr
int3
mov
call
movs
dec
test
sbb
push
push
sti
add
cmps
push
out
aaa
cmc
adc
mov
push
sub
push
jle
adc
xor
lods
aam
jmp
ffree
cli
push
std
dec
adc
jb
js
mov
jns
pop
in
cmp
xchg
push
sub
sbb
in
sub
and
stc
aad
mov
xchg
int3
or
cmp
das
inc
cmps
clc
pop
dec
retf
xchg
aaa
fnstenv
jmp
aam
retf
dec
fsub
iret
mov
mov
int
cmp
adc
pop
sti
mov
mov
je
loop
ja
jmp
adc
test
add
sbb
mov
pop
sbb
mov
inc
es
adc
scas
or
sub
mov
xor
xor
inc
mov
or
mov
push
add
cdq
xchg
mov
cmp
jnp
xor
and
jno
out
retf
or
pop
push
jae
js
mov
add
ja
(bad)
and
call
fadd
icebp
sti
push
pop
div
test
(bad)
clc
iret
xchg
sub
std
loop
cmp
dec
jae
cmc
cmp
mov
sbb
sbb
sub
jbe
add
gs
lods
stos
iret
lods
scas
dec
ins
cs
push
push
jne
out
sbb
ds
neg
arpl
shr
js
cmp
pop
adc
inc
sub
push
adc
aam
fstp
shr
xor
out
aad
aad
mov
es
out
movs
mov
pushf
xor
cmp
dec
add
cmp
stos
(bad)
mov
xchg
pusha
es
cwde
movs
fdivr
pop
mov
inc
dec
inc
pop
mov
jecxz
push
icebp
mul
xchg
dec
jp
jecxz
mov
mov
mov
pop
nop
popf
sbb
loopne
inc
jae
movs
stos
mov
pop
lods
hlt
adc
sub
dec
xchg
gs
push
inc
ret
call
adc
clc
dec
push
mov
mov
enter
fcomp
xchg
pushf
pop
je
sub
lods
jno
sbb
in
pop
mov
push
pop
add
push
ror
push
enter
repz
jecxz
loopne
adc
rcl
gs
shl
sbb
adc
sub
xor
xchg
stc
repz
adc
or
arpl
and
ss
aam
lds
call
test
inc
mov
push
sub
cmp
sahf
or
ror
loope
mov
sub
pop
ror
inc
and
xor
test
loopne
mov
cdq
gs
cmps
push
sbb
retf
mov
sub
or
dec
call
arpl
outs
sbb
jne
inc
scas
es
push
jmp
retf
add
aad
xlat
cmps
cmc
xchg
stc
(bad)
int3
jl
or
add
leave
data16
add
add
pop
xor
inc
dec
xor
jg
test
mov
or
xchg
fadd
leave
lds
mov
inc
pop
int3
shl
push
inc
cdq
mov
fsubp
ss
push
or
inc
push
loopne
adc
pusha
and
push
push
jnp
mov
and
cmp
pop
sahf
mov
sahf
repz
sub
jecxz
xor
fsubr
in
add
cmp
or
jns
mov
iret
add
stos
sub
push
xchg
add
ret
xor
dec
pop
mov
add
call
int3
(bad)
ins
and
cmp
lea
jmp
icebp
mov
xchg
mov
ror
fsubr
icebp
xlat
mov
pop
pop
js
cli
out
add
pop
mov
jbe
std
in
dec
imul
mov
popa
sub
or
jle
sbb
mov
loope
cmps
out
sbb
ds
call
gs
imul
add
fadd
lds
mov
pop
push
nop
cli
jmp
xchg
out
sub
inc
jmp
mov
mov
xchg
movs
pop
mov
fnstsw
cwde
js
dec
adc
xor
mov
pop
out
pop
fbstp
push
cld
repnz
in
ss
idiv
mov
xor
mov
push
data16
add
sub
push
bound
mov
xchg
mov
mov
enter
in
mov
pop
bound
mov
lods
dec
and
xchg
fidivr
in
add
loopne
jno
je
lahf
mov
fninit
iret
sbb
rcl
fsubr
lahf
mov
mov
cmp
xor
push
outs
push
dec
jne
stos
aaa
jmp
adc
cdq
out
pop
dec
xor
or
adc
fld
gs
sbb
sub
aad
mov
scas
test
dec
jbe
dec
adc
mov
nop
mov
pop
jns
out
push
pop
clc
lea
cmp
or
or
sbb
test
sar
pop
cmp
mov
sub
in
ror
(bad)
lods
jl
into
inc
stos
mov
movs
shr
add
adc
lds
out
adc
push
ret
sbb
arpl
aam
jg
jb
sub
je
scas
mov
into
cwde
fdivr
int
hlt
mov
out
lahf
test
test
fwait
cmp
cmp
repz
dec
adc
push
and
sub
rol
jb
(bad)
in
push
xor
xchg
dec
das
mov
xorps
cld
jns
mov
shr
and
sbb
sub
cld
test
mov
and
xor
xor
leave
cmp
xchg
(bad)
(bad)
adc
(bad)
push
jo
inc
cmp
test
fbld
jl
es
or
aaa
inc
neg
inc
pop
sbb
pop
adc
inc
ins
ror
popa
sub
sbb
and
mov
lahf
jb
mov
imul
inc
sbb
repz
add
inc
outs
iret
mov
loopne
add
movs
inc
call
cmp
push
dec
xor
cwde
stos
xor
mov
cmp
cld
jl
mov
mov
retf
dec
add
fs
sbb
add
test
xor
rcr
das
and
in
add
scas
cmp
je
jle
je
jle
ret
add
jo
push
ins
out
movs
mov
add
repnz
xchg
inc
cmp
stos
and
xor
adc
push
cmp
or
adc
fsub
dec
es
mov
push
adc
sbb
xchg
inc
adc
addr16
cmp
push
(bad)
pop
aam
mov
xor
ins
xchg
jns
lahf
js
push
pop
loopne
idiv
in
mov
outs
(bad)
loope
push
xlat
(bad)
add
in
inc
mov
(bad)
ss
push
pop
cmp
mov
adc
sbb
std
in
mov
jp
jg
fst
jecxz
daa
(bad)
(bad)
pusha
pop
pushf
mov
jns
mov
aaa
dec
fbstp
neg
jp
cdq
push
dec
pop
fidivr
jg
adc
jne
pop
and
mov
out
mov
xor
inc
add
mov
loope
lahf
pushf
scas
mov
pusha
cli
cli
(bad)
add
shl
cmps
das
ins
sub
gs
lods
(bad)
retf
inc
mov
cmp
sbb
add
pop
mov
pop
mov
dec
adc
bound
dec
cs
dec
pushf
fisub
xchg
xor
or
fcomp
mov
in
out
loop
fwait
dec
mov
call
cmp
cli
mov
int3
cmp
sbb
mov
sbb
das
dec
mov
cmps
(bad)
sbb
movs
dec
imul
mov
dec
and
jb
add
or
and
pop
xor
xor
loop
or
sti
xchg
mov
fwait
into
adc
mov
dec
xor
or
sub
lea
adc
inc
xor
cwde
bound
scas
repnz
push
lds
pop
add
mov
push
ins
das
iret
add
push
jno
stc
inc
fst
jle
cmps
(bad)
call
cmp
test
xor
or
push
sbb
popf
movs
dec
mov
push
scas
dec
pop
add
addr16
xor
xbegin
xchg
pop
cmp
dec
lds
sbb
add
mov
jne
mov
push
xor
sbb
pop
push
jg
mov
addr16
icebp
adc
cmp
xchg
sub
add
xor
lds
shr
ins
js
sub
in
sub
movs
test
cmp
jb
xchg
std
mov
dec
cmp
adc
sub
je
outs
or
iret
cmp
and
repz
dec
jl
or
push
and
lahf
fnstsw
loope
or
addr16
xchg
stos
ds
inc
sbb
xor
fisttp
dec
adc
popf
lea
xchg
xchg
add
cmps
mov
leave
cmc
sbb
es
test
das
inc
inc
push
std
add
test
inc
mov
push
outs
xchg
pop
sbb
call
xor
and
test
push
loopne
popa
aas
jle
inc
int3
adc
sub
adc
test
movs
aad
mov
mov
cmp
mov
dec
push
retf
mov
dec
inc
jmp
xchg
dec
pavgb
cld
in
xor
dec
movs
cmp
int
jo
inc
inc
adc
mov
jecxz
jge
dec
shl
out
hlt
mov
push
pop
sub
fldcw
xchg
dec
lds
ja
out
mov
(bad)
fstp
popf
sahf
jecxz
jmp
sar
in
xchg
dec
ds
mov
into
jae
jmp
(bad)
cmp
push
fistp
lods
mov
jne
jl
adc
cli
push
ret
dec
outs
mov
movs
popf
sub
mov
jmp
(bad)
out
pop
push
mov
je
xor
test
cmps
scas
imul
das
sbb
cmp
xchg
dec
jb
or
jbe
add
add
mov
jb
pop
xchg
jge
jmp
lods
test
stc
xlat
or
jnp
pusha
out
xchg
scas
in
pop
xor
ds
jl
je
mov
pop
mov
icebp
shl
push
jo
jg
and
cmp
jmp
pop
aas
pop
jnp
ja
add
pop
push
addr16
dec
mov
mov
out
cmp
(bad)
xchg
cmps
jge
sub
dec
popf
fucomp
pop
fstp
jns
jmp
sub
pop
ficom
pop
aad
pop
fistp
sbb
sub
cmps
ds
mov
mov
and
lahf
sub
xchg
xor
xchg
xlat
adc
inc
push
mov
sub
out
out
frstor
sbb
in
std
mov
push
(bad)
mov
mov
xor
pop
dec
inc
push
retf
vshufpd
xchg
xor
repz
cwde
push
cmp
inc
(bad)
inc
mov
imul
ror
lods
xor
cmp
fisubr
xor
daa
cld
adc
sahf
hlt
mov
lahf
push
test
sub
lds
pop
push
inc
aas
push
jle
ret
(bad)
sbb
inc
js
or
cli
aad
pop
(bad)
or
cmp
pop
div
lds
jmp
add
outs
add
lds
push
mov
jb
xchg
adc
inc
popf
push
cmps
adc
aaa
and
xor
int
mov
mov
call
int3
idiv
shr
cmp
xchg
enter
scas
movs
push
repz
hlt
pop
inc
mov
jecxz
adc
pcmpgtw
cmps
xchg
push
arpl
push
ins
stos
pushw
scas
xor
and
xor
loop
xchg
mov
cld
cmc
mov
and
adc
mov
popa
fstp
inc
(bad)
fisttp
push
lods
pop
inc
test
sbb
ret
inc
sbb
or
jns
xchg
rcr
sub
pop
jl
call
(bad)
rol
pop
cmp
xchg
nop
loope
or
add
sbb
scas
rol
(bad)
lds
push
xor
pop
sbb
ret
jmp
movs
adc
adc
cmp
sbb
and
mov
jo
scas
test
cmp
jns
push
cmp
and
xchg
ins
xor
dec
cmps
jno
je
pop
mov
sbb
popf
push
test
cmps
mov
or
cld
or
int
xor
subps
cld
in
ins
xchg
dec
pop
add
push
ror
(bad)
loope
sub
cmp
dec
dec
cwde
xor
test
ret
repz
xor
add
mov
dec
push
adc
adc
ret
js
sub
cmp
xchg
loope
pop
shl
addr16
ret
xor
push
shl
popf
retf
inc
jne
cmps
cmps
(bad)
push
pop
and
pop
or
push
js
stos
stos
adc
dec
jb
mov
add
jmp
(bad)
imul
sbb
cdq
and
(bad)
jle
arpl
je
jle
stc
mov
push
mov
not
ror
mov
pusha
je
loop
mov
push
aas
mov
(bad)
mov
call
(bad)
pop
outs
mov
pusha
out
loope
out
jns
das
jb
sbb
jl
ins
out
mov
outs
out
dec
mov
int
mov
and
ja
mov
mov
repnz
clc
jns
fidivr
loope
int
pop
cmp
hlt
call
inc
popf
test
lea
popf
mov
dec
rol
arpl
ss
mov
cs
mov
loope
push
scas
aaa
push
cmps
push
lds
mov
inc
loopne
cs
mov
shufps
mov
aaa
push
out
jmp
popf
rcr
mov
mov
aas
jnp
aaa
(bad)
jp
dec
arpl
push
mov
(bad)
rcr
inc
or
adc
and
cmp
dec
add
data16
dec
mov
call
push
inc
xchg
cli
cli
adc
mov
scas
pop
or
mov
loope
sub
push
pop
movs
arpl
mov
lods
jo
inc
imul
push
jmp
mov
lea
or
dec
out
cmps
les
or
xchg
fild
cmp
ret
pushf
repnz
pusha
(bad)
cli
push
xor
(bad)
sti
les
pop
outs
dec
push
cmp
add
ins
in
push
mov
lea
jb
or
iret
cmps
loop
jecxz
mul
imul
sti
sub
push
loopne
push
push
outs
jnp
sub
ror
je
mov
dec
xor
into
mov
enter
int
jo
jo
cmp
and
in
pop
jo
cwde
push
outs
mov
cwde
bswap
les
into
adc
fadd
fs
mov
ins
xchg
popf
outs
mov
sahf
out
clc
mov
cdq
add
not
add
int
inc
jne
add
in
mov
in
add
aad
call
xchg
cmp
mov
inc
int3
mov
adc
call
inc
or
jle
aam
lds
dec
jnp
sbb
mov
loop
aaa
xchg
mov
sbb
or
fcom
xchg
mov
or
or
out
ror
inc
movs
sar
lods
xchg
in
fdivr
mov
gs
push
test
retf
gs
push
xchg
push
retf
in
jl
popf
push
std
sbb
jp
int
int
jg
xor
xor
jmp
jno
rdmsr
mov
inc
pop
pop
cs
add
push
jno
sar
retf
xchg
mov
cwde
int3
loopne
popaw
pop
add
dec
hlt
fdivr
push
in
in
mov
enter
xchg
daa
cmp
push
push
adc
das
in
iret
test
jb
xor
popa
mov
jo
call
dec
jle
dec
test
sbb
nop
fdivr
inc
ret
(bad)
in
cmps
jmp
and
adc
xor
push
sbb
movs
jbe
mov
fadd
ins
jnp
pop
adc
fidivr
mov
mov
cmp
mov
sub
mov
sub
mov
(bad)
jmp
pop
pop
lahf
cmp
push
in
cdq
cmps
jns
outs
jae
leave
pop
adc
mov
ror
cmp
das
sahf
stos
jg
ins
ror
out
sbb
cmp
js
ins
int
xlat
aad
jnp
not
xchg
jle
mov
out
adc
int3
and
sub
mov
mov
adc
jno
xchg
loop
es
mov
cli
shr
in
inc
lods
cdq
addr16
cmps
into
outs
dec
pop
ins
dec
out
outs
mov
cmps
pushf
aam
sbb
bswap
jmp
rol
call
jno
pop
in
pushf
cmps
call
mov
mov
fistp
dec
pushfw
mov
pusha
ret
xchg
sbb
test
outs
jnp
not
call
jo
jnp
pusha
mov
lods
cmp
pop
mov
sbb
pop
jae
inc
arpl
sbb
std
sub
int3
inc
cmp
fidivr
and
add
dec
ins
push
xor
mov
shl
push
mov
ins
lock
add
mov
jg
cmp
pop
stos
fsub
lds
inc
stc
and
subps
pop
or
stc
xchg
or
mov
and
loopne
ret
fcom
(bad)
jp
sub
xor
fld
cwde
stos
or
xchg
sar
sar
adc
xchg
and
rcr
aad
(bad)
int3
add
dec
fsubr
pop
mov
xchg
dec
jl
aad
dec
call
mov
jns
or
mov
int3
mov
inc
out
xor
(bad)
push
jns
shl
jo
push
xor
je
mov
mov
sbb
mov
pop
ja
and
loope
sub
pop
sbb
push
jmp
aad
gs
shl
cwde
jmp
dec
jae
inc
movs
inc
xchg
adc
mov
pop
lods
cmc
xchg
sub
in
icebp
bound
nop
(bad)
hlt
jl
xchg
jmp
sbb
dec
inc
push
div
shr
push
scas
test
inc
sbb
call
cld
pop
and
ret
inc
dec
sbb
jp
in
and
loopne
inc
sub
lahf
or
jo
movs
nop
stos
and
sbb
xchg
mov
xor
sub
sbb
lahf
inc
mov
sbb
repz
es
mov
cmp
mov
loopne
cmp
sub
cli
or
mov
jmp
fsubrp
repz
mov
fwait
stos
(bad)
or
xor
int3
mov
xor
mov
sbb
cdq
test
xor
push
(bad)
jb
xchg
mov
and
shl
cmp
ins
call
cdq
mov
mov
jno
in
sbb
xchg
lods
xor
and
shl
movs
ins
mov
icebp
jo
inc
xchg
cmp
cmp
mov
sub
add
pop
sbb
les
pop
pop
ret
jne
mov
push
xchg
xchg
and
addr16
fwait
xchg
mov
dec
push
loop
xor
xchg
adc
ret
or
mov
pop
cmp
xchg
adc
stc
clc
fs
sbb
cmp
xchg
int3
adc
cdq
pop
(bad)
in
xor
lock
int
sub
inc
test
lds
out
(bad)
mov
xchg
adc
xor
call
das
cwde
stos
add
(bad)
lock
leave
call
out
sbb
mov
xchg
jns
dec
icebp
and
aad
aam
mov
sub
imul
mov
das
jmp
js
cmp
push
(bad)
and
out
outs
sbb
mov
and
popf
jae
inc
not
out
hlt
cdq
or
push
je
push
std
pop
sub
pop
mov
es
es
aam
dec
in
and
test
fcomp
lea
or
cmp
push
and
or
sbb
pop
mov
ror
dec
imul
ss
dec
mov
adc
mov
ja
jbe
mov
xchg
bound
scas
ins
jmp
ins
mov
push
cmp
ror
dec
inc
mov
push
add
popa
pusha
rcr
leave
push
call
(bad)
pusha
retf
jb
scas
push
or
mov
lock
sub
cmp
pop
ds
(bad)
retf
nop
jmp
jmp
popa
(bad)
ss
mov
nop
mov
stc
dec
sub
cld
push
cmp
fsubr
adc
adc
sbb
ret
sub
sbb
cmc
inc
ret
sub
leave
xchg
(bad)
lock
cmc
stos
pop
push
xchg
cmp
arpl
sub
dec
sti
push
jecxz
ja
sti
fmul
xchg
mov
xor
(bad)
and
jmp
imul
xchg
fucomi
mov
sub
pop
push
cmp
in
cmp
enter
retf
add
and
push
retf
(bad)
xor
shr
mov
inc
sar
cmc
mov
leave
lea
inc
pop
mov
arpl
sbb
sbb
ret
imul
or
scas
xchg
inc
and
gs
pop
jb
data16
stc
mov
dec
dec
jmp
ja
test
in
mov
shr
sahf
xchg
inc
xor
daa
jae
stos
inc
call
and
mov
or
xchg
sub
leave
mov
mov
out
jno
add
push
loope
icebp
sbb
jp
sahf
cmp
xor
xor
(bad)
push
sti
or
ins
cmp
xchg
popa
push
into
xchg
mov
bound
ss
pop
repz
sbb
retf
call
sbb
cld
lods
hlt
xor
adc
add
inc
fstp
push
push
and
mov
jno
mov
clc
repnz
cmp
lock
cmp
dec
in
mov
iret
cwde
rol
or
sub
test
push
les
jb
adc
imul
call
dec
cdq
nop
pop
push
pop
or
and
ss
adc
cmp
dec
push
dec
imul
cmp
jmp
mov
xchg
aaa
mov
or
cmp
xchg
mov
popa
mov
sbb
push
data16
xor
(bad)
in
xlat
lods
test
in
retf
mov
jb
jmp
jge
push
sbb
icebp
xlat
mov
fst
pop
jnp
sub
call
int3
mov
push
ja
adc
fistp
in
inc
mov
pop
xchg
mov
dec
test
mov
jmp
shl
inc
jg
inc
mul
in
and
jmp
xchg
iret
jmp
xchg
rcr
sbb
mov
mov
mov
pop
cdq
push
cmp
outs
mov
(bad)
push
scas
pop
fyl2x
les
icebp
fdivp
out
cmc
xchg
cs
ret
fistp
cmps
ds
idiv
jns
daa
pop
jnp
adc
cmp
adc
stos
jp
out
pusha
ins
bound
cmps
or
out
sub
inc
les
mov
cld
inc
sub
xchg
or
call
sbb
cs
pop
pop
shr
mov
jg
imul
adc
or
in
xchg
fbld
xor
lods
add
dec
repnz
cmp
stos
push
call
push
mov
or
lahf
rol
aam
int
mov
lss
mov
and
push
or
mov
mul
mov
jbe
xor
mov
xor
xlat
mov
ret
and
mov
inc
cmps
and
enter
xor
les
daa
add
mov
je
dec
xchg
repnz
push
lods
xchg
je
std
pop
bnd
and
clc
cmp
and
sbb
(bad)
push
add
aad
sub
or
jo
idiv
pop
xchg
or
push
add
es
faddp
mov
adc
sbb
in
mov
or
mov
bound
jmp
jnp
adc
dec
and
push
add
sub
inc
pusha
lods
jo
loop
xor
jmp
mov
xor
inc
and
adc
push
adc
hlt
cmp
mov
pusha
add
jae
ret
mov
or
sahf
fwait
mov
inc
ret
daa
ror
jns
in
pop
call
ja
add
and
jecxz
add
jno
jno
cdq
test
mov
ja
cs
push
(bad)
cli
inc
mov
add
retf
retf
adc
push
add
mov
inc
sub
and
ret
lds
in
jo
mov
pop
test
and
sub
jmp
jb
pop
sbb
hlt
push
push
cmps
ret
sbb
jne
movs
mov
nop
sub
shl
js
dec
cli
inc
sub
popf
xor
dec
cmp
sbb
out
push
and
inc
cmp
mov
mov
out
aam
sar
retf
sbb
sbb
dec
nop
and
nop
movs
dec
fsub
out
and
xor
(bad)
mov
loop
inc
jp
cwde
add
push
int
ret
mov
stos
imul
stos
loope
stos
sbb
xor
lock
rcl
cmp
mov
fild
mov
(bad)
cmps
or
jo
test
lock
daa
cmps
jmp
mov
test
mul
xor
or
aas
mov
cld
adc
jmp
hlt
movs
scas
out
dec
pop
(bad)
xchg
mov
inc
jmp
sub
fsubr
mov
sub
mov
sahf
lds
cwde
enter
fist
pop
rcr
jg
dec
jmp
mov
mov
mov
pop
inc
imul
xor
aad
jp
les
icebp
lds
cdq
lahf
sbb
mov
clc
sub
mov
cmp
outs
or
movs
test
in
dec
test
and
dec
xchg
lods
popf
push
lock
shl
cmp
mov
xchg
mov
xor
loop
add
loope
mov
lods
or
stos
lock
mov
sahf
add
jmp
push
retf
mov
mov
or
adc
push
sbb
test
jmp
std
jnp
test
ss
jnp
dec
arpl
xchg
lds
mov
jp
std
and
stos
in
daa
inc
cmc
jecxz
imul
inc
fisubr
push
mov
sbb
and
cmps
hlt
outs
dec
mov
dec
inc
jb
xchg
fisubr
sbb
inc
mov
mov
(bad)
les
in
sub
or
rcl
daa
in
add
sub
lahf
and
or
xchg
xchg
adc
mov
xlat
test
scas
mov
dec
push
fld
aaa
jg
mov
sub
adc
jmp
fild
retf
xor
push
je
xchg
test
retf
or
stc
rol
jns
mov
fs
in
call
les
rcr
les
jns
cwde
xchg
scas
mov
ins
add
xlat
pushf
dec
add
test
or
jno
or
add
ficom
jp
and
add
shl
and
mov
sub
enter
pop
add
adc
sbb
xor
jl
aaa
jecxz
push
ja
mov
lahf
cmp
mov
ss
repz
pusha
sbb
loope
ret
mov
shr
std
pop
xchg
scas
jae
mov
call
cmp
out
ret
test
sti
add
and
or
xor
xchg
xor
mov
and
and
movs
rol
push
scas
dec
mov
ins
xor
fisub
seto
idiv
nop
out
psubw
sub
mov
cwde
outs
icebp
push
xchg
std
stos
push
push
retf
or
pop
push
mov
(bad)
pop
les
(bad)
imul
inc
rol
and
imul
pop
xchg
or
mov
ss
dec
xor
push
pop
sti
push
fcomp
dec
and
sbb
test
std
ficom
lods
lods
jg
mov
aaa
dec
fs
mov
mov
pop
pop
cld
enter
xchg
jle
(bad)
mov
mov
mov
sub
loope
sti
clc
pusha
pushf
loopne
daa
es
pop
(bad)
adc
xchg
jle
stos
dec
sub
ds
(bad)
movs
pop
xor
retf
das
pop
xchg
inc
add
and
cli
cwde
scas
pop
adc
rcr
pop
fst
mov
pusha
or
int
and
cmc
xchg
sahf
les
mov
push
mov
in
sbb
push
mov
int
aam
mov
pop
mov
(bad)
pop
rcr
xlat
add
repnz
sbb
mov
(bad)
mov
cmp
mov
pop
pop
aas
sahf
movs
or
icebp
test
sti
enter
pop
xlat
lahf
mov
outs
imul
inc
jmp
sbb
ficom
leave
cmp
dec
into
ss
mov
push
sub
and
repnz
sub
xor
sbb
fiadd
fisubr
sub
inc
mov
sub
leave
cld
data16
mov
sub
ss
inc
mov
add
and
dec
jo
xor
push
xor
lods
sbb
ss
add
and
dec
std
movs
sti
or
or
sub
mov
and
mov
cmp
add
dec
and
sub
shl
pop
inc
cmp
iret
movs
in
das
xchg
fsub
out
les
rol
pop
xchg
xchg
mov
lock
cld
setno
cmp
dec
pop
push
mov
xor
xchg
inc
push
mov
data16
das
imul
out
cmps
bound
xchg
mov
daa
jle
mov
mov
jb
mov
or
push
std
dec
jb
mov
pusha
jns
ss
movs
jmp
mov
pop
lea
pushf
mov
je
xchg
push
sar
sub
cwde
mov
mov
popf
dec
add
stos
pop
(bad)
fcmovbe
push
je
push
xchg
xchg
add
sub
push
movs
int
iret
cwde
xor
jmp
clc
cld
sbb
cdq
ins
and
movs
arpl
sar
sbb
lods
xchg
inc
movs
xchg
int3
lds
sbb
data16
adc
pop
dec
rcr
xor
in
cdq
ins
pushf
shl
movs
(bad)
cld
cli
mov
call
into
outs
inc
ds
shl
cld
pop
cld
cmc
(bad)
sti
leave
xor
jmp
dec
xchg
push
lea
std
sbb
jae
or
push
mov
pop
mov
mov
push
push
mov
inc
push
push
test
gs
mov
mov
adc
pusha
add
stc
xor
cmp
inc
mov
cmp
imul
loopne
add
cmp
push
jnp
xor
test
test
aaa
outs
pop
push
fst
push
xchg
xor
push
lds
ss
and
mov
cdq
mov
and
(bad)
mov
aam
jl
movs
inc
mov
adc
int
fidivr
mov
lahf
sub
inc
xchg
cmps
ds
call
xchg
xor
ror
shrd
rol
jp
mov
xlat
sub
int
xchg
aad
mov
fld
dec
mov
movs
mov
popf
int3
adc
hlt
shr
sbb
pop
mov
sbb
(bad)
pop
pop
fucomi
(bad)
adc
loop
push
sbb
pop
inc
jbe
cwde
jp
dec
je
push
lock
pop
jmp
sbb
addr16
mov
cmps
ss
xor
mov
mov
xlat
(bad)
(bad)
(bad)
in
push
jg
mov
fidivr
jns
lock
leave
ficomp
and
sbb
cmp
imul
push
test
out
fldenv
cmc
lods
test
pop
jg
fcompp
pop
jecxz
stos
cmpxchg
pop
pop
jo
fwait
jmp
ins
cmp
cmc
and
mov
call
push
or
enter
mov
data16
or
inc
dec
mov
aad
xchg
pusha
xchg
jno
cdq
sar
stos
xchg
xor
(bad)
stc
pop
ret
xchg
add
sub
dec
xor
jno
pop
js
dec
lock
mov
sbb
mov
dec
imul
shl
dec
dec
lods
mov
sub
cmp
xor
jg
jnp
outs
add
loopne
les
scas
pop
fcmovb
pop
add
sbb
fdiv
jl
pop
je
sar
inc
gs
add
inc
push
dec
imul
cmp
jge
int3
and
or
push
stc
mov
sub
xor
mov
jns
jecxz
out
cmp
call
mov
fcom
and
test
jp
rcr
das
lods
loopne
xchg
jae
cmp
add
mov
push
test
repnz
cmp
push
sbb
xor
lea
pop
sahf
mov
aaa
out
adc
addr16
jmp
pop
neg
pop
sbb
retf
ins
xlat
push
imul
rol
scas
xchg
les
push
push
mov
(bad)
push
cmps
nop
dec
mov
(bad)
je
call
fst
dec
shl
jbe
xchg
mov
dec
in
jno
(bad)
mov
mov
nop
mov
push
dec
xchg
loope
dec
cs
jmp
xor
mov
add
aas
adc
cmp
and
xor
(bad)
mov
int3
inc
inc
mov
push
and
mov
cli
jne
xor
push
xor
push
dec
pop
ror
dec
and
lods
pop
adc
push
and
mov
aam
or
mov
mov
call
ins
fldenv
mov
not
mul
jg
ins
arpl
je
mov
jb
jmp
xor
scas
cmps
je
jb
int3
out
ret
cwde
pushf
push
cmp
lock
ror
cmps
scas
push
sbb
imul
pop
dec
(bad)
pop
jl
jae
or
icebp
cld
jnp
mov
outs
jne
mov
and
mov
xor
(bad)
retf
sbb
jle
dec
sbb
xlat
jl
dec
add
mov
push
fidiv
or
in
icebp
cli
pop
dec
xor
push
push
mov
jmp
cmp
and
jecxz
xor
jns
imul
mov
jmp
repz
sbb
popa
cmps
(bad)
das
(bad)
jmp
xor
rol
movs
leave
stos
pop
adc
mov
aam
jns
push
loope
mov
pushw
jmp
sahf
fstp
lods
and
pop
sbb
push
or
sub
push
mov
sahf
pushf
push
call
stos
push
xor
sbb
xor
aas
mov
clc
mov
jnp
xor
mov
pop
fistp
aas
push
mov
jo
test
sub
mov
out
and
(bad)
xchg
adc
stos
in
xor
mov
call
mov
cmp
push
movs
call
sti
sbb
sub
or
rol
fcom
dec
sti
shr
pop
adc
fcmovu
inc
outs
imul
fwait
stos
sbb
and
adc
(bad)
in
mov
adc
mov
cmp
add
pop
nop
enter
retf
mov
stos
dec
xchg
out
out
inc
dec
dec
ds
(bad)
loopne
pop
aam
mov
popa
enter
icebp
xor
sar
dec
jl
inc
add
mov
not
sbb
xor
(bad)
add
adc
jb
hlt
push
loope
fsubr
sbb
and
out
push
jmp
sub
sbb
cmps
or
cmp
xor
fnstenv
xchg
push
and
cmp
retf
inc
fstp
inc
mov
mov
out
dec
inc
push
adc
push
push
arpl
and
and
loope
stos
or
xchg
rol
ret
gs
jae
cmp
cdq
pushf
mov
xchg
mov
dec
cmp
xchg
mov
cli
fwait
sub
ja
xchg
gs
fbstp
and
ins
dec
or
int
int3
cld
adc
hlt
jl
xchg
dec
inc
cdq
je
sub
daa
push
in
repnz
dec
mov
mov
adc
(bad)
dec
inc
sbb
cwde
bound
sub
ret
adc
fwait
dec
inc
push
dec
ins
cs
push
or
test
fist
into
shl
popa
sub
mov
pop
dec
adc
pop
daa
sti
es
mov
shl
mov
arpl
mov
nop
or
and
stos
arpl
pop
repz
xor
dec
mov
int
in
or
fst
xor
inc
imul
aad
push
sbb
ss
das
dec
cmps
aas
mov
push
pop
inc
push
dec
sbb
sbb
scas
fsubr
out
push
fcmovbe
jmp
popf
pusha
ret
ins
outs
adc
or
pop
sub
sbb
(bad)
cwde
js
mov
or
and
fnstenv
mov
push
mov
push
and
cdq
dec
lea
push
mov
iret
test
push
shr
lods
xor
lock
or
adc
jle
xchg
mov
in
mov
and
sbb
jnp
dec
movs
fidivr
loop
push
xor
jmp
fsubr
mov
loope
add
ja
and
addr16
out
fistp
mov
in
push
(bad)
jl
dec
dec
ret
out
pop
aaa
clc
(bad)
push
(bad)
pushf
push
and
movs
xlat
lods
in
jl
push
loope
retf
sbb
mov
jmp
mov
add
add
repnz
or
sahf
sbb
mov
xchg
mov
in
or
pop
pushf
mov
cmp
into
adc
call
push
and
pop
xchg
mov
lahf
xor
jb
pop
sub
or
jmp
addr16
pop
(bad)
push
(bad)
mov
jl
lock
jnp
retf
dec
jecxz
xchg
pop
(bad)
sbb
das
es
into
pop
out
mov
call
data16
aaa
mov
jnp
mov
jg
jae
imul
mov
test
pop
bound
mov
(bad)
loopne
call
push
sbb
clc
sub
mov
ret
push
push
js
sahf
push
xchg
loope
std
sbb
dec
ins
in
cmp
cmps
stos
pop
dec
inc
cmps
pusha
mov
jb
pop
loope
push
call
sub
fidiv
leave
jo
out
mov
adc
jbe
into
and
sar
and
pop
fcmovu
mov
sbb
jbe
loop
push
cmp
and
ficomp
adc
pop
sti
mov
in
or
or
jae
lods
dec
popa
xchg
mov
jb
or
test
cmp
sub
mov
mov
mov
pusha
cmps
push
mov
cmps
call
or
inc
cmps
adc
aaa
pop
jle
cmp
sar
pop
jo
xchg
int3
sub
div
sub
movs
sahf
adc
pop
popf
inc
outs
xchg
xchg
lods
mov
pop
cmp
int
mov
push
popa
sbb
repnz
nop
into
inc
xlat
movs
jb
movs
push
sub
jl
add
call
repnz
(bad)
in
test
xchg
xchg
jno
dec
inc
repnz
lea
das
clts
je
jp
cmova
fs
inc
push
inc
sub
sbb
int3
pop
imul
into
lds
rol
sbb
test
fist
lods
xchg
mov
pop
in
mov
sbb
daa
push
jb
and
dec
(bad)
cld
inc
bound
dec
jg
outs
fldcw
movs
jge
sub
test
sbb
add
gs
cmps
pop
jecxz
mov
mov
enter
das
hlt
mov
mov
test
fmul
sbb
test
pop
jge
das
push
jne
xchg
or
neg
lahf
jl
arpl
scas
pop
rcl
cld
cmps
retf
ror
hlt
jmp
push
(bad)
cld
stos
fldcw
sbb
sub
ins
pusha
dec
mov
pop
or
pusha
cwde
clc
dec
mov
gs
imul
pop
mov
cmova
aaa
mov
pusha
push
fistp
pop
mov
cmp
jbe
jg
inc
or
nop
in
dec
out
loop
cli
data16
sbb
jbe
cmps
push
inc
push
lahf
retf
push
mov
sbb
and
scas
mov
mov
sub
dec
pop
call
ja
jne
test
or
lock
loop
adc
mov
ins
loop
call
(bad)
ss
scas
pop
hlt
xchg
jmp
das
call
retf
imul
mov
fidivr
loop
call
or
mov
sub
fild
test
neg
movs
fistp
xchg
mov
jne
lahf
cs
dec
mov
into
mov
cdq
cmp
call
and
add
pop
inc
aaa
jbe
ja
and
mov
ja
xchg
ficomp
inc
jae
mov
bound
pusha
cli
call
fst
mov
sar
mov
fstp
jmp
jle
jns
sti
(bad)
repnz
cmp
mov
test
ins
mov
aad
pop
pusha
push
icebp
icebp
cld
std
dec
movs
in
fld
(bad)
jmp
xlat
adc
fwait
mov
fstp
outs
lods
or
imul
cwde
fisub
jns
or
repnz
push
sahf
aam
lds
sar
xor
aam
jg
mov
dec
lods
aaa
fbld
push
leave
jne
cmp
ins
add
into
pop
(bad)
fucomp
push
pop
mov
verr
jbe
loopne
add
rcr
sub
add
cdq
gs
fisub
cld
mov
mov
and
xor
(bad)
icebp
push
or
xlat
aaa
aad
in
stos
loop
fimul
arpl
cmp
addr16
rol
sbb
adc
xchg
xchg
test
or
push
scas
loop
jmp
and
pop
cmps
cmp
stc
clc
out
cmc
push
jbe
cmp
push
inc
loop
mov
aam
test
retf
scas
nop
adc
sub
into
xor
test
mov
push
jecxz
add
sub
shr
ret
mov
dec
scas
loop
bound
mov
mov
jecxz
int
xchg
inc
or
or
leave
push
in
int3
and
mov
(bad)
das
pop
add
push
xchg
adc
(bad)
jg
cmp
push
daa
inc
sbb
xor
add
dec
shr
rcl
cmc
and
rcl
mov
(bad)
cli
in
pop
sub
int3
test
neg
xchg
dec
shl
cmp
and
add
leave
mov
xchg
or
in
xchg
push
xor
jle
test
(bad)
(bad)
jmp
add
les
ds
pop
jmp
cmp
xchg
test
push
inc
shr
loop
cmc
or
inc
dec
ins
pop
mov
add
div
inc
pop
adc
sbb
shl
or
add
sub
addr16
iret
xor
je
cs
add
xchg
sub
out
xor
ja
or
ins
push
pop
push
add
jmp
xor
dec
inc
jno
mov
cmp
fwait
mov
out
jnp
stos
adc
sahf
pop
xor
rcr
inc
dec
popa
aam
clc
mov
or
add
pop
pop
aam
scas
sub
xlat
gs
inc
xchg
imul
scas
sbb
fcomp
mov
das
icebp
lock
mov
sti
inc
mov
(bad)
adc
inc
(bad)
repnz
das
popf
neg
push
push
div
dec
and
mov
jecxz
sub
fbstp
pop
mul
cdq
call
mov
lock
pop
pop
push
repz
or
adc
scas
xchg
mov
(bad)
fld
outs
scas
jmp
pop
xlat
cdq
mov
lock
inc
(bad)
cmc
loop
pushf
and
(bad)
out
int3
in
add
inc
int3
lods
dec
push
imul
cmp
cmps
clc
out
xchg
jl
pop
adc
cmps
out
das
ja
jl
hlt
xchg
out
out
pop
hlt
int
cmp
mov
icebp
inc
retf
jae
pop
retf
sub
mov
(bad)
not
cli
mov
test
sbb
enter
fs
inc
mov
push
mov
xor
dec
iret
outs
jbe
add
stos
into
cmps
and
loop
cmp
mov
add
pop
xor
jmp
xor
jbe
xchg
or
ins
mov
push
push
adc
outs
cmps
mov
sahf
arpl
cmp
and
cmp
data16
jae
cwde
fdiv
mov
cmp
xor
dec
mov
mov
push
sub
(bad)
add
mov
mov
xlat
out
mov
and
lar
or
pop
push
es
sti
mov
cli
cmps
mov
hlt
cmp
xchg
mov
in
out
out
dec
retf
stc
out
mov
pop
je
sbb
lods
xchg
xchg
int3
pop
dec
push
(bad)
in
(bad)
adc
pop
mov
xchg
shl
retf
dec
lahf
push
out
push
jb
in
mov
(bad)
pop
in
aaa
mov
pop
fs
jbe
daa
pop
push
sbb
pushf
and
push
dec
fmul
les
pop
xchg
xor
mov
push
sub
lock
jns
gs
and
shr
retf
xlat
imul
jmp
mov
rcl
outs
js
push
dec
push
mov
ror
addr16
and
mov
sti
add
call
inc
sbb
push
mov
mov
xchg
inc
int3
adc
push
pop
mov
xchg
enter
cwde
test
loope
js
(bad)
jmp
cmps
ins
test
push
or
mov
mov
shl
xchg
mov
vandps
test
mov
cmp
cmp
dec
xchg
push
int
mov
xchg
xor
pop
js
mov
inc
push
inc
sbb
lahf
cmp
sbb
imul
and
jle
push
(bad)
dec
sbb
mov
inc
adc
pop
sbb
mov
adc
xchg
pop
mov
int3
sbb
retf
movs
test
nop
test
push
jns
cs
xor
or
sti
sub
or
fs
call
xor
xchg
xor
jecxz
jle
loope
arpl
xor
adc
data16
and
jmp
leave
inc
dec
add
fidivr
push
repnz
cmps
out
rol
(bad)
mov
jnp
xchg
mov
cmps
inc
stc
or
add
sub
dec
fucomip
or
sub
cmp
push
fwait
mov
pop
retf
jl
xor
push
leave
mov
popa
aam
lea
xchg
jge
mov
aaa
lods
ins
jl
dec
repnz
push
push
fcomp
out
push
iret
lahf
fdivp
mov
dec
cli
lods
arpl
mov
push
jge
inc
repz
jbe
jl
mov
aas
fcmovu
test
cmc
mov
rol
xlat
lea
cmp
sbb
mov
or
outs
sbb
or
lds
sti
pop
fistp
lock
cmp
inc
push
mov
repnz
mov
ret
add
push
mov
(bad)
aad
in
xlat
mov
mov
push
je
(bad)
lahf
ficom
je
div
xor
loope
(bad)
aas
(bad)
cld
xchg
push
cli
lds
pop
mov
jmp
pushf
jle
pop
(bad)
call
ins
movs
mov
inc
add
dec
leave
rcr
xor
adc
(bad)
pop
xchg
adc
dec
test
dec
add
aad
fist
dec
movs
mov
int3
fcmovb
inc
and
mov
(bad)
dec
add
mov
aam
retf
jmp
loope
inc
test
inc
shr
aam
movs
cmp
rcl
popf
cmp
ja
jb
push
mov
outs
mov
(bad)
repz
sub
push
mov
push
push
xchg
sub
sbb
cli
push
sub
jge
test
scas
and
test
stos
lods
push
xchg
sti
mov
icebp
cmp
pushf
loope
int
dec
mov
arpl
dec
push
add
(bad)
push
add
int3
je
clc
or
fstp
daa
bound
xor
fisubr
cmc
xor
js
jge
iret
sub
pop
jns
addr16
out
jo
test
fisubr
sbb
pop
pushf
fild
jmp
ret
lds
pop
shr
cs
xor
or
dec
out
aam
(bad)
adc
add
je
aas
and
or
in
mov
pop
test
leave
inc
int3
lea
jno
into
clc
mov
mov
cmp
outs
test
cmp
push
push
and
push
jae
mov
mov
jmp
pop
mov
jmp
dec
adc
mov
(bad)
cld
cld
push
(bad)
mov
imul
push
lahf
sub
sbb
sub
pop
dec
(bad)
int
mov
adc
adc
out
repnz
or
cmps
cmp
xor
ror
adc
repnz
in
rol
in
inc
jnp
xchg
out
or
movd
pop
cwde
xor
sbb
inc
ds
xor
mov
sti
lds
jb
push
ins
dec
add
sbb
ins
aam
push
test
cmp
popa
xchg
ins
xor
cmps
sub
call
int
(bad)
mov
push
shl
and
pop
in
call
cmps
xor
xchg
xchg
push
push
cmp
dec
add
or
ss
test
mov
pop
and
sub
inc
dec
push
mov
xor
mov
cmp
dec
and
fnstenv
pop
in
into
push
addr16
(bad)
into
imul
cwde
mov
bound
ins
mov
into
adc
adc
jne
jg
out
mov
pop
btc
mov
jg
jae
ror
pop
jae
ds
sahf
sbb
mov
hlt
(bad)
loopne
mov
(bad)
sti
rcr
int3
cmp
std
cld
out
fdiv
sbb
out
(bad)
mov
addr16
jle
ja
addr16
aad
ins
pop
jmp
inc
cmps
hlt
retf
inc
mov
das
leave
cmp
xor
pop
loop
add
lods
add
or
dec
inc
mov
inc
in
mov
clc
pop
cmps
mov
fcom
repz
pop
dec
std
repz
(bad)
mov
inc
out
out
push
(bad)
xchg
(bad)
mov
jmp
std
mov
push
jmp
lahf
(bad)
test
mov
pop
pop
cld
aam
div
lods
imul
ins
mov
shl
imul
cli
jae
or
pop
fstp
ja
mov
(bad)
fst
out
imul
int3
pop
in
stos
inc
add
mov
(bad)
pop
push
lock
dec
leave
nop
fs
mov
or
push
mov
stc
rol
arpl
fmul
xor
and
in
arpl
bound
dec
mov
aam
lds
pop
mov
cmp
xchg
das
xchg
sub
pop
movs
test
movs
cwde
scas
inc
frstor
ins
push
or
imul
add
or
aad
push
ins
pop
dec
sub
repnz
push
out
adc
add
sub
mov
or
stos
in
stc
sub
xor
(bad)
pop
gs
cmps
lods
sbb
mov
sahf
and
movs
sbb
dec
inc
lock
push
out
or
fild
ins
jmp
xchg
and
gs
aam
push
cmp
dec
fldenv
pop
jae
mov
mov
xchg
dec
push
pop
data16
call
pop
clc
scas
repz
ja
mov
mov
call
dec
cmp
dec
mov
or
xor
lea
dec
lea
(bad)
xchg
ror
aam
mov
mov
test
and
xor
jl
ins
jae
retf
fsub
xor
lahf
push
fimul
jmp
inc
sbb
and
inc
or
fwait
cmp
mov
cmp
xlat
fwait
je
or
gs
(bad)
rcr
shr
mov
rol
xchg
pop
sub
mov
les
ror
(bad)
jno
sub
or
dec
adc
jp
cmps
pop
jecxz
ret
and
dec
sbb
mov
inc
jle
mov
xor
std
xchg
inc
sbb
cmp
retf
shr
stos
lahf
in
mov
sub
adc
cmp
call
sahf
bswap
cwde
hlt
push
push
mov
out
popf
sahf
ror
jb
(bad)
shl
xlat
in
imul
pop
add
sbb
in
in
cmp
dec
cmp
loopne
nop
popa
or
int3
or
add
xchg
lock
ror
es
or
retf
jbe
inc
adc
das
sub
stos
outs
lock
adc
sbb
(bad)
xchg
stos
repnz
je
xchg
addr16
cmp
xor
xor
arpl
mov
addr16
sub
push
dec
sbb
adc
je
ins
scas
push
iret
stos
push
iret
pop
sbb
jl
and
inc
stc
xor
lahf
jnp
iret
fdivr
fwait
out
mov
out
lds
push
fdiv
(bad)
out
jle
jnp
xchg
fwait
mov
xor
mov
xchg
cmp
fdecstp
int
ins
(bad)
jp
sar
aas
jnp
fwait
cmps
mov
jns
ret
out
(bad)
jle
dec
out
adc
pop
pop
push
sti
mov
aad
mov
repnz
mov
in
mov
sbb
(bad)
jecxz
fild
pop
jmp
cmp
out
iret
push
sti
leave
jns
push
xlat
aas
in
outs
cld
into
cmp
mov
push
mov
jmp
scas
stc
ror
cli
int3
mov
dec
rol
sahf
js
dec
icebp
and
repz
idiv
test
xchg
ja
xchg
xlat
clc
cld
rol
addr16
not
jns
jmp
psadbw
mov
mov
and
or
sub
loop
cwde
push
sar
retf
cmp
sub
mov
push
icebp
out
shl
mov
mov
sub
(bad)
xor
popf
retf
aad
nop
aaa
movs
or
ret
pop
mov
icebp
es
xchg
push
cmps
sub
fldcw
mov
clc
sub
push
xchg
clc
cwde
dec
jle
into
cld
xchg
xchg
jns
xchg
jp
pop
mov
popa
push
rcr
stos
and
ficomp
push
stos
fsub
frstor
fwait
pushf
jo
adc
and
cmps
sub
movlps
ror
dec
pop
adc
aas
ins
outs
das
mov
adc
je
mov
jecxz
fsub
sub
pandn
jae
push
out
dec
popa
sub
mov
xchg
fsub
dec
into
xchg
out
dec
or
mov
fwait
lahf
or
loope
jmp
iret
mov
int3
hlt
jo
lds
push
pop
movs
sti
sub
aam
call
or
and
dec
addr16
cs
aad
out
movs
jb
data16
mov
sbb
inc
push
push
push
out
inc
retf
add
adc
push
add
js
popaw
fdiv
pop
cmp
or
rcr
inc
cdq
or
mov
shl
cmp
push
mov
arpl
push
xor
cmp
jmp
jmp
int
mov
add
mov
inc
xchg
dec
pushf
xchg
fnstenv
int3
addr16
mov
xor
dec
iret
inc
and
add
cmp
mov
cld
jb
pop
xor
mov
das
inc
sub
adc
jo
jae
cmp
push
nop
pop
int
lahf
add
add
sbb
aad
inc
sub
int
dec
bound
xor
jp
aam
cld
test
xor
ret
iret
mov
aad
xor
repz
stos
pop
xchg
out
cmc
add
sahf
clc
jne
xchg
cdq
mov
retf
push
or
daa
mov
bound
cmps
pop
cmps
add
mov
cmp
or
or
arpl
outs
sub
inc
arpl
sbb
cdq
mov
retf
xchg
into
fidiv
cli
(bad)
push
pop
popf
cdq
mov
retf
sti
xchg
pop
(bad)
xlat
out
stos
aaa
sbb
(bad)
loopne
xor
ins
ins
sti
clc
into
fidiv
ins
test
pop
xor
test
into
cmp
cmp
aas
fcmovnu
repnz
call
pop
clc
cld
(bad)
call
loop
pcmpeqb
outs
ret
aas
push
jmp
mov
iret
xlat
(bad)
out
jmp
push
ret
mov
dec
fstp
mov
add
out
out
int
ficomp
shr
ret
mov
call
jg
jne
aas
scas
pop
push
mov
(bad)
in
mov
fist
cld
call
push
jg
push
jl
outs
retf
pop
in
test
loop
cld
pop
(bad)
in
je
loope
aaa
aad
jb
int
scas
sub
add
jmp
imul
ja
mov
mov
push
outs
js
xchg
push
cld
call
mov
not
sti
mov
ins
sub
or
dec
jno
int
lods
test
jg
sub
pop
push
daa
enter
(bad)
adc
test
push
or
sub
jo
pop
loopne
pop
push
out
cmps
cli
cs
push
dec
jb
and
icebp
nop
cdq
shl
es
clc
aas
xor
mov
xchg
leave
inc
push
sub
das
fstp
gs
push
ss
int
fisubr
push
xchg
mov
mov
sub
jp
jns
retf
lds
ret
pop
ins
mov
cmps
jo
cli
and
jne
cmp
(bad)
(bad)
(bad)
lods
in
xchg
fisub
lea
imul
out
xor
inc
ins
dec
hlt
inc
mov
shr
cmp
arpl
adc
aas
cmp
inc
outs
shr
cmps
push
add
dec
mov
hlt
mov
push
popa
cvtpi2ps
xlat
add
sub
into
lods
mov
std
call
cmp
(bad)
shl
cwde
push
mov
ficom
fs
mov
rcl
ret
push
mov
scas
dec
push
stos
xchg
shl
fsubr
and
sub
pop
femms
retf
inc
repz
sub
xchg
sbb
mov
icebp
mov
int
push
xor
cmps
pusha
popf
xchg
rol
xchg
xchg
int
cld
scas
xor
inc
cdq
cli
je
cs
jbe
push
movs
test
cmps
ss
inc
cmps
popa
dec
and
mov
gs
out
call
leave
out
dec
retf
and
xchg
leave
push
js
ins
mov
in
mov
add
sub
clc
xor
(bad)
stc
xlat
je
push
jle
mov
mov
aaa
push
xchg
dec
and
inc
test
pcmpgtw
out
imul
mov
sub
repz
mov
pop
sub
(bad)
(bad)
fistp
jl
xchg
jle
or
jge
or
sbb
push
pushf
push
mov
aas
adc
sub
add
xchg
or
data16
(bad)
pusha
and
jle
(bad)
pop
retf
cdq
adc
out
ret
dec
cmp
dec
sub
adc
jne
and
arpl
inc
lahf
jl
arpl
mov
inc
adc
mov
sub
mul
and
or
movs
test
hlt
push
and
mov
addr16
fstp
xor
out
pop
pop
jnp
fidivr
aaa
in
pop
pushf
or
mov
inc
lods
ror
out
pop
call
mov
mul
outs
pop
in
dec
repz
into
fnsave
jg
iret
into
das
sahf
cmp
pop
je
das
outs
cld
cld
jmp
sub
cld
cli
shr
pop
aaa
std
lods
stos
inc
jg
mov
inc
sbb
mov
or
lahf
mov
or
jge
mov
dec
(bad)
mov
push
shl
push
jmp
sub
clc
pusha
repnz
adc
sbb
(bad)
out
pop
pop
cld
mov
mov
mov
in
push
sub
jge
xchg
(bad)
pop
pop
fsincos
scas
push
or
fild
(bad)
jge
fdiv
out
clc
mov
inc
jmp
in
outs
stc
repnz
mov
fistp
mov
std
arpl
out
cdq
lock
xor
(bad)
popf
xchg
dec
outs
pop
dec
mov
fstp
cmp
bound
popa
xchg
ja
xchg
ja
inc
inc
bound
mov
and
fstp
or
vmptrst
mov
mov
aaa
xor
sbb
pop
xor
push
pop
or
sub
clc
or
pop
ficom
mov
rol
lods
fild
jmp
xor
aam
push
mov
movs
daa
jge
pminsw
push
push
mov
push
jg
xchg
fsub
iret
mov
pop
push
in
add
stos
lock
mov
fidiv
scas
data16
ins
push
push
mov
push
lods
push
ds
sti
jb
ret
pop
sar
sub
bound
add
sub
imul
ins
scas
mov
hlt
adc
add
clc
xor
mov
loop
push
mov
ret
mov
stos
adc
push
sub
and
dec
lahf
aaa
ret
adc
cmp
dec
daa
mov
iret
or
mov
cdq
jb
mov
mov
mov
or
and
jp
adc
and
xchg
mov
jmp
adc
and
lds
pushf
(bad)
xchg
mov
pusha
fmul
inc
jne
sub
adc
push
in
mov
cmc
inc
mov
cmp
push
dec
push
jmp
adc
mov
dec
fnstcw
push
cdq
sbb
sbb
xor
rol
dec
pop
arpl
cmp
xchg
lea
stos
int
retf
into
aaa
mov
or
xchg
loop
pop
mov
dec
xchg
mov
inc
aad
int3
test
xor
aam
mov
loopne
into
cli
inc
mov
xor
fs
sub
pop
cmps
test
lods
sbb
mov
adc
sbb
cli
cld
push
retf
dec
jbe
das
bswap
mov
pop
in
dec
inc
pop
sub
out
xor
xchg
arpl
rol
push
or
xor
outs
or
mov
(bad)
js
mov
mov
mov
test
sub
ins
or
cmp
stos
inc
outs
iret
aad
sub
pop
popa
jbe
jp
dec
pop
adc
dec
mov
lods
adc
inc
nop
add
std
and
sub
add
loope
jo
outs
leave
cmp
push
or
or
jecxz
lds
adc
adc
jmp
imul
sub
out
cs
add
call
pop
mov
sub
ins
clc
(bad)
out
scas
xlat
mov
(bad)
call
jge
dec
scas
pop
div
push
clc
hlt
repnz
mov
jae
push
mov
aad
(bad)
jae
jle
int
(bad)
cs
stc
(bad)
jae
mov
lahf
(bad)
clc
test
lahf
fst
and
inc
sub
jmp
call
std
mov
int
push
hlt
add
mov
pop
mov
aad
data16
mov
outs
pushf
jp
xchg
(bad)
jle
rcl
dec
cld
out
ret
push
iret
aas
pop
fdiv
outs
xchg
cmc
call
adc
sar
pop
cmp
mov
loope
fucomi
(bad)
je
in
pop
ss
jle
jae
cmps
ss
(bad)
mov
add
stc
ins
ret
(bad)
stc
in
rol
jecxz
sbb
addr16
addr16
addr16
sub
sub
or
adc
dec
mov
call
call
sbb
sar
mov
mov
or
jo
inc
push
xor
adc
ror
ss
sub
adc
pop
pop
dec
sub
xchg
(bad)
dec
je
sub
sbb
out
int
mov
int3
int
sbb
imul
dec
mov
jbe
mov
mov
pop
in
xor
adc
mov
pop
cmp
or
mov
sub
add
jmp
ins
scas
mov
imul
repnz
mov
mov
clc
jne
repnz
adc
stc
mov
ret
xor
clc
or
pop
push
jns
scas
xlat
dec
in
iret
mov
jmp
aam
xchg
jne
ss
scas
call
xchg
push
daa
pop
mov
in
push
push
cdq
dec
mov
sub
ins
push
rcr
push
push
stos
xchg
sbb
xchg
stos
fidivr
retf
mov
cmps
gs
call
in
stos
push
adc
lea
das
sbb
mov
push
push
adc
cmps
and
popa
jmp
aad
je
xchg
xchg
cmp
test
mov
jno
in
jp
add
cmps
pop
jno
and
dec
xor
xor
cwde
add
outs
push
scas
int3
pop
out
jmp
rcr
sub
ds
dec
cli
loop
or
mov
(bad)
dec
inc
shl
pop
and
cs
push
xchg
stos
test
sub
repnz
or
jle
pop
xchg
sbb
imul
xlat
adc
dec
xor
add
and
and
pop
xchg
dec
jne
push
and
pop
std
xor
mov
ret
retf
stc
pop
sub
push
sar
pop
xor
es
pusha
xor
sti
jb
je
test
inc
xchg
xchg
loop
push
loope
sub
cwde
xchg
pushf
in
xchg
jg
mov
inc
(bad)
mov
rol
bound
jns
(bad)
push
aam
(bad)
scas
stc
es
sub
adc
lahf
push
and
idiv
jns
xlat
dec
fistp
sub
imul
xchg
mov
jns
arpl
ss
xchg
cmps
or
jb
add
int3
mov
cmc
nop
(bad)
add
sbb
jno
(bad)
repnz
es
rcl
not
and
add
es
neg
xchg
es
pop
mov
push
clc
add
xor
push
sub
je
mov
sti
xchg
jb
pop
lahf
mov
shl
pop
mov
dec
pop
push
dec
pushfw
(bad)
stc
jo
ds
pop
cmp
scas
mov
out
mov
jns
not
cmp
push
fwait
push
cmp
xchg
cmps
in
addr16
jne
loope
xchg
test
scas
stos
mov
sbb
out
(bad)
xchg
popf
lods
lahf
fst
in
xchg
stc
add
(bad)
(bad)
cmp
iret
dec
imul
add
aas
mov
mov
not
dec
(bad)
jecxz
cmp
cmp
push
jecxz
ss
push
leave
jl
gs
mov
adc
cmp
inc
int3
imul
pop
pop
repz
loopne
daa
inc
mov
pushf
test
jmp
(bad)
push
cmp
in
cmps
aad
ja
std
(bad)
imul
jae
fmul
xchg
aas
jns
call
mov
mov
or
cmps
jg
mov
cli
loope
scas
outs
lahf
sar
mov
sbb
mov
std
in
(bad)
(bad)
lods
ins
jl
je
sub
push
loopne
aas
mov
rol
sbb
mov
inc
cli
sar
add
cmps
mov
movs
and
ret
or
int
loope
cli
push
popa
push
shr
ins
scas
add
(bad)
pop
out
sub
and
mov
mov
loopne
inc
add
dec
or
sub
mov
mov
out
xchg
out
xchg
stos
out
fnstenv
xchg
mov
push
mov
push
inc
sbb
dec
imul
fisttp
xchg
fisttp
mov
loopne
xor
mov
adc
mov
mov
in
pop
js
test
ret
ror
idiv
push
arpl
es
jno
addr16
je
push
sub
push
pop
mov
xchg
movs
test
inc
sub
(bad)
not
shl
mov
dec
shr
sub
or
out
mov
jne
cs
mov
lea
mov
sub
mov
push
xor
inc
and
out
mov
iret
add
xchg
mov
movs
fmul
cwde
mov
in
(bad)
mov
mov
cli
(bad)
or
int
scas
mov
mov
lock
add
pushf
out
test
xor
leave
jmp
mov
sbb
or
push
les
push
add
mov
sub
sub
jmp
jne
ret
mov
mov
jmp
and
push
push
sbb
loope
popa
js
push
xchg
adc
adc
xor
add
sub
add
mov
xor
loopne
int3
cmp
cmps
bound
and
push
mov
dec
rcr
pop
inc
mov
ss
jb
popa
in
movs
mov
push
mov
test
repz
pusha
dec
scas
push
jbe
fldcw
dec
(bad)
xor
push
dec
mov
fwait
aad
mov
cmps
adc
inc
sbb
xchg
test
movs
push
or
loope
das
or
sub
loop
mov
cmp
mov
mov
mov
es
mov
push
arpl
cmp
arpl
xor
xabort
sbb
and
push
sub
pop
push
cmp
call
popf
sbb
mov
mov
scas
in
inc
das
rol
xor
push
add
popa
test
xchg
ins
mov
mov
mov
and
fist
pop
xor
fstp
pushf
mov
jno
cmp
out
xchg
jbe
cmps
popf
ins
dec
ja
int3
push
xchg
jne
jmp
icebp
(bad)
hlt
sub
aaa
cmp
mov
jns
fimul
loopne
mov
outs
push
cmc
ds
sub
mov
fwait
aas
mov
loope
addr16
lock
loop
lahf
into
out
adc
aas
fdivr
mov
mov
retf
dec
icebp
and
repz
jl
inc
fstp
push
std
jmp
xlat
mov
es
mov
mov
imul
popf
stc
lahf
pop
xlat
std
in
mov
jae
int3
into
fnsave
xor
retf
cwde
sahf
mov
dec
cld
xlat
aad
aas
jle
lock
ja
daa
push
mov
out
mov
pop
div
inc
pop
aas
lods
stc
das
mov
call
mul
stc
mov
bound
lock
jmp
xchg
es
mov
lea
pop
push
sub
loop
loop
jge
out
adc
sub
lods
leave
test
clc
retf
call
ins
inc
ins
mov
adc
push
inc
mov
les
arpl
popf
xchg
xor
pushf
push
sbb
ins
leave
retf
xor
in
xchg
shl
mov
mov
cmp
and
jb
cld
jb
fisub
out
push
hlt
xchg
sub
and
jp
int3
mov
rol
mov
(bad)
mov
test
mov
xlat
sub
repnz
jo
adc
(bad)
pop
jmp
ficomp
cmp
mov
cli
rcr
push
cs
inc
lahf
xchg
test
inc
inc
popf
xor
cmps
div
cmp
lods
xor
clc
addr16
jb
popa
aaa
mov
xchg
cmp
sub
pop
stc
(bad)
stos
hlt
lods
sub
test
aad
sbb
jo
dec
inc
cld
and
in
scas
mov
jo
jnp
push
adc
inc
test
call
pop
sub
xor
cmc
sub
mov
push
pushf
int3
retf
dec
imul
and
jmp
std
sbb
imul
int
mov
mov
xor
or
push
bound
in
dec
ror
pop
adc
cmp
ficomp
(bad)
call
jae
dec
cli
sbb
pop
sbb
adc
dec
sub
push
out
bound
cs
push
cwde
out
(bad)
xlat
aad
test
enter
in
mov
movs
pop
push
and
add
mov
in
jne
rol
pusha
mov
mov
xor
or
xchg
cld
push
repnz
mov
rcl
xchg
shr
and
push
into
mov
adc
adc
popa
add
xor
rcr
pop
sbb
jne
and
mov
fwait
pop
scas
fdivr
movs
jae
ror
mov
add
jnp
call
jne
shr
sbb
xchg
int3
repnz
aas
test
out
push
push
xor
or
mov
add
push
mov
and
cli
js
cmps
sub
jmp
sbb
movs
ins
loop
test
add
rol
sbb
jbe
push
dec
push
mov
push
leave
xor
xchg
hlt
adc
pop
mov
fidiv
pop
maxps
cli
clc
aas
and
rcl
or
pushf
dec
mov
mov
lods
es
xchg
je
dec
sti
and
mov
push
push
lods
mov
mov
pop
adc
shl
sub
sub
jecxz
(bad)
xchg
leave
xchg
xchg
in
adc
lods
pop
pop
adc
sbb
test
outs
imul
dec
and
outs
jge
cmp
hlt
cld
div
in
pop
out
jle
pop
xor
sub
ja
aad
idiv
pop
jg
pop
xlat
out
xor
jl
in
sti
xchg
in
cmp
(bad)
cli
(bad)
aaa
lods
lods
jg
fs
cmp
xchg
das
dec
mov
leave
cld
jmp
push
inc
fadd
sti
shr
loope
xchg
int3
fnstsw
ja
hlt
jg
jg
out
mov
dec
fbstp
cli
mov
cld
cmps
iret
adc
mov
(bad)
repz
jg
jo
pop
sti
pop
(bad)
jp
add
in
(bad)
push
ds
std
sbb
scas
sbb
bound
xchg
out
pop
pop
mov
sahf
in
dec
into
test
out
in
push
pop
sahf
cmc
sbb
daa
aam
cmp
jl
into
pop
pop
adc
xor
push
sub
and
mov
gs
pushf
ss
imul
inc
(bad)
repz
or
or
pop
push
dec
out
dec
repz
jno
test
sub
xchg
or
xor
imul
jnp
mov
inc
pop
dec
push
fsub
mov
mov
cmovnp
sub
inc
in
inc
test
nop
mov
add
pop
stos
xor
adc
xchg
xchg
aam
push
adc
mov
sar
add
shr
int
mov
shr
add
aaa
push
(bad)
outs
in
push
das
add
icebp
sbb
inc
mov
in
in
add
lock
push
or
jbe
outs
in
mov
pop
sysenter
in
xchg
fstp
and
push
push
(bad)
push
stos
mov
xchg
stc
jbe
or
sbb
pop
test
or
xor
fild
movs
sub
nop
adc
jmp
lods
fadd
jnp
and
ret
mov
jle
aas
push
nop
lea
sub
jp
pop
test
stos
xchg
stc
jne
push
in
adc
ins
mov
ja
mov
dec
dec
jg
mov
popa
jl
out
jo
loope
sub
sub
inc
bound
pop
retf
jmp
jge
das
loop
or
call
add
loopne
cmp
sahf
and
fsubp
inc
je
out
pop
lock
pop
aaa
test
sub
jp
ror
inc
pop
adc
xchg
mov
(bad)
fs
retf
sbb
mov
or
int3
or
add
pushf
sbb
jp
nop
pop
push
imul
push
mov
xor
xor
cmp
xlat
inc
loope
inc
test
xchg
stc
dec
push
pop
stos
and
(bad)
add
rcr
scas
xchg
mov
jle
xchg
cmp
cli
mov
add
xlat
dec
push
cwde
mov
sar
or
and
and
scas
cmp
mov
(bad)
push
dec
ins
aam
iret
retf
out
icebp
adc
add
frstor
fwait
mov
sbb
cmp
xchg
adc
dec
popf
test
xchg
push
and
xchg
xor
bnd
dec
movs
stos
lds
or
sub
cld
outs
cwde
shl
mov
(bad)
mov
push
mov
xchg
nop
xor
cmp
ds
in
dec
cmp
rcr
shr
sti
imul
push
leave
dec
icebp
jo
call
fidivr
jnp
sbb
stc
inc
fldcw
mov
js
push
inc
pop
leave
sub
pop
xor
jae
dec
xlat
outs
pop
push
mul
jge
ins
cli
jae
mov
cmp
(bad)
scas
sbb
jmp
(bad)
clc
lahf
into
pop
cld
ja
(bad)
jp
rcl
dec
imul
je
sti
pop
outs
ins
cli
call
repz
call
adc
in
repz
aaa
sbb
sar
mov
iret
lahf
xchg
out
fsubrp
mov
ret
call
mov
fsubr
xor
aam
xchg
push
sbb
icebp
aas
cmp
mov
xchg
jle
cmp
popf
mov
mov
fwait
jmp
mov
cmp
rol
mov
ss
(bad)
xchg
cmovl
pop
mov
inc
int3
pushf
fist
cmp
lea
push
adc
sub
ins
pop
xchg
pop
push
pop
ror
adc
mov
or
outs
dec
cli
cmc
or
sub
push
rcl
xlat
adc
sbb
inc
in
sub
arpl
out
push
mov
out
imul
arpl
cmp
frstor
aad
mov
movs
adc
rcl
and
arpl
scas
fs
fnstcw
mov
gs
call
or
and
adc
and
outs
jbe
nop
retf
add
mov
dec
push
mov
dec
lods
mov
stos
lods
push
nop
xor
mov
aas
add
dec
inc
inc
push
hlt
cwde
push
or
ret
cwde
jbe
test
stos
push
mov
pop
les
add
sbb
xchg
jmp
mov
fsub
sub
push
in
fnstsw
repnz
push
into
adc
scas
jb
fstp
das
mov
mov
jg
repnz
lds
test
daa
mov
lods
push
and
daa
aad
cmps
cli
icebp
jl
and
(bad)
sbb
es
lods
call
leave
dec
aad
sbb
adc
test
mov
mov
mov
fwait
sahf
call
clc
xchg
mov
or
and
fdiv
sub
je
xchg
je
nop
jle
xor
push
stos
xchg
xchg
retf
retf
add
and
xlat
inc
and
lods
and
loope
stos
adc
add
sub
int
fs
push
cs
xor
movs
sub
inc
sbb
sar
xor
pop
push
mov
shl
mov
adc
sub
retf
sbb
xor
imul
scas
sbb
lock
hlt
sub
ret
adc
and
je
bound
or
ret
mov
xor
mov
pop
mov
ret
cmp
xor
daa
adc
fisttp
leave
push
mov
dec
adc
mov
ret
xor
add
xor
out
(bad)
jge
test
retf
fld
data16
cmp
adc
test
add
sub
addr16
ja
lds
jmp
ror
add
dec
or
cdq
outs
jnp
rol
jmp
add
inc
mov
xor
sub
out
mov
in
(bad)
cld
scas
xor
xor
scas
ins
fwait
jne
dec
mov
cdq
xor
(bad)
sbb
xchg
std
cmps
pop
mov
sbb
imul
mov
(bad)
jne
push
inc
or
mov
push
inc
or
pop
push
xchg
xchg
inc
dec
jno
(bad)
push
mov
mov
and
xor
jp
fist
into
(bad)
bound
pop
ret
stos
scas
shr
add
fdivr
sar
push
int
data16
scas
pusha
jg
jp
fwait
jae
push
icebp
fisub
mov
in
dec
(bad)
mov
popf
enter
inc
sub
(bad)
push
fs
pop
cmp
pop
xchg
or
xchg
cld
loopne
push
mov
fcom
icebp
in
lea
(bad)
jp
ret
pop
aaa
aad
rcr
xor
cmp
jb
mov
cld
pop
xchg
mov
int3
movs
aas
mov
jne
pop
pop
not
iret
into
cmp
mov
out
jne
mov
sub
fnstsw
stos
(bad)
xchg
retf
mov
out
fidivr
bound
sub
movntq
out
and
stc
fdivrp
out
outs
out
jmp
jmp
test
outs
cwde
cs
retf
jmp
into
and
xor
jmp
cmp
xchg
cmp
xor
and
clc
pop
pop
dec
movs
popf
jne
test
push
push
xor
push
add
icebp
mov
neg
pop
sub
sub
out
setno
jmp
sub
xchg
ret
out
jmp
stos
pop
sti
(bad)
add
push
push
popf
mov
jo
dec
jmp
and
stos
int3
repnz
push
lock
addr16
(bad)
mov
cs
push
adc
movs
call
arpl
push
or
push
push
ins
inc
xchg
mov
adc
jb
fcomp
dec
(bad)
(bad)
fdivr
imul
dec
ins
imul
or
sub
dec
les
js
jb
das
lahf
lds
push
out
push
adc
dec
xor
or
xlat
mov
mov
fld
add
test
das
push
(bad)
fild
out
jle
loopne
call
rcr
sbb
mov
jecxz
push
bound
es
jb
cdq
movs
inc
dec
push
jp
mov
stc
(bad)
idiv
fst
push
jmp
gs
pop
add
inc
fmul
icebp
push
adc
adc
dec
adc
sub
push
jno
adc
ret
test
leave
and
pop
mov
xchg
dec
call
call
jae
pop
xor
push
aaa
mov
xor
sahf
mov
dec
mov
(bad)
xor
mov
enter
call
mov
(bad)
add
push
sbb
and
popf
outs
aam
or
int
mov
and
add
push
fsubr
pop
cmp
mov
ret
pop
or
push
rcl
lahf
push
xchg
inc
adc
xchg
scas
or
retf
or
dec
or
hlt
push
aad
dec
ficomp
dec
mov
sub
dec
xor
out
aam
stos
div
xor
retf
jp
push
adc
pushf
cld
xchg
jmp
ja
in
mov
(bad)
shl
push
repnz
cmp
pop
pop
inc
sub
fadd
or
xchg
push
in
xor
pop
push
inc
inc
cdq
retf
ds
or
rcr
jmp
jmp
xor
retf
dec
xchg
call
pusha
cmp
push
test
int3
xor
data16
dec
cdq
dec
fistp
inc
shl
inc
inc
sub
ds
dec
xchg
je
xlat
push
or
mov
inc
mov
sbb
and
in
add
pop
cld
mov
jb
jmp
xchg
or
outs
pop
bound
cld
or
cmp
xchg
ficomp
jmp
into
jmp
lods
xchg
mov
vaesdeclast
cmc
push
cmps
scas
or
addr16
jbe
mov
push
mov
push
pop
xlat
jecxz
pop
std
retf
retf
push
cmp
sahf
jg
fs
(bad)
jecxz
ja
mov
push
imul
ja
std
jmp
add
je
sti
pop
(bad)
std
loopne
(bad)
aad
cmc
fisttp
mov
icebp
dec
sbb
inc
std
xchg
aaa
xlat
and
aam
int3
(bad)
addr16
mov
dec
imul
es
loopne
xchg
iret
ja
dec
fcmovnbe
cmps
call
cmc
aas
mov
sub
jae
sub
lahf
pop
aas
not
or
pusha
stos
mov
inc
sbb
sub
cmc
mov
sbb
jge
js
loop
cmp
ja
jae
retf
lahf
out
outs
stc
mov
leave
mov
ror
sub
rep
pop
sar
rol
call
sub
mov
loop
mov
xor
jecxz
outs
imul
push
push
adc
pop
mov
or
rcl
test
push
mov
ffree
dec
shl
ret
mov
jmp
gs
cdq
ss
push
pop
and
nop
push
nop
jecxz
ss
sbb
jecxz
cmp
in
jp
mov
pop
ret
cmps
adc
or
ja
push
push
fidivr
and
cmp
jp
dec
push
or
scas
cmps
mov
retf
pushf
jge
jge
mov
cmp
movs
mov
push
sbb
sbb
mov
into
jmp
clc
repz
mov
aaa
test
jge
idiv
std
mov
ret
push
cmps
cmp
stos
jbe
and
jge
out
push
repnz
cld
lock
ds
in
ret
shr
push
ret
push
cmps
cmp
adc
dec
xchg
inc
or
sbb
and
int3
icebp
xchg
mov
pop
movs
(bad)
xor
ret
add
pop
jae
xchg
test
das
gs
adc
sub
test
xchg
mov
sbb
inc
(bad)
arpl
mov
movs
xor
retf
cli
stos
sub
inc
and
inc
xor
jne
push
pusha
dec
push
icebp
inc
data16
sub
fcmovu
movs
push
ret
int3
jmp
enter
retf
cld
das
jo
push
inc
mov
ret
outs
xchg
(bad)
pop
push
xor
lahf
cmps
add
or
loope
mov
cmp
ret
cmp
mov
test
sub
ds
pusha
xchg
adc
arpl
xchg
std
movs
inc
imul
sar
jmp
inc
or
push
std
mov
mov
add
scas
jle
inc
sbb
sub
(bad)
lock
stos
mov
pushf
inc
ret
dec
leave
cmc
mov
pop
aaa
xchg
xchg
fadd
arpl
das
out
sbb
push
adc
jp
pop
adc
mov
fist
(bad)
pop
enter
mov
cdq
push
mov
hlt
jmp
xchg
push
push
retf
je
mov
ret
xor
icebp
ret
jecxz
sbb
fnstenv
mov
ja
xchg
sub
push
xchg
mov
dec
sub
sub
dec
or
xchg
xchg
xchg
adc
fsub
or
inc
retf
mov
jo
and
mov
mov
repnz
add
push
(bad)
pop
push
mov
outs
outs
dec
les
push
or
push
pusha
pop
mov
jns
pushf
mov
mov
arpl
int3
es
or
icebp
mov
lahf
xor
out
loop
inc
mov
pop
push
mul
shl
mov
ds
(bad)
jmp
jb
out
dec
stos
inc
shl
mov
xchg
retf
dec
fst
ss
outs
inc
ret
pop
outs
ins
stc
in
xchg
shrd
retf
test
sbb
scas
mov
std
cmc
out
mov
fsub
in
fdivr
repz
lahf
pop
aaa
icebp
aam
jecxz
fnstsw
stc
hlt
or
gs
and
xchg
or
push
mov
jae
(bad)
mov
aaa
add
mov
(bad)
cmp
pop
and
jle
jmp
stc
enter
or
cli
addr16
aaa
aad
cmp
sub
mov
dec
fisub
lahf
(bad)
push
into
pop
fist
lods
mov
stos
dec
dec
aad
mov
scas
lods
fist
ror
push
push
xor
shr
xchg
ins
inc
lods
jecxz
push
out
dec
jle
mov
cmp
jb
add
movs
add
adc
adc
or
bound
retf
xor
cmp
in
pop
pop
mul
jae
in
hlt
fs
vmwrite
dec
pop
sti
or
jmp
pusha
fimul
in
imul
xchg
into
push
jmp
fistp
neg
and
cmp
(bad)
xor
jne
popf
cmp
stos
pusha
xor
sbb
push
arpl
xchg
jp
mov
ds
mov
sbb
int
sub
aad
sti
sahf
cmps
in
inc
jns
sub
pushf
mov
sbb
div
scas
xchg
mov
aas
out
test
enter
out
push
mov
int3
adc
pop
icebp
gs
mov
pop
in
dec
dec
mov
mov
push
or
in
stos
push
jo
cdq
push
inc
enter
movs
pop
adc
jbe
sub
xchg
xor
movs
xor
ret
pop
dec
jmp
inc
dec
push
jle
repz
mov
(bad)
jmp
jl
in
sbb
int3
(bad)
out
push
xlat
or
int3
mov
icebp
pop
cld
outs
add
retf
jecxz
xor
pop
pop
mov
imul
push
sbb
cmps
xor
and
outs
adc
mov
mov
mov
jb
sub
push
mov
push
cmp
add
or
test
gs
loop
mov
xchg
lods
int
sbb
xchg
sub
dec
xchg
mov
(bad)
sahf
nop
xchg
shl
pop
xchg
mov
psrlw
ja
dec
jne
xor
inc
retf
call
or
scas
stos
jmp
mov
lahf
sub
inc
std
cmc
clc
lea
and
mov
loopne
imul
jg
hlt
dec
bound
pop
mov
mov
mov
enter
sub
movs
mov
pop
xor
sti
sbb
mul
sahf
xor
sahf
rcl
or
push
mov
lods
cmc
lods
sbb
and
aaa
cmps
jmp
arpl
gs
mul
sar
cmp
imul
cmp
add
fiadd
mov
jnp
test
iret
inc
out
fs
(bad)
frstor
fcom
fstp
popf
jnp
hlt
mov
pusha
popa
aaa
pushf
jl
fistp
fs
sbb
mov
out
sahf
mov
xor
sti
jae
(bad)
std
mov
jg
add
retf
(bad)
test
lods
jbe
jg
shl
scas
xchg
outs
sahf
fdivrp
aaa
mov
repnz
jmp
loope
sahf
xor
aas
aaa
sub
pop
cmps
movs
pushf
je
mov
(bad)
xchg
cmps
xlat
std
sti
push
adc
outs
sahf
mov
sbb
out
cmps
sbb
push
ja
jge
mov
(bad)
mov
jmp
outs
pop
cmp
sar
mov
out
stos
fnstcw
repnz
pop
pop
(bad)
dec
sar
cmp
lea
int3
cld
into
mov
(bad)
mov
push
movs
push
call
imul
pop
mov
movs
int
mov
out
sti
pop
not
in
imul
into
inc
int3
sbb
or
or
in
icebp
pop
xor
mov
(bad)
data16
dec
mov
fisub
imul
fs
bound
pop
xor
(bad)
cmp
out
in
adc
das
xor
xor
ds
inc
cmc
mov
jecxz
sbb
lods
jo
rcr
shl
push
adc
sub
icebp
fsub
stos
push
fisub
dec
cmp
dec
das
rol
push
push
jbe
push
push
cmps
ins
jbe
(bad)
(bad)
in
fbld
push
inc
mov
xor
xchg
call
jp
xor
lods
cmp
pop
nop
add
add
fmul
aaa
and
fisub
and
pop
xor
or
rol
lea
pop
jmp
jne
or
sbb
shl
or
xor
sub
daa
jno
sub
mov
ins
(bad)
mov
gs
adc
js
loop
shr
jnp
test
(bad)
xchg
xor
mov
movs
xor
lock
mov
inc
mov
cdq
jg
jae
cmp
add
push
jmp
int
push
rcr
push
inc
fidiv
pop
add
std
lock
fnstcw
in
pop
cmp
stc
adc
mov
pop
add
fs
dec
add
out
rol
xchg
outs
ffree
sub
or
lock
mov
jbe
mov
hlt
arpl
scas
jae
jmp
sbb
jg
inc
pop
aas
std
push
test
jnp
pop
add
cli
ds
pop
xchg
sbb
mov
inc
add
jg
shr
jmp
jo
push
mov
cmp
dec
dec
pop
push
sub
push
xlat
fld
js
cmps
std
sub
xchg
add
and
stos
ds
sub
xchg
stos
push
sbb
aas
cmp
jo
mov
pop
into
cmps
sub
cmc
jmp
add
cwde
test
repnz
pop
test
push
jge
cwde
sbb
test
jbe
test
inc
and
(bad)
loopne
ds
pop
cmpxchg
lds
push
lds
adc
fisttp
aas
fdivrp
aad
ret
pop
out
xchg
fsub
xchg
aas
xchg
outs
out
in
ins
imul
(bad)
mov
mov
and
cdq
jns
xchg
ja
lahf
rcl
(bad)
stc
push
lahf
sub
push
out
and
leave
(bad)
scas
ins
scas
jo
fs
xchg
ds
scas
push
stc
dec
cs
into
jo
jp
ret
mov
rcl
in
popf
dec
ret
loopne
test
cmc
ins
movs
mov
int3
jmp
les
mov
hlt
push
or
jae
dec
pop
push
mov
cmps
add
hlt
test
pop
fabs
(bad)
aaa
int3
ss
xor
add
neg
jnp
popa
mov
sar
stos
mov
aad
test
xchg
jb
data16
ins
sbb
cmp
hlt
pop
pop
pushf
ins
mov
outs
mov
das
lahf
retf
push
fstp
mov
dec
mov
jmp
pop
cmp
clc
xlat
addr16
jmp
fstp
aas
stos
std
pop
cmps
xor
div
das
cli
xchg
popf
aas
cmp
out
pop
mov
pop
push
not
push
hlt
out
or
mov
std
rcl
push
mov
mov
cmp
ja
in
fsubr
retf
out
pop
xor
mov
mov
xor
sahf
xor
push
data16
mov
shr
cdq
cdq
and
push
or
jb
pop
cmp
(bad)
fcomip
in
add
adc
pop
rcr
ins
imul
das
stos
jg
dec
dec
leave
call
jle
and
out
xchg
ret
into
fnstenv
stc
fnstsw
int3
xchg
cmc
aad
int3
popf
mov
add
sbb
gs
fdiv
push
je
aam
cmp
int
and
fs
mov
mov
(bad)
stos
push
xchg
icebp
cmp
loop
arpl
or
mov
and
bound
cmc
xchg
outs
or
sbb
adc
push
mov
(bad)
(bad)
pop
sub
push
mov
mov
adc
pop
mov
dec
or
pop
ficomp
iret
int3
std
scas
mov
jb
imul
shl
and
xchg
adc
jo
cdq
les
xchg
cmp
dec
loop
add
mov
inc
imul
mov
fst
dec
popf
pop
aaa
jecxz
dec
add
push
jmp
(bad)
rol
and
add
out
hlt
imul
add
ret
mov
lock
xor
xor
jbe
mov
pop
retf
fdivr
xchg
jp
jno
add
adc
cmp
icebp
sub
jns
push
cmp
mov
push
dec
jne
(bad)
shl
dec
add
lods
jae
mov
and
mov
cmp
ins
not
xor
dec
mov
xor
clc
jl
mov
aam
add
cwde
pop
mov
imul
adc
ins
sub
inc
inc
jp
sub
jmp
daa
and
mov
xchg
aaa
sub
cmp
jle
call
out
dec
outs
test
mov
pop
dec
ficom
cmp
(bad)
scas
sti
test
dec
jne
(bad)
out
xchg
jmp
mov
pop
or
loope
in
(bad)
in
add
push
loope
xchg
jle
sub
xor
dec
push
daa
xchg
add
adc
xchg
outs
nop
jb
adc
jg
and
retf
jg
dec
test
loop
daa
mov
add
mov
mov
push
fwait
dec
(bad)
xlat
adc
daa
jp
push
ss
sub
mov
cmp
pop
sub
xor
movs
lahf
stc
shl
fcomp
fadd
xor
rcr
push
mov
fsub
dec
stc
inc
test
lds
push
add
dec
dec
adc
leave
outs
movs
and
push
mov
aaa
push
retf
sub
sub
aad
dec
mov
xor
retf
xchg
lahf
sbb
sbb
(bad)
je
in
stos
gs
or
mov
xor
jmp
add
mov
jp
dec
mov
or
mov
rcr
sbb
mov
inc
shr
test
mov
test
push
js
sbb
adc
mul
leave
cli
fwait
nop
jbe
cmp
mov
xchg
aam
dec
xor
cdq
int3
mov
adc
cli
out
movs
test
popf
dec
std
aad
into
pop
pop
mov
lahf
into
jmp
(bad)
js
retf
aaa
mov
jle
dec
sbb
push
out
addr16
imul
lahf
cmp
lahf
mov
test
jnp
cld
in
neg
jge
or
fadd
sbb
outs
pop
ds
mov
mov
fnstsw
cmc
mov
es
call
jae
mov
stos
sbb
lahf
pop
cmp
lahf
xchg
push
(bad)
sar
jmp
imul
popf
lea
(bad)
(bad)
mov
sub
push
(bad)
clc
xor
mov
xor
and
dec
or
inc
ficomp
xor
fst
mov
in
lea
or
rcr
call
and
or
out
les
inc
inc
sbb
mov
xchg
movs
dec
mov
dec
cmp
pop
(bad)
(bad)
xor
mov
shr
pop
into
test
inc
rcl
shl
fstp
pop
aad
push
and
imul
xor
aas
test
(bad)
mov
xor
inc
ja
imul
fimul
fstp
scas
in
xchg
les
inc
fmul
or
sub
mov
add
xor
call
stos
mov
pop
mov
iret
push
(bad)
and
cmp
push
imul
mov
xchg
dec
cdq
push
ds
cld
scas
aam
in
jno
ret
sbb
add
mov
jg
add
out
adc
loope
mov
mov
shl
mov
mov
pop
fisub
cmps
popa
nop
sub
add
and
sbb
fs
add
and
add
ins
aad
loope
pop
aam
mov
dec
xlat
das
add
rol
xlat
sbb
aam
jmp
adc
cdq
dec
and
aaa
ror
or
mov
push
cmp
xor
mov
(bad)
sbb
loop
fisubr
mov
test
aam
sub
mov
xchg
sub
(bad)
shl
ins
add
dec
ficom
scas
les
fsub
add
in
hlt
push
jae
cmp
nop
int3
adc
push
xor
cmp
scas
push
inc
pop
or
adc
push
aam
mov
gs
aad
cmps
jb
jns
mov
call
aam
jg
dec
fdiv
jp
cmp
xchg
out
dec
mov
mov
test
xchg
add
adc
cdq
inc
call
mov
sbb
or
dec
mov
lods
cli
out
frstor
mov
in
out
mov
xor
mov
mov
add
movs
jae
mov
test
outs
icebp
rcl
jmp
cdq
enter
cdq
idiv
push
push
out
push
sar
dec
lahf
xchg
mov
shl
pop
jo
in
loope
xchg
cwde
push
stos
xor
les
repz
clc
pop
mov
inc
in
test
sub
or
mov
pop
sar
xlat
cld
movs
mov
sbb
sbb
mov
mov
mov
leave
(bad)
jmp
dec
sahf
dec
push
push
fistp
in
aas
cwde
out
pushf
inc
push
ins
pop
push
sub
pop
push
les
and
repnz
popf
push
mov
and
sbb
(bad)
xchg
push
adc
or
xor
dec
jns
jle
sub
ficomp
lods
imul
xlat
cmps
jl
arpl
inc
retf
mov
popf
sub
call
mov
xchg
stos
bnd
mov
in
lods
fistp
movd
mov
(bad)
out
xchg
rol
sbb
sar
iret
pop
adc
jbe
and
pop
pop
mov
(bad)
xlat
lods
pushf
mov
jnp
push
fidiv
inc
xchg
jnp
into
cmp
push
std
add
pop
push
ja
jnp
into
xor
jl
push
ja
fwait
mov
data16
mov
mov
aaa
int
fnstsw
jae
das
xchg
sbb
mov
lahf
mov
sbb
mov
inc
fistp
mov
mov
xchg
pop
lods
int
out
call
xlat
ja
rcl
mov
and
pop
pushf
mov
into
mov
cdq
push
sub
xor
into
jne
xchg
out
icebp
pusha
xchg
rcr
dec
mov
scas
or
dec
rcl
jo
add
and
js
and
scas
mov
test
jo
or
loop
inc
mov
into
pop
(bad)
pop
popa
dec
ss
test
xchg
data16
cli
popa
adc
call
or
adc
sub
mov
sbb
push
mov
lods
inc
leave
push
add
xchg
repnz
cmovl
pop
les
and
add
push
aam
mov
and
mov
pop
jo
enter
sti
mov
and
push
sub
sbb
loop
out
add
jo
fwait
jo
push
sub
adc
inc
div
mov
inc
cmp
cdq
mov
ss
push
jb
xchg
repz
cmp
inc
cmps
cdq
test
push
adc
mov
scas
movs
imul
sbb
jne
int
add
mov
mov
cmps
(bad)
sti
push
cmps
arpl
ja
mov
push
scas
mov
xor
jo
loope
cmp
cmps
bound
jmp
enter
(bad)
sbb
xor
adc
dec
aad
std
jmp
rcl
pop
sbb
jg
jecxz
push
call
fadd
push
nop
pop
in
lea
mov
mov
call
movs
stc
or
repz
das
cs
imul
xchg
repz
add
push
out
repnz
fcomp
pop
sbb
loope
xor
xor
lods
mov
push
(bad)
in
gs
bound
sbb
retf
ins
loopne
and
or
sbb
xchg
mov
in
lods
arpl
inc
xchg
loopne
test
add
push
jmp
xchg
cs
dec
adc
push
cwde
mov
xor
cdq
xor
lock
push
xchg
test
pop
xor
add
inc
xor
out
ja
pop
cdq
mov
jmp
inc
arpl
ret
pop
ficomp
lock
add
sbb
dec
lods
push
ror
xor
mov
xchg
pop
movs
sbb
xor
or
adc
mov
jmp
imul
(bad)
push
movs
jb
mov
push
jmp
jnp
stos
pop
iret
fist
jl
add
push
mov
push
xchg
adc
jecxz
add
lock
(bad)
mov
mov
mov
(bad)
jmp
push
mov
add
sbb
dec
call
popa
cmp
xor
in
into
data16
sbb
rcr
mov
gs
mov
out
mov
xchg
not
movs
adc
mov
int3
sub
fbstp
xchg
imul
pushf
leave
inc
(bad)
push
call
sbb
clc
into
sbb
mov
pop
jmp
sbb
out
cmps
xor
out
out
ins
stc
sar
(bad)
loope
jge
mov
xor
ja
mov
xchg
jnp
jmp
jmp
mov
out
mov
sbb
ins
jge
out
mov
jne
sub
dec
jae
imul
pop
sti
hlt
sbb
jge
repnz
mov
jae
or
out
xor
xor
addr16
inc
pop
sub
fisubr
inc
out
outs
popf
mov
pop
iret
cdq
clc
jmp
dec
mov
loope
div
pop
repz
xchg
dec
outs
pop
fidivr
outs
jmp
mov
mov
inc
test
push
les
xor
and
mov
call
dec
push
imul
cmp
sbb
adc
adc
cs
cmp
arpl
imul
jb
fmul
push
inc
mov
xor
or
inc
mov
sub
xchg
add
frstor
mov
sub
mov
dec
adc
mov
push
mov
push
xchg
mov
inc
popf
pusha
cmp
add
cmp
(bad)
mov
and
popa
out
mov
(bad)
dec
(bad)
leave
ror
push
mov
lock
add
les
mov
retf
bnd
in
sar
(bad)
pop
mov
lds
xchg
cdq
aam
and
xchg
xchg
push
mov
mov
cwde
push
push
fidiv
xor
add
and
cmc
lock
push
aaa
mov
out
jmp
ret
xchg
std
pop
fstp
dec
es
xor
inc
mov
and
mov
in
addr16
sbb
imul
sub
bound
(bad)
xchg
or
dec
xlat
xchg
xchg
call
fwait
push
(bad)
fidivr
jns
out
pop
in
push
popa
aam
inc
or
xchg
pop
xchg
leave
adc
push
mov
lock
mov
xor
xchg
popf
pusha
xchg
xchg
push
and
fs
jmp
xchg
lahf
xor
int
cmp
add
pop
or
fisubr
shr
arpl
or
sahf
xchg
in
dec
movs
sbb
mov
xrelease
mov
add
inc
jg
inc
push
pop
and
push
lods
int
adc
lods
or
mov
scas
sub
cwde
out
(bad)
push
sub
in
leave
je
xchg
mov
jno
ret
dec
xor
pop
ds
fsubr
or
daa
xor
or
shr
call
push
push
mov
xor
push
outs
push
xor
movs
mov
frstor
dec
or
and
push
mov
and
mov
pop
loopne
cli
mov
sbb
adc
mov
inc
mov
arpl
xor
outs
inc
cmp
icebp
add
sub
sub
xchg
mov
pop
jmp
loopne
push
cmp
aad
xor
or
neg
adc
cmp
mov
sahf
mov
xchg
fs
or
arpl
pop
imul
push
out
rcl
mov
mov
out
dec
ficomp
movs
cmp
jbe
daa
cmp
loope
ja
enter
(bad)
pop
ret
xor
dec
cmp
pop
hlt
ret
jae
jle
mov
call
mov
addr16
ja
fistp
dec
jmp
out
push
mov
sti
pop
idiv
sti
xor
adc
dec
fwait
jnp
mov
(bad)
outs
lahf
jnp
(bad)
fsub
shl
(bad)
mov
iret
cmp
dec
jae
ror
sub
cmp
int
mov
jmp
mov
call
xor
scas
push
jg
retf
cmp
jmp
fwait
repnz
rcl
lahf
scas
imul
imul
mov
nop
sbb
pop
ds
out
rcr
jecxz
dec
jmp
in
mov
fcom
pop
lea
inc
jmp
loope
jl
imul
cmp
cmp
loop
dec
int3
out
fstp
jno
adc
cs
fdiv
sub
neg
pushf
fiadd
clc
push
ins
jmp
pop
dec
push
mov
popf
sbb
pop
sub
push
add
xor
xor
push
lods
fmul
pop
sub
mov
push
loope
adc
movs
pop
pop
fild
test
test
and
sbb
ds
pop
pop
test
sub
adc
cmp
test
pmullw
jno
push
xchg
imul
jo
sub
fwait
xchg
test
cmc
inc
leave
add
and
inc
ins
sbb
fs
sbb
cmovns
mov
test
adc
icebp
sub
test
in
and
fxch
jle
or
and
push
inc
sbb
shr
repnz
xchg
push
call
ins
adc
cwde
enter
ss
shr
retf
test
sub
es
ror
mov
sar
xchg
in
xor
push
xor
cdq
std
cdq
ins
xchg
fcom
and
and
mov
mov
jp
dec
sti
jo
and
or
cmp
cli
es
ret
pop
jl
cwde
inc
pop
lds
jle
xor
xchg
push
mov
cmp
and
mov
add
ret
xor
jae
jg
data16
dec
sub
aaa
adc
jecxz
push
test
cs
add
sub
mov
or
lea
call
xchg
stos
push
ja
bound
sete
mov
lock
aad
mov
(bad)
pop
unpckhps
ror
sub
je
iret
pop
out
jne
add
add
adc
icebp
cli
bound
sub
hlt
xor
or
and
mov
(bad)
fs
sub
or
dec
add
jbe
sub
push
jb
pop
rcl
inc
xchg
mov
and
sub
xchg
scas
mov
cld
push
or
fcom
sbb
mov
int3
in
xor
mov
ds
push
xchg
fsubr
push
fimul
fs
jle
or
push
xchg
(bad)
push
and
dec
push
shl
push
push
fucom
push
lea
out
mov
cmp
sbb
sub
cmc
sub
inc
inc
sbb
cmps
mov
loop
cmp
pop
rcl
push
retf
std
jne
mov
pop
in
mov
push
mov
adc
les
cmps
cmc
jp
in
mov
mov
out
int3
call
(bad)
lock
jno
mov
scas
dec
and
ins
out
push
icebp
iret
lods
stos
sti
ror
into
aas
(bad)
icebp
out
fistp
pop
fcomp
hlt
sysret
cmp
icebp
in
into
out
pop
push
xchg
lea
stc
xchg
int3
pop
lahf
push
test
mov
in
mov
jbe
cmp
in
jl
xchg
fld
bound
(bad)
in
cwde
jnp
cmp
pushf
jnp
outs
jo
shl
outs
popf
jnp
fcmovnu
and
movs
shl
rol
mov
sahf
cmps
or
ss
fnsave
jae
scas
fwait
mov
fwait
dec
push
xchg
mov
call
jmp
jb
icebp
test
repz
fcomp
movs
sbb
imul
fdivp
shl
outs
push
lahf
fist
pop
dec
mov
ficom
rol
push
mov
lea
sbb
xchg
ds
add
nop
arpl
xchg
mov
push
data16
pop
mov
jnp
add
push
out
and
lock
(bad)
pop
cs
push
xchg
xor
push
push
imul
jmp
adc
adc
lea
and
dec
dec
and
adc
push
mov
jbe
xchg
ins
outs
imul
repz
loope
movs
shl
movs
push
imul
mov
cmps
shl
outs
or
pop
pop
(bad)
mov
pushf
push
das
outs
and
sub
xlat
push
mov
imul
inc
call
call
inc
dec
shr
sbb
mov
sub
xchg
movs
lods
shl
enter
or
bound
pop
xchg
sub
pop
hlt
nop
mov
mov
stos
dec
ret
nop
call
inc
leave
dec
stos
fyl2xp1
ret
sub
mov
mov
and
cmc
es
adc
push
bound
xor
push
not
inc
jb
mov
push
cmp
cmp
sbb
push
call
cmp
mov
sbb
retf
and
(bad)
pop
adc
loop
movs
stos
test
jns
outs
sbb
pop
shl
mov
repz
adc
mov
jg
pop
shl
inc
jmp
mov
popa
sbb
pop
pavgb
or
mov
lahf
sbb
jp
clc
xchg
gs
xchg
test
cmps
ret
data16
fwait
or
movs
cmc
jp
sub
ds
or
jne
push
mov
into
push
js
and
push
and
mov
out
test
ror
outs
rcr
push
movs
loop
xor
jg
lock
sub
shl
cmc
test
ficomp
fwait
pop
vmovups
fcomp
cs
ja
lea
stos
mov
(bad)
lods
sub
gs
xchg
shr
addr16
adc
inc
sub
xor
cwde
sbb
rol
adc
add
sbb
push
mov
mov
sbb
pop
xor
sub
add
(bad)
push
xchg
aaa
cli
push
inc
aaa
movs
cli
ret
or
inc
adc
sub
mov
(bad)
mov
push
sub
adc
and
dec
int
sbb
sub
rcl
xlat
xchg
and
adc
or
icebp
pop
lods
xlat
inc
xor
repz
lds
adc
push
mov
cmps
adc
adc
fadd
cmp
sbb
jmp
add
adc
movs
cmp
ficom
in
into
push
mov
daa
mov
sbb
or
push
inc
fwait
sbb
ja
jp
mov
cmc
outs
mov
jg
dec
out
pop
lods
sub
idiv
(bad)
bound
test
sub
fistp
sar
xchg
cmp
lahf
pop
adc
aaa
iret
in
cld
ficomp
cmp
je
fsub
mov
mov
hlt
rol
fisttp
sub
aam
fstp
shl
(bad)
mov
pop
push
cmp
jp
(bad)
mov
sti
fld
fwait
jle
out
(bad)
mov
pop
jge
xchg
mov
jmp
outs
popa
xchg
mov
or
(bad)
mov
jecxz
inc
mov
ss
loope
ret
dec
jg
xor
test
enter
jb
dec
imul
mov
test
mov
jnp
mov
jo
movs
(bad)
inc
(bad)
cli
push
mov
sbb
jmp
mov
pushf
mov
mov
ror
add
lods
sbb
enter
inc
shl
xchg
je
jmp
sbb
addr16
sub
fadd
mov
mov
pop
cmp
movs
arpl
push
clc
(bad)
jbe
pop
ja
cmc
(bad)
pop
xchg
cmps
bound
push
aam
cmps
stos
sbb
mov
ror
push
imul
mulps
inc
push
addr16
dec
aad
ins
mov
add
sbb
bnd
mov
cld
sbb
jp
loopne
add
or
mov
ret
lock
rol
imul
aam
fwait
pusha
pop
sub
push
dec
mov
pop
test
mov
sub
pusha
cmp
imul
sysenter
cmp
add
fcomp
int
mov
add
fwait
movs
daa
fidivr
inc
mov
or
fmul
xchg
rcr
repnz
jecxz
sub
mov
mov
pop
scas
enter
mov
mov
xchg
popa
shl
push
and
xor
rol
retf
xchg
dec
cdq
sub
or
data16
jne
inc
iret
pop
mov
mov
jb
pop
push
je
xor
jns
mov
out
cmps
mov
adc
xchg
jo
xlat
xchg
jmp
test
xor
aam
adc
movs
fldz
clc
pop
mov
enter
shl
mov
cli
ret
inc
scas
and
les
cmp
adc
cld
movs
push
retf
pusha
add
inc
sbb
mov
jne
ret
retf
sbb
test
retf
and
sbb
inc
jle
xchg
inc
sbb
rol
pop
sbb
ins
push
pop
sub
ss
mov
imul
mov
sahf
inc
ins
sub
out
and
imul
pusha
or
push
mov
push
jne
retf
add
retf
and
pop
ds
mov
rcl
loop
or
dec
retf
sahf
xor
mov
and
sub
mov
mov
leave
or
stos
test
fs
jl
mov
sbb
push
cmp
push
inc
sbb
push
retf
mov
pop
retf
in
xor
mov
and
retf
inc
or
push
gs
jle
ins
leave
xor
push
stos
aaa
popf
jb
add
leave
jnp
ss
int3
repz
stos
jne
je
sbb
inc
mov
test
mov
hlt
jb
xchg
movs
xlat
adc
add
dec
das
test
xlat
stos
repz
arpl
in
(bad)
jnp
leave
or
adc
mov
adc
jns
sbb
(bad)
mov
loopne
rep
and
data16
cmp
int3
ja
out
cli
(bad)
mov
das
lods
or
jbe
repz
or
cmp
loope
sti
cmc
popf
pop
jg
mov
jge
jnp
lahf
sbb
cmp
out
dec
in
jp
sub
call
int
mov
xor
call
loopne
mov
leave
fdiv
dec
lods
retf
push
mov
or
add
movs
jnp
sti
shl
xchg
dec
or
cli
jmp
cli
jmp
sar
outs
xchg
sub
(bad)
jp
aas
popa
dec
jg
test
jl
es
out
fs
rcr
in
jmp
movs
lock
jne
(bad)
ins
enter
ret
(bad)
jmp
out
lea
cmp
mov
lods
(bad)
xchg
pop
mov
jl
cwde
idiv
xchg
dec
jg
add
scas
sbb
arpl
(bad)
cwde
inc
imul
ficom
mov
inc
hlt
enter
or
test
mov
inc
xchg
sbb
ror
pop
inc
or
leave
dec
dec
fdiv
fidiv
pop
or
mov
call
cmp
bound
(bad)
in
push
xor
test
data16
jae
loopne
stc
xor
fwait
inc
stos
push
mov
aam
or
es
mov
inc
loopne
push
inc
cmp
mov
daa
pop
pop
cmp
dec
test
lods
scas
xchg
shl
mov
sbb
ret
sub
dec
sbb
jmp
xor
dec
push
jns
lds
sbb
vsqrtss
outs
push
sbb
icebp
inc
dec
mov
aas
push
inc
mov
push
push
add
arpl
sub
shl
loope
fcom
test
adc
into
or
mov
push
push
xor
pushf
adc
add
mov
xlat
jg
aaa
(bad)
jmp
mov
mov
xchg
push
sub
clc
jg
cld
sub
sbb
clc
inc
cmc
xchg
and
outs
and
xchg
cmp
mov
imul
or
lds
or
into
mov
push
cmps
jmp
popf
je
xchg
stos
push
repnz
pushf
ja
ja
jne
xchg
jns
(bad)
int
pop
push
ss
(bad)
lods
(bad)
aam
pop
sub
pusha
mov
xor
cdq
out
jno
movs
mov
jg
sti
daa
xchg
ret
push
das
push
push
cmps
push
pop
and
jns
sbb
or
stos
add
test
retw
jp
cmp
fadd
imul
stos
jnp
jmp
add
nop
inc
push
jb
das
push
sub
das
shl
test
cmp
mov
or
ret
inc
bound
pop
dec
dec
xor
leave
pop
jge
xchg
dec
leave
(bad)
(bad)
rcr
cwde
dec
cmps
and
dec
stc
ds
mov
stos
iret
pop
cmc
jns
mov
(bad)
movs
test
cwde
test
and
adc
je
imul
add
outs
and
mov
inc
xor
enter
or
int3
in
add
and
out
sub
outs
xchg
jp
test
xor
dec
movs
ds
imul
ins
adc
imul
xchg
xor
gs
stos
pop
pop
push
inc
shl
scas
or
inc
xchg
in
jnp
mov
pop
pop
jnp
call
push
fidivr
adc
daa
(bad)
jle
pop
push
lds
sar
cdq
lock
dec
sbb
push
or
mov
mov
cmp
leave
sub
sbb
push
add
test
out
aam
cs
sbb
dec
je
dec
mov
or
jg
adc
jns
sub
adc
mov
pop
sbb
ret
ss
xor
dec
jnp
shr
mov
adc
(bad)
cld
jne
sbb
dec
mov
jmp
inc
rol
int
hlt
das
mov
jl
arpl
popa
inc
pop
fist
repnz
(bad)
xlat
dec
xchg
iret
ins
std
(bad)
mov
stc
stos
jge
jg
mov
ja
xor
adc
push
jns
fcmovnbe
xlat
scas
jp
add
pop
jl
jnp
xlat
fadd
cmp
loope
xor
ror
adc
xor
popf
sub
fdiv
repz
mov
(bad)
jae
mov
std
out
out
cld
mov
jmp
shl
outs
fistp
cmp
shr
cli
fpatan
inc
out
cdq
clc
fldenv
xchg
dec
ins
pop
ins
mov
aad
shr
mov
ss
popa
ins
ret
addr16
popa
jae
xor
pop
ins
lods
call
xchg
std
popf
or
jg
shl
xchg
push
movs
pop
pop
push
jnp
inc
mov
stos
push
out
mov
adc
loop
and
jo
sbb
out
into
xchg
aad
dec
adc
add
adc
je
sub
xor
xor
mov
ds
jmp
and
int
repnz
(bad)
jae
inc
add
and
add
add
sub
je
mov
mov
or
dec
or
pop
sbb
dec
dec
cmc
test
pop
jmp
push
cdq
mov
mov
push
nop
cmp
loopne
jns
out
jb
inc
xor
dec
add
loopne
adc
and
pop
push
push
push
and
lods
call
fadd
test
mov
push
fistp
inc
fs
lods
cmps
cmp
std
xor
fild
call
inc
jns
mov
call
sbb
mov
xor
dec
and
xchg
pop
xor
icebp
mov
jns
jmp
push
pop
inc
xor
push
mov
xor
mov
std
cmp
adc
mov
dec
lsl
les
or
push
mov
leave
pushf
inc
stos
jmp
sub
push
inc
cmc
(bad)
push
icebp
cmp
ret
data16
scas
push
pusha
xor
aam
sub
outs
mov
sub
or
sbb
retf
inc
pop
xchg
and
repz
shl
outs
lods
cs
and
pop
pop
dec
test
sub
and
or
mov
shl
dec
cmps
mov
int
xor
(bad)
mov
pop
dec
repnz
push
loope
mov
pop
fwait
mov
scas
inc
or
mul
sbb
jp
sbb
or
add
push
mov
jg
jecxz
cmp
cmps
push
lahf
scas
jecxz
sbb
jle
sub
or
dec
inc
push
inc
leave
sbb
xchg
mov
cmp
sbb
add
adc
fs
adc
mov
(bad)
xchg
xchg
dec
pop
enter
mov
fcmovnu
pushf
jmp
leave
cmc
mov
cmp
jecxz
dec
xchg
mov
fidiv
and
mov
ror
cwde
mov
ja
jp
jno
test
out
mov
add
xchg
cs
pusha
push
mov
dec
dec
cmp
dec
movs
sbb
sub
rcr
push
aad
outs
or
push
ins
cli
jne
mov
popa
mov
or
js
sbb
or
pop
shl
loopne
das
movs
pop
int
int3
fs
sub
cmp
inc
cmp
jecxz
push
push
sbb
sub
in
or
fucomi
and
imul
lahf
push
mov
mov
xor
inc
mov
pop
gs
in
push
jns
or
into
rcl
and
mov
adc
sub
cld
aad
nop
xor
jae
jl
xor
imul
cmp
pop
fistp
lods
popf
add
push
xlat
aaa
ja
jmp
mov
iret
scas
scas
and
push
mov
out
dec
dec
jae
fwait
dec
mov
jne
push
hlt
(bad)
cmp
std
addr16
fsub
or
je
jl
xchg
cmps
out
xlat
(bad)
fldenv
sahf
pop
lock
arpl
(bad)
fdivr
aas
mov
cmc
std
lock
repz
fst
mov
sar
mov
out
(bad)
jg
aam
dec
sti
pop
mov
mov
lahf
scas
mov
ins
jmp
(bad)
das
in
in
clc
ret
dec
ins
push
jg
test
jl
dec
in
pop
outs
stos
sti
mov
pop
sti
sbb
mov
scas
add
lods
inc
jecxz
and
int
adc
gs
or
or
retf
mov
mul
pop
xchg
cmps
cmp
mov
xchg
sbb
adc
es
xchg
ret
pop
test
xchg
popa
dec
dec
mov
cmp
adc
add
or
lods
ret
retf
or
inc
ss
shl
add
cld
fs
xor
cs
sub
repz
cmp
ret
call
jmp
hlt
pop
movs
add
cdq
sbb
pop
je
fnstenv
jbe
xlat
sbb
mov
mov
jo
out
ds
xor
sbb
ret
sbb
or
dec
add
add
xor
xchg
ror
push
sub
push
mov
mov
xor
push
aam
in
jo
and
cwde
add
mov
(bad)
mov
pop
aas
pusha
subps
xchg
call
popa
add
aas
push
pop
pop
pop
repz
jmp
into
mov
push
repz
adc
mov
push
dec
jmp
pusha
jo
movs
sub
add
and
adc
dec
pushf
xchg
out
inc
cld
add
push
clc
shl
mov
sub
lea
xor
and
loop
fwait
push
pop
xor
adc
gs
push
and
mov
xchg
push
adc
add
jecxz
xchg
call
dec
es
push
pmuludq
xchg
xchg
adc
jmp
mov
adc
js
push
loope
xchg
jge
mov
test
dec
lock
mov
cmps
in
ret
jmp
dec
add
outs
ret
test
loope
sub
aad
mov
(bad)
(bad)
movs
daa
xchg
adc
xchg
das
shl
in
adc
pop
ficom
lock
shl
(bad)
nop
jns
ins
hlt
xor
(bad)
scas
out
mov
jl
out
and
stc
adc
daa
jae
mov
and
xchg
iret
les
jae
or
push
imul
scas
sub
mov
xor
and
pop
xor
sbb
adc
add
jnp
inc
rol
sub
mov
dec
jo
lea
into
mov
(bad)
(bad)
jmp
or
xor
xor
xchg
test
dec
jle
test
inc
mov
leave
jmp
adc
ficom
dec
add
and
int3
push
leave
adc
loop
nop
call
(bad)
cmp
movs
push
xchg
outs
sub
mov
mov
imul
xor
inc
pop
mov
mov
add
mov
int3
pusha
ss
mov
(bad)
mov
int3
leave
and
fwait
cmps
retf
stc
mov
add
inc
retf
mov
icebp
es
out
inc
stos
lea
shr
xchg
add
jnp
hlt
inc
xor
and
scas
aaa
nop
daa
ja
outs
cmp
loope
aaa
xor
je
jmp
jge
(bad)
div
shr
retf
shl
ss
imul
inc
mov
scas
pop
fst
arpl
xor
popf
xor
in
loopne
(bad)
outs
(bad)
aam
fild
dec
mov
nop
dec
inc
push
xor
mov
es
and
lea
xor
fst
xor
(bad)
out
jge
in
inc
in
(bad)
xlat
jae
out
pop
not
aad
aas
mov
daa
jg
into
ror
div
mov
xchg
fidivr
mov
out
imul
sahf
shl
test
sar
arpl
pop
sahf
and
or
repnz
mov
xor
ret
fs
or
outs
sub
repnz
shl
push
es
or
and
sub
sbb
adc
and
cs
add
mov
mov
adc
add
cmp
add
adc
push
test
push
push
pusha
sbb
imul
sahf
adc
xor
or
xchg
scas
ret
xor
(bad)
out
adc
sbb
push
popa
icebp
cmps
loop
mov
cmp
into
lods
bound
pop
bound
retf
xchg
int3
dec
mov
inc
inc
sbb
ins
cmp
and
xchg
mov
cwde
mov
push
sub
imul
fldenv
cld
imul
adc
loopne
stos
pop
fwait
ins
mov
xchg
(bad)
(bad)
(bad)
push
in
adc
xor
pusha
cmp
imul
sub
rol
call
mov
sbb
dec
and
fst
xlat
mov
rol
cmp
repz
lods
inc
cmp
fdivr
or
xor
out
lods
pop
fisubr
lods
ret
or
add
mov
fstp
mov
push
aad
lahf
repz
sub
push
and
dec
mov
mov
out
dec
and
mov
mov
std
jno
push
imul
int
sub
loop
loopne
leave
pop
adc
dec
ret
jecxz
push
mov
rol
mov
aam
test
stc
jne
sbb
jmp
jne
push
add
jmp
sub
push
addr16
sar
ret
popf
cmp
push
push
(bad)
cmp
cdq
ss
push
and
fs
into
retf
or
int3
add
cli
push
cmp
push
aad
jno
in
push
daa
xchg
pop
xchg
les
mov
and
cmp
lods
jle
sbb
push
xchg
popa
and
sbb
daa
fnstsw
out
(bad)
aaa
cmps
xor
movs
nop
dec
mov
adc
pop
in
lds
jmp
pop
cmp
movs
inc
retf
dec
mov
xor
fiadd
push
mul
jb
adc
fsub
mov
js
dec
and
or
adc
mov
(bad)
mov
push
std
push
lds
dec
sar
fbstp
scas
xor
int
(bad)
push
loope
rcr
pop
imul
dec
xchg
sub
mov
sbb
xor
fwait
(bad)
inc
out
push
stos
sub
xchg
mov
xchg
enter
mov
into
je
ret
int3
cmp
(bad)
popf
add
in
mov
xchg
push
xor
mov
mov
inc
fldcw
sbb
adc
sbb
sbb
sub
xchg
xor
cmc
xor
mov
sub
std
push
push
retf
les
cdq
out
imul
pop
add
jp
xlat
add
mov
mov
into
adc
sbb
inc
fcom
push
and
cmps
cmp
rcr
jle
outs
(bad)
cdq
ins
jg
mov
dec
fistp
sti
xlat
sub
or
jmp
xchg
outs
jns
retf
mov
sub
mov
mov
ja
add
jle
push
cmps
push
fdiv
test
inc
push
not
jl
lahf
mov
cmps
xlat
(bad)
std
xlat
aad
push
loopne
das
call
inc
mov
cmp
adc
jmp
leave
pop
popf
cmp
(bad)
xchg
stc
out
ret
xlat
jg
jnp
div
cmc
cld
fstp
mov
mov
pop
loop
push
xor
dec
aaa
aam
data16
xchg
retf
jmp
loop
cmps
push
fs
mov
lods
dec
lea
push
xchg
mov
inc
jb
lahf
call
sbb
sub
mov
fdivr
pop
clc
cs
jae
xchg
bound
gs
mov
nop
jl
sub
push
(bad)
call
add
mov
xor
mov
je
inc
mov
test
rol
inc
xor
les
sub
outs
cmc
xor
icebp
jno
mov
mov
add
xor
mov
add
cs
sub
fidiv
add
xor
enter
mov
ins
cmp
sbb
loopne
jle
push
cwde
xor
mov
call
sbb
imul
shr
jne
lock
push
fcom
dec
sbb
int
fdiv
push
sbb
xchg
fmul
inc
es
fcomp
pop
pop
xor
sub
add
loopne
fsubr
xchg
ret
je
adc
mov
jmp
push
push
bound
inc
and
pop
out
xchg
scas
bound
shl
sbb
cmc
ss
pop
imul
mov
fwait
adc
in
mov
sub
push
or
outs
sub
sbb
repz
leave
out
inc
push
xor
push
push
mov
jns
fstp
push
icebp
inc
sub
ret
adc
pusha
in
(bad)
dec
jo
inc
(bad)
loope
imul
mov
cld
jne
cmps
(bad)
push
fwait
ret
imul
loopne
stos
out
jmp
sti
jp
fisub
out
ficomp
lods
movs
push
pop
jne
xor
je
jp
add
mov
lds
jbe
les
in
cmp
cmp
mov
fimul
std
mov
pop
lods
inc
mov
xchg
shr
int3
in
fwait
cdq
imul
cmp
sbb
or
xchg
stc
mov
and
push
in
sub
int3
cmp
push
cmp
stos
scas
test
xchg
jno
push
jp
mov
sbb
jp
loop
or
int3
xchg
call
sahf
movs
cwde
or
enter
je
and
retf
pop
xor
inc
xor
jae
fcomp
xor
xor
jb
daa
push
push
cmp
dec
push
or
xor
or
xor
dec
rcl
mov
pop
loope
es
xor
mov
mov
dec
and
cmp
push
lods
xchg
add
xchg
std
push
stos
push
mov
cld
push
jg
rcr
sbb
sahf
xchg
and
jle
aad
or
fistp
(bad)
adc
les
xchg
cwde
mov
and
cmps
test
xor
sbb
repz
out
push
cwde
cmps
lock
dec
hlt
dec
xor
mov
jns
stos
and
sub
adc
add
push
outs
pusha
and
jb
imul
rol
pop
sub
retf
push
push
cmp
jmp
mov
rcl
jo
mov
add
mov
cmc
sub
push
dec
test
sbb
jl
mov
out
pushf
shl
adc
jp
repz
xchg
push
cmp
mov
je
jbe
fs
lahf
xchg
(bad)
call
jg
ja
repnz
mov
push
jl
dec
(bad)
pop
das
sbb
mov
scas
jns
jbe
jnp
fimul
adc
int
mov
lods
jns
es
ret
arpl
mov
sbb
jmp
mov
or
pop
cdq
pop
sahf
(bad)
repnz
sub
in
jnp
dec
mov
or
xor
loop
ss
jle
pop
out
lods
dec
jge
push
out
push
jmp
icebp
out
mov
std
xchg
and
cli
les
jecxz
jmp
pusha
cli
cmps
test
mov
int3
inc
xchg
lahf
in
mov
xor
jns
out
lock
sub
dec
cmc
fs
sub
mov
out
je
sub
inc
es
adc
jmp
xor
ja
or
imul
mov
dec
dec
inc
lea
add
xchg
ror
es
adc
mov
jl
mov
mov
popa
jns
call
cs
xor
imul
addr16
movs
xor
sub
mov
lea
cmp
cmp
sbb
fidiv
add
test
sbb
jbe
or
leave
clc
inc
inc
mov
mov
sub
adc
lock
and
add
xchg
icebp
in
inc
sub
pop
mov
stos
xchg
pop
xchg
jo
shr
mov
xchg
aas
sub
fmul
movs
and
aaa
cdq
pop
pop
xor
nop
dec
inc
mov
adc
test
or
sub
adc
jg
clc
popa
xor
ret
xor
xchg
pop
repnz
push
out
xchg
gs
mov
enter
jg
add
dec
mov
adc
push
dec
ins
lea
sub
mov
mov
aas
xor
retf
push
mov
add
cmp
sub
sub
jge
add
inc
dec
jns
xchg
adc
lahf
or
int3
xchg
les
icebp
rol
pop
inc
out
mov
retf
push
adc
add
and
sub
in
jne
or
dec
pop
xchg
xchg
out
bound
and
push
jns
dec
adc
loopne
add
jns
les
xor
pop
sub
mov
fisub
xchg
jl
and
xor
jle
in
(bad)
xor
dec
xor
xor
ficomp
mov
loop
add
xor
inc
cli
sbb
clc
pop
repz
or
cmp
and
push
data16
inc
adc
dec
daa
adc
pop
sbb
outs
rcl
ror
outs
mov
pop
push
or
add
adc
cmp
inc
xor
push
push
cmp
sub
call
mov
and
ficomp
(bad)
(bad)
xchg
xor
das
cdq
add
repnz
adc
sub
call
(bad)
fcomp
sbb
outs
jl
jecxz
les
mov
and
pusha
xor
add
mov
je
inc
sbb
movs
je
mov
inc
cdq
or
es
dec
adc
loopne
sti
xchg
xchg
cmp
add
xor
cwde
xchg
popa
sub
inc
sub
and
sbb
xchg
(bad)
rol
pop
fstp
fcomp
mov
or
sub
cmp
add
mov
and
push
xchg
push
dec
leave
push
xor
cli
lahf
sbb
jnp
mov
scas
stos
jnp
jle
sahf
(bad)
in
sbb
fwait
retf
xchg
adc
and
dec
push
push
adc
pop
in
scas
xor
push
mov
test
xchg
inc
call
in
cmp
(bad)
imul
cmp
xchg
mov
(bad)
xchg
pop
lock
mov
aaa
scas
push
mov
sbb
mov
mov
aas
aas
movs
jmp
in
sbb
cld
cwde
mov
mov
out
mov
sub
jg
mov
pop
sub
mov
out
mov
xchg
xchg
fistp
(bad)
iret
push
mov
pop
xchg
push
jl
jno
repz
sbb
clc
lods
aam
mov
and
cdq
sbb
sub
jmp
in
push
push
hlt
out
lods
rcl
retf
sbb
mov
lods
pop
stos
cmp
jbe
jbe
outs
je
adc
inc
mov
je
les
add
sahf
xor
inc
out
(bad)
dec
ins
jl
mov
int3
pop
mov
xchg
push
fcomip
sub
mov
dec
ficom
fadd
add
sbb
adc
xor
scas
pusha
pusha
and
ja
mov
adc
sub
push
xchg
mov
sub
cmp
scas
push
test
in
inc
movs
stos
push
push
cwde
scas
mov
call
mov
sbb
ret
sbb
xchg
retf
and
ins
xor
ficom
stc
popa
fld
and
stos
adc
push
int3
cli
bound
add
cli
inc
pop
mov
mov
push
(bad)
rol
pop
pusha
int
xchg
xchg
and
pushf
mov
sbb
imul
sbb
jb
es
jb
xchg
sub
xchg
cmps
mov
mov
ret
sub
pop
push
in
mov
cld
loope
cmp
push
loope
or
movzx
sbb
ins
mov
out
pop
ins
enter
push
adc
xchg
cmps
in
and
jno
ins
dec
jno
pop
jno
mov
xor
repnz
rcl
fsubr
adc
cli
mov
adc
sub
cmc
dec
scas
sub
add
arpl
xchg
xchg
add
aam
and
cmp
xor
add
push
popa
mov
in
xlat
ret
mov
lods
push
lods
jle
es
mov
dec
pop
enter
lea
iret
mov
jns
les
leave
jle
sbb
inc
cmp
repnz
test
jle
int3
mov
fld
xor
adc
adc
jle
cmp
xor
or
push
or
(bad)
push
mov
mov
sti
cmps
rol
add
mov
push
jo
xor
mov
add
and
add
fwait
mov
jno
mov
dec
push
pop
mov
sbb
sbb
push
stc
ds
aas
(bad)
imul
jge
(bad)
int
or
enter
dec
jmp
mov
std
xchg
int
and
jle
inc
loope
cs
and
cwde
leave
sbb
jae
jle
mov
xor
(bad)
jmp
mov
int
jl
push
jp
and
gs
mov
imul
sti
adc
hlt
pop
fs
test
ror
xchg
add
mov
mov
ret
pop
bound
push
js
inc
jle
nop
sub
mov
pop
popf
rol
xor
jmp
jo
stos
aas
fcomp
mov
sbb
mov
xor
data16
adc
inc
(bad)
xor
pop
push
push
test
call
inc
push
jle
sub
add
inc
mov
mov
xchg
inc
out
popf
lods
add
loopne
mov
dec
rol
les
in
in
shl
test
sub
pop
push
push
jno
mov
(bad)
adc
inc
clc
mov
in
ds
retf
lods
sti
mov
int
fadd
(bad)
in
push
ja
push
dec
sbb
sub
or
xor
retf
cmp
retf
pusha
gs
lods
in
xchg
daa
ss
jl
ins
(bad)
mov
pop
neg
mov
sbb
cmc
loop
xchg
pop
pop
pushf
sti
cli
jmp
dec
dec
mov
inc
into
clc
(bad)
jmp
xchg
mov
sar
ret
pop
pop
xchg
jge
jno
fisttp
stc
sahf
lock
push
data16
rol
cmp
xchg
lods
dec
inc
lea
ret
les
data16
daa
add
mov
sbb
adc
or
popa
cli
push
add
and
mov
bound
pop
xor
cwde
jp
mov
mov
gs
test
arpl
and
push
and
je
and
push
mov
add
aad
jo
jb
dec
cmp
mov
sbb
and
jecxz
add
xor
and
movhps
call
mov
jl
popa
inc
call
xchg
add
test
mov
xor
adc
inc
mov
push
fwait
mov
retf
push
fadd
jmp
sbb
adc
xlat
push
add
mov
add
dec
and
sub
mov
push
mov
xor
pusha
lea
scas
loopne
(bad)
dec
cmps
inc
leave
ins
mov
sub
ds
or
ret
mov
dec
aad
out
inc
sbb
xor
xchg
push
and
mov
aad
mov
sub
lods
and
push
lea
dec
fsubr
xor
pop
in
dec
jmp
pushf
in
pop
loope
push
test
pop
int3
pop
aam
and
add
icebp
jns
cmps
xchg
je
es
mov
push
aas
jg
js
in
mov
or
xor
fst
mov
pmuludq
mov
inc
loopne
xchg
or
movs
dec
pushf
sub
pusha
popa
mov
(bad)
and
xchg
dec
xchg
mov
sub
inc
mov
or
scas
inc
fstp
ret
add
int3
xchg
mov
leave
inc
daa
add
push
or
add
mov
jne
sbb
xchg
mov
push
mov
and
or
fiadd
fcmovnbe
(bad)
popf
xor
ins
clc
outs
pop
push
repnz
scas
xor
or
pop
inc
pop
dec
sbb
push
pushf
cwde
hlt
and
sub
sbb
add
xchg
in
mov
xor
dec
adc
adc
cmp
push
xor
inc
sbb
inc
mov
sbb
mov
cli
adc
iret
mov
sub
push
jo
xchg
imul
adc
mov
xchg
nop
or
xchg
dec
lds
pusha
icebp
pop
mov
retf
xor
add
out
repz
daa
dec
add
shl
and
inc
or
or
adc
jne
loop
pusha
cmp
in
fwait
dec
lds
mov
and
lods
(bad)
call
aaa
loopne
mov
mov
add
repnz
leave
enter
mov
push
gs
push
mov
and
rol
pop
xchg
test
cli
push
xchg
fild
ins
push
test
inc
pop
sbb
inc
sbb
and
mov
xor
jmp
sbb
nop
inc
or
dec
add
stc
rcl
mov
retf
iret
push
mov
pop
(bad)
push
test
mov
or
lods
mov
data16
adc
mov
and
aas
arpl
into
pop
xchg
scas
call
vpandn
out
pop
jmp
adc
cmp
int
loope
fiadd
das
sti
xor
rcr
or
mov
in
cli
ret
(bad)
outs
pop
aaa
jbe
push
mov
pop
pop
dec
scas
sahf
(bad)
stos
jecxz
jle
push
in
and
and
(bad)
in
int3
aad
xchg
sub
fst
cmp
in
mov
sti
xchg
std
stc
stos
call
aad
mov
sub
jmp
cld
shl
retf
xor
(bad)
std
std
fstp
cmps
mov
mov
adc
scas
pop
sbb
loop
jle
ror
dec
mov
push
sub
fwait
lea
pushf
jl
sub
imul
cli
push
pop
cld
adc
int3
mov
ror
sub
sub
stos
push
movs
xor
pop
inc
(bad)
nop
or
mov
and
inc
dec
sbb
sbb
mov
inc
sbb
xor
aam
and
scas
add
cmc
jmp
mov
scas
les
cmps
add
mov
pop
dec
jmp
xchg
mov
cmp
mov
test
cwde
and
dec
add
xchg
dec
push
test
test
lods
fnstcw
xchg
(bad)
js
(bad)
retf
dec
cmp
cdq
xchg
pop
mov
or
xchg
js
imul
push
push
shr
jb
gs
inc
loope
mov
push
dec
mov
addr16
rcr
dec
cmps
xlat
lds
jmp
pusha
add
test
add
mov
stc
les
mov
push
pop
push
pop
jmp
lock
mov
xchg
(bad)
in
in
and
xchg
pop
xchg
pusha
or
xchg
movs
or
sbb
and
and
stos
movs
lods
and
jb
(bad)
sub
into
mov
mov
mov
retf
and
add
int3
stos
adc
(bad)
mov
mov
arpl
ja
jecxz
ds
inc
xchg
scas
(bad)
rcl
jp
cmp
retf
mov
or
mov
xor
push
aad
ds
sti
adc
popa
cmp
cld
push
es
xchg
or
mov
inc
inc
outs
in
test
mov
pop
scas
add
lods
xlat
adc
dec
push
xchg
outs
cmp
pusha
add
add
jo
sar
in
cmp
add
ss
sar
sub
jle
mov
sub
push
retf
mov
and
mov
lds
stc
lods
or
add
aad
int3
fsub
mov
jmp
call
call
sbb
add
mov
adc
xor
inc
out
jnp
leave
jge
jge
icebp
pop
or
(bad)
(bad)
or
sbb
mov
call
add
repz
xchg
add
sbb
inc
jmp
adc
add
imul
inc
dec
adc
inc
jmp
pop
push
adc
les
les
fldcw
adc
shl
xor
mov
pop
add
loope
shr
call
adc
or
push
pop
clc
jecxz
les
iret
repz
sub
cs
cmps
sub
xchg
ret
(bad)
mul
outs
pop
(bad)
cs
mov
jb
lea
int3
cs
out
enter
xchg
push
dec
xchg
mov
cmp
cs
jle
pop
retf
jle
int
mov
scas
arpl
or
sbb
mov
push
push
fadd
adc
pop
test
push
jle
inc
aam
mov
movs
mov
and
inc
lds
test
xchg
icebp
and
inc
stos
dec
pushf
ror
int
mov
das
mov
mov
das
imul
lods
sbb
jb
stos
mov
cmc
adc
dec
push
in
jne
sub
xchg
cld
xor
outs
inc
xor
xor
sub
jp
rcl
mov
scas
popf
fld
mov
(bad)
jns
stc
ret
icebp
mov
mov
adc
push
daa
add
lods
jno
scas
xor
cdq
std
fdiv
mov
jmp
jmp
into
pop
sub
ret
aam
std
cdq
test
sbb
std
lock
in
or
jmp
or
mov
arpl
adc
pusha
or
shl
cmp
cwde
sbb
add
ret
rol
sbb
push
fs
(bad)
scas
push
arpl
cli
mov
rcl
sub
ins
call
jmp
mov
push
sbb
inc
sbb
int
fadd
xchg
call
sbb
aam
xor
or
push
(bad)
push
lds
rcl
inc
lds
retf
fcom
gs
mov
mov
xchg
xor
jo
loop
cmps
xor
adc
call
pop
mov
jecxz
inc
xor
jp
test
xchg
adc
sbb
pop
cs
lds
pop
es
and
sbb
mov
push
lahf
xor
sti
jnp
js
mov
and
popf
mov
(bad)
mov
ret
jae
pusha
scas
test
pusha
sbb
jbe
and
mov
jmp
les
dec
push
das
or
fist
ss
dec
inc
out
lds
sub
and
lahf
push
(bad)
(bad)
xlat
or
adc
sahf
and
(bad)
jbe
sbb
fs
adc
and
mov
xor
mov
xchg
add
cs
pushf
push
inc
pop
add
dec
add
dec
and
sbb
int3
xor
in
ds
cmp
push
push
sub
out
ficom
or
xor
aaa
pop
jmp
ret
jne
sbb
sub
push
neg
xor
arpl
mov
xor
xchg
mov
(bad)
pop
xchg
cmp
inc
add
push
push
mov
in
(bad)
rol
sub
icebp
outs
es
dec
dec
cs
dec
xchg
fmul
stc
dec
adc
or
add
fimul
cwde
lds
adc
test
les
inc
sbb
cmp
or
cdq
fcmovne
xchg
or
xor
inc
out
sub
add
sub
or
stos
pop
jnp
push
dec
mov
mov
jge
data16
lock
add
jp
popa
push
mov
adc
retf
loop
in
fs
jle
mov
or
mov
call
sub
cmc
adc
xchg
pop
push
push
loope
out
test
fbld
data16
mov
(bad)
sub
mov
dec
int3
push
sbb
push
xchg
and
fnstcw
dec
daa
jb
inc
out
add
or
or
test
pop
sbb
adc
xchg
dec
mov
pop
test
adc
neg
pop
pop
cmc
xchg
arpl
mov
mov
popa
retf
adc
test
mov
sub
xchg
jmp
imul
div
pop
lods
jmp
or
jns
gs
sar
fidiv
jbe
fdiv
repz
outs
pop
dec
aad
jmp
xchg
mov
pop
cmp
ret
call
loopne
sbb
sub
cli
or
pop
sbb
cmp
cdq
gs
mov
mov
(bad)
(bad)
xchg
fild
les
jmp
leave
mov
mov
xlat
xchg
xchg
jl
dec
leave
addr16
jae
mov
daa
push
xchg
jl
pop
jmp
hlt
daa
pop
jmp
cmp
lahf
mov
jg
hlt
out
pushf
cwde
inc
inc
inc
les
jo
ret
adc
sub
clc
jge
inc
mov
shl
fbstp
stos
xchg
sbb
and
xor
ror
push
or
hlt
test
sub
dec
(bad)
ss
xchg
inc
mov
dec
xchg
outs
je
push
in
and
popf
js
cmp
pushf
in
in
fld
sbb
retf
ds
add
add
idiv
add
and
mov
push
adc
and
pop
or
sbb
dec
sub
(bad)
aas
icebp
push
adc
or
or
mov
or
mov
lock
pop
mov
dec
pop
rol
adc
(bad)
lods
mov
enter
sbb
or
fmul
lods
fsubr
jbe
ins
mov
sbb
pop
mov
sbb
js
xor
ffreep
leave
jnp
ss
push
int3
xchg
nop
pop
test
rcr
fsubr
aad
pop
jno
push
icebp
pushf
jbe
ficomp
push
inc
mov
sub
js
shr
shl
iret
sbb
sti
ins
mov
pop
sub
stos
dec
pop
cmps
sbb
daa
cmp
cmp
adc
dec
dec
push
and
or
or
daa
push
add
lahf
sbb
sbb
sahf
adc
adc
cs
pop
pop
leave
sbb
icebp
jecxz
jo
push
mov
push
add
mov
adc
loopne
popa
leave
adc
stc
(bad)
movntq
xchg
fst
retf
js
dec
jle
test
stc
and
pop
retf
es
fst
outs
dec
xchg
lds
daa
mov
jle
loop
mov
xor
shl
cmp
dec
inc
div
add
jae
mov
repnz
je
jl
rcr
int3
xchg
xor
cmp
add
fwait
or
dec
fs
xor
or
xchg
cmp
cmp
push
and
mov
test
imul
out
mov
nop
pusha
mov
push
push
loop
out
enter
repnz
jmp
xor
and
loopne
pop
jl
jnp
jns
loopne
cld
add
frstor
lock
jb
out
cmp
push
nop
or
addr16
push
dec
dec
adc
sub
cmp
xor
psrlw
imul
in
into
sbb
pop
mov
jmp
fincstp
dec
or
aas
mov
pop
and
pop
push
mov
dec
adc
xchg
mov
bound
inc
stos
rol
aaa
retf
adc
mov
mov
adc
fidivr
jecxz
pop
jp
jge
iret
aaa
ss
inc
jg
call
mov
cs
(bad)
xchg
mov
in
dec
xchg
ret
xchg
mov
in
cli
fdiv
gs
jns
jmp
lahf
fidiv
jbe
mov
cmp
xchg
sub
mov
retf
inc
pop
mov
xor
jbe
(bad)
pop
pop
xor
imul
jecxz
adc
(bad)
xchg
mov
(bad)
mul
jno
outs
pop
and
sbb
aas
cmp
loop
test
jns
gs
mov
mov
(bad)
cmp
inc
repnz
mov
sub
inc
in
pop
push
fs
mov
jge
jle
outs
inc
bnd
xchg
in
sbb
sbb
and
fmulp
aam
cdq
pop
mov
and
aas
and
lock
jmp
jo
rcr
pop
or
test
shl
inc
and
add
push
ja
ins
stos
dec
loope
cli
nop
jmp
xor
pop
xchg
pop
add
call
mov
into
adc
add
mov
xchg
add
pop
add
ret
int3
popa
popa
mov
pop
dec
push
sti
or
lods
push
mov
add
sbb
sub
leave
sti
add
mov
add
test
test
and
bound
ins
push
sbb
clc
std
shr
lahf
jmp
sub
push
sbb
mov
sbb
arpl
in
and
aam
in
ficom
mov
inc
pop
jle
sub
mov
or
aam
dec
aam
push
(bad)
in
push
test
icebp
or
cwde
retf
rol
cs
outs
push
enter
fs
adc
rol
sbb
idiv
sub
inc
xchg
or
and
enter
cld
push
inc
sub
mov
dec
mov
mov
into
push
loop
mov
mov
xchg
movs
sub
ds
inc
add
(bad)
mov
aad
mov
mov
cmp
cmp
push
dec
add
sub
addr16
mov
mov
loopne
pusha
cmps
pop
es
and
sub
call
xchg
mov
movs
lea
mov
rol
outs
push
es
pop
fist
fnstenv
loope
dec
scas
loopne
enter
xchg
popa
jmp
movs
js
out
or
or
adc
retf
add
sbb
push
(bad)
xchg
inc
mov
xchg
pop
inc
cdq
inc
dec
mov
or
mov
cmp
and
xor
paddusb
mov
xlat
xchg
inc
xor
cmp
fadd
rcr
xor
movs
and
or
sub
push
pause
jne
sahf
lahf
pop
mov
rcl
add
add
les
cmp
add
test
xor
(bad)
adc
dec
jno
jmp
cmps
inc
mov
jmp
(bad)
jecxz
and
iret
push
call
mov
rol
or
sti
or
cdq
div
hlt
sbb
mov
adc
inc
mov
jmp
pop
repnz
jge
outs
cli
iret
orps
ds
mov
lock
inc
xor
and
inc
or
out
or
inc
in
les
jmp
mov
sub
fmul
leave
mov
cmp
std
in
call
or
or
bound
movs
jmp
mov
ret
test
push
push
rcr
jnp
dec
(bad)
imul
out
adc
(bad)
lods
xor
pop
push
mul
xchg
stos
out
icebp
repnz
in
mov
xor
cmc
loopne
scas
sahf
cmp
add
aaa
sub
dec
xrelease
cmp
cmp
or
out
cmps
jne
pusha
push
fnstsw
sub
dec
sub
or
bound
icebp
dec
retf
stos
bound
and
adc
mov
data16
icebp
rcl
dec
rep
pop
push
in
sbb
ds
das
(bad)
jecxz
(bad)
daa
pop
adc
dec
(bad)
xchg
mov
cdq
ds
push
pop
push
stos
(bad)
adc
enter
add
xchg
clc
or
mov
leave
lock
iret
mov
ret
push
xor
sub
and
push
cmp
ror
xor
retf
neg
arpl
fs
test
mov
push
loopne
rcl
push
inc
sbb
or
xor
mov
mov
jge
xchg
aam
xor
jbe
xor
inc
sbb
sub
mov
add
adc
ins
sub
sub
dec
addr16
(bad)
xor
test
sbb
xchg
movs
pop
xor
ret
inc
mov
or
and
mov
ins
sbb
jmp
cmp
mov
push
lods
push
sub
xchg
test
xchg
ins
xor
retf
arpl
pop
ror
stos
inc
jne
adc
inc
sbb
sbb
dec
jo
mov
test
jmp
rcr
inc
fs
repz
arpl
adc
jo
lock
pop
sbb
aaa
adc
add
in
mov
pusha
test
scas
rol
inc
jp
dec
adc
arpl
imul
movs
(bad)
icebp
(bad)
pop
cs
cwde
pop
jo
in
in
mov
cmp
pop
cmps
shl
ja
mul
loope
push
xchg
or
stos
or
mov
stos
sbb
xor
add
sub
nop
cdq
hlt
clc
mov
bound
mov
(bad)
fs
add
mov
dec
cmp
popa
adc
push
adc
cs
sbb
xor
xor
mov
xchg
daa
cmps
aaa
imul
dec
add
ret
add
cmp
pop
mov
push
inc
in
xchg
pop
sub
out
cmp
mov
out
pop
add
jecxz
fadd
xor
ror
xor
xor
bound
fiadd
sbb
mov
pop
jbe
add
jle
lea
loop
cs
pop
popf
ss
cld
xchg
psllw
aaa
and
pop
aas
imul
or
push
jne
repnz
gs
icebp
pop
and
mov
adc
adc
pop
sbb
sbb
cmps
sub
push
sub
dec
inc
pop
adc
or
int
xchg
adc
int
lock
inc
mov
ror
mov
push
dec
shl
add
jmp
pop
or
int3
cmp
xor
jle
std
adc
(bad)
cdq
xchg
loopne
mov
imul
cmp
cli
nop
jecxz
fcom
outs
lock
jecxz
pop
cld
imul
movs
add
loop
test
jmp
mov
add
or
sbb
or
in
sbb
cdq
clc
cmps
adc
pop
fcmovnb
in
pop
xchg
sti
sti
retf
retf
pop
pop
imul
inc
xchg
xchg
mov
in
ins
add
add
ret
arpl
test
dec
(bad)
xchg
out
sbb
stc
cmps
mov
mov
xchg
xchg
inc
mov
push
dec
jp
jmp
mov
sbb
xchg
(bad)
aas
pop
fdiv
retf
adc
inc
stc
dec
aaa
mov
into
xor
lock
in
sti
inc
and
test
lahf
pop
nop
jle
dec
cmc
mov
stos
or
cmp
out
jne
enter
mov
pop
rcr
cvtps2pi
jns
jle
leave
mov
sub
cmp
test
jg
daa
cld
pusha
pop
cli
cmp
inc
aaa
hlt
fs
ins
dec
sub
stos
ds
add
sbb
mov
xor
add
test
add
movs
(bad)
xchg
fst
xor
xchg
add
or
adc
push
(bad)
icebp
dec
in
mov
and
xor
lods
cmove
pop
movs
out
push
mov
cld
lds
add
ins
xor
pop
stos
ins
lahf
cs
gs
push
mov
nop
dec
pusha
or
xor
pop
push
and
mov
mov
push
mov
gs
mov
dec
sbb
gs
mov
jmp
cs
mov
ja
cmp
aaa
popa
jl
pusha
mov
je
jns
xor
mov
or
xchg
pop
or
xchg
add
sub
xchg
int3
pop
sahf
pop
movs
hlt
jp
push
inc
push
pop
ret
push
arpl
data16
int3
push
popa
jmp
or
(bad)
mov
push
jmp
fnstsw
jg
fxch
mov
ret
ja
and
sbb
dec
mov
mul
test
jno
setae
or
bound
xchg
shr
adc
daa
lods
cmp
enter
add
jge
fwait
push
out
xlat
add
add
add
popa
call
and
push
sub
pop
lea
xchg
inc
test
jecxz
(bad)
sub
dec
sub
jge
pop
or
push
xchg
mov
loopne
and
div
dec
lods
es
push
(bad)
or
aam
jae
into
popf
leave
mov
pop
dec
mov
push
aam
popf
jo
bound
or
xchg
leave
cmps
pop
or
xchg
or
adc
retf
add
cmps
retf
retf
mov
retf
mov
addr16
test
add
pop
in
xchg
sub
mul
rol
mov
jb
mov
mov
inc
(bad)
mov
mov
adc
sbb
retf
or
fst
mov
push
sti
rcr
sub
mov
xchg
inc
fidivr
mov
and
out
and
in
mov
ftst
aam
rcr
xchg
sbb
stos
cmps
or
jmp
jg
lahf
add
icebp
sbb
pop
mov
ins
sti
ror
loope
outs
and
(bad)
push
pop
and
or
pop
movs
prefetch
push
cwde
stos
movs
aam
out
inc
xor
fld
sub
add
pop
and
ret
mov
jg
jge
pop
call
sbb
cmc
dec
into
xchg
xchg
mul
mov
sbb
sub
xor
mov
cdq
in
xor
rcr
cwde
(bad)
pop
pop
xchg
jp
push
jmp
fstp
adc
mov
sub
dec
xchg
pop
add
adc
idiv
test
pop
lahf
fyl2x
fcomi
sti
inc
sub
es
mov
mov
mov
or
out
mov
cld
pusha
jae
ja
push
(bad)
fcomi
cmp
dec
pop
pop
push
cmc
shl
test
nop
xor
(bad)
ficom
mov
jecxz
sub
scas
jns
pop
pop
push
repz
in
ret
mov
bswap
dec
aas
cmp
std
call
cdq
(bad)
movs
pop
sbb
aam
jle
pusha
cli
out
mov
aad
test
stc
int3
mov
xchg
mov
mov
lds
and
leave
mov
leave
sub
mov
mov
add
pop
retf
xlat
add
xor
inc
mov
adc
inc
and
add
adc
dec
nop
xlat
and
call
fdiv
rol
and
jecxz
sbb
cmp
push
push
adc
mov
aaa
and
in
and
or
sub
and
pop
xor
add
jno
das
rcpps
push
loopne
cmp
ret
jo
jecxz
push
daa
cmp
mov
pop
rol
das
adc
ror
sub
movs
push
inc
and
inc
pop
push
inc
jb
cmps
stc
or
daa
pop
pusha
ds
mov
xor
adc
sti
push
jns
jne
jno
xchg
jmp
lahf
inc
and
outs
inc
bound
inc
pusha
mov
sbb
das
loop
jmp
lea
popf
sub
clc
cmp
cli
rcl
xchg
pop
pusha
lock
or
mov
mov
add
sbb
daa
lods
inc
loop
sahf
jg
int3
iret
arpl
adc
pushf
xor
push
xor
jo
ret
fidiv
imul
repnz
and
add
pop
add
pushf
rcr
mov
pop
sub
movs
inc
push
scas
xlat
and
stos
fsub
jecxz
add
mov
dec
mov
sbb
mov
lods
inc
scas
sbb
xor
nop
push
mov
jmp
push
jns
jge
in
jp
jne
hlt
fst
mov
and
in
je
mov
or
sbb
xlat
retf
push
or
nop
std
add
push
lods
(bad)
mov
or
dec
scas
xor
push
adc
popf
fmul
shl
retf
loopne
in
sbb
push
xor
retf
movs
dec
xchg
scas
fs
sbb
retf
jle
into
add
mov
loopne
pop
sub
jno
mov
sbb
xor
jge
sbb
mov
add
call
lods
sbb
jae
and
pop
or
js
fiadd
shl
push
mov
xor
or
aam
rol
inc
dec
add
and
xor
ja
pop
inc
sbb
push
dec
cmps
dec
into
shl
jg
xor
pusha
mov
mov
jmp
mov
sbb
sub
retf
add
sbb
outs
and
push
fdivr
enter
mov
pop
mov
sub
arpl
test
retf
jg
fsubr
mov
cmp
xor
mov
mov
adc
adc
or
(bad)
in
cmp
test
xor
push
arpl
fidiv
lods
mov
addr16
icebp
mov
jg
mov
loop
out
fistp
cld
jmp
(bad)
sbb
repz
mov
pop
cmp
mov
jg
retf
dec
jl
imul
test
jg
outs
dec
or
xchg
inc
aam
inc
adc
xchg
cli
sar
int
fistp
inc
add
mov
(bad)
or
add
call
mov
xor
inc
(bad)
cmps
enter
xor
mov
push
add
and
mov
movs
adc
sbb
pop
or
mov
mov
mov
add
test
je
jmp
lods
test
test
sub
les
and
psraw
xchg
adc
aad
ins
sbb
ja
movnti
add
or
push
xchg
daa
into
inc
cmps
cmps
add
mov
gs
xor
cld
jne
sbb
jecxz
or
push
xor
mov
scas
xlat
ret
loope
cmps
cmp
mov
ins
mov
mov
fwait
push
xchg
push
xor
cdq
or
cld
repnz
push
sub
and
inc
cmp
stc
loopne
out
push
fnstenv
cmp
xchg
or
sti
mov
cmp
add
ds
jmp
adc
fsub
mov
pop
cmp
sbb
ins
gs
loopne
(bad)
sbb
popa
jns
dec
adc
inc
xchg
mov
lods
(bad)
xchg
outs
push
cs
mov
pusha
stos
xchg
inc
and
and
xchg
push
imul
das
mov
retf
jne
inc
sub
gs
mov
pop
and
ins
cmps
movs
xchg
mov
gs
add
or
lar
fisttp
xchg
add
xor
in
pop
jb
jmp
repz
sbb
push
add
fs
push
leave
fwait
(bad)
div
stc
outs
mov
mov
imul
das
cld
xor
xor
rcl
or
mov
and
sub
mov
sub
or
loope
sbb
stos
pushf
test
adc
popf
and
jno
sgdtd
imul
xor
es
ss
sbb
or
ffree
xchg
cwde
sahf
or
cmp
mov
xchg
jle
jbe
mov
cmp
aaa
sub
mov
das
rcr
xchg
pop
push
xor
mov
rcl
into
and
cmp
pop
jo
jns
sub
mov
jp
test
jp
cmp
iret
dec
gs
std
cwde
call
dec
imul
mov
cmp
adc
cmp
xor
arpl
xor
add
and
inc
sbb
call
xchg
ror
popf
test
call
in
call
jb
push
bound
jmp
rcr
test
jecxz
jne
push
addr16
xor
xchg
inc
outs
sbb
out
addr16
cmps
add
ficomp
int3
sbb
add
mov
pusha
jmp
cmp
inc
jmp
dec
stos
(bad)
(bad)
imul
push
neg
movs
ret
jg
scas
dec
xchg
int
or
repnz
lods
sahf
fistp
(bad)
idiv
cld
jmp
lahf
mov
mov
ror
fs
mov
and
xor
aad
mov
sub
pop
test
xchg
jo
stc
rcr
mov
push
leave
mov
leave
addr16
ja
(bad)
ja
inc
jbe
ficom
and
int3
stos
mov
into
or
inc
gs
jb
lea
adc
fadd
xchg
or
rcr
add
xor
add
cs
ret
sbb
or
enter
lahf
fdivr
dec
push
rcr
bound
or
or
movs
movs
scas
pop
mov
push
sub
loope
lahf
daa
shl
mov
loop
daa
jmp
or
sti
push
or
and
sti
in
ins
dec
test
sub
xor
sti
pop
jmp
push
push
mov
sbb
mov
and
dec
retf
xchg
push
adc
adc
std
add
in
or
mov
rcl
add
lahf
and
sub
mov
les
pop
inc
sbb
push
in
dec
dec
jp
jbe
and
lock
sbb
cmp
int3
and
add
das
mov
or
clc
jae
sub
nop
inc
jp
dec
pop
sbb
mov
sbb
(bad)
adc
add
mov
jb
cwde
mov
sbb
pop
pop
lods
push
xchg
dec
adc
cdq
mov
add
mov
dec
popa
xor
push
js
xchg
xchg
mov
or
mov
inc
jae
sub
js
and
push
dec
lods
cmp
add
mov
pop
scas
stos
(bad)
repz
and
xchg
lds
out
cmovns
(bad)
test
xchg
fadd
dec
es
shl
cmp
or
fadd
mov
loop
pop
mov
mov
or
es
mov
add
icebp
loope
pop
adc
fadd
lods
aam
pop
pop
push
popa
xchg
mov
and
shl
mov
and
mov
fild
or
pop
ror
sar
sub
cmp
xor
rcr
push
inc
cli
push
mov
in
mov
sbb
jbe
icebp
movs
cmps
je
sub
(bad)
nop
clc
pop
(bad)
sbb
push
adc
test
xor
add
jo
movs
cmc
and
(bad)
xchg
in
lods
js
inc
retf
pop
lds
jg
pop
enter
cmp
lods
arpl
pop
test
das
push
push
or
mov
xor
pusha
dec
adc
sub
mov
ret
or
and
jnp
mov
pop
mov
sub
add
dec
push
pop
or
fiadd
(bad)
loop
or
xchg
dec
int3
mov
js
push
test
mov
add
mov
lds
adc
cmps
sub
repz
icebp
jge
fild
mov
mov
or
push
mov
push
adc
pop
enter
sbb
pop
jmp
or
adc
in
call
mov
pop
sbb
cli
test
aas
sub
and
add
sub
inc
add
dec
(bad)
cmp
jg
ret
inc
stc
pop
pop
and
int
loope
cdq
arpl
arpl
pop
(bad)
out
fadd
loopne
pop
(bad)
fnstsw
adc
mov
mov
add
cld
repnz
push
iret
in
ret
sbb
xor
out
scas
fild
cmc
sub
jle
jl
(bad)
push
push
jg
imul
outs
mov
xchg
clc
rcl
in
mov
bound
pop
sahf
mov
es
push
sbb
aaa
pop
bswap
cs
dec
out
sar
cli
jecxz
iret
sub
sbb
jae
cdq
pmuludq
cmps
aaa
mov
cmp
and
sub
mov
dec
mov
imul
pushf
lock
data16
mov
call
popf
cs
cdq
pusha
xchg
adc
ret
sbb
jl
ins
adc
and
inc
inc
push
jbe
stos
shl
mov
cmp
aam
shl
scas
mov
xlat
mov
call
inc
mov
mov
push
imul
jns
cmp
inc
jne
sahf
push
push
push
push
dec
rcl
sub
mov
or
out
arpl
sbb
dec
pop
(bad)
lock
sbb
add
mov
lods
pop
jne
aad
jl
or
pop
movs
adc
pop
stos
scas
jmp
xor
sub
retf
dec
pop
pop
push
repz
jae
adc
loop
xlat
sbb
push
lock
loopne
pop
mov
aas
ror
adc
and
fld
(bad)
or
adc
xchg
inc
pop
test
out
(bad)
and
arpl
out
and
retf
jae
push
dec
mov
xchg
mov
xchg
scas
call
call
arpl
outs
pushf
add
loopne
dec
adc
sbb
shl
ja
xchg
out
test
repnz
xor
mov
push
aad
xchg
cmp
retf
data16
cmp
outs
add
loope
retf
dec
mov
es
or
xchg
jne
sbb
or
sbb
xchg
pop
sbb
and
mov
fcmovu
adc
cmp
add
cmp
aas
xchg
aaa
or
out
or
jns
fmul
adc
sbb
push
std
mov
xchg
daa
adc
aas
xor
fisttp
sbb
inc
push
jle
xchg
stc
sub
test
dec
test
into
ins
pop
mov
repz
add
mov
dec
add
mov
jae
(bad)
sub
in
aam
dec
xchg
cmp
jb
and
and
mov
(bad)
xor
cmp
loop
loop
add
shr
and
test
mov
scas
pop
jg
in
bound
stos
xor
retf
je
cmps
rol
push
lds
mov
jge
jo
push
ret
daa
sub
adc
sar
dec
cmp
add
dec
xchg
dec
arpl
xchg
push
or
or
ret
das
retf
push
nop
cmps
mov
mov
cli
adc
xor
(bad)
enter
mov
mov
sbb
(bad)
int
test
sti
xchg
mov
lods
(bad)
fstp
fst
adc
retf
sbb
mov
or
pop
rol
mov
das
jae
sub
mov
or
mov
lock
test
in
es
jmp
and
out
mov
mov
mov
cs
xchg
sbb
ret
mov
daa
ss
out
mov
ins
imul
inc
lods
int3
adc
enter
test
popf
fdiv
shl
stc
iret
sub
pop
pop
push
mov
pop
jnp
ficomp
xchg
sbb
mov
imul
call
jmp
(bad)
sub
movs
pop
fwait
cdq
jns
das
icebp
js
hlt
jmp
imul
out
inc
paddb
fisub
xchg
ja
dec
lahf
xchg
add
popf
jmp
dec
pop
sub
xor
xchg
dec
pop
and
pusha
inc
and
mov
add
sbb
add
add
adc
xchg
sti
inc
inc
js
jg
mov
sbb
inc
xor
pop
inc
adc
aam
inc
icebp
les
movs
dec
and
jbe
xor
ror
ror
or
lea
movs
cmp
(bad)
inc
dec
and
pop
xchg
arpl
cdq
out
or
ror
les
xchg
adc
xchg
inc
pop
sbb
pop
xor
mov
push
sub
cmp
add
push
dec
sub
out
mov
adc
sbb
pop
add
mov
mov
mov
sbb
jb
das
jno
push
sub
ja
cmp
shr
sbb
cmps
cmp
lds
fild
dec
sbb
(bad)
loopne
mov
mov
xor
cmp
jnp
jmp
pop
sti
movs
adc
mov
bound
fiadd
cs
or
pop
fidivr
dec
xlat
call
mov
sub
retf
mov
pop
dec
mov
pushf
pop
repz
inc
sbb
test
pop
adc
xlat
inc
fcmovnb
fcomp
xlat
mov
pop
bound
mov
adc
ret
xor
sub
fmul
sbb
lds
pop
inc
push
mov
add
push
push
mov
push
clc
mov
xchg
xlat
enter
dec
xor
pusha
add
inc
fld
xor
lock
adc
xchg
push
push
(bad)
xor
add
jl
rol
adc
push
scas
add
mov
pusha
lea
pop
sub
test
add
xchg
iret
inc
push
xor
int3
mov
rol
adc
and
jmp
lds
adc
pusha
mov
je
ret
mov
sbb
or
and
jns
adc
inc
xchg
stos
xchg
inc
ret
sub
out
push
or
mov
inc
jecxz
(bad)
leave
sub
es
mov
sbb
test
jge
and
adc
and
mov
retf
ret
xor
in
mov
adc
mov
push
push
nop
cmps
push
jmp
mov
mov
out
mov
dec
lock
ret
add
(bad)
out
cmp
in
out
sub
movs
cmp
xchg
xchg
or
or
mov
(bad)
loopne
fbld
sub
add
loop
and
mov
push
push
cmps
xchg
xchg
imul
pushf
rcl
jae
int3
pop
lea
jl
ficom
pop
arpl
dec
sbb
xor
add
mov
lea
fs
mov
(bad)
jbe
mov
mov
fidiv
pushf
fbstp
mov
cs
cli
in
jmp
jmp
dec
imul
mov
jae
mov
add
dec
push
in
sub
cmp
mov
test
imul
fdiv
cli
shl
out
xchg
mov
cdq
cdq
xor
xchg
and
retf
xchg
adc
(bad)
push
(bad)
int
and
sti
add
iret
test
mov
jb
sbb
in
jmp
mov
cmp
jecxz
test
pop
ret
rol
imul
in
jb
adc
adc
cmps
push
mov
xor
and
cmp
loop
pop
jne
mov
add
pop
ja
xchg
jge
and
xor
sub
or
add
popa
retf
sbb
and
sub
int3
pop
mul
das
push
pushf
stc
sub
cwde
loope
pop
test
adc
dec
pushf
(bad)
mov
ret
cs
sar
sub
xchg
dec
enter
adc
not
test
or
in
push
test
test
movs
or
mov
mov
jle
mov
dec
pop
inc
cmp
and
push
and
add
cmp
mov
push
add
icebp
xchg
xor
xor
ret
and
add
xlat
lock
retf
mov
lods
jecxz
xchg
retf
sub
xchg
push
inc
mov
pushf
mov
dec
imul
in
jle
push
and
lock
xor
dec
push
inc
addr16
sub
(bad)
sbb
adc
jle
mov
fisttp
push
xchg
in
push
add
inc
sbb
push
in
jge
std
and
daa
ficom
adc
mov
lahf
sbb
outs
adc
dec
add
xchg
call
dec
(bad)
jle
dec
adc
into
(bad)
rcr
scas
or
das
mov
loope
and
sbb
mov
cld
push
mov
cld
adc
adc
int
xchg
icebp
mov
(bad)
xor
add
(bad)
out
lahf
or
pusha
xor
mov
retf
mov
fst
test
push
push
adc
mov
and
inc
jb
push
fidiv
in
mov
ins
cmp
push
rep
dec
jl
jns
dec
test
pop
gs
jecxz
cs
xor
add
adc
xor
mov
cmp
jo
aad
inc
stos
mov
inc
inc
mov
and
test
or
lea
mov
mov
ret
cmp
je
adc
test
and
inc
xor
out
dec
(bad)
movs
add
jmp
mov
mov
adc
xor
mov
and
push
and
push
jno
jmp
mov
icebp
pop
mov
popf
pop
call
mov
fiadd
out
dec
bound
jae
int3
lock
sub
retf
inc
inc
push
outs
dec
jo
jecxz
lock
imul
xor
inc
loop
cmp
mov
mov
mov
mov
mov
fisttp
das
sbb
cmps
pushf
add
inc
ret
sbb
scas
cmp
xor
loop
(bad)
lock
call
hlt
lea
icebp
out
cmp
arpl
out
pop
icebp
or
push
add
pop
cmp
push
out
addr16
xchg
add
repz
adc
in
dec
arpl
into
(bad)
repz
mov
stc
(bad)
cmps
lahf
outs
lods
sti
lahf
aad
(bad)
mov
push
ds
ja
inc
push
sub
pop
cmps
mov
je
in
(bad)
mov
fsub
sahf
cdq
jg
push
fst
retf
adc
and
sub
or
fld
add
(bad)
popf
mov
into
in
xor
xchg
mov
inc
in
and
xor
jmp
clc
sub
push
push
test
dec
mov
and
push
pop
dec
arpl
xchg
add
shr
adc
loope
(bad)
push
push
dec
sub
movs
ret
pop
pop
pusha
cmp
pop
leave
sbb
stc
int3
mov
pop
sbb
sahf
xor
test
mov
push
call
test
inc
push
cmp
mov
pusha
or
mov
(bad)
ror
sbb
add
ffreep
pop
xor
xlat
add
push
adc
js
mov
xchg
ror
mov
adc
test
test
and
pop
fsubr
sbb
test
sar
inc
lahf
jne
jmp
push
call
or
pusha
cmp
xchg
daa
ins
in
jl
mov
aaa
lds
pop
icebp
rcl
inc
push
and
jo
(bad)
loop
inc
inc
das
mov
cmp
cmp
pop
jne
dec
out
xchg
hlt
test
sub
mov
mov
push
cmp
jmp
xchg
icebp
jge
std
mov
cmp
loop
dec
(bad)
jecxz
inc
dec
add
or
movs
dec
dec
add
cwde
add
leave
jbe
push
push
psrld
or
into
xchg
(bad)
pushf
push
xchg
or
in
retf
xchg
loop
add
data16
leave
jo
or
loopne
sbb
retf
cmc
add
add
add
sbb
fadd
cmp
mov
mov
sbb
xchg
mov
out
test
pop
cmp
(bad)
mov
movs
sbb
gs
repnz
push
stos
mov
mov
gs
sbb
fs
loop
add
mov
arpl
les
scas
int3
xor
js
fisub
jnp
daa
js
mov
lods
mov
mov
pop
outs
imul
in
adc
sahf
and
xchg
inc
mov
pushf
push
test
cmp
sbb
jmp
in
dec
aas
inc
xor
mov
xor
adc
add
pop
lods
inc
test
jecxz
mov
test
retf
jp
or
mov
pusha
mov
xor
ret
gs
sbb
pop
push
arpl
add
sub
and
or
mov
je
push
xor
push
in
mov
add
jmp
mov
out
pop
add
cs
or
daa
pop
mov
inc
sbb
stc
dec
push
dec
jmp
pusha
popf
bound
sbb
sub
out
fcmovb
mov
in
jns
cmp
jae
repz
pop
dec
xchg
sbb
ret
xchg
scas
push
adc
pusha
es
mov
out
repz
cmp
iret
sbb
jle
icebp
xor
jle
pop
ds
rcl
sub
aad
mov
jb
fistp
xchg
and
test
out
(bad)
push
jle
cwde
push
jl
cmc
add
rcr
fdivrp
mov
sbb
mov
cld
iret
popa
movs
pop
pop
xchg
std
(bad)
and
pop
rcl
ficomp
cs
or
imul
out
xchg
sbb
nop
jnp
jbe
xchg
in
ss
cli
fwait
cdq
icebp
addr16
inc
imul
pop
and
iret
dec
sahf
fcomp
push
mov
mov
adc
mov
test
jl
leave
jp
inc
cmp
inc
xchg
(bad)
mov
lea
cdq
push
push
pusha
nop
xlat
mov
push
imul
pshufw
mov
rol
inc
or
ins
in
stos
fmul
lods
pop
mov
mov
inc
test
or
pop
inc
push
or
jo
xchg
push
cmps
mov
gs
jno
lea
sub
xchg
sbb
pop
fcmove
sbb
pop
jbe
icebp
pop
repz
mov
out
call
mov
ss
mov
push
push
inc
retf
das
cmp
js
dec
nop
push
icebp
fcomp
repz
loopne
inc
js
lods
mov
or
mov
adc
mov
arpl
jno
loope
sbb
mov
arpl
xor
mov
sti
sub
sbb
repz
adc
mov
mov
das
loope
mov
pop
jnp
inc
outs
or
mov
mov
mov
push
add
jp
cs
push
cmps
ror
pop
mov
test
sahf
aam
mov
pusha
or
out
push
sbb
ins
xchg
pop
cwde
jno
add
loope
cdq
es
or
pop
xchg
sub
cmps
loope
iret
push
cdq
adc
test
add
mov
out
call
call
adc
add
push
arpl
pop
push
jae
and
inc
fcom
aad
fs
in
mov
jp
cs
add
int
adc
inc
inc
dec
mov
xor
or
add
sbb
shl
pop
inc
or
or
pop
xchg
cwde
jne
mov
cwde
imul
pop
call
mov
clc
dec
adc
test
sub
fs
add
cmps
mov
leave
pop
inc
sbb
sub
adc
jnp
jbe
xor
sub
test
aad
data16
push
adc
pushf
test
call
sub
sub
push
pushf
pop
adc
xlat
xor
(bad)
push
aad
dec
test
or
sbb
leave
pop
aam
stc
cmps
jae
imul
adc
xchg
pushf
stc
mov
ret
or
push
movs
jb
enter
and
jbe
push
cmp
stos
add
xlat
rcr
fdivr
or
in
or
push
loop
(bad)
in
(bad)
pop
out
add
or
es
xor
cmp
loopne
lds
fldcw
dec
je
repz
mov
jne
lea
rcr
push
cdq
cdq
jb
sub
sub
adc
retf
sbb
adc
cmp
lods
retf
xlat
xchg
push
ds
mov
sar
or
jns
das
add
out
or
je
out
outs
iret
push
int3
(bad)
(bad)
lods
stc
loope
(bad)
sbb
jne
arpl
mov
mul
std
(bad)
aaa
push
jmp
test
out
lods
sub
(bad)
mov
pop
pop
xchg
cmp
arpl
call
mov
popf
fstp
pop
es
popa
ja
jmp
sub
dec
stos
mov
hlt
out
mov
out
sbb
aas
aas
sti
leave
xchg
hlt
daa
xchg
adc
(bad)
mov
sub
and
(bad)
mov
cmps
adc
aad
jno
sub
xor
jb
jo
ja
pop
fimul
int3
add
stos
das
leave
out
lahf
in
cli
sbb
sbb
mov
je
adc
inc
pop
popf
mov
or
inc
xor
or
push
jle
or
int
add
mov
adc
out
cli
add
mov
or
xor
pop
push
rol
adc
xchg
cmp
imul
jne
inc
inc
adc
xor
xchg
mov
jbe
sub
xor
inc
xchg
jmp
add
dec
inc
clc
cmp
dec
jg
cld
sub
adc
test
jecxz
mov
mov
sahf
test
push
cmp
enter
mov
cwde
cmp
sbb
rep
dec
inc
adc
add
ret
xor
add
scas
lods
jmp
popa
test
pusha
mov
and
jecxz
in
jecxz
dec
xchg
adc
add
jmp
mov
mov
xor
cld
cmc
mov
into
mov
xor
loope
push
push
push
pop
fs
jae
sub
mov
out
mov
std
inc
out
imul
shr
lahf
cmp
bound
pusha
shr
push
add
inc
sbb
imul
adc
and
(bad)
push
in
nop
icebp
add
and
lods
xor
iret
rcl
popa
push
(bad)
pop
retf
sub
add
imul
add
mov
push
loopne
or
gs
inc
mov
dec
cmps
fstp
dec
xchg
inc
adc
pop
and
pop
leave
sbb
and
fstp
getsec
loop
adc
mov
and
ret
push
jnp
test
mov
and
dec
(bad)
sbb
jb
mov
xchg
push
and
cmp
mov
ror
xchg
pusha
test
or
or
xchg
retf
dec
cld
outs
dec
cli
test
add
cmp
shl
retf
mov
loop
and
cli
mov
and
inc
sub
minps
aam
adc
xor
add
xchg
push
scas
push
cli
xor
loop
push
mov
or
pop
mov
ret
sbb
fbld
push
fnstsw
test
mov
cli
push
ret
mov
mov
dec
sbb
mov
out
imul
add
mov
gs
jno
adc
loopne
(bad)
mov
jge
inc
fadd
int
xor
pop
lea
stos
and
mov
mov
push
adc
into
xchg
pop
mov
arpl
sub
lods
retf
sub
ror
xlat
(bad)
int3
sub
jecxz
jle
in
(bad)
cdq
cmc
enter
ret
adc
push
adc
push
push
jge
imul
inc
mov
inc
out
push
(bad)
cmc
pop
push
rcr
cmc
dec
and
addr16
stc
rol
jno
or
cwde
mov
add
sbb
jge
test
out
sbb
call
call
push
(bad)
hlt
cwde
jmp
in
mov
cmp
push
js
cdq
or
cmp
or
xchg
fnstenv
jno
cmp
mov
mov
cli
hlt
mov
(bad)
jbe
loop
xor
jbe
outs
outs
mov
push
pop
shl
pop
fsub
fistp
scas
xor
sbb
or
xchg
inc
(bad)
add
inc
or
cwde
(bad)
es
add
call
pop
add
test
mov
dec
and
dec
inc
sub
sub
or
lock
lock
jmp
pop
dec
fiadd
add
call
inc
cmps
shl
inc
lahf
xchg
mov
inc
lea
jb
pop
test
adc
ret
sub
stos
enter
sahf
stos
int3
push
lds
js
push
push
sbb
dec
mov
or
fmul
jmp
cmps
jno
loope
ret
mov
xchg
jo
inc
jne
jae
jbe
dec
pop
(bad)
lock
repz
dec
pop
xchg
stos
sub
js
mov
cwde
int3
inc
scas
daa
fisub
(bad)
jb
add
inc
sub
push
sbb
ss
jmp
lods
push
fdivr
and
add
iret
push
js
and
dec
call
push
stos
(bad)
xchg
or
imul
adc
mov
xor
add
inc
lods
pushf
or
pop
mov
out
pushaw
adc
jl
jle
sbb
xchg
sbb
xchg
mov
dec
in
in
fcomp
fistp
(bad)
call
jmp
enter
or
ror
xor
cdq
adc
mov
pusha
gs
in
cmp
lea
mov
adc
rcr
xchg
and
jo
fmul
add
xor
xor
or
sub
or
or
sbb
pushf
or
loop
loopne
sbb
rcl
js
pop
dec
movs
inc
inc
xor
mov
adc
adc
aaa
cmp
adc
dec
call
push
(bad)
sub
jb
call
xchg
stc
int3
jmp
std
fwait
or
inc
int
inc
mov
inc
push
mov
and
es
ror
mov
or
fisubr
retf
mov
ret
add
out
fwait
xchg
movs
sbb
js
fiadd
or
inc
dec
ja
xchg
mov
aam
or
adc
jp
push
mov
inc
or
mov
clc
pushf
dec
loope
sub
(bad)
loopne
dec
inc
mov
jge
xor
outs
adc
push
ret
ffree
mov
push
inc
pushf
sub
inc
mov
(bad)
in
test
or
es
sub
mov
sti
test
ins
sbb
and
dec
or
cmp
xchg
stc
ficom
ins
xchg
push
data16
gs
lea
xchg
adc
cwde
dec
mov
gs
fs
mov
repnz
mov
sub
mov
lds
enter
or
xor
xor
mov
test
sbb
arpl
cs
sub
dec
call
push
cld
loope
xor
jge
into
or
in
add
icebp
mov
adc
test
jmp
cmps
jbe
in
cwde
xchg
lods
leave
add
out
dec
ins
ret
imul
scas
das
std
retf
jg
pushf
std
xchg
shr
push
push
aad
xor
hlt
(bad)
call
push
sbb
repz
movs
mov
mov
imul
in
mov
aad
rcr
push
iret
or
xchg
leave
jl
dec
neg
ror
cmp
pop
ja
lahf
push
out
ins
lods
je
ins
int
test
push
les
sbb
dec
inc
std
mov
leave
mov
adc
jbe
popf
adc
push
adc
xor
mov
cmp
xor
bound
sti
add
sbb
mov
lds
dec
adc
mov
xor
and
sub
es
ins
loope
les
jle
push
fwait
mov
pusha
and
sub
test
enter
adc
xchg
mov
(bad)
call
(bad)
mov
adc
(bad)
xchg
xor
or
sbb
xchg
lock
pop
sub
push
dec
enter
(bad)
xchg
jmp
xor
(bad)
fldcw
ja
mov
cmp
sub
addr16
rol
jb
lea
jle
inc
dec
push
test
jmp
ret
ret
jp
pop
sub
jo
pop
in
arpl
xlat
(bad)
lahf
add
lock
pop
push
scas
pop
adc
or
(bad)
mov
adc
ins
repz
or
mov
enter
pop
sub
popa
loope
stos
stc
and
xchg
pop
test
aaa
mov
leave
xchg
rcl
sbb
retf
xor
inc
lock
mov
cmovle
xor
push
mov
cmp
and
aad
rcl
(bad)
jns
lahf
or
xchg
sbb
mov
cs
sbb
imul
push
fbstp
mov
pop
imul
mov
jecxz
dec
or
dec
or
test
sub
js
(bad)
xlat
cmp
jmp
iret
js
cmp
or
xor
add
xchg
enter
xchg
rcr
fs
gs
pusha
pop
out
xchg
jp
add
scas
inc
xlat
test
inc
sbb
ins
and
adc
pop
icebp
inc
cmp
xchg
jo
rol
inc
add
rcl
sbb
aaa
add
sub
push
icebp
test
sub
scas
jecxz
xchg
ret
dec
xchg
or
jo
pop
adc
add
sahf
cmp
leave
scas
jo
dec
or
ja
ds
mov
jmp
add
repz
wbinvd
cmc
inc
inc
mov
fsub
test
adc
xchg
jmp
jge
movs
pop
imul
bound
dec
fisub
inc
mov
mov
mov
mov
inc
shl
push
inc
mov
enter
jecxz
inc
fisubr
in
jle
mov
or
xor
aad
outs
push
out
test
mov
pop
aas
sub
cli
pushf
jnp
movs
dec
out
inc
je
mov
mov
fild
addr16
nop
mov
inc
jl
rcr
xchg
bound
inc
inc
inc
xchg
gs
jecxz
xchg
and
int
or
icebp
in
push
mov
pop
pop
shl
int3
ficom
sub
xchg
xchg
xor
loop
add
jno
pop
push
adc
inc
jmp
sbb
mov
in
mov
arpl
std
jecxz
aad
xlat
into
pop
mov
xor
jl
(bad)
(bad)
ins
cli
shl
jne
cmp
stc
jg
aam
(bad)
jmp
(bad)
fcmovnbe
cld
mov
mov
xchg
std
repnz
xchg
pop
sbb
mov
fistp
stos
stc
pop
imul
mov
jne
pop
push
jp
jg
cmps
call
jmp
fstp
sbb
into
sbb
cmp
imul
leave
(bad)
scas
push
popf
xlat
pushf
cmp
scas
push
xchg
push
push
jb
jne
mov
or
xor
add
mov
pop
inc
scas
sbb
les
js
mov
ret
dec
cmp
cmps
mov
jmp
dec
jp
and
xchg
dec
test
mov
sbb
inc
sbb
out
adc
cmp
adc
or
sbb
mov
push
retf
xor
stos
in
or
pushf
inc
outs
xor
dec
pusha
int3
inc
(bad)
out
mov
add
adc
pop
js
xor
leave
aaa
mov
sar
xchg
inc
pop
cmp
xor
lahf
xchg
inc
pop
in
mov
pop
push
jmp
aaa
mov
mov
inc
enter
mov
mov
rcl
jo
xchg
and
push
jb
les
adc
dec
pushf
cmp
sbb
lods
std
ret
xchg
imul
test
(bad)
sbb
ds
xor
cmp
ficomp
cmp
ret
fwait
sahf
mov
loopne
gs
xor
mov
push
dec
test
movs
fs
(bad)
(bad)
hlt
cmc
lea
inc
retf
mov
(bad)
cwde
adc
push
leave
adc
and
mov
ret
aas
adc
xchg
cmp
xor
xchg
inc
je
pop
ss
repnz
jecxz
loop
sub
ss
pop
push
push
mov
push
mov
adc
ret
js
into
movs
and
inc
ss
cs
xchg
inc
xor
xor
into
rcr
retf
in
cdq
push
inc
test
or
push
mov
movs
(bad)
bnd
sub
adc
jno
push
mov
rcl
test
aam
scas
ror
lds
aaa
imul
xchg
pop
aad
sub
xor
push
movq
add
adc
ins
aam
sub
stos
jne
xor
sub
std
cmps
icebp
mov
and
sub
jmp
cs
inc
mov
je
scas
(bad)
(bad)
mov
mov
xor
leave
xor
(bad)
lods
pop
sub
xor
ret
fdivrp
mov
push
test
xor
sub
mov
les
jno
(bad)
leave
add
xor
fldenv
push
push
rcl
jbe
daa
popf
push
out
(bad)
push
mov
cli
in
sar
dec
xor
outs
les
cdq
mov
dec
cli
mov
push
lahf
cwde
pop
sti
repnz
ficomp
push
sub
mov
add
push
sbb
outs
sub
pop
push
movs
xchg
mov
xchg
cwde
sbb
aam
gs
std
jo
std
test
aas
mov
leave
stos
mov
dec
or
(bad)
push
out
xor
mov
push
call
loope
(bad)
mov
stos
mov
mov
out
repnz
sbb
div
(bad)
cld
test
mov
lods
fsubr
icebp
arpl
in
jns
xor
push
iret
push
imul
das
jae
ins
pop
retf
and
push
loop
mov
(bad)
(bad)
pop
call
mov
arpl
dec
cmp
and
mov
sbb
mov
pop
fmul
pop
stos
bound
jns
les
or
popa
call
imul
adc
(bad)
push
add
xchg
nop
jo
jb
xor
jnp
push
lock
inc
pop
lahf
mov
xchg
jg
dec
mov
add
sahf
adc
mov
ret
pop
xchg
lods
fadd
sub
sbb
jbe
jg
xchg
inc
(bad)
imul
test
mov
inc
outs
addr16
mov
stc
push
xchg
jg
scas
push
aas
leave
add
in
push
and
pop
push
mov
movs
sub
lds
cmp
and
imul
xor
inc
neg
and
add
xchg
mov
push
cmp
cmp
add
add
and
cwde
dec
add
xchg
loope
nop
push
mov
daa
push
fcomip
dec
xor
(bad)
mov
jo
daa
aam
mov
jo
js
and
in
arpl
stos
add
lds
push
or
pop
push
and
mov
std
mov
jbe
mul
jg
mov
sbb
push
jno
bound
push
push
je
test
scas
sub
or
sahf
jl
adc
rol
nop
dec
(bad)
test
aaa
pop
mov
add
xchg
mov
xchg
lock
mov
cmp
test
sub
loope
add
jg
jmp
pushfw
les
pusha
stos
aaa
dec
fist
out
lods
xchg
add
pop
pop
push
sub
xor
add
add
pop
add
adc
pop
mov
xchg
cwde
sub
push
fwait
loopne
xchg
cmp
sbb
xor
inc
loop
cs
add
push
outs
loopne
push
test
in
jae
mov
and
test
sub
push
mov
movs
push
and
mov
mov
xor
sub
push
inc
(bad)
sub
or
mov
stos
sbb
jae
in
sahf
addr16
sub
push
and
cli
test
inc
push
mov
out
pushf
jne
call
push
jg
enter
popf
add
jo
retf
push
adc
outs
fcom
mov
or
aaa
mov
fdivr
inc
mov
mov
adc
fimul
push
(bad)
mov
in
mov
xchg
inc
cdq
or
les
jmp
out
outs
mov
adc
ror
stos
and
movs
and
add
add
(bad)
add
sbb
mov
push
cmp
push
(bad)
push
xchg
jl
imul
jne
xchg
mov
push
mov
stos
out
jl
dec
test
mov
push
xchg
jge
xor
test
pop
stc
int
call
in
arpl
fistp
stos
push
fcom
out
popa
and
into
xchg
(bad)
push
inc
adc
dec
mov
(bad)
or
je
in
sub
out
clc
lds
push
add
fild
ror
mov
xchg
jge
mov
jb
ins
push
test
sub
and
push
cmp
cwde
push
pop
sbb
jmp
imul
imul
push
cmp
or
iret
(bad)
jecxz
jnp
xchg
fnstcw
xor
pusha
adc
and
clc
push
inc
in
fs
push
inc
cmp
stos
fdivr
shl
and
stc
lds
je
jb
neg
scas
in
mov
repnz
cdq
(bad)
jne
shr
or
sbb
dec
xor
mov
and
ret
xor
mov
adc
repz
jg
pop
pop
fmul
mov
js
and
call
sub
mov
push
aas
pop
cmps
ret
inc
adc
xor
std
inc
sbb
cwde
and
aam
out
imul
xchg
loopne
xor
adc
xchg
ins
sbb
loopne
das
paddusb
pop
cmp
or
jle
or
outs
add
int
push
inc
cli
mov
sub
sar
call
pop
jb
pop
dec
sti
xor
movs
and
hlt
fisub
mov
stos
in
xor
or
je
push
xor
jg
retf
dec
inc
test
call
sbb
or
jp
add
xor
dec
push
xor
and
xor
les
dec
sbb
sahf
sub
and
sbb
mov
mov
out
adc
dec
cmp
movs
sub
and
cmp
lods
push
xor
jno
inc
xor
rol
xchg
pop
mov
dec
and
pop
sub
push
mov
dec
mov
leave
fild
movs
jo
or
(bad)
movs
sub
jge
cli
(bad)
mov
gs
inc
call
sub
pop
or
push
jb
les
mov
popf
nop
mov
into
jnp
div
jle
xor
call
sti
dec
icebp
inc
fnstsw
rcr
cli
jle
cmp
push
repz
popa
pusha
cmp
hlt
xchg
shr
test
test
retf
push
test
imul
or
pop
ds
loope
into
push
mov
rol
mov
out
dec
inc
iret
ror
xchg
mov
push
mov
mov
inc
mov
push
xlat
out
sbb
out
jmp
or
sahf
pop
nop
cld
aam
stos
das
sub
jle
test
mov
aam
pop
sub
outs
jmp
mov
xor
int
ins
mov
inc
cmps
and
(bad)
rcr
lods
call
jg
ins
aad
cs
aas
jbe
popa
movs
cld
mov
mov
stos
lods
lods
aas
fcomp
in
cmc
mov
pop
push
std
movs
movs
stc
cmps
jnp
pop
addr16
aas
mov
hlt
retf
stos
imul
jae
cmp
cmp
mov
jne
fistp
stc
mov
lock
jae
xchg
jne
xlat
xchg
test
dec
inc
mov
xchg
or
inc
push
lds
in
retf
dec
pop
rcr
mov
pop
repnz
fnstcw
movs
scas
in
dec
pop
fst
mov
jl
test
mov
jne
shr
jb
sahf
call
bound
pushf
xchg
cmp
sbb
sbb
add
and
(bad)
(bad)
nop
stos
test
repnz
or
jge
xor
dec
lds
add
(bad)
js
xor
mov
cmp
fisubr
xor
mov
adc
inc
in
xor
mov
inc
mov
mov
sub
imul
push
dec
test
inc
es
sub
scas
mov
jb
in
lods
push
sbb
cmp
mov
sbb
sbb
repnz
call
pop
mov
mov
pop
pop
lock
jg
nop
sbb
xchg
cmp
pusha
mov
js
jae
(bad)
dec
mov
mov
add
jmp
adc
xchg
(bad)
xchg
push
jg
(bad)
xor
leave
pop
sbb
repz
xchg
retf
enter
lock
pop
jl
pop
les
xor
rol
cld
cmp
shl
xor
imul
inc
xchg
and
fiadd
loop
enter
push
or
sbb
mov
dec
or
xchg
adc
rcl
movs
add
test
fmul
dec
sbb
jo
mov
push
daa
push
xor
test
pusha
xor
push
xchg
inc
ret
mov
mov
shr
bound
lahf
dec
movs
(bad)
xchg
xchg
mov
sub
cmp
popf
add
pop
add
cdq
dec
into
dec
movs
dec
call
sbb
jb
mov
cmp
rcr
les
or
push
inc
push
sbb
and
fs
addr16
mov
sbb
xor
push
dec
xchg
cwde
(bad)
in
mov
xor
xor
les
cli
mov
dec
adc
inc
pop
pop
cmps
add
or
add
scas
cdq
pop
push
(bad)
imul
out
ret
pop
out
and
scas
std
mov
out
(bad)
xor
jg
std
je
inc
jns
dec
mov
and
mov
mov
add
inc
push
arpl
mov
mov
push
dec
dec
dec
call
cld
daa
mov
adc
push
hlt
push
mov
pop
inc
(bad)
xor
sahf
addr16
(bad)
push
pop
inc
xchg
iret
mov
(bad)
icebp
or
lahf
pop
cmp
jp
inc
mov
ja
mov
inc
inc
sub
xor
mov
leave
addr16
pop
ret
or
das
lods
push
lock
inc
aad
imul
jnp
fwait
repz
int3
cmovle
mov
inc
mov
icebp
jmp
fidivr
adc
inc
int
(bad)
hlt
in
adc
in
mov
fist
(bad)
in
xchg
das
lods
lods
cld
cld
repnz
aas
sub
cld
aaa
xlat
push
jg
jns
pop
sub
pop
xchg
call
cmp
pushf
cld
stc
in
mov
int
mov
cs
les
push
ds
cmp
push
jg
mov
int3
fld
fincstp
or
fistp
mov
sub
inc
clc
mov
les
add
loopne
rcl
aaa
imul
gs
loop
or
push
clc
pop
inc
fidiv
ins
jno
cmp
mov
jge
cmps
sbb
mov
add
pop
mov
cwde
gs
pop
ds
repnz
mov
ror
xchg
fcmovne
or
mov
sub
sbb
dec
prefetchw
or
mov
dec
push
xor
inc
loop
adc
pop
pop
invd
pop
and
nop
sbb
xor
gs
push
mov
test
icebp
dec
fs
add
sbb
mov
mov
pop
xor
pop
mov
xor
sbb
stos
add
stos
push
xchg
mov
jge
or
movs
retf
cmp
push
xor
(bad)
or
dec
and
lahf
mov
inc
scas
les
ror
mov
outs
mov
das
sbb
pop
xchg
iret
pop
loop
pop
je
mov
cmp
mov
sti
jg
mov
inc
ja
mov
(bad)
cmp
xchg
jno
jno
push
sub
pop
sub
cs
rcr
inc
inc
add
cmps
repz
xchg
ds
inc
cdq
dec
(bad)
loopne
add
call
mov
and
xchg
dec
xchg
loopne
in
clc
sahf
push
bound
repnz
jbe
daa
sbb
xor
clc
addr16
and
push
xor
mov
fwait
jno
and
inc
mov
and
daa
mov
outs
and
pop
cmp
xchg
mov
xchg
push
data16
ds
mov
lods
jo
push
mov
dec
out
aam
pushw
hlt
repz
sub
mov
and
gs
data16
fmul
lds
lods
repz
mov
jmp
lods
add
push
test
dec
mov
test
mov
add
mov
mov
cmp
leave
fcmove
fsub
enter
iret
cwde
mov
inc
push
mov
pop
sbb
movs
xchg
mov
mov
mov
add
mov
outs
cwde
xchg
xor
adc
imul
or
mov
mov
xlat
fsqrt
inc
call
test
movs
mov
push
es
cmp
and
mov
mov
mov
sub
jb
push
rol
test
es
js
push
shr
mov
retf
jmp
add
dec
rcr
mov
gs
jno
or
cdq
popa
or
add
scas
and
push
jmp
outs
mov
and
popa
arpl
mov
out
sub
fcomp
mov
xchg
ins
pop
jmp
fild
(bad)
scas
fwait
aaa
jbe
jl
xor
fwait
call
aam
jbe
sbb
ja
jbe
pop
out
push
cmp
test
iret
sub
(bad)
(bad)
repz
mov
sti
jle
push
in
xlat
push
push
xchg
xchg
out
lahf
pop
pop
ja
inc
stc
pop
push
hlt
inc
xchg
cdq
jmp
xor
inc
mov
inc
push
hlt
xchg
out
ins
jge
cmp
mov
hlt
in
aad
mov
adc
jmp
pushf
retf
fwait
mov
xlat
xchg
(bad)
cs
sbb
dec
cmp
fs
adc
jp
pusha
ficomp
js
cs
and
mov
pusha
enter
movs
test
inc
push
repnz
jecxz
test
mov
mov
in
test
icebp
ins
jmp
je
in
sahf
jl
mov
mov
mov
adc
ins
in
out
and
xor
xchg
das
mov
sub
imul
pushf
add
sub
jmp
icebp
add
xor
sub
and
adc
push
mov
dec
adc
jmp
jo
pop
sahf
lock
push
or
imul
push
dec
jp
mov
hlt
push
dec
or
add
jbe
xor
and
pop
add
mov
xchg
jae
jmp
jg
inc
dec
mov
loop
sub
or
ja
cwde
sbb
adc
arpl
and
fstp
clc
lock
ret
mov
retf
push
fwait
inc
jnp
xor
jge
push
scas
dec
inc
call
push
test
data16
and
push
pop
jns
sbb
imul
pop
sub
imul
imul
sub
int3
push
push
xchg
gs
pop
mov
cmp
mov
retf
es
mov
out
(bad)
jle
mov
and
sbb
xor
jmp
fnstcw
dec
or
jnp
stc
push
adc
loopne
(bad)
in
dec
and
je
mov
cmp
mov
cmps
inc
jge
xchg
add
jno
push
xchg
mov
inc
popf
aad
mov
xor
popf
ds
and
ret
mov
shr
push
xor
mov
retf
(bad)
imul
bound
leave
sub
pop
scas
ror
mov
and
enter
mov
icebp
mov
pop
ins
repz
cdq
cmps
test
push
push
jne
inc
rcr
ror
pop
lods
mov
mov
push
cli
sbb
jns
fsub
test
xchg
push
dec
xchg
in
push
push
and
dec
inc
jg
(bad)
es
int
push
in
and
int
inc
and
fisub
xchg
sub
cmp
push
sbb
arpl
jno
inc
inc
repz
lods
int3
jle
dec
xor
mov
sub
es
adc
jmp
rcr
push
fs
les
dec
pop
sbb
push
cmps
sbb
add
or
and
fst
or
in
ins
mov
sbb
inc
cmp
cmp
fstp
mov
jle
inc
ret
jg
stos
(bad)
cld
dec
test
mov
mov
addr16
and
or
std
dec
sub
cmp
test
call
cli
loop
mov
rcr
mov
xchg
lods
ss
mov
sub
lods
or
pusha
(bad)
adc
rcl
outs
addr16
jecxz
mov
cwde
outs
sahf
adc
cmp
clc
test
lock
adc
sub
xor
iret
cmc
scas
cmps
rol
lahf
jbe
mov
iret
add
dec
movs
sbb
test
popf
mov
or
xor
daa
dec
sub
jl
data16
mov
add
pop
(bad)
(bad)
lock
add
ret
mov
xchg
fadd
repnz
cmp
retf
or
cmp
adc
stos
cwde
popa
mov
xchg
mov
jbe
cdq
out
push
pop
test
inc
mov
and
jo
adc
shr
jno
test
xor
jmp
ret
cli
or
and
mov
inc
neg
out
push
jg
rcr
cmps
cwde
mov
bnd
push
adc
sar
sahf
adc
inc
hlt
pop
adc
xchg
retf
ins
and
rol
dec
mov
add
pushf
or
jo
jnp
or
or
repnz
nop
adc
xchg
and
sub
push
ds
(bad)
xor
xor
loop
imul
cmp
add
data16
pop
mov
jae
lds
movs
popa
xor
cmps
lock
lock
addr16
lods
and
fisttp
rol
dec
cmps
mov
mov
cmp
mov
dec
pop
ins
xor
les
mov
call
xor
gs
bnd
or
xchg
repnz
rol
push
mov
sbb
push
xor
test
cmp
mov
pusha
ja
movs
xchg
inc
cmp
and
aam
cmp
sbb
mov
lds
out
push
inc
push
mov
cmp
call
sbb
and
push
xchg
mov
daa
fild
jle
std
aad
imul
call
pusha
add
int
fucompp
call
pop
adc
and
fild
sub
jnp
jmp
sar
mov
inc
xor
in
das
fadd
jae
add
xchg
adc
xchg
fistp
adc
nop
cmp
daa
sub
or
jecxz
mov
mov
pop
mov
cli
scas
mov
sub
nop
add
inc
outs
jb
ins
rcl
and
lock
in
xor
mov
aaa
and
mov
les
(bad)
movs
ins
mov
cmp
es
outs
cld
and
mov
adc
mov
jmp
xor
data16
or
lods
or
adc
and
js
inc
mov
pop
mov
pusha
imul
test
fsub
cs
cmp
bound
sbb
fwait
addr16
(bad)
imul
stos
pop
mov
inc
(bad)
js
xlat
out
dec
lods
sti
int
xor
xchg
iret
sub
in
xchg
push
cmp
dec
cld
lds
gs
pop
pop
icebp
shl
cld
xchg
icebp
fsub
xchg
lahf
pop
pop
test
mov
jb
xlat
push
ins
xchg
dec
inc
sbb
pop
adc
xchg
int
loope
retf
jnp
jnp
xchg
mov
cmp
les
retf
rcl
fcom
fpatan
jmp
dec
stos
lds
xchg
xchg
mov
das
xchg
and
arpl
jmp
out
jmp
(bad)
enter
and
das
idiv
xchg
and
inc
cmp
inc
mov
push
pop
and
and
shrd
icebp
lock
or
adc
push
test
mov
push
inc
rcr
in
pop
jmp
cmp
xor
push
sbb
fisttp
push
jae
mov
pop
mov
popf
xchg
or
xor
clc
cmp
cmp
shl
cmp
daa
int3
push
lds
xor
out
jge
movs
aas
fdivr
iret
test
sbb
adc
call
lods
nop
popf
inc
and
pop
dec
nop
adc
mov
cli
sbb
das
movs
sub
add
mov
shl
xor
add
imul
mov
cdq
js
adc
xor
sbb
and
inc
arpl
xchg
xchg
pusha
xchg
xchg
adc
pop
mov
cmc
adc
call
sar
sub
sbb
enter
ins
stos
or
call
cmp
mov
rcr
je
enter
scas
push
ret
jbe
mov
test
adc
inc
pop
adc
test
mov
xlat
or
push
retf
mov
jne
and
cmp
jbe
inc
je
sub
inc
push
or
adc
and
mov
test
imul
(bad)
pop
mov
cmp
add
ret
rcr
in
pop
inc
sub
int3
test
das
ss
popa
add
xchg
mov
jno
stos
inc
dec
sbb
sbb
dec
push
sub
jnp
jo
mov
test
repnz
inc
mov
faddp
fld
sti
mov
mov
xchg
or
add
shr
xchg
push
cmps
xchg
mov
test
jb
jmp
mov
xchg
mov
xor
ins
pusha
outs
mov
cmp
push
mov
fnstsw
out
jmp
inc
and
cmps
cmc
mov
xchg
jbe
scas
dec
test
stc
out
pop
outs
stos
cli
cli
cli
xor
jg
dec
jmp
in
mov
or
jno
test
aas
xor
dec
clc
int
imul
imul
jge
mov
sub
neg
in
pop
sub
int
mov
push
scas
(bad)
adc
outs
hlt
pop
jge
cmp
scas
imul
pop
shl
push
fidivr
xor
dec
gs
test
stc
push
xor
mov
iret
or
xor
enter
mov
repnz
xchg
xchg
loope
cmp
scas
adc
push
or
fdiv
dec
mov
pusha
xchg
jb
push
cld
jge
retf
xchg
stos
loop
push
neg
test
and
cmp
(bad)
aam
push
int3
fisub
jae
push
dec
push
jecxz
int3
push
add
xlat
adc
inc
aas
inc
test
cdq
ja
jl
frstor
mov
or
add
xlat
push
movs
jo
xchg
xor
or
or
fwait
sub
add
add
outs
and
push
mov
push
ret
pop
inc
or
add
shr
(bad)
xor
idiv
sub
pusha
nop
sbb
inc
sbb
call
adc
pusha
xor
cdq
or
loopne
pop
call
inc
scas
xchg
inc
sbb
pop
imul
stos
pop
mov
aam
mov
xor
ret
icebp
or
jge
and
das
int3
xchg
or
aad
ja
imul
loope
inc
ins
aad
sub
stos
xor
adc
jge
repnz
scas
movs
imul
or
pop
mov
pop
jmp
pop
dec
adc
ret
pop
mov
xchg
fcomp
test
sahf
jge
adc
add
dec
nop
push
sub
lea
js
sbb
push
mov
shr
push
loope
call
pusha
cmp
fwait
test
leave
mov
pop
outs
add
jae
cmps
leave
sbb
test
sbb
cld
xchg
test
jmp
ret
push
sub
dec
adc
add
add
cmp
cs
fld
rcr
mov
push
push
rol
or
cdq
enter
sub
(bad)
shld
daa
icebp
int
jne
mov
push
mov
paddd
hlt
(bad)
pop
sbb
mov
ficom
and
ds
idiv
pushf
les
(bad)
inc
fnstenv
jae
iret
int3
mov
xor
std
loopne
out
imul
mov
mov
scas
adc
int3
cmp
ins
scas
shr
sub
xchg
mov
mov
jmp
fst
out
enter
cmp
pop
aaa
pop
push
ss
push
mul
sti
push
cmp
stc
push
add
pop
retf
retf
aad
sbb
jp
mov
mov
pop
sbb
xor
out
js
sbb
in
add
cmc
mov
xchg
(bad)
(bad)
cwde
or
or
push
out
cmovs
xor
inc
pop
add
bound
out
mov
aam
imul
sub
lods
pop
cli
cmp
leave
nop
dec
shl
xchg
add
cmps
pusha
jo
lods
mov
out
xor
sbb
mov
xchg
loope
aas
jnp
push
test
dec
jl
add
jle
and
add
aaa
fadd
(bad)
mov
pushf
pcmpgtw
std
push
dec
jl
movs
xor
xchg
dec
test
sbb
xor
pop
or
sub
fist
and
mov
xchg
pusha
dec
or
mov
popa
adc
cmp
inc
dec
cmp
hlt
sub
adc
dec
imul
adc
cmp
retf
mov
ss
and
mov
stos
into
daa
inc
jmp
adc
mov
adc
pop
je
jns
adc
rcr
ja
out
call
daa
sub
test
add
mov
adc
cmp
ficom
sbb
push
push
test
les
popa
inc
push
pop
test
bound
fsubr
mov
nop
mov
aam
push
cmp
inc
cmp
cdq
xor
mov
or
push
in
sub
cmc
dec
std
std
pop
add
adc
mov
and
add
or
xor
sti
dec
sub
shl
ss
lahf
mov
ret
adc
push
mov
ss
mov
cmp
jae
repnz
mov
xchg
(bad)
fnsave
jg
mov
cmps
(bad)
and
sbb
sti
test
(bad)
cs
cmp
cmp
fwait
icebp
in
inc
gs
cmp
jbe
add
retf
lea
pop
mov
aaa
xchg
imul
into
lds
mov
adc
(bad)
push
les
sbb
call
ja
outs
imul
aad
mov
sbb
push
pop
shr
retf
aam
mov
or
ins
push
gs
(bad)
and
pusha
mov
mov
cmps
pop
or
rcl
add
sbb
adc
inc
cmps
cmps
dec
mov
data16
mov
jmp
or
test
pop
adc
fsub
push
jbe
bound
sub
cli
sbb
pop
nop
add
les
xchg
mov
cld
pushf
xchg
dec
adc
mov
add
fs
cmp
xor
(bad)
test
fwait
daa
(bad)
out
jb
adc
push
sbb
js
aam
mov
jo
xchg
xchg
xor
jno
lea
movs
and
pusha
leave
retf
test
movs
leave
xor
cwde
and
jae
mov
push
gs
sbb
inc
pusha
lock
inc
rcpps
pop
inc
mov
out
adc
or
xchg
popa
sub
arpl
sar
mov
sbb
mov
adc
out
xchg
leave
mov
inc
je
pop
adc
inc
inc
xor
gs
call
stos
cmc
test
aad
daa
inc
loop
and
mov
rol
inc
add
outs
aad
pop
jne
adc
fld
dec
push
fisubr
mov
xlat
or
cmp
aas
dec
ror
aad
adc
fsub
enter
add
pop
ds
xchg
nop
out
rcr
loope
add
cmp
shl
shr
cmp
push
icebp
in
push
in
ret
test
mov
or
pop
xchg
popf
push
jnp
push
mov
mov
loope
push
js
in
(bad)
jb
lock
jnp
rol
xor
clc
sahf
sti
punpcklwd
or
sbb
and
and
(bad)
push
cs
jae
lods
xor
or
xor
sbb
pop
pop
or
sbb
mov
test
nop
jnp
outs
leave
test
arpl
sub
aad
sbb
cmp
mov
push
xchg
jl
push
inc
into
mov
test
outs
out
(bad)
rol
xchg
cmp
cli
fcmove
das
sub
push
ja
(bad)
xor
mov
pop
cwde
mov
aad
mov
inc
dec
imul
pop
jbe
mov
int
sar
movs
outs
out
dec
in
jmp
mov
xchg
outs
mov
add
pop
pop
(bad)
adc
jns
pop
push
gs
cmps
cmps
gs
mov
pop
xchg
dec
popa
jecxz
add
jb
or
inc
dec
push
loope
dec
js
inc
mov
push
loope
test
inc
adc
test
in
mov
pop
sub
pop
sbb
fdivr
aam
cdq
ret
mov
push
mov
mov
mul
jmp
cwde
sub
sub
cli
fstp
dec
jno
pop
mov
adc
mov
push
inc
jns
push
fst
adc
mov
mov
mov
push
gs
mov
xchg
cmp
push
mov
xchg
in
xchg
jl
movs
and
or
sbb
cmp
fcomp
cmp
xchg
mov
stc
inc
ror
(bad)
fstp
mov
mov
jg
sahf
xchg
in
dec
push
pop
aam
xor
add
adc
movs
sub
movs
xor
xchg
cld
jbe
shl
or
sbb
mov
mov
inc
dec
fs
or
pop
pop
in
fist
inc
push
(bad)
mov
sbb
out
mov
fst
test
sbb
xchg
mov
mov
movs
test
pop
pop
loope
mov
xchg
add
jns
jno
bswap
sub
es
sub
loope
inc
jae
call
mov
fcom
or
pop
dec
xor
jns
or
ins
sbb
cdq
dec
fdiv
adc
gs
adc
jge
and
add
xchg
add
jle
mov
(bad)
jo
push
mov
adc
or
cmps
jle
cmp
retf
jae
jg
ins
cmp
cld
cmp
sbb
xor
stos
test
aad
inc
pop
or
imul
imul
fistp
pop
pop
pop
(bad)
fisttp
inc
(bad)
outs
pop
std
sti
jae
jle
ins
cmc
(bad)
(bad)
outs
clc
shl
push
and
cmp
jno
in
int3
jge
dec
out
sbb
rcr
retf
stos
out
pop
mov
mov
and
jmp
cmp
iret
sub
dec
jae
stos
lods
cs
push
out
cli
les
icebp
sub
jbe
fs
and
sbb
out
out
das
mov
pop
call
pop
shr
mov
pop
pop
hlt
dec
mov
outs
cmp
repz
cmp
lods
dec
mov
fs
jecxz
inc
xor
lds
mov
xor
mov
mov
jmp
adc
xchg
mov
jnp
ins
add
daa
add
push
xchg
xchg
push
sbb
hlt
xchg
in
cmp
adc
mov
sub
movs
out
lods
jne
neg
jo
xchg
xchg
pop
jne
mov
movs
leave
out
stc
loop
and
and
dec
mov
lods
das
mov
outs
ret
das
cmp
xor
xor
jb
call
mov
sbb
sbb
sub
es
pop
popf
or
les
cli
push
mov
int3
scas
rcl
mov
push
es
dec
movs
imul
in
pop
and
pop
inc
pop
icebp
iret
jge
or
sbb
cmp
jbe
out
enter
mov
cmp
mov
je
pop
movs
adc
add
ja
cmp
sub
or
add
mov
jmp
jae
out
pop
scas
mov
adc
adc
add
ja
loope
add
je
mov
fsub
mov
mov
aam
jnp
fimul
(bad)
push
mov
push
loop
fld
idiv
sbb
xor
icebp
test
adc
or
retf
push
xor
or
rcl
adc
xchg
push
add
sub
sub
or
add
xchg
mov
gs
sbb
mov
jle
and
cmp
shl
add
dec
gs
bound
pop
adc
xchg
cld
adc
fcom
call
xchg
dec
ret
rol
push
cmps
mov
jmp
fsub
cmp
ret
(bad)
stc
enter
ins
inc
arpl
scas
sbb
push
lahf
ins
ins
inc
std
call
ins
popa
(bad)
test
les
dec
fidiv
repnz
ror
scas
test
cmps
dec
inc
daa
test
xor
jnp
jno
xchg
cmp
data16
push
(bad)
mov
mov
mov
scas
push
in
in
mov
xchg
mov
ins
js
push
clc
ret
in
xor
aaa
pop
fcomp
add
xlat
mov
ins
cmp
xor
push
push
(bad)
push
xlat
dec
and
mov
sub
inc
in
test
loop
mov
or
sub
inc
das
stos
enter
jne
cmc
es
cwde
sub
push
sbb
inc
push
(bad)
mov
add
sti
jns
js
or
icebp
rcl
es
fadd
cmp
dec
ja
mov
push
imul
adc
or
sub
mov
sti
cmc
cmps
mov
data16
mov
call
dec
sub
mov
add
adc
sti
pop
add
test
in
sub
mov
jns
jo
mov
and
cmp
in
fwait
or
clc
mov
mov
dec
call
sub
dec
repz
adc
cmp
mov
dec
sbb
imul
mov
pop
aaa
cld
mov
jne
add
cmp
ret
push
mov
push
xor
xchg
es
mov
add
jecxz
inc
sub
sub
scas
das
mov
pop
xor
out
lock
fsub
sub
test
mov
mov
outs
xor
cmps
sub
jno
mov
sbb
test
pop
sub
and
(bad)
fiadd
out
ret
xchg
mov
ret
outs
pushf
jno
add
xchg
sbb
jo
fld
pushf
adc
xor
mov
pop
add
not
lods
push
sbb
or
mov
or
enter
or
and
es
cld
fstp
sahf
enter
sbb
push
cwde
popf
sar
std
scas
push
out
pop
cdq
fdivr
iret
jge
aas
fsubr
inc
sbb
in
call
ins
cdq
out
push
loopne
or
dec
sbb
push
gs
xchg
xchg
dec
add
push
imul
mov
jl
pop
jl
call
mov
call
retf
clc
push
xor
jae
pop
push
repnz
xchg
retf
inc
xlat
ja
out
pushf
cdq
inc
call
repz
jno
xchg
clc
retf
xchg
lahf
dec
stos
jno
lahf
push
jno
lods
jle
stos
xor
call
cs
jae
inc
inc
cmp
mov
ja
rcl
mov
jnp
jne
dec
inc
cli
and
xchg
jl
push
jno
mov
push
pusha
call
xchg
cdq
mov
add
es
dec
enter
fiadd
push
and
sbb
push
dec
clc
retf
or
or
loopne
pushf
jnp
xchg
stos
jmp
or
cmp
adc
fmul
sub
xor
xchg
sub
sbb
rol
xor
lahf
arpl
(bad)
dec
mul
test
mov
aaa
cld
ins
sti
add
repz
sar
inc
mov
xchg
sti
add
xchg
cmp
or
xchg
dec
das
xor
and
xchg
and
xchg
jno
ds
add
xor
add
popa
outs
xchg
or
(bad)
mov
cwde
add
sub
or
(bad)
lock
jbe
cmp
adc
xor
inc
not
mov
test
and
imul
ins
mov
mov
inc
int
mov
xchg
xchg
inc
mov
test
xor
xor
mov
scas
and
jo
pushf
inc
scas
sbb
pop
pop
cmp
jns
fxam
test
std
cmp
scas
adc
bound
sbb
xchg
jmp
jl
out
push
pop
test
and
pop
xor
add
xor
int
sbb
push
mov
loop
std
mov
and
popf
or
(bad)
out
inc
std
sbb
mov
les
fwait
mov
cmp
outs
xor
cs
jmp
loop
add
mov
pop
mov
fnstenv
call
xor
cmp
out
outs
adc
inc
pop
rol
pop
pop
les
pop
pop
enter
sahf
or
ror
mov
cmps
(bad)
xchg
retf
jbe
clc
mov
ret
inc
lods
popa
jne
(bad)
cmp
retf
aad
sti
push
lods
scas
pop
mov
jg
xor
jle
ret
sbb
cli
mov
sub
cmp
and
int3
into
aas
mov
in
jmp
ffree
jp
das
sub
mov
int
ficom
(bad)
sbb
xor
out
mov
jl
outs
retf
sub
mov
push
pushf
push
out
shr
mov
push
mov
cmps
out
repnz
lods
push
pop
cmp
(bad)
loopne
aas
fdiv
dec
movs
cmp
lods
or
sbb
and
xor
cwde
jae
cmp
(bad)
neg
xchg
adc
jg
outs
adc
cmps
cdq
ret
jmp
fdivr
mul
std
mov
retf
and
mov
push
enter
(bad)
leave
push
sub
pusha
and
sbb
xchg
push
cmp
cmp
sbb
addr16
das
(bad)
adc
in
js
xor
inc
mov
add
scas
or
and
inc
xor
cli
mov
lock
je
xchg
clc
shl
push
mov
xchg
(bad)
call
dec
cmp
stc
sbb
cmp
dec
and
shl
mov
push
and
or
and
adc
pop
mov
xor
xlat
cwde
mov
sbb
sbb
enter
ret
in
cmp
ja
(bad)
sti
adc
inc
sbb
test
pop
ret
pushf
mov
or
enter
mov
xlat
test
sahf
aad
stos
xchg
fcom
arpl
sub
cmp
dec
stos
test
mov
rcl
pop
push
cli
test
mov
mov
ret
mov
and
mov
test
into
push
push
pop
outs
xchg
ds
paddsb
xchg
push
cli
out
fisttp
adc
in
pop
cwde
loopne
leave
sbb
stc
out
jne
add
mov
inc
int3
repz
popf
cdq
sub
sbb
sbb
dec
test
(bad)
(bad)
dec
jno
dec
pop
das
and
sub
adc
lahf
and
or
cmps
mov
js
shl
add
sbb
and
dec
lods
sub
imul
push
jmp
outs
cld
push
jle
lahf
popa
mov
sub
in
je
mov
and
mov
das
cmps
lods
iret
fwait
(bad)
push
call
idiv
jns
out
scas
lahf
sti
mov
pop
repz
(bad)
ins
cli
(bad)
jmp
sti
cli
push
mov
lds
call
xchg
psadbw
out
(bad)
cmp
mov
(bad)
daa
aaa
xchg
mov
mov
(bad)
jo
jb
ins
in
xchg
sbb
lods
dec
into
pop
sbb
pop
mov
das
outs
dec
outs
scas
iret
sbb
adc
push
sbb
xchg
dec
sti
ret
xlat
aaa
test
sbb
xchg
inc
test
in
jmp
call
jnp
js
push
push
out
xor
cmp
xor
xor
xor
dec
lea
add
mov
push
add
push
jnp
xchg
cmc
jp
pop
mov
aam
std
push
sub
daa
dec
xor
jecxz
dec
ds
lock
xchg
call
int3
pushf
add
sbb
jae
(bad)
xchg
clc
mov
xor
pop
or
xor
inc
sbb
shl
rcl
push
add
xor
adc
movs
aad
jg
or
sti
sub
xor
or
mov
push
outs
jg
fwait
jl
movs
int
adc
push
xchg
sub
sub
add
mov
xchg
inc
push
rcr
inc
sar
arpl
out
ficom
outs
adc
sub
cmp
sbb
sahf
sub
int
xchg
stc
xchg
cli
push
xchg
test
mov
nop
adc
and
clc
pmaxsw
fstp
jnp
cs
icebp
mov
lea
sbb
xchg
test
pushf
fidiv
nop
push
pop
add
add
mov
xor
js
xor
sbb
rcl
test
out
push
and
cmps
lea
push
mov
cmp
sub
ins
aas
movs
or
(bad)
fsub
jle
mov
sti
sub
(bad)
aam
cmp
push
xchg
out
call
bound
inc
xor
jne
inc
pop
xchg
ror
push
lahf
sahf
pop
not
sub
jecxz
and
(bad)
aaa
(bad)
fild
push
sub
sar
in
and
lahf
pop
push
add
lock
in
pushf
push
jge
dec
hlt
int3
(bad)
enter
jo
inc
push
xchg
cmc
scas
movs
push
adc
adc
lods
jne
lea
dec
fstp
mov
xchg
cmp
cmp
mov
cmp
dec
cmp
jp
mov
stos
xor
dec
pop
dec
test
lds
sbb
aas
xor
stc
rcr
or
jg
cmps
sub
cmp
pop
lods
push
inc
pusha
adc
gs
sub
xor
inc
mov
xor
mov
mov
les
dec
sbb
enter
mov
and
ja
xchg
or
mov
data16
movs
mov
or
lock
jge
test
jge
int3
test
push
sub
sbb
gs
xchg
stos
sbb
test
cs
mov
js
dec
xlat
xchg
mov
push
fs
add
mov
pop
outs
pop
stos
in
inc
sbb
jae
pop
shl
clc
ds
pop
cmps
les
pushf
push
fiadd
mov
scas
cmp
push
lods
xchg
mov
retf
and
pop
cmps
sbb
sub
mov
test
xor
xchg
add
inc
int3
push
mov
push
imul
in
out
dec
movs
test
push
jno
sahf
adc
std
dec
aam
pop
test
fs
sbb
xor
fwait
mov
jne
jns
jp
xor
popa
in
outs
pop
jmp
mov
mov
pop
push
and
fsub
dec
add
push
push
push
lock
cld
sub
push
xchg
int3
js
cdq
cld
imul
or
or
adc
in
jno
xchg
mov
mov
dec
outs
adc
xlat
mov
cmps
sar
pop
xor
push
cmps
idiv
call
test
rcl
cld
(bad)
out
lahf
push
into
xor
mov
out
sbb
fdiv
(bad)
in
fcmovbe
mov
ret
dec
ffree
retf
dec
and
leave
adc
cs
fidiv
out
(bad)
xchg
daa
dec
imul
pop
pop
push
retf
xor
imul
test
in
popf
xchg
and
fs
xchg
add
scas
stc
xchg
push
pusha
repnz
mov
add
mov
in
das
in
inc
xlat
cs
dec
dec
es
dec
cmps
test
inc
xor
jns
dec
sbb
and
push
mov
outs
xchg
inc
sbb
leave
mov
dec
cld
mov
clc
dec
loop
inc
sbb
xor
jg
idiv
(bad)
pusha
jl
test
das
fnstsw
mov
push
pushf
repz
movs
ja
lahf
jg
outs
and
loopne
test
or
mov
mov
test
xor
pop
pop
in
mov
adc
clc
(bad)
int3
lods
xlat
adc
sbb
add
or
or
ja
xor
push
pop
ret
fnsave
icebp
dec
cmp
(bad)
adc
lods
add
xor
jbe
push
int
fsubr
iret
xor
jp
cmps
xor
and
test
les
and
sub
cli
scas
icebp
inc
mov
xchg
test
inc
mov
out
stos
rcl
inc
fild
scas
mov
out
sub
sbb
dec
xor
ds
xor
push
sub
ror
aam
mov
ins
adc
shr
les
push
ret
in
push
xor
mov
sub
mov
out
push
fild
lods
test
data16
jmp
xchg
cdq
into
xor
pop
cwde
cld
xor
int
sub
lods
or
mov
inc
into
xor
mov
or
test
cmps
div
xchg
gs
xor
dec
inc
adc
mov
or
outs
pop
leave
pop
pop
push
cmp
ror
rcl
sbb
xchg
out
xchg
xor
lock
ja
ficomp
adc
cdq
jmp
stos
xlat
xor
sbb
and
sbb
test
push
push
sbb
pop
addr16
xlat
cdq
mov
cmp
pop
or
movs
sti
movs
in
shl
jae
sub
imul
pop
movs
jecxz
imul
mov
in
adc
fdiv
retf
pop
sub
push
push
sbb
sub
sbb
retf
fadd
mov
jp
scas
retf
test
sub
inc
out
adc
push
jecxz
popf
aas
int3
sbb
imul
xor
outs
add
add
adc
mov
stos
mul
add
ror
adc
cmps
pusha
dec
out
adc
mov
ins
stc
je
cld
xlat
rol
stc
adc
push
mov
and
das
stos
data16
loop
or
leave
fnstenv
mov
push
hlt
rcl
sub
sub
inc
movs
and
add
mov
pop
add
push
rol
sub
in
sar
jne
or
push
loopne
inc
adc
xchg
jae
inc
sub
inc
add
retf
sub
adc
or
sub
sub
lock
and
push
add
ds
dec
fcomp
stos
xchg
ins
icebp
cs
mov
ins
xlat
lods
arpl
inc
add
pusha
push
push
pop
inc
sbb
inc
cld
sbb
aam
jecxz
loope
lock
lds
arpl
fbld
xor
idiv
in
push
push
cmp
inc
push
push
xchg
cmps
mov
les
pop
pop
loop
fiadd
mov
pop
pop
push
cli
(bad)
sub
std
icebp
mov
stc
(bad)
into
push
dec
aas
mov
test
cvtps2pi
jle
stc
arpl
cmp
fldln2
xor
jno
(bad)
push
movs
into
cli
mov
xchg
pushf
xor
jb
int3
mov
cmp
adc
mov
jnp
or
jns
push
daa
mov
and
aad
fistp
inc
mov
xchg
fnstsw
sub
pop
jle
push
mov
mov
or
idiv
jg
push
data16
pop
inc
mov
dec
sub
mov
inc
push
dec
cwde
mov
arpl
nop
test
xchg
and
shl
and
(bad)
hlt
xchg
pop
outs
loopne
xor
jo
mov
dec
xchg
imul
in
jecxz
sbb
jecxz
daa
scas
out
cld
fst
jo
sti
ret
jle
add
mov
mov
test
xchg
xchg
fstp
mov
int3
mov
xchg
lock
cmp
xchg
sbb
mov
dec
imul
loopne
aas
add
clc
xor
hlt
(bad)
jo
and
and
sbb
sub
push
scas
lock
pop
push
mov
jle
das
mov
loope
popa
fild
leave
xor
shl
add
mov
fwait
rcr
test
adc
enter
cdq
and
stos
cmp
mov
aam
push
or
mov
shl
xchg
test
test
xchg
pop
cmp
xchg
sub
int3
add
sub
sbb
xchg
das
xchg
and
cmp
xchg
dec
clc
outs
xor
ds
xchg
out
pop
mov
sub
xchg
inc
cmp
xchg
in
dec
lods
xchg
in
adc
inc
inc
dec
jne
aam
xor
shl
push
sub
mov
into
pop
pop
jecxz
cmps
add
jae
inc
or
aaa
ret
mov
int3
lds
test
es
or
call
jg
sbb
pop
fist
test
imul
outs
cmp
aaa
cmps
(bad)
jmp
xchg
pop
test
sti
enter
fwait
addr16
mov
jg
xchg
fdiv
mov
mov
cli
in
mov
in
jnp
retf
shl
mov
lock
mov
mov
retf
into
imul
pop
pop
aas
stos
(bad)
fcom
fistp
stos
jmp
(bad)
xlat
(bad)
sar
mov
cli
sub
pop
xchg
imul
pop
cmp
repz
adc
ret
movs
addr16
cmp
rol
fwait
movs
cmps
test
sub
sbb
dec
pusha
jo
shl
(bad)
in
adc
mov
cmc
jmp
aam
jns
mov
es
out
je
jae
ja
ds
or
pop
(bad)
stc
idiv
add
ret
cmps
xor
inc
xor
xor
cdq
jno
adc
shl
icebp
idiv
mov
pop
inc
xor
scas
push
sbb
enter
int3
inc
retf
xor
push
fistp
jge
push
outs
retf
movs
ja
stc
and
sbb
(bad)
pop
int
iret
xchg
test
xchg
xor
shl
and
(bad)
mov
fdiv
mov
pop
and
data16
xchg
pop
mov
xor
push
daa
clc
add
test
bound
mov
pop
sbb
pop
shl
xchg
inc
sbb
add
adc
inc
bound
sbb
push
jbe
pop
jae
sahf
(bad)
ror
cmps
jl
jle
mov
fadd
inc
jmp
fidiv
jnp
and
pop
and
repnz
and
ins
inc
shl
adc
push
cmp
sub
add
push
sub
xor
mov
mov
addr16
xchg
je
mov
rcl
xlat
out
xchg
sub
mov
cld
call
dec
(bad)
jo
call
jo
lods
outs
ins
push
push
push
xor
cdq
xchg
js
outs
repnz
xchg
adc
in
jmp
cmp
nop
mov
arpl
test
in
movs
pop
nop
mov
loop
jnp
cmp
out
hlt
push
std
lock
cs
xchg
add
mov
push
cmp
aad
or
out
sbb
sub
or
xor
inc
sbb
xor
push
stc
ins
pop
gs
lea
std
outs
in
adc
mov
rcl
aad
cs
arpl
das
inc
mov
enter
(bad)
xor
repnz
mov
xchg
retf
cs
and
loope
fadd
test
call
cdq
add
retf
xor
ds
and
pinsrw
or
fisttp
(bad)
inc
(bad)
cli
cwde
xor
push
fmul
lods
loop
add
rcr
popa
sub
test
sbb
in
js
push
add
mov
xor
xlat
lds
adc
adc
pusha
retf
xchg
jb
or
xor
inc
sbb
fsub
or
nop
jne
(bad)
bound
dec
cli
fs
cmp
add
call
dec
dec
and
leave
pop
or
jbe
cmc
xor
add
jl
clc
add
lods
adc
loopne
lea
imul
mov
fcomp
movs
loopne
mov
jmp
add
add
scas
test
popa
xor
retf
das
scas
adc
clc
test
jmp
xor
aad
inc
daa
xor
pop
les
sti
xchg
and
ins
jmp
mov
push
push
btr
jns
or
xor
jo
jne
sub
push
shl
in
pop
daa
sbb
mov
cmp
je
jae
mov
js
call
jo
enter
add
dec
or
mov
out
rcl
jnp
out
in
mov
and
in
mov
rcr
fld
cmp
imul
call
xchg
jg
jle
(bad)
out
ds
pushf
jns
and
push
in
dec
out
mov
ja
jnp
xchg
not
test
pop
retf
in
je
mov
retf
out
scas
rol
fistp
(bad)
in
cli
push
cmp
cmp
pop
pop
das
push
pop
leave
aas
xor
popa
fisubr
cmp
test
push
div
popf
push
sar
in
je
dec
jb
mov
xchg
popf
adc
xchg
xchg
idiv
xor
mov
mov
(bad)
repnz
test
aaa
or
cmp
push
jne
sbb
jns
push
jecxz
pminub
dec
stos
inc
sub
enter
xor
add
or
mov
nop
push
push
pop
ret
cmp
add
lea
in
rol
mov
ss
js
cli
xor
xchg
fiadd
pushf
fld
clc
inc
(bad)
dec
and
add
pop
jmp
pop
test
jmp
ffree
inc
and
shl
jno
hlt
cmp
pop
fdivr
cmp
movs
mov
push
inc
mov
pop
or
mov
enter
mov
xchg
mov
outs
dec
lahf
mov
dec
repz
shl
dec
jno
adc
push
nop
pop
loopne
inc
and
test
or
clc
jo
add
dec
adc
xor
jno
and
xor
inc
in
lahf
dec
mov
pop
xchg
dec
cmp
pop
xchg
mov
or
xchg
pop
dec
jae
xchg
xchg
sub
jg
outs
and
adc
nop
or
enter
xor
xor
cmp
push
xchg
(bad)
cmp
or
mov
fs
push
add
sbb
mov
and
stos
shr
repz
inc
push
inc
push
or
mov
clc
jge
pop
jge
adc
mov
leave
fmul
mov
jo
adc
xchg
fmulp
inc
xor
imul
fs
pusha
xlat
test
xchg
mov
add
pushf
mov
pop
mov
jmp
adc
xchg
jp
in
mov
aad
aas
xchg
inc
cmovs
test
aad
cli
rol
je
cmovg
bound
mov
sub
dec
dec
out
std
jmp
cmps
icebp
push
mov
fsub
cld
(bad)
and
add
ss
out
inc
jns
ss
imul
data16
lods
jecxz
(bad)
outs
pop
stc
mov
sti
ds
sti
mov
jae
pop
cwde
push
dec
out
outs
inc
dec
ds
dec
aas
xor
jae
outs
or
scas
imul
and
imul
addr16
test
in
in
mov
mov
xlat
sbb
mov
mov
dec
ins
mov
jae
mov
jb
or
sbb
or
in
jb
dec
inc
sub
mov
push
xchg
fmul
nop
sbb
fimul
cwde
cdq
(bad)
sub
xchg
push
hlt
adc
pop
enter
fs
inc
add
clc
cmp
mov
jo
inc
sbb
add
xchg
xchg
sbb
xchg
or
sbb
gs
mov
sbb
inc
ret
or
enter
sub
(bad)
jmp
mov
popa
inc
test
inc
cmc
sub
sbb
sub
cwde
adc
mov
mov
cmc
lds
jp
sbb
rol
mov
mov
mov
push
push
(bad)
aaa
pop
cdq
hlt
repnz
adc
dec
mov
or
mov
mov
in
retf
push
mov
adc
and
fadd
push
xor
inc
or
sub
loop
outs
das
xchg
mov
fwait
add
leave
imul
adc
ret
loope
repnz
add
pushfw
retf
loope
mov
push
hlt
sahf
add
enter
mov
mov
pop
scas
test
retf
sar
(bad)
cmp
inc
push
dec
or
add
hlt
call
cdq
or
call
sbb
shl
jae
hlt
cs
cwde
cmp
dec
mov
adc
imul
stc
dec
inc
stos
(bad)
jne
mov
mov
in
mov
(bad)
and
jae
cmps
sti
adc
mov
imul
lds
or
xchg
pop
ret
out
cmps
mov
pop
test
test
je
dec
scas
and
pusha
ror
repnz
dec
push
fdiv
jmp
mul
pop
sbb
sahf
push
push
sar
pop
aas
xchg
mov
rcr
aad
rcr
dec
jp
and
dec
mov
and
jae
dec
dec
pop
xchg
push
into
push
fst
popf
mov
gs
(bad)
jle
mul
cmp
mov
dec
jge
jbe
xchg
repz
sbb
iret
sub
jmp
stos
mov
mov
hlt
test
outs
test
and
inc
outs
out
dec
cmp
sub
dec
out
push
pop
sahf
ret
fs
outs
retf
pop
rcr
mov
js
movs
jmp
fimul
mov
lock
data16
cmp
retf
(bad)
shl
push
cld
cmp
repz
fisubr
sub
lahf
rcr
sbb
mov
(bad)
dec
dec
es
test
xor
jmp
dec
xor
mov
fcom
cmps
sbb
xchg
(bad)
pusha
cmps
mov
add
sub
or
push
aam
imul
popa
test
adc
mov
add
pop
retf
xchg
call
xchg
sbb
fcomp
repz
dec
fwait
repz
and
fs
je
(bad)
pop
dec
xor
mov
sar
(bad)
dec
pop
jecxz
test
ds
pop
jbe
aas
jo
dec
clc
into
ds
jo
mov
mov
inc
popa
mov
inc
aam
jl
(bad)
imul
cmps
sub
(bad)
jne
nop
push
xchg
push
popf
add
sub
jl
adc
adc
and
data16
mov
retf
call
fwait
jns
out
(bad)
ret
daa
jp
push
es
jle
push
stos
je
movs
adc
mov
adc
xchg
push
out
sub
pop
sub
(bad)
xor
xchg
xchg
ficom
xchg
xchg
xchg
mov
(bad)
cdq
mov
mov
add
jno
xor
jl
stc
in
add
cmp
pop
retf
or
fwait
shl
(bad)
arpl
sbb
mov
dec
jp
xor
mov
test
sbb
das
and
out
add
pop
and
inc
lahf
mov
nop
xor
pop
push
xchg
imul
cli
sbb
test
jle
pop
pusha
push
jp
js
stos
sub
push
dec
adc
mov
mov
je
sbb
mov
test
loop
push
adc
mov
push
imul
daa
mov
in
sub
fwait
pop
ret
sub
adc
jle
ja
inc
mov
out
js
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
fcomi
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
mov
add
and
add
add
add
fadd
add
sbb
add
add
add
call
add
add
and
push
repnz
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
mov
dec
inc
inc
push
js
in
mov
jne
jp
lods
mov
imul
adc
add
fild
mov
xchg
(bad)
into
ds
cmp
out
in
cdq
dec
pop
data16
fwait
mov
xor
mov
mov
test
or
stos
jnp
stc
lahf
out
cmp
fisubr
cmc
sub
adc
pop
jne
push
aad
mov
push
xor
pusha
leave
pop
in
das
shl
or
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
push
xchg
cs
push
inc
xchg
call
aam
or
es
rcl
and
jmp
xor
dec
pop
xor
mov
dec
push
add
lea
imul
scas
jmp
scas
push
stos
sub
iret
aad
cmp
fwait
jo
mov
jne
push
lods
push
pop
bound
fs
mov
pop
in
out
fsub
(bad)
sub
xchg
pop
pop
mov
in
in
sahf
out
dec
(bad)
and
out
enter
aam
cmp
fbstp
mov
dec
dec
jnp
push
repz
scas
lock
mov
sbb
(bad)
mov
(bad)
jmp
add
xor
xor
jno
ins
cmps
and
jge
aas
data16
xchg
add
sbb
inc
jl
add
pop
jbe
dec
xor
rol
test
mov
cs
ins
rcr
cmps
add
loop
repz
sbb
shl
js
(bad)
cmp
in
push
lods
push
or
jle
(bad)
iret
mov
inc
mov
fcom
mov
push
ror
clc
pop
stos
push
jl
stos
xchg
jmp
jb
cld
leave
icebp
jl
adc
push
es
sbb
dec
imul
pop
push
scas
aad
fwait
aad
call
imul
mov
push
mov
cmps
call
cmp
jecxz
(bad)
pop
cmp
out
xor
jo
sbb
(bad)
out
and
rol
add
or
movs
pop
xchg
dec
jmp
xor
xor
mov
xlat
mov
add
(bad)
aad
mov
inc
movs
dec
xchg
inc
xchg
and
pop
pop
or
dec
aas
cmp
inc
jecxz
jecxz
mov
popa
js
jb
xor
sbb
je
cmp
fdivr
jmp
dec
xchg
std
xor
leave
js
int
xchg
test
repz
in
jle
loope
jbe
jp
dec
jge
scas
push
xchg
out
dec
add
psubsb
fs
sti
cli
cli
fimul
cmps
int3
out
push
sub
cmc
pop
test
popf
inc
inc
inc
imul
ds
xchg
pop
jge
retf
xor
add
add
icebp
xor
sub
add
or
pushf
add
mov
cmp
push
xchg
repz
stc
daa
or
lahf
lods
jp
push
xchg
imul
fst
add
popa
pop
mov
fstp
pop
pop
out
outs
outs
outs
jg
cwde
jl
in
mov
cs
sub
xor
add
add
enter
jecxz
(bad)
nop
mov
inc
mov
jns
push
and
in
arpl
jne
add
lods
test
fs
add
(bad)
sub
lahf
mov
and
push
sub
cmp
cmp
mov
xlat
mov
push
push
adc
into
inc
fidiv
imul
sub
icebp
jno
in
xlat
ficom
and
pop
out
cmps
xchg
mov
loopne
add
pop
cmps
add
clts
(bad)
xchg
imul
das
shl
add
mov
push
out
jno
rcl
sbb
jne
es
push
imul
nop
dec
push
data16
xchg
jge
dec
in
in
stc
retf
xchg
xlat
mov
cmps
push
adc
into
adc
call
cs
aad
push
pop
stc
imul
cli
mov
inc
inc
pusha
retf
xor
sti
push
pushf
jo
arpl
xor
jbe
sub
push
xchg
js
fnsave
sub
mov
jle
or
add
adc
add
aam
aam
pop
movs
pop
popf
shl
sub
adc
push
adc
aas
fwait
int
sbb
inc
jnp
pop
xor
xor
stc
js
mov
and
sbb
loopne
sbb
sbb
add
inc
pop
sbb
push
push
cdq
in
jne
sar
push
adc
push
cdq
cmp
cmp
pop
mov
pop
mov
push
dec
ja
dec
shl
mov
out
loopne
mov
lock
retf
xor
inc
out
jmp
jecxz
shr
rcr
lahf
or
cli
mov
add
adc
repnz
pushf
loopne
loop
hlt
dec
cs
cmp
jmp
push
mov
movs
test
nop
das
jl
mov
iret
lahf
call
pop
dec
popf
call
(bad)
fcmovnu
repz
cmp
mov
ja
dec
cmps
test
fisubr
push
std
jecxz
(bad)
rcr
(bad)
std
mov
sub
add
mov
mov
xor
sub
(bad)
(bad)
pop
sbb
add
sub
pop
mov
int3
or
mov
jnp
and
mov
mov
push
repnz
arpl
pop
push
xchg
lds
or
aam
fnstcw
btc
pop
xor
(bad)
aam
fcmove
dec
rol
push
sti
lahf
fdivr
aaa
xor
or
test
js
xor
jle
repz
push
add
leave
sbb
mov
push
xchg
mov
push
mov
inc
int3
(bad)
jbe
mov
mov
xchg
test
cmp
movs
push
stc
push
fwait
cmp
pusha
ins
out
lds
or
aam
shl
mov
fnstenv
test
mov
ss
sub
call
movs
pop
push
ficomp
addr16
icebp
and
xlat
(bad)
jmp
lods
ins
xchg
int
lds
punpckldq
adc
pop
inc
jecxz
jae
add
stos
xchg
sub
ret
scas
ret
imul
shr
fdivr
and
test
inc
push
mov
call
pop
sub
jmp
mov
addr16
sar
xchg
mov
(bad)
pop
fcomp
popf
dec
fcomp
push
inc
les
(bad)
or
pop
jb
loope
jo
add
dec
pop
and
pop
add
and
icebp
sahf
push
cmp
mov
loop
and
jecxz
xor
sbb
imul
ds
call
(bad)
dec
aad
in
sbb
inc
std
ins
dec
xor
pop
jl
popf
popf
popf
add
pop
jle
dec
add
movs
push
mov
sub
jmp
add
cwde
daa
retf
xlat
ja
jne
or
(bad)
xchg
js
inc
dec
fild
jmp
and
imul
dec
mov
gs
or
gs
hlt
aad
dec
sbb
jne
scas
add
shl
int3
xchg
rcr
jge
adc
adc
gs
ja
mov
clc
aaa
jne
mov
mov
add
pop
sub
bound
call
mov
add
pop
es
mov
in
mov
push
aad
push
cwde
and
ss
loop
stos
test
xchg
push
xor
dec
fs
jne
push
dec
imul
nop
clc
xchg
frstor
add
dec
jmp
bound
cmp
stos
adc
inc
adc
sbb
bound
push
out
es
int3
(bad)
stc
clc
clc
clc
mov
jnp
pop
or
add
mov
lods
lods
lods
outs
addr16
cld
(bad)
stc
jbe
cwde
mov
cwde
test
cmp
(bad)
pop
jg
or
aas
jns
js
icebp
call
add
mov
mov
mov
ins
cld
jmp
or
xor
cmps
and
sbb
jbe
repnz
mov
xlat
cld
mov
pop
mov
or
fst
push
imul
dec
jno
and
jl
push
es
mov
xor
xor
inc
mov
sub
std
iret
push
push
rcr
jnp
jnp
in
loopne
adc
les
movs
xor
aad
jmp
jecxz
fldlg2
pusha
cld
shl
sbb
sbb
ficomp
mov
out
xor
xor
in
fs
test
push
popa
adc
xchg
call
ds
xchg
push
sar
cmp
mov
mov
clc
dec
dec
iret
das
xor
into
dec
in
xchg
xchg
enter
cdq
add
sub
fimul
or
rcr
add
xchg
or
das
push
or
repnz
into
lock
sbb
add
pop
cmp
repnz
cld
mov
(bad)
push
jl
xor
xchg
adc
mov
xor
aas
bound
and
sti
cli
cli
inc
or
mov
aaa
xor
repz
retf
or
sahf
xor
cld
cs
adc
and
imul
sbb
js
loop
xchg
aam
push
pop
pushf
sahf
mov
inc
pop
xchg
cmp
data16
xchg
adc
jle
pop
sub
adc
int
inc
mov
jno
push
rcr
mov
idiv
cdq
ins
mov
mov
adc
retf
mov
sub
scas
push
xchg
outs
test
mov
test
mov
mov
and
xor
lahf
dec
retf
jecxz
idiv
ins
adc
xor
jo
add
xchg
inc
retf
call
sti
and
mov
xor
stc
push
dec
jp
and
mov
or
shl
(bad)
das
jg
lahf
pop
imul
inc
lods
sub
jp
stos
cli
mov
lds
mov
pop
dec
xor
test
fst
adc
jg
repnz
(bad)
mov
push
out
in
addr16
mov
repnz
cld
add
outs
cmp
data16
in
add
push
sbb
movs
ss
sub
dec
jmp
xchg
repnz
inc
dec
call
test
cmp
pop
sub
retf
cmps
jae
call
sbb
adc
cmp
mov
cdq
mov
les
mov
dec
movs
xchg
xor
add
push
pop
or
adc
push
push
pop
sbb
cmps
lahf
into
scas
lahf
retf
fwait
(bad)
rol
cmp
es
ins
shl
or
mov
lods
inc
jl
cs
jno
stos
in
push
pop
cmp
add
lock
add
xchg
leave
xor
inc
push
rcr
ss
pop
xor
es
add
fcmovnu
leave
out
sti
dec
lods
out
test
in
std
jne
push
adc
mov
dec
es
(bad)
js
stc
push
ficom
xchg
inc
(bad)
sbb
cmp
or
or
jp
jnp
cmc
repnz
rcl
and
xor
adc
ss
notrack
mov
rcl
push
fstp
jae
push
xchg
push
dec
cs
add
pop
neg
pusha
sub
jno
jge
leave
ds
adc
xchg
dec
and
fild
bound
lds
mov
lea
fimul
imul
pop
leave
or
es
fwait
jo
rcr
push
test
mov
xor
cmps
out
mov
cli
in
imul
jns
xlat
fst
shl
imul
cmp
push
adc
mov
jmp
data16
mov
mov
call
jle
add
icebp
vmovntdq
pop
or
add
mov
mul
stos
add
scas
xchg
or
dec
pushf
xchg
push
dec
or
dec
dec
aam
push
scas
pop
lock
aad
xchg
jmp
pop
iret
and
nop
in
mov
dec
fmul
mov
lds
stos
dec
push
dec
mov
or
fbstp
mov
retf
sar
push
sub
mov
enter
or
xchg
or
add
push
daa
loopne
add
repz
xchg
loop
(bad)
and
pop
jmp
mov
(bad)
(bad)
fcom
fisttp
ret
mov
sub
and
pop
test
jge
hlt
repz
mov
clc
mov
ja
push
cli
sti
test
jns
dec
pop
xor
fs
fisttp
int3
clc
into
jp
inc
popf
mov
stos
cmp
mov
jne
dec
and
or
mov
and
push
adc
pop
mov
into
add
iret
(bad)
hlt
xor
pop
sbb
xor
cli
es
shl
into
(bad)
(bad)
aas
(bad)
fiadd
cmps
mov
jno
xlat
bound
xchg
pop
pop
dec
cmp
shr
sar
adc
clc
jp
ss
imul
pop
mov
in
leave
stc
fadd
add
sahf
cld
cmp
or
mov
push
sbb
test
clc
or
adc
js
outs
ins
dec
ins
cwde
rol
pop
mov
mov
push
(bad)
lahf
into
jae
xchg
lods
aas
xchg
add
dec
and
dec
mov
mov
add
ret
adc
dec
push
stos
loop
fs
pop
fldln2
in
fsubr
(bad)
add
add
mov
dec
sub
jge
push
mov
lods
sbb
push
movs
pop
stc
jmp
mov
mov
shl
mov
int3
loopne
icebp
or
sub
cdq
gs
mov
test
jl
pushf
adc
mov
sbb
fldcw
sbb
aad
lahf
mov
add
out
and
je
(bad)
mov
push
hlt
dec
test
inc
mul
popa
dec
push
xor
jmp
jecxz
xor
cmp
xchg
clc
or
int3
dec
adc
daa
jae
clc
mov
(bad)
xor
aas
jbe
jbe
loop
imul
pop
fucomp
dec
cmps
push
pop
popa
push
(bad)
fild
shl
mov
and
mov
xchg
call
and
dec
dec
mov
or
pop
sub
jl
jp
add
mov
pop
aaa
pop
iret
jmp
mov
xchg
test
hlt
pop
shl
out
mov
loopne
cmc
call
or
push
sbb
push
dec
dec
fimul
inc
mov
inc
repnz
adc
add
sub
lods
cli
out
jp
sbb
cmc
clc
xor
sub
mov
in
cmp
jecxz
aaa
push
cmp
lock
push
pop
test
imul
fnstsw
mov
pushf
xchg
inc
cmp
leave
add
jp
ins
cwde
jle
mov
fld
rcl
dec
or
mov
arpl
mov
ins
dec
cmps
push
sbb
or
and
cmps
popf
and
mov
int3
mov
loop
lock
mov
ins
pop
pushf
pop
jae
nop
retf
in
bound
aam
and
test
popa
inc
sub
das
cdq
or
in
jae
dec
or
xchg
clc
call
jmp
or
lahf
mov
and
cli
js
sbb
jmp
pop
cmp
aam
cdq
ficom
gs
loopne
xchg
inc
and
sub
ins
scas
mov
xor
add
jmp
daa
mov
adc
out
dec
add
add
sub
push
xchg
pop
xor
rcl
fnstenv
(bad)
aaa
dec
(bad)
mov
arpl
imul
inc
gs
adc
or
clc
enter
outs
shl
cmps
push
push
aas
stos
into
iret
fs
dec
(bad)
adc
adc
mov
mov
push
mov
sbb
push
jns
push
mov
test
fild
(bad)
rep
data16
sub
sub
(bad)
fimul
aad
fiadd
add
idiv
popf
jmp
stc
outs
xchg
mov
scas
cdq
popa
cwde
mov
gs
paddsw
mov
dec
ins
xchg
sar
ret
xchg
xchg
mov
mov
fist
out
fwait
lods
mov
mov
xor
out
jbe
shl
fs
jmp
mov
stc
push
jmp
inc
int
adc
add
pop
es
push
aam
dec
and
aaa
push
xor
or
lods
add
(bad)
aad
lods
xor
dec
mov
xchg
pop
sub
mov
add
imul
pop
fistp
mov
and
movs
pop
rep
rol
add
pop
(bad)
or
(bad)
adc
enter
sar
loop
cs
push
pop
mov
push
pop
movs
mov
add
mov
shr
xchg
xor
cdq
add
mov
stc
inc
pop
add
pop
not
push
sbb
cli
and
mov
pop
jmp
xchg
mov
sub
(bad)
xchg
out
mov
popf
and
inc
pop
inc
pop
jnp
xchg
std
in
cmp
sub
adc
movs
loop
repz
xor
push
push
test
icebp
add
scas
inc
aad
sub
dec
xchg
pop
inc
sbb
outs
adc
pop
jns
cwde
enter
lahf
dec
pop
out
ins
in
(bad)
jmp
mov
add
push
fistp
pop
cmp
sbb
cmps
repz
sbb
rcr
shl
ss
aam
sbb
add
mov
rcr
dec
ret
mov
repz
jae
jl
xor
(bad)
push
not
(bad)
lahf
push
push
in
enter
inc
pop
outs
outs
outs
xor
js
(bad)
jmp
push
imul
xchg
push
cwde
call
push
sbb
xor
jae
cmps
jmp
jg
xor
out
scas
movs
cmc
jmp
dec
sbb
sub
dec
xlat
push
sub
je
inc
hlt
mov
dec
add
pop
inc
inc
imul
mov
aad
ret
xchg
pop
sbb
inc
or
or
les
pusha
pop
pop
leave
pushf
inc
jno
jp
mov
dec
push
dec
in
out
cld
fnstsw
pop
loopne
dec
out
add
mov
in
adc
adc
lock
mov
shl
lods
push
pop
aam
mov
scas
mov
mov
inc
mov
and
sub
xor
loopne
add
arpl
gs
test
cmp
adc
in
(bad)
cmp
outs
sbb
or
shl
xchg
push
loopne
add
cmp
dec
mov
mov
push
test
(bad)
cmp
sar
or
jge
jge
lods
mov
movzx
jg
push
(bad)
out
pusha
inc
adc
jp
and
push
xchg
jl
or
test
pop
popf
imul
and
jle
mov
xchg
cs
jb
hlt
cld
addr16
add
adc
sti
inc
add
cmp
stc
stos
ror
adc
int
in
into
mov
sbb
mov
call
lock
pop
in
mov
out
add
in
rcl
(bad)
lahf
xchg
test
push
mov
sbb
sbb
fidiv
rcr
add
sbb
xor
fdivr
rol
das
pop
mov
ja
pop
outs
inc
cdq
adc
fwait
mov
cmps
repnz
push
adc
lahf
mov
mov
repz
add
or
jmp
push
and
sahf
dec
cdq
(bad)
mov
sbb
push
cmps
mov
push
jmp
fistp
cmp
and
neg
(bad)
mov
mov
xor
inc
cmps
sahf
xor
fs
or
stc
and
nop
inc
data16
mov
cmc
mov
loope
sbb
ja
dec
rcr
mov
nop
add
pop
or
(bad)
out
xor
cmp
and
jg
(bad)
cmp
push
int
rol
dec
shl
popa
xchg
pop
fld
jle
call
faddp
out
mov
add
ja
(bad)
push
xchg
push
(bad)
out
jnp
mov
xor
jns
mov
test
ja
inc
lods
movs
in
inc
sbb
mov
and
int
xor
mov
adc
(bad)
cs
mov
addr16
int3
xor
cmp
enter
jmp
cmc
jge
or
pushf
(bad)
iret
add
dec
inc
shr
mov
and
mov
lds
repz
and
leave
mov
sub
or
jns
out
jmp
mul
pusha
jg
es
xchg
retf
jl
mov
fdiv
les
xchg
shl
mov
ror
xchg
rcr
pusha
xor
xor
cwde
hlt
test
dec
lds
jmp
mov
xlat
push
push
or
mov
sti
fst
int
sbb
adc
sbb
sahf
push
add
cmp
mov
xchg
pop
dec
add
xlat
out
add
mov
out
dec
inc
xchg
addr16
xchg
mov
add
add
add
xchg
dec
push
stos
mov
out
or
inc
add
(bad)
cdq
jg
xchg
in
fnsave
pop
mov
retf
push
xchg
out
jo
imul
dec
(bad)
aas
(bad)
cmp
mov
aad
leave
mov
mov
mov
pop
mov
cmp
mov
mov
jle
stos
jbe
iret
pusha
ss
cmp
es
shl
aas
sbb
int3
xchg
hlt
lahf
jmp
inc
add
mov
xor
pushf
sub
pop
adc
and
int
add
fidiv
das
mov
scas
push
cmp
and
movs
aaa
xor
aas
jmp
cmp
mov
or
jg
cdq
ja
stc
mov
ret
ins
fbld
pushf
push
test
jp
cli
hlt
in
mov
call
imul
ja
ret
pop
jbe
gs
neg
lds
(bad)
leave
cmp
sbb
sbb
leave
xor
and
pusha
mov
dec
pop
add
mov
lods
or
jl
ret
fld
add
jg
xchg
xor
movs
jbe
xor
or
cs
(bad)
das
fdiv
inc
ins
fcmovbe
cwde
pop
rol
test
sub
push
scas
xlat
fidiv
pop
jo
pusha
cmc
out
jl
sub
loop
ja
jno
pop
aam
dec
imul
fst
jg
dec
push
cwde
adc
ror
or
xchg
jbe
div
mov
out
fwait
inc
shl
sub
dec
(bad)
and
pop
mov
jge
jge
mov
cmp
popa
ss
push
inc
add
add
sbb
or
add
dec
xchg
adc
imul
push
cmp
lods
xor
sub
(bad)
rol
add
ja
loopne
mov
stc
out
and
xor
adc
cld
addr16
jnp
xor
cmp
mov
cmp
(bad)
sbb
lahf
add
fprem
push
sbb
dec
or
cdq
jnp
ins
ret
jmp
ss
lods
jle
shl
in
cmp
mov
and
mov
add
rcl
push
or
push
stos
enter
fisub
or
iret
add
add
div
mov
push
fisub
xchg
out
js
fwait
enter
xchg
popa
(bad)
call
ret
push
jge
push
mov
push
fbstp
je
popf
ja
jp
xor
sti
shl
xor
jecxz
shl
jae
fsub
add
inc
repnz
jne
hlt
call
rol
shr
and
add
and
ins
test
fnstenv
xchg
test
mov
and
out
je
pop
leave
inc
out
lock
pop
fs
mov
add
mov
ds
jg
cmp
mov
push
sar
dec
jle
push
xor
movs
out
add
xchg
jmp
jge
push
xor
mov
ror
scas
shl
push
add
stc
rcl
ins
push
cld
mov
push
inc
push
es
dec
fbstp
mov
add
xlat
call
inc
cwde
mov
sub
pushf
xchg
adc
pause
jmp
fimul
add
pop
push
sub
lods
dec
sub
fcmovnb
imul
add
fbld
dec
mov
sahf
scas
fidivr
cmc
xchg
push
pop
test
enter
movs
fnstcw
sti
inc
cmp
cld
jmp
in
ret
jmp
mov
cmp
pop
pop
add
shl
adc
xlat
jecxz
jp
gs
add
loopne
jl
push
sar
cmp
js
stos
add
add
lods
push
push
(bad)
mov
dec
mov
adc
lods
cmp
out
shl
cli
fimul
cmp
xor
and
jne
or
lock
dec
imul
sub
retf
add
fst
push
inc
mov
push
pusha
ins
push
outs
es
retf
arpl
shl
std
mov
pop
or
and
pop
mov
xor
(bad)
(bad)
inc
sub
sub
xchg
les
addr16
lods
std
(bad)
pop
cmps
xor
cmps
(bad)
jmp
sbb
std
cmc
jl
jb
mov
xor
sub
out
(bad)
jne
cmps
mov
cmps
bound
fdiv
xchg
stc
out
ins
leave
add
or
mov
mov
inc
jl
cmp
(bad)
sbb
cmps
push
cli
fidiv
pop
cwde
sbb
add
imul
test
mul
cdq
fsub
xor
and
ja
mov
gs
push
or
add
clc
mov
fbstp
imul
inc
and
xchg
mov
or
xchg
mov
push
dec
mov
mov
in
(bad)
hlt
out
call
adc
jp
sar
pop
pop
fdiv
pop
xor
xor
dec
aad
ds
div
cli
add
add
jo
in
cmp
(bad)
and
fldenv
fmul
adc
push
fs
inc
pushf
test
xchg
test
lods
sbb
cwde
sbb
add
popf
dec
out
std
push
int
xor
xchg
jg
cmp
test
cs
xchg
and
pop
lods
rcr
dec
stos
scas
ror
(bad)
fwait
hlt
push
push
add
inc
push
mov
retf
sub
scas
ret
push
test
cmp
aas
adc
cmp
ds
jecxz
push
jp
shr
and
cmc
repz
in
jae
add
and
fbld
test
enter
xor
mov
cmp
popf
ins
popf
mov
mov
add
adc
or
mov
and
xor
cmp
pop
cmp
lds
rol
lea
pop
aaa
sahf
dec
repnz
retf
mov
xlat
(bad)
fdivr
xchg
pop
std
xchg
mov
sub
fcmove
out
jae
in
jg
hlt
mov
add
pop
or
fidivr
(bad)
(bad)
pop
paddq
add
cmp
dec
jle
dec
enter
iret
adc
mov
scas
adc
(bad)
outs
outs
outs
xchg
sti
dec
(bad)
repnz
cmp
cmps
dec
jmp
push
mov
mov
test
sti
push
adc
sar
xor
inc
or
sbb
jg
arpl
sbb
imul
gs
jge
cmp
or
jecxz
mov
jne
add
cmp
cld
sahf
test
push
and
rcr
pop
pop
data16
jmp
mov
jns
cwde
cmps
(bad)
jecxz
inc
sbb
sub
or
cli
pop
pop
das
jge
lock
leave
xchg
daa
daa
fs
cs
movs
div
push
aaa
pop
xor
xchg
call
fbld
fldenv
cmp
add
and
mov
mov
mov
mov
sub
test
inc
xor
cmc
xchg
je
dec
jnp
jl
pop
icebp
arpl
test
add
cmp
fcom
loopne
push
adc
movs
(bad)
cld
pusha
pop
mov
lock
clc
sbb
cli
cld
xor
cmp
mov
xchg
add
push
lds
push
add
into
arpl
add
into
test
push
push
in
pop
mov
mov
fisub
add
pop
add
push
push
inc
jecxz
xchg
dec
cld
leave
fidiv
push
jg
ins
std
push
add
fiadd
dec
mov
and
add
cmp
outs
mov
mov
retf
mov
adc
pop
in
mov
jmp
mov
stc
and
xchg
pop
mov
int
mov
stc
jnp
mov
mov
add
fcom
jno
xlat
lods
mov
dec
aam
and
sahf
sahf
mov
fsub
aam
scas
pop
mov
push
das
call
add
and
(bad)
pfcmpgt
jp
test
cmp
jl
jne
jne
add
jecxz
mov
jmp
cmp
out
fnsave
loopne
sar
cli
sbb
pop
aad
pop
int
popf
mov
mov
add
dec
xor
sahf
nop
fcom
add
sbb
pop
dec
(bad)
rol
iret
or
test
(bad)
mov
cmp
mov
pusha
imul
cmp
add
stos
xor
inc
stc
cmp
sub
jg
add
fcomip
cmp
cli
mov
adc
pop
inc
outs
dec
es
mov
push
jmp
stos
push
movs
push
or
nop
and
popa
cli
cs
ret
ins
and
leave
leave
ss
sub
sub
inc
dec
xor
outs
mov
jno
mov
sbb
mov
xor
pop
push
js
shl
out
(bad)
iret
add
xchg
std
lods
(bad)
stos
xchg
push
xchg
jns
inc
pop
push
loopne
(bad)
cmc
add
(bad)
aam
shl
mov
ds
and
mov
jnp
cmp
cmc
not
pop
mov
inc
test
sub
mov
cli
push
leave
adc
and
pop
dec
and
(bad)
sti
cli
iret
iret
jmp
int3
cld
stos
clc
bound
stos
into
mov
pop
xchg
mov
(bad)
cmp
and
scas
xor
ss
pusha
push
sub
mov
or
adc
xchg
mov
add
iret
aaa
cmp
push
sbb
rol
xchg
test
lods
aaa
mov
aad
retf
jnp
mov
sub
inc
pop
jnp
cmps
pushf
dec
and
add
std
dec
mov
add
jg
dec
addr16
inc
add
dec
fwait
outs
inc
add
push
sbb
mov
cmp
sbb
mov
add
out
aam
push
cli
xchg
neg
jns
and
push
mov
cld
dec
push
jmp
fcmovb
adc
lods
popa
ds
cli
add
add
dec
movs
pop
std
(bad)
pop
pop
test
pop
push
add
pop
pushf
loop
icebp
mov
fisttp
mov
scas
dec
pop
fs
ja
jne
ja
jp
cs
and
sbb
or
add
adc
and
popa
pusha
jmp
lds
inc
add
fs
dec
mov
push
stos
cmp
add
or
adc
fcom
sbb
dec
retf
rcl
dec
dec
jne
push
out
jl
cmps
cmp
nop
test
out
cmp
sub
or
adc
shl
aas
inc
(bad)
mov
xchg
cmps
mov
out
lds
and
mov
xor
(bad)
shl
cwde
dec
inc
xor
jecxz
add
test
inc
pop
adc
pop
retf
stc
jns
sub
or
int3
test
movs
inc
and
push
mov
push
out
or
rcr
dec
sub
ret
mov
cwde
add
pop
dec
mov
scas
pop
dec
popf
(bad)
jecxz
push
or
xor
jo
lds
xchg
sub
sbb
into
leave
fld
add
adc
rol
mov
je
(bad)
popa
jecxz
push
add
sbb
inc
popf
or
jmp
aaa
ficomp
stc
add
add
and
repz
adc
dec
(bad)
(bad)
in
xlat
xchg
xchg
(bad)
popf
mov
jns
test
dec
aam
push
adc
dec
pusha
push
movs
and
xchg
cli
sbb
(bad)
push
test
xor
xor
push
xor
mov
mov
lock
int3
cmps
xchg
pop
and
adc
xchg
retf
xor
mov
push
mov
inc
push
sar
imul
sub
ret
pop
mov
jno
pop
cmp
arpl
in
int
inc
push
pop
cmp
sbb
mov
sbb
(bad)
loope
xchg
xor
sbb
pop
mov
push
pop
xchg
rol
out
fld1
cwde
mov
in
dec
cmp
fdiv
ins
aam
xor
dec
pop
imul
jmp
frstor
or
push
jmp
adc
out
imul
iret
pop
or
js
mov
rcl
jl
xor
rcl
adc
jnp
mov
xor
int
ss
aas
jmp
ret
inc
jmp
and
inc
add
cmp
fdivrp
xor
push
add
std
int3
test
fs
scas
xchg
sahf
jle
jmp
inc
push
ja
adc
(bad)
(bad)
mov
inc
clc
out
sbb
xor
test
cmp
rcl
fiadd
inc
ret
hlt
retf
mov
das
mov
push
mov
or
jmp
std
sbb
mov
pop
mov
push
push
test
mov
dec
lds
test
or
(bad)
cli
mov
(bad)
into
aaa
repz
xlat
popa
lahf
and
xor
scas
push
ss
daa
fsub
lods
fst
dec
inc
lahf
outs
push
jns
or
and
cwde
cs
mov
fcmovu
inc
imul
and
out
ror
inc
jmp
mov
cmp
call
sub
sti
cs
dec
daa
arpl
push
fidiv
mov
xchg
jmp
shl
sbb
adc
add
jmp
stc
stc
push
fucomi
mov
(bad)
imul
jmp
add
ficomp
outs
ins
ins
or
test
mov
jecxz
scas
scas
mov
xchg
je
sbb
loope
inc
call
or
fcmovb
(bad)
cli
cdq
jle
sahf
inc
fcom
xchg
jle
fs
ins
xor
add
ficomp
scas
fimul
fnsave
fs
in
aas
adc
inc
jmp
daa
xchg
shl
push
fbstp
cmc
pop
test
mov
in
je
aas
pop
add
fwait
cdq
mov
std
push
inc
movs
cmp
sub
push
pop
jbe
scas
popf
icebp
or
pop
lds
shl
test
mov
cmp
cmp
push
pop
lahf
xchg
rcr
jno
jns
fs
rcl
dec
mov
retf
mov
test
add
jg
movs
stos
ds
dec
cmp
xchg
mov
mov
xor
cmps
sbb
mov
packssdw
xlat
and
enter
loope
stos
or
adc
mov
mov
jle
imul
and
fcomp
mov
je
int3
fiadd
mov
shl
mov
fistp
or
nop
add
shl
mov
call
cdq
punpcklwd
std
add
clc
repnz
iret
out
cmp
mov
dec
adc
or
pop
sbb
mov
retf
mov
mov
loopne
sub
in
sub
xchg
push
nop
je
adc
sti
movs
das
add
inc
inc
xchg
dec
mov
push
int3
pop
test
pop
(bad)
(bad)
rcl
mov
lock
scas
icebp
add
arpl
push
jmp
cmp
and
or
pop
fcmovbe
adc
scas
dec
(bad)
jp
icebp
arpl
pop
pusha
popa
pop
add
pop
inc
clc
push
fisttp
mov
cmp
cmp
aaa
mov
inc
or
pop
push
jns
push
mul
(bad)
mov
sbb
sbb
inc
aas
cli
adc
retf
dec
movs
leave
xchg
jno
dec
and
adc
and
test
mov
jmp
ror
adc
fnstcw
mov
out
fdiv
cmp
cmps
jnp
push
scas
mov
or
cwde
stc
cmc
cmp
scas
and
hlt
div
retf
jg
jp
jno
xor
add
jb
jae
mov
shl
jge
mov
mov
ret
push
xor
mov
and
ret
imul
enter
inc
xchg
pushf
inc
sub
cmp
rol
lds
cli
sbb
(bad)
rcl
jnp
pop
add
cld
dec
cld
clc
arpl
inc
into
fcmovnb
adc
mov
ja
add
pusha
movs
jg
add
shr
sbb
inc
outs
gs
rcl
retf
cmps
and
xor
jmp
push
(bad)
mov
(bad)
ret
inc
jmp
popf
cmp
cmp
cmp
call
xchg
ins
xor
outs
push
cmp
mov
in
(bad)
pop
outs
movs
retf
pop
mov
nop
mov
mov
enter
jle
stc
add
ds
test
js
and
mov
jo
sub
xor
xchg
shl
arpl
add
adc
iret
or
add
push
xlat
dec
cld
xor
stc
in
(bad)
inc
sbb
pop
xor
adc
ds
loop
push
add
inc
sbb
mov
out
test
pop
retf
fcmovnu
xor
int3
inc
dec
jnp
sbb
ret
clc
loope
jg
shl
sbb
mov
pop
add
xchg
add
xchg
or
loop
cmc
dec
mov
mov
mov
retf
sbb
sub
add
shr
movs
mov
cmc
push
mov
loope
pop
cmps
scas
jl
sub
fucom
(bad)
sbb
std
jmp
cmp
mov
mov
out
adc
pop
inc
dec
add
add
jne
dec
jns
sbb
clc
push
jae
push
adc
add
out
inc
inc
sbb
(bad)
mov
add
adc
out
sbb
adc
gs
stc
es
or
bound
loopne
adc
ins
es
inc
aas
ss
loope
sbb
sbb
sub
call
or
pop
dec
jp
sbb
outs
xor
inc
out
dec
push
(bad)
clc
mov
retf
clc
adc
add
add
cmp
push
xor
(bad)
fistp
icebp
adc
sahf
mov
nop
addr16
aas
cli
fmul
icebp
adc
sbb
or
push
mov
aas
(bad)
xlat
js
outs
repnz
push
loope
xor
(bad)
jmp
pop
cli
adc
cmp
xchg
in
test
adc
in
daa
pop
retf
and
sahf
inc
add
fwait
jecxz
xor
std
jp
std
neg
inc
and
mov
sahf
scas
bnd
(bad)
cli
(bad)
xor
inc
inc
and
and
push
leave
shl
add
ds
popa
pusha
fdiv
test
cwde
dec
cmp
scas
mov
fdivr
push
cmp
cmp
lea
sbb
gs
jbe
sub
jle
push
cmps
cdq
jle
movs
test
inc
sbb
jle
add
xchg
add
jnp
mov
retf
and
addr16
jmp
mov
or
and
mov
mov
jnp
pop
dec
dec
xchg
sbb
repz
in
mul
outs
stos
(bad)
cmp
pushf
adc
push
idiv
fwait
xor
mov
rol
ficomp
pop
jl
inc
mov
xchg
adc
adc
pop
lock
jle
xchg
jmp
call
fnstenv
(bad)
hlt
jns
iret
jecxz
mov
cmp
add
or
shl
push
or
and
push
push
mov
add
pusha
or
test
imul
ja
mov
popf
cmp
ret
(bad)
bound
cmc
shr
bound
inc
xchg
cmp
adc
mov
and
sbb
repnz
sbb
adc
xchg
in
and
pop
aaa
aad
(bad)
pop
shr
icebp
cmp
jl
push
jmp
loopne
xchg
pop
daa
enter
push
pop
mov
xchg
xchg
cmc
daa
sub
jle
push
std
enter
jg
sar
mov
into
add
cld
mov
or
or
pop
cmps
jnp
scas
push
loop
out
(bad)
(bad)
pop
adc
(bad)
adc
ins
pop
xchg
mov
popa
adc
enter
std
mov
cmps
int3
popa
arpl
cmc
add
sub
pop
dec
std
add
hlt
mov
stc
out
ds
sub
out
rcr
cmp
mov
mov
mov
fldcw
sbb
shl
cmp
movs
movs
ja
in
inc
aad
les
jmp
xchg
int
push
div
out
ja
pop
or
repz
fimul
sti
sub
jne
dec
int3
loope
mul
test
mov
push
pop
mov
cmc
sub
push
scas
int
cmp
cwde
mov
sbb
xchg
ret
in
inc
(bad)
rcl
rol
jmp
jno
stc
(bad)
cld
sbb
dec
frndint
out
gs
in
jno
in
ds
pop
cmps
lahf
dec
jp
icebp
mov
sub
cmps
add
or
std
xlat
fild
or
(bad)
js
pop
dec
(bad)
loop
scas
mov
mov
xchg
jmp
pop
neg
add
sub
jg
jl
pop
push
mov
adc
add
test
cwde
(bad)
or
fistp
push
movs
shl
push
outs
mov
fwait
adc
cmp
rep
jp
(bad)
adc
iret
ins
sbb
ss
inc
mov
fisttp
inc
add
mov
dec
shl
jmp
add
stos
fsubr
and
cmc
fbstp
dec
push
fld
xchg
cli
mov
jge
pop
imul
mov
push
and
pop
pop
pop
pop
mov
jle
es
loop
mov
(bad)
repnz
es
lock
jmp
fsubr
out
and
jmp
imul
jmp
mov
dec
lahf
ret
mov
pop
add
call
aaa
push
cmc
test
lods
shr
je
std
push
rcl
(bad)
out
mov
cmp
xchg
cmp
test
xor
fsub
sar
repz
jbe
hlt
pop
out
push
dec
(bad)
repnz
xor
jns
retf
aam
shr
jge
inc
test
mov
jne
and
add
loopne
les
ret
inc
lods
push
pop
shl
mov
cld
loope
rcl
scas
cmps
inc
push
jp
mov
rol
mov
dec
mov
push
or
sub
inc
fldenv
or
fcmovnu
sbb
push
and
int3
xor
or
jecxz
pusha
or
lahf
jbe
pushf
or
aaa
cwde
push
or
add
fdivr
out
idiv
xor
out
fcmovu
fld
xchg
leave
dec
rcr
scas
fs
jno
add
adc
rcl
fnstcw
(bad)
int
in
(bad)
mov
std
popf
nop
mov
mov
test
(bad)
cmp
ret
dec
nop
mov
loop
fnstenv
push
repnz
stc
ds
movs
lods
sbb
ds
daa
aas
clc
mov
sub
gs
pop
jg
in
mov
dec
ror
xchg
xchg
mov
or
adc
cmp
add
pop
cdq
aas
int
jg
call
popf
hlt
jmp
call
push
cmc
pusha
adc
jg
lock
pop
mov
xchg
nop
in
cmp
dec
inc
jmp
xor
popa
jge
push
in
jmp
cmp
xor
out
push
sbb
retf
mov
je
in
fdiv
and
xacquire
dec
fdiv
iret
nop
cmp
or
scas
and
lea
mov
out
jl
sub
outs
xchg
test
in
or
pop
test
fmul
and
cwde
add
rcr
fcomp
pop
mov
jmp
jp
aad
jmp
mov
jmp
mov
adc
mov
pusha
jecxz
xor
in
(bad)
inc
mov
rcr
cmp
mov
cld
xor
fnstcw
jb
xchg
jp
xor
icebp
jle
xchg
stc
jecxz
(bad)
(bad)
faddp
inc
iret
pusha
ret
repz
and
fbld
lea
out
pop
retf
pop
or
(bad)
out
cmps
iret
aas
jle
sar
inc
out
retf
sbb
cmp
add
repz
cmp
pop
add
and
dec
mov
and
pop
cmc
cmps
pop
jge
bound
cmp
enter
push
jl
fisubr
lahf
cmps
or
sub
ss
stc
call
inc
push
cmp
fist
and
aas
dec
jecxz
xor
leave
or
sbb
push
dec
loopne
(bad)
xchg
jno
out
push
rcr
sahf
xor
fnstsw
and
sar
int
xchg
rcl
adc
push
inc
retf
mov
mov
mov
movs
test
test
stos
xchg
aas
xlat
cdq
pop
mov
mov
push
aad
outs
pop
dec
cmp
cdq
mov
adc
stc
pop
cmp
(bad)
mov
lea
aaa
or
loop
(bad)
lods
cmps
and
inc
dec
js
and
js
mul
fdiv
add
sbb
xchg
bound
adc
enter
inc
mov
fld
in
pop
sub
scas
pop
js
stc
inc
(bad)
(bad)
inc
hlt
sub
lods
mov
cmc
pop
inc
je
sbb
repnz
mov
in
jg
dec
out
out
cmps
enter
dec
add
jb
add
or
fdivp
int3
fbld
in
hlt
test
(bad)
pop
enter
inc
adc
rcl
fist
and
xor
lahf
scas
mov
loop
xor
xor
or
or
xchg
cmp
xchg
retf
jle
or
(bad)
pop
int3
scas
jb
call
hlt
inc
sub
add
stos
push
retf
xchg
int
jbe
imul
push
or
pop
pop
mov
lods
add
(bad)
and
add
pop
ror
(bad)
pushf
retf
xor
adc
xchg
pop
pop
sub
push
aad
es
push
popa
mov
ins
(bad)
or
mov
inc
repz
mov
xor
push
loopne
repnz
mov
xor
push
outs
mov
out
adc
in
xor
pushf
in
jmp
repnz
jb
fisub
or
loope
daa
js
mov
jnp
(bad)
jmp
fidiv
xor
pop
inc
add
cmp
(bad)
push
sub
cld
fcos
call
ins
nop
into
xchg
inc
add
loopne
mov
add
outs
mov
fcomp
cmps
test
(bad)
hlt
jecxz
iret
sar
mov
popf
jne
sbb
add
add
mov
mov
inc
add
bound
push
lods
into
das
cmp
pop
cwde
or
bound
jp
nop
add
push
xchg
aad
inc
fcom
mov
push
fdivrp
and
je
ins
mov
in
fistp
push
cmp
js
sbb
in
push
mov
aas
(bad)
push
out
push
jmp
xor
dec
push
lods
cmps
pop
jbe
out
pushf
jmp
pop
add
xchg
inc
sbb
add
mov
aam
pop
xchg
stc
add
push
mov
hlt
inc
and
popa
shr
ret
lods
mov
aad
(bad)
xchg
std
mov
lds
and
imul
pop
pop
loope
jmp
(bad)
jecxz
in
rcr
jg
scas
jge
fsub
cwde
and
pop
jmp
dec
pop
cmps
pop
(bad)
(bad)
jo
movs
stc
out
push
mov
jne
xchg
repnz
repz
je
mov
cwde
icebp
xlat
pop
dec
aam
add
sub
sti
ss
fcmove
push
cli
jo
repnz
lahf
out
mov
dec
(bad)
(bad)
(bad)
mov
sub
add
inc
add
add
rcr
bound
sahf
jg
mov
jle
ds
lahf
pushf
retf
or
daa
les
jns
and
lds
enter
add
test
loope
sbb
pop
int
mov
push
arpl
xchg
int
int3
imul
and
call
inc
xchg
pop
mov
cli
mov
inc
test
xchg
sbb
or
icebp
rcl
adc
ror
jo
ss
shr
repnz
mov
cmps
pop
mov
popf
xchg
pop
xchg
arpl
jb
add
retf
pop
sub
js
(bad)
repz
outs
add
fdivr
(bad)
fistp
leave
rcr
shl
popa
mov
call
aad
mov
aaa
fbld
(bad)
cmp
loope
arpl
movs
add
jge
sbb
sbb
sbb
jmp
adc
push
inc
in
jmp
or
cmp
sahf
push
aam
mov
cli
jmp
retf
retf
or
fcomp
dec
hlt
loopne
call
sbb
imul
(bad)
mov
mov
lods
lahf
repz
or
cld
mov
lock
cmp
jmp
sti
and
repnz
mov
je
inc
mov
mov
lods
sar
aam
imul
vpmacswd
push
or
push
or
pusha
ret
cmp
push
mov
sub
or
fimul
lds
xor
pop
rol
mov
xchg
lahf
mov
push
push
push
repnz
aam
and
inc
cmps
stos
or
pop
inc
jae
xchg
daa
in
int3
add
jge
ffree
sub
push
loopne
pop
and
pushf
repz
in
int
sbb
dec
push
xchg
push
push
adc
inc
movs
pop
arpl
push
mov
mov
xor
jae
js
xchg
and
outs
cmps
xchg
jp
push
js
mov
mov
arpl
stos
inc
adc
inc
push
dec
inc
imul
sbb
mov
(bad)
xor
ss
cmp
push
cld
aad
sbb
ins
mov
in
mov
mov
cmps
push
mov
mov
inc
movs
js
mov
and
loopne
sub
inc
repz
sub
rcl
test
arpl
pop
jmp
jle
cmps
xlat
fist
test
jg
retf
cmc
mov
inc
scas
mov
sar
mov
mov
jno
cs
lock
add
mov
cmp
movs
dec
outs
jecxz
stos
mov
xchg
pop
add
dec
cwde
adc
mov
mov
enter
dec
test
ror
xlat
jge
and
jbe
iret
xchg
pop
icebp
sub
adc
cmps
pushf
inc
retf
aas
adc
mov
and
add
push
stos
out
cs
sub
test
imul
pop
retf
jbe
adc
mov
sub
ja
jge
aas
cld
pop
(bad)
mov
clc
sbb
dec
enter
loopne
imul
dec
xchg
mov
jmp
shl
and
mov
sbb
pop
xor
jl
out
pop
nop
mov
js
inc
adc
dec
std
jne
pop
in
jne
leave
xor
push
mov
hlt
jmp
mov
add
mov
in
jle
add
add
inc
out
xor
pop
mov
add
aad
ss
call
std
jae
pop
sbb
aad
inc
(bad)
dec
scas
out
fsubr
push
jno
das
aam
mov
test
or
mov
mov
scas
fimul
ffreep
cmps
arpl
data16
add
test
mov
je
cld
mov
mov
push
and
add
push
les
pop
push
inc
jnp
outs
ror
adc
rcr
hlt
loopne
mov
add
jl
arpl
mov
push
cmp
ret
xchg
fist
xchg
sar
pusha
or
pop
test
mov
rcr
push
push
retf
sar
sbb
fwait
leave
dec
jmp
jge
in
gs
mov
stc
dec
cli
shr
jle
dec
call
inc
xor
jnp
push
cmp
add
clc
jp
or
fimul
neg
fcom
sub
(bad)
or
mov
aaa
pop
dec
je
fwait
mov
jmp
out
in
jecxz
cmp
adc
out
pop
sar
mov
inc
ds
dec
clc
daa
mov
pop
daa
sub
inc
cmps
bsf
je
push
add
jne
dec
dec
or
in
push
fnsave
jg
mov
seta
push
ins
mov
(bad)
mov
fsubr
(bad)
sub
jns
aam
push
jbe
inc
pop
jle
dec
das
loopne
mov
add
pop
xchg
das
add
int3
or
or
xor
aas
add
add
pushf
arpl
mov
dec
pop
mov
stos
pop
ss
add
pop
adc
sbb
jnp
mov
adc
cwde
adc
pushf
jae
push
sub
(bad)
cs
pop
cdq
add
mov
pop
pop
add
push
aam
lods
rol
push
and
xor
(bad)
icebp
leave
mov
sbb
adc
ja
xchg
cs
(bad)
jge
jbe
mov
pop
jb
rcr
fnstsw
dec
aas
test
mov
ficomp
stos
in
adc
mov
cmp
scas
das
mov
mov
shl
jg
imul
ffree
add
stos
cld
retf
dec
cwde
jns
push
inc
iret
push
imul
(bad)
rcl
add
leave
sbb
pop
mov
or
cmps
pop
in
aas
int
fwait
pop
cmc
pop
jg
fstp
adc
jo
out
adc
(bad)
outs
fldenv
jb
cli
ret
rcl
cmc
fwait
aaa
icebp
test
dec
aam
xchg
scas
outs
mov
mov
jl
pop
cmp
ss
or
and
cwde
imul
adc
jecxz
mov
add
cli
add
dec
push
fwait
pop
sub
retf
mov
xor
push
or
lea
sti
mov
mov
add
sbb
adc
sub
dec
(bad)
adc
or
ins
outs
adc
mov
xchg
push
sub
es
shr
(bad)
pusha
and
jmpw
sub
mov
gs
push
xchg
cmp
inc
stos
nop
cli
ins
lods
ins
push
gs
aad
dec
mov
les
mov
ds
pop
mov
ds
icebp
(bad)
or
mov
mov
pop
pop
popf
ja
sub
push
les
xchg
imul
sahf
idiv
movs
mov
ins
sbb
mov
loope
cld
jle
and
stos
js
push
xchg
pop
retf
jp
aad
mov
(bad)
gs
push
and
push
cmps
dec
pop
sub
sbb
dec
or
mov
pop
sub
fbstp
sbb
xor
into
adc
push
cwde
xor
xchg
into
mov
pop
imul
push
call
xor
add
loope
rcr
mov
outs
mov
mov
lods
inc
jne
adc
push
jge
daa
les
push
jnp
jno
out
xchg
mov
mov
push
cwde
sbb
push
rol
inc
pop
mov
or
ret
call
stos
or
fdiv
lea
and
js
sbb
push
mov
mov
xor
and
mov
xor
sahf
addr16
sbb
cmps
mov
fs
dec
scas
adc
fnstenv
and
adc
shl
xor
arpl
mov
push
ins
dec
jp
pop
mov
mov
pop
retf
dec
lods
mov
shr
mov
aaa
mov
jnp
xchg
out
mov
jmp
xor
xlat
data16
mov
push
pop
lods
dec
loope
xchg
pop
and
pop
sub
mov
jns
in
xor
mov
(bad)
test
mov
add
mov
(bad)
sub
out
sub
scas
mov
ds
icebp
bound
std
xor
fild
xlat
mov
xor
stc
push
(bad)
lock
adc
cmp
std
call
inc
cdq
aas
test
cmp
jp
inc
ficomp
sub
cwde
sbb
cmc
add
xor
(bad)
aas
leave
sub
jb
lods
sub
jp
mov
ins
pop
inc
je
add
retf
cmp
mov
xor
test
movs
cmp
hlt
int
inc
jmp
ins
adc
test
aaa
cmp
bound
add
pop
adc
ret
or
pop
jle
fiadd
xchg
arpl
jno
cld
cmp
cs
repnz
or
jno
add
sbb
mov
jno
fidivr
cwde
cmps
and
jae
loop
jmp
stos
add
ret
shl
and
add
lahf
int
xchg
pop
scas
stos
push
xor
adc
lea
ret
in
ds
jle
jg
mov
frstor
out
test
push
or
mov
stos
mov
or
push
dec
push
mov
sar
hlt
stc
xor
push
xor
jge
mov
retf
aas
out
sbb
in
fidiv
pop
mov
fbstp
pop
pusha
xchg
jmp
pop
repnz
js
out
fstp
out
scas
in
xchg
dec
xchg
iret
loopne
loop
sub
fsubp
sub
inc
pop
fmul
or
out
sti
mov
mov
lds
outs
iret
or
nop
lahf
jbe
add
or
xor
ja
xchg
out
stc
dec
outs
(bad)
loopne
pop
ret
xchg
add
mov
loop
rcr
jb
out
xchg
or
sub
test
sub
pop
mov
fdivr
xor
mov
call
ja
lods
shr
test
dec
repnz
add
mov
inc
je
adc
sub
aam
push
and
or
mov
mov
and
jl
aam
xchg
sub
aas
ror
les
jbe
jge
es
inc
fisub
jmp
int
rcr
cmp
push
or
push
jp
dec
cmps
call
mov
pop
lods
sub
into
rcl
lods
scas
mov
pop
and
shl
adc
jl
jno
pop
repnz
pop
mov
sahf
js
aam
mov
dec
cdq
sub
xchg
call
cdq
aad
jmp
popf
xor
mov
aad
ins
jle
lods
ins
dec
scas
(bad)
in
retf
ficom
fisubr
sub
int3
jbe
xchg
test
(bad)
clc
mov
imul
loope
adc
cld
push
jl
push
(bad)
pop
push
jmp
sub
loopne
mov
jle
cmp
adc
push
dec
sbb
add
xor
aad
sar
add
scas
cld
jo
fld
popa
cmc
lldt
pop
lods
aam
push
sub
jne
adc
mov
jl
jnp
repz
sbb
add
and
nop
call
mov
mov
and
aaa
sbb
adc
or
inc
add
arpl
or
call
and
daa
pop
or
cmp
shl
inc
cmp
daa
mov
shl
popf
cdq
push
sbb
push
inc
jge
in
imul
inc
inc
push
call
push
or
xchg
push
or
repz
and
lds
mov
sub
shr
sbb
loope
mov
mov
push
mov
inc
xchg
push
mov
cwde
outs
dec
pop
jecxz
cmp
xchg
adc
les
jle
xlat
mov
retf
aad
test
mov
xchg
inc
sub
shl
int3
pop
xor
pop
in
fild
stos
ins
dec
je
cli
clc
push
mov
in
je
xor
xchg
mov
xor
(bad)
dec
leave
test
jnp
mov
lahf
out
addr16
aad
cmps
sahf
icebp
push
cmp
sbb
pop
jnp
mov
fwait
push
(bad)
std
iret
pop
out
(bad)
ficomp
add
loope
pusha
fnstcw
pop
xchg
jns
dec
inc
inc
scas
aaa
outs
gs
jno
mov
mov
fbld
jns
pop
mov
imul
inc
clc
mov
fld
lods
inc
aaa
pop
mov
int
mov
jmp
push
xor
sbb
int3
stos
mov
cmp
dec
(bad)
mov
sbb
pop
dec
movs
dec
ins
add
xchg
dec
inc
fild
fnstcw
or
sbb
adc
mov
test
pusha
fcmovnb
fcomp
(bad)
je
dec
das
out
es
push
out
les
mov
jge
adc
and
add
scas
cmps
inc
shl
adc
test
shl
popa
es
loop
adc
stc
es
outs
(bad)
stc
or
addr16
sbb
dec
lds
inc
retf
mul
xchg
pop
sbb
(bad)
cmp
dec
cmps
mov
cmp
or
sbb
push
movs
bswap
mov
(bad)
cld
fs
popa
xchg
dec
lock
call
sbb
call
imul
call
sbb
(bad)
retf
fbstp
imul
inc
cli
ficomp
sub
pusha
cld
cwde
icebp
dec
xchg
add
mov
stos
adc
idiv
int
dec
add
int
aaa
sbb
cmp
add
and
sub
outs
lods
jmp
das
arpl
psrld
adc
sbb
push
mov
test
pop
(bad)
mov
ins
fisttp
jmp
xchg
pop
bound
call
aam
mov
std
xchg
repz
cmp
leave
sub
cli
push
dec
push
sub
mov
mov
jge
adc
push
fwait
xor
add
js
or
in
test
pop
sbb
and
lods
inc
and
inc
and
outs
pushf
dec
push
xor
sbb
push
sar
dec
or
nop
imul
aad
ret
pop
in
cmp
pop
cmp
push
xor
mov
ins
add
jle
imul
xor
xchg
in
mov
add
(bad)
ins
jmp
push
adc
in
jge
hlt
out
adc
mov
aaa
repz
fdiv
and
movs
rcr
xchg
inc
sti
ja
shl
(bad)
rcl
div
rcl
pop
or
in
mov
jecxz
or
cmp
push
retf
in
lock
pop
sub
out
sbb
mov
aam
dec
add
xchg
rol
inc
pop
jae
sub
aas
std
aad
(bad)
das
div
cmps
lds
add
ss
mov
test
stos
adc
mov
mov
shl
ret
pop
popa
jbe
mov
jo
inc
push
(bad)
sahf
movs
pop
jnp
mov
cmp
xchg
push
sbb
mov
cmp
ins
ds
fldenv
(bad)
call
push
popa
retf
lea
(bad)
jp
push
pop
ror
jmp
and
cli
sub
inc
adc
sbb
fwait
mov
xchg
mov
call
or
cdq
nop
stos
add
mov
cmc
pushf
jno
cdq
mov
adc
cmp
sbb
adc
(bad)
loope
mov
ds
in
mov
dec
dec
xor
sub
xor
cmp
call
lods
(bad)
jmp
stc
cmps
cmp
call
popa
xor
pop
addr16
sar
jmp
nop
cld
mov
lahf
mov
aas
(bad)
cs
ror
mov
aaa
fdivr
stos
cld
scas
arpl
je
mov
pop
or
push
jp
(bad)
xchg
hlt
in
cmp
(bad)
cmp
test
or
sti
dec
cmp
loopne
mov
(bad)
sbb
in
pop
enter
js
xchg
cmc
pop
enter
or
mov
(bad)
scas
call
mov
mov
xor
mov
jns
or
sub
es
not
retf
je
fwait
dec
mov
pop
dec
fldcw
pop
sbb
or
mov
(bad)
loopne
mov
stos
jl
(bad)
(bad)
mov
mov
retf
rol
(bad)
ja
lods
sti
adc
push
ja
and
fstp
xchg
pop
call
sbb
inc
inc
ret
mov
cwde
ss
clc
add
loopne
cmc
lds
xor
add
sub
aam
rcr
cwde
add
enter
stos
pop
dec
mov
ret
test
test
and
xor
jae
adc
add
(bad)
fst
xchg
fprem1
push
dec
pop
(bad)
(bad)
jmp
repnz
mov
clc
js
clc
mov
ins
jge
xor
pop
test
mov
or
movs
fst
cmp
cmovo
sbb
sbb
sar
mov
ror
mov
arpl
cdq
inc
dec
js
fiadd
lock
sub
cmp
or
retf
push
pop
mov
cld
sbb
push
cmovp
test
pop
jnp
dec
ds
and
fst
cmps
xchg
sar
mov
retf
ins
ins
js
add
(bad)
lods
jecxz
jg
aam
sub
jg
in
(bad)
mov
jb
add
sbb
or
adc
stos
std
sub
outs
pop
dec
mov
mov
movs
pop
sbb
int3
adc
cmp
inc
aas
jns
push
idiv
push
pusha
scas
scas
cmps
pop
sub
test
pop
mul
lock
ins
sub
aam
pop
aas
inc
fdiv
data16
outs
ins
jo
retf
ins
inc
aaa
cs
add
and
sub
test
inc
add
(bad)
sbb
or
mov
icebp
push
test
ror
xor
les
or
xchg
jb
push
mov
inc
sbb
shl
retf
mov
es
cmps
xchg
fst
jmp
test
mov
aad
mov
sbb
cmps
ja
or
in
retf
pop
lea
jmp
cmp
ins
outs
aas
mov
in
mov
jae
dec
mov
or
pop
test
sbb
mov
call
loope
in
stos
cmps
test
mov
in
jl
sbb
rol
and
jnp
rcl
outs
cmp
jns
(bad)
out
test
ret
pusha
sub
mov
ror
jge
dec
das
cmp
push
or
push
not
call
jmp
adc
sub
fadd
push
cs
(bad)
jmp
jmp
mov
sub
mov
mov
std
or
repz
xchg
sahf
popa
popf
int3
gs
ror
sub
pop
inc
push
fs
shr
add
and
and
repnz
addr16
xor
sbb
out
nop
pop
adc
xchg
dec
das
(bad)
outs
add
std
add
or
aad
jg
cmp
and
loopne
jno
and
(bad)
mov
cmp
cli
sub
clc
and
mov
int
movs
ds
push
idiv
cmp
push
retf
out
or
jb
and
mov
mov
push
out
leave
stc
sub
sbb
cmps
sub
clc
xchg
mov
aaa
push
rol
push
mov
fmulp
adc
or
aaa
in
push
sbb
bnd
retf
call
xchg
cwde
imul
in
sbb
dec
and
pop
add
jmp
sbb
fistp
(bad)
jbe
stos
jg
sbb
jbe
dec
retf
push
scas
cmp
adc
ins
pop
push
add
cmc
dec
cmps
ds
rcl
and
mov
and
jp
pop
fmul
(bad)
loop
fld
pop
dec
mov
scas
xor
(bad)
(bad)
or
les
icebp
xchg
mov
adc
dec
shl
cmp
add
sub
xchg
or
or
add
repz
add
jnp
or
fimul
jmp
imul
adc
jo
lahf
dec
(bad)
lahf
xor
gs
aad
es
mov
push
lea
jge
outs
sub
push
jne
add
out
fist
imul
fcom
sbb
syscall
dec
cmp
mov
and
jb
adc
jl
fistp
pop
xor
ror
xor
pop
ffree
call
addr16
fsub
push
fbld
idiv
test
neg
dec
dec
outs
fmul
inc
test
dec
fist
pop
(bad)
retf
and
out
jg
xchg
movs
outs
mov
aas
pushf
enter
and
lods
das
jno
adc
sub
sbb
les
adc
and
mov
scas
jnp
sub
add
mov
jmp
jae
ins
cs
stos
ret
push
sub
sub
add
jb
loope
add
pusha
push
adc
pushf
pop
lods
push
not
retf
hlt
out
jno
mov
in
xor
inc
mov
ins
dec
adc
mov
lea
shl
lods
fxam
xor
ret
mov
adc
neg
add
cmp
mov
sbb
mov
in
jle
adc
cmps
and
and
adc
call
test
cwde
sbb
pop
cmp
sgdtd
data16
out
cwde
jns
std
pop
es
retf
mov
fidiv
push
pusha
xor
sbb
test
aam
pushf
xor
sub
mov
cmp
sub
repnz
cmp
femms
dec
cwde
adc
movs
push
pop
adc
mul
int
leave
mov
jl
dec
test
inc
mov
adc
sub
xor
aad
(bad)
cld
popf
psrld
neg
mov
push
imul
sbb
add
retf
mov
popa
mov
(bad)
call
icebp
or
push
out
popf
adc
mov
mov
out
pop
jae
mov
sahf
jmp
inc
or
pusha
jecxz
dec
or
push
sahf
imul
xor
cmps
mov
push
adc
mov
mov
mov
push
sbb
push
stc
add
clc
xchg
mov
mov
adc
inc
hlt
icebp
mov
sete
mov
enter
mov
ret
push
add
or
sbb
inc
sbb
and
out
mov
xor
add
aam
xor
cdq
jle
or
ret
inc
call
out
jo
pop
mov
dec
ror
cmps
xchg
loop
test
inc
xor
or
test
cmp
or
clc
mov
idiv
fiadd
dec
cmp
jp
(bad)
ret
push
mov
repnz
hlt
jmp
mov
(bad)
mov
cs
jns
mov
cmp
pop
jecxz
pop
cmp
loop
aam
enter
xchg
and
movs
adc
fs
push
xchg
ins
cmps
or
mov
push
repnz
(bad)
fcom
pop
dec
fidivr
daa
add
xor
cld
inc
push
inc
imul
clc
add
nop
jl
(bad)
setnp
inc
int3
or
mov
not
lea
jno
int3
or
jge
cmp
ds
pop
sub
add
into
addr16
or
fwait
data16
jbe
mov
cmps
adc
out
jne
jp
sub
cmp
xor
mov
scas
sbb
pop
mov
test
or
inc
dec
imul
jbe
call
imul
repnz
aas
xlat
es
add
dec
xlat
fs
jmp
les
xchg
out
add
pop
jmp
stos
lea
mov
punpckhwd
(bad)
sbb
leavew
into
mov
jge
and
jg
je
outs
fisubr
imul
xchg
lock
cdq
jmp
retf
out
cmps
dec
jmp
fcomp
sub
out
sbb
addr16
call
fnsave
cmp
push
es
dec
stos
mov
aam
cmp
in
dec
xchg
test
ja
popa
jle
fimul
and
jnp
ja
pop
add
fmul
pop
out
retf
pop
shl
add
std
mov
pop
ror
push
xor
stc
lods
add
mov
je
lods
rcr
xor
mov
scas
es
mov
(bad)
mov
shl
adc
pop
ds
or
adc
xchg
iret
mov
rcr
pop
scas
int
xor
inc
push
xor
or
cli
or
add
retf
add
or
cmp
sbb
adc
clc
shl
pop
scas
inc
ret
outs
int
and
push
imul
xor
push
sub
leave
add
aad
jle
adc
mov
test
inc
push
jle
mov
sahf
dec
bound
pop
sbb
lea
test
sar
xor
xlat
or
ds
push
rol
pop
push
pop
sub
addr16
retf
lods
mov
mov
pop
pop
sbb
mov
das
shl
mov
stos
shl
jg
jmp
push
mov
mov
es
mov
mov
jg
arpl
adc
ds
das
push
jg
xor
pushf
add
mov
sti
pop
bound
xchg
pop
les
ins
cmps
lods
xchg
cmc
lds
call
mov
ins
sub
rcl
push
mov
fdivr
mov
or
sbb
out
ret
(bad)
jns
in
mov
out
mov
dec
or
xchg
or
(bad)
lods
outs
add
gs
cmp
sub
repnz
jle
or
pop
xchg
shr
adc
sar
and
sbb
jge
(bad)
imul
test
mov
(bad)
lea
add
or
push
cmps
and
clc
js
aad
xlat
xchg
add
sbb
dec
adc
cli
pop
aas
mov
jmp
mov
pop
sbb
and
inc
pop
xor
dec
jae
aad
scas
adc
xor
dec
pop
call
(bad)
call
ins
lahf
mov
lods
repnz
jbe
dec
push
loop
in
loope
test
add
xchg
sub
test
xlat
add
xor
test
out
test
adc
mov
aas
enter
or
outs
push
cmp
add
aam
fucomp
arpl
mov
add
push
mov
add
pop
sub
inc
mov
xor
lods
aad
ror
mov
mov
in
xchg
movs
xchg
fnstsw
(bad)
xor
popa
into
pop
adc
cwde
add
fistp
dec
iret
mov
das
popa
cmps
(bad)
aas
mov
test
test
mov
call
(bad)
push
and
cmp
adc
aam
sub
mov
cmp
ins
sbb
rol
das
es
xchg
test
bndldx
xor
or
mov
es
adc
sbb
dec
sub
lods
jmp
push
(bad)
dec
push
and
sub
ret
out
xchg
xor
jmp
jmp
xor
jb
sub
mov
mov
fwait
cmp
pop
ror
lds
dec
cwde
mov
stc
cmp
and
loope
mov
mov
lahf
jecxz
push
in
xor
out
xor
iret
push
fistp
add
xchg
cld
shr
dec
mov
out
loopne
idiv
(bad)
jae
add
xchg
dec
push
jne
mov
and
retf
je
aad
fcomp
mov
and
and
adc
jle
dec
cdq
xor
rcl
outs
mov
push
sar
int
mov
and
push
xchg
pop
and
mov
out
mov
push
or
add
sbb
inc
and
in
inc
add
mov
cmps
jne
ficomp
cmp
cmp
jno
mov
mov
inc
es
mov
xchg
push
xchg
movs
pushf
call
(bad)
sbb
imul
shr
fisubr
pop
mov
stos
add
shl
push
shr
and
icebp
imul
je
ss
rcl
fisttp
or
shl
xor
pop
nop
retf
pop
xor
push
push
jl
int
addr16
mov
pop
pop
iret
pop
pop
push
(bad)
push
fadd
inc
jg
jns
daa
push
cmps
out
repnz
jle
xchg
push
std
push
or
fstp
mov
jb
mov
push
dec
and
int
cwde
mov
mov
jno
movs
push
sbb
push
add
cmp
mov
inc
jmp
add
push
shl
stos
mov
dec
ror
(bad)
mul
push
movs
sub
or
fisubr
cs
mov
xchg
imul
inc
test
add
push
icebp
jmp
pop
movs
xchg
js
loopne
retf
(bad)
gs
lock
jno
and
dec
test
test
xor
mov
and
test
or
xor
mul
inc
addr16
or
sub
cmp
xlat
or
xchg
xchg
imul
jae
div
les
adc
xchg
lods
xchg
add
and
out
cmp
repnz
out
xchg
loop
mov
or
aad
xchg
(bad)
insertq
mov
repnz
mov
cli
jge
push
adc
lds
(bad)
cmp
mov
scas
xor
and
push
adc
sbb
push
xchg
jle
test
lahf
and
jecxz
inc
add
mov
ja
or
in
mov
pcmpgtd
add
scas
stc
arpl
bound
lods
aaa
push
and
cmp
(bad)
cmp
retf
stos
push
cmps
jmp
sub
mov
popa
adc
add
jge
xchg
arpl
cmp
mov
ror
arpl
xor
ins
xchg
xchg
sub
cmc
adc
push
pop
dec
jo
mov
pop
cmps
pop
and
dec
call
cmp
xor
fist
jmp
mov
test
jecxz
cmp
pusha
mov
cmp
jbe
ss
mov
xor
push
popa
inc
sbb
aas
arpl
cwde
pop
xor
cmp
cwde
xlat
xchg
xor
js
in
xchg
xchg
mov
in
xor
stos
idiv
lds
loopne
les
pop
sub
(bad)
or
mov
mov
(bad)
mov
xchg
in
xor
jmp
(bad)
jmp
daa
mov
or
add
rol
test
scas
fdivr
call
cmc
dec
mov
(bad)
fs
and
pop
mov
dec
inc
out
add
data16
dec
dec
retf
pop
xor
dec
push
mov
dec
mov
cmp
and
or
push
inc
xor
std
bound
fst
xchg
outs
fidiv
retf
das
xor
push
fsubr
mov
icebp
icebp
xchg
mov
in
mov
ja
push
imul
add
add
loopne
pushf
out
fs
lods
xchg
shl
sets
inc
int
pop
pop
push
in
or
cmp
jge
xlat
(bad)
sbb
mov
jae
mov
popf
mov
repnz
in
cmp
cmp
enter
(bad)
sar
xor
cmp
jecxz
jo
jb
xor
(bad)
pop
stos
test
sub
cmp
sbb
cmps
mov
push
mov
fnsave
stos
jg
cli
ja
add
nop
jle
jae
jge
enter
sub
push
repnz
cmp
jmp
(bad)
out
aam
stos
sub
imul
mov
pop
clc
fs
mov
aam
jbe
adc
lahf
bound
clc
(bad)
movs
pop
jb
adc
jns
icebp
popa
jmp
ss
stos
cmp
adc
and
ins
shl
fwait
sub
push
out
fst
sub
mov
ins
and
fwait
add
and
hlt
add
ds
dec
out
fisttp
jb
dec
add
sub
dec
adc
jns
loop
mov
dec
stos
adc
je
mov
sub
popa
cmp
and
push
xchg
xchg
xor
ds
cmc
jmp
repz
out
lahf
adc
jbe
lea
aaa
imul
data16
mov
or
push
lods
into
repz
sar
xchg
mov
xor
aad
mov
aaa
inc
popa
mov
mov
retf
pop
bound
imul
cli
sbb
push
call
das
rcr
cmp
scas
hlt
lds
shl
cmp
imul
push
inc
cmps
popa
pop
jb
sub
jl
(bad)
je
fidivr
sub
cdq
xchg
mov
rcr
jmp
aad
cmps
out
div
mov
call
shr
stos
cli
iret
adc
test
sbb
add
les
or
mov
sar
lods
push
call
lea
mov
sbb
mov
cmp
jnp
int3
test
add
pop
jns
or
ror
sbb
adc
inc
push
or
loop
mov
popa
sub
push
bnd
dec
inc
xor
ret
mov
jmp
lods
lahf
jno
adc
and
(bad)
sti
outs
scas
dec
arpl
pop
or
inc
lahf
mov
or
clc
enter
mov
inc
mov
xchg
ret
mov
outs
int3
push
(bad)
scas
leave
call
daa
push
shl
aad
cld
cmc
bound
jae
pmulhw
cdq
mov
cs
and
sbb
xor
out
movs
sub
out
aad
cmps
push
dec
mov
cmp
xor
test
pop
(bad)
iret
ins
mul
scas
mov
(bad)
sbb
(bad)
push
sbb
ret
leave
test
xor
pop
xor
sbb
fwait
retf
(bad)
dec
add
or
aas
enter
retf
loopne
jbe
jno
loop
xor
(bad)
ror
scas
and
lods
push
mov
call
sbb
or
daa
ja
inc
(bad)
aas
dec
dec
xchg
dec
fnstenv
pushf
mov
xor
int3
add
fild
pushf
test
sub
imul
lea
pusha
scas
cmps
pop
jno
mov
ins
sub
das
ret
aaa
xchg
aas
xor
mov
cld
mov
jmp
loopne
xor
xor
lods
add
fwait
inc
mov
lods
mov
test
fdivr
sahf
scas
push
jmp
adc
je
push
inc
push
pop
outs
sbb
cmps
int
or
call
fisttp
sbb
imul
aaa
dec
cmp
sti
ins
bound
cs
pusha
jmp
xchg
jnp
mov
mov
out
out
inc
mov
inc
mov
add
mov
xchg
fst
jnp
mov
rol
inc
xor
and
add
xor
mov
addr16
sbb
outs
aad
lods
mov
xlat
stos
push
pop
lea
and
inc
or
mov
mov
inc
sahf
(bad)
push
movs
sub
mov
ror
data16
rcl
stos
cdq
add
mov
or
mov
imul
mov
sbb
cwde
adc
or
cli
enter
mov
adc
sbb
push
mov
fst
push
rcl
xor
enter
in
and
add
mov
jnp
scas
xchg
dec
push
daa
xchg
or
aam
mov
dec
push
fbstp
and
push
inc
stos
cdq
cmp
arpl
lods
dec
xlat
jb
inc
push
and
mov
xchg
call
mov
leave
jmp
or
push
int3
jecxz
and
pop
enter
fist
loopne
jno
lock
sar
rcr
add
push
mov
mov
xor
mov
rcl
aaa
out
loopne
ret
(bad)
adc
dec
ret
loopne
lds
dec
xlat
repnz
sub
sub
leave
jno
cwde
add
fbld
jg
gs
int
inc
icebp
lds
rcr
xchg
dec
sub
mov
dec
xor
lods
mov
dec
add
mov
inc
dec
add
push
pop
loop
loope
inc
loop
push
test
cmp
add
hlt
and
test
and
les
jmp
mov
(bad)
out
sub
outs
push
in
cmps
dec
lahf
mov
mov
inc
pop
xchg
pop
dec
icebp
ins
aaa
adc
xor
mov
inc
pop
sbb
dec
inc
pop
jg
(bad)
popa
call
sbb
es
in
(bad)
jle
jae
lods
shr
aaa
push
imul
dec
gs
imul
call
sbb
stc
loope
jle
mov
mov
iret
adc
add
lea
cmp
neg
cmp
mul
sbb
dec
xor
movs
dec
cmps
inc
les
jno
(bad)
jg
or
add
sub
in
jne
cmps
jg
mov
xlat
pop
mov
int3
push
dec
movs
sub
shr
loop
imul
mov
cmc
std
adc
ss
add
stos
mov
dec
mov
xor
push
and
jo
sub
dec
dec
fbstp
daa
dec
add
leave
push
pusha
lock
mov
sub
and
dec
jae
sbb
add
inc
cmps
jecxz
neg
jbe
(bad)
jp
ins
fiadd
stc
cmp
push
mov
jbe
stc
scas
(bad)
out
pop
ins
push
jo
rcr
push
arpl
sahf
jge
push
jg
(bad)
jno
dec
stc
fs
mov
data16
outs
cmp
dec
jle
ret
test
jne
stc
ins
mul
inc
xor
dec
jae
inc
adc
cld
push
sbb
mov
or
cmp
add
aad
fdivrp
test
add
cmp
and
mov
mov
pop
aam
mov
adc
sbb
mov
lds
xchg
push
ins
mov
ss
and
sbb
hlt
ret
mov
inc
push
es
sub
daa
bound
push
ror
pop
enter
pop
xor
rcl
push
lock
cmp
cmp
das
add
test
xchg
inc
and
adc
push
add
push
aam
mov
push
int3
or
ja
mov
xor
push
push
xor
pop
ds
sbb
add
movs
shl
stos
push
mov
jmp
add
div
add
push
mov
and
push
sbb
(bad)
inc
push
lahf
push
aas
out
int3
mul
push
jg
push
lods
cld
jecxz
ins
call
add
fcmovu
dec
push
(bad)
out
pusha
add
out
je
xor
mov
adc
xor
(bad)
xchg
sti
cmp
mov
cmps
pop
movs
mov
xchg
jb
mov
inc
imul
cmps
outs
mov
push
cmp
ror
lods
sbb
out
push
xchg
xor
aaa
call
add
adc
enter
enter
push
and
mov
add
lea
dec
mov
call
sbb
pop
mov
push
xchg
dec
dec
das
sti
pushf
or
mov
jg
stos
inc
ds
enter
mov
inc
into
or
xor
aam
cmp
xchg
dec
pop
xchg
cmp
fsub
(bad)
shl
sbb
inc
cmp
loope
mov
cli
sub
loopne
pushf
and
ins
and
ins
mul
and
mov
jge
mov
iret
adc
inc
adc
test
or
jle
das
in
(bad)
(bad)
(bad)
sbb
pushf
xor
sub
popa
ret
mov
leave
inc
pop
jmp
adc
imul
push
not
test
mov
sub
movs
mov
pop
and
push
dec
ror
lahf
cmp
pop
xor
mov
bound
fcmovbe
push
dec
in
xchg
and
sti
mov
add
xchg
mov
jle
data16
add
loope
ins
aam
sbb
sbb
dec
push
push
inc
pop
jne
lahf
outs
cdq
fimul
and
sub
icebp
(bad)
jmp
xchg
scas
fnstsw
rcl
(bad)
mov
push
xchg
bnd
out
hlt
in
cmps
jmp
dec
data16
mov
cmp
fisub
adc
lods
les
cld
cmps
mov
sbb
fild
inc
add
adc
lea
pop
and
push
sbb
sub
push
addr16
jbe
or
outs
mov
dec
sbb
rcr
pop
aas
or
sub
cmp
push
adc
sbb
ds
adc
sbb
mov
hlt
mov
mov
retf
out
hlt
ror
jnp
sbb
adc
add
pop
xchg
lock
sbb
popa
xchg
mov
jge
ffreep
mov
not
inc
inc
inc
and
or
sbb
(bad)
sub
jno
sub
jp
out
pushf
scas
int3
pop
dec
fs
xchg
push
lods
cmp
cmc
adc
mov
hlt
jae
daa
xchg
enter
lock
inc
cmps
shl
mov
popf
sub
pusha
leave
pop
push
inc
cwde
jmp
xor
retf
in
in
test
pop
mov
push
pop
and
(bad)
fsub
pop
das
mov
std
pop
in
inc
cmp
sub
sub
mov
movs
fisttp
add
mov
mov
iret
cmp
sbb
pop
inc
lods
jb
mov
mov
rcr
fimul
in
fisttp
clc
cmps
(bad)
ins
aas
pop
aaa
(bad)
and
and
push
sub
cld
xor
addr16
es
imul
jb
add
jb
cmc
arpl
or
and
fist
mov
push
mov
sub
in
xchg
lahf
data16
add
out
hlt
stc
jl
mov
cmp
stos
xor
imul
sbb
cmps
mov
add
aad
dec
popf
xchg
or
xlat
push
jae
and
cdq
mov
xor
mov
pushf
adc
fiadd
push
not
mov
rol
push
pop
adc
stos
xor
outs
rcl
fdiv
(bad)
fwait
js
jg
fld
data16
das
pop
and
add
xor
rcl
lea
popa
mov
(bad)
pop
mov
xor
cmp
sbb
xlat
aas
mov
iret
inc
mov
sub
mov
dec
jle
dec
pop
pushf
fstp
hlt
stc
jo
inc
pop
jg
leave
adc
fst
xor
lahf
jbe
inc
out
dec
scas
loopne
outs
mul
jge
retf
jecxz
cmp
call
shl
ror
or
push
out
das
xor
gs
or
pop
fisttp
leave
in
rol
jno
lds
(bad)
std
cmp
outs
adc
not
jnp
inc
mov
out
add
pusha
fisubr
xchg
mov
test
xchg
dec
arpl
xor
inc
int
mov
mov
lods
and
push
jb
(bad)
xchg
xchg
push
js
and
outs
fld
jecxz
sbb
mov
lds
xor
push
cmps
or
cmp
lahf
push
mov
fnstenv
xchg
stos
fsub
and
loopne
fld
aam
gs
pop
hlt
mov
push
dec
(bad)
lock
ficom
jbe
jb
jns
je
add
ror
out
dec
xor
xor
fldenv
ret
xchg
push
push
in
out
mov
sahf
pop
mov
fld
jl
add
sar
shl
jno
test
push
or
mov
inc
jmp
xor
mov
ret
pop
mov
in
push
(bad)
xor
add
lods
cmc
in
call
sbb
xchg
stc
push
(bad)
xchg
arpl
arpl
adc
dec
sbb
inc
and
repnz
in
bound
daa
push
sub
cmps
and
(bad)
in
jne
imul
xor
sub
sahf
add
adc
out
sub
and
ins
mov
push
mov
inc
fsubr
xor
ret
push
xchg
sbb
pop
sub
add
imul
push
test
push
add
popf
xchg
iret
outs
test
pop
pop
push
loope
add
push
iret
adc
adc
inc
mov
jge
int3
stos
aam
leave
out
hlt
enter
pop
(bad)
push
mov
ins
setle
cld
push
adc
cld
in
mov
ds
inc
lods
in
dec
int
fs
xchg
in
and
outs
enter
(bad)
(bad)
sbb
fxam
mov
jmp
popa
push
imul
mov
jnp
mov
or
add
fiadd
sbb
or
daa
(bad)
adc
push
outs
dec
and
dec
jecxz
rcl
dec
cmp
add
xchg
bound
jl
dec
xlat
jae
xchg
adc
dec
in
dec
pusha
adc
fsubr
inc
gs
stos
mov
imul
push
sub
sub
movs
xchg
ds
push
pop
or
shr
add
addr16
test
adc
sar
imul
push
xchg
(bad)
sub
sar
xor
mov
stos
cs
jp
push
sahf
dec
(bad)
outs
pusha
xlat
imul
cld
and
cmp
mov
lods
cmc
sti
push
popa
(bad)
ins
loope
dec
rcr
xchg
sub
sbb
ins
or
movs
(bad)
and
mov
(bad)
test
dec
fisubr
out
sub
je
retf
jmp
jmp
add
imul
(bad)
sbb
or
bound
xchg
into
inc
adc
xchg
and
cs
popa
loop
push
in
pushf
mov
mov
pop
and
xor
and
mov
mov
mov
sbb
lock
mov
mov
shr
sbb
lods
adc
mov
mov
mov
or
mov
imul
popf
xchg
stc
stc
jne
xchg
ret
or
retf
add
iret
cmp
cmp
ins
pop
fsub
repz
sti
pushf
fwait
lods
and
lea
out
enter
mov
ja
gs
xor
xor
loopne
fs
js
xchg
push
mov
add
inc
inc
add
lods
in
dec
scas
cdq
sti
dec
add
push
imul
add
shr
lock
inc
(bad)
or
mov
and
cmp
mov
sbb
add
xor
stos
mov
int
sub
jo
xchg
xchg
lds
ds
add
les
test
mov
add
test
inc
inc
int
mov
or
sub
mov
mov
and
cmp
movs
mov
mov
mov
add
mov
add
jo
in
mov
push
ds
cmp
clc
add
pop
mov
cmp
inc
shl
sub
cmp
xchg
adc
add
mov
adc
add
dec
and
(bad)
arpl
retf
es
stc
push
in
mov
repz
stos
in
stos
mov
in
pop
pop
mov
adc
mov
add
shl
adc
adc
or
fldcw
pop
in
push
clc
aad
add
mov
dec
pop
loopne
jne
in
sub
inc
xchg
cmp
mov
enter
ret
in
fnsave
xchg
and
pop
mov
push
push
mov
cli
adc
push
mov
push
pop
or
icebp
into
mov
adc
push
mov
mov
repnz
loopne
aas
jb
test
ins
loope
or
add
pop
sub
mov
xor
xchg
xchg
fcomi
cmp
ins
or
rol
pop
aas
add
imul
(bad)
iret
push
test
cmp
xchg
add
movs
aas
xor
jne
out
or
movs
icebp
in
add
inc
ins
sbb
mov
jnp
pop
add
outs
mov
cs
dec
inc
and
sub
inc
imul
push
sbb
push
adc
dec
pop
pop
pop
nop
sbb
push
ja
test
mov
ds
int3
jno
jecxz
cmp
xchg
lds
push
pushf
aaa
sbb
push
inc
loop
fs
inc
aam
movs
sbb
inc
xor
das
iret
aaa
sub
scas
push
mov
push
repz
push
(bad)
pop
push
adc
stos
inc
aas
mov
dec
pop
jg
mov
pop
mov
ret
cmp
push
icebp
out
jmp
mov
pop
hlt
mov
inc
int3
lahf
xchg
jmp
fcmovbe
xor
push
xchg
and
mov
cmp
and
fdivr
stc
xchg
or
jbe
out
rcl
pusha
mov
lds
iret
(bad)
jl
imul
xor
inc
mov
pop
and
scas
loope
mov
scas
mov
and
es
mov
pop
scas
pushf
pop
shr
pop
mov
cld
loope
or
inc
mov
inc
dec
mov
ins
js
cmp
jg
cmp
sub
mov
sbb
punpckhbw
mov
and
xchg
adc
xchg
jmp
(bad)
lea
(bad)
jbe
cmp
loop
and
call
sbb
add
movs
dec
xor
imul
fsub
out
and
push
mov
mov
lea
or
lods
aam
dec
push
sbb
lea
dec
fist
aaa
pop
lods
aas
(bad)
dec
or
movs
(bad)
push
outs
out
movs
and
lahf
push
iret
cmc
jns
sbb
xchg
ficomp
pop
or
jmp
fild
dec
(bad)
rol
add
cmps
pop
imul
loop
dec
mov
jb
stos
es
adc
dec
pop
dec
pop
retf
dec
mov
inc
lock
and
shl
(bad)
pop
int
and
pop
loopne
fadd
fild
fimul
lds
icebp
in
(bad)
sbb
mov
scas
pop
fmul
mov
(bad)
mov
push
leave
test
popa
into
sub
shr
nop
dec
in
cli
adc
sbb
or
add
stc
std
cmps
cs
xchg
out
(bad)
mov
(bad)
in
clc
dec
ret
push
int
shl
add
dec
cmp
cld
fwait
adc
gs
pusha
pop
add
call
jne
sbb
cmp
sub
jmp
jne
pop
fwait
inc
in
syscall
pop
jmp
and
cmp
in
sbb
leave
aad
cmps
imul
leave
jg
inc
mov
stos
loop
std
cmp
ins
jns
ins
in
xlat
inc
sbb
sub
popa
ins
add
pusha
xor
outs
nop
cmp
mov
shl
stos
inc
outs
mov
jae
out
sahf
ins
push
mov
sar
sub
sub
fst
dec
and
ins
mov
jle
aas
mov
mov
pop
stc
into
xchg
push
mov
xor
sbb
sub
xor
shl
xchg
loop
call
stos
jmp
stos
sub
cmps
or
loopne
das
fwait
inc
pop
mov
into
es
fstp
mov
pop
xor
sti
xor
adc
in
test
clc
dec
in
sub
loop
pop
xor
imul
lods
add
push
rcr
mov
dec
fcomp
jg
imul
cmp
cdq
cmp
test
push
pop
nop
mov
mov
test
(bad)
jbe
mov
js
and
clc
mov
dec
clc
movs
mov
arpl
sub
or
push
fdiv
xchg
inc
or
push
jmp
inc
jmp
push
push
cmps
xchg
jp
clc
movs
sbb
pop
dec
shl
fisub
sub
ins
cmp
xor
(bad)
ror
inc
push
sti
jmp
cmps
lods
sub
push
jns
and
xchg
into
adc
pusha
stos
and
adc
mov
lock
or
fnstcw
movs
call
jp
push
pop
cmps
lahf
inc
add
xor
mov
inc
add
mov
jnp
dec
push
repz
shl
or
mov
movs
adc
sbb
or
inc
movs
in
mov
xlat
jbe
inc
fucomp
adc
popa
xor
jo
or
idiv
mov
xchg
sub
lds
pop
dec
sub
pop
push
gs
jno
fnstsw
dec
popa
sar
lods
(bad)
push
aas
sbb
pusha
mov
movs
and
in
enter
shl
jne
inc
xchg
pop
xchg
gs
leave
sbb
icebp
into
mov
mov
ins
add
pop
mov
fs
mov
and
adc
rcr
mov
mov
or
xor
xor
inc
mov
add
sub
test
sub
test
dec
and
test
push
sar
inc
mov
xlat
imul
add
outs
out
mov
mov
out
jb
and
nop
repnz
les
mov
jge
pushf
inc
vphaddudq
pop
xchg
stc
cmps
mov
fs
fimul
mov
push
sbb
jmp
cli
mov
pop
repnz
int3
bound
pop
sub
sub
xlat
pusha
js
pop
lods
icebp
sti
push
cdq
push
push
add
sbb
sti
jae
shr
add
mov
retf
xchg
push
sub
jge
cmp
imul
push
xchg
aad
mov
dec
xchg
jecxz
jl
mov
mov
dec
mov
mov
mov
mov
out
ret
xor
sbb
and
scas
rcl
xchg
std
pop
sub
add
mov
aas
mov
xchg
(bad)
aas
iret
popf
jnp
fbstp
in
loop
mov
pop
mov
or
ret
push
xor
push
loope
jne
mov
mov
fsub
ins
jo
ins
inc
pushf
stos
cli
sbb
rcl
or
jno
push
add
jbe
push
je
arpl
pusha
fild
cli
mov
ret
inc
mov
(bad)
push
call
add
mov
mov
mov
ret
fcom
mov
pusha
and
pop
xor
sub
jle
add
pop
pop
or
icebp
fdiv
es
mov
xchg
mov
mov
outs
test
push
call
mov
aas
popf
sub
outs
cmp
ins
mul
dec
(bad)
nop
(bad)
xchg
push
stos
in
adc
(bad)
cmp
jge
sahf
popf
or
(bad)
mov
xor
adc
mov
cs
sbb
inc
fld
leave
jbe
aas
xor
sar
ja
imul
popf
js
fs
stos
or
inc
adc
pop
in
jg
test
aaa
pavgw
xor
xor
pop
fs
hlt
pop
lea
cmp
push
repnz
dec
jmp
sub
jmp
inc
inc
cmp
pop
xor
add
inc
cmp
dec
jae
push
cmp
add
cs
and
(bad)
mov
pop
es
mov
xchg
xor
(bad)
movs
icebp
sub
jl
sar
test
call
jb
sbb
dec
dec
inc
and
sbb
sahf
xor
add
arpl
jp
or
inc
push
mov
test
aas
mov
enter
xor
add
or
in
inc
pop
neg
jo
popa
test
jg
xor
ds
adc
cli
repz
or
popa
out
jb
ret
xor
add
aam
aam
mov
shl
xor
popf
and
mov
dec
imul
jl
fdiv
rol
jecxz
retf
cmps
inc
outs
pop
cmp
cmps
jo
push
mov
dec
cmp
xchg
fdivr
clc
(bad)
rcl
ja
(bad)
jno
jmp
mov
inc
cli
dec
bound
rcr
jbe
jg
mov
(bad)
ficomp
or
pop
out
int3
std
xor
mov
shr
push
(bad)
push
adc
cli
jne
and
test
push
xor
cmp
xor
jp
daa
(bad)
pusha
sbb
mov
pop
dec
adc
and
sahf
sub
and
add
sbb
jl
aaa
pop
add
xor
repz
arpl
dec
sbb
in
mov
pop
xchg
mov
adc
adc
test
lods
inc
aas
repnz
mov
xchg
pop
cmps
adc
ret
loop
js
xor
xchg
mov
in
inc
cmps
cmp
add
test
test
sbb
mov
push
xor
and
cmps
les
imul
mov
sbb
out
sbb
fld
sbb
sbb
cmp
sbb
or
dec
push
dec
cmp
retf
xchg
fsub
mov
call
lock
loope
cmp
sbb
add
push
(bad)
mov
fs
mov
fsubr
mov
ja
mov
sub
rol
sub
dec
ins
(bad)
sar
test
pop
push
pop
add
add
fcomp
dec
sub
inc
ror
sub
sbb
mov
dec
push
dec
jmp
mov
cmps
popf
add
mov
mov
xchg
dec
xchg
mov
call
sub
inc
dec
mov
jle
cmp
jno
ror
jmp
out
xchg
inc
add
or
div
fcomi
cmp
mov
les
nop
dec
pop
sub
mov
imul
cmp
iret
icebp
cli
cld
mov
pop
ss
jecxz
lahf
or
imul
add
mov
mov
je
push
repz
cmps
adc
dec
mov
push
in
push
push
push
mov
(bad)
in
mov
aaa
ins
icebp
iret
cdq
mov
jge
popa
sub
dec
mul
fimul
xor
aas
fld
mov
pop
daa
pusha
scas
pop
shr
xor
aaa
cmps
call
fld
stos
pop
sub
pop
loope
adc
jo
cdq
cmp
je
sub
ror
mov
sub
cmp
xor
xor
push
lods
xchg
das
scas
clc
mov
ins
pop
or
lahf
sti
not
mov
mov
(bad)
fdivr
cs
sti
in
movs
cmc
mov
adc
and
adc
push
jg
pusha
jl
outs
(bad)
js
jge
add
cmps
mov
movs
in
xor
ins
jl
(bad)
or
es
sub
pop
sahf
fs
sub
in
mov
xchg
int
lock
pop
gs
movs
imul
shl
or
stos
inc
in
aad
push
pop
sahf
addr16
in
cli
mov
mov
push
rol
inc
sub
aad
mov
imul
or
jl
js
addr16
fs
ins
push
ins
je
xlat
xchg
jne
jbe
xor
or
add
fcmovne
jns
inc
cmp
stos
loopne
pop
dec
xor
dec
and
cmps
mov
mov
sti
fwait
ror
pop
int
lods
fdivrp
in
hlt
mov
or
(bad)
xchg
shl
ins
js
(bad)
aaa
in
mov
xor
xor
(bad)
xchg
fmulp
(bad)
cld
xor
addr16
cmp
out
xor
xchg
add
sub
push
mov
cmp
sbb
sub
out
fnstenv
xchg
pop
out
inc
sub
rol
inc
and
cwde
js
push
pop
push
(bad)
pop
or
rol
cli
cmp
xor
iret
fisttp
imul
lods
lods
test
in
jg
(bad)
jge
push
sub
add
mov
inc
inc
pop
cmp
test
sub
cmp
xchg
mov
sbb
fadd
scas
lahf
shr
ret
push
scas
fnstenv
adc
jno
(bad)
fnstenv
movs
imul
sahf
retf
out
xor
sahf
ja
xchg
jge
fsubp
push
movs
adc
jle
cs
fiadd
mov
push
xchg
nop
retf
push
lods
mov
pop
(bad)
fdiv
mul
lods
neg
add
jmp
repnz
(bad)
mov
ins
clc
xlat
test
xchg
into
gs
fs
cld
cmp
jne
mov
stc
cld
mul
stc
daa
cmp
out
ret
aam
retf
loop
xor
(bad)
jno
dec
lods
pop
sub
js
xor
out
jb
jns
ins
lods
retf
push
xchg
loop
sbb
mov
aad
add
call
aad
and
loope
inc
mov
aaa
sbb
sbb
inc
mov
dec
mov
std
xor
push
pushf
aam
xchg
call
scas
cs
cs
mov
mov
jae
xor
mul
shr
inc
stos
mov
cmp
jnp
push
add
sbb
pop
mov
jne
imul
dec
or
push
sbb
loope
int3
das
pop
pushf
xchg
xor
mov
ins
sar
mov
mov
enter
mov
jl
cmp
aad
xor
jg
mov
(bad)
outs
dec
ds
mov
or
or
mov
es
(bad)
mov
daa
dec
popa
pushf
fld
and
mov
adc
sbb
movs
stos
ficomp
sbb
addr16
int3
cmp
sub
daa
and
pop
mov
pop
push
repz
in
je
imul
mov
movs
push
fsubr
ss
out
xor
xor
or
inc
ss
sbb
(bad)
jle
fnstcw
pop
call
js
je
pop
or
ret
push
jne
stc
and
stc
mov
add
rcr
mul
mov
jge
(bad)
sbb
mov
fwait
xchg
and
retf
out
(bad)
mov
cmc
sbb
stos
outs
cmp
sti
popa
fwait
dec
shr
dec
loop
sbb
(bad)
popf
mov
cs
pop
std
mov
xor
pop
xor
sti
inc
sub
mov
sbb
iret
jecxz
push
xor
add
or
rol
pop
mov
clc
cmp
ja
dec
int
jg
jns
aad
loope
pop
in
sbb
add
jp
xchg
int
mov
add
cmp
imul
in
mov
mov
push
fs
leavew
loop
xor
dec
add
pop
test
arpl
push
and
inc
out
and
mov
gs
jno
pop
ret
push
cmc
cli
imul
hlt
inc
dec
mov
mov
std
pushf
loop
cmp
js
jg
sub
aaa
test
fldcw
in
jecxz
pop
cmp
pop
mov
dec
gs
xchg
retf
or
add
mov
pushf
clc
cli
rol
dec
inc
js
mov
cmps
nop
add
int
add
mov
dec
pop
add
stos
mov
fadd
(bad)
scas
pop
jbe
push
clc
xchg
xchg
pop
movs
test
shl
js
cmps
aaa
inc
add
mov
mov
mov
pop
mov
in
arpl
push
outs
(bad)
mov
in
ret
jmp
imul
xchg
mov
dec
ret
and
xor
jo
mov
push
inc
add
movs
daa
lods
pusha
retf
xor
enter
mov
dec
pop
jmp
xor
enter
mov
cdq
cld
std
pop
in
inc
inc
loopne
pop
mov
sahf
cmp
adc
rcl
mov
jmp
(bad)
mov
pop
or
retf
js
sbb
aad
mov
push
push
test
mov
xchg
jmp
aam
mov
clc
xchg
push
jge
jecxz
daa
(bad)
sub
das
pop
add
xchg
movs
outs
mov
or
or
imul
add
mov
in
nop
jg
mov
daa
jmp
and
popf
in
xor
or
popa
jmp
inc
xrelease
xor
mov
ds
inc
jmp
imul
jecxz
xchg
mov
scas
ret
and
std
(bad)
jp
icebp
xchg
sbb
out
xchg
inc
or
adc
push
iret
jge
and
inc
pop
cmp
mov
xchg
jmp
pop
ret
cmps
sub
ins
xchg
fucomip
enter
xchg
add
loop
into
jno
test
je
xchg
js
mov
nop
std
shr
idiv
mov
cmps
cmp
les
pop
stos
sub
or
not
call
push
dec
dec
sub
fwait
in
push
test
jb
adc
pop
and
push
repnz
mov
or
pusha
xor
or
loop
mov
add
(bad)
and
and
nop
imul
dec
push
or
cld
je
das
mov
loopne
ins
ins
enter
cwde
(bad)
pushf
stc
push
mov
or
mov
ret
js
sbb
jp
pop
cld
es
test
scas
jmp
data16
push
mov
inc
or
mov
call
in
(bad)
fptan
aas
mov
test
pop
mov
mov
fnstenv
fbstp
clc
mov
mov
jp
adc
(bad)
or
ds
popf
mov
stc
(bad)
sbb
mov
mov
add
adc
pop
or
push
test
mov
aas
out
xchg
sub
loope
mov
fstp
mov
jnp
push
(bad)
inc
bound
test
leave
xchg
pop
adc
pop
mov
dec
test
jl
mov
pop
stc
xor
cs
or
or
jne
mov
cld
mov
jnp
sbb
test
jl
mov
enter
das
add
(bad)
mov
add
cmp
jle
fcmovu
sub
inc
loop
sub
nop
cmp
aam
mov
jne
push
in
mov
loopne
xchg
pusha
inc
fdivr
scas
outs
fild
push
lock
fs
and
outs
xor
xchg
pop
in
(bad)
sar
cmc
ja
or
lods
call
push
pop
push
imul
or
push
jmp
fisubr
aas
pop
int
popf
aas
inc
mov
and
icebp
xor
and
je
mov
push
xor
sbb
sub
lahf
xchg
mov
adc
in
sub
push
cmps
xchg
pop
push
scas
xlat
push
cli
mov
aas
rcl
sbb
push
sub
fwait
ins
jmp
std
jnp
inc
sub
dec
arpl
mov
xchg
mov
adc
adc
mov
jmp
dec
xor
test
mov
mov
mov
neg
(bad)
fadd
xchg
xlat
mov
in
cmp
hlt
pop
sbb
push
xchg
int
cmp
sub
(bad)
mov
adc
imul
shr
add
sti
cmc
push
inc
fld
icebp
add
inc
out
outs
or
clc
sti
push
neg
leave
mov
ja
pop
inc
xor
add
mov
sbb
shl
sub
inc
rcr
push
movs
mov
dec
and
cmp
jp
sar
push
push
xlat
popf
je
and
jns
and
ret
imul
cs
bound
ror
pusha
mul
dec
jmp
aas
pop
mov
xor
jae
add
xchg
add
stos
mov
scas
outs
fld
jb
ficomp
aas
cdq
mov
sbb
pusha
cmp
xor
mov
jmp
add
cmps
not
(bad)
cli
mov
push
mov
dec
sbb
cwde
jl
dec
jnp
ja
imul
pusha
pop
ds
or
add
ins
outs
cmp
pop
hlt
movs
push
and
imul
fdiv
xchg
nop
enter
aaa
sub
cmp
sahf
sar
or
add
movs
dec
sbb
fwait
cld
sbb
pusha
sub
mov
pop
aaa
ss
aad
push
repz
xchg
and
aas
out
inc
mov
mov
cli
ins
and
data16
frstor
aas
bound
stc
push
pushf
and
int
adc
mov
call
mov
stos
jb
adc
mov
in
jo
push
jle
xor
hlt
arpl
jno
cld
mov
bound
dec
shl
std
pushf
jecxz
jmp
mov
or
into
sahf
dec
mov
sub
scas
and
jo
movs
pusha
ror
(bad)
fs
in
rcl
retf
in
and
xor
mov
jo
lahf
mov
xor
test
jno
(bad)
jmp
pop
add
cmp
dec
gs
lods
fwait
dec
cmps
aas
pop
mov
movs
adc
sub
call
xor
mov
mov
and
cdq
mov
rcr
inc
test
imul
lahf
sub
and
push
sbb
jg
mov
add
sub
ins
ret
rcl
inc
and
lahf
mov
fbstp
into
adc
mov
test
xchg
sbb
out
cmc
sar
imul
jno
xchg
lds
push
bound
in
mov
(bad)
test
jo
xchg
lods
test
push
inc
inc
std
mov
jg
out
loop
xchg
push
inc
mov
pusha
call
mov
stos
or
sbb
cli
cld
mov
xlat
mov
mov
mov
push
dec
mov
aad
imul
mov
addr16
scas
pop
mov
loope
jle
xor
int3
adc
popa
inc
mov
inc
(bad)
cld
enter
int3
clc
adc
(bad)
sub
imul
pop
ja
push
(bad)
mov
push
add
dec
and
retf
jecxz
ret
xchg
int
mov
(bad)
data16
jg
xchg
stc
jg
call
sub
mov
popf
sub
xor
test
aad
cmc
lahf
mov
xor
test
gs
loope
sub
cmp
inc
push
mov
and
inc
jl
gs
jl
push
popa
or
je
push
lods
mov
ret
popa
loopne
or
cli
or
dec
sub
push
sbb
jle
arpl
lock
jnp
mov
mov
(bad)
mov
xor
mov
cli
or
or
stos
stos
cli
hlt
mov
push
lods
mov
xor
cld
mov
data16
adc
sbb
std
fist
jo
retf
(bad)
cld
mov
bound
mov
adc
xor
or
sbb
ds
aam
test
std
mov
inc
je
sbb
(bad)
fistp
pop
push
inc
mov
popf
xchg
fdiv
dec
mov
mov
add
int
jno
cli
cmc
dec
and
nop
push
xor
add
pop
in
jg
sbb
js
outs
cmps
jno
out
push
adc
mov
imul
fild
cwde
(bad)
in
shl
ror
call
add
jecxz
shl
(bad)
xrelease
push
(bad)
ret
jno
lods
rcr
icebp
jnp
mov
lahf
inc
call
ds
inc
imul
mov
ffree
pop
pop
ins
outs
cli
mov
mov
(bad)
loopne
(bad)
dec
dec
pop
test
mov
adc
pop
in
test
outs
das
outs
jp
inc
cld
jbe
xchg
sub
jp
ret
jbe
data16
add
mov
push
sti
push
sub
ss
mov
mov
dec
mov
push
fld
je
jmp
stos
fdiv
xchg
xchg
lock
test
bound
inc
xor
in
cmps
push
sub
sub
adc
push
out
mov
je
(bad)
mov
push
add
mov
stc
cmp
icebp
xor
dec
pushf
and
push
enter
inc
mov
jns
and
movs
mov
add
sbb
sub
push
test
mov
clc
fsubr
xchg
pop
xchg
adc
inc
cmp
popf
pop
and
nop
and
add
mov
and
call
add
push
jp
adc
adc
adc
dec
out
stos
outs
shr
lahf
and
or
push
in
test
sbb
movs
dec
js
cli
adc
fild
aaa
adc
mov
and
stc
cmp
in
push
dec
xchg
sub
dec
inc
adc
fcom
sbb
aaa
adc
les
or
sub
ds
loopne
cmps
lods
sar
movs
xor
cmps
pop
or
imul
std
neg
mov
pop
or
push
shl
inc
arpl
add
push
mov
fcomp
and
ds
int
fwait
xchg
cdq
mov
jg
je
call
loop
mov
retf
or
rcl
lock
aas
sar
imul
arpl
adc
ins
test
add
(bad)
jns
es
add
into
inc
arpl
inc
mov
xor
mov
out
aam
icebp
(bad)
mov
push
inc
fsub
sar
lods
(bad)
aad
xchg
mov
in
xchg
cmp
ret
movs
stc
adc
clc
ret
add
and
mov
(bad)
mov
dec
xchg
or
or
rcl
fadd
jle
sti
push
inc
stc
sbb
ror
and
pop
inc
dec
pop
push
popf
push
and
and
mov
loop
pop
and
fcom
call
aam
jmp
and
fmulp
data16
in
xchg
loope
js
or
add
cli
mov
dec
cmp
push
or
dec
jp
cwde
(bad)
adc
test
or
jnp
outs
jl
imul
stos
xor
xor
jae
jp
xchg
or
jmp
mov
pop
psrad
pop
push
loopne
push
stos
cmp
shl
bound
and
mov
add
xor
iret
mov
pusha
mov
jmp
mov
dec
or
mov
or
aad
out
mov
lock
xchg
arpl
jo
mov
sub
and
sti
or
sub
xor
or
jno
jmp
mov
fcomp
loopne
ror
scas
pmaxub
jg
push
iret
in
and
packuswb
fidiv
fnstcw
pop
or
pop
sbb
out
movs
cmp
adc
arpl
out
out
lds
and
pop
or
jecxz
push
xor
sbb
test
test
mov
pop
mov
jb
out
icebp
test
jno
arpl
lds
jge
lock
movaps
push
or
(bad)
cmc
and
mov
sub
inc
push
fst
fadd
dec
or
fmul
dec
add
add
xchg
xlat
(bad)
jle
jge
cmc
in
push
mov
shl
and
pop
dec
rcr
es
gs
nop
push
or
mov
lock
mov
push
int3
js
mov
or
add
leave
loopne
mov
mov
out
mov
leave
jmp
cmp
iret
int3
dec
mov
out
outs
push
cs
or
or
mov
mov
movs
sti
bound
repz
das
dec
xchg
in
fs
(bad)
jmp
ficomp
mul
inc
sti
(bad)
fstp
inc
jmp
mov
pop
clc
dec
mov
cdq
add
mov
mov
test
or
aas
mov
xchg
ror
data16
mov
pop
nop
and
icebp
dec
(bad)
nop
sbb
xlat
adc
dec
stos
jg
in
mov
ins
mov
dec
add
cmp
pushf
cmp
(bad)
mov
fsubr
daa
jg
inc
lahf
test
ja
sbb
and
retf
nop
out
sar
push
test
retf
and
inc
or
jle
(bad)
out
jecxz
icebp
aad
leave
in
fistp
clc
aas
dec
or
outs
jne
push
idiv
cmps
or
jmp
cmp
test
shr
ja
fidivr
pop
fld
push
cli
adc
sti
adc
xchg
xor
in
xor
std
pop
imul
rol
je
xchg
fld
(bad)
leave
mov
pop
push
int3
and
adc
xlat
mov
ins
(bad)
and
cmp
out
cmp
or
out
mov
mov
push
movs
dec
jg
push
add
inc
stc
jne
pslld
jne
cld
or
repnz
sub
nop
mov
cdq
dec
(bad)
sahf
push
call
xchg
call
std
push
push
dec
and
xor
cmp
fadd
test
aad
(bad)
xchg
inc
or
dec
(bad)
or
data16
aaa
outs
sub
mov
add
test
jae
out
add
mov
ins
fld
or
aad
mov
and
ror
jne
dec
mov
lods
cdq
clc
retf
bound
dec
pushf
xchg
push
ret
call
jnp
mov
loope
xor
lods
xchg
xchg
enter
dec
and
and
sbb
cld
push
mov
ja
and
or
mov
popf
xlat
jl
mov
out
les
push
ja
xor
xchg
addr16
add
outs
adc
inc
loope
mov
sbb
fs
inc
dec
(bad)
aas
fidivr
add
test
dec
xor
arpl
cmps
sbb
pop
adc
(bad)
ds
sbb
jo
fwait
cs
loop
js
jl
inc
add
scas
push
(bad)
scas
inc
dec
inc
mov
(bad)
adc
mov
leave
lea
les
icebp
clc
mov
shr
mov
out
mov
inc
add
mov
rol
addr16
pop
pop
sti
icebp
sub
mov
push
jb
gs
cli
out
rcl
in
mov
adc
mov
cdq
jle
shl
out
in
adc
mov
gs
sbb
cmp
sbb
lock
retf
and
push
dec
shl
push
xchg
jge
cmp
fild
pop
sub
push
xor
mov
sub
inc
sub
pop
sti
imul
mov
dec
cmc
idiv
adc
(bad)
jge
scas
out
jecxz
cwde
mov
(bad)
and
stos
mov
and
pop
add
dec
mov
test
sti
loope
sbb
cs
cmp
and
lods
aaa
rol
push
gs
ror
ins
push
mulps
sbb
test
fcom
adc
xor
or
inc
cmps
sbb
ss
fdiv
cmp
(bad)
aam
aaa
inc
mov
das
push
aaa
pop
mov
xor
cld
or
jmp
ds
push
jne
and
(bad)
xor
retf
test
dec
(bad)
jnp
das
cli
jmp
nop
push
jle
in
rol
(bad)
push
retf
movs
sub
cmp
pusha
lahf
inc
xor
ins
cwde
xchg
jg
mov
into
sar
inc
xchg
and
aaa
cdq
jae
lahf
pop
out
adc
aaa
lods
pop
push
ja
dec
sub
xor
push
add
jecxz
outs
cmps
or
outs
out
jmp
cmps
adc
shl
bound
cld
cli
shl
or
or
mov
call
out
das
pop
pop
popf
xor
sbb
sbb
not
out
sbb
dec
sti
fadd
jg
test
jge
idiv
das
cld
jmp
mov
aas
rol
push
inc
xor
mov
xor
add
lods
or
addr16
pop
or
mov
hlt
jo
adc
add
pop
jb
push
mov
cmp
mov
dec
jge
nop
shl
adc
loop
ins
clc
jmp
dec
mov
rcr
add
adc
int
inc
mov
mov
and
out
(bad)
mov
(bad)
jecxz
mov
xchg
adc
adc
jmp
icebp
shr
mov
movs
stc
dec
aad
fist
jecxz
jo
mov
clc
xor
(bad)
sub
xor
add
std
jp
dec
mov
int3
call
(bad)
dec
jl
xchg
sar
sbb
out
repnz
xchg
sub
aad
call
rcr
xchg
repnz
test
adc
or
loopne
jl
jmp
mov
or
pusha
mov
add
mov
push
pop
adc
sti
jno
inc
out
loope
sahf
mov
push
imul
mov
xchg
adc
icebp
je
dec
(bad)
mov
movs
cmp
cmps
jg
loope
pop
jecxz
jge
cmp
jmp
cmc
cld
jae
mov
dec
or
fimul
jnp
enter
rcr
(bad)
adc
icebp
psubsw
dec
hlt
or
jne
in
xchg
stos
jmp
aas
jp
lea
sub
pop
xchg
pushf
mov
fisub
cmps
ss
loopne
fsubp
adc
mov
les
fld
push
xchg
xchg
add
pop
add
adc
inc
stos
int
xor
and
clc
jl
(bad)
mov
outs
ds
js
dec
sub
outs
enter
add
jo
xchg
fcom
rcl
jmp
ja
pop
and
(bad)
mov
sub
imul
lahf
rcr
mov
pop
mov
cmps
mov
mov
aas
xchg
bnd
out
mov
jb
addr16
add
mov
jecxz
or
mov
adc
mul
xchg
(bad)
pop
inc
xor
sbb
jb
add
cmps
loope
fimul
loopne
sar
shl
cdq
lods
addr16
fist
jnp
and
daa
fs
fwait
mov
xor
inc
sti
aaa
cmps
push
mov
inc
mov
cmp
test
arpl
push
mov
cmc
jmp
mov
push
and
std
inc
cs
xlat
aad
inc
jmp
pushf
test
retf
loopne
mov
sbb
sti
movs
mov
(bad)
test
rcr
pushf
movntq
or
mov
(bad)
dec
cwde
xchg
xchg
ret
or
rol
pop
pop
push
shl
mov
cmp
lahf
pop
mov
or
js
and
(bad)
sbb
inc
pop
inc
sbb
mov
xchg
xchg
imul
int
cmp
inc
and
ret
push
push
nop
test
dec
pop
cmp
add
push
imul
add
mov
and
sti
inc
cmp
jg
movs
mov
mov
jecxz
push
adc
jmp
xchg
add
loope
sti
icebp
icebp
in
cmp
sbb
pop
inc
(bad)
sbb
push
pusha
push
jecxz
add
mov
retf
inc
idiv
leave
movs
retf
xor
loop
test
mov
shl
mov
ret
jmp
sahf
mov
paddb
push
std
or
neg
shr
sbb
movs
add
sbb
add
adc
sbb
out
pop
jnp
inc
ret
lods
imul
sbb
cmc
jecxz
and
fbld
pop
sar
cld
mov
and
scas
sahf
repz
mov
cmp
movs
les
mov
jl
xor
xor
push
inc
jo
mov
stos
cwde
call
fldenv
popf
ds
sub
xchg
pop
or
push
dec
xor
pop
jno
dec
movs
jo
sub
fbld
jge
int
div
jmp
in
clc
sub
lds
imul
imul
lods
xchg
mov
pop
dec
sbb
mov
xor
ins
push
pop
jp
dec
rol
pop
jns
aad
(bad)
cmps
sbb
cld
or
lahf
and
xchg
fisubr
loopne
ret
bound
neg
cmp
retf
out
ds
xor
mov
push
add
jle
rol
fwait
mov
adc
in
addr16
dec
dec
in
mov
fwait
js
es
adc
cmp
push
xchg
cmc
std
loope
js
sar
xor
jg
fwait
std
add
inc
lahf
rol
loopne
add
add
push
jnp
jg
jnp
ret
jnp
xor
push
sub
push
adc
rcr
mov
pop
add
retf
add
xor
(bad)
test
(bad)
xchg
cmp
xor
add
mov
push
jecxz
inc
or
sub
push
mov
cli
push
sbb
mul
dec
mov
sbb
out
mov
dec
cli
sub
inc
loope
repnz
adc
cmp
mov
js
push
jnp
or
shl
xor
xlat
int
and
jmp
and
in
(bad)
xchg
(bad)
lahf
jecxz
aad
js
add
sub
or
pop
jp
sbb
(bad)
xor
cli
es
jmp
jle
push
rcl
ja
jg
(bad)
jbe
(bad)
sub
unpckhps
fcomp
mov
mov
pop
cs
cli
rol
cmp
les
lahf
rcr
std
je
sbb
in
ret
arpl
mov
push
cmp
fistp
in
dec
jg
add
push
xor
add
mov
sbb
(bad)
mov
pop
mov
data16
fisub
(bad)
jle
cmp
cmp
clc
jmp
and
fadd
push
or
cmp
sbb
push
out
xor
ror
pop
jl
rep
in
cmps
mov
xrelease
xchg
icebp
mov
enter
inc
ss
adc
jae
xchg
jecxz
cmps
push
xor
xor
jl
mov
mov
ins
lods
xchg
push
cmp
xlat
daa
pop
jnp
cmp
movs
iret
jl
sbb
out
push
ds
jge
adc
lods
stc
dec
mov
out
or
add
(bad)
in
fiadd
inc
push
jnp
call
lds
jg
(bad)
sub
neg
add
xor
inc
imul
call
jmp
daa
test
pop
adc
add
or
xor
mov
mov
mov
idiv
xchg
xchg
sub
sbb
retf
es
(bad)
add
aam
push
pop
in
mov
xchg
sub
jl
(bad)
mov
adc
cmp
dec
idiv
cmp
cmp
mov
mov
outs
cmps
stos
add
dec
pushf
and
fcmove
std
inc
jge
pop
mov
icebp
loope
lock
fstp
test
outs
mov
push
js
not
xor
cmps
sub
and
(bad)
(bad)
xchg
shl
out
ret
sub
dec
inc
inc
add
mov
sbb
rol
add
loope
xchg
loope
js
dec
stos
xchg
inc
and
lock
or
int
mov
div
loopne
push
or
out
sub
jge
mov
retf
sti
clc
inc
mov
sbb
cld
enter
add
cs
out
fidiv
pop
fst
test
test
mov
xlat
(bad)
fucom
jno
imul
fistp
sbb
imul
loopne
adc
js
sub
int
pop
retf
mov
add
pop
mov
iret
fs
push
scas
clc
dec
dec
dec
clc
leave
repnz
(bad)
fs
mov
movs
std
ror
jo
add
fwait
int
jnp
cmp
int
cld
dec
adc
daa
xchg
xchg
mov
sub
ret
jmp
(bad)
into
fistp
mov
jmp
jno
push
sar
into
hlt
stc
jmp
xchg
hlt
inc
cmps
dec
pop
sahf
cmc
pop
jg
imul
sbb
ins
jp
cmps
add
dec
pusha
mov
sti
xchg
daa
push
adc
aas
mov
addr16
sub
mov
cwde
dec
mov
add
mov
scas
fdiv
jae
addr16
xchg
sub
inc
push
push
ficom
jge
clc
xor
pmulhuw
jg
or
mov
das
mov
sbb
daa
jbe
and
gs
psubsw
mov
scas
xor
call
enter
pop
adc
jl
stos
fcmovu
push
mov
inc
daa
mov
sbb
fdivr
inc
lods
cmp
or
retf
xchg
adc
xor
addr16
shl
inc
pop
pop
pop
ds
daa
jle
enter
fmul
inc
sub
xchg
sti
dec
mov
jl
fstp
cmps
fistp
or
or
lock
jle
(bad)
and
addr16
aas
mov
enter
cmp
out
add
jle
adc
jg
fsin
(bad)
das
rol
jae
pop
push
test
xchg
sbb
mov
int3
jecxz
and
mov
leave
fisttp
mov
jg
ret
mov
pop
pop
pop
in
fsub
fld
adc
in
dec
adc
or
nop
inc
mov
call
adc
lods
and
sbb
push
and
sbb
(bad)
movs
cmc
aas
xor
xor
not
lock
xchg
repz
pop
xor
mov
rcr
in
jge
icebp
repz
lahf
hlt
cmc
cmp
pop
ficom
pop
xor
sub
jp
sbb
sub
sbb
out
cli
mov
scas
scas
popf
out
and
loope
push
mov
ja
push
mov
mov
pop
pop
inc
or
or
mov
dec
sub
shl
jmp
loop
mov
cwde
pop
add
rep
dec
aas
add
dec
(bad)
(bad)
call
(bad)
mov
jmp
movs
out
sar
cld
shl
xor
mov
mov
jo
cmp
call
and
jl
jmp
jecxz
inc
push
add
je
push
mov
push
xchg
sti
mov
jnp
jl
repnz
(bad)
jle
shl
jae
mov
ret
repz
pop
mov
and
test
mov
pop
mov
mov
out
pop
pop
cmp
test
mov
fadd
push
repz
push
adc
retf
and
shr
push
lods
inc
sbb
leave
(bad)
lea
pop
pop
mov
cmp
push
push
mul
test
pop
out
mov
fst
jb
mov
sar
sar
sar
stos
or
fcomp
rol
cmps
iret
xor
jg
arpl
inc
das
repnz
jmp
dec
mov
inc
mov
mov
mov
and
pop
movs
or
pushf
mov
in
add
ins
xchg
or
fdiv
ss
mov
mov
push
jmp
xchg
add
xchg
out
sbb
adc
dec
xor
sbb
lock
jl
xor
loopne
inc
jb
retf
je
pop
add
pop
dec
shl
test
adc
mov
gs
dec
cmp
mov
inc
cli
inc
das
fs
ficom
and
ins
xchg
xor
add
add
mov
sbb
loop
je
stc
cmps
sub
jl
out
mov
pop
daa
mov
(bad)
sbb
cmps
dec
xlat
sar
push
dec
stos
std
xchg
push
sbb
and
shl
push
and
mov
and
inc
movs
mov
mov
mov
mov
xchg
push
push
sub
lea
or
or
test
add
cs
jge
popf
ficom
out
std
out
sar
and
mov
int3
jg
stos
or
pop
sub
int3
imul
mov
xchg
ds
(bad)
push
ins
xchg
ja
cdq
mov
jae
in
test
add
xchg
(bad)
cli
movs
jmp
popa
out
in
loop
and
and
rcr
xchg
add
xor
shl
lds
dec
or
jno
mov
mov
add
jb
mov
(bad)
push
aam
es
leave
jge
fucomip
in
ret
push
xor
iret
sub
inc
hlt
xchg
enter
lahf
inc
mov
icebp
sbb
or
rcl
jo
adc
gs
in
and
stos
in
ds
mov
icebp
mov
js
xor
lods
push
dec
jl
data16
push
xchg
sahf
stos
daa
ret
mov
or
je
mov
cwde
lea
add
cmp
sub
sbb
cmp
jl
xor
sub
retf
sub
mov
shr
nop
lods
add
cld
cmp
and
je
jno
out
call
ror
jecxz
sub
and
enter
pushf
mov
jecxz
std
inc
or
ret
and
mov
rol
stc
scas
or
loopne
(bad)
cdq
push
adc
int3
adc
sbb
jnp
test
in
fmul
pusha
movs
inc
rcr
adc
nop
loope
ret
or
jp
lock
jle
sub
fwait
sbb
sub
xchg
nop
mov
mov
sub
mov
and
mov
daa
enter
xchg
test
or
xor
cmp
test
adc
and
mov
ror
ja
mov
out
mov
(bad)
(bad)
fnstcw
jle
push
mov
pushf
test
cdq
ret
fiadd
inc
pop
rcr
fcomp
retf
cmp
pop
inc
xchg
fdiv
je
cdq
enter
ins
loopne
dec
icebp
out
push
dec
jbe
add
and
add
xchg
push
nop
or
loop
cmps
enter
and
bnd
lahf
lahf
xor
push
(bad)
hlt
jne
sub
call
xor
repz
cmp
bound
ja
out
mov
aam
ficom
mov
sub
pop
or
sar
xlat
(bad)
(bad)
scas
in
mov
enter
pushf
cmp
cmp
ins
inc
and
adc
retf
ret
aam
(bad)
outs
scas
or
lods
mov
dec
xchg
inc
inc
mov
lods
and
(bad)
add
je
sbb
push
sub
stc
xchg
sub
nop
push
mov
or
xor
adc
bound
or
fild
mov
mov
outs
sbb
adc
int
test
push
jp
ins
pop
jmp
push
add
or
xor
mov
cmp
mov
and
inc
jae
adc
xchg
pusha
adc
jne
or
cdq
(bad)
cmp
ret
ins
cmp
(bad)
scas
sti
sti
test
in
jno
loope
sbb
lods
and
cmp
jns
jle
ret
(bad)
fdivr
push
adc
bnd
fcomp
mov
test
mov
cmp
(bad)
rcr
daa
sti
cli
les
ss
pushf
dec
mov
ja
ret
add
cmp
push
out
cmp
cmp
(bad)
sub
add
fcmovu
mov
loopne
int
xchg
sub
sub
jo
pop
cmp
push
mov
and
adc
std
jbe
add
add
xchg
int
add
repz
xchg
inc
or
out
add
hlt
shl
xor
mov
stc
pushf
pop
jns
pop
sbb
neg
(bad)
out
xchg
scas
stos
mov
sar
out
rol
mov
pop
or
add
(bad)
sub
fcomp
pusha
and
xor
dec
(bad)
push
jnp
mov
and
xchg
lahf
jl
mov
pop
enter
push
in
dec
fstp
ret
cdq
cs
fild
repz
imul
ret
jae
mov
aas
retf
ret
dec
dec
mov
inc
adc
adc
loopne
enter
out
es
sub
jb
xor
adc
sahf
lahf
push
sti
cmp
daa
pop
jns
ror
xchg
or
cli
(bad)
xor
jmp
jbe
mov
jbe
cld
mov
sub
sub
clc
xchg
push
addr16
xor
adc
lock
jne
xor
jge
ins
mov
xor
es
das
imul
sbb
loopne
scas
bound
push
mov
ret
push
jle
in
push
xor
push
imul
or
pushf
sub
das
lea
fcom
ja
add
mov
or
push
mov
push
sbb
lock
movs
dec
xor
add
fsubr
(bad)
push
sar
call
dec
cmp
cmp
pushf
out
pop
ret
and
stc
bound
lds
(bad)
push
jg
test
xor
mov
fidiv
pop
sbb
fnstenv
push
enter
fisttp
mov
push
sub
pop
xor
adc
mov
push
push
cmp
inc
cmp
sub
mov
mov
fisttp
jnp
std
jmp
cmp
imul
retf
sbb
rcl
mov
cmp
shl
aad
test
jmp
out
gs
sub
sub
addr16
push
div
jecxz
pop
xchg
inc
outs
retf
add
sbb
pop
(bad)
nop
dec
xchg
push
jg
ds
sbb
iret
call
mov
mov
xor
ret
sbb
lahf
loope
fidivr
pop
std
in
cmps
jns
out
ds
pop
or
sbb
scas
push
fmul
cmp
push
aaa
inc
cmp
push
test
xor
and
add
les
int
pop
imul
mov
mov
fisttp
jmp
mov
and
fwait
xor
fnstenv
std
pusha
jmp
mov
leave
xlat
aas
mov
inc
and
add
lahf
pop
cmp
sbb
and
test
dec
daa
mov
fwait
repnz
ret
fisttp
shl
inc
xchg
into
push
icebp
clc
mov
cld
das
mov
loopne
(bad)
mov
push
cmp
push
xchg
cs
mov
push
mov
sbb
mov
pop
add
mov
inc
sbb
iret
sub
scas
cmp
xor
cmp
push
test
or
or
in
daa
push
pop
(bad)
lea
in
ret
xchg
push
je
pusha
shl
rol
bound
lds
cdq
cli
out
push
iret
sub
shl
out
or
sub
cwde
loop
(bad)
test
push
ja
test
push
xor
sahf
xchg
and
sbb
cdq
sahf
add
add
dec
push
add
icebp
movs
pop
cwde
push
xor
mov
mov
push
adc
test
out
fiadd
neg
les
sbb
cmp
daa
fcomip
xchg
adc
cs
and
or
mov
cmps
mov
sub
pop
jl
or
mov
mov
pop
xchg
xchg
xor
mov
pop
das
push
xlat
aad
lods
mov
rol
jbe
clc
clc
sbb
out
pop
sub
sub
jecxz
aas
cmp
and
cmc
sbb
mov
les
jnp
sub
icebp
shr
movs
arpl
jecxz
xchg
enter
leave
jg
cmps
fist
(bad)
push
jg
test
jno
mov
daa
rcr
test
cmc
or
adc
retf
adc
dec
(bad)
add
sar
(bad)
loopne
int
and
loopne
sbb
cmp
adc
ds
add
and
int3
(bad)
mov
adc
loope
xor
mov
das
jb
adc
inc
mov
in
push
jp
in
stc
jnp
jecxz
test
mov
loopne
or
lds
dec
sahf
mov
push
setle
add
fst
repnz
xor
lods
jmp
rol
test
addr16
out
mov
add
cmps
sti
jl
fstp
jmp
mov
and
dec
adc
jno
jo
imul
dec
inc
xor
call
repnz
sub
int
jbe
mov
fld
addr16
xlat
add
sbb
retf
mov
(bad)
mov
push
repnz
cmp
jp
jle
sbb
fucom
call
fild
pop
sub
push
add
stc
enter
sti
or
cmp
fst
fdivr
addr16
dec
jae
mov
xor
mov
xchg
xor
push
outs
lods
gs
out
sub
sub
or
mov
(bad)
sub
js
inc
or
inc
dec
emms
sub
push
dec
pop
sub
sub
and
lock
out
cmp
sub
jnp
popf
mov
into
std
cmp
test
pop
jns
movs
aas
aaa
cld
pop
push
movs
xchg
push
push
add
not
push
out
push
pop
call
xor
mov
cmp
pop
and
aas
cmp
push
lock
cdq
push
cmps
or
xchg
loope
sbb
jae
rcr
push
xchg
or
mov
lahf
dec
enter
frstor
adc
pop
mov
push
or
fild
aam
(bad)
outs
and
bound
push
cld
pop
cmp
add
out
lahf
into
icebp
pop
push
cmc
stc
(bad)
xchg
stos
add
xchg
mov
jbe
(bad)
mov
arpl
dec
xor
dec
scas
mov
loope
rcl
pop
call
cmp
addr16
cdq
jb
int3
add
xor
outs
adc
ds
xchg
mov
jg
cmp
xor
add
je
xchg
or
jmp
or
mov
add
cld
cmp
mov
cwde
mov
sub
mov
(bad)
sub
outs
dec
repz
jge
jno
stos
add
ins
or
scas
(bad)
pusha
arpl
pop
lods
cmc
jnp
jb
test
mov
mov
mov
xlat
scas
pop
cmp
pop
popa
enter
jno
cmps
dec
sub
shr
sahf
jle
(bad)
jmp
xchg
cdq
mov
xchg
scas
add
icebp
push
inc
loopne
mov
ret
rol
enter
xchg
push
mov
dec
mov
movs
jmp
hlt
enter
mov
add
cmp
(bad)
xor
daa
xchg
push
xor
mov
repnz
inc
push
push
and
repz
repnz
or
inc
in
cmp
adc
mov
add
out
das
imul
sbb
mov
xchg
leave
pop
es
les
dec
and
cmp
dec
and
mov
cmp
jmp
xor
rcl
fisttp
(bad)
add
xor
mov
cli
cmp
pop
add
sbb
mov
inc
xchg
int
(bad)
jmp
jae
cld
jne
xor
push
enter
sub
push
cdq
pop
xor
add
cld
add
mov
ret
mov
test
sbb
rcl
pop
test
daa
movs
scas
iret
jle
adc
push
add
iret
daa
pusha
dec
shr
dec
dec
cmp
pop
mov
mov
dec
call
mov
sbb
xchg
xor
sbb
jbe
mov
mov
sub
mov
shl
pop
in
stc
sti
ja
inc
cmp
ret
ds
call
adc
jl
or
inc
(bad)
mov
hlt
mov
push
test
or
push
sti
clc
daa
adc
rcl
mov
idiv
mov
jb
xlat
(bad)
mov
fnstcw
or
cdq
inc
ret
pop
add
mov
sbb
and
jns
mov
mov
mov
push
mov
call
xor
xor
jecxz
dec
fsubr
ror
leave
out
push
pop
arpl
cmps
push
int
dec
cmp
sbb
xor
iret
jp
sbb
lea
cmc
jp
add
xor
or
xor
adc
push
push
sub
rcr
pop
or
and
adc
or
and
sbb
sbb
(bad)
fwait
dec
ins
in
cwde
dec
bound
mov
ss
retf
loop
aas
imul
loop
dec
push
add
mov
(bad)
jle
add
pushf
sub
pop
arpl
mov
leave
pushf
xchg
(bad)
and
shl
xor
into
or
sub
nop
mov
sub
mov
pop
add
mov
rdmsr
out
inc
cmp
jmp
xchg
leave
in
and
pop
nop
mov
xor
test
rol
dec
fst
rcr
jecxz
jbe
sti
int3
adc
push
fucomip
data16
mov
and
data16
leave
mov
pusha
(bad)
xlat
stc
cmp
inc
push
sbb
sub
add
std
fld
fimul
(bad)
out
iret
pop
es
arpl
fs
(bad)
fisubr
imul
pop
ins
or
loopne
add
bound
or
sub
adc
or
push
inc
shl
inc
mov
dec
ret
sbb
mov
test
ret
mov
lahf
out
out
enter
int3
movs
aaa
xchg
add
out
inc
sbb
pop
fnstenv
mov
ror
adc
movs
jne
inc
sub
stos
ja
data16
out
cmp
add
sub
jb
(bad)
sub
(bad)
popf
leave
in
iret
dec
inc
out
cmps
sub
sbb
fidivr
out
push
repz
push
sub
sti
dec
mov
sub
hlt
jae
sbb
adc
(bad)
fsubr
outs
ins
cmp
mov
sub
out
add
and
neg
fst
and
sub
hlt
mov
adc
inc
(bad)
outs
jns
div
(bad)
xor
dec
xchg
xchg
stos
add
xchg
popf
shl
xlat
xchg
rol
imul
pop
lods
js
retf
sbb
inc
xchg
stos
xor
test
movs
imul
arpl
imul
test
add
push
adc
xor
stos
add
push
add
lea
movs
imul
arpl
imul
les
and
add
add
add
dec
inc
scas
inc
pusha
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
and
push
push
and
add
add
add
pop
add
or
adc
(bad)
clc
(bad)
packuswb
or
dec
in
push
es
push
push
and
add
pop
and
push
into
xor
mov
pop
pop
jmp
jnp
(bad)
call
(bad)
idiv
xor
ret
call
adc
push
and
add
sbb
push
jg
cmp
lock
(bad)
std
ins
ins
(bad)
std
ja
(bad)
dec
imul
dec
dec
(bad)
(bad)
cmp
(bad)
call
pop
jp
add
add
add
sbb
or
cmp
cmp
(bad)
(bad)
cmp
(bad)
push
ss
or
add
inc
add
inc
and
(bad)
cmp
(bad)
(bad)
cmp
(bad)
call
sbb
dec
add
adc
push
ins
jmp
inc
inc
(bad)
std
ss
(bad)
nop
or
add
or
or
or
or
or
or
or
pop
std
push
add
dec
or
std
cmp
idiv
cmp
(bad)
jmp
and
arpl
add
add
or
add
add
lea
inc
(bad)
inc
(bad)
jmp
pop
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
add
add
add
xor
(bad)
cmp
(bad)
(bad)
and
mov
jge
add
add
add
sub
push
rcl
fdivr
inc
inc
(bad)
(bad)
aas
aas
repz
adc
dec
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
jmp
sub
jmp
sub
inc
pop
sub
add
sbb
xchg
cli
push
push
(bad)
dec
(bad)
push
xor
std
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
pop
inc
add
std
and
xchg
(bad)
cmp
(bad)
std
sub
(bad)
or
ds
push
daa
add
add
add
pop
cmp
dec
(bad)
inc
(bad)
call
sbb
pop
pop
add
or
or
or
dec
or
dec
or
or
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
dec
or
inc
add
call
sbb
aaa
aaa
(bad)
jmp
out
push
push
dec
retf
es
add
dec
push
push
jne
dec
dec
icebp
inc
(bad)
ss
or
add
or
push
dec
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
or
or
or
add
add
push
push
inc
std
xor
(bad)
jmp
out
call
adc
add
sbb
add
add
pop
sbb
xchg
cmp
scas
jmp
(bad)
inc
(bad)
call
push
std
pop
pop
add
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
or
or
push
std
or
or
push
or
std
or
or
or
or
push
push
add
or
and
std
sub
hlt
call
add
add
add
or
or
dec
(bad)
popa
(bad)
(bad)
dec
retf
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
std
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
or
or
or
pop
std
pop
pop
pop
dec
or
std
or
or
or
add
pop
push
push
std
sub
loope
sub
clc
call
sbb
cmp
add
aaa
adc
push
iret
push
push
(bad)
call
jmp
sub
add
add
or
or
or
or
or
dec
or
or
dec
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
and
jmp
std
jmp
and
add
add
add
add
add
jg
xor
in
inc
inc
cld
dec
(bad)
std
or
add
or
or
or
or
std
or
or
or
or
or
or
std
or
or
or
or
or
push
dec
or
std
pop
or
std
add
xor
std
add
xor
dec
or
std
pop
or
std
or
or
or
or
or
or
or
or
or
std
or
or
or
or
std
pop
or
call
sbb
call
pop
xchg
jmp
add
add
add
add
add
add
sbb
into
jmp
or
add
or
or
std
or
or
std
or
or
or
or
or
or
std
or
or
or
or
sbb
add
aaa
inc
or
es
mov
dec
pop
loopne
pop
outs
icebp
std
push
fs
es
add
push
std
push
or
or
or
or
or
or
or
or
or
dec
push
push
std
or
femms
dec
or
std
and
fwait
std
xor
(bad)
dec
or
add
add
add
add
add
add
add
push
add
xchg
or
dec
or
dec
or
dec
or
or
dec
or
dec
adc
or
sub
add
call
cmp
(bad)
cmp
dec
loopne
jl
(bad)
inc
sbb
dec
or
or
or
or
or
(bad)
ud0
push
push
call
adc
dec
(bad)
ud0
adc
dec
(bad)
call
push
in
add
add
add
adc
add
add
add
add
or
out
push
push
push
dec
push
push
dec
push
push
std
push
push
push
dec
push
push
std
push
push
push
std
push
push
or
dec
push
and
add
inc
call
movs
std
jg
(bad)
std
ins
jle
dec
sbb
add
cmp
std
add
inc
std
add
pop
call
test
adc
inc
add
pop
dec
push
paddw
adc
std
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
cmp
add
add
add
add
add
cmp
pi2fd
or
ud0
(bad)
paddw
(bad)
ud0
femms
std
(bad)
prefetch
or
std
or
or
std
add
icebp
inc
cs
add
dec
inc
and
pop
or
std
or
or
or
push
std
pop
pop
or
pop
or
inc
or
std
add
std
pop
outs
hlt
jmp
idiv
add
dec
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
sub
add
add
add
lar
add
adc
dec
push
push
call
adc
call
adc
call
adc
call
(bad)
ud0
unpckhps
or
inc
pop
pop
push
lahf
(bad)
(bad)
cmp
add
popa
inc
pop
sub
dec
pop
pop
inc
pop
push
inc
pop
pop
inc
pop
pop
inc
pop
pop
inc
push
add
inc
or
jmp
cmp
inc
push
xchg
dec
or
sbb
adc
adc
adc
adc
adc
adc
adc
pop
or
or
adc
dec
(bad)
paddw
adc
call
adc
std
adc
adc
movups
push
mov
call
std
add
inc
or
std
or
or
or
push
inc
pop
pop
std
or
or
or
or
or
or
or
push
push
add
std
pop
or
add
(bad)
(bad)
jp
(bad)
std
xor
std
add
dec
call
adc
std
adc
adc
pop
std
pop
pop
pop
call
adc
mov
add
add
(bad)
jo
adc
adc
adc
adc
adc
push
std
or
jp
pop
jo
std
js
(bad)
std
adc
pushf
inc
add
push
or
std
or
or
or
push
std
or
pop
std
pop
push
pop
dec
push
push
std
or
or
push
push
push
call
adc
std
adc
adc
adc
adc
sbb
sbb
adc
adc
add
add
pop
pop
or
inc
add
std
push
addr16
std
popa
je
inc
or
xor
pop
sbb
sbb
pop
std
sbb
sbb
adc
add
add
adc
call
adc
dec
adc
inc
or
dec
int3
inc
mov
inc
pop
push
dec
pop
pop
inc
pop
pop
dec
or
inc
pop
pop
inc
add
adc
adc
sbb
pop
pop
call
sbb
push
push
push
call
sbb
call
sbb
jmp
and
call
sbb
inc
push
add
push
pop
or
pop
or
jmp
aaa
mov
call
push
mov
adc
call
sbb
call
sbb
call
push
adc
add
sbb
aad
pop
sub
push
or
sbb
movs
(bad)
jns
(bad)
std
dec
pop
(bad)
add
xor
pop
or
pop
pop
push
std
or
or
or
or
add
or
pop
jmp
and
std
adc
adc
or
or
or
or
or
std
adc
adc
sbb
sbb
sbb
sbb
sbb
and
std
or
or
add
or
std
add
xor
pop
adc
xor
dec
dec
std
sbb
std
sbb
adc
add
or
iret
add
sbb
dec
sbb
std
gs
inc
adc
push
or
std
or
or
pop
pop
pop
std
pop
pop
push
dec
or
std
or
or
or
or
push
sbb
and
movups
dec
or
std
or
push
push
dec
or
push
push
push
std
or
or
std
sbb
sbb
sbb
sbb
and
and
sbb
push
adc
std
push
pop
or
add
daa
std
add
pop
std
dec
(bad)
out
push
jmp
std
sbb
das
call
pop
dec
cmp
adc
jmp
inc
push
mov
call
sub
inc
or
dec
pop
or
inc
pop
push
dec
or
dec
or
dec
(bad)
ud0
push
sbb
and
and
push
push
adc
or
or
or
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
push
push
dec
movups
pop
pop
pop
(bad)
cmp
cmp
sub
sub
push
push
push
dec
or
inc
or
inc
add
jmp
mov
imul
dec
nop
jae
push
fadd
add
jmp
push
(bad)
inc
add
or
std
pop
or
inc
pop
pop
std
push
push
add
std
or
or
sbb
and
and
pop
adc
sbb
push
push
push
std
or
or
push
push
push
dec
or
or
or
push
push
push
dec
or
or
or
or
or
or
or
std
adc
adc
adc
adc
or
sub
std
sub
sub
and
and
adc
adc
add
add
pop
or
inc
push
xor
push
adc
push
and
or
adc
mov
add
inc
or
std
pop
pop
pop
std
push
push
add
or
or
adc
adc
push
push
push
std
aas
aas
aas
std
es
adc
adc
es
xor
xor
sub
sub
and
and
sbb
or
or
or
or
push
push
push
dec
or
or
or
or
or
std
or
or
or
or
adc
adc
sub
sub
or
or
adc
adc
and
and
and
push
pop
std
pop
push
push
inc
push
or
add
add
movs
mov
adc
add
push
or
inc
add
or
pop
pop
pop
call
sbb
jmp
cs
sub
or
or
es
inc
(bad)
cmp
cmp
xor
xor
sub
sub
es
and
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
inc
adc
push
dec
or
sbb
sbb
es
and
adc
push
inc
pop
inc
pop
adc
push
push
adc
pop
pop
pop
mov
or
call
push
push
std
sub
sub
sub
sub
push
push
push
call
pop
pop
std
dec
dec
dec
std
dec
dec
dec
std
inc
inc
inc
(bad)
cmp
cmp
xor
xor
das
das
das
jmp
sub
std
and
and
sbb
adc
or
dec
or
or
or
or
or
std
or
or
or
or
or
or
or
or
push
push
push
std
or
or
(bad)
(bad)
ud0
or
std
(bad)
(bad)
paddw
push
push
jmp
and
sbb
sbb
push
push
add
inc
add
add
sbb
fisubr
sub
push
sbb
call
adc
dec
dec
dec
jmp
pusha
call
push
dec
inc
(bad)
aas
aas
aas
(bad)
cmp
cmp
xor
xor
sub
sub
and
and
sbb
sbb
call
adc
dec
push
push
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
add
or
or
or
or
or
or
adc
adc
pop
pop
pop
call
pop
pop
dec
or
dec
or
add
add
pop
pop
pop
cli
inc
inc
inc
(bad)
aas
aas
aas
std
sbb
sbb
inc
inc
inc
push
jno
bound
call
std
push
push
push
std
dec
dec
dec
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
xor
sub
sub
es
push
push
push
call
sbb
std
adc
or
or
or
or
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
or
or
or
or
or
adc
sbb
jo
add
add
or
xchg
call
sbb
call
sbb
std
outs
outs
outs
push
jb
data16
pop
std
pop
pop
pop
std
push
push
push
std
dec
dec
dec
inc
inc
std
cmp
cmp
xor
cs
daa
daa
daa
std
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
push
push
push
std
pop
pop
pop
inc
add
add
add
inc
add
or
or
or
or
or
add
add
xor
dec
cmp
cmp
pop
pop
pop
inc
add
jmp
and
call
pop
jmp
push
call
push
dec
dec
inc
(bad)
cmp
cmp
xor
cs
es
and
call
sbb
call
push
push
call
adc
dec
push
push
dec
or
or
or
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
inc
pop
pop
inc
push
push
inc
add
add
add
add
or
or
push
push
push
test
add
add
push
push
dec
sbb
sbb
push
push
push
inc
add
call
push
std
pop
pop
pop
std
dec
dec
dec
inc
std
cmp
xor
jmp
cs
es
and
and
sbb
sbb
adc
adc
dec
pi2fw
or
std
or
or
std
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
add
inc
push
push
dec
or
or
or
adc
adc
adc
(bad)
or
or
add
add
adc
adc
aas
aas
aas
dec
dec
std
cmp
xor
cs
daa
daa
daa
std
and
and
sbb
sbb
push
push
push
std
adc
adc
or
or
std
or
or
std
or
or
or
or
or
or
or
or
pop
pop
pop
std
add
add
add
add
or
or
push
push
push
in
or
jnp
or
adc
add
add
push
or
mov
add
add
or
or
xor
xor
cmp
cmp
sub
and
and
sbb
sbb
adc
adc
adc
adc
or
push
push
dec
or
or
or
dec
or
or
or
add
add
or
or
adc
adc
adc
adc
adc
mov
sbb
cmps
push
push
push
inc
pop
pop
inc
and
std
sub
sub
pop
pop
pop
call
sbb
std
adc
adc
adc
adc
or
or
push
dec
or
std
add
add
pop
pop
pop
call
sbb
fcom
adc
imul
add
sbb
sbb
cs
inc
inc
inc
call
pop
pop
inc
add
(bad)
push
push
push
call
sbb
std
adc
adc
adc
adc
push
push
push
std
or
or
add
add
adc
adc
sub
sub
and
sbb
xor
add
add
xor
or
sub
or
inc
add
dec
push
push
inc
pop
pop
inc
push
sbb
sub
sub
and
push
push
add
add
add
and
sbb
pop
pop
les
adc
loopne
adc
int
sbb
mov
push
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
call
(bad)
inc
add
(bad)
clc
pop
(bad)
inc
add
push
add
inc
add
jmp
add
inc
add
inc
add
inc
add
add
(bad)
cld
add
aas
inc
add
clc
add
pop
inc
add
lock
pop
inc
add
rol
add
add
inc
add
inc
add
add
add
cld
add
add
jg
add
add
add
aas
add
loopne
add
add
add
rol
add
pop
add
rol
add
aas
add
rol
add
aas
add
loopne
add
add
add
lock
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
clc
add
add
sldt
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
push
add
pop
inc
add
cld
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
push
pop
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
adc
add
pop
fs
cmp
test
or
add
push
and
or
inc
mov
outs
outs
(bad)
inc
cmp
dec
dec
(bad)
call
or
or
add
pop
xor
and
cmp
push
xor
inc
add
inc
add
call
ds
call
xchg
jmp
or
xor
sar
inc
inc
(bad)
call
sbb
pop
pop
add
or
or
or
or
or
or
push
add
and
cmp
(bad)
jmp
and
xor
add
add
and
push
push
(bad)
push
ss
dec
or
dec
or
or
or
or
or
or
or
or
or
or
or
push
push
add
push
push
or
xor
repz
daa
retf
inc
add
add
add
push
cmp
mov
jmp
and
push
push
add
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
inc
pop
add
add
add
sub
sar
sub
in
push
push
sub
add
add
push
and
adc
dec
test
cmp
jecxz
push
push
adc
dec
or
or
dec
or
or
or
or
or
or
or
pop
pop
pop
dec
or
dec
or
inc
add
jmp
and
dec
or
add
add
xor
es
call
sub
push
add
or
or
or
or
or
dec
or
dec
or
dec
or
dec
or
inc
pop
pop
inc
pop
pop
inc
pop
pop
dec
or
inc
sbb
dec
add
cmp
sub
jmp
push
cli
call
adc
inc
pop
add
or
or
or
dec
or
or
or
or
push
push
or
add
pop
add
dec
or
dec
or
dec
or
dec
or
dec
or
call
adc
xor
(bad)
call
adc
add
add
add
add
sub
add
or
or
or
or
or
dec
or
dec
or
inc
add
test
cmp
(bad)
ds
mov
inc
add
dec
or
dec
or
dec
or
or
push
push
dec
add
adc
aaa
push
ss
dec
or
add
add
add
add
add
add
sub
or
or
dec
or
or
or
or
or
or
or
inc
sbb
jge
call
out
sub
mov
sub
ins
lock
loope
add
or
push
or
push
call
adc
call
adc
call
adc
call
pop
cwde
fild
add
or
add
and
add
push
push
dec
(bad)
ud0
femms
dec
ud2
dec
or
inc
or
dec
pusha
(bad)
pop
jo
inc
add
add
add
inc
add
call
push
xchg
gs
dec
sbb
or
call
adc
call
adc
call
adc
call
adc
imul
add
add
pop
pop
xchg
adc
call
adc
call
femms
dec
push
ud0
pop
xor
sub
jge
call
and
and
pop
push
push
inc
pop
add
pop
pop
push
inc
pop
add
inc
dec
call
repnz
cmp
call
adc
adc
push
push
call
adc
pfrsqit1
adc
ud0
adc
dec
or
call
sbb
(bad)
push
mov
inc
pop
add
or
pop
dec
or
adc
adc
adc
adc
adc
adc
adc
push
inc
daa
push
inc
mov
dec
push
inc
call
pop
sbb
sbb
pop
call
pop
adc
add
push
adc
(bad)
(bad)
inc
or
(bad)
dec
pop
(bad)
add
push
inc
add
dec
pop
add
inc
push
push
call
sbb
call
sbb
call
sbb
call
pop
pop
call
sbb
inc
add
adc
call
call
and
sbb
pop
std
adc
cmp
xor
call
idiv
or
jne
add
sbb
pop
push
add
dec
or
dec
push
push
call
pop
pop
call
push
push
dec
or
or
or
call
push
push
call
and
dec
or
inc
add
inc
dec
out
sub
mov
call
push
cmp
add
xor
imul
and
add
inc
add
add
call
adc
call
sbb
sbb
sbb
or
or
or
push
push
dec
push
push
dec
push
push
dec
or
or
adc
jmp
das
call
adc
add
add
and
sub
mov
inc
push
into
inc
mov
add
in
inc
add
xor
add
inc
push
add
or
or
and
and
sub
sub
sbb
sbb
daa
daa
jmp
sub
call
sbb
dec
or
push
push
push
dec
push
push
dec
push
push
dec
or
dec
or
call
sbb
adc
adc
and
and
and
and
or
pop
inc
add
call
sbb
push
and
add
add
add
dec
pf2iw
sbb
jmp
sbb
jmp
das
das
inc
inc
push
xor
sub
sub
and
and
pop
pop
pop
dec
or
push
push
push
dec
push
push
dec
or
dec
or
inc
push
push
dec
pi2fd
or
sbb
es
inc
add
inc
add
add
adc
xchg
and
das
sub
sbb
sub
sub
pop
pop
pop
dec
dec
inc
inc
(bad)
cmp
cmp
das
das
das
jmp
and
sbb
adc
dec
push
push
dec
or
dec
or
dec
or
inc
pop
pop
dec
or
dec
or
dec
sbb
call
sbb
or
add
push
push
push
pushf
push
push
push
call
push
push
jmp
jmp
imul
pop
pop
call
push
inc
inc
(bad)
cmp
cmp
xor
xor
sub
sub
sbb
push
push
dec
push
push
dec
push
push
dec
or
dec
or
dec
or
dec
or
inc
push
push
inc
add
add
or
call
adc
call
push
pop
inc
add
add
inc
inc
test
adc
jmp
and
call
jmp
call
push
dec
dec
(bad)
ds
xor
jmp
sub
call
push
push
call
push
push
call
adc
dec
or
or
or
or
or
or
pop
pop
pop
inc
pop
pop
inc
add
add
add
add
add
or
or
push
add
add
and
and
add
call
sbb
dec
dec
dec
dec
(bad)
aas
aas
aas
push
xor
jmp
sub
jmp
and
call
push
push
call
adc
dec
or
or
or
or
or
or
or
or
add
add
or
or
or
adc
adc
(bad)
(bad)
setb
push
pop
call
adc
push
xor
push
ss
sub
call
pop
pop
call
adc
dec
or
or
or
or
add
push
dec
or
dec
or
or
or
or
add
add
adc
or
sbb
sbb
sbb
(bad)
pf2iw
sbb
call
push
push
call
adc
dec
push
push
dec
or
dec
or
call
pop
pop
sahf
adc
adc
dec
dec
dec
jo
and
out
or
or
push
push
push
inc
pop
pop
dec
push
push
into
sub
sub
and
add
add
add
sbb
pop
adc
adc
sbb
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
ud0
lock
(bad)
jmp
add
inc
add
inc
add
inc
add
add
aas
lock
pop
loopne
add
rol
pop
add
xadd
add
loopne
add
lock
(bad)
add
(bad)
add
pop
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
clc
add
paddd
add
inc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
ja
pop
pop
(bad)
call
(bad)
call
sbb
add
add
add
pop
sub
sub
(bad)
adc
pop
inc
add
std
or
adc
xor
(bad)
pop
pop
mov
or
sbb
inc
(bad)
jmp
and
or
add
or
or
or
or
or
add
std
sub
mov
jmp
add
add
sbb
ss
inc
inc
out
call
adc
dec
or
std
or
or
or
or
or
or
or
or
or
pop
inc
add
std
push
push
mov
sub
fincstp
push
push
sub
adc
inc
jbe
dec
cli
jmp
sub
dec
or
std
or
or
or
or
or
or
or
pop
pop
pop
std
or
or
add
add
adc
sub
dec
or
inc
add
add
push
push
je
push
push
stc
call
sbb
dec
or
dec
or
std
or
or
add
std
push
push
add
pop
pop
add
pop
pop
pop
dec
or
dec
or
std
adc
cmp
sub
jmp
add
or
xor
fdivrp
or
add
or
push
dec
or
std
or
or
or
or
or
std
add
adc
pushf
(bad)
and
xchg
add
sbb
or
add
or
or
or
or
or
add
(bad)
xor
jmp
adc
add
cmp
add
scas
or
push
push
std
push
push
or
dec
or
std
pop
push
inc
dec
loope
dec
push
sar
pop
sub
dec
popa
jmp
push
adc
pop
dec
push
or
adc
adc
adc
or
adc
pop
into
add
add
(bad)
(bad)
ud0
push
or
inc
or
aaa
inc
mov
dec
pop
jecxz
pop
or
add
add
add
inc
add
std
inc
push
sar
sub
cdq
dec
adc
adc
ud0
adc
adc
adc
add
add
push
or
dec
or
std
push
daa
jnp
dec
(bad)
in
call
and
add
or
dec
or
dec
push
or
dec
add
jmp
das
xchg
inc
sar
or
sub
pop
push
adc
push
push
adc
add
adc
push
(bad)
cmp
std
add
push
add
(bad)
(bad)
paddw
sbb
std
push
push
push
(bad)
adc
pop
pop
(bad)
sbb
push
std
add
add
or
push
inc
loop
sbb
pop
(bad)
sbb
adc
add
dec
dec
test
inc
pop
ss
add
add
or
add
adc
push
std
sbb
sbb
adc
adc
or
or
or
or
or
push
push
std
sbb
sbb
sub
sub
or
push
std
add
pop
push
inc
(bad)
jmp
mov
or
xchg
daa
add
push
sbb
add
push
std
or
add
std
push
push
push
std
and
and
and
and
push
push
push
std
or
or
or
or
or
(bad)
(bad)
paddw
sbb
std
and
and
sbb
adc
add
or
pop
sub
push
jmp
add
or
dec
or
add
sbb
sbb
sbb
sub
inc
inc
(bad)
cmp
cmp
sub
sub
push
push
push
dec
push
push
dec
or
or
or
std
or
or
or
or
or
or
pop
pop
pop
jmp
and
dec
pop
add
add
es
add
add
cmp
jmp
push
push
std
pop
pop
pop
dec
dec
(bad)
cmp
das
das
jmp
and
call
push
push
dec
or
or
or
or
or
or
push
push
push
std
push
push
push
dec
or
sbb
sbb
adc
push
mov
add
add
push
push
sbb
ds
and
call
pop
jmp
arpl
dec
dec
dec
std
inc
inc
inc
(bad)
xor
xor
and
and
pop
pop
pop
std
(bad)
pi2fw
or
std
or
or
or
or
or
or
pop
pop
pop
inc
add
add
add
push
push
push
dec
or
mov
add
add
sbb
inc
push
push
push
enter
inc
inc
inc
std
xor
xor
and
and
pop
pop
pop
dec
pi2fw
or
dec
or
or
or
or
or
push
push
push
inc
pop
pop
dec
or
cmps
or
or
(bad)
pi2fw
or
mov
and
and
and
and
pop
pop
pop
dec
pi2fd
or
or
or
or
or
adc
push
or
add
sub
sub
cmp
cmp
push
push
push
dec
or
call
adc
cld
and
and
and
and
adc
adc
adc
add
add
(bad)
inc
jmp
inc
inc
jg
inc
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
shl
in
call
add
add
adc
xor
call
add
call
and
add
add
or
xor
dec
or
dec
or
dec
or
inc
adc
and
add
or
add
add
or
cmc
push
pop
dec
or
dec
or
dec
pop
add
pop
pop
add
push
push
add
or
and
and
shr
push
sub
add
add
or
add
or
pop
dec
or
dec
rdtsc
jmp
or
dec
pop
add
or
push
dec
adc
es
and
push
push
or
or
add
pop
or
push
lods
push
inc
stos
call
push
pop
push
scas
jmp
sub
or
add
call
adc
aad
add
add
or
or
and
push
inc
mov
inc
add
or
add
pop
push
add
adc
inc
mov
adc
sbb
push
push
pandn
add
add
inc
mov
inc
add
dec
push
or
adc
adc
adc
adc
sbb
sbb
pop
pop
ud0
and
xor
call
and
inc
sbb
sbb
sub
add
call
sbb
sbb
sbb
or
or
or
or
call
sbb
jmp
and
jmp
cs
add
push
add
pop
push
jmp
and
(bad)
ds
aas
aas
aas
jmp
sub
call
adc
or
or
dec
or
dec
or
call
pop
push
call
adc
inc
or
pop
or
pop
and
xor
pop
pop
pop
jmp
popa
inc
jmp
sbb
dec
push
push
dec
or
dec
or
inc
pop
pop
inc
add
dec
or
dec
push
or
add
add
or
imul
jmp
das
das
call
sbb
dec
push
push
dec
or
or
or
or
or
or
or
pop
pop
pop
pop
sub
sub
adc
adc
or
or
sbb
sbb
sbb
or
add
add
add
adc
adc
adc
(bad)
inc
add
aas
add
clc
sldt
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
sldt
(bad)
jg
add
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
add
add
or
or
add
or
add
add
add
adc
push
add
add
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
add
add
add
in
lods
mov
dec
inc
inc
push
cmp
xchg
pop
dec
shl
(bad)
(bad)
pop
test
push
into
cmp
xchg
dec
push
fidiv
dec
xlat
rcl
add
je
adc
push
adc
push
inc
(bad)
shl
shl
and
call
mov
jmp
sub
xor
jns
jnp
(bad)
js
stc
popf
out
out
and
inc
push
movs
mov
cmp
adc
adc
rcl
xor
push
xor
arpl
js
xor
push
fwait
scas
add
pop
aad
cli
xchg
adc
mov
imul
mov
out
mov
sahf
jmp
xor
push
cmps
sub
cmp
aam
or
pop
cmp
fnsave
lods
test
outs
or
inc
push
pop
loop
sbb
inc
mov
ret
cmp
push
adc
push
mov
jg
sub
call
scas
popa
lahf
mov
jb
sbb
adc
test
lahf
adc
inc
les
jmp
inc
aam
cmp
fwait
xor
lea
jl
cmps
xchg
inc
dec
shr
push
test
enter
sbb
ficom
ja
jmp
jp
test
cwde
mov
xlat
adc
cmp
push
in
add
cld
pop
call
into
dec
add
jge
aam
push
ret
jo
add
xchg
clc
xchg
inc
and
aam
and
les
iret
dec
repz
mov
adc
shrd
pusha
lock
cli
repz
jmp
mov
mov
ins
lahf
sub
push
dec
lds
movs
int
mov
lods
sbb
test
cmp
jbe
(bad)
in
enter
mov
xchg
ja
add
jle
sbb
mov
xchg
mov
push
add
in
pop
loopne
push
or
pusha
xor
(bad)
fs
jecxz
pop
sbb
mov
shl
(bad)
xor
sti
jae
jmp
shl
and
add
pop
cmp
rcl
push
pushf
mov
cmps
idiv
iret
inc
std
and
mov
sub
mov
pop
mov
mov
pusha
jg
vmptrst
(bad)
lock
jp
push
jl
pop
pop
out
jbe
stc
cmps
add
pop
xchg
aas
xor
push
ins
scas
sbb
mov
lods
jmp
dec
sbb
retf
push
mov
cld
lahf
cmp
jmp
add
add
dec
inc
scas
inc
pusha
or
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
pusha
add
add
add
add
jle
add
add
lods
add
add
push
je
imul
add
add
add
add
add
inc
push
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
inc
adc
add
add
add
cli
add
add
add
add
add
adc
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
push
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
sbb
add
add
add
add
mov
add
add
add
test
add
pop
add
add
add
imul
add
inc
add
add
add
jns
add
rol
add
add
xchg
add
ins
mov
add
add
add
sbb
add
add
mov
add
add
add
jae
jne
arpl
jae
gs
bound
push
gs
jne
arpl
jae
gs
bound
fs
ins
add
arpl
ins
imul
outs
bound
push
dec
push
dec
outs
bound
add
or
jb
jae
jne
arpl
add
cs
jb
jae
jne
arpl
add
or
jb
jae
jne
arpl
add
cs
cs
jae
jne
arpl
add
or
jb
jae
jne
arpl
add
push
dec
outs
bound
cs
gs
jne
arpl
cs
jae
jne
arpl
add
or
jb
jae
jne
arpl
add
cs
cs
jae
jne
arpl
add
outs
ins
gs
outs
add
jae
gs
add
je
xor
inc
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jb
outs
add
imul
ins
gs
arpl
add
inc
sub
push
jbe
or
inc
mov
add
mov
pop
push
sbb
mov
add
xor
xor
xor
xor
add
add
push
sub
add
xor
xor
xor
sub
sub
sub
sub
cmp
xor
xor
add
add
add
add
add
add
and
jo
jb
addr16
and
imul
data16
popa
jb
and
xor
cmp
add
gs
jne
arpl
jae
gs
bound
add
outs
imul
data16
popa
jb
add
or
add
add
add
add
add
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
add
add
add
add
mov
add
and
add
mov
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
