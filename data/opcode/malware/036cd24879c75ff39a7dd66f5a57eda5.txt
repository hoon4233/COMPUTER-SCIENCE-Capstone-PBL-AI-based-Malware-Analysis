inc
push
mov
cmp
pop
scas
jns
shl
in
mov
in
(bad)
leave
pop
fst
dec
and
xor
scas
mov
aam
(bad)
rol
leave
push
inc
cmp
lds
lods
(bad)
cmp
loope
(bad)
repnz
dec
addr16
push
popa
push
out
lds
scas
into
loope
mov
int3
sub
jnp
pop
loope
jg
out
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
aad
mov
enter
leave
(bad)
fisubr
cmp
pushf
retf
stc
aam
pop
icebp
mov
pop
in
adc
dec
test
push
nop
mov
push
mov
loop
stc
fwait
dec
loope
inc
addr16
push
les
out
push
in
and
scas
cmps
fisub
and
push
inc
inc
sbb
inc
dec
leave
push
add
(bad)
(bad)
dec
add
add
add
adc
add
outs
add
mov
add
ror
add
add
add
add
add
(bad)
stc
jb
lock
mov
retf
lods
popa
sub
jmp
cli
mov
and
jecxz
adc
les
arpl
sbb
cmp
push
inc
xor
mov
cdq
jge
xchg
fsubr
mov
dec
xor
rol
(bad)
(bad)
inc
dec
fidiv
jl
retf
add
out
add
into
sti
mov
xchg
jns
jmp
retf
in
inc
adc
add
ds
jae
push
mov
(bad)
std
(bad)
(bad)
jmp
jb
xor
fdivr
aam
ins
scas
inc
pop
mov
retf
mov
xchg
push
mov
test
inc
sbb
ret
dec
dec
xchg
jae
cmp
jae
sub
into
jae
out
or
lock
dec
cli
cmp
mov
push
pop
jae
ss
mov
cmps
inc
int
shl
pop
push
dec
xchg
cmp
sub
jmp
and
out
xor
fidiv
icebp
in
sub
inc
push
jae
dec
adc
in
add
xchg
test
xchg
test
and
add
dec
or
adc
arpl
or
inc
mov
loopne
fisttp
das
add
mul
push
ja
test
pop
pop
pop
pop
pop
pop
clc
jae
mul
push
and
addr16
adc
dec
xchg
imul
push
jmp
sub
call
pop
in
out
cmp
inc
mov
mov
mov
test
dec
or
(bad)
hlt
scas
mov
jmp
push
mov
fs
fwait
jo
lds
jne
dec
test
call
mov
adc
fwait
movs
out
push
add
sti
or
mov
or
mov
popa
outs
jp
and
dec
push
(bad)
in
inc
mov
jp
arpl
out
in
add
test
gs
(bad)
(bad)
jmp
div
sbb
jns
and
retf
(bad)
dec
sahf
inc
popa
or
pop
dec
add
cmp
mov
(bad)
dec
cmp
push
or
mov
test
jge
(bad)
inc
dec
sbb
jmp
and
inc
data16
repz
jmp
or
mov
icebp
mov
jb
push
cmp
push
and
push
push
push
je
aas
aam
daa
or
dec
sbb
dec
add
aad
push
or
fcomip
fisttp
(bad)
rol
push
int
outs
mov
push
(bad)
aam
sbb
sbb
inc
(bad)
leave
push
jno
shl
fadd
leave
xchg
out
cmp
loop
retf
jns
rcr
out
inc
mov
int3
sbb
into
cmp
into
cld
pop
jno
retf
sub
popa
jno
int3
dec
scas
(bad)
mov
xlat
iret
vorpd
enter
adc
mov
inc
push
mov
dec
into
cld
pop
push
push
adc
gs
fcmovu
out
inc
outs
aas
lds
addr16
cmp
test
out
and
neg
adc
mov
mov
jns
daa
sbb
mov
dec
into
push
call
leave
push
outs
cmp
push
arpl
sbb
in
vmovq
popf
sbb
push
fstp
pop
xlat
enter
and
(bad)
mov
icebp
mov
mov
dec
sbb
push
mov
add
add
or
add
add
lds
dec
and
mov
jns
out
pop
jns
dec
cmp
dec
push
imul
fst
test
inc
push
mov
ficomp
push
out
sbb
scas
jnp
ss
in
lds
pop
out
(bad)
in
cmp
mov
dec
daa
push
ja
ret
mov
ins
adc
or
cs
push
out
lds
pop
inc
xor
jecxz
xor
push
in
cs
inc
sbb
out
xchg
out
push
ret
lds
arpl
push
retf
leave
leave
push
jns
in
cs
xor
xor
scas
in
pushf
pop
aas
icebp
vpandn
mov
leave
push
jnp
scas
stos
ds
rdpmc
pop
into
sbb
add
cmp
jb
int3
push
out
dec
inc
cmp
aam
arpl
vpsraw
mov
xor
std
dec
mov
dec
repnz
lock
mov
leave
push
ds
das
jns
lds
inc
dec
cmovg
dec
cld
push
out
lds
pop
inc
xor
loopne
scas
and
in
pushf
dec
dec
in
aad
add
vpsraw
push
pushf
(bad)
sbb
push
arpl
pop
scas
in
fndisi(8087
(bad)
cs
dec
pop
std
dec
pop
pop
out
lds
dec
aas
std
dec
dec
pop
out
lds
xchg
jge
fscale
dec
inc
pop
out
lds
pop
(bad)
leave
push
jno
into
cmps
push
retf
out
(bad)
fild
push
retf
cmp
sbb
cs
mov
lock
les
jno
shl
mov
push
arpl
push
pushf
loop
dec
pop
inc
scas
inc
push
in
lds
jno
(bad)
mov
clc
push
arpl
leave
push
push
push
dec
xchg
out
adc
or
dec
cmp
lds
in
xor
push
in
push
mov
push
(bad)
leave
fnstenv
push
dec
ret
in
(bad)
ds
call
aas
mul
leave
push
jno
(bad)
jecxz
int3
retf
xor
push
in
sbb
push
add
cmp
in
(bad)
jp
or
scas
mov
(bad)
test
popf
repnz
es
inc
pop
push
pushf
fcmovbe
push
add
(bad)
sub
fcom
kmovb
(bad)
(bad)
hlt
jmp
sar
mov
(bad)
retf
outs
push
retf
(bad)
leave
push
in
cmp
fnstenv
sbb
out
dec
mov
xchg
push
scas
cmp
out
lds
push
xor
and
cs
mov
out
vandnpd
mov
push
(bad)
leave
loope
mov
pop
mov
inc
dec
sub
mov
fldenv
les
loopne
into
mov
push
(bad)
leave
sbb
cs
and
(bad)
int3
retf
push
retf
dec
mov
outs
push
retf
std
adc
push
dec
pop
inc
cmp
jecxz
push
cmps
(bad)
fucomp
push
out
push
and
sub
dec
ret
in
(bad)
jnp
xor
sbb
mov
mov
or
leave
push
arpl
push
fcom
leave
push
ds
enter
dec
sbb
push
dec
mov
push
inc
retf
das
int3
test
out
add
cmp
ja
ror
add
pop
and
pop
push
retf
into
enter
or
mov
dec
test
(bad)
dec
push
arpl
push
retf
(bad)
leave
push
jnp
ss
in
lds
in
cs
push
in
push
mov
or
leave
jecxz
push
in
cs
push
in
push
mov
or
leave
fnstenv
ret
leave
push
vcvtsd2ss
retf
cmp
sbb
cs
mov
push
mov
leave
ins
out
xor
aas
pusha
mov
(bad)
sub
retf
cs
out
(bad)
sub
cmc
sbb
cs
mov
mov
(bad)
jecxz
push
retf
lea
push
dec
inc
or
(bad)
nop
pushf
jmp
sbb
mov
out
rcl
mov
leave
scas
daa
and
int3
add
inc
(bad)
(bad)
leave
push
out
inc
into
jp
dec
retf
xchg
mov
pop
(bad)
xor
arpl
sbb
xchg
out
lods
cdq
dec
in
lds
mov
xchg
loope
jmp
(bad)
jmp
jns
push
loopne
push
shl
push
fstp
out
cmp
retf
stc
les
in
cmp
and
stc
sbb
int
lods
mov
mov
or
fisttp
adc
xor
push
mov
add
gs
sbb
xchg
jno
(bad)
fbstp
mov
bound
or
out
les
in
sbb
loope
dec
mov
lds
mov
out
das
rcl
out
enter
mov
or
aad
in
cmp
push
inc
jmp
adc
sbb
out
les
in
sbb
fnstenv
dec
mov
add
cmp
push
inc
jmp
adc
and
jno
leave
pop
mov
adc
pop
(bad)
pop
scas
ja
add
add
leave
push
jno
(bad)
loope
and
push
inc
jno
imul
inc
push
inc
arpl
(bad)
loope
retf
ja
(bad)
loop
out
pushf
not
jae
or
loope
test
adc
retf
mov
sbb
mov
xor
shl
cmp
push
out
(bad)
out
(bad)
call
and
jno
(bad)
push
std
dec
(bad)
pop
out
(bad)
icebp
push
pop
arpl
ficom
adc
sub
iret
push
pop
xor
arpl
mov
loop
into
dec
aaa
cmc
push
xchg
sub
dec
stos
pop
jno
retf
fidivr
sahf
(bad)
iret
adc
and
push
out
mov
sbb
int3
jg
rcl
fstp
pushf
(bad)
sbb
sbb
xor
sbb
cmp
leave
push
inc
lds
aas
in
cmp
int3
retf
pop
out
lds
dec
adc
xchg
fidiv
int3
leave
push
scas
xor
pop
jno
(bad)
pop
mov
iret
push
out
lds
add
pushf
not
arpl
lds
xchg
mov
xlat
out
enter
pop
arpl
jmp
aam
(bad)
repz
enter
stos
pusha
xor
or
scas
into
push
movs
cli
mov
loop
into
push
pushf
idiv
push
scas
scas
fimul
repnz
cld
push
daa
or
fbstp
rcl
idiv
iret
shl
mov
jns
loop
(bad)
loope
fcmove
int
pop
xlat
xchg
push
in
dec
inc
push
out
aam
das
repnz
retf
push
retf
push
sbb
adc
xchg
repnz
mov
mov
adc
xor
push
movs
fimul
inc
out
cmp
arpl
push
pushf
out
adc
pop
(bad)
leave
loope
not
(bad)
push
adc
scas
dec
cmovg
push
sbb
or
lahf
ja
mov
sbb
ret
mov
lods
sbb
push
dec
arpl
push
popf
push
add
dec
popa
into
hlt
push
aaa
dec
pop
inc
fxch
hlt
es
mov
gs
int
out
push
adc
adc
ficom
leave
xchg
scas
dec
cmovnp
movs
loop
cmova
or
dec
in
cmp
aas
(bad)
loope
push
jns
mov
fwait
jmp
pop
(bad)
out
cvtdq2ps
dec
cmps
push
in
lds
loop
ror
cmp
fldcw
retf
lods
int
out
aam
pop
jno
ficom
adc
sub
iret
push
pop
xor
pop
ja
(bad)
inc
(bad)
push
maxps
lds
push
out
push
xchg
loopne
retf
or
dec
cmps
pop
out
lds
test
pop
out
lds
mov
leave
push
std
dec
xchg
pop
out
lds
jbe
retf
test
push
out
adc
and
mov
fbstp
dec
pop
std
dec
or
lds
(bad)
cli
ror
lds
push
jns
into
pop
(bad)
ror
dec
pop
popa
and
cli
dec
ret
pop
popa
call
fcomp
cmp
leave
push
std
jnp
fst
leave
push
cmp
popf
aaa
test
rcr
cmp
mov
jns
shl
xor
push
lods
cli
dec
stos
pop
jns
push
divps
retf
ror
pop
pop
into
int3
fcomip
dec
push
movs
repnz
pop
jns
rcl
xlat
ror
add
pop
add
loopne
xor
push
movs
cli
push
into
(bad)
jmp
rcr
inc
jnp
or
cmps
lds
mov
rcl
lds
fnstenv
dec
mov
mov
maxps
lds
push
sbb
xchg
dec
aaa
or
test
jecxz
enter
lds
std
dec
out
push
out
lds
dec
arpl
dec
aam
(bad)
fcomp
jno
leave
push
std
jnp
loope
ror
(bad)
jmp
fidiv
rcl
inc
(bad)
push
into
fcmovnu
pop
or
adc
jns
into
push
stos
scas
retf
scas
dec
les
sbb
fistp
mov
shl
scas
push
sbb
or
loope
into
push
imul
pop
xlat
aas
leave
push
in
dec
les
retf
xor
mov
jecxz
mov
fsub
xchg
fcmove
into
dec
sbb
dec
pop
inc
jns
mov
lods
cli
cmp
fldcw
retf
ror
out
aam
push
adc
fst
leave
push
cmp
popf
cmp
sbb
cdq
jno
(bad)
pop
fstp
(bad)
fcmovnu
pop
or
adc
push
cmp
shl
cmp
sar
rcl
push
call
dec
lods
jbe
dec
int3
pop
out
vpsraw
int
sub
leave
push
jno
mov
arpl
dec
push
out
aam
cs
vpsraw
push
fwait
jbe
mov
and
into
loopne
lds
inc
arpl
xchg
lds
in
sahf
leave
int
push
adc
sub
push
mov
mov
out
(bad)
jnp
sahf
test
adc
test
mov
int
dec
stos
jbe
scas
iret
fxch
in
push
out
(bad)
mov
mov
cmps
ds
mov
int
dec
cmovnp
cmp
dec
sbb
dec
inc
dec
out
aam
cli
out
(bad)
in
cmp
int3
faddp
aas
inc
(bad)
mov
push
out
dec
mov
xchg
fisubr
or
sbb
out
push
maxps
cmp
fbstp
push
pushf
cli
dec
adc
or
loopne
retf
sbb
and
or
push
cmovg
(bad)
ds
leave
push
jno
(bad)
(bad)
(bad)
fcomp
(bad)
(bad)
leave
push
jno
ficom
lds
(bad)
dec
rcl
push
adc
in
pushf
jmp
pop
jns
out
jns
(bad)
fbstp
rcl
dec
pop
dec
sub
adc
push
adc
ins
fmulp
fbstp
mov
fisttp
leave
push
jno
leave
aas
xor
leave
push
jns
rcr
out
xchg
mov
retf
out
pushf
cli
dec
mov
nop
pop
test
loop
jo
retf
into
push
popf
push
push
packsswb
out
xor
push
sahf
repnz
lea
jmp
adc
or
loopne
cli
mov
out
vpsraw
into
push
popf
push
push
packsswb
out
xor
push
sahf
repnz
loope
into
push
popf
push
push
packsswb
out
push
retf
mov
aas
addr16
push
jbe
or
loope
mov
and
pop
test
loop
outs
push
retf
lds
in
cmp
dec
aam
ret
and
cli
les
in
sbb
nop
pop
test
loop
outs
push
retf
out
pushf
cli
das
(bad)
loopne
loop
pushf
jmp
pop
inc
dec
jmp
loope
mov
pop
imul
dec
sbb
scas
(bad)
push
out
lds
ret
aas
pop
mov
rcl
lds
les
dec
ja
jmp
push
rcpps
into
loope
icebp
rcr
or
or
loopne
cli
mov
out
vpsraw
into
xor
or
loope
rcl
or
push
ja
into
loope
icebp
rcr
or
or
loopne
cli
mov
out
(bad)
hlt
int3
leave
push
out
les
addr16
ret
cli
and
out
push
sbb
cmp
push
movs
out
out
loope
into
push
movs
push
push
pop
arpl
out
cmp
push
cmps
repnz
xchg
cmp
jmp
movs
out
sbb
hlt
int
push
out
push
maxps
push
popf
push
push
packsswb
out
xor
push
sahf
repnz
lea
xor
dec
adc
imul
enter
push
pushf
cli
dec
adc
or
loopne
retf
sbb
push
jbe
or
loope
mov
and
inc
fxch
push
jno
(bad)
mov
and
push
dec
loope
push
mov
or
loop
push
sub
or
jecxz
push
cmps
in
push
xchg
or
out
push
pop
out
push
inc
push
ds
sbb
rcl
shl
push
inc
sbb
leave
push
gs
enter
and
cmp
enter
leave
int
lds
jnp
mov
mov
push
mov
xor
xor
(bad)
enter
sbb
mov
fld
into
dec
ja
dec
adc
adc
fidiv
xlat
push
movs
dec
imul
fbstp
fisub
sbb
mov
fcmovu
sbb
jns
(bad)
lods
jns
shl
hlt
dec
rcpps
into
loope
cli
push
pushf
out
adc
and
push
sahf
or
pop
jns
cli
xchg
mov
push
mov
jns
test
ror
aam
jo
vandnpd
push
sub
mov
out
vpcmpgtw
retf
dec
inc
dec
clc
aam
fsubrp
vpsraw
rcr
loopne
out
pushf
test
jns
ret
retf
jmp
pop
out
adc
fild
enter
jg
inc
cmp
call
leave
fbstp
(bad)
push
pop
ja
(bad)
loop
retf
and
dec
jns
jmp
push
adc
or
loope
test
retf
hlt
sbb
mov
loope
repnz
sbb
ficom
or
addr16
mov
stos
pop
jno
rcr
stc
scas
sbb
in
(bad)
xor
push
call
rcr
out
push
or
leave
push
dec
inc
dec
out
aam
mov
vpsraw
ret
test
out
les
dec
std
jnp
sub
iret
push
arpl
or
fidiv
into
rol
push
into
fcmovnu
pop
or
adc
jns
rcl
scas
dec
cmovae
jnp
pop
std
jnp
pop
pop
or
loope
mov
(bad)
cli
aam
pop
jae
push
movs
(bad)
cmp
loope
retf
hlt
vorpd
shl
xor
leave
loop
scas
rcr
cmp
fxch
aad
mov
ja
into
sbb
out
mov
dec
scas
push
(bad)
(bad)
(bad)
leave
push
in
jmp
mov
pop
out
(bad)
mov
or
leave
push
dec
inc
dec
out
aam
or
vpsraw
ret
test
out
les
dec
std
jnp
sub
iret
push
arpl
or
fidiv
into
rol
push
into
fcmovnu
pop
or
adc
jns
rcl
push
shl
push
xor
push
sbb
or
movs
or
fbstp
rcl
dec
or
(bad)
xor
cmp
jno
ret
dec
and
lds
push
pop
pop
jno
ficom
adc
data16
(bad)
pushf
aaa
test
dec
pushf
test
daa
jns
dec
inc
add
loope
into
in
fwait
cli
push
into
pop
ja
mov
movs
push
retf
movs
push
retf
jg
into
push
pushf
ficomp
ror
cmp
fistp
into
push
xchg
repnz
or
push
out
lds
dec
scas
push
(bad)
and
leave
push
ja
(bad)
loope
retf
mov
or
push
in
push
or
leave
push
dec
inc
dec
out
aam
and
vpsraw
ret
test
out
les
dec
std
jnp
sub
iret
push
arpl
or
fidiv
into
rol
push
into
fcmovnu
pop
or
adc
jns
rcl
push
shl
push
xor
push
sbb
or
loope
out
push
and
mov
cli
add
sbb
repnz
or
xor
into
push
jns
mov
push
out
dec
mov
dec
retf
push
adc
fidivr
call
cmps
push
add
xchg
mov
push
mov
jns
mov
int3
dec
lds
addr16
(bad)
lods
inc
scas
aaa
data16
lds
dec
packuswb
cli
fnstenv
or
lahf
fxch
push
sahf
sbb
mov
cmp
add
jbe
adc
add
sub
xchg
cmp
inc
clc
push
cmova
mov
fsubr
vpsraw
mov
mov
jbe
or
mov
loop
mov
pushf
loop
sbb
push
dec
pop
inc
in
adc
gs
leave
push
in
dec
in
push
xlat
xor
mov
dec
retf
push
adc
fidivr
call
cmps
push
add
xchg
mov
push
mov
jns
mov
int3
dec
lds
addr16
(bad)
lods
inc
scas
ja
out
lds
dec
packuswb
cli
fnstenv
or
lahf
fxch
push
sahf
sbb
mov
cmp
add
jbe
adc
add
sub
xchg
cmp
inc
clc
push
cmova
mov
fsubr
into
dec
mov
xor
push
pushf
loop
and
pushf
cli
dec
adc
or
fbstp
lds
out
lds
xchg
out
push
packsswb
push
sahf
push
push
maxps
out
xor
rcpps
cmc
fs
retf
dec
and
out
mov
pop
out
(bad)
xor
adc
cs
mov
jns
(bad)
fbstp
dec
adc
or
loopne
retf
jmp
fs
retf
dec
and
out
dec
inc
pop
cmc
cmp
fstp
rcl
mov
aas
addr16
(bad)
lods
inc
scas
jnp
out
lds
dec
mov
sbb
pop
arpl
dec
sbb
adc
fistp
dec
sbb
adc
loop
icebp
out
cld
(bad)
daa
pop
ja
inc
(bad)
int
out
vpsraw
shl
pop
ja
jmp
push
cmovg
into
loope
ret
sbb
push
pop
out
adc
fild
mov
jns
(bad)
shr
adc
or
fbstp
dec
adc
or
loop
icebp
xlat
fcomip
(bad)
pop
pop
ja
(bad)
lods
inc
scas
mul
lds
and
mov
mov
jns
(bad)
xchg
jp
(bad)
cmp
(bad)
xchg
jnp
(bad)
and
jo
cs
bound
(bad)
jle
cs
sar
(bad)
push
jle
(bad)
enter
push
fwait
adc
enter
sbb
pop
lea
sbb
loop
loop
loop
ficom
adc
push
scas
or
dec
jns
into
fistp
loop
pushf
jmp
pop
sbb
adc
ficom
pop
jns
dec
inc
add
fbstp
mov
pushf
cli
push
into
fcmovnu
pop
or
or
outs
jns
ret
ret
std
jnp
sub
shl
sbb
mov
loop
mov
movs
(bad)
call
(bad)
dec
pop
arpl
(bad)
(bad)
fcomp
push
(bad)
leave
push
shl
daa
jns
(bad)
dec
scas
(bad)
ds
xchg
data16
retf
push
out
push
(bad)
jecxz
pop
or
xchg
int
repnz
into
push
std
jnp
fistp
ror
(bad)
pop
arpl
push
inc
add
jns
leave
adc
adc
inc
sbb
daa
pop
popa
jecxz
pushf
out
pop
push
jns
dec
sbb
aam
push
shl
(bad)
aad
cmp
xor
mov
loop
in
xchg
or
(bad)
pushf
(bad)
not
jg
out
lock
mov
data16
retf
push
(bad)
repz
push
adc
rcr
retf
or
jg
out
cwde
aaa
pop
ja
(bad)
cmp
ficom
lds
push
std
jnp
loop
cdq
mov
imul
pushf
out
mov
stos
push
arpl
push
inc
outs
adc
rol
jns
mov
sahf
push
dec
pop
arpl
popf
(bad)
not
jae
mov
loope
loop
sbb
or
loopne
dec
jecxz
inc
(bad)
or
jno
mov
fwait
or
push
arpl
push
sahf
sbb
mov
cli
cmp
jg
mov
rcl
loop
push
cmp
push
bound
push
sahf
push
push
pop
jae
ficom
das
push
leave
movs
loop
mov
movs
or
jg
out
dec
or
xchg
push
movs
or
(bad)
in
adc
inc
lock
leave
push
pusha
clc
dec
aam
sar
adc
(bad)
push
in
push
sbb
mov
mov
ss
or
scas
int
scas
cmp
loope
push
inc
outs
jns
rcr
in
lds
loope
icebp
push
push
scas
scas
int
scas
cmp
loope
dec
das
arpl
mov
dec
scas
out
jno
adc
loope
icebp
push
push
scas
scas
int
scas
cmp
loope
lea
arpl
vorpd
in
movs
repnz
mov
push
es
xchg
out
xchg
pop
jns
xchg
pushf
cli
ret
in
push
cmovg
jmp
leave
hlt
sub
out
inc
ret
ja
into
loope
icebp
xlat
fcomip
push
(bad)
out
adc
fbstp
and
mov
mov
adc
cld
sub
mov
mov
out
mov
push
(bad)
ds
push
cmps
push
push
cmp
mov
dec
cmp
cs
mov
lds
cli
clc
mov
mov
push
retf
adc
dec
dec
(bad)
not
dec
mov
pop
dec
dec
jnp
cmp
loope
fimul
(bad)
iret
pop
cmps
(bad)
popa
rcl
and
loop
int
lds
jnp
sub
push
inc
pop
std
push
dec
mov
xor
aad
inc
sbb
(bad)
rol
push
js
add
or
dec
mov
lds
loop
data16
retf
push
ds
add
int3
cmc
das
enter
leave
push
daa
inc
jmp
or
inc
and
retf
out
add
adc
rcr
cs
xor
(bad)
and
in
cmp
push
inc
out
sbb
add
pop
pop
ret
jns
out
push
ds
xor
add
ja
(bad)
shl
push
adc
lahf
push
scas
cli
dec
ret
pop
push
dec
push
std
inc
adc
cmp
(bad)
xor
push
xchg
cli
mov
shl
(bad)
fst
sbb
out
mov
push
cwde
add
jae
ds
cld
das
(bad)
mov
scas
mov
loop
mov
lods
(bad)
outs
enter
std
push
fxch
xor
stos
xor
inc
and
ds
les
jnp
das
fst
jmp
jno
ficomp
inc
push
mov
inc
push
aas
pop
and
dec
push
lock
xor
fcomp
in
leave
push
daa
int3
fcomp
fmul
leave
push
jno
(bad)
pop
pop
shl
ja
(bad)
sar
push
popf
or
xchg
mov
vandnpd
push
aad
cs
push
movs
repnz
xchg
data16
retf
push
out
push
leave
popf
test
jns
push
mov
aam
pusha
ja
into
loope
loop
lahf
repnz
stos
in
int3
dec
push
idiv
(bad)
lea
outs
(bad)
dec
or
or
sbb
out
lds
xlat
retf
test
rcl
mov
loop
jo
retf
(bad)
retf
vpsraw
dec
pop
std
dec
push
pop
out
lds
or
adc
int3
push
movs
not
jae
in
or
push
std
sub
push
cwde
xacquire
dec
in
pushf
retf
or
xlat
loope
into
sub
daa
push
adc
or
add
retf
retf
out
lds
dec
mov
fcomp
sub
leave
push
jns
rcr
out
scas
out
in
lds
ds
mov
push
jns
dec
sbb
dec
lds
push
popf
or
loop
loop
mov
lds
fmul
cmp
loope
ror
aam
dec
out
vpsraw
push
mov
push
adc
sbb
mov
lds
or
arpl
(bad)
push
(bad)
nop
push
cli
vorpd
xchg
push
in
(bad)
retf
vpsraw
dec
pop
std
dec
adc
adc
into
push
movs
or
pop
jns
push
mov
aam
push
scas
cmps
loop
das
into
push
popf
or
rcr
out
push
adc
xchg
fidiv
leave
push
jns
adc
into
push
popf
repnz
pusha
jns
out
dec
ror
pop
jns
out
hlt
mov
pusha
out
vpsraw
dec
pop
bound
pop
ja
into
movs
iret
push
popf
or
arpl
into
push
popf
or
rcr
out
push
adc
xchg
mov
adc
into
push
popf
repnz
pusha
jns
out
dec
ror
sahf
not
jae
int3
push
lahf
repnz
pop
std
dec
mov
out
lds
mov
loop
jo
retf
(bad)
leave
push
jns
mov
out
vpsraw
push
mov
mov
pop
out
vpsraw
dec
pop
bound
movs
or
pop
jns
push
mov
aam
push
scas
cmps
loop
das
into
push
popf
or
rcr
out
push
adc
xchg
adc
adc
into
push
popf
repnz
pusha
jns
out
dec
ror
pop
jns
out
hlt
mov
pop
out
vpsraw
dec
pop
bound
gs
pop
ja
into
movs
iret
push
popf
or
arpl
into
push
popf
or
rcr
out
push
adc
xchg
ficom
leave
push
jns
adc
into
push
popf
repnz
pusha
jns
out
lock
adc
or
push
hlt
push
adc
adc
sbb
out
mov
loope
loop
(bad)
jns
out
xor
dec
fldcw
(bad)
dec
mov
lds
push
inc
and
push
popf
or
leave
shr
mov
jmp
mov
sbb
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
push
retf
mov
ficom
retf
cmp
shl
fst
out
enter
mov
or
fld
push
mov
inc
push
push
pushf
jmp
arpl
cmp
shr
retf
xor
push
arpl
mov
out
vpsraw
dec
mov
rol
test
push
jmp
ror
cmp
shr
adc
pop
or
lds
outs
in
cmp
push
inc
jmp
mov
pop
loop
inc
mov
out
vpsraw
into
sbb
inc
push
inc
arpl
cwde
push
lods
jp
pop
out
sbb
inc
pop
push
lods
mov
div
outs
loopne
outs
push
lods
call
loopne
jle
lods
stos
dec
pop
pop
ja
mov
inc
mov
jns
dec
sbb
les
fdivr
push
fdivr
aas
inc
daa
inc
push
int3
call
jae
(bad)
push
pushf
push
dec
fimul
mov
push
aam
xor
mov
or
and
out
addr16
or
scas
retf
std
cmp
push
popa
leave
push
movs
push
xor
jecxz
mov
nop
add
rcr
mov
mov
pushf
(bad)
cmp
fbstp
out
int3
push
cdq
lods
xchg
mov
add
add
ds
icebp
out
jbe
retf
push
dec
sbb
mov
mov
pop
jns
jmp
jnp
jmp
sbb
push
gs
vmulpd
dec
pop
cmps
in
vpavgb
stc
xchg
lahf
(bad)
frndint
push
icebp
adc
out
(bad)
into
sahf
ja
pop
cmps
in
(bad)
fst
pop
and
push
pop
jno
into
xchg
mov
jecxz
jp
push
push
in
lds
sbb
fdivr
vorpd
push
cwde
ja
cld
sub
sahf
push
(bad)
adc
push
in
push
daa
ja
adc
push
ja
(bad)
loope
repnz
lods
loop
cmova
(bad)
dec
leave
add
aas
ja
push
push
in
lds
inc
leave
push
ja
scas
loopne
into
fsub
in
(bad)
leave
push
jns
cmps
in
lds
jae
push
movs
ret
aaa
jns
stos
loop
push
xchg
lahf
jae
push
pushf
fcmovbe
dec
sbb
vpsraw
out
sbb
or
data16
retf
push
pop
ja
or
pop
scas
leave
mov
pushf
(bad)
icebp
mov
fs
push
movs
not
push
jns
mov
out
lock
scas
shl
loope
cmps
dec
and
icebp
push
inc
icebp
xchg
xchg
sub
ror
add
mov
daa
into
add
fdiv
mov
or
shr
push
push
shr
outs
les
out
(bad)
pop
(bad)
leave
push
jns
out
jecxz
xchg
out
(bad)
jnp
pop
addr16
vpavgb
push
movq
push
pushf
out
mov
and
dec
jns
scas
loopne
dec
push
push
in
lds
push
dec
pop
das
jns
push
pushf
(bad)
icebp
xchg
loop
cdq
mov
cmp
push
lods
(bad)
icebp
ret
leave
hlt
dec
ja
mov
push
into
inc
not
jae
adc
and
or
data16
enter
fwait
loope
ret
cli
out
mov
xor
(bad)
fidivr
mov
sbb
sahf
mov
push
retf
(bad)
cmp
sub
retf
push
ret
inc
stos
imul
sub
cmp
(bad)
cmp
mov
lock
(bad)
pop
outs
xchg
fistp
sahf
push
movs
add
pop
jno
mov
loop
mov
sub
aam
xchg
sub
add
pop
popa
in
movs
rcl
pop
jns
mov
loope
xchg
mov
mov
sub
sahf
shr
popf
aaa
jns
mov
mov
stc
xchg
loop
mov
dec
fdivr
vorpd
push
and
movs
adc
mov
push
cmp
es
lods
push
pushf
fcmovb
pop
inc
jae
(bad)
sub
leave
push
in
or
fidiv
cmps
into
loope
ret
ret
aas
std
push
fcom
add
vpminub
retf
gs
(bad)
push
in
xor
scas
xlat
mov
mov
push
inc
aas
dec
das
push
out
sbb
push
xor
mov
in
cmp
push
inc
out
sbb
dec
movq
aas
pop
pop
ret
ret
(bad)
leave
push
inc
sbb
sbb
dec
into
enter
retf
push
out
(bad)
add
aas
jae
dec
cmp
cs
and
or
leave
push
jno
repnz
fimul
cmp
arpl
push
pushf
jmp
jnp
retf
arpl
enter
inc
leave
cs
xor
push
retf
les
arpl
scas
stos
push
in
lds
push
dec
mov
(bad)
push
movq
leave
retf
repnz
inc
aaa
dec
ret
iret
nop
popf
push
xchg
pop
xchg
out
mov
(bad)
sar
mov
loop
add
inc
push
dec
ret
in
nop
popf
push
push
pop
xchg
out
mov
(bad)
ret
aas
pusha
mov
loop
add
inc
std
dec
ret
rcl
xchg
out
das
(bad)
scas
jns
leave
int3
push
lds
in
sbb
scas
jns
and
jns
out
pop
jns
rcr
(bad)
push
pop
jns
out
pop
jns
vucomisd
push
pop
jns
out
bound
(bad)
push
fwait
adc
nop
push
out
pop
or
xchg
stos
inc
push
aas
pop
inc
push
inc
arpl
cli
loope
cli
push
sahf
cli
add
movs
cli
cmp
loope
repnz
sahf
(bad)
lock
loope
dec
movs
retf
clc
dec
inc
addr16
(bad)
leave
push
dec
(bad)
sbb
(bad)
xor
dec
pop
(bad)
fstp
in
cmp
push
mov
or
fidiv
sbb
push
arpl
mov
lock
push
popf
sbb
es
jno
(bad)
(bad)
xor
ds
adc
(bad)
xor
push
movs
cli
cmp
fistp
push
mov
push
adc
lahf
add
das
jae
ds
jno
ficom
retf
inc
retf
icebp
mov
xor
dec
mov
add
sbb
add
daa
jns
(bad)
fbstp
dec
sbb
dec
adc
jmp
mov
dec
mov
and
loope
ret
cli
push
packsswb
cli
loope
(bad)
sub
jns
dec
inc
es
packuswb
arpl
xchg
loop
fimul
(bad)
push
pushf
mov
sub
loop
sbb
pushf
(bad)
xor
in
mov
shl
retf
out
push
in
dec
mov
xchg
xchg
jnp
xchg
shl
mov
in
leave
loop
pop
dec
push
out
push
outs
jnp
xchg
cmps
(bad)
call
arpl
xor
mov
loope
mov
loope
mov
xchg
cmps
(bad)
jle
push
in
pop
sub
adc
enter
mov
repnz
inc
mov
retf
adc
mov
repz
mov
xchg
and
push
inc
jnp
mov
in
jmp
jns
out
pop
inc
mov
leave
retf
retf
xchg
jb
ds
in
int
out
lds
dec
jns
adc
dec
pop
mov
mov
repnz
retf
inc
ds
jns
(bad)
fld
cmp
(bad)
out
vxorps
jb
out
(bad)
lock
in
lds
inc
not
push
fxch
push
shr
push
push
jnp
mov
leave
retf
fist
jbe
adc
leave
leave
push
out
cmp
fnstenv
les
out
enter
(bad)
jns
dec
sbb
outs
retf
inc
cmp
mov
ds
mov
push
in
(bad)
cmp
push
out
les
pop
(bad)
out
pop
dec
mov
loopne
push
push
jnp
mov
pop
out
and
mov
adc
sub
jbe
push
fwait
adc
sub
in
cmp
pop
(bad)
bswap
push
out
push
lea
mov
adc
pop
in
int
out
lds
fld
leave
leave
push
out
cmp
push
jns
adc
dec
pop
mov
mov
repnz
retf
inc
ds
jns
(bad)
fld
cmp
(bad)
out
vxorps
jb
out
(bad)
lock
in
lds
adc
hlt
pop
mov
or
adc
pop
sbb
push
mov
mov
or
adc
pop
sbb
ds
lods
push
pop
out
lds
mov
xchg
xchg
and
push
mov
inc
push
aas
arpl
(bad)
imul
sbb
int
sub
inc
pop
sub
leave
push
in
int
out
lds
imul
dec
push
div
repz
xchg
(bad)
(bad)
dec
push
jns
test
vpsubusw
retf
jno
int
mov
out
fucomi
dec
push
in
jmp
in
jmp
(bad)
dec
push
sub
or
dec
push
adc
push
popf
out
dec
adc
or
pop
xlat
enter
dec
nop
pop
jno
int
out
cmp
loope
leave
jnp
scas
add
adc
push
popf
out
xchg
fnstenv
ret
pop
pusha
ins
mov
aas
daa
push
retf
xchg
push
pop
jbe
(bad)
xlat
enter
into
cmp
loope
leave
jnp
scas
add
int
or
dec
push
mov
or
dec
push
mov
dec
push
xchg
dec
push
mov
or
or
ja
pop
cmp
pop
aas
ja
pop
aas
jns
pop
inc
ja
pop
inc
jns
pop
inc
ja
pop
inc
jns
pop
dec
ja
pop
dec
jns
pop
dec
ja
pop
dec
jns
pop
push
ja
pop
push
jnp
push
push
out
vmulpd
leave
rcl
mov
cs
push
push
out
or
dec
push
cli
dec
push
push
add
push
jns
shl
int3
push
pop
jns
shl
int3
push
pop
js
retf
fidiv
and
and
int3
push
pop
js
retf
fidiv
dec
adc
or
mov
(bad)
(bad)
out
cmp
push
jnp
add
(bad)
int
out
lds
jnp
scas
int3
fnop
leave
dec
push
div
xlat
push
loope
(bad)
push
adc
xchg
cs
push
push
in
leave
jnp
test
push
adc
lea
out
cmp
cmps
int
mov
out
(bad)
or
jmp
xchg
or
add
push
into
add
push
js
int
mov
xchg
pop
pusha
jl
dec
xchg
ret
add
out
push
adc
or
jns
dec
adc
or
pop
xlat
enter
dec
mov
(bad)
into
cmp
jmp
outs
push
in
jmp
js
int
mov
or
fidiv
xchg
(bad)
leave
dec
inc
icebp
dec
ret
pop
std
inc
and
in
(bad)
xchg
ret
add
out
push
adc
add
push
sub
or
add
push
cmp
or
add
push
dec
add
push
push
add
push
add
push
jns
pop
jae
or
jns
pop
outs
ja
pop
outs
jns
pop
imul
imul
addr16
pop
addr16
pop
arpl
pop
arpl
pop
pop
ja
pop
pop
jns
pop
pop
ja
pop
pop
jnp
push
push
out
vmulpd
leave
rcl
dec
xchg
cs
push
push
jle
or
add
push
xchg
add
push
stos
add
push
jns
shl
or
fidiv
and
and
or
fidiv
dec
adc
or
mov
(bad)
(bad)
out
or
fidiv
dec
adc
or
fidiv
and
and
jmp
add
aaa
jns
inc
fs
aas
pop
pop
(bad)
daa
fidiv
enter
inc
sub
mov
scas
inc
pop
out
lds
dec
leave
int3
sbb
pop
in
sti
sbb
cs
enter
or
mov
dec
xchg
ds
or
cmp
lods
(bad)
sub
push
out
dec
mov
inc
xor
lods
(bad)
ror
out
dec
mov
lea
mov
mov
push
fnstcw
rcr
in
out
lods
(bad)
xchg
int3
push
out
push
dec
pop
inc
cmp
cmps
(bad)
mov
push
out
push
and
and
imul
mov
push
inc
pop
lds
inc
pusha
push
retf
push
or
addr16
lds
mov
out
lds
sbb
scas
ja
mov
add
cmp
ret
ret
retf
inc
stos
push
out
vpandn
sub
stos
pop
icebp
(bad)
push
fs
pusha
or
scas
(bad)
dec
pusha
or
mov
leave
push
inc
dec
mov
imul
out
sahf
(bad)
leave
push
inc
dec
aas
push
(bad)
pop
fist
(bad)
fistp
inc
or
fstp
push
out
push
mov
sti
(bad)
lock
push
(bad)
in
push
out
dec
aas
daa
jnp
outs
cmps
in
fisttp
(bad)
cs
mov
cli
vpandn
(bad)
rcr
(bad)
fxch
xor
push
leave
int3
mov
push
add
cmp
mov
loopne
data16
sti
iret
leave
push
jns
mov
not
fistp
pop
sbb
out
push
and
jns
mov
arpl
push
test
fs
out
(bad)
ds
(bad)
or
ds
lods
inc
imul
xor
vandnpd
xchg
pop
xchg
out
push
and
jno
adc
cs
retf
lods
in
push
(bad)
adc
mov
add
leave
scas
push
vorps
(bad)
fbld
in
sti
sbb
cs
enter
mov
out
(bad)
inc
mov
adc
test
jnp
lods
out
out
lds
inc
cmp
(bad)
xor
ror
inc
ds
lods
ins
push
out
lds
inc
cmp
loop
jmp
out
cmp
lods
(bad)
cmp
push
out
dec
mov
arpl
xor
dec
nop
data16
mov
mov
or
(bad)
(bad)
cs
daa
sbb
xchg
xchg
and
sbb
bound
out
pop
jae
ds
and
and
out
les
repz
cmps
int
div
call
push
xchg
sbb
into
int3
pop
jns
mov
dec
mov
mov
scas
int3
retf
jne
sar
fdivp
or
int3
call
and
loop
jmp
out
dec
mov
std
les
jnp
les
pop
pop
(bad)
and
and
retf
jmp
std
pop
mov
cs
dec
pop
xchg
push
imul
jae
aas
in
sti
sbb
cs
enter
or
xchg
mov
pop
(bad)
enter
or
(bad)
(bad)
cs
dec
pop
xchg
adc
out
cmp
sbb
or
fst
push
imul
out
mov
mov
(bad)
mov
adc
cs
push
arpl
push
imul
(bad)
push
arpl
mov
add
jnp
lock
ror
inc
cmp
xchg
inc
(bad)
stc
mov
inc
push
mov
fcmovu
push
lods
cli
push
pop
pop
inc
sbb
cwde
(bad)
push
mov
mov
dec
mov
xchg
shr
das
xchg
pop
lock
ja
(bad)
in
(bad)
or
mov
dec
pop
inc
jns
fmul
push
movs
out
dec
sbb
retf
aaa
and
cdq
int
dec
inc
arpl
fstp
adc
pop
arpl
push
movs
cli
dec
ret
ja
loop
push
out
lds
fst
pop
repnz
push
push
idiv
cmc
loope
into
jmp
test
push
out
inc
popf
inc
jns
(bad)
jecxz
(bad)
int
(bad)
pop
mov
leave
push
in
iret
ds
jns
shl
retf
add
push
rol
retf
repnz
push
push
push
inc
push
enter
aas
rcr
dec
mov
into
movs
jno
or
icebp
das
or
iret
(bad)
push
movs
fcmovbe
dec
imul
(bad)
inc
ret
jmp
lods
out
and
mov
retf
push
lods
cli
push
xchg
pop
dec
ret
ja
mov
xchg
call
add
dec
jns
into
xchg
aas
into
ds
jns
(bad)
(bad)
out
jae
(bad)
leave
push
outs
cdq
mov
cmp
int
shl
pop
xor
ror
sbb
pop
(bad)
mov
jno
stos
adc
vmovq
mov
movs
cli
push
push
pop
repnz
mov
(bad)
arpl
push
movs
mul
sbb
adc
loop
into
push
mov
jns
ret
retf
test
jns
ret
mov
retf
idiv
inc
arpl
dec
push
push
out
lds
push
(bad)
dec
jns
into
fistp
retf
ficom
dec
ja
rcr
aas
retf
repnz
sbb
adc
xchg
cmp
ds
jno
jmp
adc
pop
popa
jmp
aam
lds
gs
push
cdq
sub
push
pop
pop
neg
test
lds
mov
jbe
pusha
push
mov
(bad)
imul
retf
(bad)
push
sbb
test
cdq
mov
cmp
shr
lods
(bad)
leave
push
outs
cdq
mov
push
out
(bad)
jns
mov
jno
and
push
in
into
fcomp
call
or
out
dec
mov
movs
retf
push
xlat
xchg
lea
retf
push
cmp
icebp
or
retf
(bad)
or
sbb
push
lds
xchg
lea
retf
or
(bad)
leave
push
outs
cdq
mov
ds
push
lea
retf
add
out
push
or
push
sbb
vorpd
push
or
push
or
push
jns
fcmovbe
addr16
retf
test
imul
(bad)
dec
iret
test
ret
inc
xor
push
pop
ror
cs
out
les
addr16
(bad)
enter
or
fild
(bad)
cs
push
lea
retf
adc
out
push
into
(bad)
scas
cmps
int3
loope
addr16
imul
(bad)
hlt
push
jnp
fild
push
adc
push
mov
inc
leave
loope
into
dec
sbb
(bad)
xlat
sahf
lea
retf
or
out
cmp
(bad)
ficom
or
ror
imul
(bad)
mov
jns
sar
xor
push
ja
add
mov
(bad)
lea
addr16
cs
push
ins
cmp
push
inc
sbb
pop
outs
sbb
maxps
(bad)
in
fisttp
dec
pop
inc
scas
mov
jmp
mov
movs
out
push
int3
loop
fcmovu
scas
cmps
dec
pop
in
stc
mov
dec
ja
ret
or
sahf
add
leave
pop
push
adc
mov
mov
fiadd
jmp
mov
cmp
enter
dec
into
cmp
jns
into
loope
jmp
aad
arpl
dec
sbb
mov
xchg
(bad)
cmp
xchg
dec
ret
jno
rcl
into
dec
sbb
dec
daa
pop
fnstenv
lock
add
fs
rcl
retf
dec
sbb
mov
xchg
(bad)
cmp
ds
sahf
dec
xor
ror
add
mov
lock
jns
fcmovu
out
push
or
int3
cmc
clc
mov
(bad)
leave
push
ja
or
cs
push
call
push
lods
jmp
push
out
lds
or
mov
mov
mov
push
out
push
cmp
arpl
push
lahf
xor
lahf
loop
mov
dec
push
out
(bad)
jmp
loope
jmp
mov
inc
ret
and
xor
repnz
leave
push
jnp
retf
call
push
mov
arpl
push
jecxz
mov
push
out
das
jmp
inc
iret
daa
iret
or
mov
loope
lock
inc
jns
push
movs
out
enter
enter
xor
jb
retf
push
adc
sub
ror
dec
dec
leave
ja
icebp
test
lds
mov
ret
es
ja
mov
dec
dec
push
loopne
dec
push
push
std
cmp
loop
into
push
movs
(bad)
aam
pop
push
sbb
test
cdq
mov
cmp
push
shl
retf
jbe
retf
mov
(bad)
dec
mov
bound
shl
cmp
int
dec
into
push
mov
jno
ret
aas
into
loope
retf
test
std
dec
pop
push
out
lds
push
inc
dec
repnz
(bad)
inc
ja
into
fistp
into
push
test
push
adc
ja
shl
cmp
add
idiv
cs
int3
int
in
out
movs
stc
inc
repz
scas
inc
inc
(bad)
out
dec
push
pop
repnz
adc
jns
popf
inc
test
dec
loop
cdq
mov
shl
mov
in
xchg
stc
lds
hlt
leave
ds
stos
push
out
vmovq
mov
shl
push
pop
push
jnp
push
sbb
vpavgw
mov
lds
fmul
add
cmp
push
popa
ja
fist
leave
push
movs
out
aas
inc
icebp
xchg
push
movs
out
dec
aam
cmp
(bad)
mov
push
shr
dec
or
or
out
lea
retf
push
pop
push
sub
add
pop
jno
or
loope
ret
jnp
into
mov
and
xchg
out
push
xlat
mov
stc
enter
cli
jecxz
dec
sbb
into
enter
adc
out
sbb
mov
or
fld
(bad)
mov
daa
dec
pop
es
push
push
lea
retf
adc
out
sub
xor
retf
and
imul
mov
or
retf
into
mov
push
(bad)
leave
data16
sbb
ins
dec
or
lea
cli
cmp
push
fs
and
push
imul
scas
mov
fnstcw
enter
dec
pop
in
retf
adc
cs
push
popf
dec
push
jns
sub
aas
push
pop
pop
inc
sbb
loop
(bad)
push
cwde
idiv
movs
fsubr
or
xchg
push
xchg
pop
out
lds
in
test
jmp
fldcw
push
vpslld
(bad)
mov
push
(bad)
dec
push
out
sbb
ins
dec
or
xchg
pop
jno
leave
inc
add
retf
lds
add
dec
dec
in
dec
push
inc
std
vandnpd
(bad)
data16
lds
push
out
dec
shl
jbe
mov
pop
mov
mov
out
lds
push
inc
leave
jecxz
mov
and
pushf
jmp
push
out
das
retf
mov
push
into
fild
into
push
mov
ja
into
fst
push
push
ja
push
loopne
or
xchg
jns
rcr
cmp
aas
pop
idiv
leave
(bad)
jns
popf
inc
in
jmp
not
mov
and
xchg
out
dec
mov
lock
push
push
into
dec
xchg
out
lods
cwde
push
out
lds
pop
outs
push
retf
inc
or
test
push
out
dec
mov
xor
shr
ds
lods
fist
lds
mov
pop
(bad)
enter
mov
out
vpsubusw
(bad)
sub
out
cmp
push
(bad)
jmp
out
adc
or
inc
out
(bad)
out
sbb
adc
push
xchg
xchg
push
jbe
pop
icebp
cs
ds
(bad)
imul
out
dec
mov
adc
or
(bad)
xchg
fidivr
fucom
hlt
dec
mov
lock
mov
or
mov
mov
push
fimul
out
lods
hlt
push
out
lds
mov
out
xchg
out
sub
mov
out
(bad)
inc
dec
movs
mov
(bad)
enter
push
xchg
mov
push
in
fist
sbb
jnp
add
jnp
cmp
loope
dec
mov
lock
inc
dec
mov
loop
sbb
int3
imul
dec
pop
inc
aad
ja
vpsraw
dec
xor
dec
fist
lds
cmp
(bad)
leave
shr
mov
out
vpsubusw
(bad)
fcomp
in
leave
push
jns
imul
not
arpl
imul
repnz
ret
pop
std
dec
xchg
push
out
lds
pop
or
fld
daa
inc
add
sbb
pop
xchg
out
dec
lock
jno
(bad)
mov
jns
xor
in
lds
ret
retf
(bad)
pop
add
out
test
arpl
(bad)
dec
push
out
lds
scas
cmp
sbb
out
dec
retf
mov
xchg
add
nop
pop
pop
pop
or
(bad)
leave
push
fscale
push
in
lds
ret
retf
(bad)
adc
pop
push
out
test
arpl
(bad)
dec
push
out
lds
scas
cmp
sbb
out
dec
retf
(bad)
inc
test
retf
les
in
cs
and
test
push
rcr
pushf
imul
icebp
cs
dec
pop
in
mov
push
arpl
enter
or
and
loope
sub
fidivr
add
lods
cmps
scas
pop
xchg
out
cmp
jecxz
xorps
out
dec
mov
mov
dec
jnp
adc
add
xchg
scas
cmp
(bad)
(bad)
cmp
mov
or
cmp
ds
push
jmp
hlt
add
retf
adc
pop
xor
in
retf
mov
call
jg
ds
jno
out
lds
inc
cmp
xchg
adc
xlat
pushf
fnop
add
xlat
sub
inc
push
js
dec
pop
(bad)
retf
fs
push
sbb
leave
jmp
jle
push
retf
cmp
ds
(bad)
leave
push
jns
or
cs
cld
push
js
add
(bad)
fadd
lods
(bad)
xchg
mov
in
pop
push
retf
hlt
(bad)
mov
jnp
xchg
(bad)
(bad)
xor
mov
mov
or
into
xor
aam
push
in
pop
push
xchg
cs
or
in
nop
inc
sbb
leave
loop
pop
(bad)
sub
scas
add
lds
retf
imul
sar
int
leave
push
inc
sbb
mov
in
pop
dec
sbb
es
and
call
mov
out
mov
retf
and
push
push
out
and
test
stc
movs
nop
or
push
int3
rep
jg
out
lds
mov
inc
sbb
ins
adc
or
sbb
out
dec
jmp
mov
retf
(bad)
loope
lock
ret
mov
sbb
out
vpsraw
mov
into
fidivr
scas
pusha
dec
in
lds
jno
loop
loope
rol
imul
and
xor
sbb
xor
push
pop
je
and
out
push
rcpps
ficomp
cs
sub
out
and
loop
ficom
sbb
fimul
(bad)
push
int3
(bad)
sbb
aam
mov
push
out
vpsraw
into
dec
push
(bad)
into
push
mov
into
fild
dec
(bad)
adc
push
loope
(bad)
or
call
cwde
ds
jnp
dec
jo
xchg
out
leave
cmp
dec
(bad)
int3
push
addr16
seta
(bad)
dec
dec
bound
cmovb
into
(bad)
adc
(bad)
es
or
retf
repz
fcmovu
add
push
addr16
xor
dec
retf
repz
int
cli
(bad)
retf
fnsetpm(287
cmp
loopne
dec
call
ja
iret
dec
sub
dec
push
idiv
xchg
fcmovnb
cmp
sahf
fxch
dec
dec
(bad)
retf
in
(bad)
dec
mov
out
aam
aaa
out
vpavgb
inc
les
retf
dec
push
idiv
int
fnstenv
dec
pop
out
vpand
cmp
fbld
inc
(bad)
loope
fcmove
pop
mov
rcl
(bad)
leave
inc
add
fnstcw
test
jl
lds
aam
cmp
(bad)
data16
jmp
ds
ds
jns
mov
ja
shl
imul
sub
sbb
or
loop
adc
(bad)
aam
fsub
cmp
sbb
and
push
out
adc
dec
js
dec
sub
dec
aam
(bad)
ds
outs
shr
sub
add
test
test
ds
jnp
dec
jno
xchg
out
leave
cmp
xchg
in
(bad)
push
addr16
cmovb
aam
sub
dec
retf
repz
int
icebp
add
or
vorpd
ds
outs
in
leave
pushf
in
(bad)
mov
in
vpaddusb
cmp
fst
and
sbb
pop
imul
push
retf
push
not
pop
push
retf
stc
movs
mov
stc
enter
std
push
ret
push
mov
sbb
out
(bad)
leave
push
out
mov
push
add
xchg
out
push
ret
aad
inc
out
(bad)
rep
gs
out
(bad)
leave
push
out
scas
pop
push
out
lds
aam
fsubr
(bad)
loope
(bad)
push
ret
push
mov
sbb
(bad)
daa
in
sbb
push
jmp
retf
out
or
sbb
push
mov
sbb
loopne
jmp
fnstcw
cld
stos
(bad)
leave
mov
mov
or
data16
jmp
leave
retf
adc
pop
stos
inc
lds
push
(bad)
jmp
inc
dec
es
push
es
sbb
ins
bound
or
mov
retf
cmp
(bad)
(bad)
(bad)
pop
push
retf
add
retf
sub
call
xchg
fidivr
push
cs
loope
in
nop
xchg
jns
pop
aas
mov
and
in
aad
inc
sbb
rcr
leave
fidiv
cmp
lock
mov
inc
mov
xor
pop
lods
inc
cs
lds
loop
pop
dec
dec
arpl
xor
sar
mov
or
retf
jmp
push
out
lds
out
(bad)
leave
push
sub
into
push
jno
enter
shl
push
or
mov
pop
out
(bad)
leave
push
fldcw
sbb
push
cmp
adc
retf
mov
push
out
push
push
jnp
dec
mov
jg
push
out
push
cli
jecxz
retf
test
xchg
ficom
test
push
inc
daa
sti
jmp
test
out
sub
mov
fadd
leave
fsubr
retf
jmp
fcomip
push
push
push
out
kmovb
retf
test
xchg
repz
push
data16
rcl
scas
(bad)
retf
mov
fidiv
or
xor
push
jae
dec
popf
jns
dec
dec
in
cmp
loope
(bad)
mov
dec
scas
into
bound
(bad)
pop
push
retf
cmp
loope
push
cdq
sbb
retf
dec
cmp
or
retf
stc
dec
shl
cmp
push
lahf
repnz
fidiv
cmp
(bad)
out
xchg
out
dec
push
das
in
push
(bad)
arpl
dec
xor
xor
mov
loope
push
shr
xchg
jecxz
leave
ins
jbe
or
mov
loope
in
fist
cs
dec
pop
(bad)
vpandn
ret
int3
dec
movs
repnz
int
clc
inc
sbb
mov
(bad)
cmp
dec
call
push
push
retf
dec
cmp
dec
dec
mov
inc
push
mov
inc
sbb
retf
push
or
cmp
ds
mov
stos
daa
sbb
out
pop
in
into
pop
out
(bad)
out
vorpd
push
fwait
adc
push
stos
adc
push
pop
cmps
leave
leave
push
out
mov
jnp
adc
sbb
out
vorpd
out
push
out
vpsraw
jmp
cli
dec
enter
add
adc
cmp
loop
js
mov
cli
dec
inc
or
lds
imul
push
or
lods
or
(bad)
mov
push
iret
push
out
vpsubusw
mov
push
push
push
xlat
push
out
(bad)
addr16
cs
ds
(bad)
loope
rol
test
cmp
push
out
vorpd
pop
or
rcr
test
push
pop
pop
ja
rcr
xor
push
ret
and
and
xchg
cli
xchg
mov
fcmove
sbb
inc
sbb
loop
rcl
mov
leave
push
std
dec
dec
push
out
lds
out
packuswb
(bad)
in
mov
cmp
fldlg2
lds
mov
push
into
push
bound
and
push
into
mov
push
daa
arpl
test
mov
push
shl
sbb
fidiv
sbb
push
jno
shl
cli
cmp
jns
pop
pop
(bad)
daa
leave
push
in
push
into
in
or
push
inc
push
shl
imul
(bad)
in
adc
leave
inc
or
push
out
lds
pop
lds
push
jno
shl
out
and
mov
push
scas
mov
sbb
adc
push
cmp
cmps
jns
loop
(bad)
aas
enter
mov
mov
push
(bad)
push
fs
out
dec
ret
ror
arpl
dec
xchg
ret
push
out
cmp
mov
(bad)
fmulp
push
out
data16
cs
and
scas
cmp
push
mov
lds
scas
mov
push
inc
outs
mov
pop
out
lds
clc
xchg
pcmpeqd
sub
cmp
xchg
sub
pusha
xchg
out
inc
mov
cmp
test
retf
loop
push
out
data16
cs
dec
dec
out
aam
aas
out
vpand
call
(bad)
push
outs
rol
out
(bad)
ffreep
leave
push
jnp
es
in
lds
pop
out
(bad)
pop
(bad)
enter
or
xchg
push
dec
es
in
lds
sub
retf
dec
scas
push
in
pop
and
jae
enter
sbb
stos
and
push
in
scas
cmp
mov
dec
mov
(bad)
(bad)
and
in
and
push
in
dec
mov
pop
leave
int3
dec
push
xchg
aas
xchg
out
sbb
enter
fnstenv
vorpd
aas
xchg
out
adc
leave
in
es
push
in
sbb
leave
push
jnp
sub
lds
pop
arpl
retf
in
push
in
lds
jecxz
es
push
in
push
mov
rol
leave
mov
jnp
sub
lds
fbld
retf
push
rcl
dec
mov
xor
push
or
pop
(bad)
sbb
scas
cwde
cmp
lds
cmps
in
cld
xor
fist
cs
sbb
sar
xchg
out
and
and
push
mov
inc
push
aas
arpl
(bad)
imul
sbb
int
sub
inc
pop
sub
leave
push
in
int
out
lds
imul
dec
push
div
repz
xchg
(bad)
xchg
sbb
push
jns
test
vpsubusw
retf
jno
int
mov
out
fld
jmp
in
jmp
mov
sbb
push
push
sbb
push
adc
push
popf
out
dec
adc
or
pop
xlat
enter
dec
nop
pop
jno
int
out
cmp
loope
leave
jnp
outs
push
xchg
out
push
adc
xchg
push
pop
jbe
push
popf
out
xchg
fnstenv
ret
pop
pusha
ins
mov
inc
retf
xchg
push
pop
jbe
(bad)
xlat
enter
into
cmp
loope
leave
jnp
outs
push
xchg
out
push
adc
sbb
push
jp
or
sbb
push
push
or
sbb
push
pop
sbb
push
push
sbb
push
dec
sbb
push
jns
pop
cmp
pop
cmp
pop
aas
ja
pop
aas
jns
pop
inc
ja
pop
inc
jns
pop
inc
ja
pop
inc
jns
pop
dec
ja
pop
dec
jns
pop
dec
ja
pop
dec
jns
pop
push
ja
pop
push
jnp
push
push
out
vmulpd
leave
rcl
jb
cs
push
push
cmps
sbb
push
scas
sbb
push
mov
sbb
push
jns
shl
int3
push
pop
jns
shl
int3
push
pop
js
retf
fidiv
and
and
int3
push
pop
js
retf
fidiv
dec
adc
or
mov
(bad)
(bad)
out
cmp
push
jnp
add
(bad)
int
out
lds
jnp
scas
int3
fnop
leave
dec
push
div
xlat
push
loope
(bad)
push
adc
lods
cs
push
push
in
leave
jnp
mov
xchg
out
push
adc
lea
out
cmp
cmps
int
mov
out
(bad)
sbb
push
in
jmp
inc
sbb
push
sbb
push
mov
or
or
jns
dec
adc
xchg
pop
pusha
jl
dec
xchg
ret
add
xchg
out
push
adc
or
jns
dec
adc
or
pop
xlat
enter
dec
mov
(bad)
into
cmp
jmp
outs
push
in
jmp
js
int
mov
or
fidiv
xchg
(bad)
leave
dec
inc
icebp
dec
ret
pop
std
inc
and
in
(bad)
xchg
ret
add
xchg
out
push
adc
sbb
push
jmp
push
cli
sbb
push
add
push
or
push
adc
push
and
or
ja
pop
jae
or
ja
pop
outs
jns
pop
imul
imul
addr16
pop
addr16
pop
arpl
pop
arpl
pop
pop
ja
pop
pop
jns
pop
pop
ja
pop
pop
jnp
push
push
out
vmulpd
leave
rcl
or
ds
push
inc
sbb
push
push
sbb
push
push
or
or
mov
(bad)
(bad)
out
or
fidiv
and
and
or
fidiv
dec
adc
or
mov
(bad)
(bad)
out
or
fidiv
dec
adc
or
fidiv
and
and
les
jnp
lods
into
push
out
lds
mov
or
jmp
jbe
xchg
out
cmp
fldcw
rcl
aam
or
cs
in
call
dec
pop
arpl
mov
out
sbb
dec
inc
push
sbb
scas
in
cmp
ds
leave
push
jns
and
out
dec
aas
pop
std
dec
xor
out
(bad)
sub
leave
push
and
retf
cmp
scas
test
push
pop
or
mov
pushf
(bad)
push
and
pop
cmp
std
dec
out
push
out
lds
xchg
and
or
inc
mov
ja
mov
cs
mov
pop
mov
retf
mov
push
out
inc
inc
inc
out
aam
adc
vpavgw
mov
push
pushf
(bad)
leave
push
std
jnp
push
std
jnp
xchg
mov
push
jmp
xchg
out
leave
or
xor
mov
push
retf
push
(bad)
test
and
sbb
retf
mov
pusha
xchg
out
inc
add
cmp
fcmovb
cmp
movs
(bad)
fmul
add
push
js
jmp
bound
push
add
xlat
daa
(bad)
ds
or
fidiv
retf
jns
rcr
out
(bad)
leave
push
out
adc
retf
(bad)
leave
push
jnp
imul
cs
mov
push
retf
pop
ins
pop
mov
retf
sbb
cwde
outs
aas
leave
push
std
dec
adc
lds
inc
inc
push
pop
mov
retf
add
push
out
lds
dec
inc
scas
push
push
out
lds
cli
repnz
push
mov
(bad)
(bad)
retf
lds
cs
cld
push
lods
mov
xchg
out
jo
add
rol
je
popa
or
aam
in
(bad)
mov
xchg
mov
and
pop
jno
jns
cs
leave
(bad)
les
addr16
jns
cs
retf
(bad)
mov
or
mov
iret
push
mov
retf
vandnpd
pop
cmp
arpl
push
mov
retf
jne
xchg
out
(bad)
leave
push
out
mov
adc
idiv
icebp
(bad)
adc
pop
(bad)
fisttp
cmp
sahf
(bad)
leave
cld
push
mov
into
pop
out
lds
mov
into
pop
out
lds
mov
xor
inc
stc
mov
out
bound
push
loope
je
scas
test
aas
mov
retf
popa
or
retf
out
jo
add
pop
loop
inc
mov
repz
mov
cmps
in
sti
mov
cs
enter
or
mov
retf
clc
mov
jbe
iret
inc
in
(bad)
sub
sbb
in
out
pop
(bad)
std
sbb
jnp
mov
or
add
in
retf
mov
in
lds
femms
out
jbe
lahf
mov
mov
stos
pop
loope
or
js
leave
fld
xor
jecxz
mov
push
in
vcvtsd2ss
gs
out
adc
leave
push
inc
push
xor
(bad)
sahf
into
push
out
das
retf
mov
push
in
(bad)
mov
retf
push
dec
inc
in
(bad)
ds
mov
arpl
push
(bad)
sub
push
out
das
retf
mov
push
in
(bad)
mov
retf
push
dec
inc
in
(bad)
ds
(bad)
repnz
push
(bad)
add
push
out
dec
mov
fcmovb
leave
push
push
push
fisttp
cmp
repz
fchs
or
push
in
lds
out
popa
or
loop
sbb
cmp
(bad)
jbe
xchg
out
in
jmp
mov
push
in
mov
xlat
mov
gs
out
lds
cwde
das
add
mov
lds
cmp
(bad)
and
outs
dec
retf
repz
fchs
mov
mov
dec
retf
(bad)
mov
jno
sub
add
shl
dec
fucomip
bound
push
push
push
xchg
xlat
xlat
out
aaa
outs
retfw
(bad)
leave
xchg
sub
fisubr
out
push
imul
leave
mov
retf
icebp
cmc
cs
retf
lds
mov
sbb
aas
xchg
out
(bad)
fistp
push
retf
add
retf
push
push
call
push
retf
cmp
push
inc
lds
repnz
cmp
xchg
out
sbb
sub
out
sbb
jns
imul
fld
push
mov
imul
xchg
pop
inc
lds
jnp
lds
jnp
lds
jnp
sbb
ins
mov
and
sbb
xchg
bound
xchg
retf
push
push
ds
mov
leave
loope
jmp
arpl
pandn
or
retf
adc
retf
pop
mov
leave
retf
fst
sbb
enter
test
rcr
cmp
mov
adc
and
dec
mov
push
icebp
vorpd
push
pop
xor
(bad)
leave
push
in
int
out
lds
inc
jns
mov
cmp
fcomip
or
int3
call
jmp
mov
adc
popf
or
in
inc
push
pop
icebp
xchg
dec
inc
in
stc
mov
add
nop
pop
xchg
(bad)
retf
cmp
(bad)
cmp
dec
mov
leave
push
out
cmp
dec
mov
leave
push
in
cmp
xlat
rol
leave
push
out
dec
loope
cld
inc
lods
push
out
vpandn
dec
loope
mov
cld
push
aaa
cmp
mov
retf
out
lods
pop
arpl
fwait
adc
and
dec
mov
loop
xor
mov
push
mov
imul
leave
cmps
push
dec
out
push
out
vpsubusw
loop
lods
inc
dec
das
aas
and
add
or
scas
pop
(bad)
and
push
repnz
xchg
out
or
out
lds
scas
in
fcomi
(bad)
cs
dec
pop
(bad)
into
push
je
popa
or
call
repnz
cs
pop
scas
in
(bad)
(bad)
cs
dec
pop
std
dec
in
push
out
lds
push
lock
inc
(bad)
inc
aas
imul
fidivr
mov
leave
push
inc
pop
push
pushf
add
repnz
dec
dec
lock
push
arpl
enter
aas
imul
ficom
ror
int3
test
xchg
retf
(bad)
leave
push
jno
retf
gs
retf
inc
arpl
push
mov
retf
out
scas
in
cmp
push
arpl
push
pushf
adc
stos
pop
cs
leave
int3
push
(bad)
pop
push
retf
dec
daa
cmp
movs
(bad)
mov
leave
push
ja
(bad)
in
loopne
pop
icebp
jmp
leave
push
ja
mov
mov
rdpmc
jno
(bad)
push
(bad)
xor
mov
(bad)
stc
enter
dec
movs
jmp
xor
sbb
int3
add
aas
addr16
(bad)
enter
fcomip
pop
push
retf
cmp
scas
inc
sbb
int3
retf
arpl
cmp
push
add
cmp
arpl
mov
xchg
daa
inc
out
jb
retf
add
jae
in
int3
or
aas
outs
inc
lds
xor
cmp
push
arpl
enter
or
xchg
fstp
leave
push
and
pop
inc
push
dec
xlat
push
out
(bad)
dec
and
pop
out
vpavgw
sti
dec
pop
icebp
jmp
leave
push
ja
mov
retf
aaa
jno
(bad)
push
(bad)
xor
mov
(bad)
stc
enter
pop
push
in
push
aas
das
sub
leave
int3
rol
aas
xor
cmp
push
arpl
enter
or
xchg
repz
inc
out
inc
cmp
lods
inc
mov
push
arpl
enter
sbb
push
in
cmp
push
add
cmp
in
dec
enter
loop
scas
ss
in
lds
adc
push
fwait
adc
dec
sub
push
(bad)
dec
(bad)
out
cmp
xchg
jns
adc
in
mov
int3
repz
sbb
lds
lahf
fs
retf
push
or
addr16
lds
mov
out
lds
sbb
scas
ja
mov
shl
push
and
push
pushf
rcl
xor
dec
sbb
and
in
fld
cs
dec
pop
(bad)
retf
(bad)
push
pushf
rcl
and
inc
sbb
ins
push
or
xchg
fidivr
and
shl
push
jno
int3
retf
adc
jae
mov
pop
(bad)
mov
out
les
imul
ficom
ror
int3
not
or
gs
dec
ret
dec
pop
push
out
lds
mov
cmp
test
or
test
in
cmp
loope
out
das
or
sbb
fmulp
ins
mov
or
or
loopne
ret
out
push
xchg
fisubr
xor
das
aas
jns
push
int3
retf
lods
(bad)
test
arpl
shl
pop
inc
mov
(bad)
stc
movs
mov
dec
pop
push
in
add
aaa
inc
lds
addr16
cmp
shr
aas
outs
in
fld
mov
(bad)
enter
and
into
enter
or
enter
sub
loopne
vorpd
and
mov
mov
and
add
data16
lds
adc
cmp
scas
retf
vorps
vpand
add
data16
lds
sbb
push
cmp
push
xchg
repnz
pop
(bad)
cs
xchg
and
xchg
xchg
and
mov
inc
sbb
cli
push
inc
pop
jnp
mov
cs
dec
iret
test
xchg
sahf
lds
clc
test
test
psraw
mov
jecxz
outs
cmps
jmp
repnz
iret
out
pop
repnz
add
bound
fst
mov
push
in
(bad)
leave
push
and
ds
int3
psraw
mov
leave
push
out
push
mov
push
mov
add
bound
leave
mov
and
mov
jno
xchg
repnz
leave
test
jns
rcr
out
(bad)
cwde
(bad)
leave
push
jno
and
jge
retf
dec
mov
pop
retf
push
daa
pop
lods
(bad)
retf
das
retf
xchg
int
inc
jl
sti
stc
lock
sbb
scas
inc
mov
test
retf
mov
mov
repnz
lea
push
fbstp
push
retf
xchg
pop
std
jnp
dec
xor
retf
(bad)
(bad)
aad
mov
jbe
rcr
dec
iret
and
inc
das
pusha
out
dec
daa
pop
jns
and
out
push
pop
push
pop
leave
sbb
inc
(bad)
mov
retf
ror
jno
jmp
cmp
movs
or
inc
sti
aam
pushf
jmp
jg
jmp
mov
(bad)
lea
into
push
lahf
out
inc
ret
push
out
(bad)
cli
push
xlat
jbe
push
retf
retf
inc
push
xchg
lods
jns
jmp
push
not
jg
in
and
and
outs
sub
push
jbe
(bad)
fbstp
ret
xor
fxch
dec
mov
jmp
shr
retf
push
sbb
xor
sbb
out
lods
jge
in
lds
or
int3
lock
jns
.byte
xchg
.byte
