call
add
add
add
add
add
add
or
add
add
add
hlt
and
add
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
xor
add
and
jb
outs
addr16
add
add
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
movs
fld
add
add
inc
add
add
fild
add
add
jns
add
xchg
jecxz
add
add
add
out
add
add
add
add
add
add
add
add
sbb
add
inc
or
add
add
add
add
add
syscall
add
add
add
add
add
add
add
add
add
add
jnp
arpl
data16
xor
arpl
bound
sub
sub
xor
xor
xor
add
gs
ins
gs
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
ins
mov
retf
icebp
xlat
add
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
fld
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
je
icebp
ror
fwait
sbb
sbb
add
test
add
add
outs
add
outs
add
dec
add
jae
pop
add
add
add
add
dec
add
ins
add
imul
dec
add
add
add
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
mov
add
add
add
add
add
add
add
add
add
xor
add
add
add
xchg
add
add
add
add
inc
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
enter
push
add
add
rol
add
add
loopne
add
add
add
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
add
add
add
add
add
and
add
jae
popa
je
add
bound
add
add
add
add
add
inc
add
shr
jae
arpl
add
test
add
add
add
add
add
add
add
inc
add
inc
cs
ins
outs
arpl
add
add
add
add
add
add
add
add
inc
add
inc
add
add
dec
add
add
add
add
add
add
add
push
add
push
retf
add
out
add
add
add
add
add
sub
add
add
sub
add
add
or
jae
add
or
jae
add
or
jae
add
or
add
add
xor
add
add
add
add
adc
jle
add
add
or
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
or
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
or
sub
push
sub
xor
add
add
add
add
add
add
add
push
add
or
sub
push
sub
xor
add
add
add
add
sub
add
or
adc
add
or
add
sub
add
xor
add
add
push
add
adc
add
adc
add
or
add
sub
xor
add
add
add
add
adc
rol
adc
sub
push
sub
xor
add
add
or
add
add
sub
add
or
sub
push
sub
xor
add
add
add
add
adc
add
or
add
add
or
or
add
add
push
sub
adc
add
adc
add
or
add
add
adc
(bad)
adc
push
add
sub
add
add
sub
add
or
add
add
xor
add
add
add
add
adc
jle
add
or
or
add
add
sbb
add
jle
add
or
sub
push
sub
add
sub
add
sbb
add
add
sub
dec
and
push
add
add
add
add
sub
adc
push
add
add
add
add
add
or
push
or
adc
add
add
or
and
fstp
gs
push
add
or
adc
add
jge
adc
adc
push
pop
bound
add
add
add
add
pushf
adc
sbb
repz
add
pushf
adc
sbb
dec
pushf
adc
sbb
add
add
add
adc
or
mov
adc
pop
or
pushf
adc
pop
or
xchg
add
add
mov
add
pushf
adc
pop
push
and
add
add
add
add
or
or
sub
adc
push
sub
add
adc
adc
sub
add
or
add
adc
add
or
push
pop
xchg
popa
pushf
add
or
(bad)
adc
adc
adc
xor
add
add
sub
add
xor
add
add
add
and
add
add
sub
push
sub
adc
add
add
add
adc
jb
add
jo
or
adc
adc
outs
pop
add
or
or
popa
adc
adc
outs
and
add
or
push
add
or
pop
xor
add
add
or
pop
sub
and
adc
add
pop
jle
add
or
and
add
adc
adc
adc
and
add
sub
add
or
and
push
and
adc
pop
(bad)
adc
add
or
or
cdq
pop
push
push
or
and
add
add
and
add
or
xchg
add
push
sub
add
push
outs
daa
add
or
add
sub
sbb
or
add
add
add
adc
sub
add
or
(bad)
adc
sbb
or
and
add
add
jo
popf
add
pop
jb
add
jo
adc
lea
add
add
pop
add
jb
add
jo
adc
add
jb
add
jo
adc
sub
add
popf
or
add
or
sbb
or
or
adc
push
pop
call
add
sbb
add
sbb
or
outs
sub
add
add
add
(bad)
adc
adc
add
add
add
sbb
pop
(bad)
or
pop
or
mov
add
pop
sub
pop
pop
pop
push
adc
inc
or
add
add
add
sub
(bad)
push
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
fiadd
or
pop
adc
pop
(bad)
xor
pop
sub
adc
inc
add
add
add
add
mov
(bad)
(bad)
fisub
jne
add
add
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
shl
add
sub
add
or
adc
sub
sub
add
or
add
add
add
add
add
or
or
add
add
xor
add
add
adc
and
call
add
add
add
aas
adc
add
add
add
lock
pop
adc
add
add
adc
in
cli
add
jo
or
adc
adc
outs
pop
add
or
or
push
adc
adc
outs
and
add
adc
sbb
or
add
jo
push
push
adc
add
or
movntps
adc
adc
or
or
or
add
or
add
or
(bad)
adc
adc
pop
js
(bad)
and
pop
adc
pop
(bad)
adc
add
or
or
movs
pop
adc
add
add
add
sbb
xchg
add
sbb
xchg
add
pop
(bad)
xchg
add
xchg
sub
add
or
adc
adc
xor
add
or
add
sub
add
xor
add
add
adc
add
add
sub
sub
add
or
add
xor
add
or
lea
add
add
sub
add
or
xor
add
pushf
or
adc
sub
add
pushf
or
adc
sub
or
sub
pop
sub
adc
add
add
add
adc
pop
adc
push
add
or
pop
jbe
jae
add
or
adc
or
adc
adc
add
or
adc
adc
outs
pop
add
or
or
adc
or
or
add
or
push
adc
pop
(bad)
adc
add
or
or
call
xlat
adc
add
dec
ss
pop
or
sub
add
or
sub
add
or
add
or
and
add
or
and
add
sub
add
or
and
add
adc
adc
push
pop
cmp
add
or
add
or
call
pop
lea
add
add
or
or
pop
cmp
add
or
add
or
call
add
add
sub
aaa
add
or
add
add
or
add
sub
adc
add
add
add
adc
add
add
sub
add
or
add
or
push
or
sub
add
or
sub
jb
add
jo
pop
push
adc
adc
outs
pop
add
or
or
aas
adc
adc
outs
and
add
adc
sub
add
or
adc
adc
outs
pop
add
or
or
adc
or
or
add
or
add
adc
add
or
or
call
adc
add
push
adc
xor
add
or
push
adc
outs
cmp
add
sub
add
adc
lea
add
add
or
or
push
lea
add
add
cmp
add
add
add
add
xor
add
add
adc
push
or
mov
add
pop
(bad)
or
pop
fs
add
cmp
and
pop
and
or
add
add
push
jae
add
or
add
or
push
outs
aas
add
or
push
adc
add
add
pop
sbb
add
sub
(bad)
adc
xor
add
add
pop
xchg
add
add
adc
(bad)
or
outs
inc
add
or
cmp
push
add
add
inc
add
or
add
or
or
inc
add
or
outs
and
add
sub
or
mov
xor
add
push
inc
add
push
jb
add
jo
adc
inc
add
or
inc
add
or
stos
add
add
inc
add
or
outs
and
add
sub
or
imul
add
add
jo
and
add
jb
add
jo
adc
inc
add
or
inc
add
or
pop
push
adc
sub
pop
adc
call
add
or
push
add
add
add
jo
sbb
add
push
jb
add
jo
adc
dec
add
or
adc
and
add
add
jo
xor
add
pop
jb
add
jo
adc
inc
add
or
or
sub
pop
adc
adc
sub
pop
adc
add
adc
pop
(bad)
adc
add
push
adc
mov
lea
add
add
and
and
push
pushf
adc
pop
pop
pushf
adc
sbb
pushf
adc
sbb
pushf
adc
sbb
pushf
adc
sbb
pushf
adc
adc
push
lea
add
add
and
and
pop
sahf
adc
pop
pop
adc
sahf
adc
sbb
and
sahf
adc
sbb
inc
sahf
adc
sbb
sahf
adc
sbb
and
or
cmp
and
push
add
sub
add
push
adc
adc
(bad)
sub
add
adc
push
adc
adc
adc
push
(bad)
add
pop
pusha
add
sub
add
push
sub
add
add
movlps
add
adc
(bad)
adc
adc
pop
xor
repz
adc
call
and
dec
add
and
add
jb
add
jo
in
add
pop
jb
add
jo
adc
or
add
add
inc
and
mov
xor
sub
add
adc
or
and
and
sbb
and
lea
add
add
or
push
sub
add
add
and
xor
add
adc
jb
add
jo
and
adc
adc
pop
add
or
and
adc
outs
and
add
adc
sbb
sbb
adc
pop
xlat
adc
adc
pop
and
repz
pop
(bad)
adc
add
and
and
push
and
add
add
push
push
in
add
and
or
add
add
jo
pop
jb
add
jo
adc
not
jl
(bad)
and
mov
push
sub
or
add
jno
add
add
adc
add
push
cmp
add
push
adc
and
test
or
add
jb
add
jo
retf
or
inc
add
jo
adc
sub
data16
enter
int3
int3
int3
lods
inc
rol
push
add
sub
or
add
jno
add
add
adc
pop
sub
sub
or
adc
adc
daa
sbb
dec
add
or
adc
adc
outs
cmp
add
cmp
add
add
jb
dec
fsubr
and
push
add
jo
pop
jb
add
jo
adc
retf
add
add
in
(bad)
and
add
add
mov
add
sub
or
add
jno
add
add
adc
cmp
add
outs
push
push
popf
add
add
push
jl
add
and
sbb
add
add
jo
test
add
jb
add
jo
adc
cmp
add
and
xchg
inc
and
cmc
sub
enter
add
sub
or
add
jno
add
add
sub
or
xor
add
sub
add
push
sub
add
add
sub
sub
or
push
(bad)
add
mov
pop
add
push
sub
add
add
sub
add
add
pop
inc
outs
inc
add
push
adc
and
and
or
add
repnz
add
add
jo
push
jb
add
jo
adc
push
pop
add
and
int
int3
int3
in
std
ffree
sub
add
sub
sbb
push
adc
adc
add
jno
add
add
push
add
or
adc
add
push
adc
add
add
sbb
adc
push
adc
pop
ficom
sub
sbb
mov
sbb
pop
or
and
add
add
sbb
xchg
(bad)
sahf
add
or
clc
add
add
adc
pop
sub
(bad)
adc
push
pop
sub
dec
add
or
adc
sbb
sbb
add
adc
xchg
adc
mov
dec
add
or
adc
mov
sub
add
adc
sbb
or
add
jno
add
add
sub
push
sub
add
adc
sbb
or
adc
adc
mov
or
adc
adc
outs
inc
add
push
adc
(bad)
adc
adc
adc
ds
(bad)
(bad)
call
adc
adc
adc
add
jno
add
add
sub
adc
sub
sub
or
adc
adc
sub
add
sub
add
push
adc
sbb
dec
add
or
adc
adc
outs
inc
add
push
adc
adc
sub
add
adc
sub
add
sub
add
push
(bad)
mov
frstpm(287
push
and
add
add
jo
pop
ins
add
pop
jb
add
jo
adc
and
pusha
cmp
add
add
iret
shr
add
sub
or
add
jno
add
add
adc
add
push
es
push
dec
add
jmp
add
xchg
xor
add
jb
add
jo
adc
push
push
add
and
fcom
(bad)
and
jp
push
dec
rol
sub
add
sub
or
add
jno
add
add
add
push
es
sub
add
fimul
or
sub
add
or
add
adc
add
sub
add
sub
add
outs
sub
add
add
add
add
add
add
add
jp
add
or
add
xchg
add
or
add
add
xor
add
add
add
sub
add
or
(bad)
adc
adc
sbb
movhps
sbb
mov
cmp
add
add
sbb
str
pop
push
or
xor
sbb
add
push
add
adc
push
or
or
invd
sub
pop
or
mov
add
or
lldt
add
aas
pop
adc
add
inc
xor
add
or
add
jo
push
add
or
add
or
pop
push
adc
push
and
add
jb
add
sbb
add
jb
add
add
push
outs
push
add
or
add
sub
add
or
push
and
adc
add
sub
pop
movlps
push
or
adc
sysret
sub
add
adc
nop
jae
add
or
pop
addr16
push
add
or
adc
adc
sub
adc
nop
pop
pop
adc
(bad)
cmp
push
adc
adc
outs
pop
add
or
or
push
adc
adc
outs
and
add
adc
adc
pop
(bad)
adc
pop
adc
or
or
in
push
adc
add
pop
pop
pop
xchg
pop
adc
pop
imul
pop
pop
adc
add
push
jle
add
or
and
add
adc
adc
adc
jle
add
or
and
add
sub
add
adc
sub
push
pop
pop
push
adc
inc
sbb
add
add
add
das
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
aas
(bad)
(bad)
inc
(bad)
dec
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
jg
(bad)
call
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
cli
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
inc
inc
adc
adc
adc
pop
sub
adc
add
add
add
(bad)
(bad)
fisub
jne
add
add
add
or
adc
push
inc
pop
(bad)
adc
add
sub
shl
add
sub
add
or
adc
sub
sub
add
or
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
repnz
add
sub
add
or
add
in
mov
jle
jge
add
add
sub
add
xor
add
add
adc
jb
add
push
adc
adc
outs
pop
add
or
or
jg
or
or
add
or
and
add
pop
add
push
adc
adc
pop
add
or
or
adc
outs
and
add
adc
adc
pop
(bad)
adc
add
or
or
add
add
add
aas
pop
adc
add
adc
xlat
adc
add
and
cmps
pop
movlps
add
pop
pop
(bad)
adc
adc
pop
push
xor
adc
pop
(bad)
adc
add
or
or
js
(bad)
push
add
add
xchg
or
add
sub
add
xor
add
add
adc
and
add
add
add
inc
adc
add
xor
add
add
cmp
adc
add
inc
xor
add
add
add
add
add
lock
pop
adc
add
add
add
add
pop
inc
xor
push
or
or
adc
push
add
push
pop
(bad)
adc
adc
pop
push
xor
or
add
adc
and
mov
add
pop
pop
pop
mov
pop
adc
pop
dec
xor
push
sub
and
or
and
out
push
sub
pop
sub
add
sub
add
or
add
add
or
add
add
and
or
add
sub
xor
add
add
add
add
adc
and
and
or
add
sub
adc
add
or
add
sbb
add
add
push
sub
push
sub
xor
add
add
add
add
adc
push
or
add
sub
adc
add
or
add
sbb
add
add
jmp
push
sub
add
sbb
add
add
sub
add
sub
add
or
add
add
add
add
jb
add
add
add
sub
xor
add
add
add
add
add
add
or
sub
push
sub
push
add
sbb
add
add
and
or
sub
add
adc
add
add
add
pop
or
sub
push
or
pop
or
sub
pop
adc
add
pop
adc
add
add
add
add
add
push
in
add
ins
xchg
push
std
push
sub
pop
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
add
sub
jb
add
push
adc
adc
outs
pop
add
or
or
adc
or
or
add
or
adc
pop
(bad)
adc
add
or
or
jmp
or
add
add
add
jo
or
adc
adc
pop
add
or
or
adc
outs
and
add
adc
adc
pop
(bad)
adc
add
or
or
adc
adc
add
add
aas
pop
adc
add
or
(bad)
or
pop
ja
xor
sub
add
or
add
add
adc
add
test
add
adc
push
or
cmp
mov
add
or
adc
adc
outs
pop
add
or
or
adc
or
pop
outs
and
add
or
pop
pop
(bad)
adc
add
pop
adc
xor
jb
add
push
adc
adc
outs
pop
add
or
or
and
or
or
add
or
add
add
push
adc
add
sub
icebp
adc
pop
(bad)
adc
add
or
or
(bad)
jb
add
push
adc
add
or
movntps
outs
and
add
adc
or
add
or
add
or
sub
add
add
sbb
add
add
sub
add
xor
add
add
add
add
adc
and
add
and
add
and
add
inc
xor
pop
or
sub
pop
adc
add
add
add
jle
mov
or
adc
add
adc
add
and
add
add
sub
add
or
sub
add
or
add
sub
add
jbe
sub
add
or
add
dec
add
inc
push
push
add
add
pop
aad
pop
add
add
sub
add
sub
add
or
add
dec
push
dec
push
push
add
add
sub
add
xor
add
add
add
add
adc
pop
sub
push
or
or
adc
add
add
add
and
add
add
mov
ror
add
add
or
sub
adc
add
cmp
add
adc
pop
or
or
not
or
sub
and
adc
adc
and
add
push
sub
add
and
push
push
dec
imul
or
or
add
sub
add
push
add
sbb
add
add
and
adc
add
sub
add
adc
add
and
add
and
add
add
or
sub
add
sub
and
add
add
lea
or
or
add
sub
add
inc
add
sbb
add
add
pop
popa
jge
add
add
sub
add
add
add
sub
add
or
add
add
jb
add
add
add
and
add
jge
add
add
sub
adc
add
sbb
add
and
sbb
pop
sub
pop
sub
add
add
pop
pop
mov
push
pop
and
push
add
sbb
add
add
and
sbb
add
sub
add
push
add
sub
xor
add
add
add
add
adc
pop
mov
sub
push
sub
xor
add
add
add
add
adc
pop
or
add
sub
push
add
sub
sub
add
or
add
test
push
mov
jge
add
add
sub
add
adc
add
push
add
add
add
adc
push
or
sub
sbb
add
pop
pop
xchg
pop
pop
dec
ss
add
sub
add
add
sbb
add
add
sub
add
sub
add
or
add
cli
adc
add
add
sub
add
push
add
sub
add
sub
sub
add
or
add
sub
sbb
sub
add
push
add
sub
sub
add
or
add
add
add
or
add
sub
add
push
add
sub
xor
add
add
add
add
adc
and
inc
xlat
pop
or
add
sub
push
add
sub
add
add
jl
add
add
adc
add
into
cmp
xor
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
xor
add
add
sub
add
add
jge
push
hlt
push
sub
push
sub
xor
add
add
add
add
adc
push
or
add
sub
push
add
sub
add
sub
add
sbb
add
add
sub
add
sub
add
or
add
jge
add
add
pop
movs
jge
add
add
sub
add
push
add
sub
xor
add
add
add
add
add
mov
sub
push
sub
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
and
add
add
or
or
add
sub
add
xor
add
add
add
add
adc
and
add
or
add
sub
adc
add
or
add
das
add
adc
and
sub
push
sub
fiadd
sub
add
or
add
in
inc
add
add
pop
or
add
and
dec
call
add
jge
add
add
and
out
inc
jge
add
add
sub
push
add
sub
add
sbb
add
add
sub
add
add
sbb
add
add
and
add
jge
add
add
and
cld
xlat
inc
jge
add
add
push
jge
add
add
and
add
add
sub
add
sub
add
or
add
mov
cmps
addr16
add
add
sub
add
adc
add
or
add
xor
add
add
or
mov
or
add
sub
push
add
sub
add
add
and
cwde
shr
add
or
jge
add
add
and
add
add
add
add
sub
retf
sbb
add
add
pop
cmp
cmp
add
sub
add
or
add
add
and
movs
xor
jge
add
add
sub
add
or
add
add
sub
adc
add
sldt
add
add
adc
and
sti
rol
or
add
sub
adc
add
or
add
xor
add
add
cmp
sub
push
sub
sub
add
or
add
into
imul
dec
add
add
push
jge
add
add
sub
add
sub
add
sub
sub
add
or
add
jge
add
add
sub
add
adc
add
or
add
xor
add
add
sahf
xor
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
add
add
sub
xor
push
push
add
or
or
add
sub
add
add
add
and
in
out
jg
aaa
add
add
and
jmp
add
and
xchg
dec
cs
cmp
add
sub
xor
add
add
add
and
shl
sub
push
sub
push
add
sub
sub
add
or
add
add
or
add
add
sub
add
add
sbb
add
add
sub
add
add
sub
add
sub
sub
add
or
add
add
add
add
sub
add
bound
sub
add
or
add
lods
sbb
rcr
jge
add
add
sub
add
push
add
sub
add
sbb
add
add
sub
add
add
sub
sub
add
or
add
xor
faddp
jge
add
add
pop
imul
add
sub
add
adc
add
or
add
add
adc
pop
or
add
sub
add
sbb
add
add
sub
add
sub
add
or
add
imul
add
add
add
sub
add
push
add
sub
add
sbb
add
add
sub
add
xor
add
add
aaa
add
adc
and
sub
push
sub
xor
add
add
add
add
adc
jb
push
add
sub
push
sub
jb
sub
add
or
add
add
adc
add
jge
add
add
sub
add
mov
sub
add
or
add
cdq
pop
add
jge
add
add
push
jge
add
add
push
jge
add
add
and
cmp
add
add
add
sub
add
sub
add
or
add
add
or
add
add
pop
xor
add
add
sub
add
push
add
sub
add
sub
add
sbb
add
add
sub
add
xor
add
add
add
add
adc
pop
or
add
sub
adc
add
pop
add
add
add
adc
pop
or
add
sub
add
sbb
add
add
sub
add
add
sub
sub
add
or
add
mov
dec
add
add
sub
add
add
sbb
add
add
sub
add
add
sub
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
sub
add
or
add
push
push
add
add
sub
add
add
sbb
add
add
sub
add
add
sub
sub
add
or
add
sbb
sub
push
add
add
sub
add
push
add
sub
add
sub
xor
add
add
add
add
adc
and
int3
int3
int3
dec
pusha
ret
ror
add
sub
push
add
sbb
add
add
jb
push
add
push
add
add
sub
add
adc
add
pop
add
add
add
add
or
add
sub
adc
add
or
add
cmp
and
add
add
sub
push
sub
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
add
add
sbb
add
add
sub
out
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
push
stos
in
add
add
rol
add
adc
xor
add
jo
xor
jns
add
add
and
out
add
cmc
jge
lock
dec
sti
sahf
adc
les
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
loop
in
dec
std
jae
cmc
call
cs
int3
sbb
addr16
in
test
popf
add
(bad)
jo
jb
fsub
or
int
mov
jno
cs
mov
dec
rep
dec
sti
retf
add
mov
bound
xchg
add
call
pusha
scas
out
sti
ins
dec
and
xchg
mov
bound
dec
sti
mov
mov
bound
dec
sti
call
bound
dec
sti
call
scas
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
(bad)
retf
adc
cmp
call
bound
dec
sti
call
bound
dec
neg
mov
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
inc
scas
in
inc
rep
dec
sti
call
push
in
dec
mov
adc
les
cdq
sub
shl
xchg
mov
bound
dec
stc
call
bound
dec
fistp
shl
push
mov
bound
dec
sti
call
bound
fs
jns
arpl
in
dec
shr
sti
cwde
adc
les
in
dec
rep
dec
sti
call
and
dec
sti
call
bound
dec
sti
call
bound
dec
retf
sti
adc
(bad)
icebp
scas
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
call
xchg
mov
arpl
inc
repnz
mov
bound
inc
sti
call
arpl
dec
fcomp
mov
nop
lods
in
dec
leave
outs
dec
sti
push
adc
add
mov
bound
dec
repz
sti
call
bound
ds
call
arpl
dec
(bad)
cdq
adc
les
scas
in
dec
fsubr
sti
xlat
adc
add
mov
(bad)
ror
sub
add
cmovge
ins
jg
call
pusha
scas
in
sbb
ins
dec
jb
adc
les
in
dec
mov
dec
sti
fst
add
mov
bound
inc
jecxz
sub
ret
daa
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
ret
sti
scas
adc
les
in
dec
repz
mov
bound
sbb
call
outs
xchg
or
mov
movs
sub
add
inc
mov
sub
in
dec
repnz
int
or
test
in
ds
lahf
cdq
add
(bad)
mov
inc
mul
xchg
add
cwde
cdq
jno
mov
in
xchg
adc
pushf
lods
retf
imul
mov
xchg
mov
bound
dec
jmp
adc
les
in
dec
out
ins
dec
sti
mov
mov
bound
dec
sti
call
outs
xchg
mov
(bad)
inc
fstp
push
clc
inc
mov
pop
mov
xor
inc
xchg
in
ds
pop
mov
pop
jge
mov
sub
fld
push
inc
jecxz
clc
movs
sub
dec
dec
mul
ja
sbb
mov
cdq
in
cwde
(bad)
cmp
bound
dec
(bad)
mov
scas
in
pop
scas
in
dec
jae
dec
sti
sahf
add
add
loopne
ss
mov
lea
mov
popf
push
test
sub
in
inc
imul
adc
add
mov
jge
out
(bad)
push
fadd
gs
xchg
dec
repz
(bad)
call
xor
dec
jnp
adc
fstp
aad
push
xchg
mov
xchg
push
mov
popf
push
int
sbb
sbb
mov
mov
bound
int3
stos
cmp
push
in
dec
shl
mov
cmp
in
dec
div
ret
mov
inc
dec
aad
push
xchg
mov
xchg
pop
movs
setge
mov
dec
and
sbb
movs
sub
fimul
ins
push
cdq
adc
les
dec
repz
jmp
int
rep
dec
(bad)
mov
bound
dec
in
sbb
jge
out
(bad)
push
mov
gs
mov
mov
repnz
cmp
bound
dec
sti
mov
call
ins
dec
(bad)
mov
movs
in
pop
scas
in
dec
rcl
pop
add
in
dec
jae
dec
sti
sahf
or
popf
push
repnz
clc
je
ret
bnd
fld
cmc
inc
retf
xor
add
in
dec
fist
sti
pushf
mov
mov
dec
sub
nop
xchg
stos
add
imul
adc
adc
loopne
rcl
mov
popf
push
hlt
inc
in
arpl
xchg
sub
shl
mov
retf
adc
inc
xor
dec
jnp
adc
leave
pop
inc
push
mov
js
in
call
mov
inc
jecxz
sub
fldcw
loop
jmp
jb
popa
jmp
das
cli
dec
repz
mov
arpl
cmc
dec
repz
and
pop
retf
(bad)
call
test
pop
idiv
mov
fbstp
dec
repz
dec
sti
call
bound
je
call
arpl
pop
not
mov
bound
dec
lock
jae
in
dec
jmp
dec
shr
seto
mov
push
fcomp
add
in
dec
repz
loope
adc
jns
call
sti
cwde
adc
les
int
repnz
dec
fist
pop
bound
dec
fist
mov
bound
sbb
mov
mov
bound
dec
sti
mov
call
outs
dec
sti
call
sbb
dec
jmp
call
dec
inc
in
dec
cmc
mov
fidivr
xchg
cmp
pop
ins
dec
std
nop
xor
in
lods
in
dec
fucomi
dec
sti
pushf
retf
mov
daa
cmps
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
mov
adc
les
push
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
loope
pop
ja
add
ror
cli
addr16
adc
dec
jg
dec
repz
in
xor
xchg
mov
bound
cs
call
push
stos
in
push
repnz
dec
clc
call
jmp
dec
sti
call
bound
dec
retf
call
bound
inc
mov
xchg
mov
bound
dec
sti
call
bound
mul
mov
mov
xchg
mov
mov
mov
(bad)
bound
dec
shl
and
bound
dec
shl
adc
cs
icebp
fs
std
in
mov
popa
scas
in
ins
fisubr
sti
mov
mov
popa
scas
in
ins
movs
outs
dec
sti
mov
mov
mov
inc
jae
call
xor
dec
sti
call
shr
pop
jmp
ins
in
inc
(bad)
mov
movs
fwait
adc
les
fwait
sbb
sbb
mov
mov
push
mov
fs
dec
std
inc
adc
shl
in
dec
repz
dec
sti
call
bound
jp
call
outs
cmps
test
rep
dec
(bad)
call
imul
mov
dec
outs
sti
or
or
mov
jmp
rep
dec
jmp
adc
adc
dec
loopne
adc
scas
in
pop
in
popa
pop
std
mov
(bad)
adc
scas
in
dec
pushf
ins
dec
sti
xchg
adc
les
in
dec
rep
dec
sti
call
bound
hlt
sti
call
bound
dec
sti
call
imul
sti
retf
add
mov
bound
dec
repz
dec
sti
call
test
imul
inc
sti
call
bound
dec
jmp
xchg
mov
jp
in
dec
out
ins
dec
sti
mov
mov
bound
pop
std
mov
stos
out
xchg
mov
popa
adc
ds
push
mov
or
inc
stos
in
ds
mov
cmp
pop
inc
xchg
popf
push
in
cmc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
gs
cmps
(bad)
mov
mov
push
sbb
push
push
loopne
push
hlt
mov
sub
dec
cmp
(bad)
mov
xchg
push
sbb
push
ror
repnz
fmul
and
mov
bound
(bad)
(bad)
call
bound
bound
mov
lds
ins
dec
test
les
int
rep
dec
shl
lds
int
repnz
dec
shl
mov
push
scas
in
dec
sar
dec
sti
call
jno
aad
or
adc
push
adc
mov
adc
cmp
jmp
ret
shr
inc
inc
in
inc
in
dec
in
push
mov
popf
jno
imul
xor
in
mov
(bad)
lock
jp
xchg
push
sti
xchg
mov
bound
dec
jo
adc
(bad)
imul
dec
sti
adc
mov
bound
dec
sti
call
bound
(bad)
call
bound
push
call
xchg
test
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
test
fcom
movs
or
add
xchg
mov
mov
pop
fist
mov
paddd
mov
imul
mov
bound
mov
add
jge
(bad)
mov
xchg
ds
push
test
jle
xchg
mov
mov
lods
sub
out
(bad)
mov
lods
std
mov
mov
bound
dec
sti
call
bound
inc
sti
call
jne
in
dec
rep
pop
rol
add
inc
test
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
xor
mov
jae
in
dec
sbb
xchg
adc
les
in
dec
repz
sti
call
bound
pop
shl
cdq
fs
test
rep
dec
repnz
jb
in
dec
out
dec
sti
adc
bound
dec
sti
call
popf
push
adc
inc
mov
or
pop
fld
push
loop
lods
out
mul
test
pushf
(bad)
ins
dec
std
mov
mov
mov
xchg
push
call
mov
adc
sub
call
bound
dec
jmp
xchg
mov
jg
lds
mov
test
nop
cmc
sbb
in
ds
pop
test
je
xchg
mov
xchg
dec
sbb
pop
fmul
cli
sbb
sbb
nop
xchg
fidiv
repnz
loopne
jb
fs
mov
mov
mov
test
dec
lea
sti
sahf
xor
in
scas
in
dec
fist
sti
pushf
push
movs
adc
test
push
add
in
jae
ins
dec
add
mov
adc
dec
sti
ja
mov
(bad)
out
dec
repz
xchg
mov
bound
lods
sti
call
pusha
scas
in
cdq
rep
dec
sti
call
dec
scas
in
dec
cmp
xchg
adc
les
in
dec
repz
out
add
jg
loope
rep
inc
sti
call
bound
dec
in
call
jle
in
dec
shr
mov
mov
bound
sti
call
popf
push
repnz
fcomp
nop
out
mov
movs
out
inc
scas
in
ds
pop
sbb
inc
in
imul
mov
push
in
push
xchg
cmp
cld
or
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
in
mov
loop
dec
cmp
(bad)
mov
cmp
pop
cwde
cdq
cs
or
inc
test
or
les
mov
test
nop
icebp
sbb
sbb
mov
int
sbb
sbb
mov
mov
bound
int3
stos
xchg
rol
in
dec
repz
scas
cli
call
je
in
out
arpl
imul
inc
dec
(bad)
push
in
jnp
shl
lods
iret
dec
pop
neg
jae
call
mov
adc
or
adc
les
int
sbb
sbb
mov
mov
bound
dec
sti
mov
call
jle
rcl
mov
sub
ja
ins
call
dec
xchg
push
mov
xchg
xchg
dec
call
in
mul
dec
std
mov
mov
jo
lds
dec
fistp
cmp
bound
dec
std
mov
xchg
loopne
scas
in
fs
dec
std
mov
test
bound
dec
fstp
les
(bad)
ins
dec
lock
cmp
dec
cmp
jnp
shl
ins
add
dec
rep
push
fwait
adc
les
fs
dec
std
mov
test
bound
dec
(bad)
mov
bound
dec
lock
xchg
sbb
scas
in
lea
inc
adc
aad
jmp
call
bound
dec
les
mov
bound
dec
sti
call
(bad)
shr
dec
rep
dec
sti
call
bound
sar
adc
xlat
dec
test
sub
adc
int3
bound
dec
cmc
call
ja
in
dec
jmp
seto
mov
push
std
inc
movs
in
mov
mov
jo
(bad)
retfw
add
inc
xchg
mov
bound
dec
sti
call
bound
push
repnz
or
cmp
(bad)
mov
mov
movs
or
inc
hlt
pop
in
jp
shl
stos
out
xchg
mov
mov
mov
mov
jge
lds
ins
dec
test
test
sub
inc
in
mov
add
dec
cmp
dec
sti
mov
call
imul
xchg
jmp
xchg
inc
rep
dec
fistp
enter
(bad)
ins
dec
lock
xchg
push
lea
inc
adc
aad
jmp
call
bound
dec
sti
call
std
scas
in
dec
ins
ins
dec
sti
add
les
in
dec
rep
dec
sti
call
bound
sbb
call
dec
test
sub
call
bound
dec
jmp
adc
les
dec
jmp
push
nop
sub
lods
retf
sti
addr16
jae
shr
nop
out
sbb
in
scas
in
mov
mov
popf
push
adc
sub
call
bound
dec
call
xchg
mov
jge
(bad)
addr16
cs
or
nop
mov
popa
adc
lods
fnsave
aad
or
mov
mov
mov
(bad)
mov
cmps
in
lods
cld
mov
xchg
push
arpl
dec
std
in
mov
pusha
scas
in
ins
out
outs
dec
sti
mov
mov
jno
hlt
pop
fcom
gs
xchg
lds
rep
dec
call
jge
xchg
jle
aam
repz
repnz
bound
bound
adc
les
int
rep
dec
shl
adc
fld
pop
fild
inc
sti
call
bound
dec
repz
and
ins
dec
sti
adc
les
in
dec
repz
call
bound
dec
sti
call
dec
test
shr
dec
sti
call
bound
dec
jmp
adc
les
dec
jmp
sub
lods
int
push
repnz
fcomp
nop
out
sbb
fmul
scas
inc
xchg
mov
bound
dec
sti
call
bound
pop
call
imul
fcomp
mov
jge
out
mov
retw
scas
jmp
test
shl
nop
out
call
ins
dec
(bad)
mov
xchg
mov
gs
dec
std
xchg
add
pop
push
adc
jo
jmp
xchg
inc
rep
dec
fld
add
(bad)
ins
dec
lock
xchg
adc
in
clc
repnz
dec
test
mov
cmc
scas
in
dec
ins
dec
sti
call
bound
dec
sti
call
bound
inc
sti
call
bound
dec
loope
xor
or
int3
or
ins
dec
sti
lahf
adc
les
in
dec
repz
call
bound
push
call
mov
repz
shl
nop
in
mov
test
(bad)
push
mov
bound
dec
hlt
call
je
in
dec
in
addr16
shr
inc
dec
(bad)
mov
cmp
sbb
repnz
loopne
jb
gs
inc
hlt
addr16
jo
adc
mov
shl
ins
dec
fistp
adc
add
int
repnz
dec
fisttp
xor
bound
sbb
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
(bad)
dec
sti
pushf
xor
(bad)
in
dec
cmc
dec
stos
adc
mov
fs
ins
push
fwait
adc
les
cmps
jne
push
shl
arpl
in
mul
dec
std
mov
xchg
stos
pusha
scas
in
fs
dec
std
mov
stos
in
pop
scas
in
dec
sar
xchg
cmp
out
dec
repz
mov
call
inc
inc
push
retf
(bad)
call
xor
(bad)
adc
add
(bad)
ins
dec
(bad)
cmp
bound
int3
stos
cmp
dec
lods
in
dec
sar
dec
sti
call
inc
lods
in
dec
rcr
sti
call
je
shl
add
push
call
adc
mov
xchg
test
in
fs
ins
dec
std
mov
mov
xor
dec
fld
mov
bound
dec
lock
xchg
stos
popa
scas
in
lea
inc
adc
jmp
dec
sti
call
bound
sar
call
bound
dec
jg
adc
les
in
dec
mov
dec
sti
unpckhps
bound
in
dec
repz
fld
mov
dec
repz
sti
call
bound
pop
sti
call
imul
sub
iret
dec
pop
repnz
fadd
cmps
sub
xlat
je
(bad)
(bad)
retf
add
inc
xchg
mov
bound
dec
sti
call
bound
push
cmc
mov
or
cmp
sbb
inc
mov
sbb
sti
pop
shl
aad
cmp
movs
out
xchg
mov
cmps
in
mov
lods
sub
in
inc
imul
adc
inc
out
dec
repz
je
call
jae
test
rep
dec
or
adc
les
ins
dec
sti
and
mov
bound
dec
repz
mov
bound
retf
adc
sub
in
sbb
ins
dec
add
mov
arpl
dec
sti
push
adc
add
les
in
dec
rep
dec
sti
call
bound
mov
call
arpl
imul
out
dec
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
mov
jge
(bad)
arpl
pop
mov
gs
nop
test
addr16
ds
pop
sbb
loopne
xchg
in
bound
lahf
cdq
adc
(bad)
popf
in
addr16
lea
jno
test
push
loopne
jb
fs
scas
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
dec
sti
adc
dec
repz
call
imul
inc
in
ds
sbb
pop
ror
repnz
fmul
movs
adc
repnz
loopne
jb
fs
test
push
inc
loop
repnz
sub
int
dec
hlt
addr16
and
xchg
arpl
dec
std
mov
xchg
punpcklwd
dec
std
mov
test
pop
scas
in
dec
out
push
cdq
adc
les
ror
pop
cld
test
test
scas
mov
popf
push
cmc
pop
shl
call
imul
shl
call
imul
shl
sub
(bad)
sbb
dec
push
jecxz
cmp
je
pop
push
loopne
push
call
mov
adc
or
(bad)
cmp
bound
dec
sti
mov
call
jg
loope
cmp
jns
into
push
jmp
gs
and
inc
call
arpl
in
rcr
push
push
mov
bound
dec
lock
xchg
cmp
dec
cmp
clc
dec
sti
call
pop
scas
in
dec
loopne
dec
fistp
(bad)
cmp
bound
dec
sti
mov
call
mov
sti
call
or
push
jecxz
and
les
pop
dec
rep
int
call
arpl
dec
(bad)
fwait
adc
les
in
dec
adc
call
bound
dec
repz
call
bound
out
call
arpl
dec
mov
adc
les
in
dec
sbb
dec
sti
call
jge
(bad)
jl
loopne
(bad)
sbb
bound
inc
sti
call
bound
dec
out
adc
les
in
dec
aad
dec
sti
mov
mov
bound
pop
retf
mov
scas
out
xchg
mov
popa
adc
ds
pop
xchg
push
fmul
scas
sub
out
mov
inc
cwde
in
ds
test
push
loopne
jp
xchg
jmp
scas
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
fs
mov
movs
jecxz
(bad)
movs
or
push
fld
push
push
in
xchg
in
push
lahf
pop
test
mov
jbe
or
mov
addr16
ds
sbb
lea
ins
push
fwait
adc
les
cmps
jne
push
shl
lds
int
repnz
dec
shl
adc
push
mov
fnsave
mov
test
nop
cmc
mov
jl
xor
scas
xlat
jp
in
xlat
jae
call
imul
jg
int3
stos
mov
mov
shl
dec
sti
call
inc
scas
in
dec
clc
jae
call
cmps
mov
pushf
push
adc
jno
jmp
xchg
inc
rep
dec
fisttp
mov
bound
dec
lock
pop
test
mov
mov
fidivr
xchg
xor
in
fs
ins
dec
std
mov
jle
mov
data16
outs
dec
rep
push
cwde
adc
les
cmp
ins
dec
fisttp
fadd
bound
pop
retf
(bad)
pop
xchg
mov
js
in
dec
loopne
dec
sti
sbb
mov
bound
in
dec
repz
dec
sti
call
bound
inc
cli
call
arpl
dec
ficomp
mov
cmc
scas
in
dec
rep
dec
sti
mov
add
in
dec
repz
sti
call
bound
lahf
cli
call
bound
dec
mov
xchg
mov
inc
scas
in
dec
in
arpl
test
test
scas
ret
push
cld
imul
mov
dec
rep
pop
sti
call
bound
dec
fstp
mov
dec
scas
in
dec
fild
mov
mov
bound
dec
sti
call
push
xchg
int3
mov
xchg
push
out
mov
movs
sbb
add
inc
mov
push
mov
cmc
addr16
jae
rol
nop
aad
cdq
push
jge
mov
frstor
outs
cli
pop
jmp
adc
adc
sub
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
mov
or
pop
repnz
fadd
movs
adc
or
fdiv
movs
or
mov
pop
loopne
jb
fs
test
push
fadd
mov
jb
out
xor
and
mov
fs
call
jmp
dec
(bad)
imul
sub
jmp
out
nop
mov
push
in
gs
fiadd
xchg
cmp
imul
xchg
jmp
xchg
inc
rep
dec
fist
adc
les
lds
ins
dec
lock
sahf
pop
and
or
pop
loop
sbb
and
xchg
or
cmp
cmp
bound
dec
(bad)
mov
xchg
sub
in
shr
std
xchg
or
jno
aad
push
xchg
mov
mov
or
fdiv
mov
popf
imul
scas
in
dec
rcl
xor
xchg
mov
inc
scas
in
dec
clc
imul
xchg
jmp
xchg
inc
rep
dec
in
or
sub
cli
pop
ret
push
gs
sahf
aad
push
xchg
mov
mov
or
fdiv
mov
popf
cmp
mov
shr
push
add
in
dec
clc
dec
lahf
adc
lods
sub
neg
jge
mov
mov
in
dec
repz
sti
call
bound
pop
cli
call
arpl
dec
sub
mov
sub
in
dec
and
sti
ficom
add
mov
(bad)
jmp
dec
repz
dec
sti
call
bound
push
add
in
dec
icebp
ins
dec
xor
mov
sub
dec
sti
sub
mov
(bad)
in
dec
repz
dec
sti
call
bound
push
add
in
js
ins
dec
in
xor
push
adc
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
bound
data16
call
bound
dec
(bad)
call
es
in
dec
mov
adc
xlat
push
xchg
sbb
or
push
in
mov
cmps
sub
lea
mov
pop
mov
and
in
arpl
xchg
ins
pop
xchg
sub
popa
xor
stos
out
mov
jae
shl
or
dec
sbb
inc
call
movs
mov
push
adc
sub
call
bound
dec
out
call
jns
in
dec
in
ins
dec
sti
mov
mov
bound
sti
call
pushf
push
adc
inc
mov
push
mov
pop
push
fmul
movs
push
mov
ss
in
inc
popf
in
ds
jne
retf
push
sar
ret
mov
inc
inc
add
adc
or
xor
and
cdq
adc
cmp
jecxz
dec
(bad)
mov
xchg
jg
scas
in
fs
ins
dec
std
mov
xchg
pop
pusha
scas
in
fs
ins
dec
std
mov
test
dec
lea
sti
sahf
xor
in
lods
in
dec
fild
sti
pushf
add
inc
or
dec
repz
mov
call
xchg
scas
in
dec
loopne
push
repnz
sbb
(bad)
push
dec
pop
leave
mov
lods
int
mov
inc
loopne
push
fisttp
dec
cmp
push
loopne
push
lock
movs
and
adc
add
mov
test
jle
xor
mov
pop
mov
bound
(bad)
cli
fwait
adc
int
mov
mov
or
jno
repnz
loopne
jb
addr16
movs
(bad)
push
in
addr16
fld
cmps
cmp
fs
icebp
mov
stos
in
pop
scas
in
dec
ror
dec
sti
call
cs
in
dec
push
leave
mov
stos
xlat
js
out
aad
push
test
addr16
imul
std
ja
loope
or
popf
push
repnz
loopne
push
fisttp
dec
cmp
cld
inc
jge
js
test
test
scas
push
cmp
cdq
pop
call
movs
mov
push
adc
sahf
push
call
mov
in
popf
aad
setae
and
in
ins
fldcw
sti
mov
mov
inc
and
dec
repz
idiv
call
mov
jge
mov
sbb
les
in
dec
repz
sti
call
bound
fsincos
call
bound
dec
mov
xchg
mov
in
in
dec
gs
dec
sti
mov
pushf
sbb
retf
ins
dec
sti
pushf
adc
les
in
dec
repz
sti
call
bound
popa
outs
test
nop
clc
mov
add
shl
mov
jle
leave
dec
dec
sti
pop
call
adc
les
in
dec
repz
sti
call
bound
jb
gs
test
push
fadd
nop
jmp
mov
mov
cmp
sbb
cmc
sbb
sbb
sbb
into
dec
scas
lods
loopne
ins
dec
sti
call
pusha
scas
in
fwait
lock
dec
mov
xchg
mov
bound
dec
sti
pushf
adc
add
in
dec
repz
sti
fwait
adc
shl
dec
rep
int3
std
call
bound
dec
adc
mov
xchg
cmps
in
dec
int3
ins
dec
sti
nop
adc
les
out
repz
call
bound
dec
sti
call
pusha
scas
in
mov
ins
dec
ret
mov
bound
dec
sti
in
mov
bound
sti
fwait
push
mov
pushf
(bad)
bound
push
test
pop
dec
rep
retf
adc
push
bound
dec
jne
adc
(bad)
imul
dec
sti
inc
adc
les
in
dec
rep
dec
sti
call
bound
pop
cld
mov
stos
add
scas
jmp
rep
inc
sti
call
bound
dec
loope
adc
les
dec
loopne
icebp
mov
movs
or
sbb
in
ds
pop
lahf
cdq
and
pop
(bad)
paddd
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
dec
and
sub
out
nop
mov
mov
mov
mov
gs
fbstp
imul
sub
pop
push
fmul
mov
dec
cmp
dec
cmc
pusha
push
call
scas
mov
dec
rol
mov
cmp
in
dec
repz
inc
cli
call
push
push
test
cs
ins
bound
dec
sti
mov
mov
fadd
in
jae
call
bound
bound
xchg
test
push
in
std
ins
dec
sti
or
mov
bound
dec
sti
call
bound
xor
call
bound
dec
sti
call
out
scas
in
dec
jmp
dec
in
push
mov
mov
dec
repz
xchg
mov
dec
rep
pop
sti
call
jno
(bad)
fsubr
inc
mov
mov
mov
xchg
mov
mov
mov
mov
popf
push
adc
sub
call
bound
dec
jmp
xchg
mov
jg
in
cmps
xchg
mov
test
cmc
mov
push
inc
in
mov
mov
jno
aad
or
mov
mov
mov
mov
lods
std
mov
mov
bound
dec
sti
mov
mov
bound
dec
sti
fwait
push
mov
adc
dec
repz
nop
mov
(bad)
push
xchg
mov
cmps
scas
in
dec
js
dec
sti
imul
bound
dec
sti
call
bound
test
add
in
jge
ins
dec
sub
mov
pushf
scas
in
dec
loope
dec
sti
call
vpsllq
dec
sti
call
bound
pop
push
mov
in
cmps
test
rep
dec
repnz
jb
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jb
gs
test
push
cli
inc
movs
in
ds
push
mov
push
push
stc
inc
xchg
jecxz
leave
movs
or
push
ins
test
pushf
cld
ins
dec
std
mov
mov
mov
jae
test
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
mov
sub
leave
dec
pop
repnz
fadd
nop
call
mov
jb
fs
test
push
fadd
nop
out
cdq
daa
mov
in
dec
cmc
dec
push
call
imul
jecxz
dec
ret
cmp
inc
push
int
rep
dec
rol
adc
fistp
test
xchg
ins
dec
std
nop
add
pop
rcl
mov
je
in
xchg
or
pushf
push
adc
aaa
push
fidiv
mov
adc
adc
add
in
dec
rep
pop
shl
add
inc
xor
sti
call
bound
pop
cli
call
bound
dec
jle
adc
les
in
dec
sub
jge
mov
bound
dec
sti
call
bound
push
add
in
pushf
jecxz
dec
std
mov
and
imul
call
imul
mov
bound
dec
sti
call
bound
data16
call
popf
push
adc
call
mov
repnz
fmul
movs
adc
repnz
fdiv
sub
aam
scas
jmp
in
inc
in
push
mov
popf
mov
push
loop
dec
ret
xchg
jmp
scas
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
mov
xchg
push
div
lods
ror
sti
sbb
sar
mov
jne
leave
jge
dec
test
nop
repz
push
fadd
nop
in
mov
push
push
mov
lods
leave
jge
dec
hlt
mov
gs
jmp
cmp
les
arpl
ins
bound
adc
(bad)
jmp
add
pop
movs
push
mov
jmp
or
mov
call
popa
push
jmp
cmp
repnz
loopne
jb
fs
stos
aad
or
push
mov
xchg
xchg
(bad)
bound
jb
call
bound
dec
addr16
adc
(bad)
leave
scas
in
dec
mov
adc
les
in
dec
repz
dec
sti
call
bound
(bad)
cli
call
pusha
scas
in
ss
ins
dec
sti
call
fsubr
dec
sti
pop
adc
add
out
dec
repz
dec
sti
call
bound
add
call
bound
dec
test
adc
les
dec
sti
rcl
add
les
retf
push
loopne
jb
gs
std
adc
mov
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
call
push
scas
in
dec
enter
movs
adc
les
in
dec
repz
call
imul
inc
in
ds
pop
lea
test
test
nop
fld
(bad)
call
nop
into
mov
mov
bound
cmp
pop
mov
js
test
ins
dec
std
mov
mov
mov
jae
call
scas
adc
popf
push
cld
dec
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
in
jb
repz
lods
into
dec
pop
repnz
fcomp
movs
adc
test
push
rol
in
ds
mov
sbb
jmp
adc
pushf
push
adc
lahf
push
shr
nop
in
mov
addr16
jae
sar
nop
fiadd
xor
jmp
ret
jmp
jmp
shr
dec
cmc
pop
dec
sti
call
xor
dec
test
int3
pop
je
mov
jnp
std
test
mov
scas
push
adc
retf
setae
xchg
mov
push
jg
out
adc
push
adc
mov
cmp
jmp
adc
les
in
dec
cmc
dec
cli
stc
call
dec
(bad)
in
dec
cmc
dec
pop
cli
call
dec
xor
dec
cmc
dec
pop
stc
call
dec
sahf
in
dec
cmc
dec
mov
call
dec
sub
cmc
popa
push
jecxz
sbb
cmp
dec
jg
ret
movs
call
xlat
fs
dec
out
jg
ret
mov
inc
inc
jmp
call
scas
test
dec
loop
jnp
mov
mov
fwait
dec
cmp
arpl
xchg
mov
push
(bad)
mov
xchg
push
mov
jns
cmp
jg
ret
jle
inc
dec
in
dec
loopne
dec
sti
enter
lahf
mov
jae
mov
mov
dec
sti
call
bound
sti
sti
call
bound
dec
mov
xchg
mov
bound
dec
sti
inc
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
inc
mov
inc
fmul
push
jmp
les
jmp
adc
xlat
bound
dec
loop
adc
les
in
dec
out
popa
jb
gs
movs
(bad)
mov
cmp
sbb
or
inc
stos
out
enter
mov
inc
mov
push
(bad)
push
(bad)
gs
push
adc
call
bound
dec
jmp
xchg
mov
jge
loopne
jmp
sbb
jne
sbb
cmc
mov
mov
bound
mov
inc
mov
sub
out
mov
dec
sti
pushf
xor
popf
push
test
jmp
dec
cmp
or
push
cdq
adc
les
je
repz
stos
mov
xchg
inc
arpl
dec
std
mov
mov
pop
scas
in
dec
stc
ins
dec
jmp
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
nop
call
ds
in
dec
dec
ins
dec
sti
cs
les
in
dec
repz
call
jge
loopne
pop
jae
div
mov
bound
dec
sti
call
bound
push
sti
call
bound
jb
gs
cmps
(bad)
mov
xchg
ds
pop
xchg
scas
jmp
rol
cli
inc
in
popa
jb
gs
in
adc
call
push
ins
dec
sti
mov
les
loopne
rcl
dec
pop
mov
sbb
shl
mov
fwait
mov
popf
push
adc
cdq
push
shr
nop
out
mov
pushf
loopne
dec
std
mov
lods
leave
pop
inc
adc
call
dec
ss
dec
cmc
outs
sbb
xor
sbb
bound
dec
rcr
in
(bad)
bound
jb
call
bound
dec
outs
fwait
adc
(bad)
retf
scas
in
dec
xor
ret
add
mov
bound
dec
sti
call
bound
jns
call
arpl
dec
retf
fwait
adc
les
in
dec
sub
adc
les
in
dec
repz
dec
sti
call
bound
retf
adc
ins
pusha
scas
in
sti
rep
dec
hlt
call
mov
in
dec
cmc
dec
push
in
adc
jge
dec
xor
inc
xchg
dec
repz
dec
sti
call
bound
push
sti
call
bound
dec
rcr
mov
push
scas
in
dec
(bad)
ins
dec
sti
mov
mov
(bad)
out
in
dec
repz
call
imul
add
or
cdq
sub
in
ja
sbb
cmps
out
mov
jae
ror
lods
sub
fimul
repnz
fsubr
movs
pop
mov
in
dec
aad
inc
call
xchg
mov
push
adc
push
lock
xor
test
rep
dec
repnz
jb
in
dec
loopne
dec
sti
lea
les
in
dec
repz
dec
sti
call
jno
aad
or
jecxz
sbb
repnz
fadd
movs
sbb
xor
inc
xchg
in
ds
pop
cdq
mov
dec
retf
and
addr16
cmps
call
lock
mov
jno
and
mov
jno
cmc
pop
cmc
jae
call
imul
stc
pop
dec
sti
call
push
jae
call
imul
repz
out
mov
in
lods
in
dec
fist
sti
pushf
push
mov
jp
jmp
push
mov
pop
arpl
mov
fs
in
mov
lods
call
mov
mov
lods
lds
int
repnz
dec
rol
mov
pop
hlt
push
rol
gs
mov
pop
hlt
push
rol
jmp
(bad)
xlat
dec
rep
push
cdq
adc
les
xor
dec
fstp
mov
bound
pop
dec
les
out
dec
repz
jno
call
bound
(bad)
rcr
loopne
scas
in
ins
shr
sti
mov
mov
gs
retf
mov
xchg
pop
call
xchg
mov
lahf
push
adc
imul
xchg
mov
lahf
push
adc
dec
sar
call
dec
push
dec
sti
call
bound
dec
rcr
mov
bound
or
cdq
adc
push
mov
mov
xchg
push
call
mov
mov
xchg
inc
fucomi
push
mov
bound
dec
std
cmc
sbb
les
jmp
sub
sti
xchg
adc
lds
cld
inc
mov
dec
sti
call
bound
(bad)
cli
call
popa
scas
in
add
ins
dec
out
adc
les
outs
dec
sti
mov
mov
bound
dec
repz
dec
sti
call
bound
inc
sti
call
arpl
dec
movs
cdq
adc
les
dec
cmp
sti
xchg
adc
add
jmp
sti
call
bound
inc
clc
call
arpl
dec
sub
adc
les
lods
in
dec
jbe
dec
sti
pop
pop
mov
(bad)
xlat
out
dec
repz
call
bound
je
call
popa
scas
in
movs
lock
dec
jmp
adc
les
in
dec
push
ins
dec
sti
jnp
mov
bound
dec
sti
call
bound
pop
lock
scas
xlat
imul
mov
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fild
mov
mov
bound
dec
sti
call
bound
add
call
bound
dec
lods
call
cmp
ins
dec
sti
std
adc
les
in
dec
repz
dec
sti
call
pushf
push
adc
inc
mov
pop
movs
cdq
sub
(bad)
movs
in
jno
push
test
nop
loope
cdq
sbb
(bad)
xchg
in
dec
popa
sub
mov
and
inc
and
ds
mov
add
test
jmp
mov
fild
inc
push
fadd
push
in
mov
xor
jb
mov
pop
mov
push
jge
mov
pop
popa
jo
add
jae
out
leave
jg
ret
jae
inc
dec
inc
retf
mov
add
add
inc
xchg
dec
repz
dec
sti
call
bound
push
sti
call
bound
dec
(bad)
call
push
scas
in
dec
retf
sti
cmps
adc
les
in
dec
repz
call
imul
jmp
pop
mov
sub
in
jge
sbb
sub
mov
addr16
ror
scas
sub
repz
repnz
fsubr
movs
cmp
pand
push
push
out
inc
in
push
mov
(bad)
dec
cmp
jae
shl
scas
sub
out
test
stos
in
mov
movs
or
test
push
std
inc
fwait
in
ds
sbb
fsubr
mov
sub
bound
inc
in
push
mov
arpl
popf
mov
pop
stc
jae
call
imul
clc
jg
ret
inc
jmp
xor
inc
push
pop
lock
lods
ror
icebp
pop
cli
jae
call
popf
mov
push
adc
cmp
call
adc
inc
stc
mov
xor
push
xchg
ror
dec
cmp
inc
push
pop
lock
lods
into
jno
repnz
loopne
push
ror
cmp
lahf
dec
rep
push
cdq
adc
les
es
dec
sti
call
or
inc
pop
lock
lods
fbstp
bnd
addr16
jmp
fld
out
leave
jg
ret
mov
xchg
sub
in
ins
outs
ins
dec
sti
mov
mov
mov
in
rep
inc
in
mov
sahf
push
adc
jg
in
push
mov
pusha
dec
cmp
loop
fninit
adc
add
vpsllq
test
aas
popf
push
repnz
loopne
push
ror
cmp
inc
arpl
test
test
scas
or
popf
push
in
sti
ins
dec
sti
mov
call
outs
cmp
call
je
out
repz
std
sbb
addr16
pop
clc
push
into
add
movs
adc
out
test
mov
cdq
mov
inc
retf
or
adc
in
ins
inc
outs
dec
sti
mov
mov
mov
ins
push
cdq
adc
les
inc
retf
push
mov
gs
xlat
imul
movs
jne
out
out
xchg
mov
mov
stos
add
lods
in
dec
rcl
sti
call
jge
inc
xchg
mov
gs
push
mov
(bad)
bound
dec
sar
mov
jbe
addr16
pusha
jmp
mov
inc
ret
push
out
inc
inc
mov
lods
inc
cmps
sti
call
mov
in
rep
pop
inc
sbb
popf
push
neg
jae
call
imul
cld
jg
in
push
mov
sbb
popf
mov
pop
repz
xchg
push
arpl
dec
std
mov
mov
bound
(bad)
clc
fwait
adc
iret
pop
repnz
mov
jae
call
popf
mov
dec
xor
call
dec
lods
in
dec
cmc
jae
call
pushf
lods
(bad)
jno
aad
or
mov
(bad)
(bad)
out
dec
repz
dec
sti
mov
test
lahf
mov
dec
repz
dec
sti
call
bound
(bad)
cli
call
bound
dec
movs
fwait
adc
les
dec
arpl
sti
mov
mov
(bad)
shr
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
cmp
xchg
mov
jb
in
dec
ins
dec
sti
mov
add
in
dec
repz
dec
sti
call
imul
cld
fild
les
out
rep
inc
sti
call
bound
dec
in
adc
les
dec
fldcw
mov
mov
bound
dec
sti
call
bound
push
sub
iret
dec
pop
repnz
fadd
movs
sbb
push
fstp
cvtdq2ps
mov
out
into
movs
push
mov
ds
out
test
cmp
pop
mov
push
loope
mov
lea
pop
pop
test
push
jecxz
inc
ret
dec
jmp
inc
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
pop
call
imul
add
shl
nop
in
mov
addr16
jae
sar
mov
dec
test
gs
pop
cli
push
aaa
add
fs
lea
popa
adc
cdq
and
out
inc
nop
in
xchg
add
gs
pop
cli
push
sbb
mov
in
lods
in
dec
rol
dec
sti
call
jo
repnz
jg
jmp
xchg
mov
fs
loopne
jb
fs
mov
inc
ret
mov
inc
dec
dec
pusha
pop
cld
test
cmp
jnp
in
mov
movs
adc
adc
call
gs
pop
cli
push
xchg
push
gs
cmps
aad
push
xchg
mov
xchg
ds
pop
cdq
mov
inc
retf
xlat
mov
or
addr16
pop
hlt
jae
call
imul
(bad)
dec
sbb
call
dec
retf
cmc
pusha
push
cwde
adc
les
xchg
push
sti
test
test
xchg
dec
outs
ins
dec
sti
adc
les
in
dec
repz
sti
call
bound
sar
call
bound
dec
jne
adc
(bad)
repz
in
dec
jmp
inc
in
push
mov
and
dec
repz
xchg
mov
dec
rep
pop
sti
call
jno
(bad)
fsubr
inc
mov
mov
cmps
sub
out
xchg
mov
mov
mov
mov
popf
push
adc
sub
call
bound
dec
call
xchg
mov
jle
out
mov
ds
pop
popf
cdq
ss
(bad)
mov
xchg
ds
sbb
out
rcl
sbb
mul
jbe
sbb
xchg
mov
and
dec
sti
call
(bad)
int
dec
repz
dec
sti
call
scas
jae
rep
inc
sti
call
daa
mov
dec
repz
dec
sti
call
bound
data16
call
arpl
dec
sti
call
and
dec
sti
xor
les
in
dec
rep
dec
sti
call
bound
sub
call
arpl
dec
rcr
mov
lods
scas
in
dec
movs
outs
dec
sti
xchg
adc
les
in
dec
repz
dec
sti
call
bound
pop
cli
call
push
jg
ret
(bad)
jmp
scas
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
int3
call
pop
scas
in
dec
mov
dec
sti
fcom
les
loope
std
push
dec
add
jmp
pop
repnz
fadd
movs
or
rcpps
inc
xchg
in
ds
pop
lahf
cdq
adc
(bad)
sahf
in
pusha
popa
xor
fwait
cdq
add
(bad)
(bad)
jmp
mov
xchg
ds
sbb
pop
push
loopne
push
call
cwde
mov
push
adc
sub
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
call
imul
rol
in
ds
sbb
or
inc
test
xchg
gs
mov
cmp
inc
cdq
in
push
movs
sbb
adc
xchg
ds
push
mov
or
inc
test
pop
xchg
pop
fdivr
xchg
push
xchg
mov
imul
mov
bound
dec
xlat
xchg
or
lahf
push
adc
inc
mov
sbb
adc
lea
mov
test
je
xchg
mov
cmp
inc
xor
dec
call
cdq
mov
movs
xor
icebp
ins
dec
cld
mov
xchg
scas
popa
scas
in
fs
ins
dec
std
mov
mov
jno
repnz
loopne
jb
addr16
inc
imul
adc
inc
lahf
out
dec
repz
push
sti
call
pop
fist
mov
jne
lock
test
scas
fidivr
popf
push
icebp
pop
sti
jbe
lock
test
scas
jmp
popf
push
jmp
sbb
fild
jecxz
mov
mov
popf
pop
mov
fs
pop
clc
jae
call
imul
loopne
push
loopne
sbb
push
fidivr
jbe
cmc
mov
movs
xlat
imul
mov
imul
test
bound
dec
sti
add
(bad)
bound
dec
dec
call
fisubr
dec
sti
call
(bad)
enter
iret
dec
sti
call
bound
mov
call
bound
dec
inc
call
jns
loope
(bad)
jg
shl
add
inc
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
inc
ret
loop
inc
dec
(bad)
mov
test
jmp
adc
rol
sub
imul
hlt
mov
mov
dec
repz
sti
call
bound
pop
sti
call
jno
aad
or
mov
nop
ds
pop
lahf
cdq
xor
fadd
mov
outs
mov
pop
cld
push
dec
add
jmp
mov
mov
sub
in
lods
in
dec
rcl
cli
add
in
dec
shl
dec
sti
call
gs
inc
in
arpl
mov
movs
xlat
outs
mov
pop
cld
push
std
add
mov
out
scas
dec
push
fwait
adc
les
mov
pop
dec
mov
push
ins
push
cdq
adc
les
imul
stc
mov
inc
pop
push
retf
(bad)
call
dec
mov
push
cdq
adc
les
xchg
push
sti
add
retf
in
jb
ins
dec
jae
adc
les
ins
dec
sti
call
bound
in
dec
repz
dec
sti
call
bound
dec
sti
call
jno
cmc
pop
jecxz
repz
shl
inc
rep
dec
lock
jae
in
dec
out
dec
sti
mov
stos
sub
movs
out
fwait
mov
mov
sub
out
mov
paddd
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
jecxz
push
add
jmp
mov
mov
mov
mov
jb
scas
mov
xchg
push
shr
nop
lock
push
fmul
cli
xor
mov
bound
dec
lods
fwait
adc
les
in
dec
stc
ins
dec
cli
call
bound
dec
sti
call
bound
dec
clc
call
jae
loope
jmp
pop
sti
call
arpl
dec
xchg
mov
mov
in
dec
xchg
ins
dec
sti
inc
adc
les
in
dec
repz
sti
call
bound
xchg
sti
call
arpl
dec
in
adc
les
in
dec
mov
push
adc
xlat
push
inc
fldl2e
nop
push
mov
xchg
mov
bound
dec
hlt
call
jne
in
dec
jmp
adc
les
in
dec
repz
dec
sti
call
outs
xchg
mov
or
push
out
mov
mov
dec
inc
repnz
fadd
nop
in
cdq
and
fdiv
nop
aad
mov
push
clc
jg
ret
mov
mov
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
fs
mov
popa
push
cmp
and
push
push
inc
loop
pop
movs
or
adc
mov
movs
or
or
mov
jnp
nop
fidiv
mul
dec
std
mov
xchg
bound
dec
std
mov
test
pop
scas
in
dec
shl
dec
sti
call
pop
scas
in
dec
(bad)
jae
call
imul
loopne
jb
fs
movs
repnz
loopne
jb
fs
mov
pop
call
test
loope
pop
rcr
scas
xlat
outs
xchg
(bad)
mov
xchg
push
call
call
loopne
pop
call
call
rol
dec
sti
call
xor
in
dec
stc
mov
fiadd
xlat
les
loope
xchg
add
mov
inc
dec
in
dec
repz
int3
sti
call
mov
jge
mov
sahf
mov
bound
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
outs
call
clc
scas
in
dec
rep
dec
sti
adc
mov
je
loopne
inc
jge
mov
xchg
mov
bound
dec
sti
call
bound
push
call
mov
repnz
fcomp
nop
in
lea
push
loopne
jb
gs
scas
in
inc
rep
dec
neg
mov
jno
in
dec
in
dec
sti
lea
mov
(bad)
dec
cmp
jae
shr
nop
out
mov
addr16
push
mov
movs
dec
cmp
inc
mov
sub
test
or
call
bound
dec
or
adc
les
in
dec
loopne
dec
sti
inc
adc
jae
sbb
pop
icebp
fild
(bad)
bound
leave
clc
call
bound
dec
ficomp
mov
mov
ins
dec
sti
movs
pop
mov
bound
dec
repz
dec
sti
call
bound
call
add
in
mov
ins
dec
sub
xchg
mov
iret
scas
in
dec
shr
push
mov
bound
sti
call
bound
cwde
cli
call
popa
scas
in
xchg
ins
dec
hlt
fwait
adc
les
outs
dec
sti
sub
mov
bound
dec
repz
mov
bound
pop
clc
call
popa
scas
in
dec
rep
dec
mov
adc
les
lods
in
dec
sbb
sti
jg
mov
bound
inc
ret
nop
jmp
xchg
in
mov
xchg
pop
repnz
mov
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fild
stos
adc
les
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
dec
cmps
call
push
scas
in
dec
fwait
ins
dec
sti
not
les
std
pop
stc
push
iret
add
mov
sbb
rol
mov
push
pop
mov
and
(bad)
lods
in
pop
popa
test
nop
(bad)
(bad)
sahf
in
pop
popa
xor
mov
xor
shl
mov
sub
in
dec
sbb
inc
fcomp
push
jecxz
mov
fild
dec
push
in
inc
call
pop
mov
(bad)
(bad)
js
imul
neg
jbe
icebp
mov
lods
fnsave
neg
push
mov
gs
scas
in
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
aam
dec
sti
mov
mov
bound
sti
call
bound
jb
addr16
mov
mov
test
nop
jmp
mov
adc
and
mov
(bad)
lahf
in
dec
popa
xor
add
movs
mov
xor
shl
test
push
xchg
push
out
mov
movs
bsr
inc
hlt
sbb
sar
stos
sub
out
mov
jae
ror
lods
sub
ror
repnz
fsub
mov
dec
adc
fld
mov
inc
retf
jb
add
pop
fwait
xchg
xchg
mov
inc
and
dec
repz
sar
adc
bound
dec
ror
adc
(bad)
out
add
test
mov
mov
je
repz
test
scas
push
inc
loopne
push
call
imul
cli
jbe
icebp
mov
stos
xlat
push
jecxz
cli
jbe
icebp
mov
mov
inc
sti
dec
idiv
call
dec
fucomip
dec
cmc
jg
in
push
mov
test
mov
bound
add
cmp
dec
cmp
jg
repnz
cmp
dec
cmp
jae
call
scas
sar
popf
push
cld
dec
loop
shl
test
test
scas
loope
popf
push
in
shl
rcl
adc
das
in
cmc
fs
std
cdq
xor
in
lods
in
dec
fist
sti
pushf
xor
in
lods
in
dec
fild
dec
sti
pushf
cmp
pop
mov
popa
or
test
mov
inc
mov
push
test
mov
xchg
ds
or
int
repnz
dec
rol
adc
sub
inc
outs
dec
sti
mov
mov
popa
scas
in
ins
das
outs
dec
sti
mov
mov
fs
inc
call
lahf
test
push
xchg
pop
std
mov
xor
jno
aad
or
dec
pop
mov
je
xchg
mov
test
nop
repnz
inc
jmp
out
inc
dec
jmp
loop
sbb
fidiv
aad
or
mov
jge
inc
and
test
inc
retf
push
mov
add
jge
inc
jg
ret
mov
inc
inc
in
dec
loopne
dec
sti
in
adc
les
lds
ins
dec
rol
mov
bound
dec
sti
call
bound
dec
sti
call
bound
dec
std
mov
test
rep
dec
cld
call
outs
scas
in
dec
jecxz
dec
sti
mov
nop
mov
cdq
ds
sbb
cwde
pop
shr
nop
out
inc
test
bound
dec
sti
pushf
xor
mov
dec
sti
call
arpl
jno
call
arpl
dec
aaa
fwait
adc
les
lods
in
dec
jmp
dec
sti
arpl
add
in
dec
repz
dec
sti
call
bound
jno
call
arpl
dec
pop
cdq
adc
les
in
dec
xor
sti
sbb
mov
bound
dec
sti
call
bound
js
call
popa
scas
in
stos
repnz
dec
and
mov
or
push
mov
bound
dec
sti
call
bound
jmp
add
in
scas
repnz
dec
fcomp
mov
adc
dec
sti
imul
les
in
dec
repz
dec
sti
call
bound
call
xchg
xlat
addr16
adc
mov
xor
dec
cmp
test
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jg
call
bound
dec
mov
xchg
mov
cs
in
dec
mov
adc
les
in
dec
repz
call
bound
daa
sti
call
bound
dec
in
push
mov
popf
mov
addr16
jae
shr
cdq
sub
in
dec
inc
repnz
mov
mov
movs
sbb
xor
xlat
inc
lahf
in
ds
sbb
cmp
pop
mov
jp
add
in
popa
popa
dec
test
mov
cdq
imul
out
inc
loop
mov
adc
jo
jo
std
inc
shl
xchg
cs
popf
cdq
push
jge
mov
jne
jb
cmp
bound
dec
out
adc
jge
dec
jg
ret
inc
call
retf
bound
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
bound
dec
sti
call
bound
jl
call
bound
dec
ret
or
inc
dec
(bad)
mov
cmp
pop
mov
or
inc
stos
in
ds
movs
cdq
sbb
add
in
dec
popa
sub
lods
out
stos
mov
addr16
jae
rcr
scas
adc
cmps
mov
xchg
push
shr
nop
lock
sbb
sar
mov
jbe
ror
cmc
sub
ror
scas
sub
retf
dec
(bad)
hlt
cmp
rcr
ret
mov
dec
repz
in
sbb
addr16
in
mov
xchg
dec
fist
add
lds
rep
dec
(bad)
push
mov
bound
dec
clc
mov
xchg
aaa
arpl
dec
std
mov
xchg
sub
in
fs
dec
std
mov
ret
pop
xchg
pop
frstor
lahf
sub
fild
sbb
push
and
push
ja
inc
dec
cmp
jp
stc
mov
xchg
(bad)
arpl
dec
std
xchg
or
addr16
xchg
hlt
pop
mov
bound
dec
test
mov
xchg
dec
fcmovne
push
mov
bound
dec
in
or
sub
mov
cmps
int
lock
dec
fld
push
mov
bound
dec
fistp
mov
bound
dec
sti
mov
call
ins
repnz
test
scas
inc
aas
popf
push
bnd
cdq
push
lock
cmps
adc
adc
lahf
push
not
mov
mov
jo
or
les
jno
rep
bound
mov
je
xchg
mov
xchg
xor
in
scas
in
dec
fistp
dec
sti
pushf
sbb
push
in
adc
gs
icebp
mov
or
(bad)
mov
xchg
mov
popf
mov
add
test
cld
andps
mov
inc
mov
or
mov
or
push
call
test
add
xchg
mov
(bad)
ds
sbb
mov
dec
retf
push
mov
gs
int3
dec
cmps
repnz
jb
popa
jmp
mov
dec
out
jg
ret
sub
dec
loopne
loopne
push
call
imul
rep
dec
loopne
adc
jno
in
pop
in
addr16
out
or
adc
scas
in
dec
dec
ins
dec
sti
and
mov
bound
in
dec
repz
dec
sti
call
bound
mov
call
bound
dec
popf
fwait
adc
les
ins
dec
sti
xor
mov
(bad)
fsubrp
dec
repz
sti
call
jle
jno
loop
inc
sti
call
bound
dec
call
xchg
mov
jnp
in
dec
out
ins
dec
sti
mov
mov
bound
pop
call
imul
fcomp
nop
in
(bad)
cdq
sub
in
jg
sbb
imul
hlt
jo
jmp
cmp
push
sti
call
bound
pop
sti
call
bound
push
ret
xchg
jmp
test
push
cld
inc
movs
in
ds
pop
call
jmp
push
cmps
cmp
popf
mov
mov
mov
movs
sub
out
test
dec
sti
sahf
sub
add
mov
push
xchg
mov
mov
stos
pop
and
or
pop
cld
xchg
stos
pop
and
or
inc
sti
call
inc
sti
out
dec
repz
add
call
inc
adc
dec
repz
call
inc
xchg
mov
inc
dec
pop
retf
(bad)
call
data16
jb
rep
push
cdq
adc
les
dec
rep
push
cdq
adc
les
dec
repz
loopne
adc
leave
jno
aad
or
add
adc
scas
cld
push
push
adc
mov
adc
scas
cld
inc
push
adc
call
daa
mov
dec
repz
dec
sti
call
bound
sar
call
arpl
dec
int3
cwde
adc
les
outs
dec
sti
test
add
in
dec
repz
sti
call
bound
inc
cli
call
arpl
dec
push
call
and
dec
sti
sub
mov
bound
dec
repz
sti
call
bound
push
in
or
jae
test
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jns
call
bound
dec
mov
mov
mov
jae
shr
mov
lods
fisttp
sti
sbb
sar
sub
mov
jae
ror
mov
dec
pusha
repnz
fsub
stos
sub
ror
cli
addr16
jo
repz
test
mov
mov
xchg
pop
repz
add
loope
rep
pop
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
out
jg
ret
add
inc
dec
loopne
add
shl
stos
sub
int
dec
repnz
fmul
mov
dec
jns
pop
loope
push
call
imul
sbb
popa
pop
test
nop
call
mov
lods
jmp
pop
mov
in
dec
rcl
sti
call
and
mov
cmp
in
dec
test
xchg
mov
dec
cmp
dec
cmc
dec
sar
adc
les
in
dec
cmc
inc
inc
out
or
jge
(bad)
mov
test
cmps
cmp
cmp
jp
repz
test
mov
mov
xchg
push
shl
add
in
dec
rol
dec
sti
call
xchg
sbb
call
jge
repnz
cli
dec
sti
pushf
xor
in
lods
in
dec
fld
dec
sti
pushf
imul
scas
in
dec
rol
dec
sti
call
scas
in
dec
shl
dec
sti
call
and
mov
cmp
in
dec
test
xchg
mov
dec
cmp
dec
cmc
jnp
mov
stos
mov
bound
push
call
imul
loopne
jb
addr16
mov
push
ret
mov
mov
bound
dec
fist
pop
mov
bound
sbb
mov
mov
bound
dec
sti
mov
call
outs
dec
sti
mov
call
je
out
ret
inc
jmp
xlat
jo
repnz
out
push
add
jmp
mov
repnz
pop
mov
mov
dec
jbe
call
dec
shr
dec
cmc
mov
fidivr
xchg
or
scas
in
fs
ins
dec
std
nop
xor
in
lods
in
dec
fist
dec
sti
pushf
xor
in
lods
in
dec
fist
dec
sti
pushf
retf
mov
jae
test
rep
dec
addr16
shr
sti
add
mov
(bad)
stc
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
jno
adc
fld
repz
jge
mov
nop
mov
bound
dec
sti
call
bound
push
sti
call
in
loope
or
push
test
dec
pop
call
out
inc
lods
in
ds
pop
test
das
or
mov
xchg
push
mov
bound
dec
jmp
adc
les
dec
in
arpl
mov
lods
into
dec
pop
lock
adc
ds
sbb
repnz
loopne
jb
gs
inc
mul
jnp
adc
pop
inc
xor
dec
fisttp
call
arpl
call
sub
outs
fisttp
test
rep
dec
lock
xchg
sbb
lea
inc
adc
aad
jmp
call
arpl
dec
sub
adc
les
scas
in
dec
in
dec
sti
jp
mov
bound
dec
sti
call
bound
xor
call
arpl
dec
cmp
mov
mov
ins
dec
sti
test
test
and
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fild
xchg
movs
cmp
dec
cmp
inc
mov
pop
cdq
cdq
das
je
add
in
ds
pop
call
out
inc
lahf
out
(bad)
mov
jbe
(bad)
push
retf
dec
mov
gs
inc
xchg
mov
bound
dec
sti
call
bound
push
sti
call
jno
bnd
xchg
mov
test
cmc
mov
addr16
jae
shl
nop
out
cmps
out
xor
out
lea
movs
cmp
popf
mov
mov
mov
movs
sub
test
stos
loopne
sbb
jae
sti
ins
in
int3
stos
cmp
jae
cli
xor
ins
dec
(bad)
mov
xchg
dec
bound
dec
std
cmp
test
scas
xor
popf
push
sti
pop
out
pop
in
outs
inc
jmp
xlat
push
jg
ret
imul
inc
inc
push
retf
(bad)
call
jne
bnd
xchg
mov
mov
mov
data16
ins
push
cdq
adc
les
pop
stc
jne
out
lea
movs
cmp
jmp
shr
xchg
cmp
cld
pop
in
push
pop
add
mov
(bad)
bound
dec
rol
adc
sar
bnd
and
and
in
ins
call
jo
add
in
dec
shl
lds
xchg
mov
bound
pmaddwd
mov
push
in
dec
jb
dec
sti
in
adc
les
in
dec
rep
dec
sti
call
bound
(bad)
sti
call
bound
dec
loop
add
jae
test
rep
dec
(bad)
call
imul
mov
bound
push
shl
nop
test
push
fadd
test
xchg
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
cmc
addr16
or
mov
pop
out
mov
fwait
cmp
dec
cmp
inc
mov
sub
test
loopne
repz
mov
inc
jmp
call
arpl
dec
bound
mov
repnz
in
dec
outs
ins
dec
sti
sbb
mov
bound
dec
sti
call
bound
pop
call
mov
jo
mov
dec
std
call
ins
scas
in
dec
loope
dec
sti
mov
les
in
dec
repz
call
cwde
cdq
cmp
mov
popa
or
mov
addr16
jae
sar
test
xchg
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
icebp
addr16
push
nop
out
mov
pop
loopne
push
repnz
sub
test
pop
fadd
nop
jmp
mov
test
call
dec
sbb
dec
cmc
dec
mov
call
dec
push
in
dec
cmc
adc
call
bound
bound
adc
les
or
mov
mov
call
ss
lds
int
sbb
sbb
mov
mov
popa
scas
in
ins
push
outs
dec
sti
mov
mov
jge
(bad)
ins
dec
and
xchg
mov
inc
in
in
dec
repz
cmps
sti
call
bound
bound
xchg
lods
retf
jno
cld
outs
mov
dec
sti
call
bound
loop
call
bound
dec
bound
mov
cmp
dec
sti
mov
mov
(bad)
lock
sti
call
jne
loope
rol
jmp
ret
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
add
push
fcom
movs
or
add
inc
mov
pop
fwait
cdq
and
cli
jg
ret
cli
jmp
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
cli
addr16
push
nop
out
mov
movs
in
pop
in
push
cdq
cmp
(bad)
mov
mov
lods
sub
out
test
std
dec
repz
mov
bound
push
cdq
adc
les
dec
dec
repz
out
call
bound
dec
shl
adc
les
int
sbb
sbb
mov
mov
bound
dec
sti
mov
call
xchg
stos
xchg
in
lods
in
dec
shr
dec
sti
call
push
scas
in
dec
rcr
sti
call
jg
int
rep
dec
fist
adc
les
dec
dec
push
mov
nop
ins
les
into
pop
shr
inc
sti
call
bound
dec
sti
call
jmp
sti
pop
adc
les
in
dec
repz
sti
call
bound
push
call
mov
jmp
rep
dec
sti
call
bound
dec
out
call
jge
(bad)
outs
fdivr
pop
shl
mov
arpl
addr16
push
nop
out
mov
dec
rep
dec
repnz
ins
scas
in
dec
loopne
dec
sti
lea
xlat
inc
xchg
mov
or
push
shr
xrelease
sbb
adc
xchg
cld
pop
push
adc
mov
mov
mov
dec
sti
sahf
sub
add
leave
pop
xlat
sub
call
bound
dec
addr16
adc
les
scas
in
dec
aaa
ins
dec
sti
fst
add
les
in
dec
repz
mov
bound
hlt
sti
call
bound
dec
sti
call
fsubr
push
in
push
lahf
sub
mov
dec
repz
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
jns
leave
je
xchg
mov
test
nop
cmc
(bad)
cdq
ss
(bad)
mov
mov
mov
xor
rol
mov
inc
movs
xlat
ins
mov
push
in
addr16
fbld
mov
dec
repz
sti
call
bound
pop
sti
call
imul
test
nop
cmc
mov
out
inc
mov
sub
xlat
jnp
out
xlat
push
mov
or
cli
sbb
adc
push
mov
sar
sti
call
fsubr
scas
stc
call
dec
sub
dec
cmc
dec
test
sub
jmp
repz
jmp
int
repnz
dec
(bad)
mov
bound
dec
sti
mov
call
arpl
mov
sub
cmp
hlt
push
clc
jg
ret
clc
jmp
dec
in
ins
cmp
sti
mov
mov
mov
mov
sti
pushf
imul
inc
imul
adc
inc
dec
in
dec
repz
cmc
cli
call
push
push
scas
(bad)
imul
loopne
jb
fs
scas
in
dec
shl
add
push
dec
rep
push
call
fs
push
loopne
pop
(bad)
sbb
bound
sar
call
bound
dec
repz
les
dec
sti
or
les
in
dec
repz
dec
sti
call
js
(bad)
imul
adc
bound
inc
sti
call
bound
dec
out
adc
loope
and
inc
fcom
push
mov
repnz
fadd
mov
je
xlat
jb
std
or
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
jno
aad
or
mov
mov
movs
or
inc
sti
addr16
je
adc
xchg
cld
push
push
adc
mov
mov
mov
dec
sti
call
jl
retf
pop
aad
inc
sti
call
bound
dec
stos
call
es
in
dec
hlt
ins
dec
sti
mov
mov
bound
dec
repz
ror
test
rep
dec
repz
ins
scas
in
dec
loop
dec
sti
add
sub
(bad)
mov
mov
lods
sub
fsub
jmp
call
aas
imul
ret
(bad)
push
jmp
mov
xchg
dec
sti
rcl
mov
bound
dec
sti
call
bound
push
add
in
clc
cmc
ins
dec
hlt
cwde
adc
les
in
dec
stc
ins
dec
cli
call
(bad)
leave
in
dec
repz
inc
sti
call
bound
add
call
outs
scas
in
push
rep
dec
icebp
call
mov
ins
dec
sti
daa
sbb
bound
jp
call
bound
sbb
mov
mov
bound
pop
fild
cmp
bound
dec
sti
fwait
add
bound
dec
rcl
adc
les
int
rep
dec
sar
adc
(bad)
dec
mov
pop
fild
push
mov
pop
jle
dec
sti
fwait
sbb
jbe
cli
pop
in
jns
into
mov
mov
bound
dec
sti
mov
mov
bound
outs
in
or
sub
les
xor
pop
mov
bound
pop
dec
mov
and
dec
sti
popf
adc
les
in
dec
repz
dec
sti
call
bound
dec
fnsave
mov
scas
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
dec
push
icebp
addr16
ds
sbb
pop
adc
scas
in
dec
aad
call
mov
dec
rep
pop
sti
call
bound
push
retf
sahf
adc
(bad)
bound
int3
stos
xchg
in
inc
scas
in
dec
aad
push
fidivr
xchg
daa
bound
dec
std
nop
or
pop
mov
scas
arpl
pop
not
mov
bound
dec
mov
xchg
mov
fs
in
dec
mov
dec
sti
lods
adc
les
repz
repz
rol
mov
bound
dec
sti
call
bound
push
div
test
mov
mov
imul
mov
inc
mov
imul
es
in
dec
rep
pop
call
xchg
mov
push
movs
in
pop
ins
dec
out
call
bound
dec
dec
mov
inc
or
jbe
call
jae
test
rep
dec
xchg
mov
pop
lods
in
dec
pushf
outs
dec
sti
lds
mov
bound
repz
dec
sti
call
bound
sbb
call
bound
dec
push
call
fild
dec
sti
inc
push
mov
bound
out
dec
repz
mov
bound
add
call
popa
scas
in
xor
adc
les
stos
in
dec
push
ins
dec
sti
sub
mov
bound
dec
repz
dec
sti
call
bound
dec
stc
call
popa
scas
in
pop
icebp
ins
dec
ds
adc
les
ins
dec
sti
inc
pop
mov
bound
in
dec
repz
sti
call
bound
(bad)
call
ins
mov
mov
mov
les
in
dec
(bad)
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
pusha
sti
call
bound
dec
rcr
les
scas
in
dec
mov
dec
sti
rcl
les
in
dec
repz
dec
sti
call
bound
sub
call
bound
in
push
jmp
dec
repnz
shl
nop
jmp
adc
and
sbb
jge
(bad)
cwde
in
jo
sub
stos
out
stos
mov
addr16
jnp
cmp
mov
(bad)
stc
in
ds
mov
inc
push
jecxz
out
loop
mov
or
das
(bad)
je
jmp
sbb
mov
mov
mov
adc
in
dec
(bad)
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
data16
call
bound
dec
(bad)
call
es
in
dec
in
jb
push
mov
lods
jecxz
pop
lock
shl
sub
dec
dec
repnz
movs
pop
mov
cmp
inc
cwde
in
ds
pushf
cdq
push
jge
(bad)
mov
gs
cmp
movs
out
fdiv
inc
call
imul
in
cmps
loopne
jmp
test
pop
fdiv
movs
adc
repz
rcl
stos
sub
fisttp
repnz
fsubr
movs
adc
(bad)
jbe
push
push
jb
jmp
sti
ins
call
mov
call
sbb
sti
call
lahf
push
adc
call
add
dec
cmp
(bad)
push
out
jg
in
push
adc
gs
cmp
push
pop
sar
in
pop
scas
in
dec
in
mov
adc
cmc
jp
sub
adc
imul
mov
jo
jg
sbb
popf
push
hlt
pop
test
sub
fnstenv
repnz
loopne
jb
jmp
les
(bad)
jo
push
pop
fstp
cmp
bound
pop
push
mov
mov
dec
repz
aas
pop
cwde
mov
mov
jae
call
mov
or
pop
mov
in
dec
cmc
into
pop
mov
(bad)
jecxz
pop
mov
or
jno
aad
setae
sbb
mov
mov
mov
mov
bound
bound
adc
les
icebp
dec
rep
bound
adc
mov
in
dec
cmc
into
push
fmul
dec
cmp
dec
in
bound
mov
test
enter
push
mov
mov
dec
repz
mov
call
dec
mov
dec
cmc
dec
push
in
mov
cld
les
rol
sti
call
cmp
pop
mov
scas
cmp
popf
push
lock
ja
inc
call
imul
bnd
jmp
xchg
je
aam
repz
jmp
rol
(bad)
pop
pop
push
pop
add
lods
adc
lods
retf
aad
or
loope
test
fld
je
xchg
mov
mov
mov
xor
dec
pop
mov
mov
or
loopne
jb
popa
jmp
mov
mov
or
out
jecxz
pop
push
mov
gs
(bad)
xchg
dec
rep
push
fwait
adc
les
pop
test
sub
fnstenv
repnz
loopne
jb
pusha
jmp
loope
push
rep
dec
sar
movs
iret
inc
js
retf
(bad)
call
int
dec
mov
xchg
push
jmp
test
mov
jg
out
xchg
movs
push
test
mov
jg
in
mov
sbb
mov
jae
cld
jno
jg
cld
(bad)
ret
mov
test
aad
jmp
call
bound
dec
mov
adc
(bad)
sti
scas
in
dec
gs
dec
sti
rcl
les
in
dec
repz
call
bound
push
call
es
jo
sub
(bad)
call
imul
mov
bound
push
shl
nop
test
push
fadd
test
mov
mov
jge
mov
lahf
mov
bound
dec
sti
call
bound
jb
gs
pop
sti
add
shl
nop
jmp
movs
(bad)
cld
retf
pop
mov
add
je
add
test
xor
fisttp
in
dec
cmc
jg
out
movs
stos
mov
cmps
les
sub
repnz
call
bound
dec
inc
call
bound
dec
sti
mov
add
mov
bound
dec
sti
call
bound
push
cli
call
bound
dec
loope
xchg
movs
or
imul
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
adc
jecxz
scas
in
push
loopne
jb
gs
test
push
inc
in
ds
sbb
push
fld
push
fmul
fimul
mov
loopne
push
lock
jae
test
rep
dec
repz
ins
scas
in
dec
loope
dec
sti
mov
les
(bad)
std
retf
jge
add
add
jge
(bad)
mov
mov
push
sbb
repnz
loopne
jb
fs
inc
cli
addr16
jnp
adc
push
aad
(bad)
ins
push
call
fs
ins
push
call
fs
test
adc
les
push
std
jg
ret
aas
jmp
dec
(bad)
std
retf
cmc
mov
add
jge
(bad)
std
retf
out
add
pop
test
cdq
mov
fs
push
lock
mov
outs
dec
sti
mov
call
dec
sub
call
dec
shr
dec
cmc
mov
in
push
or
and
fisub
in
pop
repnz
dec
lock
push
in
dec
es
dec
sti
jne
mov
bound
dec
sti
call
bound
mov
add
in
dec
repnz
dec
add
xchg
mov
loop
in
dec
repnz
dec
sti
add
mov
bound
dec
sti
call
bound
sar
call
arpl
pop
call
imul
rep
inc
sti
call
bound
dec
in
call
jl
in
dec
shr
mov
mov
bound
dec
sti
call
bound
push
loope
cmps
sub
dec
cmp
sbb
inc
mov
sbb
or
push
loop
cmc
movs
sbb
repnz
fdivr
movs
sbb
and
out
(bad)
in
ds
test
fld
push
loopne
jb
fs
scas
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
dec
sti
call
pushf
push
adc
inc
mov
pop
cdq
cdq
sub
pop
push
out
lods
out
mul
test
pop
fdiv
mov
xor
popf
push
hlt
add
or
cdq
sub
fmul
nop
fisttp
pusha
inc
rep
dec
call
lahf
adc
jno
aad
or
add
or
dec
in
clc
ret
cmps
jmp
dec
dec
in
clc
ret
mov
inc
inc
int
repnz
dec
fistp
mov
bound
dec
fist
mov
bound
clc
ret
fwait
jmp
dec
pop
je
xchg
mov
add
pop
fwait
mov
je
xchg
mov
mov
mov
xor
pop
mov
mov
popa
scas
in
ins
fsubr
sti
mov
mov
pusha
scas
in
ins
xchg
outs
dec
sti
mov
mov
jno
aad
push
xchg
mov
mov
gs
push
adc
xor
mov
push
lahf
push
adc
ja
pop
jno
jmp
dec
push
loopne
pop
call
imul
push
je
cmps
test
test
and
fcmovnbe
push
mov
bound
dec
test
add
mov
xchg
ins
dec
std
mov
movs
sbb
test
sti
call
arpl
dec
push
fwait
adc
(bad)
stc
scas
in
dec
adc
push
mov
bound
repz
dec
sti
call
bound
(bad)
sti
call
arpl
dec
push
call
dec
lods
in
dec
mov
adc
add
out
dec
repz
dec
sti
call
jno
cld
jo
gs
adc
add
push
push
adc
call
outs
scas
in
dec
loop
dec
sti
mov
les
in
dec
repz
sti
call
bound
data16
call
bound
stc
ret
stos
jmp
mov
add
adc
mov
scas
in
stos
in
ds
imul
jns
push
fdivr
movs
sbb
repz
jnp
pop
call
imul
rep
inc
sti
call
bound
dec
jecxz
adc
les
dec
out
jg
ret
pop
jmp
dec
loope
add
shl
mov
jg
out
test
popa
and
sbb
mov
dec
mov
xchg
push
shr
nop
out
sbb
loopne
imul
jne
in
repz
stos
add
sub
bound
dec
sar
adc
(bad)
bound
dec
ror
adc
fidiv
aad
or
push
xor
and
or
pop
movs
test
xor
and
or
jbe
mov
scas
in
pop
scas
in
dec
push
jge
loope
adc
inc
test
out
sti
call
inc
push
in
dec
repz
out
sti
call
inc
and
dec
repz
(bad)
sti
call
pop
inc
adc
test
test
scas
push
cmp
jb
jae
add
popf
push
cld
jo
dec
out
adc
lods
sub
cld
jo
jge
fisttp
add
(bad)
ins
dec
fistp
stc
(bad)
bound
dec
fisttp
mov
bound
dec
call
cdq
mov
fs
xor
or
cmp
jbe
pop
je
xchg
mov
mov
in
xchg
mov
jb
jae
add
popf
push
cld
jo
and
call
cmp
pop
jae
add
popf
push
repnz
add
call
bound
dec
fstp
mov
bound
mov
cmp
neg
jge
mov
sub
dec
repz
dec
sti
call
bound
sub
add
in
lock
dec
dec
call
ds
in
dec
inc
ins
dec
sti
aam
mov
bound
in
dec
repz
sti
call
bound
pop
dec
mov
stos
mov
mov
dec
rep
inc
sti
call
bound
dec
jecxz
adc
les
in
dec
shr
add
cmp
inc
mov
adc
repnz
fmul
cmps
sub
out
mov
jg
loop
mov
cmp
test
rep
dec
repz
jb
in
dec
out
dec
sti
adc
bound
mov
or
dec
pop
repnz
fadd
movs
or
cli
pop
jp
pop
dec
mov
scas
out
xchg
mov
cmps
in
mov
lods
sub
out
xchg
pop
shl
or
bound
dec
rcr
adc
sub
(bad)
cli
fs
std
mov
fwait
lea
out
dec
repz
and
call
jne
aam
repz
mov
mov
inc
stos
out
dec
repz
and
call
inc
hlt
out
dec
repz
cmp
call
jno
repnz
loopne
jb
fs
sbb
and
mov
adc
stos
xlat
(bad)
xchg
mov
or
pop
les
mov
clc
retf
and
cwde
and
scas
int
lock
dec
sar
adc
in
lods
in
dec
rcr
call
bound
(bad)
mov
sub
dec
pause
dec
sti
call
bound
jne
call
arpl
dec
sbb
adc
(bad)
call
outs
dec
sti
xor
mov
bound
dec
repz
mov
bound
dec
(bad)
call
arpl
dec
loope
adc
les
outs
dec
sti
out
pop
mov
bound
dec
repz
mov
bound
scas
call
mov
popa
scas
in
push
imul
lahf
adc
les
in
dec
jle
dec
sti
push
adc
add
in
dec
repz
sti
call
bound
fdivr
call
scas
in
dec
rep
dec
cmp
adc
les
ins
dec
sti
dec
adc
add
mov
bound
dec
repz
call
and
pop
jns
push
sti
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
dec
sti
call
bound
jne
call
bound
dec
mov
adc
les
in
dec
test
adc
les
in
dec
repz
dec
sti
call
bound
xor
call
push
push
adc
test
nop
icebp
mov
cmps
in
pop
popa
sbb
mov
sub
ror
sub
lods
mov
cmp
rcr
mov
push
lods
fisttp
repnz
fcom
push
call
mov
repnz
mov
movs
and
dec
push
mov
pop
xchg
fsubr
inc
(bad)
in
xor
cmps
cdq
inc
jge
(bad)
sub
bound
test
mov
push
cmp
jge
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
dec
scas
in
dec
(bad)
test
mov
bound
dec
sti
call
bound
jb
addr16
pop
repnz
fadd
movs
sbb
push
push
cld
inc
xchg
in
ds
sbb
cmp
inc
call
cdq
or
mov
popa
cmp
lods
out
fidiv
inc
call
imul
fadd
mov
jno
ror
repnz
fdiv
movs
sbb
test
pop
fdivr
or
sub
inc
mov
cmp
jl
test
or
add
in
dec
sar
sti
call
loopne
imul
adc
bound
dec
shl
adc
sub
(bad)
mul
dec
std
mov
xchg
inc
popa
scas
in
sub
movs
mov
arpl
dec
std
mov
cmps
adc
mov
push
adc
inc
mov
or
adc
test
xlat
call
push
cmp
sub
cmp
push
dec
sti
pushf
xor
in
scas
in
dec
fld
dec
sti
pushf
xor
fmul
in
dec
cmc
jge
in
or
sub
mov
fs
daa
movs
jne
push
shl
pop
lds
int
repnz
dec
shr
adc
les
inc
pop
dec
mov
lods
aam
and
jb
jmp
fld
push
cli
jg
ret
addr16
inc
dec
in
pop
iret
jge
in
xchg
mov
cmp
int3
int
scas
jmp
dec
mov
movs
xlat
call
push
cwde
add
cmps
adc
lods
retf
repnz
loopne
jb
popa
jmp
(bad)
adc
ins
push
cdq
adc
les
dec
rep
push
fwait
adc
les
jo
fnstenv
popa
jmp
cmps
(bad)
stc
retf
in
add
or
xlat
call
push
xor
gs
sub
pushf
mov
cmp
mov
dec
repz
repnz
call
shl
add
movs
or
cmp
imul
xchg
fistp
cwde
mov
stc
retf
inc
mov
gs
sbb
icebp
fs
std
cmp
sbb
mov
je
xchg
mov
add
pop
lahf
mov
mov
jbe
fwait
test
test
mov
mov
xchg
pop
(bad)
mov
xchg
push
bound
dec
std
xchg
or
jno
repnz
loopne
jb
pusha
jmp
scas
(bad)
jo
jg
ret
pop
out
inc
inc
cld
jo
adc
call
jge
(bad)
stc
retf
retf
mov
or
jno
repnz
loopne
jb
pusha
jmp
(bad)
cmp
push
call
fs
push
popf
inc
sbb
call
pop
rcl
or
pop
jno
sbb
mov
sar
popf
push
repnz
loopne
push
cmc
mov
cld
xor
mov
push
push
fstp
call
pop
pop
dec
mov
mov
ins
mov
sub
bound
pop
dec
mov
lods
fdiv
repnz
loopne
jb
pusha
jmp
mov
pop
dec
mov
mov
cmps
jne
push
shl
mov
out
in
inc
pop
dec
mov
lods
fidiv
repnz
loopne
jb
arpl
inc
push
test
fld
push
cli
jg
ret
pop
in
inc
inc
in
dec
sar
dec
sti
call
jge
(bad)
sub
bound
test
mov
adc
icebp
ins
dec
fild
int3
les
xor
pop
dec
mov
les
dec
sti
lds
add
mov
(bad)
(bad)
out
dec
repz
call
bound
mov
call
pusha
scas
in
xor
ins
dec
push
fwait
adc
(bad)
jmp
ins
dec
sti
adc
les
in
dec
repz
sti
call
bound
idiv
call
arpl
dec
sbb
les
in
dec
outs
ins
dec
sti
inc
adc
les
in
dec
repz
sti
call
bound
add
call
popa
scas
in
es
ins
dec
sti
call
push
xchg
mov
mov
les
in
dec
jmp
xchg
adc
les
in
dec
repz
sti
call
bound
pusha
sti
call
bound
dec
ret
mov
and
dec
sti
rcl
les
in
dec
repz
call
jno
aad
or
jecxz
sub
in
dec
inc
repnz
fadd
cmps
sub
fimul
repnz
fdiv
movs
sub
repnz
fsub
movs
sub
sub
loope
mul
xchg
add
fwait
cdq
jno
pop
std
in
dec
popa
push
test
out
(bad)
mov
pop
xchg
jae
call
and
pop
xchg
sub
call
bound
dec
out
call
jle
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
jb
fs
test
push
std
inc
movs
in
ds
pop
test
pop
fmul
sbb
cmp
inc
call
cdq
or
movs
inc
in
pop
dec
mov
lods
retf
dec
pop
repnz
fadd
movs
or
repnz
fdiv
nop
fmul
(bad)
popf
in
addr16
test
leave
mov
inc
shl
mov
cmp
push
loop
shl
push
or
popf
mov
add
call
xlat
aam
popa
mov
xchg
push
shl
adc
mov
bound
dec
icebp
lea
add
loope
adc
add
in
dec
shl
xchg
cmp
or
pop
cdq
adc
les
dec
rep
push
call
fs
pop
inc
push
fs
gs
sbb
outs
push
xchg
mov
mov
test
fld
pop
je
xchg
mov
mov
scas
in
pop
scas
in
dec
(bad)
jb
call
xlat
aam
sbb
(bad)
ret
test
mov
pop
js
inc
call
imul
inc
push
push
pop
gs
push
adc
test
test
scas
or
popf
push
repnz
loopne
push
jmp
test
iret
push
adc
sbb
mov
fs
dec
fistp
pop
mov
bound
dec
sti
mov
or
popf
mov
(bad)
in
pop
dec
mov
test
pop
js
inc
call
imul
jmp
or
pop
retf
(bad)
call
bound
dec
shr
adc
les
retf
xchg
sub
sti
mov
fwait
mov
xchg
js
aam
repz
fisttp
add
lds
rep
dec
in
fimul
in
jno
aad
setae
or
adc
mov
xor
pushf
mov
mov
je
jne
add
(bad)
mov
(bad)
in
pop
dec
mov
mov
fs
in
push
loope
std
jmp
test
in
adc
ins
dec
or
mov
sahf
scas
in
dec
je
dec
sti
xchg
adc
add
les
in
dec
repz
call
bound
mov
add
in
(bad)
ins
dec
inc
fwait
adc
les
ins
dec
sti
or
add
les
in
dec
repz
sbb
bound
fdivr
call
jnp
pop
je
xchg
mov
mov
les
in
dec
jmp
mov
les
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
int3
call
push
push
adc
test
nop
icebp
mov
cmps
in
jp
sbb
(bad)
cdq
sbb
xor
mov
in
mov
movs
adc
and
cmps
push
out
mov
cmps
adc
movs
xlat
out
mov
pop
inc
push
movs
add
sar
dec
rep
inc
sti
call
bound
dec
loope
adc
les
in
dec
in
jbe
dec
mov
lods
fmul
cmc
add
shl
jmp
cdq
sub
mov
popa
sbb
mov
sti
retf
cli
mov
or
mov
mov
sub
mov
jge
popa
mov
xchg
popf
arpl
dec
std
mov
xchg
fsub
in
fs
dec
std
mov
xchg
sbb
mov
push
or
ror
mov
shr
pop
dec
mov
test
shr
pop
dec
mov
test
dec
loopne
pop
(bad)
mov
ror
in
dec
cmc
into
pop
(bad)
lea
add
pop
je
xchg
mov
test
test
mov
mov
xchg
push
call
mov
mov
xchg
pop
mov
in
dec
cmc
into
push
jmp
cmp
hlt
xor
ins
dec
(bad)
cmp
test
mov
mov
xchg
pop
call
mov
mov
xchg
pop
mov
repnz
loopne
jb
addr16
scas
in
ins
adc
mov
mov
bound
pop
dec
mov
outs
iret
pusha
scas
in
imul
jo
add
push
pop
dec
sub
adc
push
arpl
dec
adc
mov
sub
mov
bound
dec
sti
call
bound
pop
cli
call
bound
dec
adc
adc
les
dec
sti
sbb
pop
ror
xchg
cmp
out
jle
inc
call
imul
rep
inc
sti
call
bound
dec
in
call
jg
in
dec
shr
mov
mov
bound
inc
mov
movs
out
xchg
mov
mov
test
nop
jmp
cdq
sub
mov
popa
sbb
cdq
sbb
fdivr
mov
sbb
inc
or
mov
stc
push
mov
bound
dec
jmp
adc
les
in
dec
jmp
add
mov
push
lock
push
nop
out
mov
movs
out
inc
scas
loopne
cwde
movs
or
adc
mov
movs
sub
out
mov
test
or
rcl
mov
cmp
jecxz
dec
push
fild
sbb
leave
or
jbe
or
push
je
xchg
mov
mov
mov
or
jmp
push
mov
bound
dec
pop
test
test
scas
cld
cmp
jae
call
imul
loopne
push
repnz
cmp
int
lock
dec
fstp
call
push
mov
ss
lahf
mov
mov
jae
in
cmp
sbb
cmc
pop
dec
jge
mov
sahf
mov
bound
dec
sti
call
bound
push
cli
call
arpl
dec
es
mov
dec
sti
out
adc
add
les
in
dec
repz
sti
call
bound
dec
cli
call
bound
dec
jbe
adc
les
arpl
aad
jle
fwait
dec
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
out
lods
add
cmp
sbb
inc
mov
pop
fwait
cdq
cs
or
inc
test
pop
sbb
fdivr
nop
iret
lea
push
loopne
pop
call
imul
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
fist
push
jmp
mov
add
inc
mov
pop
sbb
in
ds
sbb
aad
or
out
sub
out
(bad)
mov
cmps
in
lods
loopne
icebp
movs
or
icebp
sub
in
dec
push
mov
test
fnsave
sti
pop
dec
push
aas
add
xchg
cli
stos
push
adc
(bad)
jmp
dec
(bad)
cmc
retf
xor
add
or
fs
mov
je
xchg
mov
inc
or
add
add
ret
mov
bound
dec
sar
adc
jb
scas
in
push
std
jg
ret
sub
dec
push
je
xchg
mov
add
sbb
aad
or
fwait
or
dec
mov
sbb
ins
dec
in
scas
stos
mov
scas
ja
rep
in
sti
call
bound
dec
pop
call
les
dec
sti
rcl
les
in
dec
rep
dec
sti
call
bound
pop
call
sub
je
and
std
call
ins
scas
in
dec
loop
dec
sti
mov
les
in
dec
repz
call
lahf
cdq
cmp
cmps
(bad)
mov
mov
movs
or
repnz
fmul
test
scas
sar
popf
push
cld
sub
sbb
les
loop
rep
pop
sti
call
jno
aad
or
mov
xchg
ds
push
mov
add
xchg
mov
mov
jno
aad
or
mov
mov
mov
mov
fisttp
cmp
bound
pop
je
sbb
popf
push
jmp
cld
imul
cwde
adc
les
(bad)
dec
repz
(bad)
cwde
adc
les
lods
dec
repz
mov
xchg
xor
dec
sti
xchg
adc
les
in
dec
repz
call
bound
(bad)
call
bound
dec
mov
adc
(bad)
sti
scas
in
dec
jle
dec
sti
add
pop
test
out
sar
dec
sti
pushf
adc
les
in
dec
repz
sti
call
bound
push
test
(bad)
mov
xchg
ds
pop
call
jmp
jae
shl
dec
rep
inc
sti
call
bound
dec
in
push
add
fimul
popf
mov
addr16
jb
or
pop
fld
push
loopne
pop
call
imul
add
push
cmp
sbb
push
dec
rep
push
fwait
adc
les
dec
rep
push
fwait
adc
les
dec
rep
push
call
fs
jb
fs
adc
xchg
or
pop
mov
popa
scas
in
ins
jmp
dec
sti
mov
mov
jne
push
pop
dec
sub
call
bound
dec
pop
call
bound
dec
sti
rcl
les
in
dec
repz
dec
sti
call
bound
add
call
jno
neg
inc
sti
jmp
ret
in
inc
rep
dec
cmc
call
jbe
in
dec
in
dec
sti
adc
fiadd
in
ds
sbb
repz
adc
mov
je
xchg
mov
mov
add
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
inc
mov
movs
out
xchg
mov
add
shl
sub
dec
dec
cmc
pop
bound
inc
mov
stos
out
xchg
mov
mov
mov
mov
inc
mov
dec
repz
inc
clc
call
inc
dec
out
dec
repz
cmp
adc
ret
neg
jbe
inc
mov
ins
out
(bad)
repz
rep
push
cwde
adc
les
ins
xor
sti
mov
call
jae
call
cdq
mov
bound
in
dec
repz
dec
sti
call
bound
loope
call
bound
dec
addr16
imul
sti
add
les
(bad)
fsubrp
addr16
inc
mov
stos
xchg
shl
dec
rep
inc
sti
call
bound
dec
in
call
jge
(bad)
icebp
fsub
push
shl
mov
arpl
addr16
sbb
out
mov
and
add
(bad)
call
imul
mov
bound
mov
add
js
sbb
div
lods
iret
jno
aad
or
mov
mov
lods
sub
out
mov
lods
fistp
mov
bound
dec
and
sub
dec
repz
sti
call
bound
push
cli
call
bound
dec
pushf
fwait
adc
les
scas
in
dec
dec
outs
dec
sti
dec
pop
mov
(bad)
stc
in
dec
repz
dec
sti
call
bound
jns
call
arpl
dec
pop
fwait
adc
les
ins
dec
sti
(bad)
adc
add
out
dec
repz
dec
sti
call
bound
sar
adc
and
scas
in
repz
dec
inc
fwait
adc
les
ins
dec
sti
add
pop
mov
mov
jge
mov
lahf
mov
bound
dec
sti
call
bound
imul
adc
jecxz
scas
in
rep
dec
aad
adc
les
in
dec
retf
sti
cmps
adc
les
in
dec
repz
mov
bound
push
fimul
dec
cmp
(bad)
mov
test
nop
in
mov
addr16
jae
sar
nop
fiadd
(bad)
fwait
call
les
test
inc
in
ds
mov
jns
movs
(bad)
cmc
in
gs
dec
cmp
pop
mov
push
xchg
out
jg
out
xchg
push
adc
call
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
fs
call
outs
mov
mov
mov
dec
sbb
add
inc
mov
pop
xchg
xchg
in
popaw
and
cdq
adc
(bad)
pushf
in
jp
aaa
test
test
mov
or
push
out
mov
cmps
sub
out
mov
popa
pop
test
nop
loopne
cdq
sbb
aaa
push
out
pushf
in
imul
test
pop
mov
cmp
sbb
in
dec
cmc
ja
neg
mov
movs
jne
push
shl
lods
in
adc
loop
xchg
mov
mov
sub
mov
mov
ja
xchg
xchg
sub
mov
mov
jge
in
in
mov
pop
mov
fcomp
jmp
nop
adc
dec
mov
mov
test
test
mov
or
push
call
mov
or
pop
mov
test
or
popf
push
repnz
loopne
push
in
stos
sub
dec
cmp
(bad)
and
test
add
popf
mov
dec
sti
mov
call
ins
dec
std
mov
mov
repnz
xchg
mov
gs
in
lods
in
dec
shl
dec
sti
call
jno
icebp
pop
pusha
jae
call
imul
rep
push
cdq
adc
les
inc
rep
dec
call
mov
sub
(bad)
cmc
fs
std
cmp
test
scas
pop
cmp
call
mov
cmp
test
jg
ret
push
jmp
push
jge
(bad)
repnz
in
mov
gs
pop
call
dec
pop
iret
je
data16
jmp
dec
push
sar
ret
knotb
and
retf
aas
mov
gs
push
jge
(bad)
repnz
sub
sbb
mov
push
cli
jg
in
push
add
popf
mov
mov
cmp
out
call
mov
push
cld
jo
jge
pop
mov
fwait
push
xchg
mov
inc
(bad)
in
dec
repz
adc
call
inc
jb
dec
rep
outs
in
or
sub
mov
fs
push
jmp
stos
stos
mov
scas
or
fdivr
call
bound
dec
nop
call
add
dec
sti
sbb
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
xor
xchg
mov
jae
test
rep
dec
repz
ins
scas
in
dec
loopne
dec
sti
lea
les
in
dec
repz
dec
sti
call
bound
push
call
imul
fcomp
movs
or
test
push
loop
test
mov
cmps
sub
into
dec
ja
pop
fdivr
ss
mov
jno
cld
jo
dec
stos
adc
mov
fs
jb
gs
cmp
pop
loopne
jb
gs
scas
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
fst
push
shr
sub
dec
inc
sti
sbb
adc
(bad)
push
je
xchg
mov
test
icebp
mov
pop
fadd
loop
mov
sbb
in
dec
test
and
cmc
ins
pusha
test
stos
xchg
data16
(bad)
fsubr
jl
inc
mov
stos
xlat
or
pop
inc
mov
mov
dec
repz
add
repz
cmp
jg
pop
call
bound
call
adc
adc
mov
cld
push
push
adc
call
bound
(bad)
fistp
mov
imul
test
xchg
jle
in
dec
jnp
dec
sti
loope
mov
bound
dec
pause
dec
sti
call
bound
xor
call
arpl
dec
stos
fwait
adc
les
in
dec
rep
dec
sti
ins
adc
les
in
dec
repz
call
bound
pop
cli
call
bound
dec
push
fwait
adc
(bad)
je
xchg
mov
mov
les
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
in
mov
cmp
dec
cmp
sbb
inc
mov
or
cli
addr16
jae
sar
nop
fimul
(bad)
fwait
in
sahf
in
mov
movs
or
jg
jno
repz
data16
call
imul
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
shr
mov
mov
mov
xchg
push
lock
movs
adc
add
inc
mov
sbb
repnz
fdiv
lods
adc
lods
shl
aad
or
out
sub
enter
sbb
push
cmp
pop
call
in
popf
jmp
xlat
or
pop
cmp
mov
out
add
sbb
cmp
js
in
mov
xlat
jmp
dec
js
in
mov
movs
jmp
dec
mov
rol
mov
cmp
add
push
call
fs
dec
in
aad
push
push
(bad)
fldlg2
jp
cmp
scas
xlat
or
pop
cmp
stos
ret
cli
xchg
loopne
pop
out
test
test
scas
ins
cmp
ins
dec
loopne
aam
rcl
les
arpl
inc
sti
call
bound
dec
sti
call
shr
dec
sti
push
adc
les
in
dec
repz
sti
call
bound
pop
cmp
mov
bound
inc
sti
call
bound
dec
in
call
jnp
sub
jle
inc
shl
nop
cmc
mov
mov
mov
mov
push
mov
dec
sti
xchg
adc
les
in
dec
repz
sti
call
mov
xchg
push
div
lods
iret
dec
inc
repnz
fadd
lods
adc
movs
xlat
mov
xchg
pop
shr
nop
lock
fmul
jmp
(bad)
pop
in
fsubr
mov
or
dec
cmp
(bad)
shl
dec
sti
call
pop
scas
in
dec
shr
dec
sti
call
and
pop
call
xchg
dec
rep
dec
sti
call
bound
sar
call
bound
dec
ins
call
imul
dec
sti
or
les
in
dec
repz
ins
add
sub
mov
dec
repz
xchg
mov
dec
rep
pop
sti
call
bound
popa
jb
ds
pop
cwde
cdq
xor
pop
push
std
inc
movs
in
ds
sbb
cmc
pop
sahf
jge
mov
lahf
mov
bound
dec
sti
call
bound
jb
gs
pop
repnz
fadd
cmps
sub
xlat
cmc
mov
mov
inc
mov
gs
nop
repz
push
fadd
jmp
(bad)
les
pop
dec
rep
bound
adc
les
xor
bound
adc
les
fisttp
ins
bound
adc
xlat
mov
xchg
push
call
scas
imul
icebp
ins
dec
fidivr
xchg
add
scas
in
fs
ins
dec
std
mov
cmps
adc
pop
daa
mov
dec
sti
call
bound
(bad)
sti
call
bound
dec
repz
imul
dec
sti
adc
mov
bound
in
dec
repz
arpl
pop
daa
test
dec
repz
xchg
mov
dec
rep
pop
sti
call
bound
popa
jbe
ds
pop
fwait
cdq
xor
pop
push
fadd
nop
jmp
mov
dec
sti
call
bound
dec
call
xchg
mov
jge
dec
or
nop
mov
cmps
in
ds
pop
test
fidiv
aad
or
mov
mov
lods
sub
out
(bad)
mov
lods
jmp
in
lods
in
dec
fcmovne
dec
sti
pushf
xor
in
scas
in
dec
fcmovne
dec
sti
pushf
push
scas
push
test
fidiv
aad
or
xor
inc
ret
repz
das
sti
call
in
sti
fs
std
mov
xchg
dec
pusha
scas
in
fs
dec
std
mov
scas
in
pop
scas
in
dec
loop
push
cwde
adc
les
test
push
jb
jmp
int
lock
dec
fist
push
mov
bound
push
xlat
mov
mov
jge
dec
call
ret
scas
in
dec
rep
dec
sti
adc
mov
bound
in
dec
repz
sti
call
bound
xor
call
bound
dec
js
adc
fdiv
(bad)
stc
loop
paddw
mov
push
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
aas
mov
lods
sub
out
xchg
mov
popa
adc
sbb
jmp
cdq
sub
mov
dec
sti
call
bound
dec
out
call
jge
dec
or
dec
pop
mul
ja
adc
sub
jno
aad
or
mov
mov
mov
(bad)
mov
cmps
jmp
adc
add
lds
rep
dec
and
xchg
dec
scas
in
dec
int
dec
sti
call
(bad)
fucomi
dec
repz
mov
bound
loope
call
arpl
dec
popf
fwait
adc
les
scas
in
dec
sbb
sti
rcl
add
les
in
dec
repz
mov
bound
mov
call
arpl
dec
sti
call
ds
in
dec
(bad)
outs
dec
sti
jns
mov
(bad)
jbe
sti
call
bound
call
add
in
push
(bad)
jg
in
push
jle
fimul
popf
mov
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
xchg
mov
bound
dec
enter
aaa
xchg
mov
pop
scas
in
dec
int3
ins
dec
sti
fst
les
in
dec
repz
call
bound
jb
fs
test
push
aam
movs
jecxz
(bad)
movs
es
push
push
in
inc
xchg
in
ds
pop
mov
adc
(bad)
lahf
in
jg
xor
xor
retf
mov
xor
shl
lods
ror
repnz
push
in
mov
mov
dec
pop
neg
jae
call
push
mov
push
adc
sub
call
bound
dec
call
xchg
mov
js
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
cmps
xchg
test
jmp
loopne
sub
dec
inc
repnz
or
dec
jo
inc
fdiv
movs
sbb
repnz
fsub
movs
or
push
adc
mov
movs
or
or
mov
mov
mov
mov
jae
ror
nop
iret
mov
pop
repnz
dec
frstpm(287
adc
add
test
ins
dec
cli
mov
stos
cmp
xchg
sub
push
dec
sti
pushf
mov
adc
push
adc
test
test
scas
adc
popf
push
lock
xor
add
mov
push
mov
push
adc
jnp
repnz
inc
cmp
ret
mov
cmps
xchg
lahf
mov
xchg
push
test
adc
nop
push
and
fwait
mov
mov
jge
loop
sbb
add
jmp
out
call
cmp
(bad)
(bad)
in
popa
pop
mov
test
adc
inc
call
imul
rep
push
cwde
adc
les
dec
repz
out
mov
or
sub
mov
mov
fwait
jbe
mov
inc
test
dec
repz
or
push
test
fld
ja
(bad)
jg
ret
dec
jmp
enter
pop
iret
jge
in
mov
movs
in
pop
scas
in
dec
push
jbe
popa
test
test
scas
add
popf
push
cld
jo
adc
call
jge
(bad)
(bad)
in
popa
pop
mov
mov
movs
jne
pop
shl
mov
dec
repz
jle
out
dec
cmp
jae
call
imul
loopne
push
test
cmp
imul
int3
stos
xchg
data16
neg
into
push
lock
cmp
(bad)
(bad)
in
popa
pop
mov
movs
xlat
adc
inc
call
imul
rep
push
fwait
adc
les
dec
repz
es
adc
add
in
ins
and
sti
mov
mov
jnp
jbe
loopne
pop
cmp
xchg
je
bound
dec
sti
call
bound
dec
and
xchg
mov
cmp
ins
dec
sti
mov
add
mov
(bad)
(bad)
in
dec
xrelease
call
bound
or
call
arpl
dec
jmp
int3
bound
dec
hlt
call
je
in
dec
jmp
adc
les
in
dec
repz
dec
sti
call
popf
push
mul
jae
shr
mov
js
out
mov
inc
sar
nop
loopne
mov
sub
ror
ss
mov
jno
cld
jo
dec
scas
adc
lods
sub
repnz
loopne
jb
gs
xor
pop
xor
jmp
scas
in
rep
inc
sti
call
bound
dec
loop
adc
cld
xchg
push
adc
test
icebp
mov
push
fadd
adc
cmp
mov
mov
mov
lods
in
ds
adc
in
dec
push
jae
call
imul
sbb
sbb
mov
mov
jno
cmc
pop
xor
jmp
mov
mov
jmp
call
dec
pop
iret
jbe
jecxz
inc
mov
pusha
scas
in
fs
ins
dec
std
cmp
stos
adc
fwait
pushf
push
adc
not
pop
sub
fnsave
repz
push
push
inc
jmp
clc
inc
test
dec
repz
pop
cli
call
dec
mov
dec
cmc
dec
push
cwde
adc
les
xchg
dec
repz
sti
test
xor
dec
sti
dec
adc
les
in
dec
repz
mov
bound
data16
call
bound
dec
jmp
les
ins
dec
sti
call
bound
dec
sti
call
bound
push
repnz
out
icebp
mov
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
sti
call
bound
dec
loopne
rol
jge
(bad)
mov
mov
movs
or
mul
jo
sbb
cdq
pop
jns
xor
call
mov
mov
xchg
pop
mov
sbb
les
loope
rep
inc
sti
call
bound
dec
in
adc
les
je
xchg
mov
test
nop
cmc
mov
mov
test
out
cdq
daa
jge
(bad)
xchg
in
popaw
and
mov
mov
je
or
pop
fld
add
sar
nop
fisttp
cli
call
test
mov
mov
xchg
pop
out
mov
xlat
gs
cmp
dec
or
movs
xchg
ins
mov
xchg
pop
call
mov
mov
xchg
xchg
je
adc
jnp
sub
pushf
add
inc
and
dec
repz
cs
call
bound
por
mov
(bad)
scas
in
dec
push
ins
dec
sti
call
bound
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
repnz
jns
jo
std
jg
shr
add
inc
xchg
mov
bound
dec
sti
call
bound
pop
sti
call
jno
mov
inc
mov
mov
lods
sub
out
xchg
mov
mov
mov
mov
stos
xchg
test
fist
mov
bound
pop
sti
call
bound
add
jmp
mov
add
shl
nop
jmp
push
std
jg
ret
mov
cdq
ss
add
sbb
nop
out
mov
out
repnz
dec
fist
add
xor
dec
ja
call
dec
retf
cmc
jg
fcmovnbe
pop
mov
bound
dec
and
pop
mov
dec
repz
sti
call
bound
test
call
pusha
scas
in
inc
imul
cwde
adc
les
in
dec
add
sti
push
adc
add
out
dec
repz
sti
call
bound
mov
add
in
call
mov
jmp
in
dec
movq
dec
adc
add
mov
bound
dec
repz
call
bound
call
mov
scas
in
test
ins
dec
pop
cwde
adc
(bad)
fisubr
sti
sub
mov
(bad)
shr
dec
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
in
adc
les
ins
dec
sti
call
(bad)
fsubr
dec
repz
call
pop
mov
pushf
push
adc
sub
call
bound
dec
out
call
jle
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
je
call
bound
dec
mov
adc
les
in
dec
test
adc
les
in
dec
repz
dec
sti
call
jno
aad
or
ds
sbb
inc
(bad)
add
inc
mov
push
mov
xor
mov
shl
data16
cmp
in
ds
cwde
cdq
add
(bad)
mov
dec
popa
inc
test
nop
mov
mov
addr16
jae
shl
or
or
push
fmul
push
iret
mov
movs
adc
jns
fdivr
push
call
mov
mov
xchg
pop
(bad)
fild
mov
bound
pop
sti
call
bound
dec
fistp
mov
dec
scas
in
dec
fild
mov
mov
bound
dec
sti
call
bound
add
call
lahf
push
adc
inc
mov
pop
sbb
push
test
nop
loope
mov
mov
jae
ror
nop
ror
sti
cmp
rcr
sub
dec
adc
outs
fcom
push
shl
fld
push
stc
jg
ret
(bad)
call
out
xchg
mov
addr16
jae
shl
nop
out
mov
addr16
or
jge
inc
fsub
movs
adc
das
push
fcom
push
loop
scas
cmps
sub
lods
retf
repnz
fcomp
cmp
call
sar
dec
repz
mov
bound
pop
(bad)
mov
bound
dec
in
push
jb
je
cmp
pop
xor
lods
leave
jno
lock
ins
jae
call
imul
shr
add
in
dec
in
push
es
mov
dec
icebp
in
dec
cmc
jnp
pop
and
popf
push
lock
ins
jae
call
imul
ror
jb
xchg
mov
aas
scas
in
dec
in
std
stc
call
dec
icebp
in
dec
cmc
jp
pop
mov
mov
adc
call
aas
scas
in
dec
shr
mov
cmp
out
dec
repz
cmp
adc
ret
inc
or
jno
aad
setae
sbb
mov
mov
in
mov
fs
dec
cmc
pop
pop
sti
call
inc
lock
dec
repz
(bad)
sti
call
jbe
jmp
rep
dec
mov
sbb
bound
dec
rcl
or
or
pop
call
pop
mov
push
adc
sbb
add
mov
pop
mov
push
adc
loopne
dec
dec
mov
adc
clc
call
dec
pop
in
dec
cmc
adc
call
inc
sbb
dec
repz
pop
sti
call
bound
bound
test
cmp
in
jg
in
push
jb
fisttp
popf
mov
pop
xchg
test
test
scas
(bad)
aas
popf
push
xchg
pop
rep
dec
fcmovne
push
mov
bound
dec
in
mov
xchg
push
popa
scas
in
lods
ins
dec
std
add
pop
mov
mov
jno
test
test
scas
mov
popf
push
xchg
pop
rep
dec
(bad)
add
lds
rep
dec
in
test
les
icebp
pop
xchg
xor
scas
xlat
cld
mov
pop
cmp
gs
(bad)
or
rep
push
cdq
adc
les
movs
jne
pop
shl
xchg
les
retf
push
sar
ret
pop
out
inc
dec
out
cmp
gs
xor
inc
loopne
jb
pusha
jmp
(bad)
and
push
call
mov
fild
add
lds
rep
dec
in
push
iret
pop
mov
or
or
pop
test
test
scas
mov
popf
push
xchg
pop
rep
dec
fld
push
mov
bound
dec
es
mov
mov
inc
jae
call
bound
bound
movs
mov
je
xchg
mov
test
nop
cmc
mov
pop
cmp
gs
fcomi
pop
ins
jae
call
imul
loopne
dec
inc
mov
fs
dec
cli
mov
mov
arpl
dec
sti
mov
mov
xor
scas
adc
cmps
sub
int
icebp
ins
dec
fcmovnb
pop
mov
bound
dec
sti
add
retf
in
shl
dec
lds
mov
jmp
in
dec
jl
dec
sti
call
bound
in
dec
repz
sti
call
bound
dec
sti
call
jno
repz
cmp
jmp
shl
inc
rep
dec
lock
jae
in
dec
out
dec
sti
lea
jno
add
mov
mov
lods
sub
out
mov
paddd
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
loopne
cmp
gs
mov
addr16
popa
pop
mov
push
sbb
aad
or
mov
mov
mov
(bad)
mov
cmps
call
adc
(bad)
bound
dec
rcl
adc
loope
mov
dec
repz
cmp
call
jno
int
rep
dec
fstp
mov
bound
pop
xor
mov
xor
dec
sti
in
mov
(bad)
retf
repz
call
bound
xor
call
gs
in
stos
cli
ins
dec
xchg
pushf
adc
les
lods
in
dec
test
adc
bound
dec
repz
sti
call
bound
(bad)
call
imul
and
adc
les
test
dec
sti
lahf
sbb
les
in
repz
sti
call
bound
mov
call
scas
in
(bad)
ins
dec
jno
adc
(bad)
enter
or
pusha
push
mov
(bad)
leave
in
repz
call
bound
dec
repnz
scas
in
fdivr
ins
dec
mov
mov
call
outs
dec
sti
ins
push
mov
bound
in
repz
xchg
int
bound
(bad)
call
scas
in
call
mov
sub
xchg
sbb
les
jmp
repz
sti
call
bound
mov
add
in
outs
lock
dec
cmps
popf
adc
(bad)
in
in
dec
retf
outs
dec
sti
xchg
adc
les
out
dec
repz
sti
call
bound
pusha
std
call
gs
in
cwde
lock
dec
rcr
les
fs
sti
sbb
mov
(bad)
(bad)
dec
repz
call
jno
repnz
cmps
jb
fs
scas
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
add
in
dec
repz
dec
sti
call
bound
jae
call
bound
dec
mov
adc
les
scas
in
dec
cmps
ins
dec
sti
ret
add
mov
(bad)
iret
in
dec
repz
call
bound
ds
call
bound
dec
jb
adc
(bad)
hlt
scas
in
dec
outs
ins
dec
sti
ds
les
in
dec
repz
sti
call
bound
sahf
sti
call
bound
dec
adc
adc
les
ins
dec
sti
xchg
adc
add
in
dec
repz
sti
call
jno
aad
push
xchg
mov
repnz
pop
fwait
cdq
xor
in
dec
popa
adc
loop
xor
rol
mov
inc
lods
repnz
jle
popa
fsub
movs
das
mov
sub
int
mul
fidivr
add
sbb
in
adc
neg
out
in
jge
test
nop
call
addr16
jae
rcl
test
sbb
fwait
dec
sub
sbb
adc
jns
dec
cmp
aad
or
mov
mov
lods
(bad)
pop
retf
or
add
(bad)
jmp
push
adc
push
sbb
clc
cmp
das
mov
gs
cmp
repz
xchg
mov
test
sub
dec
cmp
aad
or
mov
fisubr
fld
xchg
hlt
mov
xchg
pop
ret
mov
inc
dec
adc
gs
push
adc
push
mov
cmp
cmp
xchg
mov
test
jecxz
dec
cmp
aad
or
sub
fstp
fwait
push
sar
in
push
jo
popf
dec
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
enter
aaa
xchg
mov
pop
scas
in
dec
int3
ins
dec
sti
fcom
les
in
dec
repz
call
bound
adc
call
bound
dec
xchg
call
adc
in
dec
in
cmp
mov
stos
out
xchg
mov
add
shl
sub
dec
dec
repnz
mov
mov
movs
and
push
push
fdivr
movs
adc
sub
inc
mov
mov
movs
popa
mov
push
push
call
or
lahf
cdq
push
in
das
popa
pop
test
mov
mov
imul
push
or
dec
and
adc
mov
cld
imul
popa
popa
or
cdq
cs
or
inc
test
pop
mov
fwait
in
inc
popa
sub
test
addr16
popa
aas
test
nop
ror
addr16
jae
shr
or
iret
mov
popa
pop
test
nop
mov
mov
shl
test
das
pop
mov
push
fadd
out
sbb
mov
sub
add
sbb
lods
sub
int
icebp
ins
dec
fcmovnu
pop
mov
bound
sub
push
sub
fld
test
push
(bad)
jg
in
push
jo
into
dec
cmp
jae
call
lods
cwde
jno
aad
or
push
and
pop
inc
xor
dec
test
mov
push
rep
dec
rcl
aas
lds
int
repnz
dec
ror
les
retf
xchg
dec
and
fwait
push
jle
xchg
jp
aam
repz
(bad)
mov
bound
dec
in
test
mov
fwait
push
adc
inc
mov
pop
retf
pop
bound
or
pop
shr
stos
adc
lods
out
pslld
loopne
jb
arpl
inc
push
mov
imul
adc
or
out
dec
repz
cmp
adc
ret
int
sbb
sbb
mov
mov
bound
int3
stos
cmp
dec
repz
lods
sti
call
je
in
stc
jg
ret
(bad)
in
inc
dec
hlt
pop
push
jae
call
imul
loopne
push
fmul
jns
pop
push
adc
mov
les
xchg
mov
dec
mov
(bad)
adc
mov
fs
dec
repz
hlt
cwde
adc
les
jnp
repz
les
mov
sbb
in
dec
test
xchg
mov
dec
cmp
dec
cmc
jg
in
push
jo
ja
cmp
jae
call
imul
sar
in
push
jo
push
dec
cmp
xchg
stos
xchg
in
imul
mov
mov
mov
sti
pushf
cmp
in
scas
in
dec
shr
dec
sti
call
daa
mov
dec
std
in
mov
pusha
scas
in
ins
dec
outs
dec
sti
mov
mov
jge
inc
or
jno
aad
or
int
mov
fs
inc
gs
ss
mov
jno
cld
jo
jge
pop
xchg
sbb
retf
pop
xchg
in
in
mov
je
fwait
push
sar
in
push
jo
cdq
dec
cmp
scas
mov
cmp
rcl
fs
sti
sahf
mov
inc
test
mov
mov
inc
pop
pop
test
retf
scas
push
xor
sbb
mov
cld
mov
adc
xchg
adc
clc
jge
cmc
fs
push
mov
jno
aad
add
mov
mov
mov
mov
jge
test
mov
repz
dec
fistp
mov
bound
xor
call
pop
dec
rep
push
cwde
adc
les
push
call
dec
mov
cmp
gs
mov
add
xchg
dec
rcr
cmp
cli
scas
in
dec
rcr
rol
xchg
mov
je
in
dec
shr
sti
call
jns
stos
pop
cmp
gs
mov
mov
test
test
mov
pop
cmp
gs
test
dec
sti
mov
fwait
push
jle
xchg
je
aam
repz
fist
mov
bound
dec
in
test
jns
rcr
mov
inc
popa
push
add
pop
retf
pop
or
mov
jae
shr
test
mov
pop
cmp
gs
xor
push
jb
jmp
sti
push
mov
adc
int
retf
retf
bsf
lods
fnstenv
repnz
cmps
jb
ins
jmp
mov
pop
xor
lods
out
pslld
loopne
jb
ins
jmp
xor
inc
sti
call
bound
int3
stos
cmp
jge
repnz
dec
sti
pushf
add
test
xchg
push
shl
fstp
mov
mov
test
nop
icebp
mov
pop
push
jae
call
imul
jmp
dec
loop
cmp
loop
and
dec
rep
pop
mov
bnd
int3
push
cmps
mov
sub
fwait
push
sar
in
push
jo
cmova
popf
mov
mov
cmp
rcr
gs
sti
sahf
mov
sub
adc
test
retf
scas
fnstenv
popf
push
repnz
loopne
push
fmul
jns
cmp
mov
push
push
std
lea
mov
push
jae
call
imul
scas
jg
ret
scas
loopne
inc
(bad)
in
in
xor
mov
mov
(bad)
(bad)
sti
pushf
mov
sbb
adc
call
bound
(bad)
fistp
push
and
or
cpuid
jge
or
je
sub
ins
push
cwde
adc
les
adc
push
jo
push
inc
cmp
jae
call
imul
sar
in
push
jo
aas
inc
cmp
dec
sti
pushf
enter
mov
pop
pop
shl
xchg
ins
bound
dec
sti
mov
mov
add
pop
xor
lods
out
pslld
loopne
jb
outs
jmp
mov
add
and
in
xor
mov
mov
clc
mov
push
lods
inc
or
call
jns
aam
repz
inc
cdq
adc
les
or
jge
adc
or
test
rep
dec
sti
call
jmp
dec
sti
pop
adc
les
in
dec
repz
dec
sti
call
bound
mov
call
bound
dec
sti
call
outs
mov
jmp
popf
adc
les
in
dec
repz
dec
sti
call
bound
push
sti
call
in
loope
or
push
cmp
pop
call
fadd
adc
mov
dec
repz
sti
call
bound
pop
sti
call
popf
push
adc
call
mov
repnz
fmul
mov
pop
mov
popf
push
adc
sahf
push
shl
nop
in
lea
dec
jmp
push
fwait
adc
les
ja
repz
call
xor
loopne
jb
fs
mov
mov
inc
movs
mov
stc
lods
in
dec
shl
fiadd
xchg
mov
jl
xchg
movs
jne
push
shl
mov
xor
mov
mov
arpl
dec
sti
mov
mov
bound
mov
cmp
in
dec
cmc
dec
push
fwait
adc
les
xchg
dec
repz
mov
adc
aad
jmp
call
bound
dec
ja
adc
(bad)
lock
in
dec
sti
ins
dec
sti
call
bound
dec
sti
call
bound
pop
ss
stos
mov
scas
jmp
rep
inc
sti
call
bound
dec
loope
adc
or
repnz
fcom
or
add
inc
mov
sbb
call
sti
call
bound
dec
out
call
xor
adc
cmp
sbb
icebp
sbb
pop
xchg
jbe
lods
dec
cmp
inc
mov
sub
test
stc
dec
repz
in
push
jne
pop
test
rep
dec
inc
call
fisubr
dec
sti
in
mov
bound
in
dec
repz
sahf
mov
bound
(bad)
sti
call
bound
push
lock
nop
mov
adc
imul
xchg
adc
les
in
dec
repz
sti
call
bound
(bad)
in
in
mov
xchg
mov
mov
mov
mov
sbb
dec
sti
xchg
adc
les
in
dec
repz
sti
call
lods
xchg
mov
repnz
movs
or
inc
fmul
repnz
fadd
lods
adc
aad
or
mov
mov
lods
sub
out
mov
lods
jmp
(bad)
bound
dec
rol
adc
shl
repnz
loopne
jb
gs
scas
in
dec
shr
dec
sti
call
inc
(bad)
xchg
movs
jne
pop
shl
mov
push
sbb
sbb
mov
mov
popa
scas
in
ins
xchg
sti
mov
mov
bound
mov
cmp
in
dec
cmc
dec
push
cdq
adc
les
xchg
dec
repz
stc
ficom
or
test
rep
dec
sbb
mov
les
dec
sti
push
adc
bound
dec
repz
mov
xchg
popf
leave
bound
xchg
neg
mov
jb
in
test
xchg
adc
les
in
dec
mov
sti
nop
sbb
les
in
rep
pop
sti
call
bound
xor
call
jb
in
pop
loope
dec
or
mov
test
dec
sti
neg
mov
bound
pop
sti
call
bound
(bad)
neg
mov
jb
in
scas
clc
ins
dec
adc
mov
(bad)
mov
dec
sti
lds
les
in
repz
sti
call
bound
retf
lock
je
in
push
cli
ins
dec
(bad)
xchg
adc
les
in
dec
out
dec
sti
sbb
bound
clc
dec
repz
mov
xchg
and
bound
jbe
call
jo
in
sar
ins
dec
out
mov
les
mov
dec
sti
fs
mov
(bad)
clc
jecxz
repz
call
bound
sub
call
imul
cmc
xchg
adc
les
in
dec
pop
popa
dec
sti
and
les
stc
dec
repz
inc
sti
call
bound
or
call
imul
or
mov
shl
dec
sti
adc
(bad)
(bad)
in
repz
dec
sti
call
bound
add
call
push
in
jmp
mov
(bad)
dec
scas
pusha
dec
sti
pushf
sbb
les
jmp
push
lods
add
sub
(bad)
jmp
adc
out
scas
in
xor
ins
dec
or
adc
les
in
dec
int
dec
sti
js
mov
bound
sti
call
bound
mov
push
xchg
mov
je
in
jle
ins
dec
jo
adc
(bad)
hlt
cmps
in
dec
and
mov
mov
bound
pop
sti
call
bound
pop
lock
jo
in
xor
ins
dec
adc
mov
xchg
test
dec
icebp
fs
sti
push
sbb
add
mov
dec
repz
inc
sti
call
bound
popf
cld
call
push
ins
dec
sub
sahf
mov
sub
dec
sti
call
bound
pop
sti
call
bound
hlt
hlt
call
imul
mov
or
popa
dec
sti
lds
mov
bound
cli
dec
repz
inc
sti
call
bound
cdq
lock
jno
in
mov
ins
dec
and
mov
ret
dec
sub
dec
sti
add
mov
dec
repz
mov
xchg
sbb
bound
inc
call
xchg
mov
ja
in
push
mov
out
fld
adc
cld
or
mov
enter
adc
les
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
or
call
bound
dec
scas
call
aas
scas
in
dec
xchg
ins
dec
sti
repnz
les
in
dec
repz
dec
sti
call
bound
fdivr
call
bound
dec
inc
call
movs
scas
in
dec
and
dec
adc
les
in
dec
repz
in
mov
bound
pop
cli
call
arpl
dec
leave
fwait
adc
les
scas
in
dec
mov
adc
add
mov
(bad)
int
dec
repz
mov
bound
sar
adc
pop
arpl
dec
dec
fwait
adc
les
ins
dec
sti
dec
adc
add
les
in
dec
repz
call
bound
inc
stc
call
pusha
scas
in
outs
icebp
ins
dec
rcr
mov
pop
lods
in
dec
mov
dec
sti
rcl
mov
(bad)
or
call
bound
iret
stc
call
pusha
scas
in
shl
ins
dec
pop
cwde
adc
(bad)
xlat
lods
in
dec
dec
outs
dec
sti
pop
pop
mov
bound
dec
repz
call
bound
dec
clc
call
popa
scas
in
pop
lock
dec
in
adc
les
in
dec
lds
sti
cmps
push
mov
(bad)
(bad)
out
dec
repz
call
imul
fcomp
movs
ss
in
dec
fmul
mov
bound
popa
sub
cdq
(bad)
iret
(bad)
mov
jmp
out
cdq
js
fs
dec
repz
jmp
cmp
pop
mov
imul
popa
pop
test
nop
mov
scas
(bad)
(bad)
in
and
mov
cdq
dec
inc
ja
dec
repz
ret
ds
pop
jmp
adc
push
cmp
gs
ret
adc
(bad)
jmp
scas
aad
or
mov
shr
loop
in
dec
retf
es
or
popf
mov
je
xchg
mov
mov
mov
popf
push
adc
inc
mov
or
popf
mov
je
xchg
mov
mov
mov
popf
push
adc
dec
sti
mov
xchg
push
repz
mov
test
stc
push
in
dec
repz
movs
add
scas
pop
cmp
lea
dec
dec
cmp
ins
jb
fs
push
adc
dec
sti
mov
lods
stc
pop
pop
adc
call
jge
aad
or
sub
fstp
xchg
je
or
push
call
popf
(bad)
push
dec
rep
jb
fs
push
adc
push
cmp
dec
scas
ret
push
int
rep
dec
ret
cld
jmp
push
aad
or
adc
cmp
xchg
mov
mov
mov
sub
mov
lods
cld
push
push
adc
fs
push
adc
dec
sti
mov
xchg
pop
bound
mov
mov
mov
pushf
push
adc
push
mov
gs
push
bnd
popf
mov
gs
cmp
popf
(bad)
dec
dec
rep
jb
addr16
push
adc
push
cwde
push
gs
adc
pop
ret
pop
call
cld
fcom
mov
call
or
imul
retf
retf
gs
cld
(bad)
push
adc
addr16
xchg
data16
xchg
push
cmc
mov
lods
cmps
pop
rcl
mov
jae
ret
in
call
cld
or
repz
sti
call
das
xchg
mov
or
push
lods
mov
xchg
jns
scas
in
je
xchg
mov
test
inc
imul
mov
mov
unpckhps
popf
push
int
rep
dec
ret
mov
inc
push
aad
push
xchg
mov
icebp
sub
in
scas
in
dec
retf
jl
add
or
cmp
cwde
je
xchg
mov
test
cmp
dec
cmp
aad
setae
cld
imul
retf
(bad)
mov
or
mov
mov
pop
adc
cmp
test
push
add
adc
call
dec
xchg
inc
mov
xchg
push
ror
push
in
scas
in
dec
loopne
jb
ins
jmp
scas
in
inc
rep
dec
jmp
adc
les
in
dec
call
adc
les
in
dec
repz
dec
sti
call
bound
add
call
bound
dec
fwait
call
or
dec
sti
jmp
mov
vpsllq
dec
sti
call
bound
in
sti
call
bound
dec
xor
mov
mov
ins
dec
sti
jb
mov
bound
dec
rep
dec
sti
call
bound
push
cli
call
arpl
dec
lds
mov
cs
in
dec
mov
adc
add
mov
(bad)
(bad)
in
dec
repz
dec
sti
call
bound
push
call
xchg
push
adc
inc
mov
jle
pop
fist
pop
ins
inc
ins
dec
sti
mov
fwait
rcl
int
rep
dec
ror
aaa
add
nop
cmp
sti
call
fnsave
in
sti
call
shl
loop
call
ret
mov
outs
jae
rol
xor
out
lock
bound
popa
jo
push
nop
xchg
inc
dec
rep
jb
gs
xchg
xor
jge
jmp
pop
bound
mov
test
cmp
in
dec
repz
pop
add
jmp
push
int
rep
dec
ret
cmps
jmp
scas
aad
or
mov
cmc
sub
fild
leave
mov
xchg
push
retf
inc
jmp
xchg
pop
mov
push
ret
xchg
jmp
scas
aad
or
mov
sub
sbb
push
call
popf
mov
je
xchg
mov
mov
mov
pushf
push
adc
push
lahf
add
scas
jl
popf
push
repnz
stos
mov
gs
cmp
cmp
xchg
mov
test
xor
in
dec
repz
loop
gs
push
repnz
div
add
aad
or
sub
fist
xchg
mov
xchg
push
call
xchg
jno
int
rep
dec
call
imul
ret
inc
mov
pop
aam
es
(bad)
xchg
in
xchg
in
ds
pop
mov
mov
add
mov
jae
shl
or
sub
lods
repnz
sbb
sbb
ret
push
fnstenv
lods
leave
dec
or
inc
fmul
push
test
mov
jns
xchg
inc
(bad)
mov
cdq
dec
jge
(bad)
enter
xchg
inc
pop
fmul
push
mov
jmp
push
repnz
or
fnstcw
int3
dec
cmp
xchg
mov
test
dec
imul
or
mov
shr
pop
xchg
adc
stos
jmp
push
adc
gs
push
adc
push
pop
add
jmp
push
repnz
retf
imul
xchg
dec
cmp
xchg
mov
test
xor
dec
cmp
aad
or
sub
fisttp
xchg
xor
mov
lods
neg
adc
push
jmp
dec
adc
fs
mov
jne
ins
dec
sar
test
dec
loopne
pop
(bad)
mov
fisttp
in
dec
cmc
dec
dec
clc
call
dec
in
in
dec
cmc
into
push
call
xchg
push
adc
jg
fld
adc
cld
inc
pop
adc
test
movs
mov
les
inc
gs
pop
mov
cs
cli
fs
std
cmp
sbb
in
dec
push
dec
nop
sti
call
popf
push
repnz
loopne
push
call
nop
push
adc
jg
in
push
pop
and
and
mov
mov
mov
xor
dec
pop
mov
mov
jge
inc
or
bound
ror
gs
mov
dec
sti
mov
add
int
lock
dec
(bad)
push
mov
bound
pop
out
and
arpl
dec
std
mov
mov
mov
jae
call
xchg
mov
lods
xchg
test
iret
mov
inc
test
in
scas
in
dec
loopne
jb
push
xchg
jle
scas
in
ins
cmp
sti
mov
mov
sbb
sbb
call
inc
xchg
ret
mov
bound
dec
sti
mov
call
ins
dec
sti
mov
call
ins
dec
std
mov
mov
pop
(bad)
shl
adc
lahf
popa
scas
in
ins
shr
mov
mov
outs
(bad)
pop
dec
rep
pop
xor
mov
jmp
in
pop
repnz
enter
adc
push
xchg
push
adc
inc
movs
in
push
rcr
mov
dec
repz
ret
loope
inc
dec
in
jne
push
shl
xchg
les
retf
dec
in
(bad)
lock
bound
sbb
gs
scas
in
dec
loopne
jb
imul
pop
and
rcr
dec
sti
call
popf
mov
dec
sti
mov
call
pusha
push
call
xchg
push
adc
inc
mov
and
and
mov
test
nop
out
mov
pop
push
dec
stc
sti
call
popf
push
repnz
fadd
mov
arpl
dec
std
mov
lea
rcr
jp
cmp
jmp
dec
ins
cmp
fiadd
jge
(bad)
call
call
popf
mov
pop
mov
call
xchg
mov
lods
xchg
outs
mov
lea
add
cmc
dec
in
call
add
adc
sub
cld
xor
pop
pop
add
inc
gs
sbb
mov
pop
iret
jbe
fcmovnb
pop
mov
bound
dec
pop
test
iret
scas
scas
xor
push
repnz
loopne
push
call
xchg
push
adc
jg
in
push
pop
and
and
mov
mov
movs
cmp
in
dec
fisttp
sti
pushf
xor
mov
dec
sti
mov
adc
dec
cmp
ins
lock
dec
sti
mov
call
gs
ror
dec
cmp
(bad)
mov
mov
mov
mov
jae
shl
adc
lods
xor
push
ins
dec
call
imul
jle
dec
sti
fwait
push
xchg
stos
movs
in
inc
imul
adc
adc
in
dec
push
dec
mov
call
popf
push
repnz
push
call
lea
push
jmp
xor
fiadd
pop
and
and
mov
mov
mov
jae
hlt
xor
ins
dec
(bad)
cmp
xlat
lods
xchg
mul
mov
les
aad
sbb
mov
mov
inc
test
in
scas
in
dec
loopne
jb
je
inc
adc
imul
adc
adc
in
ins
mov
dec
sti
mov
mov
bound
fs
call
bound
dec
rol
adc
xor
pop
rep
dec
call
pop
mov
push
adc
jg
fld
adc
cld
test
add
inc
adc
scas
in
dec
rol
int
xchg
mov
outs
scas
in
dec
rcr
jb
xchg
mov
add
push
fisttp
dec
cmp
(bad)
mov
mov
mov
mov
jae
shl
adc
lods
xor
push
ins
dec
call
imul
jle
dec
sti
fwait
push
xchg
stos
movs
in
inc
imul
adc
adc
in
dec
push
dec
std
sti
call
popf
push
repnz
enter
adc
es
push
adc
push
push
mov
xchg
mov
jno
aad
push
xchg
mov
cmps
or
aad
mov
inc
rep
dec
pop
add
cmp
pop
cmp
dec
stc
sti
call
popf
push
neg
jae
call
xchg
mov
lods
xchg
jns
or
pop
mov
in
dec
repz
sbb
call
pusha
scas
in
ins
sub
sti
mov
mov
bound
pop
xor
jne
jmp
scas
jno
int
rep
dec
call
imul
mov
out
fld
adc
cld
pop
inc
adc
jae
jmp
lds
ins
dec
(bad)
out
(bad)
bound
dec
call
in
xchg
push
bound
inc
push
gs
scas
in
dec
loopne
jb
jbe
inc
adc
sbb
call
arpl
cld
call
jbe
std
dec
rep
push
cdq
adc
les
dec
rep
pop
xor
scas
push
jmp
mov
int
rep
dec
call
imul
loopne
push
call
mov
pop
sar
ss
jmp
cli
shl
dec
cli
mov
dec
or
bound
pop
out
mov
xchg
(bad)
in
test
test
test
scas
out
sub
enter
adc
mov
jg
in
push
pop
and
and
mov
mov
scas
and
xor
dec
in
pop
adc
add
sti
dec
jmp
call
and
mov
bound
bound
mov
bound
add
push
movs
mov
les
inc
or
jno
int
rep
dec
call
imul
sbb
sbb
mov
mov
arpl
pop
in
mov
xchg
sbb
in
mov
or
mov
push
loopne
push
call
mov
push
loopne
push
mov
xchg
mov
jno
aad
sbb
movs
dec
mov
xchg
pop
rep
dec
in
fs
or
stc
ins
adc
int3
stos
cmp
out
scas
in
dec
bnd
out
mov
xchg
lds
in
fs
cdq
mov
xchg
mov
inc
inc
out
dec
repz
sahf
stc
call
inc
(bad)
out
dec
repz
inc
clc
call
jge
repnz
or
sti
pushf
cmp
bound
add
jno
cmc
mov
xlat
(bad)
(bad)
pop
dec
rep
pop
xor
in
push
jmp
out
lea
pop
pop
mov
mov
mov
jae
shl
cdq
adc
pop
sub
retf
std
lea
xlat
sub
inc
sti
call
inc
fldlg2
dec
repz
and
call
mov
jge
(bad)
cmp
bound
dec
sti
call
push
scas
in
dec
in
inc
(bad)
adc
cld
sbb
mov
jno
push
lea
pop
and
and
mov
test
out
mov
push
dec
stc
sti
call
popf
push
bnd
xchg
jb
jmp
lds
ins
dec
fstp
les
ins
aaa
ins
dec
sti
mov
and
(bad)
call
call
popf
mov
pop
mov
call
xchg
mov
lods
xchg
in
cmps
or
pop
fnstsw
xchg
push
arpl
dec
std
mov
and
les
and
mov
mov
cdq
ss
(bad)
call
call
popf
mov
addr16
or
adc
xchg
ja
scas
in
pop
cmp
clc
adc
movs
xor
xchg
dec
rep
push
cdq
adc
les
push
jle
dec
sti
fwait
push
xchg
stos
movs
in
inc
imul
adc
pop
fldenv
mov
jae
call
xchg
mov
lods
xchg
xchg
mov
inc
test
in
scas
in
dec
loopne
jb
jae
inc
adc
in
dec
push
jge
jecxz
add
mov
scas
inc
or
bound
popa
adc
movs
aaa
test
(bad)
mov
dec
sti
mov
adc
dec
cmp
hlt
xor
ins
dec
(bad)
cmp
sbb
in
ins
inc
ins
dec
sti
mov
mov
hlt
scas
in
dec
loopne
jb
jb
inc
pop
(bad)
mov
dec
repz
ret
inc
std
inc
dec
test
sti
call
popf
push
cld
jo
jb
xchg
mov
mov
bound
pop
add
inc
adc
pop
xchg
dec
repz
enter
adc
dec
mov
push
in
mov
and
and
mov
test
nop
out
mov
pop
push
dec
stc
sti
call
popf
push
repnz
xchg
xchg
adc
(bad)
mov
dec
sti
mov
add
cmp
sti
ins
aaa
test
stos
cmp
jae
cli
xor
ins
dec
(bad)
cmp
xlat
lods
xchg
int3
movs
or
push
movs
mov
les
aad
sbb
rcr
mov
dec
repz
ret
addr16
inc
ja
loop
push
test
lods
loope
pusha
aad
adc
mov
hlt
push
pop
and
and
mov
test
test
mov
xlat
(bad)
(bad)
pop
dec
rep
pop
xor
aad
jmp
clc
js
and
xor
clc
jg
popf
fs
xor
clc
mov
dec
cmc
je
fistp
mov
bound
dec
in
mov
inc
mov
(bad)
push
mov
lods
shl
int
rep
dec
call
imul
mov
out
fld
adc
cld
xor
mov
jnp
jmp
in
lods
in
dec
fistp
dec
sti
pushf
cmp
in
lods
in
dec
rcr
fild
xchg
mov
outs
(bad)
and
pop
xor
push
pop
jmp
js
scas
in
add
call
xchg
mov
lods
xchg
jmp
in
mov
movs
or
dec
ins
inc
ins
dec
sti
mov
sub
dec
cmp
(bad)
cmps
call
adc
cmp
mov
inc
outs
add
mov
adc
rcr
in
dec
test
mov
test
push
loopne
push
call
test
push
loopne
push
mov
xchg
mov
jno
aad
adc
or
aad
mov
inc
rep
dec
pop
mov
mov
mov
jae
call
xchg
mov
lods
xchg
sub
outs
movs
inc
test
in
scas
in
dec
loopne
jb
jl
inc
adc
in
dec
repz
retf
adc
ret
shr
dec
sti
mov
call
ins
dec
std
mov
mov
test
push
stos
jg
fld
adc
cld
je
adc
test
movs
mov
les
inc
gs
and
inc
xor
dec
rol
lds
int
repnz
dec
ror
adc
fstp
xchg
push
loopne
jb
jg
inc
pop
shl
dec
repz
ret
pop
lock
dec
in
pop
iret
jge
in
mov
stos
in
pop
scas
in
dec
push
jge
in
in
mov
jmp
mov
inc
pop
mov
in
dec
repz
ret
sbb
xchg
xlat
sbb
stc
sti
call
popf
push
cld
jo
push
popa
cmp
sbb
mov
ins
jbe
dec
sti
mov
adc
cmp
(bad)
call
call
popf
mov
pop
mov
call
xchg
mov
lods
xchg
fisubr
add
mov
sub
retf
std
mov
shl
int
icebp
ins
dec
fcomi
pop
mov
bound
dec
fisttp
mov
bound
(bad)
hlt
call
lods
xchg
add
jecxz
mov
mov
mov
jno
aad
pop
xchg
mov
mov
rcr
mov
dec
repz
ret
pop
icebp
inc
inc
in
dec
rcr
sti
call
inc
scas
in
dec
aad
in
fistp
dec
sub
retf
std
mov
in
lods
in
dec
fild
sti
neg
in
dec
repz
ret
jecxz
inc
dec
in
dec
repz
ret
lock
inc
dec
test
sti
call
popf
push
repnz
cmp
mov
bound
bound
adc
xchg
inc
dec
out
dec
repz
repnz
call
inc
jmp
call
inc
or
dec
repz
loopne
call
jno
call
call
pop
scas
in
dec
cmp
nop
push
nop
pop
mov
push
mov
jae
call
xchg
mov
lods
xchg
aaa
scas
or
push
aam
outs
movs
inc
test
in
scas
in
dec
loopne
jb
jns
inc
adc
in
ins
xchg
ins
dec
sti
mov
mov
jae
sti
pop
in
pop
test
xchg
mov
inc
into
in
dec
repz
jo
call
bound
dec
shl
movs
les
cld
push
ror
call
cdq
lods
in
dec
fist
sti
pushf
or
ins
scas
in
dec
mov
dec
sti
or
mov
bound
sti
call
bound
aaa
sti
call
bound
dec
sti
call
imul
out
loopne
lds
gs
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
bound
(bad)
out
in
lods
sub
out
xchg
mov
cmps
in
mov
lods
sub
xlat
sbb
dec
sti
xchg
adc
les
in
dec
repz
sti
call
mov
mov
repnz
mov
dec
inc
cmc
sbb
sar
test
lea
mov
ja
or
pop
fisttp
sti
addr16
push
xchg
mov
mov
jo
int
lock
dec
fild
jns
bound
push
(bad)
mov
dec
stc
jge
fisttp
add
rep
dec
and
xchg
mov
inc
push
in
dec
repz
cmps
sti
call
bound
dec
shl
adc
push
dec
mov
cs
adc
call
fs
in
mov
cwde
adc
les
test
dec
sti
fist
mov
bound
jmp
sti
call
bound
or
call
gs
in
vpunpcklqdq
lahf
adc
(bad)
cld
lods
in
dec
xor
sti
mov
mov
bound
out
dec
repz
mov
bound
mov
add
scas
in
cld
icebp
ins
dec
adc
xchg
mov
jecxz
in
dec
mov
sti
adc
mov
bound
dec
repz
sti
call
bound
lahf
stc
call
scas
in
out
ins
dec
xor
adc
(bad)
fsubr
dec
sti
int3
adc
(bad)
cmc
jmp
sti
call
bound
repz
call
pusha
scas
in
imul
sahf
adc
les
outs
dec
sti
cmp
mov
bound
repz
dec
sti
call
bound
out
call
bound
dec
neg
mov
push
in
dec
add
sti
call
bound
dec
repz
sti
call
bound
push
call
inc
mov
push
adc
sub
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
dec
sti
call
bound
or
call
bound
dec
mov
adc
les
ins
dec
sti
lds
les
in
dec
repz
dec
sti
call
bound
xor
call
bound
dec
imul
in
dec
push
ins
dec
sti
ss
les
in
dec
rep
dec
sti
call
bound
xchg
sti
call
cmps
push
adc
fdivr
dec
pop
scas
cdq
sub
(bad)
cmps
in
jae
sbb
mov
sub
ror
sub
dec
popa
repnz
fsub
movs
dec
mov
repnz
xlat
push
fdiv
add
pop
test
fiadd
in
ds
lods
cdq
addr16
(bad)
shr
cmp
test
xchg
mov
addr16
popa
ja
and
out
aad
or
mov
ret
jmp
fild
popf
mov
xchg
push
ret
lock
push
adc
push
pop
add
jmp
push
repnz
and
cmp
dec
cmp
xchg
mov
test
cmp
cmp
aad
or
mov
mov
lods
sbb
mov
jae
ret
test
inc
dec
jmp
inc
jmp
mov
repz
sti
call
bound
push
sti
call
bound
dec
rcr
mov
push
scas
in
dec
(bad)
ins
dec
sti
mov
mov
(bad)
out
in
dec
repz
call
bound
push
sti
call
bound
fwait
ret
jmp
mov
add
shl
xchg
jg
stc
dec
dec
repnz
fmul
scas
sub
dec
jns
jg
mov
movs
dec
mov
sub
inc
mov
fdivr
add
jge
(bad)
cli
in
jns
dec
test
scas
mov
addr16
jae
sar
or
mov
std
mov
xchg
push
div
pop
fisttp
repnz
test
dec
test
mov
jae
ror
nop
ror
mov
add
fdiv
popa
dec
test
nop
mov
fwait
out
int
hlt
addr16
jo
push
cmp
adc
in
ins
and
sti
mov
mov
bound
mov
sbb
cmps
sub
in
repz
mov
bound
pop
mov
scas
int3
aas
popf
push
repnz
loopne
push
mov
les
jne
xchg
push
aam
in
in
push
push
test
loope
dec
std
fs
mov
je
arpl
shl
dec
sti
call
push
scas
in
dec
in
daa
pop
sub
lods
into
jno
repnz
mov
inc
pop
and
in
and
mov
rol
scas
out
fnstcw
std
lea
les
out
dec
repz
cmp
call
arpl
dec
sti
mov
mov
xor
mov
call
bound
dec
shl
(bad)
xchg
dec
repz
in
mov
cmp
(bad)
jmp
inc
jmp
xlat
push
mov
pop
push
jae
call
imul
rep
push
cdq
adc
les
dec
repz
ror
mov
je
pop
dec
rep
push
cwde
adc
les
inc
in
aas
pop
sub
lods
jmp
push
mov
les
jge
(bad)
mov
test
test
mov
xlat
mov
shl
mov
stos
sub
stos
les
cld
gs
push
fwait
adc
les
sub
pop
jmp
in
lods
in
dec
fistp
dec
sti
pushf
mov
les
in
dec
repz
js
call
xchg
push
adc
test
shr
repnz
loopne
push
fmul
arpl
mov
inc
pop
fistp
adc
les
lds
ins
dec
jmp
in
lods
in
dec
fld
cwde
add
dec
push
mov
in
inc
inc
in
dec
rcr
dec
sti
call
dec
mov
adc
aam
sti
pushf
or
jno
aad
or
sbb
xchg
mov
stc
lods
in
dec
(bad)
sbb
push
movs
jne
push
shl
xchg
mov
scas
in
ins
test
(bad)
mov
imul
add
movs
ds
dec
push
mov
in
inc
dec
(bad)
xor
sub
mov
lods
jecxz
or
add
mov
inc
push
mov
imul
adc
inc
jb
push
rep
pop
sar
in
pop
scas
in
dec
in
mov
call
dec
inc
in
dec
cmc
jp
repnz
test
scas
jle
popf
push
bnd
cdq
push
hlt
mov
cld
fst
mov
dec
popa
or
mov
popf
retf
retf
mov
or
clc
mov
mov
sub
int
icebp
ins
dec
fild
pop
les
sti
jg
jae
call
imul
loopne
push
mov
les
jge
(bad)
mov
test
test
mov
xlat
mov
mov
shl
add
in
dec
loop
push
jo
jmp
sti
ins
and
dec
sti
mov
call
gs
(bad)
mov
sbb
dec
cmp
(bad)
mov
test
shr
repnz
imul
fwait
mov
cmp
push
mov
int
lock
dec
fisttp
add
xor
into
xor
ror
in
dec
cmc
jp
cli
cdq
adc
les
push
dec
repz
mov
mov
xlat
mov
inc
mov
mov
cld
cld
pop
adc
test
test
mov
xlat
mov
pusha
mov
mov
mov
div
ins
dec
fld
pop
mov
bound
xor
call
pop
into
sbb
cmp
cmc
adc
nop
xchg
push
adc
dec
sti
mov
call
jne
sti
mov
fwait
cmp
jns
aam
repz
fstp
cmp
bound
dec
in
fisub
add
aad
add
mov
mov
mov
mov
jae
call
xor
mov
mov
mov
bound
dec
sti
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
fild
dec
sti
pushf
das
mov
mov
jno
cld
sahf
mov
dec
sti
call
bound
fsincos
call
bound
dec
mov
adc
les
in
dec
xor
push
adc
les
in
dec
repz
mov
bound
pop
call
xor
ret
bound
dec
repz
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
(bad)
sahf
fsubr
pop
shl
nop
test
mov
xchg
ds
sbb
sar
pop
and
gs
scas
in
rep
inc
sti
call
bound
dec
in
mov
fcomp
mov
jp
retf
dec
inc
neg
jae
call
imul
sbb
popa
pop
cmp
sbb
repnz
or
mov
and
push
(bad)
test
test
scas
inc
cmp
jae
call
imul
(bad)
dec
cmps
clc
call
dec
inc
in
dec
cmc
jg
fneni(8087
std
cmp
bound
dec
(bad)
mov
lods
in
pop
scas
in
dec
in
xor
xlat
mov
mov
bound
mov
cmp
in
dec
cmc
dec
push
mov
xchg
mov
mov
jnp
sub
mov
bound
dec
sti
pop
adc
les
in
dec
repz
sti
call
bound
sar
call
bound
dec
sti
call
jne
inc
push
loopne
popa
dec
mov
les
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
imul
sub
out
mov
in
push
push
popf
mov
dec
sti
xchg
adc
les
in
dec
repz
sti
call
mov
mov
shr
sub
dec
inc
repnz
fadd
mov
mov
fnsave
imul
sub
pop
push
fmul
mov
cmps
test
or
ins
dec
sti
xchg
adc
les
in
dec
repz
call
bound
cli
sti
call
bound
dec
js
adc
(bad)
lock
in
dec
jne
dec
sti
add
push
test
xlat
mov
dec
sti
lahf
adc
les
in
dec
repz
call
bound
fnsetpm(287
xchg
ds
sbb
inc
fmul
icebp
addr16
popa
pop
cmp
sbb
call
sti
call
bound
dec
jecxz
adc
adc
adc
outs
or
dec
inc
repz
sbb
push
adc
test
pop
push
adc
mov
lods
sub
out
mov
dec
in
add
in
scas
in
dec
fcmovne
dec
sti
pushf
push
xchg
sbb
adc
dec
pop
mov
bound
dec
call
adc
fisttp
in
dec
cmc
adc
call
jg
aam
repz
aaa
cwde
adc
les
into
dec
repz
fistp
mov
fs
std
mov
mov
lods
in
dec
rcr
sti
call
inc
mov
pop
cs
(bad)
mov
stos
in
dec
mov
sti
push
adc
bound
dec
rep
dec
sti
call
bound
pop
repnz
scas
in
push
imul
xchg
adc
les
in
dec
nop
gs
sti
ficomp
mov
bound
dec
repz
sti
call
bound
mov
call
ins
scas
in
jmp
xchg
adc
les
in
dec
xchg
push
sti
call
mov
bound
dec
repz
inc
sti
call
bound
xor
call
outs
scas
in
mov
xchg
adc
les
addr16
sti
call
bound
loopne
repz
mov
xchg
aam
bound
mov
call
outs
scas
in
in
(bad)
ins
dec
(bad)
xchg
adc
(bad)
into
movs
in
dec
test
adc
(bad)
stc
in
repz
call
bound
jb
call
ins
scas
in
das
clc
ins
dec
push
popf
adc
les
stos
in
dec
mov
adc
bound
repz
call
bound
adc
call
imul
mov
add
gs
sti
push
pop
mov
bound
dec
sti
call
bound
or
call
gs
in
cmc
clc
ins
dec
aam
adc
les
dec
sti
scas
adc
bound
dec
sti
call
bound
dec
sti
call
push
ins
dec
aas
xchg
adc
les
in
dec
pop
fs
sti
jno
mov
(bad)
call
sti
call
bound
mov
call
outs
scas
in
cli
(bad)
ins
dec
and
mov
fisubr
dec
sti
mov
mov
bound
dec
sti
call
bound
pop
(bad)
call
imul
mov
xchg
mov
push
mov
dec
sti
xor
mov
dec
repz
inc
sti
call
bound
ss
cs
lahf
ret
bnd
sub
adc
les
in
dec
repz
sti
call
bound
data16
call
bound
dec
les
mov
das
scas
in
dec
mov
adc
les
in
dec
repz
call
bound
cmp
call
bound
dec
je
adc
(bad)
jmp
dec
sti
xor
mov
bound
in
dec
repz
mov
bound
scas
sti
call
bound
dec
sti
fwait
adc
les
dec
out
dec
sti
xchg
add
in
dec
repz
dec
sti
call
bound
add
add
in
sub
ins
dec
mov
mov
loopne
in
dec
jp
dec
sti
or
add
les
in
dec
repz
call
bound
xchg
call
arpl
dec
adc
mov
xchg
scas
in
dec
or
pop
mov
bound
call
imul
jns
dec
sti
mov
movs
adc
test
push
mov
ds
out
cdq
push
jge
(bad)
call
nop
into
mov
les
(bad)
mov
aaa
popa
cmp
cdq
js
xor
jmp
mov
or
retf
jge
(bad)
in
or
mov
jge
(bad)
(bad)
in
cmp
mov
cdq
dec
jle
popa
push
sahf
inc
ret
ds
and
xchg
mov
xchg
push
fldenv
lods
rcr
adc
(bad)
jmp
scas
aad
or
mov
jmp
dec
in
scas
in
dec
retf
es
or
popf
mov
jno
xchg
mov
test
(bad)
jmp
fld
xchg
push
cdq
mov
xchg
push
bound
mov
test
pop
imul
or
mov
cmps
sub
fild
xchg
out
mov
xchg
push
out
out
inc
jmp
jecxz
pop
adc
ja
inc
dec
adc
call
adc
cmp
mov
lods
fstp
adc
pop
jmp
dec
adc
push
stc
add
scas
push
cmp
ins
dec
ret
cmp
inc
dec
adc
call
std
scas
in
dec
retf
jmp
add
or
cmp
dec
cmp
xchg
mov
mov
mov
test
gs
push
repnz
ss
gs
cld
xor
mov
dec
jb
fs
xchg
shl
call
popf
mov
je
xchg
mov
test
and
dec
cmp
aad
or
sub
fistp
push
mov
lods
fcomp
adc
addr16
cld
xchg
push
adc
addr16
push
adc
in
push
in
mov
cld
cdq
push
adc
call
outs
scas
in
dec
out
dec
sti
adc
dec
repz
dec
sti
call
bound
jo
call
bound
dec
mov
adc
les
scas
in
dec
movs
ins
dec
sti
rcl
(bad)
int3
in
dec
repz
call
bound
xor
call
bound
dec
outs
call
(bad)
scas
in
dec
pop
ins
dec
sti
sub
mov
bound
dec
repz
mov
bound
mov
or
addr16
and
addr16
push
mov
cdq
sub
in
dec
repz
lods
in
ds
pop
out
sbb
(bad)
xchg
shl
dec
sti
call
jge
mov
pop
nop
les
(bad)
icebp
in
dec
popa
inc
test
mov
fsubr
shl
loope
hlt
ds
out
addr16
(bad)
shl
inc
(bad)
in
and
cwde
cdq
push
jp
jl
push
ins
dec
sti
mov
movs
push
mov
in
dec
retf
adc
cmp
dec
cmp
xchg
mov
test
and
cmp
in
dec
repz
pop
add
jmp
push
int
rep
dec
ret
(bad)
jmp
push
adc
call
repz
in
dec
retf
pop
mov
or
popf
mov
je
xchg
mov
mov
mov
popf
push
adc
push
pop
add
jmp
push
repnz
loopne
push
test
dec
cmp
(bad)
mov
test
jmp
mov
adc
rol
stos
sub
loope
jp
pusha
fdivr
movs
bsr
inc
test
pop
fsubr
movs
sub
pop
push
in
inc
clc
in
ds
jge
(bad)
jmp
nop
sahf
mov
gs
ror
or
sub
movs
out
jmp
jae
rcr
or
popf
mov
je
xchg
mov
sub
pop
(bad)
adc
clc
jmp
push
adc
gs
push
adc
push
or
gs
push
bnd
push
mov
or
popf
(bad)
cmp
mov
bound
dec
inc
pop
les
int
rep
dec
(bad)
adc
lds
int
sbb
sbb
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
fcmovnbe
dec
sti
pushf
or
adc
call
ret
in
push
outs
cmp
neg
jae
call
inc
mov
xchg
push
adc
int3
stos
test
in
scas
in
dec
rcr
dec
sti
call
test
sbb
call
bound
sbb
mov
mov
popa
scas
in
ins
outs
outs
dec
sti
mov
mov
jl
cmp
mov
test
xlat
mov
pop
mov
mov
fistp
call
mov
lds
int
repnz
dec
rcr
adc
push
mov
sub
(bad)
repz
std
in
mov
mov
mov
sti
pushf
add
jae
mov
push
ins
push
cwde
adc
les
dec
rep
push
fwait
adc
les
dec
repz
in
push
outs
cmp
stos
pop
pop
jae
call
imul
in
jg
in
push
outs
cmp
ret
ins
pop
test
stos
lea
in
scas
in
dec
rol
dec
sti
call
and
dec
std
mov
xchg
cmc
popa
scas
in
xor
test
dec
mov
int
icebp
ins
dec
fistp
mov
bound
lahf
ret
push
loopne
dec
xchg
pop
es
test
push
lods
fidiv
repnz
mov
inc
push
test
push
in
jg
in
push
outs
cmp
inc
cmp
jae
shl
mov
mov
ins
dec
(bad)
mov
bound
dec
fist
adc
add
int
sbb
sbb
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
fild
dec
sti
pushf
xor
ror
in
dec
cmc
jp
push
cdq
adc
les
retf
push
repnz
aad
xchg
xor
cdq
push
mov
mov
cld
ins
pop
adc
test
test
mov
es
mov
gs
scas
jmp
sar
test
mov
bound
push
scas
jg
ret
inc
loope
dec
(bad)
out
adc
mov
lods
or
push
call
inc
mov
push
adc
inc
cmps
es
sbb
add
imul
adc
bound
bound
call
inc
mov
mov
test
cmc
mov
pop
es
cmp
gs
mov
loopne
in
outs
cmp
inc
cmp
je
sar
add
loop
push
jb
jmp
sti
ins
mov
ja
add
jmp
shl
mov
and
dec
cmp
(bad)
mov
test
aad
mov
jns
popf
push
out
xchg
movs
push
test
fistp
lahf
mov
test
nop
in
mov
enter
pop
iret
jge
in
mov
test
pop
scas
in
dec
push
jge
in
in
mov
jns
cmp
mov
test
test
mov
xlat
mov
cs
mov
fistp
lahf
mov
mov
mov
xor
dec
pop
mov
mov
or
loopne
jb
imul
outs
jge
(bad)
cdq
retf
call
fwait
adc
lods
fidiv
repnz
mov
inc
adc
dec
pop
iret
ja
repnz
mov
mov
or
push
ret
mov
cld
das
pop
adc
test
test
mov
xlat
mov
sar
mov
xchg
(bad)
in
fs
ins
dec
std
mov
fwait
sar
jns
aam
repz
iret
mov
adc
jmp
push
mov
jge
fcmovnb
push
mov
bound
dec
call
mov
es
cmps
or
lods
adc
lods
shl
repnz
loopne
push
test
dec
cmp
cld
sbb
jl
lods
xor
fmul
in
dec
cmc
jae
in
cmp
jmp
rep
pop
mov
lods
mov
loopne
push
test
dec
cmp
(bad)
mov
test
test
mov
xlat
mov
gs
mov
stos
xor
test
in
xor
mov
mov
jge
dec
in
jb
push
test
aad
in
ss
push
cld
sbb
mov
test
mov
es
add
gs
popf
in
fnstsw
ret
lods
out
dec
stc
pop
pop
jae
call
imul
loopne
push
in
mov
cld
jo
adc
mov
fwait
xchg
dec
repz
mov
pop
and
in
jb
push
test
aad
push
xor
loop
shr
lods
or
or
mov
jno
cld
jo
jge
pop
test
test
scas
jnp
popf
push
bnd
(bad)
push
test
dec
cmp
dec
in
jb
push
test
aad
sbb
in
jge
mov
mov
xor
dec
pop
test
aad
aas
xor
pop
jae
call
imul
loopne
push
test
dec
cmp
hlt
pop
sar
xor
dec
(bad)
bound
dec
ja
adc
les
int
rep
dec
ror
mov
jno
aad
add
fwait
mov
xor
jns
aam
repz
loope
mov
cld
inc
pop
adc
test
test
mov
xlat
mov
cld
mov
add
mov
mov
sti
pushf
xor
in
lods
in
dec
(bad)
dec
sti
pushf
or
bound
dec
sti
call
popf
mov
pop
pop
jae
call
imul
in
jg
in
push
outs
cmp
inc
cmp
gs
sti
sahf
mov
cmp
(bad)
fisttp
sub
repz
iret
add
cmp
inc
cmp
jg
in
push
adc
jmp
sbb
call
cmp
mov
add
loop
and
cdq
retf
add
mov
arpl
xor
mov
inc
pop
ficomp
push
in
jg
in
push
outs
cmp
inc
cmp
jge
jmp
in
lods
in
dec
(bad)
dec
sti
pushf
cmp
loop
mov
lahf
ret
and
xlat
enter
es
inc
or
stos
push
mov
cs
icebp
fs
std
mov
in
scas
in
dec
fld
mov
mov
mov
mov
movs
dec
test
fistp
xor
mov
pop
pop
jae
call
imul
cmc
jne
std
or
arpl
dec
sti
mov
mov
pusha
scas
in
ins
xchg
outs
dec
sti
mov
mov
jno
aad
sbb
mov
aam
adc
jmp
add
test
test
mov
xlat
mov
and
jnp
xchg
test
dec
in
push
in
cmp
rcl
repnz
mov
inc
pop
lods
cdq
xor
(bad)
out
adc
mov
lods
dec
repnz
loopne
push
in
mov
cld
inc
inc
adc
mov
mov
mov
retf
dec
sti
call
jno
int
rep
dec
call
imul
mov
ret
jne
inc
inc
imul
adc
bound
bound
fwait
adc
(bad)
cmp
mov
test
xlat
enter
es
call
mov
ins
push
in
jg
in
push
outs
cmp
pop
cmp
jge
std
or
inc
in
dec
repz
sbb
call
or
add
or
mov
and
lods
push
xchg
scas
in
pop
scas
in
dec
in
xor
call
dec
ins
in
dec
cmc
jp
repnz
aad
imul
popf
push
repnz
fcomp
movs
jg
addr16
push
inc
adc
mov
mov
cdq
retf
dec
movs
add
or
ret
int
lock
dec
fstp
mov
bound
dec
fiadd
pextrw
bound
pop
sub
xchg
mov
xchg
dec
sti
mov
mov
bound
dec
rep
dec
sti
call
bound
test
call
arpl
dec
jo
adc
les
dec
add
push
mov
bound
dec
repz
call
bound
sbb
call
jno
mov
(bad)
psadbw
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
data16
call
bound
jb
gs
test
push
fadd
movs
or
dec
hlt
adc
rol
mov
dec
lods
ror
repnz
fdivr
movs
push
mov
repz
pop
jae
call
imul
rep
inc
sti
call
bound
dec
in
call
jge
in
dec
in
jg
sub
imul
shl
jmp
mov
adc
sbb
mov
mov
jo
or
pop
(bad)
mul
jae
sar
nop
fisttp
in
pop
iret
jne
push
test
test
scas
cmp
jo
dec
xlat
adc
movs
sub
cld
jo
adc
call
pop
rcl
or
inc
call
inc
mov
loopne
push
call
inc
mov
iret
je
in
add
cld
and
mov
push
push
test
movs
xlat
leave
mov
pop
and
jmp
mov
pop
and
jmp
mov
dec
sti
pushf
mov
or
cmp
mov
mov
fwait
stc
xchg
mov
inc
sbb
mov
call
inc
jno
imul
xor
in
fild
(bad)
call
mov
cmp
cld
ins
dec
sti
adc
mov
bound
dec
sti
call
bound
dec
sti
call
bound
dec
xchg
mov
out
scas
in
dec
cli
ins
dec
sti
add
pop
cwde
mov
loopne
imul
adc
bound
inc
sti
call
bound
dec
in
mov
nop
mov
pop
fcomp
nop
in
lea
push
loopne
pop
jns
adc
bound
pop
sti
call
bound
popf
ret
retf
dec
(bad)
mov
mov
mov
into
mov
pop
and
jle
gs
mov
mov
mov
xchg
sbb
repnz
loopne
pop
and
sbb
bound
(bad)
call
bound
dec
jp
adc
les
in
dec
jle
dec
sti
call
bound
dec
sti
call
dec
push
cld
loope
push
sti
call
bound
inc
sti
call
bound
popa
outs
cmp
fisttp
lock
push
cmp
aad
jmp
call
bound
dec
in
call
pop
repz
cmp
pop
popf
cdq
sub
push
cli
inc
mov
adc
test
lahf
push
shr
nop
in
(bad)
cdq
cs
or
jg
jmp
sti
bound
dec
cld
call
fs
in
dec
mov
dec
sti
rcl
les
repnz
repz
ror
shl
dec
rep
dec
repz
ins
scas
in
dec
loop
dec
sti
add
sub
stos
out
fwait
mov
mov
mov
mov
bound
push
sti
call
in
test
or
call
repnz
in
dec
fsub
mov
mov
arpl
dec
sti
call
bound
inc
sti
call
ins
scas
in
lock
dec
cmp
mov
push
ins
dec
sti
xor
mov
dec
repz
inc
sti
call
bound
fdivrp
call
pusha
scas
in
inc
rep
dec
sti
call
jg
in
dec
and
sti
mov
mov
arpl
push
add
stos
dec
rep
inc
sti
call
inc
scas
in
idiv
ins
dec
add
xchg
mov
push
ins
dec
sti
sbb
les
fmul
dec
sti
call
bound
addr16
call
pusha
scas
in
inc
rep
dec
sti
call
mov
pop
dec
sti
pusha
adc
add
dec
repz
jo
call
bound
inc
sti
call
and
dec
rcr
adc
les
in
dec
rep
dec
sti
mov
mov
(bad)
clc
mov
sti
call
bound
dec
cli
call
bound
dec
sti
call
jg
in
dec
dec
sbb
sti
mov
mov
arpl
xor
call
bound
inc
sti
call
push
scas
in
mov
ins
dec
xchg
adc
les
in
dec
rep
dec
sti
push
mov
bound
sti
call
bound
mov
pop
(bad)
xchg
mov
popa
scas
in
inc
rep
dec
call
xchg
mov
je
in
pop
retf
(bad)
dec
sti
call
(bad)
(bad)
in
dec
repz
dec
sti
call
bound
jge
call
bound
dec
mov
xchg
mov
fsubr
dec
sti
clc
pop
mov
bound
in
dec
repz
sti
call
bound
push
cli
call
pusha
scas
in
add
ins
dec
iret
fwait
adc
les
in
dec
popf
outs
dec
sti
xor
mov
bound
dec
sti
call
bound
aaa
stc
call
inc
scas
in
dec
aad
imul
sub
(bad)
in
mov
adc
adc
in
dec
(bad)
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
addr16
call
bound
dec
(bad)
call
es
in
dec
mov
push
test
scas
dec
cmp
cdq
push
out
in
bsr
je
add
out
scas
in
ds
pop
mov
sbb
(bad)
xchg
in
addr16
test
out
scas
mov
popa
cmp
mov
addr16
jae
shr
loop
mov
jb
fs
mov
mov
mov
dec
xchg
mov
imul
sti
mov
les
in
dec
repz
sti
call
bound
pusha
sti
call
add
mov
je
push
cmp
sub
push
push
inc
in
ds
sbb
push
(bad)
xor
inc
xchg
in
outs
sbb
mov
jno
aad
or
out
sub
out
(bad)
mov
sbb
sar
mov
ja
out
mov
jl
sub
outs
shl
hlt
pop
cmc
jae
call
scas
dec
cmp
ins
inc
lock
pop
fwait
add
in
dec
repz
out
call
mov
imul
adc
pop
adc
xchg
mov
sub
popf
mov
dec
in
jns
repz
lods
retf
lock
sti
push
in
push
gs
mov
pop
cmc
jae
call
scas
and
popf
push
cld
dec
loop
fcomi
xchg
pop
mov
xor
dec
fistp
mov
bound
dec
(bad)
pushf
(bad)
bound
dec
test
repnz
loopne
push
call
imul
loopne
push
call
imul
div
call
xchg
scas
xlat
push
leave
mov
xchg
pop
dec
mov
pop
push
xchg
mov
mov
lods
adc
jmp
or
pop
shr
test
mov
mov
xchg
push
cmc
mov
cmps
adc
adc
mov
call
bound
jb
fwait
adc
test
in
js
ins
dec
cbw
adc
les
stos
in
dec
pop
outs
dec
sti
repnz
bound
dec
repz
dec
sti
call
bound
pop
clc
call
popa
scas
in
mov
ins
dec
adc
mov
xchg
scas
in
dec
call
pop
mov
(bad)
jmp
repz
sti
call
bound
push
stc
call
scas
in
arpl
ins
dec
clc
cwde
adc
les
in
dec
es
dec
sti
scas
pop
mov
bound
dec
repz
sti
call
bound
inc
stc
call
arpl
dec
add
xchg
mov
xor
sti
popf
pop
mov
bound
dec
sti
call
bound
xor
push
xchg
mov
arpl
dec
rcr
les
push
mov
jno
aad
or
adc
imul
dec
rep
inc
sti
call
bound
dec
jecxz
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
test
adc
les
scas
in
dec
lods
ins
dec
sti
stc
adc
les
in
dec
repz
call
bound
xor
call
pop
mov
mov
test
nop
cmc
mov
mov
test
out
xor
rol
xchg
sub
lock
jge
fsub
mov
movs
adc
je
pop
test
push
enter
mov
movs
and
pop
push
call
adc
lods
cdq
arpl
(bad)
out
in
jbe
test
nop
fwait
lea
fsub
inc
fndisi(8087
mov
movs
ss
repnz
out
push
jecxz
imul
jmp
in
jbe
in
push
mov
popf
mov
inc
in
jge
jmp
mov
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
int3
call
pop
scas
in
dec
mov
dec
sti
fst
xlat
xchg
(bad)
mov
xchg
push
shr
sub
dec
inc
repnz
rep
sub
push
fist
xor
mov
hlt
mov
movs
das
mov
and
inc
and
mov
(bad)
repz
jne
inc
test
nop
mov
mov
dec
retf
js
add
or
lea
popa
adc
cdq
and
fdiv
lods
sub
iret
dec
jg
pop
fsub
movs
sbb
jbe
jp
sub
in
ds
mov
les
inc
push
test
cmp
ins
dec
(bad)
mov
xchg
arpl
dec
std
mov
xchg
pop
pusha
scas
in
mov
mov
xchg
or
xchg
ins
dec
std
test
push
mov
rol
pop
jmp
lods
repz
pop
repnz
(bad)
jae
call
imul
push
test
cmp
outs
xor
call
bound
(bad)
(bad)
call
dec
shr
dec
cmc
dec
idiv
call
dec
into
in
dec
cmc
dec
stos
adc
mov
fs
ins
push
call
fs
xor
mov
sub
bound
dec
ror
cmc
jno
aad
or
stos
adc
adc
jae
test
aas
popf
push
xchg
pop
rep
dec
(bad)
(bad)
bound
dec
fisttp
push
mov
bound
dec
cld
lea
rcr
call
data16
adc
call
inc
clc
out
dec
repz
ja
call
inc
call
call
add
dec
sti
call
or
in
dec
fbld
sahf
sub
fld
sbb
popa
push
jmp
cmp
push
push
push
test
aas
popf
push
repnz
fadd
mov
bound
dec
shl
xor
bound
dec
shl
adc
(bad)
bound
dec
sar
adc
cs
lock
std
mov
xchg
jmp
int
dec
std
mov
test
pop
scas
in
dec
rcl
sti
call
hlt
scas
in
dec
clc
jae
call
imul
loopne
jb
pusha
jmp
mov
jb
pusha
jmp
(bad)
lahf
dec
rep
push
cdq
adc
les
dec
rep
push
fwait
adc
les
ins
jg
dec
sti
mov
call
adc
call
inc
adc
dec
repz
(bad)
sti
call
inc
jmp
call
(bad)
scas
in
dec
shl
sti
call
lfence
dec
fbld
ret
mov
sub
dec
cmp
(bad)
mov
mov
mov
popf
mov
inc
in
sbb
push
adc
in
mov
arpl
dec
sti
mov
mov
arpl
dec
sti
mov
mov
pusha
scas
in
ins
xchg
outs
dec
sti
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
fild
sti
pushf
xor
ror
in
dec
cmc
dec
jl
call
dec
mov
dec
cmc
addr16
(bad)
mov
sbb
loopne
loop
dec
ret
pop
in
inc
inc
repnz
loopne
jb
arpl
inc
jle
mov
data16
int3
dec
rep
push
cdq
adc
les
or
int
sti
pushf
adc
(bad)
ins
bound
adc
aam
scas
jmp
sti
mov
call
jae
shl
adc
push
mov
(bad)
bound
dec
rcr
icebp
(bad)
bound
dec
rcl
mov
je
xchg
mov
test
nop
cmc
cmp
or
repnz
push
loop
dec
ret
jb
inc
dec
xchg
pop
rep
dec
fld
mov
bound
dec
fisttp
mov
bound
dec
fist
xchg
(bad)
bound
dec
fstp
cmp
bound
psrlq
adc
push
mov
cs
repz
std
cmc
btc
pushf
mov
je
xchg
mov
test
mov
xchg
mov
jnp
in
sbb
push
adc
sahf
jp
add
in
inc
hlt
jnp
out
adc
les
idiv
mov
call
in
in
dec
rcr
cmp
icebp
scas
in
dec
shl
rol
xchg
mov
jg
in
push
fld
sti
pushf
xor
mov
mul
in
ins
shr
sti
mov
mov
jp
xchg
fs
ins
dec
std
inc
adc
sub
dec
sti
call
bound
dec
sti
call
bound
or
call
inc
test
inc
hlt
sub
call
bound
dec
neg
mov
jnp
(bad)
jecxz
inc
mov
mov
mov
xchg
mov
mov
pushf
xor
mov
in
dec
cmc
dec
pop
div
mov
bound
dec
out
adc
ret
bound
out
repz
sti
mov
int3
adc
in
ja
ins
dec
or
xchg
mov
bound
dec
sti
mov
mov
bound
dec
repz
call
bound
add
call
bound
dec
add
mov
jp
in
dec
fsubr
sti
pop
adc
les
in
dec
repz
dec
sti
call
bound
pop
call
test
or
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
leave
call
pop
in
adc
outs
or
dec
inc
repz
sar
sub
dec
jno
sub
ror
test
mov
mov
xor
jno
aad
or
mov
xchg
push
mov
mov
mov
jge
mov
sahf
mov
bound
sti
call
bound
push
sti
call
pushf
push
adc
call
jns
out
mov
inc
sar
mov
jbe
xlat
outs
mov
pop
loopne
loop
gs
mov
mov
or
cmp
fld
mov
je
xchg
mov
in
mov
jns
(bad)
je
xchg
mov
test
nop
cmc
mov
pop
loopne
pop
add
movs
xlat
addr16
pop
call
imul
dec
ds
bound
dec
sar
adc
shl
test
rep
dec
dec
call
lods
scas
in
dec
cmp
adc
les
in
dec
repz
dec
sti
call
bound
mov
call
bound
dec
ds
sub
sti
and
mov
pop
fmul
pop
neg
pop
mov
bound
pop
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
fsubr
test
test
scas
fidivr
popf
push
repnz
fcomp
movs
push
mov
add
clc
inc
scas
out
mul
je
inc
fdivr
mov
outs
mov
pop
out
jns
gs
scas
in
rep
inc
sti
call
bound
dec
loopne
adc
cld
outs
push
adc
test
nop
icebp
mov
cmps
in
jle
sbb
test
je
xchg
mov
cmp
sbb
repz
sbb
xor
loop
pop
ret
push
jmp
dec
(bad)
pop
retf
shl
and
retf
shl
mov
je
xchg
mov
inc
js
add
cld
pop
mov
dec
sti
call
bound
mov
add
in
mov
ins
dec
xchg
mov
dec
scas
in
dec
adc
dec
sti
addr16
les
in
dec
repz
sti
call
bound
xchg
cli
call
arpl
dec
adc
mov
jmp
ins
dec
sti
inc
adc
les
inc
jge
out
mov
mov
dec
repz
sti
call
bound
pop
sti
call
bound
dec
fistp
mov
dec
scas
in
dec
(bad)
stos
adc
rcr
adc
mov
dec
pop
lahf
cdq
sub
(bad)
cmps
out
inc
mov
sbb
test
push
fdiv
mov
mov
loope
aas
jp
cld
test
test
mov
mov
xchg
pop
cld
fistp
les
loope
rep
pop
sti
call
bound
dec
in
adc
les
(bad)
pop
retf
mov
nop
test
addr16
or
out
cdq
and
(bad)
lods
out
inc
xchg
out
sbb
push
adc
mov
lods
sub
enter
addr16
jb
sbb
outs
mov
scas
in
inc
clc
imul
fwait
or
cmp
dec
rep
bound
mov
pop
(bad)
adc
test
adc
push
cmc
pop
hlt
jae
call
or
mov
sti
sahf
cmp
rcr
in
dec
test
xchg
mov
dec
xchg
in
dec
cmc
jae
in
cmp
(bad)
clc
je
xchg
mov
add
rcr
adc
test
test
mov
mov
xchg
xor
call
bound
bound
adc
lds
int
repnz
dec
shl
adc
in
scas
in
dec
rol
xor
xchg
mov
je
retf
ins
push
cwde
adc
les
pop
loopne
jb
addr16
mov
mov
gs
test
mov
pop
out
fild
gs
(bad)
xor
ins
bound
pushf
lods
shl
aad
push
xchg
mov
inc
push
mov
popa
scas
in
ins
mov
stc
mov
ins
mov
push
sti
call
bound
dec
xchg
call
ins
scas
in
dec
xor
xchg
add
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
aaa
call
mov
in
dec
cli
ins
dec
sti
xchg
adc
les
inc
jns
in
mov
stos
psrlq
dec
rep
inc
sti
call
bound
dec
loope
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
mov
or
nop
mov
mov
test
nop
out
cdq
and
(bad)
lods
jmp
sbb
icebp
pop
sti
jne
hlt
test
test
scas
xchg
cmp
imul
sbb
les
std
dec
rep
pop
sti
call
bound
dec
out
add
jge
(bad)
mov
test
nop
in
mov
addr16
jae
sar
mov
dec
test
pop
in
xchg
movs
out
lea
loopne
repz
adc
dec
repz
test
scas
sbb
popf
push
repz
add
popf
push
repz
repz
cmp
jns
in
mov
test
dec
repz
mov
bound
xchg
fnstcw
mov
fldcw
dec
sti
pushf
sbb
inc
pop
in
dec
repz
and
call
jne
cli
or
ins
dec
sti
and
les
in
dec
repz
dec
sti
call
bound
fdivrp
call
bound
dec
jne
adc
(bad)
cmc
scas
in
dec
fs
dec
sti
add
les
(bad)
pop
in
gs
in
mov
stos
adc
mov
bound
inc
sti
call
bound
dec
jecxz
adc
les
(bad)
pop
fsubr
push
shl
mov
arpl
addr16
add
jp
in
cli
sub
call
bound
dec
jmp
xchg
mov
jp
cli
je
xchg
mov
test
nop
cmc
mov
push
std
inc
mov
sbb
cli
je
xchg
mov
cmp
push
mov
cmc
sbb
sbb
xchg
mov
jno
repnz
loopne
jb
gs
xchg
adc
test
push
mov
mov
jae
call
cdq
mov
bound
dec
sti
call
bound
(bad)
sti
call
bound
dec
sti
call
push
in
dec
mov
adc
les
(bad)
pop
in
jg
shr
add
inc
xchg
mov
bound
dec
sti
call
bound
push
sti
call
outs
mov
inc
shl
mov
bound
addr16
jp
adc
daa
je
out
stc
sub
call
bound
dec
jmp
xchg
mov
jge
(bad)
push
retf
and
test
push
fadd
test
mov
mov
jbe
or
pop
fimul
hlt
addr16
dec
(bad)
cld
(bad)
bound
dec
daa
test
test
xchg
dec
jg
dec
sti
unpckhps
vpsllq
dec
sti
call
bound
fdivr
call
bound
dec
mov
xchg
mov
bound
pop
jecxz
or
mov
mov
dec
cmc
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
jno
(bad)
fsubr
pusha
popa
add
mov
addr16
jbe
adc
mov
and
mov
xchg
push
mov
bound
dec
hlt
call
ja
in
dec
out
jg
ret
(bad)
jmp
cmps
(bad)
mov
mov
cmps
sub
xlat
jo
(bad)
push
retf
pop
mov
gs
mov
push
fadd
xchg
add
in
dec
rep
stos
(bad)
call
gs
in
outs
rep
dec
icebp
call
pop
lods
in
dec
pusha
outs
dec
sti
dec
adc
bound
dec
sti
call
bound
mov
add
in
or
ins
dec
loop
adc
xor
dec
sti
out
adc
les
in
dec
repz
call
bound
cmc
sti
call
bound
dec
inc
call
shr
dec
sti
and
les
in
dec
repz
popf
sbb
movs
loopne
ins
psllq
mov
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
outs
xchg
pushf
mov
xchg
push
jmp
ror
icebp
addr16
jae
shl
mov
jb
(bad)
dec
dec
repnz
fdiv
mov
outs
mov
mov
xchg
or
popf
push
jmp
adc
les
in
dec
repz
sti
call
outs
xchg
cli
mov
xchg
push
cmc
mov
mov
dec
inc
repnz
fadd
mov
fwait
mov
mov
inc
mov
sub
out
mov
dec
sti
pushf
xor
popf
push
cmc
inc
in
jge
ret
dec
jmp
dec
aad
or
cmp
in
inc
scas
in
dec
fnstenv
(bad)
call
bound
psubsw
mov
add
dec
sti
(bad)
adc
les
in
dec
rep
dec
sti
call
bound
mov
call
bound
dec
xor
mov
int
in
dec
sahf
ins
dec
sti
dec
xor
outs
mov
pop
call
test
int3
bound
dec
lock
jo
in
dec
out
dec
sti
adc
bound
pop
out
gs
jmp
out
xchg
mov
add
adc
ds
pop
cwde
cdq
sub
test
push
fmul
imul
(bad)
pop
in
jg
ret
fsubrp
inc
inc
icebp
je
xchg
mov
mov
les
in
dec
(bad)
ins
dec
sti
mov
les
in
dec
repz
call
imul
clc
inc
mov
or
pop
fld
or
jle
call
imul
add
push
mov
push
sbb
in
dec
aad
pop
repz
sbb
cmp
jb
out
fiadd
imul
pop
hlt
jge
fild
adc
les
lds
rep
dec
in
push
cmps
adc
in
fcomip
ins
dec
bound
mov
pop
scas
in
dec
lea
call
(bad)
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
push
repnz
nop
mov
mov
dec
imul
xchg
adc
les
in
dec
repz
sti
call
jg
jge
fcom
nop
repz
call
scas
sar
push
cld
inc
mov
dec
sti
call
bound
pop
sti
call
jno
aad
or
mov
xchg
ds
sbb
add
xchg
or
adc
fidiv
push
cdq
sub
add
fmul
mov
bound
pmuludq
mov
out
in
dec
arpl
pop
adc
les
in
dec
repz
mov
bound
add
call
bound
dec
repnz
ins
mov
pop
mov
nop
mov
bound
dec
sti
call
bound
push
sti
call
jmp
jae
shr
mov
lods
leave
dec
inc
repnz
fadd
or
cld
inc
mov
dec
sti
call
bound
pop
sti
call
jno
aad
or
mov
mov
mov
xchg
mov
mov
lea
scas
pop
cwde
mov
mov
jnp
or
pop
ror
cli
addr16
adc
inc
pop
in
dec
repz
(bad)
call
bound
bound
adc
in
scas
in
dec
shr
sti
call
inc
inc
out
dec
repz
xchg
stc
call
mov
jae
in
add
les
arpl
xlat
sti
call
bound
dec
inc
call
out
in
dec
cli
ins
dec
sti
or
mov
bound
in
dec
rep
dec
sti
call
bound
inc
call
xor
bound
dec
icebp
call
jae
in
dec
out
dec
sti
adc
bound
int
xchg
ds
sbb
sbb
fadd
movs
or
sti
pop
clc
jge
mov
sahf
mov
bound
sti
call
bound
add
lods
enter
addr16
inc
shl
nop
call
cmps
(bad)
push
retf
inc
mov
add
jle
add
test
jl
lods
add
leave
fs
ins
dec
std
mov
fdiv
aad
or
mov
xor
mov
shr
dec
add
in
dec
sub
xor
les
jno
rep
add
call
bound
dec
push
xchg
mov
loopne
in
dec
push
dec
sti
xor
les
in
dec
repz
sti
call
bound
pop
(bad)
mov
bound
inc
sti
call
bound
dec
in
call
jge
(bad)
ins
fsub
push
shl
nop
test
mov
test
nop
out
mov
inc
loop
paddd
mov
outs
scas
in
dec
jecxz
dec
sti
mov
les
(bad)
ins
retf
and
sub
leave
dec
pop
mul
jae
shl
nop
out
mov
je
xchg
mov
mov
dec
push
mov
mul
jp
sbb
add
jge
lds
rep
dec
and
mov
dec
dec
call
dec
shr
dec
cmc
mov
loop
xor
and
mov
dec
rep
(bad)
sti
call
bound
dec
repz
repz
in
dec
rep
dec
sti
sbb
les
in
dec
repz
call
bound
pop
fidiv
mov
bound
inc
sti
call
bound
dec
loop
adc
in
aas
repnz
fcom
or
add
test
mov
mov
inc
xchg
xor
adc
bound
inc
sti
call
bound
imul
jmp
test
push
fcomp
sub
xlat
jne
(bad)
ins
retf
inc
mov
gs
repz
cdq
xor
test
push
fadd
mov
jne
in
dec
in
je
(bad)
mov
sub
ins
dec
sti
inc
adc
les
in
dec
repz
push
mov
bound
xchg
sti
call
bound
dec
mov
xchg
mov
cmp
dec
sti
mov
mov
bound
dec
repz
call
bound
dec
sti
call
jno
repnz
loopne
popa
jae
or
les
in
dec
jmp
xchg
adc
les
in
dec
repz
sti
call
bound
pusha
sti
call
bound
push
dec
push
fcomp
sbb
or
inc
stos
in
ds
xchg
cwde
in
arpl
test
nop
int3
mov
push
out
push
inc
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
fs
test
push
cli
inc
movs
jecxz
(bad)
mov
dec
dec
repnz
fmul
adc
push
fcomp
nop
in
mov
test
nop
ds
mov
and
loopne
jb
fs
cmps
(bad)
push
in
jns
fldenv
movs
out
nop
mov
inc
out
jg
in
push
cdq
cmp
dec
cmp
jg
sti
sahf
xor
in
scas
in
dec
(bad)
dec
sti
pushf
add
adc
iret
je
xchg
mov
add
push
test
mov
jg
in
push
cdq
cmp
stos
imul
xor
in
pop
scas
in
dec
loopne
push
cdq
adc
les
xchg
dec
repz
fdivr
mov
pop
lods
in
dec
fild
mov
bound
bound
xchg
lods
shl
cld
outs
mov
dec
sti
call
bound
mov
call
bound
dec
push
call
add
dec
sti
jl
mov
bound
dec
repz
dec
sti
call
bound
es
call
arpl
dec
sti
call
cld
scas
in
dec
sub
cmp
add
les
in
jmp
jmp
frstor
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
dec
scas
in
dec
ret
sti
scas
adc
out
xchg
adc
test
nop
repnz
sbb
sar
sub
dec
jno
inc
fdiv
nop
aam
mov
addr16
jae
rcl
test
(bad)
mov
je
xchg
mov
mov
dec
xchg
mov
imul
sti
mov
les
in
dec
repz
sti
call
bound
jb
fs
mov
movs
in
(bad)
movs
sbb
repnz
fmul
adc
dec
mov
xchg
push
icebp
mov
movs
or
pop
fld
pop
pop
fmul
movs
or
ss
fdiv
add
dec
rep
push
fwait
adc
les
(bad)
dec
repz
in
call
shl
dec
repz
mov
bound
push
cdq
adc
les
pop
dec
repz
jnp
adc
retf
jge
(bad)
outs
retf
inc
mov
gs
sbb
adc
call
inc
mov
mov
imul
mov
pop
rcl
gs
mov
pop
rcl
gs
mov
push
call
call
xor
movs
xor
ins
dec
in
nop
enter
mov
inc
or
dec
repz
cld
clc
call
jno
sti
int3
out
dec
dec
les
out
dec
repz
leave
cli
call
jge
(bad)
push
call
bound
dec
sti
adc
les
in
dec
repz
sti
call
bound
or
call
bound
dec
jle
adc
fnstenv
(bad)
stc
loop
paddw
mov
push
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
fbstp
test
xchg
mov
mov
cmp
pop
call
jecxz
dec
sti
call
bound
dec
call
xchg
mov
jge
(bad)
push
gs
nop
test
mov
mov
mov
inc
xchg
(bad)
mov
xchg
push
shr
nop
lock
push
fmul
mov
popa
scas
in
fs
or
ins
scas
in
dec
push
dec
sti
sbb
les
in
dec
repz
dec
sti
call
bound
fsincos
call
bound
dec
mov
xchg
mov
(bad)
scas
in
dec
in
push
jecxz
xor
fs
in
dec
cmc
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
jno
(bad)
fsubr
bound
test
nop
hlt
mov
mov
test
nop
in
mov
je
xchg
mov
mov
add
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
fisub
test
mov
xchg
ds
push
mov
cmc
pop
(bad)
push
jp
gs
mov
mov
sub
push
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
popa
scas
in
dec
repnz
dec
xchg
sahf
adc
les
in
dec
rep
dec
sti
sbb
mov
(bad)
aad
dec
repz
sti
call
bound
call
mov
bound
dec
sti
call
inc
test
dec
test
mov
mov
arpl
inc
sti
call
bound
inc
sti
call
arpl
dec
stc
xchg
adc
les
in
dec
call
sbb
jae
xchg
sub
adc
sbb
in
pop
rep
dec
fistp
mov
xchg
scas
in
dec
rep
dec
sti
jecxz
mov
bound
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
call
mov
outs
scas
in
dec
sub
xor
jbe
jecxz
data16
call
popf
test
rep
dec
neg
mov
ja
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
dec
sti
call
jno
aad
or
mov
xchg
ds
pop
sbb
in
inc
mov
pop
test
xchg
call
ds
pop
sbb
cmc
dec
push
call
scas
xchg
cmp
je
cmc
mov
mov
dec
repz
sti
call
bound
push
sti
call
jae
jecxz
push
xchg
mov
test
nop
cmc
mov
mov
test
nop
out
mov
inc
jmp
inc
ret
push
jmp
dec
sbb
shl
nop
out
cdq
and
dec
push
call
imul
clc
je
cmc
mov
int3
shl
jmp
cmc
mov
stos
xlat
imul
test
and
xchg
mov
xchg
lods
jmp
mov
dec
sti
call
bound
add
call
popa
scas
in
push
cmc
ins
dec
sub
xchg
mov
arpl
sti
cld
push
mov
(bad)
jmp
in
add
push
dec
rep
(bad)
stc
call
pusha
scas
in
add
ins
dec
xor
mov
lods
lods
in
dec
sub
jo
mov
bound
dec
sti
call
bound
ret
adc
mul
in
or
popf
adc
les
in
dec
mov
dec
sti
bound
mov
bound
dec
sti
call
bound
cmp
adc
push
pusha
scas
in
repnz
ins
dec
jmp
les
push
mov
bound
dec
repz
dec
sti
call
bound
dec
call
mov
gs
in
mov
ins
dec
push
sahf
adc
les
in
dec
imul
sti
sub
mov
bound
in
dec
repz
sti
call
bound
sar
call
scas
in
push
hlt
ins
dec
js
adc
les
imul
xor
jmp
or
pushf
push
adc
sub
call
bound
dec
out
call
jle
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
ja
call
bound
dec
mov
adc
les
scas
in
dec
stos
ins
dec
sti
(bad)
adc
les
in
dec
repz
mov
bound
xor
call
bound
dec
push
adc
(bad)
std
scas
in
dec
push
ins
dec
sti
ss
les
in
dec
rep
dec
sti
call
bound
push
mov
sbb
jge
(bad)
mov
test
in
mov
stos
call
cmc
movs
xor
xor
in
imul
cdq
or
mov
jp
test
cmc
in
and
nop
mov
imul
iret
mov
addr16
jae
sar
or
sub
lods
enter
jl
cmc
push
stos
mov
movs
pop
mov
repnz
out
mov
xchg
movs
sub
bnd
adc
add
or
popf
mov
je
xchg
mov
test
and
cmp
aad
or
mov
mov
lods
iret
pop
loopne
mov
jae
ret
shr
inc
dec
adc
gs
push
adc
push
data16
jmp
push
neg
jae
call
cdq
mov
sahf
push
adc
sub
call
bound
dec
out
call
jg
in
dec
shr
mov
mov
bound
dec
sti
call
bound
or
call
bound
dec
stos
call
cmp
dec
sti
lds
xlat
ins
xchg
xchg
mov
xchg
push
jmp
loopne
and
add
inc
mov
pop
fcomp
xchg
in
and
test
aad
sahf
out
mov
stc
addr16
rcl
sub
outs
mul
jae
shl
or
dec
sbb
push
jecxz
mov
(bad)
repnz
fdiv
push
out
mov
movs
sub
adc
test
nop
in
mov
addr16
jae
sar
mov
mov
jae
ror
mov
dec
gs
or
dec
adc
push
fcomp
push
cmc
mov
movs
or
test
out
in
in
sbb
(bad)
cdq
pop
jne
jno
out
dec
push
mov
mov
inc
mov
pop
mov
push
mov
jae
shr
mov
lahf
lods
in
mov
jb
popa
jmp
cs
sti
call
inc
cmps
in
dec
repz
sub
call
jge
inc
xor
add
or
outs
mov
pop
cld
push
add
gs
mov
inc
in
push
mov
movs
dec
cmp
adc
adc
inc
and
dec
repz
(bad)
call
inc
push
in
dec
repz
xor
call
imul
sti
sahf
or
cwde
push
adc
pusha
push
ror
dec
cmp
inc
dec
pop
test
xchg
pop
rep
dec
fild
mov
bound
dec
test
int3
fsub
jmp
dec
fwait
adc
les
inc
dec
repz
in
push
mov
or
popf
mov
pop
hlt
mov
movs
xlat
imul
call
imul
in
jg
ret
out
out
inc
dec
(bad)
pop
push
call
imul
std
jg
in
push
mov
mov
pop
mov
jne
adc
xchg
int3
fsub
jmp
clc
call
dec
xor
dec
cmc
adc
call
inc
into
out
dec
repz
out
call
jno
in
dec
lea
sti
sahf
xor
in
scas
in
dec
fild
dec
sti
pushf
cmp
xchg
push
adc
test
test
mov
mov
xchg
push
in
in
adc
mov
push
fdivr
ret
push
in
inc
dec
cli
dec
repz
mov
bound
xor
call
movs
stc
mov
inc
dec
sti
pushf
data16
xchg
mov
inc
push
call
imul
fdivr
ret
push
in
inc
dec
int3
pop
push
call
imul
rep
dec
call
cmp
bound
pop
fistp
xchg
(bad)
bound
dec
fstp
test
scas
lds
ins
dec
(bad)
out
(bad)
bound
dec
in
push
mov
mov
adc
or
pop
repnz
or
cdq
xlat
ins
xchg
push
push
adc
lds
int
repnz
dec
shr
adc
shl
jmp
sti
mov
call
jg
ret
inc
in
inc
dec
inc
mov
mov
lahf
lods
in
mov
jb
(bad)
jmp
das
cli
dec
repz
test
and
les
inc
in
cmp
mov
lods
fmul
repnz
loopne
push
ror
dec
cmp
(bad)
mov
mov
mov
mov
jo
adc
xchg
mov
out
scas
in
dec
bnd
jmp
les
cld
dec
out
cmp
adc
les
in
dec
cmc
sbb
call
bound
dec
in
lea
data16
stc
ins
cmps
outs
dec
sti
mov
call
sub
cmp
in
dec
rep
pop
out
mov
in
scas
in
dec
fistp
and
xchg
mov
mov
xchg
dec
sti
pushf
xor
in
scas
in
dec
fistp
sti
pushf
or
xchg
push
adc
jg
in
push
mov
pop
inc
cmp
jae
call
cdq
mov
push
adc
jg
in
push
mov
mov
sbb
call
inc
outs
in
dec
repz
(bad)
cli
call
arpl
pop
test
in
shl
mov
xor
jge
(bad)
mov
test
test
scas
shl
popf
push
repnz
fcomp
movs
and
loop
mov
ds
faddp
int3
shl
jmp
sti
call
dec
nop
in
dec
cmc
jnp
or
mov
bound
jb
ins
jmp
lods
in
dec
shr
push
add
outs
dec
rep
push
call
fs
push
loopne
pop
jmp
or
les
cmp
push
cli
call
bound
dec
xor
mov
bound
dec
sti
sbb
mov
bound
dec
sti
call
bound
dec
sti
call
arpl
dec
adc
xchg
mov
pop
scas
in
dec
in
pop
test
aad
jmp
call
bound
dec
loop
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
popf
push
adc
inc
mov
pop
cdq
cdq
sub
(bad)
movs
in
pusha
popa
push
xchg
pop
pop
popf
cdq
sbb
(bad)
xchg
out
inc
popf
in
ds
jge
mov
sbb
push
adc
call
imul
mov
bound
dec
sti
call
popf
push
cli
addr16
add
mov
scas
in
ds
pop
popf
mov
pop
retf
scas
mov
or
dec
inc
repnz
fadd
movs
or
icebp
sub
out
call
bound
push
cwde
adc
les
dec
repz
repz
cmp
dec
cmp
jg
in
push
stos
cmp
dec
cmp
jg
loop
sbb
push
adc
leave
jmp
inc
jmp
add
adc
les
in
dec
popa
ins
dec
sti
jb
mov
bound
sti
fwait
push
mov
xchg
and
bound
pop
sar
mov
dec
lock
dec
fcomi
push
mov
bound
dec
fcmovnu
push
mov
bound
dec
in
mov
xchg
xor
in
mov
in
mov
and
dec
sti
call
inc
mov
cmc
lock
dec
(bad)
add
out
push
ins
dec
sti
mov
call
adc
call
inc
xlat
in
dec
repz
ja
call
inc
pushf
out
dec
repz
aaa
sti
call
jne
out
dec
rep
push
cwde
adc
les
dec
repz
mov
bound
dec
and
xchg
mov
inc
cmps
in
dec
repz
das
sti
call
bound
bound
xchg
xchg
mov
push
dec
sti
pushf
imul
lods
in
dec
rcl
sti
call
test
sbb
call
inc
xchg
in
dec
repz
fdivr
call
pusha
scas
in
ins
jnp
dec
sti
mov
mov
jns
cli
push
movs
inc
das
sti
call
bound
bound
xchg
lods
retf
cld
inc
mov
dec
sti
call
bound
sahf
sti
call
bound
dec
inc
call
push
in
dec
ss
dec
sti
arpl
les
in
dec
rep
dec
sti
call
bound
inc
sti
call
bound
dec
in
push
mov
dec
cmp
dec
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
dec
scas
in
dec
fsubr
test
mov
retf
popf
mov
addr16
jae
shr
mov
jnp
ror
repnz
fmul
mov
dec
lods
retf
dec
jne
pop
fdivr
movs
sub
xlat
fs
dec
in
jle
repnz
mov
dec
repz
sti
call
bound
pop
sti
call
jno
aad
or
ds
sbb
repnz
fadd
nop
in
mov
inc
retf
mov
add
add
jg
add
test
or
bound
inc
ret
and
inc
dec
dec
in
jle
repnz
scas
out
nop
mov
dec
jmp
push
mov
cmovl
popf
mov
mov
sahf
or
bound
dec
sti
call
xor
mov
cmp
in
dec
test
scas
mov
fs
ins
push
fwait
adc
les
push
enter
call
arpl
dec
sti
mov
mov
stos
lods
in
dec
rol
dec
sti
call
vpsllq
xchg
cwde
adc
les
pop
dec
repz
push
cwde
adc
les
dec
dec
repz
xor
les
cli
ins
icebp
outs
dec
sti
mov
call
ins
dec
dec
in
scas
in
dec
fistp
sti
pushf
retf
cwde
and
scas
int
rep
dec
shl
mov
icebp
lods
in
dec
ror
dec
sti
call
bound
push
shl
mov
jecxz
ins
dec
fisttp
adc
lds
int
sbb
sbb
mov
mov
jge
lds
repnz
dec
in
mov
fwait
test
pop
in
dec
repz
inc
cli
call
ins
lods
in
dec
rol
sti
call
addr16
dec
repz
sti
mov
mov
jno
cld
inc
mov
dec
sti
call
bound
push
sti
call
bound
dec
cld
call
mov
in
dec
cmc
dec
pusha
in
mov
les
call
sti
call
bound
dec
out
pop
nop
stos
mov
pop
fcomp
nop
in
inc
xchg
les
retf
push
loopne
popa
push
lds
mov
dec
sti
fild
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
fstp
mov
bound
dec
sti
aam
mov
bound
sti
fwait
adc
lds
sub
rep
pop
clc
call
bound
dec
iret
cdq
adc
(bad)
jmp
in
dec
shr
nop
adc
les
out
dec
repz
sti
call
bound
pop
retf
cdq
adc
aad
scas
cld
dec
jmp
adc
les
retf
callw
mov
mov
in
dec
repz
dec
sti
call
bound
or
call
bound
dec
std
mov
test
rep
dec
cld
call
outs
scas
in
dec
jecxz
dec
sti
sbb
scas
mov
push
fcomp
nop
out
inc
call
inc
(bad)
dec
cmp
fldcw
data16
dec
sti
in
mov
jae
repz
repz
jecxz
adc
or
in
dec
cli
ins
dec
sti
call
bound
dec
sti
call
bound
call
test
fs
call
bound
dec
jmp
adc
imul
push
fcomp
nop
icebp
mov
dec
cmc
dec
push
lock
xchg
sar
test
pusha
sti
call
bound
dec
(bad)
cwde
adc
les
(bad)
push
clc
imul
call
sub
dec
sti
call
bound
dec
sti
call
bound
dec
fnsave
mov
bound
dec
sti
call
bound
dec
out
ds
mov
icebp
addr16
je
or
mov
fs
inc
fdivr
pusha
sub
movs
iret
dec
and
pop
ret
imul
xchg
mov
pusha
xchg
dec
repz
in
nop
imul
imul
fcomp
mov
lods
int
sbb
sbb
mov
mov
bound
dec
sti
nop
push
(bad)
sbb
ror
dec
repz
mov
bound
dec
(bad)
call
outs
dec
sti
mov
call
ins
dec
push
mov
dec
jg
dec
repz
ror
mov
bound
sti
call
jno
cld
inc
mov
dec
sti
call
bound
ins
clc
call
pusha
scas
in
xor
ins
dec
nop
fwait
adc
les
scas
in
dec
scas
ins
dec
sti
call
mov
bound
dec
repz
mov
bound
inc
sti
call
pusha
scas
in
ds
dec
dec
cdq
adc
les
in
dec
shr
push
mov
bound
out
dec
repz
call
bound
into
cli
call
pusha
scas
in
adc
ins
dec
ja
adc
(bad)
in
in
dec
sub
fst
mov
bound
repz
mov
bound
push
jmp
imul
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jle
call
bound
dec
mov
xchg
mov
sub
dec
sti
leave
adc
les
in
dec
repz
call
imul
xlat
inc
mov
pop
mov
test
test
nop
fisttp
retf
addr16
sub
xchg
out
test
(bad)
mov
jl
cmp
cwde
out
fnstenv
popa
shr
or
add
popa
fmul
push
loope
mov
adc
repnz
loopne
jb
fs
scas
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
bound
dec
sti
call
bound
jg
call
jl
adc
test
nop
icebp
sbb
fadd
adc
test
push
fild
in
outs
sbb
and
inc
and
push
mov
test
mov
jbe
or
cmps
out
mov
pop
sar
nop
fisttp
(bad)
xchg
in
popa
popa
das
test
nop
ror
daa
push
jecxz
mov
stos
adc
(bad)
arpl
ins
cld
mov
xchg
adc
scas
in
fs
dec
std
xchg
add
popf
push
repnz
loopne
push
jmp
imul
mov
inc
in
push
mov
sti
dec
cmp
ins
dec
sti
mov
call
jno
sti
sahf
outs
cdq
add
xchg
push
rep
dec
cmp
mov
stc
outs
dec
sti
mov
mov
aad
in
dec
shl
fild
xchg
mov
pushf
scas
mov
rol
sti
call
or
dec
sti
call
pop
scas
in
dec
in
dec
fwait
mov
movs
and
adc
mov
movs
adc
adc
mov
mov
mov
adc
nop
or
sahf
push
adc
mov
add
dec
shr
add
lock
repz
mov
outs
xchg
jnp
or
push
icebp
mov
(bad)
loope
jbe
mov
cwde
sbb
rcl
in
dec
repz
and
call
bound
dec
sti
sahf
or
xlat
outs
xchg
mov
or
push
call
test
mov
loope
sti
call
push
push
jb
gs
sub
pushf
mov
add
scas
in
dec
push
jne
mul
stos
xlat
push
push
inc
pop
gs
mov
inc
ret
pusha
out
inc
inc
push
retf
(bad)
call
imul
ja
adc
les
push
loopne
jb
popa
jmp
mov
mov
add
push
push
sti
add
stos
add
sub
pushf
mov
add
scas
in
dec
mov
sti
sahf
mov
or
push
adc
mov
mov
call
inc
pop
icebp
test
test
scas
fdivr
popf
push
cld
dec
out
dec
jg
sbb
mov
fs
dec
sti
call
cmps
scas
in
dec
stc
mov
cli
call
bound
bound
call
jge
lds
repnz
dec
and
fwait
mov
dec
repz
dec
sti
call
bound
(bad)
adc
pop
bound
dec
pop
call
bound
dec
sti
aaa
adc
les
in
dec
repz
test
mov
inc
mov
dec
sti
call
bound
inc
sti
call
bound
dec
jecxz
sbb
jp
sbb
push
div
stos
out
mov
inc
jmp
int
scas
in
inc
rep
dec
jmp
adc
les
dec
jmp
or
push
mul
jae
shr
nop
out
lea
push
fmul
test
scas
cwde
cmp
jbe
or
pop
fimul
mul
dec
lahf
adc
lods
sub
jmp
repz
mov
bound
idiv
call
bound
dec
aad
adc
aad
mov
pmuludq
mov
cld
scas
in
dec
push
ins
dec
sti
xchg
adc
les
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
dec
arpl
mov
jno
(bad)
stc
loop
paddb
mov
push
ins
dec
sti
mov
les
in
dec
repz
sti
call
jge
(bad)
mov
inc
mov
sbb
pop
fmul
repnz
fmul
mov
pushf
mov
mov
paddd
mov
imul
mov
bound
mov
or
jge
(bad)
mov
lea
push
sbb
aad
or
mov
mov
mov
(bad)
mov
cmps
jmp
btc
xchg
xchg
mov
scas
in
ins
stos
outs
dec
sti
mov
mov
jno
hlt
pop
hlt
push
mov
gs
(bad)
icebp
fs
std
mov
xchg
or
xchg
ins
dec
std
nop
retf
xchg
and
scas
int
icebp
ins
dec
sar
adc
add
sub
pushf
pop
movs
dec
mov
dec
sub
add
inc
cwde
mov
bound
dec
sti
call
bound
(bad)
call
bound
dec
outs
call
jmp
ins
dec
sti
adc
mov
jnp
in
dec
jge
mov
xchg
mov
bound
dec
sti
call
bound
pop
call
pushf
cdq
cmp
test
pop
fcomp
nop
in
sbb
ret
in
jmp
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
repnz
fcomp
movs
or
pop
fimul
mul
je
std
add
cmp
(bad)
mov
mov
mov
test
push
sti
call
bound
(bad)
cli
call
bound
dec
stc
sahf
adc
aad
mov
imul
adc
(bad)
arpl
dec
sti
call
jnp
in
dec
pop
ins
dec
sti
call
add
in
dec
repz
mov
bound
pop
cli
call
arpl
dec
neg
mov
lahf
scas
in
dec
stc
outs
dec
sti
call
(bad)
xlat
in
dec
repz
dec
sti
call
bound
(bad)
cli
call
arpl
dec
out
sbb
push
adc
call
outs
scas
in
dec
loop
dec
sti
(bad)
adc
les
in
dec
repz
dec
sti
call
bound
jp
call
bound
dec
lds
mov
jge
inc
jne
add
or
dec
pop
repnz
fadd
cmps
sub
fisttp
repnz
fdiv
movs
sbb
aas
push
loop
test
mov
lods
sub
int
imul
fsubr
adc
pop
std
push
xchg
sar
dec
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
aad
dec
sti
test
test
scas
sub
popf
push
repnz
fcomp
movs
sub
out
mov
popa
pop
test
nop
loopne
stos
out
mov
je
test
cmc
add
adc
ds
pop
fwait
cdq
sub
test
push
fmul
movs
or
cmp
(bad)
ins
dec
icebp
mov
(bad)
out
cmps
in
dec
repnz
inc
shl
lods
aam
mov
mov
mov
movs
pop
test
out
inc
mov
or
adc
add
sbb
jecxz
push
xchg
mov
cmp
and
inc
xor
dec
icebp
add
retf
adc
call
bound
dec
sti
pushf
push
mov
jge
inc
lods
mov
add
fs
dec
repz
in
pop
movs
or
adc
xchg
push
mov
or
lds
dec
fild
stos
lds
vpsllq
lahf
pop
stos
pop
sahf
mov
dec
fild
sti
pushf
xor
push
adc
xchg
push
mov
leave
dec
cmp
jg
in
push
mov
(bad)
dec
cmp
ins
dec
sti
mov
call
pop
dec
sti
call
inc
int
dec
repz
das
sti
call
bound
dec
shl
adc
push
dec
mov
outs
mov
pop
sti
call
bound
dec
pusha
call
and
ins
dec
sti
ds
les
in
dec
repz
sti
call
bound
dec
sti
call
bound
push
hlt
mov
nop
lods
xchg
dec
imul
xchg
adc
les
in
dec
repz
sti
call
bound
into
loope
in
lods
sub
out
xchg
mov
mov
mov
push
sbb
repnz
loopne
jb
gs
scas
in
inc
rep
dec
lock
jo
in
dec
in
dec
sti
adc
pop
xchg
adc
test
nop
repnz
cmps
jmp
mov
sbb
loop
jmp
ds
push
mov
mul
jp
sbb
adc
jmp
dec
sti
mov
call
inc
dec
sti
fisttp
mov
bound
dec
sti
call
bound
push
retf
lahf
adc
in
scas
cld
je
ins
dec
sti
mov
(bad)
push
xchg
mov
jnp
in
dec
outs
ins
dec
sti
call
bound
dec
sti
call
bound
inc
cli
call
arpl
dec
hlt
call
loop
in
dec
aam
dec
sti
xchg
add
dec
repz
dec
sti
call
bound
pop
cli
call
arpl
dec
outs
call
mov
in
dec
cmc
dec
push
test
cmp
inc
add
mov
cwde
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
rcr
mov
push
scas
in
dec
lds
mov
scas
xlat
outs
xchg
int3
mov
xchg
push
out
loopne
adc
inc
repnz
fadd
movs
sbb
repnz
fdiv
mov
dec
jg
push
fsub
cmps
sub
repnz
inc
in
push
mov
dec
dec
cmp
jae
call
imul
rep
inc
sti
call
bound
dec
in
call
jge
in
dec
shr
test
test
scas
sub
popf
push
repnz
fcomp
mov
mov
pop
sar
lods
sub
aam
je
inc
loopne
push
out
sbb
jge
(bad)
mov
cmp
pop
fwait
cdq
and
(bad)
scas
out
inc
xchg
jecxz
leave
mov
bound
dec
in
push
mov
mov
mov
outs
ss
adc
les
or
adc
les
xor
ins
dec
jmp
xor
arpl
dec
sti
mov
mov
jge
inc
ins
mov
or
jno
aad
push
xchg
mov
mov
movs
or
loope
pop
xchg
mov
popf
cmp
pop
ja
mov
jne
or
mov
mov
jbe
or
mov
inc
retf
fidiv
out
cmp
push
xchg
mov
cwde
add
jae
test
rep
dec
ja
adc
les
mov
dec
sti
stc
sbb
add
mov
dec
repz
mov
xchg
out
bound
sub
or
in
pop
cli
ins
dec
lds
mov
mov
arpl
lahf
sbb
add
les
in
repz
sti
call
bound
cmps
std
call
gs
in
xchg
jmp
xchg
adc
les
pusha
dec
sti
adc
mov
(bad)
lock
repz
call
bound
neg
or
in
dec
rep
dec
pop
xchg
adc
(bad)
fsub
dec
sti
sbb
add
les
in
repz
dec
sti
call
bound
sti
std
call
ins
scas
in
add
ins
dec
adc
les
push
sti
push
sbb
les
in
dec
repz
call
bound
sbb
call
fs
in
push
stc
ins
dec
cli
xchg
adc
les
ins
dec
sti
in
sbb
(bad)
jecxz
repz
sti
call
bound
or
call
ins
scas
in
dec
sti
ins
dec
gs
adc
les
push
mov
bound
dec
repz
call
bound
inc
neg
mov
ins
scas
in
dec
std
ins
dec
mov
(bad)
aam
in
dec
jle
dec
sti
out
mov
bound
dec
sti
call
bound
mov
or
mov
gs
in
gs
ins
dec
or
mov
sbb
dec
sti
loop
mov
bound
jmp
xrelease
call
bound
fdiv
call
fs
in
adc
ins
dec
mov
xchg
mov
xor
bound
dec
pop
mov
bound
jmp
daa
mov
xchg
fwait
leave
bound
dec
neg
mov
imul
out
nop
adc
les
imul
sbb
bound
repz
mov
xchg
adc
inc
rep
mov
or
mov
gs
in
push
stc
ins
dec
inc
pushf
adc
(bad)
cld
movs
in
dec
pop
gs
sti
mov
mov
bound
repz
sti
call
bound
repnz
outs
scas
in
sbb
ins
dec
ins
popf
adc
les
in
dec
inc
fs
sti
adc
les
out
repz
jbe
add
jge
rep
pushf
repnz
imul
rcl
mov
stos
cmps
in
dec
sbb
dec
sti
aad
mov
bound
inc
sti
call
bound
cs
call
scas
in
push
retf
jg
in
push
mov
ds
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
fs
call
bound
dec
mov
xchg
mov
cs
in
dec
mov
adc
les
in
dec
repz
mov
bound
xor
call
bound
dec
popa
call
retf
dec
inc
ins
dec
sti
es
les
in
dec
repz
mov
bound
mov
add
in
inc
repnz
dec
hlt
fwait
adc
les
in
dec
aam
dec
sti
stos
adc
add
in
dec
repz
mov
bound
and
call
arpl
dec
imul
(bad)
dec
pop
ins
dec
sti
sub
add
mov
bound
dec
rep
dec
sti
call
bound
mov
add
in
dec
icebp
ins
dec
repz
adc
les
dec
out
outs
dec
sti
mov
mov
bound
dec
sti
call
bound
sub
call
pusha
scas
in
aaa
icebp
ins
dec
jns
adc
(bad)
repnz
in
dec
outs
dec
sti
pop
pop
mov
bound
dec
repz
call
bound
popf
stc
call
pusha
scas
in
mov
cwde
adc
les
in
dec
std
outs
dec
sti
mov
mov
mov
jae
shr
and
xchg
mov
mov
inc
sar
sub
dec
jno
mov
ins
dec
ror
test
inc
lods
std
dec
pusha
int
rep
dec
rcl
cdq
sub
je
scas
in
addr16
jae
shl
or
scas
in
addr16
dec
sar
adc
les
(bad)
in
in
and
mov
cdq
push
jnp
jg
test
in
xor
adc
ins
pop
ins
dec
sti
mov
lods
mov
fst
mov
jae
ret
icebp
jmp
push
adc
gs
xchg
mov
outs
call
popf
mov
je
xchg
mov
sub
mov
dec
loopne
call
inc
adc
dec
repz
push
dec
scas
test
je
xchg
mov
test
or
dec
cmp
aad
or
mov
adc
cmp
call
xchg
mov
mov
mov
adc
fs
push
adc
dec
sti
mov
lods
sbb
mov
dec
call
dec
cmp
aad
or
adc
cmp
ins
dec
ret
xor
inc
dec
adc
call
or
xchg
push
call
popf
mov
je
xchg
mov
mov
mov
and
mov
lods
lahf
pop
retf
adc
call
jge
aad
or
sub
(bad)
xchg
test
or
push
mov
xchg
bound
mov
mov
mov
pushf
push
adc
push
imul
push
repnz
jns
add
or
popf
(bad)
outs
dec
rep
jb
fs
push
adc
push
mov
or
repnz
test
cmp
cmp
ins
jb
addr16
xchg
and
call
popf
mov
je
xchg
mov
sub
shr
mov
gs
cld
rcl
in
xor
addr16
push
adc
dec
sti
mov
lods
mov
adc
out
inc
dec
adc
addr16
push
repnz
or
mov
int3
dec
cmp
ins
jb
addr16
xchg
stos
mov
xchg
push
call
popf
mov
je
xchg
mov
test
imul
adc
dec
repz
outs
push
gs
push
repnz
retf
jp
add
or
popf
pop
ins
jb
addr16
push
adc
push
mov
push
scas
inc
cmp
jae
call
fwait
mov
sub
call
bound
dec
in
call
inc
scas
in
dec
aad
dec
sti
mov
mov
bound
dec
sti
call
bound
sbb
call
bound
dec
sahf
call
imul
dec
sub
adc
les
in
dec
repz
sti
call
bound
clc
sti
call
bound
dec
das
call
mov
dec
sti
arpl
les
in
dec
repz
sti
call
popf
push
int
rep
dec
shr
sub
lods
mov
fmul
mov
dec
je
stc
rep
dec
ror
in
sub
pop
bound
popa
rcr
test
push
xchg
pop
bound
inc
shr
out
int
arpl
popa
push
test
nop
movs
mov
outs
jae
rol
or
sub
lods
mov
repnz
fsub
push
call
pop
rcl
mov
dec
(bad)
call
inc
ss
dec
repz
and
sar
popf
push
int
rep
dec
ret
ret
jmp
scas
aad
or
mov
adc
cmp
push
mov
gs
cld
push
push
adc
gs
xchg
into
mov
xchg
push
call
popf
mov
je
xchg
mov
mov
mov
popf
push
adc
push
dec
add
jmp
push
int
rep
dec
ret
push
inc
dec
adc
test
or
push
repnz
popf
push
leave
mov
movs
das
mov
or
mov
mov
movs
inc
mov
cmp
inc
cwde
in
ds
sbb
cmp
stc
out
fdiv
inc
shr
push
nop
scas
mov
out
leave
mov
addr16
jae
sar
or
sub
lods
fisttp
repnz
mov
movs
mov
pop
test
(bad)
inc
int
cmp
pop
cmc
mov
retf
sbb
cmp
dec
cmp
xchg
mov
test
popa
imul
or
mov
mov
dec
(bad)
xchg
mov
shl
lods
mov
or
jb
gs
push
adc
gs
mov
cld
push
pop
adc
test
or
into
mov
mov
movs
sbb
mov
inc
ret
xchg
loopne
dec
repnz
mov
cmp
dec
cmp
in
dec
repz
mov
pop
fsub
mov
jae
shr
cwde
adc
repnz
popa
jb
outs
jmp
mov
(bad)
cli
jae
call
imul
mov
inc
in
push
mov
es
cmp
jb
std
test
or
jno
or
push
loop
clc
mov
in
int
sar
inc
retf
out
add
or
jno
repnz
popa
jb
outs
jmp
mov
inc
in
push
mov
repz
cmp
gs
(bad)
mov
fwait
retf
les
aad
pop
xchg
mov
cmp
pop
int3
mov
inc
retf
push
mov
sub
fdiv
repnz
loopne
push
mov
sbb
jge
(bad)
mov
xchg
xor
xlat
outs
xchg
clc
mov
call
jno
repnz
popa
jb
outs
jmp
mov
pop
repnz
or
push
repnz
fadd
mov
retf
pop
jne
mov
jae
shr
cld
adc
aad
add
dec
pop
mov
ret
inc
and
mov
lods
fisttp
in
test
in
push
mov
xor
cmp
jae
call
fwait
mov
push
adc
inc
mov
pop
les
inc
retf
adc
sub
fistp
and
sti
mov
and
cmp
(bad)
mov
test
or
push
repnz
fcomp
movs
push
test
je
lahf
mov
test
in
lahf
lods
mov
(bad)
push
jp
gs
pop
repnz
gs
mov
sbb
jge
(bad)
mov
enter
fsub
mov
jae
shl
movs
jp
mov
dec
loopne
jb
push
mov
bound
in
push
mov
dec
inc
cmp
jae
call
lahf
lods
mov
aad
add
push
or
push
dec
rep
pop
mul
xchg
push
bound
pop
call
fwait
mov
push
adc
inc
mov
pop
les
inc
retf
loopne
add
or
inc
and
sti
mov
xor
cmp
(bad)
mov
aam
mov
icebp
inc
cmp
jae
call
lahf
lods
mov
aad
add
push
or
jle
rep
pop
mul
lods
or
push
mov
sbb
jge
(bad)
mov
test
or
cli
mov
mov
mov
movs
mov
dec
loopne
jb
push
cdq
xor
in
mov
in
dec
hlt
pop
cmc
jae
call
fwait
mov
xchg
push
adc
push
je
jmp
out
rcr
dec
cli
mov
xchg
loopne
scas
in
fs
ins
dec
std
mov
movs
in
pop
scas
in
dec
sar
dec
sti
call
hlt
scas
in
dec
stc
mov
(bad)
call
bound
dec
sti
mov
add
(bad)
mov
test
or
push
repnz
fcomp
movs
push
test
je
popf
mov
lea
push
or
ret
inc
in
jl
mul
lods
mov
cli
jae
call
imul
sar
in
push
mov
fsub
mov
jnp
adc
xchg
mov
imul
or
fwait
mov
pop
repnz
push
mov
sbb
jge
(bad)
mov
test
or
push
mov
je
movs
adc
loopne
sub
cmc
mov
xlat
imul
or
movs
sub
jmp
mov
push
mov
and
popf
mov
dec
sti
cwde
adc
xlat
outs
xchg
dec
mov
call
jno
repnz
popa
jb
push
inc
pop
int
xor
in
ds
repnz
or
push
cli
addr16
sbb
jno
aad
add
dec
push
test
je
pushf
mov
test
icebp
mov
inc
in
and
mov
movs
out
mov
dec
aad
xor
xlat
outs
xchg
lds
loopne
push
test
je
pushf
mov
test
icebp
mov
pop
cli
jae
call
imul
push
ins
dec
sti
mov
fwait
scas
xchg
mov
jno
aad
sbb
mov
xchg
dec
pop
mov
int
loope
inc
retf
mov
add
or
jno
repnz
loopne
push
mov
sbb
jne
add
ins
dec
call
mov
mov
jae
shr
mov
lahf
lods
mov
aad
sbb
mov
les
dec
pop
test
mov
cli
inc
dec
cmp
mov
outs
outs
popa
scas
in
inc
in
dec
jns
test
or
push
int
rep
dec
shr
test
mov
xlat
outs
xchg
mov
mov
in
sbb
in
mov
cli
inc
dec
sbb
mov
lods
xchg
jno
repnz
popa
jb
jne
inc
ffree
mov
bound
pop
call
imul
loopne
push
mov
sbb
jge
(bad)
mov
enter
fsub
mov
jae
shl
movs
or
scas
in
dec
loopne
jb
je
inc
and
mov
bound
in
push
mov
push
pop
cmp
jae
call
lahf
lods
mov
aad
sbb
ds
add
test
xchg
sbb
sub
add
in
ins
mov
jnp
add
in
dec
repz
ret
in
inc
dec
rcr
add
xchg
sub
fistp
sbb
loopne
dec
in
push
mov
fsub
mov
jbe
adc
(bad)
test
dec
stc
mov
stc
call
jne
aam
repz
es
pop
mov
push
cmps
repnz
loopne
jb
je
inc
pop
mov
inc
and
mov
lods
xchg
repnz
loopne
push
test
test
mov
popaw
push
mov
scas
in
pop
scas
in
dec
stc
mov
stc
call
jno
aad
push
xchg
mov
clc
ds
pop
retf
mov
inc
retf
mov
mov
lods
loop
test
push
mov
sbb
jge
(bad)
mov
call
bound
bound
dec
jns
bound
dec
sti
pushf
pop
mov
les
sub
ins
push
cwde
adc
les
jne
ins
dec
sti
test
test
xchg
push
ins
dec
sti
jg
mov
bound
sti
call
bound
sar
call
bound
dec
sbb
mov
(bad)
scas
in
dec
rep
dec
sti
stos
adc
add
mov
bound
in
dec
repz
sti
call
dec
push
cld
inc
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fstp
mov
dec
scas
in
dec
jmp
jmp
mov
add
adc
mov
scas
in
gs
and
sbb
fisttp
(bad)
cwde
jmp
dec
jmp
int3
bound
dec
hlt
call
ja
in
dec
in
jg
ret
test
inc
inc
(bad)
mov
mov
movs
or
movs
neg
push
dec
add
jmp
mov
mov
mov
mov
bound
bound
mov
dec
stc
jae
in
cmp
into
jge
inc
movs
mov
or
ins
xchg
push
mov
xchg
push
cwde
adc
les
xchg
push
mov
xor
in
scas
in
dec
fld
dec
sti
pushf
push
mov
bound
dec
sti
mov
call
jl
cmc
mov
stos
xlat
push
add
xchg
mov
pop
scas
in
dec
fucomi
dec
sti
pushf
retf
mov
ins
jmp
call
bound
dec
sti
call
je
out
clc
sub
call
bound
dec
cmc
call
jns
loop
dec
ja
add
inc
fisttp
mul
push
sti
call
bound
dec
or
(bad)
fsubr
dec
cli
and
dec
loop
inc
call
cdq
mov
bound
in
dec
rep
dec
sti
call
bound
(bad)
call
bound
dec
dec
call
imul
sti
pop
adc
les
inc
addr16
hlt
mov
stos
or
mov
bound
inc
sti
call
bound
dec
out
call
repnz
mov
inc
mov
sub
out
(bad)
mov
cmps
jmp
add
in
inc
rep
dec
jmp
adc
les
dec
jmp
inc
ret
ret
dec
loopne
add
adc
mov
repnz
loopne
jb
gs
inc
mul
jbe
adc
leave
fsub
jmp
sti
mov
call
ins
dec
inc
dec
cmp
fisttp
call
pop
scas
in
dec
stc
dec
xchg
call
dec
shr
dec
cmc
mov
loop
add
les
push
dec
rep
cwde
cli
call
bound
dec
cbw
adc
les
ins
dec
sti
popa
adc
add
les
out
dec
repz
sti
call
bound
pop
cli
call
arpl
dec
in
adc
les
outs
dec
sti
and
add
mov
bound
out
dec
repz
call
(bad)
bound
mov
add
in
test
ins
dec
loope
adc
les
in
dec
shr
sti
jp
mov
(bad)
cli
out
dec
repz
call
bound
or
call
pusha
scas
in
push
icebp
ins
dec
mov
xchg
mov
lahf
lods
in
dec
hlt
outs
dec
sti
cli
adc
bound
out
dec
repz
sti
call
bound
sbb
call
arpl
dec
jne
adc
les
inc
jg
ret
jnp
inc
inc
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
ret
call
and
dec
sti
rcl
les
in
dec
repz
call
bound
cs
call
bound
dec
mov
mov
sbb
dec
sti
test
cmp
cdq
push
in
mov
movs
ds
add
fld
in
ds
pop
mov
sbb
(bad)
xchg
out
inc
pushf
in
imul
mov
popa
cmp
mov
addr16
jae
shr
scas
sub
push
fadd
push
ret
mov
movs
push
mov
jae
mov
shl
mov
cdq
push
jp
bound
inc
shr
popf
movs
sub
nop
mov
xchg
push
test
xlat
jb
daa
mov
xchg
pop
repnz
add
loopne
rep
pop
sti
call
bound
dec
fistp
mov
dec
scas
in
dec
fild
stos
adc
les
in
dec
repz
dec
sti
call
bound
push
jecxz
add
cmp
(bad)
mov
test
nop
in
sbb
sbb
xchg
out
mov
jae
ror
mov
dec
gs
fsubr
movs
or
push
push
fild
in
push
mov
test
mov
bound
test
nop
out
mov
call
ds
pop
sbb
das
test
nop
ror
cld
cmp
test
nop
ror
addr16
jae
shr
add
jno
neg
push
pushf
pop
gs
mov
pop
cli
jo
test
lds
ins
dec
fistp
mov
je
nop
mov
test
cmc
mov
pop
retf
div
repz
jno
jmp
lods
in
lds
mov
stos
add
or
bound
dec
shl
or
out
(bad)
pop
retf
xor
test
pop
retf
cmp
add
or
jno
bnd
jl
les
inc
sbb
mov
js
xchg
mov
mov
mov
bound
dec
std
mov
xchg
dec
pusha
scas
in
fs
dec
std
out
mov
imul
pop
gs
xchg
adc
or
dec
stc
loope
mov
jge
repnz
fist
sti
pushf
push
fnstenv
repnz
loopne
jb
popa
jmp
mov
mov
xchg
push
mov
mov
xlat
ins
dec
inc
mov
loope
xchg
mov
(bad)
ret
mov
test
je
xchg
mov
xchg
xor
cmc
imul
add
cmps
sub
retf
jno
neg
push
aaa
add
movs
or
lock
jecxz
and
gs
xchg
mov
mov
mov
bound
ret
aam
inc
dec
repz
push
jmp
sub
imul
call
scas
cdq
aas
popf
push
mul
jp
fistp
mov
jae
std
je
xchg
mov
cwde
outs
mov
jle
in
dec
rcr
sti
call
addr16
in
out
jg
ret
outs
out
inc
dec
inc
jg
ret
jg
inc
dec
inc
jg
loope
add
cmp
(bad)
mov
call
bound
dec
sti
mov
call
mov
fld
mov
pop
mov
dec
div
call
imul
jecxz
mov
test
pop
jecxz
xor
gs
lods
xchg
push
rep
dec
fisttp
mov
bound
dec
in
mov
xchg
imul
dec
std
add
sbb
mov
or
xchg
mov
mov
xchg
dec
popa
scas
in
fs
ins
dec
std
mov
fwait
pusha
xchg
mov
inc
std
in
dec
repz
leave
cli
call
jae
test
rep
dec
js
adc
(bad)
imul
dec
sti
retf
add
mov
bound
in
dec
rep
dec
sti
call
bound
fdivr
call
bound
dec
loop
sbb
mov
dec
sti
pushf
adc
les
in
dec
repz
sti
call
bound
popa
je
sbb
xchg
mov
add
shl
nop
jmp
mov
inc
jmp
jmp
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
mul
jae
shr
nop
out
mov
pop
loopne
push
repnz
imul
fadd
nop
jmp
mov
pop
loop
psllq
mov
pop
scas
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
pop
cmc
mov
inc
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
jmp
outs
scas
out
xchg
mov
mov
mov
imul
mov
inc
test
fld
cwde
les
fwait
in
dec
rep
dec
sti
call
bound
dec
repz
dec
sti
call
bound
hlt
(bad)
call
bound
dec
call
xchg
mov
inc
scas
in
pop
in
jp
dec
mov
test
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
sub
call
bound
dec
push
fwait
adc
les
ins
dec
sti
jnp
mov
(bad)
fldlg2
dec
repz
sti
call
bound
xchg
call
bound
dec
in
or
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
add
in
pusha
rep
dec
aam
adc
les
je
xchg
mov
test
cmc
mov
mov
test
nop
out
cdq
daa
jge
(bad)
xchg
jmp
int3
movs
or
repnz
fsub
mov
jp
jmp
add
push
mov
bound
dec
jmp
adc
les
in
dec
out
ins
dec
sti
test
xlat
xchg
cmp
mov
mov
dec
inc
repnz
fadd
lods
sub
retf
dec
jo
inc
jmp
dec
ret
sub
inc
inc
sbb
cli
inc
cmps
in
mov
mov
xchg
call
mov
inc
jg
dec
repz
mov
bound
retf
adc
xlat
xchg
xor
adc
fild
repnz
repz
push
lock
mov
popf
mov
inc
jmp
dec
ret
shr
inc
call
in
dec
outs
push
fist
mov
inc
(bad)
push
repnz
sub
dec
cmp
cmc
pop
not
gs
xchg
(bad)
mov
xchg
push
not
mov
push
shl
push
sti
call
bound
jmp
mov
mov
mov
pusha
push
call
imul
jmp
dec
ret
dec
call
in
test
dec
outs
jne
jmp
lods
mov
repnz
push
call
data16
inc
jmp
dec
ret
ds
xlat
addr16
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
pop
scas
in
dec
aad
push
not
mov
bound
dec
lock
jae
in
dec
in
dec
shl
push
nop
stc
lea
push
fcomp
add
call
ret
call
dec
sub
dec
repz
std
call
bound
dec
jmp
or
in
in
repnz
dec
sub
mov
adc
sti
rcl
mov
bound
dec
sti
call
bound
pop
cli
call
pusha
scas
in
retf
lock
dec
rcr
mov
shr
dec
sti
test
mov
bound
out
dec
repz
mov
bound
dec
sti
call
pusha
scas
in
xchg
icebp
ins
dec
dec
fwait
adc
(bad)
retf
scas
in
dec
pop
ins
dec
sti
xchg
pop
mov
bound
in
dec
repz
sti
call
bound
stc
cli
call
pusha
scas
in
enter
push
fwait
adc
les
lods
in
dec
dec
ins
dec
sti
jno
mov
bound
dec
repz
in
push
adc
dec
cmp
inc
bound
inc
mov
dec
repz
dec
sti
call
bound
push
sti
call
bound
dec
xlat
call
push
scas
in
dec
retf
ins
dec
sti
cmps
adc
les
in
dec
repz
sti
call
bound
sbb
add
in
das
rep
dec
pushf
call
jge
inc
cli
mov
gs
nop
test
addr16
or
dec
dec
repnz
mov
movs
xor
fld
aas
push
out
test
mov
jno
cmps
cdq
add
(bad)
mov
addr16
inc
test
nop
mov
mov
addr16
jae
shl
out
lds
(bad)
rol
lods
fisttp
repnz
fdivr
call
mov
pop
clc
push
push
add
pushf
lods
fidiv
aad
or
push
mov
xchg
mov
bound
dec
jmp
adc
les
in
dec
call
adc
les
in
dec
repz
dec
sti
call
bound
jo
call
stos
push
adc
lea
dec
sbb
push
push
rol
in
ds
pop
mov
(bad)
xchg
in
bound
test
nop
ror
mov
ds
test
inc
retf
in
add
or
dec
inc
repnz
fadd
nop
jecxz
mov
sub
and
cdq
adc
loop
and
ds
call
cmc
dec
push
call
pushf
lods
fidiv
aad
push
xchg
mov
mov
rol
add
dec
not
test
mov
xchg
push
call
popf
mov
lahf
push
adc
gs
out
mov
movs
sbb
adc
sahf
adc
and
mov
pop
clc
push
mov
and
out
jmp
jmp
ss
in
out
inc
in
push
mov
pop
dec
cmp
jge
rcl
mov
fucomip
jl
repz
adc
adc
test
test
scas
sub
pop
cli
jae
call
imul
jmp
jmp
cmc
bound
pop
call
popf
mov
in
ins
dec
dec
fcmovnbe
gs
push
call
imul
jmp
jmp
int
mov
pop
lock
movs
xlat
push
inc
js
icebp
test
test
scas
xchg
cmp
fs
std
mov
aad
test
pop
hlt
xor
call
cld
gs
adc
add
cmp
cmp
js
icebp
test
test
scas
pop
aas
popf
push
cli
pop
sti
xor
repz
pop
and
retf
mov
mov
push
sti
pop
clc
push
pop
gs
movs
repnz
loopne
jb
popa
jmp
mov
inc
in
push
mov
aaa
dec
cmp
imul
adc
jmp
jmp
and
in
push
cs
in
bound
dec
daa
fwait
adc
les
ins
dec
sti
dec
adc
add
les
in
dec
repz
call
bound
fwait
sti
call
arpl
dec
sti
cwde
adc
les
ins
dec
sti
iret
adc
add
in
dec
repz
dec
sti
call
bound
push
cli
call
bound
dec
out
call
aam
in
dec
rep
dec
sti
fcom
add
in
dec
repz
mov
bound
inc
ret
(bad)
jmp
push
adc
call
bound
dec
call
xchg
mov
jns
in
dec
in
ins
dec
sti
mov
mov
bound
sti
call
bound
ja
call
bound
dec
mov
adc
cld
mov
mov
inc
mov
pop
mov
sub
(bad)
cmps
in
pusha
popa
sbb
push
nop
jecxz
stos
out
mov
jae
ror
nop
aam
cdq
adc
in
dec
popa
xor
cdq
push
js
push
push
jmp
icebp
in
ds
mov
in
dec
aad
inc
lock
cmp
dec
cmp
jge
ret
adc
inc
call
in
inc
rep
dec
neg
mov
jno
in
dec
in
dec
sti
adc
dec
repz
dec
sti
call
bound
add
pop
mov
pop
push
fadd
movs
or
repnz
fmul
sbb
repnz
fdivr
mov
mov
mov
add
shl
mov
jge
into
dec
dec
cmc
addr16
jae
sar
test
mov
inc
cdq
in
ds
lods
mov
fs
inc
jmp
sub
(bad)
pusha
into
repnz
stos
sub
call
bound
dec
out
call
fst
mov
dec
popa
or
mov
sbb
lock
cmp
dec
cmp
inc
mov
sbb
pop
shr
out
loop
jb
addr16
inc
repnz
fadd
mov
cmp
jmp
sub
in
scas
in
dec
ror
dec
sti
call
inc
je
dec
repz
mov
call
dec
(bad)
arpl
ins
push
cwde
adc
les
cmp
jmp
mov
bound
inc
in
sbb
bound
sti
call
bound
dec
sti
call
bound
daa
cli
call
arpl
dec
jbe
adc
les
scas
in
dec
aad
dec
sti
(bad)
adc
add
in
dec
repz
call
bound
out
call
bound
dec
sti
call
or
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
gs
push
adc
arpl
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fsubr
mov
mov
bound
dec
sti
call
popf
push
repnz
fcomp
mov
dec
inc
lock
push
test
nop
loope
mov
xchg
jmp
sub
out
lods
mov
cmp
rcr
add
repnz
call
gs
jge
mov
push
repnz
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
dec
sti
call
bound
jmp
inc
fstp
pop
push
out
inc
movs
in
ds
pop
cdq
cdq
and
(bad)
scas
jmp
xchg
in
mov
movs
adc
mov
inc
retf
sbb
mov
push
fadd
lods
sub
out
xor
mov
movs
into
jge
out
jmp
mov
xchg
rcr
dec
imul
repz
jge
loope
fst
nop
test
inc
in
pusha
inc
ret
(bad)
jmp
inc
sbb
stc
jae
lock
mov
xchg
dec
cmp
inc
movs
in
nop
or
pop
pop
adc
call
bound
pusha
stc
mov
xchg
mov
test
std
mov
mov
fwait
mov
mov
xchg
mov
mov
les
in
dec
loop
into
sti
call
bound
in
dec
repz
call
bound
mov
call
arpl
dec
icebp
fwait
adc
les
in
dec
loop
dec
sti
sbb
mov
bound
dec
sti
call
bound
cmps
sti
call
bound
dec
cmc
fwait
adc
les
scas
in
dec
out
dec
sti
dec
sub
jne
aad
or
mov
xchg
sub
ret
daa
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
ret
sti
scas
adc
enter
mov
jae
shr
repz
mov
(bad)
ds
pop
call
in
jns
and
mov
sub
popa
xor
mov
imul
or
adc
call
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
outs
xchg
push
mov
xchg
push
jmp
lods
ror
repz
jo
adc
mov
addr16
in
sbb
js
sbb
inc
mov
sub
test
popa
sbb
mov
fs
inc
jmp
push
loopne
sub
retf
jmp
mov
xchg
mov
bound
mov
test
nop
test
or
mov
lods
or
aad
or
out
or
adc
sbb
cmp
jmp
loope
pop
mov
push
pusha
jb
fs
lods
in
dec
xlat
ins
dec
jmp
cmp
dec
sti
fist
add
in
dec
repz
call
bound
and
call
bound
dec
push
call
shr
sti
mov
add
mov
bound
dec
sti
call
bound
push
cli
call
bound
dec
cmc
call
mov
in
dec
cmc
dec
push
loopne
sub
fld
aad
or
mov
fistp
mov
bound
pop
sti
call
bound
dec
in
adc
les
dec
fisubr
mov
mov
bound
inc
mul
lods
into
dec
pop
repnz
fcomp
movs
adc
or
(bad)
push
sar
test
dec
movs
out
mov
jae
ror
mov
pop
lods
aad
cmp
ins
dec
fisttp
sub
push
mul
mov
push
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
not
dec
fstp
sbb
inc
mov
pop
fwait
cdq
cs
or
push
sar
nop
fiadd
aad
or
ds
sbb
cli
sbb
sbb
ds
pop
lahf
cdq
and
test
pushf
into
ins
dec
std
mov
aad
popf
push
cmc
inc
jmp
push
jecxz
sub
shl
and
sub
call
outs
xchg
test
or
push
out
mov
mov
pop
cwde
adc
sbb
adc
adc
push
mul
scas
out
mov
push
mul
mov
dec
lods
in
dec
sar
sti
call
jp
cmc
inc
in
je
ret
outs
call
les
jmp
sti
mov
cmp
bound
dec
sti
cmc
adc
add
mov
bound
sti
call
bound
sbb
call
arpl
dec
repnz
adc
les
in
dec
nop
ins
dec
sti
jne
mov
bound
in
dec
repz
sti
call
bound
pop
cli
call
arpl
dec
add
mov
jmp
in
dec
and
sti
pushf
xor
push
adc
pusha
jb
gs
scas
in
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
popf
push
icebp
addr16
popa
jno
cdq
sub
(bad)
movs
in
pusha
popa
push
test
loope
cdq
sbb
(bad)
xchg
jmp
popf
loope
shl
and
or
pop
inc
adc
sbb
cmp
dec
rep
inc
sti
call
bound
dec
jecxz
adc
les
in
dec
xlat
ins
dec
sti
test
mov
and
mov
addr16
or
dec
inc
repnz
fmul
movs
sbb
aaa
push
cli
addr16
loopne
sub
(bad)
lock
adc
mov
or
lea
inc
lds
jg
repnz
call
gs
not
mov
imul
xchg
mov
bound
inc
ret
fldpi
inc
dec
out
call
jmp
mov
push
call
jmp
mov
inc
retf
jne
add
or
cld
ins
push
adc
fwait
adc
les
ror
pusha
out
or
cld
xchg
push
adc
fst
mov
jae
bound
inc
mov
jmp
les
in
dec
repz
call
bound
pop
sti
call
bound
dec
outs
call
pusha
scas
in
dec
clc
ins
dec
sti
push
adc
add
mov
bound
dec
sti
call
bound
sar
call
arpl
dec
rcr
mov
ins
scas
in
dec
shr
sti
ds
les
ror
ins
in
sub
fstp
aad
or
mov
fistp
mov
bound
pop
sti
call
bound
dec
out
adc
les
in
dec
fld
mov
mov
bound
dec
sti
call
outs
xchg
repnz
xchg
push
cmc
mov
movs
or
lock
jae
shl
nop
in
cdq
es
(bad)
xchg
in
popaw
and
cdq
pop
jns
cmp
in
ds
mov
in
dec
aad
inc
lock
sbb
dec
cmp
icebp
inc
retf
mov
dec
xchg
mov
push
in
dec
jmp
mov
les
in
dec
repz
sti
call
bound
push
not
dec
fld
sbb
inc
mov
pop
sbb
in
jge
sbb
cdq
pop
jge
(bad)
fwait
out
addr16
mul
movs
out
xchg
mov
add
adc
mov
or
inc
stos
in
ds
scas
in
dec
aad
inc
in
push
cmps
or
lock
jae
mov
xchg
mov
bound
pop
mul
lods
retf
dec
pop
repnz
fcomp
mov
or
(bad)
mov
nop
or
push
adc
mov
mov
jle
aad
push
xchg
mov
cdq
xor
in
lods
in
dec
(bad)
dec
sti
pushf
aas
mov
bound
dec
rcl
adc
push
mov
out
call
gs
lods
in
dec
xlat
ins
dec
jmp
cmp
dec
sti
adc
les
in
dec
repz
dec
sti
call
bound
mov
add
in
adc
ins
dec
cmc
fwait
adc
les
scas
in
dec
mov
adc
add
in
dec
repz
call
bound
sub
add
in
pop
repnz
dec
repz
adc
les
dec
push
icebp
xchg
sub
fld
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
in
dec
fldcw
mov
mov
bound
inc
ret
mov
inc
dec
out
add
shl
sub
dec
dec
repnz
fmul
movs
sbb
repnz
fdivr
scas
sub
out
stos
jg
dec
repz
out
or
popf
push
repnz
clc
jae
mul
mov
push
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
out
xchg
sub
fimul
mul
jae
shr
test
mov
popa
sbb
mov
ret
or
ds
sbb
test
push
fadd
nop
jecxz
cdq
and
test
pushf
mov
dec
std
mov
aad
popf
push
sti
inc
in
addr16
jmp
shl
push
stos
sub
call
jb
aad
or
ds
sbb
(bad)
outs
or
cld
dec
push
adc
xchg
sub
(bad)
sti
inc
in
addr16
jmp
mov
dec
repz
cdq
cli
call
dec
mov
pop
mul
mov
jno
out
dec
repnz
dec
sti
mov
xor
bound
dec
sti
je
mov
bound
dec
sti
call
bound
pop
sti
call
arpl
dec
arpl
mov
repz
in
dec
push
ins
dec
sti
call
bound
dec
sti
call
bound
dec
cli
call
arpl
dec
movs
fwait
adc
les
dec
push
mul
lods
iret
outs
xchg
cwde
mov
xchg
dec
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
aad
adc
les
dec
in
js
ret
test
test
mov
test
nop
jmp
test
test
pop
rol
mov
dec
lods
ror
repz
jae
ror
mov
pop
lods
xlat
dec
addr16
fld
inc
cmp
je
ret
jb
inc
call
in
dec
rep
dec
lock
jo
in
dec
in
dec
sti
adc
bound
inc
ret
and
inc
dec
(bad)
mov
test
nop
jmp
movs
out
test
inc
rol
mov
jp
aad
or
loopne
sub
lea
popa
adc
push
ror
cmp
fld
mov
mov
outs
sub
mov
xchg
mov
push
in
dec
in
jge
ret
enter
mov
push
call
gs
mov
inc
retf
pop
mov
gs
jmp
push
icebp
sbb
or
xchg
cmp
ins
dec
sti
mov
call
push
lock
add
dec
cmp
in
pop
ret
outs
dec
push
xchg
mov
jle
jmp
sti
call
arpl
dec
cld
call
iret
scas
in
dec
rep
dec
sti
daa
adc
les
in
dec
repz
dec
sti
call
bound
std
sti
call
bound
dec
push
call
ins
scas
in
dec
or
sbb
push
out
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
(bad)
ins
dec
sti
mov
mov
bound
sub
inc
fld
sbb
clc
inc
cmps
in
ds
pop
fwait
cdq
and
(bad)
lods
in
js
test
nop
fld
(bad)
sahf
jmp
add
popf
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
inc
add
jmp
test
fadd
mov
jno
out
xchg
jb
fs
pop
icebp
addr16
ds
pop
mov
bnd
sub
call
jae
jmp
add
ds
sbb
pop
mov
xchg
push
shr
mov
lahf
mov
out
or
in
or
jmp
add
xor
in
lods
in
dec
fstp
movs
or
cld
dec
rep
jmp
call
bound
dec
mov
xchg
mov
enter
std
ins
dec
sti
or
mov
bound
in
dec
rep
dec
sti
call
bound
idiv
call
and
push
test
sub
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
call
imul
fcomp
movs
or
pop
fimul
repnz
fmul
mov
bound
inc
cld
fist
mov
bound
inc
sti
call
bound
dec
ret
stos
jmp
test
pop
fcomp
jmp
pop
or
mov
mov
lods
sub
out
mov
mov
push
mov
leave
jg
call
add
sub
les
out
dec
sbb
sti
mov
push
les
in
fld
and
mov
(bad)
clc
in
dec
repz
mov
bound
or
add
in
loopne
ins
dec
and
mov
nop
scas
in
dec
scas
ins
dec
sti
xchg
adc
les
in
dec
repz
mov
bound
push
cli
call
arpl
dec
mov
xchg
mov
cmps
scas
in
dec
rep
dec
sti
cdq
pop
mov
bound
dec
sti
call
bound
mov
call
arpl
dec
std
mov
(bad)
cmp
push
push
add
jmp
cmps
in
dec
repz
sti
call
bound
push
sti
call
bound
dec
rcr
mov
push
scas
in
dec
(bad)
ins
dec
sti
mov
mov
(bad)
out
in
dec
repz
call
bound
mov
sub
leave
dec
pop
repnz
fadd
movs
sbb
push
fimul
mul
jae
rol
stos
sub
fimul
repnz
fdivr
movs
adc
sub
scas
push
out
mov
lods
sub
repnz
fcomp
call
mov
fisttp
push
movs
and
mov
adc
addr16
sti
call
bound
pop
sti
call
bound
dec
fstp
mov
dec
scas
in
dec
fisubr
test
mov
fmul
mov
addr16
or
mov
ins
sar
nop
loopne
test
mov
ja
test
ror
loope
jmp
pop
nop
repz
adc
mov
xchg
jmp
nop
in
ds
sbb
and
cmpxchg
call
push
xchg
mov
cdq
je
sbb
test
rep
dec
lock
jo
in
dec
in
inc
ret
es
xor
(bad)
mov
mov
lods
loopne
xchg
dec
mov
xchg
push
hlt
mov
movs
or
sti
sbb
loop
sub
fld
repnz
gs
mov
adc
sbb
lods
loopne
xchg
test
fst
mov
bound
dec
rcr
call
dec
leave
clc
call
dec
jmp
dec
cmc
inc
dec
fstp
(bad)
bound
dec
rol
lods
loopne
xchg
lock
xchg
pop
retf
sahf
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
cmps
add
in
dec
rep
dec
pop
call
popf
scas
in
dec
pushf
ins
dec
sti
clc
adc
add
mov
bound
in
dec
repz
dec
sti
call
bound
sbb
call
bound
dec
pop
call
sahf
scas
in
dec
imul
sti
arpl
les
in
dec
repz
call
bound
call
mov
mov
jae
mul
mov
outs
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
imul
xchg
mov
bound
dec
leave
call
popf
push
adc
fwait
push
jecxz
out
sbb
repnz
fadd
loop
mov
sub
ror
ror
hlt
cmp
call
outs
mov
mov
xchg
or
popf
push
jmp
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
adc
adc
inc
mov
sbb
repnz
fadd
pop
mov
lock
in
pusha
inc
ret
push
jmp
dec
sbb
fadd
nop
call
test
push
inc
sub
adc
into
jge
loope
cwde
xchg
mov
test
mov
call
imul
in
dec
inc
xchg
mov
push
in
dec
in
jp
ret
shr
inc
dec
out
jmp
shl
mov
out
in
pusha
inc
ret
mov
inc
dec
repnz
clc
jae
mul
mov
inc
ins
out
dec
repz
cmps
clc
call
dec
mov
push
stc
addr16
not
dec
les
(bad)
jl
ins
inc
stc
call
out
in
dec
sti
sub
call
arpl
dec
sti
call
bound
dec
sti
arpl
les
in
dec
repz
call
bound
sbb
add
in
mov
ins
dec
icebp
fwait
adc
(bad)
jmp
in
dec
std
ins
dec
sti
call
mov
bound
dec
sti
call
bound
dec
fld
dec
cmp
sbb
or
scas
in
dec
jmp
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
in
sbb
jge
(bad)
mov
xchg
ds
push
mov
add
in
ds
pop
test
push
cli
inc
lahf
in
ds
popf
cdq
or
mov
xor
pop
pop
adc
test
mov
jo
cmp
ins
dec
repz
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
in
dec
repz
dec
sti
call
popf
push
lock
pop
shr
nop
lock
in
jle
push
test
nop
loope
stos
out
mov
pusha
jb
fs
test
icebp
mov
mov
dec
dec
repnz
fdiv
imul
ret
loope
xchg
xchg
mov
xchg
cmps
or
adc
test
loop
xchg
mov
bound
push
mul
lods
aam
pop
hlt
inc
in
popa
inc
ret
lods
jmp
inc
icebp
inc
in
popa
inc
ret
mov
cdq
ss
icebp
inc
in
popa
inc
ret
sub
call
ins
mov
push
fldcw
out
(bad)
pusha
jb
addr16
scas
ja
rep
outs
sti
call
jmp
es
call
arpl
dec
stc
fwait
adc
les
dec
sti
jne
mov
bound
dec
sti
call
bound
loopne
call
bound
dec
fwait
call
jne
neg
inc
aam
fistp
mov
bound
pop
sti
call
bound
dec
out
adc
les
in
dec
fld
test
test
scas
aad
popf
push
hlt
addr16
or
jl
add
loope
scas
in
ds
push
mov
aaa
push
fdivr
mov
popf
push
adc
push
sti
call
bound
pop
sti
call
bound
dec
ret
mov
inc
dec
(bad)
mov
test
nop
jmp
adc
loopne
adc
jp
sbb
popf
push
shl
jmp
cdq
sub
test
dec
lock
mov
bound
jb
fs
mov
lock
mov
loope
loopne
jb
fs
mov
push
loopne
jb
fs
scas
int
icebp
ins
dec
shl
adc
push
mov
call
sti
pop
adc
les
in
dec
repz
call
bound
adc
call
bound
dec
push
call
gs
in
dec
cld
ins
dec
sti
pushf
adc
les
in
dec
repz
popf
sub
call
repz
imul
mov
bound
dec
sti
call
addr16
cdq
mov
xchg
pop
shr
xrelease
mov
mov
pop
pop
pushf
cdq
and
mov
dec
std
mov
mov
mov
imul
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
dec
dec
mov
or
dec
pop
repnz
fadd
nop
out
mov
je
xchg
mov
xchg
dec
sbb
icebp
sbb
sbb
push
mov
outs
mov
pop
not
gs
scas
in
pop
ret
outs
dec
or
xchg
mov
pop
shr
dec
repz
call
and
ins
dec
sti
unpckhps
bound
dec
repz
dec
sti
call
bound
sbb
call
bound
dec
icebp
fwait
adc
les
scas
in
dec
lock
dec
sti
xchg
adc
add
in
dec
repz
sti
call
bound
iret
sti
call
and
jae
div
into
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
add
in
popa
rep
dec
retf
mov
jge
loope
leave
xchg
mov
xchg
dec
pop
call
jmp
ds
pop
lahf
cdq
and
(bad)
lods
in
jbe
daa
cmp
pop
(bad)
cdq
adc
(bad)
popf
in
jle
test
leave
inc
cmc
les
retf
push
clc
jae
mul
stos
iret
jge
loope
sbb
mov
pushf
push
mov
xchg
mov
bound
dec
cmc
call
ja
in
dec
jmp
add
loope
xor
nop
test
push
jmp
cmps
in
ds
pop
xchg
push
std
inc
xchg
in
push
movs
or
push
adc
cwde
push
shr
nop
out
mov
pop
fmul
mov
bound
pop
lock
mov
stc
dec
cmp
sbb
mov
bound
mov
or
jge
loope
mov
ds
push
pushf
movs
iret
jge
loope
enter
cmp
sbb
mov
mov
cwde
xor
in
lods
in
dec
fist
dec
sti
pushf
aas
cmps
or
aad
or
push
mov
scas
enter
push
call
xor
sti
call
bound
loope
call
bound
dec
jecxz
adc
les
in
dec
or
dec
sti
jle
mov
bound
in
dec
repz
dec
sti
call
bound
mov
add
in
pop
push
call
sar
dec
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
(bad)
ins
dec
sti
mov
mov
xchg
mov
or
push
shr
sub
dec
inc
cmc
sbb
sar
mov
jne
out
xor
in
ds
push
pushf
scas
enter
dec
retf
inc
mov
gs
push
xchg
mov
push
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
repz
or
dec
inc
repnz
fmul
mov
xchg
mov
je
or
pop
fmul
cmc
addr16
popa
pop
xchg
adc
daa
scas
in
dec
repz
sti
call
pushf
push
adc
call
scas
sbb
popf
push
mul
jne
out
or
pushf
push
adc
popf
pop
icebp
test
test
scas
and
popf
push
lock
in
jge
jmp
mov
data16
xchg
dec
rep
push
fwait
adc
les
pop
idiv
mov
xor
dec
repz
aad
add
jmp
adc
les
in
push
rep
dec
pop
call
add
dec
sti
ds
les
in
dec
repz
popf
sub
(bad)
jmp
sub
call
bound
dec
out
call
jle
in
dec
in
ins
dec
sti
mov
mov
mov
xchg
push
jmp
loopne
adc
add
inc
mov
sub
out
xor
sti
call
daa
stos
in
dec
repz
sti
call
bound
pop
sti
call
dec
push
adc
test
nop
icebp
sbb
fadd
cmp
(bad)
mov
mov
cmps
sub
out
mov
dec
repz
loopne
or
popf
push
(bad)
je
xchg
mov
call
imul
mov
jle
in
dec
imul
sti
retf
adc
add
les
in
dec
rep
dec
sti
call
bound
inc
sti
call
arpl
dec
pop
call
dec
scas
in
dec
(bad)
ins
dec
sti
adc
outs
mov
(bad)
retf
in
dec
rep
dec
sti
call
bound
push
call
bound
dec
pop
call
fs
inc
retf
adc
or
(bad)
cmp
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
call
jnp
aad
or
mov
xchg
ds
pop
pushf
cdq
ss
(bad)
mov
test
nop
out
cdq
daa
jnp
or
in
mov
movs
sbb
cmp
out
xchg
mov
imul
ret
out
jmp
push
popf
lods
(bad)
pop
mov
xchg
dec
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
imul
in
ds
pop
xchg
mov
mov
lods
sub
ror
repnz
fdiv
mov
popf
push
cmc
addr16
ja
or
pop
ror
repnz
fmul
lods
sub
lea
jmp
out
push
in
xchg
sub
fisubr
hlt
inc
retf
or
add
sbb
ins
imul
repz
and
inc
mov
sbb
adc
inc
mov
pop
(bad)
mov
mov
inc
mov
pop
(bad)
mov
mov
outs
dec
(bad)
mov
xchg
fsub
in
fs
dec
std
mov
mov
popf
lods
(bad)
pop
mov
xchg
dec
call
xchg
mov
inc
scas
in
pop
fcom
inc
mov
adc
les
in
dec
repz
dec
sti
call
bound
lods
sti
call
arpl
dec
cwde
fwait
adc
les
dec
sti
or
les
in
dec
rep
dec
sti
call
bound
mov
add
in
dec
repnz
dec
jmp
xchg
mov
mov
in
dec
cmc
dec
push
div
mov
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
inc
scas
in
dec
fldcw
mov
mov
bound
mov
test
nop
test
mov
test
nop
out
cdq
and
(bad)
lods
call
iret
mov
dec
jl
push
fsub
imul
ret
out
in
jb
fs
xchg
pop
mov
xchg
dec
mov
xchg
mov
bound
sti
call
bound
push
sti
call
outs
xchg
sub
mov
movs
adc
test
push
fadd
lods
sub
fmul
hlt
addr16
in
sbb
jl
sbb
push
shl
jmp
cdq
sub
test
push
fmul
imul
ret
out
jmp
in
xchg
sub
retf
jmp
adc
les
inc
xor
stos
sub
iret
jge
loope
mov
ds
sbb
lods
enter
inc
retf
push
mov
or
outs
movs
repnz
call
gs
mov
fdivrp
call
dec
pop
in
dec
cmc
inc
pop
icebp
test
mov
cmp
rep
pop
retf
nop
adc
loope
scas
cld
push
jecxz
dec
jmp
jb
scas
in
lock
dec
inc
call
xchg
dec
sti
push
mov
bound
dec
sti
call
bound
cmp
adc
js
scas
in
dec
rep
dec
adc
adc
les
scas
in
dec
sti
ins
dec
sti
ss
les
loope
loopne
popa
ins
xchg
push
mov
xchg
mov
bound
dec
jmp
les
in
dec
out
ins
dec
sti
test
les
in
dec
repz
dec
sti
call
popf
push
adc
inc
mov
push
mov
pop
push
in
lods
out
mul
test
push
fdiv
pop
lahf
mov
bound
mov
fist
mov
bound
pop
sti
call
bound
dec
in
push
mov
popf
mov
addr16
je
or
cdq
das
jge
(bad)
stos
in
popaw
sbb
mov
pushf
push
adc
push
shr
nop
out
mov
push
fmul
ficomp
mov
and
dec
sti
add
cmp
dec
cmp
ja
loopne
adc
je
sbb
pop
call
imul
not
gs
cmps
loope
loopne
jb
fs
stos
jecxz
std
push
cld
mov
xchg
stos
arpl
dec
std
mov
test
xchg
dec
pop
ins
dec
sti
clc
adc
les
in
dec
rep
dec
sti
call
bound
jmp
mov
bound
dec
pop
call
les
dec
sti
cli
adc
les
retf
callw
call
sar
dec
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
jmp
dec
ret
jecxz
inc
dec
(bad)
mov
test
nop
jmp
scas
jmp
stos
in
ds
mov
fs
push
clc
imul
call
imul
mov
bound
mov
or
nop
mov
addr16
sbb
jno
aad
or
mov
mov
mov
mov
mov
push
mov
leave
jnp
call
add
sub
les
fisttp
pushf
dec
sti
call
mov
in
dec
sti
and
les
in
dec
repz
sti
call
bound
mov
call
bound
dec
jecxz
adc
les
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
test
in
dec
repz
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
jge
dec
push
mov
or
nop
mov
addr16
push
nop
out
mov
lods
call
bound
mov
loope
cld
jg
ret
test
inc
call
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
xchg
xlat
xchg
out
or
push
out
mov
lods
sub
dec
inc
repnz
fadd
movs
adc
loop
not
gs
mov
mov
mov
lods
sub
mov
outs
dec
sti
call
bound
push
out
mov
xor
sbb
jae
call
imul
out
pusha
push
hlt
mov
sbb
sbb
stc
jo
in
push
mov
popf
lods
int
repnz
dec
fld
adc
add
(bad)
push
loopne
dec
jmp
les
in
popf
rep
dec
das
call
gs
in
dec
repnz
dec
sti
push
adc
les
in
dec
repz
mov
bound
xchg
sti
call
arpl
dec
mov
mov
bound
dec
sti
dec
pop
mov
jns
repnz
loopne
popa
ins
xchg
push
mov
xchg
mov
bound
dec
jmp
les
in
dec
call
adc
les
in
dec
repz
dec
sti
call
popf
push
adc
inc
mov
pop
popf
cdq
sub
pop
push
fmul
movs
or
test
pop
fdiv
dec
xchg
mov
inc
test
inc
hlt
sub
call
bound
dec
call
xchg
mov
jns
in
dec
in
ins
dec
sti
test
test
scas
mov
popf
push
repz
or
mov
popa
pop
cmp
sbb
lods
enter
scas
or
out
sub
out
(bad)
mov
cmps
in
inc
lods
out
icebp
movs
or
in
dec
aad
dec
(bad)
mov
scas
(bad)
ins
dec
rcr
mov
inc
scas
in
dec
(bad)
adc
dec
cmp
jmp
sti
mov
mov
pop
rep
dec
icebp
fwait
adc
les
in
dec
cmp
jbe
mov
vpsllq
call
bound
(bad)
sti
call
bound
dec
add
xchg
mov
sub
sti
and
les
loope
loopne
popa
gs
push
mov
xchg
mov
bound
dec
jmp
adc
les
dec
jmp
adc
les
in
dec
repz
dec
sti
call
popf
push
adc
call
jns
out
mov
popa
push
test
nop
loope
mov
sub
ror
mov
call
or
dec
mov
lahf
mov
bound
dec
sti
call
bound
push
cmc
mov
adc
dec
cmp
(bad)
mov
test
nop
in
lea
stos
in
addr16
sbb
sub
push
shr
nop
out
(bad)
cdq
das
jnp
add
(bad)
sti
or
inc
xchg
mov
bound
pop
call
imul
jmp
dec
ret
and
inc
inc
test
dec
ret
xor
inc
dec
test
dec
ret
add
inc
call
dec
sar
outs
add
dec
imul
pop
xchg
mov
stos
scas
in
dec
pop
ins
dec
sti
cld
adc
les
in
dec
repz
dec
sti
call
bound
std
sti
call
bound
dec
cld
call
leave
scas
in
dec
pop
ins
dec
sti
dec
pop
mov
jp
repnz
loopne
popa
pop
xchg
push
mov
xchg
mov
bound
dec
hlt
call
ja
in
dec
jmp
add
dec
sbb
sub
out
nop
mov
cmps
in
ds
sbb
repnz
fdiv
mov
pop
in
mov
inc
push
lock
push
mov
bound
dec
hlt
call
jne
in
dec
call
jmp
mov
mov
test
nop
jmp
inc
loopne
jb
gs
pop
cli
addr16
jbe
adc
mov
fs
inc
in
addr16
(bad)
mov
cwde
cld
pop
push
adc
call
bound
dec
repz
mov
bound
add
call
arpl
dec
hlt
fwait
adc
les
in
dec
rep
dec
sti
ins
adc
les
in
dec
repz
call
bound
sbb
add
in
fdiv
ins
dec
ficomp
mov
xchg
scas
in
dec
mov
dec
sti
popf
adc
add
mov
bound
dec
repz
in
sbb
pop
aam
mov
imul
call
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
popa
sti
call
bound
jb
gs
test
push
out
movs
in
mov
movs
or
repnz
fmul
lods
sub
mov
loope
and
rcl
mov
pop
bound
jmp
push
jmp
sub
fld
repnz
call
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
jb
fs
movs
(bad)
mov
mov
movs
sub
out
test
inc
rol
pop
xchg
mov
gs
or
fmul
repnz
fmul
mov
dec
lods
into
dec
je
add
ins
dec
fld
mov
mov
push
loop
xchg
mov
bound
inc
ret
int
inc
dec
out
jecxz
jb
fs
mov
push
jecxz
jb
fs
mov
push
jecxz
jb
fs
scas
int
rep
dec
rcr
scas
into
js
repnz
call
gs
scas
in
dec
xlat
ins
dec
jmp
les
in
dec
pause
dec
sti
call
bound
inc
cli
call
arpl
dec
or
mov
and
dec
sti
lahf
adc
add
les
in
dec
rep
dec
sti
call
bound
push
cli
call
bound
dec
sbb
adc
(bad)
stc
scas
in
dec
and
dec
sti
pushf
xor
jae
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
in
dec
fld
mov
mov
bound
inc
ret
mov
cdq
xor
(bad)
mov
test
nop
jmp
mov
adc
sbb
cdq
sbb
out
inc
cwde
out
fisub
scas
in
dec
aad
inc
lock
cmp
dec
cmp
sti
inc
retf
lahf
mov
gs
or
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
pop
popa
lods
int
pop
repnz
fadd
lods
sub
ror
repnz
fmul
or
adc
mov
mov
mov
lods
loop
mul
bound
push
lock
xor
cmp
mov
xor
mov
jge
loope
lods
xchg
mov
test
nop
test
mov
xchg
push
lock
mov
outs
xchg
scas
mov
xchg
push
shr
mov
popf
movs
enter
mov
outs
push
call
bound
pusha
out
or
fcomp
jp
call
bound
dec
repz
mov
bound
inc
cli
call
bound
dec
pop
call
call
sti
aas
adc
les
in
dec
repz
sti
call
bound
push
cli
call
arpl
dec
neg
mov
bound
dec
sti
je
mov
(bad)
mov
popf
pop
call
in
gs
ret
out
jmp
scas
in
dec
rep
dec
lock
jno
in
dec
in
dec
sti
adc
bound
dec
sti
call
bound
jl
call
popf
push
repnz
fcomp
movs
adc
repnz
fmul
movs
or
ss
call
ds
jge
mov
inc
mov
imul
or
adc
call
imul
mov
bound
dec
sti
call
outs
xchg
pop
mov
xchg
push
shr
nop
hlt
mov
pop
jne
adc
cdq
es
xor
jae
mul
lods
into
dec
pop
lock
push
test
nop
jmp
test
push
cli
inc
xchg
jecxz
leave
imul
ret
out
clc
jae
mul
mov
add
dec
sti
call
outs
xchg
mov
shr
mov
cmp
out
inc
mov
pop
cmp
jmp
pop
cmp
icebp
dec
ds
call
dec
jp
dec
cmc
inc
push
icebp
test
mov
sahf
dec
cmp
pusha
jb
addr16
mov
dec
sti
mov
int3
daa
mov
dec
repz
call
bound
mov
call
arpl
dec
icebp
fwait
adc
(bad)
hlt
scas
in
dec
pop
ins
dec
sti
cdq
adc
add
dec
repz
dec
sti
call
bound
sbb
call
arpl
dec
les
mov
bound
dec
sti
mov
les
retf
push
in
jb
gs
push
adc
call
bound
dec
call
xchg
mov
jns
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
js
gs
test
push
fadd
movs
or
mul
jae
rol
test
mov
(bad)
lahf
jmp
rol
mov
fs
inc
in
ja
ret
outs
jmp
dec
loope
sbb
mov
xchg
mov
bound
dec
hlt
call
je
in
dec
jmp
adc
les
out
retf
xlat
mov
or
xchg
mov
mov
test
nop
call
mov
lods
in
jns
sbb
sbb
adc
cwde
pop
shr
nop
out
mov
stos
in
addr16
sbb
cdq
sbb
dec
push
icebp
sbb
sbb
adc
bound
test
loop
xchg
mov
bound
pop
mul
movs
out
xchg
mov
push
call
jmp
mov
inc
retf
pop
mov
cmpxchg
lea
mov
inc
mov
pop
lea
mov
outs
dec
(bad)
xchg
adc
gs
cmp
rep
push
cwde
adc
les
inc
jmp
sub
les
fisttp
cdq
dec
sti
call
push
test
cli
call
arpl
dec
mov
mov
sahf
scas
in
dec
cmps
ins
dec
sti
gs
les
in
dec
pause
dec
sti
call
bound
pop
sti
call
arpl
dec
repz
adc
les
in
dec
mov
dec
sti
sbb
les
in
dec
repz
jmp
jnp
(bad)
enter
ret
out
inc
call
in
inc
rep
dec
lock
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jnp
call
popf
push
adc
fwait
push
shr
nop
icebp
mov
in
jge
sbb
sbb
in
mov
movs
or
test
pushf
mov
or
pop
push
adc
test
mov
addr16
cmp
ins
dec
repz
jb
in
dec
out
dec
sti
lea
les
in
dec
repz
dec
sti
call
popf
push
repnz
fcomp
movs
or
repnz
fmul
movs
adc
repnz
clc
jae
mul
lods
int
pop
repnz
fadd
nop
jmp
test
push
fmul
add
hlt
inc
in
arpl
hlt
jmp
call
mov
repnz
dec
sti
xchg
adc
enter
mov
jae
shr
or
adc
sbb
or
adc
lea
mov
pop
test
mov
outs
push
cwde
adc
les
push
dec
repz
in
nop
or
pop
cdq
mov
mov
ins
dec
call
xchg
mov
inc
scas
in
pop
retf
adc
call
and
ins
dec
sti
cwde
adc
add
mov
(bad)
xlat
in
dec
repz
dec
sti
call
bound
mov
add
in
mov
ins
dec
setp
les
in
dec
xchg
ins
dec
sti
add
mov
bound
in
dec
repz
sti
call
bound
dec
cli
call
arpl
dec
std
mov
xor
outs
xchg
xchg
mov
xchg
dec
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
(bad)
call
push
scas
in
dec
in
jg
ret
mov
mov
mov
test
nop
jmp
stos
out
test
push
rol
nop
fmul
(bad)
cdq
in
bound
cmp
pop
xchg
dec
cmc
dec
push
lock
mov
ins
dec
cmp
js
ret
jne
inc
call
in
inc
rep
dec
neg
mov
jno
in
dec
in
dec
sti
adc
bound
inc
mul
lods
leave
dec
pop
mul
jae
shl
nop
in
mov
test
test
nop
fisttp
(bad)
or
ds
pop
mov
repnz
fadd
movs
or
mul
mov
popf
sbb
je
xchg
mov
xchg
adc
daa
scas
in
dec
repz
or
popf
mov
inc
in
sbb
jle
sbb
ja
in
sbb
jnp
pop
push
stc
ja
in
sbb
pusha
lods
jmp
sti
mov
call
push
lock
mov
pushf
dec
cmp
ins
cmp
call
jno
cld
dec
mov
dec
sti
call
bound
inc
sti
call
bound
dec
cmp
adc
les
in
dec
xchg
ins
dec
sti
(bad)
adc
les
in
dec
repz
sti
call
bound
icebp
sti
call
bound
inc
call
sar
dec
rep
inc
sti
call
bound
dec
loope
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
xchg
mov
mov
mov
dec
inc
sti
sbb
adc
and
inc
in
ds
push
pushf
stos
enter
dec
retf
pop
mov
gs
push
xchg
mov
push
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
mul
jae
shr
test
dec
inc
repz
popa
pop
sbb
push
test
mov
inc
mov
sub
out
mov
scas
call
test
rep
dec
in
push
mov
popf
mov
addr16
jne
in
push
mov
popf
mov
mov
test
test
scas
adc
add
jecxz
or
pushf
push
adc
mov
inc
add
in
dec
fnstenv
call
xchg
dec
repz
sti
call
bound
aad
call
bound
dec
cld
call
sti
scas
in
dec
jp
dec
sti
or
les
in
dec
repz
popf
sub
(bad)
out
sub
call
bound
dec
cmc
call
je
in
dec
jmp
sub
scas
out
fwait
mov
mov
xchg
ds
pop
cdq
cdq
das
jl
add
scas
call
gs
call
bound
dec
in
call
pop
out
adc
outs
seto
mov
cmps
call
or
popf
push
hlt
addr16
jne
or
pop
fmul
cmp
fnsave
dec
les
fisttp
cdq
dec
sti
call
bound
dec
sti
call
bound
enter
mov
xchg
mov
arpl
dec
add
adc
les
in
dec
retf
ins
dec
sti
pop
adc
les
in
dec
repz
dec
sti
call
bound
mov
add
in
sbb
ins
dec
out
fwait
adc
les
scas
in
dec
in
ins
dec
sti
sti
adc
add
les
retf
push
(bad)
pusha
popa
js
add
cmp
dec
cmp
ins
dec
cld
call
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
in
dec
repz
dec
sti
call
bound
fs
call
outs
xchg
xlat
mov
xchg
push
lock
movs
sub
fmul
sti
addr16
jae
shl
stos
sub
out
xor
in
ds
pop
sbb
jmp
push
mov
iret
jge
loope
setb
pop
cmp
sti
call
bound
dec
call
xchg
mov
js
in
dec
in
ins
dec
sti
mov
mov
mov
jae
shr
xrelease
sbb
adc
cdq
and
out
addr16
in
xchg
sub
ror
hlt
add
shl
nop
jmp
scas
out
inc
stos
loop
enter
mov
inc
mov
pop
clc
jae
mul
mov
add
dec
sti
call
outs
xchg
mov
or
push
shr
mov
mov
mov
je
jno
movs
enter
mov
jne
or
movs
enter
mov
outs
push
cwde
adc
les
pushf
dec
repz
jecxz
add
jb
adc
stos
push
mov
inc
scas
in
pop
retf
enter
sbb
(bad)
in
scas
in
dec
push
ins
dec
sti
mov
mov
bound
in
dec
repz
call
bound
repz
call
bound
dec
das
fwait
adc
les
in
dec
push
ins
dec
sti
lods
adc
add
mov
(bad)
call
dec
sti
call
bound
jecxz
call
arpl
dec
inc
fwait
adc
les
in
dec
add
adc
add
mov
bound
dec
sti
call
jge
loope
scas
xchg
mov
test
cmp
dec
cmp
ins
dec
repz
ins
scas
in
dec
loopne
dec
sti
mov
les
in
dec
repz
dec
sti
call
bound
jnp
call
bound
dec
mov
xchg
mov
jge
loope
icebp
xchg
mov
lea
dec
pop
sbb
out
inc
cmps
loope
cld
movs
sbb
test
jmp
bound
sbb
in
jl
test
nop
leave
mov
xor
shl
or
scas
jmp
in
popa
inc
out
sub
fsubr
loope
pop
xchg
mov
pushf
push
mov
xchg
mov
bound
dec
hlt
call
jne
in
dec
call
adc
les
in
dec
repz
dec
sti
call
popf
push
repnz
fcomp
scas
sub
in
inc
repnz
fmul
movs
bsr
inc
test
push
loope
popf
in
ds
pop
in
adc
outs
or
jge
(bad)
cmps
in
addr16
sbb
mov
xor
mov
lock
imul
ret
out
stc
addr16
mul
mov
add
dec
sti
call
bound
push
in
xchg
sub
ror
mul
jae
shr
mov
call
fcomp
mov
js
into
jge
out
call
gs
mov
sbb
in
sbb
jge
out
call
gs
(bad)
jnp
rep
bound
call
popa
scas
in
ins
mov
xlat
mov
inc
loope
dec
repz
or
call
dec
mov
push
stc
addr16
mul
mov
bound
sti
call
bound
dec
sti
call
bound
movs
sti
call
arpl
dec
clc
fwait
adc
(bad)
clc
scas
in
dec
rep
dec
sti
adc
pushf
mov
bound
dec
sti
call
bound
sub
call
arpl
dec
ficomp
mov
fwait
scas
in
dec
pushf
ins
dec
sti
mov
mov
bound
dec
repz
in
sbb
jge
loope
xchg
mov
xchg
mov
bound
dec
jmp
adc
les
in
dec
out
ins
dec
sti
test
les
in
dec
repz
dec
sti
call
bound
push
in
xchg
sub
(bad)
sbb
inc
mov
pop
sbb
in
test
pop
test
fwait
in
ja
sub
jg
imul
mov
mov
mov
jnp
in
sbb
fs
call
bound
dec
out
call
jg
in
dec
shr
sbb
mov
mov
mov
test
push
sbb
test
in
ds
sbb
repnz
call
gs
mov
addr16
jae
shl
nop
out
cdq
daa
jg
or
lods
call
pop
(bad)
adc
xchg
or
popf
push
jmp
mov
xchg
mov
inc
call
gs
mov
mov
cmp
sbb
test
je
xchg
mov
lea
dec
sbb
je
xchg
mov
cwde
or
pop
movs
call
push
lock
mov
xchg
dec
cmp
pop
dec
sti
addr16
add
outs
dec
rep
inc
mov
fwait
mov
bound
dec
sti
call
bound
(bad)
call
arpl
dec
add
xchg
mov
call
sti
lds
add
in
dec
xrelease
call
bound
pop
sti
call
bound
dec
cli
fwait
adc
les
scas
in
dec
and
sti
pushf
xor
popf
push
icebp
inc
retf
sbb
or
scas
in
dec
jmp
mov
les
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
in
sbb
jge
(bad)
mov
test
das
jge
(bad)
stos
out
inc
scas
out
hlt
mov
dec
jne
inc
fdivr
movs
sub
iret
dec
fs
fld
mov
pushf
push
adc
jae
mul
mov
push
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
jmp
(bad)
sbb
inc
mov
pop
pushf
cdq
cs
(bad)
stos
in
jbe
sbb
outs
(bad)
clc
inc
retf
stc
mov
gs
xor
fadd
nop
in
cdq
es
xor
or
sqrtps
mov
addr16
out
xchg
sub
shl
rsm
sub
call
jbe
aad
or
ds
sbb
xchg
shl
mov
mov
ja
aad
or
out
or
aad
or
ins
movs
push
mov
(bad)
push
stc
jp
in
sbb
bound
dec
pop
cwde
adc
aad
mov
pop
sti
call
bound
dec
inc
call
fsubr
dec
sti
cdq
adc
add
in
dec
repz
call
bound
out
call
bound
dec
sti
fwait
adc
les
in
dec
add
test
movs
adc
test
rep
dec
repnz
jb
in
dec
loopne
dec
sti
lea
les
in
dec
repz
dec
sti
call
bound
jb
gs
test
push
fadd
movs
adc
test
push
out
xchg
out
leave
movs
or
cli
inc
in
push
jmp
cmp
dec
rep
inc
sti
call
bound
dec
in
call
jge
dec
data16
or
mov
addr16
ds
pop
call
loopne
jb
fs
pop
lock
jno
adc
retf
mov
xor
mov
jge
dec
shl
mov
je
xchg
mov
cmp
enter
dec
retf
int
add
seto
cmp
in
xchg
or
pushf
push
adc
push
xchg
repnz
mov
dec
mov
pop
idiv
mov
ds
bound
dec
repz
dec
sti
call
bound
(bad)
sti
call
bound
dec
mov
xchg
mov
fild
dec
sti
popf
adc
les
in
dec
rep
dec
sti
call
dec
mov
push
loopne
popa
pop
xchg
push
mov
xchg
mov
bound
dec
jmp
les
in
dec
jmp
adc
les
out
not
gs
test
fadd
nop
call
mov
popa
es
dec
mov
jne
repz
not
gs
cmps
in
dec
repz
dec
sti
call
bound
push
test
cmp
push
fcomp
movs
or
sti
inc
out
jg
ret
xchg
jmp
test
jno
nop
call
test
pop
(bad)
mov
cwde
cld
cmp
mov
jg
clc
call
bound
dec
repz
mov
bound
or
call
arpl
dec
fwait
fwait
adc
(bad)
cli
scas
in
dec
jmp
sti
(bad)
adc
add
les
in
dec
repz
sti
call
bound
dec
cli
call
arpl
dec
out
call
fwait
scas
in
dec
in
dec
sti
adc
les
in
dec
repz
popf
pop
cwde
mov
mov
pusha
jb
gs
scas
in
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
aam
dec
sti
mov
mov
bound
dec
sti
call
popf
push
repnz
fcomp
movs
adc
pop
push
call
ds
push
mov
ss
jecxz
popf
loopne
shl
and
movs
call
mov
mov
xchg
push
movs
adc
push
adc
fs
sti
call
bound
pop
sti
call
bound
dec
fstp
mov
mov
jnp
or
xchg
cmps
in
js
sbb
sbb
jecxz
cdq
and
mov
push
out
xchg
sub
fld
push
push
cli
inc
movs
in
ds
pop
lahf
cdq
and
or
lea
inc
or
bound
push
lock
or
popf
push
jmp
mov
xchg
mov
bound
mov
or
jge
loope
into
xchg
mov
mov
dec
sbb
mov
inc
retf
inc
mov
gs
fld
repnz
call
gs
(bad)
adc
ins
bound
call
jns
aad
or
push
movs
adc
push
adc
jp
call
bound
dec
repz
mov
bound
inc
cli
call
bound
dec
cld
fwait
adc
les
scas
in
dec
movs
ins
dec
sti
add
mov
bound
dec
sti
call
bound
pop
sti
call
bound
dec
outs
call
pop
scas
in
dec
sbb
rcl
add
mov
repz
in
sbb
pop
aam
mov
imul
call
push
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
data16
call
bound
jo
gs
pop
repz
shl
test
dec
dec
repnz
fmul
or
jp
and
rcl
sub
bound
push
jmp
fld
repnz
call
gs
cmps
in
dec
repz
sti
call
bound
push
sti
call
bound
jb
fs
test
push
fcomp
bsr
dec
dec
icebp
adc
and
push
movs
adc
adc
push
div
lods
iret
dec
inc
sti
addr16
or
mov
push
loop
or
or
adc
dec
xchg
mov
push
in
dec
in
jnp
ret
int
inc
dec
out
loop
jb
fs
mov
push
loop
jb
fs
mov
push
loop
jb
fs
(bad)
lods
dec
rep
bound
call
imul
mov
push
ins
dec
jmp
cmp
dec
sti
add
les
in
dec
repz
dec
sti
call
bound
movs
sti
call
arpl
dec
sti
call
jo
in
dec
jnp
dec
sti
je
mov
bound
dec
sti
call
bound
dec
cli
call
bound
dec
xchg
fwait
adc
les
inc
retf
adc
cmp
dec
cmp
ins
dec
repz
jb
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
js
call
ins
mov
mov
mov
dec
pop
mov
mov
test
nop
out
cdq
daa
jge
(bad)
xchg
in
arpl
test
nop
xlat
sbb
aaa
test
nop
enter
bound
push
jmp
imul
call
gs
test
dec
repz
sti
call
bound
push
sti
call
bound
repz
popa
lods
ror
repnz
fadd
mov
jle
ror
sti
adc
rol
mov
mov
mov
jae
shr
mov
jns
out
mov
lods
in
ds
pop
popf
cdq
sbb
(bad)
xchg
and
dec
sti
pushf
xor
jo
aad
or
je
and
test
rep
dec
jecxz
sub
(bad)
sbb
jae
mul
test
push
clc
jae
mul
movs
out
nop
mov
push
call
jmp
xchg
cmc
mov
xchg
dec
(bad)
push
mov
bound
dec
rol
mov
mov
ins
dec
call
xchg
mov
inc
scas
in
pop
retf
loopne
sti
call
arpl
dec
sti
cld
adc
add
in
dec
repz
sti
call
bound
ret
adc
cmp
repnz
dec
call
xchg
mov
ins
scas
in
dec
jg
dec
sti
cld
adc
add
mov
bound
dec
repz
dec
sti
call
bound
and
call
arpl
dec
lock
adc
les
dec
push
hlt
xchg
sub
fstp
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
out
adc
les
in
dec
fld
mov
mov
bound
inc
mul
stos
out
xchg
mov
add
shl
nop
in
mov
push
inc
in
ds
mov
call
nop
into
mov
dec
repz
out
push
mov
jge
cmp
push
test
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
jb
fs
movs
(bad)
mov
mov
push
pop
sbb
in
jo
and
ds
test
mov
jae
shr
mov
lods
into
dec
inc
icebp
sbb
sar
nop
loop
mov
sub
call
add
mov
push
loope
sub
fild
loope
mov
push
ficomp
mov
in
dec
sti
ins
dec
sti
test
mov
mov
hlt
addr16
sub
ror
cli
inc
call
or
imul
gs
push
adc
call
dec
push
dec
cmc
inc
push
icebp
sbb
cmp
pop
dec
sti
int3
push
mov
jae
std
pop
idiv
mov
push
mov
bound
dec
sti
call
bound
icebp
sti
call
arpl
dec
setp
les
in
dec
xchg
ins
dec
sti
fs
les
in
dec
repz
dec
sti
call
bound
pop
cli
call
dec
xor
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
ret
stc
jmp
mov
add
shl
scas
sub
xlat
dec
dec
repz
rol
sub
mov
stc
and
loope
add
popf
push
jmp
cmc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
jb
gs
test
push
fadd
nop
jmp
mov
cmps
add
bound
addr16
jae
shl
nop
out
mov
sub
call
lods
scas
in
dec
sub
sti
ja
mov
bound
sti
add
mov
dec
iret
mov
gs
hlt
cmp
add
sbb
push
adc
push
icebp
sbb
adc
adc
jae
in
cmp
out
jge
dec
imul
or
in
dec
ret
ins
dec
sti
fcom
add
les
in
dec
repz
sti
call
bound
add
call
arpl
dec
or
mov
out
scas
in
dec
adc
sahf
adc
add
dec
repz
dec
sti
call
bound
mov
call
inc
test
inc
in
jg
(bad)
mov
mov
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
int
adc
rcr
mov
je
or
mov
cmps
in
jp
sbb
sbb
mov
jae
ror
mov
mov
out
aas
je
xor
mov
jg
jmp
adc
les
in
dec
repz
sti
call
bound
push
add
call
add
add
jge
(bad)
mov
cmp
pop
sbb
loope
xchg
loopne
int3
movs
or
aad
or
out
sub
iret
dec
inc
cmc
sbb
sbb
call
call
adc
(bad)
popa
mov
push
stos
inc
fs
call
bound
dec
sti
mov
mov
popa
pop
rep
push
cdq
adc
les
dec
pushf
inc
dec
sti
nop
aas
sub
(bad)
jl
ins
dec
stc
call
out
in
dec
sti
sub
call
bound
dec
push
call
daa
scas
in
dec
gs
dec
sti
icebp
adc
add
in
dec
repz
mov
bound
add
call
arpl
dec
out
call
data16
in
dec
mov
adc
les
in
dec
repz
dec
sti
call
bound
dec
fld
dec
cmp
xchg
mov
popf
push
mov
xchg
mov
bound
dec
hlt
call
je
in
dec
jmp
adc
les
in
dec
repz
dec
sti
call
bound
push
icebp
xchg
sub
fmul
repnz
fcomp
cmps
sub
fisttp
sti
addr16
jae
sar
nop
fimul
jecxz
and
imul
cdq
or
dec
push
lock
or
popf
push
sti
inc
in
jle
ret
jo
inc
call
in
inc
rep
dec
lock
jo
in
dec
out
dec
sti
adc
bound
pop
mul
stos
out
xchg
mov
add
or
cdq
sub
in
jge
sbb
mov
(bad)
loope
sub
out
mov
mov
sbb
jno
adc
ins
dec
fisttp
mov
mov
imul
xchg
mov
bound
inc
mul
test
inc
in
jle
ret
fucomip
inc
dec
repnz
call
gs
adc
adc
mov
mov
outs
dec
fisttp
mov
bound
dec
ror
mov
mov
jg
clc
call
bound
dec
repz
mov
bound
dec
sti
call
bound
dec
hlt
fwait
adc
les
scas
in
dec
icebp
ins
dec
sti
lahf
adc
add
mov
bound
sti
call
bound
push
call
arpl
dec
lods
fwait
adc
(bad)
in
in
dec
cld
ins
dec
sti
xchg
adc
add
mov
bound
dec
repz
in
sbb
pop
aam
mov
imul
call
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
fs
call
bound
jb
gs
test
push
loopne
movs
in
ds
pop
sbb
out
stos
in
ds
mov
cwde
in
jge
sub
or
cmc
dec
pop
lock
cmp
dec
cmp
out
call
gs
test
dec
repz
sti
call
bound
push
sti
call
bound
mov
popa
lods
leave
dec
pop
repnz
fadd
mov
jle
into
dec
dec
repnz
fmul
or
adc
test
nop
lock
movs
in
inc
lods
jecxz
mul
dec
jae
sub
ins
dec
fld
mov
mov
outs
sub
mov
mov
push
in
dec
in
js
ret
int
inc
dec
out
call
gs
mov
jno
gs
movs
cli
inc
retf
inc
mov
gs
fwait
je
mov
inc
(bad)
out
dec
repz
cmp
call
jne
aad
or
push
mov
inc
scas
in
pop
retf
adc
call
xchg
scas
in
dec
xchg
ins
dec
sti
push
adc
les
in
dec
repz
sti
call
bound
inc
cli
call
bound
dec
repnz
adc
les
scas
in
dec
rep
dec
sti
fcom
add
in
dec
repz
sti
call
bound
jae
call
bound
dec
std
mov
xor
jno
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
in
dec
fisubr
mov
mov
bound
inc
ret
mov
cdq
xor
(bad)
mov
test
nop
jmp
movs
out
test
popa
sbb
mov
cdq
in
bound
test
nop
int
cdq
push
mov
in
dec
cmc
dec
pop
lock
cmp
inc
retf
sahf
mov
gs
or
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
mov
add
xchg
mov
addr16
pop
shl
mov
jno
(bad)
dec
dec
repnz
fdiv
mov
call
mov
inc
mov
or
pop
push
clc
inc
lods
in
mov
mov
mov
push
out
or
adc
mov
outs
sub
mov
mov
push
in
dec
in
je
ret
ret
jmp
dec
out
call
gs
mov
ja
gs
mov
fs
and
dec
rep
bound
adc
fld
test
mov
gs
mov
xchg
push
(bad)
bound
push
repnz
stos
add
movs
les
sbb
idiv
call
bound
dec
call
mov
xchg
scas
in
dec
push
ins
dec
sti
call
bound
in
dec
repz
sti
call
bound
cmp
call
arpl
dec
xor
mov
mov
pusha
push
test
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
dec
sti
call
jno
aad
or
mov
mov
movs
bsr
jb
add
inc
mov
sbb
repnz
fdiv
movs
or
mov
push
(bad)
jg
ret
mov
inc
call
in
inc
rep
dec
neg
mov
jno
in
dec
in
dec
sti
adc
mov
xchg
push
shr
xrelease
sbb
sar
scas
sub
enter
dec
retf
mov
mov
pop
fadd
nop
in
mov
jge
mov
repnz
dec
sti
xchg
adc
rcr
mov
jno
or
test
mov
gs
or
mov
mov
xchg
pop
shr
mov
test
mov
pusha
push
test
scas
dec
rep
push
cwde
adc
les
pop
idiv
mov
xor
les
in
dec
rep
dec
sti
call
bound
in
call
bound
dec
push
call
(bad)
dec
sti
push
adc
les
in
dec
repz
popf
sub
call
repz
imul
mov
bound
dec
sti
call
addr16
xchg
mov
xchg
pop
shr
repz
push
fadd
lods
sub
out
cmp
repz
rol
mov
bound
dec
sti
call
bound
push
cmc
mov
xor
dec
cmp
(bad)
mov
xchg
ds
pop
pushf
cdq
cs
or
jae
call
imul
add
push
xchg
push
sbb
in
dec
aad
inc
in
push
mov
popf
test
adc
xchg
mov
stos
push
mov
inc
scas
in
pop
retf
adc
call
out
in
dec
stos
ins
dec
sti
fs
les
in
dec
xrelease
call
bound
inc
cli
call
arpl
dec
call
xchg
mov
push
scas
in
dec
add
dec
sti
fs
les
in
dec
repz
dec
sti
call
bound
inc
cli
call
arpl
dec
std
mov
xor
push
xchg
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
dec
fisubr
mov
mov
bound
inc
ret
mov
mov
add
shl
sub
dec
dec
repnz
fmul
mov
dec
movs
out
mov
jae
ror
nop
int
mov
dec
repz
in
push
movs
or
push
adc
jae
mul
mov
push
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
push
mul
test
xchg
mov
add
or
cmps
out
mov
popa
sbb
mov
(bad)
or
loope
sub
iret
dec
inc
mul
jae
sar
jecxz
cdq
and
test
pushf
nop
ins
dec
std
mov
lods
leave
outs
xchg
xor
or
pop
shl
dec
rep
push
out
xchg
sub
fstp
sbb
inc
mul
lods
into
dec
pop
cmc
inc
out
addr16
not
dec
fisttp
hlt
inc
out
addr16
not
dec
(bad)
jge
repnz
inc
dec
sti
pushf
aas
mov
outs
mov
mov
call
bound
jb
call
bound
cmp
call
bound
dec
repz
adc
les
in
dec
jbe
dec
sti
fwait
adc
add
in
dec
repz
mov
bound
psubd
mov
arpl
dec
push
call
pop
scas
in
dec
imul
sti
call
bound
dec
repz
popf
pop
popf
mov
inc
retf
pop
mov
gs
or
scas
in
dec
jmp
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
in
sbb
jge
(bad)
mov
mov
push
pop
test
push
inc
in
mov
movs
or
test
jmp
push
mov
daa
pushf
xchg
ins
dec
std
mov
mov
pushf
push
adc
jne
ret
imul
call
in
inc
rep
dec
lock
jno
in
dec
in
dec
sti
adc
dec
repz
mul
stos
out
xchg
mov
add
shl
scas
sub
aad
dec
repnz
fmul
mov
jnp
aad
or
loopne
sub
lea
mov
or
xor
add
pop
ficom
mov
bound
sti
or
pop
shl
dec
rep
push
icebp
xchg
sub
fimul
repnz
clc
jne
ret
(bad)
jmp
dec
icebp
inc
jmp
sbb
inc
shr
out
call
gs
scas
in
ins
jnp
dec
sti
mov
mov
push
push
pop
add
cmps
mov
int
in
dec
(bad)
ins
dec
jmp
xor
dec
sti
mov
mov
bound
in
dec
repz
sti
call
bound
pop
cli
call
bound
dec
aas
call
test
ins
dec
sti
pop
adc
les
in
dec
repz
sti
call
bound
pop
test
in
dec
repz
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
out
jg
ret
shr
dec
(bad)
mov
mov
cmps
sub
out
test
stos
in
ds
sbb
stc
jb
in
push
mov
popf
test
dec
repz
ins
scas
in
dec
loopne
dec
sti
lea
les
dec
push
nop
test
addr16
or
dec
dec
repnz
push
call
imul
cli
inc
movs
in
ds
sbb
sti
adc
call
les
in
dec
repz
call
imul
push
call
imul
in
dec
ret
add
inc
dec
jmp
add
ds
push
pushf
lods
enter
dec
retf
adc
xchg
mov
inc
cmp
dec
repz
cmps
sti
call
jae
test
rep
dec
pop
call
retf
dec
fs
dec
sti
aas
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
dec
call
mov
in
dec
cmc
dec
pusha
out
or
imul
dec
rep
inc
sti
call
bound
dec
jecxz
adc
les
in
dec
shr
test
test
scas
lds
popf
push
repnz
fcomp
mov
js
retf
dec
inc
lock
inc
sar
mov
dec
lods
leave
dec
je
sub
ins
dec
fnsave
mov
bound
inc
sti
call
bound
dec
loop
adc
je
sbb
lahf
push
shr
stos
sub
out
mov
dec
ret
mov
inc
dec
push
fadd
nop
out
xlat
les
retf
pop
(bad)
jae
call
imul
or
pop
retf
sahf
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
mov
arpl
dec
std
fwait
adc
les
in
dec
add
ins
adc
les
in
dec
repz
dec
sti
call
bound
push
cli
call
bound
dec
outs
call
out
in
dec
mov
dec
sti
xchg
adc
add
in
dec
rep
dec
sti
call
bound
dec
fld
lods
aad
xchg
xchg
mov
xchg
dec
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
(bad)
call
push
scas
in
dec
in
jg
ret
mov
mov
mov
xchg
push
sbb
or
inc
stos
in
ds
xchg
cdq
in
addr16
sub
adc
scas
in
dec
aad
inc
in
sbb
js
repnz
call
gs
cmps
in
dec
repz
sti
call
bound
push
sti
call
bound
jb
fs
test
push
fcomp
or
sti
adc
and
push
movs
sbb
adc
cwde
push
shr
nop
out
mov
push
fmul
nop
fild
les
retf
push
stc
jnp
in
sbb
stos
mov
xor
mov
jge
loope
scas
xchg
mov
test
nop
test
je
xchg
mov
test
nop
repz
add
add
imul
mov
bound
bound
adc
shr
hlt
inc
retf
jl
add
adc
shl
dec
repz
dec
sti
mov
int3
daa
mov
dec
rep
dec
sti
call
bound
mov
call
arpl
dec
cli
fwait
adc
les
in
dec
sbb
adc
les
in
dec
repz
dec
sti
call
bound
xor
call
arpl
dec
lods
fwait
adc
(bad)
shr
sti
nop
adc
add
les
retf
push
call
gs
push
adc
popa
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fisubr
stos
adc
les
std
inc
retf
pop
mov
add
xchg
mov
addr16
push
shl
nop
call
mov
lods
in
js
test
nop
(bad)
loopne
and
rcl
mov
bound
push
jmp
imul
retf
test
xchg
mov
push
in
dec
jmp
mov
les
in
dec
repz
sti
call
bound
lock
mov
pop
push
fadd
mov
jle
fimul
repnz
fmul
or
adc
cmp
push
mov
sti
sbb
push
test
nop
loope
cdq
sbb
dec
push
icebp
sbb
adc
adc
or
mov
bound
jb
fs
movs
repnz
call
gs
movs
repnz
call
gs
movs
repnz
call
gs
scas
int
repnz
dec
sar
adc
push
mov
loope
sti
xchg
mov
sbb
adc
adc
dec
sti
movs
pop
mov
jae
jge
rep
inc
mov
xor
rep
dec
sti
call
bound
inc
cli
call
arpl
dec
icebp
fwait
adc
les
scas
in
dec
lahf
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
ins
cli
call
arpl
dec
cmps
fwait
adc
les
in
dec
out
dec
sti
call
add
test
ins
in
sbb
js
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
out
adc
les
in
dec
aam
dec
sti
mov
mov
bound
sti
call
pop
(bad)
adc
ins
or
lea
popa
adc
push
(bad)
xor
inc
nop
in
ds
pop
sbb
in
je
xor
mov
dec
repz
out
add
popf
mov
inc
in
jb
fs
scas
jmp
adc
aad
scas
in
pop
rep
dec
loop
adc
les
in
dec
xlat
ins
dec
sti
sbb
sahf
push
sbb
cwde
push
loopne
in
sbb
pop
fstp
push
fmul
movs
pop
mov
xor
clc
jp
ret
out
jmp
dec
(bad)
mov
mov
lods
sub
out
xchg
popa
and
(bad)
mov
fs
inc
in
popa
inc
in
xchg
sub
shl
and
adc
enter
push
jmp
pop
mov
mov
mov
lods
retf
hlt
add
in
push
lods
or
mov
popf
push
hlt
add
adc
pop
movs
or
pop
adc
cdq
adc
les
leave
dec
repz
stc
mov
xchg
push
bound
dec
std
mov
mov
fwait
mov
mov
xchg
dec
call
xchg
mov
inc
scas
in
pop
fcom
inc
mov
add
les
in
dec
rep
dec
sti
call
bound
inc
sti
call
arpl
dec
neg
mov
imul
dec
sti
fs
les
in
dec
repz
dec
sti
call
bound
mov
add
in
inc
repnz
dec
or
mov
mov
in
dec
cmc
dec
push
div
iret
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
call
jge
loope
enter
test
dec
pop
sbb
in
jle
adc
cdq
and
push
in
xchg
in
iret
movs
bsr
test
push
stc
inc
test
mov
jno
push
inc
in
jb
fs
pop
adc
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
outs
xchg
sub
mov
movs
or
add
xchg
mov
mov
dec
dec
repnz
fdiv
mov
or
mov
mov
mov
movs
or
repz
jae
sar
mov
dec
bound
call
sbb
ins
stos
call
mov
sahf
mov
bound
mov
or
mov
mov
cmp
sbb
jno
xchg
mov
mov
mov
outs
xchg
ret
xchg
dec
clc
sahf
xor
in
scas
in
dec
fcmovnu
dec
sti
pushf
aas
mov
outs
xchg
cld
mov
xchg
dec
sti
call
bound
jb
call
bound
add
call
arpl
dec
add
mov
out
in
dec
push
ins
dec
sti
nop
adc
add
mov
bound
dec
sti
call
bound
inc
cli
call
arpl
dec
push
call
cli
scas
in
dec
lock
dec
sti
stc
adc
add
in
dec
repz
(bad)
xchg
mov
jge
loope
(bad)
xchg
mov
test
mov
loop
cmp
ins
dec
repz
jb
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
jp
call
push
xchg
mov
xchg
ds
pop
sbb
in
jbe
adc
cdq
daa
jge
(bad)
xchg
out
inc
xchg
in
int3
movs
push
mov
repnz
fsub
imul
ret
out
loopne
jb
fs
mov
mov
fistp
les
out
rep
inc
sti
call
bound
dec
in
adc
les
loope
dec
xchg
mov
cmp
aaa
je
sbb
in
ds
pop
lahf
cdq
and
or
out
xchg
in
push
movs
adc
adc
inc
mov
sub
out
mov
popa
sbb
cdq
sbb
dec
push
hlt
xchg
sub
fldcw
out
in
jg
ret
shr
call
mov
repnz
dec
sti
popf
adc
cld
daa
push
adc
xchg
or
popf
push
repnz
fcomp
mov
test
mov
inc
mov
or
adc
cdq
adc
les
enter
pusha
out
or
pop
push
adc
call
bound
dec
repz
mov
bound
adc
add
in
adc
ins
dec
stc
fwait
adc
les
scas
in
dec
or
dec
sti
out
mov
(bad)
fucomp
dec
repz
call
bound
mov
add
in
sbb
ins
dec
jmp
adc
les
in
dec
push
ins
dec
sti
xchg
adc
add
mov
bound
in
dec
pause
dec
sti
call
je
aad
or
mov
sbb
cmp
loopne
rep
inc
sti
call
bound
dec
jecxz
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
outs
xchg
ret
xchg
push
div
inc
fld
add
inc
mov
pop
sbb
call
ds
pop
mov
cmp
rcl
rol
xchg
mov
jle
repnz
call
gs
dec
adc
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
outs
xchg
pop
mov
xchg
push
jmp
fstp
add
xchg
jb
mov
jb
fisttp
lock
in
sbb
jl
sbb
popf
pop
shl
jmp
cdq
sub
movs
(bad)
test
addr16
sbb
les
inc
jmp
sbb
mov
or
dec
clc
sti
or
pop
shl
dec
rep
push
mul
lods
leave
dec
pop
test
inc
ret
mov
cdq
xor
test
jmp
dec
cli
inc
retf
jb
add
cmpxchg
cmp
in
cmp
out
js
test
call
ret
out
dec
repz
dec
sti
mov
add
mov
jne
in
dec
in
ins
dec
sti
pop
adc
les
in
dec
repz
sar
bound
cmps
sti
call
bound
dec
retf
mov
gs
in
dec
inc
ins
dec
sti
push
adc
les
in
dec
rep
dec
sti
call
bound
pop
test
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
ret
shr
dec
(bad)
mov
test
out
test
pop
rol
sub
mov
loopne
and
rcl
mov
call
or
dec
mov
lahf
mov
bound
dec
sti
call
bound
push
hlt
mov
cmp
dec
cmp
sbb
lahf
push
shr
nop
in
mov
addr16
jne
loope
adc
jne
sbb
popf
push
shl
jmp
cdq
sub
test
inc
mul
call
les
in
dec
repz
call
imul
push
jmp
test
xchg
mov
dec
ret
add
inc
dec
aad
or
cld
mov
jno
aad
or
adc
bound
bound
mov
or
ins
dec
sti
push
adc
les
in
dec
repz
call
bound
clc
sti
call
bound
dec
cld
call
retf
scas
in
dec
hlt
ins
dec
sti
xor
mov
(bad)
hlt
in
dec
repz
popf
sub
out
cli
sub
call
bound
dec
out
call
jg
in
dec
shr
mov
mov
mov
xchg
push
icebp
mov
movs
or
add
inc
mov
pop
xchg
push
fdiv
mov
pop
out
mov
inc
push
lock
push
mov
bound
dec
hlt
call
je
in
dec
in
jg
ret
mov
mov
mov
cmp
sbb
dec
fs
gs
nop
hlt
mov
pop
fadd
xlat
add
cli
pop
not
gs
scas
in
dec
loopne
dec
sti
sub
mov
jae
jecxz
idiv
mov
gs
bound
sti
call
bound
movs
sti
call
arpl
dec
inc
call
mov
ins
dec
sti
call
bound
dec
repz
sti
call
bound
push
test
in
dec
repz
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
jge
dec
or
sub
out
nop
mov
popa
adc
mov
addr16
inc
rol
nop
fmul
out
push
call
imul
repz
sti
call
bound
pop
sti
call
outs
mov
mov
cmp
pop
mov
add
inc
mov
sbb
mov
pop
not
gs
mov
mov
sub
mov
ins
dec
sti
call
xchg
sub
ins
or
rcr
mov
jae
shr
mov
call
or
in
or
je
xchg
mov
cwde
xor
in
scas
in
dec
fcmovnbe
dec
sti
pushf
aas
movs
push
test
dec
rep
es
call
bound
dec
cmps
call
ins
scas
in
dec
pop
ins
dec
sti
and
les
in
dec
repz
call
bound
hlt
sti
call
bound
dec
sub
adc
fldcw
dec
repz
mov
lahf
mov
bound
dec
sti
call
bound
push
call
jo
call
add
sbb
xchg
mov
addr16
jae
shl
nop
out
mov
addr16
(bad)
xchg
mov
jge
dec
cs
gs
mov
addr16
(bad)
lahf
adc
les
in
dec
repz
sti
call
bound
pop
add
jmp
test
fadd
mov
jle
call
add
ds
sbb
mul
jbe
adc
mov
outs
mov
dec
retf
mov
add
aas
or
cmp
in
pop
ret
push
mov
pop
pop
in
dec
repz
call
jg
in
dec
push
ins
dec
sti
adc
mov
bound
dec
sti
call
bound
idiv
call
arpl
dec
mov
adc
les
in
dec
inc
ins
dec
sti
gs
add
mov
bound
in
dec
rep
dec
sti
call
bound
jg
call
arpl
dec
sti
call
and
dec
sti
mov
mov
bound
dec
sti
call
jge
loope
stos
xchg
mov
test
mov
(bad)
dec
cmp
ins
dec
repz
jb
in
dec
out
dec
sti
lea
les
in
dec
repz
dec
sti
call
bound
jnp
call
bound
dec
mov
xchg
mov
jge
loope
or
sbb
nop
mov
addr16
ds
pop
pushf
cdq
and
(bad)
lods
in
xchg
in
bound
call
in
jle
cmp
pop
sbb
in
bound
test
les
retf
pop
clc
jno
ret
xor
mov
jmp
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
dec
fldcw
lea
xor
cmp
(bad)
mov
test
out
mov
addr16
or
mov
jae
ror
mov
mov
mov
popa
popa
jno
cdq
sub
push
inc
in
mul
dec
jae
inc
fdiv
outs
xchg
mov
inc
mov
push
jmp
jb
fs
xchg
in
mov
xchg
dec
(bad)
sti
or
pop
shl
dec
rep
inc
sti
call
outs
xchg
push
mov
xchg
push
shr
lahf
sub
xlat
dec
inc
lock
out
pusha
jb
addr16
pop
repnz
fadd
cmp
push
call
gs
mov
test
xchg
or
popf
lods
out
ins
pop
ins
dec
sti
mov
call
outs
push
call
bound
pusha
stc
cdq
xor
in
lods
in
dec
(bad)
pushf
aas
cmps
or
aad
push
xchg
mov
call
bound
push
cmc
mov
stos
add
movs
les
out
rep
lock
call
bound
dec
cwde
call
fild
dec
sti
addr16
les
in
dec
repz
sti
call
bound
std
sti
call
bound
dec
mov
mov
jnp
repnz
loopne
popa
bound
mov
bound
dec
hlt
call
ja
in
dec
jmp
add
in
dec
repz
dec
sti
call
popf
push
repnz
fcomp
nop
out
lea
movs
in
pusha
popa
pop
test
nop
loopne
mov
sub
ror
mov
call
or
mov
fist
mov
bound
inc
sti
call
bound
dec
loope
adc
jge
(bad)
mov
mov
movs
bsr
jae
or
inc
test
adc
adc
pop
shr
nop
in
mov
pop
fmul
movs
pop
shl
dec
rep
push
out
mov
add
dec
cmp
sbb
jae
call
imul
in
gs
jmp
test
jge
dec
cmc
mov
gs
call
mov
pop
not
gs
xchg
dec
repz
in
push
mov
bound
dec
dec
call
into
scas
in
dec
call
add
in
dec
repz
call
bound
(bad)
sti
call
bound
dec
sti
call
mov
in
dec
cmc
dec
pusha
loope
or
daa
cmps
in
dec
repz
sti
call
bound
pop
sti
call
bound
dec
in
push
mov
popf
mov
mov
mov
movs
bsr
imul
mov
movs
or
in
dec
aad
inc
call
imul
imul
xchg
adc
les
in
dec
repz
sti
call
jno
aad
or
mov
xchg
ds
sbb
cli
addr16
jae
shl
mov
test
mov
inc
mov
sub
out
mov
dec
sti
pushf
xor
pop
inc
adc
addr16
lods
in
dec
xlat
ins
dec
jmp
cmp
dec
sti
mov
add
in
dec
repz
dec
sti
call
bound
pop
cli
call
bound
dec
sahf
fwait
adc
les
in
dec
imul
adc
add
mov
(bad)
fs
sti
call
bound
das
cli
call
bound
dec
mov
mov
fs
inc
retf
adc
or
(bad)
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
mov
jge
loope
rcl
test
mov
mov
movs
sbb
or
clc
inc
xchg
in
bound
xchg
popf
in
addr16
test
nop
leave
inc
ret
test
inc
mul
scas
iret
jge
loope
sbb
mov
xchg
mov
bound
dec
hlt
call
jne
in
dec
call
adc
les
out
retf
(bad)
mov
or
xchg
mov
addr16
inc
shl
scas
sub
xlat
dec
dec
repnz
fdiv
mov
fwait
mov
mov
inc
mov
or
pop
fimul
icebp
addr16
inc
sar
mov
dec
lods
enter
cmp
ins
dec
fld
mov
mov
push
loop
xchg
mov
bound
pop
mul
lods
(bad)
dec
pop
repnz
clc
jae
mul
movs
out
xchg
mov
push
call
gs
xchg
mov
jnp
adc
mov
mov
outs
push
call
bound
pusha
loope
or
cld
sahf
push
adc
stos
push
mov
inc
scas
in
pop
retf
in
sti
call
cdq
scas
in
dec
or
sbb
mov
(bad)
jge
sti
call
bound
xor
call
arpl
dec
add
mov
pop
scas
in
dec
in
dec
sti
xchg
adc
add
mov
bound
dec
sti
call
bound
dec
cli
call
bound
dec
scas
fwait
adc
les
pop
call
gs
push
adc
popa
dec
sti
call
bound
pop
sti
call
bound
dec
fstp
mov
dec
scas
in
dec
(bad)
stos
adc
les
clc
inc
retf
inc
mov
or
xchg
mov
addr16
inc
shl
mov
dec
dec
mul
jae
rol
scas
sub
ror
icebp
and
rcl
nop
retf
les
retf
push
clc
jae
mul
stos
iret
jge
loope
pop
xchg
mov
pushf
push
mov
xchg
mov
bound
dec
hlt
call
je
in
dec
jmp
adc
les
sti
inc
retf
fidiv
pusha
movs
out
xchg
mov
mov
test
nop
call
mov
adc
rol
mov
xchg
mov
inc
mov
sbb
pop
fisttp
icebp
addr16
popa
pop
cmp
sbb
ins
adc
scas
in
dec
aad
inc
in
or
popf
push
jmp
mov
xchg
mov
inc
call
gs
mov
mov
mov
dec
sbb
mov
xchg
push
lock
cmp
push
lock
cmp
ins
dec
fist
adc
lds
(bad)
push
stc
jo
ret
gs
(bad)
aad
push
xchg
mov
stos
push
mov
inc
scas
in
pop
retf
call
(bad)
sbb
mov
pusha
scas
in
dec
outs
ins
dec
sti
loopne
mov
bound
dec
repz
push
mov
bound
and
call
arpl
dec
repz
adc
(bad)
out
in
dec
imul
sti
adc
les
in
dec
repz
dec
sti
call
bound
mov
call
bound
dec
sub
adc
xlat
outs
xchg
xchg
mov
xchg
push
loope
sub
ret
daa
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
dec
scas
in
dec
shr
adc
enter
mov
jae
shr
sub
dec
inc
cmc
sbb
sar
mov
dec
jo
push
fdiv
mov
dec
jg
inc
fsub
imul
ret
out
in
jb
fs
xchg
or
xchg
adc
les
in
dec
repz
call
bound
push
sti
call
ins
mov
mov
mov
movs
sbb
sti
addr16
jae
shl
mov
jae
out
xor
in
sbb
jnp
sbb
inc
mov
sub
test
popa
sbb
les
inc
in
gs
in
sbb
data16
mov
xor
mov
jge
loope
mov
ds
sbb
xchg
lods
mov
xchg
push
shr
mov
lahf
mov
jge
xchg
mov
mov
mov
jge
loope
rcl
pop
add
in
dec
fisttp
sti
pushf
aas
mov
pop
test
inc
lock
mov
ins
dec
cmp
push
add
adc
aad
shr
dec
repz
call
bound
dec
sti
xlat
adc
add
in
dec
repz
call
bound
jmp
call
bound
dec
jmp
xchg
mov
xchg
scas
in
dec
jne
dec
sti
ret
adc
add
mov
bound
dec
sti
call
bound
dec
cli
call
adc
inc
div
mov
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fstp
mov
dec
scas
in
dec
(bad)
test
mov
bound
mov
or
dec
pop
repnz
fadd
mov
xchg
inc
rol
stos
sub
ror
repnz
fdivr
sub
mov
scas
jmp
out
addr16
not
dec
fld
repnz
call
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
jb
fs
test
push
inc
in
mov
movs
sbb
or
inc
stos
in
ds
xchg
jp
or
push
shr
nop
icebp
mov
cmps
jmp
ds
sbb
test
pushf
sub
push
mov
popf
lods
leave
outs
xchg
xchg
xchg
adc
sbb
test
rep
dec
in
sbb
jl
sbb
addr16
not
dec
fmul
cmc
inc
in
push
not
dec
(bad)
test
push
not
dec
(bad)
popa
stos
call
sti
mov
call
pop
lock
mov
nop
dec
cmp
ins
inc
stc
call
jmp
sti
call
arpl
dec
clc
fwait
adc
les
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
inc
cli
call
bound
dec
sti
call
ins
scas
in
dec
xchg
ins
dec
sti
pushf
adc
add
les
in
dec
repz
call
bound
call
cmps
enter
mov
jae
mul
mov
outs
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
iret
call
dec
push
adc
mov
mov
dec
inc
repnz
fadd
movs
or
xor
inc
xchg
in
outs
pop
mov
pop
fsub
mov
outs
xchg
sbb
lock
and
dec
cmp
dec
rep
dec
sti
call
bound
dec
in
call
jl
in
dec
shr
sbb
cmp
(bad)
mov
test
nop
out
mov
stos
in
jp
sbb
cdq
sbb
out
call
gs
test
icebp
mov
movs
sub
enter
inc
fdiv
imul
inc
mov
inc
retf
or
popf
scas
enter
mov
push
loop
xchg
mov
bound
push
mul
lods
aad
pop
sti
inc
out
pusha
jb
fs
mov
je
xchg
mov
xchg
cmps
or
nop
cmp
je
out
or
popf
lods
int
repnz
dec
fstp
cdq
lds
(bad)
push
stc
jo
out
sub
les
(bad)
jl
ins
aad
call
jo
jmp
sti
call
arpl
dec
adc
xchg
mov
fwait
scas
in
dec
(bad)
dec
sti
adc
inc
mov
(bad)
xlat
in
dec
repz
call
bound
push
cli
call
bound
dec
sti
call
dec
scas
in
dec
cmp
sbb
cmps
test
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
bound
push
jmp
adc
jge
(bad)
mov
test
cs
or
inc
test
sbb
outs
fld
xor
in
mov
mov
ins
mov
mov
pushf
push
mov
bound
dec
jmp
adc
les
in
dec
out
ins
dec
sti
test
test
scas
mov
popf
push
repnz
fcomp
stos
sub
xlat
dec
inc
repnz
fmul
mov
cdq
mov
mov
jae
shr
nop
out
(bad)
cdq
sub
(bad)
movs
jmp
add
lods
mov
jmp
call
pushf
push
adc
call
scas
sbb
popf
push
cli
add
loopne
or
push
adc
popf
push
icebp
sbb
cld
jmp
arpl
mov
bound
pusha
loope
adc
bound
jmp
call
bound
dec
movs
call
(bad)
scas
in
dec
std
ins
dec
sti
add
mov
bound
in
dec
repz
dec
sti
call
bound
loopne
call
inc
test
inc
in
jg
sar
mov
push
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
xor
lods
retf
sti
addr16
inc
shl
nop
call
test
push
inc
sub
adc
fisubr
test
rep
dec
repz
jb
in
dec
loopne
dec
sti
lea
rcr
mov
jae
shr
mov
scas
out
mov
popa
sbb
sbb
popf
push
adc
cwde
push
shr
nop
out
mov
pushf
xchg
mov
mov
call
push
gs
scas
in
dec
xlat
ins
dec
jmp
les
in
dec
repz
call
bound
ds
call
bound
dec
jmp
adc
(bad)
icebp
scas
in
dec
mov
dec
sti
jno
mov
bound
dec
sti
call
bound
add
call
arpl
dec
sti
fwait
adc
les
in
dec
and
dec
sti
pushf
xor
imul
mov
bound
inc
sti
call
bound
dec
out
adc
les
in
dec
aam
dec
sti
mov
mov
bound
ret
mov
cdq
xor
(bad)
mov
cmp
sub
test
push
out
stos
in
ds
fld
push
cli
inc
cwde
in
ds
sbb
cmc
dec
push
lock
mov
ins
dec
cmp
arpl
push
inc
call
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
mul
lods
fisttp
repnz
fcomp
movs
sbb
or
inc
test
mov
sbb
repnz
call
gs
pop
cmc
addr16
je
adc
cdq
daa
jnp
or
lea
mov
inc
retf
add
(bad)
jmp
arpl
dec
sti
mov
adc
cmp
(bad)
mov
xchg
sub
fimul
cmc
inc
call
sub
fisttp
test
sub
mov
dec
repz
leave
cli
call
dec
mov
push
clc
jae
mul
mov
dec
rep
outs
sti
call
jmp
pop
cli
call
bound
dec
neg
mov
mov
in
dec
xor
jecxz
mov
bound
dec
repz
dec
sti
call
bound
mov
call
bound
dec
repz
bound
push
call
sahf
test
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
adc
dec
repz
dec
sti
call
bound
jb
gs
test
push
inc
in
ds
push
mov
push
push
clc
inc
xchg
in
ds
sbb
cmp
inc
call
mov
mov
push
std
call
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
call
imul
add
or
cdq
sub
in
gs
in
push
mov
popf
mov
mov
xchg
push
sbb
dec
icebp
adc
cmc
pushf
je
push
iret
test
rep
dec
in
push
mov
popf
mov
addr16
jae
test
repz
loope
or
pushf
push
adc
popf
pop
icebp
sbb
adc
adc
xchg
adc
bound
dec
rcr
mov
jno
cld
dec
mov
dec
sti
call
bound
dec
sti
call
bound
dec
inc
call
bound
dec
sti
xor
mov
bound
dec
sti
call
bound
dec
fnsave
mov
lds
dec
repz
ins
scas
in
dec
loope
dec
sti
mov
les
in
dec
repz
sti
call
popf
push
repnz
fcomp
nop
out
mov
movs
in
scas
in
mov
movs
or
in
dec
aad
pop
lock
push
mov
bound
dec
jmp
adc
les
in
dec
in
pusha
pop
(bad)
mov
test
xchg
mov
add
adc
pop
nop
jmp
mov
push
loopne
jb
gs
pop
lock
ds
shl
mov
fs
inc
call
jmp
(bad)
mov
adc
dec
sti
outs
adc
add
xchg
inc
mov
dec
sti
call
bound
jae
call
arpl
dec
icebp
call
add
dec
sti
gs
les
in
dec
repz
sti
call
bound
mov
add
in
dec
rep
dec
or
mov
push
ins
dec
sti
arpl
les
retf
push
inc
in
sbb
gs
call
bound
dec
jecxz
adc
les
in
dec
shr
mov
mov
bound
dec
sti
call
outs
xchg
xlat
mov
xchg
push
in
mov
movs
bsr
jnp
add
inc
mov
sbb
repnz
fdiv
movs
or
test
loope
fsubr
xchg
mov
inc
mov
push
stc
pusha
jb
fs
xchg
add
xchg
adc
les
in
dec
repz
call
bound
push
sti
call
outs
xchg
das
mov
xchg
push
in
mov
mov
dec
inc
icebp
addr16
jae
shl
nop
in
cdq
es
(bad)
xchg
jmp
sub
fimul
repnz
fcomp
jmp
scas
in
addr16
and
ds
mov
fs
inc
jmp
(bad)
imul
stos
sub
call
outs
xchg
mov
or
push
jmp
jecxz
or
adc
imul
mov
xchg
pop
shr
mov
popf
lods
into
outs
xchg
shl
mov
and
in
fs
dec
std
mov
mov
popf
lods
into
outs
xchg
jecxz
or
pop
retf
sahf
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
cmps
add
in
retf
rep
dec
add
mov
adc
ins
dec
sti
adc
mov
dec
repz
sti
call
bound
ret
cli
call
arpl
dec
neg
mov
push
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
dec
cli
call
inc
mov
inc
retf
adc
add
or
push
jmp
adc
les
in
dec
repz
sti
call
bound
imul
adc
in
bound
dec
retf
mov
jne
aad
or
mov
xchg
ds
pop
fwait
cdq
ss
(bad)
mov
xchg
ds
sbb
or
in
arpl
mov
pushf
jmp
fild
xchg
mov
inc
mov
push
cli
pusha
jb
fs
xchg
or
xchg
adc
les
in
dec
repz
call
bound
push
sti
call
imul
mov
xchg
mov
addr16
jae
shl
mov
jae
xlat
dec
dec
repnz
fdiv
mov
push
dec
cmp
inc
mov
pop
pushf
cdq
sub
fmul
mov
dec
bound
in
js
ret
std
jmp
inc
in
retf
aaa
mov
adc
daa
scas
in
dec
repz
sti
call
popf
push
repnz
fcomp
mov
mov
loope
add
sbb
sub
cmp
repnz
call
gs
movs
repnz
call
gs
scas
int
icebp
ins
dec
shl
adc
push
mov
repnz
call
gs
scas
in
push
push
adc
fsub
in
mov
ins
dec
mov
adc
les
in
dec
jno
dec
sti
xchg
adc
add
dec
repz
dec
sti
call
bound
sub
call
arpl
dec
jns
adc
les
scas
in
dec
in
dec
sti
lahf
adc
add
mov
bound
dec
sti
call
bound
cmps
sti
call
inc
mov
inc
retf
adc
or
(bad)
cmp
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
xchg
mov
bound
dec
enter
aaa
xchg
mov
jge
loope
rcl
test
addr16
or
mov
addr16
inc
rol
mov
inc
lods
int
jl
inc
fsub
movs
adc
in
dec
aad
inc
in
sbb
jp
repnz
call
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
bound
jb
fs
test
pop
fcomp
sub
out
test
loopne
or
popf
push
repnz
fcomp
mov
mov
popa
sbb
mov
dec
repz
loop
or
push
push
adc
hlt
dec
inc
xchg
mov
push
in
dec
in
jbe
ret
xlat
jmp
inc
repnz
call
gs
mov
inc
retf
pop
mov
or
dec
push
adc
nop
or
jnp
adc
call
dec
pop
in
dec
cmc
inc
push
icebp
xchg
movs
adc
adc
pop
retf
lahf
adc
loope
scas
cld
push
loopne
dec
jmp
xor
in
mov
ins
dec
or
mov
scas
in
dec
inc
ins
dec
sti
out
adc
les
in
dec
repz
sti
call
bound
cmc
sti
call
arpl
dec
adc
mov
bound
dec
sti
pop
adc
fnstenv
(bad)
(bad)
sti
sub
call
bound
dec
out
call
jns
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
popf
push
adc
inc
mov
adc
pop
push
fmul
scas
sub
(bad)
dec
jae
sub
ror
nop
rol
dec
inc
mov
gs
push
xchg
mov
push
in
dec
jmp
mov
les
in
dec
repz
sti
call
popf
push
repnz
fcomp
movs
adc
inc
hlt
addr16
inc
sar
mov
test
mov
gs
or
pop
fisttp
mul
jne
pop
xchg
adc
arpl
dec
sti
test
add
or
popf
push
cmc
addr16
adc
jns
sbb
inc
out
adc
jns
pop
pop
stc
jb
out
adc
pusha
lods
jmp
sti
mov
call
jg
jmp
je
scas
in
cli
rep
dec
mov
mov
or
dec
sti
ret
add
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
inc
call
mov
in
dec
cmc
dec
pusha
in
xchg
or
imul
dec
rep
inc
sti
call
bound
dec
out
call
jns
in
dec
in
ins
dec
sti
xchg
mov
popf
mov
mov
mov
movs
adc
lock
or
bound
pop
(bad)
mov
cwde
fisubr
dec
push
mov
gs
add
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
(bad)
mov
movs
out
xchg
mov
add
adc
ds
pop
xchg
inc
loopne
jb
fs
pop
lock
jne
adc
mov
fs
inc
in
popa
pop
(bad)
mov
cwde
cld
das
push
adc
call
bound
dec
repz
add
loopne
rep
cmp
call
arpl
dec
cmp
mov
scas
in
dec
xlat
ins
dec
sti
mov
add
mov
bound
dec
sti
call
bound
loop
call
arpl
dec
dec
fwait
adc
(bad)
retf
dec
fldcw
sti
ficom
add
in
dec
repz
sti
call
bound
pop
cli
call
inc
mov
mov
test
mov
test
rep
dec
cld
call
ins
scas
in
dec
loope
dec
sti
mov
les
in
dec
repz
dec
sti
call
bound
jnp
call
bound
dec
loop
sub
(bad)
sbb
inc
mov
sbb
pop
fld
or
inc
test
pop
lea
fwait
out
inc
sahf
in
imul
cdq
or
and
jecxz
(bad)
in
ds
jmp
clc
jae
mul
movs
iret
jge
loope
aaa
xchg
mov
pushf
push
mov
xchg
mov
bound
dec
hlt
call
je
in
dec
jmp
adc
les
in
dec
repz
ret
or
inc
dec
out
add
adc
push
nop
jmp
test
test
sbb
stos
out
mov
pusha
jb
fs
mov
cmps
in
ds
sbb
sti
addr16
popa
daa
xchg
(bad)
shr
mov
fs
inc
in
addr16
in
sbb
data16
mov
xor
mov
outs
scas
in
dec
in
arpl
sub
out
xchg
mov
mov
xchg
sbb
jp
sbb
popf
push
icebp
test
mov
outs
dec
cmp
pusha
inc
ret
je
inc
dec
or
inc
lock
mov
dec
dec
cmp
ins
dec
(bad)
mov
bound
push
cmc
mov
mov
push
xchg
mov
test
mov
call
rep
pop
retf
cdq
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
cwde
add
in
jo
ins
dec
test
adc
(bad)
retf
dec
pop
ins
dec
sti
test
add
mov
bound
dec
sti
call
bound
inc
sti
call
arpl
dec
mov
xchg
mov
sub
dec
sti
inc
adc
add
mov
bound
in
dec
rep
dec
sti
call
bound
(bad)
call
bound
dec
rcr
mov
fild
dec
sti
pushf
xor
push
adc
pusha
jb
gs
scas
in
rep
inc
sti
call
bound
dec
loope
adc
les
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
or
call
popf
push
adc
fwait
push
in
out
adc
repnz
fadd
sub
out
mov
jne
sub
add
lods
mov
popa
xor
nop
out
mov
mov
popf
pop
popf
mov
sti
or
or
popf
push
jmp
stc
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
imul
xchg
mov
bound
xor
mov
pop
push
std
inc
movs
in
ds
pop
lea
scas
in
arpl
test
fimul
(bad)
and
lock
mov
ror
mov
add
shl
stos
sub
out
mov
inc
sar
nop
fisttp
cmp
inc
cdq
sub
adc
into
js
repnz
call
gs
jmp
call
bound
jb
addr16
test
push
fcomp
cmp
cmp
bound
mov
push
sbb
je
xchg
mov
mov
dec
push
mov
hlt
inc
jmp
sub
mov
dec
repz
loope
call
dec
lods
repnz
in
and
fwait
adc
sar
(bad)
ins
dec
rol
lods
enter
mov
ins
pop
retf
cwde
adc
loope
scas
cld
push
out
dec
jmp
movs
bound
dec
cmp
mov
imul
dec
ss
dec
sti
xchg
adc
add
mov
bound
dec
repz
call
bound
cld
sti
call
arpl
dec
add
mov
push
in
dec
rep
dec
sti
mov
movs
adc
test
rep
dec
repz
ins
scas
in
dec
loop
dec
sti
(bad)
adc
les
in
dec
repz
dec
sti
call
bound
sub
sub
out
xchg
mov
mov
test
nop
call
mov
lods
jmp
into
movs
adc
loope
loope
dec
ret
mov
test
rep
dec
lock
jo
in
dec
in
dec
sti
adc
pop
mov
popa
or
sbb
sbb
ds
push
call
or
out
sub
out
(bad)
mov
cmps
jmp
icebp
mov
cmp
jmp
sti
call
arpl
dec
in
push
mov
popf
mov
addr16
jnp
in
push
mov
popf
mov
add
out
or
pushf
push
adc
popf
push
icebp
xchg
movs
adc
adc
call
or
pop
call
(bad)
mov
bound
dec
sti
call
bound
push
cli
call
bound
dec
add
mov
xchg
scas
in
dec
hlt
ins
dec
sti
jae
mov
(bad)
aam
dec
repz
call
bound
jg
call
bound
dec
pop
call
fs
push
cli
popa
push
call
sar
dec
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
fld
mov
mov
bound
call
imul
out
mov
adc
or
inc
test
lea
gs
xchg
push
cld
inc
cdq
in
ds
mov
in
dec
aad
pop
lock
test
scas
mov
or
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
xchg
mov
pushf
push
adc
push
div
pop
fld
pop
push
loopne
lods
in
ds
pop
sbb
in
addr16
loope
adc
jge
(bad)
mov
mov
cmps
sub
test
stos
out
retf
imul
ret
loopne
loopne
jb
fs
scas
int
lock
dec
shl
adc
push
mov
in
ins
outs
ins
dec
sti
mov
mov
dec
scas
in
inc
fst
gs
scas
in
rep
outs
sti
call
push
icebp
dec
rep
mov
call
arpl
dec
fcomp
mov
jae
in
dec
std
ins
dec
sti
jae
mov
bound
dec
sti
call
bound
aam
call
bound
dec
clc
fwait
adc
les
in
dec
mov
adc
add
mov
bound
dec
repz
sti
call
bound
inc
ret
out
inc
inc
adc
call
bound
dec
jmp
xchg
mov
jnp
in
dec
out
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
jns
gs
pop
cli
add
push
test
out
xchg
and
(bad)
cdq
adc
cmp
mov
imul
ret
out
jmp
jmp
xchg
add
xchg
adc
les
in
dec
repz
call
bound
push
sti
call
outs
xchg
push
mov
xchg
push
loop
jecxz
sub
fisttp
repnz
fadd
movs
push
mov
xor
mov
icebp
xchg
or
popf
push
repnz
fcomp
mov
jp
into
dec
inc
repnz
fmul
mov
dec
movs
out
mov
push
out
or
add
push
inc
xchg
mov
push
in
dec
in
jnp
ret
retf
dec
out
jmp
jmp
mov
push
jmp
jmp
mov
push
jmp
jmp
lods
in
dec
ror
dec
sti
call
jg
repnz
call
gs
push
adc
call
bound
dec
repz
mov
bound
mov
call
arpl
dec
mov
adc
les
ins
dec
sti
jmp
bound
in
dec
repz
sti
call
bound
sub
call
arpl
dec
cmc
call
imul
mov
bound
in
dec
repz
popf
pop
cmp
in
jp
ret
out
jmp
scas
in
inc
rep
dec
lock
jo
in
dec
in
dec
sti
adc
bound
dec
sti
call
bound
jns
call
popf
push
adc
fwait
push
shr
test
dec
inc
sti
sbb
sar
stos
sub
out
mov
jae
ror
ror
mov
xor
pop
pop
adc
xchg
sbb
fs
call
bound
dec
in
call
jl
in
dec
shr
test
cmp
jb
or
cdq
sub
(bad)
movs
in
addr16
pop
test
nop
loopne
test
mov
gs
ret
or
inc
dec
push
fadd
lods
sub
iret
dec
dec
icebp
adc
es
xchg
mov
push
gs
ret
cld
jmp
call
mov
repnz
dec
sti
popf
adc
cld
xor
mov
popa
popa
or
call
fcomp
mov
mov
out
in
gs
ret
mov
inc
dec
inc
clc
jae
mul
mov
fisubr
sti
call
je
repnz
clc
jae
mul
mov
bound
sti
call
bound
dec
sti
call
bound
sub
call
arpl
dec
or
mov
cwde
scas
in
dec
rep
dec
sti
mov
mov
bound
sti
call
bound
inc
sti
call
arpl
dec
push
call
bound
dec
sti
unpckhps
bound
dec
repz
in
sbb
jge
loope
xchg
mov
xchg
mov
bound
dec
cmc
call
ja
in
dec
jmp
add
in
dec
repz
dec
sti
call
bound
pop
mul
movs
out
xchg
mov
add
shl
nop
in
mov
test
test
nop
fisttp
hlt
addr16
sub
cdq
lss
in
dec
cmc
dec
pop
lock
cmc
push
test
adc
or
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
hlt
add
popa
lods
retf
repnz
fadd
movs
or
push
push
in
xchg
in
leave
mov
cmc
push
adc
cmp
ror
mul
jno
push
mov
pop
pop
popf
cdq
sbb
dec
push
icebp
test
sbb
adc
or
mov
bound
pop
add
mov
test
or
imul
add
imul
gs
in
lods
in
dec
fistp
mov
pop
mov
inc
lock
add
lahf
out
dec
cli
outs
dec
sti
mov
les
in
out
ins
dec
sti
sbb
add
in
dec
repz
sti
call
bound
inc
cli
call
arpl
dec
mov
mov
push
ins
dec
sti
cmp
les
in
dec
repz
adc
lds
jecxz
rep
mov
call
arpl
dec
cmps
fwait
adc
les
dec
push
out
xchg
sub
fstp
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
dec
fldcw
mov
mov
bound
inc
mul
movs
out
xchg
mov
add
shl
mov
jge
out
mov
push
sar
mov
dec
lods
fimul
repnz
fdivr
movs
or
and
std
mov
mov
stc
addr16
mul
mov
push
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
jmp
imul
fcomp
movs
pop
mov
or
inc
test
sub
iret
imul
nop
hlt
sbb
in
inc
mov
pop
pushf
cdq
es
xor
inc
xchg
sub
adc
into
jge
out
call
gs
jmp
call
pushf
push
adc
fwait
push
not
dec
cmp
push
repnz
or
cmp
push
out
xchg
sub
fld
cmc
inc
retf
jne
add
pop
fwait
or
in
dec
repz
loop
call
imul
mov
inc
lods
in
dec
xlat
ins
dec
jmp
cmp
sti
repnz
add
dec
repz
dec
sti
call
bound
cmp
add
in
pop
repnz
dec
icebp
fwait
adc
les
dec
jp
dec
sti
mov
add
in
dec
repz
adc
les
add
mov
call
arpl
dec
in
call
jmp
in
dec
and
dec
sti
pushf
xor
push
adc
pusha
jb
gs
scas
in
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
aad
dec
sti
mov
mov
bound
dec
sti
call
popf
push
repnz
fcomp
movs
bsr
test
push
inc
out
imul
jae
push
fdiv
sub
fisttp
repnz
fsub
mov
jns
aad
or
push
movs
sbb
adc
fs
sti
call
bound
pop
sti
call
bound
dec
fistp
mov
mov
jnp
or
mov
lock
sar
sub
dec
jno
inc
in
ja
ret
adc
inc
dec
(bad)
mov
xchg
ds
pop
lahf
cdq
and
cvtdq2ps
mov
repnz
imul
loope
xchg
xchg
mov
sbb
or
adc
test
inc
xchg
mov
bound
inc
ret
movs
jmp
dec
out
call
jmp
mov
inc
retf
dec
mov
cmpxchg
lea
mov
inc
mov
pop
lea
mov
outs
push
fwait
adc
les
inc
dec
repz
loop
or
popf
push
test
call
(bad)
bound
dec
sti
mov
int3
daa
mov
dec
repz
call
bound
sub
call
bound
dec
xchg
fwait
adc
les
dec
mov
sti
sbb
add
mov
bound
dec
repz
pop
mov
bound
inc
cli
call
arpl
dec
test
adc
(bad)
in
in
dec
in
ins
dec
sti
call
bound
jb
gs
push
adc
call
bound
dec
out
call
js
in
dec
in
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
js
gs
test
push
clc
inc
movs
loope
(bad)
mov
dec
dec
repnz
fmul
sub
out
mov
(bad)
lahf
in
call
mov
fs
inc
in
inc
ret
outs
jmp
dec
loope
sbb
mov
xchg
mov
bound
dec
cmc
call
ja
in
dec
jmp
dec
sti
xchg
les
inc
xlat
mov
add
jle
sbb
call
jmp
test
push
out
xchg
in
push
movs
or
adc
cwde
push
shr
mov
jnp
int
inc
cmc
addr16
ds
push
mov
in
dec
aad
push
mul
stos
into
jle
repnz
call
gs
scas
in
dec
repz
sti
call
popf
push
repnz
fcomp
mov
scas
mov
popf
push
repnz
fcomp
movs
or
adc
sahf
push
icebp
xchg
movs
or
adc
test
cmp
xchg
mov
enter
fnstenv
out
or
popf
push
in
dec
loopne
dec
sti
cwde
pop
mov
jae
imul
mov
(bad)
(bad)
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
sbb
les
ins
dec
sti
bound
les
in
dec
repz
sti
call
bound
dec
cli
call
bound
dec
cmc
call
pushf
scas
in
dec
and
dec
sti
pushf
xor
push
adc
push
aas
add
jmp
test
dec
repz
sti
call
bound
push
sti
call
bound
dec
fcomp
mov
dec
scas
in
dec
shr
sbb
jge
(bad)
mov
lea
push
push
mov
add
in
mov
movs
or
sti
addr16
inc
ror
mov
scas
jg
dec
repz
in
or
popf
push
test
jmp
call
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
mul
lods
enter
inc
fcomp
movs
sbb
or
inc
test
mov
gs
mov
inc
retf
stc
mov
gs
mov
push
fadd
nop
in
cdq
es
xor
add
outs
xchg
xchg
sti
or
pop
shl
dec
rep
push
mul
lods
aam
pop
test
inc
ret
fucomp
inc
dec
out
clc
pusha
jb
fs
xchg
ret
xchg
push
shl
mov
popf
lods
leave
outs
xchg
int
or
dec
fld
add
lds
mov
lods
or
adc
stos
pop
mov
inc
scas
in
pop
retf
call
(bad)
sbb
mov
inc
scas
in
dec
ins
ins
dec
sti
fcom
add
in
dec
repz
mov
bound
xor
call
arpl
dec
mov
adc
les
scas
in
dec
sbb
pusha
adc
les
in
dec
repz
mov
bound
ds
call
bound
dec
sub
enter
mov
xchg
push
mul
mov
outs
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
leave
call
popf
push
adc
fwait
push
loopne
out
sbb
repnz
fadd
or
lock
ror
ror
mov
xor
pop
pop
adc
mov
sub
dec
cmp
dec
rep
inc
sti
call
bound
dec
in
call
jl
in
dec
shr
test
cmp
inc
mov
pop
(bad)
cdq
sub
(bad)
movs
in
jp
pop
xchg
pop
pop
sbb
ins
fs
pop
repnz
fadd
nop
out
cdq
and
(bad)
lods
in
popaw
daa
dec
xchg
mov
push
pusha
jb
fs
imul
repz
xor
mov
inc
mov
adc
adc
cwde
push
icebp
xchg
movs
adc
adc
sahf
push
icebp
xchg
movs
adc
adc
dec
sti
mov
call
push
repnz
sub
fldcw
inc
outs
mov
gs
xchg
pusha
scas
in
push
or
in
scas
in
repnz
dec
neg
mov
lfence
dec
pop
ins
dec
sti
mov
add
in
dec
repz
dec
sti
call
bound
push
cli
call
arpl
dec
js
adc
(bad)
cmc
scas
in
dec
dec
ins
dec
sti
call
bound
dec
sti
call
bound
ins
cli
call
arpl
dec
push
fwait
adc
les
inc
retf
add
cmp
dec
cmp
ins
dec
repz
ins
scas
in
dec
loopne
dec
sti
lea
les
in
dec
repz
dec
sti
call
bound
jns
call
bound
dec
in
sbb
jge
(bad)
mov
xchg
ds
pop
mov
stos
in
gs
sbb
scas
out
mov
jae
ror
mov
pop
lods
aam
fs
cmp
test
nop
rol
bound
push
in
xchg
sub
fild
sti
inc
retf
movs
mov
gs
or
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
lock
sub
fisttp
repnz
fcomp
movs
or
pop
fstp
or
inc
test
sbb
xor
in
xchg
sub
fisttp
hlt
add
adc
mov
or
lea
mov
movs
or
imul
inc
jecxz
or
popf
push
jmp
mov
xchg
mov
bound
push
mul
stos
out
xchg
mov
add
lock
mov
fwait
dec
cmp
addr16
or
movs
enter
mov
jno
or
lods
into
outs
xchg
pop
mov
xchg
push
lock
mov
jbe
cmp
ins
dec
fild
les
(bad)
dec
shr
sbb
xchg
mov
test
in
dec
fnstcw
jecxz
or
popf
push
in
pop
ret
outs
dec
add
xchg
mov
pop
sub
dec
fs
call
out
in
dec
out
ins
dec
sti
call
bound
sti
call
bound
xor
call
bound
dec
adc
mov
and
dec
sti
ret
adc
add
mov
bound
dec
sti
call
bound
inc
cli
call
arpl
dec
std
mov
dec
cmp
xchg
mov
popf
push
mov
xchg
mov
bound
dec
cmc
call
jbe
in
dec
jmp
dec
sti
xchg
les
in
dec
repz
dec
sti
call
bound
pop
mul
lods
fmul
cli
add
or
sub
in
jle
sbb
cmps
out
mov
jae
ror
mov
pop
movs
out
test
gs
repz
loop
movzx
pusha
dec
cmp
push
cmps
add
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
jb
fs
test
push
inc
in
ds
pop
sbb
loop
stos
in
ds
lahf
mov
mov
xchg
push
shr
nop
repnz
cmps
jmp
lock
sub
dec
jno
(bad)
rep
dec
fld
dec
cmp
jbe
ret
(bad)
jmp
call
mov
repnz
dec
sti
xchg
adc
enter
mov
jae
shr
or
mov
inc
mov
sbb
adc
lahf
pop
icebp
sbb
or
xchg
cmp
outs
dec
sti
mov
call
push
lock
pop
push
(bad)
jl
ins
inc
stc
call
out
in
dec
sti
sub
call
arpl
dec
sti
fwait
adc
les
ins
dec
sti
add
les
in
dec
repz
sti
call
bound
pop
cli
call
bound
dec
jle
adc
les
scas
in
dec
stc
ins
dec
sti
ret
add
in
dec
repz
dec
sti
call
bound
dec
fld
dec
cmp
xchg
mov
popf
push
mov
xchg
mov
bound
dec
hlt
call
jne
in
dec
call
adc
les
in
dec
repz
dec
sti
call
bound
push
not
dec
fld
push
fcomp
movs
or
pop
(bad)
push
inc
in
cmc
movs
adc
xor
repnz
movs
sbb
and
jp
dec
std
mov
mov
mov
addr16
icebp
xchg
sub
ret
in
dec
repz
sti
call
bound
pop
sti
call
bound
dec
in
sbb
jge
(bad)
mov
cmp
sbb
add
out
mov
movs
sbb
out
retf
push
mov
push
inc
in
mov
lods
sub
iret
dec
dec
lock
popf
sbb
je
xchg
mov
xchg
adc
cmp
in
dec
rep
inc
sti
call
pushf
push
adc
inc
mov
or
repnz
lahf
push
icebp
test
mov
movs
dec
cmp
pusha
jb
fs
mov
push
stc
pusha
jb
fs
fsubrp
dec
repz
sub
call
dec
mov
push
clc
jae
mul
mov
dec
rep
outs
sti
call
push
lock
rep
mov
call
arpl
dec
pop
call
dec
scas
in
dec
je
dec
sti
call
bound
dec
repz
call
bound
dec
sti
call
arpl
dec
ins
call
imul
sti
not
add
mov
bound
dec
sti
call
bound
dec
fisttp
dec
cmp
loope
adc
add
in
inc
rep
dec
jmp
adc
les
dec
jmp
add
in
dec
repz
dec
sti
call
bound
push
jecxz
sub
fld
sbb
inc
mov
sub
out
mov
pop
sar
nop
fimul
cld
addr16
or
out
test
push
in
xchg
or
popf
push
test
jmp
call
in
dec
rep
dec
lock
jo
in
dec
in
dec
sti
adc
bound
inc
ret
and
inc
dec
jmp
jp
adc
sbb
test
pop
rol
mov
jge
loope
arpl
dec
pop
lahf
cdq
xor
test
push
fadd
nop
in
cdq
and
jns
dec
std
mov
dec
cmp
addr16
repnz
sub
shl
push
stos
sub
call
outs
xchg
stos
mov
xchg
push
jmp
jecxz
or
adc
lea
movs
or
lods
int
xchg
les
imul
imul
stc
mov
xchg
das
arpl
dec
std
mov
mov
call
jmp
repnz
sub
les
(bad)
jl
ins
inc
stc
call
in
in
dec
sti
sub
call
arpl
dec
neg
mov
fwait
scas
in
dec
push
ins
dec
sti
sbb
mov
bound
dec
sti
call
bound
cmp
call
arpl
dec
mov
xchg
mov
dec
scas
in
dec
ja
dec
sti
std
adc
add
in
dec
rep
dec
sti
call
bound
call
mov
mov
pusha
inc
ret
jmp
inc
call
in
dec
rep
dec
lock
jno
in
dec
in
dec
sti
adc
bound
dec
sti
call
bound
jle
call
popf
push
repnz
fcomp
movs
push
mov
repnz
fmul
movs
or
ins
(bad)
ss
fdiv
adc
(bad)
pop
fsub
mov
js
aad
or
or
popf
push
jmp
sti
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
imul
adc
cmp
call
mov
sbb
sar
mov
jbe
fmul
test
inc
ret
or
inc
dec
(bad)
mov
mov
movs
or
cmc
adc
es
sahf
mov
imul
scas
or
in
cmp
jbe
ret
into
jmp
call
mov
repnz
dec
sti
popf
adc
cld
pop
push
adc
xchg
or
popf
push
hlt
addr16
jne
in
or
popf
push
mul
je
in
or
popf
push
out
ins
add
dec
sti
mov
call
push
lock
mov
pusha
dec
cmp
ins
dec
stc
call
out
in
dec
sti
sub
call
bound
dec
mov
xchg
mov
bound
dec
sti
mov
mov
bound
dec
repz
sti
call
bound
add
call
arpl
dec
test
mov
pop
scas
in
dec
std
ins
dec
sti
mov
add
dec
repz
xchg
inc
les
cmp
fld
dec
cmp
xchg
mov
popf
push
mov
xchg
mov
bound
dec
jmp
adc
les
in
dec
call
adc
les
in
dec
repz
dec
sti
call
bound
push
not
dec
fld
push
clc
inc
mov
sbb
or
inc
test
sub
aam
jbe
inc
fdivr
movs
or
jg
dec
gs
fld
inc
cmp
pusha
jb
fs
scas
in
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
in
jne
ret
daa
jmp
dec
(bad)
add
shl
sub
dec
dec
repnz
fmul
movs
adc
cli
inc
retf
push
bound
addr16
je
adc
push
fisttp
cmc
addr16
adc
imul
ficomp
out
and
dec
sti
test
mov
(bad)
dec
cmp
addr16
mul
lods
out
xchg
mov
push
jmp
mul
scas
out
nop
mov
push
jmp
mul
mov
shrd
dec
rcl
dec
sti
call
jns
repnz
call
gs
scas
adc
call
bound
dec
repz
lds
cmps
dec
rep
fdivr
call
bound
dec
out
adc
les
ins
dec
sti
mov
add
mov
bound
in
dec
repz
dec
sti
call
bound
push
call
arpl
dec
leave
fwait
adc
les
dec
fsubr
sti
pop
adc
add
mov
bound
dec
sti
call
bound
call
mov
mov
jae
mul
mov
ins
scas
in
dec
hlt
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
enter
aaa
xchg
mov
pop
scas
in
dec
jmp
jmp
mov
popa
adc
mov
adc
and
sbb
fisttp
cmp
inc
fwait
in
mov
movs
or
js
jg
sub
inc
mov
pop
adc
enter
je
xchg
mov
test
mov
call
mov
dec
sti
call
bound
pop
sti
call
bound
dec
fcomp
mov
jge
loope
fs
mov
test
nop
test
addr16
add
out
mov
addr16
push
rol
movs
sub
retf
loope
cdq
xchg
mov
test
nop
hlt
mov
pop
jae
shl
mov
jb
out
xor
rol
nop
(bad)
inc
aas
les
retf
push
stc
jae
mul
stos
iret
jns
aad
or
je
sub
test
rep
dec
icebp
call
pushf
push
adc
fwait
push
shr
mov
call
fcomp
mov
popf
test
mov
jo
or
stos
iret
jns
aad
push
xchg
mov
mov
xchg
test
in
fs
ins
dec
std
mov
fwait
mov
ss
dec
repz
out
call
jns
aad
push
xchg
mov
call
bound
push
out
mov
stos
add
movs
les
pop
dec
rep
inc
cli
call
bound
dec
xchg
call
xchg
scas
in
dec
lods
ins
dec
sti
pop
adc
les
in
dec
repz
call
bound
cmps
sti
call
arpl
dec
push
call
je
icebp
pop
test
add
out
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
aad
dec
sti
test
mov
popf
mov
mov
xchg
ds
pop
test
push
fmul
mov
dec
scas
out
mov
push
test
test
rep
dec
repnz
jb
in
dec
loopne
dec
sti
lea
les
jecxz
not
gs
pop
sti
addr16
inc
shl
mov
jno
iret
dec
dec
lock
out
jg
ret
push
inc
dec
sbb
fadd
nop
call
stos
mov
xor
mov
ss
in
dec
in
jg
jmp
lods
aam
pop
repz
out
jg
ret
cs
inc
icebp
inc
out
jg
ret
aas
jmp
dec
inc
out
jg
ret
or
inc
call
mov
std
mov
test
xchg
dec
and
add
mov
bound
dec
sti
call
bound
lock
call
bound
dec
dec
call
fsubr
dec
sti
clc
adc
les
arpl
ins
rol
cdq
addr16
dec
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
shr
test
test
scas
(bad)
cmp
cdq
push
jmp
in
adc
add
fmul
lods
sub
leave
dec
je
ret
dec
fnsave
mov
bound
inc
sti
call
bound
dec
loop
adc
cld
inc
push
adc
mov
movs
or
repnz
fadd
sbb
adc
mov
cmps
sub
out
mov
scas
sub
(bad)
popa
(bad)
in
rep
push
cwde
adc
les
adc
xchg
mov
stos
adc
inc
scas
in
pop
out
jg
jmp
jl
scas
in
and
ins
dec
or
mov
fsubr
dec
sti
fwait
adc
add
in
dec
repz
sbb
add
inc
dec
rep
sub
call
bound
dec
cmp
mov
sub
mov
pushf
mov
or
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
call
bound
dec
ret
(bad)
jmp
test
push
fcomp
sub
retf
dec
dec
repz
and
ds
fwait
cdq
sbb
movs
lock
in
pop
jmp
mov
fs
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
jno
aad
or
mov
mov
dec
push
mov
add
xchg
mov
mov
jge
dec
pushf
mov
or
js
add
xchg
or
jge
mov
repnz
dec
sti
xchg
adc
xlat
xchg
sub
mov
mov
xchg
pop
mov
xchg
push
shr
mov
call
or
in
or
jmp
add
push
fwait
pusha
xchg
mov
inc
cli
out
dec
repz
mov
call
addr16
call
bound
dec
sahf
call
(bad)
scas
in
dec
inc
ins
dec
sti
dec
adc
les
in
dec
repz
sti
call
bound
call
mov
bound
dec
sub
cwde
fsubr
jecxz
test
fistp
les
loope
rep
inc
sti
call
bound
dec
out
adc
les
call
add
pop
nop
cmc
mov
mov
mov
mov
xor
sti
pushf
xor
popf
push
adc
addr16
call
imul
repz
sti
call
bound
pop
sti
call
popf
push
adc
inc
mov
or
test
push
jecxz
lods
out
or
pushf
push
adc
lahf
pop
shr
nop
in
mov
pushf
jl
dec
std
mov
mov
mov
inc
jb
addr16
scas
adc
ins
outs
sti
call
push
test
cli
call
bound
dec
hlt
fwait
adc
(bad)
out
in
dec
test
adc
add
dec
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
lods
fwait
adc
(bad)
dec
add
dec
sti
xchg
adc
les
in
dec
repz
call
jge
loope
jo
inc
mul
mov
outs
scas
in
dec
hlt
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
iret
call
popf
push
adc
inc
mov
sbb
push
push
fadd
sub
fmul
repnz
fdiv
movs
sbb
and
inc
sub
adc
iret
jge
loope
or
mov
call
cmc
sub
call
bound
dec
out
call
js
in
dec
out
ins
dec
sti
mov
mov
mov
jae
shr
sub
dec
inc
cmc
sbb
adc
push
ror
cmc
inc
in
pusha
inc
ret
add
inc
dec
(bad)
mov
xchg
ds
push
mov
repnz
fdiv
imul
out
cli
addr16
not
dec
shl
daa
stos
sub
call
jo
aad
or
loop
or
stos
mov
xchg
push
shr
mov
lahf
mov
jnp
xchg
mov
mov
cmps
or
loope
aam
mov
cwde
xor
in
lods
in
dec
fucomi
dec
sti
pushf
aas
cmps
or
loope
cli
xchg
mov
mov
les
in
dec
loop
inc
call
xor
repz
call
bound
mov
call
bound
dec
adc
mov
bound
dec
sti
and
les
in
dec
repz
dec
sti
call
bound
(bad)
sti
call
outs
mov
inc
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
loop
adc
jge
(bad)
mov
(bad)
ds
sbb
or
mov
jnp
mov
dec
scas
out
mov
push
test
dec
rep
dec
repz
jb
in
dec
out
dec
sti
adc
bound
mov
or
dec
pop
repnz
fadd
movs
adc
or
(bad)
jp
jmp
scas
out
xchg
mov
mov
mov
cmps
sub
out
xchg
adc
sahf
mov
bound
mov
or
je
jmp
add
ds
sbb
je
xchg
mov
cmp
sbb
je
xchg
mov
cwde
push
fwait
mov
out
dec
repz
or
call
jae
test
rep
dec
push
call
sti
scas
in
dec
xchg
ins
dec
sti
xor
les
in
dec
repz
call
bound
in
call
bound
dec
mov
xchg
mov
mov
in
dec
cmc
dec
pusha
out
or
daa
test
dec
repz
sti
call
bound
push
sti
call
bound
dec
ret
out
inc
dec
(bad)
mov
test
nop
jmp
scas
in
popaw
and
test
jne
hlt
pop
not
gs
cmps
in
dec
repz
dec
sti
call
bound
push
call
imul
jecxz
mov
push
mov
or
jb
(bad)
mov
stos
out
xchg
mov
movs
in
mov
lods
sub
push
bound
cmp
gs
scas
in
inc
fnstcw
sub
les
retf
and
dec
sti
pushf
xor
push
test
in
ins
dec
fstp
mov
bound
dec
sti
lock
add
in
dec
repz
call
bound
stos
cli
call
arpl
dec
sti
cwde
adc
les
dec
sti
sub
les
out
dec
repz
dec
sti
call
bound
dec
sti
call
arpl
dec
pop
fwait
adc
les
in
dec
out
ins
dec
sti
cs
add
les
retf
push
stc
jg
ret
hlt
jmp
xchg
mov
fistp
mov
bound
pop
sti
call
bound
dec
fistp
mov
dec
scas
in
dec
fild
stos
adc
les
in
dec
repz
dec
sti
call
popf
push
adc
inc
mov
pop
call
in
jb
push
cmp
pop
test
xchg
in
jnp
sub
sbb
cmp
ds
add
repz
aad
pop
ret
inc
jmp
into
jno
cmc
pop
retf
add
sar
dec
rep
inc
sti
call
bound
dec
loope
adc
les
in
dec
in
popa
pop
ret
inc
jmp
fmul
mul
jbe
adc
push
nop
jmp
cdq
sub
test
push
out
inc
stos
in
ds
fdiv
aad
or
ds
sbb
inc
mul
jbe
sbb
mov
xor
add
jp
aam
mov
mov
mov
xchg
jmp
leave
ins
dec
std
mov
lods
shl
aad
or
xor
pushf
push
adc
jg
call
imul
retf
add
mov
ins
je
dec
sti
mov
call
inc
dec
sti
call
lahf
push
adc
dec
push
call
imul
aad
pop
ret
inc
jmp
shl
in
ins
test
sti
mov
mov
mov
mov
sti
pushf
add
bound
(bad)
(bad)
call
pop
xchg
jns
or
push
call
scas
cmp
popf
push
icebp
pop
loopne
inc
call
imul
retf
push
gs
mov
sbb
mov
mov
mov
dec
sti
call
and
pop
ror
les
ins
dec
sti
jp
mov
bound
dec
sti
call
bound
fdivr
call
bound
dec
imul
retf
push
popa
dec
mov
inc
xchg
mov
scas
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
pop
test
inc
in
mov
movs
or
inc
fmul
sti
sbb
adc
aad
jmp
call
bound
dec
out
call
xor
mov
inc
mov
sub
leave
dec
inc
repnz
fadd
cmp
cmc
add
or
pop
fisttp
xchg
pop
rep
dec
(bad)
jne
bound
dec
fild
push
mov
bound
dec
fist
cmp
bound
int3
stos
cmp
add
in
dec
shl
dec
sti
call
inc
mov
cmp
mov
xlat
les
dec
out
sti
call
sbb
in
dec
sub
cs
cmp
mov
dec
rep
inc
sti
call
bound
dec
xchg
call
bound
dec
sti
fs
les
in
dec
repz
call
bound
mov
call
bound
pop
call
mov
in
inc
rep
dec
neg
mov
jno
in
dec
in
dec
sti
adc
dec
repz
dec
sti
call
popf
push
repnz
fcomp
mov
js
into
dec
inc
repnz
fmul
nop
loopne
cdq
sbb
aaa
push
loopne
push
call
scas
idiv
popf
push
cld
pop
mov
dec
sti
call
bound
pop
sti
call
bound
jno
xchg
inc
dec
(bad)
mov
xchg
push
sbb
or
inc
pop
call
imul
add
cmp
sbb
in
imul
xchg
mov
dec
xchg
in
dec
cmc
dec
idiv
call
dec
out
in
dec
cmc
jg
in
cs
dec
cmp
lds
push
jb
fs
xchg
pop
enter
gs
scas
int
repnz
dec
fild
xor
bound
pop
(bad)
fistp
mov
bound
ret
adc
push
bound
dec
outs
call
cmc
scas
in
dec
ins
dec
sti
call
(bad)
jmp
dec
repz
sti
call
dec
mov
pop
iret
inc
(bad)
jmp
ret
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
cmp
cmp
push
fcomp
movs
or
pop
fld
add
fmul
lods
inc
xchg
mov
bound
dec
sti
call
bound
pop
call
imul
fcomp
mov
dec
dec
neg
jae
call
imul
sbb
popa
pop
cmp
aad
(bad)
ins
push
cdq
adc
les
dec
rep
outs
fild
push
mov
bound
dec
call
xchg
mov
mov
in
dec
fist
dec
sti
pushf
enter
mov
inc
add
dec
repz
mov
call
jno
int
loopne
dec
fisttp
mov
aam
ins
dec
fcomi
adc
add
lds
rep
dec
es
adc
add
test
rep
dec
sti
call
movs
scas
in
dec
pop
ins
dec
sti
pop
adc
les
in
dec
repz
call
bound
inc
cli
call
bound
dec
stc
fwait
adc
les
ins
dec
sti
xchg
xchg
pop
cwde
mov
data16
dec
sti
call
bound
pop
sti
call
bound
dec
fistp
mov
jge
(bad)
jno
sbb
add
or
dec
pop
repnz
fadd
mov
dec
dec
repnz
fdiv
movs
or
cmc
pop
fnstenv
call
imul
rep
inc
sti
call
bound
dec
out
call
jnp
shl
mov
test
dec
pop
mov
add
adc
seto
mov
jno
xchg
mov
gs
mov
push
fadd
nop
jecxz
mov
sbb
call
bound
bound
movs
mov
jb
shl
mov
test
xchg
pop
cwde
mov
mov
jne
in
add
pop
cwde
mov
mov
dec
ret
adc
les
in
dec
repz
sar
call
daa
mov
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
stos
scas
in
dec
stos
ins
dec
sti
push
adc
les
in
dec
repz
dec
sti
call
dec
mov
pop
int
out
mov
mov
bound
dec
cmc
call
je
in
dec
jmp
add
outs
push
clc
inc
mov
xchg
ds
pop
pushf
cdq
xor
mov
mov
pop
lahf
cdq
and
clc
jg
ret
(bad)
jmp
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
sti
addr16
add
jge
(bad)
movs
jmp
push
test
mov
popf
mov
mov
mov
mov
test
jmp
repz
mov
bound
ins
jecxz
movs
or
push
adc
call
sbb
in
dec
cs
sti
call
inc
jp
dec
repz
das
sti
call
jne
jmp
repz
mov
bound
jne
movs
push
lods
add
in
mov
ins
dec
adc
mov
lods
scas
in
dec
cs
dec
sti
jb
mov
bound
dec
sti
call
bound
cmc
sti
call
bound
dec
cmp
mov
stos
scas
in
dec
inc
ins
dec
sti
push
adc
call
push
mov
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
in
push
test
test
push
jbe
or
mov
addr16
ds
pop
cdq
cdq
sbb
push
cld
inc
lahf
in
mov
adc
ret
xchg
pop
loop
adc
bound
pop
sti
call
bound
dec
in
push
test
xchg
dec
cmp
jae
shr
stos
sub
enter
pop
fmul
test
mov
mov
jnp
or
pop
fimul
cmc
addr16
popa
pop
mov
sti
pop
push
popa
or
test
mov
inc
mov
adc
inc
mov
xchg
push
shr
movs
xor
int
icebp
ins
dec
(bad)
int3
les
xor
pop
mov
xchg
mov
jmp
ins
dec
sti
sbb
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
mov
adc
(bad)
repz
in
dec
jmp
addr16
push
nop
mov
lahf
and
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
popa
jae
ds
pop
fwait
cdq
xor
(bad)
mov
mov
movs
or
dec
neg
jge
mov
sahf
mov
bound
sti
call
bound
add
lods
out
xchg
mov
addr16
inc
shl
nop
call
mov
mov
xchg
dec
push
mov
icebp
sbb
sbb
or
fs
dec
cmc
pop
popa
sti
call
push
push
mov
gs
(bad)
test
adc
aad
jmp
call
bound
dec
aaa
call
cmc
scas
in
dec
rep
dec
sti
xchg
adc
les
in
dec
rep
dec
sti
call
bound
(bad)
call
and
sti
call
bound
dec
cmc
call
jbe
in
dec
in
dec
sti
add
sub
scas
out
fwait
mov
mov
mov
mov
mov
push
jmp
int3
bound
dec
hlt
call
jne
in
dec
jmp
or
aam
inc
inc
(bad)
mov
test
nop
jmp
push
loopne
jb
gs
pop
hlt
addr16
jne
adc
mov
fs
dec
pop
call
scas
mov
pop
rep
dec
fisub
add
in
inc
in
data16
call
(bad)
push
adc
call
dec
xor
dec
cmc
mov
fidivr
xchg
add
scas
in
fs
ins
dec
std
mov
fwait
mov
daa
out
dec
repz
xor
call
and
dec
sti
in
mov
bound
in
dec
repz
sti
call
bound
add
call
bound
dec
outs
call
imul
sti
add
xchg
cld
arpl
adc
bound
inc
sti
call
bound
dec
out
push
nop
mov
sbb
lahf
push
div
pop
(bad)
repz
jne
out
or
add
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
mov
imul
adc
push
nop
jmp
cdq
sub
mov
or
test
inc
inc
add
adc
or
out
mov
inc
loopne
jb
gs
mov
jne
ins
dec
lock
mov
arpl
pop
mov
xchg
cmp
bound
in
call
bound
dec
repz
push
in
dec
mov
dec
sti
or
les
in
dec
repz
sti
call
push
mov
psubusb
pop
retf
fist
mov
bound
inc
sti
call
bound
dec
in
push
clc
sub
stos
out
fwait
mov
addr16
jae
shr
nop
out
mov
stos
jmp
add
in
inc
rep
dec
hlt
call
je
in
dec
out
jg
ret
iret
jmp
movs
(bad)
mov
mov
push
pop
pushf
cdq
and
fst
das
jb
gs
pop
mul
ja
adc
mov
bound
dec
icebp
mov
xchg
mov
cmps
ins
dec
std
lea
sbb
int
lock
dec
fild
mov
bound
push
lods
mov
mov
jne
test
sti
call
bound
dec
inc
call
in
scas
in
dec
push
ins
dec
sti
xchg
adc
les
in
dec
rep
dec
sti
call
bound
sar
call
jno
lock
mov
sti
jmp
ret
in
inc
rep
dec
neg
mov
ja
in
dec
jmp
dec
sti
xchg
xlat
test
cli
inc
mov
mov
movs
or
inc
fld
add
xchg
mov
movs
bsr
jno
repnz
loopne
jb
gs
scas
in
inc
rep
dec
neg
mov
jo
in
dec
in
dec
sti
add
cmp
loopne
push
jbe
or
das
jle
add
call
imul
add
push
cmp
sbb
in
dec
rol
dec
sti
call
cli
scas
in
dec
in
inc
push
loope
imul
mov
dec
sti
and
les
in
dec
repz
call
bound
(bad)
call
bound
dec
mov
adc
(bad)
out
scas
in
dec
ins
ins
dec
sti
and
idiv
dec
fcomp
pop
leave
fist
mov
bound
inc
sti
call
bound
dec
out
adc
or
push
lock
mov
dec
inc
repnz
fadd
mov
je
xlat
jge
in
mov
sub
mov
bound
inc
sti
call
bound
dec
in
push
(bad)
cmp
(bad)
mov
xchg
ds
push
mov
add
icebp
mov
and
cmp
pop
push
fadd
nop
jmp
mov
js
nop
push
(bad)
cmp
test
dec
sti
lea
std
adc
not
bound
dec
sti
call
mov
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ret
adc
push
bound
dec
loopne
mov
jae
test
rep
dec
(bad)
call
imul
mov
bound
pop
mov
outs
stos
out
xchg
mov
mov
mov
cmps
sub
test
paddd
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
dec
retf
and
sub
out
nop
mov
addr16
sbb
jns
stos
je
xchg
mov
mov
dec
push
mov
sti
sbb
sbb
and
arpl
dec
std
mov
xchg
pop
arpl
dec
std
mov
xchg
aas
popa
scas
in
fs
ins
dec
std
mov
mov
ins
mov
mov
lea
mov
test
cld
mov
dec
outs
fld
rol
bound
dec
call
xchg
mov
pop
lods
in
dec
fist
dec
sti
pushf
retf
mov
jae
test
rep
dec
add
xchg
mov
mov
ins
dec
sti
out
mov
bound
repz
call
bound
or
call
arpl
dec
(bad)
fwait
adc
(bad)
repz
in
dec
fisubr
sti
bound
les
in
dec
repz
dec
sti
call
bound
or
call
arpl
dec
jo
adc
lock
stos
je
xchg
mov
mov
dec
xchg
mov
imul
sti
xchg
adc
les
in
dec
repz
sti
call
bound
pusha
sti
call
bound
dec
rcr
les
dec
retf
dec
mov
gs
aaa
jge
(bad)
mov
cmp
pop
pushf
cdq
and
(bad)
lods
in
jb
daa
test
nop
fmul
cld
and
rcl
mov
pop
lods
fimul
repnz
fsubr
adc
xor
fistp
les
loopne
rep
pop
sti
call
bound
dec
in
adc
les
dec
retf
shl
scas
out
nop
mov
popa
adc
cdq
and
(bad)
lods
in
gs
daa
xchg
(bad)
pop
test
cld
out
adc
mov
movs
or
cmc
addr16
ds
sbb
outs
ret
in
in
or
dec
(bad)
js
jg
ret
retf
dec
(bad)
ins
in
bound
lea
cld
cmp
(bad)
mov
call
outs
mov
dec
fistp
add
sti
(bad)
sti
jno
mov
imul
mov
imul
iret
lea
cld
cmp
popf
mov
mov
inc
(bad)
cmp
bound
dec
dec
mov
inc
pop
in
dec
repz
imul
xchg
mov
inc
mov
pop
mov
test
jmp
xchg
pop
mov
xchg
push
call
mov
dec
mov
xchg
xor
call
bound
paddsb
mov
bound
dec
sti
cmps
pop
mov
bound
dec
repz
dec
sti
call
bound
cwde
sti
call
bound
dec
dec
fwait
adc
les
scas
in
dec
sub
cmp
add
les
in
dec
repz
dec
sti
call
push
mov
pop
mov
push
mov
xchg
mov
bound
dec
jmp
adc
les
in
dec
call
adc
les
in
dec
repz
dec
sti
call
jno
aad
or
mov
mov
movs
or
inc
repnz
fadd
movs
adc
xor
mov
jmp
int
push
mov
cli
pop
shl
into
test
test
scas
xchg
cmp
imul
sbb
add
cld
dec
rep
pop
sti
call
bound
dec
in
push
repz
cmp
jae
shr
scas
sub
ror
repnz
fmul
mov
push
mov
pop
mov
jmp
mov
mov
mov
lods
sub
out
adc
dec
repz
mov
bound
push
fwait
adc
les
dec
dec
repz
out
call
xor
dec
test
(bad)
bound
dec
sar
popa
cs
icebp
fs
std
test
sbb
int
sbb
sbb
mov
mov
bound
dec
sti
mov
call
xchg
stos
lea
in
scas
in
dec
sar
sti
call
inc
js
dec
repz
mov
call
dec
cmps
icebp
pop
mov
jmp
call
addr16
mov
push
hlt
mov
call
test
xor
ins
dec
(bad)
mov
xchg
pop
bound
dec
std
mov
xchg
dec
bound
dec
std
in
mov
pop
lods
in
dec
ror
sti
call
fs
in
dec
ror
xchg
cmp
in
dec
test
xchg
mov
dec
mov
dec
cmc
dec
mov
sub
je
rep
push
cdq
adc
les
dec
rep
push
call
fs
imul
xor
in
mov
push
cwde
adc
les
xchg
push
sti
test
dec
xchg
xor
dec
sti
sub
add
mov
bound
dec
repz
mov
bound
aad
call
bound
dec
inc
call
dec
lods
in
dec
aas
ins
dec
sti
mov
mov
(bad)
(bad)
repz
sti
call
bound
push
call
mov
out
rep
inc
sti
call
bound
dec
in
call
jg
in
dec
shr
mov
mov
bound
call
imul
fcomp
mov
jge
out
mov
test
mov
gs
mov
cmp
inc
cdq
in
mov
mov
sub
pop
fcomp
adc
bound
pop
sti
call
bound
dec
fistp
mov
mov
jae
shr
mov
addr16
mov
pop
sar
sub
mov
jg
ret
dec
jmp
dec
sbb
out
cld
movs
or
cli
addr16
pop
sti
call
inc
jbe
dec
repz
(bad)
sti
call
inc
cmp
dec
repz
jmp
call
inc
dec
pop
retf
(bad)
call
data16
push
dec
rep
push
call
fs
xor
mov
inc
(bad)
bound
dec
rcl
adc
push
mov
cs
mul
dec
std
in
mov
arpl
dec
sti
mov
mov
mov
mov
sti
pushf
xor
in
lods
in
dec
(bad)
dec
sti
pushf
add
scas
in
dec
fbld
shr
ror
neg
jo
mov
adc
jmp
out
xchg
mov
outs
jmp
lock
test
(bad)
mov
xchg
ins
popa
scas
in
fs
ins
dec
std
mov
xchg
push
popa
scas
in
fs
ins
dec
std
in
mov
and
dec
std
in
mov
mov
mov
sti
pushf
imul
scas
in
dec
rol
add
mov
sbb
call
inc
push
in
dec
repz
push
cli
call
inc
xchg
in
dec
repz
push
cli
call
popa
scas
in
ins
mov
dec
sti
mov
mov
inc
push
out
dec
repz
cmp
xchg
mov
mov
jge
mov
(bad)
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
sti
call
hlt
scas
in
dec
arpl
or
mov
jge
inc
fcomp
pop
int3
fist
mov
bound
inc
sti
call
bound
dec
in
mov
nop
sbb
shr
nop
in
sbb
mov
inc
adc
in
inc
rep
dec
lock
jno
in
dec
in
dec
sti
add
cmp
dec
cmp
addr16
or
cdq
das
jnp
add
repnz
xor
cmp
pop
push
fadd
nop
jmp
mov
dec
icebp
mov
into
mov
jge
mov
add
dec
repz
sti
call
bound
dec
sti
call
bound
dec
mov
xchg
mov
icebp
scas
in
dec
arpl
mov
sbb
stc
out
fstp
dec
sti
pushf
adc
les
in
dec
repz
sti
call
bound
popa
outs
test
nop
clc
mov
mov
test
nop
jmp
mov
dec
sti
call
bound
dec
call
xchg
mov
jge
inc
retf
cmp
sub
out
nop
mov
mov
test
nop
out
mov
je
xchg
mov
cmp
fisttp
mul
ja
sbb
test
out
sbb
dec
sti
call
bound
imul
xchg
mov
bound
dec
or
mov
inc
scas
in
dec
stc
ins
dec
cli
call
bound
out
dec
repz
das
mov
bound
or
call
imul
icebp
call
inc
mov
dec
sti
rcr
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
rcr
mov
inc
scas
in
dec
stc
ins
dec
cli
call
bound
out
dec
repz
pop
sti
call
bound
imul
adc
jge
scas
in
outs
rep
dec
icebp
call
cmc
mov
dec
sti
daa
push
mov
bound
jp
call
bound
dec
rol
mov
(bad)
in
dec
repz
dec
sti
call
bound
or
call
bound
dec
sub
adc
(bad)
test
rep
dec
call
mov
push
ins
dec
sti
mov
out
int
(bad)
mov
inc
mov
sub
out
mov
dec
repz
loop
ds
bound
rcl
adc
ins
pusha
scas
in
imul
push
mov
bound
dec
cmc
fwait
adc
les
ins
dec
sti
repz
les
in
dec
repz
call
bound
xchg
call
bound
dec
repz
mov
in
dec
xor
adc
les
loope
jecxz
dec
rol
sbb
les
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
jno
aad
or
mov
mov
lods
sub
retf
dec
inc
repnz
fadd
movs
sub
aad
dec
repnz
fdiv
movs
sub
out
mov
out
push
call
imul
repz
sti
call
bound
push
sti
call
jno
aad
or
mov
nop
ds
pop
cwde
cdq
xor
in
addr16
adc
mov
push
jecxz
dec
ret
js
inc
dec
(bad)
mov
nop
ds
pop
pushf
cdq
and
or
imul
in
dec
inc
xchg
mov
push
in
dec
jmp
dec
ret
das
jmp
dec
loope
jecxz
dec
ret
cmp
inc
dec
test
add
test
push
push
call
imul
lock
dec
fstp
add
(bad)
push
clc
jg
jmp
ret
bound
dec
push
call
gs
in
dec
xor
or
mov
(bad)
int
dec
repz
dec
sti
call
bound
loop
call
bound
dec
sub
adc
fsubr
loope
test
fistp
les
loopne
rep
pop
sti
call
bound
dec
in
adc
les
dec
sbb
sub
int
pop
repnz
fadd
nop
out
mov
lods
in
gs
daa
dec
cmp
movs
jmp
adc
les
in
dec
repz
sti
call
addr16
ret
xchg
push
shr
sub
dec
inc
cli
sbb
adc
cld
jno
adc
mov
mov
mov
sti
pushf
xor
addr16
push
mov
xchg
pusha
ret
ret
inc
out
dec
repz
dec
sti
mov
int3
daa
mov
dec
repz
dec
sti
call
bound
data16
call
bound
dec
sti
call
js
in
dec
fld
sti
pop
adc
add
mov
bound
dec
sti
call
bound
mov
call
arpl
dec
call
(bad)
cmc
scas
in
dec
loop
dec
sti
lock
add
mov
bound
dec
sti
call
bound
dec
fld
dec
cmp
or
add
adc
setbe
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
int3
call
je
aad
or
mov
cmp
pop
xchg
mov
cmp
pop
mov
xchg
jmp
xchg
in
arpl
mov
cmp
fsub
movs
adc
test
pushf
gs
dec
std
mov
mov
push
adc
jo
ret
pop
jmp
call
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
dec
repz
dec
sti
call
popf
push
repnz
fcomp
movs
push
mov
repnz
fmul
lods
sub
retf
repnz
fdiv
cmp
dec
cmp
jp
or
pop
fimul
repz
jae
sar
mov
dec
lods
leave
dec
jbe
(bad)
ins
dec
fld
scas
enter
mov
bound
sti
or
pop
shl
dec
rep
inc
sti
call
pushf
push
adc
inc
mov
or
adc
xchg
ds
sbb
je
xchg
mov
lea
dec
push
mov
loope
retf
test
or
adc
mov
mov
bound
dec
rcr
movs
in
inc
scas
in
dec
fnstenv
mov
xor
out
call
gs
scas
in
rep
outs
sti
call
push
icebp
dec
rep
adc
call
arpl
dec
stc
fwait
adc
les
in
dec
mov
adc
les
in
dec
repz
sti
call
bound
inc
sti
call
arpl
dec
mov
adc
(bad)
sti
scas
in
dec
sub
mov
mov
bound
dec
rep
dec
sti
call
bound
inc
ret
out
inc
dec
adc
call
imul
mov
bound
dec
sti
call
bound
popa
sti
call
bound
jns
gs
pop
repnz
fadd
nop
jmp
mov
adc
and
mov
and
xor
add
les
retf
push
jmp
out
xchg
sub
shr
stc
inc
retf
test
xchg
mov
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
mov
or
xchg
mov
mov
cmp
pop
mov
lods
in
jge
sbb
adc
mov
push
adc
inc
mov
sub
out
mov
scas
in
mov
movs
or
in
dec
aad
inc
in
push
movs
adc
mov
or
mov
bound
jb
fs
movs
out
out
jb
fs
mov
inc
in
js
ret
test
inc
inc
repnz
call
gs
xchg
div
outs
adc
les
(bad)
ins
dec
rol
lods
shr
adc
call
bound
push
hlt
mov
stos
add
movs
les
push
dec
rep
mov
add
in
lods
rep
dec
cld
call
mov
dec
sti
ss
les
in
dec
repz
sti
call
bound
(bad)
sti
call
bound
dec
jmp
xchg
mov
jnp
neg
inc
shl
fistp
mov
bound
pop
sti
call
bound
dec
in
adc
les
dec
fldcw
test
test
scas
sar
popf
push
repnz
fcomp
nop
out
mov
movs
in
jle
pop
test
nop
loopne
mov
sub
ror
mov
call
or
dec
mov
lahf
mov
bound
dec
sti
call
bound
push
repnz
or
dec
cmp
(bad)
mov
xchg
push
pop
fwait
cdq
cs
or
inc
test
add
pop
cmp
jno
or
(bad)
cli
addr16
push
inc
xchg
mov
push
in
dec
jmp
jmp
inc
neg
push
cld
add
bound
dec
retf
les
test
mov
inc
mov
sbb
adc
call
dec
test
dec
cmc
inc
push
call
test
dec
repz
call
bound
dec
sti
call
bound
dec
push
call
ds
in
dec
dec
ins
dec
sti
cmp
les
in
dec
repz
call
bound
inc
in
push
mov
push
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
lock
xor
cmp
(bad)
mov
xchg
ds
pop
cwde
cdq
cs
(bad)
stos
out
inc
test
pop
cdq
cdq
pop
mov
in
dec
cmc
dec
pusha
in
xchg
or
popf
push
jmp
adc
les
in
dec
repz
sti
call
jno
aad
or
mov
mov
movs
or
cli
addr16
je
adc
mov
fs
adc
mov
lods
sub
out
mov
dec
sti
pushf
xor
addr16
or
int
inc
call
out
dec
mov
adc
les
in
shr
mov
mov
bound
sti
call
bound
push
cli
call
arpl
dec
(bad)
fwait
adc
les
dec
rep
dec
sti
cs
les
in
dec
repz
dec
sti
call
bound
loopne
call
arpl
dec
in
call
daa
scas
in
dec
imul
sti
mov
mov
bound
dec
repz
in
sbb
jge
loope
xchg
xchg
mov
popf
push
mov
xchg
mov
bound
dec
hlt
call
jne
in
dec
call
adc
les
in
dec
repz
dec
sti
call
bound
jo
call
outs
xchg
div
mov
movs
push
mov
add
inc
mov
pop
test
xchg
in
jl
and
mov
addr16
add
jge
(bad)
mov
cmc
dec
sti
pushf
xor
xchg
cmp
lock
mov
push
dec
cmp
ins
dec
repz
jb
in
dec
out
dec
sti
lea
les
in
dec
repz
dec
sti
call
outs
xchg
jns
or
push
div
inc
fstp
add
xchg
jb
nop
in
cdq
es
xor
inc
xchg
in
xchg
or
popf
push
mul
jb
or
pop
fmul
repz
jnp
sbb
cdq
pop
mov
in
dec
cmc
dec
push
icebp
test
cmp
pusha
jb
fs
imul
cld
call
jnp
aad
or
ds
pop
lea
push
jmp
jmp
test
in
sbb
je
pop
push
fadd
movs
sbb
adc
dec
sti
mov
call
dec
dec
sti
call
mov
inc
in
xchg
or
popf
push
in
dec
loopne
dec
sti
xchg
pop
mov
jae
imul
mov
bound
dec
sti
call
bound
dec
sti
call
arpl
dec
add
xchg
mov
stc
scas
in
dec
jns
dec
sti
mov
mov
(bad)
lock
dec
repz
call
bound
inc
cli
call
arpl
dec
call
xchg
mov
ins
scas
in
dec
and
dec
sti
pushf
xor
push
adc
pusha
jb
gs
scas
in
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
aam
dec
sti
mov
mov
bound
dec
sti
call
popf
push
repnz
fcomp
movs
push
mov
repnz
fmul
movs
or
test
push
in
popf
in
ds
outs
test
push
jmp
push
mov
iret
imul
mov
lahf
mov
mov
sub
call
bound
dec
jmp
les
in
dec
call
adc
cld
ficom
mov
arpl
mov
dec
sbb
inc
repz
sar
sub
mov
gs
ret
or
inc
dec
sbb
inc
in
ds
push
mov
cmc
adc
rol
and
xchg
mov
jle
repnz
clc
jae
mul
mov
add
dec
sti
call
outs
xchg
mov
call
popf
lods
int
xchg
shl
outs
push
mov
lahf
mov
bound
in
or
adc
xchg
sbb
pusha
(bad)
jne
rep
push
cdq
adc
les
inc
in
gs
in
sbb
jno
out
dec
inc
outs
dec
sti
mov
mov
or
ins
dec
sti
xchg
add
les
in
dec
rep
dec
sti
call
bound
outs
cli
call
bound
dec
sti
call
xlat
scas
in
dec
aaa
ins
dec
sti
icebp
adc
les
in
dec
repz
mov
bound
mov
call
data16
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
dec
scas
in
dec
fisubr
test
test
scas
call
addr16
or
mov
movs
in
gs
pop
cmp
pop
call
in
js
test
nop
ror
std
pop
not
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
pushf
push
adc
test
nop
icebp
(bad)
cdq
sub
(bad)
cmps
in
inc
lods
in
ds
pop
lahf
mov
je
xchg
mov
cmp
pop
pushf
cdq
sub
push
cli
inc
mov
or
repnz
stos
sub
call
push
xchg
mov
lea
dec
sbb
aad
or
out
or
jle
or
push
test
mul
jne
loope
or
pushf
push
adc
pop
dec
sti
call
or
in
dec
fnstenv
dec
mov
cmp
ins
dec
sti
les
les
in
dec
repz
call
bound
mov
call
bound
dec
cld
call
mov
ins
dec
sti
dec
mov
jnp
repnz
loopne
popa
pop
xchg
push
mov
xchg
mov
bound
dec
cmc
call
jbe
in
dec
in
dec
sti
adc
dec
retf
adc
add
or
je
sbb
shl
mov
jo
int
dec
repnz
fdiv
mov
gs
call
bound
dec
in
call
push
push
adc
test
nop
icebp
sbb
loope
or
popf
push
adc
lahf
push
shr
nop
in
mov
pushf
push
or
pop
pop
adc
addr16
stos
in
dec
icebp
ins
dec
fistp
mov
bound
dec
mov
adc
les
in
dec
mov
dec
sti
call
bound
dec
sti
call
bound
inc
cli
call
bound
dec
sbb
les
scas
in
dec
mov
dec
sti
xchg
adc
add
in
dec
rep
dec
sti
call
bound
mov
call
(bad)
scas
in
dec
aad
inc
ret
out
inc
dec
adc
call
imul
mov
bound
dec
sti
call
bound
addr16
call
bound
jb
gs
pop
repnz
fcomp
sub
ror
repnz
fmul
movs
sbb
cmp
inc
fwait
in
ds
lahf
cdq
or
cmc
dec
push
lock
xor
dec
cmp
inc
retf
xchg
xchg
mov
gs
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
mov
or
dec
pop
repnz
fadd
movs
adc
dec
repnz
fdiv
mov
not
mov
inc
mov
sub
out
mov
popa
push
cmp
sbb
dec
pop
icebp
xchg
sub
jge
out
call
gs
jmp
call
popf
push
repnz
fcomp
cmp
dec
cmp
push
stc
jae
lock
xor
dec
cmp
pop
pop
stc
jae
lock
and
dec
cmp
int
icebp
ins
dec
fild
pop
mov
bound
inc
lock
add
dec
cmp
(bad)
jl
ins
mov
call
loope
in
dec
sti
sub
call
bound
dec
neg
mov
popf
scas
in
dec
out
dec
sti
push
adc
les
in
dec
repz
dec
sti
call
bound
inc
cli
call
bound
dec
mov
xchg
mov
fwait
scas
in
dec
mov
adc
add
in
dec
repz
mov
bound
dec
fld
dec
cmp
cmp
mov
fistp
mov
bound
inc
sti
call
bound
dec
out
adc
les
in
dec
fld
mov
mov
bound
inc
ret
scas
jmp
mov
popa
adc
sbb
test
stos
in
ds
pushf
cdq
sbb
out
inc
cwde
jecxz
fisub
scas
in
dec
aad
inc
out
sub
fisubr
loope
sbb
push
mov
xchg
mov
bound
dec
hlt
call
je
in
dec
jmp
adc
les
loope
xor
nop
test
mov
test
and
(bad)
lods
in
arpl
sbb
or
sub
popf
push
mul
jno
or
fimul
repnz
fmul
nop
fild
les
retf
push
stc
jae
mul
movs
iret
jle
aad
or
je
pop
shl
dec
rep
push
jecxz
sub
(bad)
sbb
addr16
mul
movs
out
xchg
mov
inc
ret
lods
jmp
dec
inc
out
pusha
jb
fs
scas
int
icebp
ins
dec
shl
mov
je
icebp
inc
retf
pusha
mov
gs
(bad)
bound
dec
repz
dec
sti
mov
int3
daa
mov
dec
repz
call
bound
(bad)
call
bound
dec
int
adc
les
ins
dec
sti
repz
add
in
dec
repz
mov
bound
dec
cli
call
bound
dec
lock
jo
in
dec
push
mov
jne
(bad)
iret
jmp
jmp
scas
jmp
adc
aad
scas
in
pop
rep
dec
jecxz
adc
les
in
dec
shr
mov
mov
bound
dec
sti
call
popf
mov
addr16
ds
sbb
add
inc
loop
mul
test
push
fdivr
mov
scas
jg
dec
repz
in
push
movs
push
call
clc
jae
mul
mov
push
in
dec
hlt
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
mul
lods
into
dec
pop
repnz
fcomp
stos
sub
int
dec
repnz
fmul
lods
sub
into
imul
nop
hlt
mov
push
fadd
mov
jb
into
dec
dec
cli
addr16
popf
push
pushf
test
jge
loope
adc
sbb
test
rep
dec
in
sub
(bad)
sbb
jae
mul
lods
iret
dec
pop
cli
inc
jmp
sub
fmul
sti
inc
jmp
sub
(bad)
jge
lock
std
mov
mov
popf
lods
shr
hlt
mov
xchg
pop
retf
pushf
adc
loope
scas
cld
push
clc
jg
jmp
push
bound
dec
loope
adc
les
in
dec
inc
ins
dec
sti
mov
mov
bound
dec
repz
mov
bound
mov
call
bound
dec
cmp
xchg
mov
imul
sti
addr16
les
in
in
pusha
pop
push
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
rcr
mov
jge
dec
xor
test
nop
mov
mov
test
nop
out
cdq
and
(bad)
lods
jmp
pop
sbb
stc
jnp
in
push
mov
popf
test
dec
repz
jb
in
dec
out
dec
sti
lea
les
dec
xchg
mov
or
dec
pop
repnz
fadd
mov
jo
into
dec
dec
icebp
inc
in
pusha
pop
jmp
stos
out
xchg
mov
mov
mov
mov
xchg
push
ret
mov
bound
jb
fs
mov
jb
fs
mov
dec
ret
or
inc
inc
repnz
loopne
jb
fs
stos
aad
or
adc
bound
(bad)
leave
fwait
adc
xlat
addr16
dec
sti
popf
adc
les
in
dec
repz
call
bound
xlat
sti
call
bound
dec
hlt
call
fs
in
dec
dec
ins
dec
sti
xor
les
in
dec
repz
popf
sub
call
repz
imul
mov
bound
dec
sti
call
addr16
cdq
mov
xchg
push
shr
xrelease
mov
xchg
ds
sbb
cmp
fld
stc
cmp
imul
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
dec
dec
mov
or
pop
repnz
fadd
nop
out
mov
je
xchg
mov
cmp
sbb
icebp
sbb
sbb
mov
outs
mov
pop
not
gs
scas
(bad)
jl
ins
mov
call
out
in
dec
sti
sub
call
arpl
dec
mov
xchg
mov
adc
ins
dec
sti
aad
mov
bound
dec
sti
call
bound
dec
cli
call
bound
dec
or
xchg
mov
fwait
scas
in
dec
cld
ins
dec
sti
cld
adc
add
in
dec
repz
dec
sti
call
bound
dec
fld
dec
cmp
sbb
or
scas
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
arpl
call
bound
dec
in
sbb
jg
sbb
cwde
push
in
mov
cmps
sub
ror
repnz
fmul
movs
sbb
xor
fdivr
mov
dec
fs
fld
inc
cmp
pusha
jb
fs
scas
in
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
in
arpl
daa
jmp
dec
stc
add
shl
sub
dec
dec
repnz
fmul
movs
sbb
loope
addr16
mov
lea
dec
sbb
add
push
shl
nop
in
cdq
es
xor
push
mov
popf
test
pop
lds
mov
push
loop
xchg
mov
bound
inc
ret
into
jmp
inc
out
call
gs
mov
mov
xchg
movzx
movs
dec
cmp
push
lock
and
dec
cmp
mov
ins
push
cwde
adc
les
inc
jmp
jmp
les
fisttp
ins
dec
sti
call
bound
dec
sti
call
bound
mov
add
in
sub
ins
dec
ins
call
jmp
sti
iret
adc
add
mov
bound
dec
sti
call
bound
ss
call
bound
dec
ret
mov
adc
dec
sti
xchg
adc
add
dec
dec
repz
in
sbb
jg
aad
or
mov
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
in
dec
fsubr
mov
mov
bound
inc
mul
lods
iret
dec
pop
lock
shl
mov
dec
dec
repnz
fmul
movs
sbb
cmp
inc
cdq
in
ds
mov
cmp
fisttp
inc
cmp
pusha
jb
fs
scas
in
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
in
js
ret
es
dec
(bad)
mov
test
jmp
mov
adc
sbb
mov
mov
xchg
pop
shr
nop
repnz
cmps
call
lock
mov
push
in
nop
or
pushf
push
adc
or
mov
bound
jb
fs
movs
test
mov
or
jl
test
mov
gs
fisubr
loope
fst
fwait
xchg
xchg
mov
inc
cmp
dec
repz
jbe
call
outs
xchg
jecxz
or
push
lock
cmp
out
dec
add
adc
les
in
call
adc
add
in
dec
rep
dec
sti
call
bound
mov
call
bound
dec
lock
add
dec
sti
fst
add
in
dec
repz
dec
sti
call
bound
mov
add
in
pslld
fwait
adc
les
inc
inc
in
sbb
gs
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
sti
call
pop
xchg
adc
ins
or
mov
mov
xchg
ds
pop
fwait
cdq
and
in
nop
in
ds
pop
fwait
cdq
push
jle
and
inc
sub
mov
iret
jge
loope
or
mov
xchg
mov
sub
call
bound
dec
jmp
xchg
mov
jnp
in
dec
out
ins
dec
sti
mov
movs
enter
mov
jae
shr
repz
mov
cmp
pop
sbb
jmp
fimul
repnz
fcomp
jmp
push
clc
inc
stos
out
enter
mov
inc
mov
push
clc
jae
mul
mov
add
dec
sti
call
pop
not
mov
jae
shr
pop
xchg
mov
pusha
popa
or
mov
mov
jbe
or
mov
mov
outs
push
call
bound
pusha
out
cmpxchg
xchg
mov
ins
pop
retf
cdq
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
cmps
add
in
add
ins
dec
add
xchg
mov
push
ins
dec
sti
or
mov
bound
dec
sti
call
bound
push
cli
call
arpl
dec
neg
mov
bound
dec
sti
(bad)
adc
les
in
dec
repz
call
bound
call
movs
enter
mov
jo
ret
out
jmp
scas
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
adc
dec
repz
dec
sti
call
bound
jle
call
popf
push
adc
inc
mov
pop
lea
cmps
in
lods
out
icebp
movs
adc
xor
mov
jecxz
shl
repnz
fsub
mov
js
aad
or
or
popf
push
jmp
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
imul
adc
jg
push
adc
inc
mov
or
repnz
fadd
sub
out
mov
pusha
jb
fs
pop
icebp
addr16
ds
sbb
dec
lock
jmp
sbb
lods
leave
outs
xchg
xor
movzx
cmc
dec
cmp
push
adc
sahf
mov
bound
mov
add
jge
loope
int
mov
test
nop
repz
inc
retf
inc
mov
gs
(bad)
test
pop
fwait
ret
les
out
dec
repz
je
call
jge
loope
icebp
xchg
mov
call
bound
jb
call
bound
mov
call
arpl
dec
repnz
adc
les
in
dec
loope
dec
sti
cmp
les
in
dec
repz
call
bound
inc
cli
call
bound
dec
in
adc
(bad)
cli
scas
in
dec
pop
ins
dec
sti
call
bound
dec
sti
call
jge
loope
(bad)
xchg
mov
test
mov
loop
cmp
ins
dec
repz
jb
in
dec
loopne
dec
sti
lea
les
in
dec
repz
dec
sti
call
bound
jnp
call
ja
aad
or
mov
mov
dec
pop
cdq
cdq
ss
add
inc
mov
sub
ror
repnz
fdiv
movs
sbb
cmp
in
xchg
mov
jb
xor
inc
jmp
jb
fs
inc
adc
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
outs
xchg
push
mov
xchg
push
in
mov
movs
or
add
xchg
mov
cmps
sub
out
xor
mov
scas
out
xchg
mov
movs
loope
stc
mov
test
stos
sub
adc
into
jge
out
call
gs
jmp
call
pushf
push
adc
inc
mov
cmp
dec
cmp
jno
in
push
mov
popf
push
hlt
add
in
push
mov
popf
push
out
push
aad
pop
rcl
push
mov
loope
out
mov
test
mov
call
loopne
dec
sti
bound
add
nop
dec
rep
inc
mov
cwde
mov
(bad)
imul
dec
rep
dec
sti
call
bound
mov
add
in
sub
ins
dec
lock
ds
in
dec
loopne
dec
sti
addr16
les
in
dec
repz
call
bound
add
call
arpl
dec
pop
call
mov
in
dec
cmc
dec
push
icebp
xchg
cmp
xchg
mov
sub
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
bound
dec
sti
call
bound
jae
gs
test
push
jmp
pop
xchg
scas
in
gs
and
mov
hlt
and
rcl
sub
bound
push
not
dec
fld
repnz
call
gs
cmps
in
dec
repz
sti
call
bound
push
sti
call
bound
jb
fs
pop
mul
jae
shl
nop
jmp
adc
and
push
movs
or
push
adc
cwde
push
repnz
lods
sub
out
mov
popa
sbb
cdq
sbb
dec
push
icebp
sbb
or
push
adc
or
mov
bound
jb
fs
movs
repnz
call
gs
mov
push
(bad)
pusha
jb
fs
mov
push
(bad)
pusha
jb
fs
scas
int
lock
dec
rcr
adc
push
mov
repnz
call
gs
scas
in
push
push
adc
fsub
in
sbb
ins
dec
mov
adc
les
ins
dec
sti
rcl
outs
mov
bound
dec
sti
call
bound
outs
cli
call
bound
dec
push
xchg
mov
ds
in
dec
add
jb
mov
bound
dec
sti
call
bound
das
cli
call
inc
mov
inc
retf
adc
or
(bad)
cmp
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
push
sti
call
bound
dec
xlat
call
jl
aad
or
mov
xchg
ds
pop
cwde
cdq
ss
add
adc
std
mov
cmp
in
mov
movs
adc
repnz
fsub
mov
jp
aad
or
or
cmp
ins
dec
repz
jb
in
dec
loopne
dec
sti
mov
les
in
dec
repz
dec
sti
call
popf
push
repnz
fcomp
cmps
sub
out
mov
pop
sar
mov
jbe
ror
repnz
clc
je
ret
add
inc
dec
push
fadd
movs
or
push
fimul
sti
adc
and
nop
xchg
fldcw
pushf
mov
xchg
push
icebp
lea
mov
popf
push
jmp
mov
xchg
mov
push
call
gs
movs
cmc
inc
retf
sub
nop
cmc
mov
je
xchg
mov
cmp
sbb
movs
iret
jp
aad
or
jns
add
in
fs
dec
std
mov
mov
popf
stos
enter
mov
jg
call
xchg
les
repnz
loopne
pop
(bad)
fild
mov
bound
cmp
call
bound
dec
out
fwait
adc
(bad)
fsubr
dec
sti
jmp
mov
bound
dec
repz
dec
sti
call
bound
cli
sti
call
bound
dec
sti
call
jno
(bad)
aad
sub
call
bound
dec
call
xchg
mov
jnp
in
dec
out
ins
dec
sti
test
les
in
dec
repz
dec
sti
call
popf
push
mul
jae
shr
mov
js
out
mov
scas
loop
mul
dec
je
sub
sbb
or
mov
mov
xchg
dec
mov
lahf
mov
bound
dec
sti
call
bound
push
jmp
cmp
sbb
lahf
push
hlt
mov
movs
or
or
inc
test
adc
adc
lahf
push
icebp
mov
movs
sub
out
mov
popa
sbb
jmp
arpl
dec
sti
lea
mov
popf
mov
addr16
jno
in
push
mov
popf
mov
mov
test
cmp
jbe
in
xchg
or
pushf
push
adc
dec
xchg
call
dec
jg
dec
cmc
inc
push
test
dec
dec
rep
out
call
bound
dec
cld
call
cmp
in
dec
pop
ins
dec
sti
xchg
adc
les
in
dec
rep
dec
sti
call
bound
fsincos
call
inc
test
inc
in
gs
(bad)
mov
mov
sahf
mov
bound
dec
sti
call
bound
push
sti
call
bound
jb
gs
test
pop
fadd
mov
jle
out
xchg
xchg
sub
cwde
shr
test
rep
dec
repz
ins
scas
in
dec
loopne
dec
sti
mov
rcr
mov
jae
shr
nop
repnz
cmps
in
inc
mov
adc
adc
pop
shr
nop
in
mov
pushf
push
ins
dec
std
mov
mov
mov
inc
jb
addr16
stos
in
std
icebp
ins
dec
ficomp
mov
jmp
dec
sti
call
bound
dec
add
mov
mov
in
dec
aaa
ins
dec
sti
push
adc
les
in
dec
repz
dec
sti
call
bound
push
cli
call
arpl
dec
hlt
fwait
adc
les
gs
in
push
mov
imul
mov
bound
dec
sti
call
bound
ins
sti
call
bound
dec
ret
(bad)
jmp
mov
popa
adc
pushf
cdq
and
or
inc
stos
in
ds
xchg
cwde
in
addr16
sub
lods
retf
aad
or
mov
fist
mov
bound
pop
sti
call
bound
dec
in
push
mov
popf
mov
mov
cmp
push
mov
add
test
sti
add
or
pop
fimul
cmc
addr16
imul
xchg
mov
bound
pop
call
imul
in
bound
mov
scas
out
xchg
mov
push
cmc
mov
adc
sbb
test
out
dec
rcl
sti
call
sbb
pop
dec
mov
test
in
dec
cmp
and
les
in
dec
repz
sti
call
bound
repz
call
bound
dec
movs
call
iret
scas
in
dec
cld
ins
dec
sti
popf
adc
les
retf
out
popa
push
jmp
adc
bound
dec
neg
mov
jno
in
dec
in
dec
sti
adc
bound
pop
(bad)
mov
lods
leave
dec
pop
repnz
fcomp
mov
jl
out
test
stos
in
mov
imul
test
push
inc
jmp
and
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
adc
inc
mov
pop
pushf
cdq
sub
pop
push
fmul
test
scas
mov
popf
push
mul
jno
or
pop
ror
cmp
fld
mov
test
mov
push
add
add
dec
dec
rep
outs
sti
call
daa
mov
dec
sti
call
bound
sub
call
bound
dec
or
mov
xchg
scas
in
dec
in
dec
sti
pop
adc
les
in
dec
repz
sti
call
bound
mov
call
bound
pop
push
mov
bound
dec
sti
call
bound
push
sti
call
bound
dec
rcr
mov
mov
jae
shr
nop
repnz
sbb
sar
jecxz
cdq
and
movs
(bad)
nop
in
bound
test
nop
aam
mov
dec
retf
pop
mov
gs
push
xchg
mov
imul
sti
mov
les
in
dec
repz
sti
call
popf
push
adc
inc
mov
sbb
test
push
loopne
lods
in
ds
pop
lahf
mov
movs
or
ds
pop
lahf
cdq
sub
add
test
or
jge
mov
repnz
dec
sti
xchg
adc
xlat
xchg
push
mov
xchg
push
shr
sbb
adc
nop
add
popf
push
cli
inc
call
jmp
dec
cli
inc
call
jmp
call
dec
rcr
dec
sti
call
jge
dec
imul
lods
xchg
mov
lds
dec
sti
pop
adc
les
in
dec
repz
adc
bound
out
call
bound
dec
bound
mov
bound
dec
sti
pushf
xor
test
mov
dec
sti
call
bound
pop
sti
call
bound
dec
ficomp
mov
mov
jae
shr
mov
stos
out
mov
popa
sbb
ds
sbb
xor
aas
mov
bound
dec
neg
mov
jno
in
dec
in
dec
sti
test
add
push
repnz
fcomp
nop
out
mov
addr16
inc
loopne
adc
js
sbb
popf
push
shl
jmp
cdq
sub
push
in
dec
cmc
dec
push
test
cmp
xchg
mov
stos
adc
inc
scas
in
pop
in
js
dec
mov
test
in
dec
xor
lock
les
in
dec
rep
dec
sti
call
bound
inc
cli
call
bound
dec
mov
mov
fild
dec
sti
xchg
adc
les
in
dec
rep
dec
sti
call
jge
dec
cmc
inc
mov
sahf
mov
bound
sti
call
bound
push
sti
call
bound
dec
xlat
call
cmp
inc
mov
sbb
push
push
loopne
lods
in
ds
sbb
repnz
fdiv
movs
adc
loope
loop
dec
ret
mov
inc
call
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
xchg
out
mov
xchg
push
hlt
mov
lods
sub
dec
inc
mul
jp
adc
lods
aad
stos
aad
or
out
sub
into
dec
inc
mul
jnp
sbb
xchg
mov
jge
mov
repnz
dec
sti
xchg
adc
xlat
xchg
push
mov
xchg
push
lock
mov
xchg
inc
mov
xchg
pop
shr
mov
call
or
in
or
jmp
add
push
movs
addr16
in
and
pop
call
test
dec
repz
call
bound
mov
call
bound
dec
push
call
shr
dec
sti
pop
adc
les
in
dec
repz
adc
outs
bound
inc
loop
adc
bound
dec
lock
jae
in
dec
out
dec
sti
adc
bound
pop
(bad)
mov
test
mov
xchg
ds
pop
cwde
cdq
sub
mov
stos
in
mov
imul
hlt
inc
in
pusha
pop
(bad)
mov
mov
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
popf
push
mul
jae
shr
mov
js
out
mov
inc
loop
adc
jne
sbb
popf
pop
shl
jmp
cdq
sub
add
pop
test
cmp
xchg
mov
call
bound
jb
call
bound
dec
sti
call
bound
dec
jmp
adc
les
in
dec
xchg
ins
dec
sti
mov
les
in
dec
repz
dec
sti
call
bound
(bad)
cli
call
bound
dec
sti
call
(bad)
scas
in
dec
movs
ins
dec
sti
loope
mov
(bad)
out
dec
repz
sti
call
bound
inc
ret
loop
inc
dec
adc
call
imul
mov
bound
sti
call
bound
fs
call
bound
gs
jmp
test
push
out
movs
in
ds
pop
call
in
inc
xchg
in
ds
pop
fwait
cdq
adc
(bad)
lahf
in
addr16
xor
pop
nop
retf
(bad)
cdq
or
add
dec
cmc
dec
push
lock
cmp
cmp
gs
ret
js
inc
call
in
inc
rep
dec
neg
mov
jbe
in
dec
in
dec
sti
adc
bound
push
mul
lods
fisttp
repnz
fcomp
mov
mov
test
mov
movs
or
arpl
outs
or
(bad)
mov
cmps
out
inc
lods
in
ds
pop
popf
cdq
sbb
xor
or
popf
push
icebp
inc
in
gs
in
sbb
ins
stos
call
mov
sahf
mov
bound
mov
or
imul
jecxz
loope
or
loope
rcl
dec
sbb
lods
fild
sti
mov
xchg
push
repnz
or
popf
push
out
dec
test
xchg
mov
dec
pop
in
dec
cmc
inc
push
icebp
test
pop
lahf
mov
mov
ins
pop
retf
sahf
adc
loopne
scas
cld
je
ins
dec
sti
xchg
push
cmps
add
in
shl
dec
sti
call
dec
scas
in
dec
mov
dec
sti
pusha
adc
les
in
dec
repz
sti
call
bound
mov
call
bound
dec
cdq
fwait
adc
les
dec
imul
sti
ins
adc
les
in
dec
repz
sti
call
bound
call
mov
mov
jae
mul
mov
outs
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
enter
pop
lahf
mov
mov
pusha
popa
or
mov
cmps
in
addr16
sbb
ds
pop
mov
nop
in
inc
xchg
loope
ret
mov
dec
pusha
repnz
fsub
mov
jno
aad
or
or
popf
push
jmp
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
push
call
out
mov
or
test
push
out
lods
in
ds
sbb
test
push
clc
jae
mul
stos
out
xchg
mov
add
push
test
nop
jmp
mov
scas
call
leave
imul
inc
retf
push
mov
add
outs
xchg
mov
or
dec
(bad)
sti
or
bound
push
mul
lods
fisttp
test
jmp
dec
lock
in
jg
ret
mov
inc
dec
inc
in
jg
ret
xchg
inc
call
dec
rcl
dec
sti
call
je
lock
in
jg
ret
fs
hlt
popa
scas
call
sti
call
push
icebp
dec
rep
mov
call
arpl
dec
sahf
fwait
adc
les
ins
dec
sti
rcl
add
mov
bound
sti
call
bound
inc
cli
call
bound
dec
add
mov
shr
sti
bound
les
in
dec
repz
call
bound
inc
ret
out
inc
dec
adc
call
imul
mov
bound
sti
call
bound
addr16
call
bound
jb
gs
test
push
out
movs
in
ds
pop
xchg
push
std
inc
stos
in
sbb
imul
mov
movs
sbb
in
dec
aad
inc
in
sbb
jle
repnz
call
gs
cmps
in
dec
repz
sti
call
bound
push
sti
call
bound
jb
fs
test
push
loopne
movs
in
mov
cmps
sub
out
test
popa
and
push
movs
sbb
adc
cwde
push
shr
nop
out
lea
stos
call
hlt
movs
or
in
dec
aad
inc
jecxz
or
popf
push
jmp
mov
xchg
mov
bound
mov
or
imul
mov
gs
into
jp
repnz
call
gs
movs
repnz
call
gs
(bad)
ins
bound
adc
(bad)
aad
or
or
popf
push
in
dec
repz
cld
call
bound
dec
repz
lds
enter
pop
cli
call
arpl
dec
push
fwait
adc
les
dec
fild
sti
xchg
adc
les
in
dec
repz
push
lds
sub
ins
sar
call
bound
dec
jno
adc
(bad)
shr
dec
sti
mov
mov
bound
dec
sti
call
bound
call
mov
mov
jae
mul
mov
ins
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
ins
sti
call
bound
dec
int
adc
les
dec
in
popa
inc
ret
sub
dec
clc
add
shl
sub
dec
dec
mul
jbe
sbb
mov
addr16
jae
ror
mov
dec
addr16
fsubr
imul
out
call
gs
push
pslld
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
fild
mov
hlt
add
push
test
nop
jmp
mov
adc
and
mov
mov
xchg
push
div
test
mov
popa
sbb
ds
sbb
repnz
fdiv
mov
ins
movs
repz
retf
push
mov
sbb
push
imul
repz
jge
loope
in
xchg
mov
cmp
aaa
jge
out
call
gs
pop
hlt
inc
in
bound
addr16
iret
jl
aad
push
xchg
mov
mov
mov
jge
out
call
gs
(bad)
jnp
rep
push
call
fs
dec
imul
(bad)
mov
xchg
ins
bound
dec
std
mov
mov
cwde
mov
mov
xchg
pop
retf
cdq
adc
loope
scas
cld
push
std
jg
jmp
jae
scas
in
dec
rep
dec
nop
call
cmp
ins
dec
sti
sub
les
in
dec
repz
dec
sti
call
bound
idiv
call
bound
dec
cmp
mov
mov
dec
sti
mov
lods
adc
out
rep
inc
sti
call
bound
dec
out
call
jns
in
dec
in
ins
dec
sti
mov
mov
bound
mov
gs
mov
push
fadd
mov
dec
dec
mul
jae
rol
test
jns
cli
pop
not
gs
cmps
in
dec
repz
dec
sti
call
bound
push
sti
call
jno
adc
nop
ds
push
mov
push
push
fadd
or
mov
mov
jbe
jbe
pop
fimul
icebp
sbb
push
sahf
push
ficomp
loopne
and
dec
sti
test
test
scas
js
popf
push
repnz
fcomp
mov
popf
mov
add
loopne
add
popf
push
cli
add
loopne
add
popf
push
out
ins
add
sti
mov
call
addr16
dec
mov
ds
in
dec
test
dec
sti
aaa
adc
les
in
dec
repz
call
bound
loopne
call
bound
dec
cld
call
(bad)
scas
in
dec
push
ins
dec
sti
dec
mov
out
jle
lock
test
fist
mov
bound
inc
sti
call
bound
dec
loope
adc
cld
pop
push
adc
mov
lods
sub
out
(bad)
mov
cmps
call
icebp
imul
dec
ss
gs
lods
or
in
inc
rep
dec
neg
mov
jbe
in
dec
jmp
dec
sti
test
test
scas
xchg
popf
push
hlt
addr16
or
inc
repnz
fmul
mov
popf
mov
mov
sub
out
mov
dec
repz
shl
mov
dec
rep
outs
sti
call
push
icebp
dec
rep
or
call
bound
dec
neg
mov
nop
scas
in
dec
or
dec
sti
adc
jle
les
in
dec
repz
call
bound
dec
cli
call
arpl
dec
mov
adc
les
in
dec
clc
ins
dec
sti
call
bound
dec
sti
call
bound
jb
gs
push
adc
popa
dec
sti
call
bound
pop
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
fsubr
mov
mov
bound
mov
test
nop
test
mov
cmp
pop
test
pop
fdiv
movs
adc
aas
pop
fsub
imul
out
jmp
push
popf
lods
(bad)
add
xchg
adc
les
in
dec
repz
call
bound
push
sti
call
imul
out
loop
adc
repz
jno
adc
cmps
out
xor
in
sbb
jge
(bad)
mov
mov
lods
sub
dec
dec
repnz
fmul
cmps
sub
je
scas
jmp
jmp
or
fstp
popf
push
jecxz
test
add
in
push
std
pusha
jb
fs
mov
inc
retf
sub
cmp
add
stos
into
jge
loope
aam
mov
test
mov
(bad)
mov
mov
outs
dec
in
or
fs
inc
in
inc
in
sbb
bound
sti
call
bound
dec
sti
call
bound
inc
sti
call
bound
dec
cmps
fwait
adc
les
scas
in
dec
jb
dec
sti
adc
xchg
mov
bound
dec
sti
call
bound
or
call
arpl
dec
xchg
mov
bound
dec
sti
or
mov
bound
dec
repz
loop
sub
fstp
aad
or
mov
fistp
mov
bound
pop
sti
call
bound
dec
in
adc
les
in
dec
fisubr
mov
mov
bound
pop
mul
lods
ror
repnz
fcomp
mov
dec
dec
cmc
addr16
jno
sbb
test
mov
jae
ror
stos
sub
out
test
pop
dec
repz
in
push
mov
bound
mov
inc
call
jmp
scas
in
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
in
jns
ret
es
inc
(bad)
mov
test
out
test
popa
sbb
mov
mov
xchg
push
div
lods
enter
inc
fadd
lods
sub
dec
jno
inc
fdiv
mov
or
mov
push
lock
cmp
mov
xor
mov
jge
loope
mov
add
fild
(bad)
mov
xchg
push
shr
mov
popf
test
mov
jnp
or
mov
mov
outs
push
call
bound
pusha
out
or
(bad)
pushf
push
adc
dec
sti
je
mov
jae
nop
dec
rep
inc
mov
stos
mov
bound
dec
sti
call
bound
pop
cli
call
arpl
dec
push
call
bound
dec
sti
aam
mov
(bad)
(bad)
in
dec
repz
dec
sti
call
bound
push
cli
call
arpl
dec
std
fwait
adc
les
dec
push
jecxz
cmp
push
adc
popa
dec
sti
call
bound
pop
sti
call
bound
dec
in
adc
les
dec
fldcw
mov
mov
bound
mov
gs
out
xchg
mov
mov
cmp
pop
mov
repnz
fdiv
stos
sub
out
mov
clc
and
rcl
or
xchg
mov
jp
hlt
inc
retf
xchg
mov
or
xchg
push
adc
call
bound
dec
out
call
jle
in
dec
shr
mov
mov
mov
jae
shr
sub
dec
inc
repnz
fadd
movs
pop
mov
repnz
fdiv
sbb
sbb
sahf
push
lock
cmps
sub
out
mov
test
mov
imul
out
jmp
mul
mov
add
dec
sti
popf
adc
cld
cmp
adc
xchg
or
cmp
dec
cmp
push
not
dec
cmp
push
not
dec
cmp
ins
dec
fld
mov
bound
inc
lock
pop
push
(bad)
jl
ins
scas
sti
call
daa
test
inc
rep
dec
jae
adc
les
scas
in
dec
cld
ins
dec
sti
stc
adc
les
in
dec
repz
sti
call
bound
ret
adc
adc
scas
in
dec
aad
inc
lock
mov
daa
cmps
in
dec
repz
mov
bound
pop
sti
call
bound
dec
jecxz
ds
call
clc
inc
mov
sub
out
mov
popa
sbb
mov
push
xchg
mov
sahf
push
ficomp
loop
and
dec
sti
lea
or
cmp
sbb
inc
ret
fucomi
inc
inc
hlt
inc
retf
pop
mov
gs
movs
imul
dec
ror
lods
cmp
ins
test
add
test
rep
dec
test
mov
ss
in
dec
jne
dec
sti
add
mov
bound
in
dec
repz
call
bound
aaa
sti
call
(bad)
scas
in
dec
aad
inc
shl
add
push
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
bound
push
lock
movs
or
repnz
fcomp
mov
dec
dec
mul
jnp
sbb
mov
push
xchg
mov
lahf
adc
pop
stos
jmp
arpl
dec
sti
test
mov
fimul
popf
mov
mov
mov
test
push
clc
push
jle
gs
xchg
dec
repz
in
nop
or
popf
scas
(bad)
jl
ins
lods
sti
call
es
inc
rep
dec
test
xchg
mov
ret
scas
in
dec
mov
xchg
adc
les
in
dec
repz
mov
bound
jmp
add
in
dec
aad
inc
shl
or
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
pop
lock
lods
sub
xchg
mov
mov
xchg
ds
sbb
repnz
fmul
mov
imul
xchg
mov
bound
push
lock
lods
int
pop
test
jmp
mov
je
xchg
mov
cwde
xor
in
lods
in
dec
fld
sti
pushf
aas
mov
jle
adc
lahf
adc
aad
scas
cld
addr16
psadbw
mov
imul
dec
sti
cmp
mov
bound
sti
call
bound
sar
adc
xchg
bound
dec
std
mov
or
imul
add
loope
rep
pop
sti
call
bound
dec
out
adc
out
out
mov
mov
pusha
popa
or
mov
cmps
jmp
lock
or
in
dec
aad
inc
out
sub
retf
mov
xor
mov
je
aad
or
mov
mov
lods
or
adc
nop
or
popf
lods
out
dec
shl
add
xchg
mov
jl
in
dec
fnstenv
out
sub
xlat
push
lods
in
movs
rep
dec
jmp
sub
dec
sti
or
les
in
dec
repz
sti
call
bound
iret
sti
call
bound
dec
sti
call
fs
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
(bad)
movs
or
mul
jbe
push
xchg
push
sbb
push
ror
cmp
fisttp
mov
lock
mov
bound
jb
gs
mov
inc
retf
sub
nop
hlt
cmp
or
mov
mov
xchg
inc
popa
scas
in
outs
ins
dec
std
mov
mov
popf
mov
mov
ins
dec
call
xchg
mov
inc
scas
in
pop
out
pusha
inc
mov
ret
(bad)
aam
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
lods
call
outs
test
dec
mov
dec
sti
call
bound
inc
sti
call
bound
out
loope
out
mov
xchg
mov
mov
mov
mov
cmp
in
dec
rep
dec
sti
call
popf
push
mul
ja
in
sbb
jne
sbb
jae
mul
mov
inc
lods
in
dec
sar
sti
call
js
in
hlt
ins
dec
sti
popf
adc
les
in
dec
repz
dec
sti
call
bound
call
stos
iret
gs
call
bound
dec
jmp
adc
jae
test
push
fcomp
nop
icebp
sbb
ret
jo
inc
call
in
movs
rep
dec
jmp
sub
dec
sti
nop
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
test
adc
les
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
(bad)
movs
or
hlt
add
push
xchg
push
pop
pushf
cdq
and
(bad)
scas
and
dec
sti
pushf
xor
push
push
adc
test
inc
xchg
mov
bound
inc
ret
xlat
jmp
movs
icebp
inc
retf
sub
nop
cmc
(bad)
mov
mov
xchg
dec
clc
sahf
xor
in
lods
in
dec
(bad)
sti
pushf
aas
mov
jnp
adc
stos
adc
inc
scas
in
pop
in
inc
mov
xchg
mov
(bad)
lock
dec
repz
call
bound
jno
call
bound
dec
loopne
or
daa
test
dec
sti
call
bound
pop
sti
call
outs
test
xchg
push
shr
nop
hlt
(bad)
cdq
xor
fadd
movs
pop
iret
test
rep
dec
loope
cmp
mov
in
retf
sbb
hlt
lea
and
cdq
adc
inc
cs
dec
repz
push
cli
call
gs
in
dec
rep
dec
sti
cmps
adc
les
in
dec
repz
sti
call
bound
dec
fnsave
mov
bound
dec
sti
call
bound
dec
loopne
ds
mov
mul
ja
or
mov
fs
je
xchg
mov
call
bound
pop
rcr
adc
or
scas
in
dec
push
ins
dec
sti
xchg
adc
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
sub
adc
iret
dec
adc
inc
fcom
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
sti
call
imul
sbb
repnz
fadd
nop
in
mov
dec
repz
loopne
or
cmp
inc
adc
sahf
mov
bound
mov
or
imul
mov
popf
mov
popf
push
adc
xor
call
add
inc
jecxz
sub
xlat
push
lods
in
stos
rep
dec
jmp
sub
dec
sti
xchg
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
sti
call
fs
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
(bad)
movs
or
cmc
add
push
cmp
pop
popf
cdq
and
pushf
dec
ins
dec
std
mov
mov
lock
mov
bound
add
or
out
mov
mov
xchg
dec
sbb
mov
outs
push
call
bound
pusha
jecxz
add
popf
scas
in
pop
ret
push
mov
jl
in
stc
ins
dec
sti
call
(bad)
leave
in
dec
repz
dec
sti
call
bound
pop
sti
call
bound
inc
rcl
inc
xchg
mov
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
cmps
sub
out
mov
adc
xchg
mov
bound
inc
shl
mov
call
fcomp
sub
pusha
lods
repnz
in
and
sbb
adc
int
cmps
in
dec
repz
sti
call
bound
or
call
bound
dec
sub
adc
fsubr
test
rep
dec
call
mov
push
ins
dec
sti
mov
out
shl
mov
sub
out
mov
dec
repz
in
xchg
and
scas
inc
cmp
ins
xchg
sti
call
es
inc
rep
dec
jns
adc
(bad)
sti
scas
in
dec
mov
adc
les
in
dec
rep
dec
sti
call
bound
xor
call
fsubr
inc
shl
cmpxchg
cs
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
movs
sub
xchg
mov
mov
mov
mov
mov
dec
sti
pushf
xor
add
outs
sub
int
inc
xchg
mov
push
in
dec
in
addr16
ret
retf
inc
cli
inc
retf
sub
cmc
mov
mov
xchg
dec
in
or
sub
mov
fs
inc
in
jb
gs
scas
pop
dec
rep
pop
sti
call
bound
dec
jbe
adc
(bad)
jmp
ins
dec
sti
in
mov
bound
in
dec
repz
call
bound
dec
sti
call
inc
mov
inc
lock
mov
bound
dec
sti
call
bound
push
sti
call
bound
(bad)
in
ds
pop
pushf
cdq
xor
(bad)
mov
test
jmp
mov
scas
jmp
push
mov
into
jle
aad
or
mov
cdq
je
jle
test
rep
dec
loopne
sub
fmul
lock
out
addr16
gs
mov
je
xchg
mov
cwde
xor
in
scas
in
dec
(bad)
sti
pushf
aas
mov
jp
adc
cdq
adc
aad
scas
cld
addr16
psadbw
mov
ins
scas
in
dec
xchg
ins
dec
sti
or
les
in
dec
repz
dec
sti
call
bound
out
sti
call
bound
dec
std
mov
stos
iret
dec
pop
jmp
sti
ins
dec
sti
lahf
adc
les
in
dec
repz
call
bound
push
sti
call
jp
pop
push
fcomp
mov
stos
out
(bad)
mov
sbb
sar
mov
ja
add
scas
jmp
in
push
lock
mov
add
dec
sti
call
imul
mov
popf
mov
popf
push
adc
cdq
pop
icebp
test
xor
dec
cmp
dec
rep
push
cdq
adc
les
inc
in
addr16
gs
cmps
in
push
repnz
dec
fcomp
mov
dec
leave
ins
dec
sti
std
adc
les
in
dec
rep
dec
sti
call
bound
dec
sti
call
push
push
std
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
shl
add
je
sbb
pop
shl
jmp
mov
fs
repnz
stos
sub
call
outs
test
fcom
xor
cmp
sbb
ja
ret
icebp
jmp
mov
(bad)
stc
call
dec
retf
in
dec
cmc
inc
push
not
mov
bound
dec
repnz
and
dec
sti
call
bound
dec
repz
ror
mov
bound
dec
sti
call
bound
push
div
scas
out
xchg
mov
mov
rcl
imul
add
in
jo
ins
dec
jmp
xor
dec
sti
daa
adc
les
in
dec
repz
call
bound
cli
sti
call
bound
dec
jmp
adc
les
in
dec
adc
adc
les
retf
push
std
addr16
push
test
mov
xor
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
push
add
pushf
mov
xchg
push
shr
nop
hlt
lea
mov
xchg
pop
sbb
xor
mov
rol
jns
xchg
mov
jnp
repnz
clc
push
or
lods
(bad)
cmp
out
dec
rep
inc
sti
call
bound
jb
gs
cmps
(bad)
mov
nop
or
popf
push
cli
addr16
jo
or
enter
mov
xchg
dec
fisttp
adc
add
lds
cwde
xor
in
scas
in
dec
fisttp
mov
push
pusha
inc
ret
pop
jmp
inc
in
dec
repz
sti
mov
inc
sar
dec
rep
leave
sti
call
bound
dec
pop
call
ins
scas
in
dec
xchg
ins
dec
sti
enter
xchg
mov
bound
in
dec
repz
xchg
mov
je
(bad)
lock
addr16
inc
pushf
push
mov
xchg
mov
bound
dec
lock
jae
in
dec
out
dec
sti
lea
les
in
fsub
push
shl
nop
test
push
shl
nop
call
jg
dec
repz
jecxz
or
popf
stos
out
sub
fwait
adc
les
out
mov
ds
sbb
mov
jp
push
sbb
or
out
ins
movs
outs
dec
sti
mov
call
push
lock
mov
bound
sti
call
gs
call
bound
dec
jo
adc
(bad)
jmp
sti
aas
adc
les
in
dec
repz
sti
call
bound
popa
inc
test
sub
mov
push
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
bound
push
icebp
xchg
ds
pop
lahf
cdq
cmp
jmp
mov
push
mov
or
inc
test
rcl
les
inc
jmp
add
rcr
cmp
in
dec
rep
dec
sti
call
popf
push
icebp
addr16
inc
loop
sub
fmul
sti
inc
jmp
add
int
lock
dec
rcr
mov
jnp
aad
or
mov
call
bound
popa
mov
xchg
mov
bound
dec
scas
call
bound
dec
sti
pop
adc
les
in
dec
repz
call
bound
call
mov
inc
clc
inc
cld
std
fistp
les
jmp
adc
aad
scas
in
pop
rep
dec
in
call
jp
mov
inc
mov
xchg
ds
sbb
cmc
addr16
jne
adc
cdq
daa
mov
in
dec
cmc
dec
push
icebp
mov
and
cmp
mov
xor
mov
jne
aad
or
mov
mov
mov
and
mov
inc
mov
cmp
int
lock
dec
fstp
xchg
lds
(bad)
push
stc
jp
ret
sub
hlt
scas
add
pop
sti
call
bound
dec
pop
call
bound
dec
sti
sbb
mov
(bad)
std
in
dec
repz
sti
call
bound
ret
sti
call
inc
mov
addr16
jp
shl
adc
or
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
pop
shl
nop
test
cmps
out
jmp
dec
cmp
fisttp
mov
imul
in
dec
inc
xchg
mov
gs
in
dec
jmp
jmp
mov
inc
retf
sub
add
or
hlt
cmp
or
mov
cdq
adc
inc
push
in
dec
repz
aam
call
imul
push
add
cld
addr16
psadbw
mov
bound
dec
sti
adc
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
std
mov
scas
iret
dec
pop
jmp
sti
ins
dec
sti
lahf
adc
les
in
dec
repz
sti
call
bound
push
sti
call
jge
(bad)
mov
addr16
push
test
nop
icebp
mov
cmps
call
icebp
movs
or
in
dec
aad
inc
in
push
and
cmp
mov
xor
mov
js
aad
or
mov
mov
mov
pop
xchg
adc
sbb
or
adc
mov
push
add
in
dec
fnstenv
in
push
adc
in
pop
ret
push
push
call
dec
jmp
or
ins
dec
sti
stc
adc
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
jo
adc
les
dec
push
lock
lods
or
in
dec
repz
mov
bound
pop
sti
call
bound
dec
jecxz
ds
imul
xchg
ds
sbb
repnz
fmul
jae
xchg
mov
je
test
sbb
cmp
test
rep
dec
repz
sub
mov
inc
mov
cmp
(bad)
mov
mov
mov
data16
int
icebp
ins
dec
fndisi(8087
pop
mov
bound
inc
ret
(bad)
xchg
mov
jno
out
dec
sbb
mov
ret
daa
mov
dec
sti
call
bound
jmp
add
in
inc
rep
dec
mov
xchg
mov
lock
in
dec
mov
sbb
mov
bound
mul
xchg
add
sar
dec
rep
dec
sti
call
bound
dec
out
call
jle
in
dec
call
ds
sbb
push
push
stc
inc
movs
jecxz
stc
movs
or
cli
adc
call
pop
retf
adc
test
inc
xchg
mov
bound
inc
lock
lods
enter
inc
out
addr16
gs
mov
je
xchg
mov
cwde
xor
in
scas
in
dec
fisttp
lods
or
adc
adc
xchg
dec
mov
dec
sti
call
bound
sar
call
bound
dec
push
xchg
mov
adc
dec
sti
cmp
les
in
dec
repz
dec
sti
call
jle
xabort
gs
shl
mov
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
pop
lock
movs
out
xchg
mov
add
or
mov
addr16
jae
sar
nop
fisttp
daa
dec
repz
in
nop
add
popf
stos
out
sub
cwde
adc
les
in
dec
repz
ret
scas
jmp
mov
pop
lock
lods
out
xchg
mov
mov
mov
mov
mov
dec
sti
call
pusha
(bad)
popf
dec
rep
push
cwde
adc
les
inc
in
jb
fs
scas
in
dec
loop
dec
jmp
les
in
dec
repz
sti
call
bound
ss
call
bound
dec
mov
xchg
mov
xor
dec
sti
dec
fidivr
imul
add
in
rep
inc
sti
call
bound
dec
loop
adc
les
out
jle
inc
shl
nop
test
mov
mov
cmps
sub
out
cmp
out
cmpxchg
repnz
cmp
add
mov
xchg
mov
bound
add
sbb
imul
mov
popf
mov
popf
push
adc
dec
sti
mov
call
push
lock
mov
jno
call
sti
mov
mov
dec
repz
call
bound
dec
sti
call
bound
dec
scas
call
jp
repnz
inc
std
fist
mov
bound
inc
sti
call
bound
dec
in
xchg
adc
mov
cli
addr16
je
or
retf
mov
xor
mov
jns
(bad)
iret
out
inc
mov
nop
or
popf
push
sti
addr16
je
in
sbb
pusha
lods
jmp
sti
mov
call
popa
inc
mov
mov
in
dec
repz
dec
sti
call
bound
ja
call
inc
test
inc
hlt
sub
call
bound
dec
neg
mov
je
(bad)
sti
out
inc
mov
mov
lods
sub
out
xchg
mov
dec
sti
pushf
xor
popf
scas
in
pop
ret
outs
dec
ficomp
mov
jne
in
clc
ins
dec
sti
movs
adc
les
in
dec
rep
dec
sti
call
bound
xor
call
bound
dec
jecxz
or
daa
test
dec
sti
call
bound
pop
sti
call
outs
test
stc
inc
mov
nop
ds
push
mov
repnz
fadd
mov
daa
scas
in
dec
repz
or
popf
mov
mov
xchg
sub
fisttp
cmc
inc
in
gs
ret
cli
jmp
scas
in
ins
sub
sti
mov
mov
outs
cmps
test
rep
dec
mov
xchg
mov
push
scas
in
dec
hlt
ins
dec
sti
lods
adc
les
in
dec
rep
dec
sti
call
dec
mov
dec
mov
dec
sti
call
bound
inc
sti
call
outs
test
fcom
nop
hlt
mov
pushf
ds
dec
std
mov
cwde
cld
mov
ins
dec
call
xchg
mov
jae
in
pop
fsubr
dec
mov
jmp
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
lahf
call
aaa
scas
in
dec
and
lods
or
push
dec
mov
dec
sti
call
bound
inc
sti
call
bound
dec
out
adc
out
out
mov
mov
inc
mov
sbb
repnz
fadd
movs
or
in
dec
aad
inc
out
sub
shl
aas
stos
sub
call
imul
mov
popf
mov
cdq
push
icebp
xchg
xor
cmp
jle
rep
push
cwde
adc
les
inc
out
addr16
gs
scas
in
dec
aam
dec
jmp
les
in
dec
repz
dec
sti
call
bound
adc
call
bound
dec
cld
call
jns
repnz
inc
std
fist
mov
bound
inc
sti
call
bound
dec
in
xchg
ds
pop
mov
cli
addr16
jno
or
shl
je
sub
call
outs
xchg
nop
mov
xchg
push
shr
mov
lahf
mov
mov
inc
mov
or
sar
popf
push
out
ins
ds
dec
sti
mov
call
popa
inc
mov
xchg
mov
bound
dec
sti
call
bound
dec
sti
call
inc
test
inc
hlt
sub
call
bound
dec
neg
mov
jnp
(bad)
sti
jmp
sub
out
xchg
mov
mov
pushf
xor
popf
scas
in
pop
ret
push
mov
js
in
stc
ins
dec
sti
les
les
in
dec
repz
sti
call
bound
jo
call
bound
inc
rcl
inc
xchg
mov
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
mov
mov
psubd
mov
jne
(bad)
retf
popa
add
cmp
jne
loop
sub
(bad)
popa
(bad)
pushf
dec
rep
push
cdq
adc
les
inc
cli
sub
call
bound
dec
int
adc
les
in
dec
mov
dec
sti
lods
adc
les
retf
in
dec
mov
xchg
mov
bound
dec
sti
call
bound
pop
shl
nop
test
call
mov
cmps
or
adc
shl
in
imul
pop
loopne
sbb
les
in
dec
leave
ins
dec
sti
rcl
bound
dec
sti
call
bound
sbb
call
scas
test
dec
call
mov
push
ins
dec
sti
mov
les
loope
pop
jne
add
inc
ror
sti
addr16
adc
pop
mov
and
dec
sti
test
sub
stos
out
cwde
mov
push
call
gs
mov
mov
cdq
xor
in
scas
in
dec
fcomi
dec
sti
pushf
aas
cmps
or
scas
in
dec
rep
dec
mov
xchg
mov
and
dec
sti
lods
adc
les
in
dec
repz
popf
sub
in
dec
repz
mov
bound
pop
sti
call
dec
push
mul
jnp
jbe
pop
adc
scas
in
dec
aad
inc
rol
aas
sub
dec
cmp
(bad)
jl
ins
jge
call
ss
pop
rep
dec
push
call
shr
sti
sub
les
in
dec
repz
dec
sti
call
bound
xchg
call
bound
dec
daa
call
mov
in
dec
cmc
dec
push
lock
cmps
or
in
dec
repz
pop
mov
bound
pop
sti
call
bound
dec
ficomp
mov
jne
aad
or
mov
mov
movs
or
add
inc
mov
bsr
outs
test
loopne
int3
movs
or
in
dec
aad
inc
loop
sub
(bad)
pusha
into
repnz
stos
sub
call
bound
dec
out
sub
(bad)
sbb
inc
mov
or
adc
xchg
ds
sbb
out
or
mov
popa
scas
in
fs
ins
dec
std
mov
lods
add
in
dec
fisttp
xchg
xor
out
clc
push
add
scas
in
dec
aam
dec
jmp
les
in
dec
repz
call
bound
sbb
add
in
xor
ins
dec
movs
call
je
repnz
inc
std
fist
mov
bound
inc
sti
call
bound
dec
out
ds
sbb
pop
hlt
addr16
jo
or
pop
shl
add
adc
shr
nop
mov
xchg
push
repnz
lods
or
adc
mov
movs
or
adc
lahf
dec
sti
call
xchg
inc
repnz
mov
bound
jl
call
bound
dec
sti
call
fs
pop
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
loopne
inc
jp
add
inc
ror
sti
addr16
adc
popf
push
in
pop
ret
push
mov
jg
in
clc
ins
dec
sti
(bad)
adc
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
loope
push
mov
pop
mov
fs
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
dec
or
inc
fcom
nop
repz
push
fadd
in
pop
shl
dec
rep
push
mul
movs
out
xchg
mov
cmp
test
jns
aad
or
mov
cdq
xor
in
lods
in
dec
fisttp
sti
pushf
aas
cmps
or
scas
in
jp
ins
dec
mov
xchg
mov
and
dec
sti
xchg
adc
les
in
dec
repz
popf
sub
dec
repz
mov
bound
pop
sti
call
dec
push
hlt
addr16
popa
jb
pop
adc
scas
in
dec
aad
inc
rol
aas
and
dec
cmp
in
pop
ret
outs
dec
push
call
dec
jmp
or
ins
dec
sti
adc
mov
(bad)
iret
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
jge
adc
les
dec
push
lock
mov
daa
cmps
in
dec
repz
mov
bound
pop
sti
call
bound
dec
loope
ds
dec
pop
repz
jae
shr
nop
in
mov
push
fmul
mov
imul
xchg
pop
shl
dec
rep
push
lock
lods
int
pop
hlt
inc
in
jb
gs
mov
mov
cwde
xor
in
lods
in
dec
fild
mov
jg
adc
stos
pop
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
sti
call
bound
push
call
mov
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
dec
xchg
test
mov
dec
add
sbb
add
test
rep
dec
fistp
mov
push
ins
dec
sti
mov
mov
bound
dec
sti
call
jp
(bad)
pushf
imul
in
dec
inc
xchg
mov
scas
in
dec
in
popa
inc
lea
inc
sbb
dec
repz
jecxz
adc
test
dec
repz
dec
sti
mov
pop
sar
dec
rep
inc
sti
call
bound
dec
leave
call
push
scas
in
dec
rep
dec
sti
dec
int
add
and
or
mov
bound
dec
in
nop
ds
sbb
cli
inc
fadd
dec
xchg
scas
adc
in
push
scas
in
inc
fnstcw
rol
adc
(bad)
(bad)
imul
dec
repz
dec
sti
mov
mov
sar
dec
rep
outs
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
and
cmps
or
repnz
stos
sub
call
push
xchg
push
icebp
mov
mov
bound
loopne
stos
push
mov
jae
in
pop
jmp
add
in
dec
rep
dec
sti
call
bound
inc
call
test
rep
dec
in
nop
ds
mov
sub
push
mov
(bad)
mov
dec
repz
adc
bound
dec
sti
call
inc
test
fcomi
ins
dec
call
xchg
mov
jae
in
pop
in
dec
mov
xchg
mov
bound
dec
sti
call
bound
dec
clc
sti
or
pop
shl
dec
rep
jae
call
dec
push
sti
inc
fsubr
mov
gs
call
bound
dec
cld
call
mov
in
dec
cmc
dec
pusha
stc
cmc
sub
add
dec
loopne
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
push
call
bound
dec
sti
call
fs
inc
fdivr
pop
shl
dec
rep
push
icebp
mov
mov
dec
sbb
and
ins
dec
icebp
mov
mov
cmp
in
sbb
ins
dec
rcr
mov
push
in
dec
fldcw
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jo
add
mov
bound
out
call
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
fcomp
mov
bound
dec
sti
test
les
xor
ins
loop
imul
in
dec
rep
dec
sti
call
dec
push
hlt
inc
fcomp
dec
clc
cmc
sub
push
pop
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
popa
sti
call
bound
dec
fistp
mov
fs
inc
fdivr
pop
shl
dec
rep
pop
icebp
mov
cmps
sub
dec
sbb
and
ins
dec
icebp
mov
mov
cmp
in
sbb
ins
dec
rcr
mov
push
in
dec
fldcw
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jnp
add
mov
bound
out
call
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
fstp
mov
push
scas
in
dec
rep
dec
sti
call
bound
dec
repz
loop
imul
mov
adc
call
dec
adc
or
shr
pop
mov
or
inc
push
icebp
mov
mov
(bad)
enter
jge
sti
mov
mov
shl
rep
push
sti
call
bound
dec
in
call
sbb
test
rep
dec
call
cdq
or
pop
pop
stc
inc
cmp
cmp
out
jnp
jmp
adc
les
in
dec
rep
dec
sti
call
bound
sar
mov
les
in
dec
loop
jp
fistp
les
int
rep
push
call
bound
dec
fistp
mov
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
test
adc
into
dec
add
pop
ret
outs
dec
sbb
jmp
stc
ins
dec
sti
movs
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
std
mov
mov
add
dec
sti
sahf
adc
les
in
dec
repz
shl
xor
push
stc
inc
jmp
mov
mov
dec
in
in
dec
stc
inc
dec
rcr
adc
into
dec
daa
in
dec
loopne
dec
sti
loop
mov
jae
aad
mov
dec
sti
call
bound
dec
sti
call
bound
dec
lds
mov
push
scas
in
dec
and
mov
pusha
into
sti
adc
call
bound
push
icebp
mov
movs
or
lock
sar
cmp
out
dec
jmp
call
call
cmp
call
fs
call
bound
dec
sti
call
inc
scas
in
dec
xlat
ins
dec
sti
dec
repz
push
or
mov
bound
mul
mov
mov
or
inc
push
icebp
mov
mov
add
ins
dec
jmp
les
in
dec
rep
dec
sti
call
bound
push
sti
call
cmp
in
dec
rep
dec
sti
call
dec
push
cli
inc
fsub
add
dec
rep
dec
cld
call
bound
dec
sti
popf
adc
les
retf
data16
dec
call
xchg
mov
jae
in
pop
call
adc
les
in
dec
repz
sti
call
bound
dec
clc
sti
or
pop
shl
dec
rep
push
icebp
mov
lods
sub
dec
addr16
and
or
pop
shl
dec
rep
dec
sti
call
bound
dec
sub
mov
clc
scas
in
pop
ret
outs
dec
popf
call
jne
jmp
cmc
ins
dec
sti
call
bound
dec
sti
call
bound
push
mov
xchg
mov
bound
push
shl
mov
pop
mov
sub
inc
cld
fist
mov
bound
dec
sti
call
bound
dec
std
mov
mov
push
stos
in
inc
repnz
dec
fcomp
mov
dec
xchg
ins
dec
sti
enter
iret
mov
(bad)
or
call
bound
dec
sti
call
push
push
std
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
shl
add
jg
sbb
popf
push
shl
jmp
mov
jge
mov
repnz
dec
sti
sahf
adc
out
out
(bad)
mov
push
mul
movs
out
xchg
mov
push
call
gs
xchg
dec
repz
jecxz
sbb
or
in
dec
mov
dec
sti
call
bound
dec
sti
call
bound
dec
fnsave
mov
bound
dec
sti
call
bound
dec
loopne
or
pop
lock
jno
or
mov
fs
inc
fdiv
pusha
ret
imul
call
or
pop
sti
call
bound
dec
jae
adc
les
in
dec
xchg
ins
dec
sti
adc
les
in
dec
repz
call
bound
jmp
call
inc
mov
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
popa
ja
sbb
jge
(bad)
mov
mov
mov
dec
dec
repnz
fmul
mov
imul
movs
sub
test
rep
dec
in
sub
fmul
test
jmp
mov
je
xchg
mov
cwde
push
mov
dec
ins
in
dec
cmc
inc
push
icebp
sbb
sbb
dec
cmp
(bad)
jl
ins
push
cli
call
outs
cmps
test
rep
dec
sbb
in
dec
xchg
ins
dec
sti
les
les
in
dec
rep
dec
sti
call
bound
pop
icebp
xchg
nop
enter
bound
dec
cld
call
ins
scas
in
dec
loope
dec
sti
(bad)
adc
out
les
mov
pop
pushf
cdq
sub
push
fadd
test
bound
pop
mul
stos
out
xchg
mov
push
call
gs
mov
mov
mov
xchg
ret
pusha
scas
in
fs
ins
dec
std
mov
mov
sar
dec
rep
or
call
bound
dec
mov
xchg
mov
bound
dec
sti
pushf
xor
scas
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
cmps
sub
sub
jmp
call
sub
les
(bad)
jl
ins
inc
cli
call
outs
cmps
test
rep
dec
pushf
call
fs
in
dec
cmps
ins
dec
sti
std
adc
les
in
dec
repz
sti
call
bound
popa
aaa
pushf
push
mov
bound
dec
neg
mov
jno
in
dec
in
dec
sti
test
sub
lods
int
push
mul
jae
shr
nop
out
sbb
mov
xchg
mov
bound
push
shl
mov
call
fcomp
sub
cmp
int
repnz
dec
(bad)
sub
bound
paddb
mov
bound
dec
sti
cmps
adc
les
in
dec
repz
dec
sti
call
dec
mov
dec
mov
dec
sti
call
bound
inc
sti
call
outs
test
fcom
nop
hlt
mov
pushf
push
ins
dec
std
mov
dec
cmp
fisttp
jns
sti
call
gs
call
bound
dec
xor
mov
repnz
in
dec
ins
ins
dec
sti
push
adc
les
in
dec
rep
dec
sti
call
bound
call
mov
inc
clc
inc
in
fistp
add
loope
rep
inc
sti
call
bound
dec
out
adc
les
in
dec
in
gs
ret
out
inc
dec
(bad)
mov
xchg
push
sbb
test
push
fmul
mov
dec
bound
bound
pop
lock
mov
add
dec
sti
call
bound
mov
gs
nop
test
mov
add
je
cli
inc
retf
jp
add
xor
in
lods
in
dec
fstp
sti
pushf
aas
fwait
mov
jge
dec
repz
pop
cli
call
pop
inc
adc
mov
les
in
dec
loop
paddb
sbb
bound
in
sti
call
bound
dec
push
call
call
ins
dec
sti
push
adc
les
in
dec
repz
popf
pop
popf
mov
addr16
push
repz
gs
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
shr
xrelease
mov
lea
pop
sbb
in
dec
aad
inc
in
push
and
cmp
mov
xor
mov
jnp
aad
or
mov
mov
lods
or
adc
sbb
or
mov
popf
push
adc
dec
mov
call
dec
into
in
dec
cmc
inc
push
icebp
test
mov
or
mov
dec
sti
call
gs
call
bound
dec
icebp
call
xor
dec
sti
ret
adc
les
in
dec
repz
ja
add
jmp
jmp
sbb
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
mov
xchg
mov
mov
mov
movs
or
pop
fmul
repnz
fmul
mov
imul
leave
pop
shl
dec
rep
push
lock
lods
int
pop
cmc
inc
jmp
sbb
out
(bad)
xchg
mov
cwde
xor
in
scas
in
dec
fstp
mov
jns
adc
call
bound
inc
sti
call
bound
dec
cmps
call
ss
in
dec
leave
ins
dec
sti
call
(bad)
sti
in
dec
repz
mov
call
rep
dec
sti
call
bound
dec
jmp
adc
les
(bad)
jmp
mov
xchg
mov
mov
cs
test
rep
dec
in
sbb
jnp
sbb
jbe
ret
jmp
inc
inc
test
pop
fwait
nop
xchg
mov
inc
push
in
dec
repz
xchg
cli
call
push
in
dec
hlt
ins
dec
sti
call
(bad)
out
in
dec
repz
sti
call
bound
call
movs
iret
gs
call
bound
dec
jmp
adc
ja
test
push
fcomp
nop
icebp
mov
dec
cmc
dec
push
div
dec
cmp
jle
sti
call
push
out
rep
cmp
add
in
dec
rep
dec
nop
call
adc
ins
dec
sti
icebp
adc
les
in
dec
repz
jecxz
ds
shl
rep
inc
sti
call
bound
dec
out
call
jge
(bad)
mov
inc
mov
sub
out
(bad)
mov
cmps
std
push
loop
xchg
mov
bound
inc
mul
scas
out
xchg
mov
and
sub
into
jp
aad
or
mov
cdq
adc
scas
in
dec
fnstenv
repnz
mov
bound
jl
call
bound
dec
(bad)
call
fs
push
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
loopne
inc
jo
add
inc
fmul
cmc
addr16
adc
popf
push
in
dec
loopne
dec
sti
jl
mov
jae
test
sti
call
bound
dec
sti
call
bound
dec
sti
call
jmp
sti
or
les
push
dec
repz
loopne
ds
sbb
in
rep
dec
sti
call
bound
dec
call
xchg
mov
jnp
in
dec
out
ins
dec
sti
mov
nop
mov
in
push
jbe
or
cdq
das
je
add
repnz
imul
mov
inc
mov
push
clc
push
sub
lods
mov
rep
dec
sti
call
popf
push
cli
addr16
inc
in
sub
fisttp
test
jmp
(bad)
ss
rep
bound
fwait
adc
fisubr
icebp
mov
xchg
dec
sti
mov
les
in
dec
loop
push
cld
fistp
mov
bound
inc
sti
call
bound
dec
fs
repz
in
dec
outs
ins
dec
sti
xchg
adc
les
in
dec
repz
call
bound
popa
dec
test
mov
cmp
hlt
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
or
repnz
fcomp
lods
sub
out
mov
popa
push
xchg
pop
sbb
jae
mov
lea
movs
or
adc
or
mov
bound
pop
lock
lods
enter
inc
fcomp
mov
mov
cmp
inc
mov
or
out
ins
add
sti
mov
call
dec
dec
stc
call
dec
jne
dec
cmc
inc
pop
icebp
test
mov
jg
cmp
pop
dec
sti
jl
mov
jae
test
mov
dec
sti
call
bound
adc
call
bound
dec
cdq
call
repnz
in
dec
push
ins
dec
sti
xchg
adc
les
sbb
ins
in
push
nop
mov
test
dec
call
mov
push
ins
dec
sti
mov
les
in
dec
repz
sti
call
cwde
mov
mov
xchg
ds
pop
mov
add
fmul
dec
add
cmc
inc
retf
or
popa
mov
popf
daa
scas
in
dec
repz
add
popf
mov
mov
mov
test
push
clc
push
jl
gs
(bad)
fmul
ins
(bad)
fwait
adc
fsubr
icebp
mov
xchg
dec
sti
mov
les
in
dec
loop
paddb
sbb
bound
dec
sti
call
bound
dec
jle
adc
(bad)
jmp
sti
xchg
adc
les
in
dec
repz
popf
pop
pushf
mov
inc
fcomp
dec
mov
xchg
mov
bound
dec
sti
call
bound
pop
sti
call
imul
sub
out
xchg
mov
mov
mov
mov
bound
push
lock
mov
add
dec
sti
call
imul
mov
popf
mov
fcomp
xor
in
dec
repz
mov
call
dec
mov
push
add
jmp
pop
in
dec
repz
sti
mov
inc
sar
dec
rep
dec
sti
call
bound
dec
jno
adc
les
in
dec
gs
dec
sti
or
mov
bound
in
dec
repz
sti
call
jge
out
dec
je
shr
mov
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
repnz
movs
or
repnz
fadd
mov
xchg
mov
sbb
mov
bound
popf
je
addr16
test
rep
dec
in
push
or
cmp
sbb
jo
ret
cmps
jmp
movs
icebp
inc
retf
pop
mov
gs
mov
ins
stos
jecxz
rol
sti
call
mov
je
out
sub
les
(bad)
jl
ins
scas
sti
call
es
inc
rep
dec
mov
xchg
mov
push
ins
dec
sti
sti
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
call
shl
cmpxchg
cs
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
mov
xchg
mov
mov
xchg
ds
sbb
or
(bad)
call
mov
mov
xchg
dec
clc
sti
or
bound
push
lock
scas
out
xchg
mov
pop
clc
push
or
test
jnp
xchg
mov
mov
xchg
push
pusha
scas
in
fs
pop
popf
mov
popf
push
adc
pop
retf
cdq
adc
aad
scas
cld
addr16
psadbw
mov
bound
dec
sti
sbb
mov
(bad)
leave
dec
sti
call
bound
pop
sti
call
bound
dec
std
mov
test
dec
pop
jmp
sti
ins
dec
sti
lahf
adc
les
in
dec
repz
sti
call
bound
push
sti
call
jge
(bad)
mov
addr16
push
cmp
pop
call
out
inc
lods
loope
icebp
cmps
sub
cmp
jmp
push
lock
mov
add
dec
sti
call
pop
jecxz
mov
jp
or
pop
movs
or
cli
addr16
je
in
sub
mov
dec
repz
push
clc
call
dec
mov
push
clc
push
push
add
jmp
scas
in
pop
rep
pop
rcr
adc
or
scas
in
dec
cld
ins
dec
sti
enter
into
mov
bound
in
dec
repz
mov
bound
fdivr
call
bound
dec
sub
mov
imul
add
jmp
adc
aam
scas
in
pop
rep
dec
in
call
jp
mov
inc
mov
mov
movs
sub
out
xchg
mov
mov
cmp
adc
scas
in
dec
aad
inc
in
xchg
sub
retf
call
mov
xchg
mov
bound
mov
test
nop
test
or
push
shr
mov
popf
mov
popf
push
adc
push
or
xchg
mov
in
in
dec
fisttp
lods
or
adc
stos
push
mov
jae
in
pop
fsubr
dec
mov
cwde
mov
(bad)
iret
dec
sti
call
bound
inc
sti
call
bound
dec
mov
xchg
mov
xor
dec
sti
pushf
xor
imul
add
loope
rep
inc
sti
call
bound
dec
out
adc
out
out
mov
mov
pusha
popa
or
mov
repnz
fadd
nop
jecxz
dec
les
retf
push
stc
jp
ret
(bad)
jmp
jmp
or
ins
dec
sti
xchg
adc
iret
pop
loop
mov
jae
shr
push
popf
mov
cdq
push
icebp
mov
xor
cmp
xchg
dec
rep
push
fwait
adc
les
inc
in
jb
gs
scas
in
dec
aam
dec
jmp
les
in
dec
repz
call
bound
dec
sti
call
bound
dec
(bad)
call
dec
arpl
or
ins
dec
sti
lahf
adc
les
in
dec
repz
call
bound
jecxz
mov
lods
sub
out
xchg
mov
mov
lea
push
add
imul
call
cdq
inc
jnp
pop
push
stc
jb
ret
in
jmp
movs
repz
retf
pop
mov
gs
mov
bound
bound
fwait
adc
int
cmps
in
dec
repz
sti
call
bound
dec
sti
call
bound
dec
sub
mov
imul
mov
push
ins
dec
sti
mov
out
shl
mov
sub
out
mov
dec
repz
loop
and
scas
pop
cmp
push
mov
jge
loope
mov
dec
sti
call
bound
and
call
bound
dec
std
call
bound
dec
sti
sbb
ret
in
dec
repz
mov
bound
pop
sti
call
outs
test
fcom
nop
hlt
mov
push
fadd
scas
pop
shl
dec
rep
pop
mul
movs
out
xchg
mov
push
call
gs
mov
mov
cdq
xor
in
scas
in
dec
fisttp
mov
bound
dec
std
call
push
scas
in
dec
lds
cmps
adc
les
adc
ins
rol
mov
bound
dec
sti
call
bound
push
div
test
mov
mov
imul
mov
inc
test
cmps
or
adc
sub
in
pop
rep
pop
rcr
adc
or
scas
in
dec
cmps
ins
dec
sti
adc
les
in
dec
repz
sti
call
bound
inc
sti
call
bound
dec
sub
push
mov
int
test
clc
addr16
dec
pushf
push
mov
xchg
mov
bound
dec
lock
jae
in
dec
out
dec
sti
adc
bound
inc
shl
nop
test
push
clc
inc
cmps
out
cld
cmps
sub
iret
dec
dec
cmp
fld
mov
lock
mov
bound
add
movs
into
jge
out
int
mov
cmp
sbb
xchg
fdiv
mov
mov
bound
dec
rol
mov
popf
push
adc
dec
rcr
mov
jge
loope
mov
dec
sti
call
bound
sub
call
bound
dec
movs
call
or
dec
sti
sbb
or
jp
daa
test
dec
sti
call
bound
pop
sti
call
outs
test
fcom
nop
hlt
mov
push
cli
inc
mov
popa
mov
dec
repz
add
popf
mov
mov
mov
test
push
call
gs
mov
dec
fistp
test
bound
dec
rol
mov
(bad)
out
in
dec
repz
dec
sti
call
bound
or
call
bound
dec
std
mov
test
rep
dec
cld
call
outs
scas
in
dec
jecxz
dec
sti
lea
nop
mov
cdq
ds
sbb
cwde
push
shr
nop
out
inc
dec
les
retf
push
inc
shl
mov
jno
out
dec
sbb
mov
ret
daa
mov
dec
sti
call
bound
retf
adc
dec
bound
dec
icebp
call
add
ins
dec
sti
unpckhps
bound
mul
nop
push
nop
mov
test
rep
dec
repnz
jae
in
dec
out
dec
sti
adc
bound
inc
lock
movs
or
sbb
inc
mov
pop
call
call
retf
xchg
mov
inc
mov
adc
add
lods
idiv
jmp
call
popf
push
lock
inc
in
xchg
sub
ror
sti
inc
in
jb
gs
scas
int
repnz
dec
rol
adc
push
mov
aad
or
mov
mov
les
in
dec
loop
jle
fistp
add
aam
rep
dec
sti
call
bound
dec
icebp
call
inc
scas
in
dec
and
sti
pushf
xor
popa
into
repnz
adc
ret
bound
jmp
mov
lods
sub
into
dec
add
and
pop
xchg
dec
xchg
mov
dec
mov
addr16
dec
sti
mov
les
in
dec
loop
jp
fistp
les
int
rep
outs
sti
call
bound
dec
rcr
mov
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
test
dec
xchg
xlat
adc
into
dec
add
pop
ret
outs
dec
popf
call
jne
jmp
cmc
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
jle
fist
add
sti
inc
fsub
mov
pop
mov
sub
in
inc
fnstcw
cld
fist
mov
bound
dec
sti
call
bound
dec
std
mov
mov
push
lods
in
adc
ins
dec
rcr
mov
push
in
dec
fild
nop
adc
les
in
dec
repz
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jno
add
mov
sub
jbe
shl
push
mov
xchg
in
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
fistp
mov
inc
scas
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
repz
in
nop
imul
dec
rep
dec
call
cdq
jns
test
pop
stc
inc
cld
stc
cmc
inc
mov
push
pop
dec
sti
repz
les
out
mov
dec
sti
call
bound
push
sti
call
bound
sub
dec
xchg
mov
scas
in
dec
call
ds
push
pushf
cdq
add
jmp
icebp
mov
mov
shl
dec
rep
dec
sti
call
bound
dec
sub
out
cmc
scas
in
dec
loopne
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
outs
sti
call
bound
dec
rcr
mov
fs
inc
fdivr
pop
shl
dec
rep
push
icebp
mov
mov
dec
sbb
and
ins
dec
icebp
mov
mov
cmp
in
xor
ins
dec
rcr
mov
push
ins
dec
sti
nop
adc
les
in
dec
repz
dec
sti
call
bound
jo
call
push
in
dec
aad
inc
rcl
mov
daa
lods
in
dec
repz
mov
bound
push
shl
nop
test
and
sub
inc
fldcw
xchg
into
adc
into
dec
sub
dec
loopne
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
dec
sti
call
bound
dec
fistp
mov
fs
inc
fdivr
pop
shl
dec
rep
push
icebp
mov
cmps
sub
dec
sbb
and
add
push
lods
in
adc
ins
dec
rcr
mov
push
in
dec
stc
ins
dec
sti
call
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jo
add
mov
xor
in
inc
fnstenv
shl
push
mov
out
les
lds
popa
retf
pushf
push
mov
xchg
mov
bound
dec
icebp
call
push
ins
dec
sti
stos
adc
les
out
repz
loopne
imul
mov
adc
call
dec
adc
or
shr
pop
mov
bound
popa
pop
mov
les
in
dec
loop
jp
fistp
les
leave
dec
rep
data16
call
bound
dec
sti
call
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
lock
fcomp
dec
clc
mov
mov
push
outs
dec
lods
call
dec
lahf
jmp
sti
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
popa
sti
call
inc
mov
and
call
les
in
dec
repz
shl
or
out
aam
lds
sbb
hlt
pusha
scas
mov
sti
call
bound
dec
fistp
mov
push
ins
dec
sti
mov
mov
bound
inc
cli
call
data16
mov
xor
mov
jne
(bad)
icebp
in
mov
nop
ds
bound
loope
mov
les
in
dec
loop
jp
fistp
les
(bad)
dec
rep
inc
sti
call
bound
dec
fistp
mov
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
cmc
inc
fcomp
dec
xchg
rcl
dec
add
pop
ret
outs
dec
xchg
call
dec
fwait
jmp
cli
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
jg
call
jb
in
dec
aad
inc
rcl
mov
cmp
out
dec
rep
dec
sti
call
push
xchg
push
shr
mov
cmp
(bad)
xchg
stc
cdq
adc
dec
mov
addr16
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
outs
sti
call
jae
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
dec
xchg
les
into
dec
add
and
call
push
test
dec
leave
call
inc
scas
in
dec
stc
ins
dec
sti
test
mov
bound
dec
sti
call
arpl
popa
aaa
sahf
push
ficomp
cli
jmp
pusha
scas
in
dec
imul
popf
adc
out
xlat
mov
mov
inc
mov
add
(bad)
dec
fisttp
sti
nop
aas
mov
bound
cmp
call
push
ins
dec
jecxz
adc
les
in
dec
rep
dec
sti
xchg
les
in
hlt
or
mov
bound
xchg
mov
mov
popa
stos
call
cmc
pushf
jp
add
jmp
adc
les
in
dec
rep
dec
sti
call
arpl
(bad)
adc
mov
rep
pop
in
nop
adc
push
xchg
mov
bound
dec
sti
call
bound
dec
sti
call
daa
scas
in
dec
repz
mov
pop
test
cmp
sar
adc
iret
gs
call
bound
dec
sti
call
fs
addr16
pop
retf
cwde
adc
in
bound
psllw
mov
sub
dec
sti
mov
mov
(bad)
out
dec
repz
dec
sti
call
bound
call
mov
dec
xchg
jae
mov
xchg
mov
bound
inc
sti
call
dec
push
hlt
addr16
popa
jne
mov
add
bound
xchg
frstor
in
gs
rcr
adc
les
scas
in
dec
fld
mov
mov
bound
dec
sti
call
bound
outs
sti
call
bound
dec
std
mov
mov
push
stos
sub
call
push
xchg
push
icebp
mov
mov
bound
popa
push
call
bound
pop
shr
mov
push
scas
in
dec
fsubr
stos
adc
les
in
dec
repz
dec
sti
call
bound
call
mov
sub
cwde
adc
les
in
dec
repz
shr
add
jle
(bad)
out
or
nop
aas
xchg
push
mov
addr16
adc
in
bound
psllq
mov
push
ins
dec
sti
mov
mov
bound
dec
sti
call
arpl
popa
sub
jmp
arpl
dec
sti
sbb
ds
(bad)
cli
icebp
add
sti
call
bound
sti
call
fs
call
bound
dec
icebp
call
push
ins
dec
sti
dec
or
add
cmp
mov
xchg
mov
bound
mul
mov
mov
or
inc
push
icebp
mov
mov
xor
ins
dec
jmp
les
in
dec
repz
sti
call
bound
outs
sti
call
bound
dec
std
mov
mov
add
dec
sti
call
dec
adc
or
shr
xchg
imul
addr16
ins
pop
retf
cdq
adc
in
bound
psllq
mov
inc
scas
in
dec
(bad)
mov
mov
bound
dec
sti
call
arpl
popa
sub
popf
daa
scas
in
dec
repz
mov
sub
addr16
outs
dec
push
or
push
jg
clc
call
bound
dec
sti
call
bound
dec
in
call
bound
dec
call
les
in
dec
repz
rcl
cli
lea
dec
pushf
add
nop
aas
mov
bound
dec
std
call
bound
dec
sti
dec
or
dec
cmp
dec
repz
stc
call
bound
inc
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
stc
ins
dec
sti
call
bound
call
test
rep
dec
in
nop
ds
sbb
pop
dec
lock
daa
sti
call
jno
out
dec
test
adc
ret
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
sub
into
dec
jg
dec
test
add
in
push
stc
inc
mul
mov
lods
or
and
ins
inc
ror
mov
push
lods
in
sbb
ins
dec
rcr
mov
push
in
dec
fsubr
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jnp
add
call
popaw
push
call
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
icebp
call
inc
scas
in
dec
fsubr
mov
mov
bound
dec
repz
out
imul
dec
rep
dec
call
cdq
jns
test
push
stc
inc
cld
stc
cmc
gs
push
pop
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
dec
sti
call
bound
dec
sti
call
fs
inc
fdivr
pop
shl
dec
rep
push
icebp
mov
mov
dec
sbb
and
add
push
lods
in
sub
ins
dec
jmp
and
sti
call
bound
dec
sti
call
add
dec
sti
call
dec
pusha
cmc
or
rcl
mov
push
sub
call
bound
dec
cld
call
mov
in
dec
cmc
dec
pusha
rol
adc
(bad)
arpl
pop
rcl
adc
setbe
dec
test
dec
sti
push
adc
les
in
dec
repz
sti
call
bound
dec
sti
call
bound
dec
jbe
adc
les
dec
push
icebp
xchg
or
in
rep
dec
sti
call
bound
dec
call
xchg
mov
jnp
in
dec
out
ins
dec
sti
test
cld
sbb
adc
mov
mov
mov
mov
sub
mov
push
loope
add
popf
mov
mov
xchg
mov
bound
push
lock
lods
enter
inc
fcomp
sub
dec
cmp
sbb
sahf
push
icebp
mov
sbb
dec
cmp
jmp
sti
mov
call
outs
dec
in
or
sub
mov
fs
inc
in
jb
fs
scas
test
pop
sti
call
bound
dec
sti
call
repz
in
dec
xchg
ins
dec
sti
jmp
mov
bound
in
dec
repz
sti
call
bound
inc
sti
call
bound
dec
std
mov
movs
iret
dec
pop
jmp
cli
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
imul
adc
fisubr
xchg
mov
xchg
push
lock
movs
or
inc
repnz
fadd
mov
dec
dec
repnz
fdiv
imul
ret
out
jmp
mov
jmp
imul
cld
call
jnp
aad
or
mov
mov
cmps
sub
into
jge
out
rcl
dec
sbb
inc
fsubr
loope
retf
jg
add
pop
fwait
adc
dec
repz
test
call
bound
dec
rcl
push
mov
out
adc
mov
call
bound
popa
mov
xchg
mov
bound
dec
xchg
mov
shr
sti
or
les
in
dec
repz
sti
call
bound
call
mov
inc
clc
inc
cld
std
fistp
les
jmp
adc
aad
scas
in
pop
rep
dec
in
call
jnp
mov
inc
mov
mov
mov
dec
pop
icebp
addr16
jo
adc
mov
dec
repz
loop
or
popf
stos
out
sub
fwait
adc
les
out
mov
ds
sbb
lods
iret
pop
out
adc
sbb
or
out
ins
add
sti
mov
call
push
lock
mov
dec
rep
pop
sti
call
bound
dec
cmps
call
in
in
dec
push
ins
dec
sti
adc
les
in
dec
repz
call
bound
inc
sti
call
inc
mov
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
popa
ja
ds
pop
pushf
cdq
xor
push
push
fcomp
sub
out
test
sti
pushf
xor
pop
int
mov
push
inc
xchg
mov
gs
in
dec
jmp
jb
gs
mov
inc
retf
sub
add
or
outs
movs
aad
or
mov
mov
xchg
cdq
arpl
dec
std
mov
mov
call
rep
pop
retf
lahf
adc
aad
scas
cld
addr16
adc
(bad)
dec
pop
ins
dec
sti
push
adc
les
in
dec
repz
call
bound
xlat
sti
call
bound
dec
lock
fs
inc
clc
inc
stc
in
ds
sar
dec
rep
inc
sti
call
bound
dec
loop
adc
les
in
dec
shr
test
cmp
dec
cmp
pusha
popa
or
cdq
sub
add
cli
inc
scas
jecxz
mul
mov
push
out
or
popf
mov
pop
mov
xchg
mov
bound
push
lock
lods
iret
dec
pop
repnz
fcomp
and
cmp
pop
fcomp
adc
jmp
sti
mov
call
outs
dec
in
or
sub
lock
out
addr16
fs
scas
add
sti
call
bound
dec
sti
call
add
dec
sti
cmp
les
in
dec
repz
xchg
iret
les
out
rep
ret
sti
call
inc
mov
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
(bad)
in
ds
sbb
inc
fisttp
repnz
fadd
nop
jmp
mov
scas
and
pushf
xor
add
mov
outs
sub
fmul
xchg
mov
push
in
dec
in
inc
ret
(bad)
jmp
movs
lock
retf
sub
add
or
imul
mov
bound
dec
rol
test
popf
push
(bad)
jl
ins
movs
sti
call
daa
test
inc
rep
dec
jns
adc
(bad)
dec
clc
ins
dec
sti
iret
adc
les
in
dec
repz
call
bound
jecxz
call
dec
scas
in
dec
aad
inc
lock
cmps
or
in
dec
repz
mov
bound
pop
sti
call
bound
dec
loope
ds
pop
repnz
fcomp
mov
jp
out
mov
inc
sar
xchg
add
cli
inc
retf
push
mov
sbb
pop
imul
cld
call
popf
push
adc
inc
mov
cmp
(bad)
mov
mov
mov
data16
int
icebp
ins
dec
fld
pop
mov
bound
inc
ret
mov
inc
call
in
pop
repnz
dec
fcomp
mov
dec
scas
ins
dec
sti
int3
adc
les
in
dec
repz
call
bound
and
call
bound
inc
rcl
inc
xchg
mov
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
push
repz
ds
sbb
jmp
mov
xchg
mov
bound
mov
add
outs
xchg
pushf
mov
xchg
push
shr
mov
call
rcl
dec
sti
call
xor
inc
repnz
mov
bound
dec
sti
call
bound
dec
int
adc
les
pop
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
loopne
inc
jo
add
inc
fimul
mul
mov
popf
sub
(bad)
jl
ins
mov
add
test
rep
dec
popf
call
icebp
scas
in
dec
movs
ins
dec
sti
ds
les
in
dec
repz
sti
call
bound
sar
adc
adc
scas
in
dec
aad
inc
lock
lods
or
in
dec
repz
xchg
mov
dec
rep
pop
sti
call
bound
dec
in
push
nop
mov
out
push
je
or
cdq
das
je
add
in
ds
sar
test
jb
gs
jmp
call
popf
push
lock
inc
in
sub
fmul
test
jb
gs
scas
int
repnz
dec
rol
adc
push
mov
aad
or
mov
call
bound
pop
rcr
adc
or
scas
in
dec
cld
ins
dec
sti
adc
mov
bound
dec
sti
call
bound
adc
call
bound
dec
sub
test
dec
adc
inc
clc
inc
std
std
fistp
les
in
rep
inc
sti
call
bound
dec
loopne
adc
les
out
jg
inc
shl
mov
arpl
addr16
or
xor
popf
pop
pushf
movs
iret
pop
lock
test
loop
xchg
mov
bound
inc
lock
test
pop
clc
push
jbe
gs
movs
aad
or
mov
cdq
xor
in
scas
in
dec
(bad)
dec
sti
pushf
aas
lods
or
adc
stos
push
mov
jae
in
pop
fsubr
dec
mov
sbb
in
dec
rep
dec
sti
call
bound
(bad)
call
bound
dec
jmp
adc
les
in
dec
and
sti
pushf
xor
movs
out
inc
push
repz
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
or
ds
pop
popf
cdq
xor
movs
(bad)
mov
mov
mov
arpl
push
icebp
xchg
sub
shl
stos
sub
call
imul
lods
or
adc
sbb
or
adc
adc
call
icebp
scas
in
dec
fnstenv
in
push
adc
dec
cmp
jmp
sti
mov
mov
dec
repz
call
bound
ds
call
bound
dec
rcr
les
in
dec
in
push
icebp
xchg
ds
shl
rep
dec
sti
call
bound
dec
call
call
fcomp
nop
icebp
mov
dec
test
ret
bound
dec
inc
call
popf
push
adc
inc
mov
or
aad
popf
push
hlt
addr16
jnp
in
sbb
pusha
lods
repnz
in
inc
call
mov
dec
call
add
mov
bound
dec
sti
call
bound
inc
sti
call
dec
scas
in
dec
aad
pop
lock
push
mov
bound
dec
lock
jae
in
dec
out
dec
sti
adc
shl
or
mov
add
test
jl
xchg
add
loopne
lea
mov
dec
jg
dec
cmc
inc
dec
clc
cmc
mov
cwde
cld
int
adc
stos
push
mov
jae
in
pop
fsubr
dec
mov
aaa
mov
(bad)
(bad)
in
dec
repz
sti
call
bound
xor
call
bound
dec
js
adc
(bad)
jmp
sti
pushf
xor
imul
add
out
rep
inc
sti
call
bound
dec
loop
adc
dec
je
pop
push
fcomp
nop
icebp
mov
pop
fadd
add
repnz
clc
push
sub
gs
jmp
call
popf
push
lock
inc
in
push
add
cmp
sbb
inc
lock
mov
call
sti
call
jp
repnz
clc
push
push
add
jmp
scas
in
dec
loop
dec
jmp
les
in
dec
rep
dec
sti
call
bound
iret
sti
call
bound
dec
push
adc
les
scas
in
dec
(bad)
ins
dec
sti
dec
and
fsubr
push
push
clc
inc
repnz
fistp
les
in
rep
inc
sti
call
bound
dec
loop
adc
les
out
jle
popa
add
inc
fld
sbb
lock
mov
dec
dec
cmp
fisttp
sar
popf
push
call
mov
sahf
mov
bound
mov
gs
nop
test
shr
mov
popf
mov
popf
push
adc
dec
ret
cli
call
dec
mov
pop
icebp
test
sbb
dec
cmp
out
dec
adc
dec
sti
mov
ret
daa
mov
dec
sti
call
bound
ret
adc
retf
in
inc
rep
dec
push
adc
(bad)
shr
sti
into
adc
lds
retf
push
clc
inc
mul
xchg
add
sar
dec
rep
inc
sti
call
bound
dec
out
call
jle
in
dec
in
pusha
inc
rcl
or
jl
sbb
inc
mov
or
repnz
fmul
mov
imul
mov
mov
bound
push
lock
movs
out
xchg
mov
or
test
jle
aad
or
mov
mov
xchg
aaa
bound
dec
std
mov
mov
popf
mov
popf
push
adc
dec
sti
mov
mov
jae
loope
mov
dec
sti
call
bound
aaa
sti
call
bound
dec
std
call
cmp
in
dec
lods
ins
dec
sti
sbb
or
jp
daa
test
dec
sti
call
bound
pop
sti
call
outs
test
fcom
nop
hlt
(bad)
cdq
xor
fadd
ficomp
test
rep
dec
in
sub
fld
sbb
jno
ret
jmp
jp
lock
retf
or
add
xchg
cld
pusha
scas
in
ins
mov
(bad)
mov
outs
cmps
test
rep
dec
sti
call
and
dec
sti
lods
adc
les
in
dec
repz
lds
dec
mov
dec
mov
dec
sti
call
bound
inc
sti
call
outs
test
fcom
nop
hlt
lea
pushf
shr
mov
cwde
cld
adc
loopne
dec
sti
(bad)
adc
add
mov
sti
call
bound
daa
sti
call
bound
dec
icebp
call
les
dec
sti
push
adc
les
in
dec
rep
dec
sti
call
jg
xabort
addr16
dec
pushf
push
mov
xchg
mov
bound
dec
cmc
call
ja
in
dec
jmp
dec
sti
adc
dec
repz
ret
in
inc
dec
(bad)
mov
cmp
sbb
repnz
fmul
mov
dec
(bad)
mul
jmp
jmp
jmp
mov
outs
dec
sti
call
bound
jl
gs
mov
pop
clc
push
ins
add
jmp
mov
pop
clc
push
push
add
jmp
(bad)
pop
dec
rep
bound
xchg
xchg
pushf
pusha
scas
in
ins
out
outs
dec
sti
mov
mov
push
xchg
mov
call
test
dec
jmp
les
in
dec
repz
call
bound
(bad)
call
bound
dec
sti
call
out
in
dec
rep
dec
sti
dec
and
imul
add
in
rep
inc
sti
call
bound
dec
jecxz
adc
les
out
jle
popa
add
inc
fld
sbb
shl
nop
out
cdq
and
dec
pop
icebp
mov
and
cmp
mov
xor
mov
js
aad
or
mov
xchg
ds
sbb
in
adc
mov
lods
or
out
dec
shl
add
in
dec
fnstcw
in
xchg
sub
les
jmp
pop
ins
dec
sti
mov
ret
daa
mov
dec
sti
call
bound
int
call
bound
dec
jl
adc
les
scas
in
dec
lea
adc
lds
retf
push
cli
addr16
inc
sbb
int3
bound
dec
cld
call
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
in
dec
repz
rcl
or
out
xchg
mov
popa
adc
ds
pop
mov
hlt
adc
call
pop
retf
adc
sahf
je
pop
iret
test
rep
dec
in
push
or
cmp
sbb
jp
ret
movs
jmp
movs
sti
inc
retf
pop
mov
gs
mov
arpl
dec
sti
mov
mov
push
xchg
mov
mov
les
in
dec
loop
push
cld
fistp
mov
bound
inc
sti
call
bound
dec
sti
call
shr
sti
or
les
in
dec
repz
popf
sbb
movs
(bad)
hlt
cmc
sub
call
bound
dec
jmp
adc
les
dec
jmp
add
out
or
shr
mov
movs
out
mov
mov
or
in
dec
aad
inc
jecxz
sub
shl
cs
sub
call
imul
mov
popf
mov
fcomp
xor
xor
rep
push
cdq
adc
les
inc
jmp
jb
gs
inc
in
dec
repz
sti
mov
inc
sar
dec
rep
int
call
bound
dec
jno
adc
les
in
dec
je
dec
sti
xchg
adc
les
in
dec
repz
dec
sti
call
jge
out
dec
je
shr
mov
scas
in
dec
sti
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
push
div
lods
into
dec
pop
icebp
addr16
inc
shl
nop
call
test
pushf
les
std
mov
mov
mov
outs
sub
in
dec
inc
xchg
mov
gs
in
dec
jmp
pop
mov
out
retf
push
mov
gs
fld
aad
or
mov
mov
xchg
inc
bound
dec
std
mov
mov
popf
mov
mov
jg
stc
call
bound
inc
sti
call
bound
dec
jl
adc
les
scas
in
dec
mov
nop
adc
les
in
dec
repz
call
bound
dec
fld
mov
or
ins
dec
sti
sahf
adc
les
in
dec
repz
call
bound
push
sti
call
outs
test
stc
inc
mov
sub
out
mov
popa
push
mov
pop
shr
cli
inc
in
addr16
ret
clc
jmp
cdq
mov
repnz
dec
sti
popf
adc
cld
cs
adc
nop
or
popf
push
mul
jnp
in
push
xor
dec
cmp
in
dec
repz
mov
loopne
mov
dec
mov
jb
gs
scas
test
add
dec
xchg
test
rep
dec
icebp
call
clc
scas
in
dec
outs
ins
dec
sti
nop
adc
les
in
dec
repz
call
bound
jmp
mov
bound
dec
std
mov
scas
iret
dec
pop
jmp
cli
ins
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
push
sti
call
imul
mov
gs
out
xchg
mov
mov
nop
ds
pop
pushf
cdq
es
(bad)
xchg
in
addr16
and
mov
push
and
popa
mov
popf
daa
lods
in
dec
repz
sti
call
imul
nop
hlt
mov
push
mov
cmps
sub
into
jge
out
out
mov
cwde
xor
in
lods
in
dec
fstp
sti
pushf
aas
mov
bound
(bad)
jmp
(bad)
mov
movs
or
push
mov
xchg
movs
lds
cld
dec
repz
mov
push
mov
xchg
mov
bound
dec
fs
ds
in
dec
jle
dec
sti
push
adc
les
in
dec
repz
dec
sti
call
bound
xlat
sti
call
pop
scas
in
dec
aad
inc
lock
lods
or
in
dec
repz
pop
mov
bound
pop
sti
call
bound
dec
fistp
mov
fcomp
cmps
sub
out
(bad)
mov
cmps
in
lods
in
mov
movs
sub
out
mov
push
in
or
popf
push
jmp
mov
xchg
mov
bound
push
lock
lods
int
pop
hlt
add
in
push
and
dec
cmp
sbb
popf
push
icebp
test
mov
or
lock
dec
fcmovnb
push
mov
bound
dec
sti
call
imul
inc
in
push
sub
dec
cmp
fld
jae
sti
call
push
out
rep
dec
sti
call
bound
dec
popf
call
cmp
dec
sti
(bad)
adc
les
out
inc
std
fist
mov
bound
inc
sti
call
bound
dec
loopne
adc
lahf
cdq
cmp
cli
inc
mov
or
jecxz
std
imul
lds
xchg
mov
gs
in
dec
out
pusha
jb
gs
mov
je
xchg
mov
cmp
pop
pushf
scas
enter
mov
outs
dec
call
mov
jo
jg
sti
pushf
aas
mov
bound
dec
int
adc
les
in
dec
rep
dec
sti
fist
les
in
dec
repz
popf
sub
dec
repz
mov
bound
pop
sti
call
dec
push
sti
addr16
popa
ja
pop
adc
scas
in
dec
aad
inc
rol
aas
and
dec
cmp
fisttp
test
call
gs
call
bound
dec
pop
call
lock
in
dec
jne
dec
sti
or
les
in
dec
repz
call
arpl
popa
inc
test
sub
mov
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
cmps
sub
xchg
mov
add
or
mov
addr16
jae
sar
xchg
xchg
mov
jp
cmc
inc
retf
or
mov
arpl
dec
sti
mov
or
jg
sbb
je
ret
(bad)
inc
inc
cmc
inc
retf
pop
mov
gs
mov
bound
bound
adc
fsubr
hlt
mov
xchg
dec
sti
call
bound
push
not
mov
bound
dec
sti
call
fs
in
dec
xchg
ins
dec
sti
int3
adc
les
in
dec
repz
dec
sti
call
fs
call
bound
dec
jmp
xchg
mov
jge
loope
pop
jnp
add
inc
fld
sbb
shl
mov
cmp
in
dec
rep
dec
sti
call
popf
push
sti
addr16
inc
loope
sub
ror
hlt
inc
jmp
jmp
mov
fs
ins
dec
std
mov
mov
sar
dec
rep
or
call
bound
dec
mov
xchg
mov
gs
in
dec
and
sti
pushf
xor
scas
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
mov
arpl
popa
popa
mov
push
(bad)
imul
repz
call
gs
call
bound
dec
cmc
call
shr
sti
clc
adc
les
in
dec
repz
call
arpl
popa
inc
test
nop
mov
scas
in
dec
rep
dec
repz
ins
scas
in
dec
loop
dec
sti
mov
les
in
dec
repz
rcl
mov
outs
scas
out
xchg
mov
mov
mov
movs
sub
dec
dec
repz
call
imul
out
shl
dec
rep
pop
lock
stos
out
xchg
mov
push
clc
addr16
gs
mov
inc
retf
pop
mov
gs
fwait
pop
xchg
mov
inc
sub
cli
call
imul
mov
scas
lds
retf
jge
not
mov
bound
dec
std
call
xor
dec
sti
lds
les
in
dec
repz
call
jp
mov
mov
bound
dec
neg
mov
jno
in
dec
in
pusha
popa
pop
lea
inc
sbb
icebp
add
adc
xchg
rcr
outs
imul
cld
call
popf
push
adc
fwait
push
icebp
sbb
jb
dec
cmp
sbb
inc
ret
cld
jmp
scas
in
dec
shl
in
xchg
mov
jns
in
sti
ins
dec
sti
lods
adc
les
in
dec
repz
sti
call
bound
or
call
inc
test
inc
hlt
sub
call
bound
dec
neg
mov
je
(bad)
jmp
inc
mov
mov
cmps
sub
out
xchg
mov
mov
pushf
xor
pop
dec
adc
call
bound
inc
sti
call
bound
dec
outs
call
ins
scas
in
dec
xchg
ins
dec
sti
in
mov
bound
sti
call
bound
dec
fld
scas
iret
dec
sbb
or
ins
dec
sti
lahf
adc
les
in
dec
repz
sti
call
bound
push
sti
call
jge
(bad)
mov
inc
mov
pop
popf
cdq
sub
(bad)
cmps
in
lods
in
ds
sbb
push
adc
scas
in
dec
aad
inc
loopne
sub
shl
aaa
stos
sub
call
imul
mov
popf
mov
popf
push
adc
cdq
push
icebp
sbb
cmp
out
rep
push
fwait
adc
les
inc
call
jmp
scas
add
pop
sti
call
bound
dec
icebp
call
lds
dec
sti
cmp
mov
bound
dec
sti
call
bound
fdivr
call
inc
mov
inc
shl
adc
or
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
bound
(bad)
in
ds
pop
popf
cdq
xor
(bad)
mov
xchg
push
sbb
push
push
fmul
mov
sub
xchg
mov
cdq
je
pop
iret
test
rep
dec
loope
sub
fimul
cmc
inc
in
inc
ret
cmps
jmp
movs
repnz
clc
push
jp
gs
(bad)
jmp
rep
bound
mov
pop
or
mov
call
arpl
pop
in
xchg
sbb
les
in
dec
cmps
ins
dec
sti
clc
adc
les
in
dec
repz
dec
sti
call
bound
and
call
push
push
std
call
gs
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sar
nop
cli
mov
mov
mov
cmps
sub
add
dec
sti
call
pop
rcl
mov
jb
or
pop
mov
popf
push
cli
addr16
jne
loop
sub
(bad)
popa
(bad)
cmp
ins
push
fwait
adc
les
inc
cli
sub
call
bound
dec
(bad)
call
gs
in
dec
cli
ins
dec
sti
dec
push
mov
je
jmp
adc
les
in
dec
repz
dec
sti
call
dec
sbb
or
or
ds
sbb
cmp
fnsave
dec
les
(bad)
jl
ins
lods
sti
call
es
inc
rep
dec
fwait
call
bound
dec
sti
retf
adc
les
in
dec
repz
sti
call
bound
xor
call
and
inc
shl
add
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
cmps
sub
xchg
mov
mov
sub
int
dec
lock
mov
popf
sbb
mov
imul
xchg
mov
bound
inc
ret
retf
dec
out
clc
push
or
test
jnp
aad
or
mov
cdq
xor
in
scas
in
dec
fcomi
dec
sti
pushf
aas
mov
jle
adc
cdq
adc
aad
scas
cld
scas
imul
call
xchg
scas
in
dec
dec
ins
dec
sti
jmp
mov
bound
dec
sti
call
bound
mov
call
bound
dec
dec
call
imul
sti
call
bound
popa
pop
test
sub
mov
imul
mov
bound
sti
call
bound
outs
sti
call
bound
das
add
jmp
test
push
cld
inc
movs
in
ds
pop
call
fmul
sub
out
mov
in
and
pop
pushf
movs
iret
pop
adc
call
les
in
dec
repz
sti
call
bound
inc
add
jmp
mov
add
push
mov
lods
or
cmc
addr16
jne
or
cdq
das
jne
sti
inc
retf
mov
add
pop
fwait
iret
xchg
mov
inc
jl
dec
repz
pop
cli
call
bound
dec
ror
mov
mov
mov
sti
call
pusha
xchg
in
nop
add
popf
scas
in
pop
ret
imul
adc
aad
jecxz
or
ins
dec
sti
ds
les
in
dec
rep
dec
sti
call
bound
nop
sti
call
bound
dec
addr16
cmp
ins
dec
sti
dec
push
mov
imul
add
in
inc
rep
dec
jmp
adc
les
dec
jmp
add
in
dec
repz
lock
lods
leave
dec
pop
repnz
fcomp
nop
in
sbb
in
retf
dec
bound
call
sub
retf
call
mov
xchg
mov
bound
inc
ret
test
cdq
xor
(bad)
mov
xchg
sub
fmul
lock
in
push
adc
dec
cmp
jmp
stos
cwde
adc
les
je
repz
stc
cdq
adc
popa
scas
in
ins
sti
outs
dec
sti
mov
mov
push
mov
add
adc
les
in
dec
aam
dec
jmp
les
mov
dec
sti
call
bound
dec
movs
call
add
dec
sti
call
bound
cmp
adc
bound
inc
sti
call
bound
dec
in
sbb
jge
(bad)
mov
nop
ds
sbb
call
mov
xchg
mov
bound
mov
cmp
enter
mov
jp
push
lea
lods
or
(bad)
cmp
jmp
and
xchg
mov
clc
scas
in
dec
fnstcw
repnz
les
in
dec
rep
dec
sti
call
bound
dec
mov
xchg
mov
mov
in
dec
cmc
dec
pusha
loop
adc
add
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
shr
push
nop
cli
mov
push
fcomp
std
add
(bad)
(bad)
fst
gs
scas
in
dec
loop
dec
jmp
les
in
dec
repz
call
bound
sub
call
bound
dec
test
xchg
mov
call
ins
dec
sti
dec
push
mov
imul
add
jmp
adc
(bad)
bound
dec
jecxz
adc
les
mov
inc
mov
nop
ds
pop
pushf
cdq
ss
add
push
shl
nop
out
cdq
daa
mov
in
dec
cmc
dec
push
icebp
test
mov
repnz
cmp
sbb
mov
bound
mov
xchg
dec
sbb
mov
xchg
push
shr
mov
call
icebp
dec
(bad)
clc
call
dec
iret
in
dec
cmc
inc
push
icebp
test
mov
(bad)
dec
cmp
pop
dec
sti
ja
mov
jae
test
sti
call
bound
ret
sti
call
bound
dec
outs
call
cmp
ins
dec
sti
xor
les
movs
dec
repz
out
ds
pop
call
rep
dec
(bad)
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
imul
or
pop
push
clc
inc
lods
out
imul
scas
jmp
jmp
jne
jmp
shl
add
adc
shr
movs
mov
xchg
push
shr
mov
popf
mov
popf
push
adc
cdq
push
icebp
sbb
xor
cmp
jmp
sti
mov
call
push
lock
mov
bound
sti
call
gs
call
bound
dec
outs
call
jmp
in
dec
xchg
ins
dec
sti
push
adc
les
in
dec
repz
call
arpl
popa
inc
xchg
nop
mov
scas
in
dec
rep
dec
repz
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
in
dec
repz
lock
movs
sub
xchg
mov
add
or
cdq
sub
in
addr16
sbb
mov
push
xchg
mov
xchg
adc
cmp
in
dec
rep
inc
sti
call
popf
push
adc
fwait
pop
icebp
sbb
cmp
sbb
ja
ret
stos
jmp
(bad)
ins
push
call
fs
inc
call
jmp
scas
lock
rep
pop
sti
call
bound
dec
sti
call
ret
scas
in
dec
stc
ins
dec
sti
add
mov
(bad)
lock
dec
repz
dec
sti
call
bound
test
call
bound
dec
std
mov
lods
int
test
mov
dec
sti
call
bound
pop
sti
call
bound
dec
in
adc
les
aad
or
mov
xchg
ds
pop
call
fadd
mov
xor
and
mov
push
and
popa
mov
popf
daa
lods
in
dec
repz
sti
call
imul
mov
jge
out
rcl
dec
sbb
out
retf
jg
add
pop
mov
bound
bound
xchg
mov
ins
lods
in
dec
rcr
sti
call
js
repnz
clc
push
scas
add
xchg
mov
dec
rep
pop
sti
call
bound
dec
stos
call
jmp
sti
nop
adc
les
in
dec
repz
mov
bound
dec
sti
call
inc
mov
addr16
jp
shl
adc
or
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
push
shl
nop
test
cmps
loop
jmp
xchg
dec
repz
jecxz
or
popf
mov
push
bnd
push
mov
bound
jb
gs
mov
je
xchg
mov
cmp
sbb
mov
outs
dec
call
mov
je
ins
dec
(bad)
lds
(bad)
push
stc
jo
ret
mov
inc
call
in
and
ins
dec
rcr
mov
imul
sti
nop
adc
les
in
dec
rep
dec
sti
call
bound
data16
call
inc
mov
dec
(bad)
sti
or
bound
dec
sti
call
dec
push
mul
jnp
shl
pop
mov
bound
and
sub
in
pop
ret
outs
dec
mov
mov
jnp
jmp
cmc
ins
dec
sti
test
les
in
dec
rep
dec
sti
call
bound
sub
xchg
mov
bound
push
icebp
mov
lods
sub
dec
imul
test
mov
mov
shl
rep
dec
sti
call
bound
dec
cmc
call
fs
dec
fistp
dec
sti
nop
aas
nop
mov
out
dec
test
adc
ret
in
dec
repz
dec
sti
call
bound
outs
sti
call
bound
dec
sub
adc
push
mov
into
dec
jg
dec
test
add
in
pop
stc
inc
mul
mov
cmps
or
xor
inc
rol
mov
push
lods
in
adc
ins
dec
rcr
mov
push
in
dec
stc
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
je
add
in
scas
in
inc
fnstcw
shl
push
mov
xchg
in
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
sti
call
push
ins
dec
sti
mov
mov
bound
dec
repz
loopne
imul
dec
rep
dec
call
cdq
jns
test
push
stc
inc
cld
stc
mov
mov
push
pop
dec
sti
repz
les
(bad)
gs
sti
call
bound
popa
sti
call
bound
dec
sti
call
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
out
dec
rep
dec
sti
call
push
xchg
push
shr
mov
cmp
in
inc
fldcw
sbb
out
sti
scas
in
dec
loopne
dec
sti
icebp
adc
les
(bad)
gs
sti
call
bound
inc
sti
call
bound
dec
enter
daa
xchg
mov
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
out
dec
rep
dec
sti
call
push
xchg
push
shr
mov
cmp
in
dec
stc
inc
dec
clc
cmc
push
fsubr
jp
loopne
dec
sti
cld
adc
les
out
mov
dec
sti
call
bound
dec
sti
call
bound
push
add
mov
bound
test
mov
mov
dec
mov
push
lock
push
mov
bound
dec
cld
call
bound
dec
sti
pushf
xor
jno
out
dec
movs
ins
dec
sti
mov
mov
daa
cmps
in
dec
repz
sti
call
bound
inc
sti
call
bound
dec
sub
adc
push
mov
into
dec
jg
dec
xchg
jae
mov
xchg
mov
bound
pop
shl
mov
and
inc
fnstcw
shl
adc
xchg
bound
pop
shr
mov
dec
scas
in
dec
shr
mov
mov
bound
dec
sti
call
bound
dec
fld
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fbstp
popa
dec
cwde
jp
add
(bad)
out
jg
stc
call
bound
inc
sti
call
bound
dec
rcr
mov
inc
scas
in
dec
stc
ins
dec
sti
mov
in
bound
call
test
rep
dec
in
nop
ds
pop
mov
pop
dec
pushf
in
dec
sti
nop
aas
cmps
or
out
dec
xchg
ins
dec
sti
mov
ret
in
dec
repz
sti
call
bound
dec
sti
call
popa
into
repnz
call
push
xchg
push
icebp
mov
mov
push
sub
call
bound
dec
cld
call
mov
in
dec
cmc
dec
pusha
rol
adc
les
ins
dec
jmp
les
in
dec
repz
dec
sti
call
bound
popa
sti
call
bound
dec
std
mov
mov
add
dec
sti
call
dec
adc
or
shr
aam
xchg
mov
dec
mov
addr16
ins
pop
retf
cwde
adc
in
bound
psllq
mov
inc
scas
in
dec
xlat
ins
dec
sti
nop
adc
les
in
dec
repz
dec
sti
call
arpl
popa
sub
jmp
arpl
dec
sti
sbb
mov
movs
(bad)
cli
icebp
inc
leave
sti
call
bound
sti
call
fs
call
bound
dec
sti
call
push
scas
in
dec
fsubr
nop
adc
lds
retf
pop
stc
inc
xchg
cdq
je
inc
iret
test
rep
dec
cld
call
jg
pop
push
fcomp
mov
push
ins
dec
icebp
mov
mov
(bad)
les
fisttp
xor
sti
call
fs
call
bound
dec
fistp
mov
bound
dec
sti
dec
dec
mov
push
or
mov
bound
mul
mov
cmps
or
imul
out
adc
cmps
mov
xor
ins
dec
jmp
les
in
dec
repz
sti
call
bound
popa
sti
call
bound
dec
std
mov
mov
add
dec
sti
call
dec
adc
or
shr
xchg
xchg
out
pop
ins
pop
retf
cwde
adc
in
bound
psllq
mov
push
ins
dec
sti
mov
mov
bound
dec
sti
call
arpl
popa
sub
jmp
arpl
dec
sti
mov
nop
mov
movs
(bad)
cli
icebp
add
sti
call
bound
sti
call
fs
call
bound
dec
sti
call
stos
mov
xor
mov
jnp
mov
ds
xchg
fisttp
scas
out
in
dec
mov
xchg
mov
bound
dec
sti
call
bound
dec
fnsave
add
stc
in
dec
repz
dec
sti
mov
mov
sar
dec
rep
imul
xchg
mov
bound
dec
icebp
call
dec
scas
in
dec
and
dec
sti
pushf
xor
popa
into
not
call
dec
adc
or
shr
mov
dec
mov
addr16
ins
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
push
call
add
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
bound
adc
out
leave
scas
(bad)
jl
ins
adc
call
push
test
dec
sti
call
push
ins
dec
sti
mov
mov
bound
dec
sti
call
jp
(bad)
pushf
imul
in
dec
inc
xchg
mov
scas
in
dec
in
popa
inc
cmp
sbb
shl
inc
rol
add
clc
in
dec
repz
dec
sti
mov
mov
sar
dec
rep
popa
sti
call
bound
dec
sti
call
inc
scas
in
dec
and
dec
sti
pushf
xor
popa
into
repnz
call
push
xchg
push
icebp
mov
mov
push
(bad)
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
add
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
inc
outs
and
sub
(bad)
jl
ins
and
call
push
ins
dec
in
call
jns
in
dec
call
adc
les
jmp
adc
add
sti
inc
fsub
mov
push
mov
data16
jecxz
std
imul
(bad)
mov
dec
repz
adc
bound
dec
sti
call
inc
test
fdivp
ins
pop
retf
cwde
adc
in
bound
psllq
mov
inc
scas
in
dec
stc
ins
dec
sti
mov
mov
bound
dec
sti
call
arpl
popa
sub
jmp
arpl
dec
sti
sbb
mov
movs
(bad)
cli
icebp
add
sti
call
bound
sti
call
fs
call
bound
dec
sti
call
push
ins
dec
sti
dec
jae
add
cmp
ffreep
push
mov
bound
mul
mov
cmps
or
in
dec
stc
inc
push
icebp
mov
mov
or
dec
jmp
les
in
dec
rep
dec
sti
call
bound
push
sti
call
pop
imul
call
cdq
or
pop
pop
stc
inc
(bad)
stc
cdq
adc
xchg
xchg
mov
dec
mov
dec
sti
call
bound
dec
sti
call
add
inc
popa
ins
call
add
ins
dec
jmp
les
in
dec
repz
sti
call
bound
pop
sti
call
cmp
in
dec
rep
dec
sti
call
dec
push
sti
inc
fsub
add
dec
rep
dec
sti
call
gs
in
dec
hlt
ins
dec
sti
call
bound
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
rep
dec
sti
call
bound
push
call
or
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
bound
adc
out
leave
scas
(bad)
jl
ins
push
cli
call
outs
cmps
test
rep
dec
xchg
call
add
in
dec
sahf
ins
dec
sti
pushf
adc
les
in
dec
repz
mov
bound
popa
aaa
pushf
push
mov
bound
dec
icebp
call
jb
in
dec
loopne
dec
sti
sbb
ds
sbb
cwde
push
shr
nop
out
lea
push
xchg
xor
mov
hlt
scas
in
dec
in
gs
ret
out
inc
dec
test
or
fisubr
mov
test
adc
inc
mov
dec
sti
call
bound
inc
sti
call
bound
dec
(bad)
call
fs
push
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
shl
cdq
xor
sbb
popf
push
shl
jmp
fadd
bound
dec
sti
nop
aas
and
dec
cmp
(bad)
jl
ins
mov
add
test
rep
dec
imul
in
dec
rep
dec
sti
or
les
in
dec
repz
call
bound
ret
sti
call
or
inc
shl
or
sub
dec
sti
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
mov
dec
pop
icebp
add
or
cdq
sub
cli
inc
test
icebp
adc
push
mov
into
jns
aad
or
mov
sahf
adc
pop
lock
arpl
dec
sti
xchg
or
cmp
(bad)
mov
mov
test
xchg
mov
push
clc
push
jle
gs
scas
in
ins
xchg
ins
dec
sti
mov
mov
push
xchg
mov
call
arpl
pop
in
sbb
les
in
dec
cwde
ins
dec
sti
clc
adc
les
in
dec
repz
sti
call
bound
adc
call
push
push
std
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sar
nop
cli
sbb
fcomp
mov
jl
shr
loop
psubd
mov
jg
aad
or
mov
mov
mov
or
inc
mov
cmp
dec
cmp
dec
mov
rcl
in
dec
cmc
inc
push
not
mov
bound
dec
std
call
gs
in
dec
iret
ins
dec
sti
cmps
adc
lds
retf
data16
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
shl
nop
test
call
mov
pushf
push
adc
pop
retf
sahf
adc
aad
scas
cld
cmps
imul
call
leave
scas
in
dec
push
ins
dec
sti
cs
les
in
dec
rep
dec
sti
call
bound
scas
sti
call
bound
dec
lock
sbb
dec
sti
pushf
xor
mov
psllw
mov
outs
scas
in
dec
cld
ins
dec
sti
mov
les
in
dec
repz
sti
call
bound
push
not
dec
fld
sbb
lahf
push
repnz
movs
adc
or
mov
or
mov
mov
popf
sbb
mov
xchg
dec
(bad)
sti
or
pop
shl
dec
rep
inc
sti
call
imul
nop
hlt
mov
inc
clc
push
inc
add
jmp
mov
push
hlt
xchg
sub
(bad)
popa
mov
push
in
inc
cli
call
popa
scas
in
ins
adc
sti
mov
mov
popa
sar
nop
or
push
in
dec
loopne
dec
sti
test
add
loope
mov
dec
sti
call
bound
adc
call
bound
dec
scas
call
gs
in
dec
lods
ins
dec
sti
sbb
or
jmp
rep
dec
sti
call
bound
dec
jmp
adc
les
jmp
mov
mov
xchg
mov
mov
cdq
je
adc
test
rep
dec
out
sub
fisttp
cli
inc
in
gs
ret
jmp
js
repnz
call
gs
pop
dec
rep
bound
fwait
adc
int
cmps
in
dec
repz
mov
bound
dec
sti
call
bound
dec
sub
adc
push
mov
shr
test
rep
dec
call
mov
push
ins
dec
sti
mov
out
sar
mov
sub
out
mov
dec
repz
in
xchg
and
scas
push
cmp
pop
dec
sti
jb
mov
jae
test
mov
dec
sti
call
bound
xor
add
in
out
rep
dec
scas
call
jmp
in
dec
clc
ins
dec
sti
or
mov
bound
dec
repz
in
push
nop
mov
test
dec
call
mov
imul
mov
bound
dec
sti
call
dec
push
lock
ds
pop
popf
cdq
sub
add
clc
inc
scas
in
ds
sar
mov
fs
inc
in
pusha
inc
ret
sti
jmp
mov
or
ins
dec
sti
popf
adc
cld
sub
mov
gs
or
popf
mov
popf
push
adc
cwde
push
icebp
test
mov
cmps
dec
cmp
jae
rcl
stos
into
jge
out
jmp
and
les
in
dec
loop
inc
repz
mov
bound
sub
call
bound
dec
rcr
les
dec
xchg
ins
dec
sti
sbb
or
jle
daa
test
dec
sti
call
bound
pop
sti
call
outs
test
fcom
nop
hlt
(bad)
cdq
xor
fadd
movs
adc
scas
in
dec
rep
dec
pop
call
popf
push
adc
push
icebp
test
xor
cmp
sbb
jb
ret
(bad)
jmp
pop
out
dec
repz
xchg
clc
call
dec
mov
dec
sti
call
bound
dec
sti
call
bound
dec
mov
adc
les
dec
pusha
loope
adc
push
xchg
mov
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
cmps
sub
out
mov
dec
repz
rcr
mov
push
xchg
mov
call
bound
popa
mov
xchg
mov
bound
dec
jb
adc
les
in
dec
rep
dec
sti
clc
adc
les
in
dec
repz
call
bound
call
mov
addr16
push
repz
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
or
pop
nop
repz
mov
mov
lods
sub
mov
scas
jmp
jmp
jmp
shl
push
sub
call
imul
lods
or
adc
sbb
or
adc
pop
dec
sti
call
scas
scas
in
dec
fnstenv
in
push
sbb
dec
cmp
(bad)
jl
ins
mov
add
test
rep
dec
push
xchg
mov
push
scas
in
dec
jecxz
dec
sti
in
mov
bound
in
dec
repz
dec
sti
call
bound
cs
call
adc
inc
lock
movs
or
in
rep
dec
sti
call
bound
dec
jmp
xchg
mov
jnp
in
dec
out
ins
dec
sti
test
sub
(bad)
mov
xchg
ds
pop
lahf
cdq
sub
pop
fmul
leave
add
hlt
inc
retf
push
mov
adc
daa
scas
in
dec
repz
cmpxchg
fimul
popf
mov
addr16
sub
fisttp
hlt
inc
jmp
add
int
repnz
dec
ror
adc
push
mov
aad
or
mov
call
bound
pop
rcr
adc
or
scas
in
dec
(bad)
ins
dec
sti
adc
les
in
dec
rep
dec
sti
call
bound
ret
sti
call
bound
dec
sub
adc
push
mov
iret
imul
add
in
dec
rep
dec
icebp
call
jb
in
dec
loopne
dec
sti
lea
les
out
jg
popa
add
inc
(bad)
icebp
addr16
or
and
dec
push
icebp
test
mov
cmc
dec
cmp
jns
mov
xchg
mov
bound
mov
cmp
push
pushf
lods
into
imul
mov
pushf
mov
mov
dec
cmp
call
dec
jae
dec
cmc
inc
push
icebp
test
mov
mov
popf
scas
in
pop
ret
outs
dec
adc
mov
dec
jmp
std
adc
les
in
dec
repz
sti
call
bound
in
sti
call
bound
dec
pushf
call
mov
in
dec
cmc
dec
push
icebp
xchg
add
popf
mov
inc
rep
dec
(bad)
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
sti
call
imul
or
pop
(bad)
repnz
fmul
cmps
sub
mov
scas
jmp
out
push
lock
mov
add
dec
sti
call
pop
out
mov
jne
or
pop
mov
popf
push
cmc
addr16
jo
jecxz
sub
mov
dec
repz
sar
call
dec
mov
push
clc
push
pop
add
jmp
scas
in
dec
loop
dec
jmp
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
bound
dec
jb
adc
les
in
dec
je
dec
sti
dec
pusha
mov
imul
add
jmp
adc
aam
scas
in
pop
rep
dec
in
call
jg
mov
inc
mov
mov
cmps
sub
out
xchg
mov
addr16
jo
adc
daa
mov
in
dec
cmc
dec
push
icebp
sbb
imul
sahf
xor
mov
je
aad
or
mov
nop
ds
sbb
in
adc
xchg
mov
popf
push
bnd
jbe
es
imul
mov
jae
in
pop
fsub
dec
mov
pop
mov
bound
dec
sti
call
bound
adc
add
in
aad
ins
dec
inc
call
or
in
dec
xchg
ins
dec
sti
push
adc
lds
retf
push
clc
inc
(bad)
in
push
nop
scas
nop
test
rep
dec
lock
jae
in
dec
out
dec
sti
adc
bound
dec
sti
call
popf
mov
addr16
ds
pop
popf
cdq
sub
(bad)
movs
in
pusha
popa
pop
cmp
fmul
cmp
fld
loop
popf
push
jmp
mov
xchg
mov
bound
push
lock
lods
int
pop
repnz
fcomp
and
sbb
sahf
push
icebp
lea
adc
dec
cmp
test
push
cdq
adc
les
ins
or
mov
call
pop
lock
mov
push
lods
in
mov
call
outs
scas
in
dec
pop
ins
dec
sti
unpckhps
bound
dec
sti
call
bound
das
sti
call
bound
dec
jo
adc
les
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
popa
jbe
ds
pop
lahf
cdq
xor
push
push
inc
in
stc
mov
dec
dec
repnz
fmul
mov
push
xchg
mov
cdq
je
jne
test
rep
dec
loopne
sub
fmul
hlt
inc
in
inc
ret
movs
jmp
movs
repnz
clc
push
jnp
gs
(bad)
ins
bound
mov
pop
or
mov
stos
push
mov
jae
in
pop
fsubr
dec
mov
jmp
repz
call
bound
ss
call
bound
dec
jle
adc
(bad)
jmp
sti
pushf
xor
movs
(bad)
sti
cmc
sub
call
bound
dec
neg
mov
jbe
in
dec
jmp
dec
sti
adc
mov
inc
mov
or
inc
ror
repnz
fadd
nop
jecxz
retf
test
inc
ret
(bad)
jmp
sahf
mov
repnz
dec
sti
popf
adc
cld
sub
adc
sbb
or
mul
jnp
out
sub
mov
dec
repz
and
call
dec
mov
push
add
jmp
scas
in
dec
aam
dec
jmp
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
pushf
call
dec
arpl
or
ins
dec
sti
sahf
adc
les
in
dec
repz
dec
sti
call
bound
push
shl
nop
test
popa
pop
lea
push
add
imul
call
cdq
inc
jnp
pop
pop
stc
jo
ret
in
jmp
movs
icebp
inc
retf
pop
mov
gs
mov
bound
bound
fwait
adc
int
cmps
in
dec
repz
adc
les
fisttp
or
call
bound
dec
sub
adc
push
mov
fisubr
test
rep
dec
call
mov
push
ins
dec
sti
mov
out
shl
mov
sub
out
mov
dec
repz
jecxz
and
scas
pop
cmp
outs
dec
and
adc
aad
jmp
or
ins
dec
sti
xchg
adc
les
in
dec
repz
inc
mov
bound
leave
sti
call
bound
dec
jge
adc
les
dec
pop
lock
cmps
or
in
dec
repz
mov
bound
pop
sti
call
bound
dec
loope
ds
jnp
sbb
lahf
push
lock
movs
sub
out
mov
test
push
mov
into
jp
aad
or
mov
cdq
je
pop
iret
test
rep
dec
loopne
sub
(bad)
sti
inc
jmp
jb
gs
mov
je
xchg
mov
cwde
or
pop
jmp
jmp
push
lock
mov
push
lods
in
pop
repnz
dec
fcomp
mov
dec
mov
adc
les
in
dec
repz
mov
bound
jno
call
push
cmps
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
div
stos
out
xchg
mov
mov
mov
mov
add
dec
sti
call
dec
sub
or
in
sbb
jne
sbb
jae
mul
mov
jl
in
dec
shl
dec
sti
call
jp
in
sti
ins
dec
sti
ficom
les
in
dec
repz
and
bound
dec
sti
call
inc
test
inc
hlt
sub
call
bound
dec
neg
mov
js
(bad)
(bad)
jmp
loop
sub
out
xchg
mov
mov
pushf
xor
pop
inc
adc
sahf
adc
aad
scas
cld
addr16
psadbw
mov
ss
in
dec
jns
dec
sti
nop
adc
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
std
mov
lods
enter
dec
mov
dec
sti
call
bound
inc
sti
call
bound
dec
out
adc
dec
jge
(bad)
mov
inc
mov
sub
iret
dec
inc
cli
sbb
sar
nop
loop
into
lds
retf
push
stc
jp
ret
stc
jmp
(bad)
popf
adc
cld
das
push
adc
nop
add
popf
mov
mov
mov
mov
inc
mov
dec
repz
push
stc
call
dec
mov
pop
clc
push
push
add
jmp
scas
in
pop
rep
pop
rcr
adc
or
scas
in
dec
je
dec
sti
ds
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
sub
adc
push
mov
int
test
jmp
dec
pushf
push
mov
xchg
mov
bound
dec
lock
jo
in
dec
out
dec
sti
adc
bound
add
cdq
aaa
jge
(bad)
mov
nop
ds
pop
call
mov
std
mov
mov
lock
mov
bound
add
test
jae
xchg
mov
mov
cmps
or
adc
call
dec
mov
push
icebp
sbb
sbb
cmp
in
pop
ret
outs
dec
cmc
fwait
adc
aad
mov
dec
sti
std
adc
les
in
dec
repz
call
bound
dec
sti
call
bound
inc
rcl
inc
xchg
mov
scas
in
dec
cli
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
imul
imul
out
mov
sub
ret
push
mov
bound
leave
loopne
out
mov
adc
inc
mov
cmp
dec
cmp
ins
dec
(bad)
in
bound
paddb
mov
bound
dec
sti
lods
adc
les
in
dec
repz
(bad)
xchg
mov
dec
mov
dec
mov
dec
sti
call
bound
inc
sti
call
outs
test
fcom
nop
hlt
lea
pushf
lea
std
mov
dec
cmp
(bad)
jl
ins
pop
cli
call
outs
cmps
test
rep
dec
sti
call
ss
in
dec
mov
adc
les
in
dec
repz
call
bound
popa
aaa
pushf
push
mov
bound
dec
lock
jae
in
dec
out
dec
sti
xchg
nop
stos
mov
mov
mov
cmps
sub
int
inc
call
mov
xchg
mov
bound
push
shl
mov
call
fcomp
sub
cmp
int
rep
dec
fstp
mov
bound
psllq
mov
gs
in
dec
mov
dec
sti
lods
adc
les
in
dec
rep
dec
sti
call
arpl
inc
cld
fist
mov
bound
inc
sti
call
bound
stc
loope
out
mov
xchg
mov
mov
in
mov
dec
xor
mov
call
bound
popa
mov
xchg
mov
bound
dec
hlt
call
in
in
dec
mov
adc
les
in
dec
repz
dec
sti
call
bound
call
mov
inc
fcomp
dec
mov
xchg
mov
bound
dec
sti
call
bound
pop
sti
call
imul
sub
out
xchg
mov
mov
sub
inc
arpl
push
not
dec
shl
adc
adc
fld
aad
or
mov
mov
mov
pop
out
adc
lea
movs
or
mov
popf
push
adc
pusha
push
stos
mov
mov
push
jb
add
push
mov
xchg
pop
les
cld
dec
repz
mov
xchg
mov
bound
dec
jl
adc
les
in
dec
lea
xchg
adc
les
in
dec
repz
sti
call
bound
call
mov
inc
fcomp
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
sti
call
imul
pop
pushf
cdq
xor
fadd
nop
in
cdq
es
in
dec
cmc
dec
push
icebp
xchg
and
cmp
dec
xchg
jae
mov
xchg
mov
bound
mov
gs
fsubr
shl
outs
cmpxchg
adc
push
mov
bound
dec
rol
movs
cmp
ins
test
add
test
rep
dec
call
mov
add
dec
sti
adc
les
in
dec
repz
mov
bound
inc
sti
call
loopne
in
dec
aad
inc
shl
or
push
in
dec
imul
xchg
adc
les
in
dec
repz
sti
call
bound
push
lock
movs
or
dec
ror
lock
or
pop
fisttp
lock
mov
popf
sbb
mov
xchg
dec
clc
sti
or
bound
push
icebp
xchg
sub
fimul
test
jmp
movs
repnz
clc
push
jle
gs
cmp
push
icebp
test
mov
mov
popf
scas
(bad)
jl
ins
cmp
call
push
ins
dec
in
adc
les
in
dec
jmp
adc
les
out
sub
cwde
adc
les
in
dec
repz
rcl
nop
cli
mov
dec
repz
jecxz
adc
push
xchg
mov
outs
scas
in
dec
hlt
ins
dec
sti
call
bound
dec
sti
call
dec
xchg
repz
rcl
adc
pushf
bound
pop
shr
mov
bound
dec
sti
nop
adc
les
in
dec
repz
dec
sti
call
bound
dec
fld
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fbstp
popa
dec
cwde
push
aam
xchg
mov
dec
mov
addr16
jg
stc
call
bound
inc
sti
call
bound
dec
fistp
mov
inc
scas
in
dec
rep
dec
sti
nop
adc
lds
retf
push
stc
inc
call
test
rep
dec
in
nop
ds
sbb
pop
dec
fcomi
dec
sti
nop
aas
cmps
or
out
dec
stos
ins
dec
sti
mov
mov
daa
cmps
in
dec
rep
dec
sti
call
bound
outs
sti
call
bound
dec
sub
mov
dec
jg
dec
xchg
jae
mov
xchg
mov
bound
push
shl
mov
and
dec
stc
inc
push
icebp
mov
test
xchg
mov
bound
pop
shr
mov
dec
scas
in
dec
shr
nop
adc
les
in
dec
repz
dec
sti
call
bound
dec
fld
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fbstp
popa
dec
cwde
jp
add
(bad)
out
jg
stc
call
bound
inc
sti
call
bound
dec
xlat
call
push
ins
dec
sti
mov
cmp
bound
call
test
rep
dec
jecxz
ds
sbb
test
lock
sar
call
jno
out
dec
movs
ins
dec
sti
mov
mov
daa
cmps
in
dec
repz
sti
call
bound
push
call
bound
dec
sub
adc
push
mov
into
dec
jg
dec
xchg
jae
mov
xchg
mov
bound
push
shl
mov
and
data16
popa
push
call
bound
pop
loope
adc
push
xchg
mov
jp
in
dec
out
ins
dec
sti
xchg
les
in
dec
repz
sti
call
push
imul
call
cdq
or
pop
push
stc
inc
mov
cdq
adc
push
sub
call
bound
dec
std
call
mov
in
dec
cmc
dec
pusha
ror
adc
xchg
bound
pop
shr
mov
push
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
dec
fisttp
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fbstp
popa
dec
cwde
jp
add
(bad)
out
jg
stc
call
bound
inc
sti
call
bound
dec
sti
call
push
ins
dec
sti
call
bound
call
test
rep
dec
in
nop
ds
pop
mov
pop
dec
fcomi
dec
sti
nop
aas
mov
jno
out
dec
test
adc
ret
in
dec
repz
dec
sti
call
bound
fs
call
bound
dec
sub
adc
push
mov
into
dec
jg
dec
test
add
in
push
stc
inc
imul
mov
cmps
or
(bad)
ins
inc
rol
mov
push
lods
in
sbb
ins
dec
rcr
mov
push
in
dec
xlat
ins
dec
sti
call
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jp
add
frstor
scas
out
jmp
add
lds
popa
retf
pushf
push
mov
xchg
mov
bound
dec
xlat
call
push
ins
dec
sti
mov
mov
bound
dec
repz
loope
imul
test
rep
dec
call
cdq
jns
test
push
stc
inc
cld
stc
cdq
cmp
out
js
(bad)
out
pop
dec
sti
cld
adc
les
out
mov
dec
sti
call
bound
push
sti
call
bound
push
mov
xchg
mov
bound
test
mov
mov
or
inc
pop
lock
push
mov
bound
dec
std
call
gs
in
dec
and
dec
sti
pushf
xor
jno
out
dec
test
mov
ret
in
dec
rep
dec
sti
call
bound
dec
sti
call
data16
repnz
adc
(bad)
bound
and
mov
dec
dec
repz
in
xchg
adc
push
xchg
mov
gs
in
dec
rep
dec
sti
xchg
adc
les
in
dec
repz
call
dec
lods
out
and
dec
icebp
mov
xor
test
dec
repz
dec
sti
mov
mov
sar
dec
rep
outs
sti
call
bound
dec
rcr
mov
bound
dec
sti
pushf
xor
popa
into
repnz
sub
call
push
xchg
push
icebp
mov
mov
push
(bad)
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
icebp
scas
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
and
sub
(bad)
jl
ins
sbb
add
test
rep
dec
fistp
mov
dec
scas
in
dec
shr
call
bound
dec
sti
call
jne
(bad)
pushf
imul
in
dec
inc
xchg
mov
scas
in
dec
jmp
pop
pushf
cdq
jb
rol
pushaw
in
nop
adc
test
dec
repz
dec
sti
mov
pop
sar
dec
rep
ins
sti
call
bound
dec
icebp
call
inc
scas
in
dec
stc
ins
dec
sti
dec
cmp
test
dec
lock
mov
bound
dec
out
ds
sbb
hlt
inc
fadd
dec
xchg
xor
stos
enter
fnstenv
rol
adc
(bad)
(bad)
clc
in
dec
repz
dec
sti
mov
mov
sar
dec
rep
inc
sti
call
bound
dec
sti
call
dec
scas
in
dec
and
dec
sti
pushf
xor
into
hlt
adc
call
dec
adc
or
shr
mov
push
(bad)
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
cmc
scas
in
dec
aad
inc
ror
mov
arpl
dec
sti
sbb
mov
movs
(bad)
sti
icebp
add
sti
call
bound
adc
call
push
test
dec
xlat
call
inc
scas
in
dec
xlat
ins
dec
sti
mov
mov
bound
dec
sti
call
jne
(bad)
pushf
imul
in
dec
inc
xchg
mov
scas
in
dec
out
popaw
inc
cmp
pop
pushf
cdq
jb
lods
and
ins
inc
ror
add
(bad)
dec
repz
dec
sti
mov
pop
sar
dec
rep
psubq
mov
bound
dec
icebp
call
dec
scas
in
dec
rep
dec
sti
dec
mov
push
bound
test
loop
xchg
mov
bound
dec
sti
call
cwde
mov
popa
push
cwde
push
mov
int3
scas
in
inc
fldcw
call
mov
push
loope
sti
call
bound
push
icebp
pushf
push
mov
bound
dec
ficomp
mov
bound
dec
sti
lahf
adc
pop
mov
and
dec
sti
lea
nop
iret
sbb
icebp
outs
and
sub
in
dec
repz
adc
bound
dec
sti
call
inc
test
aad
jg
stc
call
bound
dec
sti
call
bound
dec
sti
call
bound
sub
mov
mov
scas
in
dec
jmp
popa
xor
ds
sbb
std
rep
inc
ror
mov
bound
dec
sti
call
bound
call
cdq
pop
bound
sti
call
fs
call
bound
dec
fistp
mov
push
ins
dec
sti
dec
mov
push
or
mov
bound
mul
mov
cmps
or
in
dec
stc
inc
push
icebp
mov
mov
xor
ins
dec
jmp
les
in
dec
repz
dec
sti
call
bound
push
call
bound
dec
std
mov
mov
add
dec
sti
call
dec
adc
or
shr
xchg
mov
mov
dec
mov
pop
retf
cdq
adc
in
bound
psllq
mov
dec
scas
in
dec
(bad)
ins
dec
sti
mov
mov
bound
dec
sti
call
arpl
popa
sub
popf
daa
scas
in
dec
repz
mov
sub
addr16
outs
dec
push
mov
shr
inc
dec
repz
stc
call
bound
dec
sti
call
bound
dec
sti
call
js
in
dec
imul
in
dec
inc
xchg
mov
scas
in
dec
jmp
popa
xor
ds
sbb
stc
rep
inc
rol
mov
bound
dec
sti
call
bound
call
cdq
pop
bound
sti
call
gs
call
bound
dec
pop
call
out
in
dec
stc
ins
dec
sti
or
les
in
dec
repz
dec
sti
call
arpl
popa
inc
mov
nop
mov
scas
in
dec
rep
dec
cld
call
outs
scas
in
dec
jecxz
dec
sti
mov
les
in
dec
repz
rcl
nop
cli
sbb
fcomp
nop
jmp
cdq
sub
test
pushf
push
ins
dec
std
mov
mov
mov
push
inc
xchg
mov
push
in
dec
in
addr16
ret
aad
inc
dec
repnz
clc
push
or
scas
into
jge
out
(bad)
xchg
mov
cwde
push
fwait
cmp
dec
repz
into
cli
call
imul
mov
xchg
mov
bound
popa
scas
popf
push
stos
add
in
inc
rep
dec
dec
call
ret
scas
in
dec
pop
ins
dec
sti
das
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
sub
adc
push
mov
iret
dec
add
inc
clc
inc
in
std
fistp
mov
bound
inc
sti
call
bound
dec
in
adc
les
dec
fldcw
test
cmp
dec
cmp
popaw
or
cdq
sub
(bad)
movs
in
gs
pop
test
loopne
mov
sub
cs
mov
add
loope
retf
push
mov
adc
daa
lods
in
dec
repz
pop
mov
bound
mov
or
jp
sbb
cli
push
not
dec
ror
mul
jno
adc
popf
mov
pushf
push
adc
fisttp
call
fisubr
push
cwde
adc
les
push
dec
repz
stc
cmc
mov
fsubr
loope
retf
test
add
adc
les
ins
dec
jmp
les
in
dec
repz
dec
sti
call
bound
call
add
in
enter
imul
les
in
dec
push
ins
dec
sti
dec
mov
add
push
pop
clc
inc
repnz
fistp
les
jmp
adc
aad
scas
in
pop
rep
dec
jecxz
adc
les
ret
mov
mov
movs
or
repnz
fadd
nop
out
mov
dec
repz
loop
cmpxchg
repnz
cmp
push
adc
xchg
mov
bound
mov
test
dec
sbb
test
pop
in
adc
sbb
or
out
dec
shl
sti
call
mov
in
dec
fnstenv
loope
sub
les
out
dec
sbb
mov
ret
daa
mov
dec
sti
call
bound
dec
sti
call
bound
dec
outs
call
in
in
dec
push
ins
dec
sti
xchg
adc
lds
retf
push
cli
addr16
inc
sbb
int3
bound
dec
cld
call
ins
scas
in
dec
loop
dec
sti
(bad)
adc
les
in
dec
repz
rcl
or
cli
mov
mov
xchg
ds
sbb
hlt
adc
call
imul
cdq
pop
shl
dec
rep
push
lock
lods
into
dec
pop
cmc
inc
in
pusha
inc
ret
movs
jmp
movs
repnz
clc
push
js
gs
pop
rep
(bad)
stc
fwait
adc
fld
aad
or
mov
mov
les
in
dec
loop
paddb
sbb
bound
aam
call
bound
dec
gs
jmp
in
dec
popa
ins
dec
sti
xchg
adc
les
in
dec
repz
popf
pop
pushf
mov
addr16
push
repz
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
or
sbb
xrelease
push
cli
inc
mov
sub
pusha
arpl
push
lock
mov
add
dec
sti
call
imul
cmps
or
adc
nop
or
cmp
out
push
test
rcr
scas
into
jnp
aad
or
mov
mov
les
in
dec
loop
push
cld
fistp
mov
bound
inc
sti
call
bound
dec
cwde
call
ss
in
dec
jnp
dec
sti
stc
adc
les
in
dec
repz
popf
sbb
out
inc
push
repz
gs
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
shr
xrelease
mov
mov
pop
push
mov
in
dec
aad
inc
in
xchg
sub
shl
pop
stos
sub
call
imul
mov
popf
mov
fcomp
xor
nop
push
mov
adc
pop
mov
mov
ins
dec
sti
mov
les
in
dec
loop
inc
repz
mov
bound
pop
sti
call
bound
dec
scas
call
fs
in
dec
cmc
ins
dec
sti
lock
fisubr
and
sti
call
bound
inc
sti
call
bound
in
loope
out
movs
or
repnz
fadd
nop
jmp
mov
dec
sti
popf
adc
cld
push
push
adc
nop
or
popf
mov
push
mul
mov
shrd
dec
shl
sti
call
je
in
hlt
ins
dec
sti
call
bound
dec
sti
call
bound
call
test
gs
call
bound
dec
jmp
adc
jae
test
push
fcomp
nop
icebp
mov
dec
cmc
dec
pusha
ret
jno
inc
call
jmp
sti
mov
ret
daa
mov
dec
sti
call
bound
inc
sti
call
bound
dec
push
adc
(bad)
repz
in
dec
(bad)
ins
dec
sti
clc
adc
lds
retf
pop
clc
inc
mul
xchg
push
nop
mov
test
rep
dec
repz
ins
scas
in
dec
loope
dec
sti
(bad)
adc
les
in
dec
repz
rcl
or
xchg
mov
add
adc
ds
sbb
icebp
adc
call
pop
retf
adc
test
loop
xchg
mov
bound
inc
lock
stos
out
xchg
mov
or
stos
into
js
aad
or
mov
cdq
xor
in
lods
in
dec
fnsetpm(287
dec
sti
pushf
aas
mov
js
adc
jge
mov
jae
test
sti
call
bound
inc
sti
call
bound
dec
test
adc
les
scas
in
dec
push
ins
dec
sti
adc
les
inc
dec
repz
loope
ds
push
popf
cdq
jl
jmp
call
bound
dec
jmp
les
in
dec
out
ins
dec
sti
xchg
nop
mov
(bad)
mov
mov
movs
or
repnz
fmul
adc
xchg
mov
jns
hlt
inc
retf
or
popa
mov
dec
repz
sti
call
popf
push
repz
inc
loop
sub
fisttp
test
jb
gs
scas
int
lock
dec
rcr
test
push
or
mov
mov
les
in
dec
loop
paddb
sbb
bound
fdivrp
call
bound
dec
push
call
bound
dec
sti
int
mov
bound
in
dec
repz
popf
pop
popf
mov
inc
fcomp
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
sti
call
push
inc
mov
nop
ds
sbb
repnz
fadd
mov
jae
int
dec
cmp
fld
sar
popf
push
call
mov
xchg
mov
bound
mov
gs
nop
test
push
shr
mov
popf
mov
popf
push
adc
dec
aad
call
dec
jbe
dec
cmc
inc
push
icebp
xchg
adc
dec
cmp
fisttp
test
call
gs
call
bound
dec
jle
adc
les
scas
in
dec
mov
adc
les
in
dec
repz
sti
call
arpl
inc
shl
add
push
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
bound
push
lock
mov
xchg
mov
mov
mov
movs
sub
out
mov
dec
sti
pushf
xor
pop
retf
or
dec
call
les
in
dec
repz
ret
aad
inc
dec
out
jmp
mov
mov
loope
retf
pop
mov
gs
fwait
pop
xchg
mov
inc
in
dec
repz
sbb
call
imul
mov
xchg
pop
les
cld
dec
repz
mov
xchg
mov
bound
dec
xchg
mov
in
in
dec
ins
dec
sti
adc
les
in
dec
repz
call
bound
call
mov
inc
fcomp
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
sti
call
push
inc
mov
mov
movs
sub
out
xchg
mov
mov
test
pop
pop
pushf
cdq
daa
mov
in
dec
cmc
dec
pop
icebp
test
mov
hlt
dec
cmp
add
mov
xchg
mov
bound
mov
cmp
push
pushf
lods
enter
mov
xchg
push
shr
mov
call
shl
dec
sti
call
jmp
in
dec
fnstcw
in
push
sbb
dec
cmp
(bad)
jl
ins
pop
cli
call
cs
inc
rep
dec
hlt
call
cld
scas
in
dec
dec
ins
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sub
adc
push
mov
iret
dec
sbb
inc
clc
inc
in
fistp
add
out
rep
inc
sti
call
bound
dec
loopne
adc
les
in
dec
in
pusha
inc
ret
out
inc
dec
sbb
popf
push
shl
jmp
mov
test
inc
stos
in
data16
mov
fs
inc
in
jb
gs
imul
repz
jge
out
lds
nop
test
inc
retf
dec
mov
or
jns
sti
inc
retf
jnp
add
pop
fwait
add
in
dec
repz
sbb
call
cmp
push
loopne
add
popf
mov
dec
sti
call
gs
call
bound
dec
ins
call
jecxz
in
dec
cld
ins
dec
sti
nop
adc
les
in
dec
repz
call
arpl
popa
inc
test
mov
and
imul
xchg
adc
les
in
dec
repz
sti
call
bound
push
icebp
xchg
ds
pop
popf
cdq
cmp
in
mov
pop
pushf
cdq
cs
or
inc
test
sar
mov
fs
inc
out
addr16
gs
imul
cld
call
popf
push
adc
inc
mov
cmp
(bad)
mov
mov
mov
pushf
lods
in
dec
rol
xor
xchg
mov
jnp
lock
retf
jp
add
push
mov
xchg
push
les
cld
dec
repz
mov
xchg
mov
bound
dec
icebp
call
add
dec
sti
loope
mov
bound
in
dec
repz
sti
call
bound
call
mov
addr16
push
repz
gs
in
dec
clc
ins
dec
sti
xchg
adc
les
in
dec
repz
sti
call
dec
and
or
shr
sub
dec
inc
mul
jb
adc
adc
scas
in
dec
aad
inc
loop
sub
shl
push
stos
sub
call
imul
mov
popf
mov
fcomp
xor
dec
cmp
mov
rep
push
cwde
adc
les
inc
jmp
add
or
pop
sti
call
bound
dec
stos
call
add
dec
sti
push
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
inc
mov
addr16
jne
shl
adc
or
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
bound
push
shl
nop
test
cmps
in
mov
lods
sub
out
xchg
dec
repz
in
nop
or
popf
push
out
dec
xchg
jae
mov
xchg
mov
bound
mov
gs
nop
test
out
loope
or
adc
call
dec
imul
cmc
inc
pop
icebp
test
mov
lea
popf
scas
(bad)
jl
ins
mov
add
test
rep
dec
mov
xchg
mov
sbb
dec
sti
xchg
adc
les
in
dec
repz
mov
bound
int
call
shr
inc
lock
cmps
or
in
dec
repz
mov
bound
pop
sti
call
bound
dec
loopne
ds
mov
hlt
addr16
jo
or
cdq
cs
or
mov
mov
mov
xchg
inc
call
test
rep
dec
jecxz
sub
(bad)
test
jb
gs
mov
je
xchg
mov
cwde
push
mov
bound
bound
adc
fisubr
div
lahf
adc
aad
scas
cld
addr16
psadbw
mov
bound
dec
sti
or
mov
bound
in
dec
repz
call
bound
sbb
call
bound
dec
std
mov
lods
enter
dec
mov
dec
sti
call
bound
inc
sti
call
bound
dec
in
adc
out
out
mov
or
or
pushf
cdq
sub
add
inc
mov
push
mov
in
dec
aad
inc
out
sub
retf
mov
xor
mov
jge
out
mov
push
nop
test
mov
xchg
push
shr
mov
popf
mov
popf
push
adc
push
mov
bound
pusha
in
nop
or
popf
scas
in
pop
ret
outs
dec
sbb
xchg
mov
dec
jmp
or
ins
dec
sti
adc
les
in
dec
repz
dec
sti
call
bound
sbb
call
bound
dec
hlt
call
mov
in
dec
cmc
dec
pop
lock
movs
or
in
rep
dec
sti
call
bound
dec
jmp
xchg
mov
js
in
dec
out
ins
dec
sti
sbb
lea
sbb
inc
mov
pop
call
jmp
shl
les
inc
in
addr16
ret
cli
jmp
imul
cld
call
popf
push
adc
fwait
pop
icebp
test
mov
test
cmp
push
lock
sub
(bad)
jge
repnz
gs
sti
pushf
aas
mov
pop
mov
mov
ins
dec
call
xchg
mov
jae
in
pop
fsubr
dec
mov
xor
in
dec
repz
call
bound
inc
sti
call
bound
dec
jge
adc
les
in
dec
and
dec
sti
pushf
xor
imul
add
out
rep
inc
sti
call
bound
dec
loopne
adc
dec
jne
pop
push
cli
inc
mov
sub
out
(bad)
mov
sbb
sbb
and
icebp
inc
jmp
jb
gs
jmp
call
popf
push
repnz
fcomp
add
cmp
sbb
je
ret
lods
jmp
scas
in
dec
ror
dec
sti
call
jle
cmc
inc
retf
jo
add
adc
les
in
dec
aam
dec
jmp
les
in
dec
rep
dec
sti
call
bound
sbb
call
bound
dec
mov
pushf
scas
enter
or
ins
dec
sti
sahf
adc
les
in
dec
repz
dec
sti
call
bound
push
shl
nop
test
push
shl
mov
cmp
in
dec
rep
dec
sti
call
imul
in
jmp
movs
icebp
inc
retf
pop
mov
gs
mov
bound
dec
rol
mov
imul
dec
rep
ja
call
bound
dec
(bad)
call
bound
dec
sti
pushf
xor
scas
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
cwde
mov
mov
sub
jo
scas
jmp
fst
gs
scas
in
pop
rep
pop
rcr
adc
or
scas
in
dec
mov
call
(bad)
clc
in
dec
repz
call
bound
fdivrp
call
bound
dec
sub
adc
push
mov
iret
imul
add
in
rep
inc
sti
call
bound
dec
loopne
adc
les
out
jg
inc
shl
mov
arpl
sbb
or
jge
(bad)
lods
and
dec
sti
pushf
xor
add
mov
outs
sub
mov
mov
gs
in
dec
in
jb
gs
mov
je
xchg
mov
cmp
sbb
mov
outs
push
cdq
adc
les
sub
push
loopne
push
mov
mov
popf
scas
in
pop
ret
outs
dec
sbb
mov
dec
jmp
or
ins
dec
sti
adc
les
in
dec
repz
dec
sti
call
bound
(bad)
sti
call
bound
dec
push
adc
les
dec
push
lock
mov
daa
cmps
in
dec
repz
mov
bound
pop
sti
call
bound
dec
loope
ds
js
sbb
lahf
push
shr
mov
jp
out
mov
popa
sbb
mov
push
xchg
mov
sahf
push
ficomp
fucomp
and
dec
sti
sbb
cmp
(bad)
mov
mov
scas
out
xchg
mov
push
clc
push
jg
gs
push
push
icebp
xchg
and
dec
cmp
in
pop
ret
push
mov
jge
loope
mov
dec
sti
call
bound
and
call
bound
dec
movs
call
bound
dec
sti
mov
lods
or
jp
daa
test
dec
sti
call
bound
pop
sti
call
push
popaw
add
cdq
ss
add
adc
adc
daa
scas
in
dec
repz
or
popf
mov
mov
mov
test
pop
call
gs
scas
int
repnz
dec
rcl
mov
imul
dec
rep
dec
sti
call
bound
dec
(bad)
call
bound
dec
sti
pushf
xor
scas
in
dec
imul
popf
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
mov
arpl
mov
xor
in
pop
rep
pop
rcr
adc
or
scas
in
dec
stc
ins
dec
sti
adc
les
in
dec
repz
sti
call
bound
inc
sti
call
bound
dec
sub
adc
push
mov
iret
dec
adc
inc
fcom
dec
mov
xchg
mov
bound
dec
sti
call
bound
push
sti
call
push
inc
mov
mov
mov
xchg
mov
mov
cmp
pop
pushf
cdq
daa
mov
in
dec
cmc
dec
push
icebp
test
cmp
dec
cmp
pusha
adc
sahf
mov
bound
mov
or
imul
mov
mov
pop
popf
adc
test
mov
out
cli
addr16
gs
stos
in
cmps
rep
dec
jmp
sub
dec
sti
nop
adc
les
in
dec
repz
call
bound
inc
sti
call
bound
dec
pop
call
fs
inc
fcom
push
lock
mov
bound
dec
sti
call
bound
pop
sti
call
bound
(bad)
in
ds
pop
lahf
cdq
xor
pop
push
clc
inc
movs
loope
(bad)
mov
dec
dec
repnz
fmul
mov
mov
xchg
dec
(bad)
sti
or
scas
in
rep
push
icebp
xchg
sub
ror
cli
inc
in
addr16
gs
mov
je
xchg
mov
cwde
push
fwait
rcl
dec
repz
(bad)
adc
pop
mov
mov
ins
dec
call
xchg
mov
inc
scas
in
pop
in
inc
repz
mov
bound
jo
call
bound
dec
sbb
les
in
dec
cmc
ins
dec
sti
call
outs
test
sti
call
bound
inc
sti
call
bound
in
loopne
out
mov
xchg
mov
mov
mov
mov
xchg
rcr
push
imul
cld
call
popf
push
adc
fwait
push
icebp
mov
xor
cmp
sbb
jp
ret
(bad)
jmp
mov
jl
call
dec
mov
dec
sti
call
bound
dec
sti
call
bound
dec
cld
call
fs
push
clc
imul
call
gs
in
dec
stc
ins
dec
sti
xchg
adc
les
loopne
inc
je
add
inc
fmul
mul
mov
popf
sbb
or
or
dec
call
xchg
mov
inc
scas
in
pop
in
inc
mov
cmc
mov
bound
dec
sti
call
bound
sub
call
bound
dec
mov
pushf
test
dec
addr16
cmc
ins
dec
sti
sahf
adc
les
in
dec
repz
dec
sti
call
bound
pop
shl
nop
test
pop
shl
mov
daa
lods
in
dec
repz
mov
add
adc
mov
mov
popf
push
mul
jnp
loope
sub
mov
dec
repz
psubb
mov
dec
mov
dec
sti
call
bound
add
add
in
dec
rep
dec
std
call
mov
in
dec
cmc
dec
pusha
loop
adc
push
xchg
mov
scas
in
dec
hlt
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
cwde
mov
mov
mov
mov
mov
dec
repz
loope
ds
xchg
fnsave
scas
out
retf
mov
mov
vpsllq
mov
add
mov
dec
rep
or
call
bound
dec
aam
adc
les
in
dec
fsubr
xchg
adc
lds
retf
push
cli
popaw
cmp
push
ficomp
(bad)
jmp
popa
scas
in
dec
imul
popf
adc
les
out
pop
je
add
inc
fld
(bad)
shl
add
sti
call
bound
dec
sti
nop
aas
movs
or
jl
ins
sub
call
push
ins
dec
loope
adc
les
in
dec
jmp
adc
les
out
sub
fwait
adc
les
out
cmp
popa
add
call
addr16
mov
xchg
mov
bound
dec
sti
call
bound
dec
fnsave
mov
dec
rep
(bad)
sti
call
bound
dec
fistp
mov
push
ins
dec
sti
mov
mov
bound
hlt
cli
call
data16
mov
xor
mov
jne
(bad)
icebp
out
inc
mov
nop
ds
bound
loope
mov
les
in
dec
loop
jp
fistp
les
out
rep
ins
sti
call
bound
dec
retf
call
mov
in
dec
cmc
dec
pop
icebp
mov
mov
cwde
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fnstenv
popa
dec
cwde
push
mov
bound
in
call
xchg
mov
jae
in
pop
jmp
add
in
dec
repz
sti
call
bound
inc
call
test
rep
dec
in
nop
ds
mov
sub
push
mov
cmp
sti
call
bound
dec
sti
call
inc
test
fcomi
ins
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
sti
call
bound
popa
sti
call
mov
jnp
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
bound
adc
out
leave
scas
(bad)
jl
ins
adc
call
push
test
dec
sti
call
inc
scas
in
dec
shr
mov
mov
bound
dec
sti
call
jle
(bad)
pushf
std
push
loop
xchg
mov
bound
inc
shl
or
out
xlat
lods
out
dec
fcmovnbe
dec
sti
nop
aas
cmps
or
fisttp
sbb
call
fs
call
bound
dec
in
adc
les
mov
xor
mov
pop
scas
in
dec
call
ds
push
pushf
cdq
add
xor
ins
inc
rol
mov
bound
dec
sti
call
bound
dec
sti
call
inc
test
dec
pushf
lods
dec
sti
nop
aas
nop
mov
mov
sti
call
bound
dec
icebp
call
inc
scas
in
dec
rep
dec
sti
mov
mov
bound
mov
call
popa
lods
mov
xor
mov
jle
(bad)
icebp
jmp
mov
nop
ds
push
ror
and
les
in
dec
loop
jp
fistp
les
ret
dec
rep
outs
sti
call
bound
dec
sti
call
mov
in
dec
cmc
dec
push
icebp
mov
mov
xchg
rcr
push
imul
call
cdq
js
test
push
stc
inc
(bad)
stc
cdq
adc
dec
mov
addr16
ins
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
movs
scas
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
and
sub
(bad)
jl
ins
sbb
add
test
rep
dec
fistp
mov
push
ins
dec
sti
nop
adc
les
in
dec
repz
sti
call
js
(bad)
pushf
imul
in
dec
inc
xchg
mov
scas
in
dec
in
popa
inc
cmp
jb
shr
repz
loope
adc
test
dec
repz
sti
mov
mov
shl
rep
push
sti
call
bound
dec
ficomp
rcr
push
imul
call
cdq
or
pop
pop
stc
inc
cmp
cmp
out
jnp
jmp
adc
les
in
dec
rep
dec
sti
call
arpl
sar
mov
les
in
dec
loop
inc
std
fist
mov
bound
pop
sti
call
bound
dec
cmc
sahf
adc
pop
lods
jmp
arpl
dec
sti
sbb
into
sbb
rcr
or
dec
rep
dec
sti
call
bound
dec
sti
call
fs
fs
dec
sti
mov
les
in
dec
loop
inc
std
fist
mov
bound
outs
sti
call
bound
dec
cmc
lahf
sbb
daa
scas
in
dec
repz
mov
pop
movs
out
cwde
mov
dec
call
mov
or
ins
dec
sti
popf
adc
les
in
dec
repz
adc
arpl
(bad)
mov
les
in
dec
loop
inc
std
fist
mov
bound
pop
sti
call
bound
dec
call
test
rep
dec
jecxz
ds
mov
and
sti
nop
aas
mov
bound
dec
std
call
bound
dec
sti
dec
fidivr
dec
xor
dec
sti
int
mov
jae
fisttp
fs
sti
call
bound
push
call
bound
dec
icebp
call
fs
inc
fdivr
pop
shl
dec
rep
push
icebp
mov
lods
sub
dec
sbb
and
ins
dec
icebp
mov
mov
cmp
in
sub
ins
dec
jmp
and
sti
adc
bound
dec
sti
call
add
dec
sti
call
dec
pusha
mul
je
rcl
mov
push
sub
call
bound
dec
sti
call
mov
in
dec
cmc
dec
pusha
rol
adc
lods
bound
pop
shr
mov
push
ins
dec
sti
mov
mov
bound
sti
call
bound
call
mov
sub
cwde
adc
les
in
dec
repz
shr
seto
mov
out
add
add
jle
bound
sar
call
bound
pop
shr
mov
inc
scas
in
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
bound
dec
fld
mov
jge
mov
repnz
dec
sti
sahf
adc
out
fbstp
popa
dec
cwde
jp
add
(bad)
out
jg
stc
call
bound
dec
sti
call
bound
dec
sti
call
jl
in
dec
imul
in
dec
inc
xchg
mov
scas
in
dec
int
dec
sti
fcom
out
movs
mov
mov
popaw
cmp
mov
dec
mov
dec
mov
dec
sti
call
bound
pop
sti
call
bound
dec
sub
mov
popa
shl
repz
stc
cdq
jp
add
adc
stos
pop
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
repz
dec
sti
call
bound
inc
sti
call
mov
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
bound
call
leave
scas
(bad)
jl
ins
and
call
push
ins
dec
sti
call
bound
dec
sti
adc
bound
push
xchg
ret
push
mov
bound
xchg
mov
mov
popa
stos
call
icebp
mov
mov
shl
dec
rep
dec
sti
call
bound
dec
sub
mov
imul
adc
call
push
test
dec
sti
call
inc
scas
in
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
jle
(bad)
pushf
std
imul
mov
bound
inc
shl
or
out
xlat
lods
out
dec
test
sti
call
bound
sti
call
fs
call
bound
dec
in
call
ins
stos
call
mov
xchg
mov
bound
popa
add
mov
or
inc
push
lock
push
mov
bound
dec
sti
call
bound
dec
sti
pushf
xor
bound
sti
call
fs
call
bound
dec
sti
call
inc
scas
in
dec
shr
dec
sar
test
call
les
in
dec
repz
shl
or
(bad)
lods
out
dec
test
pop
xchg
push
pushf
cdq
bound
in
nop
ins
dec
sti
mov
mov
daa
cmps
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
sub
push
mov
into
dec
jg
inc
std
fs
ret
push
mov
bound
imul
mov
mov
popa
stos
call
cmc
pushf
sbb
test
inc
fdiv
dec
call
xchg
mov
dec
scas
in
pop
fcomp
xchg
adc
les
in
dec
rep
dec
sti
call
bound
inc
sti
call
mov
in
dec
aad
inc
ror
mov
daa
scas
in
dec
repz
mov
sub
addr16
outs
and
sub
(bad)
jl
ins
sub
call
push
ins
dec
fistp
mov
je
in
dec
rep
dec
sti
mov
les
out
sub
fwait
adc
les
out
cmp
popa
add
call
addr16
mov
xchg
mov
bound
dec
sti
call
bound
dec
fnsave
mov
dec
rep
(bad)
sti
call
bound
dec
sti
call
dec
scas
in
dec
shr
nop
adc
les
in
dec
repz
popf
sbb
push
mov
psubd
mov
js
(bad)
icebp
out
inc
mov
nop
ds
push
ror
and
les
in
dec
loop
jle
fistp
add
retf
ins
inc
sti
call
bound
dec
ret
mov
bound
dec
sti
pushf
xor
popa
into
repnz
stos
sub
call
bound
(bad)
in
mov
mov
dec
add
and
ins
dec
icebp
mov
aam
xchg
mov
dec
mov
addr16
dec
sti
mov
les
in
dec
loop
jp
fistp
les
leave
dec
rep
dec
sti
call
bound
dec
rcr
mov
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
lock
fcomp
bound
call
into
scas
in
pop
ret
imul
adc
aad
lahf
jmp
sti
ins
dec
sti
call
bound
dec
sti
call
bound
inc
sti
call
inc
mov
and
cmc
popf
je
and
test
rep
dec
out
add
mov
pop
dec
lock
mov
bound
popa
pop
call
bound
pop
jecxz
adc
push
xchg
mov
ja
in
dec
rep
dec
sti
call
bound
dec
sti
call
arpl
dec
sti
sbb
ror
test
outs
and
sub
in
dec
rep
dec
sti
call
bound
dec
sti
call
inc
test
(bad)
rep
pop
retf
xchg
adc
aad
scas
cld
push
stc
push
std
call
jp
in
dec
out
ins
dec
sti
xchg
les
in
dec
repz
xchg
je
sbb
test
rep
dec
in
nop
ds
mov
sub
push
mov
dec
jo
dec
stc
inc
pop
lock
push
mov
bound
dec
cld
call
fs
in
dec
and
xchg
sub
mov
push
lods
in
sbb
ins
dec
rcr
mov
push
in
dec
fsubr
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jbe
add
call
popaw
push
call
bound
popa
retf
pushf
push
mov
xchg
mov
bound
dec
icebp
call
inc
scas
in
dec
rep
dec
sti
mov
mov
bound
dec
repz
jecxz
imul
mov
adc
call
dec
adc
or
shr
pop
mov
bound
popa
pop
mov
les
in
dec
loop
jp
fistp
les
(bad)
dec
rep
outs
sti
call
bound
dec
icebp
call
mov
in
dec
cmc
dec
push
icebp
mov
mov
cmp
in
dec
rep
dec
sti
call
dec
push
icebp
inc
fcomp
dec
sar
mov
dec
add
pop
ret
outs
dec
xchg
call
dec
fwait
jmp
cli
ins
dec
sti
mov
mov
bound
dec
sti
call
bound
inc
sti
call
sub
rcl
mov
pusha
scas
in
dec
imul
popf
adc
out
aam
(bad)
mov
inc
mov
add
push
les
(bad)
dec
pushf
mov
nop
aas
cmps
or
in
sbb
ins
dec
rcr
mov
push
in
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
bound
call
mov
sub
fwait
adc
les
out
dec
jne
add
push
les
(bad)
push
stc
inc
out
call
bound
push
icebp
pushf
push
mov
bound
dec
loop
adc
les
in
dec
rep
dec
sti
sahf
push
ficomp
test
rep
dec
in
nop
imul
dec
fild
and
pushf
mov
nop
aas
mov
bound
dec
cld
call
gs
in
dec
rep
dec
sti
dec
icebp
mov
dec
xor
dec
rep
dec
cli
call
pusha
scas
in
dec
push
data16
cwde
adc
mov
fwait
repz
rep
dec
sti
call
bound
dec
sti
call
bound
push
inc
mov
mov
repz
dec
repnz
dec
sti
jne
mov
xchg
mov
bound
push
arpl
mov
and
lods
in
aas
inc
pop
or
in
dec
rep
dec
xchg
test
out
fwait
mov
dec
clc
ins
dec
sti
jnp
pop
pop
push
cwde
ins
jge
rcr
(bad)
fwait
hlt
mov
out
outs
scas
out
rep
xchg
in
aas
adc
sub
jle
mov
xchg
test
mov
dec
fs
mov
cmp
or
int
in
stc
pusha
pop
test
jmp
fst
xor
inc
sub
mov
ret
rol
movs
lods
mov
test
dec
lock
adc
jnp
or
(bad)
stc
sbb
xchg
fwait
mov
mov
pusha
cmp
aad
or
jae
dec
dec
mov
dec
pop
mov
mov
mov
call
icebp
scas
cmp
jge
in
dec
rep
dec
scas
mov
movs
fidiv
dec
dec
sti
xchg
or
outs
lods
push
dec
mov
dec
push
mov
sbb
rol
sti
mov
mov
dec
add
cmc
fistp
movs
shl
dec
push
pop
inc
cwde
icebp
out
xchg
push
dec
xchg
cs
(bad)
fucomp
mul
nop
imul
bound
xlat
dec
pop
fld
mov
repnz
fincstp
push
push
mov
mov
mov
rcpps
aad
and
jne
xor
fxch
push
push
mov
mov
mov
add
pop
inc
pop
sti
cwde
adc
jg
mov
dec
rep
dec
inc
mov
mov
xchg
mov
bound
dec
sti
call
bound
push
and
cli
movs
test
inc
xchg
in
adc
and
fld
push
pop
mov
mov
mov
in
dec
sub
sar
or
(bad)
test
sti
call
bound
imul
adc
out
stos
in
dec
repz
fs
test
fwait
loop
xchg
les
in
dec
std
jb
fstp
mov
inc
mov
dec
rep
dec
jne
xchg
les
in
dec
and
cmp
or
in
mov
nop
xor
bound
sub
mov
mov
push
ins
dec
sti
call
bound
mov
pop
push
sahf
sub
ret
jne
mov
mov
xor
xlat
dec
pop
(bad)
cs
in
mov
test
pop
mov
ins
push
jae
sar
sbb
mov
mov
xchg
push
jg
stos
movs
mov
add
in
aas
xchg
add
(bad)
arpl
addr16
sti
call
add
aad
sub
push
aas
pop
pop
sub
in
dec
rep
dec
jae
out
inc
mov
in
dec
jge
js
(bad)
adc
fdivr
lahf
in
xlat
pusha
ja
mov
jno
adc
and
or
sub
mov
mov
mov
mov
push
mov
dec
shr
inc
xor
jp
or
int3
stc
sbb
rcr
into
mov
pusha
aas
data16
cmps
or
jle
adc
repnz
fbld
movs
shl
push
push
push
inc
(bad)
icebp
cli
cmp
jge
(bad)
jns
outs
dec
sti
call
push
scas
in
rep
sahf
shl
xor
mov
mov
movs
push
int3
call
retf
inc
test
sti
cwde
adc
pop
push
ins
dec
pop
nop
xchg
sub
out
dec
rep
sub
mov
outs
and
in
popa
in
test
sbb
mov
bound
dec
sti
call
jge
in
dec
rep
dec
jp
mov
mov
add
sti
call
push
mov
xchg
dec
in
dec
rep
in
xlat
fist
ss
outs
dec
sti
call
pusha
scas
in
dec
lds
fcmovnu
adc
ss
inc
repnz
fld
push
inc
mov
mov
mov
out
dec
rep
mov
or
std
add
(bad)
cmc
in
shl
jae
cmp
stos
dec
lock
dec
sti
and
mov
dec
repz
nop
arpl
xchg
mov
mov
sti
call
bound
enter
dec
xchg
mov
bound
test
add
int
in
out
pusha
inc
test
jmp
dec
sti
push
or
add
out
in
and
call
mov
(bad)
bound
adc
xchg
dec
(bad)
in
inc
rep
dec
push
nop
jg
cmp
outs
pop
jae
xlat
jg
sti
cs
lods
cmp
rep
dec
sti
call
xor
push
in
xor
gs
ror
out
fimul
jb
cmps
ins
dec
sti
call
dec
adc
sbb
pusha
dec
sti
call
int3
cmp
xchg
inc
jb
dec
xor
jp
inc
rcr
outs
dec
sti
call
xor
ins
mul
cmp
jecxz
xchg
mov
bound
rcl
fnsave
bound
dec
sti
call
jge
in
dec
rep
dec
ds
or
dec
lock
dec
sti
pop
or
sub
in
dec
repz
pusha
push
test
les
push
push
pop
inc
sahf
icebp
cli
adc
dec
dec
pop
out
rep
dec
sti
call
add
or
stc
adc
in
jl
int
rep
dec
sti
call
outs
scas
in
dec
sub
shl
or
sub
mov
mov
mov
movs
lahf
mov
in
dec
push
inc
mul
xor
jp
lock
lock
int
in
mov
xchg
sbb
imul
add
rol
xchg
mov
bound
shr
adc
les
in
dec
ret
sti
fwait
adc
test
lods
in
dec
repz
mov
xor
xlat
dec
pop
shr
mov
bound
push
inc
mov
mov
mov
or
inc
loop
and
jp
call
int
in
jmp
test
jmp
rcl
cmp
add
mov
mov
(bad)
push
push
stos
movs
lods
mov
xchg
push
pushf
ins
inc
sti
call
push
mov
xchg
jo
xchg
les
inc
pusha
ds
jmp
lods
push
dec
inc
repnz
fild
movs
fbstp
add
inc
fdiv
mov
xchg
data16
(bad)
scas
in
nop
data16
and
mov
movs
xlat
jmp
mov
push
stos
push
call
xor
ins
dec
sti
call
jge
in
inc
rep
dec
xor
loopne
fnstcw
inc
test
in
adc
ja
data16
scas
in
sahf
fs
sub
adc
in
dec
rep
out
in
adc
push
jge
in
inc
rep
dec
ins
mov
mov
mov
xor
inc
mov
pop
cmp
add
out
fnsave
sbb
mov
cmps
push
repnz
dec
sti
call
(bad)
(bad)
(bad)
inc
jg
lods
daa
mov
xchg
mov
scas
test
into
les
mov
pop
scas
in
fsub
ins
dec
fmul
popa
leave
imul
in
dec
(bad)
ds
sti
mov
xchg
sub
in
dec
repz
sti
call
push
ror
call
bound
inc
lods
das
pop
xchg
xchg
mov
bound
jg
jp
sti
fwait
adc
les
in
dec
repz
dec
sti
call
bound
dec
sti
call
bound
dec
std
call
ins
scas
in
dec
repnz
dec
sti
fwait
adc
les
in
dec
rep
dec
cli
call
fs
pop
dec
cmps
ins
dec
sti
and
mov
bound
dec
repz
dec
adc
pop
mov
jo
ret
ins
pop
sti
aam
jecxz
nop
mov
arpl
dec
repz
mov
fs
scas
dec
cmps
ins
dec
sti
rcl
out
add
in
dec
repz
dec
scas
call
fs
dec
cmps
ins
pop
sti
pop
pop
adc
nop
mov
pusha
inc
in
pop
repz
mov
fs
or
sbb
sti
popw
push
add
in
dec
repz
adc
adc
fs
repnz
ss
pop
sti
mov
lea
xor
repz
cmps
call
je
or
pop
sti
in
push
out
nop
mov
popa
push
pop
repz
dec
int3
fwait
adc
je
push
dec
scas
ins
dec
sti
pop
push
out
pushf
mov
popa
jo
dec
repz
retf
mov
push
push
out
add
in
inc
repz
dec
and
pop
mov
ins
scas
mov
sti
int3
adc
addr16
rep
dec
scas
call
push
ins
pop
sti
cwde
adc
fs
in
inc
repz
dec
rcr
test
jo
xor
ins
dec
sti
adc
mov
gs
in
cmps
repz
dec
sti
call
jo
mov
sti
movhlps
add
inc
in
pop
repz
dec
int3
fwait
pop
mov
ins
scas
out
inc
mov
dec
sti
sbb
push
in
dec
repz
inc
ds
jo
outs
inc
scas
outs
dec
sti
sub
out
add
dec
repz
retf
mov
push
outs
dec
sti
retf
sbb
add
in
pop
repz
inc
cmps
call
ins
scas
iret
inc
mov
jne
xlat
pop
mov
push
jmp
mov
push
ins
inc
sti
add
add
in
dec
repz
call
fs
mov
sti
mov
mov
ins
retf
repz
rcr
out
jo
clc
pop
stos
ins
dec
sti
mov
mov
jae
out
dec
repz
pop
sahf
xchg
adc
fs
cwde
pop
xchg
bound
call
bound
dec
jmp
mov
les
in
dec
repnz
dec
sti
mov
mov
bound
push
call
xor
push
cld
call
bound
dec
sti
call
scas
in
dec
mov
adc
shl
mov
ins
dec
(bad)
call
bound
dec
sti
mov
mov
bound
dec
repz
xchg
mov
into
scas
inc
dec
imul
mov
mov
gs
in
dec
repz
dec
xchg
fwait
adc
bound
jmp
mov
bound
in
pop
repz
inc
call
jno
sti
dec
and
adc
shl
in
pop
repz
push
call
jno
sti
dec
sub
adc
shl
in
push
repz
and
push
dec
adc
mov
shl
in
pop
repz
dec
call
dec
scas
sti
dec
dec
ins
push
sti
mov
shl
in
jge
jge
and
xchg
les
cld
dec
mov
sti
pushf
adc
ret
call
mov
push
mov
retf
stos
fmul
out
stos
adc
cmc
bound
in
std
idiv
push
call
fwait
test
dec
dec
ins
pop
sti
cdq
adc
(bad)
bound
sti
call
sub
in
dec
rep
dec
sti
sbb
xchg
bound
dec
jnp
add
ficom
in
dec
rep
retf
xor
ret
in
dec
repz
dec
jmp
les
in
dec
jae
pop
fild
add
in
int3
repz
rcr
mov
bound
test
adc
les
in
pop
shl
mov
bound
aam
adc
bound
dec
loope
lds
scas
push
dec
dec
ins
push
sti
dec
aas
mov
bound
in
inc
bnd
fcmovnu
adc
les
ins
xor
xor
repz
or
push
xchg
sbb
inc
scas
repz
(bad)
dec
sti
call
arpl
dec
sti
call
inc
scas
jge
rep
dec
sti
mov
in
ja
dec
rep
dec
in
call
es
in
dec
rep
pop
sti
sub
mov
cmp
dec
inc
call
bound
popa
cli
nop
adc
add
rol
bound
dec
icebp
fwait
xor
bound
pop
stc
mov
mov
bound
dec
rcr
mov
jae
xor
(bad)
sti
(bad)
jp
add
in
add
inc
dec
ret
sbb
les
ds
adc
es
pop
leave
sti
call
xlat
lods
ror
sti
call
popa
sub
out
ins
dec
sti
call
dec
scas
mov
ins
dec
sti
mov
jmp
out
enter
dec
in
call
dec
lahf
in
dec
rep
pop
sti
dec
adc
push
scas
in
dec
repz
mov
fidivr
arpl
xchg
call
adc
lds
in
pop
repz
(bad)
mov
bound
fdivr
test
repz
xchg
mov
bound
dec
enter
add
sti
dec
popa
push
mov
jp
in
push
repz
dec
sti
call
into
scas
das
dec
lds
call
bound
dec
sti
call
mov
ror
dec
sti
sbb
inc
(bad)
out
in
dec
rep
dec
jnp
add
loop
push
and
retf
xor
xchg
in
dec
repz
dec
jmp
les
ins
dec
sti
inc
adc
xor
scas
in
dec
rep
dec
inc
call
arpl
popa
cli
mov
inc
out
in
lds
in
dec
repz
xlat
lahf
push
mov
bound
add
fcom
les
cmc
(bad)
repnz
call
jno
(bad)
dec
sub
cmp
xlat
bound
cmp
adc
add
nop
dec
mov
adc
jg
sub
add
cwde
(bad)
cli
call
rep
mov
sti
call
addr16
in
js
ins
dec
sti
call
cmp
dec
sti
mov
call
dec
call
xchg
rol
(bad)
aaa
in
dec
rep
pop
sti
and
nop
stc
scas
in
dec
repz
sub
xchg
cli
pop
arpl
test
inc
adc
add
adc
bound
dec
sbb
mov
bound
mov
movs
xchg
mov
bound
(bad)
call
jno
push
dec
or
sti
inc
mov
xlat
bound
in
dec
cmc
adc
xor
add
std
dec
jno
mov
fwait
adc
push
bound
cli
call
push
test
dec
sti
call
fs
in
adc
dec
sti
call
(bad)
scas
(bad)
hlt
repnz
dec
sti
mov
pop
(bad)
not
rep
dec
call
nop
adc
push
adc
dec
rep
pop
sti
mov
fadd
xor
dec
repz
ficomp
and
scas
in
dec
loopne
loop
sbb
or
push
jo
bound
dec
jno
mov
les
dec
fscale
and
les
in
div
icebp
dec
inc
call
jno
inc
dec
push
push
sti
inc
fidivr
bound
adc
mov
fldcw
(bad)
sub
mov
bound
xchg
aam
cli
call
stos
test
dec
sti
call
fs
cwde
and
push
mov
mov
adc
adc
adc
xor
ins
dec
call
nop
push
dec
rep
pop
sti
rcl
push
dec
mov
sub
jnp
pop
mov
arpl
push
cld
nop
adc
mov
lds
in
pop
repz
jmp
les
dec
push
cld
jo
fwait
jmp
mov
dec
adc
leave
push
add
push
dec
fldcw
sti
jp
mov
bound
js
call
xchg
mov
dec
or
fwait
adc
adc
jmp
adc
les
test
dec
stos
call
dec
mov
gs
in
and
ins
dec
sti
call
push
fnstenv
mov
retf
adc
ins
dec
call
xchg
mov
dec
rep
pop
sti
inc
adc
movs
popa
lods
in
dec
repz
inc
call
pusha
scas
in
dec
loopne
popa
cli
adc
mov
bound
dec
ins
popf
or
bound
jmp
mov
bound
rcr
mov
jno
inc
dec
inc
imul
add
xlat
bound
jmp
hlt
inc
dec
jnp
pop
mov
mov
sub
ins
jb
cwde
adc
jae
jp
jbe
push
pop
stc
call
mov
jne
sti
call
gs
in
cmp
outs
dec
sti
call
daa
scas
fst
ins
dec
sti
mov
mov
int
rep
dec
call
sahf
inc
dec
mov
dec
rep
pop
sti
ss
test
lods
in
dec
repz
inc
call
pusha
scas
in
dec
loopne
nop
sti
mov
in
add
cwde
(bad)
bound
dec
retf
mov
bound
jae
(bad)
adc
cs
mov
bound
movs
fwait
std
mov
xchg
mov
jno
inc
dec
mov
daa
mov
bound
pop
sti
or
scas
pop
mov
aad
mov
call
add
in
repnz
call
or
dec
sti
call
push
in
in
into
outs
dec
sti
call
adc
ins
dec
sti
mov
mov
rep
dec
call
sahf
iret
lds
ins
pop
sti
dec
adc
or
mov
and
in
dec
repz
and
xchg
dec
mov
in
dec
loopne
icebp
sti
aaa
sbb
(bad)
bound
dec
dec
xchg
sahf
mov
bound
mov
adc
jmp
xchg
mov
bound
dec
imul
mov
mov
jnp
add
in
cli
dec
hlt
pop
mov
mov
ins
push
mov
mov
push
in
repnz
stc
call
cmp
dec
sti
call
imul
fmul
push
mov
(bad)
scas
sbb
sti
mov
bound
nop
dec
rep
dec
call
lahf
sbb
stos
shr
dec
rep
pop
sti
inc
adc
sbb
lods
in
dec
repz
ficomp
push
inc
pusha
scas
in
dec
loopne
mov
add
(bad)
bound
dec
popa
xchg
mov
les
dec
in
repnz
mov
in
sti
ret
inc
inc
fwait
test
les
push
inc
inc
gs
pop
fwait
mov
bound
repnz
stos
dec
sub
pop
mov
clc
cmps
sub
ins
xchg
imul
in
repnz
stc
call
mov
cli
dec
sti
call
imul
push
dec
sti
call
mov
mov
sti
mov
push
arpl
dec
rep
dec
call
pushf
ins
(bad)
out
dec
rep
pop
sti
and
sbb
lods
in
dec
repz
push
xchg
add
pusha
scas
in
dec
loopne
retf
pop
push
add
in
pop
repz
rcl
mov
bound
jae
outs
adc
lods
xchg
mov
bound
add
mov
jno
push
inc
mov
movs
mov
bound
sbb
ins
dec
jmp
pop
mov
cmps
pop
inc
imul
dec
cwde
adc
push
test
dec
icebp
pushf
(bad)
stc
call
rep
out
pop
(bad)
call
mov
dec
sti
call
jno
cmp
icebp
ins
dec
sti
mov
shl
push
dec
rep
dec
call
sahf
stos
(bad)
xchg
push
out
dec
rep
pop
sti
xor
aam
lods
in
dec
repz
rcl
mov
pusha
scas
in
dec
loopne
push
bnd
sbb
add
(bad)
bound
inc
dec
popf
cmp
adc
mov
bound
cmp
mov
mov
dec
retf
cwde
in
add
xchg
mov
jno
ret
gs
push
mov
bound
mov
pop
dec
out
pop
mov
pop
cmps
jo
int
cmp
mov
or
or
call
mov
test
test
fdivr
or
push
mov
sub
dec
sti
mov
mov
and
call
pushf
loopne
push
out
dec
rep
pop
sti
neg
or
mov
test
in
dec
repz
mov
dec
pusha
scas
in
dec
loopne
push
add
jle
bound
dec
jle
jne
pusha
pop
mov
bound
fdiv
call
sub
xchg
mov
bound
xchg
cwde
xchg
je
xchg
mov
jno
bound
and
xor
mov
bound
dec
aaa
dec
pop
mov
mov
adc
sub
add
call
stc
call
test
xchg
dec
stos
mov
test
push
mov
fs
enter
sti
call
sbb
ins
dec
sti
mov
inc
pusha
jae
dec
rep
dec
call
lahf
xor
and
dec
rep
pop
sti
dec
adc
jl
lods
in
dec
repz
push
call
pusha
scas
in
dec
loopne
icebp
sti
es
cmp
add
bound
dec
int
xchg
mov
bound
xor
xchg
mov
bound
jns
cmc
popa
add
cmps
dec
mov
into
mov
bound
push
inc
pop
mov
in
test
inc
daa
cwde
adc
pop
fs
out
icebp
adc
stc
call
jno
outs
dec
pop
mov
sti
call
addr16
dec
sti
call
loopne
xor
sti
mov
inc
pusha
repz
ins
dec
call
lahf
xor
mov
ins
pop
sti
xor
or
adc
lock
jg
jnp
xchg
pusha
scas
in
dec
loopne
cmc
std
add
cmp
mov
bound
inc
rcl
mov
bound
push
cld
sbb
xchg
loop
mov
bound
jo
dec
pop
add
dec
dec
(bad)
imul
out
icebp
mov
bound
in
cli
dec
jg
mov
cld
test
dec
outs
ficomp
test
aam
call
mov
call
test
call
fs
sbb
dec
sti
call
shr
sti
mov
popa
pusha
inc
push
dec
rep
dec
call
sahf
sbb
mov
ins
pop
sti
bound
adc
lods
in
dec
repz
push
nop
add
sub
in
dec
loopne
movs
cld
or
(bad)
bound
dec
jno
lods
mov
bound
mov
es
add
xchg
mov
bound
cmp
mov
jno
sahf
inc
pop
fs
dec
out
add
in
clc
cmps
dec
movd
mov
test
outs
cmps
push
cwde
adc
in
push
jmp
icebp
dec
mov
adc
ss
out
xchg
dec
sti
call
addr16
fmul
outs
dec
sti
call
mov
ins
dec
sti
mov
sbb
adc
rep
dec
call
nop
ins
(bad)
mov
out
dec
rep
pop
sti
js
or
mov
cwde
lods
in
dec
repz
rcr
push
ds
scas
in
dec
loopne
icebp
sti
or
add
in
pop
repz
(bad)
popf
retf
mov
bound
pop
icebp
inc
pop
mov
bound
and
xchg
mov
jno
rol
push
stc
push
jmp
xlat
bound
dec
retf
addr16
mov
inc
cmps
sbb
sub
adc
fild
call
stc
call
xor
dec
sti
call
imul
sti
call
mov
ins
dec
sti
mov
sbb
adc
ins
dec
call
popf
ins
(bad)
push
scas
out
dec
rep
pop
sti
loop
mov
bound
mov
(bad)
mov
popa
scas
in
dec
loopne
add
add
mov
bound
inc
xchg
xchg
retf
mov
bound
(bad)
add
in
sar
inc
and
xchg
mov
jno
jle
into
addr16
stc
cmps
push
mov
bound
dec
pop
cdq
push
mov
enter
sub
adc
jne
test
xchg
icebp
in
dec
clc
call
and
push
test
add
imul
sti
call
mov
ins
dec
sti
mov
sbb
jmp
rep
dec
call
nop
ins
(bad)
jmp
sti
xor
ins
lods
in
dec
repz
push
call
popa
scas
in
dec
loopne
cs
retf
adc
push
mov
pop
repz
dec
ins
popf
cld
mov
bound
(bad)
lock
pop
or
in
mov
cwde
shl
scas
inc
dec
push
imul
xchg
mov
(bad)
(bad)
jmp
cli
xchg
dec
or
les
test
mov
add
call
clc
call
int3
test
dec
sti
call
fs
jo
outs
dec
sti
call
imul
or
mov
dec
rep
dec
call
call
rep
pop
sti
ja
and
xor
repz
lods
pushf
adc
popa
scas
in
dec
loopne
(bad)
sbb
add
stos
(bad)
bound
inc
mov
mov
bound
xor
sbb
in
mov
cdq
push
cmps
add
inc
dec
sbb
clc
mov
mov
bound
fwait
test
mov
in
test
inc
shr
cdq
adc
ins
bound
out
lock
call
int
ror
dec
dec
sti
call
outs
in
out
adc
dec
sti
call
sub
sti
mov
(bad)
popa
inc
leave
dec
rep
dec
call
lahf
std
mov
adc
les
dec
repz
loopne
pop
mov
xchg
mov
popa
scas
in
dec
loopne
arpl
mov
loop
outs
call
in
dec
sub
mov
bound
arpl
cli
push
sbb
xchg
mov
bound
pushf
cdq
fst
jno
loopne
mov
and
pop
cmp
(bad)
into
loope
clc
add
mov
mov
mov
outs
not
cdq
adc
sbb
call
clc
call
add
dec
sti
call
imul
sub
outs
dec
sti
call
in
add
sti
mov
inc
popa
(bad)
fimul
ins
dec
call
xchg
xor
dec
rep
pop
sti
sub
mov
push
lods
in
dec
repz
inc
call
popa
scas
in
dec
loopne
test
adc
sahf
xchg
bound
dec
cwde
xchg
xchg
mov
bound
mov
sbb
mov
bound
jl
push
lea
xchg
mov
jno
adc
int
xor
mov
bound
dec
out
push
mov
out
mov
retf
adc
push
outs
add
jge
call
cmps
push
scas
push
dec
sti
call
outs
sub
mov
outs
dec
sti
call
in
leave
jne
ins
dec
sti
mov
inc
popa
daa
aam
rep
dec
call
call
rep
pop
sti
xchg
push
pusha
or
mov
pop
lods
in
dec
repz
sbb
jbe
popa
scas
in
dec
loopne
cmp
mov
in
pop
repz
mov
bound
iret
cld
sbb
mov
bound
jl
jns
add
or
push
clc
dec
sub
bound
ins
stc
jmp
iret
cmps
push
mov
jo
push
(bad)
cdq
adc
enter
retf
lock
je
call
ds
dec
sti
call
push
out
cld
int3
outs
dec
sti
call
jmp
inc
or
ins
dec
sti
mov
dec
popa
jg
dec
rep
dec
call
xchg
es
jp
out
dec
rep
pop
sti
dec
adc
and
in
dec
repz
jne
enter
mov
loopne
(bad)
jne
and
loop
(bad)
bound
inc
push
shl
dec
mov
push
fisttp
mov
bound
push
cdq
dec
repnz
xchg
dec
cwde
fs
into
pop
mov
bound
dec
mov
xchg
mov
dec
inc
outs
cs
adc
movs
outs
ds
lock
clc
call
les
dec
sti
call
imul
mov
push
mov
(bad)
sti
mov
push
popa
sub
call
sbb
out
dec
rep
pop
sti
sub
pop
add
lods
in
dec
repz
push
xchg
(bad)
mov
popa
scas
in
dec
loopne
(bad)
cmp
(bad)
bound
inc
dec
xchg
(bad)
mov
bound
dec
std
dec
push
and
mov
bound
daa
cdq
popf
jecxz
xchg
mov
jno
pop
dec
in
xchg
clc
xchg
dec
mov
bound
in
js
mov
xchg
ret
push
mov
fldcw
call
mov
bound
lock
adc
call
pusha
test
dec
imul
sti
call
outs
jo
mov
outs
dec
sti
call
mov
ins
dec
sti
mov
sbb
mov
rep
dec
call
fwait
ins
(bad)
pop
repz
dec
rep
pop
sti
sbb
lods
in
dec
repz
fst
mov
dec
loopne
gs
fs
out
(bad)
bound
dec
and
mov
bound
jae
inc
push
call
mov
bound
and
fucom
add
stc
inc
mov
dec
mov
bound
dec
imul
mov
pop
cmps
cld
dec
sub
mov
add
loope
lock
clc
call
int
xor
or
sti
call
imul
xchg
outs
dec
sti
call
mov
ins
dec
sti
mov
sbb
(bad)
dec
rep
dec
call
sahf
ins
(bad)
repnz
dec
rep
pop
sti
push
adc
pop
dec
mov
add
adc
xchg
fisub
loopne
xchg
cld
ret
adc
rol
bound
dec
lahf
nop
retf
repnz
bound
mov
inc
push
adc
les
in
mov
pop
dec
and
mov
add
adc
fs
add
jmp
sbb
push
mov
cs
dec
sbb
xchg
cdq
adc
adc
pop
jmp
lock
and
call
pusha
test
dec
dec
push
dec
sti
call
gs
out
nop
cwde
outs
dec
sti
call
xchg
lods
cmp
sti
mov
aas
popa
imul
call
faddp
out
dec
rep
pop
sti
pushf
sbb
or
dec
repz
aas
sahf
dec
mov
xchg
push
mov
scas
in
dec
loopne
retf
sbb
(bad)
bound
dec
cmc
xchg
pop
mov
bound
push
xchg
adc
jae
mov
bound
jmp
mov
les
cmp
inc
pusha
mov
bound
dec
arpl
push
mov
outs
cmps
mov
mov
mov
push
out
imul
xor
call
fisub
dec
sti
call
outs
xchg
fmul
push
mov
dec
stos
imul
mov
jmp
dec
call
xchg
add
shr
dec
rep
pop
sti
dec
adc
mov
in
dec
repz
aas
sahf
in
mov
popa
scas
in
dec
loopne
loop
lods
adc
bound
dec
not
mov
bound
push
adc
in
sti
dec
mov
xchg
mov
jno
(bad)
dec
push
imul
push
xchg
mov
bound
sti
cmc
sub
mov
mov
push
mov
bound
into
clc
call
dec
movs
lods
dec
addr16
test
cmp
mov
outs
dec
sti
call
and
dec
sti
mov
test
push
call
fwait
repz
dec
rep
pop
sti
push
adc
in
in
dec
repz
push
pushf
in
mov
popa
scas
in
dec
loopne
retf
adc
add
xor
pop
repz
dec
adc
dec
fscale
fist
fisttp
mov
inc
mov
xchg
mov
jno
js
int3
imul
retf
add
jmp
hlt
sub
mov
sub
push
jno
adc
mov
mov
sar
adc
ret
clc
cmps
lods
dec
(bad)
dec
sti
call
push
jmp
sti
call
and
dec
sti
mov
test
popa
dec
rep
dec
call
nop
repz
pop
sti
sbb
out
lods
in
dec
repz
je
lahf
mov
popa
scas
in
dec
loopne
push
icebp
push
adc
add
cmp
bound
dec
iret
xchg
push
mov
bound
jnp
fist
inc
mov
in
pop
hlt
jl
mov
xchg
mov
jno
add
fs
inc
call
fucomp
outs
cmc
sub
mov
sbb
mov
adc
cdq
fs
or
call
xor
dec
sti
call
push
jmp
sti
call
and
dec
sti
mov
test
in
dec
repz
call
pusha
scas
cmp
dec
sti
js
mov
bound
dec
sti
mov
mov
popa
scas
cmovl
dec
dec
sti
and
push
bound
dec
sti
mov
mov
popa
scas
inc
dec
rep
dec
sti
ss
jae
scas
in
dec
repz
mov
mov
push
xor
dec
sti
inc
adc
bound
dec
sti
mov
mov
popa
scas
pop
dec
rep
dec
sti
xor
out
arpl
dec
sti
call
pusha
scas
pop
dec
rep
dec
sti
inc
adc
sbb
in
dec
repz
mov
arpl
dec
sti
dec
adc
push
repz
call
arpl
dec
sti
dec
adc
push
repz
call
pusha
scas
(bad)
dec
rep
dec
sti
dec
adc
push
bound
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
and
bound
dec
stc
mov
mov
scas
aaa
dec
rep
dec
sti
inc
adc
ins
bound
dec
sti
call
pusha
scas
aaa
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
xor
dec
sti
and
sbb
in
dec
repz
call
pusha
scas
inc
dec
rep
dec
sti
js
mov
arpl
dec
sti
call
arpl
dec
sti
dec
adc
push
bound
dec
sti
call
popa
scas
pop
dec
rep
dec
sti
ss
sbb
in
dec
repz
call
scas
cmp
dec
sti
mov
mov
bound
dec
sti
call
pusha
scas
push
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
xor
sbb
in
dec
repz
call
popa
scas
pop
dec
rep
dec
sti
ss
out
arpl
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
inc
adc
push
bound
dec
sti
call
scas
cmps
dec
rep
dec
sti
and
push
bound
dec
sti
call
scas
xchg
dec
rep
dec
sti
aad
mov
arpl
dec
sti
call
scas
or
ins
dec
sti
(bad)
adc
fs
in
dec
repz
dec
sti
call
imul
sti
sbb
mov
fs
in
dec
repz
sti
call
scas
jno
rep
dec
sti
cmp
mov
fs
in
inc
repz
sbb
mov
scas
push
dec
rep
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
push
dec
rep
dec
sti
js
mov
arpl
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
pusha
scas
xor
dec
sti
sub
mov
fs
in
dec
repz
push
mov
scas
mov
ins
dec
sti
call
mov
fs
in
dec
repz
call
imul
sti
adc
add
in
dec
repz
call
arpl
dec
sti
ss
out
arpl
dec
sti
call
arpl
dec
sti
inc
adc
jae
scas
in
dec
repz
call
popa
scas
push
dec
rep
dec
sti
xor
sbb
in
dec
repz
adc
mov
mov
pusha
scas
inc
dec
rep
dec
sti
inc
adc
push
bound
dec
sti
call
arpl
dec
sti
xor
out
arpl
dec
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
popa
scas
xor
dec
sti
inc
adc
ins
bound
dec
sti
call
arpl
dec
sti
inc
adc
jg
scas
in
dec
repz
mov
pusha
scas
push
dec
rep
dec
sti
inc
adc
sbb
in
dec
repz
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
popa
scas
pop
dec
rep
dec
sti
ss
out
arpl
dec
sti
call
scas
cmps
dec
rep
dec
sti
ss
bound
dec
sti
call
pusha
scas
xor
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
(bad)
dec
rep
dec
sti
ss
sbb
in
dec
repz
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
sub
mov
bound
dec
sti
call
popa
scas
pop
dec
rep
dec
sti
js
mov
arpl
dec
sti
call
scas
jae
rep
dec
sti
aas
adc
bound
dec
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
cmp
dec
sti
xor
out
arpl
dec
sti
call
popa
scas
xor
dec
sti
xor
jae
scas
in
dec
repz
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
xor
adc
in
dec
repz
call
scas
cmps
dec
rep
dec
sti
sbb
mov
fs
in
dec
repz
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
inc
adc
jg
scas
in
dec
repz
dec
sti
call
popa
scas
es
rep
dec
sti
dec
adc
gs
in
dec
repz
call
push
add
ins
dec
sti
ss
jae
scas
in
dec
repz
dec
sti
call
arpl
dec
sti
dec
adc
jae
scas
in
dec
repz
adc
test
mov
pusha
scas
xor
dec
sti
and
jg
scas
in
dec
repz
call
scas
cmp
dec
sti
rcl
add
in
dec
repz
sti
call
arpl
dec
sti
inc
adc
jae
scas
in
dec
repz
call
arpl
dec
sti
inc
adc
ins
bound
dec
sti
call
arpl
dec
sti
inc
adc
ins
bound
dec
sti
call
arpl
dec
sti
and
out
arpl
dec
sti
call
popa
scas
cmp
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
(bad)
dec
rep
dec
sti
ss
jg
scas
in
dec
repz
sti
call
scas
lds
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
cmp
dec
sti
and
push
bound
dec
sti
call
popa
scas
cmovl
ins
dec
sti
and
out
arpl
dec
sti
call
arpl
dec
sti
inc
adc
out
arpl
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
dec
adc
bound
dec
sti
call
scas
cmps
dec
rep
dec
sti
inc
adc
push
bound
dec
sti
call
scas
cmps
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
dec
adc
adc
in
dec
repz
sti
call
arpl
dec
sti
inc
adc
jae
scas
in
dec
repz
call
pusha
scas
cmovl
ins
dec
sti
and
ins
bound
dec
sti
call
arpl
dec
sti
inc
adc
adc
in
dec
repz
sti
call
fs
add
ins
dec
sti
inc
adc
jae
scas
in
dec
repz
dec
sti
call
pusha
scas
push
dec
rep
dec
sti
xor
push
repz
mov
popa
scas
xor
dec
sti
dec
adc
ins
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
dec
adc
push
repz
call
popa
scas
cmovl
ins
dec
sti
and
push
repz
call
scas
aaa
dec
rep
dec
sti
dec
adc
push
repz
sti
call
arpl
dec
sti
inc
adc
jg
scas
in
dec
repz
sti
call
pusha
scas
cmp
dec
sti
ss
jg
scas
in
dec
repz
sti
call
pusha
scas
push
dec
rep
dec
sti
ss
bound
dec
sti
call
popa
scas
push
dec
rep
dec
sti
dec
adc
push
bound
dec
sti
call
scas
adc
sti
mov
mov
gs
in
dec
repz
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
ss
sbb
in
dec
repz
call
scas
cmps
dec
rep
dec
sti
js
mov
bound
dec
sti
call
arpl
dec
sti
sub
mov
bound
dec
sti
call
popa
scas
cmovl
ins
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
inc
adc
out
arpl
dec
sti
call
popa
scas
cmp
dec
sti
inc
adc
out
arpl
dec
sti
call
popa
scas
pop
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
(bad)
dec
rep
dec
sti
inc
adc
ins
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
dec
adc
jae
scas
in
dec
repz
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
ss
adc
in
dec
repz
call
arpl
dec
sti
inc
adc
bound
dec
sti
call
pusha
scas
(bad)
dec
rep
dec
sti
dec
adc
push
repz
mov
arpl
dec
sti
xor
jg
scas
in
dec
repz
pop
mov
popa
scas
cmovl
ins
dec
sti
xor
out
arpl
dec
sti
call
push
aaa
dec
rep
dec
sti
inc
adc
jg
scas
in
dec
repz
dec
sti
call
pusha
scas
push
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
xor
out
arpl
dec
sti
call
popa
scas
cmovl
ins
dec
sti
xor
sbb
in
dec
repz
dec
sti
call
popa
scas
cmovl
ins
dec
sti
dec
adc
jae
scas
in
dec
repz
dec
sti
call
scas
inc
dec
rep
dec
sti
ss
push
repz
call
arpl
dec
sti
inc
adc
jg
scas
in
dec
repz
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
dec
adc
jae
scas
in
dec
repz
call
popa
scas
(bad)
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
pop
dec
rep
dec
sti
ss
sbb
in
dec
repz
dec
sti
call
popa
scas
xor
dec
sti
dec
adc
ins
bound
dec
sti
call
pusha
scas
(bad)
dec
rep
dec
sti
xor
jg
scas
in
dec
repz
call
scas
pop
dec
rep
dec
sti
inc
adc
ins
bound
dec
sti
call
pusha
scas
xor
dec
sti
js
mov
bound
dec
sti
call
popa
scas
pop
dec
rep
dec
sti
inc
adc
push
bound
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
sub
mov
arpl
dec
sti
call
arpl
dec
sti
xor
push
bound
dec
sti
call
scas
inc
dec
rep
dec
sti
inc
adc
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
inc
adc
jae
scas
in
dec
repz
dec
sti
call
scas
push
dec
rep
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
aaa
dec
rep
dec
sti
xor
push
repz
call
arpl
dec
sti
and
sbb
in
dec
repz
push
mov
scas
push
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
imul
sti
mov
mov
bound
dec
sti
call
pusha
scas
(bad)
dec
rep
dec
sti
xor
push
repz
mov
scas
(bad)
dec
rep
dec
sti
inc
adc
jae
scas
in
dec
repz
call
pusha
scas
cmovl
ins
dec
sti
dec
adc
jae
scas
in
dec
repz
dec
sti
call
scas
(bad)
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
js
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
push
cmovl
ins
inc
sti
sub
mov
arpl
dec
sti
call
popa
scas
cmovl
ins
dec
sti
and
adc
in
dec
repz
dec
sti
call
scas
pop
dec
rep
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
(bad)
dec
rep
dec
sti
dec
adc
ins
bound
dec
sti
call
arpl
dec
sti
inc
adc
jg
scas
in
dec
repz
mov
arpl
dec
sti
js
mov
bound
dec
sti
call
popa
scas
(bad)
dec
rep
dec
sti
and
push
bound
dec
sti
call
pusha
scas
cmp
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
dec
adc
sbb
in
dec
repz
sti
call
pusha
scas
inc
dec
rep
dec
sti
js
mov
bound
dec
sti
call
scas
push
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
sub
mov
arpl
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
xor
sbb
in
dec
repz
dec
sti
call
scas
cmovl
ins
dec
sti
ss
jg
scas
in
dec
repz
sti
call
arpl
dec
sti
inc
adc
bound
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
inc
adc
adc
in
dec
repz
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
xor
push
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
js
mov
bound
dec
sti
call
gs
inc
dec
rep
inc
sti
sub
mov
bound
dec
sti
call
popa
scas
cmovl
ins
dec
sti
xor
ins
bound
dec
sti
call
scas
pop
dec
rep
dec
sti
ss
jg
scas
in
dec
repz
mov
arpl
dec
sti
and
out
arpl
dec
sti
call
pusha
scas
xor
dec
sti
js
mov
bound
dec
sti
call
arpl
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
cmovl
ins
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
push
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
scas
(bad)
dec
rep
dec
sti
dec
adc
sbb
in
dec
repz
sti
call
popa
scas
cmp
dec
sti
and
adc
in
dec
repz
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
arpl
dec
sti
inc
adc
out
arpl
dec
sti
call
fs
aaa
dec
rep
dec
sti
dec
adc
bound
dec
sti
call
arpl
dec
sti
dec
adc
out
arpl
dec
sti
call
fs
xor
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
inc
adc
jae
scas
in
dec
repz
mov
scas
inc
dec
rep
dec
sti
xor
out
arpl
dec
sti
call
scas
inc
dec
rep
dec
sti
js
mov
bound
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
ss
jae
scas
in
dec
repz
sti
call
arpl
dec
sti
inc
adc
sbb
in
dec
repz
call
pusha
scas
(bad)
dec
rep
dec
sti
inc
adc
adc
in
dec
repz
call
pusha
scas
xor
dec
sti
sub
mov
bound
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
cmp
dec
sti
inc
adc
adc
in
dec
repz
mov
popa
scas
inc
dec
rep
dec
sti
and
adc
in
dec
repz
call
pusha
scas
inc
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
scas
(bad)
dec
rep
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
cmp
dec
sti
sub
mov
bound
dec
sti
call
scas
aaa
dec
rep
dec
sti
dec
adc
out
arpl
dec
sti
call
pusha
scas
cmp
dec
sti
inc
adc
push
bound
dec
sti
call
scas
xor
dec
sti
dec
adc
jg
scas
in
dec
repz
call
pusha
scas
cmovl
ins
dec
sti
inc
adc
jg
scas
in
dec
repz
mov
arpl
dec
sti
js
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
xor
bound
dec
sti
call
arpl
dec
sti
mov
mov
bound
dec
sti
call
pusha
scas
pop
dec
rep
dec
sti
and
jg
scas
in
dec
repz
call
scas
cmp
dec
sti
sub
mov
bound
dec
sti
call
pusha
scas
aaa
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
scas
aaa
dec
rep
dec
sti
and
ins
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
js
mov
bound
dec
sti
call
popa
scas
aaa
dec
rep
dec
sti
js
mov
bound
dec
sti
call
popa
scas
inc
dec
rep
dec
sti
dec
adc
bound
dec
sti
call
pusha
scas
xor
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
cmp
dec
sti
inc
adc
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
and
push
bound
dec
sti
call
pusha
scas
xor
dec
sti
js
mov
bound
dec
sti
call
scas
cmovl
ins
dec
sti
inc
adc
jg
scas
in
dec
repz
dec
sti
call
scas
pop
dec
rep
dec
sti
js
mov
bound
dec
sti
call
pusha
scas
inc
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
scas
inc
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
pusha
scas
pop
dec
rep
dec
sti
mov
mov
bound
dec
sti
call
popa
scas
cmovl
ins
dec
sti
inc
adc
jg
scas
in
dec
repz
sti
call
popa
scas
push
dec
jmp
add
mov
(bad)
out
in
xor
es
call
les
ins
xor
add
mov
arpl
dec
jb
push
mov
scas
inc
dec
jp
xor
add
sub
repnz
call
sbb
ins
xor
add
mov
bound
dec
loop
push
xchg
xchg
imul
scas
cmps
dec
sbb
aas
push
mov
popa
push
in
xor
(bad)
dec
retf
mov
sbb
ins
pop
inc
cli
add
mov
popa
out
in
mov
call
sbb
ins
xor
add
mov
in
xor
es
repnz
sbb
ins
xor
add
mov
bound
in
xor
dec
call
lds
test
dec
loop
inc
repz
stos
add
mov
imul
sub
pop
lds
ins
add
add
mov
(bad)
into
out
xor
dec
sub
rol
shl
xchg
ins
adc
data16
out
xor
inc
retf
mov
pushf
mov
stos
cmps
pop
inc
ret
repnz
mov
in
cmps
cli
stos
inc
jp
call
les
pop
inc
dec
ins
inc
icebp
ins
adc
add
out
ja
pushf
inc
bound
add
movs
test
(bad)
icebp
mov
mov
out
stc
dec
dec
cwde
scas
mov
xchg
mov
dec
or
icebp
mov
mov
mov
cwde
sti
mov
xchg
rol
jnp
test
lock
jmp
in
mov
call
and
ins
sbb
add
mov
and
xor
mov
popf
xor
jnp
test
icebp
les
or
push
mov
xor
inc
retf
mov
popf
stos
(bad)
in
sbb
ins
(bad)
push
add
xor
mov
jmp
or
dec
les
ins
mov
add
push
call
pop
mov
or
ins
adc
add
mov
adc
mov
fwait
call
lds
mov
xor
pop
pop
fiadd
mov
sub
in
in
call
mov
fisub
(bad)
not
mov
inc
mov
scas
jmp
inc
fwait
in
or
cmovp
psadbw
adc
mov
out
adc
cwde
dec
mov
xchg
inc
les
mov
daa
test
mov
data16
out
ret
dec
or
inc
(bad)
shr
loop
sti
sbb
add
in
xor
dec
bound
mov
(bad)
mov
jmp
ss
lahf
dec
push
call
mov
movs
neg
push
cli
add
inc
outs
out
ret
dec
pop
cwde
jmp
mov
inc
cmc
or
or
(bad)
mov
jge
repnz
push
call
imul
push
cmc
and
add
fistp
std
lods
inc
or
inc
(bad)
retf
dec
add
cmc
xlat
push
push
sub
in
test
mov
mov
xchg
dec
mov
mov
add
mov
mov
gs
sbb
or
jo
mov
sbb
add
in
jns
es
retf
mov
fwait
add
mov
and
ficomp
or
in
mov
retf
cld
sub
cwde
clc
mov
popf
retf
(bad)
xchg
movs
test
hlt
aad
repnz
mov
stc
cld
aaa
inc
repnz
aam
bound
pop
outs
test
js
cli
add
test
stc
push
inc
pop
call
stc
mov
lods
hlt
js
repnz
and
in
jp
es
mov
pop
stos
in
sti
lds
mov
inc
icebp
ins
adc
add
mov
outs
ss
es
inc
call
(bad)
or
ins
aaa
jmp
adc
and
inc
sbb
mov
(bad)
mov
in
ficomp
push
add
mov
mov
pop
call
mov
scas
jmp
push
mov
mov
mov
call
xchg
jae
in
sbb
ins
imul
adc
add
in
sbb
mov
fnstcw
mov
ins
and
call
ins
push
out
cmp
jge
sbb
mov
inc
loop
(bad)
mov
mov
xor
icebp
ins
pop
in
jecxz
push
inc
or
arpl
scas
mov
nop
jmp
and
inc
xor
cmp
or
test
add
in
push
loope
inc
mov
adc
mov
xor
add
mov
bound
dec
aad
pop
mov
and
jno
jecxz
clc
add
push
repnz
hlt
call
jne
xchg
and
mov
mov
(bad)
fsubr
pushf
imul
cmps
xchg
adc
(bad)
cmc
scas
dec
dec
inc
ins
mov
xchg
adc
add
in
push
repnz
cmp
dec
lds
repnz
shr
sbb
add
inc
mov
popa
mov
div
dec
test
dec
shl
mov
adc
pop
mov
daa
repz
jp
cdq
mov
or
xchg
dec
rep
dec
sti
or
add
in
dec
repz
dec
repnz
imul
push
add
in
mov
outs
dec
mov
xchg
mov
and
dec
sti
call
bound
dec
clc
call
popa
scas
scas
dec
lods
ins
mov
cdq
adc
pusha
stos
in
pslld
dec
adc
xlat
(bad)
aam
jmp
sti
mov
mov
bound
dec
sti
call
bound
dec
sti
call
bound
dec
repz
bound
pusha
sti
call
bound
dec
sti
call
bound
dec
sti
call
(bad)
cli
in
dec
rep
dec
stc
call
bound
push
sti
call
bound
dec
(bad)
call
popa
scas
out
cli
ins
inc
sti
xchg
adc
les
ret
mov
and
cdq
call
pushf
mov
lahf
or
fnstenv
sar
add
xchg
repz
dec
call
mov
fadd
xchg
jmp
shl
mov
ds
idiv
in
imul
ret
or
ret
xlat
test
xchg
daa
aad
fidiv
fsub
nop
or
fild
scas
pop
fld
sti
out
data16
sub
ret
or
mov
or
es
cmps
pop
aam
jecxz
mov
inc
ins
stos
jns
adc
cmps
push
scas
or
push
ins
stos
jns
adc
mov
xchg
daa
aad
jge
gs
lods
or
in
lods
jno
dec
sbb
mov
loope
pop
les
add
(bad)
loope
adc
mov
frstor
xlat
gs
pop
into
or
mov
popa
fidiv
jmp
pushf
or
aad
jl
jne
fiadd
(bad)
das
(bad)
repz
jae
push
inc
shr
das
mov
adc
mov
xchg
or
jmp
mov
loopne
in
sbb
jo
je
loope
adc
mov
frstor
das
(bad)
mov
aam
std
xlat
mov
scas
mov
or
leave
gs
les
fmul
stc
popa
aam
xchg
lock
nop
(bad)
xchg
call
(bad)
mov
call
dec
loop
mov
pushf
push
daa
call
stos
add
sahf
aas
movntss
in
mov
(bad)
xchg
jmp
and
add
xchg
call
stc
shr
sub
std
outs
in
mov
xchg
cmp
xchg
(bad)
jp
add
xlat
mov
mov
call
shr
or
jmp
imul
mov
sub
in
imul
mov
and
xchg
std
popa
rol
idiv
add
fdivr
ins
repz
call
arpl
mov
into
cdq
sub
inc
fisubr
(bad)
xchg
sti
leave
ins
enter
jmp
ds
cmc
jnp
cs
stos
pop
fld
sti
ins
mov
shr
dec
shl
(bad)
mov
into
or
(bad)
(bad)
js
dec
fstp
xchg
pop
cmp
loop
mov
pushf
add
mov
enterw
mov
add
stos
out
addr16
(bad)
out
sahf
aas
xchg
add
xchg
jecxz
call
jno
das
cwde
out
jl
outs
xchg
jmp
repz
mov
adc
cmps
push
rcr
call
push
retf
fwait
push
das
call
mov
clc
mov
mov
and
out
shl
sbb
call
shl
sahf
or
fsubr
(bad)
mov
in
xor
call
(bad)
jmp
sbb
icebp
fisub
xchg
ins
sbb
loop
mov
aad
sub
jno
je
shl
ds
cwde
(bad)
jl
repnz
xchg
add
xchg
jmp
inc
loopne
stos
push
out
and
inc
aam
clc
mov
retf
sbb
or
xlat
jne
stc
lods
or
in
sbb
add
sahf
stc
popa
jmp
rol
das
(bad)
mov
pushf
pop
and
imul
mov
call
imul
lahf
cmp
push
xlat
gs
sub
jp
add
div
and
xchg
cmp
add
sahf
call
loop
or
push
dec
test
iretw
gs
pushf
xchg
pop
int3
cwde
ds
jo
frstor
mov
cmp
cmp
mov
xchg
ins
sbb
aad
test
sub
icebp
(bad)
mov
popa
leave
jns
shr
(bad)
jmp
in
adc
mov
mov
cmp
(bad)
adc
mov
sub
dec
out
jae
shl
aas
aas
cdq
shl
add
sub
dec
adc
jmp
loope
adc
jno
stos
jns
adc
mul
outs
in
out
out
sti
fistp
inc
out
les
fisttp
(bad)
je
(bad)
shl
cmp
and
xchg
clc
jno
and
in
mul
fwait
sub
mov
shr
lods
xor
leave
popa
fisubr
shl
xchg
das
mov
hlt
(bad)
mov
scas
xchg
repz
es
stc
jle
dec
stc
aad
(bad)
sub
cmp
(bad)
repnz
les
retf
pushf
or
iret
jb
fsub
xchg
or
sti
leave
ins
enter
jmp
and
outs
repnz
sbb
daa
das
cmp
fidiv
loope
add
mov
cmp
neg
pop
(bad)
in
or
ja
popa
in
mov
(bad)
cmp
ins
or
jns
ror
xchg
sbb
sti
fnstcw
jb
out
xor
lahf
and
enter
stc
fbstp
sbb
xchg
(bad)
adc
inc
ret
into
inc
(bad)
enter
aam
out
mov
frstor
cmc
js
outs
clc
xlat
stos
push
scas
mov
xchg
mov
aam
out
stos
pop
rcr
call
(bad)
jmp
div
je
shl
xchg
cmp
mov
jo
add
ret
mov
call
bound
call
out
loop
jnp
or
adc
les
fisttp
sbb
and
pop
ins
stos
jns
hlt
cmp
dec
outs
loope
(bad)
enter
or
ja
jae
sub
std
sbb
mov
and
jno
stos
jns
adc
inc
shr
enter
cmp
dec
outs
sti
adc
idiv
jnp
push
loope
adc
xor
sub
pop
cmp
(bad)
mov
pushf
comiss
repnz
xchg
ins
stos
jns
hlt
cmp
dec
outs
out
repz
ds
je
push
in
mov
fucomp
lods
jno
stos
jns
adc
inc
shr
enter
cmp
jmp
div
je
loope
pop
int3
test
(bad)
jo
add
shr
or
sbb
mov
xor
xchg
pop
fcomp
xchg
(bad)
jl
addr16
mov
popf
or
sahf
call
in
xchg
retf
xchg
and
outs
loope
and
push
ins
stos
jns
hlt
cmp
outs
push
sub
cmc
jno
outs
icebp
mov
loopne
or
pop
ins
stos
jns
hlt
cmp
retf
sbb
xchg
sar
outs
xchg
hlt
lods
push
retf
sbb
aad
stc
mov
loopne
or
inc
ins
stos
jns
hlt
cmp
outs
out
repz
enter
push
add
pusha
sub
sbb
mov
scas
pop
fucomi
lods
jno
stos
jns
adc
lods
add
cdq
and
cmc
push
int
clc
(bad)
mov
loopne
sub
jb
jns
(bad)
mov
pop
(bad)
enter
cmp
sti
mov
cmp
xchg
out
jo
add
mov
or
mov
call
(bad)
xchg
adc
xchg
nop
sbb
mov
jp
add
shr
mov
and
loop
mov
int
cmp
js
not
pop
xchg
pop
cmp
repnz
popf
sbb
mov
mov
adc
jno
stos
jns
adc
inc
retf
into
pop
(bad)
enter
aad
sti
mov
loopne
or
pop
ins
sbb
in
stos
push
fiadd
pop
jnp
or
ja
sub
dec
mov
jns
outs
in
mov
ret
pushf
mov
out
push
xlat
popa
icebp
rol
sub
dec
sbb
mov
cmp
and
inc
ins
stos
jns
hlt
cmp
outs
loope
(bad)
enter
or
ja
ins
sub
sbb
mov
inc
stc
fdiv
pushf
add
sti
jnp
adc
adc
les
ror
sbb
xchg
pop
enter
push
xor
in
lods
adc
test
popf
das
and
adc
and
jno
stos
jns
adc
stos
adc
enter
cmp
dec
outs
cld
adc
loop
sar
addr16
pop
(bad)
xchg
hlt
jo
popa
sti
xlat
les
fisttp
jmp
inc
(bad)
shl
call
imul
sub
sbb
repz
add
xlat
mov
xchg
(bad)
fs
stos
pop
scas
mov
xchg
sbb
xchg
icebp
mov
fadd
sahf
out
dec
jmp
shl
pushf
add
iret
pop
rol
test
loope
and
hlt
cmp
mov
repz
pop
inc
leave
imul
mov
xchg
or
fnsave
push
inc
test
lahf
and
mov
or
sub
or
fisub
repz
or
add
leave
imul
mov
mov
stc
shl
mov
shr
rol
fisttp
hlt
arpl
jb
fld
mov
out
dec
out
jae
ror
add
sahf
call
(bad)
sahf
or
fidiv
mov
xchg
push
es
retf
push
lock
mov
popa
ficom
mov
sbb
retf
outs
in
les
fisttp
sbb
and
push
ins
stos
jns
hlt
cmp
dec
outs
lock
pop
pop
fisubr
(bad)
lods
(bad)
sti
add
addr16
das
retf
xchg
or
sti
fidivr
outs
cli
frstor
xchg
ins
sub
gs
lods
add
mov
mov
repz
push
fimul
mov
data16
imul
mov
movs
add
aam
loop
lods
or
in
pop
fwait
or
xchg
call
bswap
in
sub
jnp
ins
repz
adc
lahf
sub
call
or
sub
je
gs
scas
pop
int3
cdq
add
xlat
add
(bad)
pushf
add
xchg
fnstcw
jo
shl
sbb
mov
je
add
xlat
mov
fistp
pushf
jmp
push
call
mov
scas
mov
xchg
add
xchg
icebp
stos
adc
stos
ds
add
cwde
call
icebp
stos
adc
mov
mov
jo
popa
loop
stos
or
mov
mov
loop
mov
sti
add
sbb
mov
shr
sbb
sahf
call
push
inc
retf
sub
jb
je
out
and
in
lods
jno
stos
jns
adc
mov
jmp
sub
ss
inc
iret
scas
mov
xchg
push
xchg
call
sar
out
stc
sti
jnp
sbb
adc
les
leave
dec
test
popa
in
popa
cli
(bad)
mov
adc
jmp
loope
push
les
xchg
cmp
das
and
je
out
and
sahf
sub
pop
sbb
xchg
aad
push
lock
mov
jae
add
xlat
mov
loop
and
out
jns
add
xlat
mov
clc
test
xchg
add
gs
shl
add
call
add
mov
sbb
cmp
out
sub
call
loope
adc
mov
(bad)
cmp
mov
test
xchg
ins
sbb
cli
out
sbb
in
add
mov
adc
dec
mov
cli
(bad)
mov
popf
sub
xchg
jmp
mov
pop
(bad)
mov
inc
mov
rol
fdivr
fcom
test
xchg
or
(bad)
retf
les
shr
hlt
adc
mov
scas
mov
xchg
or
xchg
cmc
mov
add
outs
xchg
idiv
das
cmp
clc
shl
and
gs
lea
scas
mov
mov
aad
mov
scas
mov
sahf
stc
popa
mov
sbb
and
out
ret
scas
mov
(bad)
call
outs
repnz
xchg
sbb
loop
stos
push
fiadd
mov
bound
and
sub
call
pop
out
and
inc
ret
xlat
test
xchg
aam
out
test
fnstsw
cwde
jmp
inc
repz
mov
lds
xchg
out
jo
inc
repz
xchg
daa
das
sbb
lods
(bad)
std
mov
xchg
add
xchg
loopne
mov
sbb
mov
repz
(bad)
fdivr
repz
lods
sti
jns
gs
stos
push
scas
scas
and
in
jo
je
rol
shl
jo
inc
jecxz
mov
rcr
jmp
(bad)
fwait
and
cwde
and
jp
dec
sti
shl
sahf
sbb
mov
pop
fldcw
shl
lahf
ins
sub
outs
lock
xor
lahf
or
jp
gs
shl
xchg
(bad)
fidiv
(bad)
xlat
cmps
pop
(bad)
fwait
sub
dec
(bad)
jb
fnsave
mov
arpl
fs
aad
push
lock
call
mov
enter
sub
fldcw
mov
test
xlat
gs
fnsave
add
(bad)
jecxz
fsub
in
or
mov
xchg
push
cmp
lock
and
cmp
das
mov
rol
(bad)
push
scas
mov
(bad)
call
stos
or
mov
xchg
out
dec
jmp
in
mov
rol
fistp
(bad)
cli
xlat
xchg
add
sahf
and
(bad)
jnp
jae
aad
push
lock
and
inc
aam
loop
and
inc
ins
add
out
(bad)
aam
std
loope
adc
mov
repz
xchg
out
jl
gs
mov
popf
or
sahf
call
adc
cmp
or
lahf
(bad)
jl
gs
aad
push
lock
cmp
inc
enter
mov
pushf
movntps
(bad)
fsub
mov
mul
jb
loope
adc
sub
sub
xchg
jmp
push
jecxz
pop
(bad)
mov
pushf
jmp
dec
out
mov
xchg
and
cld
gs
add
mov
xchg
call
push
retf
popf
add
sar
repz
into
xchg
dec
mov
arpl
jb
fsubr
xchg
push
and
rol
push
retf
xchg
sbb
ins
ret
pop
scas
mov
xchg
xor
xor
fisub
mov
call
ja
(bad)
xchg
sbb
gs
mov
ret
or
movs
enter
in
cmps
push
cld
cdq
sub
(bad)
pop
into
je
(bad)
mov
fmul
lahf
repz
loope
add
mov
jmp
cmp
add
xchg
not
gs
(bad)
mov
scas
mov
test
arpl
add
ret
fucomi
add
jns
add
retf
mov
retf
test
and
jmp
in
xchg
pop
fcomp
xchg
(bad)
jl
addr16
cmc
mov
nop
or
mov
mov
(bad)
xchg
add
cwde
sub
adc
mov
in
xor
jmp
in
mov
stc
mov
add
je
cmc
mov
call
add
shl
mov
daa
mov
jo
add
shr
pop
jle
out
shr
mov
pop
(bad)
(bad)
shl
inc
stc
lds
lods
das
sub
std
mov
pop
(bad)
(bad)
repz
add
(bad)
xchg
xlat
popa
out
shl
mov
ds
ja
je
mov
pop
rcr
mul
je
shr
mov
ds
ja
je
mov
pop
fistp
mov
jno
jae
repz
fld
call
mov
pop
add
loope
jle
xchg
mov
push
(bad)
mov
repz
in
xchg
pop
lods
jmp
lock
repnz
adc
popa
test
pop
out
cdq
adc
jnp
jmp
out
outs
dec
jmp
xchg
mov
cmps
in
sti
fs
fistp
mov
popa
scas
in
dec
imul
nop
sbb
int3
jb
in
repz
cwde
mov
inc
sti
jl
jmp
sbb
aam
mov
dec
jecxz
adc
int3
gs
out
inc
jmp
inc
repz
adc
ret
popa
mov
dec
cli
fwait
sbb
dec
cmps
in
sti
push
mov
sahf
scas
(bad)
dec
cmps
in
sti
fs
(bad)
call
push
mov
pop
ror
mov
inc
loope
inc
cmc
xchg
or
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
call
cmc
cdq
adc
int
mov
inc
repz
sbb
fldenv
in
sti
imul
xchg
mov
inc
sti
fs
repz
adc
gs
lock
sti
fs
std
call
gs
jecxz
sti
fs
sti
fwait
sbb
push
push
jno
jmp
mov
retf
in
out
ja
xchg
mov
bound
dec
cld
call
je
loope
div
jmp
xchg
scas
shl
ins
sti
fs
repz
xor
aad
lods
call
(bad)
popf
xor
aad
cmps
in
dec
out
imul
popf
mov
jo
jecxz
sti
fs
repz
sbb
shl
jecxz
sti
fs
jmp
sahf
mov
inc
sti
fs
std
add
cwde
mov
inc
sti
bound
xchg
sbb
iret
jo
icebp
pop
stos
jle
xrelease
loop
mov
dec
rep
push
out
sbb
push
or
mov
xchg
mov
jo
inc
imul
pop
xchg
adc
jmp
bound
xchg
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
xor
mov
sti
dec
std
mov
push
mov
dec
bnd
jp
adc
fimul
hlt
inc
loope
inc
jmp
mov
loopne
call
sub
pop
fidivr
jmp
mov
jmp
add
xchg
cmps
push
mov
inc
loope
pop
fimul
mov
jo
jmp
loope
inc
jmp
cwde
mov
inc
out
bound
mov
push
hlt
inc
std
outs
push
out
push
aad
mov
aaa
jmp
fsubr
push
std
fs
cmc
xchg
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
int
bnd
cld
mov
aaa
int3
addr16
out
dec
sti
fs
fistp
mov
dec
bnd
cmc
popf
sbb
adc
das
retf
lock
sti
fs
(bad)
call
addr16
inc
(bad)
mov
mov
bound
dec
jmp
test
retf
in
dec
loope
inc
fistp
mov
inc
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
fldenv
jmp
adc
ret
inc
lods
jmp
inc
pop
ror
fwait
(bad)
outs
cmps
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
jmp
sbb
fnstcw
icebp
inc
sti
fs
repz
sbb
lds
ins
leave
icebp
jno
call
test
pop
fidivr
repz
sbb
lds
jmp
mov
les
dec
inc
outs
dec
jmp
ret
out
dec
loop
inc
cld
cwde
add
mov
scas
jmp
xchg
jp
lahf
stos
lds
in
dec
cli
gs
call
mov
cmps
dec
bound
mov
sub
in
sti
fs
clc
mov
mov
dec
jmp
inc
repnz
int3
push
in
imul
xchg
add
mov
inc
repz
sbb
int3
push
int
std
jge
inc
adc
int3
jae
push
inc
sti
jle
jmp
int3
push
in
sti
fs
cld
pushf
or
push
jmp
sbb
push
in
test
push
mov
push
jmp
push
mov
sahf
mov
inc
std
bound
sbb
mov
pushf
mov
jo
dec
pop
jae
inc
repz
adc
int3
push
in
dec
loope
pop
adc
loop
dec
push
fs
cld
call
push
jmp
sti
fs
repz
sbb
inc
mov
in
rep
inc
cmc
xchg
sbb
int3
ins
cmps
in
rep
inc
jmp
xchg
mov
ins
cmps
in
rep
pop
loop
sbb
lds
int3
es
lock
pusha
cmps
in
loope
inc
out
pop
out
mov
adc
outs
inc
xrelease
cdq
ins
mov
push
std
jno
cmps
cwde
pop
mov
xchg
mov
arpl
dec
call
xor
lock
pop
loop
sbb
inc
xchg
dec
clc
xchg
mov
test
adc
jno
out
or
push
in
lock
ja
mov
xchg
mov
jo
jecxz
sti
fs
sti
cdq
adc
and
imul
dec
xchg
sbb
int3
push
in
lock
mov
sahf
mov
jo
call
lahf
adc
push
xchg
mov
inc
out
bound
popf
adc
int3
push
in
dec
std
jle
repz
sbb
add
inc
test
xchg
mov
inc
cli
ins
dec
out
pop
(bad)
push
sahf
mov
push
sti
fs
sti
cdq
sbb
bound
sti
cdq
sbb
int3
bound
inc
repz
adc
int3
push
in
dec
std
jl
into
xchg
sbb
fldenv
ins
mov
fs
cld
call
imul
repz
sbb
(bad)
jnp
in
rep
inc
jecxz
sbb
(bad)
daa
mov
inc
sti
fs
cld
call
gs
jmp
repz
adc
into
push
in
lock
cmps
mov
xchg
mov
ins
mov
dec
clc
xchg
pop
cmp
sahf
mov
inc
std
bound
sbb
lds
inc
repz
mov
xchg
mov
ins
mov
inc
sti
jl
repz
or
jg
lock
scas
fs
cld
call
push
jmp
repz
sbb
inc
cmps
in
repz
sahf
mov
push
jmp
jae
dec
std
mov
(bad)
ins
cmps
in
rep
pop
or
les
in
stc
ins
dec
jmp
xchg
mov
inc
loope
xchg
xchg
adc
push
in
lock
xchg
sbb
(bad)
jo
in
sti
imul
sbb
or
std
push
sti
fs
sti
cwde
pop
mov
popa
lods
dec
dec
fs
cld
call
imul
mov
sahf
mov
jo
lock
sti
fs
sti
cdq
sbb
bound
repz
adc
lds
out
imul
loop
xchg
xor
sahf
mov
int
bound
xchg
adc
(bad)
jg
in
repz
mov
cmps
jecxz
call
adc
les
jle
jmp
test
inc
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
in
sti
fs
repz
sbb
int3
push
int
repnz
inc
jmp
adc
ja
call
rcr
mov
dec
bnd
cmc
xchg
retf
jecxz
sti
gs
clc
mov
test
fs
out
dec
sti
fs
cld
call
gs
out
push
mul
repz
adc
int3
push
in
dec
lock
xchg
adc
push
in
dec
std
jle
cmp
mov
inc
mov
inc
sti
fs
repz
push
in
dec
icebp
je
repz
adc
push
in
dec
sti
jle
repz
sbb
add
inc
stc
ins
dec
jmp
mov
int3
push
out
inc
loope
outs
repz
sbb
add
mov
inc
stc
ins
dec
cli
mov
sbb
int3
push
jmp
repz
sbb
fldenv
in
repz
popf
mov
jg
dec
fidiv
repz
sbb
(bad)
inc
cmps
in
repz
adc
jecxz
in
hlt
ins
dec
cli
mov
mov
pushf
mov
jle
lock
out
bound
xchg
adc
int3
push
jmp
sbb
int3
push
loope
idiv
jmp
mov
jmp
loope
push
(bad)
xchg
sbb
(bad)
jae
jl
sti
pusha
dec
(bad)
fwait
pop
cmp
test
aad
cmps
in
rep
dec
jmp
xchg
mov
jo
rol
dec
cli
xchg
adc
bound
dec
stc
xchg
adc
imul
repz
sbb
movs
push
out
pop
xchg
jle
repz
adc
gs
out
pop
jb
inc
repz
adc
ret
bound
inc
lock
mov
push
jecxz
dec
jmp
stos
mov
push
sti
fs
sti
cwde
adc
push
xchg
mov
arpl
dec
cli
mov
add
mov
push
stos
int
bnd
sti
sahf
adc
jns
mov
push
std
jle
repz
adc
push
int
sti
push
mov
ins
stos
int
repnz
mov
mov
jo
jecxz
sti
ins
dec
jmp
sahf
mov
pop
jae
dec
repz
xor
les
hlt
inc
lock
dec
jecxz
adc
(bad)
push
call
repz
adc
push
in
mov
lahf
sbb
int3
jb
nop
inc
sti
popa
push
fwait
sbb
inc
jecxz
ins
sub
mov
sahf
mov
int
fs
std
call
inc
lods
jecxz
sti
fs
(bad)
xchg
sbb
bound
dec
cli
xchg
or
jle
int
sti
fs
(bad)
mov
mov
bound
dec
cli
mov
retf
in
repz
mov
sahf
mov
push
ins
jno
fs
sti
lahf
adc
sub
dec
call
mov
inc
sti
fs
sti
cdq
sbb
pusha
mov
push
imul
xchg
sbb
ins
stos
in
dec
icebp
jo
fistp
mov
dec
loope
dec
cmc
sahf
xor
les
mov
cli
fwait
adc
scas
out
push
out
jo
sti
fwait
or
fnstenv
jecxz
cmc
ins
push
jmp
mov
repz
mov
xchg
mov
pusha
scas
(bad)
cmp
fwait
or
jae
add
ins
pop
jnp
sbb
idiv
dec
sti
cwde
sbb
les
lock
sti
fs
call
xchg
(bad)
arpl
inc
sti
pushf
adc
jns
scas
aad
cmp
inc
test
xchg
(bad)
jecxz
in
hlt
ins
dec
jmp
lahf
mov
jo
dec
into
fs
std
call
inc
scas
dec
imul
mov
lds
fs
shr
jg
fwait
add
push
jmp
push
mov
addr16
inc
shr
out
sbb
rol
inc
lock
dec
stc
sahf
adc
in
mov
jg
call
imul
out
sbb
(bad)
sub
dec
jmp
sahf
mov
inc
std
bound
push
mov
bound
dec
clc
xchg
sbb
jo
test
push
out
or
jo
ins
inc
rep
dec
jmp
sahf
mov
arpl
dec
fistp
mov
pop
jae
dec
sti
fwait
sbb
jg
in
sti
dec
dec
cli
mov
(bad)
mov
inc
std
fs
jnp
add
or
lock
out
bound
(bad)
or
arpl
dec
out
or
and
in
pop
jb
pop
sti
popf
or
jle
jecxz
loope
push
stc
mov
cdq
ins
mov
push
std
jno
cmps
cwde
pop
mov
ins
stos
in
dec
loop
(bad)
mov
mov
push
in
dec
rep
push
cli
call
adc
popf
add
retf
je
(bad)
test
dec
sti
call
bound
dec
push
pushw
mov
bound
dec
sti
call
bound
mov
call
bound
dec
sti
call
adc
xchg
sub
js
arpl
shl
ins
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
jecxz
adc
les
in
dec
imul
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
pop
sahf
adc
les
xchg
and
data16
(bad)
out
sbb
cwde
cmc
jno
outs
icebp
(bad)
out
sti
stos
popa
retf
dec
push
out
je
fs
stos
or
shr
or
fldenv
shl
lahf
adc
aad
stos
nop
mov
rcl
nop
add
xchg
sti
xchg
ins
call
mov
fadd
xchg
imul
fidiv
pushf
mov
(bad)
int
xchg
add
popf
jmp
push
repz
pop
fs
mov
xchg
clc
add
sahf
sub
jno
outs
loop
mov
(bad)
fwait
sub
sub
push
sbb
xchg
jmp
cdq
dec
out
repz
ret
test
xchg
sbb
xchg
hlt
cmp
jo
nop
jmp
mov
ds
iretw
dec
clc
aam
inc
xlat
and
pop
ja
out
addr16
in
lods
pop
ret
fiadd
and
lock
jmp
xchg
pop
daa
aad
daa
cdq
ds
mov
jo
or
mov
jl
jns
mov
ins
ror
jmp
in
mov
test
enter
test
(bad)
outs
xchg
and
jmp
shl
add
xchg
arpl
(bad)
add
and
push
and
int
or
iret
repnz
add
jmp
ins
mov
mov
ror
aam
repz
fiadd
jmp
fidiv
(bad)
pushw
mov
popf
mov
ficomp
lahf
retf
jbe
fisub
(bad)
pushw
mov
xlat
cmps
pop
fld
mov
shl
add
sub
int
xor
retf
inc
(bad)
cmp
mov
mov
inc
cli
inc
sar
mov
sub
mov
push
jmp
shl
lea
mov
mov
pop
cld
push
xlat
test
cmp
mov
(bad)
repz
mov
mov
shl
test
jmp
add
dec
cmc
xchg
and
test
mov
(bad)
xor
test
mov
sar
mov
and
jmp
shl
lea
mov
mov
dec
jecxz
xlat
test
sub
mov
push
jecxz
(bad)
repz
mov
mov
into
loop
es
add
cmc
inc
into
jmp
sub
mov
shr
pushf
xor
test
stos
fist
dec
fdiv
pushf
cmp
lods
or
push
inc
cmp
mov
mov
inc
cli
inc
sar
mov
sub
mov
push
jmp
shl
lea
mov
mov
pop
cld
push
xlat
test
cmp
mov
(bad)
repz
mov
mov
shl
test
jmp
add
dec
cmc
xchg
and
test
mov
(bad)
xor
test
mov
sar
mov
and
jmp
shl
lea
mov
mov
dec
jecxz
xlat
test
sub
mov
push
jecxz
(bad)
repz
mov
mov
into
loop
es
add
cmc
inc
into
jmp
sub
cdq
adc
add
scas
in
dec
rep
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
call
bound
dec
sti
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
lock
add
sbb
add
and
jb
outs
addr16
add
add
pop
add
sub
add
and
add
add
adc
add
and
dec
inc
add
add
add
or
add
inc
ins
outs
bound
add
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
or
add
add
or
add
add
add
or
cmp
adc
or
outs
add
push
add
ja
or
(bad)
add
add
add
add
add
add
add
add
add
add
add
rol
ja
push
add
movs
adc
push
add
adc
adc
adc
add
adc
adc
add
xor
or
jo
adc
push
add
add
adc
adc
push
add
ja
or
xor
add
push
adc
add
add
add
mov
add
adc
adc
out
adc
add
add
adc
adc
add
ja
push
add
jmp
adc
adc
add
ja
or
adc
adc
add
add
adc
adc
add
add
add
pop
adc
add
adc
add
add
rcl
adc
add
adc
adc
add
adc
adc
add
adc
addr16
cwde
adc
sahf
adc
mov
ja
push
add
add
adc
enter
push
add
push
out
adc
ja
push
add
push
adc
add
add
mov
mov
push
mov
push
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
or
add
add
add
add
sbb
add
add
add
add
outs
add
add
add
add
add
add
add
add
jo
add
add
mov
add
or
add
add
add
add
jne
add
add
cdq
add
add
add
add
add
add
jns
add
add
cmps
add
add
add
add
add
add
jl
add
add
mov
add
sbb
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
fs
daa
add
add
push
cmp
add
or
inc
add
add
add
add
add
pop
daa
add
add
pop
cdq
add
add
pop
ret
add
add
add
or
add
retf
add
add
or
inc
add
add
or
add
add
scas
add
add
xchg
add
add
add
add
or
add
add
or
add
add
or
add
add
(bad)
add
add
add
add
ret
add
add
or
or
add
repz
add
add
or
or
add
add
add
add
add
add
or
add
int3
or
add
or
add
add
or
add
add
(bad)
add
add
inc
add
add
scas
add
add
add
add
add
loope
pop
add
add
or
add
add
or
add
add
or
cmp
(bad)
add
add
or
jmp
cmp
add
icebp
or
and
add
cmp
add
pop
push
aam
add
push
add
cmps
push
scas
add
add
add
mov
add
push
call
cmove
add
adc
scas
add
add
addps
add
(bad)
add
add
add
add
(bad)
add
add
(bad)
add
add
scas
add
add
add
add
add
adc
add
dec
adc
aam
push
and
add
add
sbb
adc
add
pop
and
add
add
sbb
adc
add
push
add
sbb
add
adc
mov
sbb
add
mov
add
add
adc
mov
sub
add
int3
and
add
add
or
add
and
add
add
or
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
push
and
add
add
add
add
add
add
inc
add
jno
add
jo
add
add
adc
push
js
add
cwde
and
add
add
add
add
add
sbb
adc
add
les
add
add
add
pushf
add
add
hlt
and
add
add
sbb
adc
add
add
add
add
adc
test
pop
add
adc
add
add
push
add
add
add
add
add
add
and
add
add
add
add
add
push
add
add
add
add
and
add
add
add
in
add
add
push
add
add
xor
push
add
add
adc
add
add
push
add
ret
add
add
add
add
add
add
add
and
int
adc
add
add
add
rol
pop
add
add
add
add
add
add
add
add
in
push
add
add
add
push
add
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
add
sub
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
push
add
cmp
add
add
push
sbb
adc
aaa
add
add
add
push
add
push
xor
add
add
add
push
add
add
add
sbb
adc
cmp
mov
add
add
push
sbb
adc
cmp
sar
add
add
sbb
adc
cmp
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
add
add
add
add
inc
add
push
inc
add
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
add
add
add
add
inc
add
push
pop
add
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
jne
data16
add
add
add
xor
jg
imul
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
xchg
add
add
add
add
xor
call
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
lods
add
add
add
xor
mov
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
retf
add
add
add
xor
rol
xchg
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
out
fwait
add
add
add
add
xor
in
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
add
movs
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
inc
add
push
adc
lods
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
xchg
add
add
add
xor
and
xor
add
add
sbb
adc
mov
add
add
add
push
add
add
push
add
push
xor
mov
add
add
add
push
aas
add
add
xor
add
add
add
dec
add
add
xor
add
add
sbb
adc
lds
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
pop
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
jb
fld
add
add
add
inc
add
push
js
fiadd
sub
add
add
push
sbb
adc
jecxz
add
add
add
and
add
add
add
push
add
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
ds
add
add
add
add
xor
mov
xor
add
add
sbb
adc
hlt
add
add
add
pop
cmps
add
add
add
add
add
int3
xor
push
sbb
adc
clc
add
xor
push
add
pop
mov
clc
add
add
add
push
add
pop
mov
add
add
push
sbb
adc
std
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
adc
add
enter
add
push
sbb
adc
add
xor
add
push
sbb
adc
add
mov
add
add
add
or
add
add
add
add
or
add
add
add
sbb
adc
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
test
add
add
add
add
xor
std
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
lsl
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
add
add
add
add
add
xor
pop
add
add
add
add
sbb
adc
sub
add
add
add
and
and
add
add
or
add
jl
add
add
push
add
add
add
add
push
sbb
adc
xor
add
add
add
or
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
push
add
add
add
add
add
xor
pop
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
push
add
add
add
add
xor
jno
dec
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
test
pop
add
add
add
add
xor
mov
pop
add
xor
add
add
sbb
adc
pop
add
xor
add
add
add
or
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
xor
mov
xor
push
sbb
adc
add
add
add
or
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
inc
add
push
adc
outs
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
xor
mov
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
inc
add
push
adc
jl
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
add
add
add
xor
mov
aaa
add
add
push
sbb
adc
add
add
push
add
ret
add
add
add
push
add
mov
add
add
push
add
add
add
add
add
add
push
sbb
adc
test
pop
aaa
add
add
push
sbb
adc
test
je
add
add
push
add
add
push
sbb
adc
mov
mov
add
add
shl
add
add
add
or
add
add
add
sbb
adc
mov
add
add
add
and
or
add
add
add
sbb
adc
nop
add
aaa
add
add
push
add
or
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
or
add
add
sbb
adc
movs
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
adc
test
add
add
add
inc
add
push
jno
test
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
daa
add
add
add
add
add
xor
sub
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
ss
add
add
add
add
xor
cmp
mov
add
add
sbb
adc
mov
add
add
add
add
add
cmp
add
add
add
dec
add
add
cmp
add
add
add
js
add
add
push
sbb
adc
lds
test
add
add
push
sbb
adc
lds
sbb
add
add
push
sbb
adc
lds
pusha
add
add
push
sbb
adc
lds
ins
add
add
push
sbb
adc
lds
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
fs
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
jae
rol
add
add
add
inc
add
push
jns
rol
inc
cmp
add
add
sbb
adc
aad
je
add
add
push
sbb
adc
aad
add
add
add
and
add
add
add
or
cmp
add
add
sbb
adc
fld
push
add
add
push
sbb
adc
fld
dec
cmp
add
add
sbb
adc
fld
pop
cmp
add
add
add
or
add
add
push
add
or
cmp
add
add
add
xchg
add
add
add
add
or
add
add
push
sbb
adc
loopne
les
add
add
push
add
add
cmp
add
add
add
add
add
add
add
or
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
mov
fdivr
add
add
push
sbb
adc
clc
add
add
add
or
add
add
add
add
sbb
adc
cli
add
push
sbb
adc
cli
add
add
add
or
add
add
add
add
or
add
add
push
add
or
add
add
add
add
out
add
dec
add
add
push
sbb
adc
add
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
inc
add
push
sti
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
adc
add
add
push
sbb
adc
pop
add
add
sbb
adc
pop
add
add
add
or
add
add
add
push
add
fs
add
add
add
add
cmp
add
add
add
add
cmp
add
add
sbb
adc
and
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
ss
add
add
add
add
xor
xor
add
add
push
sbb
adc
add
push
add
or
add
add
add
push
sbb
adc
xor
enter
add
push
add
or
add
add
add
push
sbb
adc
xor
adc
add
add
push
add
or
add
add
add
push
add
or
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
adc
cmp
in
add
add
push
sbb
adc
cmp
cld
cmp
add
add
add
or
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
jb
inc
add
add
add
add
xor
bound
add
add
push
sbb
adc
dec
add
cmp
add
add
add
or
aam
add
add
push
add
or
add
add
add
and
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
xchg
add
add
add
inc
add
push
fwait
add
add
add
push
sbb
adc
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
xor
mov
ins
add
cmp
add
add
sbb
adc
outs
add
add
add
or
fdivr
add
add
push
add
cld
cmp
add
add
add
or
adc
add
add
push
add
or
or
add
add
push
sbb
adc
jp
cmp
add
add
push
add
or
pop
cmp
add
add
add
push
fild
add
add
and
jecxz
jg
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
adc
xchg
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
inc
add
push
pushf
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
inc
add
add
push
sbb
adc
fwait
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
adc
cmp
add
add
sbb
adc
test
les
add
add
push
add
pop
push
test
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
xor
mov
add
add
add
sbb
adc
mov
or
add
add
push
add
cmp
mov
and
add
add
push
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
dec
push
rol
cmp
add
add
sbb
adc
ret
cmp
add
add
add
add
add
add
push
sbb
adc
ret
add
add
push
pop
push
ret
cmp
add
add
add
push
pop
push
ret
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
bound
retf
add
add
add
sbb
adc
int
mov
add
add
push
add
push
push
cmp
add
add
add
push
outs
push
iret
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
xchg
add
add
add
add
add
xor
js
fadd
dec
cmp
add
add
sbb
adc
fadd
push
cmp
add
add
add
adc
fadd
pop
cmp
add
add
add
(bad)
push
fadd
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
mov
loope
clc
cmp
add
add
sbb
adc
loop
push
add
sbb
adc
loop
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
daa
add
add
add
add
add
xor
sahf
push
jmp
add
add
sbb
adc
jmp
adc
push
sbb
adc
jmp
sbb
add
add
push
add
adc
jmp
add
add
add
and
movs
push
jmp
and
push
sbb
adc
in
add
add
add
push
sbb
adc
in
add
add
add
sbb
adc
in
add
add
add
push
in
add
push
sbb
adc
repnz
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
rol
add
add
add
add
xor
mov
add
add
push
sbb
adc
sti
add
add
add
add
add
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
adc
add
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
xor
fld
push
add
cmp
push
sbb
adc
pop
add
add
add
pmaxub
pop
add
add
add
sbb
adc
or
pop
cmp
push
add
rsm
add
add
add
add
push
sbb
adc
or
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
add
xor
lock
adc
pop
cmp
push
sbb
adc
push
add
add
add
add
movlps
push
add
add
add
push
add
psubw
push
add
add
add
add
adc
sbb
sbb
add
add
push
sbb
adc
and
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
out
and
add
add
add
inc
add
push
push
cmp
push
sbb
adc
and
add
add
add
adc
pop
and
add
add
add
pop
pop
sub
hlt
cmp
push
sbb
adc
sub
add
add
sbb
adc
sub
add
add
sbb
adc
sub
add
add
sbb
jmp
add
add
rol
add
add
add
inc
add
push
xchg
add
add
add
inc
add
push
sub
xor
add
add
sbb
adc
cmp
add
add
add
push
sbb
jmp
add
add
rol
add
add
add
inc
add
push
cld
add
add
add
add
inc
add
push
adc
cmp
add
add
sbb
adc
cmp
add
add
add
jg
add
add
jg
add
add
fadd
add
add
add
add
add
add
add
call
add
add
or
or
add
add
sbb
push
add
and
daa
add
cs
cmp
add
add
add
inc
add
push
add
pop
add
pop
add
pusha
add
gs
imul
add
ins
add
jae
add
push
add
add
add
jg
add
add
jg
add
add
fwait
add
test
add
add
fadd
loope
add
add
in
add
add
call
add
add
add
add
add
sbb
add
add
loope
add
add
in
add
add
call
add
add
add
push
add
add
cmp
add
add
out
add
add
add
add
sbb
add
push
add
add
cmp
add
add
add
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
fwait
add
test
add
add
jg
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
out
add
add
add
add
sbb
add
add
add
push
add
add
fwait
add
test
add
add
jg
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
jo
add
add
jp
add
add
sbb
add
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
push
add
add
out
add
add
add
add
sbb
add
add
add
push
add
add
fwait
add
test
add
add
jg
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
jp
add
add
sbb
add
add
add
push
add
add
jo
add
add
jne
add
add
add
add
add
add
add
add
out
add
add
add
add
sbb
add
add
add
fwait
add
test
add
add
pushf
push
add
add
mov
add
add
add
add
add
sbb
add
mov
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
sbb
add
add
add
add
push
add
add
int3
push
add
add
fild
add
add
out
add
add
in
push
add
add
inc
add
add
push
pop
add
add
adc
add
add
push
pop
add
add
sbb
add
add
fwait
add
test
add
add
pop
pop
add
add
and
add
pop
add
add
das
pop
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
and
add
pop
add
add
das
pop
add
add
add
add
add
add
pop
add
add
cmp
add
add
add
dec
pop
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
cmp
add
add
add
dec
pop
add
add
add
add
add
add
pusha
pop
add
add
fs
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
pop
add
add
mov
add
add
pop
add
add
fld
add
add
fild
add
add
jecxz
add
add
out
pop
add
add
icebp
pop
add
add
fwait
add
test
add
add
out
add
add
add
add
sbb
add
add
or
add
add
or
add
add
add
add
sub
add
add
or
add
xor
add
add
cmp
add
add
inc
or
add
add
add
add
dec
or
add
add
add
add
add
add
add
pop
or
add
add
add
add
out
add
add
add
add
sbb
add
add
add
pop
or
add
add
add
add
fwait
add
test
add
add
data16
add
add
add
add
out
add
add
add
add
sbb
add
add
add
ins
or
add
add
add
add
add
add
jbe
add
add
out
add
add
add
add
sbb
add
add
add
jbe
add
add
or
xchg
or
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
hlt
or
add
add
add
push
add
add
sbb
add
or
add
add
or
add
add
or
add
hlt
or
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
add
or
add
add
or
add
add
or
add
add
or
add
sub
add
add
fwait
add
test
add
add
das
or
add
add
add
add
add
add
sbb
add
or
add
add
or
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
ja
add
add
jp
add
add
xchg
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
add
add
add
dec
or
add
add
add
push
add
add
sbb
add
or
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
sbb
add
add
add
push
or
add
add
add
pusha
or
add
add
add
add
add
jbe
add
add
jp
add
add
mov
add
add
xchg
or
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
or
add
add
or
and
in
add
add
dec
add
add
pop
or
add
add
or
add
add
or
add
pop
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
inc
or
add
add
add
add
add
popa
or
add
add
add
add
ins
or
add
outs
or
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
or
add
cmp
add
add
add
add
add
add
add
add
sbb
add
or
add
add
or
add
add
or
add
cmp
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
push
or
add
add
add
push
add
add
sbb
add
add
add
dec
or
add
add
add
add
push
or
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
add
add
or
add
add
or
add
ror
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
sbb
add
or
pop
or
or
prefetch
add
add
add
add
or
and
and
out
add
add
add
add
sbb
add
or
and
and
sub
sub
add
add
xor
xor
add
add
add
add
add
add
dec
or
dec
or
push
or
popa
or
fs
addr16
push
add
add
fwait
add
test
add
add
jb
add
add
ja
add
add
jp
add
add
jg
add
add
add
add
add
add
add
add
sbb
add
add
add
ja
add
add
jp
add
add
jg
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
add
add
mov
add
or
ret
or
into
or
fmul
fisttp
fisttp
test
add
add
add
add
add
add
add
add
adc
add
add
pop
push
add
add
sbb
add
add
fwait
add
test
add
add
out
add
add
add
add
sbb
add
add
add
push
add
add
out
add
add
add
add
sbb
add
push
add
add
fwait
add
test
add
add
sub
add
push
add
add
cmp
add
add
aas
push
add
add
add
add
push
add
add
sbb
add
add
push
add
add
cmp
add
add
aas
push
add
add
fwait
add
test
add
add
dec
push
add
add
dec
push
add
add
push
push
add
add
push
push
add
add
add
add
push
add
add
sbb
add
add
add
dec
push
add
add
push
push
add
add
push
push
add
add
arpl
add
add
fwait
add
test
add
add
outs
push
add
add
jae
add
add
ja
add
add
jp
add
add
add
add
push
add
add
sbb
add
add
add
jae
add
add
ja
add
add
jp
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
xlat
push
add
add
fwait
add
test
add
add
fisttp
add
add
fisttp
add
add
out
add
add
add
add
sbb
add
push
add
add
fisttp
add
add
call
add
push
add
add
clc
push
add
add
cld
push
add
add
add
add
add
pop
sldt
add
fwait
add
test
add
add
out
add
add
add
add
sbb
add
sldt
add
and
add
add
and
add
add
fwait
add
test
add
add
sub
add
add
out
add
add
add
add
sbb
add
sldt
add
fwait
add
test
add
add
cmp
add
add
inc
sldt
add
out
add
add
add
add
sbb
add
sldt
add
inc
verr
add
push
sldt
add
pop
sldt
add
jp
add
add
or
test
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sldt
add
iret
sldt
add
fwait
add
test
add
add
ror
add
add
fmul
add
add
fimul
add
add
jecxz
add
add
add
add
push
add
add
sbb
add
sldt
add
fmul
add
add
fimul
add
add
jecxz
add
add
in
sldt
add
repz
add
stc
sldt
add
cld
sldt
add
add
add
adc
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
cmp
add
add
inc
adc
add
add
add
add
add
add
add
pop
adc
add
add
add
add
add
add
imul
add
add
add
add
out
add
add
add
add
sbb
add
add
add
imul
add
add
add
add
fwait
add
test
add
add
out
add
add
add
add
sbb
add
add
dec
add
imul
jno
dec
add
add
add
adc
jns
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
pushf
add
add
pushf
add
add
pushf
add
add
add
add
add
add
add
add
adc
pop
sbb
aas
add
add
add
push
adc
pop
sbb
popa
add
add
pop
sbb
dec
add
add
or
add
add
add
add
adc
leave
add
adc
push
add
mov
fld
rcl
add
add
adc
adc
add
fst
stos
or
add
adc
mov
adc
or
add
leave
or
add
into
or
add
pop
add
add
add
add
add
add
add
adc
or
add
adc
or
add
adc
sub
cmc
adc
or
add
add
adc
or
add
adc
or
add
adc
or
add
add
adc
or
add
or
test
or
mov
or
mov
lea
push
add
push
xchg
or
dec
add
add
dec
add
adc
adc
sbb
sub
inc
adc
popa
add
or
add
ror
add
add
fld
xchg
(bad)
adc
stos
adc
dec
add
add
or
or
add
add
add
adc
adc
ror
add
pop
or
or
add
adc
leave
add
stos
add
add
and
loope
dec
add
add
add
adc
icebp
add
stos
add
add
add
sub
mov
xchg
pop
add
add
add
or
add
add
add
add
add
inc
add
add
pop
inc
add
add
pop
inc
add
add
dec
add
add
add
arpl
adc
cmp
arpl
sbb
dec
pop
imul
add
add
add
add
add
add
add
add
mov
mov
enter
xor
popa
pop
mov
pop
mov
pop
mov
pop
mov
or
add
add
ret
add
add
cmp
loopne
xor
popa
pop
jecxz
jnp
popa
pop
add
adc
cmp
add
xor
popa
pop
and
adc
cmp
and
xor
popa
pop
inc
add
add
inc
add
add
pop
pusha
add
add
pusha
add
add
pop
add
add
mov
pop
rol
add
pop
rol
add
loopne
xor
popa
pop
add
xor
popa
pop
add
adc
cmp
rol
add
inc
add
pusha
add
add
or
add
mov
pop
ror
add
and
and
popa
pop
inc
adc
add
loopne
and
popa
pop
mov
pop
mov
pop
rcr
add
loopne
and
popa
pop
and
and
popa
pop
inc
sbb
add
pusha
sbb
add
add
and
rcr
add
rcr
add
loopne
and
popa
pop
and
add
pusha
and
add
pusha
and
add
and
popa
pop
add
and
popa
pop
loopne
and
popa
pop
loopne
and
popa
pop
loopne
and
popa
pop
mov
pop
add
and
popa
pop
and
and
popa
pop
sub
add
and
and
popa
pop
mov
pop
loopne
and
popa
pop
add
and
popa
pop
add
add
and
add
inc
xor
add
loopne
and
popa
pop
xor
add
add
add
add
add
add
add
xchg
mov
xchg
pop
loope
in
lock
cmc
pop
add
add
jg
(bad)
aam
or
and
or
or
or
pop
lods
or
or
or
or
or
or
or
or
or
pop
ud2
adc
movs
or
pop
or
sbb
sbb
or
or
or
pop
test
pop
loope
loope
mov
or
or
add
or
add
fwait
or
push
push
fwait
or
add
push
push
call
add
xchg
add
add
lahf
or
add
push
cdq
add
add
add
add
add
add
add
add
add
add
call
add
add
(bad)
add
add
or
or
add
add
cmps
or
push
push
ret
add
xchg
add
push
scas
add
call
add
add
lahf
or
or
or
add
(bad)
or
or
or
add
add
or
cdq
add
add
or
add
or
call
push
push
push
(bad)
or
or
or
(bad)
or
or
or
add
push
push
push
push
ret
add
add
call
add
add
add
or
add
xchg
add
add
add
call
add
or
jmp
push
push
call
add
add
add
add
aam
jmp
cdq
add
add
add
jmp
push
push
push
push
push
push
jmp
xchg
add
add
xchg
add
add
add
push
lahf
or
push
push
call
add
add
xchg
add
add
add
add
call
push
cdq
add
inc
add
add
push
push
push
push
inc
add
add
call
add
scas
add
push
(bad)
add
add
add
push
cdq
add
jmp
push
push
scas
add
add
add
(bad)
add
add
add
add
push
push
(bad)
add
aam
add
add
push
add
add
add
daa
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lods
pop
pop
or
hlt
or
or
or
outs
or
retf
cmpps
push
jne
jne
mov
jne
popw
ins
pop
je
jnp
jae
jl
inc
add
add
add
add
add
add
push
add
add
add
leave
add
add
inc
add
add
add
add
add
add
add
add
add
cmp
pop
add
jge
call
add
add
add
add
or
add
jecxz
pop
or
add
out
add
add
add
or
add
or
add
adc
popa
or
add
dec
add
add
arpl
(bad)
or
jno
inc
add
add
mov
mov
add
add
adc
inc
add
add
call
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
ja
add
add
add
add
or
loopne
add
add
jge
add
add
add
or
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
pop
add
and
sbb
and
sbb
and
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
add
das
add
xor
and
xor
sub
xor
sub
xor
sub
xor
sub
xor
add
aaa
add
cmp
add
add
add
add
add
add
add
cmp
cmp
add
add
add
add
cmp
inc
add
add
aas
add
aas
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
bound
outs
add
jo
arpl
jno
arpl
jb
add
imul
jne
outs
add
jo
ja
jb
js
je
jns
je
jp
je
jnp
ja
jl
jns
jge
jns
jle
jnp
jg
jnp
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
pop
mov
add
adc
or
jge
add
adc
sbb
jge
add
add
sbb
jge
add
add
aaa
add
das
add
pop
das
add
jno
inc
ss
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
add
inc
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
je
popa
popa
add
ins
xor
addr16
add
je
push
arpl
add
outs
imul
add
add
outs
jns
add
addr16
add
push
imul
xor
jne
xor
ja
cmp
jo
push
add
add
xor
add
fs
jo
je
add
js
jbe
add
add
data16
add
xor
data16
cmp
imul
bound
ins
add
bound
pop
add
js
jne
imul
data16
push
arpl
push
pop
add
pop
jo
add
fs
bound
add
arpl
cmp
arpl
bound
je
jne
aaa
add
cmp
add
add
add
gs
add
add
imul
ins
ins
ja
add
bound
ins
cmp
add
imul
add
add
outs
add
push
ins
add
jp
imul
add
jno
add
pop
add
add
arpl
ins
add
imul
add
imul
ins
jae
add
jno
add
add
outs
xor
imul
outs
aaa
aaa
add
add
xor
js
fs
arpl
js
add
data16
ja
jb
gs
jno
add
add
add
add
cmp
add
jae
ins
imul
jb
add
js
add
add
jp
push
ss
add
js
jo
bound
add
push
ja
add
popa
jno
gs
outs
add
bound
ja
jne
add
add
pop
fs
ins
xor
xor
add
jne
jb
imul
xor
outs
aaa
add
imul
ins
jb
add
arpl
js
je
add
xor
add
add
outs
jbe
xor
jbe
pop
xor
gs
xor
arpl
add
add
data16
add
cmp
add
jb
add
jae
imul
add
add
push
ins
jbe
jp
imul
add
pop
cmp
outs
pop
xor
add
push
jno
add
aaa
add
bound
outs
jo
jo
add
outs
ss
add
add
bound
add
ins
jns
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jo
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
bound
jb
imul
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
je
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
ja
add
gs
imul
add
add
ins
xor
jae
push
xor
jp
popa
jns
fs
jo
add
outs
outs
xor
ss
outs
cmp
jno
cmp
push
cmp
ins
add
xor
add
bound
add
js
arpl
data16
jae
add
dec
xor
jno
jo
jp
add
add
add
cmp
add
xor
add
cmp
add
add
pop
xor
ja
jbe
jae
jo
add
gs
jp
jb
popa
add
cmp
add
add
jns
dec
popa
imul
imul
ins
gs
je
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
imul
add
aaa
aaa
add
jae
ins
add
push
inc
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
bound
add
jb
jbe
add
popa
js
jae
push
add
outs
fs
xor
jne
jns
ja
add
xor
jbe
imul
outs
ins
add
imul
add
outs
pop
imul
add
jbe
xor
add
add
imul
xor
jo
add
bound
imul
jae
jns
add
push
xor
js
aaa
jno
imul
ja
xor
jp
add
addr16
inc
arpl
popa
ins
add
xor
add
arpl
xor
outs
imul
add
bound
jne
push
push
add
add
add
xor
ins
add
xor
push
ja
ins
imul
aaa
add
jne
xor
add
ins
ins
ja
add
aaa
add
jns
add
pop
ja
add
cmp
add
jo
js
arpl
js
xor
xor
data16
add
imul
xor
add
gs
xor
push
add
add
data16
je
jae
bound
js
imul
imul
xor
xor
fs
bound
data16
outs
outs
add
ins
addr16
xor
arpl
aaa
aaa
add
aaa
js
add
add
add
xor
add
outs
data16
js
add
xor
xor
bound
jo
add
arpl
imul
push
add
xor
push
cmp
push
add
add
popa
jae
js
imul
add
imul
jns
jae
add
outs
bound
add
add
aaa
xor
js
cmp
cmp
add
add
arpl
add
add
add
xor
add
xor
xor
xor
cmp
cmp
js
js
add
xor
ins
push
add
pop
add
jo
ja
jo
outs
data16
xor
cmp
add
add
ss
jno
jae
add
jne
add
je
jb
arpl
gs
add
add
jae
ja
je
outs
data16
js
xor
je
cmp
add
arpl
add
xor
imul
add
xor
add
outs
ins
jo
imul
jno
je
imul
push
jne
je
jno
addr16
push
jno
add
add
cmp
add
outs
jne
jae
xor
jne
xor
bound
ja
jne
cmp
ins
bound
xor
xor
jno
js
add
je
add
xor
push
add
outs
ins
ins
add
imul
addr16
jno
pop
add
cmp
imul
add
add
xor
gs
push
jo
add
jne
jb
add
xor
add
jb
jno
je
imul
add
xor
add
jp
popa
add
outs
push
jne
data16
cmp
outs
jne
xor
outs
add
add
arpl
add
data16
ja
add
push
data16
add
jbe
add
je
cmp
data16
jo
popaw
jae
push
popa
jae
jo
xor
add
je
add
add
jns
imul
add
pop
xor
jno
add
jae
jae
ins
jbe
add
arpl
add
xor
push
jns
add
ins
cmp
jne
bound
add
imul
pop
add
xor
jb
add
bound
add
add
ins
jns
cmp
addr16
xor
arpl
ins
jbe
add
xor
push
xor
ins
bound
data16
xor
add
xor
popa
xor
add
jns
ins
add
outs
ins
xor
ins
xor
aaa
jo
add
js
xor
push
jbe
jns
add
jne
xor
jae
ja
jp
imul
add
popa
jb
jno
add
jo
add
jne
outs
add
jne
add
popaw
jne
je
gs
outs
pop
data16
je
jns
bound
addr16
add
add
add
add
xor
jae
cmp
ja
xor
aaa
jo
gs
jp
xor
addr16
xor
add
ins
fs
add
js
jns
add
outs
outs
add
jo
jo
popa
push
push
add
push
addr16
jae
imul
ins
add
xor
add
xor
add
jae
aaa
imul
ja
outs
je
jne
je
je
add
xor
jp
push
jns
jbe
ins
jbe
jp
push
bound
bound
xor
gs
ins
fs
xor
add
ins
jno
add
xor
jbe
add
cmp
jb
js
data16
xor
popa
aaa
add
js
add
aaa
jae
ja
xor
xor
jo
jo
ja
outs
imul
data16
arpl
add
xor
add
js
xor
xor
imul
push
imul
popa
ja
jne
imul
add
jp
add
add
ins
xor
jno
jne
cmp
jno
cmp
cmp
add
pop
jne
jae
jbe
imul
add
arpl
add
outs
jno
add
cmp
add
add
add
popa
jo
add
arpl
ja
jbe
xor
add
xor
fs
arpl
addr16
jo
cmp
jp
jp
outs
jp
push
xor
gs
jns
add
je
popa
xor
jo
add
add
add
imul
jae
cmp
add
xor
aaa
jp
jo
je
add
add
pop
add
ins
xor
outs
jae
outs
add
outs
add
add
aaa
add
ins
add
add
imul
add
outs
add
add
je
add
js
push
add
jbe
arpl
popa
xor
jbe
js
add
cmp
jbe
ins
add
xor
ins
xor
jne
add
outs
arpl
push
jo
je
gs
add
ins
ss
outs
push
push
outs
arpl
imul
gs
add
jb
jp
popa
add
add
jo
add
add
xor
xor
jp
bound
jno
xor
jp
push
bound
push
jb
js
ins
js
outs
gs
jo
xor
add
add
data16
ins
cmp
bound
imul
cmp
jbe
add
add
aaa
xor
jo
jb
jb
popa
jbe
push
add
cmp
add
je
add
add
add
xor
add
add
fs
xor
jb
ins
ss
jae
add
add
add
jno
imul
jns
add
fs
add
add
ins
gs
popa
jo
jo
js
push
add
js
add
popa
jae
add
add
cmp
ins
aaa
bound
jbe
jns
xor
push
arpl
imul
push
xor
outs
ins
add
add
bound
ins
ins
outs
arpl
add
data16
bound
imul
fs
imul
jne
xor
add
add
ins
aaa
pop
add
addr16
add
gs
jns
jo
ins
xor
xor
add
imul
jo
jo
add
js
ja
aaa
add
arpl
push
jns
gs
jo
add
js
add
xor
bound
ins
xor
outs
pop
jae
jb
pop
js
add
je
add
imul
add
add
xor
jo
add
cmp
add
add
jp
jo
jne
xor
add
xor
jbe
bound
add
push
push
outs
outs
bound
fs
arpl
imul
jae
add
xor
push
add
add
add
jae
jb
add
popaw
push
push
push
add
jbe
push
add
jne
add
cmp
pop
add
popa
outs
je
add
jae
arpl
ins
je
jp
cmp
push
gs
jbe
ins
add
jne
pop
add
jns
jb
ja
popa
outs
popa
jo
add
jo
add
add
imul
jb
outs
cmp
add
outs
outs
add
add
xor
xor
imul
js
jbe
add
bound
outs
xor
ja
cmp
ins
add
jb
ins
push
cmp
je
popa
outs
aaa
imul
outs
add
popaw
xor
imul
ins
arpl
add
jp
xor
jne
outs
pop
xor
bound
add
ins
jb
add
data16
jp
add
add
cmp
push
add
add
ja
jp
ja
ins
popa
outs
arpl
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
add
jb
outs
add
je
dec
outs
addr16
add
je
inc
push
dec
outs
add
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
jb
outs
outs
jo
outs
outs
je
outs
ins
add
jb
gs
inc
push
arpl
push
jns
je
ins
cs
gs
add
arpl
imul
pop
push
push
inc
cmp
inc
outs
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
pop
dec
outs
ja
inc
gs
je
imul
arpl
jae
push
jb
push
arpl
je
add
gs
jb
jb
push
arpl
jb
jb
inc
push
outs
outs
jbe
jb
imul
inc
push
jo
imul
outs
arpl
jae
jae
jns
popa
ins
add
ins
ins
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
inc
jb
popa
je
push
jb
push
arpl
jb
jb
push
jns
je
ins
cs
jb
ja
outs
add
ins
outs
jb
inc
jb
ins
inc
jb
bound
push
outs
inc
jb
bound
addr16
inc
add
je
inc
add
je
push
add
je
inc
add
jb
push
gs
gs
je
add
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
outs
inc
outs
gs
arpl
jb
ins
gs
jb
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
jae
ins
bound
dec
outs
popa
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jb
ins
gs
jb
outs
outs
add
je
popa
jb
ins
gs
jb
add
jae
gs
cs
push
imul
gs
add
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
popa
jb
ins
outs
je
je
je
add
je
jo
jb
ins
outs
je
je
je
add
popa
jb
add
je
outs
je
jns
jae
gs
bound
addr16
dec
outs
arpl
imul
imul
je
addr16
push
jns
je
ins
inc
imul
jns
inc
outs
outs
arpl
add
jae
gs
cs
dec
add
arpl
jns
inc
js
jae
jae
inc
gs
imul
imul
outs
ja
jb
inc
outs
outs
je
imul
xor
add
je
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
add
je
je
add
outs
je
xor
inc
jne
data16
inc
jb
popa
jns
inc
ins
outs
arpl
outs
jo
add
outs
je
xor
inc
gs
jb
arpl
jae
jns
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
inc
gs
js
arpl
imul
ins
bound
inc
gs
bound
arpl
push
inc
push
push
inc
je
jb
bound
add
dec
ins
jo
jb
inc
je
jb
bound
add
jb
gs
xor
cs
ins
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
xor
jp
popa
jb
jb
jae
jne
arpl
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
imul
jne
add
push
add
push
addr16
add
add
add
push
add
sub
add
add
inc
add
dec
add
outs
add
dec
add
popa
add
je
ins
add
cmp
das
add
ja
inc
add
dec
add
add
inc
add
dec
add
add
popa
add
data16
add
add
add
jbe
inc
add
add
data16
add
imul
add
add
add
push
add
add
add
add
jbe
ins
add
push
add
arpl
pop
add
xor
add
data16
inc
add
jbe
add
inc
add
add
inc
add
outs
add
das
add
pop
add
xor
add
add
add
cmp
or
add
imul
add
or
add
add
add
add
push
add
das
add
or
add
add
add
sub
add
add
add
js
imul
push
add
ja
add
inc
add
add
push
add
cmp
push
add
cmp
push
add
ja
dec
add
dec
add
xor
dec
add
xor
jo
sub
je
add
add
outs
add
push
add
add
inc
add
cmovl
sub
dec
add
push
add
push
add
pop
push
add
dec
add
add
pop
add
add
dec
add
jp
jo
push
add
pop
add
cmp
arpl
inc
add
inc
add
inc
add
add
xor
imul
das
add
push
add
add
add
add
add
jp
inc
add
add
add
pop
add
data16
jnp
push
add
dec
add
adc
dec
add
add
add
xor
cmp
add
outs
add
add
add
xor
push
add
and
add
push
add
jns
bound
dec
add
inc
add
dec
add
add
add
add
cmp
add
xor
dec
add
add
add
add
add
jno
data16
jo
pop
add
add
ins
add
push
add
ins
add
add
add
push
add
add
dec
add
add
bound
outs
add
add
add
add
or
add
and
dec
inc
add
jno
data16
jo
pop
add
add
ins
add
push
add
add
add
je
jno
xor
inc
add
add
add
inc
add
add
jo
aaa
add
pop
add
cmp
adc
add
sub
add
add
add
dec
inc
add
jno
data16
jo
pop
add
add
ins
add
push
add
add
add
dec
add
add
add
dec
add
xor
inc
add
dec
add
add
cmp
dec
add
add
inc
add
js
popa
add
add
dec
inc
add
jne
dec
add
dec
add
add
inc
add
das
add
add
add
push
add
je
inc
add
add
imul
inc
add
dec
add
das
add
add
add
add
cmp
and
add
add
add
inc
inc
add
jno
data16
jo
pop
add
add
ins
add
push
add
add
jns
xor
jae
add
add
add
dec
add
ja
push
add
add
cmp
add
daa
add
dec
add
inc
add
dec
inc
add
jno
data16
jo
pop
add
add
ins
add
push
add
ins
add
xor
je
add
inc
add
inc
add
dec
add
inc
add
inc
add
add
jae
ins
add
add
add
inc
add
sub
push
add
dec
inc
add
jno
data16
jo
pop
add
add
ins
add
push
add
add
add
je
jno
xor
inc
add
add
add
inc
add
add
jo
aaa
add
pop
add
cmp
adc
add
add
add
je
xor
xor
add
jno
data16
jo
pop
add
add
ins
add
push
add
add
add
add
add
dec
add
add
dec
add
dec
add
add
inc
add
js
add
bound
imul
jp
jns
popa
add
add
inc
add
jno
pop
add
pop
add
arpl
data16
dec
add
add
add
arpl
pop
add
add
jo
jp
cmp
add
add
adc
daa
add
dec
add
inc
add
cmp
add
popa
add
add
add
add
add
add
add
add
xor
xor
xor
dec
add
add
daa
add
add
pop
xor
pop
add
add
push
push
add
and
push
pop
add
add
add
add
dec
add
pop
add
add
add
xor
ins
add
add
add
dec
add
add
inc
add
cmp
add
adc
inc
add
add
dec
add
cmp
add
or
and
pop
add
add
pcmpgtb
push
add
add
add
add
cmovne
jle
push
add
add
add
add
adc
arpl
inc
add
add
inc
add
push
add
add
or
add
add
jge
add
add
mov
ins
int3
xchg
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
or
adc
or
adc
add
add
adc
add
adc
and
add
and
or
add
adc
add
add
adc
add
add
add
xor
add
adc
add
adc
add
add
add
push
adc
add
add
add
push
add
add
add
or
push
add
add
add
pop
add
or
sbb
add
add
push
add
push
or
add
push
add
push
push
push
or
add
add
sbb
add
add
add
or
push
adc
or
or
adc
add
and
and
or
or
or
add
sbb
adc
add
adc
or
and
add
adc
pop
add
or
and
and
push
sbb
add
sbb
sbb
and
add
and
and
add
push
sbb
add
sbb
sbb
and
and
sbb
push
and
add
sbb
adc
sbb
adc
sbb
sbb
and
add
sbb
sbb
and
and
sbb
adc
or
add
and
sbb
and
or
and
sbb
pop
adc
sbb
sbb
or
and
sbb
and
and
or
push
and
adc
sbb
sbb
adc
add
sbb
and
and
add
and
adc
sbb
and
or
and
add
sbb
and
and
add
and
or
and
and
or
and
add
or
and
adc
adc
or
or
and
or
sbb
or
pop
and
or
push
adc
add
or
push
push
push
and
or
add
adc
add
and
add
add
and
adc
or
or
add
and
and
or
add
push
add
pop
and
adc
push
add
or
add
and
add
and
add
add
or
and
or
sbb
add
and
add
sbb
sbb
push
add
adc
pop
and
adc
adc
add
pop
add
push
or
add
and
sbb
or
and
or
and
adc
adc
pop
and
adc
push
or
adc
or
adc
add
add
and
and
add
and
add
add
add
add
or
add
push
adc
or
and
and
or
or
add
or
push
pop
or
push
adc
adc
or
or
and
add
and
and
adc
or
or
or
or
and
add
adc
add
add
and
adc
or
and
add
and
push
or
push
or
add
and
and
add
add
add
add
adc
push
or
and
add
or
and
add
add
add
add
and
add
push
and
add
add
push
and
add
add
pop
and
add
sub
add
push
or
add
add
sub
pop
add
and
adc
add
add
sbb
and
push
or
and
push
adc
push
adc
or
and
push
adc
or
add
push
adc
or
adc
add
add
or
add
adc
add
or
add
push
adc
add
or
and
adc
or
and
add
or
add
and
push
adc
add
add
add
or
add
add
add
push
add
add
or
and
adc
adc
add
add
push
or
add
or
add
add
push
or
add
add
sub
and
adc
add
push
add
and
add
push
add
add
add
or
push
or
add
push
adc
or
add
push
pop
push
and
add
adc
push
or
adc
add
or
or
push
adc
add
pop
and
add
add
sub
and
add
adc
or
and
adc
pop
or
pop
and
pop
or
add
sub
push
and
or
add
or
add
and
adc
adc
adc
or
sub
and
or
pop
and
or
push
or
add
add
mov
adc
adc
adc
add
adc
adc
or
and
and
sub
adc
or
add
and
and
or
or
add
or
sbb
push
adc
or
add
sub
sbb
add
and
pop
or
add
add
or
and
add
add
add
or
or
add
and
adc
adc
or
or
adc
add
push
or
or
or
sbb
adc
adc
add
adc
pop
adc
add
add
adc
add
adc
add
add
add
push
add
push
or
add
and
add
and
add
add
push
add
add
add
push
or
and
add
adc
or
add
adc
or
or
and
or
and
add
sub
push
or
add
and
sub
and
add
sub
and
and
or
and
push
or
add
or
push
or
or
or
or
and
and
sbb
sbb
and
adc
adc
or
add
sub
sbb
sbb
and
adc
or
and
add
push
or
push
adc
push
push
adc
or
and
or
push
adc
or
and
or
and
sub
or
and
add
or
add
adc
adc
or
add
adc
adc
or
adc
add
xor
add
add
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
pop
add
or
pop
add
or
add
adc
add
adc
add
or
cs
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
push
bound
jb
imul
add
sbb
add
add
add
add
push
add
adc
add
adc
add
add
add
add
add
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
or
pop
or
or
add
or
add
or
add
adc
adc
adc
or
add
adc
adc
adc
add
add
jns
add
sbb
add
sbb
add
add
add
add
push
or
sub
add
push
push
and
sbb
add
sbb
push
add
add
adc
xchg
or
pop
or
sbb
or
add
adc
pop
adc
or
add
or
or
push
or
adc
xchg
or
and
add
adc
add
or
add
adc
push
adc
add
add
pop
or
adc
or
add
sub
push
or
sbb
adc
and
adc
sbb
and
sbb
sbb
adc
add
or
or
push
or
add
xor
cmp
add
movs
add
add
add
add
add
push
add
add
push
add
push
add
add
push
push
add
push
sbb
add
cmp
add
cmp
or
adc
or
adc
add
dec
add
add
dec
or
add
or
sbb
or
add
push
push
add
adc
sub
or
xor
add
or
sbb
add
or
sbb
add
sbb
push
sbb
sbb
or
or
sbb
sbb
or
and
add
adc
sbb
push
pop
adc
sbb
add
pop
or
sub
add
sub
push
or
or
adc
push
or
add
or
or
push
or
push
or
or
or
push
or
push
add
add
pop
add
add
add
sbb
pop
push
add
add
add
adc
push
push
add
add
or
or
push
or
pop
adc
add
add
add
or
or
push
or
push
or
pop
add
add
add
push
or
pop
or
or
add
add
push
add
add
pop
add
add
add
add
sub
pop
add
push
and
add
sub
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
cmp
xor
arpl
sub
sub
sub
xor
arpl
bound
add
push
adc
push
adc
add
adc
add
adc
push
adc
add
sbb
add
sbb
add
add
push
adc
and
push
sbb
add
adc
sbb
push
sbb
dec
add
adc
add
xchg
add
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
mov
add
add
add
add
add
sbb
add
sbb
add
push
push
inc
push
repz
mov
xchg
jg
fdivr
out
xlat
add
add
inc
cmp
gs
pop
jb
popa
fs
inc
jo
inc
popa
je
pop
dec
outs
arpl
pop
push
gs
jo
outs
jno
jae
ins
xor
jo
bound
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
lods
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
mov
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
je
add
outs
add
ins
add
popa
add
add
add
jno
push
add
xor
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
outs
add
push
add
xor
add
add
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
nop
add
or
add
and
add
and
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
fild
test
or
pop
adc
adc
adc
sbb
sbb
pop
sbb
pop
pop
adc
adc
sbb
and
sbb
xor
and
cs
pop
xor
xor
sub
or
push
or
sbb
and
sub
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
or
ret
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
adc
add
adc
xor
inc
push
popa
jno
xor
jb
rol
inc
push
(bad)
lock
inc
xchg
mov
adc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
adc
and
xor
adc
push
popa
add
jno
(bad)
fiadd
or
add
add
add
add
add
sar
ficomp
sti
(bad)
jne
scas
jp
fidiv
add
adc
jmp
or
stos
xor
cwde
sbb
pcmpgtb
ds
in
sub
mov
in
mov
push
imul
imul
adc
mov
(bad)
add
push
pop
addr16
std
(bad)
std
xchg
or
jg
icebp
cld
mov
xchg
dec
mov
xor
mov
mov
pop
dec
cli
sub
xchg
jae
sbb
cdq
pop
push
test
jnp
jno
sti
outs
mov
aas
shl
push
mov
mov
push
(bad)
fisubr
leave
iret
push
jae
pushf
xchg
adc
pop
push
inc
xor
mov
inc
push
push
fbld
enter
aam
mov
pop
fadd
sahf
jmp
adc
and
les
cmp
(bad)
and
mov
push
or
out
fdivr
xor
mov
xlat
adc
inc
sbb
mov
ficom
jb
xor
xor
test
lods
xchg
push
loop
jb
xchg
mov
repnz
push
cmps
fwait
mov
mov
mov
(bad)
adc
sti
pop
cmp
jmp
mov
jbe
test
enter
and
cmp
and
mov
pop
mov
mov
xor
inc
mov
jle
loope
cs
jmp
mov
test
loopne
mov
out
ds
fwait
test
addr16
aad
leave
jno
mov
test
jno
in
test
jmp
jl
bound
pusha
hlt
(bad)
fidivr
loope
stos
gs
dec
push
mov
out
inc
ret
push
pop
adc
fdiv
loop
jbe
test
mov
sub
pop
jl
adc
sub
mov
cmps
add
cmp
mov
inc
shl
mov
xchg
pop
pop
inc
add
push
retf
cmp
adc
inc
xchg
nop
loope
div
(bad)
sbb
jge
dec
stos
les
push
mov
jnp
pop
dec
add
es
in
mov
inc
or
js
ret
sub
test
inc
pop
push
xor
adc
call
pop
stc
pop
dec
in
add
stos
push
call
(bad)
xor
jge
sub
sub
ss
or
jo
push
mov
inc
ror
dec
cs
pop
sbb
and
lods
scas
mov
sub
pop
adc
jb
aam
mov
fcomp
imul
sub
ins
test
sbb
adc
inc
rcl
ds
fidivr
mov
push
mov
push
stos
pop
add
ficomp
stos
xchg
sub
iret
or
cmps
mov
iret
jmp
lods
adc
sub
sub
sub
jl
jp
push
jne
rcr
jbe
into
inc
cmp
jmp
and
imul
out
adc
push
xchg
push
push
or
mov
jo
xchg
cmp
iret
sub
(bad)
jo
jmp
inc
loopne
leave
sbb
call
popa
clc
mov
inc
in
xchg
xlat
pop
dec
repnz
jb
adc
sti
xor
push
iret
imul
push
mov
xor
test
fxch
leave
cmps
mov
xor
or
mov
xchg
adc
add
fs
jb
add
dec
adc
pop
push
adc
xor
loop
push
fimul
loop
or
std
movs
dec
ret
jnp
push
fs
mov
ret
lea
popa
fcomp
add
repnz
call
js
xor
mov
adc
test
push
pop
mov
dec
lods
and
xchg
add
add
pop
rcl
fnstenv
xchg
mov
(bad)
call
sub
cwde
dec
pop
stos
ins
fisttp
pop
xchg
add
adc
gs
call
out
push
mov
sbb
cld
aas
push
sub
scas
cmc
movs
shl
pop
aaa
sub
into
ror
mov
xchg
xchg
loope
fiadd
and
stos
arpl
and
pop
push
and
dec
cs
test
jmp
mov
push
inc
jb
mov
xchg
sub
xchg
aad
ja
mov
jne
push
jg
and
mov
ret
shr
(bad)
out
and
sub
inc
sub
mov
sub
les
mov
jl
fiadd
stc
xor
dec
xor
std
or
and
call
repnz
sub
mov
mov
repnz
add
push
loopne
inc
repnz
pop
jbe
loop
mov
(bad)
icebp
add
stos
add
add
cdq
aas
xor
xchg
mov
add
not
les
cmc
pop
cmp
ret
lock
add
outs
aad
push
mov
cli
movs
adc
mov
movs
fsubr
add
push
add
test
sbb
dec
ins
or
adc
dec
inc
enter
add
push
leave
push
jg
(bad)
jge
adc
je
xchg
push
imul
fsubr
cmp
(bad)
pusha
add
fs
add
jl
sub
inc
jne
aaa
call
adc
cmps
mov
mov
stos
pushf
inc
or
or
add
nop
mov
outs
mov
mov
and
data16
adc
dec
inc
mov
popa
jbe
pop
sub
push
out
or
in
sbb
xchg
inc
daa
pop
cmp
bound
inc
pop
jno
sar
test
call
lock
in
jbe
push
mov
imul
cmp
xchg
push
inc
dec
call
jb
outs
mov
in
jecxz
inc
adc
nop
inc
pop
ja
or
pop
dec
and
aam
hlt
mov
fnstenv
ficomp
(bad)
adc
xor
cmps
inc
pop
jnp
mov
pop
fdivr
pop
and
adc
or
pop
add
popa
cmps
add
xor
push
gs
xchg
mov
in
adc
or
repnz
pop
fisub
scas
outs
retf
shl
pop
retf
jle
fcomp
popa
iret
cmp
in
lea
mov
inc
xchg
jo
jg
js
loop
pop
test
iret
dec
fnstcw
mov
nop
pop
retf
add
and
cmp
in
push
mul
out
lods
(bad)
mov
xchg
push
jb
pushf
loop
or
xchg
mov
dec
ja
mov
jge
pop
bound
xor
add
mov
lahf
cwde
test
push
out
ret
in
xor
inc
pop
div
inc
mov
test
out
pop
bound
sbb
hlt
sbb
leave
push
(bad)
imul
clc
loop
test
(bad)
loope
aaa
mov
fwait
sar
js
mov
pushf
mov
sub
adc
sub
mov
or
repz
repnz
inc
pop
or
pusha
adc
mov
pop
mov
(bad)
cmove
gs
dec
fisttp
aaa
jnp
cmp
mov
dec
inc
inc
mov
jmp
xchg
xchg
cmp
or
gs
and
sbb
pop
jbe
cmp
scas
lods
add
inc
leave
pop
cs
aad
sub
adc
icebp
cli
sub
push
pop
outs
xchg
mov
inc
push
mov
sbb
imul
xor
test
cmp
stos
popf
pop
xlat
jmp
sbb
or
ins
mov
and
scas
pop
adc
fld
xor
repnz
mov
cli
test
inc
sahf
inc
js
cmp
test
dec
xor
(bad)
cmc
ret
pop
xor
idiv
or
mov
out
push
arpl
xor
push
mov
ret
in
je
fnstenv
idiv
cwde
movs
or
mov
jbe
cwde
dec
cmp
mov
mov
in
inc
and
sub
mov
or
sub
cmp
and
add
cmp
fimul
test
adc
mov
add
dec
leave
ins
je
imul
cmp
cmp
push
mov
loop
push
int3
test
xchg
ror
retf
jp
push
out
push
sbb
outs
in
daa
sbb
push
loopne
adc
mov
stos
adc
cmp
jmp
lods
dec
dec
test
scas
dec
adc
xor
adc
mov
iret
test
call
sub
stos
xchg
push
ret
xchg
adc
jmp
inc
mov
arpl
fst
mov
push
enter
inc
cmps
xor
cmp
ret
inc
xchg
push
pop
movs
out
imul
pusha
pop
xchg
sbb
xor
dec
les
adc
jmp
lods
jbe
or
daa
adc
pop
xchg
pushf
sub
fimul
(bad)
hlt
push
retf
(bad)
jle
leave
pop
lods
jge
hlt
outs
mov
(bad)
inc
adc
pop
pop
fst
jge
(bad)
jmp
xor
mov
xchg
movs
mov
mov
ins
stos
fdiv
jmp
pop
out
les
ror
mov
xchg
lds
pop
nop
mov
mov
mov
cmp
enter
frstor
icebp
fcomp
imul
sub
(bad)
sbb
or
xchg
imul
inc
xchg
dec
push
add
push
es
pusha
dec
mov
or
sbb
imul
sbb
jmp
into
jle
mov
(bad)
sar
ror
mov
inc
cmp
pop
push
inc
cmps
dec
and
mov
cdq
fwait
or
pop
fwait
mov
test
out
dec
mov
sub
mov
out
popa
push
sbb
nop
sbb
xchg
aad
xor
mov
cmp
adc
rcl
pusha
sbb
mov
pop
fdivrp
mov
aad
fst
out
mov
cmps
xchg
jne
and
or
mov
push
stos
cmp
shl
mov
(bad)
out
jmp
(bad)
mov
add
nop
daa
dec
mov
ins
xor
int
dec
punpckhbw
mov
cmp
repnz
push
mov
push
stos
inc
ins
pop
bound
mov
fdiv
push
mov
push
pop
jne
push
xor
sub
jmp
and
inc
push
xchg
adc
dec
lods
mov
mov
cmp
cmp
test
dec
xchg
cmp
mov
ja
pop
cmp
in
clc
adc
not
fisub
aad
mov
lea
push
(bad)
loope
fld
xchg
mov
(bad)
pop
xor
loope
jmp
icebp
movs
inc
cmp
or
and
mov
inc
mov
xor
ins
push
scas
add
out
es
mov
out
xchg
adc
popf
(bad)
stos
add
mov
rol
push
jbe
mov
rcl
push
mov
(bad)
sbb
sbb
cmp
cwde
(bad)
mov
aaa
jno
jae
outs
mov
pop
cmp
mov
inc
mov
dec
mov
mov
xchg
stos
push
sahf
mul
out
mov
iret
mov
inc
fmul
movs
mov
xor
inc
mov
div
mov
out
push
add
inc
inc
jae
pushf
aad
imul
pop
(bad)
xor
in
fimul
std
jmp
dec
ja
aad
pop
aas
adc
sub
mov
and
sahf
pop
pop
call
push
shr
mov
push
shr
and
inc
cs
int3
and
cdq
jmp
test
(bad)
out
sbb
lods
sub
dec
repnz
mov
inc
cwde
mov
or
inc
jb
xor
inc
inc
dec
push
pushf
jnp
sub
ret
jle
and
stos
inc
and
xor
and
jae
mov
or
shr
test
mov
add
inc
retf
inc
and
not
loope
shl
pop
sub
adc
add
xchg
add
xchg
sbb
int
retf
pop
jns
stos
xor
(bad)
icebp
add
ret
inc
cmp
mov
inc
adc
lahf
mov
dec
ss
sub
lahf
inc
fsubr
in
push
rol
into
retf
inc
ret
stos
sub
cli
adc
dec
xchg
pop
arpl
or
xor
mov
stos
add
mov
jae
mov
sub
mov
inc
xchg
dec
add
inc
sahf
aad
push
imul
cld
fdiv
inc
fst
pop
out
push
inc
xchg
out
dec
sbb
pop
add
aas
xor
inc
fisubr
lds
daa
mov
enter
daa
xor
inc
and
(bad)
xor
adc
pushf
push
outs
rcl
inc
mov
mov
jae
or
push
das
dec
sub
push
inc
sbb
mov
jb
pop
dec
cmps
ja
mov
dec
je
ss
xor
push
add
push
push
dec
fsubr
mov
jge
mov
cmp
popa
jo
xor
leave
pop
out
jnp
xor
dec
adc
pop
dec
pop
add
mov
jbe
mov
stc
and
popf
mov
xor
imul
cdq
or
int3
pop
or
dec
jecxz
xchg
adc
push
push
push
adc
retf
sbb
lock
shl
pop
nop
pop
inc
call
nop
daa
aaa
aaa
ins
push
cli
mov
in
retf
and
cmp
repnz
mov
lods
sbb
xchg
xchg
in
call
lock
test
dec
pushf
out
dec
sti
movs
dec
neg
clc
sahf
pop
mul
nop
pop
jbe
(bad)
push
inc
cmp
and
sbb
mov
fld
sub
scas
dec
mov
or
test
loop
sbb
fidiv
mov
add
xlat
mov
das
xor
mov
popa
rol
les
xor
in
outs
sub
add
inc
scas
div
pop
push
in
add
xor
push
pop
test
mov
and
ret
in
xor
mov
sub
dec
sub
and
push
aam
into
inc
mov
or
mov
lds
dec
cmp
cmp
mov
test
pop
dec
xchg
mov
leave
ja
inc
fsubr
arpl
xchg
cli
push
dec
xor
add
dec
xchg
inc
cmp
or
dec
cmp
loop
fs
loope
bound
hlt
aad
mov
clc
and
pop
scas
ins
mov
mov
add
inc
cmp
leave
mov
mov
or
pop
mov
int3
xchg
jle
xchg
dec
imul
out
pop
fidivr
data16
pop
aam
mov
push
mov
mov
lahf
push
push
and
push
and
push
adc
sar
xchg
and
or
in
add
pop
out
dec
cmp
scas
pop
sbb
rol
push
repnz
mov
ficom
in
out
jbe
dec
mov
mov
add
int3
(bad)
mov
sub
adc
shl
int3
add
xchg
mov
js
je
sub
stos
mov
test
mov
add
mov
xor
cmp
mov
xchg
mov
cdq
lock
push
push
mov
pop
ins
or
push
sub
cmps
aaa
test
in
retf
cdq
and
sbb
adc
(bad)
jge
stos
fdiv
inc
pop
fnstenv
fdivr
sar
ins
dec
inc
clc
pop
ins
(bad)
push
aam
jmp
lock
mov
pop
adc
adc
pop
fisub
shld
xlat
xor
sbb
sub
pop
sti
out
shl
push
mov
mov
mov
mov
retf
mov
add
and
push
sti
cmc
mov
jno
mov
adc
cmp
jg
test
stos
shr
pushf
fistp
es
inc
sti
aas
mov
dec
sahf
shl
sti
sub
mov
lea
or
adc
inc
fs
lods
inc
ss
mov
mov
push
push
add
sbb
mov
jmp
ins
jp
test
mov
adc
fs
bound
sti
mov
mov
in
mov
xchg
ret
sub
push
or
scas
lods
popf
scas
inc
dec
popa
sub
push
mov
dec
test
and
jns
mov
add
rcr
dec
stos
jg
fwait
inc
sub
mov
and
xor
icebp
sub
mov
out
cmp
jae
xchg
inc
mov
mov
dec
inc
ficomp
imul
and
push
add
mov
xchg
adc
push
adc
cdq
outs
imul
inc
xchg
xchg
push
mov
jne
sbb
xor
or
inc
push
mov
jmp
je
aaa
sub
mov
stos
inc
ret
ja
icebp
or
sub
pop
scas
add
sahf
jmp
adc
xor
mov
xchg
add
jns
popf
pop
push
scas
xor
ret
pop
xchg
(bad)
outs
sub
stc
cs
ins
cmps
in
jbe
popa
jns
inc
add
mov
ins
sar
mov
xchg
add
xlat
jb
shr
mov
je
adc
sub
imul
inc
push
shl
out
call
dec
ins
cmp
sbb
retf
enter
lds
das
or
and
dec
inc
xor
xlat
in
sahf
mov
mov
imul
loope
mov
cmp
xchg
loopne
xchg
mov
aas
retf
mov
xchg
push
lea
aad
inc
cs
movs
ds
mov
mov
xchg
xor
inc
xchg
or
pop
pop
fild
adc
jbe
add
adc
add
push
and
lahf
add
mov
mov
imul
add
mov
cmp
out
ins
mov
movs
push
fidiv
hlt
and
xor
push
jmp
pop
out
int3
cmp
adc
or
xor
xor
popf
mov
pusha
lods
lods
mov
ss
push
cmp
or
inc
out
call
jecxz
sub
mov
add
inc
xchg
sub
pop
push
pusha
add
shl
jecxz
jo
fisubr
or
lods
loope
jmp
fdiv
call
or
xor
or
test
ja
mov
jp
scas
or
fcomp
mov
sub
adc
dec
sub
pop
sbb
div
push
imul
ins
mov
dec
sbb
add
loop
push
pop
scas
daa
pop
mov
pushf
neg
es
cmp
pop
and
inc
push
push
popa
sub
jecxz
jp
test
mov
mov
xchg
pop
pop
and
sti
jno
mov
out
jl
jb
mov
adc
cwde
mov
popf
pop
fwait
mov
and
cmp
add
inc
aam
rol
xchg
pop
out
fimul
or
loope
jnp
jae
dec
push
mov
add
call
cmps
adc
dec
pop
mov
push
mov
jnp
int
(bad)
call
sbb
fimul
dec
adc
das
sbb
retf
dec
loope
cmp
xor
sub
mov
ror
push
push
fld
cmp
mov
pop
dec
fwait
cmp
push
std
push
jo
mov
jo
or
sbb
std
pushf
mov
call
pop
popa
mov
jne
lods
and
mov
fs
sbb
outs
cmp
outs
fmulp
pop
fimul
push
popa
jp
adc
repnz
adc
mov
(bad)
fscale
lds
addr16
inc
scas
xlat
or
test
je
imul
shl
push
pop
popf
push
out
add
popa
xor
ror
loop
popf
mov
sub
stos
add
das
bound
xor
sbb
or
movs
ins
xor
test
enter
and
inc
xlat
or
jl
cmps
sub
dec
adc
cs
fisubr
shr
fdiv
mov
cmp
push
retf
inc
mov
stc
in
jmp
enter
(bad)
push
(bad)
enter
(bad)
mov
xchg
jnp
fwait
test
and
test
in
fwait
arpl
cmps
sub
(bad)
xor
movnti
stos
bound
cmp
fst
jno
bound
xchg
cmps
into
pop
(bad)
cli
jno
std
pop
rcl
or
add
inc
push
mov
jae
and
xor
(bad)
push
add
cwde
and
daa
jle
clc
stos
in
aaa
shl
jmp
mov
mov
shl
inc
and
xor
fwait
cmp
stos
push
mov
mov
xchg
mov
mov
jnp
push
mov
inc
(bad)
(bad)
out
iret
call
pop
out
fiadd
pop
jo
pop
mov
cwde
pop
scas
or
jns
push
mov
adc
mov
jle
jne
dec
dec
je
adc
fstp
dec
push
test
ins
arpl
rol
imul
sahf
pop
aas
data16
rcr
cld
mov
daa
(bad)
enter
jecxz
pop
adc
xor
(bad)
dec
aad
loop
leave
jge
jbe
sahf
pop
hlt
(bad)
je
inc
(bad)
test
dec
mov
jle
(bad)
ret
ins
hlt
inc
in
sub
call
popf
xchg
out
pop
dec
mov
pop
lea
jb
mov
cmp
loop
test
jmp
and
mov
xchg
fst
fiadd
fcmovnb
or
mov
ins
std
stc
addr16
lds
ja
mov
test
sbb
arpl
cmp
fadd
or
ret
lahf
inc
push
icebp
lahf
push
cmp
mov
push
aad
pop
jle
ret
inc
(bad)
lahf
xchg
mov
(bad)
(bad)
sub
pop
jnp
movs
xor
jo
outs
retf
daa
push
xchg
je
pop
pop
or
mov
sbb
(bad)
and
and
push
addr16
cmps
and
call
or
mov
sbb
sbb
inc
mov
inc
popa
pop
into
call
hlt
sti
popa
mov
inc
or
cs
out
inc
sub
push
lds
lods
and
jbe
int
lahf
outs
pop
fwait
cmp
or
or
iret
xlat
cmps
(bad)
fld
shr
xor
shl
bnd
stos
jne
fmul
ja
cmp
pop
push
mov
pop
inc
jnp
xchg
fsub
(bad)
jmp
arpl
jmp
push
inc
sub
fwait
jbe
jmp
ret
arpl
xor
jge
mov
mov
pop
cmp
pop
hlt
push
dec
leave
pop
out
adc
cdq
push
push
scas
push
call
sbb
push
inc
push
lock
adc
outs
out
mov
std
(bad)
adc
nop
out
icebp
pop
loopne
sbb
and
(bad)
lock
dec
adc
mov
xchg
mov
sub
test
push
mov
and
xor
dec
mov
adc
test
inc
jg
imul
cdq
js
(bad)
aas
sar
icebp
cli
sub
test
mov
icebp
add
jnp
jge
push
jmp
cmc
retf
push
and
ins
dec
lds
xchg
adc
lock
mov
fs
cmc
(bad)
out
inc
xor
stos
jmp
loope
mov
sub
mov
cmc
push
mov
js
mov
cld
dec
aad
push
mov
xchg
addr16
dec
jp
push
sub
es
call
mov
das
push
sub
outs
fs
(bad)
fnstcw
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
