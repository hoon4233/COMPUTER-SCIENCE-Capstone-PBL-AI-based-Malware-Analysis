push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
add
in
push
scas
out
jnp
cwde
in
gs
repnz
mov
rep
jne
in
pop
ins
cwde
out
jnp
mov
or
pop
(bad)
push
pop
sbb
add
dec
imul
je
mov
jmp
je
jecxz
push
push
in
ins
gs
test
add
sbb
mov
jecxz
dec
in
push
out
cli
pop
js
sbb
gs
ja
leave
in
jge
fucomp
jl
fld
sbb
mov
in
jl
cwde
out
popa
xchg
in
gs
sbb
jg
jge
nop
out
imul
sbb
imul
add
gs
gs
sbb
jb
cmc
jge
and
sbb
add
push
popa
and
je
mov
sbb
push
fldz
push
inc
mov
sbb
ins
loope
pop
add
sbb
mov
out
jnp
test
sbb
mov
sbb
je
in
jl
push
out
popa
pop
out
add
ins
dec
imul
ins
pop
ret
jno
popa
retf
jns
pop
aam
inc
cs
dec
and
stc
sbb
mov
sbb
add
push
add
(bad)
add
sbb
pop
jg
add
sbb
lea
add
sbb
xchg
test
add
sbb
and
jg
add
jg
add
jg
add
xchg
add
xchg
mov
int
sbb
dec
push
xlat
out
jb
jmp
jbe
cdq
sahf
jp
(bad)
outs
mov
jbe
pop
(bad)
dec
and
mov
add
jle
jge
sbb
cs
sbb
arpl
aam
mov
lds
adc
inc
sbb
cs
sbb
cs
xlat
sub
call
cs
cmp
cs
add
arpl
inc
cs
gs
cmp
aad
bound
shr
bound
jnp
arpl
sbb
movs
test
add
test
add
jle
add
adc
sbb
test
add
test
add
adc
push
pop
sbb
test
add
add
add
sbb
test
add
sbb
and
test
adc
jg
add
test
add
test
add
aam
add
js
(bad)
cli
mov
add
test
in
or
in
sbb
aad
or
aad
sbb
movs
test
add
test
add
cwde
push
add
sbb
xchg
and
add
sbb
test
add
sbb
push
test
add
sbb
gs
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
jmp
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
shl
jge
imul
sbb
xchg
pop
sbb
xchg
ja
jmp
sbb
sbb
push
sbb
jne
sbb
in
jl
leave
jecxz
add
sbb
push
sbb
and
push
sbb
adc
sbb
and
jge
inc
repz
jns
mov
sbb
popf
mov
push
add
mov
add
test
add
sbb
in
sbb
aad
sbb
adc
repz
sbb
int
sbb
xchg
and
add
mov
add
add
add
sbb
and
lock
xor
sbb
(bad)
fcomp
add
push
add
sbb
push
or
add
sbb
adc
jge
inc
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
push
sbb
add
sbb
add
add
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
add
add
jg
add
jg
add
jg
add
jae
rol
sbb
xor
sbb
dec
jnp
sar
push
fst
cld
push
or
je
outs
ins
or
enter
jg
(bad)
clc
jbe
inc
and
stc
or
fdiv
or
jg
pop
gs
fisub
aam
sub
push
shl
pop
mov
test
xchg
(bad)
ins
push
pop
add
cmp
add
das
test
cli
das
lea
push
dec
or
jne
or
je
repz
test
stc
pop
push
rcr
xchg
inc
pop
or
je
into
lock
jl
sbb
push
mov
push
jle
cmp
hlt
pop
add
dec
mov
retf
sahf
dec
fild
xchg
add
jle
inc
fst
out
push
inc
lock
jge
mov
ret
inc
ret
jb
mov
jge
ret
or
hlt
push
push
jne
cmp
imul
lock
add
add
clc
sbb
lea
out
into
out
call
add
out
cli
test
add
mov
add
fdiv
data16
jns
add
ins
xchg
push
in
add
xchg
dec
sbb
lea
aad
push
outs
cmp
add
add
mov
test
sub
xchg
iret
pop
cmp
mov
sbb
pop
jo
adc
push
ins
out
int3
push
data16
jo
mov
dec
mov
ins
push
mov
jo
jne
test
sbb
sbb
sub
xchg
dec
push
in
faddp
fwait
jge
add
add
add
ins
out
scas
push
dec
cmp
mov
std
inc
cmp
adc
cmp
inc
(bad)
sbb
in
sub
ret
pusha
retf
dec
ins
imul
ds
stc
popf
cmc
sbb
fcom
sub
test
lea
xor
aaa
aam
dec
loope
adc
inc
dec
mov
dec
imul
pop
add
inc
mov
add
sbb
push
adc
js
inc
sbb
push
jp
sar
or
leavew
xchg
in
stos
jmp
mov
mov
add
pop
outs
adc
xlat
lock
sbb
inc
or
add
add
test
bound
adc
enter
repz
or
dec
adc
xor
jmp
xchg
inc
and
outs
inc
out
fsub
rcr
add
enter
ds
add
jmp
or
icebp
adc
bound
out
jmp
xchg
jge
dec
aas
xor
enter
add
mov
out
repz
ins
inc
jmp
in
push
inc
imul
pop
out
loop
fidivr
sbb
push
xchg
dec
aam
sahf
add
mov
push
add
call
inc
loope
lock
xchg
sbb
add
rcr
fsubrp
adc
mov
adc
pop
and
adc
jmp
sub
xchg
inc
and
xchg
inc
add
sbb
add
lock
out
rcl
sbb
ret
jge
into
inc
pop
out
push
sbb
enter
or
sbb
fstp
(bad)
jp
lock
add
add
sbb
dec
jmp
popf
leave
pop
outs
sub
lock
push
lods
sar
add
sub
jmp
call
pop
dec
add
xor
ret
sbb
mov
rcl
(bad)
call
sbb
call
mov
adc
sub
cmp
fld
call
jg
ins
or
add
cmp
fld
jmp
jns
jmp
push
retf
cmp
test
jg
ins
jns
adc
cdq
pop
sbb
cmp
hlt
add
jmp
fsub
and
sbb
cwde
ins
call
int
call
push
jmp
ret
dec
mov
rcl
inc
mov
inc
mov
(bad)
mov
jmp
call
pop
aas
inc
pop
daa
sbb
dec
dec
fwait
jge
jle
je
jmp
add
repz
push
and
add
add
xchg
push
push
xchg
cmp
ins
add
test
add
ds
pop
cmps
sbb
jne
push
ins
adc
adc
cwde
ins
dec
mov
ins
call
push
dec
push
sahf
fst
mov
lock
test
mov
rcl
in
pop
or
fst
retf
mov
xchg
push
fld
loope
xchg
imul
jb
call
sbb
cmps
mov
xlat
push
xchg
push
dec
call
faddp
or
sbb
les
dec
sbb
gs
inc
ret
dec
mov
out
or
ror
and
mov
dec
pop
and
pop
or
je
jne
in
sbb
(bad)
cmp
iret
pop
sbb
mov
pop
out
shl
shr
dec
push
call
pop
repz
jg
dec
call
sbb
ins
aaa
fild
adc
xchg
jg
inc
sbb
ins
std
loopne
push
addr16
inc
pop
inc
sbb
popa
rcr
cli
sub
dec
call
(bad)
sub
push
sahf
and
sbb
out
pop
sar
add
cmps
adc
jae
xchg
stc
sbb
jmp
pop
inc
in
ficomp
aas
sbb
sbb
icebp
dec
clc
sbb
dec
push
dec
mov
add
add
aam
test
call
jmp
adc
imul
ficomp
cmp
hlt
push
rcl
adc
push
sbb
leave
sbb
cmps
out
into
dec
xchg
dec
dec
add
or
and
or
and
call
fsub
sbb
ror
fwait
clc
adc
repz
jmp
inc
(bad)
hlt
mov
imul
sbb
mov
rcr
adc
push
xchg
jge
jmp
jecxz
outs
add
mov
jmp
pop
stos
jb
dec
ins
in
in
mov
hlt
mov
and
out
jno
sub
(bad)
sbb
popa
adc
std
retf
out
add
xor
push
in
or
retf
sbb
shl
cmp
mov
inc
push
mov
ror
ret
pop
f2xm1
mov
imul
adc
pop
add
add
add
xchg
inc
cdq
pop
ins
or
jmp
xchg
sbb
add
jle
iret
mov
pop
ins
or
sub
sbb
dec
aas
cmp
and
push
dec
push
dec
adc
adc
arpl
add
(bad)
or
mov
add
nop
push
push
fcom
push
mov
outs
punpckldq
adc
out
nop
dec
call
es
or
cmp
xchg
mov
jmp
xchg
into
jmp
call
inc
mov
xchg
in
sub
jmp
add
gs
data16
ins
out
dec
jmp
(bad)
push
std
or
inc
dec
xor
sub
pop
add
adc
je
inc
jmp
jmp
xchg
into
cmp
dec
adc
inc
rcl
push
outs
cs
jg
xor
mov
fimul
movs
mov
in
add
or
push
pop
ins
or
movs
cmp
movs
jmp
push
and
pop
(bad)
mov
in
out
add
fisub
push
out
cmps
sbb
data16
add
bound
add
cmp
add
repnz
bnd
call
fild
adc
js
inc
sbb
fstp
jne
xchg
loopne
stos
repnz
inc
(bad)
out
dec
test
push
enter
add
xor
jmp
pushf
shr
xchg
dec
lods
sti
loopne
xchg
jns
inc
cdq
push
sbb
mov
aad
jmp
cli
fist
mov
push
outs
inc
pop
xchg
(bad)
and
inc
ret
dec
mov
repnz
or
lods
sbb
data16
test
loope
scas
out
sbb
pop
inc
pop
push
jp
push
sahf
push
dec
mov
(bad)
(bad)
add
pop
out
enter
dec
cmp
fstp
cmp
test
repz
(bad)
leave
adc
cdq
jns
add
add
adc
mov
push
pop
add
enter
mov
out
push
enter
lods
xchg
inc
xor
pop
sub
dec
inc
ret
dec
out
sbb
fwait
mov
dec
pop
arpl
pop
push
cdq
xchg
in
jg
xchg
into
pop
int3
add
adc
fs
push
mov
ins
or
pmaxub
mov
push
pop
push
dec
cmp
(bad)
(bad)
stos
pop
push
add
test
mov
call
add
add
mov
lock
(bad)
out
fisttp
movs
jne
mov
dec
pop
sbb
fucom
call
push
faddp
sub
faddp
sbb
gs
or
(bad)
call
mov
add
test
adc
adc
cs
mul
inc
pop
push
mov
add
add
push
mov
inc
loope
push
add
jmp
shr
cmp
shl
xchg
fmul
adc
mov
mov
xchg
in
push
addr16
icebp
pop
dec
push
push
xor
inc
cdq
call
fiadd
add
lock
add
data16
add
add
adc
mov
test
or
and
or
lea
sbb
mov
jl
pop
jmp
sbb
jmp
cmps
add
fldenv
add
int
out
bound
out
mov
mov
lock
ja
sbb
jb
out
push
rol
fmulp
cmp
push
adc
loope
cmp
jnp
sbb
inc
pushf
inc
mov
fist
xor
jle
mov
call
xchg
mov
xchg
jbe
imul
pop
xchg
push
retf
or
mov
adc
sbb
retf
mov
push
not
inc
jmp
out
sub
rcl
add
es
or
cwde
or
(bad)
jg
rcr
xchg
inc
xchg
imul
mov
pop
pop
or
enter
push
daa
inc
cmp
retf
stos
(bad)
cmc
add
add
ins
or
les
call
sar
add
test
add
push
daa
inc
retf
add
jne
stos
(bad)
cmp
push
inc
ret
dec
mov
fwait
gs
test
leave
push
inc
fild
test
add
ds
mov
push
xchg
mov
add
int3
aas
adc
aas
js
(bad)
(bad)
leave
sbb
mov
sbb
out
sbb
add
(bad)
hlt
jmp
or
rol
adc
fwait
cmps
sbb
cdq
inc
ins
add
sbb
ins
in
sahf
jbe
jle
sub
hlt
mov
pop
nop
inc
cmp
inc
xchg
jne
pop
pop
in
retf
clc
mov
test
add
add
test
ins
xchg
inc
popf
add
or
outs
aas
add
cmp
or
mov
call
xor
std
pop
ins
cld
shl
out
mov
mov
add
and
push
or
std
jbe
inc
imul
loopne
xchg
jge
add
jne
add
add
pushaw
and
sub
push
xchg
add
addr16
in
xchg
inc
std
data16
aam
fiadd
in
sbb
xchg
bound
ret
aad
shr
addr16
jle
push
sbb
add
jbe
add
rcr
cmp
sbb
and
sbb
fwait
shl
out
mov
add
add
inc
ins
xchg
fwait
rcr
(bad)
fadd
or
and
pop
mov
mov
sahf
(bad)
sbb
int3
test
jne
or
sbb
sbb
or
jmp
mul
fwait
test
mov
or
push
mov
xchg
sar
mov
add
pop
nop
inc
lods
push
nop
jnp
test
jnp
test
inc
call
add
sbb
ins
xor
fs
push
std
mov
cdq
jge
dec
stos
test
or
sbb
add
lock
out
sbb
std
mov
add
mov
sti
inc
in
aas
ss
xchg
jne
out
call
lods
fcomp
je
or
jmp
ins
fmul
movs
ins
fsub
movs
test
(bad)
push
xchg
sbb
push
test
dec
(bad)
std
jge
gs
sbb
xchg
sbb
in
out
push
stc
and
add
dec
add
dec
push
jmp
(bad)
lds
pop
and
loope
add
mov
and
imul
in
xchg
inc
fisttp
pop
and
add
add
mov
adc
mov
inc
mov
push
or
lods
cmp
add
add
nop
out
aad
pop
and
sbb
gs
and
loope
inc
jns
out
popa
add
or
and
jge
add
jmp
lea
test
jle
jae
das
out
pop
add
adc
mov
adc
sar
or
add
add
xchg
xchg
inc
(bad)
pop
in
xchg
or
sbb
out
jge
dec
leave
push
nop
inc
mov
cs
(bad)
jge
je
shl
xlat
cs
das
jge
je
stos
lock
cs
dec
jbe
call
(bad)
cmp
pusha
fmul
inc
pop
sbb
add
mov
call
sahf
mov
cmp
call
and
pop
cmp
aas
sbb
enter
inc
pop
dec
push
stos
cs
adc
adc
popf
sbb
inc
in
pop
lea
xchg
repz
hlt
call
sbb
push
push
retf
sub
rcl
pushf
shr
xchg
retf
mov
or
into
jge
dec
or
mov
or
scas
enter
or
mov
add
adc
jge
sub
sbb
enter
dec
aam
add
xchg
sub
push
inc
ins
add
ins
repz
add
mov
nop
dec
test
jno
add
sbb
sbb
push
inc
pop
cmps
movs
xchg
in
xor
dec
push
out
xor
mov
adc
scas
inc
jb
cmp
out
stc
pushf
xchg
in
gs
adc
outs
adc
adc
adc
cmc
or
out
inc
jb
cmp
out
stc
pop
dec
and
lds
(bad)
jmp
xchg
dec
ror
fucomi
dec
mov
outs
adc
adc
aad
pop
adc
fadd
cld
jmp
adc
push
aam
jne
jb
jmp
or
outs
inc
jb
in
cdq
out
sti
mov
sbb
movs
adc
pushf
dec
sbb
ficom
dec
mov
and
jg
call
outs
popf
shr
out
add
jg
ja
ss
sbb
inc
mov
dec
xor
mov
cdq
lods
ss
sub
push
or
mov
and
leave
fs
out
int
sbb
push
xchg
dec
xchg
das
outs
adc
add
add
aad
adc
inc
inc
pop
fdivr
dec
mov
enter
in
test
mov
pop
cmp
sub
rol
sbb
mov
hlt
add
dec
push
jmp
leave
call
adc
shl
mul
shr
mov
add
sbb
movs
out
stc
inc
adc
adc
mov
fcmovne
jge
mov
dec
repnz
stos
in
call
add
out
fnstenv
ins
or
jl
add
inc
leave
cmps
mov
mov
xlat
jne
sub
xchg
push
call
test
add
add
add
push
adc
test
sbb
add
pop
inc
xchg
push
test
ins
add
jp
add
adc
or
inc
fld
fist
push
and
fadd
sbb
sbb
sbb
(bad)
mov
inc
inc
push
push
xchg
add
add
stos
int3
push
add
dec
xchg
dec
imul
inc
pop
int
add
pushf
pop
je
int3
pop
add
cmp
into
mov
pop
push
std
int3
smsw
ficom
xchg
fimul
add
test
add
xor
or
or
jne
je
jmp
int3
pop
adc
add
add
inc
fprem
out
data16
xor
xchg
sbb
cmc
mov
mov
xchg
cmp
test
call
push
jns
push
inc
rcr
xor
jns
add
or
push
out
xor
pushf
pop
sbb
or
push
pop
push
add
retf
push
test
adc
fwait
push
sbb
scas
xchg
add
add
add
sub
sahf
(bad)
sbb
int
imul
adc
imul
sti
test
pop
es
jb
out
test
out
adc
jb
jg
xchg
test
bound
add
retf
or
in
rcr
xor
faddp
adc
out
test
sar
add
dec
out
into
cs
push
(bad)
mov
add
dec
popf
xchg
adc
dec
dec
push
mov
add
add
sub
enter
fld
xchg
push
in
int3
dec
clc
data16
jb
retf
xlat
retf
add
xlat
lea
enter
mov
mov
push
mov
out
push
dec
test
dec
stos
out
xor
enter
rcl
fwait
sub
(bad)
(bad)
jle
leave
clc
(bad)
or
sub
fwait
sbb
inc
add
sub
sub
mov
fisubr
fs
jmp
add
add
add
inc
fwait
inc
leave
daa
dec
out
pop
popa
dec
mov
add
add
loopne
or
push
or
mov
int
add
cmp
jb
leave
push
jmp
leave
fimul
popf
dec
scas
sbb
ja
jne
leave
push
or
sub
popf
shr
call
add
fiadd
and
jmp
adc
imul
into
inc
leave
clc
inc
inc
pop
dec
inc
sbb
enter
ror
push
stos
xchg
outs
popa
outs
mov
dec
cmp
out
aam
xchg
pop
mov
cmp
jb
retf
xchg
retf
cdq
xchg
or
(bad)
xor
in
push
sub
out
xor
add
jne
add
or
adc
push
inc
ins
adc
cmp
jb
int3
or
addr16
sar
ret
pop
sbb
sahf
sub
fsub
ds
push
pop
shl
cwde
cmp
add
add
inc
loope
add
loope
sbb
ins
lds
add
retf
pop
or
pushf
sbb
movs
retf
pop
sbb
xchg
lea
xchg
jne
int
lock
xlat
pop
add
retf
push
adc
rcl
dec
dec
movs
inc
fwait
or
jle
mov
ret
add
call
mov
nop
inc
gs
and
ins
xchg
inc
mov
mov
and
jge
test
jge
(bad)
fcom
inc
in
retf
out
jge
je
aaa
out
pusha
pop
xchg
jge
add
or
inc
lock
mov
nop
inc
ffree
pop
adc
mov
mov
inc
lock
test
mov
enter
pop
out
fld
into
nop
in
xchg
inc
addr16
jge
mov
mov
push
sub
jmp
xchg
dec
stc
cmps
sbb
add
out
mov
xchg
iret
cmp
enter
(bad)
pop
adc
mov
add
add
pop
sbb
mov
iret
ins
clc
sbb
call
add
shr
in
mov
movs
test
loope
pop
or
inc
adc
sti
pusha
out
fnstcw
or
adc
addr16
test
jne
(bad)
rol
push
cld
out
test
mov
cmp
dec
sub
loope
test
add
add
mov
les
pushf
push
xchg
inc
sbb
pop
add
inc
inc
pop
scas
or
adc
sub
gs
xchg
dec
(bad)
sbb
movs
jo
mov
retf
dec
adc
popf
(bad)
jge
movs
ds
mov
(bad)
sti
clc
xor
arpl
(bad)
adc
mov
xchg
dec
push
xor
inc
and
sub
push
and
in
mov
add
(bad)
cmp
fiadd
xchg
jnp
jge
pop
out
retf
push
xchg
xchg
in
xchg
sub
sahf
adc
xchg
inc
pop
lds
sbb
add
out
retf
push
sbb
adc
aam
jmp
call
sbb
cwde
inc
lock
aam
sbb
sbb
in
mov
mov
mov
lock
sbb
in
add
xchg
add
or
rol
gs
fmul
(bad)
add
push
adc
repz
inc
ins
lds
into
adc
pushf
shr
xchg
mov
ins
sub
inc
xchg
dec
icebp
add
or
cdq
add
adc
push
sbb
in
ins
or
ret
add
cmp
out
(bad)
retf
push
adc
mov
xchg
(bad)
std
jno
add
enter
ret
push
lds
lods
int3
pop
add
inc
adc
shr
or
mov
pop
or
mov
pop
add
stos
sbb
retf
call
sub
inc
stc
add
or
push
lock
mov
mov
retf
pop
adc
test
mov
retf
enter
gs
xchg
jge
retf
call
add
ds
adc
(bad)
in
push
sub
shr
xchg
dec
jns
pop
or
mov
add
mov
mov
xchg
mov
cmp
add
ins
or
int3
inc
in
std
mov
or
scas
rcr
adc
push
mov
mov
adc
add
add
mov
daa
pop
sbb
jg
shr
xchg
jbe
sub
ss
pusha
xchg
inc
loope
pop
add
inc
nop
add
inc
inc
leave
xlat
inc
out
push
sub
mov
push
xchg
push
out
dec
push
push
inc
nop
xchg
inc
mov
mov
jg
jbe
adc
fwait
data16
add
sub
jg
mov
loopne
push
sahf
adc
push
mov
pop
adc
cmp
ins
movs
out
stc
pop
cmp
in
std
icebp
ins
clc
cmp
repz
adc
ins
add
cwde
push
pop
push
xchg
jle
inc
mov
cld
jg
sbb
ds
adc
das
out
jne
ins
or
movs
adc
push
repz
or
mov
call
faddp
call
(bad)
mov
test
mov
sbb
add
xor
fcomp
push
and
xchg
test
adc
loop
push
inc
inc
outs
or
js
fisttp
jge
mov
jns
mov
add
add
jge
mov
or
and
dec
mov
adc
std
push
pop
add
jp
call
fisub
out
mov
inc
in
xchg
jne
in
test
test
call
test
js
(bad)
jmp
xchg
inc
std
push
push
lock
or
add
add
add
push
loopne
out
sbb
pop
ret
or
(bad)
ret
dec
mov
out
ja
adc
in
out
or
test
add
hlt
nop
inc
mov
pop
adc
or
movs
mov
dec
mov
outs
sbb
vcvtdq2pd
out
add
call
add
add
fiadd
inc
ins
adc
or
push
inc
out
adc
call
fadd
jle
adc
add
dec
mov
ror
push
pcmpgtw
jg
ins
cld
inc
ja
(bad)
call
inc
ins
or
or
or
inc
add
cdq
cwde
sbb
mov
dec
mov
push
hlt
or
fst
push
push
rcl
sub
out
shl
xor
js
call
out
or
fimul
or
xchg
adc
adc
inc
pop
or
jns
mov
out
cmps
or
adc
fisttp
sbb
ins
shl
pop
js
call
cmps
inc
xchg
cmp
cmp
call
ss
mov
test
sub
adc
fdivr
pop
and
or
dec
or
mov
ja
push
into
rol
add
adc
cmps
inc
sbb
pop
ja
pop
mov
mov
xchg
mov
xchg
popf
ror
out
add
and
loope
jno
in
inc
cmp
sbb
test
hlt
push
push
or
or
loopne
push
and
jo
call
les
push
add
add
xchg
fmul
adc
int
xor
cmp
jbe
or
lock
cmp
mov
add
push
outs
pop
into
ret
or
push
push
xchg
inc
add
dec
in
add
fwait
shr
fwait
jg
nop
push
sahf
jle
jmp
add
add
ret
add
pop
rcr
(bad)
or
bound
add
adc
mov
and
add
jmp
sbb
out
add
(bad)
call
xor
ficomp
aas
adc
dec
or
push
inc
aad
jge
or
cmp
imul
or
jle
and
jno
mov
add
(bad)
mov
jbe
mov
add
add
cdq
xchg
or
cmp
jae
call
popf
jmp
and
pop
jnp
call
pop
inc
ins
inc
data16
or
adc
fiadd
loopne
xchg
test
lea
xchg
dec
jns
inc
or
(bad)
dec
lea
mov
add
add
stc
mov
sti
call
in
inc
ficomp
inc
adc
mov
hlt
push
cli
or
sahf
cmc
dec
mov
pushf
or
fstp
push
mov
pop
add
test
iret
xchg
(bad)
dec
sub
jmp
js
sbb
cmp
jbe
or
push
mov
cmp
jb
call
sbb
inc
cs
add
imul
fucomi
scas
in
neg
inc
ins
add
or
xchg
push
pop
jmp
lea
xchg
dec
jns
ins
or
dec
lea
dec
mov
out
out
neg
mov
jb
(bad)
not
ret
dec
mov
add
(bad)
out
mov
sbb
add
outs
sub
or
out
jno
pop
inc
lock
js
out
xchg
push
mov
xchg
push
test
jae
add
in
cmp
loop
inc
mov
(bad)
add
ror
lods
iret
xchg
into
fdivrp
out
test
test
test
add
add
pushf
adc
or
outs
jg
inc
pop
es
push
je
dec
mov
test
xor
std
stc
sti
jmp
fdiv
push
sbb
add
xchg
inc
fxch
dec
push
outs
inc
lock
dec
sti
out
sbb
lock
jmp
inc
ret
push
add
add
popf
shr
ret
push
rcl
int3
stc
imul
dec
ins
add
pop
in
das
adc
inc
jno
pop
adc
cmc
inc
ret
cmp
dec
mov
test
js
or
pop
ja
add
nop
xchg
inc
adc
push
or
outs
in
xchg
loopne
push
push
sbb
ret
jg
test
outs
loopne
pop
outs
in
fisttp
gs
dec
ja
je
add
xchg
jge
jmp
shl
pop
jmp
sub
cmp
sub
jne
sbb
mov
sbb
ins
push
pop
add
test
or
(bad)
call
add
les
sbb
xor
jne
or
or
jbe
call
cdq
cmp
adc
test
repnz
out
arpl
ret
adc
ret
pop
sbb
adc
test
hlt
xor
mov
je
mov
popf
push
lea
xchg
jne
add
and
xchg
mov
je
popf
nop
jnp
adc
sbb
ins
adc
shl
out
out
fld
pop
xor
arpl
out
addr16
jb
inc
adc
cmp
in
mov
cmp
bound
adc
or
inc
in
sbb
fidiv
mov
jmp
popf
push
pop
cld
or
in
ins
cld
and
call
or
or
mov
mov
mov
jge
shr
mov
sub
sbb
into
inc
inc
leave
pop
mov
push
mov
lock
sbb
cld
or
sahf
adc
ficom
setnp
ins
or
mov
adc
mov
jge
add
or
xchg
iret
or
rcl
mov
out
nop
inc
lea
pop
in
mov
inc
adc
ret
mov
call
sbb
push
call
adc
mov
std
repz
adc
cdq
out
push
xor
xor
aam
fsubrp
call
jge
in
pop
aam
cld
push
lods
dec
test
in
cmp
shl
pop
ret
mov
add
add
xchg
dec
mov
sbb
iret
lock
xchg
jg
jmp
xchg
fcomp
jne
cmp
arpl
inc
ins
or
mov
xchg
repz
aad
adc
jmp
je
cmp
adc
mov
and
or
mov
(bad)
(bad)
mov
mov
mov
add
xor
ins
xor
iret
and
jae
and
or
ss
mov
aam
in
xchg
inc
(bad)
sub
mov
add
mov
out
pop
jp
dec
cdq
fdiv
repnz
jle
jmp
mov
or
je
inc
pop
sub
dec
pop
sub
mov
mov
fiadd
jle
add
gs
jl
and
add
add
xchg
stc
ins
cmp
push
mov
add
mov
sbb
aad
fiadd
jge
inc
sub
jl
adc
mov
or
out
pop
xchg
out
inc
mov
sbb
sbb
movs
and
mov
(bad)
sbb
int
jnp
movs
test
or
retf
push
adc
push
cs
add
add
mov
dec
mov
xchg
inc
loope
pop
clc
xchg
adc
sub
xchg
dec
xchg
scas
gs
int
or
push
lods
pop
clc
jmp
xor
add
jb
and
sbb
gs
and
jnp
jge
lods
pop
lock
xchg
dec
in
lods
adc
and
enter
cmp
inc
add
add
ins
and
js
mov
sub
add
in
sbb
sbb
push
cs
inc
cdq
stos
adc
lods
xor
and
call
push
popa
in
mov
sub
dec
popa
scas
pop
or
adc
add
fdiv
ins
or
ja
jmp
scas
pop
lock
test
or
add
or
adc
push
sahf
cmp
inc
in
lods
sbb
(bad)
loopne
push
leave
xchg
jge
scas
ins
or
(bad)
in
call
pop
inc
ins
ins
pop
lds
mov
pop
in
(bad)
call
or
shr
inc
popf
repnz
out
out
icebp
jae
sbb
cdq
scas
pop
sbb
gs
fadd
pop
or
lds
mov
pop
or
push
mov
adc
sahf
stos
pop
adc
adc
jne
add
stos
aad
call
nop
jo
(bad)
fadd
sbb
sub
add
add
push
add
mov
sbb
call
mov
sbb
(bad)
ins
mov
dec
jg
jo
sbb
retf
fsubp
cmp
pop
lea
push
dec
lea
into
lock
sbb
in
lahf
pop
add
mov
add
and
les
push
retf
movs
adc
add
jmp
xchg
fcomp
imul
mov
jno
add
adc
or
or
mov
sub
or
test
lea
icebp
mov
test
add
sub
rcl
or
je
sbb
call
add
mov
adc
add
lds
in
sbb
sbb
lock
sbb
or
sbb
inc
pop
inc
adc
pop
inc
in
adc
cdq
test
jmp
sbb
jne
(bad)
xchg
stc
ins
lods
adc
aad
pop
add
lds
add
add
(bad)
sbb
push
test
inc
pop
adc
sub
xor
test
sbb
fld
pop
sbb
lds
and
sub
mov
mov
or
rcl
test
xor
sbb
or
inc
leave
push
add
add
add
call
push
out
icebp
data16
jae
mov
lea
fucom
push
push
ret
in
push
ins
mov
jno
dec
xchg
sti
inc
xchg
pop
push
and
ror
cmps
pop
movs
sbb
ins
add
fdivp
or
xchg
mov
inc
mul
mov
imul
inc
xor
out
jns
pop
push
mov
mov
cmp
imul
stos
dec
add
fst
adc
add
out
iret
(bad)
sub
clc
(bad)
fsubr
pop
fist
jmp
call
inc
mov
out
loopne
push
test
add
add
sbb
mov
pop
scas
jae
add
ins
adc
push
mov
ds
test
jle
add
stos
dec
mov
jae
mov
xchg
pop
imul
(bad)
pop
shl
mov
imul
xchg
xor
scas
jns
pop
pop
fcom
je
xlat
push
outs
inc
lock
(bad)
xor
push
fld
imul
jae
mov
movs
arpl
jo
mov
lock
movs
test
and
jle
test
mov
shl
or
sub
or
mov
ins
test
mov
sbb
jp
inc
inc
xchg
sbb
jo
add
add
(bad)
fld
(bad)
sbb
and
fadd
add
lea
ins
mov
mov
sbb
jo
enter
out
out
jle
mov
fldcw
xor
add
lds
out
jmp
in
push
or
dec
mov
inc
pop
adc
add
add
add
fisubr
rcl
inc
xlat
push
inc
or
hlt
push
fst
adc
mov
mov
lea
push
shr
(bad)
ss
cmps
inc
add
arpl
lea
test
mov
cld
xlat
sbb
cmps
pop
adc
add
jb
out
mov
mov
add
add
jmp
ins
mov
out
inc
inc
pop
cld
cwde
sbb
outs
or
stos
movs
xlat
call
or
or
mov
sbb
mov
ds
sub
(bad)
cld
sbb
jne
stos
pop
adc
sbb
je
mov
push
es
inc
cdq
add
add
(bad)
fistp
jne
test
jb
cmp
push
add
aam
fimul
fstp
ins
lea
sub
in
add
call
int
dec
adc
xor
rcr
sub
sbb
mov
sub
jl
ins
add
gs
pop
add
mov
je
stos
pop
or
ins
ds
xor
jne
or
mov
pop
or
movs
push
add
inc
xchg
dec
fstp
pop
jne
movs
pop
add
ret
lods
shr
sbb
cld
shr
push
add
and
add
pop
inc
dec
mov
push
or
mov
mov
cmps
push
or
icebp
pushf
leave
sub
adc
xchg
fcomp
mov
fst
sub
fdivr
push
stos
leave
sub
loop
xchg
and
es
out
enter
xor
sbb
cmp
fldcw
data16
add
add
add
sbb
inc
sbb
adc
add
test
adc
test
cwde
push
cmps
pop
clc
or
stos
ins
clc
loop
adc
pop
sub
(bad)
lods
repz
(bad)
data16
fidiv
out
fisub
mov
xor
adc
sbb
add
add
inc
ins
pop
cmc
add
inc
mov
fst
mov
lea
add
test
sub
xlat
sbb
stos
push
lea
cmps
push
cld
ins
sbb
add
test
adc
fs
push
in
inc
mov
leave
sar
pop
sub
fld
add
add
jg
stos
push
or
gs
pop
stos
dec
cld
in
(bad)
fwait
rcr
jne
or
pop
test
clc
ror
xchg
ret
std
or
add
mov
out
test
pushw
sahf
dec
fabs
pop
outs
dec
push
out
in
call
pop
mov
xchg
dec
(bad)
jnp
mov
cmp
in
pop
add
popf
jle
mov
cli
repz
xor
xchg
shl
sbb
arpl
add
ss
mov
jmp
out
jle
dec
imul
outs
in
mov
or
sub
add
xchg
in
jmp
add
add
push
sbb
adc
std
xchg
sar
sti
fidiv
push
popa
adc
rol
jp
cmp
popf
(bad)
jmp
xchg
add
aad
push
mov
dec
fist
loopne
push
push
xchg
mov
and
jns
mov
xchg
inc
imul
add
dec
and
xor
mov
pop
jo
add
addr16
mov
out
mov
mov
cmp
mov
sub
sbb
lock
sbb
add
dec
inc
ret
enter
bound
mov
or
jno
pop
add
inc
pop
out
sbb
rcr
adc
jge
or
xchg
dec
cdq
in
sbb
cdq
push
repz
out
add
push
xchg
adc
lea
push
outs
push
into
iret
adc
sub
xchg
ret
pop
or
lock
adc
inc
pop
mov
push
sahf
lock
add
add
or
sbb
sbb
inc
mov
outs
adc
add
and
jne
and
add
xchg
dec
leave
push
sbb
into
(bad)
adc
mov
jmp
xor
sbb
jg
mov
call
push
or
push
xor
jae
imul
jmp
add
call
push
xchg
dec
cmp
push
aam
leave
sbb
sbb
add
in
out
adc
or
bound
mov
(bad)
adc
jmp
or
push
int
mov
arpl
push
add
add
and
cdq
jns
mov
repz
repnz
pop
adc
push
cmp
arpl
adc
pop
mov
shr
sub
ror
adc
or
cmp
lea
test
jnp
add
mov
add
add
jmp
or
mov
ins
cmc
dec
enter
or
add
adc
adc
les
jne
or
jmp
add
movs
or
dec
adc
dec
mov
mov
pop
add
jne
push
pop
add
mov
jne
or
jmp
add
add
or
sahf
into
sbb
in
mov
sub
inc
ins
push
lahf
adc
or
pop
sbb
bnd
add
inc
in
dec
add
add
add
and
mov
(bad)
jmp
add
je
mov
cwde
jns
sub
rol
add
xor
dec
or
(bad)
sub
out
into
sbb
out
retf
adc
into
or
or
sbb
or
aad
xor
cdq
arpl
sub
jae
mov
pop
sub
push
fiadd
xor
rol
xchg
inc
add
pop
sub
(bad)
xor
outs
mov
fiadd
jg
inc
mov
sbb
fdivrp
pusha
sub
jb
(bad)
sub
push
push
dec
fiadd
test
jb
jg
mov
je
mov
js
sub
jg
js
sub
mov
arpl
or
mov
and
pop
mov
jmp
or
or
pop
or
xor
mov
out
dec
adc
mov
fld
xchg
(bad)
xchg
sub
call
pop
js
(bad)
push
and
push
ins
sbb
jmp
inc
in
xchg
add
add
push
call
or
fmulp
or
push
or
push
jno
jb
sbb
out
push
and
xchg
fnstcw
jmp
add
cmp
mov
xchg
jge
or
in
cwde
imul
pop
rcl
fimul
pop
or
mov
xchg
ja
push
xchg
inc
fucom
(bad)
shl
xchg
inc
ror
pop
ret
add
or
pop
and
inc
sar
(bad)
or
aas
or
loop
hlt
call
jl
sbb
in
sub
fs
push
mov
lock
jnp
sbb
cwde
jge
sub
mov
push
sar
add
inc
(bad)
jl
adc
add
std
push
adc
adc
add
add
jge
inc
jge
lock
hlt
sbb
call
sti
out
test
in
sbb
sbb
adc
cdq
add
pop
adc
(bad)
adc
dec
add
inc
xchg
add
xchg
ja
add
add
sbb
jne
jmp
cmp
add
add
jmp
or
into
push
add
das
xchg
sbb
sbb
pop
mov
sbb
fstp
je
or
mov
cmp
repnz
sahf
add
sbb
pop
dec
repz
adc
fld
pop
add
xchg
dec
lods
out
mov
add
add
xchg
adc
and
mov
movs
in
adc
mov
ins
add
jno
mov
push
dec
or
adc
add
enter
adc
sbb
push
scas
retf
sbb
sbb
and
sbb
sbb
push
add
retf
and
jg
adc
test
gs
add
add
add
xor
movs
sbb
adc
sbb
pop
add
jo
mov
mov
adc
and
sbb
push
jmp
pop
add
gs
test
sbb
and
adc
in
cwde
js
jl
outs
scas
mov
sbb
or
jmp
jl
inc
test
sbb
inc
cdq
out
ins
or
pop
(bad)
fwait
rcr
adc
xchg
into
fwait
ret
std
mov
cdq
add
sub
fs
sbb
xchg
jmp
cli
add
xchg
push
in
pop
add
adc
inc
fs
mov
inc
push
test
(bad)
xchg
rcr
adc
outs
add
push
adc
sbb
xor
out
or
sbb
or
pop
or
adc
movs
rcr
xchg
rcr
(bad)
jge
add
xchg
inc
cdq
out
ins
or
add
add
pop
(bad)
sbb
mov
sbb
jl
sbb
fist
add
jnp
call
inc
call
xchg
inc
pop
push
xchg
dec
popa
xchg
shl
(bad)
xchg
dec
or
xchg
dec
imul
lock
dec
jg
ret
dec
mov
pop
or
or
or
sbb
pop
push
add
dec
sbb
lds
dec
sbb
retf
fadd
pop
add
jle
push
jmp
push
sbb
(bad)
push
pop
or
inc
test
fs
in
adc
xor
jg
add
sbb
inc
adc
or
push
add
das
adc
add
add
rcr
or
push
leave
adc
xchg
pop
or
xchg
add
inc
ret
jb
or
sub
pop
push
cmp
xchg
dec
sbb
out
or
jmp
mov
pop
ret
mov
leave
sbb
adc
push
lock
or
sbb
std
fs
jge
xchg
gs
sbb
imul
js
mov
or
jne
out
ins
or
mov
fucomip
xchg
or
add
loope
xchg
pop
jle
pop
jg
jb
std
mov
add
or
je
or
je
xchg
dec
sbb
push
imul
add
add
repnz
and
jmp
mov
xchg
push
adc
jp
cmp
sbb
add
nop
pop
cdq
nop
ffreep
dec
nop
hlt
push
inc
nop
inc
or
mov
push
clc
ins
es
hlt
ins
or
shl
vcvtpd2dq
out
sub
push
repz
call
aad
pop
add
mov
je
push
inc
pop
pop
dec
sbb
pop
sbb
or
sbb
sahf
fcom
mov
adc
push
ins
mov
call
repz
mov
adc
fwait
adc
inc
loop
out
pop
enter
(bad)
sbb
movs
test
or
add
add
rcr
lods
loope
add
ins
or
push
int3
call
push
ja
cmp
sbb
adc
jmp
ins
or
in
sbb
add
jno
pop
iret
push
icebp
xchg
inc
sbb
test
push
mov
lock
hlt
sbb
call
test
add
add
into
(bad)
xchg
lock
(bad)
or
adc
call
cs
push
or
ins
sbb
nop
ins
aam
pop
xlat
jmp
ret
gs
jb
std
mov
inc
push
jmp
adc
jne
push
jge
push
add
ins
arpl
call
mov
mov
adc
add
add
lock
cld
(bad)
out
enter
mov
out
scas
test
pusha
push
out
outs
mov
sbb
add
fst
jns
jo
mov
repz
inc
sbb
push
dec
or
mov
add
gs
fld
mov
lock
test
call
in
mov
(bad)
jmp
jne
add
gs
lock
push
sbb
nop
or
out
jg
jb
mov
int3
call
sahf
mov
sbb
push
dec
xchg
in
(bad)
push
xchg
fcomp
adc
std
xor
iret
adc
lock
cmp
or
fild
add
add
and
inc
lock
ficomp
jge
push
pop
push
inc
inc
pop
inc
inc
dec
mov
add
(bad)
sti
ins
cld
ret
(bad)
call
jmp
fwait
les
rol
dec
sbb
add
push
add
add
mov
std
dec
sbb
and
add
test
add
inc
inc
ret
mov
xor
(bad)
call
std
ins
or
add
or
enter
push
xchg
in
push
lds
push
add
jne
sub
push
loop
adc
pop
or
dec
xchg
sbb
cmps
or
dec
mov
adc
into
push
fdivp
xchg
(bad)
push
cmc
imul
mov
rcr
add
add
dec
adc
pop
test
add
cmc
push
xchg
enter
xor
shl
xchg
in
(bad)
mov
mov
mov
push
dec
into
out
js
std
out
in
add
cwde
mov
add
add
push
adc
sub
out
scas
pop
fwait
enter
adc
inc
outs
or
les
(bad)
xor
push
sbb
jle
pop
mov
adc
es
dec
mov
dec
rol
neg
inc
in
add
adc
adc
retf
adc
add
sub
push
(bad)
int3
dec
call
inc
or
(bad)
out
mov
fwait
push
inc
pop
jo
adc
jg
scas
hlt
loope
sbb
movs
pop
sbb
push
rcl
js
sbb
xchg
jle
xor
jo
mov
call
jle
call
adc
out
jo
jmp
ins
sbb
sbb
out
cmps
inc
add
and
out
add
out
(bad)
jle
push
mov
xchg
dec
or
dec
jle
adc
pop
pop
lock
mul
adc
pop
aad
mov
adc
mov
inc
pop
out
out
popf
mov
lock
jle
mov
test
sbb
hlt
add
add
cmp
sbb
pop
or
out
jl
sbb
xchg
or
imul
lock
sbb
cmps
push
hlt
cmp
add
adc
std
stos
out
(bad)
call
(bad)
fstp
in
xchg
jne
out
push
in
add
inc
sti
call
adc
add
add
jge
loopne
sbb
sbb
jmp
mov
xor
call
xchg
aad
cli
xchg
inc
xchg
icebp
or
aam
and
fiadd
sbb
mov
cmp
in
sub
sbb
enter
rol
push
into
leave
out
inc
adc
out
sahf
retf
adc
add
add
inc
mov
leave
call
(bad)
scas
test
mov
sbb
jno
(bad)
jbe
jne
data16
retf
add
shr
test
jmp
cs
call
sub
sbb
in
pop
or
shr
dec
push
cmp
xchg
jge
cmps
mov
add
hlt
xchg
repz
cmps
mov
jne
mov
imul
adc
adc
dec
add
ins
add
dec
add
dec
in
and
ret
adc
sbb
pop
cwde
jge
hlt
in
sbb
jmp
xchg
icebp
ins
push
sbb
movs
(bad)
sbb
mov
pop
inc
ret
dec
mov
pop
xchg
icebp
fiadd
out
pop
pop
xor
xchg
sbb
sub
sbb
lock
sbb
out
mov
fsubrp
dec
(bad)
call
push
sbb
and
rcr
pop
pop
inc
ret
fild
add
pop
add
mov
add
add
cld
fstp
cmp
mov
mov
icebp
xchg
jge
push
lock
push
sbb
mov
push
dec
lea
push
fiadd
add
rcl
add
sbb
out
out
cdq
mov
lock
xchg
jle
mov
test
mov
add
push
cld
ins
or
dec
adc
pop
loope
inc
push
jmp
xchg
(bad)
std
sbb
sbb
enter
scas
lock
adc
sbb
je
push
lock
and
sbb
ret
inc
pop
daa
sbb
outs
lock
iret
adc
fiadd
call
dec
retf
inc
jmp
push
icebp
fiadd
icebp
push
pop
add
iret
out
loop
pop
or
jmp
(bad)
and
add
add
test
mov
fimul
into
in
dec
(bad)
call
dec
out
add
sbb
mov
inc
ret
dec
test
jbe
data16
jge
in
adc
rcr
lock
mov
and
mov
cmps
add
ret
out
jg
into
call
call
vorps
out
and
jne
call
push
jge
adc
add
jbe
jmp
sbb
out
jl
cmp
add
sbb
imul
jl
mov
xchg
inc
iret
adc
fwait
ror
xlat
iret
(bad)
inc
mov
push
inc
or
sbb
popf
fcmovne
push
dec
mov
push
add
mov
and
fwait
shr
xchg
push
int
push
adc
repz
xchg
jle
add
(bad)
call
xor
ficomp
jns
push
push
xchg
fwait
jge
add
add
add
xchg
inc
pop
xchg
sbb
pop
xchg
cmp
pop
repz
add
jnp
shr
ins
or
inc
retf
mov
sbb
cmps
mov
sbb
xchg
dec
mov
gs
add
jge
dec
sub
out
cwde
jno
dec
fst
xchg
mov
(bad)
aad
sbb
sub
inc
ins
add
xchg
adc
or
jb
adc
scas
xchg
adc
inc
and
neg
call
out
retf
fimul
test
js
add
xchg
push
scas
int
jmp
adc
sahf
lds
add
add
mov
outs
sub
xchg
(bad)
es
aas
add
ins
sub
ins
and
fwait
mov
mov
ins
sbb
mov
loop
xchg
aam
add
mov
sub
xchg
test
mov
rol
inc
push
ins
(bad)
or
jne
add
push
aam
xchg
xlat
jmp
call
add
and
loopne
dec
call
scas
test
nop
iret
retf
push
out
pop
(bad)
push
call
push
out
push
mov
cmp
add
push
out
add
ror
call
pop
dec
out
cs
inc
test
jge
movs
in
in
movs
imul
loop
xchg
dec
(bad)
sar
sub
in
pop
lea
push
lock
nop
add
mov
mov
cs
test
ret
mov
hlt
mov
in
adc
lds
stc
in
sub
jne
push
loopne
(bad)
stc
push
mov
(bad)
lock
add
sbb
inc
adc
test
hlt
adc
push
outs
adc
sub
leave
loop
aad
sbb
push
jo
jmp
inc
ins
and
sti
push
or
xchg
inc
cdq
imul
data16
jne
stos
loopne
loop
dec
mov
ins
pop
add
icebp
adc
sbb
out
imul
or
fimul
into
(bad)
jge
jae
or
adc
fadd
fwait
leave
add
sbb
mov
ret
or
pop
stos
pop
cld
mov
jmp
retf
push
lea
out
sbb
sub
loope
out
xchg
aas
dec
and
(bad)
adc
xor
inc
or
mov
add
jno
xchg
or
(bad)
(bad)
cmps
int
out
test
mov
xchg
sbb
fidivr
jb
push
inc
xchg
inc
pop
or
mov
adc
add
shr
xchg
jge
mov
xchg
inc
in
or
xchg
jge
jb
or
jmp
or
or
add
sbb
push
cdq
bound
aam
sub
stos
ficom
mov
(bad)
fnstcw
lock
sbb
xchg
inc
popf
add
or
xchg
dec
cdq
imul
jne
test
imul
dec
out
out
int3
out
sub
fdivrp
bound
fistp
dec
fimul
and
ins
or
out
mov
(bad)
jge
mov
adc
mov
adc
ret
adc
lods
jmp
fldcw
sbb
pop
cld
pop
ret
push
mov
or
into
inc
imul
or
push
inc
out
fild
push
call
push
aam
mov
add
add
xchg
xchg
sar
(bad)
push
dec
xor
in
ret
out
mov
outs
and
repnz
push
or
mov
outs
pop
(bad)
adc
jge
or
cld
mov
or
push
sbb
or
add
adc
data16
jb
or
dec
adc
jo
push
mov
pop
add
add
into
mov
jb
add
or
inc
or
std
mov
jmp
or
push
inc
adc
pop
xchg
adc
or
mov
or
(bad)
jge
jb
or
mov
or
adc
imul
push
hlt
aad
inc
add
or
call
cld
int3
sbb
adc
or
data16
jb
or
dec
adc
xlat
adc
push
cli
(bad)
push
lds
dec
or
inc
xchg
or
into
push
mov
xchg
add
aad
(bad)
std
xor
jmp
pop
pop
sbb
mov
push
faddp
sbb
data16
(bad)
jl
jb
or
add
add
mov
push
dec
or
enter
jg
sub
adc
hlt
int
inc
xor
lea
cmc
push
mov
jne
(bad)
and
sbb
adc
bound
pop
mov
pop
add
cmp
or
pop
mov
pop
add
cmp
lea
call
inc
inc
movs
(bad)
sub
aam
dec
popf
call
lock
js
out
fidivr
fwait
clc
ins
out
sbb
loopne
sbb
into
int
jmp
dec
pushf
(bad)
push
mov
mov
push
lds
pop
adc
inc
icebp
inc
adc
sbb
dec
or
push
mov
add
add
ja
(bad)
loopne
out
xchg
inc
fldenv
cmps
sbb
add
sbb
popf
add
inc
cmps
(bad)
sub
rcl
lock
push
cmp
call
fidivr
fwait
clc
ins
in
sbb
loopne
sbb
into
retf
push
or
pushf
enter
mov
dec
add
xor
mov
xchg
inc
cmc
outs
jmp
fwait
stc
or
xor
cmp
add
out
pop
add
rcl
sbb
add
rcl
lea
shl
test
out
push
ret
push
sbb
fwait
clc
(bad)
lock
loopne
sbb
out
retf
push
or
fmul
push
mov
outs
sbb
push
inc
xor
int3
leave
jmp
leave
push
push
mov
and
sbb
lock
pop
outs
out
into
xchg
fwait
les
add
or
adc
xchg
adc
add
adc
push
not
or
cli
push
sub
xor
into
retf
jns
dec
mov
mov
push
gs
inc
imul
or
aas
lock
aas
inc
leave
cmps
jl
push
mov
call
(bad)
jecxz
dec
pop
outs
out
adc
add
(bad)
sar
out
jecxz
xchg
(bad)
sub
outs
das
call
lods
gs
add
add
rcl
inc
fnop
xchg
inc
fnop
(bad)
(bad)
fld
nop
inc
mov
xor
mov
xchg
inc
lds
ficomp
ret
xchg
lock
mov
call
shl
add
mov
inc
icebp
cli
push
sbb
imul
lock
sbb
std
cmp
inc
add
adc
inc
sar
push
sti
outs
cmp
aaa
sar
(bad)
sti
outs
push
sub
sti
outs
jo
sub
inc
scas
mov
jg
call
jo
mov
aad
lock
mov
add
add
lea
sbb
movs
addr16
add
mov
jle
add
jmp
xchg
jg
call
aas
repz
xchg
add
inc
icebp
add
fwait
ror
(bad)
xor
sub
int3
xchg
xor
or
mov
jle
add
mov
jmp
fucomip
or
sbb
push
mov
push
mov
mov
sbb
aad
or
push
outs
xchg
mov
jge
add
pop
add
outs
cs
ins
aam
push
xor
in
xchg
jle
icebp
in
out
movs
retf
xchg
mov
jge
add
shl
push
adc
fild
push
jle
cmps
fwait
outs
out
gs
xchg
mov
jge
add
fdivr
(bad)
aam
push
mov
jle
mov
adc
push
mov
bound
add
add
sub
aam
push
nop
imul
call
iret
jge
(bad)
fiadd
out
aad
xchg
imul
xlat
call
rol
imul
imul
add
or
into
out
movs
add
lods
(bad)
imul
jmp
dec
jb
std
jns
inc
gs
dec
add
jge
(bad)
xchg
imul
cmps
call
pop
jge
and
jo
sbb
frstor
cmp
leave
loop
sub
jno
push
mov
outs
push
sbb
loop
dec
mov
pop
jo
jo
jo
enter
sub
call
jno
mov
sub
sar
xor
jae
lea
push
sbb
xchg
aam
mov
test
add
and
test
push
lock
add
fiadd
jp
mov
add
add
out
cmps
sbb
adc
sbb
imul
pop
std
jb
jmp
fwait
cld
adc
sub
add
sbb
inc
in
(bad)
(bad)
jno
mov
sbb
aad
lahf
sbb
sbb
es
add
sbb
push
mov
lahf
and
sbb
xchg
rcl
add
adc
xor
sbb
cwde
jno
call
sahf
add
and
test
add
adc
mov
js
adc
test
add
lock
aam
sbb
fld
pop
lea
add
add
xchg
or
pop
out
ins
scas
inc
movs
mov
dec
mov
push
adc
cmp
dec
call
jle
dec
push
mov
mov
dec
mov
ret
pop
xchg
shr
fcmovne
xchg
xchg
inc
jno
(bad)
nop
inc
rcr
sbb
mov
xchg
jle
dec
or
xchg
add
add
call
add
xchg
and
fimul
neg
add
mov
or
jnp
sbb
inc
jb
dec
loopne
inc
movs
dec
scas
add
inc
movs
push
inc
cmp
hlt
sbb
movs
ins
pop
mov
pop
xchg
jne
add
add
pop
adc
inc
dec
imul
or
and
sbb
(bad)
fdiv
mov
hlt
(bad)
call
mov
lock
out
call
mov
(bad)
shr
mov
enter
int
in
jno
push
in
loop
add
add
add
les
mov
push
call
out
out
sub
(bad)
cmc
xchg
sbb
scas
ror
push
pop
sbb
mov
xchg
lock
sbb
gs
cs
cld
mov
xchg
inc
xor
leave
jg
push
and
repnz
dec
dec
sbb
sahf
ret
push
imul
inc
adc
or
dec
push
out
aad
sbb
push
arpl
add
push
xor
and
jmp
sub
sbb
xchg
pop
add
or
lds
sub
lahf
movs
jg
cdq
stos
push
xchg
pop
xchg
push
or
cmps
repnz
call
jg
ins
inc
stos
ret
loop
fidivr
add
add
mov
ins
call
adc
or
lock
call
scas
lock
mov
jmp
adc
test
inc
(bad)
fmul
dec
cmp
sbb
jle
les
push
xchg
(bad)
cmp
inc
adc
dec
lock
call
(bad)
cmp
or
mov
mov
add
add
imul
mov
sbb
cmp
loope
sub
push
add
pop
or
add
sbb
mov
pop
or
ds
adc
lock
call
add
adc
xchg
dec
sbb
lods
push
cmp
cmp
sbb
shl
lods
inc
fwait
es
xchg
pop
rcr
lock
cmp
sbb
add
xchg
(bad)
outs
inc
fwait
movs
rcl
or
xor
cld
test
mov
jmp
dec
mov
addr16
adc
adc
test
xchg
pop
or
xor
mov
jle
or
aas
sbb
call
jbe
push
retf
mov
jmp
sub
cs
xchg
inc
or
inc
test
xchg
(bad)
push
inc
jb
ins
mov
imul
fcomp
push
sar
inc
test
xchg
repz
fldl2e
call
shr
sbb
xchg
outs
pop
in
loop
push
push
push
inc
lock
iret
ret
xchg
inc
test
sbb
dec
out
sbb
inc
dec
sbb
into
ret
sub
push
sbb
jmp
sbb
add
out
bound
lock
inc
test
pop
cmp
cmp
push
pop
inc
ins
or
fs
test
add
add
inc
sbb
in
push
add
and
fsubr
xchg
adc
sbb
or
pushw
test
inc
sbb
xchg
gs
add
sub
jb
dec
sub
sbb
push
imul
gs
adc
fwait
inc
sbb
scas
out
shr
xchg
add
add
add
sub
sahf
das
sbb
int
push
sub
std
pop
add
jl
add
(bad)
sub
arpl
dec
ret
add
mov
lock
cmp
add
movs
xchg
inc
sbb
push
dec
mov
repz
sbb
mov
or
lods
lock
jge
pop
fisub
pop
cmp
(bad)
out
pop
jle
ins
pop
inc
dec
xchg
add
jbe
pop
inc
mov
hlt
add
dec
push
jmp
inc
add
hlt
inc
test
cld
mov
loop
pop
xchg
inc
add
call
cmp
xor
enter
push
loope
pop
pop
out
mov
jmp
out
mov
adc
call
addr16
jmp
pop
ins
sbb
cmc
inc
gs
mov
sub
xchg
lea
cwde
pop
ins
or
out
icebp
out
pop
and
icebp
sbb
cmps
inc
sbb
mov
pop
pop
in
sbb
jne
leave
pop
mov
push
outs
ins
cdq
(bad)
es
adc
retf
jecxz
test
fadd
imul
outs
adc
add
aad
pop
jmp
nop
lock
sbb
dec
in
(bad)
movs
mov
sbb
ret
adc
out
push
add
ret
or
push
mov
add
add
shl
loop
call
pop
ins
or
rcr
call
mov
adc
mov
(bad)
stc
sbb
test
or
mov
in
push
dec
or
mov
mov
xor
cmp
jl
movs
jg
stc
sbb
ins
add
iret
push
clc
std
push
clc
inc
add
add
imul
sahf
and
je
inc
mov
gs
inc
mov
pop
add
out
stc
fsub
jecxz
call
leave
push
call
jg
mov
xchg
xchg
jne
push
(bad)
loopne
pop
xchg
jge
rep
hlt
mov
xchg
jne
stc
out
repnz
jo
in
sub
outs
mov
pop
add
jnp
cmp
out
ins
adc
ins
or
repz
push
(bad)
repz
pop
and
retf
sbb
mov
mov
sbb
out
leave
xlat
in
out
fimul
(bad)
addr16
add
jns
ret
out
mov
jle
idiv
jl
add
xchg
inc
and
pop
adc
add
adc
(bad)
fldlg2
in
cmc
push
mov
jbe
push
jbe
in
inc
cmp
out
mov
repnz
mov
sub
push
loope
stos
(bad)
leave
loop
cwde
xchg
out
mov
ins
or
mov
out
push
retf
in
pop
add
retf
pushf
inc
adc
sub
hlt
adc
dec
push
dec
adc
mov
aad
inc
jno
cmp
adc
outs
xor
(bad)
(bad)
out
minps
test
ins
add
mov
mov
add
retf
stc
pop
inc
idiv
sar
fsub
jne
popa
ins
or
ins
jbe
aad
xchg
jne
add
add
jl
adc
xor
mov
jmp
mov
inc
jae
mov
aam
adc
cmp
or
mov
push
fimul
and
mov
call
fmulp
push
mov
mov
movs
ret
inc
leave
addr16
push
sahf
jo
push
retf
(bad)
loopne
mov
fsub
jne
pusha
ins
adc
adc
test
lock
cmc
sbb
cwde
jno
sar
fcom
(bad)
push
pop
sbb
adc
test
hlt
cmp
pop
loope
out
mov
push
or
inc
adc
add
xchg
jl
xor
mov
sbb
push
sbb
gs
mov
sbb
or
or
mov
inc
xchg
dec
cmc
or
jg
jb
xchg
inc
adc
sub
out
push
rol
jne
add
aad
dec
mov
pop
xchg
clc
ds
lea
out
call
pop
jo
sbb
jge
sbb
xchg
cli
sub
pop
xor
int3
test
mov
xchg
icebp
push
rcl
mov
jns
call
or
xor
ds
lods
mov
adc
sar
sbb
xchg
fmul
mov
fldcw
pop
inc
idiv
cld
fidiv
adc
fwait
cli
and
sbb
mov
sbb
das
(bad)
fwait
xor
add
add
sbb
sub
jb
jmp
add
jg
sbb
sar
add
cmp
or
adc
out
xchg
cmp
call
sub
jmp
cmp
movs
sub
cmp
mov
je
call
cmps
push
inc
dec
call
into
retf
adc
mov
(bad)
cwde
lods
out
add
adc
test
ds
mov
push
inc
scas
inc
dec
add
push
out
cmc
inc
popf
sub
out
aad
sbb
ds
add
adc
out
adc
pop
sbb
xchg
clc
pop
add
je
cmp
lock
sar
out
dec
mov
mov
xchg
pop
push
add
jae
sub
in
push
cwde
sbb
in
sbb
mov
ror
add
fwait
mov
and
or
inc
or
imul
mov
mov
bound
das
call
and
sub
inc
cmp
cmps
push
out
xor
bound
xchg
sub
cmp
in
add
lods
sub
ds
push
pushf
sbb
sub
dec
call
push
inc
xor
jmp
loope
adc
inc
add
add
sahf
add
xchg
inc
cmc
push
dec
dec
jg
push
sbb
pop
adc
push
adc
mov
call
adc
loop
sahf
(bad)
push
(bad)
fcom
mov
adc
aaa
sub
xchg
stos
enter
pop
sti
push
ss
pop
popa
test
dec
scas
push
lea
and
call
push
inc
dec
lea
and
pop
xor
sbb
mov
inc
dec
push
faddp
push
adc
out
gs
out
cs
out
rol
and
bound
dec
call
pop
shl
adc
aad
lea
popfw
or
or
pop
add
inc
aaa
and
jmp
aaa
out
cld
pop
sub
bound
xchg
test
imul
add
(bad)
xchg
sti
std
mov
test
cmp
jne
or
lock
mov
or
call
(bad)
inc
dec
cmp
hlt
lea
ins
shl
bound
lock
push
sbb
and
repz
dec
outs
push
es
jae
mov
jle
pop
dec
aas
fwait
enter
not
push
(bad)
gs
jo
jmp
imul
icebp
aad
aam
push
push
mov
das
out
adc
jl
movs
test
jge
(bad)
neg
ds
sub
cld
out
sbb
mov
mov
mov
add
add
or
mov
cwde
dec
ins
add
xchg
repz
ror
fs
xchg
fimul
xchg
fmul
pop
xchg
into
pop
cmp
mov
cmp
imul
inc
sahf
xchg
pop
adc
sbb
push
ds
call
data16
sub
push
jge
add
add
fmul
xchg
xchg
retf
lods
fistp
add
cmp
mov
shl
inc
jno
(bad)
cdq
push
out
jns
out
out
paddw
sbb
and
popf
or
das
out
push
loop
add
das
out
std
data16
bound
lods
adc
das
out
mov
xchg
popf
or
add
add
out
aad
sbb
mov
out
pop
add
vmovdqu
mov
add
das
fild
cmps
sbb
xor
jbe
add
push
pop
sub
pop
test
xchg
sar
outs
or
inc
add
add
dec
jno
mov
es
stos
int
inc
loope
test
in
fwait
mov
aam
add
bound
popf
adc
out
mov
rcl
(bad)
in
add
cmp
mov
call
scas
cmp
jmp
or
sub
jl
sbb
dec
add
sbb
xor
pop
(bad)
bound
out
inc
sub
(bad)
std
mov
add
jl
add
adc
mov
pop
out
stc
mov
and
fwait
clc
in
fwait
test
pop
std
in
bound
out
out
nop
pop
popa
or
push
add
or
sar
cmp
sub
mov
xor
sti
xchg
and
out
cmp
(bad)
test
dec
dec
(bad)
jmp
mov
sub
ja
or
rcl
(bad)
bound
popf
adc
sub
or
push
push
sbb
push
jmp
std
and
xchg
inc
icebp
xchg
aad
sbb
push
or
fdiv
xchg
inc
(bad)
add
cs
xchg
jmp
out
and
loop
dec
call
ficom
jecxz
gs
mov
iret
dec
(bad)
out
dec
out
bound
nop
lea
out
mov
or
jne
push
pop
adc
das
lock
int
pop
mov
jg
lea
xor
dec
fcom
dec
adc
aad
out
nop
(bad)
jmp
icebp
lea
out
jmp
vmovddup
lock
add
add
jle
ret
dec
mov
cli
repz
xchg
outs
adc
jge
add
fldenv
inc
leave
cmps
cli
iret
jmp
mov
icebp
and
pop
add
stc
push
add
ins
retf
stos
jmp
repnz
or
call
enter
sahf
repz
das
out
pop
call
add
and
mov
sbb
iret
sbb
out
sub
add
pop
mov
rcr
(bad)
inc
fisubr
pop
inc
idiv
dec
loopne
pop
aad
sar
out
(bad)
pop
cmp
sbb
push
jmp
jns
inc
enter
aad
and
jb
sbb
push
test
ror
mov
(bad)
xor
add
cmp
xchg
(bad)
sahf
inc
lock
test
mov
lds
push
pop
inc
test
add
loop
mov
dec
pop
call
fwait
adc
out
pop
ror
fcomp
inc
icebp
test
add
add
pop
movs
test
adc
lods
cmps
and
cmp
push
aam
inc
rol
add
dec
jno
pop
adc
adc
(bad)
sahf
xor
test
jmp
aad
ror
imul
xchg
inc
or
sub
dec
test
mov
add
add
ret
pop
add
add
in
aam
pop
mov
sub
inc
popf
scas
iret
and
mov
aad
out
cmps
sub
jne
mov
mov
xchg
dec
xchg
scas
cmps
and
enter
cmps
sbb
adc
mov
call
sbb
sub
jmp
jo
sbb
jg
sbb
add
add
add
add
cs
bound
jb
ret
dec
ins
cld
pop
ror
movs
cdq
dec
jmp
sar
pusha
fild
sbb
cdq
adc
or
push
xor
jae
inc
into
xchg
dec
push
or
dec
ins
cld
movs
mov
xchg
jge
add
mov
sub
fwait
(bad)
jns
out
push
add
mov
aas
ins
enter
inc
sbb
inc
cmp
scas
mov
lock
push
aas
out
and
ds
nop
test
out
sbb
sbb
rcr
int
aad
dec
(bad)
call
dec
fucomip
(bad)
jns
add
mov
inc
pop
push
cmp
(bad)
dec
int3
xchg
pop
cmc
sub
(bad)
mov
jne
add
int
in
jmp
ins
movs
mov
push
jmp
xchg
ret
dec
mov
add
or
mov
mov
mov
xchg
pop
pop
inc
fwait
enter
mul
loopne
(bad)
sub
jmp
mov
popa
movs
inc
in
pop
hlt
mov
stc
jmp
adc
dec
popa
fwait
in
mov
inc
jl
adc
xor
bound
adc
ins
or
sbb
jmp
adc
push
inc
pop
cld
hlt
mov
bound
dec
gs
lock
mov
sbb
gs
mov
add
pop
add
(bad)
sbb
and
test
jl
test
add
inc
sbb
pop
rcr
shl
inc
fstp
pop
jl
jg
add
jbe
jge
add
add
(bad)
sbb
lea
dec
push
lods
cmps
out
gs
adc
mov
call
fnstcw
xchg
inc
popa
mov
mov
bound
dec
adc
data16
ret
jb
cmp
daa
and
and
mov
lock
or
sbb
jmp
and
dec
(bad)
retf
inc
popa
test
dec
xor
out
jmp
add
lods
pop
mov
std
cmp
inc
adc
imul
shl
push
call
cmp
lea
call
je
out
or
pop
add
push
repnz
lds
add
(bad)
out
sbb
or
fst
inc
in
sbb
cwde
aad
dec
fisttp
cmp
mov
and
out
out
imul
mov
mov
mov
inc
pusha
add
(bad)
pop
push
dec
leave
(bad)
ds
jg
jle
dec
or
cmp
add
pop
dec
(bad)
jmp
dec
pop
mov
inc
sbb
sbb
mov
and
adc
dec
sahf
add
jge
add
mov
adc
daa
sbb
or
push
add
aaa
xchg
dec
frstor
xchg
adc
inc
int
sbb
add
mov
imul
mov
mov
aad
dec
lea
add
rol
sub
mov
icebp
push
out
push
sbb
ins
mov
mov
mov
push
add
add
and
jmp
add
mov
dec
or
xchg
mov
add
inc
loopne
in
icebp
scas
in
sbb
pop
daa
sbb
in
push
cmp
mov
int3
data16
test
jmp
add
mov
inc
push
xor
xchg
sbb
arpl
data16
sub
test
or
ret
push
add
add
dec
ret
pop
je
inc
pop
or
mov
xchg
add
mov
sbb
and
pop
daa
mov
mov
xchg
inc
sbb
mov
sbb
cs
jns
jge
adc
mov
fiadd
jge
pusha
in
sbb
aad
or
add
data16
jge
and
jge
js
jge
sbb
mov
xchg
jbe
sbb
and
iret
fwait
inc
sar
out
xchg
dec
sbb
xchg
or
mov
sbb
push
dec
push
mov
mov
pop
inc
adc
sbb
and
in
and
add
add
jl
jnp
sub
call
push
jns
jl
jge
pop
fcmovnb
in
lds
push
mov
rcl
add
(bad)
dec
in
xchg
sbb
call
xchg
inc
cmp
mov
mov
push
add
mov
int
dec
ins
js
je
inc
or
and
rcr
pop
inc
fdiv
pop
je
sub
sbb
add
xchg
add
in
dec
mov
adc
rol
jnp
jge
mov
cmp
(bad)
jmp
xchg
dec
push
and
xchg
ss
mov
sbb
jbe
rcl
movs
sbb
ret
mov
pop
xor
rol
cdq
adc
inc
enter
mov
add
xchg
dec
pop
dec
dec
add
or
arpl
jns
add
les
mov
and
add
adc
mov
dec
or
bound
mov
mov
add
add
rol
stos
jge
dec
fnstenv
icebp
cmovle
sbb
pop
(bad)
imul
dec
sbb
test
ja
jne
daa
test
xchg
jg
inc
imul
mov
jae
push
or
sub
mov
mov
add
pushf
scas
sbb
sub
push
add
mov
jne
neg
sahf
mov
push
mov
fst
xchg
dec
push
push
aas
xchg
jge
push
out
popa
ds
or
or
dec
jbe
ins
fidivr
sbb
sbb
xchg
dec
push
cs
inc
jl
movs
jle
test
cmps
outs
sar
sbb
jle
and
or
mov
jb
ret
in
mov
pop
or
xchg
jl
push
jle
cmp
xchg
icebp
add
or
pop
scas
cmp
fsub
fst
xchg
dec
push
push
ds
jge
push
out
and
ins
or
or
dec
jne
lods
fidivr
sbb
inc
leave
daa
jbe
push
pop
xchg
dec
push
or
mov
cdq
jg
aas
test
cmp
in
inc
or
xchg
inc
jno
(bad)
push
retf
mov
ins
lahf
add
and
cli
repz
fimul
pop
sub
fst
jno
inc
dec
fcmovnbe
clc
daa
push
rol
add
xchg
xor
or
jbe
aam
add
add
jne
aam
call
xchg
dec
or
jmp
test
lods
bound
push
pusha
cli
add
or
out
bound
sbb
test
push
jnp
stc
cmp
pop
(bad)
out
push
mov
std
stos
lock
jmp
repnz
jbe
add
add
rcl
call
(bad)
iret
adc
jnp
gs
dec
out
pop
fsub
jge
imul
push
out
out
cmps
sbb
sub
inc
jb
lea
inc
in
into
jmp
in
add
cld
in
pop
in
call
add
mov
jne
or
adc
jg
add
add
add
enter
sbb
push
push
gs
dec
out
(bad)
pop
add
arpl
dec
jae
add
lock
sbb
adc
sbb
cmps
in
push
mov
ins
(bad)
out
add
call
repnz
sbb
or
adc
sbb
and
adc
cmp
ins
in
dec
mov
call
fisub
cli
push
jne
jmp
imul
xor
cld
test
ret
dec
or
call
and
add
outs
das
out
adc
lea
mov
out
out
inc
fist
or
call
lock
add
pop
das
out
mov
mov
out
nop
iret
dec
(bad)
out
inc
call
nop
iret
jbe
(bad)
cmc
inc
call
nop
sete
aad
xchg
adc
add
xchg
(bad)
sub
add
call
(bad)
jl
add
add
add
inc
sbb
xchg
imul
pop
sbb
adc
clc
add
dec
call
loopne
in
adc
scas
adc
sub
add
adc
jg
add
xchg
xor
sbb
pop
push
cmp
in
xchg
mov
jg
add
add
add
cmp
in
lock
in
sbb
aad
fwait
cmp
sbb
std
mov
fwait
pop
xchg
sbb
sub
pop
add
sbb
sbb
fwait
pusha
sbb
(bad)
pop
add
fistp
or
push
fadd
pop
add
mov
add
add
add
pushf
nop
inc
add
pop
and
fst
ins
dec
push
(bad)
(bad)
xchg
clc
push
jle
test
add
adc
mov
ja
inc
popa
add
jne
or
call
cld
sbb
xchg
or
ficom
sub
call
loope
int
push
cld
sub
xchg
inc
popa
shl
jbe
adc
push
jg
pop
(bad)
out
push
call
faddp
push
sub
fucomp
stc
jle
dec
add
mov
jle
pop
ins
add
aas
repz
in
dec
cdq
jle
jecxz
fdivr
sbb
mov
in
icebp
adc
sbb
(bad)
mov
lods
jbe
adc
add
add
repz
dec
mov
pop
dec
ja
jmp
lock
push
rcl
pop
xor
fsubr
stc
xchg
dec
xchg
dec
xchg
or
or
xchg
icebp
add
call
adc
adc
xor
ja
inc
add
dec
fld
add
add
adc
fld
sbb
fisttp
add
ins
push
lds
not
lock
cmp
ret
dec
mov
inc
push
jp
loopne
add
mov
xchg
inc
jne
xlat
mov
cmp
shl
fadd
ins
or
inc
lock
push
test
jmp
xchg
test
add
retf
adc
cmp
shl
pop
pop
ror
add
xor
inc
adc
adc
movs
sbb
and
(bad)
lock
lea
inc
adc
sti
int3
cmp
sbb
imul
shl
retf
lods
cmps
jmp
add
or
shl
add
leave
cmp
adc
popf
push
rcl
sbb
push
fstp
(bad)
jmp
inc
jno
fdiv
outs
adc
idiv
adc
or
add
add
movs
pop
or
dec
xor
mov
push
mov
xchg
and
fst
out
adc
jg
dec
loope
outs
adc
or
dec
inc
inc
pop
fdivr
cld
inc
xchg
imul
adc
sbb
test
out
push
mov
push
out
sbb
push
in
mov
mov
or
add
add
mov
ins
xchg
jne
add
and
imul
bound
adc
jle
ret
test
hlt
xor
dec
push
retf
mov
gs
xchg
pop
ror
ins
lock
or
push
lock
call
push
fptan
lea
outs
out
pop
jp
rcr
inc
aad
sbb
addr16
sbb
push
shr
sub
sbb
lock
jmp
pop
sub
outs
adc
ins
lock
outs
outs
out
jmp
push
sahf
pop
fwait
in
and
dec
push
scas
jp
pop
cmc
or
std
jnp
jmp
inc
or
icebp
imul
out
out
pop
fldl2e
(bad)
call
outs
out
mov
xchg
jne
push
leave
bound
inc
pop
add
je
mov
lock
repnz
pop
and
in
dec
out
test
add
jecxz
mov
push
xchg
ja
int3
inc
pop
pushf
aas
dec
mov
dec
mov
pop
or
fsubr
stc
sahf
push
jae
leave
add
in
push
je
or
mov
mov
add
mov
out
sbb
and
jecxz
pop
mov
fistp
inc
dec
mov
dec
mov
pop
or
jg
add
js
push
outs
jno
mov
add
mov
cmc
adc
cmps
or
add
add
mov
sti
and
int
loop
push
(bad)
fisub
sbb
add
ficomp
fadd
call
mov
(bad)
loopne
mov
fdivr
jne
ins
ins
or
jecxz
call
data16
pop
sbb
adc
iret
test
out
popa
sbb
pop
outs
xchg
inc
rol
jge
aad
pop
in
into
loop
je
outs
ins
or
cmp
out
push
ret
push
in
bnd
addr16
loopne
ins
fwait
(bad)
sub
jb
dec
jg
sub
jnp
sub
sbb
out
and
add
cld
jl
and
jmp
pop
add
lods
in
loope
test
inc
outs
sbb
jnp
jmp
xor
push
repnz
jl
aad
lock
outs
out
adc
jb
(bad)
jle
int3
ret
jge
mov
dec
push
jle
ret
das
mov
std
lods
leave
out
jno
sbb
fisub
jno
jl
push
xor
add
push
icebp
push
je
xor
ins
out
jecxz
(bad)
sti
pop
or
cli
fisub
xchg
xchg
jne
xchg
adc
push
outs
fwait
(bad)
mov
ins
jb
scas
jge
js
jle
mov
jle
ret
retf
xor
adc
out
pop
data16
add
fcom
sub
sbb
xchg
aam
nop
rol
mov
(bad)
in
popf
lea
pop
xlat
mov
push
ficom
dec
push
out
hlt
or
push
inc
out
sbb
or
inc
not
adc
loop
sbb
inc
add
shl
mov
adc
mov
ins
and
cmp
je
jb
pop
in
dec
push
cmp
add
ins
loope
ins
out
ret
mov
xchg
dec
int
popa
sbb
xchg
out
sub
loopne
ret
cmp
ins
sbb
adc
ret
je
rcl
jmp
inc
mov
arpl
test
add
add
add
inc
and
mov
jb
jg
lock
jno
mov
and
and
jmp
add
jo
test
mov
cmp
jmp
or
mov
or
cs
lock
sbb
stos
mov
xchg
cmp
jns
jne
mov
(bad)
sbb
add
xchg
jne
fimul
fadd
mov
rol
or
add
std
into
test
bound
fucomip
or
sbb
push
scas
out
stc
sbb
push
xor
sbb
mov
add
add
pop
sahf
inc
ins
add
popf
icebp
add
inc
xchg
pop
sbb
loop
push
retf
pop
or
jle
pop
retf
pop
xchg
sub
or
cmps
jmp
out
jg
ins
inc
fwait
mov
push
mov
ins
call
bound
inc
or
jmp
out
scas
jmp
add
rol
adc
test
inc
jmp
mov
les
pop
xchg
(bad)
cmp
aas
adc
dec
jmp
out
(bad)
cmp
std
rol
add
in
inc
movs
mov
jge
sub
sbb
adc
ret
or
movs
or
add
add
cdq
sbb
loope
mov
sbb
push
outs
pop
call
(bad)
in
add
push
xchg
inc
or
pop
xchg
jge
sub
jo
retf
inc
out
mov
dec
nop
fdivr
stos
inc
cmc
cli
(bad)
call
mov
shl
xchg
jne
sub
dec
jmp
add
add
jmp
inc
jb
sbb
in
jmp
pop
popf
leave
pop
(bad)
dec
mov
(bad)
loope
loop
out
xchg
mov
mov
mov
popa
sub
push
pop
xchg
dec
jns
data16
ret
adc
sub
sbb
pop
test
call
sbb
pop
ret
add
add
clc
scas
pop
jo
xor
out
test
cdq
in
add
dec
mov
push
inc
dec
lea
sbb
aad
pop
sbb
out
sbb
lahf
sub
adc
adc
retf
ins
out
sbb
ins
add
fwait
sub
sub
add
jae
sub
sub
fadd
cmp
fiadd
xchg
je
xchg
xchg
inc
leave
xchg
xchg
dec
mov
jns
in
addr16
out
gs
or
fsubr
ror
push
pushf
ror
in
in
sub
xchg
push
push
fiadd
out
stc
retf
(bad)
cmp
push
inc
out
mov
retf
cs
lock
popf
sub
das
jle
add
cmp
sar
mov
sub
xchg
rol
(bad)
or
in
mov
mov
mov
out
aad
pop
add
adc
ins
or
rcr
in
cs
pushf
lea
aad
fiadd
xchg
cmp
or
in
shr
gs
repnz
call
cs
pop
jne
inc
add
pop
hlt
push
ret
pop
pop
xchg
inc
mov
popa
repz
repnz
inc
int
out
push
sub
loopne
out
call
fnstcw
xchg
ret
out
ins
fimul
and
fst
call
sahf
sbb
sub
mov
sbb
popf
jne
add
aad
pop
add
cmp
sar
fcomp
call
dec
ret
sbb
ins
iret
push
std
call
mov
cs
rcr
jmp
and
dec
sub
sub
dec
imul
adc
imul
pop
push
push
or
std
jo
add
inc
sbb
sahf
fistp
xor
mov
xchg
cmp
jle
rcr
inc
and
push
sub
mov
adc
leave
xchg
fnstenv
repnz
imul
out
dec
mov
int3
xlat
pop
out
inc
scas
xchg
jne
mov
ret
xchg
jne
es
or
inc
xchg
jge
inc
out
jno
ins
or
cli
call
cmps
inc
or
scas
data16
add
add
jle
ret
xchg
jne
mov
and
(bad)
jle
int3
enter
cmp
in
loope
dec
push
pop
push
xchg
dec
rol
shl
mov
jmp
sub
mov
shr
outs
xchg
pop
jne
fld
in
aaa
cdq
jl
loope
fcomi
push
call
jo
mov
push
add
add
xchg
inc
test
push
call
(bad)
(bad)
cmp
out
adc
(bad)
cmp
icebp
push
push
scas
addr16
sbb
mov
xchg
in
inc
sbb
scas
(bad)
out
sbb
test
push
add
jne
sub
push
in
call
sub
add
push
xlat
push
jmp
es
lock
data16
sub
sub
or
repnz
bound
sub
lea
xchg
jne
and
cli
mov
popa
lock
out
adc
ins
xchg
inc
sbb
(bad)
sar
bound
fdiv
pop
enter
cmps
bound
clc
and
push
or
sbb
pop
pop
out
push
in
push
sub
loop
cmp
arpl
xlat
pop
ins
in
and
(bad)
push
jne
fsubrp
inc
sbb
inc
test
mov
aam
pop
out
sub
push
pop
pop
out
dec
push
sbb
cmp
mov
sub
sahf
repnz
jne
mov
and
test
add
sub
jmp
mov
in
cmps
mov
push
retf
mov
jne
sub
cmp
sub
ins
jecxz
mov
sub
pop
jecxz
mov
pusha
sub
dec
jecxz
jmp
sub
hlt
xchg
lock
jge
sub
std
les
add
add
jmp
and
je
mov
iret
ret
mov
mov
fs
push
mov
enter
cmp
sbb
xor
bound
hlt
out
or
call
es
popf
neg
jne
push
(bad)
ja
add
mov
leave
mov
stc
xlat
js
arpl
jle
test
add
add
sbb
and
xchg
popf
imul
jp
push
(bad)
jnp
sar
sbb
fcomi
pop
adc
jp
pop
cmp
xor
mov
and
repz
sar
pop
add
mov
fs
jge
enter
add
add
shr
xchg
or
out
add
loopne
jmp
adc
je
cmc
and
shl
jl
jge
js
mov
cmp
or
mov
sub
std
iret
cmps
add
rcr
call
pop
sbb
bound
xchg
cmp
xor
add
sar
inc
push
ins
mov
push
test
mov
xchg
pop
inc
or
adc
loopne
je
push
pop
or
movs
mov
add
fnstenv
ins
adc
out
adc
mov
arpl
(bad)
test
or
or
mov
push
mov
push
mov
stc
aad
test
add
add
push
dec
push
fwait
in
mov
inc
dec
push
sub
out
mov
and
test
jne
out
pop
mov
and
add
pop
or
fcom
add
pop
sbb
test
(bad)
loopne
xchg
jne
or
std
stc
repz
or
je
or
adc
pop
popa
out
push
jno
or
test
mov
lds
mov
push
(bad)
fcom
pop
in
bound
shr
xchg
inc
lods
push
pop
or
rcl
adc
lock
popa
out
in
pushf
aam
sbb
sub
push
or
xor
ret
mov
xchg
xchg
jge
push
(bad)
dec
lock
pop
mov
or
nop
clc
out
mov
popa
lock
in
fwait
shl
xlat
call
cdq
inc
ins
and
loop
movs
lea
mov
sbb
jmp
xchg
dec
leave
call
out
push
leave
or
or
or
je
or
sbb
out
mov
pop
or
fmul
jmp
enter
jnp
jmp
loopne
mov
cdq
in
bound
shr
xchg
dec
adc
pop
or
inc
adc
xchg
dec
out
cdq
inc
ins
sbb
lea
jne
or
jne
or
add
add
mov
jg
(bad)
call
push
lock
fld
push
or
inc
test
inc
inc
pop
pop
dec
ficom
xchg
ficom
push
xor
pop
sbb
(bad)
xchg
adc
dec
push
loopne
cmp
xor
test
add
push
call
out
push
add
jecxz
add
or
pop
data16
in
cmps
push
or
retf
(bad)
xchg
clc
scas
ficom
mov
xchg
xor
jg
jg
sub
shr
xor
cmp
cwde
xchg
fwait
rcr
and
stc
sbb
pop
inc
sbb
dec
les
sub
jb
sub
in
stc
sub
loop
push
hlt
push
dec
lock
sbb
inc
mov
mov
or
out
pop
xchg
jne
add
jne
push
sub
into
ret
loop
gs
lock
lock
ja
add
je
or
jmp
or
jmp
mov
cmp
imul
in
pop
or
or
pop
sub
or
mov
ror
fdiv
sbb
in
out
push
dec
lock
pushf
jg
imul
sbb
sub
adc
imul
xchg
in
inc
(bad)
sub
loopne
loop
ret
(bad)
call
jle
or
cmc
push
call
into
rcl
adc
test
loop
fimul
add
push
sahf
pop
sub
stos
into
pop
or
js
stos
test
pop
mov
test
aam
ins
or
or
ins
rcl
add
and
xchg
add
mul
adc
repnz
xchg
inc
shr
jmp
xchg
dec
jne
(bad)
add
add
inc
lock
fwait
jbe
test
jle
push
fmulp
push
jmp
and
xchg
inc
adc
test
or
shl
mov
call
shl
adc
ds
push
dec
mov
rcl
fild
in
mov
mov
ins
jae
adc
mov
(bad)
inc
lock
jnp
test
or
pop
adc
mov
jge
pop
pop
test
mov
or
call
fld
into
shr
xchg
test
setns
in
add
out
add
call
mov
add
add
je
push
pop
or
fsubr
mov
and
xchg
inc
push
and
jl
test
in
std
add
inc
add
outs
lock
or
out
in
or
xchg
add
out
jmp
rcl
adc
cwde
js
test
in
push
push
clc
mov
int
pop
ins
ins
fadd
and
mov
pop
add
ret
sbb
pop
ds
scas
test
out
sbb
pop
mov
fwait
gs
test
jne
imul
lock
pop
dec
cmp
inc
xchg
imul
add
add
shl
pop
or
xchg
retf
fidivr
sahf
in
xor
and
lock
out
out
loop
lock
ficom
enter
inc
out
jge
cmps
inc
and
gs
enter
stc
sbb
(bad)
and
stos
test
ror
inc
outs
add
xchg
cmp
push
mov
mov
pop
popf
leave
retf
leave
dec
cmp
loopne
sar
jo
jge
mov
or
sar
xchg
inc
aad
or
inc
stc
bound
or
xchg
cmp
call
sub
xchg
or
out
dec
dec
cmp
push
mov
arpl
rcl
sbb
in
or
test
add
mov
cmps
mov
jb
mov
imul
or
rcr
fwait
clc
fptan
xchg
or
dec
dec
mov
push
jmp
jne
push
jmp
xchg
add
imul
jge
pop
add
shl
lea
int
sub
add
add
add
pop
jl
loopne
scas
push
sbb
repz
push
pusha
jl
sbb
add
or
push
mov
jmp
mov
out
sbb
push
in
in
cmps
imul
mov
xchg
dec
mov
adc
mov
pop
gs
cmp
add
add
pop
clc
pop
cmp
icebp
add
out
push
add
fs
xchg
or
push
xchg
(bad)
jge
or
sub
lea
xchg
jne
or
in
aam
call
jmp
add
mov
test
into
mov
dec
call
scas
mov
add
add
mov
sbb
xor
ss
pop
jmp
mov
test
or
(bad)
fcos
push
adc
je
ins
ins
or
add
jmp
or
sbb
xchg
jnp
push
pop
or
dec
fimul
movs
in
in
es
add
push
xchg
inc
mov
shr
mov
xchg
jge
add
add
ins
or
shr
call
fnstcw
ins
ins
into
mov
xchg
add
cdq
pop
jbe
out
outs
pushf
rcr
xchg
inc
in
outs
push
push
adc
mov
adc
push
fiadd
add
inc
in
adc
push
mov
adc
dec
aad
mov
add
jmp
adc
cs
adc
int
ret
outs
out
fld
pop
in
dec
into
dec
call
adc
or
mov
stc
enter
xchg
dec
inc
adc
mov
iret
inc
leave
addr16
push
scas
jb
mov
xchg
xchg
inc
in
retf
aad
xchg
inc
popa
adc
jmp
add
add
adc
pusha
enter
cmp
call
ins
add
icebp
std
bound
sbb
and
adc
mov
loop
stos
add
rol
mov
pop
or
lds
mov
repz
mov
sbb
mov
inc
cmps
jae
test
add
or
jmp
push
outs
or
addr16
inc
sub
jno
mov
or
or
xchg
(bad)
jle
fimul
in
pop
mov
dec
cmps
enter
loope
shl
push
in
sbb
aam
iret
(bad)
inc
pop
jge
xchg
minps
inc
andnps
add
add
cmps
fdivr
loop
mov
icebp
aad
mov
sbb
push
int
adc
gs
sbb
pop
xchg
inc
mov
or
sahf
mov
pop
sbb
xchg
data16
test
xchg
xchg
inc
in
mov
add
adc
inc
or
push
cmp
lea
ins
fadd
add
add
mov
cvtdq2ps
push
sbb
in
adc
call
add
movs
imul
cmp
or
loope
mov
mov
pop
mov
xchg
inc
imul
pop
add
retf
int
verr
push
mov
bound
mov
pop
mov
add
add
lds
add
ins
xor
or
push
push
mov
or
sbb
xor
pop
add
(bad)
xor
pop
(bad)
sbb
xchg
(bad)
out
push
(bad)
sbb
movs
(bad)
call
call
movs
or
push
nop
(bad)
pop
cdq
or
adc
movs
push
sbb
cmps
sbb
add
push
clc
inc
gs
shl
xchg
inc
dec
or
mov
or
out
ins
jmp
adc
sar
pop
sub
fmul
stos
xlat
push
sbb
dec
push
enter
(bad)
push
fwait
cli
in
sbb
call
rcl
cmp
mov
mov
push
lock
mov
jae
mov
jmp
add
(bad)
out
sbb
mov
xchg
inc
test
jg
pop
jns
mov
jnp
call
and
jmp
sbb
and
movs
js
jg
mov
add
fist
inc
loopne
bound
push
or
jle
adc
add
sbb
aad
lock
sbb
test
xchg
dec
cmc
shl
sbb
(bad)
jmp
xchg
push
xchg
dec
mov
inc
jb
cmp
in
dec
jle
test
xchg
ror
stos
inc
add
add
outs
or
sbb
test
jle
(bad)
out
pop
sub
mov
fsub
js
pop
or
data16
sbb
cmps
cmp
jge
jle
or
pop
add
inc
jge
leave
and
push
lods
call
in
cmp
inc
sbb
xchg
dec
movs
jmp
add
pusha
inc
jle
leave
movs
adc
std
lods
jmp
jge
js
jge
call
sub
dec
call
out
inc
xor
jmp
loope
inc
cli
in
bound
loopne
and
jge
ins
scas
xchg
bound
add
enter
mov
jmp
add
add
jle
(bad)
cwde
jns
mov
aad
sar
push
push
fdivr
pop
mov
inc
scas
push
dec
push
std
adc
inc
or
push
mov
xchg
pop
mov
ins
adc
mov
or
mov
ins
mov
push
or
faddp
push
and
cdq
shl
jb
jg
icebp
pop
add
(bad)
loopne
lock
out
fdivr
add
iret
xchg
pop
xor
dec
add
or
adc
push
mov
sahf
(bad)
mov
lods
sbb
jl
test
push
xchg
sti
std
mov
add
ins
xchg
inc
test
inc
xor
je
ret
dec
mov
or
fwait
(bad)
adc
adc
out
jge
add
xchg
call
pop
iret
and
fcom
test
xor
xor
lea
dec
call
dec
out
icebp
push
jne
jae
call
out
mov
jp
push
push
enter
push
rol
movs
push
dec
mov
push
sbb
fldenv
movs
rcl
inc
xchg
ror
hlt
idiv
dec
jno
ins
clc
int
movs
call
pop
hlt
fnstcw
icebp
add
repnz
adc
inc
jl
add
add
jge
jge
test
inc
loope
out
loopne
xchg
jne
clc
pop
mov
or
nop
(bad)
cli
(bad)
call
ins
push
loope
jns
ror
in
int
pop
mov
jl
inc
or
(bad)
loop
sbb
lods
push
pop
add
xchg
or
lock
xchg
sbb
push
jae
add
add
or
(bad)
mov
je
jp
or
jmp
adc
and
inc
fiadd
sbb
jl
jge
push
mov
sbb
test
xchg
fmul
mov
pop
or
inc
movs
call
fdiv
outs
or
data16
add
add
ins
adc
rcr
push
mov
scas
inc
jle
test
icebp
sbb
push
mov
ins
retf
bound
add
neg
mov
xchg
sbb
mov
sbb
rcr
xor
out
adc
or
jmp
or
xchg
cld
push
add
arpl
mov
add
sbb
adc
scas
inc
fiadd
arpl
sbb
add
or
and
repz
stos
pop
add
retf
and
out
es
add
ror
adc
mov
or
(bad)
cmp
or
inc
imul
add
inc
jl
or
push
and
add
ret
out
pop
mov
pusha
add
fisub
adc
stc
pop
add
mov
adc
jl
jge
xor
xchg
(bad)
cmp
mov
jl
and
mov
mov
add
add
jmp
push
xchg
jne
or
popf
fisub
je
mov
xchg
icebp
int
(bad)
jmp
pop
add
mov
sbb
xchg
or
sahf
enter
pusha
out
push
les
jne
inc
pop
inc
and
pop
inc
adc
adc
movs
or
mov
add
add
xor
pop
outs
outs
lock
jge
mov
jg
inc
(bad)
pop
add
xlat
mov
xchg
dec
cdq
addr16
(bad)
jge
inc
test
mov
out
hlt
fisub
or
fwait
mov
push
mov
bound
or
fadd
sbb
push
jg
add
add
outs
inc
push
jne
xchg
call
inc
inc
inc
fnstenv
inc
sbb
daa
pop
je
xchg
sub
enter
outs
mov
inc
in
inc
inc
inc
(bad)
cmp
call
repz
and
push
add
and
je
xchg
cs
jle
add
add
add
sbb
(bad)
fld
(bad)
fnclex
sbb
loop
jge
mov
cwde
jnp
jle
sub
icebp
push
shr
mov
adc
jnp
and
lock
test
pushf
mov
mov
ins
cs
jle
(bad)
fsubr
mov
out
push
(bad)
pusha
sub
into
jne
add
add
sbb
adc
fptan
loopne
mov
int
mov
addr16
dec
mov
or
mov
sub
cld
sbb
outs
mov
and
pushw
fs
aad
cmp
mov
je
push
aam
xor
outs
sbb
ins
nop
dec
or
xchg
push
mov
pop
pushf
add
test
add
push
repz
adc
lea
pop
or
xor
cdq
ja
dec
popf
ins
jge
push
mov
inc
popf
neg
aad
add
and
cli
sbb
or
add
add
in
xchg
xchg
dec
ins
or
(bad)
adc
pop
neg
mov
sbb
sub
sbb
adc
sbb
sub
pop
add
int
adc
shr
cmc
mov
or
mov
std
xor
loop
or
in
out
rcl
sbb
sub
adc
cld
imul
push
mov
adc
push
scas
pop
mov
dec
pop
sub
imul
adc
push
xchg
fwait
test
sbb
push
cli
jnp
rol
jge
pop
jne
or
(bad)
fmul
fiadd
add
add
lock
sbb
xor
xor
fwait
mov
mov
xor
ins
inc
out
aad
cwde
add
sub
stc
adc
push
scas
pop
mov
inc
pop
sub
push
add
std
xor
pop
cdq
xchg
inc
pop
add
push
stc
cmp
fs
add
and
sbb
into
leave
adc
sbb
out
sub
sbb
call
stc
adc
aad
pop
(bad)
movs
mov
call
outs
mov
or
xor
fwait
mov
mov
or
(bad)
adc
sbb
add
lock
add
adc
push
pop
out
imul
(bad)
ficom
jbe
into
(bad)
push
mov
lea
mov
xchg
ret
dec
mov
or
sahf
xchg
(bad)
push
sub
lods
sbb
or
sahf
rcr
lds
dec
sbb
retf
sbb
fadd
pop
add
add
add
xchg
push
fnstcw
sbb
out
pop
or
inc
(bad)
fiadd
adc
jp
test
sbb
sbb
inc
test
or
iret
add
pop
test
in
mov
dec
add
retf
pop
pop
pop
or
pop
int3
enter
mov
add
add
sbb
mov
adc
inc
push
pushf
nop
xchg
dec
sbb
or
leave
jg
adc
shl
shl
ret
mov
les
call
dec
push
jo
std
ins
mov
movs
add
xchg
or
pop
sub
hlt
mov
fadd
jg
jmp
cmps
xchg
inc
lea
pop
mov
mov
adc
cmc
adc
in
lds
call
ffreep
add
fwait
cdq
fiadd
test
inc
rol
add
icebp
hlt
call
lods
jmp
push
addr16
adc
ss
out
test
push
sbb
cdq
lods
in
cdq
gs
test
add
add
in
dec
clc
lock
push
repnz
jmp
xchg
dec
mov
or
lock
test
add
aas
inc
fiadd
in
jno
mov
push
in
sbb
or
mov
xchg
in
test
xchg
pop
dec
(bad)
bound
add
jecxz
iret
iret
in
sub
add
add
pop
out
bound
daa
push
in
pop
lea
ja
push
cmp
std
sub
xchg
(bad)
push
inc
pop
scas
dec
fadd
pop
pop
add
or
add
lea
mov
xchg
inc
jne
outs
or
push
pop
or
adc
or
out
out
in
(bad)
aas
add
inc
add
cmps
sti
jmp
pop
inc
push
inc
pop
inc
push
push
fucomip
les
jmp
sbb
imul
clc
daa
push
faddp
add
xchg
xor
clc
movs
jbe
aam
jne
ror
repz
call
push
mov
fadd
mov
scas
fmul
call
jns
or
add
add
jmp
sbb
push
inc
push
pop
fdivr
push
add
ror
mov
inc
xchg
jo
push
push
inc
(bad)
out
xlat
or
fwait
push
sar
lods
out
sbb
inc
out
sbb
cmps
sbb
cmp
sbb
inc
std
mov
adc
pop
imul
lods
retf
mov
test
adc
push
cmp
fstp
test
mov
mov
inc
icebp
std
fs
icebp
sub
inc
xchg
xchg
dec
popf
imul
and
xchg
(bad)
pop
or
cld
mov
repz
ins
imul
fwait
(bad)
adc
mov
out
jge
sbb
jle
call
or
mov
or
add
mov
xchg
inc
sbb
outs
out
fisub
pop
sub
mov
mov
inc
jo
jge
lds
pextrw
xchg
stc
dec
clc
call
adc
dec
outs
out
enter
out
adc
lods
mov
jmp
sar
sar
xchg
dec
popa
(bad)
lock
mov
sbb
icebp
jmp
pop
call
out
xchg
xor
push
mov
jo
sub
or
cmp
inc
jo
jge
mov
add
aad
aam
in
xchg
fstp
adc
clc
ins
out
sbb
pop
popf
in
mov
lock
add
pop
jge
and
icebp
jmp
pop
lea
mov
popa
out
out
call
jne
jmp
faddp
adc
lods
xor
call
lds
or
pop
sbb
adc
or
inc
push
bound
or
xchg
clc
or
mov
dec
mov
les
mov
mov
xchg
dec
(bad)
mov
jns
or
or
cdq
imul
jl
adc
dec
jo
pop
movs
or
or
lock
cli
inc
out
fnstcw
adc
push
mov
pop
or
and
imul
pop
call
vsubps
or
or
mov
xor
test
loop
out
push
out
push
icebp
add
addr16
scas
aad
inc
lea
inc
sbb
dec
cdq
icebp
call
push
out
push
aam
add
outs
sub
call
jl
pop
les
fst
pop
fwait
in
(bad)
ror
(bad)
in
lea
dec
(bad)
and
cwde
imul
mov
push
xchg
inc
imul
xchg
inc
dec
push
adc
enter
out
jae
call
jns
aam
outs
out
adc
repnz
cmp
add
xchg
xchg
dec
mov
out
add
(bad)
dec
std
clc
add
mov
and
inc
(bad)
in
dec
cdq
sbb
pop
clc
out
mov
mov
push
add
add
(bad)
enter
gs
push
in
int3
leave
lock
cdq
ds
or
adc
mov
ins
hlt
mov
adc
jmpw
pop
leave
lock
ins
push
mov
push
dec
add
jge
or
sbb
fcomi
ins
hlt
push
ret
fsubr
add
xlat
and
jmp
jmp
add
adc
fadd
into
sbb
int
fiadd
gs
or
ftst
add
sbb
push
jb
call
in
dec
add
adc
fcom
push
stos
retf
or
retf
in
pop
in
enter
dec
xchg
inc
gs
pop
fcomp
mov
enter
out
ins
hlt
dec
sbb
movs
test
hlt
or
stc
movs
je
rol
(bad)
mov
in
(bad)
pop
add
mov
test
sub
icebp
xor
mov
add
add
fcom
in
pop
hlt
pushf
(bad)
loopne
sbb
bound
idiv
push
sahf
jg
jl
test
(bad)
not
call
pop
(bad)
adc
in
sbb
je
bound
in
in
test
mov
(bad)
loopne
xchg
jne
jmp
add
cmps
je
out
adc
mov
add
add
sbb
test
mov
sbb
mov
sbb
popa
in
pop
in
mov
cli
movs
je
and
jl
test
or
push
sbb
sbb
pop
jmp
mov
xchg
pop
dec
adc
mov
in
push
hlt
ins
mov
out
pop
push
inc
fstp
xchg
inc
pop
jmp
jbe
ror
loop
out
push
repz
mov
xchg
inc
frstor
jl
or
sbb
push
hlt
fdivr
out
shl
hlt
mov
popa
aam
pop
xchg
dec
or
jmp
add
add
cmp
sub
mov
data16
or
repnz
push
jmp
jmp
mov
call
in
xchg
adc
adc
dec
lds
in
inc
pop
fadd
add
icebp
cmp
mov
mov
popa
inc
xchg
call
dec
push
xor
inc
lea
add
add
movs
add
cmp
mov
sbb
sbb
mov
sbb
mov
mov
fwait
in
stc
rcl
push
mov
loopne
fdiv
inc
icebp
repz
enter
(bad)
pop
mov
pop
ins
or
jmp
pop
add
jmp
pop
sbb
xchg
lea
out
lock
and
jmp
stc
movs
je
jmp
xchg
inc
jns
dec
or
add
add
inc
push
into
sbb
hlt
fiadd
ins
adc
ret
call
call
rol
aad
xchg
dec
and
dec
or
push
add
add
ja
sbb
(bad)
aad
add
out
jge
jmp
pop
dec
shl
pop
mov
out
clc
dec
ret
in
mov
xchg
inc
cdq
cwde
push
or
mov
pop
or
jmp
lods
stos
in
rcr
adc
sub
ret
mov
xchg
pop
dec
popa
repnz
add
push
mov
(bad)
pop
jmp
sbb
shr
es
fdiv
cmp
jg
(bad)
shl
lock
arpl
jmp
push
cld
cdq
inc
ins
or
adc
in
push
or
jp
inc
or
push
or
or
(bad)
lock
pop
lock
pop
out
mov
dec
test
adc
add
add
test
and
mov
mov
pop
int3
inc
push
add
jmp
cmp
add
xor
inc
lea
mov
push
into
inc
inc
jle
call
jle
cmp
cmp
pop
sahf
popa
inc
ret
test
icebp
xor
xchg
or
pop
lds
int
sbb
into
xchg
fstp
shl
fsub
cmp
jno
fcom
adc
and
imul
adc
pusha
popa
out
or
jo
jne
in
hlt
dec
ret
lock
(bad)
call
in
pop
in
mov
add
or
add
add
xchg
inc
jno
lock
adc
sbb
sahf
mov
(bad)
adc
adc
mov
pusha
fsubr
call
outs
fsub
mov
xchg
adc
aam
jne
inc
fisttp
sbb
sbb
inc
lods
test
pop
sub
or
dec
push
mov
add
pop
add
jle
mov
pusha
mov
push
lock
(bad)
call
dec
popf
shl
call
ret
sbb
add
xchg
jne
jmp
clc
std
loope
jmp
movs
je
and
jl
jge
jo
sbb
ret
sbb
pop
les
test
pop
add
mov
mov
or
pop
adc
sbb
jle
cmp
loopne
lea
xchg
inc
ror
push
and
popa
in
pop
lock
lock
pop
sbb
loopne
xchg
jne
dec
loope
adc
rcr
adc
loope
sbb
ret
pop
dec
inc
push
add
jmp
fwait
jge
mov
xchg
(bad)
push
fisttp
add
jne
aam
mov
push
pop
dec
fist
push
repz
adc
fs
push
adc
xchg
pusha
adc
add
gs
jne
add
add
or
ins
jmp
or
xchg
and
repz
mov
jmp
jmp
jmp
or
dec
xchg
jne
jmp
mov
cmps
sbb
mov
adc
daa
data16
popf
adc
lock
mov
push
bound
pop
out
ret
push
and
int3
call
push
loop
add
ret
and
out
sub
jmp
xor
push
xor
and
add
push
mov
cmp
pop
mov
mov
loope
sbb
fstp
and
add
add
sbb
add
call
bound
test
inc
or
or
xchg
jmp
ins
xor
rcl
or
je
cdq
or
gs
icebp
mov
jmp
or
out
mov
fadd
add
add
xchg
inc
pop
jmp
sbb
mov
add
adc
xchg
pop
(bad)
out
pop
mov
mov
xchg
jo
dec
aas
cmp
sbb
pop
aad
xchg
inc
jmp
call
sbb
adc
arpl
push
xchg
jg
inc
cdq
jmp
dec
jae
nop
in
loop
xchg
xchg
inc
imul
sahf
jl
jg
js
call
out
pop
xchg
sbb
jno
in
sub
jne
dec
sbb
lds
add
sbb
repz
or
mov
jo
cmc
pop
cld
adc
pop
clc
push
loopne
add
add
add
jp
add
jnp
inc
(bad)
ins
adc
loopne
out
cwde
inc
xchg
pop
sbb
in
mov
push
cs
add
lock
push
xchg
inc
lods
push
or
dec
call
(bad)
leave
in
adc
xor
jle
or
mov
pop
add
add
add
adc
push
mov
jne
push
sbb
and
repz
xchg
and
(bad)
je
dec
popa
out
cmp
dec
xchg
add
(bad)
cmps
jne
pop
dec
cmp
jbe
push
push
jno
in
lods
cwde
xchg
fsubr
enter
fwait
pop
bndstx
loope
lea
xchg
pop
ins
add
shl
ror
inc
pop
push
pop
clc
out
xchg
adc
leave
in
call
fld
push
sahf
mov
xchg
mov
add
lds
out
fwait
arpl
test
mov
or
(bad)
adc
cwde
push
xchg
jge
add
add
(bad)
or
enter
xchg
add
mov
dec
push
inc
ins
out
movs
test
or
add
jmp
push
pop
or
ror
mov
push
mov
dec
fcom
fwait
xchg
icebp
into
call
sub
sub
add
add
add
jae
or
data16
sub
imul
adc
or
out
inc
popf
cwde
jp
sub
add
push
lea
sbb
rcl
xchg
jle
or
mov
add
int3
adc
jno
adc
call
add
add
xchg
mov
mov
push
std
jns
jmp
xchg
add
fnstenv
sub
add
in
pop
fdiv
int3
mov
(bad)
in
cmp
xchg
lock
xchg
mov
pop
xchg
jne
xchg
in
mov
lock
pop
out
jno
into
mov
and
sub
pop
cdq
or
fcomp
inc
ins
or
cwde
jge
sub
xchg
dec
ins
jnp
jne
or
dec
or
lea
lods
popf
adc
cld
pop
out
and
mov
or
add
add
add
in
sub
in
imul
or
call
pop
les
adc
xchg
adc
or
leave
sbb
or
push
pusha
adc
mov
sbb
daa
push
sbb
fwait
lds
out
adc
adc
adc
xor
add
add
sub
sbb
sub
es
(bad)
or
sahf
ret
sbb
fisttp
sbb
nop
ret
sbb
fld
popa
adc
lea
call
adc
or
dec
mov
call
out
out
cmps
sbb
push
push
test
mov
add
add
and
mov
call
mov
js
adc
out
dec
xchg
add
pop
push
add
push
xchg
dec
pop
jns
or
or
add
popf
or
pop
add
inc
inc
ret
mov
sar
mov
call
pop
(bad)
sbb
lods
push
push
outs
rcl
fwait
mov
add
add
pop
clc
mov
jmp
or
cmp
push
ins
sbb
xchg
enter
cmp
push
sub
sbb
mov
xchg
sbb
sbb
push
and
mov
and
mov
call
into
or
mov
ins
retf
and
mov
add
jmp
rcr
loopne
(bad)
js
ss
mov
adc
mov
ss
dec
clc
pop
add
mov
cmp
or
ins
mov
jmp
or
cwde
or
push
pop
xchg
inc
lods
(bad)
ins
adc
iret
push
mov
xchg
dec
lea
and
cmps
mov
add
add
push
out
out
ins
add
scas
sbb
add
xchg
sbb
pop
or
pop
push
cwde
or
mov
out
mov
and
out
sbb
aam
add
imul
sbb
push
out
imul
inc
in
inc
or
add
aad
cwde
jg
test
dec
repz
les
mov
addr16
or
xor
mov
pop
xchg
adc
push
and
mov
mov
add
aad
ins
add
mov
mov
push
xchg
dec
sbb
cmp
sub
sbb
add
icebp
push
mov
sbb
mov
sbb
(bad)
pop
add
(bad)
or
and
mov
mov
or
mov
sahf
add
xlat
in
add
test
and
nop/reserved
out
xchg
add
jge
push
mov
adc
add
add
dec
fadd
test
cli
push
test
mov
test
sahf
sbb
scas
ret
adc
xchg
pop
or
dec
xchg
add
les
sbb
or
dec
push
sbb
aad
push
or
or
movs
push
fadd
adc
gs
xor
cwde
jns
sub
ret
or
push
dec
fadd
xor
xchg
sbb
arpl
popa
adc
adc
cwde
js
test
fiadd
imul
mov
xchg
jbe
push
xchg
and
sbb
adc
sbb
pop
or
or
or
sub
add
cmp
or
fwait
push
sahf
inc
stc
adc
adc
or
mov
push
add
jge
call
push
jns
jl
sbb
dec
push
out
stc
mov
adc
fnstsw
xchg
dec
pop
push
mov
sbb
or
into
push
xchg
push
dec
or
add
add
or
push
add
lea
lds
pop
add
enter
add
xchg
push
jmp
add
jmp
add
or
inc
jmp
xchg
adc
push
mov
(bad)
dec
add
xchg
sbb
mov
bound
js
add
or
cdq
push
and
mov
mov
mov
add
or
cmps
jmp
cmps
cmovno
pop
mov
mov
inc
push
lods
push
xchg
dec
sub
or
(bad)
in
sbb
mov
sbb
xchg
fwait
shr
xchg
dec
in
pop
push
mov
add
adc
mov
pop
pop
or
mov
fadd
sbb
mov
jb
or
push
xchg
pop
jns
arpl
add
enter
in
out
in
rcl
mov
add
out
jge
movs
inc
adc
add
add
gs
scas
and
addr16
bound
or
fst
(bad)
mov
sub
repz
xchg
or
or
inc
ins
jp
scas
or
push
mov
jne
or
cs
and
les
mov
repz
icebp
add
lods
adc
call
jg
add
cmp
adc
xchg
enter
js
jg
imul
push
sbb
out
adc
stos
sbb
and
or
dec
mov
or
out
dec
aam
or
pop
ror
mov
add
add
jp
lock
gs
jle
jo
mov
(bad)
ds
mov
mov
sbb
push
push
xchg
dec
pop
test
add
mov
mov
jp
sbb
mov
inc
sbb
xchg
sbb
out
pop
fwait
ror
xlat
je
aam
mov
dec
nop
inc
xor
sbb
pop
dec
sbb
aad
fld
aad
cwde
jg
jl
test
sbb
dec
and
call
add
or
push
xchg
add
push
sbb
xchg
rcl
adc
cli
cdq
add
xchg
add
mov
xchg
inc
pop
add
add
fs
data16
test
sahf
test
jne
cmp
adc
cmp
adc
test
adc
mov
fadd
adc
xchg
dec
sbb
test
sbb
cmp
out
in
popa
adc
mov
(bad)
call
adc
or
int
add
add
or
push
mov
xchg
add
mov
fadd
test
mov
dec
xchg
inc
ins
jge
add
pop
jmp
repz
sahf
sbb
scas
ret
adc
call
sbb
jmp
test
mov
into
pop
adc
mov
mov
add
or
fadd
xor
in
sbb
sbb
push
ins
ror
ins
into
pop
sbb
or
add
int3
pop
sbb
push
xchg
inc
jno
push
adc
push
xchg
dec
cdq
sub
gs
gs
xchg
in
out
ret
adc
ficom
jp
sub
mov
test
push
sub
dec
or
jns
add
and
dec
add
dec
ins
add
xor
mov
adc
mov
retf
aam
push
or
push
fld
pusha
adc
ja
push
add
mov
mov
and
test
icebp
nop
ins
add
or
adc
addr16
mov
xchg
fiadd
xchg
dec
mov
dec
data16
adc
adc
inc
aas
xchg
ss
xchg
and
cmp
pop
ret
call
lea
xchg
(bad)
shr
mov
add
call
in
bound
fild
fucom
pop
add
(bad)
fucomi
xor
in
out
out
push
ss
das
xchg
enter
call
out
push
inc
jmp
sub
icebp
push
into
xor
fsub
out
call
xchg
lock
scas
inc
inc
pop
addr16
push
stc
rcr
test
cs
mov
lock
mov
lea
aad
jge
in
fisttp
int3
push
or
adc
sbb
out
fld
fiadd
pop
add
sub
and
adc
adc
add
jne
push
mov
jecxz
bound
jecxz
bound
lock
scas
sbb
std
xchg
fwait
(bad)
call
ret
sbb
test
xor
inc
mov
lock
pop
add
mov
cmp
xchg
in
int
lock
dec
jg
add
add
(bad)
add
jg
(bad)
or
inc
xchg
shl
sbb
push
sbb
psubusw
jmp
jo
std
loop
inc
push
daa
inc
scas
gs
push
fdivr
push
test
aas
mov
retf
movs
je
jns
je
lods
lock
test
je
aaa
fwait
gs
xchg
add
add
jnp
aaa
out
icebp
neg
shr
in
cdq
leave
bound
inc
mov
jle
push
cs
jle
jle
adc
sbb
int3
ss
out
mov
adc
push
mov
pop
add
shl
mov
add
add
or
test
cmp
jne
xchg
lock
sbb
retf
jne
adc
mov
test
mov
and
mov
inc
movs
lds
aaa
mov
xor
add
call
push
popf
rcl
xchg
dec
cdq
js
add
inc
out
fsub
(bad)
sbb
mov
mov
test
jle
push
push
mov
inc
and
pop
test
daa
sbb
call
or
rcl
fmul
sbb
add
push
add
in
jo
popf
jg
inc
adc
test
mov
add
add
cmp
call
(bad)
(bad)
adc
mov
or
lock
mov
pushf
(bad)
jne
retf
inc
cld
sahf
sub
(bad)
push
stc
jge
pop
mov
icebp
add
inc
xchg
push
stos
mov
add
and
cs
retf
push
mov
add
add
add
add
(bad)
icebp
(bad)
in
sbb
and
sub
pop
mov
popf
dec
xchg
dec
or
push
or
dec
loope
pop
add
aas
push
add
(bad)
jns
jo
jge
std
inc
movs
cmps
mov
xchg
sbb
inc
xchg
dec
push
cmp
push
pop
sub
inc
rcr
mov
add
add
sbb
out
rcl
ss
out
es
mov
and
int3
pop
or
xchg
dec
or
enter
jno
xor
jle
add
add
jne
stc
sbb
fwait
stc
in
inc
push
sub
clc
lods
les
cmc
jae
mov
add
add
cmp
pop
mov
mov
sbb
fiadd
push
and
ds
add
outs
xchg
push
sbb
sar
lods
sub
call
cld
push
or
sbb
sbb
sbb
mov
cmp
xchg
inc
pop
sub
mov
sbb
sub
cmp
dec
inc
test
cmp
pop
xchg
adc
sbb
push
pop
push
mov
test
jb
push
mov
fld
out
sbb
ins
mov
add
add
lds
fs
dec
xchg
inc
xchg
sbb
in
in
pop
mov
dec
sbb
xchg
clc
mov
(bad)
ins
or
test
pop
add
jne
(bad)
(bad)
fidivr
xchg
dec
mov
sbb
pop
out
retf
push
sbb
sbb
jmp
jge
mov
movs
inc
or
ins
cdq
ror
add
jle
ds
mov
sub
xchg
and
cdq
dec
adc
out
std
push
mov
xchg
xchg
lock
pop
(bad)
push
out
inc
popf
adc
xchg
mov
mov
nop
lock
jmp
test
jmp
and
add
mov
sbb
ins
mov
xchg
mov
sbb
fdiv
mov
add
sbb
adc
shl
out
mov
add
add
jg
dec
dec
sub
push
cmp
fmul
aad
movs
dec
int
xchg
pop
popf
xchg
nop
pop
popf
xchg
nop
dec
lods
jp
je
retf
lahf
retf
sbb
xchg
js
enter
inc
xchg
jo
retf
fidivr
fsincos
mov
mov
fimul
loope
mov
fabs
sbb
jne
dec
sub
jne
dec
cmc
icebp
adc
or
lahf
(bad)
cmp
or
jmp
ins
(bad)
xor
pop
scas
cmp
sbb
push
adc
push
mov
adc
cld
jge
test
jle
add
add
add
dec
sub
ins
inc
sbb
xor
jns
pop
add
mov
call
out
in
sar
mov
std
mov
adc
fdivr
inc
xor
sbb
ins
mov
cdq
test
jge
jmp
repz
adc
push
pop
add
push
lds
mov
ret
sbb
adc
aas
pop
(bad)
sub
jo
inc
ss
push
cmc
out
test
inc
out
scas
call
sbb
ret
(bad)
int
mov
push
inc
sbb
cmp
mov
lock
das
xchg
rcpps
adc
daa
test
add
add
add
xchg
pushf
jmp
test
dec
repnz
je
int
je
ins
test
push
in
js
bound
inc
gs
test
dec
pop
cld
(bad)
test
add
loopne
inc
outs
adc
pop
test
push
test
rcr
ret
add
ret
push
mov
test
fld
in
les
(bad)
fild
and
neg
ret
bound
jo
lock
jbe
sbb
test
pop
jle
cmp
sbb
mov
out
fsub
push
lea
in
inc
aam
inc
inc
xchg
add
jmp
clc
push
inc
jle
mov
mov
jmp
mov
movs
sbb
enter
mov
out
pop
mov
out
rcl
fld
sbb
push
jmp
clc
(bad)
(bad)
jge
xchg
(bad)
sbb
(bad)
in
inc
jmp
xchg
into
std
fstp
jne
imul
test
outs
(bad)
call
add
xchg
inc
dec
(bad)
xchg
test
out
mov
ins
clc
inc
(bad)
jge
mov
in
jmp
or
(bad)
(bad)
xchg
push
outs
sub
std
in
add
sbb
mov
std
mov
inc
lea
inc
xchg
push
xor
adc
out
call
adc
add
add
sbb
stos
pop
add
rcr
call
or
(bad)
call
call
xor
pop
jmp
push
pusha
or
inc
call
shr
cs
loop
cmps
jmp
add
sbb
jp
pop
add
fild
add
add
neg
inc
dec
pop
push
std
or
add
xor
jmp
pop
pushf
xor
jmp
push
sbb
in
push
sbb
(bad)
jge
movs
inc
adc
jmp
jmp
or
call
cdq
inc
ins
jo
in
inc
in
push
mov
add
jae
inc
or
popf
xor
out
sbb
in
aad
sbb
div
out
jge
movs
inc
movs
or
jmp
push
dec
inc
aad
daa
push
loopne
int3
call
(bad)
fs
rol
int3
push
loopne
(bad)
(bad)
(bad)
std
push
call
in
xchg
movs
inc
and
std
out
pop
std
out
scas
xchg
add
inc
dec
lods
and
call
test
cmps
jp
sbb
add
or
test
jle
add
jg
dec
rol
lods
add
(bad)
push
je
fs
pop
jg
dec
cmc
out
ins
loop
xchg
inc
add
add
push
jg
add
mov
jmp
adc
sub
test
in
add
push
jg
ror
adc
mov
jg
cmp
fsubr
inc
pop
call
add
fdivr
push
(bad)
imul
lds
enterw
shl
(bad)
mul
shl
fld
add
add
jmp
aam
adc
(bad)
leave
shl
pop
jle
dec
rcr
push
mov
out
pop
mov
in
mov
test
add
sub
or
rcr
call
jmp
mov
out
add
cwde
xor
inc
aas
rcr
lock
inc
jno
out
mov
in
fmul
lea
into
lock
out
adc
push
jmp
lock
push
mul
mov
or
cmp
shl
sbb
jg
mov
call
push
ret
and
adc
dec
imul
mov
dec
je
add
add
test
imul
gs
jle
inc
or
xchg
inc
inc
into
lock
or
out
xor
mov
std
cmp
adc
mov
ret
pop
inc
(bad)
cli
jnp
sbb
fld
je
lods
sbb
jo
xchg
in
sar
adc
dec
bound
std
sbb
stos
std
loopne
pop
sbb
xchg
add
xchg
add
jne
add
xchg
dec
pop
add
nop
inc
dec
or
mov
in
aad
push
test
add
cmp
pushf
add
ja
call
mov
mov
add
add
test
leave
das
jle
(bad)
ja
lea
cli
out
mov
mov
in
adc
lock
cli
out
mov
pop
add
mov
push
call
sbb
and
adc
push
call
call
out
in
into
dec
out
out
call
jge
inc
or
shl
and
rcl
or
lds
mov
or
outs
repnz
dec
xor
clc
lods
jmp
cmps
jne
in
or
adc
add
cdq
shr
jmp
add
add
add
or
mov
xchg
inc
cmp
sbb
sbb
sbb
call
out
ins
in
xor
or
into
xor
pop
sbb
sbb
jno
mov
jmp
mov
lock
adc
sbb
call
nop
sar
dec
icebp
out
outs
hlt
std
jb
sbb
fld
ret
jmp
xchg
jne
add
xchg
or
cmp
call
pop
fsubr
cmp
out
lods
enter
inc
sbb
cmp
mov
lock
stc
sbb
fmul
movs
je
cmp
je
gs
stos
call
add
add
pushf
imul
jle
inc
(bad)
int
test
out
out
(bad)
repz
jge
xchg
je
lea
in
inc
into
lock
cmp
and
sti
fs
(bad)
int
(bad)
push
xor
std
out
out
push
in
out
loop
lods
mul
out
xchg
inc
xchg
push
mov
dec
mov
call
and
sbb
lea
std
fwait
pop
sbb
pop
or
into
adc
loopne
nop
inc
popa
call
cdq
shr
lock
test
std
cmp
in
out
push
fs
jg
sbb
pop
lock
loope
lea
mov
add
arpl
lea
out
icebp
into
xchg
inc
loope
xchg
inc
lods
or
out
xor
call
xchg
in
or
hlt
mov
out
std
addr16
jg
mov
pop
cwde
inc
add
or
stos
jecxz
bound
pop
in
(bad)
jmp
call
push
ss
jne
mov
add
add
ss
jle
mov
pop
or
mov
std
mov
aad
push
mov
push
cli
jl
in
pop
mov
add
out
jge
inc
enter
or
out
(bad)
jmp
ds
pop
inc
aad
inc
xchg
adc
pop
ss
sar
mov
add
inc
out
sub
xor
(bad)
fidiv
pop
in
mov
sbb
add
lods
rol
call
out
out
push
push
mov
aad
inc
in
adc
mov
gs
fisttp
pusha
leave
lock
dec
dec
(bad)
data16
ret
dec
mov
aad
add
add
add
cmps
or
or
mov
inc
or
jb
mov
add
xchg
adc
repz
push
fst
or
jnp
inc
aaa
sar
sbb
popa
inc
adc
inc
inc
pop
addr16
push
xchg
pop
add
cmps
mov
add
or
dec
call
pushf
inc
dec
mov
inc
fstp
aad
push
adc
jmp
or
pop
test
imul
mov
es
(bad)
cmps
leave
(bad)
aam
mov
push
ins
ins
cmp
mov
test
fbstp
fld
and
add
popa
jnp
loopne
dec
sbb
aas
sbb
inc
add
mov
sub
and
jns
ja
jbe
cmp
or
mov
lods
push
add
(bad)
jl
jno
cmp
xchg
cmp
leave
sbb
mov
push
xor
add
add
ret
inc
and
sbb
xchg
rcr
out
sar
pop
dec
pop
jp
inc
sbb
fdivr
imul
test
pusha
xchg
cmp
add
out
lods
mov
sub
jl
fwait
jns
sub
jle
cmp
push
mov
stos
push
add
in
popa
out
xchg
leave
jmp
ja
xor
mov
aad
mov
adc
arpl
xor
add
inc
rol
push
pop
loopne
stos
mov
cwde
fist
rcr
in
les
xor
out
cwde
icebp
out
bound
ins
or
hlt
fld
add
add
lds
(bad)
aam
sbb
or
inc
pop
cdq
inc
push
out
es
es
out
jmp
jbe
xor
leave
xchg
mov
in
out
add
test
add
pop
add
addr16
js
or
lea
sub
pushf
jo
jne
mov
call
add
out
sub
pop
or
imul
push
mov
sbb
mov
jne
jg
dec
mov
sbb
or
ins
adc
jmp
(bad)
call
daa
cs
and
adc
call
add
je
test
add
dec
(bad)
xchg
or
xchg
push
cdq
inc
or
add
movs
inc
or
fwait
rcr
loope
pop
xchg
xchg
or
call
add
xor
sbb
mov
cdq
pusha
pop
sbb
sbb
or
push
test
pop
sbb
sbb
std
ret
jl
bound
ins
or
test
push
inc
jae
call
outs
inc
inc
pop
daa
test
push
xchg
call
sbb
in
test
lock
sbb
push
sbb
repz
fs
lods
push
push
add
pop
cld
fs
pop
sbb
pop
add
adc
sub
dec
mov
pop
lods
pop
sbb
xor
je
stos
sbb
sbb
sbb
and
cmp
jmp
stos
push
sbb
jmp
lods
in
sbb
inc
popf
stos
fucomi
loopne
in
xlat
add
add
add
mov
(bad)
lahf
pushf
jle
push
mov
call
rcl
xchg
in
out
or
cmp
pop
lods
pop
cld
or
add
outs
xlat
ins
or
imul
push
stos
jmp
jle
mov
sub
sbb
pushf
shr
push
test
or
xchg
xlat
out
adc
jns
push
loope
pop
adc
stos
movs
mulps
add
jle
into
push
mov
inc
popf
cmps
pop
hlt
push
adc
or
call
(bad)
jmp
mov
xchg
inc
push
stos
dec
adc
test
psubusw
call
ins
or
jge
ret
or
sub
inc
add
or
call
push
xchg
jne
lods
pop
clc
cmp
movs
push
add
aas
push
mov
push
inc
out
(bad)
ficomp
dec
popa
cmps
pop
or
movs
jmp
(bad)
call
jno
push
or
add
ficom
adc
inc
(bad)
cs
out
xchg
jno
mov
xchg
pop
movs
pop
sbb
push
ins
cld
rcl
mov
in
std
repnz
lea
xchg
cld
cdq
inc
ins
jle
(bad)
lock
(bad)
test
xchg
xchg
inc
in
add
in
ins
or
cmps
ud0
outs
add
call
fisubr
mov
in
or
cmps
adc
adc
ret
sbb
push
daa
xchg
rol
leave
cmps
xchg
sbb
fsub
sbb
sbb
adc
ins
sub
cdq
xor
push
stos
push
sar
stos
ja
add
jge
adc
add
add
test
test
mov
int3
mov
ins
int
clc
ins
jge
(bad)
enter
(bad)
sbb
push
add
in
sbb
dec
ret
(bad)
fucomip
xchg
stos
pop
adc
data16
dec
add
movs
stos
push
sub
push
or
mov
ins
add
outs
adc
and
movs
arpl
into
int
cmp
sub
jae
stos
shr
add
or
mov
sbb
sub
xchg
push
in
adc
or
add
and
ins
add
in
repnz
adc
lea
add
and
repnz
dec
lods
or
push
and
and
jb
mov
cs
push
and
sbb
sub
dec
pop
cmps
pop
add
imul
pop
pop
push
sbb
sahf
push
cmp
sbb
adc
sbb
sbb
sub
fldcw
nop
adc
cmc
mov
adc
add
sub
repnz
out
rcl
sbb
sbb
in
xchg
test
ins
mov
data16
sub
push
adc
push
xor
mov
or
add
ins
add
gs
add
sbb
push
add
push
push
jnp
aad
ins
outs
scas
mov
sbb
test
dec
and
fiadd
jg
or
jg
mov
and
ins
or
sub
stos
sub
xchg
into
fwait
shr
ins
(bad)
sbb
movs
or
jns
jg
adc
push
adc
fs
sbb
xchg
pop
xlat
add
in
daa
add
xchg
inc
ins
jmp
push
push
cmp
fs
add
xchg
dec
out
arpl
imul
adc
sbb
out
sbb
sbb
or
pop
or
mov
(bad)
movs
dec
sbb
movs
dec
out
add
add
xchg
inc
adc
mov
sbb
gs
sbb
js
sbb
(bad)
or
pop
out
jmp
push
mov
jle
mov
aas
mov
jp
mov
mov
xchg
adc
mov
call
pop
cs
mov
add
mov
fbstp
scas
dec
(bad)
xor
jle
mov
cmc
and
sar
mov
jbe
mov
call
mov
mov
jne
pop
dec
(bad)
dec
add
jge
inc
mov
mov
mov
std
sub
in
test
jns
mov
xchg
push
test
cmps
adc
add
add
or
jmp
adc
out
int3
add
fmul
hlt
lea
enter
mov
pushf
adc
iret
ret
dec
mov
push
xchg
inc
in
pop
xchg
jo
or
cld
cs
dec
adc
or
or
mov
add
add
jecxz
out
je
pop
cld
sbb
sbb
call
ret
xchg
push
sub
or
cmp
test
jns
mov
pop
xor
int3
add
in
add
pop
add
sub
pushf
sub
mov
add
pop
daa
je
in
loope
and
int3
adc
jl
ins
sbb
xchg
pop
adc
in
mov
mov
cmp
retf
adc
jns
mov
xchg
(bad)
outs
inc
dec
xor
cmp
movs
adc
sub
pop
add
pop
daa
je
out
daa
mov
inc
xor
sbb
xchg
inc
pop
cmp
jmp
in
cmp
mov
es
pop
daa
je
or
pop
daa
je
jmp
test
(bad)
sbb
sbb
push
mov
lock
mov
mov
test
les
call
es
or
or
call
xlat
lea
jmp
jle
cmp
sub
repnz
dec
mov
mov
js
or
loopne
outs
push
xchg
push
and
pop
adc
out
lods
leave
loopne
gs
mov
jmp
mov
lea
add
add
popa
loopne
pop
popa
in
fisttp
je
or
lea
lock
mov
mov
std
xor
cld
out
aad
cmp
push
imul
xor
xchg
inc
lods
push
lock
xchg
sbb
add
xchg
or
(bad)
fdiv
std
iret
arpl
out
loopne
xchg
jne
or
mov
call
push
bound
(bad)
fdivr
repnz
push
or
pop
ret
adc
mov
fistp
inc
push
add
or
xor
dec
mov
test
sbb
xchg
add
or
hlt
and
mov
std
mov
(bad)
out
aad
inc
mov
xchg
inc
int
sbb
mov
pop
hlt
mov
or
call
faddp
add
int3
enter
pop
push
jmp
or
sahf
jnp
(bad)
call
out
std
push
std
out
dec
or
retf
call
pusha
jnp
(bad)
enter
mov
out
adc
lea
mov
pop
inc
leave
out
out
push
jmp
push
dec
or
adc
fcom
jbe
or
call
fidiv
retf
addr16
push
int
add
arpl
gs
xchg
(bad)
jmp
pop
fiadd
jg
add
add
(bad)
aad
sbb
sahf
test
dec
or
inc
jo
lea
aad
push
xchg
aad
xchg
stc
fs
(bad)
(bad)
neg
jb
ins
mov
stc
in
push
pop
add
call
push
xchg
dec
inc
in
cmp
and
sbb
sbb
push
imul
dec
dec
call
(bad)
rol
or
std
ins
or
fistp
add
add
fs
mov
mov
or
ss
adc
adc
in
jo
mov
ret
sbb
pop
jle
add
xchg
push
fnstcw
adc
or
and
dec
and
jb
push
push
idiv
xchg
movs
test
mov
fadd
jle
inc
imul
sub
out
ret
sbb
sub
test
add
ja
add
adc
fiadd
test
(bad)
aam
out
and
add
add
sub
cmp
out
add
test
xor
add
sbb
movs
sub
xchg
dec
fst
sub
test
lea
xchg
or
cwde
outs
jmp
cli
xchg
inc
ins
add
sub
push
pop
adc
fadd
sbb
jno
dec
mov
add
fimul
push
sbb
out
push
or
sahf
push
sbb
cmc
adc
jne
or
dec
adc
or
jmp
or
pop
mov
add
xchg
in
pop
adc
add
jge
add
xchg
push
cdq
push
dec
or
dec
add
pop
pop
ins
add
xchg
push
dec
add
lds
jne
or
or
retf
adc
inc
ret
dec
mov
cli
clc
(bad)
jmp
xchg
inc
sub
push
inc
push
les
pop
and
push
xchg
(bad)
std
adc
jmp
imul
repz
add
add
add
add
push
inc
mov
pop
fldcw
mov
lock
push
add
call
xchg
sub
xchg
inc
adc
(bad)
shr
and
or
out
ins
or
jmp
faddp
hlt
or
jae
add
in
ss
sub
(bad)
out
dec
mov
add
add
imul
aas
(bad)
movs
add
out
(bad)
test
xchg
and
out
ins
in
mov
lock
mov
jo
add
cmp
popa
add
xor
pop
push
inc
push
dec
adc
je
push
or
imul
daa
ret
jg
mov
call
aas
cmp
int3
dec
sbb
mov
(bad)
jne
add
in
fadd
push
bound
out
xor
test
call
sahf
sar
push
push
and
jns
cmp
in
sbb
push
jmp
call
push
add
icebp
repz
add
or
mov
mov
mov
xchg
inc
test
pop
or
ins
or
std
(bad)
jmp
add
xchg
add
or
sti
push
or
pop
pop
adc
push
sub
sub
out
fwait
in
xchg
push
sbb
push
arpl
mov
sbb
add
std
push
jmp
clc
bound
dec
mov
mov
sub
(bad)
jo
in
push
je
in
inc
mov
dec
iret
ret
dec
xchg
mov
in
adc
in
in
pop
ret
jg
mov
call
push
fcomp
repnz
add
fadd
out
(bad)
jae
add
out
pop
mov
out
call
xchg
shr
out
out
(bad)
out
xchg
(bad)
or
cmc
call
sti
bound
jo
jge
shr
pop
(bad)
out
pop
inc
(bad)
mov
cs
clc
aas
gs
mov
sub
mov
out
fsubr
stos
(bad)
cli
pop
and
jle
add
out
movs
jle
dec
jg
inc
mov
cmc
std
xchg
mov
xchg
fucomi
inc
pop
out
out
shl
and
rol
sbb
out
into
rcr
jmp
movs
aad
mov
mul
xchg
fsubr
icebp
std
cli
sldt
add
xchg
rol
jmp
cld
loop
push
push
out
lds
pop
outs
inc
(bad)
xchg
test
out
out
xchg
(bad)
cmp
xchg
rol
and
push
xchg
(bad)
or
(bad)
rol
cld
jp
loope
add
sub
pop
nop
fucomi
retf
(bad)
fmulp
fsubr
jno
stc
aas
aad
mov
out
fwait
in
enter
fsubr
inc
add
cmc
mov
xchg
in
push
pop
xchg
in
(bad)
adc
je
add
cmp
inc
inc
ret
movs
test
iret
test
call
dec
adc
push
lock
adc
mov
(bad)
fadd
add
add
(bad)
lock
sbb
out
sub
inc
mov
fcom
mov
ins
(bad)
pop
push
in
dec
xchg
xchg
xchg
test
add
test
add
test
add
mov
push
stos
outs
in
adc
jne
mov
in
dec
push
inc
icebp
call
push
jmp
add
add
lds
nop
add
jmp
pusha
inc
push
add
(bad)
sbb
dec
xchg
in
push
hlt
sub
in
and
dec
test
shr
adc
aad
shr
mov
mov
add
add
mov
or
add
and
mov
adc
ret
test
adc
ret
enter
fnstsw
xchg
inc
loope
pop
in
jo
hlt
push
dec
inc
(bad)
stos
retf
sbb
jecxz
xchg
add
add
or
cmp
mov
add
jne
inc
or
adc
gs
xor
sbb
nop
mov
ret
sub
cmp
jbe
mov
or
sbb
add
lea
mov
in
mov
pop
les
push
push
sar
xor
xchg
adc
add
add
xor
cdq
jmp
(bad)
jg
inc
out
dec
xchg
xchg
sbb
in
es
push
push
jl
sbb
adc
push
dec
push
mov
cmp
sbb
cdq
push
xchg
test
gs
mov
mov
add
add
fld
cmp
and
test
int3
cmp
movs
mov
dec
ja
add
add
(bad)
(bad)
jo
movs
push
xchg
iret
ins
dec
inc
jmp
push
mov
in
rcl
adc
xchg
mov
push
cmp
out
sub
mov
call
xchg
fst
add
pop
cmp
sbb
bound
lea
bound
add
out
add
sbb
out
cs
(bad)
jp
jg
mov
sbb
push
jl
sbb
call
xor
mov
add
add
pop
and
mov
mov
sub
pop
and
add
cmp
stos
out
adc
jg
add
dec
cmp
inc
dec
lock
(bad)
std
out
xor
cmp
push
jg
call
sahf
aas
(bad)
jno
jg
mov
and
mov
dec
or
adc
pop
icebp
shl
sbb
fdivr
out
data16
mov
sub
mov
sub
mov
mov
cmp
sbb
mov
xchg
jle
add
mov
push
out
loopne
not
test
in
push
test
add
unpcklps
xchg
add
dec
lock
out
xchg
and
jmp
int
xchg
add
jle
add
jl
jo
cmp
sub
mov
mov
aas
call
jge
add
or
in
in
mov
leave
loop
neg
jmp
push
lock
idiv
out
fucomi
scas
adc
add
add
sub
test
dec
adc
or
mov
mov
mov
pop
adc
fwait
xchg
add
ins
adc
ret
jl
fwait
gs
(bad)
std
jb
add
imul
test
add
pop
pop
pop
les
mov
out
adc
test
add
add
and
ret
in
mov
add
lea
sub
pop
dec
in
jbe
pop
and
push
xchg
dec
mov
add
mov
xchg
test
call
aas
test
adc
js
aad
cmps
inc
stc
out
cmps
xchg
add
mov
push
test
pop
repnz
inc
mov
add
add
pop
(bad)
adc
stos
fiadd
xor
inc
adc
mov
inc
in
fiadd
rcr
aad
fadd
cmps
fld
add
push
test
je
test
call
es
(bad)
movs
add
xchg
push
inc
push
dec
mov
add
inc
cmp
fadd
xor
bt
clc
dec
xchg
in
push
sbb
test
add
sub
xchg
jge
add
cmc
aaa
je
add
sub
add
add
sbb
fild
sbb
aad
sbb
cwde
(bad)
in
mov
push
out
sbb
jno
call
push
and
or
pusha
sub
gs
and
xchg
sub
lock
sbb
jbe
out
jmp
dec
das
push
jb
int
push
sbb
or
sbb
pop
adc
adc
add
add
sbb
es
call
sub
cmp
jle
cmp
jnp
cmp
jne
cmp
jno
cmp
jno
cmp
jno
cmp
push
popf
xchg
movs
sbb
mov
aaa
pop
pusha
push
sbb
call
adc
add
je
int
ins
push
aas
push
inc
sub
push
(bad)
in
je
add
pop
mov
jo
fsubr
fnstenv
mov
jmp
(bad)
sbb
and
(bad)
sbb
adc
test
inc
call
dec
scas
nop
or
jmp
pop
add
xor
fld
add
add
add
jge
add
fild
jo
sbb
push
inc
jl
or
adc
mov
mov
cmp
adc
loopne
jmp
jae
inc
pushf
dec
jl
frstor
dec
jne
rol
mov
mov
popa
xchg
dec
test
fidivr
push
jnp
xor
push
push
pop
int
dec
or
xchg
adc
cmp
sbb
setge
enter
dec
inc
jl
aam
inc
ret
sub
(bad)
cmc
dec
push
cs
push
push
out
push
movs
jg
fsub
std
loop
sub
icebp
xor
cmp
jne
mov
aad
aaa
je
mov
push
sar
xchg
pop
push
push
jg
das
and
movs
jmp
xchg
sbb
adc
jno
or
jne
inc
jns
pop
pusha
test
mov
cdq
mov
repnz
gs
xchg
add
jle
je
hlt
push
push
leave
pop
dec
call
cld
cli
movs
jne
(bad)
loop
mov
jb
repz
and
movs
jne
add
add
jmp
push
mov
call
adc
mov
mov
mov
xchg
fldenv
ins
imul
or
mov
jno
jge
xchg
in
jmp
xchg
pop
shl
push
call
scas
jge
mov
xchg
pop
or
ins
push
int
nop
inc
in
pop
jo
xchg
sahf
jp
jmp
jne
repnz
or
and
add
jne
out
in
push
cmc
std
fld
sbb
rol
(bad)
fiadd
test
test
mov
mov
mov
push
rcl
leave
(bad)
call
test
rol
add
add
add
push
adc
pushf
loopne
call
mov
(bad)
pop
leave
loope
cmp
or
inc
fisub
xchg
dec
jne
inc
cld
cmp
push
fsubr
mov
mov
add
retf
inc
mov
and
mov
test
add
add
lea
dec
xchg
(bad)
int
loope
bound
std
test
test
and
pop
jne
add
pushf
mov
sbb
scas
pop
add
shl
call
test
inc
sub
dec
(bad)
rcr
dec
in
sbb
adc
sbb
sbb
pop
call
dec
pop
lock
movs
sbb
add
sbb
movs
(bad)
movs
sbb
jb
adc
fild
gs
mov
or
fst
dec
pop
cld
imul
pushf
rcl
add
xchg
(bad)
cmc
adc
call
(bad)
jle
push
mov
add
add
add
call
(bad)
jmp
lea
out
inc
outs
icebp
dec
inc
jg
iret
ins
loopne
call
jo
cdq
mov
jle
shl
cdq
jge
mov
add
dec
std
and
adc
lods
in
call
or
mov
leave
test
jp
sbb
mov
jg
dec
ror
je
int
dec
xor
sbb
push
or
setns
inc
mov
bound
cmps
setns
out
in
gs
sar
mov
in
sbb
xchg
not
(bad)
std
xchg
inc
add
xchg
cmc
icebp
adc
je
adc
push
inc
std
cmc
fistp
test
jnp
push
rcl
jle
push
jg
cwde
xor
push
or
push
mov
inc
pop
cld
sbb
or
jle
(bad)
cld
push
out
adc
jmp
lea
add
add
outs
adc
in
pop
mov
outs
jne
aad
xchg
dec
inc
or
loope
out
out
das
(bad)
jmp
in
lods
push
ins
sub
loop
outs
add
lds
mov
push
xchg
dec
cmc
push
push
ror
push
jmp
std
or
jle
push
or
push
nop
retf
cdq
mov
pop
cld
sbb
or
jle
(bad)
mov
pop
std
imul
out
mov
(bad)
in
inc
add
xchg
jge
push
fld
jle
clc
cmps
pop
xchg
(bad)
sub
loope
cmp
jg
push
lods
das
ret
jmp
or
mov
or
call
fiadd
es
mov
xchg
(bad)
std
(bad)
loop
add
pop
fs
mov
push
lea
ja
mov
outs
out
add
iret
adc
in
out
lds
loope
jbe
inc
fisttp
pop
or
sub
add
or
call
push
enter
icebp
cmovns
add
add
jp
mov
lock
push
pop
or
out
scas
gs
test
or
mov
add
push
jmp
pop
add
sbb
sbb
ins
jp
je
add
jne
add
sbb
out
sub
(bad)
call
outs
jle
call
or
push
ja
add
in
adc
ror
ja
lea
push
lea
push
(bad)
pop
jno
add
jnp
push
adc
xchg
push
lods
mov
add
aad
sbb
xchg
dec
test
jnp
add
shr
sbb
cld
push
test
add
addr16
imul
std
add
jp
mov
adc
adc
gs
add
add
fdivr
(bad)
jl
aad
fist
sar
push
movs
test
test
call
push
cld
loop
push
fdivr
xor
jmp
pop
fucomi
int3
add
call
push
fsubr
ins
test
add
jge
dec
popf
aam
call
fiadd
add
dec
add
inc
mov
lea
add
test
inc
mov
sbb
scas
in
lods
jg
cmp
out
ja
call
adc
in
lods
iret
cmp
call
cmp
jmp
out
or
adc
add
sub
cdq
call
pop
mov
ret
and
pop
push
cdq
leave
dec
lea
mov
mov
mov
sbb
stc
sbb
into
out
and
gs
jle
or
mov
mov
inc
fldcw
jmp
add
or
ins
sar
push
mov
xor
call
inc
out
shl
add
inc
out
fadd
xchg
inc
and
add
add
xlat
shr
inc
loope
sbb
xchg
cmp
xchg
adc
iret
lods
fs
aad
and
jg
cli
out
xor
sub
and
jns
aaa
cmp
outs
ds
and
stc
out
mov
mov
jb
icebp
ss
pop
outs
sub
out
xor
shr
mov
std
xor
lds
sub
fst
xor
fimul
sahf
repz
call
ins
xchg
push
xchg
add
add
cdq
or
and
cdq
call
inc
or
sub
rcl
jp
imul
sub
push
(bad)
cwde
jns
call
cmps
inc
adc
loopne
dec
(bad)
fdivr
call
push
addr16
push
cld
push
mov
stos
outs
out
mov
gs
inc
bound
push
or
call
dec
inc
repnz
sahf
inc
outs
sbb
add
jg
xchg
dec
push
adc
out
fidiv
add
sbb
js
dec
(bad)
in
pop
inc
outs
call
int3
fisttp
mov
push
mov
cwde
jns
add
shl
jne
push
call
push
mov
sub
inc
adc
mov
aaa
aas
call
imul
mov
pop
cmp
xor
push
add
ja
stc
sub
mov
out
lods
pop
jg
dec
in
data16
mov
jle
add
xor
push
out
cmp
push
pop
jg
mov
daa
jo
ins
test
bound
retf
jl
add
sub
sub
add
add
into
std
inc
nop
jge
sbb
inc
ins
int
inc
jns
xchg
inc
xor
and
cmp
sti
(bad)
gs
gs
scas
stc
inc
sti
rol
xchg
inc
inc
add
xor
push
movs
inc
into
std
mov
test
jge
dec
or
add
call
push
inc
call
mov
sar
outs
idiv
add
xchg
test
outs
out
lea
fiadd
jge
add
outs
call
jge
lea
jno
call
data16
push
dec
ror
inc
adc
add
cdq
test
xor
retf
adc
mov
inc
loop
dec
push
add
call
sub
jmp
out
mov
cmp
arpl
fld
push
fwait
enter
mov
shr
inc
jno
test
jb
nop
push
loope
and
dec
out
xchg
xor
add
add
jmp
mov
jmp
test
ret
jb
lea
inc
aad
ins
adc
sub
jbe
push
aam
enter
test
call
cmp
xchg
dec
test
adc
call
ins
inc
shl
into
sbb
sbb
mov
push
std
ret
sbb
into
(bad)
movs
and
and
gs
add
(bad)
int
mov
nop
pop
pop
imul
xchg
inc
std
ins
push
call
inc
jno
mov
(bad)
loope
cmp
ins
in
adc
push
ins
scas
int3
call
jo
mov
ret
jmp
cmp
test
add
sbb
outs
rol
xchg
xchg
(bad)
mov
outs
push
or
ins
pop
adc
(bad)
retf
int
jmp
jns
adc
pop
add
sub
loopne
loopne
xchg
inc
sub
jbe
dec
std
push
ins
jmp
push
mov
sbb
in
push
jae
test
xchg
add
pop
mov
lock
das
aam
sbb
inc
test
add
jne
test
test
add
lock
mov
jnp
ins
lock
je
add
das
dec
xchg
cdq
stc
and
adc
mov
test
add
jmp
out
mov
je
mov
icebp
ins
xchg
dec
jae
jne
icebp
add
(bad)
push
dec
leave
cs
sets
dec
(bad)
fsubr
xchg
dec
cmp
inc
in
aad
cmps
punpckhwd
push
call
lds
call
cmp
retfw
in
jmp
call
call
retf
adc
xchg
call
fsubrp
cmc
jmp
retf
adc
outs
retf
adc
pop
retf
por
ins
in
cmp
dec
hlt
out
sahf
hlt
icebp
je
push
in
sahf
mov
out
lea
push
enter
jmp
jge
adc
imul
mov
sbb
push
sub
push
retf
sub
pop
pop
outs
mov
inc
(bad)
in
push
or
inc
pop
pop
out
adc
mov
fisubr
or
sbb
lods
pop
sbb
imul
daa
ror
test
int
data16
sbb
call
in
sahf
push
xchg
repnz
mov
dec
push
(bad)
sbb
cdq
inc
ins
pop
out
lock
adc
call
jo
sbb
and
add
in
sahf
and
sbb
dec
dec
xor
es
sbb
int
lods
pop
jg
dec
fld
inc
rcr
gs
in
adc
int
into
imul
jg
add
xchg
dec
popf
push
int
xchg
out
fild
inc
iret
xchg
pop
mov
fistp
(bad)
adc
ins
sbb
nop
rcr
std
mov
movs
setns
out
push
imul
test
lods
call
jle
and
gs
adc
shr
sbb
js
in
out
in
dec
or
xor
mov
call
(bad)
out
adc
mov
or
jle
add
push
mov
push
int3
sub
add
arpl
push
imul
call
or
nop
sub
call
cmps
loope
add
xchg
dec
adc
or
int
cmp
retf
in
aam
push
fcomp
std
pop
cmps
push
out
xchg
dec
dec
xor
sub
inc
sbb
xchg
or
aaa
fsub
cdq
add
gs
pushf
hlt
adc
and
dec
(bad)
push
repnz
ss
add
push
mov
cld
inc
or
aad
sbb
mov
sub
leave
(bad)
out
lods
in
mov
test
adc
jge
ret
jo
jae
out
rcr
(bad)
ins
cmps
pop
out
shr
xchg
pop
in
lods
in
ins
loopne
call
jo
mov
aad
jb
or
mov
add
sub
add
gs
or
mov
jne
data16
sub
push
pop
out
cmp
mov
les
enter
test
jne
outs
push
sar
dec
popa
aas
adc
inc
imul
ficom
mov
sbb
jg
jb
nop
das
(bad)
call
pop
inc
std
xchg
ret
jge
ret
dec
mov
std
icebp
adc
add
add
data16
mov
pop
lock
ror
dec
call
push
sub
cmp
imul
(bad)
(bad)
cmp
add
inc
pop
daa
inc
inc
leave
xchg
out
push
fimul
push
aas
and
dec
ins
int
cwde
pop
out
adc
adc
add
add
add
rol
sahf
sub
(bad)
ins
add
inc
fimul
leave
inc
dec
mov
repnz
mov
lock
call
out
sbb
dec
sub
mov
xchg
inc
add
jge
add
xchg
xchg
pop
test
mov
fcom
out
ss
adc
add
add
sbb
pop
ins
hlt
in
shl
fdiv
add
sbb
mov
dec
mov
adc
add
jle
xchg
push
scas
and
jmp
imul
loopne
std
xchg
mov
icebp
push
jg
mov
aad
xlat
push
pusha
sub
push
pop
jp
test
loopne
xchg
add
add
pop
cld
push
and
test
(bad)
inc
cmp
imul
sub
pop
cdq
repz
(bad)
pop
ins
cld
data16
mov
add
sbb
sbb
push
fwait
call
cld
jecxz
mov
lods
fdivr
loope
jge
sub
ror
call
add
add
jp
repz
mov
out
sahf
test
push
dec
cwde
(bad)
in
aas
xor
xlat
je
addr16
mov
sub
mov
(bad)
dec
sub
push
sub
repnz
inc
xchg
jo
addr16
mov
pop
ins
or
sub
call
xor
xlat
or
xchg
in
test
add
cwde
pop
adc
in
addr16
sbb
(bad)
inc
icebp
push
outs
add
ds
clc
mov
push
ror
cmp
jg
push
iret
mov
add
jge
pop
pop
cs
mov
in
xchg
inc
lds
dec
in
sub
add
and
inc
ret
add
cdq
jg
mov
imul
test
rcl
call
fsubp
pushf
ror
or
sub
fdivr
imul
aas
xchg
inc
sar
pushf
mov
jb
push
popf
and
ss
inc
imul
aas
and
(bad)
adc
sub
sbb
and
inc
imul
dec
xchg
inc
cmc
repz
or
call
push
push
inc
addr16
xchg
adc
stos
jne
shl
ficomp
and
push
dec
repz
push
fiadd
add
push
adc
mov
mov
bound
mov
repnz
push
hlt
sub
inc
xchg
inc
sbb
dec
and
fstp
idiv
sbb
test
pushf
(bad)
fmul
sbb
sub
out
in
repnz
jmp
repnz
jmp
mov
mov
iret
and
call
aas
push
xchg
(bad)
mov
ins
lods
movs
test
add
add
or
loope
mov
sbb
and
inc
leave
xchg
sbb
mov
loope
dec
ins
mov
push
imul
inc
push
cmps
add
outs
pop
cmp
fldcw
or
push
sbb
jecxz
mov
outs
pop
cmp
pop
sub
xchg
fcomp
adc
cmp
test
mov
add
add
test
pop
dec
mov
mov
lea
sbb
imul
sar
test
mov
xchg
add
in
rol
pop
xlat
mov
push
cld
sub
sbb
mov
cld
gs
sbb
sbb
xchg
jge
imul
and
minps
mov
add
add
mov
xchg
inc
sbb
ins
jns
adc
mov
ror
sbb
mov
xchg
jge
ins
mov
aad
xchg
pop
int
fsub
enter
mov
add
mov
out
test
arpl
fld
add
test
cmp
ret
ss
sbb
adc
(bad)
mov
jns
adc
je
sub
scas
inc
pop
sub
lock
inc
push
jge
mov
shr
jge
in
pop
rol
push
cwde
dec
enter
in
lea
cmp
sbb
in
std
or
inc
cmp
mov
sub
or
sbb
push
ror
fiadd
push
adc
inc
inc
sbb
retf
inc
mov
les
pop
into
int3
adc
iret
hlt
ins
fs
aas
inc
mov
aad
shl
xor
icebp
sbb
sub
sbb
imul
dec
sub
sub
lock
dec
imul
std
jmp
add
call
(bad)
out
icebp
cmp
jae
jmp
mov
std
mov
shl
pop
add
retf
jl
out
loopne
jg
(bad)
sbb
pop
out
into
adc
or
adc
dec
aas
out
into
cmp
xchg
retf
(bad)
inc
jmp
mov
inc
add
add
in
in
es
pop
add
pusha
add
or
mov
xor
jge
aad
ret
je
cmp
sbb
xchg
push
fiadd
add
add
xor
adc
les
mov
fcomp
enter
add
push
or
push
inc
add
inc
ficom
ins
xchg
inc
push
add
mov
lea
test
cmp
aad
or
xor
adc
ret
es
dec
and
add
add
aad
pop
adc
cmp
in
pop
xor
dec
mov
xor
es
add
int3
movs
call
es
add
ret
movs
push
adc
(bad)
call
cmp
or
cwde
inc
addr16
push
jg
enter
stc
pop
mov
push
push
and
jmp
xor
into
inc
outs
add
add
add
xchg
dec
gs
repnz
inc
ins
pop
sahf
inc
fsub
pop
paddd
aad
sti
and
pop
mov
or
adc
pop
cld
or
xchg
xchg
inc
adc
int
ret
sub
std
lea
aaa
out
push
leave
std
mov
add
jbe
jae
repz
ret
jbe
or
out
dec
repnz
out
out
mov
call
cwde
out
test
cmp
aaa
jge
inc
shl
fcomp
out
sub
ficom
call
pop
enter
imul
push
dec
adc
mov
add
add
imul
jmp
enter
rol
push
xchg
inc
add
pop
adc
ret
pop
jmp
sbb
cmp
repnz
mov
aad
push
out
xor
jge
ins
inc
(bad)
bound
xchg
pop
mov
push
in
adc
inc
sbb
cmp
jmp
mov
add
add
shr
add
inc
xor
jge
hlt
push
mov
add
je
jnp
call
hlt
test
mov
rcl
sbb
or
clc
or
push
pop
fcomp
imul
test
in
lock
cmp
add
add
dec
push
ficomp
push
call
(bad)
(bad)
icebp
lea
cmp
mov
jne
adc
adc
pop
rcr
inc
sub
cmp
xor
cmp
add
ret
aad
sahf
push
cmp
dec
aaa
xchg
inc
jge
ins
loopne
mov
jne
cmp
add
add
in
add
mov
add
lock
cmp
call
ins
neg
sbb
lea
std
data16
mov
xchg
jge
add
mov
or
pop
sbb
ret
jo
and
aaa
pop
add
or
or
sub
pop
mov
das
out
cwde
fucom
inc
popf
jo
das
out
hlt
cmp
call
adc
cmp
out
bound
in
push
ror
sbb
out
loop
pop
test
sbb
mov
xchg
clc
outs
cmp
push
mov
sbb
loopne
cdq
gs
and
jb
mov
push
add
add
xor
fsubr
imul
icebp
jne
add
xchg
(bad)
or
mov
xchg
mov
aad
mov
sub
add
in
inc
or
imul
shr
out
retf
fst
ret
add
(bad)
adc
xchg
(bad)
std
mov
add
inc
std
or
add
add
xchg
mov
push
jno
inc
imul
popf
mov
or
in
push
sbb
xor
xchg
push
bound
std
mov
sbb
cmp
add
or
in
popa
jmp
std
xor
das
out
ror
out
mov
sub
popa
call
imul
gs
(bad)
pop
cs
push
xchg
std
call
jo
repnz
or
mov
out
and
or
xchg
inc
adc
add
xchg
pop
frndint
movs
je
sub
fadd
jg
pop
push
sbb
lock
ins
add
dec
sbb
enter
xchg
sub
sbb
adc
jne
inc
jo
test
cs
dec
stos
sbb
in
inc
sbb
or
jmp
xchg
sti
adc
xchg
pop
sbb
movs
je
cs
pop
pop
dec
cmps
jg
mov
sti
movs
ins
loop
out
sbb
in
add
in
pop
cs
in
out
loopne
mov
add
push
enter
add
das
out
inc
mov
jmp
sbb
cmp
push
mov
jb
mov
imul
inc
pop
cld
(bad)
jle
add
inc
push
sub
add
inc
xchg
fcomp
imul
add
add
jne
adc
xchg
(bad)
std
mov
repz
push
jmp
xchg
mov
xchg
mov
es
out
iret
cs
sbb
xchg
dec
icebp
add
add
lock
call
xchg
test
das
out
ins
adc
add
push
not
das
push
mov
repnz
out
xchg
push
fs
std
mov
add
out
or
mov
pusha
or
inc
das
std
xor
jge
mov
std
xchg
mov
cmp
out
(bad)
sti
jl
aad
inc
sbb
repnz
xor
out
push
adc
mov
xchg
adc
call
xchg
int
in
push
sub
add
push
xor
fwait
sub
mul
out
ror
or
(bad)
std
dec
rdpmc
out
loopne
xchg
mov
mov
xor
rcl
and
inc
xchg
pop
test
ins
enter
xchg
add
leave
loope
dec
and
and
out
adc
mov
push
in
xchg
dec
cmc
lea
stos
out
rcl
mov
pop
out
xchg
dec
inc
or
xchg
xchg
mov
mov
xor
bound
jo
xor
jmp
ins
mov
popf
push
std
movs
sbb
and
push
bound
xchg
inc
popf
sub
add
xor
jne
xor
add
add
adc
mov
pop
sub
std
bound
xchg
mov
xor
call
add
add
repnz
sar
sbb
sub
ds
out
push
das
dec
push
fmulp
xchg
inc
pop
or
clc
in
(bad)
loope
je
xchg
inc
pop
dec
pop
add
into
xchg
(bad)
repz
push
sahf
popa
xchg
inc
sub
dec
loop
dec
add
or
sub
xchg
inc
fisttp
sub
inc
inc
pop
pop
jp
push
pop
popa
dec
push
pop
xor
dec
cmp
xlat
outs
add
add
sbb
aas
ins
add
ror
imul
and
add
xchg
test
call
sub
push
adc
jns
mov
shl
jne
dec
adc
bound
pop
sbb
mov
inc
ret
cdq
jle
sub
or
or
test
imul
sub
and
pop
sbb
or
add
in
add
add
add
add
add
inc
dec
push
dec
xor
clc
es
sbb
adc
std
mov
fwait
cli
movs
je
dec
sbb
test
sub
xor
(bad)
or
add
push
dec
sub
sub
pop
xor
pusha
adc
int3
pushf
test
add
jmp
jg
sar
sbb
pop
dec
pop
adc
mov
cwde
sahf
inc
xchg
push
mov
sub
aad
xchg
push
pop
inc
imul
ds
shr
or
sub
push
or
mov
test
dec
mov
(bad)
outs
psubsb
add
test
add
add
add
inc
and
mov
call
fs
sbb
jno
dec
mov
dec
mov
jne
inc
push
clc
pushf
ret
loope
imul
inc
sbb
xchg
inc
jmp
sbb
ret
enter
cwde
leave
call
inc
imul
inc
xchg
sbb
add
add
les
push
mov
ins
sbb
mov
xor
sbb
out
mov
dec
pop
hlt
or
(bad)
mov
std
xchg
ret
test
sbb
movs
dec
in
loopne
xchg
jne
dec
pop
in
int3
sbb
cmp
push
xchg
inc
imul
call
mov
pop
in
sub
add
jmp
dec
int
cmp
xchg
inc
in
pop
inc
pop
sub
dec
mov
repnz
or
push
or
xchg
clc
dec
ror
push
retf
push
test
leave
cs
dec
mov
inc
nop
push
fisttp
sbb
sahf
xchg
inc
int
push
in
fcom
loop
push
cmp
(bad)
out
shr
movs
mov
mov
add
add
pop
xor
xor
ins
clc
sahf
mov
mov
xor
in
xlat
xchg
inc
dec
es
bound
push
(bad)
fdiv
out
sub
jge
inc
imul
inc
pop
scas
mov
push
dec
xor
or
adc
je
dec
in
xchg
jo
add
add
mov
ret
push
cmp
push
call
xchg
inc
leave
sub
bnd
fmul
(bad)
gs
clc
mov
aas
dec
mov
pop
or
adc
push
jmp
adc
push
adc
bound
or
mov
inc
ret
add
fld
jmp
or
sbb
out
test
bound
sbb
call
int3
adc
sbb
loop
jae
dec
or
call
cmp
xor
inc
dec
ret
cwde
dec
pop
cld
out
rol
adc
lea
inc
pop
or
adc
add
add
add
mov
push
call
adc
(bad)
loopne
std
mov
cmp
pop
lods
add
je
cmp
pop
ret
outs
in
xor
call
dec
psrad
nop
xchg
(bad)
outs
sub
push
movs
or
cmps
xchg
repnz
dec
inc
icebp
add
mov
sub
in
fmul
cld
push
test
add
cmp
or
(bad)
call
dec
pop
fdivr
sbb
call
push
daa
call
dec
push
cld
(bad)
mov
push
adc
dec
icebp
adc
inc
enter
pop
inc
pop
cld
xor
sbb
push
les
mov
in
pop
fdivr
add
std
loope
call
rol
dec
adc
stc
into
cmp
dec
mov
pop
add
lds
imul
jl
inc
mov
rcl
std
sbb
aas
out
xor
sub
into
test
add
dec
mov
mov
push
sbb
sub
and
sbb
cmc
mov
(bad)
fistp
(bad)
pop
std
je
and
(bad)
fiadd
(bad)
xor
push
jle
jmp
sbb
imul
adc
mov
cmp
test
sbb
sub
add
sbb
lea
outs
add
mov
fst
xor
add
add
add
mov
jne
push
xor
or
call
jbe
ds
and
in
ror
cmp
cmp
add
push
mov
mov
dec
and
mov
or
aad
in
aad
jb
pusha
pop
adc
(bad)
cmp
push
mov
add
add
sub
push
inc
xor
push
mov
adc
pop
push
mov
cmp
push
mov
inc
ficom
rcl
iret
dec
or
dec
lea
adc
push
sbb
test
sbb
lods
pop
popf
add
(bad)
and
jns
jne
dec
imul
fsubrp
or
sbb
sub
push
test
add
out
(bad)
out
cmp
jae
fist
cmp
iret
imul
fnsave
pop
and
and
mov
mov
jns
dec
pusha
sbb
jg
mov
nop
push
jne
push
sbb
xchg
nop
js
add
add
sbb
jg
push
sbb
bnd
sahf
daa
out
ficomp
sub
xlat
jno
lods
sbb
aaa
sti
jecxz
adc
xlat
mov
int
js
xchg
les
in
inc
xor
movs
inc
ret
mov
repnz
adc
xor
jmp
adc
xchg
jo
test
loop
or
cmp
add
add
push
rol
ficom
xchg
pop
jns
pop
adc
and
dec
(bad)
fisubr
jbe
xchg
sti
je
jle
pop
push
jge
adc
or
jecxz
cdq
les
aad
adc
ja
inc
sbb
mov
dec
push
retf
repnz
xor
cli
movs
push
aad
xchg
jle
add
add
ret
in
punpckhwd
add
les
sar
mov
push
cwde
mov
inc
cdq
xchg
fwait
cwde
fwait
test
cmp
imul
retf
adc
ins
xchg
push
xchg
test
inc
jge
sbb
mov
fwait
ja
test
push
fbld
push
mov
test
or
xchg
inc
sub
inc
pop
adc
retf
mov
fiadd
push
pop
adc
rcr
call
push
push
adc
inc
push
test
sbb
dec
retf
fld
xchg
inc
test
mov
add
retf
push
xchg
dec
popf
dec
sbb
xchg
inc
pop
adc
retf
or
and
inc
mov
sbb
call
cwde
xchg
xchg
test
add
ror
or
repnz
arpl
push
inc
popa
add
inc
repnz
or
adc
or
in
dec
sbb
out
inc
pop
adc
leave
sbb
sbb
xor
sbb
push
cld
cmp
mov
add
adc
sti
xor
xchg
pop
(bad)
fiadd
sti
add
test
add
sbb
out
adc
(bad)
scas
add
add
push
call
push
xchg
inc
dec
or
add
(bad)
or
and
push
add
(bad)
sbb
inc
jmp
into
add
fisttp
adc
inc
(bad)
or
fisttp
pop
adc
(bad)
sbb
inc
leave
or
dec
(bad)
or
popf
or
adc
(bad)
or
movs
or
es
jne
call
cmps
mov
sbb
inc
lea
xor
add
push
ficom
adc
or
cmp
push
or
xlat
sbb
inc
or
pop
sbb
iret
or
cs
pop
or
pop
xchg
call
pop
push
adc
mov
jle
adc
iret
or
sar
mov
inc
inc
add
add
std
jle
sbb
xor
add
add
sbb
jmp
aam
in
sbb
add
lahf
xchg
xchg
test
add
aas
popa
sbb
mov
inc
push
xchg
sub
cmps
jge
punpckhbw
fimul
inc
fsub
jmp
rol
(bad)
add
and
push
outs
pop
scas
or
not
pop
add
sbb
dec
aas
xchg
sar
inc
std
in
jg
and
jae
lea
cld
loop
push
mov
mov
int
jle
(bad)
sbb
cdq
jg
ret
push
test
mov
fst
add
fldenv
in
and
retf
loope
fisttp
pop
adc
(bad)
adc
or
cmps
div
add
test
test
xchg
push
fld
imul
sbb
add
(bad)
inc
mov
jge
mov
xchg
pop
mov
xchg
dec
mov
(bad)
add
pop
popf
pop
adc
loop
or
pop
lahf
xchg
inc
jno
lods
inc
imul
outs
sub
repz
mov
xchg
and
lock
sub
test
cmc
jbe
xor
fiadd
jmp
xchg
inc
add
and
(bad)
or
add
and
aas
pop
add
test
add
sbb
add
add
jle
inc
add
sbb
xchg
push
pop
or
mov
or
es
xor
dec
xchg
and
out
push
sub
xchg
push
pop
or
ja
xor
and
push
fld
sub
out
call
or
movs
xchg
dec
lds
dec
sbb
aam
add
add
bts
add
sbb
ja
adc
pop
ins
movs
sub
cmps
or
push
div
add
xchg
xchg
inc
stc
mov
xor
or
(bad)
shl
push
adc
xor
call
inc
movs
add
jne
sahf
inc
and
ret
sbb
test
and
inc
psubsb
in
or
(bad)
cld
cmp
push
cmp
inc
imul
or
call
or
cld
jmp
xor
pop
dec
or
enter
hlt
xor
jmp
cmp
inc
or
je
push
push
and
add
add
push
mov
xchg
push
movs
xchg
dec
lods
or
or
ret
scas
call
ret
ret
add
jb
pop
adc
mul
jbe
movs
pop
cld
out
rcr
dec
mov
shl
or
xor
rcr
adc
cmp
cmps
cld
xor
test
les
add
inc
add
pop
cmp
shl
adc
js
adc
ret
imul
loop
or
pop
mov
add
sub
(bad)
ret
adc
adc
movs
imul
add
outs
add
xchg
inc
pop
ss
push
and
cwde
mov
or
(bad)
bound
fs
bnd
sbb
mov
sbb
dec
test
outs
dec
std
sbb
add
add
test
add
imul
sub
out
movs
jmp
or
mov
inc
add
add
aad
or
ins
add
call
add
cmp
sbb
(bad)
jne
psubsw
jmp
out
add
cwde
jb
cmps
inc
sub
sahf
ja
sbb
or
add
jg
push
bound
mov
xchg
fwait
shl
fiadd
in
cdq
clc
xlat
lock
mov
or
pop
xchg
call
xchg
xor
mov
in
mov
pop
adc
(bad)
daa
mov
nop
adc
ins
pop
adc
hlt
or
pop
or
or
repz
ins
or
fld
inc
dec
or
mov
add
cmp
pop
adc
ret
jnp
sbb
test
retf
mov
or
or
jmp
or
call
loop
dec
xor
gs
bound
inc
lods
xor
mov
sub
mov
cmp
adc
add
add
mov
outs
out
sbb
jb
sbb
inc
dec
test
pushf
cdq
push
sbb
fwait
cdq
fwait
shl
xchg
add
add
sub
mov
add
xchg
ins
inc
je
add
fnstcw
call
icebp
sbb
add
loop
mov
add
add
xchg
jmp
out
mov
mov
je
iret
out
int
dec
and
fcom
inc
sbb
imul
rol
cmp
or
mov
adc
out
jmp
rol
(bad)
clc
add
jmp
out
leave
cli
jnp
and
in
ins
add
jo
add
add
push
push
aas
inc
ret
jg
dec
pop
push
xor
mov
pop
cmp
(bad)
push
xor
nop
push
xchg
outs
xchg
inc
mov
jo
xor
out
sbb
xchg
xchg
jle
add
ss
jb
jle
mov
aaa
popf
test
leave
in
jecxz
out
gs
mov
add
add
in
pop
add
dec
adc
gs
xor
pop
add
jnp
inc
xchg
lds
pop
lods
lock
pushf
lock
mov
in
inc
mov
ficom
xchg
call
int
mov
jle
add
xor
hlt
dec
mov
jecxz
add
ins
cmp
jmp
movs
test
mov
jne
add
(bad)
add
push
sbb
test
pop
bound
(bad)
fisttp
and
out
xlat
ins
or
pushf
pop
hlt
jmp
pop
das
pop
or
xor
mov
sldt
add
cwde
or
jmp
cs
dec
pop
nop
add
test
test
sbb
sbb
sbb
pop
test
push
shl
addr16
pop
push
push
mov
push
mov
rcl
addr16
push
mov
pop
push
call
mov
pop
mov
pop
push
call
mov
and
out
xchg
ret
sbb
and
sbb
pop
das
mov
arpl
jle
sahf
pop
hlt
pop
neg
clc
shl
call
out
fld
pop
dec
sub
call
sub
mov
jb
clc
mov
jno
inc
sub
ficomp
mov
icebp
adc
dec
push
out
lock
(bad)
jmp
pop
jmp
out
xor
ins
add
jmp
jnp
fistp
dec
push
sub
sub
pop
out
pop
sub
cmc
xor
add
or
fadd
cwde
jno
add
jmp
cvtpi2ps
and
scas
ins
out
shl
out
or
xchg
inc
gs
pusha
dec
dec
scas
scas
or
push
xor
mov
leave
push
cmp
(bad)
loope
fsubr
nop
pop
pop
sub
and
sbb
test
add
add
mov
xchg
dec
dec
add
mov
sbb
push
sub
inc
repnz
inc
jmp
out
pop
(bad)
sbb
daa
outs
add
sub
dec
ret
jmp
jmp
movs
sub
call
dec
pop
jmp
pop
xchg
rcl
repz
call
pop
xor
pop
cld
test
inc
pop
xchg
into
ret
imul
or
shl
fistp
retf
xchg
adc
dec
inc
pushw
mov
sub
push
(bad)
dec
mov
rcl
pop
pop
ret
sub
add
mov
and
inc
(bad)
inc
cmp
sub
sub
pop
pushw
jp
and
jecxz
add
sub
push
in
pop
data16
push
push
sub
add
fwait
mov
sbb
popf
add
add
jns
shr
cwde
jle
adc
and
add
adc
pop
out
jae
or
adc
push
imul
out
xor
outs
cmp
cmp
sub
push
sbb
mov
stos
sbb
sub
movs
push
movs
jg
xor
adc
and
cmps
xor
in
pop
add
xor
jle
imul
add
add
push
xchg
inc
or
jg
call
(bad)
inc
adc
push
inc
or
and
rcl
pop
sbb
push
out
adc
into
nop
inc
push
fsave
sub
imul
ficom
jmp
pop
je
inc
push
test
sbb
movs
ret
jno
inc
ret
loope
push
ins
jmp
lea
data16
nop
dec
dec
sub
popa
pop
out
jmp
pushf
retf
test
ucomiss
sub
pop
fsubr
pop
or
sub
cmp
xchg
ins
dec
mov
inc
mov
or
add
retf
enter
sbb
dec
cmp
popa
pop
pop
ret
sub
xor
sub
call
shl
mov
mov
std
jnp
pop
out
xchg
xchg
ins
adc
pop
sub
and
fs
fldl2e
add
or
test
add
add
out
test
mov
xchg
sbb
push
sub
scas
into
jno
xor
push
mov
addr16
mov
sub
sub
pop
cmp
daa
sbb
sub
pop
adc
neg
inc
movs
es
cs
pop
ins
dec
into
inc
cmp
fld
test
fstp
mov
sbb
push
sub
mov
add
add
retf
xchg
and
inc
pop
fdivr
out
out
jle
js
test
out
adc
pop
out
sahf
nop
dec
mov
movs
dec
push
scas
mov
sbb
push
inc
push
sahf
ins
std
dec
popa
pop
out
(bad)
icebp
and
(bad)
cmps
call
jle
add
push
test
jle
add
sbb
and
dec
dec
in
mov
xchg
jae
dec
lds
push
xchg
sbb
in
pop
push
push
out
mov
jnp
cdq
les
repnz
and
mov
(bad)
inc
sub
push
inc
bound
sbb
in
mov
or
jmp
ror
add
xchg
sub
into
gs
push
imul
xchg
pop
out
xchg
inc
sbb
lds
sbb
mov
retf
pop
adc
inc
cmc
sub
sub
scas
scas
leave
jnp
adc
xor
xchg
in
ja
add
push
or
gs
stos
rcl
in
fld
mov
pop
in
sti
pop
in
push
jge
add
cmp
gs
jmp
gs
mov
cmp
or
and
pop
ret
inc
cmovns
add
jmp
aad
and
call
rol
or
bound
call
push
mov
sbb
mov
cmp
sub
fdivr
push
and
dec
inc
mov
sbb
ret
out
sar
or
mov
mov
ins
mov
jno
sahf
xchg
call
lods
stos
add
dec
mov
push
dec
add
sub
(bad)
mov
inc
jno
push
cmp
adc
cs
or
movs
sub
xor
sub
mov
sbb
sbb
bound
xchg
adc
leave
sbb
sti
pop
in
cmps
cld
or
and
add
xchg
fs
push
je
outs
out
mov
jmp
cdq
test
call
push
pop
pop
addr16
pop
outs
shr
and
dec
inc
push
cmps
pop
xchg
ret
ins
imul
ins
push
mov
pop
sub
inc
call
push
sbb
jne
pushf
lods
loopne
out
aad
inc
pop
xor
inc
icebp
or
pop
jle
push
out
call
mov
mov
(bad)
jl
hlt
push
cmp
xor
xor
vcvtdq2pd
repnz
leave
xchg
in
mov
inc
mov
add
add
out
(bad)
retf
sar
lods
lods
push
xchg
and
pop
mov
mov
add
jle
aaa
push
jmp
test
loope
mov
sbb
push
jl
leave
mov
pop
xchg
ret
lods
scas
das
add
retf
fdivr
out
out
jp
js
(bad)
pushf
bound
xor
pop
out
sahf
push
dec
mov
jne
push
scas
mov
sbb
push
aaa
push
sahf
mov
dec
pop
pop
out
(bad)
or
(bad)
(bad)
jae
jge
jle
test
push
test
xor
push
mov
mov
dec
ins
adc
push
clc
sub
cmc
rcpps
xchg
cmp
cmps
mov
xchg
dec
pop
push
pop
dec
cmp
sbb
ja
push
and
cvtdq2ps
sub
jno
xchg
inc
lea
dec
inc
sti
push
imul
inc
sahf
mov
or
js
(bad)
jne
pushf
(bad)
jns
(bad)
in
leave
test
mov
sbb
push
pop
ins
outs
(bad)
xor
adc
into
cmp
sti
sub
dec
std
fs
out
cdq
mov
add
sub
clc
pop
or
imul
(bad)
jno
push
hlt
and
test
pusha
faddp
ins
cmp
sbb
or
inc
pminub
sbb
push
or
imul
or
add
(bad)
jecxz
sahf
int
mov
mov
std
xor
mov
jmp
or
add
or
xor
xchg
aad
adc
sbb
pop
add
pop
fwait
cwde
cdq
sbb
aam
out
movs
jmp
pop
add
cmp
jae
jb
sbb
pop
add
mov
call
popf
call
fwait
mov
bound
in
(bad)
dec
pop
cmp
or
js
pop
fmul
aam
fld
into
stc
call
ret
jno
(bad)
shl
xlat
jmp
pop
pop
repnz
jne
push
cmp
xor
adc
add
add
(bad)
xchg
dec
pop
or
sbb
jae
push
gs
add
or
push
retf
pop
data16
jno
fcomp
ins
mov
push
ret
jno
loopne
sbb
cmc
sbb
and
jg
mov
rcr
adc
daa
mov
sub
dec
xor
or
call
pop
ret
jno
fld
xchg
sar
inc
jg
mov
mov
in
aad
arpl
mov
push
in
xchg
dec
mov
pop
xchg
mov
push
and
jmp
fdiv
add
xchg
cwde
mov
out
add
aaa
movs
(bad)
fld
mov
and
or
dec
mov
sub
dec
loop
mov
mov
sub
pop
shl
inc
rcl
bound
fucomi
lods
cmps
in
pop
ret
cmps
fadd
push
(bad)
(bad)
jg
jmp
xchg
add
retf
imul
add
in
sub
movs
pop
sbb
ret
mov
hlt
fiadd
jg
add
(bad)
cld
bound
jnp
sub
jno
mov
xchg
mov
xchg
in
nop
add
adc
jge
mov
(bad)
xchg
xor
adc
fwait
aas
xchg
test
in
aad
out
hlt
clc
jge
cmps
shr
lods
mov
fiadd
push
xor
add
fistp
lea
shr
xlat
into
sub
inc
(bad)
xchg
ret
mov
or
out
mov
pop
in
rol
imul
fiadd
adc
inc
sahf
inc
lock
add
cmp
or
adc
rol
aaa
cli
push
mov
mov
sub
inc
push
js
ret
dec
xlat
cmp
aad
pop
ins
pop
mov
pop
pop
ret
retf
(bad)
out
dec
sbb
mov
pushf
push
add
xor
(bad)
loop
out
cmp
imul
add
add
add
jae
sbb
or
sar
test
test
add
loop
add
ja
(bad)
add
call
pop
ins
test
imul
sub
inc
bound
scas
cmp
inc
ins
imul
scas
cmp
inc
ins
arpl
inc
ins
pop
push
inc
pop
add
jge
setnp
and
iret
call
mov
and
iret
push
mov
and
iret
sub
and
dec
sbb
call
xor
ret
pop
add
pop
pusha
sahf
inc
imul
out
inc
mov
scas
jmp
jle
sbb
add
add
xchg
adc
jecxz
xor
push
xchg
cwde
jmp
sbb
aad
sbb
push
inc
mov
mov
add
add
data16
call
push
adc
movs
add
sbb
dec
and
fidivr
xor
add
add
pop
ins
(bad)
fiadd
mov
add
sbb
add
push
xchg
cwde
or
add
std
test
adc
call
add
adc
add
retf
sub
or
test
in
adc
je
mov
pushf
mov
add
add
jp
mov
pushf
leave
popa
adc
cmps
scas
movs
mov
xor
inc
shr
(bad)
fidivr
sbb
sbb
nop
inc
xor
jmp
adc
call
mov
pop
jecxz
xchg
dec
loope
fisttp
and
mov
ror
sub
mov
xchg
ret
cmp
aad
mov
or
call
dec
sub
pushf
lds
inc
push
cmp
sub
mov
or
call
pushf
sti
imul
or
fmulp
sub
add
jmp
into
loop
add
or
add
sbb
(bad)
dec
mov
or
mov
(bad)
out
inc
movs
in
repnz
movs
lea
cmp
outs
push
je
ret
jno
outs
push
or
aad
pop
ins
pushf
mov
mov
inc
or
sahf
popaw
pop
push
enter
addr16
xor
cmps
xlat
push
inc
mov
mov
push
stos
and
or
pop
jl
pop
pop
mov
pop
sbb
cmp
ins
out
push
inc
inc
pop
cmps
pop
push
pop
sahf
ds
mov
xchg
xchg
xchg
inc
int
xlat
jmp
mov
mov
jmp
out
fimul
fucomi
movs
mov
xchg
inc
ror
pop
pop
mov
daa
dec
outs
out
(bad)
mov
cmp
rcr
push
push
cmps
and
cdq
int3
xchg
inc
mov
pop
jbe
sub
or
ins
or
sahf
imul
sbb
cdq
call
pop
sbb
adc
in
adc
popf
or
push
or
movs
add
add
sbb
lds
pop
dec
push
cmps
sbb
sub
ret
inc
outs
(bad)
lods
retf
fidiv
aaa
mov
pop
sbb
inc
imul
mov
nop
push
movs
push
outs
(bad)
ins
inc
dec
test
add
mov
pushf
imul
xchg
inc
cdq
adc
je
add
add
inc
add
add
mov
mov
pop
(bad)
hlt
sbb
pcmpgtw
mov
outs
out
arpl
inc
ret
clc
adc
push
not
xchg
clc
es
call
jb
mov
movs
and
stc
(bad)
ficomp
(bad)
pop
std
lds
call
xchg
inc
in
jge
out
jle
push
outs
outs
sub
add
or
push
add
mov
outs
sbb
shr
call
or
loope
(bad)
stc
adc
idiv
pop
in
into
add
cs
ficom
popa
dec
push
into
out
add
outs
xchg
fxch
out
sub
adc
es
push
shl
repz
out
cmp
add
adc
ins
or
ds
add
out
cmp
and
ds
xor
mov
mov
inc
mov
dec
addr16
inc
mov
push
loop
sub
and
in
sbb
xor
les
mov
clc
mov
add
jge
ret
mov
add
add
fidivr
push
call
(bad)
cmp
sub
stc
sbb
(bad)
jmp
std
dec
mov
sbb
in
mov
inc
adc
inc
ins
add
(bad)
cmp
sbb
sbb
inc
pop
(bad)
(bad)
push
push
bound
xor
add
add
rcl
mov
in
movs
or
push
test
test
add
in
push
mov
dec
add
pop
lods
add
cdq
aas
dec
neg
(bad)
pop
nop
in
and
jmp
nop
inc
stc
or
adc
pop
cld
mov
sbb
xor
add
div
mov
ins
ins
dec
pop
mov
jg
sub
jns
add
add
add
adc
loop
in
mov
push
lds
std
jno
cld
out
sbb
inc
mov
je
add
pop
fiadd
jmp
push
aad
push
std
or
sbb
std
pop
pop
mov
xor
and
popf
sub
mov
cmc
(bad)
sbb
dec
or
cdq
clc
jecxz
cdq
push
fld
scas
dec
fimul
lds
cdq
dec
aad
jmp
popf
test
add
mov
add
add
xor
fsubr
icebp
call
inc
cmp
or
mov
sbb
sbb
into
push
repnz
sahf
(bad)
cmp
inc
push
xor
cdq
rcr
ins
xor
fsubr
fisttp
aad
inc
or
push
call
add
add
mov
or
xor
jmp
cwde
jno
sar
xlat
out
add
pop
or
ror
inc
or
ret
add
in
push
outs
sub
bound
jge
adc
into
vmovntps
rcl
add
jno
add
add
lock
jnp
jb
or
xchg
jp
je
inc
push
sbb
cmp
in
jmp
pusha
mov
in
mov
sbb
xchg
retf
in
sbb
or
(bad)
adc
je
or
and
mov
aad
mov
addr16
out
add
add
sbb
in
(bad)
or
(bad)
pop
sbb
push
imul
push
test
or
ss
sar
into
ss
sbb
(bad)
loope
pop
mov
mov
or
aad
sbb
fldcw
sbb
ret
dec
fild
add
add
push
jle
sbb
adc
xchg
xchg
push
or
fdiv
call
push
aam
pop
jl
pop
sbb
test
add
icebp
pop
(bad)
sti
in
add
xchg
gs
inc
popa
xchg
mov
lds
ins
ja
cld
xchg
aas
sbb
fcomp
repnz
dec
add
sbb
add
mov
adc
test
add
cwde
popf
pop
ins
jmp
(bad)
jmp
call
xchg
lahf
in
rcr
sbb
icebp
cmc
(bad)
call
adc
in
jb
pushf
add
xchg
inc
test
cmps
je
add
push
aas
push
add
jmp
test
jge
add
jge
dec
dec
mov
pop
hlt
xchg
stc
jmp
add
jge
dec
cmc
add
mulps
in
in
pop
adc
test
jge
mov
inc
or
(bad)
or
add
mov
jbe
test
jmp
add
xchg
mov
mov
adc
clc
out
dec
retf
pop
out
push
(bad)
fisttp
out
adc
and
fisub
mov
xchg
out
inc
add
stc
add
(bad)
xchg
cmp
add
dec
or
ret
or
lock
out
bound
push
hlt
add
push
fcom
stc
loope
fst
std
adc
dec
mov
adc
xchg
out
test
repnz
(bad)
out
fcomp
sbb
enter
jl
inc
popa
stos
pop
inc
(bad)
stc
and
add
pop
adc
addr16
fld
sbb
add
or
call
mov
cmp
xchg
inc
push
mov
hlt
dec
mov
rcr
push
aam
dec
imul
pop
mov
ror
add
inc
(bad)
sbb
jae
push
pop
clc
jl
jmp
adc
sbb
jmp
or
test
pop
fadd
sbb
jne
inc
popa
add
adc
sbb
fimul
pop
and
imul
out
add
xchg
add
sub
lds
cdq
mov
jp
push
sbb
adc
movs
add
movs
or
shl
jmp
pop
jmp
jbe
inc
mov
cmp
cmp
leave
xchg
xchg
dec
xchg
mov
(bad)
push
jno
pop
aam
xchg
sbb
push
sub
add
and
jne
inc
sub
lahf
neg
(bad)
in
in
ins
push
inc
icebp
jmp
ja
imul
mov
call
movs
ret
sbb
sbb
add
mov
call
sbb
add
sbb
add
sbb
and
in
jmp
or
aaa
in
nop
jne
into
jbe
sbb
add
loope
pop
xchg
adc
pop
push
mov
xchg
and
test
jns
inc
in
movs
sti
inc
jg
(bad)
ja
jne
or
push
into
adc
loope
pop
pop
sub
mov
add
add
add
sbb
sahf
sbb
lods
inc
(bad)
mov
lea
mov
jl
mov
jge
clc
fimul
loopne
pop
out
popa
add
or
jle
jb
or
mov
mov
xchg
repz
adc
or
rcl
lock
pop
sbb
add
cwde
sbb
pusha
test
mov
mov
xor
push
or
jg
and
in
pop
push
lldt
mov
inc
sbb
or
pop
scas
jg
add
(bad)
sbb
pop
mov
into
es
push
shr
outs
fiadd
outs
jg
add
gs
push
mov
mov
jnp
add
add
mov
adc
(bad)
loopne
cmps
jecxz
add
fimul
xchg
jg
jb
repz
add
sbb
push
sti
clc
add
cli
lock
cmp
loopne
ins
adc
or
add
add
fild
lds
add
push
fild
(bad)
jge
xchg
mov
push
lods
jle
add
ss
mov
pop
sbb
xchg
jle
pop
jbe
sbb
mov
jle
add
imul
(bad)
ja
jmp
mov
pop
cmps
add
add
cli
adc
adc
outs
scas
add
loopne
push
stos
clc
add
jle
cld
mov
enter
cmc
or
add
add
mov
repz
div
jecxz
in
movs
jmp
shl
pop
add
sahf
loop
add
pop
inc
sbb
call
add
test
mov
lds
psubusw
out
bound
pop
clc
or
in
jbe
push
pop
hlt
into
enter
jns
add
add
cmp
cdq
or
add
stc
in
enter
leave
test
mov
jns
inc
dec
test
cld
(bad)
hlt
add
stos
pop
inc
cmp
loopne
bound
popa
clc
aad
pushf
push
int3
test
mov
adc
cs
(bad)
loopne
pop
jecxz
rol
fimul
test
xor
sbb
test
mov
in
jmp
or
pop
sar
xlat
xor
rcr
push
fs
sbb
and
add
or
lock
imul
jo
pop
mov
push
sbb
add
sbb
es
jmp
loopne
repnz
les
aad
pop
xchg
scas
add
shl
mov
push
clc
add
sbb
test
push
shl
jmp
mov
or
dec
in
pop
push
ret
test
push
pop
imul
jmp
jb
test
leave
jnp
push
inc
aad
pop
push
cmps
push
sbb
pusha
div
or
call
push
adc
mov
push
push
out
sbb
fiadd
cmp
movs
or
push
dec
or
pop
(bad)
pop
inc
pop
sbb
cwde
loopne
rol
jnp
gs
sbb
push
sbb
dec
mov
pusha
or
jo
mov
adc
adc
in
stos
and
dec
or
rol
sbb
rol
push
dec
lods
mov
pop
and
adc
mov
dec
cmp
popf
inc
jmp
add
mov
movs
jmp
mov
or
cmp
push
inc
push
jl
push
fdivr
jl
xchg
inc
lock
fsubr
js
popa
clc
push
mov
call
jle
clc
scas
dec
(bad)
loopne
int3
les
sub
inc
adc
imul
jno
aad
add
add
jo
mov
inc
imul
imul
inc
sbb
popf
inc
or
xchg
shl
std
nop
xchg
sbb
es
(bad)
adc
(bad)
scas
lahf
xchg
jge
test
test
test
add
(bad)
in
stos
test
dec
dec
or
rol
add
cwde
add
add
add
or
repnz
mov
popa
(bad)
jmp
jl
ret
cmps
pusha
sbb
push
imul
punpckhwd
add
or
repnz
(bad)
into
ss
pop
fsub
in
sbb
int
fadd
into
jne
xlat
push
int3
(bad)
ror
jmp
clc
jg
aas
xadd
add
add
test
sub
sub
dec
cmp
inc
popf
jne
mov
ja
add
psubusw
out
bound
push
push
fstp
popf
push
shl
jecxz
lea
(bad)
xlat
popf
pushf
scas
call
ja
mov
(bad)
fild
add
sbb
add
jecxz
retf
add
add
sbb
mov
ins
xor
movs
sbb
mov
(bad)
out
xchg
jle
jmp
ficom
dec
sub
in
push
lea
add
jge
gs
les
pop
fcomp
ds
adc
rcl
cwde
jne
inc
sub
add
add
ja
push
pushf
mov
sbb
adc
or
pusha
mov
push
pop
iret
sbb
fstp
add
or
push
cmp
mov
push
cdq
rcr
pop
sbb
sub
or
jmp
or
add
xchg
test
pop
mov
loopne
push
in
gs
jle
call
jle
sub
imul
nop
imul
dec
std
or
add
or
cmp
sbb
xchg
mov
(bad)
ja
push
inc
cmp
adc
push
push
or
sar
popf
lea
mov
add
add
pop
clc
sbb
call
inc
call
(bad)
cld
dec
in
jmp
push
push
push
push
and
sbb
mov
xlat
mov
adc
sbb
sbb
and
dec
(bad)
loopne
leave
dec
sbb
fcom
in
les
add
add
loopne
leave
push
dec
idiv
add
add
adc
sbb
fmul
imul
call
add
or
in
les
xchg
xor
sub
in
movntps
retf
pop
rol
push
push
hlt
or
call
and
add
xchg
bts
(bad)
jmp
add
add
pusha
clc
mov
cwde
jns
mov
sub
scas
aas
(bad)
loopne
and
jecxz
popa
mov
add
(bad)
loopne
aaa
adc
adc
outs
mov
mov
and
adc
sub
retf
imul
rcl
ror
stos
cmc
mov
inc
(bad)
jmp
test
mov
jl
les
push
out
mov
(bad)
or
and
aaa
sbb
push
sbb
cmp
(bad)
cmp
(bad)
fistp
adc
jp
(bad)
cmp
rol
jb
sbb
(bad)
jno
jmp
and
add
add
inc
jg
inc
lods
sbb
stos
lds
lock
xchg
jge
adc
idiv
add
ret
sub
(bad)
rol
pop
jecxz
loope
imul
(bad)
dec
sbb
pusha
das
icebp
sub
rol
fs
fistp
or
add
add
(bad)
sub
push
pop
es
pop
shl
lds
ret
sahf
inc
pop
or
cs
xchg
jge
jle
test
sbb
pop
mov
bts
dec
cmp
or
xor
add
pop
cld
cmps
cmp
push
push
pop
mov
mov
aam
adc
sbb
into
dec
xor
lock
add
xchg
repz
xchg
sbb
pop
jge
push
mov
rol
lahf
mov
inc
mov
(bad)
dec
imul
or
push
(bad)
jmp
sbb
adc
dec
fdivr
mov
adc
mov
setnp
jecxz
cmp
jge
dec
push
add
add
add
call
dec
pop
shl
fimul
push
dec
push
and
push
lock
push
push
jae
mov
aas
std
or
mov
scas
dec
aam
dec
or
imul
sbb
(bad)
adc
sub
sbb
mov
shr
call
add
add
sbb
inc
and
outs
(bad)
fadd
cmp
xchg
loopne
not
ins
(bad)
push
(bad)
ficom
pop
dec
pop
cmp
addr16
lock
mov
jle
inc
add
add
shl
jecxz
clc
sbb
sbb
loop
in
sub
push
xor
add
loopne
ins
popf
jne
mov
ret
fs
pop
sar
jge
(bad)
pop
xchg
add
jg
or
jle
mov
pop
das
inc
add
push
inc
push
outs
inc
out
xor
push
sub
cwde
xchg
mov
aad
adc
xchg
test
mov
jge
sub
outs
jecxz
or
shl
add
add
das
popf
dec
jmp
nop
movs
add
out
dec
inc
sbb
les
iret
jmp
sub
rcr
pop
mov
inc
popf
dec
imul
push
hlt
into
fadd
sub
retf
call
leave
cld
inc
bound
call
sets
add
add
jmp
cmp
adc
test
jmp
push
loopne
add
or
test
inc
(bad)
enter
push
nop
add
jp
add
jb
and
push
sub
add
pop
sbb
sbb
pop
cld
xchg
sub
push
pop
(bad)
into
(bad)
gs
fcom
in
fwait
ins
sahf
jne
add
pop
lea
and
or
ficom
fdiv
arpl
and
xlat
cld
jmp
or
add
mov
cld
sub
dec
popa
pop
in
dec
mov
ins
sahf
inc
mov
push
xchg
jg
or
cs
imul
movs
out
iret
shl
jmp
ret
shl
movs
jmp
sbb
or
les
push
and
jbe
call
cmp
imul
sbb
and
idiv
xchg
sbb
push
adc
sbb
pop
cld
repnz
call
popw
fsub
in
fwait
ins
sahf
jne
add
and
imul
(bad)
push
jp
mov
cmp
aad
jecxz
pop
popfw
inc
xchg
jmp
in
or
or
fidivr
popf
pop
jge
imul
std
mov
pop
jecxz
jle
out
(bad)
pop
jle
add
add
and
sbb
push
outs
fadd
jno
call
pop
mov
in
pop
or
mov
pop
in
sbb
fld
arpl
in
inc
cmp
jne
jmp
aad
sbb
push
pop
add
call
clc
sub
push
mov
std
xchg
mov
jecxz
call
add
push
xor
push
jmp
or
ror
xchg
jns
inc
jne
pop
adc
adc
fisttp
arpl
adc
jmp
test
pop
imul
push
lock
sbb
dec
ins
nop
dec
ror
lock
call
add
mov
jns
mov
mov
pop
es
pcmpeqw
and
push
pop
pop
je
add
push
dec
test
shr
sbb
outs
push
xchg
loop
or
shl
and
sub
out
bound
sti
cld
pop
idiv
add
jecxz
adc
sbb
push
mov
add
es
sbb
sbb
sbb
mov
sbb
mov
sbb
fidivr
sbb
popf
rcr
popf
rcr
lods
rcr
scas
rcr
lahf
rcr
jno
sbb
nop
rcr
xchg
rcr
(bad)
rcr
jne
sbb
add
sbb
rcr
je
sbb
ja
sbb
inc
(bad)
sbb
ss
sbb
adc
jg
lea
out
nop
and
jg
lea
in
nop
xor
jle
xor
sbb
movs
verr
into
jnp
aad
cwde
sub
jle
fs
sbb
and
(bad)
jnp
xchg
loopne
mov
test
add
jle
mov
sub
xchg
rcr
cmc
aas
js
mov
ins
in
push
xchg
shr
imul
sub
pushfw
mov
rcr
imul
mov
mov
out
push
aad
popf
mov
out
push
in
popf
mov
inc
dec
mov
into
(bad)
dec
popf
call
in
sub
in
cmc
aam
add
imul
fisubr
mov
in
js
push
test
add
lods
sbb
imul
add
add
jecxz
(bad)
jl
sbb
test
mov
test
xchg
sub
in
mov
nop
pop
push
test
mov
adc
mov
xor
inc
lock
in
cld
pop
adc
pop
leave
test
cmp
inc
adc
test
push
mov
inc
or
js
add
add
add
adc
int3
xchg
sar
mov
(bad)
push
pop
jmp
nop
and
jmp
repz
movs
sbb
into
jl
inc
dec
jmp
loopne
ins
sahf
dec
ins
in
add
(bad)
in
lods
scas
les
cmc
jmp
push
dec
mov
bound
or
(bad)
adc
jg
verr
mov
dec
adc
or
sahf
sbb
or
popf
je
jge
add
and
movs
sbb
jb
aas
add
mov
ror
mov
jae
xor
sub
call
push
jo
dec
sahf
and
add
pushw
scas
test
(bad)
fcomp
jne
jmp
call
pop
loopne
data16
push
cmp
sbb
mov
dec
fs
repnz
mov
ds
xor
in
hlt
dec
fdiv
cvtpi2ps
(bad)
jne
xor
push
lock
in
cmp
and
push
seta
add
bound
push
call
push
adc
leave
outs
call
pop
sbb
fst
sbb
and
push
push
cmp
sbb
rcl
lea
sub
int3
scas
push
xchg
lahf
sbb
jno
out
jecxz
aad
jle
mov
adc
add
add
data16
outs
cwde
jge
and
push
pop
cdq
leave
pop
loopne
jne
out
hlt
xchg
adc
mov
cdq
leave
pop
cmps
xchg
mov
mov
test
pop
cmp
popa
popf
jne
fld
lea
adc
adc
or
(bad)
xor
xor
mov
pop
in
cmp
call
call
jge
jle
rol
xor
sbb
mov
dec
mov
hlt
and
ror
mov
mov
inc
xor
mov
jne
mov
xor
mov
push
pushw
repnz
dec
sub
mov
ret
popf
inc
dec
cmp
add
add
dec
ins
arpl
or
adc
lods
push
ret
rcr
cmp
mov
ins
lods
icebp
aam
popf
or
inc
(bad)
into
cmps
pop
in
push
dec
test
stos
cdq
rcl
ins
aad
mov
call
push
mov
pop
and
jg
ret
or
hlt
add
(bad)
push
popf
jmp
cs
dec
std
pop
inc
push
push
cdq
popf
dec
leave
jmp
dec
adc
jg
xor
in
adc
jg
add
cdq
leave
(bad)
in
cdq
add
jle
mov
pop
sahf
push
cmp
mov
neg
add
inc
adc
jg
jmp
mov
pop
rol
add
add
cld
rcl
push
loopne
add
jbe
inc
dec
repnz
clc
outs
jnp
shl
adc
jle
mov
in
sub
xchg
pop
scas
jle
xor
jl
data16
sub
adc
jle
mov
dec
jecxz
or
cmp
pop
add
sahf
lods
dec
jle
add
add
and
fs
mov
pop
ins
xchg
fimul
bts
call
dec
or
icebp
outs
mov
pop
pop
repnz
pop
into
jge
mov
verr
pop
in
pop
ja
movs
test
out
arpl
add
add
call
cdq
or
xchg
adc
pop
fdivp
dec
adc
test
add
xchg
push
imul
pushf
mov
mov
add
xor
or
mov
jle
inc
sqrtps
mov
add
pop
jmp
mov
aad
and
xlat
xchg
mov
outs
pop
movntps
push
gs
mov
je
adc
test
mov
jmp
inc
xchg
or
pop
add
ja
xchg
test
mov
cmp
push
into
(bad)
add
or
push
xchg
loopne
jecxz
bound
push
dec
test
mov
cwde
or
and
test
mov
add
test
call
bound
verr
imul
dec
xlat
push
outs
jo
in
cmc
add
clc
bound
dec
push
out
mov
add
sbb
sbb
pop
sbb
(bad)
add
mov
add
(bad)
pop
ins
push
fadd
sbb
hlt
fidiv
pop
into
mov
cvtpi2ps
sbb
fs
adc
not
jmp
or
je
jl
clc
test
add
cmp
and
add
imul
push
mov
mov
sbb
(bad)
jecxz
jmp
aaa
popf
inc
std
or
jne
clc
xchg
add
(bad)
pop
shr
jb
jg
out
push
jb
and
pop
cld
pop
aas
push
hlt
call
dec
xlat
push
ficom
in
mov
xchg
dec
cvtps2pd
popf
jne
sahf
daa
test
imul
adc
adc
mov
mov
add
push
inc
ins
mov
mov
ins
(bad)
dec
pop
(bad)
stos
or
loopne
sahf
ss
push
gs
in
popf
js
nop
out
and
sbb
movs
mov
add
sbb
fistp
push
push
hlt
stos
nop
ror
sbb
ficom
(bad)
loop
int
dec
shl
push
sub
cmp
push
in
stc
or
sahf
xchg
adc
adc
aad
push
in
jecxz
or
pop
sub
in
out
pusha
mov
lock
xchg
call
push
aad
(bad)
jne
imul
push
add
data16
add
(bad)
bound
(bad)
jnp
cmp
retf
popf
mov
push
in
fdiv
jmp
jle
sbb
push
sbb
jno
pushf
xchg
and
cld
xchg
sbb
lods
cld
or
pop
mov
xchg
adc
in
(bad)
(bad)
bound
add
add
nop
jge
in
pop
nop
or
ins
clc
or
adc
or
pop
push
nop
push
popf
or
mov
push
in
loop
or
test
xchg
dec
(bad)
das
(bad)
push
aad
popf
mov
push
in
out
mov
jmp
in
pushf
cmc
mov
(bad)
jecxz
or
add
and
std
or
dec
lods
or
popf
jne
xchg
add
jle
adc
or
adc
in
out
jp
push
or
lea
mov
dec
in
sub
push
dec
popf
or
mov
add
sbb
bound
cmp
mov
(bad)
dec
jle
ret
or
lock
(bad)
sti
or
mov
cwde
cmp
push
jnp
mov
inc
pop
jle
(bad)
test
push
inc
xchg
(bad)
and
in
push
pop
push
movs
push
in
inc
outs
cmp
out
(bad)
adc
cmc
lahf
push
in
(bad)
js
or
mov
or
cs
mov
or
movs
push
xchg
test
inc
mov
pop
sub
aas
jmp
bound
xchg
cld
or
add
call
in
sahf
add
jb
fimul
sbb
call
fistp
inc
popf
jge
mov
xlat
or
test
dec
in
loop
mov
pop
mov
mov
or
cmp
mov
xchg
cwde
cmp
in
cs
mov
(bad)
cwde
and
loop
or
test
(bad)
dec
aad
push
or
add
add
popf
mov
push
in
fmulp
in
imul
mov
sti
push
sti
data16
lahf
push
and
jge
sbb
stc
and
nop
mov
fld
out
cmp
mov
mov
push
in
pop
push
jmp
add
or
lods
push
movs
add
add
nop
sbb
push
cmp
mov
mov
std
(bad)
rep
adc
add
repz
push
adc
push
adc
lea
add
ret
cmp
add
adc
and
or
jnp
mov
mov
push
(bad)
cwde
popf
addr16
lea
jmp
or
mov
or
call
dec
jle
add
push
lock
(bad)
jnp
test
mov
out
push
jnp
mov
data16
ss
or
or
push
aas
xchg
(bad)
push
add
dec
into
sub
out
retf
sbb
lahf
push
and
or
mov
je
inc
jmp
retf
cmp
or
pop
fisub
or
pop
sub
mov
out
inc
jmp
dec
repnz
push
aad
popf
cwde
push
addr16
(bad)
push
enter
test
mov
add
in
sahf
mov
addr16
inc
popf
push
mov
imul
sbb
cmp
imul
out
cmp
jmp
adc
loop
aas
leave
push
movs
(bad)
lock
sti
add
and
jge
add
gs
cli
push
das
(bad)
mov
mov
add
nop
or
or
cmp
push
sub
aad
dec
call
es
adc
mov
adc
xchg
mov
mov
movs
sub
add
add
push
pop
and
inc
dec
mov
nop
(bad)
in
(bad)
aaa
rcpps
mov
push
cli
stos
inc
mov
add
add
cs
scas
es
loop
enter
shl
cwde
popf
in
pop
nop
adc
or
push
adc
fsubr
push
fld
add
dec
shl
mov
dec
das
retf
test
gs
jnp
test
mov
jmp
or
add
add
in
jecxz
ret
loop
mov
and
dec
aad
push
push
jg
stc
push
mov
mov
or
mov
pop
sahf
pop
push
call
in
(bad)
in
push
adc
(bad)
add
inc
mov
(bad)
cwde
jl
in
pop
lea
mov
dec
nop
nop
and
jmp
or
jo
mov
mov
sti
fprem1
sub
movs
push
movs
jle
mov
xor
mov
dec
rol
out
nop
or
cmp
mov
icebp
or
mov
pop
push
arpl
stos
in
jnp
cli
mov
pop
sahf
pop
add
sbb
call
add
push
or
mov
(bad)
cwde
mov
jmp
adc
xchg
pop
in
bound
mov
scas
adc
add
(bad)
sbb
movs
push
xchg
test
and
xor
lea
inc
(bad)
loop
dec
xchg
mov
movs
mov
jmp
xor
fild
add
add
xchg
add
(bad)
in
(bad)
cmp
(bad)
retf
in
pop
call
jmp
scas
or
loop
lea
sbb
mov
cwde
popf
dec
in
pop
xchg
adc
or
push
adc
(bad)
push
(bad)
add
dec
aad
push
aad
jecxz
mov
push
das
retf
test
dec
in
jnp
test
mov
xchg
cmc
mov
add
(bad)
loop
dec
xchg
mov
movs
xchg
call
mov
call
int
or
rcl
call
sahf
xchg
adc
jo
nop
or
xor
pop
mov
ffree
test
hlt
push
(bad)
mov
push
in
xchg
stc
lock
(bad)
xchg
dec
popf
int3
inc
cld
jnp
xchg
mov
inc
push
(bad)
cwde
or
pop
push
call
(bad)
nop
sbb
in
fidivr
nop
pop
ror
pmaxsw
movs
push
gs
imul
(bad)
out
(bad)
inc
out
mov
or
mov
pop
in
push
push
enter
mov
jmp
sbb
popa
push
in
pop
mov
mov
sbb
lds
dec
(bad)
add
(bad)
lds
in
nop
push
int
iret
sar
popf
or
aas
pop
adc
mov
mov
(bad)
retf
fist
or
add
add
pop
adc
mov
mov
nop
retf
ficom
push
ret
test
aas
push
cld
ficom
in
dec
(bad)
xchg
jge
or
jecxz
ffree
enter
cmps
ftst
add
cld
fwait
add
retf
into
mov
inc
add
add
popf
inc
add
sahf
sbb
sbb
jmp
sahf
and
sbb
inc
sahf
dec
mov
sub
cld
sar
(bad)
xchg
cmp
iret
mov
xchg
adc
ror
popf
inc
popa
jnp
ja
sub
mov
dec
cwde
rcr
mov
jp
ja
add
adc
dec
nop
rcr
retf
bound
and
adc
test
add
dec
cdq
mov
sbb
das
dec
cdq
stos
in
sbb
aad
in
or
test
retf
push
or
fwait
mov
imul
push
in
or
push
nop
dec
jns
xchg
sbb
sbb
leave
xchg
push
mov
scas
or
outs
add
repz
fisub
mov
or
(bad)
jmp
mov
push
sbb
inc
(bad)
sub
jg
inc
mov
sahf
sbb
jg
inc
add
add
add
cmp
jmp
add
dec
lea
rcr
add
fistp
add
call
add
jg
or
xchg
inc
push
mov
cli
mov
push
jnp
jmp
or
mov
sti
dec
popf
sbb
cmp
scas
xchg
retf
dec
(bad)
sahf
mov
call
add
mov
cmp
xchg
push
das
retf
lock
popf
xchg
mov
int3
sahf
mov
(bad)
adc
data16
add
shl
sbb
loope
add
js
movs
retf
fsubrp
mov
add
(bad)
mov
add
je
es
push
jle
pop
pushf
inc
dec
mov
hlt
adc
or
push
int3
int
push
and
sbb
scas
into
mov
mov
mov
call
lock
movs
int3
popa
hlt
pop
mov
push
add
jne
retf
sti
jge
lea
repz
mov
jle
dec
lods
ss
adc
loop
lea
add
add
data16
aad
push
movs
test
mov
or
adc
fsubr
push
ins
int
adc
aam
push
gs
inc
dec
mov
dec
das
retf
test
in
lahf
push
adc
test
data16
push
jnp
aaa
in
nop
popf
push
in
out
std
dec
out
sbb
stos
rcl
addr16
jge
retf
sbb
push
pop
sbb
int3
push
clc
push
(bad)
movs
push
xchg
test
retf
arpl
lods
mov
xchg
(bad)
mov
push
or
xchg
mov
inc
pop
(bad)
cwde
std
push
in
fstp
jmp
lds
iret
fadd
add
add
sbb
lds
call
push
mov
mov
lds
nop
nop
adc
mov
sbb
shl
sbb
adc
fadd
ss
jle
inc
cld
or
clc
cmps
add
in
cs
in
add
inc
inc
movs
int3
dec
cld
sbb
add
outs
hlt
iret
push
adc
(bad)
aas
push
inc
sub
(bad)
into
rol
lds
cmp
dec
sbb
test
cwde
dec
pop
in
popf
pop
push
call
push
nop
dec
or
dec
or
adc
or
mov
dec
jle
push
retf
push
cld
push
mov
lock
les
add
add
jmp
adc
data16
repnz
push
movs
adc
sbb
movs
push
xchg
adc
jge
jmp
iret
shl
sub
push
shld
push
stos
mov
sub
dec
push
cmp
adc
mov
das
fxch
mov
mov
jnp
mov
cmp
adc
sub
fld
or
retf
dec
adc
fisub
sbb
aas
pop
adc
mov
mov
(bad)
cwde
mov
dec
pop
push
mov
or
adc
push
das
retf
test
xor
adc
enter
push
jnp
ja
(bad)
loop
inc
xchg
mov
dec
cmp
retf
adc
push
retf
cmc
test
mov
cmp
mov
(bad)
dec
inc
sub
(bad)
jle
retf
aaa
retf
push
or
mov
push
or
cmp
dec
in
jmp
int
push
aad
(bad)
jo
add
add
push
adc
xchg
cmp
das
retf
repz
xchg
dec
(bad)
xor
or
sub
sar
push
in
data16
dec
mov
cmp
and
add
cmp
sbb
push
in
jg
aas
sub
sar
dec
lods
mov
inc
in
pop
push
(bad)
loop
mov
data16
iret
mov
push
jmp
jg
mov
dec
in
mov
(bad)
adc
xchg
mov
movs
jg
inc
mov
pop
sub
movs
(bad)
out
loopne
and
cmp
test
mov
jmp
movs
(bad)
xchg
gs
in
cmp
cli
dec
out
lahf
push
push
jg
iret
repnz
add
xor
push
retf
mov
push
or
add
cmp
jae
cwde
sub
adc
jmp
sub
add
dec
jnp
sbb
mov
data16
(bad)
xchg
jle
sbb
add
dec
add
jnp
sub
rcr
sbb
movs
jmp
dec
movs
inc
inc
loopne
mov
add
add
xchg
stc
inc
mov
mov
push
adc
or
dec
adc
out
push
and
test
and
popf
mov
ins
neg
ret
add
clc
repnz
or
lahf
push
aad
xchg
sbb
push
data16
push
add
les
and
std
jge
test
movs
push
test
and
aam
push
out
je
(bad)
fnstsw
mov
aaa
in
dec
push
push
add
add
fadd
adc
int
mov
fwait
sbb
lea
jmp
or
jle
ins
mov
xlat
push
pop
icebp
push
push
dec
loopne
push
dec
cmc
dec
xor
push
out
in
pop
cmp
cmp
scas
add
test
cmp
add
add
xchg
cmp
xchg
call
in
rol
test
add
xchg
sti
inc
xchg
call
mov
add
test
mov
test
and
cmc
mov
or
fs
cmps
adc
aam
sbb
stos
xchg
pop
repnz
push
add
inc
pop
repnz
pop
repnz
inc
pop
repnz
push
add
inc
pop
repnz
inc
pop
repnz
mov
pop
repnz
pop
bnd
push
or
pop
repnz
pop
repnz
mov
or
push
repnz
push
repnz
push
repnz
add
and
push
repnz
push
repnz
push
(bad)
cld
push
repnz
cld
xchg
rol
loop
pop
inc
daa
shl
cmc
loop
aad
in
mov
mov
(bad)
repnz
push
jmp
loop
in
iret
mov
test
mov
into
xchg
adc
out
inc
movs
call
data16
push
lock
lock
push
lock
lock
push
lock
out
adc
(bad)
out
adc
out
adc
(bad)
out
adc
cmps
repz
je
pop
(bad)
xchg
repz
cmps
repz
xchg
repz
data16
push
repz
jmp
and
movs
nop
push
psubusb
(bad)
jmp
movntps
pop
(bad)
cwde
pop
imul
adc
sub
mov
(bad)
mul
(bad)
sti
lea
add
add
inc
out
cwde
fucomi
icebp
mov
jl
loop
in
(bad)
mov
mov
div
mov
or
rol
aas
leave
(bad)
aam
in
sub
add
inc
inc
ret
loop
adc
pop
mov
add
sbb
inc
dec
mov
rcl
div
sub
add
imul
dec
lea
icebp
fs
cwde
aas
fadd
imul
(bad)
(bad)
jb
mov
inc
packuswb
dec
or
sbb
out
mov
and
pop
mov
out
or
call
movs
and
xor
jg
fsub
jmp
push
imul
shl
sbb
sbb
imul
adc
pop
movs
jmp
and
inc
cwde
test
fldenv
rcr
outs
inc
out
sbb
cmp
and
sbb
out
pop
test
or
adc
mov
xor
popf
gs
movs
jmp
xor
popf
and
inc
daa
adc
push
dec
inc
xchg
xor
add
or
sar
(bad)
fcmovbe
jmp
in
pop
add
add
ret
popf
daa
add
push
and
and
xor
cwde
dec
call
out
mov
push
in
pop
mov
(bad)
mov
adc
jmp
and
xor
sbb
fsub
push
or
cwde
aas
cwde
test
rcl
cdq
sbb
jmp
xchg
inc
lock
ds
ficomp
cmp
ror
aaa
fst
ret
(bad)
cmp
add
add
add
das
sbb
(bad)
imul
neg
push
(bad)
fcom
pop
shr
rcr
js
and
popf
xchg
ret
sahf
push
movs
jmp
sub
pop
add
inc
daa
adc
std
dec
inc
in
or
push
fcmovb
dec
mov
rcr
and
out
or
(bad)
pop
inc
movs
add
daa
add
(bad)
and
sbb
cwde
dec
pop
test
dec
mov
cli
loop
inc
mov
out
enter
jg
push
push
sub
(bad)
rcl
pop
and
pop
add
sbb
cwde
inc
call
add
add
xor
sets
fdivr
rcl
cdq
sbb
push
cld
outs
ds
ret
pop
shl
(bad)
sar
daa
add
add
inc
xchg
shl
lods
push
ffree
sub
hlt
mov
adc
cli
xchg
sbb
sub
xlat
push
out
fsubp
jne
jmp
add
add
pop
cmps
(bad)
(bad)
in
(bad)
jmp
(bad)
dec
adc
or
dec
mov
or
mov
push
or
or
retf
or
adc
mov
lock
inc
add
xor
adc
push
ror
mov
jmp
dec
fld
fcomp
shl
jo
mov
add
push
xor
ror
leave
clc
mov
mov
fidivr
aam
mov
dec
enter
sbb
(bad)
rcl
jle
adc
mov
jge
cld
(bad)
jle
adc
loopne
push
popa
add
or
enter
loope
add
add
lock
shr
ror
sbb
jno
cld
enter
cli
adc
sub
inc
push
retf
aam
imul
sbb
add
loop
dec
movs
cmp
dec
cld
dec
(bad)
dec
mov
leave
call
jmp
push
pop
in
nop
mov
retf
loopne
ins
lods
inc
push
call
sub
and
add
jl
cmc
imul
mov
or
scas
adc
loopne
push
popa
add
int
push
clc
cmps
dec
pop
rol
enter
push
jno
xchg
ret
in
sub
(bad)
dec
mov
mov
add
add
por
adc
sub
push
bts
in
sub
xor
dec
popa
or
into
jl
jmp
out
inc
adc
daa
rcl
push
cli
setp
in
inc
or
mov
mov
aas
std
or
movs
fst
mov
cmp
loope
push
clc
repnz
shl
xchg
nop
ins
lds
adc
dec
push
clc
mov
or
es
or
scas
adc
loopne
dec
fnstsw
cld
mov
or
jle
adc
loopne
dec
dec
or
cmps
dec
pop
shl
push
clc
mov
fsub
rcl
add
push
icebp
mov
in
sahf
ds
dec
pop
and
setnp
pop
add
in
push
and
cmp
adc
pop
rol
dec
shr
adc
cdq
leave
cwde
daa
nop
dec
loope
iret
add
mov
and
mov
jle
dec
test
mov
inc
rol
loopne
push
jmp
jae
push
iret
add
inc
in
push
mov
clc
scas
shl
nop
stc
pop
mov
in
mov
mov
inc
in
mov
jne
mov
fcomp
mov
lock
lock
stc
data16
shr
shl
mov
mov
push
clc
pop
xchg
imul
jno
push
lock
sbb
add
add
retf
call
dec
jmp
stc
mov
lds
clc
or
dec
(bad)
dec
aad
dec
hlt
out
sbb
add
dec
mov
shr
hlt
mov
cmc
push
xor
push
inc
iret
xchg
pop
mov
les
pop
scas
xchg
pop
dec
lods
mov
sahf
enter
scas
shr
dec
pop
jno
push
les
inc
pop
xchg
pop
inc
ins
mov
hlt
out
or
pop
popa
hlt
aad
or
xchg
pop
adc
push
mov
mov
sub
jge
sbb
jno
pop
sbb
sbb
pop
jl
inc
push
or
imul
push
test
or
inc
(bad)
sbb
sbb
add
or
sub
lds
mov
ret
(bad)
ror
outs
(bad)
in
inc
scas
dec
add
dec
in
push
or
outs
int3
sub
ins
sbb
pusha
push
das
iret
and
in
xchg
sbb
test
dec
cmp
and
jle
(bad)
push
push
pcmpgtw
loope
sbb
add
dec
inc
push
fimul
popa
lods
pop
test
(bad)
or
cwde
test
lods
sar
stos
int
addr16
cli
adc
add
push
retf
daa
call
out
pushf
popf
fstp
loop
sbb
or
stos
pop
test
mov
sbb
jo
pop
fdivr
ret
push
stos
punpckhdq
mov
mov
push
jno
fsubr
pop
mov
push
ret
push
enter
inc
icebp
sbb
jne
stos
push
xor
stos
dec
mov
out
mov
push
add
das
sahf
add
test
inc
or
add
and
shr
mov
sub
pop
enter
dec
jno
pop
mov
call
les
bound
minps
pop
add
les
xor
loopne
pushf
push
inc
or
jno
ror
dec
pushw
lds
mov
add
pop
or
sub
add
cmp
outs
sub
mov
jle
mov
cs
loope
movs
mov
test
adc
xchg
arpl
add
cmp
loopne
push
mov
push
push
dec
leave
xchg
xchg
dec
test
fiadd
cmp
pop
mov
add
add
sbb
cwde
enter
add
sbb
pop
push
pop
add
fcomp
pop
sub
or
xchg
(bad)
pop
adc
add
out
adc
les
in
inc
pop
nop
jbe
sbb
fisubr
cwde
mov
dec
leave
fisttp
mov
int
fiadd
pushf
inc
xchg
stos
dec
call
pushf
pop
inc
cmps
xchg
je
fucom
cmp
(bad)
aad
imul
pop
adc
fsubr
sti
mov
sbb
jmp
pop
ins
in
in
movs
stos
push
mov
ins
mov
test
ins
lods
mov
adc
sahf
aam
jge
inc
pop
mov
outs
stos
push
mov
jb
sbb
leave
fist
(bad)
push
int
(bad)
or
or
(bad)
call
stos
inc
movs
jnp
push
mov
mov
in
(bad)
loope
loop
mov
mov
push
out
add
dec
dec
mov
cmp
and
sbb
cwde
or
add
add
fist
outs
jecxz
(bad)
loop
dec
cmp
sbb
inc
int
iret
add
push
pop
rcr
sar
push
add
push
test
jecxz
gs
add
or
add
jne
sbb
adc
pop
daa
lods
add
sub
mov
add
add
jno
xlat
packssdw
inc
xchg
je
xlat
loop
nop
mov
push
xchg
repnz
xchg
jge
jle
add
mov
push
mov
cmp
test
mov
daa
sar
dec
cli
cmp
data16
test
sub
(bad)
jmp
test
xchg
jb
add
mov
jle
mov
pop
mov
jg
cmp
cmc
imul
inc
dec
cli
add
stc
pushf
xchg
rcr
loop
or
adc
add
pushf
leave
jle
add
mov
or
push
xlat
test
ja
cmps
pop
mov
xchg
popf
inc
dec
inc
clc
add
adc
lods
sbb
sub
xlat
into
push
movs
cli
cmps
bound
inc
adc
fimul
je
inc
pop
test
push
lods
xor
cmps
pop
mov
cwde
stc
mov
fs
add
movs
pop
lods
lods
and
sahf
outs
in
push
out
ds
dec
cmp
pop
add
and
cwde
jge
add
add
and
push
inc
mov
and
bound
add
and
and
pop
add
dec
lea
and
inc
daa
pop
add
inc
mov
and
add
inc
xchg
add
and
in
es
add
cdq
add
and
in
pop
add
push
add
test
add
xor
jge
and
push
and
and
and
leave
add
or
add
ffree
sbb
ja
loop
clc
ficom
lea
dec
lea
lock
(bad)
push
and
test
std
inc
add
xchg
out
jno
sbb
add
gs
sbb
xor
rcr
adc
lock
(bad)
cmp
pop
lea
lods
lock
loop
imul
add
stos
hlt
pop
sub
pop
add
sub
in
in
dec
mov
inc
aad
fdiv
mov
test
sbb
add
add
pop
add
add
sbb
packssdw
dec
jl
mov
jo
xor
mov
fdivr
mov
test
sbb
add
add
ficomp
aam
packssdw
or
bound
adc
adc
push
jge
mov
sbb
leave
jb
and
add
fs
jecxz
pop
push
sbb
in
loopne
shr
rcr
mov
call
lods
inc
out
sbb
call
and
movs
mov
or
inc
and
movs
add
or
xlat
mov
push
adc
push
mov
add
bound
adc
push
mov
(bad)
in
adc
jmp
mov
xlat
mov
(bad)
in
push
push
adc
call
mov
dec
push
mov
sbb
jae
add
(bad)
imul
push
adc
aad
dec
call
ins
mov
(bad)
neg
fisubr
push
inc
sbb
into
div
movs
pop
(bad)
pop
cmp
add
(bad)
mov
loopne
inc
aam
(bad)
dec
mov
pop
or
jge
dec
inc
inc
and
xor
int3
jno
aam
push
push
aam
sahf
fimul
push
repz
or
sub
fdivr
rol
add
fnstenv
or
adc
in
mov
stc
in
je
push
pop
add
cmp
int3
xchg
push
aam
push
fisttp
icebp
cli
repz
mov
jo
sbb
dec
(bad)
pop
push
sub
pop
jle
inc
fxtract
push
clc
call
call
mov
push
aam
adc
aam
adc
aam
sahf
fisttp
jno
pop
or
repnz
(bad)
sbb
inc
and
rcr
lds
ret
adc
stos
xchg
sbb
in
cdq
shr
(bad)
sbb
push
in
mov
ret
rcr
aad
aam
xchg
xor
int3
push
in
mov
pop
(bad)
icebp
cs
adc
fwait
xor
fdiv
add
popf
adc
mov
inc
divps
inc
ins
pop
xor
retf
sbb
lock
sbb
and
and
retf
sbb
not
jmp
sahf
loop
mov
std
sbb
sbb
mov
ss
push
sbb
adc
add
ror
add
outs
push
pop
dec
xor
dec
call
push
dec
or
fucomi
pop
cmp
imul
test
jne
loope
or
add
jecxz
push
pop
jecxz
pop
in
shl
test
adc
mov
push
call
(bad)
daa
dec
mov
outs
push
pop
ret
ret
mov
dec
push
ins
mov
icebp
cmp
dec
push
aam
(bad)
sbb
bound
in
push
lock
shl
push
add
jb
jne
jmp
add
in
dec
(bad)
clc
sbb
fwait
je
gs
xor
inc
push
test
jmp
mov
cdq
test
sbb
sbb
lock
hlt
std
sar
mov
pop
push
lock
sbb
mov
dec
mov
sar
push
jmp
mov
js
aad
js
aad
sbb
(bad)
sbb
pop
dec
jno
(bad)
pop
int
dec
mov
sbb
popf
leave
sbb
mov
sbb
aad
dec
call
jl
popf
inc
imul
es
inc
jmp
popa
jmp
cmp
sbb
call
(bad)
repnz
aas
pop
xchg
mov
pop
(bad)
in
scas
inc
(bad)
dec
sbb
leave
sbb
adc
inc
adc
pop
dec
push
push
(bad)
pop
in
push
(bad)
icebp
sub
inc
int
pop
or
pop
push
ins
xor
inc
ins
daa
inc
jmp
(bad)
clc
push
lock
cdq
sbb
add
inc
ins
sbb
outs
sbb
xor
adc
add
sbb
pushw
pop
add
or
pop
(bad)
pop
fiadd
inc
in
sub
(bad)
je
std
or
add
mov
inc
ffree
sbb
pop
dec
push
push
(bad)
icebp
dec
(bad)
loop
push
repz
or
je
push
ins
shl
jmp
pop
jae
fiadd
add
add
inc
or
lock
lea
jecxz
push
ror
movs
in
idiv
sar
in
inc
pop
jg
pop
dec
call
dec
mov
or
cwde
lea
rcr
xchg
mov
push
(bad)
mov
sbb
hlt
mov
sbb
push
std
push
mov
add
add
(bad)
sub
out
es
mov
push
dec
push
or
test
jmp
daa
cs
jae
cmp
addr16
std
popa
add
xchg
call
in
pop
out
cmp
xchg
les
movs
pop
xor
bound
in
test
push
bound
cmp
mov
test
jmp
cmp
adc
stc
out
jns
jg
mov
xchg
mov
sub
lea
je
push
cmp
or
lea
sbb
pop
jb
mov
into
std
data16
aas
pop
(bad)
mov
imul
std
clc
cmp
xchg
pop
dec
test
jo
lea
push
and
push
mov
out
out
jle
pop
sub
fdiv
fild
test
sub
ins
stos
pop
add
rcr
call
test
mov
add
add
in
pop
cmp
add
add
adc
test
shl
jecxz
mov
add
cmp
or
push
ins
push
add
sub
cmp
pop
test
sbb
test
rol
or
or
mov
add
test
or
dec
mov
clc
arpl
loop
int3
pop
cld
(bad)
call
sti
out
or
add
add
loope
ret
sbb
std
in
add
push
hlt
(bad)
fadd
loop
sbb
pop
push
pop
es
jecxz
pop
jmp
mov
sbb
dec
mov
add
sub
addr16
add
(bad)
mov
add
push
(bad)
call
add
add
sbb
fisub
add
cwde
fcom
loop
fsub
cwde
xor
loop
imul
clc
std
(bad)
stc
pushf
lea
out
loop
pushf
cmps
sar
stc
pushf
popf
dec
out
loop
pop
(bad)
enter
pushf
mov
mov
stc
loop
jno
repz
(bad)
stc
jge
inc
dec
loope
adc
test
out
loop
jnp
mov
and
or
add
sbb
fdiv
loop
ret
add
cdq
call
lock
loope
bound
pop
cld
int3
or
std
adc
fiadd
or
in
pop
add
cld
push
out
in
and
cli
loop
and
or
test
jb
pop
aad
adc
push
add
std
push
out
inc
(bad)
call
add
jne
add
call
pop
push
add
inc
jecxz
loope
pop
add
rcr
push
out
es
jmp
out
out
dec
mov
push
sbb
ins
cmp
(bad)
cld
add
je
pop
jecxz
jg
lock
out
sbb
in
(bad)
(bad)
out
shl
aad
(bad)
out
xchg
les
inc
jb
mov
jmp
(bad)
jne
add
je
add
sbb
add
ret
ins
into
pop
add
or
pop
push
pop
in
inc
ins
or
push
lock
jl
pop
cld
shr
loop
mov
add
push
jb
(bad)
fmul
std
enter
pop
push
fs
adc
jo
jge
adc
cwde
cmp
cmp
and
mov
inc
adc
sbb
stos
xchg
jge
ret
iret
mov
fwait
push
sbb
lods
mov
cld
add
adc
fadd
cmp
call
dec
or
push
add
(bad)
pop
cld
shr
loop
mov
or
int
pop
add
jb
mov
push
xlat
mov
(bad)
in
sti
or
add
add
cmps
out
test
adc
sbb
inc
and
push
sbb
test
std
pushf
mov
sbb
out
dec
aad
jo
aad
sbb
or
test
push
push
sbb
sub
out
add
or
push
std
push
jecxz
loop
cdq
rol
add
sub
pop
sbb
jb
bound
jo
jg
xlat
(bad)
cwde
fucomi
pop
outs
or
inc
sbb
lock
add
jle
jne
neg
(bad)
out
out
sbb
jle
mov
jle
xor
sbb
xor
add
add
and
jle
add
jle
add
cmp
adc
or
das
add
fisub
ror
adc
ret
jle
ror
add
push
push
jle
push
cmp
push
mov
sti
fist
cmp
(bad)
jge
inc
jecxz
mov
pop
(bad)
jmp
add
add
ds
(bad)
test
jge
mov
xor
hlt
jge
(bad)
aad
in
in
fmul
cmps
js
call
jmp
(bad)
xor
dec
inc
movs
in
xchg
push
movs
test
push
mov
in
mov
test
add
add
call
call
into
enter
(bad)
sbb
repz
jb
add
pop
(bad)
in
jg
jecxz
icebp
icebp
push
jmp
pop
fmul
inc
jb
mov
in
jns
aad
pop
mov
pop
enter
fdiv
cmp
or
adc
icebp
lds
in
xchg
push
inc
push
ss
lock
repnz
(bad)
sub
lods
std
pop
add
movs
cmp
adc
enter
fcom
repz
fdivr
push
js
cmp
ja
push
std
(bad)
lldt
jmp
std
sahf
dec
add
js
add
add
or
push
pop
aam
cli
fmul
loope
test
outs
xchg
mul
jne
add
jmp
cwde
clc
jecxz
or
fld
add
mov
pop
add
sbb
sub
les
jmp
sbb
gs
inc
add
add
inc
push
xchg
gs
loop
pop
or
in
xor
or
xor
dec
sbb
mov
adc
jmp
push
lock
test
pop
ins
mov
push
jne
lea
outs
adc
leave
sub
jmp
call
in
adc
movs
or
xchg
adc
pop
fimul
test
in
sbb
(bad)
dec
hlt
push
cmp
in
push
call
imul
adc
mov
sbb
jmp
add
jmp
sbb
ret
cs
adc
ins
aaa
mov
or
aad
dec
call
mov
push
push
aad
xchg
(bad)
(bad)
jge
add
(bad)
(bad)
adc
fdiv
lock
into
sti
loop
sbb
add
arpl
aas
pop
cmps
push
push
int
add
push
in
xor
call
cmp
jne
jmp
fild
or
dec
push
mov
call
jmp
sub
loope
ins
or
jnp
mov
sbb
or
or
cld
dec
call
ins
xchg
fcmovb
in
add
loop
cwde
sbb
(bad)
aam
jne
push
lock
(bad)
mov
push
fsubp
mov
push
(bad)
icebp
fwait
ret
adc
fadd
arpl
xchg
into
dec
je
push
mov
pushf
dec
sbb
adc
adc
pop
mov
mov
fnsave
pop
sub
xchg
mov
pop
pop
add
adc
adc
popf
jne
or
inc
add
xchg
push
lds
mul
sbb
add
xchg
inc
pop
or
jmp
push
sbb
xor
add
std
dec
mov
add
adc
adc
and
out
data16
mul
mov
xchg
add
pop
(bad)
fdiv
inc
push
clc
push
add
add
add
adc
sbb
mov
setp
cwde
jge
xchg
dec
loopne
les
leave
es
push
dec
jmp
pop
add
push
nop
or
xchg
scas
sbb
es
pop
out
sbb
sub
std
test
pop
xlat
mov
push
(bad)
in
(bad)
jmp
xchg
dec
push
out
(bad)
(bad)
test
add
dec
jo
adc
or
sbb
mov
iret
add
push
lods
add
and
aad
cwde
jge
jle
pop
pop
dec
loopne
les
leave
xchg
mov
push
dec
repnz
cmp
movs
jb
mov
add
add
nop
or
mov
std
pop
add
cld
push
inc
push
dec
pop
xchg
xchg
push
out
lock
in
jne
push
call
into
dec
call
add
dec
call
jne
in
jns
and
out
mov
test
add
add
adc
jo
jmp
std
mov
(bad)
dec
xchg
adc
je
movs
test
cs
adc
movs
or
cmp
call
sub
inc
ret
out
cli
dec
mov
ja
lea
hlt
out
loop
stc
loop
cwde
in
xchg
mov
and
push
(bad)
fsubr
inc
push
push
ja
call
xchg
enter
test
mov
add
cmp
aam
sbb
fiadd
std
mov
hlt
add
je
xchg
sub
dec
adc
movs
or
add
add
xchg
add
and
pop
jmp
inc
stc
dec
pop
inc
ds
fiadd
or
mov
je
mov
xor
mov
and
mul
sbb
adc
add
add
int3
imul
in
out
fld
adc
add
add
adc
cmp
mov
and
pop
add
(bad)
pop
push
cmp
adc
mov
xchg
call
(bad)
add
add
loope
or
jmp
fadd
cmc
call
std
les
push
jge
je
mov
pop
retf
imul
jmp
sbb
adc
(bad)
jne
jmp
pop
xchg
inc
add
add
add
(bad)
xlat
inc
mov
ret
(bad)
xlat
stc
inc
pop
push
mov
push
pop
out
xchg
cmp
aam
sbb
push
inc
sbb
push
jno
call
in
(bad)
pop
add
jmp
dec
pop
pusha
inc
jb
lea
inc
xchg
jmp
daa
neg
in
pop
cdq
dec
dec
imul
fdivr
mov
cmp
sbb
rcr
or
jge
mov
cmc
inc
sbb
mov
scas
or
sbb
test
add
jge
sbb
jge
jbe
xor
cmp
or
cld
jmp
xchg
push
ficom
cmp
push
cdq
shr
outs
sbb
push
jecxz
add
fisubr
je
push
call
dec
call
or
in
push
dec
sbb
fdivr
std
push
sub
inc
add
pop
xchg
fwait
jge
test
jge
mov
std
retf
adc
push
call
lods
in
pop
adc
add
sub
call
pushf
cmp
je
dec
lock
or
inc
add
add
add
out
add
push
jo
movs
mov
sbb
or
clc
cmp
jecxz
push
xor
jg
ss
sbb
fiadd
add
add
mov
sbb
push
ins
inc
and
sbb
mov
mov
pusha
in
or
push
std
mov
add
jg
inc
push
add
inc
pop
loopne
imul
xchg
mov
pop
cld
arpl
loop
sbb
xchg
xchg
movs
jle
call
or
jecxz
loop
aam
es
pop
jle
nop
or
inc
and
repz
and
pop
cwde
pop
push
jle
xor
jne
movs
and
sti
repnz
cli
idiv
cli
fistp
sbb
or
stc
fsub
jle
add
inc
mov
push
jle
std
movs
jle
std
mov
add
add
or
mov
(bad)
(bad)
in
repnz
xor
test
add
adc
jmp
mov
jmp
inc
add
fs
xor
push
pop
sbb
data16
call
and
pusha
pop
and
add
add
inc
jle
imul
cmp
push
xchg
inc
mov
xchg
into
add
int
rol
sub
in
adc
in
adc
sbb
aad
adc
test
adc
mov
fadd
xchg
fsub
mov
push
jle
add
add
jne
jmp
sbb
add
push
xchg
pop
and
or
or
popf
push
mov
or
add
cmp
dec
jecxz
push
enter
dec
add
push
push
aam
push
push
aam
pusha
(bad)
jecxz
bsf
call
xchg
inc
stc
mov
jge
clc
or
cmp
sbb
add
lea
je
push
fnsave
fiadd
xchg
sbb
scas
(bad)
rcl
movs
jecxz
(bad)
fsubr
mov
mov
call
call
jne
xor
fiadd
adc
mov
cmp
and
gs
test
imul
in
imul
adc
mov
fdiv
div
cld
je
inc
lock
inc
ins
adc
mov
push
aam
pop
inc
pop
lock
jecxz
(bad)
adc
inc
fistp
ret
loopne
loope
and
xlat
lea
add
add
jle
pop
push
inc
jb
cmp
push
aaa
push
adc
xor
lea
dec
xor
or
add
pop
in
pushf
leave
clc
mov
imul
cmp
bnd
jmp
sbb
in
pop
fsub
push
arpl
or
add
add
(bad)
std
mov
add
lea
sbb
in
or
jmp
stos
mov
or
jmp
adc
pop
scas
imul
mov
clc
add
add
inc
jg
or
mov
add
sbb
add
imul
xchg
jecxz
in
push
xlat
push
call
lock
stos
test
xor
(bad)
pop
pop
mov
(bad)
jne
or
jmp
xchg
pop
jne
pop
imul
enter
sbb
call
call
mov
add
add
or
(bad)
sti
les
cwde
nop
jecxz
sub
repz
call
jge
ret
sahf
jge
mov
or
(bad)
(bad)
fcom
imul
aad
fcom
inc
(bad)
jmp
mov
sbb
movs
mov
pop
into
je
sbb
xchg
(bad)
dec
push
cmp
fild
imul
lods
or
jmp
inc
jecxz
mov
lods
jmp
arpl
sub
add
popf
jne
or
clc
cmp
mov
popa
jecxz
or
pop
loopne
icebp
adc
fmul
xchg
les
jbe
mov
(bad)
jne
or
(bad)
add
add
(bad)
call
(bad)
in
iret
ja
call
or
inc
mov
ret
xchg
inc
xchg
shr
inc
add
jne
sbb
movs
jle
push
sahf
inc
popa
pop
push
inc
mov
hlt
mov
cld
lahf
mov
pop
sbb
sub
sub
ror
jb
mov
inc
(bad)
shl
stos
mov
add
fdiv
test
sbb
aad
ret
push
push
lods
loopne
mov
sub
stos
test
and
sbb
cmp
inc
inc
in
out
push
fsub
rcr
dec
inc
aad
pop
in
sbb
pop
test
ror
pop
add
jmp
lea
(bad)
sub
cdq
rcr
xor
cmp
dec
push
sbb
fcomp
ins
mov
test
add
repnz
add
lock
pop
popw
jecxz
mov
mov
ret
in
push
lock
dec
dec
clc
xchg
rol
add
(bad)
pop
stos
jge
and
dec
jmp
std
frstor
dec
jns
pop
cmps
aaa
in
inc
cmp
hlt
mov
xchg
clc
jns
or
and
sbb
out
cmp
sbb
add
cmp
xchg
jge
ret
scas
jns
mov
add
or
dec
inc
and
mov
push
fstp
sbb
inc
jp
sub
loopne
push
inc
or
mov
add
fiadd
push
inc
cmp
xchg
add
jp
mov
push
push
or
jl
mov
popa
adc
adc
bound
adc
push
call
sub
xlat
adc
add
mov
push
inc
gs
int3
mov
aam
adc
int3
adc
int3
clc
or
push
(bad)
cmp
push
push
(bad)
push
and
pop
add
test
add
ins
cmc
mov
test
add
in
jmp
fdiv
fiadd
shl
sbb
out
pop
es
cmp
inc
aam
icebp
dec
aam
ror
int3
cmp
hlt
push
xchg
inc
dec
push
inc
rcl
ror
add
adc
jmp
jg
add
imul
enter
iret
hlt
push
shr
xchg
(bad)
and
mov
mov
outs
xchg
les
mov
pop
add
jge
rol
add
in
fdiv
movs
add
sbb
add
adc
and
sbb
inc
outs
add
jmp
jmp
sbb
movs
(bad)
imul
mov
es
in
test
jmp
and
lea
(bad)
dec
mov
add
rcl
and
sahf
leave
cmp
inc
xlat
(bad)
aam
(bad)
dec
mov
std
and
sahf
leave
cmp
aas
xlat
mov
lds
mov
test
jne
pop
add
(bad)
repz
pop
clc
dec
xor
pop
dec
xor
pop
sub
ins
or
jle
je
mov
hlt
xchg
ror
loop
hlt
jmp
push
jecxz
mov
or
addr16
enter
mov
les
inc
popa
add
or
xor
fs
mov
add
pop
mov
sbb
and
or
scas
fneni(8087
mov
dec
fimul
adc
xchg
jecxz
pop
ins
dec
mov
push
push
retf
(bad)
js
sub
sbb
in
imul
adc
imul
xchg
dec
add
mov
pop
add
std
push
mov
js
pusha
jg
add
inc
cld
fdivr
sbb
push
into
inc
pop
pushf
inc
adc
sub
hlt
xor
push
mov
inc
adc
jecxz
add
adc
stc
adc
fadd
and
adc
jne
clc
mov
aas
mov
cmp
push
push
jb
or
mov
xlat
call
jnp
outs
adc
clc
adc
outs
imul
pop
idiv
std
cmp
fstp
jecxz
fisub
add
add
jge
fwait
in
push
stc
push
mov
faddp
adc
ins
sbb
and
inc
pop
fmul
int3
and
inc
and
cmp
pop
sbb
popf
inc
cmp
leave
lock
sti
js
in
js
aad
js
aad
jns
sbb
in
fs
test
add
mov
sbb
movs
cmp
enter
add
mov
pop
outs
pop
ror
arpl
and
mov
pop
xchg
inc
adc
pop
jb
(bad)
clc
dec
dec
pop
cmps
call
loopne
jmp
test
add
add
mov
ins
add
in
sbb
fsubr
fdivr
test
ret
pop
jb
mov
inc
cld
dec
enter
in
daa
dec
xchg
dec
stos
out
jae
inc
lods
ins
pop
add
data16
je
pop
or
lds
add
(bad)
mov
enter
jl
inc
popa
jno
adc
enter
xor
call
jno
or
add
adc
push
jno
or
not
call
mov
test
iret
test
and
sbb
xor
jecxz
push
dec
add
push
outs
ja
cs
add
cmc
mov
inc
lods
xlat
mov
xlat
(bad)
in
inc
(bad)
dec
push
push
loopne
mov
xchg
(bad)
ja
ins
pop
cld
out
push
out
sub
push
or
out
inc
or
imul
sub
push
or
js
(bad)
push
jmp
(bad)
pop
or
lock
shr
add
jmp
mov
inc
or
xchg
repz
jns
daa
add
movs
adc
mov
ffree
cs
dec
mov
push
or
imul
mov
sub
pop
add
pop
add
repnz
push
ins
test
push
sbb
stos
mov
dec
mov
inc
sub
pop
(bad)
out
or
imul
inc
imul
push
rcl
mov
leave
(bad)
in
mov
or
jne
dec
ds
or
pop
jo
lock
adc
dec
sbb
icebp
dec
in
pop
push
fstp
add
jbe
pop
mov
push
sbb
(bad)
jcxz
fimul
ins
es
push
fwait
test
dec
std
mov
mov
in
popf
inc
imul
(bad)
call
(bad)
fsub
push
aam
popf
dec
pop
imul
in
popf
inc
dec
ins
pop
call
in
jecxz
in
iret
jecxz
lds
outs
aad
(bad)
cld
fs
test
add
aad
call
imul
jl
xchg
ror
fmul
dec
inc
push
mov
push
(bad)
loopne
sub
bound
inc
imul
sbb
cmc
(bad)
xor
mov
cmp
add
add
fnstcw
or
ror
mov
aam
add
inc
dec
mov
jne
jne
inc
pop
cld
inc
pop
jecxz
push
ret
call
add
inc
dec
bound
xchg
inc
leave
sub
push
dec
push
pop
push
imul
xor
repz
pop
pop
jecxz
rcr
inc
leave
loop
add
add
ret
inc
jecxz
xor
lock
scas
loope
or
iret
dec
mov
rcr
es
dec
mov
dec
popf
gs
push
imul
bound
(bad)
fdiv
mov
imul
ins
adc
aad
sbb
mov
pop
pop
pusha
inc
push
xchg
push
lock
test
mov
or
jmp
cs
xor
dec
mov
rcl
into
loop
jecxz
loop
(bad)
in
adc
xor
gs
inc
sub
in
cwde
ins
pop
cld
imul
push
leave
out
or
and
push
mov
sbb
or
outs
adc
push
inc
inc
and
jle
add
add
add
popf
lea
pop
jecxz
ins
adc
std
bound
popf
cmp
call
std
bound
mov
mov
clc
add
xor
std
loop
jle
lock
loope
loop
nop
test
pop
jecxz
cmp
rcl
jecxz
adc
movs
std
ret
(bad)
fdiv
push
imul
lock
fdiv
jmp
cdq
xor
pop
jecxz
and
inc
loope
bound
cld
jg
popf
test
pusha
jecxz
nop
push
jb
mov
xor
pop
jecxz
push
inc
adc
push
jo
xor
jecxz
aad
cdq
fcom
pop
jecxz
movs
test
sub
jmp
ins
cdq
sub
pop
jecxz
push
outs
cdq
sub
js
add
test
int
add
(bad)
(bad)
cmp
push
sub
or
add
cli
xchg
xlat
je
mov
ins
push
and
mov
pop
push
cmp
imul
lds
call
xchg
test
add
mov
sbb
movs
xchg
xlat
je
pushf
add
sar
iret
or
pop
sbb
movs
dec
lods
jo
or
xor
mov
pop
jecxz
stos
push
sbb
push
dec
mov
push
pop
dec
pop
fiadd
fadd
push
sbb
jmp
mov
pop
rcr
add
pop
jecxz
fwait
test
cwde
add
inc
pusha
call
inc
jle
add
test
call
bound
fadd
aad
lock
ins
pop
jecxz
jmp
jge
add
out
rol
in
jp
xor
cld
lahf
xor
and
ret
pop
lock
jmp
dec
inc
inc
inc
push
(bad)
adc
je
xchg
add
sar
adc
mov
pop
add
inc
ins
or
imul
push
pop
dec
sbb
jecxz
in
lock
dec
sti
call
inc
pop
scas
mov
xlat
mov
(bad)
in
push
mov
xor
push
popa
or
into
mov
xor
add
shl
(bad)
push
mov
rcr
jmp
sbb
push
push
pop
fdivr
into
(bad)
repnz
inc
sbb
add
push
mov
add
fld1
pop
cwde
cmp
into
sbb
sbb
push
add
cmp
into
adc
jecxz
fst
retf
push
sbb
aad
test
aad
dec
(bad)
sti
mov
(bad)
dec
hlt
push
fstp
movs
sbb
dec
imul
push
shl
pop
fdivr
ins
add
into
mov
adc
fdiv
jecxz
into
lods
add
or
imul
push
bound
xchg
pop
lds
sbb
fs
shl
pop
test
ss
jnp
sub
sbb
adc
add
mov
push
or
pop
test
sbb
movs
iret
jecxz
cmp
test
shr
test
scas
pop
imul
xchg
or
pop
dec
test
call
mov
and
add
retf
sbb
and
jmp
nop
mov
add
push
cmp
push
mov
aad
(bad)
lock
pop
jo
pushf
xchg
jle
jle
sbb
data16
movs
rep
sbb
or
jge
pop
push
cmp
jp
jle
ret
das
jb
cmp
sbb
fsub
add
mov
mov
push
inc
inc
gs
jge
bound
inc
jns
pop
cld
arpl
(bad)
std
jnp
add
push
sub
adc
pop
xlat
push
(bad)
hlt
mov
jge
icebp
in
jge
mov
jne
not
cli
nop
add
jge
or
in
cwde
gs
jle
inc
fprem
xlat
je
sub
pop
add
inc
imul
sbb
mov
add
add
fld
(bad)
jl
pop
cld
mov
pop
in
or
add
xor
xor
add
fadd
test
add
cs
in
push
push
test
pop
cmp
inc
inc
and
sbb
jmp
fadd
fs
push
outs
ds
test
mov
add
add
or
mov
bound
cmp
sbb
xchg
push
imul
mov
push
imul
mov
push
jecxz
push
push
pop
pop
fdiv
lock
jge
fst
imul
push
popa
dec
pop
cmps
push
jecxz
into
jo
in
dec
and
test
lds
loopne
retf
jbe
push
scas
xor
add
jge
push
out
pop
push
lods
leave
sbb
add
add
inc
in
aad
fdiv
and
ror
in
enter
xlat
(bad)
in
or
xchg
ins
pop
sbb
xchg
sub
xor
pop
int3
sub
sub
add
sahf
mov
sbb
dec
jle
or
ret
popf
inc
imul
clc
push
nop
pushf
lods
and
sbb
data16
pushf
movs
adc
sbb
popa
test
add
imul
jmp
js
add
sar
mov
imul
rol
add
add
add
ds
mov
jp
nop
in
movs
mov
retf
ss
clc
xchg
mov
lea
jg
cmp
jmp
mov
inc
sbb
adc
std
clc
or
jecxz
into
inc
ins
or
rcr
adc
inc
inc
hlt
adc
es
or
or
imul
add
(bad)
pushf
jecxz
sbb
inc
movs
adc
add
jecxz
lods
cmp
mov
or
adc
leave
adc
imul
test
push
add
add
add
dec
jno
xchg
cmps
sbb
jne
push
in
sbb
imul
imul
loopne
xchg
inc
mul
loopne
cmps
js
inc
fmul
sbb
imul
push
test
int3
aad
xchg
(bad)
int
add
jae
inc
sbb
ret
imul
adc
stos
jp
je
cmp
in
leave
imul
cmp
inc
gs
je
adc
add
lock
adc
jecxz
std
adc
jecxz
sbb
ret
in
push
sub
pop
in
pop
push
mov
inc
cmp
(bad)
pop
aam
sbb
push
ja
or
xchg
mov
sub
mov
les
pop
xchg
mov
jg
pop
or
lock
imul
fs
cmp
lahf
adc
adc
jne
pmulhuw
add
add
jg
les
inc
ins
aam
jo
add
test
bound
adc
test
jecxz
pop
shr
es
xor
stos
add
jle
cmp
or
test
aad
or
and
in
push
cmp
sti
imul
adc
outs
push
std
and
inc
ins
or
jle
shr
jmp
jae
cmp
test
enter
ins
xchg
or
push
add
or
mov
push
add
jecxz
adc
imul
dec
jnp
jne
jae
jmp
imul
fst
mov
(bad)
call
add
add
test
mov
imul
sbb
and
xor
call
jmp
jecxz
ins
cmp
adc
mov
jmp
and
add
in
aad
inc
hlt
jmp
ins
mov
push
cmp
sbb
sub
push
std
pop
(bad)
sbb
les
push
nop
dec
push
outs
shr
cld
xchg
jecxz
dec
aas
(bad)
dec
push
hlt
add
jne
call
dec
outs
(bad)
jmp
imul
enter
mov
imul
call
imul
mov
add
(bad)
dec
(bad)
inc
jo
dec
xlat
int3
cmp
add
sub
adc
loopne
pop
ficom
or
sbb
movs
cmp
add
outs
in
jg
jge
je
adc
cli
mov
pop
ret
pop
mov
(bad)
push
sbb
add
(bad)
or
cmp
xchg
loop
cld
in
or
movs
out
bound
add
add
(bad)
push
inc
mov
or
or
arpl
add
cmp
mov
(bad)
in
ret
mov
(bad)
in
pop
sbb
add
sbb
add
mov
inc
and
pop
add
test
add
xchg
es
and
xor
in
pop
add
mov
inc
aam
std
add
out
sbb
or
hlt
out
adc
in
mov
xchg
push
sub
cmp
in
fadd
jecxz
clc
xor
or
into
(bad)
add
sldt
add
add
or
add
or
add
push
xchg
in
push
xchg
in
push
xchg
call
mov
xchg
in
mov
xchg
in
pop
push
xchg
lock
push
xchg
lock
push
xchg
hlt
ins
push
xchg
hlt
pop
push
xchg
clc
pop
push
xchg
clc
dec
push
xchg
cld
dec
push
xchg
cld
and
xchg
add
jg
inc
add
add
or
add
or
add
rcr
inc
xlat
nop
out
(bad)
pushf
pop
faddp
sbb
inc
inc
xlat
nop
iret
rcr
jmp
leave
push
std
pop
add
adc
xchg
adc
mov
nop
nop
mov
add
add
cld
push
pop
add
sub
imul
stc
int
adc
push
cmc
jecxz
mov
or
and
pop
add
xchg
mov
or
push
out
pop
sub
(bad)
add
xchg
nop
inc
mov
add
add
add
push
sbb
inc
or
xchg
pop
in
cld
adc
repz
jecxz
js
js
in
pop
add
sbb
inc
or
pop
push
pop
sar
inc
xlat
add
add
sbb
add
mov
nop
jne
in
pop
adc
pop
add
adc
pop
mov
xchg
inc
fs
std
add
adc
xchg
out
push
add
or
dec
jmp
loope
cmp
jecxz
enter
and
frstor
add
frstor
add
and
add
frstor
sbb
leave
xchg
sbb
leave
xchg
sbb
sbb
add
add
xchg
adc
leave
xchg
adc
leave
xchg
adc
xchg
adc
retf
sub
xchg
or
retf
sbb
xchg
or
retf
or
xchg
add
mov
add
jp
(bad)
jns
mov
jle
inc
frstor
add
fisub
pop
loop
xlat
nop
scas
enter
jp
add
add
leave
add
(bad)
fidivr
inc
out
pop
add
sbb
mov
enter
jp
inc
out
pop
add
in
sbb
inc
popf
adc
dec
jecxz
xor
cmps
sub
jne
sub
(bad)
clc
jl
loop
jp
sbb
inc
mov
in
adc
out
add
pop
add
jmp
xchg
enter
or
inc
pop
loopne
(bad)
dec
dec
hlt
push
mov
xor
bound
in
pop
cmp
jecxz
cli
jnp
enter
jne
or
adc
push
sti
out
add
test
add
add
pop
add
dec
call
ret
push
cmp
inc
inc
(bad)
dec
hlt
push
dec
jne
call
jecxz
pop
sub
ins
push
test
(bad)
fdiv
inc
jno
cmp
pop
mov
stos
add
xlat
mov
fadd
sbb
mov
test
cmps
mov
mov
add
add
adc
pop
xor
push
or
xor
push
mov
dec
retf
cld
jo
sbb
pop
add
imul
jp
enter
jne
or
adc
adc
out
add
scas
pop
add
xchg
enter
cmp
inc
pop
inc
inc
(bad)
dec
int
leave
into
jns
mov
(bad)
in
push
(bad)
xchg
stc
mov
cmc
(bad)
frstor
stc
hlt
mov
push
sbb
mov
mov
(bad)
in
es
inc
jb
pushf
jp
sbb
into
inc
ret
ins
cmps
add
aad
xlat
jne
cli
call
xlat
adc
xlat
call
sub
push
or
inc
xchg
rcl
hlt
push
mov
dec
push
or
call
sub
call
dec
jb
pop
dec
jecxz
sahf
cs
(bad)
fmul
push
mov
xlat
push
aas
fild
lods
aam
add
xchg
(bad)
in
push
inc
in
dec
fadd
(bad)
dec
dec
hlt
push
pop
xor
pop
add
int3
jmp
pop
or
retf
push
nop
mov
add
dec
jecxz
push
sub
sbb
pop
test
push
pop
add
add
jnp
jne
dec
push
add
inc
ins
adc
inc
adc
sub
dec
pop
test
ins
add
add
add
inc
out
and
test
je
aaa
sbb
fldcw
pop
dec
sbb
sbb
ins
add
push
jae
inc
ret
ret
pop
ds
mov
pop
or
pop
mov
stos
or
xchg
lock
push
sbb
movs
cmp
dec
sbb
and
in
out
xchg
sbb
jno
jbe
push
sbb
sbb
pop
jno
pop
push
stos
adc
mov
enter
dec
popa
adc
jns
add
std
data16
or
add
or
push
jecxz
add
mov
je
add
inc
add
add
sbb
fnstcw
in
push
inc
movs
loopne
dec
push
or
mov
(bad)
pop
cmp
call
jg
adc
data16
inc
dec
push
or
in
mov
add
push
sub
(bad)
call
aaa
jecxz
dec
jns
xchg
loopne
add
int
add
add
in
push
fild
cmp
call
or
jne
mov
in
pop
mov
call
xchg
dec
inc
or
clc
call
inc
jle
es
push
movs
jle
nop
movs
jle
dec
jle
jae
pop
imul
call
add
add
push
or
and
or
and
push
or
sbb
mov
call
push
lea
add
cmp
and
cwde
test
in
jge
mov
imul
mov
loopne
mov
fdiv
pop
add
inc
ins
adc
loop
add
jne
std
mov
jmp
inc
pop
cld
jecxz
jecxz
lods
cmp
gs
daa
ror
xlat
mov
sub
sbb
fidivr
dec
mov
push
or
test
cwde
lds
(bad)
cmps
mov
(bad)
push
sbb
or
retf
push
inc
inc
pop
push
inc
jecxz
pop
sub
jne
sub
dec
aad
lock
jge
cmp
fiadd
jge
push
jbe
nop
inc
popf
inc
pop
sbb
mov
push
xor
or
shl
push
or
mov
mov
nop
inc
pop
jge
hlt
inc
sub
std
push
cmp
jne
add
cwde
(bad)
pop
inc
mov
(bad)
fdivr
in
fdiv
sbb
inc
mov
cmp
ret
scas
and
(bad)
cmp
cld
lahf
xchg
aad
sbb
fld
cld
stos
popf
jge
cmp
sbb
push
or
jmp
adc
(bad)
std
minps
xchg
sub
adc
popf
movs
in
movs
dec
nop
xchg
xchg
sbb
sahf
sub
jmp
sti
pop
add
sbb
int
ror
(bad)
jne
dec
inc
in
loopne
add
push
loope
call
dec
pop
(bad)
lds
dec
pop
pushf
ror
pop
shl
dec
sbb
in
pop
ins
rol
add
aam
jge
in
pop
in
pop
aad
lock
leave
sbb
pusha
rcr
add
loope
add
rcr
sbb
mov
push
mov
inc
hlt
inc
add
adc
sar
cmp
sbb
inc
dec
pop
in
mov
inc
(bad)
gs
sub
and
sbb
adc
mov
cwde
add
cld
push
or
or
data16
add
les
fwait
leave
sbb
add
dec
dec
add
mov
sahf
add
pop
or
or
outs
add
mov
les
jns
xchg
add
xchg
dec
imul
add
loopne
ret
(bad)
sbb
in
push
xor
mov
and
sbb
bound
popa
or
mov
mov
cdq
popf
inc
popa
aas
imul
bound
std
rol
sbb
pop
jge
add
dec
push
shr
add
and
mov
loopne
ret
lds
or
imul
or
add
push
mov
xchg
jge
jge
sbb
mov
call
sbb
fdiv
imul
bound
adc
clc
pop
add
(bad)
(bad)
call
popa
pop
dec
push
add
mov
add
add
test
sbb
sbb
or
push
or
mov
push
sbb
in
adc
or
test
dec
dec
cld
cmps
call
push
mov
cld
retf
sub
sbb
inc
fmul
jmp
adc
jmp
call
add
add
lds
gs
inc
mov
imul
(bad)
fsub
add
mov
pushf
pop
test
jge
pop
lods
clc
xlat
mulps
add
stos
dec
call
lods
movs
cdq
rcl
mov
aad
jecxz
mov
push
or
add
add
add
mov
cdq
add
ds
jl
adc
and
call
sub
cdq
ror
dec
push
ins
aad
add
dec
test
dec
dec
cmps
pop
aas
push
jmp
dec
push
retf
xchg
or
xchg
sub
add
in
pushf
movs
cdq
shr
inc
push
cmp
movs
dec
test
gs
test
pop
sbb
por
adc
stc
outs
sbb
sbb
in
fcmove
loopne
rol
mov
imul
ret
out
jmp
in
push
inc
lock
lea
add
add
dec
leave
in
popf
popf
sbb
scas
enter
test
add
xchg
out
or
xchg
xchg
pop
hlt
nop
xchg
gs
xchg
(bad)
call
frndint
inc
arpl
sbb
imul
aam
ja
ins
mov
pop
xor
ins
and
loop
out
sbb
int3
sbb
sar
or
adc
call
push
(bad)
jmp
inc
call
call
call
data16
inc
or
or
push
(bad)
(bad)
mov
popf
sbb
imul
(bad)
inc
xchg
les
inc
imul
add
dec
jmp
inc
imul
bound
call
frndint
scas
cld
inc
jecxz
pop
xchg
movs
sbb
dec
lahf
pop
jmp
xchg
popf
inc
lea
or
int
push
ret
call
(bad)
inc
xor
xor
jg
ret
into
jle
mov
aad
push
sahf
clc
sbb
ret
sbb
xchg
mov
std
inc
or
adc
sbb
fnstcw
sbb
aad
dec
push
in
sub
ds
push
loopne
mov
imul
push
jg
or
push
out
jle
(bad)
prefetcht0
sbb
or
out
adc
call
sbb
fcomp
xchg
inc
popa
ror
call
data16
sahf
jp
inc
add
fcom
enter
rcr
aaa
loope
pop
ja
call
ficom
clc
add
inc
(bad)
fnsave
ins
or
clc
lea
stc
ss
call
add
add
and
adc
stc
adc
pop
mov
mov
jnp
mov
popf
xchg
les
leave
loopne
call
pop
inc
(bad)
ret
fidivr
mov
hlt
sub
int3
adc
fmul
out
and
retf
call
enter
or
xchg
js
add
add
mov
jge
add
dec
fs
aad
imul
inc
mov
sbb
aad
data16
cmp
add
lods
jg
add
les
cmp
stc
push
cmp
dec
mov
and
jg
add
data16
lea
call
out
nop
add
sbb
fnstenv
sbb
push
push
(bad)
mov
sbb
lods
repz
ror
xchg
add
or
sub
(bad)
dec
test
ret
cld
mov
adc
enter
leave
mov
add
pop
rcr
and
add
add
jne
addr16
inc
movs
jg
add
adc
add
ins
jl
jno
add
mov
call
(bad)
cmc
sbb
imul
call
in
add
jne
mov
cmp
stc
add
es
in
retf
inc
jecxz
imul
adc
add
add
scas
pusha
jecxz
popa
and
dec
xchg
fs
jbe
pop
cld
out
adc
xchg
dec
jmp
ja
sbb
shl
push
arpl
dec
icebp
sbb
ss
mov
sbb
(bad)
not
push
add
gs
inc
imul
ins
or
mov
sbb
adc
sbb
and
xchg
sar
nop
shl
push
icebp
in
dec
movs
dec
call
push
jp
mov
pop
lock
sar
push
prefetchnta
aad
pop
clc
int3
test
(bad)
and
sbb
mov
or
sbb
call
inc
lods
add
jle
add
add
or
faddp
adc
in
shl
xchg
cli
aaa
(bad)
fist
imul
add
jecxz
cmps
inc
adc
gs
xchg
ret
sbb
dec
std
(bad)
pop
hlt
add
cli
mov
and
shr
(bad)
call
test
jne
jnp
sbb
or
call
xor
adc
mov
jns
lock
inc
or
xor
call
icebp
or
pusha
nop
sbb
in
mov
fmul
inc
jns
psubusb
sbb
gs
jecxz
mov
mov
mov
cmp
call
pushf
jno
jmp
pop
add
xor
adc
add
add
xor
lock
loopne
in
adc
add
sbb
push
out
call
push
call
jecxz
mov
or
push
jmp
adc
lock
add
add
or
iret
or
into
jle
jbe
std
pusha
sbb
sbb
mov
imul
push
icebp
adc
enter
xor
inc
cmp
lea
mov
aad
sbb
sub
add
inc
xlat
mov
(bad)
in
or
or
ins
lock
shr
(bad)
ficom
pop
xor
add
outs
dec
mov
cli
adc
add
add
ror
mov
mov
push
mov
add
xor
retf
je
std
loope
adc
or
and
mov
pop
and
cdq
xchg
adc
add
mul
pusha
add
jle
adc
sbb
loopne
jecxz
(bad)
or
call
ins
jecxz
fst
adc
push
inc
gs
les
xchg
js
sub
cmc
adc
out
sub
mov
retf
add
add
jle
jne
ret
jecxz
lds
sbb
outs
imul
mov
aaa
add
and
mov
jne
ins
imul
in
dec
(bad)
jecxz
icebp
iret
cld
sar
jecxz
sub
inc
pop
add
sub
inc
retf
pop
add
mov
pop
pop
or
sbb
cmp
add
fst
add
mov
pop
pop
and
and
fild
dec
push
and
inc
gs
mov
cmp
mov
repz
inc
mov
inc
inc
and
inc
(bad)
dec
or
call
cmp
add
aad
enter
ins
add
aad
cli
pop
xchg
cmp
int3
push
outs
dec
mov
add
sbb
inc
or
or
xchg
movs
pop
push
pop
jg
mov
jbe
hlt
fs
add
cli
adc
mov
mov
adc
mov
xor
into
(bad)
sbb
bound
sar
add
pop
or
sbb
or
add
add
mov
loopne
scas
sbb
je
add
pusha
mov
mov
or
mov
outs
pop
sbb
in
test
stc
or
xchg
jle
inc
sar
popa
mov
in
mov
cli
(bad)
pop
inc
cwde
jge
jge
and
xchg
mov
jp
iret
push
mov
call
into
rcl
sti
mov
iret
(bad)
and
jmp
ret
sar
inc
sub
add
mov
cmp
jmp
lds
push
ins
cmp
add
add
aad
fild
inc
ins
nop
sbb
xchg
xlat
jecxz
inc
xchg
pop
add
dec
adc
jns
sbb
popa
stc
push
push
dec
xor
mov
test
clc
int3
in
adc
cdq
mov
dec
sbb
cld
repnz
jae
mov
or
add
lahf
cld
loop
jae
mov
sub
in
jg
jecxz
push
pushf
inc
or
or
bound
inc
or
lock
mov
jno
call
inc
aam
push
retf
push
ret
sbb
imul
cwde
ror
cli
push
sbb
out
xchg
cmp
gs
sbb
mov
cs
or
push
or
xchg
loope
clc
adc
inc
sub
sub
jmp
dec
inc
clc
or
inc
(bad)
or
and
rol
xlat
neg
repz
retf
sub
sbb
jmp
sub
add
cdq
inc
aam
shr
int3
xor
push
and
into
fadd
mov
mov
adc
cmps
sbb
lods
add
dec
pop
inc
dec
jmp
into
pop
dec
mov
add
sbb
lods
add
jmp
popf
adc
mov
popf
xor
add
pop
add
ins
fwait
test
or
inc
in
nop
or
sti
cs
lock
in
and
ins
pop
cmp
inc
jno
xchg
in
sub
add
sbb
xor
in
pop
xor
sbb
in
sbb
in
fsub
jmp
sbb
lock
in
and
loopne
add
data16
adc
(bad)
in
sbb
je
adc
and
push
fwait
test
push
inc
in
cdq
fsub
jecxz
enter
aad
xor
xor
xchg
mov
nop
add
jo
je
in
mov
inc
xchg
add
sub
in
dec
test
push
add
jl
imul
jecxz
inc
sbb
inc
(bad)
(bad)
call
lods
mov
jb
in
sub
push
sahf
popa
jecxz
popa
cvtdq2ps
sub
mov
ror
jecxz
in
pop
enter
ins
add
push
inc
pop
pop
es
pop
xchg
sub
push
dec
popa
(bad)
dec
popf
shl
fld
pop
retf
imul
cli
out
loop
jb
and
push
inc
rol
mov
add
adc
inc
out
xor
hlt
adc
push
repz
add
push
mov
pop
cmp
pop
dec
mov
sti
call
add
call
aaa
pop
pushf
test
icebp
cs
daa
rol
aas
pop
or
push
dec
popa
adc
aad
adc
cmp
in
lods
add
aad
imul
fdiv
xor
aas
jg
inc
xchg
sub
sub
ins
adc
sbb
punpckhwd
inc
add
add
outs
add
das
sar
bound
fild
pop
jecxz
bound
lock
jg
ret
sahf
push
out
lds
jg
pop
pushw
int3
xor
int3
push
push
int3
push
push
int3
pop
sar
add
jmp
pop
add
jle
cmp
and
enter
jmp
icebp
cmp
or
add
std
xchg
and
icebp
or
cmp
sbb
xlat
adc
call
ds
(bad)
inc
in
push
in
gs
sbb
adc
jp
movs
add
ds
fmul
inc
sbb
adc
sub
and
add
addr16
test
icebp
(bad)
dec
fisub
mov
jb
int3
adc
int3
mov
sub
dec
jmp
pop
push
dec
pop
(bad)
into
pop
outs
or
jle
add
sbb
movs
test
push
call
jnp
dec
cmp
loop
inc
repnz
xor
std
sbb
jg
add
or
cld
jg
loop
(bad)
in
or
(bad)
out
bound
in
sahf
inc
mov
sub
or
pop
pop
add
fsub
push
fcmovnb
in
bound
in
in
xlat
and
add
and
push
sub
sub
add
les
shr
add
inc
pop
or
data16
inc
jecxz
or
push
gs
pop
add
adc
sbb
(bad)
pop
std
in
or
and
movs
push
enter
(bad)
in
not
push
lea
std
add
in
cmp
data16
jecxz
js
push
in
pop
add
repz
add
icebp
and
add
xlat
and
in
out
in
out
call
out
out
in
in
out
in
fsubp
xchg
lock
xchg
lock
rcl
sahf
rcl
scas
rcl
mov
sbb
and
adc
jge
jmp
xlat
and
add
aam
add
sbb
add
nop
dec
cmps
pushf
pop
push
rcr
xlat
nop
das
test
pop
das
call
pop
mov
pop
add
test
pop
(bad)
in
sbb
inc
push
sub
out
rcr
xlat
nop
lock
xor
cld
push
pop
add
test
xor
xchg
stc
sub
and
(bad)
mov
jge
jmp
xor
imul
pop
add
mov
or
bound
sub
aam
add
lds
(bad)
add
aam
add
out
and
sub
push
(bad)
in
mov
add
or
xor
repz
pop
jecxz
clc
pusha
imul
pop
add
jecxz
and
pop
add
jg
inc
pop
add
add
add
or
pusha
jae
cld
bound
in
pop
jecxz
and
pop
add
push
mov
aas
std
add
in
jae
xchg
out
(bad)
add
or
pop
loope
cmp
and
pop
imul
pop
add
(bad)
and
add
(bad)
and
add
xlat
and
add
xlat
and
add
rcl
into
in
sbb
xchg
adc
in
adc
in
adc
xchg
or
in
or
in
or
or
xchg
add
in
add
movs
xchg
add
jg
add
loopne
mov
or
add
and
add
xlat
and
pop
inc
push
pop
mov
pop
mov
pop
add
in
mov
adc
fsubp
sbb
add
pop
mov
jp
inc
daa
neg
scas
mov
xchg
jl
inc
sbb
repz
mov
inc
add
add
or
in
sub
mov
xlat
je
sbb
xchg
clc
bound
or
(bad)
enter
jg
(bad)
adc
ror
sbb
push
xchg
mov
push
loop
ins
add
cdq
shr
dec
call
sub
xlat
je
(bad)
cwde
adc
jle
(bad)
js
in
gs
xlat
je
pop
imul
sbb
rcl
adc
pop
dec
ret
sahf
pop
dec
mov
jecxz
test
leave
inc
add
ds
and
inc
aad
(bad)
fldenv
dec
inc
aad
into
inc
adc
jmp
and
js
push
inc
movs
or
jne
(bad)
jbe
test
pop
call
xor
jecxz
in
test
call
stc
sbb
add
enter
inc
jecxz
loope
pop
add
sbb
(bad)
pop
add
inc
add
test
sbb
adc
test
gs
arpl
add
add
pop
outs
jne
call
stc
dec
inc
in
or
in
fwait
ret
xlat
mov
es
je
aam
xor
std
mov
jecxz
push
xchg
push
mov
out
jecxz
jae
jecxz
imul
jecxz
mov
add
jno
js
(bad)
in
sbb
sbb
adc
cwde
inc
imul
adc
imul
add
popa
pop
mov
xchg
cdq
ror
jl
(bad)
(bad)
in
dec
lahf
pushf
add
jecxz
sbb
loopne
xchg
xor
enter
jcxz
sbb
in
xchg
sbb
add
sahf
enter
inc
fwait
or
push
adc
jmp
push
sub
sbb
gs
xchg
jbe
jle
push
fsub
jmp
lock
push
or
popa
pop
or
imul
aad
pop
ins
push
div
loop
jecxz
cld
inc
pop
cld
arpl
(bad)
std
cwde
in
movs
push
pop
xchg
adc
loop
(bad)
jne
call
sbb
jl
jb
lods
jecxz
add
xlat
mov
xlat
dec
dec
jg
jo
(bad)
in
dec
push
(bad)
bound
ror
jb
neg
sbb
adc
fs
jg
lock
fadd
add
add
(bad)
call
jg
adc
(bad)
in
cmp
jle
test
sar
lds
jecxz
cld
jle
dec
xlat
enter
test
mov
push
xlat
jmp
frstor
idiv
jl
lock
retf
push
inc
inc
ret
push
jl
call
fidiv
imul
mov
int
pop
add
pop
inc
inc
jb
in
and
xchg
push
and
add
setns
add
inc
ins
pop
mov
pushf
ret
bound
mov
xchg
cdq
rcr
dec
call
pushf
or
pop
inc
ins
pop
mov
jo
bound
mov
mov
dec
call
ins
or
add
add
sbb
pop
inc
push
dec
mov
cdq
shr
dec
call
sub
pop
dec
fadd
pop
inc
push
dec
mov
fsub
adc
in
pop
sar
pop
push
jge
pop
jg
lock
sbb
jecxz
add
hlt
(bad)
push
bound
cdq
shr
add
ins
aad
add
xchg
addr16
jecxz
pushf
inc
pop
cld
push
jge
(bad)
cmp
jmp
sbb
ins
inc
pop
cld
movs
jg
add
std
jo
loop
aaa
push
std
out
mov
cmp
sub
pop
add
xchg
aas
push
hlt
sbb
sti
int
push
(bad)
inc
popa
jle
jmp
push
add
dec
call
in
ins
iret
add
adc
mov
lods
sbb
pop
push
or
scas
mov
mov
es
push
retf
adc
not
inc
in
fdiv
sar
push
xlat
jle
pop
push
jle
call
jle
xor
jge
adc
add
push
inc
xchg
iret
mov
push
shl
stos
in
fcom
sbb
mov
push
push
jo
je
in
mov
ja
adc
push
xor
ss
je
and
sub
jle
or
stos
test
je
add
jne
and
add
add
mov
call
jns
test
add
test
or
in
dec
rcr
push
jge
nop
add
sub
push
cdq
rcl
add
lock
pop
test
jmp
ins
pop
sti
adc
xor
xchg
adc
jnp
xor
jbe
push
cli
push
jnp
xor
jbe
je
aad
idiv
push
jp
(bad)
cmc
sbb
lock
test
test
icebp
jns
stos
cmc
and
jo
test
cmp
loop
mov
dec
ret
fnstsw
dec
cmp
add
add
in
jecxz
jecxz
out
ins
dec
pop
call
jns
jo
ret
in
test
je
and
jns
inc
fdiv
in
std
pusha
(bad)
(bad)
fisttp
or
push
inc
adc
or
xor
push
(bad)
bound
jb
mov
imul
aad
daa
rcr
sbb
add
pop
(bad)
push
jp
(bad)
movs
xchg
in
xchg
ror
dec
sar
test
cmps
xchg
enter
and
gs
gs
cmp
xchg
cld
mov
int3
clc
loopne
std
dec
sbb
and
mov
addr16
cmps
pop
sbb
add
add
add
jns
call
lock
rcr
(bad)
out
xor
bound
(bad)
lock
push
lock
cmps
sbb
(bad)
outs
(bad)
pop
lods
or
(bad)
xchg
cld
jo
sbb
out
jecxz
push
push
mov
cmp
lods
addr16
call
sbb
add
add
push
lock
gs
imul
jmp
pop
or
push
scas
pop
lock
sbb
fadd
sbb
call
push
stc
push
outs
jo
in
sbb
inc
add
or
inc
(bad)
(bad)
mov
lea
bound
cdq
rcr
in
add
pushf
add
cdq
rcr
jne
ins
enter
jecxz
push
pop
jecxz
pop
imul
(bad)
call
sbb
jmp
cld
inc
jb
ins
inc
pop
add
in
in
retf
or
jmp
or
test
push
push
add
jb
int3
inc
ret
pop
outs
dec
mov
add
add
(bad)
jne
mov
jmp
adc
jne
or
test
push
inc
adc
int3
inc
ret
push
outs
dec
mov
add
jo
shl
call
jl
je
in
jns
in
jl
fdiv
imul
sbb
in
cmp
call
lock
add
jecxz
in
adc
jne
in
test
mov
xchg
pop
add
cmp
in
mov
jecxz
stos
xor
fwait
jge
pop
jmp
(bad)
in
and
in
lods
adc
je
jmp
in
mov
mov
pop
(bad)
call
pop
add
cmp
jmp
add
add
sbb
cld
gs
inc
mov
test
mov
sbb
inc
inc
sbb
xchg
jge
jg
test
mov
lock
outs
jecxz
sahf
test
je
outs
sub
(bad)
in
mov
adc
mov
bound
add
add
pop
sbb
call
xlat
cld
inc
or
jmp
stos
jbe
clc
shr
clc
std
lahf
in
jmp
adc
dec
outs
sub
in
in
jge
jecxz
out
test
xor
mov
sti
fisttp
lock
jne
lds
cdq
jg
jge
adc
fsubr
add
gs
int3
jmp
test
leave
in
mov
jecxz
lods
cmc
mov
movs
fmul
in
mov
inc
pop
cld
arpl
jmp
in
movs
or
movs
jmp
xchg
out
sbb
add
imul
mov
icebp
adc
dec
lea
add
add
int
in
push
(bad)
call
cmps
pavgw
popa
jb
out
test
jne
ins
xlat
inc
jae
les
loopne
mov
(bad)
in
jg
jb
(bad)
stc
sbb
jo
jecxz
xchg
cmp
in
in
pusha
jae
call
adc
mov
test
mov
jecxz
cdq
adc
add
int3
cld
inc
or
mov
retf
cld
mov
jb
push
std
cwde
inc
add
jae
push
lods
lods
and
hlt
and
add
cld
or
mov
in
das
adc
mov
enter
push
push
aam
jge
jae
and
test
add
add
add
lock
nop
lock
push
fs
push
retf
push
stos
test
push
dec
out
(bad)
call
cmp
add
jmp
in
lea
jl
movs
sbb
out
push
lock
add
rol
fisub
push
xchg
add
in
cmps
or
add
fisubr
rcr
sar
add
sbb
ret
and
rcl
xor
mov
xchg
(bad)
in
es
push
stos
mov
mov
push
mov
test
pushf
xchg
add
add
and
mov
inc
mov
(bad)
popf
push
pop
xchg
add
add
dec
pop
sub
or
add
and
push
daa
rcl
ret
out
jmp
jmp
inc
out
icebp
out
jle
mov
push
inc
gs
or
cdq
call
test
jle
push
or
add
add
mov
fcom
fimul
add
ins
or
sbb
fadd
fimul
push
jl
push
sbb
xlat
mov
retf
cs
cwde
push
imul
add
mov
inc
jnp
call
push
popa
in
pop
sub
add
cwde
cld
inc
push
sbb
or
add
and
jnp
(bad)
(bad)
(bad)
jne
or
cmc
movs
aam
add
push
outs
mov
jg
pop
outs
jge
sti
call
jg
(bad)
in
in
aad
movs
jmp
jmp
call
ins
pop
inc
cld
mov
and
add
sbb
jl
fdiv
add
add
jg
pop
mov
inc
sbb
fs
or
mov
cmp
call
jge
or
pop
lock
push
jge
ret
jg
cld
sub
jecxz
push
or
push
pop
ins
pop
aad
xor
add
aad
es
nop
push
call
add
jecxz
cld
add
jne
jmp
jecxz
ins
jle
dec
fld
push
jle
mov
or
add
pop
add
dec
or
popf
imul
add
in
pop
add
adc
inc
push
cmps
inc
inc
ret
sahf
jbe
mov
hlt
adc
xchg
dec
mov
add
add
mov
arpl
in
xor
sbb
in
xchg
mov
retf
aad
push
lock
xchg
mov
out
rcl
cdq
rcl
jle
push
and
dec
hlt
cs
mov
(bad)
push
(bad)
or
inc
in
sub
add
add
aas
pop
xor
or
jle
sbb
pop
cmp
add
xchg
cli
test
or
lea
movs
inc
mov
mov
push
or
(bad)
sar
or
outs
(bad)
and
jge
or
jg
dec
in
movs
dec
add
fst
mov
or
(bad)
enter
mov
add
add
add
iret
sbb
inc
lea
ror
dec
or
push
das
mov
xchg
jecxz
push
inc
hlt
xchg
add
jne
pop
inc
clc
movs
ja
push
push
imul
jg
fisub
shr
mov
add
or
cld
mov
push
pop
fcmove
fisttp
add
hlt
sbb
push
cmp
add
add
sti
cmc
in
or
cmp
push
add
test
dec
add
movs
test
fnstcw
add
leave
pop
add
or
push
rcl
mov
dec
pop
or
out
rcl
mov
mov
or
clc
adc
push
add
call
ficom
or
dec
gs
sahf
fistp
mov
or
mov
sbb
fnstenv
dec
xlat
xchg
mov
sbb
pop
movs
addr16
cwde
mov
add
mov
add
add
add
subps
jl
popa
pcmpgtw
adc
das
arpl
sar
fcomp
lea
sbb
pop
jle
add
pop
add
loopne
fsubr
or
add
add
(bad)
in
and
sbb
rcl
sub
in
in
aad
in
xchg
pop
adc
pop
mov
push
inc
jg
mov
sbb
mov
shr
push
jne
or
out
mov
sbb
inc
sbb
add
xchg
(bad)
loop
out
mov
add
add
inc
adc
and
add
loopne
push
jle
or
push
test
in
outs
add
push
jo
jge
adc
dec
mov
sub
mov
in
xchg
(bad)
adc
mov
ins
push
lea
push
push
lods
dec
icebp
inc
add
add
pop
pop
or
inc
adc
jo
gs
push
mov
in
pop
add
dec
and
fwait
jge
or
ret
in
fadd
in
and
inc
pop
pop
inc
test
xchg
ret
in
mov
xor
hlt
jne
add
adc
cmp
sbb
test
je
aad
or
movs
ret
in
(bad)
sbb
aad
pusha
sbb
(bad)
xor
test
adc
mov
sbb
sbb
ins
jge
dec
aad
in
push
pop
pop
adc
xor
adc
jle
shl
in
fisttp
jecxz
add
in
pop
add
adc
cwde
jge
fwait
push
into
sbb
pop
mov
sbb
push
(bad)
in
sbb
ficomp
inc
(bad)
dec
hlt
push
inc
or
push
rcr
or
dec
mov
jmp
sbb
call
inc
jge
pop
sbb
add
add
inc
fs
push
or
push
and
int3
cmp
push
jne
adc
mov
adc
movs
out
jl
or
jge
add
jl
add
imul
pusha
jge
add
in
in
popf
push
popa
inc
loop
push
hlt
into
sub
aaa
or
ss
push
div
setne
(bad)
cmc
adc
lea
mov
cld
aad
sbb
fsubr
adc
push
mov
add
sbb
gs
jne
repz
cld
into
cmp
add
nop
das
adc
in
jns
inc
sub
adc
inc
cmp
xor
aaa
popf
mov
add
in
in
pop
inc
outs
mov
rcr
inc
(bad)
push
inc
enter
fld
in
aad
(bad)
retf
imul
rol
aad
mov
jecxz
pop
in
inc
xchg
(bad)
cmp
lock
xchg
dec
lea
and
inc
fist
jge
adc
sub
(bad)
mov
pmaxub
leave
pop
xchg
add
adc
inc
push
test
mov
jns
dec
add
(bad)
lock
mov
in
repnz
pushf
loopne
setae
jecxz
adc
pop
push
add
test
fsin
jne
(bad)
inc
in
dec
mov
adc
stc
mov
fcomp
add
loop
jne
cmp
cdq
stc
(bad)
add
add
shr
shl
add
push
add
loop
call
mov
mov
dec
pop
(bad)
add
leave
and
test
or
mov
add
rcl
mov
mov
add
add
mov
lea
add
test
add
jmp
mov
nop
mov
dec
aam
cdq
inc
sti
sbb
loopne
pop
jmp
loopne
mov
xchg
adc
adc
pop
or
or
fistp
sbb
addr16
(bad)
sbb
(bad)
adc
push
pop
pop
add
and
and
dec
mov
sar
or
sbb
pop
xchg
iret
cmps
cwde
jge
and
into
clc
mov
inc
imul
jo
xchg
(bad)
aad
sbb
movs
sbb
dec
mov
xor
or
mov
test
jmp
or
adc
jecxz
daa
jle
inc
xchg
jp
cmp
sbb
xchg
ins
sub
adc
into
loope
sub
xchg
(bad)
dec
and
push
cld
nop
fisubr
cld
scas
stc
or
arpl
fwait
dec
popa
add
aas
stos
sub
ja
cld
in
xchg
and
sbb
fxch
cdq
(bad)
adc
sbb
fcom
or
mov
mov
add
imul
adc
sbb
dec
add
loop
sub
or
jno
push
loopne
addr16
dec
pop
test
shl
les
sbb
pop
cli
sbb
pop
or
or
into
adc
sbb
ins
or
lea
cld
mov
or
and
push
mov
jns
or
or
pop
retf
into
test
add
fcom
mov
and
repz
mov
sbb
push
(bad)
loop
sbb
jl
jae
add
adc
gs
out
out
int3
adc
jl
pop
nop
sub
(bad)
jmp
add
push
repz
and
or
sub
sbb
cdq
adc
add
cmp
call
nop
xchg
inc
cmc
push
sbb
adc
dec
(bad)
data16
or
dec
retf
adc
xchg
sbb
push
inc
or
add
outs
fwait
dec
aad
jmp
ss
aad
jge
add
push
jge
or
scas
jge
div
add
or
mov
adc
(bad)
shl
and
mov
jne
add
adc
fcom
cmp
lock
jnp
inc
in
adc
add
xchg
cmp
shl
and
int
fild
fst
fcom
cmp
cmp
jmp
add
movs
icebp
push
adc
fwait
pop
lods
mov
shl
inc
adc
sbb
mov
popa
or
push
and
retf
jb
mov
test
bound
fmul
fst
test
sbb
add
sbb
and
jp
(bad)
fmul
push
adc
sub
test
add
or
push
jl
je
or
add
mov
loopne
arpl
ja
movs
or
ins
mov
loopne
jecxz
int
xchg
jl
add
add
push
push
cwde
add
cdq
rcr
mov
xchg
retf
sbb
test
call
dec
hlt
into
leave
mov
cmp
mov
in
adc
popf
inc
jmp
jle
inc
cwde
dec
pop
stc
mov
in
mov
movs
dec
lock
je
(bad)
fxch
cdq
(bad)
adc
clc
jecxz
outs
aas
add
jecxz
movs
add
adc
std
in
ds
add
dec
icebp
mov
(bad)
jl
js
rcr
shl
and
or
mov
or
(bad)
push
out
mov
pusha
xchg
pop
pop
mov
push
loopne
gs
dec
adc
(bad)
sbb
mov
and
dec
add
push
mov
mov
mov
xchg
pop
(bad)
pop
clc
aad
push
or
sbb
int3
ja
dec
fld
or
mulps
jecxz
movs
push
dec
hlt
adc
mov
dec
lods
or
add
aam
mov
fwait
push
lea
push
add
lds
jne
add
dec
or
add
add
inc
cdq
(bad)
jne
push
push
imul
sbb
xor
call
xchg
into
jbe
sbb
sahf
aas
movs
add
or
sbb
nop
inc
(bad)
movs
cwde
jge
and
mov
sbb
(bad)
dec
cld
push
cmp
mov
cmps
add
sbb
pusha
jp
add
add
or
adc
push
adc
cmps
dec
(bad)
dec
xchg
add
in
pop
xchg
push
adc
jecxz
add
jne
mov
sbb
or
sahf
mov
fwait
jge
pop
cmps
mov
sbb
nop
rcr
fcmovu
ret
sahf
outs
inc
mov
int
push
mov
adc
mov
xor
pop
cld
dec
sbb
fwait
jge
add
pop
out
cdq
dec
jle
ja
sbb
push
xchg
or
cdq
jle
add
lock
sbb
or
sbb
jecxz
push
(bad)
loopne
sbb
add
add
call
mov
adc
sbb
inc
adc
outs
in
imul
dec
call
inc
or
jg
add
(bad)
outs
add
jne
jb
jge
dec
pusha
jecxz
aad
mov
pop
pop
xor
sbb
or
add
add
add
or
ds
push
inc
ror
mov
in
out
or
mov
dec
or
cmp
push
cdq
out
sahf
sbb
es
mov
pushf
or
dec
call
cmps
xor
test
adc
sub
dec
push
mov
ins
in
sbb
add
add
add
data16
cli
mov
push
stos
gs
aad
cdq
(bad)
shl
mov
push
imul
jne
outs
in
fld
sub
cmp
pop
add
lock
sbb
dec
jl
push
dec
lds
inc
sbb
jmp
xor
push
in
in
or
(bad)
cmc
jge
add
add
pop
xor
(bad)
jns
adc
sahf
inc
and
leave
test
add
clc
mov
sub
jns
pop
add
lock
mov
outs
cs
bound
inc
pop
(bad)
xor
loopne
movs
jle
cmp
ins
adc
xor
sbb
ds
push
mov
push
pop
jle
add
add
je
(bad)
in
gs
sub
outs
in
bound
add
lds
into
outs
inc
mov
out
adc
inc
and
or
pushf
icebp
in
mov
gs
jge
push
sbb
out
ds
mov
cmp
ins
je
push
rol
add
add
dec
push
or
dec
(bad)
movs
mov
add
je
les
xchg
add
xchg
add
pop
dec
cld
fs
sbb
(bad)
shl
es
test
psubusw
jecxz
push
pop
in
and
or
adc
pop
in
push
and
add
test
add
push
jmp
add
push
je
push
cld
sbb
mov
call
ins
jns
test
jno
dec
loopne
nop/reserved
in
xchg
cmp
xchg
test
add
das
adc
fld
add
test
mul
xchg
add
cs
std
test
add
test
jmp
sbb
sets
jecxz
adc
gs
add
outs
add
dec
pop
cmp
pop
addr16
(bad)
loopne
aad
sbb
dec
dec
je
push
cld
push
jmp
push
cld
or
add
add
xchg
jmp
fadd
movs
clc
pop
or
ja
cmp
in
adc
(bad)
sbb
call
icebp
xor
jne
ins
inc
cld
call
jmp
js
add
sbb
push
rol
xchg
test
jmp
sbb
(bad)
adc
test
fcomp
(bad)
adc
add
in
(bad)
adc
retf
inc
sub
outs
cwde
movs
in
sbb
out
pop
push
lahf
cmp
sbb
push
or
pop
xchg
sbb
sub
loop
loop
cmp
xchg
les
mov
cmp
bound
inc
dec
popf
sbb
pop
push
add
push
add
sbb
cs
or
icebp
inc
jg
jl
or
dec
add
add
or
inc
or
adc
sbb
in
aaa
push
leave
in
sbb
sbb
es
adc
add
fld
retf
movs
and
add
sbb
add
and
pop
jle
xchg
ins
xchg
into
rcr
aad
sbb
(bad)
cmc
or
enter
loopne
sbb
(bad)
cmp
test
xchg
mov
in
fmul
pop
add
adc
js
out
sbb
lods
or
mov
jo
pop
sbb
lods
dec
in
cmps
cmp
dec
push
dec
dec
lock
mov
sub
sub
clc
cmp
ins
(bad)
iret
xchg
sbb
imul
test
ins
hlt
inc
mov
and
test
lea
cmc
push
(bad)
jmp
dec
call
fadd
setns
jecxz
and
test
xor
(bad)
lock
pop
in
lods
and
sbb
hlt
adc
mov
pop
dec
pop
sbb
mov
pop
in
(bad)
mov
call
pop
jmp
cdq
ins
xor
sbb
fist
mov
add
ds
int
dec
add
dec
test
test
bound
in
in
and
sbb
dec
add
vpmulhw
je
arpl
jmp
push
pop
fdivr
mov
nop
arpl
jle
add
in
inc
add
mov
mov
add
add
in
inc
sbb
cmps
or
fcmovb
in
add
call
push
aas
cld
jle
push
in
push
frndint
push
inc
inc
out
rcl
ret
ror
dec
mov
mov
mov
and
push
push
in
xchg
xchg
retf
and
stos
inc
inc
adc
mov
sbb
and
add
pop
or
mov
mov
imul
or
add
je
cs
call
sahf
out
or
fcomp
push
test
mov
cld
sahf
sub
test
add
rcl
adc
xor
(bad)
pop
test
add
fcomp
xor
cmp
push
sbb
push
test
mov
mov
xchg
dec
sub
pop
in
test
jnp
(bad)
out
adc
movs
(bad)
in
stc
dec
inc
cdq
(bad)
icebp
mov
xchg
push
or
sbb
aad
inc
mov
mov
mov
add
mov
add
add
adc
jmp
test
dec
int
jmp
sub
xchg
pop
in
push
mov
icebp
mov
push
dec
loope
push
test
shl
sub
add
mov
int
push
(bad)
jge
add
xchg
shl
jge
test
pop
ret
mov
ret
mov
add
add
int
(bad)
jmp
pop
in
data16
pop
daa
ins
in
bound
data16
in
or
jmp
xchg
das
in
dec
ror
cmp
adc
adc
in
push
daa
or
fiadd
adc
(bad)
imul
in
sbb
push
xlat
adc
add
fwait
inc
and
add
out
or
push
jmp
cwde
inc
add
cmps
adc
inc
fcom
push
dec
sbb
aad
dec
call
inc
adc
shl
call
outs
cwde
adc
call
sbb
push
push
in
jae
lock
sbb
push
out
ja
lock
push
sbb
dec
or
fwait
jge
mov
sbb
add
sbb
fmul
mov
lahf
ret
cmps
sahf
xchg
jne
std
push
or
mov
add
out
sbb
jmp
or
push
push
jl
sbb
in
sbb
adc
adc
mov
ja
add
pop
or
fistp
int
inc
pop
xor
push
cmp
dec
mov
(bad)
(bad)
in
sbb
push
dec
jecxz
push
es
cld
adc
(bad)
jg
outs
and
mov
sti
ins
pop
in
lods
call
adc
jge
xor
nop
in
pop
aad
icebp
xor
mov
in
movs
adc
mov
fiadd
addr16
js
and
xchg
add
pop
and
push
push
dec
xchg
pop
into
xchg
in
add
add
add
xchg
inc
lds
in
gs
pop
call
adc
and
jmp
jecxz
and
mov
(bad)
and
dec
mov
pop
(bad)
or
sbb
call
lahf
(bad)
nop
aad
in
outs
mov
inc
test
and
inc
or
and
and
pop
inc
cmp
add
jle
push
bound
gs
fstp
pop
hlt
push
clc
loop
sbb
add
outs
mov
pop
xchg
or
cli
jmp
jl
add
add
jne
or
sbb
call
inc
pop
cmp
mov
test
(bad)
pop
add
mov
sbb
add
push
adc
or
push
add
pop
sbb
adc
add
mov
call
pop
pop
sbb
sbb
rcr
xchg
push
and
add
repz
or
(bad)
push
add
push
push
fstp
test
enter
cmps
icebp
or
pop
imul
dec
push
dec
mov
jmp
bound
inc
pop
pop
push
fsub
sub
ret
stos
in
xchg
test
add
add
xor
pop
jmp
or
add
mov
mov
sbb
sbb
sub
xchg
ror
in
dec
outs
adc
sub
inc
(bad)
cdq
sti
push
jb
bound
call
cmp
pop
fcom
sbb
push
outs
adc
and
ins
fld
add
add
in
bound
fdivr
cmp
inc
xchg
dec
push
lock
lea
sbb
jne
ins
test
arpl
dec
call
movs
ins
push
movs
loop
cdq
les
xchg
ret
out
bound
mov
xchg
jne
cdq
dec
call
cld
push
in
(bad)
jmp
retf
add
sbb
imul
adc
add
jmp
xchg
add
or
call
pushf
pushf
and
fstp
call
cld
xchg
in
ins
xchg
sub
or
pop
mov
pop
adc
cmp
pop
movs
adc
cdq
or
jg
sbb
sbb
pop
xor
xchg
(bad)
(bad)
in
cld
add
jmp
sub
repnz
aas
ret
jg
jl
aas
leave
sbb
xchg
in
sahf
enter
inc
sbb
mov
jmp
add
cmp
inc
in
aad
sbb
in
sbb
bound
add
add
jl
jnp
clc
loop
sbb
ins
pop
enter
cmp
inc
in
movs
sbb
sub
mov
adc
dec
xchg
enter
lea
jecxz
sbb
add
or
dec
xor
ret
add
fwait
sbb
fmul
cld
scas
sub
adc
or
dec
out
and
adc
call
sbb
aad
cdq
dec
dec
aas
fld
cmp
jmp
sbb
aad
xchg
inc
or
out
cmp
jmp
lock
pop
sbb
push
push
ins
dec
mov
mov
je
sub
outs
cmp
or
cmc
mov
or
cmp
call
inc
dec
mov
pop
or
ret
sbb
lock
xchg
(bad)
call
or
scas
ret
adc
pop
push
ret
add
sbb
mov
test
fnstcw
inc
fst
xchg
jmp
lods
dec
push
mov
ds
push
ins
mov
fmul
inc
sldt
add
push
les
aad
adc
inc
mov
mov
or
inc
mov
cdq
imul
and
dec
lock
fidiv
push
ins
jae
add
icebp
das
sti
ins
pusha
inc
cmp
pop
sub
pop
pop
(bad)
adc
in
sbb
lock
and
in
cmp
xchg
in
fcomp
fcomp
inc
jb
mov
addr16
cmp
cld
mov
paddw
loop
fwait
jge
jno
mov
and
xchg
or
add
xor
sbb
jmp
rcl
xchg
dec
push
ins
popf
mov
bound
fwait
push
add
xchg
add
or
inc
cdq
je
jle
or
ss
lods
add
dec
push
in
cmp
cmp
xchg
pop
inc
sbb
lock
bound
in
push
cmp
push
fcomp
in
lods
jle
add
cwde
xor
or
add
add
inc
jno
inc
xchg
aaa
sub
shl
dec
pop
cmps
ds
cld
ret
ss
int
in
add
or
jmp
dec
in
aaa
fldcw
sub
add
dec
ret
pop
pop
test
adc
data16
cld
or
(bad)
jb
ret
jge
sbb
in
lods
adc
jge
ret
sbb
inc
lods
adc
cmp
push
cs
sbb
ror
pop
sbb
xchg
lock
cmp
xor
mov
jle
push
data16
mov
adc
loopne
or
mov
sbb
xor
sbb
scas
push
jecxz
add
add
mov
(bad)
push
sbb
cmc
les
dec
fwait
inc
ret
outs
cmp
xor
sbb
cmps
sbb
lea
data16
add
pop
clc
xchg
xchg
sbb
sbb
adc
add
pushf
test
add
add
out
ret
(bad)
out
xchg
test
fcomp
(bad)
bound
add
adc
imul
enter
cmp
or
push
les
jns
in
bound
jb
(bad)
gs
shl
cmp
add
out
(bad)
jmp
pop
bound
xchg
cld
arpl
in
jg
outs
add
add
add
mov
lea
das
(bad)
loop
dec
push
adc
(bad)
mov
mov
push
mov
std
xlat
inc
inc
cmp
loopne
(bad)
bound
dec
push
mov
xchg
cld
arpl
in
jge
push
add
adc
leave
jb
sldt
add
mov
push
cld
pop
das
in
push
jge
push
gs
sbb
inc
cmp
dec
out
shl
pop
xor
pop
cld
popa
cs
and
add
add
sbb
gs
jb
imul
pop
jecxz
xchg
pop
xchg
in
cs
ret
xor
in
clc
popa
loop
bound
cwde
push
sar
adc
sbb
pop
adc
inc
add
and
jle
cli
in
(bad)
adc
(bad)
or
adc
out
in
xchg
jp
jb
or
mov
iret
pop
cmp
inc
fldcw
jmp
lock
pop
sub
call
test
cmp
mov
sbb
sub
cmp
jmp
call
sbb
fsubrp
les
jmp
(bad)
in
cld
add
and
(bad)
cld
cmp
inc
inc
inc
adc
mov
push
bound
add
jge
shr
pop
add
push
dec
call
pushf
and
mov
xchg
sbb
mov
adc
in
or
imul
jmp
movs
xchg
in
out
adc
sbb
adc
cld
jmp
push
inc
add
add
dec
fld
and
sbb
add
add
jge
pop
push
les
mov
cdq
popa
movs
sub
cmp
fbstp
adc
ror
sbb
aad
sbb
or
jecxz
in
rol
xchg
call
add
movs
jg
add
adc
push
sub
add
add
mov
pop
add
sbb
inc
popa
mov
xchg
jne
cmps
lock
in
pop
imul
nop
push
and
mov
ret
or
imul
jo
sbb
pushf
mov
mov
punpckhwd
jecxz
in
push
in
cmp
sbb
xlat
addr16
cmp
cli
jae
aad
arpl
cld
xor
call
jle
mov
(bad)
in
fnstsw
sbb
adc
add
leave
lock
cmp
pop
clc
fs
sbb
push
jle
push
lock
retf
das
sub
out
xlat
or
ret
sbb
out
sub
jg
clc
and
pop
in
cdq
aas
in
adc
sbb
jge
mov
cs
add
jge
add
jge
lea
bound
std
iret
sar
add
dec
in
dec
adc
je
jne
add
mov
imul
and
add
or
mov
das
or
test
leave
and
call
or
mov
ror
add
sar
mov
fmul
fld
jge
bound
jb
pop
(bad)
adc
cmps
push
(bad)
pop
add
fiadd
add
add
xor
dec
push
or
call
sub
(bad)
loop
fs
xchg
pop
sbb
inc
outs
imul
mov
adc
call
mov
push
test
add
dec
sbb
mov
lock
xor
mov
sbb
shl
fisttp
push
inc
(bad)
jnp
in
mov
ds
sub
repnz
dec
(bad)
bound
cdq
enter
cld
ret
int
sub
bound
fcmovnb
jg
jl
dec
enter
adc
call
nop
clc
(bad)
std
jns
jmp
int
mov
cld
fsub
stos
xchg
jne
sub
ret
inc
ins
jle
add
pop
dec
add
jo
push
sbb
sbb
in
in
retf
outs
dec
cwde
inc
adc
sbb
sahf
mov
mov
mov
test
mov
lods
int3
push
loopne
inc
adc
add
(bad)
dec
stos
in
std
adc
inc
adc
cmp
imul
add
push
fsubp
jmp
push
push
retf
jo
dec
xchg
jmp
aas
inc
push
test
add
xor
pop
(bad)
ftst
add
mov
add
mov
add
mov
add
inc
fwait
inc
cmp
in
add
rol
or
dec
push
(bad)
jmp
sub
rcr
aam
sbb
loopne
mov
pushf
mov
pop
add
sti
xor
int
in
and
mov
pop
inc
xchg
adc
jmp
inc
inc
inc
push
cmp
pop
addr16
or
mov
add
add
aam
inc
cdq
fwait
sbb
mov
int
fdiv
out
bound
cld
add
stos
psubsb
in
pushf
inc
icebp
and
add
ret
sbb
lock
ds
in
std
xor
adc
cdq
add
movs
leave
push
loopne
mov
jmp
inc
cdq
cmp
gs
push
sub
dec
(bad)
pop
ins
arpl
jg
add
fadd
into
cmp
lock
adc
call
scas
fwait
adc
and
sbb
leave
push
call
in
adc
jne
fwait
adc
loopne
sbb
test
push
mov
add
add
jg
push
ins
jmp
add
mov
mov
jb
sub
cmp
inc
iret
jle
jmp
jb
mov
fiadd
jle
mov
daa
jb
ret
jmp
or
sbb
push
lea
sub
cdq
(bad)
lds
movs
jne
ja
hlt
jmp
add
jo
jae
jmp
dec
lods
inc
and
in
add
jle
dec
add
pusha
call
push
retf
dec
test
div
cdq
js
and
(bad)
or
mov
mov
pop
push
pop
and
jns
add
nop
jle
cdq
fs
call
cmovge
jmp
ds
ret
jo
stc
les
dec
sbb
jae
ret
retfw
in
sahf
xor
retf
sub
xchg
lock
adc
add
cdq
pop
add
or
cmp
mov
ror
adc
das
jnp
jb
stos
fmul
inc
and
xchg
dec
sub
mov
ror
sub
sbb
or
popf
adc
sub
jmp
loope
dec
push
cdq
pusha
ins
test
rcl
cdq
sti
fs
cwde
ficom
sbb
or
mov
in
sbb
mov
hlt
ds
adc
add
add
ret
sbb
sub
cmp
sub
xchg
jle
(bad)
ja
fld
add
test
sbb
mov
loop
mov
gs
retf
in
sbb
pop
test
add
aam
jmp
test
add
icebp
dec
adc
jecxz
movs
mov
sbb
fwait
loope
add
icebp
ds
jecxz
gs
(bad)
fndisi(8087
xchg
add
iret
jecxz
gs
(bad)
fndisi(8087
xchg
add
leave
jecxz
and
loope
add
xor
adc
jecxz
and
test
add
and
mov
fwait
jle
es
push
ror
fwait
inc
xor
call
sbb
addr16
gs
lods
or
(bad)
jmp
mov
test
add
xor
jne
je
test
mov
sahf
or
inc
(bad)
sbb
pop
sahf
ins
or
mov
xchg
leave
enter
inc
cwde
xchg
xor
mov
mov
or
sbb
ss
je
xchg
loope
sbb
pop
leave
addr16
cmps
dec
lods
push
jnp
movs
jne
xchg
outs
add
xchg
lock
(bad)
in
lods
xchg
dec
mov
push
jne
add
(bad)
mov
scas
pop
add
dec
call
sahf
cmp
xchg
jl
pop
jmp
and
dec
pop
mov
dec
push
mov
or
sbb
push
mov
dec
push
cmp
add
adc
inc
sbb
ret
jge
mov
jb
ins
pop
xor
cmp
cdq
and
add
and
xchg
add
sbb
xchg
xchg
inc
pop
inc
inc
in
adc
and
xor
sbb
cmps
add
in
scas
sub
adc
ror
adc
sbb
je
leave
dec
or
adc
jo
cmp
adc
adc
sbb
leave
sldt
add
dec
inc
jb
adc
sub
cmps
ret
in
je
cmps
xchg
or
adc
or
jp
int3
mov
test
mov
data16
add
pop
cmps
cdq
stc
ins
mov
test
sbb
pushf
mov
ja
push
jno
pushfw
dec
adc
add
cmc
sbb
aaa
add
sbb
adc
sub
dec
int
ret
push
adc
add
adc
dec
or
adc
outs
in
push
cmp
sbb
ret
int
ins
idiv
sub
push
mov
adc
jae
int3
pop
add
add
and
inc
xchg
sar
sub
dec
mov
in
mov
sar
xor
or
loope
data16
outs
pop
inc
adc
ror
cdq
xchg
leave
jmp
mov
cmps
add
je
xchg
cdq
stc
or
or
dec
mov
data16
outs
pop
inc
bound
inc
ds
xchg
test
sub
sti
cmc
adc
mov
aas
in
pop
jbe
ret
fwait
adc
jbe
pop
fdivr
xchg
dec
out
push
inc
stos
dec
push
cmp
add
je
jle
xor
fistp
ja
jle
adc
xor
xchg
inc
and
mov
cmp
sbb
sbb
jnp
(bad)
jo
in
(bad)
lock
out
xchg
mov
add
add
repz
pushf
movs
arpl
bound
in
(bad)
mov
dec
dec
std
jmp
lock
pop
cmps
inc
sbb
into
inc
push
inc
in
in
mov
inc
xchg
lock
out
je
adc
inc
adc
sahf
dec
adc
clc
fimul
push
ret
inc
in
sbb
pop
pop
mul
fwait
xor
cmps
inc
icebp
add
dec
in
repz
ret
sahf
inc
dec
dec
inc
jecxz
adc
aas
repz
movs
pop
push
ins
sub
test
cmp
jne
(bad)
pop
data16
mov
push
dec
and
movs
push
int3
push
mov
nop
mov
inc
xchg
clc
cld
pop
in
mov
test
cs
inc
pop
inc
inc
dec
push
cmp
adc
add
add
inc
cdq
les
cmp
inc
gs
stos
inc
push
add
mov
test
dec
cmp
sbb
inc
inc
push
loop
(bad)
stos
(bad)
sbb
stos
push
in
cmp
adc
je
inc
aam
sbb
inc
pop
push
or
in
pop
lock
in
cmc
mov
cdq
gs
test
push
inc
sar
inc
ds
and
pop
nop
xchg
ret
dec
mov
shl
retf
xchg
out
inc
push
loopne
loopne
ret
add
adc
push
xchg
in
sbb
push
add
cdq
add
test
lock
add
mov
call
add
test
lock
and
test
mov
jmp
or
jne
or
shl
pop
push
fwait
test
(bad)
dec
cmp
add
dec
fld
xchg
xor
pop
sbb
aad
pop
add
fcom
push
push
sbb
mov
add
jmp
add
in
movs
mov
cld
sub
test
mov
(bad)
mov
sbb
iret
mov
push
push
jnp
fmul
test
in
and
(bad)
sbb
xor
adc
loope
cld
mov
pushf
or
jecxz
cdq
clc
(bad)
js
fld
add
add
mov
lock
mov
sbb
addr16
mov
inc
adc
sbb
sbb
add
adc
mov
adc
and
add
and
or
shl
test
test
sbb
icebp
pop
jo
adc
test
mov
test
fnsave
lea
add
add
push
jmp
cdq
(bad)
fstp
call
xchg
inc
cmc
pop
adc
sub
add
aas
or
in
les
push
cmp
sbb
(bad)
dec
call
jl
mov
pop
and
dec
lock
add
or
or
or
mov
pop
or
ret
loopne
call
or
lods
ret
in
fdivr
fwait
inc
push
or
or
adc
fild
lock
test
jmp
dec
and
mov
jg
cmp
jg
movaps
jecxz
movs
add
sbb
add
add
jle
add
push
jb
jl
ror
sbb
gs
adc
add
call
jecxz
gs
adc
add
jmp
je
retf
ins
inc
cmps
jmp
sets
call
jg
add
les
sbb
sbb
dec
fadd
clc
push
xor
add
cmp
cmc
in
pushf
add
in
in
(bad)
neg
add
adc
jmp
popf
push
add
jle
dec
lods
pop
aas
loopne
pop
sbb
pop
push
sbb
xchg
jle
pop
mov
out
in
sbb
jno
push
jle
inc
lods
sbb
gs
push
fcom
sbb
fld
or
pop
sbb
add
lock
in
cmp
and
ds
fcomp
je
inc
push
fsubr
popf
push
add
fwait
dec
sub
popf
push
add
jmp
push
fsubr
push
add
add
dec
imul
and
out
jae
add
add
add
add
fld
and
inc
push
call
cmp
sub
les
sbb
pop
push
push
jmp
inc
push
(bad)
pushf
push
add
in
bound
fsub
test
add
repnz
bound
jmp
sub
add
test
(bad)
cwde
pop
add
cwde
jge
in
cli
in
and
in
(bad)
(bad)
jmp
test
and
xor
test
lods
fadd
xor
add
push
and
sub
adc
ja
jmp
inc
push
fsub
push
add
cmp
inc
push
jmp
call
stc
fadd
lock
jmp
inc
add
add
fadd
cld
or
in
(bad)
fcomp
sbb
jge
pop
sub
lock
jbe
fstp
dec
dec
clc
inc
xchg
mov
fucom
dec
aas
call
add
push
(bad)
push
and
pop
mov
jge
sar
fadd
les
add
js
fld
cmp
lods
adc
popa
lods
adc
pushf
lods
and
(bad)
lods
and
mov
xchg
jge
lods
in
adc
aam
mov
aam
lods
lods
in
fsubr
lods
in
mov
rcl
sti
mov
out
in
xchg
jne
shr
cdq
gs
jge
sar
aaa
sub
adc
not
adc
in
std
jg
inc
out
shl
out
fsubr
sbb
mov
push
inc
in
call
out
jno
cmp
jmp
jne
pop
add
aad
shr
cdq
adc
sub
aad
xchg
gs
out
in
std
js
jmp
jl
jae
sbb
aam
in
lods
mov
(bad)
mov
xchg
jne
ret
lock
out
in
sbb
inc
mov
test
ins
es
in
xchg
xchg
add
add
jmp
and
dec
mov
jmp
add
sbb
into
fisttp
scas
test
jae
add
add
inc
add
mov
add
in
call
mov
add
fwait
pop
and
addr16
test
inc
add
cmp
add
bound
push
int3
sbb
ins
mov
jne
(bad)
lock
pop
add
add
sbb
jae
or
arpl
xchg
adc
sbb
mov
and
fdivr
dec
(bad)
call
jge
sub
inc
add
dec
sub
inc
adc
fdivr
(bad)
jbe
dec
icebp
add
jmp
or
pop
dec
mov
add
les
(bad)
xor
jmp
mov
push
sbb
push
push
je
inc
pop
xchg
jg
ret
adc
push
jne
mov
nop
or
(bad)
pop
iret
in
jno
fmul
jg
les
push
cld
or
in
dec
cld
push
or
cli
(bad)
(bad)
xor
xchg
inc
sbb
jg
pop
ret
hlt
fmul
cmps
loope
push
out
sub
jp
call
mov
dec
push
mov
aad
sbb
sbb
in
dec
or
aad
sbb
jns
push
push
jno
cmp
jns
cmp
js
out
lods
in
ss
dec
push
inc
inc
in
xchg
jle
call
out
or
std
out
in
shl
ins
add
jno
(bad)
call
out
data16
hlt
inc
adc
cdq
fwait
jne
int
jne
out
inc
or
cdq
and
fnstcw
and
rcr
dec
cmp
mov
lea
add
add
jb
in
cld
les
mov
icebp
push
cmps
inc
sub
lods
aas
rol
inc
pop
jle
fmul
ss
cmp
xchg
addr16
(bad)
xlat
dec
push
ss
add
sbb
ins
(bad)
(bad)
jmp
fcom
in
in
out
retf
xchg
jne
push
jmp
or
add
add
xor
and
sbb
adc
jge
jne
icebp
data16
adc
int
adc
or
(bad)
(bad)
cwde
les
lods
add
sbb
loop
inc
cmp
and
aad
push
std
or
push
out
in
cs
xchg
in
out
jnp
add
add
inc
ins
ja
mov
push
push
push
outs
adc
scas
or
dec
pop
pushf
jns
ror
xchg
inc
add
test
dec
icebp
data16
sub
shr
sub
icebp
lfs
cwde
(bad)
rol
movs
je
stos
sbb
sti
xor
inc
add
dec
lods
out
cvtdq2ps
adc
add
add
mov
mov
adc
jns
loopne
add
in
cdq
pop
sbb
and
adc
inc
or
jecxz
fisttp
fdivp
inc
mov
pop
or
sbb
iret
jno
and
leave
xchg
in
(bad)
stos
inc
or
lock
push
(bad)
mov
das
adc
add
add
pop
jbe
in
pop
inc
addr16
inc
inc
pop
push
stos
in
pop
loope
in
popa
test
add
inc
inc
aad
xlat
mov
nop
dec
test
xor
push
cs
mov
xchg
loop
loop
(bad)
jl
fsubp
mov
pop
loop
shr
(bad)
fcomp
out
bound
xor
in
sub
jmp
cmps
js
(bad)
cmp
imul
dec
xlat
dec
push
mov
sbb
push
stos
in
xchg
inc
or
adc
(bad)
not
push
dec
call
cld
xchg
dec
push
sbb
add
cs
retf
ror
mov
popf
xchg
add
scas
adc
dec
daa
cdq
clc
ret
cmp
cwde
loopne
inc
jmp
adc
sbb
jg
test
add
add
mov
push
aam
push
stos
rcr
add
sbb
call
fcom
in
in
xchg
sub
inc
add
add
or
bound
xchg
pop
fwait
add
(bad)
adc
jecxz
dec
imul
cmp
fsubp
test
cs
imul
mov
pop
loop
mov
or
xchg
ret
test
imul
lea
or
push
std
mov
inc
mov
add
add
xor
xchg
call
xchg
ror
cli
test
sbb
punpckhbw
verr
pop
pop
add
add
or
pop
mov
(bad)
(bad)
fstp
test
cmps
cmps
pop
adc
in
dec
imul
add
in
sub
jmp
jle
test
inc
xchg
push
add
add
fucom
add
fucom
(bad)
loop
push
sbb
(bad)
fsub
call
xchg
imul
add
pop
bts
mov
(bad)
lock
in
cwde
inc
push
(bad)
and
in
mov
inc
adc
pop
mov
call
xlat
add
jle
sti
adc
xchg
adc
sbb
sub
loope
imul
test
jle
or
ins
adc
fisttp
sub
xchg
imul
in
test
jg
das
addr16
loopne
push
or
cmp
(bad)
xlat
nop
clc
pushf
mov
inc
xlat
call
mov
lea
add
add
sbb
pop
or
dec
mov
fnstsw
mov
push
or
outs
(bad)
out
xlat
in
(bad)
adc
xor
push
fsubr
fist
jmp
stos
pop
add
ficom
(bad)
fsubr
jmp
adc
loopne
loop
(bad)
fimul
and
loop
adc
test
fsub
call
fninit
mov
pop
or
and
loop
inc
jmp
std
(bad)
(bad)
add
repz
pop
cwde
push
(bad)
(bad)
fisubr
popf
out
in
cwde
jl
pop
ror
or
add
add
test
(bad)
loop
in
push
sbb
jmp
test
and
test
inc
ficomp
cmp
pusha
je
fldenv
lea
pop
loop
adc
cld
add
dec
jmp
movs
xchg
in
test
loop
bound
cld
(bad)
fstp
jmp
in
pop
push
adc
aad
cmps
inc
arpl
in
nop
ins
loop
bound
in
mov
adc
inc
adc
cs
(bad)
rcr
cwde
clc
push
sub
nop
arpl
sub
push
fimul
jmp
sub
add
add
pop
xchg
cmps
aad
je
add
outs
xor
jge
adc
(bad)
jmp
(bad)
setns
(bad)
fwait
xchg
mov
cwde
imul
fisubr
addps
push
add
in
pusha
arpl
in
cld
sub
add
push
loop
loop
addr16
add
loop
fld
jo
icebp
or
cdq
imul
fidiv
jne
fisttp
mov
(bad)
xchg
je
(bad)
call
int3
add
fistp
call
mov
call
adc
cwde
pop
loop
bound
jno
cwde
mov
call
mov
in
adc
pop
loop
push
stos
mov
in
pop
mov
pop
or
add
add
push
lea
pop
loop
loop
pop
push
and
mov
lods
add
call
call
or
inc
adc
(bad)
out
adc
push
(bad)
test
fsubp
jmp
loop
bound
in
dec
ds
call
add
in
fsub
or
in
xchg
cdq
jecxz
adc
test
popa
inc
(bad)
cmp
loop
bound
xchg
in
sbb
pop
mov
jmp
mov
in
in
cwde
shl
(bad)
xchg
je
fsubp
call
push
lods
inc
(bad)
mov
fsubp
inc
add
add
movs
inc
inc
ficomp
xor
in
lock
pop
(bad)
(bad)
fst
xchg
lea
out
add
(bad)
stc
(bad)
fstp
setns
sbb
adc
fnsetpm(287
(bad)
mov
inc
outs
(bad)
(bad)
fst
test
stos
imul
fld
add
add
test
in
sbb
das
out
loop
pop
xor
mov
jmp
fucom
call
(bad)
loop
test
jg
mov
and
(bad)
fist
call
pushf
clc
imul
fist
push
outs
lock
cmp
add
xchg
mov
jecxz
imul
in
jmp
loopne
call
jle
mov
loop
adc
mov
in
aad
pushf
xor
sub
jmp
aaa
sbb
cmp
xchg
xor
clc
pop
inc
ficom
inc
adc
lea
add
jmp
cli
clc
(bad)
fistp
pop
or
and
(bad)
call
(bad)
push
stc
(bad)
fistp
call
repz
push
inc
(bad)
(bad)
fnstcw
lea
out
push
outs
pop
add
push
in
es
adc
lods
test
jmp
add
add
in
dec
adc
test
jecxz
jmp
jecxz
ror
test
in
into
sbb
jmp
push
fistp
in
test
loop
add
test
in
push
outs
xchg
test
adc
(bad)
imul
pop
adc
add
add
jecxz
test
jno
lea
out
bound
test
loop
push
dec
lea
loop
add
cmps
and
loop
call
es
adc
lea
inc
loop
je
loop
call
fmul
ins
(bad)
vunpckhps
iret
loope
pop
test
mov
mov
inc
loope
(bad)
jmp
mov
(bad)
(bad)
sti
push
pop
loope
and
call
dec
pop
adc
aam
aad
cwde
mov
in
xchg
cld
fild
loop
(bad)
loop
lea
mov
inc
push
dec
jmp
(bad)
loop
ror
add
loope
add
add
dec
in
adc
pop
add
pop
in
(bad)
inc
adc
xchg
mov
add
dec
adc
jo
(bad)
(bad)
fadd
and
sbb
xchg
mov
jecxz
sub
bound
in
mov
in
fcos
in
stos
(bad)
cmps
js
jmp
mov
in
mov
add
dec
pop
push
mov
jecxz
mov
jmp
push
push
loop
loop
movs
movaps
sbb
movs
call
mov
in
imul
(bad)
call
std
in
(bad)
lahf
pop
arpl
in
jmp
jmp
call
lea
cli
push
setae
sbb
and
xor
(bad)
fimul
sbb
add
inc
sub
outs
dec
cdq
loope
mov
mov
dec
rcr
sub
sub
adc
push
sbb
adc
sti
jecxz
sub
lahf
(bad)
sti
in
xchg
add
nop
test
add
add
mov
add
xchg
ror
in
jmp
(bad)
sti
xlat
sbb
in
cwde
and
inc
or
in
sahf
add
(bad)
(bad)
(bad)
fadd
loop
sbb
push
mov
add
or
lds
sbb
in
cmp
xchg
test
dec
adc
sbb
pop
inc
or
sbb
xchg
add
jo
add
add
lea
sbb
sbb
int
adc
jmp
in
sbb
stos
pop
sahf
add
(bad)
(bad)
std
adc
popa
sbb
add
jns
add
arpl
and
sbb
cwde
test
inc
add
add
pop
xchg
sbb
std
in
fiadd
push
jge
inc
xchg
bound
in
sbb
and
or
jbe
lds
pusha
loop
add
jno
adc
les
dec
lock
(bad)
in
(bad)
sbb
mov
xchg
xor
(bad)
div
pop
sub
das
jne
add
add
add
je
or
sbb
jmp
shl
or
fimul
(bad)
sub
(bad)
xchg
mov
ret
pop
pop
ds
call
inc
mov
inc
lahf
jo
xor
jmp
movntps
ror
cdq
loope
mov
sar
(bad)
jecxz
ret
lods
push
xchg
push
xchg
pop
addr16
sbb
test
sbb
or
pop
(bad)
shl
nop
mov
clc
in
int3
stos
fdivrp
bound
lahf
js
mul
sub
pop
in
icebp
mul
(bad)
call
sub
jmp
push
inc
dec
mul
mov
ins
sub
mov
inc
adc
mov
add
add
ja
push
mul
test
mul
jmp
out
bound
in
lea
dec
and
loop
sar
sub
test
add
pop
cdq
mov
mov
push
pusha
loop
bound
xchg
pop
arpl
in
push
test
jmp
adc
ja
add
in
jmp
in
hlt
push
sti
dec
pop
pushf
enter
sti
cli
add
js
loop
inc
sti
xchg
je
sti
in
(bad)
icebp
in
data16
(bad)
(bad)
cli
jecxz
pop
jne
jmp
push
add
inc
sbb
xchg
outs
push
(bad)
out
xchg
pop
jecxz
in
xchg
test
jmp
add
sbb
fld
loop
ret
cld
(bad)
stc
in
and
mov
mov
in
cmc
in
hlt
add
dec
pop
mov
stc
adc
or
add
stc
jecxz
cwde
push
sbb
in
xchg
cmp
stc
in
adc
bound
test
sbb
gs
jns
(bad)
stc
jecxz
lds
inc
adc
in
in
fwait
add
sbb
xchg
push
xchg
inc
sar
in
movs
cmp
xchg
sbb
sbb
call
sbb
nop
mov
(bad)
fsub
call
icebp
or
scas
imul
out
xor
out
mov
in
sbb
mov
jmp
in
cwde
jno
jmp
lahf
repz
call
mov
jecxz
pop
retf
jecxz
in
ror
mov
call
add
js
popa
cdq
mov
xchg
add
out
push
call
jl
movs
nop
add
outs
call
add
add
jg
mov
sbb
sub
jmp
lahf
cmp
out
in
cmp
sbb
sti
xor
(bad)
jge
or
sub
(bad)
out
in
jmp
das
inc
add
or
mov
sub
stos
add
out
push
call
lods
add
arpl
in
push
cmp
inc
in
cmps
js
in
in
cmp
ror
cld
jecxz
jmp
pop
or
ins
(bad)
mov
out
in
ret
inc
jmp
rol
sbb
jbe
cwde
mov
push
or
mov
out
add
push
jb
mov
loop
(bad)
out
xchg
je
out
in
lahf
out
in
pop
xchg
imul
out
cli
push
inc
out
in
test
loop
push
out
mov
in
sub
jmp
mov
adc
dec
pop
and
out
jecxz
and
pushf
(bad)
movs
sbb
sbb
out
mov
out
in
lods
add
add
call
cld
sub
(bad)
in
cli
ficom
sbb
adc
call
in
in
fnstcw
cdq
mov
movs
jno
packssdw
push
call
pushf
xchg
mov
jmp
add
outs
call
in
in
int
jb
cli
xor
jmp
jl
test
in
xor
in
dec
test
add
ja
inc
aas
std
add
cmp
jmp
fwait
test
in
in
bound
cwde
mov
and
out
in
add
in
or
call
mul
test
data16
add
in
push
out
cmps
fs
in
push
jns
jmp
cmps
js
out
in
cmp
gs
mov
movs
push
test
out
in
sub
in
gs
sahf
pop
ret
out
in
push
cli
sbb
gs
mov
push
jns
(bad)
fadd
call
xchg
cmps
inc
add
in
inc
ss
bound
adc
out
call
out
call
jae
inc
ins
add
xor
add
xchg
and
jmp
xchg
arpl
in
sbb
pop
inc
hlt
lock
rcr
or
mov
add
test
repz
push
retf
sti
not
repz
add
in
lods
sub
arpl
in
nop
dec
loop
bound
fnstenv
sub
and
push
call
(bad)
int
imul
push
stos
adc
mov
pop
(bad)
and
and
fdivr
in
push
shr
repnz
test
or
add
add
jecxz
cwde
cmp
clc
pop
jnp
shl
lock
mov
in
pop
repnz
lods
add
call
pop
dec
jmp
dec
dec
jmp
dec
dec
call
cmp
jns
icebp
in
sbb
mov
and
adc
dec
pop
loop
add
adc
icebp
dec
adc
data16
icebp
xchg
rcr
sub
(bad)
repz
call
add
adc
icebp
in
leave
es
(bad)
vpmulhuw
push
arpl
(bad)
sbb
icebp
in
xchg
ja
mov
adc
call
add
xchg
cmp
icebp
in
push
push
in
xchg
rol
ins
push
jmp
mov
add
cmp
push
jmp
rcl
dec
mov
icebp
jno
loop
pop
loopne
xor
jmp
pop
push
sahf
mul
sbb
sbb
pop
test
inc
icebp
add
(bad)
adc
or
add
cld
and
sub
inc
movs
mov
push
push
inc
add
loop
inc
add
xor
sbb
imul
inc
gs
inc
sbb
in
push
(bad)
sti
or
sbb
and
in
jg
lock
jmp
pop
push
mov
push
scas
out
nop
inc
sbb
test
ret
push
into
iret
int3
push
into
iret
int3
mov
add
add
dec
push
outs
mov
fwait
inc
push
mov
test
data16
or
mov
cld
rcr
mov
push
push
call
sbb
sub
add
add
add
dec
pop
lods
inc
adc
out
sti
inc
mov
xchg
push
sub
push
mov
mov
mov
loopne
xchg
dec
mov
mov
or
pop
add
cmp
push
xchg
icebp
mov
or
fidiv
imul
out
adc
inc
imul
out
xor
mov
call
and
mov
mov
loop
sub
or
cld
mov
nop
pop
pop
add
or
ins
adc
sub
mov
je
sub
jne
in
mov
clc
lods
jnp
test
or
pop
std
cli
popa
and
sbb
je
ins
inc
in
inc
dec
push
xchg
ror
in
bound
xchg
push
ds
xchg
ret
push
call
cld
push
cdq
sub
out
sahf
add
fadd
mov
add
dec
dec
call
push
inc
or
add
xor
les
jmp
mov
sub
sbb
dec
mov
xor
sbb
fsub
loop
adc
add
add
sar
push
aas
cdq
jge
test
add
clc
jne
ins
sbb
and
cld
je
dec
lock
inc
fwait
inc
popa
add
or
jp
cmp
sbb
mov
call
mov
dec
shr
jle
add
add
cmp
mov
sub
dec
ror
mov
ds
and
fstp
scas
dec
les
adc
adc
(bad)
call
jmp
push
cld
inc
mul
dec
in
aad
loope
fcom
in
mov
pop
icebp
sbb
adc
nop
fstp
or
cld
in
out
in
add
jns
sbb
push
jne
mov
in
ret
js
mov
ror
sbb
shr
jmp
xchg
(bad)
clc
xchg
push
sahf
js
test
cwde
adc
in
stos
add
cld
jg
cli
in
fisttp
cld
ja
cli
in
jmp
cld
outs
mov
sbb
addr16
stc
in
jmp
cld
pop
fdivr
in
frstpm(287
dec
jns
sti
in
mov
push
jns
cli
in
leave
in
jns
cli
in
ins
in
and
cli
in
sub
in
and
stc
in
sbb
cmp
add
add
in
shl
jns
stc
in
int
or
stc
in
shl
jns
stc
cwde
(bad)
in
ins
inc
std
push
imul
stc
ins
inc
sub
stc
ins
dec
cmp
stc
ins
dec
dec
out
imul
stc
ins
push
cmp
stc
ins
push
ins
fild
adc
ins
pop
std
xlat
imul
cli
ins
pop
or
add
sar
ins
pusha
std
(bad)
imul
stc
ins
lods
mov
ins
push
ret
ins
int
imul
jmp
mov
jmp
ins
cdq
imul
jmp
std
nop
imul
jmp
or
add
inc
bound
lock
(bad)
in
fwait
add
jmp
jmp
inc
jmp
mov
jge
add
(bad)
lods
mov
sbb
add
call
mov
lock
jge
in
sub
pop
js
(bad)
in
cmp
cmp
(bad)
lods
pushf
sbb
daa
jp
jmp
add
xor
int
in
sub
push
inc
add
add
mov
sbb
or
add
sub
pop
(bad)
retf
mov
cwde
hlt
addr16
mov
push
push
call
lods
mov
push
xor
add
cld
dec
mov
push
pop
add
dec
call
sub
aas
ret
push
cld
inc
mov
add
add
add
je
mov
jle
push
pop
xor
dec
fwait
or
pop
add
jbe
(bad)
fmul
ins
push
jmp
ins
pop
mov
xchg
ja
dec
fist
pop
add
push
push
call
pushf
mov
push
add
push
fwait
jge
add
add
jmp
dec
mov
and
imul
ins
and
xor
dec
call
dec
pop
and
dec
out
mov
or
scas
push
dec
cmp
or
sti
jmp
push
pop
fwait
xor
push
dec
push
(bad)
in
jbe
add
add
cwde
(bad)
jmp
mov
push
icebp
data16
sbb
ficomp
sub
jmp
mul
sti
fldln2
xchg
push
pop
or
lahf
retf
adc
cmp
je
mov
(bad)
jno
pop
mov
mov
jmp
inc
pop
add
dec
mov
push
cmp
dec
cmp
adc
add
add
jle
data16
adc
ja
movs
pop
add
aas
ret
sahf
mov
sahf
adc
pop
add
shl
in
(bad)
addr16
mov
sub
dec
stos
(bad)
in
pop
push
(bad)
ds
sbb
enter
fdivr
push
lods
cwde
jge
call
or
add
add
mov
push
jb
jmp
mov
or
sub
dec
mov
idiv
xor
add
gs
call
jmp
fidivr
adc
idiv
push
bound
sti
js
jmp
mov
xchg
test
and
hlt
sbb
push
sub
inc
enter
pop
cmc
push
cld
test
inc
in
dec
xor
daa
xchg
stc
(bad)
mov
in
push
push
mov
in
cmp
inc
aad
in
push
xchg
sbb
or
and
pop
test
xor
cdq
test
pop
test
push
fnstsw
jmp
cdq
clc
push
xchg
pushf
iret
test
cmp
add
add
sbb
std
test
add
or
inc
sub
sbb
test
rcr
push
mov
adc
sbb
sbb
in
in
add
mov
loope
pop
cs
movs
and
jbe
inc
inc
adc
add
sbb
dec
xchg
lock
add
mov
mov
jecxz
rol
sti
or
add
pop
push
inc
or
fst
cdq
ror
test
jp
sbb
push
aad
sar
in
imul
outs
add
test
je
add
(bad)
jne
add
add
add
mov
(bad)
jecxz
cwde
jge
call
dec
(bad)
jmp
(bad)
imul
test
push
sbb
inc
jno
aas
sbb
xchg
pop
push
ret
pop
mov
in
jno
mov
or
add
es
lock
push
enter
(bad)
dec
lea
xchg
dec
call
add
add
sbb
mov
clc
ud0
cdq
in
add
stc
sbb
fsub
push
add
and
jmp
stc
in
lods
or
(bad)
clc
outs
inc
pop
dec
dec
cld
(bad)
push
sti
mov
(bad)
or
push
cs
in
jne
data16
shl
call
mov
add
add
jb
jne
jg
sbb
clc
or
call
jg
or
xchg
loop
bound
fcomp
xchg
jo
dec
fmul
cmps
outs
pop
(bad)
pop
add
dec
call
jns
push
inc
stc
sbb
cwde
jnp
(bad)
clc
cmp
inc
in
movs
jne
add
add
add
jmp
pop
sar
dec
imul
xor
sar
ret
push
jl
mov
les
gs
mov
jge
inc
test
dec
sbb
leave
retf
mov
xchg
dec
mov
push
nop
add
les
push
(bad)
jle
dec
push
or
lods
cld
(bad)
cmp
xchg
adc
add
test
(bad)
cmp
dec
in
jecxz
adc
push
push
call
bound
shr
cwde
jge
and
cmc
mov
call
hlt
ud0
sti
xor
movs
fcomp
(bad)
inc
add
cmc
dec
lea
mov
add
add
cmp
retf
push
cmp
mov
mov
jecxz
push
sbb
rcl
dec
(bad)
call
jmp
mov
imul
dec
jecxz
in
sti
shl
jl
pop
inc
sub
cdq
ror
push
in
sbb
add
add
add
arpl
jge
jle
sbb
dec
jmp
arpl
jne
jge
fdivr
and
pop
jle
test
dec
and
fstp
call
jbe
in
jbe
or
xchg
adc
fadd
call
xchg
inc
and
xchg
dec
push
retf
(bad)
fsub
add
add
mov
shr
and
jmp
data16
xchg
bound
pop
dec
rol
call
push
add
not
icebp
ud0
mov
data16
shr
fcomp
adc
je
or
in
test
jne
ins
clc
mov
dec
mov
pop
mov
xlat
inc
pop
into
leave
fbstp
pusha
pushaw
ins
add
ret
enter
icebp
test
clc
sahf
icebp
jnp
add
or
mov
xchg
cmc
fist
stos
movs
jp
repnz
xor
neg
mov
mov
mov
adc
inc
mov
jb
in
jne
cmp
outs
push
cmc
jge
inc
in
data16
je
cmp
jg
hlt
mov
sar
add
pop
addr16
scas
lock
sahf
imul
mov
jns
pop
loope
fstp
in
lods
into
sub
inc
sldt
add
push
inc
xor
ins
push
in
xor
fiadd
mov
push
dec
cs
ret
sar
aam
or
movs
ror
lods
mov
xlat
or
cmp
xor
jmp
add
xor
int3
(bad)
out
add
retf
mov
ins
nop
jne
add
sti
repz
and
enter
xchg
inc
adc
loope
pop
or
div
jns
dec
or
mov
sbb
add
clc
push
pop
sar
dec
adc
sbb
xchg
inc
lods
add
popf
push
dec
adc
push
mov
mov
std
ret
push
xchg
inc
pop
push
aas
cld
out
out
mov
xchg
in
ds
cmp
imul
sbb
call
sub
push
and
pushf
fadd
mov
sbb
adc
(bad)
dec
push
stos
(bad)
sti
cmp
sbb
jecxz
in
mov
ror
repz
mov
add
add
neg
mov
mov
cwde
(bad)
cmc
out
adc
addr16
push
mov
call
adc
aaa
dec
idiv
sub
clc
(bad)
call
outs
in
pushf
shl
fdivr
inc
outs
sti
pop
adc
popa
and
leave
mov
jne
add
add
and
jmp
(bad)
and
inc
push
iret
test
xor
push
xchg
xor
cwde
jge
fcomp
mov
ins
xor
pop
movs
add
aad
xchg
jb
imul
pop
xchg
and
xchg
jne
jmp
sbb
inc
scas
in
call
add
add
test
(bad)
(bad)
cmp
lea
(bad)
cdq
repz
adc
sti
(bad)
cmps
outs
in
jg
jo
mov
out
das
in
mov
sbb
enter
in
in
dec
dec
loop
in
addr16
arpl
push
imul
pop
sbb
lods
add
sbb
jecxz
movs
mov
mov
cwde
(bad)
mov
popf
mov
sub
ret
mov
dec
call
sub
push
loopne
mov
test
sbb
sahf
movs
adc
jmp
push
call
xchg
mov
test
push
mov
popa
lock
and
mov
xchg
xchg
inc
inc
enter
adc
lea
dec
call
sbb
les
addr16
les
(bad)
and
dec
cmc
sub
pop
or
push
mov
or
call
mov
push
sub
xor
mov
push
and
jmp
ss
xchg
jnp
(bad)
cmc
retf
stc
push
dec
lea
dec
(bad)
fcomp
jmp
pop
call
push
push
xor
jge
jle
xor
add
addr16
repnz
push
out
jle
xor
add
xchg
clc
push
mov
or
lock
add
in
(bad)
jb
in
outs
adc
add
add
je
jle
sub
push
and
jg
shl
in
pop
or
ret
jne
jb
dec
sbb
into
sti
pop
je
in
mov
adc
data16
add
movs
pop
loopne
aad
add
jge
add
in
xchg
imul
jl
push
push
aam
(bad)
fadd
jae
movs
je
in
mov
in
cmp
jecxz
imul
in
call
jb
jbe
retf
div
pop
mov
cmp
or
sbb
adc
jae
call
or
in
bound
in
sti
dec
cmp
bound
dec
call
pop
jnp
mov
dec
leave
mov
nop
in
pop
xor
push
push
ds
jmp
outs
loopne
push
dec
not
push
adc
jae
push
inc
aad
push
jmp
or
(bad)
adc
push
xchg
dec
push
out
je
pop
ins
clc
adc
fsubr
sti
cmp
cmp
(bad)
call
jno
mov
clc
pop
cmp
adc
push
retf
es
dec
call
xchg
dec
jnp
mov
outs
out
xor
and
inc
ds
xchg
mov
int3
xchg
mov
int3
jnp
push
and
out
mov
and
outs
push
and
mov
not
ins
retf
mov
adc
movs
ins
repz
outs
fisttp
test
fisttp
mov
adc
cld
push
rcl
push
retf
or
mul
repz
js
add
add
add
cmp
lock
cdq
cdq
adc
sub
inc
or
sub
scas
mov
aaa
or
cmp
fsub
cmp
mov
push
mov
push
mov
mov
in
push
bound
jne
add
mov
push
or
push
push
mov
add
add
add
outs
out
pop
movntps
call
out
movs
push
lds
dec
and
fisub
fcmovnb
nop
dec
and
sbb
mov
imul
push
fwait
stc
fidiv
mov
sbb
push
jb
ret
cs
inc
mov
(bad)
out
adc
add
add
pop
data16
shl
adc
in
push
mov
data16
mov
adc
xchg
push
retf
pop
mov
(bad)
push
addr16
jmp
cld
les
in
sbb
cs
hlt
loope
arpl
in
in
sbb
jge
add
add
sbb
out
inc
pop
in
xchg
leave
call
test
stos
imul
in
inc
nop
dec
out
fld
imul
jge
loopne
cmp
jp
mov
inc
xor
shl
nop
dec
out
push
inc
add
gs
data16
repz
push
clc
test
dec
and
add
add
call
pop
add
mov
stos
rol
xchg
dec
frstor
sbb
fcmovb
outs
pop
inc
mov
retf
fmul
data16
in
bound
fcom
jo
nop
jmp
repz
repz
push
or
mov
dec
call
push
inc
adc
imul
add
repz
cmp
jmp
ds
ficomp
mov
jecxz
call
push
in
in
mov
nop
in
xchg
dec
adc
into
in
add
lock
in
pop
fwait
ret
inc
adc
push
ret
push
mov
xchg
bound
fcom
jg
inc
or
imul
mov
sbb
mov
sbb
pushf
addr16
adc
or
ror
mov
jle
push
into
rol
xor
mul
sub
std
adc
fs
das
jmp
nop
jge
add
push
sub
cdq
jge
jge
sbb
loop
frstor
mov
push
lock
(bad)
lahf
add
jge
add
test
inc
popf
in
xchg
xchg
ret
aad
pop
or
icebp
push
or
lock
pop
int
sbb
test
int
xchg
(bad)
call
or
cmp
push
xchg
dec
call
cmps
inc
pop
(bad)
sar
pop
add
sub
cmp
adc
jmp
pop
or
or
pop
push
jecxz
pop
aas
pop
or
or
adc
pop
jecxz
push
inc
jecxz
movs
jb
add
add
pop
jge
jecxz
imul
push
outs
and
inc
sar
push
add
sub
ins
pop
out
sub
xor
inc
pop
pushf
ds
dec
nop
add
xor
push
cld
scas
daa
sbb
retf
rcl
pop
stos
jo
in
jo
aam
pop
jae
push
mov
ret
sar
xor
std
xlat
adc
push
data16
int
push
push
int
xor
jl
adc
xlat
adc
inc
lock
sub
(bad)
lock
ja
clc
loop
push
or
lock
lods
cwde
jge
(bad)
adc
xor
xor
loopne
enter
jecxz
test
fadd
mov
jb
lahf
push
sbb
ins
int
fcmovnu
jge
sbb
ret
test
jne
jne
imul
(bad)
push
(bad)
lock
ss
in
inc
or
cmps
test
call
fadd
dec
out
push
pop
data16
lock
inc
add
add
in
xchg
pop
data16
add
sbb
inc
nop
dec
out
xor
dec
pop
sbb
push
mov
(bad)
call
xor
xchg
pop
in
loopne
pop
add
and
test
lock
mov
push
mov
dec
mov
pop
cwde
(bad)
stc
add
in
sbb
sbb
pusha
in
nop
(bad)
cld
nop
sbb
movs
xchg
pop
adc
nop
inc
mov
movs
or
out
cmp
ins
or
retf
movs
addr16
or
jecxz
inc
imul
jmp
or
pxor
test
xchg
mov
add
add
lea
or
sbb
and
pop
lea
inc
(bad)
inc
cwde
les
mov
call
shl
aad
xchg
dec
or
inc
jo
dec
xchg
add
aam
(bad)
stos
mov
fwait
mov
and
push
in
xchg
shl
aaa
loopne
fcomp
rcr
sbb
arpl
add
pop
sbb
xchg
adc
mov
inc
push
cmp
daa
sbb
and
cmps
adc
test
es
pop
in
movs
sbb
jns
pusha
pop
js
out
dec
fldenv
add
mov
add
add
add
daa
cmps
push
adc
pop
mov
push
add
out
loope
pop
adc
sub
mov
in
into
jmp
inc
mov
sbb
gs
pop
(bad)
pop
mov
mov
mov
inc
adc
jns
adc
mov
mov
sbb
sbb
add
push
add
jbe
loope
pop
adc
pop
shr
ja
adc
pop
or
call
cmc
inc
hlt
sub
sbb
adc
dec
add
sub
mov
fwait
push
hlt
adc
in
mov
jle
pushw
xor
jmp
add
nop
dec
mov
neg
add
dec
adc
popf
jns
jmp
dec
fcomp
inc
or
dec
clc
xor
and
jecxz
mov
dec
add
sub
mov
(bad)
movs
dec
and
in
adc
xor
push
inc
sbb
adc
pop
jbe
stc
sti
leave
push
sbb
jmp
sub
push
and
mov
pop
mov
mov
jmp
arpl
(bad)
and
test
ret
push
sbb
pop
in
arpl
sbb
push
or
jge
jne
push
hlt
add
mov
arpl
loopne
mov
push
sahf
mov
ror
sbb
cs
add
in
cmp
push
enter
(bad)
js
loope
cmp
mov
pop
jmp
dec
sbb
adc
cmp
cmp
push
out
fwait
je
and
outs
sbb
movs
loope
cmp
mov
push
inc
push
push
call
pop
je
push
sbb
inc
lock
inc
nop
ror
cmp
fcom
cdq
clc
stc
mov
add
add
and
ins
ins
dec
adc
mov
rcr
xchg
shl
cmp
jb
in
jecxz
out
adc
jecxz
jmp
pop
hlt
inc
dec
inc
call
dec
pop
add
mov
mov
cwde
pusha
push
inc
sub
cs
(bad)
or
cwde
in
jne
dec
push
ret
mov
cmp
data16
in
bound
in
jg
inc
mov
jb
push
lds
js
push
add
adc
loopne
add
add
or
jmp
push
loopne
add
xor
cmc
add
add
ins
sbb
mov
fadd
in
fiadd
fiadd
das
fcmovnb
loop
push
jnp
mov
mov
(bad)
ja
or
data16
pop
test
ins
dec
stc
ret
push
and
xor
inc
into
inc
sti
inc
pop
aas
in
call
sbb
scas
or
lods
test
fneni(8087
cmps
in
fist
mov
pop
loope
sbb
icebp
or
call
mov
push
(bad)
jmp
fmul
test
jo
jo
pop
inc
sbb
ret
push
cmp
mov
(bad)
out
sub
les
xchg
jo
mov
cmp
dec
push
out
loope
push
pop
dec
lea
gs
lea
xchg
push
jmp
mov
xor
pop
add
fisub
sti
call
ds
mov
dec
push
pushf
jne
dec
mov
in
pop
ficom
inc
cmc
jns
jbe
add
(bad)
call
mov
leave
mov
rcl
xchg
or
and
(bad)
push
push
int
add
adc
add
ror
call
push
dec
adc
cmps
mov
push
(bad)
call
adc
fcom
nop
iret
mov
add
adc
retf
fistp
jb
pop
std
mov
inc
inc
fmul
cmps
ins
xor
out
call
adc
push
mov
jg
jo
cmp
call
cmps
call
scas
addr16
add
dec
push
inc
adc
lea
vpconflictd
jg
add
retf
adc
sahf
mov
mov
xchg
pop
mov
pop
sub
out
shr
jb
mov
stc
bound
sbb
pop
or
lds
data16
push
cld
fucomi
test
sbb
ret
test
push
xchg
inc
cmp
sub
xchg
lock
adc
cmps
push
retf
leave
mov
jne
or
dec
mov
mov
add
add
data16
add
jmp
add
adc
or
aas
test
dec
(bad)
nop
mov
pop
(bad)
call
aaa
in
cdq
fst
xor
sbb
jle
ss
or
push
scas
bound
fst
cdq
clc
fdiv
sbb
mov
(bad)
fcomp
in
cmc
ss
add
add
sbb
cmc
aaa
in
call
in
popa
jmp
retf
cwde
movs
in
mov
mov
jmp
in
popf
ins
cmps
(bad)
loop
lock
mov
jmp
shl
jne
cmp
adc
mov
(bad)
call
cmp
jmp
cmp
and
(bad)
(bad)
call
cmp
adc
sbb
repz
or
pop
in
sahf
imul
test
in
or
data16
ud0
test
pop
inc
cmp
sbb
ds
pop
cmp
push
cmp
add
lock
cmp
sbb
dec
mov
ins
inc
pop
out
in
jge
sbb
xchg
in
jecxz
xchg
test
idiv
ins
mov
les
mov
push
cmp
cld
leave
inc
cmp
sbb
inc
ret
into
cmp
add
out
sbb
jmp
fdivr
pop
gs
push
lock
push
in
shl
sub
mov
mov
fsub
cwde
push
jp
ins
fadd
cmp
sub
mov
in
mov
pop
mov
sbb
dec
(bad)
js
jecxz
movs
pop
mov
inc
cmp
in
sar
iret
int3
mov
iret
int3
xchg
ds
int3
fidivr
inc
mov
dec
or
mov
add
inc
nop
inc
rol
add
cmc
adc
adc
aad
xchg
daa
or
pop
es
iret
int3
xor
int3
adc
int3
pop
cs
mov
push
or
pop
add
adc
dec
lods
sbb
inc
lods
ficom
jge
or
xor
sbb
lods
jp
jb
rcr
add
retf
jb
pop
xor
aas
ret
mov
iret
int3
adc
iret
int3
adc
iret
int3
sahf
das
inc
mov
in
movs
sti
push
add
mov
add
pop
sbb
add
xor
or
mov
sbb
add
sbb
inc
add
add
sub
les
or
sar
movs
adc
shl
inc
sub
jmp
xchg
sbb
adc
inc
rol
popa
cs
bound
dec
lock
or
add
or
clc
or
mov
imul
call
mov
mov
fmul
inc
sub
inc
fmul
loopne
sbb
in
inc
pop
dec
neg
and
in
es
mov
or
aam
sbb
mov
sti
mov
xchg
sbb
add
mov
jg
sar
inc
adc
pop
xor
gs
and
add
add
push
inc
data16
arpl
adc
or
sahf
xor
ret
test
lock
call
or
xor
fiadd
push
cmp
dec
cmc
or
xor
push
imul
push
jne
push
les
and
add
add
test
iret
xor
or
in
xor
mov
push
or
pushf
in
(bad)
xchg
adc
into
mov
mov
enter
aad
push
add
or
add
cwde
les
push
push
or
adc
int3
push
inc
iret
int3
xor
int3
adc
int3
mov
push
and
jae
sbb
push
xlat
and
into
xchg
imul
cs
add
cmp
add
sbb
mov
enter
mov
add
cmp
mov
(bad)
mov
pop
push
mov
push
std
rol
add
add
adc
mov
loop
and
lahf
xchg
inc
xor
mov
push
push
loopne
xchg
push
pop
aad
fmul
mov
jbe
fs
pop
aad
fdiv
mov
(bad)
mov
or
xchg
cmp
cld
jecxz
in
push
mov
in
(bad)
dec
in
push
xor
add
dec
push
mov
pop
ja
push
or
test
mov
adc
rol
cmp
xor
and
enter
or
setns
jmp
enter
cmps
push
add
xor
test
test
push
dec
cs
jmp
pop
and
cmps
push
add
test
add
add
(bad)
add
xor
add
adc
inc
xchg
or
(bad)
mov
xor
(bad)
cdq
test
and
dec
mov
ret
call
sbb
mov
test
sub
mov
mov
in
in
es
ja
test
cmp
push
cmp
pop
ins
inc
adc
popa
(bad)
call
es
retf
mov
stc
xchg
bound
dec
pop
pop
cmp
test
xchg
(bad)
jmp
inc
sbb
adc
push
jg
mov
adc
add
int3
test
mov
neg
loop
mov
adc
jnp
mov
jecxz
xchg
mov
push
int
(bad)
call
xchg
ror
in
int3
mov
jmp
into
inc
addr16
sub
dec
test
sbb
enter
mov
ins
inc
in
jno
inc
aas
dec
test
shl
jne
aas
data16
(bad)
test
sbb
xchg
push
inc
pop
fadd
jmp
out
mov
add
add
dec
xor
jp
jl
add
add
cwde
stc
xchg
test
pop
add
(bad)
imul
push
sub
call
sub
push
mov
adc
or
in
cmps
inc
pop
sub
pop
push
dec
in
sahf
cs
in
or
sub
sub
xchg
lock
adc
add
add
mov
into
jecxz
aad
ds
int3
call
sub
(bad)
sbb
nop
pop
add
push
loopne
sub
test
mov
push
adc
lods
fild
mov
rcl
gs
(bad)
fmul
jecxz
push
addr16
pop
add
aad
mov
ret
dec
xchg
add
jecxz
adc
test
lock
ds
mov
shl
test
pop
(bad)
adc
(bad)
dec
xor
sbb
in
cmp
jmp
dec
adc
jmp
mov
rcl
fadd
test
add
sbb
mov
addr16
jle
sub
sbb
out
and
jns
clc
push
push
mov
push
push
repz
inc
push
lock
sbb
dec
fadd
jg
add
xor
jecxz
in
cmp
jl
sbb
aad
mov
add
jle
add
js
xor
inc
addr16
rol
xchg
xchg
xchg
jg
cmp
mov
cmp
sbb
xchg
sub
sub
pop
add
icebp
es
jmp
jl
add
mov
mov
xchg
lar
in
fsubr
loop
adc
aas
push
hlt
movs
test
add
enter
test
rol
or
sub
sbb
cwde
xor
jmp
jle
inc
leave
aam
dec
imul
jecxz
es
add
test
add
cmp
dec
test
sub
(bad)
sub
push
add
icebp
cmps
or
or
add
or
rcl
jecxz
int3
sbb
push
in
pushf
(bad)
cwde
push
add
mov
bound
fadd
in
jge
add
inc
jecxz
adc
jns
add
xor
add
jge
add
out
lea
sub
data16
pop
add
add
dec
cld
jecxz
xchg
inc
cmp
mov
adc
sub
in
push
adc
jne
dec
push
int3
ret
push
bound
in
jno
int3
mov
mov
ffree
or
jge
inc
adc
fs
add
add
cmc
cmp
adc
mov
sub
cmp
icebp
mov
sti
jne
test
dec
sub
adc
sahf
ds
push
je
(bad)
in
push
mov
test
push
lock
adc
hlt
sbb
inc
repz
mov
sbb
jne
cmp
call
add
in
push
mov
call
sbb
mov
sbb
call
sbb
movs
pmulhw
bound
fimul
in
xchg
push
pop
xchg
cwde
loopne
inc
loope
outs
fadd
pop
and
sbb
or
push
push
xchg
cwde
loopne
inc
loope
xlat
xchg
and
or
std
in
fimul
pmulhw
fadd
in
push
xor
add
jmp
sbb
std
pushf
and
adc
sar
push
or
push
mov
cdq
add
js
inc
xchg
add
add
in
aas
inc
in
iret
jl
inc
xor
in
pop
sbb
call
push
inc
jne
es
nop
inc
or
ja
sbb
fxch
and
sub
push
shl
ret
and
leave
and
jmp
add
add
sbb
cmc
jecxz
and
mov
mov
pop
cmp
call
sub
or
int
inc
add
mov
cmp
leave
fs
add
js
add
sub
mov
cmp
cdq
les
add
jecxz
mov
sub
pusha
shr
and
ja
add
add
jne
xchg
sub
mov
aas
in
inc
test
xchg
mov
sbb
mov
es
sub
add
mov
mov
push
add
mul
jmp
add
push
inc
adc
imul
popf
jns
sbb
dec
jg
push
xor
movs
add
add
movs
adc
ins
int
es
sbb
mov
sbb
lods
ds
xchg
test
sbb
mov
stos
sbb
cmp
sbb
out
adc
pop
mov
push
xchg
in
std
shl
add
rcr
add
add
push
dec
push
call
sub
jecxz
data16
or
test
cmp
sbb
in
add
inc
scas
add
jg
jge
sub
dec
(bad)
pop
cmp
sbb
cs
cmp
int
shl
adc
out
pop
pminub
in
ret
push
inc
ds
add
adc
pop
outs
pushf
inc
bound
in
imul
aaa
add
cmp
xchg
and
inc
in
mov
jecxz
add
add
or
jmp
xchg
sub
call
out
push
fucomp
mov
add
add
add
ds
xchg
or
push
(bad)
jl
ss
sub
or
xchg
nop
fdivrp
shl
push
(bad)
addr16
and
aas
sub
add
cmp
jmp
ss
call
sbb
sbb
vxorps
std
popa
or
or
xchg
sldt
add
cdq
mov
loopne
rcl
enter
mov
lock
fwait
jge
loopne
cmp
push
push
mov
es
add
xchg
push
cs
mov
lea
gs
mov
pop
nop
dec
jne
adc
int3
xchg
fsub
pop
add
fwait
or
add
jne
jnp
adc
add
add
push
adc
fs
test
or
ds
in
nop
iret
push
dec
and
call
test
clc
idiv
call
aad
jne
adc
jg
dec
dec
inc
in
dec
inc
data16
add
add
cwde
sub
pop
test
dec
aam
test
fadd
push
add
add
sbb
add
in
std
sbb
add
inc
in
sbb
xchg
or
test
pop
and
sbb
ret
mov
add
push
out
pop
push
cmp
mov
mov
addr16
push
add
add
sbb
in
or
push
dec
(bad)
or
inc
pop
mov
inc
sub
jl
sbb
clc
inc
and
leave
pop
sub
stc
adc
cwde
cdq
aaa
jg
jg
test
add
add
fadd
inc
call
stc
adc
enter
or
or
call
dec
pop
mov
jg
call
push
add
adc
(bad)
add
inc
inc
sub
ror
push
stc
ret
je
or
add
add
add
lds
cwde
inc
push
adc
pop
add
push
mov
inc
jno
sbb
or
push
into
outs
jno
adc
sbb
mov
data16
psubsb
jle
jmp
or
push
mov
in
cmc
ror
dec
mov
push
cld
clc
adc
pop
push
jecxz
in
aas
or
pop
data16
add
add
ins
jmp
dec
push
jnp
fadd
stos
sbb
jmp
call
adc
jl
jmp
mov
xchg
adc
adc
shl
call
out
leave
repz
xchg
addr16
jb
sbb
jge
jb
out
clc
out
neg
and
mov
(bad)
lods
pop
jnp
in
inc
xlat
mov
add
add
dec
fsubr
inc
add
(bad)
pop
jmp
cli
pop
pop
jae
cmp
imul
sub
jecxz
mov
jo
cvtpi2ps
jecxz
es
adc
lds
nop
adc
callw
add
scas
mov
add
(bad)
movs
add
sbb
nop
jge
popa
in
inc
pop
out
dec
fmul
retf
mov
push
mov
test
push
inc
sub
lea
ror
lock
jmp
in
retf
ror
sub
lock
pop
jge
sbb
fs
or
add
add
mov
ss
es
jb
in
clc
jg
sbb
popf
lea
inc
out
jp
mov
add
rcr
xchg
adc
data16
inc
addr16
push
xchg
sub
or
icebp
adc
test
in
or
add
add
cwde
(bad)
cmc
xlat
inc
pop
push
or
push
outs
imul
ret
dec
ror
mov
xchg
dec
mov
or
dec
test
aad
adc
and
lds
(bad)
ins
adc
xchg
xchg
ret
cmp
lock
sub
inc
push
in
jecxz
(bad)
add
sbb
add
xlat
inc
pop
into
popa
ds
sahf
ret
or
pop
push
adc
jle
add
mov
inc
mov
mov
call
mov
into
cmp
into
aaa
push
dec
mov
add
add
or
or
int
dec
and
or
mov
out
dec
push
cs
aaa
adc
jno
jge
out
inc
movs
sbb
xor
hlt
clc
inc
inc
gs
push
adc
aaa
add
and
call
xchg
inc
mov
je
(bad)
jnp
je
(bad)
pop
and
jp
push
into
icebp
aaa
sub
mov
adc
pushf
lds
and
pop
add
test
mov
jge
add
test
cmp
lods
mov
fst
fs
sbb
movs
test
pop
(bad)
scas
mov
add
and
inc
xchg
out
mov
push
popa
mov
stos
add
sbb
inc
shl
jmp
pop
add
shl
pushf
lds
mov
sbb
add
(bad)
push
push
fstp
ds
scas
aas
pop
add
fmul
xchg
pusha
dec
enter
popf
or
in
ins
(bad)
idiv
push
out
call
push
movs
jecxz
fucom
in
jmp
enter
add
scas
mov
jl
mov
clc
(bad)
jecxz
jp
jp
sar
add
add
inc
int
push
inc
into
fadd
pop
sbb
mov
add
adc
inc
in
hlt
sbb
sahf
ja
clc
sbb
mov
jge
inc
and
mov
mov
sub
call
ins
xchg
lock
outs
in
in
sbb
in
jno
pop
outs
in
loop
push
mov
and
xchg
sbb
xchg
jg
jmp
jle
aaa
movsx
add
dec
jmp
sub
movs
lds
sbb
inc
jl
ret
mov
loop
add
jns
and
shr
add
call
add
add
popf
cmps
outs
in
adc
ror
mov
sti
mov
sbb
shr
pop
leave
adc
xchg
lock
mov
in
add
pop
gs
push
ins
in
movs
jge
add
imul
pop
sbb
jmp
dec
jle
push
push
in
call
into
jle
inc
push
test
fcom
pushf
rcl
into
imul
dec
fyl2x
xchg
dec
sbb
jmp
test
in
mov
or
(bad)
cwde
ins
loop
aad
fiadd
adc
shr
dec
jle
dec
rcl
arpl
lahf
in
cmp
ins
ds
add
adc
hlt
repz
jle
or
nop
pandn
adc
je
mov
adc
test
call
sbb
push
mov
gs
(bad)
call
ins
daa
push
bound
xchg
rcl
pusha
add
jg
dec
cmp
lock
aad
dec
adc
xor
add
jg
pop
aam
repz
mov
mul
jg
add
xor
retf
dec
jl
dec
test
mov
or
sbb
imul
call
push
adc
add
rol
add
adc
cdq
pop
jecxz
adc
aaa
sbb
xor
adc
or
push
lock
(bad)
add
add
adc
mov
fiadd
fist
icebp
ins
(bad)
enter
add
jne
jecxz
pop
outs
push
mov
cwde
and
push
mov
adc
in
push
add
ds
out
sti
add
nop
pop
imul
adc
adc
sbb
bound
dec
push
sub
pushw
xchg
icebp
in
jmp
outs
jno
(bad)
stc
sbb
pusha
sbb
xchg
cmp
adc
adc
sbb
cld
enter
mov
add
add
jmp
push
mov
add
fnstenv
aas
cwde
jp
or
sub
xor
add
(bad)
movs
cs
lock
cli
rol
xchg
test
add
push
mov
fstp
enter
test
xor
(bad)
adc
pop
jp
adc
shl
adc
adc
lds
cmc
rcr
and
sub
test
push
call
sbb
icebp
jp
sahf
(bad)
test
jmp
cs
xchg
imul
pop
clc
aaa
inc
es
sbb
das
xchg
xchg
nop
adc
add
stos
xchg
adc
adc
lods
mov
add
add
neg
aam
jne
mov
sbb
cdq
les
push
in
shl
std
shl
jne
aad
jne
push
in
or
jecxz
push
xchg
adc
fadd
movs
jne
jo
mov
(bad)
jecxz
cmp
mov
nop
inc
pop
popf
push
or
js
call
cld
sub
in
es
in
sbb
loop
xchg
cs
lock
jecxz
movs
cs
lock
mov
leave
sahf
inc
adc
aam
fmul
imul
push
out
out
out
out
adc
add
outs
sbb
sahf
mov
adc
cwde
jmp
xchg
adc
add
add
xlat
in
sbb
pop
push
je
in
or
mov
sbb
dec
shl
xchg
pop
and
xchg
jl
dec
cmps
in
cmp
jns
inc
jne
adc
repz
add
adc
sbb
adc
aas
or
sar
in
pop
pop
push
cmp
mov
adc
cmp
sbb
stc
mov
call
sub
sbb
sub
clc
psadbw
mov
sub
mov
fwait
dec
fstp
pop
pop
shr
mov
aaa
mov
inc
push
push
mov
shl
jne
out
jge
stos
test
add
add
jg
in
popf
mov
test
cwde
jge
stos
or
add
jg
inc
out
mov
adc
jmp
xchg
(bad)
jmp
pop
jne
add
add
scas
jge
adc
ret
dec
sub
lock
out
and
mov
ret
jecxz
fdivr
add
call
pop
in
in
jecxz
in
adc
pop
call
add
ins
xchg
add
add
pop
icebp
mov
(bad)
rcr
rol
leave
(bad)
pop
adc
test
add
sub
(bad)
pop
in
pop
mov
outs
push
pop
cwde
and
movs
outs
bound
add
add
add
jmp
es
(bad)
loope
and
xlat
mov
in
in
lea
pop
fadd
fdivr
add
ror
retf
lea
(bad)
jmp
aas
jmp
(bad)
or
gs
dec
mov
movs
mov
sahf
in
adc
pushf
mov
jne
ret
call
stos
jle
add
icebp
mov
lea
push
jg
mov
ret
adc
or
jne
pop
data16
xlat
jmp
shl
sti
xchg
outs
inc
push
fadd
in
jle
add
jb
push
sub
xor
in
sbb
jmp
sti
or
mov
mov
push
in
loop
sbb
jl
sbb
sub
nop
dec
out
call
push
in
gs
pop
push
push
in
out
call
xchg
ror
cwde
dec
push
cmps
fadd
test
add
test
fwait
inc
sub
add
add
jle
add
sbb
mov
nop
in
pop
rcr
retf
jl
call
mov
fcmovnb
pop
adc
jg
test
and
pop
shl
sub
or
jnp
call
dec
lods
pop
jne
rol
add
add
into
lods
dec
push
xchg
push
aas
jae
adc
into
sbb
(bad)
xchg
lock
adc
lea
ins
bound
and
mov
inc
mov
dec
or
scas
sar
aam
jl
xchg
push
clc
loop
jecxz
push
mov
icebp
and
add
and
std
std
pop
aam
sbb
add
fsub
sbb
rcl
test
je
(bad)
test
or
xlat
or
pop
lock
push
out
push
int
mul
mov
pop
cmps
mov
jmp
inc
lock
push
inc
jecxz
and
adc
dec
cdq
enter
pop
mov
es
mov
xlat
or
jbe
in
push
movs
jecxz
fisttp
in
jmp
enter
push
cmps
jno
(bad)
push
popf
and
es
enter
ror
nop
or
sbb
push
inc
in
inc
imul
add
xor
popf
or
(bad)
sti
mov
push
jmp
jecxz
adc
in
jmp
pop
lock
or
push
cmp
sub
outs
data16
cmp
mov
test
add
jmp
xor
xchg
inc
or
jno
std
in
add
add
pop
loope
inc
or
js
mov
sbb
in
sbb
xchg
rcr
fwait
pop
mov
rcr
bound
call
int3
mov
fadd
std
sbb
sahf
cmps
xchg
add
xchg
(bad)
push
xchg
inc
add
mov
bound
xor
sub
mov
pop
in
xchg
sub
push
push
lea
xor
mov
lea
pusha
sbb
push
mov
cmp
push
add
jecxz
cmc
sub
jmp
jmp
call
sub
(bad)
in
and
jne
add
add
add
dec
loop
adc
sub
jmp
retf
and
adc
adc
sahf
add
jecxz
imul
mov
pusha
nop
add
jle
inc
aad
jecxz
movs
and
xchg
add
inc
cdq
jg
pop
fcomp
add
jno
lods
mov
sub
es
ds
out
sbb
call
sbb
sub
(bad)
cld
mov
call
movs
cwde
add
sbb
jmp
pop
pop
jecxz
cmc
stos
and
adc
push
and
sub
pop
rol
push
xchg
add
add
mov
dec
ret
fdivr
inc
cdq
sbb
movs
call
in
sbb
add
leave
add
ret
inc
int3
leave
in
bound
and
test
dec
pop
int3
mov
inc
lea
and
jg
jge
add
jge
mov
std
fld
sbb
or
sbb
fld
je
pusha
in
jle
rcl
mov
in
mov
add
loope
repz
test
mov
sti
(bad)
loopne
in
sbb
data16
shl
jmp
pop
in
ins
jle
add
mov
imul
inc
cmc
in
cmps
rcl
call
cld
cmp
mov
or
sbb
sub
pushf
mov
dec
xor
cmc
xchg
xor
pop
in
mov
idiv
inc
cmc
cmps
xor
pop
in
fsubr
cli
jmp
fwait
or
call
add
mov
dec
fisttp
jmp
lea
in
fstp
movs
push
test
out
loope
mov
mov
jecxz
pop
push
std
pop
adc
sbb
and
pop
sar
lods
cmp
in
arpl
jmp
add
nop
dec
cmc
jns
add
add
mul
jnp
bound
sbb
bound
or
dec
(bad)
aad
jecxz
movs
ins
cmp
arpl
push
xchg
test
inc
test
xchg
das
test
jne
ins
sub
test
or
dec
pop
add
xchg
shl
add
xchg
push
imul
add
add
add
jno
nop
daa
test
call
scas
les
ins
mov
add
bound
xchg
push
aam
push
and
idiv
inc
popa
push
pushf
aam
jecxz
adc
sbb
sbb
mov
js
in
int
ror
rcr
add
enter
mov
call
or
add
add
xor
or
cmp
xchg
adc
daa
mov
add
pop
pop
in
jg
test
inc
adc
cli
test
add
mov
call
inc
arpl
das
nop
mov
lods
or
es
cwde
js
sub
daa
mov
add
call
push
jmp
add
add
ins
outs
pop
aad
dec
test
mov
rol
jo
sub
push
mov
loop
movs
call
idiv
mov
cmps
jecxz
out
jae
movs
mov
add
jg
inc
mov
jmp
push
ror
and
adc
call
xchg
inc
jae
mov
inc
push
push
scas
mov
add
and
inc
jg
push
inc
cmp
in
jg
jmp
idiv
bound
or
enter
or
movaps
pop
add
mov
dec
lea
push
mov
test
in
imul
add
inc
adc
mov
pop
in
jg
lea
inc
sub
pushf
add
in
jg
mov
test
add
jg
push
cdq
dec
jecxz
adc
mov
jno
nop
(bad)
out
outs
add
in
jle
add
(bad)
bound
sbb
add
add
add
movs
add
add
and
xchg
arpl
jmp
add
in
jle
and
cmp
hlt
pop
cmp
repz
stos
mov
leave
dec
add
or
mov
inc
js
in
pushf
xor
in
jge
lea
jg
add
and
xor
in
add
add
sti
stos
lock
pop
retf
mov
in
pop
call
xchg
cmp
in
cmp
in
jge
jae
out
pop
jne
xchg
inc
clc
jge
call
pop
in
test
in
jb
and
xchg
jg
test
add
test
in
out
fdivrp
bound
add
xchg
push
iret
xchg
in
int
in
popf
rcl
scas
xchg
push
es
xor
add
and
jle
mov
idiv
inc
or
in
xchg
mov
idiv
bound
add
xor
in
add
add
jbe
lea
and
loop
jecxz
adc
xchg
dec
mov
mov
out
adc
in
ja
test
popa
in
iret
xchg
and
adc
xor
add
add
mov
in
popf
mov
call
add
in
idiv
jb
or
add
add
lea
idiv
bound
xchg
sub
ja
push
push
or
push
push
and
call
test
mov
sbb
xchg
cmp
mov
fdiv
xchg
xor
jnp
cmp
xchg
adc
xchg
jp
jmp
add
jp
cmp
adc
add
adc
fwait
rcr
adc
movs
idiv
push
pop
pop
in
js
idiv
bound
lea
js
push
pop
in
jp
dec
vminpd
add
xchg
inc
clc
jp
add
loop
cli
lahf
pop
push
sbb
idiv
mov
loop
sbb
ja
call
xchg
cmp
jp
add
or
xchg
add
cmp
jns
(bad)
test
jb
add
idiv
bound
xchg
sub
js
push
mov
dec
cmp
push
pop
and
fidivr
movs
xlat
(bad)
jecxz
adc
sbb
pop
mov
xchg
cmp
in
out
xchg
pop
movs
sbb
sbb
idiv
loop
xchg
xor
jp
cmp
adc
mov
ret
gs
pusha
add
xchg
lea
js
jmp
aaa
pop
in
outs
jecxz
shl
sbb
add
and
hlt
pop
mov
add
call
lods
adc
push
in
outs
sbb
mov
jg
or
(bad)
push
loop
and
jmp
xor
in
outs
jge
lds
idiv
adc
sbb
xor
out
push
and
hlt
jmp
outs
push
lea
(bad)
jmp
inc
sar
xor
add
add
cli
std
push
and
pop
jge
add
push
and
push
push
mov
push
sub
add
in
outs
push
mov
fst
push
es
outs
in
sahf
add
and
sbb
clc
xor
movs
je
and
xor
shr
icebp
outs
push
mov
shl
pop
ret
adc
lds
or
sub
(bad)
rol
in
pop
xchg
adc
(bad)
ins
in
mov
or
in
imul
nop
in
sbb
jmp
in
cmp
addr16
add
movs
aad
in
adc
outs
in
icebp
ins
push
mov
aam
mov
add
add
add
add
fcomp
jmp
add
push
into
sub
call
ins
in
movs
xchg
add
outs
call
jae
jmp
fdiv
xor
inc
cmp
ret
push
imul
add
add
mov
mov
jmp
sub
call
mov
mov
outs
in
and
push
cwde
and
jnp
test
adc
in
ins
inc
pop
pop
mov
sti
push
cld
ins
in
es
ins
push
(bad)
jmp
push
or
ja
jne
bound
outs
cwde
and
add
add
ins
fadd
pushf
jg
add
inc
in
add
add
xchg
add
out
sti
pop
inc
outs
in
or
outs
fadd
dec
jg
add
(bad)
dec
push
jmp
les
je
mov
jmp
(bad)
jecxz
and
push
mov
add
add
push
cmp
in
jge
adc
neg
scas
pop
add
outs
data16
stc
sbb
mov
in
es
jns
lods
bound
mov
jle
call
in
lds
inc
push
jo
jmp
sbb
push
jle
inc
jns
dec
adc
add
add
outs
in
push
hlt
adc
inc
push
add
jbe
jmp
push
or
jne
popa
inc
outs
fadd
in
jge
add
in
jg
sbb
push
arpl
ret
loope
and
xchg
lahf
sti
jno
je
(bad)
xchg
mov
call
fdivr
xchg
mov
cwde
lock
dec
mov
lea
pop
add
je
out
inc
std
push
fiadd
sbb
je
ins
mov
dec
mov
jno
pop
imul
(bad)
fmul
in
lds
cwde
adc
jecxz
and
xor
inc
aad
push
in
xchg
in
fwait
sti
adc
add
add
jno
mov
imul
or
push
in
loop
sti
or
push
in
ret
call
sbb
nop
(bad)
cmp
in
push
cmovle
ins
pusha
and
adc
dec
lock
or
add
ret
add
jno
jae
or
jae
sbb
nop
dec
push
out
push
jo
or
fisttp
xchg
or
nop
push
popf
(bad)
dec
push
(bad)
jo
xlat
imul
ja
imul
jno
push
or
dec
retf
mov
add
inc
pop
push
loopne
mov
xchg
and
enter
sti
or
jmp
or
cvtps2pd
and
out
(bad)
jmp
mov
cmp
enter
lock
ficomp
mov
jle
mov
or
retf
or
inc
movs
out
leave
call
push
jmp
jo
jno
jge
lahf
inc
xchg
push
jg
jle
rol
fadd
test
add
outs
nop
add
test
add
outs
mov
jmp
add
xor
ins
cwde
or
in
add
push
in
(bad)
call
nop
jmp
call
pop
mov
dec
pushf
popf
or
xor
mov
jg
(bad)
push
addr16
add
sub
rcr
call
retf
jo
stos
add
push
inc
cld
sbb
jmp
stos
mov
sbb
arpl
inc
jnp
shr
sub
adc
xlat
fcmovb
mov
and
add
add
jg
test
shl
push
sahf
popa
push
push
pusha
lds
fldenv
ds
xor
jmp
or
push
mov
inc
or
ror
or
outs
les
xor
or
pop
les
inc
pop
std
psadbw
sbb
ins
test
inc
mov
jecxz
aad
mov
inc
popf
add
add
add
xchg
rcr
addr16
faddp
sbb
sbb
in
shr
mov
mov
inc
inc
push
jecxz
gs
or
add
inc
push
adc
sbb
sahf
repz
push
pop
pop
div
pop
or
adc
lods
lea
add
add
add
cwde
loope
scas
pop
or
nop
inc
popf
push
cli
div
mov
or
pusha
pop
xor
nop
push
push
les
sar
in
shl
sbb
pop
or
jmp
sub
(bad)
sbb
fild
addr16
into
enter
mov
test
sti
sbb
lock
or
jle
dec
sbb
daa
adc
dec
or
lar
addr16
outs
rcr
popf
mov
add
mov
jecxz
aad
ins
and
test
add
lock
cmps
imul
pop
xchg
or
fwait
or
add
xor
inc
pop
add
fidivr
add
sbb
adc
add
mov
nop
inc
sub
fwait
nop
inc
sbb
pop
cwde
leave
sbb
mov
lock
or
sbb
fdiv
in
aad
sbb
lds
sbb
es
loope
ret
xchg
or
cld
fcom
mov
lea
pop
inc
or
(bad)
in
loope
adc
mov
inc
jecxz
dec
sbb
sub
test
or
nop
dec
mov
ret
dec
sbb
pop
enter
int
arpl
test
lea
jge
jne
jns
or
(bad)
jecxz
pusha
mov
inc
popf
xchg
add
not
je
std
cmp
add
jge
es
jae
or
sbb
ins
clc
sbb
out
sbb
scas
cmps
fdivr
jmp
int3
addr16
clc
cmp
adc
cmps
in
bound
add
adc
inc
jns
add
sbb
xor
sti
add
sbb
xchg
clc
push
dec
jmp
movs
or
and
pop
add
add
add
cmp
add
mov
push
fldenv
push
fst
mov
pop
cmps
add
jno
(bad)
xchg
in
cmp
ud0
test
push
pusha
jg
sub
ret
sahf
jle
mov
add
adc
rcr
mov
add
add
(bad)
pop
xchg
add
cld
lea
adc
sti
xchg
fadd
in
jmp
cmp
rcl
imul
cwde
out
fs
add
push
add
test
sbb
aas
mov
push
pop
sbb
cwde
lea
push
mov
add
add
inc
cmp
push
sar
adc
mov
(bad)
fstp
retf
leave
paddusb
inc
inc
in
xlat
add
sbb
nop
dec
loope
or
inc
je
add
jge
pop
add
mov
out
push
retf
pushf
pop
ret
neg
sbb
pop
xor
add
outs
nop
dec
xchg
pop
or
lds
add
lods
loopne
add
mov
add
in
or
add
jle
add
adc
adc
sub
cmp
jb
out
retf
or
lahf
(bad)
loopne
inc
push
movd
jecxz
aad
sbb
test
push
push
mov
jmp
ins
or
add
or
lock
and
add
or
jns
sti
sar
or
cmps
pop
push
adc
(bad)
push
cmc
fsub
ins
(bad)
loopne
inc
and
or
jmp
mov
mov
jb
loopne
add
adc
or
dec
and
jge
stos
mov
add
imul
sahf
jno
ins
xor
lock
sbb
gs
outs
lock
hlt
ret
test
sbb
test
retf
fucomi
fstp
ins
mov
repz
in
je
jmp
jecxz
pop
add
ror
data16
retf
ret
sbb
sub
or
lahf
sti
in
jg
add
add
pop
(bad)
fs
xor
adc
dec
jne
je
add
add
cmp
jg
add
jge
add
mov
in
adc
and
in
outs
cmp
test
or
call
or
ret
sub
add
add
sti
push
cmp
jnp
pop
(bad)
outs
cmps
shl
loop
in
mov
in
push
xchg
cmp
movs
repnz
lds
push
add
adc
cmp
arpl
jo
out
xor
mov
or
sub
pop
in
scas
cmp
mov
lea
jne
cmc
pop
hlt
mov
cmp
or
(bad)
in
fbstp
cmc
ins
loopne
cmp
call
jo
clc
push
ins
movs
jecxz
aad
fmul
inc
ins
pop
imul
add
leave
out
sbb
stc
jecxz
add
test
call
lock
call
and
sub
add
jno
mov
in
(bad)
rcl
test
jne
sub
leave
adc
icebp
popf
lds
shr
loop
or
leave
adc
add
sbb
xor
cmp
push
outs
push
pop
push
xor
test
(bad)
call
test
add
jecxz
jmp
fild
add
add
dec
mov
jne
les
or
or
sbb
push
and
test
(bad)
in
(bad)
movs
xchg
inc
mov
ins
xchg
cld
adc
fdiv
push
jge
arpl
and
mov
and
mov
push
jmp
add
in
push
dec
add
out
lock
and
cmp
aad
cmp
xchg
mov
hlt
sbb
fidivr
lods
jo
pop
mov
pusha
add
mov
hlt
fdivrp
ret
and
pushf
dec
call
stos
xchg
bound
movs
push
sbb
out
inc
pop
sahf
shl
xor
repz
in
or
pop
or
push
mov
push
cld
outs
fwait
inc
frstor
clc
pop
enter
cdq
xor
test
xor
or
loopne
xchg
or
push
push
jb
push
push
leave
or
pop
mov
clc
test
jecxz
movs
inc
clc
add
gs
xchg
sbb
dec
or
loopne
xchg
or
push
out
jno
shl
add
gs
jne
mov
xor
in
mov
add
ins
or
loop
rol
adc
loopne
adc
mov
jecxz
dec
cmp
jg
xor
cwde
xchg
(bad)
fiadd
adc
sbb
shr
fist
ins
shr
fst
fild
test
shr
dec
push
xchg
dec
out
call
add
out
inc
popa
jl
pcmpgtw
sbb
pop
add
adc
bound
(bad)
aam
sbb
sbb
add
add
inc
sti
adc
in
neg
lea
add
int3
adc
xor
adc
les
adc
inc
mov
mov
mov
sbb
pop
mov
inc
lods
iret
dec
push
shl
jmp
dec
adc
ja
(bad)
les
push
xor
add
mov
inc
cli
add
pop
fild
and
(bad)
stc
(bad)
push
sbb
cwde
xchg
xchg
adc
inc
fwait
(bad)
call
pop
gs
adc
fwait
jmp
sti
in
aaa
lea
mov
fwait
in
les
sar
pop
or
retf
adc
mov
out
mov
in
xchg
lea
fld
add
add
movsx
rol
cs
mov
ror
xor
sbb
jo
js
gs
inc
or
je
or
mov
lock
lds
fld
mov
inc
jmp
fcmovnb
jns
inc
and
outs
fld
mov
out
sub
mov
not
push
cld
push
add
add
pop
dec
sbb
ret
mov
rcr
mov
(bad)
push
aas
and
jmp
mov
adc
jle
inc
sub
in
xor
adc
ret
or
push
xchg
add
icebp
sbb
dec
xor
xchg
mov
inc
xchg
or
out
adc
jle
add
add
clc
lea
(bad)
call
ja
or
sub
std
mov
xor
push
or
push
mov
push
pop
rcl
icebp
adc
add
jns
out
cmp
ja
cmp
rcr
(bad)
fiadd
(bad)
cs
sti
dec
shl
or
xor
jmp
jge
dec
push
pop
clc
mov
ret
add
test
call
cld
iretw
mov
inc
loopne
sahf
sbb
out
add
add
loopne
enter
dec
aas
jp
mov
ins
jbe
inc
jnp
into
bound
mov
call
(bad)
es
sbb
adc
jge
add
push
icebp
shl
mov
jl
mov
clc
push
ret
test
ret
cmp
inc
dec
call
sbb
test
push
mov
inc
push
ins
popa
sub
adc
fist
dec
fwait
enter
lea
call
sub
fwait
lock
(bad)
inc
cmp
push
xor
cld
clc
add
mov
fisttp
push
jns
add
sbb
or
inc
push
or
adc
les
cmp
pop
call
pusha
outs
fwait
add
out
inc
add
add
fbstp
jp
or
out
call
out
or
jne
or
popf
rcr
jmp
adc
and
outs
fisttp
push
add
bound
pop
cld
arpl
jmp
or
pop
sar
call
push
outs
ins
or
aam
mov
fwait
in
dec
rcl
or
pop
push
inc
aaa
sbb
xchg
sbb
in
mov
(bad)
popa
mov
add
push
mov
shl
outs
fist
les
call
icebp
adc
sbb
xor
outs
cwde
fwait
enter
ror
or
sbb
and
add
add
add
add
inc
sbb
mov
dec
sbb
sbb
sbb
jns
or
push
pop
pop
arpl
(bad)
mov
jge
fstp
gs
jo
adc
js
adc
ret
out
loop
ins
mov
jmp
push
ret
cmps
in
sbb
inc
imul
jmp
lock
ss
fild
iret
push
push
xchg
push
mov
outs
arpl
sub
(bad)
jmp
outs
ins
sbb
mov
call
xchg
jne
retf
or
mov
add
(bad)
sub
jmp
sub
fnstcw
sti
retf
mov
or
bound
arpl
mov
outs
xlat
add
jge
add
or
cmp
ins
pop
push
mov
in
xor
rol
mov
xor
addr16
ss
call
add
rcl
xchg
sub
ins
sahf
(bad)
cmps
xor
cmp
jns
test
jmp
in
in
shr
dec
mov
sbb
in
sbb
mov
ins
(bad)
pop
mov
add
in
mov
mov
inc
push
cld
push
adc
rcl
add
adc
pop
jg
ret
sub
popf
pop
shr
mov
sub
jmp
aaa
fist
out
push
fmul
(bad)
bound
(bad)
add
(bad)
(bad)
xlat
push
push
std
mov
fisttp
mov
fist
popa
jp
inc
stc
or
call
outs
ins
or
cli
fist
cmp
inc
sar
adc
mov
sbb
movs
jg
sar
movsx
int3
dec
call
sub
arpl
ret
or
fild
xchg
repnz
popa
inc
mov
adc
dec
outs
push
or
cmp
inc
sti
sbb
jge
jle
out
shl
in
sub
adc
(bad)
xlat
fwait
lock
inc
ins
xor
adc
call
jl
jmp
add
add
repz
mov
call
mov
adc
xchg
(bad)
(bad)
push
popf
cmp
lock
mov
dec
jl
loop
arpl
test
inc
rol
jae
mov
hlt
js
test
mov
push
cmp
pop
push
retf
fwait
jne
mov
push
sahf
loopne
dec
pusha
(bad)
lods
cmp
mov
mov
mov
test
(bad)
pop
or
std
inc
jae
test
(bad)
pop
or
std
bound
test
or
std
adc
push
xlat
jb
test
clc
sub
(bad)
jmp
rol
push
inc
dec
push
sub
imul
test
in
std
(bad)
sub
jmp
sbb
inc
call
fcomp
inc
push
jmp
arpl
(bad)
clc
or
mov
loope
in
call
loope
test
xchg
jg
adc
(bad)
clc
add
push
sub
mov
bound
add
cmp
push
inc
out
jns
jne
xchg
inc
sub
jb
inc
jmp
call
pop
xchg
test
(bad)
int3
clc
xlat
std
adc
test
or
std
bound
shl
pop
dec
or
add
add
popf
fsub
pop
fisttp
inc
outs
(bad)
adc
sbb
das
push
icebp
and
inc
ja
outs
mov
lock
sbb
in
(bad)
mov
(bad)
cli
movups
mov
lock
in
popf
shl
xchg
in
pop
fild
mov
mov
add
add
fbld
xor
fadd
adc
test
stc
scas
std
bound
test
(bad)
pushf
stc
(bad)
std
bound
test
stc
iret
std
inc
pop
icebp
je
sbb
call
cmp
inc
ins
and
stos
ins
adc
dec
jecxz
sbb
adc
xchg
outs
lods
lock
add
loopne
fucomip
pop
outs
jecxz
es
std
loop
sbb
bound
jmp
add
std
ret
jmp
aam
call
add
icebp
and
sbb
call
xor
sbb
sbb
xchg
inc
sbb
nop
push
in
(bad)
jmp
cld
mov
std
and
jmp
jmp
or
add
add
arpl
fnstenv
int3
push
pop
fucomip
cmp
dec
aam
bound
rcr
adc
sub
aam
loop
icebp
int3
popf
sbb
cmp
jmp
test
ror
ins
es
sbb
add
jmp
pop
cld
fcomp
std
bound
call
mov
lea
add
add
pop
(bad)
add
or
pop
(bad)
jle
sbb
mov
push
xchg
test
ficom
add
(bad)
jmp
cli
int
pop
or
sbb
addr16
adc
aad
xchg
lock
add
jcxz
adc
ret
aad
(bad)
xchg
pop
add
add
add
(bad)
rcr
cmp
sbb
bound
sbb
bound
sbb
and
push
sub
pop
inc
(bad)
add
lock
push
fild
movs
test
mov
in
and
pop
in
and
enter
aam
ins
pop
xchg
ret
push
pop
(bad)
(bad)
(bad)
(bad)
dec
clc
(bad)
bound
fsubr
addr16
aam
jle
cmp
addr16
int3
stos
jle
cmp
addr16
les
addr16
mov
dec
addr16
mov
jle
cmp
addr16
lods
push
sbb
bound
movs
or
jmp
fist
xor
add
add
call
popf
rcr
inc
je
jmp
mov
in
inc
inc
xchg
sti
bound
add
push
fild
push
fisttp
add
lods
fadd
pop
fucomip
(bad)
pop
(bad)
cld
cmps
pop
add
pop
jl
adc
add
xchg
ja
test
add
add
mov
test
add
cdq
add
arpl
xchg
icebp
or
icebp
inc
dec
(bad)
adc
push
(bad)
sbb
xlat
test
(bad)
and
sbb
(bad)
clc
out
std
and
lea
(bad)
movs
(bad)
movs
call
push
add
std
push
pop
mov
mov
in
(bad)
in
popf
pushf
adc
add
add
movups
popf
call
movs
test
jmp
stos
call
sub
test
test
jge
add
lock
or
icebp
mov
sbb
fdiv
bound
adc
in
call
dec
pop
ins
add
mov
out
std
inc
pop
or
aad
xchg
mov
pop
ftst
mov
imul
mov
sub
cld
std
loop
fwait
test
pusha
(bad)
(bad)
sar
loop
sbb
xchg
xor
imul
sbb
sub
inc
je
add
(bad)
lea
sbb
cmps
es
cwde
ins
in
add
movs
fcom
fbstp
cmps
inc
popa
into
jo
pop
sbb
push
into
xchg
test
inc
sti
stc
push
pop
arpl
cmc
add
je
es
test
pop
fild
movs
sbb
mov
push
cld
sub
pop
xlat
test
add
add
sbb
adc
in
std
mov
pop
(bad)
mov
jmp
sbb
(bad)
fdivr
sbb
or
sub
inc
adc
adc
jmp
ins
adc
mov
enter
add
sbb
add
sar
bound
jmp
test
inc
inc
aad
popf
in
pop
fist
daa
daa
inc
mov
leave
xchg
sbb
(bad)
fdivr
add
stc
add
ins
(bad)
mov
sbb
mov
pop
(bad)
(bad)
pop
jno
inc
add
outs
leave
test
repnz
pushf
fwait
push
sbb
inc
add
add
(bad)
nop
mov
pop
(bad)
jmp
pop
(bad)
and
mov
aaa
xchg
es
nop
cmp
inc
imul
shl
add
push
pop
out
push
pop
(bad)
mov
adc
dec
in
std
adc
mov
ss
loop
push
(bad)
sub
in
loop
sbb
xchg
inc
mov
add
add
aad
(bad)
and
pop
fisttp
push
sbb
loopne
in
bound
add
sbb
fld
fimul
add
add
pop
ja
jnp
popf
call
adc
cwde
popf
call
(bad)
popf
call
nop
dec
in
bound
sbb
aad
pop
mov
dec
in
adc
(bad)
pop
movs
jg
push
or
call
fistp
in
std
loop
jp
sbb
ins
adc
jecxz
std
ret
mov
pop
(bad)
out
ss
or
pop
add
jg
add
push
clc
pushf
clc
(bad)
std
add
inc
add
pushf
mov
fisttp
add
in
bound
(bad)
adc
mov
inc
movs
fadd
fist
or
pop
pusha
(bad)
push
scas
fbstp
std
mov
inc
movs
(bad)
cs
std
loop
arpl
jno
test
sti
movs
call
pop
xchg
test
stos
fbstp
cdq
mov
inc
jmp
(bad)
cld
movs
cwde
mov
mov
add
add
add
bound
ds
and
pop
inc
inc
inc
or
ins
adc
std
inc
pop
sbb
aad
and
bound
fisttp
adc
xchg
movs
add
add
fucomip
mov
or
dec
jb
fwait
(bad)
loop
arpl
xchg
je
mov
test
(bad)
fsubr
in
ret
add
popf
lock
arpl
sbb
or
push
test
test
(bad)
lahf
or
pop
or
std
push
arpl
mov
dec
popf
shl
arpl
add
add
add
test
jmp
push
sbb
aad
jne
dec
sbb
xchg
movs
ins
sbb
std
adc
shl
cmovb
in
cdq
jno
inc
rcr
sti
adc
retf
in
aam
ins
add
loop
mov
movs
fadd
(bad)
fcomip
xchg
lds
pop
pop
pop
ror
out
(bad)
push
sbb
jg
xchg
lock
add
sbb
cwde
xor
jmp
mov
and
mov
xor
add
call
shl
test
sbb
dec
pop
bound
dec
cld
pop
add
and
ins
aas
(bad)
xchg
mov
jmp
dec
sbb
push
aas
(bad)
lock
mov
imul
mov
popa
fild
call
loopne
aas
fistp
ins
inc
cmps
jmp
fnstenv
cmps
cmp
mov
or
mov
push
add
push
push
dec
and
inc
pop
or
std
inc
aas
sbb
aad
xchg
test
add
call
std
bound
ins
bound
ins
pop
dec
dec
cwde
cmp
mov
in
add
xchg
in
ds
movs
jb
jmp
int
sbb
popf
leave
pop
xor
test
cmp
ins
or
inc
inc
gs
fisttp
adc
dec
movs
jp
je
add
add
ret
call
popa
(bad)
pushf
or
std
bound
arpl
in
popf
pop
in
sbb
bound
pop
je
sub
ins
or
aas
xor
je
inc
popf
aam
cmp
sub
mov
test
inc
popf
shl
add
add
add
mov
dec
in
ret
loopne
aas
fild
lock
jmp
popf
lock
aas
fisttp
push
fidiv
nop
add
std
add
push
push
ins
dec
cmc
push
aas
arpl
icebp
cmp
fisttp
push
or
fisttp
bound
cmc
push
ds
push
cmp
dec
xchg
ins
sbb
add
add
call
jne
xchg
push
push
or
call
es
adc
and
jmp
cmp
dec
popf
rol
mov
cmp
(bad)
fadd
std
bound
xchg
pushf
pusha
cmp
xchg
inc
or
(bad)
fist
(bad)
cmps
inc
or
cwde
shl
call
cmp
mov
in
inc
or
lea
cmp
in
bound
add
adc
in
add
sti
adc
or
std
sar
in
loop
lods
hlt
mov
pop
in
ret
sbb
call
je
add
add
push
push
or
fsub
fucomip
lock
jmp
sub
inc
xchg
icebp
mov
push
aaa
lock
fild
and
in
inc
or
xchg
in
bound
fdiv
movs
fsub
fisttp
bound
xor
int3
lock
std
add
ins
push
push
stc
xlat
std
loop
pop
je
retw
ss
push
dec
nop
xlat
add
ins
out
ret
mov
push
retf
call
add
pusha
or
mov
cmp
pop
(bad)
dec
dec
call
ins
inc
fwait
jmp
and
add
and
add
push
and
add
push
and
add
and
mov
fwait
jne
das
push
or
(bad)
ins
jns
ins
push
mov
push
cmp
loopne
dec
push
call
cmp
push
add
test
add
inc
out
mov
je
(bad)
(bad)
jmp
add
ror
loopne
jle
lea
jg
ret
cmp
test
cmp
xor
inc
push
stos
xchg
xlat
add
test
add
cmp
push
(bad)
fist
inc
fucomip
jle
jmp
sub
jne
fcomp
jns
sub
je
outs
fistp
arpl
add
loopne
mov
jne
or
and
(bad)
or
in
sbb
pop
ret
fiadd
addr16
pop
cmp
jecxz
mov
or
ret
add
or
mov
sbb
inc
add
arpl
add
jg
fisttp
sub
ins
adc
lds
je
add
or
cmp
add
lods
outs
fcomp
dec
mov
dec
aad
arpl
movs
jnp
adc
pop
call
loope
mov
loope
or
push
pop
clc
(bad)
(bad)
cmps
cmp
pop
lock
jle
push
lds
jecxz
add
add
inc
pop
test
ins
jge
shr
lea
sbb
adc
mov
cmp
inc
jne
or
shl
push
stos
jmp
jmp
push
ficom
sub
fwait
inc
adc
push
sub
push
mov
or
xchg
jp
cld
(bad)
(bad)
jge
ret
add
add
jo
gs
call
lock
ffreep
push
test
add
inc
cld
cdq
push
call
add
dec
(bad)
push
jae
cmp
test
xchg
push
xchg
fbstp
or
mov
cs
add
add
jmp
sti
mov
jno
sbb
cwde
push
fidiv
sub
or
(bad)
fist
xor
int3
mov
aam
sar
int3
sar
int3
ficom
adc
fwait
dec
jns
ins
or
xchg
cmp
dec
popa
mov
loope
adc
out
mov
sar
popa
jecxz
scas
aas
or
sahf
cs
mov
call
sbb
cs
or
add
or
inc
aam
adc
int3
mov
lods
adc
xchg
add
jmp
arpl
movs
inc
rol
sub
scas
push
pop
sbb
stos
les
in
loop
fidivr
aas
leave
(bad)
or
push
fisubr
in
ins
xchg
inc
(bad)
call
gs
and
fwait
pop
pop
out
pop
add
sub
out
fwait
dec
std
add
add
nop
jp
mov
ret
sub
fmul
jnp
sbb
pusha
sbb
fs
add
jl
add
push
cwde
jge
jg
pop
push
xchg
call
mov
add
add
test
movs
jg
inc
std
add
add
jo
pop
pop
inc
or
pop
call
js
sbb
gs
lock
sub
fdiv
pop
or
nop
inc
add
inc
std
pop
leave
fiadd
fdiv
or
call
cmp
adc
nop
in
test
sbb
enter
add
add
das
push
push
mov
mov
dec
push
bound
dec
call
es
cmp
aad
pushf
outs
loop
fild
pop
inc
ins
or
pop
adc
movs
std
fs
gs
pop
mov
arpl
xor
pop
pushf
cmp
and
ins
adc
add
(bad)
fucomp
(bad)
stc
sbb
or
jg
fbstp
mov
pop
sar
(bad)
mov
jbe
inc
enter
sbb
pop
cld
mov
fwait
jne
xchg
fbstp
shl
push
rol
sub
(bad)
adc
push
push
inc
cwde
inc
lea
dec
lea
dec
call
or
hlt
lea
xor
adc
push
or
sub
hlt
add
outs
arpl
fs
or
add
ins
pop
into
enter
mov
push
popf
sti
das
xchg
cmp
inc
call
stc
push
js
pusha
mov
jmp
sub
in
in
cli
neg
jle
call
dec
pop
js
pusha
jbe
add
add
mov
inc
aas
pop
cmps
adc
push
dec
fdivrp
fadd
dec
hlt
xor
mov
xor
int3
pop
cld
inc
mov
jne
int
or
xchg
(bad)
call
ror
les
sbb
inc
lea
xor
jecxz
pushf
(bad)
hlt
(bad)
fdiv
or
and
(bad)
hlt
add
mov
cmp
(bad)
cld
xor
sti
das
data16
je
jl
call
jns
js
adc
pop
in
xchg
mov
loop
jecxz
inc
call
mov
jne
mov
aas
aas
pop
xchg
adc
mov
add
add
jmp
hlt
mov
push
push
push
into
test
xor
fwait
jns
jl
jne
sub
inc
add
jp
ret
int3
sub
xchg
push
push
std
mov
bound
fcom
inc
icebp
test
sbb
mov
mov
cmp
(bad)
jge
retf
mov
inc
pushf
mov
out
adc
jp
ins
int
mov
sub
cmp
inc
push
xor
enter
enter
test
push
jmp
test
pop
fisttp
dec
jle
pop
jmp
mov
add
pop
xor
sbb
and
sbb
(bad)
lds
clc
add
stos
sub
pop
push
retf
add
add
or
sbb
shl
fist
cs
mov
test
lea
add
test
add
enter
push
push
mov
(bad)
pop
add
dec
jecxz
dec
cmp
sub
jmp
jge
add
add
add
test
jmp
jb
cmp
adc
jbe
push
mov
dec
jns
rol
add
mov
fld
and
movzx
sar
or
aas
ret
lea
lds
into
jne
leave
adc
cmps
adc
jmp
dec
rol
in
add
call
test
add
add
mov
adc
loope
lea
mov
lea
pop
lods
inc
fwait
dec
hlt
add
mov
xor
(bad)
pop
cld
into
ret
or
sahf
fwait
or
ret
enter
adc
ret
call
jmp
inc
(bad)
fmul
dec
push
stos
or
push
leave
in
js
mov
add
pop
jecxz
pop
mov
mov
push
xchg
add
cld
pop
aam
ret
pop
pop
dec
jmp
dec
call
es
cmp
in
rdpmc
aad
dec
push
inc
(bad)
lock
ins
fild
rcr
ret
push
or
call
or
aam
adc
aam
cli
(bad)
dec
xor
jae
add
add
mov
mov
or
and
das
shl
add
add
cmp
pop
sar
ds
retf
in
das
shl
add
add
sbb
xchg
cmp
sahf
ds
sub
mov
cs
cmps
adc
icebp
push
push
fwait
inc
mov
ss
ret
stos
loope
sbb
add
add
or
cmp
push
adc
fwait
dec
mov
push
jns
call
sbb
sbb
mov
out
scas
cs
mov
mov
dec
pusha
jecxz
cmps
inc
sub
data16
inc
sub
imul
fstp
and
jb
sub
push
add
add
sbb
fimul
in
(bad)
(bad)
dec
pop
test
fcmove
sbb
ficom
push
jecxz
in
pop
jae
add
shrd
psubd
fidivr
xor
in
call
ins
aas
xor
cmps
bt
sub
inc
ret
scas
cmp
icebp
(bad)
pop
adc
add
add
out
test
push
pop
in
push
mov
push
pop
rcl
imul
out
xchg
inc
call
lods
pushf
xchg
pop
ins
ss
bound
inc
push
imul
call
push
inc
or
jmp
push
loop
adc
stos
mov
call
fadd
add
push
fwait
inc
xor
cmp
jno
repz
cmps
sbb
cmp
lods
lahf
call
push
or
fisttp
xchg
or
mov
sub
push
mov
push
(bad)
call
cmp
mov
push
(bad)
stc
bound
call
dec
fwait
mov
add
xchg
sbb
lods
jbe
(bad)
call
add
adc
cmp
push
ret
add
adc
jp
and
aas
xlat
add
sbb
ins
ja
call
retf
sbb
call
adc
retf
sbb
and
xor
pop
add
xor
add
add
pop
inc
sti
add
dec
(bad)
call
sub
bound
arpl
rol
loopne
jmp
pop
in
js
mov
iret
mov
fbstp
ds
or
xchg
add
ds
rcl
add
or
push
in
push
jae
jmp
mov
add
add
call
ds
and
add
jmp
jmp
aam
sbb
es
push
and
fidiv
sub
in
aas
add
push
push
or
cdq
ds
bound
(bad)
ins
xchg
fist
jmp
cdq
sbb
call
add
add
push
cmp
jne
sub
sar
xlat
add
sahf
sub
(bad)
retf
call
inc
gs
push
mov
sub
fdivrp
and
out
add
push
(bad)
call
aas
ins
or
add
jmp
mov
clc
and
fst
fbstp
and
aas
fwait
dec
retf
pop
mov
push
cmp
cwde
arpl
bound
(bad)
fidivr
add
sub
shl
or
cmp
sbb
dec
dec
ficom
into
jg
shr
ins
or
sub
cmp
inc
or
fprem
sbb
sbb
adc
add
xchg
es
or
inc
adc
leave
xlat
pop
ret
pushf
mov
in
mov
inc
or
retf
outs
push
fprem
call
call
dec
and
test
dec
xor
dec
dec
test
shl
add
cmp
inc
xchg
jg
push
in
sbb
gs
inc
aam
sbb
push
jg
es
sbb
addr16
push
aam
sbb
pop
jg
cmp
sahf
jae
dec
and
popf
adc
jge
adc
push
arpl
call
and
ins
cwde
loop
std
fld
dec
push
cwde
popa
fnstcw
sbb
pop
jae
dec
movs
pop
arpl
push
clc
ficomp
mov
cwde
add
(bad)
fsub
cwde
jle
add
test
in
fidivr
sub
call
aas
fist
test
push
call
jmp
imul
mov
mov
rdpmc
gs
ret
sahf
aas
dec
mov
add
add
(bad)
(bad)
adc
adc
or
adc
pop
in
add
stos
fbstp
lock
in
cmp
repz
in
dec
lods
or
out
aas
shl
adc
xor
lahf
pushw
inc
ja
or
and
fsubr
xor
mov
mov
push
jne
mov
hlt
push
dec
xchg
jne
in
inc
test
push
or
cvtpi2ps
adc
push
in
sahf
or
add
mov
jmp
inc
imul
aam
add
xlat
xchg
inc
jno
lock
test
sbb
pushf
shl
pop
or
mov
mov
add
pop
pop
jns
mov
bound
dec
(bad)
push
fist
add
add
repnz
in
jne
pop
push
pop
test
lds
in
data16
and
dec
shl
cmp
add
sbb
inc
inc
inc
push
add
mov
jmp
fist
add
inc
or
test
ja
loopne
jns
in
ins
fiadd
test
cwde
test
mov
inc
jns
in
inc
push
push
pop
hlt
add
mov
add
dec
dec
push
adc
sbb
ins
mov
aaa
rcl
dec
or
je
push
push
cld
cmps
push
ds
pop
inc
xlat
add
adc
sbb
push
jecxz
(bad)
mov
call
add
retf
jmp
jge
in
jl
aad
sbb
mov
cwde
movzx
rcl
sti
or
mov
pop
or
mov
mov
cli
inc
loop
or
ins
(bad)
fimul
add
fidiv
jmp
loopne
in
aas
test
inc
mov
sbb
jb
add
fcomp
inc
ins
add
pop
je
or
xchg
bound
adc
push
or
inc
rol
mov
dec
mov
add
adc
(bad)
fbstp
adc
dec
mov
jmp
pop
adc
adc
bound
(bad)
je
or
cmp
xor
cdq
xor
jmp
inc
push
dec
inc
sbb
xchg
sbb
jmp
inc
or
pusha
stc
pop
je
or
out
push
fcom
cmp
xchg
ins
or
ror
dec
arpl
and
hlt
push
lahf
fwait
xchg
jge
or
mov
adc
add
jle
or
mov
cmps
ret
scas
lea
jge
(bad)
pop
int3
hlt
sbb
sti
adc
rol
aad
movzx
(bad)
cmps
add
add
or
ins
add
jmp
dec
popf
cmp
adc
or
inc
push
lds
xchg
sbb
int
je
(bad)
std
cmp
sar
sbb
gs
jne
add
xor
mov
inc
dec
mov
add
cmp
je
cmp
je
inc
pop
adc
sbb
(bad)
push
(bad)
inc
or
sbb
gs
daa
jne
or
cmp
jns
cmp
je
inc
pop
popf
push
mov
sbb
aad
(bad)
adc
xor
or
sub
mov
int
shr
arpl
gs
gs
mov
test
add
out
and
adc
jno
mov
bound
cmp
cmc
jle
and
lea
xchg
js
add
sbb
aad
dec
mov
stc
push
scas
mov
jecxz
pop
fsub
mov
mov
fdivrp
xchg
cmps
sbb
scas
cmps
sbb
add
add
cdq
jge
test
add
jo
cmp
repnz
out
pop
sbb
and
sbb
push
cld
(bad)
jmp
add
add
neg
(bad)
setne
(bad)
mov
stc
call
or
loop
es
inc
cld
xchg
jns
add
add
inc
or
dec
xchg
fwait
inc
add
or
and
pop
je
or
push
pop
push
pop
arpl
mov
rcr
inc
add
add
fbstp
cld
ins
or
ins
pop
cmp
call
in
(bad)
(bad)
fist
inc
aam
mov
aam
adc
int3
adc
int3
clc
push
hlt
push
jmp
fwait
dec
add
push
ins
or
scas
dec
mov
call
(bad)
and
daa
fild
push
inc
sbb
xlat
sub
retf
in
inc
jb
lahf
add
loopne
test
xchg
addr16
xor
aaa
ret
je
mov
jno
stos
pop
fwait
sar
leave
cmps
push
fist
jmp
pop
or
push
or
add
cwde
add
push
in
into
int3
push
mov
fstp
add
mov
jg
test
jmp
push
mov
cwde
sti
in
(bad)
enter
es
and
ins
or
loope
xor
ins
xlat
sbb
aad
mov
stos
jg
mov
add
rcl
aam
xlat
mov
add
add
gs
xchg
dec
fs
fstp
xchg
inc
loopne
ficom
loop
sbb
int3
fsubr
mov
add
loopne
or
imul
push
aad
retf
clc
mov
mov
add
add
push
in
rcr
popf
loopne
and
ffree
arpl
(bad)
outs
repz
or
cdq
jg
inc
and
and
add
xor
pop
sub
xor
inc
mov
xchg
dec
fcomp
call
or
cmp
mov
or
adc
mov
add
and
or
(bad)
out
xchg
jne
cmp
jb
add
add
add
add
ss
inc
popa
jge
add
add
mov
stc
pusha
shr
mov
push
clc
and
or
adc
mov
ins
or
sub
xor
out
mov
je
sar
int
adc
aaa
ja
cmp
gs
test
jmp
push
sbb
push
pop
jg
scas
je
(bad)
call
ins
clc
movs
lods
add
pop
push
inc
mov
add
and
retf
arpl
xor
jle
fld
fcmovbe
cmp
pop
cld
add
ret
in
mov
inc
or
test
push
xor
add
add
shl
or
sahf
arpl
mov
adc
inc
lea
or
ins
hlt
inc
push
fwait
lock
sbb
push
sti
push
call
mov
adc
jne
sbb
mov
add
add
add
push
gs
and
(bad)
jmp
dec
lea
add
pop
push
inc
fprem
call
lea
add
pop
hlt
mov
loopne
push
xlat
cmp
cmps
dec
and
ja
inc
test
xchg
je
push
dec
(bad)
pop
out
test
mov
jmp
add
jle
or
repnz
data16
hlt
sub
add
inc
fprem
pop
add
pop
push
jg
add
add
into
add
jg
ror
aas
and
test
sub
cmps
mov
cli
cmps
xchg
inc
fnstsw
add
mov
mov
hlt
imul
rcr
aam
fidivr
imul
adc
add
out
push
mov
fwait
dec
aad
iret
inc
add
add
leave
in
inc
push
out
jl
xchg
jecxz
adc
loopne
div
shl
or
and
fstp
pop
mov
ror
sbb
outs
fisub
or
jecxz
push
out
call
push
jecxz
in
dec
cld
push
fwait
pop
in
add
mov
mov
sbb
mov
out
call
xor
cmp
call
bound
mov
mov
xchg
into
mov
or
xor
cli
add
outs
arpl
pop
or
jge
nop
loop
outs
mov
sbb
and
adc
psrlw
add
in
stos
jle
push
loopne
test
sub
xor
jecxz
pop
push
fprem
fadd
ret
test
retf
arpl
xchg
lods
test
loop
fcmovbe
or
pop
cld
lds
in
retf
or
rol
add
add
into
jbe
xchg
dec
lods
fcmovbe
ret
scas
push
cld
pop
ja
mov
fcmovu
inc
sbb
stos
ins
hlt
adc
out
scas
push
call
inc
pusha
adc
inc
or
clc
add
push
gs
xor
inc
in
adc
lea
add
add
xor
gs
add
mov
fdivrp
shl
xlat
push
inc
add
push
sbb
mov
arpl
test
pop
and
stos
fcmovbe
jnp
pop
cld
lds
in
dec
stos
push
or
out
add
pushf
rol
add
call
mov
sub
lea
lock
shl
cmp
pop
or
adc
pop
jo
jl
stos
call
add
shl
mov
sub
loopne
js
fs
or
div
movs
mov
adc
aaa
les
shl
add
add
or
in
pop
add
sbb
into
sbb
add
sbb
pushf
mov
sbb
mov
adc
in
mov
fist
push
arpl
icebp
stos
pop
or
mov
or
sbb
push
imul
dec
xchg
sub
add
add
jg
sbb
push
or
cld
mov
or
(bad)
call
inc
and
ins
or
loope
xor
ins
movs
sbb
and
in
stos
(bad)
jg
pop
or
sbb
and
xlat
xchg
jne
lods
gs
movs
mov
inc
in
xchg
dec
aam
fstp
daa
inc
loopne
pop
push
cdq
loop
test
or
push
add
loopne
stos
fs
xchg
xor
mov
clc
mov
pushf
pop
xchg
add
add
fwait
inc
leave
add
inc
(bad)
rcr
leave
popf
loopne
test
fsub
pop
jne
shl
pop
repz
stos
(bad)
cdq
jg
inc
and
sar
cdq
out
jg
or
dec
adc
cmp
aad
ss
dec
pop
loopne
xor
icebp
nop
jne
test
cmp
daa
jne
pushf
aam
jmp
add
je
add
movs
lods
push
test
test
xchg
jne
sbb
jb
add
add
add
add
xchg
inc
mov
addr16
push
pop
test
mov
(bad)
in
imul
and
(bad)
enter
and
pop
hlt
xchg
add
add
test
test
dec
(bad)
push
repz
jae
les
mov
adc
(bad)
mov
adc
loopne
retf
loopne
sbb
push
aaa
jg
scas
shr
cwde
cmp
movs
sbb
ret
inc
mov
add
xchg
(bad)
mov
retf
arpl
test
ins
jle
iret
bound
pop
cld
test
add
inc
or
xor
dec
gs
fcmovbe
add
in
mov
stos
ins
lock
loopne
inc
fld
gs
lods
ins
hlt
rcl
iret
sbb
out
push
call
test
mov
sbb
add
icebp
add
dec
gs
xor
pop
test
push
jle
sar
pop
data16
fprem
pop
test
add
add
xor
sbb
ret
retf
and
pop
mov
test
mov
test
out
rol
repz
sbb
arpl
movs
(bad)
fild
shr
data16
inc
sub
ds
fadd
neg
aad
cwde
jns
add
add
les
lods
test
ror
jmp
rol
mov
test
xchg
sub
daa
sub
cli
push
adc
add
and
call
imul
cmp
outs
sbb
add
fst
and
iret
dec
int3
cmp
inc
cmp
mov
inc
data16
jl
xchg
pop
jo
popf
loopne
in
xor
push
lds
add
inc
out
leave
ror
sbb
(bad)
and
cmp
jecxz
rcr
call
and
call
dec
cld
push
fwait
pop
pop
mov
popf
lds
into
mov
adc
hlt
lods
xor
(bad)
call
test
mov
test
into
(bad)
push
or
nop
je
(bad)
add
aad
arpl
fld
sar
mov
xor
mov
pop
xchg
sbb
sub
add
inc
inc
movs
stos
adc
movups
sbb
xchg
xor
stos
(bad)
cld
push
loopne
sbb
out
cmp
add
jecxz
fimul
pop
std
rcr
sbb
add
and
and
stos
fcmovbe
cli
out
cld
cmc
sbb
idiv
stos
inc
or
add
add
call
stos
fcmovbe
push
stos
push
cld
into
jo
mov
push
fild
add
xchg
cmps
ins
hlt
popa
push
fwait
lock
(bad)
cmps
stos
push
call
lds
xchg
cmps
ins
xchg
lds
sbb
add
add
add
push
gs
imul
mul
lea
add
add
xor
in
mov
adc
arpl
or
inc
add
fdivr
rcr
sbb
inc
shl
jge
gs
arpl
bound
pop
cld
lds
add
mov
test
pop
xchg
loopne
out
add
or
call
add
push
out
mov
sub
jge
test
lea
ins
in
retf
or
pop
adc
int3
pop
in
jl
test
test
imul
into
jmp
shl
and
(bad)
loopne
and
mov
pop
dec
xchg
pop
sbb
aaa
pop
div
and
dec
adc
mov
sbb
inc
test
or
push
fist
add
call
fstp
sub
bound
sbb
add
inc
push
stos
dec
in
mov
sbb
fisubr
mov
leave
xchg
test
arpl
rcr
xor
int3
mov
push
xor
xor
pushf
mov
push
xor
inc
jne
gs
rcl
hlt
inc
test
sar
hlt
inc
mov
ror
fbstp
jmp
push
push
push
ins
xlat
add
jle
inc
sti
fist
ds
dec
stos
jle
mov
cs
push
icebp
repz
jne
adc
pop
mov
cmp
mov
jo
jecxz
into
shl
or
mov
sbb
bound
xchg
rcl
mov
lock
push
jecxz
(bad)
les
mov
mov
or
jge
add
sbb
cmp
push
je
cli
out
add
clc
call
xchg
jp
ins
dec
pop
mov
cmps
arpl
test
sub
or
jp
or
test
cmp
ins
adc
mov
jne
outs
sbb
xor
cmp
xor
leave
aas
mov
btr
sbb
adc
inc
inc
(bad)
xor
jl
xchg
sub
sbb
in
push
jmp
iret
jp
dec
jge
jmp
rol
fnsave
push
(bad)
sub
add
test
test
fdivrp
pop
test
fdivrp
push
pop
mov
mov
mov
outs
inc
and
add
sbb
sub
push
jmp
add
add
pop
mov
xchg
cmp
ret
sub
add
or
shl
jmp
sub
test
fs
inc
add
ins
test
ja
jne
in
adc
add
mov
cmp
pusha
int
xor
mov
inc
nop
pop
push
push
mov
test
cmp
jg
jmp
sub
and
xchg
or
ret
add
add
call
pop
(bad)
fmul
mov
or
cld
emms
sub
jmp
xor
addr16
int
adc
cmp
jmp
ins
adc
addr16
fdivrp
data16
dec
xchg
xchg
(bad)
fdivrp
mov
(bad)
fimul
dec
and
out
loope
aam
sbb
retf
sti
sub
dec
cwde
jmp
dec
stos
sub
scas
mov
ins
inc
bound
dec
ret
lods
jmp
mov
shl
pusha
mov
into
leave
mov
sbb
sub
add
inc
test
neg
es
pop
div
leave
lods
and
loop
in
inc
push
pop
pop
cmp
test
mov
shr
mov
push
call
cmp
jl
mov
loopne
add
gs
push
pushf
mov
or
jmp
cdq
add
cmp
jmp
fimul
call
add
xchg
inc
pop
push
fbstp
or
loopne
in
pop
adc
xor
sbb
push
ins
jl
imul
push
mov
sbb
mov
sbb
push
or
aad
(bad)
and
jmp
xchg
and
cld
gs
inc
icebp
cmp
jmp
adc
arpl
adc
or
or
pop
xor
cmp
sbb
inc
aad
fcom
arpl
test
retf
pushf
cmp
pushf
popf
out
sbb
mov
shr
add
sbb
xor
sbb
retf
stos
lea
movzx
xor
sub
test
pop
rcl
fcomp
(bad)
into
mov
xor
xchg
retf
pop
adc
jmp
jle
add
add
lea
xchg
jne
lea
(bad)
and
jmp
add
add
test
pushw
ror
xchg
test
add
popa
sub
fimul
ror
xlat
jle
xor
sub
enter
sbb
jmp
ins
adc
mov
ins
les
add
add
xor
jnp
pop
into
cld
jmp
sub
(bad)
shl
pop
mov
jne
cmp
ins
int3
fdiv
mov
(bad)
lds
mov
popf
xchg
jge
aas
pop
test
jle
add
lods
jecxz
pushf
leave
test
fld
xchg
inc
fisttp
add
add
pop
sar
in
xchg
add
cmps
(bad)
aam
call
jae
inc
pop
mov
test
add
jp
add
in
cmps
arpl
pop
push
ret
push
push
add
leave
test
inc
push
call
popf
fisttp
jmp
jl
adc
add
add
popf
rcl
cdq
fistp
push
ins
fsubr
rcr
call
sub
xchg
add
xchg
and
or
ins
pop
les
iret
pop
into
mov
add
jmp
sbb
shl
inc
out
mov
call
aam
mov
(bad)
pop
mov
add
add
fmul
rol
inc
rcr
loopne
shr
or
in
sar
jo
mov
mov
dec
imul
and
jno
mov
stc
sbb
xchg
sti
pop
and
ins
xor
outs
(bad)
(bad)
call
test
das
stc
ins
sbb
ja
add
fiadd
aad
and
xchg
data16
mov
call
cli
or
push
retf
cli
pop
(bad)
sbb
popa
sub
push
push
xor
xchg
dec
jbe
sbb
mov
fcom
dec
in
pop
add
cdq
rcl
jg
enter
ja
inc
dec
mov
add
add
jnp
pop
les
xlat
call
add
into
adc
sar
arpl
jle
and
fadd
jge
aad
pop
int3
es
add
out
call
or
push
push
fcmovb
lods
or
mov
add
add
jmp
add
jge
add
xor
(bad)
sbb
sti
nop
mov
and
xor
mov
add
xchg
(bad)
add
or
adc
mov
in
cli
arpl
rol
jne
and
push
and
enter
add
add
add
inc
movs
inc
and
cli
and
push
sub
inc
movs
sub
out
inc
xchg
dec
sub
jnp
inc
gs
dec
mov
push
je
push
dec
inc
gs
mov
in
push
mov
sbb
rol
movs
jnp
fwait
push
std
or
mov
mov
bound
add
rol
test
rol
cwde
iret
rol
cwde
rcl
(bad)
cwde
rcl
(bad)
test
rol
cwde
jecxz
(bad)
sbb
rol
sbb
rol
push
(bad)
(bad)
pop
fstp
(bad)
pop
cld
sbb
movs
adc
sub
fld
sbb
add
ret
fiadd
test
test
test
cmp
pop
jbe
enter
(bad)
pop
xor
add
jae
adc
sbb
out
sub
aad
std
pop
adc
jge
pushw
ror
test
sbb
es
pop
pop
and
test
maskmovq
jle
add
pop
push
push
push
jbe
fadd
sbb
aad
sbb
adc
pop
add
cs
(bad)
call
push
sbb
test
sub
(bad)
out
(bad)
les
sub
test
adc
push
or
sti
fist
mov
jnp
test
lea
cmc
push
xor
(bad)
(bad)
shr
jmp
push
stos
push
inc
push
ins
jp
(bad)
(bad)
cli
fist
mov
icebp
jno
jle
cvtpi2ps
call
jle
jmp
xchg
(bad)
shr
fmul
or
or
mov
sar
ror
mov
frstor
test
add
add
lock
pushf
leave
lods
data16
pop
cli
mov
out
jge
xchg
push
pushf
cwde
jecxz
test
sbb
mov
(bad)
sbb
cs
out
pusha
ins
leave
test
out
sbb
mov
clc
pop
xchg
add
test
sbb
adc
dec
add
mov
pushfw
or
jne
push
cmc
xchg
jge
cdq
mov
push
cmp
push
pop
cmp
mov
mov
dec
lea
int3
push
loopne
loopne
call
add
mov
add
inc
add
nop
sub
call
test
pushw
inc
jae
mov
cmps
loop
in
in
aad
jbe
arpl
sbb
jnp
loope
test
nop
jne
mov
lods
(bad)
sbb
xchg
xor
ins
pop
sbb
pop
call
call
js
cmp
in
or
out
lock
and
sbb
retf
ins
adc
jmp
add
fidivr
or
jo
ja
cmp
ja
and
cmp
fadd
mov
enter
pop
push
test
aaa
jb
lea
movnti
cmp
cvtpi2ps
call
dec
in
adc
bound
adc
imul
pop
movs
push
sbb
(bad)
jg
add
mov
fild
(bad)
mov
add
shr
mov
fcmovnb
fild
call
jo
add
(bad)
cdq
(bad)
pop
inc
sbb
retf
clc
fidivr
clc
pop
clc
aad
sbb
pop
mov
xor
call
shr
sbb
in
mov
fsubr
mov
add
call
test
mov
jne
loop
fisub
call
in
(bad)
xor
jo
mov
inc
jecxz
dec
mov
fild
mov
sahf
imul
ins
std
inc
stc
pop
inc
in
sbb
sahf
shr
pop
pop
enter
dec
mov
add
add
imul
add
aam
sbb
mov
adc
dec
gs
sbb
xchg
push
and
jne
add
movs
add
loop
add
cmp
pop
mov
cmp
push
cli
call
sti
push
jmp
fild
jmp
add
add
call
(bad)
adc
add
jmp
xchg
stos
sbb
adc
and
mov
adc
push
add
add
pop
mov
fisttp
test
sti
fdivrp
dec
dec
lock
rol
sbb
jnp
fisttp
pop
mov
add
movs
std
pop
mov
rcl
lock
in
mov
clc
call
xlat
xor
jbe
add
in
pop
and
clc
shl
mov
sub
adc
push
add
or
sbb
mov
xor
jmp
mov
aas
in
jbe
gs
add
add
adc
ret
clc
jmp
sti
mov
into
jp
data16
clc
mov
nop
inc
test
cli
jmp
data16
xor
cmp
ins
mov
js
sbb
aad
sbb
mov
div
sar
(bad)
shl
std
neg
inc
add
add
loope
push
mov
popa
xchg
inc
(bad)
in
leave
add
jno
inc
pop
rol
inc
neg
repz
and
pop
xchg
jbe
neg
mov
cmps
xchg
jge
ds
shr
mov
jo
jecxz
sub
mov
fdiv
lea
(bad)
nop
dec
sbb
mov
add
add
bound
bound
xchg
scas
scas
mov
loopne
sbb
cmp
(bad)
cwde
mov
arpl
jle
pop
add
bound
ins
lea
and
sbb
mov
fisttp
add
aad
add
jecxz
call
add
add
fistp
mov
push
dec
call
rcl
or
mov
fsubr
or
(bad)
mov
shl
fdiv
pop
into
cmp
out
adc
aad
push
test
data16
fs
into
inc
out
push
mov
add
jns
(bad)
fsubr
gs
sahf
pop
in
rcl
cmc
fsub
ret
or
lock
(bad)
sar
fisttp
sub
nop
in
ins
ror
test
fsub
dec
test
mov
arpl
dec
adc
hlt
cwde
loope
cli
sbb
and
pop
and
jmp
and
arpl
cli
ins
sbb
push
add
cld
cli
fiadd
bound
dec
dec
ja
data16
inc
jmp
idiv
or
inc
out
push
stc
pop
repnz
bound
lock
push
xor
out
jne
fsub
xchg
pop
inc
clc
dec
push
jecxz
add
add
jg
dec
lock
arpl
movs
mov
add
add
mov
call
mov
(bad)
sbb
sar
retf
wbinvd
inc
arpl
adc
sbb
pop
sbb
mov
dec
inc
add
into
push
mov
jge
gs
add
add
jg
xor
add
ret
xlat
sbb
js
fmulp
stc
or
and
loop
xchg
sub
jmp
push
dec
(bad)
push
lock
cwde
out
add
jecxz
cmps
inc
jbe
push
push
jecxz
xchg
mov
push
pop
cld
mov
out
lds
pop
push
fistp
fsubr
shl
mov
cmp
inc
in
shl
ins
add
jge
idiv
add
in
pop
stc
mov
inc
imul
jmp
fstp
pop
inc
jmp
pop
sar
dec
jg
lea
jge
pop
fld
test
or
mov
call
add
add
jns
movs
clc
mov
gs
popa
clc
sar
fisttp
movs
out
inc
mov
leave
mov
dec
inc
out
pop
cs
call
sub
xlat
sub
inc
adc
aad
sub
or
add
shl
mov
shl
fwait
inc
sbb
push
movs
cmp
jb
inc
cmps
dec
aam
nop
enter
xor
xchg
push
jne
mov
fsubr
mov
sub
dec
mov
inc
bound
adc
sbb
outs
or
mov
fdivrp
fiadd
fs
scas
dec
fsubr
fscale
sub
fmul
fld
adc
jno
mov
popf
sub
jno
inc
mov
sub
or
mov
sbb
aad
pop
mov
in
jae
aam
std
ss
cmp
shl
pop
mov
shl
jne
sbb
dec
(bad)
(bad)
inc
push
or
cmps
cld
fld
mov
inc
add
jge
(bad)
in
sbb
xchg
xchg
jmp
mov
sbb
mov
iret
add
mov
iret
or
loop
out
iret
adc
sbb
iret
and
sbb
fnstsw
add
loop
mov
pop
add
inc
sbb
xchg
jle
and
ins
push
mov
ins
adc
xchg
adc
gs
add
js
add
sbb
gs
je
std
loopne
push
jge
jne
jae
jmp
jae
pop
push
sbb
sbb
add
and
add
shr
or
xchg
add
jge
push
stos
ret
aad
out
in
or
or
mov
add
jge
not
test
add
mov
mov
retf
add
dec
fwait
retf
jecxz
gs
je
ror
mov
(bad)
add
pop
ror
jbe
sbb
test
or
test
and
movs
sbb
cmp
sbb
push
loop
shl
test
add
test
add
(bad)
sub
enter
push
test
ret
push
dec
pop
ret
loopne
bound
in
fwait
dec
push
hlt
xor
push
jp
sar
inc
clc
cmps
push
out
xchg
clc
loope
jne
call
or
out
(bad)
clc
loope
lahf
mov
ret
jne
loope
scas
xchg
ret
jne
loope
lahf
test
ret
addr16
sbb
push
xchg
cmps
retf
sahf
inc
sahf
add
test
and
pop
add
test
and
mov
add
xchg
sbb
ds
cdq
retf
sbb
dec
mov
add
push
ins
adc
add
sub
dec
sbb
movs
cmp
adc
sbb
xchg
and
movs
xchg
sbb
dec
mov
add
add
mov
mov
ret
sbb
in
(bad)
push
cmp
sbb
jge
sbb
bound
add
add
mov
or
ficomp
rol
rcr
sbb
adc
inc
sbb
push
add
or
adc
fiadd
inc
or
fiadd
pop
inc
cmp
fiadd
imul
fild
sbb
dec
dec
fwait
shl
sbb
movs
test
movs
mov
add
mov
(bad)
sub
add
sbb
into
xchg
add
sbb
push
sub
sbb
and
dec
sbb
adc
sti
push
xchg
dec
sbb
daa
and
and
xchg
add
mov
mov
cmp
jbe
inc
aad
pushf
(bad)
in
sbb
(bad)
or
in
shr
inc
lock
retf
in
loope
test
scas
add
add
or
sbb
xchg
cmc
loope
rol
je
add
add
or
push
cmc
loope
mov
sbb
add
sbb
and
cmps
cdq
stc
adc
mov
loop
test
xchg
cdq
into
in
sbb
mov
add
cdq
into
in
sbb
mov
mov
data16
inc
pop
add
(bad)
imul
dec
sbb
movs
jg
push
and
sbb
xchg
cmp
add
fwait
inc
jno
enter
out
jbe
sbb
push
push
ins
pop
fiadd
mov
sbb
dec
jnp
push
or
std
sbb
inc
xlat
or
dec
pop
mov
test
imul
and
je
add
jg
je
add
add
aas
sbb
in
ins
add
loop
xchg
or
movs
repz
fistp
add
sbb
movs
or
and
repnz
pop
call
jno
mov
add
sbb
pop
add
add
sbb
push
mov
and
icebp
inc
mov
loop
jmp
lock
adc
push
or
push
sbb
or
or
ror
and
jecxz
aad
sbb
jb
dec
leave
out
fist
push
in
test
or
leave
bnd
push
ror
aad
or
pop
loopne
cmp
cmovno
shl
add
inc
add
add
push
(bad)
call
into
fnsave
ja
adc
icebp
push
dec
jb
inc
adc
jmp
movs
js
ret
out
dec
push
mov
in
call
mov
loop
clc
jns
inc
in
jl
sbb
mov
jnp
sub
cmp
ins
or
jge
add
add
je
aad
(bad)
inc
in
inc
xchg
add
jmp
lea
shr
loope
ret
ret
out
jnp
mov
jmp
lock
fild
sub
ins
sbb
jmp
fbstp
jp
mov
cmp
jg
jns
je
push
push
clc
data16
std
sbb
fwait
inc
add
add
push
hlt
xor
mov
xor
or
adc
scas
out
jmp
mov
out
sbb
pop
or
pop
sbb
push
mov
lea
mov
ror
xchg
cmp
dec
sbb
fwait
dec
pop
add
jecxz
dec
dec
xchg
jge
add
out
js
sbb
push
dec
(bad)
repnz
mov
ins
jecxz
push
dec
sbb
nop
mov
mov
int3
sbb
inc
out
push
cmp
in
adc
add
xor
dec
mov
or
xchg
test
repnz
clc
popa
(bad)
xchg
out
loope
fidivr
retf
je
les
add
add
add
enter
xchg
xor
mov
jle
jae
es
mov
jge
inc
dec
or
clc
push
retf
sbb
adc
dec
int
mov
out
pop
nop
cdq
adc
pop
test
or
sub
lea
mov
jb
mov
bnd
mov
in
aam
sbb
es
out
add
ins
sbb
mov
iret
jb
add
add
xor
push
add
ins
add
add
push
call
mov
push
or
leave
outs
(bad)
push
fs
es
retf
add
cli
adc
jmp
mov
rol
add
pop
xchg
cdq
inc
std
jno
add
xchg
and
in
mov
pop
ficomp
jne
or
mov
cmc
xchg
inc
cmp
or
add
icebp
pop
sbb
xchg
xor
mov
mov
fwait
xlat
aam
inc
fadd
(bad)
(bad)
cdq
dec
mov
or
and
xor
push
imul
ret
bound
fbld
adc
fbld
bound
fbld
bound
dec
mov
pop
add
cmp
jge
jne
ins
or
pop
lds
jp
sbb
or
add
add
retf
inc
lods
dec
sub
pop
cld
or
in
adc
sbb
push
inc
retf
inc
ins
dec
sub
pop
mov
ret
cdq
in
aad
inc
jp
jge
jne
or
loopne
retf
inc
sub
xor
pop
cld
enter
ret
cdq
in
xchg
stos
inc
jp
jge
add
add
jne
or
mov
dec
adc
pop
cmp
xor
dec
(bad)
xor
sbb
cmps
xor
(bad)
add
push
mov
loope
xor
stos
jmp
ins
inc
push
data16
dec
push
xor
sbb
out
outs
xchg
inc
sub
jmp
ds
mov
mov
outs
fistp
jae
inc
push
jae
inc
push
fstp
add
inc
adc
jecxz
add
cmc
jl
inc
out
push
dec
das
jecxz
in
movs
or
fstp
push
or
pusha
jp
jle
push
aam
dec
into
fst
add
pop
add
xchg
mov
pop
jle
inc
sar
mov
mov
les
pop
sub
loopne
clc
jb
jmp
stos
out
sbb
adc
fadd
out
push
fdivrp
lods
shl
(bad)
call
jae
enter
mov
dec
push
inc
pop
jp
retf
cld
bound
inc
push
push
sbb
mov
inc
fcomp
fcomp
push
add
fld
fistp
ror
arpl
in
pop
jle
adc
pop
shr
ins
pop
fwait
jns
jp
test
leave
cmps
leave
cdq
in
test
ds
adc
aad
add
mov
(bad)
arpl
push
sahf
popa
dec
push
nop
enter
leave
fisubr
popa
fdivrp
xor
cmp
ins
push
cmp
ins
push
add
outs
sbb
(bad)
cmc
push
call
ins
inc
fwait
inc
xchg
inc
dec
mov
aad
in
mov
fwait
ror
pop
and
loop
pop
pusha
dec
mov
add
add
pusha
sbb
shl
inc
lock
rcr
xchg
push
xchg
test
loop
data16
cdq
in
sahf
les
test
or
xor
mov
(bad)
sbb
jp
loop
fisub
call
stos
and
or
test
mov
sbb
test
hlt
mov
add
pop
push
enter
jmp
(bad)
pop
jmp
cmps
pop
xor
shl
ud2
xor
idiv
jge
xor
add
add
or
aad
fisttp
sub
pop
ins
sbb
jmp
push
push
neg
adc
jmp
ins
or
mov
fadd
sbb
adc
pop
ins
sbb
adc
call
call
(bad)
lods
aad
jne
dec
inc
std
bound
push
jbe
das
std
add
push
inc
dec
push
std
loop
inc
push
shr
sbb
push
mov
hlt
push
xchg
cmp
gs
sbb
pusha
mov
or
pop
ins
adc
jmp
push
push
(bad)
jmp
pop
inc
and
xchg
fbstp
rcl
fmul
retf
cld
bound
push
and
push
call
lods
aad
call
pushf
aad
call
lods
aad
jne
pop
or
pop
jo
jp
add
add
pop
or
sub
jp
loop
mov
pop
or
sub
dec
mov
hlt
sbb
push
loop
fisubr
inc
xor
cmp
call
sbb
inc
ins
adc
(bad)
not
xchg
or
fadd
fst
mov
add
cwde
pop
dec
dec
xlat
jg
cmc
push
push
pop
inc
lock
pop
fbstp
xchg
mov
dec
mov
add
lods
imul
mov
in
fst
das
cmp
hlt
sbb
mov
mov
cdq
in
xor
pop
or
(bad)
pop
dec
mov
adc
add
add
sahf
add
sbb
lea
lds
cmp
pop
popf
shl
enter
xchg
inc
or
pop
fisttp
jo
dec
test
fild
sbb
push
call
jp
ins
adc
hlt
push
jmp
fst
or
sbb
movs
push
sbb
xchg
push
push
jg
test
jg
add
pop
ins
adc
repz
(bad)
call
sbb
gs
pop
adc
push
sub
bound
fdiv
pop
or
ins
or
imul
adc
pop
dec
xchg
fist
mov
push
adc
or
xchg
mov
inc
add
add
jmp
bound
sti
cmp
rcr
std
sti
sub
add
fdiv
pop
or
push
fwait
add
ficom
add
bnd
rcl
xor
into
xchg
inc
(bad)
call
push
ins
or
lods
add
mov
dec
mov
cld
clc
mov
sbb
aam
(bad)
push
add
je
imul
and
add
inc
ret
test
hlt
cmp
dec
push
outs
ss
inc
fld
mov
call
pop
ds
add
cmp
sbb
in
(bad)
loop
push
or
in
mov
cs
loop
push
push
arpl
jns
pop
or
add
add
inc
je
inc
pop
adc
and
cmp
push
adc
pop
fwait
inc
xor
ret
and
fld
cli
push
pop
inc
dec
jns
clc
sub
mov
shr
push
(bad)
pushf
pop
ins
adc
sub
call
pop
sub
add
pop
ins
and
jmp
pop
xchg
jecxz
jmp
add
pop
or
test
jne
outs
pop
in
inc
imul
shl
push
pop
fist
out
cmp
gs
sub
push
xchg
inc
mov
ret
call
sub
sub
in
lods
das
jmp
mov
imul
add
add
jne
inc
cmc
test
pop
daa
jmp
mov
cmp
(bad)
loop
in
inc
push
pop
sub
sbb
adc
jne
loop
mov
ins
adc
fnsave
pop
ins
or
lock
jmp
mov
pop
add
fmul
mov
fdiv
inc
pop
adc
and
mov
add
jmp
pop
sbb
pop
push
jg
dec
jmp
out
push
inc
adc
inc
in
push
pop
jp
stos
fs
and
(bad)
mov
cmp
add
xchg
push
xor
rcl
inc
and
inc
rcr
shl
jo
xchg
pop
loope
or
mov
add
add
fwait
inc
jne
loop
movs
adc
inc
fist
fadd
cli
mov
out
pop
push
inc
lock
shl
cli
shl
add
adc
sahf
sub
pushfw
mov
arpl
icebp
(bad)
xor
enter
pop
mov
lea
test
inc
cmps
cwde
jge
add
add
jo
pop
ffreep
fsub
arpl
jl
leave
daa
out
loop
fstp
cdq
mov
xor
adc
mov
retf
push
mov
lock
pop
fbstp
scas
mov
ret
sub
(bad)
xor
out
pop
ror
ret
pop
xchg
dec
pop
sbb
and
pop
add
adc
sbb
fcom
call
fild
adc
pop
ins
adc
mov
pop
adc
es
mov
movs
push
adc
push
pop
add
inc
ins
add
je
push
ins
(bad)
fdivrp
adc
and
push
in
inc
mov
sbb
das
pop
call
adc
add
(bad)
pop
popa
imul
jmp
ins
fwait
push
fdivr
or
imul
jecxz
and
or
sbb
call
ret
inc
aam
push
lods
aam
push
lods
aam
pop
dec
dec
neg
jmp
inc
aad
ins
adc
push
jge
jge
inc
add
add
stos
loop
aad
adc
cmp
(bad)
push
sub
push
add
(bad)
loop
movs
aas
jo
sti
and
dec
and
jl
jg
add
inc
lea
pop
dec
mov
arpl
rcl
int3
enter
ret
pop
inc
and
xor
push
scas
jno
neg
fwait
gs
and
nop
cmp
fstp
push
push
jmp
and
mov
cmc
fcomp
push
push
pop
mov
sbb
cmp
imul
add
pop
add
mov
jge
jle
(bad)
inc
and
pusha
mov
popa
or
pop
(bad)
(bad)
movs
sbb
xor
push
test
sbb
mov
gs
push
jbe
xor
mov
pop
add
loopne
add
cmp
fstp
jne
sti
adc
shl
adc
mov
xor
test
push
pop
(bad)
pop
add
test
jae
jle
add
add
jae
fs
mov
fs
jmp
arpl
push
pop
cld
rcr
pop
cmp
lea
dec
ins
add
inc
sti
inc
lock
ficom
(bad)
jge
test
add
bound
dec
cli
and
inc
ins
fdiv
ficom
fsin
jl
add
add
test
jne
cvtps2pi
loop
sub
arpl
popa
(bad)
push
popa
sub
dec
dec
mov
add
out
(bad)
test
push
xchg
popa
or
imul
sbb
call
popa
or
neg
inc
dec
mov
pop
adc
in
inc
push
jne
inc
lock
or
call
push
sub
(bad)
call
test
and
mov
fadd
sbb
dec
movs
ins
add
syscall
jne
leave
mov
or
imul
mov
ins
adc
mov
(bad)
es
je
ins
jecxz
int
ds
(bad)
pop
call
leave
loop
es
sub
push
or
add
xchg
inc
dec
adc
or
into
add
pop
jecxz
and
cmc
pop
add
test
jo
ficom
adc
and
(bad)
or
fidiv
inc
ins
clc
(bad)
fdivr
add
add
add
pop
fidiv
ins
dec
fcom
aas
inc
mov
aas
ins
cld
dec
call
(bad)
sbb
adc
mov
loop
gs
sti
test
sub
shl
inc
adc
fsub
inc
jmp
test
mov
adc
cwde
inc
ins
es
mov
loop
adc
cmp
call
xor
imul
add
fs
in
xor
mov
pop
add
rol
sbb
sbb
add
add
(bad)
add
xchg
out
mov
add
imul
cdq
loop
aas
sbb
inc
fprem
inc
movs
fistp
and
test
ins
cld
std
mov
rol
movs
loop
adc
cmp
(bad)
fldenv
mov
ret
loop
and
add
add
jg
add
adc
adc
sbb
adc
dec
push
adc
ficom
push
inc
jmp
loop
xchg
adc
mov
cmp
push
mov
or
sbb
ds
push
inc
mov
push
sub
or
mov
mov
add
mov
call
adc
jmp
add
mov
and
loope
loop
call
lahf
dec
push
je
call
setp
or
or
mov
xchg
push
xchg
sbb
jge
sbb
dec
mov
inc
ins
sbb
push
out
push
in
ins
and
jns
jg
push
int3
enter
xor
xchg
test
inc
std
movs
sbb
adc
jg
dec
dec
aas
pop
in
lds
out
imul
add
jmp
pop
xchg
dec
gs
cld
cld
leave
fimul
or
(bad)
rcr
inc
rcr
or
loop
mov
adc
cdq
sbb
cs
int
pop
hlt
xchg
lock
bound
pop
lock
cs
lods
or
in
xchg
mov
test
scas
sbb
or
imul
enter
std
xor
pop
cld
pushf
das
jmp
pop
aaa
push
in
popf
enter
mov
push
call
pop
leave
jmp
pop
inc
pop
sub
inc
mov
xchg
popa
inc
in
pop
add
jge
stos
add
mov
adc
sub
xchg
test
inc
popf
adc
inc
jno
call
adc
call
mov
cdq
sbb
push
mov
pop
inc
sbb
sahf
sub
(bad)
xlat
add
or
nop
push
bound
cmps
inc
jecxz
sbb
mov
imul
mov
out
addr16
loop
mov
cmp
dec
adc
call
push
fdiv
ins
or
add
add
xchg
xor
inc
cmp
xor
sbb
mov
inc
push
xor
sbb
add
fs
push
test
jge
test
inc
sbb
add
cli
add
jge
ror
jp
inc
pop
jecxz
and
call
ret
loop
xor
inc
ins
pop
(bad)
xlat
and
gs
(bad)
call
sbb
popf
cmp
pop
out
call
shl
pop
sar
sbb
lds
test
adc
fadd
aaa
dec
cmp
fld
fs
push
add
je
or
cmc
cs
dec
add
retf
jge
rcr
arpl
jle
pop
pop
add
mov
sbb
dec
mov
repz
sbb
test
inc
xchg
inc
popa
sbb
jl
sbb
std
das
(bad)
inc
xchg
popf
call
movs
sbb
push
add
je
jle
test
das
(bad)
fimul
hlt
inc
cs
test
pop
add
pop
jecxz
nop
cmp
int
lods
int3
inc
inc
mov
push
jae
push
push
shr
fld
sbb
mov
call
jge
stos
daa
fidiv
jmp
inc
(bad)
clc
ins
jecxz
in
ins
or
lock
jg
fbstp
in
frstor
xchg
dec
fcomp
rol
or
fdivr
pop
sbb
retf
push
jg
rcr
clc
inc
push
dec
push
loopne
ficom
jle
add
adc
test
push
xor
mov
cld
(bad)
in
add
jge
lock
add
add
pusha
xlat
arpl
inc
jmp
and
adc
inc
(bad)
adc
dec
loop
in
sti
aad
sub
pop
cmps
cmp
fiadd
pop
sbb
dec
or
add
dec
mov
cld
pop
cld
inc
jmp
gs
adc
fdivr
sti
push
out
or
xlat
rcr
sbb
xchg
inc
sbb
dec
xor
ficom
cwde
inc
ins
fcomp
adc
mov
xor
out
lea
ret
faddp
cwde
popa
sbb
aad
xlat
inc
push
sbb
in
or
idiv
mov
ret
push
out
add
add
popf
xchg
push
mov
fadd
mov
push
aas
cmp
jg
call
out
ss
jns
(bad)
leave
in
inc
adc
inc
dec
sbb
sbb
or
aas
aas
pop
pop
cmp
add
arpl
aad
add
out
and
mov
imul
mov
call
(bad)
bound
dec
push
add
add
pop
jle
test
mov
mov
call
repnz
pop
clc
mov
(bad)
jne
push
pop
cld
jle
fidiv
out
sbb
lock
push
into
arpl
aad
add
add
xchg
mov
sahf
xchg
add
xor
xchg
inc
dec
or
jne
imul
mov
push
call
data16
or
pop
push
push
mov
sti
dec
mov
fild
mov
lea
dec
lea
dec
push
ss
popf
rol
add
sub
ins
sbb
push
int
inc
jno
fbstp
lods
pop
sbb
pop
lock
dec
(bad)
jmp
push
sti
or
gs
pop
ficom
inc
leave
push
cs
call
test
jmp
call
xor
fistp
cmp
leave
push
or
ficom
sbb
mov
imul
xor
shl
cmp
cmps
shl
sub
mov
mov
mov
inc
aas
mov
or
call
sub
jnp
stos
add
ins
mov
add
cmp
ja
add
add
and
adc
mov
mov
xor
imul
cdq
ret
adc
sbb
sub
in
bnd
jbe
pop
retf
or
jns
jmp
dec
push
lahf
jnp
loope
pop
int3
or
push
in
sub
jne
int3
xchg
xchg
jmp
add
xlat
(bad)
jmp
mov
call
int
add
es
add
ds
xor
jmp
dec
(bad)
mov
lds
jmp
add
add
ds
cmp
data16
inc
pop
ret
cmps
inc
mov
jb
add
add
and
adc
adc
es
pop
jne
jae
inc
(bad)
jb
ret
cmp
push
out
or
inc
adc
icebp
out
fwait
inc
imul
xchg
dec
push
adc
out
lea
add
fwait
push
push
push
test
sbb
stc
xlat
je
jo
pop
scas
mov
xor
or
out
fwait
jbe
sub
sbb
push
push
push
mov
fidiv
cmp
sub
mov
jmp
fst
pop
inc
sti
(bad)
out
sti
out
dec
dec
hlt
push
out
or
push
jp
inc
pop
sub
adc
xchg
dec
popa
adc
pop
and
xchg
push
push
adc
sbb
add
je
jae
pop
pop
inc
fbstp
cmp
loop
mov
test
jno
dec
push
add
adc
loope
pop
push
mov
ins
cld
(bad)
aam
call
sbb
and
ret
loop
(bad)
sub
add
add
mov
sub
and
push
adc
push
jmp
dec
(bad)
push
inc
cmp
loop
rcr
sbb
dec
es
stos
loop
(bad)
loop
call
dec
hlt
push
(bad)
adc
push
push
xchg
jo
loop
jg
ret
aas
out
fiadd
fdivrp
push
mov
fwait
inc
stc
push
jne
pop
mov
jmp
add
add
(bad)
adc
fdivrp
push
inc
adc
ficom
push
push
jge
ds
movs
adc
mov
call
or
ds
scas
push
sub
adc
rol
ficom
dec
inc
cld
adc
dec
add
test
or
loop
adc
enter
pop
dec
leave
push
adc
push
pop
xor
in
or
pop
sbb
dec
pop
cld
pop
mov
data16
and
push
dec
dec
test
inc
es
stc
shl
arpl
jno
pop
in
inc
jae
push
mov
xor
adc
lock
bound
lock
mov
fild
push
jle
cmp
mov
push
add
fdivrp
mov
ss
clc
std
leavew
(bad)
bound
ficom
mov
ss
mov
shl
dec
cmp
add
add
adc
push
shl
adc
fdivrp
xor
cli
push
cs
sbb
sbb
xchg
test
jmp
rol
mov
repz
shl
shl
fbstp
bound
push
bound
lock
(bad)
sub
xor
cmp
push
mov
fdivrp
bound
fdivrp
push
mov
fdivrp
inc
mov
fdivrp
push
mov
pop
inc
aad
ins
cld
dec
js
add
(bad)
adc
fist
mov
sbb
movs
cmp
loop
fwait
inc
test
pop
mov
gs
(bad)
call
fdivr
ins
add
inc
pop
ret
cmp
inc
(bad)
call
fadd
jge
mov
and
cdq
in
cwde
inc
ins
add
inc
mov
add
aas
fild
mov
pop
add
lock
and
and
dec
inc
lock
mov
push
fldenv
pop
add
inc
lock
test
mov
push
push
inc
lock
movs
mov
push
out
inc
lock
aas
fild
bound
fild
call
lock
jae
fild
add
fild
out
add
cmp
test
xchg
dec
and
fild
call
lock
and
fild
push
fild
out
add
lock
cmp
test
into
xchg
and
add
pop
add
mov
inc
mov
fild
loop
fild
out
add
xchg
xor
into
xchg
std
arpl
fild
out
add
xchg
sbb
add
add
iret
xchg
jmp
sub
pop
add
cmp
test
xchg
aad
aas
fild
out
add
cmp
test
aas
fild
out
add
lock
cmp
idiv
mov
in
es
pop
add
ss
add
add
add
pop
inc
jne
add
add
xor
adc
div
inc
push
dec
and
mov
cmps
call
jmp
fist
retf
ds
out
into
loopne
mov
push
loopne
xor
push
aas
inc
(bad)
call
add
add
sbb
jae
dec
pop
in
dec
push
fadd
ins
hlt
jne
sub
dec
adc
jge
popf
inc
movs
cmp
jecxz
inc
pushf
(bad)
ss
pop
lea
lock
adc
call
cmp
sbb
cld
cmps
jecxz
test
add
push
cmp
adc
mul
dec
push
or
pop
add
ins
pop
mov
sub
lea
out
push
adc
lods
xchg
cmp
mov
cmp
(bad)
cmps
mov
call
fadd
mov
adc
loope
inc
push
push
das
lock
cmp
sbb
ins
or
mov
sar
pop
push
mov
inc
call
cs
(bad)
pop
or
jo
push
jg
mov
std
push
sti
inc
repz
aam
aas
fisttp
pusha
aas
fucomip
in
in
mov
inc
(bad)
ins
rcr
sbb
(bad)
std
push
sbb
in
xchg
mov
add
(bad)
cmps
xchg
(bad)
std
push
idiv
add
xlat
nop
sbb
movs
sti
push
popf
or
mov
sti
add
cmp
cmp
push
aas
ja
add
cwde
push
bound
add
jle
lock
fisttp
fldlg2
pop
add
inc
lea
scas
dec
mov
in
bound
and
inc
inc
(bad)
test
inc
(bad)
cmp
movs
inc
push
ins
stc
mov
test
inc
(bad)
mov
cli
aas
jnp
fild
jp
lods
fadd
inc
(bad)
sub
jmp
inc
lods
loopne
inc
fucomip
mov
pop
sub
sub
in
ret
call
fadd
add
ins
adc
or
std
bound
jmp
pop
in
bound
mov
add
clc
std
add
std
clc
inc
fistp
nop
gs
(bad)
cli
push
push
bound
clc
std
and
out
dec
inc
fistp
dec
cli
adc
add
sbb
mov
sbb
ins
push
iret
(bad)
adc
cdq
test
sbb
or
inc
dec
mov
ds
movs
test
aad
inc
fbld
xchg
inc
xchg
inc
ror
or
sub
fbld
sbb
sub
mov
mov
mov
add
out
loop
bound
fwait
clc
cwde
inc
ins
xor
in
loop
adc
and
add
add
push
inc
or
push
pop
pop
fist
pop
pop
dec
je
push
popf
cld
repnz
fist
sbb
sbb
sub
call
push
cmps
loopne
fwait
dec
loope
cdq
(bad)
push
ds
pushf
inc
dec
mov
add
out
sub
ss
sar
ret
cs
sahf
inc
lock
push
jmp
in
pop
mov
jl
test
and
xchg
inc
inc
hlt
in
aad
sub
xor
sbb
call
fcomp
pop
or
add
jg
mov
cs
fimul
xor
add
add
rol
push
das
xchg
xor
(bad)
pop
fild
leave
xchg
xlat
xor
jl
out
jl
sub
(bad)
ins
inc
push
jg
test
loop
jge
sbb
and
call
jge
jbe
and
sti
pop
add
cdq
push
(bad)
call
inc
sbb
add
sbb
in
add
dec
xor
cdq
fcomp
fsubrp
retf
mov
push
jbe
lea
lock
push
mov
mov
(bad)
cmp
and
jmp
push
scas
std
(bad)
out
cmp
inc
pushf
repnz
jg
or
(bad)
mov
lods
std
(bad)
in
cmp
stc
xor
scas
pusha
jg
sbb
lock
mov
fbld
mov
mov
(bad)
mov
or
rcl
sbb
adc
std
hlt
sbb
fwait
and
(bad)
dec
push
mov
or
mov
add
add
ficomp
ret
dec
or
add
mov
sub
loop
sbb
pop
cld
(bad)
jecxz
add
shl
shr
jmp
(bad)
loopne
jp
jg
fbstp
jl
or
add
xor
or
dec
ror
pop
or
inc
xchg
pop
adc
dec
or
pop
arpl
out
cli
test
adc
add
aas
mov
fdiv
int
addr16
int
jle
ret
dec
or
add
mov
sub
loop
fadd
pop
cld
push
in
add
ret
sbb
outs
xor
cmp
push
clc
dec
or
not
push
jp
inc
jbe
adc
js
inc
into
dec
test
repz
(bad)
in
scas
enter
aas
xor
ret
ins
test
arpl
ret
enter
data16
add
or
outs
je
leave
mov
test
ja
mov
push
sbb
je
push
retf
arpl
xchg
pop
push
sbb
mov
shl
(bad)
fdivp
push
sbb
pop
ja
add
add
push
ins
pop
mov
(bad)
cli
lea
fistp
or
pop
fimul
scas
bound
mov
push
stos
into
jp
lds
jmp
test
jb
or
and
in
daa
aad
push
push
bound
push
call
inc
ins
and
jecxz
inc
pop
push
inc
ds
fdivr
jp
sbb
ins
int3
out
jnp
dec
test
jnp
gs
test
add
loop
sbb
pushf
or
test
test
cmp
add
pop
in
sahf
inc
lock
jnp
ret
lods
in
inc
adc
lock
cmp
add
add
jne
cmp
add
add
aam
or
aam
xlat
vpunpckldq
fdiv
cmp
jmp
sub
aam
mov
fdiv
cmp
call
inc
mov
aam
cmps
vpunpckldq
fdiv
cmp
mov
jno
inc
push
call
add
add
(bad)
(bad)
std
add
fmul
cdq
out
(bad)
(bad)
in
loop
call
ins
in
pusha
jns
shr
loop
cwde
push
lock
dec
outs
fild
in
sbb
(bad)
call
pop
inc
ins
cdq
jge
test
add
or
aaa
fdiv
fucomp
xchg
jp
jmp
pop
add
add
out
cwde
fdivrp
out
mov
(bad)
out
mov
pop
lock
mov
xchg
xchg
add
jbe
fsub
sbb
lods
clc
ret
push
in
cmps
loopne
add
sbb
pop
inc
lock
sub
fisttp
stos
jge
call
test
loop
cwde
fbstp
mov
inc
dec
outs
lock
js
mov
data16
outs
movzx
(bad)
pop
mov
mov
outs
lock
sbb
inc
gs
fwait
(bad)
mov
inc
dec
mov
adc
xor
xchg
outs
fbld
es
xchg
inc
push
ror
push
outs
out
leave
clc
pop
add
jmp
inc
cmp
lock
aad
xor
mov
jbe
push
loopne
loop
aad
sbb
movs
pop
cmp
loop
outs
aas
fdivrp
sub
and
and
add
mov
(bad)
xor
add
add
pop
add
inc
ins
or
bound
push
ins
mov
cli
add
lock
mov
xor
scas
gs
leave
arpl
ret
enter
or
mov
inc
and
jge
lds
push
mov
mov
jge
sbb
clc
push
outs
fbstp
add
add
ret
cwde
lock
mov
call
mul
gs
fisub
push
push
inc
mov
or
outs
jge
jge
and
xor
mov
jmp
add
jge
rcr
xchg
test
(bad)
(bad)
mov
add
add
fist
xchg
mov
cld
mov
cmp
mov
inc
dec
mov
adc
jg
ins
xchg
outs
fbld
cmps
je
inc
loope
dec
push
xchg
outs
out
jmp
or
mov
jbe
call
jecxz
adc
xor
dec
inc
out
inc
gs
nop
loopne
loop
push
jg
mov
jmp
loop
xor
(bad)
fsub
pusha
jge
jge
cmp
test
xchg
test
das
(bad)
mov
inc
push
xlat
fst
pop
cmp
in
bound
push
ins
mov
inc
inc
jo
mov
aas
mov
iret
xor
pop
xchg
scas
enter
add
outs
rol
sub
hlt
mov
lods
outs
call
sbb
push
sbb
(bad)
ficom
xlat
xor
pop
mov
fs
fbstp
cli
adc
add
add
ds
repnz
gs
and
xor
loop
xchg
gs
in
push
add
add
pop
icebp
pop
add
scas
jge
jge
xor
repz
xlat
lea
popa
lahf
inc
aad
push
imul
or
cmp
jmp
lahf
call
aam
call
inc
lea
push
rcr
pop
ins
jp
(bad)
bound
push
sahf
popa
mov
add
test
call
xor
dec
inc
and
jno
push
retf
neg
pop
gs
in
fwait
icebp
pop
and
mov
push
mov
jge
test
xor
test
add
stos
test
add
into
jge
test
and
pop
add
dec
(bad)
loop
test
cmp
gs
test
inc
aad
push
dec
add
pushf
loope
gs
fdiv
das
popf
cld
and
push
test
call
scas
out
ficomp
cmp
xor
mov
(bad)
push
xlat
cdq
in
lea
outs
inc
jno
inc
enter
sub
pop
cld
mov
inc
xor
add
add
sbb
add
je
mov
push
fistp
movs
mov
push
fiadd
pop
add
xchg
cmp
cmp
les
xor
sahf
jo
pop
mov
gs
push
sahf
and
loopne
loop
mov
cld
inc
pop
fist
(bad)
jl
retf
cmp
mov
loop
gs
lahf
jmp
(bad)
push
call
mov
js
inc
pop
fwait
dec
popa
mov
rcr
outs
(bad)
(bad)
bound
dec
popa
mov
call
xor
dec
inc
xchg
mov
mov
push
push
sub
pop
inc
xchg
test
mov
(bad)
or
add
add
sbb
movs
or
xlat
add
pop
sbb
pushf
mov
jle
test
add
pop
add
mov
loop
and
add
inc
rol
iret
jl
dec
call
lock
push
push
mov
call
add
in
cs
cs
ds
mov
sub
pop
(bad)
(bad)
leave
cdq
in
sbb
mov
ret
inc
dec
(bad)
loop
cwde
sub
inc
xor
sbb
add
jo
mov
mov
popa
or
adc
mov
add
sub
test
add
add
add
fistp
mov
test
jmp
pop
fistp
jge
inc
in
and
(bad)
loop
mov
popf
cld
push
pop
fist
aad
adc
or
test
hlt
adc
loop
push
call
mov
sar
pop
mov
addr16
mov
add
add
call
inc
les
adc
jno
push
mov
aam
inc
adc
sbb
mov
stos
inc
jle
test
xor
test
add
fidivr
add
jle
jg
mov
or
mov
cmp
loop
mov
hlt
add
ror
inc
push
aas
mov
push
add
jne
sub
cld
mov
lea
pusha
push
push
call
sahf
call
xor
cli
out
imul
mov
add
retf
push
push
and
(bad)
call
inc
sbb
add
add
aad
call
(bad)
jg
jp
xor
retf
fstp
std
xchg
pop
jle
mov
ffreep
aas
shr
out
aaa
fdivrp
out
rcr
push
mov
and
adc
or
sbb
add
test
mov
(bad)
mov
ins
popf
shr
and
test
mov
sbb
in
pop
seto
ror
aad
rcl
adc
ret
xchg
sub
jmp
dec
push
rcl
dec
xchg
inc
leave
mov
jne
inc
add
add
lea
(bad)
jne
mov
inc
mov
pop
fild
pop
sbb
mov
fisttp
bound
lea
sbb
and
jge
fwait
add
and
fisttp
pop
loopne
call
es
jge
ret
cdq
shl
stos
mov
add
mov
addr16
fisttp
shl
loope
pusha
sbb
lea
lock
out
pusha
ffreep
pop
pusha
loop
pusha
nop
adc
adc
jge
inc
popf
rcl
dec
xchg
aam
dec
cmc
aam
dec
leave
rcl
push
or
add
pop
or
cmp
xchg
jmp
add
mov
fnclex
inc
adc
rol
fistp
mov
push
sub
shl
cld
add
sbb
jge
and
enter
aad
ror
daa
aam
xchg
adc
jg
fbstp
pop
(bad)
cmp
test
sbb
xor
push
inc
mov
arpl
inc
imul
test
ret
pop
stos
pop
scas
ret
pushf
add
jmp
xchg
test
add
inc
push
inc
icebp
mov
or
loop
in
pop
mov
dec
mov
add
add
mov
add
pop
(bad)
mov
call
add
mov
sbb
bound
inc
xchg
and
ins
and
rol
aas
cmps
fnsave
pop
mov
dec
fbstp
test
stos
pusha
pop
fbstp
pop
or
dec
sbb
mov
rol
fdivr
jge
(bad)
sbb
and
mov
clc
sub
inc
in
arpl
pop
or
push
mov
mov
push
sub
std
xlat
mov
add
pop
movs
or
aas
jp
or
mov
mov
ret
push
or
movs
sbb
sbb
sub
test
jno
lea
add
pop
add
pop
in
xchg
add
add
sub
fdivr
jmp
or
add
mov
(bad)
cwde
pop
sbb
add
jmp
arpl
movs
je
dec
mov
fadd
push
jp
(bad)
jg
jne
test
cdq
loopne
jp
das
jg
jne
test
cdq
rcr
add
jg
jne
xchg
cdq
pusha
pop
lock
pop
ffreep
aas
or
out
cmp
call
mov
mov
xor
(bad)
call
adc
std
es
cld
data16
or
sub
in
in
and
mov
xor
push
dec
cmp
rcl
cmps
rcr
xlat
cs
test
ror
mov
jo
mov
and
jmp
jg
add
iret
push
mov
fincstp
lods
test
popf
(bad)
(bad)
sti
pop
sbb
pop
lods
sahf
mov
fwait
add
add
add
scas
push
mov
in
cs
xlat
bound
scas
cmp
push
call
sbb
mov
call
pusha
fist
push
xchg
inc
mov
cli
adc
popa
(bad)
cwde
adc
leave
in
fistp
sar
call
xlat
lock
lea
lock
fisttp
adc
pop
cld
push
push
scas
repz
hlt
or
loop
mov
out
das
arpl
(bad)
jg
push
push
mov
(bad)
(bad)
push
cmp
and
scas
cwde
pusha
pop
fwait
jne
cli
retf
(bad)
and
jge
mov
in
adc
lds
xchg
push
pop
jp
stos
adc
ins
idiv
(bad)
aam
push
and
(bad)
call
cs
mov
jmp
out
cmp
lods
hlt
int3
(bad)
mov
leave
out
mov
xchg
xor
in
leave
cli
mov
fwait
inc
jne
push
or
mov
xchg
pop
gs
jbe
bound
sahf
jp
dec
cmp
xchg
pop
test
or
add
add
add
inc
push
mov
fwait
jne
outs
add
push
test
add
test
call
push
retf
adc
pop
nop
jp
sbb
in
cmps
pop
popf
rcr
jne
push
out
lods
jl
std
mov
aad
xor
sbb
cdq
jno
call
test
mov
add
add
jo
add
test
imul
fiadd
or
or
push
push
sbb
pop
lds
fsub
or
ins
movd
cli
mov
lock
jg
mov
popa
mov
test
lock
pusha
fisttp
add
xor
sbb
into
mov
xchg
push
fnstenv
xchg
inc
popf
or
call
mov
jbe
cmp
mov
dec
jmp
or
sub
(bad)
fnsave
outs
sub
pop
dec
pop
cld
adc
xchg
inc
popf
aad
test
fild
out
push
(bad)
fcomp
inc
inc
test
sub
movs
pusha
fist
test
xchg
pusha
jle
push
icebp
ins
movs
dec
rcr
movs
pop
in
push
leave
fimul
mov
ins
jnp
loopne
fwait
clc
adc
mov
mov
jg
sar
aad
inc
leave
aad
jne
inc
pop
cld
pushw
(bad)
pusha
jg
les
loop
and
sahf
xchg
add
add
push
xchg
push
jg
inc
xor
fldenv
mov
test
jl
mov
test
push
pop
push
push
(bad)
stc
adc
rcl
push
mov
push
pop
les
sar
retf
or
ins
adc
cli
into
push
lods
(bad)
jge
rol
(bad)
jmp
mov
push
frstpm(287
loop
adc
imul
stos
(bad)
(bad)
(bad)
jne
or
cmc
jle
adc
cmc
(bad)
push
retf
and
fisttp
fst
fnsave
or
sar
push
jg
rcr
call
outs
hlt
into
pop
pusha
(bad)
(bad)
push
cmp
add
add
(bad)
call
push
(bad)
adc
call
out
mov
std
jns
(bad)
loop
jge
xchg
or
mov
lock
sbb
sahf
out
inc
sub
push
in
std
bound
lock
sbb
sahf
ret
repnz
sbb
scas
inc
fld1
sbb
add
call
sar
sti
gs
cmp
movzx
cli
dec
mov
dec
xor
jmp
bnd
or
call
xchg
jmp
std
push
(bad)
inc
add
xchg
mov
inc
cs
jge
add
je
mov
addr16
push
pop
add
xlat
pusha
inc
push
or
add
add
int
cmp
call
lock
adc
fistp
outs
lock
mov
fild
loopne
xlat
inc
icebp
mov
add
mov
(bad)
out
out
(bad)
frstor
in
jmp
das
sbb
ret
xor
out
jne
or
call
out
add
or
mov
mov
out
or
pop
add
pop
inc
test
ror
inc
push
aas
sbb
push
gs
mov
or
push
loopne
jl
mov
fdivrp
fdiv
pusha
jle
test
sbb
repnz
add
add
pop
add
gs
loope
ja
add
jg
jb
or
mov
add
test
mov
cld
add
jne
jl
lock
popf
movs
add
in
or
out
pop
(bad)
mov
out
dec
push
mov
ins
scas
hlt
bound
(bad)
(bad)
ficom
pop
lock
add
(bad)
jo
adc
xchg
jne
data16
fsub
push
std
add
pop
(bad)
(bad)
cdq
cmp
aaa
inc
in
cli
and
jo
mov
mov
mov
inc
lock
hlt
mov
std
bound
add
xor
sbb
ficom
push
inc
mov
lahf
jmp
ret
sub
adc
jecxz
loop
push
inc
jo
push
fsub
(bad)
pop
xor
inc
push
sbb
lods
add
gs
adc
jns
mov
sbb
jge
test
sbb
sbb
sbb
jmp
(bad)
adc
lea
lahf
jmp
jp
stos
fsub
out
pop
(bad)
pop
fcomp
mov
cmp
jmp
imul
jns
mov
cmp
call
cmps
(bad)
add
cmp
lock
in
bound
push
ss
push
bound
popf
shr
xchg
test
das
(bad)
cmc
out
add
add
inc
cmp
push
mov
outs
fwait
(bad)
sub
add
jne
jmp
div
in
retf
xchg
push
outs
fwait
dec
popa
into
cdq
mov
rcr
cmp
mov
mov
lock
push
ins
xchg
pop
fld
pusha
sbb
add
add
fwait
inc
pop
imul
xchg
xor
callw
sbb
test
(bad)
fwait
clc
cmps
push
or
or
add
adc
test
lock
ins
jns
mov
or
adc
xchg
sub
cwde
jge
lock
ins
fbstp
out
adc
mov
or
add
add
ins
cmp
std
adc
add
inc
fdivrp
pop
or
mov
dec
xchg
pop
fnstenv
xchg
inc
fnop
cdq
inc
popf
pop
into
sub
ins
ins
int3
bound
popf
ror
cdq
inc
sbb
pop
enter
jb
outs
ins
int3
add
push
(bad)
loopne
xlat
inc
push
jg
add
outs
xchg
pop
push
add
add
scas
bound
push
add
stos
jne
add
mov
(bad)
loope
push
add
call
fcmovnbe
fiadd
push
test
or
push
std
inc
mov
and
pushf
pop
add
inc
(bad)
call
ins
ffreep
sub
(bad)
push
lea
imul
jg
xchg
dec
cmp
pop
xchg
(bad)
in
jge
outs
fistp
mov
dec
call
mov
pop
(bad)
rcl
imul
lock
outs
ffreep
mov
aam
out
push
fdivrp
(bad)
pop
fwait
icebp
sbb
fimul
jmp
pop
cmps
pop
jg
dec
mov
in
mov
mov
ins
ffreep
sub
add
fwait
jg
or
in
retf
cmps
call
call
cmp
pushf
push
jg
mov
outs
push
les
(bad)
pop
cmp
adc
jbe
(bad)
push
outs
call
cmp
fdivrp
lods
or
jne
(bad)
fs
scas
stc
sbb
loopne
das
movaps
sbb
movs
adc
or
adc
mov
rol
adc
sbb
xor
ror
or
dec
call
sub
fld
leave
(bad)
mov
add
add
ds
pop
loop
push
jl
mov
push
call
jnp
loopne
jl
rcl
jp
retf
iret
mov
mov
stos
mov
stos
leave
inc
ins
mov
popa
(bad)
cmps
add
xor
pop
les
jae
test
add
fimul
inc
sub
push
jp
inc
ins
ds
jae
les
call
movntps
(bad)
call
arpl
(bad)
fild
fiadd
enter
push
call
gs
out
(bad)
inc
adc
ror
jmp
pop
shl
rol
push
xadd
xor
and
fisttp
out
or
jle
push
pop
rcr
mov
stos
mov
fbstp
mov
inc
mov
jb
sar
jl
out
loop
fs
mov
or
sar
adc
push
and
sbb
add
pop
add
or
imul
in
inc
jmp
(bad)
mov
pop
jae
sbb
in
loopne
repnz
xchg
add
and
mul
mov
sbb
mov
xchg
jge
aas
sbb
xchg
clc
inc
call
pop
pop
pushf
fld
lods
bound
gs
and
mov
imul
enter
fild
gs
ins
push
mov
imul
mov
jl
test
je
sub
call
sub
clc
shl
inc
in
add
jmp
adc
jle
mov
mov
jo
imul
shl
test
jnp
sbb
xor
mov
jnp
sbb
push
test
push
hlt
bound
(bad)
js
imul
es
bound
imul
(bad)
std
xor
inc
inc
or
es
jmp
leave
cdq
in
stos
(bad)
cli
into
cmp
mov
mov
mov
pop
add
ret
loop
fsubr
sti
pusha
jg
or
inc
add
sbb
mov
pop
inc
xchg
mov
xlat
mov
and
(bad)
xchg
add
gs
movs
jno
mov
pop
inc
gs
sbb
add
pop
inc
push
jle
or
adc
inc
test
or
in
and
jle
inc
ffreep
loop
or
inc
pop
es
repnz
and
addr16
fdivrp
pop
les
mov
(bad)
bound
pop
or
jno
leave
sbb
ins
inc
jg
lea
add
add
(bad)
xchg
inc
xlat
inc
rol
push
call
fmul
fimul
jmp
or
call
cmp
and
cdq
inc
dec
or
sahf
inc
lock
stos
jnp
xchg
mov
sub
test
dec
aad
mov
jnp
sub
popa
iret
inc
aad
add
add
fistp
ret
fiadd
cmp
sar
xor
bound
pop
adc
lea
jle
adc
dec
fist
(bad)
(bad)
push
xchg
pop
fwait
(bad)
std
popa
xchg
std
loop
lods
je
jge
push
loopne
(bad)
push
adc
stos
push
int
movs
std
bound
fmul
ret
stos
(bad)
sbb
out
pop
(bad)
fld
and
add
add
ja
inc
cmp
js
push
jg
xchg
jne
ins
cmp
adc
sbb
in
xchg
test
jbe
inc
or
(bad)
pop
stc
(bad)
push
cmps
loop
in
icebp
sahf
pusha
jbe
pop
dec
add
ja
xor
or
mov
fnstenv
mov
xor
sbb
xchg
rol
add
xchg
(bad)
pop
sbb
mov
fbstp
iret
xchg
inc
add
cdq
(bad)
mov
out
mov
aad
cli
int3
mov
fucomip
xchg
jle
add
xor
ja
lea
data16
rcr
dec
xor
inc
pop
cld
fsub
mov
push
push
aas
pop
cld
jmp
add
add
fwait
popf
loope
(bad)
or
je
jl
lea
(bad)
add
xchg
loopne
dec
lea
fstp
jmp
in
outs
mov
pop
adc
jmp
dec
adc
lock
bound
pop
(bad)
inc
push
xor
fidivr
push
out
test
(bad)
std
mov
jl
mov
and
bound
add
add
inc
push
xor
jno
fild
adc
add
hlt
xchg
inc
inc
popf
jl
jnp
add
test
call
adc
call
push
outs
xchg
inc
and
xchg
inc
leave
int
test
inc
pop
cld
popf
ins
pop
mov
adc
inc
call
jp
(bad)
sbb
add
xchg
inc
in
rcl
bound
setge
jns
push
sbb
fimul
ins
xchg
sahf
std
adc
fld
jmp
(bad)
fdivr
call
mov
pop
lea
(bad)
and
push
jns
push
push
lods
pop
inc
jns
call
mov
pop
lea
ins
xchg
mov
push
push
adc
add
add
(bad)
pop
jg
call
and
stos
call
sbb
mov
jns
mov
add
(bad)
call
fbstp
rol
(bad)
push
bound
pusha
call
jg
xchg
dec
jns
sbb
inc
mov
std
out
sub
retf
pushf
sub
rol
enter
outs
js
push
retf
aam
(bad)
cdq
std
bound
popf
js
jle
call
out
lods
js
jg
lea
dec
call
(bad)
xor
popa
gs
arpl
lea
mov
cmp
ins
or
or
add
add
(bad)
inc
adc
push
call
pop
add
test
inc
or
scas
ins
xor
cmps
cld
or
jo
push
mov
dec
fwait
inc
or
(bad)
jb
or
mov
mov
inc
aad
inc
push
mov
fs
aad
ror
cwde
mov
sub
add
fucomip
sub
cli
mov
arpl
(bad)
mov
dec
fwait
inc
imul
inc
(bad)
call
rol
cmp
jle
(bad)
call
jg
int3
std
jno
std
add
int3
lods
cld
fsubrp
push
xor
jmp
dec
call
mov
data16
pop
fwait
inc
inc
popw
int
jle
push
cmp
sbb
fisttp
xchg
mov
mov
arpl
mov
mov
jb
push
mov
fadd
aam
push
xchg
ss
adc
or
aam
sbb
and
rcl
test
sub
ret
loop
gs
adc
add
add
pop
add
jnp
mov
ja
and
test
mov
push
push
test
rcl
push
push
repz
call
add
je
jl
mov
xchg
add
fwait
jne
out
daa
pop
jg
xchg
hlt
jnp
mov
add
xchg
jg
pop
jge
iret
mov
dec
xchg
pop
shl
(bad)
dec
add
inc
cld
out
retf
mov
dec
test
(bad)
scas
cmp
(bad)
inc
xchg
jnp
aas
nop
cmp
push
(bad)
sub
fmul
fst
cwde
mov
mov
mov
jg
pop
iret
jle
dec
jge
xor
sub
in
cmp
add
add
jp
push
or
mov
cli
std
sbb
jge
add
or
inc
movs
repz
in
sar
mov
cmp
jle
mov
(bad)
xor
aas
jl
div
mov
push
sbb
hlt
xchg
push
scas
add
jle
jbe
mov
shl
aas
xchg
dec
cmp
fbstp
jg
sub
cmp
test
xchg
adc
pop
cmp
mov
arpl
adc
cmps
in
pop
mov
leave
aam
inc
sbb
sbb
fst
ins
mov
mov
xlat
jp
sar
nop
(bad)
sub
in
mov
pop
aam
ins
push
cdq
adc
movs
mov
push
sub
jmp
cmp
(bad)
test
cli
icebp
jb
fstp
out
pop
(bad)
enter
inc
outs
or
in
sbb
push
jl
push
pop
mov
call
minps
add
jl
pop
jns
syscall
inc
out
sahf
dec
dec
call
push
add
or
lods
push
xchg
push
inc
aad
push
(bad)
imul
inc
gs
mov
jmp
movs
daa
sub
dec
ins
enter
cdq
(bad)
mov
sbb
scas
adc
(bad)
shl
fistp
(bad)
in
dec
xchg
xchg
std
(bad)
aad
add
nop
call
push
out
pop
(bad)
call
imul
cmp
xor
mov
std
rol
lods
(bad)
loop
fnsave
or
mov
xchg
inc
std
shl
fstp
push
aas
test
xchg
fwait
inc
sub
retf
mov
mov
test
cmps
ins
sbb
and
test
dec
(bad)
xchg
inc
inc
(bad)
(bad)
jge
jg
dec
in
sbb
sbb
dec
cli
pop
jae
fucomp
clc
call
loopne
ins
or
push
jg
fnsave
or
int3
loop
sub
push
add
add
inc
call
jl
fnsave
jle
inc
gs
sbb
xchg
jmp
push
sar
int3
call
(bad)
stc
aam
loopne
lock
xor
cli
jle
rol
cdq
pop
add
test
call
stos
jmp
mov
push
and
ret
cmp
inc
dec
mov
(bad)
push
push
add
and
jmp
or
ins
out
dec
call
es
push
pop
xor
push
dec
aam
lea
jbe
movs
sbb
xor
pop
loope
lock
sbb
movs
int3
ret
mov
sbb
(bad)
inc
push
push
jg
jp
jge
sbb
xchg
aad
jne
jg
sub
test
(bad)
xchg
jge
jne
jmp
cdq
iret
cmp
or
jmp
mov
out
push
push
or
rol
push
add
fwait
shr
mov
pop
(bad)
rcl
lds
add
push
push
ss
loope
gs
xchg
pop
(bad)
bound
fwait
ror
push
jmp
inc
mov
inc
and
or
mov
inc
adc
test
sbb
push
retf
jle
les
jge
(bad)
call
add
les
jge
(bad)
call
push
add
imul
popf
push
pop
(bad)
sbb
cmps
fild
jle
popf
(bad)
pop
(bad)
(bad)
fcom
sub
xchg
test
pop
(bad)
inc
aad
test
jle
enter
dec
add
je
mov
mov
and
ja
add
pop
add
js
mov
xor
repnz
add
add
(bad)
dec
cdq
loope
xchg
add
pop
inc
inc
call
lea
(bad)
fcomp
call
test
add
fcom
shl
add
loop
cmps
add
xchg
xor
add
or
mov
add
add
jbe
push
test
popf
lock
push
adc
(bad)
fild
ja
adc
cwde
ds
or
push
lods
test
add
ja
push
inc
xor
fild
fist
push
xor
fbld
fist
jbe
lods
shl
(bad)
mov
sbb
jl
enter
jmp
in
xchg
mov
inc
call
sub
xchg
int3
mov
test
fwait
std
bound
popf
int3
cmp
nop
jno
mov
test
add
push
push
lock
cli
out
ds
leave
data16
enter
dec
ins
in
in
inc
or
add
add
add
daa
loopne
pushf
out
pop
mov
popf
mov
push
clc
icebp
fbld
push
push
jns
(bad)
mov
ss
xor
mov
dec
inc
mov
jne
jp
cmp
sbb
sub
adc
mov
jns
cmp
sbb
daa
mov
adc
mov
jns
test
popf
lock
push
nop
daa
(bad)
fist
cli
push
pop
outs
fisttp
bound
cli
and
fist
sbb
adc
add
cmp
dec
mov
test
jns
add
add
add
pop
shl
fist
fadd
adc
push
fucomi
(bad)
or
jmp
jmp
mov
add
jmp
fdivr
clc
mov
inc
and
enter
outs
or
jmp
add
add
sbb
add
add
sbb
inc
push
or
mov
push
mov
jne
outs
or
jmp
jmp
pop
sub
pop
mov
inc
call
xchg
jne
outs
or
(bad)
call
inc
fist
mov
shl
add
jge
jne
jg
add
push
nop
sar
mov
or
dec
stc
in
sbb
jmp
push
mov
fwait
ret
cmp
inc
jl
sbb
imul
fist
jmp
sbb
dec
mov
push
add
ss
add
add
add
mov
jp
push
mov
call
cld
lods
mov
adc
pop
jno
pop
lock
hlt
jle
jge
test
inc
addr16
std
jmp
add
cli
movs
lea
aad
pop
call
push
gs
mov
gs
mov
add
add
outs
mov
add
push
fwait
inc
popf
mov
neg
jg
inc
mov
stos
popa
or
push
mov
push
call
add
(bad)
sbb
jnp
fidivr
jge
mov
outs
fistp
mov
jl
jge
test
add
add
cli
ins
nop
sbb
jl
jge
mov
jns
mov
imul
cmc
or
mov
sbb
inc
or
(bad)
jg
xchg
inc
add
cmp
jmp
outs
(bad)
(bad)
in
rol
(bad)
or
outs
jp
inc
mov
xor
fadd
add
pusha
outs
xor
mov
pop
lea
cli
(bad)
adc
add
add
or
xlat
jp
jo
mov
in
std
in
xchg
shl
pop
clc
aam
dec
lock
add
cwde
std
(bad)
cmp
jmp
aam
push
add
ins
pop
cwde
std
adc
push
cld
add
and
mov
add
mul
outs
fbstp
(bad)
stos
out
or
call
inc
gs
das
or
pop
inc
push
stos
fsubr
pop
push
add
jge
add
(bad)
xor
jnp
(bad)
jle
jge
mov
jo
pop
xchg
xchg
and
(bad)
sbb
push
add
push
outs
xchg
ror
xchg
inc
dec
into
lock
arpl
pop
mov
cmc
ins
cld
ins
outs
pop
std
(bad)
fcom
lea
cli
mov
jae
push
in
inc
cld
cmp
jecxz
dec
add
push
ret
aas
xchg
pop
in
fisttp
fcomip
jecxz
fidivr
cli
cmps
jb
ret
out
int
or
mov
loopne
(bad)
ds
icebp
lods
clc
cld
mov
cmp
in
std
popf
nop
std
(bad)
xlat
jp
and
adc
push
jae
or
inc
ins
loopne
call
mov
aad
dec
test
inc
aam
xor
lods
(bad)
dec
mov
xchg
pop
ror
xchg
shl
dec
lods
out
fisttp
inc
inc
dec
xor
xchg
dec
adc
fld
jb
mov
leave
sbb
enter
loopne
call
(bad)
dec
push
push
mov
push
pop
(bad)
in
or
aad
(bad)
fmul
fist
lock
mov
icebp
jecxz
pop
fcomip
mov
cmp
pop
fmul
outs
and
loopne
jg
call
loope
push
test
clc
shr
cmp
(bad)
jge
jle
movs
rcl
inc
mov
dec
outs
scas
shl
mov
ffree
sbb
mov
push
call
xchg
xchg
jne
dec
and
adc
push
nop
call
cli
xor
ror
pop
push
popf
inc
in
adc
clc
add
lock
or
add
sbb
fsubr
pop
push
icebp
jne
fcomp
fnsave
add
add
shr
mov
(bad)
lea
inc
movs
rcl
inc
loope
sbb
xchg
dec
repz
rcr
les
ffree
sbb
add
add
mov
push
call
xlat
xchg
jne
dec
fdivr
pop
push
push
mov
jno
mov
loopne
or
popf
inc
in
loop
fs
xchg
icebp
lock
imul
sbb
jg
pushf
inc
call
sub
push
test
jmp
(bad)
jge
jle
movs
rcl
inc
loope
sbb
movs
dec
pop
scas
loopne
arpl
mov
ffree
pop
pop
sbb
push
stc
in
inc
aam
jne
dec
push
jle
pop
push
push
lock
cli
inc
jecxz
fisttp
sub
xchg
std
(bad)
jmp
call
enterw
out
push
add
add
or
cmp
pop
add
test
les
(bad)
sbb
xchg
pushf
sbb
jle
movs
inc
pop
mov
adc
fcmovb
lods
pushf
icebp
les
(bad)
pop
sbb
inc
loope
jle
fst
jl
xchg
inc
or
xchg
adc
or
loop
fs
(bad)
pop
ins
or
stos
mov
dec
aad
jne
out
cld
std
sbb
adc
sbb
or
or
cwde
inc
sbb
aad
fs
sbb
in
add
mov
inc
call
inc
cwde
jmp
ror
add
xchg
push
jne
clc
jl
cwde
arpl
cmp
shl
or
dec
imul
iret
jg
push
dec
pop
ins
adc
push
fbstp
inc
mov
push
jg
push
not
lock
ror
aad
sbb
mov
rcr
gs
(bad)
jl
iret
adc
xchg
and
jl
sbb
in
aad
sbb
dec
jp
and
xor
xor
and
int3
call
cmps
cmp
sti
arpl
pop
rcl
leave
inc
adc
int3
and
cs
rcl
lods
retf
sbb
mov
in
bound
xchg
inc
or
jmp
int3
add
fwait
movs
mov
int3
push
(bad)
enter
in
cmps
sub
lea
inc
test
fwait
inc
xor
push
mov
add
inc
fidivr
cmp
sbb
mov
mov
push
lea
inc
inc
xchg
call
fst
loop
add
test
loopne
(bad)
ret
(bad)
ret
lea
cmp
or
sbb
ftst
call
(bad)
inc
adc
test
dec
rcl
inc
dec
scas
sbb
and
test
sbb
mov
js
cmps
sbb
std
loope
mov
cwde
js
sbb
pop
iret
fst
es
or
movs
mov
xchg
jge
in
les
shl
out
pop
fmul
aam
sub
push
mov
fist
push
xor
xor
icebp
cmp
add
pop
fist
rol
cmc
lds
add
int3
shl
movs
test
add
loopne
fdivr
cmp
fdiv
push
lds
or
in
sub
out
sbb
sar
jmp
inc
sbb
addr16
add
inc
lea
push
(bad)
mov
sar
adc
int3
call
xchg
inc
cli
push
add
ret
jp
std
mov
mov
inc
mov
int3
mov
fbstp
dec
or
fmul
inc
cld
push
pusha
push
mov
ins
inc
(bad)
fsubr
xor
fs
inc
in
in
push
push
fbstp
cmps
inc
cmc
in
lock
shl
xchg
int
jne
jmp
xchg
std
add
pop
cld
xchg
sbb
inc
jmp
or
xchg
push
fcmovnb
in
lods
bound
jmp
sbb
jb
mov
pop
xchg
inc
jno
jmp
icebp
adc
mov
cli
stos
cdq
pop
fisttp
call
pop
fild
mov
movs
fistp
mov
add
jle
pop
ffreep
iret
fldenv
call
pop
rcl
clc
cmc
loope
fnstsw
mov
fs
push
jae
add
xchg
add
inc
movs
shl
xor
pop
fistp
out
test
inc
ins
adc
call
in
fisub
icebp
pusha
sbb
mov
add
add
inc
imul
pop
inc
cmp
add
fwait
pop
sub
adc
adc
call
mov
call
mov
add
and
inc
aad
cmp
adc
sbb
mov
push
add
repz
in
push
add
data16
jmp
ins
add
or
pop
rcr
lea
cmp
call
sbb
push
mov
mov
sub
mov
mov
mov
aam
mov
je
sbb
and
push
pop
pop
lods
call
inc
cmp
cdq
pop
push
push
loop
xchg
jg
jne
mov
jne
inc
dec
test
xchg
in
(bad)
(bad)
ror
mov
or
aad
rol
call
dec
call
(bad)
cmp
push
adc
hlt
mov
(bad)
fsub
out
lds
add
add
inc
rcl
lea
cmp
adc
cmp
pop
fbstp
push
cld
mov
lea
stos
arpl
jne
movs
aas
lea
(bad)
jecxz
out
jle
add
leave
mov
dec
ror
call
push
mov
loopne
(bad)
test
in
out
jmp
add
add
aad
nop
sbb
mov
xor
test
mov
cmps
cmp
jmp
jle
add
and
in
jne
pop
mov
mov
mov
adc
rcr
std
clc
add
jge
sbb
or
imul
add
add
add
fwait
ror
push
xchg
arpl
shld
push
inc
repnz
and
xchg
xchg
inc
mov
push
ss
fnsave
(bad)
pop
jns
(bad)
pop
mov
fst
fadd
or
mov
ss
test
mov
es
jl
in
in
repnz
test
add
add
mov
push
sub
popf
fnsave
xchg
inc
stc
pusha
xchg
inc
stc
mov
call
pop
sar
bound
pop
mov
retf
jbe
push
inc
inc
or
movs
orps
xchg
inc
jmp
test
dec
pop
mov
call
data16
orps
popa
data16
ins
add
inc
mov
test
je
or
xchg
cdq
inc
leave
lods
lock
loop
fist
test
pop
or
inc
(bad)
mov
fidiv
cli
pop
and
bound
add
xchg
inc
mov
mov
push
fnstsw
fisttp
in
icebp
in
loop
cmp
lods
xchg
jge
rcr
dec
and
out
or
sub
ds
fisub
ret
bound
jge
adc
fist
bound
in
(bad)
cld
dec
mov
add
clc
scas
ds
je
sbb
sbb
aad
xchg
in
in
test
add
fmul
aad
push
push
jp
push
push
pop
xor
inc
icebp
xchg
and
test
add
sbb
ins
or
fmul
cmp
fmulp
or
sahf
jmp
mov
je
pop
fwait
cli
fmul
cmp
int3
sahf
cmp
bound
add
add
add
test
push
pop
add
sahf
add
test
ret
shl
call
outs
inc
icebp
pop
fld
sbb
fmul
pop
add
and
xchg
xchg
jl
lods
lock
add
cdq
add
add
add
add
add
fwait
dec
mov
adc
mov
and
push
push
inc
nop
push
push
xor
push
or
or
and
call
loope
and
xor
fistp
mov
fldcw
fst
ds
imul
loopne
sbb
mov
loope
(bad)
xchg
push
push
cmp
or
add
ret
sbb
xchg
mov
cmp
popf
imul
add
mov
cmp
std
mov
loop
pop
and
or
cmp
or
rcl
inc
inc
pop
cmps
and
jg
add
nop
xchg
test
call
dec
(bad)
cdq
movs
sub
adc
add
out
and
jmp
and
lds
and
sbb
mov
xchg
and
jg
add
and
(bad)
icebp
nop
inc
lea
movs
xchg
add
jg
sbb
dec
loop
xchg
addr16
sar
data16
inc
xchg
and
sbb
push
inc
jne
cmp
add
jns
xchg
test
loop
gs
xchg
test
loop
push
(bad)
lock
cmp
fild
nop
or
clc
adc
sbb
test
lods
pop
add
cmp
push
scas
test
jmp
inc
xchg
and
xchg
add
data16
push
ss
inc
stc
mov
pop
push
push
add
fsub
add
push
inc
data16
mov
icebp
xor
(bad)
sbb
psubsb
pop
in
inc
in
pop
lea
jle
test
pop
add
lock
fild
and
jp
add
fidiv
push
nop
mov
sub
add
add
or
push
jo
cmp
sbb
xor
or
inc
xchg
and
test
add
enter
push
loop
out
sbb
jne
in
mov
xor
ss
push
inc
xchg
fst
or
or
jecxz
sar
and
jno
add
jge
push
push
and
push
sbb
xchg
adc
or
cmp
jmp
cmp
(bad)
sbb
pop
cdq
cmp
ins
pop
cdq
std
bound
and
test
add
test
add
retf
xor
dec
and
xchg
jp
das
cmp
je
mov
inc
and
mov
sar
mov
push
cmp
out
cdq
cld
xor
mov
mov
xchg
push
adc
sbb
mov
fsub
mov
call
xor
or
outs
xor
add
add
cmps
push
das
fild
fadd
add
jge
rcr
dec
and
add
push
jbe
data16
xchg
push
push
inc
cmp
ds
xchg
repnz
and
(bad)
jmp
clc
pop
(bad)
inc
std
stos
mov
gs
pop
jns
imul
xchg
stc
add
mov
inc
nop
add
fcom
jo
std
push
imul
mov
mov
sub
das
fistp
cs
mov
push
loop
aad
xor
sub
ss
sbb
ins
scas
jb
bound
xor
(bad)
sbb
adc
aad
jecxz
lock
das
or
add
add
(bad)
jmp
or
jbe
call
ss
clc
add
(bad)
test
jle
mov
fimul
inc
adc
add
lods
inc
loope
fldenv
cmp
xchg
push
push
and
or
push
inc
lea
cmp
mov
(bad)
bound
push
and
add
add
lea
mov
add
lods
or
or
adc
loop
cmp
lods
outs
sar
ror
data16
imul
sbb
ss
lea
mov
lock
xchg
sub
mov
mov
add
adc
add
add
add
add
or
add
cmp
fisttp
gs
add
push
fwait
inc
int
pop
int3
push
xchg
adc
pop
dec
fwait
inc
test
pop
mov
shr
xor
xor
dec
sahf
jmp
fistp
xchg
fsubr
push
sti
fdivrp
in
xchg
fsubr
sti
pop
shl
fucomip
loopne
jecxz
sahf
adc
jmp
(bad)
pushf
xchg
enter
sbb
fadd
push
nop
add
call
call
sub
sbb
inc
popa
xor
xchg
sub
fadd
or
and
add
add
hlt
daa
in
push
adc
push
ss
xchg
cmp
sub
jecxz
dec
xchg
cdq
into
mov
movs
push
(bad)
lock
(bad)
bound
ja
das
inc
push
lock
dec
jmp
fadd
push
cli
adc
adc
xchg
inc
xor
xor
sbb
inc
popa
push
fwait
enter
call
xchg
(bad)
mov
ror
cwde
xor
pop
mov
pop
mov
cs
push
add
fcmovne
in
or
cs
mov
lock
lea
lea
push
fadd
push
cli
pop
shr
fist
enter
mov
push
call
add
in
(bad)
cmp
push
jg
cdq
retf
std
add
add
pushf
call
stos
mov
(bad)
rcr
cli
ja
xor
mov
xor
ret
iret
lds
call
push
das
call
add
aam
lock
outs
popa
or
xchg
js
push
jmp
add
adc
cmp
dec
sub
jg
test
das
loope
fistp
jb
jg
test
add
std
add
iret
data16
add
xchg
dec
dec
int
cld
std
mov
pop
mov
vsubps
in
sbb
inc
xor
ror
ror
popa
xchg
mov
test
push
lods
and
test
fcmovnu
enter
jecxz
std
loop
and
mov
jecxz
dec
xchg
xchg
dec
adc
xor
adc
jecxz
(bad)
nop
in
cmp
jle
pusha
xor
jg
test
add
inc
fisttp
pop
sub
mov
xor
xchg
fld
fild
aad
pop
add
stos
jecxz
push
out
add
into
push
aam
push
push
mov
jne
ins
or
(bad)
in
or
add
jp
adc
jecxz
aas
add
add
jp
adc
jecxz
out
(bad)
adc
adc
(bad)
cmps
xchg
cdq
in
(bad)
pop
jmp
test
sbb
lds
inc
adc
sbb
push
inc
xchg
test
jp
add
mov
fcom
stc
xor
xchg
pop
or
xor
dec
xchg
cmp
(bad)
or
jl
push
xlat
test
xchg
add
test
add
int
and
test
add
shl
cmp
and
inc
gs
out
push
mov
inc
cmps
fadd
and
xor
mov
test
into
xor
add
add
push
out
cli
sbb
push
add
add
addr16
(bad)
in
cmp
cmps
movs
add
xor
data16
prefetchnta
and
sbb
adc
(bad)
fild
pop
sbb
and
sbb
or
add
add
add
adc
sbb
je
mov
xor
cdq
inc
add
fcomp
mov
sbb
sub
add
push
and
jg
push
sbb
shl
sbb
imul
or
xchg
je
mov
add
add
cmc
jo
fistp
xor
lea
call
pop
cdq
xchg
je
mov
retf
jmp
and
test
add
leave
(bad)
fldenv
out
lods
jecxz
mul
js
adc
stos
jecxz
push
cmp
loope
adc
cmp
add
lods
jecxz
or
xchg
lock
fistp
cmp
aad
loop
dec
mov
mov
shl
inc
mov
xor
psrlw
(bad)
jl
push
and
in
pop
bound
movs
add
cdq
jl
mov
loop
gs
and
dec
mov
xor
add
add
add
pop
cdq
jg
or
js
(bad)
jp
cmc
jle
dec
mov
out
add
test
add
jle
je
sahf
xchg
je
mov
xor
cmp
mov
leave
lea
test
add
jle
add
adc
inc
lods
sub
ret
xor
test
add
ss
popa
xchg
jp
adc
xor
call
lods
pop
(bad)
leave
push
(bad)
fldcw
add
adc
gs
call
ret
nop
mov
xchg
(bad)
retf
push
and
retf
leave
int3
push
and
retf
push
and
enter
int3
push
and
es
xchg
push
aaa
fwait
inc
stc
fisttp
inc
mov
imul
lea
xor
fcomip
in
xor
test
add
inc
xchg
and
jle
add
and
test
add
inc
je
lock
gs
cmp
int
ins
adc
adc
add
add
inc
fbld
jne
jne
(bad)
xchg
and
jle
add
jle
add
imul
(bad)
xchg
and
jle
add
xor
jb
lea
add
repnz
call
fild
ss
xchg
test
or
mov
imul
sbb
int
jle
(bad)
enter
in
sbb
outs
leave
(bad)
fldcw
add
verr
push
push
je
std
jne
or
xchg
mov
in
call
cmp
add
arpl
call
inc
xchg
and
test
add
sub
mov
add
add
and
xor
mov
inc
jne
adc
xor
add
cmp
sub
aas
fwait
je
jnp
xor
fadd
int3
mov
and
je
push
cwde
sbb
inc
and
cdq
pushf
leave
sub
jmp
mov
fadd
adc
mov
lock
cmp
push
bound
ss
sbb
fwait
add
fs
sbb
std
sbb
std
add
(bad)
or
aas
xchg
mov
lea
fcmovnu
add
pusha
xchg
sbb
lods
call
aas
jge
mov
jmp
push
aas
inc
push
add
add
and
sbb
ins
inc
jl
adc
xor
call
mov
sbb
aas
data16
and
inc
dec
mov
(bad)
outs
mov
lock
ja
fistp
test
lea
data16
movs
adc
push
cmp
add
add
add
adc
call
inc
loop
gs
(bad)
fldenv
push
sbb
push
bound
fwait
clc
sahf
cmp
into
mov
sbb
add
mov
or
sub
and
jg
mov
les
test
(bad)
or
mov
add
add
xor
or
sbb
ss
aad
sbb
inc
xchg
test
cmp
fnsave
inc
push
loop
popf
rcr
je
push
cli
mov
cmp
pop
scas
fisttp
shl
ss
push
sbb
jp
in
stos
add
pop
sbb
bound
(bad)
adc
sahf
and
jg
add
sbb
lods
mov
lea
sbb
mov
dec
jmp
leave
icebp
cmp
push
mov
arpl
in
dec
call
ins
int
jmp
cdq
cdq
(bad)
jmp
or
(bad)
lock
and
add
add
add
arpl
mov
(bad)
in
push
jg
jae
int3
xchg
and
sbb
sub
data16
lods
fst
fdivr
cmp
std
jbe
inc
movs
stc
lahf
shl
xchg
test
pop
popa
mov
or
fnsave
lock
aas
fisttp
jo
xor
push
ins
mov
std
adc
xor
call
ss
pop
lea
pop
fiadd
xchg
jle
in
inc
fist
jge
mov
cmp
call
enter
fwait
inc
mov
mov
pop
add
(bad)
or
in
fidivr
pop
sahf
repnz
xor
outs
nop
push
aas
fwait
in
cmp
pushf
xchg
inc
adc
aas
xor
dec
jns
jg
jge
mov
or
ins
jg
jge
xor
jle
add
call
jg
test
xor
push
add
lds
and
sbb
jo
pop
inc
gs
push
add
sbb
fwait
mov
jl
test
call
cld
aad
add
cmc
ficom
cwde
inc
inc
bound
(bad)
fcomp
dec
aad
fisttp
popf
or
cld
cmp
fnstsw
retf
(bad)
cwde
inc
sbb
pop
push
push
mov
fiadd
jg
xchg
jne
in
out
loopne
fbstp
in
stos
(bad)
jecxz
inc
mov
mov
outs
imul
mov
dec
or
dec
or
pop
push
jmp
in
push
into
adc
ror
fnsave
in
pop
int
inc
inc
mov
popf
jbe
inc
push
jmp
inc
ins
or
stc
jecxz
add
mov
mov
dec
mov
ins
or
aam
or
inc
dec
(bad)
fiadd
pop
add
pop
out
cdq
in
dec
fidivr
mov
xlat
pop
inc
gs
and
xor
inc
push
(bad)
xlat
sub
push
add
add
pop
faddp
sbb
jp
inc
push
inc
mov
pop
or
dec
xchg
movs
jns
fild
inc
mov
push
cdq
push
cmp
loopne
add
inc
inc
ret
mov
or
out
sbb
dec
icebp
jnp
jge
add
sbb
mov
lock
fst
dec
xchg
inc
rcl
push
xor
mov
(bad)
gs
or
xor
(bad)
fimul
adc
faddp
cwde
push
movs
jmp
lock
jg
(bad)
pop
popa
jmp
gs
jmp
fidiv
(bad)
lock
jmp
sbb
mov
rcl
push
lock
(bad)
fiadd
sub
cld
lods
and
fimul
mov
sti
pushf
ror
adc
bound
call
test
dec
jne
jmp
jg
add
add
add
call
es
call
in
nop
add
mov
ret
cld
fidivr
pusha
or
xchg
aam
sbb
cwde
adc
sub
push
in
sbb
std
(bad)
mov
ret
add
mov
nop
adc
ficom
or
xchg
std
(bad)
mov
ret
sar
mov
add
popf
dec
mov
add
mov
fcom
mov
test
(bad)
lods
jl
std
fdivrp
or
pop
inc
and
or
mov
pop
popf
loopne
std
fimul
(bad)
jmp
sahf
jmp
test
and
fisubr
pop
loop
and
mov
sub
jmp
out
mov
std
pushf
shl
add
mov
lods
and
(bad)
faddp
sbb
jecxz
jmp
inc
push
(bad)
lock
push
out
cmc
adc
inc
mov
xchg
or
faddp
fdivr
adc
inc
add
add
xchg
lea
fdivrp
les
retf
(bad)
test
sbb
imul
inc
(bad)
or
call
or
xchg
mov
mov
jne
add
push
lea
and
fs
nop
pop
loope
movs
js
neg
xor
jmp
ret
adc
rol
scas
mov
fadd
jmp
lock
clc
faddp
call
jle
jne
les
ret
nop
add
(bad)
call
or
push
pusha
add
call
bound
ficom
outs
and
call
idiv
push
mov
or
cmps
ret
sbb
xchg
test
mov
jo
sar
test
add
test
mov
xchg
test
fdivrp
cmc
add
call
mov
sti
push
jmp
movs
jmp
out
mov
pushf
rcl
out
std
inc
sti
ficom
push
test
mov
bound
xchg
test
fdivrp
jne
lock
lock
sub
xor
loop
lods
pop
loopne
fsubrp
add
loopne
sub
jp
lock
mov
inc
out
fimul
stc
or
add
sbb
fisttp
shr
xor
or
dec
mov
add
in
or
(bad)
mov
ja
mov
clc
fdivrp
call
add
jne
mov
jl
rcr
mov
fild
movs
add
add
sbb
jmp
mov
data16
ret
jmp
mov
jmp
gs
ins
add
popf
pusha
adc
faddp
in
sbb
bound
inc
jmp
nop
add
out
nop
inc
fld
fimul
(bad)
int
inc
push
sbb
in
les
out
xchg
inc
inc
int
inc
adc
faddp
pop
out
adc
inc
movs
xor
jo
rcr
adc
sbb
xchg
or
mov
or
push
lock
jmp
xlat
inc
push
xor
push
mov
pop
cld
pop
jmp
inc
rcr
call
add
aad
clc
fimul
adc
shl
sub
rol
cwde
stc
adc
dec
popf
ss
in
lods
je
out
fsubrp
sub
aad
inc
movs
or
fcmovnb
in
or
or
push
lock
jmp
jmp
(bad)
pop
in
sbb
pop
mov
(bad)
adc
shr
call
or
nop
fwait
shl
ins
bound
(bad)
std
ins
fdivr
imul
or
fst
mov
arpl
inc
(bad)
xchg
mov
out
fdivrp
sub
add
fwait
inc
std
inc
or
push
je
push
pop
inc
test
gs
add
add
sbb
in
pop
in
call
data16
shr
pop
add
sti
ins
nop
(bad)
lods
in
std
ror
xchg
test
fdivrp
inc
call
(bad)
les
fst
fs
(bad)
cwde
stc
sbb
jge
jecxz
mul
lea
(bad)
add
pop
cld
das
call
xchg
inc
and
xchg
jne
add
add
in
and
arpl
call
jmp
cli
in
xchg
in
fimul
push
loop
aad
ins
pop
jge
add
sbb
leave
mov
shr
in
xchg
inc
test
ss
div
jmp
les
dec
call
es
sti
push
cmp
add
aam
adc
xchg
inc
jns
xchg
test
out
fdivrp
lds
pushf
rcr
xchg
inc
sub
xchg
popf
int
fdivrp
sub
dec
loop
push
inc
push
push
add
sbb
in
cmp
mov
mov
rol
cmp
out
fsubrp
dec
jl
add
mov
stc
or
fimul
xchg
out
fdivrp
fwait
enter
jle
std
(bad)
retf
inc
(bad)
sub
adc
(bad)
in
adc
lods
je
out
fsubrp
popa
xchg
jecxz
scas
dec
push
lea
dec
pop
cld
lock
push
push
pop
leave
in
cmp
xchg
add
out
fdivrp
cmp
mov
push
push
or
jmp
xlat
inc
adc
ficom
cmp
cdq
or
jns
mov
popf
stc
test
test
gs
repz
inc
popa
xor
cmp
popf
push
(bad)
fdiv
(bad)
inc
adc
(bad)
(bad)
lock
fiadd
jo
mov
fdiv
or
aam
jecxz
pusha
js
call
inc
jns
call
lods
(bad)
inc
lea
or
push
push
and
(bad)
pop
loopne
call
cs
mov
sbb
mov
jbe
aas
xchg
in
pop
test
add
shl
fmul
shr
pop
add
mov
mov
call
(bad)
pushf
je
icebp
ficom
inc
(bad)
std
bound
push
lea
xchg
lock
loopne
push
iret
test
jmp
(bad)
in
cmp
scas
push
inc
adc
add
lock
test
ja
push
scas
sbb
jne
or
shl
xor
(bad)
sbb
cli
adc
(bad)
call
push
add
sbb
add
adc
add
xchg
jne
or
push
outs
push
fistp
inc
mov
in
cwde
inc
ins
pop
mov
or
push
jo
mov
sti
mov
(bad)
mov
or
pusha
ficomp
inc
mov
js
pop
adc
mov
fimul
sbb
jmp
lock
sbb
lea
outs
(bad)
push
or
shl
add
push
out
test
cld
sbb
lods
pop
add
call
xchg
jg
dec
frstor
push
add
push
jmp
push
fist
call
lock
bound
fimul
adc
loope
inc
jno
inc
scas
xchg
push
pusha
int
inc
adc
int
xlat
icebp
fimul
or
sbb
fwait
inc
sub
xlat
push
rol
jmp
push
(bad)
call
stos
in
xchg
cmp
push
inc
pop
cld
clc
test
and
fist
adc
lods
je
(bad)
call
mov
inc
push
jns
or
call
(bad)
lea
(bad)
add
mov
loop
mov
test
(bad)
or
(bad)
imul
cmp
fimul
jmp
fdivrp
call
fcmovnu
pop
lock
add
add
jmp
stc
bnd
xor
inc
or
lea
rcl
shl
(bad)
sub
inc
jp
in
sbb
dec
cmp
pop
ret
aam
sbb
icebp
cmps
ficom
les
shr
sbb
cmps
cmp
xor
add
add
cmps
inc
enter
pop
xchg
jg
mov
pop
js
sub
xchg
pop
ror
xor
fstp
(bad)
mov
rcr
jne
test
pop
cld
daa
pop
lea
xor
ins
int3
pop
shl
mov
pop
test
or
(bad)
les
inc
pop
cld
jmp
mov
push
(bad)
call
fcomp
push
mov
ins
mov
inc
std
(bad)
into
push
lea
(bad)
add
cmp
test
push
and
loop
xlat
inc
loope
aad
jns
cmp
into
xchg
inc
adc
lock
fadd
sbb
mov
xchg
test
(bad)
fdivrp
test
(bad)
les
add
add
mov
(bad)
lock
dec
xor
pop
cld
sub
cmp
inc
push
test
fsubrp
test
jecxz
stos
mov
(bad)
call
fcomp
push
mov
inc
pop
cld
aam
cwde
pop
pusha
xlat
xchg
inc
stc
or
lods
add
xchg
shl
inc
push
stos
ins
aam
xchg
cmps
pop
shr
add
sar
dec
mov
cmc
clc
dec
fdivr
imul
fs
sbb
gs
in
in
push
push
fwait
jge
les
inc
mov
es
bound
and
test
add
and
push
ficom
inc
rol
out
test
add
stos
push
and
add
add
xchg
popa
jg
test
pushf
pop
cmp
popa
movs
mov
test
jmp
jecxz
jge
call
xchg
mov
jmp
inc
add
or
(bad)
cmp
scas
gs
inc
sbb
add
xor
std
add
popf
and
test
add
add
add
pushf
(bad)
jmp
icebp
(bad)
fldenv
adc
inc
xchg
and
test
add
or
mov
or
arpl
jnp
or
fs
adc
bound
fidivr
dec
mov
and
or
loopne
jns
mul
lea
inc
push
call
adc
xor
xchg
and
add
add
sbb
sbb
mov
mov
lock
cmp
cmc
rcl
test
daa
cli
pop
jp
ficom
out
outs
xchg
fisubr
mov
cli
and
and
push
mov
je
jnp
or
std
mov
cmp
std
jle
std
add
dec
and
out
and
jle
add
jg
jmp
stos
icebp
lea
adc
in
and
jge
add
in
pusha
fist
stos
add
jnp
mov
movs
pop
adc
bound
fistp
retf
and
or
push
test
add
add
outs
cmp
sbb
sbb
in
sbb
add
fdivrp
dec
repnz
inc
mov
movs
xor
or
rcr
std
loop
sbb
push
cmp
lods
pop
dec
std
sar
lea
mov
push
rcl
mov
mov
cwde
jge
add
add
popa
xchg
fimul
cdq
and
add
(bad)
mov
rcl
imul
sbb
add
xlat
call
mov
inc
sub
fnstcw
xor
dec
inc
or
aad
jecxz
jge
add
gs
or
popa
rcr
xchg
dec
jns
xlat
test
loope
push
sub
jmp
aaa
mov
shl
test
(bad)
test
or
cli
loopne
(bad)
push
scas
out
repz
fisubr
mov
je
pop
cli
movs
jl
fiadd
in
(bad)
mov
je
ja
add
add
xchg
lods
(bad)
push
push
push
cmp
ins
mov
dec
and
in
and
jg
add
dec
mov
lea
adc
in
and
jle
add
fst
fwait
push
xchg
fistp
sub
pop
pusha
fbld
leave
cmc
loope
and
add
add
adc
sbb
fistp
inc
mov
push
call
pusha
mov
xchg
and
jge
add
jle
add
fs
lock
mov
(bad)
test
lods
loope
movs
cs
and
ficom
cmp
xor
xchg
je
inc
cli
in
loope
and
call
addr16
je
es
shr
fwait
pop
add
mov
ins
fild
adc
dec
and
ss
and
jle
add
sbb
std
sahf
cmps
jmp
icebp
(bad)
fstp
adc
aaa
xchg
and
jle
add
aad
fs
fist
sbb
lds
fistp
stos
adc
popf
aad
pop
pusha
fbld
leave
or
jnp
dec
repnz
in
jae
shl
jns
inc
retf
sub
push
call
loopne
cmp
xor
test
add
mov
jmp
cdq
lock
cmp
test
test
xchg
loope
and
add
push
scas
dec
cli
jae
add
push
pop
xchg
je
cmp
and
popa
sub
push
pop
xchg
je
sbb
adc
cmps
pop
add
cmp
ins
es
std
adc
dec
and
dec
xchg
and
xchg
add
cmps
jmp
push
repnz
adc
dec
xchg
and
test
add
sbb
push
mov
add
add
jnp
sub
data16
in
xlat
push
pusha
loope
mov
or
jnp
retf
and
in
mov
push
loope
sub
(bad)
sbb
pop
shl
pusha
sar
sbb
ss
sbb
aad
sbb
leave
mov
xchg
inc
mov
or
nop
movs
sbb
std
movs
inc
std
add
add
add
std
shr
lock
cmp
add
sbb
ret
push
lock
sbb
push
inc
std
push
ins
and
sbb
cli
gs
(bad)
test
cmp
adc
xor
fimul
add
sub
call
cmps
(bad)
fsubr
retf
pop
jecxz
mov
es
int
jecxz
push
icebp
xor
(bad)
jg
inc
lea
or
jmp
push
add
jmp
mov
push
(bad)
fldcw
mov
push
or
push
xor
ret
(bad)
ficomp
cmc
xchg
inc
mov
push
ss
and
fild
add
(bad)
or
push
cmp
sub
add
add
sbb
jbe
sbb
inc
std
push
push
mov
mov
loope
lea
xor
add
mov
sbb
jmp
repnz
add
add
adc
inc
xchg
and
sbb
arpl
cwde
(bad)
sar
mov
(bad)
jnp
sub
gs
in
push
push
pusha
jmp
leave
or
jnp
retf
and
jmp
call
pop
lock
gs
faddp
imul
std
call
xor
test
add
gs
add
dec
push
leave
cmp
jne
push
and
push
push
call
cs
xchg
je
mov
movs
ds
fiadd
and
push
mov
jmp
ss
call
push
jecxz
jg
jp
nop
je
fs
add
add
push
and
or
add
sbb
mov
dec
mov
sub
xor
push
jge
std
call
push
push
stc
sahf
loope
movs
jg
mov
or
lahf
push
push
imul
sbb
hlt
push
dec
push
dec
lea
jne
gs
add
ret
adc
sahf
pop
popf
call
lock
jmp
cmp
test
sbb
cwde
pop
jo
lds
sahf
jmp
push
(bad)
clc
mul
inc
and
or
push
pusha
mov
mov
mov
push
xchg
lea
pop
in
sbb
fdivrp
cld
ins
fst
add
add
shl
std
jb
std
add
add
mov
mov
sub
fiadd
das
test
(bad)
mov
or
push
mov
or
mov
jle
add
or
es
cli
jb
neg
leave
data16
push
add
add
or
lea
or
ror
call
push
fstp
dec
mov
mov
call
ins
sbb
xchg
add
fdivrp
fld
add
jb
mov
inc
cli
pop
sub
fiadd
in
test
add
xor
add
add
add
test
mov
push
(bad)
aam
mov
cmp
jp
mov
fcom
push
add
mov
inc
xchg
jge
sti
rol
mov
pop
fdiv
add
push
cld
fld
in
gs
jg
push
pop
cmp
add
ins
int3
adc
fidiv
in
jns
sti
inc
mov
push
xchg
inc
fisttp
jne
or
ror
int3
or
sar
mov
pop
les
lock
push
xchg
jmp
jecxz
push
add
ss
and
stc
call
cmp
int3
call
bound
stc
ins
into
sti
ficomp
xchg
inc
add
add
in
jecxz
aad
adc
(bad)
enter
(bad)
out
fimul
movs
jmp
iret
add
fsubr
aad
sbb
fs
mov
clc
mov
out
pop
jecxz
sbb
gs
xchg
push
int
dec
std
bound
add
mov
jecxz
outs
or
jne
or
std
enter
add
inc
push
inc
push
or
or
or
cld
pop
(bad)
bound
add
rcr
xchg
nop
(bad)
push
pusha
in
push
pusha
mov
(bad)
int
fdivrp
dec
js
call
(bad)
fisub
mov
ficom
push
leave
lods
jmp
leave
mov
inc
and
repnz
mov
jle
pop
stc
jle
cmc
push
sbb
inc
or
add
out
fdivrp
shl
call
sahf
pop
pushf
lea
clc
fimul
jno
pop
lods
pushf
leave
test
push
xchg
cmp
lea
cmp
or
inc
mov
pop
mov
jmp
or
cmp
add
(bad)
loopne
cli
add
fimul
add
adc
std
xor
je
pushf
ret
jo
sbb
or
fwait
shl
int
push
std
push
std
ins
lods
mov
or
outs
cdq
call
xor
inc
adc
cld
pushf
pop
push
out
ficom
mov
in
xchg
inc
push
push
aam
cld
out
ins
test
ficom
or
addr16
lea
in
push
pusha
out
push
push
sti
ins
enter
add
jmp
and
(bad)
mov
push
or
movs
jno
dec
out
add
add
cli
sub
jmp
lea
call
fidiv
std
or
add
(bad)
or
inc
jl
lea
mov
xchg
arpl
jne
in
sbb
pop
push
adc
loop
aad
and
rcl
cmp
je
or
mov
lock
std
or
add
add
inc
fwait
js
xchg
fidiv
xchg
jne
out
pop
loopne
bound
jle
inc
rol
or
fs
sbb
sbb
push
call
in
adc
cld
jns
mov
dec
lock
or
aas
sti
add
xchg
push
int3
push
ds
mov
jae
pop
adc
ror
fidivr
jmp
mov
sti
fs
fst
xchg
inc
jge
push
call
je
inc
call
push
dec
push
push
je
lea
stc
jmp
xchg
je
lea
stc
fnsave
cmc
push
jmp
jns
fs
mov
ins
inc
xchg
(bad)
bound
lods
mov
call
mov
(bad)
push
cmp
in
adc
sbb
sbb
xchg
inc
fst
adc
sbb
sbb
jg
adc
stc
add
cmp
test
sbb
cli
mov
call
add
fdivrp
xchg
loopne
inc
in
mov
cwde
shl
push
dec
ficom
fadd
mov
push
lock
repz
pop
arpl
or
stc
add
push
jp
jg
dec
(bad)
call
repnz
mov
jecxz
(bad)
push
pop
pop
sbb
pop
jb
outs
jnp
add
add
add
jp
in
sbb
sbb
jg
or
dec
jmp
pop
mov
call
ins
mov
mov
icebp
fdivrp
lods
xchg
shr
jns
test
cld
int
inc
std
push
(bad)
pushf
je
icebp
ficom
cmp
rol
call
cmp
and
or
add
call
icebp
push
(bad)
fdiv
jecxz
pop
fcmovu
call
cs
add
icebp
ficom
(bad)
in
cmp
add
xchg
inc
mov
adc
fild
xchg
nop
lods
add
icebp
fsubrp
push
ret
inc
ins
pop
(bad)
call
add
add
jmp
push
nop
lods
cmp
(bad)
fsubrp
xor
ins
pop
(bad)
call
lock
test
call
in
or
add
sbb
adc
fisttp
cdq
add
test
bound
loop
test
fwait
shl
mov
add
add
inc
(bad)
fiadd
pop
fidiv
adc
fst
fstp
pop
lea
stc
fst
fimul
arpl
fisubr
cdq
pop
add
mov
(bad)
jle
jmp
and
(bad)
fmul
push
xor
pop
mov
std
es
std
bound
mov
sbb
cs
fnsave
add
call
pushf
push
xchg
inc
lea
test
inc
pop
cld
shr
sar
(bad)
les
aad
xor
inc
pop
cld
mov
sti
fiadd
dec
jp
adc
stc
pop
push
repnz
xchg
add
add
jmp
inc
dec
std
bound
jg
adc
mov
in
sub
adc
sbb
jg
add
adc
fwait
shl
mov
(bad)
rcl
stc
sbb
(bad)
fiadd
sbb
jb
and
shr
fst
xor
cmp
jne
call
or
call
dec
mov
out
adc
cdq
lock
jnp
add
mov
jne
mov
inc
cli
inc
sar
test
adc
add
fcmovnu
call
imul
jb
mov
jns
add
sbb
sbb
mov
dec
adc
and
ret
xchg
je
mov
(bad)
xchg
ror
adc
add
fdivrp
push
pop
adc
cwde
mov
scas
and
gs
add
jo
push
jg
push
mov
xchg
leave
sbb
xchg
pop
imul
mov
jg
dec
or
shl
jge
and
je
mov
cmp
push
mov
push
dec
push
inc
adc
rcr
fwait
inc
jmp
adc
enter
movs
in
xchg
movs
jle
jg
push
je
cs
push
add
inc
add
add
dec
data16
gs
push
call
(bad)
inc
push
mov
mul
push
jp
mov
mov
add
sbb
in
mov
jmp
xor
push
mov
pop
lock
call
push
and
(bad)
clc
test
mov
cld
inc
call
add
add
in
sbb
or
ins
clc
adc
pushf
ror
fdivrp
cs
add
aas
dec
(bad)
loop
in
dec
mov
ret
sub
aaa
je
sti
call
cld
ins
clc
(bad)
sti
(bad)
mov
cli
fsubrp
outs
push
push
add
xchg
hlt
xor
mov
mov
in
nop
pop
sub
sti
call
cli
push
push
pusha
dec
cld
mov
stc
push
xor
js
call
sbb
hlt
cmp
push
test
jge
add
int3
mov
call
mov
nop
inc
mov
cli
nop
inc
mov
jmp
add
cdq
inc
jno
mov
lea
add
push
mov
ja
xor
dec
lock
push
retf
mov
test
call
clc
sub
dec
dec
(bad)
fdiv
xchg
jne
in
pop
push
pusha
stc
push
lea
mov
push
(bad)
push
xor
adc
ficomp
gs
push
jmp
fild
imul
push
push
loopne
mov
inc
xchg
jne
mov
dec
pop
std
bound
call
(bad)
call
out
pop
add
nop
inc
icebp
add
jmp
add
jmp
jnp
bound
lea
clc
fisubr
(bad)
pop
cld
fld
lock
jmp
or
pop
std
adc
xchg
inc
inc
jp
xchg
sbb
test
pop
xchg
(bad)
loop
pop
xchg
inc
jmp
ins
or
pop
mov
add
and
push
add
add
dec
jecxz
push
xor
xor
push
push
push
nop
jno
call
or
xchg
xchg
(bad)
cmc
and
inc
mov
mov
inc
call
aam
ins
xchg
dec
xchg
pop
std
push
push
fst
push
dec
int3
call
sbb
in
pusha
jmp
jle
xchg
mov
jmp
cli
push
sub
mov
jnp
std
ret
sbb
sti
ficom
into
xlat
inc
push
xor
pop
out
(bad)
xchg
dec
or
fld
in
std
mov
std
add
add
(bad)
stc
sub
scas
adc
cmp
xor
add
add
inc
inc
adc
cdq
lock
test
(bad)
(bad)
push
call
cld
xchg
test
(bad)
pop
cld
loop
ja
fdivrp
sub
pop
mov
mov
pop
cld
adc
jmp
icebp
lea
aam
(bad)
fsub
(bad)
push
push
dec
(bad)
cwde
stc
sbb
sti
ja
inc
add
add
sahf
pop
add
mov
imul
std
mov
(bad)
or
dec
xchg
test
ret
pop
cld
(bad)
hlt
jns
std
(bad)
(bad)
sahf
cwde
jge
lea
fdivrp
bound
inc
adc
cli
mov
fbstp
lds
dec
xchg
test
out
add
add
popa
sbb
(bad)
fcomp
loopne
bound
inc
push
or
pop
int3
sti
fiadd
sub
xchg
test
add
inc
xchg
xchg
jns
jmp
and
call
lds
adc
in
mov
retf
sbb
(bad)
fsubrp
cmc
xor
add
mov
xchg
mov
(bad)
fdivrp
ins
jp
std
adc
inc
lea
(bad)
add
push
push
and
gs
loop
stc
jmp
dec
icebp
lods
lods
sar
fsubrp
mov
daa
xchg
mov
add
(bad)
mov
sub
sub
mov
push
nop
leave
fsin
add
stc
mov
add
push
mov
(bad)
fsubrp
ins
ss
(bad)
es
mov
(bad)
fdivrp
cmp
adc
pop
retf
lock
cmp
ficom
xchg
xchg
push
sbb
jns
(bad)
xchg
xchg
add
dec
(bad)
jmp
or
fucomip
loop
(bad)
fmul
inc
add
mov
add
add
add
mov
cld
fdivrp
push
or
fucomip
ffreep
sbb
(bad)
add
or
adc
xchg
add
or
adc
jo
xchg
push
nop
sbb
jmp
add
in
loope
in
jp
(bad)
(bad)
dec
push
bound
fnsave
dec
mov
fst
adc
inc
add
(bad)
add
push
loop
(bad)
sar
cdq
jmp
pop
lock
mov
cmp
stos
sbb
xor
sbb
ror
loope
fdivr
icebp
jne
push
adc
add
inc
jns
adc
inc
pop
inc
adc
or
gs
pop
inc
adc
add
or
inc
aad
and
push
jae
jmp
nop
jne
ins
adc
(bad)
jge
pop
inc
xchg
mov
(bad)
pop
jg
call
sub
sbb
pop
sbb
and
push
aas
test
inc
pusha
jg
jne
jmp
jg
add
add
lock
fwait
add
mov
outs
add
xor
mov
mov
call
jle
dec
jle
(bad)
cmp
or
and
push
push
and
cmc
jg
call
mov
iret
mov
adc
ror
(bad)
sbb
fdivrp
mov
rol
jle
mov
fwait
or
call
sbb
bound
movs
cmp
fisub
cmp
jecxz
push
idiv
mov
popf
cdq
or
jle
dec
xlat
test
push
add
add
js
fdivrp
push
and
jle
call
inc
pushf
pop
bound
add
cmp
add
pop
jl
(bad)
cmp
mov
add
cmp
loop
stc
outs
mov
fisttp
add
xchg
inc
push
aam
into
int
idiv
push
add
psubusw
call
push
push
sbb
sbb
dec
stc
clc
or
push
jo
(bad)
pop
in
out
and
cmp
test
retf
jg
add
rcr
std
bound
mov
jmp
cmp
std
loop
push
test
sbb
push
dec
stc
lods
mov
add
push
loopne
(bad)
ret
retf
mov
cmp
sub
scas
aaa
(bad)
cld
mov
push
out
adc
pop
ret
fld
mov
int3
fcom
ins
mov
and
cdq
pop
push
jmp
retf
call
imul
call
adc
push
clc
sbb
mov
loope
repz
loopne
push
lea
(bad)
loop
cmp
lea
ret
fld
ret
push
int
stos
call
(bad)
inc
popa
xchg
add
xchg
pusha
bound
add
xchg
jo
mov
test
jmp
push
dec
push
ja
add
add
inc
popa
jg
add
ja
or
ja
call
sbb
fisttp
in
sbb
bound
fdivrp
int
add
inc
outs
push
push
xor
loop
loop
stc
icebp
imul
jmp
sub
jbe
push
sub
lods
in
jbe
call
leave
shl
stos
rcr
dec
add
bound
jae
add
std
test
lea
ja
dec
add
sbb
adc
push
ja
push
mov
pop
add
shr
jge
vminps
rcr
ins
xor
inc
add
pop
pop
and
or
std
mov
inc
lea
add
ficom
or
call
inc
aam
jne
ins
dec
inc
pusha
jnp
push
ins
or
lods
push
adc
mov
aaa
mov
data16
pusha
jnp
(bad)
jg
xchg
inc
sub
pop
pusha
jnp
fld
add
add
in
nop
enter
cdq
(bad)
bound
and
test
push
push
push
(bad)
sbb
call
(bad)
jp
inc
push
xchg
sbb
jnp
call
rcl
loopne
push
push
adc
popa
call
rcl
int
and
push
int
(bad)
enter
xchg
jo
add
add
push
int
fst
mov
jg
(bad)
inc
add
dec
push
jns
mov
jp
jmp
call
nop
cmp
inc
fbld
loop
(bad)
cld
bound
test
cld
xchg
(bad)
adc
dec
mov
std
in
sub
call
pop
call
add
add
gs
loop
mov
add
iret
call
(bad)
clc
or
out
call
idiv
push
adc
push
jmp
sbb
add
lock
inc
add
(bad)
bound
cwde
adc
sbb
(bad)
rcl
nop
rcr
retf
add
clc
ins
fadd
add
add
(bad)
clc
scas
loop
in
mov
add
add
movs
jg
movs
sbb
sbb
add
adc
xchg
cmp
jmp
popa
or
(bad)
out
jne
les
outs
fimul
fnstenv
xchg
inc
imul
pusha
inc
and
add
add
or
pop
shl
gs
or
sbb
cwde
outs
loope
in
push
jmp
sub
add
add
lods
add
call
or
scas
test
ret
jmp
adc
in
cli
mov
cmp
jcxz
inc
mov
mov
loopne
sbb
add
add
psubusw
call
inc
in
fist
dec
loopne
sbb
mov
add
shl
adc
or
bound
pop
clc
or
out
jb
sbb
cld
push
hlt
mov
inc
dec
popa
nop
pop
imul
test
jne
inc
imul
add
push
xor
push
jnp
fidiv
or
add
fwait
rcr
call
jl
ins
call
ror
sub
pop
ret
dec
outs
ins
in
inc
cli
aas
sub
imul
stc
lea
mov
gs
adc
ins
(bad)
(bad)
fsub
(bad)
sahf
mov
sbb
inc
jo
jmp
stc
adc
out
loop
dec
(bad)
retf
outs
or
out
loop
and
inc
jns
aad
sbb
std
and
ins
or
out
push
add
pop
inc
xchg
adc
in
push
add
jg
add
lock
add
sub
das
outs
push
add
jae
(bad)
lds
pop
cmp
sbb
and
inc
adc
jg
lea
into
stc
xchg
outs
fiadd
xlat
mov
adc
adc
aam
push
add
outs
(bad)
les
cmp
add
add
loop
nop
inc
std
push
out
inc
loopne
bound
outs
ins
pop
lock
sbb
dec
push
xor
cmp
sub
xchg
dec
dec
int
mov
movs
inc
or
es
jg
jge
jne
push
adc
outs
push
(bad)
fdiv
push
push
and
in
(bad)
fcom
pop
(bad)
test
push
stc
pop
mov
stc
stc
dec
push
jecxz
aad
mov
add
stc
jecxz
inc
stc
lahf
bnd
mov
popa
and
sub
mov
gs
mov
mov
jb
adc
adc
jo
add
xchg
add
add
and
int
call
ins
fdivrp
sahf
jne
(bad)
jmp
xchg
aad
xor
int3
cmp
inc
xor
inc
pop
inc
in
mov
loop
loope
add
add
movs
aad
dec
icebp
aam
xor
inc
retf
dec
xchg
sbb
sbb
add
add
cmp
pop
in
pop
add
dec
jecxz
push
xor
jmp
cmp
call
cwde
pop
shl
loope
fcomp
pop
add
adc
fidivr
data16
leave
sub
jns
hlt
inc
push
jno
inc
inc
xchg
add
ins
pop
or
or
xlat
xchg
add
add
adc
stc
mov
sbb
fdivrp
add
xlat
inc
loope
lock
jno
pop
fcmovnb
fld
fisttp
or
mov
and
stc
jne
pusha
fimul
sbb
fwait
into
sbb
call
fcmovnbe
pop
push
inc
retf
or
add
add
rol
mov
fdivrp
bound
aas
and
push
pusha
call
jecxz
(bad)
(bad)
xchg
dec
jns
cmc
inc
push
pop
fwait
inc
fimul
and
dec
push
jbe
call
dec
addr16
loop
xchg
shl
popa
cmp
lea
jno
or
add
push
rcr
adc
out
pop
push
adc
cwde
jno
sub
(bad)
loope
sub
cs
test
add
rcr
rcr
pop
fiadd
fidivr
add
test
add
bound
(bad)
sub
(bad)
loope
fcomp
push
cmp
add
add
ficom
sbb
sub
and
in
add
xchg
push
inc
push
retf
push
add
cmp
std
bound
sbb
push
mov
pop
(bad)
test
push
sahf
popa
(bad)
in
adc
call
mov
push
and
add
daa
mov
and
mov
jmp
push
fisttp
or
adc
jmp
imul
add
and
or
dec
jecxz
fcmove
popa
add
and
inc
xchg
imul
jmp
fimul
or
ret
adc
add
test
ins
call
add
ficomp
ficom
test
gs
mov
fiadd
jge
mov
jno
add
rcr
adc
cmp
fdivrp
inc
add
in
icebp
sbb
stos
jns
add
adc
add
or
jbe
iret
call
pop
add
add
add
sbb
cmp
push
inc
adc
jmp
in
push
push
call
mov
mov
pop
(bad)
lods
mov
add
lahf
inc
and
push
jns
mov
sbb
fidiv
dec
jno
fadd
inc
cld
cmp
add
add
pop
mov
pusha
push
xlat
inc
popa
test
arpl
imul
inc
pop
aam
push
(bad)
les
jle
lea
loop
jmp
xor
icebp
pop
fiadd
rol
jge
stos
rcr
mov
add
or
push
xlat
inc
adc
lock
push
fidiv
add
push
push
nop
icebp
jge
call
pop
ficom
push
fsubrp
test
xchg
jne
inc
xchg
push
push
push
pusha
xor
bound
mov
imul
rol
push
pop
fimul
bound
ret
dec
push
add
pop
in
(bad)
add
push
and
faddp
or
inc
push
push
xchg
daa
test
mov
shl
call
cmp
add
and
pop
or
xor
mov
jmp
sbb
add
addr16
adc
inc
frstor
add
add
inc
dec
xor
mov
test
mov
(bad)
sbb
popf
adc
frstor
sbb
call
xor
mov
mov
or
dec
fadd
ja
dec
xor
test
rcr
pop
rcl
fadd
aaa
pop
rcl
icebp
cld
in
cmp
add
add
add
jmp
mov
fdivr
pop
fstp
push
pop
in
jbe
(bad)
xlat
or
cwde
in
xchg
test
jo
mov
in
push
call
push
mov
xchg
aas
inc
sub
jmp
aad
add
inc
movs
retf
cmp
inc
mov
retf
test
add
pushf
push
sbb
xchg
aad
gs
xchg
inc
gs
cmp
inc
gs
sahf
cvtpi2ps
sbb
or
add
add
sbb
push
jle
inc
pop
repz
test
vpunpckhqdq
push
push
mov
aad
sbb
vcomisd
sbb
pop
icebp
cmp
aad
or
cmps
shl
adc
pop
ins
ss
in
test
addr16
sbb
add
shl
jg
fdivrp
cmp
shl
test
inc
push
xchg
sub
loope
cwde
popa
lock
fimul
(bad)
call
sbb
and
mov
lds
jno
add
add
xor
call
sar
pop
and
fstp
cld
add
mov
(bad)
xchg
adc
push
push
movs
or
ret
mov
cmp
fistp
or
add
sar
push
in
dec
pop
loopne
inc
ins
adc
add
add
and
loop
icebp
sbb
nop
and
jmp
scas
(bad)
popa
add
gs
adc
cmps
push
(bad)
clc
mov
pop
hlt
outs
ret
sbb
add
pop
nop
inc
fisttp
jns
sbb
aad
stc
or
sub
mov
hlt
loop
nop
add
jp
jg
fnsave
push
xor
sub
int3
add
cdq
dec
sbb
retf
sbb
sbb
push
sbb
pop
rcr
xchg
cmps
adc
mov
pop
test
jge
test
(bad)
stc
add
add
arpl
inc
pop
call
add
add
sbb
pop
cmps
cmp
addr16
loopne
cmps
gs
pop
inc
gs
push
add
loope
xchg
cmps
nop
dec
stc
cdq
xlat
jae
push
cmp
mov
call
loop
rcr
jbe
out
cmps
pop
push
out
cmps
adc
push
add
retf
cld
jmp
jnp
add
add
mov
pop
loop
adc
fiadd
mov
jb
push
mov
mov
mov
jg
add
test
and
mov
sub
push
jle
pop
inc
mov
lock
(bad)
pop
cmps
mov
pop
jecxz
loope
sub
fidivr
sub
sub
mov
out
push
test
loope
std
in
jmp
mov
fst
mov
rcl
mov
lds
sahf
in
(bad)
sti
aad
scas
mov
sbb
enter
or
jecxz
aad
ins
call
sub
cli
movs
pop
pusha
fimul
cmps
retf
cdq
jae
fdivr
loope
push
push
nop
add
adc
cmps
retf
push
dec
nop
add
cmps
add
test
or
test
mov
loope
add
sbb
push
outs
jecxz
adc
sbb
jns
loop
adc
test
(bad)
cmp
aas
pop
pop
inc
int
push
xor
ja
cmp
fsubr
in
cmp
cwde
aad
inc
push
test
push
mov
sbb
es
jp
test
adc
jne
or
cmps
(bad)
loope
popf
mov
inc
ret
dec
mov
bound
pop
retf
mov
test
xor
ret
add
test
add
add
shl
fs
push
and
xor
addr16
push
sahf
jo
mov
fld
or
or
fsubr
add
(bad)
ficomp
add
popf
in
sbb
test
push
add
call
ret
call
nop
movs
sbb
aam
push
jl
sbb
jnp
inc
movs
and
inc
(bad)
js
loop
bound
dec
leave
loope
and
inc
push
fild
cmps
mov
jmp
imul
adc
inc
ret
xor
aad
adc
enter
add
loope
pop
or
ins
or
test
mov
(bad)
aas
sub
iret
vpmulhw
sub
fadd
loope
test
fdivrp
ins
adc
xor
or
sbb
call
call
ins
mov
sub
dec
dec
or
push
xor
rol
pop
arpl
rol
inc
xor
(bad)
call
adc
sbb
(bad)
fnstcw
add
test
or
mov
fwait
test
ret
repnz
xor
or
test
rcr
xor
imul
arpl
dec
or
jo
data16
sbb
leave
or
data16
adc
test
loop
dec
push
or
adc
push
data16
adc
pushfw
adc
mov
and
sti
sbb
adc
cmp
mov
imul
xor
nop
sbb
dec
stos
adc
sbb
fdiv
fild
add
add
dec
ja
in
or
int
pop
add
sbb
sbb
sub
push
data16
adc
sbb
mov
popa
ror
jbe
sub
call
cli
arpl
push
xor
or
sbb
ja
mov
xlat
loop
int
xor
test
add
add
add
iret
ja
jl
jbe
jl
jbe
lods
jno
mov
push
pop
iret
mov
sbb
pop
loopne
dec
iret
loop
jmp
nop
adc
in
adc
in
adc
in
adc
in
adc
jnp
das
in
adc
xchg
loop
cmp
or
mov
dec
ja
inc
test
data16
aam
popa
sub
mov
mov
les
jbe
mov
(bad)
inc
daa
test
add
or
mov
inc
add
adc
dec
xchg
push
jecxz
int3
pop
fdiv
(bad)
dec
ja
mov
fadd
add
add
int
or
sbb
sbb
push
data16
adc
sbb
sbb
cmp
jecxz
pop
jle
adc
xor
loopne
push
dec
loopne
push
push
loopne
push
and
loop
and
aad
add
jle
push
cmps
inc
adc
sbb
into
mov
xor
out
ja
hlt
or
mov
adc
imul
jns
inc
aad
or
cmps
ret
dec
mov
lods
jnp
test
in
adc
pushf
shr
push
push
jecxz
imul
cli
test
loope
test
add
fst
into
xchg
pop
idiv
retf
aas
stc
xlat
mov
fimul
jle
loope
sub
imul
xor
inc
push
cmp
jp
iret
ret
loope
or
in
aad
mov
inc
in
or
xlat
pop
loop
xor
fdivr
pop
test
sbb
out
cmps
cmp
and
inc
xchg
adc
jg
das
fisubr
out
addr16
sbb
ret
adc
ficom
retf
cmp
fimul
mov
loope
sbb
inc
adc
xor
inc
push
cmp
rol
loope
clc
daa
in
in
mov
in
xchg
and
push
stos
jge
lds
push
dec
(bad)
sbb
adc
test
movs
jl
loope
test
popa
inc
movs
in
mov
add
adc
jb
hlt
sbb
call
cmp
sub
dec
dec
loop
push
or
cld
(bad)
dec
xor
jecxz
out
add
rol
add
add
dec
inc
ret
adc
cmp
fadd
dec
dec
sti
loop
aad
mov
stos
jge
xor
out
mov
fnsave
gs
add
(bad)
les
and
adc
push
leave
fnsave
shl
add
add
pop
lods
sbb
mov
push
add
fist
add
imul
sbb
push
inc
test
es
mov
pop
jbe
das
popa
js
jge
adc
gs
add
pop
sbb
and
in
sbb
add
add
adc
imul
aas
inc
jmp
push
loop
pop
cmp
add
add
jnp
xor
mov
sbb
cdq
mov
inc
fs
gs
cld
ficom
loop
adc
jecxz
or
popa
imul
out
fstp
add
add
jo
das
mov
sub
xor
ffree
dec
sbb
mov
(bad)
in
pop
jge
add
jae
bound
cli
jnp
cmp
stc
mov
jmp
fidiv
push
dec
ret
sub
out
mov
fsubr
test
cli
rol
fidivr
sbb
pop
and
jns
sub
mov
out
push
fdivrp
in
or
and
(bad)
mov
loop
(bad)
mov
call
xchg
stc
jmp
sub
or
loope
sbb
cli
gs
sub
cmp
stc
in
sub
and
sbb
and
add
add
mov
mov
(bad)
push
scas
or
push
xchg
jae
push
scas
adc
add
cs
push
or
adc
push
dec
adc
outs
loope
or
push
into
inc
(bad)
bound
loope
and
ins
aam
ja
std
bound
call
data16
mov
cld
push
add
push
pop
adc
lds
(bad)
jmp
into
fidiv
das
ins
or
movs
add
jg
sub
pop
push
and
jecxz
cmps
cmp
pop
cmps
nop
jne
xor
inc
push
das
jge
jne
xor
xor
mov
cmp
add
in
or
jnp
cmp
add
add
sbb
xor
push
jmp
mov
xor
xchg
inc
leave
mov
sbb
(bad)
(bad)
sbb
pop
jno
jns
jge
enter
inc
in
dec
and
jb
mov
sahf
movs
pop
push
xchg
int
cmp
shl
shl
pop
inc
movs
sub
cmp
xchg
mov
cmp
mov
data16
mov
test
add
icebp
cdq
or
xchg
cdq
or
and
push
and
or
jge
mov
loope
dec
and
les
cs
jl
test
add
add
add
xor
and
ins
pushf
mov
aad
jecxz
in
adc
jg
loope
ja
shl
(bad)
sub
pop
inc
movs
dec
repnz
dec
gs
xchg
ins
and
dec
dec
and
mov
loope
sub
pop
fcomp
test
mov
popa
iret
pop
mov
test
add
test
fs
inc
xchg
fadd
pop
add
inc
stc
outs
outs
sbb
xlat
je
xor
push
mov
jo
xor
mov
xor
mov
int
jns
sub
dec
pop
add
xchg
je
mov
jle
inc
fimul
xchg
push
(bad)
or
pop
imul
sub
push
gs
sub
pusha
aas
mov
mov
pusha
inc
and
stos
push
add
jl
adc
enter
test
add
inc
push
sbb
adc
sbb
dec
jp
shl
(bad)
in
icebp
dec
int
mov
add
add
ds
pop
push
or
pop
cmps
or
sbb
mov
sbb
faddp
xor
add
sbb
sbb
mov
adc
(bad)
jmpw
or
xor
push
and
pop
inc
mov
int
call
add
fdivrp
sahf
xor
sub
adc
ds
out
loope
jmp
fnsave
ds
push
mov
adc
and
bound
(bad)
adc
xor
adc
cs
xor
xchg
inc
stc
sub
aas
fimul
xchg
or
xor
inc
dec
(bad)
loope
cdq
dec
push
and
pop
inc
mov
enter
mov
dec
xor
and
push
retf
mov
jmp
cdq
dec
sbb
mov
ds
and
call
push
cmp
lea
ds
out
loope
adc
aam
in
stos
push
add
call
fsubr
out
scas
(bad)
sub
dec
push
fdivr
add
push
dec
pop
fadd
(bad)
sahf
push
cmp
sbb
cmps
cmp
push
stos
loope
xor
ret
loope
or
inc
and
sbb
jno
pop
add
aas
stc
add
add
aad
faddp
test
in
adc
mov
int
push
mov
int
bound
fbstp
mov
sbb
jne
add
xchg
dec
pop
lock
jg
add
jmp
jg
adc
imul
add
inc
psubb
and
push
daa
add
aaa
inc
call
sbb
aas
ds
fimul
in
bound
fdivrp
jl
mov
push
pop
or
sbb
in
stc
jmp
ficomp
jo
jl
jg
adc
(bad)
inc
inc
ret
dec
mov
aaa
ins
or
sbb
rol
add
dec
sbb
dec
pop
cmp
les
call
stc
mov
aaa
ficomp
ds
ret
jp
lea
inc
push
sub
aaa
xor
mov
xchg
stc
mov
aaa
fimul
std
mov
lea
aaa
fisubr
dec
push
aam
jb
(bad)
cwde
cmp
call
(bad)
stos
sbb
popa
es
sub
aaa
and
mov
lea
push
call
pop
cmps
fimul
push
jcxz
inc
cmps
sbb
shr
sub
cmp
test
cmp
bound
aam
outs
leave
(bad)
cwde
cmp
out
jcxz
mul
add
call
xor
cmp
jl
loope
nop
adc
call
lods
sbb
push
dec
ins
aam
shr
call
sbb
push
movs
push
mov
inc
add
sbb
pop
add
aam
add
ret
add
dec
inc
gs
fcom
add
sub
fs
jle
add
pop
or
sbb
fadd
loope
cmp
or
pop
pop
loop
adc
push
and
xlat
xor
cld
jmp
inc
fnstsw
adc
sbb
pop
mov
call
cmp
int3
shl
pop
push
fnsave
cmc
mov
dec
lods
add
(bad)
les
test
add
inc
movs
(bad)
sbb
pop
shl
sbb
pusha
dec
shl
nop
stos
pusha
inc
push
cdq
loopne
pusha
cmps
test
gs
xchg
push
cmp
jb
jo
fstp
inc
mov
leave
inc
mov
jge
leave
imul
add
mov
mov
pop
inc
in
xchg
ds
sbb
mov
xor
std
bound
sbb
aam
ror
fisttp
loope
xchg
sub
ret
sar
call
dec
xor
(bad)
jmp
and
xor
adc
add
xchg
inc
jns
push
(bad)
fldenv
add
loope
je
in
jmp
xchg
test
adc
test
adc
add
cmp
push
mov
xchg
and
sbb
lds
sbb
call
aas
jns
in
add
dec
push
push
ss
xchg
add
add
pop
loopne
(bad)
(bad)
lds
mov
and
sbb
add
fadd
(bad)
stc
push
cmp
mov
imul
(bad)
or
add
fst
push
xchg
je
add
ficom
dec
movs
and
jge
add
outs
cmp
bound
inc
lea
test
adc
cmp
push
stos
dec
gs
and
push
push
pusha
icebp
xor
call
push
push
xchg
mov
cmc
loope
movs
sub
sub
aas
push
push
adc
xor
call
push
ret
push
xchg
gs
test
adc
adc
fdivrp
leave
fs
shl
push
add
add
(bad)
test
jno
add
cmp
xchg
and
jg
add
loop
fldenv
pusha
inc
in
cli
push
cmp
cmp
imul
cld
dec
fdivrp
add
or
loope
xchg
daa
mov
loop
fidiv
(bad)
test
add
add
arpl
push
sbb
dec
mov
setne
psubusb
jae
push
in
inc
ficom
lock
and
jle
add
aaa
xchg
and
jl
add
xchg
cwde
pop
pusha
aas
jns
test
xor
push
sbb
xor
push
cmp
add
(bad)
cli
aad
out
aas
push
lea
fimul
test
outs
lock
fidiv
shr
xor
call
cmps
xchg
mov
sub
call
(bad)
sub
push
push
loopne
ss
stos
inc
lea
fidivr
and
inc
ficom
lock
and
add
add
dec
cmp
bound
pop
call
mov
xchg
mov
(bad)
loope
aad
xchg
pusha
aas
push
push
pusha
or
sub
loop
cmp
jge
call
jbe
gs
in
jecxz
xchg
test
xor
rcr
fnsave
lock
sub
mov
or
add
add
sbb
or
and
mov
jbe
and
stc
(bad)
mov
adc
and
inc
call
cmp
mov
sub
sbb
in
jl
lock
add
fstp
pop
scas
push
mov
push
stc
ret
fimul
or
mov
dec
lods
fidiv
imul
inc
jns
test
add
or
jmp
out
rcr
call
push
pop
sub
loope
dec
lock
inc
push
ror
mov
mov
jns
test
add
inc
mov
add
add
mov
xchg
ins
pop
push
dec
ins
pop
cmp
ins
adc
aam
adc
pop
(bad)
cld
jns
test
jne
imul
add
or
(bad)
jae
(bad)
js
sbb
movs
fld
xchg
xchg
add
sbb
stc
test
dec
test
push
out
ficom
lods
jb
(bad)
fsqrt
push
sahf
inc
ins
pop
ins
nop
jne
adc
push
(bad)
ficom
scas
nop
cld
jns
test
jne
imul
and
or
mov
(bad)
sbb
aad
jnp
mov
jg
call
enter
movs
call
fdivrp
xor
popa
inc
xchg
or
add
add
or
jmp
xchg
sbb
xchg
rcr
adc
push
push
popa
inc
push
xor
pop
inc
inc
jnp
lea
mov
gs
push
pushf
pusha
cld
jp
test
add
adc
std
dec
das
std
bound
nop
jmp
rcr
cmp
add
inc
jmp
test
push
(bad)
cwde
inc
sbb
cmp
in
in
leave
jo
movs
rcl
add
fiadd
sbb
icebp
push
inc
(bad)
xlat
inc
sar
outs
sub
mov
imul
(bad)
or
sar
bound
xchg
jne
outs
and
adc
add
add
nop
hlt
jge
mov
(bad)
xchg
jne
ins
das
es
jg
push
nop
hlt
(bad)
cmps
in
cmp
inc
jnp
jge
mov
push
push
test
daa
out
fidiv
jle
xchg
shl
jo
adc
loope
push
jl
cmp
addr16
pop
add
cmc
ror
xor
mov
jl
inc
mov
sbb
gs
push
lea
cld
fdivrp
adc
mov
pop
ret
fld
adc
jno
add
jge
push
nop
ret
rcl
sti
mov
and
inc
adc
test
push
add
jg
add
add
dec
not
add
test
inc
cdq
push
adc
jp
cmp
fidiv
loop
mov
pop
jg
pop
(bad)
add
push
dec
adc
data16
mov
ins
(bad)
jecxz
idiv
jg
(bad)
call
js
imul
imul
push
nop
xor
push
ja
sub
fsubr
jae
add
in
push
in
loope
nop
lock
frstor
in
je
in
loope
jo
movs
call
push
clc
repnz
in
push
add
pop
icebp
call
jbe
in
dec
shl
mov
inc
xchg
mov
call
cmps
xchg
sbb
imul
add
add
mov
and
cmp
dec
xor
inc
push
inc
cli
dec
inc
adc
cmp
fs
jle
add
data16
imul
mov
call
fdivr
sub
sar
mov
sldt
add
sbb
add
xchg
jl
push
or
mov
cmp
add
cdq
enter
jne
mov
mov
jecxz
shl
movs
pop
push
test
out
jge
inc
and
sbb
jp
push
std
test
add
inc
mov
pop
mov
mov
jmp
ss
add
test
push
mov
sar
xor
sti
mov
addps
push
add
ret
aaa
pop
jns
xchg
mov
loope
mov
jge
add
rcr
adc
inc
jns
mov
mul
or
xchg
movs
pop
cmp
add
add
jp
jmp
add
sbb
or
jecxz
adc
add
nop
jl
xlat
ficom
pop
(bad)
jge
jo
sbb
ins
clc
xor
jl
sbb
dec
je
shr
ret
movs
rcl
shr
xor
sub
rol
add
add
add
push
xchg
inc
jns
push
call
add
and
rcr
je
ret
(bad)
fisub
xchg
inc
mov
dec
xchg
inc
leave
mov
push
add
inc
mov
dec
xchg
inc
leave
lds
bound
inc
stc
mov
and
inc
or
push
push
inc
dec
jns
aam
sbb
call
int
inc
stc
call
dec
shl
jge
loop
xchg
rcr
inc
leave
mov
sbb
add
sub
sub
sbb
jns
ficom
cmp
or
jmp
outs
jns
sahf
shl
dec
(bad)
lods
add
imul
add
outs
call
rcl
stc
sbb
xchg
and
jge
add
imul
dec
and
sbb
xor
cld
xchg
sbb
std
loop
aad
push
stc
or
daa
sbb
imul
(bad)
jmp
or
inc
gs
imul
add
add
adc
loope
and
movs
and
sbb
std
push
call
movs
and
jge
add
add
add
loope
aam
gs
push
call
add
out
jg
je
cdq
jp
add
xor
cmp
movs
jge
dec
movs
sbb
cdq
jg
add
in
jge
adc
push
pop
push
and
push
(bad)
test
mov
jmp
ins
push
mov
xchg
mov
and
add
add
push
lea
xor
repz
sbb
add
push
call
dec
lea
cdq
add
jg
(bad)
sub
sbb
movs
jg
call
push
jae
or
jb
or
add
and
mov
pop
add
outs
inc
push
cld
movs
and
jg
add
xlat
jnp
sar
xor
call
retf
lea
jg
sub
scas
jl
mov
xchg
loope
in
jmp
inc
outs
call
jl
je
cmp
stc
xor
add
cwde
mov
rol
cli
xor
add
xor
test
call
mov
xor
outs
gs
outs
or
push
leave
loope
aas
jge
icebp
gs
(bad)
jmp
push
sbb
and
outs
ror
fdivr
(bad)
clc
xor
sbb
test
retf
cmp
sbb
in
jecxz
aad
fnsave
outs
ror
shr
inc
aad
sbb
cdq
test
(bad)
(bad)
cmc
pop
inc
xchg
add
add
das
cmp
loop
xchg
and
test
add
sbb
mov
aam
mov
and
test
add
mov
add
dec
shl
js
neg
in
stc
add
test
and
sbb
sub
scas
test
pusha
sub
call
push
add
call
mov
sub
call
jge
pop
inc
xchg
das
movs
and
test
add
xor
loop
popf
and
test
add
aad
(bad)
xor
test
add
push
call
push
pop
mov
and
test
sub
xor
jmp
je
xchg
fst
mov
test
add
pop
ficom
test
call
mov
push
mov
jo
and
jb
mov
test
push
push
loop
into
mov
gs
retf
mov
xchg
lods
(bad)
ins
call
lahf
loope
pop
or
out
(bad)
xor
inc
cmp
sar
push
sbb
cli
(bad)
fidiv
pusha
or
push
mov
loope
xor
or
fisttp
cwde
(bad)
jecxz
adc
add
add
ss
bound
xor
mov
call
xchg
pop
ficomp
or
lea
call
jae
fsubrp
jns
sbb
loop
sbb
mov
loop
gs
push
ret
add
sbb
adc
bound
jo
daa
sbb
add
inc
call
scas
out
xor
inc
es
sub
push
jmp
call
dec
and
retf
dec
and
adc
push
inc
enter
inc
jmp
(bad)
jmp
loop
movs
sub
cmps
mov
jb
xchg
add
stos
or
xchg
add
sub
sub
je
mov
push
and
rcr
je
mov
rcl
mov
ficom
mov
xor
cmp
bound
inc
stc
mov
jmp
sub
fidiv
fst
push
mov
gs
pop
mov
or
jge
adc
and
pop
(bad)
push
pop
gs
daa
push
and
pop
(bad)
mov
or
ret
inc
ret
inc
jns
push
(bad)
fldenv
add
add
(bad)
mov
cmp
and
rcl
jp
push
and
aad
dec
push
and
aad
(bad)
cmp
push
and
aad
dec
push
add
pop
(bad)
mov
cdq
cmp
mov
add
mov
call
mov
pop
add
shl
xchg
jmp
sub
dec
and
retf
inc
adc
fidiv
jnp
xor
sbb
(bad)
hlt
xor
push
jns
cmp
jns
push
jg
add
mov
dec
push
scas
shl
cmp
mov
push
dec
sbb
adc
push
(bad)
push
pop
jne
add
add
dec
out
dec
jmp
push
mov
mov
xor
sbb
cmp
lods
stc
outs
push
ficomp
jmp
mov
retf
xchg
rcr
xlat
scas
mov
add
dec
or
retf
sub
jge
dec
and
sub
shl
dec
test
add
add
ror
dec
and
aam
leave
(bad)
aam
push
bound
adc
jle
call
and
push
adc
mov
jne
lds
push
and
retf
mov
aad
(bad)
call
inc
call
or
add
pop
push
bound
test
xchg
test
add
add
mov
mov
daa
fs
ret
or
push
(bad)
jmp
xor
popa
fidiv
adc
pop
faddp
sbb
(bad)
mov
add
pusha
fiadd
sbb
(bad)
add
scas
retf
mov
sbb
pusha
pop
jns
ja
loope
cwde
pop
sbb
(bad)
jmp
out
jg
or
jg
faddp
fucomi
fld
or
add
je
das
pushf
inc
jecxz
ficom
imul
hlt
pop
ficomp
pop
jnp
inc
das
lods
and
pop
faddp
sub
out
sahf
in
into
push
xchg
lea
out
add
les
xor
push
(bad)
loopne
xlat
inc
popa
test
arpl
pusha
ficom
test
(bad)
cmp
sar
push
das
xor
pop
add
ficom
adc
jmp
fld
std
out
cmp
add
xor
sbb
test
call
sub
mov
pop
loope
ficom
lea
add
add
pop
fdivrp
fwait
out
add
or
mov
pop
fdivrp
std
mov
xlat
push
mov
and
bound
lea
push
not
adc
jp
push
push
inc
push
nop
call
push
call
mov
mov
leave
and
inc
push
sub
add
add
std
jnp
call
sbb
rcr
inc
loope
lock
(bad)
call
pop
sub
loopne
lea
mov
mov
push
pop
inc
mov
aad
jmp
mov
mov
and
inc
inc
sub
push
sub
mov
sar
jl
fimul
push
sub
push
jmp
push
mov
jo
jg
loope
leave
mov
pop
adc
push
pop
stc
arpl
fiadd
rol
ds
or
lea
stc
xor
test
test
dec
mov
int
push
push
cmp
add
add
rol
add
cdq
les
popa
inc
adc
jecxz
dec
std
pop
mov
bound
adc
(bad)
loope
sub
fidivr
loopne
popa
inc
aad
movq
xchg
add
int3
out
jne
xor
jmp
mov
push
inc
test
movs
mov
add
in
jg
loope
out
(bad)
cmp
fmul
jg
xchg
add
dec
out
jne
das
sbb
push
mov
push
int
dec
call
add
iret
out
jae
add
sbb
push
nop
adc
pop
imul
pop
fimul
and
pop
stc
shl
pop
ficomp
push
(bad)
in
or
push
add
push
add
jg
adc
push
push
sbb
xor
push
dec
mov
inc
dec
in
xor
into
xchg
test
add
or
add
pop
inc
jmp
loope
gs
stc
sub
cmp
sbb
xor
push
add
jg
call
inc
bound
adc
jge
add
xor
mov
jle
(bad)
pop
cdq
test
in
pop
call
out
pop
sahf
fs
mov
xlat
test
jge
ins
popf
popa
ficom
jge
je
cdq
cdq
pushf
jns
sbb
xchg
push
ret
sbb
pop
jns
adc
xor
pushf
rcr
jo
icebp
mov
xor
bound
add
mov
(bad)
sub
jecxz
adc
mov
push
test
sbb
and
jge
lea
sahf
in
pop
cmp
cdq
cdq
add
dec
xor
(bad)
pop
call
aad
loop
scas
sbb
jbe
sbb
outs
and
inc
out
sbb
add
lock
test
mov
push
test
inc
xor
cmc
test
jne
ficom
lds
xchg
inc
mov
test
(bad)
test
xchg
out
test
push
mov
test
jmp
jg
push
iret
test
pushf
stc
jl
add
ins
pop
sbb
xchg
dec
leave
adc
cmc
xchg
test
imul
or
lock
test
add
or
mov
cwde
xchg
mov
loop
push
ins
dec
push
push
test
ror
(bad)
inc
mov
adc
leave
or
and
sbb
or
mov
fwait
repnz
(bad)
push
add
bound
out
loope
xchg
test
add
xor
fild
or
mov
jns
sbb
add
xchg
inc
mov
cmps
test
movs
xor
cmps
test
(bad)
sbb
sbb
icebp
cmps
xchg
add
or
add
xor
adc
test
pop
pusha
jg
dec
fcmove
loope
cdq
test
in
adc
sahf
in
sahf
inc
push
(bad)
fldcw
xor
js
add
add
or
clc
in
sbb
dec
adc
jmp
inc
push
in
pop
imul
sbb
std
test
add
jnp
xor
xor
std
rcl
jnp
lock
xor
std
mov
stc
xor
clc
push
sbb
int
pop
std
push
push
cld
bound
dec
jecxz
push
sar
mov
cmp
std
add
popf
and
sbb
std
shl
add
cmps
stc
add
sbb
pop
sahf
or
add
dec
stc
dec
and
js
mov
add
vmovntdq
(bad)
jmp
jg
inc
add
add
ins
add
adc
cld
int
jmp
push
mov
(bad)
sub
add
(bad)
jge
in
inc
jge
retf
(bad)
int
xor
call
or
js
jg
push
out
xchg
dec
or
jg
call
es
(bad)
clc
bound
mov
push
inc
ja
cwde
push
nop
mov
jle
inc
or
js
jg
push
pop
add
out
dec
ja
push
pop
lahf
aam
(bad)
loope
in
ror
jp
fiadd
aas
jge
lea
jle
(bad)
mov
call
dec
(bad)
fadd
(bad)
adc
xlat
inc
add
add
fdivr
pop
mov
mov
ret
fld
aad
add
and
inc
jge
cdq
or
push
iret
adc
sbb
fld
ins
add
retf
mov
movs
or
pop
add
push
xor
jge
les
hlt
vmovaps
add
add
push
scas
in
dec
rcl
stos
ret
fld
mov
add
pop
inc
pop
jo
and
in
push
add
or
call
mov
lea
rcr
cmp
iret
push
(bad)
cwde
jns
out
xchg
in
jo
lds
rcr
push
add
(bad)
adc
call
push
inc
or
(bad)
shl
inc
loope
lock
inc
or
(bad)
sbb
out
xchg
in
dec
push
ss
or
call
into
inc
push
lea
into
xchg
mov
js
call
fisttp
std
in
adc
and
add
nop
rcr
jmp
data16
inc
push
nop
xor
inc
xlat
inc
popa
test
xchg
stc
js
lea
(bad)
bound
popf
and
call
int3
cmc
add
jg
jnp
cmp
aad
jmp
or
(bad)
sbb
(bad)
mov
xor
pop
mov
and
add
push
test
add
add
(bad)
bound
test
sbb
add
jnp
push
sahf
inc
xlat
inc
popa
(bad)
lock
xchg
test
add
sbb
fisttp
dec
retf
push
fcom
pop
imul
mov
test
push
shl
push
inc
or
add
jp
push
fcmovnu
fisttp
(bad)
aad
sub
xchg
test
jp
inc
pop
cld
pusha
ins
es
pusha
jns
les
xlat
inc
popa
mov
push
test
ficomp
into
xchg
(bad)
loope
fdivrp
or
rcl
jo
(bad)
bound
and
push
pusha
(bad)
in
std
inc
jns
imul
ficom
add
call
or
xchg
lea
rol
std
add
push
lea
mov
jmp
push
adc
jns
push
lock
(bad)
call
adc
popa
(bad)
sar
add
sbb
push
into
xchg
jne
imul
outs
stc
inc
sub
ret
out
aad
push
xor
loope
(bad)
(bad)
(bad)
outs
xchg
inc
mov
test
mov
inc
mov
push
mov
cmp
or
lea
xor
push
jge
adc
int3
dec
loopne
push
in
mov
xlat
inc
add
fiadd
shr
sbb
inc
push
add
add
adc
shl
jnp
adc
test
dec
sbb
ins
jns
push
out
jl
jne
push
adc
outs
stc
sahf
call
popf
sbb
adc
jge
mov
outs
fiadd
rol
ins
aam
cmp
std
inc
das
cmp
(bad)
fmul
xlat
inc
popa
jge
test
ins
std
pop
add
repnz
out
fwait
in
inc
or
jmp
fld
std
pop
or
loop
xchg
mov
ins
fdivrp
stos
rcr
mov
cs
add
xchg
inc
icebp
out
lea
gs
xchg
jge
fdivrp
sbb
fld
add
retf
jns
call
sbb
push
cld
movs
adc
fsubrp
int
fdivrp
pop
jne
test
int
dec
push
cld
mov
outs
faddp
cwde
jns
call
in
les
movs
rcl
inc
push
pop
cld
lods
push
(bad)
les
(bad)
fdivrp
mov
mov
xor
imul
add
fiadd
pop
mov
(bad)
adc
add
clc
or
out
call
xchg
jnp
(bad)
int
dec
outs
or
es
xor
in
push
nop
inc
pop
jmp
ins
stc
mov
mov
lods
hlt
inc
ins
fsubrp
mov
xchg
mov
ins
fdivrp
ins
adc
push
lea
add
add
fdivrp
add
adc
outs
inc
push
adc
shr
ins
je
ficom
cld
lods
mov
nop
in
sub
xchg
jne
inc
adc
inc
push
loopne
stos
call
mov
xchg
jne
jne
adc
outs
inc
push
nop
clc
(bad)
jno
out
mov
jmp
xchg
call
add
push
sub
jbe
std
inc
outs
(bad)
(bad)
adc
and
jno
icebp
and
ins
lea
bound
pop
or
scas
fidiv
add
or
in
clc
es
xchg
dec
and
jp
outs
inc
push
loopne
sub
dec
pop
cld
push
jbe
inc
push
outs
(bad)
les
add
add
add
or
call
mov
adc
mov
jno
out
mov
or
call
call
idiv
mov
add
jge
push
jnp
mov
xor
aam
test
add
add
test
cmp
or
push
test
xlat
inc
jns
sbb
mov
jecxz
push
add
jno
mov
mov
jmp
xor
sub
nop
stc
mov
pushf
leave
fnstcw
dec
stc
test
add
dec
in
(bad)
bound
push
and
mov
jno
jmp
fsub
call
jle
je
mov
fisubr
out
loope
aad
sbb
loop
xor
add
popa
clc
neg
add
sbb
gs
ins
or
pusha
jno
je
mov
xchg
stos
jae
pop
mov
add
std
add
mov
fstp
inc
std
and
and
ins
jnp
inc
jno
push
inc
xchg
inc
add
mov
push
pop
mov
mov
bound
shl
jo
adc
loope
imul
xor
add
push
push
adc
xor
mov
cmps
std
out
mov
(bad)
fdivr
xor
(bad)
cdq
cdq
or
and
icebp
fdivrp
lds
push
and
aad
jl
test
fimul
in
sbb
out
sbb
sbb
sbb
dec
pop
push
test
push
loope
aad
xchg
mov
movs
push
cmps
add
les
call
cdq
jbe
imul
fstp
js
lea
faddp
adc
add
cmps
inc
push
bound
fst
(bad)
jp
je
inc
push
and
test
or
(bad)
xor
or
add
add
xchg
jnp
jg
xchg
mov
push
loope
adc
pop
paddw
mov
add
test
jecxz
push
push
pusha
jg
ret
xlat
cmc
adc
jmp
lea
mov
xchg
and
sar
ret
movs
cmc
adc
xchg
jmp
lea
movs
inc
call
in
xor
add
add
jmp
cmp
or
and
ins
inc
push
adc
shl
mov
adc
mov
sbb
adc
jg
test
test
lock
xor
and
jg
add
mov
bound
icebp
(bad)
sub
add
movs
sbb
in
cmc
fdivrp
inc
or
add
test
add
add
adc
sti
or
out
cdq
jbe
imul
js
mov
into
rcl
jg
inc
push
add
fst
cmps
js
punpckhbw
xor
inc
mov
add
inc
lea
jg
cdq
lock
push
retf
and
jle
add
rol
sub
jge
jl
push
dec
or
and
addr16
sar
pop
mov
pop
leave
jmp
vpaddd
loop
push
mov
mov
mov
jl
jo
sbb
push
fidivr
pop
dec
cld
pop
addr16
loope
sahf
imul
fldenv
push
add
jg
xor
es
push
stos
test
les
jo
jle
push
retf
into
mov
xor
(bad)
xchg
test
jmp
ins
mov
lea
pop
push
inc
data16
(bad)
les
loope
xchg
jle
call
sub
nop
inc
jns
stc
daa
daa
js
pop
sar
xor
sbb
add
dec
hlt
sbb
in
stc
add
mov
or
es
jg
xchg
je
lods
stc
movs
adc
mov
mov
or
icebp
ds
and
fucom
jmp
or
and
data16
pusha
ja
or
ret
dec
test
(bad)
pushf
mov
ins
(bad)
adc
jnp
push
sub
or
add
test
add
and
std
push
pop
icebp
(bad)
fldcw
jo
push
test
push
mov
adc
add
add
(bad)
cdq
mov
loop
or
fdivrp
retf
int
test
clc
sbb
in
xlat
test
sub
add
jge
ins
and
push
push
shld
test
add
adc
adc
jnp
adc
xor
call
ss
lea
mov
lock
jg
push
aas
adc
jns
sbb
push
mov
rcr
fiadd
push
test
mov
test
add
or
mov
mov
push
mov
mov
xor
ins
test
pop
and
or
and
inc
push
and
jge
mov
mov
je
inc
xchg
and
test
add
outs
and
sbb
xor
js
add
jnp
adc
inc
cmps
or
js
loope
or
add
sbb
sbb
inc
jge
add
jge
call
jmp
je
xchg
call
add
add
push
sbb
jg
(bad)
push
(bad)
xchg
pop
in
sbb
or
add
or
add
add
and
or
lds
xchg
mov
inc
loope
xchg
inc
xchg
and
jl
add
push
lea
mov
(bad)
test
sbb
push
mov
xchg
jle
add
add
pop
push
div
xchg
push
sbb
test
xchg
and
jge
add
or
add
les
call
xor
or
lahf
sbb
and
and
ss
call
iret
jge
lea
xor
push
rcl
movs
imul
add
inc
or
add
add
cwde
xchg
sbb
std
rol
into
call
fld
test
sbb
(bad)
xor
inc
shl
xor
call
pushf
shl
es
inc
lea
adc
add
jnp
add
add
dec
mov
mov
mov
sbb
shr
jnp
jle
pop
jg
inc
(bad)
sbb
or
call
or
add
(bad)
jnp
adc
xor
call
cmp
sbb
push
xor
dec
jnp
xor
mov
add
xor
pop
cmp
and
sbb
in
gs
addr16
inc
jge
(bad)
jmp
mov
jmp
xor
call
pop
ret
xor
mov
loope
movs
jg
add
add
pop
sbb
mov
sbb
gs
call
out
arpl
sub
add
clc
scas
sbb
mov
jle
jge
adc
cmp
shl
or
add
cmp
bound
add
jle
test
fdivrp
lds
sbb
cmp
adc
lea
fdivrp
bound
dec
mov
lock
addr16
sbb
jp
adc
xor
fstp
in
lods
and
std
shr
jp
adc
cwde
inc
jle
pop
popa
xchg
ror
push
jg
cmp
dec
or
push
daa
lea
std
rcl
std
add
push
cld
pop
push
sub
add
sub
push
mov
fiadd
pop
mov
cmp
jg
pop
popa
mov
add
outs
push
push
adc
call
mov
sub
test
xchg
loopne
mov
sbb
mov
add
add
xadd
sbb
(bad)
aas
test
xor
or
call
cmps
dec
adc
add
xor
pop
leave
in
or
xlat
jp
jo
cwde
(bad)
bound
fist
test
jmp
in
or
lea
ins
aad
add
in
xor
push
test
dec
push
(bad)
push
and
mov
inc
loope
lock
(bad)
push
push
fucom
in
popf
mov
dec
aaa
inc
shld
ins
xchg
(bad)
pop
xchg
jns
and
sbb
call
sahf
push
push
push
jo
jl
bound
fdivrp
push
dec
push
cld
fisubr
(bad)
aad
push
push
push
(bad)
(bad)
push
sub
push
or
lea
sbb
push
lock
sbb
loop
pop
add
aam
push
outs
push
mov
fwait
dec
lea
cmps
rol
fwait
inc
jno
dec
or
jae
std
push
add
add
add
pop
clc
or
dec
dec
imul
adc
add
inc
inc
mov
aam
inc
and
std
bound
fdiv
push
or
rcl
call
push
std
adc
call
or
cmp
push
mov
xchg
dec
pop
out
fwait
in
push
leave
adc
jo
inc
call
fisub
(bad)
sub
sub
leave
adc
push
mov
cmp
fimul
sar
jmp
or
mov
or
call
outs
sbb
call
xchg
fwait
dec
sub
sbb
mov
xchg
fwait
dec
or
jg
enter
add
add
je
or
pop
rcl
call
dec
jb
xchg
fsubrp
cmps
or
arpl
mov
mov
fwait
dec
popf
xlat
lock
cmp
cmp
pop
imul
enter
std
bound
je
or
(bad)
adc
jnp
(bad)
into
jne
xchg
inc
jge
jmp
mov
xor
dec
pop
push
call
pop
add
mov
push
adc
jne
call
es
and
xchg
fwait
dec
icebp
push
cwde
js
test
push
lds
mov
lock
cmp
adc
mov
jmp
in
add
int
add
add
push
or
call
jmp
cmp
add
sbb
or
fdivp
adc
mov
lock
lock
hlt
jae
adc
push
pushf
pop
and
ror
or
fwait
inc
in
addr16
arpl
push
(bad)
retf
mov
aad
pop
jge
jne
or
fdivr
cmp
cs
lea
or
std
ds
add
add
call
jge
aam
ret
sbb
pop
cmp
std
push
sti
fmul
addr16
jbe
ja
push
test
push
das
mov
dec
rol
add
add
or
arpl
ja
push
nop
lock
sbb
stos
jbe
or
push
jmp
lock
mov
fistp
or
in
pop
xchg
inc
aad
xlat
inc
adc
test
xchg
out
xchg
push
xor
pop
jb
call
out
or
dec
cmp
into
push
(bad)
sub
call
(bad)
cmp
mov
cmp
push
test
mov
(bad)
iret
push
(bad)
fadd
lock
sbb
push
(bad)
or
call
push
ds
ja
ret
inc
mov
cld
clc
mov
mov
sbb
movs
aad
add
add
in
jle
add
inc
inc
xchg
mov
mov
cdq
enter
push
push
dec
push
pop
push
pop
test
les
jle
add
and
add
fwait
inc
pop
add
test
hlt
jge
mov
mov
cmp
adc
sbb
xchg
lock
sbb
adc
add
add
int
jae
jp
(bad)
pop
mov
loope
xchg
mov
push
imul
jp
pop
jg
lahf
cmp
cmps
push
(bad)
test
jle
cmps
outs
fist
or
outs
fist
or
jns
loop
gs
into
add
lock
in
push
add
test
mov
sbb
adc
test
cdq
cwde
mov
adc
test
mov
mov
inc
pushf
and
jle
add
ins
and
sbb
cmp
xlat
sbb
js
sbb
movs
sbb
cmp
loopne
add
std
loopne
xchg
cmp
adc
xchg
bound
add
fst
adc
mov
mov
pushfw
add
adc
sbb
mov
and
jl
add
inc
adc
jl
add
clc
jns
jge
test
out
loope
in
pushf
and
jge
add
add
movs
sbb
fiadd
cmp
xchg
sbb
(bad)
js
(bad)
sbb
xchg
sti
mov
adc
jge
fidiv
outs
fistp
sbb
mov
and
mov
psubusb
sbb
push
jmp
mov
jns
mov
lea
dec
lea
adc
stc
jns
jmp
xor
dec
sbb
iret
jl
dec
stc
shl
fnstsw
push
mov
mov
loop
movs
imul
mov
ror
test
inc
inc
xchg
mov
add
add
pop
sub
sbb
add
rcl
icebp
pop
call
mov
outs
add
mov
push
imul
dec
gs
or
imul
and
jne
add
mov
dec
sub
inc
aad
fmul
push
addr16
add
add
gs
test
gs
or
push
push
int
adc
push
jge
jns
sbb
pop
push
sti
or
aas
jo
jmp
sbb
push
mov
mov
fist
(bad)
jg
mov
outs
fistp
add
add
cdq
dec
bound
cwde
fdiv
xlat
add
cld
test
jg
add
outs
add
push
mov
not
adc
movs
outs
and
call
cs
cdq
je
xchg
lea
ror
dec
inc
(bad)
sub
jo
fs
dec
add
add
fbstp
bound
xchg
rcl
pop
and
test
mov
sbb
jnp
jmp
or
adc
sbb
mov
inc
dec
xor
sbb
fbstp
pop
mov
sbb
aad
(bad)
jbe
sbb
movs
jle
add
add
test
imul
leave
sbb
mov
imul
enter
aad
test
jle
je
sahf
cdq
sbb
mov
dec
pushf
and
jl
add
xchg
arpl
outs
arpl
and
in
jns
sub
scas
dec
dec
call
lods
les
add
add
add
jp
sbb
cmp
xlat
jge
add
sbb
push
outs
and
call
cld
push
mov
adc
mov
add
call
test
pop
imul
adc
pushf
xchg
cmp
test
enter
mov
lea
lock
gs
and
adc
push
or
cmp
xor
sbb
and
jl
add
cdq
les
test
fwait
or
inc
or
aam
adc
or
cmp
test
in
les
and
dec
or
add
test
movs
lock
xchg
xor
cmp
xor
jb
inc
mov
imul
jno
push
cmp
and
jno
sbb
call
lods
(bad)
lods
and
jns
test
xor
(bad)
test
imul
jno
mov
add
push
add
jno
neg
retf
mov
test
jne
add
mov
shl
adc
push
int
jmp
push
gs
test
enter
ficom
jle
jle
out
mov
fwait
test
jmp
(bad)
sbb
pop
dec
push
bound
test
xchg
popf
pop
sbb
and
jne
pop
das
lock
xor
test
sbb
mov
push
add
add
dec
add
adc
pop
sbb
jmp
cmps
sbb
std
push
std
loop
pushf
sbb
mov
adc
add
add
add
pushf
and
sbb
ja
repnz
push
pop
push
(bad)
leave
cmps
ins
(bad)
fldenv
add
add
add
inc
pushf
and
sbb
leave
dec
into
push
pusha
pop
sahf
pop
pop
sbb
fstp
push
and
add
sbb
cmp
out
sbb
(bad)
jmp
mov
add
pop
cmps
loopne
movs
xor
inc
pushf
and
sbb
and
sbb
lods
out
jmp
movs
xor
xor
sbb
rcl
adc
sbb
add
aaa
call
jge
pusha
inc
and
sub
(bad)
test
mov
jmp
add
cmp
pop
fild
pusha
stc
cmp
in
sbb
cli
cmp
xlat
sbb
cmp
add
or
fiadd
or
sbb
out
arpl
push
sbb
cmps
add
add
nop
push
push
loop
hlt
jns
sbb
add
xor
inc
lds
test
add
add
lock
pop
fist
in
lods
and
sbb
std
sbb
cld
add
inc
lea
xor
push
pop
fist
in
lods
and
sbb
sub
rol
mov
xchg
pusha
pop
fist
in
ins
and
inc
call
hlt
cmp
std
fstp
cld
add
inc
lea
mov
mov
xchg
jg
jno
pop
fist
in
ins
and
inc
jbe
mov
xchg
stc
mov
xor
push
add
ins
and
inc
outs
add
int
sbb
icebp
cmp
imul
hlt
daa
jg
sub
into
pushf
sub
lea
inc
pushf
and
test
add
inc
push
add
inc
push
push
(bad)
jmp
mov
xor
adc
ins
and
aas
pushf
and
test
add
push
sahf
pop
xchg
jle
lea
push
and
jmp
sbb
stos
add
addr16
cs
dec
jmp
rol
mov
das
call
test
pushf
and
jle
add
call
sbb
or
jmp
(bad)
fldenv
push
and
call
sbb
sbb
cmp
(bad)
jge
xor
dec
call
sub
cwde
test
pop
mov
add
jge
(bad)
sub
xor
sub
(bad)
push
sub
sub
xor
mov
push
call
push
in
push
scas
pop
fild
pop
test
mov
xchg
ins
and
inc
ds
pop
lahf
pop
lods
test
push
nop
icebp
cmp
imul
hlt
daa
test
xor
(bad)
xor
test
lea
inc
pushf
and
jg
add
dec
cs
pop
push
(bad)
jmp
mov
and
dec
ins
and
inc
pushf
and
jg
add
pop
sahf
pop
xchg
test
lea
mov
xor
out
mov
add
test
aaa
ins
push
push
jmp
rol
mov
add
mov
add
(bad)
and
test
add
test
add
in
lea
lock
and
lock
sbb
sbb
cmp
(bad)
sbb
ins
out
push
call
retf
sub
pop
or
xchg
add
xchg
movs
sub
pop
xchg
call
daa
cmp
jmp
add
add
sub
mov
sbb
push
xor
pop
fnstcw
loope
dec
stos
nop
inc
and
popf
lock
push
pop
fistp
stos
call
pushf
and
test
add
dec
push
add
jo
push
rcr
test
adc
stc
push
loop
aad
lock
and
cmp
fild
cmp
xchg
sbb
or
mov
je
cdq
(bad)
test
loop
xchg
lahf
lock
fistp
lock
ror
xchg
jns
loope
push
and
and
sbb
in
rcl
pop
fcomp
cmp
pop
sbb
std
add
test
stc
pop
add
sbb
add
dec
sahf
xchg
inc
pop
fwait
clc
push
cmps
cmp
mov
int
xchg
mov
and
addr16
pushf
push
add
jge
sbb
in
in
sbb
adc
sbb
std
ret
and
in
lock
sbb
add
mov
call
in
add
sets
adc
mov
jge
(bad)
fldenv
(bad)
mov
mov
je
aad
test
push
loop
aad
lock
adc
xor
aad
sbb
pop
mov
push
call
inc
jmp
and
add
add
pushf
and
jg
add
sbb
loopne
inc
lea
test
jmp
adc
sbb
mov
jmp
and
mov
lea
test
add
push
loop
adc
pop
fisttp
dec
sbb
iret
inc
addr16
and
lea
add
jg
lea
add
add
jg
mov
pop
fisttp
or
test
or
jg
test
stos
lock
pop
fild
xlat
push
add
pushf
and
jle
add
sbb
xor
sub
arpl
mov
sbb
nop
push
stc
add
sub
add
push
add
mov
mov
sahf
aaa
lock
ficomp
pop
cdq
cmp
sbb
data16
jecxz
pop
cmp
call
repz
mov
cmp
sbb
push
rcl
je
popf
lock
push
add
adc
cmp
cwde
push
loop
rcr
xor
mov
mov
push
jle
test
js
jmp
ror
cmp
imul
hlt
daa
jle
pop
or
cmps
lea
(bad)
test
jbe
lds
jnp
add
lods
lea
lea
aaa
pushf
and
jl
add
push
xchg
push
adc
fisttp
cmp
xchg
test
or
xchg
lea
xchg
lea
ins
bound
lock
xchg
lea
lea
dec
pushf
and
xchg
add
ins
push
push
add
xor
enter
or
and
or
push
test
or
jp
std
push
pop
fsub
or
xlat
test
or
or
add
xchg
lock
lods
inc
fild
lods
mov
push
lahf
sbb
xchg
add
add
push
xchg
adc
jp
inc
xchg
fbstp
ret
add
test
add
add
jmp
sbb
lods
and
test
add
out
bound
aam
and
inc
fist
adc
std
sub
cld
bound
test
in
lock
dec
inc
fist
adc
cmp
cdq
push
(bad)
jmp
cmp
(bad)
jp
lea
add
mov
fist
adc
std
in
out
loop
push
lea
cmps
pusha
call
sub
stc
mov
sbb
and
push
add
adc
ins
jbe
popa
aas
lahf
pop
popf
enter
mov
cmp
pop
sbb
std
into
(bad)
(bad)
out
sub
stc
rol
add
add
add
inc
pushf
and
test
add
push
jmp
push
(bad)
fldenv
in
add
or
mov
icebp
imul
pushf
and
sbb
test
call
ds
pop
cmps
sbb
pop
cmps
push
and
icebp
mov
or
push
sbb
mov
or
mov
add
fldenv
adc
mov
(bad)
cmc
lock
and
sbb
(bad)
and
sbb
std
dec
mov
bound
loopne
fldcw
push
and
lock
test
add
push
cmp
out
sbb
jmp
sub
dec
(bad)
sbb
add
add
add
jmp
inc
cmp
sbb
push
jmp
or
imul
mov
xchg
or
ins
and
ins
inc
aas
lahf
pop
lods
les
push
nop
mov
cmp
daa
sbb
cld
and
sub
stc
rcr
add
inc
pushf
and
add
add
sbb
in
push
push
(bad)
jmp
test
or
mov
or
inc
pushf
and
jg
add
sbb
loope
sahf
pop
xchg
sbb
sub
and
or
stos
or
sbb
ins
cmovge
bound
rol
movs
loopne
and
add
lods
cwde
(bad)
lds
and
sbb
mov
movs
and
sbb
sub
or
lea
or
and
or
and
jle
add
add
or
jg
sbb
adc
sub
pop
jg
lea
mov
dec
(bad)
sub
(bad)
out
movs
(bad)
push
inc
cmp
jmp
jg
push
inc
or
and
jle
add
aaa
arpl
push
add
sbb
adc
add
pop
sbb
or
add
and
in
or
ss
(bad)
clc
and
inc
in
retf
xor
push
push
push
icebp
cmp
in
sbb
icebp
xor
inc
nop
lea
data16
add
push
push
xor
cmp
jle
call
ss
lea
retw
ss
push
adc
cmp
push
jle
call
ss
lea
lock
imul
ins
and
ins
sahf
hlt
add
push
push
mov
cmp
adc
dec
in
mov
lea
lock
sub
fisttp
stos
aas
pushf
and
test
add
gs
hlt
push
aaa
xor
test
push
aad
lock
test
out
dec
imul
xchg
ret
jo
imul
xchg
add
ret
inc
(bad)
loope
mov
test
call
test
test
call
fwait
enter
clc
daa
test
dec
std
mov
inc
popf
fwait
rcl
test
(bad)
cdq
mov
dec
call
pop
or
sbb
aad
pushf
and
jg
add
test
rol
mov
js
push
jge
pop
xchg
(bad)
test
add
add
xchg
lock
leave
xor
sbb
lock
cmp
sbb
push
push
loopne
cmp
test
call
inc
xchg
lea
ins
test
popa
cmp
rol
cmp
and
sbb
xchg
cmp
inc
xchg
lea
ins
scas
repz
cmp
inc
je
jo
in
(bad)
add
aam
xchg
outs
xlat
sbb
gs
add
out
mov
cmp
in
xchg
dec
xchg
sbb
shr
rcl
cdq
inc
mov
xlat
push
add
xchg
sbb
(bad)
cmp
int
jmp
(bad)
out
inc
mov
add
jbe
(bad)
fldenv
add
push
adc
cmp
(bad)
jge
bound
or
imul
hlt
daa
sbb
sub
xchg
lea
(bad)
test
inc
loop
aad
lock
pusha
mov
cmp
add
xlat
sbb
ins
mov
cmp
inc
mov
retf
and
cmp
movs
add
add
sbb
sbb
inc
call
ficom
loop
push
cmps
lock
lock
push
sbb
shr
cmp
add
cmp
push
mov
out
adc
sbb
cdq
jbe
add
add
int
pusha
inc
aad
lea
add
add
sbb
in
(bad)
test
xchg
lock
(bad)
cmp
sbb
inc
push
xor
cmp
xchg
sbb
cld
cmps
sbb
std
mov
mov
or
fwait
pop
pop
push
fs
mov
faddp
sbb
push
add
add
dec
push
push
adc
fist
add
push
add
sbb
push
mov
lock
mov
jle
add
repz
bound
sbb
in
lock
fist
cld
stos
and
jge
add
cmp
cld
add
cmp
movs
xor
aam
fist
sti
imul
push
push
adc
icebp
cld
bound
mov
gs
fs
push
mov
imul
push
push
mov
cmp
lods
int3
cmp
daa
sbb
xchg
das
in
je
push
adc
sub
cmp
jo
cmp
jg
call
pop
add
test
add
and
sbb
jg
pop
or
add
or
xor
jmp
add
and
lea
addr16
icebp
shr
inc
gs
(bad)
out
jl
in
inc
aam
mov
call
xchg
jmp
ficom
arpl
lds
add
adc
jg
call
nop
sar
mov
lock
sbb
scas
inc
in
jo
cmp
add
jg
(bad)
push
std
js
movs
dec
pushf
and
jnp
add
lods
mov
cs
imul
cmp
cmp
(bad)
cmp
fwait
or
push
jle
add
sub
cld
push
inc
add
add
jbe
je
into
inc
lock
fldcw
pushf
pop
pop
jle
mov
mov
ins
and
xor
lahf
pop
pop
leave
sbb
stos
cmp
sbb
cmp
xlat
jge
pop
cmp
mov
sbb
lea
cmp
arpl
add
loope
push
lea
inc
(bad)
sbb
aas
call
cmp
ins
and
cmp
xor
xor
lea
rcl
ror
pop
cli
cmp
pop
test
popa
std
jl
jmp
rol
cdq
loopne
adc
cwde
(bad)
mov
pushf
and
test
add
shl
cmp
into
loopne
sbb
push
and
iret
mov
test
add
stc
cmp
cmps
test
arpl
cmp
loop
sub
pop
test
jmp
test
fstp
jl
les
jmp
cmp
test
pushf
and
test
add
cmp
js
or
les
add
adc
add
pop
sbb
int3
pop
add
test
fldcw
and
dec
out
loop
aad
retf
xor
xchg
push
push
adc
cmp
sbb
imul
mov
sub
jbe
mov
idiv
int3
sbb
sbb
mov
jmp
pop
out
popa
aas
push
push
shr
cmp
shr
inc
xchg
lea
lock
xor
push
stos
add
sub
push
push
pusha
jmp
sbb
(bad)
in
(bad)
xchg
lea
lock
push
xor
push
or
ins
and
int
and
test
add
cmp
cld
add
push
call
sub
ins
and
add
mov
add
sbb
inc
cdq
fs
dec
push
xor
pushf
and
sbb
sti
sub
arpl
adc
xor
add
lea
add
jmp
add
sub
test
xor
hlt
ins
out
xor
mov
cmc
add
add
push
jge
sbb
movs
xchg
fist
cmps
aaa
push
cmp
dec
xchg
neg
sbb
or
cmp
add
inc
cmp
loopne
mov
push
add
sub
test
ret
sbb
mov
inc
and
cmp
inc
push
imul
cmp
cmp
push
push
dec
add
gs
aad
nop
jns
test
jo
cmp
sbb
ds
add
add
jmp
add
adc
movs
add
sub
dec
test
sbb
mov
or
push
sub
jb
pop
add
stos
dec
int
sbb
mov
and
sbb
cld
add
inc
mov
test
fstp
in
add
add
add
in
mov
retf
test
cmp
out
sbb
jmp
lea
(bad)
test
sub
jmp
cmp
push
adc
cmp
cmps
jg
push
add
cmp
inc
jns
inc
push
lock
rcl
cmp
gs
(bad)
fldenv
loopne
push
jg
call
sahf
sbb
loop
adc
fist
add
and
stc
cmp
jg
call
pop
cmp
inc
push
push
mov
pusha
sar
in
sbb
pop
mov
ins
call
jge
pusha
inc
xchg
mov
inc
add
add
push
in
xchg
test
test
inc
push
adc
cmp
push
jle
push
fwait
add
addr16
outs
mov
add
or
mov
fwait
pop
sbb
jecxz
push
dec
fs
inc
jae
sahf
mov
fadd
push
push
push
and
jns
test
adc
sbb
add
add
inc
mov
and
in
lock
fist
leave
lods
and
test
add
mov
cld
add
aam
movs
test
ins
rol
push
dec
retf
cdq
jle
add
pop
test
test
push
rol
sub
ins
and
and
push
push
mov
add
add
jbe
cld
add
mov
and
cmp
push
retf
and
and
push
push
nop
mov
and
fnstcw
xlat
test
call
test
inc
aad
lock
cmp
push
adc
cmp
xchg
test
call
sub
mov
xchg
jo
add
add
push
stos
add
data16
jo
mov
fisttp
iret
lods
and
test
add
jmp
jge
call
retf
(bad)
repz
cmp
rol
sub
(bad)
inc
(bad)
dec
mov
iret
call
pop
mov
sahf
ds
dec
(bad)
nop
inc
movs
mov
xchg
out
fistp
sub
ins
and
inc
pushf
and
jl
add
repz
sub
xchg
lea
adc
jns
loop
push
mov
gs
push
mov
add
pop
sbb
or
xchg
lea
(bad)
test
ss
adc
cmp
mov
jo
cmp
retf
lea
xchg
stc
inc
loop
aad
pushf
and
sbb
cwde
sub
inc
add
fcomp
add
xchg
sbb
std
cmp
lea
xchg
lea
sub
add
fwait
clc
rol
cmp
cmp
lea
add
and
sbb
mov
jo
jge
sbb
(bad)
cmp
and
sbb
(bad)
cmp
push
sbb
cmp
add
and
lea
jmp
xchg
(bad)
test
cmp
lock
dec
fs
dec
jae
cs
sbb
xchg
add
or
fwait
inc
cdq
sub
adc
jnp
ss
fbstp
ret
add
xor
inc
sub
lods
and
sbb
ins
ret
cli
cld
adc
and
adc
cmp
push
mov
jge
add
xchg
inc
lea
add
add
xor
dec
cmp
push
retf
and
jg
add
xchg
inc
(bad)
jmp
sub
push
lea
lock
or
fist
retf
lods
and
jge
add
xchg
inc
lea
pusha
call
inc
xchg
lea
nop
pushf
mov
loop
gs
jmp
add
and
std
ins
cmp
add
mov
sub
inc
bound
aam
mov
inc
xchg
inc
in
(bad)
test
pop
in
aad
lock
cmp
sbb
stc
add
rol
movs
jg
(bad)
lds
in
cmps
sbb
jg
fbstp
shl
mov
pop
jg
adc
adc
cmp
add
add
aas
fwait
mov
loop
push
fwait
cdq
or
in
fidivr
pop
sahf
icebp
cmp
pop
jg
xor
out
adc
fwait
in
cmp
lods
jge
call
jge
(bad)
inc
mov
inc
(bad)
in
lock
fdivr
(bad)
lock
dec
pusha
fisttp
add
lea
cs
aam
inc
fucomip
ret
jno
add
leave
inc
std
mov
inc
fild
lock
jmp
push
jge
aas
arpl
jle
popf
sub
jmp
inc
call
repz
lea
add
add
cmp
adc
push
inc
push
aas
jp
jg
fwait
retf
pop
mov
out
cld
push
xchg
movs
mov
ds
(bad)
xchg
push
aas
fist
in
std
(bad)
sti
fisttp
lea
fcmovne
in
or
aam
test
(bad)
xor
inc
fist
leave
in
mov
add
std
ret
or
test
out
dec
lock
add
push
outs
loope
rcr
(bad)
bound
sbb
inc
lea
(bad)
es
inc
lahf
mov
nop
mov
(bad)
inc
push
(bad)
lock
sub
adc
popa
(bad)
lock
jb
fisttp
fwait
aad
test
add
push
xchg
je
inc
fist
or
pop
add
call
push
dec
or
adc
push
es
(bad)
inc
popa
nop
lock
retf
push
aas
or
ins
inc
idiv
adc
jp
nop
jl
xchg
(bad)
ficom
test
add
add
call
in
sub
cmp
inc
inc
fisttp
pop
int3
sbb
aad
lea
cmp
ins
aam
sbb
(bad)
fcmovnb
in
or
or
enter
dec
lea
ja
jmp
add
push
jmp
loopne
jmp
jne
fisttp
(bad)
aad
inc
popa
(bad)
lock
jg
lea
or
sar
jo
enter
out
div
inc
fist
test
call
leave
in
dec
xchg
idiv
push
(bad)
lea
ins
es
bound
mov
lea
fcmovne
in
or
or
push
lock
std
loop
inc
lea
jp
call
aad
test
inc
(bad)
inc
inc
push
cld
test
mov
push
jmp
jne
fisttp
(bad)
aad
inc
adc
ficom
test
(bad)
std
scas
idiv
(bad)
jp
nop
adc
std
and
out
jae
(bad)
ficom
add
add
inc
(bad)
sbb
in
cmp
xlat
lea
ins
mov
int3
mov
lea
fcmovne
in
std
mov
(bad)
push
adc
enter
inc
(bad)
call
ror
inc
push
cld
jns
push
loopne
jmp
inc
imul
ror
fdivrp
adc
(bad)
inc
add
fist
or
std
sub
cld
(bad)
jp
nop
or
std
push
(bad)
out
out
ds
fist
or
sub
in
cmp
(bad)
lea
std
sahf
out
cld
add
mov
lea
jmp
in
std
xor
cld
loop
(bad)
push
adc
inc
(bad)
fdivr
inc
aad
test
inc
push
cld
push
xchg
fbld
(bad)
les
fisttp
add
(bad)
inc
add
ficom
or
sub
sar
pusha
or
std
inc
std
out
imul
push
iret
or
add
fdivrp
sbb
in
ins
add
lea
std
sbb
cld
add
cld
pushf
les
lea
lods
mov
cld
mov
add
std
ret
(bad)
fdiv
jmp
lea
xor
in
push
fbld
(bad)
les
popa
fdivrp
add
(bad)
inc
popa
fwait
lock
out
lea
sub
ins
sbb
or
std
inc
imul
out
cli
fisubr
ror
call
xor
adc
popf
js
neg
add
push
lea
neg
call
aad
shl
jl
loop
(bad)
test
jle
add
add
cld
ret
lock
neg
or
test
sbb
rcl
loope
bound
xchg
fs
ficom
mov
std
add
out
cmps
repz
fisubr
or
push
out
(bad)
inc
and
ficom
test
inc
inc
(bad)
lock
cmp
fimul
bound
lea
fsubrp
jle
jecxz
cld
pop
sbb
movs
add
add
test
push
add
loop
out
pushf
mov
fisubr
fdivr
cmp
sub
or
push
loopne
lods
std
(bad)
sti
out
cmp
fisubr
add
push
(bad)
push
(bad)
inc
add
ficom
test
inc
popa
(bad)
lock
cli
fsubrp
or
xchg
fs
sti
ficom
push
lea
dec
pop
ret
cld
push
addr16
pop
in
fdivr
(bad)
int
rcl
(bad)
adc
cwde
mov
or
push
loopne
sar
imul
test
cli
fdivrp
adc
loope
loopne
lods
std
ret
retf
sar
fisubr
dec
push
push
(bad)
inc
popa
call
jg
(bad)
inc
add
fimul
push
stc
fsubrp
es
jmp
add
fiadd
jo
in
(bad)
call
jo
enter
out
ja
lock
out
inc
push
cld
les
jmp
push
lea
std
mov
push
cld
ja
sbb
out
repz
ret
addr16
add
mov
fdiv
int3
neg
jmp
ins
push
cmps
mov
fsubr
imul
call
sub
inc
popa
test
add
out
fiadd
leave
xchg
push
stc
fdivrp
arpl
push
or
call
pop
pop
ins
adc
add
add
(bad)
rol
lea
fsubrp
push
jecxz
lock
adc
call
in
pop
ret
mov
or
(bad)
sub
add
add
into
push
lea
imul
add
add
and
imul
lea
int
fistp
in
sub
sar
pusha
mov
std
inc
out
out
cdq
aaa
out
ficom
jl
lea
f2xm1
cld
(bad)
jp
push
or
add
ficom
mov
std
shr
out
(bad)
(bad)
in
fisubr
cld
push
add
or
std
shr
aad
rcl
int3
in
fimul
mov
fdivrp
xor
out
ficom
mov
std
adc
inc
(bad)
fdivr
ss
xchg
inc
or
std
mov
(bad)
out
ficom
jne
sub
xor
push
mov
in
fdivrp
dec
xchg
ret
(bad)
jp
jo
(bad)
std
(bad)
out
out
xlat
jp
ficom
jg
mov
in
fdivrp
(bad)
or
fist
mov
jmp
out
inc
lea
mov
call
in
in
out
mov
sar
stos
std
push
in
out
jp
jge
push
sti
mov
arpl
ficom
jae
sub
xor
cld
add
push
push
nop
mov
add
push
in
aad
popa
xchg
test
sub
sti
(bad)
std
inc
in
out
in
in
ficom
mov
std
push
in
inc
lea
(bad)
(bad)
rcl
inc
popa
sub
jle
in
fiadd
xor
(bad)
std
loop
cwde
test
fdivrp
(bad)
or
rcl
ss
add
addr16
push
add
push
add
sti
(bad)
std
push
out
cwde
test
fdivrp
ins
or
cld
(bad)
retf
lea
cmc
add
push
pop
leave
in
std
pop
retf
sti
fisttp
(bad)
lea
pop
or
out
aad
inc
xor
ficom
mov
std
(bad)
out
out
fucomi
icebp
fisubr
add
and
enter
add
add
aad
add
stc
inc
or
mov
std
loop
aad
loope
stc
mov
icebp
ficom
or
std
ret
(bad)
fdivr
jmp
(bad)
inc
push
and
pop
lods
out
fiadd
fdivr
call
into
lock
mov
fimul
mov
imul
add
(bad)
fdiv
xor
xlat
out
call
out
mov
cmp
add
lea
(bad)
adc
mov
adc
jo
shl
out
aad
repnz
bound
out
shl
inc
(bad)
fdivr
fdivr
ret
lock
repz
sbb
jle
jecxz
(bad)
inc
fistp
sbb
mov
lea
(bad)
lds
jmp
call
add
repnz
inc
pop
xlat
jne
lods
movs
or
fsubrp
adc
lea
scas
xchg
hlt
pusha
repnz
mov
out
out
cld
icebp
fisubr
mov
pushf
jecxz
ficom
cmp
(bad)
inc
loope
lock
add
ficom
adc
shr
frstor
cmc
fdivr
bound
ficom
or
std
(bad)
(bad)
inc
test
add
std
lock
add
sbb
mov
pop
(bad)
fwait
test
jmp
scas
inc
add
ficom
mov
std
(bad)
loopne
push
scas
lea
ficom
ds
inc
adc
stc
cmc
jecxz
ficom
test
inc
loope
stc
jno
(bad)
jmp
adc
out
imul
fiadd
lock
(bad)
bound
jae
fbstp
shl
test
cwde
mov
cdq
pop
cmp
or
push
out
fisttp
push
fistp
push
nop
test
std
and
aad
push
ss
cmp
mov
add
std
push
(bad)
inc
popa
xor
push
jnp
fimul
cmc
lock
jne
xchg
xchg
add
ficom
stc
aaa
std
rcr
inc
(bad)
pop
fidiv
call
push
cmp
push
add
add
add
xor
int3
(bad)
sbb
xor
adc
push
mov
mov
or
fisub
push
push
add
call
(bad)
mov
mov
inc
push
cld
in
mov
and
sub
das
xchg
and
sbb
test
out
mov
(bad)
push
push
add
add
add
adc
fimul
sub
fdivrp
xor
fcmovnu
push
adc
aaa
std
mov
frstor
js
(bad)
(bad)
inc
or
lods
dec
mov
inc
push
cld
or
mov
push
lods
movs
and
(bad)
call
mov
call
sbb
popa
fist
adc
movs
shl
(bad)
(bad)
test
daa
call
cld
mov
pop
add
aad
mov
fstp
jmp
idiv
bound
lea
fcmovnb
in
or
stos
(bad)
push
lock
std
loop
inc
lea
or
call
aad
test
inc
push
cld
jge
mov
push
frstor
jne
fisttp
cwde
icebp
sub
int
in
(bad)
fiadd
(bad)
lods
movs
and
fsubrp
xchg
cmp
jmp
fcmovnu
jmp
aad
lea
inc
push
cld
and
fstp
call
fwait
call
adc
add
inc
add
add
fidivr
ror
cwde
test
fcmovnu
dec
mov
jmp
inc
jp
in
mov
call
adc
ret
mov
aad
jle
fcomp
mov
dec
loopne
adc
aaa
cmp
adc
jmp
xlat
inc
push
jo
mov
add
cld
and
inc
lea
(bad)
inc
push
push
and
mov
or
mov
fwait
shl
ins
jmp
std
adc
fsubrp
rol
(bad)
adc
and
rcl
call
xor
test
es
jne
(bad)
fimul
ret
or
repz
clc
out
(bad)
xlat
cli
adc
mov
add
sbb
test
and
sbb
or
xchg
lock
fimul
mov
test
add
fsubr
test
xchg
lea
lds
add
push
lods
push
adc
cs
fst
dec
std
(bad)
xlat
out
in
fcmovu
dec
(bad)
add
fdivrp
sbb
lea
inc
test
call
xchg
cmp
call
xchg
jb
bound
fsubrp
inc
jbe
push
xchg
mov
push
adc
popa
fist
and
lea
fcmovnu
call
xchg
jo
jmp
ins
std
inc
fucomi
loopne
(bad)
lea
add
add
and
loopne
call
inc
std
adc
out
gs
loopne
test
sub
call
out
and
not
std
std
shl
or
cmp
loope
push
push
or
pop
jns
jmp
sub
mov
jae
add
add
mov
std
fst
and
xor
dec
sub
test
add
test
sbb
mov
fs
jmp
adc
jmp
or
(bad)
fldenv
mov
push
add
rcr
xchg
sbb
mov
push
add
rcr
shl
mov
add
add
fnstcw
in
mov
push
add
lock
push
out
jl
idiv
push
int3
cld
add
psubsb
xor
xor
and
stc
jp
sbb
cmc
pop
push
add
aad
cmp
pusha
dec
or
adc
in
add
add
sbb
out
xchg
in
push
(bad)
fsubrp
mov
pop
mov
loop
fild
test
cmp
fcmovb
ficom
out
(bad)
out
aad
(bad)
call
call
add
sti
xchg
std
pop
int
add
push
push
(bad)
(bad)
fbstp
bound
add
fdivr
add
sbb
test
inc
adc
xor
push
xchg
dec
add
sbb
test
sbb
push
sub
in
sbb
add
jmp
and
mov
fsub
call
hlt
js
inc
gs
push
adc
data16
bound
add
cmp
pop
inc
and
fistp
mov
in
pop
push
add
and
ror
clc
xlat
xor
fmul
in
loopne
dec
jg
shr
lahf
and
data16
retf
jnp
call
jle
call
xor
pop
inc
movs
dec
push
sub
data16
aad
cmp
outs
clc
mov
sub
add
push
arpl
mov
jle
movs
jnp
cmp
mov
stc
fadd
xchg
sbb
inc
enter
shl
dec
add
fiadd
cmc
shl
inc
rcr
push
frstor
(bad)
clc
mul
inc
in
mov
add
mov
xlat
and
jge
into
jmp
push
inc
imul
fist
xor
imul
push
mov
sbb
clc
dec
neg
mov
mov
sbb
call
aad
std
(bad)
fmul
(bad)
out
js
xor
mov
call
mov
sub
retf
imul
cmp
lods
push
jmp
into
retf
push
pop
mov
push
add
jns
jl
jge
call
loop
and
adc
xor
cld
(bad)
(bad)
ins
sbb
fild
sub
mov
clc
cmps
inc
jmp
add
add
pop
mov
push
add
mov
call
hlt
and
push
adc
mov
loopne
fdivr
jbe
inc
jbe
inc
adc
fistp
sbb
mov
js
jl
jge
ror
clc
out
stc
repnz
sbb
in
ins
jns
jle
inc
sbb
repnz
adc
sub
retf
sbb
cwde
jmp
loopne
int
xchg
ror
fcomp
sbb
mov
(bad)
fiadd
inc
movs
lock
test
add
sbb
add
xchg
cs
cld
mov
sbb
add
add
add
xchg
cmc
push
and
jecxz
add
in
xchg
sbb
add
retf
sbb
fadd
imul
mov
jb
mov
inc
dec
pusha
loop
movs
mov
cmp
(bad)
(bad)
xchg
ror
nop
pop
retf
lods
or
rol
or
add
add
je
std
bound
call
(bad)
sbb
scas
mov
lods
pop
out
(bad)
ds
jb
pop
fist
dec
add
xor
(bad)
pop
adc
push
outs
lock
ins
sbb
sbb
bound
call
jo
or
jg
test
call
jg
fist
sub
loop
mov
sbb
retf
pop
jo
ins
(bad)
sbb
test
add
add
or
neg
adc
push
xchg
add
out
fwait
cld
pusha
dec
call
out
inc
rcl
add
add
adc
xor
fs
inc
jns
call
pushw
mov
push
jp
aad
jno
adc
bound
push
test
mov
lock
mov
ficom
enter
jmp
js
push
mov
cmp
int
(bad)
mov
fwait
in
(bad)
out
push
push
mov
and
add
nop
adc
pop
push
add
inc
cdq
test
or
add
mov
xor
push
jo
cmp
aad
sbb
sbb
in
pop
or
jge
inc
fst
inc
leave
cmp
and
adc
dec
and
sbb
push
gs
gs
or
pop
cmp
in
int3
cmp
in
int3
cmp
faddp
cmp
and
or
sub
int
add
jecxz
fnstsw
fldcw
add
or
mov
call
jp
and
sbb
jns
xor
sub
xor
push
jns
dec
cmp
ins
in
sbb
sbb
movs
jg
push
pushf
sti
ficom
inc
jp
xchg
xchg
pop
and
or
lods
out
cld
mov
lea
(bad)
jmp
and
call
lock
pusha
test
shr
pusha
retf
in
fild
add
add
push
lea
(bad)
test
xor
inc
cld
fimul
mov
sbb
out
sbb
push
push
or
call
mov
loope
adc
mov
mov
movs
jg
dec
out
cli
fdivrp
push
pushf
je
and
ds
add
xchg
jg
call
add
loopne
sub
push
and
or
test
jg
push
imul
add
lock
jle
fimul
shl
cmp
mov
pop
and
sbb
push
pop
and
xchg
sbb
and
call
outs
cs
inc
or
push
inc
cmp
add
add
pop
push
sbb
and
call
jmp
jg
es
ret
sbb
out
sbb
neg
inc
data16
gs
cmp
fimul
daa
jle
mov
lods
sbb
jo
or
sbb
test
add
or
push
add
and
jge
loop
adc
div
fstp
xor
cmps
in
fwait
adc
stc
and
mov
leave
cmp
(bad)
cld
or
add
test
add
or
inc
lock
pop
mov
call
dec
test
loopne
cmp
test
call
out
jg
jmp
imul
(bad)
fnstcw
mov
mov
hlt
dec
sbb
push
add
fstp
add
dec
inc
push
je
inc
inc
in
aad
jo
cmp
fld
add
(bad)
outs
ins
add
sbb
movs
test
pop
jns
stc
add
jmp
test
fldenv
fld
push
test
add
jb
push
into
dec
cdq
pushf
mov
or
in
cmp
stc
dec
pop
retf
inc
pushf
and
sbb
(bad)
push
push
jmp
add
jge
add
std
xchg
and
sbb
add
cmp
aam
sbb
pop
int
(bad)
jge
xchg
inc
movs
add
or
add
(bad)
push
adc
sbb
rol
and
pop
loope
push
sbb
mov
pop
dec
push
sbb
cmp
pop
sbb
std
cld
retf
push
jp
mov
cmp
pop
sbb
adc
or
sbb
loope
cdq
and
add
xor
inc
cli
fisubr
mov
pusha
mov
loopne
sbb
lods
(bad)
call
cmp
movs
sbb
fiadd
cmp
cdq
sbb
xchg
sbb
cmp
inc
add
add
into
push
adc
cmp
xchg
sbb
loopne
add
mov
into
(bad)
fldenv
jns
push
adc
sub
inc
(bad)
fnstenv
jne
push
adc
daa
fninit
push
imul
test
xor
aaa
out
ficom
jl
mov
popf
loope
adc
out
bound
out
push
push
or
add
add
cmp
out
cmps
and
sbb
in
mov
xor
sar
sar
repz
xchg
cmp
cdq
sbb
lea
or
cmp
inc
jmp
(bad)
in
jno
fwait
and
adc
dec
in
mov
and
std
xchg
sar
add
xchg
and
add
add
std
mov
add
call
mov
sbb
add
cwde
or
aad
and
jge
test
std
aas
add
sbb
inc
call
clc
(bad)
stos
sbb
mov
mov
lea
and
add
lock
in
fisubr
push
lea
push
(bad)
test
sbb
push
mov
imul
push
push
sti
stos
and
sbb
pop
xchg
cmp
sub
sar
bound
call
lods
cmp
adc
mov
add
inc
cdq
test
aas
loope
aad
test
add
add
mov
movs
jg
mov
xor
add
cmp
(bad)
sbb
inc
add
jg
call
fiadd
imul
push
and
or
out
adc
out
call
sub
cmp
push
cmp
sub
(bad)
pusha
out
call
inc
adc
jns
and
jno
std
bound
inc
call
fwait
or
fnstcw
nop
je
jb
xor
pop
or
xchg
inc
and
add
lods
(bad)
loopne
rcl
sbb
out
add
push
jle
mov
add
add
sbb
test
sub
sub
paddd
out
call
push
je
jo
cmp
sub
add
mov
shr
push
fdivrp
outs
push
cmp
sub
cmp
jge
adc
cmp
(bad)
jge
cmp
loop
movs
test
add
sbb
movs
test
call
in
aam
shl
call
mov
call
pop
and
nop
pop
and
add
mov
in
mov
adc
call
adc
leave
and
sbb
(bad)
mov
lods
and
add
add
sbb
dec
popa
iret
cld
bound
sbb
jo
cmp
aam
sbb
pop
sbb
movs
test
call
cs
(bad)
test
push
stc
fisub
outs
loope
jmp
test
push
int
into
cld
push
or
je
pop
sar
cmp
and
sbb
ss
dec
mov
sbb
cdq
sub
adc
inc
in
pusha
js
sbb
ds
(bad)
fs
nop
ins
and
jmp
fbld
fwait
rcl
dec
jmp
mov
cmp
xchg
jmp
push
shl
mov
stc
and
add
add
daa
sub
call
ja
fs
push
cmp
pop
sbb
mov
jmp
stc
in
adc
pusha
dec
cdq
sbb
jmp
fdivr
hlt
push
(bad)
fimul
ins
jp
add
mov
mov
ds
dec
lock
div
fimul
dec
sar
mov
imul
sar
jns
cmp
lock
pop
es
nop
loopne
add
jmp
shr
pusha
mov
inc
pushf
and
jns
add
inc
and
add
add
in
or
popa
call
je
xor
or
(bad)
fimul
mov
sbb
test
sbb
fsubr
retf
sti
pusha
call
inc
leave
dec
je
xor
sub
ficom
std
rol
xchg
and
sbb
inc
mov
call
fimul
fwait
add
add
add
pop
sbb
xor
sbb
in
loop
push
push
xchg
cld
push
sbb
add
cdq
loope
adc
in
nop
cmc
popa
call
pushf
stc
mov
jmp
xchg
mov
mov
pop
mov
in
bound
sbb
sbb
cmp
push
cli
cmp
pop
and
jmp
lock
mov
loopne
jmp
aaa
int
dec
mov
sbb
pusha
pop
sbb
std
xchg
xor
add
inc
add
add
jo
jecxz
jg
jp
nop
mov
add
add
pop
sbb
sub
jns
add
call
fcmovnu
adc
call
mov
std
aam
cld
add
push
mov
jmp
cmp
cdq
jg
adc
gs
mov
out
fadd
std
mov
mov
stc
sbb
add
add
neg
lea
and
test
adc
adc
cli
fimul
clc
adc
dec
mov
call
ins
and
aas
pushf
and
sbb
adc
neg
je
push
aad
clc
ficomp
jno
and
mov
std
add
int3
jmp
add
fdivrp
push
sbb
jnp
jle
rcr
lea
sub
es
jecxz
ficomp
int
sbb
je
inc
stc
xor
add
mov
sub
mov
and
xor
movs
je
cmp
lds
call
sahf
dec
cmp
push
dec
cmp
adc
lea
stc
inc
add
add
sub
mov
neg
test
pop
sbb
movs
adc
test
cmp
movs
test
nop
pop
add
jge
add
sar
test
(bad)
jmp
out
jecxz
fimul
cmp
mov
sbb
jmp
add
lea
and
mov
jecxz
sahf
sar
sar
sar
sar
nop
sbb
in
ins
and
in
arpl
pusha
cli
inc
lea
test
dec
mov
fimul
movs
test
call
or
jmp
aad
loop
call
add
add
leave
jecxz
ret
push
(bad)
lods
and
jle
add
aad
test
sbb
push
sbb
lds
add
test
adc
adc
cmp
adc
popa
stc
jns
scas
test
jmp
inc
pushf
and
sbb
retf
popa
stc
mov
stc
sub
add
(bad)
loope
pop
(bad)
jmp
(bad)
jecxz
sbb
test
call
mov
sbb
sbb
inc
add
or
bound
cmp
mov
test
in
nop
(bad)
push
call
call
xchg
and
jge
add
cmp
add
and
inc
adc
add
add
and
mov
data16
out
sbb
mov
add
xor
push
pop
out
loop
mov
push
ins
push
call
mov
int
jmp
sub
add
cmp
cwde
jmp
jns
loopne
push
mov
add
add
in
and
shr
sbb
cli
loope
adc
es
adc
jl
ror
or
inc
adc
stc
ficomp
pop
add
cdq
pushf
imul
and
jp
cmp
jmp
xor
add
movs
sub
sbb
jmp
stos
and
jge
add
sbb
push
sbb
repnz
dec
sub
mov
push
adc
add
stc
fdivrp
test
xor
xor
pop
fwait
je
sbb
add
add
jmp
mov
lds
pop
aas
push
dec
jo
cmp
aam
sbb
xchg
push
add
fwait
and
add
call
(bad)
(bad)
les
popa
sbb
xchg
sbb
xor
std
push
inc
sub
sbb
int
iret
cld
push
push
inc
(bad)
icebp
and
add
add
add
(bad)
test
pop
stc
(bad)
push
cld
fidivr
mov
jae
push
jo
cmp
adc
sbb
pop
iret
jecxz
pop
lock
stc
pop
sbb
aad
call
(bad)
scas
add
jg
lea
aad
aad
jo
and
std
sbb
cld
add
fmul
out
(bad)
test
pop
sbb
movs
sbb
call
sbb
and
add
add
inc
push
in
inc
cmp
loopne
cmp
fs
push
test
(bad)
les
sub
cdq
pop
lock
pop
push
call
add
sub
jo
je
loope
jo
cmp
add
add
jle
push
sub
cmp
jle
pop
ins
gs
adc
mov
test
pop
cdq
fs
sbb
std
cmp
cld
loop
fisttp
cli
(bad)
ss
mov
xchg
ror
push
call
lock
cmp
push
jle
call
mul
mov
add
call
jmp
inc
leave
imul
and
add
nop
retf
in
sbb
popa
mov
call
cli
cmp
jge
or
jge
neg
push
fs
adc
or
dec
pop
and
mov
add
test
cmp
cmp
je
in
rcl
add
pop
lock
push
test
call
sahf
shl
popf
add
add
dec
fwait
je
popf
and
adc
add
test
adc
push
adc
in
sbb
aad
lock
xchg
test
lea
stos
nop
add
dec
pushf
and
mov
add
ins
aaa
cmp
movs
adc
stos
or
pop
test
and
shl
inc
ins
sbb
lock
push
test
push
cmc
dec
pushf
and
mov
add
add
and
hlt
xchg
fadd
cld
add
test
add
cmp
jl
call
adc
mov
pushf
and
test
add
xchg
add
ins
idiv
add
arpl
mov
rcl
cmps
ins
add
cmps
je
xchg
xor
inc
jnp
jmp
inc
adc
fwait
push
cmp
pop
add
add
sbb
mov
fst
rcl
cmp
push
sbb
aaa
push
in
not
lea
imul
adc
adc
sbb
sub
push
cs
aad
lock
popa
jle
push
pusha
adc
in
sbb
jg
in
push
fmul
jmp
add
add
jg
push
adc
cmp
movs
sbb
sbb
sbb
mov
leave
xor
mov
movs
add
and
aaa
inc
adc
push
into
popa
jg
inc
mov
in
add
cdq
sbb
mov
mov
and
cmps
mov
adc
leave
loopne
cmp
add
cld
inc
add
or
(bad)
xor
sbb
cmp
jmp
sbb
or
adc
jne
pushf
and
sbb
or
or
(bad)
icebp
movs
dec
add
in
add
sbb
imul
lock
sbb
sbb
add
(bad)
test
add
add
stos
lock
pop
xchg
lea
adc
jge
sbb
icebp
push
dec
mov
sbb
sbb
cmp
fld
mov
in
enter
rol
aad
(bad)
test
jmp
lock
test
push
adc
cmp
movs
sbb
loope
push
add
pushf
and
test
add
jle
les
push
xchg
or
test
dec
(bad)
fldenv
call
cmps
inc
adc
cdq
movs
jl
adc
test
cmp
adc
sbb
jp
cld
push
add
or
add
fnstcw
xor
xor
mov
pushf
and
sbb
cmc
popa
jge
les
jg
lea
mov
dec
(bad)
sub
xor
pop
je
call
inc
adc
pop
mov
jo
push
jg
push
rol
cmp
fs
push
mov
add
or
jne
inc
and
(bad)
loope
adc
add
test
mov
ds
jp
xor
fwait
int3
pop
add
jmp
loope
cmp
aad
call
inc
adc
pop
daa
(bad)
push
inc
cmp
or
std
jp
cld
add
inc
lea
mov
lock
fnstcw
push
dec
or
mov
add
add
rol
test
jle
shr
or
ins
inc
fdivr
adc
inc
lea
mov
adc
jb
push
mov
test
add
rol
cdq
call
sbb
push
retf
and
test
add
rol
push
call
add
lock
jo
push
dec
or
std
jmp
cld
loop
inc
(bad)
jmp
test
popa
test
or
int
(bad)
push
jb
and
lea
loope
adc
iret
inc
lea
mov
and
jp
(bad)
cdq
mov
sbb
and
add
add
mov
push
into
inc
(bad)
fldenv
in
jo
cmp
aad
sbb
in
lock
lea
mov
pushf
and
clc
loopne
retf
and
call
add
xchg
inc
movs
aam
mov
mov
dec
aaa
loope
adc
xor
inc
inc
pushf
and
clc
loopne
or
add
in
inc
add
fs
test
mov
and
aam
or
jo
sub
popa
xchg
jns
sbb
push
nop
call
mov
lea
xor
es
lea
cmp
iret
sbb
popa
xchg
sub
sbb
dec
call
xor
lea
js
pop
cmp
dec
(bad)
ins
imul
fisttp
mul
dec
imul
mov
push
and
gs
add
push
mov
cmp
adc
mov
sbb
pop
inc
in
sbb
movs
add
and
sbb
aaa
inc
aad
lods
and
jge
add
add
and
mov
and
mul
call
add
xchg
sti
xor
mov
xchg
add
mov
jo
adc
loopne
lods
add
cld
rol
fmul
shl
add
pop
sbb
sbb
xor
pushf
and
jl
add
or
or
or
lea
adc
stc
aad
add
imul
sbb
fld
xor
jo
cmp
aam
sbb
andnps
jne
cmp
add
mov
pushf
and
cmc
loopne
gs
ins
and
int
test
loope
xchg
sar
mov
cdq
jl
movs
add
loopne
shl
sbb
jo
sbb
cld
adc
fmul
repnz
pop
add
sbb
fwait
and
jge
add
gs
repnz
(bad)
xchg
cwde
jge
lea
add
jmp
add
add
add
adc
(bad)
test
std
sbb
movs
xor
fs
push
arpl
jno
inc
stos
loop
arpl
jne
inc
lea
jo
mov
lds
add
into
shl
push
shl
mov
sbb
gs
in
test
mov
aad
call
add
push
jo
cmp
adc
sbb
jns
in
mov
lea
addr16
popa
ins
push
push
pusha
cld
cmp
jg
call
imul
jns
or
inc
(bad)
lea
outs
shl
xlat
test
adc
xchg
mov
add
pop
and
(bad)
ins
adc
add
add
shl
mov
inc
lea
jg
dec
adc
fisttp
repz
test
pop
and
add
mov
fadd
fldcw
sbb
mov
in
pop
leave
xor
push
fisttp
pop
mov
jmp
jae
push
(bad)
stc
xor
cmps
inc
lea
push
call
(bad)
fisttp
cmp
cdq
jle
inc
sar
xor
lock
loope
jmp
jle
rcr
test
push
mov
test
xchg
leave
retf
les
mov
neg
jmp
call
leave
xor
jmp
jb
and
add
add
sbb
(bad)
xchg
lea
push
add
stos
idiv
mov
nop
sub
jmp
gs
push
xchg
rcl
test
mov
inc
fisttp
xchg
test
gs
in
fmul
xor
out
fisttp
fnstcw
sbb
push
or
jmp
rol
test
add
add
(bad)
push
sti
fld
push
test
test
test
pop
jno
and
xchg
add
movs
(bad)
bound
(bad)
cdq
cdq
js
adc
jle
call
sbb
inc
je
pop
mov
dec
lea
mov
aad
lea
aam
mov
pop
loope
xchg
dec
lock
loope
(bad)
test
add
add
in
add
test
call
cli
cmp
xor
dec
ror
popa
jno
mov
gs
fwait
mov
cmc
pop
lea
test
jmp
outs
pushf
and
sbb
std
les
jmp
dec
push
into
loope
fstp
in
iret
test
add
add
push
cmp
in
sbb
jno
in
out
cmp
cmp
cmps
sbb
xor
jp
adc
cmp
movs
sbb
push
xor
jmp
cmp
aaa
cmp
sbb
fldenv
sbb
dec
xor
(bad)
fdivp
xor
push
jb
fistp
add
cmp
and
xchg
add
dec
add
test
add
cmp
ins
mov
je
mov
dec
inc
bound
sbb
or
lods
xchg
dec
call
cmp
sbb
pop
call
faddp
xor
out
les
sub
jp
in
mov
xor
fadd
xchg
test
add
div
sahf
div
or
add
sbb
fimul
or
lea
and
add
adc
add
xor
in
sbb
and
loopne
pop
dec
add
shr
ins
and
outs
pop
and
dec
mov
ror
lea
sar
xchg
mov
test
loope
ror
call
pushf
and
jns
add
dec
xor
pop
dec
(bad)
cdq
cdq
js
adc
cdq
int3
add
(bad)
lea
dec
call
push
jo
cmp
aam
sbb
imul
in
ins
or
add
ret
mov
dec
sahf
hlt
rcr
je
test
lock
pop
fisttp
fisubr
fistp
add
add
jp
fidiv
test
adc
push
sub
xor
and
int
test
sub
and
push
dec
data16
popa
pop
lea
push
and
dec
sti
pushf
aad
jp
es
inc
(bad)
imul
dec
ror
dec
out
fist
ins
xchg
and
jg
add
mov
push
(bad)
jmp
jg
test
sub
pop
add
xor
mov
and
ror
inc
leave
mov
inc
mov
push
(bad)
lea
inc
jmp
loop
adc
add
add
add
pop
mov
dec
lea
or
in
sub
jmp
test
add
sar
dec
mov
xchg
jle
aam
shl
mov
pop
add
and
imul
push
imul
fldenv
dec
adc
popa
(bad)
cmp
push
sbb
jge
mov
into
clc
dec
xor
sbb
lock
pusha
fnstcw
push
aad
sbb
in
sbb
aad
lea
dec
or
pop
ret
adc
and
add
fisubr
ins
cdq
test
push
xchg
test
call
out
adc
(bad)
push
(bad)
(bad)
cmp
push
test
push
ins
clc
repz
adc
fisttp
int
test
aad
test
leave
adc
and
pop
fild
ja
loope
nop
add
aad
sbb
add
add
add
jmp
jp
cld
(bad)
(bad)
fisttp
aam
inc
mov
mov
inc
call
es
adc
adc
cmp
xchg
test
(bad)
jmp
test
jno
sbb
inc
ror
int
pop
fist
jo
and
test
add
sbb
lea
add
add
test
mov
pusha
fist
jo
and
test
add
int
lea
xor
jle
fist
jo
and
test
add
stos
cld
bound
and
add
(bad)
xor
sbb
inc
ror
jmp
pop
xlat
test
adc
sub
add
add
jmp
pop
and
ret
fs
(bad)
xor
xchg
int
lea
xor
push
pop
fild
xchg
nop
xor
adc
sbb
leave
inc
in
mov
sbb
xchg
mov
(bad)
test
jecxz
add
mov
or
sbb
test
imul
pop
mov
inc
call
inc
enter
xchg
out
in
ss
mov
lock
pop
fist
jge
fcos
pop
fisttp
gs
jmp
mov
movs
pushf
and
sbb
shl
je
jne
(bad)
ficom
add
add
adc
leave
and
jge
mov
and
ret
cdq
inc
or
test
loope
add
mov
dec
mov
cmp
add
test
add
shl
lods
in
cld
mov
and
sbb
fs
pop
sbb
add
add
add
test
sbb
cmp
push
mov
sbb
add
popa
sbb
and
sbb
add
imul
add
add
sub
aad
jo
inc
and
dec
std
and
cld
add
fmul
add
add
add
cdq
sbb
shl
xor
xor
jg
add
sub
rcr
les
or
mov
dec
(bad)
fldenv
ds
cmps
movs
adc
mov
jo
adc
fs
and
pop
stc
cld
and
fmul
add
add
iret
lea
push
(bad)
pop
test
in
js
add
push
dec
or
and
push
push
push
or
add
or
inc
cmp
add
and
lea
clc
pop
or
fist
ins
lods
and
jg
add
mov
lea
call
add
lock
dec
(bad)
fist
adc
or
sub
mov
lock
mov
jle
add
test
lea
and
in
lock
(bad)
fcomip
sbb
sbb
jnp
mov
jmp
sub
sbb
lock
sbb
call
xchg
adc
inc
daa
stc
ror
cdq
add
lock
and
xor
xchg
and
jns
add
or
adc
mov
pop
add
jle
int3
sub
repz
pop
daa
jp
push
add
lock
fisttp
aad
pushf
scas
xlat
jge
mov
imul
add
imul
and
js
mov
dec
adc
call
xor
int
std
bound
dec
rcl
mov
lock
mov
fistp
mov
loope
add
(bad)
out
loope
call
popa
fild
scas
test
mov
push
sahf
fwait
inc
in
jnp
adc
mov
sar
jmp
and
mov
test
xchg
ins
cmps
push
adc
ror
popf
push
loopne
cwde
js
mov
sub
fdivrp
inc
jge
call
add
(bad)
lock
add
sbb
scas
xchg
(bad)
cld
bound
sbb
fadd
std
sbb
add
mov
test
iret
fdivr
mov
loope
nop
rcr
and
push
popa
sahf
fcom
xor
dec
retf
test
xor
push
or
fisttp
adc
ror
sbb
lock
fisttp
loop
dec
adc
test
push
fidiv
lock
inc
fild
xor
sbb
inc
fisttp
pusha
aas
pushf
shr
inc
mov
adc
lock
or
pushf
test
push
mov
add
add
fcmove
pusha
fild
dec
lock
pusha
fisttp
push
ds
ror
inc
mov
ds
lock
sub
add
dec
sbb
test
push
push
dec
lock
aad
aaa
push
push
dec
lock
popa
fisttp
sar
shr
inc
mov
add
add
fwait
lock
mov
std
bound
dec
and
loopne
scas
dec
lock
pusha
fild
dec
lock
pusha
fisttp
push
aas
pushf
ror
inc
mov
push
push
pusha
aas
fwait
lock
or
dec
test
push
push
dec
lock
fild
dec
lock
(bad)
fisttp
loopne
pushf
shr
inc
mov
cmp
std
bound
dec
and
test
push
into
dec
lock
mov
test
aaa
push
sahf
dec
lock
cmp
mov
(bad)
push
push
aas
pushf
ror
inc
mov
in
push
and
fwait
lock
or
ins
sbb
test
fwait
(bad)
cmp
add
jne
inc
push
lock
sbb
jg
stc
push
sub
in
(bad)
push
sub
sub
fwait
dec
jns
loopne
cmp
adc
dec
mov
or
out
add
jb
lods
std
bound
jo
mov
add
mov
or
shr
xlat
inc
push
sbb
and
or
std
push
pop
call
jg
add
inc
ins
daa
mov
xlat
mov
xor
push
lea
fwait
dec
mov
ds
std
pusha
jmp
add
mov
xchg
mov
aaa
fwait
jne
or
and
(bad)
mov
in
add
test
(bad)
test
mov
dec
sbb
lea
addr16
mov
cmc
imul
inc
or
lds
push
or
adc
pop
lock
or
dec
(bad)
fwait
add
add
sub
xor
pop
jp
add
cmp
in
or
dec
cdq
(bad)
xchg
cdq
push
imul
sbb
mov
sbb
push
fimul
cdq
dec
dec
or
add
outs
fwait
inc
and
sub
adc
add
add
test
(bad)
and
push
mov
aaa
add
push
retf
push
jns
(bad)
loopne
stos
push
mov
sahf
xor
add
rcr
xor
loopne
xor
mov
cmp
dec
push
dec
in
out
push
test
rcl
jo
sbb
loop
push
push
arpl
lea
into
int3
adc
push
(bad)
mov
push
cmp
mov
(bad)
xor
push
inc
adc
jo
repz
mov
es
inc
cmp
add
xlat
inc
in
cwde
mul
xor
dec
xor
lea
push
fdivrp
adc
add
add
fisttp
pop
das
fist
icebp
(bad)
(bad)
loop
cdq
pop
loope
mov
pop
sub
pusha
cdq
pop
int
cdq
dec
popf
or
rcl
inc
cdq
pop
mov
cdq
inc
and
cld
push
ins
dec
cmc
adc
cdq
inc
dec
ins
and
add
jo
xchg
pop
loope
mov
or
sub
out
add
add
(bad)
test
sbb
call
adc
push
cmp
sbb
mov
cmp
mov
(bad)
inc
add
inc
cmp
fbld
mov
ins
push
push
cmp
mov
cmp
push
mov
sbb
int
retf
std
bound
call
jbe
je
add
add
and
(bad)
cwde
and
loopne
add
xor
push
cld
es
mov
jge
lea
popa
push
in
jns
inc
das
push
lea
xchg
push
cld
jmp
clc
inc
pusha
cs
lea
(bad)
bound
pop
call
push
inc
adc
adc
cmp
add
add
dec
call
push
aas
(bad)
inc
mov
cmp
push
aas
jge
lea
rcr
mov
jp
movs
in
pop
loope
inc
jp
mov
sub
xchg
cwde
add
fucomip
dec
mov
jnp
repnz
adc
xor
adc
or
stos
jge
sbb
jmp
add
add
push
push
push
or
bound
lock
dec
sub
sbb
xchg
and
test
(bad)
xor
daa
fadd
jge
add
sub
xchg
push
push
pushf
call
imul
sbb
jne
arpl
jnp
sar
pop
call
das
lock
fist
add
(bad)
std
movs
js
das
ffreep
sbb
jnp
jge
inc
lahf
cmp
(bad)
test
sbb
jo
(bad)
lds
(bad)
push
push
in
cmps
(bad)
push
lock
sti
push
add
das
fist
adc
or
add
adc
enter
adc
inc
push
cld
pop
push
arpl
jno
xchg
mov
or
rcr
bound
xlat
inc
popa
jl
(bad)
je
fild
add
js
mov
scas
mov
jmp
sti
addr16
jnp
jnp
jge
inc
or
(bad)
ds
ins
test
loope
inc
cmp
test
adc
arpl
sar
add
dec
loope
movs
out
(bad)
out
jle
mov
addr16
push
cld
movs
inc
mov
mov
add
adc
rol
in
(bad)
push
das
lock
xchg
sub
push
out
jl
mov
xor
(bad)
std
outs
mov
add
jnp
mov
cmps
(bad)
bound
lock
add
jg
lea
pop
leave
fadd
cmp
mov
out
push
loopne
je
push
in
sbb
sbb
add
into
clc
imul
push
add
and
add
das
fbld
sub
mov
call
aas
es
mov
leave
std
push
and
push
cld
push
and
cmp
jge
call
push
jl
shr
add
(bad)
loopne
jnp
fdivrp
pop
jns
jns
jge
push
mov
push
mov
add
jge
add
jge
push
ins
shl
(bad)
bound
push
push
inc
sub
jns
test
adc
jg
stc
fdivr
xor
pop
or
mov
sub
cmp
test
push
add
xor
mov
xchg
call
(bad)
push
jnp
jg
jo
and
test
adc
sub
lahf
sub
test
push
jbe
imul
xor
pop
xor
mov
sbb
fbstp
in
arpl
mov
cdq
inc
xchg
scas
sbb
dec
push
push
fidivr
add
cmp
add
push
or
adc
sbb
jmp
bound
test
jmp
adc
adc
pop
inc
mov
mov
in
mov
leave
fs
fs
push
mov
retf
sub
dec
push
mov
test
jne
fdivrp
dec
adc
shr
arpl
(bad)
loopne
aaa
xchg
add
sub
push
movs
hlt
add
fucomip
mov
jecxz
push
xchg
lea
add
(bad)
fcmovnb
fcom
lods
test
sbb
adc
add
adc
add
shld
adc
mov
fdivrp
xchg
cmp
pop
(bad)
std
xor
nop
add
(bad)
push
aas
(bad)
inc
inc
xor
test
test
add
add
call
push
xchg
lea
fstp
mov
sbb
adc
add
push
adc
add
shl
test
add
call
inc
lock
pop
cmp
sbb
push
push
add
call
add
jecxz
(bad)
stos
loope
mov
inc
push
cld
push
sub
and
and
iret
xchg
and
sbb
stos
(bad)
fisttp
stos
iret
imul
loopne
fadd
movs
hlt
arpl
fucomip
mov
xchg
lea
fstp
mov
sbb
adc
add
inc
sbb
sbb
mov
add
add
push
mov
dec
push
mov
not
xor
adc
push
xor
mov
cmp
sbb
push
dec
lea
fucomip
arpl
jecxz
(bad)
cmps
loope
nop
sub
call
push
cld
out
hlt
mov
aas
popa
inc
test
add
or
ds
sbb
(bad)
push
lds
add
mov
repnz
loop
push
mov
xchg
stos
add
and
jg
inc
push
test
add
jp
push
jae
jns
sbb
add
sbb
loopne
mov
dec
push
mov
ret
fcom
push
inc
ins
adc
add
add
adc
adc
ds
out
fadd
cwde
xor
mov
test
(bad)
push
fild
dec
push
add
pop
call
ds
dec
cmp
push
adc
pop
call
cmp
clc
mov
cmp
mov
cmps
jb
gs
lea
iret
(bad)
ret
inc
bound
ffreep
sub
add
(bad)
cld
sbb
inc
popa
shl
sub
lds
push
add
add
jo
jns
test
pop
xchg
add
lods
mov
adc
or
in
add
call
jnp
pusha
lock
jmp
lock
cmp
push
out
test
(bad)
std
cmp
adc
pop
call
ss
inc
loope
lock
or
push
fadd
shl
call
push
aad
aaa
dec
mov
out
aad
popa
iret
sub
jmp
in
outs
cmp
repnz
sub
xor
push
cld
es
shl
sub
cmps
movs
mov
add
add
(bad)
dec
out
stos
cld
bound
lea
fwait
rcr
ins
and
pop
test
add
lea
loop
fisttp
loop
push
cld
mov
cmp
stos
rcr
out
or
out
fwait
inc
pop
sub
and
push
add
test
push
add
add
cmps
inc
push
lds
push
push
push
movs
inc
bound
fucomip
in
lock
(bad)
cmps
loope
cwde
mov
inc
or
dec
movs
adc
ffreep
cwde
cmp
out
lock
xor
imul
add
xchg
test
fs
inc
fistp
or
cmp
mov
add
add
push
mov
dec
push
add
cmp
add
inc
(bad)
inc
push
jge
enter
inc
push
sub
jmp
cmp
mov
aam
inc
sub
mov
cmp
mov
mov
push
cld
add
mov
cmp
add
adc
jmp
pop
inc
add
add
(bad)
inc
popa
(bad)
(bad)
(bad)
cmp
pop
ins
inc
push
cld
mov
lods
adc
add
inc
sbb
mov
imul
test
add
sar
cmp
adc
in
mov
fist
test
jmp
mov
add
aas
lock
fist
jl
add
add
call
fadd
sub
sbb
jp
sbb
sbb
push
xchg
(bad)
lods
inc
push
mov
rcr
sahf
inc
ins
adc
inc
gs
fimul
ins
in
fucomip
xchg
jae
(bad)
push
and
out
aas
fisttp
adc
dec
push
sbb
push
test
mov
sub
js
mov
das
fdivrp
jg
stc
sub
fistp
shl
data16
push
bound
push
add
aas
sti
add
inc
(bad)
inc
popa
sbb
in
xchg
jmp
push
add
pop
movs
xor
xchg
adc
add
fs
add
stos
dec
call
sub
push
mov
rcr
jle
ins
adc
cmp
test
(bad)
mov
daa
jb
(bad)
fdivr
jecxz
ins
and
(bad)
cmp
mov
dec
imul
add
add
stos
push
push
mov
test
lock
cmp
push
and
dec
mov
icebp
aad
adc
push
jmp
outs
cmp
add
out
(bad)
loop
loop
aad
push
cld
xchg
dec
shl
mov
jne
movs
dec
push
loope
bound
sbb
popf
pop
mov
add
push
add
cmp
ffreep
fdivr
add
fmul
(bad)
lds
push
pusha
sti
pop
inc
lock
pushf
adc
add
fnsave
sti
add
adc
xor
inc
cmps
mov
xchg
jg
or
add
add
js
movs
jg
or
inc
adc
clc
sar
aas
or
int
mov
add
repz
jmp
(bad)
inc
popa
jnp
inc
cmp
fild
xchg
mov
mov
dec
(bad)
inc
push
fldcw
ret
leave
ins
push
jmp
mov
in
inc
loop
adc
add
(bad)
repz
mov
cmp
adc
lea
std
bound
cld
mov
ds
mov
lods
lea
lods
jbe
call
movs
dec
(bad)
sbb
adc
repz
add
jp
rcr
jl
mov
push
out
jg
or
jo
and
sbb
jle
adc
xchg
pop
in
push
aas
push
push
icebp
movs
inc
bound
fucomip
jns
in
mov
loop
mov
loopne
inc
cmp
(bad)
xchg
xchg
test
aas
jp
cmp
movs
cdq
inc
and
shl
dec
in
or
push
jb
call
movs
jmp
push
cmp
add
add
add
shl
(bad)
xor
test
test
jmp
mov
adc
mov
ins
pop
or
dec
mov
lea
sub
fisttp
test
cmp
in
arpl
mov
fisttp
jmp
add
add
outs
xchg
arpl
popf
and
add
xchg
or
dec
push
out
push
push
sub
aam
je
inc
fcomip
sbb
sbb
xchg
jp
lock
inc
lock
sbb
call
test
inc
push
xchg
out
loope
cwde
cld
(bad)
bound
popa
inc
jp
sub
fistp
cld
push
mov
fbstp
in
or
pop
jo
dec
jmp
or
mov
(bad)
fadd
shl
jge
pushf
inc
movs
adc
call
stos
(bad)
fsubr
rcr
add
popf
inc
push
jg
call
cld
(bad)
inc
popa
mov
js
mov
sahf
lds
push
add
add
clc
movs
push
jg
jp
jg
jp
lods
sbb
add
sbb
mov
jle
dec
mov
push
sar
jo
pusha
jmp
(bad)
inc
popa
xor
dec
inc
fild
push
add
add
add
mov
(bad)
inc
shr
push
jmp
sub
adc
loopne
mov
or
mov
sbb
or
mov
jmp
lea
(bad)
std
pop
scas
cld
add
mov
arpl
push
jg
mov
lea
sub
add
add
dec
(bad)
cwde
inc
sub
fmul
pop
add
and
or
push
jmp
jg
jp
jge
sbb
test
clc
or
jg
push
jg
lea
lods
jecxz
cld
mov
cmp
ret
inc
sar
sti
jl
push
imul
add
add
inc
popa
mov
ret
cdq
cdq
push
dec
(bad)
loopne
or
or
inc
push
cld
push
or
pop
int3
movs
call
int
xchg
inc
aad
movs
js
jle
call
fwait
(bad)
fdiv
ins
pop
adc
adc
fwait
(bad)
jne
popf
inc
add
call
sub
(bad)
inc
loope
arpl
lea
push
(bad)
adc
add
add
hlt
adc
jp
dec
mov
cmp
sar
pusha
ins
jle
push
out
or
std
cmp
add
jge
inc
popa
xor
cmp
push
jo
in
pushf
test
jg
push
push
dec
mov
mov
ret
jmp
clc
push
add
loope
movs
jle
pushf
push
imul
pop
jne
jge
jo
movs
addr16
loope
fbstp
or
mov
jg
add
aas
(bad)
inc
popa
mov
shl
(bad)
aam
push
bound
and
jmp
test
jmp
ja
in
mov
and
mov
pushw
inc
ja
in
mov
and
mov
data16
arpl
in
shl
daa
pop
and
(bad)
sahf
clc
push
or
and
movs
xchg
push
loopne
or
ret
and
jp
push
sar
pusha
call
(bad)
inc
popa
mov
fwait
popf
js
push
rol
or
adc
(bad)
fdivr
jmp
pushaw
popf
push
ja
(bad)
icebp
int
test
(bad)
lds
cmp
fwait
iret
sbb
fdiv
bound
lea
fwait
rcr
ins
sar
fadd
jl
nop
call
jl
(bad)
std
mov
lea
stos
rcr
mov
in
adc
sbb
(bad)
fwait
rcr
ins
adc
cld
int3
and
jp
jge
jo
add
push
mov
jnp
add
add
clc
pandn
xchg
inc
adc
mov
jnp
mov
sbb
fdivr
cmp
in
lea
test
(bad)
std
(bad)
mov
mov
(bad)
fdivr
std
inc
daa
std
loop
lea
inc
call
fwait
clc
fdivr
int
jl
(bad)
std
fisttp
add
add
jns
push
ins
xchg
sub
bound
sub
cmps
mov
lea
imul
cmp
out
mov
(bad)
fdivr
lea
bound
mov
sub
fdivr
aam
test
jns
push
xchg
rol
jp
push
fcomi
fdivr
sar
fisttp
jns
push
lods
pop
sub
rol
cld
add
(bad)
inc
ror
call
xchg
mov
xor
outs
fisttp
add
cmps
adc
pop
inc
push
outs
lea
nop
adc
add
js
lea
add
add
(bad)
inc
or
call
cmp
loope
aad
movs
pusha
bound
call
es
or
loop
lock
add
rol
fcmovnb
fdivr
mov
in
daa
sbb
xlat
inc
add
ja
pushf
push
sbb
int3
sbb
add
add
outs
cdq
pop
lods
add
mov
bound
push
test
add
outs
arpl
and
xchg
jo
outs
fist
add
outs
dec
lea
out
jmp
lea
ror
inc
inc
ror
inc
leave
ror
(bad)
std
push
stc
jmp
(bad)
(bad)
add
add
jns
jge
mov
cdq
cmp
call
mov
push
lea
cmp
lock
daa
jp
imul
sub
add
sub
jmp
addr16
jle
add
hlt
loopne
nop
cmc
(bad)
push
je
cld
or
outs
lea
cmp
add
(bad)
cld
xchg
xor
outs
fisttp
adc
fistp
ds
adc
lea
fcomi
mov
lods
fs
sar
xchg
pusha
ret
lea
mov
jmp
movs
inc
push
ins
lea
sar
ja
bound
sub
fucomip
adc
add
add
add
lock
mov
nop
clc
(bad)
and
ss
ins
jo
nop
repz
cwde
push
dec
(bad)
cwde
jns
call
mov
cli
push
mov
pop
sbb
(bad)
jl
xchg
jg
mov
jecxz
call
pop
cmp
add
xor
(bad)
fdivp
mov
add
add
inc
add
jmp
xor
bound
(bad)
fsub
(bad)
(bad)
into
lea
int
test
add
lds
push
mov
mov
push
mov
lds
lea
outs
fucomip
ret
call
cmp
cmp
shl
or
enter
mov
add
movs
jle
pop
cmp
cmp
inc
xchg
xchg
pop
mov
outs
out
adc
add
mov
add
jge
icebp
gs
push
ret
add
jle
(bad)
int
(bad)
fwait
enter
add
std
bound
movs
pusha
adc
call
mov
sub
bound
into
std
xchg
sbb
bound
xchg
jmp
pusha
cs
inc
dec
push
cld
sub
lea
sbb
fadd
ins
shl
bound
loopne
sbb
loope
xchg
or
lea
std
sub
mov
stos
mov
and
ret
test
je
push
add
add
movs
inc
bound
call
cmps
cmp
nop
or
inc
jae
call
sahf
inc
(bad)
inc
popa
xabort
call
test
call
leave
fadd
dec
lea
xor
jb
lea
fdivrp
bound
lea
adc
enter
lock
add
add
jmp
lock
loop
lock
pop
pop
fild
adc
(bad)
ret
xor
jno
sbb
enter
pop
dec
(bad)
cwde
jno
call
jge
aaa
inc
and
cmp
out
test
add
jl
and
clc
(bad)
and
cmp
add
or
jbe
in
outs
(bad)
mov
jmp
lea
jno
call
push
lea
pavgb
add
lea
ror
push
xor
inc
xor
xor
xor
inc
xor
call
out
cmp
rcr
(bad)
bound
cld
mov
add
add
outs
fidiv
lea
add
call
cdq
inc
jne
or
pop
je
or
test
out
mov
fistp
stc
push
inc
pop
(bad)
inc
add
sub
imul
loopne
lods
mov
add
mov
mov
(bad)
sbb
mov
dec
mov
out
sbb
out
xor
sbb
xor
and
dec
loop
pop
lea
jo
cmp
pop
lock
jo
lea
(bad)
inc
add
call
pusha
stc
sub
bound
add
add
jmp
(bad)
adc
loop
xchg
inc
push
mov
sbb
and
js
loop
lock
jb
adc
push
(bad)
loopne
fdivrp
ret
xor
pop
push
lea
inc
push
cld
sbb
jo
rol
loopne
mov
inc
push
cld
fmul
push
lea
add
add
inc
push
cld
fisttp
dec
lea
(bad)
inc
(bad)
lea
lds
cld
stos
lea
bound
(bad)
rcl
lea
jne
push
xor
pop
fwait
iret
fcmovnb
fadd
sbb
std
rcl
jp
lock
jmp
pop
(bad)
inc
mov
jb
cmp
jo
push
lods
xchg
pushf
push
sbb
or
(bad)
les
push
scas
cld
bound
push
pop
pushf
ret
or
daa
push
cwde
lea
push
mov
bound
or
and
jmp
jg
movs
xchg
pop
fisttp
rcr
sub
bound
lea
(bad)
adc
lea
jno
(bad)
inc
sub
cwde
inc
sub
je
pop
fist
ret
jl
adc
adc
lods
push
loopne
test
adc
les
sub
mov
pop
fild
push
cs
mov
lds
adc
sbb
cmc
push
add
mov
(bad)
clc
add
pop
ffreep
fcomp
cmp
and
add
add
in
add
pusha
mov
inc
jge
bound
mov
(bad)
bound
fwait
inc
shr
inc
cwde
shl
add
inc
xor
leave
test
dec
adc
mov
cmps
sub
call
inc
lock
mov
fisttp
(bad)
into
lea
std
adc
and
mov
inc
add
test
inc
sbb
lock
inc
(bad)
fist
xchg
dec
add
pop
(bad)
cmp
push
movs
lock
call
ins
sub
(bad)
pop
popa
pop
call
and
test
loop
(bad)
inc
loope
lock
pop
fisttp
ret
inc
rcr
sub
fisubr
mov
pusha
fild
pop
fist
test
pushf
add
push
xor
std
retf
bound
(bad)
shl
fisttp
adc
fild
jo
(bad)
bound
lock
ffreep
in
shl
aad
mov
imul
pop
cmps
inc
xor
sbb
nop
mov
cdq
inc
shl
cdq
dec
loope
push
cld
fadd
in
mov
mov
xor
lea
inc
push
cld
mov
ffreep
loopne
call
rol
add
loop
adc
pop
cdq
inc
xchg
mov
xchg
out
mov
sub
cmp
or
add
or
mov
(bad)
inc
popa
jge
or
sub
js
adc
loopne
xor
push
pushf
std
adc
cld
loop
repnz
pop
(bad)
xor
cmps
clc
push
or
sbb
loopne
lock
(bad)
bound
loopne
shl
in
jge
sbb
and
pop
fist
addr16
cld
sub
arpl
adc
and
lea
call
call
int
xchg
inc
in
lea
pop
ffreep
sbb
add
add
call
push
push
(bad)
add
fbstp
sub
push
sbb
adc
call
inc
or
sub
xor
retf
(bad)
sbb
call
ss
mov
mov
call
lea
pop
fucomip
scas
and
inc
or
mov
add
add
mov
test
inc
lea
(bad)
inc
mov
pop
push
push
push
sub
push
pop
lock
test
push
or
lea
ffreep
push
and
dec
sub
call
das
lods
(bad)
inc
mov
jg
add
pop
fist
aad
add
add
jmp
fs
mov
mov
adc
inc
add
fbld
push
inc
ins
push
sahf
ins
lock
xor
(bad)
mov
pop
cmp
mov
push
cld
fistp
and
(bad)
call
out
mov
xor
add
add
arpl
xchg
rol
out
call
in
or
fcom
lea
sub
mov
sub
out
addr16
and
add
dec
mov
idiv
ret
dec
push
add
jl
call
cmp
(bad)
jg
sub
jecxz
out
in
inc
push
in
sbb
fwait
mov
add
(bad)
lock
xor
mov
in
xchg
rol
dec
call
inc
sub
pop
xor
jo
movs
jg
call
hlt
sub
pop
jae
daa
jg
add
sbb
std
cmp
dec
lea
sub
je
pop
fisttp
push
push
lea
inc
out
(bad)
add
push
cld
cs
sbb
push
pop
dec
lea
out
fbstp
aaa
push
cld
loope
lods
xchg
inc
pop
arpl
icebp
out
lea
mov
inc
das
pusha
pop
fwait
iret
fwait
mov
cs
adc
jp
adc
ins
inc
pop
(bad)
inc
loope
lock
repz
fisttp
add
(bad)
loop
test
mov
ret
(bad)
adc
pop
inc
pop
lea
mov
push
mov
push
jle
mov
pop
(bad)
std
xor
std
add
xlat
or
adc
call
jge
lea
adc
lds
push
cld
loopne
mov
mov
cwde
imul
test
pop
add
jge
inc
sub
cmp
sbb
mov
pop
xor
add
sbb
inc
inc
or
loop
push
cwde
inc
repnz
mov
xor
repnz
mov
repnz
pushf
xor
repnz
aam
adc
test
lea
mov
dec
cmp
nop
cmp
push
cld
daa
ins
icebp
sub
aad
fisttp
inc
adc
call
imul
jmp
scas
lea
fimul
(bad)
std
retf
jg
add
lea
jmp
fmul
std
inc
cmp
loop
lea
xor
add
add
and
or
setne
bound
push
ins
xchg
cs
bound
push
call
(bad)
out
loope
nop
clc
(bad)
push
dec
push
cld
daa
ins
fs
popa
popa
and
loop
fild
in
push
lea
ins
jl
push
popa
push
lea
dec
push
cld
lds
add
add
bound
adc
loopne
xor
(bad)
loop
push
cld
je
test
inc
loope
and
push
(bad)
lea
inc
adc
push
mov
add
or
jmp
mov
stc
(bad)
adc
in
jp
test
inc
add
fild
repnz
add
imul
add
add
lock
popa
fist
and
inc
jg
inc
inc
xchg
clc
out
(bad)
fist
or
jle
lea
(bad)
(bad)
aad
inc
adc
fild
sbb
fdivrp
rcl
clc
aaa
nop
popa
fisttp
xchg
sub
jle
push
icebp
mov
ffreep
sbb
call
add
in
sub
mov
fucomip
push
sbb
push
lock
push
add
(bad)
fsub
call
mov
xchg
je
jg
push
nop
or
jmp
jg
(bad)
test
push
call
push
inc
adc
push
or
call
fwait
leave
fcom
shl
jg
lea
fcmovne
fcom
std
lds
icebp
xchg
add
jnp
lea
sbb
call
inc
push
stos
imul
jl
jmp
sbb
sub
jl
(bad)
fadd
lea
fucomip
xor
jns
add
jg
call
xchg
inc
adc
or
inc
lock
jl
push
pusha
les
pop
ins
(bad)
mov
(bad)
in
and
or
and
loope
xchg
inc
push
mov
sbb
sbb
mov
and
icebp
ins
in
cmps
sar
inc
jmp
int3
mov
rol
mov
les
push
rol
mov
rol
movs
push
mov
ret
lods
push
mov
les
ret
test
mov
jge
or
jge
sbb
clc
pop
sti
movs
cmp
mov
xlat
inc
adc
cmp
mov
std
push
mov
add
lods
xchg
sbb
imul
icebp
add
add
mov
jecxz
gs
push
ret
(bad)
sbb
call
loopne
pop
jmp
lock
js
(bad)
fadd
into
call
es
pushf
rcl
(bad)
push
ja
test
adc
inc
jle
lock
or
lea
(bad)
bound
test
push
scas
(bad)
push
add
jmp
lea
std
loop
cld
add
add
ja
(bad)
std
jo
std
loop
fmul
inc
or
call
dec
mov
inc
push
or
xor
lds
mov
push
dec
(bad)
fcomp
pop
add
mov
add
add
add
fnstenv
adc
jb
mov
add
bound
push
cwde
mov
push
mov
add
or
jne
push
pushf
jne
push
lods
inc
or
inc
or
xor
jnp
call
push
pop
cmp
int
pop
mov
fidivr
add
ret
loopne
sub
nop
pop
add
inc
and
jnp
inc
push
jle
add
mov
jg
jo
adc
test
lea
sbb
fcom
dec
pop
cmp
push
add
call
push
sbb
call
jnp
add
add
cld
add
xchg
sti
sar
(bad)
lock
push
cld
test
sar
lea
fcomp
add
pop
cmp
push
in
pop
lea
test
jmp
mov
adc
lea
pop
xlat
fcomp
or
aam
test
jp
inc
jp
nop
pop
xlat
fcomp
cmp
std
fisttp
jns
push
cmp
add
or
push
stos
(bad)
jbe
loope
adc
loopne
add
cld
xchg
imul
jo
lock
loopne
pop
cmp
xor
in
cmp
add
(bad)
sbb
inc
add
xlat
inc
mov
loopne
push
pop
push
mov
jge
add
mov
and
sub
call
clc
push
outs
jns
push
nop
xor
and
inc
push
fwait
clc
cmp
lds
push
add
adc
push
outs
(bad)
inc
popa
cdq
clc
sub
jp
push
and
ins
inc
outs
(bad)
inc
add
fisttp
jmp
jb
movs
or
mov
jmp
outs
ffreep
sbb
out
imul
ror
dec
call
push
(bad)
lock
fdivrp
(bad)
int
xchg
sbb
dec
(bad)
inc
add
fild
mov
pop
(bad)
inc
popa
mov
fisttp
ins
outs
xor
(bad)
(bad)
inc
lea
add
xchg
cld
(bad)
sbb
call
imul
xor
ins
jmp
imul
imul
sub
movs
or
imul
cmp
in
ss
mov
ins
(bad)
int
xchg
cld
(bad)
cmp
jmp
push
cld
push
imul
lods
int
inc
inc
into
lea
into
lea
int
inc
cdq
int
inc
or
lea
into
lea
int
(bad)
std
ins
(bad)
dec
clc
leave
jmp
fsub
inc
ins
pop
pop
lds
mov
sbb
aam
sbb
movs
imul
add
ins
add
addr16
push
add
std
imul
outs
lock
jns
push
adc
(bad)
inc
popa
lahf
clc
mov
lock
jmp
dec
(bad)
call
mov
fild
cwde
test
call
clc
idiv
push
push
cld
hlt
addr16
push
ins
push
push
cli
mov
ffreep
cwde
jns
out
es
mov
add
add
cli
push
mov
adc
ror
add
jmp
push
push
pushf
cmp
add
shl
pop
das
arpl
gs
inc
stc
mul
call
push
lods
push
jg
bsr
mov
bound
cld
mov
pop
hlt
arpl
mov
lea
or
in
push
add
add
add
mov
retf
(bad)
fdiv
call
pop
enter
and
fwait
imul
call
mov
loope
sub
(bad)
bound
cld
cmps
jbe
nop
add
inc
sbb
int
inc
dec
int
inc
adc
int
inc
add
lea
into
lea
int
inc
std
int
lea
add
add
stos
enter
(bad)
cmp
(bad)
sbb
pop
jmp
adc
mov
add
outs
add
addr16
push
add
ins
inc
lock
sbb
push
xor
push
outs
(bad)
inc
popa
test
fist
or
je
dec
add
inc
add
fild
sbb
clc
scas
jnp
fisttp
js
add
shl
push
add
(bad)
sbb
in
in
mov
push
mov
add
mov
cwde
cmp
push
pushf
retf
test
add
movs
pop
in
sbb
cwde
xor
xlat
inc
jns
loopne
in
push
lods
in
loope
ins
call
push
jno
(bad)
fcmovne
fsub
or
in
lea
lea
fcmovne
fsubr
mov
in
cmp
test
jmp
outs
xchg
bound
(bad)
push
cmc
adc
lea
cmp
mov
jno
(bad)
lds
inc
adc
push
nop
pop
mov
enter
sub
add
lea
shl
fucomi
(bad)
fsubr
push
push
xchg
push
ror
inc
sub
movs
in
jno
mov
lock
loop
fist
adc
call
ss
leave
jno
jmp
(bad)
cld
(bad)
sbb
add
pop
jg
push
nop
sub
push
jg
sub
retf
mov
test
loop
loope
in
jo
mov
mov
adc
mov
jo
mov
push
mov
jl
and
les
mov
xor
sar
push
stos
jle
sbb
sub
sub
je
inc
loope
push
sbb
pop
inc
pop
cmp
sbb
cmp
add
call
test
push
add
(bad)
fdiv
call
mov
xchg
je
jg
push
and
nop
(bad)
test
cs
push
inc
adc
push
stc
das
call
dec
call
dec
dec
(bad)
inc
popa
mov
fist
xchg
(bad)
fstp
test
loop
sub
sbb
jl
add
add
push
lock
bound
inc
icebp
(bad)
loopne
gs
push
mov
sbb
cmp
fcomp
imul
xor
dec
xchg
popa
jg
mov
push
inc
push
cld
xor
xchg
inc
jg
(bad)
int
jo
in
lea
push
adc
inc
add
add
(bad)
inc
adc
fistp
jmp
scas
inc
push
cld
xchg
push
fwait
inc
or
dec
cwde
shl
lea
in
les
jmp
jmp
bound
lea
jge
push
or
(bad)
fdiv
out
or
push
mov
ret
adc
mov
pusha
ret
mov
nop
ret
movs
push
jo
jl
push
ret
lods
push
pusha
ret
les
ret
test
push
or
jmp
lock
jge
sbb
sub
imul
loope
movs
jg
jmp
inc
pop
cmp
jg
add
or
je
jge
call
aas
jg
mov
sbb
fdiv
ins
xchg
add
adc
lea
lds
nop
pop
rcr
std
jo
jmp
fmul
ja
push
cmp
or
(bad)
cwde
jns
call
mov
or
jbe
inc
popa
xor
aaa
jp
mov
dec
or
add
add
inc
data16
mov
pop
stos
test
sar
sbb
sbb
push
add
cdq
pop
xchg
ds
movs
adc
add
shr
sbb
call
and
lea
into
lea
into
lea
into
lea
into
lea
into
lea
add
add
lea
into
lea
into
lea
into
lea
ins
ins
sar
bound
fsub
jne
inc
movs
add
je
out
dec
or
in
pushf
lea
lea
lods
sub
mov
aad
inc
inc
push
cld
sub
and
dec
(bad)
fdivr
(bad)
(bad)
into
fbstp
inc
push
cld
fsub
test
jnp
les
aad
test
jp
push
jnp
iret
pop
leave
fdiv
call
lea
ffreep
cwde
jns
out
adc
push
mov
popa
jp
push
cwde
lock
sbb
jmp
mov
add
add
(bad)
loopne
gs
sbb
sbb
sbb
push
xchg
sti
add
call
aaa
inc
gs
test
pushf
popa
jns
inc
mov
iret
mov
mov
mov
mov
push
nop
(bad)
movs
push
nop
(bad)
jl
pusha
(bad)
lods
push
nop
mov
push
push
wrmsr
call
lock
jns
sbb
loopne
and
(bad)
add
lock
xor
pop
jg
push
adc
(bad)
pop
jg
call
xor
jns
push
ret
(bad)
sbb
call
out
adc
rol
xor
bound
call
sahf
dec
(bad)
inc
add
add
mov
fild
jmp
(bad)
bound
cld
pop
imul
push
jg
lea
push
in
iret
jle
inc
cmp
cdq
pop
xchg
mov
mov
call
(bad)
pop
ss
add
fnstsw
jmp
ret
lods
ficomp
xchg
out
mov
fadd
or
and
sub
dec
lea
xor
cwde
xor
cwde
sbb
call
push
dec
(bad)
fdiv
(bad)
push
push
shl
arpl
stc
jmp
lea
cmp
ror
push
rcr
ins
push
arpl
bound
fmul
add
add
loopne
jg
lea
xchg
adc
jmp
fadd
std
mov
cmp
add
mov
aad
inc
test
mov
fbstp
rcl
sub
call
cmp
add
dec
fdivrp
jge
pop
inc
adc
add
call
sbb
fdivr
dec
data16
(bad)
(bad)
int
(bad)
mov
popf
in
jle
call
cld
xlat
(bad)
inc
adc
jb
cs
fadd
cmc
movs
push
jg
jp
das
mov
xchg
sbb
sbb
xor
jle
inc
inc
lea
add
add
fimul
shl
ins
call
jge
inc
add
fist
rep
call
jg
clc
sbb
fistp
ret
movs
(bad)
test
and
es
add
inc
repz
or
mov
loope
arpl
inc
sub
mov
xor
inc
adc
fs
add
fcom
les
add
add
mov
mov
jmp
call
mov
sbb
(bad)
ret
cld
and
popa
jg
(bad)
cmp
iret
lea
shr
push
call
jg
inc
add
inc
hlt
jg
push
mov
xchg
in
jg
push
pop
cmp
aas
sub
sti
aam
sbb
in
push
add
fwait
inc
jmp
jp
jne
sub
out
inc
jp
jg
jo
movs
jle
push
or
sub
sbb
cli
mov
jle
push
adc
push
call
jle
fstp
sbb
je
jg
call
ss
lea
sbb
in
std
mov
cwde
cld
add
call
fdiv
push
mov
cmp
inc
push
mov
gs
lods
lea
sub
fucomip
xlat
dec
fadd
cwde
and
jp
jge
mov
add
add
test
inc
sub
fisttp
lock
sbb
mov
xor
retf
test
loope
bound
cld
daa
ins
jb
popa
adc
push
aad
lea
and
nop
sbb
add
lock
stos
pop
add
adc
push
sub
fadd
mov
adc
leave
fadd
std
add
xlat
xchg
add
add
mov
push
sub
(bad)
(bad)
into
jbe
(bad)
xchg
jbe
es
fimul
ins
pop
retf
jecxz
dec
push
adc
cld
(bad)
rol
loope
dec
bts
and
push
fst
jmp
cdq
cld
adc
dec
lea
loope
add
cld
pop
ins
scas
xchg
add
add
jbe
std
popf
test
(bad)
fist
cld
stos
mov
loope
mov
add
out
loop
pop
(bad)
movs
jmp
or
fwait
(bad)
fadd
push
shl
lea
inc
xchg
adc
call
sub
adc
(bad)
sbb
call
add
in
out
dec
js
pop
sbb
lock
bound
xchg
test
jmp
fmul
enter
out
mov
fadd
loop
(bad)
(bad)
fiadd
int
ss
loope
sub
pop
js
mov
outs
lds
out
mov
push
out
fdiv
out
mov
jge
sbb
mov
lock
out
jg
push
dec
adc
call
inc
xlat
xchg
mov
jg
(bad)
mov
ror
test
loope
bound
xchg
dec
push
lock
bound
inc
popa
xor
stos
jle
push
ins
aaa
scas
add
mov
cmp
inc
push
retf
and
jmp
leave
sbb
nop
int3
inc
pop
mov
adc
out
push
mov
adc
(bad)
(bad)
jmp
cdq
jl
(bad)
std
pop
xchg
cld
add
cld
push
imul
mov
lods
add
call
fld
sbb
cmp
and
jg
rcr
mov
add
add
or
in
sbb
lea
lock
push
jg
xchg
mov
jl
jmp
shl
nop
xor
inc
fiadd
jg
adc
loope
fisttp
pop
add
adc
bound
dec
and
adc
add
jmp
fiadd
retf
lock
dec
sbb
jbe
loopne
adc
ret
xchg
sbb
fiadd
xor
fiadd
adc
(bad)
xor
loope
pushf
ret
movs
(bad)
fadd
add
push
repz
or
lds
retf
and
inc
cdq
imul
inc
inc
adc
test
inc
loop
mov
jbe
out
lahf
inc
push
or
sbb
movs
(bad)
jo
adc
sbb
mov
loop
(bad)
stos
dec
push
std
cmc
sti
std
loop
fadd
gs
sbb
call
add
xchg
cmp
fdivr
jp
and
pop
add
mov
sbb
adc
ja
mov
loopne
dec
outs
fistp
jmp
sbb
movs
xchg
jge
int3
rcr
mov
mov
sub
test
xchg
inc
mov
or
mov
loopne
popa
popa
js
popf
jle
push
adc
ins
jmp
add
add
jns
mov
jbe
(bad)
sbb
call
out
add
out
xchg
inc
pop
imul
gs
enter
inc
shl
nop
or
(bad)
push
ja
jg
jb
push
scas
test
jmp
rcr
cmp
or
int
ret
jmp
call
dec
rol
add
movs
push
jg
lock
jp
mov
lea
xchg
je
jnp
call
inc
or
(bad)
sbb
call
inc
or
push
(bad)
jmp
dec
call
cmps
inc
adc
nop
clc
aaa
inc
jnp
call
sahf
dec
fiadd
add
add
lock
test
call
mov
xchg
cld
(bad)
xchg
inc
(bad)
int
sbb
loope
movs
aad
hlt
fadd
sbb
jge
xchg
inc
xchg
call
inc
inc
pop
mov
test
add
mov
sbb
pop
and
jmp
lock
sbb
xchg
inc
cmc
inc
add
add
push
call
xor
add
test
pop
mov
in
jns
jge
hlt
jl
sbb
call
xor
loope
and
push
jns
(bad)
stc
add
call
(bad)
jp
lock
rcr
or
inc
aad
(bad)
test
gs
movs
into
loope
lea
add
or
xchg
mov
pop
add
pcmpgtb
xchg
mov
je
jmp
fisub
xor
inc
clc
mov
jnp
push
add
xchg
(bad)
bound
sbb
jge
cmp
or
call
jge
xchg
inc
and
outs
loope
fdivr
call
add
in
pop
aaa
push
lea
loope
(bad)
int
jne
or
push
fwait
rcr
ins
dec
call
add
adc
js
lea
cld
cmp
and
sub
mov
popa
loop
shl
add
dec
push
or
call
sub
fisttp
add
add
pop
cld
daa
push
add
js
mov
shl
call
ror
xchg
rcr
nop
out
call
pop
cld
stos
gs
mov
xchg
mov
fwait
je
outs
loope
(bad)
mov
(bad)
fiadd
(bad)
lock
sub
lea
inc
movs
aaa
pop
cld
sub
add
inc
dec
or
call
inc
les
(bad)
mov
ror
sub
loope
bound
cld
daa
imul
push
mov
sbb
push
mov
dec
lea
into
loope
jne
pop
cld
lods
or
outs
pop
(bad)
rcl
dec
lea
add
add
loop
bound
adc
sbb
shr
jp
push
xor
xchg
loop
clc
cmp
jp
push
lock
jmp
outs
fiadd
xlat
lock
imul
adc
xchg
ret
(bad)
call
f2xm1
pop
iret
ins
loope
sbb
fsubr
lock
sub
add
add
pop
cld
fbld
pop
push
ins
dec
push
sti
xchg
cwde
arpl
(bad)
fdivr
out
mul
call
ins
xchg
xchg
or
pop
std
cld
(bad)
sti
call
test
call
addr16
and
outs
test
sub
push
ror
loope
mov
add
add
rcl
call
lahf
or
(bad)
call
xchg
(bad)
jmp
leave
fcomp
pop
cwde
cld
add
xchg
mov
imul
pop
std
jo
std
(bad)
into
xchg
test
add
push
sbb
fcomp
sbb
call
fisttp
outs
loope
ins
rol
add
or
adc
rol
pop
bound
inc
xchg
jecxz
inc
aam
mov
cli
loope
loop
pop
cld
adc
mov
enter
es
call
dec
add
mov
mov
inc
or
xchg
pop
push
cmc
inc
movs
pop
leave
lods
add
or
test
cmp
into
xchg
inc
test
xchg
inc
jns
xchg
inc
movs
into
xchg
inc
test
into
xchg
inc
xchg
into
xchg
inc
mov
xchg
inc
sbb
jae
(bad)
std
push
fcos
add
fsub
iret
fisttp
jge
loopne
xchg
aad
adc
loopne
mov
call
fwait
mov
or
fadd
jmp
pop
lods
adc
add
and
call
sbb
(bad)
fsubr
sbb
test
jbe
mov
clc
xchg
and
gs
inc
(bad)
xchg
lea
loope
cmp
mov
sbb
cwde
cmp
push
jae
inc
nop
jnp
add
add
lock
jno
push
loop
inc
add
xchg
mov
jae
(bad)
mov
jb
loopne
jb
call
sub
xchg
mov
cwde
jno
call
mov
jno
inc
add
loope
cwde
enter
dec
shl
jno
test
out
pop
inc
clc
add
pusha
loope
adc
jno
push
push
out
imul
jno
int3
sub
push
adc
push
inc
jb
inc
loope
lock
jbe
loope
lock
ins
jmp
jno
jmp
adc
inc
shl
lock
loope
cdq
outs
push
(bad)
fmul
lock
push
dec
pop
cld
hlt
dec
pop
adc
adc
push
add
(bad)
fdiv
out
cli
jecxz
or
pop
adc
add
call
int
xchg
inc
in
xchg
je
pop
loope
sbb
call
jbe
mov
(bad)
pop
pop
jl
fist
fwait
je
pop
loope
adc
aaa
jmp
pop
jnp
ds
call
cmp
sar
cmps
(bad)
push
pop
push
call
into
das
fiadd
out
mov
jno
push
jg
xchg
(bad)
jmp
mov
pushf
cld
(bad)
retf
fadd
loope
cmp
retf
cwde
test
jmp
mov
add
cmp
jmp
push
push
stc
imul
pop
push
lea
mov
inc
rcl
push
dec
sub
les
into
pop
add
enter
pop
loope
push
xlat
jbe
lock
(bad)
bound
inc
jecxz
loope
jg
xchg
lea
imul
add
jbe
mov
pop
fiadd
jecxz
and
or
pop
add
ret
sbb
fistp
pusha
in
cmps
(bad)
bound
fisttp
loope
or
push
cmps
ret
sbb
add
xchg
dec
cmps
adc
pop
clc
xchg
xchg
push
mov
adc
fwait
(bad)
fadd
int
or
push
shl
lock
(bad)
call
xchg
fisttp
jno
call
push
rcl
push
enter
test
sbb
mov
hlt
or
jg
mov
es
xchg
test
sbb
in
dec
push
xor
dec
inc
aad
aam
and
cmp
cmps
jg
fs
add
mov
push
add
ret
xchg
inc
pop
and
and
clc
(bad)
pop
add
fwait
jo
out
ret
sbb
gs
xchg
fstp
(bad)
fldenv
dec
mov
jg
xor
loope
mov
jg
pop
(bad)
retf
fisttp
add
add
jle
out
addr16
loope
stc
fcomp
retf
push
or
sbb
scas
or
sbb
movs
jle
cdq
or
shr
cmp
movs
inc
pop
and
test
fcmovnb
xor
xchg
shl
adc
in
xor
push
addr16
add
sbb
sub
stos
and
jle
add
pushf
cld
adc
push
mov
rcr
call
sbb
and
sbb
sub
jmp
sbb
mov
fst
mov
fs
cmp
out
sbb
cmp
jmp
lea
mov
call
sbb
or
(bad)
fisttp
add
add
ss
movs
aad
test
loopne
xchg
aad
test
imul
sbb
cmp
sbb
add
push
test
add
add
fisttp
(bad)
fisttp
test
sub
scas
test
and
pop
loope
mov
enter
add
adc
mov
mov
sbb
dec
push
out
stos
and
jge
add
add
xchg
test
or
dec
gs
loop
inc
mov
xchg
mov
cld
(bad)
gs
loop
rcr
inc
out
fwait
and
test
add
sbb
sbb
ja
push
inc
pushf
and
jle
add
dec
sub
add
pop
mov
lds
test
call
(bad)
(bad)
repz
pop
xchg
fs
mov
call
push
push
add
imul
aam
aad
xchg
hlt
sbb
xor
jne
mov
mov
jmp
cmp
sbb
lods
repz
add
add
sbb
push
xchg
fs
dec
call
rcr
cmp
sbb
fld
adc
sub
sbb
jg
inc
lea
mov
adc
popf
(bad)
and
jge
test
add
pop
bound
pusha
xor
in
sbb
jbe
(bad)
pop
cmp
adc
add
add
jge
mov
dec
test
leave
(bad)
xchg
rcl
jmp
pop
inc
lea
mov
fiadd
nop
lock
cmp
sbb
aas
ins
jecxz
shl
cmp
sbb
out
and
sbb
or
and
add
add
or
movs
and
jl
add
jmp
out
xchg
test
mov
jmp
rcl
call
dec
iret
and
loopne
movs
rcl
call
sbb
push
fstp
call
jle
add
mov
rol
add
jmp
std
(bad)
gs
ret
push
mov
jmp
mov
mov
mov
xchg
mov
es
and
sbb
or
popa
cld
push
xchg
cmp
cmc
ins
pushf
out
sbb
int
pop
add
cmp
push
add
inc
in
arpl
add
add
sbb
mov
or
sub
dec
lea
mov
dec
(bad)
jmp
or
jecxz
loope
(bad)
inc
adc
loopne
cmp
sbb
ins
(bad)
jmp
cmp
and
outs
jecxz
mov
mov
sbb
stc
xchg
call
add
add
pop
loope
popa
test
jg
test
arpl
pop
js
dec
mov
pop
(bad)
sbb
add
and
jecxz
ss
mov
add
loop
and
jg
sbb
into
xchg
inc
jns
dec
(bad)
fld
dec
(bad)
fld
push
call
cmps
cmp
nop
mov
pusha
punpcklbw
iret
imul
and
jg
sbb
stos
jbe
pusha
adc
in
sbb
pop
cdq
xor
aad
add
inc
loopne
jmp
xchg
sbb
and
shl
std
or
lahf
je
cmps
xchg
inc
leave
mov
add
sbb
(bad)
adc
sub
or
ret
push
mov
test
call
shl
cwde
cld
add
loopne
adc
jp
add
push
fs
pop
push
(bad)
fstp
cmp
cli
cmp
jge
add
add
sbb
test
fisttp
scas
lock
mov
dec
pushf
and
mov
add
arpl
movs
repnz
and
test
add
or
test
sbb
jl
and
mov
xor
mov
or
inc
leave
lds
ins
pop
jecxz
xchg
mov
dec
(bad)
jmp
dec
or
bound
loope
and
test
pop
add
xor
cmp
xchg
xchg
mov
aad
pushf
and
xchg
add
arpl
pop
test
push
and
cmp
movs
test
push
fisttp
cmp
xchg
test
push
mov
add
ret
or
subps
aas
loope
mov
pushf
and
xchg
add
xchg
or
test
lea
test
test
lods
(bad)
and
popa
loope
shr
dec
stc
ret
lock
or
loope
adc
enter
ins
cmp
int
imul
adc
xchg
lock
or
push
mov
and
and
pop
mov
add
push
jmp
mov
adc
jecxz
loope
test
pop
and
xchg
fiadd
pusha
clc
dec
dec
(bad)
sbb
(bad)
test
add
add
cmp
test
loop
jl
dec
lea
loope
inc
xchg
xchg
mov
add
jmp
inc
pushf
and
sbb
mov
mov
cmp
or
mov
jo
pop
leave
sbb
mov
dec
xchg
xchg
inc
mov
dec
(bad)
fldcw
jmp
mov
in
out
adc
fwait
or
push
sbb
ins
push
clc
(bad)
adc
xor
or
xchg
dec
lea
sbb
stc
test
clc
jae
popa
loope
jne
pop
add
popf
xor
call
leave
sbb
or
push
into
xor
ins
dec
arpl
adc
je
fild
add
add
xchg
sbb
cld
loop
fisttp
sbb
mov
out
cmp
dec
repnz
and
imul
lock
adc
call
mov
or
push
sbb
std
push
or
sbb
sub
or
sbb
sbb
cmp
(bad)
sbb
dec
sbb
add
cmp
sbb
mov
xchg
mov
xchg
push
dec
push
or
lods
imul
xchg
jbe
loopne
cmp
sbb
popf
mov
jmp
jmp
mov
pop
test
sbb
jnp
xchg
and
jg
add
cmp
sbb
and
movs
dec
add
fdivr
dec
in
sbb
add
cmp
jg
push
sbb
and
jg
es
pushf
xor
std
dec
xchg
add
and
inc
mov
fiadd
arpl
add
add
adc
pop
gs
gs
sbb
fadd
dec
mov
mov
add
adc
jg
mov
add
xchg
jl
movs
lock
lea
loope
pop
or
adc
lds
adc
leave
test
add
fwait
shr
loope
stc
push
xchg
repz
mov
add
add
cmp
or
sbb
loope
push
pop
(bad)
xchg
aaa
or
rcr
pop
jp
call
cmp
mov
les
and
pop
rcr
fs
jle
test
mov
scas
cmp
jbe
lods
popf
jmp
adc
add
add
jb
bound
pusha
jl
push
loopne
push
mov
js
pop
rcr
outs
xor
lahf
stos
xor
and
fdivr
push
mov
adc
mov
push
push
in
call
push
inc
add
std
inc
fs
loop
fs
test
sub
xchg
xchg
repz
add
sbb
ins
mov
push
cmp
into
ret
pop
inc
gs
push
cld
jnp
and
or
lahf
setnp
jmp
push
in
call
sub
aas
add
test
jae
add
and
test
bound
clc
pop
mov
loope
push
fstp
call
jle
pop
and
mov
mov
cmp
add
dec
and
ltr
jo
fstp
cmp
push
cmp
aad
xchg
inc
mov
sbb
adc
add
(bad)
adc
jle
add
cmp
add
add
adc
imul
pushf
and
jl
add
imul
cmp
out
cdq
cld
xor
mov
js
call
jle
mov
add
arpl
jecxz
push
mov
xor
ins
xchg
dec
jmp
ja
mov
call
sar
push
cmp
add
aad
pop
add
xor
int3
shl
les
and
xor
push
cwde
sbb
sbb
or
xor
mov
add
in
xchg
dec
stc
jb
inc
stc
stos
xchg
add
sbb
jnp
jge
add
sbb
(bad)
aad
call
sbb
shl
add
add
add
dec
xchg
sbb
push
or
mov
ins
or
sub
add
stos
pop
cld
push
or
test
xchg
and
jl
add
cmp
inc
xchg
dec
(bad)
fldenv
pop
add
sbb
in
imul
(bad)
test
jne
inc
add
add
movs
lock
sub
pop
mov
mov
fdivr
or
fisttp
sbb
call
sub
loopne
hlt
adc
xchg
test
int3
dec
xchg
sbb
fadd
shl
mov
nop
mov
call
(bad)
out
pop
add
add
adc
xor
gs
adc
xchg
sbb
(bad)
jp
jb
sti
(bad)
jnp
jge
je
test
adc
push
xchg
or
adc
jmp
jne
mov
add
arpl
in
xchg
and
pop
pop
and
rcl
je
jns
and
add
add
int
(bad)
faddp
xor
jle
xor
jmp
test
xor
sti
stos
and
sbb
std
daa
mov
add
movs
and
sbb
adc
je
add
sbb
cmp
in
sbb
inc
clc
jecxz
inc
add
(bad)
jg
call
lods
cld
imul
or
popa
sub
cmc
xchg
adc
cmp
xchg
jg
(bad)
pop
jae
add
add
cld
loop
lods
and
jg
add
xchg
jg
dec
xchg
sbb
pop
retf
fs
push
jmp
out
(bad)
aad
pand
fdivrp
push
cwde
xchg
repz
and
cld
add
addr16
cwde
adc
cmps
jmp
fdiv
mov
pop
rcr
cmps
fs
sbb
cmp
mov
jmp
mov
mov
jg
je
gs
repz
mov
dec
sbb
jecxz
jecxz
es
lock
xor
inc
ss
les
loope
add
add
sbb
fwait
or
data16
sub
mov
push
add
inc
pushf
and
jp
add
das
loope
leave
pop
xchg
rep
xor
xchg
lock
dec
sbb
jg
jecxz
inc
out
pop
add
jge
adc
push
mov
in
call
dec
push
xchg
inc
mov
add
add
inc
sbb
cmp
(bad)
xchg
sub
cmp
add
daa
mov
mov
test
push
fld
call
jl
pop
test
jmp
inc
loope
popf
iret
push
adc
les
adc
mov
or
mov
adc
enter
cdq
add
xor
add
add
mov
fiadd
pop
mov
and
xchg
lock
test
loope
cdq
xor
leave
movs
(bad)
movs
cmp
into
sub
jbe
jg
xchg
je
call
(bad)
gs
jmp
mov
imul
fiadd
add
add
scas
cld
bound
mov
and
sbb
sub
and
mov
cld
(bad)
int
mov
dec
xor
add
sti
jnp
in
jmp
adc
add
test
stc
cmps
cmp
ins
pop
lods
cld
adc
xlat
mov
inc
test
lahf
add
cld
jnp
movs
add
add
jmp
xchg
sbb
lods
adc
cdq
sub
out
sbb
cld
mov
(bad)
fcom
scas
cld
(bad)
retf
out
sub
inc
push
xor
mov
cdq
add
fstp
jbe
bound
dec
mov
sub
lock
inc
sbb
add
jecxz
mov
(bad)
cmp
test
out
and
in
pop
add
stos
xor
push
xor
pop
cmps
cld
out
hlt
jecxz
push
ss
(bad)
cdq
sub
mov
ds
jns
xchg
dec
mov
mov
int3
xchg
sbb
sbb
xor
jecxz
fidiv
int3
mov
aas
xchg
push
mov
test
add
add
add
xor
(bad)
(bad)
xor
mov
aad
inc
addr16
dec
retf
push
adc
les
and
mov
push
daa
inc
or
cmp
loope
xor
gs
aad
sbb
fiadd
cld
ret
and
std
sar
js
dec
(bad)
sbb
mov
fwait
and
add
add
inc
ins
or
pop
xchg
add
int
and
sbb
test
xchg
and
sbb
std
test
dec
(bad)
fstp
pop
add
sbb
cmps
push
aas
pop
les
xchg
fiadd
imul
xor
pop
mov
rol
add
xor
ins
adc
cld
adc
xchg
and
sbb
sub
cld
ins
cld
loop
loope
loope
sub
adc
jmp
(bad)
fstp
dec
push
lock
push
sbb
pusha
(bad)
iret
lea
sbb
mov
outs
lock
add
add
retf
xchg
and
sbb
sub
and
jg
das
dec
les
aad
hlt
sbb
or
test
mov
xchg
fs
enter
daa
add
add
pop
les
cmp
dec
(bad)
jmp
jg
popa
inc
cmp
push
ss
xchg
and
sbb
int
ins
cld
push
(bad)
dec
(bad)
icebp
mov
lock
out
loope
shl
js
and
test
add
cmp
pop
daa
ret
popf
mov
movs
jnp
test
ins
pushf
jmp
test
xchg
add
sbb
add
add
jle
test
rcr
cdq
push
mov
int
and
add
add
ss
enter
sub
rcr
sbb
int3
add
call
dec
mov
aaa
jbe
in
pushf
jmp
adc
mov
bound
(bad)
pushf
call
(bad)
retf
out
sub
mov
inc
loope
shl
sub
mov
add
je
popa
xchg
repz
mov
inc
add
jge
daa
xchg
inc
loope
gs
add
leave
mov
adc
sbb
cmp
jo
ret
pop
imul
jne
pop
and
sub
xchg
lock
sbb
aaa
in
jecxz
bound
xor
bound
xchg
mov
add
add
sbb
std
sbb
cld
add
out
sbb
aas
xor
loope
mov
pop
(bad)
adc
cmp
cmp
cmp
(bad)
(bad)
imul
sbb
les
adc
add
cmp
adc
inc
cmc
fs
movs
add
add
sbb
fild
int3
cmp
jnp
and
dec
pop
shl
loope
mov
dec
add
test
je
jne
je
jno
adc
bound
(bad)
std
bound
stos
and
sbb
cmp
xchg
jbe
jo
cmp
aam
sbb
jne
fdivr
push
inc
xchg
mov
cmps
xchg
or
ins
call
xchg
sbb
loope
xor
in
cmp
repz
jbe
cmp
cmps
jg
push
sbb
in
mov
cmp
xchg
xor
lds
add
xchg
dec
mov
add
pop
add
pop
push
lea
xor
sbb
out
xchg
pop
or
adc
int
cwde
add
lds
lods
or
sbb
push
rcr
xor
lock
ds
sbb
dec
mov
mov
lock
add
add
mov
loope
push
aas
dec
inc
sub
xchg
and
sbb
cld
adc
sub
mov
js
iret
xchg
jmp
test
push
bound
add
jge
xor
mov
dec
push
inc
adc
push
retf
add
sbb
sub
loopne
sbb
loope
jge
mov
add
pop
add
sbb
loop
fisttp
(bad)
xchg
test
xchg
jo
aas
xchg
mov
adc
and
sbb
mov
sbb
dec
int3
stos
and
inc
loopne
sub
retf
fst
add
in
sbb
stc
cmp
fadd
(bad)
jo
cmp
fwait
add
test
sbb
push
push
clc
xor
cmp
sbb
push
lea
sbb
mov
pop
add
pushf
and
inc
loopne
data16
mov
jno
fiadd
inc
clc
sbb
xchg
xchg
dec
mov
cmp
push
jmp
add
xchg
dec
lea
xor
lods
cmp
and
add
retf
and
sbb
cld
bound
xchg
mov
jns
add
ds
mov
and
add
add
jg
add
inc
loopne
cwde
jg
add
int3
xchg
and
jle
add
(bad)
fldenv
add
fcomp
call
cmp
sar
addr16
and
sub
add
inc
loope
pop
jb
(bad)
cdq
pop
aam
adc
and
jmp
dec
lea
nop
fdivr
mov
xchg
mov
(bad)
(bad)
aad
enter
dec
push
and
cmp
movs
jle
call
push
repnz
test
sbb
cmps
xchg
mov
mov
mov
mov
test
jle
icebp
aad
loope
fwait
lods
xchg
test
scas
fld
add
add
sub
sbb
adc
jle
mov
std
(bad)
and
cli
cmp
sbb
or
sti
fisttp
xchg
mov
(bad)
pop
pop
int3
add
aaa
fsubp
jmp
dec
adc
fisttp
cmp
cwde
test
or
inc
(bad)
(bad)
rcr
dec
push
lock
lods
cmp
jb
mov
sub
gs
sub
loope
dec
adc
mov
pop
xchg
and
mov
add
xlat
dec
lea
and
inc
loope
inc
sub
jo
cmp
test
call
pop
dec
push
lea
movs
add
test
pop
sub
add
in
lock
sub
movs
test
fisttp
and
mov
add
inc
pop
les
xchg
inc
jns
js
pop
(bad)
sbb
or
pop
test
bswap
clc
cmp
add
pushf
and
mov
add
or
arpl
push
cli
adc
in
xchg
ins
add
push
nop
adc
add
add
and
jo
inc
ficom
jmp
jmp
addr16
inc
pop
mov
dec
sbb
aad
dec
push
pusha
mov
sbb
dec
imul
inc
movs
adc
or
or
cmp
movs
sbb
fiadd
cmp
cwde
sbb
sbb
cmp
add
lock
cmp
push
sbb
fimul
test
sbb
push
xchg
lock
add
sub
(bad)
fldcw
and
std
jl
add
inc
pushf
and
mov
add
jmp
adc
fiadd
xchg
lock
pop
(bad)
(bad)
xchg
dec
or
lock
(bad)
loopne
or
xchg
and
test
add
push
je
add
dec
lea
sub
icebp
mov
loopne
icebp
sub
add
dec
adc
mov
ins
mov
mov
ds
gs
test
pushf
and
sbb
cmc
inc
pushf
and
mov
add
sbb
std
call
xchg
sbb
les
fadd
imul
or
inc
pop
loop
push
inc
adc
mov
adc
inc
pushf
and
mov
add
std
loopne
(bad)
add
or
loop
jl
dec
lea
and
xchg
ins
fdivr
ss
mov
loopne
push
jmp
dec
push
lock
add
add
rcl
call
cmps
adc
sbb
xchg
mov
lds
and
push
cli
ret
sbb
in
lock
sbb
xchg
test
mov
fld
xchg
sbb
aad
jmp
movs
adc
xchg
iret
xchg
enter
aam
add
add
sub
(bad)
loop
fmul
push
dec
(bad)
fldcw
int3
add
ret
sbb
jmp
dec
adc
sbb
int3
pop
sbb
std
mov
inc
xlat
dec
push
mov
xor
or
ror
jno
pusha
add
inc
loope
mov
sbb
dec
adc
jnp
bound
xchg
and
sbb
(bad)
dec
lea
and
add
jg
or
mov
cmp
jg
call
push
inc
push
lea
and
jmp
jg
add
lock
add
(bad)
loope
pusha
add
dec
mov
sbb
fiadd
add
add
neg
iret
xchg
inc
mov
rcr
pop
add
sbb
pop
sub
add
or
aas
pushf
and
sbb
(bad)
push
test
or
out
push
test
cmp
movs
jle
call
inc
iret
xchg
mov
inc
loopne
movs
out
fs
pop
mov
sbb
test
jle
call
cmp
or
ins
jecxz
cld
adc
ficom
mov
sbb
mov
sbb
and
sbb
call
jge
push
pop
inc
fiadd
and
retf
loopne
sbb
add
sbb
push
jne
pushf
and
sbb
pushf
loope
pop
les
dec
sbb
xchg
pop
clc
mov
cli
loopne
ss
dec
jns
lock
loopne
dec
or
mov
iret
dec
lea
and
cmp
mov
fadd
mov
add
sub
mov
jge
mov
xor
aad
sub
xchg
(bad)
mov
pushf
and
jge
add
cmp
dec
jge
add
std
xchg
xchg
call
add
int3
add
sbb
out
adc
adc
xor
dec
xor
inc
push
aam
test
and
out
lock
sbb
aam
and
inc
loop
fmul
dec
(bad)
loope
and
jecxz
fdivr
(bad)
rcl
jmp
jmp
imul
cmp
aad
sbb
jne
fdivr
data16
fadd
xchg
mov
mov
arpl
cli
ja
mov
push
and
movs
xor
cs
loopne
fcmovnbe
xchg
test
rcr
test
sbb
push
sub
jmp
adc
adc
push
into
xchg
enter
aam
sbb
or
add
or
or
imul
fdivr
(bad)
cdq
and
add
in
xor
call
adc
sbb
cmp
call
(bad)
(bad)
(bad)
(bad)
aam
push
push
leave
xor
std
dec
js
add
dec
lea
and
xchg
xor
jge
loopne
sub
lods
and
jge
add
add
ret
lea
xor
inc
out
loopne
xor
add
shl
sbb
popa
push
dec
lea
or
push
rol
adc
jge
lea
or
cmp
pushf
xlat
arpl
pop
(bad)
rcl
xchg
inc
leave
cmp
pop
sbb
mov
aam
sbb
cld
loop
fisttp
sbb
rol
jmp
push
dec
or
jmp
dec
push
lock
cmp
dec
imul
mov
cmp
sub
out
pop
mov
inc
sbb
and
mov
inc
sbb
fdivr
mov
sti
stos
and
xor
loopne
cmp
or
push
push
add
aad
sbb
add
cwde
sbb
xchg
sbb
xchg
ins
sbb
and
cmp
movs
sbb
push
inc
fiadd
xor
push
stos
jmp
sbb
and
xor
neg
jmp
in
pop
les
rcr
test
add
add
and
(bad)
aaa
out
loopne
mov
xchg
dec
stc
mov
loopne
mov
sbb
dec
addr16
(bad)
dec
lea
jg
mov
jmp
adc
add
push
stos
and
xor
dec
data16
pop
jg
mov
sub
xchg
out
imul
add
add
add
fwait
and
xor
dec
jg
add
mov
push
add
hlt
mov
(bad)
cdq
sub
add
jl
loop
cmps
dec
adc
nop
leave
xor
lods
jmp
fiadd
aaa
clc
xor
sub
dec
(bad)
pop
sub
add
add
loop
ins
retf
dec
lea
and
out
addr16
inc
xlat
xchg
mov
std
(bad)
movs
push
movs
data16
dec
push
adc
sbb
mov
add
pop
jle
push
xlat
xchg
mov
mov
fisub
out
idiv
loopne
nop
mov
mov
mov
add
int3
xchg
enter
int3
sbb
cmp
jge
call
pushf
int
inc
stc
and
iret
enter
cli
cmp
fdivr
cmp
xchg
adc
fmul
jns
add
repz
push
sub
push
and
or
dec
push
loopne
cmp
(bad)
pop
fdivr
(bad)
mov
enter
add
sbb
ss
xchg
mov
inc
loopne
push
or
loopne
xor
cmp
sbb
or
pusha
pop
add
cmp
add
jo
mov
pop
fdivr
sbb
cmp
fadd
lea
sbb
add
test
pop
push
loop
push
add
test
sbb
sub
dec
lea
sbb
add
test
mov
loopne
push
lock
sbb
push
pop
fdivr
cmp
scas
stos
and
jns
add
cmp
sbb
call
sahf
cmp
daa
test
push
nop
mov
jl
test
lea
add
add
rol
sub
fsub
sbb
dec
in
fld
ret
lock
lock
fldcw
push
lea
daa
in
add
enter
push
cmp
cwde
sbb
mov
add
pushf
and
xchg
add
or
push
mov
xchg
and
xchg
add
add
add
xchg
jnp
add
dec
lea
xor
mov
loopne
stos
add
or
dec
push
pusha
test
sbb
fnstsw
cmp
call
(bad)
xchg
mov
jno
add
or
pop
adc
ja
mov
sbb
xchg
xor
mov
loopne
mov
add
add
stos
cmp
sbb
jmp
sbb
cmp
loopne
pusha
xchg
add
inc
fiadd
(bad)
dec
lea
adc
adc
fist
call
push
cmp
call
push
int
inc
add
or
add
lea
add
add
cwde
test
pop
es
add
xor
in
es
adc
fild
int3
cwde
sbb
(bad)
loop
dec
push
adc
pusha
lods
sub
iret
dec
lea
and
lock
cmp
loopne
cmp
lods
and
sbb
ins
mov
pop
sbb
add
xor
add
add
xchg
sbb
add
stos
lods
stos
and
jns
add
mov
mov
pop
adc
aad
cs
fidiv
into
ret
sbb
aad
fld
push
or
ficom
movs
rcl
add
test
add
add
rcr
sbb
cmp
(bad)
push
stos
xchg
and
test
add
int3
add
or
call
les
jge
gs
and
push
sbb
adc
fsub
sbb
push
(bad)
pop
and
add
xor
loope
lods
ror
adc
call
jbe
xchg
mov
pop
pop
arpl
fisttp
mov
clc
movs
jg
call
inc
(bad)
xchg
mov
mov
inc
pop
rcr
mov
sbb
fimul
mov
jl
jg
call
jge
cmp
stos
stos
and
sbb
cld
push
mov
fadd
sbb
adc
sbb
add
jnp
bound
loopne
mov
xchg
and
sub
call
cmp
movs
jle
(bad)
sbb
rol
jecxz
loope
and
sbb
out
fld
addr16
mov
loopne
cdq
sub
sbb
push
xor
sbb
xchg
adc
pop
les
into
fiadd
aad
(bad)
pusha
fsub
pop
mov
xchg
dec
stc
pop
lock
fchs
push
mov
jle
add
ds
(bad)
dec
lea
jge
mov
loop
push
or
loopne
std
push
cmp
add
xchg
and
add
add
add
add
iret
dec
lea
dec
fs
test
gs
loope
push
adc
sbb
jmp
test
enter
push
push
test
push
mov
test
call
scas
inc
js
or
test
sbb
in
fiadd
add
add
int
pop
test
and
add
test
lea
and
sub
(bad)
jns
sub
add
pop
les
mov
sbb
add
cwde
test
push
lods
test
xor
sub
dec
add
push
fld
sub
mov
(bad)
mov
add
add
fsub
arpl
inc
rcl
jmp
(bad)
cwde
cmp
sbb
popa
mov
call
cmp
fadd
xchg
mov
sti
sbb
aad
call
data16
xchg
xor
jbe
loopne
pop
push
pop
add
xchg
cmp
sbb
sbb
add
gs
ss
mov
or
inc
inc
add
adc
and
sbb
mov
fist
jmp
add
sbb
enter
fmul
test
jge
(bad)
pop
and
add
add
add
mov
in
es
adc
fild
cmp
cwde
sbb
or
mov
push
lock
mov
and
add
lock
xor
test
sbb
mov
ror
sub
add
xor
out
fchs
xor
loope
mov
sbb
cld
and
xchg
mov
fstp
call
or
dec
into
rcr
mov
add
sbb
add
or
(bad)
lea
xchg
mov
stos
mov
movs
cmp
pop
sbb
add
add
and
sbb
xor
xlat
(bad)
fldenv
int3
add
mov
loope
cmps
inc
adc
mov
xor
lea
inc
and
push
sbb
adc
fchs
sub
push
(bad)
pop
and
add
mov
loope
lods
ror
mov
inc
call
push
mov
mov
cmp
inc
add
add
fisttp
mov
clc
movs
sbb
sar
xchg
mov
rcl
or
pop
rcr
mov
sbb
push
fisttp
mov
add
sbb
or
popf
cmp
stos
stos
and
sbb
cld
bound
xchg
mov
(bad)
call
and
add
add
inc
jge
add
test
loopne
mov
xchg
and
sbb
clc
aad
sbb
sub
add
pop
mov
call
stos
cmp
movs
jg
push
push
out
test
sbb
xchg
(bad)
lock
push
lea
inc
inc
push
xor
and
inc
add
add
aad
xchg
popa
fistp
outs
fiadd
pop
lock
pop
mov
xchg
dec
mov
loope
push
retf
and
jle
add
imul
sbb
add
jle
or
or
lods
and
jp
add
fiadd
add
xchg
and
js
add
push
lea
sbb
add
add
add
add
push
loopne
cmp
data16
call
dec
mov
inc
adc
sbb
cmp
pop
jle
and
call
scas
cmp
mov
repnz
es
lea
jle
test
out
sbb
in
lock
push
sbb
add
jge
(bad)
pop
sbb
add
(bad)
(bad)
movs
int
in
les
shl
retf
jmp
cmp
cwde
test
imul
dec
pushf
and
mov
add
jl
arpl
inc
push
cmp
push
and
in
add
jecxz
push
shl
cmp
and
ret
fdivr
(bad)
pop
xchg
mov
std
(bad)
and
jecxz
push
nop
mov
sbb
add
icebp
cmp
fadd
mov
dec
(bad)
in
adc
mov
pop
sub
add
test
sbb
loope
or
add
mov
sbb
sbb
aam
xchg
test
gs
std
and
loope
fwait
ins
pop
or
loope
cmp
test
call
pushf
and
xchg
add
in
fld
mov
push
xchg
enter
aam
test
ins
sub
add
pop
and
ins
mov
cwde
test
imul
jb
cmp
jecxz
push
dec
adc
jmp
cmp
cwde
sbb
or
pop
dec
push
and
xor
std
aas
inc
cld
loop
dec
lea
daa
les
gs
and
loopne
dec
adc
mov
push
dec
lea
sub
add
lock
cli
loope
adc
loope
retf
and
mov
add
sub
(bad)
xchg
and
test
add
icebp
xchg
and
xchg
add
or
(bad)
imul
push
ds
jmp
pop
jne
pop
and
push
jnp
or
sub
add
lahf
pmulhuw
push
dec
adc
fisttp
cmp
push
sub
dec
push
shl
xor
mov
push
dec
(bad)
shl
les
push
xor
icebp
loope
adc
loope
retf
and
sbb
std
stos
dec
cld
bound
daa
fadd
(bad)
in
movs
pop
inc
call
sub
inc
pushf
and
mov
add
sbb
add
add
add
xchg
enter
aam
sbb
(bad)
loop
fisttp
sbb
cmp
push
fiadd
jp
imul
loopne
sbb
(bad)
fldcw
aam
and
inc
loop
fcom
lea
xor
push
retf
and
in
jmp
push
inc
add
add
mov
sbb
or
jmp
cmp
fadd
xchg
mov
cdq
(bad)
movs
call
ja
jle
sbb
movs
xor
inc
cld
loopne
lds
add
mov
sbb
fldcw
aam
push
sub
xor
xor
loopne
fldcw
loopne
push
or
add
add
push
fiadd
js
and
(bad)
loopne
fcom
call
cmps
or
enter
inc
push
xchg
mov
mov
jmp
out
push
inc
std
ja
mov
and
add
jg
test
pop
jns
add
mov
add
jg
(bad)
sbb
aam
xchg
jg
add
sti
loopne
sbb
fadd
xchg
jg
mov
iret
sbb
push
jns
mov
sub
dec
call
(bad)
or
pop
jg
push
dec
xchg
mov
dec
fdivrp
adc
div
rol
sbb
adc
stc
loopne
movs
jns
add
jle
(bad)
pop
and
add
in
gs
jle
sub
repz
pop
and
fist
test
jb
pop
add
loopne
sub
dec
call
push
or
push
dec
xchg
mov
retf
push
out
push
push
div
loope
sbb
push
jle
loope
stc
loopne
std
jno
add
add
mov
jle
(bad)
test
jle
add
stc
loopne
imul
dec
mov
dec
fiadd
ja
not
loopne
cld
push
dec
call
add
cwde
test
inc
xchg
mov
sbb
push
loope
ja
pusha
ret
jmp
test
jge
add
add
icebp
loopne
xchg
jns
add
enter
test
(bad)
fnstcw
aam
push
test
push
test
popa
icebp
stc
loopne
cdq
and
adc
dec
fiadd
add
loopne
jl
dec
call
or
fadd
mov
jge
jmp
in
adc
and
push
sbb
movs
test
sbb
loopne
gs
add
mov
je
test
(bad)
sbb
aam
xchg
test
gs
std
cs
fldenv
je
push
test
stos
dec
fiadd
(bad)
imul
jno
loopne
in
dec
dec
call
xchg
add
sbb
mov
jno
inc
add
add
stc
ja
rcr
lea
xor
sahf
stc
loopne
in
pop
add
cmp
sbb
pop
cmp
add
movs
xor
pop
out
loopne
sbb
mov
mov
push
fiadd
xchg
test
sub
dec
call
(bad)
(bad)
cmp
push
add
push
push
xchg
mov
lods
(bad)
push
jmp
push
adc
ja
add
lea
xor
scas
stc
loopne
xchg
outs
pop
add
sbb
imul
fwait
add
xor
sahf
stc
loopne
imul
dec
mov
int
add
out
loopne
pop
push
dec
call
jmp
or
cwde
sbb
inc
addr16
mov
xchg
fdivr
gs
aad
sbb
gs
das
out
loopne
adc
(bad)
cmp
ss
adc
xor
scas
stc
loopne
cdq
rol
or
push
fiadd
or
add
add
add
loopne
pushf
push
dec
call
data16
cmp
fadd
xchg
mov
in
jmp
in
ja
adc
sbb
movs
xor
(bad)
sbb
xchg
add
jo
aam
sbb
gs
(bad)
fldenv
mov
mov
add
add
fiadd
or
lahf
paddsb
pop
lods
push
dec
call
xchg
or
sbb
xchg
mov
pushf
fdivr
aad
or
out
ja
fs
sbb
aad
lock
std
add
adc
sbb
sbb
aam
movs
adc
jg
loopne
sbb
or
or
dec
fiadd
cld
idiv
mov
push
dec
call
(bad)
cld
cmp
sub
xchg
mov
sbb
lods
push
push
in
ja
cmps
push
sbb
adc
stc
loopne
adc
les
sbb
jg
(bad)
imul
add
jg
add
jg
movs
cld
jmp
lea
xor
movs
jg
mov
dec
fiadd
std
not
cld
in
loopne
jl
dec
call
out
cmp
pop
jg
inc
xchg
mov
push
(bad)
gs
push
popa
out
ja
xlat
enter
sub
and
icebp
loopne
cdq
sti
pop
add
add
push
es
(bad)
cdq
sub
add
adc
icebp
loopne
pop
sub
add
pop
sub
add
jle
mov
dec
lock
out
loopne
cld
dec
dec
call
add
cwde
jle
inc
xchg
mov
mov
cmc
push
loope
ja
pop
leave
sbb
gs
stc
sbb
sti
pop
add
mov
sbb
fstp
aam
push
jle
add
icebp
loopne
cdq
sbb
jle
mov
fiadd
mov
cvttps2pi
loopne
lods
dec
dec
call
push
xchg
cmp
fdivr
push
popa
fdivrp
aad
cdq
push
popa
out
ja
es
sbb
xchg
test
xchg
pop
add
push
lock
sbb
sbb
aam
test
jns
add
(bad)
fldcw
fadd
test
fwait
push
fiadd
cdq
imul
in
push
dec
call
xchg
add
sub
xchg
mov
aam
inc
add
add
repz
enterw
sbb
add
test
xor
pop
pop
add
cmp
aam
sbb
sub
aam
movs
test
adc
sub
cld
add
push
fiadd
mov
inc
mov
push
dec
call
out
cmp
pop
test
add
add
inc
loope
jmp
icebp
ja
cdq
(bad)
sbb
and
icebp
loopne
int
pop
add
sbb
pop
sub
add
aad
lock
icebp
loopne
pop
sub
aad
dec
mov
aad
add
lock
pop
push
dec
call
push
ret
es
cmp
cwde
sbb
inc
dec
xchg
mov
daa
fdivrp
gs
dec
shl
push
cdq
sub
gs
mov
loopne
int
pop
add
sbb
cdq
sbb
add
and
icebp
loopne
cdq
sbb
adc
push
fiadd
cwde
idiv
add
pop
lods
push
dec
call
push
add
fadd
xchg
mov
xor
call
(bad)
ja
sub
aam
xchg
xor
dec
(bad)
loopne
popf
stc
pop
add
stos
cmp
push
sbb
fstp
aam
add
mov
loopne
fldenv
fadd
add
add
fiadd
sahf
neg
or
loopne
lods
push
dec
call
xchg
mov
enter
push
rcr
add
jmp
ja
pop
mov
pushf
add
xor
push
xor
sbb
sub
add
xor
add
add
(bad)
jmp
or
jns
sbb
gs
div
cld
push
dec
call
cmps
add
sbb
xchg
mov
(bad)
fdivrp
and
push
cwde
les
lea
push
add
xor
stos
icebp
loopne
xchg
add
add
cmp
sbb
add
aad
add
jnp
loopne
sbb
pop
add
push
fiadd
mov
loopne
jl
dec
call
out
cmp
pop
sbb
inc
push
xchg
mov
push
(bad)
gs
ja
fadd
sbb
and
icebp
loopne
add
cmp
sbb
cdq
and
add
in
lock
pop
and
add
jg
mov
push
fiadd
mov
loopne
ins
push
dec
call
push
mov
enter
push
push
xchg
mov
sub
call
std
ja
call
and
dec
sti
loopne
mov
mov
xor
(bad)
fldenv
aam
and
jg
pop
enter
cdq
and
mov
fiadd
stos
test
fisttp
call
cmp
call
dec
xchg
mov
inc
loopne
aad
fisttp
ja
sbb
sbb
mov
(bad)
jge
fwait
inc
movs
mov
add
add
push
jle
call
rol
xor
xor
add
pop
jle
cmps
ins
sub
(bad)
adc
push
jmp
mov
test
jle
call
mov
idiv
inc
test
aad
adc
adc
cwde
test
enter
aad
lock
psubq
lea
sub
xchg
cmp
loope
fist
jns
sbb
xchg
movs
(bad)
gs
retf
or
sti
pop
mov
sbb
push
cld
inc
push
cmp
push
dec
popa
sti
ja
push
test
add
add
call
in
mov
xor
and
or
dec
sbb
push
ds
push
jge
push
add
test
jmp
shl
adc
or
sbb
in
ja
pop
dec
sbb
pop
dec
fdivr
jge
call
inc
pushf
and
or
inc
add
add
dec
cld
mov
push
xchg
inc
jns
push
(bad)
fldenv
test
push
test
jmp
test
call
enter
(bad)
xchg
and
pop
loopne
pop
mov
enter
stos
std
pop
aaa
add
sub
mov
loopne
stos
nop
push
and
in
push
popa
stc
dec
push
pusha
nop
cmp
call
inc
(bad)
xchg
and
push
loopne
fiadd
sbb
xchg
sbb
pushf
dec
fdivr
lock
aam
sbb
fild
sbb
ret
dec
jns
dec
mov
pop
loopne
and
pusha
shl
mov
xchg
and
jge
add
cmp
sbb
xor
lea
sbb
or
sbb
in
test
retf
and
jge
add
push
dec
lea
daa
inc
call
fild
cmp
cwde
sbb
inc
push
xchg
mov
(bad)
jmp
(bad)
xchg
test
(bad)
gs
lock
jmp
pop
dec
jmp
push
push
fcmovnu
test
sbb
push
mov
loopne
jg
xchg
mov
cmc
(bad)
adc
sbb
dec
popa
jmp
sbb
test
jbe
pusha
xchg
hlt
in
sbb
addr16
add
in
mov
call
addr16
fwait
xchg
rol
add
add
sbb
cld
add
add
mov
clc
xchg
sbb
add
sub
cmp
imul
imul
fcom
jmp
pop
push
popa
(bad)
fld
mov
sbb
fldenv
or
adc
jl
jmp
xor
and
lahf
je
mov
push
(bad)
fwait
and
add
sbb
imul
adc
je
or
or
mov
fisttp
xor
pop
cld
loopne
popa
and
je
push
push
pop
je
movs
xor
inc
cld
loopne
std
ret
fwait
and
add
dec
out
call
xchg
test
add
add
push
lock
(bad)
loopne
sbb
(bad)
cli
xor
(bad)
cdq
and
add
mov
fdivr
mov
fisttp
xor
int3
stc
loopne
mov
imul
aad
fwait
and
add
call
std
ja
pop
inc
sbb
movs
jg
push
std
mov
add
fmul
mov
enter
push
xor
jg
add
fwait
and
add
inc
out
jns
std
pop
les
and
fldenv
je
push
jg
(bad)
fstp
add
rol
call
pop
sbb
jo
cmp
adc
cli
cmp
call
add
add
sti
fisttp
cli
cmp
call
xor
dec
lods
test
jge
mov
test
call
(bad)
sub
ss
dec
lea
pop
ins
add
and
cmp
stos
and
jge
add
cmps
push
cld
bound
dec
lea
jle
test
mov
add
add
rcr
loope
jae
loopne
(bad)
fnstsw
inc
adc
xchg
rcl
call
loope
sbb
sub
cmp
fdivr
shr
sbb
xchg
dec
inc
in
dec
push
jo
cmp
fwait
cli
cmp
fdivr
ret
std
adc
ins
mov
xchg
test
pushf
mov
cli
sub
adc
lock
jno
fiadd
dec
xchg
int3
fsubr
cmp
in
dec
xchg
(bad)
jecxz
cmps
dec
adc
movs
mov
cdq
inc
adc
ins
push
push
popa
add
and
mov
add
or
fadd
sbb
ins
cmp
in
dec
push
dec
fwait
and
mov
add
add
pushf
mov
xchg
xchg
inc
xchg
test
(bad)
stc
test
xchg
mov
(bad)
xchg
ins
sub
test
fcmovne
fisttp
or
push
test
push
stos
or
pop
test
enter
cld
bound
xchg
pop
mov
dec
sbb
adc
add
mov
test
add
cmp
call
int3
cmp
aad
loopne
shr
pop
add
test
add
popa
retf
jbe
fimul
xor
pop
jg
xor
aad
push
lock
cmp
mov
dec
(bad)
loope
mov
add
add
sub
jg
push
dec
adc
fwait
push
cmp
pop
sbb
ins
cdq
push
cld
adc
leave
lea
xor
mov
leave
cmp
call
push
sbb
in
idiv
ret
sbb
jo
pop
enter
or
in
sbb
or
fadd
add
std
(bad)
pusha
cld
add
fmul
jg
push
adc
cmp
test
stos
les
add
jecxz
ss
mov
loopne
push
push
dec
popa
jg
push
loopne
cmp
and
ror
shl
fiadd
inc
test
std
jae
(bad)
(bad)
fld
add
add
cdq
cmps
add
xor
sbb
cmp
fadd
(bad)
cld
bound
fmul
jle
lea
cmps
in
add
sbb
add
jge
push
jg
xchg
mov
imul
push
adc
inc
fwait
and
mov
add
jg
xchg
jns
adc
push
or
and
mov
add
out
add
fstp
add
test
add
jecxz
popa
jg
test
pushf
sbb
in
fld
push
idiv
push
test
int
and
or
movs
sub
or
cdq
add
add
sbb
sar
cmp
mov
cld
loop
pushf
and
test
add
rcl
add
fwait
and
test
add
jge
fsubr
jne
das
pop
jne
nop
int3
cmp
inc
fld
push
idiv
add
test
repz
xor
xchg
hlt
pop
in
dec
mov
add
add
addr16
push
push
jge
and
sbb
hlt
sbb
jae
fs
(bad)
fucomip
shl
daa
push
xor
push
loopne
cmp
add
pop
jg
aad
sbb
cld
push
add
push
lock
test
pushf
and
sbb
add
add
lds
fwait
and
sbb
bound
les
in
pop
add
pop
fld
dec
test
jo
cmp
aad
sbb
fld
jecxz
jp
xchg
dec
mov
jb
push
inc
or
fild
cmp
cwde
jle
rol
add
add
mov
fbstp
hlt
sbb
jno
fs
ja
fcmovb
fucomip
mov
loopne
in
rcr
shr
add
inc
mov
call
cdq
call
push
mov
dec
push
jo
cmp
out
inc
in
or
ffreep
pop
call
ja
jecxz
jge
aaa
inc
xchg
or
std
or
in
push
xchg
xchg
mov
xor
jmp
fwait
and
sbb
dec
popa
jnp
push
jmp
(bad)
fldenv
(bad)
call
jge
cwde
inc
adc
inc
fwait
and
add
add
(bad)
cs
popa
jnp
mov
pop
and
aad
test
rcr
add
aam
inc
stc
fmul
imul
loope
push
or
movs
test
push
adc
cmp
xchg
test
push
adc
cmp
movs
test
mov
inc
fwait
and
clc
(bad)
shl
sar
les
loopne
sub
add
es
fld
pop
test
int
push
mov
test
call
(bad)
rcl
lods
out
loopne
retf
and
imul
dec
push
nop
sub
aad
sbb
mov
xchg
mov
inc
(bad)
aad
cdq
inc
popa
jns
push
and
cmp
movs
sbb
sbb
int
push
mov
cwde
inc
xchg
add
mov
int
test
fdivrp
push
rcl
add
fld
push
idiv
shr
sbb
push
mov
cmp
adc
sbb
cdq
mov
int
sub
jecxz
mov
or
dec
rcl
push
rcl
call
rcl
add
push
sbb
xchg
(bad)
div
mov
mov
lock
xchg
sbb
movs
mov
and
sbb
mov
mov
shr
jmp
sti
pop
add
mov
add
fwait
jge
jbe
jmp
push
(bad)
pop
xchg
je
(bad)
cmps
sar
(bad)
test
cmp
mov
mov
push
loopne
in
ins
popf
inc
outs
fadd
pop
(bad)
in
push
and
cmc
ja
pop
rcr
div
jecxz
(bad)
ins
pop
(bad)
pop
xchg
or
add
int
add
add
adc
xor
adc
in
cmp
add
les
call
dec
inc
popa
outs
fadd
push
(bad)
push
addr16
and
and
cmp
ror
jmp
ret
jecxz
or
popf
jbe
lods
jno
inc
adc
call
(bad)
jp
jge
inc
add
add
xor
movs
jns
xor
pop
cmp
(bad)
dec
push
call
sub
pusha
or
mov
and
hlt
(bad)
mov
push
and
mov
xchg
sbb
movs
sbb
call
sbb
sbb
xchg
mov
cdq
inc
and
ins
sub
fidiv
fwait
rcr
nop
pop
mov
or
push
add
pop
dec
push
nop
and
pushf
aad
sbb
mov
cmp
fdivr
rcl
jg
neg
xchg
add
cdq
mov
adc
cmp
out
cld
loop
cmp
jbe
push
push
out
imul
stos
and
add
add
jle
add
jg
call
lock
push
imul
(bad)
call
sub
shr
jg
in
sub
cld
add
jne
pop
or
sub
sar
xchg
pop
cld
bound
gs
in
popf
mulps
loopne
aad
out
call
aad
add
sbb
ins
add
movs
(bad)
pop
add
xchg
xchg
jle
push
std
sahf
xchg
(bad)
loop
fist
data16
push
add
int
mov
call
mov
fld
mov
and
je
and
jb
and
mov
sbb
loope
sub
or
and
je
push
int3
(bad)
fbld
mov
add
ins
jns
jge
sbb
cmc
es
retf
add
cmc
ss
add
ins
jns
test
stos
mov
cld
pop
add
add
lods
cmp
mov
retf
xchg
test
sbb
push
aad
icebp
shl
add
loopne
int
sbb
retf
xchg
test
aad
fnsave
loopne
jne
xchg
and
test
add
shl
push
jo
cmp
sbb
enter
cli
call
(bad)
retf
stc
add
jmp
dec
mov
test
dec
stos
jge
jae
mov
add
add
mov
add
dec
push
adc
cmp
cdq
test
call
ss
xchg
mov
loopne
add
int
push
jno
push
lock
pop
test
call
test
mov
push
sbb
adc
xchg
add
jno
or
mov
inc
call
add
sbb
mov
fwait
and
test
add
sbb
test
push
sbb
aad
mul
jmp
cmps
int3
add
aam
loop
sub
dec
(bad)
icebp
cmps
jl
xchg
xor
pop
pop
loopne
cmp
and
cmp
add
pop
dec
push
ss
mov
push
bound
xchg
test
add
aad
inc
leave
mov
add
mov
rcl
pop
add
add
test
lea
adc
(bad)
xlat
xchg
mov
imul
and
js
add
gs
rcr
mov
inc
fwait
and
js
add
add
int
add
push
inc
fwait
and
js
add
test
cdq
cdq
js
std
push
jno
add
fmul
aad
test
rcr
test
dec
idiv
mov
loopne
sub
fld
pusha
dec
mov
add
add
jl
add
cmps
jl
aad
lock
rcr
xor
cmp
lock
ror
dec
lea
movs
mov
arpl
push
cmp
lods
and
sbb
fwait
add
rcr
sbb
mov
enter
test
popa
jmp
loopne
test
add
add
add
jmp
test
add
dec
or
mov
xchg
test
rcr
aad
fwait
and
test
add
push
and
shl
stos
test
ins
xchg
and
xchg
add
lods
sbb
add
dec
(bad)
sbb
out
call
lods
js
add
test
add
xchg
inc
jns
xchg
dec
jns
imul
outs
sbb
push
jl
test
jno
int3
pushf
in
dec
cmc
int
xchg
test
imul
lea
and
nop
adc
jg
test
jnp
add
iret
fld
jae
jne
pop
loopne
pop
movs
rol
add
jmp
push
mov
or
xchg
jg
pop
and
cmp
cdq
jg
push
adc
cmp
lods
or
cld
shr
and
sbb
inc
ins
pop
and
iret
xchg
pushf
mov
fwait
and
sbb
in
adc
fmul
cmp
test
dec
(bad)
loope
pop
(bad)
inc
fwait
and
add
add
sbb
sub
inc
push
push
fcmovne
xchg
pop
in
loope
jmp
mov
call
cmp
call
and
test
add
jns
hlt
sub
cmp
jp
inc
movs
dec
dec
mul
push
movs
inc
or
sub
mov
into
xchg
inc
jns
dec
(bad)
fldenv
dec
(bad)
fldenv
jmp
jmp
push
pop
and
inc
fwait
and
sbb
inc
popa
push
es
xchg
adc
push
mov
inc
or
int3
add
test
loop
ins
aam
lea
pop
(bad)
sbb
add
xchg
test
call
sub
lock
adc
pop
jmp
jge
add
xor
mov
xor
jmp
jne
popa
pop
mov
push
mov
test
(bad)
cdq
mov
out
mov
jecxz
jge
pop
inc
adc
jge
add
add
fadd
add
add
cli
dec
mov
cld
(bad)
into
xchg
je
loope
test
mov
add
push
mul
and
cmp
add
cwde
test
cld
or
sbb
movs
test
call
mov
xchg
xchg
jns
fdivrp
push
inc
fwait
and
call
retf
xchg
arpl
fcomp
push
add
sub
inc
aam
test
aam
mov
adc
pop
xchg
clc
pusha
sub
stos
int
mov
adc
call
outs
mov
test
add
push
sbb
ins
outs
mov
adc
sub
or
xchg
fisub
in
test
sbb
movs
sbb
pop
mov
add
jecxz
push
cmps
cmp
jo
and
sbb
inc
inc
fwait
and
out
jmp
imul
les
sbb
sbb
cmps
inc
sbb
sbb
inc
rcpps
pop
sub
fsub
loopne
clc
push
fld
loope
push
mov
push
push
xor
in
sbb
icebp
fdivr
or
xchg
je
(bad)
add
pop
loopne
jbe
stos
and
jge
add
add
test
sbb
movs
sbb
lods
fdivr
dec
rcl
jmp
lds
rcr
shl
cmp
sbb
mov
fdivr
mov
xchg
je
mov
loopne
imul
and
sbb
or
add
cld
push
mov
lea
xor
pop
pop
loopne
mov
stos
and
jge
add
and
lea
sbb
add
jo
or
dec
loope
(bad)
pop
loopne
cdq
fistp
rcl
loope
cdq
fistp
mov
adc
add
push
sahf
bound
test
dec
loop
popa
pop
dec
push
shr
cwde
sub
jecxz
retf
mov
cmps
fwait
and
in
jmp
out
and
ins
pop
and
mov
mov
jecxz
retf
ins
pop
and
rcl
call
rcr
test
add
add
(bad)
movs
dec
call
les
mov
xchg
inc
jns
fld
inc
(bad)
gs
mov
rcr
jns
pop
pop
out
cmp
ficomp
mov
mov
add
xchg
xchg
call
pop
loopne
sahf
pop
idiv
retf
imul
xor
fs
sbb
fs
je
ins
fwait
and
sbb
jne
repz
pop
inc
mov
inc
call
adc
xchg
inc
jns
mov
ins
xchg
and
jecxz
call
jg
pcmpgtw
call
add
fdivr
and
fld
jl
call
mov
pop
add
jge
and
and
cmp
mov
inc
aad
lahf
cvtdq2ps
fdivrp
in
imul
xor
inc
loope
call
ss
inc
test
cmp
fdivrp
movs
inc
out
in
call
call
popa
push
imul
lock
aaa
sbb
scas
ret
fidiv
pop
shl
clc
cli
inc
pusha
loopne
cdq
call
sbb
dec
lea
jle
call
data16
push
daa
xchg
mov
and
add
add
aad
fwait
and
jns
add
push
in
popa
pop
dec
push
adc
std
mov
cld
add
add
sar
pusha
jmp
cmp
cwde
test
add
pop
fs
xchg
ret
and
aaa
loopne
jns
imul
into
inc
loopne
push
pop
fiadd
(bad)
and
mov
add
add
ins
adc
popf
enter
test
sbb
stos
out
jecxz
pop
sahf
add
push
shrd
sbb
pop
leave
cmp
sbb
cmp
fadd
cld
adc
fs
test
mov
jnp
test
(bad)
pop
test
call
xor
mov
add
and
pop
rcr
fs
test
test
loopne
popa
loopne
xor
mov
test
pushf
sbb
stc
(bad)
enter
enter
add
mov
push
push
xlat
dec
add
jmp
add
jl
je
retf
xchg
mov
pop
sbb
aad
xchg
js
popa
xchg
test
sbb
movs
adc
call
or
shl
call
inc
adc
push
cmp
push
sub
push
adc
mov
pop
jbe
shl
cmp
sbb
cdq
test
test
adc
loopne
(bad)
fld
fadd
fild
call
std
jnp
aad
xchg
cmp
mov
jmp
pop
xchg
mov
inc
fwait
and
xchg
add
push
and
loop
fwait
and
mov
add
xchg
fs
xchg
stos
sbb
dec
(bad)
fistp
fdiv
out
loope
cmp
sbb
jmp
mov
data16
add
fmul
push
mov
call
pop
push
cmp
sbb
xor
pop
leave
fisttp
push
cmp
aad
sbb
and
push
add
or
ds
lea
cmps
cmp
aad
fiadd
mov
add
add
jmp
pop
loopne
movs
imul
push
repnz
and
inc
fwait
and
mov
add
aaa
cmp
aas
jle
into
(bad)
fild
pop
dec
fs
push
clc
jnp
push
add
and
mov
bound
loopne
test
and
add
add
add
xor
retf
lea
inc
add
or
test
jo
dec
(bad)
fisttp
mov
fmul
test
add
ds
push
jg
xchg
mov
(bad)
xchg
push
dec
push
or
call
jmp
aas
jns
add
add
jmp
movs
inc
and
jg
add
ja
and
mov
and
add
or
lock
inc
ds
retf
call
adc
or
adc
mov
sbb
int
aaa
jnp
jg
test
xor
imul
imul
inc
xchg
stos
sbb
pop
inc
idiv
mov
jmp
imul
xor
outs
mov
xchg
inc
or
cdq
mov
fdivrp
and
xchg
(bad)
fldenv
imul
scas
js
add
add
xchg
lock
sbb
jmp
jecxz
dec
xchg
pop
ret
xchg
and
xchg
add
xchg
nop
inc
out
arpl
leave
dec
sbb
movs
sbb
xchg
es
call
(bad)
movs
jmp
mov
jle
inc
mov
fadd
ins
(bad)
push
popfw
xor
aaa
pop
jl
rcr
jae
add
add
aaa
imul
jecxz
stos
push
js
adc
or
leave
mov
xor
data16
aaa
xchg
enter
sub
pop
rcr
cmps
movs
test
test
pop
push
loop
loopne
inc
mov
jl
pop
test
cmp
jmp
add
add
mov
cmp
jb
sbb
bound
es
leave
xor
mov
jg
lock
mov
loopne
dec
leave
loope
scas
shr
call
mov
fstp
iret
push
mov
int3
add
js
aad
xchg
inc
stc
sub
test
and
and
add
add
cmp
(bad)
sbb
or
movs
test
cmp
cmp
pop
xchg
dec
inc
inc
call
and
fcomp
dec
jge
add
clc
es
push
or
in
mov
mov
pop
add
cwde
and
add
add
pop
les
mov
fiadd
imul
or
out
loopne
or
pop
pusha
cmp
call
out
(bad)
call
add
push
cmp
cwde
sbb
or
adc
and
add
xor
pushf
das
loopne
inc
ins
sub
pushf
in
loopne
jmp
jne
inc
add
add
add
xchg
fwait
and
sbb
add
sbb
and
sbb
xchg
arpl
dec
(bad)
fldenv
cmp
in
sbb
movs
dec
loope
outs
sub
sbb
in
lock
loopne
push
sar
add
push
retf
pop
les
add
lods
mov
mov
hlt
add
cwde
sbb
cwde
or
add
sbb
call
sub
cmp
loopne
js
fld
call
and
jae
xor
sbb
pusha
or
daa
dec
lea
xor
out
loopne
(bad)
or
xor
inc
das
dec
push
jo
cmp
aad
sbb
imul
add
xor
adc
fld
xchg
sbb
(bad)
loop
sub
pop
pop
loopne
mov
inc
gs
jmp
add
loope
xor
fdivr
jge
adc
add
pop
add
or
loopne
test
and
add
daa
xchg
mov
fcomp
jmp
push
fwait
shr
dec
lea
add
in
dec
call
push
mov
push
call
mov
xchg
and
jg
add
add
test
push
loopne
sub
dec
push
mov
or
mov
shr
add
sbb
sub
fist
cs
mov
jmp
pop
and
sub
loopne
lea
stos
jnp
jge
and
pop
jmp
inc
in
lahf
mulps
(bad)
aad
xchg
mov
sbb
add
add
in
fwait
and
rcr
call
jg
add
(bad)
daa
cld
add
(bad)
test
fs
movs
stos
sbb
pop
inc
test
push
lahf
pand
call
imul
xor
ja
jecxz
into
xchg
xchg
inc
cmp
cmps
cmp
cdq
cmp
fdivrp
adc
jg
scas
and
test
imul
cmps
je
das
xchg
lock
inc
sbb
add
xchg
inc
stc
es
shl
clc
cmp
loopne
sub
push
(bad)
cdq
call
sub
dec
call
push
dec
adc
push
xchg
mov
and
add
add
push
dec
fwait
and
mov
add
and
das
dec
push
add
std
dec
sub
add
jbe
mov
cmp
pop
cli
cmp
sub
adc
mov
cld
bound
imul
in
call
outs
xchg
xchg
inc
or
adc
sbb
aad
out
sbb
add
daa
pop
loope
add
test
pop
test
add
xchg
cmp
es
jns
adc
fimul
cmp
pop
test
cmp
push
cmp
sbb
(bad)
mov
call
stc
cmp
sbb
stc
cmp
dec
dec
pop
add
xor
adc
fiadd
fdiv
push
xor
pop
retf
mov
jl
in
lock
inc
loopne
out
adc
movs
cmp
add
sbb
or
repz
test
mov
fiadd
and
dec
sar
aas
mov
sbb
imul
add
aam
loopne
adc
mov
add
test
add
sbb
or
sub
call
cmp
sbb
call
push
jg
push
pop
or
in
sbb
pop
mov
add
test
xor
fs
xchg
outs
sbb
pop
inc
neg
pop
mov
add
jl
dec
adc
fwait
(bad)
cmp
fs
jb
aas
xchg
or
lds
lea
call
mov
shl
xchg
out
loopne
sbb
sar
mov
imul
(bad)
sbb
js
arpl
add
add
cdq
xor
test
add
sub
xchg
clc
and
cmp
loope
call
sbb
dec
sbb
xchg
ret
gs
add
xor
jmp
loopne
cdq
cdq
add
xor
mov
loopne
shl
ins
cld
add
and
sub
add
rcr
out
test
cmp
mov
and
jnp
test
add
cmp
adc
push
in
call
adc
int3
call
movs
xor
lods
xor
rol
mov
lahf
add
std
jnp
gs
xchg
jg
add
gs
inc
and
dec
in
push
or
dec
out
sub
aaa
aam
loopne
push
mov
lea
or
pop
in
push
cmp
push
cmps
fisttp
add
add
fiadd
(bad)
not
movs
stos
fimul
sbb
leave
xchg
sbb
movs
shl
jmp
sub
ja
cmp
mov
fiadd
cmp
sbb
dec
adc
inc
push
cmp
xchg
repz
adc
add
mov
leave
xor
cmc
add
add
les
and
add
inc
cmp
sbb
loop
int3
add
jg
fs
scas
jecxz
push
xchg
push
inc
sbb
movs
ss
in
cdq
mov
jg
push
shl
dec
call
add
jecxz
out
cs
(bad)
imul
pop
shl
xchg
test
psubb
cmp
sbb
dec
icebp
sbb
and
sbb
inc
push
aaa
jne
mov
(bad)
(bad)
aad
fwait
and
sbb
sub
mov
xchg
add
add
aaa
xchg
lock
inc
sbb
jecxz
jecxz
shl
pop
add
test
mov
dec
in
call
out
lea
out
sbb
push
das
out
cdq
mov
loope
add
pop
fs
mov
call
imul
xchg
inc
sbb
in
out
adc
jge
call
mov
cmp
loopne
leave
aad
repz
enter
sub
xchg
mov
call
xor
imul
xchg
dec
jns
pop
inc
mov
(bad)
jmp
adc
add
add
add
out
sbb
lock
cmp
push
jge
and
cmps
fild
cmp
jo
or
dec
mov
xchg
inc
stc
jo
mov
push
(bad)
fld
cmp
in
inc
push
and
adc
add
test
fwait
add
adc
test
loop
dec
and
inc
pop
sbb
test
mov
mov
loope
mov
mov
sbb
push
inc
xlat
mov
xor
inc
std
sahf
add
sti
jnp
and
sar
xor
(bad)
(bad)
bound
jle
into
ret
fild
sbb
fs
adc
xor
inc
push
cmp
and
loopne
outs
dec
cmp
fld
adc
push
cmp
js
jmp
pop
cmp
jne
xchg
and
(bad)
(bad)
or
sbb
sbb
add
or
dec
stos
inc
cmp
pop
sbb
int
cmp
bound
fmul
(bad)
(bad)
mov
aas
inc
push
test
jl
adc
aas
loopne
and
mov
enter
or
push
outs
fdivr
push
inc
mov
push
(bad)
ror
test
loope
in
pop
add
dec
add
and
leave
leave
fdivrp
movs
aas
or
xchg
rcr
test
inc
movs
sub
loopne
inc
jmp
inc
xchg
sub
add
ds
xor
sbb
sub
and
gs
leave
mov
bound
jns
jge
inc
adc
loope
mov
sbb
test
jae
inc
nop
inc
cmp
adc
dec
xchg
and
(bad)
(bad)
dec
xchg
cmp
adc
cmp
sbb
int3
fadd
sbb
ins
xchg
push
add
add
sbb
add
sbb
int3
or
cmp
sbb
inc
push
push
fiadd
(bad)
out
das
cmp
idiv
imul
sbb
sub
(bad)
mov
add
add
cmp
push
(bad)
dec
xchg
and
jle
add
add
fadd
xor
push
js
and
mov
push
cmps
fdivrp
sub
loope
mov
sbb
icebp
cmp
movs
sbb
or
jne
add
inc
push
imul
sub
sub
add
add
inc
gs
imul
inc
push
mov
mov
sub
xor
xchg
test
adc
test
mov
add
(bad)
jmp
fimul
jg
test
(bad)
sbb
aad
not
cmp
(bad)
fcomp
repz
add
es
rcl
test
sub
fimul
jg
test
sub
call
dec
sub
xchg
mov
test
add
aas
dec
push
repnz
and
jp
add
cmps
jne
jo
cmp
sbb
call
push
aas
xchg
mov
sbb
aad
xchg
or
lods
fiadd
pop
icebp
cmp
xchg
xchg
mov
in
cmp
xchg
jle
mov
std
out
std
loop
jp
xchg
jle
mov
inc
loopne
xor
xchg
pop
shl
inc
push
xor
aaa
pop
cld
push
xchg
int3
pop
adc
pop
les
adc
imul
loopne
call
(bad)
jecxz
nop
mov
loop
imul
daa
inc
dec
call
lods
adc
dec
lea
loope
bound
lock
loopne
fst
iret
push
xchg
pusha
fld
mov
add
add
loope
and
mov
inc
loopne
mov
xlat
jne
sar
daa
call
fld
xchg
dec
lods
inc
loopne
cwde
push
idiv
mov
test
add
fcomp
inc
jp
ins
add
retf
push
scas
xchg
mov
aad
pop
in
loopne
sbb
add
add
loopne
mov
(bad)
fisttp
adc
test
inc
loopne
cs
xchg
lea
enter
lds
add
inc
loopne
cmp
aam
inc
ror
sub
fisttp
ins
or
test
loope
add
xchg
inc
adc
add
fadd
loopne
mov
pop
gs
inc
sub
retf
adc
pop
(bad)
fwait
cmp
or
out
ffreep
pop
call
xchg
inc
aad
inc
mov
jns
loopne
push
dec
pop
push
or
mov
lock
ins
outs
das
adc
fldcw
sub
inc
(bad)
loopne
adc
push
bound
dec
(bad)
cmp
inc
and
jg
lods
lods
enter
aas
pop
add
js
bound
jne
jg
adc
loopne
add
loopne
dec
test
sbb
inc
call
iret
mov
leave
fisttp
add
call
ins
push
inc
jg
jl
imul
push
sbb
lods
mov
xchg
dec
fs
add
nop
adc
in
loopne
adc
out
sbb
loopne
pop
add
fsub
stos
xchg
das
mov
aam
add
add
in
hlt
jmp
test
dec
and
(bad)
(bad)
fld
in
fimul
inc
loopne
xchg
push
imul
add
add
lock
loopne
sti
adc
push
lods
push
iret
(bad)
rol
cld
pop
sbb
cld
in
leave
fisttp
or
add
add
jmp
dec
call
(bad)
dec
adc
pop
imul
(bad)
out
mov
outs
xor
dec
and
push
or
call
iret
xor
cmp
bound
(bad)
call
inc
loopne
lds
pop
add
inc
fadd
add
add
mov
add
jle
shr
lock
jge
push
adc
xchg
mov
jecxz
fadd
or
out
jmp
loopne
cdq
jg
add
leave
xchg
test
loopne
not
test
push
or
stos
sub
and
stos
jle
pop
les
rol
add
add
inc
or
nop
mov
loopne
cwde
add
inc
jmp
fadd
xchg
jg
add
xchg
sub
pop
jg
lea
loopne
std
mov
xchg
cmp
inc
fld
mov
xchg
fistp
rol
stos
push
xor
addr16
popa
ja
les
add
add
mov
pop
sub
dec
push
mov
ja
inc
popa
xchg
lock
ror
mov
repnz
sbb
or
add
push
add
push
dec
lea
push
push
(bad)
cli
xchg
inc
xchg
ja
nop
sbb
xchg
jmp
rol
add
fild
jbe
mov
xchg
loope
ret
nop
dec
push
test
push
xchg
test
loopne
sbb
sbb
bound
add
js
(bad)
fld
add
and
ja
push
sub
add
fstp
ins
add
(bad)
add
call
dec
lea
add
add
loope
(bad)
aad
push
push
iret
dec
push
jge
xchg
inc
movs
aad
adc
inc
aam
mov
jnp
(bad)
std
out
cld
loop
push
push
call
ret
inc
jnp
shl
jae
push
jnp
sar
stc
inc
push
sar
(bad)
(bad)
bound
add
gs
test
jnp
shl
mov
ds
xchg
inc
movs
push
and
clc
fild
pop
cmp
inc
loopne
iret
jno
test
jp
call
xchg
test
jns
call
jp
add
jnp
dec
call
push
std
(bad)
(bad)
loop
sbb
add
data16
lahf
add
add
add
add
jns
xor
xchg
fsub
loopne
mov
dec
push
ror
lds
pop
add
jp
pushf
pop
neg
push
pop
(bad)
std
and
sti
bound
and
loopne
aad
loopne
inc
dec
loopne
sar
jmp
jne
cmp
loop
bound
cwde
dec
aam
sbb
dec
add
add
add
call
fadd
xchg
(bad)
inc
pop
adc
pusha
adc
ret
inc
shr
dec
sbb
gs
mov
loopne
push
aam
mov
jle
add
mov
fist
mov
(bad)
jns
push
aam
mov
add
add
sbb
cmp
in
fist
pop
aad
lock
outs
loopne
in
xchg
ja
push
and
jne
jbe
imul
in
fist
out
call
jg
dec
lea
mov
in
outs
loopne
rcl
ret
ret
dec
or
push
out
jecxz
sub
xor
push
adc
adc
(bad)
jecxz
pushf
push
scas
pop
dec
cmp
push
sub
loopne
and
imul
pop
sbb
dec
mov
pop
gs
or
sbb
pop
ins
dec
call
dec
je
leave
xchg
rcl
movs
(bad)
pop
rol
out
push
or
add
add
pop
ficomp
aas
dec
mov
or
sbb
call
out
jbe
leave
cmps
jmp
ins
into
jnp
bound
jnp
and
popa
xchg
cli
or
add
and
sti
pop
add
cmc
mov
mov
jge
pop
or
jmp
fdivr
add
(bad)
mov
jno
sbb
adc
or
or
es
je
xor
fsubr
mov
sub
imul
sbb
mov
push
loopne
jb
fisttp
adc
gs
add
jne
push
hlt
mov
jo
jecxz
push
jmp
cmp
add
aad
out
mov
xchg
xchg
cli
cmp
add
aad
popa
sbb
cli
pop
add
repz
mov
ins
add
jg
dec
jns
jmp
jge
data16
mov
add
xchg
fdivp
out
mov
fmul
mov
outs
xchg
jne
sti
loope
jmp
mov
call
scas
lock
push
imul
jecxz
sti
or
jne
xchg
jae
push
outs
pop
jle
mov
add
(bad)
add
pop
mov
and
out
lock
adc
cvtps2pd
pop
test
clc
adc
xor
(bad)
loopne
jecxz
imul
js
add
ret
sbb
sbb
loopne
sbb
lea
or
jo
sbb
fucomp
nop
outs
loopne
scas
leave
sti
call
add
loop
data16
mov
sub
xor
mov
stos
loopne
call
xor
dec
cld
bound
mov
mov
test
jmp
xor
mov
xchg
ret
std
jbe
cld
loop
fild
push
mov
dec
fldenv
popa
out
sbb
jmp
and
xlat
mov
retf
enter
lds
pop
jmp
popf
xchg
jge
mov
push
(bad)
test
fwait
clc
sti
mov
test
test
fdivr
pop
cli
movq
fwait
js
test
fsubr
loope
jns
(bad)
lock
ds
(bad)
jecxz
add
repz
xchg
dec
add
ins
jmp
jb
inc
movs
lea
fisub
hlt
push
test
push
out
enter
int3
jecxz
inc
inc
sbb
mov
repz
cmc
cs
or
pop
cmp
add
pushf
add
enter
out
jmp
imul
das
or
je
test
mov
call
pop
(bad)
scas
sbb
dec
add
clc
vpcomb
mov
jecxz
lds
push
mov
mov
inc
cmp
cmp
xchg
mov
add
test
pop
popa
pop
pop
dec
push
pop
jne
aas
test
add
add
popa
pop
xchg
jne
add
add
scas
ja
mov
mov
call
jge
imul
pushf
call
push
(bad)
daa
add
sbb
daa
or
je
test
cld
(bad)
clc
lahf
jne
inc
pop
cmp
jo
imul
call
add
pop
loopne
add
or
xor
sbb
cmp
xchg
inc
xchg
inc
pop
cld
push
sbb
into
shl
push
iret
(bad)
adc
pop
xchg
inc
xchg
sub
or
cmp
pop
push
nop
jmp
jecxz
mov
aad
fistp
mov
jecxz
cmp
shl
fwait
mov
add
adc
enter
xchg
xchg
sbb
inc
mov
rcr
pop
mov
dec
xchg
jne
mov
rcr
call
ret
es
inc
popa
test
leave
jo
loopne
aas
xchg
inc
popa
xor
inc
pop
loopne
lock
mov
call
jno
lea
rcr
inc
popa
test
addr16
pop
loopne
in
ffreep
cwde
jno
out
jle
dec
adc
jo
iret
(bad)
sbb
add
xor
ret
mov
pop
clc
add
add
cmp
pop
pop
xor
pop
dec
lea
dec
call
add
jecxz
mov
add
push
mov
(bad)
sub
cmp
sbb
dec
xor
push
pop
ret
jecxz
or
or
(bad)
loopne
dec
(bad)
fdiv
call
mov
lds
jnp
jmp
scas
push
sub
cmps
aad
jne
mov
popa
pop
jne
push
jmp
push
(bad)
cmp
inc
add
loopne
pop
lock
sbb
xchg
sub
lods
inc
mov
lea
xor
inc
mov
(bad)
push
xchg
inc
xchg
add
dec
jnp
lea
xor
mov
inc
lahf
pop
add
cwde
xor
push
mov
jo
stos
push
nop
lock
jecxz
pusha
out
push
sbb
jecxz
dec
mov
loopne
in
pop
cld
fild
xchg
pop
and
sbb
adc
(bad)
jecxz
adc
imul
jecxz
std
enter
or
imul
xchg
jne
aas
pop
cld
push
xchg
sbb
add
add
jne
lock
add
test
add
xchg
cld
add
pop
clc
push
icebp
xor
jo
pop
adc
push
neg
icebp
popa
loopne
and
jle
add
test
pusha
icebp
iret
call
ins
sub
bound
lea
dec
lea
pop
loopne
adc
fld
cmps
imul
xchg
pop
(bad)
inc
sbb
or
mov
pop
shl
aad
mov
pop
loopne
ins
popf
cmp
bound
(bad)
call
jg
jbe
jnp
cwde
enter
call
(bad)
adc
data16
add
test
add
ffreep
iret
jge
cmps
push
rcr
in
mov
pop
mov
or
popa
pop
sub
and
add
mov
mov
loopne
dec
mov
loopne
sub
imul
xchg
lea
push
loopne
push
mov
add
add
das
test
push
test
add
add
call
nop
xor
add
pop
loopne
call
and
xchg
inc
adc
cld
fsubr
cwde
int3
in
sbb
dec
test
add
rcl
add
pop
dec
push
std
add
add
xchg
inc
adc
loopne
lock
add
iret
jecxz
cmp
cwde
sub
push
call
jmp
fld
push
sbb
int3
inc
add
jl
add
adc
std
xchg
xor
bound
sbb
in
or
sbb
push
pop
popf
or
or
adc
(bad)
pushf
mov
xchg
cli
xor
mov
xchg
sbb
stos
ins
add
xchg
add
push
ror
push
cmp
push
and
pop
pop
or
pop
rcr
cwde
movs
and
call
sbb
sub
or
add
add
xchg
inc
jno
mov
mov
pop
loopne
sub
sbb
retf
cld
aam
retf
and
dec
push
sub
ins
daa
add
add
repnz
jmp
mov
std
rol
add
fild
adc
mov
jb
sub
mov
sub
add
add
(bad)
fadd
or
call
pop
add
jg
rcr
push
test
or
jne
add
jge
shr
loopne
movs
jg
add
xor
(bad)
into
xchg
inc
popa
add
dec
(bad)
cwde
pop
(bad)
aad
lock
pop
loopne
sub
sbb
or
cld
(bad)
mov
adc
push
sub
or
shl
and
sub
js
jmp
aam
dec
xchg
add
popf
loop
sub
push
loopne
shl
(bad)
mov
adc
aad
pop
add
sar
jne
mov
add
add
push
and
(bad)
std
jle
add
sbb
dec
xor
sti
push
add
(bad)
shl
call
cmp
movs
pop
push
or
mov
pop
ins
scas
fwait
test
or
ret
mov
imul
fsub
adc
sbb
dec
(bad)
fsubr
add
(bad)
aad
dec
sbb
pusha
push
mov
xchg
dec
call
xchg
cmp
push
push
jecxz
and
pushf
jecxz
xchg
shl
push
and
sbb
and
call
pusha
loopne
pop
sbb
ret
jmp
outs
inc
pop
sbb
push
lea
inc
xchg
std
fcomp
movs
jle
push
std
xchg
cld
loop
in
mov
jge
add
out
loopne
or
cmp
imul
sahf
(bad)
not
pop
fdiv
adc
(bad)
add
cmc
inc
call
sbb
std
jns
add
pop
or
mov
add
adc
dec
fld
xchg
dec
adc
lea
inc
ja
fwait
retf
fcmove
jecxz
xchg
test
call
es
shufps
jmp
adc
or
rol
test
pop
ins
stc
ds
mov
pop
clc
addr16
inc
dec
push
shl
arpl
call
add
mov
fisttp
leave
jecxz
adc
into
jecxz
cmps
dec
shufps
push
sbb
neg
and
jne
ins
or
push
packssdw
push
imul
loope
jmp
shl
call
shl
loop
xchg
inc
xchg
mov
add
xchg
test
psubsb
fdivrp
rcpps
inc
fimul
leave
test
add
enter
jb
sub
add
add
push
mov
cmps
push
lds
or
test
inc
adc
popf
imul
lods
pop
call
or
lea
add
jmp
outs
(bad)
(bad)
aam
inc
and
or
jg
add
jg
sbb
pop
(bad)
std
sbb
dec
dec
pop
cld
pusha
imul
popa
dec
push
adc
int
or
push
or
loopne
aaa
xchg
add
enter
int
jmp
and
fst
loopne
jl
fwait
rcl
mov
in
xchg
xchg
inc
imul
aad
adc
pop
inc
adc
enter
jg
or
stc
pop
mov
loopne
push
xchg
sub
test
loopne
loop
scas
add
dec
lea
push
mul
jl
push
lock
add
add
sbb
ins
in
pop
cld
bound
fcom
movs
inc
mov
fsub
call
mov
fimul
jle
lea
imul
ds
jg
jmp
mov
add
fcom
sbb
cld
add
push
adc
mov
dec
movs
jecxz
data16
jne
jl
push
imul
int
mov
loopne
dec
leave
cmps
mov
(bad)
(bad)
mov
les
xor
out
mov
xor
pop
rcl
sbb
cld
bound
ror
add
neg
jnp
pop
sbb
jecxz
cld
repz
in
loop
cwde
pop
not
popf
movs
adc
adc
fimul
jl
data16
pop
xchg
jle
or
or
mov
dec
int3
jecxz
cmp
xchg
push
mov
jecxz
ror
sbb
mov
push
mov
add
popa
out
jp
(bad)
in
or
jp
ja
jecxz
clc
mov
sbb
js
jbe
or
mov
rcl
retf
ret
sub
(bad)
outs
xchg
cmc
jge
call
iret
and
push
add
add
add
aad
sbb
std
lea
inc
adc
cmps
call
out
repz
adc
push
not
mov
sbb
hlt
adc
outs
mov
add
xor
(bad)
or
sub
shl
ja
xor
add
add
push
pusha
shl
cld
shl
push
enter
fwait
jecxz
imul
mov
test
push
jns
ret
das
or
out
iret
loop
ficomp
in
lock
cmp
stos
push
fdivp
pop
push
ins
pop
add
bound
add
lock
add
cmp
or
or
mov
imul
ins
add
and
push
cld
push
shl
nop
icebp
retf
call
outs
rcl
lea
ja
push
and
inc
aad
pop
pushf
jp
fadd
jle
add
jnp
xor
ret
lock
lods
or
add
add
(bad)
fistp
adc
add
into
not
xor
gs
mov
cmp
inc
gs
adc
jnp
add
xchg
jne
gs
dec
popa
jnp
add
xchg
jne
gs
inc
and
sbb
inc
jnp
dec
icebp
add
pop
add
rcl
stos
sar
add
loopne
fwait
int
mov
push
imul
pusha
add
add
(bad)
enter
out
sbb
jle
add
ins
dec
push
sar
inc
pop
add
xchg
test
cwde
(bad)
mov
mov
aam
inc
imul
jecxz
ins
jp
call
jns
inc
stos
gs
popa
jns
rcr
pop
in
sbb
cwde
cmp
inc
popa
jge
pop
cmp
sbb
or
dec
inc
ins
inc
outs
adc
or
addr16
xchg
scas
lahf
lea
fld
xchg
mul
fnstsw
test
add
xor
push
aam
xlat
(bad)
cmp
add
sbb
out
jecxz
out
loopne
(bad)
push
ret
and
std
jle
(bad)
and
or
(bad)
fcom
push
cmps
mov
jae
or
sub
clc
pop
cmp
icebp
fiadd
enter
repz
adc
pop
mov
rol
loopne
pop
(bad)
rol
xchg
inc
in
repnz
add
add
xchg
add
imul
sbb
retf
js
cmp
push
sbb
mov
call
push
ins
(bad)
inc
loopne
mov
loopne
bound
call
(bad)
call
mov
call
jecxz
push
mov
xchg
dec
sub
push
xor
inc
jp
sar
inc
dec
lea
mov
call
shl
mov
int
fld
push
cld
vpinsrb
inc
ins
idiv
ins
loopne
loop
dec
push
and
add
ins
fsub
sub
fcmovbe
jne
add
gs
ja
jp
(bad)
aad
jecxz
mov
or
sar
imul
outs
mul
outs
loopne
add
push
mov
call
xchg
jecxz
(bad)
out
mov
outs
loopne
sub
jecxz
cmp
out
inc
pop
int
shl
(bad)
cwde
adc
lock
outs
imul
mov
jecxz
adc
xchg
aad
(bad)
pop
sbb
add
add
add
ins
loopne
int
imul
(bad)
fisubr
cld
pop
mov
push
ins
loopne
mov
outs
xchg
dec
sbb
shl
or
mov
cld
add
dec
(bad)
fdivr
out
(bad)
jecxz
bound
mov
pop
ins
loopne
mov
xchg
jne
push
dec
push
push
add
call
jne
jecxz
pop
ror
call
aaa
pop
xchg
pop
jg
jmp
ins
loopne
inc
neg
and
mov
xchg
mov
aam
outs
dec
mov
jmp
jne
stos
shl
add
add
rol
sub
repz
jmp
add
add
dec
movs
jecxz
mov
jl
jne
jg
ret
sub
xlat
jne
nop
clc
retf
call
outs
cmp
push
mov
adc
cmp
(bad)
in
jmp
inc
movs
fidivr
movs
jle
push
push
bound
mov
xchg
cmp
push
dec
sbb
sub
and
add
add
jle
push
loopne
cmp
test
jmp
sbb
xchg
inc
leave
lods
sub
cmc
adc
mov
test
loopne
mov
fsubp
xchg
mov
call
cmp
mov
in
in
fimul
mov
call
xchg
rcr
cmp
adc
add
jge
add
add
pop
jb
inc
mov
daa
xor
ins
sub
loopne
xchg
in
dec
xchg
je
mov
loopne
fisttp
(bad)
leave
xchg
in
out
out
ret
xchg
sbb
sbb
xor
test
mov
(bad)
cmp
call
fcomp
push
dec
dec
lea
add
add
test
add
pop
mov
adc
and
adc
mov
jnp
les
sar
dec
sub
cmp
retf
dec
call
dec
addps
jb
push
ss
fsubr
(bad)
fisttp
gs
add
add
push
pop
(bad)
fisttp
push
div
cmp
dec
mov
jae
pop
mov
pop
and
in
jecxz
fadd
xor
in
lock
movs
jno
sbb
loopne
stc
cmps
fld
xor
retf
push
out
adc
xchg
jg
xor
inc
xchg
and
jg
xchg
je
leave
imul
jg
mov
punpckhbw
sbb
cld
ret
add
sub
xchg
add
add
cmc
jmp
(bad)
jmp
in
sbb
sbb
leave
push
add
mov
sbb
leave
cdq
pop
dec
sbb
fnstsw
and
jg
push
add
shl
adc
cmp
fidivr
sbb
loop
jne
xor
sbb
or
scas
adc
push
jns
dec
and
mov
ficom
add
pop
jb
or
add
sbb
add
add
ror
ror
stos
(bad)
add
idiv
sub
inc
add
test
ret
fsubr
loopne
xchg
sbb
add
ins
add
push
jo
cmp
mov
inc
aad
fadd
sbb
xchg
imul
les
inc
fwait
and
xchg
add
add
add
jnp
push
add
imul
mov
dec
push
or
and
ins
sbb
je
and
add
loope
push
rcl
call
sbb
loop
sbb
cmp
add
jle
test
mov
add
in
sbb
aad
or
sbb
sub
(bad)
movs
or
cmp
ins
add
cmps
add
call
sbb
and
jle
sbb
pop
clc
bound
sbb
dec
xor
inc
and
loope
inc
lea
pop
lds
add
add
mov
inc
jne
test
cdq
movs
xor
adc
mov
adc
jmp
movs
cmp
in
sbb
xor
fimul
mov
push
fimul
mov
adc
push
mov
jmp
repnz
push
mov
add
jg
(bad)
ret
or
add
add
push
xchg
dec
jns
ja
add
out
xchg
jecxz
ins
jns
call
cwde
inc
and
sbb
xchg
push
lds
xchg
and
xchg
add
sar
bound
out
push
push
repnz
add
aad
sbb
add
in
sbb
cmp
add
adc
iret
xchg
inc
leave
cmc
dec
(bad)
sbb
adc
outs
mov
adc
icebp
pop
add
pop
and
into
fld
(bad)
imul
add
cmp
lock
cld
push
jle
push
into
sar
cmp
jbe
and
or
(bad)
cdq
stos
sub
adc
jne
call
jle
test
add
push
inc
or
mov
fimul
mov
jmp
jne
jecxz
mov
fimul
xchg
jecxz
jbe
fimul
test
jne
and
mov
and
fwait
and
jle
add
inc
or
jnp
sub
sar
sub
jle
je
movs
xchg
test
(bad)
push
aad
je
mov
cmp
std
test
pop
and
or
and
add
loopne
mov
inc
stc
mov
daa
lahf
hlt
sbb
repnz
xchg
aad
and
add
test
sahf
adc
push
add
add
fsubr
(bad)
push
jbe
push
sub
fdivrp
movs
mov
inc
and
mov
movups
imul
sbb
(bad)
clc
cmp
ins
imul
popf
neg
add
cmp
or
int3
adc
or
xor
test
or
std
fist
int
test
pandn
aad
fld
(bad)
mul
push
and
cdq
nop
ja
call
pop
cmp
fild
cmp
sbb
std
add
or
jp
and
adc
add
push
and
shl
je
mov
xlat
stos
push
cmp
sbb
ins
mov
jmp
jne
mov
add
add
mov
dec
call
mov
fimul
xor
fidivr
push
mov
inc
(bad)
aad
or
push
or
add
sbb
std
jp
cld
add
pop
and
mov
sbb
inc
cmps
pop
ja
or
ins
jg
add
add
jge
cwde
sbb
jg
jmp
add
dec
mov
xchg
xchg
pop
leave
movs
push
inc
mov
xchg
and
mov
jl
jmp
(bad)
xchg
inc
stc
mov
inc
stc
xchg
adc
pop
(bad)
cmp
lds
adc
cdq
xchg
inc
or
push
in
and
inc
aad
imul
pop
jl
cdq
loopne
scas
jl
and
jl
call
sub
sbb
jl
dec
adc
retf
pop
push
and
or
add
jg
push
or
and
jle
add
mov
cld
add
pop
and
or
add
add
add
adc
adc
ficom
in
shr
dec
mov
jmp
inc
ret
jbe
lea
mov
adc
xchg
inc
popf
pop
pop
in
lds
xor
or
mov
xchg
pop
std
or
mov
(bad)
cmp
jecxz
(bad)
jecxz
stos
dec
(bad)
push
inc
pop
call
fstp
lgdtd
cmc
push
(bad)
retf
out
push
adc
mov
jne
iret
not
jl
push
rcr
inc
popa
jg
add
gs
or
in
push
les
jecxz
mov
sbb
fs
add
jbe
sub
call
add
add
je
sub
xor
test
add
fisttp
and
pop
jg
dec
push
jg
mov
mov
or
int3
cmp
mov
repz
push
mov
jge
xchg
mov
inc
dec
cs
test
loopne
mov
cmc
gs
lds
sbb
sbb
(bad)
cmp
adc
cmp
dec
ret
lea
call
inc
xor
pop
out
lds
xchg
test
loopne
xor
jle
les
mov
jle
(bad)
fsubr
out
bound
sahf
inc
popa
jnp
ror
and
dec
dec
sub
dec
(bad)
call
cmp
call
pop
sbb
enter
push
sbb
in
dec
fsub
cld
push
sti
pushf
or
cmp
lea
stos
xchg
lea
leave
in
std
lods
mov
inc
dec
in
shl
dec
mov
add
pop
sbb
call
dec
adc
sub
sbb
jo
and
mov
pop
pushf
or
stc
rol
cwde
adc
inc
or
mov
adc
fcom
push
xor
xchg
into
pop
leave
in
sub
fisttp
mov
push
or
dec
push
pusha
cmp
bound
out
push
adc
std
sbb
add
dec
lea
mov
jmp
adc
(bad)
loop
icebp
mov
and
andnps
fimul
rcr
out
push
ins
mov
push
ror
add
bound
out
not
xchg
in
add
add
and
(bad)
mov
and
sub
(bad)
mov
and
cwde
push
lock
xor
out
jle
aad
xchg
dec
pusha
adc
jo
lahf
xchg
cli
sbb
cld
loop
dec
or
call
int3
push
ret
mov
jg
add
test
or
dec
imul
adc
or
daa
sbb
or
add
sub
dec
inc
pop
and
sbb
retf
call
outs
fcom
or
sbb
call
add
add
in
adc
sbb
adc
or
or
std
loop
adc
hlt
popa
bound
inc
dec
mov
aam
inc
rcl
add
clc
adc
call
sbb
test
bound
imul
fwait
mov
imul
(bad)
fwait
(bad)
adc
fiadd
fld
add
add
xor
ds
xchg
dec
inc
aad
jbe
jle
add
jle
mov
sbb
ins
out
dec
fist
ins
fwait
in
test
dec
movntps
pop
shl
sahf
add
xchg
inc
sbb
add
lds
(bad)
sbb
add
sub
adc
push
jmp
push
sahf
les
jg
sbb
adc
pushf
les
aam
ret
sbb
xlat
sub
nop
cld
shl
mov
shl
ret
sbb
or
lods
add
and
add
lds
add
add
int3
sbb
call
inc
xchg
sub
push
hlt
cmp
jno
sbb
lock
add
adc
leave
xor
xor
bound
jmp
mov
call
pop
sar
jae
and
push
test
shl
mov
mov
add
add
sub
dec
add
or
mov
lds
inc
ss
bound
push
mov
mov
adc
push
daa
fwait
and
jg
fmul
sbb
mov
add
mov
imul
cmp
pop
jg
fmul
les
inc
out
inc
adc
cwde
sub
xchg
inc
add
sbb
push
add
in
(bad)
call
js
sbb
inc
xor
in
mov
sbb
or
hlt
add
or
pop
int
(bad)
call
nop
lods
add
mov
jmp
ror
icebp
adc
sti
cwde
jle
shr
xchg
pop
jne
jecxz
inc
stos
xchg
pop
pop
idiv
fisub
sbb
push
add
pop
push
cmps
ds
jo
out
sub
cmps
lods
xor
mov
and
pop
daa
jp
pop
sahf
dec
fist
bound
add
add
leave
push
push
cwde
jge
jge
cmovle
movs
test
mov
push
out
jmp
pop
test
push
lea
sbb
push
dec
inc
ret
aas
icebp
mov
call
push
pop
xchg
repnz
jge
or
or
xor
shr
jno
mov
add
add
adc
inc
imul
pop
jns
inc
cwde
cmp
stc
fdiv
xlat
jmp
cmp
mov
or
adc
rcl
sbb
stc
push
push
adc
call
mov
pop
add
lock
jo
add
add
mov
jo
jne
add
mov
push
ins
in
cld
(bad)
(bad)
cdq
lds
cmp
ins
ds
jl
je
add
dec
push
nop
daa
pusha
jmp
jns
pop
fisubr
push
int
jne
inc
sbb
sbb
in
xchg
js
jns
mov
jo
push
pushf
outs
out
pusha
pop
ins
mov
mov
sbb
lahf
outs
out
sub
xor
out
pop
xor
(bad)
out
cmp
cmp
shr
out
push
(bad)
in
dec
outs
ins
mov
in
or
mov
int3
push
or
shl
jo
int3
call
add
in
mov
aam
clc
mov
jmp
rcl
push
in
(bad)
mov
add
ret
movs
mov
mov
js
dec
(bad)
mov
xor
int
inc
mov
sbb
pop
xchg
repnz
jns
xchg
pop
jns
and
icebp
or
test
add
or
add
into
cld
cmp
cld
inc
std
pop
iret
cld
bound
fdiv
xlat
jmp
das
sbb
aas
xchg
in
push
in
add
pushf
add
and
out
fisttp
push
mov
mov
xchg
add
imul
mov
cld
(bad)
pop
xchg
push
call
or
cld
jg
sbb
lea
xchg
add
jmp
xchg
xor
push
push
in
out
out
mov
mov
sbb
xchg
outs
and
ins
iret
(bad)
jnp
fcom
mov
(bad)
shl
in
mov
outs
inc
lea
add
add
xchg
add
xchg
pop
in
pop
leave
cld
pop
jo
cld
push
add
outs
dec
push
sti
push
and
push
xchg
inc
mov
cmc
cmp
jo
sbb
xchg
xlat
inc
pop
jle
push
and
mov
call
out
push
inc
ret
dec
movs
mov
call
into
pop
sub
into
ja
jge
pop
inc
rcr
adc
push
xchg
(bad)
sub
sbb
adc
xor
sbb
dec
mov
cld
bound
ins
cld
pop
ror
inc
push
(bad)
call
jns
xor
or
call
mov
sbb
jmp
dec
push
std
inc
in
loop
ins
les
jne
add
add
in
cs
or
fsubrp
enter
lds
popa
outs
pop
mov
or
xor
enter
xor
fidiv
add
inc
inc
repz
jl
repz
int3
nop
fmul
call
mov
pop
lock
(bad)
out
cwde
inc
lock
test
mov
add
add
call
(bad)
outs
xchg
icebp
sbb
mov
sub
jp
stc
or
mov
adc
loop
sahf
jmp
loopne
mov
(bad)
in
lock
rol
int3
(bad)
sub
add
lock
out
jle
nop
pop
adc
sbb
inc
mov
int3
call
std
xchg
push
(bad)
(bad)
neg
push
lds
cld
push
outs
inc
pop
inc
stc
lods
mov
jp
popa
outs
xchg
jne
sti
cmp
in
out
jle
repnz
leave
mov
call
ret
sub
shl
fucomp
cdq
pusha
dec
mov
out
in
gs
(bad)
das
cld
ret
mov
jmp
add
lods
jl
out
push
lods
loopne
int3
push
mov
rcr
push
shl
in
jg
dec
(bad)
lock
out
call
pusha
out
popf
test
xchg
inc
adc
lea
add
inc
fimul
aad
sbb
add
adc
sbb
inc
aad
fimul
add
or
add
add
add
adc
sbb
inc
movs
add
add
sbb
inc
xchg
add
or
add
adc
sbb
inc
push
add
adc
sbb
inc
gs
sbb
sbb
inc
push
add
sbb
sbb
add
sbb
add
sbb
add
add
mov
ret
sub
push
mov
add
add
mov
daa
ins
fist
fwait
jge
sub
fisttp
add
clc
fnsave
jo
or
dec
test
adc
test
and
test
adc
test
in
fdivr
sub
hlt
mov
imul
ins
sub
inc
inc
fdivr
mov
imul
xchg
and
jmp
scas
test
push
(bad)
adc
sbb
adc
popf
test
gs
adc
test
hlt
mov
aam
jne
mov
mov
jmp
adc
jne
xlat
xchg
js
in
mov
jmp
sub
adc
add
xchg
jge
in
push
or
mov
jge
(bad)
fmul
jno
dec
adc
inc
inc
pop
cmps
jge
xor
jmp
jg
jb
add
or
or
fadd
push
adc
push
jle
(bad)
jo
stc
mov
xchg
aas
pop
outs
xchg
inc
add
aad
pop
es
inc
pop
daa
xchg
xor
test
push
inc
adc
js
hlt
mov
xchg
inc
mov
push
or
xchg
shl
adc
sub
hlt
mov
out
xchg
call
fdivr
sub
hlt
mov
imul
or
inc
fdivr
sub
hlt
push
into
hlt
adc
out
jns
mov
(bad)
inc
jmp
call
jmp
sahf
hlt
adc
sbb
sbb
and
jmp
ins
add
out
ror
dec
ins
dec
inc
mov
pop
arpl
add
std
imul
mov
pop
fwait
jge
add
add
icebp
sbb
loopne
lock
push
pop
out
sbb
dec
sbb
inc
sbb
in
pop
ret
mov
cmp
fmul
pop
jmp
dec
push
retf
in
fdivr
mov
or
(bad)
ror
mov
out
out
jle
add
add
std
push
pop
lock
gs
out
mov
add
sub
aad
jne
add
je
in
push
or
mov
jb
dec
xor
les
push
bound
pop
shr
jo
mov
(bad)
rcl
test
arpl
push
mov
add
add
and
(bad)
jmp
mov
aad
push
push
sub
or
fadd
sbb
push
and
cmp
ins
or
xchg
push
adc
int3
out
(bad)
jle
sti
inc
push
dec
sub
add
je
(bad)
lock
repz
push
jnp
add
aas
cmp
cmp
push
shl
adc
pop
rcr
jo
jns
sbb
iret
sub
fdiv
std
sub
std
add
sbb
add
or
lds
xchg
xor
mov
pop
and
sbb
stc
rcr
cmps
cmp
int
cld
inc
aad
arpl
xchg
inc
add
dec
mov
add
add
xchg
jnp
dec
loopne
rcr
inc
vmovups
aam
xchg
movs
test
add
hlt
sbb
rcl
in
cmp
sti
dec
pop
lock
arpl
push
out
test
cld
push
pop
xchg
ret
or
inc
xor
mov
xchg
mov
jle
add
ds
or
add
mov
int
add
mov
in
lock
out
adc
std
pop
jecxz
add
jb
xor
push
push
(bad)
sbb
ficom
push
das
adc
rcr
push
out
outs
sbb
dec
jecxz
push
int
add
jb
leave
pop
push
out
(bad)
ds
mov
rcl
cld
adc
inc
dec
xchg
inc
sbb
mov
in
(bad)
(bad)
cmp
in
frstor
fs
fstp
push
out
sub
mov
call
sbb
call
mov
dec
fwait
add
pop
xchg
ja
dec
arpl
loope
xchg
ja
dec
ret
pop
xchg
ja
dec
jae
rcr
in
jnp
popa
pop
xchg
mov
sbb
mov
jmp
sbb
loopne
in
jg
dec
xor
sbb
or
push
loop
(bad)
int3
out
fidivr
(bad)
fsub
out
inc
jmp
sbb
sti
push
lds
call
dec
rol
xchg
jne
in
enter
mov
sub
add
pop
dec
push
jmp
loop
rcl
jb
adc
pop
call
out
es
pop
out
sub
sbb
xlat
in
add
sub
fnstcw
dec
(bad)
fdiv
jno
mov
mov
mov
inc
xchg
jge
or
xor
sbb
and
cli
pcmpeqw
dec
call
es
cmp
out
and
sbb
movs
imul
dec
sub
lea
aad
rol
add
xor
shl
jno
pop
out
jmp
sbb
add
int3
test
pop
add
ret
xchg
dec
fiadd
imul
mov
pop
add
or
cmps
fimul
jne
add
es
add
out
enter
add
add
adc
sbb
inc
jmp
pop
(bad)
shr
sbb
(bad)
pop
jno
call
loopne
xchg
add
fwait
js
push
fsubr
add
add
sbb
jb
jmp
xchg
dec
mov
dec
loopne
in
dec
cwde
(bad)
int
(bad)
ror
bound
add
jge
rcr
out
xchg
sbb
bound
call
mov
pop
jl
pop
out
cmp
sbb
cld
std
jnp
cld
add
pushf
adc
dec
(bad)
pop
pop
sbb
out
jg
inc
sbb
ret
stc
mov
in
lods
pusha
push
pop
out
xor
dec
shr
mov
ins
rcr
jge
rol
leave
int3
inc
ins
fcom
out
stc
pop
retf
mov
pop
xchg
xchg
sbb
mov
pop
xchg
inc
data16
lock
popa
out
mov
push
aaa
mov
jg
ja
pusha
out
or
scas
enter
mov
add
add
mov
jle
push
lods
out
in
jnp
add
jnp
add
mov
push
lock
pop
xchg
push
fdivr
in
cld
repnz
lea
push
mov
pop
dec
push
adc
(bad)
call
inc
jecxz
nop
adc
and
cwde
je
out
cwde
popa
sbb
in
out
pusha
leave
nop
call
dec
add
pop
xchg
mov
fs
std
inc
pop
cld
add
pop
push
and
out
loop
sbb
test
mov
ins
add
ret
cwde
jle
xchg
je
icebp
ins
xchg
mov
xadd
adc
out
rcl
sbb
sub
jb
jo
jl
adc
fdiv
dec
sbb
clc
dec
arpl
or
xchg
inc
jns
mov
icebp
cmp
(bad)
in
or
add
popa
or
lea
out
add
xchg
ins
and
mov
popa
out
lods
test
add
push
std
mov
(bad)
out
or
sbb
adc
out
aad
out
ins
aad
std
bound
or
sub
dec
mov
call
gs
out
lock
(bad)
out
fld
out
xchg
and
leave
and
add
or
(bad)
sbb
ins
rcr
push
pop
sub
sub
call
lea
cmp
movs
sbb
sub
jmp
jmp
out
out
cmp
fild
movs
sbb
popa
out
add
cmps
jmp
xor
bound
xchg
pop
adc
(bad)
cwde
stc
cmps
inc
xchg
add
add
pushfw
or
test
out
rol
sar
xor
or
mov
xchg
or
call
es
mov
in
or
cld
and
out
sub
cmps
jmp
xchg
add
(bad)
out
stos
enter
stc
aaa
mov
ret
clc
bound
fadd
popa
aas
jb
shl
lahf
mov
outs
inc
sbb
idiv
ds
push
inc
sbb
test
das
out
inc
dec
push
sub
call
cmps
inc
sub
sbb
in
cmp
xchg
jb
push
stc
aaa
mov
adc
lock
cmp
push
repnz
fsub
cmp
push
xchg
inc
xchg
lea
fcmovu
sti
mov
cmp
or
ins
or
or
mov
adc
out
fimul
and
bound
and
and
fwait
clc
sbb
jb
mov
aas
dec
lea
movs
inc
add
add
outs
or
push
aas
sahf
inc
inc
test
call
or
lea
cmps
jmp
cli
push
arpl
lahf
inc
popa
sbb
movs
add
add
push
sub
fild
mov
aad
fiadd
ret
inc
add
out
jmp
(bad)
out
pusha
xchg
jb
shl
aaa
mov
sbb
out
fsub
add
sti
out
and
or
jmp
dec
push
or
call
std
ficomp
mov
pop
sbb
pop
sti
and
pop
clc
cmps
call
lods
dec
ds
out
pop
xchg
dec
les
jmp
out
js
jg
rcl
xchg
test
adc
xchg
mov
mov
add
add
xchg
xchg
pop
adc
fmul
xchg
xchg
mov
clc
out
std
movs
out
bound
cld
sbb
add
adc
out
dec
add
add
push
(bad)
(bad)
jmp
pop
pop
enter
lds
js
jg
push
mov
aas
pop
inc
inc
ss
sbb
push
sbb
ss
test
out
(bad)
retf
or
cmps
inc
cs
push
or
call
call
neg
mov
jae
cmps
and
add
jecxz
pop
(bad)
std
sub
sti
bound
inc
arpl
out
fistp
pop
int3
in
sbb
aad
sbb
push
or
call
push
or
mov
pop
sti
out
or
in
aam
push
test
mov
std
push
lahf
push
rol
adc
aaa
mov
sbb
out
stos
shl
mov
jbe
inc
and
out
test
add
inc
cmp
push
nop
add
mov
and
out
adc
bound
push
popf
xchg
rcl
cmp
pop
mov
pop
pop
jb
add
add
add
fwait
shr
out
inc
call
xor
xchg
sbb
std
push
lahf
push
mov
or
mov
sbb
out
int
jmp
push
lea
lock
mov
popa
jle
rcl
out
mov
mov
test
lea
add
mov
stc
out
sub
add
aaa
mov
popa
test
inc
imul
push
or
pop
jecxz
adc
cmp
out
out
jg
xchg
mov
stc
out
fist
jmp
sar
outs
jo
imul
mov
add
add
dec
inc
xor
pop
cmp
pusha
cmp
lea
mov
ja
cmp
push
jg
sahf
inc
popa
test
sub
cmp
(bad)
fisubr
out
and
sbb
fnstenv
test
(bad)
push
jmp
ins
daa
sbb
movs
jmp
add
repz
xchg
or
adc
out
std
inc
sbb
loop
mov
test
push
mov
cs
(bad)
ror
sbb
lea
or
out
out
jl
mov
out
out
pop
shl
or
jmp
add
pop
loop
and
les
add
add
out
out
sbb
in
dec
repz
push
or
mov
adc
lea
cmps
call
pop
sbb
xchg
add
lock
xor
or
movs
sbb
mov
sub
in
(bad)
adc
push
inc
or
xchg
sub
push
fwait
shl
ins
int3
cmp
bound
pushf
or
mov
in
or
xchg
jb
mov
das
lock
cmp
push
scas
adc
cmp
xchg
jb
push
add
mov
push
cmp
push
out
jg
mov
out
out
std
cs
add
add
sahf
inc
sar
in
aam
out
pop
mov
lea
(bad)
cmps
call
gs
ret
mov
test
movs
call
idiv
dec
sub
pop
add
sub
push
mov
add
jbe
sub
xchg
lea
mov
sti
and
clc
mov
inc
xor
cmp
add
add
lea
cmps
jmp
pop
dec
and
out
int3
xchg
or
jg
xchg
mov
in
out
xchg
jecxz
inc
adc
out
push
xor
call
sub
sbb
adc
pop
mov
sub
sbb
jmp
out
rcl
cmps
jmp
sub
imul
xor
jmp
add
pop
mov
push
inc
out
(bad)
rcr
pusha
cs
movs
mov
lea
aad
cmp
cs
test
sbb
icebp
sub
jecxz
bound
out
sub
test
cs
ret
inc
out
jge
xor
loopne
das
out
jb
jecxz
loopne
push
loopne
das
out
sar
call
sbb
push
das
inc
pop
out
cs
push
mov
xor
call
es
dec
inc
mov
das
out
fbstp
jecxz
(bad)
xchg
xchg
lea
out
cmp
mov
test
cmps
call
xchg
lock
das
dec
push
push
stc
cmp
add
add
lock
sub
test
push
ret
sbb
sbb
xchg
test
inc
mov
aad
ins
pop
in
lods
inc
and
mov
sub
fidivr
lock
(bad)
jge
jne
xchg
xchg
test
rcl
call
stos
cmp
add
add
clc
pop
xor
in
lods
add
xor
call
pop
add
bound
xchg
xchg
cmp
sbb
movs
jnp
push
mov
cmps
cmps
jmp
sub
jo
pop
(bad)
sbb
ret
cld
pop
sub
idiv
add
add
int
push
ror
sbb
adc
sbb
rcl
les
sbb
test
lods
add
out
test
push
movs
jmp
mov
dec
xor
in
lods
and
xor
(bad)
sbb
call
jge
xor
rol
add
add
xchg
sbb
and
sbb
pop
push
jmp
push
inc
adc
and
int3
mov
sbb
add
or
jmp
inc
adc
out
test
jmp
in
std
jp
sti
add
pop
aam
ds
std
sbb
rcl
add
xor
mov
add
nop
movs
cmps
inc
jns
ds
jo
int3
mov
cmps
jmp
xchg
test
icebp
out
jne
sbb
pop
add
fwait
les
add
and
out
pop
ds
call
sub
jb
adc
mov
test
cld
out
mov
xchg
jb
rol
cmp
add
sahf
inc
adc
(bad)
cmp
mov
(bad)
fidiv
test
bound
jo
add
cmps
inc
stc
cmc
ds
jo
int3
mov
cmps
jmp
xchg
test
icebp
out
jne
sbb
push
add
les
cmp
push
lock
mov
add
pop
cmp
in
sub
jb
adc
mov
test
jmp
(bad)
mov
xchg
jb
ror
cmp
adc
wbinvd
cmp
cmp
stos
adc
int
jo
sub
lea
out
cmp
sub
aam
pop
frstpm(287
add
add
sbb
ret
jp
and
inc
aad
lods
loopne
ds
mov
sbb
inc
xchg
retf
lods
and
aas
out
pop
cmp
call
adc
dec
mov
(bad)
out
fwait
(bad)
in
mov
xchg
inc
lea
xor
out
ss
mul
cmps
inc
add
add
stos
in
dec
cmp
lods
and
sub
push
pusha
movs
inc
sbb
in
dec
cmp
sbb
aad
xchg
test
daa
xchg
sbb
xchg
int3
push
push
xor
xchg
test
inc
sbb
sbb
xchg
xchg
jb
lock
mov
push
lahf
lock
push
inc
out
jmp
call
movs
test
push
sub
and
inc
arpl
jne
sbb
add
jle
lea
cmps
inc
lock
sub
xchg
dec
test
adc
inc
adc
push
mov
dec
dec
push
leave
lods
add
aaa
out
pop
inc
xor
lods
sub
jmp
leave
xchg
and
aaa
out
jbe
jecxz
rol
cmp
retf
test
mul
call
shl
std
mov
dec
push
leave
xchg
and
mov
sbb
add
add
pop
aaa
and
leave
push
jno
retf
jb
lea
cmps
call
fsubrp
dec
aaa
dec
push
enter
aaa
out
push
xor
push
retf
loop
and
dec
push
jl
ret
repnz
jecxz
loopne
push
xchg
jne
out
ror
sbb
popa
jo
stos
clc
cmp
pop
cld
inc
sbb
push
or
rcr
jo
lea
call
cmp
jg
cmp
pop
pushf
inc
sbb
push
mov
push
cmp
mov
push
rcr
mov
adc
out
pop
out
std
inc
jmp
add
stc
lahf
mov
mov
ret
ret
push
iret
lods
pushf
xchg
cmp
call
sar
dec
mov
pop
cmp
mov
sub
bound
xchg
test
out
mov
pop
add
mov
pop
sbb
cmp
add
add
push
sub
jmp
bound
pop
mov
(bad)
xor
cmps
jmp
and
lock
(bad)
cmp
test
mov
pop
(bad)
sub
sar
fwait
mov
ins
lods
fisttp
loopne
ins
push
test
or
mov
push
shl
fcomp
lods
sub
std
fdiv
or
mov
mov
aas
or
push
bound
add
sbb
push
ja
retf
mov
es
(bad)
ds
ret
or
sbb
movs
retf
sub
lea
dec
push
dec
test
call
xchg
jge
ds
cmp
ins
shl
inc
lahf
inc
rol
lds
sti
les
call
cmp
pop
scas
sbb
jne
xchg
jb
bound
fdiv
sbb
mov
or
dec
repnz
test
or
lock
pop
cmp
(bad)
call
sbb
add
jne
xchg
xchg
inc
mov
aaa
out
das
jle
jne
sub
into
cmp
sub
out
sub
or
push
mov
retf
ins
or
cmp
xor
sub
addr16
xchg
jmp
add
add
sahf
pop
pop
inc
dec
mov
xchg
fwait
and
(bad)
clc
ins
sbb
leave
ins
or
ins
pop
int
xor
sub
test
add
jmp
inc
dec
mov
nop
xchg
dec
lods
add
inc
sar
xchg
inc
popf
pop
fld
jle
add
sub
sar
inc
ins
inc
add
add
fstp
(bad)
sbb
call
cld
int3
push
enter
inc
jne
ins
enter
std
(bad)
leave
call
and
enter
in
jl
ins
enter
std
inc
xchg
xchg
dec
sub
or
out
push
xchg
xchg
dec
mov
sbb
std
push
out
sti
add
inc
cld
mov
mov
scas
nop
movs
jg
lea
rcr
add
daa
psllw
cmp
ins
jmp
sahf
inc
push
xor
push
test
sbb
cmc
aaa
sbb
sbb
aas
fwait
les
xchg
out
mov
inc
sbb
cmp
xchg
sbb
jae
out
iret
jl
(bad)
jmp
sbb
jb
push
mov
mov
add
rol
add
mov
inc
loop
sub
inc
std
shl
sbb
sub
fidiv
repnz
int3
sub
push
out
into
ds
push
icebp
push
aam
fdiv
sti
push
repz
jmp
mov
push
sar
mov
mov
jecxz
sahf
mov
mov
sbb
(bad)
push
aas
dec
push
repz
fisttp
jecxz
(bad)
xchg
sbb
jae
out
cwde
xor
mov
inc
out
mov
mov
gs
jle
push
loopne
lea
jb
jne
pop
dec
add
xchg
adc
add
add
loop
clc
add
pop
shr
xchg
jne
ins
mov
jns
jmp
mov
dec
xchg
dec
pop
inc
ins
shr
(bad)
bound
sbb
leave
data16
mov
or
(bad)
or
pop
xchg
jne
or
enter
call
pop
loopne
(bad)
cwde
dec
sbb
aad
out
cmp
push
movs
cmp
aad
call
nop
push
pop
aam
jge
out
jg
loope
fwait
les
sbb
or
xchg
and
sbb
in
or
les
fwait
clc
(bad)
fst
rcl
sbb
sti
add
dec
(bad)
call
in
test
pop
inc
xchg
pop
adc
xor
gs
lods
mov
and
aad
lea
push
sbb
lea
in
push
adc
mov
out
fld
test
inc
out
loop
pushf
call
jl
xchg
clc
loopne
aam
ret
lea
jecxz
push
shl
jns
(bad)
enter
sbb
test
xchg
add
jp
add
out
mov
add
bound
pushf
or
(bad)
sahf
inc
push
test
add
or
(bad)
in
xor
popa
dec
in
ins
movs
pop
mov
loop
dec
js
push
imul
out
(bad)
(bad)
xchg
inc
test
fidiv
lahf
push
aad
inc
stc
aad
cmp
cld
out
test
inc
sbb
add
out
cld
push
shl
lock
mov
inc
lock
out
cwde
pop
jo
mov
mov
sti
bound
pop
adc
inc
ins
add
add
es
jb
lds
sbb
dec
push
call
push
sbb
in
aad
sbb
mov
sbb
popa
jmp
in
push
dec
call
push
les
cmp
je
add
push
push
adc
jl
mov
call
(bad)
sbb
fdivr
gs
push
out
adc
std
ds
sub
test
jne
out
nop
out
dec
dec
dec
(bad)
in
jl
pop
(bad)
and
xchg
jne
or
adc
inc
ins
or
out
loop
pop
inc
lock
sti
out
or
hlt
push
bound
pusha
mov
adc
ins
(bad)
out
pop
mov
out
inc
mov
lods
cmc
(bad)
cld
mov
ret
sbb
ret
mov
out
inc
or
mov
xlat
xchg
fsubr
retf
xchg
jge
std
int
mov
(bad)
pop
ret
in
pop
test
mov
les
push
jo
int3
push
sub
ror
fmul
sahf
inc
inc
xor
or
out
sbb
ins
aam
or
add
mov
jmp
sbb
clc
stc
out
push
cli
out
das
xlat
mov
call
fidiv
xchg
add
jg
dec
xchg
jge
test
call
cld
or
lock
or
cld
add
(bad)
lock
out
call
pop
mov
fadd
dec
call
inc
jno
(bad)
cwde
stc
sbb
jo
call
inc
add
test
in
test
or
into
jb
and
call
add
loop
push
rcl
fcomp
in
cmps
ins
nop
add
mov
call
fidiv
mov
xchg
inc
sbb
dec
xchg
pop
pop
or
push
inc
fst
int3
fcom
sbb
pop
test
cmp
or
jmp
pusha
shl
and
mul
pop
stc
out
pop
inc
xchg
inc
xor
lahf
(bad)
pop
loope
call
bound
cld
xchg
add
lea
push
add
jns
mov
lods
push
out
test
add
leave
jl
sub
sub
shl
rcr
imul
add
add
scas
push
loop
cld
cmp
shr
xlat
out
loop
adc
imul
rcl
cdq
adc
(bad)
(bad)
gs
or
pop
out
xchg
add
jl
adc
push
inc
data16
dec
out
adc
in
lods
or
cli
sahf
add
movs
inc
mov
sbb
call
bound
call
sub
and
push
mov
mov
stc
out
inc
ret
sti
out
nop
ja
push
mov
sbb
adc
stc
call
addr16
(bad)
cwde
stc
sbb
(bad)
out
loop
mov
or
mov
out
out
add
add
xchg
mov
cli
out
(bad)
add
add
int3
push
std
mov
sti
loop
jb
adc
call
sub
(bad)
call
cmc
out
sub
out
out
popa
mov
call
(bad)
out
in
add
adc
gs
fsubr
call
add
add
lahf
push
sub
(bad)
aad
xchg
cmp
retf
mov
lock
stc
out
pushf
cmp
jle
adc
in
jge
add
ror
push
xor
push
fucomi
loop
adc
imul
pop
std
ret
mov
(bad)
jae
ins
aad
add
add
sub
jb
int3
fxtract
call
test
ins
sbb
in
or
out
xchg
jne
neg
and
sbb
std
dec
repnz
(bad)
in
add
add
fwait
ret
fldz
sub
adc
out
loopne
sahf
add
xor
inc
aad
xchg
inc
cmc
shl
mov
jl
inc
add
add
mov
inc
loope
lock
mul
push
das
jle
jne
call
call
or
mov
out
sbb
into
je
adc
and
jp
mov
jmp
in
xor
inc
and
mov
popf
imul
sub
or
mov
add
aad
inc
loope
out
xchg
(bad)
cmp
inc
dec
mov
mov
mov
ret
inc
jge
add
sbb
test
loop
sbb
pop
sub
or
cld
mov
sub
mov
xor
pop
cmp
gs
mov
mov
test
add
dec
sbb
and
jge
add
or
in
or
pop
jae
test
or
push
sbb
cmp
or
add
inc
xchg
pop
stc
sbb
aad
(bad)
movs
or
jnp
pop
and
jg
add
cld
ffreep
jge
pushfw
or
add
add
retf
xchg
jg
psubsw
sbb
gs
sub
sbb
inc
jns
and
(bad)
jns
add
pop
inc
adc
add
add
or
dec
pop
and
push
(bad)
and
pop
and
jge
add
cmp
test
jle
add
cld
stos
aad
sbb
outs
sar
pusha
leave
sbb
pop
leave
cld
adc
cld
xchg
aad
sbb
add
jle
add
or
xchg
leave
sbb
sar
push
mov
stos
xchg
jle
or
or
xchg
gs
mov
sbb
mov
push
add
jge
add
jb
sbb
int3
add
jge
shl
jge
adc
add
je
sbb
out
stc
sbb
out
push
xlat
xchg
test
popf
sbb
aad
xchg
inc
stc
xchg
dec
(bad)
imul
sbb
cmp
in
or
xchg
test
or
add
test
add
loope
push
xor
aad
test
cmp
gs
outs
jne
out
cdq
push
jno
inc
add
fwait
or
out
test
add
adc
jb
nop
imul
sti
(bad)
xlat
jb
mov
test
call
(bad)
(bad)
sbb
loope
loop
(bad)
(bad)
sbb
cmc
in
push
sbb
pushf
leave
or
cmp
movs
or
(bad)
repnz
inc
mov
mov
pop
test
hlt
out
scas
mov
fs
lods
and
test
add
adc
out
test
call
fdivrp
sti
ret
push
test
cmp
js
dec
mov
test
call
scas
js
pop
mov
test
push
sub
add
add
aad
add
cld
mov
sbb
pop
push
jecxz
outs
enter
mov
xlat
add
das
(bad)
aad
inc
pop
jae
xchg
mov
ss
movs
jp
call
call
sbb
xchg
fwait
ror
test
out
dec
sub
xor
lock
rol
add
add
dec
adc
(bad)
adc
out
dec
ret
sbb
test
out
mov
movs
aam
(bad)
dec
repz
mov
clc
push
sbb
lods
pop
int3
inc
(bad)
call
pop
shl
dec
xor
inc
push
add
mov
or
stos
call
add
out
lods
(bad)
call
add
mov
out
adc
aas
inc
fisubr
jp
sbb
mov
pop
cld
bound
dec
lea
rcr
(bad)
adc
out
mov
pop
cmp
(bad)
push
pop
mov
adc
sub
ficomp
add
add
push
fisttp
push
test
out
xor
add
call
ss
mov
(bad)
jmp
iret
dec
lea
int
inc
or
mov
fisttp
cwde
adc
jmp
push
ficomp
out
jne
out
mov
add
add
fucomip
sar
mov
push
fild
mov
(bad)
adc
sub
jmp
or
inc
sbb
rcl
out
cmp
ror
sub
out
adc
out
push
fisttp
xor
(bad)
pop
ror
out
rcr
out
adc
mov
rcr
out
gs
fsubp
push
lock
(bad)
(bad)
(bad)
mov
sbb
(bad)
in
push
sbb
sti
sub
jmp
inc
sbb
shl
out
std
inc
out
sti
(bad)
adc
jmp
or
push
nop
mov
inc
(bad)
pop
popa
or
mov
pop
dec
lea
add
add
in
bound
adc
adc
xchg
lock
in
xchg
jg
cvtpi2ps
lock
and
icebp
push
out
adc
(bad)
rcr
outs
sar
sbb
ret
in
int
adc
push
mov
(bad)
fmul
out
(bad)
(bad)
sahf
inc
adc
test
fst
lds
out
std
add
sub
(bad)
popf
inc
push
sub
inc
or
dec
push
pusha
mov
(bad)
(bad)
(bad)
out
or
stos
lods
lods
adc
out
add
jecxz
inc
iret
xchg
mov
fsub
(bad)
std
push
(bad)
sti
loop
dec
(bad)
call
or
dec
push
adc
(bad)
pop
popa
push
retf
xlat
push
mov
adc
rcl
out
bound
push
aaa
adc
inc
lea
xchg
daa
fadd
push
add
loop
sbb
jmp
shl
pop
mov
inc
dec
call
mov
xchg
mov
fsub
jmp
ret
sti
(bad)
shl
inc
lods
inc
cld
or
sub
lea
(bad)
jmp
aam
test
(bad)
(bad)
cmp
aad
inc
popa
xchg
sbb
gs
call
(bad)
mov
out
add
lock
imul
push
retf
nop
push
(bad)
call
(bad)
rcl
inc
add
add
cmps
pop
rol
out
in
jns
jmp
xchg
dec
rcr
jmp
in
push
imul
enter
xor
inc
sbb
add
lock
shr
(bad)
fadd
in
jg
in
out
aad
add
jle
add
add
pusha
fld
push
xchg
sbb
mov
xchg
inc
jne
or
daa
sbb
arpl
and
push
enter
loopne
fdivr
shl
xchg
in
dec
push
jo
aam
(bad)
into
dec
push
push
push
enter
sbb
fsubr
scas
inc
call
(bad)
add
cmp
push
xor
push
(bad)
out
stc
and
inc
mov
je
(bad)
push
fwait
addr16
int
adc
(bad)
dec
lea
iret
dec
(bad)
sbb
sbb
inc
sub
call
inc
add
test
ret
(bad)
out
cmp
push
leave
lock
(bad)
push
scas
jl
mov
fsubp
(bad)
cmp
shl
push
jo
add
add
push
mov
jmp
inc
cld
std
faddp
sti
add
out
push
(bad)
and
mov
inc
pop
adc
xor
fimul
push
test
sar
stos
sbb
std
bound
inc
dec
or
sbb
(bad)
jne
xor
(bad)
fcom
pop
push
or
loop
fist
jnp
jge
pop
inc
or
cmp
in
mov
dec
call
pop
fild
jno
push
std
idiv
sti
add
ins
adc
ret
loop
inc
pop
push
jb
push
or
in
or
jecxz
aas
or
lahf
xlat
out
sub
imul
sbb
ret
mov
jno
jge
lea
mov
push
xchg
or
inc
ret
adc
add
xchg
in
sbb
sbb
aad
sbb
stc
xor
push
pop
mov
mov
sub
add
add
adc
add
ficom
and
jecxz
and
jge
add
dec
push
test
and
jle
add
push
sar
mov
sub
mov
(bad)
push
nop
push
cld
pop
pop
movs
cld
mov
std
in
clc
sti
bound
push
je
arpl
add
xor
xor
out
cdq
and
pusha
fs
daa
mov
sbb
stc
iret
xchg
(bad)
push
ins
cld
pop
jmp
cld
stos
movs
jg
add
push
pushf
or
mov
call
inc
mov
lea
inc
inc
call
mov
lea
jg
test
add
add
daa
test
sbb
sub
sbb
push
cmps
inc
idiv
clc
xlat
jne
hlt
ins
or
inc
push
loope
fcomip
adc
adc
(bad)
daa
call
in
outs
lock
sbb
sbb
call
bound
sbb
adc
je
sbb
es
out
imul
in
push
mov
cld
xchg
xchg
jle
fcom
inc
pop
push
repz
add
mov
call
(bad)
pop
in
sahf
rcl
js
sbb
adc
nop
leave
cwde
(bad)
push
fist
loopne
fild
(bad)
fisub
(bad)
mov
pop
pushf
inc
(bad)
push
(bad)
cld
cmp
sti
fwait
adc
jge
(bad)
sbb
sbb
and
clc
out
xchg
jmp
mov
mov
call
or
test
loop
xchg
jne
in
pushf
dec
jecxz
inc
fisttp
test
fadd
out
push
nop
jecxz
test
add
(bad)
std
cmps
out
add
pop
mov
jecxz
mov
or
out
pushf
enter
mov
ins
mov
or
mulps
add
in
pop
sbb
loop
(bad)
enter
mov
out
imul
cwde
mov
movs
jmp
or
adc
enter
loop
jnp
and
add
add
jb
inc
(bad)
loope
loop
or
lahf
inc
xchg
mov
add
ins
enter
mov
push
shrd
adc
out
fsub
fucom
pop
inc
jecxz
nop
(bad)
enter
mov
adc
lds
cld
sbb
sbb
push
loope
(bad)
adc
(bad)
mov
dec
mov
in
mov
arpl
inc
pop
out
or
xchg
nop
inc
inc
jmp
xlat
push
loop
add
lods
clc
jecxz
out
push
(bad)
call
pop
les
xor
enter
cli
in
(bad)
in
imul
mov
xchg
test
add
(bad)
in
and
sahf
inc
add
out
pop
jb
mov
dec
mov
icebp
dec
nop
pop
leave
in
sub
add
test
leave
in
cmp
push
pop
push
push
js
call
jg
dec
lea
out
add
in
(bad)
(bad)
(bad)
jno
ss
lods
clc
jecxz
out
pop
(bad)
fucom
mov
xchg
xor
gs
ins
nop
int
(bad)
icebp
sbb
xor
jmp
push
sbb
in
cmps
mov
add
in
inc
pop
add
call
mov
add
push
xchg
into
sub
pop
inc
test
cs
push
mov
out
lods
inc
sti
out
sbb
inc
lea
out
adc
sub
sbb
mov
push
lock
out
(bad)
inc
ror
push
mov
push
xchg
iret
rcr
out
cmp
jmp
sbb
lahf
inc
popa
(bad)
sbb
and
ins
sub
test
mov
sbb
sub
add
add
inc
gs
test
mov
dec
out
(bad)
in
or
dec
(bad)
in
inc
xchg
adc
test
out
or
sbb
inc
out
loope
(bad)
(bad)
in
inc
and
gs
jg
dec
(bad)
call
in
stc
aad
(bad)
in
inc
adc
fs
dec
or
ins
out
(bad)
call
sahf
inc
popa
xchg
add
je
cmp
push
push
xchg
jne
call
xchg
jge
sub
clc
(bad)
push
std
mov
cwde
test
add
lea
in
push
push
lock
out
sbb
jae
call
adc
enter
jo
loop
outs
and
ret
fcmovnb
in
lods
xchg
sti
mov
push
xchg
into
mov
push
inc
push
push
xchg
mov
(bad)
out
ffree
mov
(bad)
shl
(bad)
out
test
cwde
xchg
sahf
inc
add
out
loopne
sbb
test
addr16
test
fisttp
xchg
inc
xor
add
add
clc
out
int
cmp
dec
sahf
inc
popa
adc
stos
fdiv
out
cdq
mov
jecxz
dec
mov
or
(bad)
pop
repnz
mov
out
es
adc
adc
jo
mov
rcr
fwait
shl
int
(bad)
bound
pushf
or
imul
jmp
or
sbb
in
ins
iret
cmc
sti
adc
add
add
dec
out
add
lods
aam
test
mov
jmp
out
test
(bad)
or
call
retf
jne
out
aam
neg
add
in
popa
or
jge
test
sti
out
lea
sbb
lea
inc
xchg
or
sar
out
lods
cli
out
or
call
add
jno
(bad)
sbb
or
call
ror
loopne
or
(bad)
sti
outs
and
pop
in
std
in
sti
add
fwait
or
inc
xor
adc
cli
out
mov
sbb
add
sti
sub
inc
adc
mov
sbb
aad
dec
mov
out
and
mov
add
sub
jmp
sbb
sti
add
push
xor
or
loop
out
icebp
mov
out
movs
dec
xchg
jne
inc
sbb
ror
cli
xchg
jge
jge
test
sbb
dec
adc
inc
jmp
out
sti
(bad)
call
test
pop
les
stc
out
lds
sbb
lds
cld
sbb
dec
add
add
add
call
jge
lea
push
sahf
inc
inc
push
imul
sbb
dec
mov
dec
sbb
add
or
jmp
xlat
adc
add
inc
cs
out
add
stc
int3
loop
inc
mov
out
shr
inc
ror
stc
jno
inc
add
call
aas
or
inc
out
(bad)
out
ror
out
jno
test
nop
pop
shl
or
data16
jge
mov
lock
sub
or
dec
inc
out
out
cmc
push
sbb
sub
in
enterw
jmp
add
call
add
add
dec
lea
cs
loop
sbb
jae
sbb
and
test
xchg
sbb
lods
icebp
sbb
rol
pushf
or
shl
push
sbb
adc
dec
push
fidivr
lock
out
out
cld
add
pop
xchg
sbb
and
jge
jne
jmp
xor
in
out
lods
sbb
cmp
(bad)
sbb
add
leave
test
xlat
sbb
cld
bound
pushf
or
dec
xor
aad
xchg
test
shl
xchg
sbb
add
or
push
aad
push
push
aas
dec
(bad)
sub
cmp
sbb
iret
loopne
jo
(bad)
out
out
cmp
add
add
mov
jmp
adc
dec
jmp
popf
inc
jb
pop
shr
sbb
(bad)
jmp
out
idiv
push
sbb
les
(bad)
out
out
add
push
sub
test
jmp
add
add
jmp
push
sbb
dec
cwde
movs
out
loop
bound
push
loopne
pushf
(bad)
(bad)
in
out
leave
add
out
cwde
lods
sbb
and
jae
inc
in
out
adc
call
out
inc
sbb
adc
lods
out
inc
in
jno
(bad)
cld
lods
xor
add
add
out
jne
loop
dec
push
test
jmp
ins
out
adc
push
adc
push
inc
out
out
jne
stc
out
push
jg
inc
in
ins
adc
je
mov
or
in
ret
sar
jg
sbb
out
mov
cwde
jge
pop
push
leave
sbb
add
in
add
mov
mov
enter
cld
add
(bad)
fmul
inc
lea
out
inc
jbe
sub
jge
(bad)
cwde
icebp
sti
out
jl
jmp
adc
lea
sbb
add
out
out
fcmovne
in
or
cli
fwait
or
push
xchg
into
std
xchg
(bad)
loop
inc
push
dec
xchg
mov
add
add
out
out
(bad)
mov
popf
int
dec
dec
lea
not
rcr
jno
xchg
ins
nop
imul
push
std
ret
add
fs
adc
jle
push
nop
jns
call
pusha
leave
enter
or
inc
out
outs
and
enter
leave
in
cmp
sti
fwait
or
aad
inc
movs
push
xchg
test
out
inc
cmp
add
repz
push
xchg
iret
adc
popf
inc
shr
sbb
out
cdq
adc
call
ins
fsubr
test
cwde
icebp
xor
pop
xchg
jmp
aaa
out
nop
js
(bad)
call
add
add
out
loop
retf
mov
repnz
cmp
dec
dec
lea
in
or
dec
repnz
push
jo
jo
(bad)
(bad)
out
jbe
lods
adc
repz
std
inc
jecxz
dec
push
xchg
jne
in
cmc
iret
into
repnz
inc
loope
(bad)
xchg
mov
fcmovnb
fsub
in
ret
inc
push
ins
inc
mov
push
repnz
ins
cmp
jmp
cmp
inc
and
(bad)
in
or
(bad)
sbb
xor
out
cmc
das
sbb
mov
sbb
add
call
test
pop
push
out
bound
popa
and
xchg
adc
out
out
add
add
push
push
cmps
add
inc
lock
repz
jl
sbb
mov
pop
jmp
inc
nop
lods
xor
out
xor
(bad)
out
test
call
and
cmp
sub
add
test
xlat
pop
call
add
xchg
test
and
sahf
inc
push
imul
cdq
xor
and
daa
inc
inc
pop
(bad)
daa
call
cmp
push
ror
push
iret
xchg
xchg
push
jmp
jmp
retf
sbb
ret
or
call
fwait
mov
aad
bound
push
mov
(bad)
out
mov
adc
jmp
(bad)
std
stos
(bad)
sti
bound
push
nop
test
out
popf
push
sti
out
aad
xchg
jne
inc
sbb
into
dec
jmp
mov
sbb
adc
test
push
cld
xchg
inc
lds
test
(bad)
out
jge
cmp
inc
sbb
mov
and
push
sti
call
or
bound
cld
test
dec
test
in
sbb
shl
add
pushf
or
(bad)
and
mov
adc
out
cmp
lods
stc
xlat
mulps
mov
add
add
in
xor
pop
(bad)
xchg
inc
test
test
out
jge
cmp
inc
sbb
add
sbb
mov
sti
mov
aam
inc
gs
xchg
test
(bad)
in
sbb
xor
dec
call
cmps
inc
adc
sahf
into
dec
(bad)
fdiv
pop
add
sbb
and
xchg
push
jmp
std
out
nop
cmps
sti
out
sbb
inc
inc
aaa
(bad)
aad
push
mov
jg
add
out
add
popf
inc
inc
jg
ror
sbb
xchg
jg
add
cwde
gs
push
push
call
std
out
pop
sar
out
sbb
ins
adc
bound
out
push
push
xchg
mov
mul
(bad)
std
ss
add
sbb
adc
adc
std
bound
nop
mov
jmp
imul
and
sti
out
cwde
mov
add
jle
adc
call
out
in
xchg
jne
in
(bad)
pop
test
add
out
inc
push
test
cmp
jno
mov
call
stos
shr
push
mov
dec
dec
lea
out
int3
pop
neg
jmp
push
(bad)
jmp
test
push
jo
loopne
(bad)
imul
movs
push
sti
out
shl
pop
lock
mul
mov
mov
sbb
(bad)
(bad)
div
repnz
push
adc
call
adc
enter
sub
loop
outs
and
sbb
shl
mov
call
inc
push
push
xchg
test
cld
out
xor
in
cld
pop
sti
call
out
sbb
(bad)
jge
lea
xchg
sti
and
push
pusha
mov
out
sbb
mul
push
dec
xchg
jne
inc
sbb
int3
pop
cli
xchg
jge
jle
test
jge
add
xor
xchg
(bad)
ins
nop
or
nop
sbb
adc
cli
out
jne
sbb
xor
in
arpl
mov
ins
int3
sub
test
fsub
jmp
sahf
inc
popa
aas
not
push
cmc
out
pop
adc
jae
dec
mov
lea
push
stc
out
fdivr
and
call
xchg
stc
outs
rcl
sbb
inc
in
cmp
std
fwait
or
clc
sub
or
in
std
mov
lea
dec
out
shr
jne
into
stc
dec
push
adc
out
popa
sahf
cmc
out
ss
lods
push
dec
(bad)
loop
cmp
mov
cli
out
ins
inc
sar
bound
lea
add
add
sti
out
jmp
sbb
push
(bad)
pop
call
adc
sbb
mov
lock
push
push
mov
out
cwde
mov
xchg
inc
sti
out
or
add
xor
inc
cmps
(bad)
and
jno
push
adc
lods
push
xor
push
jmp
inc
movs
sti
loop
es
adc
loop
sbb
push
mov
cmp
jmp
push
lock
jmp
out
rcr
mov
ins
(bad)
sar
bound
lea
xor
outs
sti
out
call
sti
out
loop
out
mov
mov
adc
add
call
mov
cld
out
cmp
add
add
lods
pushf
arpl
out
add
mov
call
push
xchg
in
push
in
push
push
cmp
xchg
sbb
mov
sbb
inc
dec
inc
sbb
cdq
push
xchg
test
gs
lea
dec
xchg
pop
mov
sti
out
jge
sbb
mov
cdq
cld
retf
adc
iret
loop
pop
ret
inc
lea
and
add
sbb
popf
fsub
push
and
add
xor
(bad)
out
cmp
sbb
xor
pop
or
mov
xor
add
retf
xchg
sbb
mov
push
jb
in
cdq
cld
iret
push
sbb
mov
loop
cmp
mov
std
fmul
sti
add
sub
jge
je
imul
leave
inc
stc
out
movs
sub
pusha
mov
xchg
jg
(bad)
pop
and
add
jg
out
iret
loop
mov
mov
(bad)
pop
and
jle
add
add
add
std
xchg
test
dec
xchg
inc
mov
and
adc
sbb
fldenv
rol
push
jg
out
push
out
out
adc
dec
hlt
ffreep
test
jg
out
dec
out
fsub
je
imul
jmp
add
add
dec
out
call
adc
mov
jge
add
sar
bound
dec
lea
mov
inc
xchg
mov
aad
add
(bad)
xchg
je
dec
lock
sub
std
(bad)
in
out
cmp
pop
out
icebp
sti
mov
fdiv
add
add
add
inc
pop
and
in
mov
mov
int3
lahf
cmp
arpl
add
jle
add
daa
dec
mov
push
mov
fadd
aad
cmp
in
sbb
jo
add
cmps
mov
push
call
jge
inc
ins
and
push
test
add
add
test
add
bswap
sti
loop
sahf
push
adc
add
or
retf
test
add
adc
sti
(bad)
xlat
jo
frstor
cld
iret
test
call
in
int
inc
and
ins
inc
sar
add
and
dec
pop
and
xchg
add
ins
inc
xlat
pop
add
in
test
fwait
sar
(bad)
in
jle
test
xchg
mov
sub
add
ins
dec
pop
add
mov
test
(bad)
sbb
sbb
jne
jecxz
jge
das
inc
xchg
shrd
cld
retf
test
add
jp
sti
(bad)
in
xor
sub
test
xchg
loope
jge
lea
add
add
test
fldcw
add
adc
nop
rol
and
or
shl
sbb
dec
jmp
(bad)
bound
dec
dec
mov
iret
aad
sbb
std
mov
inc
fdivr
lea
or
xor
jecxz
shl
add
fld
inc
dec
lea
dec
call
inc
ficom
add
push
(bad)
dec
jg
push
sar
add
ret
popf
sti
adc
dec
lea
mov
adc
jnp
(bad)
fldcw
jecxz
(bad)
cli
add
sub
or
and
xchg
add
sbb
ret
mov
add
add
fst
jno
in
in
in
int3
sbb
jns
sbb
xchg
or
sbb
movs
ror
leave
dec
inc
xchg
mov
push
loopne
cld
mov
test
and
mov
push
fsub
add
int3
sti
(bad)
jmp
mov
push
sbb
adc
jg
add
add
and
inc
pop
and
sbb
in
into
aad
jg
push
or
cmp
jmp
mov
ja
mov
rcl
test
xor
test
out
das
xchg
add
inc
(bad)
into
jnp
mov
test
xor
push
sar
add
cld
retf
and
xlat
aam
(bad)
out
outs
sub
test
add
xchg
add
push
jo
or
fimul
test
fucom
lods
dec
jecxz
push
or
lahf
movs
sbb
adc
add
rcl
add
inc
pop
and
test
add
test
ret
jle
les
(bad)
push
(bad)
inc
pop
and
test
add
dec
sub
mov
addr16
jge
and
push
inc
xor
sbb
push
sub
add
add
dec
lea
jg
xchg
sbb
push
mov
addr16
lds
dec
push
push
xor
cmps
movs
jg
call
xor
add
or
jge
and
addr16
loope
xchg
inc
(bad)
fcom
add
(bad)
or
sbb
inc
pop
fisub
ret
sub
hlt
cmp
add
add
in
daa
add
add
imul
inc
mov
or
sbb
(bad)
iret
dec
mov
push
mov
add
aad
cmp
in
sbb
pop
rcl
sbb
and
out
aad
pop
mov
jp
push
and
cld
fild
add
add
mov
lock
aad
inc
jns
pushf
test
sbb
gs
add
(bad)
adc
daa
and
sbb
inc
mov
xor
or
std
dec
aam
bound
sahf
push
nop
cmp
inc
sub
and
jge
add
retf
sti
(bad)
dec
mov
xor
in
lock
lahf
sbb
xchg
cdq
js
iret
ret
imul
jo
outs
ret
sub
faddp
sbb
faddp
sub
fsubp
in
dec
jecxz
in
xchg
xor
add
pop
add
and
(bad)
(bad)
out
sub
jge
mov
sbb
add
inc
pop
and
sbb
fldcw
ds
test
jns
add
aam
inc
mov
mov
dec
mov
add
inc
pop
and
test
add
jp
les
ds
rol
add
add
add
into
ret
mov
movs
sbb
mov
shr
cld
mov
sbb
gs
add
lock
call
repz
bound
inc
and
or
icebp
add
and
(bad)
imul
sbb
cmc
imul
dec
jns
inc
stc
(bad)
pop
xchg
inc
mov
xchg
icebp
test
xchg
or
fild
lods
and
sbb
lods
pop
(bad)
mov
xchg
in
add
sahf
test
sbb
push
test
sub
out
bound
and
jl
add
out
push
adc
mov
nop
add
sti
adc
push
aam
push
add
dec
out
add
add
arpl
push
lea
xor
push
jnp
push
iret
jl
mov
arpl
add
mov
and
jl
add
push
ret
push
outs
xchg
je
xchg
lock
(bad)
jp
lea
add
pop
xchg
or
or
sbb
pop
test
outs
out
loopne
add
fisttp
outs
out
test
sbb
sbb
in
jb
out
outs
jo
scas
rcr
cdq
mov
out
xchg
mov
jmp
outs
ins
mov
or
imul
push
or
cmp
(bad)
jo
push
es
(bad)
sbb
jmp
xchg
je
lea
retf
out
dec
jecxz
xor
add
imul
cs
and
loopne
jecxz
ret
cmp
lahf
repnz
bound
sbb
jns
xchg
mov
sbb
push
aad
or
in
into
inc
pop
sahf
or
call
sbb
push
imul
push
outs
xchg
in
inc
dec
mov
add
jno
fisub
add
add
xchg
in
fnstsw
add
pushf
mov
or
aad
dec
push
jp
sbb
pop
sub
inc
sti
pop
and
sbb
mov
sbb
movs
adc
ins
xchg
mov
pop
sbb
jns
fs
push
xchg
inc
jns
dec
mov
xchg
sub
push
add
add
lock
bound
push
mov
add
je
xor
sbb
std
dec
sar
bound
sahf
push
nop
xor
sub
in
sbb
dec
cmp
jo
sub
in
sbb
ins
jne
sti
(bad)
call
xchg
je
(bad)
in
jns
mov
into
xchg
inc
leave
loope
test
add
add
jns
push
aas
sbb
push
xor
xchg
jns
push
movs
jmp
sbb
push
lea
push
sbb
gs
and
je
and
je
and
jbe
and
inc
pop
and
jge
add
add
add
dec
sbb
or
add
jno
dec
outs
xchg
pop
stc
mov
add
(bad)
out
pop
hlt
(bad)
out
push
call
mov
jnp
jl
xchg
pop
rcl
xchg
inc
mov
xor
jo
fmul
in
(bad)
in
icebp
add
call
jl
add
jmp
adc
(bad)
pop
pusha
in
scas
mov
pop
push
(bad)
jmp
test
aas
jecxz
mov
sub
dec
adc
(bad)
push
sti
fwait
adc
cli
sti
das
aam
sbb
dec
mov
add
add
adc
inc
pop
xchg
xchg
add
add
dec
enterw
add
add
(bad)
mov
cld
mov
test
(bad)
fldcw
(bad)
mov
push
jo
and
xchg
add
dec
pop
lock
jb
les
ins
sbb
mov
sbb
or
outs
ins
and
dec
xor
ds
(bad)
jmp
cdq
int3
add
test
add
call
adc
imul
sub
xchg
test
mov
and
pop
test
rcr
and
daa
xchg
sub
jno
mov
test
push
lock
inc
jno
and
outs
fsubr
mov
dec
test
les
ins
enter
mov
adc
mov
add
jae
add
add
push
lds
and
sbb
cmp
aad
clc
(bad)
leave
xchg
mov
add
add
or
and
push
jp
lods
and
sbb
or
aad
lea
cmps
int3
add
pop
out
dec
jo
and
sbb
mov
aad
lea
sbb
jns
sbb
push
test
inc
and
adc
cmc
add
leave
xor
jo
ins
mov
add
mov
inc
xchg
je
(bad)
pushf
test
mov
add
jns
cmp
pop
out
jmp
addr16
push
mov
add
enter
ja
add
add
jmp
cmp
pop
cmps
cmp
pop
xchg
out
shl
add
xchg
mov
jge
loopne
or
add
add
mov
mov
jecxz
mov
jmp
je
popf
lock
pop
out
(bad)
test
mov
add
fiadd
inc
pop
fiadd
inc
dec
jecxz
cld
bound
idiv
jmp
fs
ins
aam
add
xor
sbb
imul
add
ins
cld
daa
xchg
sbb
add
inc
pop
and
sbb
push
mov
call
ficomp
ret
into
jmp
xor
dec
inc
(bad)
push
pop
xchg
je
mov
out
fstp
in
jl
inc
and
cmc
adc
fstp
in
pushf
pop
ins
and
addr16
and
push
inc
and
dec
retf
pop
inc
lea
push
jecxz
add
add
pop
mov
push
cld
retf
loop
xchg
in
push
pop
loopne
ror
pop
popf
sbb
sbb
inc
push
inc
sbb
sbb
sbb
cmps
cmp
add
les
adc
add
dec
and
sbb
sbb
adc
mov
cmp
pop
les
adc
rcl
rcr
mov
ja
add
add
or
adc
adc
push
mov
add
push
xor
shl
pop
mov
leave
sbb
xor
in
psubsw
in
xor
out
fadd
add
push
cmp
add
push
dec
call
xchg
fld
and
add
add
loopne
loope
add
cdq
push
(bad)
adc
push
add
stc
sahf
pop
xchg
icebp
add
jo
cld
not
jle
push
cmps
cmp
repz
out
and
xchg
(bad)
or
ins
sbb
mov
imul
jle
sub
std
cdq
pop
out
dec
test
add
add
add
(bad)
mov
mov
jle
or
or
push
push
loopne
fldenv
out
sahf
sub
and
push
ins
and
imul
aad
sbb
pop
inc
jecxz
mov
rcr
xchg
imul
pop
mov
movs
test
call
xor
xchg
je
popf
fwait
(bad)
shr
bound
cdq
test
test
pop
xchg
test
dec
mov
mov
rcl
sub
call
and
iret
push
test
add
cmp
sbb
adc
jecxz
test
cmp
pop
and
test
add
push
out
je
rcl
add
aam
fist
cld
(bad)
test
call
out
pop
xchg
mov
rcr
xchg
jge
ins
ds
out
jg
sahf
test
jle
in
push
out
pop
mov
push
jo
and
jge
add
mov
cld
pop
test
call
pop
cmps
jecxz
out
pop
sahf
test
mov
in
mov
outs
lods
and
sbb
std
(bad)
pushf
sti
(bad)
(bad)
fimul
or
mov
pop
push
sbb
addr16
sbb
(bad)
std
fwait
adc
sbb
push
mov
add
xlat
add
std
dec
cli
sti
loop
sbb
mov
ins
sbb
and
and
ins
sbb
and
pop
xchg
inc
jns
xchg
inc
mov
mov
xchg
je
jne
inc
mov
pop
out
gs
bound
test
pop
jecxz
mov
lods
and
jge
add
mov
add
sahf
push
pusha
add
mov
push
rol
add
jge
add
pop
xchg
mov
int
lea
mov
dec
(bad)
sbb
adc
xchg
dec
jecxz
cmp
jmp
mov
lock
pop
out
sbb
dec
lea
clc
add
jp
mov
pop
out
stos
push
pop
and
jl
add
dec
xchg
stc
xchg
ins
xor
mov
mov
outs
sbb
in
pop
and
jl
add
dec
call
jne
sbb
push
out
popa
test
(bad)
stos
jecxz
sbb
test
lock
je
add
add
ret
cmp
mov
mov
ins
sbb
gs
push
mov
mov
pop
out
mov
in
(bad)
dec
lea
xor
push
retf
and
jg
add
ror
test
xor
(bad)
pop
out
or
add
lods
and
jle
add
pop
mov
jmp
cmps
cmp
jb
pop
out
in
bound
sbb
xchg
imul
sbb
xor
imul
sbb
xor
pop
fwait
les
pop
and
sbb
sbb
test
sbb
mov
cld
adc
add
repnz
jecxz
mov
sbb
jg
mov
mov
cmp
push
pusha
jecxz
dec
and
and
sbb
and
and
and
sbb
or
ins
and
inc
int3
std
into
pop
dec
(bad)
jmp
jg
cmps
or
into
xchg
test
sbb
push
iret
xchg
inc
mov
dec
(bad)
fld
adc
ds
jecxz
mov
jg
push
lds
sbb
jne
popf
test
int
add
inc
out
and
sbb
xchg
cdq
push
add
jle
xor
pusha
out
sub
xchg
je
sub
add
push
push
ins
and
add
add
pop
and
jge
add
pop
and
imul
xchg
mov
pop
sbb
cmp
jge
add
mov
jns
imul
inc
out
loope
xor
cdq
cdq
add
fwait
ss
cdq
ds
test
pop
out
mov
jle
(bad)
cdq
call
and
jecxz
inc
or
adc
sbb
mov
in
lods
mov
mov
cdq
or
xor
sbb
sti
adc
imul
jg
(bad)
arpl
je
jns
cmp
loop
out
xor
arpl
mov
test
sbb
sti
ret
lea
test
dec
lea
out
sub
add
push
test
outs
jne
out
dec
stos
pop
add
popa
out
cld
push
in
test
test
(bad)
aas
out
aad
ins
and
or
js
in
adc
pop
test
lahf
inc
leave
lods
sbb
movs
test
adc
pop
or
jne
ins
ja
jecxz
pop
shr
jb
mov
mov
fsincos
ret
(bad)
jmp
dec
pop
and
sbb
push
test
add
or
cmps
and
test
sbb
inc
mov
jmp
mov
jmp
xchg
je
xlat
dec
call
outs
and
and
add
add
popa
pop
or
fild
jo
add
(bad)
and
push
sti
sti
std
mov
fild
imul
jb
fisub
add
lods
and
sbb
mov
in
fsubrp
dec
inc
out
fidiv
inc
ds
sahf
icebp
sti
dec
and
sbb
sbb
adc
sbb
add
mov
inc
ret
test
hlt
cmp
jb
int
xchg
mov
in
sbb
push
push
add
cmp
(bad)
and
test
add
dec
mov
xchg
inc
dec
lea
stos
inc
add
sbb
fmulp
push
mov
mov
mov
cmps
add
mov
iret
xchg
jae
icebp
dec
add
cmp
jb
or
jmp
or
lea
lds
dec
imul
daa
jnp
jae
mov
mov
retf
jl
je
(bad)
sbb
call
pop
test
sbb
inc
mov
int
sub
maskmovq
idiv
in
out
popa
movs
xor
push
cmp
test
cmp
psubusw
fs
mov
pop
sbb
lea
sbb
and
outs
xor
(bad)
cmp
or
call
lahf
shl
dec
ins
cmp
add
int
inc
sub
in
lods
and
jg
add
scas
sti
adc
sbb
lods
addr16
push
xchg
sbb
push
shl
ret
xchg
inc
jns
icebp
jb
ds
sub
push
ret
xor
sbb
test
gs
and
out
push
call
sub
sahf
dec
sahf
test
jg
in
cmp
mov
ins
and
add
call
add
add
leave
fcom
and
sbb
cmp
out
cmp
or
mov
test
sbb
xchg
jg
xor
add
add
inc
pop
and
jle
add
or
jle
add
jg
add
xor
inc
dec
or
and
jg
add
mov
lock
out
add
xchg
and
xchg
add
aas
pop
and
test
add
addr16
push
inc
pop
and
test
add
data16
add
add
stc
cmps
jb
pusha
add
stos
in
sbb
sub
lock
inc
cmp
push
aaa
ins
and
or
and
sti
pop
movs
jle
(bad)
sbb
fsub
mov
loop
aas
jle
test
sbb
push
push
out
mov
dec
(bad)
fnstcw
add
fucom
ins
jnp
jmp
jp
add
mov
and
test
xchg
jecxz
pop
sbb
sbb
adc
dec
ins
sbb
xor
sbb
and
add
pop
sbb
cmp
ret
sti
bound
sbb
mov
or
ror
fs
or
push
sbb
lds
(bad)
fidivr
pop
rcl
xchg
je
shl
mov
ror
cld
(bad)
test
call
into
inc
dec
(bad)
fldenv
dec
(bad)
fldenv
cld
imul
sti
bound
xchg
and
test
add
or
sbb
in
popf
test
mov
lock
cs
je
mov
sbb
movs
ins
add
mov
out
pop
adc
movs
or
and
gs
push
loopne
add
add
addr16
test
pop
int
stos
sti
push
jl
and
(bad)
sub
add
imul
and
sbb
or
inc
add
add
icebp
imul
cmp
outs
push
xor
pop
cmp
out
sbb
pop
cld
mov
sbb
jo
cld
(bad)
aad
sbb
pop
cld
out
sbb
std
mov
sti
add
xchg
and
test
add
xchg
test
adc
add
lock
xor
add
dec
ja
push
sar
sti
xor
push
fidivr
pop
and
jl
add
imul
mov
mov
loop
mov
xchg
mov
push
add
das
dec
push
nop
icebp
sti
xchg
aad
sbb
or
loop
pusha
mov
cmp
jbe
sti
bound
ins
and
gs
ficom
das
inc
push
push
lods
and
jl
add
adc
or
lock
cmp
push
cmp
lods
and
jge
add
cmps
stos
sti
bound
dec
lea
xor
daa
cmp
push
mov
adc
sub
std
ins
out
add
setns
sbb
and
jbe
add
add
add
jbe
add
or
push
xchg
or
imul
mov
test
aad
xchg
mov
movs
or
imul
inc
leave
fst
add
or
test
ins
and
push
sbb
jge
mov
inc
mov
xchg
inc
mov
popf
icebp
mov
sbb
call
(bad)
and
jle
add
mov
sti
bound
sahf
push
nop
add
(bad)
in
sbb
rol
lds
sbb
loope
cmp
mov
cmovg
movs
or
mov
adc
add
jecxz
xchg
sub
add
or
aaa
sbb
int
out
(bad)
inc
cmp
sahf
adc
fnstenv
sbb
or
es
je
sbb
add
cmp
cmp
dec
sbb
adc
je
add
jg
test
out
add
mov
add
add
xchg
movs
cmp
(bad)
fnstenv
call
push
lods
add
les
sbb
(bad)
xlat
sti
add
prefetchnta
stos
and
jg
add
push
sar
loop
lods
and
jg
add
pop
sub
lock
int
sar
push
das
ins
and
addr16
fldenv
inc
push
out
jl
mov
popf
sbb
and
cs
push
add
std
jb
sti
bound
jno
nop
stc
sti
retf
in
sbb
pop
test
sbb
or
loop
cmp
sbb
in
pop
and
jge
add
jge
add
sbb
jge
test
pop
add
retf
inc
dec
pop
and
jge
add
cs
push
jns
dec
(bad)
loope
sub
gs
mov
cli
sti
and
paddw
std
std
add
fwait
and
push
xchg
je
adc
lods
xchg
inc
out
retf
and
xor
dec
push
nop
jmp
mov
loop
pusha
jmp
sub
sti
mov
popf
in
pop
cs
loop
jb
sar
sbb
dec
jmp
(bad)
faddp
add
test
and
test
add
sbb
pop
mov
cmc
loop
movs
mov
pop
adc
xor
push
ins
and
sub
xchg
push
stc
fsubr
(bad)
hlt
pop
add
adc
iret
sbb
sti
imul
sbb
cmp
push
pushf
or
scas
pop
call
jbe
pop
lea
call
inc
ds
cld
lahf
loope
loop
aas
cld
mov
jne
inc
test
add
add
int
mov
mov
cmc
pop
add
sbb
leave
xchg
add
xor
pop
enter
or
jne
cmp
or
je
lods
fisubr
dec
ins
and
sub
cwde
jl
leave
fidiv
scas
in
jmp
cmps
inc
call
push
pop
add
cmps
sahf
pop
push
inc
push
pop
and
sbb
xor
cmps
je
xchg
or
and
adc
ret
call
cmp
xchg
mov
repz
add
push
scas
pop
aas
dec
push
cld
jne
inc
jae
mov
cdq
add
cmps
sbb
sti
bound
xchg
je
fidiv
or
loop
outs
inc
xchg
mov
sbb
add
out
or
cld
pop
inc
pop
dec
add
aas
movs
sbb
shr
xchg
in
inc
dec
mov
add
inc
mov
sbb
adc
add
dec
mov
push
inc
dec
(bad)
fstp
cmp
push
sbb
mov
call
call
fs
test
sbb
sub
stos
sub
or
sbb
in
lock
mov
out
fwait
adc
leave
cmp
add
cmp
xor
nop
add
mov
add
add
jecxz
sti
mov
adc
push
loopne
sti
jg
sbb
add
sbb
test
loop
jge
das
inc
adc
test
add
sti
ret
and
(bad)
lods
sti
and
and
adc
pop
cdq
pop
add
add
add
dec
mov
dec
push
and
inc
pop
and
test
add
sub
adc
fwait
les
movs
or
sbb
fsubp
pushf
cld
loop
adc
pushf
sti
sar
ins
and
sub
sar
push
dec
dec
lods
and
xchg
add
adc
sub
mov
retf
and
inc
pop
and
sbb
and
mov
pop
cmp
sub
inc
add
mov
aaa
pop
shr
dec
(bad)
fldenv
loop
push
or
sub
sub
push
adc
inc
mov
or
add
ret
xchg
jg
pop
std
jmp
inc
jns
mul
aas
add
add
xchg
je
jae
test
sbb
push
xor
add
out
sbb
cmp
pop
inc
test
outs
xor
rcr
jmp
lock
sahf
aas
dec
jmp
loop
test
xchg
add
(bad)
mul
pushf
adc
cmp
dec
ins
and
es
pop
ss
leave
loope
leave
jmp
das
lock
cmp
call
or
or
rcl
push
dec
cld
mov
jle
fs
fdivrp
push
jle
pop
inc
sbb
fs
mov
ins
stos
cmc
cld
adc
or
call
fadd
out
pushf
add
add
add
aaa
xchg
popf
jge
out
cmp
jae
lea
in
bound
gs
cmp
sbb
jmp
jbe
je
cmp
je
dec
pop
pusha
sar
out
lock
(bad)
jl
enter
out
ret
cld
pop
sub
jb
loopne
js
bound
dec
(bad)
cwde
cmp
out
out
push
adc
or
cmovle
popa
jg
sub
out
cwde
(bad)
in
push
push
div
mov
out
mov
inc
sbb
add
call
sbb
push
jle
inc
inc
pop
add
cmp
add
and
loop
sbb
adc
cmp
mov
movs
in
ret
add
xor
loope
out
into
sbb
adc
mov
or
lods
data16
jge
jne
inc
sbb
mov
cmp
pop
inc
dec
lea
add
add
pop
jmp
dec
lock
push
std
fwait
adc
xchg
test
cmp
call
pop
mov
aam
out
sti
loop
ins
aam
jne
cld
loop
jno
das
test
stos
into
cmp
call
test
arpl
out
nop
retf
bound
lock
aas
out
cmp
add
add
call
aas
xchg
popf
or
js
push
aas
xchg
test
out
nop
lock
and
xchg
test
aas
out
cmp
dec
pop
clc
pusha
ds
push
dec
pop
cld
pusha
ds
pop
mov
call
dec
movs
pusha
add
out
sub
movs
mov
jb
add
add
cmp
push
loopne
mov
xchg
loop
(bad)
loopne
add
inc
lahf
inc
stc
(bad)
fdivrp
movs
pop
stos
jle
cwde
jge
mov
aas
out
pop
shr
or
dec
sbb
inc
bound
out
push
push
add
xchg
fisttp
fwait
(bad)
icebp
jb
inc
retf
push
pop
dec
inc
(bad)
bound
dec
lea
in
bound
and
cmp
les
mov
sub
fcmovnb
jmp
cmovle
ret
stos
mov
icebp
sbb
push
aas
lock
push
out
mov
arpl
out
in
loop
pop
add
sbb
ror
mov
xchg
mov
ds
sub
adc
sbb
nop
add
push
jo
enter
dec
call
mov
dec
pop
jl
ds
(bad)
out
inc
sbb
xor
xchg
add
and
inc
xchg
dec
lods
and
cmp
call
add
loop
lock
push
rol
push
cmp
fisttp
add
pop
ins
mov
pushf
or
lds
inc
adc
cmp
push
daa
mov
les
adc
xchg
pop
inc
cmp
sbb
bound
idiv
out
cdq
int3
jo
push
or
push
jmp
jmp
std
xor
lea
add
call
es
into
cmp
mov
mov
cmp
push
sub
ret
cmp
loop
ss
xchg
mov
cmp
scas
sti
bound
sbb
add
loopne
jne
lods
dec
(bad)
call
and
dec
inc
out
xchg
rol
add
ret
mov
into
call
mov
mov
jge
scas
xchg
inc
xor
ds
ret
aas
dec
lea
sub
inc
mov
out
std
pusha
stos
sti
loop
out
push
cs
xor
xchg
dec
test
ds
push
cmp
test
add
add
sub
call
std
adc
xlat
je
icebp
sbb
or
cmp
iret
std
bound
pop
mov
sbb
ret
test
scas
xchg
lea
lahf
sbb
bound
in
bound
das
sub
jle
(bad)
sbb
jecxz
es
adc
in
sbb
add
add
rol
push
fcmovne
jmp
(bad)
push
setle
jne
ins
xchg
jg
push
dec
adc
call
xchg
xchg
mov
inc
out
imul
adc
add
sbb
inc
push
inc
out
inc
mov
enter
out
push
dec
sbb
add
add
add
jb
push
ror
push
push
pop
sahf
inc
popa
movs
test
adc
call
inc
fst
(bad)
jmp
jmp
mov
out
test
push
rcl
or
ret
ret
out
cmps
stc
adc
bound
sbb
mov
mov
ficom
test
dec
add
jmp
mov
pop
inc
lahf
inc
and
mov
in
jb
iret
test
(bad)
cmp
dec
sbb
add
inc
sub
push
pop
lea
lock
jle
push
jg
xchg
mov
inc
out
lods
jmp
add
mov
xor
adc
ret
daa
lock
(bad)
sub
add
mov
ret
jb
mov
jg
cmp
jnp
push
jmp
lock
fadd
jmp
call
xchg
lock
jg
call
sbb
jmp
jmp
add
add
add
or
ss
inc
add
out
sub
in
shr
mov
jle
out
jle
push
call
out
ret
lods
mov
mov
add
(bad)
fisttp
bound
sub
mov
sub
call
cld
push
jg
push
sub
loop
and
lods
in
pop
sbb
sbb
add
mov
test
cmp
xchg
sub
(bad)
in
stc
ss
aad
lods
and
jl
(bad)
pop
jge
call
cmps
jl
push
and
mov
push
inc
dec
mov
adc
and
sar
inc
shl
add
out
cdq
mov
loopne
xchg
pop
sahf
inc
popa
movs
idiv
cli
or
cmp
jg
call
(bad)
(bad)
xchg
mov
jnp
(bad)
std
stos
jl
(bad)
cmp
and
inc
(bad)
aad
fwait
jge
test
test
sbb
mov
or
fwait
(bad)
jmp
add
add
out
data16
xchg
mov
jnp
(bad)
jmp
jmp
mov
inc
dec
or
push
or
sbb
aad
lea
jge
(bad)
sub
mov
adc
bound
push
cwde
hlt
mov
(bad)
fadd
call
(bad)
(bad)
xchg
mov
jle
(bad)
std
sub
vpunpckhbw
in
push
push
dec
push
jo
mov
mov
jecxz
sub
jmp
sub
mulps
add
jle
mov
jecxz
jmp
or
sar
mov
(bad)
jmp
or
enter
push
adc
std
ret
call
loopne
js
bound
lock
add
ins
js
sti
bound
fmul
test
in
pop
lea
(bad)
sub
mov
stc
in
bound
dec
mov
ja
clc
inc
xchg
jle
push
push
rol
and
jmp
mov
(bad)
jmp
lea
dec
(bad)
pop
jb
call
inc
in
pop
(bad)
push
add
out
and
jmp
test
(bad)
mov
ds
add
inc
jb
out
test
(bad)
std
adc
sti
add
sbb
add
inc
xchg
inc
ins
into
xchg
test
out
lds
mov
ja
call
pop
lock
jns
out
cwde
loop
jmp
sbb
mov
std
jns
call
or
std
add
pop
jnp
jmp
out
xchg
or
lea
std
in
ret
jo
jnp
mov
cld
in
push
or
out
bound
jmp
cmp
add
add
dec
pop
loopne
jo
xor
bound
imul
sub
dec
lea
inc
sbb
mov
mov
pop
cmp
jp
push
jne
sbb
aam
jp
les
jo
mov
jmp
loopne
out
aas
adc
int
mov
add
sub
bound
inc
popa
xor
push
jg
xchg
mov
jp
dec
jmp
jbe
jecxz
nop
das
push
pop
dec
jne
jmp
(bad)
out
(bad)
call
jne
lea
in
(bad)
aam
add
add
push
jbe
push
jg
xchg
mov
jp
dec
add
out
xor
call
jmp
sti
neg
out
xchg
in
out
out
xor
mov
xchg
pop
and
outs
sub
fiadd
sti
(bad)
gs
add
xchg
pop
cmp
or
cmp
or
jo
mov
jmp
mov
add
ins
add
cwde
push
rol
outs
xchg
inc
and
int
movs
adc
fisubr
fsub
clc
sahf
call
lock
(bad)
ror
in
push
je
cld
addr16
push
arpl
lock
and
inc
and
or
add
push
pop
shr
std
inc
retf
add
jmp
ja
cld
fldcw
sar
outs
fwait
(bad)
shr
xor
test
dec
lea
out
(bad)
xor
sbb
jb
fcmovnb
jmp
ret
test
ret
pop
push
adc
add
shr
pop
pop
js
push
inc
or
call
sub
xchg
mov
outs
out
ins
ret
mov
lea
in
add
mov
mov
jns
sub
out
test
lock
add
mov
outs
out
aam
int
push
outs
xchg
jge
or
adc
xor
je
enter
ret
mov
add
ins
mov
outs
ins
mov
cmp
cld
loop
xchg
(bad)
lods
pop
mov
jl
sar
gs
xchg
inc
ins
or
fdiv
xchg
test
ins
xchg
into
jne
inc
mov
push
jb
fdiv
xchg
dec
mov
ins
mov
or
mov
jmp
jecxz
data16
mov
sbb
add
dec
fst
mov
ins
out
std
out
mov
add
in
jo
dec
xor
je
cld
cmps
addr16
add
add
xchg
jne
cld
xchg
addr16
into
ins
out
jmp
ins
out
int
mov
push
jmp
cwde
jno
call
(bad)
outs
dec
push
dec
sbb
mov
mov
inc
xchg
(bad)
sub
stos
in
test
dec
lea
xchg
out
pushf
les
push
mov
jge
stc
xor
mov
push
jecxz
push
sbb
xor
jge
jne
xchg
repnz
xchg
xchg
mov
call
leave
shr
jb
jecxz
cmp
pop
and
mov
add
clc
shr
push
sbb
test
shr
push
push
jecxz
jnp
pop
and
jg
jge
adc
dec
jo
shr
xor
jecxz
nop
leave
mov
leave
rcl
or
inc
outs
dec
call
data16
ins
in
dec
inc
out
fstp
test
push
adc
pusha
inc
je
ret
or
das
ins
cwde
sbb
or
and
call
add
add
mov
xchg
bound
ins
aam
out
jle
(bad)
xlat
dec
(bad)
call
pop
out
jmp
sti
bound
sbb
cld
bound
and
push
jg
adc
jae
gs
xchg
or
pop
lock
out
mov
aad
jne
mov
add
add
adc
pop
jg
jb
or
cs
cld
loop
jb
sbb
mov
loope
jb
gs
jo
(bad)
(bad)
fimul
pop
out
cmp
mov
aam
jne
mov
pop
jg
jb
or
sub
cli
cld
bound
and
add
add
mov
gs
test
cli
(bad)
fimul
pop
out
mov
aam
jne
mov
cmp
jb
pop
jg
jb
or
sub
clc
cld
loop
jb
sbb
mov
loop
jno
inc
pop
cs
(bad)
(bad)
push
xor
add
add
enter
into
outs
lahf
inc
sbb
fdivrp
and
pop
sub
lods
mov
(bad)
and
call
ror
jmp
dec
lods
scas
sti
bound
out
mov
jno
call
push
or
call
fstp
mov
add
ret
pop
push
lock
lea
out
mov
or
mov
inc
lock
pop
out
inc
pop
repz
fsub
add
inc
jb
mov
inc
lock
cmp
(bad)
add
bound
data16
pop
out
pop
push
xchg
dec
imul
add
sbb
stc
pusha
pop
fwait
js
test
loop
(bad)
add
add
add
add
or
call
addr16
es
or
jg
xchg
jne
cs
sti
ror
jo
adc
pusha
inc
pop
sahf
inc
popa
xor
repz
out
loopne
out
inc
sub
in
and
add
and
pop
dec
jmp
es
xchg
jge
dec
mov
fcomp
ins
shl
hlt
add
add
or
jmp
fimul
sbb
(bad)
pop
push
jne
div
in
sbb
jmp
mov
add
add
imul
mov
inc
movs
aad
adc
faddp
mov
xor
jb
xchg
inc
call
mov
cdq
pushf
mov
ins
imul
std
xor
mov
addr16
movs
sbb
sub
or
imul
stc
test
inc
sub
cld
push
inc
jb
lea
inc
aad
loopne
popa
pop
xchg
inc
mov
cmp
jo
xchg
pop
lds
inc
mov
mov
in
or
lea
sahf
inc
rol
lea
push
lock
push
pop
out
push
fdiv
pop
jg
call
std
xor
xchg
(bad)
push
dec
push
sub
std
retf
bound
lahf
call
es
mov
dec
sub
sbb
xor
(bad)
xchg
dec
sub
dec
(bad)
adc
ror
std
pop
out
jg
xchg
jne
inc
sbb
pushf
ficom
inc
mov
push
xchg
test
add
add
inc
ins
pop
dec
push
inc
frstor
int3
sbb
ins
pop
jl
(bad)
jo
mov
add
jmp
(bad)
out
jge
sbb
and
test
pop
inc
(bad)
out
mov
xchg
jne
or
lea
sub
mov
ds
retf
pop
icebp
scas
mov
push
lahf
inc
sub
fdivrp
movs
lea
add
add
inc
sub
loopne
push
ret
icebp
dec
jecxz
push
inc
icebp
adc
fxam
inc
mov
mov
adc
adc
pop
inc
mov
jmp
out
std
add
jo
nop
fmul
jmp
icebp
in
and
jmp
pop
xchg
pop
test
push
pop
(bad)
fdivr
lock
js
out
adc
xchg
(bad)
jmp
jmp
mov
jmp
das
ins
mov
mov
push
(bad)
cld
ret
mov
(bad)
mov
jbe
rcr
add
sbb
push
aam
in
xchg
into
dec
push
inc
call
mov
push
jns
sbb
and
jne
cld
bound
add
push
pop
xchg
jl
mov
jo
dec
jle
cld
push
mov
(bad)
xor
sub
dec
sbb
loopne
jecxz
cs
fwait
retf
loop
cmp
push
jne
pop
jns
test
rcl
pop
push
sbb
int
jl
push
push
fild
inc
sbb
rcr
and
sti
inc
adc
mov
dec
pop
xchg
(bad)
mov
xlat
(bad)
fldenv
sbb
adc
jecxz
mov
jle
add
add
xor
jecxz
or
or
icebp
add
std
jle
sti
add
sahf
push
outs
lahf
inc
mov
xor
cmp
push
or
(bad)
xchg
adc
inc
gs
ret
pop
jo
js
fimul
and
dec
fs
mov
addr16
icebp
sbb
and
pop
jb
(bad)
jl
add
in
and
pushf
mov
cmp
or
test
xchg
je
jns
mov
sbb
xchg
iret
sub
add
sbb
ins
and
or
imul
ds
jge
std
inc
movs
sub
test
ficomp
add
add
(bad)
sbb
dec
pop
push
sbb
(bad)
aas
xor
cdq
jge
pop
mov
pop
out
mov
icebp
add
or
sub
inc
stc
mov
lock
in
sbb
aad
jns
aad
inc
and
test
call
add
mov
les
call
push
fs
mov
data16
inc
cmps
fdivrp
movs
mov
movs
into
pop
jb
das
jg
add
and
fdivr
cmp
sbb
lock
add
out
sbb
xchg
iret
sbb
add
sbb
std
xor
sti
add
fild
sbb
rol
add
fimul
ins
mul
jmp
sub
xchg
mov
xlat
(bad)
test
jg
call
out
jg
add
jle
je
jg
pop
mov
pop
out
std
ret
sbb
lock
sbb
sub
inc
jns
sbb
push
jg
jno
add
add
pop
out
or
(bad)
shl
test
push
pop
cdq
push
pop
jo
mov
cdq
push
call
push
add
jle
add
push
mov
mov
or
add
pusha
cmp
aad
and
mov
and
fucomi
xchg
iret
fidivr
sbb
std
jb
sti
loop
fisubr
aaa
sbb
mov
ds
dec
mov
ins
and
push
mul
test
(bad)
(bad)
cdq
cdq
dec
(bad)
jle
call
(bad)
jge
add
out
jno
jge
pop
mov
and
in
sbb
pusha
or
sbb
repz
push
outs
dec
lahf
inc
or
push
add
jge
movs
aaa
and
aad
pop
(bad)
movs
mov
inc
and
ins
outs
cwde
(bad)
arpl
retf
retf
dec
test
jecxz
push
dec
dec
mov
xchg
fdivrp
push
ins
push
mov
xchg
add
rol
add
add
mov
je
popf
not
jg
mov
xchg
iret
pop
retf
pop
test
add
lock
dec
sbb
leave
fimul
cmc
sbb
(bad)
mov
(bad)
and
ins
cmp
jne
xlat
(bad)
pop
test
adc
es
jg
jb
fiadd
xchg
pop
mov
neg
jmp
add
stc
add
mov
or
lahf
inc
mov
test
fld
push
out
pop
(bad)
adc
or
ins
mov
pop
popa
jo
sti
(bad)
fimul
add
jmp
dec
mov
dec
sbb
mov
fdivrp
in
jle
pop
popa
jb
out
sbb
sbb
add
cli
(bad)
sti
loop
jle
push
popf
test
rcl
pop
imul
sti
(bad)
out
fisubr
dec
sbb
(bad)
fimul
cdq
push
jecxz
jge
inc
imul
add
sbb
jle
(bad)
mov
xlat
(bad)
fldcw
sbb
aad
jecxz
mov
xchg
cdq
test
adc
out
sbb
add
ins
mov
sahf
push
push
dec
lahf
inc
mov
xor
inc
jp
push
call
push
inc
xchg
or
(bad)
xchg
into
jle
fdivr
fimul
sbb
(bad)
fiadd
mov
inc
sbb
sbb
add
les
add
mov
(bad)
jmp
or
out
sbb
xchg
iret
sbb
add
sbb
cmp
call
add
aam
sbb
popa
movs
ds
lea
imul
xchg
mov
(bad)
sub
sbb
jmp
xor
sbb
test
out
cmp
add
or
or
inc
mov
add
add
jp
push
jmp
aad
inc
and
ins
or
cli
ret
fimul
sbb
call
inc
dec
mov
inc
sbb
popa
fdivrp
xchg
push
jb
jg
lahf
add
mov
add
pop
(bad)
sti
ret
daa
sbb
div
lock
mov
les
pop
inc
sbb
std
pop
xchg
add
pop
into
leave
fimul
and
adc
jmp
or
cmps
popf
dec
jge
mov
xlat
(bad)
cdq
test
sbb
jge
jecxz
out
jg
add
jg
pop
mov
jp
add
add
push
and
add
std
or
push
push
dec
lahf
inc
mov
(bad)
jmp
lock
jns
push
jmp
std
inc
or
ins
push
xchg
pop
ja
push
mov
jecxz
scas
aas
dec
mov
sbb
shl
pop
ja
add
add
add
mov
add
xchg
mov
push
in
outs
daa
cwde
test
and
jmp
xchg
iret
fcmovb
add
sbb
or
jmp
imul
ds
cmp
or
jmp
(bad)
xor
mov
sbb
jno
jecxz
jg
jb
pop
jle
ins
fld
imul
test
add
or
and
jge
push
pop
inc
lock
aad
pop
(bad)
aad
das
inc
movs
ins
xchg
push
jl
(bad)
rol
jns
adc
pop
inc
fild
mov
inc
aam
out
bnd
test
je
rcl
or
lds
outs
pop
sub
mov
bnd
jge
je
(bad)
repz
mov
idiv
(bad)
fistp
dec
dec
mov
push
and
pop
dec
and
pop
fs
pop
je
add
add
sbb
cmc
pop
fdiv
icebp
test
mov
jmp
adc
std
mov
push
push
sbb
jno
add
fimul
out
inc
std
mov
adc
push
sbb
imul
addr16
pop
inc
and
pop
inc
and
dec
fcmovne
push
inc
aam
mov
sub
sahf
fadd
adc
inc
gs
push
dec
and
jo
imul
std
mov
adc
or
fadd
sbb
inc
adc
add
pop
out
fisub
pop
sbb
dec
mov
or
pop
add
pop
mov
xor
jno
mov
sbb
aam
fidiv
mov
pop
dec
into
int
fsubr
mov
add
(bad)
add
imul
add
leave
fcomp
pop
ins
hlt
or
enter
sbb
leave
jb
mov
pop
jb
mov
pop
sub
mov
sbb
mov
xchg
in
fisubr
fcmovbe
iret
inc
ret
add
mov
aam
ror
int3
icebp
dec
aam
ror
int3
cmp
dec
xor
or
mov
xchg
push
mov
fcom
sbb
mov
sbb
or
in
fcomp
pop
fsub
add
fdiv
or
or
or
enter
ror
or
jmp
or
mov
mov
push
shr
rcl
dec
ror
icebp
repnz
call
mov
pop
sbb
ins
test
cmp
adc
repz
sub
sub
out
push
push
jne
test
imul
add
add
iret
inc
ret
aam
adc
int3
mul
xchg
inc
mov
xchg
xchg
dec
mov
lea
ror
xchg
fmul
jno
sar
rcl
outs
rol
adc
add
imul
fmul
inc
ins
hlt
push
xchg
lock
add
push
inc
xchg
inc
mov
dec
push
mov
add
dec
mov
sahf
aam
or
jg
xor
inc
or
lock
jecxz
(bad)
add
lock
sub
ins
add
mov
jge
imul
push
(bad)
out
xchg
dec
push
mov
call
popf
adc
rol
out
gs
inc
ret
pop
in
or
sbb
ins
rcr
pop
jg
sub
push
mov
icebp
mov
mov
lea
xchg
dec
mov
(bad)
call
or
push
xchg
push
mov
push
in
push
lock
out
jno
sbb
cld
add
int3
nop
clc
push
jmp
jo
cli
jmp
nop
enter
jecxz
sti
inc
cmp
inc
rcl
push
fcom
push
lock
out
mov
sub
cld
adc
ins
aam
hlt
mov
add
dec
and
add
push
aam
xor
jne
mov
mov
inc
in
or
jne
iret
popa
outs
xchg
test
pop
sbb
(bad)
rcl
outs
out
sahf
cmp
std
add
and
retf
jo
sbb
and
in
pop
aam
xor
outs
mov
call
add
in
push
stc
shr
addr16
call
fld
or
(bad)
sbb
or
rsqrtps
xchg
dec
lock
inc
sbb
cld
ret
(bad)
sbb
fst
cmp
fsubr
sti
bound
push
leave
lea
aam
dec
lock
jno
mov
pop
inc
sbb
cld
bound
ins
aam
adc
dec
and
cvtps2pd
iret
fidiv
sub
jb
dec
popa
mov
call
sbb
imul
(bad)
(bad)
jb
push
leave
lea
aam
dec
lock
test
add
ins
inc
int3
les
and
mov
ins
or
sti
adc
xchg
sti
add
add
repz
call
mov
out
fdiv
(bad)
test
jno
jne
add
xchg
sti
bound
xchg
add
xor
and
mov
add
add
sbb
or
xchg
sti
ror
pop
or
int
xor
push
mov
jno
inc
movs
(bad)
fsubrp
ins
inc
in
out
(bad)
mov
or
out
dec
call
jecxz
or
add
scas
retf
shl
ins
outs
div
fs
in
mov
mov
test
sbb
push
fdivr
jmp
or
add
dec
retf
shl
(bad)
mov
jg
in
aam
fsubrp
cmp
call
mov
pop
test
fnstcw
jmp
xchg
or
add
fmulp
shl
popf
ins
pop
mov
add
add
mov
call
nop
jmp
jecxz
nop
jmp
jecxz
jo
into
jmp
nop
jmp
jecxz
nop
jmp
jecxz
push
jmp
jecxz
jo
mov
imul
call
mov
add
jecxz
adc
mov
sti
add
call
jmp
add
jecxz
lock
jecxz
adc
mov
mov
aam
or
ret
out
in
in
push
mov
call
into
(bad)
out
or
jg
shl
fsubrp
or
hlt
push
jmp
sahf
hlt
push
sbb
xchg
nop
jp
mov
lea
lea
jg
jne
add
add
add
sti
bound
ins
or
ins
jmp
push
cmc
push
sbb
addr16
(bad)
jle
jne
call
jmp
push
cmc
push
sub
jle
jne
call
jmp
into
repz
sbb
addr16
push
jge
add
add
inc
adc
push
lock
dec
lock
jl
mov
sub
(bad)
push
or
cmp
mov
inc
or
dec
into
mov
push
or
jmp
push
retf
mov
into
adc
mov
jmp
rol
or
rcr
pop
jmp
jmp
mov
call
fmulp
jmp
jge
nop
xchg
ret
fsubrp
gs
in
lock
jmp
into
rol
or
push
sub
or
movs
ret
call
jp
lea
jp
mov
mov
call
pop
retf
jmp
jbe
add
add
call
push
ror
xchg
jle
add
loope
(bad)
push
icebp
sub
adc
call
or
mov
or
int3
rcr
pop
or
fimul
or
bound
enter
cld
adc
push
cld
(bad)
dec
lock
and
mov
(bad)
sar
bound
ins
mov
and
ins
fdivr
call
adc
pop
int3
mov
lea
mov
ja
pusha
jmp
dec
in
xor
shr
test
cmps
jmp
adc
call
fadd
or
mov
sub
int
mov
push
pop
push
cld
push
dec
lock
sub
mov
cld
push
cld
add
sbb
setns
cmp
arpl
ins
in
sub
xchg
sti
and
xchg
jne
ins
xchg
mov
xchg
push
stc
mov
enter
retf
out
test
add
cld
adc
ins
aam
in
xchg
sti
add
ins
movs
or
xchg
sti
rcl
ins
mov
fcom
movs
lods
aam
sti
rol
dec
and
cvtps2pd
(bad)
bound
lods
gs
mov
jns
dec
popa
lods
(bad)
call
sbb
imul
jns
jne
imul
(bad)
js
push
leave
test
shl
lock
out
lahf
jns
add
add
enter
cld
inc
cmp
lds
and
cwde
imul
or
icebp
out
jbe
ret
xlat
add
and
sub
lods
cmps
test
lds
xor
lahf
jle
mov
(bad)
(bad)
out
fprem
sbb
cmps
add
sbb
(bad)
cmp
lock
xchg
sti
bound
push
leave
test
in
dec
lock
jns
mov
cmp
sar
inc
or
dec
std
xchg
sti
push
or
or
dec
retf
into
xor
jg
int3
fadd
fsubrp
dec
inc
in
adc
js
sar
pop
pop
jnp
add
add
(bad)
call
fs
mov
jle
push
jns
xchg
inc
jno
xchg
pop
bound
xor
jg
add
rcr
jmp
icebp
stos
jmp
mov
mov
mov
jecxz
mov
pop
jecxz
nop
icebp
stos
jmp
pusha
icebp
stos
jmp
jo
stos
jmp
pusha
icebp
mov
dec
add
stos
jmp
and
mov
inc
stos
jmp
and
cmp
loop
icebp
xlat
or
out
sub
icebp
iret
fdiv
lea
icebp
(bad)
in
ja
(bad)
call
ja
mov
movs
push
lea
jle
call
inc
lock
push
jp
mov
add
sbb
cld
push
or
setns
cmp
fdivr
xchg
sti
inc
inc
xchg
jne
push
xchg
jne
push
xchg
jne
imul
cmp
mov
jle
jne
push
xchg
push
mov
or
dec
lock
adc
out
pop
jl
enter
cld
bound
lock
sub
out
call
jns
lea
jns
(bad)
call
jns
mov
mov
call
lea
enter
jne
sbb
xchg
jne
addr16
pop
jge
jne
add
add
call
push
mov
or
cmps
inc
lock
out
test
add
ins
mov
ret
aam
inc
nop
sti
bound
out
pop
jecxz
ror
nop
jmp
sahf
sub
pop
nop
cmp
scas
adc
shr
add
jmp
add
add
stc
mov
jg
movs
sub
sbb
push
mov
push
lods
jmp
pusha
or
jmp
dec
sub
pop
push
cmp
pop
repnz
std
lds
(bad)
pop
jle
mov
or
push
mov
jle
mov
lahf
in
mov
lock
inc
ret
jmp
add
loope
lock
jg
xor
and
pop
jmp
(bad)
jle
mov
sahf
in
cld
pusha
nop
sti
(bad)
push
and
icebp
cwde
sub
jg
mov
(bad)
inc
shr
enter
push
mov
sub
cmp
(bad)
cmp
sbb
xor
and
sbb
inc
or
add
test
jmp
shrd
mov
or
jmp
and
xchg
or
jmp
cmp
mov
jle
lea
fsubp
call
ins
mov
mov
and
or
pop
sti
push
adc
jmp
nop
cmp
mov
out
test
in
bound
dec
adc
ins
clc
pop
sti
bound
lods
nop
adc
jecxz
xor
sub
loop
out
pop
sub
lea
cli
out
loop
push
xchg
adc
mov
adc
jmp
lock
xor
jge
lea
add
add
in
add
xchg
adc
cld
sahf
pop
sti
bound
lods
lods
arpl
jecxz
pusha
aaa
mov
inc
sub
mov
test
xchg
mov
dec
test
out
pop
jg
enter
cld
add
test
sub
jmp
out
dec
push
icebp
xlat
sbb
add
add
(bad)
call
imul
into
adc
mov
and
sti
bound
ins
lods
ins
xor
push
and
adc
scas
or
bound
enter
cld
bound
push
cld
out
mul
jae
in
sbb
add
popf
cld
inc
adc
dec
add
push
and
add
add
adc
dec
retf
hlt
xor
jg
pusha
fmul
sbb
dec
dec
jmp
xchg
call
leave
adc
add
push
and
adc
out
retf
hlt
xor
jg
xchg
pushf
enter
dec
jmp
or
call
or
call
add
call
rcl
sub
enter
cld
inc
or
es
not
jle
mov
cmp
fwait
cld
bound
push
aam
mov
sbb
nop
cmp
mov
loop
xchg
push
jns
xchg
inc
popa
or
xchg
dec
not
adc
mov
jge
enter
cld
bound
loop
cwde
test
cmc
sbb
in
add
bound
jg
push
mov
or
xor
sti
lods
and
dec
push
mov
call
jge
rol
addr16
push
jle
jne
imul
std
jge
(bad)
cld
in
pop
sti
add
pop
sti
loop
ins
pushf
cld
fcomp
loop
ins
sub
pop
sar
jmp
lock
jmp
icebp
aas
call
fucom
jmp
xor
sub
(bad)
cld
cmps
pop
sti
add
lods
and
out
repz
push
inc
jmp
icebp
adc
add
add
mov
push
test
jge
push
stc
xchg
add
out
lea
lods
popa
jge
dec
adc
jmp
push
xchg
dec
test
jge
push
jns
xchg
inc
popa
or
xchg
inc
not
adc
mov
jnp
enter
cld
bound
mov
cmc
push
jp
lea
jp
(bad)
call
jp
(bad)
fcom
fwait
cdq
jp
lea
jp
(bad)
fcom
mov
out
call
jp
mov
mov
call
push
int3
in
(bad)
lods
add
xor
rcr
inc
inc
jmp
(bad)
loop
push
sar
pop
loopne
adc
pop
inc
sub
int
mov
cld
push
inc
test
dec
sbb
cld
adc
xchg
aam
ja
jmp
scas
retf
mov
cs
jmp
shr
mov
jmp
dec
lods
inc
ja
add
add
jmp
jo
pushf
jmp
dec
retf
and
sub
or
pop
push
cld
xchg
dec
imul
adc
mov
lods
(bad)
frndint
rcr
cdq
loopne
pop
bnd
test
mov
popa
fwait
loopne
mov
test
cmp
in
loopne
icebp
clc
fwait
jbe
ret
scas
sar
pop
nop
mov
sub
std
gs
bound
cli
retf
fdivr
shl
jp
(bad)
enter
push
jbe
(bad)
call
jbe
lea
ins
jb
pop
jp
push
leave
test
jo
jnp
xor
gs
sar
dec
int
shr
clc
es
add
inc
imul
ins
and
lea
dec
jns
push
mov
add
idiv
jo
mov
or
(bad)
push
add
sbb
cdq
sbb
adc
add
cdq
sti
inc
cmp
fiadd
jge
out
pop
jns
jne
imul
push
jp
jne
ins
test
ins
mov
jne
imul
fidivr
jne
imul
into
jns
jne
ins
(bad)
cmp
xchg
inc
popa
push
push
mov
dec
test
jp
mov
cld
pop
frndint
add
ins
movs
or
cwde
sti
bound
ins
aam
sbb
add
add
and
or
mov
mov
stos
inc
outs
xchg
dec
inc
mov
call
lea
mov
jne
outs
or
xchg
push
mov
or
cmps
dec
imul
inc
dec
sbb
cld
mov
sbb
ret
and
or
out
retf
int3
xor
outs
cmps
mov
rcr
jmp
leave
mov
push
add
call
rcl
and
mov
push
or
push
dec
not
outs
out
mov
scas
xlat
cld
bound
ins
aam
jno
sti
bound
ins
cmp
cdq
sti
add
ins
pushf
or
cdq
sti
loop
push
and
or
push
or
loop
sub
lods
mov
out
sbb
out
adc
or
ja
(bad)
lock
in
bound
test
xchg
push
leave
test
je
outs
out
ins
imul
popa
mov
call
popf
test
add
in
aam
inc
outs
xchg
dec
inc
imul
push
or
push
mov
jp
and
xchg
dec
or
sub
(bad)
cmp
addr16
loope
xchg
dec
leave
push
xchg
push
mov
push
mov
or
out
pop
ins
sub
mov
cmp
add
add
cwde
jge
jno
ins
out
shl
out
rcl
ins
test
mov
xchg
dec
ins
mov
call
pop
retf
sub
ins
cmps
mov
and
call
int3
jmp
and
mov
jmp
ret
cld
pop
adc
adc
pop
das
sub
std
cmps
scas
cld
loop
cli
into
pop
jg
adc
frstpm(287
inc
addr16
ins
xchg
push
mov
nop
push
or
outs
xchg
dec
add
jmp
push
les
sub
sti
sbb
in
cdq
gs
push
cmp
add
fisttp
gs
out
call
(bad)
out
jns
adc
in
stos
shr
and
jmp
push
cmp
push
test
or
outs
xchg
mov
outs
out
mov
repz
and
add
into
hlt
jno
adc
enter
cld
add
dec
cld
es
(bad)
out
jne
sbb
cld
and
sbb
sti
inc
add
dec
mov
and
add
pop
mov
xor
outs
cmps
(bad)
jmp
xor
fdivrp
loop
icebp
ins
push
pusha
out
or
in
loop
sar
jae
jne
dec
fidivr
jae
mov
je
dec
inc
addr16
push
icebp
ins
sar
ins
mov
xor
ins
mov
or
sti
add
movs
add
jae
jmp
jo
push
jmp
icebp
and
mov
std
lea
jae
jne
dec
pop
jg
jb
mov
jno
jmp
sti
(bad)
out
push
and
out
xchg
in
add
mov
dec
in
loop
shr
inc
sbb
jmp
inc
sbb
lods
and
rcr
test
mov
jb
(bad)
sar
xchg
or
lea
repnz
jno
jmp
nop
out
sub
push
jno
push
add
out
ror
pusha
xchg
pop
out
mov
pop
out
mov
lock
push
pop
out
mov
pop
out
adc
inc
push
pop
out
jns
adc
xchg
jb
jmp
pop
out
pop
pop
sub
lods
cmps
jge
mov
sub
add
lea
sbb
adc
pop
out
and
or
pop
out
nop
add
out
cwde
adc
stos
sbb
leave
cdq
adc
int
out
push
sub
out
jno
mov
cmp
movs
cld
inc
add
dec
push
cdq
sti
bound
push
aam
sub
sti
(bad)
jmp
dec
stos
lods
xor
dec
mov
les
sbb
cmp
jmp
pop
icebp
push
arpl
lea
ss
dec
push
pop
out
fcomp
mov
add
cdq
movs
lea
jmp
lods
or
pop
out
ret
(bad)
jmp
lods
or
pop
out
mov
loope
mov
pop
icebp
pop
jecxz
out
push
dec
sbb
add
add
xchg
test
out
dec
cld
cdq
sti
push
add
jmp
dec
stc
movs
(bad)
adc
cdq
ins
bound
xchg
sbb
call
push
xchg
mov
pop
out
lods
dec
gs
mov
pop
out
mov
add
jmp
lock
loope
shl
enter
loope
sahf
leave
cld
pop
mov
mov
bound
mov
sub
out
jno
adc
dec
dec
mov
call
jge
retf
inc
fdivr
dec
data16
pop
xchg
jne
dec
outs
jge
pop
xchg
push
mov
jmp
imul
mov
add
ins
aam
lods
arpl
ret
mov
les
(bad)
jmp
mov
pushf
arpl
(bad)
jmp
mov
mov
sti
(bad)
jmp
push
or
stos
mov
ins
dec
imul
mov
call
popf
fmul
inc
adc
pop
xchg
jne
inc
push
jge
pop
xchg
jne
inc
fidivr
xchg
jne
inc
out
pop
pop
xchg
jne
inc
out
jl
pop
xchg
mov
pop
out
or
push
loop
lods
je
pop
out
scas
(bad)
call
xor
jmp
pop
out
or
in
ret
jl
pop
xchg
push
mov
inc
jno
(bad)
jo
push
out
or
push
xchg
dec
add
jmp
add
add
dec
les
popf
dec
xchg
jl
push
xchg
jne
dec
call
xchg
inc
shr
dec
cwde
push
daa
test
pop
out
packsswb
enter
cld
adc
(bad)
rcr
out
test
push
pop
out
sub
xchg
dec
in
shr
lock
jmp
inc
sbb
int
cmp
push
dec
rcr
jle
jns
(bad)
out
sub
cmp
xchg
mov
push
out
or
fs
push
jmp
out
or
loope
nop
xor
call
icebp
or
pop
out
mov
icebp
push
loop
out
cwde
stos
in
bound
jnp
push
xchg
mov
push
out
cld
dec
arpl
add
lods
jl
pop
out
not
loope
and
notrack
pop
icebp
xlat
pop
pop
out
call
inc
fidivr
pop
xchg
mov
pop
out
int3
cmp
ins
mov
adc
ins
cwde
ins
xor
lods
pusha
add
jmp
nop
sbb
push
pop
icebp
fwait
into
push
out
leave
mov
adc
push
out
call
sub
pop
fwait
rcr
dec
clc
push
sub
out
pop
dec
sbb
cld
add
sbb
push
pop
sbb
sbb
jmp
out
in
lods
pop
fs
mov
dec
cmp
ins
xchg
inc
push
in
rcl
test
add
add
pop
out
mov
sbb
cld
adc
sbb
cld
inc
xchg
sti
add
ins
pushf
or
popa
sti
push
out
ins
aam
jp
sti
(bad)
out
ins
mov
push
out
ins
pushf
cmp
arpl
inc
out
pop
push
outs
jmp
call
cld
pop
push
(bad)
jns
bound
mov
out
(bad)
and
out
sbb
add
cld
loop
lods
and
out
(bad)
aam
jmp
out
inc
pop
icebp
fs
push
out
sbb
fwait
loopne
push
or
sbb
clc
sub
icebp
scas
(bad)
pop
out
nop
lock
loope
nop
lock
jmp
jo
out
bound
xchg
fistp
lea
inc
xchg
jp
add
add
pop
xchg
mov
pusha
out
cmp
(bad)
sti
(bad)
call
(bad)
sti
(bad)
jmp
sbb
call
call
(bad)
sti
loop
xchg
inc
in
mov
add
cdq
gs
pop
out
int3
mov
xchg
inc
xchg
add
add
cdq
gs
push
xchg
mov
pop
out
or
(bad)
sti
bound
inc
xchg
add
add
dec
xchg
mov
pop
out
cmp
pusha
sti
inc
inc
xchg
inc
movs
add
add
sbb
(bad)
cld
dec
popa
sti
add
jne
inc
ret
pop
xchg
jne
inc
retf
pop
xchg
mov
pop
out
lods
dec
popa
sti
shr
lods
adc
pop
out
fwait
aad
call
xor
push
pop
icebp
mov
call
pop
out
pop
xchg
in
add
jns
pop
xchg
jne
dec
jle
dec
pop
xchg
mov
pop
out
sub
pusha
sti
and
lods
adc
pop
out
pop
fsub
push
jbe
bound
jg
pop
out
cwde
sub
fwait
loopne
outs
bound
aad
sbb
dec
push
in
add
jns
pop
fisttp
movs
sbb
sbb
cmp
push
pop
out
adc
icebp
inc
cmp
out
fisub
add
pop
add
xchg
gs
pop
in
add
lods
xor
pop
out
mov
loope
jmpw
mov
ins
bound
adc
sub
xchg
jne
inc
loop
ds
fisttp
fnstcw
mulps
cmp
adc
call
adc
inc
pop
icebp
jecxz
pop
out
push
movs
test
movs
addr16
xchg
jecxz
add
pop
out
inc
jmp
adc
pop
out
xchg
(bad)
loope
cmps
jmp
or
push
nop
pop
adc
sbb
add
mov
pop
out
or
data16
push
cmp
js
pop
xchg
mov
pop
out
cmp
data16
inc
adc
dec
stc
gs
bound
lods
adc
pop
out
iret
(bad)
loope
push
or
bound
outs
lea
lea
add
add
in
add
js
pop
xchg
mov
pop
out
cld
movs
pusha
sti
loop
ins
nop
lods
lods
pusha
sti
rcl
lods
xor
pop
out
sbb
loope
ror
mov
adc
loope
lock
bound
xor
inc
out
pop
mov
inc
push
ss
pop
xchg
mov
pop
out
cld
and
repz
clc
jge
add
add
jge
cmp
pusha
out
cmp
outs
sti
bound
xchg
inc
and
jge
test
jmp
sub
call
ins
retf
arpl
mov
cld
call
push
fdivrp
gs
cmp
call
stc
adc
push
arpl
mov
into
enter
test
add
or
add
(bad)
out
bound
ins
nop
cld
loopne
sti
bound
inc
gs
add
test
add
inc
out
test
in
push
ins
push
dec
(bad)
fisttp
aad
sbb
sub
jmp
arpl
call
stc
sub
add
add
pop
dec
cmp
test
xchg
test
add
or
test
mul
lods
dec
push
popa
out
ud1
call
(bad)
nop
ins
jae
sti
adc
lods
xor
popa
out
mov
mov
jmp
jo
adc
bound
adc
in
in
inc
imul
ds
xchg
mov
add
add
aas
ins
sti
bound
lods
dec
bound
jmp
and
pop
inc
(bad)
out
dec
cmps
adc
popa
popa
out
dec
mul
add
out
pop
cmp
enter
cld
ret
xlat
sbb
out
fsub
in
bound
test
xchg
mov
ds
cld
sub
add
add
icebp
lods
dec
bound
out
jae
loope
jo
int3
jmp
nop
mov
loope
nop
mov
loope
push
mov
loope
jo
push
jmp
icebp
adc
out
jns
adc
add
nop
inc
loop
out
(bad)
sahf
loope
cmps
fs
jmp
loopne
inc
inc
ds
in
cmp
lea
ins
sub
aas
xchg
mov
ds
ins
jne
sti
adc
ins
aam
lods
outs
sti
add
ins
pushf
or
outs
sti
push
icebp
ins
mov
(bad)
push
ins
sti
push
icebp
pop
dec
inc
aas
out
jbe
jecxz
outs
xchg
cld
pop
pusha
add
jmp
xchg
mov
add
jmp
cmp
sbb
cld
loop
pop
sar
out
dec
add
push
jmp
cmp
lea
leave
in
ret
jne
cmp
jne
aas
xchg
jne
imul
jne
aas
xchg
jne
push
xchg
test
ds
cld
jae
sti
bound
push
and
or
inc
push
aas
out
pop
(bad)
inc
jae
call
lea
mov
test
xchg
or
imul
or
mov
pushf
imul
or
pusha
loop
out
inc
mov
jmp
mov
jmp
lock
imul
add
icebp
aas
fdivr
out
fadd
leave
sbb
jne
cmp
cmp
add
cmp
push
leave
lea
dec
cmp
cmp
add
xor
cmp
sbb
popf
stc
jmp
jmp
adc
inc
add
add
ds
adc
out
sbb
jmp
addr16
je
cmp
out
mov
or
ret
cmp
jecxz
loopne
in
bound
icebp
jge
cmp
(bad)
fcom
call
ins
push
or
xchg
mov
ss
or
jb
push
or
cld
fdiv
bound
ins
cwde
sub
jno
push
or
add
add
jmp
outs
xchg
cld
pop
pusha
add
(bad)
bound
xchg
mov
out
cmps
dec
idiv
in
xchg
dec
std
jb
call
or
ins
xor
ins
dec
je
ss
mov
aaa
out
int3
shr
lods
pusha
push
aaa
out
bswap
loope
shl
imul
bound
icebp
das
cdq
cmp
lea
cmp
(bad)
call
cmp
lea
ins
test
mov
ss
cmp
ins
sti
inc
or
jmp
jo
jmp
icebp
nop
push
cmp
lea
in
add
jae
cmp
(bad)
cld
sbb
loop
pop
(bad)
xor
sbb
out
mov
lea
ins
stos
jae
cmp
mov
inc
in
(bad)
(bad)
mov
add
cmp
(bad)
inc
lods
or
cmp
jmp
push
pop
push
and
add
mov
jecxz
inc
outs
shr
inc
xlat
jmp
add
sbb
ins
inc
cmp
cmc
fstp
push
cmp
lea
lock
out
sbb
in
loop
inc
jae
cmp
(bad)
mov
add
jmp
loopne
enter
loope
rol
lods
jmp
mov
cmp
les
out
test
in
push
imul
dec
cmp
jmp
imul
jmp
fld
call
icebp
sti
xlat
xor
lea
in
bound
or
cmp
dec
push
lock
out
scas
lods
loope
adc
sbb
mov
ss
or
in
ret
jb
cmp
(bad)
mov
or
jmp
sahf
xchg
cld
pop
mov
mov
mov
dec
mul
aas
cmp
adc
dec
dec
jae
call
jge
ret
fdiv
mov
out
ins
push
cdq
sti
bound
sbb
sti
add
ins
test
push
loop
lods
push
das
mov
call
mov
jmp
loopne
int3
jmp
lock
loop
loopne
jne
bound
icebp
aaa
out
out
sub
in
adc
jb
das
xchg
push
mov
cs
sahf
or
bound
sub
sub
cli
std
fisubr
cs
test
in
bound
jno
das
xchg
mov
cs
ins
xor
bound
ins
mov
imul
add
jmp
and
into
std
loop
dec
call
(bad)
or
mov
or
ret
sub
jmp
loopne
lods
jmp
rcl
jmp
mov
push
das
icebp
lahf
aam
out
mov
xchg
jno
das
xchg
mov
cs
cmp
imul
pusha
cs
shr
enter
loope
push
add
std
adc
icebp
imul
inc
add
add
push
xchg
mov
sub
addr16
mov
cs
pop
scas
loope
lock
(bad)
bound
out
mov
in
bound
jno
sub
out
cld
cmps
addr16
add
lods
inc
bound
loope
jo
sub
bound
out
fdiv
lock
cmp
add
add
lea
fidiv
sub
out
ins
inc
outs
sti
(bad)
sti
ins
mov
pop
outs
sti
add
lods
and
cs
imul
sub
loop
icebp
xlat
and
push
call
fidiv
sub
out
(bad)
pop
sbb
jmp
add
arpl
out
into
clc
jns
adc
icebp
stos
xchg
inc
out
mov
xor
lahf
aad
out
mov
xor
xchg
mov
xor
(bad)
cmp
ins
sti
inc
rcl
in
add
pop
rcr
enter
cld
(bad)
adc
out
pop
and
cld
rol
pop
mov
add
add
call
or
shr
icebp
test
inc
out
test
mov
jo
das
xchg
mov
add
jmp
sti
bound
lods
or
out
mov
mov
pop
nop
mov
stos
jmp
shr
mov
xchg
loopne
sbb
das
cmps
sbb
leave
sbb
cdq
push
jmp
add
add
icebp
mov
inc
out
pop
xchg
in
adc
out
xor
sub
jl
inc
out
pop
aad
je
inc
out
sub
icebp
iret
inc
inc
out
dec
sbb
(bad)
push
inc
out
test
in
push
sub
xchg
jne
sub
xchg
inc
ins
sub
xchg
jne
sub
xchg
mov
xor
(bad)
cld
fdiv
(bad)
xor
jmp
nop
clc
jno
inc
xor
xor
in
bound
outs
pop
xor
outs
push
xor
dec
jne
loop
sbb
cld
aas
gs
loop
ins
aam
cwde
jne
mov
xor
jmp
out
or
bound
fwait
loopne
sbb
mov
jmp
xchg
jne
sub
outs
push
xor
(bad)
call
ds
cwde
mov
push
outs
pop
xor
inc
loope
(bad)
sub
xor
xor
xor
call
sbb
sub
scas
adc
xchg
inc
fld
sbb
xchg
sbb
mov
(bad)
outs
fidiv
fisttp
inc
ds
or
mov
jne
sub
jne
sub
xchg
jne
sub
xchg
jne
sub
outs
(bad)
ds
mov
ds
cld
fdiv
(bad)
retf
push
and
add
add
retf
jns
inc
aas
sub
dec
or
push
or
retf
out
leave
pop
sbb
cld
adc
cdq
loopne
and
pop
sbb
pop
push
icebp
pop
push
cmp
lea
es
push
xor
out
pop
push
icebp
dec
repz
(bad)
call
cmp
(bad)
fadd
icebp
cmp
cmp
add
add
(bad)
call
cmp
lea
cmp
(bad)
call
cmp
(bad)
fdivr
lock
cmp
lea
cmp
(bad)
fdivr
lock
cmp
(bad)
call
cmp
(bad)
fadd
out
call
cmp
lea
cmp
lea
icebp
jecxz
cmp
lea
add
add
icebp
fist
out
sub
out
pop
add
out
call
cmp
(bad)
fadd
mov
call
cmp
lea
cmp
(bad)
call
cmp
(bad)
fdivr
lock
sar
out
test
icebp
xchg
mov
out
fdivr
lock
cmp
(bad)
call
add
xor
icebp
jnp
cmp
(bad)
call
cmp
lea
cmp
mov
adc
and
aam
call
inc
sbb
mov
std
gs
sub
icebp
xor
lea
daa
es
pop
cmp
out
cld
push
sti
add
push
and
retf
push
or
retf
push
cmp
mov
(bad)
leave
dec
clc
out
neg
cmp
mov
dec
lds
cmp
jp
(bad)
retf
lods
lock
loope
and
imul
xchg
cmp
lea
lock
addr16
loop
shr
xchg
mov
ds
mov
retf
lods
inc
bound
out
xchg
stos
loope
lock
bound
icebp
mov
cmp
lea
in
add
xchg
jne
sub
ins
dec
aaa
xchg
mov
aaa
out
sub
jns
and
lods
inc
push
aaa
out
pop
test
cmp
jg
cmp
lea
add
add
jb
pop
ss
jne
sub
xchg
mov
aaa
out
or
je
ror
push
and
leave
xchg
fsub
ss
nop
call
jb
call
(bad)
inc
sbb
mov
test
test
jne
inc
out
cwde
adc
sub
cmp
(bad)
call
cmp
(bad)
fcomp
lock
cmp
lea
cmp
mov
dec
xchg
mov
ss
es
test
out
imul
cld
(bad)
retf
sbb
es
sbb
call
leave
ins
mov
sbb
loop
xchg
inc
mov
mov
add
cdq
gs
xchg
jne
and
add
mov
xor
andnps
jecxz
pop
mov
mov
(bad)
cmp
mov
mov
xchg
mov
cmp
jmp
or
loop
cmp
mov
cmp
mov
inc
shr
shl
test
jae
xor
lock
add
add
lea
xor
jmp
sub
imul
xchg
mov
cmp
jmp
lods
dec
sar
out
pop
movs
loope
lock
jge
bound
icebp
aas
ds
in
bound
xor
cmp
(bad)
cld
push
sti
add
push
and
iret
xchg
and
cmp
mov
ins
shr
mov
jmp
add
sub
inc
cmp
outs
dec
cmp
jmp
sti
(bad)
iret
xchg
in
cmp
jmp
xor
or
loop
icebp
sub
ss
lock
in
loop
cmp
cmp
outs
into
cmp
dec
dec
je
push
int
cmp
out
sub
add
add
call
mov
jmp
nop
lock
inc
aas
icebp
mov
cwde
jge
jmp
xchg
aas
xchg
push
stc
dec
xchg
inc
loope
(bad)
out
sub
ds
dec
push
jb
call
sbb
and
xchg
dec
jmp
ds
push
mov
retf
dec
int3
xchg
or
cmps
pop
cmp
mov
mov
enter
shl
retf
push
and
leave
push
or
mov
xor
aas
cmps
adc
rcr
icebp
in
push
mov
test
add
sbb
xchg
loope
(bad)
pop
mov
jmp
push
leave
sbb
dec
jnp
add
add
push
leave
lods
push
bound
out
imul
call
cmp
jmp
cmp
lea
jne
jmp
and
xchg
mov
cmp
jmp
push
and
retf
fmulp
adc
ret
enter
cld
push
retf
dec
cld
push
or
push
(bad)
cmp
mov
cld
cs
add
ins
pushf
or
jo
(bad)
int
mov
(bad)
int
js
aas
out
xchg
inc
icebp
xchg
cmp
(bad)
call
cmp
mov
dec
xchg
mov
cmp
idiv
outs
cmp
enter
cld
shl
movs
jecxz
sub
in
cmp
lea
adc
dec
cmp
out
sub
pop
dec
xchg
dec
xchg
jb
call
lea
inc
push
daa
ins
test
cmp
cmp
cmp
xchg
inc
adc
dec
int3
push
or
push
cmp
mov
sub
mov
push
retf
ins
aam
inc
jno
inc
leave
push
and
retf
pop
mov
xor
cmp
add
jns
sbb
aad
jmp
jmp
adc
call
xchg
cld
pop
adc
adc
dec
jmp
enter
cld
ret
cld
es
not
add
out
aad
sbb
cld
(bad)
aas
out
or
jl
cmc
jl
test
jg
add
mov
add
add
call
sbb
cmp
outs
sti
inc
icebp
lods
pop
inc
aas
out
push
xchg
loope
pop
test
adc
dec
movs
in
bound
call
push
mov
xor
adc
cmps
mov
mov
jmp
jmp
fisubr
adc
das
into
sub
int
(bad)
cld
push
repz
cld
push
test
sbb
cld
add
lods
je
aas
out
mov
loope
mov
xchg
loope
nop
leave
sub
and
icebp
bsr
out
mov
loop
ds
xchg
mov
ds
cmp
aas
sti
(bad)
or
ins
mov
add
lods
call
mov
loope
lock
icebp
sar
add
mov
sub
lea
xchg
xchg
mov
dec
test
add
mov
add
enter
cld
bound
out
in
cmp
mov
pop
fwait
loopne
xchg
pop
or
test
cmp
mov
(bad)
out
pusha
js
jmp
pop
push
push
test
push
push
jmp
mov
call
test
out
loope
push
(bad)
pop
adc
adc
outs
sbb
enter
cld
sar
out
cdq
sti
inc
out
sub
dec
dec
std
out
dec
sbb
inc
cmp
out
test
in
push
jmp
addr16
inc
xchg
mov
inc
out
ins
xor
add
add
sti
adc
lods
nop
add
jmp
nop
mov
(bad)
push
inc
icebp
sbb
out
push
jmp
addr16
inc
xchg
mov
inc
out
dec
xchg
lods
push
inc
out
dec
push
call
jno
bound
out
mov
out
dec
and
add
shl
xchg
mov
inc
out
cld
pop
cmp
loop
lods
sbb
inc
out
mov
(bad)
cld
pop
lock
out
sahf
out
push
xor
call
into
retf
in
or
jmp
jmp
nop
js
jmp
jo
int3
jmp
mov
cld
pop
pusha
ret
adc
lahf
mov
enter
cld
bound
out
mov
pop
gs
bound
mov
add
jmp
jmp
or
jmp
(bad)
adc
lods
pop
jno
rcl
xchg
enter
jmp
sar
jmp
fimul
notrack
call
sbb
cmp
inc
inc
xchg
lea
add
add
jmp
(bad)
cld
outs
sti
bound
test
loop
push
imul
out
push
mov
lock
mov
or
jmp
call
sbb
jmp
repz
mov
cld
out
cld
pop
cmp
mov
cld
out
mov
adc
add
add
int3
dec
cmp
pushf
mov
or
out
bound
call
mov
in
bound
(bad)
call
sahf
(bad)
in
dec
out
cli
lea
jmp
jmp
jo
int3
jmp
pusha
mov
(bad)
(bad)
(bad)
lock
stc
out
push
(bad)
adc
mov
lea
lods
jne
ror
jmp
adc
lock
mov
sbb
lea
add
bound
push
and
or
sahf
or
std
add
sub
or
or
push
dec
mul
cld
out
xchg
in
add
movs
cwde
inc
std
out
std
shl
pusha
mov
(bad)
(bad)
std
lock
clc
out
sub
out
adc
stc
fs
(bad)
xchg
mov
std
out
or
inc
sti
ror
pop
and
std
out
mov
adc
add
mov
jecxz
test
in
(bad)
jmp
fimul
mov
jmp
mov
pop
not
cld
lods
inc
sti
add
lods
inc
arpl
out
jae
loope
jo
cmp
xchg
mov
and
lea
out
inc
or
xor
neg
clc
cmps
dec
idiv
cmp
sbb
or
mov
add
add
cld
fdivr
loop
movs
and
out
or
jo
jmp
lock
(bad)
(bad)
div
aas
dec
sti
out
mov
out
(bad)
in
xor
xchg
mov
mul
(bad)
cld
sub
sti
add
lods
inc
arpl
out
repz
loope
jo
dec
(bad)
(bad)
div
adc
mov
adc
add
not
cmp
jp
bound
xchg
and
mul
jmp
and
into
std
add
lock
clc
out
adc
in
shl
xor
sti
xchg
lea
out
lods
call
ret
sti
out
xchg
out
enter
mov
in
bound
(bad)
call
sahf
mov
add
add
xor
out
mov
sti
movs
mov
mov
adc
mov
call
fs
nop
shl
push
push
loope
pop
sar
pop
push
mov
sub
std
mov
fld1
pop
test
movs
aaa
stc
out
pop
mov
pop
xchg
out
sub
push
ss
out
pop
adc
dec
inc
cmc
out
call
cmc
out
fadd
cmp
out
sub
sub
mov
cli
out
or
jnp
(bad)
jmp
out
pop
loope
nop
cmps
cmp
and
lock
lea
jmp
bound
stc
xchg
push
or
add
add
xor
cli
movs
inc
cld
ja
jmp
adc
jmp
lock
jmp
adc
jmp
adc
jmp
out
(bad)
cld
pop
loopne
adc
pop
add
enter
cld
bound
out
in
inc
cli
out
cwde
jmp
mov
add
mov
add
lock
and
lods
sub
out
out
pop
arpl
call
or
arpl
out
inc
test
add
stc
(bad)
(bad)
out
in
pop
popa
in
add
jne
(bad)
out
fimul
rol
mov
add
out
out
into
or
jmp
add
loope
xchg
or
jmp
shl
jmp
mov
arpl
jmp
add
(bad)
push
out
xchg
mov
dec
mul
out
out
sub
retf
mov
inc
or
jmp
jo
cmp
repz
cli
out
cwde
movs
lock
add
add
icebp
jecxz
clc
out
pop
push
icebp
fild
in
mov
jmp
mov
in
out
int3
inc
jns
(bad)
std
lods
or
out
out
(bad)
pop
loope
shl
scas
test
out
dec
mov
inc
jmp
xchg
mov
out
out
cld
sbb
(bad)
std
lods
inc
and
out
arpl
call
cld
pop
jo
imul
int
out
push
dec
test
stc
out
xchg
mov
call
cmp
out
mov
cmp
out
lods
or
mov
out
out
pop
pop
loope
out
mov
(bad)
(bad)
in
call
sbb
cmp
jmp
xchg
mov
out
out
cld
es
add
mov
jmp
(bad)
cld
mov
(bad)
sti
lods
and
jmp
pusha
mov
lock
mov
out
test
in
push
out
pusha
dec
in
xchg
lea
cs
sti
adc
push
and
cld
push
or
or
(bad)
loop
sub
std
sbb
add
add
cld
inc
mul
or
out
(bad)
add
lods
dec
(bad)
out
out
xchg
pop
loope
lock
jmp
ror
outs
call
out
lock
loop
(bad)
fcom
icebp
fisttp
sub
(bad)
out
xchg
mov
out
out
out
cmc
ficomp
out
lahf
icebp
sub
dec
pop
xchg
cld
bound
out
mov
call
jecxz
lea
jecxz
lea
in
loop
ds
into
out
xchg
push
mov
mov
je
out
out
popf
adc
xchg
dec
mov
mov
dec
adc
xchg
jne
adc
xchg
jne
adc
ss
(bad)
out
xchg
push
mov
mov
lods
push
div
data16
loop
mov
icebp
sub
cmp
cmps
(bad)
jge
inc
and
(bad)
fsubr
out
call
jecxz
mov
push
lea
xchg
dec
push
cmp
call
push
outs
in
fisttp
xchg
rep
adc
mov
add
jne
jmp
repz
inc
loopne
(bad)
fcom
mov
call
fsubp
lea
fsubp
mov
sbb
(bad)
xlat
adc
out
icebp
out
iret
icebp
sub
cmp
sahf
jne
cwde
test
lds
mov
out
xchg
or
add
add
jo
repnz
jne
or
pop
push
repz
jne
or
pop
(bad)
repnz
jne
or
xchg
jne
or
xchg
jne
or
xchg
jne
or
pop
mov
or
pop
dec
icebp
xchg
jne
or
pop
pop
icebp
xchg
jne
or
pop
push
icebp
xchg
jne
or
pop
(bad)
lock
jne
or
pop
dec
icebp
xchg
jne
or
pop
pop
icebp
xchg
jne
or
pop
dec
icebp
xchg
jne
or
pop
ds
xchg
jne
or
pop
dec
icebp
xchg
jne
or
pop
pop
icebp
xchg
jne
or
pop
push
repnz
jne
or
pop
(bad)
icebp
xchg
jne
or
pop
into
icebp
xchg
jne
or
pop
fdivp
xchg
jne
or
pop
into
icebp
xchg
jne
or
add
add
dec
fist
pop
fist
push
fist
(bad)
ficom
dec
fist
pop
fist
dec
fist
fist
dec
ficom
pop
ficom
push
fist
cmp
ficom
into
ficom
inc
jmp
jmp
icebp
loope
add
add
movs
mov
add
ins
xor
lods
push
add
out
mov
imul
pop
nop
rcl
push
call
(bad)
call
jge
hlt
inc
aad
pop
popf
push
fist
add
sub
xchg
dec
dec
push
and
(bad)
mov
call
icebp
in
dec
push
icebp
xlat
sbb
ret
push
aad
pop
loopne
adc
pop
mov
enter
cld
bound
out
std
add
out
call
add
add
movs
lock
test
out
mov
in
bound
cmc
pusha
dec
fist
sub
inc
sti
and
inc
sti
inc
lods
ins
mov
bound
push
or
cmps
push
jmp
sub
ins
inc
pop
cld
adc
out
test
and
jecxz
ror
mov
loop
xchg
mov
(bad)
jmp
lods
inc
rcr
jmp
shl
cmp
out
sub
jmp
cs
push
fst
or
inc
sti
bound
out
out
mov
cmp
cmpxchg
out
mov
in
inc
pop
loop
fst
rcr
out
cmp
dec
sti
bound
out
add
stc
std
add
lock
(bad)
lea
dec
in
loop
(bad)
pop
(bad)
xchg
mov
fucom
(bad)
mov
stos
lods
mov
fucom
jmp
loopne
xor
mov
(bad)
lea
pop
jecxz
adc
xchg
mov
fadd
add
add
dec
lods
pusha
pusha
xlat
out
mov
and
push
xlat
lock
and
jmp
pop
pop
dec
(bad)
xchg
mov
fsub
jmp
sti
bound
out
jg
loope
xor
lock
xor
out
or
jmp
or
pop
(bad)
xchg
mov
(bad)
inc
add
add
lods
cwde
pusha
xlat
out
adc
loope
lock
std
(bad)
xlat
lock
push
inc
or
xchg
mov
xlat
out
cld
js
sti
bound
out
pop
ret
pusha
mov
inc
lock
mov
dec
in
push
or
xchg
mov
fsub
jmp
add
add
adc
out
sti
mov
call
mov
std
rcr
lock
fsub
(bad)
call
add
xchg
mov
(bad)
dec
inc
inc
sti
bound
out
(bad)
mov
call
cwde
mov
(bad)
fcomi
scas
out
(bad)
out
dec
es
add
xchg
mov
loope
(bad)
cld
cld
inc
sti
bound
out
arpl
imul
sahf
(bad)
out
cwde
cmc
in
bound
pop
pop
ficom
cld
nop
inc
sti
add
out
ja
loope
and
lock
jle
out
call
or
pop
into
ficom
int3
les
push
scas
lods
shl
out
stos
mov
call
xchg
xor
sub
(bad)
out
test
jecxz
bound
(bad)
pop
dec
fst
sub
inc
sti
and
out
fbstp
std
(bad)
f2xm1
jmp
dec
in
bound
repnz
pop
fst
cld
or
add
add
jecxz
out
mov
loope
lock
int
loop
lock
out
sbb
inc
or
pop
mov
(bad)
(bad)
mov
lods
lods
cwde
pusha
(bad)
jmp
mov
fcomip
cmps
(bad)
out
test
jecxz
push
add
xchg
mov
fsub
jmp
lods
mov
fild
add
add
jmp
push
mov
(bad)
push
fdivp
jnp
(bad)
lea
dec
in
bound
pop
push
fist
or
inc
sti
loop
lods
jl
fsubp
jmp
adc
lock
das
(bad)
lea
pop
jecxz
ret
pop
mov
(bad)
(bad)
mov
test
out
ret
mov
mov
add
lock
(bad)
lea
add
xchg
mov
(bad)
(bad)
cmp
inc
sti
inc
test
out
xlat
mov
jmp
adc
inc
add
out
push
push
in
adc
and
fcom
or
inc
sti
shr
out
retf
mov
add
add
call
mov
std
rcr
lock
sub
out
test
in
bound
sahf
pop
dec
fist
ins
xchg
inc
sti
bound
out
aas
mov
add
(bad)
fcomip
lahf
lods
(bad)
lea
or
mov
fsubp
(bad)
cmp
inc
sti
inc
lods
lods
shl
out
shl
add
jo
sbb
jae
(bad)
lea
ret
add
lods
pop
(bad)
ficom
cld
mov
lods
jl
fsubp
jmp
loopne
test
ret
inc
sbb
out
test
jecxz
push
pop
sub
fst
ins
das
inc
sti
adc
out
mov
xchg
adc
sbb
in
and
push
pop
dec
fst
dec
and
bound
out
dec
mov
xor
out
ins
(bad)
lea
jecxz
add
ret
fst
cld
aaa
inc
sti
loop
lods
pusha
mov
mov
call
xchg
and
ret
ret
sbb
xchg
in
bound
cmps
pop
pop
fist
cld
mov
sti
add
lods
rol
(bad)
jmp
mov
fcomip
xchg
jge
out
push
aad
pop
dec
fist
dec
std
inc
sti
push
adc
jmp
push
enter
fild
add
add
imul
lea
pop
jecxz
loop
cmp
mov
loope
jmp
lods
or
fsubp
jmp
lock
fcomip
aas
sub
icebp
in
(bad)
aad
pop
pop
fist
cld
adc
sti
add
lods
mov
(bad)
jmp
sahf
push
pop
nop
cld
or
and
xchg
mov
loopne
call
not
add
adc
(bad)
call
sbb
aam
xchg
adc
xchg
lea
and
sti
loop
xchg
mov
jecxz
jmp
adc
jmp
add
lea
cdq
in
ret
pop
mov
loope
(bad)
mov
add
bound
xchg
pop
(bad)
pusha
loope
nop
shl
add
lock
aad
jmp
test
jecxz
lea
loopne
sti
inc
adc
jmp
pusha
mov
lock
(bad)
out
push
aad
call
in
mov
mov
add
dec
add
rcl
lods
xchg
loopne
out
dec
pop
loope
adc
into
std
shl
lock
das
std
out
test
in
(bad)
jmp
push
dec
loope
mov
add
jmp
sti
bound
xchg
rcl
loope
jmp
mov
mov
(bad)
lock
mov
cwde
in
(bad)
jmp
push
pop
loope
lea
pop
inc
sti
inc
sldt
add
lods
mov
loope
jmp
jo
xchg
std
(bad)
lock
out
and
in
add
sub
(bad)
loope
mov
add
(bad)
cld
fisttp
loop
lods
mov
loope
jmp
loopne
mov
ret
(bad)
dec
(bad)
out
test
in
push
jmp
xchg
test
out
(bad)
in
pop
adc
inc
add
add
jmp
(bad)
nop
mov
lock
stos
cli
out
mov
cli
std
and
call
sbb
js
in
(bad)
loopne
mov
loopne
(bad)
cmp
dec
sti
bound
lea
out
cld
mov
xchg
rol
jmp
jmp
and
lock
dec
sti
out
call
add
call
in
pop
push
into
(bad)
xchg
(bad)
(bad)
dec
cmovno
push
icebp
lods
mov
jmp
jmp
sar
lock
cli
out
mov
in
(bad)
in
je
dec
call
sub
aas
sti
and
xchg
add
jmp
jmp
jo
int
(bad)
push
dec
lods
cli
out
jo
in
(bad)
in
push
in
pop
call
cld
in
dec
sti
add
lods
mov
sti
out
mov
loope
lock
xchg
std
loop
lock
mul
lea
lock
mul
lea
jmp
xchg
lea
cmp
bound
out
aas
push
loope
mov
int
(bad)
push
lahf
mov
add
lea
in
(bad)
jmp
xchg
mov
cld
out
cmp
dec
sti
inc
or
out
rcl
push
mov
(bad)
(bad)
lock
out
pop
and
jne
(bad)
(bad)
xchg
push
mov
or
xor
in
mov
dec
shl
(bad)
call
std
(bad)
inc
push
out
xchg
push
std
xchg
jne
call
xchg
jne
out
push
push
std
xchg
push
mov
or
es
imul
loope
mov
sub
mov
and
push
int3
cmp
inc
sti
inc
or
in
or
outs
retf
sbb
std
movs
add
ret
sbb
test
mov
lock
sub
leave
push
into
std
xchg
mov
mov
push
sti
ror
lods
and
(bad)
out
fwait
push
loope
shl
lock
fadd
cmps
jmp
mov
add
mov
jmp
lods
loopne
mul
jmp
push
or
arpl
out
inc
test
add
sbb
lea
in
gs
pop
neg
mov
cmps
call
add
add
mov
lods
loopne
mul
jmp
(bad)
or
adc
out
lds
sbb
(bad)
mov
out
lea
in
xor
fimul
add
xor
mov
mov
push
sti
bound
lods
aam
mul
jmp
pusha
mov
mov
leave
cli
out
test
movs
call
jmp
mov
mov
jmp
sti
adc
lods
loopne
cld
out
sti
dec
loope
adc
lock
add
add
clc
out
call
in
push
into
sti
xchg
mov
mov
dec
sti
bound
lods
and
dec
loope
ror
mov
scas
div
out
dec
jle
inc
in
adc
mov
(bad)
cld
jecxz
sti
bound
xchg
add
out
cs
loope
nop
enter
sti
lock
out
cwde
sbb
gs
pop
cli
xchg
mov
mov
(bad)
cld
pusha
dec
sti
add
lods
add
out
ja
loope
and
fnstsw
inc
cmc
out
call
in
pop
push
into
cli
xchg
lea
out
int3
or
jmp
stos
dec
loope
sar
std
mov
jmp
out
test
movs
jmp
std
push
dec
stc
xchg
mov
scas
out
sub
dec
sti
and
lods
and
dec
loope
jo
fnstsw
mov
out
mov
push
pop
stc
xchg
mov
mov
inc
sti
add
lods
add
cli
out
mov
loope
lock
sar
inc
mul
(bad)
loopne
movs
inc
jmp
push
mov
mov
dec
sti
(bad)
std
xchg
add
out
out
bound
jmp
out
lock
enter
nop
jge
call
lock
dec
out
xchg
mov
lods
out
sub
inc
sti
push
or
fisttp
pop
or
or
enter
cld
bound
push
cld
cmps
inc
test
add
add
out
out
dec
pop
sbb
cld
add
ins
mov
ror
ins
aam
push
dec
sti
loop
lods
dec
mov
push
loope
adc
jmp
shl
lock
sti
out
call
cli
out
stc
and
(bad)
out
xchg
mov
out
out
es
imul
stc
out
icebp
push
sbb
cld
and
sbb
sti
inc
or
dec
or
cmp
dec
sti
bound
push
cwde
ins
ror
or
popf
or
mov
popa
in
loop
(bad)
call
es
sbb
lods
and
sar
out
or
jecxz
push
jmp
xchg
mov
in
out
ins
mov
sti
adc
lods
js
out
out
cmp
call
out
lock
mov
out
push
jmp
xchg
mov
in
out
dec
xchg
dec
sti
(bad)
cld
lods
xchg
push
out
out
iret
dec
loope
dec
les
outs
je
out
dec
inc
jecxz
add
inc
push
(bad)
out
xchg
mov
cld
(bad)
dec
jmp
cld
lods
xchg
mov
dec
loope
adc
lock
stc
out
call
out
rcr
xchg
mov
in
out
cld
lock
add
pop
cld
(bad)
in
out
pop
std
loop
mov
in
lock
js
call
sbb
add
add
xchg
mov
jmp
dec
sti
push
sti
pop
cld
dec
in
out
cmp
loop
push
stos
lods
std
adc
lock
xor
ja
jmp
out
push
into
in
xchg
mov
jmp
jmp
movs
mov
in
out
mov
gs
(bad)
out
lock
mov
mov
pop
out
xchg
lea
test
pusha
out
out
dec
call
out
call
jle
cmp
inc
xchg
mov
icebp
out
cmp
dec
sti
bound
xchg
test
fst
movaps
jmp
out
out
adc
lock
xor
add
add
mov
lock
xor
xchg
inc
hlt
and
out
xchg
mov
lock
mov
add
jmp
nop
add
std
add
lock
add
lea
cmc
cmp
pop
out
xchg
(bad)
aad
out
cmp
dec
sti
inc
add
jmp
pusha
add
add
add
inc
push
add
lea
in
adc
and
hlt
xchg
test
in
push
sub
fdivrp
movs
or
fdivp
out
adc
lock
push
add
ret
out
stc
lods
sti
(bad)
call
test
cmp
loop
(bad)
jmp
mov
icebp
out
cld
lods
push
sti
add
lea
add
add
icebp
out
cld
out
inc
sti
bound
out
xchg
loope
pusha
mov
lock
jno
call
rcl
repnz
lea
mov
sti
adc
out
jnp
loope
adc
lock
xor
out
call
in
dec
dec
into
repnz
mov
inc
add
add
dec
enter
(bad)
lods
xchg
push
icebp
out
xadd
call
mov
std
(bad)
lock
loop
out
dec
sub
inc
jmp
dec
(bad)
lock
mov
add
(bad)
cld
sbb
bound
out
jecxz
loope
nop
mov
cld
inc
icebp
lock
add
jmp
in
pop
icebp
xchg
lea
add
add
cmp
sti
add
out
mov
loope
push
or
loopne
sbb
sbb
ret
mov
(bad)
out
int3
inc
push
sti
push
inc
xchg
test
in
push
fst
fdivrp
and
jmp
fbstp
push
lahf
jecxz
out
jo
into
cld
(bad)
inc
add
add
loopne
cli
out
cwde
jno
inc
xchg
dec
notrack
cmp
push
sti
bound
lods
in
popa
(bad)
out
out
loope
and
lock
out
sub
jmp
(bad)
xchg
mov
cli
out
lods
push
push
sti
rol
lods
inc
sar
jmp
shr
lock
add
add
sti
out
sub
sub
mov
lock
or
push
sti
bound
xchg
inc
push
jmp
jmp
nop
test
lock
out
nop
pop
jecxz
inc
in
dec
push
notrack
cmp
inc
sti
bound
xchg
cld
pop
jmp
jmp
adc
lock
cld
out
sub
mov
add
clc
out
add
lods
pusha
sar
jmp
cmps
xchg
jmp
and
push
add
xchg
movs
push
sti
out
cmp
call
push
fwait
mov
out
nop
mov
cld
and
lock
mov
test
add
inc
jmp
xchg
mov
repnz
cmp
push
sti
bound
jmp
adc
lock
out
sbb
loop
loop
inc
dec
fdivrp
xchg
mov
std
out
mov
mov
rcl
(bad)
fiadd
sti
(bad)
std
cld
call
psubusw
fdivrp
and
add
std
out
add
out
test
jmp
dec
dec
std
fimul
and
fiadd
in
adc
add
sti
(bad)
std
out
push
std
xchg
mov
icebp
out
ins
repz
sti
bound
(bad)
cmc
cli
out
cld
xor
sti
add
jmp
lock
cld
loop
lock
add
add
out
sbb
jmp
dec
mov
sti
out
mov
lea
daa
dec
loope
mov
div
cmps
icebp
cli
out
leave
and
lea
mov
xor
(bad)
je
neg
clc
es
cmc
shr
add
mov
cmp
xchg
cld
bound
push
sti
adc
push
sti
add
out
ds
loope
lock
jmp
mov
jb
jmp
out
shr
mov
popa
test
lock
adc
iret
jbe
jmp
(bad)
call
dec
(bad)
fild
in
cmp
ins
clc
out
cld
jae
sti
bound
out
retf
call
push
loope
push
jno
jmp
jo
jmp
lock
adc
out
cwde
movs
cmc
dec
mov
out
(bad)
mov
mov
mov
loop
lock
mul
mov
mov
loopne
or
andnps
sbb
loopne
in
(bad)
in
fmul
sti
fimul
adc
mov
mov
sti
out
or
push
sti
push
xchg
lods
adc
out
mov
call
sti
lock
shl
(bad)
in
pop
dec
dec
cli
out
xchg
in
jae
cli
inc
ret
bound
call
ins
cmp
out
or
push
sti
rcl
out
test
adc
lock
push
cmc
out
call
add
pop
cmps
nop
lods
adc
out
stos
inc
loope
shl
lock
mul
lea
jmp
dec
dec
stc
out
xchg
in
imul
inc
ret
nop
mov
add
add
or
jl
jmp
fisttp
stc
xchg
mov
cli
out
ins
test
std
inc
imul
sub
out
loop
mov
mov
cli
out
lods
xlat
dec
sti
mov
stc
out
lahf
inc
loope
ret
call
sub
out
xchg
jmp
popa
inc
bound
call
in
inc
out
movs
in
jae
inc
mov
push
xchg
iret
cli
out
push
in
dec
dec
jmp
jne
in
jb
inc
pusha
mov
jmp
lock
cld
out
sub
in
adc
jns
push
jmp
jne
out
jb
inc
push
rol
add
mov
add
sbb
push
popa
mov
loopne
gs
(bad)
lock
das
sti
out
out
shl
sbb
(bad)
popa
mov
shl
lock
cli
out
add
call
lods
inc
xchg
mov
(bad)
out
sub
push
sti
and
out
fild
inc
test
mov
in
lods
inc
xchg
mov
(bad)
out
ins
icebp
push
sti
bound
out
inc
inc
jb
call
sub
xchg
mov
cld
out
lods
rcl
mov
sti
out
lahf
inc
loope
ret
call
sub
xchg
lea
out
ins
adc
lea
es
add
add
push
push
clc
xor
out
jo
jecxz
(bad)
jmp
xchg
(bad)
int
out
cmp
pop
sti
inc
lea
push
dec
loope
jo
jmp
lock
cmp
lea
ret
add
lods
dec
(bad)
(bad)
xchg
lea
out
cld
mov
sti
loop
xchg
js
(bad)
out
out
fsubp
inc
add
add
mov
ret
mov
rol
in
push
out
dec
dec
std
xchg
(bad)
(bad)
out
ins
mov
sti
adc
out
sbb
jmp
sbb
jns
stc
out
push
mov
retf
call
std
lock
inc
stc
out
pusha
inc
in
(bad)
out
dec
pop
std
xchg
(bad)
(bad)
out
cld
inc
(bad)
mov
(bad)
out
sbb
cld
pop
lock
xchg
jecxz
mov
jo
(bad)
fimul
xor
jmp
jmp
ror
cmps
jmp
mov
ss
mov
xor
clc
xor
add
jo
out
bound
xchg
(bad)
loope
out
cmp
push
sti
inc
icebp
xchg
cwde
arpl
out
push
xor
push
movs
(bad)
(bad)
(bad)
lock
test
lea
cs
add
xchg
mov
jmp
(bad)
cld
and
loop
xchg
je
(bad)
out
add
jecxz
ror
jle
std
or
xchg
(bad)
jmp
add
(bad)
mov
icebp
xchg
push
(bad)
jmp
jmp
mov
push
and
lea
xchg
jo
dec
call
sub
(bad)
sti
push
icebp
xchg
mov
mov
icebp
test
push
push
push
inc
and
push
or
jmp
and
push
add
lea
add
add
push
sti
loop
xchg
push
rol
out
xchg
arpl
call
adc
mov
and
adc
out
ret
fidivr
add
(bad)
mov
adc
jmp
nop
adc
add
icebp
lock
jle
lea
ins
call
mov
add
(bad)
cmp
pop
sti
inc
adc
jmp
pusha
cmp
jmp
icebp
ja
jle
lea
cli
out
adc
inc
push
add
dec
lods
in
add
jmp
adc
jb
rol
icebp
cwde
pop
jge
(bad)
lock
jmp
sbb
add
jmp
sti
bound
lods
in
add
jmp
mov
jb
bound
icebp
ins
fistp
lea
out
bound
fstp
xchg
mov
add
(bad)
cmp
sbb
push
bound
out
push
retf
jo
sbb
bound
icebp
repz
lea
out
add
inc
xchg
mov
add
(bad)
cld
pop
sbb
loop
lods
in
add
jmp
loopne
jb
ret
adc
jle
(bad)
rcl
out
push
imul
ins
xor
lods
je
jg
jmp
nop
cmp
(bad)
push
jg
fstp
lea
ins
les
jg
lea
pusha
leave
sti
bound
xchg
je
add
add
out
sbb
loop
push
adc
bound
enter
lea
cli
out
add
dec
(bad)
jle
lea
xor
sti
loop
xchg
or
jle
jmp
ret
call
sbb
xchg
mov
jg
(bad)
mov
adc
jmp
add
mov
cdq
in
jmp
mov
jg
(bad)
cld
pushf
push
sti
bound
lods
je
jg
jmp
nop
cmp
inc
jg
add
data16
bound
inc
pop
jg
jne
push
outs
adc
adc
sbb
add
pop
js
lea
cmc
out
loop
lds
jnp
mov
jl
(bad)
mov
add
add
adc
jmp
push
cmc
mov
ins
out
jmp
mov
jle
(bad)
cld
sub
sti
add
out
aaa
(bad)
mov
jg
xchg
fdivr
lea
jecxz
push
imul
ins
popa
jle
ret
pusha
xor
jmp
lock
jp
lea
push
add
add
call
imul
mov
out
or
push
sti
sar
mov
ss
loop
fimul
shr
dec
into
jle
(bad)
jmp
or
push
or
jmp
shl
sbb
adc
sub
jp
lea
addr16
dec
jge
mov
jge
inc
add
add
sbb
and
lods
push
push
jge
jmp
jo
jb
bound
dec
popf
jp
lea
addr16
inc
pop
jge
lea
out
cld
mov
sti
add
jmp
lock
loop
lock
jns
(bad)
loopne
in
ret
fstp
jl
(bad)
mov
add
sti
bound
out
bound
dec
inc
ja
add
out
cwde
pop
jecxz
push
ins
or
lea
pop
push
sti
push
or
jmp
push
or
aam
jnp
lea
out
bound
push
ja
lea
out
or
sar
add
add
or
jmp
adc
jb
mov
jnp
lea
(bad)
and
xchg
push
mov
nop
xchg
arpl
xor
ja
dec
add
jmp
inc
and
ja
(bad)
int
out
sub
push
sti
push
or
add
add
jmp
push
xor
(bad)
push
ja
sti
cmps
jp
lea
mov
jmp
in
inc
push
jl
mov
jp
dec
pop
sti
loop
lods
push
sar
jmp
adc
push
(bad)
mov
js
lea
cmc
in
ret
inc
mov
jnp
(bad)
mov
pop
lods
adc
out
inc
mov
sbb
add
mov
nop
std
jecxz
bound
inc
bound
(bad)
icebp
jp
(bad)
cmp
sbb
inc
add
jmp
pusha
js
jmp
lock
pop
mov
call
(bad)
mov
add
outs
out
rol
xchg
nop
loopne
out
test
add
add
call
add
jmp
lock
std
bound
cwde
lods
jbe
(bad)
lock
jecxz
bound
fstp
xchg
(bad)
stc
jo
(bad)
cld
icebp
sbb
add
xchg
nop
pusha
jns
jmp
jo
push
std
bound
pusha
(bad)
lea
in
inc
imul
jns
(bad)
leave
jo
(bad)
cmp
sbb
(bad)
call
push
pop
loop
and
push
std
add
xor
jbe
lea
mov
xor
jns
lea
out
lods
cwde
push
sti
sar
xchg
cmp
jns
jmp
sar
push
std
push
outs
lock
jbe
(bad)
shl
in
push
outs
xchg
mov
jns
dec
pop
sti
bound
lods
adc
out
outs
ret
loop
nop
xor
std
and
(bad)
cmps
jp
lea
gs
xchg
lea
mov
lods
cmp
out
add
call
xor
std
add
arpl
out
and
jecxz
loop
jl
fisubr
lea
sbb
mov
add
add
outs
out
rol
loop
loopne
(bad)
std
bound
test
repnz
adc
inc
push
outs
xchg
push
mov
ins
out
sahf
or
cld
bound
enter
cld
and
sahf
or
enter
push
push
outs
movs
aam
xor
call
jo
jp
bound
inc
sbb
lea
jecxz
add
inc
(bad)
imul
pop
pop
sti
loop
xchg
lods
fild
jmp
loopne
jp
ret
adc
js
lea
imul
jmp
sti
adc
xchg
lods
movq
jmp
nop
cld
jns
push
outs
lock
push
add
add
imul
dec
sti
(bad)
cld
xchg
lods
dec
outs
out
sbb
loop
push
cld
jns
bound
mov
dec
jmp
inc
inc
(bad)
outs
xchg
mov
js
(bad)
cld
fcomp
loop
xchg
lods
fild
jmp
adc
jns
ret
nop
sbb
lea
add
add
and
mov
jp
(bad)
cld
call
jmp
jb
loop
mov
ins
lock
lea
jecxz
push
sbb
ins
xchg
mov
jp
dec
sti
push
sti
xchg
lods
dec
ins
out
push
xor
call
jns
adc
cmp
out
sub
jecxz
loop
mov
add
ins
xchg
mov
js
jmp
xchg
lods
iret
ins
out
push
jecxz
lock
jns
bound
or
jp
lea
push
mov
pop
outs
xchg
mov
fs
cld
adc
sti
add
xchg
lods
jmp
jmp
jo
jp
bound
loopne
(bad)
out
cwde
loope
inc
xchg
inc
outs
xchg
mov
fs
cmp
sbb
lods
pop
outs
out
and
jp
add
mov
arpl
lea
loop
call
push
dec
inc
into
outs
xchg
mov
arpl
jmp
xchg
lods
iret
outs
out
push
mov
jp
push
outs
lock
arpl
lea
shl
jmp
sub
mov
add
add
out
or
pop
sti
bound
xchg
lods
dec
outs
out
jp
loop
nop
add
and
pop
cmps
(bad)
out
mov
jecxz
inc
push
loope
outs
xchg
mov
fs
cmp
es
bound
xchg
lods
pop
outs
out
into
enter
add
add
push
pusha
out
sbb
jecxz
loop
lds
fidiv
mov
pop
out
mov
add
jmp
loopne
jp
bound
add
pop
out
sub
jecxz
adc
aas
push
jae
mov
pusha
out
or
daa
sti
push
jno
lods
dec
jae
jmp
nop
jo
cli
push
jae
fsub
popa
(bad)
bound
dec
jb
lea
add
add
sti
bound
ins
(bad)
out
dec
(bad)
loop
xor
(bad)
loop
lock
addr16
out
lock
jmp
dec
mov
mov
jae
(bad)
mov
jo
ins
arpl
jmp
lock
xor
in
loop
add
inc
(bad)
jo
lea
int
add
add
bound
test
jno
jmp
pusha
aaa
jp
inc
jno
pop
add
lea
dec
jmp
(bad)
int
out
ins
mov
sti
adc
mov
jb
jmp
adc
mov
shl
(bad)
into
jecxz
mov
jno
mov
pop
out
int3
inc
and
bound
or
out
pop
(bad)
rol
call
pop
out
dec
push
in
add
ds
pop
xchg
mov
pop
out
cld
cld
and
bound
lods
and
pop
out
arpl
push
sti
inc
pop
lock
loopne
bound
pop
pop
xchg
mov
pop
out
cld
loopne
sti
add
lods
ins
add
jmp
and
add
loop
lock
mov
out
loop
ror
into
pop
xchg
(bad)
icebp
pop
out
int3
outs
pop
sti
push
add
jmp
shr
jp
adc
sub
pop
out
test
loope
bound
cmp
sbb
loopne
sti
and
xchg
mov
add
add
out
stos
(bad)
sub
(bad)
bound
call
pop
out
mov
jecxz
bound
cmp
leave
pop
out
cld
dec
and
add
xchg
or
pop
out
mov
add
and
lea
xchg
out
ret
cmp
jno
out
mov
ins
lods
and
pop
out
daa
popf
loope
mov
pop
lock
aad
out
nop
add
call
lock
dec
pop
xchg
mov
pop
out
sub
and
adc
out
pop
pushf
loope
push
xor
sti
push
pop
lock
pop
out
push
in
loop
bound
inc
push
pop
xchg
lea
pop
out
or
push
sti
loop
lods
push
rcr
jmp
das
fwait
loope
adc
lock
nop
pop
out
or
and
pop
pop
out
mov
imul
(bad)
nop
xor
cli
add
and
pop
out
mov
inc
cmp
pop
pop
xchg
lea
mov
lods
rol
jmp
add
loope
pusha
xor
sti
bound
mul
ins
(bad)
adc
inc
push
pop
xchg
(bad)
in
pop
out
or
pop
sti
shr
xor
pop
out
retf
call
rcr
retf
sbb
jmp
popf
cmp
push
xchg
mov
pop
out
ins
xor
sti
bound
loopne
push
out
aas
call
mov
out
bound
lahf
adc
mov
xchg
cmp
push
xchg
mov
pop
out
cmp
sub
inc
imul
jo
cs
bound
jae
pop
out
pop
and
jne
(bad)
push
xchg
mov
pop
out
cld
mov
lods
fsub
push
out
inc
mov
jle
ret
inc
sbb
call
sub
push
xchg
mov
(bad)
out
ins
mov
sti
adc
adc
push
out
mov
xor
sbb
pop
out
push
dec
or
mov
pop
out
dec
and
push
push
out
dec
fwait
loope
push
xor
std
bound
out
into
pop
out
dec
imul
cmp
pop
xchg
mov
pop
out
cld
xor
lods
ins
mov
xchg
loope
adc
(bad)
std
ret
ret
jle
out
cwde
ins
jmp
cmp
xchg
mov
pop
out
cld
adc
sti
add
cld
(bad)
pop
out
aaa
xchg
loope
mov
pop
lock
push
push
out
push
dec
cdq
cmp
xchg
mov
push
out
dec
add
lods
push
popa
pop
out
jmp
loope
push
sbb
cld
adc
imul
out
sub
in
loop
cmp
mov
pusha
out
lods
mov
lods
cld
rcr
jmp
lock
bound
aas
push
push
out
mov
jecxz
bound
cmp
xchg
mov
pop
out
cld
mov
sti
add
jl
pop
out
repz
loope
jo
mov
bound
adc
push
out
cwde
in
inc
adc
mov
push
out
cmp
pop
sti
bound
in
pop
pop
out
addr16
loope
and
ds
add
out
push
out
sub
loopne
ror
cmp
pop
xchg
mov
push
out
lods
push
pop
sti
shr
ins
iret
pop
out
fwait
xchg
loope
bound
cmc
sbb
out
push
imul
nop
push
lock
mov
inc
mov
mov
pop
out
cmp
pop
sti
inc
imul
pusha
xor
sti
bound
ja
pop
out
push
imul
cmp
in
pop
out
or
and
cld
jecxz
out
dec
cwde
loope
adc
add
rcr
dec
(bad)
pop
out
test
loope
bound
cmp
xchg
test
bound
psubusw
sbb
and
pop
out
mov
add
bound
pop
cvtdq2ps
ret
jo
xchg
bound
adc
pop
out
cwde
xchg
inc
adc
mov
pop
out
cmp
and
bound
lods
pop
pop
out
addr16
loope
and
xchg
add
mov
test
call
inc
leave
cmp
pop
xchg
mov
add
add
pop
out
lods
dec
and
shr
ins
ret
pop
out
xchg
(bad)
cli
push
pop
lock
sub
loopne
bound
cmp
pop
xchg
mov
pop
out
or
and
bound
and
pop
out
cli
cdq
loope
nop
ins
adc
fcom
pop
out
nop
imul
cmp
pop
xchg
mov
pop
out
cmp
and
bound
pop
pop
out
dec
cdq
loope
adc
cli
add
mov
pop
out
and
jl
ficomp
lea
pop
out
mov
ins
xchg
enter
jmp
loopne
mov
test
push
pop
iret
push
pop
xchg
test
pop
out
or
outs
sti
push
imul
cdq
loope
nop
adc
or
out
jo
(bad)
bound
cmp
pop
xchg
mov
pop
out
ins
push
and
ins
divps
jmp
xor
sti
loop
lock
dec
(bad)
loop
sar
ficomp
mov
pop
out
mov
add
ins
mov
fwait
loope
lock
mov
inc
out
pop
ss
add
cmp
pop
xchg
(bad)
loope
out
cld
push
and
bound
xchg
mov
pop
out
inc
and
pop
clc
push
cli
inc
pop
call
jle
or
xchg
mov
inc
out
ins
int3
and
add
cmp
call
pop
loope
sbb
(bad)
movs
sti
jl
iret
pop
out
adc
(bad)
cli
mov
inc
out
fdivrp
push
cli
ret
loopne
(bad)
pop
adc
sbb
bound
mov
inc
out
cld
mov
sti
add
xchg
test
inc
out
xchg
pop
or
jmp
pop
out
nop
or
cli
push
pop
lock
or
cli
bound
call
inc
out
jo
(bad)
bound
cmp
xchg
lea
aas
out
cld
jp
sti
add
xchg
enter
jmp
lock
push
sti
loop
lock
aas
out
sbb
aad
mov
inc
out
mov
add
add
lods
mov
out
daa
jnp
jmp
arpl
cmps
sub
out
test
(bad)
push
ins
mov
dec
arpl
sub
pop
sti
push
adc
jmp
push
clc
cdq
cli
push
(bad)
lock
ds
push
dec
jecxz
bound
push
arpl
or
ins
sti
loop
xchg
ins
iret
(bad)
out
cmp
call
adc
mov
cmp
(bad)
ret
cmp
cmp
sub
pusha
pop
popa
out
ret
jp
call
popa
lock
cmp
loopne
bound
aaa
pop
popa
xchg
mov
aas
out
cmp
sub
cwde
ds
out
xlat
js
jmp
add
bound
imul
mov
call
ins
stc
ss
bound
or
sub
ror
xchg
lods
iret
popa
out
jbe
loope
adc
xchg
(bad)
shl
sbb
push
loopne
bound
cmp
xchg
lea
test
sti
(bad)
aas
out
aas
js
push
aas
lock
or
out
jo
in
bound
cmp
xchg
lea
out
cmp
and
inc
icebp
xchg
enter
jmp
jo
aad
bound
lock
inc
ins
jne
(bad)
ds
lea
out
cld
sub
sti
loop
lods
lods
fistp
out
inc
je
jmp
clc
jns
ret
inc
sub
out
test
loope
push
ins
sub
dec
aas
xchg
(bad)
int
out
ins
mov
xchg
mov
aas
out
out
loope
nop
icebp
aad
push
aas
lock
nop
dec
(bad)
and
cmp
xchg
mov
cmp
dec
sti
(bad)
aas
out
dec
jns
add
add
call
aad
bound
lock
fdivr
out
adc
sub
(bad)
cmp
cld
cmps
pop
sti
loop
xchg
or
cmp
jmp
adc
cdq
cli
ret
adc
lea
imul
(bad)
cld
aaa
and
and
or
inc
(bad)
ds
lahf
(bad)
bound
call
xchg
inc
sbb
cmp
(bad)
ins
or
cmp
lea
push
xchg
jne
push
xchg
mov
ds
or
sub
ror
jmp
adc
jge
sar
lock
mov
out
lock
add
add
jmp
xchg
cmp
xchg
mov
cmp
sub
bound
lods
cmp
cmp
loope
mov
test
mov
loope
mov
cmp
out
nop
js
call
inc
cmp
xchg
dec
test
cmp
xchg
inc
icebp
or
xor
ds
dec
or
sbb
(bad)
cmp
push
xchg
jne
push
xchg
push
mov
push
lock
cmc
adc
out
inc
mov
add
sbb
sti
adc
push
and
or
scas
retf
in
xor
neg
movs
cwde
icebp
rcr
std
mov
dec
add
or
sbb
dec
xchg
dec
cld
(bad)
std
add
(bad)
xor
mov
xchg
ret
out
jns
adc
in
shr
and
jmp
ins
jg
loope
out
mov
ins
call
ret
ret
out
adc
or
ret
sbb
mov
add
add
lods
or
xchg
cmp
mov
cmp
mov
lea
xor
aaa
xchg
push
stc
test
lock
inc
cmc
pop
mov
mov
add
cld
push
or
cmp
inc
cld
bound
push
and
or
push
(bad)
stc
xor
ins
cs
add
call
add
jmp
or
mov
sub
mov
cld
jne
sbb
out
fmul
mov
mov
call
cmp
ins
div
cmp
jne
cmp
fistp
ret
pop
adc
or
popa
sub
dec
mov
push
cmc
icebp
push
fwait
jge
mov
call
gs
mov
push
push
and
call
push
enter
gs
loope
movs
push
xchg
ret
cmc
scas
jmp
or
mov
sub
mov
cld
mov
jne
cmp
call
ins
jmp
add
inc
pop
push
add
push
or
(bad)
cmc
xor
jp
and
movs
fsub
rcr
shr
add
push
mov
sub
cmp
cld
sub
xor
ja
lea
xchg
dec
or
adc
dec
ins
or
cmp
jne
add
add
ins
lock
sbb
out
add
loopne
sbb
ins
add
div
in
xchg
cmp
mov
mov
xchg
dec
std
jb
call
popf
mov
inc
adc
das
xchg
dec
sub
xor
stc
mov
rcl
dec
cmc
(bad)
jmp
out
popf
int3
sbb
cld
push
imul
or
daa
sti
loop
push
and
or
push
int3
mov
pop
mov
jb
call
std
pop
or
gs
jno
das
xchg
push
jns
xchg
inc
push
or
cmps
inc
cmc
jle
cmp
mov
or
push
aam
fsub
sti
bound
push
and
or
mov
int
sbb
das
movs
and
adc
call
pop
shr
inc
jge
test
sbb
(bad)
push
retf
retf
call
pop
push
and
or
push
retf
cmc
xor
push
movs
push
xchg
fsubrp
jne
jmp
or
ret
das
imul
add
add
enter
cld
(bad)
clc
mov
cmc
in
out
stc
mov
xchg
dec
or
sbb
dec
push
xchg
dec
push
imul
push
stc
mov
xchg
es
cmc
into
lods
cmp
mov
ins
push
outs
cld
(bad)
cld
push
(bad)
cld
mov
and
add
add
enter
gs
loope
xchg
dec
loope
shr
hlt
sbb
dec
addr16
jo
cs
dec
popf
push
xchg
dec
mov
sub
xchg
inc
and
push
mov
fdivr
out
popf
rcr
add
or
cld
(bad)
sti
push
nop
sub
xor
and
push
enter
add
add
sti
inc
sti
push
lods
dec
adc
sti
bound
push
and
cli
push
or
retf
lea
pop
popa
sub
fsubrp
mov
jmp
jmp
and
call
mov
loope
fisub
add
adc
sbb
bound
jmp
ss
popa
das
xchg
dec
movs
xor
xor
das
xchg
dec
mov
cs
dec
lea
xor
xchg
dec
dec
xor
xchg
push
or
xchg
inc
adc
inc
das
out
sub
movs
pusha
jmp
fucomip
call
(bad)
push
call
sbb
or
mov
sub
std
and
loop
mov
jle
xchg
xor
lea
jmp
sbb
lock
inc
out
cmp
xchg
mov
cs
cmps
xchg
cmc
jle
xor
mov
inc
sub
or
push
cs
shl
out
ror
pusha
out
out
mov
adc
inc
add
add
xor
outs
popa
das
xchg
inc
int
mov
push
xor
push
mov
push
dec
fsub
inc
out
fxch
sbb
lods
retf
jbe
mov
inc
ss
ret
and
add
out
push
cmps
xor
xor
call
mov
jecxz
push
add
jmp
lock
ds
test
adc
fisubr
cmp
dec
cld
push
std
lea
fwait
test
mov
sbb
lock
out
imul
shr
inc
or
dec
sub
jne
sub
into
xor
sbb
les
sti
push
dec
ins
or
cmp
dec
mov
sub
sub
cmp
call
xor
mov
mov
adc
call
sub
cs
(bad)
in
sbb
push
jbe
dec
adc
jmp
xor
cld
movs
sbb
scas
mov
adc
add
push
and
push
push
or
or
xor
aas
movs
jo
vpsubsb
jmp
jmp
scas
test
sbb
lahf
ret
cmp
mov
int
mov
add
sbb
aas
xchg
jne
add
inc
dec
ins
or
ins
jmp
pop
test
sbb
aas
xchg
jne
add
sbb
ja
loope
push
rcl
xchg
sub
xchg
jne
add
sbb
sbb
out
test
sub
add
jmp
and
inc
gs
xchg
push
mov
dec
dec
in
es
outs
mov
xlat
sbb
sub
jne
and
push
sar
sub
inc
dec
push
and
add
outs
or
push
popa
aas
movs
and
loopne
jmp
ret
retf
jmp
adc
add
adc
sbb
std
push
dec
sbb
out
adc
out
dec
xchg
lock
nop
cmp
(bad)
call
cmp
mov
movs
adc
xor
adc
out
ins
cs
(bad)
fucomp
inc
loop
dec
jmp
call
add
nop
mov
sbb
dec
xchg
dec
cld
push
std
std
sbb
cmp
(bad)
call
cmp
lea
cmp
lea
lock
cmp
mov
movs
adc
or
adc
dec
daa
pop
ins
popa
cmp
out
sub
dec
gs
call
nop
adc
dec
add
daa
cmp
lock
adc
out
test
adc
dec
sbb
xchg
jne
daa
jmp
push
mov
dec
dec
mov
push
xlat
sbb
or
je
ror
mov
loop
push
nop
lods
mov
push
and
dec
push
or
dec
push
jmp
sub
mov
push
dec
clc
cmps
(bad)
cmc
add
fcomp
add
sub
add
or
aad
sti
push
dec
push
and
dec
push
or
or
xor
(bad)
push
push
aaa
movs
lock
rcr
sub
adc
or
sbb
lahf
sub
enter
cld
(bad)
std
pop
sbb
out
lods
jle
out
dec
push
lea
xchg
dec
mov
shr
cmp
jmp
sub
xchg
inc
pop
sub
xchg
push
jns
xchg
inc
popa
dec
dec
fcom
xchg
xchg
loop
add
cmps
jb
add
or
mov
add
add
fdivr
sti
bound
and
dec
push
or
or
xor
aaa
movs
cmp
mov
jmp
dec
sub
out
cld
inc
xchg
push
leave
lds
cmps
(bad)
cmc
xor
out
jge
sbb
cld
xlat
jb
loop
push
and
dec
push
or
push
div
popf
sub
push
sar
les
test
(bad)
faddp
adc
dec
adc
or
sub
dec
cld
(bad)
imul
sbb
jge
fnstsw
out
test
out
sub
cmp
es
push
and
dec
push
or
pop
ret
rcl
cmp
call
push
adc
add
add
or
rcr
outs
sub
enter
cld
shl
mov
cdq
das
inc
out
push
int3
lock
mov
push
xchg
dec
mov
shr
loopne
jmp
sub
popa
cmp
push
cmp
inc
adc
nop
push
mov
push
cmp
mov
sub
jo
push
cmp
loope
cld
inc
sbb
(bad)
call
cmp
pop
es
push
and
dec
push
in
dec
push
div
(bad)
and
cmp
call
shl
jmp
sub
aam
cmp
inc
jno
dec
lock
push
ss
out
std
fadd
add
add
add
cld
bound
or
call
push
and
dec
push
or
or
xor
repnz
popa
aas
movs
fadd
pop
fsubrp
dec
movs
jmp
dec
and
out
pushf
inc
xchg
push
or
xchg
inc
icebp
dec
dec
in
test
ret
out
rcr
sbb
cld
jmp
or
xor
ror
and
dec
push
or
or
xor
and
movs
push
in
movs
jmp
jmp
lock
jmp
sar
jecxz
sahf
push
add
mov
sbb
std
lods
inc
cld
(bad)
cli
mov
fstp
push
lods
cmp
mov
leave
xchg
dec
cmp
add
add
call
(bad)
(bad)
std
inc
in
pop
imul
out
cld
sbb
add
sbb
cmp
jmp
push
adc
sbb
mov
adc
(bad)
fimul
out
lods
sub
push
popa
aas
movs
mov
popa
test
dec
add
jmp
sahf
adc
or
add
add
cdq
sub
or
mul
and
jge
fldcw
vdivps
mov
xchg
dec
xor
call
lea
inc
aad
stos
push
popf
sub
push
add
inc
ret
adc
or
rcr
pop
sub
enter
cld
loop
cmp
add
add
xchg
cmp
xor
jne
and
inc
pop
cmps
dec
push
and
dec
push
or
or
xor
cmp
fsubrp
lea
add
mov
and
dec
cld
and
stc
and
cmp
lea
cmp
lea
cmp
mov
add
add
adc
pop
jb
call
cs
xor
es
sar
fsubrp
mov
or
jmp
adc
jmp
ror
call
lock
cmp
lea
and
loopne
lock
and
leave
fst
mov
add
add
out
push
aaa
cmc
out
inc
out
iret
inc
sub
cmp
inc
ins
and
inc
out
mov
and
adc
lock
lock
jo
lock
and
pusha
inc
lock
and
push
inc
lock
jecxz
out
cmp
adc
dec
aad
aad
add
jmp
inc
gs
pop
addr16
aas
xchg
dec
jge
nop
mov
mov
repz
aam
ss
outs
mov
out
dec
fcomp
add
ds
and
push
mov
inc
icebp
push
mov
(bad)
xor
cwde
add
aas
fimul
addr16
xchg
mov
dec
cmc
cs
test
add
push
and
adc
fmulp
shl
ins
or
inc
movs
pushf
xchg
fucomp
popa
jmp
mov
loop
mov
jmp
jmp
(bad)
sbb
std
ins
push
cld
bound
and
rol
add
add
inc
out
rcl
loopne
jle
lea
jge
lea
jle
mov
test
xchg
dec
sbb
shr
(bad)
cmp
imul
leave
ins
mov
dec
cmc
ins
jl
into
inc
xchg
dec
add
inc
xchg
lea
or
sti
bound
xchg
push
mov
(bad)
jmp
nop
cvtps2pd
push
inc
lock
leave
test
xchg
mov
dec
cmc
push
mov
out
scas
inc
sub
cmp
cmp
and
test
xor
pusha
or
inc
inc
jle
lea
icebp
cmp
jle
lea
lock
add
add
jle
lea
lock
jge
lea
push
lock
out
dec
cmps
adc
call
nop
jo
jg
xor
jg
sub
(bad)
fucomp
jno
jmp
jmp
sahf
fld
or
sbb
sub
ds
and
mov
jmp
add
add
call
add
jo
sbb
ins
inc
push
cld
adc
xchg
and
js
out
xchg
daa
loop
push
fiadd
or
ret
sbb
lods
and
movs
and
cmp
call
fimul
mov
inc
jno
add
dec
cld
adc
fisubr
sti
sbb
or
jmp
mov
out
push
jmp
sbb
push
dec
icebp
inc
cld
(bad)
fstp
push
cmp
jmp
ja
out
out
lds
xor
push
std
lds
loop
fisubr
neg
add
add
sti
ret
in
sbb
out
cmps
call
lock
jp
push
std
xchg
dec
cld
add
fisubr
rcr
or
out
adc
fld
out
push
out
(bad)
in
test
inc
out
push
out
xor
cdq
test
out
inc
out
es
fnstsw
xor
add
add
mov
push
(bad)
ffree
lea
add
(bad)
js
sbb
and
jl
sbb
popf
cld
sbb
push
(bad)
imul
leave
fucom
psrlw
jmp
outs
add
inc
sub
jge
dec
add
fucom
mov
jmp
pop
repz
fucom
stos
iret
jmp
add
add
xor
fucom
(bad)
jmp
jle
(bad)
fucom
rcl
jmp
pop
fucom
(bad)
shr
(bad)
cld
inc
jne
jae
fucom
jnp
jmp
mov
ret
fucom
outs
shr
jmp
jne
rol
fucom
mov
inc
outs
add
jo
gs
ret
mov
jmp
loop
ret
mov
inc
outs
add
out
inc
adc
ja
add
pop
push
cld
(bad)
fstp
lea
add
test
rol
cmp
jp
jbe
pop
loope
ffree
adc
repz
sbb
loope
popa
repnz
sub
mov
popa
rcr
xchg
add
jle
mov
jb
pop
mov
inc
shr
mov
mov
jle
sbb
push
in
loope
cmps
enter
mov
cmp
(bad)
adc
imul
gs
out
fld
fisttp
in
adc
add
mov
imul
mov
jmp
or
fucom
jnp
jmp
add
ins
bound
jnp
add
push
pop
cld
loop
pop
shr
popf
add
lock
mov
or
inc
push
add
mov
jnp
mov
xchg
mov
add
add
mov
pushf
mov
sbb
lods
jge
mov
in
cdq
and
adc
jge
repz
pop
dec
jbe
cld
bound
mov
mov
xchg
in
lock
out
out
adc
dec
ins
jo
push
std
inc
push
cld
loop
fidivr
mov
in
lock
pop
cmps
in
lock
pop
push
imul
jns
push
out
mov
or
fcmovu
push
mov
ins
ret
jns
ret
mov
jge
into
mov
shl
add
add
out
out
jmp
popf
jnp
test
dec
pop
outs
out
arpl
dec
mov
or
fcomp
push
and
inc
xchg
imul
jns
ret
cmp
adc
lea
jbe
pop
xchg
shl
out
lods
loop
add
push
jmp
sbb
std
mov
ficom
add
add
push
jne
and
outs
inc
ret
retf
jmp
imul
jge
sbb
jnp
pop
push
in
(bad)
xor
lock
jmp
cmp
xor
mov
out
(bad)
(bad)
outs
add
cmps
dec
jl
fucom
lods
mov
dec
push
call
sbb
int
aaa
sti
(bad)
int3
ficom
xor
std
jo
push
push
and
inc
ret
sti
jmp
imul
lock
jp
pop
les
jg
cmps
mov
jns
loop
mov
dec
push
out
mov
dec
adc
sti
push
int3
fisubr
out
mov
ins
shl
add
inc
dec
push
jmp
mov
or
into
fucompp
ds
jecxz
lods
stc
nop
sti
mov
neg
out
retf
jmp
push
jmp
mov
mov
int3
ficom
jge
add
inc
and
outs
inc
ret
retf
out
imul
lock
jns
add
add
pop
push
les
mov
repz
frstor
dec
push
jmp
ins
mov
sti
(bad)
retf
ficom
xor
xchg
inc
xchg
push
inc
ret
cmp
(bad)
cs
pop
xor
je
out
cmps
ret
outs
add
jg
fadd
fucom
leave
mov
dec
push
add
add
sbb
ins
inc
cmp
adc
ficom
jge
add
gs
adc
ins
inc
ret
stos
out
imul
lock
es
outs
add
and
jne
loop
ret
inc
dec
push
jmp
sbb
std
in
cmp
add
ficom
jg
add
xlat
fs
movs
addr16
into
ins
inc
ret
sar
dec
push
jmp
sbb
mov
int3
ficom
jg
add
addr16
and
inc
ret
mov
fisubr
xor
fstp
cmp
fisubr
lds
jge
sti
sti
arpl
ret
retf
adc
imul
jge
sbb
add
add
arpl
pop
push
int
adc
fucom
mov
loop
cld
cmp
out
jge
les
cmps
loop
(bad)
xchg
jae
(bad)
outs
mov
call
sbb
jb
xchg
xchg
jns
shr
cwde
ds
enter
add
inc
gs
popf
inc
popa
outs
sahf
add
or
jp
and
outs
(bad)
adc
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
add
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
fistp
call
popf
(bad)
inc
popf
(bad)
and
popf
(bad)
rcr
dec
pushf
(bad)
dec
popf
(bad)
pop
popf
(bad)
cdq
pushf
(bad)
inc
popf
(bad)
xchg
pushf
(bad)
mov
pushf
(bad)
test
sahf
(bad)
neg
(bad)
dec
popf
(bad)
pop
pushf
(bad)
aaa
pushf
(bad)
movs
sbb
push
popf
(bad)
xchg
sbb
retf
popf
(bad)
movs
sbb
jge
(bad)
popa
pushf
(bad)
add
mov
(bad)
mov
(bad)
imul
push
mov
(bad)
cmp
(bad)
addr16
push
mov
push
mov
jmp
(bad)
jae
(bad)
xor
add
(bad)
arpl
dec
mov
inc
mov
jmp
sbb
call
sbb
(bad)
(bad)
(bad)
dec
mov
(bad)
jns
(bad)
pop
mov
call
mov
inc
(bad)
jmp
mov
jmp
mov
jmp
(bad)
test
(bad)
cdq
mov
(bad)
std
mov
inc
mov
dec
mov
call
mov
dec
(bad)
and
mov
push
mov
push
mov
jmp
mov
jmp
scas
(bad)
jmp
scas
(bad)
cmp
(bad)
and
mov
jmp
scas
(bad)
shr
call
mov
jmp
(bad)
int
(bad)
lahf
rcr
lahf
rcr
pop
(bad)
cmp
(bad)
test
rcr
icebp
rcr
mov
rcr
add
(bad)
sub
rcr
mov
(bad)
ja
(bad)
mov
(bad)
popa
rcr
iret
mov
(bad)
(bad)
mov
(bad)
retf
(bad)
int
(bad)
cmp
(bad)
stos
popf
(bad)
mov
popf
(bad)
lahf
popf
(bad)
std
popf
(bad)
sti
popf
(bad)
out
popf
(bad)
fistp
(bad)
mov
(bad)
pop
mov
add
add
(bad)
cmp
(bad)
(bad)
jae
(bad)
jno
(bad)
jecxz
(bad)
cmps
(bad)
(bad)
mov
(bad)
inc
(bad)
stc
(bad)
(bad)
in
(bad)
(bad)
in
(bad)
popf
leave
(bad)
ins
(bad)
(bad)
rcl
(bad)
test
(bad)
ffreep
(bad)
bswap
(bad)
sti
(bad)
(bad)
add
add
add
(bad)
(bad)
cmp
(bad)
sbb
(bad)
mov
(bad)
dec
(bad)
(bad)
or
(bad)
mov
enter
leave
(bad)
pop
leave
(bad)
popa
leave
(bad)
dec
leave
(bad)
imul
(bad)
mov
(bad)
cdq
leave
(bad)
fxch
(bad)
(bad)
enter
enter
enter
leave
(bad)
add
(bad)
ror
(bad)
addr16
(bad)
out
rcr
jmp
rcr
jmp
rcr
(bad)
cmp
(bad)
stc
rcr
jmp
(bad)
cmp
(bad)
inc
rcr
call
mov
sbb
push
test
sub
sbb
pop
test
adc
add
test
add
mov
sbb
dec
sbb
cmp
add
outs
jge
and
(bad)
sbb
sbb
pop
xchg
(bad)
pop
xchg
(bad)
aad
(bad)
in
sbb
jae
(bad)
stos
scas
(bad)
lods
(bad)
push
scas
(bad)
inc
scas
(bad)
(bad)
scas
(bad)
mov
(bad)
shr
(bad)
xchg
cwde
(bad)
jae
(bad)
xor
(bad)
adc
(bad)
sbb
lods
(bad)
add
(bad)
lea
(bad)
lea
(bad)
test
cwde
(bad)
jno
(bad)
lahf
cwde
(bad)
sbb
cwde
(bad)
aaa
cwde
(bad)
xor
(bad)
fst
(bad)
lods
cwde
(bad)
rcl
(bad)
jne
(bad)
or
(bad)
popa
cwde
(bad)
add
xchg
(bad)
adc
mov
(bad)
jg
(bad)
lea
(bad)
addr16
call
mov
(bad)
jge
(bad)
dec
mov
jmp
cwde
(bad)
std
cdq
(bad)
neg
sbb
rcr
(bad)
fstp
(bad)
xchg
cdq
(bad)
arpl
(bad)
sbb
(bad)
rcr
(bad)
movs
sbb
aas
cwde
(bad)
xor
(bad)
xchg
pushf
(bad)
imul
xchg
sbb
xor
call
xchg
(bad)
mov
xchg
(bad)
sub
xchg
(bad)
adc
(bad)
and
call
scas
call
jne
(bad)
jne
(bad)
test
(bad)
setnp
push
sbb
add
and
jle
and
add
and
sub
and
push
mov
add
add
add
mov
add
and
mov
mov
add
mov
add
mov
add
and
jge
and
mov
and
xchg
and
mov
and
push
mov
add
mov
add
mov
add
and
arpl
add
sti
mov
add
lea
add
and
cmp
and
out
mov
add
mov
add
and
xchg
sbb
movs
sbb
mov
pop
add
in
pop
add
pop
add
pop
add
pop
add
and
sbb
sbb
jle
push
add
pop
add
sbb
adc
add
add
neg
jle
lock
fidivr
fs
pop
fadd
repnz
adc
(bad)
outs
pushf
sub
mov
inc
fnstsw
and
repnz
adc
jmp
icebp
add
adc
(bad)
test
jmp
add
(bad)
adc
jmp
test
xlat
pop
jl
icebp
(bad)
adc
rcr
test
add
pusha
add
rcl
ss
call
pop
mov
adc
fnstsw
fst
mov
adc
fnstsw
popa
inc
fistp
stos
enter
fidivr
add
in
test
retf
pop
loop
movs
outs
push
add
pop
pop
jmp
int3
(bad)
adc
xor
mov
stos
retf
add
and
adc
imul
add
aas
inc
mov
iret
xchg
lahf
jg
pop
gs
ret
jle
enter
fnstsw
popf
cmp
es
add
add
data16
movq
ja
ret
mov
sbb
mov
hlt
test
adc
stos
aad
xor
push
int
push
neg
mov
mov
call
push
pop
in
jmp
cmp
push
pushf
(bad)
adc
cmc
and
cmp
add
add
adc
dec
fnstsw
push
gs
jmp
mov
adc
fnstsw
imul
adc
sbb
jecxz
enter
fidivr
jo
or
cmp
cmps
push
fild
mov
push
retf
sbb
add
inc
pop
(bad)
or
mov
hlt
sahf
fisttp
jg
inc
pop
and
mov
mov
fnstsw
cmc
addr16
aaa
and
and
mov
adc
in
push
xchg
xchg
test
add
test
add
jl
mov
mov
add
add
adc
fsub
sub
pop
add
sbb
mov
retf
movs
cmp
jns
sbb
add
leave
sbb
add
addr16
sar
imul
add
imul
inc
and
stc
addr16
add
add
out
jae
iret
test
add
out
add
xor
add
mov
pop
add
div
mov
div
ret
test
add
sbb
call
sbb
adc
inc
jg
add
jg
jmp
jle
add
sbb
data16
add
add
add
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
xchg
je
and
sbb
adc
sbb
sbb
lds
sbb
adc
jg
add
sbb
in
xchg
or
mov
adc
add
add
xchg
push
sbb
push
and
lahf
cmp
mov
xor
stos
xor
cmp
es
and
pop
inc
sbb
push
dec
sub
push
dec
adc
push
push
xor
dec
push
sub
dec
pop
cld
xlat
inc
pop
sbb
pusha
test
jp
js
ds
jo
jbe
aam
push
enter
fdiv
bound
data16
sbb
add
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
add
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
add
add
jle
add
jle
add
jle
add
jle
add
jg
add
test
add
test
add
test
add
test
add
test
add
cmp
jne
cmp
test
add
jle
add
jle
add
or
inc
jle
add
or
xor
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jle
add
add
add
jge
add
jge
add
pop
add
pop
add
pop
add
or
jne
or
jne
or
test
call
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
add
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
add
add
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
cmp
cmc
cmp
add
cmp
mov
cmp
in
xor
mov
jge
add
jge
add
jge
add
jge
add
cmp
jne
cmp
test
cmp
jne
push
add
or
jne
or
inc
or
inc
or
xor
or
add
sbb
pop
add
sbb
or
cmc
or
add
jge
add
add
add
jl
add
jl
add
pop
add
pop
add
pop
add
pop
add
or
jne
or
test
add
xlat
jge
add
jge
add
jge
add
sbb
push
sbb
daa
sbb
daa
sbb
pop
sbb
pop
sbb
daa
sbb
daa
sbb
pop
sbb
pop
sbb
cmc
or
cmc
or
cmc
cmp
cmc
cmp
add
cmp
add
jge
add
jge
add
add
add
jge
add
jge
add
jge
add
cmp
jne
cmp
test
cmp
jne
push
add
or
jne
or
inc
or
inc
or
xor
or
add
or
jg
add
jg
add
or
cmc
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
pop
add
pop
add
pop
add
adc
adc
adc
push
sbb
push
sbb
sbb
sbb
push
jle
add
add
add
sbb
daa
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jle
add
xchg
sbb
xchg
(bad)
mov
xchg
(bad)
xor
sbb
fwait
add
sbb
add
add
sub
in
xor
stos
icebp
and
mov
cmp
mov
movs
cmp
ret
cdq
dec
fwait
(bad)
or
inc
ror
jne
(bad)
shr
retf
xlat
pop
gs
fild
push
out
jmp
popa
repz
push
ins
out
dec
jns
idiv
jno
add
add
jmp
jl
add
mov
push
int
ud2
rol
pop
adc
sahf
call
adc
sti
es
scas
das
sub
xor
xchg
mov
xor
mov
and
and
fidivr
addr16
in
outs
imul
jae
xchg
hlt
addr16
clc
imul
add
jge
pop
pop
shl
pop
test
ja
jns
cmp
in
outs
imul
addr16
clc
imul
pop
jnp
jmp
gs
sbb
xchg
(bad)
mov
xchg
(bad)
xor
sbb
fwait
add
sbb
sub
in
sub
stos
icebp
xor
add
add
mov
cmp
mov
movs
inc
xlat
ret
cdq
dec
fwait
(bad)
or
dec
ror
jne
(bad)
shr
retf
xlat
pop
pop
mov
fild
mov
imul
xor
out
push
jae
repz
ja
idiv
jg
jmp
cwde
sbb
xchg
(bad)
mov
add
add
xchg
(bad)
xor
sbb
fwait
add
sbb
sub
in
sub
scas
adc
cmp
mov
movs
inc
xlat
ret
cdq
inc
fwait
(bad)
or
inc
ror
jne
(bad)
shr
retf
xlat
pop
pop
mov
fild
pop
mov
jmp
popa
repz
push
jne
repz
imul
sti
popa
jo
jmp
test
add
jns
push
int
ud2
rol
pop
adc
popf
call
adc
sti
es
lods
das
sub
xor
xchg
mov
xor
mov
and
and
mov
dec
dec
xchg
rcl
aam
push
jmp
fdivr
pop
rcl
pop
test
push
inc
fnstcw
dec
dec
rol
push
dec
mov
inc
push
test
fdivr
jnp
lock
add
pop
xchg
(bad)
mov
xchg
(bad)
xor
or
add
add
add
sbb
sbb
in
sub
mov
adc
sub
mov
movs
inc
xlat
ret
cdq
cmp
retf
adc
iret
jne
(bad)
shr
retf
xlat
pop
pop
mov
fild
fs
jmp
ins
repz
push
jno
repz
add
dec
jne
idiv
jl
call
xor
(bad)
fistp
stos
mov
inc
and
jp
gs
jo
jae
sbb
pxor
inc
sbb
cmc
sbb
std
loope
add
out
jp
cmp
dec
outs
dec
out
jno
xlat
sbb
push
sbb
xchg
push
add
test
add
sbb
test
sbb
jmp
in
outs
lods
jmp
cmps
test
add
in
add
jmp
cmp
fwait
loope
inc
clc
repz
popa
icebp
repnz
imul
inc
jno
jbe
xchg
jg
add
addr16
dec
call
jp
es
xor
add
jne
push
jg
add
jg
add
jg
add
sbb
xlat
repz
in
call
outs
xchg
movs
(bad)
jmp
movs
cmp
out
addr16
mov
push
inc
cmc
loope
jb
repz
in
sbb
cdq
(bad)
push
inc
lods
(bad)
std
fs
jbe
loopne
(bad)
in
sbb
pop
mov
xor
sahf
js
xchg
bnd
je
jo
jae
jne
push
sahf
je
jns
std
pusha
xor
je
pop
sahf
jno
test
jbe
cmp
pop
and
icebp
jae
cmp
cmp
icebp
in
ja
hlt
repz
and
outs
xchg
repz
jmp
add
add
into
jns
test
cmp
xchg
jae
mov
jno
test
cmc
ins
ins
mov
out
daa
out
push
aad
jbe
leave
popf
jno
hlt
call
std
ins
sub
and
outs
addr16
mov
test
add
sub
sub
cmp
ins
je
stc
jbe
call
rcl
test
jbe
clc
popf
cmp
lock
jae
in
push
test
push
nop
fistp
mov
ins
jb
jmp
and
in
imul
jmp
je
in
imul
in
push
mov
jecxz
gs
js
xchg
and
js
mul
je
ins
ins
jl
js
jl
jae
jne
jno
sub
std
ins
inc
in
jno
icebp
jmp
gs
sti
std
jae
out
jno
in
ins
ins
leave
movs
jbe
mov
js
icebp
in
jae
(bad)
and
into
push
dec
rcr
jbe
in
jns
mov
addr16
loope
add
add
icebp
jo
ret
popf
cmp
out
std
pusha
cmc
jmp
cmp
(bad)
jmp
jmp
in
std
gs
jmp
je
jae
nop
test
push
mov
xor
jmp
jae
pop
loop
and
js
cmp
jns
inc
in
add
add
test
jae
bnd
jmp
mov
jmp
mov
xor
cvtps2pi
mov
ins
je
div
lods
out
jo
mov
loopne
jae
loopne
inc
(bad)
sar
ins
ret
and
jmp
clc
lods
andps
push
jl
inc
imul
js
xchg
and
js
icebp
and
repnz
ins
cmp
js
cmp
jae
jo
(bad)
inc
mov
xor
ret
inc
push
mov
jbe
mov
jae
cdq
in
ins
jl
cmp
xor
sub
sub
mov
cmp
test
in
imul
add
add
in
adc
in
sbb
mov
sub
sub
(bad)
outs
mov
jne
data16
js
js
cmp
mov
jbe
sub
jo
sub
jns
dec
fidiv
repnz
adc
push
sbb
xor
mov
sub
mov
jae
call
in
js
js
cmp
popf
push
jns
jbe
jl
jo
jl
jns
fnstsw
jno
mov
adc
in
sbb
mov
sub
sub
enter
xlat
hlt
ins
popa
icebp
mov
jno
sub
bound
sbb
inc
mov
xor
jmp
je
jecxz
outs
sub
jne
push
lock
cmp
inc
outs
xor
gs
clc
jo
mov
js
icebp
in
or
mov
xor
jae
xchg
cmp
leave
out
std
outs
movs
in
and
jmp
imul
adc
aad
sbb
mov
sub
add
add
sub
fucomp
cmp
cdq
in
and
js
mov
addr16
icebp
adc
movs
jg
add
mov
xor
cvtps2pi
jae
dec
out
cmp
dec
in
and
jns
dec
repz
dec
loopne
and
in
jp
mov
push
repnz
or
inc
sub
sub
sub
lds
jbe
enter
cmps
or
outs
xlat
pop
ins
push
cmc
sbb
add
je
push
in
je
neg
cmp
or
jb
or
inc
lds
jo
lds
jno
sub
jae
pop
sbb
cmp
cmp
add
add
jne
jbe
inc
adc
jne
or
hlt
adc
ja
add
or
adc
xchg
sbb
arpl
or
je
sbb
popa
aad
je
mov
ins
imul
push
push
cmc
or
mov
outs
xlat
pop
jns
xlat
sbb
imul
sbb
imul
add
add
mov
adc
(bad)
outs
sub
jo
es
cmp
outs
push
movs
inc
outs
jmp
push
xor
inc
outs
fst
sub
popf
nop
adc
(bad)
outs
mov
jo
out
cmp
outs
xlat
movs
cmp
gs
addr16
add
sbb
mov
sub
pop
nop
adc
mov
jne
retf
outs
mov
imul
repnz
icebp
ins
and
cmp
or
jmp
jb
cmc
jae
sub
ins
test
das
sub
jmp
gs
jne
xlat
jecxz
jns
test
add
sbb
mov
ss
cmc
push
jp
cmp
ins
js
jno
jle
jae
rol
sbb
xbegin
inc
and
movs
adc
(bad)
addr16
jns
add
test
out
sbb
or
add
test
add
dec
add
cmp
xchg
add
add
add
and
xchg
sbb
dec
adc
adc
sbb
sbb
push
sbb
push
sbb
push
sbb
inc
sbb
sub
sbb
mov
sbb
and
test
ror
sbb
arpl
sbb
aad
sbb
push
test
rcr
sbb
in
sbb
inc
test
ror
sbb
movs
sbb
xor
sbb
lods
sbb
xchg
sbb
test
sbb
push
xchg
rcr
add
sbb
push
sbb
push
sub
sbb
gs
push
sbb
push
cmp
and
add
add
cmp
adc
sbb
and
sbb
adc
sbb
in
fdivr
aad
sbb
aad
sbb
pop
jo
icebp
cmc
mov
mov
ret
add
sub
sbb
add
add
in
cmp
sbb
outs
out
sbb
ss
inc
cmc
cmp
add
std
push
add
sbb
je
jne
and
out
cmp
mov
cmp
in
sbb
enter
aad
imul
xor
rol
add
add
icebp
cmps
sbb
stos
sbb
movs
jg
add
xchg
adc
and
cwde
mov
add
sbb
gs
cmp
mov
xor
(bad)
mov
sbb
dec
loopne
pusha
cmc
in
add
std
pusha
or
mov
add
adc
sbb
add
add
sbb
int
and
mov
jae
jg
add
lahf
pop
dec
mov
mov
jns
mul
adc
xor
gs
jg
add
sbb
push
int3
sbb
imul
inc
jb
jg
add
outs
gs
loope
jb
jg
add
loop
outs
aaa
in
add
add
ss
je
in
jp
out
sbb
xchg
lock
icebp
sbb
fcomip
je
adc
lock
and
cmc
push
mov
sbb
shl
push
mov
loopne
jb
in
jns
jle
add
repz
loop
add
call
ins
add
push
add
add
je
pop
icebp
jbe
xor
add
add
push
sub
jp
pop
in
add
ins
jne
fidivr
add
hlt
jne
hlt
cld
sbb
mov
jno
xchg
loope
jns
jle
add
loopne
outs
js
cmp
int3
test
add
in
add
out
fs
cld
sbb
mov
jbe
mov
sbb
(bad)
in
add
in
jno
or
cmp
or
inc
add
jbe
jbe
jbe
js
sub
movs
test
add
jle
inc
xchg
test
and
dec
jb
fild
out
push
cmp
ins
jne
loope
jb
lock
outs
jmp
add
add
leave
daa
xor
mov
inc
je
popf
push
bound
ja
cmc
shl
icebp
jae
or
je
out
cmp
fsubr
xlat
fnsave
add
out
jne
jmp
test
add
mov
push
ins
je
and
push
dec
mov
sbb
jne
cmp
ins
inc
in
and
xlat
addr16
jmp
je
out
cmp
movs
xor
test
gs
popf
sbb
out
push
xchg
icebp
jae
mov
jmp
cmp
in
imul
loopne
popa
xlat
loope
inc
loopne
outs
mov
inc
fs
icebp
inc
arpl
add
add
call
push
outs
out
push
xchg
jae
(bad)
gs
outs
addr16
test
inc
arpl
push
sub
cmp
outs
push
cld
cmp
call
ja
xor
cmp
xlat
push
leave
jmp
sbb
cmc
out
arpl
fisubr
mov
jae
out
push
xchg
jae
(bad)
cmps
fsubr
xchg
sbb
vpcmpgtw
call
ins
gs
loopne
je
icebp
ja
repnz
lock
movs
sbb
test
outs
je
jne
mov
jbe
pop
in
ins
jl
inc
jb
aam
jb
xchg
sbb
inc
loope
and
add
add
ja
push
lock
frstor
test
jae
int3
mov
ins
jb
loop
outs
xchg
popf
jne
js
cmp
push
jo
fneni(8087
ja
shl
cmp
in
and
repz
leave
fisubr
int3
icebp
inc
jb
icebp
jae
or
cmp
fs
inc
arpl
loop
je
bnd
jb
cmp
loop
popa
dec
fsubr
xchg
sbb
outs
inc
aam
fs
inc
arpl
fld
fdiv
fptan
jno
leave
fld
in
icebp
inc
jb
icebp
jae
retf
add
aam
gs
cmp
inc
je
fimul
mov
jae
test
inc
daa
in
sbb
vpcmpeqb
aam
gs
cmp
inc
je
popf
ja
repnz
jno
clc
xchg
sbb
test
jns
jl
ja
xchg
fsub
jp
sbb
(bad)
ins
js
inc
pop
add
ja
retf
sbb
inc
fdiv
xor
cmp
in
bound
cmp
fisub
out
ja
repnz
cmp
fisub
xchg
aam
push
jae
je
cmp
icebp
cmp
push
jge
add
mov
add
in
je
icebp
inc
je
icebp
jbe
ret
(bad)
sti
inc
loop
jo
lahf
ja
rep
jb
loop
outs
xchg
lahf
ja
xchg
bnd
js
sbb
test
jo
dec
aam
je
icebp
cmp
loopne
gs
jae
push
jecxz
jne
jecxz
jb
call
ins
outs
xlat
xchg
sbb
cmc
call
ja
sub
fs
ins
jb
fisubr
popf
jne
mov
cmp
push
call
cmp
loopne
add
add
out
ja
mov
cmp
jmp
push
aad
sbb
cmc
clc
jne
cdq
stc
cmp
jae
sar
outs
pop
sahf
jns
push
cmps
sbb
xor
fild
pop
fdivr
outs
push
jmp
jb
fld
sahf
jne
cmp
cmp
push
test
cdq
fisubr
jns
addr16
clc
ja
jb
cmp
call
push
adc
test
(bad)
fidiv
jmp
fisubr
mov
stc
jae
mov
jmp
jns
je
imul
inc
jae
div
dec
in
daa
xchg
test
add
add
add
jmp
out
push
ss
jae
test
je
(bad)
jmp
sbb
cmc
jmp
arpl
call
jbe
mov
inc
jae
div
leave
loop
daa
adc
jmp
popa
(bad)
call
ins
jb
in
outs
out
sbb
(bad)
jb
add
add
sbb
cmc
shl
test
cmp
jecxz
imul
cmp
movs
test
add
loope
daa
xchg
test
add
ja
icebp
sar
push
out
mov
je
out
gs
mov
sbb
mov
mov
sub
adc
sbb
repnz
sbb
lock
sbb
(bad)
sahf
sbb
call
sbb
sti
cdq
sbb
mov
sbb
jecxz
sbb
lods
mov
add
test
add
sahf
sbb
rol
add
test
add
sbb
jo
sbb
jle
sbb
xor
add
push
repz
jb
div
sbb
test
sbb
mov
sbb
shl
sbb
mov
inc
ins
js
inc
add
iret
inc
ja
sbb
cmp
addr16
fdivr
mov
imul
mov
sbb
mov
push
add
shl
jecxz
ins
add
sbb
bound
ja
jno
sbb
xor
ja
xor
sbb
inc
mov
cmp
add
mov
cmp
add
ja
clc
loop
add
fdivr
and
mov
and
popf
mov
and
movs
movs
and
mov
movs
and
mov
and
cdq
movs
and
std
mov
and
imul
add
jp
add
and
mov
mov
and
outs
and
mov
mov
and
ins
mov
and
or
and
ins
mov
and
jge
and
push
mov
and
adc
add
add
add
and
push
jg
add
and
sub
jg
add
and
and
add
jg
add
jg
add
mov
add
jle
add
jle
add
jle
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
and
xor
add
jle
add
jnp
add
jle
add
jge
add
add
add
and
cmp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
and
mov
jp
add
jp
add
jnp
add
jnp
add
and
sbb
add
add
add
and
(bad)
ins
push
out
ja
(bad)
repnz
imul
icebp
cmp
add
loopne
dec
mov
inc
arpl
lods
jbe
ret
popa
leave
int
outs
adc
sbb
sbb
ins
dec
test
ins
inc
xchg
jne
js
jae
push
loope
inc
xchg
jne
cmp
jne
cmp
imul
loope
jae
fild
push
(bad)
sbb
push
push
mov
inc
xor
inc
js
in
je
repz
loop
jae
ja
sbb
ret
add
fsubr
add
test
add
enter
jge
add
icebp
sbb
mov
cmp
add
leave
inc
js
jge
add
test
add
push
xchg
test
add
sbb
sub
jbe
xchg
test
add
addr16
out
jbe
push
test
add
cwde
xchg
std
xchg
add
pop
xchg
add
inc
fsubr
(bad)
and
in
add
add
or
rcr
xor
test
and
jge
add
lds
mov
fsubr
jmp
or
test
add
jbe
or
jne
rol
dec
int3
jno
daa
retf
inc
popa
pop
test
add
jecxz
inc
cmp
pop
popa
out
push
dec
enter
icebp
les
xchg
push
outs
mov
inc
arpl
popf
dec
dec
in
sbb
adc
push
dec
fstp
add
pushf
push
dec
test
popf
inc
dec
xchg
stos
sbb
xchg
stos
push
dec
mov
leave
inc
inc
out
cmp
and
mov
add
add
add
dec
fnsave
dec
popa
test
push
pop
int
pop
dec
test
and
mov
push
and
and
jne
cmp
add
inc
jb
stos
jbe
clc
repz
mul
xor
loopne
inc
xchg
into
imul
xor
ins
mov
sbb
mov
xchg
sbb
sbb
add
sbb
cmp
sbb
mov
mov
mov
add
xor
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
sbb
(bad)
xchg
sbb
cmp
xchg
sbb
sbb
sbb
sub
sbb
popa
lea
imul
sbb
jno
sbb
mov
xchg
pop
add
pop
add
xchg
pop
add
sbb
or
add
lea
ror
mov
sbb
enter
ror
adc
sbb
mov
mov
jle
add
add
add
sbb
xchg
sbb
add
sbb
movs
sbb
push
sbb
add
sbb
movs
sbb
push
sbb
rol
enter
sbb
repnz
outs
out
gs
jge
add
jns
fstp
add
jge
add
sbb
mov
jbe
jmp
add
fild
jno
out
sbb
hlt
xor
xor
sub
sub
sub
sbb
jnp
jne
daa
add
cmp
sbb
aaa
sub
sub
add
and
sbb
jmp
jne
mov
add
jge
add
jge
add
jne
(bad)
jge
add
jge
add
jge
add
jge
add
jge
add
jg
add
jge
add
jg
add
jg
add
jg
add
add
sbb
mov
add
jne
cmp
add
add
jne
push
jg
add
add
add
add
inc
add
jg
add
jle
add
jle
add
sbb
sti
jge
add
jge
add
jg
add
add
jge
add
jge
add
jge
add
jge
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
jle
add
jne
xor
add
add
jle
add
jge
add
jge
add
jge
add
jge
add
jno
mov
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
push
jl
outs
add
add
add
test
push
test
test
inc
test
add
test
out
push
add
test
add
test
out
ins
add
test
icebp
test
add
test
add
test
stos
test
cmps
test
ret
test
mov
test
add
test
leave
test
mov
test
add
sbb
add
push
add
sbb
add
add
test
cmp
add
test
add
jne
(bad)
test
cwde
test
jmp
test
add
test
add
test
add
test
add
add
test
in
sbb
push
test
daa
test
add
sbb
push
test
aad
sbb
sahf
test
call
add
test
add
xor
xor
sub
sbb
push
xor
xor
xor
xor
or
xor
xor
test
add
add
sbb
in
jbe
mov
push
add
dec
add
test
mov
add
add
cmp
add
cmp
xor
sbb
lea
push
add
add
add
jae
cmp
cmp
add
adc
xor
xor
and
xchg
jmp
test
test
xchg
test
in
test
fld
jbe
mov
sbb
mov
jae
mov
cmp
add
add
rol
jbe
jmp
add
sub
add
add
add
dec
sub
and
inc
xor
test
repz
test
lock
je
jbe
jns
sbb
lds
sbb
mov
cmp
add
sbb
stos
test
rol
inc
add
test
repnz
xor
sub
xor
inc
add
sbb
aaa
adc
or
push
add
add
sub
add
add
sbb
and
sbb
jg
inc
add
sbb
movs
test
add
sbb
test
add
test
add
test
jmp
sub
out
sub
mov
test
mov
test
xlat
jg
add
jg
add
jg
add
or
add
add
add
jae
push
add
push
add
push
push
jg
add
jg
add
inc
add
add
jg
add
inc
add
jbe
cmp
jbe
(bad)
jle
add
test
test
add
test
fild
sbb
add
test
cmps
test
add
add
cmps
test
retf
test
test
int3
test
mov
jle
add
test
call
jle
add
jle
add
add
add
jle
add
jbe
es
add
add
jle
add
jle
add
jle
add
cmp
add
jle
add
test
clc
test
add
test
add
test
jns
inc
add
sbb
fild
ins
add
test
ret
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
test
add
add
add
add
add
test
xor
sbb
dec
test
out
ins
add
test
add
test
repz
add
jge
add
jge
add
jge
add
push
mov
gs
jge
add
test
add
jge
add
test
mov
cmp
fadd
add
test
repz
add
jge
add
cmp
add
jae
test
add
test
add
jae
repz
add
jne
xor
add
test
out
outs
add
jge
add
add
js
sbb
xchg
jge
add
jbe
and
jge
add
jge
add
jge
add
jge
add
jge
add
xor
xor
sub
push
add
dec
add
jge
add
cmp
add
jae
push
sub
add
add
add
sub
push
add
or
sbb
cmp
addr16
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
sbb
xlat
cmp
add
inc
add
xor
sub
jge
add
ins
add
push
add
dec
add
sbb
cmp
cmp
(bad)
jne
cmp
jne
xor
jbe
(bad)
sub
je
icebp
jge
add
fidiv
xchg
fisubr
fbld
test
je
jns
sbb
(bad)
jge
add
jge
add
sbb
add
xor
jge
add
xor
cdq
sbb
add
jne
je
je
arpl
jp
cmp
sbb
cmp
cmp
push
add
add
add
dec
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
cmp
in
sbb
stos
jge
add
jge
add
add
int3
and
xor
xor
inc
add
jne
je
sbb
popa
sbb
xor
inc
add
jo
pop
and
xor
xor
push
dec
sub
sbb
rcr
push
cmp
imul
sbb
ins
repnz
add
mov
je
scas
and
adc
je
mov
sbb
lods
fild
add
add
shr
and
fisubr
out
ins
cmp
imul
fnstenv
push
aad
sbb
aad
sbb
sub
sub
test
inc
add
or
rcr
aam
popf
inc
sub
scas
mov
jecxz
push
stc
call
jl
push
sub
sbb
cmp
mov
add
add
int3
pusha
push
(bad)
sbb
pop
dec
aad
(bad)
in
icebp
jmp
loop
and
addr16
(bad)
(bad)
fstp
lahf
sar
out
dec
push
mov
popf
push
xchg
out
jmp
sbb
mov
push
out
mov
push
xor
cmovb
mov
sbb
clc
inc
sub
test
mov
test
in
pop
ins
je
add
adc
or
and
cdq
nop
xor
mov
rcl
pop
scas
int3
xchg
adc
xchg
repz
mov
inc
inc
adc
mov
push
cmp
push
std
(bad)
mov
mov
fistp
test
sbb
(bad)
cmp
or
dec
push
mov
lods
pop
sub
call
sub
xor
test
add
sbb
cmp
or
fstp
jns
mov
in
mov
int
dec
loope
lock
inc
stc
mov
push
cmp
add
xchg
mov
daa
fld1
jge
mov
mov
jbe
ret
dec
push
mov
scas
sbb
(bad)
sbb
add
jno
and
icebp
adc
nop
push
inc
mov
nop
xchg
add
mov
xchg
movs
imul
mov
pop
xchg
(bad)
sub
inc
adc
imul
mov
daa
inc
and
adc
add
add
add
xchg
push
xor
ret
fistp
push
jl
xor
stc
and
std
push
sbb
cdq
stc
les
add
add
aas
add
mov
sub
mov
(bad)
leave
push
cwde
out
shl
int
shr
jl
mov
idiv
mov
out
shr
dec
jmp
aad
mov
sbb
mov
aad
es
add
add
inc
loop
(bad)
fcmovnu
stc
xchg
jmp
push
dec
jb
xchg
add
dec
cmp
movs
push
test
je
outs
clc
(bad)
rcr
mov
scas
jbe
sub
jecxz
lahf
jg
push
fdiv
fsubr
jg
cs
mov
inc
xor
xor
xor
push
retf
jne
cmp
push
xchg
test
or
sbb
clc
aad
adc
cwde
push
int
mov
xchg
rcr
mov
and
call
movs
sbb
inc
inc
inc
mov
lock
cwde
(bad)
(bad)
pop
(bad)
inc
arpl
es
and
loopne
mov
imul
mov
pop
fadd
add
add
cmp
pop
push
test
das
dec
jbe
or
fst
mov
pop
add
dec
or
mov
sbb
dec
adc
adc
xchg
shl
adc
pop
fcmovnu
push
and
dec
jmp
jno
pop
stc
push
in
pop
and
nop
pop
test
mov
or
mov
sahf
imul
mov
adc
ins
mov
xchg
xchg
jne
cmc
cwde
movs
ror
jmp
xor
cmp
shr
sub
es
add
iret
adc
adc
retf
adc
dec
nop
dec
out
xchg
int
jo
pusha
sar
jne
scas
les
add
add
in
retf
pop
ret
pop
lods
cmps
cmp
xlat
pop
jge
mov
or
addr16
pop
retf
stos
in
add
mov
lds
push
sub
icebp
push
pop
fcom
cmp
out
in
scas
ret
dec
or
pop
das
mov
retf
je
add
enter
sub
sbb
add
add
add
popf
adc
jnp
mov
ret
cmp
add
fdiv
add
leave
jb
mov
dec
(bad)
pop
xchg
sti
xchg
mov
adc
xchg
cmps
in
sar
ret
mov
inc
adc
push
xor
cs
xor
push
add
add
repz
pop
into
jg
and
push
inc
(bad)
movs
jle
add
lahf
or
and
mov
std
sbb
sbb
xchg
cld
jmp
xchg
pop
xor
scas
fmul
ror
adc
(bad)
faddp
shl
jae
adc
mov
jne
jmp
ins
pop
mov
mov
or
ss
mov
fild
neg
(bad)
fisubr
ja
add
jge
add
outs
adc
js
mov
xchg
stos
movs
xor
pop
mov
int
ins
pushaw
mov
or
mov
(bad)
js
cdq
add
add
dec
adc
or
int
test
cs
sahf
jle
jp
xchg
add
pusha
jl
call
jbe
mov
lods
adc
adc
xchg
iret
inc
int
adc
inc
xchg
test
ss
xchg
out
movs
jecxz
sar
mov
add
xor
lods
and
add
jbe
mov
adc
jae
inc
shl
test
add
retf
movs
ins
adc
nop
fiadd
mov
rcl
neg
mov
mov
retf
xchg
xor
mov
mov
add
jle
add
add
outs
mov
push
jno
adc
aaa
mov
retf
and
(bad)
outs
sti
or
loopne
inc
movs
aaa
mov
jl
push
pop
push
not
and
scas
jnp
sar
mov
jg
jmpw
add
mov
movs
js
add
add
clc
bound
es
out
or
and
into
iret
adc
adc
adc
jg
mov
cmp
in
in
dec
shl
lahf
dec
sbb
push
jbe
clc
out
push
hlt
sar
jae
xor
inc
jmp
add
add
add
lods
ret
outs
jns
mov
ror
adc
and
xlat
nop
in
clc
(bad)
cmp
(bad)
mov
xor
sub
mov
ret
out
lods
sub
out
rcr
and
(bad)
fs
mov
ins
(bad)
lock
je
ds
xchg
cmc
fld
sbb
add
pop
(bad)
adc
sbb
mov
pop
mov
jl
cmp
inc
pop
add
adc
mul
movs
mov
shl
icebp
movs
mov
jne
ja
push
cld
xchg
cmps
sub
sbb
push
sbb
add
outs
adc
xor
push
div
sbb
mov
sbb
shr
stos
inc
jnp
xchg
xlat
cdq
add
movs
pusha
inc
test
cmps
or
das
data16
mov
or
xchg
sbb
mov
sbb
add
cmc
mov
jns
inc
mov
fst
addr16
frstor
mov
outs
nop
inc
and
je
sbb
or
cmps
fist
mov
(bad)
adc
(bad)
imul
in
ins
cdq
lds
frstor
into
popf
or
and
mov
mov
js
xchg
mov
and
call
call
adc
push
sbb
mov
cld
(bad)
and
(bad)
aas
fs
ins
pop
ds
cdq
mov
mov
mov
xor
sar
mov
and
out
pushf
or
add
adc
mov
xor
imul
mov
outs
dec
scas
loopne
sbb
pop
inc
nop
xchg
push
push
movs
sti
mov
ss
or
mov
adc
cmp
adc
in
popa
int
js
out
lds
imul
add
pushf
or
adc
pushf
fist
call
sub
push
mov
and
mov
bnd
dec
cwde
shr
add
push
shl
fwait
js
and
rol
fdivr
aad
sbb
ss
ffreep
aad
push
imul
addr16
add
add
imul
movs
aas
sbb
inc
add
ret
pushf
ins
push
mov
cmps
pop
xor
retf
xor
cmp
enter
cmp
sub
and
or
(bad)
imul
cmp
jbe
stc
rol
aaa
xor
push
test
pop
movs
into
and
add
add
adc
ss
imul
int
sub
pop
mov
pop
call
dec
jns
pop
inc
pop
inc
xor
and
push
adc
out
shr
adc
pop
popf
sti
test
or
sahf
xchg
lock
ins
cmp
sbb
test
mov
xor
sbb
imul
pop
add
mov
cmc
push
push
inc
add
pop
ja
jp
and
dec
shl
push
rcl
repz
retf
adc
add
push
cmp
shr
cwde
xchg
xchg
pop
cmp
ins
in
xor
imul
repz
iret
(bad)
push
jge
out
mov
jno
lgs
mov
xor
adc
cwde
mov
repz
dec
loopne
push
in
jge
jle
and
jo
das
nop
mov
push
jnp
imul
cmp
hlt
adc
mov
fsubr
add
cmp
mov
push
and
fld
dec
stos
mov
enter
cmp
jno
stos
cmp
sub
outs
cs
loope
(bad)
cmp
sbb
bound
mov
pop
xor
and
mov
xor
inc
test
jno
mov
fs
aad
add
add
rcl
leave
ins
movs
mov
int
xchg
aaa
push
fiadd
mov
jp
cld
sar
or
or
mov
dec
shl
mov
imul
leave
cmp
lods
mov
mov
dec
repnz
fimul
fstp
retf
push
pop
retf
ds
mov
outs
hlt
cmp
inc
pop
lds
adc
and
xchg
mov
movs
cmp
test
jbe
mov
pop
cmp
popa
push
jle
mov
daa
in
inc
push
fwait
mov
test
das
xor
add
pop
sbb
jge
xchg
add
rcl
adc
les
mov
xor
(bad)
rcr
cld
loope
dec
pusha
fsubr
fadd
cmps
pop
sub
jmp
or
lahf
into
xchg
cmp
mov
adc
(bad)
pop
fst
push
mov
mov
add
cdq
push
mov
xchg
fdiv
stc
call
fmulp
adc
push
out
xlat
xchg
sbb
push
out
out
mov
(bad)
call
sub
cmp
mov
cmp
xlat
pop
xor
lods
cmps
adc
into
mov
jg
lock
add
add
add
scas
pop
add
xlat
cmp
mov
nop
push
inc
and
adc
fst
mov
mov
stos
sbb
xor
jl
adc
loopne
stos
cmp
call
mov
mov
sbb
mov
inc
lods
ja
xor
and
sub
adc
icebp
or
fadd
push
sbb
icebp
xbegin
lea
lahf
push
scas
iret
sbb
in
mov
or
aas
scas
mov
ins
xchg
jno
xor
movs
lea
retf
rol
push
dec
sbb
ja
scas
aaa
and
xor
adc
push
xor
or
(bad)
hlt
jmp
mov
popf
(bad)
fild
xor
imul
cmp
jb
cli
lea
ror
sti
mov
adc
test
mov
pop
dec
sbb
dec
test
add
add
add
sbb
adc
div
jmp
jge
(bad)
jmp
jbe
push
add
xchg
mov
cmp
inc
aad
cwde
das
lods
lds
popf
int
adc
pop
lods
cmp
adc
push
mov
sub
pop
sub
push
xor
and
stos
repnz
mov
add
sbb
mov
jmp
mov
ret
ja
pushf
rcl
or
xchg
fcmove
int
stos
enter
repz
hlt
push
add
jmp
mov
neg
lahf
ret
movs
call
lahf
mov
xor
and
fmul
add
aad
aas
jne
sub
cmp
mov
pop
movs
imul
mov
mov
ret
pop
ds
inc
cmps
push
int3
sbb
cli
std
jmp
in
sar
lock
pop
mov
or
dec
iret
sub
test
jp
pop
in
shl
data16
pop
push
mov
add
add
xchg
out
xor
movs
fsub
add
std
aad
xchg
mov
inc
jp
sub
ins
jno
stos
test
cmps
retfw
sahf
inc
mov
sbb
and
xchg
adc
dec
(bad)
leave
std
in
xchg
int
pop
and
jmp
jno
pushf
mov
(bad)
scas
push
daa
inc
jnp
and
push
rol
(bad)
out
mov
mov
cmp
jae
xchg
inc
ss
movs
and
pop
dec
mov
fld
jp
nop
push
stc
jecxz
cmps
mov
shl
xchg
mov
or
mov
mov
call
jbe
and
fmul
js
test
add
add
sar
pop
call
into
jp
mov
and
cmps
leave
cmove
bound
scas
sub
mov
mov
(bad)
(bad)
sub
dec
(bad)
cmps
cmp
(bad)
cdq
iret
les
cmp
jns
mov
adc
cmc
out
in
sahf
scas
movs
push
jmp
xchg
jnp
repz
mov
out
push
out
xchg
lods
imul
jb
stos
inc
pusha
xchg
inc
fsub
mov
loop
dec
fcomp
inc
pop
(bad)
loopne
jecxz
push
sub
loop
std
mov
dec
pusha
sub
adc
mov
jno
cmp
(bad)
fmul
mov
cmp
arpl
and
add
daa
cmp
xor
neg
inc
sbb
add
add
std
scas
mov
inc
and
xor
xor
sub
addr16
mov
lahf
sub
test
inc
ds
pusha
xchg
mov
ja
loopne
loop
aam
pause
sub
inc
shr
pop
fnstenv
dec
push
js
xchg
sti
mov
clc
in
sub
push
dec
xlat
aas
jle
jg
add
popf
scas
cmp
es
in
xor
jl
call
leave
xchg
or
(bad)
cmc
ror
cmp
xchg
pop
rep
push
mov
and
xchg
jbe
jno
ins
lds
xor
daa
std
inc
mov
gs
data16
add
add
add
and
xor
std
dec
mov
outs
and
(bad)
(bad)
jle
(bad)
fdivr
jmp
jle
add
jle
add
or
outs
jle
add
das
add
pop
add
jle
add
addr16
jge
add
jge
add
sbb
inc
jle
add
or
xor
jle
add
or
add
jge
add
jge
add
jle
add
jle
add
jge
add
jge
add
jle
add
jle
add
jge
add
jge
add
jge
jmp
test
add
sub
add
add
xchg
xchg
xchg
xchg
add
add
push
xchg
fst
push
and
fstp
test
add
or
inc
test
add
or
push
test
add
test
clc
test
add
test
add
test
add
test
add
test
inc
test
lock
add
add
add
mov
add
and
in
push
and
in
mov
add
mov
add
mov
add
mov
add
push
and
test
add
xor
push
out
call
adc
pop
bnd
ja
ss
cmp
xlat
lods
mov
jns
or
loopne
add
add
shr
sbb
out
jg
nop
leave
xchg
stos
sbb
lods
je
repz
ret
cmps
test
push
ret
call
int3
hlt
call
adc
retf
jg
jns
icebp
jmp
mov
fst
lods
mov
bound
and
test
adc
cmp
xchg
jne
mov
jae
mov
sbb
dec
pusha
stc
sbb
out
test
movs
bswap
mov
icebp
std
test
fcmovnbe
fsub
xor
rol
inc
push
or
stos
xor
retf
enter
mov
push
inc
cmps
push
cmp
mov
mov
xor
loope
daa
cmp
cmpxchg
jb
das
je
jo
out
nop
cmp
mov
(bad)
les
jne
add
es
cwde
(bad)
xchg
shr
fdivr
lods
jno
test
mov
call
leave
fcom
btr
adc
loope
xor
mov
cmp
adc
ja
pop
aad
imul
je
sbb
test
inc
or
imul
fstp
xchg
test
or
cmc
jmp
test
jne
stos
adc
cdq
cmps
mov
movs
cld
mov
leave
bound
adc
cmp
sti
sub
aad
cmp
and
call
stos
or
cmp
pop
jmp
add
jbe
fld
js
(bad)
dec
loope
clc
jl
xor
jb
fst
jo
dec
jg
sbb
add
and
jo
xchg
add
and
push
ds
mov
jmp
(bad)
mov
into
retf
(bad)
jp
test
and
mov
sahf
mov
mov
in
or
lods
add
dec
lods
je
vpminsw
rol
les
sub
cdq
sbb
ret
xchg
dec
mov
adc
xchg
cli
int
or
jl
adc
lock
mov
add
int
fcomp
mov
jp
push
gs
and
jns
jp
outs
outs
fwait
jp
inc
pop
ret
push
movs
stc
int3
or
stos
pop
enter
mov
adc
mov
inc
icebp
ret
pop
lahf
sar
(bad)
movs
cmps
add
dec
outs
dec
sbb
sar
scas
imul
pop
fadd
pop
js
test
cmp
fcom
cmp
mov
sub
outs
push
js
adc
out
btc
sbb
mov
loop
push
sbb
mov
mov
cmps
pop
dec
(bad)
retf
out
mov
clc
les
add
add
inc
cmp
jnp
jbe
loope
jb
outs
adc
cld
jg
pushf
and
adc
fcomp
jno
iret
sbb
sub
push
dec
scas
jnp
jp
or
test
xchg
lock
shl
push
les
mov
xchg
mov
push
and
cmps
div
outs
jmp
mov
pop
(bad)
sub
adc
cli
inc
(bad)
jl
jp
(bad)
fld
pop
in
jae
dec
fist
mov
dec
add
dec
xchg
scas
pop
cmp
cmps
dec
xchg
js
nop
ret
jle
jbe
fild
into
fnstcw
les
pop
lds
mov
movs
test
loop
test
xor
out
test
pop
aas
mov
push
jnp
lods
and
xor
mov
lods
rol
push
and
and
push
ds
addr16
pop
or
sub
stos
adc
mov
or
sub
and
add
xlat
pop
xor
out
fs
push
(bad)
sbb
enter
shr
cmp
jecxz
imul
sahf
push
add
cmc
sbb
push
inc
je
js
ret
repz
mov
loope
aaa
mov
xchg
add
lods
int3
sbb
pop
out
test
or
aas
int
inc
popa
xchg
(bad)
ja
mov
stos
cmps
xor
mov
or
out
icebp
mov
add
ret
clc
mov
fidivr
ror
(bad)
(bad)
sbb
outs
mov
addr16
mov
and
and
or
push
sbb
fist
mov
in
and
repnz
call
popf
fisttp
dec
test
push
jl
mov
mov
push
out
and
push
jnp
inc
popa
dec
ret
pop
push
pop
jp
fimul
ret
dec
(bad)
xchg
and
add
add
or
cmps
pop
xor
mov
and
hlt
cwde
adc
aam
(bad)
inc
mov
outs
dec
sar
mov
dec
pop
call
cmc
retf
(bad)
aam
xchg
mov
cmc
jno
jp
mov
mov
inc
add
push
push
ins
and
ud0
and
mov
jmp
jl
rcl
sbb
dec
push
iret
lea
(bad)
sti
xchg
sbb
mov
lods
jae
and
scas
adc
leave
push
in
data16
lods
push
inc
loop
pop
and
mov
xor
sub
add
cdq
inc
dec
xchg
lods
push
push
in
inc
jns
push
pushaw
adc
mov
inc
mov
pop
pop
mov
mov
cmp
clc
xchg
cmp
and
xlat
mov
in
jmp
jae
in
inc
adc
xlat
je
pop
daa
and
add
add
jmp
imul
ss
sbb
cmp
cdq
movs
(bad)
mov
scas
call
sbb
je
rep
cmp
inc
dec
add
cmp
jg
mov
add
shl
(bad)
shl
les
(bad)
(bad)
enter
mov
stos
add
dec
cmp
xor
xchg
pushw
and
mov
sbb
add
ret
inc
ja
jg
imul
dec
or
stos
add
cmp
sbb
sahf
sub
scas
mov
std
push
out
mov
push
mov
pusha
arpl
add
add
stos
push
sbb
sub
sub
xor
mov
sub
dec
enter
imul
jp
int3
dec
arpl
out
retf
xchg
fdivr
sar
retf
sub
scas
pop
sbb
popf
int3
mov
aaa
add
push
and
pop
pop
adc
cwde
nop
push
sub
movs
push
add
add
es
dec
jle
add
push
xchg
xor
repnz
and
test
stos
out
jge
in
dec
push
cld
cmp
jp
jge
gs
mov
arpl
push
or
int3
jnp
and
bound
cdq
sub
add
sahf
pop
(bad)
push
shl
pop
mov
inc
inc
push
xchg
push
ins
jb
inc
jne
cmp
cmp
mov
pop
scas
push
jnp
cmp
movs
(bad)
jnp
mov
mov
enter
jmp
fst
(bad)
jp
add
xchg
es
lea
mov
int
dec
sbb
imul
outs
inc
fmul
pusha
lds
add
add
cmp
not
adc
mov
daa
(bad)
sti
xchg
test
add
fcomp
sbb
push
add
inc
iret
push
daa
sbb
dec
push
pop
push
xchg
cmp
mov
mov
add
mov
ror
das
or
enter
cmps
(bad)
sbb
js
pop
or
cmp
sbb
stc
sbb
mov
sbb
hlt
xor
add
scas
adc
adc
and
(bad)
xor
lahf
push
push
out
pop
vmulps
stos
cs
cmp
xchg
aad
cld
cli
push
cmp
rcr
aas
pop
pop
pop
xchg
popf
cmp
add
add
push
sbb
repnz
test
sub
adc
add
mov
nop
xor
imul
inc
test
and
push
mov
inc
xor
cmp
mov
daa
jge
mov
mov
and
fsub
sub
sub
sub
add
cmps
sub
dec
icebp
lock
xor
pop
push
jae
xor
jb
sub
jbe
hlt
or
shl
inc
xchg
jle
mov
jg
mov
jge
arpl
jl
jbe
jns
sbb
js
mov
sahf
jnp
sub
ins
pop
(bad)
ins
and
pop
outs
dec
xchg
loop
rol
imul
sub
imul
test
popa
inc
inc
cmc
pusha
mov
mov
cmp
outs
clc
test
dec
push
adc
sbb
dec
cmp
lea
arpl
dec
sahf
lea
(bad)
mov
dec
cmp
jg
lods
xchg
pushf
inc
mov
fld
int3
pop
inc
push
sub
inc
(bad)
pop
adc
out
inc
add
in
push
mov
mov
stos
push
popa
inc
loopne
mov
imul
cmp
pop
loop
cmp
in
cmp
pop
cdq
(bad)
out
pop
cmps
stc
xor
jg
jae
xor
xor
or
loopne
dec
lods
loop
movs
jcxz
mov
out
xlat
in
cmps
data16
in
(bad)
(bad)
out
adc
shr
fwait
mov
in
or
xor
ss
jmp
pusha
pop
jne
push
mov
int3
cld
arpl
mov
(bad)
stc
out
jns
sti
pop
inc
xchg
call
add
call
(bad)
mov
push
push
icebp
stc
mov
shl
fist
push
test
fldcw
ss
fdiv
in
jl
and
(bad)
popf
cmps
fild
and
sub
ins
mov
jb
mov
stos
(bad)
aam
mov
aad
mov
mov
add
sbb
shl
clc
inc
(bad)
test
ret
sub
(bad)
and
ret
xchg
ret
aaa
add
ror
sar
xchg
retf
aad
in
adc
pop
jg
int3
imul
xlat
iret
jo
sbb
and
bnd
xchg
les
xchg
pop
not
add
jnp
(bad)
push
cmp
addr16
cmp
or
test
and
popf
leave
data16
test
fwait
mov
xor
mov
or
pop
cwde
mov
out
pop
mov
fmul
sbb
mov
sti
mov
add
add
(bad)
(bad)
ret
cmp
mov
or
nop
outs
rol
jmp
stos
mov
jl
scas
push
(bad)
scas
inc
mov
mov
cmps
xor
cmps
jmp
jno
aam
lods
movs
imul
arpl
xor
sbb
(bad)
ins
inc
call
mov
mov
mov
or
mov
push
int3
mov
fwait
repnz
mov
sbb
(bad)
mov
call
mov
test
add
popa
movs
mov
mov
mov
cmp
lds
sbb
popf
add
lds
(bad)
(bad)
lea
jno
out
ret
loopne
or
add
call
in
mov
sbb
mov
push
mov
jp
xchg
test
push
sub
add
inc
or
icebp
and
add
add
or
dec
xchg
sbb
sbb
cmp
jno
hlt
xchg
ja
inc
test
cmps
sar
fisub
fstp
mov
sub
or
inc
push
adc
clc
inc
lods
scas
dec
clc
test
lock
aaa
pop
xchg
data16
pop
pop
push
jg
add
add
icebp
(bad)
loopne
pop
aad
cmp
xor
adc
xor
ins
push
jmp
add
(bad)
jmp
stos
in
test
pop
or
sub
lea
xor
push
jge
aas
aas
outs
adc
stos
shr
(bad)
xlat
push
ja
mov
out
mov
hlt
and
adc
(bad)
add
pop
sar
lds
xchg
retf
sbb
jae
xlat
(bad)
popf
mov
inc
jne
(bad)
cld
jecxz
ds
mov
xor
push
mov
(bad)
sbb
mov
and
retf
or
data16
cmp
xchg
add
add
add
sub
mov
xchg
cmp
mov
adc
or
cmps
pop
push
pop
aas
in
cmps
add
mov
pushf
mov
inc
jp
adc
jmp
(bad)
inc
pop
pop
leave
in
in
enter
jno
and
xlat
xchg
ror
imul
jns
inc
dec
in
dec
mov
dec
mov
or
add
add
push
std
mov
and
js
cdq
repnz
mov
lods
inc
xor
iret
rcl
dec
inc
enter
inc
pop
and
push
pop
fidivr
sub
xlat
(bad)
xchg
jo
mov
sub
nop
loop
mov
cmp
pop
daa
pop
or
add
add
fist
and
in
adc
push
pop
scas
mov
cmp
imul
mov
lods
das
cwde
rcl
and
in
js
popf
push
rcl
jmp
push
dec
mov
dec
cmp
dec
or
ss
sbb
inc
ins
retf
cmc
repz
jns
into
(bad)
(bad)
pop
aaa
std
adc
or
mov
jl
sbb
sbb
les
je
into
and
xchg
jb
nop
cmps
test
mov
(bad)
adc
adc
inc
xor
pop
mov
fstp
xchg
jge
mov
sbb
push
cmp
push
bound
mov
retfw
add
(bad)
in
jnp
pop
cwde
add
in
inc
mov
inc
imul
jbe
xchg
in
into
lock
and
int
loopne
xor
xor
or
mov
lods
(bad)
push
and
sub
xchg
popf
and
ja
call
mov
cs
sub
mov
ins
lds
shr
sahf
pop
ins
dec
mov
pop
mov
test
sbb
and
mov
xchg
mov
mov
inc
pop
add
dec
sbb
jnp
ins
pop
data16
inc
pop
shr
arpl
and
fsubr
lea
retf
loop
les
or
mov
loope
adc
repz
mov
jp
iret
adc
add
add
imul
cmp
movs
repz
clc
pushf
adc
sub
mov
add
mov
cmp
adc
jb
lods
mov
fmul
push
dec
sbb
pop
xor
inc
mov
jbe
(bad)
jmp
jmp
jb
test
dec
inc
adc
or
data16
jnp
add
add
frstor
sbb
dec
jns
xchg
rol
dec
mov
aad
in
(bad)
ins
xor
mov
lahf
movs
cmc
(bad)
hlt
push
mov
les
jecxz
fs
test
or
cmp
mov
pop
mov
fsubrp
(bad)
jge
fidivr
add
mov
push
aad
(bad)
mov
adc
mov
add
jp
push
inc
dec
xchg
(bad)
sub
cmc
mov
enter
pop
enter
neg
jb
xchg
pop
and
fsubr
sub
(bad)
xor
jae
fcomp
inc
jne
fcomp
iret
outs
aam
pop
or
daa
lods
mov
pop
cmp
aad
push
add
in
mov
mov
and
mov
bsr
nop
or
add
and
outs
xchg
or
pop
ficomp
fld
shl
mov
mov
pop
sub
mov
mov
mov
inc
mov
int3
xor
and
mov
test
shr
mov
test
xchg
cmp
add
ins
cmp
fsub
sbb
xchg
jnp
or
shr
push
mov
cmc
push
cs
nop
jl
ror
fild
cmp
shl
(bad)
push
and
dec
into
idiv
loop
fadd
xlat
cmp
fwait
ins
push
aam
sti
out
cmc
push
imul
push
addr16
inc
pop
data16
jae
or
outs
pop
pop
pop
inc
or
add
mov
ins
cmp
sbb
sub
cmp
add
fs
or
fsubp
push
mov
(bad)
jg
fcmovbe
scas
mov
mov
pop
xchg
mov
sub
mov
lods
sar
mov
mov
or
scas
retf
aam
cmp
shr
pop
fld
add
add
adc
ror
adc
imul
addr16
test
push
aam
jbe
in
jo
xchg
pop
or
push
pop
bound
arpl
retf
mov
push
(bad)
jne
shr
loopne
fldenv
jp
push
int3
int3
mov
outs
repz
cmps
inc
xor
aam
call
jge
fld
adc
jmp
icebp
sti
mov
(bad)
lea
xor
mov
add
push
not
and
cmp
push
cmps
jns
cmps
mov
addr16
ins
cli
and
ins
xchg
mov
sbb
mov
push
mov
call
mov
inc
xchg
inc
mov
add
into
loop
or
shl
jno
test
out
popa
fidiv
call
imul
aas
out
cmp
mov
mov
adc
add
add
das
scas
adc
xchg
fwait
clc
shl
mov
fcmovnb
and
leave
aam
(bad)
inc
int
cmps
clc
add
xchg
outs
fs
(bad)
pop
repnz
imul
scas
sbb
or
outs
jo
sbb
test
pop
and
dec
pop
mov
xor
jecxz
mov
inc
add
add
js
or
out
xor
cwde
push
jl
cmps
ret
(bad)
pusha
mov
push
test
jno
ins
aam
(bad)
fimul
data16
push
lock
mov
inc
mov
(bad)
sar
mov
jmp
pop
mov
xchg
stc
mov
sub
xchg
or
dec
sub
add
add
arpl
fldenv
pusha
ins
inc
iret
push
xchg
sbb
mov
mov
jo
repz
sbb
ins
adc
ja
mov
dec
ret
dec
jo
add
jno
inc
mov
xchg
fist
dec
(bad)
call
(bad)
retf
inc
mov
or
stos
dec
inc
std
cmp
lahf
aas
or
fdiv
adc
jmp
or
mov
fdivr
pop
xchg
daa
push
test
xor
dec
xor
call
je
leave
ret
and
rcl
clc
xchg
mov
cli
lods
push
and
add
add
cmps
mov
loopne
and
inc
stos
gs
mov
fld
jmp
push
sub
ins
jmp
scas
lds
aas
out
push
or
sub
pop
and
repz
mov
outs
dec
jno
push
xor
sub
mov
sbb
xor
lahf
movs
sti
xchg
xchg
add
add
jns
mov
cmp
fs
jg
dec
mov
jge
xor
arpl
xchg
dec
cmp
stc
adc
inc
cmp
cmc
and
mov
popf
mov
dec
das
xchg
jnp
push
mov
or
(bad)
sub
mov
jns
stos
fadd
(bad)
mov
add
xchg
and
test
push
sbb
mov
jno
loope
push
arpl
pop
jle
mov
ficomp
lahf
jnp
pop
pop
jb
cmp
jns
ins
fisub
push
fwait
dec
cli
outs
cmps
inc
out
out
enter
rcr
fs
loop
cmps
aam
scas
mov
jmp
scas
dec
aas
int
mov
or
stos
xor
jl
sub
imul
data16
push
mov
pop
add
das
xor
mov
cdq
mov
arpl
jo
jle
xor
in
inc
std
fnstcw
ror
mov
mov
cli
out
nop
fstp
in
dec
js
cmps
inc
cmp
cwde
mov
ins
mov
leave
test
dec
dec
sbb
jae
lock
int
aas
push
mov
pop
or
mov
push
cmp
inc
jae
mov
lds
popa
test
rcl
xchg
jbe
cwde
lahf
imul
add
add
xor
cmp
xchg
sbb
inc
add
nop
pop
mov
shl
in
jmp
mov
jnp
stos
xlat
(bad)
aad
push
test
test
das
ret
imul
hlt
sub
outs
push
lods
pop
and
outs
je
das
mov
fistp
ror
out
out
aad
movs
in
mov
fbstp
mov
dec
mov
cmp
xchg
jmp
mov
daa
fist
cs
pop
jg
popa
cld
scas
enter
mov
dec
imul
mov
cmc
pop
cmp
ja
or
mov
mov
int3
mov
pop
lea
call
or
addr16
mov
pop
dec
inc
das
inc
je
and
and
int
push
test
sub
rcl
rol
ins
pop
in
pop
cmps
jo
popf
(bad)
dec
sub
sbb
cs
mov
cdq
xchg
add
add
pop
push
pop
jne
push
jle
cmp
rcl
adc
inc
lock
fwait
and
out
sbb
(bad)
lods
push
int
outs
call
xchg
cs
dec
test
inc
sub
ror
adc
xor
push
dec
movs
loopne
push
cdq
mov
add
(bad)
(bad)
cld
imul
stc
inc
mov
cld
sti
push
xchg
aas
and
jle
push
cld
mov
pop
imul
(bad)
jg
jp
call
inc
hlt
adc
adc
jbe
lea
lock
xor
stos
jmp
add
aaa
push
or
outs
push
retf
push
mov
pop
dec
(bad)
pop
pcmpgtb
and
pop
(bad)
xor
popa
(bad)
adc
repz
sahf
in
sbb
and
or
loopne
cmp
loopne
aad
loop
imul
in
sub
mov
lods
out
outs
cmp
ret
mov
mov
jmp
xor
movs
test
pop
xchg
js
inc
adc
add
and
std
ror
sbb
mov
xor
jle
mov
adc
repnz
or
inc
and
or
fisttp
pop
retf
outs
sub
sub
mov
mov
push
outs
jmp
rcl
add
add
outs
sub
leave
push
loope
dec
pop
and
jp
test
mov
out
mov
cmp
pop
int3
add
int
adc
hlt
or
xchg
xor
jae
rcr
push
sbb
mul
pushf
inc
scas
out
daa
cdq
ficom
add
aad
sub
xchg
in
jb
pop
jg
xchg
or
add
add
js
retf
adc
and
add
add
fiadd
std
rol
mov
sti
and
mov
mov
mov
idiv
pop
in
mov
add
jb
xor
xchg
adc
je
scas
data16
popf
push
mov
retf
aam
in
jecxz
mov
add
cmp
lea
call
das
push
jno
and
cld
xor
stos
xchg
nop
sbb
sbb
lds
fcos
sti
shl
sub
inc
jae
enter
or
test
sbb
hlt
test
retf
ss
or
mov
add
add
loop
aas
data16
bound
fistp
xchg
pop
mov
imul
pop
inc
sub
ins
les
mov
xor
out
mov
sbb
mov
cmp
xor
sbb
jae
cmp
adc
xchg
fcomip
popa
std
lods
cli
in
push
shr
sub
mov
out
mov
inc
dec
retf
adc
fisubr
dec
pop
bound
pop
push
pushf
inc
pop
fdiv
dec
pop
inc
xchg
jg
add
es
dec
adc
xchg
mov
stos
int
int
test
cmp
push
lahf
jp
add
add
cmp
xor
rol
scas
dec
in
jmp
fsubr
ds
dec
shl
xor
pusha
push
pop
sub
loop
sbb
mov
sbb
sbb
dec
int3
adc
xchg
push
call
enter
add
add
push
mov
(bad)
in
mov
jae
(bad)
js
rol
sbb
and
cmc
call
pop
cs
ins
xor
sti
pop
es
jmp
repnz
pop
cwde
lds
clc
mov
xchg
cmp
xor
ins
out
loope
ds
dec
aas
jae
add
add
jge
or
inc
pop
jae
mov
imul
jmp
dec
cli
push
or
mov
pop
cmp
daa
fst
mov
adc
ret
adc
push
sbb
jp
sbb
or
std
movs
mov
int
sbb
add
jl
movs
or
add
add
jmp
adc
and
sbb
scas
out
das
cmp
push
jbe
xor
inc
inc
jbe
les
repz
jmp
popf
cwde
inc
ror
out
mov
fmul
xchg
mov
bound
push
cmp
mov
cmp
adc
xor
pop
xchg
mov
call
jecxz
sub
test
add
(bad)
ror
loop
mov
pop
call
fadd
push
and
add
fs
sbb
push
mov
fnsave
fimul
mov
dec
lahf
cmp
xchg
adc
add
xchg
sub
jno
cmc
pushf
enter
lods
call
dec
jae
cmp
arpl
xchg
add
sbb
lock
inc
out
xchg
inc
in
cmp
lods
mov
ins
or
pop
outs
mov
mov
add
rol
pop
inc
or
aam
loop
pusha
mov
pusha
mov
clc
mov
call
jmp
xchg
push
mov
mov
lahf
mov
dec
dec
rol
jae
sbb
xchg
mov
fcomp
fmul
enter
stos
sub
or
lds
jns
sbb
xchg
xchg
in
(bad)
out
xchg
inc
cmp
and
mov
jns
shr
dec
mov
and
fneni(8087
pop
inc
js
repz
or
rcl
mov
loopne
dec
xor
push
out
imul
adc
mov
fwait
sub
mov
cmc
popa
push
jecxz
jae
dec
jle
pop
sub
mov
sbb
xor
mov
test
mov
retf
jg
push
pusha
xchg
push
fild
hlt
mov
mov
pushf
and
cdq
xor
push
jno
(bad)
ret
mov
sar
fistp
or
xchg
push
mov
pop
retf
(bad)
js
xor
scas
mov
stc
adc
jo
mov
int
retf
shl
adc
jecxz
imul
inc
or
push
cdq
add
and
and
les
pop
retf
scas
data16
lods
retf
stos
cmp
push
int
sbb
bound
add
add
imul
cmc
out
sti
xchg
cmp
in
xchg
push
dec
pop
mov
std
adc
add
popf
or
jle
nop
sar
or
xor
dec
pop
mov
or
js
push
lds
in
mov
(bad)
imul
pop
cmp
xor
mov
and
add
pusha
mov
dec
scas
jmp
xchg
aaa
in
jge
fld
dec
sub
(bad)
mov
in
lahf
rol
mov
jo
jbe
or
adc
add
add
js
xor
adc
inc
mov
int
adc
inc
push
sub
in
inc
ds
in
packuswb
mov
out
jmp
rol
and
int3
pop
shl
shr
mov
sbb
lahf
gs
and
push
xor
cmps
lods
fiadd
add
add
into
mov
push
leave
jge
sbb
push
bound
jbe
adc
dec
mov
mov
push
or
movs
cdq
arpl
cld
jno
ins
adc
pop
push
ja
mov
push
stos
(bad)
scas
mov
and
lea
shr
ins
dec
inc
std
in
and
test
add
stos
and
cmp
inc
(bad)
pop
inc
jmp
mov
scas
not
sub
into
outs
les
push
in
or
jne
ds
mov
dec
jge
adc
call
cwde
test
jmp
or
fisttp
cmps
add
ins
ret
ret
push
movs
dec
fmul
mov
jnp
xor
push
push
es
push
in
sub
inc
(bad)
pop
dec
lock
sbb
lock
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
sbb
and
sbb
adc
sbb
adc
sbb
daa
test
add
test
add
test
add
test
add
sbb
out
sbb
(bad)
sbb
(bad)
sbb
jmp
sbb
fld
sbb
test
sbb
cwde
sbb
cwde
sbb
cwde
sbb
movs
sbb
jne
or
lea
push
(bad)
popa
xchg
add
add
add
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
daa
sbb
daa
sbb
push
sbb
push
sbb
sub
sbb
sbb
sbb
jmp
sbb
fild
sbb
fiadd
sbb
fld
sbb
int3
add
add
sbb
lahf
sbb
lahf
sbb
scas
sbb
scas
sbb
mov
sbb
nop
sbb
nop
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
out
sbb
out
sbb
fiadd
jecxz
loope
adc
jno
adc
adc
adc
rol
add
adc
jno
adc
add
adc
rol
add
adc
add
adc
add
add
add
add
adc
xchg
test
add
xchg
add
test
add
adc
ja
adc
test
adc
mov
adc
xchg
test
add
adc
test
add
adc
pop
test
add
adc
add
test
add
add
add
xchg
add
adc
out
test
add
adc
inc
adc
jbe
adc
mov
adc
fild
adc
sbb
adc
cmp
adc
sti
jg
add
jg
add
adc
retf
test
add
adc
sbb
adc
jmp
adc
imul
add
adc
adc
adc
ret
test
add
jg
add
jle
add
adc
add
add
jle
add
jg
add
adc
arpl
adc
in
adc
xchg
test
add
adc
les
adc
je
adc
hlt
test
add
jle
add
add
test
add
add
adc
xchg
test
add
jle
add
add
jle
add
add
adc
mov
adc
cmp
adc
mov
add
adc
ins
jle
add
test
add
add
add
add
test
add
adc
cmp
adc
mov
jle
add
test
add
jle
add
test
add
jle
add
adc
clc
jge
add
jge
add
adc
enter
dec
jle
add
jle
add
jge
add
adc
loopne
adc
jo
adc
adc
add
jge
add
test
add
test
add
adc
add
adc
rol
add
adc
pusha
test
add
adc
add
jge
add
test
add
test
add
adc
add
test
add
adc
add
test
add
adc
add
adc
dec
test
add
adc
add
test
add
jge
add
test
add
adc
into
jge
add
test
add
adc
add
adc
out
test
add
adc
add
adc
sahf
adc
into
test
add
adc
fiadd
adc
add
adc
add
adc
retf
add
adc
dec
adc
mov
adc
push
adc
add
jl
add
jge
add
jl
add
adc
add
adc
push
adc
add
adc
add
jl
add
adc
add
adc
push
jge
add
adc
add
adc
add
jl
add
jge
add
jge
add
jl
add
adc
add
jge
add
adc
add
adc
add
jge
add
jge
add
jl
add
adc
add
adc
mov
jge
add
jge
add
jl
add
adc
add
sbb
push
sbb
push
(bad)
movs
sbb
inc
add
add
sbb
jmp
sbb
(bad)
jge
(bad)
cmp
sbb
(bad)
mov
jge
(bad)
cmp
(bad)
sub
(bad)
adc
add
jge
add
adc
push
adc
add
add
add
jle
add
and
cmc
and
int
loope
mov
and
test
and
add
loope
pop
loope
imul
push
loope
add
push
dec
(bad)
mov
and
sub
loope
add
loope
idiv
dec
and
mov
jg
(bad)
jmp
add
jecxz
add
in
add
int
adc
int
adc
pushf
call
adc
or
jmp
push
or
jmp
add
ud2
pop
jmp
jno
sbb
jmp
or
jmp
or
jmp
or
jae
or
jae
or
jae
or
jae
or
xchg
sbb
and
sbb
adc
sbb
pause
push
push
rcl
push
push
pause
push
push
rcl
push
push
mov
nop
push
push
mov
push
push
xchg
nop
push
push
mov
nop
push
push
xchg
nop
push
push
xchg
nop
push
push
arpl
push
push
jb
adc
push
(bad)
adc
bound
adc
push
(bad)
adc
push
(bad)
adc
and
adc
xor
adc
and
adc
repnz
movlps
adc
loop
adc
adc
or
pop
in
pop
adc
jmp
adc
retf
out
push
mov
fmul
pop
popf
fld
popf
fld
ins
fld
ins
fld
mov
fiadd
sbb
sbb
(bad)
sbb
add
add
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
fdivrp
sbb
fdivrp
sbb
(bad)
sbb
(bad)
sbb
fdivrp
sbb
(bad)
sbb
(bad)
sbb
loopne
sbb
loope
sbb
loopne
sbb
loope
sbb
add
mov
or
loopne
add
add
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
add
jno
or
loopne
sbb
fisttp
sbb
jo
or
shl
sbb
xor
or
and
or
lock
sbb
shl
sbb
lock
sbb
aad
sbb
fld
adc
or
(bad)
adc
ror
push
push
xchg
jb
jne
ror
je
or
adc
aad
adc
pop
adc
pop
adc
xlat
adc
xlat
adc
xlat
adc
fiadd
add
add
adc
cmp
adc
or
or
or
or
sti
aam
push
jmp
or
or
or
or
or
cli
xlat
or
jmp
sbb
fiadd
in
fiadd
in
fiadd
mov
fld
lods
fiadd
lods
fiadd
pushf
fld
sbb
sbb
add
add
sbb
add
sbb
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
fdivr
sbb
fdivr
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
(bad)
sbb
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
jne
sbb
lea
sbb
or
test
add
test
add
add
add
xchg
add
sbb
add
sbb
add
sbb
in
sbb
xlat
sbb
(bad)
sbb
jmp
sbb
int
sbb
rol
sbb
lods
sbb
mov
sbb
movs
sbb
sbb
test
sbb
aad
sbb
gs
add
add
add
sbb
push
sbb
push
sbb
add
sbb
push
mov
add
sbb
and
fcomp
call
jo
add
loopne
push
mov
in
or
jmp
test
add
xchg
in
sub
in
fadd
lds
add
xchg
movs
xchg
add
xchg
add
xchg
movs
mov
add
xchg
xchg
add
mov
xchg
pusha
add
and
gs
add
add
jo
and
mov
add
xchg
and
add
add
xchg
xchg
call
sub
aad
ins
add
xchg
in
rol
les
add
xchg
movs
xchg
jmp
xchg
call
xchg
movs
(bad)
lock
xchg
xchg
lea
add
add
add
add
and
gs
rol
jg
add
je
and
lea
add
xchg
(bad)
loopne
add
xchg
in
or
call
jg
add
test
in
sub
in
pushf
add
jle
add
test
movs
lea
add
lea
add
add
add
lea
movs
xchg
xchg
lea
lea
add
mov
mov
add
and
gs
add
pop
add
jb
and
mov
adc
lea
and
and
adc
mov
add
and
aad
outs
add
mov
add
mov
add
adc
add
mov
xchg
mov
movs
mov
add
adc
add
test
mov
data16
add
les
inc
cmp
add
add
and
mov
adc
mov
and
sbb
adc
mov
add
add
add
mov
add
adc
aad
cmp
jmp
mov
call
mov
add
mov
mov
add
mov
mov
add
add
jne
and
xchg
add
mov
and
fsub
call
mov
add
mov
add
fsubr
add
mov
in
xor
in
rol
(bad)
xlat
sbb
aad
inc
add
test
call
mov
add
xlat
adc
xchg
mov
mov
add
add
xlat
inc
add
imul
gs
add
or
push
mov
and
test
add
mov
and
xlat
pop
add
mov
add
mov
add
xlat
aaa
add
mov
in
daa
add
test
add
mov
movs
mov
add
mov
add
mov
movs
xchg
call
mov
jmp
mov
mov
push
add
pop
add
pop
add
into
add
pop
add
outs
add
mov
add
mov
and
(bad)
loope
adc
mov
add
(bad)
daa
add
mov
in
sub
in
(bad)
add
aad
add
mov
add
xchg
call
mov
add
aad
add
mov
add
xchg
mov
ja
push
mov
mov
add
mov
aad
call
jae
and
xchg
add
mov
and
(bad)
fdivr
adc
xchg
add
xchg
pop
aad
add
xchg
in
sub
in
popf
add
aam
add
xchg
movs
xchg
add
xchg
add
xchg
movs
mov
call
xchg
add
lea
xchg
pop
add
pusha
add
and
gs
add
add
je
and
(bad)
lods
add
xlat
xchg
add
(bad)
in
add
xlat
push
add
(bad)
adc
call
mov
add
(bad)
jo
in
xor
in
aad
les
inc
add
aad
add
(bad)
pusha
add
aad
add
(bad)
dec
add
or
gs
add
(bad)
push
add
lds
inc
xchg
add
js
and
aad
add
(bad)
cwde
add
aad
add
(bad)
inc
add
aad
add
aad
add
xchg
add
aad
add
aad
add
aam
add
xchg
add
aad
add
into
add
xchg
int
add
into
rol
jl
call
int
jmp
xchg
add
int
add
push
add
rol
inc
jp
add
outs
add
add
add
int
add
int
add
jp
call
int3
or
movs
int
inc
jp
add
int3
push
in
sub
in
fld
les
add
int3
cmp
movs
int3
cli
jmp
int3
(bad)
xchg
int3
pop
add
retf
stc
add
add
add
int3
add
gs
mov
mov
add
bound
gs
and
gs
leave
add
(bad)
call
jb
and
retf
test
add
int3
push
add
jp
add
retf
or
add
jns
add
retf
ins
add
retf
sub
add
add
add
js
add
retf
cmp
jmp
retf
(bad)
xchg
retf
pop
add
int3
test
xchg
retf
inc
add
add
add
retf
add
and
add
add
jne
and
into
cmps
add
retf
xchg
add
into
out
add
retf
push
add
retf
cmc
retf
push
mov
add
retf
in
xor
in
iret
add
xchg
add
retf
movs
retf
movs
int
add
retf
movs
retf
movs
int
add
retf
gs
gs
add
add
push
retf
gs
gs
add
or
push
retf
and
int
add
retf
and
int
add
retf
in
pop
add
leave
xlat
add
xchg
add
leave
addr16
leave
daa
add
int3
fwait
add
xchg
add
leave
ja
movs
leave
aaa
add
leave
pop
add
leave
push
add
test
call
leave
(bad)
jmp
mov
mov
add
pop
add
retf
add
pop
add
outs
add
enter
leave
lldt
leave
dec
add
xchg
call
add
in
or
movs
int
inc
xchg
add
enter
enter
(bad)
rol
les
cmp
movs
enter
(bad)
mov
xchg
enter
enter
enter
(bad)
repz
enter
enter
mov
add
and
gs
add
(bad)
call
jae
and
(bad)
mov
add
enter
(bad)
jecxz
add
sbb
test
(bad)
and
fadd
sbb
aas
lds
fld
mov
test
pop
xchg
pop
jnp
pop
add
sbb
test
add
add
pop
test
add
add
mov
sub
pop
sbb
pop
sbb
sti
sbb
add
jg
add
jle
(bad)
fdivr
(bad)
out
jle
inc
add
add
jle
jmp
jle
add
jle
add
jle
call
jle
add
loope
data16
jo
mov
xor
scas
gs
fbstp
jne
cmp
sub
xchg
jae
dec
cmp
jb
push
cmps
jno
jne
cmp
and
and
les
mov
sbb
adc
jle
add
fdivr
or
xor
jmp
jge
add
pop
add
jge
inc
xor
fnstcw
inc
jge
add
cmp
or
mov
cmp
add
or
and
cmp
cmp
in
sbb
loop
pop
add
cwde
add
sbb
cmp
add
test
adc
xor
sub
int
sbb
adc
test
add
test
add
test
add
test
add
test
inc
aad
sbb
aad
sbb
bound
jecxz
push
test
add
add
add
test
add
test
add
int
or
test
add
into
sbb
push
test
add
jae
add
or
and
add
test
add
(bad)
adc
cli
jge
add
ficom
push
out
jge
add
js
add
jge
add
and
scas
sahf
or
sar
add
and
iret
mov
sbb
std
ja
add
or
push
test
add
ins
and
mov
sbb
adc
or
xor
and
packuswb
adc
sbb
mov
and
or
sbb
cmp
popf
or
jge
add
and
aas
popf
or
xchg
jge
add
popf
or
cmp
cmc
ins
and
push
loopne
adc
jge
add
and
push
loopne
adc
sbb
cmc
jb
add
loopne
adc
sbb
and
fist
adc
sbb
popf
outs
and
(bad)
adc
add
ins
and
ror
adc
mov
and
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
jb
sbb
lods
jge
add
jge
add
add
add
sbb
add
jge
add
sbb
add
xor
xor
je
cmp
js
push
lds
add
sbb
add
jae
push
cmp
add
add
cmp
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
xor
jge
add
sbb
sbb
jae
xchg
cmp
xchg
cmp
add
jge
add
add
add
je
cmp
sbb
xor
dec
add
jbe
dec
add
cmp
idiv
add
jge
add
sbb
fdivr
add
jge
add
jge
add
jge
add
jge
add
jge
add
jg
add
jg
add
jg
add
sub
jg
add
jg
add
cmp
jl
jbe
jp
cmp
daa
jg
add
jno
dec
jg
add
cmp
jbe
sbb
dec
jg
add
push
test
add
jge
add
jge
add
jge
add
add
jae
mov
inc
add
jge
add
jge
add
jle
add
jge
add
jge
add
jge
add
jle
add
jge
add
jle
add
jle
add
jge
add
jle
add
jge
add
push
push
jle
add
jle
add
jle
add
ins
add
jbe
cmp
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
xchg
outs
add
cmp
mov
cmp
add
test
push
test
out
cmp
jmp
add
cmp
sti
test
add
sbb
enter
mov
cmp
add
test
test
add
test
rol
addr16
test
rol
add
test
add
pop
test
add
sbb
pop
test
add
add
test
test
test
add
test
add
cmp
push
mov
repz
inc
outs
cdq
mov
imul
mov
jns
jns
jo
push
movs
jb
mov
sub
leave
in
popa
pop
(bad)
adc
lock
fdivr
loopne
adc
in
sbb
push
test
repz
jbe
mov
add
add
add
inc
add
xor
sub
push
add
xor
cmp
jns
add
add
test
add
test
repz
je
push
jl
sub
and
cmp
adc
test
ret
test
test
add
add
jmp
test
ret
test
add
xor
sbb
push
xor
sub
jbe
imul
inc
add
add
sub
sbb
xchg
mov
xor
mov
sbb
inc
sbb
xchg
test
repz
add
add
test
add
test
out
push
add
add
sbb
retf
test
icebp
add
mov
inc
add
sbb
call
test
lea
sbb
push
add
sbb
cmp
sbb
jae
imul
cmp
add
xor
jne
jbe
inc
sub
test
out
ins
add
test
xchg
test
jp
cmp
mov
inc
add
sub
test
test
add
test
rol
cmp
retf
test
rol
jno
out
je
movs
sbb
iret
test
sub
sbb
ret
test
sub
sbb
push
fcmovu
dec
jae
dec
xor
xor
cmp
add
sub
test
lahf
test
add
test
add
jo
lds
push
mov
push
cmc
jg
add
jg
add
stc
cmp
add
jmp
imul
mov
jo
xchg
out
gs
icebp
inc
cmp
jnp
gs
loopne
ins
mov
call
fdivr
inc
in
outs
push
clc
sub
dec
loopne
fs
imul
sbb
rcr
jb
sti
in
je
repz
jb
test
add
out
jb
mov
addr16
fdivr
mov
std
jo
in
sbb
mov
in
cmp
fucomi
data16
in
addr16
in
cmp
pop
jle
add
add
pop
jle
add
push
add
push
add
add
pop
add
add
push
add
jle
add
jle
add
dec
add
jle
add
dec
add
jle
add
test
test
push
add
test
test
(bad)
test
test
rol
add
test
rol
jae
(bad)
jge
add
jge
add
jge
add
out
jae
jge
add
mov
jp
xor
fdivr
inc
sbb
repz
inc
add
test
aad
je
rol
add
add
push
test
add
out
inc
data16
inc
jae
jge
add
jae
jo
cmp
cmp
add
out
inc
arpl
jmp
mov
jge
add
test
leave
test
add
out
inc
(bad)
sar
add
scas
fdivr
imul
add
xchg
inc
addr16
scas
fdivr
sub
inc
je
scas
fdivr
dec
out
inc
jo
scas
fdivr
jmp
scas
fdivr
inc
test
fdivr
add
jge
add
add
fisubr
add
jb
adc
arpl
jge
add
jge
add
xor
jge
add
add
aad
sbb
add
push
add
mov
pop
add
mov
jae
mov
jae
je
cmp
jl
jbe
jp
sbb
mov
sbb
es
add
mov
add
sbb
inc
cmp
test
cmp
bnd
add
add
add
jge
add
jge
add
jge
add
sbb
adc
mov
add
sbb
std
mov
add
cmp
add
cmp
add
sbb
jno
cld
call
push
add
mov
add
jge
add
mov
add
mov
add
add
add
sbb
sbb
inc
cmp
test
jne
out
cmp
sti
jge
add
jge
add
jge
add
add
jge
add
sub
jge
add
xor
(bad)
cmp
add
sub
les
add
and
add
mov
add
mov
add
mov
add
sbb
daa
mov
call
mov
add
mov
add
sbb
xchg
and
add
sbb
add
cmp
add
add
add
mov
add
adc
sbb
daa
add
mov
(bad)
std
mov
add
and
add
and
jmp
sbb
ins
xor
sub
je
push
cmp
push
cmp
cmp
inc
cmp
inc
sub
sub
add
add
add
cmp
inc
xor
jge
add
jge
add
inc
add
jge
add
jge
add
inc
add
jge
add
sbb
push
mov
add
sub
add
mov
add
adc
mov
add
mov
add
sbb
add
or
and
add
jge
add
jge
add
mov
add
mov
add
mov
add
jg
add
mov
add
jg
add
mov
add
mov
add
mov
mov
jge
add
cmp
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
jle
add
jle
add
jle
add
jge
add
jp
add
jge
add
jp
add
jp
add
jp
add
jp
add
jle
add
jp
add
jp
add
jp
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
jp
add
jp
add
jp
add
jge
add
jge
add
jge
add
jle
add
jge
add
jge
add
test
js
cmp
mov
jno
push
test
push
test
ins
test
add
mov
add
mov
jge
pop
add
mov
add
mov
or
sub
sahf
jns
add
test
add
jns
add
jns
add
jns
add
test
add
mov
add
jns
add
mov
add
mov
or
and
add
add
add
test
repnz
mov
push
mov
add
add
cmp
add
test
test
add
test
add
test
test
add
add
cmp
cmp
add
test
test
jbe
jp
and
adc
xchg
lds
and
add
mov
add
jns
add
xchg
mov
add
test
add
mov
popf
jns
add
jns
add
jns
add
jns
add
xchg
add
xchg
test
add
xchg
add
xchg
push
and
xchg
add
add
add
xchg
add
xchg
add
xchg
add
sbb
sbb
cdq
test
mov
add
test
js
cmp
add
test
add
test
add
sub
cmp
mov
add
cmp
mov
cmp
stc
xor
xor
xor
cmp
xor
cmp
test
cmp
sub
jne
repz
cmp
test
cmp
in
test
test
add
add
test
jb
cmp
fadd
add
sbb
adc
test
add
xchg
add
xchg
add
jns
add
jns
add
jns
add
test
add
jns
add
jns
add
test
add
test
test
add
test
sub
add
test
sub
add
test
add
test
add
jns
add
jns
add
jns
add
jns
add
jns
add
test
add
test
add
jns
add
sub
test
add
test
add
test
add
jns
add
test
test
or
pop
add
jns
add
test
add
test
ret
add
add
add
cmp
add
je
jne
add
je
dec
cmp
cmp
jbe
xor
cmp
cmp
jbe
cli
test
add
pop
add
jns
add
jns
add
test
add
test
add
jns
add
test
add
test
add
jns
add
test
add
add
add
test
mov
inc
add
jg
add
jg
add
jg
add
sub
jns
add
test
add
cmp
mov
sub
sub
gs
add
jg
add
jg
(bad)
fnstcw
add
jg
add
test
icebp
test
add
add
test
add
sbb
adc
push
add
stos
sub
push
stos
and
adc
stos
daa
add
adc
cmps
adc
and
add
jle
add
jle
add
add
je
dec
jle
add
jle
add
stos
sub
push
stos
and
stos
pop
add
test
add
and
add
adc
stos
and
inc
test
jmp
test
add
jge
add
test
test
add
add
add
stos
xor
sub
add
test
sbb
add
test
and
push
test
sbb
xchg
test
fdivr
test
(bad)
fld
add
jge
add
jge
add
inc
add
jge
add
test
push
add
test
and
adc
and
add
adc
test
push
add
test
add
je
jb
add
cmp
imul
add
cmp
add
cmp
inc
test
add
add
cmp
test
dec
test
test
add
jge
add
jge
add
jae
jo
push
add
jge
add
test
add
cmps
sub
push
sbb
scas
sbb
sbb
pop
add
and
add
add
add
xor
add
sub
call
cmps
pop
add
cmps
cld
jmp
sub
xchg
cmps
xor
cmps
sub
sub
adc
adc
int
sbb
jmp
jge
add
push
test
add
jge
add
add
mov
cmp
enter
in
sbb
pop
cmps
sbb
sub
sub
cmps
sub
adc
sub
and
add
push
je
jbe
push
cmp
js
push
jne
push
xor
ins
add
and
sbb
je
push
add
cmps
sbb
adc
add
daa
cmps
pop
add
jge
add
sbb
aad
sbb
sbb
mov
jge
add
xor
jge
add
sbb
add
sub
add
adc
cmps
xor
xor
add
jge
add
jae
pop
xor
xor
cmp
cmp
sbb
push
sub
movs
sbb
push
movs
sub
movs
sub
movs
push
add
sbb
cwde
jge
add
jge
add
jge
add
jge
add
jge
add
sbb
rep
push
add
movs
sub
add
movs
sub
cmc
and
movs
and
add
and
add
xor
add
cmp
add
movs
pop
add
movs
push
add
xor
xor
xor
cmp
cmp
sub
and
push
sbb
mov
es
add
add
add
aad
sub
movs
sub
movs
cld
call
movs
push
add
jge
add
jge
add
jge
add
jg
add
jg
add
mov
pop
add
movs
sub
mov
push
add
jge
add
cmp
xchg
jg
add
and
mov
sbb
jl
xor
cwde
sub
sbb
sub
push
jg
add
lds
xor
retf
sub
jnp
inc
ss
jg
add
jle
add
jg
add
jle
add
sub
in
sbb
(bad)
jge
add
add
(bad)
jmp
jle
add
jle
add
jae
(bad)
jle
add
jle
add
cmp
gs
add
out
pop
xor
lds
sbb
imul
inc
inc
iret
pop
pop
out
outs
pop
test
jne
xlat
(bad)
jle
add
fsub
adc
add
jbe
and
add
jge
dec
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
inc
add
cmp
push
test
push
test
test
test
add
jae
dec
test
add
jp
dec
test
inc
test
test
add
idiv
clc
test
xchg
test
test
add
jae
jmp
add
jno
cmps
test
test
add
in
pop
gs
sbb
ret
add
test
rol
add
test
movs
test
add
jns
xchg
test
add
fdivr
mov
outs
gs
js
xchg
test
add
test
add
test
test
add
test
inc
test
je
sbb
imul
inc
arpl
fdivr
icebp
in
outs
jbe
sub
mov
test
test
and
add
add
dec
test
add
cmp
retf
test
xlat
cmp
test
hlt
sub
and
lds
cmp
call
cmp
push
cmp
cmp
jae
push
sub
jb
out
jae
inc
sbb
aad
jae
out
ins
add
test
mov
add
add
test
mov
jb
mov
test
add
in
cmp
out
fdivr
add
sub
add
sbb
test
add
add
add
js
mov
js
dec
jmp
sbb
xor
jns
cmp
cmp
repnz
in
jae
call
sbb
cmp
jo
in
jae
call
test
add
jmp
ja
add
jne
mov
addr16
test
add
sbb
add
repnz
out
jae
call
mov
sbb
mov
ja
js
outs
gs
sub
ret
add
ja
sub
sub
and
addr16
cmp
and
jae
stc
test
xchg
sub
rol
add
ja
lods
test
lods
test
retf
test
in
sbb
int3
jmp
je
sar
xlat
mov
cmp
out
inc
add
repnz
xchg
mov
jne
jp
jne
data16
cmp
and
js
jne
fdivr
cmp
outs
push
mov
jne
cmp
jo
test
cmp
cmp
addr16
sar
out
jbe
and
jns
jecxz
ins
js
sbb
js
outs
xlat
movs
data16
jne
mov
stc
cmp
and
call
cld
gs
rol
xlat
loop
fs
fild
add
add
clc
lock
gs
out
jns
jl
addr16
jmp
gs
jbe
and
jns
jecxz
ins
cmp
add
jg
add
jg
add
cmp
cmp
add
jle
add
jg
add
test
push
jg
add
jne
out
ins
add
test
add
add
sbb
movs
in
gs
icebp
sub
fistp
add
out
je
jle
add
jg
add
jg
add
jg
add
and
mov
jo
call
fdivr
pop
repz
add
jne
xchg
jle
add
in
gs
jle
add
jns
adc
sbb
adc
std
jo
stc
repnz
cmp
js
jo
(bad)
out
gs
cmp
jle
add
jo
stos
jecxz
cmp
add
jle
add
test
mov
jge
add
test
add
test
jb
jns
js
push
add
jge
add
jbe
xor
jns
test
add
std
jo
call
loopne
cmp
ja
clc
fisubr
mov
jno
xchg
jge
add
jge
add
cmp
cmp
mov
addr16
jge
add
add
add
test
out
jae
leave
jge
add
jge
add
test
add
test
add
cwde
sub
rol
add
cwde
fdivr
jge
ins
add
test
xchg
test
add
test
add
sbb
push
test
add
test
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
jge
add
push
call
jge
add
jge
add
test
jmp
cmp
sar
add
xor
mov
xor
movs
sbb
movs
add
add
sbb
xchg
cld
jmp
xchg
sub
mov
fdivr
out
jno
dec
jmp
mov
sbb
add
jge
add
and
sbb
mov
add
jge
add
cmp
push
sub
mov
xor
add
les
add
xor
add
sub
xor
and
imul
sbb
mov
cmp
inc
xor
sbb
ja
cld
(bad)
call
lock
xlat
mov
fdivr
lock
add
jge
add
add
add
jge
add
jge
add
jbe
test
hlt
inc
cmp
in
inc
int3
div
sar
add
sbb
xlat
sbb
add
sbb
outs
jle
sbb
sbb
sbb
add
ins
gs
sbb
ins
inc
fild
cmp
hlt
fdivr
cmp
inc
ins
dec
fbstp
sbb
add
push
add
cmc
ins
popa
jae
fdivr
sbb
ins
test
fdivr
xlat
jge
add
jge
add
sbb
shr
inc
outs
aad
sbb
repz
push
add
xchg
sbb
push
xchg
push
add
xchg
fdivr
mov
imul
cmp
add
push
movs
sbb
les
sbb
gs
sub
xchg
fdivr
fbstp
cmp
fdivr
jae
push
add
xchg
xor
sub
add
jge
add
sbb
mov
js
shl
jns
adc
call
pop
gs
sbb
mov
fisub
in
sbb
rcr
addr16
jg
add
xchg
fdivr
lds
sub
xchg
sbb
movs
jg
add
sbb
add
xchg
sub
jg
add
addr16
gs
add
add
add
jg
add
jge
add
jge
add
fidiv
adc
jge
add
jg
add
jmp
jne
loope
inc
fdiv
mov
hlt
ja
in
sbb
(bad)
fdiv
clc
in
inc
push
cdq
jle
add
push
jno
mov
addr16
bnd
push
jle
add
fdivr
aaa
out
add
jle
add
cmp
push
jle
add
add
ins
add
jge
add
jge
add
push
js
addr16
jge
add
jle
add
jp
add
jp
add
mov
mov
jp
add
add
add
jp
add
mov
add
add
es
icebp
inc
ins
clc
fbstp
xlat
test
add
test
add
add
test
push
test
add
sbb
sub
dec
add
push
add
test
add
push
sbb
dec
mov
add
ins
xchg
lahf
shl
scas
and
test
add
inc
add
push
cmps
test
cmps
test
add
test
aad
inc
add
test
mov
imul
test
test
(bad)
stc
test
xchg
test
xchg
test
add
test
add
test
add
add
test
add
add
cmp
add
and
jmp
test
adc
add
test
add
test
mov
add
test
xlat
test
(bad)
jns
inc
add
test
add
sbb
xor
add
test
xlat
xor
and
jmp
add
test
add
sbb
ret
add
add
add
sub
xor
and
jmp
add
cmp
sub
test
add
test
mov
add
test
add
add
xlat
test
(bad)
jns
inc
add
test
add
sbb
xor
je
mov
test
xlat
xor
and
jmp
add
test
xchg
sub
sbb
ret
add
add
add
sub
xor
and
jmp
add
xor
add
test
out
cmp
add
das
add
test
mov
ds
test
test
cmps
test
dec
test
(bad)
test
out
sub
aad
sbb
add
je
clc
add
xchg
add
add
add
xchg
and
add
inc
add
add
cmp
add
xor
sub
out
and
cdq
test
xchg
test
rol
add
test
mov
cmp
mov
cmp
mov
push
and
cmp
adc
sbb
mov
sbb
lds
sbb
mov
adc
add
sbb
dec
sbb
sbb
jns
inc
add
pop
add
inc
add
sbb
in
jmp
je
loope
cmp
mov
test
lea
sbb
adc
jno
mov
jo
mov
jne
repz
add
jg
add
xor
test
clc
jg
add
jg
add
fdivr
js
outs
addr16
add
retf
test
jns
xor
mov
jg
add
add
jle
add
inc
add
add
jle
add
add
test
add
test
xchg
test
xchg
test
add
test
dec
test
add
ins
add
test
jle
add
jle
add
add
add
icebp
ja
enter
in
sbb
mov
je
hlt
jle
add
jle
add
ins
add
and
xor
add
jle
add
jle
add
jno
xor
add
jle
add
test
xchg
add
rol
add
add
inc
add
ins
add
test
jge
add
test
add
jle
add
popf
jo
lock
add
jge
add
je
je
add
test
js
sub
xchg
test
add
test
add
add
add
out
jae
cmp
jne
cmp
jae
cli
popf
dec
inc
(bad)
addr16
jne
call
jo
sub
ins
test
cld
dec
fcomp
cmp
add
movs
cmp
popa
fldpi
jb
add
add
add
idiv
ins
sub
add
outs
movs
ja
js
jo
and
fs
out
jne
jecxz
ins
cmp
(bad)
cmp
outs
out
cmp
popa
fldpi
jb
test
fs
jo
imul
inc
and
cld
fdivr
call
bnd
xlat
call
js
xchg
jo
mov
fdivr
adc
adc
test
xchg
js
sub
or
sahf
ret
jne
in
sub
push
ds
mov
xchg
fist
out
nop
loopne
adc
jmp
and
movs
sub
lds
add
add
and
xchg
cmps
loop
sub
xchg
mov
sti
mov
sbb
jnp
xor
loop
fwait
pop
pop
(bad)
lea
mov
sub
jbe
xlat
inc
int3
aam
inc
fadd
mov
(bad)
fiadd
cs
sti
cmps
jnp
push
retf
mov
dec
adc
or
sub
mov
jne
pop
ja
and
dec
sti
dec
or
jns
sbb
aad
inc
push
out
push
stos
xor
retf
bswap
lahf
dec
or
ret
fld
mov
cmc
mov
push
test
mov
lods
xor
ret
xchg
sub
jl
fcomp
aam
add
add
stos
mov
loop
(bad)
aas
aam
aaa
sbb
cs
sahf
repnz
das
sub
sbb
xchg
aas
or
cli
nop
int3
jle
aaa
out
test
push
psubusw
fldenv
out
dec
imul
fisubr
mov
mov
and
add
mov
int3
mov
mov
pop
scas
daa
clc
jo
pop
test
mov
jne
repz
push
pop
jmp
out
dec
xchg
jmp
jmp
sub
inc
cs
jo
mov
push
cmc
pop
xchg
cmp
sub
xchg
imul
cmps
pushf
ja
clc
push
mov
or
fimul
mov
clc
loopne
jo
sub
test
imul
pop
fistp
push
sub
ret
ret
cmp
cmp
popa
not
dec
icebp
sub
add
jecxz
mov
aam
ret
push
mov
movs
popa
jle
sbb
loopne
cmp
(bad)
outs
jge
add
jo
ret
movs
sub
loope
scas
(bad)
adc
mov
xor
and
fstp
ja
xchg
xor
mov
inc
cmps
and
cmc
push
les
adc
pop
aad
aam
rcr
aad
and
xchg
addr16
sbb
or
sbb
js
adc
inc
clc
push
lods
and
sub
adc
push
dec
ss
loop
fs
inc
pop
add
arpl
fdivr
fs
test
cwde
push
pop
push
enter
(bad)
push
add
sub
(bad)
cmp
and
adc
das
hlt
pop
adc
sub
out
dec
in
mov
stc
rcl
stos
int
cmp
jge
mov
dec
(bad)
jmp
xchg
iret
fidivr
les
dec
pop
not
jmp
inc
pop
add
add
add
int3
sbb
sbb
xor
push
pop
sahf
ss
dec
clc
fsub
adc
bound
adc
shl
adc
mov
inc
xor
imul
(bad)
(bad)
xor
jmp
add
sub
stos
xor
push
mov
pushf
pop
loope
pop
add
pop
xor
iret
xchg
mov
dec
mov
or
repnz
(bad)
out
ss
cmp
(bad)
mov
rep
mov
stos
push
std
or
std
adc
xchg
pop
int
pop
or
call
ins
dec
mov
mov
out
inc
std
cmp
mov
lods
mov
xor
sub
xchg
imul
enter
add
pop
cmp
cwde
imul
sub
mov
xchg
or
ror
add
stos
pushf
imul
repnz
xor
outs
jge
cmc
rol
cwde
pop
inc
aad
or
add
add
je
and
jns
aaa
mov
sub
in
push
cmc
(bad)
pusha
jmp
lods
clc
xchg
ror
push
aaa
repz
sub
jae
cmp
outs
(bad)
addr16
fmul
push
popa
xor
xchg
cmp
sub
dec
mov
sub
in
add
add
mov
jp
xor
adc
jmp
xchg
nop
ins
popf
rol
repnz
mov
call
dec
in
or
add
mov
mov
sub
cli
cmps
pop
arpl
cmc
into
outs
ret
push
call
sub
jecxz
jmp
add
add
rol
cmp
aaa
add
inc
loop
pop
das
idiv
or
jl
call
pop
or
jge
pop
movs
call
or
push
sti
aaa
mov
dec
mov
push
cmps
popa
test
inc
(bad)
inc
and
lods
pop
jecxz
cmp
add
add
adc
stc
sbb
loope
xchg
push
(bad)
push
cmp
adc
mov
addr16
add
inc
(bad)
and
out
idiv
pop
call
(bad)
bound
test
leave
mov
fisttp
dec
jbe
stos
push
mul
arpl
cld
pop
add
xor
pusha
ds
sbb
mov
add
sub
loopne
in
mov
or
in
mov
push
retf
(bad)
cld
push
fnstsw
cmp
mov
and
and
scas
call
cmp
lds
ret
xchg
xor
cmc
daa
icebp
inc
aad
sub
push
pop
pop
jge
dec
adc
(bad)
xor
add
repz
js
fstp
mov
jae
sub
sti
push
mov
sub
mov
inc
in
ins
push
cld
mov
test
dec
xchg
inc
in
leave
sti
stos
mov
aad
xor
adc
add
inc
lods
mov
add
test
add
sbb
pop
jmp
je
adc
sbb
enter
jmp
mov
pop
shl
push
xor
sbb
(bad)
xor
xchg
call
sbb
pushf
jmp
jecxz
xchg
mov
inc
xchg
xchg
lods
push
dec
clc
pop
fld
movs
and
add
ret
icebp
ins
sar
outs
shl
loop
cmp
in
push
fs
(bad)
push
mov
loopne
sbb
mov
(bad)
mov
popa
lock
in
punpcklbw
add
scas
dec
inc
fwait
mov
(bad)
cdq
test
hlt
icebp
and
out
jmp
jecxz
pop
add
aaa
(bad)
inc
add
add
pop
inc
jno
and
push
repz
call
leave
xchg
or
sbb
ins
fucom
movs
inc
jbe
jp
movs
pop
inc
data16
loope
lahf
or
push
icebp
test
adc
or
fild
test
mov
push
retf
repz
adc
xchg
cmp
sahf
push
ret
xchg
sbb
dec
or
sub
in
(bad)
dec
xchg
xchg
inc
jge
xchg
call
mov
push
inc
(bad)
sbb
jne
pop
add
push
inc
add
xchg
aam
xor
push
xor
sub
mov
mov
lds
(bad)
into
xor
(bad)
pushf
scas
mov
cli
bound
mov
add
popf
pop
fwait
movs
in
mov
cmp
stc
push
test
cmp
xchg
dec
rcl
xor
sbb
inc
inc
call
test
xchg
mov
fld
ss
retf
sub
jmp
mov
pop
mov
xchg
test
and
dec
sbb
mov
ins
aam
jecxz
jmp
mov
jbe
push
xchg
add
jle
ins
ja
and
and
dec
movs
add
ins
das
adc
push
push
test
add
cmp
mov
mov
cmp
fucomp
jne
retf
cmp
cmc
mov
mov
lds
inc
jae
fdiv
in
imul
arpl
or
jle
leave
popa
xor
loopne
outs
xchg
cmps
cmp
rcr
add
sbb
mov
sbb
ja
cmp
test
je
xchg
ins
imul
add
add
or
cmp
test
push
add
je
fdivr
test
fdivr
mov
ss
jbe
inc
jge
add
jbe
push
jne
inc
jge
add
sbb
add
sbb
add
jne
add
sbb
add
jbe
add
add
add
jge
add
cmp
add
je
cmps
and
add
sbb
outs
sub
jns
push
lock
and
push
cmp
jns
cmp
outs
add
jge
add
jge
add
je
xchg
jge
add
xor
add
jge
add
lds
outs
fcmovu
sbb
aam
jb
loopne
push
mov
sbb
rol
je
repnz
mov
sbb
popa
or
cmp
push
cmp
xor
xor
cmp
or
imul
add
push
add
data16
sbb
sbb
add
add
jge
add
jge
add
ins
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jg
add
jg
add
jg
add
jns
lea
add
data16
jg
add
jg
add
je
dec
jg
add
jg
add
jle
add
sbb
ss
add
jg
add
jge
add
jge
add
add
jge
add
jge
add
jge
add
jne
fidivr
add
jle
add
jle
add
jge
add
jle
add
jle
add
jle
add
jge
add
aas
add
jle
add
jle
add
aas
add
sbb
ja
cmp
cmp
add
ins
add
sbb
mov
cmp
mov
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
inc
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
add
push
test
add
test
add
test
add
sub
add
add
test
add
test
lds
cli
push
test
test
add
test
add
test
add
test
add
test
add
test
out
test
in
test
test
add
test
add
test
add
sub
test
add
test
add
push
add
test
sbb
add
push
add
test
add
add
repnz
les
dec
add
test
jl
ds
test
mov
add
test
mov
xor
sub
and
sub
push
push
pusha
add
add
mov
xor
sub
lea
inc
sbb
push
dec
and
dec
push
xlat
dec
push
mov
jns
mov
cmp
ins
nop
iret
jne
in
imul
sbb
in
es
test
cmp
fnstcw
data16
sbb
and
sub
or
sub
add
cmp
js
cmp
xchg
sbb
jge
dec
js
stos
inc
jne
leave
dec
inc
push
test
ds
sbb
dec
inc
dec
(bad)
add
ins
push
cmps
scas
cmp
mov
dec
fdiv
pop
jb
into
pop
(bad)
lds
ja
sbb
dec
dec
and
out
data16
and
test
sub
mov
jecxz
xor
adc
cmp
movs
mov
xor
sub
sbb
add
push
add
cmp
movs
sbb
add
sbb
add
or
add
add
sbb
add
test
rol
data16
test
add
test
add
test
add
sbb
mov
test
ret
add
test
add
sub
sub
and
mov
add
lea
arpl
xor
data16
cmp
xor
outs
add
aas
add
sbb
dec
xor
and
xor
jns
hlt
test
test
test
jae
jae
aas
add
test
mov
test
(bad)
test
add
add
add
test
aad
sbb
int
jno
enter
ret
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
outs
add
sbb
dec
jg
add
ja
gs
add
test
call
test
xchg
sbb
jns
jne
fiadd
jne
mov
cmp
cmps
test
add
test
mov
test
test
ret
test
mov
jle
add
jle
add
add
sbb
jns
aas
add
jno
pop
jle
add
sbb
and
jle
add
jns
cmp
add
jle
add
jle
add
jle
add
add
test
hlt
test
test
add
test
jbe
cmp
jno
cmp
aad
push
add
jle
add
test
bnd
add
jge
add
add
add
imul
in
data16
test
add
test
test
dec
test
add
sbb
and
test
add
cmp
dec
test
test
int
sub
test
jge
add
jge
add
jge
add
add
add
jge
add
jge
add
ja
adc
jge
add
jge
add
jge
add
test
add
test
aad
sbb
jmp
test
movs
test
add
test
add
jge
add
test
xor
add
add
test
add
test
xor
add
test
jmp
jge
add
jge
add
jge
add
jge
add
jge
add
pop
add
jge
add
jge
add
and
aad
sbb
enter
mov
sbb
call
add
add
sbb
xchg
xor
cmp
cmp
push
sub
cmp
xor
xor
cmp
xor
jbe
inc
cmp
cmp
data16
jge
add
jge
add
jge
add
sbb
test
add
sbb
(bad)
jge
add
jge
add
jge
add
and
jge
add
sbb
jge
add
cmp
out
sbb
add
add
cmp
mov
ins
add
aas
add
sub
xor
or
xor
xor
cmp
dec
add
add
aas
add
sbb
mov
cmp
clc
jge
add
jge
add
into
jb
mov
ins
jae
les
mov
jge
add
rep
xlat
popf
jne
mov
popf
cmp
loopne
data16
cmp
les
(bad)
sbb
mov
outs
xchg
mov
jae
jp
cmp
loop
add
push
add
xor
xor
aas
add
sbb
fadd
data16
jge
add
sbb
je
into
ins
outs
out
jne
jle
aas
popa
cmps
into
jb
cmps
les
je
jge
add
add
add
sbb
pop
gs
add
gs
gs
add
sub
add
gs
(bad)
fiadd
pop
add
fs
add
jge
add
jge
add
fs
add
fs
add
sub
fs
jne
and
fs
add
sub
fs
add
and
add
jge
add
je
cmp
add
jge
add
jg
add
jge
add
jge
add
jg
add
sub
jg
add
jg
add
jg
add
jg
add
add
add
ins
ss
mov
je
dec
into
ins
sub
jae
cmp
ins
imul
out
ins
fldcw
ins
push
xchg
(bad)
sub
retf
mov
data16
jae
mov
sbb
lods
leave
ins
jo
mov
add
jle
add
sbb
dec
mov
push
push
add
dec
push
or
cmp
fidivr
data16
jae
mov
ja
or
jb
retf
sub
arpl
lea
xor
test
das
push
jle
add
jle
add
sbb
xlat
jle
add
sbb
call
jle
add
jb
adc
jge
add
add
and
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
xchg
test
add
pop
add
test
xchg
test
add
test
test
add
cmp
add
sbb
xor
ja
test
add
test
push
test
add
test
and
test
test
add
imul
dec
lds
jne
mov
test
repz
rol
je
les
sbb
push
in
daa
jmp
jmp
add
add
js
cmp
sar
push
jns
test
jb
xor
aas
popa
dec
mov
cmp
sbb
push
jecxz
daa
fldenv
gs
jae
stc
shr
out
jb
mov
cmp
sar
fisub
outs
jae
movs
ins
imul
add
add
shl
add
mov
sbb
cmps
in
daa
leave
mov
jbe
clc
mov
jne
(bad)
arpl
gs
jae
mov
ins
and
ins
and
mov
popa
sub
cmp
es
daa
dec
mov
jns
dec
out
cmp
inc
call
aas
and
in
jb
repnz
outs
cmp
je
jmp
jb
fldenv
cmp
cmp
loop
jne
call
cmp
jmp
jb
in
gs
out
daa
jmp
mov
cmp
jecxz
jne
jmp
add
jl
cmp
dec
mov
jns
cmp
ins
gs
sbb
cmp
je
cmp
outs
gs
sbb
in
out
cmp
out
jb
iret
xchg
cmp
push
cmp
push
je
xchg
ins
jb
out
cmp
gs
lods
push
and
jmp
cmp
jns
fld1
cmp
scas
jae
cli
mov
aas
and
mov
add
jb
(bad)
xchg
cmp
push
cmp
jmp
inc
mov
sub
sar
outs
jmp
scas
ins
and
mov
jb
movs
ins
imul
sbb
add
mov
imul
xchg
jb
js
ins
imul
scas
jae
mov
loopne
addr16
mov
cmp
mov
popaw
and
add
data16
ins
push
ins
out
ins
and
out
dec
xor
add
add
add
in
outs
bound
cmp
mov
outs
dec
mov
popaw
repz
add
movs
jae
(bad)
je
loop
outs
jmp
data16
fbstp
mov
ins
cs
loopne
addr16
mov
cmp
movs
dec
dec
shl
add
hlt
in
cmp
add
data16
ins
push
ins
in
ins
and
ins
and
in
ins
and
loopne
cmp
add
outs
(bad)
jecxz
outs
call
lahf
dec
dec
inc
mov
jb
in
cmp
add
movs
jae
(bad)
je
loop
outs
jmp
data16
jecxz
add
add
mov
and
int3
jb
repz
add
mov
push
lods
out
and
fistp
dec
ror
sub
loope
add
loope
outs
push
sahf
push
outs
pop
jo
and
jb
cmp
add
je
dec
sahf
jae
test
jne
jne
jne
jmp
data16
in
gs
jne
mov
ins
ss
in
jne
movs
jae
mov
jne
mov
jne
fneni(8087
data16
jecxz
gs
leave
jne
mov
jne
add
add
jb
dec
push
cmp
lods
aas
jb
leave
jne
(bad)
cwde
xor
scas
cmp
jmp
add
add
addr16
jne
scas
aas
jae
fisub
xor
dec
popa
xor
cmp
in
jb
jg
cmp
push
cmp
aas
jb
leave
jne
(bad)
nop
xor
mov
imul
loope
js
fidivr
outs
sub
and
loop
je
mov
add
jb
call
push
cmp
mov
outs
shl
aas
jb
jmp
xchg
mov
jne
scas
aas
jae
jmp
test
outs
gs
test
add
jmp
jg
cmp
push
cmp
aas
jb
enter
nop
xor
in
and
cmps
xor
jmp
je
popf
data16
jae
js
cmp
out
arpl
mov
pop
add
sbb
pop
add
cmp
jge
jne
cwde
loopne
outs
mov
cmp
mov
aas
jb
add
add
loop
and
jne
test
jb
repnz
ss
cmp
fild
add
add
mov
gs
mov
jb
popf
push
xchg
mov
sub
fidiv
mov
ins
and
mov
popa
cmps
mov
jns
loope
jo
loop
gs
mov
add
imul
fidiv
out
jae
fdivr
pop
test
bound
call
data16
fnsave
xchg
sbb
and
imul
sahf
std
pop
xor
cmp
mov
jns
mov
aas
arpl
in
outs
adc
in
jae
fistp
pop
mov
cmp
jmp
arpl
popf
ja
lock
jb
fstp
ins
mov
in
jae
fistp
pop
repnz
cmp
jo
cmp
mov
arpl
jns
jns
test
jb
jp
jae
jne
jne
test
cmp
jmp
jp
sbb
cmp
cmp
loope
je
popf
push
and
popf
je
xchg
mov
push
call
popf
aas
jae
loopne
gs
mov
jno
mov
arpl
mov
jb
fstp
and
mov
jae
add
add
scas
outs
gs
and
jae
mov
outs
jp
sbb
test
outs
xor
cmp
mov
popaw
inc
les
jb
mov
jns
dec
mov
je
mov
aas
and
(bad)
and
and
mov
je
popf
push
add
add
add
mov
outs
retf
outs
bnd
jo
out
inc
jne
ret
jne
enter
rcr
jb
jmp
mov
outs
jae
cmp
fstp
and
cmp
ret
xchg
cmp
jne
outs
jb
fidivr
jo
call
cmp
call
add
add
aas
and
mov
popa
in
cmp
lods
outs
gs
and
jae
stos
jae
jp
cmp
mov
cmp
(bad)
cmp
in
sbb
xchg
fdivr
call
jmp
jns
in
cmp
lods
outs
gs
and
jae
lods
jae
jp
cmp
(bad)
cmp
jae
xor
cmp
jae
test
pusha
jo
fld
mov
sub
dec
jle
add
xchg
sbb
in
fistp
out
aas
arpl
jmp
jo
jbe
sbb
fcomp
jno
shl
ja
cmps
call
jb
lock
sbb
int3
fild
shl
repnz
jae
ret
aas
add
lods
jb
(bad)
fidivr
fs
cmp
out
jae
mov
sbb
sub
mov
arpl
cmp
mov
jo
cmp
push
shr
jne
out
movs
ins
jns
call
push
xchg
lods
cmp
out
jne
mov
cmp
loop
imul
aas
outs
mov
test
add
loop
and
in
jns
mov
outs
retf
and
mov
fs
mov
popa
repz
and
mov
add
cmp
xchg
cmp
(bad)
outs
cmp
aas
je
test
add
push
push
stos
cmp
aaa
stos
ins
and
jb
leave
lods
cmp
mov
popa
jmp
jecxz
popa
icebp
lods
cmp
jbe
cmp
mov
aaa
and
jecxz
and
(bad)
(bad)
loop
imul
sbb
int3
jecxz
popa
mov
cmp
shr
add
ins
xlat
loop
das
icebp
out
addr16
call
push
xchg
lods
cmp
jns
imul
imul
loope
popa
inc
lods
cmp
icebp
stos
ins
gs
je
xor
jb
fldcw
aas
add
scas
push
icebp
lods
cmp
mov
gs
jne
js
sbb
jl
push
shr
je
scas
jns
add
in
jb
loopne
arpl
test
add
aas
arpl
mov
cmp
fnstcw
movs
sbb
mov
arpl
je
push
out
push
ss
sbb
cmp
jns
lock
add
add
je
loopne
gs
aas
jb
lods
jne
sbb
imul
cmp
mov
jb
sbb
mov
jae
jl
jb
(bad)
ins
mov
arpl
mov
fldenv
repnz
sbb
out
data16
cmp
scas
jne
in
sbb
sti
lods
je
mov
data16
add
add
mov
gs
cmp
in
add
fnstenv
sub
arpl
gs
inc
push
sbb
inc
sbb
add
sbb
push
add
and
sbb
aas
pusha
inc
fmul
xor
aas
aas
fld
add
add
aas
push
jb
xor
jb
aas
aad
sbb
aad
xchg
inc
in
sbb
in
call
data16
out
aas
movs
adc
movs
sbb
xchg
sbb
movs
sbb
movs
sbb
cmp
repnz
add
sbb
sbb
push
sbb
movs
xchg
sbb
stc
lock
add
sbb
push
sbb
push
sbb
dec
out
push
add
sbb
movs
nop
sbb
and
sbb
bound
sbb
movs
test
add
push
add
jg
add
jg
add
jg
add
xchg
sbb
sub
sbb
movs
jg
add
lock
add
out
push
add
push
add
xchg
sbb
xchg
jg
add
sbb
ret
call
sbb
adc
out
push
add
sbb
push
jg
add
sbb
pop
loopne
add
jg
add
jg
add
repz
add
repz
add
jle
add
sbb
aad
sbb
aad
sbb
push
ss
in
sbb
adc
hlt
push
add
jle
add
push
add
push
add
fistp
add
sbb
ret
call
sbb
adc
hlt
push
add
sbb
dec
jle
add
sbb
push
loope
add
add
add
push
add
jle
add
loope
add
push
add
jge
add
jge
add
hlt
push
add
jge
add
jge
add
jge
add
push
add
clc
push
add
push
add
icebp
push
add
lock
add
out
push
add
push
add
push
add
test
add
sbb
push
test
add
sbb
push
cmp
jmp
sbb
xchg
jge
add
repnz
add
test
add
sbb
bound
in
and
jge
add
out
push
add
test
add
test
add
out
push
add
push
add
test
add
add
add
test
add
cmp
call
test
add
cmps
sbb
xchg
test
add
cmp
jmp
sbb
pop
test
add
icebp
push
add
cmps
sbb
test
add
sbb
bound
in
and
jge
add
clc
push
add
test
add
test
add
test
add
in
adc
jge
add
sbb
aad
sbb
out
sbb
sub
icebp
push
add
push
add
sbb
shl
add
cmp
call
sbb
imul
sbb
push
add
add
sbb
push
sbb
jns
push
add
icebp
push
add
sbb
in
loopne
add
sbb
adc
aas
in
and
jge
add
push
add
loopne
add
sbb
in
sbb
inc
aas
in
aad
sbb
cmps
jge
add
loopne
add
sbb
movs
sbb
add
in
xchg
sbb
push
sbb
pop
neg
add
sbb
xchg
sbb
jmp
neg
add
sbb
int
sbb
sbb
push
sbb
bound
in
and
jge
add
push
add
sbb
and
sbb
mov
test
add
push
add
sbb
add
sbb
add
in
in
sbb
adc
lock
add
sbb
add
hlt
push
add
sbb
add
push
add
push
add
repz
add
sbb
adc
add
add
sbb
push
sbb
jmp
jge
add
push
add
sbb
add
hlt
push
add
sbb
aad
sbb
(bad)
sbb
mov
hlt
push
add
repz
add
movs
sbb
xchg
sbb
xchg
sbb
sar
in
movs
sbb
push
sbb
pop
repz
add
sbb
sbb
push
sbb
lds
push
add
sbb
push
sbb
push
sbb
dec
repz
add
push
add
out
push
add
cmps
sbb
and
sbb
adc
cmp
sbb
movs
jge
add
add
add
jg
add
jg
add
jg
add
stos
sbb
jne
push
add
jg
add
repz
add
repz
add
push
add
test
sbb
gs
add
cmp
sbb
and
repz
add
sbb
push
jg
add
jg
add
add
add
aas
in
lods
mov
mov
and
sbb
in
enter
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
ds
xchg
jle
add
sbb
add
ds
push
jle
add
jle
add
in
push
jle
add
sbb
and
aas
in
adc
aas
in
and
aas
in
adc
jle
add
jge
add
in
aad
sbb
cmp
in
in
sbb
arpl
in
aad
sbb
aaa
test
add
inc
in
xchg
test
add
test
add
inc
in
xchg
test
add
sbb
ret
inc
in
push
test
add
test
add
in
push
test
add
test
add
inc
in
adc
inc
in
and
inc
in
adc
(bad)
sbb
in
sbb
inc
inc
in
aad
sbb
pop
inc
in
in
sbb
arpl
dec
int
add
sbb
add
inc
int
add
inc
in
movs
test
add
inc
in
xchg
test
add
inc
in
adc
sbb
lahf
iret
sbb
push
test
add
add
add
in
test
add
inc
in
push
test
add
inc
in
and
int
add
inc
in
and
inc
in
adc
inc
in
in
sbb
popa
int
add
sbb
push
inc
in
in
sbb
mov
call
sbb
adc
jmp
add
add
fistp
add
inc
in
movs
sbb
std
inc
in
xchg
sbb
rol
jmp
sbb
and
sbb
arpl
in
sbb
cmp
sbb
arpl
in
push
sbb
jne
in
and
jmp
call
imul
add
sbb
push
inc
add
add
jmp
sbb
sbb
sbb
push
(bad)
in
out
sbb
into
imul
add
sbb
or
sbb
loop
in
movs
sbb
loop
in
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
inc
mov
mov
sbb
icebp
mov
add
push
sbb
xchg
mov
sbb
adc
sbb
and
sbb
and
jmp
call
jmp
jmp
sbb
call
sbb
add
sbb
add
sbb
adc
in
movs
sbb
call
sti
in
popf
outs
sbb
xchg
outs
sbb
xchg
sbb
jmp
sbb
popf
sti
in
push
sbb
inc
sbb
cmp
add
sbb
push
pusha
sbb
and
mov
sbb
or
mov
sbb
stc
rcr
add
sbb
inc
jmp
call
sbb
rol
add
mov
sbb
arpl
in
aad
sbb
stc
(bad)
in
movs
sbb
add
in
xchg
sbb
mov
sbb
jecxz
in
xchg
sbb
mov
sbb
ret
(bad)
in
push
sbb
ds
add
in
push
sbb
fbstp
add
std
in
and
std
in
adc
std
in
and
jnp
add
std
in
in
sbb
or
sbb
inc
std
in
aad
sbb
xor
jg
add
in
aad
sbb
mov
add
(bad)
in
xchg
jg
add
std
in
movs
jg
add
std
in
xchg
jg
add
(bad)
sbb
gs
add
std
in
push
jg
add
jg
add
in
push
jg
add
sbb
and
mul
call
mul
jmp
mul
call
adc
add
jle
add
in
aad
sbb
popa
mul
jmp
jle
add
in
mov
add
add
sbb
movs
jle
add
mul
call
mul
jmp
mul
call
sbb
add
sbb
ret
mul
call
sbb
mov
jle
add
in
push
jle
add
sbb
and
jle
add
sbb
push
mul
jmp
add
add
in
adc
mul
jmp
jge
add
push
sbb
aad
sbb
push
mul
jmp
jge
add
jge
add
cld
in
movs
test
add
add
sti
in
movs
test
add
sti
in
xchg
test
add
sti
in
sub
sbb
push
test
add
in
test
add
in
push
test
add
sti
in
cmp
add
sti
in
and
sti
in
adc
sti
in
in
sbb
jne
sbb
aad
sbb
push
cli
in
in
sbb
xchg
cli
in
aad
sbb
adc
in
movs
test
add
inc
sbb
xchg
test
add
cli
in
movs
test
add
cli
in
xchg
test
add
cli
in
test
add
add
sbb
push
stc
in
test
add
test
add
stc
in
and
dec
sbb
adc
stc
in
and
clc
in
adc
stc
in
(bad)
pop
sbb
add
add
sbb
push
stc
in
in
sbb
test
in
aad
sbb
adc
in
dec
jecxz
add
loop
add
stc
in
movs
sbb
sar
in
xchg
sbb
sar
in
sbb
cmp
sbb
push
sbb
push
out
in
sbb
add
sbb
adc
in
and
icebp
sbb
adc
out
in
and
out
in
adc
out
in
in
sbb
xor
sbb
aad
sbb
push
out
in
in
sbb
(bad)
out
in
aad
sbb
adc
in
movs
sbb
or
sbb
xchg
sbb
movs
sbb
mov
sbb
jecxz
in
xchg
sbb
mov
in
sbb
ret
out
in
push
sbb
push
jle
add
sbb
arpl
in
push
sbb
jne
in
and
out
in
adc
jge
add
out
in
adc
out
in
in
sbb
inc
out
in
loop
push
add
push
add
sbb
call
sbb
jmp
in
in
fs
add
jge
add
jmp
call
jmp
jmp
sbb
ret
jmp
call
sbb
and
add
sbb
or
sbb
jmp
sbb
add
add
and
xchg
sbb
adc
out
in
in
sbb
in
sbb
or
pop
add
sbb
mov
sbb
(bad)
out
in
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
jno
sbb
movs
sbb
loop
in
xchg
sbb
xchg
sbb
sbb
pop
sbb
mov
push
add
stos
push
add
sbb
inc
test
and
stos
push
add
xchg
sbb
and
in
in
adc
sbb
sub
sbb
in
sbb
test
jg
add
in
in
sbb
sar
add
pop
add
add
add
stos
push
add
push
add
sbb
jg
add
jg
add
jg
add
in
in
push
jg
add
sbb
mov
push
jg
add
sbb
and
out
in
adc
jg
add
jg
add
sbb
adc
out
in
in
sbb
fnstcw
add
jle
add
jle
add
mov
add
jle
add
jle
add
push
add
sbb
movs
jle
add
out
in
xchg
jle
add
sbb
sbb
jle
add
mov
add
push
add
mov
add
add
add
sbb
xor
pop
add
mov
add
sbb
and
out
in
adc
jge
add
jge
add
mov
add
push
add
jge
add
jge
add
mov
add
(bad)
sbb
xchg
test
add
repz
movs
test
add
sbb
data16
add
sbb
mov
mov
add
sbb
pop
cmps
sbb
test
add
push
add
in
imul
(bad)
mov
add
mov
add
test
add
test
add
test
add
test
add
in
dec
jae
add
mov
add
test
add
test
add
test
add
in
xchg
test
add
test
add
add
sbb
push
test
add
sbb
and
test
add
sbb
les
add
in
sbb
adc
test
add
pop
add
test
add
test
add
test
add
sbb
imul
sbb
out
sbb
in
sbb
cmp
mov
test
mov
add
mov
add
sbb
xchg
sbb
xchg
add
add
sbb
shl
in
xor
and
push
sbb
sub
and
sbb
and
and
mov
mov
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
and
in
les
mov
aam
sbb
and
add
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
add
in
adc
and
(bad)
js
sbb
pop
add
sbb
sbb
push
sbb
push
sbb
sbb
(bad)
(bad)
(bad)
jge
and
mov
mov
and
sbb
test
sbb
adc
add
add
sbb
and
sbb
adc
sbb
push
(bad)
(bad)
fadd
add
js
sbb
sbb
add
sbb
add
sbb
add
sbb
dec
mov
xchg
sbb
add
sbb
sbb
add
sbb
sbb
add
in
sti
add
add
test
add
sbb
add
sbb
add
sbb
pop
test
add
inc
pop
add
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
add
add
sbb
add
in
sub
and
movs
sbb
hlt
add
add
and
sbb
add
and
push
sbb
or
and
imul
sbb
and
pop
add
sbb
pop
call
add
sbb
dec
call
add
call
add
in
adc
and
pop
or
jge
pop
add
jg
add
jg
add
jg
add
jg
add
jg
add
in
sar
add
jg
add
aas
pop
add
jg
add
sbb
gs
add
sbb
push
jg
add
in
aad
and
mov
mov
push
jg
add
jg
add
jg
add
jg
add
sbb
adc
add
jle
add
jg
add
jle
add
(bad)
in
jns
and
aad
sbb
xor
add
xlat
in
dec
add
add
add
add
add
add
add
add
add
add
sbb
test
jle
add
add
add
sbb
mov
jle
add
and
sub
add
add
add
jle
add
and
daa
jle
add
jle
add
test
add
jge
add
jge
add
icebp
pop
add
or
add
jge
add
aas
pop
add
test
add
test
add
or
mov
test
add
sbb
push
test
add
sbb
test
add
add
in
mov
pop
add
(bad)
pop
add
pop
add
test
add
(bad)
pop
add
test
add
(bad)
pop
add
test
add
(bad)
pop
add
test
add
test
add
std
pop
add
test
add
pop
add
call
add
fnsetpm(287
call
(bad)
pop
add
(bad)
pop
add
pop
add
sbb
mov
test
add
daa
mov
pop
test
add
ds
add
sbb
and
test
add
test
add
sbb
(bad)
ftst
dec
test
add
mov
in
sbb
mov
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aam
sbb
adc
in
retf
add
sbb
add
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
(bad)
(bad)
dec
pop
add
sbb
loopne
and
push
sbb
test
and
mov
push
add
add
add
sbb
adc
sbb
in
sbb
in
sbb
inc
(bad)
jmp
sbb
mov
sbb
cwde
add
add
or
ins
out
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
ret
dec
add
add
sbb
push
cmps
pop
add
add
pop
add
sbb
cdq
out
add
sbb
and
sbb
adc
sbb
push
(bad)
(bad)
clc
add
add
sbb
add
or
add
sbb
add
add
add
add
add
sbb
push
and
xchg
sbb
add
add
add
add
sbb
int3
add
add
sbb
add
sbb
add
sbb
add
in
jnp
pop
add
and
sbb
add
add
sbb
std
jecxz
add
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
in
(bad)
movs
pop
add
sbb
jns
push
add
sbb
sbb
sbb
push
sbb
push
sbb
push
fucom
jmp
pop
add
sbb
pop
cmps
pop
add
and
sbb
sbb
test
push
add
sbb
and
sbb
adc
jg
add
in
lods
mov
mov
in
sbb
sbb
push
add
jg
add
jg
add
jg
add
jg
add
fucom
call
pop
add
movs
pop
add
jg
add
push
add
sbb
gs
add
sbb
push
jg
add
sbb
and
sbb
(bad)
js
sbb
jg
add
aaa
pop
add
jg
add
jg
add
jle
add
jle
add
in
jne
pop
add
jle
add
add
add
pop
add
in
and
jle
add
pop
add
(bad)
call
neg
add
fsubp
(bad)
(bad)
pop
add
fsubp
inc
neg
add
sbb
lods
neg
add
fsubp
push
jle
add
(bad)
call
pop
add
jle
add
neg
add
(bad)
inc
add
add
pop
add
jle
add
pop
add
in
in
pop
add
jge
add
jge
add
neg
add
jge
add
jge
add
neg
add
or
add
test
add
test
add
test
add
sbb
test
add
add
add
add
in
cli
or
add
sbb
inc
or
add
add
and
(bad)
mov
add
dec
pop
add
test
add
test
add
test
add
test
add
in
das
or
add
test
add
or
add
test
add
and
(bad)
mov
add
pop
add
test
add
test
add
test
add
loop
inc
or
add
sbb
push
test
add
and
push
test
add
mov
add
test
add
test
add
add
add
sbb
in
sbb
inc
loope
jmp
sbb
mov
and
mov
mov
xlat
sbb
fisttp
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
mov
or
add
sbb
inc
or
add
add
or
add
sbb
leave
or
sbb
mov
and
sbb
and
mov
mov
sub
pop
add
sbb
in
sbb
in
sbb
aad
sbb
aam
sbb
push
(bad)
in
inc
push
and
aad
sbb
fmul
sbb
mov
and
xchg
sbb
sahf
or
and
cmps
sbb
mov
sbb
fs
sbb
or
and
sbb
aaa
or
sbb
or
and
or
add
sbb
out
and
push
sbb
jecxz
and
adc
and
loopne
sbb
imul
add
aad
sbb
or
add
and
aad
sbb
sub
sbb
in
and
mov
mov
xchg
pop
add
sbb
add
sbb
sbb
add
in
push
or
add
sbb
pop
or
add
add
or
add
add
add
sbb
add
sbb
add
test
add
dec
pop
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
(bad)
(bad)
in
or
and
mov
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
ret
call
and
(bad)
std
in
(bad)
and
xchg
sbb
fld
add
sbb
adc
sbb
and
sbb
(bad)
std
in
or
sbb
jns
and
aad
sbb
jno
and
pop
or
add
sbb
sbb
jg
add
jg
add
jg
add
in
mov
and
xchg
jg
add
mov
push
jg
add
pop
add
sbb
gs
add
sbb
push
jg
add
jg
add
mul
inc
or
add
or
in
dec
pop
add
jle
add
jle
add
jle
add
jle
add
jle
add
or
fisttp
movs
jle
add
jle
add
jle
add
in
inc
or
add
sbb
das
or
add
sbb
cmp
and
addr16
add
or
add
sbb
call
jle
add
jle
add
jle
add
and
sbb
add
jge
add
add
jge
add
jge
add
mul
jmp
and
mov
add
movs
test
add
inc
pop
add
test
add
test
add
test
add
sti
in
bound
and
push
test
add
test
add
test
add
or
add
or
add
test
add
or
add
sbb
add
inc
pop
add
test
add
test
add
test
add
test
add
test
add
test
add
in
jmp
sbb
add
pop
add
test
add
test
add
test
add
cli
in
hlt
or
add
mov
test
add
inc
pop
add
sbb
push
test
add
test
add
test
add
in
sub
and
not
mov
adc
sbb
xchg
inc
pop
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aam
sbb
(bad)
stc
in
mov
sbb
xchg
add
add
add
add
sbb
rol
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
push
out
in
sbb
push
sbb
xchg
or
add
sbb
fimul
and
pop
sbb
(bad)
or
add
in
and
sbb
dec
popa
sbb
xor
lea
aad
sbb
(bad)
sbb
jmp
sbb
popf
dec
pop
add
sbb
mov
pop
add
pop
add
sbb
xchg
sbb
xchg
sbb
shr
in
fisttp
and
ret
call
or
add
sbb
aad
pop
add
sbb
and
add
add
sbb
adc
sbb
and
sbb
mov
pop
add
sbb
add
sbb
add
sbb
add
in
and
and
movs
sbb
add
and
movs
sbb
add
or
add
sbb
mov
sbb
add
sbb
dec
std
pop
add
sbb
push
call
add
out
in
mov
out
in
mov
pop
add
adc
sbb
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
(bad)
out
in
(bad)
inc
add
add
add
sbb
imul
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
shr
in
inc
(bad)
pop
add
mov
push
sbb
in
pop
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
(bad)
in
in
inc
(bad)
pop
add
(bad)
pop
add
adc
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
out
in
call
out
in
sar
add
pop
add
mov
xchg
jg
add
cmp
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
in
push
add
add
add
add
jg
add
inc
pop
add
jg
add
jle
add
jle
add
jle
add
jle
add
in
fwait
(bad)
pop
add
jle
add
pop
add
add
add
jle
add
jle
add
in
pop
call
add
jle
add
inc
pop
add
sbb
gs
add
sbb
push
jle
add
jle
add
out
in
call
add
call
add
mov
add
pop
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
in
add
add
hlt
in
cmc
add
add
test
add
inc
pop
add
test
add
sbb
test
add
sbb
push
test
add
in
xchg
pop
add
add
add
add
test
add
test
add
test
add
in
sbb
sbb
retf
add
test
add
mov
add
test
add
test
add
test
add
sbb
loop
in
pop
xchg
pop
add
sbb
out
pop
add
add
xchg
pop
add
test
add
inc
pop
add
sbb
and
test
add
test
add
sbb
(bad)
xchg
pop
add
xchg
pop
add
xchg
add
add
add
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
add
in
or
icebp
in
(bad)
xchg
pop
add
pop
add
sbb
pop
xchg
pop
add
sbb
test
add
add
add
add
jmp
push
pop
add
add
add
sbb
sbb
pop
add
sbb
les
add
xchg
pop
add
sbb
or
sbb
and
sbb
lahf
xchg
pop
add
sbb
pop
xchg
pop
add
js
sbb
iret
push
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
xchg
sbb
sbb
or
sbb
sbb
push
sbb
push
sbb
and
sbb
add
in
scas
xchg
pop
add
xchg
pop
add
sbb
je
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
xchg
pop
add
cld
in
sub
sbb
and
sbb
ficom
sbb
rcl
sbb
retf
add
in
pop
xchg
pop
add
sbb
push
xchg
pop
add
sbb
sub
sbb
add
mov
sbb
add
add
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
(bad)
(bad)
in
sbb
sbb
pusha
xchg
pop
add
test
add
push
add
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
jmp
xchg
pop
add
sbb
into
xchg
pop
add
add
xchg
pop
add
sbb
cmp
sbb
movs
xchg
pop
add
sbb
mov
sbb
pop
xchg
pop
add
jg
add
xchg
pop
add
jg
add
xchg
pop
add
jg
add
pop
add
jg
add
jg
add
xchg
pop
add
add
add
sbb
imul
pop
add
jg
add
iret
push
add
sbb
gs
add
sbb
push
jg
add
sbb
and
sbb
add
in
(bad)
xchg
pop
add
xchg
pop
add
or
stc
aam
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
jle
add
in
loopne
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
mov
cdq
jle
add
jle
add
sbb
push
jle
add
sbb
gs
add
add
add
add
sbb
gs
add
jle
add
jle
add
jle
add
in
daa
xchg
pop
add
jge
add
xchg
pop
add
in
pop
xchg
pop
add
jge
add
test
add
(bad)
pop
add
(bad)
pop
add
(bad)
pop
add
add
add
(bad)
pop
add
sbb
cwd
pop
add
sti
in
sub
sbb
and
in
mov
or
add
test
add
test
add
test
add
test
add
in
into
xchg
pop
add
in
in
sbb
(bad)
cli
in
aad
sbb
mov
mov
cmps
test
add
push
add
test
add
test
add
test
add
cli
in
out
xchg
pop
add
sbb
sti
xchg
pop
add
in
xchg
xchg
pop
add
sbb
and
in
pop
cwde
pop
add
test
add
pop
add
test
add
cwde
pop
add
test
add
cwde
pop
add
sbb
push
cwde
pop
add
sbb
ds
pop
add
sbb
fist
sbb
les
sbb
lods
cwde
pop
add
xchg
pop
add
cwde
pop
add
mov
xchg
sbb
in
push
add
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
(bad)
jmp
dec
sbb
adc
sbb
sbb
add
push
add
sbb
in
sbb
in
sbb
aad
sbb
aam
sbb
push
(bad)
in
test
sbb
sub
pop
add
add
add
add
nop
pop
add
nop
pop
add
nop
pop
add
sbb
pushf
nop
pop
add
sbb
lods
nop
pop
add
sbb
pushf
nop
pop
add
sbb
cmc
rcr
add
sbb
adc
sbb
and
sbb
icebp
sbb
add
sbb
add
sbb
add
sbb
aam
sbb
(bad)
add
sbb
add
push
add
sti
in
mov
sbb
enter
push
sbb
add
sbb
gs
pop
add
sbb
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
lahf
xchg
pop
add
sbb
enter
jmp
sbb
rcl
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
sbb
jae
pop
add
pop
add
sbb
fs
pop
add
sbb
push
xchg
pop
add
sbb
and
sbb
adc
jg
add
xchg
pop
add
sbb
add
sbb
call
add
add
add
xchg
pop
add
jg
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
xchg
pop
add
sbb
cmc
xchg
pop
add
jge
add
xchg
pop
add
xchg
pop
add
add
pop
add
xchg
pop
add
sbb
cmps
in
add
jge
add
in
add
jg
add
in
add
jge
add
jle
add
pop
add
jle
add
in
add
sbb
mov
pop
add
jle
add
jle
add
jle
add
jge
add
sbb
adc
pop
add
jge
add
in
add
sbb
or
pop
add
in
add
sbb
(bad)
pop
add
in
add
out
add
jge
add
out
add
jle
add
jle
add
in
add
jge
add
in
add
in
add
jle
add
add
jle
add
add
mov
sbb
xor
pop
add
test
add
and
rol
add
sbb
sbb
enter
jle
sbb
test
add
sbb
mov
and
and
test
add
sbb
call
add
test
add
test
add
add
add
test
add
sbb
pop
mov
add
test
add
test
add
test
add
test
add
mov
lods
test
add
test
add
test
add
test
add
add
add
inc
add
add
test
add
test
add
sbb
leave
pop
and
push
test
add
push
and
sub
add
test
add
pop
and
jmp
sbb
test
add
call
and
in
sbb
pop
push
and
aad
sbb
dec
push
and
movs
sbb
inc
sbb
and
xchg
sbb
dec
sbb
sbb
adc
and
cwde
sbb
sbb
and
imul
add
mov
ins
sbb
popf
pop
push
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
mov
mov
sbb
pop
push
add
sbb
in
sbb
in
sbb
aad
sbb
aam
sbb
push
jle
call
and
aad
sbb
pop
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
jnp
and
pop
sbb
jae
and
push
jg
jmp
sbb
add
sbb
clc
sbb
add
sbb
add
sbb
add
sbb
movs
sbb
add
sbb
lea
and
call
sbb
add
sbb
add
sbb
add
sbb
add
and
scas
sbb
add
mov
add
sbb
add
sbb
add
sbb
push
sbb
add
add
sbb
add
sbb
add
sbb
add
in
inc
sbb
add
sbb
cmp
and
aam
sbb
xor
and
in
sbb
dec
sbb
add
sbb
fcomp
add
and
cwde
sbb
sahf
sbb
add
and
add
sbb
add
sbb
mov
add
add
and
push
jge
dec
sbb
add
sbb
xlat
sbb
add
sbb
nop
sbb
add
sbb
popf
sbb
add
sbb
inc
sbb
add
sbb
outs
sbb
add
jg
add
jg
add
jg
add
and
fstp
add
jg
add
sbb
add
sbb
add
and
xchg
jg
add
test
add
add
add
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
mov
push
add
jg
add
jg
add
jle
add
jle
add
in
mov
jle
add
sbb
add
jle
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
(bad)
sbb
add
sbb
stos
sbb
add
sbb
movs
sbb
add
add
sbb
add
jle
add
and
cs
add
sbb
add
jle
add
and
adc
add
and
jecxz
sbb
out
and
aam
sbb
rcl
and
in
sbb
in
pop
and
bound
inc
sbb
add
sbb
add
and
movs
test
add
and
xchg
test
add
and
imul
sbb
in
sbb
add
add
sbb
add
add
sbb
add
clc
mov
sbb
sbb
pop
pop
push
add
test
add
test
add
test
add
clc
mov
and
push
push
add
test
add
test
add
test
add
test
add
jnp
add
add
call
test
add
sbb
add
and
test
add
test
add
sbb
add
sbb
mov
test
add
and
sub
add
test
add
sbb
add
test
add
sbb
add
sbb
in
sbb
add
sbb
aad
sbb
fld
and
rol
sbb
mov
sbb
add
sbb
jne
sbb
xchg
sbb
add
and
ja
sbb
sbb
and
jb
sbb
push
sbb
bound
and
dec
sbb
push
add
add
sbb
cmp
and
or
and
in
sbb
xlat
push
and
mov
push
and
clc
sbb
in
sbb
or
and
clc
sbb
jbe
and
sar
inc
push
and
mov
push
and
mov
mov
mov
sbb
call
add
mov
jbe
sbb
call
add
sbb
push
sbb
sub
sbb
mov
mov
mov
push
and
in
sbb
add
sbb
add
sbb
add
add
add
add
add
and
add
sbb
add
jge
add
sbb
sbb
in
loope
add
jmp
add
loope
add
in
gs
add
sbb
lods
loope
add
in
add
sbb
or
ins
in
shl
add
add
add
sbb
dec
jmp
sbb
dec
aad
add
in
imul
add
sbb
out
sbb
loope
sbb
in
sbb
ins
pop
push
add
sbb
mov
sbb
test
sbb
std
pop
push
add
sbb
outs
sbb
mov
sbb
pop
dec
push
add
add
add
sbb
je
sbb
sbb
ins
dec
push
add
jge
add
jge
add
sbb
int
push
add
jge
add
sbb
sbb
ins
in
aam
and
aad
sbb
loope
and
in
sbb
in
sbb
xlat
jg
add
and
cmps
jg
add
pop
and
cdq
jg
add
pop
and
movs
jg
add
jg
add
rcr
add
pop
add
sbb
pop
jg
add
sbb
fs
add
push
add
jg
add
push
add
sbb
sub
jg
add
jg
add
add
add
sbb
push
outs
in
pop
sbb
add
jle
add
and
in
sbb
cs
and
xlat
jle
add
and
cmps
jle
add
push
and
cdq
jle
add
sbb
sbb
cmps
sbb
sbb
mov
sbb
imul
add
jle
add
and
dec
jle
add
jle
add
sbb
add
jle
add
sbb
add
jle
add
jle
add
and
loop
sbb
(bad)
sbb
add
sbb
add
jge
add
sbb
add
jge
add
sbb
add
and
mov
and
(bad)
jp
sbb
sbb
push
push
push
add
test
add
sbb
push
test
add
sbb
test
add
test
add
test
add
test
add
test
add
in
aaa
and
sbb
dec
and
add
aam
sbb
(bad)
and
out
sbb
repz
(bad)
test
add
and
movs
test
add
test
add
test
add
jb
push
and
shl
push
and
push
test
add
and
push
jno
jmp
and
push
test
add
and
adc
add
add
call
test
add
jno
inc
test
add
and
push
jno
push
sbb
stos
and
push
jno
jmp
sbb
call
call
and
add
and
add
jno
inc
and
add
add
add
jno
push
and
test
and
push
pop
in
bound
and
inc
sbb
pop
and
add
pop
in
adc
add
sbb
or
add
in
add
add
sbb
cli
and
add
in
xor
add
sbb
sub
add
in
and
add
add
add
and
add
pop
in
push
and
add
and
add
pop
in
inc
and
add
mov
jne
sbb
dec
aas
push
add
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
bound
jmp
sbb
lahf
and
add
add
add
sbb
and
add
sbb
add
sbb
add
in
xor
and
aad
sbb
mov
and
movs
sbb
add
and
add
pop
and
cdq
sbb
add
sbb
pop
and
sbb
mov
sbb
and
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
mov
sbb
mov
test
add
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
loop
in
inc
sbb
add
sbb
add
add
sbb
add
sbb
call
sbb
sbb
jmp
sbb
and
sbb
adc
sbb
and
sbb
bound
inc
and
in
sbb
dec
and
add
jg
add
and
add
or
sbb
jg
add
jg
add
jg
add
mov
mov
add
jg
add
sbb
push
jg
add
sbb
gs
add
add
in
ret
and
add
push
in
fsub
and
adc
sbb
leave
and
add
jg
add
and
add
in
mov
jle
add
and
add
jle
add
and
add
in
pop
and
add
in
inc
and
add
push
in
fbld
and
xchg
jle
add
and
add
sbb
shl
add
and
add
sbb
(bad)
and
add
sbb
arpl
and
push
and
add
sbb
inc
and
add
jle
add
and
add
pop
and
sbb
sbb
adc
and
test
push
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
xchg
and
mov
push
add
test
add
test
add
sbb
test
add
pop
in
fsub
and
xchg
sbb
dec
pop
push
add
sbb
and
test
add
add
add
test
add
in
and
add
and
add
test
add
and
xlat
test
add
and
out
sbb
and
sbb
or
add
and
add
test
add
test
add
add
add
sbb
test
add
sbb
push
test
add
in
js
and
push
test
add
test
add
and
add
sbb
aad
and
and
sbb
fisub
and
mul
mov
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aam
sbb
bound
dec
out
sbb
push
add
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
inc
and
add
sbb
dec
inc
push
add
sbb
and
sbb
adc
sbb
and
sbb
bound
call
add
or
add
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aam
sbb
adc
(bad)
stc
push
and
xchg
sbb
icebp
push
and
mov
push
add
sbb
sbb
push
sbb
push
add
add
sbb
sbb
bound
(bad)
mov
sbb
sub
and
and
sbb
rol
add
add
mov
sbb
push
add
sbb
add
sbb
add
sbb
add
in
fisttp
and
mov
add
fld
xchg
sbb
add
sbb
add
add
sbb
add
sbb
sbb
add
sbb
and
sbb
(bad)
cmp
and
and
add
sbb
popf
add
sbb
es
and
(bad)
sbb
adc
and
jmp
push
and
(bad)
sbb
jl
and
cmps
sbb
in
add
sbb
fadd
sbb
lods
add
in
cld
add
sbb
les
sbb
int3
add
sbb
dec
or
add
in
mov
sbb
in
and
adc
or
add
sbb
mov
and
adc
or
add
jecxz
sbb
jg
add
push
add
jg
add
jg
add
jg
add
jg
add
jg
add
mov
mov
sbb
lods
inc
push
add
jg
add
add
add
jg
add
sbb
fs
add
pop
in
or
add
sbb
out
and
push
jg
add
adc
add
adc
add
jg
add
sbb
xchg
adc
add
jg
add
and
jmp
sbb
daa
adc
sbb
adc
add
fnstsw
add
jle
add
and
lahf
jle
add
adc
add
adc
add
pop
in
xchg
adc
add
adc
add
jle
add
pop
push
add
sbb
gs
add
sbb
push
jle
add
sbb
and
sbb
(bad)
js
sbb
jle
add
add
add
push
add
jle
add
jle
add
jge
add
jge
add
in
retf
add
jge
add
adc
add
jge
add
add
das
and
xchg
test
add
das
and
test
and
cwde
test
add
and
imul
add
test
add
test
add
and
pop
test
add
and
sub
and
test
add
and
and
and
adc
and
push
arpl
call
test
add
and
in
sbb
scas
and
xlat
test
add
sub
and
cmps
test
add
sbb
popa
sub
sbb
sbb
and
fwait
test
add
das
and
xchg
sbb
adc
test
add
sbb
test
add
sbb
push
test
add
sbb
(bad)
mov
add
push
add
test
add
test
add
sbb
in
sbb
inc
popa
in
sbb
sbb
xor
sbb
jle
and
movs
sbb
sti
sub
sbb
in
and
movs
sbb
jbe
and
cwde
sbb
sub
add
sbb
jl
and
pop
sbb
sub
and
push
aas
in
shr
and
push
sbb
call
sbb
movs
adc
add
sbb
lods
adc
add
sbb
jbe
and
pop
sbb
adc
add
sbb
jl
and
xlat
sbb
test
sbb
mov
sbb
(bad)
adc
add
and
scas
sbb
cmc
adc
add
adc
add
adc
add
sbb
adc
add
mov
push
sbb
jne
push
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
bound
in
sbb
and
and
adc
add
sbb
test
add
add
add
add
mov
add
sbb
add
sbb
add
in
push
adc
add
adc
add
add
and
push
sbb
add
sbb
repnz
add
sbb
retf
add
sbb
add
sbb
add
sbb
add
sub
mov
fild
push
add
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
in
adc
sbb
fldcw
add
and
xchg
sbb
imul
mov
pop
sbb
cmp
add
sbb
sbb
push
sbb
push
sbb
and
sbb
add
and
and
sub
add
sbb
scas
sub
add
in
nop
and
(bad)
jg
add
and
jmp
add
add
test
add
jg
add
jg
add
jg
add
mov
jne
sbb
test
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
aaa
in
pop
sub
add
sub
add
add
add
sbb
inc
sub
add
jg
add
sub
add
jle
add
and
xlat
jle
add
sub
add
jle
add
and
aad
sbb
jb
and
adc
in
repnz
and
lods
jle
add
daa
and
pushf
jle
add
jle
add
jle
add
and
ins
jle
add
and
pusha
jle
add
daa
and
push
jle
add
in
xchg
and
adc
and
and
daa
and
adc
daa
and
out
sbb
mov
and
aad
sbb
adc
jge
add
daa
and
fstp
add
add
add
mov
popf
test
add
test
add
test
add
test
add
add
cmp
jmp
add
sbb
jns
pop
add
in
dec
cmc
pop
add
sbb
xor
pop
add
test
add
fmul
add
pushw
add
add
add
test
add
test
add
test
add
test
add
in
stos
in
pop
add
test
add
cmc
pop
add
test
add
test
add
hlt
pop
add
jecxz
add
sbb
cmc
scas
pop
add
sbb
push
test
add
sbb
test
add
add
add
pushw
add
test
add
pushw
add
sbb
lods
gs
add
test
add
test
add
in
outs
hlt
pop
add
sbb
ja
pop
add
in
xchg
pop
add
sbb
in
push
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
mov
repnz
add
sbb
retf
add
in
mov
fmul
add
push
add
sbb
adc
sbb
and
sbb
bound
in
sbb
pop
add
sbb
adc
pop
add
add
add
sbb
or
pop
add
sbb
jmp
dec
in
pop
add
in
pop
add
sbb
lea
add
sbb
xchg
sbb
sbb
sbb
push
sbb
ja
mov
mov
push
add
sbb
push
sbb
and
add
add
sbb
adc
sbb
push
das
in
mov
pop
add
in
pop
add
in
mov
das
in
mov
das
in
shr
pop
add
in
jmp
pop
add
sub
inc
sub
call
out
pop
add
sub
push
in
pop
add
sub
dec
out
pop
add
sub
jmp
in
pop
add
sub
(bad)
sti
in
pop
add
in
xchg
in
pop
add
in
sub
pop
add
das
in
inc
icebp
pop
add
das
in
pop
icebp
pop
add
in
xor
pop
add
in
dec
icebp
pop
add
in
and
pop
add
in
cmp
pop
add
in
push
lock
add
in
imul
add
das
in
add
pop
add
das
in
fwait
repnz
add
cs
jae
pop
add
cs
mov
pop
add
cs
arpl
pop
add
cs
jnp
pop
add
in
adc
pop
add
in
stos
out
pop
add
sub
pop
add
sub
pop
add
in
mov
pop
add
in
retf
out
pop
add
in
mov
sub
pop
add
in
shl
pop
add
in
aad
sbb
adc
in
movs
jg
add
cs
add
pop
add
lock
add
lock
add
sbb
mov
pop
add
add
add
sbb
gs
add
(bad)
pop
add
sbb
push
jg
add
sbb
and
sbb
sub
mov
add
jg
add
jle
add
jle
add
jle
add
jle
add
in
aaa
in
pop
add
jle
add
pop
add
mov
add
add
add
push
add
jle
add
jle
add
jle
add
cs
mov
pop
add
sbb
jb
pop
add
add
das
in
xlat
jmp
shr
add
jle
add
jmp
sbb
add
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
out
jmp
mov
pop
add
pop
add
neg
add
clc
pop
add
sbb
loope
pop
add
sbb
cli
jmp
sbb
xchg
jmp
sbb
and
pop
add
stc
pop
add
pop
add
test
add
pop
add
test
add
pop
add
test
add
pop
add
test
add
pop
add
test
add
jmp
enter
mov
sbb
(bad)
add
pop
add
sbb
mov
pop
add
jmp
push
jmp
dec
jmp
inc
jmp
lock
add
jmp
add
sbb
xchg
jmp
jae
pop
add
jmp
jns
pop
add
sbb
jb
pop
add
sbb
(bad)
aad
sbb
aaa
cmc
pop
add
neg
add
pop
add
test
add
cmc
pop
add
sbb
shl
pop
add
cmc
pop
add
sbb
mov
sbb
push
repz
add
repz
add
neg
add
neg
add
neg
add
sbb
sti
neg
add
sbb
adc
pop
add
sbb
and
pop
add
sbb
call
add
neg
add
test
add
pop
add
pop
add
neg
add
sbb
and
pop
add
add
add
jmp
sbb
or
pop
add
sbb
add
pop
add
neg
add
test
add
pop
add
pop
add
sbb
pop
neg
add
neg
add
sbb
inc
neg
add
sbb
xor
pop
add
sbb
dec
neg
add
add
add
call
sbb
nop
jmp
popf
jmp
(bad)
jmp
jae
pop
add
sbb
mov
pop
add
sbb
add
sbb
add
hlt
pop
add
test
add
pop
add
test
add
hlt
pop
add
test
add
hlt
pop
add
test
add
test
add
add
sbb
sbb
pop
add
hlt
pop
add
sbb
add
sbb
sti
repz
add
repz
add
sbb
loope
pop
add
sbb
call
add
pop
add
sbb
xor
add
sbb
jge
pop
add
neg
add
test
add
neg
add
test
add
neg
add
neg
add
neg
add
jg
add
test
add
hlt
pop
add
cmc
pop
add
sbb
dec
cmc
pop
add
neg
add
add
add
add
pop
add
neg
add
jg
add
cmc
pop
add
sbb
cmps
cmc
pop
add
sbb
nop
cmc
pop
add
sbb
lods
cmc
pop
add
test
add
pop
add
sbb
jae
pop
add
pop
add
sbb
sbb
pop
add
neg
add
test
add
neg
add
test
add
neg
add
test
add
jle
add
jle
add
pop
add
add
add
sbb
inc
neg
add
jle
add
neg
add
sbb
push
neg
add
jle
add
neg
add
jle
add
std
pop
add
test
add
test
add
pop
add
neg
add
neg
add
or
std
daa
push
add
jge
add
jge
add
jge
add
jge
add
jge
add
or
add
test
add
test
add
test
add
cmp
push
test
add
pop
add
add
test
add
pop
add
sbb
push
cld
pop
add
test
add
cld
pop
add
test
add
pop
add
test
add
sti
pop
add
test
add
sbb
stc
sti
pop
add
test
add
sti
pop
add
test
add
add
add
cld
pop
add
test
add
cld
pop
add
pop
add
sti
pop
add
sti
pop
add
pop
add
sbb
inc
sti
pop
add
pop
add
add
cld
pop
add
sbb
sar
add
test
add
test
add
sbb
mov
test
add
add
sbb
sub
pop
add
sbb
inc
sti
pop
add
sbb
aas
sti
pop
add
sbb
push
sbb
movs
cmc
pop
add
pop
add
pop
add
pop
add
add
pop
add
add
pop
add
add
cmc
pop
add
sti
pop
add
jge
add
sbb
jle
pop
add
jge
add
sbb
test
pop
add
sbb
popa
sti
pop
add
sbb
jp
pop
add
sbb
xchg
sti
pop
add
sbb
and
pop
add
jge
add
sti
pop
add
jge
add
sti
pop
add
jge
add
sti
pop
add
sbb
mov
sbb
pop
sti
pop
add
sbb
xchg
pop
add
sbb
cmp
add
cli
pop
add
jge
add
cli
pop
add
sbb
and
pop
add
cli
pop
add
add
add
add
add
cli
pop
add
cli
pop
add
in
xchg
pop
add
in
outs
sti
pop
add
sbb
add
sbb
add
sbb
add
clc
pop
add
sbb
add
sbb
sbb
add
sbb
and
sbb
push
cli
pop
add
cli
pop
add
sbb
sub
pop
add
sbb
in
pop
add
sbb
sar
pop
add
sbb
jmp
add
sbb
outs
cld
pop
add
cld
pop
add
cli
pop
add
stc
pop
add
sbb
or
pop
add
sbb
xchg
stc
pop
add
sbb
sahf
stc
pop
add
sbb
mov
pop
add
sbb
int3
cld
pop
add
sbb
dec
cld
pop
add
sbb
add
pop
add
sbb
xor
pop
add
jg
add
pop
add
sbb
xlat
cli
pop
add
jg
add
cli
pop
add
jg
add
jg
add
pop
add
cld
pop
add
sbb
das
cld
pop
add
pop
add
sbb
push
cld
pop
add
sbb
ds
pop
add
sbb
into
sti
pop
add
jge
add
add
add
jg
add
add
add
sbb
add
sbb
cmp
and
pop
jg
add
and
pop
jg
add
jle
add
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
sbb
outs
add
add
add
add
sbb
mov
pop
add
jge
add
jle
add
jle
add
add
add
js
sbb
jge
add
mov
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
add
jge
add
in
jl
and
movs
test
add
add
and
cmps
test
add
add
add
add
add
sbb
or
and
ja
mov
imul
add
sbb
push
test
add
test
add
test
add
in
mov
test
add
and
in
sbb
push
add
add
test
add
and
pop
mov
add
test
add
test
add
test
add
mov
aaa
test
add
test
add
sbb
push
test
add
add
add
sbb
test
add
add
in
dec
add
add
add
add
inc
in
mov
and
daa
test
add
add
add
in
jmp
add
sbb
nop
add
add
in
lods
add
add
sbb
test
add
inc
in
jae
and
lods
sbb
jl
and
lahf
sbb
sbb
and
mov
and
popa
sbb
adc
and
jno
sbb
fild
and
arpl
and
push
sbb
and
sbb
dec
aas
pop
add
sbb
pop
aas
pop
add
sbb
xor
pop
add
sbb
inc
aas
pop
add
sbb
cmp
pop
add
sbb
addr16
add
sbb
pusha
ds
add
sbb
int
pop
add
inc
pop
add
pop
add
sbb
mov
sbb
imul
add
inc
pop
add
sbb
cmp
sbb
out
pop
add
test
add
inc
pop
add
sbb
lods
inc
pop
add
pop
add
test
add
sbb
add
sbb
sbb
add
sbb
add
sbb
cs
pop
add
sbb
add
inc
pop
add
test
add
inc
pop
add
add
add
sbb
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
test
add
sbb
add
sbb
add
sbb
cmp
sbb
add
sbb
add
pop
add
sbb
mov
add
inc
pop
add
test
add
inc
pop
add
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
sbb
and
add
aas
pop
add
test
add
aas
pop
add
test
add
pop
add
test
add
pop
add
test
add
jg
add
add
inc
pop
add
inc
pop
add
sbb
aaa
inc
pop
add
pop
add
add
jg
add
inc
pop
add
sbb
rol
add
jg
add
sbb
mov
jg
add
pop
add
inc
pop
add
test
add
inc
pop
add
test
add
inc
pop
add
inc
pop
add
test
add
add
inc
pop
add
test
add
test
add
inc
pop
add
jg
add
add
add
pop
add
pop
add
add
inc
pop
add
jle
add
inc
pop
add
sbb
lods
inc
pop
add
jle
add
inc
pop
add
jle
add
pop
add
jle
add
pop
add
xchg
add
pop
add
inc
pop
add
ja
(bad)
fadd
add
add
add
in
lods
inc
pop
add
jge
add
inc
pop
add
in
loope
pop
add
in
pop
jp
add
jge
add
test
add
test
add
test
add
mov
sbb
sbb
test
add
sbb
push
test
add
add
add
sbb
test
add
sbb
push
test
add
jnp
push
test
add
pop
add
pop
add
test
add
pop
add
test
add
inc
pop
add
test
add
pop
add
test
add
pop
add
test
add
pop
add
inc
pop
add
ja
add
pop
add
ja
add
sbb
xor
add
ja
add
sbb
aaa
ja
add
sbb
cmp
add
pop
add
test
add
js
add
test
add
js
add
test
add
add
add
sbb
je
pop
add
test
add
sbb
jp
pop
add
sbb
daa
ja
add
js
add
ja
add
add
sbb
shl
sbb
mov
sbb
addr16
add
sbb
pusha
jne
add
sbb
dec
jne
add
sbb
aaa
jne
add
sbb
add
add
sbb
mov
sbb
in
pop
add
sbb
push
jne
add
sbb
fwait
ja
add
sbb
mov
pop
add
je
add
je
add
je
add
pop
add
ja
add
sbb
pop
js
add
ja
add
sbb
popf
ja
add
sbb
pop
je
add
jge
add
pop
add
sbb
or
sbb
push
je
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
jge
add
je
add
je
add
je
add
je
add
je
add
je
add
jae
add
jbe
add
sbb
add
jge
add
add
add
sbb
add
sbb
add
sbb
mov
add
ja
add
ja
add
sbb
add
sbb
clc
jbe
add
outs
in
popf
dec
pop
add
inc
pop
add
pop
add
sbb
xchg
dec
pop
add
sbb
and
add
sbb
sbb
pop
add
sbb
mov
add
sbb
loop
pop
add
sbb
pop
add
sbb
enter
pop
sbb
xchg
dec
pop
add
jg
add
pop
add
jg
add
jg
add
jg
add
dec
pop
add
inc
pop
add
inc
pop
add
sbb
mov
pop
add
pop
add
add
inc
pop
add
inc
pop
add
add
pop
add
sbb
push
jbe
add
sbb
adc
add
sbb
sbb
pop
add
jg
add
add
add
pop
add
jle
add
jbe
add
jle
add
jle
add
jge
add
jne
add
jne
add
jne
add
jne
add
add
jne
add
sbb
div
jbe
sbb
add
add
sbb
std
je
add
jne
add
jle
add
pop
add
jne
add
jne
add
jge
add
pop
add
jge
add
jne
add
jle
add
pop
add
jge
add
jae
add
jae
add
outs
pop
add
test
add
sbb
xchg
outs
pop
add
outs
pop
add
outs
pop
add
sbb
adc
add
test
add
test
add
outs
pop
add
test
add
outs
pop
add
test
add
add
test
add
test
add
test
add
add
add
add
test
add
pop
add
test
add
test
add
pop
add
test
add
outs
pop
add
test
add
outs
pop
add
outs
pop
add
outs
pop
add
test
add
pop
add
test
add
test
add
pop
add
sbb
inc
ins
pop
add
test
add
ins
pop
add
test
add
test
add
test
add
ins
pop
add
sbb
fwait
outs
pop
add
sbb
lds
add
outs
pop
add
sbb
sti
ins
pop
add
outs
pop
add
outs
pop
add
outs
pop
add
add
add
add
pop
add
sbb
loope
pop
add
sbb
cli
ins
pop
add
sbb
xchg
ins
pop
add
sbb
and
add
test
add
pop
add
test
add
pop
add
sbb
inc
imul
pop
sbb
sub
pop
add
imul
xlat
sbb
bound
add
add
add
outs
pop
add
sbb
enter
jae
sbb
lds
add
sbb
into
inc
pop
add
outs
pop
add
sbb
push
outs
pop
add
sbb
push
outs
pop
add
sbb
dec
outs
pop
add
sbb
inc
outs
pop
add
test
add
inc
pop
add
inc
pop
add
sbb
xchg
outs
pop
add
js
sbb
add
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
pop
jns
sbb
sbb
movs
sbb
add
sbb
add
in
jmp
pop
add
pop
in
movs
ins
pop
add
add
sbb
add
sbb
ja
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
dec
inc
pop
add
sbb
cmp
pop
in
dec
inc
pop
add
sbb
(bad)
imul
mov
add
add
sbb
xchg
imul
mov
imul
xchg
sbb
jns
pop
add
sbb
xor
add
pop
add
sbb
sbb
add
sbb
test
cmp
pop
add
sbb
loopne
pop
add
jg
add
sbb
xchg
add
jg
add
pop
add
jg
add
sbb
mov
add
imul
lods
jg
add
imul
mov
imul
ins
jg
add
test
add
jg
add
imul
je
sbb
push
ins
pop
add
sbb
jno
pop
add
imul
inc
addr16
add
addr16
add
test
add
jle
add
addr16
add
jle
add
addr16
add
jle
add
sbb
mov
test
add
push
sbb
(bad)
mov
push
add
ret
test
add
addr16
add
sbb
ds
add
push
in
test
push
in
ret
add
add
jle
add
pop
add
jle
add
push
in
cs
add
jle
add
popw
add
jle
add
popw
add
jge
add
addr16
add
in
sub
add
jge
add
jge
add
addr16
add
ins
pop
add
pop
in
jbe
pop
add
ins
pop
add
ins
pop
add
sbb
fldcw
add
pop
in
shr
add
add
imul
inc
test
add
imul
test
add
pop
add
pop
in
imul
clc
test
add
pop
add
test
add
add
test
add
imul
inc
pop
in
cmp
add
test
add
pop
add
push
add
push
pop
add
pop
in
xchg
jo
sbb
adc
jge
add
add
add
add
sbb
mov
ret
jmp
push
pop
add
pop
add
dec
pop
add
jge
add
pop
in
mov
add
jge
add
dec
pop
add
sbb
xchg
push
pop
add
test
add
pop
in
mov
cld
sbb
xchg
scas
jge
add
push
pop
add
push
pop
add
pop
in
(bad)
push
pop
add
jge
add
sbb
cld
push
pop
add
push
pop
add
pop
in
mov
pop
add
sbb
dec
push
pop
add
dec
pop
add
jge
add
pop
in
push
dec
pop
add
add
add
sbb
mov
sbb
in
pop
add
sbb
add
add
in
call
add
jge
add
dec
pop
add
pop
in
jge
pop
add
pop
in
dec
pop
add
pop
in
arpl
add
dec
pop
add
dec
pop
add
add
add
dec
pop
add
sbb
dec
bound
jmp
dec
pop
add
jge
add
pop
add
jge
add
pop
add
jge
add
dec
pop
add
jge
add
in
jno
pop
add
dec
pop
add
pop
add
sbb
ror
add
sbb
lods
push
pop
add
pop
in
mov
pop
add
sbb
xchg
push
pop
add
sbb
pushf
push
pop
add
sbb
add
sbb
adc
add
in
das
push
pop
add
dec
pop
add
jge
add
jge
add
pop
add
dec
pop
add
in
test
add
dec
pop
add
dec
pop
add
pop
add
sbb
and
add
pop
in
fisttp
add
sbb
(bad)
dec
pop
add
sbb
ret
dec
pop
add
dec
pop
add
sbb
leave
dec
pop
add
pop
in
bound
add
add
pop
add
jge
add
add
add
pop
add
push
pop
add
sbb
into
push
pop
add
in
or
add
push
pop
add
jge
add
push
pop
add
jge
add
push
pop
add
pop
add
in
lock
pop
add
sbb
lea
add
push
pop
add
add
add
push
pop
add
jg
add
pop
add
pop
in
stc
push
pop
add
jle
add
push
pop
add
jle
add
pop
in
sbb
add
imul
jmp
imul
fdivr
add
push
add
in
and
pop
add
jge
add
pop
add
in
fisubr
add
add
add
jle
add
push
add
in
shr
mov
add
pop
in
cmps
push
add
sbb
mov
pop
in
dec
push
add
sbb
sub
add
pop
in
inc
push
add
jge
add
push
add
in
call
jle
add
add
add
pop
in
scas
push
add
push
add
in
je
pop
add
sbb
mov
pop
add
in
stos
push
add
add
push
add
in
nop
push
add
test
add
pop
pop
add
fs
neg
add
test
add
pop
pop
add
arpl
(bad)
fcomp
add
test
add
add
add
pop
add
arpl
call
pop
add
test
add
pop
add
in
mov
test
add
pop
pop
add
arpl
(bad)
mov
test
add
pop
pop
add
in
les
add
sbb
mov
arpl
(bad)
mov
test
add
push
pop
add
in
loopne
pop
add
xchg
add
arpl
inc
pop
pop
add
test
add
pop
pop
add
(bad)
in
in
pop
pop
add
test
add
pop
pop
add
(bad)
in
mov
xchg
add
popa
in
or
add
sbb
add
popa
in
push
push
pop
add
sbb
dec
push
pop
add
in
adc
pop
add
in
adc
add
in
fcomp
add
add
pop
pop
add
test
add
sbb
iret
pop
pop
add
sbb
mov
sbb
(bad)
pop
pop
add
popa
in
lahf
pop
pop
add
sbb
sbb
add
pop
pop
add
pop
add
xchg
add
push
pop
add
sbb
xchg
push
pop
add
push
pop
add
pop
add
sbb
movs
push
pop
add
push
pop
add
push
pop
add
push
pop
add
xchg
add
pop
pop
add
sbb
inc
push
pop
add
xchg
add
add
add
push
pop
add
xchg
add
xchg
add
xchg
add
test
add
pop
add
pop
add
sbb
push
push
pop
add
sbb
adc
add
sbb
or
add
sbb
(bad)
push
pop
add
sbb
not
add
sbb
xor
add
push
pop
add
sbb
cmps
push
pop
add
push
pop
add
sbb
ins
push
pop
add
sbb
jns
pop
add
sbb
push
push
pop
add
sbb
pop
push
pop
add
push
pop
add
push
pop
add
pop
add
xchg
add
push
pop
add
sbb
push
push
pop
add
sbb
mov
xchg
add
pop
add
sbb
inc
push
pop
add
xchg
add
push
pop
add
sbb
dec
push
pop
add
sbb
push
push
pop
add
sbb
arpl
add
test
add
sbb
mov
add
pop
pop
add
test
add
pop
add
pop
pop
add
test
add
test
add
pop
add
sbb
fstp
add
sbb
cmp
add
sbb
ins
pop
pop
add
sbb
ss
pop
add
sbb
inc
pop
pop
add
sbb
cmp
pop
add
pop
pop
add
sbb
bound
add
sbb
iret
push
pop
add
jle
add
jg
add
jle
add
jle
add
pop
add
jle
add
pop
add
jle
add
pop
add
pop
add
sbb
xchg
pop
pop
add
xchg
add
pop
pop
add
sbb
ja
pop
add
sbb
rcr
sub
pop
add
sbb
pop
pop
add
sbb
push
pop
pop
add
add
add
sbb
cmp
add
xchg
add
pop
pop
add
xchg
add
pop
pop
add
test
add
pop
pop
add
test
add
pop
pop
add
test
add
add
add
sbb
mov
test
add
add
add
pop
add
test
add
pop
pop
add
test
add
pop
pop
add
test
add
pop
pop
add
test
add
pop
pop
add
sbb
push
pop
pop
add
test
add
pop
pop
add
test
add
sbb
or
cld
test
add
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
test
add
push
pop
add
add
pop
add
sbb
xor
add
sbb
dec
pop
pop
add
sbb
push
pop
pop
add
sbb
xor
add
test
add
add
add
push
pop
add
sbb
inc
pop
pop
add
sbb
xor
add
sbb
dec
push
pop
add
push
pop
add
push
pop
add
push
pop
add
cwde
mov
add
add
test
add
sbb
push
test
add
sbb
test
add
sbb
pop
test
add
sbb
and
sbb
aad
sbb
add
call
test
add
test
add
push
pop
add
sbb
mov
sbb
mov
sbb
aam
pop
add
sbb
loope
pop
add
push
pop
add
jp
call
add
add
jns
push
push
pop
add
pop
add
jns
(bad)
std
push
pop
add
sbb
movs
push
pop
add
sbb
mov
add
sbb
sbb
add
sbb
pop
pop
pop
add
sbb
pop
pop
pop
add
jge
add
sbb
cmp
pop
or
lea
sbb
jns
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
(bad)
jmp
pop
add
sbb
jns
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
push
outs
in
ins
dec
pop
add
sbb
mov
sbb
and
sbb
adc
sbb
and
sbb
and
jmp
sbb
call
sbb
add
sbb
add
sbb
add
sbb
add
sbb
movs
sbb
add
add
add
sbb
add
add
jl
add
sbb
sbb
add
add
mov
add
xchg
mov
sbb
sbb
daa
sbb
add
sbb
add
sbb
inc
outs
in
retf
add
xchg
mov
in
sbb
or
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
loop
in
xchg
sbb
xchg
sbb
dec
dec
pop
add
outs
in
push
sbb
adc
sbb
sbb
mov
sbb
push
sbb
and
sbb
daa
sbb
adc
sbb
xchg
jnp
add
xchg
mov
sbb
test
sbb
jno
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
bound
push
dec
pop
add
jg
add
dec
pop
add
xchg
mov
xchg
jg
add
jnp
add
jg
add
jg
add
sbb
fs
add
ins
in
les
add
jg
add
sbb
push
jg
add
jg
add
jg
add
sbb
bound
call
outs
in
in
sbb
movs
jge
add
jle
add
jle
add
sbb
in
sbb
aad
sbb
aam
sbb
movs
jle
add
sbb
mov
mov
xchg
jle
add
jle
add
sbb
xchg
jle
add
sbb
gs
add
add
in
bound
add
jle
add
sbb
and
jle
add
jle
add
jle
add
in
adc
add
add
jge
add
push
pop
add
in
aad
sbb
movs
jge
add
jge
add
jge
add
sbb
movs
test
add
sbb
xchg
test
add
jp
sbb
sbb
test
add
sbb
push
test
add
sbb
test
add
add
in
push
test
add
pusha
pop
add
jae
call
test
add
test
add
mov
add
test
add
test
add
test
add
test
add
mov
add
test
add
sbb
xchg
test
add
test
add
add
add
in
xchg
test
add
jb
jmp
sbb
adc
test
add
sbb
frstor
sbb
push
test
add
sbb
and
sbb
lods
sbb
sbb
test
add
sbb
adc
sbb
cmp
sbb
in
sbb
aad
sbb
aam
sbb
push
jno
inc
mov
add
sbb
add
sbb
movs
sbb
movs
sbb
xchg
sbb
mov
sbb
ret
call
sbb
adc
sbb
sbb
xor
sbb
and
add
add
sbb
adc
sbb
adc
mov
daa
sbb
popa
(bad)
sbb
add
xchg
sbb
add
sbb
aad
sbb
in
sbb
bound
call
sbb
bound
jmp
sbb
xchg
sbb
xchg
sbb
rol
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
cmp
mov
push
sbb
cmp
sbb
jmp
sbb
and
sbb
adc
sbb
bound
call
pop
add
js
sbb
sbb
jno
sbb
add
sbb
add
sbb
add
sbb
add
add
call
sbb
jmp
sbb
add
out
sbb
xchg
sbb
add
add
add
nop
sbb
sbb
sbb
lods
nop
sbb
add
sbb
add
sbb
add
in
out
pop
add
or
adc
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aam
sbb
aad
sbb
adc
(bad)
js
pop
add
sbb
movs
sbb
movs
sbb
push
sbb
xchg
sbb
sbb
or
sbb
push
sbb
push
add
add
sbb
sbb
sbb
fst
mov
sbb
test
sbb
lods
(bad)
sbb
add
sbb
adc
sbb
push
jge
jmp
jg
add
in
aad
sbb
movs
test
add
jg
add
jg
add
jg
add
add
add
sbb
mov
sbb
sbb
(bad)
sbb
add
(bad)
sbb
add
sbb
gs
add
add
in
xor
add
or
sbb
jg
add
jg
add
jg
add
jle
add
add
add
jle
add
in
inc
pop
pop
add
or
or
jle
add
jle
add
jle
add
sbb
loop
in
xchg
jle
add
jbe
jmp
sbb
adc
jle
add
sbb
dec
or
add
sbb
push
jle
add
sbb
and
sbb
lods
xchg
sbb
sbb
jle
add
xchg
sbb
add
jge
add
jge
add
jge
add
jge
add
in
in
sbb
bound
call
jge
add
sbb
movs
test
add
jmp
add
test
add
add
add
sbb
lds
mov
push
test
add
mov
add
sbb
add
sbb
and
test
add
jnp
(bad)
mov
mov
add
lea
add
test
add
test
add
test
add
test
add
test
add
test
add
in
add
add
mov
add
sbb
add
test
add
test
add
add
sbb
ret
(bad)
out
pop
pop
add
in
neg
add
test
add
test
add
add
add
test
add
test
add
jns
inc
jns
jmp
jns
call
pop
pop
add
sbb
in
sbb
add
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sar
inc
add
add
pop
pop
add
jns
jmp
pop
add
in
mov
or
and
sbb
adc
sbb
and
sbb
adc
sbb
adc
jg
dec
arpl
add
in
repz
add
in
sti
bound
add
in
ret
bound
add
add
add
or
push
xchg
sbb
add
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
inc
pop
add
sbb
int
sbb
add
sbb
adc
sbb
and
sbb
and
add
add
in
adc
jg
jmp
sbb
jmp
popa
pop
add
sbb
add
sbb
add
jl
call
popa
pop
add
sbb
xchg
sbb
add
add
push
sbb
add
sbb
adc
sbb
push
sbb
add
add
add
add
sbb
add
sbb
add
sbb
std
xchg
sbb
sbb
sbb
add
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
bound
jmp
pop
pop
add
test
add
sbb
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
call
sbb
sbb
push
sbb
push
sbb
in
sbb
and
sbb
sub
sbb
and
sbb
and
sbb
pop
sbb
adc
sbb
test
mov
(bad)
jg
add
sbb
add
jg
add
jg
add
jg
add
jle
jmp
pop
pop
add
or
lods
xchg
sbb
add
sbb
gs
add
sbb
push
jg
add
add
sbb
bound
call
sbb
adc
jmp
jg
push
jg
add
jg
add
jg
(bad)
std
popf
sbb
xchg
jge
add
jle
add
jle
add
pop
add
jle
add
and
xchg
jle
add
jle
add
push
add
jle
add
sbb
push
jle
add
jns
sbb
sbb
mov
jle
add
push
add
jle
add
jle
add
jg
(bad)
jle
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jge
add
jge
add
jge
add
sub
movs
test
add
sbb
xchg
test
add
mov
add
test
add
call
push
test
add
sbb
test
add
in
jecxz
sbb
and
fs
adc
sbb
test
add
sbb
daa
test
add
test
add
sbb
jmp
fs
fadd
add
test
add
gs
fiadd
add
fs
lods
test
add
fs
(bad)
mov
add
test
add
sbb
test
add
sbb
push
test
add
add
sbb
bound
sbb
and
addr16
adc
sbb
es
daa
test
add
data16
push
test
add
addr16
jmp
addr16
fadd
sbb
jmp
sbb
aad
sbb
fiadd
sbb
popf
add
add
sbb
adc
add
sbb
mov
push
add
sbb
sbb
push
sbb
push
sbb
sbb
sbb
bound
jmp
fs
(bad)
mov
add
sbb
and
sbb
adc
add
add
sbb
in
sbb
inc
jg
push
mov
add
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
loop
out
xchg
sbb
sar
jmp
sbb
ret
call
sbb
sbb
add
add
sbb
push
sbb
push
sbb
adc
call
arpl
aad
sbb
adc
sbb
dec
mov
add
test
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
add
push
add
cwde
push
add
sbb
push
sbb
add
add
sbb
bound
call
test
add
sbb
add
sbb
add
sbb
in
sbb
inc
jg
add
add
call
sbb
(bad)
bound
aad
sbb
out
popa
sbb
mov
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
call
bound
xchg
sbb
int
push
add
sbb
and
add
add
sbb
adc
sbb
and
jge
push
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
test
add
jg
add
jg
add
call
movs
jg
add
jg
add
or
sbb
add
add
add
xchg
push
add
sbb
push
jg
add
sbb
fs
add
out
adc
add
or
sbb
jg
add
jg
add
jg
add
jle
add
jle
add
out
aad
sbb
in
sbb
push
bound
bound
call
jle
add
ja
jmp
jle
add
bound
shl
jmp
jle
add
jle
add
sbb
push
jle
add
sbb
ret
fs
add
sbb
push
jle
add
jle
add
sbb
jge
push
add
jle
add
jle
add
add
add
jle
add
sbb
lea
sbb
jge
add
jge
add
push
add
jge
add
jge
add
jge
add
sbb
add
int3
popa
sbb
mov
push
add
test
add
sbb
push
test
add
sbb
test
add
sbb
bound
call
sbb
adc
jmp
jge
add
test
add
cld
pop
add
test
add
test
add
test
add
ja
sbb
test
add
xchg
push
add
test
add
test
add
add
add
test
add
jp
jmp
jp
call
test
add
sbb
push
test
add
out
pop
add
sbb
test
add
add
add
js
sbb
test
add
xchg
push
add
sbb
jne
push
add
test
add
sbb
in
sbb
inc
jns
call
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
sbb
movs
sbb
xchg
sbb
fucomp
pop
add
sbb
xchg
sbb
xchg
sbb
lds
mov
push
sbb
lods
xchg
push
add
add
push
add
sbb
push
sbb
and
sbb
add
(bad)
cmp
add
popa
sbb
test
push
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aam
sbb
aad
sbb
adc
push
popa
sbb
mov
mov
xchg
sbb
test
add
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
push
outs
out
sbb
bound
call
sbb
in
sbb
and
sbb
fs
add
sbb
adc
sbb
adc
sbb
test
mov
xlat
sbb
add
add
add
sbb
add
sbb
add
sbb
dec
or
lods
mov
add
sbb
add
sbb
push
sbb
add
sbb
bound
call
sbb
and
push
sbb
add
call
jge
add
sbb
add
sbb
in
sbb
xlat
sbb
aam
sbb
adc
je
sbb
sbb
mov
sbb
mov
add
sbb
movs
sbb
movs
sbb
loop
out
xchg
sbb
shr
add
add
jmp
sbb
adc
sbb
sbb
mov
pop
add
sbb
push
sbb
and
sbb
and
sbb
lods
mov
add
sbb
int
push
add
sbb
cmp
jg
add
jg
add
jg
add
jg
add
out
into
push
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
pop
add
sbb
addr16
add
add
mov
add
mov
data16
add
jg
add
push
add
jg
add
jg
add
out
sub
add
sbb
test
push
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
outs
out
in
sbb
add
(bad)
out
push
mov
cmps
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
add
sbb
bound
jmp
sbb
and
imul
pop
jle
add
push
add
jle
add
jge
add
jge
add
jge
add
jge
add
out
add
add
jge
add
xchg
push
add
test
add
add
add
test
add
test
add
jae
jmp
sbb
push
test
add
jae
jmp
sbb
xchg
test
add
sbb
and
add
adc
test
add
test
add
push
add
xchg
add
xchg
push
add
test
add
test
add
test
add
test
add
test
add
jae
(bad)
jl
sbb
mov
mov
xchg
test
add
test
add
test
add
sbb
test
add
add
sbb
push
jno
push
pop
sbb
push
test
add
pop
sbb
and
pop
sbb
mov
mov
push
test
add
push
add
test
add
sbb
in
sbb
aam
sbb
aad
sbb
push
jno
jmp
sbb
bound
call
sbb
sbb
movs
sbb
xchg
sbb
push
repz
add
sbb
xchg
sbb
xchg
sbb
lds
mov
push
sbb
lds
sbb
push
jg
add
sbb
push
sbb
and
sbb
add
call
pop
out
and
pop
out
jmp
add
sbb
in
sbb
xlat
sbb
aad
sbb
push
pop
out
cmp
add
sbb
movs
sbb
fstp
sbb
xchg
sbb
movs
sbb
fidivr
sbb
xchg
sbb
sbb
sbb
sbb
sbb
data16
pop
sbb
push
sbb
in
movs
push
add
js
sbb
sbb
int
push
add
sbb
int
push
add
sbb
adc
sbb
add
out
frstor
add
sbb
add
sbb
add
sbb
movs
sbb
add
pop
add
sbb
xchg
sbb
add
mov
mov
push
sbb
add
add
push
add
sbb
push
sbb
add
sbb
add
(bad)
mov
test
add
lahf
push
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
bound
inc
data16
mov
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
ret
call
data16
xchg
sbb
int
push
add
sbb
and
sbb
adc
sbb
and
sbb
and
pop
out
adc
pop
out
in
sbb
xchg
test
add
jg
add
jg
add
jg
add
jg
add
sbb
in
lahf
push
add
jg
add
jg
add
lahf
push
add
sbb
gs
add
sbb
push
jg
add
out
call
add
pop
sbb
mov
push
add
jg
add
jg
add
jle
add
jle
add
out
popa
pop
sbb
push
push
out
fld
add
jle
add
inc
sbb
cmps
jle
add
push
out
add
add
sbb
mov
push
add
jle
add
sbb
push
jle
add
sbb
fs
add
sbb
bound
dec
jle
add
dec
sbb
adc
sbb
jp
sbb
push
push
out
mov
sbb
bound
push
push
out
retf
add
or
ins
movs
push
add
jge
add
jge
add
jge
add
test
add
sbb
rcr
(bad)
out
dec
sbb
ja
mov
xchg
test
add
sahf
push
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
adc
add
add
inc
sbb
add
call
sbb
push
pop
out
xor
add
test
add
sbb
pop
push
sbb
cmc
popf
push
add
test
add
test
add
test
add
test
add
test
add
sbb
add
call
pop
out
movs
test
add
sbb
xchg
test
add
sbb
sti
in
pop
add
sbb
push
test
add
add
add
sahf
push
add
test
add
push
add
sbb
lods
popf
push
add
test
add
test
add
out
in
sbb
inc
pop
out
aad
sbb
push
pop
out
in
dec
sbb
xlat
sbb
aad
sbb
cmps
sbb
movs
sbb
add
push
sbb
movs
sbb
xchg
sbb
enter
and
sbb
push
sbb
add
pop
add
sbb
sbb
push
sbb
push
sbb
adc
sbb
push
sbb
sbb
add
and
sbb
and
or
add
sbb
add
sbb
in
sbb
in
sbb
aam
sbb
aad
sbb
adc
jmp
sbb
add
jmp
sbb
rcr
push
inc
sbb
ja
mov
xchg
sbb
inc
xchg
add
sbb
push
add
add
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
adc
dec
sbb
jecxz
sbb
and
inc
sbb
pop
sbb
xchg
inc
sbb
in
sbb
mov
sbb
aad
sbb
jns
sbb
in
sbb
ins
inc
sbb
mov
mov
fiadd
push
add
sbb
add
sbb
add
pop
out
mov
pop
out
mov
pop
out
push
dec
sbb
bound
jmp
sbb
adc
inc
dec
sbb
mov
mov
sbb
push
add
sbb
add
add
add
sbb
in
sbb
aam
sbb
aad
sbb
push
pop
out
std
dec
sbb
mov
mov
aam
sbb
jne
push
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
rcr
call
dec
sbb
ja
mov
push
sbb
in
push
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
adc
pop
out
jle
sbb
mul
sbb
sbb
xchg
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aam
sbb
test
jg
add
mov
inc
jle
call
add
jmp
jg
add
fdivrp
sub
xchg
call
sbb
push
jg
add
fdivrp
jmp
xchg
fdivrp
push
jg
add
test
call
xchg
fdivrp
and
jg
add
fdivrp
int
(bad)
xchg
xchg
fdivrp
in
sbb
aad
sbb
sub
jge
call
xchg
fdivrp
aad
sbb
aad
sbb
inc
(bad)
pop
xchg
fdivrp
xchg
jle
add
sbb
xchg
jle
call
xchg
fdivrp
gs
add
sbb
mov
(bad)
popa
xchg
fdivrp
gs
add
sbb
jns
fdivrp
pop
jp
inc
add
call
jle
add
sbb
sbb
xchg
fdivrp
adc
jge
add
sbb
std
jns
(bad)
jmp
jge
add
jge
add
fdivrp
sar
and
test
add
mov
(bad)
popa
scas
fdivrp
xchg
test
add
add
add
fdivrp
jns
(bad)
xchg
lods
fdivrp
push
test
add
sbb
jecxz
fdivrp
or
fdivrp
and
test
add
mov
(bad)
popa
stos
fdivrp
and
test
add
mov
(bad)
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
dec
jg
add
add
jmp
jle
jmp
fdivrp
jne
fdivrp
push
jle
jmp
jle
call
jl
jmp
jl
call
jl
push
jl
jmp
jl
jmp
jnp
(bad)
sti
jl
dec
jl
inc
jl
push
jnp
(bad)
std
jnp
dec
add
add
fdivrp
adc
jl
jmp
sbb
sub
aad
sbb
int
fdivrp
shl
fdivrp
xor
fdivrp
pop
mov
fdivrp
xchg
sbb
mov
js
(bad)
mov
jp
dec
js
inc
js
inc
js
call
add
inc
jns
inc
jns
call
ja
(bad)
fnsave
(bad)
jge
fdivrp
cmc
jbe
call
mov
sbb
mov
jb
(bad)
fnstenv
(bad)
mov
jne
(bad)
jmp
fdivrp
outs
jne
push
fdivrp
mov
dec
jne
call
jbe
call
add
add
jne
jmp
fdivrp
sub
jne
dec
jne
(bad)
sti
je
(bad)
stc
je
jmp
je
(bad)
mov
jne
call
fdivrp
inc
jo
inc
jae
dec
jae
(bad)
(bad)
dec
jae
(bad)
fnstenv
call
jo
push
fdivrp
xchg
jo
add
add
inc
jo
inc
fdivrp
aas
jo
(bad)
fnstenv
dec
jb
call
mov
fdivrp
out
(bad)
out
(bad)
aas
(bad)
fdivrp
dec
(bad)
fdivrp
jmp
(bad)
fdivrp
sub
fdivrp
and
fdivrp
(bad)
(bad)
fdivrp
jnp
fdivrp
xor
(bad)
mov
(bad)
fdivrp
sub
fdivrp
inc
(bad)
fdivrp
stos
(bad)
mov
fdivrp
jg
fdivrp
add
fdivrp
fld
fdivrp
jmp
fdivrp
std
rcr
loope
fdivrp
icebp
rcr
xlat
rcr
pop
jle
(bad)
cmp
dec
jle
dec
fdivrp
cmp
call
jg
call
jg
(bad)
jg
fdivrp
sub
add
add
(bad)
std
scas
fdivrp
iret
scas
fdivrp
or
scas
fdivrp
jecxz
fdivrp
shr
fdivrp
xlat
lods
fdivrp
imul
fdivrp
iret
scas
fdivrp
mov
lods
fdivrp
adc
lods
fdivrp
std
lods
fdivrp
and
(bad)
in
jl
push
jl
jmp
scas
fdivrp
das
scas
fdivrp
jg
fdivrp
mov
fdivrp
push
scas
fdivrp
stc
lods
fdivrp
imul
(bad)
jmp
fdivrp
retf
stos
fdivrp
imul
fdivrp
mov
fdivrp
test
stos
fdivrp
sti
stos
fdivrp
stc
stos
fdivrp
fldcw
fdivrp
imul
fdivrp
out
fdivrp
daa
stos
fdivrp
add
fdivrp
push
stos
fdivrp
jmp
fdivrp
xchg
test
fdivrp
mov
fdivrp
retf
test
fdivrp
gs
fdivrp
aad
sbb
cmps
jle
sbb
sbb
movs
jle
add
jle
add
fdivrp
gs
add
sbb
leave
jnp
(bad)
fiadd
fdivrp
pop
jnp
jmp
jle
adc
add
jbe
jmp
jge
call
jno
dec
jae
call
jb
jmp
fdivrp
xchg
jae
push
jae
jmp
jae
push
jae
call
fdivrp
icebp
mov
inc
jno
push
add
dec
jno
call
fdivrp
ins
jo
dec
fdivrp
xor
fdivrp
pop
mov
dec
mov
(bad)
cmp
jo
(bad)
fldcw
(bad)
fisttp
fdivrp
(bad)
or
jb
inc
jb
push
fdivrp
add
jmp
xchg
(bad)
mov
add
add
mov
call
mov
inc
mov
jmp
fdivrp
ror
fdivrp
jne
fdivrp
xchg
fdivrp
adc
dec
jae
(bad)
mov
jb
call
mov
jmp
outs
fdivrp
xchg
test
add
fdivrp
int
fdivrp
xchg
call
sbb
and
add
add
inc
fdivrp
jmp
jo
push
jo
jmp
jo
jmp
fdivrp
and
inc
jns
call
outs
fdivrp
popa
outs
fdivrp
dec
outs
fdivrp
add
dec
jp
push
sbb
add
jne
(bad)
mov
jnp
inc
jb
inc
add
add
jno
call
jb
(bad)
cmp
jb
jmp
jb
(bad)
aas
jb
push
sbb
sbb
jmp
jbe
jmp
jp
inc
jp
inc
fdivrp
dec
jnp
push
fdivrp
mov
jp
jmp
adc
loopne
ins
ret
gs
add
gs
sbb
stos
sbb
leave
xchg
popa
jae
loope
inc
in
mov
arpl
and
loope
push
jb
ins
ins
mov
jns
cmp
pop
gs
movs
ja
dec
jmp
ja
xor
ins
imul
pop
gs
in
outs
call
jge
gs
xchg
jno
mov
add
jmp
jns
mov
sbb
leave
xchg
popa
jae
loopne
push
int3
call
jno
mov
or
gs
push
inc
lds
push
xor
dec
xor
add
add
xor
sbb
cmp
cmp
outs
cmp
pop
fst
jns
mov
add
sbb
jae
xchg
push
js
push
js
jge
add
mov
push
fdiv
jbe
ret
add
mov
gs
dec
jb
loop
jae
add
add
and
adc
cmp
xchg
push
mov
outs
imul
jbe
push
fnsave
push
push
imul
mov
sbb
and
out
ins
popa
xor
sbb
das
push
push
imul
lea
cdq
mov
je
adc
loope
push
js
ins
outs
xlat
mov
inc
int
cmp
outs
int
jbe
shl
jmp
xchg
push
ret
add
dec
ins
clc
mov
add
push
dec
popa
jl
push
outs
xchg
xchg
jno
jp
cmp
arpl
xchg
add
mov
je
xchg
jno
cmp
add
mov
inc
cmp
cmp
add
ret
aaa
les
movs
sbb
jmp
test
imul
ds
call
jae
cmp
add
call
ja
mov
jle
add
call
jns
leave
loope
fs
lds
gs
jno
repz
jmp
push
dec
jnp
outs
mov
bound
lods
jno
jl
jns
inc
jmp
jbe
pop
jle
jb
(bad)
mov
sbb
sar
enter
out
ins
jb
call
imul
loope
(bad)
ins
dec
jb
ins
ins
mov
cmp
add
add
add
call
cmp
inc
mov
stos
cmp
push
aad
xchg
add
jmp
outs
gs
sbb
fadd
inc
push
scas
ins
imul
jecxz
add
xchg
stos
cmp
imul
call
sbb
push
xchg
jmp
test
pop
gs
call
push
test
push
fs
in
je
loop
dec
enter
in
cmp
arpl
mov
add
sbb
repnz
jae
test
add
ins
push
imul
je
movs
test
aaa
out
fs
stos
je
xchg
test
add
out
inc
cmp
cmp
add
sbb
fld
ja
shl
jbe
xchg
lods
jbe
mov
cmp
imul
xchg
test
cmp
test
outs
(bad)
call
jns
aad
xchg
lods
call
cmp
add
outs
hlt
out
imul
xchg
imul
imul
pop
add
jne
pop
call
ja
cmp
sbb
je
loop
dec
inc
loope
ins
clc
mov
add
sbb
push
xchg
fdivr
adc
mov
jb
fdiv
and
scas
cmp
les
loop
add
xchg
cmp
je
xchg
sbb
dec
adc
push
imul
xchg
sbb
push
or
mov
inc
jb
sbb
pop
lods
cmp
add
pop
fldcw
scas
je
inc
mov
dec
inc
loope
push
push
sub
sbb
ins
dec
inc
lods
aas
push
inc
mov
dec
hlt
loopne
push
push
sub
jmp
ins
js
jno
js
jns
mov
pop
gs
fdiv
mov
ja
mov
test
add
lods
je
cwde
mov
add
int
sbb
fs
lods
jbe
js
ins
push
imul
dec
imul
mov
outs
and
popa
je
add
je
ret
popa
je
xchg
ja
in
fnstcw
add
pop
gs
jno
js
ins
je
test
jne
in
add
add
and
in
push
mov
stos
sbb
popa
test
jb
loopne
gs
in
popa
aad
ja
mov
or
mov
jo
jcxz
add
sbb
pop
(bad)
jno
js
jbe
xor
ja
daa
mov
popa
repz
gs
cmp
push
lods
push
sub
je
jmp
in
add
push
jae
loopne
push
out
ins
gs
push
loop
sbb
loopne
fld
mov
int3
loope
push
mov
jbe
enter
xchg
sbb
clc
fisubr
lods
ja
jge
je
(bad)
outs
dec
outs
je
imul
sbb
imul
sub
mov
je
jg
add
cmp
arpl
mov
add
pop
gs
mov
mul
imul
jne
xchg
test
add
mov
arpl
imul
mov
add
push
outs
mov
push
imul
add
add
shl
jle
add
lods
cmp
mov
add
gs
loope
jae
cmps
ins
je
cmps
outs
outs
inc
in
popa
jo
ins
gs
mov
add
test
gs
pusha
imul
call
daa
dec
dec
ins
out
je
inc
jecxz
add
dec
dec
ins
out
cmp
jne
test
push
js
dec
popa
jno
cmp
ins
shl
jns
aam
je
mov
mov
stos
test
push
outs
mov
sbb
mov
ins
test
je
imul
pop
ins
sbb
ins
pop
scas
cmp
add
ins
inc
xor
add
jne
xor
jns
inc
loop
add
mov
arpl
cmp
ins
cmp
ins
dec
repnz
mov
add
mov
fmul
je
and
test
push
mov
sbb
leave
rcr
mov
dec
gs
jns
enter
rol
popa
jae
cmps
jne
mov
sbb
enter
je
sbb
lods
ja
sub
jae
loope
inc
inc
mov
dec
gs
test
gs
jns
dec
xchg
sbb
add
mov
outs
fcom
outs
add
push
imul
add
add
test
add
lea
mov
jg
gs
loope
ins
mov
nop
cmp
gs
stos
cmp
in
loop
outs
cli
add
push
ins
inc
jno
push
je
mov
add
xchg
jno
jns
outs
push
cmp
ins
add
mov
je
cmp
ins
add
dec
arpl
cmps
cmp
ins
in
loopne
je
cmp
loopne
push
jl
cmp
jmp
add
mov
outs
test
loopne
push
mov
xchg
cmp
add
jge
jae
movs
jbe
shl
cmp
add
clc
and
push
jbe
xchg
mov
add
dec
gs
ret
ins
jb
scas
push
rol
jae
inc
mov
sbb
add
imul
jae
cmps
cmp
add
scas
cmp
mov
sbb
adc
jbe
test
add
add
adc
mov
ja
loop
outs
cwde
mov
add
sbb
imul
jl
gs
scas
je
xchg
and
xchg
loopne
jae
add
fs
stos
jns
cmp
gs
xchg
jno
cmp
sbb
add
add
cmp
sbb
out
jg
gs
mov
outs
repz
dec
add
xor
cmps
push
enter
lods
stos
cmp
stos
jge
add
xchg
jno
mov
sbb
fistp
push
hlt
movs
push
outs
in
ins
add
jge
push
push
push
xchg
cmp
mov
imul
or
cmps
imul
ins
xor
imul
sbb
cmp
fild
test
fs
js
jge
add
movs
ins
dec
js
imul
dec
add
sbb
(bad)
lods
jns
mov
push
cmps
mov
addr16
and
aas
imul
test
sbb
(bad)
jg
fs
mov
je
test
fs
dec
gs
sbb
add
imul
cmp
add
mov
outs
out
jns
cmp
gs
add
pop
add
add
call
add
jl
gs
mov
ror
cmp
lds
jno
rcr
cmp
gs
mov
stos
xchg
jbe
xacquire
add
lods
sbb
fs
sbb
sub
imul
imul
add
add
sbb
popf
ins
gs
jne
inc
mov
push
cdq
sbb
push
jle
add
mov
imul
jle
add
cwde
je
xchg
cmp
dec
add
mov
outs
mov
cmp
cmps
mov
in
enter
je
jmp
cwde
cmp
mov
dec
not
sbb
sbb
ins
outs
jbe
push
bound
test
add
cmp
outs
xor
outs
dec
outs
push
inc
jns
add
xchg
jmp
imul
js
(bad)
ja
xor
aaa
test
imul
add
add
jns
gs
data16
mov
sbb
movs
xchg
fxch
push
inc
mov
leave
cmp
add
dec
je
ins
arpl
enter
js
add
push
xor
xor
ins
xchg
test
pop
push
imul
push
sub
sub
je
push
aad
add
add
jmp
test
jo
jno
mov
addr16
retf
push
adc
jb
fs
rol
gs
jne
jp
dec
imul
jne
gs
int3
jne
mov
push
je
add
imul
jmp
add
add
sbb
addr16
push
jne
popa
pop
push
cmp
sub
je
mov
jae
imul
ja
outs
cmp
dec
and
cdq
jae
ja
jo
addr16
cmp
add
jne
sub
jae
test
add
add
jo
push
pop
jb
jne
imul
jne
imul
int
popa
mov
add
jno
xchg
jns
cs
je
popf
sbb
outs
cmp
imul
inc
addr16
add
or
push
jb
gs
sub
ins
sub
push
push
cmp
xchg
inc
xchg
jl
add
int
push
aam
push
cs
je
iret
test
jl
sbb
jo
outs
(bad)
outs
jbe
xlat
outs
je
cwde
jge
add
shr
xor
data16
in
push
add
imul
ins
cmp
push
xchg
sbb
add
add
xor
fs
ins
sbb
movs
test
cmp
jb
pusha
cmp
imul
sbb
dec
xchg
gs
ja
cmp
outs
sti
outs
push
hlt
jns
outs
add
jbe
outs
ins
push
mov
outs
mov
push
shl
imul
jne
inc
(bad)
jo
imul
add
add
arpl
outs
mov
cmp
add
jo
inc
out
jns
mov
jns
jge
lahf
add
popa
jo
sar
gs
jbe
cmp
add
test
jb
jo
dec
inc
jno
inc
xor
jns
cmps
test
jb
jo
inc
cmp
jb
js
popa
out
sbb
add
add
sbb
jne
inc
js
push
popa
out
dec
popa
xlat
pusha
jne
mov
jne
inc
mov
imul
(bad)
fs
dec
in
jbe
enter
stos
test
pop
arpl
push
call
pusha
je
js
pusha
push
xchg
jg
add
aas
inc
sub
add
dec
add
add
cmp
push
inc
jae
dec
cmp
js
jg
add
aas
push
dec
jae
popa
shl
inc
(bad)
sbb
test
push
outs
jnp
push
gs
sbb
fadd
jbe
mov
cmp
add
leave
cmp
push
int3
popa
sbb
xlat
jle
outs
aad
dec
imul
push
dec
jb
jo
ins
js
cmp
cmp
add
jne
push
outs
cs
jbe
push
ins
outs
imul
jle
add
ins
dec
inc
imul
jns
outs
cli
test
fisub
dec
je
cmp
jne
add
add
ins
ins
jns
outs
retf
add
je
popa
rcl
fs
pop
inc
retf
les
es
shr
push
jle
dec
adc
outs
sbb
mov
outs
jns
cmp
dec
imul
add
int
gs
ja
cmp
push
inc
imul
inc
ins
cmp
gs
jb
sub
push
xor
jge
add
imul
imul
jge
add
imul
add
pop
jae
fsubr
imul
jge
outs
or
jno
jl
je
(bad)
xchg
sbb
add
sbb
arpl
push
je
push
gs
test
imul
dec
arpl
xchg
sbb
dec
test
outs
sub
imul
cmp
outs
neg
pusha
jns
imul
cwde
test
jb
fs
gs
jno
add
add
les
outs
popf
ret
mov
je
mov
ins
rcr
ins
sbb
ins
push
push
sbb
jb
cmp
ins
jno
push
dec
push
sub
sbb
cmp
push
outs
pop
cwde
push
cmp
jo
imul
fst
dec
add
add
jmp
pop
jbe
and
pop
ins
gs
cmp
outs
mov
push
and
pop
ins
cmps
pop
cmp
jae
lds
mov
jge
je
jb
jo
pop
dec
gs
cmp
add
push
je
jb
gs
xchg
dec
gs
jae
mov
add
add
add
jle
outs
sub
outs
cmp
jne
jo
dec
push
data16
push
(bad)
sbb
sbb
jb
jne
jo
dec
repz
ja
push
add
jno
jo
jo
jb
les
jb
sbb
jae
push
outs
leave
pusha
push
mov
popa
push
imul
les
mov
dec
add
add
mov
sbb
je
pop
outs
gs
jbe
xor
mov
outs
xchg
or
bound
fs
pop
sbb
cdq
sbb
ins
dec
(bad)
cmp
outs
sub
outs
inc
bound
sbb
inc
in
imul
outs
jnp
dec
add
or
xlat
js
popa
shl
adc
rcl
mov
or
xchg
ins
push
out
cmp
jno
ins
les
cmp
push
movs
or
rcl
pop
mov
pop
gs
mov
cmp
data16
add
sbb
(bad)
ss
xor
jb
jo
inc
and
pop
fs
ins
imul
jge
call
outs
popa
jo
ret
in
jne
mov
jns
mov
jns
mov
jne
ins
mov
imul
inc
adc
pop
fs
and
arpl
xchg
xchg
push
jb
pop
push
popa
push
sbb
imul
inc
push
ret
sbb
pusha
je
cmp
jbe
push
jne
outs
xor
ja
fst
(bad)
xchg
imul
mov
jne
repz
cmp
gs
pop
ins
popa
sbb
add
pop
ins
fnstsw
add
ins
ins
inc
movs
fstp
rcl
popa
(bad)
imul
js
jle
dec
adc
dec
push
jbe
ss
sbb
inc
jge
jb
outs
ins
push
pop
imul
ss
add
jge
jb
outs
ins
dec
push
addr16
gs
popa
sbb
sbb
xlat
push
imul
jns
data16
jns
js
jbe
jmp
jle
add
push
ins
dec
mov
cmp
outs
retf
add
jle
gs
push
jb
push
jno
mov
mov
pusha
je
test
add
push
push
xchg
ja
js
ins
outs
push
pop
sbb
adc
ins
dec
es
sbb
cmp
push
dec
cmp
add
pop
push
bnd
stc
ins
jbe
xchg
push
sbb
inc
mov
jmp
data16
jns
pusha
arpl
test
add
add
push
jno
mov
dec
gs
imul
or
ins
in
bound
mov
push
xchg
jae
test
add
bound
sub
jns
pusha
arpl
je
imul
js
jb
test
add
aas
addr16
jbe
jb
jne
outs
jmp
add
add
ja
gs
push
push
fdiv
outs
jnp
dec
add
dec
popa
lods
jbe
inc
int
cmp
outs
aad
mov
(bad)
imul
test
add
lds
in
ins
jb
popa
aas
inc
movs
cmp
gs
ins
jb
popa
aas
push
movs
add
add
inc
add
ins
inc
inc
ins
jbe
inc
sub
sub
cmp
fldcw
jae
(bad)
push
bnd
add
test
test
imul
imul
js
jl
int
jns
(bad)
pop
pop
ins
ror
gs
mov
add
cmp
add
pop
ins
dec
test
jne
jbe
add
test
gs
les
js
popa
jo
and
pop
pop
ins
push
pop
gs
dec
jb
outs
cmp
pop
gs
sbb
or
call
push
and
jb
popa
xchg
mov
add
add
jb
cmp
add
test
jb
pop
sbb
outs
ret
pusha
cmp
jb
(bad)
aas
jae
test
add
jae
jb
mov
repz
je
mov
xchg
aam
add
dec
jne
jae
push
mov
outs
push
bound
ss
sbb
(bad)
ins
gs
xor
add
pop
ins
dec
push
pusha
jns
cmp
inc
(bad)
sbb
and
ins
jb
mov
push
mov
inc
and
fs
push
jmp
leave
popa
jo
(bad)
sbb
sub
ja
fsub
dec
les
sbb
test
push
outs
mov
xchg
push
jae
je
popa
jns
jbe
cmp
jbe
xchg
fs
jo
mov
outs
pop
mov
or
shr
pop
jbe
inc
arpl
add
sbb
jmp
lea
rcr
add
sbb
jmp
mov
mov
(bad)
jae
ret
jno
mov
push
adc
fs
inc
ret
pop
push
data16
mov
jg
add
outs
jno
enter
(bad)
mov
add
or
jne
outs
ins
je
iret
sbb
and
cmp
outs
xor
dec
jg
jb
pusha
ins
sbb
sbb
gs
add
add
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
and
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
inc
call
icebp
(bad)
sbb
push
call
(bad)
(bad)
inc
sbb
sar
sbb
push
sbb
icebp
stc
sbb
cmp
sbb
(bad)
mov
out
aas
push
mov
xor
in
das
and
push
cmp
imul
jne
pusha
push
add
(bad)
imul
cmp
outs
jle
jne
test
sub
imul
and
pop
push
push
jne
sbb
inc
sub
inc
sbb
sbb
sbb
sbb
push
inc
arpl
add
jb
jae
inc
and
stc
sbb
xchg
stc
sbb
jno
sbb
lods
and
sbb
repz
pop
push
test
test
repnz
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
add
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
add
add
jg
add
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
add
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
add
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
popa
addr16
popa
addr16
push
push
add
sbb
push
test
add
test
add
jno
add
(bad)
sbb
add
sbb
jmp
sbb
pop
test
add
test
add
sbb
out
sbb
fld
sbb
call
sbb
fild
sbb
stos
sbb
xchg
sbb
lods
sbb
xchg
sbb
pushf
sbb
jno
sbb
pop
sbb
pop
sbb
pop
sbb
jno
sbb
mov
sbb
imul
add
sbb
xor
sbb
add
sbb
pop
sbb
test
sbb
adc
sbb
out
sbb
xchg
test
add
sbb
cmps
test
add
sbb
add
sbb
ja
sbb
nop
add
add
sbb
inc
sbb
nop
sbb
cmp
sbb
jl
sbb
mov
sbb
nop
sbb
push
sbb
jne
sbb
aad
sbb
add
sbb
sub
sbb
xchg
sbb
das
sbb
movs
sbb
pop
sbb
xchg
sbb
or
sbb
data16
jmp
sbb
pop
sbb
rol
sbb
cld
sbb
add
sbb
add
sbb
add
sbb
jo
sbb
jmp
add
sbb
add
sbb
ins
test
add
sbb
push
add
add
add
add
sbb
add
sbb
add
pusha
cmp
js
cmp
jns
outs
mov
imul
add
jecxz
mov
call
cwde
sbb
in
sbb
aad
sbb
aad
sbb
sbb
add
(bad)
out
loop
out
outs
call
test
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
sbb
xchg
jg
add
jg
add
jg
add
sbb
fs
add
sbb
push
jg
add
sbb
fs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
push
sbb
sub
nop
sbb
sbb
std
nop
movd
add
nop
cmc
jge
add
nop
add
sbb
imul
sbb
xor
jge
add
adc
lods
test
add
sbb
pushf
test
add
sbb
outs
test
add
sbb
mov
sub
jno
sbb
mov
sbb
arpl
sbb
jb
sbb
jge
sbb
mov
sbb
nop
les
add
jge
add
nop
int
sbb
(bad)
sbb
fdivr
add
push
sbb
iret
jge
add
push
sbb
inc
jle
add
mov
sbb
jmp
cli
out
push
xchg
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
add
add
sbb
xchg
sbb
movs
sbb
movs
or
test
or
test
or
jne
or
jne
or
test
or
test
or
sbb
cmp
mov
sti
pop
mov
sti
pop
lds
sti
pop
mov
sti
pop
mov
sti
pop
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
add
add
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
add
add
jne
data16
push
pop
jne
bnd
jb
test
jmp
add
pop
inc
xchg
rcr
fmulp
push
dec
ror
push
(bad)
push
dec
push
retf
pop
and
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
add
add
sbb
and
sbb
adc
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
ud2
adc
or
jne
or
test
or
test
or
jne
or
gs
add
cmp
mov
sti
pop
lds
sti
pop
mov
sti
pop
mov
sti
pop
lds
sbb
adc
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
cmp
pop
ds
outs
jb
xor
outs
aad
push
leave
imul
push
test
add
enter
dec
push
dec
rcl
dec
mov
dec
push
test
pop
inc
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
push
add
test
pop
jns
sbb
mov
popa
add
add
sbb
cmp
pop
add
sbb
inc
test
add
xchg
clc
cld
xchg
sbb
gs
cld
movs
sbb
in
test
add
movs
ret
sbb
sbb
push
sbb
push
sbb
sbb
sbb
aam
pop
add
sbb
in
pop
add
sbb
push
mov
sbb
and
sbb
adc
sbb
in
sbb
push
call
add
sbb
movs
call
add
sbb
sub
mov
mov
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
adc
sbb
xchg
sbb
and
sbb
inc
jns
add
fiadd
fsubr
add
sbb
push
sbb
and
sbb
xchg
sar
add
cdq
(bad)
and
jmp
call
test
add
sbb
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
sbb
add
sbb
sbb
add
sbb
gs
push
add
sbb
add
push
add
sbb
add
sbb
aad
sbb
aad
sbb
and
sbb
aad
sbb
aad
sbb
in
push
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
cmp
add
sbb
push
sbb
sbb
or
test
push
add
push
add
sbb
ins
pop
push
add
sbb
sbb
sbb
jo
(bad)
lods
sbb
lods
sbb
aad
sbb
dec
sbb
inc
sbb
sbb
sbb
stc
sbb
cmc
sbb
icebp
sbb
fstp
sbb
adc
sbb
or
sbb
in
sbb
add
sbb
stc
sbb
fstp
sbb
fstp
sbb
aad
sbb
rcr
sbb
int
sbb
jmp
sbb
sbb
sbb
jns
sbb
jne
sbb
mov
sbb
lods
sbb
lds
sbb
fstp
sbb
adc
sbb
jmp
sbb
add
sbb
sbb
lds
add
sbb
add
sbb
sbb
adc
sbb
mov
sbb
fstp
add
sbb
(bad)
fs
add
sbb
lds
add
add
jle
add
sbb
push
jle
add
and
add
and
add
and
add
and
add
and
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
add
add
test
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
sbb
adc
sbb
adc
sbb
and
sbb
and
sbb
adc
sbb
adc
sbb
out
fiadd
out
fiadd
xlat
jge
add
jge
add
jl
add
jl
add
sbb
aad
sbb
mov
sbb
add
sbb
add
sbb
mov
add
sbb
add
sbb
pop
push
sbb
xchg
sbb
test
sbb
push
sbb
mov
sbb
and
sbb
xor
sbb
cmc
sbb
push
and
add
sbb
sub
sbb
dec
push
sbb
pop
sbb
imul
sbb
rol
sbb
rcl
sbb
cdq
adc
sbb
cmc
and
jno
sbb
loope
sbb
mov
and
je
sbb
mov
sbb
pop
sbb
lods
and
jnp
sbb
movs
and
dec
sbb
sbb
jge
add
sbb
mov
sbb
movs
and
leave
jge
add
sbb
add
sbb
ins
and
aad
sbb
aad
call
add
and
jmp
idiv
sbb
add
sbb
add
inc
sbb
xchg
sbb
and
call
add
daa
(bad)
in
sbb
sbb
call
sbb
cmc
push
dec
add
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
jne
dec
add
add
add
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
lds
add
std
out
adc
sbb
(bad)
std
out
adc
sbb
out
sbb
inc
std
out
jecxz
sbb
(bad)
jg
add
jg
add
sbb
sub
sbb
push
jg
add
sbb
arpl
sbb
loop
out
cmp
(bad)
jg
add
sbb
jmp
add
jle
add
sbb
inc
jle
add
jl
add
jl
add
jg
add
and
call
jg
add
jnp
add
sbb
push
(bad)
out
in
jle
add
jle
add
jle
add
jmp
inc
jmp
call
jle
add
jle
add
add
add
mov
aas
gs
add
sbb
push
test
inc
push
jle
add
sbb
and
jle
add
sbb
cmc
mov
sbb
adc
mov
inc
and
jle
or
sbb
in
sbb
add
add
jns
leave
out
out
sub
jge
mov
xchg
stos
push
inc
lds
mov
mov
lods
fsub
jno
vpavgw
ins
jo
inc
and
iret
xchg
push
xchg
fisttp
ret
mov
rol
mov
cmps
mov
push
pop
fld
inc
repnz
clc
mov
add
mov
inc
or
add
add
mov
gs
mov
and
jmp
das
dec
inc
test
jecxz
js
das
pop
add
inc
or
xor
jecxz
dec
loop
outs
sub
repz
stc
dec
(bad)
pop
xlat
inc
js
lahf
xchg
mov
mov
pushf
gs
mov
add
sub
dec
jge
mov
xor
or
sub
cmp
and
lock
fcom
das
popa
je
xchg
pop
sahf
pop
std
pop
lods
jnp
addr16
pop
loopne
retf
enter
outs
ror
cmc
or
std
je
sbb
xor
int3
adc
int3
and
aas
aam
adc
ss
and
mov
loopne
outs
out
fist
(bad)
outs
xchg
in
aas
(bad)
push
xor
ins
gs
pop
or
lds
pop
lods
test
idiv
and
xor
mov
push
shl
pop
mov
into
test
or
sub
ror
xchg
js
sar
ja
dec
cmp
add
add
sbb
xchg
or
mov
movs
dec
mov
stc
mov
and
les
bound
hlt
fnstcw
shl
dec
jl
cmp
jmp
test
mov
(bad)
jmp
and
mov
inc
mov
dec
ds
loopne
jbe
ins
adc
add
add
sbb
loop
inc
movs
inc
mov
les
cmp
add
cmp
inc
or
xor
jecxz
and
cmp
sbb
jne
pop
cmp
cmc
push
shl
pop
sub
lods
adc
cmps
shr
lods
xor
lods
adc
test
or
into
mov
add
dec
jae
repnz
mov
fisubr
push
repz
mov
adc
cmp
add
adc
(bad)
lahf
adc
add
and
or
lea
add
shr
xlat
loopne
gs
(bad)
jge
sbb
add
mov
pop
push
lods
into
jbe
retf
fs
inc
in
sbb
std
mov
add
mov
jbe
ins
out
dec
ins
je
cmp
hlt
cmp
sbb
jge
sbb
add
sar
push
in
ins
outs
adc
mov
add
into
jbe
out
outs
gs
dec
imul
sbb
lods
lea
add
mov
jne
(bad)
in
inc
movs
test
add
jg
add
mov
cmp
out
pop
out
ins
imul
loopne
pop
imul
sbb
outs
fs
mov
push
aas
jns
jbe
inc
loop
je
lock
pop
inc
out
ds
and
xchg
add
mov
outs
outs
jp
jo
jno
push
push
adc
cmp
out
inc
fld
imul
ds
xchg
test
add
jle
add
mov
outs
jb
call
imul
mov
sbb
add
ret
jne
sub
outs
outs
dec
hlt
inc
bound
pop
out
cmp
loope
jae
ficomp
inc
gs
add
lea
add
mov
push
js
cmp
icebp
outs
outs
jae
imul
sbb
add
mov
push
(bad)
in
pop
(bad)
jmp
imul
sbb
add
out
imul
jmp
sbb
sub
test
add
pop
push
xor
js
pop
in
inc
gs
out
jne
adc
(bad)
sub
test
add
test
add
test
add
int
pop
adc
test
add
mov
outs
pop
ret
jb
jmp
gs
out
outs
fs
mov
sbb
ficomp
add
sbb
ret
sbb
mov
add
add
sbb
lods
in
add
test
add
sbb
xchg
test
add
test
add
sbb
pop
test
add
adc
add
adc
add
icebp
outs
jo
stos
aaa
jne
fdivr
imul
cmc
cmp
stos
push
add
add
lock
(bad)
in
cmp
lods
sub
out
xor
push
call
cmp
test
scas
sub
leave
mov
xor
(bad)
bound
ja
pop
jmp
ds
cmp
outs
fs
sbb
sbb
push
sbb
push
sbb
sbb
add
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
jge
add
sbb
das
sbb
lds
sbb
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
pop
sbb
add
sbb
push
sbb
add
add
add
sbb
add
sbb
add
sbb
fiadd
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
stos
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
call
add
add
add
sbb
sbb
push
sbb
push
sbb
sbb
sbb
pop
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
jmp
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
add
add
jg
add
jle
add
jmp
add
jle
add
jle
add
mov
push
out
js
in
loope
pop
mov
ins
outs
xchg
mov
sbb
xchg
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
add
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
pop
sbb
push
sbb
sbb
jge
sbb
test
sbb
jge
sbb
adc
sbb
and
sbb
xchg
test
and
sbb
ins
test
adc
sbb
movs
test
add
add
and
sbb
in
sbb
fld
sbb
mov
sbb
xchg
sbb
test
sbb
xchg
sbb
mov
sbb
sbb
pop
sbb
push
sbb
ins
xchg
add
sbb
push
sbb
push
sbb
sub
sbb
sbb
sbb
sub
sbb
and
sbb
adc
test
add
test
add
sbb
add
sbb
add
sbb
movs
sbb
add
sbb
add
es
in
cdq
sbb
leave
test
add
add
add
sbb
gs
fdivrp
or
test
add
sbb
cmp
jns
add
jp
add
cmp
sbb
or
add
cmp
jmp
sbb
dec
jp
add
sbb
or
sbb
add
cmp
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
add
add
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
xchg
inc
pushf
add
jg
add
jg
add
jg
add
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
sbb
push
jg
add
aam
and
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
sbb
push
jle
add
aas
xlat
ds
push
int3
jl
sbb
ret
daa
das
scas
movs
xchg
cmc
push
and
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
add
add
test
add
test
add
test
add
test
push
mov
xchg
cmp
shl
movs
retf
cmp
xchg
inc
call
add
or
ins
test
xlat
fiadd
(bad)
hlt
(bad)
pop
(bad)
idiv
pop
or
les
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
in
movs
sbb
pop
sbb
lds
ss
jmp
cmp
call
jmp
inc
inc
fdivr
mov
mov
lods
into
jne
inc
cld
cmp
test
(bad)
fld
rep
pop
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
add
add
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
ins
movs
rcl
imul
jns
pop
lods
mov
cmps
cmps
cld
push
push
aad
inc
(bad)
(bad)
call
jmp
inc
pop
loop
aaa
(bad)
(bad)
stos
fwait
call
or
jmp
or
inc
add
add
fisubr
mov
cmp
sub
xor
mov
in
test
or
mov
aad
mov
add
fld1
aad
dec
xor
push
add
sbb
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
add
add
sbb
in
sbb
aad
sbb
aad
sbb
sub
push
sbb
inc
fldcw
movs
popf
mov
jecxz
int
fsub
jmp
test
(bad)
inc
push
int3
inc
push
enter
fwait
inc
pop
mov
inc
mul
lock
arpl
(bad)
std
pop
(bad)
cmp
xchg
xchg
outs
push
jl
inc
call
mov
pop
sbb
call
dec
leave
call
add
xchg
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
jg
add
jg
add
movs
sahf
sbb
push
retf
cmps
ror
shl
jae
hlt
push
(bad)
jmp
fwait
call
jmp
sar
xor
leave
jmp
mov
mov
(bad)
cmp
mov
inc
add
add
sbb
jbe
pop
dec
pop
(bad)
cmp
mov
(bad)
jg
inc
jmp
gs
jmp
add
or
mov
inc
test
jmp
cli
pop
call
mov
sbb
gs
add
sbb
push
jle
add
add
add
jle
add
jle
add
add
push
imul
mov
fs
mov
repnz
mov
push
idiv
jge
sar
clc
test
call
inc
fdivr
in
dec
sar
mov
retf
lahf
ret
(bad)
mov
add
add
cmp
out
mov
cld
mov
cli
daa
xchg
(bad)
call
sub
jmp
push
aas
call
cmp
es
dec
push
sar
push
aad
cmp
jmp
xor
cld
ja
pop
inc
lds
jae
(bad)
sbb
mov
sbb
(bad)
sbb
xchg
xor
add
xor
add
test
add
test
add
mov
add
push
mov
fimul
dec
outs
repz
in
retf
inc
xor
call
dec
pushf
(bad)
cmp
mov
inc
xor
inc
and
inc
add
add
xchg
retf
mov
mov
dec
call
call
dec
iret
inc
es
(bad)
cmp
xchg
jmp
hlt
jnp
and
outs
call
push
fs
aas
es
and
jl
or
mov
(bad)
dec
sar
mov
retf
inc
(bad)
clc
jmp
add
pop
call
mov
dec
pop
sub
sbb
ret
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
movs
mov
add
enter
cmps
cmp
lock
jno
dec
ins
icebp
(bad)
cmp
inc
lahf
jmp
and
inc
repnz
aas
cs
push
repz
(bad)
fiadd
push
inc
(bad)
ins
lock
ss
(bad)
mov
popf
sar
dec
xlat
jmp
daa
(bad)
dec
and
xor
jle
pushf
push
data16
cmp
inc
jge
push
daa
jg
or
dec
dec
sahf
inc
xlat
inc
(bad)
xchg
int3
cli
ja
pop
call
retf
lods
int
gs
push
xor
(bad)
push
pop
je
sbb
je
sbb
xchg
sbb
add
sbb
add
push
scas
test
cmp
jmp
out
pushf
(bad)
cmps
push
or
inc
add
add
cmp
push
(bad)
lods
push
sti
mov
push
xchg
retf
inc
ins
cmc
call
loopne
inc
ins
idiv
and
aam
adc
xchg
iret
(bad)
jle
cmps
push
sub
(bad)
cmp
dec
test
fldcw
mov
(bad)
outs
idiv
cvttps2pi
inc
xchg
xlat
inc
inc
(bad)
inc
xchg
enter
pop
jmp
jl
push
cs
dec
popa
das
(bad)
dec
data16
(bad)
sbb
xor
enter
mov
sbb
adc
sbb
and
add
scas
pop
mov
jb
push
imul
add
out
call
xchg
call
pop
dec
(bad)
(bad)
ds
cmp
push
repnz
jmp
hlt
lods
(bad)
fadd
push
popa
mov
jmp
pop
stc
call
dec
(bad)
call
into
inc
outs
loop
jmp
call
lock
adc
and
inc
jle
pop
sub
call
in
mov
inc
lahf
inc
xlat
(bad)
aas
call
ja
pop
jmp
int
push
lods
int
push
std
(bad)
push
inc
std
(bad)
push
cmp
pop
and
sbb
xchg
jle
add
jle
add
popa
add
xchg
jb
shr
call
cwde
(bad)
in
pop
cmp
dec
mov
(bad)
push
mov
inc
and
dec
jmp
inc
fcos
ss
int3
(bad)
std
ins
icebp
call
loopne
sub
lock
inc
(bad)
jmp
inc
popf
inc
xchg
loop
xchg
pusha
out
(bad)
jnp
iret
call
add
(bad)
cmp
es
out
sub
call
cmp
jmp
out
test
inc
xchg
xlat
(bad)
mov
dec
xlat
stc
idiv
pop
jmp
ret
sub
pop
cmp
mov
pop
pop
jmp
test
add
test
add
lods
push
fcmovb
sbb
(bad)
repz
(bad)
cmp
inc
push
jp
test
dec
mov
push
or
push
sub
(bad)
out
inc
sar
add
ins
mov
dec
xchg
retf
jmp
cwde
mov
jmp
add
inc
sub
jmp
pop
mov
adc
scas
inc
jge
pop
pop
mov
jae
stos
dec
lahf
call
out
mov
inc
lahf
inc
xlat
(bad)
aas
pop
jmp
aas
aad
ja
pop
call
mov
sbb
add
sbb
add
sbb
jbe
pop
push
push
add
add
sbb
movs
sbb
movs
sbb
syscall
xchg
pop
inc
adc
mov
popf
cmp
dec
mov
fcos
push
dec
mov
cdq
lock
(bad)
call
mov
cmp
jl
aas
pop
cmp
call
call
int3
jmp
hlt
call
repz
repnz
fs
inc
retf
cli
out
call
cli
mov
dec
or
jmp
clc
jle
fwait
cmc
scas
call
mov
shr
test
mov
mov
jmp
in
test
mov
ret
(bad)
mov
inc
sar
test
inc
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
mov
dec
mov
jbe
dec
mov
xchg
jae
test
xchg
lock
dec
lock
push
sub
dec
stc
scas
(bad)
jmp
idiv
out
repz
imul
add
mov
dec
dec
sar
mul
push
or
jmp
(bad)
xchg
(bad)
fiadd
xchg
(bad)
cmp
mov
jmp
call
stos
dec
lahf
inc
cmps
call
out
mov
xchg
sahf
inc
enter
ret
inc
pushf
clc
ja
pop
call
jge
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
sub
ins
or
mov
dec
mov
(bad)
in
or
dec
and
jmp
daa
movs
call
sbb
(bad)
stc
popa
(bad)
jmp
hlt
inc
sar
dec
fdivr
inc
call
dec
dec
popf
call
nop
call
(bad)
xchg
call
xchg
jmp
xchg
call
xchg
jmp
in
mov
push
add
dec
stc
mov
call
sub
test
inc
mov
(bad)
mov
add
add
pop
jmp
jg
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
or
jno
mov
(bad)
push
inc
(bad)
jmp
imul
push
(bad)
push
xchg
push
xchg
inc
mov
inc
dec
mov
ds
repz
call
ss
inc
jl
mov
lahf
jmp
xchg
sahf
(bad)
jmp
pop
(bad)
fiadd
xchg
push
add
jecxz
xchg
(bad)
fcom
push
hlt
mov
adc
cmps
jmp
stos
jmp
mov
push
dec
popf
call
out
mov
add
add
sahf
inc
enter
ret
cmp
cmp
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
sbb
imul
jmp
push
inc
(bad)
cmp
pop
cmp
dec
(bad)
(bad)
in
pop
cmp
pop
cmp
pusha
test
inc
and
push
mov
call
cmps
call
xchg
int3
jmp
aaa
idiv
pop
repnz
dec
pop
mov
pop
dec
xchg
xchg
jmp
xchg
call
xchg
call
cmc
cmps
(bad)
jl
popf
jmp
jmp
(bad)
in
add
inc
add
add
(bad)
sar
shl
out
and
test
inc
xchg
enter
ret
cmp
or
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
enter
jbe
jmp
add
push
add
dec
out
mov
xor
test
xor
test
dec
in
pop
inc
xchg
sar
xor
push
(bad)
(bad)
inc
sar
xor
(bad)
mov
pusha
test
loop
mov
out
push
test
neg
dec
pop
mov
add
icebp
cdq
dec
(bad)
aad
push
(bad)
mov
jmp
call
aas
out
mov
cmp
(bad)
cmp
ret
cmp
jp
lea
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
sub
outs
or
sbb
inc
inc
inc
push
mov
std
repnz
call
repz
cmp
xchg
inc
jmp
dec
inc
inc
lods
call
repz
idiv
pop
xor
(bad)
cli
gs
call
pushf
(bad)
jnp
jg
ins
pop
cmp
push
xchg
jmp
xchg
jmp
xchg
jmp
mov
xchg
(bad)
aas
inc
call
into
(bad)
cmp
mov
push
inc
pushf
push
mov
call
cmp
jmp
rep
inc
inc
lahf
inc
nop
enter
ret
inc
pushf
clc
idiv
pop
(bad)
cli
dec
lea
sbb
add
sbb
and
sbb
add
add
add
sbb
or
or
push
jo
inc
sbb
push
xchg
push
lods
call
aas
jp
lds
notrack
push
(bad)
cmp
inc
cmps
dec
xchg
enter
retf
inc
sahf
(bad)
xchg
iret
jmp
icebp
mov
inc
add
add
push
cmp
push
mov
fimul
inc
inc
repz
clc
sar
neg
inc
inc
popf
push
mov
call
out
mov
inc
lahf
(bad)
cmp
(bad)
jmp
pushf
clc
ja
pop
(bad)
jp
lea
jg
add
jg
add
jg
add
mov
add
add
add
jg
add
jg
add
cmps
jb
push
ret
xchg
jo
dec
jne
or
test
sbb
ins
das
mov
and
pop
(bad)
aas
pop
cmp
and
call
fwait
inc
leave
(bad)
jmp
repnz
loopne
cmp
inc
add
add
(bad)
dec
out
(bad)
js
jge
pop
pop
cmp
dec
mov
jns
iret
call
call
mov
inc
(bad)
sar
repnz
leave
call
ss
or
mov
and
mov
leave
ds
(bad)
mov
ds
clc
test
lea
jle
add
add
add
sbb
push
jle
add
jle
add
jle
add
jle
add
rcr
add
jmp
data16
jl
mov
(bad)
out
sub
dec
in
mov
inc
pop
cmp
and
inc
mov
dec
clc
mov
inc
cdq
(bad)
sub
dec
xor
jmp
mov
sahf
dec
mul
(bad)
sti
call
mov
in
mov
inc
stc
sar
out
xlat
inc
sar
cli
xchg
jmp
retf
cmp
call
and
call
stos
push
inc
pushf
call
movs
clc
ja
pop
dec
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
or
jg
xor
inc
shl
nop
xlat
(bad)
fmul
mov
add
and
cs
call
lods
inc
add
add
fdivr
jae
(bad)
inc
(bad)
(bad)
jmp
loopne
and
jmp
(bad)
cmp
fwait
(bad)
jge
lahf
jmp
mov
push
call
call
(bad)
inc
call
xchg
(bad)
call
cmp
dec
out
(bad)
jmp
repz
add
cmps
jmp
imul
dec
push
mov
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
xchg
add
ror
pop
ret
jmp
dec
mov
(bad)
cmp
call
cmp
mov
inc
add
add
in
test
dec
sti
mov
inc
(bad)
enter
(bad)
and
dec
aaa
out
jmp
and
(bad)
call
cmp
(bad)
inc
(bad)
idiv
jmp
cmc
call
mov
inc
cmp
pushf
jmp
jmp
push
iret
call
out
mov
mov
pop
cmc
mov
(bad)
cmp
lods
clc
ja
pop
dec
sbb
add
sbb
add
sbb
add
sbb
add
mov
cmovl
push
les
mov
dec
daa
repnz
add
add
cmc
mov
push
in
mov
sub
lods
call
movs
call
lahf
inc
retf
pushf
(bad)
(bad)
std
and
in
call
loopne
xor
mov
inc
jmp
(bad)
idiv
or
inc
cmp
aam
test
sar
mov
(bad)
jmp
sar
ds
or
mov
call
aas
call
inc
fprem
test
lea
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
mov
cmp
aad
sbb
add
inc
mov
lock
ds
push
xchg
leave
dec
out
test
sbb
inc
call
xchg
int
ret
(bad)
std
es
xor
(bad)
fdiv
loope
cmps
xor
(bad)
mov
fwait
mov
dec
xchg
jmp
mov
inc
xor
add
add
inc
(bad)
mov
push
dec
into
(bad)
sti
xor
jmp
sar
aas
out
xchg
push
mov
jb
jp
push
dec
lods
call
add
clc
ja
pop
dec
sbb
in
sbb
aad
sbb
aad
sbb
movs
jle
add
jle
add
jle
add
or
and
adc
addr16
xchg
bnd
in
mov
sar
aaa
fdivr
push
cmp
jmp
fcos
pop
xor
retf
inc
(bad)
cwde
mov
jmp
jecxz
pop
mov
jmp
fwait
icebp
inc
sub
dec
stc
inc
hlt
dec
idiv
pop
inc
mov
call
cmp
dec
push
xlat
(bad)
jmp
dec
cs
in
jl
aad
lods
jmp
cmp
bndstx
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
jmp
int3
dec
leave
cld
stos
das
dec
jmp
jb
jmp
in
das
pusha
int3
call
dec
movs
call
push
sar
cmc
push
(bad)
call
push
aam
(bad)
push
int3
inc
pusha
(bad)
dec
ins
mov
inc
outs
repnz
pop
repz
pop
cmc
call
dec
(bad)
dec
xlat
inc
inc
(bad)
inc
inc
ret
cmp
aam
cmp
dec
into
inc
fs
jmp
(bad)
call
out
mov
mov
sub
cmp
sbb
lods
clc
ja
pop
dec
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
daa
cmc
ins
adc
sbb
dec
ins
dec
ins
repz
in
mov
dec
scas
jmp
dec
scas
call
dec
mov
jmp
mov
call
jmp
dec
add
jnp
leave
dec
inc
sar
test
popf
jmp
inc
xlat
inc
inc
retf
call
ret
dec
dec
pusha
(bad)
inc
arpl
call
jle
dec
daa
jg
in
jl
aad
lods
call
cmp
clc
test
mov
add
add
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
mov
cmp
pop
mov
add
jmp
call
jmp
inc
cmps
dec
mov
cmp
jmp
pop
xchg
dec
mov
call
xor
call
inc
stos
jmp
inc
mov
push
pop
cmc
dec
push
jmp
push
in
(bad)
cmp
inc
addr16
inc
push
(bad)
jmp
(bad)
call
out
xchg
and
jae
mov
call
cmp
inc
add
add
mov
dec
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xor
jae
jg
inc
(bad)
aas
jmp
pushf
pop
sar
push
retf
inc
sub
jmp
xor
jmp
xor
scas
jmp
fdivr
pop
inc
movs
inc
mov
dec
mov
push
pop
sar
push
jbe
inc
in
inc
jmp
ins
idiv
bound
bound
jmp
icebp
call
gs
inc
arpl
sar
dec
cs
out
jle
push
das
test
stos
cmp
clc
adc
nop
dec
adc
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
inc
(bad)
gs
jbe
pushf
sub
jns
cs
pop
jle
mov
add
add
jmp
in
jmp
out
call
outs
out
inc
jle
(bad)
std
jno
inc
popa
iret
(bad)
call
push
lods
call
push
mov
call
jo
inc
jno
inc
jb
jmp
jmp
push
jne
jmp
jmp
jmp
idiv
adc
inc
jne
inc
imul
add
bound
jmp
call
stos
(bad)
dec
jmp
aam
sub
clc
test
jg
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
add
add
sbb
xchg
es
dec
xchg
jmp
out
jmp
out
call
jae
inc
jae
inc
jae
jmp
loopne
pop
jb
inc
into
(bad)
std
pop
retf
call
out
call
in
inc
jae
inc
in
(bad)
aas
jo
dec
hlt
dec
mov
jmp
inc
add
add
dec
(bad)
(bad)
out
aas
call
sub
mov
repnz
(bad)
clc
mul
iret
xor
(bad)
mov
or
adc
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
add
add
sbb
in
sbb
aad
sbb
mov
add
jmp
out
jmp
out
call
jne
inc
jbe
inc
jne
jmp
jnp
call
jp
dec
addr16
jmp
pop
mov
call
movs
call
sbb
inc
add
add
(bad)
xchg
(bad)
cmp
pop
push
or
call
mov
cmp
sbb
pop
jle
mov
add
sbb
cmp
ficom
cmp
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
add
add
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
jmp
jnp
std
or
jmp
call
dec
dec
(bad)
jmp
sar
pop
daa
scas
(bad)
cmp
adc
dec
fnsave
push
jmp
add
mov
imul
xchg
pop
(bad)
jge
xchg
jmp
call
(bad)
jmp
das
stos
dec
cmp
dec
inc
popf
call
cmp
jmp
jmp
dec
cmp
mov
(bad)
out
ja
sbb
add
sbb
popa
dec
aam
and
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
pop
add
xchg
sti
mov
mov
push
xor
pop
jmp
out
gs
js
sbb
jmp
fdivr
or
arpl
test
mov
or
call
das
stos
push
je
push
aam
addr16
ret
call
popa
mov
inc
dec
(bad)
jmp
(bad)
call
ret
inc
int3
jmp
(bad)
(bad)
std
sub
call
test
cli
jno
xchg
aad
adc
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
adc
std
sahf
sbb
stos
call
push
mov
inc
or
push
sbb
inc
add
add
movs
jmp
dec
sahf
push
dec
enter
(bad)
call
mov
inc
idiv
bound
call
jmp
pusha
cmc
jmp
mov
inc
inc
ret
inc
pop
into
jmp
pop
int
ror
jmp
dec
leave
jmp
dec
enter
sar
test
add
add
sahf
call
loopne
test
jle
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
sub
ds
mov
mov
jmp
add
add
xor
cld
imul
jmp
push
jmp
imul
call
arpl
dec
(bad)
repz
mov
push
stc
dec
(bad)
jmp
(bad)
inc
vmovddup
ret
inc
inc
ret
cmp
into
call
int
bound
jmp
enter
(bad)
dec
mov
call
inc
clc
xor
sbb
aad
sbb
aad
sbb
movs
test
add
test
add
test
add
test
add
test
add
sbb
push
test
add
sbb
or
nop
loop
sbb
add
add
sar
pop
aaa
lods
dec
test
push
push
mov
stos
inc
call
mov
jmp
pop
mov
inc
mov
jmp
mov
dec
mov
jmp
clc
jmp
clc
call
push
(bad)
inc
aas
(bad)
inc
cmp
iret
call
dec
into
jmp
push
int
loop
retf
jmp
push
enter
cmps
inc
das
xchg
sti
test
fisub
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
mov
mov
gs
retf
(bad)
jl
mov
out
cld
xor
outs
xlat
inc
pop
mov
push
mov
inc
(bad)
lock
mov
fs
dec
mov
jmp
mov
call
cmp
inc
cmp
add
add
(bad)
(bad)
cmp
(bad)
dec
dec
dec
retf
outs
aam
daa
ins
sar
inc
cmp
inc
jge
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
or
xchg
jmp
sar
inc
fcos
dec
std
test
inc
inc
ret
pop
inc
sahf
call
mov
push
mov
push
fs
push
mov
jmp
call
(bad)
call
jmp
leave
push
lahf
inc
inc
fcos
ficomp
push
xor
dec
and
fwait
dec
mov
add
sub
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
add
add
sbb
adc
jg
add
jg
add
jg
add
jg
add
xchg
mov
inc
inc
inc
dec
push
sub
or
(bad)
clc
push
int
mov
xlat
(bad)
cld
data16
mov
sbb
mov
add
add
call
and
and
mov
stc
dec
clc
test
cmp
test
test
jg
xchg
adc
lock
jle
loope
adc
aad
sbb
and
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
imul
add
jle
add
sbb
push
jle
add
sbb
gs
add
in
ins
xchg
ss
push
into
adc
jle
add
push
mov
push
xor
clc
dec
push
mov
sub
add
add
in
adc
add
mov
test
xchg
and
jle
fild
movs
rcl
xchg
les
or
lods
imul
test
aaa
enter
mov
mov
cwde
push
mov
push
test
add
sbb
mov
jo
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
cmp
add
movs
test
add
cld
xor
adc
jmp
add
add
add
jecxz
dec
mov
mov
test
mov
leave
xor
jp
dec
mov
mov
stos
adc
scas
and
mov
imul
push
inc
adc
mov
xor
or
mov
dec
dec
mov
es
add
add
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
add
add
sbb
and
sbb
adc
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
rcr
jmp
pop
sbb
loop
out
mov
pop
in
bound
add
pop
fadd
push
pop
sbb
push
pop
sbb
pop
pop
sbb
bound
add
add
sbb
and
sbb
sbb
adc
sbb
add
pop
sbb
xor
pop
sbb
inc
sbb
in
sbb
xor
pop
sbb
inc
sbb
in
sbb
jne
sbb
aam
sbb
add
pop
sbb
cmc
jle
add
sbb
movs
pop
sbb
mov
sbb
xchg
pop
sbb
lds
add
add
pop
sbb
lds
add
add
sbb
push
pusha
sbb
add
pusha
sbb
cmc
jge
add
sbb
add
pusha
sbb
xor
pusha
sbb
inc
jle
add
pop
sbb
xor
pop
sbb
inc
jle
add
pop
sbb
jne
sbb
aam
sbb
add
pop
sbb
cmc
jge
add
sbb
movs
pop
sbb
stos
jge
add
sbb
fs
sbb
ret
add
add
sbb
gs
sbb
bound
add
sbb
adc
add
jle
add
jle
add
jle
add
sbb
push
jle
add
pop
sbb
inc
js
add
pop
sbb
push
pusha
sbb
bound
add
sbb
bound
add
fs
add
add
loop
sbb
mov
test
add
sbb
xchg
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
inc
sahf
cmp
add
add
xor
mov
push
rcr
or
movs
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
add
add
test
add
inc
cmps
or
inc
lods
pop
adc
push
(bad)
sar
pop
stc
repnz
inc
clc
jmp
mov
jmp
sbb
nop
mov
inc
(bad)
sub
ins
shr
cwde
aad
add
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
pop
aas
cmps
sbb
dec
pushf
dec
add
xchg
mov
sbb
lahf
dec
int
inc
pusha
(bad)
jmp
push
pushf
call
sub
call
add
xchg
std
jg
ds
fdiv
scas
(bad)
out
or
jmp
mov
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
dec
cmp
xor
push
enter
leave
lods
xor
(bad)
fs
inc
add
add
call
pop
ret
fs
call
pop
pop
call
inc
mov
sub
arpl
xchg
adc
aaa
sbb
sbb
jnp
mov
cmps
(bad)
cli
or
hlt
or
bound
sbb
add
sbb
sbb
add
add
add
sbb
enter
xchg
cmp
icebp
shl
push
push
hlt
push
push
inc
pop
(bad)
jmp
push
mov
arpl
cmps
jmp
dec
(bad)
jmp
inc
(bad)
call
hlt
jmp
in
push
jo
jmp
movs
dec
pop
push
mov
sub
push
push
ins
lock
add
add
xor
lods
pop
sar
add
xor
push
dec
xor
sbb
mov
aam
push
sbb
sbb
sbb
push
sbb
lock
jae
ret
stos
xor
jmp
in
dec
and
sub
jo
mov
popa
cmp
jmp
dec
aam
and
jmp
add
add
jmp
in
push
pop
(bad)
push
dec
aad
sub
jl
cmp
(bad)
call
sbb
and
xchg
call
and
jmp
push
call
xor
jmp
add
inc
into
push
js
leave
push
addr16
ret
inc
rcr
jg
add
sbb
push
jg
add
imul
sar
add
call
outs
out
(bad)
aas
das
mov
inc
xchg
xor
push
dec
sar
inc
arpl
(bad)
cmp
call
popf
dec
gs
push
sbb
(bad)
fld
mov
in
hlt
call
ss
ret
push
xlat
jmp
add
add
add
xor
push
pop
cs
fs
int3
push
push
dec
rcr
xor
sbb
gs
add
sbb
(bad)
bound
iret
mov
aas
jmp
(bad)
adc
push
mov
outs
sub
jmp
lods
call
sar
aas
imul
push
addr16
call
dec
aad
es
(bad)
pop
in
inc
add
add
dec
int3
call
push
mov
fisubr
mov
icebp
xor
jmp
push
call
xor
jmp
pop
icebp
das
(bad)
dec
aas
sub
les
xor
fstp
push
test
add
sbb
xlat
call
sar
inc
jmp
and
sub
add
add
inc
sahf
inc
mov
call
imul
call
push
mov
push
or
call
call
das
stos
inc
xor
jmp
xor
mov
add
xor
sbb
inc
mov
and
test
add
or
add
out
(bad)
aas
push
sbb
test
xor
sub
(bad)
ds
mov
push
push
(bad)
dec
or
dec
xchg
jmp
pop
mov
dec
and
add
add
jmp
jns
jmp
inc
lods
inc
push
xlat
push
pop
in
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
sbb
pop
int
pop
(bad)
test
call
es
and
enter
mov
add
addr16
cmp
call
xchg
call
xchg
push
xchg
dec
call
xor
dec
mov
call
cmp
jmp
outs
out
in
lods
inc
dec
enter
sar
cli
add
in
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
add
add
sbb
xchg
int
pop
fcmovb
xor
ror
push
jmp
sbb
inc
dec
cmps
push
pop
repnz
dec
movs
(bad)
cmp
inc
xlat
call
mov
jmp
xchg
inc
adc
(bad)
jmp
cmp
jmp
imul
adc
inc
add
add
push
enter
aam
clc
adc
sbb
add
sbb
push
sbb
add
sbb
push
sbb
pop
in
sbb
ror
push
jmp
lods
inc
inc
sub
call
repnz
cmp
inc
lods
inc
add
jbe
mov
inc
daa
mov
inc
fdivr
out
sub
jmp
outs
out
adc
stos
inc
dec
enter
aam
clc
push
pop
in
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
in
push
shr
inc
inc
add
add
pop
jl
mov
xor
(bad)
jns
mov
push
pop
sar
jne
push
ds
jmp
push
xchg
je
xchg
(bad)
aas
pop
jge
push
inc
repnz
sar
loope
fdivr
adc
xlat
jmp
ins
out
in
lods
inc
cmp
(bad)
clc
adc
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
icebp
loope
or
ret
and
lock
jmp
(bad)
dec
and
jmp
stos
dec
sar
dec
imul
call
dec
popf
call
mov
inc
add
add
idiv
cs
aam
dec
inc
sahf
jmp
dec
retf
outs
out
sbb
jmp
aas
(bad)
(bad)
clc
adc
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
jecxz
push
leave
jp
jmp
leave
call
es
nop
and
add
add
call
xlat
dec
mov
call
idiv
dec
pop
iret
jmp
mov
(bad)
cmp
call
push
inc
leave
(bad)
jle
(bad)
(bad)
std
dec
iret
jmp
jae
(bad)
cmp
cmp
xor
cmps
(bad)
clc
sti
pop
in
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
jmp
or
mov
retf
jns
notrack
outs
repz
dec
jle
xchg
ss
call
inc
leave
inc
mov
jmp
jmp
xor
push
retf
push
repnz
call
inc
call
aam
call
add
sar
jb
call
cs
fidivr
mov
(bad)
stc
cli
pop
in
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
in
jb
int
and
js
jmp
in
(bad)
clc
addr16
dec
inc
fwait
inc
retf
arpl
inc
add
add
in
inc
loope
push
arpl
jmp
lock
(bad)
jmp
push
fwait
inc
pop
ret
jmp
jno
(bad)
and
dec
inc
popf
(bad)
clc
stc
pop
in
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
(bad)
bound
loopne
inc
jmp
jmp
mul
dec
cmp
call
sahf
push
dec
leave
jmp
pop
int
jl
(bad)
cmp
push
fcos
push
sbb
jmp
and
(bad)
inc
pop
(bad)
jmp
jle
(bad)
cmp
test
push
ss
fidivr
pop
in
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
(bad)
fiadd
leave
cdq
(bad)
aam
int3
dec
jmp
loopne
inc
push
aam
cmp
and
dec
sbb
(bad)
jmp
mov
pop
sub
push
lahf
call
int
loop
sar
cmp
(bad)
jle
hlt
call
push
mov
jmp
jnp
(bad)
ds
jmp
ss
(bad)
clc
add
sbb
add
sbb
push
sbb
add
sbb
push
sbb
or
fistp
pop
inc
popf
fadd
add
add
adc
inc
test
je
cmp
xchg
inc
mov
mov
jle
movs
dec
jg
inc
fs
push
in
call
dec
jmp
pusha
mov
jmp
jle
(bad)
cmp
test
and
test
into
cmp
in
sbb
add
add
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
ins
pop
shl
pop
ret
sbb
out
pop
outs
jmp
jmp
imul
(bad)
dec
stos
call
push
movs
jmp
jmp
push
jno
jmp
call
jmp
cmc
inc
add
add
imul
inc
arpl
adc
xor
(bad)
call
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
mov
xor
mov
pop
jne
jmp
loopne
bound
add
add
jmp
jge
(bad)
imul
jmp
jecxz
push
outs
out
jmp
in
jmp
cmc
jmp
mov
push
pop
ret
dec
push
enter
out
sti
call
cmps
push
or
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
and
jle
add
pop
xchg
out
dec
jae
jmp
loopne
pop
outs
out
call
in
call
jmp
(bad)
cmp
inc
inc
fcos
sub
dec
sbb
mov
push
adc
(bad)
and
add
add
push
adc
(bad)
(bad)
cmp
in
loopne
pop
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
or
xchg
repz
call
add
mov
fisttp
ret
fild
pop
loop
inc
or
xchg
sbb
dec
inc
pushf
(bad)
cli
inc
sar
adc
call
dec
retf
and
(bad)
(bad)
cmp
lods
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
add
add
add
dec
push
xchg
cli
and
nop
adc
(bad)
jp
mov
sub
scas
jmp
cmp
retf
pop
vcvtsd2ss
dec
icebp
call
bnd
icebp
call
popa
mov
inc
push
ret
push
iret
call
dec
retf
call
inc
pushf
(bad)
out
stc
inc
add
add
xor
icebp
sti
adc
add
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
aaa
add
dec
or
in
sub
sub
call
push
jl
dec
jmp
jmp
repz
icebp
dec
mov
jmp
(bad)
call
pusha
(bad)
inc
pop
ret
inc
push
sar
push
into
call
push
int3
jmp
dec
enter
test
(bad)
mul
outs
jmp
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
aaa
add
dec
or
add
push
enter
mov
push
add
sbb
push
lock
repz
lock
mov
jmp
mov
dec
pop
(bad)
dec
sar
dec
retf
(bad)
call
inc
sar
rol
push
sbb
lock
add
(bad)
pop
rol
sbb
push
sbb
add
sbb
push
sbb
add
aam
and
add
xor
mov
xchg
and
and
sbb
mov
(bad)
ds
clc
(bad)
cmp
push
(bad)
inc
sar
jge
fdivr
nop
xor
inc
add
add
and
jnp
ds
sti
push
sbb
xchg
and
repz
or
jl
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sub
aaa
sti
pop
stc
dec
inc
dec
rol
inc
xor
add
add
call
sub
jg
mov
sbb
out
mov
mov
es
out
pop
adc
fsub
jge
icebp
sub
mov
stos
push
mov
stos
dec
aam
jnp
add
pop
or
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
mov
mov
mov
nop
in
sbb
shr
shl
adc
retf
lods
and
aam
sbb
and
lea
cmp
add
or
xchg
add
loope
add
jle
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
mov
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
mov
add
jge
add
jge
add
test
add
test
add
test
add
push
(bad)
add
test
add
sbb
push
test
add
sbb
test
add
and
call
xchg
jg
xchg
add
add
aas
push
xchg
aas
push
xchg
aas
xchg
aas
xchg
aas
push
xchg
aas
push
xchg
aas
and
xchg
aas
adc
xchg
aas
and
xchg
aas
xchg
test
aas
xchg
test
aas
in
sbb
in
sbb
aad
sbb
std
test
aas
int
sbb
int
sbb
fld
sbb
int
sbb
int
sbb
mov
inc
(bad)
push
inc
out
bound
sbb
inc
test
add
test
add
cmp
adc
test
add
test
add
test
add
sbb
ret
add
ret
add
jecxz
addr16
add
jecxz
addr16
add
add
add
jecxz
call
inc
add
arpl
jmp
jmp
fiadd
jmp
mov
xchg
sbb
sbb
ret
jmp
jmp
add
mov
mov
inc
mov
jmp
sub
test
pop
jmp
jmp
mov
dec
inc
add
add
dec
jmp
mov
adc
sbb
dec
jl
push
xchg
ja
jle
mov
movs
push
jmp
pop
jbe
(bad)
aas
and
call
sub
add
cld
dec
or
jmp
mov
xchg
sbb
sbb
pop
pop
xchg
adc
stos
(bad)
fst
(bad)
(bad)
std
daa
jg
sahf
dec
sar
ins
push
jmp
mov
inc
xchg
test
pop
jmp
jmp
mov
dec
(bad)
jns
dec
jmp
mov
adc
sbb
dec
and
mov
xchg
sub
xchg
aaa
sar
inc
cmp
jmp
test
add
jmp
mov
dec
(bad)
dec
(bad)
jmp
mov
xchg
sbb
(bad)
(bad)
sub
clc
sub
call
push
jmp
sub
jmp
or
jmp
sti
dec
pop
ret
sbb
add
add
add
sbb
nop
cmp
call
and
mov
dec
inc
call
sbb
call
pop
enter
call
bound
(bad)
jmp
mov
xchg
sbb
sbb
mov
movs
push
sub
mov
xchg
ds
push
add
and
inc
mov
call
pop
enter
inc
pop
enter
mov
call
jg
inc
out
xchg
xor
(bad)
cmp
dec
jmp
bound
(bad)
jge
ret
sub
inc
std
jmp
outs
jmp
call
jg
inc
jge
push
neg
or
mov
xchg
cmp
call
scas
call
dec
idiv
or
jmp
cmp
jmp
dec
idiv
imul
call
jle
inc
mul
ret
mul
jecxz
inc
add
add
clc
jmp
clc
jmp
clc
jmp
clc
call
clc
inc
clc
jmp
push
idiv
jmp
mov
xchg
jle
add
sbb
gs
add
cld
pop
(bad)
cmp
dec
dec
dec
(bad)
cmp
dec
(bad)
clc
or
dec
dec
cmp
call
cmp
add
add
call
cmp
jmp
cmp
jmp
dec
idiv
imul
call
jge
add
jge
add
pop
jmp
jmp
push
daa
mov
xchg
daa
mov
xchg
daa
mov
loope
mov
shr
mov
icebp
sub
jmp
sub
(bad)
jmp
mov
xchg
test
add
sbb
jmp
or
call
or
jmp
adc
dec
mov
stos
adc
call
adc
dec
test
add
jecxz
inc
jo
mov
or
push
push
mov
xor
mov
inc
or
mov
push
or
mov
inc
or
mov
idiv
pop
jmp
sbb
test
add
sbb
mov
sahf
inc
inc
sahf
inc
inc
sahf
push
push
inc
sahf
inc
sahf
push
aaa
sahf
push
aaa
sahf
inc
sahf
inc
sahf
inc
add
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
test
add
test
add
sbb
in
sbb
in
sbb
cmc
jl
add
adc
sub
push
adc
jne
mov
add
add
pop
add
cmp
sub
or
and
jge
add
sbb
adc
imul
popf
pusha
ins
mov
imul
mov
jmp
imul
jmp
ss
mov
outs
data16
ins
push
js
imul
pushf
sub
mov
loope
fs
fdivr
jns
scas
cmp
in
jbe
cmp
ins
inc
(bad)
repz
ficomp
mov
call
cmp
repz
outs
je
popf
ins
jns
loopne
and
in
xor
mov
cmp
xlat
fisubr
mov
add
push
int3
fistp
jmp
outs
shr
push
icebp
repnz
pop
fwait
loop
jae
fdiv
mov
xor
popf
je
push
aam
popa
cmp
and
outs
mov
cmp
lock
adc
cmp
in
arpl
icebp
push
and
imul
cmp
add
add
aam
cmp
sub
cs
movs
sub
xchg
daa
fs
fild
enter
int3
enter
icebp
outs
je
stos
and
leave
aam
gs
cmp
mov
cmp
and
jns
push
outs
jbe
es
repnz
jbe
xor
pusha
ins
xor
imul
cmp
ja
jo
outs
arpl
(bad)
cmp
xor
fsub
popa
out
ss
lahf
es
aam
jne
call
push
aam
cmp
aam
push
cmps
call
cmp
jb
lock
cmp
cmp
jecxz
outs
sar
cmp
cmp
jo
jp
cmp
shr
(bad)
adc
push
arpl
aam
jae
mov
cmp
sub
gs
cmp
cmp
loop
outs
repz
clc
loope
cmp
jmp
jno
call
dec
jb
test
add
add
mov
cmp
mov
imul
pop
adc
ins
dec
shl
jne
and
jne
aad
ins
imul
in
js
shl
rcr
imul
mov
jne
push
call
jae
fbstp
inc
jmp
cmp
outs
xor
and
aad
je
inc
(bad)
fbld
cmp
clc
push
gs
dec
and
jmp
sub
adc
sub
or
xor
fisubr
sub
xor
cmp
fisubr
adc
cmp
in
jne
jmp
mov
add
add
mov
push
fs
fdivr
dec
mov
daa
xor
stos
cmp
fwait
mov
xor
cmp
sub
adc
sahf
sub
cmps
es
imul
xchg
loop
je
fst
ret
mov
jne
cmc
jne
fld1
cmp
mov
dec
and
add
mov
xor
mov
cmp
mov
cmp
out
or
ss
mov
jge
mov
das
xchg
imul
xchg
imul
ror
cmc
imul
push
cmp
push
push
jne
cmp
xchg
daa
mov
xor
and
mov
cmp
fwait
sub
nop
and
stc
mov
mov
arpl
ret
mov
jae
cmc
push
fs
es
clc
push
gs
ret
pushf
fldenv
and
stos
ja
pop
(bad)
cmp
mov
xor
out
sub
shr
popa
movs
mov
cli
cmp
xchg
mov
jne
sub
cmp
inc
mov
das
inc
repz
je
loop
and
ja
cmp
outs
ins
in
jmp
ja
xchg
fdiv
icebp
fsub
push
(bad)
inc
in
scas
sbb
inc
fldcw
inc
int3
scas
sbb
inc
cdq
lods
push
inc
(bad)
add
add
lods
scas
sbb
inc
cdq
lods
push
inc
add
lods
sbb
inc
pop
lods
push
inc
inc
lds
ins
lods
sbb
inc
pop
lods
push
inc
inc
lds
dec
lods
sbb
inc
sbb
sbb
sub
sbb
inc
sbb
sbb
mov
push
inc
fldcw
inc
in
scas
sbb
inc
fldcw
inc
int3
scas
sbb
inc
cdq
lods
push
inc
(bad)
inc
lods
scas
sbb
inc
cdq
lods
push
inc
add
lods
sbb
inc
pop
scas
push
inc
inc
(bad)
sbb
ins
scas
sbb
inc
pop
scas
push
inc
inc
(bad)
sbb
dec
scas
sbb
inc
sbb
sbb
sub
sbb
inc
sbb
sbb
mov
push
inc
fldcw
sbb
in
stos
sbb
inc
fldcw
sbb
int3
stos
sbb
inc
cdq
test
inc
(bad)
inc
lods
stos
sbb
inc
cdq
test
inc
add
scas
sbb
inc
pop
cmps
push
inc
inc
mov
sbb
inc
pop
cmps
push
inc
inc
mov
sbb
inc
sbb
sbb
sub
sbb
inc
sbb
sbb
mov
push
inc
fldcw
sbb
in
stos
sbb
add
add
fldcw
sbb
int3
stos
sbb
inc
cdq
test
inc
(bad)
inc
lods
stos
sbb
inc
cdq
test
inc
add
scas
sbb
inc
pop
test
inc
inc
rcr
lods
sbb
inc
pop
test
inc
inc
rcr
lods
sbb
add
sbb
push
scas
daa
xor
add
add
scas
pop
xor
scas
mov
bound
(bad)
xor
jmp
dec
ss
mov
cmp
cdq
ins
cmp
cdq
jge
xchg
cdq
sahf
cmp
call
call
jle
jp
and
aad
sbb
or
mov
xor
jmp
ss
inc
ds
sbb
mov
sbb
sar
retf
aas
ja
mov
aas
gs
sbb
adc
mov
xor
mov
xor
mov
ss
xchg
inc
cmp
popf
fidivr
(bad)
fwait
jbe
lods
pushf
mov
sub
call
cwde
mov
add
setns
add
mov
sbb
retf
xor
mov
xor
mov
xor
cdq
mov
xor
xchg
test
and
or
ss
aaa
cli
mov
cmp
xchg
mov
gs
add
sbb
jo
div
cdq
scas
jle
(bad)
mov
ss
xchg
idiv
pop
popf
fstp
push
xchg
jb
hlt
mov
sbb
leave
jge
add
scas
cmp
shr
jl
jno
scas
xor
scas
int3
xor
scas
or
cdq
je
rcr
in
mov
mov
ss
mov
ss
(bad)
aaa
gs
xlat
cmp
mov
add
ficomp
sbb
sbb
add
popa
xor
mov
xor
mov
xor
mov
xor
scas
repz
lods
aam
inc
cwde
mov
ss
pushf
movbe
xchg
cmp
pushf
mov
cmp
out
cmp
fstp
and
push
cmp
cdq
jo
outs
mov
leave
cmp
lahf
dec
cmp
repnz
fdivr
js
imul
cdq
retf
cwde
adc
ret
cwde
stc
ds
add
jmp
mov
xor
mov
xor
cwde
test
xor
mov
aaa
lds
add
sub
inc
aaa
push
xchg
adc
cmps
xchg
mov
addr16
leave
cmp
cdq
les
lahf
ins
ds
sub
iret
sahf
lds
push
sahf
sbb
in
(bad)
push
jge
add
lods
cwde
xor
stos
xor
lods
leave
xor
lods
fnsave
xor
xor
mov
xor
loopne
dec
mov
add
add
out
mov
xor
xchg
mov
xor
mov
xchg
sbb
xor
ss
fnsave
sbb
xchg
sub
in
inc
aaa
dec
xchg
adc
ret
fwait
daa
cmp
fwait
add
popf
push
cmp
sahf
mov
inc
sahf
xor
int
pop
ds
pushf
repz
add
add
lahf
sbb
movs
and
call
mov
xor
mov
xor
mov
xor
pop
xor
movs
xchg
sahf
ss
xchg
mov
sbb
nop
cmp
cdq
lods
cmp
xchg
push
cmp
cwde
mov
mov
leave
cmp
cdq
adc
cmp
xchg
mov
cmp
cdq
ja
rcr
repnz
pushf
cmp
cmp
call
xor
mov
aas
ret
add
sbb
ret
lods
sbb
xchg
das
xor
scas
xchg
add
scas
or
pop
mov
xor
push
sbb
sbb
cdq
ins
cmp
fwait
in
ds
sahf
jmp
(bad)
fnstsw
add
mov
xor
mov
xor
adc
xor
xchg
scas
xor
mov
xlat
xor
and
inc
aaa
push
cwde
sar
lds
jbe
sub
in
cmp
pushf
pop
cmp
jae
sar
cmps
popf
sbb
xchg
dec
(bad)
xchg
jg
add
mov
xor
inc
xor
mov
xor
xchg
mov
mov
ss
xchg
sub
in
cmp
sbb
mov
(bad)
add
add
jmp
add
mov
add
cmp
lahf
pop
aas
in
(bad)
mov
sbb
repz
sbb
mov
cmp
mov
pop
add
mov
mov
mov
(bad)
mov
xor
xchg
dec
xchg
lds
(bad)
cmp
add
add
ss
mov
lock
mov
sbb
lods
jge
add
(bad)
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
js
xor
js
xor
js
xor
jns
xor
jns
xor
add
add
jns
xor
jns
xor
jl
aas
movs
pop
add
sbb
xor
aam
push
xor
jmp
pop
ss
jg
cmp
jle
cmp
jg
cmp
xor
cmp
mov
cwde
cmp
mov
stos
cmp
mov
mov
cmp
jg
add
add
cmp
and
adc
dec
cmp
fwait
jg
cmp
(bad)
cmp
mov
sbb
and
je
xor
dec
xor
js
xor
popf
js
xor
push
ja
xor
dec
jp
cmp
lds
xor
mov
jnp
sar
ss
ss
ss
jmp
inc
jp
aaa
lock
aaa
scas
jp
aaa
sar
aaa
pop
jns
aaa
cmp
aaa
in
shl
adc
in
mov
jnp
cmp
mov
sar
cmp
cmps
cmp
jnp
cmp
cmp
xor
xor
cmp
jle
cmp
jle
cmp
mov
mov
cmp
ret
jg
ds
fidivr
ds
idiv
aas
sbb
push
aas
les
aas
mov
aas
aad
pop
add
jb
xor
jbe
xor
jecxz
test
jb
xor
jb
xor
jo
add
jns
xor
fnstenv
shl
aaa
imul
xchg
ja
aaa
adc
mov
add
jp
cmp
cmp
jl
cmp
js
cmp
mov
gs
jle
cmp
jle
cmp
jle
cmp
jge
add
add
cmp
pushf
mov
cmps
cmp
loopne
push
aas
loop
int
aad
pop
add
jno
xor
jno
xor
jo
xor
jns
xor
je
xor
jp
xor
clc
jbe
xor
xchg
jae
cmp
js
cmp
add
add
js
cmp
jns
cmp
cmp
mov
cmp
xchg
cmp
mov
loopne
and
cmp
jmp
jnp
ds
jnp
ds
mov
ins
jnp
ds
jnp
ds
jge
aas
fs
aas
push
jg
add
add
aas
in
icebp
aas
xchg
loopne
add
jo
das
jge
xor
and
jo
xor
jne
xor
jo
xor
outs
push
xor
jo
xor
icebp
xor
sbb
(bad)
outs
and
xor
xlat
xor
jb
xor
je
xor
fnstenv
aaa
add
cmp
mov
inc
aas
cmc
jl
aas
out
jl
aas
cdq
jle
aas
cmp
sub
jle
aas
lock
aas
cmp
aas
in
stos
aas
sar
aas
gs
pop
add
jg
add
outs
fdiv
cs
xor
xor
jae
xor
jae
add
add
jae
xor
xor
jae
xor
xor
mov
xor
fbstp
bound
xor
jae
xor
jb
xor
xor
xor
jne
cmp
adc
xor
shl
mov
add
add
jo
sbb
xor
ss
outs
xlat
ss
mov
ss
aaa
sahf
outs
jae
cdq
outs
pusha
aaa
sub
aaa
xchg
outs
mov
das
outs
clc
aaa
stc
outs
lock
xor
cmp
jge
cmp
jge
cmp
iret
cmp
jbe
cmp
add
add
cmp
jl
cmp
jbe
cmp
js
xchg
jbe
cmp
jne
cmp
test
int
int
ret
jne
cmp
stc
cmp
(bad)
cmp
jbe
cmp
jbe
cmp
ja
cmp
jno
cmp
jns
cmp
jns
cmp
jns
cmp
jns
cmp
add
add
cmp
jp
cmp
jns
cmp
jp
cmp
jp
cmp
jp
cmp
jp
cmp
jns
cmp
outs
cld
cmp
outs
sub
pushf
jo
cmp
mov
cmp
and
cmp
xor
jl
ds
int3
ds
jnp
ds
jns
aas
fstp
add
add
aas
xchg
jp
aas
cmps
jp
aas
je
hlt
aas
push
add
add
sbb
sbb
pop
je
xor
je
xor
je
xor
out
xor
jae
xor
xor
adc
xor
outs
pop
xor
xor
outs
xlat
xor
div
sbb
xor
add
add
ins
out
xor
ins
in
xchg
jno
ss
ss
jno
ss
lea
pop
jno
ss
ss
hlt
ss
jb
aaa
outs
jb
aaa
mov
xchg
aaa
test
pop
aaa
xchg
xchg
aaa
xchg
cmp
jp
add
add
retf
cmp
outs
cmp
outs
sar
out
add
clc
outs
dec
aas
pop
jo
aas
imul
aas
dec
outs
aad
or
add
jle
add
xor
dec
xor
mov
xor
xor
je
xor
jae
xor
jae
xor
jb
xor
(bad)
xor
add
add
xchg
push
jno
ss
(bad)
sbb
and
aad
push
pop
xchg
aaa
hlt
jns
cmp
jne
cmp
jp
cmp
jne
cmp
jne
cmp
std
cmp
jnp
cmp
ins
(bad)
cmp
ins
or
cmp
int3
ins
cs
push
ins
push
aas
cmp
add
ja
call
imul
and
add
sbb
pop
jno
xor
jo
xor
or
sub
jno
xor
outs
ins
xor
lods
xor
mov
xor
jb
xor
jb
xor
jb
xor
jno
xor
test
xor
xlat
xchg
mov
xor
push
test
aaa
sub
cmp
jne
cmp
ja
cmp
jns
cmp
js
cmp
js
cmp
or
outs
jp
cmp
jp
cmp
jp
cmp
jns
cmp
jns
cmp
jns
cmp
ins
movs
cmp
ins
int3
cmp
imul
and
cmp
mov
ins
cmp
mov
movs
imul
jmp
adc
rep
or
retf
ins
add
ret
ins
cli
cmp
mov
sub
mov
ins
mov
aas
stos
ins
sbb
xchg
out
sbb
mov
add
jo
xor
jb
cmp
sbb
fnstsw
add
xor
imul
imul
and
sub
aam
mov
xor
imul
push
imul
repnz
xor
jns
xor
js
ss
js
aaa
icebp
ja
aaa
movs
jbe
aaa
stc
ja
add
add
sub
clc
cmp
test
cmp
xchg
cmp
test
imul
cmp
jo
fld
ds
outs
(bad)
ds
ds
rep
sbb
gs
sbb
xchg
jge
add
xor
outs
mov
hlt
ins
mov
xor
jns
xor
cmp
imul
idiv
lea
mov
jo
ds
sbb
loope
sbb
pop
outs
mov
xor
xor
stc
xor
jbe
xor
jno
pop
jbe
xor
jbe
xor
jbe
xor
jbe
xor
cmp
and
add
add
jbe
xor
jns
xor
js
xor
nop
js
xor
inc
jle
cmp
jl
cmp
lahf
cmp
pop
cmp
xchg
cmp
jb
cmp
adc
lock
aas
in
sbb
leave
test
add
je
xor
je
xor
js
xor
add
add
jbe
xor
js
xor
push
xor
js
xor
repz
xor
and
ss
imul
push
push
sbb
aaa
push
imul
aaa
mov
jl
cmp
mov
cmp
mov
push
jb
ds
jno
add
add
add
sbb
popf
test
add
jae
xor
jb
xor
jae
xor
push
adc
test
aaa
sbb
cmp
xchg
cmp
jg
cmp
jg
cmp
jg
cmp
jle
cmp
loop
mov
shl
mov
jg
add
fdivr
in
sbb
xor
jne
xor
inc
xor
push
xchg
cmp
cmp
jno
cmp
jb
cmp
jb
cmp
jb
cmp
jb
ds
jg
add
mov
sbb
sub
popf
xor
push
(bad)
ss
ja
add
add
aaa
pop
ja
aaa
in
jbe
aaa
cld
jge
cmp
jl
cmp
jge
cmp
jl
cmp
jmp
cmp
jnp
cmp
jno
cmp
push
jg
add
test
add
das
xor
je
xor
mov
xor
jmp
add
add
jae
aaa
out
jbe
aaa
mov
aaa
(bad)
jns
cmp
jle
fdivr
ds
jle
ds
jle
ds
jmp
fdivr
ds
jl
aas
gs
sbb
jno
xor
xor
cld
jl
cmp
jb
cmp
jb
cmp
jb
cmp
and
add
add
ds
ss
sbb
aas
mov
inc
aas
scas
jle
aas
mov
aas
jle
mov
add
nop
(bad)
add
push
xor
jno
xor
jo
xor
jne
xor
jne
xor
jne
xor
outs
sti
xor
and
xor
jo
xor
add
add
jo
xor
jo
xor
sub
enter
xor
shl
jb
xor
jno
xor
jb
xor
and
imul
adc
xor
push
jae
ss
sti
xor
loope
mov
jno
scas
mov
ss
jbe
ss
jbe
add
add
jbe
aaa
cs
aaa
fdiv
aaa
enter
mov
in
aaa
loopne
fidiv
test
cmp
cmp
ja
cmp
inc
cmp
ja
cmp
jbe
cmp
jbe
cmp
jge
cmp
mov
cmp
movs
cmp
aad
pop
jle
cmp
jge
cmp
cmp
add
add
jge
cmp
jle
cmp
outs
cmp
jl
cmp
jg
jle
mov
cmp
jnp
cmp
jl
cmp
jl
cmp
jnp
cmp
jl
cmp
jnp
cmp
imul
jp
cmp
jp
cmp
jns
cmp
add
inc
cmp
int3
jns
cmp
inc
jns
cmp
ins
jns
cmp
and
ja
div
ds
js
ds
inc
ds
mov
ds
js
ds
jbe
aas
cdq
jbe
aas
div
aas
pop
ja
aas
cli
jnp
add
jle
add
jne
xor
je
xor
je
call
outs
sti
xor
jo
xor
jo
xor
xor
cli
xor
pop
xor
jb
xor
jb
xor
loopne
xchg
pop
jns
xor
sbb
add
ss
add
shl
jns
mov
ss
jae
fnstenv
aaa
shl
aaa
mov
cld
ss
jno
aaa
push
lea
adc
aaa
lds
cmp
fs
jl
cmp
jbe
cmp
jbe
cmp
js
cmp
ja
cmp
jbe
cmp
jne
cmp
add
add
adc
mov
mov
mov
jg
cmp
jge
mov
ds
jp
cmp
ds
jp
aas
fwait
jp
aas
cli
js
aas
call
jp
aas
sub
aas
stc
jns
aas
xchg
mov
call
sbb
cwde
jae
xor
add
xor
xor
jb
xor
jb
xor
aam
mov
jmp
xor
ins
ds
ins
ins
xor
ins
shl
ins
in
xor
fdiv
(bad)
or
mov
jae
xor
mov
pop
jae
xor
jae
xor
add
add
jae
xor
jb
xor
inc
xor
jno
cmp
xor
jb
xor
jb
xor
jbe
xor
jbe
xor
jbe
xor
jb
xor
jno
xor
xor
call
je
ss
or
sbb
aaa
add
add
shl
ss
aaa
es
cmp
jp
cmp
cmps
cmp
js
cmp
jp
cmp
jnp
cmp
loope
aad
fstp
(bad)
jge
cmp
jge
cmp
jge
cmp
jge
cmp
jge
cmp
jge
cmp
jge
cmp
jl
cmp
aas
jp
cmp
fdivr
cmp
(bad)
jns
cmp
dec
jg
ds
jnp
ds
jl
ds
retf
xor
aas
jb
fs
cmp
aas
and
jle
add
in
call
jb
xor
jb
xor
jb
xor
jae
xor
jae
xor
jb
xor
xchg
inc
outs
cdq
xor
outs
aad
shr
cld
outs
out
xor
or
jnp
xor
push
and
push
jno
xor
jno
xor
jae
lods
jae
cmp
aaa
stc
jbe
aaa
ja
repnz
test
jne
cmp
ja
cmp
ja
cmp
ja
cmp
jp
cmp
jp
cmp
add
add
jns
cmp
jns
cmp
jnp
cmp
jl
cmp
jl
cmp
jp
cmp
push
jnp
cmp
popf
jge
movs
jge
ds
jge
sub
add
movs
jl
mov
jle
aas
cmp
aas
add
jle
aas
xchg
jge
add
add
aas
push
out
(bad)
mov
sbb
sbb
xor
js
xchg
dec
xchg
xor
nop
xor
xor
dec
scas
xor
dec
jne
inc
dec
and
scas
dec
inc
xor
jo
loopne
leave
xor
dec
stc
xor
dec
out
xor
dec
pop
xor
dec
dec
cmp
cmovns
xor
nop
dec
shl
movs
inc
fnsave
cmp
cmp
inc
enter
cld
cmp
inc
enter
daa
cmp
cmp
inc
inc
mov
and
inc
jb
inc
inc
mov
cmp
adc
ds
sbb
adc
jle
add
dec
ret
dec
div
addr16
out
xlat
dec
sbb
in
dec
add
ret
dec
mov
daa
dec
call
aaa
pop
xor
aaa
ss
aaa
adc
aaa
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
fistp
pop
aas
std
cmp
aas
sbb
xchg
jns
fnstsw
adc
cmp
dec
cmp
add
add
sub
loope
inc
cmp
ss
icebp
cmp
(bad)
cmp
test
ds
idiv
dec
and
in
(bad)
pop
test
add
xor
xor
mov
xor
xor
fbstp
mov
push
xor
ss
xor
or
int
gs
aaa
add
jge
dec
xor
call
cmp
sub
adc
call
cmp
dec
cmp
aas
int3
cmp
ds
cmp
cmp
sub
inc
or
xor
lea
fld
sti
ds
sbb
add
inc
fdivr
dec
test
add
xor
xor
cmp
xor
xor
sub
jb
mov
push
xor
aaa
jp
xchg
ss
xor
cmp
xor
test
cmp
ss
ja
fdiv
retf
cmp
pop
cmp
cmp
mov
xchg
cmp
cmp
mov
cmp
cmp
inc
cmp
cmp
aas
mov
aas
mov
ds
aas
xchg
ds
aas
movs
push
fdivr
jge
sbb
xchg
xor
das
mov
xor
cmc
xor
out
xor
xor
sbb
and
jb
in
popa
xor
add
add
xor
xor
xor
xor
xor
jecxz
pop
xor
xor
xor
xor
les
or
adc
scas
xor
inc
xor
xor
xor
ss
xor
cmp
xor
or
xor
xor
imul
ss
inc
ss
outs
ss
aaa
cwde
ss
aaa
adc
ss
aaa
arpl
cmp
cmp
dec
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
iret
cmp
cmp
hlt
cmp
cmp
fstp
sbb
or
in
cmp
cmp
aaa
push
cmp
aaa
cmp
add
add
aaa
push
cmp
cmp
cmp
add
jns
repnz
or
inc
cmp
inc
cmp
inc
cmp
cmp
sar
cmp
int3
cmp
sub
push
adc
dec
ds
xchg
ds
cmp
add
add
ds
mov
add
or
or
das
aas
and
ds
nop
cmp
mov
cmp
(bad)
lods
sbb
loopne
or
or
xor
pop
xor
xor
cs
xor
fbstp
les
aaa
xor
add
add
xor
inc
xor
xor
xor
das
jp
sti
das
mov
stos
das
cmps
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
jo
mov
xor
xor
xor
push
xor
add
add
xor
xor
(bad)
mov
das
and
adc
iret
ss
adc
aaa
jmp
cmp
in
cmp
cmp
cmp
cmp
sub
jmp
cmp
add
add
cmp
sar
cmp
cmp
cwde
cmp
cmp
mov
dec
cmp
cmp
adc
pushf
cmp
cmp
cmp
cmp
xor
jne
jge
jae
out
cmp
cmp
cmp
jl
ja
sbb
xchg
cmp
adc
pushf
cmp
jge
xchg
ds
xchg
scas
cmp
add
add
aas
xlat
cmp
jmp
(bad)
std
test
add
push
xor
sub
test
xor
xor
xor
xor
xor
das
pusha
xor
lds
xor
xor
sub
(bad)
xor
out
mov
adc
sbb
ss
xor
aaa
adc
and
or
dec
aaa
hlt
xor
cwde
xor
xor
xor
aaa
fbstp
repz
leave
xor
pop
cmp
xchg
clc
xor
mov
cmp
ss
cmp
aaa
mov
cmp
cmp
cmp
cmp
xor
cmps
ds
cmp
sar
add
add
dec
sbb
mov
xor
xor
xor
xor
adc
div
xor
xor
xor
or
xor
cs
cwde
daa
ss
daa
push
xor
daa
call
fnstenv
xor
imul
mov
repz
add
std
aaa
push
cmp
in
mov
xor
dec
cmp
xor
fstp
fdivr
js
pushf
cmp
cmp
cmp
cmp
cmp
cmp
and
cmp
cmp
cld
sub
ds
das
pop
ds
mov
push
das
add
les
es
data16
push
aas
pop
das
outs
aas
jg
lea
repz
or
fnstcw
shr
ret
cs
push
xor
xor
xor
sub
jno
repnz
pop
xor
xor
xor
sub
push
xor
sub
xor
mov
push
sub
mov
add
in
xor
(bad)
in
das
adc
push
xor
xor
das
cmp
fbstp
pop
xor
and
add
pop
xor
les
sub
pop
daa
repz
aaa
mov
aaa
leave
and
aaa
xchg
cmp
inc
cmp
out
(bad)
cmp
xor
pop
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sub
std
cmp
or
das
(bad)
in
(bad)
jno
sbb
shl
(bad)
das
push
xor
xor
xor
retf
xor
xor
das
scas
xor
add
add
das
adc
jne
add
jnp
sub
pop
xor
adc
dec
xor
xor
xor
xor
xor
xor
xor
stos
and
xor
ds
pop
and
out
aaa
pop
and
pushf
cmp
aaa
push
cmp
aaa
dec
cmp
cmp
inc
cmp
add
add
and
(bad)
adc
das
adc
popa
das
sub
ins
xor
xor
xor
shl
xor
test
sub
sbb
and
stos
ss
and
ss
int3
ss
cmp
ss
cmp
aaa
les
cs
iret
ss
aaa
lock
aaa
jo
imul
ss
aaa
jno
mov
js
fnstenv
pop
aaa
(bad)
aaa
inc
aaa
repnz
jo
jmp
xlat
or
mul
xor
push
daa
sbb
fwait
and
jne
fisub
pop
cmp
mov
cmp
leave
cmp
and
out
cmp
and
cmp
cmp
cmp
dec
and
cmp
and
cmp
and
fistp
xor
cmp
and
cmp
and
xor
cmp
and
cmp
retf
cmp
data16
(bad)
aad
fcos
test
sub
xor
sub
lods
aaa
mov
add
stos
aaa
loop
add
push
sbb
xchg
pop
push
hlt
cmp
push
mov
cmp
xor
retf
ds
aas
gs
dec
test
add
cmp
out
aaa
ja
movs
sub
xor
mov
sub
fs
cmp
add
push
sbb
jae
xchg
ret
cmp
push
pop
cmp
cmp
mov
xor
cmp
xor
cmp
pop
push
cmp
in
add
cmps
xor
fnstenv
into
imul
aas
and
xchg
aas
sbb
cmc
aas
gs
mov
xor
xor
xor
xor
add
add
xor
xor
xor
scas
xor
hlt
xor
xor
xor
iret
xor
or
mov
pop
xor
ss
int3
ss
xor
xor
xor
ret
xor
xchg
cmp
xor
sub
xchg
mov
add
pop
sub
les
(bad)
ss
sub
aaa
aad
xchg
aaa
stc
sub
cmp
sbb
cmp
inc
cmp
sbb
test
mov
sbb
cmp
cmp
xor
cmp
push
das
cmp
pop
push
cmp
xor
mov
push
adc
pop
xor
stos
xor
fstp
adc
ficomp
fwait
aas
call
jb
inc
xchg
add
xor
pop
ss
xor
xor
xor
jge
outs
xor
add
ss
xor
sub
sub
pop
sub
add
add
ss
icebp
ss
ss
jb
scas
aaa
push
aaa
shl
dec
aaa
shl
aaa
hlt
aaa
dec
aaa
call
cmp
sbb
cmp
cld
cmp
sbb
cmp
pop
in
sbb
cmp
add
cmp
mov
push
sbb
add
sub
jmp
(bad)
adc
cmps
xor
xor
inc
ss
xor
xor
xor
xor
xor
sub
hlt
sub
xor
xor
xor
sti
xor
ss
xor
aaa
dec
aaa
cmp
push
mov
cmp
sbb
cmp
sbb
add
add
cmp
cmp
sbb
cmp
scas
cmp
sbb
cmp
sbb
cmp
xor
cmp
sbb
cmp
xor
cmp
xor
cmp
sbb
cmp
cli
sbb
cmp
leave
sbb
cmp
push
push
push
ds
sub
mov
jg
dec
push
cmc
ds
push
(bad)
and
sbb
or
xor
xor
das
dec
xor
cs
xor
xor
xor
xor
fnsave
push
xor
xor
xor
xor
das
xor
and
xor
xor
xor
xor
scas
xor
push
cmp
sbb
aas
sbb
sbb
cmp
sbb
cmp
sbb
and
cmp
sbb
cmp
sbb
cmp
adc
push
mov
sbb
xchg
pop
loope
bound
or
or
xor
adc
sub
aad
(bad)
cmp
adc
imul
xor
xor
xor
inc
xor
loope
xor
xor
sbb
xor
sbb
mov
repz
xor
cmc
xor
xor
cdq
das
dec
ss
das
dec
xchg
jnp
dec
xor
bound
les
add
div
sbb
xor
add
add
aaa
add
pop
cmp
sub
mov
sbb
cmp
das
cmp
mov
cmp
and
cmp
retf
sbb
aas
add
mov
call
test
add
cs
cs
xor
sub
outs
xor
cs
xor
xor
add
add
xor
xor
sbb
jb
jmp
xor
aaa
xor
aaa
and
repz
jbe
dec
sbb
fnstsw
mov
pop
(bad)
cmp
and
cmp
sbb
dec
sbb
cmp
and
retf
sbb
sbb
ds
sbb
ds
sbb
aas
push
sbb
add
add
inc
sbb
mov
xor
xchg
xor
xor
cli
xor
xor
push
xor
cs
xor
cs
xor
sub
imul
sbb
xor
sbb
ss
xor
ss
aaa
adc
cmp
sbb
cmp
add
add
(bad)
cmp
push
push
cmp
push
popf
cmp
clc
cmp
es
pop
mov
pop
aad
(bad)
push
mov
cmp
enter
add
sbb
mov
sbb
sbb
inc
aas
aaa
sbb
jmp
(bad)
mov
xor
xor
sub
stos
xor
cs
cs
xor
adc
add
sbb
stos
xor
xor
xor
jmp
xor
sahf
pop
pop
ss
in
ss
push
add
into
adc
sbb
cmp
xchg
not
cmp
adc
cmp
add
add
sbb
inc
sbb
cmp
dec
cmp
sbb
or
mov
cmp
sbb
push
jmp
sbb
cmp
fcomp
dec
cmp
bound
popf
cmp
pop
sbb
ds
sbb
ds
sbb
aas
cmc
push
adc
add
sti
movs
push
sub
aas
xchg
sbb
aas
sub
aas
dec
sbb
aas
sub
aas
aam
out
aas
movs
loope
jmp
sbb
das
xor
xor
xor
xor
popa
xor
pop
xor
sub
retf
xor
xor
adc
xor
(bad)
adc
rcl
dec
ss
adc
add
add
rcl
popa
ss
adc
ss
fnsave
mov
push
jl
xor
jbe
jne
int3
cmp
sbb
das
sbb
cmp
sbb
cmp
pop
sub
pop
sbb
sbb
scas
pop
adc
dec
sbb
cmp
sbb
cmp
sbb
cmp
sbb
add
add
cmp
sbb
cmp
sbb
cmp
icebp
cmp
push
sbb
(bad)
jmp
xor
jecxz
stos
xor
push
call
das
mov
xor
adc
xchg
jp
xchg
push
cld
adc
mov
mov
pop
lea
out
aad
loop
sti
cmp
sbb
cmp
sbb
push
sbb
sbb
cmp
sbb
jmp
sbb
out
sbb
aas
(bad)
sbb
fdivr
sbb
dec
inc
xor
dec
xor
dec
xor
dec
mov
xor
dec
shl
dec
test
cmps
dec
call
xor
dec
jp
cs
mov
jl
jmp
pusha
inc
dec
aaa
mov
inc
inc
cmp
inc
cmps
cmp
inc
fidivr
mov
inc
xor
imul
inc
mov
in
inc
cmps
cmp
inc
hlt
cmp
inc
sbb
js
sub
push
inc
push
cmp
inc
cmp
call
inc
mov
inc
inc
iret
cmp
mov
cmp
inc
pop
cmp
and
cmp
inc
in
cmp
and
cmp
and
mov
and
aas
push
pop
mov
in
fdivrp
leave
jge
add
dec
dec
xor
dec
jmp
cmp
scas
xor
cmp
xor
xor
jne
adc
cmp
add
add
xor
cmp
sbb
mov
cmp
xor
cmp
aaa
cmp
aaa
sbb
(bad)
aaa
mov
push
cmp
cmp
cmp
cmp
cmp
in
scas
and
cmp
inc
push
ds
jno
jae
test
inc
and
aas
in
fdivrp
jne
sbb
in
jae
into
xor
xor
cmp
xor
xor
and
cmp
xor
cmp
bound
push
ss
cmp
mov
cmp
ins
cmp
and
dec
aaa
inc
cmp
cmp
lock
xor
inc
cmp
cmp
cmp
ss
outs
cmp
cmp
pop
cmp
inc
push
cmp
jns
gs
in
and
adc
sbb
shl
dec
mov
and
ds
and
aas
add
jo
pop
and
jmp
sbb
fwait
xor
inc
xor
xor
test
ss
xor
or
push
fnsave
cmp
push
int
dec
xor
mov
aaa
push
mov
inc
aaa
mov
aam
mov
dec
cmp
lock
cmp
cmp
cmp
lahf
cmp
aas
push
cmp
and
cmp
and
cmp
sub
sub
adc
cmp
dec
aas
movs
ds
aas
xor
jmp
xor
xor
xor
xor
push
xor
xor
xor
xor
stos
xor
xor
pop
xor
xor
xor
ss
xor
mov
aaa
sub
sbb
aaa
in
ss
aaa
jnp
cmps
aaa
dec
aaa
mov
and
cmp
ins
cmp
cmp
fistp
popf
cmp
cmp
add
cmp
cmp
repz
cmp
cmp
and
cmp
sub
cmp
ds
aas
xor
cmp
stc
cmp
aas
push
push
fdivr
test
fbstp
mov
xor
xor
cmp
xor
ss
cmp
cmp
aaa
(bad)
cmp
fdivr
mov
xor
xor
xor
xor
cmp
xor
pop
xor
ss
xor
sar
add
(bad)
cmp
sub
inc
cmp
mov
inc
cmp
cmp
in
(bad)
push
jo
dec
sbb
out
xor
pop
xor
xor
lahf
xor
xor
xor
xor
xor
xchg
xor
xor
xor
add
add
xor
xor
xor
xor
xor
retf
xor
nop
xor
test
div
mov
(bad)
ss
ss
aaa
popa
ss
aaa
repnz
jmp
aaa
push
cmp
aaa
xchg
cmp
cmps
cmp
idiv
imul
dec
cmp
cmp
cmp
add
add
mov
cmp
cmp
dec
cmp
cmp
xchg
cmp
pop
cmp
cmp
cmp
jp
mov
cmp
xor
cmp
cmp
xor
das
cmp
cmp
cmp
ss
jmp
xchg
add
add
add
pop
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
dec
inc
xor
dec
(bad)
xor
xor
mov
aam
add
adc
add
das
(bad)
ss
das
out
aaa
and
je
push
cmp
jbe
retf
cmp
dec
cmp
cmp
cmp
add
xor
cmp
cmp
cmp
cmp
or
(bad)
ds
cmp
aas
cmp
mov
in
xchg
xchg
(bad)
popa
test
add
xor
call
xor
outs
xor
mov
dec
xor
aaa
mov
cmp
cmp
add
add
fdivr
test
and
jge
add
xor
je
pop
cs
xor
dec
fnstenv
inc
xor
aaa
out
lea
dec
xor
aaa
mov
ja
and
or
addr16
cmp
daa
cmp
aaa
ds
das
inc
cmp
movs
cmp
gs
inc
add
add
xor
xor
sub
and
int
shl
push
sub
xchg
cmp
iret
cmp
scas
ds
cmp
jmp
sbb
lds
jge
adc
jmp
rcr
call
ss
cmp
das
sub
cmp
aas
xor
cmp
xor
cmp
add
add
dec
cmp
inc
xor
cmp
mov
inc
ds
jle
fidivr
jecxz
mov
sub
cmp
cdq
aas
mov
(bad)
aas
push
jecxz
call
xor
retf
xor
xor
dec
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
fdiv
xchg
xor
xor
xor
xor
mov
mov
or
ss
inc
mov
test
aaa
xlat
inc
dec
aaa
pop
aaa
inc
inc
jmp
pop
cmp
cmp
and
xor
sbb
inc
cmp
cmp
adc
cmp
cmp
cmp
out
pop
cmp
inc
cmp
cmp
cmp
cmp
cmp
jbe
imul
movs
cmp
push
cmp
cmp
cmp
cmp
sub
es
cmp
sar
cmp
sub
cwde
cmp
sub
scas
cmp
sub
xlat
cmp
add
add
cmp
cmp
ins
cmp
cmp
push
cmp
pop
cmp
in
cmp
mov
pop
sub
repnz
adc
cli
cmp
(bad)
sub
(bad)
sub
push
sub
ds
sub
ds
sub
aas
add
sub
xchg
add
add
dec
aas
mov
cmp
movs
aas
mov
(bad)
aas
jo
(bad)
movs
lock
mov
xor
xor
xor
inc
xor
pop
xor
adc
xor
sub
(bad)
fnstcw
add
xor
xor
inc
loop
popa
inc
fidiv
inc
adc
sub
xor
mov
inc
sub
and
xor
mov
inc
inc
xor
mov
inc
bound
pop
inc
xchg
xor
xor
jmp
inc
mov
aaa
add
aaa
leave
inc
loop
loope
sub
imul
and
xchg
aaa
dec
cmp
paddusw
cmp
xor
sub
xor
sub
xor
pop
(bad)
mov
cs
xchg
sub
cmps
xor
sahf
xor
(bad)
xor
cs
xor
div
push
sub
out
aad
fidiv
int
push
xor
sub
(bad)
xor
sub
xor
sub
push
xor
push
xor
sub
xor
jbe
aad
outs
xor
sub
pop
xor
sub
mov
lods
sub
jle
dec
sub
scas
xor
sub
(bad)
xor
sub
mov
xor
out
xor
out
aad
fidiv
int
push
xor
aaa
push
xor
cmp
xor
cmp
xor
cmp
push
cmp
dec
cmp
xor
cmp
cmp
push
cmp
jmp
cmp
fnstcw
xchg
xor
sub
xor
sub
cmp
mov
push
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
xor
inc
test
add
xor
aas
in
xor
in
outs
aas
lea
data16
movs
je
add
add
push
sbb
and
aaa
into
xor
aaa
fidiv
test
pop
xor
aaa
xor
ss
xor
ss
xor
or
cmp
xor
sub
xor
sub
jns
push
loope
(bad)
and
sbb
pop
cmp
(bad)
in
fdivr
fld
xor
mov
test
jle
xchg
xor
xor
div
adc
xor
xor
xor
push
pop
xor
jle
sbb
(bad)
xor
xor
xor
xor
xor
loop
popa
xor
add
add
xor
cli
xor
xor
shl
dec
xor
xor
jmp
xor
xor
ret
xor
xor
ss
xor
ss
xor
ss
sub
aad
pop
xor
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
imul
sbb
sub
sub
icebp
sub
xor
popf
sub
xor
gs
xor
xor
fnsave
cmp
lea
push
test
xor
ss
ss
aaa
lds
jb
icebp
ss
aaa
ins
aaa
mov
sub
add
aaa
fnstsw
push
cmp
cmp
jb
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
lds
xor
gs
dec
cmp
mov
loope
mov
cmp
cli
cmp
cmp
xor
cmp
cmp
cmp
cmp
add
add
cmp
lods
cmp
cmp
cmp
cmp
xor
fnstenv
mov
xor
cmp
xor
cmp
or
cmp
dec
cmp
cmp
and
call
cmp
loop
xchg
ds
cmp
inc
ds
cmp
ds
cmp
xchg
cmp
ds
ds
fidivr
sub
cmp
push
aas
lods
ds
gs
mov
jmp
aas
(bad)
add
push
xor
das
cli
das
movs
xor
bound
cmp
cs
das
out
mov
xor
pop
xor
sbb
xchg
xor
xor
xor
xor
xor
push
xor
push
xor
xor
cmp
jbe
jmp
xor
xor
xor
xor
ret
xor
xor
xor
xor
xor
add
add
xor
xor
xor
xor
mov
ds
xor
shl
xor
xor
xor
xor
cmp
xor
xor
xor
cmp
popa
cmp
sub
xor
jmp
xor
xor
xor
xor
xchg
xor
cmp
xor
xor
mov
xor
ss
push
mov
inc
mov
jbe
mov
ss
xor
ss
xor
ss
xor
ss
xor
ss
xor
ss
add
cmc
cs
xchg
cs
aaa
mov
jb
pop
das
mov
cmp
das
(bad)
aaa
stc
xor
cmp
add
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
cmp
cmp
or
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fidivr
adc
cmp
add
add
aaa
pop
cmp
mov
xor
scas
cmp
aaa
into
cmp
xor
cli
cmp
sub
mov
xor
scas
cmp
ss
cmp
(bad)
cmp
inc
es
inc
inc
cmp
inc
jbe
jmp
cmp
cmp
inc
out
cmp
inc
fidivr
aas
push
cmp
mov
and
cdq
aas
mov
pop
aas
mov
cmp
or
cmp
ds
ds
cmp
ds
cmp
inc
cmp
popa
cmp
and
cmp
cmp
add
cmp
aas
test
rcr
call
sbb
pop
xor
xor
xor
xor
xor
xor
sub
xchg
xor
cs
xor
into
xor
cs
xor
fidiv
adc
push
xor
sub
and
popf
sub
xor
sub
add
add
xor
sub
(bad)
xor
sub
xor
sub
xor
sub
xor
xor
xor
xor
xor
adc
xor
xor
xor
xor
out
imul
push
xor
xor
mov
xor
push
xor
add
xor
xor
mov
xor
xor
inc
xor
xor
jmp
ss
xor
ss
xchg
ss
xor
xor
xor
mov
xor
xor
inc
xor
xor
and
pop
xor
loope
scas
xor
xchg
xor
xor
push
xor
fidiv
xor
(bad)
xor
shl
shl
ds
pop
ss
xor
xor
sahf
xor
ss
xor
ss
xor
ss
xor
aaa
shl
aaa
mov
add
add
jbe
adc
mov
and
jle
xor
scas
aaa
adc
sahf
aaa
mov
into
aaa
add
mov
aaa
shl
fidiv
jne
cmp
inc
cmp
cmp
fnstcw
data16
xor
xchg
cmp
mov
pop
cmp
cmp
(bad)
cmp
aaa
idiv
dec
cmp
cmp
aaa
push
cmp
cmp
add
add
sar
cmp
cmp
sar
cmp
mov
xor
scas
cmp
aaa
into
cmp
cmp
cmp
cmp
cmp
aaa
push
cmp
inc
cmp
cmp
sbb
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
out
pop
inc
adc
dec
inc
add
mov
inc
je
jmp
inc
xchg
cmp
test
cmp
cmp
inc
mov
cmp
inc
or
stc
inc
xor
sub
cmp
ror
cmp
icebp
inc
pop
cmp
ror
rcl
leave
rol
stc
rol
add
hlt
cmp
shl
cdq
rcl
shl
rol
rcr
xchg
rcr
shl
popa
rcr
sub
rcr
mov
cmp
cmp
mov
add
lods
ds
add
xor
int3
ds
sar
mov
push
aas
or
je
mov
sbb
or
dec
inc
mov
or
fld
aas
leave
inc
les
leave
inc
hlt
aas
leave
inc
in
push
gs
mov
mov
xor
add
mov
mov
xor
mov
add
add
mov
xor
je
jmp
mov
xor
mov
xor
mov
xor
fdiv
adc
xor
mov
xor
mov
xor
mov
xor
mov
xor
aam
fnsave
xor
mov
xor
mov
xor
add
add
cmp
inc
mov
xor
pop
xor
mov
xor
mov
lods
xor
mov
xor
mov
xor
mov
xor
jo
jmp
mov
xor
mov
xor
mov
xor
mov
xor
mov
pusha
xor
mov
test
mov
add
xor
mov
sub
shl
dec
xor
jno
ins
xor
icebp
mov
xor
icebp
mov
xor
jno
adc
mov
xor
sbb
push
mov
je
cdq
mov
ss
mov
ss
int3
ss
mov
add
add
fdiv
adc
cld
add
sbb
mov
dec
aaa
shl
aaa
loope
nop
aaa
xor
les
or
in
cdq
mov
add
leave
mov
and
pop
mov
inc
cmp
je
dec
mov
mov
movs
mov
sar
test
mov
or
xor
sub
sar
int
cwde
cmp
mov
imul
clc
cmp
mov
cmp
mov
sbb
mov
mov
ins
cmp
mov
cmp
mov
add
and
lods
cmp
mov
int3
cmp
mov
or
mov
mov
inc
cmp
mov
cmp
mov
cmp
mov
aam
or
adc
inc
sbb
icebp
inc
dec
cmp
inc
cmp
aad
mov
inc
movs
cmp
inc
aam
dec
inc
les
inc
hlt
cmp
inc
in
fnstcw
add
or
cmp
or
cmp
sbb
test
or
aam
leave
mov
in
pop
mov
sub
and
jo
fnstsw
add
cmp
mov
les
stc
mov
in
sbb
add
mov
mov
push
aas
mov
mov
fs
pop
mov
test
jns
mov
sub
aam
stc
mov
hlt
aas
jmp
outs
fdivr
jmp
add
add
scas
add
jns
xor
cdq
scas
and
sbb
inc
xor
scas
je
fldcw
xchg
xor
mov
xor
mov
xor
movs
xor
aam
dec
mov
xor
mov
xor
in
sbb
add
stc
mov
xor
mov
xor
mov
xor
add
add
mov
xor
xchg
xor
test
cmp
movs
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
xor
cdq
mov
xor
mov
xor
inc
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
les
add
add
add
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
pushf
xor
mov
xor
mov
xor
mov
xor
test
sub
mov
test
cmp
inc
test
pop
xor
test
xor
test
lods
xor
test
xor
mov
xor
mov
xor
leave
test
xor
leave
test
xor
leave
test
xor
mov
mov
mov
aam
dec
test
hlt
xor
fnstenv
adc
leave
mov
ss
mov
ss
mov
ss
mov
ss
mov
mov
fs
or
ss
lock
ss
aaa
imul
inc
aaa
xchg
mov
aaa
cmp
movs
aaa
pop
mov
aaa
cmp
add
stc
mov
aaa
sub
adc
stc
mov
xor
sub
cmp
mov
cmp
mov
xchg
cmp
mov
mov
sub
aam
mov
mov
in
cdq
mov
add
jns
xor
sub
add
add
mov
je
jmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
add
stc
mov
and
cdq
mov
inc
cmp
mov
xchg
cmp
mov
mov
sub
cmp
mov
sub
popa
mov
dec
cmp
mov
ins
cmp
mov
mov
add
lods
cmp
mov
int3
cmp
mov
cmp
fdivr
and
cld
cmp
lods
sub
loope
sbb
mov
add
mov
ins
cmp
lods
pop
cmp
scas
mov
scas
jl
xor
pushf
cmp
lods
int3
cmp
lods
mov
cmp
lods
fdivr
mov
cld
cmp
mov
sbb
and
cmp
push
mov
pop
cmp
add
lods
cmp
and
int3
cmp
adc
fdivr
add
sub
loope
sbb
mov
stos
cmp
shr
pop
ds
stos
mov
sub
pushf
ds
int3
ds
mov
ds
fdivr
mov
lods
cld
ds
sub
popa
lods
sbb
and
cmp
push
lods
ins
aas
loope
pop
aas
loope
mov
add
lods
aas
and
int3
aas
popa
lods
mov
aas
popa
lods
sbb
and
sbb
sbb
add
or
and
cdq
lods
push
xor
lods
inc
xor
add
add
lods
je
leave
scas
xor
xchg
xor
test
dec
scas
mov
dec
scas
les
add
or
jno
cld
xor
mov
xor
dec
xor
mov
xor
scas
ins
xor
pop
xor
scas
mov
icebp
scas
jl
xchg
scas
lods
xor
lods
pushf
xor
lods
int3
xor
mov
xor
lods
fdiv
adc
cld
xor
lods
sub
and
dec
xor
lods
ins
xor
stos
pop
xor
mov
jno
jl
xchg
stos
lods
xor
lods
pushf
xor
stos
mov
xor
lods
fdiv
xchg
stos
or
jno
cld
xor
stos
sbb
push
stos
dec
xor
stos
cmp
icebp
stos
ins
xor
pop
xor
stos
mov
icebp
stos
jl
xchg
stos
lods
xor
stos
pushf
xor
stos
int3
xor
mov
xor
stos
fdiv
adc
cld
xor
stos
sub
and
dec
xor
mov
ins
xor
mov
mov
stos
jl
xchg
stos
lods
xor
stos
pushf
xor
stos
int3
xor
mov
in
xor
mov
or
jno
cld
xor
stos
sub
mov
stos
dec
xor
icebp
test
pop
xor
icebp
test
lods
xor
adc
mov
xor
adc
cld
xor
and
dec
ss
cmp
icebp
stos
ins
shr
ss
jl
xchg
stos
lods
and
ss
stos
mov
add
aaa
jno
cld
ss
test
sbb
push
test
cmp
icebp
test
pop
aaa
shr
jl
xchg
stos
lods
aaa
and
int3
aaa
jno
mov
aaa
add
or
icebp
fwait
cld
aaa
adc
cmp
popf
dec
cmp
fwait
ins
cmp
popf
pop
cmp
mov
jno
jl
xchg
pushf
lods
cmp
pushf
pushf
cmp
call
add
add
xchg
pushf
or
jno
cld
cmp
pushf
sbb
push
pushf
dec
cmp
pushf
cmp
icebp
fwait
ins
cmp
pop
cmp
fwait
mov
icebp
fwait
jl
xchg
fwait
lods
cmp
popf
pushf
cmp
popf
int3
cmp
mov
cmp
popf
fdivr
adc
cld
cmp
cdq
sub
and
dec
cmp
cwde
ins
cmp
fwait
pop
cmp
mov
jno
jl
xchg
fwait
lods
cmp
pushf
pushf
cmp
fwait
mov
cmp
pushf
fdivr
xchg
fwait
or
jno
cld
cmp
fwait
sbb
push
fwait
dec
cmp
fwait
cmp
icebp
fwait
pusha
cmp
call
mov
call
pop
sahf
adc
cmp
xor
shl
cmp
mov
cmp
sahf
lock
sahf
adc
cmc
mov
cmp
lods
mov
cmp
jge
fdivr
push
mov
ds
fwait
push
and
call
ds
pushf
and
xor
pushf
mov
in
fwait
lods
aas
adc
add
fdivrp
icebp
test
add
xor
or
mov
xor
mov
xor
movs
xor
mov
xor
mov
xor
mov
xor
mov
xor
les
and
mov
xor
mov
xor
scas
lods
xor
add
add
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
test
in
xor
mov
xor
and
mov
xor
popa
mov
xor
shl
cmp
int
xchg
ss
mov
mov
mov
ss
mov
aaa
sub
push
aaa
mov
mov
aaa
fnsave
aaa
pop
mov
aaa
fnstenv
les
stc
mov
aaa
int
add
mov
xchg
xchg
cmp
xchg
lods
cmp
cwde
loopne
push
cwde
add
lea
inc
cmp
popf
movs
cmp
popf
call
cmp
popf
xor
leave
fwait
je
cdq
fwait
mov
cmp
pushf
enter
loopne
jmp
call
xchg
call
in
adc
jmp
cdq
pop
cmp
mov
fdivr
cdq
int3
cmp
call
xor
cdq
mov
loope
int3
cmp
imul
je
int
test
stc
xchg
test
or
cld
ds
sbb
rcl
mov
adc
fdivrp
imul
add
lods
and
test
lods
nop
xor
scas
aam
push
scas
sbb
shl
xor
jo
adc
lock
lods
in
jns
add
mov
scas
inc
xor
scas
je
dec
scas
test
stc
scas
mov
test
scas
enter
sbb
jns
xor
test
scas
pop
xor
scas
int3
xor
scas
in
adc
pop
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
xchg
or
add
dec
xor
xor
cwde
sbb
xchg
aam
call
add
add
mov
xor
mov
xor
lods
jl
std
lods
mov
movs
lods
clc
xor
lods
cmp
cmp
lods
ins
xor
scas
fs
lods
pop
xor
lods
mov
push
lods
cmp
int
jl
xchg
mov
mov
mov
xor
in
ss
mov
add
add
shl
cld
adc
sbb
adc
cmp
inc
mov
mov
add
mov
fstp
int3
cmp
mov
mov
cmp
dec
popf
in
push
popf
fdivr
xor
add
add
lahf
cld
cmp
adc
popf
and
aad
sbb
int
push
ds
dec
lods
lahf
inc
ds
cmp
int
je
aad
ins
ds
nop
ds
mov
lods
ds
lahf
movs
ds
pushf
ds
sahf
hlt
aas
fstp
(bad)
adc
mov
add
add
jns
add
jns
xor
sub
push
xor
mov
xor
mov
xor
lods
fs
mov
xor
mov
xor
mov
xor
cld
xor
mov
xor
gs
xor
icebp
xchg
xor
xchg
enter
or
add
xchg
dec
aaa
stc
xchg
jo
loope
xchg
aaa
xor
xchg
test
and
cdq
sbb
popa
fwait
sbb
movs
sbb
add
sbb
add
sbb
push
sbb
add
sbb
push
sbb
add
sbb
add
add
add
add
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
add
add
jg
add
jg
add
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
add
add
test
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
add
add
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
add
add
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
add
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
add
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
add
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
push
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
add
add
sbb
adc
sbb
and
sbb
adc
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
add
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
add
add
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
push
sbb
add
add
add
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
add
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
add
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
add
add
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
add
add
sbb
and
sbb
adc
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
sbb
add
sbb
sbb
add
sbb
and
sbb
add
sbb
add
sbb
add
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
sbb
gs
add
add
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
and
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
add
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
sbb
and
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
add
add
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
push
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
add
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
add
add
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
add
add
jg
add
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
add
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
add
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
add
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
add
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
add
add
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
add
sbb
add
sbb
add
sbb
sbb
add
sbb
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
sbb
sbb
push
sbb
push
sbb
sbb
sbb
push
sbb
push
sbb
and
sbb
adc
sbb
and
sbb
adc
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
jg
add
jg
add
jg
add
jg
add
jg
add
sbb
push
jg
add
sbb
gs
add
sbb
push
jg
add
sbb
and
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
sbb
gs
add
sbb
push
jle
add
sbb
gs
add
sbb
push
jle
add
jle
add
jle
add
jle
add
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
sbb
test
add
sbb
push
test
add
sbb
test
add
sbb
push
test
add
test
add
test
add
test
add
test
add
sbb
in
sbb
aad
sbb
aad
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
movs
sbb
movs
sbb
xchg
add
add
sbb
xchg
sbb
movs
sbb
movs
sbb
xchg
sbb
xchg
sbb
mov
int3
int3
js
int3
int3
push
sbb
mov
dec
sbb
js
int3
int3
jmp
jb
inc
adc
rol
and
rol
push
rol
xor
inc
jmp
and
inc
sbb
inc
fsub
rol
xor
inc
fbld
inc
fdiv
rol
xor
inc
fiadd
push
rol
enter
adc
aam
inc
les
mov
dec
clc
aaa
push
loopne
(bad)
gs
call
or
clc
inc
lock
inc
loopne
hlt
lea
add
add
add
mov
cli
inc
hlt
aas
ret
pop
mov
lea
cli
dec
hlt
(bad)
cmp
jae
sbb
lea
mov
or
jmp
aad
cmp
arpl
aaa
push
in
jns
or
mov
inc
fmul
les
xchg
rol
add
sar
lock
fldenv
ret
cmp
int3
or
in
sub
inc
je
rol
sbb
rol
rol
rol
sbb
inc
add
rol
das
rol
and
inc
sbb
sub
inc
fild
inc
fsubr
rol
inc
rol
adc
add
add
inc
in
rol
das
rol
sbb
inc
test
rol
sbb
rol
outs
rol
pop
rol
and
rol
sbb
outs
add
add
enter
sbb
pop
pop
call
aas
lds
adc
(bad)
or
pop
clc
dec
shr
cmp
add
or
and
or
push
(bad)
clc
xchg
cmp
sbb
or
dec
add
sub
xchg
push
lea
not
jmp
push
sar
fadd
mov
test
add
inc
cld
aas
rcl
or
sub
fsubr
(bad)
adc
dec
or
lea
not
dec
dec
cld
inc
push
adc
mov
xor
cmp
pop
call
mov
cdq
add
adc
push
movs
repnz
mov
aam
aaa
cmp
mov
div
pop
jg
int3
int3
js
int3
int3
jmp
(bad)
rol
push
rol
sbb
inc
push
das
rol
xor
rol
and
inc
push
sbb
rol
sbb
rol
sbb
inc
nop
inc
or
adc
add
inc
hlt
xor
jne
pop
pop
call
aas
lds
jns
lea
push
lock
cmp
mov
dec
call
push
test
loopne
cld
sbb
xor
outs
add
loopne
pop
inc
aad
js
int3
int3
or
in
sub
inc
pusha
push
rol
sbb
inc
push
xor
inc
sub
rol
das
rol
and
inc
cs
rol
inc
rol
xor
inc
adc
rol
pop
rol
sub
mov
aas
lock
jne
sbb
call
aas
mov
lea
push
lock
test
cmp
add
add
in
in
cld
inc
call
xor
add
add
or
pop
jg
int3
int3
xor
int3
jmp
ds
and
(bad)
sub
sbb
dec
or
cld
inc
or
push
cld
mov
xchg
les
add
add
cdq
push
(bad)
(bad)
push
cld
aaa
sahf
cmp
imul
sbb
mov
cli
dec
or
clc
push
or
ret
xor
int3
jmp
jp
inc
(bad)
clc
push
clc
cmp
jmp
cli
dec
cld
aas
rcl
stc
movs
lea
imul
je
add
add
cld
ss
test
mov
int3
clc
mov
int3
imul
lea
clc
push
cld
aaa
xor
rol
sbb
mov
xchg
ret
inc
clc
inc
cmp
cmp
xchg
adc
xor
add
test
inc
clc
inc
adc
loope
int3
int3
mov
int3
int3
js
int3
int3
or
in
push
cmp
mov
cli
push
cld
aas
rcl
and
lea
add
out
push
mov
jbe
adc
ret
fs
xor
sbb
mov
jb
mov
inc
aad
or
int3
int3
clc
mov
int3
imul
lea
add
mov
sbb
push
mov
cwde
(bad)
push
mov
push
or
ret
stc
mov
inc
push
cwde
jnp
mov
dec
fdivr
jmp
aas
fmul
rol
cli
mov
fild
xchg
outs
lea
stc
dec
lock
mov
(bad)
push
hlt
clc
push
or
aaa
or
mov
inc
clc
inc
jle
add
lea
clc
inc
or
xchg
lea
cli
adc
cmps
fimul
or
jp
imul
aad
jmp
pop
lea
cli
push
in
add
add
hlt
mov
sahf
adc
call
xor
sbb
mov
es
add
inc
lock
dec
clc
mov
xchg
js
or
add
outs
add
clc
mov
dec
lea
clc
nop
dec
mov
stc
push
cld
aaa
dec
clc
mov
jbe
inc
int3
clc
push
hlt
aaa
xor
fs
inc
dec
in
mov
add
aaa
xor
idiv
jae
pop
push
aaa
cmp
adc
mov
(bad)
in
pop
aaa
cmp
inc
or
ds
add
inc
or
and
sbb
mov
lea
stc
pop
mov
xchg
rol
push
hlt
xlat
pop
mov
(bad)
xlat
adc
xor
fcos
aaa
popf
cmp
mov
int3
int3
js
int3
int3
or
in
sub
sbb
retf
xor
not
inc
xor
mov
lods
lea
clc
dec
clc
aaa
dec
loopne
icebp
movs
mov
test
add
add
(bad)
mov
test
fsubr
cmc
sbb
aaa
xor
adc
fsubr
inc
sbb
mov
lea
clc
push
call
popa
jns
je
mov
sbb
xlat
push
lea
jno
inc
enter
sub
dec
cwde
xchg
mov
inc
adc
rol
sbb
mov
movs
pop
add
push
lock
dec
in
movntps
cli
out
or
mov
add
dec
leave
pop
lea
xchg
mov
gs
lea
xchg
mov
inc
mov
inc
sbb
loopne
jo
lea
nop
mov
inc
imul
loopne
jge
in
sbb
aaa
loopne
mov
dec
loopne
stc
popf
arpl
shr
movs
jle
call
int
int3
jmp
mov
mov
mov
add
enter
or
int3
js
int3
int3
jmp
imul
add
add
dec
clc
mov
or
inc
lock
mov
mov
pop
or
pop
mov
xor
sbb
push
or
or
mov
ret
aaa
xor
lea
or
movs
neg
add
outs
add
adc
stc
mov
add
lea
or
in
or
add
add
sbb
add
lea
xor
inc
rol
push
inc
xor
dec
mov
lea
xor
cmp
add
add
add
(bad)
in
or
inc
xor
stc
mov
and
inc
jo
int3
sbb
push
in
xor
aaa
inc
adc
mov
mov
call
out
lea
or
in
test
xchg
(bad)
ror
call
aaa
inc
or
inc
dec
adc
ins
gs
call
aas
lds
or
xor
lods
(bad)
push
clc
mov
xchg
add
loopne
or
pop
inc
movs
lea
mov
xchg
xchg
jns
or
add
call
je
les
mov
add
add
call
loope
sbb
push
sub
push
and
sbb
(bad)
jns
cmp
mov
or
cmp
add
inc
inc
mov
inc
or
dec
lock
xor
mov
push
push
or
or
scas
loope
clc
or
in
push
cmp
add
add
push
lock
dec
or
add
inc
mov
mov
lock
aam
push
aad
aaa
ss
push
dec
stos
push
call
lea
or
in
or
test
xchg
les
adc
fmul
inc
in
inc
lock
mov
add
push
hlt
add
lea
pop
inc
loopne
repnz
push
rol
push
in
or
xor
inc
inc
in
xchg
stos
fdivrp
mov
dec
or
add
push
or
aas
sbb
add
mov
call
inc
dec
call
add
add
aaa
xor
(bad)
push
xor
push
call
in
loopne
aas
jmp
aas
sbb
mov
mov
mov
(bad)
pusha
adc
sbb
cmp
dec
and
mov
fs
hlt
gs
loope
sbb
inc
je
sbb
mov
aas
xor
mov
mov
inc
xor
popf
inc
mov
mov
lea
push
push
call
js
(bad)
sub
sbb
jno
or
or
or
inc
inc
adc
mov
add
add
xchg
ret
inc
lock
fcos
ret
add
xor
add
push
loopne
inc
sbb
add
inc
or
inc
xor
std
dec
mov
mov
(bad)
or
xchg
adc
add
add
mov
int3
int3
jmp
aas
fadd
mov
or
add
add
ret
adc
lea
test
inc
test
or
or
cld
cmp
or
dec
les
shl
cmp
or
adc
aaa
inc
fadd
js
inc
cld
ret
iret
push
test
jmp
or
cld
cmps
adc
js
int3
int3
jmp
popa
lea
or
inc
clc
mov
or
ds
mov
dec
mov
dec
clc
inc
cs
jle
adc
call
ins
popa
adc
lock
ds
je
adc
cld
jnp
in
mov
or
les
mov
lea
hlt
(bad)
dec
add
or
stos
jbe
imul
inc
enter
dec
or
add
mov
rcr
or
cld
or
mov
xchg
in
inc
cmp
add
jns
lea
test
add
sub
fmul
add
int3
int3
clc
(bad)
imul
lea
or
inc
hlt
mov
sahf
adc
call
xor
sbb
mov
adc
add
std
(bad)
add
inc
lock
sub
add
add
mov
mov
or
sub
xchg
test
inc
les
xchg
dec
mov
pop
push
cld
aaa
sub
cmp
cmp
mov
adc
hlt
inc
sub
adc
in
mov
dec
adc
xor
inc
push
jle
inc
test
lea
or
jmp
push
hlt
aaa
mov
hlt
inc
aas
add
aaa
aas
ror
or
cmp
push
aaa
das
mov
inc
sub
lea
or
(bad)
out
test
mov
xchg
rol
push
hlt
pop
lock
add
adc
inc
clc
jmp
aaa
lahf
cmp
or
int3
int3
add
int3
int3
clc
(bad)
imul
rol
out
add
sbb
cmp
push
jp
out
cmp
je
ds
push
cmp
jb
ds
cmp
arpl
jmp
jae
ds
cmp
inc
jp
in
add
in
cli
cmp
loop
cli
cmp
loopne
cli
cmp
fiadd
aaa
fmul
cwde
push
add
xchg
test
jns
dec
call
aas
mov
sbb
inc
test
(bad)
mov
inc
or
xchg
adc
jmp
add
call
in
test
mov
adc
jne
dec
fsubr
int
push
loopne
or
fnop
inc
cmp
(bad)
in
mov
int3
int3
add
int3
int3
clc
(bad)
mov
in
sub
rol
in
add
sbb
inc
cmp
sbb
mov
das
lock
rcl
xchg
sar
fsubr
or
dec
or
stos
retf
xchg
xchg
(bad)
enter
aas
mov
fdivr
cmp
add
imul
inc
cmp
push
jno
jne
xchg
arpl
pop
mov
inc
push
push
push
clc
aaa
pushf
cmp
mov
int3
int3
or
int3
int3
add
int3
int3
clc
(bad)
int3
int3
mov
in
sub
rol
in
add
sbb
aas
adc
add
lea
std
pusha
or
lea
or
test
or
std
push
clc
aaa
cmps
cmp
mov
mov
int3
int3
js
int3
int3
jmp
jle
inc
push
add
add
sbb
inc
inc
fmul
mov
lea
dec
xor
xchg
sbb
push
popf
or
jne
nop
enter
lea
std
repz
inc
int3
int3
clc
mov
in
sub
rol
fidivr
cld
adc
fmul
loopne
sbb
in
lock
xchg
nop
fld
mov
mov
add
call
sar
cld
aas
shl
push
mov
aad
daa
ja
adc
inc
in
test
nop
arpl
adc
push
clc
aaa
cmps
cmp
enter
add
int3
int3
mov
in
sub
enter
sbb
add
(bad)
stos
xor
or
cmp
mov
inc
adc
jnp
stos
jo
(bad)
(bad)
arpl
lock
dec
(bad)
fld
add
lock
pop
(bad)
(bad)
cmp
xchg
js
(bad)
fld
mov
sbb
inc
cmc
je
adc
(bad)
add
lock
out
mov
cmp
xchg
mov
mov
mov
inc
add
in
or
std
je
mov
mov
push
hlt
nop
sti
mov
add
add
(bad)
sar
lock
xor
mov
(bad)
imul
add
fcos
in
cli
mov
inc
xor
push
inc
hlt
jp
sub
(bad)
sbb
fst
cli
mov
mov
cmovnp
add
repz
xchg
push
add
(bad)
fild
xchg
sti
retf
lea
inc
dec
mov
(bad)
(bad)
stos
call
lods
inc
sbb
mov
mov
(bad)
(bad)
ja
fld1
mov
and
xchg
pusha
push
(bad)
(bad)
inc
xor
pop
sub
add
add
test
push
inc
sbb
(bad)
or
lea
mov
xchg
les
mov
push
inc
imul
mov
cld
mov
(bad)
aas
(bad)
adc
mov
mov
or
mov
rcl
xchg
xor
fld
push
sub
imul
pop
adc
fcos
stc
ret
xchg
xor
mov
outs
add
and
xor
jmp
push
rol
mov
mov
gs
add
push
(bad)
cmp
(bad)
jmp
rol
push
mov
add
add
add
sbb
ret
mov
inc
dec
(bad)
mov
rol
adc
xchg
inc
xchg
mov
gs
pop
sti
mov
(bad)
jnp
rol
add
xchg
cmc
mov
add
mov
inc
rol
mov
mov
fs
add
cli
sbb
arpl
cmp
rol
popa
ret
xchg
std
test
cli
jecxz
outs
mov
call
sbb
fcos
pop
ret
xchg
add
add
sti
stos
mov
cmp
call
xchg
jmp
les
push
add
jae
sbb
inc
jge
inc
add
add
rol
into
ret
xchg
push
inc
mov
gs
or
cmp
(bad)
sub
fcos
movs
ret
xchg
adc
mov
bound
add
sti
add
(bad)
repz
rol
outs
ret
xchg
push
xlat
mov
jns
add
sti
retf
mov
(bad)
cmp
(bad)
mov
mov
add
add
jmp
rcl
cmp
cli
xchg
mov
inc
data16
sbb
test
mov
(bad)
fdivr
fnstenv
(bad)
stc
cli
pop
mov
(bad)
(bad)
dec
pop
rol
test
fldenv
push
mov
call
push
rol
nop
mov
add
test
push
(bad)
cmp
(bad)
fild
fcos
cmp
gs
sti
mov
mov
jmp
(bad)
fcos
and
xchg
dec
xchg
dec
sti
jnp
arpl
cmp
test
mov
jmp
mov
(bad)
inc
add
add
inc
mov
inc
cmp
push
pop
rol
cwde
mov
fldcw
inc
sti
or
(bad)
sti
das
rol
mov
xor
cmp
pop
aas
(bad)
pusha
sti
mov
sbb
call
ret
mov
fcos
cmps
jbe
xchg
sub
adc
add
push
aad
xor
xchg
(bad)
mov
sbb
(bad)
cmp
lock
daa
xchg
add
pop
cmc
mov
pop
xchg
push
inc
in
call
jmp
pop
hlt
xchg
hlt
test
cli
jecxz
inc
push
pop
hlt
or
fst
std
call
dec
fimul
sbb
in
call
push
(bad)
inc
ja
fst
hlt
call
dec
fimul
add
or
sub
xchg
push
and
jmp
add
add
or
les
sbb
sbb
mov
adc
test
cli
xchg
lock
fst
hlt
test
rol
(bad)
ret
xor
jns
test
cmp
nop
sar
cmp
(bad)
fwait
xor
xchg
mov
xchg
xchg
ja
fst
imul
imul
(bad)
aas
mov
push
add
test
sbb
lea
outs
clc
xchg
sub
test
push
adc
loope
add
aad
xor
or
aaa
das
fcom
(bad)
call
mov
out
(bad)
ret
xor
dec
call
enter
add
fcos
in
clc
dec
(bad)
in
clc
xor
test
push
inc
inc
xor
call
lock
fld
mov
and
lea
xor
jmp
or
test
add
add
push
aaa
(bad)
sub
add
(bad)
aas
mov
push
add
add
popf
inc
mov
fdivrp
ret
xor
dec
sbb
xchg
pop
loop
fwait
call
adc
rcl
inc
mov
sbb
inc
xor
call
mov
jp
inc
add
add
lea
in
cdq
sbb
inc
adc
jnp
adc
dec
test
aaa
in
adc
add
(bad)
repz
adc
sbb
clc
ins
lahf
adc
cmp
add
(bad)
retf
xor
test
mov
cmps
add
add
fst
in
sub
fwait
add
mov
(bad)
aas
mov
push
add
or
mov
fdivrp
pop
das
lea
in
test
and
jecxz
xor
aam
xchg
xor
adc
pop
aas
(bad)
call
cmovo
push
add
fst
xor
aam
inc
cmp
lea
(bad)
ret
xor
dec
(bad)
hlt
lea
fdivrp
fwait
aam
test
inc
test
(bad)
lock
(bad)
jae
lea
push
add
cmp
lea
add
fcos
lea
fmul
and
lea
ins
add
(bad)
aam
cmp
sbb
dec
punpckhbw
repz
scas
(bad)
jecxz
lock
clc
lea
(bad)
mov
sbb
add
or
sub
sub
inc
add
add
jl
dec
fst
push
in
arpl
adc
adc
inc
mov
sbb
aaa
(bad)
hlt
push
inc
push
call
mov
(bad)
and
lea
ins
imul
push
add
dec
or
lock
jg
add
add
push
inc
push
test
retf
jg
mov
lods
(bad)
mov
jg
add
sbb
inc
(bad)
call
ror
dec
or
push
aaa
or
inc
call
aas
inc
add
lods
xchg
mov
jg
mov
dec
mov
jb
inc
add
add
ror
jmp
xchg
sub
jg
push
adc
in
sti
add
adc
inc
adc
mov
jle
push
inc
aad
push
inc
add
dec
mov
mov
(bad)
mov
jp
dec
push
repz
cmp
test
jp
(bad)
in
or
or
jle
add
add
push
aaa
add
sti
arpl
mov
(bad)
push
shl
ror
cmp
mov
(bad)
sbb
dec
fstp
jmp
ror
lea
fcos
ins
or
push
aaa
add
sti
sti
jge
call
aas
inc
add
pop
xchg
mov
jge
mov
inc
mov
jno
inc
add
add
js
dec
jge
push
movs
in
call
xchg
adc
adc
inc
iret
fcom
pop
call
mov
(bad)
push
ror
(bad)
in
imul
(bad)
enter
add
jmp
push
les
lock
jge
add
add
push
aaa
pop
adc
sti
jl
mov
scas
(bad)
jmp
lock
add
sbb
ret
ror
(bad)
cmp
add
aas
inc
or
push
stc
(bad)
mov
test
jnp
lea
xor
add
call
mov
push
jl
pop
in
inc
ret
aaa
cmp
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
sbb
mov
sbb
add
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
mov
lea
push
ret
int
push
call
mov
push
call
mov
imul
mov
mov
add
mov
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
push
call
mov
mov
shl
mov
mov
add
mov
call
mov
sub
mov
mov
mov
shl
mov
mov
imul
mov
mov
add
mov
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
call
mov
cmp
jbe
jmp
mov
add
mov
call
mov
test
jne
mov
push
call
mov
push
call
mov
push
call
mov
shl
mov
mov
push
call
mov
sub
mov
mov
push
call
mov
push
call
mov
add
mov
push
call
mov
sub
mov
mov
add
mov
mov
sub
mov
mov
push
call
mov
imul
mov
mov
push
call
mov
add
mov
mov
sub
mov
mov
add
mov
mov
mov
shr
mov
mov
push
call
mov
push
call
mov
push
call
mov
shl
mov
mov
push
call
mov
imul
mov
mov
sub
mov
mov
shr
mov
mov
push
call
mov
mov
shr
mov
mov
push
call
mov
push
call
mov
mov
shl
mov
mov
push
call
mov
push
call
mov
sub
mov
mov
mov
shr
mov
push
mov
push
call
test
je
int
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
sub
push
call
mov
cmp
je
cmp
jbe
call
push
mov
push
mov
sub
push
call
mov
cmp
jne
jmp
mov
add
mov
mov
test
jne
mov
xchg
shr
xchg
push
ret
pop
push
ret
xor
push
ret
mov
push
ret
pop
lea
jmp
xchg
push
ret
mov
jmp
mov
shl
push
ret
xor
lea
jmp
mov
jmp
int
int
call
mov
push
call
add
mov
mov
mov
mov
mov
push
push
call
push
call
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
cmp
jb
jmp
push
push
mov
push
push
push
call
add
mov
mov
mov
add
mov
lea
mov
mov
sub
mov
mov
add
mov
mov
sub
mov
cmp
jne
push
push
call
add
mov
mov
mov
mov
push
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
ret
sub
push
ret
pop
jmp
add
mov
push
ret
push
mov
mov
mov
pop
mov
lea
push
mov
push
mov
xor
lea
dec
add
push
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
mov
mov
mov
jmp
mov
push
ret
mov
push
ret
pop
jmp
add
shl
nop
mov
cmp
jae
mov
jmp
jmp
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
jmp
xchg
jmp
sub
lea
mov
push
ret
pop
push
ret
add
jmp
pop
shl
push
ret
add
xchg
jmp
sub
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
add
mov
mov
add
mov
mov
mov
jmp
push
shr
jmp
sub
shl
mov
shl
mov
mov
mov
mov
mov
test
je
mov
nop
push
ret
xchg
shl
push
ret
pop
jmp
push
shl
mov
cmp
jb
jmp
mov
mov
mov
add
mov
add
mov
mov
mov
add
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
ret
mov
lea
shl
mov
mov
sub
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
lea
mov
mov
push
mov
push
call
add
mov
add
mov
mov
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
lea
push
ret
add
shl
shr
push
ret
sub
push
ret
xchg
push
ret
mov
jmp
xor
push
push
push
push
push
pop
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
ins
jne
imul
ins
outs
jae
and
jne
jo
jo
gs
jne
imul
bound
outs
and
jb
popa
addr16
bound
gs
bound
jne
je
gs
bound
jo
outs
gs
gs
popa
ja
ja
jb
gs
and
gs
jae
gs
je
popa
outs
jae
imul
outs
ins
imul
outs
popa
bound
imul
jb
je
imul
imul
arpl
jne
arpl
jae
imul
and
outs
imul
outs
outs
ins
imul
popa
je
jae
outs
outs
je
jb
imul
jae
je
imul
bound
outs
arpl
jae
push
ins
outs
addr16
jo
jb
outs
gs
push
outs
addr16
jae
gs
arpl
je
imul
je
arpl
popa
je
and
imul
popaw
outs
je
arpl
and
arpl
and
ins
jo
bound
imul
imul
arpl
outs
outs
imul
popa
popa
jae
jne
jae
jbe
jb
and
jns
jne
outs
gs
gs
jbe
arpl
imul
jae
popa
imul
push
jne
and
je
jae
imul
gs
imul
and
gs
jae
outs
je
jae
and
imul
jae
imul
jb
popa
je
jbe
je
gs
jo
popa
jns
and
jne
ins
imul
bound
and
gs
ins
imul
and
fs
jp
and
arpl
ins
jns
imul
outs
imul
gs
imul
outs
outs
and
outs
ins
outs
outs
addr16
je
outs
outs
and
and
js
gs
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
mov
shl
jmp
mov
shr
push
ret
xor
push
ret
mov
push
ret
lea
xchg
shl
mov
nop
shl
xchg
mov
push
ret
lea
nop
push
ret
sub
mov
mov
add
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
mov
mov
mov
jmp
xor
push
ret
xor
lea
mov
mov
mov
sub
mov
mov
add
mov
mov
add
mov
xor
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
push
ret
pop
shr
shl
push
ret
add
jmp
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
test
je
push
mov
push
call
test
jne
xor
jmp
push
mov
push
call
test
je
xor
jmp
lea
push
lea
push
lea
push
push
push
mov
push
call
test
je
int
jmp
movzx
cmp
jne
push
ret
push
ret
push
ret
movzx
cmp
je
movzx
cmp
jne
mov
lea
mov
sub
add
movzx
cmp
je
add
add
add
add
add
jmp
jmp
call
int
jmp
jmp
mov
shl
push
ret
int
shl
shl
push
ret
pop
lea
shr
push
ret
mov
jmp
mov
jmp
xor
shl
jmp
sub
shl
jmp
xchg
shr
mov
jmp
add
push
ret
sub
shr
jmp
lea
shl
jmp
pop
shl
jmp
int
push
ret
pop
jmp
sub
jmp
push
jmp
mov
shl
jmp
xchg
push
ret
xchg
lea
push
ret
push
ret
push
ret
mov
add
mov
cmp
sbb
neg
mov
mov
mov
add
mov
mov
sub
mov
mov
cmp
sbb
neg
mov
cmp
je
cmp
je
mov
jmp
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
